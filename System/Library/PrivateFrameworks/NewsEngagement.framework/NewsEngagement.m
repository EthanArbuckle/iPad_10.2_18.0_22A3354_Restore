ValueMetadata *type metadata accessor for EngagementUIPlacement()
{
  return &type metadata for EngagementUIPlacement;
}

_BYTE *__swift_memcpy1_1(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

ValueMetadata *type metadata accessor for EngagementUpsellPlacement()
{
  return &type metadata for EngagementUpsellPlacement;
}

uint64_t sub_1BA1B0C80@<X0>(void *a1@<X8>)
{
  uint64_t v1;

  return sub_1BA1B4FD0(*(_QWORD *)(v1 + 16), *(unsigned __int8 *)(v1 + 24), a1);
}

uint64_t getEnumTagSinglePayload for EngagementUpsellPlacement(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;
  BOOL v5;
  int v6;

  if (!a2)
    return 0;
  if (a2 > 0x7FFFFFFD && *(_BYTE *)(a1 + 2200))
    return (*(_DWORD *)a1 + 2147483646);
  v3 = *(_QWORD *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  v5 = __OFSUB__(v4, 1);
  v6 = v4 - 1;
  if (v6 < 0 != v5)
    v6 = -1;
  return (v6 + 1);
}

uint64_t getEnumTagSinglePayload for EngagementInlineBannerState(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t sub_1BA1B0D38(uint64_t a1, uint64_t a2)
{
  initializeWithTake for EngagementInlineViewManager.Observation(a2, a1);
  return a2;
}

uint64_t initializeWithTake for EngagementInlineViewManager.Observation(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = swift_unknownObjectWeakTakeInit();
  *(_QWORD *)(result + 8) = *(_QWORD *)(a2 + 8);
  return result;
}

void sub_1BA1B0D9C(uint64_t a1)
{
  EngagementEventHandler.fetchRequests(for:)(a1);
}

uint64_t sub_1BA1B0DBC(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t result;
  unint64_t v18;
  char v19;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v10 = sub_1BA1B0EC8(a2);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
        return sub_1BA1D6958(a1, v16[7] + 16 * v10);
      return sub_1BA1C28A4(v10, a2, a1, v16);
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_1BA1F9694();
      goto LABEL_7;
    }
    sub_1BA1B0FEC(v13, a3 & 1);
    v18 = sub_1BA1B0EC8(a2);
    if ((v14 & 1) == (v19 & 1))
    {
      v10 = v18;
      v16 = *v4;
      if ((v14 & 1) != 0)
        return sub_1BA1D6958(a1, v16[7] + 16 * v10);
      return sub_1BA1C28A4(v10, a2, a1, v16);
    }
  }
  result = sub_1BA2029AC();
  __break(1u);
  return result;
}

unint64_t sub_1BA1B0EC8(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1BA2029F4();
  return sub_1BA1B0EF8(a1, v2);
}

unint64_t sub_1BA1B0EF8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(_QWORD *)(v7 + 8 * result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(_QWORD *)(v7 + 8 * result) == a1)
          break;
      }
    }
  }
  return result;
}

uint64_t sub_1BA1B0F94(_QWORD *a1)
{
  if (*a1 != -1)
    swift_once();
  return swift_retain();
}

uint64_t type metadata accessor for EngagementUpsellEventProvider()
{
  return objc_opt_self();
}

uint64_t sub_1BA1B0FEC(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  _BYTE v32[16];

  v3 = v2;
  v5 = *v2;
  sub_1BA1C2858(0, &qword_1ED5AF240);
  result = sub_1BA202838();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v31 = v3;
    v8 = 0;
    v9 = (_QWORD *)(v5 + 64);
    v10 = 1 << *(_BYTE *)(v5 + 32);
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v5 + 64);
    v13 = (unint64_t)(v10 + 63) >> 6;
    v14 = result + 64;
    while (1)
    {
      if (v12)
      {
        v16 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v17 = v16 | (v8 << 6);
      }
      else
      {
        v18 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return result;
        }
        if (v18 >= v13)
          goto LABEL_34;
        v19 = v9[v18];
        ++v8;
        if (!v19)
        {
          v8 = v18 + 1;
          if (v18 + 1 >= v13)
            goto LABEL_34;
          v19 = v9[v8];
          if (!v19)
          {
            v20 = v18 + 2;
            if (v20 >= v13)
            {
LABEL_34:
              if ((a2 & 1) == 0)
              {
                result = swift_release();
                v3 = v31;
                goto LABEL_41;
              }
              v30 = 1 << *(_BYTE *)(v5 + 32);
              if (v30 >= 64)
                bzero((void *)(v5 + 64), ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v9 = -1 << v30;
              v3 = v31;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v19 = v9[v20];
            if (!v19)
            {
              while (1)
              {
                v8 = v20 + 1;
                if (__OFADD__(v20, 1))
                  goto LABEL_43;
                if (v8 >= v13)
                  goto LABEL_34;
                v19 = v9[v8];
                ++v20;
                if (v19)
                  goto LABEL_21;
              }
            }
            v8 = v20;
          }
        }
LABEL_21:
        v12 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v8 << 6);
      }
      v21 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v17);
      v22 = *(_QWORD *)(v5 + 56) + 16 * v17;
      if ((a2 & 1) != 0)
        sub_1BA1B0D38(v22, (uint64_t)v32);
      else
        sub_1BA1FA1F8(v22, (uint64_t)v32);
      result = sub_1BA2029F4();
      v23 = -1 << *(_BYTE *)(v7 + 32);
      v24 = result & ~v23;
      v25 = v24 >> 6;
      if (((-1 << v24) & ~*(_QWORD *)(v14 + 8 * (v24 >> 6))) != 0)
      {
        v15 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v14 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v26 = 0;
        v27 = (unint64_t)(63 - v23) >> 6;
        do
        {
          if (++v25 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          v28 = v25 == v27;
          if (v25 == v27)
            v25 = 0;
          v26 |= v28;
          v29 = *(_QWORD *)(v14 + 8 * v25);
        }
        while (v29 == -1);
        v15 = __clz(__rbit64(~v29)) + (v25 << 6);
      }
      *(_QWORD *)(v14 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v15) = v21;
      result = sub_1BA1B0D38((uint64_t)v32, *(_QWORD *)(v7 + 56) + 16 * v15);
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_41:
  *v3 = v7;
  return result;
}

uint64_t sub_1BA1B12C8()
{
  swift_getObjectType();
  return sub_1BA2021C0();
}

uint64_t type metadata accessor for EngagementEventProvider()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for EngagementDebugEventProvider()
{
  return objc_opt_self();
}

uint64_t sub_1BA1B135C()
{
  sub_1BA1B13B8();
  return sub_1BA2025BC();
}

unint64_t sub_1BA1B13B8()
{
  unint64_t result;

  result = qword_1ED5AF3D0;
  if (!qword_1ED5AF3D0)
  {
    result = MEMORY[0x1BCCD76CC](&protocol conformance descriptor for EngagementUIPlacement, &type metadata for EngagementUIPlacement);
    atomic_store(result, (unint64_t *)&qword_1ED5AF3D0);
  }
  return result;
}

uint64_t sub_1BA1B13FC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BA202400();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_1BA1B14B4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED5AEFC0;
  if (!qword_1ED5AEFC0)
  {
    v1 = sub_1BA2021E4();
    result = MEMORY[0x1BCCD76CC](MEMORY[0x1E0DB54F0], v1);
    atomic_store(result, (unint64_t *)&qword_1ED5AEFC0);
  }
  return result;
}

uint64_t type metadata accessor for Assembly()
{
  return objc_opt_self();
}

uint64_t sub_1BA1B151C(_QWORD *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  BOOL v5;
  char v6;
  unint64_t v8;
  char v9;
  unint64_t v10;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;

  v3 = v2;
  if (*a1)
    v5 = 0;
  else
    v5 = a1[1] == 1;
  if (v5)
  {
    sub_1BA1B900C((uint64_t)a1, &qword_1ED5AF168, (uint64_t)&type metadata for EngagementInlineViewManager.Observation);
    v8 = sub_1BA1B0EC8(a2);
    if ((v9 & 1) != 0)
    {
      v10 = v8;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v12 = *v2;
      v14 = *v3;
      *v3 = 0x8000000000000000;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1BA1F9694();
        v12 = v14;
      }
      sub_1BA1B0D38(*(_QWORD *)(v12 + 56) + 16 * v10, (uint64_t)&v15);
      sub_1BA2018B4(v10, v12);
      *v3 = v12;
      swift_bridgeObjectRelease();
    }
    else
    {
      v15 = xmmword_1BA203750;
    }
    return sub_1BA1B900C((uint64_t)&v15, &qword_1ED5AF168, (uint64_t)&type metadata for EngagementInlineViewManager.Observation);
  }
  else
  {
    sub_1BA1B0D38((uint64_t)a1, (uint64_t)&v15);
    v6 = swift_isUniquelyReferenced_nonNull_native();
    v13 = *v2;
    *v2 = 0x8000000000000000;
    sub_1BA1B0DBC((uint64_t)&v15, a2, v6);
    *v2 = v13;
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1BA1B1648(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  _QWORD v5[5];

  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  v2 = type metadata accessor for EngagementInlineViewStartupTask();
  result = sub_1BA2022B0();
  if (result)
  {
    v4 = result;
    v5[3] = v2;
    v5[4] = sub_1BA1C2CF4();
    v5[0] = v4;
    sub_1BA202310();
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v5);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BA1B16DC()
{
  uint64_t v0;

  v0 = sub_1BA20243C();
  __swift_allocate_value_buffer(v0, qword_1ED5B08D0);
  __swift_project_value_buffer(v0, (uint64_t)qword_1ED5B08D0);
  return sub_1BA202430();
}

void sub_1BA1B175C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED5AFBC8)
  {
    sub_1BA202118();
    v0 = sub_1BA2026DC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED5AFBC8);
  }
}

uint64_t sub_1BA1B17B0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = type metadata accessor for EngagementBannerLayoutStore();
  v3 = swift_allocObject();
  sub_1BA1C3070();
  swift_allocObject();
  result = sub_1BA2023A0();
  *(_QWORD *)(v3 + 16) = result;
  a1[3] = v2;
  a1[4] = (uint64_t)&protocol witness table for EngagementBannerLayoutStore;
  *a1 = v3;
  return result;
}

uint64_t sub_1BA1B1820(_QWORD *a1)
{
  uint64_t result;
  uint64_t v2;
  __int128 v3;
  uint64_t v4;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA1B3C44(0, &qword_1ED5AFF78);
  result = sub_1BA2022BC();
  if (v4)
  {
    type metadata accessor for EngagementInlineViewStartupTask();
    v2 = swift_allocObject();
    sub_1BA1B29EC(&v3, v2 + 16);
    return v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BA1B18BC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA1B3C44(0, &qword_1ED5AFA78);
  result = sub_1BA2022BC();
  if (v7)
  {
    v4 = type metadata accessor for EngagementUpsellRequestFactory();
    v5 = swift_allocObject();
    result = sub_1BA1B29EC(&v6, v5 + 16);
    a2[3] = v4;
    a2[4] = (uint64_t)&off_1E71EE378;
    *a2 = v5;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for EngagementAssembly()
{
  return objc_opt_self();
}

uint64_t sub_1BA1B198C(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1BA1B5770(0, &qword_1ED5AF8B8, (uint64_t)&type metadata for EngagementUIPlacement, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1BA20285C();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for EngagementInlineDialogViewControllerFactory()
{
  return objc_opt_self();
}

uint64_t sub_1BA1B1B0C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  swift_beginAccess();
  *(_QWORD *)(v4 + 24) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

uint64_t sub_1BA1B1B70(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  char v7;
  __int128 v8;
  __int128 v10;

  sub_1BA202268();
  swift_beginAccess();
  v5 = *(_QWORD *)(v2 + 32);
  if (*(_QWORD *)(v5 + 16) && (v6 = sub_1BA1B0EC8(a1), (v7 & 1) != 0))
    sub_1BA1FA1F8(*(_QWORD *)(v5 + 56) + 16 * v6, (uint64_t)&v10);
  else
    v10 = xmmword_1BA203750;
  swift_endAccess();
  v8 = v10;
  sub_1BA1B900C((uint64_t)&v10, &qword_1ED5AF168, (uint64_t)&type metadata for EngagementInlineViewManager.Observation);
  if (v8 == __PAIR128__(1, 0))
  {
    *((_QWORD *)&v10 + 1) = a2;
    swift_unknownObjectWeakInit();
    swift_beginAccess();
    sub_1BA1B151C(&v10, a1);
    swift_endAccess();
  }
  return sub_1BA202274();
}

void sub_1BA1B1C7C(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  unsigned __int8 *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  char v13;
  id v14;
  id v15;

  swift_beginAccess();
  v6 = *(_QWORD *)(a1 + 24);
  if (!*(_QWORD *)(v6 + 16))
    goto LABEL_5;
  v7 = sub_1BA1B9DB8(a2);
  if ((v8 & 1) == 0)
    goto LABEL_5;
  v9 = (unsigned __int8 *)(*(_QWORD *)(v6 + 56) + 40 * v7);
  v10 = *v9;
  v11 = (void *)*((_QWORD *)v9 + 2);
  v12 = *((_QWORD *)v9 + 3);
  v13 = v9[32];
  v14 = *((id *)v9 + 1);
  sub_1BA1C2628(v11, v12, v13);
  if (v14)
  {
    swift_endAccess();
    v15 = v14;
    sub_1BA200334(v10, v14, v11, v12, v13);
  }
  else
  {
LABEL_5:
    swift_endAccess();
    v14 = 0;
  }
  *a3 = v14;
}

uint64_t sub_1BA1B1E98(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t result;
  uint64_t v13;

  v4 = sub_1BA2021F0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1BA2021E4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA1B1FB0();
  (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E0DB54D8], v8);
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DB57E8], v4);
  result = sub_1BA20222C();
  *a3 = result;
  return result;
}

void sub_1BA1B1FB0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED5AEFC8)
  {
    sub_1BA2021E4();
    sub_1BA1B14B4();
    v0 = sub_1BA202244();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED5AEFC8);
  }
}

uint64_t type metadata accessor for EngagementInlineViewStartupTask()
{
  return objc_opt_self();
}

uint64_t sub_1BA1B2030()
{
  return EngagementUIPlacement.rawValue.getter();
}

uint64_t sub_1BA1B2060@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = EngagementUIPlacement.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1BA1B2084()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v0 = EngagementUIPlacement.rawValue.getter();
  v2 = v1;
  if (v0 == EngagementUIPlacement.rawValue.getter() && v2 == v3)
    v5 = 1;
  else
    v5 = sub_1BA202988();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_1BA1B2118@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *MEMORY[0x1E0DB46A0];
  v3 = sub_1BA202358();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

id sub_1BA1B215C@<X0>(_QWORD *a1@<X8>)
{
  objc_class *v2;
  id result;

  v2 = (objc_class *)type metadata accessor for EngagementViewControllerFactory();
  result = objc_msgSend(objc_allocWithZone(v2), sel_init);
  a1[3] = v2;
  a1[4] = &protocol witness table for EngagementViewControllerFactory;
  *a1 = result;
  return result;
}

uint64_t type metadata accessor for EngagementViewControllerFactory()
{
  return objc_opt_self();
}

id EngagementViewControllerFactory.init()()
{
  char *v0;
  objc_class *ObjectType;
  char *v2;
  char *v3;
  char *v4;
  char *v5;
  char *v6;
  objc_super v8;

  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v0[OBJC_IVAR____TtC14NewsEngagement31EngagementViewControllerFactory_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  v2 = &v0[OBJC_IVAR____TtC14NewsEngagement31EngagementViewControllerFactory_placementKey];
  *(_QWORD *)v2 = 0x6E656D6563616C70;
  *((_QWORD *)v2 + 1) = 0xE900000000000074;
  v3 = &v0[OBJC_IVAR____TtC14NewsEngagement31EngagementViewControllerFactory_identifierKey];
  *(_QWORD *)v3 = 0x696669746E656469;
  *((_QWORD *)v3 + 1) = 0xEA00000000007265;
  v4 = &v0[OBJC_IVAR____TtC14NewsEngagement31EngagementViewControllerFactory_sourceKey];
  *(_QWORD *)v4 = 0x656372756F73;
  *((_QWORD *)v4 + 1) = 0xE600000000000000;
  v5 = &v0[OBJC_IVAR____TtC14NewsEngagement31EngagementViewControllerFactory_messageIDKey];
  *(_QWORD *)v5 = 0x496567617373656DLL;
  *((_QWORD *)v5 + 1) = 0xE900000000000044;
  v6 = &v0[OBJC_IVAR____TtC14NewsEngagement31EngagementViewControllerFactory_offerKey];
  *(_QWORD *)v6 = 0x726566666FLL;
  *((_QWORD *)v6 + 1) = 0xE500000000000000;
  v8.receiver = v0;
  v8.super_class = ObjectType;
  return objc_msgSendSuper2(&v8, sel_init);
}

uint64_t sub_1BA1B22F0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  char v4;
  unsigned int v5;
  int v6;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char *v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  char v16;
  uint64_t v17;

  v1 = 30;
  v2 = MEMORY[0x1E0DEE9D8];
  v3 = &byte_1E71ED878;
  do
  {
    v5 = *v3++;
    v4 = v5;
    v6 = (1 << v5) & 0x3FFF1FFF;
    if (v5 > 0x1D || v6 == 0)
    {
      v17 = v2;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BA1C2908(0, *(_QWORD *)(v2 + 16) + 1, 1);
        v2 = v17;
      }
      v9 = *(_QWORD *)(v2 + 16);
      v8 = *(_QWORD *)(v2 + 24);
      if (v9 >= v8 >> 1)
      {
        sub_1BA1C2908(v8 > 1, v9 + 1, 1);
        v2 = v17;
      }
      *(_QWORD *)(v2 + 16) = v9 + 1;
      *(_BYTE *)(v2 + v9 + 32) = v4;
    }
    --v1;
  }
  while (v1);
  v10 = *(_QWORD *)(v2 + 16);
  if (v10)
  {
    v11 = (char *)(v2 + 32);
    do
    {
      v12 = *v11++;
      v13 = v0[5];
      v14 = v0[6];
      __swift_project_boxed_opaque_existential_1(v0 + 2, v13);
      v16 = v12;
      (*(void (**)(char *, uint64_t, uint64_t))(v14 + 8))(&v16, v13, v14);
      --v10;
    }
    while (v10);
  }
  swift_release();
  sub_1BA1B5770(0, &qword_1ED5AFBD0, MEMORY[0x1E0DEE9C0] + 8, MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  return sub_1BA2023DC();
}

void sub_1BA1B247C(NewsEngagement::EngagementUIPlacement a1)
{
  EngagementInlineViewManager.addPlacement(_:)(a1);
}

uint64_t sub_1BA1B249C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  objc_class *v5;
  id v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  objc_class *v11;
  char *v12;
  id v13;
  uint64_t v14;
  objc_super v15;
  __int128 v16;
  uint64_t v17;

  sub_1BA1C279C();
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1BA205A00;
  v5 = (objc_class *)type metadata accessor for EngagementEventProvider();
  v6 = objc_msgSend(objc_allocWithZone(v5), sel_init);
  *(_QWORD *)(v4 + 56) = v5;
  *(_QWORD *)(v4 + 64) = &off_1E71EF130;
  *(_QWORD *)(v4 + 32) = v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA1B3C44(0, &qword_1ED5B0000);
  result = sub_1BA2022BC();
  if (v17)
  {
    v8 = type metadata accessor for EngagementDebugEventProvider();
    v9 = swift_allocObject();
    v10 = MEMORY[0x1E0DEE9E0];
    *(_QWORD *)(v9 + 56) = MEMORY[0x1E0DEE9E0];
    sub_1BA1B29EC(&v16, v9 + 16);
    *(_QWORD *)(v4 + 96) = v8;
    *(_QWORD *)(v4 + 104) = &off_1E71EE938;
    *(_QWORD *)(v4 + 72) = v9;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1BA1B3C44(0, &qword_1ED5B0008);
    result = sub_1BA2022BC();
    if (v17)
    {
      v11 = (objc_class *)type metadata accessor for EngagementUpsellEventProvider();
      v12 = (char *)objc_allocWithZone(v11);
      *(_QWORD *)&v12[OBJC_IVAR____TtC14NewsEngagement29EngagementUpsellEventProvider_observersStore] = v10;
      sub_1BA1B2FB8((uint64_t)&v16, (uint64_t)&v12[OBJC_IVAR____TtC14NewsEngagement29EngagementUpsellEventProvider_requestFactory]);
      v15.receiver = v12;
      v15.super_class = v11;
      v13 = objc_msgSendSuper2(&v15, sel_init);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v16);
      *(_QWORD *)(v4 + 136) = v11;
      *(_QWORD *)(v4 + 144) = &off_1E71EE268;
      *(_QWORD *)(v4 + 112) = v13;
      v14 = type metadata accessor for EngagementEventManager();
      result = swift_allocObject();
      *(_QWORD *)(result + 16) = v4;
      a2[3] = v14;
      a2[4] = (uint64_t)&off_1E71EE7C8;
      *a2 = result;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1BA1B269C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for EngagementUpsellBannerPropertiesResult();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BA1B26E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  _BYTE v13[16];

  v5 = sub_1BA2021FC();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v13[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = sub_1BA2021F0();
  MEMORY[0x1E0C80A78](v9);
  (*(void (**)(_BYTE *, _QWORD))(v11 + 104))(&v13[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)], *MEMORY[0x1E0DB57E8]);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0DB5800], v5);
  v13[15] = 0;
  sub_1BA1B281C(0, (unint64_t *)&qword_1ED5AF8D0);
  swift_allocObject();
  result = sub_1BA202250();
  *a4 = result;
  return result;
}

void sub_1BA1B281C(uint64_t a1, unint64_t *a2)
{
  unint64_t v3;
  uint64_t v4;

  if (!*a2)
  {
    v3 = sub_1BA202244();
    if (!v4)
      atomic_store(v3, a2);
  }
}

uint64_t sub_1BA1B2864@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA1B3C44(0, &qword_1ED5B0008);
  result = sub_1BA2022BC();
  if (!v12)
  {
    __break(1u);
    goto LABEL_6;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA1B3C44(0, &qword_1ED5B0000);
  result = sub_1BA2022BC();
  if (!v10)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA1B3C44(0, &qword_1ED5AFA68);
  result = sub_1BA2022BC();
  if (v7)
  {
    v5 = type metadata accessor for EngagementInlineDialogViewControllerFactory();
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 112) = 1937204590;
    *(_QWORD *)(v6 + 120) = 0xE400000000000000;
    *(_WORD *)(v6 + 128) = 2;
    sub_1BA1B29EC(&v11, v6 + 16);
    result = sub_1BA1B29EC(&v9, v6 + 56);
    *(_QWORD *)(v6 + 96) = v7;
    *(_QWORD *)(v6 + 104) = v8;
    a2[3] = v5;
    a2[4] = (uint64_t)&off_1E71EF028;
    *a2 = v6;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1BA1B29EC(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

void sub_1BA1B2A04(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  unsigned __int8 *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  char v13;
  id v14;

  swift_beginAccess();
  v6 = *(_QWORD *)(a1 + 24);
  if (!*(_QWORD *)(v6 + 16))
    goto LABEL_5;
  v7 = sub_1BA1B9DB8(a2);
  if ((v8 & 1) == 0)
    goto LABEL_5;
  v9 = (unsigned __int8 *)(*(_QWORD *)(v6 + 56) + 40 * v7);
  v10 = *v9;
  v11 = (void *)*((_QWORD *)v9 + 2);
  v12 = *((_QWORD *)v9 + 3);
  v13 = v9[32];
  v14 = *((id *)v9 + 1);
  sub_1BA1C2628(v11, v12, v13);
  if (v14)
  {
    swift_endAccess();
    sub_1BA1C2628(v11, v12, v13);
    sub_1BA200334(v10, v14, v11, v12, v13);
    *(_QWORD *)a3 = v11;
    *(_QWORD *)(a3 + 8) = v12;
    *(_BYTE *)(a3 + 16) = v13;
  }
  else
  {
LABEL_5:
    swift_endAccess();
    *(_QWORD *)a3 = 0;
    *(_QWORD *)(a3 + 8) = 0;
    *(_BYTE *)(a3 + 16) = -1;
  }
}

uint64_t sub_1BA1B2AF4()
{
  EngagementUIPlacement.rawValue.getter();
  sub_1BA202538();
  return swift_bridgeObjectRelease();
}

uint64_t static EngagementUpsellBannerPropertiesResult.empty.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1ED5AF4D0 != -1)
    swift_once();
  v2 = type metadata accessor for EngagementUpsellBannerPropertiesResult();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1ED5AF4B0);
  return sub_1BA1B269C(v3, a1);
}

uint64_t sub_1BA1B2BA0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[5];
  _BYTE v21[24];
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA1B3C44(0, &qword_1ED5AFA68);
  result = sub_1BA2022BC();
  v5 = v23;
  if (v23)
  {
    v6 = v24;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1BA1B3C44(0, &qword_1ED5AF8F8);
    result = sub_1BA2022BC();
    if (v22)
    {
      v7 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v21, v22);
      MEMORY[0x1E0C80A78](v7);
      v9 = (_QWORD *)((char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *))(v10 + 16))(v9);
      v11 = *v9;
      v12 = type metadata accessor for EngagementEventManager();
      v20[3] = v12;
      v20[4] = &off_1E71EE7C8;
      v20[0] = v11;
      v13 = type metadata accessor for EngagementEventHandler();
      v14 = swift_allocObject();
      v15 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v20, v12);
      MEMORY[0x1E0C80A78](v15);
      v17 = (_QWORD *)((char *)v20 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *))(v18 + 16))(v17);
      v19 = *v17;
      *(_QWORD *)(v14 + 72) = v12;
      *(_QWORD *)(v14 + 80) = &off_1E71EE7C8;
      *(_QWORD *)(v14 + 48) = v19;
      *(_QWORD *)(v14 + 24) = 0;
      swift_unknownObjectWeakInit();
      *(_QWORD *)(v14 + 88) = MEMORY[0x1E0DEE9E0];
      *(_QWORD *)(v14 + 96) = 0x4000000000000000;
      *(_BYTE *)(v14 + 104) = 2;
      *(_QWORD *)(v14 + 32) = v5;
      *(_QWORD *)(v14 + 40) = v6;
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v20);
      result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v21);
      a2[3] = v13;
      a2[4] = (uint64_t)&protocol witness table for EngagementEventHandler;
      *a2 = v14;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for EngagementEventManager()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for EngagementEventHandler()
{
  return objc_opt_self();
}

id sub_1BA1B2E04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char *a5)
{
  objc_class *ObjectType;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  id v18;
  void (*v19)(void);
  id v20;
  objc_super v22;
  _QWORD v23[5];

  ObjectType = (objc_class *)swift_getObjectType();
  v11 = sub_1BA20228C();
  MEMORY[0x1E0C80A78](v11);
  v23[3] = type metadata accessor for EngagementInlineDialogViewControllerFactory();
  v23[4] = &off_1E71EF028;
  v23[0] = a4;
  v12 = OBJC_IVAR____TtC14NewsEngagement27EngagementInlineViewManager_state;
  type metadata accessor for EngagementInlineViewManager.State();
  v13 = (_QWORD *)swift_allocObject();
  v14 = a5;
  sub_1BA202280();
  sub_1BA2022A4();
  swift_allocObject();
  v15 = sub_1BA202298();
  v16 = MEMORY[0x1E0DEE9E0];
  v13[2] = v15;
  v13[3] = v16;
  v13[4] = v16;
  *(_QWORD *)&a5[v12] = v13;
  v17 = &v14[OBJC_IVAR____TtC14NewsEngagement27EngagementInlineViewManager_featureSettings];
  *(_QWORD *)v17 = a1;
  *((_QWORD *)v17 + 1) = a2;
  sub_1BA1B2FB8(a3, (uint64_t)&v14[OBJC_IVAR____TtC14NewsEngagement27EngagementInlineViewManager_engagementBannerLayoutStore]);
  sub_1BA1B2FB8((uint64_t)v23, (uint64_t)&v14[OBJC_IVAR____TtC14NewsEngagement27EngagementInlineViewManager_inlineDialogViewControllerFactory]);
  swift_unknownObjectRetain();

  v22.receiver = v14;
  v22.super_class = ObjectType;
  v18 = objc_msgSendSuper2(&v22, sel_init);
  swift_getObjectType();
  v19 = *(void (**)(void))(a2 + 80);
  v20 = v18;
  v19();

  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v23);
  __swift_destroy_boxed_opaque_existential_1Tm(a3);
  return v20;
}

uint64_t sub_1BA1B2FB8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t destroy for EngagementUpsellPlacement(_QWORD *a1)
{
  uint64_t result;

  if (a1[3] != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[42] != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[81] != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[120] != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[159] != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[198] != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  result = a1[237];
  if (result != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BA1B3480()
{
  sub_1BA202A00();
  EngagementUIPlacement.rawValue.getter();
  sub_1BA202538();
  swift_bridgeObjectRelease();
  return sub_1BA202A18();
}

uint64_t sub_1BA1B34E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v5;

  v0 = sub_1BA2023D0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA1B3C44(0, &qword_1ED5AF8F8);
  sub_1BA202340();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB4A00], v0);
  sub_1BA20225C();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_1BA1B3C44(0, &qword_1ED5AFB50);
  sub_1BA202340();
  swift_release();
  type metadata accessor for EngagementInlineViewStartupTask();
  sub_1BA202334();
  return swift_release();
}

uint64_t sub_1BA1B3630@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  objc_class *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  id v18;
  _QWORD v20[3];
  uint64_t v21;
  _UNKNOWN **v22;
  _BYTE v23[24];
  uint64_t v24;
  _BYTE v25[24];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA1B3C44(0, &qword_1ED5AFA68);
  result = sub_1BA2022BC();
  v5 = v27;
  if (!v27)
  {
    __break(1u);
    goto LABEL_6;
  }
  v6 = v28;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA1B3C44(0, &qword_1ED5AFF70);
  result = sub_1BA2022BC();
  if (!v26)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA1B3C44(0, &qword_1ED5AFB50);
  result = sub_1BA2022BC();
  if (v24)
  {
    v7 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v23, v24);
    MEMORY[0x1E0C80A78](v7);
    v9 = (_QWORD *)((char *)&v20[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v10 + 16))(v9);
    v11 = *v9;
    v21 = type metadata accessor for EngagementInlineDialogViewControllerFactory();
    v22 = &off_1E71EF028;
    v20[0] = v11;
    v12 = (objc_class *)type metadata accessor for EngagementInlineViewManager();
    v13 = (char *)objc_allocWithZone(v12);
    v14 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v20, v21);
    MEMORY[0x1E0C80A78](v14);
    v16 = (_QWORD *)((char *)&v20[-1] - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v17 + 16))(v16);
    v18 = sub_1BA1B2E04(v5, v6, (uint64_t)v25, *v16, v13);
    swift_unknownObjectRelease();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v20);
    result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v23);
    a2[3] = v12;
    a2[4] = &protocol witness table for EngagementInlineViewManager;
    *a2 = v18;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1BA1B3888()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  void (*v8)(char *, uint64_t, uint64_t);
  void (*v9)(char *, uint64_t);
  uint64_t v10;
  uint64_t v12;
  _QWORD v13[4];

  v12 = sub_1BA2022C8();
  v0 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v2 = (char *)&v13[-1] - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1BA2023D0();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v13[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA2022D4();
  sub_1BA1B3C44(0, &qword_1ED5AFF78);
  sub_1BA202340();
  swift_release();
  v7 = *MEMORY[0x1E0DB4A00];
  v8 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 104);
  v8(v6, v7, v3);
  sub_1BA20225C();
  swift_release();
  swift_release();
  v9 = *(void (**)(char *, uint64_t))(v4 + 8);
  v9(v6, v3);
  sub_1BA2022D4();
  sub_1BA1B3C44(0, &qword_1ED5AFF70);
  sub_1BA202340();
  swift_release();
  v8(v6, v7, v3);
  sub_1BA20225C();
  swift_release();
  swift_release();
  v9(v6, v3);
  sub_1BA2022D4();
  sub_1BA1B3C44(0, &qword_1ED5AFF68);
  sub_1BA202340();
  swift_release();
  swift_release();
  sub_1BA2022D4();
  sub_1BA1B3C44(0, &qword_1ED5B0000);
  sub_1BA202340();
  swift_release();
  swift_release();
  sub_1BA2022D4();
  sub_1BA1B3C44(0, &qword_1ED5B0008);
  sub_1BA202340();
  swift_release();
  swift_release();
  sub_1BA2022D4();
  sub_1BA1B3C44(0, qword_1ED5AFF80);
  sub_1BA202340();
  swift_release();
  swift_release();
  sub_1BA2022EC();
  __swift_project_boxed_opaque_existential_1(v13, v13[3]);
  sub_1BA20231C();
  v10 = v12;
  (*(void (**)(char *, _QWORD, uint64_t))(v0 + 104))(v2, *MEMORY[0x1E0DB36E0], v12);
  sub_1BA20234C();
  (*(void (**)(char *, uint64_t))(v0 + 8))(v2, v10);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v13);
  sub_1BA2022E0();
  sub_1BA202328();
  return swift_release();
}

uint64_t sub_1BA1B3C44(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

NewsEngagement::EngagementUpsellConfig_optional __swiftcall EngagementUpsellConfig.init(dictionary:)(Swift::OpaquePointer dictionary)
{
  uint64_t *v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  Swift::Bool v16;
  __int128 v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t i;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  _OWORD *v34;
  uint64_t *v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t *v52;
  uint64_t v53;
  __int128 v54;
  uint64_t v55;
  uint64_t v56;
  int64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  __int128 *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  _BYTE v67[32];
  _QWORD v68[2];
  uint64_t v69;
  __int128 v70;
  __int128 v71;
  NewsEngagement::EngagementUpsellConfig_optional result;

  v3 = v1;
  sub_1BA1C2E84();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = type metadata accessor for EngagementUpsellTrigger();
  v58 = *(_QWORD *)(v59 - 8);
  v7 = MEMORY[0x1E0C80A78](v59);
  v9 = (char *)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v50 - v10;
  if (!*((_QWORD *)dictionary._rawValue + 2)
    || (v12 = sub_1BA1B9E30(0x7372656767697274, 0xE800000000000000), (v13 & 1) == 0))
  {
    v70 = 0u;
    v71 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_36;
  }
  sub_1BA1B9D7C(*((_QWORD *)dictionary._rawValue + 7) + 32 * v12, (uint64_t)&v70);
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v71 + 1))
  {
LABEL_36:
    v15 = sub_1BA1B42A0((uint64_t)&v70, (uint64_t (*)(_QWORD))sub_1BA1B8834);
LABEL_37:
    v49 = 0;
LABEL_38:
    *v3 = v49;
    goto LABEL_42;
  }
  sub_1BA1B888C();
  v62 = MEMORY[0x1E0DEE9B8] + 8;
  v63 = v14;
  v15 = swift_dynamicCast();
  if ((v15 & 1) == 0)
    goto LABEL_37;
  v50 = v11;
  v51 = v9;
  v52 = v3;
  v18 = 0;
  v19 = v68[0];
  v20 = *(_QWORD *)(v68[0] + 64);
  v56 = v68[0] + 64;
  v21 = 1 << *(_BYTE *)(v68[0] + 32);
  v22 = -1;
  if (v21 < 64)
    v22 = ~(-1 << v21);
  v23 = v22 & v20;
  v57 = (unint64_t)(v21 + 63) >> 6;
  v61 = &v71;
  v60 = &v69;
  v53 = MEMORY[0x1E0DEE9E0];
  *(_QWORD *)&v17 = 136315138;
  v54 = v17;
  v55 = v68[0];
  if ((v22 & v20) == 0)
    goto LABEL_9;
LABEL_8:
  v24 = __clz(__rbit64(v23));
  v23 &= v23 - 1;
  for (i = v24 | (v18 << 6); ; i = __clz(__rbit64(v27)) + (v18 << 6))
  {
    v29 = *(_QWORD *)(v19 + 56);
    v30 = (_QWORD *)(*(_QWORD *)(v19 + 48) + 16 * i);
    v32 = v30[1];
    *(_QWORD *)&v70 = *v30;
    v31 = v70;
    *((_QWORD *)&v70 + 1) = v32;
    v33 = (uint64_t)v61;
    sub_1BA1B9D7C(v29 + 32 * i, (uint64_t)v61);
    v68[0] = v31;
    v68[1] = v32;
    v34 = (_OWORD *)v33;
    v35 = v60;
    sub_1BA1B43D0(v34, v60);
    v65 = v31;
    v66 = v32;
    sub_1BA1B9D7C((uint64_t)v35, (uint64_t)v67);
    swift_bridgeObjectRetain_n();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v67);
    v65 = v31;
    v66 = v32;
    sub_1BA1B9D7C((uint64_t)v35, (uint64_t)v67);
    swift_bridgeObjectRelease();
    if ((swift_dynamicCast() & 1) != 0)
    {
      EngagementUpsellTrigger.init(dictionary:)(v64);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v58 + 48))(v6, 1, v59) != 1)
      {
        v44 = (uint64_t)v50;
        sub_1BA1B4A5C((uint64_t)v6, (uint64_t)v50);
        v45 = (uint64_t)v51;
        sub_1BA1B45A8(v44, (uint64_t)v51);
        v46 = v53;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v65 = v46;
        sub_1BA1B43EC(v45, v31, v32, isUniquelyReferenced_nonNull_native);
        v53 = v65;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v48 = v44;
        v19 = v55;
        sub_1BA1B42A0(v48, (uint64_t (*)(_QWORD))type metadata accessor for EngagementUpsellTrigger);
        goto LABEL_32;
      }
      sub_1BA1B42A0((uint64_t)v6, (uint64_t (*)(_QWORD))sub_1BA1C2E84);
    }
    if (qword_1ED5AFB58 != -1)
      swift_once();
    v36 = sub_1BA20243C();
    __swift_project_value_buffer(v36, (uint64_t)qword_1ED5B08D0);
    swift_bridgeObjectRetain();
    v37 = sub_1BA202424();
    v38 = sub_1BA202670();
    if (os_log_type_enabled(v37, v38))
    {
      v39 = v6;
      v40 = swift_slowAlloc();
      v41 = swift_slowAlloc();
      v65 = v41;
      *(_DWORD *)v40 = v54;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v40 + 4) = sub_1BA1BDA3C(v31, v32, &v65);
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1BA1AE000, v37, v38, "Could not parse %s to an EngagementUpsellTrigger object", (uint8_t *)v40, 0xCu);
      swift_arrayDestroy();
      v42 = v41;
      v19 = v55;
      MEMORY[0x1BCCD775C](v42, -1, -1);
      v43 = v40;
      v6 = v39;
      MEMORY[0x1BCCD775C](v43, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

LABEL_32:
    v15 = sub_1BA1B42A0((uint64_t)v68, (uint64_t (*)(_QWORD))sub_1BA1B4364);
    if (v23)
      goto LABEL_8;
LABEL_9:
    v26 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
      __break(1u);
      goto LABEL_41;
    }
    if (v26 >= v57)
      goto LABEL_39;
    v27 = *(_QWORD *)(v56 + 8 * v26);
    ++v18;
    if (!v27)
    {
      v18 = v26 + 1;
      if (v26 + 1 >= v57)
        goto LABEL_39;
      v27 = *(_QWORD *)(v56 + 8 * v18);
      if (!v27)
      {
        v18 = v26 + 2;
        if (v26 + 2 >= v57)
          goto LABEL_39;
        v27 = *(_QWORD *)(v56 + 8 * v18);
        if (!v27)
          break;
      }
    }
LABEL_22:
    v23 = (v27 - 1) & v27;
  }
  v28 = v26 + 3;
  if (v28 >= v57)
  {
LABEL_39:
    v15 = swift_release();
    v3 = v52;
    v49 = v53;
    goto LABEL_38;
  }
  v27 = *(_QWORD *)(v56 + 8 * v28);
  if (v27)
  {
    v18 = v28;
    goto LABEL_22;
  }
  while (1)
  {
    v18 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v18 >= v57)
      goto LABEL_39;
    v27 = *(_QWORD *)(v56 + 8 * v18);
    ++v28;
    if (v27)
      goto LABEL_22;
  }
LABEL_41:
  __break(1u);
LABEL_42:
  result.value.triggers._rawValue = (void *)v15;
  result.is_nil = v16;
  return result;
}

uint64_t sub_1BA1B42A0(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t destroy for EngagementUpsellTrigger(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);

  v4 = sub_1BA202400();
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(a1, v4);
  v5(a1 + *(int *)(a2 + 20), v4);
  if ((~*(_QWORD *)(a1 + *(int *)(a2 + 48)) & 0xF000000000000007) != 0)
    swift_release();
  swift_bridgeObjectRelease();
  return swift_release();
}

void sub_1BA1B4364()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED5AF508)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED5AF508);
  }
}

_OWORD *sub_1BA1B43D0(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t getEnumTagSinglePayload for EngagementUpsellTrigger()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BA1B43EC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  unint64_t v22;
  char v23;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_1BA1B9E30(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = v18[7];
        v20 = v19 + *(_QWORD *)(*(_QWORD *)(type metadata accessor for EngagementUpsellTrigger() - 8) + 72) * v12;
        return sub_1BA1D69D0(a1, v20);
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_1BA1F946C();
      goto LABEL_7;
    }
    sub_1BA1B46F8(v15, a4 & 1);
    v22 = sub_1BA1B9E30(a2, a3);
    if ((v16 & 1) == (v23 & 1))
    {
      v12 = v22;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1BA1B4520(v12, a2, a3, a1, v18);
      return swift_bridgeObjectRetain();
    }
  }
  result = sub_1BA2029AC();
  __break(1u);
  return result;
}

uint64_t sub_1BA1B4520(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v8 = (_QWORD *)(a5[6] + 16 * a1);
  *v8 = a2;
  v8[1] = a3;
  v9 = a5[7];
  v10 = type metadata accessor for EngagementUpsellTrigger();
  result = sub_1BA1B4A5C(a4, v9 + *(_QWORD *)(*(_QWORD *)(v10 - 8) + 72) * a1);
  v12 = a5[2];
  v13 = __OFADD__(v12, 1);
  v14 = v12 + 1;
  if (v13)
    __break(1u);
  else
    a5[2] = v14;
  return result;
}

uint64_t sub_1BA1B45A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for EngagementUpsellTrigger();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t initializeWithCopy for EngagementUpsellTrigger(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v6 = sub_1BA202400();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v8 = a3[7];
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  v9 = a3[8];
  v10 = a3[9];
  v11 = a1 + v9;
  v12 = a2 + v9;
  *(_QWORD *)v11 = *(_QWORD *)v12;
  *(_BYTE *)(v11 + 8) = *(_BYTE *)(v12 + 8);
  v13 = a1 + v10;
  v14 = a2 + v10;
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *(_BYTE *)(v13 + 8) = *(_BYTE *)(v14 + 8);
  v15 = a3[11];
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  *(_QWORD *)(a1 + v15) = *(_QWORD *)(a2 + v15);
  v16 = a3[12];
  v17 = *(_QWORD *)(a2 + v16);
  if ((~v17 & 0xF000000000000007) != 0)
    swift_retain();
  *(_QWORD *)(a1 + v16) = v17;
  v18 = a3[14];
  *(_QWORD *)(a1 + a3[13]) = *(_QWORD *)(a2 + a3[13]);
  *(_QWORD *)(a1 + v18) = *(_QWORD *)(a2 + v18);
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t sub_1BA1B46F8(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t result;
  int64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  char v34;
  unint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  int64_t v40;
  _QWORD *v41;
  uint64_t v42;
  int v43;

  v3 = v2;
  v5 = type metadata accessor for EngagementUpsellTrigger();
  v42 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v2;
  sub_1BA1B4AA0();
  v43 = a2;
  v9 = sub_1BA202838();
  v10 = v9;
  if (!*(_QWORD *)(v8 + 16))
    goto LABEL_41;
  v11 = 1 << *(_BYTE *)(v8 + 32);
  v12 = *(_QWORD *)(v8 + 64);
  v41 = (_QWORD *)(v8 + 64);
  if (v11 < 64)
    v13 = ~(-1 << v11);
  else
    v13 = -1;
  v14 = v13 & v12;
  v39 = v2;
  v40 = (unint64_t)(v11 + 63) >> 6;
  v15 = v9 + 64;
  result = swift_retain();
  v17 = 0;
  while (1)
  {
    if (v14)
    {
      v20 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v21 = v20 | (v17 << 6);
      goto LABEL_22;
    }
    v22 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v40)
      break;
    v23 = v41;
    v24 = v41[v22];
    ++v17;
    if (!v24)
    {
      v17 = v22 + 1;
      if (v22 + 1 >= v40)
        goto LABEL_34;
      v24 = v41[v17];
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v40)
        {
LABEL_34:
          swift_release();
          v3 = v39;
          if ((v43 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v24 = v41[v25];
        if (!v24)
        {
          while (1)
          {
            v17 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_43;
            if (v17 >= v40)
              goto LABEL_34;
            v24 = v41[v17];
            ++v25;
            if (v24)
              goto LABEL_21;
          }
        }
        v17 = v25;
      }
    }
LABEL_21:
    v14 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v17 << 6);
LABEL_22:
    v26 = (uint64_t *)(*(_QWORD *)(v8 + 48) + 16 * v21);
    v28 = *v26;
    v27 = v26[1];
    v29 = *(_QWORD *)(v42 + 72);
    v30 = *(_QWORD *)(v8 + 56) + v29 * v21;
    if ((v43 & 1) != 0)
    {
      sub_1BA1B4A5C(v30, (uint64_t)v7);
    }
    else
    {
      sub_1BA1B45A8(v30, (uint64_t)v7);
      swift_bridgeObjectRetain();
    }
    sub_1BA202A00();
    sub_1BA202538();
    result = sub_1BA202A18();
    v31 = -1 << *(_BYTE *)(v10 + 32);
    v32 = result & ~v31;
    v33 = v32 >> 6;
    if (((-1 << v32) & ~*(_QWORD *)(v15 + 8 * (v32 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v32) & ~*(_QWORD *)(v15 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v34 = 0;
      v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v36 = v33 == v35;
        if (v33 == v35)
          v33 = 0;
        v34 |= v36;
        v37 = *(_QWORD *)(v15 + 8 * v33);
      }
      while (v37 == -1);
      v18 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(_QWORD *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v10 + 48) + 16 * v18);
    *v19 = v28;
    v19[1] = v27;
    result = sub_1BA1B4A5C((uint64_t)v7, *(_QWORD *)(v10 + 56) + v29 * v18);
    ++*(_QWORD *)(v10 + 16);
  }
  swift_release();
  v3 = v39;
  v23 = v41;
  if ((v43 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v38 = 1 << *(_BYTE *)(v8 + 32);
  if (v38 >= 64)
    bzero(v23, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v38;
  *(_QWORD *)(v8 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v10;
  return result;
}

uint64_t sub_1BA1B4A5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for EngagementUpsellTrigger();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1BA1B4AA0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED5AF580)
  {
    type metadata accessor for EngagementUpsellTrigger();
    v0 = sub_1BA202850();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED5AF580);
  }
}

uint64_t sub_1BA1B4B04(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t *v17;
  int64_t v18;
  uint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t, uint64_t, uint64_t);
  unint64_t v27;
  char v28;
  char v29;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, char *, uint64_t);
  int v34;
  _QWORD *v35;
  char v36;
  unint64_t v37;
  uint64_t v38;
  _BOOL8 v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  char v43;
  _QWORD *v44;
  uint64_t v45;
  BOOL v46;
  uint64_t v47;
  uint64_t result;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  int64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  int64_t v57;
  _QWORD *v58;

  v4 = sub_1BA202184();
  v5 = *(_QWORD *)(v4 - 8);
  ((void (*)(void))MEMORY[0x1E0C80A78])();
  v54 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA1B9050(0, &qword_1ED5AF318, v7, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v8 = ((uint64_t (*)(void))MEMORY[0x1E0C80A78])();
  v10 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v49 - v11;
  v13 = *(_QWORD *)(a1 + 56);
  v51 = a1 + 56;
  v14 = 1 << *(_BYTE *)(a1 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & v13;
  v17 = (uint64_t *)(a2 + 88);
  v52 = (unint64_t)(v14 + 63) >> 6;
  swift_bridgeObjectRetain();
  v18 = 0;
  v55 = v4;
  v53 = v12;
  v50 = v10;
  while (1)
  {
    if (v16)
    {
      v56 = (v16 - 1) & v16;
      v57 = v18;
      v20 = __clz(__rbit64(v16)) | (v18 << 6);
      goto LABEL_25;
    }
    v21 = v18 + 1;
    if (__OFADD__(v18, 1))
      goto LABEL_43;
    if (v21 >= v52)
      return swift_release();
    v22 = *(_QWORD *)(v51 + 8 * v21);
    v23 = v18 + 1;
    if (!v22)
    {
      v23 = v18 + 2;
      if (v18 + 2 >= v52)
        return swift_release();
      v22 = *(_QWORD *)(v51 + 8 * v23);
      if (!v22)
      {
        v23 = v18 + 3;
        if (v18 + 3 >= v52)
          return swift_release();
        v22 = *(_QWORD *)(v51 + 8 * v23);
        if (!v22)
        {
          v23 = v18 + 4;
          if (v18 + 4 >= v52)
            return swift_release();
          v22 = *(_QWORD *)(v51 + 8 * v23);
          if (!v22)
            break;
        }
      }
    }
LABEL_24:
    v56 = (v22 - 1) & v22;
    v57 = v23;
    v20 = __clz(__rbit64(v22)) + (v23 << 6);
LABEL_25:
    v25 = *(unsigned __int8 *)(*(_QWORD *)(a1 + 48) + v20);
    sub_1BA20216C();
    v26 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
    v26(v12, 0, 1, v4);
    swift_beginAccess();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v12, 1, v4) == 1)
    {
      sub_1BA1BAD90((uint64_t)v12);
      swift_bridgeObjectRetain();
      v27 = sub_1BA1B9DB8(v25);
      v29 = v28;
      swift_bridgeObjectRelease();
      if ((v29 & 1) != 0)
      {
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v31 = *v17;
        v58 = (_QWORD *)*v17;
        *v17 = 0x8000000000000000;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1BA1F80B4();
          v31 = (uint64_t)v58;
        }
        v4 = v55;
        (*(void (**)(char *, unint64_t, uint64_t))(v5 + 32))(v10, *(_QWORD *)(v31 + 56) + *(_QWORD *)(v5 + 72) * v27, v55);
        sub_1BA2008A0(v27, v31);
        *v17 = v31;
        swift_bridgeObjectRelease();
        v19 = 0;
      }
      else
      {
        v19 = 1;
        v4 = v55;
      }
      v26(v10, v19, 1, v4);
      sub_1BA1BAD90((uint64_t)v10);
    }
    else
    {
      v32 = a1;
      v33 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
      v33(v54, v12, v4);
      v34 = swift_isUniquelyReferenced_nonNull_native();
      v58 = (_QWORD *)*v17;
      v35 = v58;
      *v17 = 0x8000000000000000;
      v37 = sub_1BA1B9DB8(v25);
      v38 = v35[2];
      v39 = (v36 & 1) == 0;
      v40 = v38 + v39;
      if (__OFADD__(v38, v39))
      {
        __break(1u);
LABEL_43:
        __break(1u);
LABEL_44:
        __break(1u);
        goto LABEL_45;
      }
      v41 = v36;
      if (v35[3] >= v40)
      {
        if ((v34 & 1) == 0)
          sub_1BA1F80B4();
      }
      else
      {
        sub_1BA1B57F8(v40, v34);
        v42 = sub_1BA1B9DB8(v25);
        if ((v41 & 1) != (v43 & 1))
          goto LABEL_46;
        v37 = v42;
      }
      v4 = v55;
      v44 = v58;
      if ((v41 & 1) != 0)
      {
        (*(void (**)(unint64_t, char *, uint64_t))(v5 + 40))(v58[7] + *(_QWORD *)(v5 + 72) * v37, v54, v55);
      }
      else
      {
        v58[(v37 >> 6) + 8] |= 1 << v37;
        *(_BYTE *)(v44[6] + v37) = v25;
        v33((char *)(v44[7] + *(_QWORD *)(v5 + 72) * v37), v54, v4);
        v45 = v44[2];
        v46 = __OFADD__(v45, 1);
        v47 = v45 + 1;
        if (v46)
          goto LABEL_44;
        v44[2] = v47;
      }
      *v17 = (uint64_t)v58;
      swift_bridgeObjectRelease();
      a1 = v32;
      v10 = v50;
    }
    v12 = v53;
    v16 = v56;
    v18 = v57;
    swift_endAccess();
  }
  v24 = v18 + 5;
  if (v18 + 5 >= v52)
    return swift_release();
  v22 = *(_QWORD *)(v51 + 8 * v24);
  if (v22)
  {
    v23 = v18 + 5;
    goto LABEL_24;
  }
  while (1)
  {
    v23 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v23 >= v52)
      return swift_release();
    v22 = *(_QWORD *)(v51 + 8 * v23);
    ++v24;
    if (v22)
      goto LABEL_24;
  }
LABEL_45:
  __break(1u);
LABEL_46:
  result = sub_1BA2029AC();
  __break(1u);
  return result;
}

uint64_t sub_1BA1B4FD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char v7;
  const void *v8;
  _QWORD __dst[275];

  v5 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for EngagementUpsellTrigger() + 52));
  if (*(_QWORD *)(v5 + 16) && (v6 = sub_1BA1B9DB8(a2), (v7 & 1) != 0))
  {
    v8 = (const void *)(*(_QWORD *)(v5 + 56) + 2200 * v6);
    memcpy(__dst, v8, sizeof(__dst));
    memmove(a3, v8, 0x898uLL);
    nullsub_1(a3);
    return sub_1BA1F7648((uint64_t)__dst, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_1BA1B6C08);
  }
  else
  {
    sub_1BA1E3E28(__dst);
    return sub_1BA1E3DDC((uint64_t)__dst, (uint64_t)a3, &qword_1ED5AF300);
  }
}

uint64_t sub_1BA1B5094(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;

  v3 = a2 & ~(-1 << *(_BYTE *)(v2 + 32));
  if (((*(_QWORD *)(v2 + 64 + ((v3 >> 3) & 0xFFFFFFFFFFFFF8)) >> v3) & 1) != 0)
    __asm { BR              X9 }
  return a2 & ~(-1 << *(_BYTE *)(v2 + 32));
}

void __swiftcall EngagementUpsellTrigger.upsellPlacement(for:)(NewsEngagement::EngagementUpsellPlacement_optional *__return_ptr retstr, NewsEngagement::EngagementUIPlacement a2)
{
  type metadata accessor for EngagementUpsellTrigger();
  sub_1BA2022A4();
  sub_1BA1B57B4(0, &qword_1ED5AF300);
  swift_retain();
  sub_1BA202364();
  swift_release();
}

uint64_t type metadata accessor for EngagementUpsellTrigger()
{
  uint64_t result;

  result = qword_1ED5AF3D8;
  if (!qword_1ED5AF3D8)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1BA1B5770(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(_QWORD, uint64_t))
{
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    v5 = a4(0, a3);
    if (!v6)
      atomic_store(v5, a2);
  }
}

void sub_1BA1B57B4(uint64_t a1, unint64_t *a2)
{
  unint64_t v3;
  uint64_t v4;

  if (!*a2)
  {
    v3 = sub_1BA2026DC();
    if (!v4)
      atomic_store(v3, a2);
  }
}

uint64_t sub_1BA1B57F8(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t result;
  int64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  char v34;
  unint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  int64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  char v45;

  v3 = v2;
  v44 = sub_1BA202184();
  v5 = *(_QWORD *)(v44 - 8);
  MEMORY[0x1E0C80A78]();
  v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v2;
  sub_1BA1B5B84();
  v9 = sub_1BA202838();
  v10 = v9;
  if (!*(_QWORD *)(v8 + 16))
    goto LABEL_40;
  v40 = v2;
  v11 = 1 << *(_BYTE *)(v8 + 32);
  v12 = *(_QWORD *)(v8 + 64);
  v42 = (_QWORD *)(v8 + 64);
  if (v11 < 64)
    v13 = ~(-1 << v11);
  else
    v13 = -1;
  v14 = v13 & v12;
  v41 = (unint64_t)(v11 + 63) >> 6;
  v15 = a2;
  v16 = v9 + 64;
  result = swift_retain();
  v18 = 0;
  HIDWORD(v39) = v15;
  v19 = 16;
  if ((v15 & 1) != 0)
    v19 = 32;
  v43 = v19;
  while (1)
  {
    if (v14)
    {
      v21 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v22 = v21 | (v18 << 6);
      goto LABEL_24;
    }
    v23 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v41)
      break;
    v24 = v42;
    v25 = v42[v23];
    ++v18;
    if (!v25)
    {
      v18 = v23 + 1;
      if (v23 + 1 >= v41)
        goto LABEL_33;
      v25 = v42[v18];
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v41)
        {
LABEL_33:
          swift_release();
          v3 = v40;
          if ((v39 & 0x100000000) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v25 = v42[v26];
        if (!v25)
        {
          while (1)
          {
            v18 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_42;
            if (v18 >= v41)
              goto LABEL_33;
            v25 = v42[v18];
            ++v26;
            if (v25)
              goto LABEL_23;
          }
        }
        v18 = v26;
      }
    }
LABEL_23:
    v14 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v18 << 6);
LABEL_24:
    v27 = *(_QWORD *)(v8 + 56);
    v28 = v8;
    v29 = *(_BYTE *)(*(_QWORD *)(v8 + 48) + v22);
    v30 = *(_QWORD *)(v5 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v5 + v43))(v7, v27 + v30 * v22, v44);
    sub_1BA202A00();
    v45 = v29;
    EngagementUIPlacement.rawValue.getter();
    sub_1BA202538();
    swift_bridgeObjectRelease();
    result = sub_1BA202A18();
    v31 = -1 << *(_BYTE *)(v10 + 32);
    v32 = result & ~v31;
    v33 = v32 >> 6;
    if (((-1 << v32) & ~*(_QWORD *)(v16 + 8 * (v32 >> 6))) != 0)
    {
      v20 = __clz(__rbit64((-1 << v32) & ~*(_QWORD *)(v16 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v34 = 0;
      v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v36 = v33 == v35;
        if (v33 == v35)
          v33 = 0;
        v34 |= v36;
        v37 = *(_QWORD *)(v16 + 8 * v33);
      }
      while (v37 == -1);
      v20 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(_QWORD *)(v16 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
    *(_BYTE *)(*(_QWORD *)(v10 + 48) + v20) = v29;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v5 + 32))(*(_QWORD *)(v10 + 56) + v30 * v20, v7, v44);
    ++*(_QWORD *)(v10 + 16);
    v8 = v28;
  }
  swift_release();
  v3 = v40;
  v24 = v42;
  if ((v39 & 0x100000000) == 0)
    goto LABEL_40;
LABEL_36:
  v38 = 1 << *(_BYTE *)(v8 + 32);
  if (v38 >= 64)
    bzero(v24, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v38;
  *(_QWORD *)(v8 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v10;
  return result;
}

void sub_1BA1B5B84()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED5AF560)
  {
    sub_1BA202184();
    sub_1BA1C1D10();
    v0 = sub_1BA202850();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED5AF560);
  }
}

uint64_t EngagementUpsellTrigger.init(dictionary:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t *v3;
  uint64_t (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v13;
  uint64_t v14;
  void *v15;
  unint64_t v16;
  char v17;
  int v18;
  uint64_t v19;
  void *v20;
  int v21;
  unint64_t v22;
  char v23;
  int v24;
  uint64_t v25;
  int v26;
  unint64_t v27;
  char v28;
  int v29;
  uint64_t v30;
  int v31;
  int v32;
  unint64_t v33;
  char v34;
  int v35;
  uint64_t v36;
  unint64_t v37;
  char v38;
  int v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  uint64_t v43;
  void *v44;
  Swift::String v45;
  uint64_t v46;
  NSObject *v47;
  os_log_type_t v48;
  uint8_t *v49;
  uint64_t v50;
  uint8_t *v51;
  unint64_t v52;
  char v53;
  int v54;
  uint64_t v55;
  int v56;
  unint64_t v57;
  char v58;
  int v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  __int128 v66;
  int64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t *v72;
  _BYTE *v73;
  unint64_t v74;
  unint64_t i;
  int64_t v76;
  unint64_t v77;
  int64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t *v81;
  uint64_t v82;
  void *v83;
  Swift::String v84;
  uint64_t v85;
  uint64_t v86;
  NSObject *v87;
  os_log_type_t v88;
  uint64_t *v89;
  uint64_t *v90;
  uint64_t v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v97;
  os_log_type_t v98;
  uint8_t *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  _QWORD v107[2];
  uint64_t *v108;
  uint64_t v109;
  uint64_t v110;
  int v111;
  uint64_t v112;
  int v113;
  int v114;
  uint64_t v115;
  int v116;
  double v117;
  int v118;
  uint64_t v119;
  int v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  char *v125;
  uint64_t v126;
  unint64_t v127;
  void *v128;
  __int128 v129;
  _BYTE *v130;
  uint64_t *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  int64_t v135;
  uint64_t v136;
  int64_t v137;
  uint64_t v138;
  _BYTE v139[2200];
  NewsEngagement::EngagementUpsellPlacement_optional v140;
  _BYTE v141[2200];
  uint64_t v142;
  void *v143;
  _BYTE v144[2184];
  Swift::OpaquePointer v145;
  uint64_t v146;
  void *v147;
  uint64_t v148;
  _QWORD v149[2];
  uint64_t v150;
  uint64_t v151;
  void *v152;
  uint64_t v153;
  uint64_t v154[278];

  v1 = MEMORY[0x1E0C80A78](a1);
  v3 = v2;
  v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BA1B9050(0, &qword_1ED5AF328, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4DC8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v6 = MEMORY[0x1E0C80A78](v5);
  v125 = (char *)v107 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v124 = (char *)v107 - v8;
  sub_1BA1B9050(0, (unint64_t *)&qword_1ED5AF438, (uint64_t (*)(uint64_t))type metadata accessor for EngagementUpsellTrigger, v4);
  MEMORY[0x1E0C80A78](v9);
  v126 = (uint64_t)v107 - v10;
  if (!*(_QWORD *)(v1 + 16))
  {
    v15 = 0;
    v123 = 0;
    goto LABEL_20;
  }
  v11 = sub_1BA1B9E30(0x567377654E6E696DLL, 0xEE006E6F69737265);
  if ((v12 & 1) == 0)
  {
    v123 = 0;
    v15 = 0;
    if (*(_QWORD *)(v1 + 16))
      goto LABEL_12;
LABEL_20:
    v128 = 0;
    v122 = 0;
LABEL_21:
    v117 = 0.0;
    v21 = 1;
    goto LABEL_22;
  }
  sub_1BA1B9D7C(*(_QWORD *)(v1 + 56) + 32 * v11, (uint64_t)v154);
  v13 = swift_dynamicCast();
  v14 = v142;
  if (!v13)
    v14 = 0;
  v123 = v14;
  if (v13)
    v15 = v143;
  else
    v15 = 0;
  if (!*(_QWORD *)(v1 + 16))
    goto LABEL_20;
LABEL_12:
  v16 = sub_1BA1B9E30(0x567377654E78616DLL, 0xEE006E6F69737265);
  if ((v17 & 1) != 0)
  {
    sub_1BA1B9D7C(*(_QWORD *)(v1 + 56) + 32 * v16, (uint64_t)v154);
    v18 = swift_dynamicCast();
    v19 = v142;
    if (!v18)
      v19 = 0;
    v122 = v19;
    if (v18)
      v20 = v143;
    else
      v20 = 0;
    v128 = v20;
    if (!*(_QWORD *)(v1 + 16))
      goto LABEL_21;
  }
  else
  {
    v122 = 0;
    v128 = 0;
    if (!*(_QWORD *)(v1 + 16))
      goto LABEL_21;
  }
  v33 = sub_1BA1B9E30(0x6E6F697461727564, 0xE800000000000000);
  if ((v34 & 1) == 0)
    goto LABEL_21;
  sub_1BA1B9D7C(*(_QWORD *)(v1 + 56) + 32 * v33, (uint64_t)v154);
  v35 = swift_dynamicCast();
  v36 = v142;
  if (!v35)
    v36 = 0;
  *(_QWORD *)&v117 = v36;
  v21 = v35 ^ 1;
LABEL_22:
  v116 = v21;
  if (!*(_QWORD *)(v1 + 16))
  {
    v121 = 0;
    v120 = 1;
LABEL_34:
    v119 = 0;
    v115 = 0;
    v32 = 1;
    v118 = 1;
    goto LABEL_47;
  }
  v22 = sub_1BA1B9E30(0xD000000000000018, 0x80000001BA206A30);
  if ((v23 & 1) != 0)
  {
    sub_1BA1B9D7C(*(_QWORD *)(v1 + 56) + 32 * v22, (uint64_t)v154);
    v24 = swift_dynamicCast();
    v25 = v142;
    if (!v24)
      v25 = 0;
    v121 = v25;
    v26 = v24 ^ 1;
  }
  else
  {
    v121 = 0;
    v26 = 1;
  }
  v120 = v26;
  if (!*(_QWORD *)(v1 + 16))
    goto LABEL_34;
  v27 = sub_1BA1B9E30(0xD000000000000012, 0x80000001BA206A50);
  if ((v28 & 1) != 0)
  {
    sub_1BA1B9D7C(*(_QWORD *)(v1 + 56) + 32 * v27, (uint64_t)v154);
    v29 = swift_dynamicCast();
    v30 = v142;
    if (!v29)
      v30 = 0;
    v119 = v30;
    v31 = v29 ^ 1;
  }
  else
  {
    v119 = 0;
    v31 = 1;
  }
  v118 = v31;
  if (*(_QWORD *)(v1 + 16) && (v37 = sub_1BA1B9E30(0xD00000000000001DLL, 0x80000001BA206A70), (v38 & 1) != 0))
  {
    sub_1BA1B9D7C(*(_QWORD *)(v1 + 56) + 32 * v37, (uint64_t)v154);
    v39 = swift_dynamicCast();
    v40 = v142;
    if (!v39)
      v40 = 0;
    v115 = v40;
    v32 = v39 ^ 1;
  }
  else
  {
    v115 = 0;
    v32 = 1;
  }
LABEL_47:
  v114 = v32;
  if (*(_QWORD *)(v1 + 16)
    && (v41 = sub_1BA1B9E30(0x67696C4564696170, 0xEF7974696C696269), (v42 & 1) != 0)
    && (sub_1BA1B9D7C(*(_QWORD *)(v1 + 56) + 32 * v41, (uint64_t)v154), (swift_dynamicCast() & 1) != 0))
  {
    v43 = v142;
    v44 = v143;
    swift_bridgeObjectRetain();
    v45._countAndFlagsBits = v43;
    v45._object = v44;
    EngagementUpsellBannerPaidEligibility.init(rawValue:)(v45);
    if (LOBYTE(v154[0]) == 4)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (qword_1ED5AFB58 != -1)
        swift_once();
      v46 = sub_1BA20243C();
      __swift_project_value_buffer(v46, (uint64_t)qword_1ED5B08D0);
      swift_bridgeObjectRetain();
      v47 = sub_1BA202424();
      v48 = sub_1BA202670();
      if (!os_log_type_enabled(v47, v48))
      {

        swift_bridgeObjectRelease_n();
        goto LABEL_119;
      }
      v108 = v3;
      v49 = (uint8_t *)swift_slowAlloc();
      v50 = swift_slowAlloc();
      v154[0] = v50;
      *(_DWORD *)v49 = 136315138;
      swift_bridgeObjectRetain();
      v142 = sub_1BA1BDA3C(v43, (unint64_t)v44, v154);
      v3 = v108;
      sub_1BA2026E8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1BA1AE000, v47, v48, "Failed parsing EngagementUpsellTrigger: invalid paidEligibility %s", v49, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCD775C](v50, -1, -1);
      v51 = v49;
      goto LABEL_115;
    }
    v113 = LOBYTE(v154[0]);
    swift_bridgeObjectRelease();
    if (!*(_QWORD *)(v1 + 16))
      goto LABEL_74;
  }
  else
  {
    v113 = 4;
    if (!*(_QWORD *)(v1 + 16))
    {
LABEL_74:
      v112 = 0;
      v111 = 1;
LABEL_75:
      v127 = 0;
      v110 = 0;
      goto LABEL_76;
    }
  }
  v52 = sub_1BA1B9E30(0xD000000000000016, 0x80000001BA2069D0);
  if ((v53 & 1) != 0)
  {
    sub_1BA1B9D7C(*(_QWORD *)(v1 + 56) + 32 * v52, (uint64_t)v154);
    v54 = swift_dynamicCast();
    v55 = v142;
    if (!v54)
      v55 = 0;
    v112 = v55;
    v56 = v54 ^ 1;
  }
  else
  {
    v112 = 0;
    v56 = 1;
  }
  v111 = v56;
  if (!*(_QWORD *)(v1 + 16))
    goto LABEL_75;
  v57 = sub_1BA1B9E30(0x6F697469646E6F63, 0xE90000000000006ELL);
  if ((v58 & 1) != 0)
  {
    sub_1BA1B9D7C(*(_QWORD *)(v1 + 56) + 32 * v57, (uint64_t)v154);
    v59 = swift_dynamicCast();
    v60 = v142;
    if (!v59)
      v60 = 0;
    v110 = v60;
    if (v59)
      v61 = (unint64_t)v143;
    else
      v61 = 0;
    v127 = v61;
    if (!*(_QWORD *)(v1 + 16))
      goto LABEL_76;
  }
  else
  {
    v110 = 0;
    v127 = 0;
    if (!*(_QWORD *)(v1 + 16))
      goto LABEL_76;
  }
  v62 = sub_1BA1B9E30(0x6E656D6563616C70, 0xEA00000000007374);
  if ((v63 & 1) != 0)
  {
    sub_1BA1B9D7C(*(_QWORD *)(v1 + 56) + 32 * v62, (uint64_t)v154);
    goto LABEL_77;
  }
LABEL_76:
  memset(v154, 0, 32);
LABEL_77:
  swift_bridgeObjectRelease();
  if (!v154[3])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BA1B87E4((uint64_t)v154);
    goto LABEL_112;
  }
  v64 = MEMORY[0x1E0DEE9B8] + 8;
  sub_1BA1B6EC0(0, (unint64_t *)&qword_1ED5AF500);
  v132 = v64;
  v133 = v65;
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_112:
    if (qword_1ED5AFB58 == -1)
    {
LABEL_113:
      v97 = sub_1BA20243C();
      __swift_project_value_buffer(v97, (uint64_t)qword_1ED5B08D0);
      v47 = sub_1BA202424();
      v98 = sub_1BA202670();
      if (!os_log_type_enabled(v47, v98))
      {
LABEL_116:

LABEL_119:
        v105 = type metadata accessor for EngagementUpsellTrigger();
        return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v105 - 8) + 56))(v3, 1, 1, v105);
      }
      v99 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v99 = 0;
      _os_log_impl(&dword_1BA1AE000, v47, v98, "Failed parsing EngagementUpsellTrigger: missing placements", v99, 2u);
      v51 = v99;
LABEL_115:
      MEMORY[0x1BCCD775C](v51, -1, -1);
      goto LABEL_116;
    }
LABEL_124:
    swift_once();
    goto LABEL_113;
  }
  v107[1] = v15;
  v108 = v3;
  v67 = 0;
  v68 = *(_QWORD *)(v142 + 64);
  v134 = v142 + 64;
  v136 = v142;
  v69 = 1 << *(_BYTE *)(v142 + 32);
  v70 = -1;
  if (v69 < 64)
    v70 = ~(-1 << v69);
  v71 = v70 & v68;
  v135 = (unint64_t)(v69 + 63) >> 6;
  v72 = &v153;
  v3 = &v150;
  v73 = v144;
  v131 = &v148;
  v109 = MEMORY[0x1E0DEE9E0];
  *(_QWORD *)&v66 = 136315138;
  v129 = v66;
  v130 = v144;
  if ((v70 & v68) != 0)
    goto LABEL_85;
LABEL_86:
  v76 = v67 + 1;
  if (__OFADD__(v67, 1))
  {
    __break(1u);
LABEL_123:
    __break(1u);
    goto LABEL_124;
  }
  if (v76 < v135)
  {
    v77 = *(_QWORD *)(v134 + 8 * v76);
    v78 = v67 + 1;
    if (v77)
      goto LABEL_99;
    v78 = v67 + 2;
    if (v67 + 2 >= v135)
      goto LABEL_117;
    v77 = *(_QWORD *)(v134 + 8 * v78);
    if (v77)
      goto LABEL_99;
    v78 = v67 + 3;
    if (v67 + 3 >= v135)
      goto LABEL_117;
    v77 = *(_QWORD *)(v134 + 8 * v78);
    if (v77)
    {
LABEL_99:
      v71 = (v77 - 1) & v77;
      v137 = v78;
      for (i = __clz(__rbit64(v77)) + (v78 << 6); ; i = v74 | (v67 << 6))
      {
        v80 = *(_QWORD *)(v136 + 56);
        v81 = (uint64_t *)(*(_QWORD *)(v136 + 48) + 16 * i);
        v83 = (void *)v81[1];
        v151 = *v81;
        v82 = v151;
        v152 = v83;
        sub_1BA1B9D7C(v80 + 32 * i, (uint64_t)v72);
        v149[0] = v82;
        v149[1] = v83;
        sub_1BA1B43D0(v72, v3);
        v142 = v82;
        v143 = v83;
        sub_1BA1B9D7C((uint64_t)v3, (uint64_t)v73);
        swift_bridgeObjectRetain_n();
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v73);
        swift_bridgeObjectRetain();
        v84._countAndFlagsBits = v82;
        v84._object = v83;
        EngagementUIPlacement.init(rawValue:)(v84);
        v85 = v142;
        if (v142 == 30)
        {
          swift_bridgeObjectRelease();
        }
        else
        {
          v146 = v82;
          v147 = v83;
          sub_1BA1B9D7C((uint64_t)v3, (uint64_t)v131);
          swift_bridgeObjectRelease();
          if ((swift_dynamicCast() & 1) != 0)
          {
            EngagementUpsellPlacement.init(dictionary:)(&v140, v145);
            sub_1BA1E3DDC((uint64_t)&v140, (uint64_t)v141, &qword_1ED5AF300);
            sub_1BA1E3DDC((uint64_t)v141, (uint64_t)&v142, &qword_1ED5AF300);
            if (sub_1BA1F67C0((uint64_t)&v142) != 1)
            {
              swift_bridgeObjectRelease();
              sub_1BA1E3DDC((uint64_t)v141, (uint64_t)v139, &qword_1ED5AF300);
              memcpy(v154, v139, 0x898uLL);
              v95 = v109;
              isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              v138 = v95;
              sub_1BA1B6F10(v154, v85, isUniquelyReferenced_nonNull_native);
              v109 = v138;
              swift_bridgeObjectRelease();
              sub_1BA1B42A0((uint64_t)v149, (uint64_t (*)(_QWORD))sub_1BA1B4364);
              v67 = v137;
              if (!v71)
                goto LABEL_86;
              goto LABEL_85;
            }
          }
        }
        if (qword_1ED5AFB58 != -1)
          swift_once();
        v86 = sub_1BA20243C();
        __swift_project_value_buffer(v86, (uint64_t)qword_1ED5B08D0);
        swift_bridgeObjectRetain();
        v87 = sub_1BA202424();
        v88 = sub_1BA202670();
        if (os_log_type_enabled(v87, v88))
        {
          v89 = v3;
          v90 = v72;
          v91 = swift_slowAlloc();
          v92 = v71;
          v93 = swift_slowAlloc();
          v142 = v93;
          *(_DWORD *)v91 = v129;
          swift_bridgeObjectRetain();
          *(_QWORD *)(v91 + 4) = sub_1BA1BDA3C(v82, (unint64_t)v83, &v142);
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_1BA1AE000, v87, v88, "Could not parse %s to an EngagementUpsellPlacement object", (uint8_t *)v91, 0xCu);
          swift_arrayDestroy();
          v94 = v93;
          v71 = v92;
          MEMORY[0x1BCCD775C](v94, -1, -1);
          v72 = v90;
          v3 = v89;
          v73 = v130;
          MEMORY[0x1BCCD775C](v91, -1, -1);
        }
        else
        {
          swift_bridgeObjectRelease_n();
        }

        sub_1BA1B42A0((uint64_t)v149, (uint64_t (*)(_QWORD))sub_1BA1B4364);
        v67 = v137;
        if (!v71)
          goto LABEL_86;
LABEL_85:
        v74 = __clz(__rbit64(v71));
        v71 &= v71 - 1;
        v137 = v67;
      }
    }
    v79 = v67 + 4;
    if (v67 + 4 < v135)
    {
      v77 = *(_QWORD *)(v134 + 8 * v79);
      if (v77)
      {
        v78 = v67 + 4;
        goto LABEL_99;
      }
      while (1)
      {
        v78 = v79 + 1;
        if (__OFADD__(v79, 1))
          goto LABEL_123;
        if (v78 >= v135)
          break;
        v77 = *(_QWORD *)(v134 + 8 * v78);
        ++v79;
        if (v77)
          goto LABEL_99;
      }
    }
  }
LABEL_117:
  swift_release();
  v100 = (uint64_t)v124;
  sub_1BA20240C();
  v101 = (uint64_t)v125;
  sub_1BA20240C();
  LOBYTE(v142) = v113;
  v102 = v126;
  sub_1BA1B88F4(v100, v101, v117, v116, v121, v120, v119, v118, v126, v115, v114, (unsigned __int8 *)&v142, v112, v111, v110, v127, v109);
  v103 = type metadata accessor for EngagementUpsellTrigger();
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v103 - 8) + 56))(v102, 0, 1, v103);
  v3 = v108;
  type metadata accessor for EngagementUpsellTrigger();
  v104 = *(_QWORD *)(v103 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v104 + 48))(v102, 1, v103))
  {
    sub_1BA1F74C0(v102, (unint64_t *)&qword_1ED5AF438, (uint64_t (*)(uint64_t))type metadata accessor for EngagementUpsellTrigger);
    goto LABEL_119;
  }
  sub_1BA1B4A5C(v102, (uint64_t)v3);
  return (*(uint64_t (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v104 + 56))(v3, 0, 1, v103);
}

uint64_t sub_1BA1B6C08(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

NewsEngagement::EngagementUIPlacement_optional __swiftcall EngagementUIPlacement.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  NewsEngagement::EngagementUIPlacement_optional result;
  char v5;
  char v6;

  v2 = v1;
  v3 = sub_1BA202994();
  result.value = swift_bridgeObjectRelease();
  v5 = 0;
  v6 = 12;
  switch(v3)
  {
    case 0:
      goto LABEL_14;
    case 1:
      v5 = 1;
      goto LABEL_14;
    case 2:
      v5 = 2;
      goto LABEL_14;
    case 3:
      v5 = 3;
      goto LABEL_14;
    case 4:
      v5 = 4;
      goto LABEL_14;
    case 5:
      v5 = 5;
      goto LABEL_14;
    case 6:
      v5 = 6;
      goto LABEL_14;
    case 7:
      v5 = 7;
      goto LABEL_14;
    case 8:
      v5 = 8;
      goto LABEL_14;
    case 9:
      v5 = 9;
      goto LABEL_14;
    case 10:
      v5 = 10;
      goto LABEL_14;
    case 11:
      v5 = 11;
LABEL_14:
      v6 = v5;
      break;
    case 12:
      break;
    case 13:
      v6 = 13;
      break;
    case 14:
      v6 = 14;
      break;
    case 15:
      v6 = 15;
      break;
    case 16:
      v6 = 16;
      break;
    case 17:
      v6 = 17;
      break;
    case 18:
      v6 = 18;
      break;
    case 19:
      v6 = 19;
      break;
    case 20:
      v6 = 20;
      break;
    case 21:
      v6 = 21;
      break;
    case 22:
      v6 = 22;
      break;
    case 23:
      v6 = 23;
      break;
    case 24:
      v6 = 24;
      break;
    case 25:
      v6 = 25;
      break;
    case 26:
      v6 = 26;
      break;
    case 27:
      v6 = 27;
      break;
    case 28:
      v6 = 28;
      break;
    case 29:
      v6 = 29;
      break;
    default:
      v6 = 30;
      break;
  }
  *v2 = v6;
  return result;
}

uint64_t storeEnumTagSinglePayload for EngagementUpsellTrigger()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1BA1B6EC0(uint64_t a1, unint64_t *a2)
{
  unint64_t v3;
  uint64_t v4;

  if (!*a2)
  {
    v3 = sub_1BA2024F0();
    if (!v4)
      atomic_store(v3, a2);
  }
}

_QWORD *sub_1BA1B6F10(_QWORD *a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *result;
  uint64_t v18;
  char v19;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v10 = sub_1BA1B9DB8(a2);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
        return sub_1BA1D6994(a1, (_QWORD *)(v16[7] + 2200 * v10));
      return sub_1BA1B7020(v10, a2, a1, v16);
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_1BA1F8830();
      goto LABEL_7;
    }
    sub_1BA1B708C(v13);
    v18 = sub_1BA1B9DB8(a2);
    if ((v14 & 1) == (v19 & 1))
    {
      v10 = v18;
      v16 = *v4;
      if ((v14 & 1) != 0)
        return sub_1BA1D6994(a1, (_QWORD *)(v16[7] + 2200 * v10));
      return sub_1BA1B7020(v10, a2, a1, v16);
    }
  }
  result = (_QWORD *)sub_1BA2029AC();
  __break(1u);
  return result;
}

void *sub_1BA1B7020(unint64_t a1, char a2, void *__src, _QWORD *a4)
{
  void *result;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(_BYTE *)(a4[6] + a1) = a2;
  result = memcpy((void *)(a4[7] + 2200 * a1), __src, 0x898uLL);
  v6 = a4[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a4[2] = v8;
  return result;
}

uint64_t sub_1BA1B708C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  _QWORD *v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  int64_t v35;
  _QWORD *v36;
  uint64_t i;
  char v38;
  _BYTE v39[312];
  _BYTE v40[312];
  _BYTE v41[312];
  _BYTE v42[312];
  _BYTE v43[312];
  _BYTE v44[312];
  _QWORD __src[275];
  _BYTE v46[312];
  _BYTE v47[312];
  _BYTE v48[312];
  _BYTE v49[312];
  _BYTE v50[312];
  _BYTE v51[312];
  _BYTE v52[320];

  MEMORY[0x1E0C80A78](a1);
  v2 = v1;
  v4 = v3;
  v5 = *v1;
  sub_1BA1B76EC(0, &qword_1ED5AF568, (uint64_t)&type metadata for EngagementUpsellPlacement, (uint64_t (*)(uint64_t, ValueMetadata *, uint64_t, unint64_t))MEMORY[0x1E0DECD58]);
  v38 = v4;
  v6 = sub_1BA202838();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v36 = (_QWORD *)(v5 + 64);
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v34 = v1;
  v35 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  for (i = v5; ; v5 = i)
  {
    if (v10)
    {
      v15 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v16 = v15 | (v13 << 6);
      if ((v38 & 1) != 0)
        goto LABEL_10;
      goto LABEL_23;
    }
    v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v35)
      break;
    v23 = v36;
    v24 = v36[v22];
    ++v13;
    if (!v24)
    {
      v13 = v22 + 1;
      if (v22 + 1 >= v35)
        goto LABEL_33;
      v24 = v36[v13];
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v35)
        {
LABEL_33:
          swift_release();
          v2 = v34;
          if ((v38 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v24 = v36[v25];
        if (!v24)
        {
          while (1)
          {
            v13 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_42;
            if (v13 >= v35)
              goto LABEL_33;
            v24 = v36[v13];
            ++v25;
            if (v24)
              goto LABEL_22;
          }
        }
        v13 = v25;
      }
    }
LABEL_22:
    v10 = (v24 - 1) & v24;
    v16 = __clz(__rbit64(v24)) + (v13 << 6);
    if ((v38 & 1) != 0)
    {
LABEL_10:
      v17 = *(_BYTE *)(*(_QWORD *)(v5 + 48) + v16);
      v18 = *(_QWORD *)(v5 + 56) + 2200 * v16;
      v19 = *(_QWORD *)v18;
      v20 = *(_BYTE *)(v18 + 8);
      sub_1BA1E3DDC(v18 + 16, (uint64_t)v39, &qword_1ED5AF2D0);
      sub_1BA1E3DDC(v18 + 328, (uint64_t)v40, &qword_1ED5AF2D0);
      sub_1BA1E3DDC(v18 + 640, (uint64_t)v41, &qword_1ED5AF2D0);
      sub_1BA1E3DDC(v18 + 952, (uint64_t)v42, &qword_1ED5AF2D0);
      sub_1BA1E3DDC(v18 + 1264, (uint64_t)v43, &qword_1ED5AF2D0);
      sub_1BA1E3DDC(v18 + 1576, (uint64_t)v44, &qword_1ED5AF2D0);
      sub_1BA1E3DDC(v18 + 1888, (uint64_t)__src, &qword_1ED5AF2D0);
      sub_1BA1E3DDC((uint64_t)v39, (uint64_t)v46, &qword_1ED5AF2D0);
      sub_1BA1E3DDC((uint64_t)v40, (uint64_t)v47, &qword_1ED5AF2D0);
      sub_1BA1E3DDC((uint64_t)v41, (uint64_t)v48, &qword_1ED5AF2D0);
      sub_1BA1E3DDC((uint64_t)v42, (uint64_t)v49, &qword_1ED5AF2D0);
      sub_1BA1E3DDC((uint64_t)v43, (uint64_t)v50, &qword_1ED5AF2D0);
      sub_1BA1E3DDC((uint64_t)v44, (uint64_t)v51, &qword_1ED5AF2D0);
      v21 = __src;
      goto LABEL_24;
    }
LABEL_23:
    v17 = *(_BYTE *)(*(_QWORD *)(v5 + 48) + v16);
    memcpy(__src, (const void *)(*(_QWORD *)(v5 + 56) + 2200 * v16), sizeof(__src));
    v20 = __src[1];
    v19 = __src[0];
    sub_1BA1F7648((uint64_t)__src, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_1BA1B6C08);
    sub_1BA1E3DDC((uint64_t)&__src[2], (uint64_t)v46, &qword_1ED5AF2D0);
    sub_1BA1E3DDC((uint64_t)&__src[41], (uint64_t)v47, &qword_1ED5AF2D0);
    sub_1BA1E3DDC((uint64_t)&__src[80], (uint64_t)v48, &qword_1ED5AF2D0);
    sub_1BA1E3DDC((uint64_t)&__src[119], (uint64_t)v49, &qword_1ED5AF2D0);
    sub_1BA1E3DDC((uint64_t)&__src[158], (uint64_t)v50, &qword_1ED5AF2D0);
    sub_1BA1E3DDC((uint64_t)&__src[197], (uint64_t)v51, &qword_1ED5AF2D0);
    v21 = &__src[236];
LABEL_24:
    sub_1BA1E3DDC((uint64_t)v21, (uint64_t)v52, &qword_1ED5AF2D0);
    sub_1BA202A00();
    v44[0] = v17;
    EngagementUIPlacement.rawValue.getter();
    sub_1BA202538();
    swift_bridgeObjectRelease();
    result = sub_1BA202A18();
    v26 = -1 << *(_BYTE *)(v7 + 32);
    v27 = result & ~v26;
    v28 = v27 >> 6;
    if (((-1 << v27) & ~*(_QWORD *)(v11 + 8 * (v27 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v27) & ~*(_QWORD *)(v11 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v29 = 0;
      v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v31 = v28 == v30;
        if (v28 == v30)
          v28 = 0;
        v29 |= v31;
        v32 = *(_QWORD *)(v11 + 8 * v28);
      }
      while (v32 == -1);
      v14 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    __src[0] = v19;
    LOBYTE(__src[1]) = v20;
    sub_1BA1E3DDC((uint64_t)v46, (uint64_t)&__src[2], &qword_1ED5AF2D0);
    sub_1BA1E3DDC((uint64_t)v47, (uint64_t)&__src[41], &qword_1ED5AF2D0);
    sub_1BA1E3DDC((uint64_t)v48, (uint64_t)&__src[80], &qword_1ED5AF2D0);
    sub_1BA1E3DDC((uint64_t)v49, (uint64_t)&__src[119], &qword_1ED5AF2D0);
    sub_1BA1E3DDC((uint64_t)v50, (uint64_t)&__src[158], &qword_1ED5AF2D0);
    sub_1BA1E3DDC((uint64_t)v51, (uint64_t)&__src[197], &qword_1ED5AF2D0);
    sub_1BA1E3DDC((uint64_t)v52, (uint64_t)&__src[236], &qword_1ED5AF2D0);
    *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(_BYTE *)(*(_QWORD *)(v7 + 48) + v14) = v17;
    result = (uint64_t)memcpy((void *)(*(_QWORD *)(v7 + 56) + 2200 * v14), __src, 0x898uLL);
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v2 = v34;
  v23 = v36;
  if ((v38 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v33 = 1 << *(_BYTE *)(v5 + 32);
  if (v33 >= 64)
    bzero(v23, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v33;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v2 = v7;
  return result;
}

void sub_1BA1B76EC(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(uint64_t, ValueMetadata *, uint64_t, unint64_t))
{
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    v8 = sub_1BA1C1D10();
    v9 = a4(a1, &type metadata for EngagementUIPlacement, a3, v8);
    if (!v10)
      atomic_store(v9, a2);
  }
}

uint64_t sub_1BA1B7750(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void __swiftcall EngagementUpsellPlacement.init(dictionary:)(NewsEngagement::EngagementUpsellPlacement_optional *__return_ptr retstr, Swift::OpaquePointer dictionary)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  int v7;
  uint64_t v8;
  int v9;
  unint64_t v10;
  char v11;
  char v12;
  _QWORD *v13;
  unint64_t v14;
  char v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  const char *v20;
  _QWORD *v21;
  unint64_t v22;
  char v23;
  uint64_t v24;
  _QWORD *v25;
  unint64_t v26;
  char v27;
  uint64_t v28;
  _QWORD *v29;
  unint64_t v30;
  char v31;
  uint64_t v32;
  _QWORD *v33;
  unint64_t v34;
  char v35;
  uint64_t v36;
  _QWORD *v37;
  unint64_t v38;
  char v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  uint64_t v45;
  NewsEngagement::EngagementUpsellBanner_optional v46;
  Swift::OpaquePointer v47;
  _QWORD __src[275];
  _QWORD __dst[275];
  NewsEngagement::EngagementUpsellBanner_optional v50;
  __int128 v51;
  __int128 v52;
  NewsEngagement::EngagementUpsellBanner_optional v53;
  NewsEngagement::EngagementUpsellBanner_optional dictionarya;
  NewsEngagement::EngagementUpsellBanner_optional v55;
  NewsEngagement::EngagementUpsellBanner_optional v56;
  NewsEngagement::EngagementUpsellBanner_optional v57;
  _BYTE v58[312];
  _BYTE v59[32];

  v2 = MEMORY[0x1E0C80A78](dictionary._rawValue);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    v8 = 0;
    v9 = 1;
    goto LABEL_13;
  }
  v5 = sub_1BA1B9E30(0x6E6F6973726576, 0xE700000000000000);
  if ((v6 & 1) == 0)
  {
    v8 = 0;
    v9 = 1;
    if (*(_QWORD *)(v2 + 16))
      goto LABEL_10;
LABEL_13:
    v12 = 0;
LABEL_14:
    sub_1BA1E3DA0((uint64_t)__dst);
    v13 = __dst;
    goto LABEL_15;
  }
  sub_1BA1B9D7C(*(_QWORD *)(v2 + 56) + 32 * v5, (uint64_t)__dst);
  v7 = swift_dynamicCast();
  if (v7)
    v8 = __src[0];
  else
    v8 = 0;
  v9 = v7 ^ 1;
  if (!*(_QWORD *)(v2 + 16))
    goto LABEL_13;
LABEL_10:
  v10 = sub_1BA1B9E30(0xD000000000000016, 0x80000001BA206840);
  if ((v11 & 1) != 0)
  {
    sub_1BA1B9D7C(*(_QWORD *)(v2 + 56) + 32 * v10, (uint64_t)v59);
    v12 = swift_dynamicCast() & LOBYTE(__dst[0]);
    if (!*(_QWORD *)(v2 + 16))
      goto LABEL_14;
  }
  else
  {
    v12 = 0;
    if (!*(_QWORD *)(v2 + 16))
      goto LABEL_14;
  }
  v43 = sub_1BA1B9E30(0xD000000000000017, 0x80000001BA206860);
  if ((v44 & 1) == 0)
    goto LABEL_14;
  sub_1BA1B9D7C(*(_QWORD *)(v2 + 56) + 32 * v43, (uint64_t)&v56);
  sub_1BA1B888C();
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_14;
  EngagementUpsellBanner.init(dictionary:)(&v57, (Swift::OpaquePointer)v55.value.title.value._countAndFlagsBits);
  sub_1BA1E3DDC((uint64_t)&v57, (uint64_t)__src, &qword_1ED5AF2D0);
  sub_1BA1E3DDC((uint64_t)__src, (uint64_t)__dst, &qword_1ED5AF2D0);
  if (sub_1BA1CD968((uint64_t)__dst) == 1)
  {
    swift_bridgeObjectRelease();
    if (qword_1ED5AFB58 != -1)
      swift_once();
    v45 = sub_1BA20243C();
    __swift_project_value_buffer(v45, (uint64_t)qword_1ED5B08D0);
    v17 = sub_1BA202424();
    v18 = sub_1BA202670();
    if (!os_log_type_enabled(v17, v18))
      goto LABEL_86;
    v19 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v19 = 0;
    v20 = "Failed parsing baseBannerConfiguration";
    goto LABEL_85;
  }
  v13 = __src;
LABEL_15:
  sub_1BA1E3DDC((uint64_t)v13, (uint64_t)v58, &qword_1ED5AF2D0);
  if (*(_QWORD *)(v2 + 16)
    && (v14 = sub_1BA1B9E30(0xD00000000000001BLL, 0x80000001BA206880), (v15 & 1) != 0)
    && (sub_1BA1B9D7C(*(_QWORD *)(v2 + 56) + 32 * v14, (uint64_t)&v55), sub_1BA1B888C(), (swift_dynamicCast() & 1) != 0))
  {
    EngagementUpsellBanner.init(dictionary:)(&v56, (Swift::OpaquePointer)dictionarya.value.title.value._countAndFlagsBits);
    sub_1BA1E3DDC((uint64_t)&v56, (uint64_t)__src, &qword_1ED5AF2D0);
    sub_1BA1E3DDC((uint64_t)__src, (uint64_t)__dst, &qword_1ED5AF2D0);
    if (sub_1BA1CD968((uint64_t)__dst) == 1)
    {
      sub_1BA1E3D00((uint64_t)v58, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA1B7750);
      swift_bridgeObjectRelease();
      if (qword_1ED5AFB58 != -1)
        swift_once();
      v16 = sub_1BA20243C();
      __swift_project_value_buffer(v16, (uint64_t)qword_1ED5B08D0);
      v17 = sub_1BA202424();
      v18 = sub_1BA202670();
      if (!os_log_type_enabled(v17, v18))
        goto LABEL_86;
      v19 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v19 = 0;
      v20 = "Failed parsing newsPlusBannerConfiguration";
LABEL_85:
      _os_log_impl(&dword_1BA1AE000, v17, v18, v20, v19, 2u);
      MEMORY[0x1BCCD775C](v19, -1, -1);
LABEL_86:

      sub_1BA1E3E28(__dst);
      goto LABEL_87;
    }
    v21 = __src;
  }
  else
  {
    sub_1BA1E3DA0((uint64_t)__dst);
    v21 = __dst;
  }
  sub_1BA1E3DDC((uint64_t)v21, (uint64_t)&v57, &qword_1ED5AF2D0);
  if (*(_QWORD *)(v2 + 16)
    && (v22 = sub_1BA1B9E30(0xD00000000000001ALL, 0x80000001BA2068A0), (v23 & 1) != 0)
    && (sub_1BA1B9D7C(*(_QWORD *)(v2 + 56) + 32 * v22, (uint64_t)&dictionarya),
        sub_1BA1B888C(),
        (swift_dynamicCast() & 1) != 0))
  {
    EngagementUpsellBanner.init(dictionary:)(&v55, (Swift::OpaquePointer)v53.value.title.value._countAndFlagsBits);
    sub_1BA1E3DDC((uint64_t)&v55, (uint64_t)__src, &qword_1ED5AF2D0);
    sub_1BA1E3DDC((uint64_t)__src, (uint64_t)__dst, &qword_1ED5AF2D0);
    if (sub_1BA1CD968((uint64_t)__dst) == 1)
    {
      sub_1BA1E3D00((uint64_t)&v57, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA1B7750);
      sub_1BA1E3D00((uint64_t)v58, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA1B7750);
      swift_bridgeObjectRelease();
      if (qword_1ED5AFB58 != -1)
        swift_once();
      v24 = sub_1BA20243C();
      __swift_project_value_buffer(v24, (uint64_t)qword_1ED5B08D0);
      v17 = sub_1BA202424();
      v18 = sub_1BA202670();
      if (!os_log_type_enabled(v17, v18))
        goto LABEL_86;
      v19 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v19 = 0;
      v20 = "Failed parsing savingsBannerConfiguration";
      goto LABEL_85;
    }
    v25 = __src;
  }
  else
  {
    sub_1BA1E3DA0((uint64_t)__dst);
    v25 = __dst;
  }
  sub_1BA1E3DDC((uint64_t)v25, (uint64_t)&v56, &qword_1ED5AF2D0);
  if (*(_QWORD *)(v2 + 16)
    && (v26 = sub_1BA1B9E30(0xD000000000000021, 0x80000001BA2068C0), (v27 & 1) != 0)
    && (sub_1BA1B9D7C(*(_QWORD *)(v2 + 56) + 32 * v26, (uint64_t)&v53), sub_1BA1B888C(), (swift_dynamicCast() & 1) != 0))
  {
    EngagementUpsellBanner.init(dictionary:)(&dictionarya, (Swift::OpaquePointer)v50.value.title.value._countAndFlagsBits);
    sub_1BA1E3DDC((uint64_t)&dictionarya, (uint64_t)__src, &qword_1ED5AF2D0);
    sub_1BA1E3DDC((uint64_t)__src, (uint64_t)__dst, &qword_1ED5AF2D0);
    if (sub_1BA1CD968((uint64_t)__dst) == 1)
    {
      sub_1BA1E3D00((uint64_t)&v56, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA1B7750);
      sub_1BA1E3D00((uint64_t)&v57, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA1B7750);
      sub_1BA1E3D00((uint64_t)v58, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA1B7750);
      swift_bridgeObjectRelease();
      if (qword_1ED5AFB58 != -1)
        swift_once();
      v28 = sub_1BA20243C();
      __swift_project_value_buffer(v28, (uint64_t)qword_1ED5B08D0);
      v17 = sub_1BA202424();
      v18 = sub_1BA202670();
      if (!os_log_type_enabled(v17, v18))
        goto LABEL_86;
      v19 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v19 = 0;
      v20 = "Failed parsing priceReductionBannerConfiguration";
      goto LABEL_85;
    }
    v29 = __src;
  }
  else
  {
    sub_1BA1E3DA0((uint64_t)__dst);
    v29 = __dst;
  }
  sub_1BA1E3DDC((uint64_t)v29, (uint64_t)&v55, &qword_1ED5AF2D0);
  if (*(_QWORD *)(v2 + 16)
    && (v30 = sub_1BA1B9E30(0xD00000000000001CLL, 0x80000001BA2068F0), (v31 & 1) != 0)
    && (sub_1BA1B9D7C(*(_QWORD *)(v2 + 56) + 32 * v30, (uint64_t)&v50), sub_1BA1B888C(), (swift_dynamicCast() & 1) != 0))
  {
    EngagementUpsellBanner.init(dictionary:)(&v53, (Swift::OpaquePointer)v46.value.title.value._countAndFlagsBits);
    sub_1BA1E3DDC((uint64_t)&v53, (uint64_t)__src, &qword_1ED5AF2D0);
    sub_1BA1E3DDC((uint64_t)__src, (uint64_t)__dst, &qword_1ED5AF2D0);
    if (sub_1BA1CD968((uint64_t)__dst) == 1)
    {
      sub_1BA1E3D00((uint64_t)&v55, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA1B7750);
      sub_1BA1E3D00((uint64_t)&v56, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA1B7750);
      sub_1BA1E3D00((uint64_t)&v57, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA1B7750);
      sub_1BA1E3D00((uint64_t)v58, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA1B7750);
      swift_bridgeObjectRelease();
      if (qword_1ED5AFB58 != -1)
        swift_once();
      v32 = sub_1BA20243C();
      __swift_project_value_buffer(v32, (uint64_t)qword_1ED5B08D0);
      v17 = sub_1BA202424();
      v18 = sub_1BA202670();
      if (!os_log_type_enabled(v17, v18))
        goto LABEL_86;
      v19 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v19 = 0;
      v20 = "Failed parsing bestValueBannerConfiguration";
      goto LABEL_85;
    }
    v33 = __src;
  }
  else
  {
    sub_1BA1E3DA0((uint64_t)__dst);
    v33 = __dst;
  }
  sub_1BA1E3DDC((uint64_t)v33, (uint64_t)&dictionarya, &qword_1ED5AF2D0);
  if (*(_QWORD *)(v2 + 16)
    && (v34 = sub_1BA1B9E30(0xD00000000000001DLL, 0x80000001BA206910), (v35 & 1) != 0)
    && (sub_1BA1B9D7C(*(_QWORD *)(v2 + 56) + 32 * v34, (uint64_t)&v46), sub_1BA1B888C(), (swift_dynamicCast() & 1) != 0))
  {
    EngagementUpsellBanner.init(dictionary:)(&v50, (Swift::OpaquePointer)v51);
    sub_1BA1E3DDC((uint64_t)&v50, (uint64_t)__src, &qword_1ED5AF2D0);
    sub_1BA1E3DDC((uint64_t)__src, (uint64_t)__dst, &qword_1ED5AF2D0);
    if (sub_1BA1CD968((uint64_t)__dst) == 1)
    {
      sub_1BA1E3D00((uint64_t)&dictionarya, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA1B7750);
      sub_1BA1E3D00((uint64_t)&v55, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA1B7750);
      sub_1BA1E3D00((uint64_t)&v56, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA1B7750);
      sub_1BA1E3D00((uint64_t)&v57, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA1B7750);
      sub_1BA1E3D00((uint64_t)v58, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA1B7750);
      swift_bridgeObjectRelease();
      if (qword_1ED5AFB58 != -1)
        swift_once();
      v36 = sub_1BA20243C();
      __swift_project_value_buffer(v36, (uint64_t)qword_1ED5B08D0);
      v17 = sub_1BA202424();
      v18 = sub_1BA202670();
      if (!os_log_type_enabled(v17, v18))
        goto LABEL_86;
      v19 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v19 = 0;
      v20 = "Failed parsing suggestionBannerConfiguration";
      goto LABEL_85;
    }
    v37 = __src;
  }
  else
  {
    sub_1BA1E3DA0((uint64_t)__dst);
    v37 = __dst;
  }
  sub_1BA1E3DDC((uint64_t)v37, (uint64_t)&v53, &qword_1ED5AF2D0);
  if (*(_QWORD *)(v2 + 16) && (v38 = sub_1BA1B9E30(0xD000000000000023, 0x80000001BA206930), (v39 & 1) != 0))
  {
    sub_1BA1B9D7C(*(_QWORD *)(v2 + 56) + 32 * v38, (uint64_t)&v51);
  }
  else
  {
    v51 = 0u;
    v52 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v52 + 1))
  {
    sub_1BA1B87E4((uint64_t)&v51);
    goto LABEL_72;
  }
  sub_1BA1B888C();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_72:
    sub_1BA1E3DA0((uint64_t)__dst);
    v41 = __dst;
    goto LABEL_73;
  }
  EngagementUpsellBanner.init(dictionary:)(&v46, v47);
  sub_1BA1E3DDC((uint64_t)&v46, (uint64_t)__src, &qword_1ED5AF2D0);
  sub_1BA1E3DDC((uint64_t)__src, (uint64_t)__dst, &qword_1ED5AF2D0);
  if (sub_1BA1CD968((uint64_t)__dst) == 1)
  {
    sub_1BA1E3D00((uint64_t)&v53, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA1B7750);
    sub_1BA1E3D00((uint64_t)&dictionarya, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA1B7750);
    sub_1BA1E3D00((uint64_t)&v55, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA1B7750);
    sub_1BA1E3D00((uint64_t)&v56, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA1B7750);
    sub_1BA1E3D00((uint64_t)&v57, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA1B7750);
    sub_1BA1E3D00((uint64_t)v58, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA1B7750);
    if (qword_1ED5AFB58 != -1)
      swift_once();
    v40 = sub_1BA20243C();
    __swift_project_value_buffer(v40, (uint64_t)qword_1ED5B08D0);
    v17 = sub_1BA202424();
    v18 = sub_1BA202670();
    if (!os_log_type_enabled(v17, v18))
      goto LABEL_86;
    v19 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v19 = 0;
    v20 = "Failed parsing newsPlusViaOfferBannerConfiguration";
    goto LABEL_85;
  }
  v41 = __src;
LABEL_73:
  sub_1BA1E3DDC((uint64_t)v41, (uint64_t)&v50, &qword_1ED5AF2D0);
  if (v9)
    v42 = 0;
  else
    v42 = v8;
  __src[0] = v42;
  LOBYTE(__src[1]) = v12;
  sub_1BA1E3DDC((uint64_t)v58, (uint64_t)&__src[2], &qword_1ED5AF2D0);
  sub_1BA1E3DDC((uint64_t)&v57, (uint64_t)&__src[41], &qword_1ED5AF2D0);
  sub_1BA1E3DDC((uint64_t)&v56, (uint64_t)&__src[80], &qword_1ED5AF2D0);
  sub_1BA1E3DDC((uint64_t)&v55, (uint64_t)&__src[119], &qword_1ED5AF2D0);
  sub_1BA1E3DDC((uint64_t)&dictionarya, (uint64_t)&__src[158], &qword_1ED5AF2D0);
  sub_1BA1E3DDC((uint64_t)&v53, (uint64_t)&__src[197], &qword_1ED5AF2D0);
  sub_1BA1E3DDC((uint64_t)&v50, (uint64_t)&__src[236], &qword_1ED5AF2D0);
  memcpy(__dst, __src, sizeof(__dst));
  nullsub_1(__dst);
LABEL_87:
  sub_1BA1E3DDC((uint64_t)__dst, v4, &qword_1ED5AF300);
}

uint64_t sub_1BA1B87E4(uint64_t a1)
{
  uint64_t v2;

  sub_1BA1B57B4(0, (unint64_t *)&qword_1ED5AF5B0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1BA1B8834()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED5AF5B0)
  {
    v0 = sub_1BA2026DC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED5AF5B0);
  }
}

void sub_1BA1B888C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED5AF500)
  {
    v0 = sub_1BA2024F0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED5AF500);
  }
}

uint64_t sub_1BA1B88F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, double a3@<X2>, int a4@<W3>, uint64_t a5@<X4>, int a6@<W5>, uint64_t a7@<X6>, int a8@<W7>, uint64_t a9@<X8>, uint64_t a10, unsigned __int8 a11, unsigned __int8 *a12, uint64_t a13, unsigned __int8 a14, uint64_t a15, unint64_t a16, uint64_t a17)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  int *v31;
  uint64_t v32;
  uint64_t v33;
  unsigned int (*v34)(char *, uint64_t, uint64_t);
  void (*v35)(char *, char *, uint64_t);
  char *v36;
  uint64_t v37;
  double v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  void *v47;
  void *v48;
  id v49;
  id v50;
  id v51;
  uint64_t (*v52)(uint64_t);
  uint64_t result;
  id v54;
  void *v55;
  uint64_t v56;
  NSObject *v57;
  os_log_type_t v58;
  uint8_t *v59;
  void *v60;
  uint64_t (*v61)(uint64_t);
  uint64_t (*v62)(uint64_t);
  uint64_t v63;
  int v64;
  int v65;
  uint64_t v66;
  char *v67;
  int v68;
  double v69;
  int v70;
  int v71;
  uint64_t v72;
  uint64_t v73;
  int v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  id v79[6];

  v74 = a8;
  v72 = a5;
  v73 = a7;
  v70 = a4;
  v71 = a6;
  v69 = a3;
  v75 = a2;
  v76 = a1;
  v79[4] = *(id *)MEMORY[0x1E0C80C00];
  sub_1BA1B9050(0, &qword_1ED5AF328, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4DC8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v19 = MEMORY[0x1E0C80A78](v18);
  v21 = (char *)&v63 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v23 = (char *)&v63 - v22;
  v24 = sub_1BA202400();
  v25 = *(_QWORD *)(v24 - 8);
  v26 = MEMORY[0x1E0C80A78](v24);
  v67 = (char *)&v63 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v26);
  v29 = (char *)&v63 - v28;
  v30 = sub_1BA20228C();
  MEMORY[0x1E0C80A78](v30);
  v68 = *a12;
  v31 = (int *)type metadata accessor for EngagementUpsellTrigger();
  v32 = v31[14];
  sub_1BA202280();
  sub_1BA2022A4();
  swift_allocObject();
  v33 = sub_1BA202298();
  v77 = a9;
  *(_QWORD *)(a9 + v32) = v33;
  sub_1BA1B90A8(v76, (uint64_t)v23);
  v34 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48);
  if (v34(v23, 1, v24) == 1)
  {
    sub_1BA2023F4();
    sub_1BA1F74C0((uint64_t)v23, &qword_1ED5AF328, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4DC8]);
    v35 = *(void (**)(char *, char *, uint64_t))(v25 + 32);
  }
  else
  {
    v35 = *(void (**)(char *, char *, uint64_t))(v25 + 32);
    v35(v29, v23, v24);
  }
  v66 = a13;
  v64 = a11;
  v65 = a14;
  v35((char *)v77, v29, v24);
  sub_1BA1B90A8(v75, (uint64_t)v21);
  if (v34(v21, 1, v24) == 1)
  {
    v36 = v67;
    sub_1BA2023E8();
    sub_1BA1F74C0((uint64_t)v21, &qword_1ED5AF328, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4DC8]);
  }
  else
  {
    v36 = v67;
    v35(v67, v21, v24);
  }
  v37 = v77;
  v35((char *)(v77 + v31[5]), v36, v24);
  v38 = v69;
  if ((v70 & 1) != 0)
    v38 = 1.79769313e308;
  *(double *)(v37 + v31[6]) = v38;
  v39 = 0x7FFFFFFFFFFFFFFFLL;
  if ((v71 & 1) == 0)
    v39 = v72;
  *(_QWORD *)(v37 + v31[7]) = v39;
  *(_QWORD *)(v37 + v31[13]) = a17;
  v40 = v37 + v31[9];
  *(_QWORD *)v40 = v73;
  *(_BYTE *)(v40 + 8) = v74 & 1;
  v41 = v37 + v31[8];
  *(_QWORD *)v41 = a10;
  *(_BYTE *)(v41 + 8) = v64 & 1;
  v42 = v68;
  if (v68 == 4)
    v42 = 0;
  *(_BYTE *)(v37 + v31[10]) = v42;
  v43 = v66;
  if ((v65 & 1) != 0)
    v43 = 0;
  *(_QWORD *)(v37 + v31[11]) = v43;
  if (!a16)
  {
    v52 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4DC8];
    sub_1BA1F74C0(v75, &qword_1ED5AF328, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4DC8]);
    result = sub_1BA1F74C0(v76, &qword_1ED5AF328, v52);
    *(_QWORD *)(v37 + v31[12]) = 0xF000000000000007;
    return result;
  }
  swift_bridgeObjectRetain();
  v44 = sub_1BA1C1D54(a15, a16);
  v46 = v45;
  v47 = (void *)objc_opt_self();
  v48 = (void *)sub_1BA202154();
  v79[0] = 0;
  v49 = objc_msgSend(v47, sel_JSONObjectWithData_options_error_, v48, 8, v79);

  if (v49)
  {
    v50 = v79[0];
    sub_1BA202700();
    swift_unknownObjectRelease();
    sub_1BA1B6EC0(0, (unint64_t *)&qword_1ED5AF500);
    if ((swift_dynamicCast() & 1) != 0)
    {
      sub_1BA1C10B0(v79, v78);
      sub_1BA1C22B8(v44, v46);
      v51 = v79[0];
      if ((~(uint64_t)v79[0] & 0xF000000000000007) != 0)
      {
        swift_bridgeObjectRelease();
        *(_QWORD *)(v37 + v31[12]) = v51;
        v62 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4DC8];
        sub_1BA1F74C0(v75, &qword_1ED5AF328, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4DC8]);
        return sub_1BA1F74C0(v76, &qword_1ED5AF328, v62);
      }
    }
    else
    {
      sub_1BA1C22B8(v44, v46);
    }
  }
  else
  {
    v54 = v79[0];
    v55 = (void *)sub_1BA2020F4();

    swift_willThrow();
    sub_1BA1C22B8(v44, v46);

  }
  *(_QWORD *)(v37 + v31[12]) = 0xF000000000000007;
  if (qword_1ED5AFB58 != -1)
    swift_once();
  v56 = sub_1BA20243C();
  __swift_project_value_buffer(v56, (uint64_t)qword_1ED5B08D0);
  swift_bridgeObjectRetain();
  v57 = sub_1BA202424();
  v58 = sub_1BA202670();
  if (os_log_type_enabled(v57, v58))
  {
    v59 = (uint8_t *)swift_slowAlloc();
    v60 = (void *)swift_slowAlloc();
    v79[0] = v60;
    *(_DWORD *)v59 = 136315138;
    swift_bridgeObjectRetain();
    v78 = sub_1BA1BDA3C(a15, a16, (uint64_t *)v79);
    v37 = v77;
    sub_1BA2026E8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1BA1AE000, v57, v58, "Failed parsing EngagementUpsellTrigger: invalid condition %s", v59, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCD775C](v60, -1, -1);
    MEMORY[0x1BCCD775C](v59, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_1BA1FA234();
  swift_allocError();
  swift_willThrow();
  v61 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4DC8];
  sub_1BA1F74C0(v75, &qword_1ED5AF328, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4DC8]);
  sub_1BA1F74C0(v76, &qword_1ED5AF328, v61);
  return sub_1BA1B42A0(v37, (uint64_t (*)(_QWORD))type metadata accessor for EngagementUpsellTrigger);
}

uint64_t sub_1BA1B900C(uint64_t a1, unint64_t *a2, uint64_t a3)
{
  uint64_t v4;

  sub_1BA1B5770(0, a2, a3, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void sub_1BA1B9050(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    v7 = a3(255);
    v8 = a4(a1, v7);
    if (!v9)
      atomic_store(v8, a2);
  }
}

uint64_t sub_1BA1B90A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA1B9050(0, &qword_1ED5AF328, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4DC8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void __swiftcall EngagementUpsellBanner.init(dictionary:)(NewsEngagement::EngagementUpsellBanner_optional *__return_ptr retstr, Swift::OpaquePointer dictionary)
{
  unint64_t v4;
  char v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  char v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  char v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  char v65;
  int v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  char v70;
  int v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  char v75;
  int v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  NewsEngagement::EngagementUpsellBanner_optional *v82;
  unint64_t v83;
  char v84;
  int v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  char v91;
  char v92;
  unint64_t v93;
  char v94;
  int v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  char v99;
  int v100;
  uint64_t v101;
  uint64_t v102;
  unint64_t v103;
  char v104;
  int v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  char v172;
  uint64_t v173;
  uint64_t v174;
  __int128 v175;
  __int128 v176;

  if (!*((_QWORD *)dictionary._rawValue + 2))
  {
    v8 = 0;
    v7 = 0;
    goto LABEL_22;
  }
  v4 = sub_1BA1B9E30(0x656C746974, 0xE500000000000000);
  if ((v5 & 1) == 0)
  {
    v7 = 0;
    v8 = 0;
    if (*((_QWORD *)dictionary._rawValue + 2))
      goto LABEL_13;
LABEL_22:
    v106 = 0;
    v12 = 0;
    goto LABEL_23;
  }
  sub_1BA1B9D7C(*((_QWORD *)dictionary._rawValue + 7) + 32 * v4, (uint64_t)&v136);
  v6 = swift_dynamicCast();
  if (v6)
    v7 = v175;
  else
    v7 = 0;
  if (v6)
    v8 = *((_QWORD *)&v175 + 1);
  else
    v8 = 0;
  if (!*((_QWORD *)dictionary._rawValue + 2))
    goto LABEL_22;
LABEL_13:
  v9 = sub_1BA1B9E30(0xD000000000000012, 0x80000001BA206E20);
  if ((v10 & 1) != 0)
  {
    sub_1BA1B9D7C(*((_QWORD *)dictionary._rawValue + 7) + 32 * v9, (uint64_t)&v136);
    v11 = swift_dynamicCast();
    if (v11)
      v12 = v175;
    else
      v12 = 0;
    if (v11)
      v13 = *((_QWORD *)&v175 + 1);
    else
      v13 = 0;
    v106 = v13;
    if (!*((_QWORD *)dictionary._rawValue + 2))
    {
LABEL_23:
      v116 = 0;
      v117 = 0;
      if (*((_QWORD *)dictionary._rawValue + 2))
        goto LABEL_24;
LABEL_52:
      v130 = 0;
      v131 = 0;
      goto LABEL_53;
    }
  }
  else
  {
    v12 = 0;
    v106 = 0;
    if (!*((_QWORD *)dictionary._rawValue + 2))
      goto LABEL_23;
  }
  v24 = sub_1BA1B9E30(0xD000000000000015, 0x80000001BA206E40);
  if ((v25 & 1) == 0)
    goto LABEL_23;
  sub_1BA1B9D7C(*((_QWORD *)dictionary._rawValue + 7) + 32 * v24, (uint64_t)&v136);
  v26 = swift_dynamicCast();
  if (v26)
    v27 = v175;
  else
    v27 = 0;
  if (v26)
    v28 = *((_QWORD *)&v175 + 1);
  else
    v28 = 0;
  v116 = v28;
  v117 = v27;
  if (!*((_QWORD *)dictionary._rawValue + 2))
    goto LABEL_52;
LABEL_24:
  v14 = sub_1BA1B9E30(0x627553656C746974, 0xEF64656269726373);
  if ((v15 & 1) == 0)
  {
    v130 = 0;
    v131 = 0;
    if (*((_QWORD *)dictionary._rawValue + 2))
      goto LABEL_34;
LABEL_53:
    v114 = 0;
    v115 = 0;
    goto LABEL_54;
  }
  sub_1BA1B9D7C(*((_QWORD *)dictionary._rawValue + 7) + 32 * v14, (uint64_t)&v136);
  v16 = swift_dynamicCast();
  if (v16)
    v17 = v175;
  else
    v17 = 0;
  if (v16)
    v18 = *((_QWORD *)&v175 + 1);
  else
    v18 = 0;
  v130 = v18;
  v131 = v17;
  if (!*((_QWORD *)dictionary._rawValue + 2))
    goto LABEL_53;
LABEL_34:
  v19 = sub_1BA1B9E30(2036625250, 0xE400000000000000);
  if ((v20 & 1) != 0)
  {
    sub_1BA1B9D7C(*((_QWORD *)dictionary._rawValue + 7) + 32 * v19, (uint64_t)&v136);
    v21 = swift_dynamicCast();
    if (v21)
      v22 = v175;
    else
      v22 = 0;
    if (v21)
      v23 = *((_QWORD *)&v175 + 1);
    else
      v23 = 0;
    v114 = v23;
    v115 = v22;
    if (!*((_QWORD *)dictionary._rawValue + 2))
    {
LABEL_54:
      v112 = 0;
      v113 = 0;
      if (*((_QWORD *)dictionary._rawValue + 2))
        goto LABEL_55;
LABEL_83:
      v128 = 0;
      v129 = 0;
      goto LABEL_84;
    }
  }
  else
  {
    v114 = 0;
    v115 = 0;
    if (!*((_QWORD *)dictionary._rawValue + 2))
      goto LABEL_54;
  }
  v39 = sub_1BA1B9E30(0xD000000000000011, 0x80000001BA206E60);
  if ((v40 & 1) == 0)
    goto LABEL_54;
  sub_1BA1B9D7C(*((_QWORD *)dictionary._rawValue + 7) + 32 * v39, (uint64_t)&v136);
  v41 = swift_dynamicCast();
  if (v41)
    v42 = v175;
  else
    v42 = 0;
  if (v41)
    v43 = *((_QWORD *)&v175 + 1);
  else
    v43 = 0;
  v112 = v43;
  v113 = v42;
  if (!*((_QWORD *)dictionary._rawValue + 2))
    goto LABEL_83;
LABEL_55:
  v29 = sub_1BA1B9E30(0xD000000000000014, 0x80000001BA206E80);
  if ((v30 & 1) == 0)
  {
    v128 = 0;
    v129 = 0;
    if (*((_QWORD *)dictionary._rawValue + 2))
      goto LABEL_65;
LABEL_84:
    v110 = 0;
    v111 = 0;
    goto LABEL_85;
  }
  sub_1BA1B9D7C(*((_QWORD *)dictionary._rawValue + 7) + 32 * v29, (uint64_t)&v136);
  v31 = swift_dynamicCast();
  if (v31)
    v32 = v175;
  else
    v32 = 0;
  if (v31)
    v33 = *((_QWORD *)&v175 + 1);
  else
    v33 = 0;
  v128 = v33;
  v129 = v32;
  if (!*((_QWORD *)dictionary._rawValue + 2))
    goto LABEL_84;
LABEL_65:
  v34 = sub_1BA1B9E30(0x7362755379646F62, 0xEE00646562697263);
  if ((v35 & 1) != 0)
  {
    sub_1BA1B9D7C(*((_QWORD *)dictionary._rawValue + 7) + 32 * v34, (uint64_t)&v136);
    v36 = swift_dynamicCast();
    if (v36)
      v37 = v175;
    else
      v37 = 0;
    if (v36)
      v38 = *((_QWORD *)&v175 + 1);
    else
      v38 = 0;
    v110 = v38;
    v111 = v37;
    if (!*((_QWORD *)dictionary._rawValue + 2))
    {
LABEL_85:
      v108 = 0;
      v109 = 0;
      if (*((_QWORD *)dictionary._rawValue + 2))
        goto LABEL_86;
LABEL_113:
      v126 = 0;
      v127 = 0;
      goto LABEL_114;
    }
  }
  else
  {
    v110 = 0;
    v111 = 0;
    if (!*((_QWORD *)dictionary._rawValue + 2))
      goto LABEL_85;
  }
  v54 = sub_1BA1B9E30(0x7265746F6F66, 0xE600000000000000);
  if ((v55 & 1) == 0)
    goto LABEL_85;
  sub_1BA1B9D7C(*((_QWORD *)dictionary._rawValue + 7) + 32 * v54, (uint64_t)&v136);
  v56 = swift_dynamicCast();
  if (v56)
    v57 = v175;
  else
    v57 = 0;
  if (v56)
    v58 = *((_QWORD *)&v175 + 1);
  else
    v58 = 0;
  v108 = v58;
  v109 = v57;
  if (!*((_QWORD *)dictionary._rawValue + 2))
    goto LABEL_113;
LABEL_86:
  v44 = sub_1BA1B9E30(0xD000000000000013, 0x80000001BA206EA0);
  if ((v45 & 1) == 0)
  {
    v126 = 0;
    v127 = 0;
    if (*((_QWORD *)dictionary._rawValue + 2))
      goto LABEL_96;
LABEL_114:
    v125 = 0;
    v107 = 0;
    goto LABEL_115;
  }
  sub_1BA1B9D7C(*((_QWORD *)dictionary._rawValue + 7) + 32 * v44, (uint64_t)&v136);
  v46 = swift_dynamicCast();
  if (v46)
    v47 = v175;
  else
    v47 = 0;
  if (v46)
    v48 = *((_QWORD *)&v175 + 1);
  else
    v48 = 0;
  v126 = v48;
  v127 = v47;
  if (!*((_QWORD *)dictionary._rawValue + 2))
    goto LABEL_114;
LABEL_96:
  v49 = sub_1BA1B9E30(0xD000000000000016, 0x80000001BA206EC0);
  if ((v50 & 1) != 0)
  {
    sub_1BA1B9D7C(*((_QWORD *)dictionary._rawValue + 7) + 32 * v49, (uint64_t)&v136);
    v51 = swift_dynamicCast();
    v52 = v175;
    if (!v51)
      v52 = 0;
    v107 = v52;
    if (v51)
      v53 = *((_QWORD *)&v175 + 1);
    else
      v53 = 0;
    v125 = v53;
    if (!*((_QWORD *)dictionary._rawValue + 2))
    {
LABEL_115:
      v123 = 0;
      v124 = 0;
      if (*((_QWORD *)dictionary._rawValue + 2))
        goto LABEL_116;
LABEL_144:
      v63 = 0;
      v62 = 0;
      goto LABEL_145;
    }
  }
  else
  {
    v107 = 0;
    v125 = 0;
    if (!*((_QWORD *)dictionary._rawValue + 2))
      goto LABEL_115;
  }
  v69 = sub_1BA1B9E30(0xD000000000000010, 0x80000001BA206EE0);
  if ((v70 & 1) == 0)
    goto LABEL_115;
  sub_1BA1B9D7C(*((_QWORD *)dictionary._rawValue + 7) + 32 * v69, (uint64_t)&v136);
  v71 = swift_dynamicCast();
  if (v71)
    v72 = v175;
  else
    v72 = 0;
  if (v71)
    v73 = *((_QWORD *)&v175 + 1);
  else
    v73 = 0;
  v123 = v73;
  v124 = v72;
  if (!*((_QWORD *)dictionary._rawValue + 2))
    goto LABEL_144;
LABEL_116:
  v59 = sub_1BA1B9E30(0x6C72556E6F6369, 0xE700000000000000);
  if ((v60 & 1) == 0)
  {
    v62 = 0;
    v63 = 0;
    if (*((_QWORD *)dictionary._rawValue + 2))
      goto LABEL_126;
LABEL_145:
    v121 = 0;
    v122 = 0;
LABEL_146:
    v119 = 0;
    v120 = 0;
    goto LABEL_147;
  }
  sub_1BA1B9D7C(*((_QWORD *)dictionary._rawValue + 7) + 32 * v59, (uint64_t)&v136);
  v61 = swift_dynamicCast();
  if (v61)
    v62 = v175;
  else
    v62 = 0;
  if (v61)
    v63 = *((_QWORD *)&v175 + 1);
  else
    v63 = 0;
  if (!*((_QWORD *)dictionary._rawValue + 2))
    goto LABEL_145;
LABEL_126:
  v64 = sub_1BA1B9E30(0x6E61726165707061, 0xEE006F666E496563);
  if ((v65 & 1) != 0)
  {
    sub_1BA1B9D7C(*((_QWORD *)dictionary._rawValue + 7) + 32 * v64, (uint64_t)&v136);
    v66 = swift_dynamicCast();
    if (v66)
      v67 = v175;
    else
      v67 = 0;
    if (v66)
      v68 = *((_QWORD *)&v175 + 1);
    else
      v68 = 0;
    v121 = v68;
    v122 = v67;
    if (!*((_QWORD *)dictionary._rawValue + 2))
      goto LABEL_146;
  }
  else
  {
    v121 = 0;
    v122 = 0;
    if (!*((_QWORD *)dictionary._rawValue + 2))
      goto LABEL_146;
  }
  v98 = sub_1BA1B9E30(0x72556E6F69746361, 0xE90000000000006CLL);
  if ((v99 & 1) == 0)
    goto LABEL_146;
  sub_1BA1B9D7C(*((_QWORD *)dictionary._rawValue + 7) + 32 * v98, (uint64_t)&v136);
  v100 = swift_dynamicCast();
  if (v100)
    v101 = v175;
  else
    v101 = 0;
  if (v100)
    v102 = *((_QWORD *)&v175 + 1);
  else
    v102 = 0;
  v119 = v102;
  v120 = v101;
LABEL_147:
  v134 = v63;
  v135 = v62;
  if (!*((_QWORD *)dictionary._rawValue + 2))
  {
    v79 = v12;
    v80 = v8;
    v81 = v7;
    v82 = retstr;
    v132 = 0;
    v133 = 0;
LABEL_167:
    v87 = 0;
    v118 = 0;
    goto LABEL_168;
  }
  v74 = sub_1BA1B9E30(0xD000000000000013, 0x80000001BA206F00);
  if ((v75 & 1) != 0)
  {
    sub_1BA1B9D7C(*((_QWORD *)dictionary._rawValue + 7) + 32 * v74, (uint64_t)&v136);
    v76 = swift_dynamicCast();
    if (v76)
      v77 = v175;
    else
      v77 = 0;
    if (v76)
      v78 = *((_QWORD *)&v175 + 1);
    else
      v78 = 0;
  }
  else
  {
    v77 = 0;
    v78 = 0;
  }
  v132 = v78;
  v133 = v77;
  if (!*((_QWORD *)dictionary._rawValue + 2))
  {
    v79 = v12;
    v80 = v8;
    v81 = v7;
    v82 = retstr;
    goto LABEL_167;
  }
  v83 = sub_1BA1B9E30(0x63417265746F6F66, 0xEF6C72556E6F6974);
  v79 = v12;
  v80 = v8;
  v81 = v7;
  v82 = retstr;
  if ((v84 & 1) == 0)
  {
    v118 = 0;
    v87 = 0;
    if (*((_QWORD *)dictionary._rawValue + 2))
      goto LABEL_194;
LABEL_168:
    v88 = 0;
    v89 = 0;
    goto LABEL_169;
  }
  sub_1BA1B9D7C(*((_QWORD *)dictionary._rawValue + 7) + 32 * v83, (uint64_t)&v136);
  v85 = swift_dynamicCast();
  v86 = v175;
  if (!v85)
    v86 = 0;
  v118 = v86;
  if (v85)
    v87 = *((_QWORD *)&v175 + 1);
  else
    v87 = 0;
  if (!*((_QWORD *)dictionary._rawValue + 2))
    goto LABEL_168;
LABEL_194:
  v103 = sub_1BA1B9E30(0xD000000000000019, 0x80000001BA206F20);
  if ((v104 & 1) == 0)
    goto LABEL_168;
  sub_1BA1B9D7C(*((_QWORD *)dictionary._rawValue + 7) + 32 * v103, (uint64_t)&v136);
  v105 = swift_dynamicCast();
  if (v105)
    v88 = v175;
  else
    v88 = 0;
  if (v105)
    v89 = *((_QWORD *)&v175 + 1);
  else
    v89 = 0;
LABEL_169:
  if (*((_QWORD *)dictionary._rawValue + 2))
  {
    v90 = sub_1BA1B9E30(0x736F6C43776F6873, 0xEF6E6F7474754265);
    v91 = 2;
    if ((v92 & 1) != 0)
    {
      sub_1BA1B9D7C(*((_QWORD *)dictionary._rawValue + 7) + 32 * v90, (uint64_t)&v136);
      if (swift_dynamicCast())
        v91 = v175;
      else
        v91 = 2;
    }
    if (*((_QWORD *)dictionary._rawValue + 2))
    {
      v93 = sub_1BA1B9E30(0x745372656E6E6162, 0xEB00000000656C79);
      if ((v94 & 1) != 0)
      {
        sub_1BA1B9D7C(*((_QWORD *)dictionary._rawValue + 7) + 32 * v93, (uint64_t)&v175);
        goto LABEL_179;
      }
    }
  }
  else
  {
    v91 = 2;
  }
  v175 = 0u;
  v176 = 0u;
LABEL_179:
  swift_bridgeObjectRelease();
  if (*((_QWORD *)&v176 + 1))
  {
    v95 = swift_dynamicCast();
    v96 = v136;
    v97 = v137;
    if (!v95)
    {
      v96 = 0;
      v97 = 0;
    }
  }
  else
  {
    sub_1BA1B87E4((uint64_t)&v175);
    v96 = 0;
    v97 = 0;
  }
  v136 = v81;
  v137 = v80;
  v138 = v79;
  v139 = v106;
  v140 = v117;
  v141 = v116;
  v142 = v131;
  v143 = v130;
  v144 = v115;
  v145 = v114;
  v146 = v113;
  v147 = v112;
  v148 = v129;
  v149 = v128;
  v150 = v111;
  v151 = v110;
  v152 = v109;
  v153 = v108;
  v154 = v127;
  v155 = v126;
  v156 = v107;
  v157 = v125;
  v158 = v124;
  v159 = v123;
  v160 = v135;
  v161 = v134;
  v162 = v122;
  v163 = v121;
  v164 = v120;
  v165 = v119;
  v166 = v133;
  v167 = v132;
  v168 = v118;
  v169 = v87;
  v170 = v88;
  v171 = v89;
  v172 = v91;
  v173 = v96;
  v174 = v97;
  nullsub_1(&v136);
  sub_1BA1CD914((uint64_t)&v136, (uint64_t)v82);
}

unint64_t sub_1BA1B9C9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_1BA202988() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_1BA202988() & 1) == 0);
    }
  }
  return v6;
}

uint64_t sub_1BA1B9D7C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_1BA1B9DB8(uint64_t a1)
{
  uint64_t v2;

  sub_1BA202A00();
  EngagementUIPlacement.rawValue.getter();
  sub_1BA202538();
  swift_bridgeObjectRelease();
  v2 = sub_1BA202A18();
  return sub_1BA1B5094(a1, v2);
}

unint64_t sub_1BA1B9E30(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA202A00();
  sub_1BA202538();
  v4 = sub_1BA202A18();
  return sub_1BA1B9C9C(a1, a2, v4);
}

uint64_t EngagementUIPlacement.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA1B9ED0 + 4 * byte_1BA205140[*v0]))(0x6C6576654C707061, 0xED00007465656853);
}

uint64_t sub_1BA1B9EE4()
{
  return 0x73756C507377656ELL;
}

unint64_t sub_1BA1B9F08()
{
  return 0xD000000000000010;
}

unint64_t sub_1BA1BA040()
{
  return 0xD000000000000017;
}

unint64_t sub_1BA1BA058()
{
  return 0xD000000000000017;
}

unint64_t sub_1BA1BA070()
{
  return 0xD00000000000001CLL;
}

unint64_t sub_1BA1BA088()
{
  return 0xD000000000000020;
}

unint64_t sub_1BA1BA0A0()
{
  return 0xD000000000000019;
}

unint64_t sub_1BA1BA0BC()
{
  return 0xD000000000000022;
}

unint64_t sub_1BA1BA0D4()
{
  return 0xD000000000000017;
}

unint64_t sub_1BA1BA0EC()
{
  return 0xD00000000000001CLL;
}

unint64_t sub_1BA1BA104()
{
  return 0xD000000000000020;
}

unint64_t sub_1BA1BA11C()
{
  return 0xD00000000000001BLL;
}

unint64_t sub_1BA1BA138()
{
  return 0xD000000000000024;
}

unint64_t sub_1BA1BA150()
{
  return 0xD00000000000001ALL;
}

unint64_t sub_1BA1BA16C()
{
  return 0xD00000000000001FLL;
}

void sub_1BA1BA184()
{
  JUMPOUT(0x1BA1BA198);
}

NewsEngagement::EngagementUpsellBannerPaidEligibility_optional __swiftcall EngagementUpsellBannerPaidEligibility.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsEngagement::EngagementUpsellBannerPaidEligibility_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1BA202868();
  result.value = swift_bridgeObjectRelease();
  v5 = 4;
  if (v3 < 4)
    v5 = v3;
  *v2 = v5;
  return result;
}

void EngagementEventHandler.fetchRequests(for:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  os_log_type_t v21;
  uint8_t *v22;
  const char *v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  NSObject *oslog;
  uint64_t v42[2];

  v2 = v1;
  if ((sub_1BA1C1CB0() & 1) == 0)
    return;
  if (!*(_QWORD *)(a1 + 16))
  {
    if (qword_1ED5AFB58 != -1)
      swift_once();
    v20 = sub_1BA20243C();
    __swift_project_value_buffer(v20, (uint64_t)qword_1ED5B08D0);
    oslog = sub_1BA202424();
    v21 = sub_1BA20267C();
    if (!os_log_type_enabled(oslog, v21))
      goto LABEL_18;
    v22 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v22 = 0;
    v23 = "Received empty list of placements for fetching request. Exiting";
    goto LABEL_17;
  }
  v4 = *(_QWORD *)(v1 + 40);
  ObjectType = swift_getObjectType();
  v6 = *(uint64_t (**)(uint64_t, uint64_t))(v4 + 64);
  swift_bridgeObjectRetain();
  v7 = v6(ObjectType, v4);
  v8 = sub_1BA1BB434(v7, a1);
  swift_bridgeObjectRelease();
  swift_retain();
  v9 = sub_1BA1BADE4(v8, v1);
  swift_release();
  if (!*(_QWORD *)(v9 + 16))
  {
    swift_release();
    if (qword_1ED5AFB58 != -1)
      swift_once();
    v24 = sub_1BA20243C();
    __swift_project_value_buffer(v24, (uint64_t)qword_1ED5B08D0);
    oslog = sub_1BA202424();
    v21 = sub_1BA20267C();
    if (!os_log_type_enabled(oslog, v21))
      goto LABEL_18;
    v22 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v22 = 0;
    v23 = "All placements are blocked for fetching request. Exiting";
LABEL_17:
    _os_log_impl(&dword_1BA1AE000, oslog, v21, v23, v22, 2u);
    MEMORY[0x1BCCD775C](v22, -1, -1);
LABEL_18:

    return;
  }
  swift_retain();
  v10 = swift_retain();
  v11 = sub_1BA1BA884(v10, v1);
  swift_release();
  swift_retain();
  sub_1BA1B4B04(v11, v1);
  swift_release();
  if (*(_QWORD *)(v11 + 16))
  {
    swift_release();
    if (qword_1ED5AFB58 != -1)
      swift_once();
    v12 = sub_1BA20243C();
    __swift_project_value_buffer(v12, (uint64_t)qword_1ED5B08D0);
    swift_retain_n();
    v13 = sub_1BA202424();
    v14 = sub_1BA20267C();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      v16 = swift_slowAlloc();
      v42[0] = v16;
      *(_DWORD *)v15 = 136315138;
      sub_1BA1C1D10();
      swift_retain();
      v17 = sub_1BA20264C();
      v19 = v18;
      swift_release();
      sub_1BA1BDA3C(v17, v19, v42);
      sub_1BA2026E8();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BA1AE000, v13, v14, "Fetching request for: %s...", v15, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCD775C](v16, -1, -1);
      MEMORY[0x1BCCD775C](v15, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    v33 = __swift_project_boxed_opaque_existential_1((_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 72));
    v34 = swift_allocObject();
    swift_weakInit();
    v35 = swift_allocObject();
    *(_QWORD *)(v35 + 16) = v34;
    *(_QWORD *)(v35 + 24) = a1;
    v36 = *(_QWORD *)(*v33 + 16);
    v37 = *(_QWORD *)(v36 + 16);
    if (v37)
    {
      v38 = (_QWORD *)(v36 + 32);
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      do
      {
        v39 = v38[3];
        v40 = v38[4];
        __swift_project_boxed_opaque_existential_1(v38, v39);
        (*(void (**)(uint64_t, uint64_t (*)(_QWORD *, char), uint64_t, uint64_t, uint64_t))(v40 + 8))(v11, sub_1BA1CA2F4, v35, v39, v40);
        v38 += 5;
        --v37;
      }
      while (v37);
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRetain();
      swift_release();
    }
    swift_release();
  }
  else
  {
    swift_release();
    if (qword_1ED5AFB58 != -1)
      swift_once();
    v25 = sub_1BA20243C();
    __swift_project_value_buffer(v25, (uint64_t)qword_1ED5B08D0);
    swift_retain();
    v26 = sub_1BA202424();
    v27 = sub_1BA20267C();
    if (os_log_type_enabled(v26, v27))
    {
      v28 = (uint8_t *)swift_slowAlloc();
      v29 = swift_slowAlloc();
      v42[0] = v29;
      *(_DWORD *)v28 = 136315138;
      sub_1BA1C1D10();
      swift_retain();
      v30 = sub_1BA20264C();
      v32 = v31;
      swift_release();
      sub_1BA1BDA3C(v30, v32, v42);
      sub_1BA2026E8();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BA1AE000, v26, v27, "All placements were throttled for fetching request: %s. Exiting", v28, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCD775C](v29, -1, -1);
      MEMORY[0x1BCCD775C](v28, -1, -1);

    }
    else
    {

      swift_release_n();
    }
  }
}

uint64_t sub_1BA1BA884(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v6;
  unsigned int v7;
  unint64_t v8;
  size_t v9;
  uint64_t isStackAllocationSafe;
  uint64_t v11;
  void *v12;
  _QWORD v14[2];

  v3 = v2;
  v14[1] = *MEMORY[0x1E0C80C00];
  v6 = *(_BYTE *)(a1 + 32);
  v7 = v6 & 0x3F;
  v8 = (unint64_t)((1 << v6) + 63) >> 6;
  v9 = 8 * v8;
  isStackAllocationSafe = swift_retain_n();
  if (v7 <= 0xD || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    bzero((char *)v14 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0), v9);
    swift_retain();
    v11 = sub_1BA1BAA48((_QWORD *)((char *)v14 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0)), v8, a1, a2);
    swift_release();
    swift_release();
    if (v3)
      swift_willThrow();
    swift_release_n();
  }
  else
  {
    v12 = (void *)swift_slowAlloc();
    bzero(v12, v9);
    swift_retain();
    v11 = sub_1BA1BAA48((unint64_t *)v12, v8, a1, a2);
    swift_release();
    swift_release();
    MEMORY[0x1BCCD775C](v12, -1, -1);
    swift_release_n();
  }
  return v11;
}

uint64_t sub_1BA1BAA48(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  char *v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  double v30;
  double v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  int64_t v37;
  uint64_t *v38;
  uint64_t v39;

  v33 = a2;
  v34 = a1;
  sub_1BA1B9050(0, &qword_1ED5AF318, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v33 - v7;
  v9 = sub_1BA202184();
  v10 = *(_QWORD *)(v9 - 8);
  result = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = 0;
  v39 = a3;
  v15 = *(_QWORD *)(a3 + 56);
  v35 = 0;
  v36 = a3 + 56;
  v16 = 1 << *(_BYTE *)(a3 + 32);
  v17 = -1;
  if (v16 < 64)
    v17 = ~(-1 << v16);
  v18 = v17 & v15;
  v37 = (unint64_t)(v16 + 63) >> 6;
  v38 = (uint64_t *)(a4 + 88);
  while (v18)
  {
    v20 = __clz(__rbit64(v18));
    v18 &= v18 - 1;
    v21 = v20 | (v14 << 6);
LABEL_23:
    v25 = *(unsigned __int8 *)(*(_QWORD *)(v39 + 48) + v21);
    v26 = v38;
    swift_beginAccess();
    v27 = *v26;
    if (*(_QWORD *)(v27 + 16) && (v28 = sub_1BA1B9DB8(v25), (v29 & 1) != 0))
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v8, *(_QWORD *)(v27 + 56) + *(_QWORD *)(v10 + 72) * v28, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
        goto LABEL_5;
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v13, v8, v9);
      swift_endAccess();
      sub_1BA202160();
      v31 = fabs(v30);
      result = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v13, v9);
      if (v31 > 2.0)
        goto LABEL_6;
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
LABEL_5:
      sub_1BA1BAD90((uint64_t)v8);
      result = swift_endAccess();
LABEL_6:
      *(unint64_t *)((char *)v34 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
      if (__OFADD__(v35++, 1))
        goto LABEL_30;
    }
  }
  v22 = v14 + 1;
  if (!__OFADD__(v14, 1))
  {
    if (v22 >= v37)
      goto LABEL_28;
    v23 = *(_QWORD *)(v36 + 8 * v22);
    ++v14;
    if (!v23)
    {
      v14 = v22 + 1;
      if (v22 + 1 >= v37)
        goto LABEL_28;
      v23 = *(_QWORD *)(v36 + 8 * v14);
      if (!v23)
      {
        v14 = v22 + 2;
        if (v22 + 2 >= v37)
          goto LABEL_28;
        v23 = *(_QWORD *)(v36 + 8 * v14);
        if (!v23)
        {
          v24 = v22 + 3;
          if (v24 >= v37)
          {
LABEL_28:
            v32 = v39;
            swift_retain();
            return sub_1BA1BB1B0(v34, v33, v35, v32);
          }
          v23 = *(_QWORD *)(v36 + 8 * v24);
          if (!v23)
          {
            while (1)
            {
              v14 = v24 + 1;
              if (__OFADD__(v24, 1))
                goto LABEL_31;
              if (v14 >= v37)
                goto LABEL_28;
              v23 = *(_QWORD *)(v36 + 8 * v14);
              ++v24;
              if (v23)
                goto LABEL_22;
            }
          }
          v14 = v24;
        }
      }
    }
LABEL_22:
    v18 = (v23 - 1) & v23;
    v21 = __clz(__rbit64(v23)) + (v14 << 6);
    goto LABEL_23;
  }
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_1BA1BAD90(uint64_t a1)
{
  uint64_t v2;

  sub_1BA1B9050(0, &qword_1ED5AF318, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BA1BADE4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v6;
  unsigned int v7;
  unint64_t v8;
  size_t v9;
  uint64_t isStackAllocationSafe;
  uint64_t v11;
  void *v12;
  _QWORD v14[2];

  v3 = v2;
  v14[1] = *MEMORY[0x1E0C80C00];
  v6 = *(_BYTE *)(a1 + 32);
  v7 = v6 & 0x3F;
  v8 = (unint64_t)((1 << v6) + 63) >> 6;
  v9 = 8 * v8;
  isStackAllocationSafe = swift_retain_n();
  if (v7 <= 0xD || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    bzero((char *)v14 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0), v9);
    swift_retain();
    v11 = sub_1BA1BAFA8((uint64_t)v14 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0), v8, a1, a2);
    swift_release();
    swift_release();
    if (v3)
      swift_willThrow();
    swift_release_n();
  }
  else
  {
    v12 = (void *)swift_slowAlloc();
    bzero(v12, v9);
    swift_retain();
    v11 = sub_1BA1BAFA8((uint64_t)v12, v8, a1, a2);
    swift_release();
    swift_release();
    MEMORY[0x1BCCD775C](v12, -1, -1);
    swift_release_n();
  }
  return v11;
}

uint64_t sub_1BA1BAFA8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  char v16;
  uint64_t v17;
  uint64_t ObjectType;
  unint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  int64_t v23;

  v20 = (unint64_t *)result;
  v6 = 0;
  v7 = 0;
  v8 = 1 << *(_BYTE *)(a3 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & *(_QWORD *)(a3 + 56);
  v23 = (unint64_t)(v8 + 63) >> 6;
LABEL_4:
  v21 = v6;
  while (1)
  {
    if (v10)
    {
      v11 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v12 = v11 | (v7 << 6);
      goto LABEL_21;
    }
    v13 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v13 >= v23)
      goto LABEL_27;
    v14 = *(_QWORD *)(v22 + 8 * v13);
    ++v7;
    if (!v14)
    {
      v7 = v13 + 1;
      if (v13 + 1 >= v23)
        goto LABEL_27;
      v14 = *(_QWORD *)(v22 + 8 * v7);
      if (!v14)
      {
        v7 = v13 + 2;
        if (v13 + 2 >= v23)
          goto LABEL_27;
        v14 = *(_QWORD *)(v22 + 8 * v7);
        if (!v14)
          break;
      }
    }
LABEL_20:
    v10 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v7 << 6);
LABEL_21:
    v16 = *(_BYTE *)(*(_QWORD *)(a3 + 48) + v12);
    v17 = *(_QWORD *)(a4 + 40);
    ObjectType = swift_getObjectType();
    result = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 8))(ObjectType, v17);
    if ((result & 1) != 0)
    {
      if (((1 << v16) & 0x3FFE01FE) == 0
        || (result = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 16))(ObjectType, v17), (result & 1) == 0))
      {
        *(unint64_t *)((char *)v20 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
        v6 = v21 + 1;
        if (!__OFADD__(v21, 1))
          goto LABEL_4;
        __break(1u);
LABEL_27:
        swift_retain();
        return sub_1BA1BB1B0(v20, a2, v21, a3);
      }
    }
  }
  v15 = v13 + 3;
  if (v15 >= v23)
    goto LABEL_27;
  v14 = *(_QWORD *)(v22 + 8 * v15);
  if (v14)
  {
    v7 = v15;
    goto LABEL_20;
  }
  while (1)
  {
    v7 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v7 >= v23)
      goto LABEL_27;
    v14 = *(_QWORD *)(v22 + 8 * v7);
    ++v15;
    if (v14)
      goto LABEL_20;
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_1BA1BB1B0(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  unint64_t *v28;

  v4 = a4;
  if (!a3)
  {
    v9 = MEMORY[0x1E0DEE9E8];
LABEL_36:
    swift_release();
    return v9;
  }
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
    return v4;
  sub_1BA1CAA38();
  result = sub_1BA202760();
  v9 = result;
  v28 = a1;
  if (a2 < 1)
    v10 = 0;
  else
    v10 = *a1;
  v11 = 0;
  v12 = result + 56;
  while (1)
  {
    if (v10)
    {
      v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v14 = v13 | (v11 << 6);
      goto LABEL_24;
    }
    v15 = v11 + 1;
    if (__OFADD__(v11, 1))
      goto LABEL_39;
    if (v15 >= a2)
      goto LABEL_36;
    v16 = v28[v15];
    ++v11;
    if (!v16)
    {
      v11 = v15 + 1;
      if (v15 + 1 >= a2)
        goto LABEL_36;
      v16 = v28[v11];
      if (!v16)
      {
        v11 = v15 + 2;
        if (v15 + 2 >= a2)
          goto LABEL_36;
        v16 = v28[v11];
        if (!v16)
          break;
      }
    }
LABEL_23:
    v10 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_24:
    v18 = *(_BYTE *)(*(_QWORD *)(v4 + 48) + v14);
    sub_1BA202A00();
    EngagementUIPlacement.rawValue.getter();
    sub_1BA202538();
    swift_bridgeObjectRelease();
    result = sub_1BA202A18();
    v19 = -1 << *(_BYTE *)(v9 + 32);
    v20 = result & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v12 + 8 * (v20 >> 6))) != 0)
    {
      v22 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v12 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v25 = v21 == v24;
        if (v21 == v24)
          v21 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v12 + 8 * v21);
      }
      while (v26 == -1);
      v22 = __clz(__rbit64(~v26)) + (v21 << 6);
    }
    *(_QWORD *)(v12 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    *(_BYTE *)(*(_QWORD *)(v9 + 48) + v22) = v18;
    ++*(_QWORD *)(v9 + 16);
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5)
      goto LABEL_36;
  }
  v17 = v15 + 3;
  if (v17 >= a2)
    goto LABEL_36;
  v16 = v28[v17];
  if (v16)
  {
    v11 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v11 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v11 >= a2)
      goto LABEL_36;
    v16 = v28[v11];
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_1BA1BB434(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;

  v2 = a2;
  if (*(_QWORD *)(a2 + 16))
  {
    v6 = *(_QWORD *)(a1 + 16);
    if (v6)
    {
      swift_bridgeObjectRetain();
      v3 = 0;
      do
      {
        ++v3;
        sub_1BA202A00();
        EngagementUIPlacement.rawValue.getter();
        sub_1BA202538();
        swift_bridgeObjectRelease();
        v4 = sub_1BA202A18() & ~(-1 << *(_BYTE *)(v2 + 32));
        if (((*(_QWORD *)(v2 + 56 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
          __asm { BR              X9 }
      }
      while (v3 != v6);
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    swift_release();
    return MEMORY[0x1E0DEE9E8];
  }
  return v2;
}

void sub_1BA1BBC3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1BA1BBC5C(a1, a2, a3);
}

void sub_1BA1BBC5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  void *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  _BOOL4 v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  int v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  int64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  os_log_t v40;
  id v41;
  void *v42;
  uint64_t v43;
  int64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  char *v49;
  void (*v50)(char *, int64_t);
  uint64_t v51;
  uint64_t v52;
  void *v53;
  int64_t v54;
  uint64_t (*v55)(uint64_t);
  NSObject *v56;
  os_log_type_t v57;
  uint8_t *v58;
  uint64_t v59;
  uint8_t *v60;
  os_log_t v61;
  char *v62;
  int64_t v63;
  uint64_t v64;
  int v65;
  int64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  id v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  char v79;
  uint64_t v80;
  uint64_t aBlock[8];

  v4 = v3;
  v73 = a2;
  v74 = a3;
  v77 = a1;
  swift_getObjectType();
  v5 = sub_1BA20246C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v76 = (char *)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1BA202484();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (int64_t)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1BA20249C();
  v72 = *(_QWORD *)(v12 - 8);
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v59 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v75 = (char *)&v59 - v17;
  if (qword_1ED5AEFB0 != -1)
    goto LABEL_27;
  while (1)
  {
    sub_1BA1BC470(&qword_1ED5AF4A8, v16, (uint64_t (*)(uint64_t))type metadata accessor for EngagementUpsellEventProvider, (uint64_t)&unk_1BA2037E0);
    sub_1BA2021CC();
    if ((aBlock[0] & 1) != 0)
      break;
    v71 = v4;
    if (qword_1ED5AFB58 != -1)
      swift_once();
    v18 = sub_1BA20243C();
    v19 = __swift_project_value_buffer(v18, (uint64_t)qword_1ED5B08D0);
    v20 = v77;
    swift_bridgeObjectRetain_n();
    v64 = v19;
    v21 = sub_1BA202424();
    v65 = sub_1BA20267C();
    v22 = os_log_type_enabled(v21, (os_log_type_t)v65);
    v69 = v6;
    v70 = v5;
    v67 = v9;
    v68 = v8;
    v66 = v11;
    if (!v22)
    {

      swift_bridgeObjectRelease_n();
      v36 = v20;
      v4 = v76;
      goto LABEL_18;
    }
    v61 = v21;
    v62 = v15;
    v63 = v12;
    v23 = (uint8_t *)swift_slowAlloc();
    v24 = swift_slowAlloc();
    v25 = v24;
    aBlock[0] = v24;
    *(_DWORD *)v23 = 136315138;
    v12 = *(_QWORD *)(v20 + 16);
    v5 = MEMORY[0x1E0DEE9D8];
    v4 = v76;
    if (!v12)
    {
LABEL_17:
      v37 = MEMORY[0x1BCCD6EA4](v5, MEMORY[0x1E0DEA968]);
      v39 = v38;
      swift_bridgeObjectRelease();
      v80 = sub_1BA1BDA3C(v37, v39, aBlock);
      sub_1BA2026E8();
      v36 = v77;
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      v40 = v61;
      _os_log_impl(&dword_1BA1AE000, v61, (os_log_type_t)v65, "Fetching upsell response(s) for: %s", v23, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCD775C](v25, -1, -1);
      MEMORY[0x1BCCD775C](v23, -1, -1);

      v12 = v63;
      v15 = v62;
LABEL_18:
      aBlock[0] = MEMORY[0x1E0DEE9E0];
      v41 = v71;
      sub_1BA1BFEE4(v36, (uint64_t)v41, aBlock);

      if (*(_QWORD *)(aBlock[0] + 16))
      {
        sub_1BA1C1078(0, &qword_1ED5AF540);
        sub_1BA1C1D10();
        v42 = v4;
        v43 = v70;
        v44 = v12;
        v45 = sub_1BA2024E4();
        sub_1BA1C1078(0, &qword_1ED5AF550);
        v46 = sub_1BA2024E4();
        swift_bridgeObjectRelease();
        v47 = sub_1BA1CEFBC(v45);
        swift_bridgeObjectRelease();
        sub_1BA1C1078(0, (unint64_t *)&qword_1ED5AF230);
        v48 = (void *)sub_1BA2026AC();
        sub_1BA202490();
        v49 = v75;
        MEMORY[0x1BCCD6D6C](v15, 0.5);
        v50 = *(void (**)(char *, int64_t))(v72 + 8);
        v50(v15, v44);
        v51 = swift_allocObject();
        v52 = v74;
        *(_QWORD *)(v51 + 16) = v73;
        *(_QWORD *)(v51 + 24) = v52;
        *(_QWORD *)(v51 + 32) = v47;
        *(_QWORD *)(v51 + 40) = v46;
        *(_BYTE *)(v51 + 48) = 3;
        aBlock[4] = (uint64_t)sub_1BA1D1550;
        aBlock[5] = v51;
        aBlock[0] = MEMORY[0x1E0C809B0];
        aBlock[1] = 1107296256;
        aBlock[2] = (uint64_t)sub_1BA1FAB1C;
        aBlock[3] = (uint64_t)&block_descriptor_6;
        v53 = _Block_copy(aBlock);
        swift_retain();
        swift_release();
        v54 = v66;
        sub_1BA202478();
        aBlock[0] = MEMORY[0x1E0DEE9D8];
        v55 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
        sub_1BA1BC470((unint64_t *)&qword_1ED5AF4F8, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
        sub_1BA1B9050(0, &qword_1ED5AF520, v55, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
        sub_1BA1CA9D8();
        sub_1BA20270C();
        MEMORY[0x1BCCD6F58](v49, v54, v42, v53);
        _Block_release(v53);

        (*(void (**)(void *, uint64_t))(v69 + 8))(v42, v43);
        (*(void (**)(int64_t, uint64_t))(v67 + 8))(v54, v68);
        v50(v49, v44);
      }
      else
      {
        swift_bridgeObjectRelease();
        v56 = sub_1BA202424();
        v57 = sub_1BA20267C();
        if (os_log_type_enabled(v56, v57))
        {
          v58 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v58 = 0;
          _os_log_impl(&dword_1BA1AE000, v56, v57, "Fetch returned empty response", v58, 2u);
          MEMORY[0x1BCCD775C](v58, -1, -1);
        }

      }
      return;
    }
    v59 = v24;
    v60 = v23;
    v80 = MEMORY[0x1E0DEE9D8];
    sub_1BA1C0B04(0, v12, 0);
    v9 = v77;
    v5 = v80;
    v11 = sub_1BA1C0A64(v77);
    v27 = v26;
    v15 = (char *)(v28 & 1);
    v78 = v9 + 56;
    while ((v11 & 0x8000000000000000) == 0 && v11 < 1 << *(_BYTE *)(v9 + 32))
    {
      if (((*(_QWORD *)(v78 + (((unint64_t)v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
        goto LABEL_25;
      if (*(_DWORD *)(v9 + 36) != v27)
        goto LABEL_26;
      v79 = *(_BYTE *)(*(_QWORD *)(v9 + 48) + v11);
      v4 = (void *)EngagementUIPlacement.rawValue.getter();
      v8 = v29;
      v30 = v5;
      v80 = v5;
      v6 = *(_QWORD *)(v5 + 16);
      v31 = *(_QWORD *)(v5 + 24);
      if (v6 >= v31 >> 1)
      {
        sub_1BA1C0B04(v31 > 1, v6 + 1, 1);
        v30 = v80;
      }
      *(_QWORD *)(v30 + 16) = v6 + 1;
      v5 = v30;
      v32 = v30 + 16 * v6;
      *(_QWORD *)(v32 + 32) = v4;
      *(_QWORD *)(v32 + 40) = v8;
      v33 = sub_1BA1C0980(v11, v27, v15 & 1, v9);
      v11 = v33;
      v27 = v34;
      v15 = (char *)(v35 & 1);
      if (!--v12)
      {
        sub_1BA1D1694(v33, v34, v35 & 1);
        v4 = v76;
        v23 = v60;
        v25 = v59;
        goto LABEL_17;
      }
    }
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    swift_once();
  }
}

uint64_t sub_1BA1BC470(unint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = a3(a2);
    result = MEMORY[0x1BCCD76CC](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1BA1BC4B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1BA1BC4D0(a1, a2, a3);
}

void sub_1BA1BC4D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  _BOOL4 v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  int v27;
  char v28;
  int v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  int64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  os_log_t v39;
  char *v40;
  int64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  char *v46;
  char *v47;
  void (*v48)(char *, int64_t);
  uint64_t v49;
  uint64_t v50;
  void *v51;
  uint64_t (*v52)(uint64_t);
  NSObject *v53;
  os_log_type_t v54;
  uint8_t *v55;
  uint64_t v56;
  uint8_t *v57;
  uint64_t v58;
  os_log_t v59;
  int64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  int v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  int64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  char *v75;
  int v76;
  char v77;
  uint64_t v78;
  uint64_t aBlock[8];

  v4 = v3;
  v71 = a2;
  v72 = a3;
  v74 = (char *)a1;
  v5 = sub_1BA20246C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (unint64_t)&v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1BA202484();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1BA20249C();
  v70 = *(_QWORD *)(v13 - 8);
  v14 = MEMORY[0x1E0C80A78](v13);
  v69 = (char *)&v56 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v73 = (char *)&v56 - v17;
  if (qword_1ED5AEFB0 != -1)
    goto LABEL_27;
  while (1)
  {
    sub_1BA1BC470(&qword_1ED5AF170, v16, (uint64_t (*)(uint64_t))type metadata accessor for EngagementDebugEventProvider, (uint64_t)&unk_1BA203FE0);
    sub_1BA2021CC();
    if (LOBYTE(aBlock[0]) != 1)
      break;
    if (qword_1ED5AFB58 != -1)
      swift_once();
    v18 = sub_1BA20243C();
    v19 = __swift_project_value_buffer(v18, (uint64_t)qword_1ED5B08D0);
    v20 = (uint64_t)v74;
    swift_bridgeObjectRetain_n();
    v63 = v19;
    v21 = sub_1BA202424();
    v64 = sub_1BA20267C();
    v22 = os_log_type_enabled(v21, (os_log_type_t)v64);
    v66 = v9;
    v67 = v6;
    v65 = v10;
    v68 = v13;
    if (!v22)
    {

      swift_bridgeObjectRelease_n();
      goto LABEL_18;
    }
    v59 = v21;
    v60 = v4;
    v61 = v12;
    v62 = (char *)v8;
    v23 = (uint8_t *)swift_slowAlloc();
    v24 = swift_slowAlloc();
    v25 = v24;
    aBlock[0] = v24;
    *(_DWORD *)v23 = 136315138;
    v13 = *(_QWORD *)(v20 + 16);
    v10 = MEMORY[0x1E0DEE9D8];
    if (!v13)
    {
LABEL_17:
      v36 = MEMORY[0x1BCCD6EA4](v10, MEMORY[0x1E0DEA968]);
      v38 = v37;
      swift_bridgeObjectRelease();
      v78 = sub_1BA1BDA3C(v36, v38, aBlock);
      sub_1BA2026E8();
      v20 = (uint64_t)v74;
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      v39 = v59;
      _os_log_impl(&dword_1BA1AE000, v59, (os_log_type_t)v64, "Fetching debug response(s) for: %s", v23, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCD775C](v25, -1, -1);
      MEMORY[0x1BCCD775C](v23, -1, -1);

      v8 = (unint64_t)v62;
      v12 = v61;
      v13 = v68;
LABEL_18:
      if (*(_QWORD *)(sub_1BA1D7724(v20) + 16))
      {
        sub_1BA1C1078(0, &qword_1ED5AF540);
        v40 = v12;
        sub_1BA1C1D10();
        v41 = v13;
        v42 = sub_1BA2024E4();
        sub_1BA1C1078(0, &qword_1ED5AF550);
        v43 = sub_1BA2024E4();
        swift_bridgeObjectRelease();
        v44 = sub_1BA1CEFBC(v42);
        swift_bridgeObjectRelease();
        sub_1BA1C1078(0, (unint64_t *)&qword_1ED5AF230);
        v45 = (void *)sub_1BA2026AC();
        v46 = v69;
        sub_1BA202490();
        v47 = v73;
        MEMORY[0x1BCCD6D6C](v46, 0.5);
        v48 = *(void (**)(char *, int64_t))(v70 + 8);
        v48(v46, v41);
        v49 = swift_allocObject();
        v50 = v72;
        *(_QWORD *)(v49 + 16) = v71;
        *(_QWORD *)(v49 + 24) = v50;
        *(_QWORD *)(v49 + 32) = v44;
        *(_QWORD *)(v49 + 40) = v43;
        *(_BYTE *)(v49 + 48) = 1;
        aBlock[4] = (uint64_t)sub_1BA1DA6CC;
        aBlock[5] = v49;
        aBlock[0] = MEMORY[0x1E0C809B0];
        aBlock[1] = 1107296256;
        aBlock[2] = (uint64_t)sub_1BA1FAB1C;
        aBlock[3] = (uint64_t)&block_descriptor_6_0;
        v51 = _Block_copy(aBlock);
        swift_retain();
        swift_release();
        sub_1BA202478();
        aBlock[0] = MEMORY[0x1E0DEE9D8];
        v52 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
        sub_1BA1BC470((unint64_t *)&qword_1ED5AF4F8, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
        sub_1BA1B9050(0, &qword_1ED5AF520, v52, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
        sub_1BA1CA9D8();
        sub_1BA20270C();
        MEMORY[0x1BCCD6F58](v47, v40, v8, v51);
        _Block_release(v51);

        (*(void (**)(unint64_t, uint64_t))(v67 + 8))(v8, v5);
        (*(void (**)(char *, uint64_t))(v65 + 8))(v40, v66);
        v48(v47, v68);
      }
      else
      {
        swift_bridgeObjectRelease();
        v53 = sub_1BA202424();
        v54 = sub_1BA20267C();
        if (os_log_type_enabled(v53, v54))
        {
          v55 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v55 = 0;
          _os_log_impl(&dword_1BA1AE000, v53, v54, "Fetch returned empty response", v55, 2u);
          MEMORY[0x1BCCD775C](v55, -1, -1);
        }

      }
      return;
    }
    v56 = v24;
    v57 = v23;
    v58 = v5;
    v78 = MEMORY[0x1E0DEE9D8];
    sub_1BA1C0B04(0, v13, 0);
    v12 = v74;
    v10 = v78;
    v4 = sub_1BA1C1074((uint64_t)v74);
    v27 = v26;
    v29 = v28 & 1;
    v75 = v12 + 56;
    while ((v4 & 0x8000000000000000) == 0 && v4 < 1 << v12[32])
    {
      if (((*(_QWORD *)&v75[((unint64_t)v4 >> 3) & 0xFFFFFFFFFFFFF8] >> v4) & 1) == 0)
        goto LABEL_25;
      if (*((_DWORD *)v12 + 9) != v27)
        goto LABEL_26;
      v76 = v29;
      v77 = *(_BYTE *)(*((_QWORD *)v12 + 6) + v4);
      v9 = EngagementUIPlacement.rawValue.getter();
      v6 = v30;
      v78 = v10;
      v8 = *(_QWORD *)(v10 + 16);
      v31 = *(_QWORD *)(v10 + 24);
      v5 = v8 + 1;
      if (v8 >= v31 >> 1)
      {
        sub_1BA1C0B04(v31 > 1, v8 + 1, 1);
        v10 = v78;
      }
      *(_QWORD *)(v10 + 16) = v5;
      v32 = v10 + 16 * v8;
      *(_QWORD *)(v32 + 32) = v9;
      *(_QWORD *)(v32 + 40) = v6;
      v33 = sub_1BA1C0980(v4, v27, v76 & 1, (uint64_t)v12);
      v4 = v33;
      v27 = v34;
      v29 = v35 & 1;
      if (!--v13)
      {
        sub_1BA1D1694(v33, v34, v29);
        v5 = v58;
        v23 = v57;
        v25 = v56;
        goto LABEL_17;
      }
    }
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    swift_once();
  }
}

Swift::Void __swiftcall EngagementInlineViewManager.addPlacement(_:)(NewsEngagement::EngagementUIPlacement a1)
{
  uint64_t v1;
  uint64_t v2;
  unsigned __int8 *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t ObjectType;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  NSObject *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  const char *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  _BOOL4 v42;
  uint8_t *v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  NSObject *v47;
  os_log_type_t v48;
  uint8_t *v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  __int128 v53;
  void (*v54)();
  id v55;
  id v56;
  NSObject *v57;
  os_log_type_t v58;
  _BOOL4 v59;
  uint64_t v60;
  _QWORD *v61;
  id v62;
  uint64_t v63;
  unint64_t v64;
  os_log_t v65;
  uint64_t v66;
  NSObject *v67;
  os_log_type_t v68;
  uint64_t v69;
  uint8_t *v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  void *v77;
  uint64_t v78;
  id v79;
  void *v80;
  id v81;
  char *v82;
  id v83;
  os_log_t v84;
  id v85;
  void (*v86)();
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  char *v94;
  unsigned __int8 v95;
  __int128 aBlock;
  uint64_t (*v97)(uint64_t);
  void *v98;
  void (*v99)();
  uint64_t v100;
  _QWORD v101[2];

  v2 = v1;
  v3 = (unsigned __int8 *)a1;
  v4 = sub_1BA20246C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v84 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1BA202484();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v84 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *v3;
  v13 = *(_QWORD *)(v1 + OBJC_IVAR____TtC14NewsEngagement27EngagementInlineViewManager_featureSettings + 8);
  ObjectType = swift_getObjectType();
  v15 = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 64))(ObjectType, v13);
  LOBYTE(v13) = sub_1BA1BE63C(v12, v15);
  v16 = swift_bridgeObjectRelease();
  if ((v13 & 1) != 0)
  {
    if (qword_1ED5AFB58 != -1)
      swift_once();
    v17 = sub_1BA20243C();
    __swift_project_value_buffer(v17, (uint64_t)qword_1ED5B08D0);
    v18 = sub_1BA202424();
    v19 = sub_1BA20267C();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc();
      v21 = swift_slowAlloc();
      *(_QWORD *)&aBlock = v21;
      *(_DWORD *)v20 = 136315138;
      LOBYTE(v101[0]) = v12;
      v22 = EngagementUIPlacement.rawValue.getter();
      v101[0] = sub_1BA1BDA3C(v22, v23, (uint64_t *)&aBlock);
      sub_1BA2026E8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BA1AE000, v18, v19, "Ignoring request to add blocked placement: %s", v20, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCD775C](v21, -1, -1);
      MEMORY[0x1BCCD775C](v20, -1, -1);
    }

    *(_QWORD *)&aBlock = 4;
    LOBYTE(v101[0]) = v12;
    v95 = 0;
    sub_1BA1BF7E8((uint64_t *)&aBlock, (unsigned __int8 *)v101, &v95);
    return;
  }
  v93 = v7;
  v94 = v11;
  v91 = v9;
  v92 = v8;
  v24 = *(NSObject **)(v1 + OBJC_IVAR____TtC14NewsEngagement27EngagementInlineViewManager_state);
  v101[0] = v24[2].isa;
  MEMORY[0x1E0C80A78](v16);
  *(&v84 - 2) = v24;
  LOBYTE((&v84)[-1]) = v12;
  sub_1BA2022A4();
  sub_1BA1B9050(0, &qword_1ED5AFA70, (uint64_t (*)(uint64_t))type metadata accessor for EngagementInlineDialogViewController, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  swift_retain();
  sub_1BA202364();
  swift_release();
  v25 = aBlock;

  if (v25)
  {
    if (qword_1ED5AFB58 != -1)
      swift_once();
    v27 = sub_1BA20243C();
    __swift_project_value_buffer(v27, (uint64_t)qword_1ED5B08D0);
    v28 = sub_1BA202424();
    v29 = sub_1BA202670();
    if (!os_log_type_enabled(v28, v29))
      goto LABEL_13;
    v30 = (uint8_t *)swift_slowAlloc();
    v31 = swift_slowAlloc();
    *(_QWORD *)&aBlock = v31;
    *(_DWORD *)v30 = 136315138;
    LOBYTE(v101[0]) = v12;
    v32 = EngagementUIPlacement.rawValue.getter();
    v101[0] = sub_1BA1BDA3C(v32, v33, (uint64_t *)&aBlock);
    sub_1BA2026E8();
    swift_bridgeObjectRelease();
    v34 = "Tried to add an already existing placement: %s";
LABEL_12:
    _os_log_impl(&dword_1BA1AE000, v28, v29, v34, v30, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCD775C](v31, -1, -1);
    MEMORY[0x1BCCD775C](v30, -1, -1);
LABEL_13:

    return;
  }
  v101[0] = v24[2].isa;
  MEMORY[0x1E0C80A78](v26);
  *(&v84 - 2) = v24;
  LOBYTE((&v84)[-1]) = v12;
  sub_1BA1B5770(0, (unint64_t *)&unk_1ED5AF9A8, (uint64_t)&type metadata for EngagementInlineBannerState, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
  swift_retain();
  sub_1BA202364();
  swift_release();
  if (v97 != 255)
  {
    if (v97 == 2 && aBlock == 0)
    {
      sub_1BA1C2628(0, 0, 2);
      if (qword_1ED5AFB58 != -1)
        swift_once();
      v35 = sub_1BA20243C();
      __swift_project_value_buffer(v35, (uint64_t)qword_1ED5B08D0);
      v28 = sub_1BA202424();
      v29 = sub_1BA202670();
      if (!os_log_type_enabled(v28, v29))
        goto LABEL_13;
      v30 = (uint8_t *)swift_slowAlloc();
      v31 = swift_slowAlloc();
      *(_QWORD *)&aBlock = v31;
      *(_DWORD *)v30 = 136315138;
      LOBYTE(v101[0]) = v12;
      v36 = EngagementUIPlacement.rawValue.getter();
      v101[0] = sub_1BA1BDA3C(v36, v37, (uint64_t *)&aBlock);
      sub_1BA2026E8();
      swift_bridgeObjectRelease();
      v34 = "Placement already being added: %s";
      goto LABEL_12;
    }
    sub_1BA1FFEA0((id)aBlock, *((uint64_t *)&aBlock + 1), (char)v97);
  }
  v87 = v5;
  if (qword_1ED5AFB58 != -1)
    swift_once();
  v38 = sub_1BA20243C();
  v39 = __swift_project_value_buffer(v38, (uint64_t)qword_1ED5B08D0);
  v40 = sub_1BA202424();
  v41 = sub_1BA20267C();
  v42 = os_log_type_enabled(v40, v41);
  v88 = v4;
  v90 = v39;
  if (v42)
  {
    v43 = (uint8_t *)swift_slowAlloc();
    v44 = swift_slowAlloc();
    *(_QWORD *)&aBlock = v44;
    *(_DWORD *)v43 = 136315138;
    LOBYTE(v101[0]) = v12;
    v45 = EngagementUIPlacement.rawValue.getter();
    v101[0] = sub_1BA1BDA3C(v45, v46, (uint64_t *)&aBlock);
    sub_1BA2026E8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BA1AE000, v40, v41, "Adding placement: %s", v43, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCD775C](v44, -1, -1);
    MEMORY[0x1BCCD775C](v43, -1, -1);
  }

  v47 = sub_1BA202424();
  v48 = sub_1BA202664();
  if (os_log_type_enabled(v47, v48))
  {
    v49 = (uint8_t *)swift_slowAlloc();
    v50 = swift_slowAlloc();
    *(_QWORD *)&aBlock = v50;
    *(_DWORD *)v49 = 136315138;
    LOBYTE(v101[0]) = v12;
    v51 = EngagementUIPlacement.rawValue.getter();
    v101[0] = sub_1BA1BDA3C(v51, v52, (uint64_t *)&aBlock);
    sub_1BA2026E8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BA1AE000, v47, v48, "Fetching dialog view controller for placement: %s", v49, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCD775C](v50, -1, -1);
    MEMORY[0x1BCCD775C](v49, -1, -1);
  }

  __swift_project_boxed_opaque_existential_1((_QWORD *)(v2 + OBJC_IVAR____TtC14NewsEngagement27EngagementInlineViewManager_inlineDialogViewControllerFactory), *(_QWORD *)(v2 + OBJC_IVAR____TtC14NewsEngagement27EngagementInlineViewManager_inlineDialogViewControllerFactory + 24));
  LOBYTE(v101[0]) = v12;
  sub_1BA1BEC14((unsigned __int8 *)v101, 0, (uint64_t)&aBlock);
  v53 = aBlock;
  v54 = v99;
  if (*((_QWORD *)&aBlock + 1) != 11)
  {
    *(_QWORD *)&aBlock = *((_QWORD *)&aBlock + 1);
    LOBYTE(v101[0]) = v12;
    v95 = v97;
    sub_1BA1D2E90(*((uint64_t *)&v53 + 1));
    sub_1BA1BF7E8((uint64_t *)&aBlock, (unsigned __int8 *)v101, &v95);
    sub_1BA1C02E8(*((uint64_t *)&v53 + 1));
  }
  if ((_QWORD)v53)
  {
    v89 = *((_QWORD *)&v53 + 1);
    v55 = (id)v53;
    objc_msgSend(v55, sel_setDelegate_, v2);
    LOBYTE(v101[0]) = v12;
    aBlock = xmmword_1BA206440;
    LOBYTE(v97) = 2;
    sub_1BA1FB880((unsigned __int8 *)v101, v55, (uint64_t)&aBlock);
    v56 = v55;
    v57 = sub_1BA202424();
    v58 = sub_1BA202664();
    v59 = os_log_type_enabled(v57, v58);
    v85 = v56;
    v86 = v54;
    if (v59)
    {
      v60 = swift_slowAlloc();
      v61 = (_QWORD *)swift_slowAlloc();
      v90 = swift_slowAlloc();
      *(_QWORD *)&aBlock = v90;
      *(_DWORD *)v60 = 138412546;
      v84 = v57;
      v101[0] = v56;
      v62 = v56;
      sub_1BA2026E8();
      *v61 = v53;

      *(_WORD *)(v60 + 12) = 2080;
      LOBYTE(v101[0]) = v12;
      v63 = EngagementUIPlacement.rawValue.getter();
      v101[0] = sub_1BA1BDA3C(v63, v64, (uint64_t *)&aBlock);
      sub_1BA2026E8();
      swift_bridgeObjectRelease();
      v65 = v84;
      _os_log_impl(&dword_1BA1AE000, v84, v58, "Assigned dialog view controller %@ for placement: %s", (uint8_t *)v60, 0x16u);
      sub_1BA1DBAC0();
      swift_arrayDestroy();
      MEMORY[0x1BCCD775C](v61, -1, -1);
      v66 = v90;
      swift_arrayDestroy();
      MEMORY[0x1BCCD775C](v66, -1, -1);
      MEMORY[0x1BCCD775C](v60, -1, -1);

    }
    else
    {

    }
    v75 = v87;
    v74 = v88;
    v76 = v94;
    if ((v12 - 9) > 7u)
    {
      v83 = v85;

    }
    else
    {
      sub_1BA1C1078(0, (unint64_t *)&qword_1ED5AF230);
      v77 = (void *)sub_1BA2026AC();
      v78 = swift_allocObject();
      v79 = v85;
      *(_QWORD *)(v78 + 16) = v85;
      v99 = sub_1BA1FFE70;
      v100 = v78;
      *(_QWORD *)&aBlock = MEMORY[0x1E0C809B0];
      *((_QWORD *)&aBlock + 1) = 1107296256;
      v97 = sub_1BA1FAB1C;
      v98 = &block_descriptor_5;
      v80 = _Block_copy(&aBlock);
      v81 = v79;
      swift_release();
      sub_1BA202478();
      *(_QWORD *)&aBlock = MEMORY[0x1E0DEE9D8];
      sub_1BA1CA990();
      sub_1BA1B9050(0, &qword_1ED5AF520, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA1CA9D8();
      v82 = v93;
      sub_1BA20270C();
      MEMORY[0x1BCCD6F70](0, v76, v82, v80);
      _Block_release(v80);

      (*(void (**)(char *, uint64_t))(v75 + 8))(v82, v74);
      (*(void (**)(char *, uint64_t))(v91 + 8))(v76, v92);
      aBlock = xmmword_1BA206450;
      LOBYTE(v97) = 2;
      sub_1BA1FB95C(v81, (uint64_t)&aBlock);

    }
    sub_1BA1C02E8(v89);
    swift_bridgeObjectRelease();
  }
  else
  {
    v67 = sub_1BA202424();
    v68 = sub_1BA202670();
    if (os_log_type_enabled(v67, v68))
    {
      v69 = swift_slowAlloc();
      v89 = *((_QWORD *)&v53 + 1);
      v70 = (uint8_t *)v69;
      v71 = swift_slowAlloc();
      *(_QWORD *)&aBlock = v71;
      *(_DWORD *)v70 = 136315138;
      LOBYTE(v101[0]) = v12;
      v72 = EngagementUIPlacement.rawValue.getter();
      v101[0] = sub_1BA1BDA3C(v72, v73, (uint64_t *)&aBlock);
      sub_1BA2026E8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BA1AE000, v67, v68, "Could not find dialog view controller for placement: %s", v70, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCD775C](v71, -1, -1);
      MEMORY[0x1BCCD775C](v70, -1, -1);

      sub_1BA1C02E8(v89);
    }
    else
    {
      sub_1BA1C02E8(*((uint64_t *)&v53 + 1));

    }
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1BA1BDA3C(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];
  uint64_t ObjectType;

  v6 = sub_1BA1BDB0C(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_1BA1B9D7C((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = MEMORY[0x1E0DEC2B8];
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_1BA1B9D7C((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v12);
  return v7;
}

uint64_t sub_1BA1BDB0C(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_1BA2026F4();
            result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    result = sub_1BA1C5530(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = sub_1BA2027B4();
  if (!v8)
  {
    sub_1BA202808();
    __break(1u);
LABEL_17:
    result = sub_1BA20285C();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain();
}

_QWORD *initializeWithCopy for EngagementUpsellBannerPropertiesResult(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(char *, uint64_t, uint64_t);
  unsigned int (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;

  v6 = (int *)type metadata accessor for EngagementUpsellBannerProperties();
  v7 = *((_QWORD *)v6 - 1);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(v7 + 48))(a2, 1, v6))
  {
    sub_1BA1BE274(0, &qword_1ED5AFE20, (void (*)(uint64_t))type metadata accessor for EngagementUpsellBannerProperties);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    v38 = a3;
    v39 = v7;
    v9 = a2[1];
    *a1 = *a2;
    a1[1] = v9;
    v10 = a2[3];
    a1[2] = a2[2];
    a1[3] = v10;
    v11 = v6[6];
    v12 = (char *)a1 + v11;
    v13 = (char *)a2 + v11;
    v14 = sub_1BA202118();
    v15 = *(_QWORD *)(v14 - 8);
    v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
    swift_bridgeObjectRetain();
    v17 = v16;
    swift_bridgeObjectRetain();
    if (v16(v13, 1, v14))
    {
      sub_1BA1BE274(0, (unint64_t *)&qword_1ED5AFBC8, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v12, v13, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    }
    a3 = v38;
    *(_QWORD *)((char *)a1 + v6[7]) = *(_QWORD *)((char *)a2 + v6[7]);
    v19 = v6[8];
    v20 = (char *)a1 + v19;
    v21 = (char *)a2 + v19;
    swift_bridgeObjectRetain();
    if (v17(v21, 1, v14))
    {
      sub_1BA1BE274(0, (unint64_t *)&qword_1ED5AFBC8, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v20, v21, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v20, 0, 1, v14);
    }
    v23 = v6[9];
    v24 = (_QWORD *)((char *)a1 + v23);
    v25 = (_QWORD *)((char *)a2 + v23);
    v26 = v25[1];
    *v24 = *v25;
    v24[1] = v26;
    v27 = v6[10];
    v28 = (char *)a1 + v27;
    v29 = (char *)a2 + v27;
    swift_bridgeObjectRetain();
    if (v17(v29, 1, v14))
    {
      sub_1BA1BE274(0, (unint64_t *)&qword_1ED5AFBC8, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
      memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v28, v29, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v28, 0, 1, v14);
    }
    *((_BYTE *)a1 + v6[11]) = *((_BYTE *)a2 + v6[11]);
    *((_BYTE *)a1 + v6[12]) = *((_BYTE *)a2 + v6[12]);
    *((_BYTE *)a1 + v6[13]) = *((_BYTE *)a2 + v6[13]);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v39 + 56))(a1, 0, 1, v6);
  }
  v31 = *(int *)(a3 + 20);
  v32 = *(_QWORD *)((char *)a2 + v31);
  if ((unint64_t)(v32 - 1) >= 0xA)
  {
    if (v32 == 11)
    {
      *(_QWORD *)((char *)a1 + v31) = 11;
    }
    else
    {
      *(_QWORD *)((char *)a1 + v31) = v32;
      swift_bridgeObjectRetain();
    }
  }
  else
  {
    *(_QWORD *)((char *)a1 + v31) = v32;
  }
  v33 = *(int *)(a3 + 24);
  v34 = (_QWORD *)((char *)a1 + v33);
  v35 = (_QWORD *)((char *)a2 + v33);
  v36 = v35[1];
  *v34 = *v35;
  v34[1] = v36;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BA1BDFD8@<X0>(char *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  char *v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char *v23;
  _QWORD *v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  char v28;
  char v29;

  v3 = v2;
  v26 = a2;
  sub_1BA1BE274(0, &qword_1ED5AFE20, (void (*)(uint64_t))type metadata accessor for EngagementUpsellBannerProperties);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v25 - v6;
  v8 = type metadata accessor for EngagementUpsellBannerProperties();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (uint64_t *)((char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v25 = type metadata accessor for EngagementUpsellBannerPropertiesResult();
  MEMORY[0x1E0C80A78](v25);
  v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *a1;
  v15 = v3[5];
  v16 = v3[6];
  __swift_project_boxed_opaque_existential_1(v3 + 2, v15);
  v29 = v14;
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 8))(&v29, v15, v16);
  sub_1BA1BE4F8((uint64_t)v13, (uint64_t)v7, &qword_1ED5AFE20, (void (*)(uint64_t))type metadata accessor for EngagementUpsellBannerProperties);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_1BA1BE4BC((uint64_t)v7, &qword_1ED5AFE20, (void (*)(uint64_t))type metadata accessor for EngagementUpsellBannerProperties);
    v17 = *(_QWORD *)&v13[*(int *)(v25 + 20)];
    sub_1BA1BE364(v17);
    result = sub_1BA1B42A0((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for EngagementUpsellBannerPropertiesResult);
    v19 = 0;
    v20 = 0;
    v21 = 0;
    v22 = -1;
  }
  else
  {
    sub_1BA1D2EA4((uint64_t)v7, (uint64_t)v11);
    sub_1BA1D283C(v11, &v27);
    sub_1BA1B42A0((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for EngagementUpsellBannerProperties);
    v19 = v27;
    v22 = v28;
    v23 = &v13[*(int *)(v25 + 24)];
    v20 = *(_QWORD *)v23;
    v21 = *((_QWORD *)v23 + 1);
    swift_bridgeObjectRetain();
    result = sub_1BA1B42A0((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for EngagementUpsellBannerPropertiesResult);
    v17 = 11;
  }
  v24 = v26;
  *v26 = v19;
  *((_BYTE *)v24 + 8) = v22;
  v24[2] = v17;
  *((_BYTE *)v24 + 24) = 3;
  v24[4] = v20;
  v24[5] = v21;
  return result;
}

_QWORD *__swift_project_boxed_opaque_existential_1(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

uint64_t __swift_destroy_boxed_opaque_existential_1Tm(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

uint64_t getEnumTagSinglePayload for EngagementUpsellBannerProperties()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_1BA1BE274(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_1BA2026DC();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t type metadata accessor for EngagementUpsellBannerPropertiesResult()
{
  uint64_t result;

  result = qword_1ED5AFE80;
  if (!qword_1ED5AFE80)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t type metadata accessor for EngagementUpsellBannerProperties()
{
  uint64_t result;

  result = qword_1ED5AFDC8;
  if (!qword_1ED5AFDC8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t sub_1BA1BE364(uint64_t result)
{
  if (result != 11)
    return sub_1BA1D2E90(result);
  return result;
}

uint64_t destroy for EngagementUpsellBannerPropertiesResult(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;

  v4 = (int *)type metadata accessor for EngagementUpsellBannerProperties();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v4 - 1) + 48))(a1, 1, v4))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v5 = a1 + v4[6];
    v6 = sub_1BA202118();
    v7 = *(_QWORD *)(v6 - 8);
    v8 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    if (!v8(v5, 1, v6))
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
    swift_bridgeObjectRelease();
    v9 = a1 + v4[8];
    if (!v8(v9, 1, v6))
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v9, v6);
    swift_bridgeObjectRelease();
    v10 = a1 + v4[10];
    if (!v8(v10, 1, v6))
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v10, v6);
  }
  if ((unint64_t)(*(_QWORD *)(a1 + *(int *)(a2 + 20)) - 1) >= 0xB)
    swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BA1BE4BC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t v4;

  sub_1BA1BE274(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1BA1BE4F8(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  uint64_t v6;

  sub_1BA1BE274(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  if ((*(_DWORD *)(*(_QWORD *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t sub_1BA1BE584()
{
  sub_1BA2022A4();
  sub_1BA1B5770(0, (unint64_t *)&unk_1ED5AF9A8, (uint64_t)&type metadata for EngagementInlineBannerState, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
  swift_retain();
  sub_1BA202364();
  return swift_release();
}

uint64_t sub_1BA1BE63C(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
  {
    swift_bridgeObjectRetain();
    __asm { BR              X9 }
  }
  return 0;
}

void sub_1BA1BEC14(unsigned __int8 *a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  int v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint8_t *v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  id v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  void *v32;
  id v33;
  void *v34;
  uint64_t v35;
  __int128 v36;
  void *v37;
  id v38;
  id v39;
  id v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t ObjectType;
  NSObject *v45;
  os_log_type_t v46;
  uint8_t *v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;

  v4 = v3;
  v7 = *a1;
  if (qword_1ED5AFB58 != -1)
    swift_once();
  v8 = sub_1BA20243C();
  __swift_project_value_buffer(v8, (uint64_t)qword_1ED5B08D0);
  v9 = sub_1BA202424();
  v10 = sub_1BA20267C();
  if (os_log_type_enabled(v9, v10))
  {
    v51 = a2;
    v11 = (uint8_t *)swift_slowAlloc();
    v52 = a3;
    v12 = swift_slowAlloc();
    *(_QWORD *)&v54 = v12;
    *(_DWORD *)v11 = 136315138;
    v13 = EngagementUIPlacement.rawValue.getter();
    v53 = sub_1BA1BDA3C(v13, v14, (uint64_t *)&v54);
    sub_1BA2026E8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BA1AE000, v9, v10, "Requesting inlineDialogViewController for %s.", v11, 0xCu);
    swift_arrayDestroy();
    v15 = v12;
    a3 = v52;
    MEMORY[0x1BCCD775C](v15, -1, -1);
    v16 = v11;
    a2 = v51;
    MEMORY[0x1BCCD775C](v16, -1, -1);
  }

  if (qword_1ED5AF8C8 != -1)
    swift_once();
  sub_1BA1BF3BC();
  sub_1BA2021CC();
  if ((v54 & 1) != 0)
  {
    if ((v7 - 9) <= 7)
      goto LABEL_16;
    goto LABEL_11;
  }
  if (((1 << v7) & 0x3FFE01FF) != 0)
  {
LABEL_11:
    v17 = sub_1BA202424();
    v18 = sub_1BA20267C();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc();
      v20 = swift_slowAlloc();
      *(_QWORD *)&v54 = v20;
      *(_DWORD *)v19 = 136315138;
      v21 = EngagementUIPlacement.rawValue.getter();
      v53 = sub_1BA1BDA3C(v21, v22, (uint64_t *)&v54);
      sub_1BA2026E8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BA1AE000, v17, v18, "Placement %s is not of type inline. Returning empty controller.", v19, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCD775C](v20, -1, -1);
      MEMORY[0x1BCCD775C](v19, -1, -1);
    }

    v23 = xmmword_1BA2046B0;
    goto LABEL_14;
  }
  if (((1 << v7) & 0xFE00) != 0
    || (v43 = *(_QWORD *)(v3 + 104),
        ObjectType = swift_getObjectType(),
        ((*(uint64_t (**)(uint64_t, uint64_t))(v43 + 40))(ObjectType, v43) & 1) == 0))
  {
LABEL_16:
    LOBYTE(v53) = v7;
    sub_1BA1BF460((char *)&v53, (uint64_t)&v54);
    v25 = *((_QWORD *)&v54 + 1);
    v24 = v54;
    v26 = v55;
    if ((_QWORD)v54)
    {
      v27 = (id)v54;
      sub_1BA1BE364(v25);

      sub_1BA1C02E8(v25);
      swift_bridgeObjectRelease();
      *(_QWORD *)a3 = v24;
    }
    else
    {
      sub_1BA1BE364(*((uint64_t *)&v54 + 1));
      if ((sub_1BA1BF400() & 1) != 0)
      {
        if (qword_1ED5AEFB0 != -1)
          swift_once();
        sub_1BA2021CC();
        if ((v54 & 1) != 0)
          goto LABEL_29;
      }
      if ((a2 & 1) != 0)
      {
LABEL_29:
        v28 = (_QWORD *)(v4 + 56);
        v29 = *(_QWORD *)(v4 + 80);
        v30 = *(_QWORD *)(v4 + 88);
        __swift_project_boxed_opaque_existential_1(v28, v29);
        LOBYTE(v53) = v7;
        EngagementRequestFactoryType.createRequest(for:forceEnable:)((char *)&v53, a2 & 1, v29, *(_QWORD *)(v30 + 8));
        v31 = BYTE8(v54);
        if ((BYTE8(v54) & 1) != 0)
        {
          sub_1BA1C02E8(v25);
          swift_bridgeObjectRelease();
          if (v25 == 11)
          {
            v25 = v55;
            sub_1BA1BE364(v55);
          }
          sub_1BA1BFE98((uint64_t)&v54);
          *(_QWORD *)a3 = 0;
        }
        else
        {
          v32 = (void *)v54;
          sub_1BA1C36F0();
          v33 = v32;
          v34 = (void *)sub_1BA2026AC();
          v35 = swift_allocObject();
          *(_QWORD *)(v35 + 16) = v33;
          *(_BYTE *)(v35 + 24) = v7;
          v36 = v55;
          *(_OWORD *)(v35 + 32) = v54;
          *(_OWORD *)(v35 + 48) = v36;
          *(_OWORD *)(v35 + 64) = v56;
          sub_1BA1D1628(v32, v31);
          sub_1BA1DF86C((uint64_t)&v54);
          type metadata accessor for EngagementInlineDialogViewController();
          sub_1BA202694();

          swift_release();
          v37 = (void *)v53;
          if (v53)
          {
            v38 = objc_allocWithZone(MEMORY[0x1E0CFDDF8]);
            v39 = v37;
            v40 = objc_msgSend(v38, sel_init);
            objc_msgSend(v39, sel_setPreferredAppearance_, v40);
            sub_1BA1C02E8(v25);
            swift_bridgeObjectRelease();
            sub_1BA1C02F8(v32, v31);
            sub_1BA1C02F8(v32, v31);

          }
          else
          {
            sub_1BA1C02E8(v25);
            swift_bridgeObjectRelease();
            sub_1BA1C02F8(v32, v31);
            sub_1BA1C02F8(v32, v31);
          }
          if (v25 == 11)
          {
            v25 = v55;
            sub_1BA1BE364(v55);
          }
          sub_1BA1BFE98((uint64_t)&v54);
          *(_QWORD *)a3 = v37;
        }
      }
      else if ((*(_BYTE *)(v4 + 128) & 1) != 0)
      {
        sub_1BA1C36F0();
        v41 = (void *)sub_1BA2026AC();
        v42 = swift_allocObject();
        *(_QWORD *)(v42 + 16) = v4;
        *(_BYTE *)(v42 + 24) = v7;
        type metadata accessor for EngagementInlineDialogViewController();
        swift_retain();
        sub_1BA202694();
        sub_1BA1C02E8(v25);

        swift_release();
        swift_bridgeObjectRelease();
        *(_QWORD *)a3 = v54;
      }
      else
      {
        sub_1BA1C02E8(v25);
        swift_bridgeObjectRelease();
        *(_QWORD *)a3 = 0;
        if (v25 == 11)
        {
          *(_QWORD *)(a3 + 8) = 2;
          goto LABEL_19;
        }
      }
    }
    *(_QWORD *)(a3 + 8) = v25;
LABEL_19:
    *(_BYTE *)(a3 + 16) = v26;
    goto LABEL_20;
  }
  v45 = sub_1BA202424();
  v46 = sub_1BA20267C();
  if (os_log_type_enabled(v45, v46))
  {
    v47 = (uint8_t *)swift_slowAlloc();
    v48 = swift_slowAlloc();
    *(_QWORD *)&v54 = v48;
    *(_DWORD *)v47 = 136315138;
    v49 = EngagementUIPlacement.rawValue.getter();
    v53 = sub_1BA1BDA3C(v49, v50, (uint64_t *)&v54);
    sub_1BA2026E8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BA1AE000, v45, v46, "Placement %s is blocked. Returning empty controller.", v47, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCD775C](v48, -1, -1);
    MEMORY[0x1BCCD775C](v47, -1, -1);
  }

  v23 = xmmword_1BA2046A0;
LABEL_14:
  *(_OWORD *)a3 = v23;
  *(_BYTE *)(a3 + 16) = 0;
LABEL_20:
  *(_QWORD *)(a3 + 24) = 0;
  *(_QWORD *)(a3 + 32) = 0;
}

unint64_t sub_1BA1BF3BC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED5AFA80;
  if (!qword_1ED5AFA80)
  {
    v1 = type metadata accessor for EngagementInlineDialogViewControllerFactory();
    result = MEMORY[0x1BCCD76CC](&unk_1BA20464C, v1);
    atomic_store(result, (unint64_t *)&qword_1ED5AFA80);
  }
  return result;
}

uint64_t sub_1BA1BF400()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t ObjectType;
  char v4;

  v1 = *(unsigned __int8 *)(v0 + 128);
  if (v1 == 2)
  {
    v2 = *(_QWORD *)(v0 + 104);
    ObjectType = swift_getObjectType();
    v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(ObjectType, v2);
    *(_BYTE *)(v0 + 128) = v4 & 1;
  }
  else
  {
    v4 = v1 & 1;
  }
  return v4 & 1;
}

uint64_t sub_1BA1BF460@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  void *v8;
  id v9;
  void *v10;
  uint64_t v11;
  __int128 v12;
  void *v13;
  id v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  _BYTE *v18;
  Swift::String v19;
  id v20;
  _BYTE *v21;
  id v22;
  uint64_t v23;
  uint64_t result;
  char v25;
  __int128 v26;
  __int128 v27;
  _QWORD v28[3];
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;

  v4 = *a1;
  sub_1BA1B2FB8(v2 + 16, (uint64_t)v28);
  v5 = v29;
  v6 = v30;
  __swift_project_boxed_opaque_existential_1(v28, v29);
  LOBYTE(v26) = v4;
  EngagementRequestFactoryType.createRequest(for:)((char *)&v26, v5, *(_QWORD *)(v6 + 8));
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v28);
  v7 = BYTE8(v31);
  if ((BYTE8(v31) & 1) == 0)
  {
    v8 = (void *)v31;
    sub_1BA1C36F0();
    v9 = v8;
    v10 = (void *)sub_1BA2026AC();
    v11 = swift_allocObject();
    *(_QWORD *)(v11 + 16) = v9;
    *(_BYTE *)(v11 + 24) = v4;
    v12 = v32;
    *(_OWORD *)(v11 + 32) = v31;
    *(_OWORD *)(v11 + 48) = v12;
    *(_OWORD *)(v11 + 64) = v33;
    sub_1BA1D1628(v8, v7);
    sub_1BA1DF86C((uint64_t)&v31);
    type metadata accessor for EngagementInlineDialogViewController();
    sub_1BA202694();

    swift_release();
    v13 = (void *)v28[0];
    sub_1BA20273C();
    v14 = objc_msgSend(v9, sel_userInfo);
    v15 = sub_1BA2024D8();

    if (*(_QWORD *)(v15 + 16) && (v16 = sub_1BA1CE30C((uint64_t)v28), (v17 & 1) != 0))
    {
      sub_1BA1B9D7C(*(_QWORD *)(v15 + 56) + 32 * v16, (uint64_t)&v26);
    }
    else
    {
      v26 = 0u;
      v27 = 0u;
    }
    swift_bridgeObjectRelease();
    sub_1BA1CEC88((uint64_t)v28);
    if (*((_QWORD *)&v27 + 1))
    {
      if ((swift_dynamicCast() & 1) != 0)
      {
        if (v13)
        {
          v18 = v13;
          v19._countAndFlagsBits = 0x656D656761676E65;
          v19._object = (void *)0xEF726566664F746ELL;
          EngagementOffer.init(rawValue:)(v19);
          v18[OBJC_IVAR____TtC14NewsEngagement36EngagementInlineDialogViewController_offer] = v28[0];

LABEL_14:
          v20 = objc_allocWithZone(MEMORY[0x1E0CFDDF8]);
          v21 = v18;
          v22 = objc_msgSend(v20, sel_init);
          objc_msgSend(v21, sel_setPreferredAppearance_, v22);
          sub_1BA1C02F8(v8, v7);
          sub_1BA1C02F8(v8, v7);

          goto LABEL_17;
        }
        swift_bridgeObjectRelease();
        goto LABEL_16;
      }
    }
    else
    {
      sub_1BA1B87E4((uint64_t)&v26);
    }
    if (v13)
    {
      v18 = v13;
      goto LABEL_14;
    }
LABEL_16:
    sub_1BA1C02F8(v8, v7);
    sub_1BA1C02F8(v8, v7);
    goto LABEL_17;
  }
  v13 = 0;
LABEL_17:
  v23 = v32;
  sub_1BA1BE364(v32);
  result = sub_1BA1BFE98((uint64_t)&v31);
  v25 = BYTE8(v32);
  *(_QWORD *)a2 = v13;
  *(_QWORD *)(a2 + 8) = v23;
  *(_BYTE *)(a2 + 16) = v25;
  *(_QWORD *)(a2 + 24) = 0;
  *(_QWORD *)(a2 + 32) = 0;
  return result;
}

uint64_t EngagementUpsellBannerPropertiesProviding.bannerProperties(for:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  _QWORD *v4;

  v2 = type metadata accessor for EngagementUpsellBannerProperties();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(a1, 1, 1, v2);
  result = type metadata accessor for EngagementUpsellBannerPropertiesResult();
  *(_QWORD *)(a1 + *(int *)(result + 20)) = 11;
  v4 = (_QWORD *)(a1 + *(int *)(result + 24));
  *v4 = 0;
  v4[1] = 0;
  return result;
}

uint64_t storeEnumTagSinglePayload for EngagementUpsellBannerProperties()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t EngagementFeatureSettingsType.blockedPlacements.getter()
{
  return MEMORY[0x1E0DEE9D8];
}

uint64_t sub_1BA1BF7E8(uint64_t *a1, unsigned __int8 *a2, unsigned __int8 *a3)
{
  void *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  id v24;
  _BYTE *v25;
  void *v26;
  const void *v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE v31[4];
  int v32;
  _BYTE *v33;
  uint64_t v34;
  _BYTE *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  int v43;
  __int128 v44;
  uint64_t v45;
  _QWORD aBlock[7];

  v7 = sub_1BA20246C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = &v31[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = sub_1BA202484();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = &v31[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = *a1;
  v43 = *a2;
  v16 = *a3;
  v42 = v3;
  v17 = sub_1BA1BFAE8();
  if (*(_QWORD *)(v17 + 16))
  {
    v39 = *(_QWORD *)(v17 + 16);
    v38 = sub_1BA1C1078(0, (unint64_t *)&qword_1ED5AF230);
    v35 = v10;
    v36 = v7;
    v33 = v14;
    v18 = 0;
    v32 = v16;
    v40 = v17;
    v41 = v12;
    v37 = v11;
    v34 = v8;
    v19 = v10;
    do
    {
      v20 = v17 + 16 * v18++;
      v44 = *(_OWORD *)(v20 + 32);
      swift_unknownObjectRetain();
      v45 = sub_1BA2026AC();
      v21 = swift_allocObject();
      *(_OWORD *)(v21 + 16) = v44;
      v22 = v42;
      *(_QWORD *)(v21 + 32) = v42;
      *(_QWORD *)(v21 + 40) = v15;
      *(_BYTE *)(v21 + 48) = v43;
      *(_BYTE *)(v21 + 49) = v32;
      aBlock[4] = sub_1BA201FE0;
      aBlock[5] = v21;
      aBlock[0] = MEMORY[0x1E0C809B0];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1BA1FAB1C;
      aBlock[3] = &block_descriptor_34;
      v23 = _Block_copy(aBlock);
      swift_unknownObjectRetain();
      v24 = v22;
      sub_1BA1D2E90(v15);
      swift_release();
      v25 = v33;
      sub_1BA202478();
      aBlock[0] = MEMORY[0x1E0DEE9D8];
      sub_1BA1CA990();
      sub_1BA1B9050(0, &qword_1ED5AF520, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA1CA9D8();
      sub_1BA20270C();
      v26 = (void *)v45;
      MEMORY[0x1BCCD6F70](0, v25, v19, v23);
      v17 = v40;
      v27 = v23;
      v28 = v34;
      _Block_release(v27);
      v29 = v41;
      swift_unknownObjectRelease();

      (*(void (**)(_BYTE *, uint64_t))(v28 + 8))(v19, v7);
      (*(void (**)(_BYTE *, uint64_t))(v29 + 8))(v25, v11);
    }
    while (v39 != v18);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BA1BFAE8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int64_t v6;
  uint64_t result;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  unint64_t v20;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  char v34[8];
  uint64_t v35;
  uint64_t v36;
  _QWORD v37[2];
  uint64_t v38;
  _QWORD v39[2];

  sub_1BA202268();
  v1 = (uint64_t *)(v0 + 32);
  swift_beginAccess();
  v2 = *(_QWORD *)(v0 + 32);
  v31 = v2 + 64;
  v3 = 1 << *(_BYTE *)(v2 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(v2 + 64);
  v6 = (unint64_t)(v3 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v8 = 0;
  v30 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  if (!v5)
    goto LABEL_6;
LABEL_4:
  v9 = __clz(__rbit64(v5));
  v5 &= v5 - 1;
  v10 = v9 | (v8 << 6);
LABEL_5:
  v11 = *(_QWORD *)(v2 + 56);
  v36 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v10);
  sub_1BA1FA1F8(v11 + 16 * v10, (uint64_t)v37);
  while (1)
  {
    sub_1BA201F44((uint64_t)&v36, (uint64_t)&v38);
    if (v39[0])
      v15 = 0;
    else
      v15 = v39[1] == 1;
    if (v15)
    {
      swift_release();
      sub_1BA202274();
      return (uint64_t)v30;
    }
    v16 = v38;
    sub_1BA1B0D38((uint64_t)v39, (uint64_t)v34);
    v17 = MEMORY[0x1BCCD77D4](v34);
    if (v17)
    {
      v23 = v17;
      v29 = v35;
      swift_unknownObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v30 = sub_1BA1D5378(0, v30[2] + 1, 1, v30);
      v25 = v30[2];
      v24 = v30[3];
      v26 = v25 + 1;
      if (v25 >= v24 >> 1)
      {
        v28 = sub_1BA1D5378((_QWORD *)(v24 > 1), v25 + 1, 1, v30);
        v26 = v25 + 1;
        v30 = v28;
      }
      v30[2] = v26;
      v27 = &v30[2 * v25];
      v27[4] = v23;
      v27[5] = v29;
      swift_unknownObjectRelease();
    }
    else
    {
      swift_beginAccess();
      v18 = sub_1BA1B0EC8(v16);
      if ((v19 & 1) != 0)
      {
        v20 = v18;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v22 = *v1;
        v32 = *v1;
        *v1 = 0x8000000000000000;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1BA1F9694();
          v22 = v32;
        }
        sub_1BA1B0D38(*(_QWORD *)(v22 + 56) + 16 * v20, (uint64_t)&v33);
        sub_1BA2018B4(v20, v22);
        *v1 = v22;
        swift_bridgeObjectRelease();
      }
      else
      {
        v33 = xmmword_1BA203750;
      }
      swift_endAccess();
      sub_1BA1B900C((uint64_t)&v33, &qword_1ED5AF168, (uint64_t)&type metadata for EngagementInlineViewManager.Observation);
    }
    result = sub_1BA1CA4FC((uint64_t)v34);
    if (v5)
      goto LABEL_4;
LABEL_6:
    v12 = v8 + 1;
    if (__OFADD__(v8, 1))
      break;
    if (v12 >= v6)
    {
      v14 = v8;
    }
    else
    {
      v13 = *(_QWORD *)(v31 + 8 * v12);
      if (v13)
        goto LABEL_9;
      v14 = v8 + 1;
      if (v8 + 2 < v6)
      {
        v13 = *(_QWORD *)(v31 + 8 * (v8 + 2));
        if (v13)
        {
          v12 = v8 + 2;
LABEL_9:
          v5 = (v13 - 1) & v13;
          v10 = __clz(__rbit64(v13)) + (v12 << 6);
          v8 = v12;
          goto LABEL_5;
        }
        v14 = v8 + 2;
        if (v8 + 3 < v6)
        {
          v13 = *(_QWORD *)(v31 + 8 * (v8 + 3));
          if (v13)
          {
            v12 = v8 + 3;
            goto LABEL_9;
          }
          v12 = v8 + 4;
          v14 = v8 + 3;
          if (v8 + 4 < v6)
          {
            v13 = *(_QWORD *)(v31 + 8 * v12);
            if (v13)
              goto LABEL_9;
            while (v6 - 5 != v8)
            {
              v13 = *(_QWORD *)(v2 + 104 + 8 * v8++);
              if (v13)
              {
                v12 = v8 + 4;
                goto LABEL_9;
              }
            }
            v14 = v6 - 1;
          }
        }
      }
    }
    v5 = 0;
    v36 = 0;
    v37[0] = 0;
    v8 = v14;
    v37[1] = 1;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BA1BFE84(uint64_t result)
{
  if ((unint64_t)(result - 1) >= 0xA)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_1BA1BFE98(uint64_t a1)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 16);
  sub_1BA1C02F8(*(id *)a1, *(_BYTE *)(a1 + 8));
  sub_1BA1C02E8(v2);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1BA1BFEE4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  void *v8;
  int64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t i;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  char v18;
  _QWORD *v19;
  char v20;
  unint64_t v21;
  uint64_t v22;
  _BOOL8 v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  char v27;
  void *v28;
  unint64_t v29;
  char v30;
  char v31;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  BOOL v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t result;
  uint64_t v41;
  int64_t v42;
  _QWORD *v43;
  int64_t v45;
  unint64_t v46;
  void *v47;
  unsigned __int8 v48;
  uint64_t v49;
  char v50;

  v4 = 1 << *(_BYTE *)(a1 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a1 + 56);
  v43 = (_QWORD *)(a2 + OBJC_IVAR____TtC14NewsEngagement29EngagementUpsellEventProvider_requestFactory);
  v42 = (unint64_t)(v4 + 63) >> 6;
  swift_bridgeObjectRetain();
  v7 = 0;
  if (v6)
    goto LABEL_38;
LABEL_7:
  v9 = v7 + 1;
  if (!__OFADD__(v7, 1))
  {
    if (v9 < v42)
    {
      v10 = *(_QWORD *)(v41 + 8 * v9);
      ++v7;
      if (v10)
        goto LABEL_22;
      v7 = v9 + 1;
      if (v9 + 1 >= v42)
        return swift_release();
      v10 = *(_QWORD *)(v41 + 8 * v7);
      if (v10)
        goto LABEL_22;
      v7 = v9 + 2;
      if (v9 + 2 >= v42)
        return swift_release();
      v10 = *(_QWORD *)(v41 + 8 * v7);
      if (v10)
        goto LABEL_22;
      v7 = v9 + 3;
      if (v9 + 3 >= v42)
        return swift_release();
      v10 = *(_QWORD *)(v41 + 8 * v7);
      if (v10)
      {
LABEL_22:
        v6 = (v10 - 1) & v10;
        for (i = __clz(__rbit64(v10)) + (v7 << 6); ; i = v39 | (v7 << 6))
        {
          v13 = *(unsigned __int8 *)(*(_QWORD *)(a1 + 48) + i);
          v14 = v43[3];
          v15 = v43[4];
          __swift_project_boxed_opaque_existential_1(v43, v14);
          v50 = v13;
          EngagementRequestFactoryType.createRequest(for:)(&v50, v14, *(_QWORD *)(v15 + 8));
          if (v48 == 255)
          {
            v28 = v47;
            swift_bridgeObjectRetain();
            v29 = sub_1BA1B9DB8(v13);
            v31 = v30;
            swift_bridgeObjectRelease();
            if ((v31 & 1) != 0)
            {
              isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              v33 = *a3;
              v47 = (void *)*a3;
              *a3 = 0x8000000000000000;
              if ((isUniquelyReferenced_nonNull_native & 1) == 0)
              {
                sub_1BA1F84D0();
                v33 = (uint64_t)v47;
              }
              v8 = *(void **)(*(_QWORD *)(v33 + 56) + 16 * v29);
              sub_1BA200F44(v29, v33);
              *a3 = v33;
              swift_bridgeObjectRelease();

            }
            sub_1BA1C02F8(v28, 255);
            sub_1BA1C02E8(v49);
            swift_bridgeObjectRelease();
            if (!v6)
              goto LABEL_7;
          }
          else
          {
            v46 = v6;
            v45 = v7;
            v16 = v47;
            v17 = v47;
            v18 = swift_isUniquelyReferenced_nonNull_native();
            v19 = (_QWORD *)*a3;
            v47 = v19;
            *a3 = 0x8000000000000000;
            v21 = sub_1BA1B9DB8(v13);
            v22 = v19[2];
            v23 = (v20 & 1) == 0;
            v24 = v22 + v23;
            if (__OFADD__(v22, v23))
            {
              __break(1u);
              goto LABEL_41;
            }
            v25 = v20;
            if (v19[3] >= v24)
            {
              if ((v18 & 1) == 0)
                sub_1BA1F84D0();
            }
            else
            {
              sub_1BA1F6B10(v24, v18);
              v26 = sub_1BA1B9DB8(v13);
              if ((v25 & 1) != (v27 & 1))
                goto LABEL_44;
              v21 = v26;
            }
            if ((v25 & 1) != 0)
            {
              v34 = v19[7] + 16 * v21;

              *(_QWORD *)v34 = v16;
              *(_BYTE *)(v34 + 8) = v48 & 1;
            }
            else
            {
              v19[(v21 >> 6) + 8] |= 1 << v21;
              *(_BYTE *)(v19[6] + v21) = v13;
              v35 = v19[7] + 16 * v21;
              *(_QWORD *)v35 = v16;
              *(_BYTE *)(v35 + 8) = v48 & 1;
              v36 = v19[2];
              v37 = __OFADD__(v36, 1);
              v38 = v36 + 1;
              if (v37)
                goto LABEL_42;
              v19[2] = v38;
            }
            *a3 = (uint64_t)v19;
            swift_bridgeObjectRelease();
            sub_1BA1C02F8(v16, v48);
            sub_1BA1C02E8(v49);
            swift_bridgeObjectRelease();
            v7 = v45;
            v6 = v46;
            if (!v46)
              goto LABEL_7;
          }
LABEL_38:
          v39 = __clz(__rbit64(v6));
          v6 &= v6 - 1;
        }
      }
      v11 = v9 + 4;
      if (v11 < v42)
      {
        v10 = *(_QWORD *)(v41 + 8 * v11);
        if (v10)
        {
          v7 = v11;
          goto LABEL_22;
        }
        while (1)
        {
          v7 = v11 + 1;
          if (__OFADD__(v11, 1))
            goto LABEL_43;
          if (v7 >= v42)
            return swift_release();
          v10 = *(_QWORD *)(v41 + 8 * v7);
          ++v11;
          if (v10)
            goto LABEL_22;
        }
      }
    }
    return swift_release();
  }
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  result = sub_1BA2029AC();
  __break(1u);
  return result;
}

uint64_t sub_1BA1C02E8(uint64_t result)
{
  if (result != 11)
    return sub_1BA1BFE84(result);
  return result;
}

void sub_1BA1C02F8(id a1, char a2)
{
  if (a2 != -1)

}

uint64_t EngagementRequestFactoryType.createRequest(for:)(char *a1, uint64_t a2, uint64_t a3)
{
  char v4;

  v4 = *a1;
  return (*(uint64_t (**)(char *, _QWORD, _QWORD, uint64_t, uint64_t))(a3 + 8))(&v4, 0, 0, a2, a3);
}

uint64_t sub_1BA1C0348@<X0>(char *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1BA1BDFD8(a1, a2);
}

void sub_1BA1C036C(uint64_t a1, uint64_t a2, unint64_t a3)
{
  sub_1BA1C038C(a1, a2, a3);
}

void sub_1BA1C038C(uint64_t a1, uint64_t a2, unint64_t a3)
{
  int64_t v3;
  int64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  char v11;
  uint64_t v12;
  int64_t v13;
  int v14;
  int v15;
  char v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  int64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  int v29;
  uint64_t v30;
  char v31;
  char v32;
  unint64_t v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  id v43;
  void *v44;
  void *v45;
  id v46;
  id v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  NSObject *v51;
  os_log_type_t v52;
  uint8_t *v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  int64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD aBlock[6];
  char v62;

  v4 = v3;
  v58 = a1;
  swift_getObjectType();
  v7 = sub_1BA2024A8();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (uint64_t *)((char *)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA1C1078(0, (unint64_t *)&qword_1ED5AF230);
  *v10 = sub_1BA2026AC();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E0DEF740], v7);
  v11 = sub_1BA2024C0();
  (*(void (**)(uint64_t *, uint64_t))(v8 + 8))(v10, v7);
  if ((v11 & 1) == 0)
    goto LABEL_40;
  if (qword_1ED5AEFB0 != -1)
    goto LABEL_41;
  while (1)
  {
    sub_1BA1C1C6C();
    sub_1BA2021CC();
    if ((aBlock[0] & 1) != 0)
      break;
    v55 = a2;
    v56 = a3;
    v12 = v58;
    v13 = *(_QWORD *)(v58 + 16);
    a2 = MEMORY[0x1E0DEE9D8];
    v57 = v4;
    if (v13)
    {
      aBlock[0] = MEMORY[0x1E0DEE9D8];
      sub_1BA1C0B04(0, v13, 0);
      a2 = aBlock[0];
      v4 = sub_1BA1C1074(v12);
      v15 = v14;
      v17 = v16 & 1;
      v59 = v12 + 56;
      while ((v4 & 0x8000000000000000) == 0 && v4 < 1 << *(_BYTE *)(v12 + 32))
      {
        if (((*(_QWORD *)(v59 + (((unint64_t)v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) == 0)
          goto LABEL_35;
        if (*(_DWORD *)(v12 + 36) != v15)
          goto LABEL_36;
        LODWORD(v60) = v17;
        v62 = *(_BYTE *)(*(_QWORD *)(v12 + 48) + v4);
        v18 = EngagementUIPlacement.rawValue.getter();
        v20 = v19;
        aBlock[0] = a2;
        a3 = *(_QWORD *)(a2 + 16);
        v21 = *(_QWORD *)(a2 + 24);
        if (a3 >= v21 >> 1)
        {
          sub_1BA1C0B04(v21 > 1, a3 + 1, 1);
          a2 = aBlock[0];
        }
        *(_QWORD *)(a2 + 16) = a3 + 1;
        v22 = a2 + 16 * a3;
        *(_QWORD *)(v22 + 32) = v18;
        *(_QWORD *)(v22 + 40) = v20;
        v23 = sub_1BA1C0980(v4, v15, v60 & 1, v12);
        v4 = v23;
        v15 = v24;
        v17 = v25 & 1;
        if (!--v13)
        {
          sub_1BA1D1694(v23, v24, v17);
          v4 = v57;
          goto LABEL_14;
        }
      }
      __break(1u);
LABEL_35:
      __break(1u);
LABEL_36:
      __break(1u);
    }
    else
    {
LABEL_14:
      v26 = sub_1BA1C0C9C(a2);
      swift_bridgeObjectRelease();
      if (!*(_QWORD *)(v26 + 16))
      {
        swift_bridgeObjectRelease();
        return;
      }
      a2 = *(_QWORD *)(v12 + 16);
      v27 = MEMORY[0x1E0DEE9D8];
      if (!a2)
      {
LABEL_26:
        v38 = sub_1BA1C0C9C(v27);
        swift_bridgeObjectRelease();
        sub_1BA1C1A78(v38, (uint64_t (*)(void))sub_1BA1C1074, (uint64_t (*)(void))sub_1BA1C1BBC);
        v40 = v39;
        swift_bridgeObjectRelease();
        v42 = v55;
        v41 = v56;
        if (v40)
        {
          v43 = objc_allocWithZone(MEMORY[0x1E0CFDA88]);
          v44 = (void *)sub_1BA2024FC();
          swift_bridgeObjectRelease();
          v45 = (void *)sub_1BA202640();
          swift_bridgeObjectRelease();
          v46 = objc_msgSend(v43, sel_initWithServiceType_placements_, v44, v45);

          v47 = objc_msgSend(*(id *)(v4 + OBJC_IVAR____TtC14NewsEngagement23EngagementEventProvider_engagement), sel_enqueueMessageEvent_, v46);
          v48 = swift_allocObject();
          *(_QWORD *)(v48 + 16) = v42;
          *(_QWORD *)(v48 + 24) = v41;
          aBlock[4] = sub_1BA1E2658;
          aBlock[5] = v48;
          aBlock[0] = MEMORY[0x1E0C809B0];
          aBlock[1] = 1107296256;
          aBlock[2] = sub_1BA1E0784;
          aBlock[3] = &block_descriptor_16;
          v49 = _Block_copy(aBlock);
          swift_retain();
          swift_release();
          objc_msgSend(v47, sel_addFinishBlock_, v49);
          _Block_release(v49);

        }
        else
        {
          swift_bridgeObjectRelease();
          if (qword_1ED5AFB58 != -1)
            swift_once();
          v50 = sub_1BA20243C();
          __swift_project_value_buffer(v50, (uint64_t)qword_1ED5B08D0);
          v51 = sub_1BA202424();
          v52 = sub_1BA202670();
          if (os_log_type_enabled(v51, v52))
          {
            v53 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)v53 = 0;
            _os_log_impl(&dword_1BA1AE000, v51, v52, "Could not find service type", v53, 2u);
            MEMORY[0x1BCCD775C](v53, -1, -1);
          }

        }
        return;
      }
      v60 = v26;
      aBlock[0] = MEMORY[0x1E0DEE9D8];
      sub_1BA1C0B04(0, a2, 0);
      v27 = aBlock[0];
      v4 = sub_1BA1C1074(v12);
      v29 = v28;
      v30 = v12 + 56;
      v32 = v31 & 1;
      while ((v4 & 0x8000000000000000) == 0 && v4 < 1 << *(_BYTE *)(v12 + 32))
      {
        if (((*(_QWORD *)(v30 + (((unint64_t)v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) == 0)
          goto LABEL_38;
        if (*(_DWORD *)(v12 + 36) != v29)
          goto LABEL_39;
        aBlock[0] = v27;
        a3 = *(_QWORD *)(v27 + 16);
        v33 = *(_QWORD *)(v27 + 24);
        if (a3 >= v33 >> 1)
        {
          sub_1BA1C0B04(v33 > 1, a3 + 1, 1);
          v27 = aBlock[0];
        }
        *(_QWORD *)(v27 + 16) = a3 + 1;
        v34 = v27 + 16 * a3;
        *(_QWORD *)(v34 + 32) = 1937204590;
        *(_QWORD *)(v34 + 40) = 0xE400000000000000;
        v12 = v58;
        v35 = sub_1BA1C0980(v4, v29, v32 & 1, v58);
        v4 = v35;
        v29 = v36;
        v32 = v37 & 1;
        if (!--a2)
        {
          sub_1BA1D1694(v35, v36, v37 & 1);
          v4 = v57;
          goto LABEL_26;
        }
      }
    }
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
LABEL_41:
    swift_once();
  }
}

int64_t sub_1BA1C0980(int64_t result, int a2, char a3, uint64_t a4)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;

  if ((a3 & 1) != 0)
    goto LABEL_20;
  v4 = result;
  if (result < 0 || (result = 1 << *(_BYTE *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  v5 = v4 >> 6;
  v6 = a4 + 56;
  v7 = *(_QWORD *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8)
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  v9 = v5 + 1;
  v10 = (unint64_t)(result + 63) >> 6;
  if (v5 + 1 < v10)
  {
    v11 = *(_QWORD *)(v6 + 8 * v9);
    if (v11)
      return __clz(__rbit64(v11)) + (v9 << 6);
    v9 = v5 + 2;
    if (v5 + 2 < v10)
    {
      v11 = *(_QWORD *)(v6 + 8 * v9);
      if (v11)
        return __clz(__rbit64(v11)) + (v9 << 6);
      while (v10 - 3 != v5)
      {
        v11 = *(_QWORD *)(a4 + 80 + 8 * v5++);
        if (v11)
        {
          v9 = v5 + 2;
          return __clz(__rbit64(v11)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

uint64_t sub_1BA1C0A64(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 56);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 3)
    v7 = 3;
  v8 = v7 - 3;
  v9 = (unint64_t *)(a1 + 80);
  v2 = 128;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

uint64_t sub_1BA1C0B04(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BA1C0B20(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BA1C0B20(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1BA1B5770(0, &qword_1ED5AF258, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1BA20285C();
  __break(1u);
  return result;
}

uint64_t sub_1BA1C0C9C(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD *)(a1 + 16);
  result = sub_1BA202658();
  v8 = result;
  if (v2)
  {
    v4 = (uint64_t *)(a1 + 40);
    do
    {
      v5 = *(v4 - 1);
      v6 = *v4;
      swift_bridgeObjectRetain();
      sub_1BA1C0D30(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_1BA1C0D30(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  BOOL v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v17;
  _QWORD *v18;
  BOOL v19;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v21;

  v7 = *v3;
  sub_1BA202A00();
  swift_bridgeObjectRetain();
  sub_1BA202538();
  v8 = sub_1BA202A18();
  v9 = -1 << *(_BYTE *)(v7 + 32);
  v10 = v8 & ~v9;
  if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = *(_QWORD *)(v7 + 48);
    v12 = (_QWORD *)(v11 + 16 * v10);
    v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_1BA202988() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v14 = (uint64_t *)(*(_QWORD *)(*v3 + 48) + 16 * v10);
      v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    v17 = ~v9;
    while (1)
    {
      v10 = (v10 + 1) & v17;
      if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
        break;
      v18 = (_QWORD *)(v11 + 16 * v10);
      v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_1BA202988() & 1) != 0)
        goto LABEL_7;
    }
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v21 = *v3;
  *v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_1BA1C0EDC(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_1BA1C0EDC(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  BOOL v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v5 = v4;
  v8 = result;
  v9 = *(_QWORD *)(*v4 + 16);
  v10 = *(_QWORD *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0)
    goto LABEL_22;
  if ((a4 & 1) != 0)
  {
    sub_1BA1C6E4C();
  }
  else
  {
    if (v10 > v9)
    {
      result = (uint64_t)sub_1BA1C8474();
      goto LABEL_22;
    }
    sub_1BA1C88C0();
  }
  v11 = *v4;
  sub_1BA202A00();
  sub_1BA202538();
  result = sub_1BA202A18();
  v12 = -1 << *(_BYTE *)(v11 + 32);
  a3 = result & ~v12;
  v13 = v11 + 56;
  if (((*(_QWORD *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0)
  {
    v14 = *(_QWORD *)(v11 + 48);
    v15 = (_QWORD *)(v14 + 16 * a3);
    v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (result = sub_1BA202988(), (result & 1) != 0))
    {
LABEL_21:
      result = sub_1BA2029A0();
      __break(1u);
    }
    else
    {
      v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(_QWORD *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) == 0)
          break;
        v18 = (_QWORD *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          result = sub_1BA202988();
          if ((result & 1) == 0)
            continue;
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  v20 = *v5;
  *(_QWORD *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  v21 = (uint64_t *)(*(_QWORD *)(v20 + 48) + 16 * a3);
  *v21 = v8;
  v21[1] = a2;
  v22 = *(_QWORD *)(v20 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (v23)
    __break(1u);
  else
    *(_QWORD *)(v20 + 16) = v24;
  return result;
}

uint64_t sub_1BA1C1078(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

_QWORD *sub_1BA1C10B0@<X0>(_QWORD *__return_ptr a1@<X8>, uint64_t a2@<X0>)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  unint64_t v10;
  char v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  _QWORD *result;
  unint64_t v16;
  char v17;
  unint64_t v18;
  char v19;
  unint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  char v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  char v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  uint64_t v39;
  const char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  __int128 v47;

  v4 = sub_1BA1C1BA8(a2);
  if (v5)
  {
    v6 = v5;
    if (*(_QWORD *)(a2 + 16))
    {
      v7 = v4;
      swift_bridgeObjectRetain();
      v8 = sub_1BA1B9E30(v7, v6);
      if ((v9 & 1) != 0)
      {
        sub_1BA1B9D7C(*(_QWORD *)(a2 + 56) + 32 * v8, (uint64_t)&v46);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (*((_QWORD *)&v47 + 1))
        {
          sub_1BA1B888C();
          if ((swift_dynamicCast() & 1) != 0)
          {
            if (v7 == 6581857 && v6 == 0xE300000000000000 || (sub_1BA202988() & 1) != 0)
            {
              if (*(_QWORD *)(v44 + 16))
              {
                v10 = sub_1BA1B9E30(1952867692, 0xE400000000000000);
                if ((v11 & 1) != 0)
                {
                  sub_1BA1B9D7C(*(_QWORD *)(v44 + 56) + 32 * v10, (uint64_t)&v46);
                  if ((swift_dynamicCast() & 1) != 0)
                  {
                    sub_1BA1C10B0(&v46);
                    v12 = v46;
                    if ((~(_QWORD)v46 & 0xF000000000000007) != 0)
                    {
                      if (*(_QWORD *)(v44 + 16)
                        && (v13 = sub_1BA1B9E30(0x7468676972, 0xE500000000000000), (v14 & 1) != 0))
                      {
                        sub_1BA1B9D7C(*(_QWORD *)(v44 + 56) + 32 * v13, (uint64_t)&v46);
                      }
                      else
                      {
                        v46 = 0u;
                        v47 = 0u;
                      }
                      swift_bridgeObjectRelease();
                      if (*((_QWORD *)&v47 + 1))
                      {
                        if ((swift_dynamicCast() & 1) != 0)
                        {
                          sub_1BA1C10B0(&v46);
                          v22 = v46;
                          if ((~(_QWORD)v46 & 0xF000000000000007) != 0)
                          {
                            swift_bridgeObjectRelease();
                            v23 = swift_allocObject();
                            *(_QWORD *)(v23 + 16) = v12;
                            *(_QWORD *)(v23 + 24) = v22;
                            result = (_QWORD *)(v23 | 0x6000000000000000);
                            goto LABEL_22;
                          }
                        }
                        goto LABEL_63;
                      }
LABEL_64:
                      sub_1BA1EABD8(v12);
LABEL_65:
                      sub_1BA1B87E4((uint64_t)&v46);
                      goto LABEL_76;
                    }
                  }
                }
              }
              goto LABEL_75;
            }
            if (v7 == 29295 && v6 == 0xE200000000000000 || (sub_1BA202988() & 1) != 0)
            {
              if (*(_QWORD *)(v44 + 16))
              {
                v16 = sub_1BA1B9E30(1952867692, 0xE400000000000000);
                if ((v17 & 1) != 0)
                {
                  sub_1BA1B9D7C(*(_QWORD *)(v44 + 56) + 32 * v16, (uint64_t)&v46);
                  if ((swift_dynamicCast() & 1) != 0)
                  {
                    sub_1BA1C10B0(&v46);
                    v12 = v46;
                    if ((~(_QWORD)v46 & 0xF000000000000007) != 0)
                    {
                      if (*(_QWORD *)(v44 + 16)
                        && (v18 = sub_1BA1B9E30(0x7468676972, 0xE500000000000000), (v19 & 1) != 0))
                      {
                        sub_1BA1B9D7C(*(_QWORD *)(v44 + 56) + 32 * v18, (uint64_t)&v46);
                      }
                      else
                      {
                        v46 = 0u;
                        v47 = 0u;
                      }
                      swift_bridgeObjectRelease();
                      if (*((_QWORD *)&v47 + 1))
                      {
                        if ((swift_dynamicCast() & 1) != 0)
                        {
                          sub_1BA1C10B0(&v46);
                          v30 = v46;
                          if ((~(_QWORD)v46 & 0xF000000000000007) != 0)
                          {
                            swift_bridgeObjectRelease();
                            v41 = swift_allocObject();
                            *(_QWORD *)(v41 + 16) = v12;
                            *(_QWORD *)(v41 + 24) = v30;
                            result = (_QWORD *)(v41 | 0x4000000000000000);
                            goto LABEL_22;
                          }
                        }
LABEL_63:
                        sub_1BA1EABD8(v12);
                        goto LABEL_76;
                      }
                      goto LABEL_64;
                    }
                  }
                }
              }
              goto LABEL_75;
            }
            if (v7 == 7630702 && v6 == 0xE300000000000000 || (sub_1BA202988() & 1) != 0)
            {
              if (*(_QWORD *)(v44 + 16)
                && (v20 = sub_1BA1B9E30(0x6F697469646E6F63, 0xE90000000000006ELL), (v21 & 1) != 0))
              {
                sub_1BA1B9D7C(*(_QWORD *)(v44 + 56) + 32 * v20, (uint64_t)&v46);
              }
              else
              {
                v46 = 0u;
                v47 = 0u;
              }
              swift_bridgeObjectRelease();
              if (!*((_QWORD *)&v47 + 1))
                goto LABEL_65;
              if ((swift_dynamicCast() & 1) != 0)
              {
                sub_1BA1C10B0(&v46);
                v24 = v46;
                if ((~(_QWORD)v46 & 0xF000000000000007) != 0)
                {
                  swift_bridgeObjectRelease();
                  v25 = swift_allocObject();
                  *(_QWORD *)(v25 + 16) = v24;
                  result = (_QWORD *)(v25 | 0x8000000000000000);
                  goto LABEL_22;
                }
              }
LABEL_76:
              if (qword_1ED5AFB58 != -1)
                swift_once();
              v35 = sub_1BA20243C();
              __swift_project_value_buffer(v35, (uint64_t)qword_1ED5B08D0);
              swift_bridgeObjectRetain();
              v36 = sub_1BA202424();
              v37 = sub_1BA202670();
              if (os_log_type_enabled(v36, v37))
              {
                v38 = (uint8_t *)swift_slowAlloc();
                v39 = swift_slowAlloc();
                *(_QWORD *)&v46 = v39;
                *(_DWORD *)v38 = 136315138;
                swift_bridgeObjectRetain();
                sub_1BA1BDA3C(v7, v6, (uint64_t *)&v46);
                sub_1BA2026E8();
                swift_bridgeObjectRelease_n();
                v40 = "EngagementUpsellCondition: invalid %s condition";
LABEL_80:
                _os_log_impl(&dword_1BA1AE000, v36, v37, v40, v38, 0xCu);
                swift_arrayDestroy();
                MEMORY[0x1BCCD775C](v39, -1, -1);
                MEMORY[0x1BCCD775C](v38, -1, -1);

                goto LABEL_21;
              }
              goto LABEL_90;
            }
            if (v7 == 0x426F546C61757165 && v6 == 0xEB000000006C6F6FLL || (sub_1BA202988() & 1) != 0)
            {
              if (*(_QWORD *)(v44 + 16))
              {
                v26 = sub_1BA1B9E30(0x79747265706F7270, 0xE800000000000000);
                if ((v27 & 1) != 0)
                {
                  sub_1BA1B9D7C(*(_QWORD *)(v44 + 56) + 32 * v26, (uint64_t)&v46);
                  if ((swift_dynamicCast() & 1) != 0)
                  {
                    if (*(_QWORD *)(v44 + 16)
                      && (v28 = sub_1BA1B9E30(0x65756C6176, 0xE500000000000000), (v29 & 1) != 0))
                    {
                      sub_1BA1B9D7C(*(_QWORD *)(v44 + 56) + 32 * v28, (uint64_t)&v46);
                    }
                    else
                    {
                      v46 = 0u;
                      v47 = 0u;
                    }
                    swift_bridgeObjectRelease();
                    if (*((_QWORD *)&v47 + 1))
                    {
                      if ((swift_dynamicCast() & 1) != 0)
                      {
                        swift_bridgeObjectRelease();
                        v42 = swift_allocObject();
                        *(_QWORD *)(v42 + 16) = v44;
                        *(_QWORD *)(v42 + 24) = v45;
                        *(_BYTE *)(v42 + 32) = v44;
                        result = (_QWORD *)(v42 | 0x2000000000000000);
                        goto LABEL_22;
                      }
                      goto LABEL_75;
                    }
LABEL_95:
                    swift_bridgeObjectRelease();
                    goto LABEL_65;
                  }
                }
              }
            }
            else
            {
              if ((v7 != 0x496F546C61757165 || v6 != 0xEA0000000000746ELL) && (sub_1BA202988() & 1) == 0)
              {
                swift_bridgeObjectRelease();
                if (qword_1ED5AFB58 != -1)
                  swift_once();
                v43 = sub_1BA20243C();
                __swift_project_value_buffer(v43, (uint64_t)qword_1ED5B08D0);
                swift_bridgeObjectRetain();
                v36 = sub_1BA202424();
                v37 = sub_1BA202670();
                if (os_log_type_enabled(v36, v37))
                {
                  v38 = (uint8_t *)swift_slowAlloc();
                  v39 = swift_slowAlloc();
                  *(_QWORD *)&v46 = v39;
                  *(_DWORD *)v38 = 136315138;
                  swift_bridgeObjectRetain();
                  sub_1BA1BDA3C(v7, v6, (uint64_t *)&v46);
                  sub_1BA2026E8();
                  swift_bridgeObjectRelease_n();
                  v40 = "EngagementUpsellCondition: received unknown token [%s]";
                  goto LABEL_80;
                }
LABEL_90:

                swift_bridgeObjectRelease_n();
                goto LABEL_21;
              }
              if (!*(_QWORD *)(v44 + 16))
                goto LABEL_75;
              v31 = sub_1BA1B9E30(0x79747265706F7270, 0xE800000000000000);
              if ((v32 & 1) == 0)
                goto LABEL_75;
              sub_1BA1B9D7C(*(_QWORD *)(v44 + 56) + 32 * v31, (uint64_t)&v46);
              if ((swift_dynamicCast() & 1) == 0)
                goto LABEL_75;
              if (*(_QWORD *)(v44 + 16) && (v33 = sub_1BA1B9E30(0x65756C6176, 0xE500000000000000), (v34 & 1) != 0))
              {
                sub_1BA1B9D7C(*(_QWORD *)(v44 + 56) + 32 * v33, (uint64_t)&v46);
              }
              else
              {
                v46 = 0u;
                v47 = 0u;
              }
              swift_bridgeObjectRelease();
              if (!*((_QWORD *)&v47 + 1))
                goto LABEL_95;
              if ((swift_dynamicCast() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                result = (_QWORD *)swift_allocObject();
                result[2] = v44;
                result[3] = v45;
                result[4] = v44;
                goto LABEL_22;
              }
            }
LABEL_75:
            swift_bridgeObjectRelease();
            goto LABEL_76;
          }
          goto LABEL_16;
        }
LABEL_20:
        swift_bridgeObjectRelease();
        sub_1BA1B87E4((uint64_t)&v46);
        goto LABEL_21;
      }
      v46 = 0u;
      v47 = 0u;
      swift_bridgeObjectRelease();
    }
    else
    {
      v46 = 0u;
      v47 = 0u;
    }
    swift_bridgeObjectRelease();
    goto LABEL_20;
  }
LABEL_16:
  swift_bridgeObjectRelease();
LABEL_21:
  result = (_QWORD *)0xF000000000000007;
LABEL_22:
  *a1 = result;
  return result;
}

uint64_t sub_1BA1C1A78(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(void))
{
  uint64_t result;
  int v6;
  char v7;
  uint64_t v8;

  result = a2();
  if ((v7 & 1) != 0)
    goto LABEL_8;
  if (*(_DWORD *)(a1 + 36) != v6)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    return result;
  }
  if (result == 1 << *(_BYTE *)(a1 + 32))
    return 0;
  v8 = a3();
  swift_bridgeObjectRetain();
  return v8;
}

uint64_t sub_1BA1C1AF8(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8)
    return v3;
  v1 = *(_QWORD *)(a1 + 80);
  if (v1)
  {
    v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  v1 = *(_QWORD *)(a1 + 88);
  if (v1)
  {
    v2 = 192;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 4)
    v7 = 4;
  v8 = v7 - 4;
  v9 = (unint64_t *)(a1 + 96);
  v2 = 192;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

uint64_t sub_1BA1C1BA8(uint64_t a1)
{
  return sub_1BA1C1A78(a1, (uint64_t (*)(void))sub_1BA1C1AF8, (uint64_t (*)(void))sub_1BA1C1C14);
}

uint64_t sub_1BA1C1BBC(uint64_t result, int a2, uint64_t a3, uint64_t a4)
{
  if (result < 0 || 1 << *(_BYTE *)(a4 + 32) <= result)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(_QWORD *)(a4 + (((unint64_t)result >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> result) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a4 + 36) == a2)
    return *(_QWORD *)(*(_QWORD *)(a4 + 48) + 16 * result);
LABEL_8:
  __break(1u);
  return result;
}

uint64_t sub_1BA1C1C14(uint64_t result, int a2, uint64_t a3, uint64_t a4)
{
  if (result < 0 || 1 << *(_BYTE *)(a4 + 32) <= result)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(_QWORD *)(a4 + (((unint64_t)result >> 3) & 0xFFFFFFFFFFFFF8) + 64) >> result) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a4 + 36) == a2)
    return *(_QWORD *)(*(_QWORD *)(a4 + 48) + 16 * result);
LABEL_8:
  __break(1u);
  return result;
}

unint64_t sub_1BA1C1C6C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED5AF148;
  if (!qword_1ED5AF148)
  {
    v1 = type metadata accessor for EngagementEventProvider();
    result = MEMORY[0x1BCCD76CC](&unk_1BA2046E8, v1);
    atomic_store(result, (unint64_t *)&qword_1ED5AF148);
  }
  return result;
}

uint64_t sub_1BA1C1CB0()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t ObjectType;
  char v4;

  v1 = *(unsigned __int8 *)(v0 + 104);
  if (v1 == 2)
  {
    v2 = *(_QWORD *)(v0 + 40);
    ObjectType = swift_getObjectType();
    v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(ObjectType, v2);
    *(_BYTE *)(v0 + 104) = v4 & 1;
  }
  else
  {
    v4 = v1 & 1;
  }
  return v4 & 1;
}

unint64_t sub_1BA1C1D10()
{
  unint64_t result;

  result = qword_1ED5AF8E8;
  if (!qword_1ED5AF8E8)
  {
    result = MEMORY[0x1BCCD76CC](&protocol conformance descriptor for EngagementUIPlacement, &type metadata for EngagementUIPlacement);
    atomic_store(result, (unint64_t *)&qword_1ED5AF8E8);
  }
  return result;
}

uint64_t sub_1BA1C1D54(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  _BYTE *v5;
  _BYTE *v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v14[2];
  uint64_t v15;
  __int128 v16;
  _QWORD v17[7];

  v17[5] = *MEMORY[0x1E0C80C00];
  *(_QWORD *)&v16 = a1;
  *((_QWORD *)&v16 + 1) = a2;
  sub_1BA1C237C();
  swift_bridgeObjectRetain();
  if (!swift_dynamicCast())
  {
    v15 = 0;
    memset(v14, 0, sizeof(v14));
    sub_1BA1F74C0((uint64_t)v14, &qword_1ED5AF310, (uint64_t (*)(uint64_t))sub_1BA1C237C);
    if ((a2 & 0x1000000000000000) != 0)
      goto LABEL_20;
    if ((a2 & 0x2000000000000000) != 0)
    {
      v17[0] = a1;
      v17[1] = a2 & 0xFFFFFFFFFFFFFFLL;
      v4 = (char *)v17 + (HIBYTE(a2) & 0xF);
      v5 = v17;
    }
    else
    {
      if ((a1 & 0x1000000000000000) != 0)
      {
        v2 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
        v3 = a1 & 0xFFFFFFFFFFFFLL;
      }
      else
      {
        v2 = sub_1BA2027B4();
      }
      if (v2)
        v4 = (_BYTE *)(v2 + v3);
      else
        v4 = 0;
      v5 = (_BYTE *)v2;
    }
    v6 = sub_1BA1C2254(v5, v4);
    v8 = v7;
    if (v7 >> 60 != 15)
    {
      swift_bridgeObjectRelease();
      *(_QWORD *)&v14[0] = v6;
      *((_QWORD *)&v14[0] + 1) = v8;
      return *(_QWORD *)&v14[0];
    }
    if ((a2 & 0x1000000000000000) != 0)
    {
LABEL_20:
      v9 = sub_1BA202550();
    }
    else if ((a2 & 0x2000000000000000) != 0)
    {
      v9 = HIBYTE(a2) & 0xF;
    }
    else
    {
      v9 = a1 & 0xFFFFFFFFFFFFLL;
    }
    *(_QWORD *)&v14[0] = sub_1BA1FA094(v9);
    *((_QWORD *)&v14[0] + 1) = v10;
    MEMORY[0x1E0C80A78](*(_QWORD *)&v14[0]);
    sub_1BA1F9A60();
    __asm { BR              X12 }
  }
  sub_1BA1B29EC(v14, (uint64_t)v17);
  __swift_project_boxed_opaque_existential_1(v17, v17[3]);
  sub_1BA2020DC();
  swift_bridgeObjectRelease();
  v14[0] = v16;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v17);
  return *(_QWORD *)&v14[0];
}

_BYTE *sub_1BA1C2254(_BYTE *result, _BYTE *a2)
{
  uint64_t v2;

  if (result)
  {
    v2 = a2 - result;
    if (a2 == result)
    {
      return 0;
    }
    else if (v2 <= 14)
    {
      return (_BYTE *)sub_1BA1F9F5C(result, a2);
    }
    else if ((unint64_t)v2 >= 0x7FFFFFFF)
    {
      return (_BYTE *)sub_1BA1FA01C((uint64_t)result, (uint64_t)a2);
    }
    else
    {
      return (_BYTE *)sub_1BA1C22FC((uint64_t)result, (uint64_t)a2);
    }
  }
  return result;
}

uint64_t sub_1BA1C22B8(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release();
  }
  return swift_release();
}

uint64_t sub_1BA1C22FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if (a1)
    v2 = a2 - a1;
  else
    v2 = 0;
  sub_1BA2020D0();
  swift_allocObject();
  result = sub_1BA202094();
  if (v2 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v2 > 0x7FFFFFFF)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if ((v2 & 0x80000000) == 0)
    return v2 << 32;
LABEL_10:
  __break(1u);
  return result;
}

unint64_t sub_1BA1C237C()
{
  unint64_t result;

  result = qword_1ED5AF308;
  if (!qword_1ED5AF308)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED5AF308);
  }
  return result;
}

_BYTE *sub_1BA1C23D0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

uint64_t storeEnumTagSinglePayload for EngagementUIPlacement(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 29 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 29) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xE3)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xE2)
    return ((uint64_t (*)(void))((char *)&loc_1BA1C2424 + 4 * byte_1BA20519F[v4]))();
  *a1 = a2 + 29;
  return ((uint64_t (*)(void))((char *)sub_1BA1C2458 + 4 * byte_1BA20519A[v4]))();
}

uint64_t sub_1BA1C2458(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA1C2460(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BA1C2468);
  return result;
}

uint64_t sub_1BA1C2474(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BA1C247CLL);
  *(_BYTE *)result = a2 + 29;
  return result;
}

uint64_t sub_1BA1C2480(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA1C2488(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t getEnumTagSinglePayload for EngagementUIPlacement(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xE3)
    goto LABEL_17;
  if (a2 + 29 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 29) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 29;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 29;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 29;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x1E;
  v8 = v6 - 30;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

ValueMetadata *type metadata accessor for EngagementUpsellBannerPaidEligibility()
{
  return &type metadata for EngagementUpsellBannerPaidEligibility;
}

ValueMetadata *type metadata accessor for EngagementPlacementVisibility()
{
  return &type metadata for EngagementPlacementVisibility;
}

uint64_t dispatch thunk of EngagementFeatureSettingsType.engagementUpsellConfig.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

void sub_1BA1C254C(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_1BA1B2A04(*(_QWORD *)(v1 + 16), *(unsigned __int8 *)(v1 + 24), a1);
}

ValueMetadata *type metadata accessor for EngagementUpsellConfig()
{
  return &type metadata for EngagementUpsellConfig;
}

uint64_t EngagementUpsellConfig.triggers.getter()
{
  return swift_bridgeObjectRetain();
}

ValueMetadata *type metadata accessor for EngagementUpsellBanner()
{
  return &type metadata for EngagementUpsellBanner;
}

uint64_t dispatch thunk of EngagementInlineViewManagerType.state(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

void destroy for EngagementInlineBannerState(uint64_t a1)
{
  sub_1BA1C263C(*(id *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t storeEnumTagSinglePayload for EngagementInlineBannerState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 254;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t _s14NewsEngagement27EngagementInlineBannerStateOwCP_0(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  char v5;

  v3 = *(id *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1BA1C2628(*(id *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

id sub_1BA1C2628(id result, uint64_t a2, char a3)
{
  if (a3 == 1)
    return result;
  return result;
}

void sub_1BA1C263C(id a1, uint64_t a2, char a3)
{
  if (a3 == 1)

}

uint64_t sub_1BA1C2650()
{
  return sub_1BA2021C0();
}

ValueMetadata *type metadata accessor for EngagementUIPlacementAnchor()
{
  return &type metadata for EngagementUIPlacementAnchor;
}

void sub_1BA1C266C(_QWORD *a1@<X8>)
{
  uint64_t v1;

  sub_1BA1B1C7C(*(_QWORD *)(v1 + 16), *(unsigned __int8 *)(v1 + 24), a1);
}

uint64_t getEnumTagSinglePayload for EngagementInlineViewManager.Observation(uint64_t a1, int a2)
{
  int v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  if ((*(_QWORD *)(a1 + 8) & 0xF000000000000007) != 0)
    v2 = *(_DWORD *)a1 & 0x7FFFFFFF;
  else
    v2 = -1;
  return (v2 + 1);
}

uint64_t sub_1BA1C26C8(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(_QWORD *)result = a2 - 2;
    *(_QWORD *)(result + 8) = 0;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for EngagementInlineBannerState()
{
  return &type metadata for EngagementInlineBannerState;
}

uint64_t dispatch thunk of EngagementEventHandlerType.fetchRequests(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

ValueMetadata *type metadata accessor for EngagementViewLayoutStyle()
{
  return &type metadata for EngagementViewLayoutStyle;
}

NewsEngagement::EngagementUIPlacement_optional sub_1BA1C270C(Swift::String *a1)
{
  return EngagementUIPlacement.init(rawValue:)(*a1);
}

uint64_t sub_1BA1C2718()
{
  return sub_1BA1B2084();
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

void *__swift_memcpy2200_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x898uLL);
}

void sub_1BA1C279C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED5AF248)
  {
    sub_1BA1B3C44(255, &qword_1ED5AF160);
    v0 = sub_1BA20297C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED5AF248);
  }
}

void sub_1BA1C2804()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED5B0040)
  {
    sub_1BA1C30D0();
    v0 = sub_1BA20297C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED5B0040);
  }
}

void sub_1BA1C2858(uint64_t a1, unint64_t *a2)
{
  unint64_t v3;
  uint64_t v4;

  if (!*a2)
  {
    v3 = sub_1BA202850();
    if (!v4)
      atomic_store(v3, a2);
  }
}

uint64_t sub_1BA1C28A4(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t result;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(_QWORD *)(a4[6] + 8 * a1) = a2;
  result = sub_1BA1B0D38(a3, a4[7] + 16 * a1);
  v6 = a4[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a4[2] = v8;
  return result;
}

uint64_t sub_1BA1C2908(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BA1B198C(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

void sub_1BA1C2924()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED5AFF20[0])
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, qword_1ED5AFF20);
  }
}

uint64_t sub_1BA1C298C()
{
  return swift_bridgeObjectRetain();
}

unint64_t sub_1BA1C29A0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED5B0010;
  if (!qword_1ED5B0010)
  {
    v1 = type metadata accessor for EngagementAssembly();
    result = MEMORY[0x1BCCD76CC](&unk_1BA205A24, v1);
    atomic_store(result, (unint64_t *)&qword_1ED5B0010);
  }
  return result;
}

uint64_t sub_1BA1C29E8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = type metadata accessor for EngagementDebugRequestFactory();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = MEMORY[0x1E0DEE9E0];
  a1[3] = v2;
  a1[4] = (uint64_t)&off_1E71EFDF0;
  *a1 = result;
  return result;
}

uint64_t dispatch thunk of EngagementUpsellBannerPropertiesProviding.hasActiveBannerConfiguration(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

void sub_1BA1C2A44()
{
  unint64_t v0;

  sub_1BA1BE274(319, &qword_1ED5AFE20, (void (*)(uint64_t))type metadata accessor for EngagementUpsellBannerProperties);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_1BA1C2AD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  _QWORD *v4;

  v0 = type metadata accessor for EngagementUpsellBannerPropertiesResult();
  __swift_allocate_value_buffer(v0, qword_1ED5AF4B0);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED5AF4B0);
  v2 = type metadata accessor for EngagementUpsellBannerProperties();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  *(_QWORD *)(v1 + *(int *)(v0 + 20)) = 11;
  v4 = (_QWORD *)(v1 + *(int *)(v0 + 24));
  *v4 = 0;
  v4[1] = 0;
  return result;
}

uint64_t sub_1BA1C2B50(unsigned __int8 *a1)
{
  return *a1;
}

uint64_t storeEnumTagSinglePayload for EngagementUpsellTriggerFailureReason(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1BA1C2BA4 + 4 * byte_1BA205A65[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1BA1C2BD8 + 4 * byte_1BA205A60[v4]))();
}

uint64_t sub_1BA1C2BD8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA1C2BE0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BA1C2BE8);
  return result;
}

uint64_t sub_1BA1C2BF4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BA1C2BFCLL);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1BA1C2C00(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA1C2C08(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for EngagementUpsellTriggerFailureReason()
{
  return &type metadata for EngagementUpsellTriggerFailureReason;
}

uint64_t type metadata accessor for EngagementInlineDialogViewController()
{
  return objc_opt_self();
}

ValueMetadata *type metadata accessor for EngagementUpsellTriggerFailureInfo()
{
  return &type metadata for EngagementUpsellTriggerFailureInfo;
}

void sub_1BA1C2C54()
{
  unint64_t v0;

  sub_1BA1B175C();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

unint64_t sub_1BA1C2CF4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED5AFD18;
  if (!qword_1ED5AFD18)
  {
    v1 = type metadata accessor for EngagementInlineViewStartupTask();
    result = MEMORY[0x1BCCD76CC](&unk_1BA2063A8, v1);
    atomic_store(result, (unint64_t *)&qword_1ED5AFD18);
  }
  return result;
}

uint64_t sub_1BA1C2D3C()
{
  return sub_1BA1B22F0();
}

uint64_t dispatch thunk of EngagementInlineViewManagerType.addObserver(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t type metadata accessor for EngagementUpsellRequestFactory()
{
  return objc_opt_self();
}

ValueMetadata *type metadata accessor for EngagementViewBubbleTipSizing()
{
  return &type metadata for EngagementViewBubbleTipSizing;
}

uint64_t dispatch thunk of EngagementFeatureSettingsType.isSmarterMessagingEnabled.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of EngagementFeatureSettingsType.blockMastheadUpsellBanner.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t type metadata accessor for EngagementDebugRequestFactory()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for EngagementInlineViewManager()
{
  return objc_opt_self();
}

uint64_t sub_1BA1C2DE8(uint64_t a1, uint64_t a2)
{
  return sub_1BA1B1B70(a1, a2);
}

uint64_t type metadata accessor for EngagementInlineViewManager.State()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for EngagementBannerLayoutStore()
{
  return objc_opt_self();
}

uint64_t dispatch thunk of EngagementEventHandlerType.delegate.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t EngagementUpsellPlacement.version.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

ValueMetadata *type metadata accessor for EngagementPlacementSource()
{
  return &type metadata for EngagementPlacementSource;
}

ValueMetadata *type metadata accessor for EngagementInlineViewError()
{
  return &type metadata for EngagementInlineViewError;
}

void sub_1BA1C2E84()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED5AF438)
  {
    type metadata accessor for EngagementUpsellTrigger();
    v0 = sub_1BA2026DC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED5AF438);
  }
}

uint64_t EngagementUpsellTrigger.engagedUserQuiescenceInterval.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for EngagementUpsellTrigger() + 32));
}

uint64_t EngagementUpsellTrigger.maxNumberOfPresentations.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for EngagementUpsellTrigger() + 28));
}

uint64_t EngagementUpsellTrigger.requiredAppLaunchCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for EngagementUpsellTrigger() + 44));
}

uint64_t EngagementUpsellTrigger.quiescenceInterval.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for EngagementUpsellTrigger() + 36));
}

uint64_t EngagementUpsellTrigger.paidEligibility.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for EngagementUpsellTrigger();
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 40));
  return result;
}

uint64_t EngagementUpsellTrigger.minNewsVersion.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1BA202400();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t EngagementUpsellTrigger.maxNewsVersion.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for EngagementUpsellTrigger() + 20);
  v4 = sub_1BA202400();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

ValueMetadata *type metadata accessor for EngagementInlineBanner()
{
  return &type metadata for EngagementInlineBanner;
}

unint64_t sub_1BA1C302C()
{
  unint64_t result;

  result = qword_1ED5AF8F0;
  if (!qword_1ED5AF8F0)
  {
    result = MEMORY[0x1BCCD76CC](&protocol conformance descriptor for EngagementUIPlacement, &type metadata for EngagementUIPlacement);
    atomic_store(result, (unint64_t *)&qword_1ED5AF8F0);
  }
  return result;
}

void sub_1BA1C3070()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED5AF8D8)
  {
    sub_1BA1C1D10();
    v0 = sub_1BA2023AC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED5AF8D8);
  }
}

unint64_t sub_1BA1C30D0()
{
  unint64_t result;

  result = qword_1ED5AFFF8;
  if (!qword_1ED5AFFF8)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED5AFFF8);
  }
  return result;
}

uint64_t sub_1BA1C3124(uint64_t a1)
{
  return sub_1BA1B1E98(a1, 0x80000001BA208200, &qword_1ED5AEFB8);
}

uint64_t static Settings.Features.smarterMessaging.getter()
{
  return sub_1BA1B0F94(&qword_1ED5AEFA0);
}

uint64_t sub_1BA1C315C(uint64_t a1)
{
  return sub_1BA1B1E98(a1, 0x80000001BA2081D0, &qword_1ED5AF320);
}

uint64_t static Settings.Features.appReviewRequest.getter()
{
  return sub_1BA1B0F94(&qword_1ED5AF2D8);
}

uint64_t sub_1BA1C3194(uint64_t a1)
{
  return sub_1BA1B26E0(a1, 0xD000000000000036, 0x80000001BA207D80, &qword_1ED5AF2F8);
}

uint64_t static Settings.Engagement.Events.Debug.disableOverlayPlacements.getter()
{
  return sub_1BA1B0F94(&qword_1ED5AF2C8);
}

uint64_t sub_1BA1C31D4(uint64_t a1)
{
  return sub_1BA1B26E0(a1, 0xD000000000000037, 0x80000001BA207ED0, &qword_1ED5AEFA8);
}

uint64_t sub_1BA1C31F8(uint64_t a1)
{
  return sub_1BA1B26E0(a1, 0xD000000000000035, 0x80000001BA207F10, &qword_1ED5AF8C0);
}

uint64_t static Settings.Engagement.Events.ignoreBlockedPlacements.getter()
{
  return sub_1BA1B0F94(&qword_1ED5AF8C8);
}

uint64_t sub_1BA1C3238@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  v3 = *a1;
  v4 = *a1 + 16;
  swift_beginAccess();
  result = MEMORY[0x1BCCD77D4](v4);
  v6 = *(_QWORD *)(v3 + 24);
  *a2 = result;
  a2[1] = v6;
  return result;
}

uint64_t sub_1BA1C3290(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *a2;
  swift_beginAccess();
  *(_QWORD *)(v3 + 24) = v2;
  return swift_unknownObjectWeakAssign();
}

uint64_t EngagementEventHandler.delegate.getter()
{
  uint64_t v0;

  swift_beginAccess();
  return MEMORY[0x1BCCD77D4](v0 + 16);
}

uint64_t EngagementEventHandler.delegate.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_beginAccess();
  *(_QWORD *)(v2 + 24) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

uint64_t (*EngagementEventHandler.delegate.modify(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[5] = v1;
  swift_beginAccess();
  v4 = MEMORY[0x1BCCD77D4](v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v3[3] = v4;
  v3[4] = v5;
  return sub_1BA1C33F8;
}

void EngagementEventHandler.addObserver(_:for:)(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  _QWORD *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t ObjectType;
  uint64_t v14;
  uint64_t v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  uint64_t v30;
  uint64_t v31;

  v7 = sub_1BA2024A8();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (uint64_t *)((char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = *a3;
  if ((sub_1BA1C1CB0() & 1) != 0)
  {
    v12 = v3[5];
    ObjectType = swift_getObjectType();
    v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 64))(ObjectType, v12);
    LOBYTE(v12) = sub_1BA1BE63C(v11, v14);
    swift_bridgeObjectRelease();
    if ((v12 & 1) != 0)
    {
      if (qword_1ED5AFB58 != -1)
        swift_once();
      v15 = sub_1BA20243C();
      __swift_project_value_buffer(v15, (uint64_t)qword_1ED5B08D0);
      v29 = sub_1BA202424();
      v16 = sub_1BA20267C();
      if (os_log_type_enabled(v29, v16))
      {
        v17 = (uint8_t *)swift_slowAlloc();
        v18 = swift_slowAlloc();
        v31 = v18;
        *(_DWORD *)v17 = 136315138;
        LOBYTE(v30) = v11;
        v19 = EngagementUIPlacement.rawValue.getter();
        v30 = sub_1BA1BDA3C(v19, v20, &v31);
        sub_1BA2026E8();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1BA1AE000, v29, v16, "Ignoring request to add observer for blocked placement %s", v17, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1BCCD775C](v18, -1, -1);
        MEMORY[0x1BCCD775C](v17, -1, -1);
      }

    }
    else
    {
      v21 = *__swift_project_boxed_opaque_existential_1(v3 + 6, v3[9]);
      sub_1BA1C36F0();
      *v10 = sub_1BA2026AC();
      (*(void (**)(uint64_t *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E0DEF740], v7);
      v22 = sub_1BA2024C0();
      (*(void (**)(uint64_t *, uint64_t))(v8 + 8))(v10, v7);
      if ((v22 & 1) != 0)
      {
        v23 = *(_QWORD *)(v21 + 16);
        v24 = *(_QWORD *)(v23 + 16);
        if (v24)
        {
          v25 = (_QWORD *)(v23 + 32);
          swift_bridgeObjectRetain();
          do
          {
            v26 = v25[3];
            v27 = v25[4];
            __swift_project_boxed_opaque_existential_1(v25, v26);
            LOBYTE(v31) = v11;
            (*(void (**)(uint64_t, uint64_t, uint64_t *, uint64_t, uint64_t))(v27 + 24))(a1, a2, &v31, v26, v27);
            v25 += 5;
            --v24;
          }
          while (v24);
          swift_bridgeObjectRelease();
        }
      }
      else
      {
        __break(1u);
      }
    }
  }
}

unint64_t sub_1BA1C36F0()
{
  unint64_t result;

  result = qword_1ED5AF230;
  if (!qword_1ED5AF230)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED5AF230);
  }
  return result;
}

uint64_t EngagementEventHandler.addObserver(_:for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v9;
  uint64_t ObjectType;
  uint64_t (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v4 = v3;
  result = sub_1BA1C1CB0();
  if ((result & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 40);
    ObjectType = swift_getObjectType();
    v11 = *(uint64_t (**)(uint64_t, uint64_t))(v9 + 64);
    swift_bridgeObjectRetain();
    v12 = v11(ObjectType, v9);
    v13 = sub_1BA1BB434(v12, a3);
    swift_bridgeObjectRelease();
    swift_retain();
    v14 = sub_1BA1BADE4(v13, v3);
    swift_release();
    v15 = *(_QWORD *)(v14 + 16);
    v16 = *(_QWORD *)(a3 + 16);
    if (v15 < v16)
    {
      if (v15 <= v16 >> 3)
      {
        v25 = a3;
        swift_bridgeObjectRetain();
        sub_1BA1C6354(v14);
      }
      else
      {
        swift_bridgeObjectRetain();
        sub_1BA1C5910(v14, a3);
      }
      if (qword_1ED5AFB58 != -1)
        swift_once();
      v17 = sub_1BA20243C();
      __swift_project_value_buffer(v17, (uint64_t)qword_1ED5B08D0);
      swift_bridgeObjectRetain();
      v18 = sub_1BA202424();
      v19 = sub_1BA20267C();
      if (os_log_type_enabled(v18, v19))
      {
        v20 = (uint8_t *)swift_slowAlloc();
        v24 = swift_slowAlloc();
        v25 = v24;
        *(_DWORD *)v20 = 136315138;
        sub_1BA1C1D10();
        swift_bridgeObjectRetain();
        v21 = sub_1BA20264C();
        v23 = v22;
        swift_bridgeObjectRelease();
        sub_1BA1BDA3C(v21, v23, &v25);
        sub_1BA2026E8();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1BA1AE000, v18, v19, "Ignoring request to add observer for blocked placements %s", v20, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1BCCD775C](v24, -1, -1);
        MEMORY[0x1BCCD775C](v20, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
    }
    swift_retain();
    swift_unknownObjectRetain();
    sub_1BA1C9FEC(v14, v4, a1, a2);
    swift_release();
    swift_release();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t EngagementEventHandler.removeObserver(_:for:)(uint64_t a1, uint64_t a2, char *a3)
{
  uint64_t v3;
  char v6;
  uint64_t result;
  char v8;

  v6 = *a3;
  result = sub_1BA1C1CB0();
  if ((result & 1) != 0)
  {
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v3 + 48), *(_QWORD *)(v3 + 72));
    v8 = v6;
    return sub_1BA1D6A38(a1, a2, &v8);
  }
  return result;
}

uint64_t sub_1BA1C3A74(_QWORD *a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  void *v14;
  char v15;
  _QWORD *v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t ObjectType;
  void (*v29)(uint64_t *, _QWORD *, uint64_t, uint64_t);
  uint64_t v30[5];
  uint64_t v31;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v8 = result;
    if ((a2 & 1) != 0)
    {
      v16 = a1;
      if (qword_1ED5AFB58 != -1)
        swift_once();
      v17 = sub_1BA20243C();
      __swift_project_value_buffer(v17, (uint64_t)qword_1ED5B08D0);
      sub_1BA1CA924(a1, 1);
      swift_bridgeObjectRetain();
      sub_1BA1CA924(a1, 1);
      swift_bridgeObjectRetain();
      v18 = sub_1BA202424();
      v19 = sub_1BA202670();
      if (os_log_type_enabled(v18, v19))
      {
        v20 = swift_slowAlloc();
        v21 = swift_slowAlloc();
        v30[0] = v21;
        *(_DWORD *)v20 = 136315394;
        sub_1BA1C1D10();
        swift_bridgeObjectRetain();
        v22 = sub_1BA20264C();
        v24 = v23;
        swift_bridgeObjectRelease();
        v31 = sub_1BA1BDA3C(v22, v24, v30);
        sub_1BA2026E8();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v20 + 12) = 2080;
        swift_getErrorValue();
        v25 = sub_1BA2029B8();
        v31 = sub_1BA1BDA3C(v25, v26, v30);
        sub_1BA2026E8();
        swift_bridgeObjectRelease();
        sub_1BA1CA930(a1, 1);
        sub_1BA1CA930(a1, 1);
        _os_log_impl(&dword_1BA1AE000, v18, v19, "Error fetching dialog requests: placements = %s %s", (uint8_t *)v20, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1BCCD775C](v21, -1, -1);
        MEMORY[0x1BCCD775C](v20, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
        sub_1BA1CA930(a1, 1);
        sub_1BA1CA930(a1, 1);
      }

      swift_beginAccess();
      if (MEMORY[0x1BCCD77D4](v8 + 16))
      {
        v27 = *(_QWORD *)(v8 + 24);
        ObjectType = swift_getObjectType();
        v30[3] = type metadata accessor for EngagementEventHandler();
        v30[4] = (uint64_t)&protocol witness table for EngagementEventHandler;
        v30[0] = v8;
        v29 = *(void (**)(uint64_t *, _QWORD *, uint64_t, uint64_t))(v27 + 8);
        swift_retain();
        v29(v30, a1, ObjectType, v27);
        sub_1BA1CA930(a1, 1);
        swift_release();
        swift_unknownObjectRelease();
        return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v30);
      }
      v14 = a1;
      v15 = 1;
    }
    else
    {
      v9 = a1[2];
      if (!v9)
        return swift_release();
      swift_bridgeObjectRetain();
      v10 = a1 + 6;
      do
      {
        v11 = *((_QWORD *)v10 - 2);
        v12 = *((_QWORD *)v10 - 1);
        v13 = *v10;
        v10 += 24;
        LOBYTE(v30[0]) = v13;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1BA1C3E38(a4, v11, (unsigned __int8 *)v30);
        LOBYTE(v30[0]) = v13;
        sub_1BA1C4294(a4, v12, (char *)v30);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        --v9;
      }
      while (v9);
      v14 = a1;
      v15 = 0;
    }
    sub_1BA1CA930(v14, v15);
    return swift_release();
  }
  return result;
}

uint64_t sub_1BA1C3E38(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  unsigned __int8 v23;
  char v24;
  void *v25;
  unsigned __int8 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  _BYTE *v31;
  _BYTE *v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  _BYTE *v36;
  _BYTE v37[12];
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  _BYTE *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  uint64_t v52;
  id v53;
  int64_t v54;
  _QWORD aBlock[6];

  v7 = sub_1BA20246C();
  v47 = *(_QWORD *)(v7 - 8);
  v48 = v7;
  MEMORY[0x1E0C80A78](v7);
  v46 = &v37[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v45 = sub_1BA202484();
  v44 = *(_QWORD *)(v45 - 8);
  MEMORY[0x1E0C80A78](v45);
  v43 = &v37[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = (void *)*a3;
  v50 = v3;
  swift_beginAccess();
  result = MEMORY[0x1BCCD77D4](v3 + 16);
  v49 = result;
  if (!result)
    return result;
  v13 = a1 + 56;
  v12 = *(_QWORD *)(a1 + 56);
  v39 = *(_QWORD *)(v50 + 24);
  v14 = 1 << *(_BYTE *)(a1 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & v12;
  v54 = (unint64_t)(v14 + 63) >> 6;
  v38 = v10 | 0x40;
  result = swift_bridgeObjectRetain();
  v17 = 0;
  v42 = a1;
  v41 = v10;
  v40 = a1 + 56;
  while (1)
  {
    while (v16)
    {
      v18 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v19 = v18 | (v17 << 6);
      if (*(_QWORD *)(a2 + 16))
      {
LABEL_22:
        v23 = *(_BYTE *)(*(_QWORD *)(a1 + 48) + v19);
        result = sub_1BA1B9DB8(v23);
        if ((v24 & 1) != 0)
        {
          v25 = *(void **)(*(_QWORD *)(a2 + 56) + 8 * result);
          if (v25)
          {
            v10 = *(void **)(*(_QWORD *)(a2 + 56) + 8 * result);
            v26 = v38;
          }
          else
          {
            v26 = 0;
          }
          sub_1BA1C36F0();
          v53 = v25;
          v52 = sub_1BA2026AC();
          v27 = swift_allocObject();
          v28 = v50;
          v29 = v39;
          *(_QWORD *)(v27 + 16) = v49;
          *(_QWORD *)(v27 + 24) = v29;
          *(_QWORD *)(v27 + 32) = v28;
          *(_QWORD *)(v27 + 40) = v10;
          v51 = v10;
          *(_BYTE *)(v27 + 48) = v26;
          *(_BYTE *)(v27 + 49) = v23;
          aBlock[4] = sub_1BA1CA974;
          aBlock[5] = v27;
          aBlock[0] = MEMORY[0x1E0C809B0];
          aBlock[1] = 1107296256;
          aBlock[2] = sub_1BA1FAB1C;
          aBlock[3] = &block_descriptor;
          v30 = _Block_copy(aBlock);
          swift_unknownObjectRetain();
          swift_retain();
          sub_1BA1CA564(v10, v26);
          swift_release();
          v31 = v43;
          sub_1BA202478();
          aBlock[0] = MEMORY[0x1E0DEE9D8];
          sub_1BA1CA990();
          sub_1BA1B9050(0, &qword_1ED5AF520, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
          sub_1BA1CA9D8();
          v32 = v46;
          v33 = v48;
          sub_1BA20270C();
          v34 = (void *)v52;
          MEMORY[0x1BCCD6F70](0, v31, v32, v30);
          _Block_release(v30);

          a1 = v42;
          sub_1BA1CA58C(v51, v26);
          v35 = v33;
          v13 = v40;
          (*(void (**)(_BYTE *, uint64_t))(v47 + 8))(v32, v35);
          v36 = v31;
          v10 = v41;
          result = (*(uint64_t (**)(_BYTE *, uint64_t))(v44 + 8))(v36, v45);
        }
      }
    }
    v20 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v54)
      goto LABEL_27;
    v21 = *(_QWORD *)(v13 + 8 * v20);
    ++v17;
    if (!v21)
    {
      v17 = v20 + 1;
      if (v20 + 1 >= v54)
        goto LABEL_27;
      v21 = *(_QWORD *)(v13 + 8 * v17);
      if (!v21)
      {
        v17 = v20 + 2;
        if (v20 + 2 >= v54)
          goto LABEL_27;
        v21 = *(_QWORD *)(v13 + 8 * v17);
        if (!v21)
          break;
      }
    }
LABEL_21:
    v16 = (v21 - 1) & v21;
    v19 = __clz(__rbit64(v21)) + (v17 << 6);
    if (*(_QWORD *)(a2 + 16))
      goto LABEL_22;
  }
  v22 = v20 + 3;
  if (v22 >= v54)
  {
LABEL_27:
    swift_unknownObjectRelease();
    return swift_release();
  }
  v21 = *(_QWORD *)(v13 + 8 * v22);
  if (v21)
  {
    v17 = v22;
    goto LABEL_21;
  }
  while (1)
  {
    v17 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v17 >= v54)
      goto LABEL_27;
    v21 = *(_QWORD *)(v13 + 8 * v17);
    ++v22;
    if (v21)
      goto LABEL_21;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1BA1C4294(uint64_t a1, uint64_t a2, char *a3)
{
  _QWORD *v3;
  char v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  unsigned __int8 v19;
  char v20;
  void *v21;
  uint64_t v22;
  void (*v23)(_QWORD *, void **, unsigned __int8 *, uint64_t, uint64_t);
  id v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t ObjectType;
  unsigned __int8 v32;
  void *v33;
  char v34;
  _QWORD v35[5];

  v30 = *v3;
  v6 = *a3;
  swift_beginAccess();
  result = MEMORY[0x1BCCD77D4](v3 + 2);
  if (!result)
    return result;
  v8 = a1 + 56;
  v29 = v3;
  v27 = v3[3];
  v9 = 1 << *(_BYTE *)(a1 + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & *(_QWORD *)(a1 + 56);
  v12 = (unint64_t)(v9 + 63) >> 6;
  v25 = v6 | 0x80;
  result = swift_bridgeObjectRetain();
  v13 = 0;
  v28 = a2;
  v26 = a1 + 56;
  while (1)
  {
    while (v11)
    {
      v14 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v15 = v14 | (v13 << 6);
      if (*(_QWORD *)(a2 + 16))
      {
LABEL_22:
        v19 = *(_BYTE *)(*(_QWORD *)(a1 + 48) + v15);
        result = sub_1BA1B9DB8(v19);
        if ((v20 & 1) != 0)
        {
          v21 = *(void **)(*(_QWORD *)(a2 + 56) + 8 * result);
          ObjectType = swift_getObjectType();
          v35[3] = v30;
          v35[4] = &protocol witness table for EngagementEventHandler;
          v35[0] = v29;
          v33 = v21;
          v34 = v25;
          v32 = v19;
          v22 = a1;
          v23 = *(void (**)(_QWORD *, void **, unsigned __int8 *, uint64_t, uint64_t))(v27 + 16);
          v24 = v21;
          swift_retain();
          v23(v35, &v33, &v32, ObjectType, v27);
          a1 = v22;
          v8 = v26;
          a2 = v28;

          result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v35);
        }
      }
    }
    v16 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v16 >= v12)
      goto LABEL_24;
    v17 = *(_QWORD *)(v8 + 8 * v16);
    ++v13;
    if (!v17)
    {
      v13 = v16 + 1;
      if (v16 + 1 >= v12)
        goto LABEL_24;
      v17 = *(_QWORD *)(v8 + 8 * v13);
      if (!v17)
      {
        v13 = v16 + 2;
        if (v16 + 2 >= v12)
          goto LABEL_24;
        v17 = *(_QWORD *)(v8 + 8 * v13);
        if (!v17)
          break;
      }
    }
LABEL_21:
    v11 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v13 << 6);
    if (*(_QWORD *)(a2 + 16))
      goto LABEL_22;
  }
  v18 = v16 + 3;
  if (v18 >= v12)
  {
LABEL_24:
    swift_unknownObjectRelease();
    return swift_release();
  }
  v17 = *(_QWORD *)(v8 + 8 * v18);
  if (v17)
  {
    v13 = v18;
    goto LABEL_21;
  }
  while (1)
  {
    v13 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v13 >= v12)
      goto LABEL_24;
    v17 = *(_QWORD *)(v8 + 8 * v13);
    ++v18;
    if (v17)
      goto LABEL_21;
  }
LABEL_27:
  __break(1u);
  return result;
}

Swift::Void __swiftcall EngagementEventHandler.fetchRequests(with:)(Swift::OpaquePointer with)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t v6;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  char v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  Swift::OpaquePointer *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v2 = v1;
  if ((sub_1BA1C1CB0() & 1) != 0)
  {
    v4 = *(_QWORD *)(v1 + 40);
    ObjectType = swift_getObjectType();
    v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 64))(ObjectType, v4);
    v7 = sub_1BA1CA300(v6);
    swift_bridgeObjectRelease();
    v8 = *((_QWORD *)with._rawValue + 2);
    v9 = MEMORY[0x1E0DEE9D8];
    if (v8)
    {
      v28 = MEMORY[0x1E0DEE9D8];
      sub_1BA1C2908(0, v8, 0);
      v9 = v28;
      v10 = (char *)with._rawValue + 32;
      v11 = *(_QWORD *)(v28 + 16);
      do
      {
        v13 = *v10;
        v10 += 16;
        v12 = v13;
        v14 = *(_QWORD *)(v28 + 24);
        if (v11 >= v14 >> 1)
          sub_1BA1C2908(v14 > 1, v11 + 1, 1);
        *(_QWORD *)(v28 + 16) = v11 + 1;
        *(_BYTE *)(v28 + v11++ + 32) = v12;
        --v8;
      }
      while (v8);
    }
    v15 = sub_1BA1CA300(v9);
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v7 + 16) <= *(_QWORD *)(v15 + 16) >> 3)
      sub_1BA1C6354(v7);
    else
      sub_1BA1C5910(v7, v15);
    swift_bridgeObjectRelease();
    swift_retain();
    v16 = swift_bridgeObjectRetain();
    v17 = sub_1BA1BA884(v16, v2);
    swift_release();
    swift_retain();
    sub_1BA1B4B04(v17, v2);
    swift_bridgeObjectRelease();
    swift_release();
    v18 = swift_bridgeObjectRetain();
    v19 = sub_1BA1CA370(v18, v17);
    swift_bridgeObjectRelease();
    swift_release();
    v20 = __swift_project_boxed_opaque_existential_1((_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 72));
    v21 = swift_allocObject();
    swift_weakInit();
    v22 = (Swift::OpaquePointer *)swift_allocObject();
    v22[2]._rawValue = (void *)v21;
    v22[3]._rawValue = with._rawValue;
    v23 = *(_QWORD *)(*v20 + 16);
    v24 = *(_QWORD *)(v23 + 16);
    if (v24)
    {
      v25 = (_QWORD *)(v23 + 32);
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      do
      {
        v26 = v25[3];
        v27 = v25[4];
        __swift_project_boxed_opaque_existential_1(v25, v26);
        (*(void (**)(uint64_t, uint64_t (*)(_QWORD *, char), Swift::OpaquePointer *, uint64_t, uint64_t))(v27 + 16))(v19, sub_1BA1CA4F0, v22, v26, v27);
        v25 += 5;
        --v24;
      }
      while (v24);
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRetain();
      swift_release();
    }
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1BA1C47D0(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  if (*(_QWORD *)(a2 + 16))
  {
    sub_1BA202A00();
    EngagementUIPlacement.rawValue.getter();
    sub_1BA202538();
    swift_bridgeObjectRelease();
    v3 = sub_1BA202A18() & ~(-1 << *(_BYTE *)(a2 + 32));
    if (((*(_QWORD *)(a2 + 56 + ((v3 >> 3) & 0xFFFFFFFFFFFFF8)) >> v3) & 1) != 0)
      __asm { BR              X9 }
  }
  return 0;
}

uint64_t sub_1BA1C4E0C(_QWORD *a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  char v13;
  char v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t ObjectType;
  void (*v18)(_QWORD *, _QWORD *, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  _QWORD v25[5];

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v8 = result;
    if ((a2 & 1) != 0)
    {
      swift_beginAccess();
      if (MEMORY[0x1BCCD77D4](v8 + 16))
      {
        v16 = *(_QWORD *)(v8 + 24);
        ObjectType = swift_getObjectType();
        v25[3] = type metadata accessor for EngagementEventHandler();
        v25[4] = &protocol witness table for EngagementEventHandler;
        v25[0] = v8;
        v18 = *(void (**)(_QWORD *, _QWORD *, uint64_t, uint64_t))(v16 + 8);
        sub_1BA1CA924(a1, 1);
        swift_retain();
        v18(v25, a1, ObjectType, v16);
        swift_unknownObjectRelease();
        sub_1BA1CA930(a1, 1);
        swift_release();
        return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v25);
      }
    }
    else
    {
      v9 = *(_QWORD *)(a4 + 16);
      v10 = MEMORY[0x1E0DEE9D8];
      if (v9)
      {
        v25[0] = MEMORY[0x1E0DEE9D8];
        sub_1BA1C2908(0, v9, 0);
        v10 = v25[0];
        v11 = (char *)(a4 + 32);
        v12 = *(_QWORD *)(v25[0] + 16);
        do
        {
          v14 = *v11;
          v11 += 16;
          v13 = v14;
          v25[0] = v10;
          v15 = *(_QWORD *)(v10 + 24);
          if (v12 >= v15 >> 1)
          {
            sub_1BA1C2908(v15 > 1, v12 + 1, 1);
            v10 = v25[0];
          }
          *(_QWORD *)(v10 + 16) = v12 + 1;
          *(_BYTE *)(v10 + v12++ + 32) = v13;
          --v9;
        }
        while (v9);
      }
      v19 = sub_1BA1CA300(v10);
      swift_bridgeObjectRelease();
      v20 = a1[2];
      if (v20)
      {
        sub_1BA1CA924(a1, 0);
        v21 = a1 + 6;
        do
        {
          v22 = *((_QWORD *)v21 - 2);
          v23 = *((_QWORD *)v21 - 1);
          v24 = *v21;
          v21 += 24;
          LOBYTE(v25[0]) = v24;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1BA1C3E38(v19, v22, (unsigned __int8 *)v25);
          LOBYTE(v25[0]) = v24;
          sub_1BA1C4294(v19, v23, (char *)v25);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          --v20;
        }
        while (v20);
        sub_1BA1CA930(a1, 0);
      }
      swift_bridgeObjectRelease();
    }
    return swift_release();
  }
  return result;
}

uint64_t EngagementEventHandler.triggerAction(_:for:)(uint64_t *a1, char *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  uint64_t ObjectType;
  uint64_t result;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  char v26;

  v3 = v2;
  v6 = sub_1BA2024A8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (uint64_t *)((char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = *a1;
  v11 = *((_BYTE *)a1 + 8);
  v12 = *a2;
  v13 = v3[5];
  ObjectType = swift_getObjectType();
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8))(ObjectType, v13);
  if ((result & 1) != 0)
  {
    if (((1 << v12) & 0x3FFE01FE) == 0
      || (result = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 16))(ObjectType, v13), (result & 1) == 0))
    {
      v16 = *__swift_project_boxed_opaque_existential_1(v3 + 6, v3[9]);
      sub_1BA1C36F0();
      *v9 = sub_1BA2026AC();
      (*(void (**)(uint64_t *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E0DEF740], v6);
      v17 = sub_1BA2024C0();
      result = (*(uint64_t (**)(uint64_t *, uint64_t))(v7 + 8))(v9, v6);
      if ((v17 & 1) != 0)
      {
        v18 = *(_QWORD *)(v16 + 16);
        v19 = *(_QWORD *)(v18 + 16);
        if (v19)
        {
          v20 = (_QWORD *)(v18 + 32);
          swift_bridgeObjectRetain();
          do
          {
            v21 = v20[3];
            v22 = v20[4];
            __swift_project_boxed_opaque_existential_1(v20, v21);
            v25 = v10;
            v26 = v11;
            v24 = v12;
            (*(void (**)(uint64_t *, char *, uint64_t, uint64_t))(v22 + 40))(&v25, &v24, v21, v22);
            v20 += 5;
            --v19;
          }
          while (v19);
          return swift_bridgeObjectRelease();
        }
      }
      else
      {
        __break(1u);
      }
    }
  }
  return result;
}

uint64_t sub_1BA1C51F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, char a6)
{
  uint64_t ObjectType;
  void (*v12)(_QWORD *, uint64_t *, char *, uint64_t, uint64_t);
  char v14;
  uint64_t v15;
  char v16;
  _QWORD v17[5];

  ObjectType = swift_getObjectType();
  v17[3] = type metadata accessor for EngagementEventHandler();
  v17[4] = &protocol witness table for EngagementEventHandler;
  v17[0] = a3;
  v15 = a4;
  v16 = a5;
  v14 = a6;
  v12 = *(void (**)(_QWORD *, uint64_t *, char *, uint64_t, uint64_t))(a2 + 16);
  swift_retain();
  v12(v17, &v15, &v14, ObjectType, a2);
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v17);
}

uint64_t EngagementEventHandler.deinit()
{
  uint64_t v0;

  sub_1BA1CA4FC(v0 + 16);
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 48);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t EngagementEventHandler.__deallocating_deinit()
{
  uint64_t v0;

  sub_1BA1CA4FC(v0 + 16);
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 48);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1BA1C5308()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_beginAccess();
  return MEMORY[0x1BCCD77D4](v1 + 16);
}

uint64_t (*sub_1BA1C5350(_QWORD *a1))()
{
  uint64_t *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = *v1;
  v3[5] = v4;
  swift_beginAccess();
  v5 = MEMORY[0x1BCCD77D4](v4 + 16);
  v6 = *(_QWORD *)(v4 + 24);
  v3[3] = v5;
  v3[4] = v6;
  return sub_1BA1C33F8;
}

void sub_1BA1C53C0(uint64_t a1, char a2)
{
  void *v3;

  v3 = *(void **)a1;
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)a1 + 40) + 24) = *(_QWORD *)(*(_QWORD *)a1 + 32);
  swift_unknownObjectWeakAssign();
  if ((a2 & 1) != 0)
  {
    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_unknownObjectRelease();
  }
  free(v3);
}

void sub_1BA1C5430(Swift::OpaquePointer a1)
{
  EngagementEventHandler.fetchRequests(with:)(a1);
}

void sub_1BA1C5450(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  EngagementEventHandler.addObserver(_:for:)(a1, a2, a3);
}

uint64_t sub_1BA1C5470(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return EngagementEventHandler.addObserver(_:for:)(a1, a2, a3);
}

uint64_t sub_1BA1C5490(uint64_t a1, uint64_t a2, char *a3)
{
  uint64_t *v3;
  uint64_t v6;
  char v7;
  uint64_t result;
  char v9;

  v6 = *v3;
  v7 = *a3;
  result = sub_1BA1C1CB0();
  if ((result & 1) != 0)
  {
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v6 + 48), *(_QWORD *)(v6 + 72));
    v9 = v7;
    return sub_1BA1D6A38(a1, a2, &v9);
  }
  return result;
}

uint64_t sub_1BA1C54F4(uint64_t *a1, char *a2)
{
  return EngagementEventHandler.triggerAction(_:for:)(a1, a2);
}

_QWORD *sub_1BA1C5514@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *result;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

void sub_1BA1C5524(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

uint64_t sub_1BA1C5530(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_1BA1C55C4(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1BA1C57B0(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_1BA1C57B0(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_1BA1C55C4(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    while (1)
    {
      v3 = sub_1BA1C5738(v2, 0);
      if (v2 < 0)
        break;
      v4 = v3;
      v5 = sub_1BA202778();
      if ((v6 & 1) != 0)
        goto LABEL_14;
      if (v5 == v2)
        return (uint64_t)v4;
      sub_1BA202808();
      __break(1u);
LABEL_10:
      v2 = sub_1BA202550();
      if (!v2)
        return MEMORY[0x1E0DEE9D8];
    }
    sub_1BA20285C();
    __break(1u);
LABEL_14:
    result = sub_1BA202808();
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E0DEE9D8];
  }
  return result;
}

_QWORD *sub_1BA1C5738(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  sub_1BA1B5770(0, (unint64_t *)&unk_1ED5AF260, MEMORY[0x1E0DEDE70], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v4 = (_QWORD *)swift_allocObject();
  v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_1BA1C57B0(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1BA1B5770(0, (unint64_t *)&unk_1ED5AF260, MEMORY[0x1E0DEDE70], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1BA20285C();
  __break(1u);
  return result;
}

uint64_t sub_1BA1C5910(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  int64_t v8;
  uint64_t v9;
  int64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v14;

  v2 = a2;
  if (*(_QWORD *)(a2 + 16))
  {
    v3 = a1 + 56;
    v4 = -1 << *(_BYTE *)(a1 + 32);
    if (-v4 < 64)
      v5 = ~(-1 << -(char)v4);
    else
      v5 = -1;
    v6 = v5 & *(_QWORD *)(a1 + 56);
    v14 = (unint64_t)(63 - v4) >> 6;
    v7 = 0;
    swift_bridgeObjectRetain();
    while (1)
    {
      if (v6)
      {
        v6 &= v6 - 1;
      }
      else
      {
        v8 = v7 + 1;
        if (__OFADD__(v7, 1))
        {
          __break(1u);
          goto LABEL_30;
        }
        if (v8 >= v14)
          goto LABEL_28;
        v9 = *(_QWORD *)(v3 + 8 * v8);
        v10 = v7 + 1;
        if (!v9)
        {
          v10 = v7 + 2;
          if (v7 + 2 >= v14)
            goto LABEL_28;
          v9 = *(_QWORD *)(v3 + 8 * v10);
          if (!v9)
          {
            v10 = v7 + 3;
            if (v7 + 3 >= v14)
              goto LABEL_28;
            v9 = *(_QWORD *)(v3 + 8 * v10);
            if (!v9)
            {
              v10 = v7 + 4;
              if (v7 + 4 >= v14)
                goto LABEL_28;
              v9 = *(_QWORD *)(v3 + 8 * v10);
              if (!v9)
              {
                v11 = v7 + 5;
                if (v7 + 5 >= v14)
                {
LABEL_28:
                  sub_1BA1CAA90();
                  return v2;
                }
                v9 = *(_QWORD *)(v3 + 8 * v11);
                if (!v9)
                {
                  while (1)
                  {
                    v10 = v11 + 1;
                    if (__OFADD__(v11, 1))
                      break;
                    if (v10 >= v14)
                      goto LABEL_28;
                    v9 = *(_QWORD *)(v3 + 8 * v10);
                    ++v11;
                    if (v9)
                      goto LABEL_23;
                  }
LABEL_30:
                  __break(1u);
                }
                v10 = v7 + 5;
              }
            }
          }
        }
LABEL_23:
        v6 = (v9 - 1) & v9;
        v7 = v10;
      }
      sub_1BA202A00();
      EngagementUIPlacement.rawValue.getter();
      sub_1BA202538();
      swift_bridgeObjectRelease();
      v12 = sub_1BA202A18() & ~(-1 << *(_BYTE *)(v2 + 32));
      if (((*(_QWORD *)(v2 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) != 0)
        __asm { BR              X9 }
    }
  }
  swift_release();
  return MEMORY[0x1E0DEE9E8];
}

uint64_t sub_1BA1C6354(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int64_t v6;
  int64_t v7;
  int64_t v8;
  uint64_t v9;
  int64_t v10;
  char v11;

  if (!*(_QWORD *)(*(_QWORD *)v1 + 16))
    return result;
  v2 = result + 56;
  v3 = 1 << *(_BYTE *)(result + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(result + 56);
  v6 = (unint64_t)(v3 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v7 = 0;
  while (1)
  {
    if (v5)
    {
      v5 &= v5 - 1;
      goto LABEL_6;
    }
    v8 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v8 >= v6)
      return swift_release();
    v9 = *(_QWORD *)(v2 + 8 * v8);
    ++v7;
    if (!v9)
    {
      v7 = v8 + 1;
      if (v8 + 1 >= v6)
        return swift_release();
      v9 = *(_QWORD *)(v2 + 8 * v7);
      if (!v9)
      {
        v7 = v8 + 2;
        if (v8 + 2 >= v6)
          return swift_release();
        v9 = *(_QWORD *)(v2 + 8 * v7);
        if (!v9)
        {
          v7 = v8 + 3;
          if (v8 + 3 >= v6)
            return swift_release();
          v9 = *(_QWORD *)(v2 + 8 * v7);
          if (!v9)
            break;
        }
      }
    }
LABEL_23:
    v5 = (v9 - 1) & v9;
LABEL_6:
    result = sub_1BA1C64C4(&v11);
  }
  v10 = v8 + 4;
  if (v10 >= v6)
    return swift_release();
  v9 = *(_QWORD *)(v2 + 8 * v10);
  if (v9)
  {
    v7 = v10;
    goto LABEL_23;
  }
  while (1)
  {
    v7 = v10 + 1;
    if (__OFADD__(v10, 1))
      break;
    if (v7 >= v6)
      return swift_release();
    v9 = *(_QWORD *)(v2 + 8 * v7);
    ++v10;
    if (v9)
      goto LABEL_23;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1BA1C64C4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t result;

  v2 = *v1;
  sub_1BA202A00();
  EngagementUIPlacement.rawValue.getter();
  swift_bridgeObjectRetain();
  sub_1BA202538();
  swift_bridgeObjectRelease();
  v3 = sub_1BA202A18() & ~(-1 << *(_BYTE *)(v2 + 32));
  if (((*(_QWORD *)(v2 + 56 + ((v3 >> 3) & 0xFFFFFFFFFFFFF8)) >> v3) & 1) != 0)
    __asm { BR              X9 }
  result = swift_bridgeObjectRelease();
  *a1 = 30;
  return result;
}

uint64_t sub_1BA1C6B78()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t result;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  char v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;

  v1 = v0;
  v2 = *v0;
  sub_1BA1CAA38();
  v3 = sub_1BA202754();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v6 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v7 = ~(-1 << v5);
    else
      v7 = -1;
    v8 = v7 & *(_QWORD *)(v2 + 56);
    v9 = (unint64_t)(v5 + 63) >> 6;
    v10 = v3 + 56;
    result = swift_retain();
    v12 = 0;
    while (1)
    {
      if (v8)
      {
        v14 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        v15 = v14 | (v12 << 6);
      }
      else
      {
        v16 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v9)
          goto LABEL_33;
        v17 = v6[v16];
        ++v12;
        if (!v17)
        {
          v12 = v16 + 1;
          if (v16 + 1 >= v9)
            goto LABEL_33;
          v17 = v6[v12];
          if (!v17)
          {
            v12 = v16 + 2;
            if (v16 + 2 >= v9)
              goto LABEL_33;
            v17 = v6[v12];
            if (!v17)
            {
              v18 = v16 + 3;
              if (v18 >= v9)
              {
LABEL_33:
                swift_release();
                v1 = v0;
                v27 = 1 << *(_BYTE *)(v2 + 32);
                if (v27 > 63)
                  bzero((void *)(v2 + 56), ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v6 = -1 << v27;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v17 = v6[v18];
              if (!v17)
              {
                while (1)
                {
                  v12 = v18 + 1;
                  if (__OFADD__(v18, 1))
                    goto LABEL_39;
                  if (v12 >= v9)
                    goto LABEL_33;
                  v17 = v6[v12];
                  ++v18;
                  if (v17)
                    goto LABEL_23;
                }
              }
              v12 = v18;
            }
          }
        }
LABEL_23:
        v8 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v12 << 6);
      }
      v19 = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
      sub_1BA202A00();
      EngagementUIPlacement.rawValue.getter();
      sub_1BA202538();
      swift_bridgeObjectRelease();
      result = sub_1BA202A18();
      v20 = -1 << *(_BYTE *)(v4 + 32);
      v21 = result & ~v20;
      v22 = v21 >> 6;
      if (((-1 << v21) & ~*(_QWORD *)(v10 + 8 * (v21 >> 6))) != 0)
      {
        v13 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v23 = 0;
        v24 = (unint64_t)(63 - v20) >> 6;
        do
        {
          if (++v22 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v25 = v22 == v24;
          if (v22 == v24)
            v22 = 0;
          v23 |= v25;
          v26 = *(_QWORD *)(v10 + 8 * v22);
        }
        while (v26 == -1);
        v13 = __clz(__rbit64(~v26)) + (v22 << 6);
      }
      *(_QWORD *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(_BYTE *)(*(_QWORD *)(v4 + 48) + v13) = v19;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_1BA1C6E4C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;

  v1 = v0;
  v2 = *v0;
  sub_1BA1CA8C8();
  v3 = sub_1BA202754();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v30 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v8 = (unint64_t)(v5 + 63) >> 6;
    v9 = v3 + 56;
    result = swift_retain();
    v11 = 0;
    while (1)
    {
      if (v7)
      {
        v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v15 = v14 | (v11 << 6);
      }
      else
      {
        v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8)
          goto LABEL_33;
        v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          v11 = v16 + 1;
          if (v16 + 1 >= v8)
            goto LABEL_33;
          v17 = v30[v11];
          if (!v17)
          {
            v11 = v16 + 2;
            if (v16 + 2 >= v8)
              goto LABEL_33;
            v17 = v30[v11];
            if (!v17)
            {
              v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                v1 = v0;
                v29 = 1 << *(_BYTE *)(v2 + 32);
                if (v29 > 63)
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v30 = -1 << v29;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  v11 = v18 + 1;
                  if (__OFADD__(v18, 1))
                    goto LABEL_39;
                  if (v11 >= v8)
                    goto LABEL_33;
                  v17 = v30[v11];
                  ++v18;
                  if (v17)
                    goto LABEL_23;
                }
              }
              v11 = v18;
            }
          }
        }
LABEL_23:
        v7 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
      v20 = *v19;
      v21 = v19[1];
      sub_1BA202A00();
      sub_1BA202538();
      result = sub_1BA202A18();
      v22 = -1 << *(_BYTE *)(v4 + 32);
      v23 = result & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
      *v13 = v20;
      v13[1] = v21;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_1BA1C7124(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, _QWORD *a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  uint64_t v11;
  int64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v21;

  v7 = *(_QWORD *)(a3 + 16);
  *(unint64_t *)((char *)a1 + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  v8 = a3 + 56;
  v21 = v7 - 1;
  while (1)
  {
    v10 = a5[3];
    v9 = a5[4];
    if (!v9)
      break;
    v11 = (v9 - 1) & v9;
LABEL_14:
    a5[3] = v10;
    a5[4] = v11;
    sub_1BA202A00();
    EngagementUIPlacement.rawValue.getter();
    sub_1BA202538();
    swift_bridgeObjectRelease();
    v17 = sub_1BA202A18() & ~(-1 << *(_BYTE *)(a3 + 32));
    if (((*(_QWORD *)(v8 + ((v17 >> 3) & 0xFFFFFFFFFFFFF8)) >> v17) & 1) != 0)
      __asm { BR              X9 }
  }
  v12 = v10 + 1;
  if (__OFADD__(v10, 1))
  {
    __break(1u);
    JUMPOUT(0x1BA1C79F0);
  }
  v13 = (unint64_t)(a5[2] + 64) >> 6;
  if (v12 >= v13)
  {
    v12 = a5[3];
    goto LABEL_25;
  }
  v14 = a5[1];
  v15 = *(_QWORD *)(v14 + 8 * v12);
  if (v15)
  {
LABEL_13:
    v11 = (v15 - 1) & v15;
    v10 = v12;
    goto LABEL_14;
  }
  v16 = v10 + 2;
  if (v10 + 2 >= v13)
    goto LABEL_25;
  v15 = *(_QWORD *)(v14 + 8 * v16);
  if (v15)
    goto LABEL_9;
  if (v10 + 3 >= v13)
    goto LABEL_26;
  v15 = *(_QWORD *)(v14 + 8 * (v10 + 3));
  if (v15)
  {
    v12 = v10 + 3;
    goto LABEL_13;
  }
  v16 = v10 + 4;
  if (v10 + 4 >= v13)
  {
    v12 = v10 + 3;
    goto LABEL_25;
  }
  v15 = *(_QWORD *)(v14 + 8 * v16);
  if (v15)
  {
LABEL_9:
    v12 = v16;
    goto LABEL_13;
  }
  v12 = v10 + 5;
  if (v10 + 5 >= v13)
  {
LABEL_26:
    v12 = v16;
    goto LABEL_25;
  }
  v15 = *(_QWORD *)(v14 + 8 * v12);
  if (v15)
    goto LABEL_13;
  v12 = v13 - 1;
  v18 = v10 + 6;
  while (v13 != v18)
  {
    v15 = *(_QWORD *)(v14 + 8 * v18++);
    if (v15)
    {
      v12 = v18 - 1;
      goto LABEL_13;
    }
  }
LABEL_25:
  a5[3] = v12;
  a5[4] = 0;
  swift_retain();
  return sub_1BA1BB1B0(a1, a2, v21, a3);
}

uint64_t sub_1BA1C7AE4(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, _QWORD *a5)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v12;
  uint64_t i;

  v6 = *(_QWORD *)(a3 + 16);
  *(unint64_t *)((char *)a1 + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  v7 = v6 - 1;
  v8 = a5[1];
  v9 = *(_QWORD *)(*a5 + 16);
  for (i = v7; v8 != v9; v9 = *(_QWORD *)(*a5 + 16))
  {
    if ((v8 & 0x8000000000000000) != 0)
    {
      __break(1u);
LABEL_10:
      __break(1u);
      JUMPOUT(0x1BA1C81F4);
    }
    if (v8 >= v9)
      goto LABEL_10;
    a5[1] = v8 + 1;
    sub_1BA202A00();
    EngagementUIPlacement.rawValue.getter();
    sub_1BA202538();
    swift_bridgeObjectRelease();
    v12 = sub_1BA202A18() & ~(-1 << *(_BYTE *)(a3 + 32));
    if (((*(_QWORD *)(a3 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) != 0)
      __asm { BR              X9 }
    v8 = a5[1];
  }
  swift_retain();
  return sub_1BA1BB1B0(a1, a2, i, a3);
}

void *sub_1BA1C82E8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v1 = v0;
  sub_1BA1CAA38();
  v2 = *v0;
  v3 = sub_1BA202748();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_28;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_28;
        v17 = *(_QWORD *)(v6 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_27:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1BA1C8474()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  sub_1BA1CA8C8();
  v2 = *v0;
  v3 = sub_1BA202748();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_28;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
      {
        v9 = v20 + 2;
        if (v20 + 2 >= v13)
          goto LABEL_28;
        v21 = *(_QWORD *)(v6 + 8 * v9);
        if (!v21)
          break;
      }
    }
LABEL_27:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    v18 = v17[1];
    v19 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v19 = *v17;
    v19[1] = v18;
    result = (void *)swift_bridgeObjectRetain();
  }
  v22 = v20 + 3;
  if (v22 >= v13)
    goto LABEL_28;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1BA1C8620()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t result;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  char v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;

  v1 = v0;
  v2 = *v0;
  sub_1BA1CAA38();
  v3 = sub_1BA202754();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v9 = (unint64_t)(v5 + 63) >> 6;
  v10 = v3 + 56;
  result = swift_retain();
  v12 = 0;
  while (1)
  {
    if (v8)
    {
      v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v15 = v14 | (v12 << 6);
      goto LABEL_24;
    }
    v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v9)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v12;
    if (!v17)
    {
      v12 = v16 + 1;
      if (v16 + 1 >= v9)
        goto LABEL_33;
      v17 = *(_QWORD *)(v6 + 8 * v12);
      if (!v17)
      {
        v12 = v16 + 2;
        if (v16 + 2 >= v9)
          goto LABEL_33;
        v17 = *(_QWORD *)(v6 + 8 * v12);
        if (!v17)
          break;
      }
    }
LABEL_23:
    v8 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_24:
    v19 = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
    sub_1BA202A00();
    EngagementUIPlacement.rawValue.getter();
    sub_1BA202538();
    swift_bridgeObjectRelease();
    result = sub_1BA202A18();
    v20 = -1 << *(_BYTE *)(v4 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v10 + 8 * (v21 >> 6))) != 0)
    {
      v13 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v25 = v22 == v24;
        if (v22 == v24)
          v22 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v10 + 8 * v22);
      }
      while (v26 == -1);
      v13 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(_QWORD *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v13) = v19;
    ++*(_QWORD *)(v4 + 16);
  }
  v18 = v16 + 3;
  if (v18 >= v9)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_35;
  }
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v12 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    v12 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v12 >= v9)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v12);
    ++v18;
    if (v17)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1BA1C88C0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  int64_t v29;

  v1 = v0;
  v2 = *v0;
  sub_1BA1CA8C8();
  v3 = sub_1BA202754();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v29 = (unint64_t)(v5 + 63) >> 6;
  v9 = v3 + 56;
  result = swift_retain();
  v11 = 0;
  while (1)
  {
    if (v8)
    {
      v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      v11 = v16 + 1;
      if (v16 + 1 >= v29)
        goto LABEL_33;
      v17 = *(_QWORD *)(v6 + 8 * v11);
      if (!v17)
      {
        v11 = v16 + 2;
        if (v16 + 2 >= v29)
          goto LABEL_33;
        v17 = *(_QWORD *)(v6 + 8 * v11);
        if (!v17)
          break;
      }
    }
LABEL_23:
    v8 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v20 = *v19;
    v21 = v19[1];
    sub_1BA202A00();
    swift_bridgeObjectRetain();
    sub_1BA202538();
    result = sub_1BA202A18();
    v22 = -1 << *(_BYTE *)(v4 + 32);
    v23 = result & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
    *v13 = v20;
    v13[1] = v21;
    ++*(_QWORD *)(v4 + 16);
  }
  v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_35;
  }
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    v11 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v11 >= v29)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v11);
    ++v18;
    if (v17)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

unint64_t sub_1BA1C8B68(unint64_t result)
{
  uint64_t *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = (result + 1) & ~(-1 << *(_BYTE *)(*v1 + 32));
  if (((1 << v5) & *(_QWORD *)(v4 + 8 * (v5 >> 6))) != 0)
  {
    swift_retain();
    sub_1BA202718();
    if ((*(_QWORD *)(v4 + 8 * (v5 >> 6)) & (1 << v5)) != 0)
    {
      v6 = *(unsigned __int8 *)(*(_QWORD *)(v3 + 48) + v5);
      sub_1BA202A00();
      __asm { BR              X8 }
    }
    *(_QWORD *)(v4 + ((v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release();
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v7 = *(_QWORD *)(v3 + 16);
  v8 = __OFSUB__(v7, 1);
  v9 = v7 - 1;
  if (v8)
  {
    __break(1u);
    JUMPOUT(0x1BA1C8F94);
  }
  *(_QWORD *)(v3 + 16) = v9;
  ++*(_DWORD *)(v3 + 36);
  return result;
}

uint64_t sub_1BA1C900C(_BYTE *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v4;
  unint64_t v5;
  char isUniquelyReferenced_nonNull_native;
  uint64_t result;
  uint64_t v9;

  v4 = *v2;
  sub_1BA202A00();
  EngagementUIPlacement.rawValue.getter();
  swift_bridgeObjectRetain();
  sub_1BA202538();
  swift_bridgeObjectRelease();
  v5 = sub_1BA202A18() & ~(-1 << *(_BYTE *)(v4 + 32));
  if (((*(_QWORD *)(v4 + 56 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
    __asm { BR              X9 }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v9 = *v2;
  *v2 = 0x8000000000000000;
  sub_1BA1C984C(a2, v5, isUniquelyReferenced_nonNull_native);
  *v2 = v9;
  swift_bridgeObjectRelease();
  result = 1;
  *a1 = a2;
  return result;
}

uint64_t sub_1BA1C96B4(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BA1C96D0(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BA1C96D0(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1BA1B5770(0, &qword_1EF2791E0, (uint64_t)&type metadata for EngagementPlacementInfo, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1BA20285C();
  __break(1u);
  return result;
}

uint64_t sub_1BA1C984C(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  char v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t *v13;

  v5 = result;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 <= v6 || (a3 & 1) == 0)
  {
    if ((a3 & 1) != 0)
    {
      sub_1BA1C6B78();
    }
    else
    {
      if (v7 > v6)
      {
        result = (uint64_t)sub_1BA1C82E8();
        goto LABEL_10;
      }
      sub_1BA1C8620();
    }
    v8 = *v3;
    sub_1BA202A00();
    EngagementUIPlacement.rawValue.getter();
    sub_1BA202538();
    swift_bridgeObjectRelease();
    result = sub_1BA202A18();
    a2 = result & ~(-1 << *(_BYTE *)(v8 + 32));
    if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
      __asm { BR              X9 }
  }
LABEL_10:
  v9 = *v13;
  *(_QWORD *)(*v13 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_BYTE *)(*(_QWORD *)(v9 + 48) + a2) = v5;
  v10 = *(_QWORD *)(v9 + 16);
  v11 = __OFADD__(v10, 1);
  v12 = v10 + 1;
  if (v11)
  {
    __break(1u);
    JUMPOUT(0x1BA1C9EE0);
  }
  *(_QWORD *)(v9 + 16) = v12;
  return result;
}

uint64_t sub_1BA1C9FEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t i;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  _QWORD *v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int64_t v41;
  unint64_t v42;
  unsigned int v43;
  char v44;

  v8 = sub_1BA2024A8();
  v37 = *(_QWORD *)(v8 - 8);
  v38 = v8;
  MEMORY[0x1E0C80A78](v8);
  v36 = (uint64_t *)((char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = *(_QWORD *)(a1 + 56);
  v33 = a1 + 56;
  v11 = 1 << *(_BYTE *)(a1 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v42 = v12 & v10;
  v39 = a2;
  v34 = (unint64_t)(v11 + 63) >> 6;
  v35 = (_QWORD *)(a2 + 48);
  v43 = *MEMORY[0x1E0DEF740];
  v40 = a1;
  result = swift_bridgeObjectRetain();
  i = 0;
  while (1)
  {
    if (v42)
    {
      v15 = __clz(__rbit64(v42));
      v42 &= v42 - 1;
      v16 = v15 | (i << 6);
    }
    else
    {
      v17 = i + 1;
      if (__OFADD__(i, 1))
        goto LABEL_28;
      if (v17 >= v34)
        return swift_release();
      v18 = *(_QWORD *)(v33 + 8 * v17);
      ++i;
      if (!v18)
      {
        i = v17 + 1;
        if (v17 + 1 >= v34)
          return swift_release();
        v18 = *(_QWORD *)(v33 + 8 * i);
        if (!v18)
        {
          i = v17 + 2;
          if (v17 + 2 >= v34)
            return swift_release();
          v18 = *(_QWORD *)(v33 + 8 * i);
          if (!v18)
          {
            i = v17 + 3;
            if (v17 + 3 >= v34)
              return swift_release();
            v18 = *(_QWORD *)(v33 + 8 * i);
            if (!v18)
            {
              v19 = v17 + 4;
              if (v19 >= v34)
                return swift_release();
              v18 = *(_QWORD *)(v33 + 8 * v19);
              for (i = v19; !v18; ++v19)
              {
                i = v19 + 1;
                if (__OFADD__(v19, 1))
                  goto LABEL_29;
                if (i >= v34)
                  return swift_release();
                v18 = *(_QWORD *)(v33 + 8 * i);
              }
            }
          }
        }
      }
      v42 = (v18 - 1) & v18;
      v16 = __clz(__rbit64(v18)) + (i << 6);
    }
    v20 = *(_BYTE *)(*(_QWORD *)(v40 + 48) + v16);
    v21 = *__swift_project_boxed_opaque_existential_1(v35, *(_QWORD *)(v39 + 72));
    sub_1BA1C36F0();
    v22 = sub_1BA2026AC();
    v24 = v36;
    v23 = v37;
    *v36 = v22;
    v25 = v38;
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(v23 + 104))(v24, v43, v38);
    v26 = sub_1BA2024C0();
    result = (*(uint64_t (**)(uint64_t *, uint64_t))(v23 + 8))(v24, v25);
    if ((v26 & 1) == 0)
      break;
    v27 = *(_QWORD *)(v21 + 16);
    v28 = *(_QWORD *)(v27 + 16);
    if (v28)
    {
      v41 = i;
      v29 = (_QWORD *)(v27 + 32);
      swift_bridgeObjectRetain();
      do
      {
        v31 = v29[3];
        v30 = v29[4];
        __swift_project_boxed_opaque_existential_1(v29, v31);
        v44 = v20;
        (*(void (**)(uint64_t, uint64_t, char *, uint64_t, uint64_t))(v30 + 24))(a3, a4, &v44, v31, v30);
        v29 += 5;
        --v28;
      }
      while (v28);
      result = swift_bridgeObjectRelease();
      i = v41;
    }
  }
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_1BA1CA2CC()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BA1CA2F4(_QWORD *a1, char a2)
{
  uint64_t v2;

  return sub_1BA1C3A74(a1, a2 & 1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_1BA1CA300(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  unsigned __int8 *v4;
  unsigned int v5;
  char v6;
  uint64_t v7;

  v2 = *(_QWORD *)(a1 + 16);
  sub_1BA1C1D10();
  result = sub_1BA202658();
  v7 = result;
  if (v2)
  {
    v4 = (unsigned __int8 *)(a1 + 32);
    do
    {
      v5 = *v4++;
      sub_1BA1C900C(&v6, v5);
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

uint64_t sub_1BA1CA370(uint64_t result, uint64_t a2)
{
  unint64_t v2;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t *i;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v2 = *(_QWORD *)(result + 16);
  if (!v2)
    return MEMORY[0x1E0DEE9D8];
  v4 = 0;
  v5 = result + 40;
  v6 = MEMORY[0x1E0DEE9D8];
  v15 = result + 40;
  do
  {
    if (v4 <= v2)
      v7 = v2;
    else
      v7 = v4;
    v8 = -(uint64_t)v7;
    for (i = (uint64_t *)(v5 + 16 * v4++); ; i += 2)
    {
      if (v8 + v4 == 1)
      {
        __break(1u);
        return result;
      }
      v10 = *((unsigned __int8 *)i - 8);
      v11 = *i;
      swift_bridgeObjectRetain();
      if ((sub_1BA1C47D0(v10, a2) & 1) != 0)
        break;
      result = swift_bridgeObjectRelease();
      if (++v4 - v2 == 1)
        return v6;
    }
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
      result = sub_1BA1C96B4(0, *(_QWORD *)(v6 + 16) + 1, 1);
    v13 = *(_QWORD *)(v6 + 16);
    v12 = *(_QWORD *)(v6 + 24);
    if (v13 >= v12 >> 1)
      result = sub_1BA1C96B4(v12 > 1, v13 + 1, 1);
    *(_QWORD *)(v6 + 16) = v13 + 1;
    v14 = v6 + 16 * v13;
    *(_BYTE *)(v14 + 32) = v10;
    *(_QWORD *)(v14 + 40) = v11;
    v5 = v15;
  }
  while (v4 != v2);
  return v6;
}

uint64_t objectdestroy_2Tm()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BA1CA4F0(_QWORD *a1, char a2)
{
  uint64_t v2;

  return sub_1BA1C4E0C(a1, a2 & 1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_1BA1CA4FC(uint64_t a1)
{
  swift_unknownObjectWeakDestroy();
  return a1;
}

uint64_t initializeBufferWithCopyOfBuffer for EngagementEventAction(uint64_t a1, uint64_t a2)
{
  id v3;
  unsigned __int8 v4;

  v3 = *(id *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_1BA1CA564(*(id *)a2, v4);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return a1;
}

id sub_1BA1CA564(id result, unsigned __int8 a2)
{
  if ((a2 >> 6) - 1 <= 1)
    return result;
  return result;
}

void destroy for EngagementEventAction(uint64_t a1)
{
  sub_1BA1CA58C(*(id *)a1, *(_BYTE *)(a1 + 8));
}

void sub_1BA1CA58C(id a1, unsigned __int8 a2)
{
  if ((a2 >> 6) - 1 <= 1)

}

uint64_t assignWithCopy for EngagementEventAction(uint64_t a1, uint64_t a2)
{
  id v3;
  unsigned __int8 v4;
  void *v5;
  unsigned __int8 v6;

  v3 = *(id *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_1BA1CA564(*(id *)a2, v4);
  v5 = *(void **)a1;
  *(_QWORD *)a1 = v3;
  v6 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v4;
  sub_1BA1CA58C(v5, v6);
  return a1;
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_BYTE *)(result + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t assignWithTake for EngagementEventAction(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  unsigned __int8 v5;

  v3 = *(_BYTE *)(a2 + 8);
  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v3;
  sub_1BA1CA58C(v4, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for EngagementEventAction(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x3E && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 62);
  v3 = (*(_BYTE *)(a1 + 8) & 0x3C | (*(unsigned __int8 *)(a1 + 8) >> 6)) ^ 0x3F;
  if (v3 >= 0x3D)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for EngagementEventAction(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x3D)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 62;
    if (a3 >= 0x3E)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0x3E)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
    {
      *(_QWORD *)result = 0;
      *(_BYTE *)(result + 8) = 4 * (((-a2 >> 2) & 0xF) - 16 * a2);
    }
  }
  return result;
}

uint64_t sub_1BA1CA6E8(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8) >> 6;
}

uint64_t sub_1BA1CA6F4(uint64_t result)
{
  *(_BYTE *)(result + 8) &= 0x3Fu;
  return result;
}

uint64_t sub_1BA1CA704(uint64_t result, char a2)
{
  *(_BYTE *)(result + 8) = *(_BYTE *)(result + 8) & 3 | (a2 << 6);
  return result;
}

ValueMetadata *type metadata accessor for EngagementEventAction()
{
  return &type metadata for EngagementEventAction;
}

uint64_t dispatch thunk of EngagementEventHandlerTypeDelegate.engagementEventHandler(_:didFailFetchingEventsWithError:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of EngagementEventHandlerTypeDelegate.engagementEventHandler(_:didReceiveAction:for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

uint64_t dispatch thunk of EngagementEventHandlerType.delegate.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of EngagementEventHandlerType.delegate.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of EngagementEventHandlerType.fetchRequests(with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of EngagementEventHandlerType.addObserver(_:for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 48))();
}

{
  return (*(uint64_t (**)(void))(a5 + 56))();
}

uint64_t dispatch thunk of EngagementEventHandlerType.removeObserver(_:for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 64))();
}

uint64_t dispatch thunk of EngagementEventHandlerType.triggerAction(_:for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 72))();
}

uint64_t method lookup function for EngagementEventHandler()
{
  return swift_lookUpClassMethod();
}

void type metadata accessor for UIPopoverArrowDirection(uint64_t a1)
{
  sub_1BA1B5770(a1, &qword_1EF2791B8, (uint64_t)&unk_1E71EDE10, MEMORY[0x1E0DEEC78]);
}

uint64_t initializeBufferWithCopyOfBuffer for EngagementUpsellBanner(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t sub_1BA1CA7D4(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_1BA1CA7F4(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 32) = v3;
  return result;
}

void type metadata accessor for CGRect(uint64_t a1)
{
  sub_1BA1B5770(a1, &qword_1EF2791C0, (uint64_t)&unk_1E71EDE90, MEMORY[0x1E0DEEC78]);
}

void type metadata accessor for AMSDialogRequestStyle(uint64_t a1)
{
  sub_1BA1B5770(a1, &qword_1EF2791C8, (uint64_t)&unk_1E71EDEB8, MEMORY[0x1E0DEEC78]);
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for EngagementBannerLayout(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for EngagementBannerLayout(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CGSize(uint64_t a1)
{
  sub_1BA1B5770(a1, &qword_1ED5AF8B0, (uint64_t)&unk_1E71EDF30, MEMORY[0x1E0DEEC78]);
}

void sub_1BA1CA8C8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2791D0)
  {
    v0 = sub_1BA20276C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2791D0);
  }
}

id sub_1BA1CA924(id a1, char a2)
{
  if ((a2 & 1) != 0)
    return a1;
  else
    return (id)swift_bridgeObjectRetain();
}

void sub_1BA1CA930(id a1, char a2)
{
  if ((a2 & 1) != 0)

  else
    swift_bridgeObjectRelease();
}

uint64_t sub_1BA1CA93C()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_release();
  sub_1BA1CA58C(*(id *)(v0 + 40), *(_BYTE *)(v0 + 48));
  return swift_deallocObject();
}

uint64_t sub_1BA1CA974()
{
  uint64_t v0;

  return sub_1BA1C51F0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_BYTE *)(v0 + 48), *(_BYTE *)(v0 + 49));
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

unint64_t sub_1BA1CA990()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED5AF4F8;
  if (!qword_1ED5AF4F8)
  {
    v1 = sub_1BA20246C();
    result = MEMORY[0x1BCCD76CC](MEMORY[0x1E0DEF510], v1);
    atomic_store(result, (unint64_t *)&qword_1ED5AF4F8);
  }
  return result;
}

unint64_t sub_1BA1CA9D8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED5AF528;
  if (!qword_1ED5AF528)
  {
    sub_1BA1B9050(255, &qword_1ED5AF520, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCD76CC](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1ED5AF528);
  }
  return result;
}

void sub_1BA1CAA38()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED5AF790)
  {
    sub_1BA1C1D10();
    v0 = sub_1BA20276C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED5AF790);
  }
}

uint64_t sub_1BA1CAA90()
{
  return swift_release();
}

void type metadata accessor for CGPoint(uint64_t a1)
{
  sub_1BA1B5770(a1, &qword_1EF2791E8, (uint64_t)&unk_1E71EE000, MEMORY[0x1E0DEEC78]);
}

uint64_t EngagementBannerLayoutStore.__allocating_init()()
{
  uint64_t v0;

  v0 = swift_allocObject();
  sub_1BA1C3070();
  swift_allocObject();
  *(_QWORD *)(v0 + 16) = sub_1BA2023A0();
  return v0;
}

uint64_t EngagementBannerLayoutStore.init()()
{
  uint64_t v0;

  sub_1BA1C3070();
  swift_allocObject();
  *(_QWORD *)(v0 + 16) = sub_1BA2023A0();
  return v0;
}

NewsEngagement::EngagementBannerLayout_optional __swiftcall EngagementBannerLayoutStore.layout(for:)(NewsEngagement::EngagementUIPlacement a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  char v4;
  double v5;
  double v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  NewsEngagement::EngagementBannerLayout_optional result;

  v2 = v1;
  v3 = *(_BYTE *)a1;
  swift_retain();
  sub_1BA2023B8();
  v4 = swift_release();
  v7 = v18;
  v8 = v19;
  v9 = v20;
  if ((v20 & 1) == 0)
  {
    if (qword_1ED5AFB58 != -1)
      swift_once();
    v10 = sub_1BA20243C();
    __swift_project_value_buffer(v10, (uint64_t)qword_1ED5B08D0);
    v11 = sub_1BA202424();
    v12 = sub_1BA20267C();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = swift_slowAlloc();
      v16 = swift_slowAlloc();
      v17 = v16;
      *(_DWORD *)v13 = 136315394;
      LOBYTE(v18) = v3;
      v14 = EngagementUIPlacement.rawValue.getter();
      v18 = sub_1BA1BDA3C(v14, v15, &v17);
      sub_1BA2026E8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v13 + 12) = 2080;
      v18 = 0;
      v19 = 0xE000000000000000;
      sub_1BA202544();
      type metadata accessor for CGSize(0);
      sub_1BA2027FC();
      v18 = sub_1BA1BDA3C(v18, v19, &v17);
      sub_1BA2026E8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BA1AE000, v11, v12, "Retrieving layout for placement=%s, layout=%s", (uint8_t *)v13, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1BCCD775C](v16, -1, -1);
      MEMORY[0x1BCCD775C](v13, -1, -1);
    }

  }
  *(_QWORD *)v2 = v7;
  *(_QWORD *)(v2 + 8) = v8;
  *(_BYTE *)(v2 + 16) = v9;
  result.value.size.height = v6;
  result.value.size.width = v5;
  result.is_nil = v4;
  return result;
}

Swift::Void __swiftcall EngagementBannerLayoutStore.storeLayout(_:for:)(NewsEngagement::EngagementBannerLayout _, NewsEngagement::EngagementUIPlacement a2)
{
  char *v2;
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *v2;
  if (qword_1ED5AFB58 != -1)
    swift_once();
  v6 = sub_1BA20243C();
  __swift_project_value_buffer(v6, (uint64_t)qword_1ED5B08D0);
  v7 = sub_1BA202424();
  v8 = sub_1BA20267C();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = swift_slowAlloc();
    v10 = swift_slowAlloc();
    v13 = v10;
    *(_DWORD *)v9 = 136315394;
    LOBYTE(v14) = v5;
    v11 = EngagementUIPlacement.rawValue.getter();
    v14 = sub_1BA1BDA3C(v11, v12, &v13);
    sub_1BA2026E8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 12) = 2080;
    v14 = 0;
    v15 = 0xE000000000000000;
    sub_1BA202544();
    type metadata accessor for CGSize(0);
    sub_1BA2027FC();
    v14 = sub_1BA1BDA3C(v14, v15, &v13);
    sub_1BA2026E8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BA1AE000, v7, v8, "Storing layout for placement=%s, layout=%s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1BCCD775C](v10, -1, -1);
    MEMORY[0x1BCCD775C](v9, -1, -1);
  }

  v14 = v3;
  v15 = v4;
  v16 = 0;
  swift_retain();
  sub_1BA2023C4();
  swift_release();
}

Swift::Void __swiftcall EngagementBannerLayoutStore.removeLayout(for:)(NewsEngagement::EngagementUIPlacement a1)
{
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8[2];
  char v9;

  if (qword_1ED5AFB58 != -1)
    swift_once();
  v1 = sub_1BA20243C();
  __swift_project_value_buffer(v1, (uint64_t)qword_1ED5B08D0);
  v2 = sub_1BA202424();
  v3 = sub_1BA20267C();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    v5 = swift_slowAlloc();
    v8[0] = v5;
    *(_DWORD *)v4 = 136315138;
    v6 = EngagementUIPlacement.rawValue.getter();
    sub_1BA1BDA3C(v6, v7, v8);
    sub_1BA2026E8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BA1AE000, v2, v3, "Removing layout for placement=%s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCD775C](v5, -1, -1);
    MEMORY[0x1BCCD775C](v4, -1, -1);
  }

  v8[0] = 0;
  v8[1] = 0;
  v9 = 1;
  swift_retain();
  sub_1BA2023C4();
  swift_release();
}

Swift::Void __swiftcall EngagementBannerLayoutStore.reset()()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;

  if (qword_1ED5AFB58 != -1)
    swift_once();
  v0 = sub_1BA20243C();
  __swift_project_value_buffer(v0, (uint64_t)qword_1ED5B08D0);
  v1 = sub_1BA202424();
  v2 = sub_1BA20267C();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_1BA1AE000, v1, v2, "Removing all layouts from store", v3, 2u);
    MEMORY[0x1BCCD775C](v3, -1, -1);
  }

  swift_retain();
  sub_1BA202394();
  swift_release();
}

uint64_t EngagementBannerLayoutStore.deinit()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t EngagementBannerLayoutStore.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

double sub_1BA1CB2A0(NewsEngagement::EngagementUIPlacement a1)
{
  double result;

  *(_QWORD *)&result = (unint64_t)EngagementBannerLayoutStore.layout(for:)(a1);
  return result;
}

void sub_1BA1CB2C0(NewsEngagement::EngagementUIPlacement a1, double a2, double a3)
{
  EngagementBannerLayoutStore.storeLayout(_:for:)((NewsEngagement::EngagementBannerLayout)__PAIR128__(*(unint64_t *)&a3, *(unint64_t *)&a2), a1);
}

void sub_1BA1CB2E0(NewsEngagement::EngagementUIPlacement a1)
{
  EngagementBannerLayoutStore.removeLayout(for:)(a1);
}

void sub_1BA1CB300()
{
  EngagementBannerLayoutStore.reset()();
}

uint64_t dispatch thunk of EngagementBannerLayoutStoreType.layout(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of EngagementBannerLayoutStoreType.storeLayout(_:for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of EngagementBannerLayoutStoreType.removeLayout(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of EngagementBannerLayoutStoreType.reset()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t method lookup function for EngagementBannerLayoutStore()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of EngagementBannerLayoutStore.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

void __swiftcall EngagementUpsellBanner.init(title:titleTrialEligible:titleTrialNotEligible:titleSubscribed:body:bodyTrialEligible:bodyTrialNotEligible:bodySubscribed:footer:footerTrialEligible:footerTrialNotEligible:footerSubscribed:iconUrl:appearanceInfo:actionUrl:actionUrlSubscribed:footerActionUrl:footerActionUrlSubscribed:showCloseButton:bannerStyle:)(NewsEngagement::EngagementUpsellBanner *__return_ptr retstr, Swift::String_optional title, Swift::String_optional titleTrialEligible, Swift::String_optional titleTrialNotEligible, Swift::String_optional titleSubscribed, Swift::String_optional body, Swift::String_optional bodyTrialEligible, Swift::String_optional bodyTrialNotEligible, Swift::String_optional bodySubscribed, Swift::String_optional footer, Swift::String_optional footerTrialEligible, Swift::String_optional footerTrialNotEligible, Swift::String_optional footerSubscribed, Swift::String_optional iconUrl, Swift::String_optional appearanceInfo, Swift::String_optional actionUrl, Swift::String_optional actionUrlSubscribed, Swift::String_optional footerActionUrl, Swift::String_optional footerActionUrlSubscribed, Swift::Bool_optional showCloseButton,Swift::String_optional bannerStyle)
{
  retstr->title = title;
  retstr->titleTrialEligible = titleTrialEligible;
  retstr->titleTrialNotEligible = titleTrialNotEligible;
  retstr->titleSubscribed = titleSubscribed;
  retstr->body = body;
  retstr->bodyTrialEligible = bodyTrialEligible;
  retstr->bodyTrialNotEligible = bodyTrialNotEligible;
  retstr->bodySubscribed = bodySubscribed;
  retstr->footer = footer;
  retstr->footerTrialEligible = footerTrialEligible;
  retstr->footerTrialNotEligible = footerTrialNotEligible;
  retstr->footerSubscribed = footerSubscribed;
  retstr->iconUrl = iconUrl;
  retstr->appearanceInfo = appearanceInfo;
  retstr->actionUrl = actionUrl;
  retstr->actionUrlSubscribed = actionUrlSubscribed;
  retstr->footerActionUrl = footerActionUrl;
  retstr->footerActionUrlSubscribed = footerActionUrlSubscribed;
  retstr->showCloseButton = showCloseButton;
  retstr->bannerStyle = bannerStyle;
}

uint64_t EngagementUpsellBanner.title.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EngagementUpsellBanner.titleTrialEligible.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EngagementUpsellBanner.titleTrialNotEligible.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EngagementUpsellBanner.titleSubscribed.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EngagementUpsellBanner.body.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EngagementUpsellBanner.bodyTrialEligible.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 80);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EngagementUpsellBanner.bodyTrialNotEligible.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 96);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EngagementUpsellBanner.bodySubscribed.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 112);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EngagementUpsellBanner.footer.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 128);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EngagementUpsellBanner.footerTrialEligible.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 144);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EngagementUpsellBanner.footerTrialNotEligible.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 160);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EngagementUpsellBanner.footerSubscribed.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 176);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EngagementUpsellBanner.iconUrl.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 192);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EngagementUpsellBanner.appearanceInfo.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 208);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EngagementUpsellBanner.actionUrl.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 224);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EngagementUpsellBanner.actionUrlSubscribed.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 240);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EngagementUpsellBanner.footerActionUrl.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 256);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EngagementUpsellBanner.footerActionUrlSubscribed.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 272);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EngagementUpsellBanner.showCloseButton.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 288);
}

uint64_t EngagementUpsellBanner.bannerStyle.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 296);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BA1CB704(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA1CB734 + 4 * byte_1BA203520[a1]))(0x656C746974, 0xE500000000000000);
}

unint64_t sub_1BA1CB734()
{
  return 0xD000000000000012;
}

uint64_t sub_1BA1CB8F4()
{
  return 0x736F6C43776F6873;
}

uint64_t sub_1BA1CB918()
{
  return 0x745372656E6E6162;
}

BOOL sub_1BA1CB938(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t _s14NewsEngagement0B17UIPlacementAnchorO9hashValueSivg_0()
{
  sub_1BA202A00();
  sub_1BA202A0C();
  return sub_1BA202A18();
}

uint64_t sub_1BA1CB990()
{
  return sub_1BA202A0C();
}

uint64_t sub_1BA1CB9B8()
{
  sub_1BA202A00();
  sub_1BA202A0C();
  return sub_1BA202A18();
}

uint64_t sub_1BA1CB9F8()
{
  unsigned __int8 *v0;

  return sub_1BA1CB704(*v0);
}

uint64_t sub_1BA1CBA00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BA1CE400(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BA1CBA24()
{
  return 0;
}

void sub_1BA1CBA30(_BYTE *a1@<X8>)
{
  *a1 = 20;
}

uint64_t sub_1BA1CBA3C()
{
  sub_1BA1CC040();
  return sub_1BA202A3C();
}

uint64_t sub_1BA1CBA64()
{
  sub_1BA1CC040();
  return sub_1BA202A48();
}

uint64_t EngagementUpsellBanner.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v20[36];
  uint64_t v21;
  int v22;
  char v23;

  sub_1BA1CD1B8(0, &qword_1EF279250, MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v20 - v6;
  v8 = *(_QWORD *)(v1 + 16);
  v20[34] = *(_QWORD *)(v1 + 24);
  v20[35] = v8;
  v9 = *(_QWORD *)(v1 + 32);
  v20[32] = *(_QWORD *)(v1 + 40);
  v20[33] = v9;
  v10 = *(_QWORD *)(v1 + 48);
  v20[30] = *(_QWORD *)(v1 + 56);
  v20[31] = v10;
  v11 = *(_QWORD *)(v1 + 64);
  v20[28] = *(_QWORD *)(v1 + 72);
  v20[29] = v11;
  v12 = *(_QWORD *)(v1 + 88);
  v20[26] = *(_QWORD *)(v1 + 80);
  v20[27] = v12;
  v13 = *(_QWORD *)(v1 + 104);
  v20[24] = *(_QWORD *)(v1 + 96);
  v20[25] = v13;
  v14 = *(_QWORD *)(v1 + 120);
  v20[22] = *(_QWORD *)(v1 + 112);
  v20[23] = v14;
  v15 = *(_QWORD *)(v1 + 136);
  v20[20] = *(_QWORD *)(v1 + 128);
  v20[21] = v15;
  v16 = *(_QWORD *)(v1 + 152);
  v20[18] = *(_QWORD *)(v1 + 144);
  v20[19] = v16;
  v17 = *(_QWORD *)(v1 + 168);
  v20[16] = *(_QWORD *)(v1 + 160);
  v20[17] = v17;
  v20[14] = *(_QWORD *)(v1 + 176);
  v20[15] = *(_QWORD *)(v1 + 184);
  v20[12] = *(_QWORD *)(v1 + 192);
  v20[13] = *(_QWORD *)(v1 + 200);
  v20[10] = *(_QWORD *)(v1 + 208);
  v20[11] = *(_QWORD *)(v1 + 216);
  v20[8] = *(_QWORD *)(v1 + 224);
  v20[9] = *(_QWORD *)(v1 + 232);
  v20[6] = *(_QWORD *)(v1 + 240);
  v20[7] = *(_QWORD *)(v1 + 248);
  v20[4] = *(_QWORD *)(v1 + 256);
  v20[5] = *(_QWORD *)(v1 + 264);
  v20[0] = *(_QWORD *)(v1 + 272);
  v20[1] = *(_QWORD *)(v1 + 280);
  v22 = *(unsigned __int8 *)(v1 + 288);
  v20[3] = *(_QWORD *)(v1 + 296);
  v20[2] = *(_QWORD *)(v1 + 304);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA1CC040();
  sub_1BA202A30();
  v23 = 0;
  v18 = v21;
  sub_1BA202910();
  if (!v18)
  {
    v23 = 1;
    sub_1BA202910();
    v23 = 2;
    sub_1BA202910();
    v21 = v5;
    v23 = 3;
    sub_1BA202910();
    v23 = 4;
    sub_1BA202910();
    v23 = 5;
    sub_1BA202910();
    v23 = 6;
    sub_1BA202910();
    v23 = 7;
    sub_1BA202910();
    v23 = 8;
    sub_1BA202910();
    v23 = 9;
    sub_1BA202910();
    v23 = 10;
    sub_1BA202910();
    v23 = 11;
    sub_1BA202910();
    v23 = 12;
    sub_1BA202910();
    v23 = 13;
    sub_1BA202910();
    v23 = 14;
    sub_1BA202910();
    v23 = 15;
    sub_1BA202910();
    v23 = 16;
    sub_1BA202910();
    v23 = 17;
    sub_1BA202910();
    v23 = 18;
    sub_1BA20291C();
    v23 = 19;
    sub_1BA202910();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1BA1CC040()
{
  unint64_t result;

  result = qword_1EF279258;
  if (!qword_1EF279258)
  {
    result = MEMORY[0x1BCCD76CC](&unk_1BA2036FC, &type metadata for EngagementUpsellBanner.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF279258);
  }
  return result;
}

uint64_t EngagementUpsellBanner.init(from:)@<X0>(_QWORD *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  void *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  _QWORD v97[39];
  _QWORD v98[36];
  char v99;
  _BYTE v100[7];
  uint64_t v101;
  uint64_t v102;
  char v103;
  _DWORD v104[3];
  _QWORD *v105;

  sub_1BA1CD1B8(0, &qword_1EF279260, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v57 - v8;
  v10 = a1[3];
  v105 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v10);
  sub_1BA1CC040();
  sub_1BA202A24();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v105);
  v85 = a2;
  LOBYTE(v98[0]) = 0;
  v12 = sub_1BA20288C();
  LOBYTE(v98[0]) = 1;
  v14 = v13;
  swift_bridgeObjectRetain();
  v15 = sub_1BA20288C();
  v96 = v14;
  v16 = v15;
  LOBYTE(v98[0]) = 2;
  v18 = v17;
  swift_bridgeObjectRetain();
  v19 = sub_1BA20288C();
  v95 = v18;
  v84 = v19;
  LOBYTE(v98[0]) = 3;
  v21 = v20;
  swift_bridgeObjectRetain();
  v22 = sub_1BA20288C();
  v94 = v21;
  v83 = v22;
  LOBYTE(v98[0]) = 4;
  v24 = v23;
  swift_bridgeObjectRetain();
  v25 = sub_1BA20288C();
  v93 = v24;
  v82 = v25;
  LOBYTE(v98[0]) = 5;
  v27 = v26;
  swift_bridgeObjectRetain();
  v28 = sub_1BA20288C();
  v92 = v27;
  v81 = v28;
  LOBYTE(v98[0]) = 6;
  v30 = v29;
  swift_bridgeObjectRetain();
  v31 = sub_1BA20288C();
  v91 = v30;
  v80 = v31;
  LOBYTE(v98[0]) = 7;
  v90 = v32;
  swift_bridgeObjectRetain();
  v79 = sub_1BA20288C();
  LOBYTE(v98[0]) = 8;
  v89 = v33;
  swift_bridgeObjectRetain();
  v78 = sub_1BA20288C();
  v76 = v16;
  LOBYTE(v98[0]) = 9;
  v88 = v34;
  swift_bridgeObjectRetain();
  v35 = sub_1BA20288C();
  v77 = v36;
  v37 = v35;
  LOBYTE(v98[0]) = 10;
  swift_bridgeObjectRetain();
  v74 = sub_1BA20288C();
  v75 = v38;
  LOBYTE(v98[0]) = 11;
  swift_bridgeObjectRetain();
  v72 = sub_1BA20288C();
  v73 = v39;
  LOBYTE(v98[0]) = 12;
  swift_bridgeObjectRetain();
  v71 = sub_1BA20288C();
  v87 = v40;
  LOBYTE(v98[0]) = 13;
  swift_bridgeObjectRetain();
  v70 = sub_1BA20288C();
  v86 = v41;
  LOBYTE(v98[0]) = 14;
  swift_bridgeObjectRetain();
  v68 = sub_1BA20288C();
  v69 = v42;
  LOBYTE(v98[0]) = 15;
  swift_bridgeObjectRetain();
  v65 = sub_1BA20288C();
  v67 = v43;
  LOBYTE(v98[0]) = 16;
  swift_bridgeObjectRetain();
  v63 = sub_1BA20288C();
  v64 = v44;
  v66 = 0;
  LOBYTE(v98[0]) = 17;
  swift_bridgeObjectRetain();
  v45 = v66;
  v62 = sub_1BA20288C();
  if (v45)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v105);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    if (!v66)
      return swift_bridgeObjectRelease();
  }
  else
  {
    v47 = v46;
    LOBYTE(v98[0]) = 18;
    swift_bridgeObjectRetain();
    v61 = sub_1BA202898();
    v103 = 19;
    v48 = sub_1BA20288C();
    v60 = v49;
    v50 = v48;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v97[0] = v12;
    v97[1] = v96;
    v97[2] = v76;
    v97[3] = v95;
    v97[4] = v84;
    v97[5] = v94;
    v97[6] = v83;
    v97[7] = v93;
    v97[8] = v82;
    v97[9] = v92;
    v97[10] = v81;
    v97[11] = v91;
    v97[12] = v80;
    v97[13] = v90;
    v97[14] = v79;
    v97[15] = v89;
    v97[16] = v78;
    v97[17] = v88;
    v58 = v37;
    v97[18] = v37;
    v97[19] = v77;
    v97[20] = v74;
    v97[21] = v75;
    v97[22] = v72;
    v97[23] = v73;
    v97[24] = v71;
    v97[25] = v87;
    v51 = v69;
    v97[26] = v70;
    v97[27] = v86;
    v97[28] = v68;
    v97[29] = v69;
    v97[30] = v65;
    v97[31] = v67;
    v97[32] = v63;
    v97[33] = v64;
    v97[34] = v62;
    v57 = v47;
    v97[35] = v47;
    LOBYTE(v97[36]) = v61;
    v59 = v50;
    v97[37] = v50;
    v97[38] = v60;
    sub_1BA1CD214((uint64_t)v97);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v52 = v87;
    swift_bridgeObjectRelease();
    v53 = v86;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v54 = v67;
    swift_bridgeObjectRelease();
    v55 = v64;
    swift_bridgeObjectRelease();
    v56 = v57;
    swift_bridgeObjectRelease();
    memcpy(v85, v97, 0x138uLL);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v105);
    v98[0] = v12;
    v98[1] = v96;
    v98[2] = v76;
    v98[3] = v95;
    v98[4] = v84;
    v98[5] = v94;
    v98[6] = v83;
    v98[7] = v93;
    v98[8] = v82;
    v98[9] = v92;
    v98[10] = v81;
    v98[11] = v91;
    v98[12] = v80;
    v98[13] = v90;
    v98[14] = v79;
    v98[15] = v89;
    v98[16] = v78;
    v98[17] = v88;
    v98[18] = v58;
    v98[19] = v77;
    v98[20] = v74;
    v98[21] = v75;
    v98[22] = v72;
    v98[23] = v73;
    v98[24] = v71;
    v98[25] = v52;
    v98[26] = v70;
    v98[27] = v53;
    v98[28] = v68;
    v98[29] = v51;
    v98[30] = v65;
    v98[31] = v54;
    v98[32] = v63;
    v98[33] = v55;
    v98[34] = v62;
    v98[35] = v56;
    v99 = v61;
    *(_DWORD *)v100 = v104[0];
    *(_DWORD *)&v100[3] = *(_DWORD *)((char *)v104 + 3);
    v101 = v59;
    v102 = v60;
    return sub_1BA1CD350((uint64_t)v98);
  }
  return result;
}

void sub_1BA1CD1B8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BA1CC040();
    v7 = a3(a1, &type metadata for EngagementUpsellBanner.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1BA1CD214(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BA1CD350(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1BA1CD48C@<X0>(_QWORD *a1@<X0>, void *a2@<X8>)
{
  return EngagementUpsellBanner.init(from:)(a1, a2);
}

uint64_t sub_1BA1CD4A0(_QWORD *a1)
{
  return EngagementUpsellBanner.encode(to:)(a1);
}

void __swiftcall EngagementUpsellBanner.banner(withParent:)(NewsEngagement::EngagementUpsellBanner *__return_ptr retstr, NewsEngagement::EngagementUpsellBanner_optional *withParent)
{
  uint64_t v2;
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  int v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  void *v36;
  void *v37;
  _BYTE v38[192];
  uint64_t v39;
  void *v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  void *v50;
  char v51;
  uint64_t v52;
  _BYTE v53[320];

  sub_1BA1CD914((uint64_t)withParent, (uint64_t)v53);
  v19 = *(_QWORD *)v2;
  v29 = *(_OWORD *)(v2 + 24);
  v30 = *(_OWORD *)(v2 + 8);
  v27 = *(_OWORD *)(v2 + 56);
  v28 = *(_OWORD *)(v2 + 40);
  v25 = *(_OWORD *)(v2 + 88);
  v26 = *(_OWORD *)(v2 + 72);
  v23 = *(_OWORD *)(v2 + 120);
  v24 = *(_OWORD *)(v2 + 104);
  v21 = *(_OWORD *)(v2 + 152);
  v22 = *(_OWORD *)(v2 + 136);
  v20 = *(_OWORD *)(v2 + 168);
  v4 = *(_QWORD *)(v2 + 208);
  v5 = *(void **)(v2 + 216);
  v6 = *(void **)(v2 + 232);
  v7 = *(_QWORD *)(v2 + 240);
  v35 = *(void **)(v2 + 184);
  v36 = *(void **)(v2 + 248);
  v8 = *(void **)(v2 + 264);
  v31 = *(_QWORD *)(v2 + 256);
  v32 = *(_QWORD *)(v2 + 224);
  v37 = *(void **)(v2 + 280);
  v9 = *(unsigned __int8 *)(v2 + 288);
  v10 = *(void **)(v2 + 304);
  v33 = *(_QWORD *)(v2 + 272);
  v34 = *(_QWORD *)(v2 + 296);
  if (*(_QWORD *)(v2 + 200))
  {
    v17 = *(void **)(v2 + 200);
    v18 = *(_QWORD *)(v2 + 192);
    v11 = *(void **)(v2 + 216);
    if (v5)
      goto LABEL_11;
  }
  else
  {
    sub_1BA1CD914((uint64_t)v53, (uint64_t)v38);
    if (sub_1BA1CD968((uint64_t)v38) == 1)
    {
      v17 = 0;
      v18 = 0;
      v11 = v5;
      if (v5)
        goto LABEL_11;
    }
    else
    {
      v17 = v40;
      v18 = v39;
      swift_bridgeObjectRetain();
      v11 = v5;
      if (v5)
        goto LABEL_11;
    }
  }
  sub_1BA1CD914((uint64_t)v53, (uint64_t)v38);
  if (sub_1BA1CD968((uint64_t)v38) == 1)
  {
    v4 = 0;
    v11 = 0;
  }
  else
  {
    v4 = v41;
    v11 = v42;
    swift_bridgeObjectRetain();
  }
LABEL_11:
  v12 = v6;
  if (!v6)
  {
    sub_1BA1CD914((uint64_t)v53, (uint64_t)v38);
    if (sub_1BA1CD968((uint64_t)v38) == 1)
    {
      v32 = 0;
      v12 = 0;
    }
    else
    {
      v32 = v43;
      v12 = v44;
      swift_bridgeObjectRetain();
    }
  }
  v13 = v36;
  if (!v36)
  {
    sub_1BA1CD914((uint64_t)v53, (uint64_t)v38);
    if (sub_1BA1CD968((uint64_t)v38) != 1)
    {
      v7 = v45;
      v13 = v46;
      swift_bridgeObjectRetain();
      v14 = v8;
      if (v8)
        goto LABEL_24;
      goto LABEL_19;
    }
    v7 = 0;
    v13 = 0;
  }
  v14 = v8;
  if (v8)
    goto LABEL_24;
LABEL_19:
  sub_1BA1CD914((uint64_t)v53, (uint64_t)v38);
  if (sub_1BA1CD968((uint64_t)v38) == 1)
  {
    v31 = 0;
    v14 = 0;
  }
  else
  {
    v31 = v47;
    v14 = v48;
    swift_bridgeObjectRetain();
  }
LABEL_24:
  v15 = v37;
  if (!v37)
  {
    sub_1BA1CD914((uint64_t)v53, (uint64_t)v38);
    if (sub_1BA1CD968((uint64_t)v38) != 1)
    {
      v33 = v49;
      v15 = v50;
      swift_bridgeObjectRetain();
      if (v9 != 2)
        goto LABEL_32;
      goto LABEL_28;
    }
    v33 = 0;
    v15 = 0;
  }
  if (v9 != 2)
    goto LABEL_32;
LABEL_28:
  sub_1BA1CD914((uint64_t)v53, (uint64_t)v38);
  if (sub_1BA1CD968((uint64_t)v38) == 1)
    LOBYTE(v9) = 2;
  else
    LOBYTE(v9) = v51;
LABEL_32:
  v16 = v10;
  if (!v10)
  {
    sub_1BA1CD914((uint64_t)v53, (uint64_t)v38);
    if (sub_1BA1CD968((uint64_t)v38) == 1)
    {
      v34 = 0;
      v16 = 0;
    }
    else
    {
      v34 = v52;
      v16 = (void *)swift_bridgeObjectRetain();
    }
  }
  retstr->title.value._countAndFlagsBits = v19;
  *(_OWORD *)&retstr->title.value._object = v30;
  *(_OWORD *)&retstr->titleTrialEligible.value._object = v29;
  *(_OWORD *)&retstr->titleTrialNotEligible.value._object = v28;
  *(_OWORD *)&retstr->titleSubscribed.value._object = v27;
  *(_OWORD *)&retstr->body.value._object = v26;
  *(_OWORD *)&retstr->bodyTrialEligible.value._object = v25;
  *(_OWORD *)&retstr->bodyTrialNotEligible.value._object = v24;
  *(_OWORD *)&retstr->bodySubscribed.value._object = v23;
  *(_OWORD *)&retstr->footer.value._object = v22;
  *(_OWORD *)&retstr->footerTrialEligible.value._object = v21;
  *(_OWORD *)&retstr->footerTrialNotEligible.value._object = v20;
  retstr->footerSubscribed.value._object = v35;
  retstr->iconUrl.value._countAndFlagsBits = v18;
  retstr->iconUrl.value._object = v17;
  retstr->appearanceInfo.value._countAndFlagsBits = v4;
  retstr->appearanceInfo.value._object = v11;
  retstr->actionUrl.value._countAndFlagsBits = v32;
  retstr->actionUrl.value._object = v12;
  retstr->actionUrlSubscribed.value._countAndFlagsBits = v7;
  retstr->actionUrlSubscribed.value._object = v13;
  retstr->footerActionUrl.value._countAndFlagsBits = v31;
  retstr->footerActionUrl.value._object = v14;
  retstr->footerActionUrlSubscribed.value._countAndFlagsBits = v33;
  retstr->footerActionUrlSubscribed.value._object = v15;
  retstr->showCloseButton.value = v9;
  retstr->bannerStyle.value._countAndFlagsBits = v34;
  retstr->bannerStyle.value._object = v16;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
}

uint64_t sub_1BA1CD914(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA1B57B4(0, &qword_1ED5AF2D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BA1CD968(uint64_t a1)
{
  unint64_t v1;
  int v2;

  v1 = *(_QWORD *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  v2 = v1 - 1;
  if (v2 < 0)
    v2 = -1;
  return (v2 + 1);
}

uint64_t destroy for EngagementUpsellBanner()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for EngagementUpsellBanner(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  v6 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v6;
  v7 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v7;
  v8 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v8;
  v9 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v9;
  v10 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v10;
  v11 = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = v11;
  v12 = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = v12;
  v13 = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = v13;
  v14 = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = v14;
  v15 = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 200) = v15;
  v16 = *(_QWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  *(_QWORD *)(a1 + 216) = v16;
  v17 = *(_QWORD *)(a2 + 232);
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  *(_QWORD *)(a1 + 232) = v17;
  v18 = *(_QWORD *)(a2 + 248);
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
  *(_QWORD *)(a1 + 248) = v18;
  v19 = *(_QWORD *)(a2 + 264);
  *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
  *(_QWORD *)(a1 + 264) = v19;
  v20 = *(_QWORD *)(a2 + 280);
  *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
  *(_QWORD *)(a1 + 280) = v20;
  *(_BYTE *)(a1 + 288) = *(_BYTE *)(a2 + 288);
  v21 = *(_QWORD *)(a2 + 304);
  *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);
  *(_QWORD *)(a1 + 304) = v21;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for EngagementUpsellBanner(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
  *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
  *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
  *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 288) = *(_BYTE *)(a2 + 288);
  *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);
  *(_QWORD *)(a1 + 304) = *(_QWORD *)(a2 + 304);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *__swift_memcpy312_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x138uLL);
}

uint64_t assignWithTake for EngagementUpsellBanner(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v8;
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v9;
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v10;
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v11;
  swift_bridgeObjectRelease();
  v12 = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = v12;
  swift_bridgeObjectRelease();
  v13 = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = v13;
  swift_bridgeObjectRelease();
  v14 = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = v14;
  swift_bridgeObjectRelease();
  v15 = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = v15;
  swift_bridgeObjectRelease();
  v16 = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 200) = v16;
  swift_bridgeObjectRelease();
  v17 = *(_QWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  *(_QWORD *)(a1 + 216) = v17;
  swift_bridgeObjectRelease();
  v18 = *(_QWORD *)(a2 + 232);
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  *(_QWORD *)(a1 + 232) = v18;
  swift_bridgeObjectRelease();
  v19 = *(_QWORD *)(a2 + 248);
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
  *(_QWORD *)(a1 + 248) = v19;
  swift_bridgeObjectRelease();
  v20 = *(_QWORD *)(a2 + 264);
  *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
  *(_QWORD *)(a1 + 264) = v20;
  swift_bridgeObjectRelease();
  v21 = *(_QWORD *)(a2 + 280);
  *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
  *(_QWORD *)(a1 + 280) = v21;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 288) = *(_BYTE *)(a2 + 288);
  v22 = *(_QWORD *)(a2 + 304);
  *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);
  *(_QWORD *)(a1 + 304) = v22;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for EngagementUpsellBanner(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 312))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for EngagementUpsellBanner(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 312) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 312) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for EngagementUpsellBanner.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xED)
    goto LABEL_17;
  if (a2 + 19 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 19) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 19;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 19;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 19;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x14;
  v8 = v6 - 20;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for EngagementUpsellBanner.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 19 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 19) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xED)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xEC)
    return ((uint64_t (*)(void))((char *)&loc_1BA1CE1B4 + 4 * byte_1BA203539[v4]))();
  *a1 = a2 + 19;
  return ((uint64_t (*)(void))((char *)sub_1BA1CE1E8 + 4 * byte_1BA203534[v4]))();
}

uint64_t sub_1BA1CE1E8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA1CE1F0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BA1CE1F8);
  return result;
}

uint64_t sub_1BA1CE204(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BA1CE20CLL);
  *(_BYTE *)result = a2 + 19;
  return result;
}

uint64_t sub_1BA1CE210(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA1CE218(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for EngagementUpsellBanner.CodingKeys()
{
  return &type metadata for EngagementUpsellBanner.CodingKeys;
}

unint64_t sub_1BA1CE238()
{
  unint64_t result;

  result = qword_1EF279268;
  if (!qword_1EF279268)
  {
    result = MEMORY[0x1BCCD76CC](&unk_1BA2036D4, &type metadata for EngagementUpsellBanner.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF279268);
  }
  return result;
}

unint64_t sub_1BA1CE280()
{
  unint64_t result;

  result = qword_1EF279270;
  if (!qword_1EF279270)
  {
    result = MEMORY[0x1BCCD76CC](&unk_1BA203644, &type metadata for EngagementUpsellBanner.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF279270);
  }
  return result;
}

unint64_t sub_1BA1CE2C8()
{
  unint64_t result;

  result = qword_1EF279278;
  if (!qword_1EF279278)
  {
    result = MEMORY[0x1BCCD76CC](&unk_1BA20366C, &type metadata for EngagementUpsellBanner.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF279278);
  }
  return result;
}

unint64_t sub_1BA1CE30C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1BA202724();
  return sub_1BA1CE33C(a1, v2);
}

unint64_t sub_1BA1CE33C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  char v7;
  _BYTE v9[40];

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v6 = ~v3;
    do
    {
      sub_1BA1CEC4C(*(_QWORD *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      v7 = MEMORY[0x1BCCD6FE8](v9, a1);
      sub_1BA1CEC88((uint64_t)v9);
      if ((v7 & 1) != 0)
        break;
      v4 = (v4 + 1) & v6;
    }
    while (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

uint64_t sub_1BA1CE400(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x656C746974 && a2 == 0xE500000000000000;
  if (v2 || (sub_1BA202988() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001BA206E20 || (sub_1BA202988() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001BA206E40 || (sub_1BA202988() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x627553656C746974 && a2 == 0xEF64656269726373 || (sub_1BA202988() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 2036625250 && a2 == 0xE400000000000000 || (sub_1BA202988() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001BA206E60 || (sub_1BA202988() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001BA206E80 || (sub_1BA202988() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x7362755379646F62 && a2 == 0xEE00646562697263 || (sub_1BA202988() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x7265746F6F66 && a2 == 0xE600000000000000 || (sub_1BA202988() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001BA206EA0 || (sub_1BA202988() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001BA206EC0 || (sub_1BA202988() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001BA206EE0 || (sub_1BA202988() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x6C72556E6F6369 && a2 == 0xE700000000000000 || (sub_1BA202988() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0x6E61726165707061 && a2 == 0xEE006F666E496563 || (sub_1BA202988() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0x72556E6F69746361 && a2 == 0xE90000000000006CLL || (sub_1BA202988() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001BA206F00 || (sub_1BA202988() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0x63417265746F6F66 && a2 == 0xEF6C72556E6F6974 || (sub_1BA202988() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x80000001BA206F20 || (sub_1BA202988() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 17;
  }
  else if (a1 == 0x736F6C43776F6873 && a2 == 0xEF6E6F7474754265 || (sub_1BA202988() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 18;
  }
  else if (a1 == 0x745372656E6E6162 && a2 == 0xEB00000000656C79)
  {
    swift_bridgeObjectRelease();
    return 19;
  }
  else
  {
    v6 = sub_1BA202988();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 19;
    else
      return 20;
  }
}

uint64_t sub_1BA1CEC4C(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(MEMORY[0x1E0DEC198] - 8) + 16))(a2, a1);
  return a2;
}

uint64_t sub_1BA1CEC88(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x1E0DEC198] - 8) + 8))();
  return a1;
}

uint64_t sub_1BA1CECBC(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v15;
  uint64_t v16;

  v3 = v2;
  sub_1BA1B9050(0, &qword_1ED5AF318, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v15 - v7;
  v9 = sub_1BA202184();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1, 1, v9) == 1)
  {
    sub_1BA1BAD90(a1);
    sub_1BA1FFEB4(a2, (uint64_t)v8);
    return sub_1BA1BAD90((uint64_t)v8);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 32))(v12, a1, v9);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v16 = *v3;
    *v3 = 0x8000000000000000;
    sub_1BA1D61A8((uint64_t)v12, a2, isUniquelyReferenced_nonNull_native);
    *v3 = v16;
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1BA1CEE10(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v7;
  _OWORD v8[2];

  if (*(_QWORD *)(a1 + 24))
  {
    sub_1BA1B43D0((_OWORD *)a1, v8);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v7 = *v2;
    *v2 = 0x8000000000000000;
    sub_1BA1D62CC(v8, a2, isUniquelyReferenced_nonNull_native);
    *v2 = v7;
    swift_bridgeObjectRelease();
    return sub_1BA1CEC88(a2);
  }
  else
  {
    v6 = MEMORY[0x1E0DEE9B8] + 8;
    sub_1BA1B900C(a1, (unint64_t *)&qword_1ED5AF5B0, MEMORY[0x1E0DEE9B8] + 8);
    sub_1BA1FFFCC(a2, v8);
    sub_1BA1CEC88(a2);
    return sub_1BA1B900C((uint64_t)v8, (unint64_t *)&qword_1ED5AF5B0, v6);
  }
}

void sub_1BA1CEEE8(uint64_t a1, char a2, uint64_t a3)
{
  id *v3;
  char v6;
  char isUniquelyReferenced_nonNull_native;
  id v8;
  char v9;

  if (a2 == -1)
  {
    sub_1BA2000B4(a3, (uint64_t)&v8);
    sub_1BA1C02F8(v8, v9);
  }
  else
  {
    v6 = a2 & 1;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v8 = *v3;
    *v3 = (id)0x8000000000000000;
    sub_1BA1D6404(a1, v6, a3, isUniquelyReferenced_nonNull_native);
    *v3 = v8;
    swift_bridgeObjectRelease();
  }
}

char *sub_1BA1CEF94(char *a1, _QWORD *a2, char *a3, uint64_t a4)
{
  return sub_1BA1CFECC(a1, a2, a3, a4);
}

char *sub_1BA1CEFA8(char *a1, _QWORD *a2, char *a3, uint64_t a4)
{
  return sub_1BA1CFF2C(a1, a2, a3, a4);
}

uint64_t sub_1BA1CEFBC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  int64_t v15;
  void *v16;
  id v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  char v21;
  unint64_t v22;
  BOOL v23;
  uint64_t v24;
  int64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;

  if (*(_QWORD *)(a1 + 16))
  {
    sub_1BA1D155C();
    v2 = sub_1BA202844();
  }
  else
  {
    v2 = MEMORY[0x1E0DEE9E0];
  }
  v26 = a1 + 64;
  v3 = -1 << *(_BYTE *)(a1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v25 = (unint64_t)(63 - v3) >> 6;
  v6 = v2 + 64;
  swift_bridgeObjectRetain();
  result = swift_retain();
  v8 = 0;
  while (1)
  {
    if (v5)
    {
      v10 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v11 = v10 | (v8 << 6);
      goto LABEL_28;
    }
    v12 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v12 >= v25)
      goto LABEL_37;
    v13 = *(_QWORD *)(v26 + 8 * v12);
    v14 = v8 + 1;
    if (!v13)
    {
      v14 = v8 + 2;
      if (v8 + 2 >= v25)
        goto LABEL_37;
      v13 = *(_QWORD *)(v26 + 8 * v14);
      if (!v13)
      {
        v14 = v8 + 3;
        if (v8 + 3 >= v25)
          goto LABEL_37;
        v13 = *(_QWORD *)(v26 + 8 * v14);
        if (!v13)
        {
          v14 = v8 + 4;
          if (v8 + 4 >= v25)
            goto LABEL_37;
          v13 = *(_QWORD *)(v26 + 8 * v14);
          if (!v13)
            break;
        }
      }
    }
LABEL_27:
    v5 = (v13 - 1) & v13;
    v11 = __clz(__rbit64(v13)) + (v14 << 6);
    v8 = v14;
LABEL_28:
    v16 = *(void **)(*(_QWORD *)(a1 + 56) + 8 * v11);
    v27 = *(_BYTE *)(*(_QWORD *)(a1 + 48) + v11);
    sub_1BA1C1078(0, &qword_1ED5AF540);
    sub_1BA1D15C4();
    v17 = v16;
    swift_dynamicCast();
    sub_1BA202A00();
    EngagementUIPlacement.rawValue.getter();
    sub_1BA202538();
    swift_bridgeObjectRelease();
    result = sub_1BA202A18();
    v18 = -1 << *(_BYTE *)(v2 + 32);
    v19 = result & ~v18;
    v20 = v19 >> 6;
    if (((-1 << v19) & ~*(_QWORD *)(v6 + 8 * (v19 >> 6))) != 0)
    {
      v9 = __clz(__rbit64((-1 << v19) & ~*(_QWORD *)(v6 + 8 * (v19 >> 6)))) | v19 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v21 = 0;
      v22 = (unint64_t)(63 - v18) >> 6;
      do
      {
        if (++v20 == v22 && (v21 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v23 = v20 == v22;
        if (v20 == v22)
          v20 = 0;
        v21 |= v23;
        v24 = *(_QWORD *)(v6 + 8 * v20);
      }
      while (v24 == -1);
      v9 = __clz(__rbit64(~v24)) + (v20 << 6);
    }
    *(_QWORD *)(v6 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
    *(_BYTE *)(*(_QWORD *)(v2 + 48) + v9) = v27;
    *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * v9) = v28;
    ++*(_QWORD *)(v2 + 16);
  }
  v15 = v8 + 5;
  if (v8 + 5 >= v25)
  {
LABEL_37:
    swift_release();
    sub_1BA1CAA90();
    return v2;
  }
  v13 = *(_QWORD *)(v26 + 8 * v15);
  if (v13)
  {
    v14 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v14 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v14 >= v25)
      goto LABEL_37;
    v13 = *(_QWORD *)(v26 + 8 * v14);
    ++v15;
    if (v13)
      goto LABEL_27;
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_1BA1CF31C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  int64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  int64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  _OWORD v32[2];
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  _OWORD v36[2];
  _OWORD v37[3];
  _OWORD v38[2];
  __int128 v39;
  _OWORD v40[2];

  if (*(_QWORD *)(a1 + 16))
  {
    sub_1BA1D16A0();
    v2 = sub_1BA202844();
  }
  else
  {
    v2 = MEMORY[0x1E0DEE9E0];
  }
  v28 = a1 + 64;
  v3 = -1 << *(_BYTE *)(a1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v27 = (unint64_t)(63 - v3) >> 6;
  v6 = v2 + 64;
  swift_bridgeObjectRetain();
  result = swift_retain();
  v8 = 0;
  while (1)
  {
    if (v5)
    {
      v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v27)
      goto LABEL_37;
    v14 = *(_QWORD *)(v28 + 8 * v13);
    v15 = v8 + 1;
    if (!v14)
    {
      v15 = v8 + 2;
      if (v8 + 2 >= v27)
        goto LABEL_37;
      v14 = *(_QWORD *)(v28 + 8 * v15);
      if (!v14)
      {
        v15 = v8 + 3;
        if (v8 + 3 >= v27)
          goto LABEL_37;
        v14 = *(_QWORD *)(v28 + 8 * v15);
        if (!v14)
        {
          v15 = v8 + 4;
          if (v8 + 4 >= v27)
            goto LABEL_37;
          v14 = *(_QWORD *)(v28 + 8 * v15);
          if (!v14)
            break;
        }
      }
    }
LABEL_27:
    v5 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v15 << 6);
    v8 = v15;
LABEL_28:
    v17 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v12);
    v19 = *v17;
    v18 = v17[1];
    sub_1BA1B9D7C(*(_QWORD *)(a1 + 56) + 32 * v12, (uint64_t)v40);
    *(_QWORD *)&v39 = v19;
    *((_QWORD *)&v39 + 1) = v18;
    v37[2] = v39;
    v38[0] = v40[0];
    v38[1] = v40[1];
    *(_QWORD *)&v37[0] = v19;
    *((_QWORD *)&v37[0] + 1) = v18;
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    sub_1BA1B43D0(v38, v32);
    v33 = v29;
    v34 = v30;
    v35 = v31;
    sub_1BA1B43D0(v32, v36);
    v29 = v33;
    v30 = v34;
    v31 = v35;
    sub_1BA1B43D0(v36, v37);
    sub_1BA1B43D0(v37, &v33);
    result = sub_1BA202724();
    v20 = -1 << *(_BYTE *)(v2 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v6 + 8 * (v21 >> 6))) != 0)
    {
      v9 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v6 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v25 = v22 == v24;
        if (v22 == v24)
          v22 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v6 + 8 * v22);
      }
      while (v26 == -1);
      v9 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(_QWORD *)(v6 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
    v10 = *(_QWORD *)(v2 + 48) + 40 * v9;
    *(_OWORD *)v10 = v29;
    *(_OWORD *)(v10 + 16) = v30;
    *(_QWORD *)(v10 + 32) = v31;
    result = (uint64_t)sub_1BA1B43D0(&v33, (_OWORD *)(*(_QWORD *)(v2 + 56) + 32 * v9));
    ++*(_QWORD *)(v2 + 16);
  }
  v16 = v8 + 5;
  if (v8 + 5 >= v27)
  {
LABEL_37:
    swift_release();
    sub_1BA1CAA90();
    return v2;
  }
  v14 = *(_QWORD *)(v28 + 8 * v16);
  if (v14)
  {
    v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v15 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v15 >= v27)
      goto LABEL_37;
    v14 = *(_QWORD *)(v28 + 8 * v15);
    ++v16;
    if (v14)
      goto LABEL_27;
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_1BA1CF6DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  _BOOL4 v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;
  uint64_t v25;
  char *v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  os_log_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  char *v43;
  void (*v44)(char *, uint64_t);
  uint64_t v45;
  uint64_t v46;
  void *v47;
  char *v48;
  uint64_t (*v49)(uint64_t);
  uint64_t v50;
  char *v51;
  uint64_t v52;
  os_log_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  int v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  uint64_t aBlock[8];

  v64 = a2;
  v65 = a3;
  v67 = a1;
  swift_getObjectType();
  v3 = sub_1BA20246C();
  v66 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1BA202484();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1BA20249C();
  v63 = *(_QWORD *)(v10 - 8);
  v11 = MEMORY[0x1E0C80A78](v10);
  v62 = (char *)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v52 - v14;
  if (qword_1ED5AEFB0 != -1)
    swift_once();
  sub_1BA1BC470(&qword_1ED5AF4A8, v13, (uint64_t (*)(uint64_t))type metadata accessor for EngagementUpsellEventProvider, (uint64_t)&unk_1BA2037E0);
  result = sub_1BA2021CC();
  if ((aBlock[0] & 1) == 0)
  {
    if (qword_1ED5AFB58 != -1)
      swift_once();
    v17 = sub_1BA20243C();
    __swift_project_value_buffer(v17, (uint64_t)qword_1ED5B08D0);
    v18 = v67;
    swift_bridgeObjectRetain_n();
    v19 = sub_1BA202424();
    v57 = sub_1BA20267C();
    v20 = os_log_type_enabled(v19, (os_log_type_t)v57);
    v59 = v7;
    v60 = v3;
    v58 = v9;
    v61 = v15;
    if (v20)
    {
      v53 = v19;
      v54 = v10;
      v55 = v6;
      v56 = v5;
      v21 = (uint8_t *)swift_slowAlloc();
      v22 = swift_slowAlloc();
      v23 = v22;
      aBlock[0] = v22;
      *(_DWORD *)v21 = 136315138;
      v24 = *(_QWORD *)(v18 + 16);
      v25 = MEMORY[0x1E0DEE9D8];
      if (v24)
      {
        v52 = v22;
        v69 = MEMORY[0x1E0DEE9D8];
        sub_1BA1C0B04(0, v24, 0);
        v25 = v69;
        v26 = (char *)(v18 + 32);
        do
        {
          v27 = *v26;
          v26 += 16;
          v68 = v27;
          v28 = EngagementUIPlacement.rawValue.getter();
          v30 = v29;
          v69 = v25;
          v32 = *(_QWORD *)(v25 + 16);
          v31 = *(_QWORD *)(v25 + 24);
          if (v32 >= v31 >> 1)
          {
            sub_1BA1C0B04(v31 > 1, v32 + 1, 1);
            v25 = v69;
          }
          *(_QWORD *)(v25 + 16) = v32 + 1;
          v33 = v25 + 16 * v32;
          *(_QWORD *)(v33 + 32) = v28;
          *(_QWORD *)(v33 + 40) = v30;
          --v24;
        }
        while (v24);
        v23 = v52;
      }
      v34 = MEMORY[0x1BCCD6EA4](v25, MEMORY[0x1E0DEA968]);
      v36 = v35;
      swift_bridgeObjectRelease();
      v69 = sub_1BA1BDA3C(v34, v36, aBlock);
      sub_1BA2026E8();
      v18 = v67;
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      v37 = v53;
      _os_log_impl(&dword_1BA1AE000, v53, (os_log_type_t)v57, "Fetching upsell response(s) for: %s", v21, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCD775C](v23, -1, -1);
      MEMORY[0x1BCCD775C](v21, -1, -1);

      v5 = v56;
      v6 = v55;
      v10 = v54;
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    if (*(_QWORD *)(sub_1BA1CFD94(v18) + 16))
    {
      sub_1BA1C1078(0, &qword_1ED5AF540);
      v38 = v10;
      sub_1BA1C1D10();
      v39 = sub_1BA2024E4();
      sub_1BA1C1078(0, &qword_1ED5AF550);
      v40 = sub_1BA2024E4();
      swift_bridgeObjectRelease();
      v41 = sub_1BA1CEFBC(v39);
      swift_bridgeObjectRelease();
      sub_1BA1C1078(0, (unint64_t *)&qword_1ED5AF230);
      v42 = (void *)sub_1BA2026AC();
      v43 = v62;
      sub_1BA202490();
      MEMORY[0x1BCCD6D6C](v43, 0.5);
      v44 = *(void (**)(char *, uint64_t))(v63 + 8);
      v44(v43, v38);
      v45 = swift_allocObject();
      v46 = v65;
      *(_QWORD *)(v45 + 16) = v64;
      *(_QWORD *)(v45 + 24) = v46;
      *(_QWORD *)(v45 + 32) = v41;
      *(_QWORD *)(v45 + 40) = v40;
      *(_BYTE *)(v45 + 48) = 3;
      aBlock[4] = (uint64_t)sub_1BA1D1550;
      aBlock[5] = v45;
      aBlock[0] = MEMORY[0x1E0C809B0];
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_1BA1FAB1C;
      aBlock[3] = (uint64_t)&block_descriptor_0;
      v47 = _Block_copy(aBlock);
      swift_retain();
      swift_release();
      v48 = v58;
      sub_1BA202478();
      aBlock[0] = MEMORY[0x1E0DEE9D8];
      v49 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
      sub_1BA1BC470((unint64_t *)&qword_1ED5AF4F8, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
      sub_1BA1B9050(0, &qword_1ED5AF520, v49, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA1CA9D8();
      v50 = v60;
      sub_1BA20270C();
      v51 = v61;
      MEMORY[0x1BCCD6F58](v61, v48, v5, v47);
      _Block_release(v47);

      (*(void (**)(char *, uint64_t))(v66 + 8))(v5, v50);
      (*(void (**)(char *, uint64_t))(v59 + 8))(v48, v6);
      return ((uint64_t (*)(char *, uint64_t))v44)(v51, v38);
    }
    else
    {
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_1BA1CFD94(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int64_t v4;
  uint64_t v5;
  char *v6;
  unint64_t v7;
  char v8;
  char v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;

  v2 = v1;
  v16 = MEMORY[0x1E0DEE9E0];
  v4 = *(_QWORD *)(a1 + 16);
  if (v4)
  {
    v15 = MEMORY[0x1E0DEE9D8];
    sub_1BA1C2908(0, v4, 0);
    v5 = v15;
    v6 = (char *)(a1 + 32);
    v7 = *(_QWORD *)(v15 + 16);
    do
    {
      v9 = *v6;
      v6 += 16;
      v8 = v9;
      v15 = v5;
      v10 = *(_QWORD *)(v5 + 24);
      v11 = v7 + 1;
      if (v7 >= v10 >> 1)
      {
        sub_1BA1C2908(v10 > 1, v7 + 1, 1);
        v5 = v15;
      }
      *(_QWORD *)(v5 + 16) = v11;
      *(_BYTE *)(v5 + v7++ + 32) = v8;
      --v4;
    }
    while (v4);
  }
  else
  {
    v5 = MEMORY[0x1E0DEE9D8];
    v11 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
    if (!v11)
      goto LABEL_11;
  }
  swift_bridgeObjectRetain();
  v12 = 0;
  do
  {
    v13 = v12 + 1;
    LOBYTE(v15) = *(_BYTE *)(v5 + v12 + 32);
    sub_1BA1D0034((unsigned __int8 *)&v15, a1, v2);
    v12 = v13;
  }
  while (v11 != v13);
  swift_bridgeObjectRelease();
LABEL_11:
  swift_bridgeObjectRelease();
  return v16;
}

char *sub_1BA1CFECC(char *result, _QWORD *a2, char *a3, uint64_t a4)
{
  char *v5;
  id v6;
  char v7;

  v5 = result;
  if ((*(_BYTE *)(a4 + 8) & 1) != 0)
  {
    v6 = 0;
    v7 = 30;
  }
  else
  {
    v6 = *(id *)a4;
    v7 = *a3;
    result = (char *)*(id *)a4;
  }
  *v5 = v7;
  *a2 = v6;
  return result;
}

char *sub_1BA1CFF2C(char *result, _QWORD *a2, char *a3, uint64_t a4)
{
  char *v5;
  id v6;
  char v7;

  v5 = result;
  if (*(_BYTE *)(a4 + 8) == 1)
  {
    v6 = *(id *)a4;
    v7 = *a3;
    result = (char *)*(id *)a4;
  }
  else
  {
    v6 = 0;
    v7 = 30;
  }
  *v5 = v7;
  *a2 = v6;
  return result;
}

uint64_t sub_1BA1CFF90(void (*a1)(uint64_t, _QWORD), uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v9;

  sub_1BA1B5770(0, &qword_1ED5AF590, (uint64_t)&type metadata for EngagementPlacementRequest, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1BA203760;
  *(_QWORD *)(v9 + 32) = a3;
  *(_QWORD *)(v9 + 40) = a4;
  *(_BYTE *)(v9 + 48) = a5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  a1(v9, 0);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BA1D0034(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  void *v8;
  char v9;
  uint64_t v10;
  char v11;

  v3 = *a1;
  if (*(_QWORD *)(a2 + 16))
  {
    swift_bridgeObjectRetain();
    __asm { BR              X9 }
  }
  v6 = *(_QWORD *)(a3 + OBJC_IVAR____TtC14NewsEngagement29EngagementUpsellEventProvider_requestFactory + 24);
  v5 = *(_QWORD *)(a3 + OBJC_IVAR____TtC14NewsEngagement29EngagementUpsellEventProvider_requestFactory + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(a3 + OBJC_IVAR____TtC14NewsEngagement29EngagementUpsellEventProvider_requestFactory), v6);
  v11 = v3;
  EngagementRequestFactoryType.createRequest(for:context:)(&v11, 0, v6, *(_QWORD *)(v5 + 8));
  swift_bridgeObjectRelease();
  sub_1BA1D1628(v8, v9);
  sub_1BA1CEEE8((uint64_t)v8, v9, v3);
  sub_1BA1C02F8(v8, v9);
  sub_1BA1C02E8(v10);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BA1D06D4(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  unint64_t *v3;
  unint64_t *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;

  v4 = v3;
  v8 = sub_1BA2024A8();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (uint64_t *)((char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = *a3;
  sub_1BA1C1078(0, (unint64_t *)&qword_1ED5AF230);
  *v11 = sub_1BA2026AC();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E0DEF740], v8);
  v13 = sub_1BA2024C0();
  (*(void (**)(uint64_t *, uint64_t))(v9 + 8))(v11, v8);
  if ((v13 & 1) != 0)
  {
    v4 = (unint64_t *)((char *)v4 + OBJC_IVAR____TtC14NewsEngagement29EngagementUpsellEventProvider_observersStore);
    swift_beginAccess();
    v14 = *v4;
    if (!*(_QWORD *)(*v4 + 16) || (v15 = sub_1BA1B9DB8(v12), (v16 & 1) == 0))
    {
      swift_endAccess();
LABEL_18:
      sub_1BA1B5770(0, (unint64_t *)&qword_1ED5AF5A0, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v23 = swift_allocObject();
      *(_OWORD *)(v23 + 16) = xmmword_1BA203770;
      type metadata accessor for WeakEngagementUIEventObserver();
      v24 = swift_allocObject();
      *(_QWORD *)(v24 + 24) = 0;
      swift_unknownObjectWeakInit();
      *(_QWORD *)(v24 + 24) = a2;
      swift_unknownObjectWeakAssign();
      *(_QWORD *)(v23 + 32) = v24;
      v34 = v23;
      sub_1BA2025F8();
      v25 = v34;
      swift_beginAccess();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v35 = *v4;
      *v4 = 0x8000000000000000;
      sub_1BA1D6528(v25, v12, isUniquelyReferenced_nonNull_native);
      v27 = v35;
      goto LABEL_19;
    }
    v13 = *(_QWORD *)(*(_QWORD *)(v14 + 56) + 8 * v15);
    v35 = v13;
    swift_endAccess();
    if (!(v13 >> 62))
    {
      v17 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n();
      if (v17)
      {
        v32 = a2;
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
LABEL_7:
        v18 = 4;
        while (1)
        {
          v19 = v18 - 4;
          if ((v13 & 0xC000000000000001) != 0)
          {
            a2 = MEMORY[0x1BCCD703C](v18 - 4, v13);
            v20 = v18 - 3;
            if (__OFADD__(v19, 1))
              goto LABEL_20;
          }
          else
          {
            a2 = *(_QWORD *)(v13 + 8 * v18);
            swift_retain();
            v20 = v18 - 3;
            if (__OFADD__(v19, 1))
            {
LABEL_20:
              __break(1u);
              goto LABEL_21;
            }
          }
          v21 = MEMORY[0x1BCCD77D4](a2 + 16);
          swift_release();
          if (v21)
          {
            swift_unknownObjectRelease();
            if (v21 == a1)
            {
              swift_unknownObjectRelease();
              swift_bridgeObjectRelease_n();
              return swift_bridgeObjectRelease();
            }
          }
          ++v18;
          if (v20 == v17)
            goto LABEL_24;
        }
      }
      goto LABEL_27;
    }
  }
  else
  {
LABEL_21:
    __break(1u);
  }
  swift_bridgeObjectRetain_n();
  if (!sub_1BA202820())
  {
LABEL_27:
    swift_bridgeObjectRelease_n();
    goto LABEL_18;
  }
  v32 = a2;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  v17 = sub_1BA202820();
  if (v17)
    goto LABEL_7;
LABEL_24:
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease_n();
  type metadata accessor for WeakEngagementUIEventObserver();
  v28 = swift_allocObject();
  *(_QWORD *)(v28 + 24) = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)(v28 + 24) = v32;
  v29 = swift_unknownObjectWeakAssign();
  MEMORY[0x1BCCD6E80](v29);
  if (*(_QWORD *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1BA202604();
  sub_1BA202610();
  sub_1BA2025F8();
  v30 = v35;
  swift_beginAccess();
  v31 = swift_isUniquelyReferenced_nonNull_native();
  v33 = *v4;
  *v4 = 0x8000000000000000;
  sub_1BA1D6528(v30, v12, v31);
  v27 = v33;
LABEL_19:
  *v4 = v27;
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

void sub_1BA1D0AFC(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35[3];

  v4 = v3;
  v7 = sub_1BA2024A8();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (uint64_t *)((char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = *a3;
  sub_1BA1C1078(0, (unint64_t *)&qword_1ED5AF230);
  *v10 = sub_1BA2026AC();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E0DEF740], v7);
  v12 = sub_1BA2024C0();
  (*(void (**)(uint64_t *, uint64_t))(v8 + 8))(v10, v7);
  if ((v12 & 1) != 0)
  {
    v4 = (uint64_t *)((char *)v4 + OBJC_IVAR____TtC14NewsEngagement29EngagementUpsellEventProvider_observersStore);
    swift_beginAccess();
    v13 = *v4;
    if (!*(_QWORD *)(*v4 + 16) || (v14 = sub_1BA1B9DB8(v11), (v15 & 1) == 0))
    {
      swift_endAccess();
LABEL_23:
      if (qword_1ED5AFB58 != -1)
        swift_once();
      v25 = sub_1BA20243C();
      __swift_project_value_buffer(v25, (uint64_t)qword_1ED5B08D0);
      v26 = sub_1BA202424();
      v27 = sub_1BA202670();
      if (os_log_type_enabled(v26, v27))
      {
        v28 = (uint8_t *)swift_slowAlloc();
        v29 = swift_slowAlloc();
        v35[0] = v29;
        *(_DWORD *)v28 = 136315138;
        LOBYTE(v34) = v11;
        v30 = EngagementUIPlacement.rawValue.getter();
        v34 = sub_1BA1BDA3C(v30, v31, v35);
        sub_1BA2026E8();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1BA1AE000, v26, v27, "Cannot remove observer for placement: [%s]", v28, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1BCCD775C](v29, -1, -1);
        MEMORY[0x1BCCD775C](v28, -1, -1);
      }

      return;
    }
    v12 = *(_QWORD *)(*(_QWORD *)(v13 + 56) + 8 * v14);
    swift_endAccess();
    if (!(v12 >> 62))
    {
      v16 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n();
      swift_unknownObjectRetain();
      if (v16)
        goto LABEL_6;
      goto LABEL_22;
    }
  }
  else
  {
LABEL_20:
    __break(1u);
  }
  swift_bridgeObjectRetain_n();
  swift_unknownObjectRetain();
  v16 = sub_1BA202820();
  if (!v16)
  {
LABEL_22:
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease_n();
    goto LABEL_23;
  }
LABEL_6:
  v17 = 4;
  while (1)
  {
    v18 = v17 - 4;
    if ((v12 & 0xC000000000000001) != 0)
    {
      v19 = MEMORY[0x1BCCD703C](v17 - 4, v12);
      v20 = v17 - 3;
      if (__OFADD__(v18, 1))
        goto LABEL_19;
    }
    else
    {
      v19 = *(_QWORD *)(v12 + 8 * v17);
      swift_retain();
      v20 = v17 - 3;
      if (__OFADD__(v18, 1))
      {
LABEL_19:
        __break(1u);
        goto LABEL_20;
      }
    }
    v21 = MEMORY[0x1BCCD77D4](v19 + 16);
    if (v21)
    {
      v22 = v21;
      swift_unknownObjectRelease();
      if (v22 == a1)
        break;
    }
    swift_release();
    ++v17;
    if (v20 == v16)
      goto LABEL_22;
  }
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_retain();
  v23 = sub_1BA1D13F4(v12, v19);
  swift_bridgeObjectRelease();
  swift_release();
  if (v23 >> 62)
  {
    swift_bridgeObjectRetain();
    v32 = sub_1BA202820();
    swift_bridgeObjectRelease();
    if (v32)
      goto LABEL_17;
  }
  else if (*(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_17:
    swift_beginAccess();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v34 = *v4;
    *v4 = 0x8000000000000000;
    sub_1BA1D6528(v23, v11, isUniquelyReferenced_nonNull_native);
    *v4 = v34;
    swift_bridgeObjectRelease();
    swift_endAccess();
    swift_release();
    return;
  }
  swift_bridgeObjectRelease();
  swift_beginAccess();
  sub_1BA200188(v11);
  swift_endAccess();
  swift_release();
  swift_bridgeObjectRelease();
}

void sub_1BA1D0F80(uint64_t a1)
{
  unsigned int v1;
  char v2;

  v1 = *(unsigned __int8 *)(a1 + 8);
  if (v1 >> 6)
    v2 = v1 & 0x3F;
  else
    v2 = *(_QWORD *)a1;
  __asm { BR              X10 }
}

uint64_t sub_1BA1D0FF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  char v4;
  uint64_t result;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t i;
  uint64_t v13;
  uint64_t v14;
  uint64_t ObjectType;
  char v16;
  uint64_t v17;
  char v18;

  v4 = sub_1BA202988();
  result = swift_bridgeObjectRelease();
  if ((v4 & 1) != 0)
  {
    v6 = (uint64_t *)(v1 + OBJC_IVAR____TtC14NewsEngagement29EngagementUpsellEventProvider_observersStore);
    swift_beginAccess();
    v7 = *v6;
    if (!*(_QWORD *)(v7 + 16))
      return swift_endAccess();
    v8 = sub_1BA1B9DB8(v0);
    if ((v9 & 1) == 0)
      return swift_endAccess();
    v10 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v8);
    swift_endAccess();
    if (v10 >> 62)
    {
      swift_bridgeObjectRetain_n();
      v11 = sub_1BA202820();
      if (v11)
        goto LABEL_6;
    }
    else
    {
      v11 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n();
      if (v11)
      {
LABEL_6:
        if (v11 < 1)
        {
          __break(1u);
          JUMPOUT(0x1BA1D11C0);
        }
        for (i = 0; i != v11; ++i)
        {
          if ((v10 & 0xC000000000000001) != 0)
          {
            v13 = MEMORY[0x1BCCD703C](i, v10);
          }
          else
          {
            v13 = *(_QWORD *)(v10 + 8 * i + 32);
            swift_retain();
          }
          if (MEMORY[0x1BCCD77D4](v13 + 16))
          {
            v14 = *(_QWORD *)(v13 + 24);
            ObjectType = swift_getObjectType();
            v17 = v2;
            v18 = v3;
            v16 = v0;
            (*(void (**)(uint64_t *, char *, uint64_t, uint64_t))(v14 + 8))(&v17, &v16, ObjectType, v14);
            swift_release();
            swift_unknownObjectRelease();
          }
          else
          {
            swift_release();
          }
        }
      }
    }
    return swift_bridgeObjectRelease_n();
  }
  return result;
}

id sub_1BA1D11FC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1BA1D1268(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BA1CF6DC(a1, a2, a3);
}

uint64_t sub_1BA1D1288(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  return sub_1BA1D06D4(a1, a2, a3);
}

void sub_1BA1D12A8(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  sub_1BA1D0AFC(a1, a2, a3);
}

void sub_1BA1D12C8(uint64_t a1)
{
  sub_1BA1D0F80(a1);
}

uint64_t sub_1BA1D12E8()
{
  swift_getObjectType();
  return sub_1BA2021CC();
}

uint64_t sub_1BA1D132C()
{
  swift_getObjectType();
  return sub_1BA2021D8();
}

uint64_t sub_1BA1D1388()
{
  swift_getObjectType();
  return sub_1BA2021B4();
}

uint64_t sub_1BA1D13F4(unint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t i;
  uint64_t v6;
  unint64_t v7;
  uint64_t v9;

  v9 = MEMORY[0x1E0DEE9D8];
  if (a1 >> 62)
  {
LABEL_16:
    v4 = sub_1BA202820();
    if (v4)
      goto LABEL_3;
  }
  else
  {
    v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v4)
    {
LABEL_3:
      for (i = 0; ; ++i)
      {
        if ((a1 & 0xC000000000000001) != 0)
        {
          v6 = MEMORY[0x1BCCD703C](i, a1);
          v7 = i + 1;
          if (__OFADD__(i, 1))
          {
LABEL_13:
            __break(1u);
            return v9;
          }
        }
        else
        {
          if (i >= *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            goto LABEL_16;
          }
          v6 = *(_QWORD *)(a1 + 8 * i + 32);
          swift_retain();
          v7 = i + 1;
          if (__OFADD__(i, 1))
            goto LABEL_13;
        }
        if (v6 == a2)
        {
          swift_release();
        }
        else
        {
          sub_1BA2027C0();
          sub_1BA2027E4();
          sub_1BA2027F0();
          sub_1BA2027CC();
        }
        if (v7 == v4)
          return v9;
      }
    }
  }
  return MEMORY[0x1E0DEE9D8];
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

void sub_1BA1D155C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED5AF578)
  {
    sub_1BA1D15C4();
    sub_1BA1C1D10();
    v0 = sub_1BA202850();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED5AF578);
  }
}

void sub_1BA1D15C4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED5AF548)
  {
    sub_1BA1C1078(255, &qword_1ED5AF540);
    v0 = sub_1BA2026DC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED5AF548);
  }
}

id sub_1BA1D1628(id result, char a2)
{
  if (a2 != -1)
    return result;
  return result;
}

uint64_t objectdestroyTm()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BA1D1674()
{
  uint64_t v0;

  return sub_1BA1CFF90(*(void (**)(uint64_t, _QWORD))(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_BYTE *)(v0 + 48));
}

uint64_t sub_1BA1D1694(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) != 0)
    return swift_bridgeObjectRelease();
  return result;
}

void sub_1BA1D16A0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED5AF740)
  {
    v0 = sub_1BA202850();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED5AF740);
  }
}

uint64_t EngagementUpsellBannerProperties.init(title:body:footer:iconUrl:style:appearanceInfo:actionUrl:footerActionUrl:showCloseButton:offer:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char *a8@<X7>, _QWORD *a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, char a13, char *a14)
{
  char v18;
  char v19;
  int *v20;
  _QWORD *v21;
  uint64_t result;

  v18 = *a8;
  v19 = *a14;
  *a9 = a1;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  v20 = (int *)type metadata accessor for EngagementUpsellBannerProperties();
  sub_1BA1D17F0(a7, (uint64_t)a9 + v20[6]);
  v21 = (_QWORD *)((char *)a9 + v20[9]);
  *v21 = a5;
  v21[1] = a6;
  *(_QWORD *)((char *)a9 + v20[7]) = a10;
  sub_1BA1D17F0(a11, (uint64_t)a9 + v20[8]);
  result = sub_1BA1D17F0(a12, (uint64_t)a9 + v20[10]);
  *((_BYTE *)a9 + v20[11]) = a13;
  *((_BYTE *)a9 + v20[12]) = v18;
  *((_BYTE *)a9 + v20[13]) = v19;
  return result;
}

uint64_t sub_1BA1D17F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA1B175C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t EngagementUpsellBannerProperties.title.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EngagementUpsellBannerProperties.body.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EngagementUpsellBannerProperties.iconUrl.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for EngagementUpsellBannerProperties() + 24);
  return sub_1BA1D18BC(v3, a1);
}

uint64_t sub_1BA1D18BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA1B175C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t EngagementUpsellBannerProperties.appearanceInfo.getter()
{
  type metadata accessor for EngagementUpsellBannerProperties();
  return swift_bridgeObjectRetain();
}

uint64_t EngagementUpsellBannerProperties.actionUrl.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for EngagementUpsellBannerProperties() + 32);
  return sub_1BA1D18BC(v3, a1);
}

uint64_t EngagementUpsellBannerProperties.footer.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for EngagementUpsellBannerProperties() + 36));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EngagementUpsellBannerProperties.footerActionUrl.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for EngagementUpsellBannerProperties() + 40);
  return sub_1BA1D18BC(v3, a1);
}

uint64_t EngagementUpsellBannerProperties.showCloseButton.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for EngagementUpsellBannerProperties() + 44));
}

uint64_t EngagementUpsellBannerProperties.style.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for EngagementUpsellBannerProperties();
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 48));
  return result;
}

uint64_t EngagementUpsellBannerProperties.offer.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for EngagementUpsellBannerProperties();
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 52));
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for EngagementUpsellBannerProperties(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    v9 = a3[6];
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_1BA202118();
    v13 = *(_QWORD *)(v12 - 8);
    v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v14(v11, 1, v12))
    {
      sub_1BA1B175C();
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
    v17 = a3[8];
    *(_QWORD *)((char *)v4 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
    v18 = (char *)v4 + v17;
    v19 = (char *)a2 + v17;
    swift_bridgeObjectRetain();
    if (v14(v19, 1, v12))
    {
      sub_1BA1B175C();
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v18, v19, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v18, 0, 1, v12);
    }
    v21 = a3[9];
    v22 = a3[10];
    v23 = (_QWORD *)((char *)v4 + v21);
    v24 = (_QWORD *)((char *)a2 + v21);
    v25 = v24[1];
    *v23 = *v24;
    v23[1] = v25;
    v26 = (char *)v4 + v22;
    v27 = (char *)a2 + v22;
    swift_bridgeObjectRetain();
    if (v14(v27, 1, v12))
    {
      sub_1BA1B175C();
      memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v26, v27, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v26, 0, 1, v12);
    }
    v29 = a3[12];
    *((_BYTE *)v4 + a3[11]) = *((_BYTE *)a2 + a3[11]);
    *((_BYTE *)v4 + v29) = *((_BYTE *)a2 + v29);
    *((_BYTE *)v4 + a3[13]) = *((_BYTE *)a2 + a3[13]);
  }
  return v4;
}

uint64_t destroy for EngagementUpsellBannerProperties(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + a2[6];
  v5 = sub_1BA202118();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (!v7(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  swift_bridgeObjectRelease();
  v8 = a1 + a2[8];
  if (!v7(v8, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v8, v5);
  swift_bridgeObjectRelease();
  v9 = a1 + a2[10];
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v7)(v9, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v9, v5);
  return result;
}

_QWORD *initializeWithCopy for EngagementUpsellBannerProperties(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  v8 = a3[6];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_1BA202118();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v13(v10, 1, v11))
  {
    sub_1BA1B175C();
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  v15 = a3[8];
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  swift_bridgeObjectRetain();
  if (v13(v17, 1, v11))
  {
    sub_1BA1B175C();
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v16, v17, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v16, 0, 1, v11);
  }
  v19 = a3[9];
  v20 = a3[10];
  v21 = (_QWORD *)((char *)a1 + v19);
  v22 = (_QWORD *)((char *)a2 + v19);
  v23 = v22[1];
  *v21 = *v22;
  v21[1] = v23;
  v24 = (char *)a1 + v20;
  v25 = (char *)a2 + v20;
  swift_bridgeObjectRetain();
  if (v13(v25, 1, v11))
  {
    sub_1BA1B175C();
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v24, v25, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v24, 0, 1, v11);
  }
  v27 = a3[12];
  *((_BYTE *)a1 + a3[11]) = *((_BYTE *)a2 + a3[11]);
  *((_BYTE *)a1 + v27) = *((_BYTE *)a2 + v27);
  *((_BYTE *)a1 + a3[13]) = *((_BYTE *)a2 + a3[13]);
  return a1;
}

char *assignWithCopy for EngagementUpsellBannerProperties(char *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  _QWORD *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  int v27;
  int v28;
  uint64_t v29;

  *(_QWORD *)a1 = *a2;
  *((_QWORD *)a1 + 1) = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)a1 + 2) = a2[2];
  *((_QWORD *)a1 + 3) = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[6];
  v7 = &a1[v6];
  v8 = (char *)a2 + v6;
  v9 = sub_1BA202118();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    sub_1BA1B175C();
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  *(_QWORD *)&a1[a3[7]] = *(_QWORD *)((char *)a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15 = a3[8];
  v16 = &a1[v15];
  v17 = (char *)a2 + v15;
  v18 = v11(&a1[v15], 1, v9);
  v19 = v11(v17, 1, v9);
  if (v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v16, v17, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v16, 0, 1, v9);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v19)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v16, v9);
LABEL_12:
    sub_1BA1B175C();
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v16, v17, v9);
LABEL_13:
  v21 = a3[9];
  v22 = &a1[v21];
  v23 = (_QWORD *)((char *)a2 + v21);
  *(_QWORD *)v22 = *v23;
  *((_QWORD *)v22 + 1) = v23[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v24 = a3[10];
  v25 = &a1[v24];
  v26 = (char *)a2 + v24;
  v27 = v11(&a1[v24], 1, v9);
  v28 = v11(v26, 1, v9);
  if (!v27)
  {
    if (!v28)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v25, v26, v9);
      goto LABEL_19;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v25, v9);
    goto LABEL_18;
  }
  if (v28)
  {
LABEL_18:
    sub_1BA1B175C();
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v25, v26, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v25, 0, 1, v9);
LABEL_19:
  a1[a3[11]] = *((_BYTE *)a2 + a3[11]);
  a1[a3[12]] = *((_BYTE *)a2 + a3[12]);
  a1[a3[13]] = *((_BYTE *)a2 + a3[13]);
  return a1;
}

_OWORD *initializeWithTake for EngagementUpsellBannerProperties(_OWORD *a1, char *a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(char *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;

  v6 = *((_OWORD *)a2 + 1);
  *a1 = *(_OWORD *)a2;
  a1[1] = v6;
  v7 = a3[6];
  v8 = (char *)a1 + v7;
  v9 = &a2[v7];
  v10 = sub_1BA202118();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  if (v12(v9, 1, v10))
  {
    sub_1BA1B175C();
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v14 = a3[8];
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)&a2[a3[7]];
  v15 = (char *)a1 + v14;
  v16 = &a2[v14];
  if (v12(&a2[v14], 1, v10))
  {
    sub_1BA1B175C();
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v15, v16, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v15, 0, 1, v10);
  }
  v18 = a3[10];
  *(_OWORD *)((char *)a1 + a3[9]) = *(_OWORD *)&a2[a3[9]];
  v19 = (char *)a1 + v18;
  v20 = &a2[v18];
  if (v12(&a2[v18], 1, v10))
  {
    sub_1BA1B175C();
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v19, v20, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v19, 0, 1, v10);
  }
  v22 = a3[12];
  *((_BYTE *)a1 + a3[11]) = a2[a3[11]];
  *((_BYTE *)a1 + v22) = a2[v22];
  *((_BYTE *)a1 + a3[13]) = a2[a3[13]];
  return a1;
}

char *assignWithTake for EngagementUpsellBannerProperties(char *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(char *, uint64_t, uint64_t);
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  int v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  int v31;
  int v32;
  uint64_t v33;
  uint64_t v34;

  v6 = a2[1];
  *(_QWORD *)a1 = *a2;
  *((_QWORD *)a1 + 1) = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  *((_QWORD *)a1 + 2) = a2[2];
  *((_QWORD *)a1 + 3) = v7;
  swift_bridgeObjectRelease();
  v8 = a3[6];
  v9 = &a1[v8];
  v10 = (char *)a2 + v8;
  v11 = sub_1BA202118();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v15)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v11);
LABEL_6:
    sub_1BA1B175C();
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 40))(v9, v10, v11);
LABEL_7:
  *(_QWORD *)&a1[a3[7]] = *(_QWORD *)((char *)a2 + a3[7]);
  swift_bridgeObjectRelease();
  v17 = a3[8];
  v18 = &a1[v17];
  v19 = (char *)a2 + v17;
  v20 = v13(&a1[v17], 1, v11);
  v21 = v13(v19, 1, v11);
  if (v20)
  {
    if (!v21)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v18, v19, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v18, 0, 1, v11);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v21)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v18, v11);
LABEL_12:
    sub_1BA1B175C();
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 40))(v18, v19, v11);
LABEL_13:
  v23 = a3[9];
  v24 = &a1[v23];
  v25 = (_QWORD *)((char *)a2 + v23);
  v27 = *v25;
  v26 = v25[1];
  *(_QWORD *)v24 = v27;
  *((_QWORD *)v24 + 1) = v26;
  swift_bridgeObjectRelease();
  v28 = a3[10];
  v29 = &a1[v28];
  v30 = (char *)a2 + v28;
  v31 = v13(&a1[v28], 1, v11);
  v32 = v13(v30, 1, v11);
  if (!v31)
  {
    if (!v32)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 40))(v29, v30, v11);
      goto LABEL_19;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v29, v11);
    goto LABEL_18;
  }
  if (v32)
  {
LABEL_18:
    sub_1BA1B175C();
    memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v29, v30, v11);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v29, 0, 1, v11);
LABEL_19:
  v34 = a3[12];
  a1[a3[11]] = *((_BYTE *)a2 + a3[11]);
  a1[v34] = *((_BYTE *)a2 + v34);
  a1[a3[13]] = *((_BYTE *)a2 + a3[13]);
  return a1;
}

uint64_t sub_1BA1D2730(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  int v5;
  uint64_t v9;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    sub_1BA1B175C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v9);
  }
}

uint64_t sub_1BA1D27B8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)(result + 8) = a2;
  }
  else
  {
    sub_1BA1B175C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t dispatch thunk of EngagementUIEventObserverType.didUpdateUIEvent(action:for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of EngagementUpsellRequestFactoryType.triggerVisibility(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

void sub_1BA1D283C(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  id v20;
  id v21;
  uint64_t v22;
  unsigned int (*v23)(char *, uint64_t, uint64_t);
  void *v24;
  __objc2_prot_list **p_base_prots;
  char *v26;
  id v27;
  void *v28;
  char *v29;
  void *v30;
  id v31;
  uint64_t v32;
  void *v33;
  id v34;
  int v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  id v39;
  uint64_t v40;
  char isUniquelyReferenced_nonNull_native;
  void *v42;
  _QWORD *v43;
  char *v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  _OWORD v49[2];
  __int128 v50;
  uint64_t v51;
  _BYTE v52[40];

  v46 = a2;
  v3 = sub_1BA202118();
  v47 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v44 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA1BE274(0, (unint64_t *)&qword_1ED5AFBC8, v5);
  v7 = MEMORY[0x1E0C80A78](v6);
  v45 = (uint64_t)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v44 - v10;
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v44 - v12;
  v14 = *a1;
  v15 = a1[1];
  v16 = a1[2];
  v17 = a1[3];
  v18 = (int *)type metadata accessor for EngagementUpsellBannerProperties();
  v19 = *(uint64_t *)((char *)a1 + v18[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v19)
    v19 = sub_1BA1CF31C(v19);
  v20 = objc_allocWithZone(MEMORY[0x1E0CFDA68]);
  v21 = sub_1BA1D2EE8(v14, v15, v16, v17, v19);
  sub_1BA1BE4F8((uint64_t)a1 + v18[6], (uint64_t)v13, (unint64_t *)&qword_1ED5AFBC8, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  v22 = v47;
  v23 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48);
  if (v23(v13, 1, v3) == 1)
  {
    v24 = 0;
  }
  else
  {
    v24 = (void *)sub_1BA202100();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v13, v3);
  }
  objc_msgSend(v21, sel_setIconURL_, v24);

  objc_msgSend(v21, sel_setStyle_, *((unsigned __int8 *)a1 + v18[12]));
  sub_1BA1BE4F8((uint64_t)a1 + v18[8], (uint64_t)v11, (unint64_t *)&qword_1ED5AFBC8, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  p_base_prots = (__objc2_prot_list **)(&EngagementDebugRequestFactory + 40);
  if (v23(v11, 1, v3) == 1)
  {
    sub_1BA1BE4BC((uint64_t)v11, (unint64_t *)&qword_1ED5AFBC8, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  }
  else
  {
    v26 = v44;
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v44, v11, v3);
    v27 = objc_msgSend((id)objc_opt_self(), sel_actionWithTitle_style_, 0, 0);
    v28 = (void *)sub_1BA202100();
    objc_msgSend(v27, (SEL)0x1F3ADD684, v28);

    objc_msgSend(v21, sel_setDefaultAction_, v27);
    v29 = v26;
    p_base_prots = &EngagementDebugRequestFactory.base_prots;
    (*(void (**)(char *, uint64_t))(v22 + 8))(v29, v3);
  }
  if (*(uint64_t *)((char *)a1 + v18[9] + 8))
  {
    swift_bridgeObjectRetain();
    v30 = (void *)sub_1BA2024FC();
    swift_bridgeObjectRelease();
    v31 = objc_msgSend((id)objc_opt_self(), (SEL)p_base_prots[143], v30, 0);

    v32 = v45;
    sub_1BA1BE4F8((uint64_t)a1 + v18[10], v45, (unint64_t *)&qword_1ED5AFBC8, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    v33 = 0;
    if (v23((char *)v32, 1, v3) != 1)
    {
      v33 = (void *)sub_1BA202100();
      (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v32, v3);
    }
    objc_msgSend(v31, sel_setDeepLink_, v33);

    objc_msgSend(v21, sel_addButtonAction_, v31);
  }
  if (*((_BYTE *)a1 + v18[11]) == 1)
  {
    v34 = objc_msgSend((id)objc_opt_self(), (SEL)p_base_prots[143], 0, 2);
    objc_msgSend(v21, sel_addButtonAction_, v34);

  }
  v35 = *((unsigned __int8 *)a1 + v18[13]);
  if (v35 != 3)
  {
    *(_QWORD *)&v50 = 0x656D656761676E65;
    *((_QWORD *)&v50 + 1) = 0xEF726566664F746ELL;
    v36 = MEMORY[0x1E0DEA968];
    sub_1BA20273C();
    if (v35)
    {
      if (v35 == 1)
      {
        v37 = 0xE800000000000000;
        v38 = 0x656E4F656C707061;
      }
      else
      {
        v37 = 0x80000001BA206480;
        v38 = 0xD000000000000012;
      }
    }
    else
    {
      v37 = 0xE800000000000000;
      v38 = 0x73756C507377656ELL;
    }
    v51 = v36;
    *(_QWORD *)&v50 = v38;
    *((_QWORD *)&v50 + 1) = v37;
    v39 = objc_msgSend(v21, sel_userInfo);
    v40 = sub_1BA2024D8();

    sub_1BA1B43D0(&v50, v49);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v48 = v40;
    sub_1BA1D62CC(v49, (uint64_t)v52, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease();
    sub_1BA1CEC88((uint64_t)v52);
    v42 = (void *)sub_1BA2024CC();
    swift_bridgeObjectRelease();
    objc_msgSend(v21, sel_setUserInfo_, v42);

  }
  v43 = v46;
  *v46 = v21;
  *((_BYTE *)v43 + 8) = 0;
}

uint64_t sub_1BA1D2E04()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return swift_deallocClassInstance();
}

uint64_t sub_1BA1D2E28(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;

  v5 = *(_QWORD *)(*(_QWORD *)v2 + 40);
  v6 = *(_QWORD *)(*(_QWORD *)v2 + 48);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)v2 + 16), v5);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 24))(a1, a2, v5, v6);
}

uint64_t sub_1BA1D2E90(uint64_t result)
{
  if ((unint64_t)(result - 1) >= 0xA)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t sub_1BA1D2EA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for EngagementUpsellBannerProperties();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

id sub_1BA1D2EE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v5;
  void *v8;
  void *v9;
  void *v10;
  id v11;

  if (a2)
  {
    v8 = (void *)sub_1BA2024FC();
    swift_bridgeObjectRelease();
    if (a4)
      goto LABEL_3;
LABEL_6:
    v9 = 0;
    if (a5)
      goto LABEL_4;
LABEL_7:
    v10 = 0;
    goto LABEL_8;
  }
  v8 = 0;
  if (!a4)
    goto LABEL_6;
LABEL_3:
  v9 = (void *)sub_1BA2024FC();
  swift_bridgeObjectRelease();
  if (!a5)
    goto LABEL_7;
LABEL_4:
  v10 = (void *)sub_1BA2024CC();
  swift_bridgeObjectRelease();
LABEL_8:
  v11 = objc_msgSend(v5, sel_initWithTitle_message_appearanceInfo_, v8, v9, v10);

  return v11;
}

uint64_t dispatch thunk of EngagementInlineViewObserver.engagementInlineView(manager:didUpdateModel:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of EngagementInlineViewObserver.engagementInlineView(manager:didSelectAction:for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

uint64_t dispatch thunk of EngagementInlineViewObserver.engagementInlineView(manager:didFail:for:source:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 24))();
}

uint64_t EngagementRequestFactoryType.createRequest(for:context:)(char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v5;

  v5 = *a1;
  return (*(uint64_t (**)(char *, uint64_t, _QWORD, uint64_t))(a4 + 8))(&v5, a2, 0, a3);
}

uint64_t EngagementRequestResult.init(request:error:source:trigger:)@<X0>(uint64_t result@<X0>, uint64_t *a2@<X1>, char *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  char v6;
  uint64_t v7;
  char v8;

  v6 = *(_BYTE *)(result + 8);
  v7 = *a2;
  v8 = *a3;
  *(_QWORD *)a6 = *(_QWORD *)result;
  *(_BYTE *)(a6 + 8) = v6;
  *(_QWORD *)(a6 + 16) = v7;
  *(_BYTE *)(a6 + 24) = v8;
  *(_QWORD *)(a6 + 32) = a4;
  *(_QWORD *)(a6 + 40) = a5;
  return result;
}

id EngagementRequestResult.request.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  void *v2;
  char v3;

  v2 = *(void **)v1;
  *(_QWORD *)a1 = *(_QWORD *)v1;
  v3 = *(_BYTE *)(v1 + 8);
  *(_BYTE *)(a1 + 8) = v3;
  return sub_1BA1D1628(v2, v3);
}

uint64_t EngagementRequestResult.error.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 16);
  *a1 = v2;
  return sub_1BA1BE364(v2);
}

void EngagementRequestResult.source.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 24);
}

uint64_t EngagementRequestResult.trigger.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EngagementRequestFactoryType.createRequest(for:forceEnable:)(char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v5;

  v5 = *a1;
  return (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(a4 + 8))(&v5, 0, a2, a3);
}

uint64_t initializeBufferWithCopyOfBuffer for EngagementRequest(uint64_t a1, uint64_t a2)
{
  void *v3;
  char v4;
  id v5;

  v3 = *(void **)a2;
  v4 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v4;
  v5 = v3;
  return a1;
}

void destroy for EngagementRequest(id *a1)
{

}

uint64_t assignWithCopy for EngagementRequest(uint64_t a1, uint64_t a2)
{
  void *v3;
  char v4;
  void *v5;
  id v6;

  v3 = *(void **)a2;
  v4 = *(_BYTE *)(a2 + 8);
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v4;
  v6 = v3;

  return a1;
}

uint64_t assignWithTake for EngagementRequest(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;

  v3 = *(_BYTE *)(a2 + 8);
  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v3;

  return a1;
}

uint64_t getEnumTagSinglePayload for EngagementRequest(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for EngagementRequest(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

uint64_t sub_1BA1D3214(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8);
}

uint64_t sub_1BA1D321C(uint64_t result, char a2)
{
  *(_BYTE *)(result + 8) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for EngagementRequest()
{
  return &type metadata for EngagementRequest;
}

uint64_t destroy for EngagementRequestResult(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) != 255)

  if ((unint64_t)(*(_QWORD *)(a1 + 16) - 1) >= 0xB)
    swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for EngagementRequestResult(uint64_t a1, uint64_t a2)
{
  int v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(unsigned __int8 *)(a2 + 8);
  if (v4 == 255)
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  }
  else
  {
    v5 = *(void **)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_BYTE *)(a1 + 8) = v4 & 1;
    v6 = v5;
  }
  v7 = *(_QWORD *)(a2 + 16);
  if ((unint64_t)(v7 - 1) >= 0xA)
  {
    if (v7 == 11)
    {
      *(_QWORD *)(a1 + 16) = 11;
    }
    else
    {
      *(_QWORD *)(a1 + 16) = v7;
      swift_bridgeObjectRetain();
    }
  }
  else
  {
    *(_QWORD *)(a1 + 16) = v7;
  }
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v8 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v8;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for EngagementRequestResult(uint64_t a1, uint64_t a2)
{
  int v4;
  char v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;

  v4 = *(unsigned __int8 *)(a2 + 8);
  if (*(unsigned __int8 *)(a1 + 8) == 255)
  {
    if (v4 == 255)
    {
      v6 = *(void **)a2;
      *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
      *(_QWORD *)a1 = v6;
    }
    else
    {
      v10 = *(void **)a2;
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_BYTE *)(a1 + 8) = v4 & 1;
      v11 = v10;
    }
  }
  else if (v4 == 255)
  {
    sub_1BA1D3498((id *)a1);
    v5 = *(_BYTE *)(a2 + 8);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_BYTE *)(a1 + 8) = v5;
  }
  else
  {
    v7 = *(void **)a2;
    v8 = *(id *)a1;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_BYTE *)(a1 + 8) = v4 & 1;
    v9 = v7;

  }
  v12 = (uint64_t *)(a1 + 16);
  v13 = *(_QWORD *)(a1 + 16);
  v14 = *(_QWORD *)(a2 + 16);
  if (v13 != 11)
  {
    if (v14 == 11)
    {
      sub_1BA1D35A4((unint64_t *)(a1 + 16));
    }
    else
    {
      v16 = v14 - 1;
      if ((unint64_t)(v13 - 1) < 0xA)
      {
        if (v16 < 0xA)
          goto LABEL_10;
        goto LABEL_22;
      }
      if (v16 >= 0xA)
      {
        *v12 = v14;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        goto LABEL_24;
      }
      sub_1BA1D34C0(a1 + 16);
    }
    v15 = *(_QWORD *)(a2 + 16);
LABEL_14:
    *v12 = v15;
    goto LABEL_24;
  }
  if ((unint64_t)(v14 - 1) >= 0xA)
  {
    if (v14 == 11)
    {
      v15 = 11;
      goto LABEL_14;
    }
LABEL_22:
    *v12 = v14;
    swift_bridgeObjectRetain();
    goto LABEL_24;
  }
LABEL_10:
  *v12 = v14;
LABEL_24:
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

id *sub_1BA1D3498(id *a1)
{

  return a1;
}

uint64_t sub_1BA1D34C0(uint64_t a1)
{
  uint64_t v2;

  sub_1BA1D34FC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1BA1D34FC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF279290)
  {
    sub_1BA1D3550();
    v0 = sub_1BA2026DC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF279290);
  }
}

void sub_1BA1D3550()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF279298)
  {
    v0 = sub_1BA20261C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF279298);
  }
}

unint64_t *sub_1BA1D35A4(unint64_t *a1)
{
  destroy for EngagementInlineViewError(a1);
  return a1;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for EngagementRequestResult(uint64_t a1, uint64_t a2)
{
  int v4;
  id v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;

  if (*(unsigned __int8 *)(a1 + 8) == 255)
    goto LABEL_4;
  v4 = *(unsigned __int8 *)(a2 + 8);
  if (v4 == 255)
  {
    sub_1BA1D3498((id *)a1);
LABEL_4:
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
    goto LABEL_6;
  }
  v5 = *(id *)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v4 & 1;

LABEL_6:
  v7 = (_QWORD *)(a1 + 16);
  v6 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(a2 + 16);
  if (v6 == 11)
  {
    if ((unint64_t)(v8 - 1) < 0xA || v8 != 11)
    {
      *v7 = v8;
      goto LABEL_19;
    }
LABEL_11:
    *v7 = 11;
    goto LABEL_19;
  }
  if (v8 == 11)
  {
    sub_1BA1D35A4((unint64_t *)(a1 + 16));
    goto LABEL_11;
  }
  if ((unint64_t)(v6 - 1) >= 0xA)
  {
    if ((unint64_t)(v8 - 1) >= 0xA)
    {
      *v7 = v8;
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1BA1D34C0(a1 + 16);
      *v7 = v8;
    }
  }
  else
  {
    *v7 = v8;
  }
LABEL_19:
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v9 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v9;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for EngagementRequestResult(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 48))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 40);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for EngagementRequestResult(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 48) = 0;
    if (a2)
      *(_QWORD *)(result + 40) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for EngagementRequestResult()
{
  return &type metadata for EngagementRequestResult;
}

uint64_t dispatch thunk of EngagementRequestFactoryType.createRequest(for:context:forceEnable:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t EngagementOffer.rawValue.getter()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0x656E4F656C707061;
  if (*v0 != 1)
    v1 = 0xD000000000000012;
  if (*v0)
    return v1;
  else
    return 0x73756C507377656ELL;
}

NewsEngagement::EngagementOffer_optional __swiftcall EngagementOffer.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsEngagement::EngagementOffer_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1BA202868();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t sub_1BA1D3898(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1BA1FB3E4(*a1, *a2);
}

unint64_t sub_1BA1D38A8()
{
  unint64_t result;

  result = qword_1EF2792A0;
  if (!qword_1EF2792A0)
  {
    result = MEMORY[0x1BCCD76CC](&protocol conformance descriptor for EngagementOffer, &type metadata for EngagementOffer);
    atomic_store(result, (unint64_t *)&qword_1EF2792A0);
  }
  return result;
}

uint64_t sub_1BA1D38EC()
{
  sub_1BA202A00();
  sub_1BA202538();
  swift_bridgeObjectRelease();
  return sub_1BA202A18();
}

uint64_t sub_1BA1D3990()
{
  sub_1BA202538();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BA1D3A10()
{
  sub_1BA202A00();
  sub_1BA202538();
  swift_bridgeObjectRelease();
  return sub_1BA202A18();
}

NewsEngagement::EngagementOffer_optional sub_1BA1D3AB0(Swift::String *a1)
{
  return EngagementOffer.init(rawValue:)(*a1);
}

void sub_1BA1D3ABC(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE800000000000000;
  v4 = 0xE800000000000000;
  v5 = 0x656E4F656C707061;
  if (v2 != 1)
  {
    v5 = 0xD000000000000012;
    v4 = 0x80000001BA206480;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x73756C507377656ELL;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t getEnumTagSinglePayload for EngagementOffer(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for EngagementOffer(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BA1D3BFC + 4 * byte_1BA203A45[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BA1D3C30 + 4 * asc_1BA203A40[v4]))();
}

uint64_t sub_1BA1D3C30(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA1D3C38(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BA1D3C40);
  return result;
}

uint64_t sub_1BA1D3C4C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BA1D3C54);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BA1D3C58(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA1D3C60(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for EngagementOffer()
{
  return &type metadata for EngagementOffer;
}

uint64_t static EngagementViewControllerOption.placement(for:)@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  _BYTE *v3;

  v2 = *(_QWORD *)(result + 16);
  if (v2)
  {
    v3 = (_BYTE *)(result + 48);
    while (*v3)
    {
      v3 += 24;
      if (!--v2)
        goto LABEL_5;
    }
    *a2 = *(v3 - 16);
  }
  else
  {
LABEL_5:
    *a2 = 30;
  }
  return result;
}

uint64_t static EngagementViewControllerOption.identifier(for:)(uint64_t a1)
{
  uint64_t v1;
  _BYTE *i;
  uint64_t v3;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return 0;
  for (i = (_BYTE *)(a1 + 48); *i != 1; i += 24)
  {
    if (!--v1)
      return 0;
  }
  v3 = *((_QWORD *)i - 2);
  swift_bridgeObjectRetain();
  return v3;
}

uint64_t static EngagementViewControllerOption.source(for:)@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  _BYTE *v3;

  v2 = *(_QWORD *)(result + 16);
  if (v2)
  {
    v3 = (_BYTE *)(result + 48);
    while (*v3 != 2)
    {
      v3 += 24;
      if (!--v2)
        goto LABEL_5;
    }
    *a2 = *(v3 - 16);
  }
  else
  {
LABEL_5:
    *a2 = 4;
  }
  return result;
}

uint64_t static EngagementViewControllerOption.messageID(for:)(uint64_t a1)
{
  uint64_t v1;
  _BYTE *i;
  uint64_t v3;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return 0;
  for (i = (_BYTE *)(a1 + 48); *i != 3; i += 24)
  {
    if (!--v1)
      return 0;
  }
  v3 = *((_QWORD *)i - 2);
  swift_bridgeObjectRetain();
  return v3;
}

uint64_t static EngagementViewControllerOption.offer(for:)@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  _BYTE *v3;

  v2 = *(_QWORD *)(result + 16);
  if (v2)
  {
    v3 = (_BYTE *)(result + 48);
    while (*v3 != 4)
    {
      v3 += 24;
      if (!--v2)
        goto LABEL_5;
    }
    *a2 = *(v3 - 16);
  }
  else
  {
LABEL_5:
    *a2 = 3;
  }
  return result;
}

id EngagementViewControllerFactory.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id EngagementViewControllerFactory.createViewController(request:configuration:options:delegate:)(id a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  unint64_t v11;
  uint64_t v12;
  unsigned __int8 *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;
  void *v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  id v22;
  id v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[2];
  unsigned __int8 v29;
  uint64_t v30;

  v6 = v5;
  v9 = a2;
  v11 = *(_QWORD *)(a2 + 16);
  if (!v11)
    v11 = (unint64_t)objc_msgSend(a1, sel_style);
  if (a3)
  {
    v30 = MEMORY[0x1E0DEE9E0];
    v12 = *(_QWORD *)(a3 + 16);
    if (v12)
    {
      v26 = v9;
      v27 = a5;
      swift_bridgeObjectRetain();
      v13 = (unsigned __int8 *)(a3 + 48);
      do
      {
        v15 = *((_QWORD *)v13 - 2);
        v14 = *((_QWORD *)v13 - 1);
        v16 = *v13;
        v28[0] = v15;
        v28[1] = v14;
        v29 = v16;
        sub_1BA1D5498(v15, v14, v16);
        sub_1BA1D4900((uint64_t)v28);
        sub_1BA1D54B4(v15, v14, v16);
        v13 += 24;
        --v12;
      }
      while (v12);
      swift_bridgeObjectRelease();
      a5 = v27;
      v9 = v26;
    }
    v17 = (void *)sub_1BA2024CC();
    swift_bridgeObjectRelease();
    objc_msgSend(a1, sel_setUserInfo_, v17);

  }
  if (v11 > 8 || ((1 << v11) & 0x1CF) != 0)
  {
    if (qword_1ED5AFB58 != -1)
      swift_once();
    v18 = sub_1BA20243C();
    __swift_project_value_buffer(v18, (uint64_t)qword_1ED5B08D0);
    v19 = sub_1BA202424();
    v20 = sub_1BA202670();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v21 = 134217984;
      v28[0] = v11;
      sub_1BA2026E8();
      _os_log_impl(&dword_1BA1AE000, v19, v20, "Error initializing EngagementViewController with unsupported style [%ld]", v21, 0xCu);
      MEMORY[0x1BCCD775C](v21, -1, -1);
    }

    v22 = 0;
  }
  else if (v11 == 4)
  {
    v22 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for EngagementBubbleTipViewController()), sel_initWithRequest_, a1);
    objc_msgSend(v22, sel_setDelegate_, v6);
    sub_1BA1DAD8C(v9);
    v24 = objc_msgSend(v22, sel_popoverPresentationController);
    if (v24)
    {
      v25 = v24;
      objc_msgSend(v24, sel_setDelegate_, v6);

    }
  }
  else
  {
    v22 = sub_1BA1D40F0((uint64_t)a1, v9);
  }
  *(_QWORD *)(v6 + OBJC_IVAR____TtC14NewsEngagement31EngagementViewControllerFactory_delegate + 8) = a5;
  swift_unknownObjectWeakAssign();
  return v22;
}

id sub_1BA1D40F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  id v5;
  double v6;
  id v7;
  void *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  id v12;
  id v13;
  void *v14;
  void *v15;

  v3 = v2;
  v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CFDEC8]), sel_initWithRequest_, a1);
  objc_msgSend(v5, sel_setDelegate_, v3);
  if ((*(_BYTE *)(a2 + 104) & 1) == 0)
  {
    v6 = *(double *)(a2 + 96);
    v7 = objc_msgSend(v5, sel_presentationController);
    if (v7)
    {
      v8 = v7;
      objc_opt_self();
      v9 = (void *)swift_dynamicCastObjCClass();
      if (v9)
        objc_msgSend(v9, sel_setDismissDelayTimeInterval_, v6);

    }
  }
  swift_beginAccess();
  v10 = MEMORY[0x1BCCD77D4](a2 + 88);
  if (v10)
  {
    v11 = (void *)v10;
    v12 = objc_msgSend(v5, sel_presentationController);
    if (v12)
    {
      v13 = v12;
      objc_opt_self();
      v14 = (void *)swift_dynamicCastObjCClass();
      if (v14)
      {
        objc_msgSend(v14, sel_setRelativeTabBarController_, v11);
        v15 = v13;
      }
      else
      {
        v15 = v11;
        v11 = v13;
      }

    }
  }
  return v5;
}

_QWORD *EngagementViewControllerFactory.options(for:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v4;
  char v5;
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  char v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  _QWORD *v30;
  unint64_t v31;
  char v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  _QWORD *v36;
  _QWORD *v38;
  unint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  unint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  _QWORD *v45;
  unint64_t v46;
  unint64_t v47;
  Swift::String v48;
  uint64_t v49;
  Swift::String v50;
  uint64_t v51;
  Swift::String v52;
  uint64_t v53;
  uint64_t v54;
  _BYTE v55[40];
  __int128 v56;
  __int128 v57;

  v2 = v1;
  v48 = *(Swift::String *)(v2 + OBJC_IVAR____TtC14NewsEngagement31EngagementViewControllerFactory_placementKey);
  swift_bridgeObjectRetain();
  sub_1BA20273C();
  if (*(_QWORD *)(a1 + 16) && (v4 = sub_1BA1CE30C((uint64_t)v55), (v5 & 1) != 0))
  {
    sub_1BA1B9D7C(*(_QWORD *)(a1 + 56) + 32 * v4, (uint64_t)&v56);
  }
  else
  {
    v56 = 0u;
    v57 = 0u;
  }
  sub_1BA1CEC88((uint64_t)v55);
  if (!*((_QWORD *)&v57 + 1))
  {
    sub_1BA1B87E4((uint64_t)&v56);
LABEL_12:
    v7 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_13;
  }
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_12;
  EngagementUIPlacement.init(rawValue:)(v48);
  v6 = v55[0];
  if (v55[0] == 30)
    goto LABEL_12;
  v7 = sub_1BA1D523C(0, 1, 1, MEMORY[0x1E0DEE9D8], &qword_1EF2793A8, (uint64_t)&type metadata for EngagementViewControllerOption);
  v9 = v7[2];
  v8 = v7[3];
  v10 = v9 + 1;
  if (v9 >= v8 >> 1)
  {
    v44 = sub_1BA1D523C((_QWORD *)(v8 > 1), v9 + 1, 1, v7, &qword_1EF2793A8, (uint64_t)&type metadata for EngagementViewControllerOption);
    v10 = v9 + 1;
    v7 = v44;
  }
  v7[2] = v10;
  v11 = &v7[3 * v9];
  v11[4] = v6;
  v11[5] = 0;
  *((_BYTE *)v11 + 48) = 0;
LABEL_13:
  v49 = *(_QWORD *)(v2 + OBJC_IVAR____TtC14NewsEngagement31EngagementViewControllerFactory_identifierKey);
  v53 = *(_QWORD *)(v2 + OBJC_IVAR____TtC14NewsEngagement31EngagementViewControllerFactory_identifierKey + 8);
  swift_bridgeObjectRetain();
  sub_1BA20273C();
  if (*(_QWORD *)(a1 + 16) && (v12 = sub_1BA1CE30C((uint64_t)v55), (v13 & 1) != 0))
  {
    sub_1BA1B9D7C(*(_QWORD *)(a1 + 56) + 32 * v12, (uint64_t)&v56);
  }
  else
  {
    v56 = 0u;
    v57 = 0u;
  }
  sub_1BA1CEC88((uint64_t)v55);
  if (*((_QWORD *)&v57 + 1))
  {
    if ((swift_dynamicCast() & 1) != 0)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v7 = sub_1BA1D523C(0, v7[2] + 1, 1, v7, &qword_1EF2793A8, (uint64_t)&type metadata for EngagementViewControllerOption);
      v14 = v7[2];
      v15 = v7[3];
      v16 = v14 + 1;
      if (v14 >= v15 >> 1)
      {
        v46 = v14 + 1;
        v38 = v7;
        v39 = v7[2];
        v40 = sub_1BA1D523C((_QWORD *)(v15 > 1), v14 + 1, 1, v38, &qword_1EF2793A8, (uint64_t)&type metadata for EngagementViewControllerOption);
        v14 = v39;
        v16 = v46;
        v7 = v40;
      }
      v7[2] = v16;
      v17 = &v7[3 * v14];
      v17[4] = v49;
      v17[5] = v53;
      *((_BYTE *)v17 + 48) = 1;
    }
  }
  else
  {
    sub_1BA1B87E4((uint64_t)&v56);
  }
  v50 = *(Swift::String *)(v2 + OBJC_IVAR____TtC14NewsEngagement31EngagementViewControllerFactory_sourceKey);
  swift_bridgeObjectRetain();
  sub_1BA20273C();
  if (*(_QWORD *)(a1 + 16) && (v18 = sub_1BA1CE30C((uint64_t)v55), (v19 & 1) != 0))
  {
    sub_1BA1B9D7C(*(_QWORD *)(a1 + 56) + 32 * v18, (uint64_t)&v56);
  }
  else
  {
    v56 = 0u;
    v57 = 0u;
  }
  sub_1BA1CEC88((uint64_t)v55);
  if (*((_QWORD *)&v57 + 1))
  {
    if ((swift_dynamicCast() & 1) != 0)
    {
      EngagementPlacementSource.init(rawValue:)(v50);
      v20 = v55[0];
      if (v55[0] != 4)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v7 = sub_1BA1D523C(0, v7[2] + 1, 1, v7, &qword_1EF2793A8, (uint64_t)&type metadata for EngagementViewControllerOption);
        v22 = v7[2];
        v21 = v7[3];
        v23 = v22 + 1;
        if (v22 >= v21 >> 1)
        {
          v45 = sub_1BA1D523C((_QWORD *)(v21 > 1), v22 + 1, 1, v7, &qword_1EF2793A8, (uint64_t)&type metadata for EngagementViewControllerOption);
          v23 = v22 + 1;
          v7 = v45;
        }
        v7[2] = v23;
        v24 = &v7[3 * v22];
        v24[4] = v20;
        v24[5] = 0;
        *((_BYTE *)v24 + 48) = 2;
      }
    }
  }
  else
  {
    sub_1BA1B87E4((uint64_t)&v56);
  }
  v51 = *(_QWORD *)(v2 + OBJC_IVAR____TtC14NewsEngagement31EngagementViewControllerFactory_messageIDKey);
  v54 = *(_QWORD *)(v2 + OBJC_IVAR____TtC14NewsEngagement31EngagementViewControllerFactory_messageIDKey + 8);
  swift_bridgeObjectRetain();
  sub_1BA20273C();
  if (*(_QWORD *)(a1 + 16) && (v25 = sub_1BA1CE30C((uint64_t)v55), (v26 & 1) != 0))
  {
    sub_1BA1B9D7C(*(_QWORD *)(a1 + 56) + 32 * v25, (uint64_t)&v56);
  }
  else
  {
    v56 = 0u;
    v57 = 0u;
  }
  sub_1BA1CEC88((uint64_t)v55);
  if (*((_QWORD *)&v57 + 1))
  {
    if ((swift_dynamicCast() & 1) != 0)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v7 = sub_1BA1D523C(0, v7[2] + 1, 1, v7, &qword_1EF2793A8, (uint64_t)&type metadata for EngagementViewControllerOption);
      v27 = v7[2];
      v28 = v7[3];
      v29 = v27 + 1;
      if (v27 >= v28 >> 1)
      {
        v47 = v27 + 1;
        v41 = v7;
        v42 = v7[2];
        v43 = sub_1BA1D523C((_QWORD *)(v28 > 1), v27 + 1, 1, v41, &qword_1EF2793A8, (uint64_t)&type metadata for EngagementViewControllerOption);
        v27 = v42;
        v29 = v47;
        v7 = v43;
      }
      v7[2] = v29;
      v30 = &v7[3 * v27];
      v30[4] = v51;
      v30[5] = v54;
      *((_BYTE *)v30 + 48) = 3;
    }
  }
  else
  {
    sub_1BA1B87E4((uint64_t)&v56);
  }
  v52 = *(Swift::String *)(v2 + OBJC_IVAR____TtC14NewsEngagement31EngagementViewControllerFactory_offerKey);
  swift_bridgeObjectRetain();
  sub_1BA20273C();
  if (*(_QWORD *)(a1 + 16) && (v31 = sub_1BA1CE30C((uint64_t)v55), (v32 & 1) != 0))
  {
    sub_1BA1B9D7C(*(_QWORD *)(a1 + 56) + 32 * v31, (uint64_t)&v56);
  }
  else
  {
    v56 = 0u;
    v57 = 0u;
  }
  sub_1BA1CEC88((uint64_t)v55);
  if (*((_QWORD *)&v57 + 1))
  {
    if ((swift_dynamicCast() & 1) != 0)
    {
      EngagementOffer.init(rawValue:)(v52);
      v33 = v55[0];
      if (v55[0] != 3)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v7 = sub_1BA1D523C(0, v7[2] + 1, 1, v7, &qword_1EF2793A8, (uint64_t)&type metadata for EngagementViewControllerOption);
        v35 = v7[2];
        v34 = v7[3];
        if (v35 >= v34 >> 1)
          v7 = sub_1BA1D523C((_QWORD *)(v34 > 1), v35 + 1, 1, v7, &qword_1EF2793A8, (uint64_t)&type metadata for EngagementViewControllerOption);
        v7[2] = v35 + 1;
        v36 = &v7[3 * v35];
        v36[4] = v33;
        v36[5] = 0;
        *((_BYTE *)v36 + 48) = 4;
      }
    }
  }
  else
  {
    sub_1BA1B87E4((uint64_t)&v56);
  }
  return v7;
}

void sub_1BA1D4900(uint64_t a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1BA1D4940()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD v3[5];
  uint64_t v4;

  swift_bridgeObjectRetain();
  v0 = MEMORY[0x1E0DEA968];
  sub_1BA20273C();
  v3[3] = v0;
  v3[0] = EngagementUIPlacement.rawValue.getter();
  v3[1] = v1;
  return sub_1BA1CEE10((uint64_t)v3, (uint64_t)&v4);
}

id EngagementViewControllerFactory.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1BA1D4C74(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return EngagementViewControllerFactory.createViewController(request:configuration:options:delegate:)(a1, a2, a3, a4, a5);
}

_QWORD *sub_1BA1D4C94(uint64_t a1)
{
  return EngagementViewControllerFactory.options(for:)(a1);
}

UIModalPresentationStyle __swiftcall EngagementViewControllerFactory.adaptivePresentationStyle(for:)(UIPresentationController a1)
{
  return -1;
}

void EngagementViewControllerFactory.messageViewController(_:didSelectActionWith:)(uint64_t a1, id a2)
{
  uint64_t v2;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;
  id v10;
  uint64_t v11;
  _QWORD *v12;
  id v13;

  v5 = objc_msgSend(a2, sel_originalRequest);
  v6 = objc_msgSend(a2, sel_selectedActionIdentifier);
  if (!v6)
  {
    sub_1BA202508();
    v6 = (id)sub_1BA2024FC();
    swift_bridgeObjectRelease();
  }
  v13 = objc_msgSend(v5, sel_locateActionWithIdentifier_, v6);

  v7 = v2 + OBJC_IVAR____TtC14NewsEngagement31EngagementViewControllerFactory_delegate;
  if (MEMORY[0x1BCCD77D4](v2 + OBJC_IVAR____TtC14NewsEngagement31EngagementViewControllerFactory_delegate))
  {
    v8 = *(_QWORD *)(v7 + 8);
    ObjectType = swift_getObjectType();
    v10 = objc_msgSend(v5, sel_userInfo);
    v11 = sub_1BA2024D8();

    v12 = EngagementViewControllerFactory.options(for:)(v11);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, id, _QWORD *, uint64_t, uint64_t))(v8 + 8))(a1, v13, v12, ObjectType, v8);
    swift_bridgeObjectRelease();

    swift_unknownObjectRelease();
  }
  else
  {

  }
}

void EngagementViewControllerFactory.messageViewController(_:didFailWithError:)(uint64_t a1, void *a2)
{
  sub_1BA1D54D0(a2);
}

uint64_t EngagementViewControllerFactory.messageViewControllerDidEnqueueImpression(_:)(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  id v9;
  NSObject *v10;
  os_log_type_t v11;
  __objc2_prot_list **p_base_prots;
  uint8_t *v13;
  _QWORD *v14;
  id v15;
  id v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t ObjectType;
  id v23;

  v2 = v1;
  objc_opt_self();
  v4 = swift_dynamicCastObjCClass();
  if (v4)
  {
    v5 = (void *)v4;
    v6 = qword_1ED5AFB58;
    v7 = a1;
    if (v6 != -1)
      swift_once();
    v8 = sub_1BA20243C();
    __swift_project_value_buffer(v8, (uint64_t)qword_1ED5B08D0);
    v9 = v7;
    v10 = sub_1BA202424();
    v11 = sub_1BA20267C();
    p_base_prots = &EngagementDebugRequestFactory.base_prots;
    if (os_log_type_enabled(v10, v11))
    {
      v13 = (uint8_t *)swift_slowAlloc();
      v14 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v13 = 138412290;
      v23 = objc_msgSend(v5, sel_dialogRequest);
      sub_1BA2026E8();
      *v14 = v23;
      p_base_prots = (__objc2_prot_list **)(&EngagementDebugRequestFactory + 40);

      _os_log_impl(&dword_1BA1AE000, v10, v11, "messageViewController didEnqueueImpression %@", v13, 0xCu);
      sub_1BA1B9050(0, (unint64_t *)&qword_1ED5AFBC0, (uint64_t (*)(uint64_t))sub_1BA1D56B4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      swift_arrayDestroy();
      MEMORY[0x1BCCD775C](v14, -1, -1);
      MEMORY[0x1BCCD775C](v13, -1, -1);

    }
    else
    {

    }
    v15 = objc_msgSend(v5, (SEL)p_base_prots[156]);
    v16 = objc_msgSend(v15, sel_userInfo);

    v17 = sub_1BA2024D8();
    v18 = EngagementViewControllerFactory.options(for:)(v17);
    swift_bridgeObjectRelease();
    v19 = v2 + OBJC_IVAR____TtC14NewsEngagement31EngagementViewControllerFactory_delegate;
    if (MEMORY[0x1BCCD77D4](v19))
    {
      v20 = *(_QWORD *)(v19 + 8);
      ObjectType = swift_getObjectType();
      (*(void (**)(id, _QWORD *, uint64_t, uint64_t))(v20 + 16))(v9, v18, ObjectType, v20);
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
    }

  }
  return 1;
}

_QWORD *sub_1BA1D5228(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BA1D523C(a1, a2, a3, a4, &qword_1ED5AF590, (uint64_t)&type metadata for EngagementPlacementRequest);
}

_QWORD *sub_1BA1D523C(_QWORD *result, int64_t a2, char a3, _QWORD *a4, unint64_t *a5, uint64_t a6)
{
  char v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  size_t v13;
  _QWORD *v14;

  v7 = (char)result;
  if ((a3 & 1) == 0)
  {
    v9 = a2;
    goto LABEL_8;
  }
  v8 = a4[3];
  v9 = v8 >> 1;
  if ((uint64_t)(v8 >> 1) >= a2)
    goto LABEL_8;
  if (v9 + 0x4000000000000000 >= 0)
  {
    v9 = v8 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v8 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v9 = a2;
LABEL_8:
    v10 = a4[2];
    if (v9 <= v10)
      v11 = a4[2];
    else
      v11 = v9;
    if (v11)
    {
      sub_1BA1B5770(0, a5, a6, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v12 = (_QWORD *)swift_allocObject();
      v13 = _swift_stdlib_malloc_size(v12);
      v12[2] = v10;
      v12[3] = 2 * ((uint64_t)(v13 - 32) / 24);
      v14 = v12 + 4;
      if ((v7 & 1) != 0)
      {
LABEL_13:
        if (v12 != a4 || v14 >= &a4[3 * v10 + 4])
          memmove(v14, a4 + 4, 24 * v10);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v12 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v14 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1BA1D58C4(0, v10, (unint64_t)v14, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v12;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1BA1D5378(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1BA1B9050(0, &qword_1ED5AF598, (uint64_t (*)(uint64_t))sub_1BA1D59B4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1BA1D5A04(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BA1D5498(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if ((a3 | 2) == 3)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t sub_1BA1D54B4(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if ((a3 | 2) == 3)
    return swift_bridgeObjectRelease();
  return result;
}

void sub_1BA1D54D0(void *a1)
{
  uint64_t v2;
  id v3;
  id v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  NSObject *oslog;
  uint64_t v12;

  if (qword_1ED5AFB58 != -1)
    swift_once();
  v2 = sub_1BA20243C();
  __swift_project_value_buffer(v2, (uint64_t)qword_1ED5B08D0);
  v3 = a1;
  v4 = a1;
  oslog = sub_1BA202424();
  v5 = sub_1BA202670();
  if (os_log_type_enabled(oslog, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = swift_slowAlloc();
    v12 = v7;
    *(_DWORD *)v6 = 136315138;
    if (a1)
    {
      swift_getErrorValue();
      v8 = sub_1BA2029B8();
      v10 = v9;
    }
    else
    {
      v10 = 0xE700000000000000;
      v8 = 0x6E776F6E6B6E75;
    }
    sub_1BA1BDA3C(v8, v10, &v12);
    sub_1BA2026E8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1BA1AE000, oslog, v5, "messageViewController: failed with error: %s", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCD775C](v7, -1, -1);
    MEMORY[0x1BCCD775C](v6, -1, -1);

  }
  else
  {

  }
}

unint64_t sub_1BA1D56B4()
{
  unint64_t result;

  result = qword_1ED5AFBB0;
  if (!qword_1ED5AFBB0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED5AFBB0);
  }
  return result;
}

uint64_t dispatch thunk of EngagementViewControllerActionDelegate.engagementViewController(_:didSelectAction:options:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t dispatch thunk of EngagementViewControllerActionDelegate.engagementViewControllerDidEnqueueImpression(_:options:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t destroy for EngagementViewControllerOption(uint64_t a1)
{
  return sub_1BA1D54B4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s14NewsEngagement30EngagementViewControllerOptionOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1BA1D5498(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for EngagementViewControllerOption(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1BA1D5498(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_1BA1D54B4(v6, v7, v8);
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for EngagementViewControllerOption(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_1BA1D54B4(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for EngagementViewControllerOption(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFC && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 252);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 4)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for EngagementViewControllerOption(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 252;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_1BA1D5894(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_1BA1D589C(uint64_t result, char a2)
{
  *(_BYTE *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for EngagementViewControllerOption()
{
  return &type metadata for EngagementViewControllerOption;
}

uint64_t dispatch thunk of EngagementViewControllerFactoryType.createViewController(request:configuration:options:delegate:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 8))();
}

uint64_t dispatch thunk of EngagementViewControllerFactoryType.options(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t sub_1BA1D58C4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 24 * a1 + 32;
    v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BA20285C();
  __break(1u);
  return result;
}

unint64_t sub_1BA1D59B4()
{
  unint64_t result;

  result = qword_1ED5AF4A0;
  if (!qword_1ED5AF4A0)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED5AF4A0);
  }
  return result;
}

uint64_t sub_1BA1D5A04(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      sub_1BA1D59B4();
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BA20285C();
  __break(1u);
  return result;
}

uint64_t sub_1BA1D5B08()
{
  return 1;
}

uint64_t sub_1BA1D5B10()
{
  sub_1BA202A00();
  sub_1BA202538();
  return sub_1BA202A18();
}

uint64_t sub_1BA1D5B60()
{
  return sub_1BA202538();
}

uint64_t sub_1BA1D5B78()
{
  sub_1BA202A00();
  sub_1BA202538();
  return sub_1BA202A18();
}

uint64_t sub_1BA1D5BC4@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1BA202868();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_1BA1D5C14(_QWORD *a1@<X8>)
{
  *a1 = 0x7372656767697274;
  a1[1] = 0xE800000000000000;
}

uint64_t sub_1BA1D5C30()
{
  return 0x7372656767697274;
}

uint64_t sub_1BA1D5C48@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1BA202868();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_1BA1D5C9C(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_1BA1D5CA8()
{
  sub_1BA1D5E0C();
  return sub_1BA202A3C();
}

uint64_t sub_1BA1D5CD0()
{
  sub_1BA1D5E0C();
  return sub_1BA202A48();
}

NewsEngagement::EngagementUpsellConfig __swiftcall EngagementUpsellConfig.init(triggers:)(NewsEngagement::EngagementUpsellConfig triggers)
{
  NewsEngagement::EngagementUpsellConfig *v1;

  v1->triggers._rawValue = triggers.triggers._rawValue;
  return triggers;
}

uint64_t EngagementUpsellConfig.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v10[2];

  sub_1BA1D606C(0, &qword_1EF279410, MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v10 - v6;
  v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA1D5E0C();
  sub_1BA202A30();
  v10[1] = v8;
  sub_1BA1D5E50();
  sub_1BA1D5EB4();
  sub_1BA202970();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1BA1D5E0C()
{
  unint64_t result;

  result = qword_1EF279418;
  if (!qword_1EF279418)
  {
    result = MEMORY[0x1BCCD76CC](&unk_1BA203D94, &type metadata for EngagementUpsellConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF279418);
  }
  return result;
}

void sub_1BA1D5E50()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF279420)
  {
    type metadata accessor for EngagementUpsellTrigger();
    v0 = sub_1BA2024F0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF279420);
  }
}

unint64_t sub_1BA1D5EB4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_1EF279428;
  if (!qword_1EF279428)
  {
    sub_1BA1D5E50();
    v2 = v1;
    v3 = sub_1BA1D6140(&qword_1EF279430, (uint64_t)&protocol conformance descriptor for EngagementUpsellTrigger);
    v4[0] = MEMORY[0x1E0DEA970];
    v4[1] = v3;
    result = MEMORY[0x1BCCD76CC](MEMORY[0x1E0DEA0B8], v2, v4);
    atomic_store(result, (unint64_t *)&qword_1EF279428);
  }
  return result;
}

uint64_t EngagementUpsellConfig.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD v11[2];

  sub_1BA1D606C(0, &qword_1EF279438, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA1D5E0C();
  sub_1BA202A24();
  if (!v2)
  {
    sub_1BA1D5E50();
    sub_1BA1D60C8();
    sub_1BA2028EC();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v11[1];
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
}

void sub_1BA1D606C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BA1D5E0C();
    v7 = a3(a1, &type metadata for EngagementUpsellConfig.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1BA1D60C8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_1EF279440;
  if (!qword_1EF279440)
  {
    sub_1BA1D5E50();
    v2 = v1;
    v3 = sub_1BA1D6140(&qword_1EF279448, (uint64_t)&protocol conformance descriptor for EngagementUpsellTrigger);
    v4[0] = MEMORY[0x1E0DEA9A0];
    v4[1] = v3;
    result = MEMORY[0x1BCCD76CC](MEMORY[0x1E0DEA0D8], v2, v4);
    atomic_store(result, (unint64_t *)&qword_1EF279440);
  }
  return result;
}

uint64_t sub_1BA1D6140(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for EngagementUpsellTrigger();
    result = MEMORY[0x1BCCD76CC](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BA1D6180@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return EngagementUpsellConfig.init(from:)(a1, a2);
}

uint64_t sub_1BA1D6194(_QWORD *a1)
{
  return EngagementUpsellConfig.encode(to:)(a1);
}

uint64_t sub_1BA1D61A8(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  char v21;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v10 = sub_1BA1B9DB8(a2);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
      {
LABEL_8:
        v17 = v16[7];
        v18 = sub_1BA202184();
        return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v10, a1, v18);
      }
      return sub_1BA1F7EC4(v10, a2, a1, v16);
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_1BA1F80B4();
      goto LABEL_7;
    }
    sub_1BA1B57F8(v13, a3 & 1);
    v20 = sub_1BA1B9DB8(a2);
    if ((v14 & 1) == (v21 & 1))
    {
      v10 = v20;
      v16 = *v4;
      if ((v14 & 1) != 0)
        goto LABEL_8;
      return sub_1BA1F7EC4(v10, a2, a1, v16);
    }
  }
  result = sub_1BA2029AC();
  __break(1u);
  return result;
}

_OWORD *sub_1BA1D62CC(_OWORD *a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  _OWORD *v17;
  _OWORD *result;
  unint64_t v19;
  char v20;
  _BYTE v21[40];

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v10 = sub_1BA1CE30C(a2);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
      {
LABEL_8:
        v17 = (_OWORD *)(v16[7] + 32 * v10);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v17);
        return sub_1BA1B43D0(a1, v17);
      }
      goto LABEL_11;
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_1BA1F82CC();
      goto LABEL_7;
    }
    sub_1BA1F67DC(v13, a3 & 1);
    v19 = sub_1BA1CE30C(a2);
    if ((v14 & 1) == (v20 & 1))
    {
      v10 = v19;
      v16 = *v4;
      if ((v14 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1BA1CEC4C(a2, (uint64_t)v21);
      return sub_1BA1F7F50(v10, (uint64_t)v21, a1, v16);
    }
  }
  result = (_OWORD *)sub_1BA2029AC();
  __break(1u);
  return result;
}

void sub_1BA1D6404(uint64_t a1, char a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  int v20;
  _QWORD *v21;
  BOOL v22;
  uint64_t v23;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_1BA1B9DB8(a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_13;
  }
  v16 = v11;
  v17 = v10[3];
  if (v17 >= v15 && (a4 & 1) != 0)
    goto LABEL_9;
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_1BA1F84D0();
    goto LABEL_9;
  }
  sub_1BA1F6B10(v15, a4 & 1);
  v18 = sub_1BA1B9DB8(a3);
  if ((v16 & 1) != (v19 & 1))
  {
LABEL_13:
    sub_1BA2029AC();
    __break(1u);
    return;
  }
  v12 = v18;
LABEL_9:
  v20 = a2 & 1;
  v21 = *v5;
  if ((v16 & 1) != 0)
  {
    v22 = v20 != 0;
    v23 = v21[7] + 16 * v12;

    *(_QWORD *)v23 = a1;
    *(_BYTE *)(v23 + 8) = v22;
  }
  else
  {
    sub_1BA1F7FC8(v12, a3, a1, v20, v21);
  }
}

uint64_t sub_1BA1D6528(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  char v20;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v10 = sub_1BA1B9DB8(a2);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
      {
LABEL_8:
        v17 = v16[7];
        result = swift_bridgeObjectRelease();
        *(_QWORD *)(v17 + 8 * v10) = a1;
        return result;
      }
      return sub_1BA1F8018(v10, a2, a1, v16);
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_1BA1F8694();
      goto LABEL_7;
    }
    sub_1BA1F6E4C(v13, a3 & 1);
    v19 = sub_1BA1B9DB8(a2);
    if ((v14 & 1) == (v20 & 1))
    {
      v10 = v19;
      v16 = *v4;
      if ((v14 & 1) != 0)
        goto LABEL_8;
      return sub_1BA1F8018(v10, a2, a1, v16);
    }
  }
  result = sub_1BA2029AC();
  __break(1u);
  return result;
}

uint64_t getEnumTagSinglePayload for EngagementUpsellConfig.CodingKeys(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t storeEnumTagSinglePayload for EngagementUpsellConfig.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BA1D66D0 + 4 * byte_1BA203C20[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BA1D66F0 + 4 * byte_1BA203C25[v4]))();
}

_BYTE *sub_1BA1D66D0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BA1D66F0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BA1D66F8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BA1D6700(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BA1D6708(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BA1D6710(_DWORD *result)
{
  *result = 0;
  return result;
}

uint64_t sub_1BA1D671C()
{
  return 0;
}

ValueMetadata *type metadata accessor for EngagementUpsellConfig.CodingKeys()
{
  return &type metadata for EngagementUpsellConfig.CodingKeys;
}

unint64_t sub_1BA1D6738()
{
  unint64_t result;

  result = qword_1EF279450;
  if (!qword_1EF279450)
  {
    result = MEMORY[0x1BCCD76CC](&unk_1BA203D6C, &type metadata for EngagementUpsellConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF279450);
  }
  return result;
}

unint64_t sub_1BA1D6780()
{
  unint64_t result;

  result = qword_1EF279458;
  if (!qword_1EF279458)
  {
    result = MEMORY[0x1BCCD76CC](&unk_1BA203CA4, &type metadata for EngagementUpsellConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF279458);
  }
  return result;
}

unint64_t sub_1BA1D67C8()
{
  unint64_t result;

  result = qword_1EF279460;
  if (!qword_1EF279460)
  {
    result = MEMORY[0x1BCCD76CC](&unk_1BA203CCC, &type metadata for EngagementUpsellConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF279460);
  }
  return result;
}

unint64_t sub_1BA1D680C(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  unint64_t result;
  uint64_t v18;
  char v19;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v10 = sub_1BA1B9DB8(a2);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
        return sub_1BA1D691C(a1, v16[7] + 40 * v10);
      return sub_1BA1F805C(v10, a2, a1, v16);
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_1BA1F9870();
      goto LABEL_7;
    }
    sub_1BA1F7158(v13, a3 & 1);
    v18 = sub_1BA1B9DB8(a2);
    if ((v14 & 1) == (v19 & 1))
    {
      v10 = v18;
      v16 = *v4;
      if ((v14 & 1) != 0)
        return sub_1BA1D691C(a1, v16[7] + 40 * v10);
      return sub_1BA1F805C(v10, a2, a1, v16);
    }
  }
  result = sub_1BA2029AC();
  __break(1u);
  return result;
}

uint64_t sub_1BA1D691C(uint64_t a1, uint64_t a2)
{
  assignWithTake for EngagementInlineViewManager.Placement(a2, a1);
  return a2;
}

uint64_t sub_1BA1D6958(uint64_t a1, uint64_t a2)
{
  assignWithTake for EngagementInlineViewManager.Observation(a2, a1);
  return a2;
}

_QWORD *sub_1BA1D6994(_QWORD *a1, _QWORD *a2)
{
  assignWithTake for EngagementUpsellPlacement(a2, a1);
  return a2;
}

uint64_t sub_1BA1D69D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for EngagementUpsellTrigger();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BA1D6A14()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1BA1D6A38(uint64_t a1, uint64_t a2, char *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  char v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;

  v4 = v3;
  v8 = sub_1BA2024A8();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (uint64_t *)((char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = *a3;
  sub_1BA1C36F0();
  *v11 = sub_1BA2026AC();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E0DEF740], v8);
  LOBYTE(a3) = sub_1BA2024C0();
  result = (*(uint64_t (**)(uint64_t *, uint64_t))(v9 + 8))(v11, v8);
  if ((a3 & 1) != 0)
  {
    v14 = *(_QWORD *)(v4 + 16);
    v15 = *(_QWORD *)(v14 + 16);
    if (v15)
    {
      v16 = (_QWORD *)(v14 + 32);
      swift_bridgeObjectRetain();
      do
      {
        v17 = v16[3];
        v18 = v16[4];
        __swift_project_boxed_opaque_existential_1(v16, v17);
        v20 = v12;
        (*(void (**)(uint64_t, uint64_t, char *, uint64_t, uint64_t))(v18 + 32))(a1, a2, &v20, v17, v18);
        v16 += 5;
        --v15;
      }
      while (v15);
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t static EngagementInlineBannerState.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  double v2;

  v2 = *(double *)a1;
  if (*(_BYTE *)(a1 + 16))
  {
    if (*(_BYTE *)(a1 + 16) == 1)
      return *(_BYTE *)(a2 + 16) == 1;
    return ((uint64_t (*)(void))((char *)&loc_1BA1D6BC8 + 4 * byte_1BA203E50[*(_QWORD *)&v2]))();
  }
  else
  {
    if (*(_BYTE *)(a2 + 16) || v2 != *(double *)a2)
      return 0;
    return *(double *)(a1 + 8) == *(double *)(a2 + 8);
  }
}

uint64_t sub_1BA1D6C08@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;

  if (v2 != 2 || v1 != 1 || a1 != 0)
    JUMPOUT(0x1BA1D6BA8);
  return 1;
}

uint64_t sub_1BA1D6C20@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;

  if (v2 != 2 || v1 != 2 || a1 != 0)
    JUMPOUT(0x1BA1D6BA8);
  return 1;
}

uint64_t sub_1BA1D6C38@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;

  if (v2 != 2 || v1 != 3 || a1 != 0)
    JUMPOUT(0x1BA1D6BA8);
  return 1;
}

uint64_t sub_1BA1D6C50@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;

  if (v2 != 2 || v1 != 4 || a1 != 0)
    JUMPOUT(0x1BA1D6BA8);
  return 1;
}

uint64_t sub_1BA1D6C68(uint64_t a1, uint64_t a2)
{
  double v2;

  v2 = *(double *)a1;
  if (*(_BYTE *)(a1 + 16))
  {
    if (*(_BYTE *)(a1 + 16) == 1)
      return *(_BYTE *)(a2 + 16) == 1;
    return ((uint64_t (*)(void))((char *)&loc_1BA1D6CB8 + 4 * byte_1BA203E55[*(_QWORD *)&v2]))();
  }
  else
  {
    if (*(_BYTE *)(a2 + 16) || v2 != *(double *)a2)
      return 0;
    return *(double *)(a1 + 8) == *(double *)(a2 + 8);
  }
}

uint64_t sub_1BA1D6CF8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;

  if (v2 != 2 || v1 != 1 || a1 != 0)
    JUMPOUT(0x1BA1D6C98);
  return 1;
}

uint64_t sub_1BA1D6D10@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;

  if (v2 != 2 || v1 != 2 || a1 != 0)
    JUMPOUT(0x1BA1D6C98);
  return 1;
}

uint64_t sub_1BA1D6D28@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;

  if (v2 != 2 || v1 != 3 || a1 != 0)
    JUMPOUT(0x1BA1D6C98);
  return 1;
}

uint64_t sub_1BA1D6D40@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;

  if (v2 != 2 || v1 != 4 || a1 != 0)
    JUMPOUT(0x1BA1D6C98);
  return 1;
}

uint64_t EngagementInlineBannerState.description.getter()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  uint64_t v5;

  v1 = *(void **)v0;
  v2 = *(_QWORD *)(v0 + 8);
  if (*(_BYTE *)(v0 + 16))
  {
    if (*(_BYTE *)(v0 + 16) != 1)
      __asm { BR              X9 }
    v5 = 0;
    v3 = v1;
    sub_1BA202544();
    sub_1BA1D6F14();
    sub_1BA2027FC();
    sub_1BA202544();
    sub_1BA1C263C(v1, v2, 1);
  }
  else
  {
    v5 = 0x2864657A6973;
    sub_1BA202628();
    sub_1BA202544();
    swift_bridgeObjectRelease();
    sub_1BA202544();
    sub_1BA202628();
    sub_1BA202544();
    swift_bridgeObjectRelease();
    sub_1BA202544();
  }
  return v5;
}

void sub_1BA1D6EBC()
{
  JUMPOUT(0x1BA1D6E74);
}

void sub_1BA1D6ED4()
{
  JUMPOUT(0x1BA1D6E74);
}

void sub_1BA1D6EEC()
{
  JUMPOUT(0x1BA1D6E74);
}

void sub_1BA1D6F00()
{
  JUMPOUT(0x1BA1D6E74);
}

unint64_t sub_1BA1D6F14()
{
  unint64_t result;

  result = qword_1ED5AF2F0;
  if (!qword_1ED5AF2F0)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED5AF2F0);
  }
  return result;
}

uint64_t EngagementInlineBanner.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

void EngagementInlineBanner.placement.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 16);
}

id EngagementInlineBanner.state.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  void *v2;
  uint64_t v3;
  char v4;

  v2 = *(void **)(v1 + 24);
  v3 = *(_QWORD *)(v1 + 32);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_BYTE *)(v1 + 40);
  *(_BYTE *)(a1 + 16) = v4;
  return sub_1BA1C2628(v2, v3, v4);
}

void EngagementInlineBanner.source.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 41);
}

uint64_t EngagementInlineBanner.messageID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

void EngagementInlineBanner.offer.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 64);
}

__n128 EngagementInlineBanner.init(identifier:placement:state:source:messageID:offer:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, __n128 *a4@<X3>, char *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char *a8@<X7>, uint64_t a9@<X8>)
{
  char v9;
  unsigned __int8 v10;
  char v11;
  char v12;
  __n128 result;

  v9 = *a3;
  v10 = a4[1].n128_u8[0];
  v11 = *a5;
  v12 = *a8;
  *(_QWORD *)a9 = a1;
  *(_QWORD *)(a9 + 8) = a2;
  *(_BYTE *)(a9 + 16) = v9;
  result = *a4;
  *(__n128 *)(a9 + 24) = *a4;
  *(_BYTE *)(a9 + 40) = v10;
  *(_BYTE *)(a9 + 41) = v11;
  *(_QWORD *)(a9 + 48) = a6;
  *(_QWORD *)(a9 + 56) = a7;
  *(_BYTE *)(a9 + 64) = v12;
  return result;
}

BOOL _s14NewsEngagement0B12InlineBannerV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  double v2;
  double v3;
  int v4;
  double v5;
  double v6;
  int v7;
  char v8;
  _BOOL8 result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  char v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  char v21;
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;

  v3 = *(double *)(a1 + 24);
  v2 = *(double *)(a1 + 32);
  v4 = *(unsigned __int8 *)(a1 + 40);
  v28 = *(_BYTE *)(a1 + 41);
  v23 = *(unsigned __int8 *)(a1 + 64);
  v5 = *(double *)(a2 + 24);
  v6 = *(double *)(a2 + 32);
  v7 = *(unsigned __int8 *)(a2 + 40);
  v24 = *(_QWORD *)(a2 + 48);
  v25 = *(_QWORD *)(a1 + 48);
  v26 = *(_QWORD *)(a2 + 56);
  v27 = *(_QWORD *)(a1 + 56);
  v22 = *(unsigned __int8 *)(a2 + 64);
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8)
    || (v8 = sub_1BA202988(), result = 0, (v8 & 1) != 0))
  {
    v10 = EngagementUIPlacement.rawValue.getter();
    v12 = v11;
    if (v10 == EngagementUIPlacement.rawValue.getter() && v12 == v13)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      v14 = sub_1BA202988();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      result = 0;
      if ((v14 & 1) == 0)
        return result;
    }
    if (v4)
    {
      if (v4 != 1)
        __asm { BR              X9 }
      if (v7 != 1)
        return 0;
    }
    else
    {
      if (v7)
        return 0;
      result = 0;
      if (v3 != v5 || v2 != v6)
        return result;
    }
    sub_1BA1FB298(v28);
    if ((v15 & 1) != 0)
    {
      if (v27)
      {
        if (!v26)
          return 0;
        if (v25 != v24 || v27 != v26)
        {
          v16 = sub_1BA202988();
          result = 0;
          if ((v16 & 1) == 0)
            return result;
        }
      }
      else if (v26)
      {
        return 0;
      }
      if (v23 == 3)
        return v22 == 3;
      if (v22 != 3)
      {
        v17 = 0x73756C507377656ELL;
        if (v23)
        {
          if (v23 == 1)
          {
            v18 = 0xE800000000000000;
            v19 = 0x656E4F656C707061;
          }
          else
          {
            v18 = 0x80000001BA206480;
            v19 = 0xD000000000000012;
          }
        }
        else
        {
          v18 = 0xE800000000000000;
          v19 = 0x73756C507377656ELL;
        }
        if (v22)
        {
          if (v22 == 1)
          {
            v20 = 0xE800000000000000;
            v17 = 0x656E4F656C707061;
          }
          else
          {
            v20 = 0x80000001BA206480;
            v17 = 0xD000000000000012;
          }
        }
        else
        {
          v20 = 0xE800000000000000;
        }
        if (v19 == v17 && v18 == v20)
        {
          swift_bridgeObjectRelease_n();
          return 1;
        }
        v21 = sub_1BA202988();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v21 & 1) != 0)
          return 1;
      }
    }
    return 0;
  }
  return result;
}

uint64_t assignWithCopy for EngagementInlineBannerState(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  char v5;
  void *v6;
  uint64_t v7;
  char v8;

  v3 = *(id *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1BA1C2628(*(id *)a2, v4, v5);
  v6 = *(void **)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_1BA1C263C(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for EngagementInlineBannerState(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  uint64_t v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(void **)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_1BA1C263C(v4, v5, v6);
  return a1;
}

uint64_t sub_1BA1D7464(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 1u)
    return *(unsigned __int8 *)(a1 + 16);
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t destroy for EngagementInlineBanner(uint64_t a1)
{
  swift_bridgeObjectRelease();
  sub_1BA1C263C(*(id *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for EngagementInlineBanner(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  uint64_t v6;
  char v7;
  uint64_t v8;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v5 = *(void **)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 32);
  v7 = *(_BYTE *)(a2 + 40);
  swift_bridgeObjectRetain();
  sub_1BA1C2628(v5, v6, v7);
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_BYTE *)(a1 + 40) = v7;
  *(_BYTE *)(a1 + 41) = *(_BYTE *)(a2 + 41);
  v8 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v8;
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for EngagementInlineBanner(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  char v6;
  void *v7;
  uint64_t v8;
  char v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(void **)(a2 + 24);
  v5 = *(_QWORD *)(a2 + 32);
  v6 = *(_BYTE *)(a2 + 40);
  sub_1BA1C2628(v4, v5, v6);
  v7 = *(void **)(a1 + 24);
  v8 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = v5;
  v9 = *(_BYTE *)(a1 + 40);
  *(_BYTE *)(a1 + 40) = v6;
  sub_1BA1C263C(v7, v8, v9);
  *(_BYTE *)(a1 + 41) = *(_BYTE *)(a2 + 41);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  return a1;
}

__n128 __swift_memcpy65_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for EngagementInlineBanner(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  void *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v5 = *(_BYTE *)(a2 + 40);
  v6 = *(void **)(a1 + 24);
  v7 = *(_QWORD *)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v8 = *(_BYTE *)(a1 + 40);
  *(_BYTE *)(a1 + 40) = v5;
  sub_1BA1C263C(v6, v7, v8);
  *(_BYTE *)(a1 + 41) = *(_BYTE *)(a2 + 41);
  v9 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v9;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  return a1;
}

uint64_t getEnumTagSinglePayload for EngagementInlineBanner(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 65))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for EngagementInlineBanner(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 64) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 65) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 65) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_1BA1D7724(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  int64_t v10;
  uint64_t v11;
  int64_t v12;
  int v13;
  int v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  int64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint8_t *v29;
  NSObject *v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  os_log_type_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v2 = v1;
  v37 = MEMORY[0x1E0DEE9E0];
  swift_retain();
  v4 = swift_bridgeObjectRetain();
  v5 = sub_1BA1DA8B8(v4);
  swift_release();
  if (!*(_QWORD *)(v5 + 16))
  {
    if (qword_1ED5AFB58 != -1)
      goto LABEL_20;
    while (1)
    {
      v6 = sub_1BA20243C();
      __swift_project_value_buffer(v6, (uint64_t)qword_1ED5B08D0);
      swift_bridgeObjectRetain_n();
      v7 = sub_1BA202424();
      v8 = sub_1BA20267C();
      if (!os_log_type_enabled(v7, v8))
      {

        swift_bridgeObjectRelease_n();
        goto LABEL_16;
      }
      v34 = v8;
      v9 = (uint8_t *)swift_slowAlloc();
      v33 = swift_slowAlloc();
      v36 = v33;
      *(_DWORD *)v9 = 136315138;
      v10 = *(_QWORD *)(a1 + 16);
      v11 = MEMORY[0x1E0DEE9D8];
      if (!v10)
        break;
      v29 = v9;
      v30 = v7;
      v31 = v5;
      v32 = v2;
      v35 = MEMORY[0x1E0DEE9D8];
      sub_1BA1C0B04(0, v10, 0);
      v11 = v35;
      v12 = sub_1BA1C1074(a1);
      v14 = v13;
      v5 = v15 & 1;
      while ((v12 & 0x8000000000000000) == 0 && v12 < 1 << *(_BYTE *)(a1 + 32))
      {
        if (((*(_QWORD *)(a1 + 56 + (((unint64_t)v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
          goto LABEL_18;
        if (*(_DWORD *)(a1 + 36) != v14)
          goto LABEL_19;
        v16 = EngagementUIPlacement.rawValue.getter();
        v18 = v17;
        v19 = *(_QWORD *)(v35 + 16);
        v20 = *(_QWORD *)(v35 + 24);
        v2 = (_QWORD *)(v19 + 1);
        if (v19 >= v20 >> 1)
          sub_1BA1C0B04(v20 > 1, v19 + 1, 1);
        *(_QWORD *)(v35 + 16) = v2;
        v21 = v35 + 16 * v19;
        *(_QWORD *)(v21 + 32) = v16;
        *(_QWORD *)(v21 + 40) = v18;
        v22 = sub_1BA1C0980(v12, v14, v5 & 1, a1);
        v12 = v22;
        v14 = v23;
        v5 = v24 & 1;
        if (!--v10)
        {
          sub_1BA1D1694(v22, v23, v24 & 1);
          v5 = v31;
          v2 = v32;
          v7 = v30;
          v9 = v29;
          goto LABEL_15;
        }
      }
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      __break(1u);
LABEL_20:
      swift_once();
    }
LABEL_15:
    v25 = MEMORY[0x1BCCD6EA4](v11, MEMORY[0x1E0DEA968]);
    v27 = v26;
    swift_bridgeObjectRelease();
    sub_1BA1BDA3C(v25, v27, &v36);
    sub_1BA2026E8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BA1AE000, v7, v34, "No enabled placements in %s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCD775C](v33, -1, -1);
    MEMORY[0x1BCCD775C](v9, -1, -1);

  }
LABEL_16:
  swift_retain();
  sub_1BA1DA2C8(v5, v2, &v37);
  swift_release();
  swift_release();
  return v37;
}

uint64_t sub_1BA1D7AB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  NSObject *v18;
  int v19;
  _BOOL4 v20;
  uint8_t *v21;
  int64_t v22;
  uint64_t v23;
  char *v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint8_t *v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  os_log_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  char *v42;
  char *v43;
  void (*v44)(char *, uint64_t);
  uint64_t v45;
  uint64_t v46;
  void *v47;
  char *v48;
  uint64_t (*v49)(uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  uint8_t *v54;
  os_log_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  uint64_t aBlock[8];

  v62 = a2;
  v5 = sub_1BA20246C();
  v65 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1BA202484();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = sub_1BA20249C();
  v61 = *(_QWORD *)(v64 - 8);
  v12 = MEMORY[0x1E0C80A78](v64);
  v60 = (char *)&v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v63 = (char *)&v50 - v15;
  if (qword_1ED5AEFB0 != -1)
    swift_once();
  sub_1BA1BC470(&qword_1ED5AF170, v14, (uint64_t (*)(uint64_t))type metadata accessor for EngagementDebugEventProvider, (uint64_t)&unk_1BA203FE0);
  result = sub_1BA2021CC();
  if (LOBYTE(aBlock[0]) == 1)
  {
    if (qword_1ED5AFB58 != -1)
      swift_once();
    v17 = sub_1BA20243C();
    __swift_project_value_buffer(v17, (uint64_t)qword_1ED5B08D0);
    swift_bridgeObjectRetain_n();
    v18 = sub_1BA202424();
    v19 = sub_1BA20267C();
    v20 = os_log_type_enabled(v18, (os_log_type_t)v19);
    v58 = v9;
    v59 = v8;
    v57 = v11;
    if (v20)
    {
      v53 = v19;
      v55 = v18;
      v56 = v7;
      v21 = (uint8_t *)swift_slowAlloc();
      v52 = swift_slowAlloc();
      aBlock[0] = v52;
      v54 = v21;
      *(_DWORD *)v21 = 136315138;
      v22 = *(_QWORD *)(a1 + 16);
      v23 = MEMORY[0x1E0DEE9D8];
      if (v22)
      {
        v50 = a3;
        v51 = v5;
        v67 = MEMORY[0x1E0DEE9D8];
        sub_1BA1C0B04(0, v22, 0);
        v23 = v67;
        v24 = (char *)(a1 + 32);
        do
        {
          v25 = *v24;
          v24 += 16;
          v66 = v25;
          v26 = EngagementUIPlacement.rawValue.getter();
          v28 = v27;
          v67 = v23;
          v30 = *(_QWORD *)(v23 + 16);
          v29 = *(_QWORD *)(v23 + 24);
          if (v30 >= v29 >> 1)
          {
            sub_1BA1C0B04(v29 > 1, v30 + 1, 1);
            v23 = v67;
          }
          *(_QWORD *)(v23 + 16) = v30 + 1;
          v31 = v23 + 16 * v30;
          *(_QWORD *)(v31 + 32) = v26;
          *(_QWORD *)(v31 + 40) = v28;
          --v22;
        }
        while (v22);
        v5 = v51;
        a3 = v50;
      }
      v32 = v54;
      v33 = MEMORY[0x1BCCD6EA4](v23, MEMORY[0x1E0DEA968]);
      v35 = v34;
      swift_bridgeObjectRelease();
      v67 = sub_1BA1BDA3C(v33, v35, aBlock);
      sub_1BA2026E8();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      v36 = v55;
      _os_log_impl(&dword_1BA1AE000, v55, (os_log_type_t)v53, "Fetching debug response(s) for: %s", v32, 0xCu);
      v37 = v52;
      swift_arrayDestroy();
      MEMORY[0x1BCCD775C](v37, -1, -1);
      MEMORY[0x1BCCD775C](v32, -1, -1);

      v7 = v56;
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    if (*(_QWORD *)(sub_1BA1D8154(a1) + 16))
    {
      sub_1BA1C1078(0, &qword_1ED5AF540);
      sub_1BA1C1D10();
      v38 = sub_1BA2024E4();
      sub_1BA1C1078(0, &qword_1ED5AF550);
      v39 = sub_1BA2024E4();
      swift_bridgeObjectRelease();
      v40 = sub_1BA1CEFBC(v38);
      swift_bridgeObjectRelease();
      sub_1BA1C1078(0, (unint64_t *)&qword_1ED5AF230);
      v41 = (void *)sub_1BA2026AC();
      v42 = v60;
      sub_1BA202490();
      v43 = v63;
      MEMORY[0x1BCCD6D6C](v42, 0.5);
      v44 = *(void (**)(char *, uint64_t))(v61 + 8);
      v45 = v64;
      v44(v42, v64);
      v46 = swift_allocObject();
      *(_QWORD *)(v46 + 16) = v62;
      *(_QWORD *)(v46 + 24) = a3;
      *(_QWORD *)(v46 + 32) = v40;
      *(_QWORD *)(v46 + 40) = v39;
      *(_BYTE *)(v46 + 48) = 1;
      aBlock[4] = (uint64_t)sub_1BA1DA6CC;
      aBlock[5] = v46;
      aBlock[0] = MEMORY[0x1E0C809B0];
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_1BA1FAB1C;
      aBlock[3] = (uint64_t)&block_descriptor_1;
      v47 = _Block_copy(aBlock);
      swift_retain();
      swift_release();
      v48 = v57;
      sub_1BA202478();
      aBlock[0] = MEMORY[0x1E0DEE9D8];
      v49 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
      sub_1BA1BC470((unint64_t *)&qword_1ED5AF4F8, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
      sub_1BA1B9050(0, &qword_1ED5AF520, v49, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA1CA9D8();
      sub_1BA20270C();
      MEMORY[0x1BCCD6F58](v43, v48, v7, v47);
      _Block_release(v47);

      (*(void (**)(char *, uint64_t))(v65 + 8))(v7, v5);
      (*(void (**)(char *, uint64_t))(v58 + 8))(v48, v59);
      return ((uint64_t (*)(char *, uint64_t))v44)(v43, v45);
    }
    else
    {
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_1BA1D8154(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  char *v6;
  unint64_t v7;
  char v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  NSObject *v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  os_log_type_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v2 = v1;
  v3 = a1;
  v41 = MEMORY[0x1E0DEE9E0];
  v4 = *(_QWORD *)(a1 + 16);
  v5 = MEMORY[0x1E0DEE9D8];
  if (v4)
  {
    v40 = MEMORY[0x1E0DEE9D8];
    sub_1BA1C2908(0, v4, 0);
    v5 = v40;
    v6 = (char *)(v3 + 32);
    v7 = *(_QWORD *)(v40 + 16);
    do
    {
      v9 = *v6;
      v6 += 16;
      v8 = v9;
      v40 = v5;
      v10 = *(_QWORD *)(v5 + 24);
      if (v7 >= v10 >> 1)
      {
        sub_1BA1C2908(v10 > 1, v7 + 1, 1);
        v5 = v40;
      }
      *(_QWORD *)(v5 + 16) = v7 + 1;
      *(_BYTE *)(v5 + v7++ + 32) = v8;
      --v4;
    }
    while (v4);
  }
  swift_retain();
  v11 = swift_bridgeObjectRetain();
  v12 = sub_1BA1DAA7C(v11);
  swift_bridgeObjectRelease();
  swift_release();
  if (*(_QWORD *)(v12 + 16))
  {
    swift_bridgeObjectRelease();
    v13 = *(_QWORD *)(v12 + 16);
    if (!v13)
      goto LABEL_24;
    goto LABEL_21;
  }
  if (qword_1ED5AFB58 != -1)
    swift_once();
  v14 = sub_1BA20243C();
  __swift_project_value_buffer(v14, (uint64_t)qword_1ED5B08D0);
  swift_bridgeObjectRetain();
  v15 = sub_1BA202424();
  v16 = sub_1BA20267C();
  if (!os_log_type_enabled(v15, v16))
  {

    swift_bridgeObjectRelease_n();
    v13 = *(_QWORD *)(v12 + 16);
    if (!v13)
      goto LABEL_24;
    goto LABEL_21;
  }
  v37 = v16;
  v38 = v3;
  v17 = (uint8_t *)swift_slowAlloc();
  v36 = swift_slowAlloc();
  v40 = v36;
  *(_DWORD *)v17 = 136315138;
  v18 = *(_QWORD *)(v5 + 16);
  v19 = MEMORY[0x1E0DEE9D8];
  if (v18)
  {
    v33 = v15;
    v34 = v12;
    v35 = v2;
    v39 = MEMORY[0x1E0DEE9D8];
    sub_1BA1C0B04(0, v18, 0);
    v19 = v39;
    v20 = v5 + 32;
    do
    {
      ++v20;
      v21 = EngagementUIPlacement.rawValue.getter();
      v23 = v22;
      v25 = *(_QWORD *)(v39 + 16);
      v24 = *(_QWORD *)(v39 + 24);
      if (v25 >= v24 >> 1)
        sub_1BA1C0B04(v24 > 1, v25 + 1, 1);
      *(_QWORD *)(v39 + 16) = v25 + 1;
      v26 = v39 + 16 * v25;
      *(_QWORD *)(v26 + 32) = v21;
      *(_QWORD *)(v26 + 40) = v23;
      --v18;
    }
    while (v18);
    v12 = v34;
    v2 = v35;
    v15 = v33;
  }
  v27 = MEMORY[0x1BCCD6EA4](v19, MEMORY[0x1E0DEA968]);
  v29 = v28;
  swift_bridgeObjectRelease();
  sub_1BA1BDA3C(v27, v29, &v40);
  sub_1BA2026E8();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  _os_log_impl(&dword_1BA1AE000, v15, v37, "No enabled placements in %s", v17, 0xCu);
  swift_arrayDestroy();
  MEMORY[0x1BCCD775C](v36, -1, -1);
  MEMORY[0x1BCCD775C](v17, -1, -1);

  v3 = v38;
  v13 = *(_QWORD *)(v12 + 16);
  if (v13)
  {
LABEL_21:
    swift_bridgeObjectRetain();
    v30 = 0;
    do
    {
      v31 = v30 + 1;
      LOBYTE(v40) = *(_BYTE *)(v12 + v30 + 32);
      sub_1BA1D908C((unsigned __int8 *)&v40, v3, v2);
      v30 = v31;
    }
    while (v13 != v31);
    swift_bridgeObjectRelease();
  }
LABEL_24:
  swift_bridgeObjectRelease();
  return v41;
}

uint64_t sub_1BA1D850C(void (*a1)(uint64_t, _QWORD), uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v9;

  sub_1BA1DA6D8(0, &qword_1ED5AF590);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1BA203760;
  *(_QWORD *)(v9 + 32) = a3;
  *(_QWORD *)(v9 + 40) = a4;
  *(_BYTE *)(v9 + 48) = a5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  a1(v9, 0);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BA1D85A8(unsigned __int8 *a1)
{
  uint64_t v1;
  uint64_t inited;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;

  v1 = *a1;
  sub_1BA1B9050(0, &qword_1EF279468, (uint64_t (*)(uint64_t))sub_1BA1DAB8C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BA203F60;
  *(_BYTE *)(inited + 32) = 0;
  if (qword_1EF2790C0 != -1)
    swift_once();
  *(_QWORD *)(inited + 40) = qword_1EF279588;
  *(_BYTE *)(inited + 48) = 1;
  v3 = qword_1EF2790C8;
  swift_retain();
  if (v3 != -1)
    swift_once();
  *(_QWORD *)(inited + 56) = qword_1EF279590;
  *(_BYTE *)(inited + 64) = 3;
  v4 = qword_1EF2790D8;
  swift_retain();
  if (v4 != -1)
    swift_once();
  *(_QWORD *)(inited + 72) = qword_1EF2795A0;
  *(_BYTE *)(inited + 80) = 2;
  v5 = qword_1EF2790D0;
  swift_retain();
  if (v5 != -1)
    swift_once();
  *(_QWORD *)(inited + 88) = qword_1EF279598;
  *(_BYTE *)(inited + 96) = 4;
  v6 = qword_1EF2790E0;
  swift_retain();
  if (v6 != -1)
    swift_once();
  *(_QWORD *)(inited + 104) = qword_1EF2795A8;
  *(_BYTE *)(inited + 112) = 5;
  v7 = qword_1EF2790E8;
  swift_retain();
  if (v7 != -1)
    swift_once();
  *(_QWORD *)(inited + 120) = qword_1EF2795B0;
  *(_BYTE *)(inited + 128) = 6;
  v8 = qword_1EF2790F0;
  swift_retain();
  if (v8 != -1)
    swift_once();
  *(_QWORD *)(inited + 136) = qword_1EF2795B8;
  *(_BYTE *)(inited + 144) = 7;
  v9 = qword_1EF2790F8;
  swift_retain();
  if (v9 != -1)
    swift_once();
  *(_QWORD *)(inited + 152) = qword_1EF2795C0;
  *(_BYTE *)(inited + 160) = 8;
  v10 = qword_1EF279100;
  swift_retain();
  if (v10 != -1)
    swift_once();
  *(_QWORD *)(inited + 168) = qword_1EF2795C8;
  *(_BYTE *)(inited + 176) = 13;
  v11 = qword_1EF279110;
  swift_retain();
  if (v11 != -1)
    swift_once();
  *(_QWORD *)(inited + 184) = qword_1EF2795D8;
  *(_BYTE *)(inited + 192) = 14;
  v12 = qword_1EF279118;
  swift_retain();
  if (v12 != -1)
    swift_once();
  *(_QWORD *)(inited + 200) = qword_1EF2795E0;
  *(_BYTE *)(inited + 208) = 15;
  v13 = qword_1EF279120;
  swift_retain();
  if (v13 != -1)
    swift_once();
  *(_QWORD *)(inited + 216) = qword_1EF2795E8;
  *(_BYTE *)(inited + 224) = 17;
  v14 = qword_1EF279128;
  swift_retain();
  if (v14 != -1)
    swift_once();
  *(_QWORD *)(inited + 232) = qword_1EF2795F0;
  *(_BYTE *)(inited + 240) = 18;
  v15 = qword_1EF279130;
  swift_retain();
  if (v15 != -1)
    swift_once();
  *(_QWORD *)(inited + 248) = qword_1EF2795F8;
  *(_BYTE *)(inited + 256) = 19;
  v16 = qword_1EF279138;
  swift_retain();
  if (v16 != -1)
    swift_once();
  *(_QWORD *)(inited + 264) = qword_1EF279600;
  *(_BYTE *)(inited + 272) = 22;
  v17 = qword_1EF279140;
  swift_retain();
  if (v17 != -1)
    swift_once();
  *(_QWORD *)(inited + 280) = qword_1EF279608;
  *(_BYTE *)(inited + 288) = 23;
  v18 = qword_1EF279148;
  swift_retain();
  if (v18 != -1)
    swift_once();
  *(_QWORD *)(inited + 296) = qword_1EF279610;
  *(_BYTE *)(inited + 304) = 24;
  v19 = qword_1EF279150;
  swift_retain();
  if (v19 != -1)
    swift_once();
  *(_QWORD *)(inited + 312) = qword_1EF279618;
  *(_BYTE *)(inited + 320) = 20;
  v20 = qword_1EF279158;
  swift_retain();
  if (v20 != -1)
    swift_once();
  *(_QWORD *)(inited + 328) = qword_1EF279620;
  *(_BYTE *)(inited + 336) = 21;
  v21 = qword_1EF279168;
  swift_retain();
  if (v21 != -1)
    swift_once();
  *(_QWORD *)(inited + 344) = qword_1EF279630;
  *(_BYTE *)(inited + 352) = 25;
  v22 = qword_1EF279170;
  swift_retain();
  if (v22 != -1)
    swift_once();
  *(_QWORD *)(inited + 360) = qword_1EF279638;
  *(_BYTE *)(inited + 368) = 26;
  v23 = qword_1EF279178;
  swift_retain();
  if (v23 != -1)
    swift_once();
  *(_QWORD *)(inited + 376) = qword_1EF279640;
  *(_BYTE *)(inited + 384) = 27;
  v24 = qword_1EF279180;
  swift_retain();
  if (v24 != -1)
    swift_once();
  *(_QWORD *)(inited + 392) = qword_1EF279648;
  *(_BYTE *)(inited + 400) = 28;
  v25 = qword_1EF279188;
  swift_retain();
  if (v25 != -1)
    swift_once();
  *(_QWORD *)(inited + 408) = qword_1EF279650;
  *(_BYTE *)(inited + 416) = 29;
  v26 = qword_1EF279190;
  swift_retain();
  if (v26 != -1)
    swift_once();
  *(_QWORD *)(inited + 424) = qword_1EF279658;
  *(_BYTE *)(inited + 432) = 9;
  v27 = qword_1EF279198;
  swift_retain();
  if (v27 != -1)
    swift_once();
  *(_QWORD *)(inited + 440) = qword_1EF279660;
  swift_retain();
  if (*(_QWORD *)(sub_1BA1D8E68(inited) + 16) && (sub_1BA1B9DB8(v1), (v28 & 1) != 0))
  {
    swift_retain();
    swift_bridgeObjectRelease();
    sub_1BA1BC470(&qword_1ED5AF170, v29, (uint64_t (*)(uint64_t))type metadata accessor for EngagementDebugEventProvider, (uint64_t)&unk_1BA203FE0);
    sub_1BA2021CC();
    swift_release();
    return v38;
  }
  else
  {
    swift_bridgeObjectRelease();
    if (qword_1ED5AFB58 != -1)
      swift_once();
    v31 = sub_1BA20243C();
    __swift_project_value_buffer(v31, (uint64_t)qword_1ED5B08D0);
    v32 = sub_1BA202424();
    v33 = sub_1BA202670();
    if (os_log_type_enabled(v32, v33))
    {
      v34 = (uint8_t *)swift_slowAlloc();
      v35 = swift_slowAlloc();
      v38 = v35;
      *(_DWORD *)v34 = 136315138;
      v36 = EngagementUIPlacement.rawValue.getter();
      sub_1BA1BDA3C(v36, v37, &v38);
      sub_1BA2026E8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BA1AE000, v32, v33, "Could not find debug enabled setting for %s. Please update placements mapping", v34, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCD775C](v35, -1, -1);
      MEMORY[0x1BCCD775C](v34, -1, -1);
    }

    return 0;
  }
}

unint64_t sub_1BA1D8E68(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  sub_1BA1DAC4C();
  v2 = (_QWORD *)sub_1BA202844();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 40);
  while (1)
  {
    v5 = *((unsigned __int8 *)v4 - 8);
    v6 = *v4;
    swift_retain();
    result = sub_1BA1B9DB8(v5);
    if ((v8 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_BYTE *)(v2[6] + result) = v5;
    *(_QWORD *)(v2[7] + 8 * result) = v6;
    v9 = v2[2];
    v10 = __OFADD__(v9, 1);
    v11 = v9 + 1;
    if (v10)
      goto LABEL_11;
    v2[2] = v11;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1BA1D8F64(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  _OWORD v15[2];
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  sub_1BA1D16A0();
  v2 = sub_1BA202844();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1BA1DACD8(v6, (uint64_t)v15);
    result = sub_1BA1CE30C((uint64_t)v15);
    if ((v8 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v9 = v3[6] + 40 * result;
    v10 = v15[0];
    v11 = v15[1];
    *(_QWORD *)(v9 + 32) = v16;
    *(_OWORD *)v9 = v10;
    *(_OWORD *)(v9 + 16) = v11;
    result = (unint64_t)sub_1BA1B43D0(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 72;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1BA1D908C(unsigned __int8 *a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  void *v8;
  char v9;
  uint64_t v10;
  char v11;

  v3 = *a1;
  if (*(_QWORD *)(a2 + 16))
  {
    swift_bridgeObjectRetain();
    __asm { BR              X9 }
  }
  v6 = a3[5];
  v5 = a3[6];
  __swift_project_boxed_opaque_existential_1(a3 + 2, v6);
  v11 = v3;
  EngagementRequestFactoryType.createRequest(for:context:)(&v11, 0, v6, *(_QWORD *)(v5 + 8));
  swift_bridgeObjectRelease();
  sub_1BA1D1628(v8, v9);
  sub_1BA1CEEE8((uint64_t)v8, v9, v3);
  sub_1BA1C02F8(v8, v9);
  sub_1BA1C02E8(v10);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BA1D9720(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;

  v4 = v3;
  v8 = (unint64_t *)sub_1BA2024A8();
  v9 = *(v8 - 1);
  MEMORY[0x1E0C80A78](v8);
  v11 = (uint64_t *)((char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = *a3;
  sub_1BA1C1078(0, (unint64_t *)&qword_1ED5AF230);
  *v11 = sub_1BA2026AC();
  (*(void (**)(uint64_t *, _QWORD, unint64_t *))(v9 + 104))(v11, *MEMORY[0x1E0DEF740], v8);
  v13 = sub_1BA2024C0();
  (*(void (**)(uint64_t *, unint64_t *))(v9 + 8))(v11, v8);
  if ((v13 & 1) != 0)
  {
    v8 = (unint64_t *)(v4 + 56);
    swift_beginAccess();
    v14 = *(_QWORD *)(v4 + 56);
    if (!*(_QWORD *)(v14 + 16) || (v15 = sub_1BA1B9DB8(v12), (v16 & 1) == 0))
    {
      swift_endAccess();
LABEL_18:
      sub_1BA1DA6D8(0, (unint64_t *)&qword_1ED5AF5A0);
      v23 = swift_allocObject();
      *(_OWORD *)(v23 + 16) = xmmword_1BA203770;
      type metadata accessor for WeakEngagementUIEventObserver();
      v24 = swift_allocObject();
      *(_QWORD *)(v24 + 24) = 0;
      swift_unknownObjectWeakInit();
      *(_QWORD *)(v24 + 24) = a2;
      swift_unknownObjectWeakAssign();
      *(_QWORD *)(v23 + 32) = v24;
      v34 = v23;
      sub_1BA2025F8();
      v25 = v34;
      swift_beginAccess();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v35 = *v8;
      *v8 = 0x8000000000000000;
      sub_1BA1D6528(v25, v12, isUniquelyReferenced_nonNull_native);
      v27 = v35;
      goto LABEL_19;
    }
    v13 = *(_QWORD *)(*(_QWORD *)(v14 + 56) + 8 * v15);
    v35 = v13;
    swift_endAccess();
    if (!(v13 >> 62))
    {
      v17 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n();
      if (v17)
      {
        v32 = a2;
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
LABEL_7:
        v18 = 4;
        while (1)
        {
          v19 = v18 - 4;
          if ((v13 & 0xC000000000000001) != 0)
          {
            a2 = MEMORY[0x1BCCD703C](v18 - 4, v13);
            v20 = v18 - 3;
            if (__OFADD__(v19, 1))
              goto LABEL_20;
          }
          else
          {
            a2 = *(_QWORD *)(v13 + 8 * v18);
            swift_retain();
            v20 = v18 - 3;
            if (__OFADD__(v19, 1))
            {
LABEL_20:
              __break(1u);
              goto LABEL_21;
            }
          }
          v21 = MEMORY[0x1BCCD77D4](a2 + 16);
          swift_release();
          if (v21)
          {
            swift_unknownObjectRelease();
            if (v21 == a1)
            {
              swift_unknownObjectRelease();
              swift_bridgeObjectRelease_n();
              return swift_bridgeObjectRelease();
            }
          }
          ++v18;
          if (v20 == v17)
            goto LABEL_24;
        }
      }
      goto LABEL_27;
    }
  }
  else
  {
LABEL_21:
    __break(1u);
  }
  swift_bridgeObjectRetain_n();
  if (!sub_1BA202820())
  {
LABEL_27:
    swift_bridgeObjectRelease_n();
    goto LABEL_18;
  }
  v32 = a2;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  v17 = sub_1BA202820();
  if (v17)
    goto LABEL_7;
LABEL_24:
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease_n();
  type metadata accessor for WeakEngagementUIEventObserver();
  v28 = swift_allocObject();
  *(_QWORD *)(v28 + 24) = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)(v28 + 24) = v32;
  v29 = swift_unknownObjectWeakAssign();
  MEMORY[0x1BCCD6E80](v29);
  if (*(_QWORD *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1BA202604();
  sub_1BA202610();
  sub_1BA2025F8();
  v30 = v35;
  swift_beginAccess();
  v31 = swift_isUniquelyReferenced_nonNull_native();
  v33 = *v8;
  *v8 = 0x8000000000000000;
  sub_1BA1D6528(v30, v12, v31);
  v27 = v33;
LABEL_19:
  *v8 = v27;
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

void sub_1BA1D9B38(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35[3];

  v4 = v3;
  v7 = (uint64_t *)sub_1BA2024A8();
  v8 = *(v7 - 1);
  MEMORY[0x1E0C80A78](v7);
  v10 = (uint64_t *)((char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = *a3;
  sub_1BA1C1078(0, (unint64_t *)&qword_1ED5AF230);
  *v10 = sub_1BA2026AC();
  (*(void (**)(uint64_t *, _QWORD, uint64_t *))(v8 + 104))(v10, *MEMORY[0x1E0DEF740], v7);
  v12 = sub_1BA2024C0();
  (*(void (**)(uint64_t *, uint64_t *))(v8 + 8))(v10, v7);
  if ((v12 & 1) != 0)
  {
    v7 = (uint64_t *)(v4 + 56);
    swift_beginAccess();
    v13 = *(_QWORD *)(v4 + 56);
    if (!*(_QWORD *)(v13 + 16) || (v14 = sub_1BA1B9DB8(v11), (v15 & 1) == 0))
    {
      swift_endAccess();
LABEL_23:
      if (qword_1ED5AFB58 != -1)
        swift_once();
      v25 = sub_1BA20243C();
      __swift_project_value_buffer(v25, (uint64_t)qword_1ED5B08D0);
      v26 = sub_1BA202424();
      v27 = sub_1BA202670();
      if (os_log_type_enabled(v26, v27))
      {
        v28 = (uint8_t *)swift_slowAlloc();
        v29 = swift_slowAlloc();
        v35[0] = v29;
        *(_DWORD *)v28 = 136315138;
        LOBYTE(v34) = v11;
        v30 = EngagementUIPlacement.rawValue.getter();
        v34 = sub_1BA1BDA3C(v30, v31, v35);
        sub_1BA2026E8();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1BA1AE000, v26, v27, "Cannot remove observer for placement: [%s]", v28, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1BCCD775C](v29, -1, -1);
        MEMORY[0x1BCCD775C](v28, -1, -1);
      }

      return;
    }
    v12 = *(_QWORD *)(*(_QWORD *)(v13 + 56) + 8 * v14);
    swift_endAccess();
    if (!(v12 >> 62))
    {
      v16 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n();
      swift_unknownObjectRetain();
      if (v16)
        goto LABEL_6;
      goto LABEL_22;
    }
  }
  else
  {
LABEL_20:
    __break(1u);
  }
  swift_bridgeObjectRetain_n();
  swift_unknownObjectRetain();
  v16 = sub_1BA202820();
  if (!v16)
  {
LABEL_22:
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease_n();
    goto LABEL_23;
  }
LABEL_6:
  v17 = 4;
  while (1)
  {
    v18 = v17 - 4;
    if ((v12 & 0xC000000000000001) != 0)
    {
      v19 = MEMORY[0x1BCCD703C](v17 - 4, v12);
      v20 = v17 - 3;
      if (__OFADD__(v18, 1))
        goto LABEL_19;
    }
    else
    {
      v19 = *(_QWORD *)(v12 + 8 * v17);
      swift_retain();
      v20 = v17 - 3;
      if (__OFADD__(v18, 1))
      {
LABEL_19:
        __break(1u);
        goto LABEL_20;
      }
    }
    v21 = MEMORY[0x1BCCD77D4](v19 + 16);
    if (v21)
    {
      v22 = v21;
      swift_unknownObjectRelease();
      if (v22 == a1)
        break;
    }
    swift_release();
    ++v17;
    if (v20 == v16)
      goto LABEL_22;
  }
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_retain();
  v23 = sub_1BA1D13F4(v12, v19);
  swift_bridgeObjectRelease();
  swift_release();
  if (v23 >> 62)
  {
    swift_bridgeObjectRetain();
    v32 = sub_1BA202820();
    swift_bridgeObjectRelease();
    if (v32)
      goto LABEL_17;
  }
  else if (*(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_17:
    swift_beginAccess();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v34 = *v7;
    *v7 = 0x8000000000000000;
    sub_1BA1D6528(v23, v11, isUniquelyReferenced_nonNull_native);
    *v7 = v34;
    swift_bridgeObjectRelease();
    swift_endAccess();
    swift_release();
    return;
  }
  swift_bridgeObjectRelease();
  swift_beginAccess();
  sub_1BA200188(v11);
  swift_endAccess();
  swift_release();
  swift_bridgeObjectRelease();
}

void sub_1BA1D9FB4(uint64_t a1)
{
  unsigned int v1;
  char v2;

  v1 = *(unsigned __int8 *)(a1 + 8);
  if (v1 >> 6)
    v2 = v1 & 0x3F;
  else
    v2 = *(_QWORD *)a1;
  __asm { BR              X10 }
}

uint64_t sub_1BA1DA028()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t i;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;
  char v14;
  uint64_t v15;
  char v16;

  swift_bridgeObjectRelease();
  swift_beginAccess();
  v4 = *(_QWORD *)(v1 + 56);
  if (!*(_QWORD *)(v4 + 16))
    return swift_endAccess();
  v5 = sub_1BA1B9DB8(v0);
  if ((v6 & 1) == 0)
    return swift_endAccess();
  v7 = *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v5);
  swift_endAccess();
  if (v7 >> 62)
  {
    swift_bridgeObjectRetain_n();
    v8 = sub_1BA202820();
    if (v8)
      goto LABEL_5;
  }
  else
  {
    v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    if (v8)
    {
LABEL_5:
      if (v8 < 1)
      {
        __break(1u);
        JUMPOUT(0x1BA1DA1E8);
      }
      for (i = 0; i != v8; ++i)
      {
        if ((v7 & 0xC000000000000001) != 0)
        {
          v10 = MEMORY[0x1BCCD703C](i, v7);
        }
        else
        {
          v10 = *(_QWORD *)(v7 + 8 * i + 32);
          swift_retain();
        }
        if (MEMORY[0x1BCCD77D4](v10 + 16))
        {
          v11 = *(_QWORD *)(v10 + 24);
          ObjectType = swift_getObjectType();
          v15 = v2;
          v16 = v3;
          v14 = v0;
          (*(void (**)(uint64_t *, char *, uint64_t, uint64_t))(v11 + 8))(&v15, &v14, ObjectType, v11);
          swift_release();
          swift_unknownObjectRelease();
        }
        else
        {
          swift_release();
        }
      }
    }
  }
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_1BA1DA1F8()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1BA1DA224(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BA1D7AB0(a1, a2, a3);
}

uint64_t sub_1BA1DA244(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  return sub_1BA1D9720(a1, a2, a3);
}

void sub_1BA1DA264(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  sub_1BA1D9B38(a1, a2, a3);
}

void sub_1BA1DA284(uint64_t a1)
{
  sub_1BA1D9FB4(a1);
}

uint64_t sub_1BA1DA2A4()
{
  return sub_1BA2021CC();
}

uint64_t sub_1BA1DA2B0()
{
  return sub_1BA2021D8();
}

uint64_t sub_1BA1DA2BC()
{
  return sub_1BA2021B4();
}

uint64_t sub_1BA1DA2C8(uint64_t a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  void *v8;
  int64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t i;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  char v18;
  _QWORD *v19;
  char v20;
  unint64_t v21;
  uint64_t v22;
  _BOOL8 v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  char v27;
  unint64_t v28;
  char v29;
  char v30;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  BOOL v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t result;
  uint64_t v40;
  int64_t v41;
  _QWORD *v42;
  int64_t v45;
  unint64_t v46;
  void *v47;
  void *v48;
  unsigned __int8 v49;
  uint64_t v50;
  char v51;

  v4 = 1 << *(_BYTE *)(a1 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a1 + 56);
  v42 = a2 + 2;
  v41 = (unint64_t)(v4 + 63) >> 6;
  swift_bridgeObjectRetain();
  v7 = 0;
  if (v6)
    goto LABEL_38;
LABEL_7:
  v9 = v7 + 1;
  if (!__OFADD__(v7, 1))
  {
    if (v9 < v41)
    {
      v10 = *(_QWORD *)(v40 + 8 * v9);
      ++v7;
      if (v10)
        goto LABEL_22;
      v7 = v9 + 1;
      if (v9 + 1 >= v41)
        return swift_release();
      v10 = *(_QWORD *)(v40 + 8 * v7);
      if (v10)
        goto LABEL_22;
      v7 = v9 + 2;
      if (v9 + 2 >= v41)
        return swift_release();
      v10 = *(_QWORD *)(v40 + 8 * v7);
      if (v10)
        goto LABEL_22;
      v7 = v9 + 3;
      if (v9 + 3 >= v41)
        return swift_release();
      v10 = *(_QWORD *)(v40 + 8 * v7);
      if (v10)
      {
LABEL_22:
        v6 = (v10 - 1) & v10;
        for (i = __clz(__rbit64(v10)) + (v7 << 6); ; i = v38 | (v7 << 6))
        {
          v13 = *(unsigned __int8 *)(*(_QWORD *)(a1 + 48) + i);
          v14 = a2[5];
          v15 = a2[6];
          __swift_project_boxed_opaque_existential_1(v42, v14);
          v51 = v13;
          EngagementRequestFactoryType.createRequest(for:)(&v51, v14, *(_QWORD *)(v15 + 8));
          if (v49 == 255)
          {
            v47 = v48;
            swift_bridgeObjectRetain();
            v28 = sub_1BA1B9DB8(v13);
            v30 = v29;
            swift_bridgeObjectRelease();
            if ((v30 & 1) != 0)
            {
              isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              v32 = *a3;
              v48 = (void *)*a3;
              *a3 = 0x8000000000000000;
              if ((isUniquelyReferenced_nonNull_native & 1) == 0)
              {
                sub_1BA1F84D0();
                v32 = (uint64_t)v48;
              }
              v8 = *(void **)(*(_QWORD *)(v32 + 56) + 16 * v28);
              sub_1BA200F44(v28, v32);
              *a3 = v32;
              swift_bridgeObjectRelease();

            }
            sub_1BA1C02F8(v47, 255);
            sub_1BA1C02E8(v50);
            swift_bridgeObjectRelease();
            if (!v6)
              goto LABEL_7;
          }
          else
          {
            v46 = v6;
            v45 = v7;
            v16 = v48;
            v17 = v48;
            v18 = swift_isUniquelyReferenced_nonNull_native();
            v19 = (_QWORD *)*a3;
            v48 = v19;
            *a3 = 0x8000000000000000;
            v21 = sub_1BA1B9DB8(v13);
            v22 = v19[2];
            v23 = (v20 & 1) == 0;
            v24 = v22 + v23;
            if (__OFADD__(v22, v23))
            {
              __break(1u);
              goto LABEL_41;
            }
            v25 = v20;
            if (v19[3] >= v24)
            {
              if ((v18 & 1) == 0)
                sub_1BA1F84D0();
            }
            else
            {
              sub_1BA1F6B10(v24, v18);
              v26 = sub_1BA1B9DB8(v13);
              if ((v25 & 1) != (v27 & 1))
                goto LABEL_44;
              v21 = v26;
            }
            if ((v25 & 1) != 0)
            {
              v33 = v19[7] + 16 * v21;

              *(_QWORD *)v33 = v16;
              *(_BYTE *)(v33 + 8) = v49 & 1;
            }
            else
            {
              v19[(v21 >> 6) + 8] |= 1 << v21;
              *(_BYTE *)(v19[6] + v21) = v13;
              v34 = v19[7] + 16 * v21;
              *(_QWORD *)v34 = v16;
              *(_BYTE *)(v34 + 8) = v49 & 1;
              v35 = v19[2];
              v36 = __OFADD__(v35, 1);
              v37 = v35 + 1;
              if (v36)
                goto LABEL_42;
              v19[2] = v37;
            }
            *a3 = (uint64_t)v19;
            swift_bridgeObjectRelease();
            sub_1BA1C02F8(v16, v49);
            sub_1BA1C02E8(v50);
            swift_bridgeObjectRelease();
            v7 = v45;
            v6 = v46;
            if (!v46)
              goto LABEL_7;
          }
LABEL_38:
          v38 = __clz(__rbit64(v6));
          v6 &= v6 - 1;
        }
      }
      v11 = v9 + 4;
      if (v11 < v41)
      {
        v10 = *(_QWORD *)(v40 + 8 * v11);
        if (v10)
        {
          v7 = v11;
          goto LABEL_22;
        }
        while (1)
        {
          v7 = v11 + 1;
          if (__OFADD__(v11, 1))
            goto LABEL_43;
          if (v7 >= v41)
            return swift_release();
          v10 = *(_QWORD *)(v40 + 8 * v7);
          ++v11;
          if (v10)
            goto LABEL_22;
        }
      }
    }
    return swift_release();
  }
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  result = sub_1BA2029AC();
  __break(1u);
  return result;
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

void sub_1BA1DA6D8(uint64_t a1, unint64_t *a2)
{
  unint64_t v3;
  uint64_t v4;

  if (!*a2)
  {
    v3 = sub_1BA20297C();
    if (!v4)
      atomic_store(v3, a2);
  }
}

uint64_t sub_1BA1DA71C(uint64_t result, uint64_t a2, uint64_t a3)
{
  unint64_t *v4;
  uint64_t v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  unsigned __int8 v19;

  v4 = (unint64_t *)result;
  v5 = 0;
  v6 = 0;
  v7 = a3 + 56;
  v8 = 1 << *(_BYTE *)(a3 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & *(_QWORD *)(a3 + 56);
  v11 = (unint64_t)(v8 + 63) >> 6;
  while (1)
  {
    if (v10)
    {
      v12 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v13 = v12 | (v6 << 6);
      goto LABEL_5;
    }
    v14 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v14 >= v11)
      goto LABEL_24;
    v15 = *(_QWORD *)(v7 + 8 * v14);
    ++v6;
    if (!v15)
    {
      v6 = v14 + 1;
      if (v14 + 1 >= v11)
        goto LABEL_24;
      v15 = *(_QWORD *)(v7 + 8 * v6);
      if (!v15)
      {
        v6 = v14 + 2;
        if (v14 + 2 >= v11)
          goto LABEL_24;
        v15 = *(_QWORD *)(v7 + 8 * v6);
        if (!v15)
          break;
      }
    }
LABEL_20:
    v10 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v6 << 6);
LABEL_5:
    v19 = *(_BYTE *)(*(_QWORD *)(a3 + 48) + v13);
    result = sub_1BA1D85A8(&v19);
    if ((result & 1) != 0)
    {
      *(unint64_t *)((char *)v4 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      if (__OFADD__(v5++, 1))
      {
        __break(1u);
LABEL_24:
        swift_retain();
        return sub_1BA1BB1B0(v4, a2, v5, a3);
      }
    }
  }
  v16 = v14 + 3;
  if (v16 >= v11)
    goto LABEL_24;
  v15 = *(_QWORD *)(v7 + 8 * v16);
  if (v15)
  {
    v6 = v16;
    goto LABEL_20;
  }
  while (1)
  {
    v6 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v6 >= v11)
      goto LABEL_24;
    v15 = *(_QWORD *)(v7 + 8 * v6);
    ++v16;
    if (v15)
      goto LABEL_20;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_1BA1DA8B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v4;
  unsigned int v5;
  unint64_t v6;
  size_t v7;
  uint64_t isStackAllocationSafe;
  uint64_t v9;
  void *v10;
  _QWORD v12[2];

  v2 = v1;
  v12[1] = *MEMORY[0x1E0C80C00];
  v4 = *(_BYTE *)(a1 + 32);
  v5 = v4 & 0x3F;
  v6 = (unint64_t)((1 << v4) + 63) >> 6;
  v7 = 8 * v6;
  isStackAllocationSafe = swift_retain_n();
  if (v5 <= 0xD || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    bzero((char *)v12 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0), v7);
    swift_retain();
    v9 = sub_1BA1DA71C((uint64_t)v12 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0), v6, a1);
    swift_release();
    swift_release();
    if (v2)
      swift_willThrow();
    swift_release_n();
  }
  else
  {
    v10 = (void *)swift_slowAlloc();
    bzero(v10, v7);
    swift_retain();
    v9 = sub_1BA1DA71C((uint64_t)v10, v6, a1);
    swift_release();
    swift_release();
    MEMORY[0x1BCCD775C](v10, -1, -1);
    swift_release_n();
  }
  return v9;
}

uint64_t sub_1BA1DAA7C(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unsigned __int8 v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unsigned __int8 v12;
  uint64_t v13;

  v2 = v1;
  v3 = 0;
  v4 = *(_QWORD *)(result + 16);
  v5 = result + 32;
  v6 = MEMORY[0x1E0DEE9D8];
LABEL_2:
  if (v3 <= v4)
    v7 = v4;
  else
    v7 = v3;
  while (1)
  {
    if (v4 == v3)
      return v6;
    if (v7 == v3)
      break;
    v8 = *(_BYTE *)(v5 + v3++);
    v12 = v8;
    result = sub_1BA1D85A8(&v12);
    if ((result & 1) != 0)
    {
      result = swift_isUniquelyReferenced_nonNull_native();
      v13 = v6;
      v11 = v2;
      if ((result & 1) == 0)
      {
        result = sub_1BA1C2908(0, *(_QWORD *)(v6 + 16) + 1, 1);
        v6 = v13;
      }
      v10 = *(_QWORD *)(v6 + 16);
      v9 = *(_QWORD *)(v6 + 24);
      if (v10 >= v9 >> 1)
      {
        result = sub_1BA1C2908(v9 > 1, v10 + 1, 1);
        v6 = v13;
      }
      *(_QWORD *)(v6 + 16) = v10 + 1;
      *(_BYTE *)(v6 + v10 + 32) = v8;
      v2 = v11;
      goto LABEL_2;
    }
  }
  __break(1u);
  return result;
}

void sub_1BA1DAB8C()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF279470)
  {
    sub_1BA1DABF0();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF279470);
  }
}

void sub_1BA1DABF0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED5AF8D0)
  {
    v0 = sub_1BA202244();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED5AF8D0);
  }
}

void sub_1BA1DAC4C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF279478)
  {
    sub_1BA1DABF0();
    sub_1BA1C1D10();
    v0 = sub_1BA202850();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF279478);
  }
}

uint64_t sub_1BA1DACB8()
{
  uint64_t v0;

  return sub_1BA1D850C(*(void (**)(uint64_t, _QWORD))(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_BYTE *)(v0 + 48));
}

uint64_t sub_1BA1DACD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA1DAD1C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1BA1DAD1C()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF279480)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF279480);
  }
}

uint64_t sub_1BA1DAD8C(uint64_t a1)
{
  void *v1;
  void *v2;
  id v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  void *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t i;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;

  v2 = v1;
  objc_opt_self();
  if (!swift_dynamicCastObjCClass() || *(_BYTE *)(a1 + 24) != 1)
    goto LABEL_29;
  objc_msgSend(v1, sel_setModalPresentationStyle_, 7);
  v4 = objc_msgSend(v1, sel_popoverPresentationController);
  if (v4)
  {
    v5 = v4;
    swift_beginAccess();
    objc_msgSend(v5, sel_setSourceItem_, MEMORY[0x1BCCD77D4](a1 + 32));
    swift_unknownObjectRelease();

  }
  v6 = objc_msgSend(v2, sel_popoverPresentationController);
  if (v6)
  {
    v7 = v6;
    swift_beginAccess();
    v8 = (void *)MEMORY[0x1BCCD77D4](a1 + 40);
    objc_msgSend(v7, sel_setSourceView_, v8);

  }
  v9 = objc_msgSend(v2, sel_popoverPresentationController);
  if (v9)
  {
    v10 = v9;
    objc_msgSend(v9, sel_setSourceRect_, *(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64), *(double *)(a1 + 72));

  }
  v11 = objc_msgSend(v2, sel_popoverPresentationController);
  if (v11)
  {
    v12 = v11;
    objc_msgSend(v11, sel_setPermittedArrowDirections_, *(_QWORD *)(a1 + 112));

  }
  v13 = objc_msgSend(v2, sel_popoverPresentationController);
  if (!v13)
    goto LABEL_29;
  v14 = v13;
  swift_beginAccess();
  v15 = *(_QWORD *)(a1 + 80);
  if (v15)
  {
    v23 = MEMORY[0x1E0DEE9D8];
    if (v15 >> 62)
    {
      swift_bridgeObjectRetain_n();
      result = sub_1BA202820();
      v16 = result;
      if (result)
        goto LABEL_15;
    }
    else
    {
      v16 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
      result = swift_bridgeObjectRetain_n();
      if (v16)
      {
LABEL_15:
        if (v16 < 1)
        {
          __break(1u);
          return result;
        }
        for (i = 0; i != v16; ++i)
        {
          if ((v15 & 0xC000000000000001) != 0)
            MEMORY[0x1BCCD703C](i, v15);
          else
            swift_retain();
          v19 = sub_1BA202370();
          v20 = swift_release();
          if (v19)
          {
            MEMORY[0x1BCCD6E80](v20);
            if (*(_QWORD *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
              sub_1BA202604();
            sub_1BA202610();
            sub_1BA2025F8();
          }
        }
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BA1C1078(0, (unint64_t *)&qword_1ED5AF730);
    v15 = sub_1BA2025D4();
    swift_bridgeObjectRelease();
  }
  objc_msgSend(v14, sel_setPassthroughViews_, v15);

LABEL_29:
  type metadata accessor for EngagementBubbleTipViewController();
  result = swift_dynamicCastClass();
  if (result)
  {
    v21 = *(_BYTE *)(a1 + 128);
    v22 = result + OBJC_IVAR____TtC14NewsEngagement33EngagementBubbleTipViewController_bubbleTipSizing;
    *(_QWORD *)v22 = *(_QWORD *)(a1 + 120);
    *(_BYTE *)(v22 + 8) = v21;
  }
  return result;
}

Swift::Void __swiftcall UIViewController.applyModifier(bubbleTipSourceView:bubbleTipSourceRect:)(UIView *bubbleTipSourceView, __C::CGRect bubbleTipSourceRect)
{
  void *v2;
  double height;
  double width;
  double y;
  double x;
  id v8;
  void *v9;
  id v10;
  void *v11;
  id v12;

  height = bubbleTipSourceRect.size.height;
  width = bubbleTipSourceRect.size.width;
  y = bubbleTipSourceRect.origin.y;
  x = bubbleTipSourceRect.origin.x;
  v8 = objc_msgSend(v2, sel_popoverPresentationController);
  if (v8)
  {
    v9 = v8;
    objc_msgSend(v8, sel_setSourceItem_, 0);

  }
  v10 = objc_msgSend(v2, sel_popoverPresentationController);
  if (v10)
  {
    v11 = v10;
    objc_msgSend(v10, sel_setSourceView_, bubbleTipSourceView);

  }
  v12 = objc_msgSend(v2, sel_popoverPresentationController);
  objc_msgSend(v12, sel_setSourceRect_, x, y, width, height);

}

void UIViewController.applyModifier(bubbleTipSourceItem:)(uint64_t a1)
{
  void *v1;
  id v3;
  void *v4;
  id v5;
  void *v6;
  id v7;
  id v8;

  v3 = objc_msgSend(v1, sel_popoverPresentationController);
  if (v3)
  {
    v4 = v3;
    objc_msgSend(v3, sel_setSourceItem_, a1);

  }
  v5 = objc_msgSend(v1, sel_popoverPresentationController);
  if (v5)
  {
    v6 = v5;
    objc_msgSend(v5, sel_setSourceView_, 0);

  }
  v7 = objc_msgSend(v1, sel_popoverPresentationController);
  if (v7)
  {
    v8 = v7;
    objc_msgSend(v7, sel_setSourceRect_, *MEMORY[0x1E0C9D628], *(double *)(MEMORY[0x1E0C9D628] + 8), *(double *)(MEMORY[0x1E0C9D628] + 16), *(double *)(MEMORY[0x1E0C9D628] + 24));

  }
}

Swift::Void __swiftcall UIViewController.applyModifier(toastCustomTabBarController:)(UITabBarController *toastCustomTabBarController)
{
  void *v1;
  id v3;
  void *v4;
  id v5;

  objc_opt_self();
  if (swift_dynamicCastObjCClass())
  {
    v3 = objc_msgSend(v1, sel_presentationController);
    if (v3)
    {
      v5 = v3;
      objc_opt_self();
      v4 = (void *)swift_dynamicCastObjCClass();
      if (v4)
        objc_msgSend(v4, sel_setRelativeTabBarController_, toastCustomTabBarController);

    }
  }
}

Swift::Void __swiftcall UIViewController.applyModifier(passthroughViews:)(Swift::OpaquePointer_optional passthroughViews)
{
  void *v1;
  void *rawValue;
  id v3;
  void *v4;
  uint64_t v5;
  id v6;

  rawValue = passthroughViews.value._rawValue;
  objc_opt_self();
  if (swift_dynamicCastObjCClass())
  {
    v3 = objc_msgSend(v1, sel_popoverPresentationController);
    if (v3)
    {
      v4 = v3;
      if (rawValue)
      {
        sub_1BA1C1078(0, (unint64_t *)&qword_1ED5AF730);
        v5 = sub_1BA2025D4();
      }
      else
      {
        v5 = 0;
      }
      v6 = (id)v5;
      objc_msgSend(v4, sel_setPassthroughViews_);

    }
  }
}

Swift::Void __swiftcall UIViewController.applyModifier(isModalInPresentation:)(Swift::Bool isModalInPresentation)
{
  void *v1;

  objc_opt_self();
  if (swift_dynamicCastObjCClass())
    objc_msgSend(v1, sel_setModalInPresentation_, isModalInPresentation);
}

void UIViewController.loadAssets(completion:)(void (*a1)(_QWORD, _QWORD), uint64_t a2)
{
  void *v2;
  id v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  NSObject *v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  _QWORD *v17;
  NSObject *v18;
  _QWORD *v19;
  void *v20;
  _BYTE *v21;
  void (*v22)(_QWORD, _QWORD);
  __int128 aBlock;
  __int128 v24;
  void (*v25)(char, void *);
  uint64_t v26;
  _QWORD v27[3];
  uint64_t v28;
  uint64_t v29;

  sub_1BA1C1078(0, &qword_1ED5AF2E0);
  sub_1BA1DB798();
  v5 = v2;
  if (swift_dynamicCast())
  {
    sub_1BA1B29EC(&aBlock, (uint64_t)v27);
    v6 = v28;
    v7 = v29;
    __swift_project_boxed_opaque_existential_1(v27, v28);
    v8 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v6, v7);
    v9 = swift_allocObject();
    *(_QWORD *)(v9 + 16) = a1;
    *(_QWORD *)(v9 + 24) = a2;
    v25 = sub_1BA1DBB48;
    v26 = v9;
    *(_QWORD *)&aBlock = MEMORY[0x1E0C809B0];
    *((_QWORD *)&aBlock + 1) = 1107296256;
    *(_QWORD *)&v24 = sub_1BA1DB9D0;
    *((_QWORD *)&v24 + 1) = &block_descriptor_2;
    v10 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v8, sel_addFinishBlock_, v10);
    _Block_release(v10);

    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v27);
  }
  else
  {
    v25 = 0;
    aBlock = 0u;
    v24 = 0u;
    sub_1BA1DB7EC((uint64_t)&aBlock);
    if (qword_1ED5AFB58 != -1)
      swift_once();
    v11 = sub_1BA20243C();
    __swift_project_value_buffer(v11, (uint64_t)qword_1ED5B08D0);
    v12 = v5;
    v13 = sub_1BA202424();
    v14 = sub_1BA202670();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      v16 = swift_slowAlloc();
      v22 = a1;
      *(_QWORD *)&aBlock = v12;
      v17 = (_QWORD *)v16;
      *(_DWORD *)v15 = 138412290;
      v18 = v12;
      sub_1BA2026E8();
      *v17 = v12;

      _os_log_impl(&dword_1BA1AE000, v13, v14, "Invalid type for loadAssets: %@", v15, 0xCu);
      sub_1BA1DBAC0();
      swift_arrayDestroy();
      v19 = v17;
      a1 = v22;
      MEMORY[0x1BCCD775C](v19, -1, -1);
      MEMORY[0x1BCCD775C](v15, -1, -1);
    }
    else
    {

      v13 = v12;
    }

    sub_1BA1DBA7C();
    v20 = (void *)swift_allocError();
    *v21 = 0;
    a1(v20, 1);

  }
}

unint64_t sub_1BA1DB798()
{
  unint64_t result;

  result = qword_1ED5AF4E8;
  if (!qword_1ED5AF4E8)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED5AF4E8);
  }
  return result;
}

uint64_t sub_1BA1DB7EC(uint64_t a1)
{
  uint64_t v2;

  sub_1BA1DB828();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1BA1DB828()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF279488)
  {
    sub_1BA1DB798();
    v0 = sub_1BA2026DC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF279488);
  }
}

void sub_1BA1DB87C(char a1, void *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v7;
  id v8;
  id v9;
  uint64_t v11;

  if (a2)
  {
    v7 = (_QWORD *)swift_allocObject();
    v7[2] = a3;
    v7[3] = a4;
    v7[4] = a2;
    v8 = a2;
    swift_retain();
    v9 = a2;
    sub_1BA202418();
    swift_release();

  }
  else
  {
    v11 = swift_allocObject();
    *(_QWORD *)(v11 + 16) = a3;
    *(_QWORD *)(v11 + 24) = a4;
    *(_BYTE *)(v11 + 32) = a1 & 1;
    swift_retain();
    sub_1BA202418();
    swift_release();
  }
}

void sub_1BA1DB954(void (*a1)(void *, _BOOL8), uint64_t a2, char a3)
{
  void *v5;
  _BYTE *v6;
  _BOOL8 v7;

  if ((a3 & 1) != 0)
  {
    v5 = 0;
  }
  else
  {
    sub_1BA1DBA7C();
    v5 = (void *)swift_allocError();
    *v6 = 1;
  }
  v7 = (a3 & 1) == 0;
  a1(v5, v7);
  sub_1BA1DBD90(v5, v7);
}

void sub_1BA1DB9D0(uint64_t a1, uint64_t a2, void *a3)
{
  void (*v5)(uint64_t, void *);
  id v6;

  v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  swift_retain();
  v6 = a3;
  v5(a2, a3);
  swift_release();

}

BOOL sub_1BA1DBA30(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

id sub_1BA1DBA58()
{
  id *v0;

  return objc_msgSend(*v0, sel_loadPromise);
}

unint64_t sub_1BA1DBA7C()
{
  unint64_t result;

  result = qword_1EF279490;
  if (!qword_1EF279490)
  {
    result = MEMORY[0x1BCCD76CC](&unk_1BA20413C, &type metadata for LoadPromiseError);
    atomic_store(result, (unint64_t *)&qword_1EF279490);
  }
  return result;
}

void sub_1BA1DBAC0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED5AFBC0)
  {
    sub_1BA1C1078(255, (unint64_t *)&qword_1ED5AFBB0);
    v0 = sub_1BA2026DC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED5AFBC0);
  }
}

uint64_t sub_1BA1DBB24()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1BA1DBB48(char a1, void *a2)
{
  uint64_t v2;

  sub_1BA1DB87C(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

uint64_t getEnumTagSinglePayload for LoadPromiseError(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for LoadPromiseError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BA1DBC34 + 4 * byte_1BA204035[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BA1DBC68 + 4 * byte_1BA204030[v4]))();
}

uint64_t sub_1BA1DBC68(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA1DBC70(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BA1DBC78);
  return result;
}

uint64_t sub_1BA1DBC84(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BA1DBC8CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BA1DBC90(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA1DBC98(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_1BA1DBCA4(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for LoadPromiseError()
{
  return &type metadata for LoadPromiseError;
}

unint64_t sub_1BA1DBCC4()
{
  unint64_t result;

  result = qword_1EF279498;
  if (!qword_1EF279498)
  {
    result = MEMORY[0x1BCCD76CC](&unk_1BA204114, &type metadata for LoadPromiseError);
    atomic_store(result, (unint64_t *)&qword_1EF279498);
  }
  return result;
}

uint64_t sub_1BA1DBD08()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1BA1DBD2C()
{
  uint64_t v0;

  sub_1BA1DB954(*(void (**)(void *, _BOOL8))(v0 + 16), *(_QWORD *)(v0 + 24), *(_BYTE *)(v0 + 32));
}

uint64_t sub_1BA1DBD38()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1BA1DBD64()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, uint64_t))(v0 + 16))(*(_QWORD *)(v0 + 32), 1);
}

void sub_1BA1DBD90(id a1, char a2)
{
  if ((a2 & 1) != 0)

}

void sub_1BA1DBDA0()
{
  char *v0;
  double v1;
  id v2;
  id v3;
  id v4;
  void *v5;
  double v6;
  CGFloat v7;
  double v8;
  CGFloat v9;
  double v10;
  CGFloat v11;
  double v12;
  CGFloat v13;
  double Width;
  id v15;
  void *v16;
  id v17;
  void *v18;
  double v19;
  double v20;
  double v21;
  id v22;
  CGRect v23;

  if ((v0[OBJC_IVAR____TtC14NewsEngagement33EngagementBubbleTipViewController_bubbleTipSizing + 8] & 1) == 0)
  {
    v1 = *(double *)&v0[OBJC_IVAR____TtC14NewsEngagement33EngagementBubbleTipViewController_bubbleTipSizing];
    v2 = objc_msgSend(v0, sel_presentingViewController);
    if (v2)
    {
      v22 = v2;
      v3 = objc_msgSend(v0, sel_popoverPresentationController);
      objc_msgSend(v3, sel_setPopoverLayoutMargins_, 0.0, v1, 0.0, v1);

      v4 = objc_msgSend(v22, sel_view);
      if (v4)
      {
        v5 = v4;
        objc_msgSend(v4, sel_bounds);
        v7 = v6;
        v9 = v8;
        v11 = v10;
        v13 = v12;

        v23.origin.x = v7;
        v23.origin.y = v9;
        v23.size.width = v11;
        v23.size.height = v13;
        Width = CGRectGetWidth(v23);
        v15 = objc_msgSend(v0, sel_view);
        if (v15)
        {
          v16 = v15;
          objc_msgSend(v15, sel_setNeedsLayout);

          v17 = objc_msgSend(v0, sel_view);
          if (v17)
          {
            v18 = v17;
            v19 = Width - (v1 + v1);
            objc_msgSend(v17, sel_sizeThatFits_, v19, 1.79769313e308);
            v21 = v20;

            objc_msgSend(v0, sel_setPreferredContentSize_, v19, v21);
            return;
          }
          goto LABEL_10;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
LABEL_10:
      __break(1u);
    }
  }
}

id sub_1BA1DC024(char a1)
{
  void *v1;
  void *v2;
  objc_class *ObjectType;
  id v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  void *v11;
  uint64_t v12;
  void *v13;
  objc_super v15;

  v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  v5 = objc_msgSend(v1, sel_popoverPresentationController);
  if (v5)
  {
    v6 = v5;
    v7 = objc_msgSend(v5, sel_passthroughViews);

    if (v7)
    {
LABEL_7:

      goto LABEL_8;
    }
  }
  v8 = objc_msgSend(v2, sel_presentingViewController);
  if (v8)
  {
    v9 = v8;
    v7 = objc_msgSend(v8, sel_view);

    if (v7)
    {
      v10 = objc_msgSend(v2, sel_popoverPresentationController);
      if (v10)
      {
        v11 = v10;
        sub_1BA1DC81C();
        v12 = swift_allocObject();
        *(_OWORD *)(v12 + 16) = xmmword_1BA203770;
        *(_QWORD *)(v12 + 32) = v7;
        sub_1BA2025F8();
        sub_1BA1DC874();
        v7 = v7;
        v13 = (void *)sub_1BA2025D4();
        swift_bridgeObjectRelease();
        objc_msgSend(v11, sel_setPassthroughViews_, v13);

      }
      goto LABEL_7;
    }
  }
LABEL_8:
  v15.receiver = v2;
  v15.super_class = ObjectType;
  return objc_msgSendSuper2(&v15, sel_viewWillAppear_, a1 & 1);
}

void sub_1BA1DC244(void *a1, double a2, double a3)
{
  void *v3;
  uint64_t v7;
  void *v8;
  _QWORD v9[6];
  objc_super v10;

  v10.receiver = v3;
  v10.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v10, sel_viewWillTransitionToSize_withTransitionCoordinator_, a1, a2, a3);
  v7 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v9[4] = sub_1BA1DC80C;
  v9[5] = v7;
  v9[0] = MEMORY[0x1E0C809B0];
  v9[1] = 1107296256;
  v9[2] = sub_1BA1DC510;
  v9[3] = &block_descriptor_3;
  v8 = _Block_copy(v9);
  swift_release();
  objc_msgSend(a1, sel_animateAlongsideTransition_completion_, v8, 0);
  _Block_release(v8);
}

void sub_1BA1DC338(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char *v3;
  void *v4;
  double v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  void *v10;
  double v11;
  CGFloat v12;
  double v13;
  CGFloat v14;
  double v15;
  CGFloat v16;
  double v17;
  CGFloat v18;
  double Width;
  id v20;
  void *v21;
  id v22;
  void *v23;
  double v24;
  double v25;
  double v26;
  CGRect v27;

  v2 = a2 + 16;
  swift_beginAccess();
  v3 = (char *)MEMORY[0x1BCCD77D4](v2);
  if (v3)
  {
    v4 = v3;
    if ((v3[OBJC_IVAR____TtC14NewsEngagement33EngagementBubbleTipViewController_bubbleTipSizing + 8] & 1) != 0
      || (v5 = *(double *)&v3[OBJC_IVAR____TtC14NewsEngagement33EngagementBubbleTipViewController_bubbleTipSizing],
          (v6 = objc_msgSend(v3, sel_presentingViewController)) == 0))
    {
      v7 = v4;
      goto LABEL_9;
    }
    v7 = v6;
    v8 = objc_msgSend(v4, sel_popoverPresentationController);
    objc_msgSend(v8, sel_setPopoverLayoutMargins_, 0.0, v5, 0.0, v5);

    v9 = objc_msgSend(v7, sel_view);
    if (v9)
    {
      v10 = v9;
      objc_msgSend(v9, sel_bounds);
      v12 = v11;
      v14 = v13;
      v16 = v15;
      v18 = v17;

      v27.origin.x = v12;
      v27.origin.y = v14;
      v27.size.width = v16;
      v27.size.height = v18;
      Width = CGRectGetWidth(v27);
      v20 = objc_msgSend(v4, sel_view);
      if (v20)
      {
        v21 = v20;
        objc_msgSend(v20, sel_setNeedsLayout);

        v22 = objc_msgSend(v4, sel_view);
        if (v22)
        {
          v23 = v22;
          v24 = Width - (v5 + v5);
          objc_msgSend(v22, sel_sizeThatFits_, v24, 1.79769313e308);
          v26 = v25;

          objc_msgSend(v4, sel_setPreferredContentSize_, v24, v26);
LABEL_9:

          return;
        }
LABEL_13:
        __break(1u);
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_13;
  }
}

uint64_t sub_1BA1DC510(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v2 = swift_unknownObjectRetain();
  v1(v2);
  swift_release();
  return swift_unknownObjectRelease();
}

uint64_t type metadata accessor for EngagementBubbleTipViewController()
{
  return objc_opt_self();
}

uint64_t sub_1BA1DC7E8()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1BA1DC80C(uint64_t a1)
{
  uint64_t v1;

  sub_1BA1DC338(a1, v1);
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

void sub_1BA1DC81C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED5AF5A0)
  {
    v0 = sub_1BA20297C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED5AF5A0);
  }
}

unint64_t sub_1BA1DC874()
{
  unint64_t result;

  result = qword_1ED5AF730;
  if (!qword_1ED5AF730)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED5AF730);
  }
  return result;
}

void sub_1BA1DC8B0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2794A8)
  {
    sub_1BA1DC904();
    v0 = sub_1BA20297C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2794A8);
  }
}

unint64_t sub_1BA1DC904()
{
  unint64_t result;

  result = qword_1EF2794B0;
  if (!qword_1EF2794B0)
  {
    sub_1BA1DC93C();
    result = swift_getExistentialMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF2794B0);
  }
  return result;
}

unint64_t sub_1BA1DC93C()
{
  unint64_t result;

  result = qword_1EF2794B8;
  if (!qword_1EF2794B8)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF2794B8);
  }
  return result;
}

void sub_1BA1DC994(char *a1)
{
  double v2;
  id v3;
  id v4;
  id v5;
  void *v6;
  double v7;
  CGFloat v8;
  double v9;
  CGFloat v10;
  double v11;
  CGFloat v12;
  double v13;
  CGFloat v14;
  double Width;
  id v16;
  void *v17;
  id v18;
  void *v19;
  double v20;
  double v21;
  double v22;
  id v23;
  CGRect v24;

  if ((a1[OBJC_IVAR____TtC14NewsEngagement33EngagementBubbleTipViewController_bubbleTipSizing + 8] & 1) == 0)
  {
    v2 = *(double *)&a1[OBJC_IVAR____TtC14NewsEngagement33EngagementBubbleTipViewController_bubbleTipSizing];
    v3 = objc_msgSend(a1, sel_presentingViewController);
    if (v3)
    {
      v23 = v3;
      v4 = objc_msgSend(a1, sel_popoverPresentationController);
      objc_msgSend(v4, sel_setPopoverLayoutMargins_, 0.0, v2, 0.0, v2);

      v5 = objc_msgSend(v23, sel_view);
      if (v5)
      {
        v6 = v5;
        objc_msgSend(v5, sel_bounds);
        v8 = v7;
        v10 = v9;
        v12 = v11;
        v14 = v13;

        v24.origin.x = v8;
        v24.origin.y = v10;
        v24.size.width = v12;
        v24.size.height = v14;
        Width = CGRectGetWidth(v24);
        v16 = objc_msgSend(a1, sel_view);
        if (v16)
        {
          v17 = v16;
          objc_msgSend(v16, sel_setNeedsLayout);

          v18 = objc_msgSend(a1, sel_view);
          if (v18)
          {
            v19 = v18;
            v20 = Width - (v2 + v2);
            objc_msgSend(v18, sel_sizeThatFits_, v20, 1.79769313e308);
            v22 = v21;

            objc_msgSend(a1, sel_setPreferredContentSize_, v20, v22);
            return;
          }
          goto LABEL_10;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
LABEL_10:
      __break(1u);
    }
  }
}

BOOL static EngagementViewLayoutStyle.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t EngagementViewLayoutStyle.hash(into:)()
{
  return sub_1BA202A0C();
}

uint64_t EngagementViewLayoutStyle.hashValue.getter()
{
  sub_1BA202A00();
  sub_1BA202A0C();
  return sub_1BA202A18();
}

uint64_t EngagementViewConfiguration.overriddenStyle.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

void EngagementViewConfiguration.layoutStyle.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 24);
}

uint64_t sub_1BA1DCBF0()
{
  uint64_t v0;

  swift_beginAccess();
  return MEMORY[0x1BCCD77D4](v0 + 32);
}

uint64_t sub_1BA1DCC30()
{
  swift_beginAccess();
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*sub_1BA1DCC80(_QWORD *a1))(void **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  swift_beginAccess();
  v3[3] = MEMORY[0x1BCCD77D4](v1 + 32);
  return sub_1BA1DCCE8;
}

void sub_1BA1DCCE8(void **a1, char a2)
{
  void *v3;

  v3 = *a1;
  swift_unknownObjectWeakAssign();
  if ((a2 & 1) != 0)
  {
    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_unknownObjectRelease();
  }
  free(v3);
}

uint64_t sub_1BA1DCD54()
{
  uint64_t v0;

  swift_beginAccess();
  return MEMORY[0x1BCCD77D4](v0 + 40);
}

void sub_1BA1DCD94(void *a1)
{
  swift_beginAccess();
  swift_unknownObjectWeakAssign();

}

void (*sub_1BA1DCDE0(_QWORD *a1))(id **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  swift_beginAccess();
  v3[3] = MEMORY[0x1BCCD77D4](v1 + 40);
  return sub_1BA1DCE48;
}

void sub_1BA1DCE48(id **a1, char a2)
{
  id *v3;
  id v4;

  v3 = *a1;
  v4 = (*a1)[3];
  swift_unknownObjectWeakAssign();
  if ((a2 & 1) != 0)
  {

    swift_endAccess();
  }
  else
  {
    swift_endAccess();

  }
  free(v3);
}

double EngagementViewConfiguration.bubbleTipSourceRect.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 48);
}

uint64_t sub_1BA1DCEBC(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  v3 = *a2;
  swift_beginAccess();
  *(_QWORD *)(v3 + 80) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BA1DCF18()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BA1DCF4C(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 80) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1BA1DCF90())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_1BA1DCFD0()
{
  uint64_t v0;

  swift_beginAccess();
  return MEMORY[0x1BCCD77D4](v0 + 88);
}

void sub_1BA1DD010(void *a1)
{
  swift_beginAccess();
  swift_unknownObjectWeakAssign();

}

void (*sub_1BA1DD05C(_QWORD *a1))(id **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  swift_beginAccess();
  v3[3] = MEMORY[0x1BCCD77D4](v1 + 88);
  return sub_1BA1DD0C4;
}

void sub_1BA1DD0C4(id **a1, char a2)
{
  id *v3;
  id v4;

  v3 = *a1;
  v4 = (*a1)[3];
  swift_unknownObjectWeakAssign();
  if ((a2 & 1) != 0)
  {

    swift_endAccess();
  }
  else
  {
    swift_endAccess();

  }
  free(v3);
}

uint64_t EngagementViewConfiguration.toastDismissDelayTimeInterval.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 96);
}

uint64_t EngagementViewConfiguration.permittedArrowDirections.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 112);
}

void EngagementViewConfiguration.bubbleTipSizing.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + 128);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 120);
  *(_BYTE *)(a1 + 8) = v2;
}

uint64_t EngagementViewConfiguration.__allocating_init(overriddenStyle:layoutStyle:bubbleTipSourceItem:bubbleTipSourceView:bubbleTipSourceRect:passthroughViews:toastCustomTabBarController:toastDismissDelayTimeInterval:permittedArrowDirections:bubbleTipSizing:)(uint64_t a1, char *a2, uint64_t a3, void *a4, unint64_t a5, void *a6, uint64_t a7, char a8, double a9, double a10, double a11, double a12, uint64_t a13, uint64_t *a14)
{
  char v24;
  uint64_t v25;

  v24 = a8 & 1;
  v25 = swift_allocObject();
  EngagementViewConfiguration.init(overriddenStyle:layoutStyle:bubbleTipSourceItem:bubbleTipSourceView:bubbleTipSourceRect:passthroughViews:toastCustomTabBarController:toastDismissDelayTimeInterval:permittedArrowDirections:bubbleTipSizing:)(a1, a2, a9, a10, a11, a12, a3, a4, a5, a6, a7, v24, a13, a14);
  return v25;
}

uint64_t EngagementViewConfiguration.init(overriddenStyle:layoutStyle:bubbleTipSourceItem:bubbleTipSourceView:bubbleTipSourceRect:passthroughViews:toastCustomTabBarController:toastDismissDelayTimeInterval:permittedArrowDirections:bubbleTipSizing:)(uint64_t a1, char *a2, double a3, double a4, double a5, double a6, uint64_t a7, void *a8, unint64_t a9, void *a10, uint64_t a11, char a12, uint64_t a13, uint64_t *a14)
{
  uint64_t v14;
  uint64_t v15;
  char v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void **v30;
  void *v31;
  id v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  int v37;
  char v38;
  uint64_t v39;
  uint64_t v41;

  v15 = v14;
  v24 = *a2;
  v39 = *a14;
  v37 = *((unsigned __int8 *)a14 + 9);
  v38 = *((_BYTE *)a14 + 8);
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  *(_QWORD *)(v15 + 80) = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)(v15 + 16) = a1;
  *(_BYTE *)(v15 + 24) = v24;
  swift_beginAccess();
  swift_unknownObjectWeakAssign();
  swift_beginAccess();
  swift_unknownObjectWeakAssign();
  *(double *)(v15 + 48) = a3;
  *(double *)(v15 + 56) = a4;
  *(double *)(v15 + 64) = a5;
  *(double *)(v15 + 72) = a6;
  if (!a9)
  {
    swift_unknownObjectRelease();

    v29 = 0;
LABEL_15:
    v33 = a12;
    goto LABEL_16;
  }
  if (a9 >> 62)
  {
    v25 = sub_1BA202820();
    if (v25)
      goto LABEL_4;
    goto LABEL_14;
  }
  v25 = *(_QWORD *)((a9 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v25)
  {
LABEL_14:
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();

    v29 = MEMORY[0x1E0DEE9D8];
    goto LABEL_15;
  }
LABEL_4:
  v41 = MEMORY[0x1E0DEE9D8];
  result = sub_1BA2027D8();
  if (v25 < 0)
  {
    __break(1u);
    return result;
  }
  v35 = a11;
  if ((a9 & 0xC000000000000001) != 0)
  {
    v27 = 0;
    do
    {
      v28 = v27 + 1;
      MEMORY[0x1BCCD703C](v27);
      sub_1BA1DD578();
      swift_allocObject();
      sub_1BA202388();
      sub_1BA2027C0();
      sub_1BA2027E4();
      sub_1BA2027F0();
      sub_1BA2027CC();
      v27 = v28;
    }
    while (v25 != v28);
  }
  else
  {
    v30 = (void **)(a9 + 32);
    sub_1BA1DD578();
    do
    {
      v31 = *v30++;
      swift_allocObject();
      v32 = v31;
      sub_1BA202388();
      sub_1BA2027C0();
      sub_1BA2027E4();
      sub_1BA2027F0();
      sub_1BA2027CC();
      --v25;
    }
    while (v25);
  }
  v29 = v41;
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();

  v33 = a12;
  a11 = v35;
LABEL_16:
  swift_beginAccess();
  *(_QWORD *)(v15 + 80) = v29;
  swift_bridgeObjectRelease();
  swift_beginAccess();
  swift_unknownObjectWeakAssign();

  *(_QWORD *)(v15 + 96) = a11;
  *(_BYTE *)(v15 + 104) = v33 & 1;
  v34 = v39;
  if (v37)
    v34 = 0;
  *(_QWORD *)(v15 + 112) = a13;
  *(_QWORD *)(v15 + 120) = v34;
  *(_BYTE *)(v15 + 128) = (v37 | v38) & 1;
  return v15;
}

void sub_1BA1DD578()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2794C0)
  {
    sub_1BA1DC874();
    v0 = sub_1BA20237C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2794C0);
  }
}

uint64_t EngagementViewConfiguration.deinit()
{
  uint64_t v0;

  sub_1BA1CA4FC(v0 + 32);
  swift_unknownObjectWeakDestroy();
  swift_bridgeObjectRelease();
  swift_unknownObjectWeakDestroy();
  return v0;
}

uint64_t EngagementViewConfiguration.__deallocating_deinit()
{
  uint64_t v0;

  sub_1BA1CA4FC(v0 + 32);
  swift_unknownObjectWeakDestroy();
  swift_bridgeObjectRelease();
  swift_unknownObjectWeakDestroy();
  return swift_deallocClassInstance();
}

unint64_t sub_1BA1DD640()
{
  unint64_t result;

  result = qword_1EF2794D0;
  if (!qword_1EF2794D0)
  {
    result = MEMORY[0x1BCCD76CC](&protocol conformance descriptor for EngagementViewLayoutStyle, &type metadata for EngagementViewLayoutStyle);
    atomic_store(result, (unint64_t *)&qword_1EF2794D0);
  }
  return result;
}

uint64_t sub_1BA1DD684@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1 + 32;
  swift_beginAccess();
  result = MEMORY[0x1BCCD77D4](v3);
  *a2 = result;
  return result;
}

uint64_t sub_1BA1DD6D0()
{
  swift_beginAccess();
  return swift_unknownObjectWeakAssign();
}

uint64_t sub_1BA1DD71C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1 + 40;
  swift_beginAccess();
  result = MEMORY[0x1BCCD77D4](v3);
  *a2 = result;
  return result;
}

uint64_t sub_1BA1DD768()
{
  swift_beginAccess();
  return swift_unknownObjectWeakAssign();
}

uint64_t sub_1BA1DD7B4@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 80);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BA1DD800@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1 + 88;
  swift_beginAccess();
  result = MEMORY[0x1BCCD77D4](v3);
  *a2 = result;
  return result;
}

uint64_t sub_1BA1DD84C()
{
  swift_beginAccess();
  return swift_unknownObjectWeakAssign();
}

uint64_t storeEnumTagSinglePayload for EngagementViewLayoutStyle(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BA1DD8E4 + 4 * byte_1BA2041B5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BA1DD918 + 4 * asc_1BA2041B0[v4]))();
}

uint64_t sub_1BA1DD918(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA1DD920(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BA1DD928);
  return result;
}

uint64_t sub_1BA1DD934(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BA1DD93CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BA1DD940(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA1DD948(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t getEnumTagSinglePayload for EngagementViewBubbleTipSizing(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for EngagementViewBubbleTipSizing(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = 0;
    *(_BYTE *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 1;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 9) = v3;
  return result;
}

uint64_t sub_1BA1DD9A4(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_1BA1DD9C0(uint64_t result, int a2)
{
  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    *(_BYTE *)(result + 8) = 0;
  }
  return result;
}

uint64_t type metadata accessor for EngagementViewConfiguration()
{
  return objc_opt_self();
}

uint64_t method lookup function for EngagementViewConfiguration()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of EngagementViewConfiguration.bubbleTipSourceItem.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of EngagementViewConfiguration.bubbleTipSourceItem.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of EngagementViewConfiguration.bubbleTipSourceItem.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of EngagementViewConfiguration.bubbleTipSourceView.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t dispatch thunk of EngagementViewConfiguration.bubbleTipSourceView.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of EngagementViewConfiguration.bubbleTipSourceView.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t dispatch thunk of EngagementViewConfiguration.passthroughViews.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t dispatch thunk of EngagementViewConfiguration.passthroughViews.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

uint64_t dispatch thunk of EngagementViewConfiguration.passthroughViews.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

uint64_t dispatch thunk of EngagementViewConfiguration.toastCustomTabBarController.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 232))();
}

uint64_t dispatch thunk of EngagementViewConfiguration.toastCustomTabBarController.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 240))();
}

uint64_t dispatch thunk of EngagementViewConfiguration.toastCustomTabBarController.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 248))();
}

uint64_t dispatch thunk of EngagementViewConfiguration.__allocating_init(overriddenStyle:layoutStyle:bubbleTipSourceItem:bubbleTipSourceView:bubbleTipSourceRect:passthroughViews:toastCustomTabBarController:toastDismissDelayTimeInterval:permittedArrowDirections:bubbleTipSizing:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  uint64_t v8;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(v8 + 256))(a1, a2, a3, a4, a5, a6, a7, a8 & 1);
}

uint64_t sub_1BA1DDAB0(uint64_t a1)
{
  return sub_1BA1DDD70(a1, qword_1ED5AF7B8);
}

uint64_t static TipSource.appLevelSheet.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BA1DDB40(&qword_1ED5AF7D0, (uint64_t)qword_1ED5AF7B8, a1);
}

uint64_t sub_1BA1DDAF8(uint64_t a1)
{
  return sub_1BA1DDD70(a1, qword_1ED5AF7D8);
}

uint64_t static TipSource.appLevelToast.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BA1DDB40(&qword_1ED5AF788, (uint64_t)qword_1ED5AF7D8, a1);
}

uint64_t sub_1BA1DDB40@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;

  if (*a1 != -1)
    swift_once();
  v5 = sub_1BA202454();
  v6 = __swift_project_value_buffer(v5, a2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a3, v6, v5);
}

uint64_t sub_1BA1DDBA8(uint64_t a1)
{
  return sub_1BA1DDD70(a1, qword_1ED5AF840);
}

uint64_t static TipSource.newsPlusTabItem.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BA1DDB40(&qword_1ED5AF860, (uint64_t)qword_1ED5AF840, a1);
}

uint64_t sub_1BA1DDBF0(uint64_t a1)
{
  return sub_1BA1DDD70(a1, qword_1ED5AF890);
}

uint64_t static TipSource.todayFeedTabItem.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BA1DDB40(&qword_1ED5AF8A8, (uint64_t)qword_1ED5AF890, a1);
}

uint64_t sub_1BA1DDC30(uint64_t a1)
{
  return sub_1BA1DDD70(a1, qword_1ED5AF798);
}

uint64_t static TipSource.audioTabItem.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BA1DDB40(&qword_1ED5AF7B0, (uint64_t)qword_1ED5AF798, a1);
}

uint64_t sub_1BA1DDC74(uint64_t a1)
{
  return sub_1BA1DDD70(a1, qword_1ED5AF868);
}

uint64_t static TipSource.followingTabItem.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BA1DDB40(&qword_1ED5AF888, (uint64_t)qword_1ED5AF868, a1);
}

uint64_t sub_1BA1DDCB4(uint64_t a1)
{
  return sub_1BA1DDD70(a1, qword_1ED5AF7F0);
}

uint64_t static TipSource.searchTabItem.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BA1DDB40(&qword_1ED5AF810, (uint64_t)qword_1ED5AF7F0, a1);
}

uint64_t sub_1BA1DDCFC(uint64_t a1)
{
  return sub_1BA1DDD70(a1, qword_1ED5AF818);
}

uint64_t static TipSource.sportsTabItem.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BA1DDB40(&qword_1ED5AF838, (uint64_t)qword_1ED5AF818, a1);
}

uint64_t sub_1BA1DDD44(uint64_t a1)
{
  return sub_1BA1DDD70(a1, qword_1EF279540);
}

uint64_t sub_1BA1DDD70(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = sub_1BA202454();
  __swift_allocate_value_buffer(v3, a2);
  __swift_project_value_buffer(v3, (uint64_t)a2);
  return sub_1BA202448();
}

uint64_t static TipSource.puzzlesTabItem.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BA1DDB40(&qword_1EF279090, (uint64_t)qword_1EF279540, a1);
}

uint64_t EngagementUpsellBannerPaidEligibility.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA1DDE14 + 4 * byte_1BA204330[*v0]))(0x646961706E75, 0xE600000000000000);
}

uint64_t sub_1BA1DDE14()
{
  return 1684627824;
}

uint64_t sub_1BA1DDE24()
{
  return 1752461154;
}

uint64_t sub_1BA1DDE34()
{
  return 1885956979;
}

void sub_1BA1DDE44(char *a1)
{
  sub_1BA1FAC84(*a1);
}

unint64_t sub_1BA1DDE54()
{
  unint64_t result;

  result = qword_1EF279558;
  if (!qword_1EF279558)
  {
    result = MEMORY[0x1BCCD76CC](&protocol conformance descriptor for EngagementUpsellBannerPaidEligibility, &type metadata for EngagementUpsellBannerPaidEligibility);
    atomic_store(result, (unint64_t *)&qword_1EF279558);
  }
  return result;
}

void sub_1BA1DDE98()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1BA202A00();
  __asm { BR              X9 }
}

uint64_t sub_1BA1DDEE0()
{
  sub_1BA202538();
  swift_bridgeObjectRelease();
  return sub_1BA202A18();
}

void sub_1BA1DDF38()
{
  __asm { BR              X10 }
}

uint64_t sub_1BA1DDF70()
{
  sub_1BA202538();
  return swift_bridgeObjectRelease();
}

void sub_1BA1DDFB4()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1BA202A00();
  __asm { BR              X9 }
}

uint64_t sub_1BA1DDFF8()
{
  sub_1BA202538();
  swift_bridgeObjectRelease();
  return sub_1BA202A18();
}

NewsEngagement::EngagementUpsellBannerPaidEligibility_optional sub_1BA1DE050(Swift::String *a1)
{
  return EngagementUpsellBannerPaidEligibility.init(rawValue:)(*a1);
}

uint64_t sub_1BA1DE05C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1BA1DE088 + 4 * byte_1BA204340[*v0]))();
}

void sub_1BA1DE088(_QWORD *a1@<X8>)
{
  *a1 = 1684627824;
  a1[1] = 0xE400000000000000;
}

void sub_1BA1DE09C(_QWORD *a1@<X8>)
{
  *a1 = 1752461154;
  a1[1] = 0xE400000000000000;
}

void sub_1BA1DE0B0(_QWORD *a1@<X8>)
{
  *a1 = 1885956979;
  a1[1] = 0xE400000000000000;
}

uint64_t sub_1BA1DE0C4()
{
  sub_1BA1DE2B8();
  return sub_1BA2025BC();
}

uint64_t sub_1BA1DE120()
{
  sub_1BA1DE2B8();
  return sub_1BA2025B0();
}

uint64_t getEnumTagSinglePayload for EngagementPlacementSource(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 3;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 3;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 3;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for EngagementUpsellBannerPaidEligibility(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1BA1DE248 + 4 * byte_1BA204349[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1BA1DE27C + 4 * byte_1BA204344[v4]))();
}

uint64_t sub_1BA1DE27C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA1DE284(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BA1DE28CLL);
  return result;
}

uint64_t sub_1BA1DE298(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BA1DE2A0);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1BA1DE2A4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA1DE2AC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

unint64_t sub_1BA1DE2B8()
{
  unint64_t result;

  result = qword_1EF279560;
  if (!qword_1EF279560)
  {
    result = MEMORY[0x1BCCD76CC](&protocol conformance descriptor for EngagementUpsellBannerPaidEligibility, &type metadata for EngagementUpsellBannerPaidEligibility);
    atomic_store(result, (unint64_t *)&qword_1EF279560);
  }
  return result;
}

uint64_t static Settings.Engagement.Events.Debug.enableDebugPollingEvents.getter()
{
  return sub_1BA1B0F94(&qword_1ED5AEFB0);
}

uint64_t sub_1BA1DE318()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t result;
  _DWORD v5[4];

  v0 = sub_1BA2021F0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA1B281C(0, &qword_1EF2796B0);
  v5[2] = 1056964608;
  v5[3] = 1084227584;
  v5[1] = 1101004800;
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB57E8], v0);
  result = sub_1BA202238();
  qword_1EF279568 = result;
  return result;
}

uint64_t static Settings.Engagement.Events.Debug.triggerDelay.getter()
{
  return sub_1BA1B0F94(&qword_1EF279098);
}

uint64_t sub_1BA1DE428(uint64_t a1)
{
  return sub_1BA1B26E0(a1, 0xD00000000000003DLL, 0x80000001BA207E60, &qword_1EF279570);
}

uint64_t static Settings.Engagement.Events.Debug.enableCustomToastDismissDelay.getter()
{
  return sub_1BA1B0F94(&qword_1EF2790A0);
}

uint64_t sub_1BA1DE468()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t result;
  _QWORD v5[4];

  v0 = sub_1BA2021F0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA1B281C(0, &qword_1EF2796A8);
  v5[2] = 0x3FF0000000000000;
  v5[3] = 0x4014000000000000;
  v5[1] = 0x4034000000000000;
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB57E8], v0);
  result = sub_1BA202238();
  qword_1EF279578 = result;
  return result;
}

uint64_t static Settings.Engagement.Events.Debug.toastDismissDelay.getter()
{
  return sub_1BA1B0F94(&qword_1EF2790A8);
}

uint64_t sub_1BA1DE578()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t result;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;

  v0 = sub_1BA2021FC();
  v11 = *(_QWORD *)(v0 - 8);
  v12 = v0;
  MEMORY[0x1E0C80A78](v0);
  v9 = (char *)&v8 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_1BA2021F0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = v5;
  sub_1BA1DF0B4();
  v10 = v6;
  v15 = 3;
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DB57E8], v2);
  sub_1BA1DF150();
  sub_1BA1DF1A4();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1BA204490;
  LOBYTE(v13) = 3;
  sub_1BA202208();
  LOBYTE(v13) = 0;
  sub_1BA202208();
  v13 = 0;
  v14 = 0xE000000000000000;
  sub_1BA202634();
  sub_1BA202544();
  LOBYTE(v13) = 1;
  sub_1BA202208();
  v13 = 0;
  v14 = 0xE000000000000000;
  sub_1BA202634();
  sub_1BA202544();
  LOBYTE(v13) = 2;
  sub_1BA202208();
  (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v9, *MEMORY[0x1E0DB5800], v12);
  sub_1BA1DF1F8();
  result = sub_1BA202220();
  qword_1EF279580 = result;
  return result;
}

uint64_t static Settings.Engagement.Events.Debug.placementQuiescenceInterval.getter()
{
  return sub_1BA1B0F94(&qword_1EF2790B0);
}

uint64_t sub_1BA1DE864(uint64_t a1)
{
  return sub_1BA1B26E0(a1, 0xD00000000000003CLL, 0x80000001BA207D40, &qword_1EF279588);
}

uint64_t static Settings.Engagement.Events.Debug.EnabledPlacements.appLevelSheet.getter()
{
  return sub_1BA1B0F94(&qword_1EF2790C0);
}

uint64_t sub_1BA1DE8A4(uint64_t a1)
{
  return sub_1BA1B26E0(a1, 0xD00000000000003CLL, 0x80000001BA207D00, &qword_1EF279590);
}

uint64_t static Settings.Engagement.Events.Debug.EnabledPlacements.appLevelToast.getter()
{
  return sub_1BA1B0F94(&qword_1EF2790C8);
}

uint64_t sub_1BA1DE8E4(uint64_t a1)
{
  return sub_1BA1B26E0(a1, 0xD00000000000003ELL, 0x80000001BA207CC0, &qword_1EF279598);
}

uint64_t static Settings.Engagement.Events.Debug.EnabledPlacements.newsPlusTabItem.getter()
{
  return sub_1BA1B0F94(&qword_1EF2790D0);
}

uint64_t sub_1BA1DE924(uint64_t a1)
{
  return sub_1BA1B26E0(a1, 0xD00000000000003FLL, 0x80000001BA207C80, &qword_1EF2795A0);
}

uint64_t static Settings.Engagement.Events.Debug.EnabledPlacements.todayFeedTabItem.getter()
{
  return sub_1BA1B0F94(&qword_1EF2790D8);
}

uint64_t sub_1BA1DE964(uint64_t a1)
{
  return sub_1BA1B26E0(a1, 0xD00000000000003BLL, 0x80000001BA207C40, &qword_1EF2795A8);
}

uint64_t static Settings.Engagement.Events.Debug.EnabledPlacements.audioTabItem.getter()
{
  return sub_1BA1B0F94(&qword_1EF2790E0);
}

uint64_t sub_1BA1DE9A4(uint64_t a1)
{
  return sub_1BA1B26E0(a1, 0xD00000000000003FLL, 0x80000001BA207C00, &qword_1EF2795B0);
}

uint64_t static Settings.Engagement.Events.Debug.EnabledPlacements.followingTabItem.getter()
{
  return sub_1BA1B0F94(&qword_1EF2790E8);
}

uint64_t sub_1BA1DE9E4(uint64_t a1)
{
  return sub_1BA1B26E0(a1, 0xD00000000000003CLL, 0x80000001BA207BC0, &qword_1EF2795B8);
}

uint64_t static Settings.Engagement.Events.Debug.EnabledPlacements.searchTabItem.getter()
{
  return sub_1BA1B0F94(&qword_1EF2790F0);
}

uint64_t sub_1BA1DEA24(uint64_t a1)
{
  return sub_1BA1B26E0(a1, 0xD00000000000003CLL, 0x80000001BA207B80, &qword_1EF2795C0);
}

uint64_t static Settings.Engagement.Events.Debug.EnabledPlacements.sportsTabItem.getter()
{
  return sub_1BA1B0F94(&qword_1EF2790F8);
}

uint64_t sub_1BA1DEA64(uint64_t a1)
{
  return sub_1BA1B26E0(a1, 0xD00000000000003DLL, 0x80000001BA207B40, &qword_1EF2795C8);
}

uint64_t static Settings.Engagement.Events.Debug.EnabledPlacements.puzzlesTabItem.getter()
{
  return sub_1BA1B0F94(&qword_1EF279100);
}

uint64_t sub_1BA1DEAA4(uint64_t a1)
{
  return sub_1BA1B26E0(a1, 0xD000000000000046, 0x80000001BA207AF0, &qword_1EF2795D0);
}

uint64_t static Settings.Engagement.Events.Debug.EnabledPlacements.todayFeedMastheadBanner.getter()
{
  return sub_1BA1B0F94(&qword_1EF279108);
}

uint64_t sub_1BA1DEAE4(uint64_t a1)
{
  return sub_1BA1B26E0(a1, 0xD00000000000003FLL, 0x80000001BA207AB0, &qword_1EF2795D8);
}

uint64_t static Settings.Engagement.Events.Debug.EnabledPlacements.todayFeedInlineA.getter()
{
  return sub_1BA1B0F94(&qword_1EF279110);
}

uint64_t sub_1BA1DEB24(uint64_t a1)
{
  return sub_1BA1B26E0(a1, 0xD00000000000003FLL, 0x80000001BA207A70, &qword_1EF2795E0);
}

uint64_t static Settings.Engagement.Events.Debug.EnabledPlacements.todayFeedInlineB.getter()
{
  return sub_1BA1B0F94(&qword_1EF279118);
}

uint64_t sub_1BA1DEB64(uint64_t a1)
{
  return sub_1BA1B26E0(a1, 0xD00000000000003FLL, 0x80000001BA207A30, &qword_1EF2795E8);
}

uint64_t static Settings.Engagement.Events.Debug.EnabledPlacements.todayFeedInlineC.getter()
{
  return sub_1BA1B0F94(&qword_1EF279120);
}

uint64_t sub_1BA1DEBA4(uint64_t a1)
{
  return sub_1BA1B26E0(a1, 0xD000000000000044, 0x80000001BA2079E0, &qword_1EF2795F0);
}

uint64_t static Settings.Engagement.Events.Debug.EnabledPlacements.localNewsOverlayTitle.getter()
{
  return sub_1BA1B0F94(&qword_1EF279128);
}

uint64_t sub_1BA1DEBE4(uint64_t a1)
{
  return sub_1BA1B26E0(a1, 0xD000000000000049, 0x80000001BA207990, &qword_1EF2795F8);
}

uint64_t static Settings.Engagement.Events.Debug.EnabledPlacements.localNewsOverlayPlusButton.getter()
{
  return sub_1BA1B0F94(&qword_1EF279130);
}

uint64_t sub_1BA1DEC24(uint64_t a1)
{
  return sub_1BA1B26E0(a1, 0xD00000000000004DLL, 0x80000001BA207940, &qword_1EF279600);
}

uint64_t static Settings.Engagement.Events.Debug.EnabledPlacements.localNewsOverlayEllipsisButton.getter()
{
  return sub_1BA1B0F94(&qword_1EF279138);
}

uint64_t sub_1BA1DEC64(uint64_t a1)
{
  return sub_1BA1B26E0(a1, 0xD000000000000044, 0x80000001BA2078F0, &qword_1EF279608);
}

uint64_t static Settings.Engagement.Events.Debug.EnabledPlacements.newsPaperOverlayTitle.getter()
{
  return sub_1BA1B0F94(&qword_1EF279140);
}

uint64_t sub_1BA1DECA4(uint64_t a1)
{
  return sub_1BA1B26E0(a1, 0xD000000000000049, 0x80000001BA2078A0, &qword_1EF279610);
}

uint64_t static Settings.Engagement.Events.Debug.EnabledPlacements.newsPaperOverlayPlusButton.getter()
{
  return sub_1BA1B0F94(&qword_1EF279148);
}

uint64_t sub_1BA1DECE4(uint64_t a1)
{
  return sub_1BA1B26E0(a1, 0xD00000000000004DLL, 0x80000001BA207850, &qword_1EF279618);
}

uint64_t static Settings.Engagement.Events.Debug.EnabledPlacements.newsPaperOverlayEllipsisButton.getter()
{
  return sub_1BA1B0F94(&qword_1EF279150);
}

uint64_t sub_1BA1DED24(uint64_t a1)
{
  return sub_1BA1B26E0(a1, 0xD000000000000044, 0x80000001BA207800, &qword_1EF279620);
}

uint64_t static Settings.Engagement.Events.Debug.EnabledPlacements.magazinesOverlayTitle.getter()
{
  return sub_1BA1B0F94(&qword_1EF279158);
}

uint64_t sub_1BA1DED64(uint64_t a1)
{
  return sub_1BA1B26E0(a1, 0xD000000000000049, 0x80000001BA2077B0, &qword_1EF279628);
}

uint64_t static Settings.Engagement.Events.Debug.EnabledPlacements.magazinesOverlayPlusButton.getter()
{
  return sub_1BA1B0F94(&qword_1EF279160);
}

uint64_t sub_1BA1DEDA4(uint64_t a1)
{
  return sub_1BA1B26E0(a1, 0xD00000000000004DLL, 0x80000001BA207760, &qword_1EF279630);
}

uint64_t static Settings.Engagement.Events.Debug.EnabledPlacements.magazinesOverlayEllipsisButton.getter()
{
  return sub_1BA1B0F94(&qword_1EF279168);
}

uint64_t sub_1BA1DEDE4(uint64_t a1)
{
  return sub_1BA1B26E0(a1, 0xD000000000000048, 0x80000001BA207710, &qword_1EF279638);
}

uint64_t static Settings.Engagement.Events.Debug.EnabledPlacements.audioBriefingOverlayTitle.getter()
{
  return sub_1BA1B0F94(&qword_1EF279170);
}

uint64_t sub_1BA1DEE24(uint64_t a1)
{
  return sub_1BA1B26E0(a1, 0xD000000000000051, 0x80000001BA2076B0, &qword_1EF279640);
}

uint64_t static Settings.Engagement.Events.Debug.EnabledPlacements.audioBriefingOverlayEllipsisButton.getter()
{
  return sub_1BA1B0F94(&qword_1EF279178);
}

uint64_t sub_1BA1DEE64(uint64_t a1)
{
  return sub_1BA1B26E0(a1, 0xD000000000000047, 0x80000001BA207660, &qword_1EF279648);
}

uint64_t static Settings.Engagement.Events.Debug.EnabledPlacements.curatedAudioOverlayTitle.getter()
{
  return sub_1BA1B0F94(&qword_1EF279180);
}

uint64_t sub_1BA1DEEA4(uint64_t a1)
{
  return sub_1BA1B26E0(a1, 0xD00000000000004CLL, 0x80000001BA207610, &qword_1EF279650);
}

uint64_t static Settings.Engagement.Events.Debug.EnabledPlacements.curatedAudioOverlayPlusButton.getter()
{
  return sub_1BA1B0F94(&qword_1EF279188);
}

uint64_t sub_1BA1DEEE4(uint64_t a1)
{
  return sub_1BA1B26E0(a1, 0xD000000000000050, 0x80000001BA2075B0, &qword_1EF279658);
}

uint64_t static Settings.Engagement.Events.Debug.EnabledPlacements.curatedAudioOverlayEllipsisButton.getter()
{
  return sub_1BA1B0F94(&qword_1EF279190);
}

uint64_t sub_1BA1DEF24(uint64_t a1)
{
  return sub_1BA1B26E0(a1, 0xD00000000000003DLL, 0x80000001BA207570, &qword_1EF279660);
}

uint64_t static Settings.Engagement.Events.Debug.EnabledPlacements.topOfFollowing.getter()
{
  return sub_1BA1B0F94(&qword_1EF279198);
}

uint64_t sub_1BA1DEF64(uint64_t a1)
{
  return sub_1BA1B26E0(a1, 0xD000000000000041, 0x80000001BA207520, &qword_1EF279668);
}

uint64_t static Settings.Engagement.Events.Debug.EnabledPlacements.topOfChannelPicker.getter()
{
  return sub_1BA1B0F94(&qword_1EF2791A0);
}

uint64_t sub_1BA1DEFA4(uint64_t a1)
{
  return sub_1BA1B26E0(a1, 0xD000000000000049, 0x80000001BA2074D0, &qword_1EF279670);
}

uint64_t static Settings.Engagement.Events.Debug.EnabledPlacements.topOfChannelPickerNewsPlus.getter()
{
  return sub_1BA1B0F94(&qword_1EF2791A8);
}

uint64_t sub_1BA1DEFE4(uint64_t a1)
{
  return sub_1BA1B26E0(a1, 0xD00000000000004ALL, 0x80000001BA207480, &qword_1EF279678);
}

uint64_t static Settings.Engagement.Events.Debug.EnabledPlacements.topOfChannelPickerLocalNews.getter()
{
  return sub_1BA1B0F94(&qword_1EF2791B0);
}

uint64_t sub_1BA1DF024(uint64_t a1)
{
  return sub_1BA1B26E0(a1, 0xD000000000000042, 0x80000001BA207430, &qword_1ED5AF770);
}

uint64_t static Settings.Engagement.Presentation.disableAllPresentations.getter()
{
  return sub_1BA1B0F94(qword_1ED5AF778);
}

ValueMetadata *type metadata accessor for Settings.Engagement()
{
  return &type metadata for Settings.Engagement;
}

ValueMetadata *type metadata accessor for Settings.Engagement.Events()
{
  return &type metadata for Settings.Engagement.Events;
}

ValueMetadata *type metadata accessor for Settings.Engagement.Events.Debug()
{
  return &type metadata for Settings.Engagement.Events.Debug;
}

ValueMetadata *type metadata accessor for Settings.Engagement.Events.Debug.EnabledPlacements()
{
  return &type metadata for Settings.Engagement.Events.Debug.EnabledPlacements;
}

ValueMetadata *type metadata accessor for Settings.Engagement.Presentation()
{
  return &type metadata for Settings.Engagement.Presentation;
}

void sub_1BA1DF0B4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF279680)
  {
    sub_1BA1DF10C();
    v0 = sub_1BA202244();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF279680);
  }
}

unint64_t sub_1BA1DF10C()
{
  unint64_t result;

  result = qword_1EF279688;
  if (!qword_1EF279688)
  {
    result = MEMORY[0x1BCCD76CC](&protocol conformance descriptor for EngagementDebugPlacementQuiescenceInterval, &type metadata for EngagementDebugPlacementQuiescenceInterval);
    atomic_store(result, (unint64_t *)&qword_1EF279688);
  }
  return result;
}

void sub_1BA1DF150()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF279690)
  {
    sub_1BA1DF1A4();
    v0 = sub_1BA20297C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF279690);
  }
}

void sub_1BA1DF1A4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF279698)
  {
    v0 = sub_1BA202214();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF279698);
  }
}

unint64_t sub_1BA1DF1F8()
{
  unint64_t result;

  result = qword_1EF2796A0;
  if (!qword_1EF2796A0)
  {
    result = MEMORY[0x1BCCD76CC](&protocol conformance descriptor for EngagementDebugPlacementQuiescenceInterval, &type metadata for EngagementDebugPlacementQuiescenceInterval);
    atomic_store(result, (unint64_t *)&qword_1EF2796A0);
  }
  return result;
}

BOOL static EngagementPlacementVisibility.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t EngagementPlacementVisibility.hash(into:)()
{
  return sub_1BA202A0C();
}

uint64_t EngagementPlacementVisibility.hashValue.getter()
{
  sub_1BA202A00();
  sub_1BA202A0C();
  return sub_1BA202A18();
}

uint64_t EngagementPlacementVisibility.description.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x656C6269736976;
  if (*v0 != 1)
    v1 = 0x6E6564646968;
  if (*v0)
    return v1;
  else
    return 0x6D72657465646E75;
}

unint64_t sub_1BA1DF320()
{
  unint64_t result;

  result = qword_1EF2796B8;
  if (!qword_1EF2796B8)
  {
    result = MEMORY[0x1BCCD76CC](&protocol conformance descriptor for EngagementPlacementVisibility, &type metadata for EngagementPlacementVisibility);
    atomic_store(result, (unint64_t *)&qword_1EF2796B8);
  }
  return result;
}

uint64_t sub_1BA1DF364()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x656C6269736976;
  if (*v0 != 1)
    v1 = 0x6E6564646968;
  if (*v0)
    return v1;
  else
    return 0x6D72657465646E75;
}

uint64_t storeEnumTagSinglePayload for EngagementPlacementVisibility(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BA1DF410 + 4 * byte_1BA2044F5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BA1DF444 + 4 * asc_1BA2044F0[v4]))();
}

uint64_t sub_1BA1DF444(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA1DF44C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BA1DF454);
  return result;
}

uint64_t sub_1BA1DF460(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BA1DF468);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BA1DF46C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA1DF474(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void sub_1BA1DF480(void *a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char v12;
  objc_class *v13;
  _BYTE *v14;
  _QWORD *v15;
  id v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  _QWORD *v22;
  id v23;
  objc_super v24;

  v8 = sub_1BA2021A8();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_BYTE *)(a3 + 24);
  v13 = (objc_class *)type metadata accessor for EngagementInlineDialogViewController();
  v14 = objc_allocWithZone(v13);
  v15 = &v14[OBJC_IVAR____TtC14NewsEngagement36EngagementInlineDialogViewController_messageID];
  *v15 = 0;
  v15[1] = 0;
  v14[OBJC_IVAR____TtC14NewsEngagement36EngagementInlineDialogViewController_offer] = 3;
  v14[OBJC_IVAR____TtC14NewsEngagement36EngagementInlineDialogViewController_placement] = a2;
  v16 = a1;
  v17 = v14;
  sub_1BA20219C();
  v18 = sub_1BA202190();
  v20 = v19;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  v21 = (uint64_t *)&v17[OBJC_IVAR____TtC14NewsEngagement36EngagementInlineDialogViewController_identifier];
  *v21 = v18;
  v21[1] = v20;
  v17[OBJC_IVAR____TtC14NewsEngagement36EngagementInlineDialogViewController_source] = v12;
  v22 = &v17[OBJC_IVAR____TtC14NewsEngagement36EngagementInlineDialogViewController_trigger];
  *v22 = 0;
  v22[1] = 0;

  v24.receiver = v17;
  v24.super_class = v13;
  v23 = objc_msgSendSuper2(&v24, sel_initWithRequest_, v16);

  *a4 = v23;
}

id sub_1BA1DF5F0@<X0>(uint64_t a1@<X0>, char a2@<W1>, _QWORD *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  id result;
  char v7;
  char v8;

  v4 = *(_QWORD *)(a1 + 112);
  v5 = *(_QWORD *)(a1 + 120);
  v8 = a2;
  v7 = 2;
  objc_allocWithZone((Class)type metadata accessor for EngagementInlineDialogViewController());
  swift_bridgeObjectRetain();
  result = sub_1BA1ECAF0(v4, v5, &v8, &v7, 0, 0);
  *a3 = result;
  return result;
}

void sub_1BA1DF668(void *a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  objc_class *v12;
  _BYTE *v13;
  _QWORD *v14;
  id v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  id v21;
  objc_super v22;
  _BYTE v23[16];

  v8 = sub_1BA2021A8();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA1DF920(a3 + 32, (uint64_t)v23);
  v12 = (objc_class *)type metadata accessor for EngagementInlineDialogViewController();
  v13 = objc_allocWithZone(v12);
  v14 = &v13[OBJC_IVAR____TtC14NewsEngagement36EngagementInlineDialogViewController_messageID];
  *v14 = 0;
  v14[1] = 0;
  v13[OBJC_IVAR____TtC14NewsEngagement36EngagementInlineDialogViewController_offer] = 3;
  v13[OBJC_IVAR____TtC14NewsEngagement36EngagementInlineDialogViewController_placement] = a2;
  v15 = a1;
  sub_1BA1DF974((uint64_t)v23);
  v16 = v13;
  sub_1BA20219C();
  v17 = sub_1BA202190();
  v19 = v18;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  v20 = (uint64_t *)&v16[OBJC_IVAR____TtC14NewsEngagement36EngagementInlineDialogViewController_identifier];
  *v20 = v17;
  v20[1] = v19;
  v16[OBJC_IVAR____TtC14NewsEngagement36EngagementInlineDialogViewController_source] = 3;
  sub_1BA1DF920((uint64_t)v23, (uint64_t)&v16[OBJC_IVAR____TtC14NewsEngagement36EngagementInlineDialogViewController_trigger]);

  v22.receiver = v16;
  v22.super_class = v12;
  v21 = objc_msgSendSuper2(&v22, sel_initWithRequest_, v15);

  *a4 = v21;
}

uint64_t sub_1BA1DF7EC()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1BA1DF828()
{
  swift_release();
  return swift_deallocObject();
}

id sub_1BA1DF84C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_1BA1DF5F0(*(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24), a1);
}

void sub_1BA1DF85C(_QWORD *a1@<X8>)
{
  uint64_t v1;

  sub_1BA1DF480(*(void **)(v1 + 16), *(_BYTE *)(v1 + 24), v1 + 32, a1);
}

uint64_t sub_1BA1DF86C(uint64_t a1)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 16);
  sub_1BA1D1628(*(id *)a1, *(_BYTE *)(a1 + 8));
  sub_1BA1BE364(v2);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t objectdestroy_2Tm_0()
{
  uint64_t v0;

  if (*(unsigned __int8 *)(v0 + 40) != 255)
  if ((unint64_t)(*(_QWORD *)(v0 + 48) - 1) >= 0xB)
    swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1BA1DF910(_QWORD *a1@<X8>)
{
  uint64_t v1;

  sub_1BA1DF668(*(void **)(v1 + 16), *(_BYTE *)(v1 + 24), v1 + 32, a1);
}

uint64_t sub_1BA1DF920(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA1B57B4(0, (unint64_t *)&unk_1ED5AF220);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BA1DF974(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

void sub_1BA1DF99C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  char v12;
  int64_t v13;
  uint64_t v14;
  _QWORD *v15;
  int64_t v16;
  void *v17;
  uint64_t v18;
  void *v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  void *v29;
  void *v30;
  id v31;
  NSObject *v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  os_log_type_t v36;
  uint8_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD aBlock[6];
  char v42;

  v4 = v3;
  swift_getObjectType();
  v8 = sub_1BA2024A8();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (uint64_t *)((char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA1C1078(0, (unint64_t *)&qword_1ED5AF230);
  *v11 = sub_1BA2026AC();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E0DEF740], v8);
  v12 = sub_1BA2024C0();
  (*(void (**)(uint64_t *, uint64_t))(v9 + 8))(v11, v8);
  if ((v12 & 1) != 0)
  {
    if (qword_1ED5AEFB0 == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  sub_1BA1C1C6C();
  sub_1BA2021CC();
  if ((aBlock[0] & 1) == 0)
  {
    v13 = *(_QWORD *)(a1 + 16);
    v14 = MEMORY[0x1E0DEE9D8];
    if (v13)
    {
      v38 = v4;
      v39 = a2;
      v40 = a3;
      aBlock[0] = MEMORY[0x1E0DEE9D8];
      sub_1BA2027D8();
      v15 = (_QWORD *)(a1 + 40);
      v16 = v13;
      do
      {
        v18 = *v15;
        v42 = *((_BYTE *)v15 - 8);
        EngagementUIPlacement.rawValue.getter();
        swift_bridgeObjectRetain();
        v19 = (void *)sub_1BA2024FC();
        swift_bridgeObjectRelease();
        if (v18)
        {
          v17 = (void *)sub_1BA2024CC();
          swift_bridgeObjectRelease();
        }
        else
        {
          v17 = 0;
        }
        v15 += 2;
        objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CFDAA8]), sel_initWithPlacement_context_, v19, v17);

        sub_1BA2027C0();
        sub_1BA2027E4();
        sub_1BA2027F0();
        sub_1BA2027CC();
        --v16;
      }
      while (v16);
      aBlock[0] = v14;
      sub_1BA1C0B04(0, v13, 0);
      a3 = v40;
      v14 = aBlock[0];
      v20 = *(_QWORD *)(aBlock[0] + 16);
      v21 = 16 * v20;
      v4 = v38;
      do
      {
        aBlock[0] = v14;
        v22 = *(_QWORD *)(v14 + 24);
        v23 = v20 + 1;
        if (v20 >= v22 >> 1)
        {
          sub_1BA1C0B04(v22 > 1, v20 + 1, 1);
          v14 = aBlock[0];
        }
        *(_QWORD *)(v14 + 16) = v23;
        v24 = v14 + v21;
        *(_QWORD *)(v24 + 32) = 1937204590;
        *(_QWORD *)(v24 + 40) = 0xE400000000000000;
        v21 += 16;
        v20 = v23;
        --v13;
      }
      while (v13);
      a2 = v39;
    }
    v25 = sub_1BA1C0C9C(v14);
    swift_bridgeObjectRelease();
    sub_1BA1C1A78(v25, (uint64_t (*)(void))sub_1BA1C1074, (uint64_t (*)(void))sub_1BA1C1BBC);
    v27 = v26;
    swift_bridgeObjectRelease();
    if (v27)
    {
      v28 = objc_allocWithZone(MEMORY[0x1E0CFDA88]);
      v29 = (void *)sub_1BA2024FC();
      swift_bridgeObjectRelease();
      sub_1BA1C1078(0, (unint64_t *)&unk_1EF279740);
      v30 = (void *)sub_1BA2025D4();
      swift_bridgeObjectRelease();
      v31 = objc_msgSend(v28, sel_initWithServiceType_placementInfo_, v29, v30);

      v32 = objc_msgSend(*(id *)(v4 + OBJC_IVAR____TtC14NewsEngagement23EngagementEventProvider_engagement), sel_enqueueMessageEvent_, v31);
      v33 = swift_allocObject();
      *(_QWORD *)(v33 + 16) = a2;
      *(_QWORD *)(v33 + 24) = a3;
      aBlock[4] = sub_1BA1E1B80;
      aBlock[5] = v33;
      aBlock[0] = MEMORY[0x1E0C809B0];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1BA1E0784;
      aBlock[3] = &block_descriptor_4;
      v34 = _Block_copy(aBlock);
      swift_retain();
      swift_release();
      -[NSObject addFinishBlock:](v32, sel_addFinishBlock_, v34);
      _Block_release(v34);

    }
    else
    {
      swift_bridgeObjectRelease();
      if (qword_1ED5AFB58 != -1)
        swift_once();
      v35 = sub_1BA20243C();
      __swift_project_value_buffer(v35, (uint64_t)qword_1ED5B08D0);
      v32 = sub_1BA202424();
      v36 = sub_1BA202670();
      if (os_log_type_enabled(v32, v36))
      {
        v37 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v37 = 0;
        _os_log_impl(&dword_1BA1AE000, v32, v36, "Could not find service type", v37, 2u);
        MEMORY[0x1BCCD775C](v37, -1, -1);
      }
    }

  }
}

uint64_t sub_1BA1DFEB4(void *a1, id a2, uint64_t a3, uint64_t a4)
{
  id v8;
  uint64_t v9;
  id v10;
  id v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  id v20;
  uint64_t v21;
  id v22;
  void *v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  __objc2_prot_list **p_base_prots;
  id v29;
  void *v30;
  id v31;
  void *v32;
  uint64_t v33;
  id v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v40;
  unint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;

  if (a2)
  {
    v8 = a2;
    if (qword_1ED5AFB58 != -1)
      swift_once();
    v9 = sub_1BA20243C();
    __swift_project_value_buffer(v9, (uint64_t)qword_1ED5B08D0);
    v10 = a2;
    v11 = a2;
    v12 = sub_1BA202424();
    v13 = sub_1BA202670();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc();
      v47 = a3;
      v15 = swift_slowAlloc();
      v52 = v15;
      *(_DWORD *)v14 = 136315138;
      swift_getErrorValue();
      v16 = sub_1BA2029B8();
      sub_1BA1BDA3C(v16, v17, &v52);
      sub_1BA2026E8();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1BA1AE000, v12, v13, "Failed fetching request. %s", v14, 0xCu);
      swift_arrayDestroy();
      v18 = v15;
      a3 = v47;
      MEMORY[0x1BCCD775C](v18, -1, -1);
      MEMORY[0x1BCCD775C](v14, -1, -1);
    }
    else
    {

    }
    v19 = (_QWORD *)swift_allocObject();
    v19[2] = a3;
    v19[3] = a4;
    v19[4] = a2;
    v20 = a2;
    swift_retain();
    sub_1BA202418();
    swift_release();

  }
  v21 = swift_allocObject();
  *(_QWORD *)(v21 + 16) = MEMORY[0x1E0DEE9D8];
  if (!a1)
    goto LABEL_31;
  v22 = objc_msgSend(a1, sel_messageActions);
  if (!v22)
    goto LABEL_31;
  v23 = v22;
  sub_1BA1C1078(0, &qword_1ED5AF2E8);
  v24 = sub_1BA2025E0();

  v46 = a4;
  v48 = a3;
  if (!(v24 >> 62))
  {
    v25 = *(_QWORD *)((v24 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v25)
      goto LABEL_12;
LABEL_30:
    swift_bridgeObjectRelease_n();
    a4 = v46;
    a3 = v48;
LABEL_31:
    v43 = (_QWORD *)swift_allocObject();
    v43[2] = a3;
    v43[3] = a4;
    v43[4] = v21;
    swift_retain();
    swift_retain();
    sub_1BA202418();
    swift_release();
    return swift_release();
  }
  swift_bridgeObjectRetain();
  result = sub_1BA202820();
  v25 = result;
  if (!result)
    goto LABEL_30;
LABEL_12:
  if (v25 >= 1)
  {
    v27 = 0;
    v49 = v24 & 0xC000000000000001;
    v50 = v25;
    p_base_prots = &EngagementDebugRequestFactory.base_prots;
    v51 = v24;
    do
    {
      if (v49)
        v29 = (id)MEMORY[0x1BCCD703C](v27, v24);
      else
        v29 = *(id *)(v24 + 8 * v27 + 32);
      v30 = v29;
      v31 = objc_msgSend(v29, (SEL)p_base_prots[192], v44);
      if (v31)
      {
        v32 = v31;
        sub_1BA1E25B4(0, (unint64_t *)&unk_1ED5AF530, &qword_1ED5AF558, 0x1E0CFDAA0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
        sub_1BA2024D8();

        sub_1BA1C1078(0, &qword_1ED5AF550);
        v45 = sub_1BA1C1D10();
        v33 = sub_1BA2024E4();
        swift_bridgeObjectRelease();
      }
      else
      {
        v33 = MEMORY[0x1E0DEE9E0];
      }
      v34 = objc_msgSend(v30, (SEL)p_base_prots[192], v45);
      if (v34)
      {
        v35 = v34;
        sub_1BA1E25B4(0, (unint64_t *)&unk_1ED5AF530, &qword_1ED5AF558, 0x1E0CFDAA0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
        sub_1BA2024D8();

        sub_1BA1C1078(0, &qword_1ED5AF540);
        v44 = sub_1BA1C1D10();
        v36 = sub_1BA2024E4();
        swift_bridgeObjectRelease();
      }
      else
      {
        v36 = MEMORY[0x1E0DEE9E0];
      }
      v37 = sub_1BA1CEFBC(v36);
      swift_bridgeObjectRelease();
      v38 = *(_QWORD **)(v21 + 16);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)(v21 + 16) = v38;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v38 = sub_1BA1D5228(0, v38[2] + 1, 1, v38);
        *(_QWORD *)(v21 + 16) = v38;
      }
      v41 = v38[2];
      v40 = v38[3];
      if (v41 >= v40 >> 1)
      {
        v38 = sub_1BA1D5228((_QWORD *)(v40 > 1), v41 + 1, 1, v38);
        *(_QWORD *)(v21 + 16) = v38;
      }
      ++v27;
      v38[2] = v41 + 1;
      v42 = &v38[3 * v41];
      v42[4] = v37;
      v42[5] = v33;
      *((_BYTE *)v42 + 48) = 2;

      v24 = v51;
      p_base_prots = (__objc2_prot_list **)(&EngagementDebugRequestFactory + 40);
    }
    while (v50 != v27);
    goto LABEL_30;
  }
  __break(1u);
  return result;
}

void sub_1BA1E04B8(_BYTE *a1, _QWORD *a2, uint64_t *a3, uint64_t *a4)
{
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  Swift::String v14;

  v6 = *a3;
  v7 = (void *)a3[1];
  v8 = *a4;
  if (!((unint64_t)*a4 >> 62))
  {
    v9 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v9)
      goto LABEL_3;
LABEL_10:
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  swift_bridgeObjectRetain();
  if (!sub_1BA202820())
    goto LABEL_10;
LABEL_3:
  if ((v8 & 0xC000000000000001) != 0)
  {
    v10 = (id)MEMORY[0x1BCCD703C](0, v8);
    goto LABEL_6;
  }
  if (*(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v10 = *(id *)(v8 + 32);
LABEL_6:
    v11 = v10;
    swift_bridgeObjectRelease();
    v12 = objc_msgSend(v11, sel_engagementRequest);
    if (v12)
    {
      v13 = v12;
      swift_bridgeObjectRetain();
      v14._countAndFlagsBits = v6;
      v14._object = v7;
      EngagementUIPlacement.init(rawValue:)(v14);

LABEL_12:
      *a2 = v13;
      return;
    }

LABEL_11:
    v13 = 0;
    *a1 = 30;
    goto LABEL_12;
  }
  __break(1u);
}

void sub_1BA1E05DC(_BYTE *a1, _QWORD *a2, uint64_t *a3, uint64_t *a4)
{
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  id v12;
  Swift::String v13;
  id v14;

  v6 = *a3;
  v7 = (void *)a3[1];
  v8 = *a4;
  if (!((unint64_t)*a4 >> 62))
  {
    v9 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v9)
      goto LABEL_3;
LABEL_10:
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  swift_bridgeObjectRetain();
  if (!sub_1BA202820())
    goto LABEL_10;
LABEL_3:
  if ((v8 & 0xC000000000000001) != 0)
  {
    v10 = (id)MEMORY[0x1BCCD703C](0, v8);
    goto LABEL_6;
  }
  if (*(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v10 = *(id *)(v8 + 32);
LABEL_6:
    v11 = v10;
    swift_bridgeObjectRelease();
    v12 = objc_msgSend(v11, sel_engagementRequest);

    if (!v12)
    {
      swift_bridgeObjectRetain();
      v13._countAndFlagsBits = v6;
      v13._object = v7;
      EngagementUIPlacement.init(rawValue:)(v13);
      v14 = objc_msgSend(v11, sel_makeDialogRequest);

LABEL_12:
      *a2 = v14;
      return;
    }

LABEL_11:
    v14 = 0;
    *a1 = 30;
    goto LABEL_12;
  }
  __break(1u);
}

uint64_t sub_1BA1E0720(void (*a1)(uint64_t, _QWORD))
{
  uint64_t v2;

  swift_beginAccess();
  v2 = swift_bridgeObjectRetain();
  a1(v2, 0);
  return swift_bridgeObjectRelease();
}

void sub_1BA1E0784(uint64_t a1, void *a2, void *a3)
{
  void (*v5)(void *, void *);
  id v6;
  id v7;

  v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  v7 = a2;
  v6 = a3;
  v5(a2, a3);
  swift_release();

}

void sub_1BA1E07F8(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  _BOOL4 v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char isUniquelyReferenced_nonNull_native;
  void *v44;
  void *v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55[3];
  uint64_t v56;

  v4 = v3;
  v8 = sub_1BA2024A8();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (uint64_t *)((char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = *a3;
  sub_1BA1C1078(0, (unint64_t *)&qword_1ED5AF230);
  *v11 = sub_1BA2026AC();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E0DEF740], v8);
  v13 = sub_1BA2024C0();
  (*(void (**)(uint64_t *, uint64_t))(v9 + 8))(v11, v8);
  if ((v13 & 1) != 0)
  {
    if (qword_1ED5AFB58 == -1)
      goto LABEL_3;
  }
  else
  {
LABEL_25:
    __break(1u);
  }
  swift_once();
LABEL_3:
  v14 = sub_1BA20243C();
  __swift_project_value_buffer(v14, (uint64_t)qword_1ED5B08D0);
  v15 = sub_1BA202424();
  v16 = sub_1BA202664();
  v17 = os_log_type_enabled(v15, v16);
  v52 = v4;
  v53 = a2;
  if (v17)
  {
    v18 = (uint8_t *)swift_slowAlloc();
    v19 = swift_slowAlloc();
    v55[0] = v19;
    *(_DWORD *)v18 = 136315138;
    LOBYTE(v56) = v12;
    v20 = EngagementUIPlacement.rawValue.getter();
    v56 = sub_1BA1BDA3C(v20, v21, v55);
    sub_1BA2026E8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BA1AE000, v15, v16, "Adding observer for placement [%s]", v18, 0xCu);
    swift_arrayDestroy();
    v22 = v19;
    v4 = v52;
    MEMORY[0x1BCCD775C](v22, -1, -1);
    MEMORY[0x1BCCD775C](v18, -1, -1);
  }

  v23 = (uint64_t *)(v4 + OBJC_IVAR____TtC14NewsEngagement23EngagementEventProvider_observersStore);
  swift_beginAccess();
  v24 = *v23;
  if (!*(_QWORD *)(*v23 + 16) || (v25 = sub_1BA1B9DB8(v12), (v26 & 1) == 0))
  {
    swift_endAccess();
LABEL_21:
    v32 = sub_1BA202424();
    v33 = sub_1BA202664();
    if (os_log_type_enabled(v32, v33))
    {
      v34 = (uint8_t *)swift_slowAlloc();
      v35 = swift_slowAlloc();
      v55[0] = v35;
      *(_DWORD *)v34 = 136315138;
      LOBYTE(v56) = v12;
      v36 = EngagementUIPlacement.rawValue.getter();
      v56 = sub_1BA1BDA3C(v36, v37, v55);
      sub_1BA2026E8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BA1AE000, v32, v33, "Adding placement [%s] to AMS", v34, 0xCu);
      swift_arrayDestroy();
      v38 = v35;
      v4 = v52;
      MEMORY[0x1BCCD775C](v38, -1, -1);
      MEMORY[0x1BCCD775C](v34, -1, -1);
    }

    v39 = v53;
    sub_1BA1DC81C();
    v40 = swift_allocObject();
    *(_OWORD *)(v40 + 16) = xmmword_1BA203770;
    type metadata accessor for WeakEngagementUIEventObserver();
    v41 = swift_allocObject();
    *(_QWORD *)(v41 + 24) = 0;
    swift_unknownObjectWeakInit();
    *(_QWORD *)(v41 + 24) = v39;
    swift_unknownObjectWeakAssign();
    *(_QWORD *)(v40 + 32) = v41;
    v55[0] = v40;
    sub_1BA2025F8();
    v42 = v55[0];
    swift_beginAccess();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v56 = *v23;
    *v23 = 0x8000000000000000;
    sub_1BA1D6528(v42, v12, isUniquelyReferenced_nonNull_native);
    *v23 = v56;
    swift_bridgeObjectRelease();
    swift_endAccess();
    v44 = *(void **)(v4 + OBJC_IVAR____TtC14NewsEngagement23EngagementEventProvider_engagement);
    LOBYTE(v55[0]) = v12;
    EngagementUIPlacement.rawValue.getter();
    v45 = (void *)sub_1BA2024FC();
    swift_bridgeObjectRelease();
    v46 = (void *)sub_1BA2024FC();
    objc_msgSend(v44, sel_addObserver_placement_serviceType_, v4, v45, v46);

    return;
  }
  v27 = *(_QWORD *)(*(_QWORD *)(v24 + 56) + 8 * v25);
  v56 = v27;
  swift_endAccess();
  if (!(v27 >> 62))
  {
    a2 = *(_QWORD *)((v27 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    if (a2)
    {
      v4 = v12;
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
LABEL_10:
      v28 = 4;
      while (1)
      {
        v12 = v28 - 4;
        if ((v27 & 0xC000000000000001) != 0)
        {
          v29 = MEMORY[0x1BCCD703C](v28 - 4, v27);
          v30 = v28 - 3;
          if (__OFADD__(v12, 1))
            goto LABEL_24;
        }
        else
        {
          v29 = *(_QWORD *)(v27 + 8 * v28);
          swift_retain();
          v30 = v28 - 3;
          if (__OFADD__(v12, 1))
          {
LABEL_24:
            __break(1u);
            goto LABEL_25;
          }
        }
        v31 = MEMORY[0x1BCCD77D4](v29 + 16);
        swift_release();
        if (v31)
        {
          swift_unknownObjectRelease();
          if (v31 == a1)
          {
            swift_unknownObjectRelease();
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease();
            return;
          }
        }
        ++v28;
        if (v30 == a2)
          goto LABEL_29;
      }
    }
    goto LABEL_32;
  }
  swift_bridgeObjectRetain_n();
  if (!sub_1BA202820())
  {
LABEL_32:
    swift_bridgeObjectRelease_n();
    goto LABEL_21;
  }
  v4 = v12;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  a2 = sub_1BA202820();
  if (a2)
    goto LABEL_10;
LABEL_29:
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease_n();
  type metadata accessor for WeakEngagementUIEventObserver();
  v47 = swift_allocObject();
  *(_QWORD *)(v47 + 24) = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)(v47 + 24) = v53;
  v48 = swift_unknownObjectWeakAssign();
  MEMORY[0x1BCCD6E80](v48);
  if (*(_QWORD *)((v56 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v56 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1BA202604();
  sub_1BA202610();
  sub_1BA2025F8();
  v49 = v56;
  swift_beginAccess();
  v50 = swift_isUniquelyReferenced_nonNull_native();
  v54 = *v23;
  *v23 = 0x8000000000000000;
  sub_1BA1D6528(v49, v4, v50);
  *v23 = v54;
  swift_bridgeObjectRelease();
  swift_endAccess();
}

void sub_1BA1E0EC4(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  char isUniquelyReferenced_nonNull_native;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  uint8_t *v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  void *v51;
  void *v52;
  uint64_t v53;
  unsigned int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57[3];

  v4 = v3;
  v55 = a1;
  v6 = sub_1BA2024A8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (uint64_t *)((char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = *a3;
  sub_1BA1C1078(0, (unint64_t *)&qword_1ED5AF230);
  *v9 = sub_1BA2026AC();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E0DEF740], v6);
  v11 = sub_1BA2024C0();
  (*(void (**)(uint64_t *, uint64_t))(v7 + 8))(v9, v6);
  if ((v11 & 1) != 0)
  {
    if (qword_1ED5AFB58 == -1)
      goto LABEL_3;
  }
  else
  {
LABEL_23:
    __break(1u);
  }
  swift_once();
LABEL_3:
  v12 = sub_1BA20243C();
  __swift_project_value_buffer(v12, (uint64_t)qword_1ED5B08D0);
  v13 = sub_1BA202424();
  v14 = sub_1BA202664();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = (uint8_t *)swift_slowAlloc();
    v16 = v10;
    v17 = swift_slowAlloc();
    v57[0] = v17;
    *(_DWORD *)v15 = 136315138;
    LOBYTE(v56) = v16;
    v18 = EngagementUIPlacement.rawValue.getter();
    v56 = sub_1BA1BDA3C(v18, v19, v57);
    sub_1BA2026E8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BA1AE000, v13, v14, "Removing observer for placement [%s]", v15, 0xCu);
    swift_arrayDestroy();
    v20 = v17;
    v10 = v16;
    MEMORY[0x1BCCD775C](v20, -1, -1);
    MEMORY[0x1BCCD775C](v15, -1, -1);
  }

  v21 = (uint64_t *)(v4 + OBJC_IVAR____TtC14NewsEngagement23EngagementEventProvider_observersStore);
  swift_beginAccess();
  v22 = *v21;
  if (!*(_QWORD *)(*v21 + 16) || (v23 = sub_1BA1B9DB8(v10), (v24 & 1) == 0))
  {
    swift_endAccess();
LABEL_27:
    v35 = sub_1BA202424();
    v36 = sub_1BA202670();
    if (os_log_type_enabled(v35, v36))
    {
      v37 = (uint8_t *)swift_slowAlloc();
      v38 = swift_slowAlloc();
      v57[0] = v38;
      *(_DWORD *)v37 = 136315138;
      LOBYTE(v56) = v10;
      v39 = EngagementUIPlacement.rawValue.getter();
      v56 = sub_1BA1BDA3C(v39, v40, v57);
      sub_1BA2026E8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BA1AE000, v35, v36, "Cannot remove observer for placement: [%s]", v37, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCD775C](v38, -1, -1);
      MEMORY[0x1BCCD775C](v37, -1, -1);
    }

    return;
  }
  v25 = *(_QWORD *)(*(_QWORD *)(v22 + 56) + 8 * v23);
  swift_endAccess();
  v54 = v10;
  v53 = v4;
  if (!(v25 >> 62))
  {
    v26 = *(_QWORD *)((v25 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    v27 = v55;
    swift_unknownObjectRetain();
    if (v26)
      goto LABEL_9;
    goto LABEL_26;
  }
  swift_bridgeObjectRetain_n();
  v27 = v55;
  swift_unknownObjectRetain();
  v26 = sub_1BA202820();
  if (!v26)
  {
LABEL_26:
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease_n();
    LOBYTE(v10) = v54;
    goto LABEL_27;
  }
LABEL_9:
  v4 = 4;
  while (1)
  {
    v10 = v4 - 4;
    if ((v25 & 0xC000000000000001) != 0)
    {
      v28 = MEMORY[0x1BCCD703C](v4 - 4, v25);
      v29 = v4 - 3;
      if (__OFADD__(v10, 1))
        goto LABEL_22;
    }
    else
    {
      v28 = *(_QWORD *)(v25 + 8 * v4);
      swift_retain();
      v29 = v4 - 3;
      if (__OFADD__(v10, 1))
      {
LABEL_22:
        __break(1u);
        goto LABEL_23;
      }
    }
    v30 = MEMORY[0x1BCCD77D4](v28 + 16);
    if (v30)
    {
      v31 = v30;
      swift_unknownObjectRelease();
      if (v31 == v27)
        break;
    }
    swift_release();
    ++v4;
    if (v29 == v26)
      goto LABEL_26;
  }
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_retain();
  v32 = sub_1BA1D13F4(v25, v28);
  swift_bridgeObjectRelease();
  swift_release();
  if (v32 >> 62)
  {
    swift_bridgeObjectRetain();
    v41 = sub_1BA202820();
    swift_bridgeObjectRelease();
    v33 = v54;
    if (v41)
      goto LABEL_20;
  }
  else
  {
    v33 = v54;
    if (*(_QWORD *)((v32 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_20:
      swift_beginAccess();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v56 = *v21;
      *v21 = 0x8000000000000000;
      sub_1BA1D6528(v32, v33, isUniquelyReferenced_nonNull_native);
      *v21 = v56;
      swift_bridgeObjectRelease();
      swift_endAccess();
      swift_release();
      return;
    }
  }
  swift_bridgeObjectRelease();
  v42 = sub_1BA202424();
  v43 = sub_1BA202664();
  if (os_log_type_enabled(v42, v43))
  {
    v44 = (uint8_t *)swift_slowAlloc();
    v45 = swift_slowAlloc();
    v57[0] = v45;
    *(_DWORD *)v44 = 136315138;
    LOBYTE(v56) = v54;
    v46 = EngagementUIPlacement.rawValue.getter();
    v56 = sub_1BA1BDA3C(v46, v47, v57);
    sub_1BA2026E8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BA1AE000, v42, v43, "Removing placement [%s] from AMS", v44, 0xCu);
    swift_arrayDestroy();
    v48 = v45;
    v33 = v54;
    MEMORY[0x1BCCD775C](v48, -1, -1);
    MEMORY[0x1BCCD775C](v44, -1, -1);
  }

  v49 = v53;
  v50 = *(void **)(v53 + OBJC_IVAR____TtC14NewsEngagement23EngagementEventProvider_engagement);
  LOBYTE(v57[0]) = v33;
  EngagementUIPlacement.rawValue.getter();
  v51 = (void *)sub_1BA2024FC();
  swift_bridgeObjectRelease();
  v52 = (void *)sub_1BA2024FC();
  objc_msgSend(v50, sel_removeObserver_placement_serviceType_, v49, v51, v52);

  swift_beginAccess();
  sub_1BA200188(v33);
  swift_endAccess();
  swift_release();
  swift_bridgeObjectRelease();
}

void sub_1BA1E1620(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1BA1DF99C(a1, a2, a3);
}

void sub_1BA1E1640(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  sub_1BA1E07F8(a1, a2, a3);
}

void sub_1BA1E1660(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  sub_1BA1E0EC4(a1, a2, a3);
}

void sub_1BA1E16B8(void *a1, int a2, void *a3, void *a4, void *aBlock, unint64_t *a6, unint64_t *a7, uint64_t a8)
{
  void *v14;
  id v15;
  id v16;
  id v17;

  v14 = _Block_copy(aBlock);
  v15 = a3;
  v16 = a4;
  v17 = a1;
  sub_1BA1E1C10(a4, a6, a7, a8);
  _Block_release(v14);

}

uint64_t sub_1BA1E1754(unint64_t a1, void *a2, char a3)
{
  unint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  unint64_t v11;
  void (*v12)(void **, char *, uint64_t, uint64_t);
  id v13;
  char v16;
  void *v17;
  char v18;

  v3 = a1;
  if (!(a1 >> 62))
  {
    v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v4)
      goto LABEL_3;
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  result = sub_1BA202820();
  v4 = result;
  if (!result)
    return swift_bridgeObjectRelease();
LABEL_3:
  if (v4 >= 1)
  {
    v6 = 0;
    v7 = v3 & 0xC000000000000001;
    do
    {
      if (v7)
      {
        v8 = MEMORY[0x1BCCD703C](v6, v3);
      }
      else
      {
        v8 = *(_QWORD *)(v3 + 8 * v6 + 32);
        swift_retain();
      }
      if (MEMORY[0x1BCCD77D4](v8 + 16))
      {
        v9 = *(_QWORD *)(v8 + 24);
        ObjectType = swift_getObjectType();
        v17 = a2;
        v18 = -126;
        v16 = a3;
        v11 = v3;
        v12 = *(void (**)(void **, char *, uint64_t, uint64_t))(v9 + 8);
        v13 = a2;
        v12(&v17, &v16, ObjectType, v9);
        v3 = v11;
        swift_release();

        swift_unknownObjectRelease();
      }
      else
      {
        swift_release();
      }
      ++v6;
    }
    while (v4 != v6);
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_1BA1E1978(unint64_t a1, uint64_t a2, char a3, char a4)
{
  uint64_t v8;
  uint64_t result;
  uint64_t i;
  uint64_t v11;
  uint64_t v12;
  uint64_t ObjectType;
  char v14;
  uint64_t v15;
  char v16;

  if (!(a1 >> 62))
  {
    v8 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v8)
      goto LABEL_3;
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  result = sub_1BA202820();
  v8 = result;
  if (!result)
    return swift_bridgeObjectRelease();
LABEL_3:
  if (v8 >= 1)
  {
    for (i = 0; i != v8; ++i)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        v11 = MEMORY[0x1BCCD703C](i, a1);
      }
      else
      {
        v11 = *(_QWORD *)(a1 + 8 * i + 32);
        swift_retain();
      }
      if (MEMORY[0x1BCCD77D4](v11 + 16))
      {
        v12 = *(_QWORD *)(v11 + 24);
        ObjectType = swift_getObjectType();
        v15 = a2;
        v16 = a3;
        v14 = a4;
        (*(void (**)(uint64_t *, char *, uint64_t, uint64_t))(v12 + 8))(&v15, &v14, ObjectType, v12);
        swift_release();
        swift_unknownObjectRelease();
      }
      else
      {
        swift_release();
      }
    }
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_1BA1E1B5C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BA1E1B80(void *a1, void *a2)
{
  uint64_t v2;

  return sub_1BA1DFEB4(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t block_destroy_helper_4()
{
  return swift_release();
}

uint64_t sub_1BA1E1B90()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BA1E1BB4()
{
  return objectdestroy_5Tm((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t sub_1BA1E1BC0()
{
  uint64_t v0;

  return sub_1BA1E0720(*(void (**)(uint64_t, _QWORD))(v0 + 16));
}

uint64_t sub_1BA1E1BCC()
{
  return objectdestroy_5Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t objectdestroy_5Tm(void (*a1)(_QWORD))
{
  uint64_t v1;

  swift_release();
  a1(*(_QWORD *)(v1 + 32));
  return swift_deallocObject();
}

void sub_1BA1E1C10(void *a1, unint64_t *a2, unint64_t *a3, uint64_t a4)
{
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  id v15;
  uint64_t v16;

  if (qword_1ED5AFB58 != -1)
    swift_once();
  v8 = sub_1BA20243C();
  __swift_project_value_buffer(v8, (uint64_t)qword_1ED5B08D0);
  v15 = a1;
  v9 = sub_1BA202424();
  v10 = sub_1BA202670();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc();
    v12 = swift_slowAlloc();
    v16 = v12;
    *(_DWORD *)v11 = 136315138;
    sub_1BA1E25B4(0, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    v13 = sub_1BA2026D0();
    sub_1BA1BDA3C(v13, v14, &v16);
    sub_1BA2026E8();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BA1AE000, v9, v10, "request: [%s] not handled", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCD775C](v12, -1, -1);
    MEMORY[0x1BCCD775C](v11, -1, -1);

  }
  else
  {

  }
}

void sub_1BA1E1DFC(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v11;
  id v12;
  id v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  id v20;
  Swift::String v21;
  Swift::String v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33[3];

  if (qword_1ED5AFB58 != -1)
    swift_once();
  v11 = sub_1BA20243C();
  __swift_project_value_buffer(v11, (uint64_t)qword_1ED5B08D0);
  v12 = a1;
  swift_bridgeObjectRetain_n();
  v13 = v12;
  v14 = sub_1BA202424();
  v15 = sub_1BA202664();
  if (os_log_type_enabled(v14, v15))
  {
    v32 = a4;
    v16 = swift_slowAlloc();
    v31 = swift_slowAlloc();
    v33[0] = v31;
    *(_DWORD *)v16 = 136315394;
    sub_1BA1E25B4(0, (unint64_t *)&unk_1EF279750, &qword_1ED5AF550, 0x1E0CFDAB0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    v17 = sub_1BA2026D0();
    sub_1BA1BDA3C(v17, v18, v33);
    sub_1BA2026E8();

    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 12) = 2080;
    swift_bridgeObjectRetain();
    sub_1BA1BDA3C(a2, (unint64_t)a3, v33);
    sub_1BA2026E8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1BA1AE000, v14, v15, "engagement didUpdate request: [%s] placement: [%s]", (uint8_t *)v16, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1BCCD775C](v31, -1, -1);
    v19 = v16;
    a4 = v32;
    MEMORY[0x1BCCD775C](v19, -1, -1);

    if (!a1)
      return;
  }
  else
  {

    swift_bridgeObjectRelease_n();
    if (!a1)
      return;
  }
  v20 = v13;
  swift_bridgeObjectRetain();
  v21._countAndFlagsBits = a2;
  v21._object = a3;
  EngagementUIPlacement.init(rawValue:)(v21);
  if (LOBYTE(v33[0]) != 30 && (a4 == 1937204590 && a5 == 0xE400000000000000 || (sub_1BA202988() & 1) != 0))
  {
    swift_bridgeObjectRetain();
    v22._countAndFlagsBits = a2;
    v22._object = a3;
    EngagementUIPlacement.init(rawValue:)(v22);
    v23 = LOBYTE(v33[0]);
    if (LOBYTE(v33[0]) != 30)
    {
      v24 = (uint64_t *)(v5 + OBJC_IVAR____TtC14NewsEngagement23EngagementEventProvider_observersStore);
      swift_beginAccess();
      v25 = *v24;
      if (*(_QWORD *)(v25 + 16))
      {
        v26 = sub_1BA1B9DB8(v23);
        if ((v27 & 1) != 0)
        {
          v28 = *(_QWORD *)(*(_QWORD *)(v25 + 56) + 8 * v26);
          swift_endAccess();
          v29 = swift_allocObject();
          *(_QWORD *)(v29 + 16) = v28;
          *(_QWORD *)(v29 + 24) = v20;
          *(_BYTE *)(v29 + 32) = v23;
          v30 = v20;
          swift_bridgeObjectRetain();
          sub_1BA202418();
          swift_release();

          return;
        }
      }
      swift_endAccess();
    }
  }

}

void sub_1BA1E2190(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v11;
  id v12;
  id v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  Swift::String v20;
  int v21;
  char v22;
  uint64_t v23;
  unsigned __int8 v24;
  id v25;
  Swift::String v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36[3];

  if (qword_1ED5AFB58 != -1)
    swift_once();
  v11 = sub_1BA20243C();
  __swift_project_value_buffer(v11, (uint64_t)qword_1ED5B08D0);
  v12 = a1;
  swift_bridgeObjectRetain_n();
  v13 = v12;
  v14 = sub_1BA202424();
  v15 = sub_1BA202664();
  if (os_log_type_enabled(v14, v15))
  {
    v35 = v13;
    v16 = swift_slowAlloc();
    v34 = swift_slowAlloc();
    v36[0] = v34;
    *(_DWORD *)v16 = 136315394;
    sub_1BA1E25B4(0, (unint64_t *)&qword_1ED5AF548, &qword_1ED5AF540, 0x1E0CFDA68, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    v17 = sub_1BA2026D0();
    sub_1BA1BDA3C(v17, v18, v36);
    sub_1BA2026E8();

    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 12) = 2080;
    swift_bridgeObjectRetain();
    sub_1BA1BDA3C(a2, (unint64_t)a3, v36);
    sub_1BA2026E8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1BA1AE000, v14, v15, "engagement didUpdate request: [%s] placement: [%s]", (uint8_t *)v16, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1BCCD775C](v34, -1, -1);
    v19 = v16;
    v13 = v35;
    MEMORY[0x1BCCD775C](v19, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRetain();
  v20._countAndFlagsBits = a2;
  v20._object = a3;
  EngagementUIPlacement.init(rawValue:)(v20);
  v21 = LOBYTE(v36[0]);
  if (LOBYTE(v36[0]) != 30)
  {
    if (a4 == 1937204590 && a5 == 0xE400000000000000)
    {
      if (LOBYTE(v36[0]) - 1 > 0x1C)
        return;
    }
    else
    {
      v22 = sub_1BA202988();
      if ((v21 - 1) > 0x1C || (v22 & 1) == 0)
        return;
    }
    if (a1)
      v23 = (uint64_t)a1;
    else
      v23 = 2;
    if (a1)
      v24 = 66;
    else
      v24 = 0;
    v25 = v13;
    swift_bridgeObjectRetain();
    v26._countAndFlagsBits = a2;
    v26._object = a3;
    EngagementUIPlacement.init(rawValue:)(v26);
    v27 = LOBYTE(v36[0]);
    if (LOBYTE(v36[0]) != 30)
    {
      v28 = (uint64_t *)(v5 + OBJC_IVAR____TtC14NewsEngagement23EngagementEventProvider_observersStore);
      swift_beginAccess();
      v29 = *v28;
      if (*(_QWORD *)(v29 + 16))
      {
        v30 = sub_1BA1B9DB8(v27);
        if ((v31 & 1) != 0)
        {
          v32 = *(_QWORD *)(*(_QWORD *)(v29 + 56) + 8 * v30);
          swift_endAccess();
          v33 = swift_allocObject();
          *(_QWORD *)(v33 + 16) = v32;
          *(_QWORD *)(v33 + 24) = v23;
          *(_BYTE *)(v33 + 32) = v24;
          *(_BYTE *)(v33 + 33) = v27;
          swift_bridgeObjectRetain();
          sub_1BA1CA564((id)v23, v24);
          sub_1BA202418();
          sub_1BA1CA58C((id)v23, v24);
          swift_release();
          return;
        }
      }
      swift_endAccess();
    }
    sub_1BA1CA58C((id)v23, v24);
  }
}

uint64_t sub_1BA1E2574()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_1BA1CA58C(*(id *)(v0 + 24), *(_BYTE *)(v0 + 32));
  return swift_deallocObject();
}

uint64_t sub_1BA1E25A4()
{
  uint64_t v0;

  return sub_1BA1E1978(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_BYTE *)(v0 + 32), *(_BYTE *)(v0 + 33));
}

void sub_1BA1E25B4(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    v8 = sub_1BA1C1078(255, a3);
    v9 = a5(a1, v8);
    if (!v10)
      atomic_store(v9, a2);
  }
}

uint64_t sub_1BA1E2614()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1BA1E2640()
{
  uint64_t v0;

  return sub_1BA1E1754(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(_BYTE *)(v0 + 32));
}

void sub_1BA1E265C(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1BA1E26A0()
{
  sub_1BA202538();
  return swift_bridgeObjectRelease();
}

void sub_1BA1E2710(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1BA1E2750()
{
  sub_1BA202538();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BA1E2830(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA1E2864 + 4 * byte_1BA20474F[a1]))(0x6E6F6973726576, 0xE700000000000000);
}

unint64_t sub_1BA1E2864()
{
  return 0xD000000000000016;
}

unint64_t sub_1BA1E2880()
{
  return 0xD000000000000017;
}

uint64_t sub_1BA1E2930(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA1E2964 + 4 * byte_1BA204758[a1]))(0x6E6F6973726576, 0xE700000000000000);
}

unint64_t sub_1BA1E2964()
{
  return 0xD000000000000016;
}

unint64_t sub_1BA1E2980()
{
  return 0xD000000000000017;
}

void sub_1BA1E2A30(char *a1)
{
  sub_1BA1FB0AC(*a1);
}

uint64_t sub_1BA1E2A3C()
{
  char *v0;
  char v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_1BA202A00();
  sub_1BA1E2710((uint64_t)v3, v1);
  return sub_1BA202A18();
}

void sub_1BA1E2A80(uint64_t a1)
{
  char *v1;

  sub_1BA1E2710(a1, *v1);
}

uint64_t sub_1BA1E2A88()
{
  char *v0;
  char v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_1BA202A00();
  sub_1BA1E2710((uint64_t)v3, v1);
  return sub_1BA202A18();
}

uint64_t sub_1BA1E2AC8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BA1E7F30();
  *a1 = result;
  return result;
}

uint64_t sub_1BA1E2AF4@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1BA1E2830(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1BA1E2B1C()
{
  unsigned __int8 *v0;

  return sub_1BA1E2930(*v0);
}

uint64_t sub_1BA1E2B24@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BA1E7F30();
  *a1 = result;
  return result;
}

void sub_1BA1E2B48(_BYTE *a1@<X8>)
{
  *a1 = 9;
}

uint64_t sub_1BA1E2B54()
{
  sub_1BA1E34B0();
  return sub_1BA202A3C();
}

uint64_t sub_1BA1E2B7C()
{
  sub_1BA1E34B0();
  return sub_1BA202A48();
}

void __swiftcall EngagementUpsellPlacement.init(version:forceBaseConfiguration:baseBannerConfiguration:newsPlusBannerConfiguration:savingsBannerConfiguration:priceReductionBannerConfiguration:bestValueBannerConfiguration:suggestionBannerConfiguration:newsPlusViaOfferBannerConfiguration:)(NewsEngagement::EngagementUpsellPlacement *__return_ptr retstr, Swift::Int_optional version, Swift::Bool_optional forceBaseConfiguration, NewsEngagement::EngagementUpsellBanner_optional *baseBannerConfiguration, NewsEngagement::EngagementUpsellBanner_optional *newsPlusBannerConfiguration, NewsEngagement::EngagementUpsellBanner_optional *savingsBannerConfiguration, NewsEngagement::EngagementUpsellBanner_optional *priceReductionBannerConfiguration, NewsEngagement::EngagementUpsellBanner_optional *bestValueBannerConfiguration, NewsEngagement::EngagementUpsellBanner_optional *suggestionBannerConfiguration, NewsEngagement::EngagementUpsellBanner_optional *newsPlusViaOfferBannerConfiguration)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  char v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  void *__dst;
  _QWORD __src[275];
  _BYTE v29[312];
  _BYTE v30[312];
  _BYTE v31[312];
  _BYTE v32[312];
  _BYTE v33[312];
  _BYTE v34[312];
  _BYTE v35[320];

  v10 = MEMORY[0x1E0C80A78](version.value);
  v12 = v11;
  v14 = v13;
  v16 = v15;
  v18 = v17;
  v26 = v19;
  v21 = v20;
  v22 = v10;
  __dst = v23;
  sub_1BA1E3DDC(v24, (uint64_t)v29, &qword_1ED5AF2D0);
  sub_1BA1E3DDC(v18, (uint64_t)v30, &qword_1ED5AF2D0);
  sub_1BA1E3DDC(v16, (uint64_t)v31, &qword_1ED5AF2D0);
  sub_1BA1E3DDC(v14, (uint64_t)v32, &qword_1ED5AF2D0);
  sub_1BA1E3DDC(v12, (uint64_t)v33, &qword_1ED5AF2D0);
  sub_1BA1E3DDC((uint64_t)suggestionBannerConfiguration, (uint64_t)v34, &qword_1ED5AF2D0);
  sub_1BA1E3DDC((uint64_t)newsPlusViaOfferBannerConfiguration, (uint64_t)v35, &qword_1ED5AF2D0);
  if ((v21 & 1) != 0)
    v25 = 0;
  else
    v25 = v22;
  __src[0] = v25;
  LOBYTE(__src[1]) = v26 & 1;
  sub_1BA1E3DDC((uint64_t)v29, (uint64_t)&__src[2], &qword_1ED5AF2D0);
  sub_1BA1E3DDC((uint64_t)v30, (uint64_t)&__src[41], &qword_1ED5AF2D0);
  sub_1BA1E3DDC((uint64_t)v31, (uint64_t)&__src[80], &qword_1ED5AF2D0);
  sub_1BA1E3DDC((uint64_t)v32, (uint64_t)&__src[119], &qword_1ED5AF2D0);
  sub_1BA1E3DDC((uint64_t)v33, (uint64_t)&__src[158], &qword_1ED5AF2D0);
  sub_1BA1E3DDC((uint64_t)v34, (uint64_t)&__src[197], &qword_1ED5AF2D0);
  sub_1BA1E3DDC((uint64_t)v35, (uint64_t)&__src[236], &qword_1ED5AF2D0);
  memcpy(__dst, __src, 0x898uLL);
}

uint64_t EngagementUpsellPlacement.forceBaseConfiguration.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 8);
}

uint64_t EngagementUpsellPlacement.baseBannerConfiguration.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _BYTE v4[312];

  sub_1BA1E3DDC(v1 + 16, (uint64_t)v4, &qword_1ED5AF2D0);
  sub_1BA1E3DDC((uint64_t)v4, a1, &qword_1ED5AF2D0);
  return sub_1BA1E3D00((uint64_t)v4, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA1B6C08);
}

uint64_t EngagementUpsellPlacement.newsPlusBannerConfiguration.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _BYTE v4[312];

  sub_1BA1E3DDC(v1 + 328, (uint64_t)v4, &qword_1ED5AF2D0);
  sub_1BA1E3DDC((uint64_t)v4, a1, &qword_1ED5AF2D0);
  return sub_1BA1E3D00((uint64_t)v4, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA1B6C08);
}

uint64_t EngagementUpsellPlacement.savingsBannerConfiguration.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _BYTE v4[312];

  sub_1BA1E3DDC(v1 + 640, (uint64_t)v4, &qword_1ED5AF2D0);
  sub_1BA1E3DDC((uint64_t)v4, a1, &qword_1ED5AF2D0);
  return sub_1BA1E3D00((uint64_t)v4, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA1B6C08);
}

uint64_t EngagementUpsellPlacement.priceReductionBannerConfiguration.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _BYTE v4[312];

  sub_1BA1E3DDC(v1 + 952, (uint64_t)v4, &qword_1ED5AF2D0);
  sub_1BA1E3DDC((uint64_t)v4, a1, &qword_1ED5AF2D0);
  return sub_1BA1E3D00((uint64_t)v4, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA1B6C08);
}

uint64_t EngagementUpsellPlacement.bestValueBannerConfiguration.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _BYTE v4[312];

  sub_1BA1E3DDC(v1 + 1264, (uint64_t)v4, &qword_1ED5AF2D0);
  sub_1BA1E3DDC((uint64_t)v4, a1, &qword_1ED5AF2D0);
  return sub_1BA1E3D00((uint64_t)v4, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA1B6C08);
}

uint64_t EngagementUpsellPlacement.suggestionBannerConfiguration.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _BYTE v4[312];

  sub_1BA1E3DDC(v1 + 1576, (uint64_t)v4, &qword_1ED5AF2D0);
  sub_1BA1E3DDC((uint64_t)v4, a1, &qword_1ED5AF2D0);
  return sub_1BA1E3D00((uint64_t)v4, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA1B6C08);
}

uint64_t EngagementUpsellPlacement.newsPlusViaOfferBannerConfiguration.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _BYTE v4[312];

  sub_1BA1E3DDC(v1 + 1888, (uint64_t)v4, &qword_1ED5AF2D0);
  sub_1BA1E3DDC((uint64_t)v4, a1, &qword_1ED5AF2D0);
  return sub_1BA1E3D00((uint64_t)v4, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA1B6C08);
}

uint64_t EngagementUpsellPlacement.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v10;
  _BYTE v11[312];
  _BYTE v12[312];
  _BYTE v13[312];
  _BYTE v14[312];
  _BYTE v15[312];
  _BYTE v16[312];
  _BYTE v17[312];
  _DWORD v18[83];
  char v19;

  sub_1BA1E3C60(0, &qword_1EF279760, MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = &v11[-v6 - 8];
  v18[82] = *(unsigned __int8 *)(v1 + 8);
  sub_1BA1E3DDC(v1 + 16, (uint64_t)v12, &qword_1ED5AF2D0);
  sub_1BA1E3DDC(v1 + 328, (uint64_t)v13, &qword_1ED5AF2D0);
  sub_1BA1E3DDC(v1 + 640, (uint64_t)v14, &qword_1ED5AF2D0);
  sub_1BA1E3DDC(v1 + 952, (uint64_t)v15, &qword_1ED5AF2D0);
  sub_1BA1E3DDC(v1 + 1264, (uint64_t)v16, &qword_1ED5AF2D0);
  sub_1BA1E3DDC(v1 + 1576, (uint64_t)v17, &qword_1ED5AF2D0);
  sub_1BA1E3DDC(v1 + 1888, (uint64_t)v18, &qword_1ED5AF2D0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA1E34B0();
  sub_1BA202A30();
  v11[0] = 0;
  v8 = v10;
  sub_1BA202964();
  if (!v8)
  {
    v11[0] = 1;
    sub_1BA20294C();
    sub_1BA1E3DDC((uint64_t)v12, (uint64_t)v11, &qword_1ED5AF2D0);
    v19 = 2;
    sub_1BA1E34F4();
    sub_1BA202934();
    sub_1BA1E3DDC((uint64_t)v13, (uint64_t)v11, &qword_1ED5AF2D0);
    v19 = 3;
    sub_1BA202934();
    sub_1BA1E3DDC((uint64_t)v14, (uint64_t)v11, &qword_1ED5AF2D0);
    v19 = 4;
    sub_1BA202934();
    sub_1BA1E3DDC((uint64_t)v15, (uint64_t)v11, &qword_1ED5AF2D0);
    v19 = 5;
    sub_1BA202934();
    sub_1BA1E3DDC((uint64_t)v16, (uint64_t)v11, &qword_1ED5AF2D0);
    v19 = 6;
    sub_1BA202934();
    sub_1BA1E3DDC((uint64_t)v17, (uint64_t)v11, &qword_1ED5AF2D0);
    v19 = 7;
    sub_1BA202934();
    sub_1BA1E3DDC((uint64_t)v18, (uint64_t)v11, &qword_1ED5AF2D0);
    v19 = 8;
    sub_1BA202934();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1BA1E34B0()
{
  unint64_t result;

  result = qword_1EF279768;
  if (!qword_1EF279768)
  {
    result = MEMORY[0x1BCCD76CC](&unk_1BA2048F8, &type metadata for EngagementUpsellPlacement.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF279768);
  }
  return result;
}

unint64_t sub_1BA1E34F4()
{
  unint64_t result;

  result = qword_1EF279770;
  if (!qword_1EF279770)
  {
    result = MEMORY[0x1BCCD76CC](&protocol conformance descriptor for EngagementUpsellBanner, &type metadata for EngagementUpsellBanner);
    atomic_store(result, (unint64_t *)&qword_1EF279770);
  }
  return result;
}

uint64_t sub_1BA1E3538(uint64_t a1)
{
  return EngagementUpsellPlacement.init(from:)(a1);
}

uint64_t EngagementUpsellPlacement.init(from:)(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char v10;
  char v11;
  int v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  _QWORD v19[275];
  _BYTE v20[320];
  uint64_t v21;
  _BYTE v22[320];
  uint64_t v23;
  _BYTE v24[320];
  uint64_t v25;
  _BYTE v26[320];
  uint64_t v27;
  _BYTE v28[320];
  uint64_t v29;
  _BYTE v30[320];
  uint64_t v31;
  _BYTE v32[320];
  uint64_t v33;
  uint64_t v34;

  v2 = (_QWORD *)MEMORY[0x1E0C80A78](a1);
  v4 = v3;
  sub_1BA1E3C60(0, &qword_1EF279778, MEMORY[0x1E0DED048]);
  v34 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v16 - v7;
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  sub_1BA1E34B0();
  sub_1BA202A24();
  if (v1)
  {
    v14 = (uint64_t)v2;
  }
  else
  {
    v18 = v4;
    LOBYTE(v19[0]) = 0;
    v9 = sub_1BA2028B0();
    v11 = v10;
    LOBYTE(v19[0]) = 1;
    v12 = sub_1BA202898();
    v17 = v6;
    HIDWORD(v16) = v12;
    v32[319] = 2;
    sub_1BA1E3CBC();
    sub_1BA2028BC();
    v14 = (uint64_t)v2;
    sub_1BA1E3DDC((uint64_t)&v33, (uint64_t)v32, &qword_1ED5AF2D0);
    v30[319] = 3;
    sub_1BA2028BC();
    sub_1BA1E3DDC((uint64_t)&v31, (uint64_t)v30, &qword_1ED5AF2D0);
    v28[319] = 4;
    sub_1BA2028BC();
    sub_1BA1E3DDC((uint64_t)&v29, (uint64_t)v28, &qword_1ED5AF2D0);
    v26[319] = 5;
    sub_1BA2028BC();
    sub_1BA1E3DDC((uint64_t)&v27, (uint64_t)v26, &qword_1ED5AF2D0);
    v24[319] = 6;
    sub_1BA2028BC();
    sub_1BA1E3DDC((uint64_t)&v25, (uint64_t)v24, &qword_1ED5AF2D0);
    v22[319] = 7;
    sub_1BA2028BC();
    sub_1BA1E3DDC((uint64_t)&v23, (uint64_t)v22, &qword_1ED5AF2D0);
    v20[319] = 8;
    sub_1BA2028BC();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v8, v34);
    sub_1BA1E3DDC((uint64_t)&v21, (uint64_t)v20, &qword_1ED5AF2D0);
    if ((v11 & 1) != 0)
      v15 = 0;
    else
      v15 = v9;
    v19[0] = v15;
    LOBYTE(v19[1]) = BYTE4(v16) & 1;
    sub_1BA1E3DDC((uint64_t)v32, (uint64_t)&v19[2], &qword_1ED5AF2D0);
    sub_1BA1E3DDC((uint64_t)v30, (uint64_t)&v19[41], &qword_1ED5AF2D0);
    sub_1BA1E3DDC((uint64_t)v28, (uint64_t)&v19[80], &qword_1ED5AF2D0);
    sub_1BA1E3DDC((uint64_t)v26, (uint64_t)&v19[119], &qword_1ED5AF2D0);
    sub_1BA1E3DDC((uint64_t)v24, (uint64_t)&v19[158], &qword_1ED5AF2D0);
    sub_1BA1E3DDC((uint64_t)v22, (uint64_t)&v19[197], &qword_1ED5AF2D0);
    sub_1BA1E3DDC((uint64_t)v20, (uint64_t)&v19[236], &qword_1ED5AF2D0);
    memcpy(v18, v19, 0x898uLL);
  }
  return __swift_destroy_boxed_opaque_existential_1Tm(v14);
}

void sub_1BA1E3C60(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BA1E34B0();
    v7 = a3(a1, &type metadata for EngagementUpsellPlacement.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1BA1E3CBC()
{
  unint64_t result;

  result = qword_1EF279780;
  if (!qword_1EF279780)
  {
    result = MEMORY[0x1BCCD76CC](&protocol conformance descriptor for EngagementUpsellBanner, &type metadata for EngagementUpsellBanner);
    atomic_store(result, (unint64_t *)&qword_1EF279780);
  }
  return result;
}

uint64_t sub_1BA1E3D00(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;

  v6 = *(_OWORD *)(a1 + 272);
  v7 = *(_OWORD *)(a1 + 288);
  v4 = *(_OWORD *)(a1 + 240);
  v5 = *(_OWORD *)(a1 + 256);
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184),
    *(_QWORD *)(a1 + 192),
    *(_QWORD *)(a1 + 200),
    *(_QWORD *)(a1 + 208),
    *(_QWORD *)(a1 + 216),
    *(_QWORD *)(a1 + 224),
    *(_QWORD *)(a1 + 232),
    v4,
    *((_QWORD *)&v4 + 1),
    v5,
    *((_QWORD *)&v5 + 1),
    v6,
    *((_QWORD *)&v6 + 1),
    v7,
    *((_QWORD *)&v7 + 1),
    *(_QWORD *)(a1 + 304));
  return a1;
}

uint64_t sub_1BA1E3D8C(_QWORD *a1)
{
  return EngagementUpsellPlacement.encode(to:)(a1);
}

double sub_1BA1E3DA0(uint64_t a1)
{
  double result;

  result = 0.0;
  *(_OWORD *)a1 = xmmword_1BA203750;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 224) = 0u;
  *(_OWORD *)(a1 + 240) = 0u;
  *(_OWORD *)(a1 + 256) = 0u;
  *(_OWORD *)(a1 + 272) = 0u;
  *(_OWORD *)(a1 + 288) = 0u;
  *(_QWORD *)(a1 + 304) = 0;
  return result;
}

uint64_t sub_1BA1E3DDC(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  uint64_t v5;

  sub_1BA1B57B4(0, a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_1BA1E3E28(_QWORD *a1)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  a1[3] = 2;
  bzero(a1 + 4, 0x878uLL);
}

_QWORD *initializeWithCopy for EngagementUpsellPlacement(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  *a1 = *a2;
  *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
  v4 = a2[3];
  if (v4 == 1)
  {
    memcpy(a1 + 2, a2 + 2, 0x138uLL);
  }
  else
  {
    a1[2] = a2[2];
    a1[3] = v4;
    v5 = a2[5];
    a1[4] = a2[4];
    a1[5] = v5;
    v6 = a2[7];
    a1[6] = a2[6];
    a1[7] = v6;
    v7 = a2[9];
    a1[8] = a2[8];
    a1[9] = v7;
    v8 = a2[11];
    a1[10] = a2[10];
    a1[11] = v8;
    v9 = a2[13];
    a1[12] = a2[12];
    a1[13] = v9;
    v10 = a2[15];
    a1[14] = a2[14];
    a1[15] = v10;
    v11 = a2[17];
    a1[16] = a2[16];
    a1[17] = v11;
    v12 = a2[19];
    a1[18] = a2[18];
    a1[19] = v12;
    v13 = a2[21];
    a1[20] = a2[20];
    a1[21] = v13;
    v14 = a2[23];
    a1[22] = a2[22];
    a1[23] = v14;
    v15 = a2[25];
    a1[24] = a2[24];
    a1[25] = v15;
    v16 = a2[27];
    a1[26] = a2[26];
    a1[27] = v16;
    v17 = a2[29];
    a1[28] = a2[28];
    a1[29] = v17;
    v18 = a2[31];
    a1[30] = a2[30];
    a1[31] = v18;
    v19 = a2[33];
    a1[32] = a2[32];
    a1[33] = v19;
    v20 = a2[35];
    a1[34] = a2[34];
    a1[35] = v20;
    v21 = a2[37];
    a1[36] = a2[36];
    a1[37] = v21;
    *((_BYTE *)a1 + 304) = *((_BYTE *)a2 + 304);
    v22 = a2[40];
    a1[39] = a2[39];
    a1[40] = v22;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v23 = a2[42];
  if (v23 == 1)
  {
    memcpy(a1 + 41, a2 + 41, 0x138uLL);
  }
  else
  {
    a1[41] = a2[41];
    a1[42] = v23;
    v24 = a2[44];
    a1[43] = a2[43];
    a1[44] = v24;
    v25 = a2[46];
    a1[45] = a2[45];
    a1[46] = v25;
    v26 = a2[48];
    a1[47] = a2[47];
    a1[48] = v26;
    v27 = a2[50];
    a1[49] = a2[49];
    a1[50] = v27;
    v28 = a2[52];
    a1[51] = a2[51];
    a1[52] = v28;
    v29 = a2[54];
    a1[53] = a2[53];
    a1[54] = v29;
    v30 = a2[56];
    a1[55] = a2[55];
    a1[56] = v30;
    v31 = a2[58];
    a1[57] = a2[57];
    a1[58] = v31;
    v32 = a2[60];
    a1[59] = a2[59];
    a1[60] = v32;
    v33 = a2[62];
    a1[61] = a2[61];
    a1[62] = v33;
    v34 = a2[64];
    a1[63] = a2[63];
    a1[64] = v34;
    a1[65] = a2[65];
    a1[66] = a2[66];
    a1[67] = a2[67];
    a1[68] = a2[68];
    a1[69] = a2[69];
    a1[70] = a2[70];
    a1[71] = a2[71];
    a1[72] = a2[72];
    a1[73] = a2[73];
    a1[74] = a2[74];
    a1[75] = a2[75];
    a1[76] = a2[76];
    *((_BYTE *)a1 + 616) = *((_BYTE *)a2 + 616);
    a1[78] = a2[78];
    a1[79] = a2[79];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v35 = a2[81];
  if (v35 == 1)
  {
    memcpy(a1 + 80, a2 + 80, 0x138uLL);
  }
  else
  {
    a1[80] = a2[80];
    a1[81] = v35;
    a1[82] = a2[82];
    a1[83] = a2[83];
    a1[84] = a2[84];
    a1[85] = a2[85];
    a1[86] = a2[86];
    a1[87] = a2[87];
    a1[88] = a2[88];
    a1[89] = a2[89];
    a1[90] = a2[90];
    a1[91] = a2[91];
    a1[92] = a2[92];
    a1[93] = a2[93];
    a1[94] = a2[94];
    a1[95] = a2[95];
    a1[96] = a2[96];
    a1[97] = a2[97];
    a1[98] = a2[98];
    a1[99] = a2[99];
    a1[100] = a2[100];
    a1[101] = a2[101];
    a1[102] = a2[102];
    a1[103] = a2[103];
    a1[104] = a2[104];
    a1[105] = a2[105];
    a1[106] = a2[106];
    a1[107] = a2[107];
    a1[108] = a2[108];
    a1[109] = a2[109];
    a1[110] = a2[110];
    a1[111] = a2[111];
    a1[112] = a2[112];
    a1[113] = a2[113];
    a1[114] = a2[114];
    a1[115] = a2[115];
    *((_BYTE *)a1 + 928) = *((_BYTE *)a2 + 928);
    a1[117] = a2[117];
    a1[118] = a2[118];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v36 = a2[120];
  if (v36 == 1)
  {
    memcpy(a1 + 119, a2 + 119, 0x138uLL);
  }
  else
  {
    a1[119] = a2[119];
    a1[120] = v36;
    a1[121] = a2[121];
    a1[122] = a2[122];
    a1[123] = a2[123];
    a1[124] = a2[124];
    a1[125] = a2[125];
    a1[126] = a2[126];
    a1[127] = a2[127];
    a1[128] = a2[128];
    a1[129] = a2[129];
    a1[130] = a2[130];
    a1[131] = a2[131];
    a1[132] = a2[132];
    a1[133] = a2[133];
    a1[134] = a2[134];
    a1[135] = a2[135];
    a1[136] = a2[136];
    a1[137] = a2[137];
    a1[138] = a2[138];
    a1[139] = a2[139];
    a1[140] = a2[140];
    a1[141] = a2[141];
    a1[142] = a2[142];
    a1[143] = a2[143];
    a1[144] = a2[144];
    a1[145] = a2[145];
    a1[146] = a2[146];
    a1[147] = a2[147];
    a1[148] = a2[148];
    a1[149] = a2[149];
    a1[150] = a2[150];
    a1[151] = a2[151];
    a1[152] = a2[152];
    a1[153] = a2[153];
    a1[154] = a2[154];
    *((_BYTE *)a1 + 1240) = *((_BYTE *)a2 + 1240);
    a1[156] = a2[156];
    a1[157] = a2[157];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v37 = a2[159];
  if (v37 == 1)
  {
    memcpy(a1 + 158, a2 + 158, 0x138uLL);
  }
  else
  {
    a1[158] = a2[158];
    a1[159] = v37;
    a1[160] = a2[160];
    a1[161] = a2[161];
    a1[162] = a2[162];
    a1[163] = a2[163];
    a1[164] = a2[164];
    a1[165] = a2[165];
    a1[166] = a2[166];
    a1[167] = a2[167];
    a1[168] = a2[168];
    a1[169] = a2[169];
    a1[170] = a2[170];
    a1[171] = a2[171];
    a1[172] = a2[172];
    a1[173] = a2[173];
    a1[174] = a2[174];
    a1[175] = a2[175];
    a1[176] = a2[176];
    a1[177] = a2[177];
    a1[178] = a2[178];
    a1[179] = a2[179];
    a1[180] = a2[180];
    a1[181] = a2[181];
    a1[182] = a2[182];
    a1[183] = a2[183];
    a1[184] = a2[184];
    a1[185] = a2[185];
    a1[186] = a2[186];
    a1[187] = a2[187];
    a1[188] = a2[188];
    a1[189] = a2[189];
    a1[190] = a2[190];
    a1[191] = a2[191];
    a1[192] = a2[192];
    a1[193] = a2[193];
    *((_BYTE *)a1 + 1552) = *((_BYTE *)a2 + 1552);
    a1[195] = a2[195];
    a1[196] = a2[196];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v38 = a2[198];
  if (v38 == 1)
  {
    memcpy(a1 + 197, a2 + 197, 0x138uLL);
  }
  else
  {
    a1[197] = a2[197];
    a1[198] = v38;
    a1[199] = a2[199];
    a1[200] = a2[200];
    a1[201] = a2[201];
    a1[202] = a2[202];
    a1[203] = a2[203];
    a1[204] = a2[204];
    a1[205] = a2[205];
    a1[206] = a2[206];
    a1[207] = a2[207];
    a1[208] = a2[208];
    a1[209] = a2[209];
    a1[210] = a2[210];
    a1[211] = a2[211];
    a1[212] = a2[212];
    a1[213] = a2[213];
    a1[214] = a2[214];
    a1[215] = a2[215];
    a1[216] = a2[216];
    a1[217] = a2[217];
    a1[218] = a2[218];
    a1[219] = a2[219];
    a1[220] = a2[220];
    a1[221] = a2[221];
    a1[222] = a2[222];
    a1[223] = a2[223];
    a1[224] = a2[224];
    a1[225] = a2[225];
    a1[226] = a2[226];
    a1[227] = a2[227];
    a1[228] = a2[228];
    a1[229] = a2[229];
    a1[230] = a2[230];
    a1[231] = a2[231];
    a1[232] = a2[232];
    *((_BYTE *)a1 + 1864) = *((_BYTE *)a2 + 1864);
    a1[234] = a2[234];
    a1[235] = a2[235];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v39 = a2[237];
  if (v39 == 1)
  {
    memcpy(a1 + 236, a2 + 236, 0x138uLL);
  }
  else
  {
    a1[236] = a2[236];
    a1[237] = v39;
    a1[238] = a2[238];
    a1[239] = a2[239];
    a1[240] = a2[240];
    a1[241] = a2[241];
    a1[242] = a2[242];
    a1[243] = a2[243];
    a1[244] = a2[244];
    a1[245] = a2[245];
    a1[246] = a2[246];
    a1[247] = a2[247];
    a1[248] = a2[248];
    a1[249] = a2[249];
    a1[250] = a2[250];
    a1[251] = a2[251];
    a1[252] = a2[252];
    a1[253] = a2[253];
    a1[254] = a2[254];
    a1[255] = a2[255];
    a1[256] = a2[256];
    a1[257] = a2[257];
    a1[258] = a2[258];
    a1[259] = a2[259];
    a1[260] = a2[260];
    a1[261] = a2[261];
    a1[262] = a2[262];
    a1[263] = a2[263];
    a1[264] = a2[264];
    a1[265] = a2[265];
    a1[266] = a2[266];
    a1[267] = a2[267];
    a1[268] = a2[268];
    a1[269] = a2[269];
    a1[270] = a2[270];
    a1[271] = a2[271];
    *((_BYTE *)a1 + 2176) = *((_BYTE *)a2 + 2176);
    a1[273] = a2[273];
    a1[274] = a2[274];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

_QWORD *assignWithCopy for EngagementUpsellPlacement(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  const void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *a1 = *a2;
  *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
  v4 = a1 + 2;
  v5 = a2 + 2;
  v6 = a2[3];
  if (a1[3] == 1)
  {
    if (v6 != 1)
    {
      a1[2] = a2[2];
      a1[3] = a2[3];
      a1[4] = a2[4];
      a1[5] = a2[5];
      a1[6] = a2[6];
      a1[7] = a2[7];
      a1[8] = a2[8];
      a1[9] = a2[9];
      a1[10] = a2[10];
      a1[11] = a2[11];
      a1[12] = a2[12];
      a1[13] = a2[13];
      a1[14] = a2[14];
      a1[15] = a2[15];
      a1[16] = a2[16];
      a1[17] = a2[17];
      a1[18] = a2[18];
      a1[19] = a2[19];
      a1[20] = a2[20];
      a1[21] = a2[21];
      a1[22] = a2[22];
      a1[23] = a2[23];
      a1[24] = a2[24];
      a1[25] = a2[25];
      a1[26] = a2[26];
      a1[27] = a2[27];
      a1[28] = a2[28];
      a1[29] = a2[29];
      a1[30] = a2[30];
      a1[31] = a2[31];
      a1[32] = a2[32];
      a1[33] = a2[33];
      a1[34] = a2[34];
      a1[35] = a2[35];
      a1[36] = a2[36];
      a1[37] = a2[37];
      *((_BYTE *)a1 + 304) = *((_BYTE *)a2 + 304);
      a1[39] = a2[39];
      a1[40] = a2[40];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v6 == 1)
  {
    sub_1BA1E6CCC((uint64_t)(a1 + 2));
LABEL_6:
    memcpy(v4, v5, 0x138uLL);
    goto LABEL_8;
  }
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  a1[11] = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[12] = a2[12];
  a1[13] = a2[13];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[14] = a2[14];
  a1[15] = a2[15];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[16] = a2[16];
  a1[17] = a2[17];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[18] = a2[18];
  a1[19] = a2[19];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[20] = a2[20];
  a1[21] = a2[21];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[22] = a2[22];
  a1[23] = a2[23];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[24] = a2[24];
  a1[25] = a2[25];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[26] = a2[26];
  a1[27] = a2[27];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[28] = a2[28];
  a1[29] = a2[29];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[30] = a2[30];
  a1[31] = a2[31];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[32] = a2[32];
  a1[33] = a2[33];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[34] = a2[34];
  a1[35] = a2[35];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[36] = a2[36];
  a1[37] = a2[37];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_BYTE *)a1 + 304) = *((_BYTE *)a2 + 304);
  a1[39] = a2[39];
  a1[40] = a2[40];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_8:
  v7 = a2[42];
  if (a1[42] == 1)
  {
    if (v7 != 1)
    {
      a1[41] = a2[41];
      a1[42] = a2[42];
      a1[43] = a2[43];
      a1[44] = a2[44];
      a1[45] = a2[45];
      a1[46] = a2[46];
      a1[47] = a2[47];
      a1[48] = a2[48];
      a1[49] = a2[49];
      a1[50] = a2[50];
      a1[51] = a2[51];
      a1[52] = a2[52];
      a1[53] = a2[53];
      a1[54] = a2[54];
      a1[55] = a2[55];
      a1[56] = a2[56];
      a1[57] = a2[57];
      a1[58] = a2[58];
      a1[59] = a2[59];
      a1[60] = a2[60];
      a1[61] = a2[61];
      a1[62] = a2[62];
      a1[63] = a2[63];
      a1[64] = a2[64];
      a1[65] = a2[65];
      a1[66] = a2[66];
      a1[67] = a2[67];
      a1[68] = a2[68];
      a1[69] = a2[69];
      a1[70] = a2[70];
      a1[71] = a2[71];
      a1[72] = a2[72];
      a1[73] = a2[73];
      a1[74] = a2[74];
      a1[75] = a2[75];
      a1[76] = a2[76];
      *((_BYTE *)a1 + 616) = *((_BYTE *)a2 + 616);
      a1[78] = a2[78];
      a1[79] = a2[79];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_15;
    }
    goto LABEL_13;
  }
  if (v7 == 1)
  {
    sub_1BA1E6CCC((uint64_t)(a1 + 41));
LABEL_13:
    memcpy(a1 + 41, a2 + 41, 0x138uLL);
    goto LABEL_15;
  }
  a1[41] = a2[41];
  a1[42] = a2[42];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[43] = a2[43];
  a1[44] = a2[44];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[45] = a2[45];
  a1[46] = a2[46];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[47] = a2[47];
  a1[48] = a2[48];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[49] = a2[49];
  a1[50] = a2[50];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[51] = a2[51];
  a1[52] = a2[52];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[53] = a2[53];
  a1[54] = a2[54];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[55] = a2[55];
  a1[56] = a2[56];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[57] = a2[57];
  a1[58] = a2[58];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[59] = a2[59];
  a1[60] = a2[60];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[61] = a2[61];
  a1[62] = a2[62];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[63] = a2[63];
  a1[64] = a2[64];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[65] = a2[65];
  a1[66] = a2[66];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[67] = a2[67];
  a1[68] = a2[68];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[69] = a2[69];
  a1[70] = a2[70];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[71] = a2[71];
  a1[72] = a2[72];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[73] = a2[73];
  a1[74] = a2[74];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[75] = a2[75];
  a1[76] = a2[76];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_BYTE *)a1 + 616) = *((_BYTE *)a2 + 616);
  a1[78] = a2[78];
  a1[79] = a2[79];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_15:
  v8 = a2[81];
  if (a1[81] == 1)
  {
    if (v8 != 1)
    {
      a1[80] = a2[80];
      a1[81] = a2[81];
      a1[82] = a2[82];
      a1[83] = a2[83];
      a1[84] = a2[84];
      a1[85] = a2[85];
      a1[86] = a2[86];
      a1[87] = a2[87];
      a1[88] = a2[88];
      a1[89] = a2[89];
      a1[90] = a2[90];
      a1[91] = a2[91];
      a1[92] = a2[92];
      a1[93] = a2[93];
      a1[94] = a2[94];
      a1[95] = a2[95];
      a1[96] = a2[96];
      a1[97] = a2[97];
      a1[98] = a2[98];
      a1[99] = a2[99];
      a1[100] = a2[100];
      a1[101] = a2[101];
      a1[102] = a2[102];
      a1[103] = a2[103];
      a1[104] = a2[104];
      a1[105] = a2[105];
      a1[106] = a2[106];
      a1[107] = a2[107];
      a1[108] = a2[108];
      a1[109] = a2[109];
      a1[110] = a2[110];
      a1[111] = a2[111];
      a1[112] = a2[112];
      a1[113] = a2[113];
      a1[114] = a2[114];
      a1[115] = a2[115];
      *((_BYTE *)a1 + 928) = *((_BYTE *)a2 + 928);
      a1[117] = a2[117];
      a1[118] = a2[118];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_22;
    }
    goto LABEL_20;
  }
  if (v8 == 1)
  {
    sub_1BA1E6CCC((uint64_t)(a1 + 80));
LABEL_20:
    memcpy(a1 + 80, a2 + 80, 0x138uLL);
    goto LABEL_22;
  }
  a1[80] = a2[80];
  a1[81] = a2[81];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[82] = a2[82];
  a1[83] = a2[83];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[84] = a2[84];
  a1[85] = a2[85];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[86] = a2[86];
  a1[87] = a2[87];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[88] = a2[88];
  a1[89] = a2[89];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[90] = a2[90];
  a1[91] = a2[91];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[92] = a2[92];
  a1[93] = a2[93];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[94] = a2[94];
  a1[95] = a2[95];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[96] = a2[96];
  a1[97] = a2[97];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[98] = a2[98];
  a1[99] = a2[99];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[100] = a2[100];
  a1[101] = a2[101];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[102] = a2[102];
  a1[103] = a2[103];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[104] = a2[104];
  a1[105] = a2[105];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[106] = a2[106];
  a1[107] = a2[107];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[108] = a2[108];
  a1[109] = a2[109];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[110] = a2[110];
  a1[111] = a2[111];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[112] = a2[112];
  a1[113] = a2[113];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[114] = a2[114];
  a1[115] = a2[115];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_BYTE *)a1 + 928) = *((_BYTE *)a2 + 928);
  a1[117] = a2[117];
  a1[118] = a2[118];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_22:
  v9 = a2[120];
  if (a1[120] == 1)
  {
    if (v9 != 1)
    {
      a1[119] = a2[119];
      a1[120] = a2[120];
      a1[121] = a2[121];
      a1[122] = a2[122];
      a1[123] = a2[123];
      a1[124] = a2[124];
      a1[125] = a2[125];
      a1[126] = a2[126];
      a1[127] = a2[127];
      a1[128] = a2[128];
      a1[129] = a2[129];
      a1[130] = a2[130];
      a1[131] = a2[131];
      a1[132] = a2[132];
      a1[133] = a2[133];
      a1[134] = a2[134];
      a1[135] = a2[135];
      a1[136] = a2[136];
      a1[137] = a2[137];
      a1[138] = a2[138];
      a1[139] = a2[139];
      a1[140] = a2[140];
      a1[141] = a2[141];
      a1[142] = a2[142];
      a1[143] = a2[143];
      a1[144] = a2[144];
      a1[145] = a2[145];
      a1[146] = a2[146];
      a1[147] = a2[147];
      a1[148] = a2[148];
      a1[149] = a2[149];
      a1[150] = a2[150];
      a1[151] = a2[151];
      a1[152] = a2[152];
      a1[153] = a2[153];
      a1[154] = a2[154];
      *((_BYTE *)a1 + 1240) = *((_BYTE *)a2 + 1240);
      a1[156] = a2[156];
      a1[157] = a2[157];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_29;
    }
    goto LABEL_27;
  }
  if (v9 == 1)
  {
    sub_1BA1E6CCC((uint64_t)(a1 + 119));
LABEL_27:
    memcpy(a1 + 119, a2 + 119, 0x138uLL);
    goto LABEL_29;
  }
  a1[119] = a2[119];
  a1[120] = a2[120];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[121] = a2[121];
  a1[122] = a2[122];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[123] = a2[123];
  a1[124] = a2[124];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[125] = a2[125];
  a1[126] = a2[126];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[127] = a2[127];
  a1[128] = a2[128];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[129] = a2[129];
  a1[130] = a2[130];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[131] = a2[131];
  a1[132] = a2[132];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[133] = a2[133];
  a1[134] = a2[134];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[135] = a2[135];
  a1[136] = a2[136];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[137] = a2[137];
  a1[138] = a2[138];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[139] = a2[139];
  a1[140] = a2[140];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[141] = a2[141];
  a1[142] = a2[142];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[143] = a2[143];
  a1[144] = a2[144];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[145] = a2[145];
  a1[146] = a2[146];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[147] = a2[147];
  a1[148] = a2[148];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[149] = a2[149];
  a1[150] = a2[150];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[151] = a2[151];
  a1[152] = a2[152];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[153] = a2[153];
  a1[154] = a2[154];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_BYTE *)a1 + 1240) = *((_BYTE *)a2 + 1240);
  a1[156] = a2[156];
  a1[157] = a2[157];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_29:
  v10 = a2[159];
  if (a1[159] == 1)
  {
    if (v10 != 1)
    {
      a1[158] = a2[158];
      a1[159] = a2[159];
      a1[160] = a2[160];
      a1[161] = a2[161];
      a1[162] = a2[162];
      a1[163] = a2[163];
      a1[164] = a2[164];
      a1[165] = a2[165];
      a1[166] = a2[166];
      a1[167] = a2[167];
      a1[168] = a2[168];
      a1[169] = a2[169];
      a1[170] = a2[170];
      a1[171] = a2[171];
      a1[172] = a2[172];
      a1[173] = a2[173];
      a1[174] = a2[174];
      a1[175] = a2[175];
      a1[176] = a2[176];
      a1[177] = a2[177];
      a1[178] = a2[178];
      a1[179] = a2[179];
      a1[180] = a2[180];
      a1[181] = a2[181];
      a1[182] = a2[182];
      a1[183] = a2[183];
      a1[184] = a2[184];
      a1[185] = a2[185];
      a1[186] = a2[186];
      a1[187] = a2[187];
      a1[188] = a2[188];
      a1[189] = a2[189];
      a1[190] = a2[190];
      a1[191] = a2[191];
      a1[192] = a2[192];
      a1[193] = a2[193];
      *((_BYTE *)a1 + 1552) = *((_BYTE *)a2 + 1552);
      a1[195] = a2[195];
      a1[196] = a2[196];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_36;
    }
    goto LABEL_34;
  }
  if (v10 == 1)
  {
    sub_1BA1E6CCC((uint64_t)(a1 + 158));
LABEL_34:
    memcpy(a1 + 158, a2 + 158, 0x138uLL);
    goto LABEL_36;
  }
  a1[158] = a2[158];
  a1[159] = a2[159];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[160] = a2[160];
  a1[161] = a2[161];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[162] = a2[162];
  a1[163] = a2[163];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[164] = a2[164];
  a1[165] = a2[165];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[166] = a2[166];
  a1[167] = a2[167];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[168] = a2[168];
  a1[169] = a2[169];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[170] = a2[170];
  a1[171] = a2[171];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[172] = a2[172];
  a1[173] = a2[173];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[174] = a2[174];
  a1[175] = a2[175];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[176] = a2[176];
  a1[177] = a2[177];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[178] = a2[178];
  a1[179] = a2[179];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[180] = a2[180];
  a1[181] = a2[181];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[182] = a2[182];
  a1[183] = a2[183];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[184] = a2[184];
  a1[185] = a2[185];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[186] = a2[186];
  a1[187] = a2[187];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[188] = a2[188];
  a1[189] = a2[189];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[190] = a2[190];
  a1[191] = a2[191];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[192] = a2[192];
  a1[193] = a2[193];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_BYTE *)a1 + 1552) = *((_BYTE *)a2 + 1552);
  a1[195] = a2[195];
  a1[196] = a2[196];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_36:
  v11 = a2[198];
  if (a1[198] == 1)
  {
    if (v11 != 1)
    {
      a1[197] = a2[197];
      a1[198] = a2[198];
      a1[199] = a2[199];
      a1[200] = a2[200];
      a1[201] = a2[201];
      a1[202] = a2[202];
      a1[203] = a2[203];
      a1[204] = a2[204];
      a1[205] = a2[205];
      a1[206] = a2[206];
      a1[207] = a2[207];
      a1[208] = a2[208];
      a1[209] = a2[209];
      a1[210] = a2[210];
      a1[211] = a2[211];
      a1[212] = a2[212];
      a1[213] = a2[213];
      a1[214] = a2[214];
      a1[215] = a2[215];
      a1[216] = a2[216];
      a1[217] = a2[217];
      a1[218] = a2[218];
      a1[219] = a2[219];
      a1[220] = a2[220];
      a1[221] = a2[221];
      a1[222] = a2[222];
      a1[223] = a2[223];
      a1[224] = a2[224];
      a1[225] = a2[225];
      a1[226] = a2[226];
      a1[227] = a2[227];
      a1[228] = a2[228];
      a1[229] = a2[229];
      a1[230] = a2[230];
      a1[231] = a2[231];
      a1[232] = a2[232];
      *((_BYTE *)a1 + 1864) = *((_BYTE *)a2 + 1864);
      a1[234] = a2[234];
      a1[235] = a2[235];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_43;
    }
    goto LABEL_41;
  }
  if (v11 == 1)
  {
    sub_1BA1E6CCC((uint64_t)(a1 + 197));
LABEL_41:
    memcpy(a1 + 197, a2 + 197, 0x138uLL);
    goto LABEL_43;
  }
  a1[197] = a2[197];
  a1[198] = a2[198];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[199] = a2[199];
  a1[200] = a2[200];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[201] = a2[201];
  a1[202] = a2[202];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[203] = a2[203];
  a1[204] = a2[204];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[205] = a2[205];
  a1[206] = a2[206];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[207] = a2[207];
  a1[208] = a2[208];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[209] = a2[209];
  a1[210] = a2[210];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[211] = a2[211];
  a1[212] = a2[212];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[213] = a2[213];
  a1[214] = a2[214];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[215] = a2[215];
  a1[216] = a2[216];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[217] = a2[217];
  a1[218] = a2[218];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[219] = a2[219];
  a1[220] = a2[220];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[221] = a2[221];
  a1[222] = a2[222];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[223] = a2[223];
  a1[224] = a2[224];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[225] = a2[225];
  a1[226] = a2[226];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[227] = a2[227];
  a1[228] = a2[228];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[229] = a2[229];
  a1[230] = a2[230];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[231] = a2[231];
  a1[232] = a2[232];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_BYTE *)a1 + 1864) = *((_BYTE *)a2 + 1864);
  a1[234] = a2[234];
  a1[235] = a2[235];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_43:
  v12 = a2[237];
  if (a1[237] != 1)
  {
    if (v12 != 1)
    {
      a1[236] = a2[236];
      a1[237] = a2[237];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[238] = a2[238];
      a1[239] = a2[239];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[240] = a2[240];
      a1[241] = a2[241];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[242] = a2[242];
      a1[243] = a2[243];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[244] = a2[244];
      a1[245] = a2[245];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[246] = a2[246];
      a1[247] = a2[247];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[248] = a2[248];
      a1[249] = a2[249];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[250] = a2[250];
      a1[251] = a2[251];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[252] = a2[252];
      a1[253] = a2[253];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[254] = a2[254];
      a1[255] = a2[255];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[256] = a2[256];
      a1[257] = a2[257];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[258] = a2[258];
      a1[259] = a2[259];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[260] = a2[260];
      a1[261] = a2[261];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[262] = a2[262];
      a1[263] = a2[263];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[264] = a2[264];
      a1[265] = a2[265];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[266] = a2[266];
      a1[267] = a2[267];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[268] = a2[268];
      a1[269] = a2[269];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[270] = a2[270];
      a1[271] = a2[271];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((_BYTE *)a1 + 2176) = *((_BYTE *)a2 + 2176);
      a1[273] = a2[273];
      a1[274] = a2[274];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1BA1E6CCC((uint64_t)(a1 + 236));
    goto LABEL_48;
  }
  if (v12 == 1)
  {
LABEL_48:
    memcpy(a1 + 236, a2 + 236, 0x138uLL);
    return a1;
  }
  a1[236] = a2[236];
  a1[237] = a2[237];
  a1[238] = a2[238];
  a1[239] = a2[239];
  a1[240] = a2[240];
  a1[241] = a2[241];
  a1[242] = a2[242];
  a1[243] = a2[243];
  a1[244] = a2[244];
  a1[245] = a2[245];
  a1[246] = a2[246];
  a1[247] = a2[247];
  a1[248] = a2[248];
  a1[249] = a2[249];
  a1[250] = a2[250];
  a1[251] = a2[251];
  a1[252] = a2[252];
  a1[253] = a2[253];
  a1[254] = a2[254];
  a1[255] = a2[255];
  a1[256] = a2[256];
  a1[257] = a2[257];
  a1[258] = a2[258];
  a1[259] = a2[259];
  a1[260] = a2[260];
  a1[261] = a2[261];
  a1[262] = a2[262];
  a1[263] = a2[263];
  a1[264] = a2[264];
  a1[265] = a2[265];
  a1[266] = a2[266];
  a1[267] = a2[267];
  a1[268] = a2[268];
  a1[269] = a2[269];
  a1[270] = a2[270];
  a1[271] = a2[271];
  *((_BYTE *)a1 + 2176) = *((_BYTE *)a2 + 2176);
  a1[273] = a2[273];
  a1[274] = a2[274];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BA1E6CCC(uint64_t a1)
{
  destroy for EngagementUpsellBanner();
  return a1;
}

_QWORD *assignWithTake for EngagementUpsellPlacement(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  const void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  *a1 = *a2;
  *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
  v4 = a1 + 2;
  v5 = a2 + 2;
  if (a1[3] == 1)
    goto LABEL_4;
  v6 = a2[3];
  if (v6 == 1)
  {
    sub_1BA1E6CCC((uint64_t)v4);
LABEL_4:
    memcpy(v4, v5, 0x138uLL);
    goto LABEL_6;
  }
  a1[2] = a2[2];
  a1[3] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[5];
  a1[4] = a2[4];
  a1[5] = v7;
  swift_bridgeObjectRelease();
  v8 = a2[7];
  a1[6] = a2[6];
  a1[7] = v8;
  swift_bridgeObjectRelease();
  v9 = a2[9];
  a1[8] = a2[8];
  a1[9] = v9;
  swift_bridgeObjectRelease();
  v10 = a2[11];
  a1[10] = a2[10];
  a1[11] = v10;
  swift_bridgeObjectRelease();
  v11 = a2[13];
  a1[12] = a2[12];
  a1[13] = v11;
  swift_bridgeObjectRelease();
  v12 = a2[15];
  a1[14] = a2[14];
  a1[15] = v12;
  swift_bridgeObjectRelease();
  v13 = a2[17];
  a1[16] = a2[16];
  a1[17] = v13;
  swift_bridgeObjectRelease();
  v14 = a2[19];
  a1[18] = a2[18];
  a1[19] = v14;
  swift_bridgeObjectRelease();
  v15 = a2[21];
  a1[20] = a2[20];
  a1[21] = v15;
  swift_bridgeObjectRelease();
  v16 = a2[23];
  a1[22] = a2[22];
  a1[23] = v16;
  swift_bridgeObjectRelease();
  v17 = a2[25];
  a1[24] = a2[24];
  a1[25] = v17;
  swift_bridgeObjectRelease();
  v18 = a2[27];
  a1[26] = a2[26];
  a1[27] = v18;
  swift_bridgeObjectRelease();
  v19 = a2[29];
  a1[28] = a2[28];
  a1[29] = v19;
  swift_bridgeObjectRelease();
  v20 = a2[31];
  a1[30] = a2[30];
  a1[31] = v20;
  swift_bridgeObjectRelease();
  v21 = a2[33];
  a1[32] = a2[32];
  a1[33] = v21;
  swift_bridgeObjectRelease();
  v22 = a2[35];
  a1[34] = a2[34];
  a1[35] = v22;
  swift_bridgeObjectRelease();
  v23 = a2[37];
  a1[36] = a2[36];
  a1[37] = v23;
  swift_bridgeObjectRelease();
  *((_BYTE *)a1 + 304) = *((_BYTE *)a2 + 304);
  v24 = a2[40];
  a1[39] = a2[39];
  a1[40] = v24;
  swift_bridgeObjectRelease();
LABEL_6:
  if (a1[42] == 1)
  {
LABEL_9:
    memcpy(a1 + 41, a2 + 41, 0x138uLL);
    goto LABEL_11;
  }
  v25 = a2[42];
  if (v25 == 1)
  {
    sub_1BA1E6CCC((uint64_t)(a1 + 41));
    goto LABEL_9;
  }
  a1[41] = a2[41];
  a1[42] = v25;
  swift_bridgeObjectRelease();
  v26 = a2[44];
  a1[43] = a2[43];
  a1[44] = v26;
  swift_bridgeObjectRelease();
  v27 = a2[46];
  a1[45] = a2[45];
  a1[46] = v27;
  swift_bridgeObjectRelease();
  v28 = a2[48];
  a1[47] = a2[47];
  a1[48] = v28;
  swift_bridgeObjectRelease();
  v29 = a2[50];
  a1[49] = a2[49];
  a1[50] = v29;
  swift_bridgeObjectRelease();
  v30 = a2[52];
  a1[51] = a2[51];
  a1[52] = v30;
  swift_bridgeObjectRelease();
  v31 = a2[54];
  a1[53] = a2[53];
  a1[54] = v31;
  swift_bridgeObjectRelease();
  v32 = a2[56];
  a1[55] = a2[55];
  a1[56] = v32;
  swift_bridgeObjectRelease();
  v33 = a2[58];
  a1[57] = a2[57];
  a1[58] = v33;
  swift_bridgeObjectRelease();
  v34 = a2[60];
  a1[59] = a2[59];
  a1[60] = v34;
  swift_bridgeObjectRelease();
  v35 = a2[62];
  a1[61] = a2[61];
  a1[62] = v35;
  swift_bridgeObjectRelease();
  v36 = a2[64];
  a1[63] = a2[63];
  a1[64] = v36;
  swift_bridgeObjectRelease();
  a1[65] = a2[65];
  a1[66] = a2[66];
  swift_bridgeObjectRelease();
  a1[67] = a2[67];
  a1[68] = a2[68];
  swift_bridgeObjectRelease();
  a1[69] = a2[69];
  a1[70] = a2[70];
  swift_bridgeObjectRelease();
  a1[71] = a2[71];
  a1[72] = a2[72];
  swift_bridgeObjectRelease();
  a1[73] = a2[73];
  a1[74] = a2[74];
  swift_bridgeObjectRelease();
  a1[75] = a2[75];
  a1[76] = a2[76];
  swift_bridgeObjectRelease();
  *((_BYTE *)a1 + 616) = *((_BYTE *)a2 + 616);
  a1[78] = a2[78];
  a1[79] = a2[79];
  swift_bridgeObjectRelease();
LABEL_11:
  if (a1[81] == 1)
  {
LABEL_14:
    memcpy(a1 + 80, a2 + 80, 0x138uLL);
    goto LABEL_16;
  }
  v37 = a2[81];
  if (v37 == 1)
  {
    sub_1BA1E6CCC((uint64_t)(a1 + 80));
    goto LABEL_14;
  }
  a1[80] = a2[80];
  a1[81] = v37;
  swift_bridgeObjectRelease();
  a1[82] = a2[82];
  a1[83] = a2[83];
  swift_bridgeObjectRelease();
  a1[84] = a2[84];
  a1[85] = a2[85];
  swift_bridgeObjectRelease();
  a1[86] = a2[86];
  a1[87] = a2[87];
  swift_bridgeObjectRelease();
  a1[88] = a2[88];
  a1[89] = a2[89];
  swift_bridgeObjectRelease();
  a1[90] = a2[90];
  a1[91] = a2[91];
  swift_bridgeObjectRelease();
  a1[92] = a2[92];
  a1[93] = a2[93];
  swift_bridgeObjectRelease();
  a1[94] = a2[94];
  a1[95] = a2[95];
  swift_bridgeObjectRelease();
  a1[96] = a2[96];
  a1[97] = a2[97];
  swift_bridgeObjectRelease();
  a1[98] = a2[98];
  a1[99] = a2[99];
  swift_bridgeObjectRelease();
  a1[100] = a2[100];
  a1[101] = a2[101];
  swift_bridgeObjectRelease();
  a1[102] = a2[102];
  a1[103] = a2[103];
  swift_bridgeObjectRelease();
  a1[104] = a2[104];
  a1[105] = a2[105];
  swift_bridgeObjectRelease();
  a1[106] = a2[106];
  a1[107] = a2[107];
  swift_bridgeObjectRelease();
  a1[108] = a2[108];
  a1[109] = a2[109];
  swift_bridgeObjectRelease();
  a1[110] = a2[110];
  a1[111] = a2[111];
  swift_bridgeObjectRelease();
  a1[112] = a2[112];
  a1[113] = a2[113];
  swift_bridgeObjectRelease();
  a1[114] = a2[114];
  a1[115] = a2[115];
  swift_bridgeObjectRelease();
  *((_BYTE *)a1 + 928) = *((_BYTE *)a2 + 928);
  a1[117] = a2[117];
  a1[118] = a2[118];
  swift_bridgeObjectRelease();
LABEL_16:
  if (a1[120] == 1)
  {
LABEL_19:
    memcpy(a1 + 119, a2 + 119, 0x138uLL);
    goto LABEL_21;
  }
  v38 = a2[120];
  if (v38 == 1)
  {
    sub_1BA1E6CCC((uint64_t)(a1 + 119));
    goto LABEL_19;
  }
  a1[119] = a2[119];
  a1[120] = v38;
  swift_bridgeObjectRelease();
  a1[121] = a2[121];
  a1[122] = a2[122];
  swift_bridgeObjectRelease();
  a1[123] = a2[123];
  a1[124] = a2[124];
  swift_bridgeObjectRelease();
  a1[125] = a2[125];
  a1[126] = a2[126];
  swift_bridgeObjectRelease();
  a1[127] = a2[127];
  a1[128] = a2[128];
  swift_bridgeObjectRelease();
  a1[129] = a2[129];
  a1[130] = a2[130];
  swift_bridgeObjectRelease();
  a1[131] = a2[131];
  a1[132] = a2[132];
  swift_bridgeObjectRelease();
  a1[133] = a2[133];
  a1[134] = a2[134];
  swift_bridgeObjectRelease();
  a1[135] = a2[135];
  a1[136] = a2[136];
  swift_bridgeObjectRelease();
  a1[137] = a2[137];
  a1[138] = a2[138];
  swift_bridgeObjectRelease();
  a1[139] = a2[139];
  a1[140] = a2[140];
  swift_bridgeObjectRelease();
  a1[141] = a2[141];
  a1[142] = a2[142];
  swift_bridgeObjectRelease();
  a1[143] = a2[143];
  a1[144] = a2[144];
  swift_bridgeObjectRelease();
  a1[145] = a2[145];
  a1[146] = a2[146];
  swift_bridgeObjectRelease();
  a1[147] = a2[147];
  a1[148] = a2[148];
  swift_bridgeObjectRelease();
  a1[149] = a2[149];
  a1[150] = a2[150];
  swift_bridgeObjectRelease();
  a1[151] = a2[151];
  a1[152] = a2[152];
  swift_bridgeObjectRelease();
  a1[153] = a2[153];
  a1[154] = a2[154];
  swift_bridgeObjectRelease();
  *((_BYTE *)a1 + 1240) = *((_BYTE *)a2 + 1240);
  a1[156] = a2[156];
  a1[157] = a2[157];
  swift_bridgeObjectRelease();
LABEL_21:
  if (a1[159] == 1)
  {
LABEL_24:
    memcpy(a1 + 158, a2 + 158, 0x138uLL);
    goto LABEL_26;
  }
  v39 = a2[159];
  if (v39 == 1)
  {
    sub_1BA1E6CCC((uint64_t)(a1 + 158));
    goto LABEL_24;
  }
  a1[158] = a2[158];
  a1[159] = v39;
  swift_bridgeObjectRelease();
  a1[160] = a2[160];
  a1[161] = a2[161];
  swift_bridgeObjectRelease();
  a1[162] = a2[162];
  a1[163] = a2[163];
  swift_bridgeObjectRelease();
  a1[164] = a2[164];
  a1[165] = a2[165];
  swift_bridgeObjectRelease();
  a1[166] = a2[166];
  a1[167] = a2[167];
  swift_bridgeObjectRelease();
  a1[168] = a2[168];
  a1[169] = a2[169];
  swift_bridgeObjectRelease();
  a1[170] = a2[170];
  a1[171] = a2[171];
  swift_bridgeObjectRelease();
  a1[172] = a2[172];
  a1[173] = a2[173];
  swift_bridgeObjectRelease();
  a1[174] = a2[174];
  a1[175] = a2[175];
  swift_bridgeObjectRelease();
  a1[176] = a2[176];
  a1[177] = a2[177];
  swift_bridgeObjectRelease();
  a1[178] = a2[178];
  a1[179] = a2[179];
  swift_bridgeObjectRelease();
  a1[180] = a2[180];
  a1[181] = a2[181];
  swift_bridgeObjectRelease();
  a1[182] = a2[182];
  a1[183] = a2[183];
  swift_bridgeObjectRelease();
  a1[184] = a2[184];
  a1[185] = a2[185];
  swift_bridgeObjectRelease();
  a1[186] = a2[186];
  a1[187] = a2[187];
  swift_bridgeObjectRelease();
  a1[188] = a2[188];
  a1[189] = a2[189];
  swift_bridgeObjectRelease();
  a1[190] = a2[190];
  a1[191] = a2[191];
  swift_bridgeObjectRelease();
  a1[192] = a2[192];
  a1[193] = a2[193];
  swift_bridgeObjectRelease();
  *((_BYTE *)a1 + 1552) = *((_BYTE *)a2 + 1552);
  a1[195] = a2[195];
  a1[196] = a2[196];
  swift_bridgeObjectRelease();
LABEL_26:
  if (a1[198] == 1)
  {
LABEL_29:
    memcpy(a1 + 197, a2 + 197, 0x138uLL);
    goto LABEL_31;
  }
  v40 = a2[198];
  if (v40 == 1)
  {
    sub_1BA1E6CCC((uint64_t)(a1 + 197));
    goto LABEL_29;
  }
  a1[197] = a2[197];
  a1[198] = v40;
  swift_bridgeObjectRelease();
  a1[199] = a2[199];
  a1[200] = a2[200];
  swift_bridgeObjectRelease();
  a1[201] = a2[201];
  a1[202] = a2[202];
  swift_bridgeObjectRelease();
  a1[203] = a2[203];
  a1[204] = a2[204];
  swift_bridgeObjectRelease();
  a1[205] = a2[205];
  a1[206] = a2[206];
  swift_bridgeObjectRelease();
  a1[207] = a2[207];
  a1[208] = a2[208];
  swift_bridgeObjectRelease();
  a1[209] = a2[209];
  a1[210] = a2[210];
  swift_bridgeObjectRelease();
  a1[211] = a2[211];
  a1[212] = a2[212];
  swift_bridgeObjectRelease();
  a1[213] = a2[213];
  a1[214] = a2[214];
  swift_bridgeObjectRelease();
  a1[215] = a2[215];
  a1[216] = a2[216];
  swift_bridgeObjectRelease();
  a1[217] = a2[217];
  a1[218] = a2[218];
  swift_bridgeObjectRelease();
  a1[219] = a2[219];
  a1[220] = a2[220];
  swift_bridgeObjectRelease();
  a1[221] = a2[221];
  a1[222] = a2[222];
  swift_bridgeObjectRelease();
  a1[223] = a2[223];
  a1[224] = a2[224];
  swift_bridgeObjectRelease();
  a1[225] = a2[225];
  a1[226] = a2[226];
  swift_bridgeObjectRelease();
  a1[227] = a2[227];
  a1[228] = a2[228];
  swift_bridgeObjectRelease();
  a1[229] = a2[229];
  a1[230] = a2[230];
  swift_bridgeObjectRelease();
  a1[231] = a2[231];
  a1[232] = a2[232];
  swift_bridgeObjectRelease();
  *((_BYTE *)a1 + 1864) = *((_BYTE *)a2 + 1864);
  a1[234] = a2[234];
  a1[235] = a2[235];
  swift_bridgeObjectRelease();
LABEL_31:
  if (a1[237] != 1)
  {
    v41 = a2[237];
    if (v41 != 1)
    {
      a1[236] = a2[236];
      a1[237] = v41;
      swift_bridgeObjectRelease();
      a1[238] = a2[238];
      a1[239] = a2[239];
      swift_bridgeObjectRelease();
      a1[240] = a2[240];
      a1[241] = a2[241];
      swift_bridgeObjectRelease();
      a1[242] = a2[242];
      a1[243] = a2[243];
      swift_bridgeObjectRelease();
      a1[244] = a2[244];
      a1[245] = a2[245];
      swift_bridgeObjectRelease();
      a1[246] = a2[246];
      a1[247] = a2[247];
      swift_bridgeObjectRelease();
      a1[248] = a2[248];
      a1[249] = a2[249];
      swift_bridgeObjectRelease();
      a1[250] = a2[250];
      a1[251] = a2[251];
      swift_bridgeObjectRelease();
      a1[252] = a2[252];
      a1[253] = a2[253];
      swift_bridgeObjectRelease();
      a1[254] = a2[254];
      a1[255] = a2[255];
      swift_bridgeObjectRelease();
      a1[256] = a2[256];
      a1[257] = a2[257];
      swift_bridgeObjectRelease();
      a1[258] = a2[258];
      a1[259] = a2[259];
      swift_bridgeObjectRelease();
      a1[260] = a2[260];
      a1[261] = a2[261];
      swift_bridgeObjectRelease();
      a1[262] = a2[262];
      a1[263] = a2[263];
      swift_bridgeObjectRelease();
      a1[264] = a2[264];
      a1[265] = a2[265];
      swift_bridgeObjectRelease();
      a1[266] = a2[266];
      a1[267] = a2[267];
      swift_bridgeObjectRelease();
      a1[268] = a2[268];
      a1[269] = a2[269];
      swift_bridgeObjectRelease();
      a1[270] = a2[270];
      a1[271] = a2[271];
      swift_bridgeObjectRelease();
      *((_BYTE *)a1 + 2176) = *((_BYTE *)a2 + 2176);
      a1[273] = a2[273];
      a1[274] = a2[274];
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1BA1E6CCC((uint64_t)(a1 + 236));
  }
  memcpy(a1 + 236, a2 + 236, 0x138uLL);
  return a1;
}

uint64_t storeEnumTagSinglePayload for EngagementUpsellPlacement(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 2184) = 0u;
    *(_OWORD *)(result + 2168) = 0u;
    *(_OWORD *)(result + 2152) = 0u;
    *(_OWORD *)(result + 2136) = 0u;
    *(_OWORD *)(result + 2120) = 0u;
    *(_OWORD *)(result + 2104) = 0u;
    *(_OWORD *)(result + 2088) = 0u;
    *(_OWORD *)(result + 2072) = 0u;
    *(_OWORD *)(result + 2056) = 0u;
    *(_OWORD *)(result + 2040) = 0u;
    *(_OWORD *)(result + 2024) = 0u;
    *(_OWORD *)(result + 2008) = 0u;
    *(_OWORD *)(result + 1992) = 0u;
    *(_OWORD *)(result + 1976) = 0u;
    *(_OWORD *)(result + 1960) = 0u;
    *(_OWORD *)(result + 1944) = 0u;
    *(_OWORD *)(result + 1928) = 0u;
    *(_OWORD *)(result + 1912) = 0u;
    *(_OWORD *)(result + 1896) = 0u;
    *(_OWORD *)(result + 1880) = 0u;
    *(_OWORD *)(result + 1864) = 0u;
    *(_OWORD *)(result + 1848) = 0u;
    *(_OWORD *)(result + 1832) = 0u;
    *(_OWORD *)(result + 1816) = 0u;
    *(_OWORD *)(result + 1800) = 0u;
    *(_OWORD *)(result + 1784) = 0u;
    *(_OWORD *)(result + 1768) = 0u;
    *(_OWORD *)(result + 1752) = 0u;
    *(_OWORD *)(result + 1736) = 0u;
    *(_OWORD *)(result + 1720) = 0u;
    *(_OWORD *)(result + 1704) = 0u;
    *(_OWORD *)(result + 1688) = 0u;
    *(_OWORD *)(result + 1672) = 0u;
    *(_OWORD *)(result + 1656) = 0u;
    *(_OWORD *)(result + 1640) = 0u;
    *(_OWORD *)(result + 1624) = 0u;
    *(_OWORD *)(result + 1608) = 0u;
    *(_OWORD *)(result + 1592) = 0u;
    *(_OWORD *)(result + 1576) = 0u;
    *(_OWORD *)(result + 1560) = 0u;
    *(_OWORD *)(result + 1544) = 0u;
    *(_OWORD *)(result + 1528) = 0u;
    *(_OWORD *)(result + 1512) = 0u;
    *(_OWORD *)(result + 1496) = 0u;
    *(_OWORD *)(result + 1480) = 0u;
    *(_OWORD *)(result + 1464) = 0u;
    *(_OWORD *)(result + 1448) = 0u;
    *(_OWORD *)(result + 1432) = 0u;
    *(_OWORD *)(result + 1416) = 0u;
    *(_OWORD *)(result + 1400) = 0u;
    *(_OWORD *)(result + 1384) = 0u;
    *(_OWORD *)(result + 1368) = 0u;
    *(_OWORD *)(result + 1352) = 0u;
    *(_OWORD *)(result + 1336) = 0u;
    *(_OWORD *)(result + 1320) = 0u;
    *(_OWORD *)(result + 1304) = 0u;
    *(_OWORD *)(result + 1288) = 0u;
    *(_OWORD *)(result + 1272) = 0u;
    *(_OWORD *)(result + 1256) = 0u;
    *(_OWORD *)(result + 1240) = 0u;
    *(_OWORD *)(result + 1224) = 0u;
    *(_OWORD *)(result + 1208) = 0u;
    *(_OWORD *)(result + 1192) = 0u;
    *(_OWORD *)(result + 1176) = 0u;
    *(_OWORD *)(result + 1160) = 0u;
    *(_OWORD *)(result + 1144) = 0u;
    *(_OWORD *)(result + 1128) = 0u;
    *(_OWORD *)(result + 1112) = 0u;
    *(_OWORD *)(result + 1096) = 0u;
    *(_OWORD *)(result + 1080) = 0u;
    *(_OWORD *)(result + 1064) = 0u;
    *(_OWORD *)(result + 1048) = 0u;
    *(_OWORD *)(result + 1032) = 0u;
    *(_OWORD *)(result + 1016) = 0u;
    *(_OWORD *)(result + 1000) = 0u;
    *(_OWORD *)(result + 984) = 0u;
    *(_OWORD *)(result + 968) = 0u;
    *(_OWORD *)(result + 952) = 0u;
    *(_OWORD *)(result + 936) = 0u;
    *(_OWORD *)(result + 920) = 0u;
    *(_OWORD *)(result + 904) = 0u;
    *(_OWORD *)(result + 888) = 0u;
    *(_OWORD *)(result + 872) = 0u;
    *(_OWORD *)(result + 856) = 0u;
    *(_OWORD *)(result + 840) = 0u;
    *(_OWORD *)(result + 824) = 0u;
    *(_OWORD *)(result + 808) = 0u;
    *(_OWORD *)(result + 792) = 0u;
    *(_OWORD *)(result + 776) = 0u;
    *(_OWORD *)(result + 760) = 0u;
    *(_OWORD *)(result + 744) = 0u;
    *(_OWORD *)(result + 728) = 0u;
    *(_OWORD *)(result + 712) = 0u;
    *(_OWORD *)(result + 696) = 0u;
    *(_OWORD *)(result + 680) = 0u;
    *(_OWORD *)(result + 664) = 0u;
    *(_OWORD *)(result + 648) = 0u;
    *(_OWORD *)(result + 632) = 0u;
    *(_OWORD *)(result + 616) = 0u;
    *(_OWORD *)(result + 600) = 0u;
    *(_OWORD *)(result + 584) = 0u;
    *(_OWORD *)(result + 568) = 0u;
    *(_OWORD *)(result + 552) = 0u;
    *(_OWORD *)(result + 536) = 0u;
    *(_OWORD *)(result + 520) = 0u;
    *(_OWORD *)(result + 504) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 - 2147483646;
    if (a3 > 0x7FFFFFFD)
      *(_BYTE *)(result + 2200) = 1;
  }
  else
  {
    if (a3 > 0x7FFFFFFD)
      *(_BYTE *)(result + 2200) = 0;
    if (a2)
      *(_QWORD *)(result + 24) = a2 + 1;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for EngagementUpsellPlacement.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF8)
    goto LABEL_17;
  if (a2 + 8 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 8) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 8;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 8;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 8;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 9;
  v8 = v6 - 9;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for EngagementUpsellPlacement.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_1BA1E7DD8 + 4 * byte_1BA204766[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_1BA1E7E0C + 4 * byte_1BA204761[v4]))();
}

uint64_t sub_1BA1E7E0C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA1E7E14(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BA1E7E1CLL);
  return result;
}

uint64_t sub_1BA1E7E28(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BA1E7E30);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_1BA1E7E34(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA1E7E3C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for EngagementUpsellPlacement.CodingKeys()
{
  return &type metadata for EngagementUpsellPlacement.CodingKeys;
}

unint64_t sub_1BA1E7E5C()
{
  unint64_t result;

  result = qword_1EF279788;
  if (!qword_1EF279788)
  {
    result = MEMORY[0x1BCCD76CC](&unk_1BA2048D0, &type metadata for EngagementUpsellPlacement.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF279788);
  }
  return result;
}

unint64_t sub_1BA1E7EA4()
{
  unint64_t result;

  result = qword_1EF279790;
  if (!qword_1EF279790)
  {
    result = MEMORY[0x1BCCD76CC](&unk_1BA204808, &type metadata for EngagementUpsellPlacement.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF279790);
  }
  return result;
}

unint64_t sub_1BA1E7EEC()
{
  unint64_t result;

  result = qword_1EF279798;
  if (!qword_1EF279798)
  {
    result = MEMORY[0x1BCCD76CC](&unk_1BA204830, &type metadata for EngagementUpsellPlacement.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF279798);
  }
  return result;
}

uint64_t sub_1BA1E7F30()
{
  unint64_t v0;

  v0 = sub_1BA202868();
  swift_bridgeObjectRelease();
  if (v0 >= 9)
    return 9;
  else
    return v0;
}

uint64_t destroy for EngagementPlacementRequest()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s14NewsEngagement26EngagementPlacementRequestVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for EngagementPlacementRequest(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

uint64_t assignWithTake for EngagementPlacementRequest(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for EngagementPlacementRequest(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 17))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for EngagementPlacementRequest(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 17) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for EngagementPlacementRequest()
{
  return &type metadata for EngagementPlacementRequest;
}

void static EngagementUpsellCondition.== infix(_:_:)(uint64_t a1)
{
  __asm { BR              X12 }
}

uint64_t sub_1BA1E8160@<X0>(unint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  char v6;

  if (a1 >> 61)
  {
    v6 = 0;
  }
  else
  {
    v2 = v1[4];
    v3 = *(_QWORD *)(a1 + 32);
    if (v1[2] == *(_QWORD *)(a1 + 16) && v1[3] == *(_QWORD *)(a1 + 24))
      v5 = 1;
    else
      v5 = sub_1BA202988();
    v6 = v5 & (v2 == v3);
  }
  return v6 & 1;
}

void sub_1BA1E8358(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_1BA1E8364()
{
  sub_1BA1E8F64();
  return sub_1BA202A3C();
}

uint64_t sub_1BA1E838C()
{
  sub_1BA1E8F64();
  return sub_1BA202A48();
}

uint64_t sub_1BA1E83B4()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA1E83E8 + 4 * byte_1BA204995[*v0]))(0x496F546C61757165, 0xEA0000000000746ELL);
}

uint64_t sub_1BA1E83E8()
{
  return 0x426F546C61757165;
}

uint64_t sub_1BA1E8408()
{
  return 29295;
}

uint64_t sub_1BA1E8414()
{
  return 6581857;
}

uint64_t sub_1BA1E8424()
{
  return 7630702;
}

uint64_t sub_1BA1E8434@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BA1EA810(a1, a2);
  *a3 = result;
  return result;
}

void sub_1BA1E8458(_BYTE *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_1BA1E8464()
{
  sub_1BA1E9074();
  return sub_1BA202A3C();
}

uint64_t sub_1BA1E848C()
{
  sub_1BA1E9074();
  return sub_1BA202A48();
}

uint64_t sub_1BA1E84B4()
{
  sub_1BA1E8FEC();
  return sub_1BA202A3C();
}

uint64_t sub_1BA1E84DC()
{
  sub_1BA1E8FEC();
  return sub_1BA202A48();
}

uint64_t sub_1BA1E8504()
{
  _BYTE *v0;

  if (*v0)
    return 0x65756C6176;
  else
    return 0x79747265706F7270;
}

uint64_t sub_1BA1E853C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BA1EAA18(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BA1E8560()
{
  sub_1BA1E9030();
  return sub_1BA202A3C();
}

uint64_t sub_1BA1E8588()
{
  sub_1BA1E9030();
  return sub_1BA202A48();
}

uint64_t sub_1BA1E85B0()
{
  sub_1BA202A00();
  sub_1BA202A0C();
  return sub_1BA202A18();
}

uint64_t sub_1BA1E85F0()
{
  return sub_1BA202A0C();
}

uint64_t sub_1BA1E8614()
{
  sub_1BA202A00();
  sub_1BA202A0C();
  return sub_1BA202A18();
}

uint64_t sub_1BA1E8650()
{
  return 0x6F697469646E6F63;
}

uint64_t sub_1BA1E866C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x6F697469646E6F63 && a2 == 0xE90000000000006ELL)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1BA202988();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1BA1E870C()
{
  sub_1BA1E8F20();
  return sub_1BA202A3C();
}

uint64_t sub_1BA1E8734()
{
  sub_1BA1E8F20();
  return sub_1BA202A48();
}

uint64_t sub_1BA1E875C()
{
  _BYTE *v0;

  if (*v0)
    return 0x7468676972;
  else
    return 1952867692;
}

uint64_t sub_1BA1E878C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BA1EAB00(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BA1E87B0()
{
  sub_1BA1E8FA8();
  return sub_1BA202A3C();
}

uint64_t sub_1BA1E87D8()
{
  sub_1BA1E8FA8();
  return sub_1BA202A48();
}

void EngagementUpsellCondition.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  _QWORD v17[18];

  v2 = v1;
  v4 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170];
  sub_1BA1E9C3C(0, &qword_1EF2797A0, (uint64_t (*)(void))sub_1BA1E8F20, (uint64_t)&type metadata for EngagementUpsellCondition.NotCodingKeys, MEMORY[0x1E0DED170]);
  v17[8] = v5;
  v17[1] = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v17[6] = (char *)v17 - v6;
  sub_1BA1E9C3C(0, &qword_1EF2797B0, (uint64_t (*)(void))sub_1BA1E8F64, (uint64_t)&type metadata for EngagementUpsellCondition.AndCodingKeys, v4);
  v17[11] = *(_QWORD *)(v7 - 8);
  v17[12] = v7;
  MEMORY[0x1E0C80A78](v7);
  v17[10] = (char *)v17 - v8;
  sub_1BA1E9C3C(0, &qword_1EF2797C0, (uint64_t (*)(void))sub_1BA1E8FA8, (uint64_t)&type metadata for EngagementUpsellCondition.OrCodingKeys, v4);
  v17[9] = v9;
  v17[7] = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v17[5] = (char *)v17 - v10;
  sub_1BA1E9C3C(0, &qword_1EF2797D0, (uint64_t (*)(void))sub_1BA1E8FEC, (uint64_t)&type metadata for EngagementUpsellCondition.EqualToBoolCodingKeys, v4);
  v17[3] = *(_QWORD *)(v11 - 8);
  v17[4] = v11;
  MEMORY[0x1E0C80A78](v11);
  sub_1BA1E9C3C(0, &qword_1EF2797E0, (uint64_t (*)(void))sub_1BA1E9030, (uint64_t)&type metadata for EngagementUpsellCondition.EqualToIntCodingKeys, v4);
  v17[2] = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  sub_1BA1E9C3C(0, &qword_1EF2797F0, (uint64_t (*)(void))sub_1BA1E9074, (uint64_t)&type metadata for EngagementUpsellCondition.CodingKeys, v4);
  v17[16] = v13;
  v17[13] = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)v17 - v14;
  v16 = *v2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA1E9074();
  v17[15] = v15;
  sub_1BA202A30();
  __asm { BR              X10 }
}

uint64_t sub_1BA1E8A8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v2 - 72) = 0;
  sub_1BA1E9030();
  v4 = *(_QWORD *)(v2 - 104);
  v3 = *(_QWORD *)(v2 - 96);
  sub_1BA202904();
  *(_BYTE *)(v2 - 72) = 0;
  v5 = *(_QWORD *)(v2 - 112);
  sub_1BA202940();
  if (!v5)
  {
    *(_BYTE *)(v2 - 72) = 1;
    sub_1BA202964();
  }
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 208) + 8))(v0, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 120) + 8))(v4, v3);
}

unint64_t sub_1BA1E8F20()
{
  unint64_t result;

  result = qword_1EF2797A8;
  if (!qword_1EF2797A8)
  {
    result = MEMORY[0x1BCCD76CC](&unk_1BA2050E0, &type metadata for EngagementUpsellCondition.NotCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2797A8);
  }
  return result;
}

unint64_t sub_1BA1E8F64()
{
  unint64_t result;

  result = qword_1EF2797B8;
  if (!qword_1EF2797B8)
  {
    result = MEMORY[0x1BCCD76CC](&unk_1BA205090, &type metadata for EngagementUpsellCondition.AndCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2797B8);
  }
  return result;
}

unint64_t sub_1BA1E8FA8()
{
  unint64_t result;

  result = qword_1EF2797C8;
  if (!qword_1EF2797C8)
  {
    result = MEMORY[0x1BCCD76CC](&unk_1BA205040, &type metadata for EngagementUpsellCondition.OrCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2797C8);
  }
  return result;
}

unint64_t sub_1BA1E8FEC()
{
  unint64_t result;

  result = qword_1EF2797D8;
  if (!qword_1EF2797D8)
  {
    result = MEMORY[0x1BCCD76CC](&unk_1BA204FF0, &type metadata for EngagementUpsellCondition.EqualToBoolCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2797D8);
  }
  return result;
}

unint64_t sub_1BA1E9030()
{
  unint64_t result;

  result = qword_1EF2797E8;
  if (!qword_1EF2797E8)
  {
    result = MEMORY[0x1BCCD76CC](&unk_1BA204FA0, &type metadata for EngagementUpsellCondition.EqualToIntCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2797E8);
  }
  return result;
}

unint64_t sub_1BA1E9074()
{
  unint64_t result;

  result = qword_1EF2797F8;
  if (!qword_1EF2797F8)
  {
    result = MEMORY[0x1BCCD76CC](&unk_1BA204F50, &type metadata for EngagementUpsellCondition.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2797F8);
  }
  return result;
}

unint64_t sub_1BA1E90B8()
{
  unint64_t result;

  result = qword_1EF279800;
  if (!qword_1EF279800)
  {
    result = MEMORY[0x1BCCD76CC](&protocol conformance descriptor for EngagementUpsellCondition, &type metadata for EngagementUpsellCondition);
    atomic_store(result, (unint64_t *)&qword_1EF279800);
  }
  return result;
}

uint64_t EngagementUpsellCondition.init(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  _QWORD v29[18];
  uint64_t v30;
  uint64_t v31;

  v29[17] = a2;
  v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048];
  sub_1BA1E9C3C(0, &qword_1EF279808, (uint64_t (*)(void))sub_1BA1E8F20, (uint64_t)&type metadata for EngagementUpsellCondition.NotCodingKeys, MEMORY[0x1E0DED048]);
  v29[6] = v4;
  v29[10] = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v29[16] = (char *)v29 - v5;
  sub_1BA1E9C3C(0, &qword_1EF279810, (uint64_t (*)(void))sub_1BA1E8F64, (uint64_t)&type metadata for EngagementUpsellCondition.AndCodingKeys, v3);
  v29[9] = v6;
  v29[11] = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v29[15] = (char *)v29 - v7;
  sub_1BA1E9C3C(0, &qword_1EF279818, (uint64_t (*)(void))sub_1BA1E8FA8, (uint64_t)&type metadata for EngagementUpsellCondition.OrCodingKeys, v3);
  v29[7] = *(_QWORD *)(v8 - 8);
  v29[8] = v8;
  MEMORY[0x1E0C80A78](v8);
  v29[14] = (char *)v29 - v9;
  sub_1BA1E9C3C(0, &qword_1EF279820, (uint64_t (*)(void))sub_1BA1E8FEC, (uint64_t)&type metadata for EngagementUpsellCondition.EqualToBoolCodingKeys, v3);
  v29[5] = v10;
  v29[12] = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v29[13] = (char *)v29 - v11;
  sub_1BA1E9C3C(0, &qword_1EF279828, (uint64_t (*)(void))sub_1BA1E9030, (uint64_t)&type metadata for EngagementUpsellCondition.EqualToIntCodingKeys, v3);
  v29[4] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v29 - v14;
  sub_1BA1E9C3C(0, &qword_1EF279830, (uint64_t (*)(void))sub_1BA1E9074, (uint64_t)&type metadata for EngagementUpsellCondition.CodingKeys, v3);
  v17 = v16;
  v18 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = *(_QWORD *)(a1 + 24);
  v30 = a1;
  v20 = (_QWORD *)a1;
  v22 = (char *)v29 - v21;
  __swift_project_boxed_opaque_existential_1(v20, v19);
  sub_1BA1E9074();
  v23 = v31;
  sub_1BA202A24();
  if (!v23)
  {
    v29[1] = v13;
    v29[2] = v15;
    v29[3] = 0;
    v31 = v18;
    v24 = sub_1BA2028F8();
    if (*(_QWORD *)(v24 + 16) == 1)
      __asm { BR              X10 }
    v25 = sub_1BA2027A8();
    swift_allocError();
    v27 = v26;
    sub_1BA1E9C98();
    *v27 = &type metadata for EngagementUpsellCondition;
    sub_1BA202880();
    sub_1BA202790();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v25 - 8) + 104))(v27, *MEMORY[0x1E0DEC450], v25);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v22, v17);
  }
  return __swift_destroy_boxed_opaque_existential_1Tm(v30);
}

void sub_1BA1E9C3C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;

  if (!*a2)
  {
    v9 = a3();
    v10 = a5(a1, a4, v9);
    if (!v11)
      atomic_store(v10, a2);
  }
}

void sub_1BA1E9C98()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF279838)
  {
    sub_1BA1E9D04();
    sub_1BA20279C();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF279838);
  }
}

unint64_t sub_1BA1E9D04()
{
  unint64_t result;

  result = qword_1EF279840;
  if (!qword_1EF279840)
  {
    result = swift_getExistentialMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF279840);
  }
  return result;
}

uint64_t sub_1BA1E9D40()
{
  swift_release();
  return swift_deallocObject();
}

unint64_t sub_1BA1E9D68()
{
  unint64_t result;

  result = qword_1EF279848;
  if (!qword_1EF279848)
  {
    result = MEMORY[0x1BCCD76CC](&protocol conformance descriptor for EngagementUpsellCondition, &type metadata for EngagementUpsellCondition);
    atomic_store(result, (unint64_t *)&qword_1EF279848);
  }
  return result;
}

uint64_t sub_1BA1E9DAC()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BA1E9DE0()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BA1E9E04()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BA1E9E28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return EngagementUpsellCondition.init(from:)(a1, a2);
}

void sub_1BA1E9E3C(_QWORD *a1)
{
  EngagementUpsellCondition.encode(to:)(a1);
}

_QWORD *initializeBufferWithCopyOfBuffer for EngagementUpsellCondition(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  return a1;
}

uint64_t destroy for EngagementUpsellCondition()
{
  return swift_release();
}

_QWORD *assignWithCopy for EngagementUpsellCondition(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  return a1;
}

_QWORD *__swift_memcpy8_8(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

_QWORD *assignWithTake for EngagementUpsellCondition(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for EngagementUpsellCondition(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7C && *(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 124);
  v3 = (((*(_QWORD *)a1 >> 57) >> 4) | (8 * ((*(_QWORD *)a1 >> 57) & 8 | *(_QWORD *)a1 & 7))) ^ 0x7F;
  if (v3 >= 0x7B)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for EngagementUpsellCondition(uint64_t result, unsigned int a2, unsigned int a3)
{
  uint64_t v3;

  if (a2 > 0x7B)
  {
    *(_QWORD *)result = a2 - 124;
    if (a3 >= 0x7C)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7C)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
    {
      v3 = (-a2 >> 3) & 0xF | (16 * (-a2 & 0x7F));
      *(_QWORD *)result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_1BA1E9FBC(_QWORD *a1)
{
  return *a1 >> 61;
}

_QWORD *sub_1BA1E9FC8(_QWORD *result)
{
  *result &= 0x1FFFFFFFFFFFFFFFuLL;
  return result;
}

uint64_t *sub_1BA1E9FD8(uint64_t *result, uint64_t a2)
{
  *result = *result & 0xFFFFFFFFFFFFFF8 | (a2 << 61);
  return result;
}

ValueMetadata *type metadata accessor for EngagementUpsellCondition()
{
  return &type metadata for EngagementUpsellCondition;
}

uint64_t dispatch thunk of EngagementUpsellConditionEvaluating.evaluate(condition:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t getEnumTagSinglePayload for EngagementUpsellCondition.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFC)
    goto LABEL_17;
  if (a2 + 4 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 4) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 4;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 4;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 4;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v8 = v6 - 5;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for EngagementUpsellCondition.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1BA1EA0E0 + 4 * byte_1BA2049A9[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1BA1EA114 + 4 * byte_1BA2049A4[v4]))();
}

uint64_t sub_1BA1EA114(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA1EA11C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BA1EA124);
  return result;
}

uint64_t sub_1BA1EA130(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BA1EA138);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1BA1EA13C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA1EA144(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for EngagementUpsellCondition.CodingKeys()
{
  return &type metadata for EngagementUpsellCondition.CodingKeys;
}

ValueMetadata *type metadata accessor for EngagementUpsellCondition.EqualToIntCodingKeys()
{
  return &type metadata for EngagementUpsellCondition.EqualToIntCodingKeys;
}

ValueMetadata *type metadata accessor for EngagementUpsellCondition.EqualToBoolCodingKeys()
{
  return &type metadata for EngagementUpsellCondition.EqualToBoolCodingKeys;
}

ValueMetadata *type metadata accessor for EngagementUpsellCondition.OrCodingKeys()
{
  return &type metadata for EngagementUpsellCondition.OrCodingKeys;
}

uint64_t _s14NewsEngagement25EngagementUpsellConditionO20EqualToIntCodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BA1EA1E4 + 4 * byte_1BA2049B3[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BA1EA218 + 4 * byte_1BA2049AE[v4]))();
}

uint64_t sub_1BA1EA218(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA1EA220(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BA1EA228);
  return result;
}

uint64_t sub_1BA1EA234(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BA1EA23CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BA1EA240(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA1EA248(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for EngagementUpsellCondition.AndCodingKeys()
{
  return &type metadata for EngagementUpsellCondition.AndCodingKeys;
}

uint64_t storeEnumTagSinglePayload for EngagementUpsellCondition.NotCodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BA1EA2A4 + 4 * byte_1BA2049B8[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BA1EA2C4 + 4 * byte_1BA2049BD[v4]))();
}

_BYTE *sub_1BA1EA2A4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BA1EA2C4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BA1EA2CC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BA1EA2D4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BA1EA2DC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BA1EA2E4(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for EngagementUpsellCondition.NotCodingKeys()
{
  return &type metadata for EngagementUpsellCondition.NotCodingKeys;
}

unint64_t sub_1BA1EA304()
{
  unint64_t result;

  result = qword_1EF279850;
  if (!qword_1EF279850)
  {
    result = MEMORY[0x1BCCD76CC](&unk_1BA204B90, &type metadata for EngagementUpsellCondition.NotCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF279850);
  }
  return result;
}

unint64_t sub_1BA1EA34C()
{
  unint64_t result;

  result = qword_1EF279858;
  if (!qword_1EF279858)
  {
    result = MEMORY[0x1BCCD76CC](&unk_1BA204C48, &type metadata for EngagementUpsellCondition.AndCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF279858);
  }
  return result;
}

unint64_t sub_1BA1EA394()
{
  unint64_t result;

  result = qword_1EF279860;
  if (!qword_1EF279860)
  {
    result = MEMORY[0x1BCCD76CC](&unk_1BA204D00, &type metadata for EngagementUpsellCondition.OrCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF279860);
  }
  return result;
}

unint64_t sub_1BA1EA3DC()
{
  unint64_t result;

  result = qword_1EF279868;
  if (!qword_1EF279868)
  {
    result = MEMORY[0x1BCCD76CC](&unk_1BA204DB8, &type metadata for EngagementUpsellCondition.EqualToBoolCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF279868);
  }
  return result;
}

unint64_t sub_1BA1EA424()
{
  unint64_t result;

  result = qword_1EF279870;
  if (!qword_1EF279870)
  {
    result = MEMORY[0x1BCCD76CC](&unk_1BA204E70, &type metadata for EngagementUpsellCondition.EqualToIntCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF279870);
  }
  return result;
}

unint64_t sub_1BA1EA46C()
{
  unint64_t result;

  result = qword_1EF279878;
  if (!qword_1EF279878)
  {
    result = MEMORY[0x1BCCD76CC](&unk_1BA204F28, &type metadata for EngagementUpsellCondition.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF279878);
  }
  return result;
}

unint64_t sub_1BA1EA4B4()
{
  unint64_t result;

  result = qword_1EF279880;
  if (!qword_1EF279880)
  {
    result = MEMORY[0x1BCCD76CC](&unk_1BA204E98, &type metadata for EngagementUpsellCondition.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF279880);
  }
  return result;
}

unint64_t sub_1BA1EA4FC()
{
  unint64_t result;

  result = qword_1EF279888;
  if (!qword_1EF279888)
  {
    result = MEMORY[0x1BCCD76CC](&unk_1BA204EC0, &type metadata for EngagementUpsellCondition.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF279888);
  }
  return result;
}

unint64_t sub_1BA1EA544()
{
  unint64_t result;

  result = qword_1EF279890;
  if (!qword_1EF279890)
  {
    result = MEMORY[0x1BCCD76CC](&unk_1BA204DE0, &type metadata for EngagementUpsellCondition.EqualToIntCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF279890);
  }
  return result;
}

unint64_t sub_1BA1EA58C()
{
  unint64_t result;

  result = qword_1EF279898;
  if (!qword_1EF279898)
  {
    result = MEMORY[0x1BCCD76CC](&unk_1BA204E08, &type metadata for EngagementUpsellCondition.EqualToIntCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF279898);
  }
  return result;
}

unint64_t sub_1BA1EA5D4()
{
  unint64_t result;

  result = qword_1EF2798A0;
  if (!qword_1EF2798A0)
  {
    result = MEMORY[0x1BCCD76CC](&unk_1BA204D28, &type metadata for EngagementUpsellCondition.EqualToBoolCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2798A0);
  }
  return result;
}

unint64_t sub_1BA1EA61C()
{
  unint64_t result;

  result = qword_1EF2798A8;
  if (!qword_1EF2798A8)
  {
    result = MEMORY[0x1BCCD76CC](&unk_1BA204D50, &type metadata for EngagementUpsellCondition.EqualToBoolCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2798A8);
  }
  return result;
}

unint64_t sub_1BA1EA664()
{
  unint64_t result;

  result = qword_1EF2798B0;
  if (!qword_1EF2798B0)
  {
    result = MEMORY[0x1BCCD76CC](&unk_1BA204C70, &type metadata for EngagementUpsellCondition.OrCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2798B0);
  }
  return result;
}

unint64_t sub_1BA1EA6AC()
{
  unint64_t result;

  result = qword_1EF2798B8;
  if (!qword_1EF2798B8)
  {
    result = MEMORY[0x1BCCD76CC](&unk_1BA204C98, &type metadata for EngagementUpsellCondition.OrCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2798B8);
  }
  return result;
}

unint64_t sub_1BA1EA6F4()
{
  unint64_t result;

  result = qword_1EF2798C0;
  if (!qword_1EF2798C0)
  {
    result = MEMORY[0x1BCCD76CC](&unk_1BA204BB8, &type metadata for EngagementUpsellCondition.AndCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2798C0);
  }
  return result;
}

unint64_t sub_1BA1EA73C()
{
  unint64_t result;

  result = qword_1EF2798C8;
  if (!qword_1EF2798C8)
  {
    result = MEMORY[0x1BCCD76CC](&unk_1BA204BE0, &type metadata for EngagementUpsellCondition.AndCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2798C8);
  }
  return result;
}

unint64_t sub_1BA1EA784()
{
  unint64_t result;

  result = qword_1EF2798D0;
  if (!qword_1EF2798D0)
  {
    result = MEMORY[0x1BCCD76CC](&unk_1BA204B00, &type metadata for EngagementUpsellCondition.NotCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2798D0);
  }
  return result;
}

unint64_t sub_1BA1EA7CC()
{
  unint64_t result;

  result = qword_1EF2798D8;
  if (!qword_1EF2798D8)
  {
    result = MEMORY[0x1BCCD76CC](&unk_1BA204B28, &type metadata for EngagementUpsellCondition.NotCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2798D8);
  }
  return result;
}

uint64_t sub_1BA1EA810(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x496F546C61757165 && a2 == 0xEA0000000000746ELL;
  if (v2 || (sub_1BA202988() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x426F546C61757165 && a2 == 0xEB000000006C6F6FLL || (sub_1BA202988() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 29295 && a2 == 0xE200000000000000 || (sub_1BA202988() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 6581857 && a2 == 0xE300000000000000 || (sub_1BA202988() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 7630702 && a2 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_1BA202988();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_1BA1EAA18(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x79747265706F7270 && a2 == 0xE800000000000000;
  if (v2 || (sub_1BA202988() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65756C6176 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1BA202988();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1BA1EAB00(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1952867692 && a2 == 0xE400000000000000;
  if (v2 || (sub_1BA202988() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7468676972 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1BA202988();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1BA1EABD8(uint64_t result)
{
  if ((~result & 0xF000000000000007) != 0)
    return swift_release();
  return result;
}

uint64_t sub_1BA1EAC14()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for Localized()
{
  return objc_opt_self();
}

void EngagementUIPlacement.kind.getter(_BYTE *a1@<X8>)
{
  char *v1;

  *a1 = byte_1BA2054CA[*v1];
}

BOOL static EngagementUIPlacementKind.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t EngagementUIPlacement.serviceType.getter()
{
  return 1937204590;
}

void EngagementUIPlacement.tipSource.getter()
{
  __asm { BR              X10 }
}

uint64_t sub_1BA1EACB0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_1BA202454();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 56))(v0, 1, 1, v1);
}

void *static EngagementUIPlacement.allCases.getter()
{
  return &unk_1E71ED858;
}

uint64_t sub_1BA1EAF1C()
{
  sub_1BA202A00();
  EngagementUIPlacement.rawValue.getter();
  sub_1BA202538();
  swift_bridgeObjectRelease();
  return sub_1BA202A18();
}

void sub_1BA1EAF80(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E71ED858;
}

uint64_t sub_1BA1EAF90()
{
  sub_1BA1B13B8();
  return sub_1BA2025B0();
}

uint64_t EngagementUIPlacementKind.hash(into:)()
{
  return sub_1BA202A0C();
}

uint64_t EngagementUIPlacement.description.getter()
{
  return EngagementUIPlacement.rawValue.getter();
}

void EngagementUIPlacement.anchor.getter(_BYTE *a1@<X8>)
{
  char *v1;

  *a1 = byte_1BA2054E8[*v1];
}

uint64_t EngagementUIPlacement.prewarmable.getter()
{
  _BYTE *v0;

  return (*v0 > 0x1DuLL) | (0xE000u >> *v0) & 1;
}

unint64_t sub_1BA1EB078()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF279978;
  if (!qword_1EF279978)
  {
    sub_1BA1EB0C0();
    result = MEMORY[0x1BCCD76CC](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF279978);
  }
  return result;
}

void sub_1BA1EB0C0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF279980)
  {
    v0 = sub_1BA20261C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF279980);
  }
}

unint64_t sub_1BA1EB118()
{
  unint64_t result;

  result = qword_1EF279988;
  if (!qword_1EF279988)
  {
    result = MEMORY[0x1BCCD76CC](&protocol conformance descriptor for EngagementUIPlacementAnchor, &type metadata for EngagementUIPlacementAnchor);
    atomic_store(result, (unint64_t *)&qword_1EF279988);
  }
  return result;
}

unint64_t sub_1BA1EB160()
{
  unint64_t result;

  result = qword_1EF279990;
  if (!qword_1EF279990)
  {
    result = MEMORY[0x1BCCD76CC](&protocol conformance descriptor for EngagementUIPlacementKind, &type metadata for EngagementUIPlacementKind);
    atomic_store(result, (unint64_t *)&qword_1EF279990);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for EngagementUIPlacementAnchor(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1BA1EB1F0 + 4 * byte_1BA2051A9[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1BA1EB224 + 4 * byte_1BA2051A4[v4]))();
}

uint64_t sub_1BA1EB224(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA1EB22C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BA1EB234);
  return result;
}

uint64_t sub_1BA1EB240(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BA1EB248);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1BA1EB24C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA1EB254(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t storeEnumTagSinglePayload for EngagementUIPlacementKind(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BA1EB2AC + 4 * byte_1BA2051B3[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BA1EB2E0 + 4 * byte_1BA2051AE[v4]))();
}

uint64_t sub_1BA1EB2E0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA1EB2E8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BA1EB2F0);
  return result;
}

uint64_t sub_1BA1EB2FC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BA1EB304);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BA1EB308(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA1EB310(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for EngagementUIPlacementKind()
{
  return &type metadata for EngagementUIPlacementKind;
}

uint64_t Assembly.assemblies.getter()
{
  return swift_bridgeObjectRetain();
}

id Assembly.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id Assembly.init()()
{
  char *v0;
  objc_class *ObjectType;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  objc_super v7;

  ObjectType = (objc_class *)swift_getObjectType();
  v2 = OBJC_IVAR___EGAssembly_assemblies;
  sub_1BA1C2804();
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1BA203760;
  v4 = type metadata accessor for EngagementAssembly();
  v5 = swift_allocObject();
  *(_QWORD *)(v3 + 56) = v4;
  *(_QWORD *)(v3 + 64) = sub_1BA1C29A0();
  *(_QWORD *)(v3 + 32) = v5;
  *(_QWORD *)&v0[v2] = v3;
  v7.receiver = v0;
  v7.super_class = ObjectType;
  return objc_msgSendSuper2(&v7, sel_init);
}

id Assembly.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1BA1EB45C()
{
  return MEMORY[0x1E0DEE9D8];
}

void sub_1BA1EB468(_QWORD *a1@<X8>)
{
  EngagementFeatureSettingsType.engagementUpsellConfig.getter(a1);
}

void EngagementFeatureSettingsType.engagementUpsellConfig.getter(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

ValueMetadata *type metadata accessor for Settings.Features()
{
  return &type metadata for Settings.Features;
}

uint64_t dispatch thunk of EngagementFeatureSettingsObserver.engagementFeatureSettingsDidChange()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of EngagementFeatureSettingsType.disableOverlayPlacements.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of EngagementFeatureSettingsType.disableOverlayPlacements.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of EngagementFeatureSettingsType.disableOverlayPlacements.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of EngagementFeatureSettingsType.blockMastheadUpsellBanner.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of EngagementFeatureSettingsType.blockMastheadUpsellBanner.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t dispatch thunk of EngagementFeatureSettingsType.blockedPlacements.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of EngagementFeatureSettingsType.addObserver(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 80))();
}

uint64_t dispatch thunk of EngagementFeatureSettingsType.removeObserver(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 88))();
}

uint64_t EngagementUpsellBannerPropertiesResult.bannerProperties.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1BA1EB4EC(v1, a1);
}

uint64_t sub_1BA1EB4EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA1BE274(0, &qword_1ED5AFE20, (void (*)(uint64_t))type metadata accessor for EngagementUpsellBannerProperties);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t EngagementUpsellBannerPropertiesResult.error.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for EngagementUpsellBannerPropertiesResult() + 20));
  *a1 = v3;
  return sub_1BA1BE364(v3);
}

uint64_t EngagementUpsellBannerPropertiesResult.trigger.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for EngagementUpsellBannerPropertiesResult() + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EngagementUpsellBannerPropertiesResult.init(bannerProperties:error:trigger:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t result;
  _QWORD *v10;

  v8 = *a2;
  sub_1BA1EB600(a1, a5);
  result = type metadata accessor for EngagementUpsellBannerPropertiesResult();
  *(_QWORD *)(a5 + *(int *)(result + 20)) = v8;
  v10 = (_QWORD *)(a5 + *(int *)(result + 24));
  *v10 = a3;
  v10[1] = a4;
  return result;
}

uint64_t sub_1BA1EB600(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA1BE274(0, &qword_1ED5AFE20, (void (*)(uint64_t))type metadata accessor for EngagementUpsellBannerProperties);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BA1EB654@<X0>(uint64_t a1@<X8>)
{
  return EngagementUpsellBannerPropertiesProviding.bannerProperties(for:)(a1);
}

Swift::Bool __swiftcall EngagementUpsellBannerPropertiesProviding.hasActiveBannerConfiguration(for:)(NewsEngagement::EngagementUIPlacement a1)
{
  return 0;
}

uint64_t sub_1BA1EB670(uint64_t a1, uint64_t a2)
{
  return EngagementUpsellBannerPropertiesProviding.triggerVisibility(for:)(*(Swift::String *)&a1);
}

NewsEngagement::EngagementPlacementVisibility __swiftcall EngagementUpsellBannerPropertiesProviding.triggerVisibility(for:)(Swift::String a1)
{
  _BYTE *v1;

  *v1 = 0;
  return a1._countAndFlagsBits;
}

uint64_t *initializeBufferWithCopyOfBuffer for EngagementUpsellBannerPropertiesResult(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int (*v17)(char *, uint64_t, uint64_t);
  unsigned int (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  char *__dst;
  uint64_t v40;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = (int *)type metadata accessor for EngagementUpsellBannerProperties();
    v8 = *((_QWORD *)v7 - 1);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, int *))(v8 + 48))(a2, 1, v7))
    {
      sub_1BA1BE274(0, &qword_1ED5AFE20, (void (*)(uint64_t))type metadata accessor for EngagementUpsellBannerProperties);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      v11 = a2[1];
      *a1 = *a2;
      a1[1] = v11;
      v12 = a2[3];
      a1[2] = a2[2];
      a1[3] = v12;
      v13 = v7[6];
      __dst = (char *)a1 + v13;
      v40 = v8;
      v14 = (char *)a2 + v13;
      v15 = sub_1BA202118();
      v16 = *(_QWORD *)(v15 - 8);
      v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
      swift_bridgeObjectRetain();
      v18 = v17;
      swift_bridgeObjectRetain();
      if (v17(v14, 1, v15))
      {
        sub_1BA1BE274(0, (unint64_t *)&qword_1ED5AFBC8, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
        memcpy(__dst, v14, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 16))(__dst, v14, v15);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(__dst, 0, 1, v15);
      }
      *(uint64_t *)((char *)a1 + v7[7]) = *(uint64_t *)((char *)a2 + v7[7]);
      v20 = v7[8];
      v21 = (char *)a1 + v20;
      v22 = (char *)a2 + v20;
      swift_bridgeObjectRetain();
      if (v18(v22, 1, v15))
      {
        sub_1BA1BE274(0, (unint64_t *)&qword_1ED5AFBC8, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
        memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v21, v22, v15);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v21, 0, 1, v15);
      }
      v24 = v7[9];
      v25 = (uint64_t *)((char *)a1 + v24);
      v26 = (uint64_t *)((char *)a2 + v24);
      v27 = v26[1];
      *v25 = *v26;
      v25[1] = v27;
      v28 = v7[10];
      v29 = (char *)a1 + v28;
      v30 = (char *)a2 + v28;
      swift_bridgeObjectRetain();
      if (v18(v30, 1, v15))
      {
        sub_1BA1BE274(0, (unint64_t *)&qword_1ED5AFBC8, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
        memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v29, v30, v15);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v29, 0, 1, v15);
      }
      *((_BYTE *)a1 + v7[11]) = *((_BYTE *)a2 + v7[11]);
      *((_BYTE *)a1 + v7[12]) = *((_BYTE *)a2 + v7[12]);
      *((_BYTE *)a1 + v7[13]) = *((_BYTE *)a2 + v7[13]);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, int *))(v40 + 56))(a1, 0, 1, v7);
    }
    v32 = *(int *)(a3 + 20);
    v33 = *(uint64_t *)((char *)a2 + v32);
    if ((unint64_t)(v33 - 1) >= 0xA)
    {
      if (v33 == 11)
      {
        *(uint64_t *)((char *)a1 + v32) = 11;
      }
      else
      {
        *(uint64_t *)((char *)a1 + v32) = v33;
        swift_bridgeObjectRetain();
      }
    }
    else
    {
      *(uint64_t *)((char *)a1 + v32) = v33;
    }
    v34 = *(int *)(a3 + 24);
    v35 = (uint64_t *)((char *)a1 + v34);
    v36 = (uint64_t *)((char *)a2 + v34);
    v37 = v36[1];
    *v35 = *v36;
    v35[1] = v37;
    swift_bridgeObjectRetain();
  }
  return a1;
}

char *assignWithCopy for EngagementUpsellBannerPropertiesResult(char *a1, char *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, int *);
  int v9;
  int v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int (*v15)(char *, uint64_t, uint64_t);
  unsigned int (*v16)(char *, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(char *, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  int v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  char *v50;
  char *v51;
  int v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  char *__dst;
  uint64_t v66;

  v6 = (int *)type metadata accessor for EngagementUpsellBannerProperties();
  v7 = *((_QWORD *)v6 - 1);
  v8 = *(uint64_t (**)(char *, uint64_t, int *))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_1BA1EC0A8((uint64_t)a1);
      goto LABEL_7;
    }
    v19 = a3;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a1 + 3) = *((_QWORD *)a2 + 3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v20 = v6[6];
    v21 = &a1[v20];
    v22 = &a2[v20];
    v23 = sub_1BA202118();
    v24 = *(_QWORD *)(v23 - 8);
    v25 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v24 + 48);
    v26 = v25(v21, 1, v23);
    v27 = v25(v22, 1, v23);
    if (v26)
    {
      if (!v27)
      {
        (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v21, v22, v23);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
        goto LABEL_22;
      }
    }
    else
    {
      if (!v27)
      {
        (*(void (**)(char *, char *, uint64_t))(v24 + 24))(v21, v22, v23);
LABEL_22:
        *(_QWORD *)&a1[v6[7]] = *(_QWORD *)&a2[v6[7]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v40 = v6[8];
        v41 = &a1[v40];
        v42 = &a2[v40];
        v43 = v25(&a1[v40], 1, v23);
        v44 = v25(v42, 1, v23);
        if (v43)
        {
          if (!v44)
          {
            (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v41, v42, v23);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v41, 0, 1, v23);
            goto LABEL_28;
          }
        }
        else
        {
          if (!v44)
          {
            (*(void (**)(char *, char *, uint64_t))(v24 + 24))(v41, v42, v23);
LABEL_28:
            v46 = v6[9];
            v47 = &a1[v46];
            v48 = &a2[v46];
            *(_QWORD *)v47 = *(_QWORD *)v48;
            *((_QWORD *)v47 + 1) = *((_QWORD *)v48 + 1);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v49 = v6[10];
            v50 = &a1[v49];
            v51 = &a2[v49];
            v52 = v25(&a1[v49], 1, v23);
            v53 = v25(v51, 1, v23);
            if (v52)
            {
              if (!v53)
              {
                (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v50, v51, v23);
                (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v50, 0, 1, v23);
LABEL_34:
                a1[v6[11]] = a2[v6[11]];
                a1[v6[12]] = a2[v6[12]];
                a1[v6[13]] = a2[v6[13]];
                a3 = v19;
                goto LABEL_35;
              }
            }
            else
            {
              if (!v53)
              {
                (*(void (**)(char *, char *, uint64_t))(v24 + 24))(v50, v51, v23);
                goto LABEL_34;
              }
              (*(void (**)(char *, uint64_t))(v24 + 8))(v50, v23);
            }
            sub_1BA1BE274(0, (unint64_t *)&qword_1ED5AFBC8, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
            memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
            goto LABEL_34;
          }
          (*(void (**)(char *, uint64_t))(v24 + 8))(v41, v23);
        }
        sub_1BA1BE274(0, (unint64_t *)&qword_1ED5AFBC8, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
        memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
        goto LABEL_28;
      }
      (*(void (**)(char *, uint64_t))(v24 + 8))(v21, v23);
    }
    sub_1BA1BE274(0, (unint64_t *)&qword_1ED5AFBC8, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
    goto LABEL_22;
  }
  if (v10)
  {
LABEL_7:
    sub_1BA1BE274(0, &qword_1ED5AFE20, (void (*)(uint64_t))type metadata accessor for EngagementUpsellBannerProperties);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_35;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
  *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
  *((_QWORD *)a1 + 3) = *((_QWORD *)a2 + 3);
  v11 = v6[6];
  __dst = &a1[v11];
  v66 = a3;
  v12 = &a2[v11];
  v13 = sub_1BA202118();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
  swift_bridgeObjectRetain();
  v16 = v15;
  swift_bridgeObjectRetain();
  if (v15(v12, 1, v13))
  {
    sub_1BA1BE274(0, (unint64_t *)&qword_1ED5AFBC8, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    memcpy(__dst, v12, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(__dst, v12, v13);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(__dst, 0, 1, v13);
  }
  *(_QWORD *)&a1[v6[7]] = *(_QWORD *)&a2[v6[7]];
  v28 = v6[8];
  v29 = &a1[v28];
  v30 = &a2[v28];
  swift_bridgeObjectRetain();
  if (v16(v30, 1, v13))
  {
    sub_1BA1BE274(0, (unint64_t *)&qword_1ED5AFBC8, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v29, v30, v13);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v29, 0, 1, v13);
  }
  v32 = v6[9];
  v33 = &a1[v32];
  v34 = &a2[v32];
  *(_QWORD *)v33 = *(_QWORD *)v34;
  *((_QWORD *)v33 + 1) = *((_QWORD *)v34 + 1);
  v35 = v6[10];
  v36 = &a1[v35];
  v37 = &a2[v35];
  swift_bridgeObjectRetain();
  if (v16(v37, 1, v13))
  {
    sub_1BA1BE274(0, (unint64_t *)&qword_1ED5AFBC8, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v36, v37, v13);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v36, 0, 1, v13);
  }
  a1[v6[11]] = a2[v6[11]];
  a1[v6[12]] = a2[v6[12]];
  a1[v6[13]] = a2[v6[13]];
  (*(void (**)(char *, _QWORD, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
  a3 = v66;
LABEL_35:
  v55 = *(int *)(a3 + 20);
  v56 = (uint64_t *)&a1[v55];
  v57 = *(_QWORD *)&a1[v55];
  v58 = *(_QWORD *)&a2[v55];
  if (v57 != 11)
  {
    if (v58 == 11)
    {
      sub_1BA1D35A4((unint64_t *)&a1[v55]);
    }
    else
    {
      v60 = v58 - 1;
      if ((unint64_t)(v57 - 1) < 0xA)
      {
        if (v60 < 0xA)
          goto LABEL_37;
        goto LABEL_49;
      }
      if (v60 >= 0xA)
      {
        *v56 = v58;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        goto LABEL_51;
      }
      sub_1BA1D34C0((uint64_t)&a1[v55]);
    }
    v59 = *(_QWORD *)&a2[v55];
LABEL_41:
    *v56 = v59;
    goto LABEL_51;
  }
  if ((unint64_t)(v58 - 1) >= 0xA)
  {
    if (v58 == 11)
    {
      v59 = 11;
      goto LABEL_41;
    }
LABEL_49:
    *v56 = v58;
    swift_bridgeObjectRetain();
    goto LABEL_51;
  }
LABEL_37:
  *v56 = v58;
LABEL_51:
  v61 = *(int *)(a3 + 24);
  v62 = &a1[v61];
  v63 = &a2[v61];
  *(_QWORD *)v62 = *(_QWORD *)v63;
  *((_QWORD *)v62 + 1) = *((_QWORD *)v63 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1BA1EC0A8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for EngagementUpsellBannerProperties();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_OWORD *initializeWithTake for EngagementUpsellBannerPropertiesResult(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int (*v15)(char *, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;

  v6 = (int *)type metadata accessor for EngagementUpsellBannerProperties();
  v7 = *((_QWORD *)v6 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v7 + 48))(a2, 1, v6))
  {
    sub_1BA1BE274(0, &qword_1ED5AFE20, (void (*)(uint64_t))type metadata accessor for EngagementUpsellBannerProperties);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    v9 = a2[1];
    *a1 = *a2;
    a1[1] = v9;
    v10 = v6[6];
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    v13 = sub_1BA202118();
    v14 = *(_QWORD *)(v13 - 8);
    v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
    if (v15(v12, 1, v13))
    {
      sub_1BA1BE274(0, (unint64_t *)&qword_1ED5AFBC8, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v12, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
    *(_QWORD *)((char *)a1 + v6[7]) = *(_QWORD *)((char *)a2 + v6[7]);
    v17 = v6[8];
    v18 = (char *)a1 + v17;
    v19 = (char *)a2 + v17;
    if (v15((char *)a2 + v17, 1, v13))
    {
      sub_1BA1BE274(0, (unint64_t *)&qword_1ED5AFBC8, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v18, v19, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v18, 0, 1, v13);
    }
    *(_OWORD *)((char *)a1 + v6[9]) = *(_OWORD *)((char *)a2 + v6[9]);
    v21 = v6[10];
    v22 = (char *)a1 + v21;
    v23 = (char *)a2 + v21;
    if (v15((char *)a2 + v21, 1, v13))
    {
      sub_1BA1BE274(0, (unint64_t *)&qword_1ED5AFBC8, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
      memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v22, v23, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v22, 0, 1, v13);
    }
    *((_BYTE *)a1 + v6[11]) = *((_BYTE *)a2 + v6[11]);
    *((_BYTE *)a1 + v6[12]) = *((_BYTE *)a2 + v6[12]);
    *((_BYTE *)a1 + v6[13]) = *((_BYTE *)a2 + v6[13]);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
  }
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 20));
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

char *assignWithTake for EngagementUpsellBannerPropertiesResult(char *a1, char *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, int *);
  int v9;
  int v10;
  __int128 v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(char *, uint64_t, uint64_t);
  int v28;
  int v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  int v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  int v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;

  v6 = (int *)type metadata accessor for EngagementUpsellBannerProperties();
  v7 = *((_QWORD *)v6 - 1);
  v8 = *(uint64_t (**)(char *, uint64_t, int *))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_1BA1EC0A8((uint64_t)a1);
      goto LABEL_7;
    }
    v20 = *((_QWORD *)a2 + 1);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *((_QWORD *)a1 + 1) = v20;
    swift_bridgeObjectRelease();
    v21 = *((_QWORD *)a2 + 3);
    *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a1 + 3) = v21;
    swift_bridgeObjectRelease();
    v22 = v6[6];
    v23 = &a1[v22];
    v24 = &a2[v22];
    v25 = sub_1BA202118();
    v26 = *(_QWORD *)(v25 - 8);
    v27 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v26 + 48);
    v28 = v27(v23, 1, v25);
    v29 = v27(v24, 1, v25);
    if (v28)
    {
      if (!v29)
      {
        (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v23, v24, v25);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
        goto LABEL_22;
      }
    }
    else
    {
      if (!v29)
      {
        (*(void (**)(char *, char *, uint64_t))(v26 + 40))(v23, v24, v25);
LABEL_22:
        *(_QWORD *)&a1[v6[7]] = *(_QWORD *)&a2[v6[7]];
        swift_bridgeObjectRelease();
        v39 = v6[8];
        v40 = &a1[v39];
        v41 = &a2[v39];
        v42 = v27(&a1[v39], 1, v25);
        v43 = v27(v41, 1, v25);
        if (v42)
        {
          if (!v43)
          {
            (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v40, v41, v25);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v40, 0, 1, v25);
            goto LABEL_28;
          }
        }
        else
        {
          if (!v43)
          {
            (*(void (**)(char *, char *, uint64_t))(v26 + 40))(v40, v41, v25);
LABEL_28:
            v45 = v6[9];
            v46 = &a1[v45];
            v47 = (uint64_t *)&a2[v45];
            v49 = *v47;
            v48 = v47[1];
            *(_QWORD *)v46 = v49;
            *((_QWORD *)v46 + 1) = v48;
            swift_bridgeObjectRelease();
            v50 = v6[10];
            v51 = &a1[v50];
            v52 = &a2[v50];
            v53 = v27(&a1[v50], 1, v25);
            v54 = v27(v52, 1, v25);
            if (v53)
            {
              if (!v54)
              {
                (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v51, v52, v25);
                (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v51, 0, 1, v25);
LABEL_34:
                a1[v6[11]] = a2[v6[11]];
                a1[v6[12]] = a2[v6[12]];
                a1[v6[13]] = a2[v6[13]];
                goto LABEL_35;
              }
            }
            else
            {
              if (!v54)
              {
                (*(void (**)(char *, char *, uint64_t))(v26 + 40))(v51, v52, v25);
                goto LABEL_34;
              }
              (*(void (**)(char *, uint64_t))(v26 + 8))(v51, v25);
            }
            sub_1BA1BE274(0, (unint64_t *)&qword_1ED5AFBC8, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
            memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
            goto LABEL_34;
          }
          (*(void (**)(char *, uint64_t))(v26 + 8))(v40, v25);
        }
        sub_1BA1BE274(0, (unint64_t *)&qword_1ED5AFBC8, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
        memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
        goto LABEL_28;
      }
      (*(void (**)(char *, uint64_t))(v26 + 8))(v23, v25);
    }
    sub_1BA1BE274(0, (unint64_t *)&qword_1ED5AFBC8, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
    goto LABEL_22;
  }
  if (v10)
  {
LABEL_7:
    sub_1BA1BE274(0, &qword_1ED5AFE20, (void (*)(uint64_t))type metadata accessor for EngagementUpsellBannerProperties);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_35;
  }
  v11 = *((_OWORD *)a2 + 1);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((_OWORD *)a1 + 1) = v11;
  v12 = v6[6];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = sub_1BA202118();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
  if (v17(v14, 1, v15))
  {
    sub_1BA1BE274(0, (unint64_t *)&qword_1ED5AFBC8, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v13, v14, v15);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  *(_QWORD *)&a1[v6[7]] = *(_QWORD *)&a2[v6[7]];
  v30 = v6[8];
  v31 = &a1[v30];
  v32 = &a2[v30];
  if (v17(&a2[v30], 1, v15))
  {
    sub_1BA1BE274(0, (unint64_t *)&qword_1ED5AFBC8, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v31, v32, v15);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v31, 0, 1, v15);
  }
  *(_OWORD *)&a1[v6[9]] = *(_OWORD *)&a2[v6[9]];
  v34 = v6[10];
  v35 = &a1[v34];
  v36 = &a2[v34];
  if (v17(&a2[v34], 1, v15))
  {
    sub_1BA1BE274(0, (unint64_t *)&qword_1ED5AFBC8, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v35, v36, v15);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v35, 0, 1, v15);
  }
  a1[v6[11]] = a2[v6[11]];
  a1[v6[12]] = a2[v6[12]];
  a1[v6[13]] = a2[v6[13]];
  (*(void (**)(char *, _QWORD, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
LABEL_35:
  v56 = *(int *)(a3 + 20);
  v57 = &a1[v56];
  v58 = *(_QWORD *)&a1[v56];
  v59 = *(_QWORD *)&a2[v56];
  if (v58 != 11)
  {
    if (v59 == 11)
    {
      sub_1BA1D35A4((unint64_t *)&a1[v56]);
    }
    else
    {
      if ((unint64_t)(v58 - 1) < 0xA)
        goto LABEL_40;
      if ((unint64_t)(v59 - 1) >= 0xA)
      {
        *(_QWORD *)v57 = v59;
        swift_bridgeObjectRelease();
        goto LABEL_41;
      }
      sub_1BA1D34C0((uint64_t)&a1[v56]);
    }
    v59 = *(_QWORD *)&a2[v56];
  }
LABEL_40:
  *(_QWORD *)v57 = v59;
LABEL_41:
  v60 = *(int *)(a3 + 24);
  v61 = &a1[v60];
  v62 = (uint64_t *)&a2[v60];
  v64 = *v62;
  v63 = v62[1];
  *(_QWORD *)v61 = v64;
  *((_QWORD *)v61 + 1) = v63;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for EngagementUpsellBannerPropertiesResult()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BA1EC9AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  sub_1BA1BE274(0, &qword_1ED5AFE20, (void (*)(uint64_t))type metadata accessor for EngagementUpsellBannerProperties);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t storeEnumTagSinglePayload for EngagementUpsellBannerPropertiesResult()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1BA1ECA54(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;

  sub_1BA1BE274(0, &qword_1ED5AFE20, (void (*)(uint64_t))type metadata accessor for EngagementUpsellBannerProperties);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, v8);
  else
    *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = a2;
}

uint64_t dispatch thunk of EngagementUpsellBannerPropertiesProviding.bannerProperties(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of EngagementUpsellBannerPropertiesProviding.triggerVisibility(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

id sub_1BA1ECAF0(uint64_t a1, uint64_t a2, char *a3, char *a4, uint64_t a5, uint64_t a6)
{
  _BYTE *v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char v14;
  char v15;
  _QWORD *v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  _QWORD *v22;
  uint64_t v23;
  void *v24;
  void *v25;
  id v26;
  _QWORD v28[2];
  objc_class *ObjectType;
  objc_super v30;
  char v31;

  v28[0] = a6;
  v28[1] = a1;
  ObjectType = (objc_class *)swift_getObjectType();
  v10 = sub_1BA2021A8();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *a3;
  v15 = *a4;
  v16 = &v6[OBJC_IVAR____TtC14NewsEngagement36EngagementInlineDialogViewController_messageID];
  *v16 = 0;
  v16[1] = 0;
  v6[OBJC_IVAR____TtC14NewsEngagement36EngagementInlineDialogViewController_offer] = 3;
  v6[OBJC_IVAR____TtC14NewsEngagement36EngagementInlineDialogViewController_placement] = v14;
  v17 = v6;
  sub_1BA20219C();
  v18 = sub_1BA202190();
  v20 = v19;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  v21 = (uint64_t *)&v17[OBJC_IVAR____TtC14NewsEngagement36EngagementInlineDialogViewController_identifier];
  *v21 = v18;
  v21[1] = v20;
  v17[OBJC_IVAR____TtC14NewsEngagement36EngagementInlineDialogViewController_source] = v15;
  v22 = &v17[OBJC_IVAR____TtC14NewsEngagement36EngagementInlineDialogViewController_trigger];
  v23 = v28[0];
  *v22 = a5;
  v22[1] = v23;

  v24 = (void *)sub_1BA2024FC();
  swift_bridgeObjectRelease();
  v31 = v14;
  EngagementUIPlacement.rawValue.getter();
  v25 = (void *)sub_1BA2024FC();
  swift_bridgeObjectRelease();
  v30.receiver = v17;
  v30.super_class = ObjectType;
  v26 = objc_msgSendSuper2(&v30, sel_initWithServiceType_placement_, v24, v25);

  return v26;
}

NewsEngagement::EngagementDebugPlacementQuiescenceInterval_optional __swiftcall EngagementDebugPlacementQuiescenceInterval.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsEngagement::EngagementDebugPlacementQuiescenceInterval_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1BA202868();
  result.value = swift_bridgeObjectRelease();
  v5 = 4;
  if (v3 < 4)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t EngagementDebugPlacementQuiescenceInterval.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA1ECF24 + 4 * byte_1BA2056A0[*v0]))(1701736302, 0xE400000000000000);
}

uint64_t sub_1BA1ECF24()
{
  return 0x74726F6873;
}

uint64_t sub_1BA1ECF38()
{
  return 0x6D756964656DLL;
}

uint64_t sub_1BA1ECF4C()
{
  return 0x6E6F6973736573;
}

void sub_1BA1ECF64(char *a1)
{
  sub_1BA1FAB48(*a1);
}

unint64_t sub_1BA1ECF74()
{
  unint64_t result;

  result = qword_1EF2799D0;
  if (!qword_1EF2799D0)
  {
    result = MEMORY[0x1BCCD76CC](&protocol conformance descriptor for EngagementDebugPlacementQuiescenceInterval, &type metadata for EngagementDebugPlacementQuiescenceInterval);
    atomic_store(result, (unint64_t *)&qword_1EF2799D0);
  }
  return result;
}

void sub_1BA1ECFB8()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1BA202A00();
  __asm { BR              X9 }
}

uint64_t sub_1BA1ECFFC()
{
  sub_1BA202538();
  swift_bridgeObjectRelease();
  return sub_1BA202A18();
}

void sub_1BA1ED064()
{
  __asm { BR              X10 }
}

uint64_t sub_1BA1ED098()
{
  sub_1BA202538();
  return swift_bridgeObjectRelease();
}

void sub_1BA1ED0EC()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1BA202A00();
  __asm { BR              X9 }
}

uint64_t sub_1BA1ED12C()
{
  sub_1BA202538();
  swift_bridgeObjectRelease();
  return sub_1BA202A18();
}

NewsEngagement::EngagementDebugPlacementQuiescenceInterval_optional sub_1BA1ED194(Swift::String *a1)
{
  return EngagementDebugPlacementQuiescenceInterval.init(rawValue:)(*a1);
}

uint64_t sub_1BA1ED1A0()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1BA1ED1C8 + 4 * byte_1BA2056B0[*v0]))();
}

void sub_1BA1ED1C8(_QWORD *a1@<X8>)
{
  *a1 = 0x74726F6873;
  a1[1] = 0xE500000000000000;
}

void sub_1BA1ED1E0(_QWORD *a1@<X8>)
{
  *a1 = 0x6D756964656DLL;
  a1[1] = 0xE600000000000000;
}

void sub_1BA1ED1F8(_QWORD *a1@<X8>)
{
  *a1 = 0x6E6F6973736573;
  a1[1] = 0xE700000000000000;
}

uint64_t sub_1BA1ED214()
{
  sub_1BA1F3F24();
  return sub_1BA2025A4();
}

uint64_t sub_1BA1ED254()
{
  sub_1BA1F3F24();
  return sub_1BA202598();
}

uint64_t sub_1BA1ED29C()
{
  sub_1BA1F3F24();
  return sub_1BA20258C();
}

uint64_t storeEnumTagSinglePayload for EngagementDebugPlacementQuiescenceInterval(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1BA1ED328 + 4 * byte_1BA2056B9[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1BA1ED35C + 4 * byte_1BA2056B4[v4]))();
}

uint64_t sub_1BA1ED35C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA1ED364(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BA1ED36CLL);
  return result;
}

uint64_t sub_1BA1ED378(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BA1ED380);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1BA1ED384(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA1ED38C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for EngagementDebugPlacementQuiescenceInterval()
{
  return &type metadata for EngagementDebugPlacementQuiescenceInterval;
}

uint64_t sub_1BA1ED3A8@<X0>(_BYTE *a1@<X0>, char a2@<W2>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v5 = *a1;
  LOBYTE(v7) = *a1;
  result = sub_1BA1ED590((unsigned __int8 *)&v7);
  if ((result & 1) != 0 || (a2 & 1) != 0)
    __asm { BR              X9 }
  *(_QWORD *)a3 = 0;
  *(_BYTE *)(a3 + 8) = -1;
  *(_QWORD *)(a3 + 16) = 11;
  *(_BYTE *)(a3 + 24) = 1;
  *(_QWORD *)(a3 + 32) = 0;
  *(_QWORD *)(a3 + 40) = 0;
  return result;
}

uint64_t sub_1BA1ED590(unsigned __int8 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t inited;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  _BYTE v41[544];

  v2 = v1;
  sub_1BA1B9050(0, &qword_1ED5AF318, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v6 = &v41[-v5];
  v7 = *a1;
  sub_1BA1B9050(0, &qword_1EF279468, (uint64_t (*)(uint64_t))sub_1BA1DAB8C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BA2058D0;
  *(_BYTE *)(inited + 32) = 0;
  if (qword_1EF2790C0 != -1)
    swift_once();
  *(_QWORD *)(inited + 40) = qword_1EF279588;
  *(_BYTE *)(inited + 48) = 1;
  v9 = qword_1EF2790C8;
  swift_retain();
  if (v9 != -1)
    swift_once();
  *(_QWORD *)(inited + 56) = qword_1EF279590;
  *(_BYTE *)(inited + 64) = 3;
  v10 = qword_1EF2790D8;
  swift_retain();
  if (v10 != -1)
    swift_once();
  *(_QWORD *)(inited + 72) = qword_1EF2795A0;
  *(_BYTE *)(inited + 80) = 2;
  v11 = qword_1EF2790D0;
  swift_retain();
  if (v11 != -1)
    swift_once();
  *(_QWORD *)(inited + 88) = qword_1EF279598;
  *(_BYTE *)(inited + 96) = 4;
  v12 = qword_1EF2790E0;
  swift_retain();
  if (v12 != -1)
    swift_once();
  *(_QWORD *)(inited + 104) = qword_1EF2795A8;
  *(_BYTE *)(inited + 112) = 5;
  v13 = qword_1EF2790E8;
  swift_retain();
  if (v13 != -1)
    swift_once();
  *(_QWORD *)(inited + 120) = qword_1EF2795B0;
  *(_BYTE *)(inited + 128) = 6;
  v14 = qword_1EF2790F0;
  swift_retain();
  if (v14 != -1)
    swift_once();
  *(_QWORD *)(inited + 136) = qword_1EF2795B8;
  *(_BYTE *)(inited + 144) = 7;
  v15 = qword_1EF2790F8;
  swift_retain();
  if (v15 != -1)
    swift_once();
  *(_QWORD *)(inited + 152) = qword_1EF2795C0;
  *(_BYTE *)(inited + 160) = 8;
  v16 = qword_1EF279100;
  swift_retain();
  if (v16 != -1)
    swift_once();
  *(_QWORD *)(inited + 168) = qword_1EF2795C8;
  *(_BYTE *)(inited + 176) = 16;
  v17 = qword_1EF279108;
  swift_retain();
  if (v17 != -1)
    swift_once();
  *(_QWORD *)(inited + 184) = qword_1EF2795D0;
  *(_BYTE *)(inited + 192) = 13;
  v18 = qword_1EF279110;
  swift_retain();
  if (v18 != -1)
    swift_once();
  *(_QWORD *)(inited + 200) = qword_1EF2795D8;
  *(_BYTE *)(inited + 208) = 14;
  v19 = qword_1EF279118;
  swift_retain();
  if (v19 != -1)
    swift_once();
  *(_QWORD *)(inited + 216) = qword_1EF2795E0;
  *(_BYTE *)(inited + 224) = 15;
  v20 = qword_1EF279120;
  swift_retain();
  if (v20 != -1)
    swift_once();
  *(_QWORD *)(inited + 232) = qword_1EF2795E8;
  *(_BYTE *)(inited + 240) = 17;
  v21 = qword_1EF279128;
  swift_retain();
  if (v21 != -1)
    swift_once();
  *(_QWORD *)(inited + 248) = qword_1EF2795F0;
  *(_BYTE *)(inited + 256) = 18;
  v22 = qword_1EF279130;
  swift_retain();
  if (v22 != -1)
    swift_once();
  *(_QWORD *)(inited + 264) = qword_1EF2795F8;
  *(_BYTE *)(inited + 272) = 19;
  v23 = qword_1EF279138;
  swift_retain();
  if (v23 != -1)
    swift_once();
  *(_QWORD *)(inited + 280) = qword_1EF279600;
  *(_BYTE *)(inited + 288) = 22;
  v24 = qword_1EF279140;
  swift_retain();
  if (v24 != -1)
    swift_once();
  *(_QWORD *)(inited + 296) = qword_1EF279608;
  *(_BYTE *)(inited + 304) = 23;
  v25 = qword_1EF279148;
  swift_retain();
  if (v25 != -1)
    swift_once();
  *(_QWORD *)(inited + 312) = qword_1EF279610;
  *(_BYTE *)(inited + 320) = 24;
  v26 = qword_1EF279150;
  swift_retain();
  if (v26 != -1)
    swift_once();
  *(_QWORD *)(inited + 328) = qword_1EF279618;
  *(_BYTE *)(inited + 336) = 20;
  v27 = qword_1EF279158;
  swift_retain();
  if (v27 != -1)
    swift_once();
  *(_QWORD *)(inited + 344) = qword_1EF279620;
  *(_BYTE *)(inited + 352) = 21;
  v28 = qword_1EF279168;
  swift_retain();
  if (v28 != -1)
    swift_once();
  *(_QWORD *)(inited + 360) = qword_1EF279630;
  *(_BYTE *)(inited + 368) = 25;
  v29 = qword_1EF279170;
  swift_retain();
  if (v29 != -1)
    swift_once();
  *(_QWORD *)(inited + 376) = qword_1EF279638;
  *(_BYTE *)(inited + 384) = 26;
  v30 = qword_1EF279178;
  swift_retain();
  if (v30 != -1)
    swift_once();
  *(_QWORD *)(inited + 392) = qword_1EF279640;
  *(_BYTE *)(inited + 400) = 27;
  v31 = qword_1EF279180;
  swift_retain();
  if (v31 != -1)
    swift_once();
  *(_QWORD *)(inited + 408) = qword_1EF279648;
  *(_BYTE *)(inited + 416) = 28;
  v32 = qword_1EF279188;
  swift_retain();
  if (v32 != -1)
    swift_once();
  *(_QWORD *)(inited + 424) = qword_1EF279650;
  *(_BYTE *)(inited + 432) = 29;
  v33 = qword_1EF279190;
  swift_retain();
  if (v33 != -1)
    swift_once();
  *(_QWORD *)(inited + 440) = qword_1EF279658;
  *(_BYTE *)(inited + 448) = 9;
  v34 = qword_1EF279198;
  swift_retain();
  if (v34 != -1)
    swift_once();
  *(_QWORD *)(inited + 456) = qword_1EF279660;
  *(_BYTE *)(inited + 464) = 10;
  v35 = qword_1EF2791A0;
  swift_retain();
  if (v35 != -1)
    swift_once();
  *(_QWORD *)(inited + 472) = qword_1EF279668;
  *(_BYTE *)(inited + 480) = 11;
  v36 = qword_1EF2791A8;
  swift_retain();
  if (v36 != -1)
    swift_once();
  *(_QWORD *)(inited + 488) = qword_1EF279670;
  *(_BYTE *)(inited + 496) = 12;
  v37 = qword_1EF2791B0;
  swift_retain();
  if (v37 != -1)
    swift_once();
  *(_QWORD *)(inited + 504) = qword_1EF279678;
  swift_retain();
  if (*(_QWORD *)(sub_1BA1D8E68(inited) + 16) && (sub_1BA1B9DB8(v7), (v38 & 1) != 0))
  {
    swift_retain();
    swift_bridgeObjectRelease();
    if ((sub_1BA1F3C0C(v2, v7) & 1) != 0)
    {
      sub_1BA202178();
      v39 = sub_1BA202184();
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v6, 0, 1, v39);
      swift_beginAccess();
      sub_1BA1CECBC((uint64_t)v6, v7);
      swift_endAccess();
      sub_1BA1F3EE0();
      sub_1BA2021CC();
      swift_release();
      return v41[8];
    }
    swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  return 0;
}

void sub_1BA1EDEBC(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  void *v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t inited;
  uint64_t v24;
  void *v25;
  _QWORD v26[2];
  id v27[18];

  v27[17] = *(id *)MEMORY[0x1E0C80C00];
  sub_1BA1B9050(0, (unint64_t *)&qword_1ED5AFBC8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v26 - v3;
  v5 = sub_1BA20252C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA202520();
  v9 = sub_1BA202514();
  v11 = v10;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  if (v11 >> 60 == 15)
  {
    v12 = sub_1BA1D8F64(MEMORY[0x1E0DEE9D8]);
    goto LABEL_9;
  }
  v13 = (void *)objc_opt_self();
  v14 = (void *)sub_1BA202154();
  v27[0] = 0;
  v15 = objc_msgSend(v13, sel_JSONObjectWithData_options_error_, v14, 0, v27);

  if (!v15)
  {
    v17 = v27[0];
    v18 = (void *)sub_1BA2020F4();

    swift_willThrow();
    goto LABEL_7;
  }
  v16 = v27[0];
  sub_1BA202700();
  swift_unknownObjectRelease();
  sub_1BA1F3E64();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_7:
    v12 = sub_1BA1D8F64(MEMORY[0x1E0DEE9D8]);
    goto LABEL_8;
  }
  v12 = v26[0];
LABEL_8:
  sub_1BA1F3ECC(v9, v11);
LABEL_9:
  v19 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CFDAB0]), sel_init);
  objc_msgSend(v19, sel_setFailOnDismiss_, 1);
  objc_msgSend(v19, sel_setSilentlyCheckURL_, 1);
  objc_msgSend(v19, sel_setPresentationStyle_, 1);
  sub_1BA20210C();
  v20 = sub_1BA202118();
  v21 = *(_QWORD *)(v20 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v4, 1, v20) == 1)
    __break(1u);
  v22 = (void *)sub_1BA202100();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v4, v20);
  objc_msgSend(v19, sel_setURL_, v22);

  sub_1BA1B9050(0, &qword_1EF2799D8, (uint64_t (*)(uint64_t))sub_1BA1DAD1C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BA203760;
  strcpy((char *)v27, "engagementItem");
  HIBYTE(v27[1]) = -18;
  sub_1BA20273C();
  sub_1BA1F3E64();
  *(_QWORD *)(inited + 96) = v24;
  *(_QWORD *)(inited + 72) = v12;
  sub_1BA1D8F64(inited);
  v25 = (void *)sub_1BA2024CC();
  swift_bridgeObjectRelease();
  objc_msgSend(v19, sel_setClientData_, v25);

  *(_QWORD *)a1 = v19;
  *(_BYTE *)(a1 + 8) = 1;
}

void sub_1BA1EE2AC(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t ObjCClassFromMetadata;
  void *v9;
  id v10;
  id v11;
  id v12;
  void *v13;
  void *v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int (*v19)(char *, uint64_t, uint64_t);
  void *v20;
  void *v21;
  uint64_t v22;

  sub_1BA1B9050(0, (unint64_t *)&qword_1ED5AFBC8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v3 = MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v22 - v6;
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v9 = (void *)objc_opt_self();
  v10 = objc_msgSend(v9, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BA2020E8();

  v11 = objc_msgSend(v9, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BA2020E8();

  v12 = objc_allocWithZone(MEMORY[0x1E0CFDA68]);
  v13 = (void *)sub_1BA2024FC();
  swift_bridgeObjectRelease();
  v14 = (void *)sub_1BA2024FC();
  swift_bridgeObjectRelease();
  v15 = objc_msgSend(v12, sel_initWithTitle_message_, v13, v14);

  v16 = objc_msgSend((id)objc_opt_self(), sel_actionWithTitle_style_, 0, 0);
  sub_1BA20210C();
  v17 = sub_1BA202118();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
  v20 = 0;
  if (v19(v7, 1, v17) != 1)
  {
    v20 = (void *)sub_1BA202100();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v7, v17);
  }
  objc_msgSend(v16, sel_setDeepLink_, v20);

  objc_msgSend(v15, sel_addButtonAction_, v16);
  objc_msgSend(v15, sel_setStyle_, 5);
  sub_1BA20210C();
  if (v19(v5, 1, v17) == 1)
  {
    v21 = 0;
  }
  else
  {
    v21 = (void *)sub_1BA202100();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v5, v17);
  }
  objc_msgSend(v15, sel_setIconURL_, v21);

  *(_QWORD *)a1 = v15;
  *(_BYTE *)(a1 + 8) = 0;
}

void sub_1BA1EE61C(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t ObjCClassFromMetadata;
  void *v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  uint64_t v17;

  sub_1BA1B9050(0, (unint64_t *)&qword_1ED5AFBC8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v17 - v3;
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v6 = (void *)objc_opt_self();
  v7 = objc_msgSend(v6, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BA2020E8();

  v8 = objc_msgSend(v6, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BA2020E8();

  v9 = objc_allocWithZone(MEMORY[0x1E0CFDA68]);
  v10 = (void *)sub_1BA2024FC();
  swift_bridgeObjectRelease();
  v11 = (void *)sub_1BA2024FC();
  swift_bridgeObjectRelease();
  v12 = objc_msgSend(v9, sel_initWithTitle_message_, v10, v11);

  objc_msgSend(v12, sel_setStyle_, 4);
  sub_1BA20210C();
  v13 = sub_1BA202118();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v4, 1, v13) != 1)
  {
    v15 = (void *)sub_1BA202100();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v4, v13);
  }
  objc_msgSend(v12, sel_setIconURL_, v15);

  v16 = objc_msgSend((id)objc_opt_self(), sel_actionWithTitle_style_, 0, 2);
  objc_msgSend(v12, sel_addButtonAction_, v16);

  *(_QWORD *)a1 = v12;
  *(_BYTE *)(a1 + 8) = 0;
}

void sub_1BA1EE8F8(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t ObjCClassFromMetadata;
  void *v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  uint64_t v17;

  sub_1BA1B9050(0, (unint64_t *)&qword_1ED5AFBC8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v17 - v3;
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v6 = (void *)objc_opt_self();
  v7 = objc_msgSend(v6, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BA2020E8();

  v8 = objc_msgSend(v6, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BA2020E8();

  v9 = objc_allocWithZone(MEMORY[0x1E0CFDA68]);
  v10 = (void *)sub_1BA2024FC();
  swift_bridgeObjectRelease();
  v11 = (void *)sub_1BA2024FC();
  swift_bridgeObjectRelease();
  v12 = objc_msgSend(v9, sel_initWithTitle_message_, v10, v11);

  objc_msgSend(v12, sel_setStyle_, 4);
  sub_1BA20210C();
  v13 = sub_1BA202118();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v4, 1, v13) != 1)
  {
    v15 = (void *)sub_1BA202100();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v4, v13);
  }
  objc_msgSend(v12, sel_setIconURL_, v15);

  v16 = objc_msgSend((id)objc_opt_self(), sel_actionWithTitle_style_, 0, 2);
  objc_msgSend(v12, sel_addButtonAction_, v16);

  *(_QWORD *)a1 = v12;
  *(_BYTE *)(a1 + 8) = 0;
}

void sub_1BA1EEBD8(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t ObjCClassFromMetadata;
  void *v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  uint64_t v17;

  sub_1BA1B9050(0, (unint64_t *)&qword_1ED5AFBC8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v17 - v3;
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v6 = (void *)objc_opt_self();
  v7 = objc_msgSend(v6, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BA2020E8();

  v8 = objc_msgSend(v6, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BA2020E8();

  v9 = objc_allocWithZone(MEMORY[0x1E0CFDA68]);
  v10 = (void *)sub_1BA2024FC();
  swift_bridgeObjectRelease();
  v11 = (void *)sub_1BA2024FC();
  swift_bridgeObjectRelease();
  v12 = objc_msgSend(v9, sel_initWithTitle_message_, v10, v11);

  objc_msgSend(v12, sel_setStyle_, 4);
  sub_1BA20210C();
  v13 = sub_1BA202118();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v4, 1, v13) != 1)
  {
    v15 = (void *)sub_1BA202100();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v4, v13);
  }
  objc_msgSend(v12, sel_setIconURL_, v15);

  v16 = objc_msgSend((id)objc_opt_self(), sel_actionWithTitle_style_, 0, 2);
  objc_msgSend(v12, sel_addButtonAction_, v16);

  *(_QWORD *)a1 = v12;
  *(_BYTE *)(a1 + 8) = 0;
}

void sub_1BA1EEEB0(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t ObjCClassFromMetadata;
  void *v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  uint64_t v17;

  sub_1BA1B9050(0, (unint64_t *)&qword_1ED5AFBC8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v17 - v3;
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v6 = (void *)objc_opt_self();
  v7 = objc_msgSend(v6, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BA2020E8();

  v8 = objc_msgSend(v6, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BA2020E8();

  v9 = objc_allocWithZone(MEMORY[0x1E0CFDA68]);
  v10 = (void *)sub_1BA2024FC();
  swift_bridgeObjectRelease();
  v11 = (void *)sub_1BA2024FC();
  swift_bridgeObjectRelease();
  v12 = objc_msgSend(v9, sel_initWithTitle_message_, v10, v11);

  objc_msgSend(v12, sel_setStyle_, 4);
  sub_1BA20210C();
  v13 = sub_1BA202118();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v4, 1, v13) != 1)
  {
    v15 = (void *)sub_1BA202100();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v4, v13);
  }
  objc_msgSend(v12, sel_setIconURL_, v15);

  v16 = objc_msgSend((id)objc_opt_self(), sel_actionWithTitle_style_, 0, 2);
  objc_msgSend(v12, sel_addButtonAction_, v16);

  *(_QWORD *)a1 = v12;
  *(_BYTE *)(a1 + 8) = 0;
}

void sub_1BA1EF190(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t ObjCClassFromMetadata;
  void *v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  uint64_t v17;

  sub_1BA1B9050(0, (unint64_t *)&qword_1ED5AFBC8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v17 - v3;
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v6 = (void *)objc_opt_self();
  v7 = objc_msgSend(v6, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BA2020E8();

  v8 = objc_msgSend(v6, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BA2020E8();

  v9 = objc_allocWithZone(MEMORY[0x1E0CFDA68]);
  v10 = (void *)sub_1BA2024FC();
  swift_bridgeObjectRelease();
  v11 = (void *)sub_1BA2024FC();
  swift_bridgeObjectRelease();
  v12 = objc_msgSend(v9, sel_initWithTitle_message_, v10, v11);

  objc_msgSend(v12, sel_setStyle_, 4);
  sub_1BA20210C();
  v13 = sub_1BA202118();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v4, 1, v13) != 1)
  {
    v15 = (void *)sub_1BA202100();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v4, v13);
  }
  objc_msgSend(v12, sel_setIconURL_, v15);

  v16 = objc_msgSend((id)objc_opt_self(), sel_actionWithTitle_style_, 0, 2);
  objc_msgSend(v12, sel_addButtonAction_, v16);

  *(_QWORD *)a1 = v12;
  *(_BYTE *)(a1 + 8) = 0;
}

void sub_1BA1EF468(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t ObjCClassFromMetadata;
  void *v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  uint64_t v17;

  sub_1BA1B9050(0, (unint64_t *)&qword_1ED5AFBC8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v17 - v3;
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v6 = (void *)objc_opt_self();
  v7 = objc_msgSend(v6, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BA2020E8();

  v8 = objc_msgSend(v6, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BA2020E8();

  v9 = objc_allocWithZone(MEMORY[0x1E0CFDA68]);
  v10 = (void *)sub_1BA2024FC();
  swift_bridgeObjectRelease();
  v11 = (void *)sub_1BA2024FC();
  swift_bridgeObjectRelease();
  v12 = objc_msgSend(v9, sel_initWithTitle_message_, v10, v11);

  objc_msgSend(v12, sel_setStyle_, 4);
  sub_1BA20210C();
  v13 = sub_1BA202118();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v4, 1, v13) != 1)
  {
    v15 = (void *)sub_1BA202100();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v4, v13);
  }
  objc_msgSend(v12, sel_setIconURL_, v15);

  v16 = objc_msgSend((id)objc_opt_self(), sel_actionWithTitle_style_, 0, 2);
  objc_msgSend(v12, sel_addButtonAction_, v16);

  *(_QWORD *)a1 = v12;
  *(_BYTE *)(a1 + 8) = 0;
}

void sub_1BA1EF744(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t ObjCClassFromMetadata;
  void *v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  uint64_t v17;

  sub_1BA1B9050(0, (unint64_t *)&qword_1ED5AFBC8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v17 - v3;
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v6 = (void *)objc_opt_self();
  v7 = objc_msgSend(v6, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BA2020E8();

  v8 = objc_msgSend(v6, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BA2020E8();

  v9 = objc_allocWithZone(MEMORY[0x1E0CFDA68]);
  v10 = (void *)sub_1BA2024FC();
  swift_bridgeObjectRelease();
  v11 = (void *)sub_1BA2024FC();
  swift_bridgeObjectRelease();
  v12 = objc_msgSend(v9, sel_initWithTitle_message_, v10, v11);

  objc_msgSend(v12, sel_setStyle_, 4);
  sub_1BA20210C();
  v13 = sub_1BA202118();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v4, 1, v13) != 1)
  {
    v15 = (void *)sub_1BA202100();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v4, v13);
  }
  objc_msgSend(v12, sel_setIconURL_, v15);

  v16 = objc_msgSend((id)objc_opt_self(), sel_actionWithTitle_style_, 0, 2);
  objc_msgSend(v12, sel_addButtonAction_, v16);

  *(_QWORD *)a1 = v12;
  *(_BYTE *)(a1 + 8) = 0;
}

void sub_1BA1EFA20(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t ObjCClassFromMetadata;
  void *v8;
  id v9;
  id v10;
  id v11;
  void *v12;
  void *v13;
  id v14;
  void *v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int (*v20)(char *, uint64_t, uint64_t);
  void *v21;
  id v22;
  void *v23;
  _QWORD *v24;
  uint64_t v25;
  _QWORD *v26;

  v26 = a1;
  sub_1BA1B9050(0, (unint64_t *)&qword_1ED5AFBC8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v2 = MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v25 - v5;
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v8 = (void *)objc_opt_self();
  v9 = objc_msgSend(v8, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BA2020E8();

  v10 = objc_msgSend(v8, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BA2020E8();

  v11 = objc_allocWithZone(MEMORY[0x1E0CFDA68]);
  v12 = (void *)sub_1BA2024FC();
  swift_bridgeObjectRelease();
  v13 = (void *)sub_1BA2024FC();
  swift_bridgeObjectRelease();
  v14 = objc_msgSend(v11, sel_initWithTitle_message_appearanceInfo_, v12, v13, 0);

  v15 = (void *)sub_1BA2024FC();
  v16 = (void *)objc_opt_self();
  v17 = objc_msgSend(v16, sel_actionWithTitle_style_, v15, 0);

  sub_1BA20210C();
  v18 = sub_1BA202118();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
  v21 = 0;
  if (v20(v6, 1, v18) != 1)
  {
    v21 = (void *)sub_1BA202100();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v6, v18);
  }
  objc_msgSend(v17, sel_setDeepLink_, v21);

  objc_msgSend(v14, sel_addButtonAction_, v17);
  v22 = objc_msgSend(v16, sel_actionWithTitle_style_, 0, 2);
  objc_msgSend(v14, sel_addButtonAction_, v22);
  sub_1BA20210C();
  v23 = 0;
  if (v20(v4, 1, v18) != 1)
  {
    v23 = (void *)sub_1BA202100();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v4, v18);
  }
  objc_msgSend(v14, sel_setIconURL_, v23);

  v24 = v26;
  *v26 = v14;
  *((_BYTE *)v24 + 8) = 0;
}

void sub_1BA1EFDE0(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t ObjCClassFromMetadata;
  void *v8;
  id v9;
  id v10;
  id v11;
  void *v12;
  void *v13;
  id v14;
  void *v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int (*v20)(char *, uint64_t, uint64_t);
  void *v21;
  id v22;
  void *v23;
  _QWORD *v24;
  uint64_t v25;
  _QWORD *v26;

  v26 = a1;
  sub_1BA1B9050(0, (unint64_t *)&qword_1ED5AFBC8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v2 = MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v25 - v5;
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v8 = (void *)objc_opt_self();
  v9 = objc_msgSend(v8, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BA2020E8();

  v10 = objc_msgSend(v8, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BA2020E8();

  v11 = objc_allocWithZone(MEMORY[0x1E0CFDA68]);
  v12 = (void *)sub_1BA2024FC();
  swift_bridgeObjectRelease();
  v13 = (void *)sub_1BA2024FC();
  swift_bridgeObjectRelease();
  v14 = objc_msgSend(v11, sel_initWithTitle_message_appearanceInfo_, v12, v13, 0);

  v15 = (void *)sub_1BA2024FC();
  v16 = (void *)objc_opt_self();
  v17 = objc_msgSend(v16, sel_actionWithTitle_style_, v15, 0);

  sub_1BA20210C();
  v18 = sub_1BA202118();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
  v21 = 0;
  if (v20(v6, 1, v18) != 1)
  {
    v21 = (void *)sub_1BA202100();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v6, v18);
  }
  objc_msgSend(v17, sel_setDeepLink_, v21);

  objc_msgSend(v14, sel_addButtonAction_, v17);
  v22 = objc_msgSend(v16, sel_actionWithTitle_style_, 0, 2);
  objc_msgSend(v14, sel_addButtonAction_, v22);
  sub_1BA20210C();
  v23 = 0;
  if (v20(v4, 1, v18) != 1)
  {
    v23 = (void *)sub_1BA202100();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v4, v18);
  }
  objc_msgSend(v14, sel_setIconURL_, v23);

  v24 = v26;
  *v26 = v14;
  *((_BYTE *)v24 + 8) = 0;
}

void sub_1BA1F01A0(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t ObjCClassFromMetadata;
  void *v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  uint64_t v17;

  sub_1BA1B9050(0, (unint64_t *)&qword_1ED5AFBC8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v17 - v3;
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v6 = (void *)objc_opt_self();
  v7 = objc_msgSend(v6, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BA2020E8();

  v8 = objc_msgSend(v6, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BA2020E8();

  v9 = objc_allocWithZone(MEMORY[0x1E0CFDA68]);
  v10 = (void *)sub_1BA2024FC();
  swift_bridgeObjectRelease();
  v11 = (void *)sub_1BA2024FC();
  swift_bridgeObjectRelease();
  v12 = objc_msgSend(v9, sel_initWithTitle_message_, v10, v11);

  objc_msgSend(v12, sel_setStyle_, 4);
  sub_1BA20210C();
  v13 = sub_1BA202118();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v4, 1, v13) != 1)
  {
    v15 = (void *)sub_1BA202100();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v4, v13);
  }
  objc_msgSend(v12, sel_setIconURL_, v15);

  v16 = objc_msgSend((id)objc_opt_self(), sel_actionWithTitle_style_, 0, 2);
  objc_msgSend(v12, sel_addButtonAction_, v16);

  *(_QWORD *)a1 = v12;
  *(_BYTE *)(a1 + 8) = 0;
}

void sub_1BA1F0478(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t ObjCClassFromMetadata;
  void *v11;
  id v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int (*v30)(char *, uint64_t, uint64_t);
  void *v31;
  void *v32;
  void *v33;
  id v34;
  char *v35;
  void *v36;
  id v37;
  _QWORD *v38;
  uint64_t v39;
  char *v40;
  _QWORD *v41;
  uint64_t v42;
  id v43[5];

  v41 = a1;
  v43[4] = *(id *)MEMORY[0x1E0C80C00];
  sub_1BA1B9050(0, (unint64_t *)&qword_1ED5AFBC8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v2 = MEMORY[0x1E0C80A78](v1);
  v40 = (char *)&v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v39 - v4;
  v6 = sub_1BA20252C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v11 = (void *)objc_opt_self();
  v12 = objc_msgSend(v11, sel_bundleForClass_, ObjCClassFromMetadata);
  v39 = sub_1BA2020E8();

  v13 = objc_msgSend(v11, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BA2020E8();

  sub_1BA202520();
  v14 = sub_1BA202514();
  v16 = v15;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v17 = 0;
  if (v16 >> 60 == 15)
    goto LABEL_7;
  v18 = (void *)objc_opt_self();
  v19 = (void *)sub_1BA202154();
  v43[0] = 0;
  v20 = objc_msgSend(v18, sel_JSONObjectWithData_options_error_, v19, 0, v43);

  if (v20)
  {
    v21 = v43[0];
    sub_1BA202700();
    sub_1BA1F3ECC(v14, v16);
    swift_unknownObjectRelease();
    sub_1BA1F3E64();
    if ((swift_dynamicCast() & 1) != 0)
    {
      v17 = v42;
      goto LABEL_7;
    }
  }
  else
  {
    v22 = v43[0];
    v23 = (void *)sub_1BA2020F4();

    swift_willThrow();
    sub_1BA1F3ECC(v14, v16);

  }
  v17 = 0;
LABEL_7:
  v24 = (void *)sub_1BA2024FC();
  swift_bridgeObjectRelease();
  v25 = (void *)sub_1BA2024FC();
  swift_bridgeObjectRelease();
  if (v17)
  {
    v26 = (void *)sub_1BA2024CC();
    swift_bridgeObjectRelease();
  }
  else
  {
    v26 = 0;
  }
  v27 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CFDA68]), sel_initWithTitle_message_appearanceInfo_, v24, v25, v26);

  objc_msgSend(v27, sel_setStyle_, 4);
  sub_1BA20210C();
  v28 = sub_1BA202118();
  v29 = *(_QWORD *)(v28 - 8);
  v30 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48);
  v31 = 0;
  if (v30(v5, 1, v28) != 1)
  {
    v31 = (void *)sub_1BA202100();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v5, v28);
  }
  objc_msgSend(v27, sel_setIconURL_, v31);

  v32 = (void *)sub_1BA2024FC();
  v33 = (void *)objc_opt_self();
  v34 = objc_msgSend(v33, sel_actionWithTitle_style_, v32, 0);

  v35 = v40;
  sub_1BA20210C();
  v36 = 0;
  if (v30(v35, 1, v28) != 1)
  {
    v36 = (void *)sub_1BA202100();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v35, v28);
  }
  objc_msgSend(v34, sel_setDeepLink_, v36);

  objc_msgSend(v27, sel_addButtonAction_, v34);
  v37 = objc_msgSend(v33, sel_actionWithTitle_style_, 0, 2);
  objc_msgSend(v27, sel_addButtonAction_, v37);

  v38 = v41;
  *v41 = v27;
  *((_BYTE *)v38 + 8) = 0;
}

void sub_1BA1F0A24(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t ObjCClassFromMetadata;
  void *v8;
  id v9;
  id v10;
  id v11;
  void *v12;
  void *v13;
  id v14;
  void *v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int (*v20)(char *, uint64_t, uint64_t);
  void *v21;
  id v22;
  void *v23;
  _QWORD *v24;
  uint64_t v25;
  _QWORD *v26;

  v26 = a1;
  sub_1BA1B9050(0, (unint64_t *)&qword_1ED5AFBC8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v2 = MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v25 - v5;
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v8 = (void *)objc_opt_self();
  v9 = objc_msgSend(v8, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BA2020E8();

  v10 = objc_msgSend(v8, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BA2020E8();

  v11 = objc_allocWithZone(MEMORY[0x1E0CFDA68]);
  v12 = (void *)sub_1BA2024FC();
  swift_bridgeObjectRelease();
  v13 = (void *)sub_1BA2024FC();
  swift_bridgeObjectRelease();
  v14 = objc_msgSend(v11, sel_initWithTitle_message_appearanceInfo_, v12, v13, 0);

  v15 = (void *)sub_1BA2024FC();
  v16 = (void *)objc_opt_self();
  v17 = objc_msgSend(v16, sel_actionWithTitle_style_, v15, 0);

  sub_1BA20210C();
  v18 = sub_1BA202118();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
  v21 = 0;
  if (v20(v6, 1, v18) != 1)
  {
    v21 = (void *)sub_1BA202100();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v6, v18);
  }
  objc_msgSend(v17, sel_setDeepLink_, v21);

  objc_msgSend(v14, sel_addButtonAction_, v17);
  v22 = objc_msgSend(v16, sel_actionWithTitle_style_, 0, 2);
  objc_msgSend(v14, sel_addButtonAction_, v22);
  sub_1BA20210C();
  v23 = 0;
  if (v20(v4, 1, v18) != 1)
  {
    v23 = (void *)sub_1BA202100();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v4, v18);
  }
  objc_msgSend(v14, sel_setIconURL_, v23);

  v24 = v26;
  *v26 = v14;
  *((_BYTE *)v24 + 8) = 0;
}

void sub_1BA1F0DE0(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t ObjCClassFromMetadata;
  void *v9;
  id v10;
  id v11;
  id v12;
  void *v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int (*v18)(char *, uint64_t, uint64_t);
  void *v19;
  id v20;
  void *v21;
  uint64_t v22;

  sub_1BA1B9050(0, (unint64_t *)&qword_1ED5AFBC8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v3 = MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v22 - v6;
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v9 = (void *)objc_opt_self();
  v10 = objc_msgSend(v9, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BA2020E8();

  v11 = objc_msgSend(v9, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BA2020E8();

  v12 = objc_allocWithZone(MEMORY[0x1E0CFDA68]);
  v13 = (void *)sub_1BA2024FC();
  swift_bridgeObjectRelease();
  v14 = (void *)sub_1BA2024FC();
  swift_bridgeObjectRelease();
  v15 = objc_msgSend(v12, sel_initWithTitle_message_appearanceInfo_, v13, v14, 0);

  sub_1BA20210C();
  v16 = sub_1BA202118();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
  v19 = 0;
  if (v18(v7, 1, v16) != 1)
  {
    v19 = (void *)sub_1BA202100();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v7, v16);
  }
  objc_msgSend(v15, sel_setIconURL_, v19);

  v20 = objc_msgSend((id)objc_opt_self(), sel_actionWithTitle_style_, 0, 0);
  sub_1BA20210C();
  v21 = 0;
  if (v18(v5, 1, v16) != 1)
  {
    v21 = (void *)sub_1BA202100();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v5, v16);
  }
  objc_msgSend(v20, sel_setDeepLink_, v21);

  objc_msgSend(v15, sel_addButtonAction_, v20);
  *(_QWORD *)a1 = v15;
  *(_BYTE *)(a1 + 8) = 0;
}

void sub_1BA1F1130(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t ObjCClassFromMetadata;
  void *v11;
  id v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int (*v30)(char *, uint64_t, uint64_t);
  void *v31;
  void *v32;
  void *v33;
  id v34;
  char *v35;
  void *v36;
  id v37;
  _QWORD *v38;
  uint64_t v39;
  char *v40;
  _QWORD *v41;
  uint64_t v42;
  id v43[5];

  v41 = a1;
  v43[4] = *(id *)MEMORY[0x1E0C80C00];
  sub_1BA1B9050(0, (unint64_t *)&qword_1ED5AFBC8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v2 = MEMORY[0x1E0C80A78](v1);
  v40 = (char *)&v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v39 - v4;
  v6 = sub_1BA20252C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v11 = (void *)objc_opt_self();
  v12 = objc_msgSend(v11, sel_bundleForClass_, ObjCClassFromMetadata);
  v39 = sub_1BA2020E8();

  v13 = objc_msgSend(v11, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BA2020E8();

  sub_1BA202520();
  v14 = sub_1BA202514();
  v16 = v15;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v17 = 0;
  if (v16 >> 60 == 15)
    goto LABEL_7;
  v18 = (void *)objc_opt_self();
  v19 = (void *)sub_1BA202154();
  v43[0] = 0;
  v20 = objc_msgSend(v18, sel_JSONObjectWithData_options_error_, v19, 0, v43);

  if (v20)
  {
    v21 = v43[0];
    sub_1BA202700();
    sub_1BA1F3ECC(v14, v16);
    swift_unknownObjectRelease();
    sub_1BA1F3E64();
    if ((swift_dynamicCast() & 1) != 0)
    {
      v17 = v42;
      goto LABEL_7;
    }
  }
  else
  {
    v22 = v43[0];
    v23 = (void *)sub_1BA2020F4();

    swift_willThrow();
    sub_1BA1F3ECC(v14, v16);

  }
  v17 = 0;
LABEL_7:
  v24 = (void *)sub_1BA2024FC();
  swift_bridgeObjectRelease();
  v25 = (void *)sub_1BA2024FC();
  swift_bridgeObjectRelease();
  if (v17)
  {
    v26 = (void *)sub_1BA2024CC();
    swift_bridgeObjectRelease();
  }
  else
  {
    v26 = 0;
  }
  v27 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CFDA68]), sel_initWithTitle_message_appearanceInfo_, v24, v25, v26);

  objc_msgSend(v27, sel_setStyle_, 4);
  sub_1BA20210C();
  v28 = sub_1BA202118();
  v29 = *(_QWORD *)(v28 - 8);
  v30 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48);
  v31 = 0;
  if (v30(v5, 1, v28) != 1)
  {
    v31 = (void *)sub_1BA202100();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v5, v28);
  }
  objc_msgSend(v27, sel_setIconURL_, v31);

  v32 = (void *)sub_1BA2024FC();
  v33 = (void *)objc_opt_self();
  v34 = objc_msgSend(v33, sel_actionWithTitle_style_, v32, 0);

  v35 = v40;
  sub_1BA20210C();
  v36 = 0;
  if (v30(v35, 1, v28) != 1)
  {
    v36 = (void *)sub_1BA202100();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v35, v28);
  }
  objc_msgSend(v34, sel_setDeepLink_, v36);

  objc_msgSend(v27, sel_addButtonAction_, v34);
  v37 = objc_msgSend(v33, sel_actionWithTitle_style_, 0, 2);
  objc_msgSend(v27, sel_addButtonAction_, v37);

  v38 = v41;
  *v41 = v27;
  *((_BYTE *)v38 + 8) = 0;
}

void sub_1BA1F16DC(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t ObjCClassFromMetadata;
  void *v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  uint64_t v17;

  sub_1BA1B9050(0, (unint64_t *)&qword_1ED5AFBC8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v17 - v3;
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v6 = (void *)objc_opt_self();
  v7 = objc_msgSend(v6, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BA2020E8();

  v8 = objc_msgSend(v6, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BA2020E8();

  v9 = objc_allocWithZone(MEMORY[0x1E0CFDA68]);
  v10 = (void *)sub_1BA2024FC();
  swift_bridgeObjectRelease();
  v11 = (void *)sub_1BA2024FC();
  swift_bridgeObjectRelease();
  v12 = objc_msgSend(v9, sel_initWithTitle_message_, v10, v11);

  objc_msgSend(v12, sel_setStyle_, 4);
  sub_1BA20210C();
  v13 = sub_1BA202118();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v4, 1, v13) != 1)
  {
    v15 = (void *)sub_1BA202100();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v4, v13);
  }
  objc_msgSend(v12, sel_setIconURL_, v15);

  v16 = objc_msgSend((id)objc_opt_self(), sel_actionWithTitle_style_, 0, 2);
  objc_msgSend(v12, sel_addButtonAction_, v16);

  *(_QWORD *)a1 = v12;
  *(_BYTE *)(a1 + 8) = 0;
}

void sub_1BA1F19B4(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t ObjCClassFromMetadata;
  void *v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  uint64_t v17;

  sub_1BA1B9050(0, (unint64_t *)&qword_1ED5AFBC8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v17 - v3;
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v6 = (void *)objc_opt_self();
  v7 = objc_msgSend(v6, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BA2020E8();

  v8 = objc_msgSend(v6, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BA2020E8();

  v9 = objc_allocWithZone(MEMORY[0x1E0CFDA68]);
  v10 = (void *)sub_1BA2024FC();
  swift_bridgeObjectRelease();
  v11 = (void *)sub_1BA2024FC();
  swift_bridgeObjectRelease();
  v12 = objc_msgSend(v9, sel_initWithTitle_message_, v10, v11);

  objc_msgSend(v12, sel_setStyle_, 4);
  sub_1BA20210C();
  v13 = sub_1BA202118();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v4, 1, v13) != 1)
  {
    v15 = (void *)sub_1BA202100();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v4, v13);
  }
  objc_msgSend(v12, sel_setIconURL_, v15);

  v16 = objc_msgSend((id)objc_opt_self(), sel_actionWithTitle_style_, 0, 2);
  objc_msgSend(v12, sel_addButtonAction_, v16);

  *(_QWORD *)a1 = v12;
  *(_BYTE *)(a1 + 8) = 0;
}

void sub_1BA1F1C8C(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t ObjCClassFromMetadata;
  void *v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  uint64_t v17;

  sub_1BA1B9050(0, (unint64_t *)&qword_1ED5AFBC8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v17 - v3;
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v6 = (void *)objc_opt_self();
  v7 = objc_msgSend(v6, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BA2020E8();

  v8 = objc_msgSend(v6, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BA2020E8();

  v9 = objc_allocWithZone(MEMORY[0x1E0CFDA68]);
  v10 = (void *)sub_1BA2024FC();
  swift_bridgeObjectRelease();
  v11 = (void *)sub_1BA2024FC();
  swift_bridgeObjectRelease();
  v12 = objc_msgSend(v9, sel_initWithTitle_message_, v10, v11);

  objc_msgSend(v12, sel_setStyle_, 4);
  sub_1BA20210C();
  v13 = sub_1BA202118();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v4, 1, v13) != 1)
  {
    v15 = (void *)sub_1BA202100();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v4, v13);
  }
  objc_msgSend(v12, sel_setIconURL_, v15);

  v16 = objc_msgSend((id)objc_opt_self(), sel_actionWithTitle_style_, 0, 2);
  objc_msgSend(v12, sel_addButtonAction_, v16);

  *(_QWORD *)a1 = v12;
  *(_BYTE *)(a1 + 8) = 0;
}

void sub_1BA1F1F6C(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t ObjCClassFromMetadata;
  void *v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  uint64_t v17;

  sub_1BA1B9050(0, (unint64_t *)&qword_1ED5AFBC8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v17 - v3;
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v6 = (void *)objc_opt_self();
  v7 = objc_msgSend(v6, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BA2020E8();

  v8 = objc_msgSend(v6, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BA2020E8();

  v9 = objc_allocWithZone(MEMORY[0x1E0CFDA68]);
  v10 = (void *)sub_1BA2024FC();
  swift_bridgeObjectRelease();
  v11 = (void *)sub_1BA2024FC();
  swift_bridgeObjectRelease();
  v12 = objc_msgSend(v9, sel_initWithTitle_message_, v10, v11);

  objc_msgSend(v12, sel_setStyle_, 4);
  sub_1BA20210C();
  v13 = sub_1BA202118();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v4, 1, v13) != 1)
  {
    v15 = (void *)sub_1BA202100();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v4, v13);
  }
  objc_msgSend(v12, sel_setIconURL_, v15);

  v16 = objc_msgSend((id)objc_opt_self(), sel_actionWithTitle_style_, 0, 2);
  objc_msgSend(v12, sel_addButtonAction_, v16);

  *(_QWORD *)a1 = v12;
  *(_BYTE *)(a1 + 8) = 0;
}

void sub_1BA1F2240(uint64_t a1@<X8>)
{
  uint64_t ObjCClassFromMetadata;
  void *v3;
  id v4;
  id v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  id v10;

  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v3 = (void *)objc_opt_self();
  v4 = objc_msgSend(v3, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BA2020E8();

  v5 = objc_msgSend(v3, sel_bundleForClass_, ObjCClassFromMetadata, 0x80000001BA209BE0);
  sub_1BA2020E8();

  v6 = objc_allocWithZone(MEMORY[0x1E0CFDA68]);
  v7 = (void *)sub_1BA2024FC();
  swift_bridgeObjectRelease();
  v8 = (void *)sub_1BA2024FC();
  swift_bridgeObjectRelease();
  v9 = objc_msgSend(v6, sel_initWithTitle_message_, v7, v8, 0x80000001BA209B70);

  objc_msgSend(v9, sel_setStyle_, 4);
  v10 = objc_msgSend((id)objc_opt_self(), sel_actionWithTitle_style_, 0, 2);
  objc_msgSend(v9, sel_addButtonAction_, v10);

  *(_QWORD *)a1 = v9;
  *(_BYTE *)(a1 + 8) = 0;
}

void sub_1BA1F244C(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t ObjCClassFromMetadata;
  void *v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  uint64_t v17;

  sub_1BA1B9050(0, (unint64_t *)&qword_1ED5AFBC8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v17 - v3;
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v6 = (void *)objc_opt_self();
  v7 = objc_msgSend(v6, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BA2020E8();

  v8 = objc_msgSend(v6, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BA2020E8();

  v9 = objc_allocWithZone(MEMORY[0x1E0CFDA68]);
  v10 = (void *)sub_1BA2024FC();
  swift_bridgeObjectRelease();
  v11 = (void *)sub_1BA2024FC();
  swift_bridgeObjectRelease();
  v12 = objc_msgSend(v9, sel_initWithTitle_message_, v10, v11);

  objc_msgSend(v12, sel_setStyle_, 4);
  sub_1BA20210C();
  v13 = sub_1BA202118();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v4, 1, v13) != 1)
  {
    v15 = (void *)sub_1BA202100();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v4, v13);
  }
  objc_msgSend(v12, sel_setIconURL_, v15);

  v16 = objc_msgSend((id)objc_opt_self(), sel_actionWithTitle_style_, 0, 2);
  objc_msgSend(v12, sel_addButtonAction_, v16);

  *(_QWORD *)a1 = v12;
  *(_BYTE *)(a1 + 8) = 0;
}

void sub_1BA1F2720(uint64_t a1@<X8>)
{
  uint64_t ObjCClassFromMetadata;
  void *v3;
  id v4;
  id v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  id v10;

  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v3 = (void *)objc_opt_self();
  v4 = objc_msgSend(v3, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BA2020E8();

  v5 = objc_msgSend(v3, sel_bundleForClass_, ObjCClassFromMetadata, 0x80000001BA209BE0);
  sub_1BA2020E8();

  v6 = objc_allocWithZone(MEMORY[0x1E0CFDA68]);
  v7 = (void *)sub_1BA2024FC();
  swift_bridgeObjectRelease();
  v8 = (void *)sub_1BA2024FC();
  swift_bridgeObjectRelease();
  v9 = objc_msgSend(v6, sel_initWithTitle_message_, v7, v8, 0x80000001BA209CC0);

  objc_msgSend(v9, sel_setStyle_, 4);
  v10 = objc_msgSend((id)objc_opt_self(), sel_actionWithTitle_style_, 0, 2);
  objc_msgSend(v9, sel_addButtonAction_, v10);

  *(_QWORD *)a1 = v9;
  *(_BYTE *)(a1 + 8) = 0;
}

void sub_1BA1F292C(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  id v24;
  void *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int (*v29)(char *, uint64_t, uint64_t);
  void *v30;
  id v31;
  void *v32;
  uint64_t v33;
  _QWORD v34[3];
  id v35[5];

  v34[0] = a1;
  v35[4] = *(id *)MEMORY[0x1E0C80C00];
  sub_1BA1B9050(0, (unint64_t *)&qword_1ED5AFBC8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v2 = MEMORY[0x1E0C80A78](v1);
  v4 = (char *)v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)v34 - v5;
  v7 = sub_1BA20252C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA202520();
  v11 = sub_1BA202514();
  v13 = v12;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  v14 = 0;
  if (v13 >> 60 == 15)
    goto LABEL_7;
  v15 = (void *)objc_opt_self();
  v16 = (void *)sub_1BA202154();
  v35[0] = 0;
  v17 = objc_msgSend(v15, sel_JSONObjectWithData_options_error_, v16, 0, v35);

  if (v17)
  {
    v18 = v35[0];
    sub_1BA202700();
    sub_1BA1F3ECC(v11, v13);
    swift_unknownObjectRelease();
    sub_1BA1F3E64();
    if ((swift_dynamicCast() & 1) != 0)
    {
      v14 = v34[1];
      goto LABEL_7;
    }
  }
  else
  {
    v19 = v35[0];
    v20 = (void *)sub_1BA2020F4();

    swift_willThrow();
    sub_1BA1F3ECC(v11, v13);

  }
  v14 = 0;
LABEL_7:
  v21 = (void *)sub_1BA2024FC();
  v22 = (void *)sub_1BA2024FC();
  if (v14)
  {
    v23 = (void *)sub_1BA2024CC();
    swift_bridgeObjectRelease();
  }
  else
  {
    v23 = 0;
  }
  v24 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CFDA68]), sel_initWithTitle_message_appearanceInfo_, v21, v22, v23);

  v25 = (void *)objc_opt_self();
  v26 = objc_msgSend(v25, sel_actionWithTitle_style_, 0, 2);
  objc_msgSend(v24, sel_addButtonAction_, v26);
  sub_1BA20210C();
  v27 = sub_1BA202118();
  v28 = *(_QWORD *)(v27 - 8);
  v29 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48);
  v30 = 0;
  if (v29(v6, 1, v27) != 1)
  {
    v30 = (void *)sub_1BA202100();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v6, v27);
  }
  objc_msgSend(v24, sel_setIconURL_, v30, v34[0]);

  v31 = objc_msgSend(v25, sel_actionWithTitle_style_, 0, 0);
  sub_1BA20210C();
  v32 = 0;
  if (v29(v4, 1, v27) != 1)
  {
    v32 = (void *)sub_1BA202100();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v4, v27);
  }
  objc_msgSend(v31, sel_setDeepLink_, v32);

  objc_msgSend(v24, sel_setDefaultAction_, v31);
  objc_msgSend(v24, sel_setStyle_, 3);

  v33 = v34[0];
  *(_QWORD *)v34[0] = v24;
  *(_BYTE *)(v33 + 8) = 0;
}

void sub_1BA1F2DBC(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t ObjCClassFromMetadata;
  void *v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  uint64_t v17;

  sub_1BA1B9050(0, (unint64_t *)&qword_1ED5AFBC8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v17 - v3;
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v6 = (void *)objc_opt_self();
  v7 = objc_msgSend(v6, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BA2020E8();

  v8 = objc_msgSend(v6, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BA2020E8();

  v9 = objc_allocWithZone(MEMORY[0x1E0CFDA68]);
  v10 = (void *)sub_1BA2024FC();
  swift_bridgeObjectRelease();
  v11 = (void *)sub_1BA2024FC();
  swift_bridgeObjectRelease();
  v12 = objc_msgSend(v9, sel_initWithTitle_message_, v10, v11);

  objc_msgSend(v12, sel_setStyle_, 4);
  sub_1BA20210C();
  v13 = sub_1BA202118();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v4, 1, v13) != 1)
  {
    v15 = (void *)sub_1BA202100();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v4, v13);
  }
  objc_msgSend(v12, sel_setIconURL_, v15);

  v16 = objc_msgSend((id)objc_opt_self(), sel_actionWithTitle_style_, 0, 2);
  objc_msgSend(v12, sel_addButtonAction_, v16);

  *(_QWORD *)a1 = v12;
  *(_BYTE *)(a1 + 8) = 0;
}

void sub_1BA1F3094(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t ObjCClassFromMetadata;
  void *v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  uint64_t v17;

  sub_1BA1B9050(0, (unint64_t *)&qword_1ED5AFBC8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v17 - v3;
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v6 = (void *)objc_opt_self();
  v7 = objc_msgSend(v6, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BA2020E8();

  v8 = objc_msgSend(v6, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BA2020E8();

  v9 = objc_allocWithZone(MEMORY[0x1E0CFDA68]);
  v10 = (void *)sub_1BA2024FC();
  swift_bridgeObjectRelease();
  v11 = (void *)sub_1BA2024FC();
  swift_bridgeObjectRelease();
  v12 = objc_msgSend(v9, sel_initWithTitle_message_, v10, v11);

  objc_msgSend(v12, sel_setStyle_, 4);
  sub_1BA20210C();
  v13 = sub_1BA202118();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v4, 1, v13) != 1)
  {
    v15 = (void *)sub_1BA202100();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v4, v13);
  }
  objc_msgSend(v12, sel_setIconURL_, v15);

  v16 = objc_msgSend((id)objc_opt_self(), sel_actionWithTitle_style_, 0, 2);
  objc_msgSend(v12, sel_addButtonAction_, v16);

  *(_QWORD *)a1 = v12;
  *(_BYTE *)(a1 + 8) = 0;
}

void sub_1BA1F3378(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t ObjCClassFromMetadata;
  void *v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  uint64_t v17;

  sub_1BA1B9050(0, (unint64_t *)&qword_1ED5AFBC8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v17 - v3;
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v6 = (void *)objc_opt_self();
  v7 = objc_msgSend(v6, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BA2020E8();

  v8 = objc_msgSend(v6, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BA2020E8();

  v9 = objc_allocWithZone(MEMORY[0x1E0CFDA68]);
  v10 = (void *)sub_1BA2024FC();
  swift_bridgeObjectRelease();
  v11 = (void *)sub_1BA2024FC();
  swift_bridgeObjectRelease();
  v12 = objc_msgSend(v9, sel_initWithTitle_message_, v10, v11);

  objc_msgSend(v12, sel_setStyle_, 4);
  sub_1BA20210C();
  v13 = sub_1BA202118();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v4, 1, v13) != 1)
  {
    v15 = (void *)sub_1BA202100();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v4, v13);
  }
  objc_msgSend(v12, sel_setIconURL_, v15);

  v16 = objc_msgSend((id)objc_opt_self(), sel_actionWithTitle_style_, 0, 2);
  objc_msgSend(v12, sel_addButtonAction_, v16);

  *(_QWORD *)a1 = v12;
  *(_BYTE *)(a1 + 8) = 0;
}

void sub_1BA1F3650(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t ObjCClassFromMetadata;
  void *v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  uint64_t v17;

  sub_1BA1B9050(0, (unint64_t *)&qword_1ED5AFBC8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v17 - v3;
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v6 = (void *)objc_opt_self();
  v7 = objc_msgSend(v6, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BA2020E8();

  v8 = objc_msgSend(v6, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BA2020E8();

  v9 = objc_allocWithZone(MEMORY[0x1E0CFDA68]);
  v10 = (void *)sub_1BA2024FC();
  swift_bridgeObjectRelease();
  v11 = (void *)sub_1BA2024FC();
  swift_bridgeObjectRelease();
  v12 = objc_msgSend(v9, sel_initWithTitle_message_, v10, v11);

  objc_msgSend(v12, sel_setStyle_, 4);
  sub_1BA20210C();
  v13 = sub_1BA202118();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v4, 1, v13) != 1)
  {
    v15 = (void *)sub_1BA202100();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v4, v13);
  }
  objc_msgSend(v12, sel_setIconURL_, v15);

  v16 = objc_msgSend((id)objc_opt_self(), sel_actionWithTitle_style_, 0, 2);
  objc_msgSend(v12, sel_addButtonAction_, v16);

  *(_QWORD *)a1 = v12;
  *(_BYTE *)(a1 + 8) = 0;
}

void sub_1BA1F3928(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t ObjCClassFromMetadata;
  void *v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  uint64_t v17;

  sub_1BA1B9050(0, (unint64_t *)&qword_1ED5AFBC8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v17 - v3;
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v6 = (void *)objc_opt_self();
  v7 = objc_msgSend(v6, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BA2020E8();

  v8 = objc_msgSend(v6, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BA2020E8();

  v9 = objc_allocWithZone(MEMORY[0x1E0CFDA68]);
  v10 = (void *)sub_1BA2024FC();
  swift_bridgeObjectRelease();
  v11 = (void *)sub_1BA2024FC();
  swift_bridgeObjectRelease();
  v12 = objc_msgSend(v9, sel_initWithTitle_message_, v10, v11);

  objc_msgSend(v12, sel_setStyle_, 4);
  sub_1BA20210C();
  v13 = sub_1BA202118();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v4, 1, v13) != 1)
  {
    v15 = (void *)sub_1BA202100();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v4, v13);
  }
  objc_msgSend(v12, sel_setIconURL_, v15);

  v16 = objc_msgSend((id)objc_opt_self(), sel_actionWithTitle_style_, 0, 2);
  objc_msgSend(v12, sel_addButtonAction_, v16);

  *(_QWORD *)a1 = v12;
  *(_BYTE *)(a1 + 8) = 0;
}

uint64_t sub_1BA1F3C0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _BYTE v15[32];

  sub_1BA1B9050(0, &qword_1ED5AF318, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v6 = &v15[-v5];
  v7 = sub_1BA202184();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = &v15[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  v11 = *(_QWORD *)(a1 + 16);
  if (*(_QWORD *)(v11 + 16) && (v12 = sub_1BA1B9DB8(a2), (v13 & 1) != 0))
  {
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v8 + 16))(v6, *(_QWORD *)(v11 + 56) + *(_QWORD *)(v8 + 72) * v12, v7);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) != 1)
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v8 + 32))(v10, v6, v7);
      swift_endAccess();
      sub_1BA202160();
      if (qword_1EF2790B0 != -1)
        swift_once();
      type metadata accessor for EngagementDebugRequestFactory();
      sub_1BA1F3EE0();
      sub_1BA2021CC();
      (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v10, v7);
      __asm { BR              X10 }
    }
  }
  else
  {
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
  }
  sub_1BA1BAD90((uint64_t)v6);
  swift_endAccess();
  return 1;
}

uint64_t sub_1BA1F3E44@<X0>(_BYTE *a1@<X0>, char a2@<W2>, uint64_t a3@<X8>)
{
  return sub_1BA1ED3A8(a1, a2, a3);
}

void sub_1BA1F3E64()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2799E0)
  {
    v0 = sub_1BA2024F0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2799E0);
  }
}

uint64_t sub_1BA1F3ECC(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_1BA1C22B8(a1, a2);
  return a1;
}

unint64_t sub_1BA1F3EE0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2799E8;
  if (!qword_1EF2799E8)
  {
    v1 = type metadata accessor for EngagementDebugRequestFactory();
    result = MEMORY[0x1BCCD76CC](&unk_1BA205880, v1);
    atomic_store(result, (unint64_t *)&qword_1EF2799E8);
  }
  return result;
}

unint64_t sub_1BA1F3F24()
{
  unint64_t result;

  result = qword_1EF2799F0;
  if (!qword_1EF2799F0)
  {
    result = MEMORY[0x1BCCD76CC](&protocol conformance descriptor for EngagementDebugPlacementQuiescenceInterval, &type metadata for EngagementDebugPlacementQuiescenceInterval);
    atomic_store(result, (unint64_t *)&qword_1EF2799F0);
  }
  return result;
}

BOOL static EngagementViewControllerPresentationError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t EngagementViewControllerPresentationError.hash(into:)()
{
  return sub_1BA202A0C();
}

uint64_t EngagementViewControllerPresentationError.hashValue.getter()
{
  sub_1BA202A00();
  sub_1BA202A0C();
  return sub_1BA202A18();
}

unint64_t sub_1BA1F3FF0()
{
  unint64_t result;

  result = qword_1EF2799F8;
  if (!qword_1EF2799F8)
  {
    result = MEMORY[0x1BCCD76CC](&protocol conformance descriptor for EngagementViewControllerPresentationError, &type metadata for EngagementViewControllerPresentationError);
    atomic_store(result, (unint64_t *)&qword_1EF2799F8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for EngagementViewControllerPresentationError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BA1F4080 + 4 * byte_1BA2058E5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BA1F40B4 + 4 * byte_1BA2058E0[v4]))();
}

uint64_t sub_1BA1F40B4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA1F40BC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BA1F40C4);
  return result;
}

uint64_t sub_1BA1F40D0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BA1F40D8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BA1F40DC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA1F40E4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for EngagementViewControllerPresentationError()
{
  return &type metadata for EngagementViewControllerPresentationError;
}

_BYTE *EngagementPlacementInfo.init(placement:context:)@<X0>(_BYTE *result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(_BYTE *)a3 = *result;
  *(_QWORD *)(a3 + 8) = a2;
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for EngagementPlacementInfo(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for EngagementUpsellTriggerFailureInfo()
{
  return swift_bridgeObjectRelease();
}

uint64_t assignWithCopy for EngagementPlacementInfo(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for EngagementPlacementInfo(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for EngagementPlacementInfo(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for EngagementPlacementInfo(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for EngagementPlacementInfo()
{
  return &type metadata for EngagementPlacementInfo;
}

unint64_t EngagementInlineViewError.description.getter()
{
  _QWORD *v0;
  unint64_t result;

  result = 0x6E776F6E6B6E75;
  switch(*v0)
  {
    case 1:
      return result;
    case 2:
      result = 0xD000000000000018;
      break;
    case 3:
      result = 0xD00000000000001FLL;
      break;
    case 4:
    case 5:
      result = 0xD00000000000001CLL;
      break;
    case 6:
      result = 0xD000000000000015;
      break;
    case 7:
      result = 0xD000000000000014;
      break;
    case 8:
      result = 0xD000000000000010;
      break;
    case 9:
      result = 0xD000000000000013;
      break;
    case 0xALL:
      result = 0x6F4364656C696166;
      break;
    default:
      result = 0x6576697463416F6ELL;
      break;
  }
  return result;
}

NewsEngagement::EngagementUpsellTriggerFailureReason_optional __swiftcall EngagementUpsellTriggerFailureReason.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsEngagement::EngagementUpsellTriggerFailureReason_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1BA202868();
  result.value = swift_bridgeObjectRelease();
  v5 = 6;
  if (v3 < 6)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t EngagementUpsellTriggerFailureReason.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1BA1F4454 + 4 * byte_1BA205A5A[*v0]))(0xD000000000000016, 0x80000001BA206970);
}

uint64_t sub_1BA1F4454()
{
  return 0x64657269707865;
}

uint64_t sub_1BA1F446C(uint64_t a1)
{
  return a1 + 1;
}

void sub_1BA1F44B0(char *a1)
{
  sub_1BA1FADA8(*a1);
}

void sub_1BA1F44BC()
{
  char *v0;

  sub_1BA1FA418(*v0);
}

void sub_1BA1F44C4(uint64_t a1)
{
  char *v1;

  sub_1BA1E265C(a1, *v1);
}

void sub_1BA1F44CC(uint64_t a1)
{
  char *v1;

  sub_1BA1FA6B0(a1, *v1);
}

NewsEngagement::EngagementUpsellTriggerFailureReason_optional sub_1BA1F44D4(Swift::String *a1)
{
  return EngagementUpsellTriggerFailureReason.init(rawValue:)(*a1);
}

uint64_t sub_1BA1F44E0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = EngagementUpsellTriggerFailureReason.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t EngagementUpsellTriggerFailureInfo.triggerName.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

void EngagementUpsellTriggerFailureInfo.reason.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 16);
}

NewsEngagement::EngagementUpsellTriggerFailureInfo __swiftcall EngagementUpsellTriggerFailureInfo.init(triggerName:reason:)(Swift::String triggerName, NewsEngagement::EngagementUpsellTriggerFailureReason reason)
{
  uint64_t v2;
  char v3;
  NewsEngagement::EngagementUpsellTriggerFailureInfo result;

  v3 = *(_BYTE *)reason;
  *(Swift::String *)v2 = triggerName;
  *(_BYTE *)(v2 + 16) = v3;
  result.triggerName = triggerName;
  result.reason = reason;
  return result;
}

unint64_t sub_1BA1F4550()
{
  unint64_t result;

  result = qword_1EF279A00;
  if (!qword_1EF279A00)
  {
    result = MEMORY[0x1BCCD76CC](&protocol conformance descriptor for EngagementUpsellTriggerFailureReason, &type metadata for EngagementUpsellTriggerFailureReason);
    atomic_store(result, (unint64_t *)&qword_1EF279A00);
  }
  return result;
}

unint64_t destroy for EngagementInlineViewError(unint64_t *a1)
{
  unint64_t result;
  int v2;

  result = *a1;
  v2 = -1;
  if (result < 0xFFFFFFFF)
    v2 = result;
  if ((v2 + 1) <= 1)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t *_s14NewsEngagement25EngagementInlineViewErrorOwCP_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  LODWORD(v4) = -1;
  if ((unint64_t)*a2 < 0xFFFFFFFF)
    v4 = *a2;
  if ((v4 + 1) <= 1)
    v3 = swift_bridgeObjectRetain();
  *a1 = v3;
  return a1;
}

uint64_t *assignWithCopy for EngagementInlineViewError(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  unsigned int v7;

  LODWORD(v3) = -1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v4) = -1;
  else
    v4 = *a1;
  v5 = v4 + 1;
  v6 = *a2;
  if ((unint64_t)*a2 < 0xFFFFFFFF)
    v3 = *a2;
  v7 = v3 + 1;
  if (v5 > 1)
  {
    *a1 = v6;
    if (v7 <= 1)
      swift_bridgeObjectRetain();
  }
  else if (v7 > 1)
  {
    swift_bridgeObjectRelease();
    *a1 = *a2;
  }
  else
  {
    *a1 = v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  return a1;
}

unint64_t *assignWithTake for EngagementInlineViewError(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;
  int v4;
  unint64_t v5;
  unint64_t v6;

  v3 = *a1;
  v4 = -1;
  if (v3 < 0xFFFFFFFF)
    v4 = v3;
  v5 = *a2;
  if ((v4 + 1) > 1)
    goto LABEL_9;
  LODWORD(v6) = -1;
  if (v5 < 0xFFFFFFFF)
    v6 = *a2;
  if ((v6 + 1) > 1)
  {
    swift_bridgeObjectRelease();
LABEL_9:
    *a1 = v5;
    return a1;
  }
  *a1 = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for EngagementInlineViewError(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;

  if (!a2)
    return 0;
  if (a2 > 0x7FFFFFF4 && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 2147483637);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) < 2)
    LODWORD(v3) = 0;
  if (v3 >= 0xB)
    return (v3 - 10);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for EngagementInlineViewError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFF5)
  {
    *(_QWORD *)result = 0;
    *(_DWORD *)result = a2 - 2147483637;
    if (a3 >= 0x7FFFFFF5)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFF5)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2 + 10;
  }
  return result;
}

uint64_t sub_1BA1F47BC(uint64_t *a1)
{
  uint64_t v1;

  v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  if ((v1 + 1) >= 2)
    return v1;
  else
    return 0;
}

_QWORD *sub_1BA1F47DC(_QWORD *result, unsigned int a2)
{
  if (a2 > 0x7FFFFFFE)
  {
    *result = 0;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
  }
  else if (a2)
  {
    *result = a2;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for EngagementUpsellBannerStyle(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFB)
    goto LABEL_17;
  if (a2 + 5 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 5) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 5;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 5;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 5;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 6;
  v8 = v6 - 6;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t sub_1BA1F48A0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for EngagementUpsellTriggerFailureInfo(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

uint64_t assignWithTake for EngagementUpsellTriggerFailureInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for EngagementUpsellTriggerFailureInfo(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 17))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for EngagementUpsellTriggerFailureInfo(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 17) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

NewsEngagement::EngagementPlacementSource_optional __swiftcall EngagementPlacementSource.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsEngagement::EngagementPlacementSource_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1BA202868();
  result.value = swift_bridgeObjectRelease();
  v5 = 4;
  if (v3 < 4)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t EngagementPlacementSource.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA1F4A74 + 4 * byte_1BA205BE0[*v0]))(0x6E776F6E6B6E75, 0xE700000000000000);
}

uint64_t sub_1BA1F4A74()
{
  return 0x6775626564;
}

uint64_t sub_1BA1F4A88()
{
  return 0x7972756372656DLL;
}

uint64_t sub_1BA1F4A9C()
{
  return 0x6D6F6F727377656ELL;
}

void sub_1BA1F4AB4(char *a1)
{
  sub_1BA1FB298(*a1);
}

unint64_t sub_1BA1F4AC4()
{
  unint64_t result;

  result = qword_1EF279A08;
  if (!qword_1EF279A08)
  {
    result = MEMORY[0x1BCCD76CC](&protocol conformance descriptor for EngagementPlacementSource, &type metadata for EngagementPlacementSource);
    atomic_store(result, (unint64_t *)&qword_1EF279A08);
  }
  return result;
}

void sub_1BA1F4B08()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1BA202A00();
  __asm { BR              X9 }
}

uint64_t sub_1BA1F4B54()
{
  sub_1BA202538();
  swift_bridgeObjectRelease();
  return sub_1BA202A18();
}

void sub_1BA1F4BBC()
{
  __asm { BR              X10 }
}

uint64_t sub_1BA1F4BF8()
{
  sub_1BA202538();
  return swift_bridgeObjectRelease();
}

void sub_1BA1F4C4C()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1BA202A00();
  __asm { BR              X9 }
}

uint64_t sub_1BA1F4C94()
{
  sub_1BA202538();
  swift_bridgeObjectRelease();
  return sub_1BA202A18();
}

NewsEngagement::EngagementPlacementSource_optional sub_1BA1F4CFC(Swift::String *a1)
{
  return EngagementPlacementSource.init(rawValue:)(*a1);
}

uint64_t sub_1BA1F4D08()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1BA1F4D38 + 4 * byte_1BA205BF0[*v0]))();
}

void sub_1BA1F4D38(_QWORD *a1@<X8>)
{
  *a1 = 0x6775626564;
  a1[1] = 0xE500000000000000;
}

void sub_1BA1F4D50(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 0x7972756372656DLL;
  a1[1] = v1;
}

void sub_1BA1F4D68(_QWORD *a1@<X8>)
{
  *a1 = 0x6D6F6F727377656ELL;
  a1[1] = 0xE800000000000000;
}

uint64_t storeEnumTagSinglePayload for EngagementPlacementSource(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1BA1F4DD0 + 4 * byte_1BA205BF9[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1BA1F4E04 + 4 * byte_1BA205BF4[v4]))();
}

uint64_t sub_1BA1F4E04(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA1F4E0C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BA1F4E14);
  return result;
}

uint64_t sub_1BA1F4E20(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BA1F4E28);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1BA1F4E2C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA1F4E34(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

double EngagementBannerLayout.size.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

NewsEngagement::EngagementBannerLayout __swiftcall EngagementBannerLayout.init(size:)(NewsEngagement::EngagementBannerLayout size)
{
  CGFloat *v1;

  *v1 = size.size.width;
  v1[1] = size.size.height;
  return size;
}

uint64_t EngagementBannerLayout.description.getter()
{
  sub_1BA202544();
  type metadata accessor for CGSize(0);
  sub_1BA2027FC();
  return 0;
}

uint64_t sub_1BA1F4ECC()
{
  sub_1BA202544();
  type metadata accessor for CGSize(0);
  sub_1BA2027FC();
  return 0;
}

ValueMetadata *type metadata accessor for EngagementBannerLayout()
{
  return &type metadata for EngagementBannerLayout;
}

uint64_t sub_1BA1F4F68(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA1F4FA8
                                                            + 4 * asc_1BA205D30[a1]))(0x567377654E6E696DLL, 0xEE006E6F69737265);
}

uint64_t sub_1BA1F4FA8()
{
  return 0x567377654E78616DLL;
}

uint64_t sub_1BA1F4FBC()
{
  return 0x6E6F697461727564;
}

unint64_t sub_1BA1F4FD4()
{
  return 0xD000000000000018;
}

uint64_t sub_1BA1F5080()
{
  return 0x6F697469646E6F63;
}

uint64_t sub_1BA1F509C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA1F50DC + 4 * byte_1BA205D3A[a1]))(0x567377654E6E696DLL, 0xEE006E6F69737265);
}

uint64_t sub_1BA1F50DC()
{
  return 0x567377654E78616DLL;
}

uint64_t sub_1BA1F50F0()
{
  return 0x6E6F697461727564;
}

unint64_t sub_1BA1F5108()
{
  return 0xD000000000000018;
}

uint64_t sub_1BA1F51B4()
{
  return 0x6F697469646E6F63;
}

uint64_t sub_1BA1F51D0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;

  v2 = *a2;
  v3 = sub_1BA1F4F68(*a1);
  v5 = v4;
  if (v3 == sub_1BA1F4F68(v2) && v5 == v6)
    v8 = 1;
  else
    v8 = sub_1BA202988();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1BA1F5258()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_1BA202A00();
  sub_1BA1F4F68(v1);
  sub_1BA202538();
  swift_bridgeObjectRelease();
  return sub_1BA202A18();
}

uint64_t sub_1BA1F52B8()
{
  unsigned __int8 *v0;

  sub_1BA1F4F68(*v0);
  sub_1BA202538();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BA1F52F8()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_1BA202A00();
  sub_1BA1F4F68(v1);
  sub_1BA202538();
  swift_bridgeObjectRelease();
  return sub_1BA202A18();
}

uint64_t sub_1BA1F5354@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BA1FA130();
  *a1 = result;
  return result;
}

uint64_t sub_1BA1F5380@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1BA1F4F68(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1BA1F53A8()
{
  unsigned __int8 *v0;

  return sub_1BA1F509C(*v0);
}

uint64_t sub_1BA1F53B0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BA1FA130();
  *a1 = result;
  return result;
}

void sub_1BA1F53D4(_BYTE *a1@<X8>)
{
  *a1 = 10;
}

uint64_t sub_1BA1F53E0()
{
  sub_1BA1F7504();
  return sub_1BA202A3C();
}

uint64_t sub_1BA1F5408()
{
  sub_1BA1F7504();
  return sub_1BA202A48();
}

uint64_t EngagementUpsellTrigger.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  int v35;
  char *v36;
  unint64_t v37;
  unint64_t v38;
  unsigned __int8 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t (*v42)(uint64_t);
  uint64_t v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  double v48;
  int v49;
  uint64_t v50;
  int v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  int v55;
  char *v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  _QWORD *v62;
  uint64_t v63;
  unsigned __int8 v64[27];

  v59 = a2;
  v3 = type metadata accessor for EngagementUpsellTrigger();
  MEMORY[0x1E0C80A78](v3);
  v60 = (uint64_t)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA1B9050(0, &qword_1ED5AF328, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4DC8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v6 = MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v6);
  v11 = (char *)&v44 - v10;
  v12 = MEMORY[0x1E0C80A78](v9);
  v14 = (char *)&v44 - v13;
  MEMORY[0x1E0C80A78](v12);
  v61 = (char *)&v44 - v15;
  sub_1BA1F8A4C(0, &qword_1EF279A10, MEMORY[0x1E0DED048]);
  v17 = v16;
  v18 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v44 - v19;
  v21 = a1[3];
  v62 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v21);
  sub_1BA1F7504();
  v22 = v63;
  sub_1BA202A24();
  if (!v22)
  {
    v56 = v11;
    v57 = v8;
    v58 = v14;
    v63 = v18;
    sub_1BA202400();
    v64[26] = 0;
    sub_1BA1F8AA8(&qword_1EF279A20, MEMORY[0x1E0DB4DF0]);
    v23 = v61;
    sub_1BA2028BC();
    v24 = v17;
    v25 = (uint64_t)v23;
    v64[25] = 1;
    sub_1BA2028BC();
    v64[24] = 2;
    v26 = sub_1BA2028A4();
    v55 = v27;
    v64[23] = 3;
    v28 = sub_1BA2028B0();
    v53 = v29;
    v54 = v28;
    v64[22] = 4;
    v30 = sub_1BA2028A4();
    v51 = v31;
    v52 = v30;
    v64[21] = 5;
    v32 = sub_1BA2028A4();
    v49 = v33;
    v50 = v32;
    v64[19] = 7;
    sub_1BA1F7548();
    sub_1BA2028BC();
    v48 = *(double *)&v26;
    LOBYTE(v26) = v64[20];
    v34 = sub_1BA1F5A40(6);
    v64[2] = 8;
    v47 = sub_1BA2028B0();
    v46 = v35;
    v64[1] = 9;
    v45 = v24;
    v36 = v20;
    v44 = sub_1BA20288C();
    v38 = v37;
    v55 &= 1u;
    v53 &= 1u;
    v51 &= 1u;
    v49 &= 1u;
    v39 = v46 & 1;
    v40 = (uint64_t)v56;
    sub_1BA1B90A8(v25, (uint64_t)v56);
    v41 = (uint64_t)v57;
    sub_1BA1B90A8((uint64_t)v58, (uint64_t)v57);
    v64[0] = v26;
    sub_1BA1B88F4(v40, v41, v48, v55, v54, v53, v52, v51, v60, v50, v49, v64, v47, v39, v44, v38, v34);
    v42 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4DC8];
    sub_1BA1F74C0((uint64_t)v58, &qword_1ED5AF328, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4DC8]);
    sub_1BA1F74C0(v25, &qword_1ED5AF328, v42);
    (*(void (**)(char *, uint64_t))(v63 + 8))(v36, v45);
    sub_1BA1B4A5C(v60, v59);
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v62);
}

uint64_t sub_1BA1F5A40(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  void *v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t *v22;
  uint64_t v23;
  void *v24;
  Swift::String v25;
  uint64_t v26;
  char isUniquelyReferenced_nonNull_native;
  char v28;
  unint64_t v29;
  uint64_t v30;
  _BOOL8 v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  BOOL v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t result;
  _QWORD v45[3];
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int64_t v50;
  _BYTE v51[2200];
  _QWORD *v52;
  _QWORD v53[276];
  char v54;

  v3 = MEMORY[0x1E0C80A78](a1);
  v4 = sub_1BA20279C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = v3;
  sub_1BA1B6EC0(0, &qword_1EF279A30);
  sub_1BA1F8A4C(0, &qword_1EF279A10, MEMORY[0x1E0DED048]);
  v9 = v8;
  sub_1BA1F758C();
  sub_1BA2028EC();
  if (v2)
    return (uint64_t)v1;
  v45[0] = 0;
  v45[1] = v9;
  v45[2] = v1;
  v46 = v7;
  v47 = v5;
  v48 = v4;
  v10 = 0;
  v11 = v53[0];
  v12 = *(_QWORD *)(v53[0] + 64);
  v49 = v53[0] + 64;
  v13 = 1 << *(_BYTE *)(v53[0] + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & v12;
  v1 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  v50 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v18 = v17 | (v10 << 6);
    }
    else
    {
      v19 = v10 + 1;
      if (__OFADD__(v10, 1))
        goto LABEL_42;
      if (v19 >= v50)
      {
LABEL_39:
        swift_release();
        return (uint64_t)v1;
      }
      v20 = *(_QWORD *)(v49 + 8 * v19);
      ++v10;
      if (!v20)
      {
        v10 = v19 + 1;
        if (v19 + 1 >= v50)
          goto LABEL_39;
        v20 = *(_QWORD *)(v49 + 8 * v10);
        if (!v20)
        {
          v10 = v19 + 2;
          if (v19 + 2 >= v50)
            goto LABEL_39;
          v20 = *(_QWORD *)(v49 + 8 * v10);
          if (!v20)
          {
            v10 = v19 + 3;
            if (v19 + 3 >= v50)
              goto LABEL_39;
            v20 = *(_QWORD *)(v49 + 8 * v10);
            if (!v20)
            {
              v21 = v19 + 4;
              if (v21 >= v50)
                goto LABEL_39;
              v20 = *(_QWORD *)(v49 + 8 * v21);
              if (!v20)
              {
                while (1)
                {
                  v10 = v21 + 1;
                  if (__OFADD__(v21, 1))
                    goto LABEL_43;
                  if (v10 >= v50)
                    goto LABEL_39;
                  v20 = *(_QWORD *)(v49 + 8 * v10);
                  ++v21;
                  if (v20)
                    goto LABEL_24;
                }
              }
              v10 = v21;
            }
          }
        }
      }
LABEL_24:
      v15 = (v20 - 1) & v20;
      v18 = __clz(__rbit64(v20)) + (v10 << 6);
    }
    v22 = (uint64_t *)(*(_QWORD *)(v11 + 48) + 16 * v18);
    v23 = *v22;
    v24 = (void *)v22[1];
    memcpy(v53, (const void *)(*(_QWORD *)(v11 + 56) + 2200 * v18), 0x898uLL);
    swift_bridgeObjectRetain();
    sub_1BA1F7648((uint64_t)v53, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_1BA1B6C08);
    v25._countAndFlagsBits = v23;
    v25._object = v24;
    EngagementUIPlacement.init(rawValue:)(v25);
    v26 = v51[0];
    if (v51[0] == 30)
    {
      swift_bridgeObjectRelease();
      sub_1BA1F7648((uint64_t)v53, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_1BA1B7750);
      sub_1BA202880();
      v39 = v46;
      sub_1BA202790();
      v1 = (_QWORD *)sub_1BA2027A8();
      swift_allocError();
      v41 = v40;
      v43 = v47;
      v42 = v48;
      (*(void (**)(uint64_t, char *, uint64_t))(v47 + 16))(v40, v39, v48);
      (*(void (**)(uint64_t, _QWORD, _QWORD *))(*(v1 - 1) + 104))(v41, *MEMORY[0x1E0DEC458], v1);
      swift_willThrow();
      (*(void (**)(char *, uint64_t))(v43 + 8))(v39, v42);
      swift_release();
      return (uint64_t)v1;
    }
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v52 = v1;
    v29 = sub_1BA1B9DB8(v26);
    v30 = v1[2];
    v31 = (v28 & 1) == 0;
    v32 = v30 + v31;
    if (__OFADD__(v30, v31))
      break;
    v33 = v28;
    if (v1[3] >= v32)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        if ((v28 & 1) != 0)
          goto LABEL_5;
      }
      else
      {
        sub_1BA1F8830();
        if ((v33 & 1) != 0)
          goto LABEL_5;
      }
    }
    else
    {
      sub_1BA1B708C(v32);
      v34 = sub_1BA1B9DB8(v26);
      if ((v33 & 1) != (v35 & 1))
        goto LABEL_44;
      v29 = v34;
      if ((v33 & 1) != 0)
      {
LABEL_5:
        v1 = v52;
        v16 = (void *)(v52[7] + 2200 * v29);
        memcpy(v51, v16, sizeof(v51));
        sub_1BA1F7648((uint64_t)v51, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_1BA1B7750);
        memcpy(v16, v53, 0x898uLL);
        goto LABEL_6;
      }
    }
    v1 = v52;
    v52[(v29 >> 6) + 8] |= 1 << v29;
    *(_BYTE *)(v1[6] + v29) = v26;
    memcpy((void *)(v1[7] + 2200 * v29), v53, 0x898uLL);
    v36 = v1[2];
    v37 = __OFADD__(v36, 1);
    v38 = v36 + 1;
    if (v37)
      goto LABEL_41;
    v1[2] = v38;
LABEL_6:
    swift_bridgeObjectRelease();
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  result = sub_1BA2029AC();
  __break(1u);
  return result;
}

uint64_t KeyedDecodingContainer.decode(_:forKey:)(uint64_t a1)
{
  _QWORD *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  void *v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t *v21;
  uint64_t v22;
  void *v23;
  Swift::String v24;
  uint64_t v25;
  char isUniquelyReferenced_nonNull_native;
  char v27;
  unint64_t v28;
  uint64_t v29;
  _BOOL8 v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  BOOL v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t result;
  _QWORD v44[4];
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int64_t v49;
  _BYTE v50[2200];
  _QWORD v51[276];
  _QWORD *v52;

  MEMORY[0x1E0C80A78](a1);
  v4 = v3;
  v5 = sub_1BA20279C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA1B6EC0(0, &qword_1EF279A30);
  sub_1BA1F758C();
  sub_1BA2028EC();
  v9 = v2;
  if (v2)
    return (uint64_t)v1;
  v44[1] = 0;
  v44[2] = v4;
  v44[3] = v1;
  v45 = v8;
  v46 = v6;
  v47 = v5;
  v10 = v51[0];
  v11 = *(_QWORD *)(v51[0] + 64);
  v48 = v51[0] + 64;
  v12 = 1 << *(_BYTE *)(v51[0] + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & v11;
  v1 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  v49 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v17 = v16 | (v9 << 6);
    }
    else
    {
      v18 = v9 + 1;
      if (__OFADD__(v9, 1))
        goto LABEL_40;
      if (v18 >= v49)
      {
LABEL_37:
        swift_release();
        return (uint64_t)v1;
      }
      v19 = *(_QWORD *)(v48 + 8 * v18);
      ++v9;
      if (!v19)
      {
        v9 = v18 + 1;
        if (v18 + 1 >= v49)
          goto LABEL_37;
        v19 = *(_QWORD *)(v48 + 8 * v9);
        if (!v19)
        {
          v9 = v18 + 2;
          if (v18 + 2 >= v49)
            goto LABEL_37;
          v19 = *(_QWORD *)(v48 + 8 * v9);
          if (!v19)
          {
            v20 = v18 + 3;
            if (v20 >= v49)
              goto LABEL_37;
            v19 = *(_QWORD *)(v48 + 8 * v20);
            if (!v19)
            {
              while (1)
              {
                v9 = v20 + 1;
                if (__OFADD__(v20, 1))
                  goto LABEL_41;
                if (v9 >= v49)
                  goto LABEL_37;
                v19 = *(_QWORD *)(v48 + 8 * v9);
                ++v20;
                if (v19)
                  goto LABEL_22;
              }
            }
            v9 = v20;
          }
        }
      }
LABEL_22:
      v14 = (v19 - 1) & v19;
      v17 = __clz(__rbit64(v19)) + (v9 << 6);
    }
    v21 = (uint64_t *)(*(_QWORD *)(v10 + 48) + 16 * v17);
    v22 = *v21;
    v23 = (void *)v21[1];
    memcpy(v51, (const void *)(*(_QWORD *)(v10 + 56) + 2200 * v17), 0x898uLL);
    swift_bridgeObjectRetain();
    sub_1BA1F7648((uint64_t)v51, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_1BA1B6C08);
    v24._countAndFlagsBits = v22;
    v24._object = v23;
    EngagementUIPlacement.init(rawValue:)(v24);
    v25 = v50[0];
    if (v50[0] == 30)
    {
      swift_bridgeObjectRelease();
      sub_1BA1F7648((uint64_t)v51, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_1BA1B7750);
      sub_1BA202880();
      v38 = v45;
      sub_1BA202790();
      v1 = (_QWORD *)sub_1BA2027A8();
      swift_allocError();
      v40 = v39;
      v42 = v46;
      v41 = v47;
      (*(void (**)(uint64_t, char *, uint64_t))(v46 + 16))(v39, v38, v47);
      (*(void (**)(uint64_t, _QWORD, _QWORD *))(*(v1 - 1) + 104))(v40, *MEMORY[0x1E0DEC458], v1);
      swift_willThrow();
      (*(void (**)(char *, uint64_t))(v42 + 8))(v38, v41);
      swift_release();
      return (uint64_t)v1;
    }
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v52 = v1;
    v28 = sub_1BA1B9DB8(v25);
    v29 = v1[2];
    v30 = (v27 & 1) == 0;
    v31 = v29 + v30;
    if (__OFADD__(v29, v30))
      break;
    v32 = v27;
    if (v1[3] >= v31)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        if ((v27 & 1) != 0)
          goto LABEL_5;
      }
      else
      {
        sub_1BA1F8830();
        if ((v32 & 1) != 0)
          goto LABEL_5;
      }
    }
    else
    {
      sub_1BA1B708C(v31);
      v33 = sub_1BA1B9DB8(v25);
      if ((v32 & 1) != (v34 & 1))
        goto LABEL_42;
      v28 = v33;
      if ((v32 & 1) != 0)
      {
LABEL_5:
        v1 = v52;
        v15 = (void *)(v52[7] + 2200 * v28);
        memcpy(v50, v15, sizeof(v50));
        sub_1BA1F7648((uint64_t)v50, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_1BA1B7750);
        memcpy(v15, v51, 0x898uLL);
        goto LABEL_6;
      }
    }
    v1 = v52;
    v52[(v28 >> 6) + 8] |= 1 << v28;
    *(_BYTE *)(v1[6] + v28) = v25;
    memcpy((void *)(v1[7] + 2200 * v28), v51, 0x898uLL);
    v35 = v1[2];
    v36 = __OFADD__(v35, 1);
    v37 = v35 + 1;
    if (v36)
      goto LABEL_39;
    v1[2] = v37;
LABEL_6:
    swift_bridgeObjectRelease();
  }
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  result = sub_1BA2029AC();
  __break(1u);
  return result;
}

double EngagementUpsellTrigger.duration.getter()
{
  uint64_t v0;

  return *(double *)(v0 + *(int *)(type metadata accessor for EngagementUpsellTrigger() + 24));
}

uint64_t EngagementUpsellTrigger.condition.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for EngagementUpsellTrigger() + 48));
  *a1 = v3;
  return sub_1BA1F8A34(v3);
}

uint64_t EngagementUpsellTrigger.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t v12;
  char v13;
  uint64_t v14;

  v3 = v1;
  sub_1BA1F8A4C(0, &qword_1EF279A48, MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA1F7504();
  sub_1BA202A30();
  LOBYTE(v14) = 0;
  sub_1BA202400();
  sub_1BA1F8AA8(&qword_1EF279A50, MEMORY[0x1E0DB4DD8]);
  sub_1BA202970();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for EngagementUpsellTrigger();
    LOBYTE(v14) = 1;
    sub_1BA202970();
    LOBYTE(v14) = 2;
    sub_1BA202958();
    LOBYTE(v14) = 3;
    sub_1BA202964();
    LOBYTE(v14) = 4;
    sub_1BA202928();
    LOBYTE(v14) = 5;
    sub_1BA202928();
    v14 = *(_QWORD *)(v3 + v10[13]);
    v13 = 6;
    sub_1BA1B76EC(0, &qword_1EF279A58, (uint64_t)&type metadata for EngagementUpsellPlacement, (uint64_t (*)(uint64_t, ValueMetadata *, uint64_t, unint64_t))MEMORY[0x1E0DEA048]);
    sub_1BA1F8AE8();
    sub_1BA202970();
    LOBYTE(v14) = *(_BYTE *)(v3 + v10[10]);
    v13 = 7;
    sub_1BA1F8BF0();
    sub_1BA202970();
    LOBYTE(v14) = 8;
    sub_1BA202964();
    v14 = *(_QWORD *)(v3 + v10[12]);
    v13 = 9;
    sub_1BA1E90B8();
    sub_1BA202934();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1BA1F6720@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return EngagementUpsellTrigger.init(from:)(a1, a2);
}

uint64_t sub_1BA1F6734(_QWORD *a1)
{
  return EngagementUpsellTrigger.encode(to:)(a1);
}

uint64_t sub_1BA1F6748(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;

  v3 = a1;
  v4 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    v10 = sub_1BA202580();
    v11 = v10 + (v4 << 16);
    v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4)
      v13 = v12;
    return v13 | 4;
  }
  else
  {
    v5 = MEMORY[0x1BCCD6E20](15, a1 >> 16);
    v6 = v5 + (v4 << 16);
    v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4)
      v8 = v7;
    return v8 | 8;
  }
}

uint64_t sub_1BA1F67C0(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 24);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return ((_DWORD)v1 - 1) & ~(((int)v1 - 1) >> 31);
}

uint64_t sub_1BA1F67DC(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _OWORD v37[2];
  __int128 v38;
  __int128 v39;
  uint64_t v40;

  v3 = v2;
  v5 = *v2;
  sub_1BA1C2858(0, (unint64_t *)&qword_1ED5AF740);
  v6 = sub_1BA202838();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_41;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  v12 = v6 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v14 << 6);
      goto LABEL_22;
    }
    v21 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v21 >= v11)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v36 + 8 * v21);
    ++v14;
    if (!v23)
    {
      v14 = v21 + 1;
      if (v21 + 1 >= v11)
        goto LABEL_34;
      v23 = *(_QWORD *)(v36 + 8 * v14);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v11)
        {
LABEL_34:
          swift_release();
          if ((a2 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v23 = *(_QWORD *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v14 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_43;
            if (v14 >= v11)
              goto LABEL_34;
            v23 = *(_QWORD *)(v36 + 8 * v14);
            ++v24;
            if (v23)
              goto LABEL_21;
          }
        }
        v14 = v24;
      }
    }
LABEL_21:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v14 << 6);
LABEL_22:
    v25 = *(_QWORD *)(v5 + 48) + 40 * v20;
    if ((a2 & 1) != 0)
    {
      v26 = *(_OWORD *)v25;
      v27 = *(_OWORD *)(v25 + 16);
      v40 = *(_QWORD *)(v25 + 32);
      v38 = v26;
      v39 = v27;
      sub_1BA1B43D0((_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v20), v37);
    }
    else
    {
      sub_1BA1CEC4C(v25, (uint64_t)&v38);
      sub_1BA1B9D7C(*(_QWORD *)(v5 + 56) + 32 * v20, (uint64_t)v37);
    }
    result = sub_1BA202724();
    v28 = -1 << *(_BYTE *)(v7 + 32);
    v29 = result & ~v28;
    v30 = v29 >> 6;
    if (((-1 << v29) & ~*(_QWORD *)(v12 + 8 * (v29 >> 6))) != 0)
    {
      v15 = __clz(__rbit64((-1 << v29) & ~*(_QWORD *)(v12 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v31 = 0;
      v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v33 = v30 == v32;
        if (v30 == v32)
          v30 = 0;
        v31 |= v33;
        v34 = *(_QWORD *)(v12 + 8 * v30);
      }
      while (v34 == -1);
      v15 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    v16 = *(_QWORD *)(v7 + 48) + 40 * v15;
    v17 = v38;
    v18 = v39;
    *(_QWORD *)(v16 + 32) = v40;
    *(_OWORD *)v16 = v17;
    *(_OWORD *)(v16 + 16) = v18;
    result = (uint64_t)sub_1BA1B43D0(v37, (_OWORD *)(*(_QWORD *)(v7 + 56) + 32 * v15));
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v22 = (_QWORD *)(v5 + 64);
  if ((a2 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v35 = 1 << *(_BYTE *)(v5 + 32);
  if (v35 >= 64)
    bzero(v22, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v35;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1BA1F6B10(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  void *v31;
  char v32;
  id v33;
  uint64_t v34;
  uint64_t *v35;
  int64_t v36;
  uint64_t v37;
  char v38;

  v3 = v2;
  v5 = *v2;
  sub_1BA1B76EC(0, &qword_1ED5AF738, (uint64_t)&type metadata for EngagementRequest, (uint64_t (*)(uint64_t, ValueMetadata *, uint64_t, unint64_t))MEMORY[0x1E0DECD58]);
  v38 = a2;
  v6 = sub_1BA202838();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v37 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v35 = v2;
  v36 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v36)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v37 + 8 * v21);
    ++v13;
    if (!v23)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v36)
        goto LABEL_33;
      v23 = *(_QWORD *)(v37 + 8 * v13);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v36)
        {
LABEL_33:
          swift_release();
          v3 = v35;
          if ((v38 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = *(_QWORD *)(v37 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v13 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_42;
            if (v13 >= v36)
              goto LABEL_33;
            v23 = *(_QWORD *)(v37 + 8 * v13);
            ++v24;
            if (v23)
              goto LABEL_30;
          }
        }
        v13 = v24;
      }
    }
LABEL_30:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    v29 = *(_BYTE *)(*(_QWORD *)(v5 + 48) + v20);
    v30 = *(_QWORD *)(v5 + 56) + 16 * v20;
    v31 = *(void **)v30;
    v32 = *(_BYTE *)(v30 + 8);
    if ((v38 & 1) == 0)
      v33 = v31;
    sub_1BA202A00();
    EngagementUIPlacement.rawValue.getter();
    sub_1BA202538();
    swift_bridgeObjectRelease();
    result = sub_1BA202A18();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v27 = v16 == v26;
        if (v16 == v26)
          v16 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    *(_BYTE *)(*(_QWORD *)(v7 + 48) + v17) = v29;
    v18 = *(_QWORD *)(v7 + 56) + 16 * v17;
    *(_QWORD *)v18 = v31;
    *(_BYTE *)(v18 + 8) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v35;
  v22 = (_QWORD *)(v5 + 64);
  if ((v38 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v34 = 1 << *(_BYTE *)(v5 + 32);
  if (v34 >= 64)
    bzero(v22, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v34;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1BA1F6E4C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  int64_t v33;
  uint64_t v34;

  v3 = v2;
  v5 = *v2;
  sub_1BA1FA178();
  v6 = a2;
  v7 = sub_1BA202838();
  v8 = v7;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v9 = 1 << *(_BYTE *)(v5 + 32);
  v34 = v5 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v5 + 64);
  v32 = v2;
  v33 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v11)
    {
      v19 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v20 = v19 | (v14 << 6);
      goto LABEL_31;
    }
    v21 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v33)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v34 + 8 * v21);
    ++v14;
    if (!v23)
    {
      v14 = v21 + 1;
      if (v21 + 1 >= v33)
        goto LABEL_33;
      v23 = *(_QWORD *)(v34 + 8 * v14);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v33)
        {
LABEL_33:
          swift_release();
          v3 = v32;
          if ((v6 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = *(_QWORD *)(v34 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v14 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_42;
            if (v14 >= v33)
              goto LABEL_33;
            v23 = *(_QWORD *)(v34 + 8 * v14);
            ++v24;
            if (v23)
              goto LABEL_30;
          }
        }
        v14 = v24;
      }
    }
LABEL_30:
    v11 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v14 << 6);
LABEL_31:
    v29 = *(_BYTE *)(*(_QWORD *)(v5 + 48) + v20);
    v30 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v20);
    if ((v6 & 1) == 0)
      swift_bridgeObjectRetain();
    sub_1BA202A00();
    EngagementUIPlacement.rawValue.getter();
    sub_1BA202538();
    swift_bridgeObjectRelease();
    result = sub_1BA202A18();
    v15 = -1 << *(_BYTE *)(v8 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v27 = v17 == v26;
        if (v17 == v26)
          v17 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v28 == -1);
      v18 = __clz(__rbit64(~v28)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    *(_BYTE *)(*(_QWORD *)(v8 + 48) + v18) = v29;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v18) = v30;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release();
  v3 = v32;
  v22 = (_QWORD *)(v5 + 64);
  if ((v6 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v31 = 1 << *(_BYTE *)(v5 + 32);
  if (v31 >= 64)
    bzero(v22, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v31;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v8;
  return result;
}

uint64_t sub_1BA1F7158(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  void *v30;
  void *v31;
  uint64_t v32;
  char v33;
  id v34;
  uint64_t v35;
  int64_t v36;
  _QWORD *v37;
  uint64_t i;
  char v39;
  char v40;

  v3 = v2;
  v5 = *v2;
  sub_1BA1B76EC(0, &qword_1ED5AF238, (uint64_t)&type metadata for EngagementInlineViewManager.Placement, (uint64_t (*)(uint64_t, ValueMetadata *, uint64_t, unint64_t))MEMORY[0x1E0DECD58]);
  v39 = a2;
  v6 = sub_1BA202838();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v37 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v36 = (unint64_t)(v8 + 63) >> 6;
    v11 = v6 + 64;
    result = swift_retain();
    v13 = 0;
    for (i = v5; ; v5 = i)
    {
      if (v10)
      {
        v19 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v20 = v19 | (v13 << 6);
      }
      else
      {
        v21 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v21 >= v36)
          goto LABEL_33;
        v22 = v37[v21];
        ++v13;
        if (!v22)
        {
          v13 = v21 + 1;
          if (v21 + 1 >= v36)
            goto LABEL_33;
          v22 = v37[v13];
          if (!v22)
          {
            v23 = v21 + 2;
            if (v23 >= v36)
            {
LABEL_33:
              swift_release();
              v3 = v2;
              if ((v39 & 1) != 0)
              {
                v35 = 1 << *(_BYTE *)(v5 + 32);
                if (v35 >= 64)
                  bzero(v37, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v37 = -1 << v35;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v22 = v37[v23];
            if (!v22)
            {
              while (1)
              {
                v13 = v23 + 1;
                if (__OFADD__(v23, 1))
                  goto LABEL_40;
                if (v13 >= v36)
                  goto LABEL_33;
                v22 = v37[v13];
                ++v23;
                if (v22)
                  goto LABEL_30;
              }
            }
            v13 = v23;
          }
        }
LABEL_30:
        v10 = (v22 - 1) & v22;
        v20 = __clz(__rbit64(v22)) + (v13 << 6);
      }
      v28 = *(_BYTE *)(*(_QWORD *)(v5 + 48) + v20);
      v29 = *(_QWORD *)(v5 + 56) + 40 * v20;
      v40 = *(_BYTE *)v29;
      v30 = *(void **)(v29 + 8);
      v31 = *(void **)(v29 + 16);
      v32 = *(_QWORD *)(v29 + 24);
      v33 = *(_BYTE *)(v29 + 32);
      if ((v39 & 1) == 0)
      {
        v34 = v30;
        sub_1BA1C2628(v31, v32, v33);
      }
      sub_1BA202A00();
      EngagementUIPlacement.rawValue.getter();
      sub_1BA202538();
      swift_bridgeObjectRelease();
      result = sub_1BA202A18();
      v14 = -1 << *(_BYTE *)(v7 + 32);
      v15 = result & ~v14;
      v16 = v15 >> 6;
      if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v24 = 0;
        v25 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v26 = v16 == v25;
          if (v16 == v25)
            v16 = 0;
          v24 |= v26;
          v27 = *(_QWORD *)(v11 + 8 * v16);
        }
        while (v27 == -1);
        v17 = __clz(__rbit64(~v27)) + (v16 << 6);
      }
      *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      *(_BYTE *)(*(_QWORD *)(v7 + 48) + v17) = v28;
      v18 = *(_QWORD *)(v7 + 56) + 40 * v17;
      *(_BYTE *)v18 = v40;
      *(_QWORD *)(v18 + 8) = v30;
      *(_QWORD *)(v18 + 16) = v31;
      *(_QWORD *)(v18 + 24) = v32;
      *(_BYTE *)(v18 + 32) = v33;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1BA1F74C0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4;

  sub_1BA1B9050(0, a2, a3, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

unint64_t sub_1BA1F7504()
{
  unint64_t result;

  result = qword_1EF279A18;
  if (!qword_1EF279A18)
  {
    result = MEMORY[0x1BCCD76CC](&unk_1BA205F4C, &type metadata for EngagementUpsellTrigger.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF279A18);
  }
  return result;
}

unint64_t sub_1BA1F7548()
{
  unint64_t result;

  result = qword_1EF279A28;
  if (!qword_1EF279A28)
  {
    result = MEMORY[0x1BCCD76CC](&protocol conformance descriptor for EngagementUpsellBannerPaidEligibility, &type metadata for EngagementUpsellBannerPaidEligibility);
    atomic_store(result, (unint64_t *)&qword_1EF279A28);
  }
  return result;
}

unint64_t sub_1BA1F758C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[2];

  result = qword_1EF279A38;
  if (!qword_1EF279A38)
  {
    sub_1BA1B6EC0(255, &qword_1EF279A30);
    v2 = v1;
    v3 = sub_1BA1F7604();
    v4[0] = MEMORY[0x1E0DEA9A0];
    v4[1] = v3;
    result = MEMORY[0x1BCCD76CC](MEMORY[0x1E0DEA0D8], v2, v4);
    atomic_store(result, (unint64_t *)&qword_1EF279A38);
  }
  return result;
}

unint64_t sub_1BA1F7604()
{
  unint64_t result;

  result = qword_1EF279A40;
  if (!qword_1EF279A40)
  {
    result = MEMORY[0x1BCCD76CC](&protocol conformance descriptor for EngagementUpsellPlacement, &type metadata for EngagementUpsellPlacement);
    atomic_store(result, (unint64_t *)&qword_1EF279A40);
  }
  return result;
}

uint64_t sub_1BA1F7648(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  uint64_t v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  uint64_t v77;
  __int128 v78;
  __int128 v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  __int128 v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  __int128 v90;
  __int128 v91;
  uint64_t v92;
  __int128 v93;
  __int128 v94;
  uint64_t v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  uint64_t v111;
  __int128 v112;
  uint64_t v113;
  uint64_t v114;
  __int128 v115;
  uint64_t v116;
  uint64_t v117;
  __int128 v118;
  uint64_t v119;
  __int128 v120;
  uint64_t v121;
  uint64_t v122;
  __int128 v123;
  __int128 v124;
  __int128 v125;
  __int128 v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  __int128 v135;
  __int128 v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;

  v146 = *(_QWORD *)(a1 + 328);
  v143 = *(_QWORD *)(a1 + 344);
  v144 = *(_QWORD *)(a1 + 336);
  v141 = *(_QWORD *)(a1 + 360);
  v142 = *(_QWORD *)(a1 + 352);
  v139 = *(_QWORD *)(a1 + 376);
  v140 = *(_QWORD *)(a1 + 368);
  v138 = *(_QWORD *)(a1 + 384);
  v135 = *(_OWORD *)(a1 + 392);
  v126 = *(_OWORD *)(a1 + 408);
  v124 = *(_OWORD *)(a1 + 424);
  v123 = *(_OWORD *)(a1 + 440);
  v120 = *(_OWORD *)(a1 + 456);
  v115 = *(_OWORD *)(a1 + 472);
  v110 = *(_OWORD *)(a1 + 488);
  v109 = *(_OWORD *)(a1 + 504);
  v107 = *(_OWORD *)(a1 + 520);
  v105 = *(_OWORD *)(a1 + 536);
  v103 = *(_OWORD *)(a1 + 552);
  v102 = *(_OWORD *)(a1 + 568);
  v100 = *(_OWORD *)(a1 + 584);
  v98 = *(_OWORD *)(a1 + 600);
  v96 = *(_OWORD *)(a1 + 616);
  v95 = *(_QWORD *)(a1 + 632);
  v134 = *(_QWORD *)(a1 + 640);
  v133 = *(_QWORD *)(a1 + 648);
  v132 = *(_QWORD *)(a1 + 656);
  v131 = *(_QWORD *)(a1 + 664);
  v130 = *(_QWORD *)(a1 + 672);
  v129 = *(_QWORD *)(a1 + 680);
  v128 = *(_QWORD *)(a1 + 688);
  v127 = *(_QWORD *)(a1 + 696);
  v80 = *(_QWORD *)(a1 + 944);
  v137 = *(_QWORD *)(a1 + 952);
  v118 = *(_OWORD *)(a1 + 1016);
  v112 = *(_OWORD *)(a1 + 1032);
  v108 = *(_OWORD *)(a1 + 1048);
  v106 = *(_OWORD *)(a1 + 1064);
  v104 = *(_OWORD *)(a1 + 1080);
  v101 = *(_OWORD *)(a1 + 1096);
  v99 = *(_OWORD *)(a1 + 1112);
  v97 = *(_OWORD *)(a1 + 1128);
  v94 = *(_OWORD *)(a1 + 1144);
  v93 = *(_OWORD *)(a1 + 1160);
  v91 = *(_OWORD *)(a1 + 1176);
  v90 = *(_OWORD *)(a1 + 1192);
  v85 = *(_OWORD *)(a1 + 1208);
  v79 = *(_OWORD *)(a1 + 1224);
  v78 = *(_OWORD *)(a1 + 1240);
  v136 = *(_OWORD *)(a1 + 1640);
  v125 = *(_OWORD *)(a1 + 1656);
  v4 = *(_QWORD *)(a1 + 960);
  v5 = *(_QWORD *)(a1 + 968);
  v6 = *(_QWORD *)(a1 + 976);
  v7 = *(_QWORD *)(a1 + 984);
  v8 = *(_QWORD *)(a1 + 992);
  v9 = *(_QWORD *)(a1 + 1000);
  v10 = *(_QWORD *)(a1 + 1008);
  v11 = *(_QWORD *)(a1 + 1256);
  v81 = *(_QWORD *)(a1 + 1264);
  v82 = *(_QWORD *)(a1 + 1272);
  v83 = *(_QWORD *)(a1 + 1280);
  v84 = *(_QWORD *)(a1 + 1288);
  v86 = *(_QWORD *)(a1 + 1296);
  v87 = *(_QWORD *)(a1 + 1304);
  v88 = *(_QWORD *)(a1 + 1312);
  v89 = *(_QWORD *)(a1 + 1320);
  v60 = *(_QWORD *)(a1 + 1568);
  v111 = *(_QWORD *)(a1 + 1576);
  v113 = *(_QWORD *)(a1 + 1584);
  v114 = *(_QWORD *)(a1 + 1592);
  v116 = *(_QWORD *)(a1 + 1600);
  v117 = *(_QWORD *)(a1 + 1608);
  v119 = *(_QWORD *)(a1 + 1616);
  v121 = *(_QWORD *)(a1 + 1624);
  v122 = *(_QWORD *)(a1 + 1632);
  v77 = *(_QWORD *)(a1 + 1880);
  v145 = *(_QWORD *)(a1 + 1888);
  v147 = *(_QWORD *)(a1 + 1896);
  v148 = *(_QWORD *)(a1 + 1904);
  v149 = *(_QWORD *)(a1 + 1912);
  v150 = *(_QWORD *)(a1 + 1920);
  v151 = *(_QWORD *)(a1 + 1928);
  v152 = *(_QWORD *)(a1 + 1936);
  v153 = *(_QWORD *)(a1 + 1944);
  v92 = *(_QWORD *)(a1 + 2192);
  v75 = *(_OWORD *)(a1 + 1672);
  v73 = *(_OWORD *)(a1 + 1688);
  v71 = *(_OWORD *)(a1 + 1704);
  v69 = *(_OWORD *)(a1 + 1720);
  v67 = *(_OWORD *)(a1 + 1736);
  v65 = *(_OWORD *)(a1 + 1752);
  v63 = *(_OWORD *)(a1 + 1768);
  v61 = *(_OWORD *)(a1 + 1784);
  v58 = *(_OWORD *)(a1 + 1800);
  v56 = *(_OWORD *)(a1 + 1816);
  v54 = *(_OWORD *)(a1 + 1832);
  v52 = *(_OWORD *)(a1 + 1848);
  v50 = *(_OWORD *)(a1 + 1864);
  v31 = *(_OWORD *)(a1 + 720);
  v32 = *(_OWORD *)(a1 + 704);
  v29 = *(_OWORD *)(a1 + 752);
  v30 = *(_OWORD *)(a1 + 736);
  v27 = *(_OWORD *)(a1 + 784);
  v28 = *(_OWORD *)(a1 + 768);
  v25 = *(_OWORD *)(a1 + 816);
  v26 = *(_OWORD *)(a1 + 800);
  v23 = *(_OWORD *)(a1 + 848);
  v24 = *(_OWORD *)(a1 + 832);
  v21 = *(_OWORD *)(a1 + 880);
  v22 = *(_OWORD *)(a1 + 864);
  v19 = *(_OWORD *)(a1 + 912);
  v20 = *(_OWORD *)(a1 + 896);
  v18 = *(_OWORD *)(a1 + 928);
  v46 = *(_OWORD *)(a1 + 1344);
  v47 = *(_OWORD *)(a1 + 1328);
  v44 = *(_OWORD *)(a1 + 1376);
  v45 = *(_OWORD *)(a1 + 1360);
  v42 = *(_OWORD *)(a1 + 1408);
  v43 = *(_OWORD *)(a1 + 1392);
  v40 = *(_OWORD *)(a1 + 1440);
  v41 = *(_OWORD *)(a1 + 1424);
  v38 = *(_OWORD *)(a1 + 1472);
  v39 = *(_OWORD *)(a1 + 1456);
  v36 = *(_OWORD *)(a1 + 1504);
  v37 = *(_OWORD *)(a1 + 1488);
  v34 = *(_OWORD *)(a1 + 1536);
  v35 = *(_OWORD *)(a1 + 1520);
  v33 = *(_OWORD *)(a1 + 1552);
  v76 = *(_OWORD *)(a1 + 1952);
  v74 = *(_OWORD *)(a1 + 1968);
  v72 = *(_OWORD *)(a1 + 1984);
  v70 = *(_OWORD *)(a1 + 2000);
  v68 = *(_OWORD *)(a1 + 2016);
  v66 = *(_OWORD *)(a1 + 2032);
  v64 = *(_OWORD *)(a1 + 2048);
  v62 = *(_OWORD *)(a1 + 2064);
  v59 = *(_OWORD *)(a1 + 2080);
  v57 = *(_OWORD *)(a1 + 2096);
  v55 = *(_OWORD *)(a1 + 2112);
  v53 = *(_OWORD *)(a1 + 2128);
  v51 = *(_OWORD *)(a1 + 2144);
  v48 = *(_OWORD *)(a1 + 2176);
  v49 = *(_OWORD *)(a1 + 2160);
  v16 = *(_OWORD *)(a1 + 288);
  v17 = *(_OWORD *)(a1 + 304);
  v14 = *(_OWORD *)(a1 + 256);
  v15 = *(_OWORD *)(a1 + 272);
  v13 = *(_OWORD *)(a1 + 224);
  a2(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144), *(_QWORD *)(a1 + 152), *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184),
    *(_QWORD *)(a1 + 192),
    *(_QWORD *)(a1 + 200),
    *(_QWORD *)(a1 + 208),
    *(_QWORD *)(a1 + 216),
    v13,
    *((_QWORD *)&v13 + 1),
    *(_QWORD *)(a1 + 240),
    *(_QWORD *)(a1 + 248),
    v14,
    *((_QWORD *)&v14 + 1),
    v15,
    *((_QWORD *)&v15 + 1),
    v16,
    *((_QWORD *)&v16 + 1),
    v17,
    *((_QWORD *)&v17 + 1),
    *(_QWORD *)(a1 + 320));
  a2(v146, v144, v143, v142, v141, v140, v139, v138, v135, *((_QWORD *)&v135 + 1), v126, *((_QWORD *)&v126 + 1), v124, *((_QWORD *)&v124 + 1), v123, *((_QWORD *)&v123 + 1), v120, *((_QWORD *)&v120 + 1), v115,
    *((_QWORD *)&v115 + 1),
    v110,
    *((_QWORD *)&v110 + 1),
    v109,
    *((_QWORD *)&v109 + 1),
    v107,
    *((_QWORD *)&v107 + 1),
    v105,
    *((_QWORD *)&v105 + 1),
    v103,
    *((_QWORD *)&v103 + 1),
    v102,
    *((_QWORD *)&v102 + 1),
    v100,
    *((_QWORD *)&v100 + 1),
    v98,
    *((_QWORD *)&v98 + 1),
    v96,
    *((_QWORD *)&v96 + 1),
    v95);
  a2(v134, v133, v132, v131, v130, v129, v128, v127, v32, *((_QWORD *)&v32 + 1), v31, *((_QWORD *)&v31 + 1), v30, *((_QWORD *)&v30 + 1), v29, *((_QWORD *)&v29 + 1), v28, *((_QWORD *)&v28 + 1), v27,
    *((_QWORD *)&v27 + 1),
    v26,
    *((_QWORD *)&v26 + 1),
    v25,
    *((_QWORD *)&v25 + 1),
    v24,
    *((_QWORD *)&v24 + 1),
    v23,
    *((_QWORD *)&v23 + 1),
    v22,
    *((_QWORD *)&v22 + 1),
    v21,
    *((_QWORD *)&v21 + 1),
    v20,
    *((_QWORD *)&v20 + 1),
    v19,
    *((_QWORD *)&v19 + 1),
    v18,
    *((_QWORD *)&v18 + 1),
    v80);
  a2(v137, v4, v5, v6, v7, v8, v9, v10, v118, *((_QWORD *)&v118 + 1), v112, *((_QWORD *)&v112 + 1), v108, *((_QWORD *)&v108 + 1), v106, *((_QWORD *)&v106 + 1), v104, *((_QWORD *)&v104 + 1), v101,
    *((_QWORD *)&v101 + 1),
    v99,
    *((_QWORD *)&v99 + 1),
    v97,
    *((_QWORD *)&v97 + 1),
    v94,
    *((_QWORD *)&v94 + 1),
    v93,
    *((_QWORD *)&v93 + 1),
    v91,
    *((_QWORD *)&v91 + 1),
    v90,
    *((_QWORD *)&v90 + 1),
    v85,
    *((_QWORD *)&v85 + 1),
    v79,
    *((_QWORD *)&v79 + 1),
    v78,
    *((_QWORD *)&v78 + 1),
    v11);
  a2(v81, v82, v83, v84, v86, v87, v88, v89, v47, *((_QWORD *)&v47 + 1), v46, *((_QWORD *)&v46 + 1), v45, *((_QWORD *)&v45 + 1), v44, *((_QWORD *)&v44 + 1), v43, *((_QWORD *)&v43 + 1), v42,
    *((_QWORD *)&v42 + 1),
    v41,
    *((_QWORD *)&v41 + 1),
    v40,
    *((_QWORD *)&v40 + 1),
    v39,
    *((_QWORD *)&v39 + 1),
    v38,
    *((_QWORD *)&v38 + 1),
    v37,
    *((_QWORD *)&v37 + 1),
    v36,
    *((_QWORD *)&v36 + 1),
    v35,
    *((_QWORD *)&v35 + 1),
    v34,
    *((_QWORD *)&v34 + 1),
    v33,
    *((_QWORD *)&v33 + 1),
    v60);
  a2(v111, v113, v114, v116, v117, v119, v121, v122, v136, *((_QWORD *)&v136 + 1), v125, *((_QWORD *)&v125 + 1), v75, *((_QWORD *)&v75 + 1), v73, *((_QWORD *)&v73 + 1), v71, *((_QWORD *)&v71 + 1), v69,
    *((_QWORD *)&v69 + 1),
    v67,
    *((_QWORD *)&v67 + 1),
    v65,
    *((_QWORD *)&v65 + 1),
    v63,
    *((_QWORD *)&v63 + 1),
    v61,
    *((_QWORD *)&v61 + 1),
    v58,
    *((_QWORD *)&v58 + 1),
    v56,
    *((_QWORD *)&v56 + 1),
    v54,
    *((_QWORD *)&v54 + 1),
    v52,
    *((_QWORD *)&v52 + 1),
    v50,
    *((_QWORD *)&v50 + 1),
    v77);
  a2(v145, v147, v148, v149, v150, v151, v152, v153, v76, *((_QWORD *)&v76 + 1), v74, *((_QWORD *)&v74 + 1), v72, *((_QWORD *)&v72 + 1), v70, *((_QWORD *)&v70 + 1), v68, *((_QWORD *)&v68 + 1), v66,
    *((_QWORD *)&v66 + 1),
    v64,
    *((_QWORD *)&v64 + 1),
    v62,
    *((_QWORD *)&v62 + 1),
    v59,
    *((_QWORD *)&v59 + 1),
    v57,
    *((_QWORD *)&v57 + 1),
    v55,
    *((_QWORD *)&v55 + 1),
    v53,
    *((_QWORD *)&v53 + 1),
    v51,
    *((_QWORD *)&v51 + 1),
    v49,
    *((_QWORD *)&v49 + 1),
    v48,
    *((_QWORD *)&v48 + 1),
    v92);
  return a1;
}

uint64_t sub_1BA1F7EC4(unint64_t a1, char a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(_BYTE *)(a4[6] + a1) = a2;
  v7 = a4[7];
  v8 = sub_1BA202184();
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v7 + *(_QWORD *)(*(_QWORD *)(v8 - 8) + 72) * a1, a3, v8);
  v10 = a4[2];
  v11 = __OFADD__(v10, 1);
  v12 = v10 + 1;
  if (v11)
    __break(1u);
  else
    a4[2] = v12;
  return result;
}

_OWORD *sub_1BA1F7F50(unint64_t a1, uint64_t a2, _OWORD *a3, _QWORD *a4)
{
  uint64_t v5;
  __int128 v6;
  _OWORD *result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v5 = a4[6] + 40 * a1;
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)v5 = *(_OWORD *)a2;
  *(_OWORD *)(v5 + 16) = v6;
  *(_QWORD *)(v5 + 32) = *(_QWORD *)(a2 + 32);
  result = sub_1BA1B43D0(a3, (_OWORD *)(a4[7] + 32 * a1));
  v8 = a4[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a4[2] = v10;
  return result;
}

unint64_t sub_1BA1F7FC8(unint64_t result, char a2, uint64_t a3, char a4, _QWORD *a5)
{
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a5[(result >> 6) + 8] |= 1 << result;
  *(_BYTE *)(a5[6] + result) = a2;
  v5 = a5[7] + 16 * result;
  *(_QWORD *)v5 = a3;
  *(_BYTE *)(v5 + 8) = a4 & 1;
  v6 = a5[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a5[2] = v8;
  return result;
}

unint64_t sub_1BA1F8018(unint64_t result, char a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v4;
  BOOL v5;
  uint64_t v6;

  a4[(result >> 6) + 8] |= 1 << result;
  *(_BYTE *)(a4[6] + result) = a2;
  *(_QWORD *)(a4[7] + 8 * result) = a3;
  v4 = a4[2];
  v5 = __OFADD__(v4, 1);
  v6 = v4 + 1;
  if (v5)
    __break(1u);
  else
    a4[2] = v6;
  return result;
}

unint64_t sub_1BA1F805C(unint64_t result, char a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a4[(result >> 6) + 8] |= 1 << result;
  *(_BYTE *)(a4[6] + result) = a2;
  v4 = a4[7] + 40 * result;
  v5 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)v4 = *(_OWORD *)a3;
  *(_OWORD *)(v4 + 16) = v5;
  *(_BYTE *)(v4 + 32) = *(_BYTE *)(a3 + 32);
  v6 = a4[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a4[2] = v8;
  return result;
}

void *sub_1BA1F80B4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  char v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  int64_t v25;

  v1 = sub_1BA202184();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78]();
  v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA1B5B84();
  v23 = v0;
  v5 = *v0;
  v6 = sub_1BA20282C();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v23 = v7;
    return result;
  }
  result = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v24 = v5 + 64;
  v25 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v16 = v15 | (v11 << 6);
      goto LABEL_12;
    }
    v19 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v25)
      goto LABEL_26;
    v20 = *(_QWORD *)(v24 + 8 * v19);
    ++v11;
    if (!v20)
    {
      v11 = v19 + 1;
      if (v19 + 1 >= v25)
        goto LABEL_26;
      v20 = *(_QWORD *)(v24 + 8 * v11);
      if (!v20)
        break;
    }
LABEL_25:
    v14 = (v20 - 1) & v20;
    v16 = __clz(__rbit64(v20)) + (v11 << 6);
LABEL_12:
    v17 = *(_BYTE *)(*(_QWORD *)(v5 + 48) + v16);
    v18 = *(_QWORD *)(v2 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(_QWORD *)(v5 + 56) + v18, v1);
    *(_BYTE *)(*(_QWORD *)(v7 + 48) + v16) = v17;
    result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(_QWORD *)(v7 + 56) + v18, v4, v1);
  }
  v21 = v19 + 2;
  if (v21 >= v25)
    goto LABEL_26;
  v20 = *(_QWORD *)(v24 + 8 * v21);
  if (v20)
  {
    v11 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v11 >= v25)
      goto LABEL_26;
    v20 = *(_QWORD *)(v24 + 8 * v11);
    ++v21;
    if (v20)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1BA1F82CC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  _OWORD v24[2];
  _OWORD v25[2];
  uint64_t v26;

  v1 = v0;
  sub_1BA1C2858(0, (unint64_t *)&qword_1ED5AF740);
  v2 = *v0;
  v3 = sub_1BA20282C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v21 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v13)
      goto LABEL_26;
    v22 = *(_QWORD *)(v6 + 8 * v21);
    ++v9;
    if (!v22)
    {
      v9 = v21 + 1;
      if (v21 + 1 >= v13)
        goto LABEL_26;
      v22 = *(_QWORD *)(v6 + 8 * v9);
      if (!v22)
        break;
    }
LABEL_25:
    v12 = (v22 - 1) & v22;
    v15 = __clz(__rbit64(v22)) + (v9 << 6);
LABEL_12:
    v16 = 40 * v15;
    sub_1BA1CEC4C(*(_QWORD *)(v2 + 48) + 40 * v15, (uint64_t)v25);
    v17 = 32 * v15;
    sub_1BA1B9D7C(*(_QWORD *)(v2 + 56) + v17, (uint64_t)v24);
    v18 = *(_QWORD *)(v4 + 48) + v16;
    v19 = v25[0];
    v20 = v25[1];
    *(_QWORD *)(v18 + 32) = v26;
    *(_OWORD *)v18 = v19;
    *(_OWORD *)(v18 + 16) = v20;
    result = sub_1BA1B43D0(v24, (_OWORD *)(*(_QWORD *)(v4 + 56) + v17));
  }
  v23 = v21 + 2;
  if (v23 >= v13)
    goto LABEL_26;
  v22 = *(_QWORD *)(v6 + 8 * v23);
  if (v22)
  {
    v9 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v22 = *(_QWORD *)(v6 + 8 * v9);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1BA1F84D0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;

  v1 = v0;
  sub_1BA1B76EC(0, &qword_1ED5AF738, (uint64_t)&type metadata for EngagementRequest, (uint64_t (*)(uint64_t, ValueMetadata *, uint64_t, unint64_t))MEMORY[0x1E0DECD58]);
  v2 = *v0;
  v3 = sub_1BA20282C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v13)
      goto LABEL_26;
    v20 = *(_QWORD *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      v9 = v19 + 1;
      if (v19 + 1 >= v13)
        goto LABEL_26;
      v20 = *(_QWORD *)(v6 + 8 * v9);
      if (!v20)
        break;
    }
LABEL_25:
    v12 = (v20 - 1) & v20;
    v15 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_12:
    v16 = *(_QWORD *)(v2 + 56) + 16 * v15;
    v17 = *(void **)v16;
    LOBYTE(v16) = *(_BYTE *)(v16 + 8);
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
    v18 = *(_QWORD *)(v4 + 56) + 16 * v15;
    *(_QWORD *)v18 = v17;
    *(_BYTE *)(v18 + 8) = v16;
    result = v17;
  }
  v21 = v19 + 2;
  if (v21 >= v13)
    goto LABEL_26;
  v20 = *(_QWORD *)(v6 + 8 * v21);
  if (v20)
  {
    v9 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v20 = *(_QWORD *)(v6 + 8 * v9);
    ++v21;
    if (v20)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1BA1F8694()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;

  v1 = v0;
  sub_1BA1FA178();
  v2 = *v0;
  v3 = sub_1BA20282C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v13)
        goto LABEL_26;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
        break;
    }
LABEL_25:
    v12 = (v18 - 1) & v18;
    v15 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_12:
    v16 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * v15);
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v15) = v16;
    result = (void *)swift_bridgeObjectRetain();
  }
  v19 = v17 + 2;
  if (v19 >= v13)
    goto LABEL_26;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1BA1F8830()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  char v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t *v20;
  _BYTE __dst[2208];

  v1 = v0;
  sub_1BA1B76EC(0, &qword_1ED5AF568, (uint64_t)&type metadata for EngagementUpsellPlacement, (uint64_t (*)(uint64_t, ValueMetadata *, uint64_t, unint64_t))MEMORY[0x1E0DECD58]);
  v2 = *v0;
  v3 = sub_1BA20282C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v4;
    return result;
  }
  v20 = v1;
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v13)
        goto LABEL_26;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
        break;
    }
LABEL_25:
    v12 = (v18 - 1) & v18;
    v15 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_12:
    v16 = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
    memcpy(__dst, (const void *)(*(_QWORD *)(v2 + 56) + 2200 * v15), 0x898uLL);
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = v16;
    memcpy((void *)(*(_QWORD *)(v4 + 56) + 2200 * v15), __dst, 0x898uLL);
    result = (void *)sub_1BA1F7648((uint64_t)__dst, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_1BA1B6C08);
  }
  v19 = v17 + 2;
  if (v19 >= v13)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v20;
    goto LABEL_28;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1BA1F8A34(uint64_t result)
{
  if ((~result & 0xF000000000000007) != 0)
    return swift_retain();
  return result;
}

void sub_1BA1F8A4C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BA1F7504();
    v7 = a3(a1, &type metadata for EngagementUpsellTrigger.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1BA1F8AA8(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_1BA202400();
    result = MEMORY[0x1BCCD76CC](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1BA1F8AE8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_1EF279A60;
  if (!qword_1EF279A60)
  {
    sub_1BA1B76EC(255, &qword_1EF279A58, (uint64_t)&type metadata for EngagementUpsellPlacement, (uint64_t (*)(uint64_t, ValueMetadata *, uint64_t, unint64_t))MEMORY[0x1E0DEA048]);
    v2 = v1;
    v3[0] = sub_1BA1F8B68();
    v3[1] = sub_1BA1F8BAC();
    result = MEMORY[0x1BCCD76CC](MEMORY[0x1E0DEA0B8], v2, v3);
    atomic_store(result, (unint64_t *)&qword_1EF279A60);
  }
  return result;
}

unint64_t sub_1BA1F8B68()
{
  unint64_t result;

  result = qword_1EF279A68;
  if (!qword_1EF279A68)
  {
    result = MEMORY[0x1BCCD76CC](&protocol conformance descriptor for EngagementUIPlacement, &type metadata for EngagementUIPlacement);
    atomic_store(result, (unint64_t *)&qword_1EF279A68);
  }
  return result;
}

unint64_t sub_1BA1F8BAC()
{
  unint64_t result;

  result = qword_1EF279A70;
  if (!qword_1EF279A70)
  {
    result = MEMORY[0x1BCCD76CC](&protocol conformance descriptor for EngagementUpsellPlacement, &type metadata for EngagementUpsellPlacement);
    atomic_store(result, (unint64_t *)&qword_1EF279A70);
  }
  return result;
}

unint64_t sub_1BA1F8BF0()
{
  unint64_t result;

  result = qword_1EF279A78;
  if (!qword_1EF279A78)
  {
    result = MEMORY[0x1BCCD76CC](&protocol conformance descriptor for EngagementUpsellBannerPaidEligibility, &type metadata for EngagementUpsellBannerPaidEligibility);
    atomic_store(result, (unint64_t *)&qword_1EF279A78);
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for EngagementUpsellTrigger(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  void (*v8)(_QWORD *, _QWORD *, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v20 = *a2;
    *a1 = *a2;
    v4 = (_QWORD *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = sub_1BA202400();
    v8 = *(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(v4, a2, v7);
    v8((_QWORD *)((char *)v4 + a3[5]), (_QWORD *)((char *)a2 + a3[5]), v7);
    v9 = a3[7];
    *(_QWORD *)((char *)v4 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
    *(_QWORD *)((char *)v4 + v9) = *(_QWORD *)((char *)a2 + v9);
    v10 = a3[8];
    v11 = a3[9];
    v12 = (char *)v4 + v10;
    v13 = (char *)a2 + v10;
    *(_QWORD *)v12 = *(_QWORD *)v13;
    v12[8] = v13[8];
    v14 = (char *)v4 + v11;
    v15 = (char *)a2 + v11;
    *(_QWORD *)v14 = *(_QWORD *)v15;
    v14[8] = v15[8];
    v16 = a3[11];
    *((_BYTE *)v4 + a3[10]) = *((_BYTE *)a2 + a3[10]);
    *(_QWORD *)((char *)v4 + v16) = *(_QWORD *)((char *)a2 + v16);
    v17 = a3[12];
    v18 = *(_QWORD *)((char *)a2 + v17);
    if ((~v18 & 0xF000000000000007) != 0)
      swift_retain();
    *(_QWORD *)((char *)v4 + v17) = v18;
    v19 = a3[14];
    *(_QWORD *)((char *)v4 + a3[13]) = *(_QWORD *)((char *)a2 + a3[13]);
    *(_QWORD *)((char *)v4 + v19) = *(_QWORD *)((char *)a2 + v19);
    swift_bridgeObjectRetain();
  }
  swift_retain();
  return v4;
}

uint64_t assignWithCopy for EngagementUpsellTrigger(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  unint64_t v19;

  v6 = sub_1BA202400();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  v8 = a3[8];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = *(_BYTE *)(v10 + 8);
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = v11;
  v12 = a3[9];
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = *(_BYTE *)(v14 + 8);
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *(_BYTE *)(v13 + 8) = v15;
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  v16 = a3[12];
  v17 = (_QWORD *)(a1 + v16);
  v18 = *(_QWORD *)(a2 + v16);
  v19 = v18 & 0xF000000000000007;
  if ((~*(_QWORD *)(a1 + v16) & 0xF000000000000007) != 0)
  {
    if (v19 != 0xF000000000000007)
    {
      *v17 = v18;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    sub_1BA1F8EE4(a1 + v16);
    v18 = *(_QWORD *)(a2 + v16);
    goto LABEL_6;
  }
  if (v19 == 0xF000000000000007)
  {
LABEL_6:
    *v17 = v18;
    goto LABEL_8;
  }
  *v17 = v18;
  swift_retain();
LABEL_8:
  *(_QWORD *)(a1 + a3[13]) = *(_QWORD *)(a2 + a3[13]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[14]) = *(_QWORD *)(a2 + a3[14]);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1BA1F8EE4(uint64_t a1)
{
  destroy for EngagementUpsellCondition();
  return a1;
}

uint64_t initializeWithTake for EngagementUpsellTrigger(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = sub_1BA202400();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v8 = a3[7];
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  v9 = a3[8];
  v10 = a3[9];
  v11 = a1 + v9;
  v12 = a2 + v9;
  *(_QWORD *)v11 = *(_QWORD *)v12;
  *(_BYTE *)(v11 + 8) = *(_BYTE *)(v12 + 8);
  v13 = a1 + v10;
  v14 = a2 + v10;
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *(_BYTE *)(v13 + 8) = *(_BYTE *)(v14 + 8);
  v15 = a3[11];
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  *(_QWORD *)(a1 + v15) = *(_QWORD *)(a2 + v15);
  v16 = a3[13];
  *(_QWORD *)(a1 + a3[12]) = *(_QWORD *)(a2 + a3[12]);
  *(_QWORD *)(a1 + v16) = *(_QWORD *)(a2 + v16);
  *(_QWORD *)(a1 + a3[14]) = *(_QWORD *)(a2 + a3[14]);
  return a1;
}

uint64_t assignWithTake for EngagementUpsellTrigger(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;

  v6 = sub_1BA202400();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v8 = a3[7];
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  v9 = a3[8];
  v10 = a3[9];
  v11 = a1 + v9;
  v12 = a2 + v9;
  *(_QWORD *)v11 = *(_QWORD *)v12;
  *(_BYTE *)(v11 + 8) = *(_BYTE *)(v12 + 8);
  v13 = a1 + v10;
  v14 = a2 + v10;
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *(_BYTE *)(v13 + 8) = *(_BYTE *)(v14 + 8);
  v15 = a3[11];
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  *(_QWORD *)(a1 + v15) = *(_QWORD *)(a2 + v15);
  v16 = a3[12];
  v17 = (_QWORD *)(a1 + v16);
  v18 = *(_QWORD *)(a2 + v16);
  if ((~*(_QWORD *)(a1 + v16) & 0xF000000000000007) != 0)
  {
    if ((~v18 & 0xF000000000000007) != 0)
    {
      *v17 = v18;
      swift_release();
    }
    else
    {
      sub_1BA1F8EE4(a1 + v16);
      *v17 = *(_QWORD *)(a2 + v16);
    }
  }
  else
  {
    *v17 = v18;
  }
  *(_QWORD *)(a1 + a3[13]) = *(_QWORD *)(a2 + a3[13]);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[14]) = *(_QWORD *)(a2 + a3[14]);
  swift_release();
  return a1;
}

uint64_t sub_1BA1F9144(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1BA202400();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 52));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_1BA1F91C0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1BA202400();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 52)) = (a2 - 1);
  return result;
}

uint64_t getEnumTagSinglePayload for EngagementUpsellTrigger.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF7)
    goto LABEL_17;
  if (a2 + 9 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 9) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 9;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 9;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 9;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xA;
  v8 = v6 - 10;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for EngagementUpsellTrigger.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 9 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 9) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF6)
    return ((uint64_t (*)(void))((char *)&loc_1BA1F9314 + 4 * byte_1BA205D49[v4]))();
  *a1 = a2 + 9;
  return ((uint64_t (*)(void))((char *)sub_1BA1F9348 + 4 * byte_1BA205D44[v4]))();
}

uint64_t sub_1BA1F9348(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA1F9350(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BA1F9358);
  return result;
}

uint64_t sub_1BA1F9364(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BA1F936CLL);
  *(_BYTE *)result = a2 + 9;
  return result;
}

uint64_t sub_1BA1F9370(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA1F9378(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for EngagementUpsellTrigger.CodingKeys()
{
  return &type metadata for EngagementUpsellTrigger.CodingKeys;
}

unint64_t sub_1BA1F9398()
{
  unint64_t result;

  result = qword_1EF279A80;
  if (!qword_1EF279A80)
  {
    result = MEMORY[0x1BCCD76CC](&unk_1BA205F24, &type metadata for EngagementUpsellTrigger.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF279A80);
  }
  return result;
}

unint64_t sub_1BA1F93E0()
{
  unint64_t result;

  result = qword_1EF279A88;
  if (!qword_1EF279A88)
  {
    result = MEMORY[0x1BCCD76CC](&unk_1BA205E5C, &type metadata for EngagementUpsellTrigger.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF279A88);
  }
  return result;
}

unint64_t sub_1BA1F9428()
{
  unint64_t result;

  result = qword_1EF279A90;
  if (!qword_1EF279A90)
  {
    result = MEMORY[0x1BCCD76CC](&unk_1BA205E84, &type metadata for EngagementUpsellTrigger.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF279A90);
  }
  return result;
}

void *sub_1BA1F946C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;

  v1 = v0;
  v2 = type metadata accessor for EngagementUpsellTrigger();
  v30 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA1B4AA0();
  v5 = *v0;
  v6 = sub_1BA20282C();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v7;
    return result;
  }
  v28 = v1;
  result = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v29 = v5 + 64;
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v15 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v17 = v16 | (v11 << 6);
      goto LABEL_12;
    }
    v24 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v24 >= v15)
      goto LABEL_26;
    v25 = *(_QWORD *)(v29 + 8 * v24);
    ++v11;
    if (!v25)
    {
      v11 = v24 + 1;
      if (v24 + 1 >= v15)
        goto LABEL_26;
      v25 = *(_QWORD *)(v29 + 8 * v11);
      if (!v25)
        break;
    }
LABEL_25:
    v14 = (v25 - 1) & v25;
    v17 = __clz(__rbit64(v25)) + (v11 << 6);
LABEL_12:
    v18 = 16 * v17;
    v19 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v17);
    v20 = *v19;
    v21 = v19[1];
    v22 = *(_QWORD *)(v30 + 72) * v17;
    sub_1BA1B45A8(*(_QWORD *)(v5 + 56) + v22, (uint64_t)v4);
    v23 = (_QWORD *)(*(_QWORD *)(v7 + 48) + v18);
    *v23 = v20;
    v23[1] = v21;
    sub_1BA1B4A5C((uint64_t)v4, *(_QWORD *)(v7 + 56) + v22);
    result = (void *)swift_bridgeObjectRetain();
  }
  v26 = v24 + 2;
  if (v26 >= v15)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v28;
    goto LABEL_28;
  }
  v25 = *(_QWORD *)(v29 + 8 * v26);
  if (v25)
  {
    v11 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v11 >= v15)
      goto LABEL_26;
    v25 = *(_QWORD *)(v29 + 8 * v11);
    ++v26;
    if (v25)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1BA1F9694()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  _BYTE v22[16];

  v1 = v0;
  sub_1BA1C2858(0, &qword_1ED5AF240);
  v2 = *v0;
  v3 = sub_1BA20282C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v13)
      goto LABEL_26;
    v20 = *(_QWORD *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      v9 = v19 + 1;
      if (v19 + 1 >= v13)
        goto LABEL_26;
      v20 = *(_QWORD *)(v6 + 8 * v9);
      if (!v20)
        break;
    }
LABEL_25:
    v12 = (v20 - 1) & v20;
    v15 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
    v18 = 16 * v15;
    sub_1BA1FA1F8(*(_QWORD *)(v2 + 56) + 16 * v15, (uint64_t)v22);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    result = (void *)sub_1BA1B0D38((uint64_t)v22, *(_QWORD *)(v4 + 56) + v18);
  }
  v21 = v19 + 2;
  if (v21 >= v13)
    goto LABEL_26;
  v20 = *(_QWORD *)(v6 + 8 * v21);
  if (v20)
  {
    v9 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v20 = *(_QWORD *)(v6 + 8 * v9);
    ++v21;
    if (v20)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1BA1F9870()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  char v17;
  void *v18;
  void *v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  id v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;

  v1 = v0;
  sub_1BA1B76EC(0, &qword_1ED5AF238, (uint64_t)&type metadata for EngagementInlineViewManager.Placement, (uint64_t (*)(uint64_t, ValueMetadata *, uint64_t, unint64_t))MEMORY[0x1E0DECD58]);
  v2 = *v0;
  v3 = sub_1BA20282C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v24 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v24 >= v13)
      goto LABEL_26;
    v25 = *(_QWORD *)(v6 + 8 * v24);
    ++v9;
    if (!v25)
    {
      v9 = v24 + 1;
      if (v24 + 1 >= v13)
        goto LABEL_26;
      v25 = *(_QWORD *)(v6 + 8 * v9);
      if (!v25)
        break;
    }
LABEL_25:
    v12 = (v25 - 1) & v25;
    v15 = __clz(__rbit64(v25)) + (v9 << 6);
LABEL_12:
    v16 = *(_QWORD *)(v2 + 56) + 40 * v15;
    v17 = *(_BYTE *)v16;
    v18 = *(void **)(v16 + 8);
    v19 = *(void **)(v16 + 16);
    v20 = *(_QWORD *)(v16 + 24);
    v21 = *(_BYTE *)(v16 + 32);
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
    v22 = *(_QWORD *)(v4 + 56) + 40 * v15;
    *(_BYTE *)v22 = v17;
    *(_QWORD *)(v22 + 8) = v18;
    *(_QWORD *)(v22 + 16) = v19;
    *(_QWORD *)(v22 + 24) = v20;
    *(_BYTE *)(v22 + 32) = v21;
    v23 = v18;
    result = sub_1BA1C2628(v19, v20, v21);
  }
  v26 = v24 + 2;
  if (v26 >= v13)
    goto LABEL_26;
  v25 = *(_QWORD *)(v6 + 8 * v26);
  if (v25)
  {
    v9 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v25 = *(_QWORD *)(v6 + 8 * v9);
    ++v26;
    if (v25)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void sub_1BA1F9A60()
{
  __asm { BR              X11 }
}

_QWORD *sub_1BA1F9AC0@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *(*v3)(_QWORD **__return_ptr, uint64_t *, char *);
  uint64_t v4;
  _QWORD *result;
  unint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  unsigned int v9;
  unsigned __int8 v10;
  unsigned __int8 v11;
  unsigned __int8 v12;

  v8 = v4;
  LOWORD(v9) = a1;
  BYTE2(v9) = BYTE2(a1);
  HIBYTE(v9) = BYTE3(a1);
  v10 = BYTE4(a1);
  v11 = BYTE5(a1);
  v12 = BYTE6(a1);
  result = v3(&v7, &v8, (char *)&v8 + BYTE6(a1));
  if (!v2)
    result = v7;
  v6 = v9 | ((unint64_t)v10 << 32) | ((unint64_t)v11 << 40) | ((unint64_t)v12 << 48);
  *v1 = v8;
  v1[1] = v6;
  return result;
}

_BYTE *sub_1BA1F9D50@<X0>(_BYTE *result@<X0>, _BYTE *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (!result)
    goto LABEL_4;
  v4 = a2 - result;
  if (a2 == result)
  {
    result = 0;
LABEL_4:
    v5 = 0xC000000000000000;
    goto LABEL_5;
  }
  if (v4 <= 14)
  {
    result = (_BYTE *)sub_1BA1F9F5C(result, a2);
    v5 = v7 & 0xFFFFFFFFFFFFFFLL;
  }
  else if ((unint64_t)v4 >= 0x7FFFFFFF)
  {
    result = (_BYTE *)sub_1BA1FA01C((uint64_t)result, (uint64_t)a2);
    v5 = v8 | 0x8000000000000000;
  }
  else
  {
    result = (_BYTE *)sub_1BA1C22FC((uint64_t)result, (uint64_t)a2);
    v5 = v6 | 0x4000000000000000;
  }
LABEL_5:
  *a3 = result;
  a3[1] = v5;
  return result;
}

_QWORD *sub_1BA1F9DC4(_QWORD *(*a1)(uint64_t *__return_ptr, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *result;
  uint64_t v6;

  if (a3)
  {
    result = a1(&v6, a3, a4 - a3);
    if (v4)
      return result;
    return (_QWORD *)v6;
  }
  result = a1(&v6, 0, 0);
  if (!v4)
    return (_QWORD *)v6;
  return result;
}

char *sub_1BA1F9E28(uint64_t a1, uint64_t a2, _QWORD *(*a3)(uint64_t *__return_ptr, char *, char *))
{
  uint64_t v3;
  char *result;
  char *v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  result = (char *)sub_1BA2020A0();
  if (!result)
    goto LABEL_12;
  v8 = result;
  result = (char *)sub_1BA2020C4();
  v9 = a1 - (_QWORD)result;
  if (__OFSUB__(a1, result))
  {
    __break(1u);
    goto LABEL_11;
  }
  v10 = __OFSUB__(a2, a1);
  v11 = a2 - a1;
  if (v10)
  {
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
    return result;
  }
  v12 = sub_1BA2020B8();
  if (v12 >= v11)
    v13 = v11;
  else
    v13 = v12;
  result = (char *)a3(&v14, &v8[v9], &v8[v9 + v13]);
  if (!v3)
    return (char *)v14;
  return result;
}

uint64_t sub_1BA1F9ED4@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  char v3;
  uint64_t v4;

  if (result)
  {
    swift_bridgeObjectRetain();
    result = sub_1BA202778();
    if ((v3 & 1) == 0)
    {
      v4 = result;
      result = swift_bridgeObjectRelease();
      *a2 = 0;
      a2[1] = 0xE000000000000000;
      a2[2] = 15;
      a2[3] = v4;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1BA1F9F5C(_BYTE *__src, _BYTE *a2)
{
  unint64_t v2;
  _BYTE __dst[14];
  char v5;
  uint64_t v6;

  v6 = *MEMORY[0x1E0C80C00];
  if (__src)
    v2 = a2 - __src;
  else
    v2 = 0;
  if ((v2 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_11:
    __break(1u);
  }
  if (v2 > 0xFF)
    goto LABEL_11;
  memset(__dst, 0, sizeof(__dst));
  v5 = v2;
  if (__src && a2 != __src)
    memcpy(__dst, __src, a2 - __src);
  return *(_QWORD *)__dst;
}

uint64_t sub_1BA1FA01C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if (a1)
    v2 = a2 - a1;
  else
    v2 = 0;
  sub_1BA2020D0();
  swift_allocObject();
  result = sub_1BA202094();
  if (v2 < 0)
  {
    __break(1u);
  }
  else
  {
    sub_1BA202130();
    result = swift_allocObject();
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = v2;
  }
  return result;
}

uint64_t sub_1BA1FA094(uint64_t result)
{
  unint64_t v1;

  if (result)
  {
    v1 = result;
    if (result <= 14)
    {
      if (result < 0)
        __break(1u);
      else
        return 0;
    }
    else
    {
      sub_1BA2020D0();
      swift_allocObject();
      sub_1BA2020AC();
      if (v1 >= 0x7FFFFFFF)
      {
        sub_1BA202130();
        result = swift_allocObject();
        *(_QWORD *)(result + 16) = 0;
        *(_QWORD *)(result + 24) = v1;
      }
      else
      {
        return v1 << 32;
      }
    }
  }
  return result;
}

uint64_t sub_1BA1FA130()
{
  unint64_t v0;

  v0 = sub_1BA202868();
  swift_bridgeObjectRelease();
  if (v0 >= 0xA)
    return 10;
  else
    return v0;
}

void sub_1BA1FA178()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED5AF570)
  {
    sub_1BA1B9050(255, (unint64_t *)&unk_1ED5AF510, (uint64_t (*)(uint64_t))type metadata accessor for WeakEngagementUIEventObserver, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BA1C1D10();
    v0 = sub_1BA202850();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED5AF570);
  }
}

uint64_t sub_1BA1FA1F8(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for EngagementInlineViewManager.Observation(a2, a1);
  return a2;
}

unint64_t sub_1BA1FA234()
{
  unint64_t result;

  result = qword_1EF279A98;
  if (!qword_1EF279A98)
  {
    result = MEMORY[0x1BCCD76CC](&unk_1BA206028, &type metadata for EngagementUpsellTriggerError);
    atomic_store(result, (unint64_t *)&qword_1EF279A98);
  }
  return result;
}

_QWORD *sub_1BA1FA278@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v12[4];
  _QWORD v13[2];

  v5 = *(uint64_t **)(v3 + 16);
  v7 = *v5;
  v6 = v5[1];
  v13[0] = v7;
  v13[1] = v6;
  v12[2] = v13;
  result = sub_1BA1F9DC4((_QWORD *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_1BA1FA2D4, (uint64_t)v12, a1, a2);
  *a3 = result;
  a3[1] = v9;
  a3[2] = v10;
  a3[3] = v11;
  return result;
}

uint64_t sub_1BA1FA2D4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1BA1F9ED4(a1, a2);
}

uint64_t storeEnumTagSinglePayload for EngagementUpsellTriggerError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BA1FA330 + 4 * byte_1BA205D4E[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BA1FA350 + 4 * byte_1BA205D53[v4]))();
}

_BYTE *sub_1BA1FA330(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BA1FA350(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BA1FA358(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BA1FA360(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BA1FA368(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BA1FA370(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for EngagementUpsellTriggerError()
{
  return &type metadata for EngagementUpsellTriggerError;
}

unint64_t sub_1BA1FA390()
{
  unint64_t result;

  result = qword_1EF279AA0;
  if (!qword_1EF279AA0)
  {
    result = MEMORY[0x1BCCD76CC](&unk_1BA206000, &type metadata for EngagementUpsellTriggerError);
    atomic_store(result, (unint64_t *)&qword_1EF279AA0);
  }
  return result;
}

uint64_t sub_1BA1FA3D4()
{
  uint64_t v0;

  sub_1BA1CA4FC(v0 + 16);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for WeakEngagementUIEventObserver()
{
  return objc_opt_self();
}

void sub_1BA1FA418(char a1)
{
  sub_1BA202A00();
  __asm { BR              X10 }
}

uint64_t sub_1BA1FA470()
{
  sub_1BA202538();
  swift_bridgeObjectRelease();
  return sub_1BA202A18();
}

void sub_1BA1FA4FC(char a1)
{
  sub_1BA202A00();
  __asm { BR              X10 }
}

uint64_t sub_1BA1FA54C()
{
  sub_1BA202538();
  swift_bridgeObjectRelease();
  return sub_1BA202A18();
}

void sub_1BA1FA5D8(uint64_t a1, char a2)
{
  sub_1BA202A00();
  __asm { BR              X10 }
}

uint64_t sub_1BA1FA624()
{
  sub_1BA202538();
  swift_bridgeObjectRelease();
  return sub_1BA202A18();
}

void sub_1BA1FA6B0(uint64_t a1, char a2)
{
  sub_1BA202A00();
  __asm { BR              X10 }
}

uint64_t sub_1BA1FA704()
{
  sub_1BA202538();
  swift_bridgeObjectRelease();
  return sub_1BA202A18();
}

NewsEngagement::EngagementUpsellBannerStyle_optional __swiftcall EngagementUpsellBannerStyle.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsEngagement::EngagementUpsellBannerStyle_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1BA202868();
  result.value = swift_bridgeObjectRelease();
  v5 = 6;
  if (v3 < 6)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t EngagementUpsellBannerStyle.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA1FA818 + 4 * byte_1BA2060C8[*v0]))(0x746C7561666564, 0xE700000000000000);
}

uint64_t sub_1BA1FA818()
{
  return 0x7472656C61;
}

uint64_t sub_1BA1FA82C()
{
  return 0x7465656873;
}

uint64_t sub_1BA1FA840()
{
  return 0x72656E6E6162;
}

uint64_t sub_1BA1FA854()
{
  return 0x6954656C62627562;
}

uint64_t sub_1BA1FA870()
{
  return 0x7473616F74;
}

void sub_1BA1FA884(char *a1)
{
  sub_1BA1FAF18(*a1);
}

unint64_t sub_1BA1FA894()
{
  unint64_t result;

  result = qword_1EF279AA8;
  if (!qword_1EF279AA8)
  {
    result = MEMORY[0x1BCCD76CC](&protocol conformance descriptor for EngagementUpsellBannerStyle, &type metadata for EngagementUpsellBannerStyle);
    atomic_store(result, (unint64_t *)&qword_1EF279AA8);
  }
  return result;
}

void sub_1BA1FA8D8()
{
  char *v0;

  sub_1BA1FA4FC(*v0);
}

void sub_1BA1FA8E0()
{
  __asm { BR              X10 }
}

uint64_t sub_1BA1FA91C()
{
  sub_1BA202538();
  return swift_bridgeObjectRelease();
}

void sub_1BA1FA994(uint64_t a1)
{
  char *v1;

  sub_1BA1FA5D8(a1, *v1);
}

NewsEngagement::EngagementUpsellBannerStyle_optional sub_1BA1FA99C(Swift::String *a1)
{
  return EngagementUpsellBannerStyle.init(rawValue:)(*a1);
}

uint64_t sub_1BA1FA9A8()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1BA1FA9D8 + 4 * byte_1BA2060D4[*v0]))();
}

void sub_1BA1FA9D8(_QWORD *a1@<X8>)
{
  *a1 = 0x7472656C61;
  a1[1] = 0xE500000000000000;
}

void sub_1BA1FA9F0(_QWORD *a1@<X8>)
{
  *a1 = 0x7465656873;
  a1[1] = 0xE500000000000000;
}

uint64_t storeEnumTagSinglePayload for EngagementUpsellBannerStyle(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1BA1FAA9C + 4 * byte_1BA2060DF[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1BA1FAAD0 + 4 * byte_1BA2060DA[v4]))();
}

uint64_t sub_1BA1FAAD0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA1FAAD8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BA1FAAE0);
  return result;
}

uint64_t sub_1BA1FAAEC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BA1FAAF4);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1BA1FAAF8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA1FAB00(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for EngagementUpsellBannerStyle()
{
  return &type metadata for EngagementUpsellBannerStyle;
}

uint64_t sub_1BA1FAB1C(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v1(v2);
  return swift_release();
}

void sub_1BA1FAB48(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1BA1FAB88(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1BA1FABE4 + 4 * byte_1BA2061D4[a2]))(0x74726F6873);
}

uint64_t sub_1BA1FABE4(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x74726F6873 && v1 == 0xE500000000000000)
    v2 = 1;
  else
    v2 = sub_1BA202988();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_1BA1FAC84(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1BA1FACCC(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1BA1FAD18 + 4 * byte_1BA2061DC[a2]))(1684627824);
}

uint64_t sub_1BA1FAD18(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 1684627824 && v1 == 0xE400000000000000)
    v2 = 1;
  else
    v2 = sub_1BA202988();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_1BA1FADA8(char a1)
{
  __asm { BR              X11 }
}

uint64_t sub_1BA1FADF4(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1BA1FAE6C + 4 * byte_1BA2061E6[a2]))(0x64657269707865);
}

uint64_t sub_1BA1FAE6C(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x64657269707865 && v1 == 0xE700000000000000)
    v2 = 1;
  else
    v2 = sub_1BA202988();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_1BA1FAF18(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1BA1FAF68(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1BA1FAFE8 + 4 * byte_1BA2061F2[a2]))(0x7472656C61);
}

uint64_t sub_1BA1FAFE8(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x7472656C61 && v1 == 0xE500000000000000)
    v2 = 1;
  else
    v2 = sub_1BA202988();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_1BA1FB0AC(char a1)
{
  __asm { BR              X11 }
}

uint64_t sub_1BA1FB104(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1BA1FB1B4 + 4 * byte_1BA206201[a2]))(0xD000000000000016);
}

uint64_t sub_1BA1FB1B4(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0xD000000000000016 && v1 == 0x80000001BA206840)
    v2 = 1;
  else
    v2 = sub_1BA202988();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_1BA1FB298(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1BA1FB2E8(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1BA1FB344 + 4 * byte_1BA20620E[a2]))(0x6775626564);
}

uint64_t sub_1BA1FB344(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x6775626564 && v1 == 0xE500000000000000)
    v2 = 1;
  else
    v2 = sub_1BA202988();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1BA1FB3E4(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2;
  unint64_t v3;
  unint64_t v4;
  int v5;
  unint64_t v6;
  unint64_t v7;
  char v8;

  v2 = a1;
  if (a1)
  {
    if (a1 == 1)
      v3 = 0x656E4F656C707061;
    else
      v3 = 0xD000000000000012;
    if (v2 == 1)
      v4 = 0xE800000000000000;
    else
      v4 = 0x80000001BA206480;
    v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1)
        v6 = 0x656E4F656C707061;
      else
        v6 = 0xD000000000000012;
      if (v5 == 1)
        v7 = 0xE800000000000000;
      else
        v7 = 0x80000001BA206480;
      if (v3 != v6)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v4 = 0xE800000000000000;
    v3 = 0x73756C507377656ELL;
    v5 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE800000000000000;
  if (v3 != 0x73756C507377656ELL)
  {
LABEL_21:
    v8 = sub_1BA202988();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7)
    goto LABEL_21;
  v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

id EngagementInlineViewManager.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void EngagementInlineViewManager.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id EngagementInlineViewManager.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t EngagementInlineViewManager.state(for:)()
{
  sub_1BA2022A4();
  sub_1BA1B5770(0, (unint64_t *)&unk_1ED5AF9A8, (uint64_t)&type metadata for EngagementInlineBannerState, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
  swift_retain();
  sub_1BA202364();
  return swift_release();
}

Swift::String_optional __swiftcall EngagementInlineViewManager.identifier(for:)(NewsEngagement::EngagementUIPlacement a1)
{
  uint64_t v1;
  void *v2;
  Swift::String_optional result;

  v1 = sub_1BA1FB7C0();
  result.value._object = v2;
  result.value._countAndFlagsBits = v1;
  return result;
}

NewsEngagement::EngagementPlacementSource_optional __swiftcall EngagementInlineViewManager.source(for:)(NewsEngagement::EngagementUIPlacement a1)
{
  return (NewsEngagement::EngagementPlacementSource_optional)sub_1BA1FB6F8(a1, &qword_1ED5AF158, (uint64_t)&type metadata for EngagementPlacementSource);
}

NewsEngagement::EngagementOffer_optional __swiftcall EngagementInlineViewManager.offer(for:)(NewsEngagement::EngagementUIPlacement a1)
{
  return (NewsEngagement::EngagementOffer_optional)sub_1BA1FB6F8(a1, &qword_1ED5AF4E0, (uint64_t)&type metadata for EngagementOffer);
}

uint64_t sub_1BA1FB6F8(uint64_t a1, unint64_t *a2, uint64_t a3)
{
  sub_1BA2022A4();
  sub_1BA1B5770(0, a2, a3, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
  swift_retain();
  sub_1BA202364();
  return swift_release();
}

Swift::String_optional __swiftcall EngagementInlineViewManager.messageID(for:)(NewsEngagement::EngagementUIPlacement a1)
{
  uint64_t v1;
  void *v2;
  Swift::String_optional result;

  v1 = sub_1BA1FB7C0();
  result.value._object = v2;
  result.value._countAndFlagsBits = v1;
  return result;
}

uint64_t sub_1BA1FB7C0()
{
  uint64_t v1;

  sub_1BA2022A4();
  sub_1BA1B5770(0, (unint64_t *)&unk_1ED5AF220, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
  swift_retain();
  sub_1BA202364();
  swift_release();
  return v1;
}

Swift::String_optional __swiftcall EngagementInlineViewManager.trigger(for:)(NewsEngagement::EngagementUIPlacement a1)
{
  uint64_t v1;
  void *v2;
  Swift::String_optional result;

  v1 = sub_1BA1FB7C0();
  result.value._object = v2;
  result.value._countAndFlagsBits = v1;
  return result;
}

uint64_t sub_1BA1FB880(unsigned __int8 *a1, void *a2, uint64_t a3)
{
  uint64_t v3;
  void *v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  id v9;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v12;
  _BYTE v13[8];
  void *v14;
  void *v15;
  uint64_t v16;
  char v17;

  v5 = *(void **)a3;
  v6 = *(_QWORD *)(a3 + 8);
  v7 = *(_BYTE *)(a3 + 16);
  v8 = *a1;
  sub_1BA202268();
  v13[0] = v8;
  v14 = a2;
  v15 = v5;
  v16 = v6;
  v17 = v7;
  swift_beginAccess();
  v9 = a2;
  sub_1BA1C2628(v5, v6, v7);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v12 = *(_QWORD *)(v3 + 24);
  *(_QWORD *)(v3 + 24) = 0x8000000000000000;
  sub_1BA1D680C((uint64_t)v13, v8, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)(v3 + 24) = v12;
  swift_bridgeObjectRelease();
  swift_endAccess();
  return sub_1BA202274();
}

uint64_t sub_1BA1FB95C(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  NSObject *v16;
  NSObject *v17;
  os_log_type_t v18;
  int v19;
  _BOOL4 v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  NSObject *v25;
  void *v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  unint64_t v30;
  void *v31;
  os_log_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  int v47;
  NSObject *v48;
  void *v49;
  os_log_type_t v50;
  _BOOL4 v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  unint64_t v58;
  void *v59;
  void *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  __int128 *v65;
  uint64_t v66;
  char *v67;
  void *v68;
  uint64_t v69;
  char v70;
  uint64_t v71;
  void *v72;
  char *v73;
  uint64_t v74;
  char *v75;
  char *v76;
  void *v77;
  uint64_t v78;
  const void *v79;
  uint64_t v80;
  char v81;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  int v87;
  uint64_t v88;
  int v89;
  uint64_t v90;
  int v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  int v97;
  char *v98;
  __int128 v99;
  os_log_t v100;
  uint64_t v101;
  __int128 *v102;
  uint64_t v103;
  char *v104;
  id aBlock;
  uint64_t v106;
  uint64_t (*v107)(uint64_t);
  void *v108;
  uint64_t (*v109)();
  uint64_t v110;
  uint64_t v111;
  int v112;
  __int16 v113;

  v4 = sub_1BA20246C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v83 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1BA202484();
  v92 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v104 = (char *)&v83 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(void **)a2;
  v10 = *(_QWORD *)(a2 + 8);
  v12 = *(unsigned __int8 *)(a2 + 16);
  if (qword_1ED5AFB58 != -1)
    swift_once();
  v13 = sub_1BA20243C();
  v14 = __swift_project_value_buffer(v13, (uint64_t)qword_1ED5B08D0);
  v15 = a1;
  sub_1BA200378(v11, v10, v12);
  v16 = v15;
  sub_1BA200378(v11, v10, v12);
  v102 = (__int128 *)v14;
  v17 = sub_1BA202424();
  v18 = sub_1BA202664();
  v19 = v18;
  v20 = os_log_type_enabled(v17, v18);
  v84 = v4;
  v95 = v5;
  v94 = v7;
  v93 = v8;
  v101 = v10;
  if (v20)
  {
    v21 = swift_slowAlloc();
    v100 = v17;
    v22 = v21;
    v23 = (_QWORD *)swift_slowAlloc();
    v103 = swift_slowAlloc();
    v111 = v103;
    *(_DWORD *)v22 = 138412546;
    LODWORD(v99) = v19;
    aBlock = v16;
    v24 = v10;
    v25 = v16;
    sub_1BA2026E8();
    *v23 = v16;

    *(_WORD *)(v22 + 12) = 2080;
    if (v12 == 255)
      v26 = 0;
    else
      v26 = v11;
    if (v12 == 255)
      v27 = 0;
    else
      v27 = v10;
    if (v12 == 255)
      v28 = 2;
    else
      v28 = v12;
    aBlock = v26;
    v106 = v27;
    LOBYTE(v107) = v28;
    v29 = EngagementInlineBannerState.description.getter();
    aBlock = (id)sub_1BA1BDA3C(v29, v30, &v111);
    sub_1BA2026E8();
    swift_bridgeObjectRelease();
    sub_1BA1FFEA0(v11, v10, v12);
    v31 = v11;
    sub_1BA1FFEA0(v11, v24, v12);
    v32 = v100;
    _os_log_impl(&dword_1BA1AE000, v100, (os_log_type_t)v99, "Controller did update: %@ state: %s", (uint8_t *)v22, 0x16u);
    sub_1BA1DBAC0();
    swift_arrayDestroy();
    MEMORY[0x1BCCD775C](v23, -1, -1);
    v33 = v103;
    swift_arrayDestroy();
    v34 = v98;
    MEMORY[0x1BCCD775C](v33, -1, -1);
    MEMORY[0x1BCCD775C](v22, -1, -1);

  }
  else
  {

    sub_1BA1FFEA0(v11, v10, v12);
    v36 = v10;
    v31 = v11;
    sub_1BA1FFEA0(v11, v36, v12);

    v34 = v98;
  }
  v100 = v16;
  v37 = *((unsigned __int8 *)&v16->isa + OBJC_IVAR____TtC14NewsEngagement36EngagementInlineDialogViewController_placement);
  v111 = *(_QWORD *)(*(_QWORD *)&v34[OBJC_IVAR____TtC14NewsEngagement27EngagementInlineViewManager_state] + 16);
  MEMORY[0x1E0C80A78](v35);
  v103 = v38;
  *(&v83 - 2) = v38;
  *((_BYTE *)&v83 - 8) = v37;
  sub_1BA2022A4();
  sub_1BA1B5770(0, (unint64_t *)&unk_1ED5AF9A8, (uint64_t)&type metadata for EngagementInlineBannerState, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
  swift_retain();
  sub_1BA202364();
  swift_release();
  v39 = (uint64_t)aBlock;
  v40 = v106;
  if (v107 > 1u)
  {
    if (v107 != 255)
      __asm { BR              X9 }
    sub_1BA1FFEA0(aBlock, v106, 255);
    v39 = 4;
    v40 = 0;
    v41 = 2;
  }
  else
  {
    v41 = v107 != 0;
  }
  sub_1BA1FFEA0((id)v39, v40, v41);
  v42 = v31;
  v43 = v101;
  v44 = v101;
  v45 = v12;
  if (v12 == 255)
  {
    v111 = *(_QWORD *)(v103 + 16);
    MEMORY[0x1E0C80A78](v111);
    *(&v83 - 2) = v46;
    *((_BYTE *)&v83 - 8) = v37;
    swift_retain();
    sub_1BA202364();
    swift_release();
    if (v107 == 255)
      v42 = 0;
    else
      v42 = aBlock;
    if (v107 == 255)
      v44 = 0;
    else
      v44 = v106;
    if (v107 == 255)
      v45 = 2;
    else
      v45 = v107;
  }
  aBlock = v42;
  v106 = v44;
  LOBYTE(v107) = v45;
  LOBYTE(v111) = v37;
  sub_1BA200378(v31, v43, v12);
  v47 = v45;
  sub_1BA1FD700((uint64_t)&aBlock, (unsigned __int8 *)&v111);
  sub_1BA1C2628(v42, v44, v45);
  sub_1BA1C2628(v42, v44, v45);
  v48 = sub_1BA202424();
  v49 = v42;
  v50 = sub_1BA20267C();
  v51 = os_log_type_enabled(v48, v50);
  v91 = v37;
  if (v51)
  {
    v52 = v37;
    v53 = swift_slowAlloc();
    v54 = swift_slowAlloc();
    v111 = v54;
    *(_DWORD *)v53 = 136315394;
    LOBYTE(aBlock) = v52;
    v55 = EngagementUIPlacement.rawValue.getter();
    aBlock = (id)sub_1BA1BDA3C(v55, v56, &v111);
    sub_1BA2026E8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v53 + 12) = 2080;
    aBlock = v49;
    v106 = v44;
    LOBYTE(v107) = v47;
    v57 = EngagementInlineBannerState.description.getter();
    aBlock = (id)sub_1BA1BDA3C(v57, v58, &v111);
    sub_1BA2026E8();
    swift_bridgeObjectRelease();
    sub_1BA1C263C(v49, v44, v47);
    sub_1BA1C263C(v49, v44, v47);
    _os_log_impl(&dword_1BA1AE000, v48, v50, "Updated placement %s to state %s", (uint8_t *)v53, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1BCCD775C](v54, -1, -1);
    MEMORY[0x1BCCD775C](v53, -1, -1);
  }
  else
  {
    sub_1BA1C263C(v49, v44, v45);
    sub_1BA1C263C(v49, v44, v45);
  }

  v59 = v49;
  v96 = v44;
  v97 = v47;
  LODWORD(v49) = *((unsigned __int8 *)&v100->isa
                 + OBJC_IVAR____TtC14NewsEngagement36EngagementInlineDialogViewController_source);
  v61 = *(uint64_t *)((char *)&v100->isa
                   + OBJC_IVAR____TtC14NewsEngagement36EngagementInlineDialogViewController_identifier);
  v60 = *(Class *)((char *)&v100[1].isa
                 + OBJC_IVAR____TtC14NewsEngagement36EngagementInlineDialogViewController_identifier);
  v62 = *(uint64_t *)((char *)&v100[1].isa
                   + OBJC_IVAR____TtC14NewsEngagement36EngagementInlineDialogViewController_messageID);
  v90 = *(uint64_t *)((char *)&v100->isa
                   + OBJC_IVAR____TtC14NewsEngagement36EngagementInlineDialogViewController_messageID);
  v89 = *((unsigned __int8 *)&v100->isa + OBJC_IVAR____TtC14NewsEngagement36EngagementInlineDialogViewController_offer);
  sub_1BA1C2628(v59, v44, v47);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v85 = sub_1BA1BFAE8();
  v63 = *(_QWORD *)(v85 + 16);
  v64 = v84;
  if (v63)
  {
    v86 = sub_1BA1C1078(0, (unint64_t *)&qword_1ED5AF230);
    v65 = (__int128 *)(v85 + 32);
    v88 = v61;
    v87 = (int)v49;
    do
    {
      v99 = *v65;
      v102 = v65 + 1;
      v103 = v63;
      v100 = (os_log_t)v99;
      swift_unknownObjectRetain();
      v101 = sub_1BA2026AC();
      v66 = swift_allocObject();
      *(_OWORD *)(v66 + 16) = v99;
      v67 = v98;
      *(_QWORD *)(v66 + 32) = v98;
      *(_QWORD *)(v66 + 40) = v61;
      *(_QWORD *)(v66 + 48) = v60;
      *(_BYTE *)(v66 + 56) = v91;
      *(_DWORD *)(v66 + 57) = v111;
      *(_DWORD *)(v66 + 60) = *(_DWORD *)((char *)&v111 + 3);
      *(_QWORD *)(v66 + 64) = v59;
      v68 = v59;
      v69 = v96;
      *(_QWORD *)(v66 + 72) = v96;
      v70 = v97;
      *(_BYTE *)(v66 + 80) = v97;
      *(_BYTE *)(v66 + 81) = (_BYTE)v49;
      *(_DWORD *)(v66 + 82) = v112;
      *(_WORD *)(v66 + 86) = v113;
      *(_QWORD *)(v66 + 88) = v90;
      *(_QWORD *)(v66 + 96) = v62;
      *(_BYTE *)(v66 + 104) = v89;
      v109 = sub_1BA20203C;
      v110 = v66;
      aBlock = (id)MEMORY[0x1E0C809B0];
      v106 = 1107296256;
      v107 = sub_1BA1FAB1C;
      v108 = &block_descriptor_42;
      v49 = v60;
      v71 = v62;
      v72 = _Block_copy(&aBlock);
      swift_unknownObjectRetain();
      v73 = v67;
      swift_bridgeObjectRetain();
      v74 = v69;
      v59 = v68;
      sub_1BA1C2628(v68, v74, v70);
      swift_bridgeObjectRetain();
      swift_release();
      sub_1BA202478();
      aBlock = (id)MEMORY[0x1E0DEE9D8];
      sub_1BA1CA990();
      sub_1BA1B9050(0, &qword_1ED5AF520, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA1CA9D8();
      v75 = v94;
      v76 = v104;
      sub_1BA20270C();
      v77 = (void *)v101;
      MEMORY[0x1BCCD6F70](0, v76, v75, v72);
      v78 = v103;
      v79 = v72;
      v62 = v71;
      v60 = v49;
      LOBYTE(v49) = v87;
      v61 = v88;
      _Block_release(v79);
      swift_unknownObjectRelease();

      (*(void (**)(char *, uint64_t))(v95 + 8))(v75, v64);
      (*(void (**)(char *, uint64_t))(v92 + 8))(v76, v93);
      v65 = v102;
      v63 = v78 - 1;
    }
    while (v63);
  }
  swift_bridgeObjectRelease();
  v80 = v96;
  v81 = v97;
  sub_1BA1C263C(v59, v96, v97);
  swift_bridgeObjectRelease();
  sub_1BA1C263C(v59, v80, v81);
  return swift_bridgeObjectRelease();
}

Swift::Void __swiftcall EngagementInlineViewManager.removePlacement(_:)(NewsEngagement::EngagementUIPlacement a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12[4];
  char v13;

  v2 = *(unsigned __int8 *)a1;
  if (qword_1ED5AFB58 != -1)
    swift_once();
  v3 = sub_1BA20243C();
  __swift_project_value_buffer(v3, (uint64_t)qword_1ED5B08D0);
  v4 = sub_1BA202424();
  v5 = sub_1BA20267C();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = swift_slowAlloc();
    v12[0] = v7;
    *(_DWORD *)v6 = 136315138;
    v8 = EngagementUIPlacement.rawValue.getter();
    sub_1BA1BDA3C(v8, v9, v12);
    sub_1BA2026E8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BA1AE000, v4, v5, "Removing placement: %s", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCD775C](v7, -1, -1);
    MEMORY[0x1BCCD775C](v6, -1, -1);
  }

  v10 = *(_QWORD *)(v1 + OBJC_IVAR____TtC14NewsEngagement27EngagementInlineViewManager_engagementBannerLayoutStore + 24);
  v11 = *(_QWORD *)(v1 + OBJC_IVAR____TtC14NewsEngagement27EngagementInlineViewManager_engagementBannerLayoutStore + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + OBJC_IVAR____TtC14NewsEngagement27EngagementInlineViewManager_engagementBannerLayoutStore), v10);
  LOBYTE(v12[0]) = v2;
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v11 + 24))(v12, v10, v11);
  sub_1BA202268();
  swift_beginAccess();
  sub_1BA20023C(v2, (uint64_t)v12);
  swift_endAccess();
  sub_1BA200334(v12[0], (void *)v12[1], (void *)v12[2], v12[3], v13);
  sub_1BA202274();
}

uint64_t EngagementInlineViewManager.addObserver(_:)(uint64_t a1, uint64_t a2)
{
  return sub_1BA1B1B70(a1, a2);
}

uint64_t EngagementInlineViewManager.removeObserver(_:)(uint64_t a1)
{
  __int128 v3;

  sub_1BA202268();
  swift_beginAccess();
  sub_1BA1FF910(a1, &v3);
  swift_endAccess();
  sub_1BA1B900C((uint64_t)&v3, &qword_1ED5AF168, (uint64_t)&type metadata for EngagementInlineViewManager.Observation);
  return sub_1BA202274();
}

id EngagementInlineViewManager.view(for:width:)(uint64_t a1, void *a2, char a3)
{
  char v4;

  v4 = *(_BYTE *)(a1 + 16);
  return EngagementInlineViewManager.view(for:width:)(&v4, a2, a3 & 1);
}

id EngagementInlineViewManager.view(for:width:)(char *a1, void *a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  int v24;
  double v25;
  int v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  double v34;
  double v35;
  void *v36;
  id v37;
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  uint64_t v41;
  double v42;
  double v43;
  double v44;
  NSString *v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  unint64_t v50;
  double v51;
  id v52;
  uint64_t v53;
  NSObject *v54;
  os_log_type_t v55;
  uint8_t *v56;
  double v57;
  uint64_t v58;
  unint64_t v59;
  double v60;
  uint64_t v61;
  char v62;
  double v63;
  uint64_t v64;
  os_log_type_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v73;
  double v74;
  double v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  double v80;
  int v81;
  double v82;
  uint64_t v83;
  char v84;
  double aBlock;
  uint64_t v86;
  uint64_t (*v87)(uint64_t);
  void *v88;
  void (*v89)();
  uint64_t v90;
  uint64_t v91[2];

  v4 = v3;
  v80 = *(double *)&a2;
  v7 = sub_1BA20246C();
  v79 = *(uint64_t *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v73 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1BA202484();
  v77 = *(_QWORD *)(v10 - 8);
  v78 = v10;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v73 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *a1;
  v14 = *(_QWORD *)(v4 + OBJC_IVAR____TtC14NewsEngagement27EngagementInlineViewManager_state);
  v91[0] = *(_QWORD *)(v14 + 16);
  v83 = v14;
  v84 = v13;
  sub_1BA2022A4();
  sub_1BA1B9050(0, &qword_1ED5AFA70, (uint64_t (*)(uint64_t))type metadata accessor for EngagementInlineDialogViewController, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  swift_retain();
  sub_1BA202364();
  v15 = swift_release();
  if (aBlock == 0.0)
  {
    if (qword_1ED5AFB58 != -1)
      swift_once();
    v53 = sub_1BA20243C();
    __swift_project_value_buffer(v53, (uint64_t)qword_1ED5B08D0);
    v54 = sub_1BA202424();
    v55 = sub_1BA202670();
    if (os_log_type_enabled(v54, v55))
    {
      v56 = (uint8_t *)swift_slowAlloc();
      v57 = COERCE_DOUBLE(swift_slowAlloc());
      aBlock = v57;
      *(_DWORD *)v56 = 136315138;
      LOBYTE(v91[0]) = v13;
      v58 = EngagementUIPlacement.rawValue.getter();
      v91[0] = sub_1BA1BDA3C(v58, v59, (uint64_t *)&aBlock);
      sub_1BA2026E8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BA1AE000, v54, v55, "Failed to retrieve inline view controller for placement=%s. Exiting", v56, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCD775C](*(_QWORD *)&v57, -1, -1);
      MEMORY[0x1BCCD775C](v56, -1, -1);
    }
    goto LABEL_40;
  }
  v82 = aBlock;
  v91[0] = *(_QWORD *)(v14 + 16);
  MEMORY[0x1E0C80A78](v15);
  *(&v73 - 2) = v14;
  v81 = v16;
  *((_BYTE *)&v73 - 8) = v16;
  sub_1BA1B5770(0, (unint64_t *)&unk_1ED5AF9A8, (uint64_t)&type metadata for EngagementInlineBannerState, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
  swift_retain();
  sub_1BA202364();
  swift_release();
  v17 = v86;
  v18 = (char)v87;
  if (v87 > 1u)
  {
    if (v87 != 255)
      __asm { BR              X9 }
    v60 = 0.0;
    *(double *)&v61 = 0.0;
    v62 = 2;
    goto LABEL_35;
  }
  if ((_BYTE)v87)
  {
    v62 = 1;
    v60 = aBlock;
    v61 = v86;
LABEL_35:
    v79 = v61;
    v80 = v60;
    v63 = aBlock;
    if (qword_1ED5AFB58 != -1)
      swift_once();
    v64 = sub_1BA20243C();
    __swift_project_value_buffer(v64, (uint64_t)qword_1ED5B08D0);
    sub_1BA200378(*(id *)&v63, v17, v18);
    sub_1BA200378(*(id *)&v63, v17, v18);
    v54 = sub_1BA202424();
    v65 = sub_1BA20267C();
    if (os_log_type_enabled(v54, v65))
    {
      v66 = swift_slowAlloc();
      v67 = swift_slowAlloc();
      v91[0] = v67;
      *(_DWORD *)v66 = 136315394;
      LOBYTE(aBlock) = v81;
      v68 = EngagementUIPlacement.rawValue.getter();
      aBlock = COERCE_DOUBLE(sub_1BA1BDA3C(v68, v69, v91));
      sub_1BA2026E8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v66 + 12) = 2080;
      aBlock = v80;
      v86 = v79;
      LOBYTE(v87) = v62;
      v70 = EngagementInlineBannerState.description.getter();
      aBlock = COERCE_DOUBLE(sub_1BA1BDA3C(v70, v71, v91));
      sub_1BA2026E8();
      swift_bridgeObjectRelease();
      sub_1BA1FFEA0(*(id *)&v63, v17, v18);
      sub_1BA1FFEA0(*(id *)&v63, v17, v18);
      _os_log_impl(&dword_1BA1AE000, v54, v65, "Requesting a view that has not been fulfilled placement=%s state=%s. Exiting", (uint8_t *)v66, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1BCCD775C](v67, -1, -1);
      MEMORY[0x1BCCD775C](v66, -1, -1);

      sub_1BA1FFEA0(*(id *)&v63, v17, v18);
      return 0;
    }

    sub_1BA1FFEA0(*(id *)&v63, v17, v18);
    sub_1BA1FFEA0(*(id *)&v63, v17, v18);
    sub_1BA1FFEA0(*(id *)&v63, v17, v18);
LABEL_40:

    return 0;
  }
  v75 = aBlock;
  v76 = v86;
  v19 = *(_QWORD *)(v4 + OBJC_IVAR____TtC14NewsEngagement27EngagementInlineViewManager_engagementBannerLayoutStore + 24);
  v20 = *(_QWORD *)(v4 + OBJC_IVAR____TtC14NewsEngagement27EngagementInlineViewManager_engagementBannerLayoutStore + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v4 + OBJC_IVAR____TtC14NewsEngagement27EngagementInlineViewManager_engagementBannerLayoutStore), v19);
  LOBYTE(v91[0]) = v81;
  v21 = v19;
  v22 = v76;
  (*(void (**)(double *__return_ptr, uint64_t *, uint64_t, uint64_t))(v20 + 8))(&aBlock, v91, v21, v20);
  v23 = aBlock;
  v24 = v87;
  if ((_BYTE)v87)
    v23 = 0.0;
  if ((a3 & 1) == 0)
  {
    v25 = *(double *)&v86;
    v74 = v23;
    if (v23 == v80)
      v26 = v87;
    else
      v26 = 1;
    if (v26 == 1)
    {
      if (qword_1ED5AFB58 != -1)
        swift_once();
      v27 = sub_1BA20243C();
      __swift_project_value_buffer(v27, (uint64_t)qword_1ED5B08D0);
      v28 = sub_1BA202424();
      v29 = sub_1BA20267C();
      if (os_log_type_enabled(v28, v29))
      {
        v30 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)v30 = 134217984;
        aBlock = v80;
        sub_1BA2026E8();
        _os_log_impl(&dword_1BA1AE000, v28, v29, "Requested banner width: %f", v30, 0xCu);
        MEMORY[0x1BCCD775C](v30, -1, -1);
      }

      sub_1BA1C1078(0, (unint64_t *)&qword_1ED5AF230);
      v31 = (void *)sub_1BA2026AC();
      v32 = swift_allocObject();
      swift_unknownObjectWeakInit();
      v33 = swift_allocObject();
      v34 = v82;
      v35 = v80;
      *(double *)(v33 + 16) = v82;
      *(double *)(v33 + 24) = v35;
      *(_BYTE *)(v33 + 32) = v81;
      *(_QWORD *)(v33 + 40) = v32;
      v89 = sub_1BA2003DC;
      v90 = v33;
      aBlock = MEMORY[0x1E0C809B0];
      v86 = 1107296256;
      v87 = sub_1BA1FAB1C;
      v88 = &block_descriptor_12;
      v36 = _Block_copy(&aBlock);
      v37 = *(id *)&v34;
      swift_release();
      sub_1BA202478();
      aBlock = MEMORY[0x1E0DEE9D8];
      sub_1BA1CA990();
      sub_1BA1B9050(0, &qword_1ED5AF520, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA1CA9D8();
      sub_1BA20270C();
      MEMORY[0x1BCCD6F70](0, v12, v9, v36);
      _Block_release(v36);

      (*(void (**)(char *, uint64_t))(v79 + 8))(v9, v7);
      (*(void (**)(char *, uint64_t))(v77 + 8))(v12, v78);
      v22 = v76;
    }
    if (qword_1ED5AFB58 != -1)
      swift_once();
    v38 = sub_1BA20243C();
    __swift_project_value_buffer(v38, (uint64_t)qword_1ED5B08D0);
    v39 = sub_1BA202424();
    v40 = sub_1BA20267C();
    if (os_log_type_enabled(v39, v40))
    {
      v41 = swift_slowAlloc();
      v42 = COERCE_DOUBLE(swift_slowAlloc());
      aBlock = v42;
      *(_DWORD *)v41 = 136315394;
      v43 = v74;
      if (v24)
        v44 = 0.0;
      else
        v44 = v25;
      if (v24)
        v43 = 0.0;
      v45 = NSStringFromCGSize(*(CGSize *)&v43);
      v46 = sub_1BA202508();
      v48 = v47;

      v91[0] = sub_1BA1BDA3C(v46, v48, (uint64_t *)&aBlock);
      sub_1BA2026E8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v41 + 12) = 2080;
      LOBYTE(v91[0]) = v81;
      v49 = EngagementUIPlacement.rawValue.getter();
      v91[0] = sub_1BA1BDA3C(v49, v50, (uint64_t *)&aBlock);
      v22 = v76;
      sub_1BA2026E8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BA1AE000, v39, v40, "Using banner size: %s for placement=%s", (uint8_t *)v41, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1BCCD775C](*(_QWORD *)&v42, -1, -1);
      MEMORY[0x1BCCD775C](v41, -1, -1);
    }

  }
  v51 = v82;
  v52 = objc_msgSend(*(id *)&v82, sel_view);

  sub_1BA1FFEA0(*(id *)&v75, v22, 0);
  return v52;
}

void sub_1BA1FD1C4(void *a1, char a2, uint64_t a3, double a4)
{
  id v8;
  void *v9;
  double v10;
  double v11;
  double v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  char v30;
  uint64_t v31[3];
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  double v35;
  double v36;
  char v37;

  v8 = objc_msgSend(a1, sel_view);
  if (v8)
  {
    v9 = v8;
    objc_msgSend(v8, sel_sizeThatFits_, a4, 1.79769313e308);
    v11 = v10;
    v13 = v12;

    if (qword_1ED5AFB58 != -1)
      swift_once();
    v14 = a3 + 16;
    v15 = sub_1BA20243C();
    __swift_project_value_buffer(v15, (uint64_t)qword_1ED5B08D0);
    v16 = sub_1BA202424();
    v17 = sub_1BA20267C();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = swift_slowAlloc();
      v19 = swift_slowAlloc();
      v31[0] = v19;
      *(_DWORD *)v18 = 136315394;
      v20 = MEMORY[0x1BCCD6F7C](v11, v13);
      v34 = sub_1BA1BDA3C(v20, v21, v31);
      sub_1BA2026E8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v18 + 12) = 2080;
      LOBYTE(v34) = a2;
      v22 = EngagementUIPlacement.rawValue.getter();
      v34 = sub_1BA1BDA3C(v22, v23, v31);
      sub_1BA2026E8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BA1AE000, v16, v17, "Calculated new banner size: %s for placement=%s", (uint8_t *)v18, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1BCCD775C](v19, -1, -1);
      MEMORY[0x1BCCD775C](v18, -1, -1);
    }

    if (v13 > 0.0)
    {
      swift_beginAccess();
      v24 = MEMORY[0x1BCCD77D4](v14);
      if (v24)
      {
        v25 = (void *)v24;
        sub_1BA1B2FB8(v24 + OBJC_IVAR____TtC14NewsEngagement27EngagementInlineViewManager_engagementBannerLayoutStore, (uint64_t)v31);

        v26 = v32;
        v27 = v33;
        __swift_project_boxed_opaque_existential_1(v31, v32);
        v35 = v11;
        v36 = v13;
        v30 = a2;
        (*(void (**)(double *, char *, uint64_t, uint64_t))(v27 + 16))(&v35, &v30, v26, v27);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v31);
      }
    }
    swift_beginAccess();
    v28 = MEMORY[0x1BCCD77D4](v14);
    if (v28)
    {
      v29 = (void *)v28;
      v35 = v11;
      v36 = v13;
      v37 = 0;
      sub_1BA1FB95C(a1, (uint64_t)&v35);

    }
  }
  else
  {
    __break(1u);
  }
}

NewsEngagement::EngagementPlacementVisibility __swiftcall EngagementInlineViewManager.placementVisibility(for:)(NewsEngagement::EngagementUIPlacement a1)
{
  NewsEngagement::EngagementPlacementVisibility result;

  sub_1BA2022A4();
  sub_1BA1B5770(0, &qword_1ED5AF158, (uint64_t)&type metadata for EngagementPlacementSource, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
  swift_retain();
  sub_1BA202364();
  swift_release();
  __asm { BR              X10 }
  return result;
}

uint64_t sub_1BA1FD574()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t result;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = sub_1BA202988();
  result = swift_bridgeObjectRelease();
  if ((v4 & 1) == 0)
    goto LABEL_4;
  v6 = __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + OBJC_IVAR____TtC14NewsEngagement27EngagementInlineViewManager_inlineDialogViewControllerFactory), *(_QWORD *)(v1+ OBJC_IVAR____TtC14NewsEngagement27EngagementInlineViewManager_inlineDialogViewControllerFactory+ 24));
  *(_QWORD *)(v3 - 72) = *(_QWORD *)(v2 + 16);
  MEMORY[0x1E0C80A78](v6);
  sub_1BA1B5770(0, (unint64_t *)&unk_1ED5AF220, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
  swift_retain();
  sub_1BA202364();
  result = swift_release();
  v7 = *(_QWORD *)(v3 - 104);
  if (v7)
  {
    v8 = *(_QWORD *)(v3 - 112);
    sub_1BA1B2FB8(*v6 + 16, v3 - 112);
    v9 = *(_QWORD *)(v3 - 88);
    v10 = *(_QWORD *)(v3 - 80);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v3 - 112), v9);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 16))(v8, v7, v9, v10);
    __swift_destroy_boxed_opaque_existential_1Tm(v3 - 112);
    return swift_bridgeObjectRelease();
  }
  else
  {
LABEL_4:
    *v0 = 0;
  }
  return result;
}

uint64_t sub_1BA1FD700(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  char v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  unsigned __int8 *v11;
  void *v12;
  uint64_t v13;
  char v14;
  id v15;
  id v16;
  id v17;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE v23[8];
  id v24;
  void *v25;
  uint64_t v26;
  char v27;

  v4 = *(void **)a1;
  v3 = *(_QWORD *)(a1 + 8);
  v5 = *(_BYTE *)(a1 + 16);
  v6 = *a2;
  sub_1BA202268();
  v7 = (uint64_t *)(v2 + 24);
  swift_beginAccess();
  v8 = *(_QWORD *)(v2 + 24);
  if (!*(_QWORD *)(v8 + 16))
    goto LABEL_5;
  v9 = sub_1BA1B9DB8(v6);
  if ((v10 & 1) == 0)
    goto LABEL_5;
  v11 = (unsigned __int8 *)(*(_QWORD *)(v8 + 56) + 40 * v9);
  v21 = *v11;
  v12 = (void *)*((_QWORD *)v11 + 2);
  v13 = *((_QWORD *)v11 + 3);
  v14 = v11[32];
  v15 = *((id *)v11 + 1);
  sub_1BA1C2628(v12, v13, v14);
  if (v15)
  {
    swift_endAccess();
    v20 = v3;
    v16 = v15;
    sub_1BA200334(v21, v15, v12, v13, v14);
    v23[0] = v6;
    v24 = v16;
    v25 = v4;
    v26 = v20;
    v27 = v5;
    swift_beginAccess();
    v17 = v16;
    sub_1BA1C2628(v4, v20, v5);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v22 = *v7;
    *v7 = 0x8000000000000000;
    sub_1BA1D680C((uint64_t)v23, v6, isUniquelyReferenced_nonNull_native);
    *v7 = v22;
    swift_bridgeObjectRelease();
    swift_endAccess();

  }
  else
  {
LABEL_5:
    swift_endAccess();
  }
  return sub_1BA202274();
}

uint64_t sub_1BA1FD890(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t ObjectType;
  __int128 v8;
  __int128 v9;
  void (*v10)(_QWORD *, _OWORD *, uint64_t, uint64_t);
  id v11;
  _OWORD v13[4];
  char v14;
  _QWORD v15[5];

  ObjectType = swift_getObjectType();
  v15[3] = type metadata accessor for EngagementInlineViewManager();
  v15[4] = &protocol witness table for EngagementInlineViewManager;
  v15[0] = a3;
  v8 = *(_OWORD *)(a4 + 48);
  v13[2] = *(_OWORD *)(a4 + 32);
  v13[3] = v8;
  v14 = *(_BYTE *)(a4 + 64);
  v9 = *(_OWORD *)(a4 + 16);
  v13[0] = *(_OWORD *)a4;
  v13[1] = v9;
  v10 = *(void (**)(_QWORD *, _OWORD *, uint64_t, uint64_t))(a2 + 8);
  v11 = a3;
  v10(v15, v13, ObjectType, a2);
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v15);
}

uint64_t EngagementInlineViewManager.triggerAction(_:for:)(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t ObjectType;
  char v9;
  __int128 v10;
  id v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unsigned __int8 v20;
  unsigned __int8 v21[24];
  __int128 v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;

  v3 = *a2;
  *(_QWORD *)v21 = *(_QWORD *)(*(_QWORD *)(v2 + OBJC_IVAR____TtC14NewsEngagement27EngagementInlineViewManager_state)
                             + 16);
  sub_1BA2022A4();
  sub_1BA1B5770(0, (unint64_t *)&unk_1ED5AF9A8, (uint64_t)&type metadata for EngagementInlineBannerState, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
  swift_retain();
  sub_1BA202364();
  swift_release();
  v5 = *((_QWORD *)&v22 + 1);
  v4 = v22;
  if (v23 > 1u)
  {
    if (v23 != 255)
      __asm { BR              X9 }
    sub_1BA1FFEA0((id)v22, *((uint64_t *)&v22 + 1), 255);
    v4 = 3;
    v5 = 0;
    v6 = 2;
  }
  else
  {
    v6 = v23 != 0;
  }
  sub_1BA1FFEA0((id)v4, v5, v6);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v2 + OBJC_IVAR____TtC14NewsEngagement27EngagementInlineViewManager_inlineDialogViewControllerFactory), *(_QWORD *)(v2 + OBJC_IVAR____TtC14NewsEngagement27EngagementInlineViewManager_inlineDialogViewControllerFactory + 24));
  v21[0] = v3;
  v7 = *(_QWORD *)(v2 + OBJC_IVAR____TtC14NewsEngagement27EngagementInlineViewManager_featureSettings + 8);
  ObjectType = swift_getObjectType();
  v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(ObjectType, v7);
  sub_1BA1BEC14(v21, v9 & 1, (uint64_t)&v22);
  v10 = v22;
  if (*((_QWORD *)&v22 + 1) != 11)
  {
    *(_QWORD *)&v22 = *((_QWORD *)&v22 + 1);
    v21[0] = v3;
    v20 = v23;
    sub_1BA1D2E90(*((uint64_t *)&v10 + 1));
    sub_1BA1BF7E8((uint64_t *)&v22, v21, &v20);
    sub_1BA1C02E8(*((uint64_t *)&v10 + 1));
  }
  if ((_QWORD)v10)
  {
    v11 = (id)v10;

    objc_msgSend(v11, sel_setDelegate_, v2);
    sub_1BA202268();
    swift_beginAccess();
    sub_1BA20023C(v3, (uint64_t)&v22);
    swift_endAccess();
    sub_1BA200334(v22, *((void **)&v22 + 1), v23, v24, v25);
    sub_1BA202274();
    v21[0] = v3;
    v22 = xmmword_1BA206440;
    LOBYTE(v23) = 2;
    sub_1BA1FB880(v21, v11, (uint64_t)&v22);
    v22 = xmmword_1BA206460;
    LOBYTE(v23) = 2;
    sub_1BA1FB95C(v11, (uint64_t)&v22);

  }
  else
  {
    if (qword_1ED5AFB58 != -1)
      swift_once();
    v12 = sub_1BA20243C();
    __swift_project_value_buffer(v12, (uint64_t)qword_1ED5B08D0);
    v13 = sub_1BA202424();
    v14 = sub_1BA202670();
    if (!os_log_type_enabled(v13, v14))
    {
      sub_1BA1C02E8(*((uint64_t *)&v10 + 1));

      return swift_bridgeObjectRelease();
    }
    v15 = (uint8_t *)swift_slowAlloc();
    v16 = swift_slowAlloc();
    *(_QWORD *)&v22 = v16;
    *(_DWORD *)v15 = 136315138;
    v21[0] = v3;
    v17 = EngagementUIPlacement.rawValue.getter();
    *(_QWORD *)v21 = sub_1BA1BDA3C(v17, v18, (uint64_t *)&v22);
    sub_1BA2026E8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BA1AE000, v13, v14, "Could not create debug dialog view controller for placement: %s", v15, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCD775C](v16, -1, -1);
    MEMORY[0x1BCCD775C](v15, -1, -1);

  }
  sub_1BA1C02E8(*((uint64_t *)&v10 + 1));
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BA1FDD48(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, char a5, char a6)
{
  uint64_t ObjectType;
  void (*v12)(_QWORD *, uint64_t *, char *, char *, uint64_t, uint64_t);
  id v13;
  char v15;
  char v16;
  uint64_t v17;
  _QWORD v18[5];

  ObjectType = swift_getObjectType();
  v18[3] = type metadata accessor for EngagementInlineViewManager();
  v18[4] = &protocol witness table for EngagementInlineViewManager;
  v17 = a4;
  v18[0] = a3;
  v16 = a5;
  v15 = a6;
  v12 = *(void (**)(_QWORD *, uint64_t *, char *, char *, uint64_t, uint64_t))(a2 + 24);
  v13 = a3;
  v12(v18, &v17, &v16, &v15, ObjectType, a2);
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v18);
}

void sub_1BA1FDDEC(NewsEngagement::EngagementUIPlacement a1)
{
  EngagementInlineViewManager.removePlacement(_:)(a1);
}

uint64_t sub_1BA1FDE0C(uint64_t a1)
{
  __int128 v3;

  sub_1BA202268();
  swift_beginAccess();
  sub_1BA1FF910(a1, &v3);
  swift_endAccess();
  sub_1BA1B900C((uint64_t)&v3, &qword_1ED5AF168, (uint64_t)&type metadata for EngagementInlineViewManager.Observation);
  return sub_1BA202274();
}

uint64_t sub_1BA1FDEA0()
{
  return sub_1BA1FDED4();
}

uint64_t sub_1BA1FDEAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BA1FDFA8(a1, a2, a3, &qword_1ED5AF158, (uint64_t)&type metadata for EngagementPlacementSource);
}

uint64_t sub_1BA1FDEC8()
{
  return sub_1BA1FDED4();
}

uint64_t sub_1BA1FDED4()
{
  uint64_t v1;

  sub_1BA2022A4();
  sub_1BA1B5770(0, (unint64_t *)&unk_1ED5AF220, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
  swift_retain();
  sub_1BA202364();
  swift_release();
  return v1;
}

uint64_t sub_1BA1FDF8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BA1FDFA8(a1, a2, a3, &qword_1ED5AF4E0, (uint64_t)&type metadata for EngagementOffer);
}

uint64_t sub_1BA1FDFA8(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, uint64_t a5)
{
  sub_1BA2022A4();
  sub_1BA1B5770(0, a4, a5, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
  swift_retain();
  sub_1BA202364();
  return swift_release();
}

id sub_1BA1FE068(uint64_t a1, void *a2, char a3)
{
  char v4;

  v4 = *(_BYTE *)(a1 + 16);
  return EngagementInlineViewManager.view(for:width:)(&v4, a2, a3 & 1);
}

id sub_1BA1FE0A0(char *a1, void *a2, char a3)
{
  return EngagementInlineViewManager.view(for:width:)(a1, a2, a3 & 1);
}

uint64_t sub_1BA1FE0C4(uint64_t a1, unsigned __int8 *a2)
{
  return EngagementInlineViewManager.triggerAction(_:for:)(a1, a2);
}

uint64_t sub_1BA1FE0E4(NewsEngagement::EngagementUIPlacement a1)
{
  return EngagementInlineViewManager.placementVisibility(for:)(a1);
}

Swift::Void __swiftcall EngagementInlineViewManager.engagementFeatureSettingsDidChange()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t ObjectType;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  void *v9;
  __int128 v10;
  char v11;
  uint64_t v12;

  v1 = v0;
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC14NewsEngagement27EngagementInlineViewManager_featureSettings + 8);
  ObjectType = swift_getObjectType();
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v2 + 40))(ObjectType, v2) & 1) != 0)
  {
    if (qword_1ED5AFB58 != -1)
      swift_once();
    v4 = sub_1BA20243C();
    __swift_project_value_buffer(v4, (uint64_t)qword_1ED5B08D0);
    v5 = sub_1BA202424();
    v6 = sub_1BA20267C();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v7 = 0;
      _os_log_impl(&dword_1BA1AE000, v5, v6, "Received settings change: blocking todayFeedMastheadBanner", v7, 2u);
      MEMORY[0x1BCCD775C](v7, -1, -1);
    }

    v12 = *(_QWORD *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC14NewsEngagement27EngagementInlineViewManager_state) + 16);
    MEMORY[0x1E0C80A78](v8);
    sub_1BA2022A4();
    sub_1BA1B9050(0, &qword_1ED5AFA70, (uint64_t (*)(uint64_t))type metadata accessor for EngagementInlineDialogViewController, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    swift_retain();
    sub_1BA202364();
    swift_release();
    v9 = (void *)v10;
    if ((_QWORD)v10)
    {
      v10 = xmmword_1BA206470;
      v11 = 2;
      sub_1BA1FB95C(v9, (uint64_t)&v10);

    }
  }
}

void EngagementInlineViewManager.messageViewController(_:didUpdate:)(void *a1, double a2, double a3)
{
  uint64_t v3;
  uint64_t v7;
  void *v8;
  char v9;
  id v10;
  unsigned __int128 v11;
  char v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  void *v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  id v49;
  id v50;
  char v51;
  char v52;
  uint64_t v53;
  NSObject *v54;
  uint64_t v55;
  __int128 v56;
  unsigned __int8 v57;

  type metadata accessor for EngagementInlineDialogViewController();
  v7 = swift_dynamicCastClass();
  if (v7)
  {
    v8 = (void *)v7;
    v9 = *(_BYTE *)(v7 + OBJC_IVAR____TtC14NewsEngagement36EngagementInlineDialogViewController_placement);
    v55 = *(_QWORD *)(*(_QWORD *)(v3 + OBJC_IVAR____TtC14NewsEngagement27EngagementInlineViewManager_state) + 16);
    MEMORY[0x1E0C80A78](v7);
    sub_1BA2022A4();
    sub_1BA1B5770(0, (unint64_t *)&unk_1ED5AF9A8, (uint64_t)&type metadata for EngagementInlineBannerState, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
    v10 = a1;
    swift_retain();
    sub_1BA202364();
    swift_release();
    v11 = v56;
    v12 = v57;
    if (v57 > 1u)
    {
      if (v57 != 255)
        __asm { BR              X9 }
      if (qword_1ED5AFB58 != -1)
        swift_once();
      v32 = sub_1BA20243C();
      __swift_project_value_buffer(v32, (uint64_t)qword_1ED5B08D0);
      v33 = sub_1BA202424();
      v34 = sub_1BA202670();
      if (os_log_type_enabled(v33, v34))
      {
        v35 = (uint8_t *)swift_slowAlloc();
        v36 = swift_slowAlloc();
        *(_QWORD *)&v56 = v36;
        *(_DWORD *)v35 = 136315138;
        v37 = EngagementUIPlacement.rawValue.getter();
        v55 = sub_1BA1BDA3C(v37, v38, (uint64_t *)&v56);
        sub_1BA2026E8();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1BA1AE000, v33, v34, "messageViewController didUpdate error: invalid state for placement %s", v35, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1BCCD775C](v36, -1, -1);
        MEMORY[0x1BCCD775C](v35, -1, -1);

        return;
      }

      goto LABEL_34;
    }
    if (v57)
    {
      v52 = v9;
      if (qword_1ED5AFB58 != -1)
        swift_once();
      v39 = sub_1BA20243C();
      __swift_project_value_buffer(v39, (uint64_t)qword_1ED5B08D0);
      sub_1BA200378((id)v56, *((uint64_t *)&v56 + 1), v57);
      sub_1BA1C2628((id)v56, *((uint64_t *)&v56 + 1), v57);
      v40 = sub_1BA202424();
      v41 = sub_1BA202670();
      v53 = *((_QWORD *)&v56 + 1);
      if (os_log_type_enabled(v40, v41))
      {
        v42 = swift_slowAlloc();
        v50 = v10;
        v43 = swift_slowAlloc();
        v55 = v43;
        *(_DWORD *)v42 = 136315394;
        *((_QWORD *)&v56 + 1) = *((_QWORD *)&v11 + 1);
        v57 = v12;
        v44 = EngagementInlineBannerState.description.getter();
        *(_QWORD *)&v56 = sub_1BA1BDA3C(v44, v45, &v55);
        sub_1BA2026E8();
        swift_bridgeObjectRelease();
        sub_1BA1FFEA0((id)v11, *((uint64_t *)&v11 + 1), v12);
        sub_1BA1FFEA0((id)v11, *((uint64_t *)&v11 + 1), v12);
        *(_WORD *)(v42 + 12) = 2080;
        LOBYTE(v56) = v52;
        v46 = EngagementUIPlacement.rawValue.getter();
        *(_QWORD *)&v56 = sub_1BA1BDA3C(v46, v47, &v55);
        sub_1BA2026E8();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1BA1AE000, v40, v41, "messageViewController didUpdate error: invalid state [%s] for placement %s", (uint8_t *)v42, 0x16u);
        swift_arrayDestroy();
        v48 = v43;
        v10 = v50;
        MEMORY[0x1BCCD775C](v48, -1, -1);
        MEMORY[0x1BCCD775C](v42, -1, -1);

      }
      else
      {
        sub_1BA1FFEA0((id)v56, *((uint64_t *)&v56 + 1), v57);
        sub_1BA1FFEA0((id)v56, *((uint64_t *)&v56 + 1), v57);

      }
    }
    else
    {
      v51 = v9;
      if (qword_1ED5AFB58 != -1)
        swift_once();
      v13 = sub_1BA20243C();
      __swift_project_value_buffer(v13, (uint64_t)qword_1ED5B08D0);
      v14 = sub_1BA202424();
      v15 = sub_1BA20267C();
      v53 = *((_QWORD *)&v56 + 1);
      if (os_log_type_enabled(v14, v15))
      {
        v49 = v10;
        v16 = swift_slowAlloc();
        v17 = swift_slowAlloc();
        v55 = v17;
        *(_DWORD *)v16 = 134218754;
        sub_1BA2026E8();
        *(_WORD *)(v16 + 12) = 2048;
        *(double *)&v56 = a3;
        sub_1BA2026E8();
        *(_WORD *)(v16 + 22) = 2080;
        LOBYTE(v56) = v51;
        v18 = EngagementUIPlacement.rawValue.getter();
        *(_QWORD *)&v56 = sub_1BA1BDA3C(v18, v19, &v55);
        sub_1BA2026E8();
        swift_bridgeObjectRelease();
        *(_WORD *)(v16 + 32) = 2080;
        v56 = v11;
        v57 = 0;
        v20 = EngagementInlineBannerState.description.getter();
        *(_QWORD *)&v56 = sub_1BA1BDA3C(v20, v21, &v55);
        sub_1BA2026E8();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1BA1AE000, v14, v15, "messageViewController didUpdate: received new size [%f x %f] for placement %s state %s", (uint8_t *)v16, 0x2Au);
        swift_arrayDestroy();
        MEMORY[0x1BCCD775C](v17, -1, -1);
        v22 = v16;
        v10 = v49;
        MEMORY[0x1BCCD775C](v22, -1, -1);
      }

      if (a3 == 0.0)
      {
        v23 = sub_1BA202424();
        v24 = sub_1BA20267C();
        if (os_log_type_enabled(v23, v24))
        {
          v25 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v25 = 0;
          _os_log_impl(&dword_1BA1AE000, v23, v24, "Received height = 0. Transitioning to dismiss state", v25, 2u);
          MEMORY[0x1BCCD775C](v25, -1, -1);
        }

        v56 = xmmword_1BA206470;
        v57 = 2;
        sub_1BA1FB95C(v8, (uint64_t)&v56);
        v27 = v11 >> 64;
        v26 = (void *)v11;
        v28 = 0;
LABEL_33:
        sub_1BA1FFEA0(v26, v27, v28);
LABEL_34:

        return;
      }
    }
    if (a2 != 0.0 || a3 != 0.0)
    {
      v56 = 0uLL;
      v57 = -1;
      sub_1BA1FB95C(v8, (uint64_t)&v56);
    }
    v26 = (void *)v11;
    v27 = v53;
    v28 = v12;
    goto LABEL_33;
  }
  if (qword_1ED5AFB58 != -1)
    swift_once();
  v29 = sub_1BA20243C();
  __swift_project_value_buffer(v29, (uint64_t)qword_1ED5B08D0);
  v54 = sub_1BA202424();
  v30 = sub_1BA202670();
  if (os_log_type_enabled(v54, v30))
  {
    v31 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v31 = 0;
    _os_log_impl(&dword_1BA1AE000, v54, v30, "messageViewController didUpdate error: Received invalid type of controller", v31, 2u);
    MEMORY[0x1BCCD775C](v31, -1, -1);
  }

}

void EngagementInlineViewManager.messageViewController(_:didSelectActionWith:)(void *a1, void *a2)
{
  void *v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  _BOOL4 v20;
  uint8_t *v21;
  uint8_t *v22;
  uint64_t v23;
  os_log_type_t v24;
  uint8_t *v25;
  char *v26;
  id v27;
  id v28;
  NSObject *v29;
  void *v30;
  char *v31;
  char *v32;
  void *v33;
  uint64_t v34;
  __int128 *v35;
  __int128 v36;
  uint64_t v37;
  id v38;
  void *v39;
  void *v40;
  id v41;
  id v42;
  id v43;
  uint64_t v44;
  void *v45;
  const void *v46;
  NSObject *v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  id v58;
  __int128 v59;
  uint64_t v60;
  NSObject *v61;
  _QWORD aBlock[7];

  v5 = sub_1BA20246C();
  v57 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1BA202484();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for EngagementInlineDialogViewController();
  v12 = swift_dynamicCastClass();
  if (v12)
  {
    v54 = v12;
    v55 = v9;
    v56 = v8;
    v51 = v7;
    v13 = v5;
    v14 = v2;
    v15 = a1;
    v16 = sub_1BA1BFAE8();
    if (qword_1ED5AFB58 != -1)
      swift_once();
    v17 = sub_1BA20243C();
    __swift_project_value_buffer(v17, (uint64_t)qword_1ED5B08D0);
    swift_bridgeObjectRetain();
    v18 = sub_1BA202424();
    v19 = sub_1BA20267C();
    v20 = os_log_type_enabled(v18, v19);
    v52 = v16;
    if (v20)
    {
      v21 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v21 = 134217984;
      aBlock[0] = *(_QWORD *)(v52 + 16);
      sub_1BA2026E8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BA1AE000, v18, v19, "Will notify %ld observer(s)", v21, 0xCu);
      v22 = v21;
      v16 = v52;
      MEMORY[0x1BCCD775C](v22, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease();
    }
    v26 = v11;
    v27 = objc_msgSend(a2, sel_originalRequest);
    v28 = objc_msgSend(a2, sel_selectedActionIdentifier);
    if (!v28)
    {
      sub_1BA202508();
      v28 = (id)sub_1BA2024FC();
      swift_bridgeObjectRelease();
    }
    v50 = v27;
    v58 = objc_msgSend(v27, sel_locateActionWithIdentifier_, v28);

    v29 = *(NSObject **)(v16 + 16);
    v30 = v14;
    v31 = v51;
    v32 = v26;
    v33 = v15;
    if (v29)
    {
      v34 = v13;
      v53 = sub_1BA1C1078(0, (unint64_t *)&qword_1ED5AF230);
      v35 = (__int128 *)(v52 + 32);
      do
      {
        v61 = v29;
        v36 = *v35++;
        v59 = v36;
        swift_unknownObjectRetain();
        v60 = sub_1BA2026AC();
        v37 = swift_allocObject();
        *(_OWORD *)(v37 + 16) = v59;
        v38 = v58;
        *(_QWORD *)(v37 + 32) = v30;
        *(_QWORD *)(v37 + 40) = v38;
        *(_QWORD *)(v37 + 48) = v54;
        aBlock[4] = sub_1BA20042C;
        aBlock[5] = v37;
        aBlock[0] = MEMORY[0x1E0C809B0];
        aBlock[1] = 1107296256;
        aBlock[2] = sub_1BA1FAB1C;
        aBlock[3] = &block_descriptor_23;
        v39 = v30;
        v40 = _Block_copy(aBlock);
        v41 = v33;
        swift_unknownObjectRetain();
        v42 = v39;
        v43 = v38;
        swift_release();
        sub_1BA202478();
        aBlock[0] = MEMORY[0x1E0DEE9D8];
        sub_1BA1CA990();
        sub_1BA1B9050(0, &qword_1ED5AF520, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
        sub_1BA1CA9D8();
        v44 = v56;
        sub_1BA20270C();
        v45 = (void *)v60;
        MEMORY[0x1BCCD6F70](0, v32, v31, v40);
        v46 = v40;
        v30 = v39;
        v47 = v61;
        _Block_release(v46);
        v48 = v55;
        swift_unknownObjectRelease();

        (*(void (**)(char *, uint64_t))(v57 + 8))(v31, v34);
        (*(void (**)(char *, uint64_t))(v48 + 8))(v32, v44);
        v29 = ((char *)v47 - 1);
      }
      while (v29);
    }

    swift_bridgeObjectRelease();
  }
  else
  {
    if (qword_1ED5AFB58 != -1)
      swift_once();
    v23 = sub_1BA20243C();
    __swift_project_value_buffer(v23, (uint64_t)qword_1ED5B08D0);
    v61 = sub_1BA202424();
    v24 = sub_1BA202670();
    if (os_log_type_enabled(v61, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v25 = 0;
      _os_log_impl(&dword_1BA1AE000, v61, v24, "messageViewController didSelectActionWith error: Received invalid type of controller", v25, 2u);
      MEMORY[0x1BCCD775C](v25, -1, -1);
    }

  }
}

uint64_t sub_1BA1FF304(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t ObjectType;
  void (*v10)(_QWORD *, uint64_t, char *, uint64_t, uint64_t);
  id v11;
  char v13;
  _QWORD v14[5];

  ObjectType = swift_getObjectType();
  v14[4] = &protocol witness table for EngagementInlineViewManager;
  v14[3] = type metadata accessor for EngagementInlineViewManager();
  v14[0] = a3;
  v13 = *(_BYTE *)(a5 + OBJC_IVAR____TtC14NewsEngagement36EngagementInlineDialogViewController_placement);
  v10 = *(void (**)(_QWORD *, uint64_t, char *, uint64_t, uint64_t))(a2 + 16);
  v11 = a3;
  v10(v14, a4, &v13, ObjectType, a2);
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v14);
}

void EngagementInlineViewManager.messageViewController(_:didFailWithError:)(void *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  os_log_type_t v8;
  uint8_t *v9;
  id v10;
  id v11;
  NSObject *oslog;
  unsigned __int8 v13;
  _QWORD v14[2];
  char v15;

  type metadata accessor for EngagementInlineDialogViewController();
  v4 = swift_dynamicCastClass();
  if (v4)
  {
    v5 = v4;
    if (a2)
    {
      v6 = a2;
    }
    else
    {
      sub_1BA20043C();
      v6 = (void *)swift_allocError();
    }
    v14[0] = v6;
    v14[1] = 0;
    v15 = 1;
    v13 = *(_BYTE *)(v5 + OBJC_IVAR____TtC14NewsEngagement36EngagementInlineDialogViewController_placement);
    v10 = a1;
    v11 = a2;
    sub_1BA1FD700((uint64_t)v14, &v13);

  }
  else
  {
    if (qword_1ED5AFB58 != -1)
      swift_once();
    v7 = sub_1BA20243C();
    __swift_project_value_buffer(v7, (uint64_t)qword_1ED5B08D0);
    oslog = sub_1BA202424();
    v8 = sub_1BA202670();
    if (os_log_type_enabled(oslog, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v9 = 0;
      _os_log_impl(&dword_1BA1AE000, oslog, v8, "messageViewController didFailWithError error: Received invalid type of controller", v9, 2u);
      MEMORY[0x1BCCD775C](v9, -1, -1);
    }

  }
}

void EngagementInlineViewManager.messageViewController(_:didLoad:)(void *a1, void *a2)
{
  uint64_t v4;
  char *v5;
  id v6;
  id v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  uint64_t v14;
  os_log_type_t v15;
  uint8_t *v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  NSObject *oslog;
  __int128 v22;
  char v23;
  __int128 v24;
  __int128 v25;

  type metadata accessor for EngagementInlineDialogViewController();
  v4 = swift_dynamicCastClass();
  if (v4)
  {
    v5 = (char *)v4;
    v6 = a1;
    v7 = objc_msgSend(a2, sel_metricsEvent);
    v8 = MEMORY[0x1E0DEE9B8];
    if (v7)
    {
      v9 = v7;
      v10 = objc_msgSend(v7, sel_underlyingDictionary);

      v11 = sub_1BA2024D8();
      *(_QWORD *)&v24 = 0x496567617373656DLL;
      *((_QWORD *)&v24 + 1) = 0xE900000000000064;
      sub_1BA20273C();
      if (*(_QWORD *)(v11 + 16) && (v12 = sub_1BA1CE30C((uint64_t)&v22), (v13 & 1) != 0))
      {
        sub_1BA1B9D7C(*(_QWORD *)(v11 + 56) + 32 * v12, (uint64_t)&v24);
      }
      else
      {
        v24 = 0u;
        v25 = 0u;
      }
      swift_bridgeObjectRelease();
      sub_1BA1CEC88((uint64_t)&v22);
      if (*((_QWORD *)&v25 + 1))
      {
        v17 = swift_dynamicCast();
        v19 = *((_QWORD *)&v22 + 1);
        v18 = v22;
        if (!v17)
        {
          v18 = 0;
          v19 = 0;
        }
        goto LABEL_17;
      }
    }
    else
    {
      v24 = 0u;
      v25 = 0u;
    }
    sub_1BA1B900C((uint64_t)&v24, (unint64_t *)&qword_1ED5AF5B0, v8 + 8);
    v18 = 0;
    v19 = 0;
LABEL_17:
    v20 = &v5[OBJC_IVAR____TtC14NewsEngagement36EngagementInlineDialogViewController_messageID];
    *(_QWORD *)v20 = v18;
    *((_QWORD *)v20 + 1) = v19;
    swift_bridgeObjectRelease();
    v22 = xmmword_1BA206450;
    v23 = 2;
    sub_1BA1FB95C(v5, (uint64_t)&v22);

    return;
  }
  if (qword_1ED5AFB58 != -1)
    swift_once();
  v14 = sub_1BA20243C();
  __swift_project_value_buffer(v14, (uint64_t)qword_1ED5B08D0);
  oslog = sub_1BA202424();
  v15 = sub_1BA202670();
  if (os_log_type_enabled(oslog, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v16 = 0;
    _os_log_impl(&dword_1BA1AE000, oslog, v15, "messageViewController didLoad error: Received invalid type of controller", v16, 2u);
    MEMORY[0x1BCCD775C](v16, -1, -1);
  }

}

double sub_1BA1FF910@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v5;
  char v6;
  unint64_t v7;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  double result;
  uint64_t v11;

  v3 = v2;
  v5 = sub_1BA1B0EC8(a1);
  if ((v6 & 1) != 0)
  {
    v7 = v5;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v9 = *v2;
    v11 = *v3;
    *v3 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1BA1F9694();
      v9 = v11;
    }
    sub_1BA1B0D38(*(_QWORD *)(v9 + 56) + 16 * v7, (uint64_t)a2);
    sub_1BA2018B4(v7, v9);
    *v3 = v9;
    swift_bridgeObjectRelease();
  }
  else
  {
    result = 0.0;
    *a2 = xmmword_1BA203750;
  }
  return result;
}

void sub_1BA1FF9B4(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  unsigned __int8 *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  char v13;
  id v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;

  swift_beginAccess();
  v6 = *(_QWORD *)(a1 + 24);
  if (!*(_QWORD *)(v6 + 16))
    goto LABEL_5;
  v7 = sub_1BA1B9DB8(a2);
  if ((v8 & 1) == 0)
    goto LABEL_5;
  v9 = (unsigned __int8 *)(*(_QWORD *)(v6 + 56) + 40 * v7);
  v10 = *v9;
  v11 = (void *)*((_QWORD *)v9 + 2);
  v12 = *((_QWORD *)v9 + 3);
  v13 = v9[32];
  v14 = *((id *)v9 + 1);
  sub_1BA1C2628(v11, v12, v13);
  if (v14)
  {
    swift_endAccess();
    v15 = (char *)v14;
    sub_1BA200334(v10, v14, v11, v12, v13);
    v17 = *(_QWORD *)&v15[OBJC_IVAR____TtC14NewsEngagement36EngagementInlineDialogViewController_identifier];
    v16 = *(_QWORD *)&v15[OBJC_IVAR____TtC14NewsEngagement36EngagementInlineDialogViewController_identifier + 8];
    swift_bridgeObjectRetain();

    *a3 = v17;
    a3[1] = v16;
  }
  else
  {
LABEL_5:
    swift_endAccess();
    *a3 = 0;
    a3[1] = 0;
  }
}

void sub_1BA1FFAB8(_QWORD *a1@<X8>)
{
  uint64_t v1;

  sub_1BA1FF9B4(*(_QWORD *)(v1 + 16), *(unsigned __int8 *)(v1 + 24), a1);
}

void sub_1BA1FFAC4(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  unsigned __int8 *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  char v13;
  id v14;
  _BYTE *v15;
  char v16;

  swift_beginAccess();
  v6 = *(_QWORD *)(a1 + 24);
  if (!*(_QWORD *)(v6 + 16))
    goto LABEL_5;
  v7 = sub_1BA1B9DB8(a2);
  if ((v8 & 1) == 0)
    goto LABEL_5;
  v9 = (unsigned __int8 *)(*(_QWORD *)(v6 + 56) + 40 * v7);
  v10 = *v9;
  v11 = (void *)*((_QWORD *)v9 + 2);
  v12 = *((_QWORD *)v9 + 3);
  v13 = v9[32];
  v14 = *((id *)v9 + 1);
  sub_1BA1C2628(v11, v12, v13);
  if (v14)
  {
    swift_endAccess();
    v15 = v14;
    sub_1BA200334(v10, v14, v11, v12, v13);
    v16 = v15[OBJC_IVAR____TtC14NewsEngagement36EngagementInlineDialogViewController_source];

  }
  else
  {
LABEL_5:
    swift_endAccess();
    v16 = 4;
  }
  *a3 = v16;
}

void sub_1BA1FFBBC(char *a1@<X8>)
{
  uint64_t v1;

  sub_1BA1FFAC4(*(_QWORD *)(v1 + 16), *(unsigned __int8 *)(v1 + 24), a1);
}

void sub_1BA1FFBC8(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char v10;
  unsigned __int8 *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  char v15;
  id v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;

  swift_beginAccess();
  v8 = *(_QWORD *)(a1 + 24);
  if (!*(_QWORD *)(v8 + 16))
    goto LABEL_5;
  v9 = sub_1BA1B9DB8(a2);
  if ((v10 & 1) == 0)
    goto LABEL_5;
  v11 = (unsigned __int8 *)(*(_QWORD *)(v8 + 56) + 40 * v9);
  v12 = *v11;
  v13 = (void *)*((_QWORD *)v11 + 2);
  v14 = *((_QWORD *)v11 + 3);
  v15 = v11[32];
  v16 = *((id *)v11 + 1);
  sub_1BA1C2628(v13, v14, v15);
  if (v16)
  {
    swift_endAccess();
    v17 = (char *)v16;
    sub_1BA200334(v12, v16, v13, v14, v15);
    v18 = &v17[*a3];
    v20 = *(_QWORD *)v18;
    v19 = *((_QWORD *)v18 + 1);
    swift_bridgeObjectRetain();

    *a4 = v20;
    a4[1] = v19;
  }
  else
  {
LABEL_5:
    swift_endAccess();
    *a4 = 0;
    a4[1] = 0;
  }
}

void sub_1BA1FFCC8(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  unsigned __int8 *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  char v13;
  id v14;
  _BYTE *v15;
  char v16;

  swift_beginAccess();
  v6 = *(_QWORD *)(a1 + 24);
  if (!*(_QWORD *)(v6 + 16))
    goto LABEL_5;
  v7 = sub_1BA1B9DB8(a2);
  if ((v8 & 1) == 0)
    goto LABEL_5;
  v9 = (unsigned __int8 *)(*(_QWORD *)(v6 + 56) + 40 * v7);
  v10 = *v9;
  v11 = (void *)*((_QWORD *)v9 + 2);
  v12 = *((_QWORD *)v9 + 3);
  v13 = v9[32];
  v14 = *((id *)v9 + 1);
  sub_1BA1C2628(v11, v12, v13);
  if (v14)
  {
    swift_endAccess();
    v15 = v14;
    sub_1BA200334(v10, v14, v11, v12, v13);
    v16 = v15[OBJC_IVAR____TtC14NewsEngagement36EngagementInlineDialogViewController_offer];

  }
  else
  {
LABEL_5:
    swift_endAccess();
    v16 = 3;
  }
  *a3 = v16;
}

void sub_1BA1FFDC0(char *a1@<X8>)
{
  uint64_t v1;

  sub_1BA1FFCC8(*(_QWORD *)(v1 + 16), *(unsigned __int8 *)(v1 + 24), a1);
}

void sub_1BA1FFDCC(_QWORD *a1@<X8>)
{
  uint64_t v1;

  sub_1BA1FFBC8(*(_QWORD *)(v1 + 16), *(unsigned __int8 *)(v1 + 24), &OBJC_IVAR____TtC14NewsEngagement36EngagementInlineDialogViewController_messageID, a1);
}

void sub_1BA1FFDF0(_QWORD *a1@<X8>)
{
  uint64_t v1;

  sub_1BA1FFBC8(*(_QWORD *)(v1 + 16), *(unsigned __int8 *)(v1 + 24), &OBJC_IVAR____TtC14NewsEngagement36EngagementInlineDialogViewController_trigger, a1);
}

uint64_t sub_1BA1FFE14()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1BA1FFE4C()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1BA1FFE70()
{
  uint64_t v0;

}

uint64_t block_destroy_helper_5()
{
  return swift_release();
}

void sub_1BA1FFEA0(id a1, uint64_t a2, char a3)
{
  if (a3 != -1)
    sub_1BA1C263C(a1, a2, a3);
}

uint64_t sub_1BA1FFEB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_1BA1B9DB8(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v9 = *v3;
    v15 = *v3;
    *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1BA1F80B4();
      v9 = v15;
    }
    v10 = *(_QWORD *)(v9 + 56);
    v11 = sub_1BA202184();
    v12 = *(_QWORD *)(v11 - 8);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v12 + 32))(a2, v10 + *(_QWORD *)(v12 + 72) * v6, v11);
    sub_1BA2008A0(v6, v9);
    *v3 = v9;
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v12 + 56))(a2, 0, 1, v11);
  }
  else
  {
    v14 = sub_1BA202184();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(a2, 1, 1, v14);
  }
}

double sub_1BA1FFFCC@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  double result;
  uint64_t v11;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_1BA1CE30C(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v9 = *v3;
    v11 = *v3;
    *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1BA1F82CC();
      v9 = v11;
    }
    sub_1BA1CEC88(*(_QWORD *)(v9 + 48) + 40 * v6);
    sub_1BA1B43D0((_OWORD *)(*(_QWORD *)(v9 + 56) + 32 * v6), a2);
    sub_1BA200D7C(v6, v9);
    *v3 = v9;
    swift_bridgeObjectRelease();
  }
  else
  {
    result = 0.0;
    *a2 = 0u;
    a2[1] = 0u;
  }
  return result;
}

uint64_t sub_1BA2000B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  uint64_t result;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_1BA1B9DB8(a1);
  LOBYTE(a1) = v7;
  result = swift_bridgeObjectRelease();
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v10 = *v3;
    v13 = *v3;
    *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1BA1F84D0();
      v10 = v13;
    }
    v11 = *(_QWORD *)(v10 + 56) + 16 * v6;
    v12 = *(_QWORD *)v11;
    LOBYTE(v11) = *(_BYTE *)(v11 + 8);
    *(_QWORD *)a2 = v12;
    *(_BYTE *)(a2 + 8) = v11;
    sub_1BA200F44(v6, v10);
    *v3 = v10;
    return swift_bridgeObjectRelease();
  }
  else
  {
    *(_QWORD *)a2 = 0;
    *(_BYTE *)(a2 + 8) = -1;
  }
  return result;
}

uint64_t sub_1BA200188(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  unint64_t v4;
  char v5;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v2 = v1;
  swift_bridgeObjectRetain();
  v4 = sub_1BA1B9DB8(a1);
  LOBYTE(a1) = v5;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v7 = *v2;
  v10 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1BA1F8694();
    v7 = v10;
  }
  v8 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v4);
  sub_1BA201400(v4, v7);
  *v2 = v7;
  swift_bridgeObjectRelease();
  return v8;
}

double sub_1BA20023C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  double result;
  uint64_t v14;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_1BA1B9DB8(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v9 = *v3;
    v14 = *v3;
    *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1BA1F9870();
      v9 = v14;
    }
    v10 = *(_QWORD *)(v9 + 56) + 40 * v6;
    v11 = *(_QWORD *)(v10 + 8);
    v12 = *(_BYTE *)(v10 + 32);
    *(_BYTE *)a2 = *(_BYTE *)v10;
    *(_QWORD *)(a2 + 8) = v11;
    *(_OWORD *)(a2 + 16) = *(_OWORD *)(v10 + 16);
    *(_BYTE *)(a2 + 32) = v12;
    sub_1BA201A70(v6, v9);
    *v3 = v9;
    swift_bridgeObjectRelease();
  }
  else
  {
    *(_BYTE *)(a2 + 32) = 0;
    result = 0.0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return result;
}

void sub_1BA200334(uint64_t a1, void *a2, void *a3, uint64_t a4, char a5)
{
  if (a2)
  {

    sub_1BA1C263C(a3, a4, a5);
  }
}

id sub_1BA200378(id result, uint64_t a2, char a3)
{
  if (a3 != -1)
    return sub_1BA1C2628(result, a2, a3);
  return result;
}

uint64_t sub_1BA20038C()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BA2003B0()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

void sub_1BA2003DC()
{
  uint64_t v0;

  sub_1BA1FD1C4(*(void **)(v0 + 16), *(_BYTE *)(v0 + 32), *(_QWORD *)(v0 + 40), *(double *)(v0 + 24));
}

uint64_t sub_1BA2003F0()
{
  id *v0;

  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1BA20042C()
{
  uint64_t v0;

  return sub_1BA1FF304(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
}

unint64_t sub_1BA20043C()
{
  unint64_t result;

  result = qword_1EF279AE0;
  if (!qword_1EF279AE0)
  {
    result = MEMORY[0x1BCCD76CC](&unk_1BA2063E8, &type metadata for EngagementInlineViewManagerError);
    atomic_store(result, (unint64_t *)&qword_1EF279AE0);
  }
  return result;
}

uint64_t dispatch thunk of EngagementInlineViewManagerType.addPlacement(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of EngagementInlineViewManagerType.removePlacement(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of EngagementInlineViewManagerType.removeObserver(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t dispatch thunk of EngagementInlineViewManagerType.identifier(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of EngagementInlineViewManagerType.source(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t dispatch thunk of EngagementInlineViewManagerType.messageID(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 64))();
}

uint64_t dispatch thunk of EngagementInlineViewManagerType.offer(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 72))();
}

uint64_t dispatch thunk of EngagementInlineViewManagerType.view(for:width:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(a5 + 80))(a1, a2, a3 & 1);
}

{
  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(a5 + 88))(a1, a2, a3 & 1);
}

uint64_t dispatch thunk of EngagementInlineViewManagerType.triggerAction(_:for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 96))();
}

uint64_t dispatch thunk of EngagementInlineViewManagerType.placementVisibility(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 104))();
}

uint64_t method lookup function for EngagementInlineViewManager()
{
  return swift_lookUpClassMethod();
}

void destroy for EngagementInlineViewManager.Placement(uint64_t a1)
{

  sub_1BA1C263C(*(id *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
}

uint64_t initializeWithCopy for EngagementInlineViewManager.Placement(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  uint64_t v5;
  char v6;
  id v7;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(void **)(a2 + 8);
  v4 = *(void **)(a2 + 16);
  *(_QWORD *)(a1 + 8) = v3;
  v5 = *(_QWORD *)(a2 + 24);
  v6 = *(_BYTE *)(a2 + 32);
  v7 = v3;
  sub_1BA1C2628(v4, v5, v6);
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_BYTE *)(a1 + 32) = v6;
  return a1;
}

uint64_t assignWithCopy for EngagementInlineViewManager.Placement(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v4;
  void *v5;
  id v6;
  void *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  char v11;

  v2 = a2;
  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  v6 = v4;

  v7 = *(void **)(v2 + 16);
  v8 = *(_QWORD *)(v2 + 24);
  LOBYTE(v2) = *(_BYTE *)(v2 + 32);
  sub_1BA1C2628(v7, v8, v2);
  v9 = *(void **)(a1 + 16);
  v10 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = v7;
  *(_QWORD *)(a1 + 24) = v8;
  v11 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v2;
  sub_1BA1C263C(v9, v10, v11);
  return a1;
}

__n128 __swift_memcpy33_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for EngagementInlineViewManager.Placement(uint64_t a1, uint64_t a2)
{
  void *v4;
  char v5;
  void *v6;
  uint64_t v7;
  char v8;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);

  v5 = *(_BYTE *)(a2 + 32);
  v6 = *(void **)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  v8 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v5;
  sub_1BA1C263C(v6, v7, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for EngagementInlineViewManager.Placement(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 33))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for EngagementInlineViewManager.Placement(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 33) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for EngagementInlineViewManager.Placement()
{
  return &type metadata for EngagementInlineViewManager.Placement;
}

uint64_t storeEnumTagSinglePayload for EngagementInlineViewManagerError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BA200730 + 4 * byte_1BA206226[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BA200750 + 4 * byte_1BA20622B[v4]))();
}

_BYTE *sub_1BA200730(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BA200750(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BA200758(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BA200760(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BA200768(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BA200770(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for EngagementInlineViewManagerError()
{
  return &type metadata for EngagementInlineViewManagerError;
}

uint64_t initializeWithCopy for EngagementInlineViewManager.Observation(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = swift_unknownObjectWeakCopyInit();
  *(_QWORD *)(result + 8) = *(_QWORD *)(a2 + 8);
  return result;
}

uint64_t assignWithCopy for EngagementInlineViewManager.Observation(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = swift_unknownObjectWeakCopyAssign();
  *(_QWORD *)(result + 8) = *(_QWORD *)(a2 + 8);
  return result;
}

uint64_t assignWithTake for EngagementInlineViewManager.Observation(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = swift_unknownObjectWeakTakeAssign();
  *(_QWORD *)(result + 8) = *(_QWORD *)(a2 + 8);
  return result;
}

uint64_t storeEnumTagSinglePayload for EngagementInlineViewManager.Observation(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      *(_QWORD *)(result + 8) = 1;
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for EngagementInlineViewManager.Observation()
{
  return &type metadata for EngagementInlineViewManager.Observation;
}

unint64_t sub_1BA20085C()
{
  unint64_t result;

  result = qword_1EF279AE8;
  if (!qword_1EF279AE8)
  {
    result = MEMORY[0x1BCCD76CC](&unk_1BA206380, &type metadata for EngagementInlineViewManagerError);
    atomic_store(result, (unint64_t *)&qword_1EF279AE8);
  }
  return result;
}

unint64_t sub_1BA2008A0(unint64_t result, uint64_t a2)
{
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  v3 = result;
  v4 = a2 + 64;
  v5 = (result + 1) & ~(-1 << *(_BYTE *)(a2 + 32));
  if (((1 << v5) & *(_QWORD *)(a2 + 64 + 8 * (v5 >> 6))) != 0)
  {
    result = sub_1BA202718();
    if ((*(_QWORD *)(v4 + 8 * (v5 >> 6)) & (1 << v5)) != 0)
    {
      v6 = *(unsigned __int8 *)(*(_QWORD *)(a2 + 48) + v5);
      sub_1BA202A00();
      __asm { BR              X8 }
    }
    v7 = (uint64_t *)(v4 + 8 * (v3 >> 6));
    v8 = *v7;
    v9 = (-1 << v3) - 1;
  }
  else
  {
    v7 = (uint64_t *)(v4 + 8 * (result >> 6));
    v9 = *v7;
    v8 = (-1 << result) - 1;
  }
  *v7 = v9 & v8;
  v10 = *(_QWORD *)(a2 + 16);
  v11 = __OFSUB__(v10, 1);
  v12 = v10 - 1;
  if (v11)
  {
    __break(1u);
    JUMPOUT(0x1BA200D04);
  }
  *(_QWORD *)(a2 + 16) = v12;
  ++*(_DWORD *)(a2 + 36);
  return result;
}

unint64_t sub_1BA200D7C(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v14;
  unint64_t v15;
  __int128 *v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  _OWORD *v20;
  _OWORD *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  _BYTE v28[40];

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_1BA202718();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_1BA1CEC4C(*(_QWORD *)(a2 + 48) + 40 * v6, (uint64_t)v28);
        v10 = sub_1BA202724();
        result = sub_1BA1CEC88((uint64_t)v28);
        v11 = v10 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 >= v8 && v3 >= (uint64_t)v11)
          {
LABEL_16:
            v14 = *(_QWORD *)(a2 + 48);
            v15 = v14 + 40 * v3;
            v16 = (__int128 *)(v14 + 40 * v6);
            if (v3 != v6 || v15 >= (unint64_t)v16 + 40)
            {
              v17 = *v16;
              v18 = v16[1];
              *(_QWORD *)(v15 + 32) = *((_QWORD *)v16 + 4);
              *(_OWORD *)v15 = v17;
              *(_OWORD *)(v15 + 16) = v18;
            }
            v19 = *(_QWORD *)(a2 + 56);
            v20 = (_OWORD *)(v19 + 32 * v3);
            v21 = (_OWORD *)(v19 + 32 * v6);
            if (v3 != v6 || (v3 = v6, v20 >= v21 + 2))
            {
              v9 = v21[1];
              *v20 = *v21;
              v20[1] = v9;
              v3 = v6;
            }
          }
        }
        else if (v11 >= v8 || v3 >= (uint64_t)v11)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v22 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v23 = *v22;
    v24 = (-1 << v3) - 1;
  }
  else
  {
    v22 = (uint64_t *)(v4 + 8 * (result >> 6));
    v24 = *v22;
    v23 = (-1 << result) - 1;
  }
  *v22 = v24 & v23;
  v25 = *(_QWORD *)(a2 + 16);
  v26 = __OFSUB__(v25, 1);
  v27 = v25 - 1;
  if (v26)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v27;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1BA200F44(unint64_t result, uint64_t a2)
{
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  v3 = result;
  v4 = a2 + 64;
  v5 = (result + 1) & ~(-1 << *(_BYTE *)(a2 + 32));
  if (((1 << v5) & *(_QWORD *)(a2 + 64 + 8 * (v5 >> 6))) != 0)
  {
    result = sub_1BA202718();
    if ((*(_QWORD *)(v4 + 8 * (v5 >> 6)) & (1 << v5)) != 0)
    {
      v6 = *(unsigned __int8 *)(*(_QWORD *)(a2 + 48) + v5);
      sub_1BA202A00();
      __asm { BR              X8 }
    }
    v7 = (uint64_t *)(v4 + 8 * (v3 >> 6));
    v8 = *v7;
    v9 = (-1 << v3) - 1;
  }
  else
  {
    v7 = (uint64_t *)(v4 + 8 * (result >> 6));
    v9 = *v7;
    v8 = (-1 << result) - 1;
  }
  *v7 = v9 & v8;
  v10 = *(_QWORD *)(a2 + 16);
  v11 = __OFSUB__(v10, 1);
  v12 = v10 - 1;
  if (v11)
  {
    __break(1u);
    JUMPOUT(0x1BA201388);
  }
  *(_QWORD *)(a2 + 16) = v12;
  ++*(_DWORD *)(a2 + 36);
  return result;
}

unint64_t sub_1BA201400(unint64_t result, uint64_t a2)
{
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  v3 = result;
  v4 = a2 + 64;
  v5 = (result + 1) & ~(-1 << *(_BYTE *)(a2 + 32));
  if (((1 << v5) & *(_QWORD *)(a2 + 64 + 8 * (v5 >> 6))) != 0)
  {
    result = sub_1BA202718();
    if ((*(_QWORD *)(v4 + 8 * (v5 >> 6)) & (1 << v5)) != 0)
    {
      v6 = *(unsigned __int8 *)(*(_QWORD *)(a2 + 48) + v5);
      sub_1BA202A00();
      __asm { BR              X8 }
    }
    v7 = (uint64_t *)(v4 + 8 * (v3 >> 6));
    v8 = *v7;
    v9 = (-1 << v3) - 1;
  }
  else
  {
    v7 = (uint64_t *)(v4 + 8 * (result >> 6));
    v9 = *v7;
    v8 = (-1 << result) - 1;
  }
  *v7 = v9 & v8;
  v10 = *(_QWORD *)(a2 + 16);
  v11 = __OFSUB__(v10, 1);
  v12 = v10 - 1;
  if (v11)
  {
    __break(1u);
    JUMPOUT(0x1BA20183CLL);
  }
  *(_QWORD *)(a2 + 16) = v12;
  ++*(_DWORD *)(a2 + 36);
  return result;
}

unint64_t sub_1BA2018B4(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  unint64_t v11;
  _QWORD *v14;
  uint64_t v15;
  BOOL v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_1BA202718();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v9 = *(_QWORD *)(a2 + 48);
        v10 = (_QWORD *)(v9 + 8 * v6);
        result = sub_1BA2029F4();
        v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8 || v3 < (uint64_t)v11)
            goto LABEL_6;
        }
        else if (v11 < v8 && v3 < (uint64_t)v11)
        {
          goto LABEL_6;
        }
        v14 = (_QWORD *)(v9 + 8 * v3);
        if (v3 != v6 || v14 >= v10 + 1)
          *v14 = *v10;
        v15 = *(_QWORD *)(a2 + 56);
        result = v15 + 16 * v3;
        if (v3 < (uint64_t)v6 || result >= v15 + 16 * v6 + 16)
        {
          result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          v16 = v3 == v6;
          v3 = v6;
          if (v16)
            goto LABEL_6;
          result = swift_arrayInitWithTakeBackToFront();
        }
        v3 = v6;
LABEL_6:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v18 = *v17;
    v19 = (-1 << v3) - 1;
  }
  else
  {
    v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    v19 = *v17;
    v18 = (-1 << result) - 1;
  }
  *v17 = v19 & v18;
  v20 = *(_QWORD *)(a2 + 16);
  v21 = __OFSUB__(v20, 1);
  v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1BA201A70(unint64_t result, uint64_t a2)
{
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  v3 = result;
  v4 = a2 + 64;
  v5 = (result + 1) & ~(-1 << *(_BYTE *)(a2 + 32));
  if (((1 << v5) & *(_QWORD *)(a2 + 64 + 8 * (v5 >> 6))) != 0)
  {
    result = sub_1BA202718();
    if ((*(_QWORD *)(v4 + 8 * (v5 >> 6)) & (1 << v5)) != 0)
    {
      v6 = *(unsigned __int8 *)(*(_QWORD *)(a2 + 48) + v5);
      sub_1BA202A00();
      __asm { BR              X8 }
    }
    v7 = (uint64_t *)(v4 + 8 * (v3 >> 6));
    v8 = *v7;
    v9 = (-1 << v3) - 1;
  }
  else
  {
    v7 = (uint64_t *)(v4 + 8 * (result >> 6));
    v9 = *v7;
    v8 = (-1 << result) - 1;
  }
  *v7 = v9 & v8;
  v10 = *(_QWORD *)(a2 + 16);
  v11 = __OFSUB__(v10, 1);
  v12 = v10 - 1;
  if (v11)
  {
    __break(1u);
    JUMPOUT(0x1BA201ECCLL);
  }
  *(_QWORD *)(a2 + 16) = v12;
  ++*(_DWORD *)(a2 + 36);
  return result;
}

uint64_t sub_1BA201F44(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA1B9050(0, &qword_1ED5AFF38, (uint64_t (*)(uint64_t))sub_1BA1C2924, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BA201FA0()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  if ((unint64_t)(*(_QWORD *)(v0 + 40) - 1) >= 0xA)
    swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BA201FE0()
{
  uint64_t v0;

  return sub_1BA1FDD48(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32), *(_QWORD *)(v0 + 40), *(_BYTE *)(v0 + 48), *(_BYTE *)(v0 + 49));
}

uint64_t sub_1BA201FF4()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  sub_1BA1C263C(*(id *)(v0 + 64), *(_QWORD *)(v0 + 72), *(_BYTE *)(v0 + 80));
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BA20203C()
{
  uint64_t v0;

  return sub_1BA1FD890(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32), v0 + 40);
}

uint64_t sub_1BA202088()
{
  return MEMORY[0x1E0CAE8A8]();
}

uint64_t sub_1BA202094()
{
  return MEMORY[0x1E0CAE8B8]();
}

uint64_t sub_1BA2020A0()
{
  return MEMORY[0x1E0CAE8D0]();
}

uint64_t sub_1BA2020AC()
{
  return MEMORY[0x1E0CAE8D8]();
}

uint64_t sub_1BA2020B8()
{
  return MEMORY[0x1E0CAE8F0]();
}

uint64_t sub_1BA2020C4()
{
  return MEMORY[0x1E0CAE8F8]();
}

uint64_t sub_1BA2020D0()
{
  return MEMORY[0x1E0CAE910]();
}

uint64_t sub_1BA2020DC()
{
  return MEMORY[0x1E0CAEE50]();
}

uint64_t sub_1BA2020E8()
{
  return MEMORY[0x1E0CAF328]();
}

uint64_t sub_1BA2020F4()
{
  return MEMORY[0x1E0CAF990]();
}

uint64_t sub_1BA202100()
{
  return MEMORY[0x1E0CAFE38]();
}

uint64_t sub_1BA20210C()
{
  return MEMORY[0x1E0CAFF90]();
}

uint64_t sub_1BA202118()
{
  return MEMORY[0x1E0CAFFF8]();
}

uint64_t sub_1BA202124()
{
  return MEMORY[0x1E0CB0088]();
}

uint64_t sub_1BA202130()
{
  return MEMORY[0x1E0CB0140]();
}

uint64_t sub_1BA20213C()
{
  return MEMORY[0x1E0CB0160]();
}

uint64_t sub_1BA202148()
{
  return MEMORY[0x1E0CB0188]();
}

uint64_t sub_1BA202154()
{
  return MEMORY[0x1E0CB01F0]();
}

uint64_t sub_1BA202160()
{
  return MEMORY[0x1E0CB0708]();
}

uint64_t sub_1BA20216C()
{
  return MEMORY[0x1E0CB07F8]();
}

uint64_t sub_1BA202178()
{
  return MEMORY[0x1E0CB0860]();
}

uint64_t sub_1BA202184()
{
  return MEMORY[0x1E0CB0870]();
}

uint64_t sub_1BA202190()
{
  return MEMORY[0x1E0CB0910]();
}

uint64_t sub_1BA20219C()
{
  return MEMORY[0x1E0CB0988]();
}

uint64_t sub_1BA2021A8()
{
  return MEMORY[0x1E0CB0998]();
}

uint64_t sub_1BA2021B4()
{
  return MEMORY[0x1E0DB54B0]();
}

uint64_t sub_1BA2021C0()
{
  return MEMORY[0x1E0DB54B8]();
}

uint64_t sub_1BA2021CC()
{
  return MEMORY[0x1E0DB54C0]();
}

uint64_t sub_1BA2021D8()
{
  return MEMORY[0x1E0DB54C8]();
}

uint64_t sub_1BA2021E4()
{
  return MEMORY[0x1E0DB54F8]();
}

uint64_t sub_1BA2021F0()
{
  return MEMORY[0x1E0DB57F0]();
}

uint64_t sub_1BA2021FC()
{
  return MEMORY[0x1E0DB5808]();
}

uint64_t sub_1BA202208()
{
  return MEMORY[0x1E0DB5818]();
}

uint64_t sub_1BA202214()
{
  return MEMORY[0x1E0DB5820]();
}

uint64_t sub_1BA202220()
{
  return MEMORY[0x1E0DB5858]();
}

uint64_t sub_1BA20222C()
{
  return MEMORY[0x1E0DB5860]();
}

uint64_t sub_1BA202238()
{
  return MEMORY[0x1E0DB5870]();
}

uint64_t sub_1BA202244()
{
  return MEMORY[0x1E0DB5878]();
}

uint64_t sub_1BA202250()
{
  return MEMORY[0x1E0DB5890]();
}

uint64_t sub_1BA20225C()
{
  return MEMORY[0x1E0DB3070]();
}

uint64_t sub_1BA202268()
{
  return MEMORY[0x1E0DB31E0]();
}

uint64_t sub_1BA202274()
{
  return MEMORY[0x1E0DB31E8]();
}

uint64_t sub_1BA202280()
{
  return MEMORY[0x1E0DB31F0]();
}

uint64_t sub_1BA20228C()
{
  return MEMORY[0x1E0DB31F8]();
}

uint64_t sub_1BA202298()
{
  return MEMORY[0x1E0DB3210]();
}

uint64_t sub_1BA2022A4()
{
  return MEMORY[0x1E0DB3220]();
}

uint64_t sub_1BA2022B0()
{
  return MEMORY[0x1E0DB35E8]();
}

uint64_t sub_1BA2022BC()
{
  return MEMORY[0x1E0DB35F0]();
}

uint64_t sub_1BA2022C8()
{
  return MEMORY[0x1E0DB36F0]();
}

uint64_t sub_1BA2022D4()
{
  return MEMORY[0x1E0DB38A8]();
}

uint64_t sub_1BA2022E0()
{
  return MEMORY[0x1E0DB38B0]();
}

uint64_t sub_1BA2022EC()
{
  return MEMORY[0x1E0DB38B8]();
}

uint64_t sub_1BA2022F8()
{
  return MEMORY[0x1E0DB3AC0]();
}

uint64_t sub_1BA202304()
{
  return MEMORY[0x1E0DB3AC8]();
}

uint64_t sub_1BA202310()
{
  return MEMORY[0x1E0DB4100]();
}

uint64_t sub_1BA20231C()
{
  return MEMORY[0x1E0DB4120]();
}

uint64_t sub_1BA202328()
{
  return MEMORY[0x1E0DB43A8]();
}

uint64_t sub_1BA202334()
{
  return MEMORY[0x1E0DB43B0]();
}

uint64_t sub_1BA202340()
{
  return MEMORY[0x1E0DB43B8]();
}

uint64_t sub_1BA20234C()
{
  return MEMORY[0x1E0DB45C8]();
}

uint64_t sub_1BA202358()
{
  return MEMORY[0x1E0DB46B8]();
}

uint64_t sub_1BA202364()
{
  return MEMORY[0x1E0DB4928]();
}

uint64_t sub_1BA202370()
{
  return MEMORY[0x1E0DB4958]();
}

uint64_t sub_1BA20237C()
{
  return MEMORY[0x1E0DB4960]();
}

uint64_t sub_1BA202388()
{
  return MEMORY[0x1E0DB4970]();
}

uint64_t sub_1BA202394()
{
  return MEMORY[0x1E0DB49A8]();
}

uint64_t sub_1BA2023A0()
{
  return MEMORY[0x1E0DB49B8]();
}

uint64_t sub_1BA2023AC()
{
  return MEMORY[0x1E0DB49C0]();
}

uint64_t sub_1BA2023B8()
{
  return MEMORY[0x1E0DB49E8]();
}

uint64_t sub_1BA2023C4()
{
  return MEMORY[0x1E0DB49F0]();
}

uint64_t sub_1BA2023D0()
{
  return MEMORY[0x1E0DB4A20]();
}

uint64_t sub_1BA2023DC()
{
  return MEMORY[0x1E0DB4C58]();
}

uint64_t sub_1BA2023E8()
{
  return MEMORY[0x1E0DB4DA0]();
}

uint64_t sub_1BA2023F4()
{
  return MEMORY[0x1E0DB4DA8]();
}

uint64_t sub_1BA202400()
{
  return MEMORY[0x1E0DB4DC8]();
}

uint64_t sub_1BA20240C()
{
  return MEMORY[0x1E0DB4E08]();
}

uint64_t sub_1BA202418()
{
  return MEMORY[0x1E0DB50E8]();
}

uint64_t sub_1BA202424()
{
  return MEMORY[0x1E0DF2240]();
}

uint64_t sub_1BA202430()
{
  return MEMORY[0x1E0DF2248]();
}

uint64_t sub_1BA20243C()
{
  return MEMORY[0x1E0DF2258]();
}

uint64_t sub_1BA202448()
{
  return MEMORY[0x1E0DBC9F0]();
}

uint64_t sub_1BA202454()
{
  return MEMORY[0x1E0DBCA00]();
}

uint64_t sub_1BA202460()
{
  return MEMORY[0x1E0DC29B8]();
}

uint64_t sub_1BA20246C()
{
  return MEMORY[0x1E0DEF4F8]();
}

uint64_t sub_1BA202478()
{
  return MEMORY[0x1E0DEF578]();
}

uint64_t sub_1BA202484()
{
  return MEMORY[0x1E0DEF5B0]();
}

uint64_t sub_1BA202490()
{
  return MEMORY[0x1E0DEF698]();
}

uint64_t sub_1BA20249C()
{
  return MEMORY[0x1E0DEF6B8]();
}

uint64_t sub_1BA2024A8()
{
  return MEMORY[0x1E0DEF748]();
}

uint64_t sub_1BA2024B4()
{
  return MEMORY[0x1E0DEF758]();
}

uint64_t sub_1BA2024C0()
{
  return MEMORY[0x1E0DEF778]();
}

uint64_t sub_1BA2024CC()
{
  return MEMORY[0x1E0CB17D8]();
}

uint64_t sub_1BA2024D8()
{
  return MEMORY[0x1E0CB1808]();
}

uint64_t sub_1BA2024E4()
{
  return MEMORY[0x1E0DB5118]();
}

uint64_t sub_1BA2024F0()
{
  return MEMORY[0x1E0DEA048]();
}

uint64_t sub_1BA2024FC()
{
  return MEMORY[0x1E0CB1940]();
}

uint64_t sub_1BA202508()
{
  return MEMORY[0x1E0CB1980]();
}

uint64_t sub_1BA202514()
{
  return MEMORY[0x1E0CB1988]();
}

uint64_t sub_1BA202520()
{
  return MEMORY[0x1E0CB19E8]();
}

uint64_t sub_1BA20252C()
{
  return MEMORY[0x1E0CB1A18]();
}

uint64_t sub_1BA202538()
{
  return MEMORY[0x1E0DEA758]();
}

uint64_t sub_1BA202544()
{
  return MEMORY[0x1E0DEA800]();
}

uint64_t sub_1BA202550()
{
  return MEMORY[0x1E0DEA850]();
}

uint64_t sub_1BA20255C()
{
  return MEMORY[0x1E0DEA858]();
}

uint64_t sub_1BA202568()
{
  return MEMORY[0x1E0DEA870]();
}

uint64_t sub_1BA202574()
{
  return MEMORY[0x1E0DEA880]();
}

uint64_t sub_1BA202580()
{
  return MEMORY[0x1E0DEA908]();
}

uint64_t sub_1BA20258C()
{
  return MEMORY[0x1E0DB5960]();
}

uint64_t sub_1BA202598()
{
  return MEMORY[0x1E0DB5968]();
}

uint64_t sub_1BA2025A4()
{
  return MEMORY[0x1E0DB5970]();
}

uint64_t sub_1BA2025B0()
{
  return MEMORY[0x1E0DEACA0]();
}

uint64_t sub_1BA2025BC()
{
  return MEMORY[0x1E0DEAD18]();
}

uint64_t sub_1BA2025C8()
{
  return MEMORY[0x1E0DEADA0]();
}

uint64_t sub_1BA2025D4()
{
  return MEMORY[0x1E0CB1AC0]();
}

uint64_t sub_1BA2025E0()
{
  return MEMORY[0x1E0CB1AE8]();
}

uint64_t sub_1BA2025EC()
{
  return MEMORY[0x1E0DEADB0]();
}

uint64_t sub_1BA2025F8()
{
  return MEMORY[0x1E0DEADB8]();
}

uint64_t sub_1BA202604()
{
  return MEMORY[0x1E0DEADE8]();
}

uint64_t sub_1BA202610()
{
  return MEMORY[0x1E0DEAE58]();
}

uint64_t sub_1BA20261C()
{
  return MEMORY[0x1E0DEAEC8]();
}

uint64_t sub_1BA202628()
{
  return MEMORY[0x1E0DEAFE8]();
}

uint64_t sub_1BA202634()
{
  return MEMORY[0x1E0DEB030]();
}

uint64_t sub_1BA202640()
{
  return MEMORY[0x1E0CB1BB0]();
}

uint64_t sub_1BA20264C()
{
  return MEMORY[0x1E0DEB220]();
}

uint64_t sub_1BA202658()
{
  return MEMORY[0x1E0DEB258]();
}

uint64_t sub_1BA202664()
{
  return MEMORY[0x1E0DF2278]();
}

uint64_t sub_1BA202670()
{
  return MEMORY[0x1E0DF2280]();
}

uint64_t sub_1BA20267C()
{
  return MEMORY[0x1E0DF2290]();
}

uint64_t sub_1BA202688()
{
  return MEMORY[0x1E0DC2BF8]();
}

uint64_t sub_1BA202694()
{
  return MEMORY[0x1E0DB5368]();
}

uint64_t sub_1BA2026A0()
{
  return MEMORY[0x1E0DEF840]();
}

uint64_t sub_1BA2026AC()
{
  return MEMORY[0x1E0DEF8E8]();
}

uint64_t sub_1BA2026B8()
{
  return MEMORY[0x1E0DEF900]();
}

uint64_t sub_1BA2026C4()
{
  return MEMORY[0x1E0C9B9E8]();
}

uint64_t sub_1BA2026D0()
{
  return MEMORY[0x1E0DEB930]();
}

uint64_t sub_1BA2026DC()
{
  return MEMORY[0x1E0DEB940]();
}

uint64_t sub_1BA2026E8()
{
  return MEMORY[0x1E0DEBC20]();
}

uint64_t sub_1BA2026F4()
{
  return MEMORY[0x1E0DEBC90]();
}

uint64_t sub_1BA202700()
{
  return MEMORY[0x1E0DEBE50]();
}

uint64_t sub_1BA20270C()
{
  return MEMORY[0x1E0DEC060]();
}

uint64_t sub_1BA202718()
{
  return MEMORY[0x1E0DEC068]();
}

uint64_t sub_1BA202724()
{
  return MEMORY[0x1E0DEC168]();
}

uint64_t sub_1BA202730()
{
  return MEMORY[0x1E0DEC178]();
}

uint64_t sub_1BA20273C()
{
  return MEMORY[0x1E0DEC1B0]();
}

uint64_t sub_1BA202748()
{
  return MEMORY[0x1E0DEC248]();
}

uint64_t sub_1BA202754()
{
  return MEMORY[0x1E0DEC250]();
}

uint64_t sub_1BA202760()
{
  return MEMORY[0x1E0DEC260]();
}

uint64_t sub_1BA20276C()
{
  return MEMORY[0x1E0DEC268]();
}

uint64_t sub_1BA202778()
{
  return MEMORY[0x1E0DEC2B0]();
}

uint64_t sub_1BA202784()
{
  return MEMORY[0x1E0DEC3E0]();
}

uint64_t sub_1BA202790()
{
  return MEMORY[0x1E0DEC470]();
}

uint64_t sub_1BA20279C()
{
  return MEMORY[0x1E0DEC488]();
}

uint64_t sub_1BA2027A8()
{
  return MEMORY[0x1E0DEC498]();
}

uint64_t sub_1BA2027B4()
{
  return MEMORY[0x1E0DEC588]();
}

uint64_t sub_1BA2027C0()
{
  return MEMORY[0x1E0DEC660]();
}

uint64_t sub_1BA2027CC()
{
  return MEMORY[0x1E0DEC670]();
}

uint64_t sub_1BA2027D8()
{
  return MEMORY[0x1E0DEC688]();
}

uint64_t sub_1BA2027E4()
{
  return MEMORY[0x1E0DEC6C0]();
}

uint64_t sub_1BA2027F0()
{
  return MEMORY[0x1E0DEC6C8]();
}

uint64_t sub_1BA2027FC()
{
  return MEMORY[0x1E0DEC8E0]();
}

uint64_t sub_1BA202808()
{
  return MEMORY[0x1E0DECBE0]();
}

uint64_t sub_1BA202814()
{
  return MEMORY[0x1E0DECBE8]();
}

uint64_t sub_1BA202820()
{
  return MEMORY[0x1E0DECD18]();
}

uint64_t sub_1BA20282C()
{
  return MEMORY[0x1E0DECD38]();
}

uint64_t sub_1BA202838()
{
  return MEMORY[0x1E0DECD40]();
}

uint64_t sub_1BA202844()
{
  return MEMORY[0x1E0DECD50]();
}

uint64_t sub_1BA202850()
{
  return MEMORY[0x1E0DECD58]();
}

uint64_t sub_1BA20285C()
{
  return MEMORY[0x1E0DECD70]();
}

uint64_t sub_1BA202868()
{
  return MEMORY[0x1E0DECF28]();
}

uint64_t sub_1BA202874()
{
  return MEMORY[0x1E0DECF38]();
}

uint64_t sub_1BA202880()
{
  return MEMORY[0x1E0DECF40]();
}

uint64_t sub_1BA20288C()
{
  return MEMORY[0x1E0DECF58]();
}

uint64_t sub_1BA202898()
{
  return MEMORY[0x1E0DECF60]();
}

uint64_t sub_1BA2028A4()
{
  return MEMORY[0x1E0DECF68]();
}

uint64_t sub_1BA2028B0()
{
  return MEMORY[0x1E0DECF78]();
}

uint64_t sub_1BA2028BC()
{
  return MEMORY[0x1E0DECF88]();
}

uint64_t sub_1BA2028C8()
{
  return MEMORY[0x1E0DECFC0]();
}

uint64_t sub_1BA2028D4()
{
  return MEMORY[0x1E0DECFC8]();
}

uint64_t sub_1BA2028E0()
{
  return MEMORY[0x1E0DECFE0]();
}

uint64_t sub_1BA2028EC()
{
  return MEMORY[0x1E0DECFF0]();
}

uint64_t sub_1BA2028F8()
{
  return MEMORY[0x1E0DED038]();
}

uint64_t sub_1BA202904()
{
  return MEMORY[0x1E0DED070]();
}

uint64_t sub_1BA202910()
{
  return MEMORY[0x1E0DED090]();
}

uint64_t sub_1BA20291C()
{
  return MEMORY[0x1E0DED098]();
}

uint64_t sub_1BA202928()
{
  return MEMORY[0x1E0DED0A0]();
}

uint64_t sub_1BA202934()
{
  return MEMORY[0x1E0DED0C0]();
}

uint64_t sub_1BA202940()
{
  return MEMORY[0x1E0DED0F0]();
}

uint64_t sub_1BA20294C()
{
  return MEMORY[0x1E0DED0F8]();
}

uint64_t sub_1BA202958()
{
  return MEMORY[0x1E0DED100]();
}

uint64_t sub_1BA202964()
{
  return MEMORY[0x1E0DED110]();
}

uint64_t sub_1BA202970()
{
  return MEMORY[0x1E0DED120]();
}

uint64_t sub_1BA20297C()
{
  return MEMORY[0x1E0DED1E8]();
}

uint64_t sub_1BA202988()
{
  return MEMORY[0x1E0DED600]();
}

uint64_t sub_1BA202994()
{
  return MEMORY[0x1E0DED998]();
}

uint64_t sub_1BA2029A0()
{
  return MEMORY[0x1E0DEDAE0]();
}

uint64_t sub_1BA2029AC()
{
  return MEMORY[0x1E0DEDAE8]();
}

uint64_t sub_1BA2029B8()
{
  return MEMORY[0x1E0CB2650]();
}

uint64_t sub_1BA2029C4()
{
  return MEMORY[0x1E0DEDB10]();
}

uint64_t sub_1BA2029D0()
{
  return MEMORY[0x1E0DEDB18]();
}

uint64_t sub_1BA2029DC()
{
  return MEMORY[0x1E0DEDB20]();
}

uint64_t sub_1BA2029E8()
{
  return MEMORY[0x1E0DEDB28]();
}

uint64_t sub_1BA2029F4()
{
  return MEMORY[0x1E0DEDEF0]();
}

uint64_t sub_1BA202A00()
{
  return MEMORY[0x1E0DEDEF8]();
}

uint64_t sub_1BA202A0C()
{
  return MEMORY[0x1E0DEDF10]();
}

uint64_t sub_1BA202A18()
{
  return MEMORY[0x1E0DEDF40]();
}

uint64_t sub_1BA202A24()
{
  return MEMORY[0x1E0DEE240]();
}

uint64_t sub_1BA202A30()
{
  return MEMORY[0x1E0DEE270]();
}

uint64_t sub_1BA202A3C()
{
  return MEMORY[0x1E0DEE8E0]();
}

uint64_t sub_1BA202A48()
{
  return MEMORY[0x1E0DEE8E8]();
}

CGFloat CGRectGetWidth(CGRect rect)
{
  CGFloat result;

  MEMORY[0x1E0C9D5D0]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

NSString *__cdecl NSStringFromCGSize(CGSize size)
{
  return (NSString *)MEMORY[0x1E0DC32F0]((__n128)size, *(__n128 *)&size.height);
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x1E0C80928](aBlock);
}

void _Block_release(const void *aBlock)
{
  MEMORY[0x1E0C80958](aBlock);
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x1E0C81048](dso, log, type, format, buf, *(_QWORD *)&size);
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return MEMORY[0x1E0DEEA40]();
}

void bzero(void *a1, size_t a2)
{
  MEMORY[0x1E0C81758](a1, a2);
}

void free(void *a1)
{
  MEMORY[0x1E0C834A8](a1);
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x1E0C83E68](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x1E0C83EE0](ptr);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x1E0C84088](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x1E0C84098](__dst, __src, __len);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x1E0DE7BB0](a1);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x1E0DE7D20](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x1E0DE7D30](a1, a2);
}

uint64_t objc_opt_self()
{
  return MEMORY[0x1E0DE7D58]();
}

void objc_release(id a1)
{
  MEMORY[0x1E0DE7D78](a1);
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x1E0DE7E50](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x1E0DE7E68](a1);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x1E0C84780](oslog, type);
}

uint64_t swift_allocError()
{
  return MEMORY[0x1E0DEEAA8]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x1E0DEEAB0]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x1E0DEEAD8]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x1E0DEEAE0]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x1E0DEEAE8]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x1E0DEEAF0]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x1E0DEEAF8]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x1E0DEEB08]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x1E0DEEB10]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x1E0DEEB18]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x1E0DEEB20]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x1E0DEEB50]();
}

uint64_t swift_deallocObject()
{
  return MEMORY[0x1E0DEEB60]();
}

uint64_t swift_deallocUninitializedObject()
{
  return MEMORY[0x1E0DEEB70]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x1E0DEEB80]();
}

uint64_t swift_dynamicCastClass()
{
  return MEMORY[0x1E0DEEB88]();
}

uint64_t swift_dynamicCastObjCClass()
{
  return MEMORY[0x1E0DEEBA8]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x1E0DEEBE0]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x1E0DEEBF0]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x1E0DEEBF8]();
}

uint64_t swift_getEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x1E0DEEC48]();
}

uint64_t swift_getErrorValue()
{
  return MEMORY[0x1E0DEEC50]();
}

uint64_t swift_getExistentialMetatypeMetadata()
{
  return MEMORY[0x1E0DEEC58]();
}

uint64_t swift_getExistentialTypeMetadata()
{
  return MEMORY[0x1E0DEEC60]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x1E0DEECC8]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x1E0DEECD8]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x1E0DEECE0]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x1E0DEECF8]();
}

uint64_t swift_getTupleTypeMetadata2()
{
  return MEMORY[0x1E0DEED20]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x1E0DEED50]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x1E0DEED78]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x1E0DEED88]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x1E0DEEDD0]();
}

uint64_t swift_lookUpClassMethod()
{
  return MEMORY[0x1E0DEEDE0]();
}

uint64_t swift_makeBoxUnique()
{
  return MEMORY[0x1E0DEEDE8]();
}

uint64_t swift_once()
{
  return MEMORY[0x1E0DEEE00]();
}

uint64_t swift_release()
{
  return MEMORY[0x1E0DEEE30]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x1E0DEEE38]();
}

uint64_t swift_retain()
{
  return MEMORY[0x1E0DEEE48]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x1E0DEEE50]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x1E0DEEE78]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x1E0DEEE80]();
}

uint64_t swift_stdlib_isStackAllocationSafe()
{
  return MEMORY[0x1E0DEEE88]();
}

uint64_t swift_storeEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x1E0DEEEA0]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x1E0DEEEC0]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x1E0DEEED0]();
}

uint64_t swift_unknownObjectWeakAssign()
{
  return MEMORY[0x1E0DEEF20]();
}

uint64_t swift_unknownObjectWeakCopyAssign()
{
  return MEMORY[0x1E0DEEF28]();
}

uint64_t swift_unknownObjectWeakCopyInit()
{
  return MEMORY[0x1E0DEEF30]();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return MEMORY[0x1E0DEEF38]();
}

uint64_t swift_unknownObjectWeakInit()
{
  return MEMORY[0x1E0DEEF40]();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return MEMORY[0x1E0DEEF48]();
}

uint64_t swift_unknownObjectWeakTakeAssign()
{
  return MEMORY[0x1E0DEEF50]();
}

uint64_t swift_unknownObjectWeakTakeInit()
{
  return MEMORY[0x1E0DEEF58]();
}

uint64_t swift_weakDestroy()
{
  return MEMORY[0x1E0DEEF98]();
}

uint64_t swift_weakInit()
{
  return MEMORY[0x1E0DEEFA0]();
}

uint64_t swift_weakLoadStrong()
{
  return MEMORY[0x1E0DEEFA8]();
}

