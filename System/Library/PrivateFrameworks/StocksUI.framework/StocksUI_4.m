void sub_1DC2F5B70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  int EnumCaseMultiPayload;
  int v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  char v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD v51[6];

  v3 = *(_QWORD *)(v0 + 16);
  v4 = *(_QWORD *)(v0 + 24);
  v5 = *(_QWORD *)(v3 + 16);
  if (!v5)
  {
    swift_retain();
LABEL_23:
    v49 = *(_QWORD *)(v2 - 648);
    sub_1DC3DC37C(v4, v49);
    sub_1DC406C94();
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v2 - 168) + 8))(v49, *(_QWORD *)(v2 - 160));
    sub_1DC4078A0();
    swift_retain();
    sub_1DC407894();
    type metadata accessor for StockFeedServiceConfig();
    sub_1DC080808(&qword_1EDB33F10, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedServiceConfig, (uint64_t)&unk_1DC411510);
    v50 = sub_1DC40787C();
    swift_release();
    if (v50)
    {
      *(_QWORD *)(v2 - 104) = sub_1DC407420();
      *(_QWORD *)(v2 - 128) = v50;
    }
    else
    {
      *(_OWORD *)(v2 - 128) = 0u;
      *(_OWORD *)(v2 - 112) = 0u;
    }
    sub_1DC406D00();
    swift_release_n();
    JUMPOUT(0x1DC2F7178);
  }
  *(_QWORD *)(v2 - 344) = *(_QWORD *)(v2 - 248) + 24;
  v6 = *(_QWORD *)(v2 - 696);
  v7 = v3 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  *(_QWORD *)(v2 - 360) = *(_QWORD *)(v6 + 72);
  *(_QWORD *)(v2 - 480) = v3;
  swift_bridgeObjectRetain();
  *(_QWORD *)(v2 - 464) = v4 & 0x7FFFFFFFFFFFFFFFLL;
  swift_retain();
  *(_QWORD *)(v2 - 376) = 0;
  *(_OWORD *)(v2 - 400) = xmmword_1DC40DC10;
  v8 = *(_QWORD *)(v2 - 408);
  v9 = *(_QWORD *)(v2 - 432);
  *(_QWORD *)(v2 - 296) = v4;
  while (1)
  {
    sub_1DC0990BC(v7, v9, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedGroup);
    v19 = __swift_project_boxed_opaque_existential_1(*(_QWORD **)(v2 - 344), *(_QWORD *)(*(_QWORD *)(v2 - 248) + 48));
    type metadata accessor for StockFeedServiceConfig();
    sub_1DC080808(&qword_1EDB33F10, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedServiceConfig, (uint64_t)&unk_1DC411510);
    sub_1DC4075F4();
    v20 = (_QWORD *)*v19;
    sub_1DC0990BC(v9, v8, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedGroup);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *(_QWORD *)(v2 - 208) = v5;
    if (EnumCaseMultiPayload)
    {
      if (EnumCaseMultiPayload == 1)
      {
        sub_1DC092ED0(v8, *(_QWORD *)(v2 - 456), (uint64_t (*)(_QWORD))type metadata accessor for NewsStockFeedGroup);
        sub_1DC0990BC(v9, *(_QWORD *)(v2 - 504), (uint64_t (*)(_QWORD))type metadata accessor for StockFeedGroup);
        v22 = swift_getEnumCaseMultiPayload();
        if (v22)
        {
          v23 = *(_QWORD *)(v2 - 376);
          if (v22 == 1)
          {
            v24 = *(_QWORD **)(v2 - 640);
            sub_1DC092ED0(*(_QWORD *)(v2 - 504), (uint64_t)v24, (uint64_t (*)(_QWORD))type metadata accessor for NewsStockFeedGroup);
            sub_1DC142534();
            v26 = *(_QWORD *)(v2 - 488);
            v27 = v26 + *(int *)(v25 + 64);
            v28 = v24[1];
            *(_QWORD *)v26 = *v24;
            *(_QWORD *)(v26 + 8) = v28;
            v29 = *(_QWORD *)(v2 - 632);
            v30 = *(int *)(v29 + 28);
            v31 = *(int *)(v29 + 32);
            *(_BYTE *)(v26 + 16) = *((_BYTE *)v24 + v30);
            sub_1DC0990BC((uint64_t)v24 + v31, v27, (uint64_t (*)(_QWORD))sub_1DC0FEF78);
            swift_bridgeObjectRetain();
            sub_1DC0926D8((uint64_t)v24, (uint64_t (*)(_QWORD))type metadata accessor for NewsStockFeedGroup);
          }
          else
          {
            v26 = *(_QWORD *)(v2 - 488);
            (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v2 - 304) + 32))(v26, *(_QWORD *)(v2 - 504), *(_QWORD *)(v2 - 368));
          }
        }
        else
        {
          v42 = *(_QWORD *)(v2 - 664);
          sub_1DC092ED0(*(_QWORD *)(v2 - 504), v42, (uint64_t (*)(_QWORD))type metadata accessor for NewsPlacardStockFeedGroup);
          sub_1DC0926D8(v42, (uint64_t (*)(_QWORD))type metadata accessor for NewsPlacardStockFeedGroup);
          v26 = *(_QWORD *)(v2 - 488);
          v23 = *(_QWORD *)(v2 - 376);
        }
        swift_storeEnumTagMultiPayload();
        v43 = sub_1DC0990BC(v26, *(_QWORD *)(v2 - 288), (uint64_t (*)(_QWORD))type metadata accessor for StockFeedSectionDescriptor);
        v44 = *(_QWORD *)(v2 - 456);
        v45 = *(_QWORD *)(v44 + 16);
        MEMORY[0x1E0C80A78](v43);
        v1 = *(_QWORD *)(v2 - 336);
        v51[2] = v1;
        v51[3] = v44;
        v51[4] = v20;
        swift_bridgeObjectRetain();
        v46 = sub_1DC15549C((void (*)(uint64_t))sub_1DC1D1084, (uint64_t)v51, v45, v2 - 152);
        *(_QWORD *)(v2 - 376) = v23;
        swift_bridgeObjectRelease();
        v47 = sub_1DC080808((unint64_t *)&unk_1EDB29BB0, (uint64_t (*)(uint64_t))sub_1DC142200, MEMORY[0x1E0DB6F08]);
        v48 = sub_1DC080808(&qword_1EDB29BA8, (uint64_t (*)(uint64_t))sub_1DC142200, MEMORY[0x1E0DB6EF8]);
        MEMORY[0x1DF0C311C](v46, *(_QWORD *)(v2 - 240), v47, v48);
        v15 = *(_QWORD *)(v2 - 352);
        sub_1DC4046F0();
        sub_1DC0926D8(*(_QWORD *)(v2 - 488), (uint64_t (*)(_QWORD))type metadata accessor for StockFeedSectionDescriptor);
        sub_1DC0926D8(v44, (uint64_t (*)(_QWORD))type metadata accessor for NewsStockFeedGroup);
        v8 = *(_QWORD *)(v2 - 408);
        v9 = *(_QWORD *)(v2 - 432);
        v4 = *(_QWORD *)(v2 - 296);
      }
      else
      {
        v10 = *(_QWORD *)(v2 - 304);
        v11 = *(_QWORD *)(v2 - 312);
        v12 = v8;
        v13 = *(_QWORD *)(v2 - 368);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32))(v11, v12, v13);
        (*(void (**)(_QWORD, uint64_t, uint64_t))(v10 + 16))(*(_QWORD *)(v2 - 288), v11, v13);
        swift_storeEnumTagMultiPayload();
        sub_1DC089DA4(0, (unint64_t *)&qword_1EDB3FEA0, (uint64_t (*)(uint64_t))sub_1DC142200, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
        v14 = swift_allocObject();
        *(_OWORD *)(v14 + 16) = *(_OWORD *)(v2 - 400);
        __swift_project_boxed_opaque_existential_1(v20 + 7, v20[10]);
        sub_1DC407948();
        swift_storeEnumTagMultiPayload();
        v15 = *(_QWORD *)(v2 - 352);
        sub_1DC404348();
        v16 = sub_1DC080808((unint64_t *)&unk_1EDB29BB0, (uint64_t (*)(uint64_t))sub_1DC142200, MEMORY[0x1E0DB6F08]);
        v17 = sub_1DC080808(&qword_1EDB29BA8, (uint64_t (*)(uint64_t))sub_1DC142200, MEMORY[0x1E0DB6EF8]);
        MEMORY[0x1DF0C3110](v14, *(_QWORD *)(v2 - 240), v16, v17);
        v4 = *(_QWORD *)(v2 - 296);
        v1 = *(_QWORD *)(v2 - 336);
        sub_1DC4046F0();
        v9 = *(_QWORD *)(v2 - 432);
        v18 = v13;
        v8 = *(_QWORD *)(v2 - 408);
        (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v2 - 304) + 8))(*(_QWORD *)(v2 - 312), v18);
      }
      goto LABEL_4;
    }
    v32 = *(_QWORD *)(v2 - 472);
    sub_1DC092ED0(v8, v32, (uint64_t (*)(_QWORD))type metadata accessor for NewsPlacardStockFeedGroup);
    __swift_project_boxed_opaque_existential_1(v20 + 2, v20[5]);
    v33 = sub_1DC4009D0();
    v34 = *(_QWORD *)(v2 - 536);
    sub_1DC0990BC(v32, v34, (uint64_t (*)(_QWORD))type metadata accessor for NewsPlacardStockFeedGroup);
    if ((v33 & 1) == 0)
      break;
    v35 = *(_BYTE *)(v34 + *(int *)(*(_QWORD *)(v2 - 512) + 20));
    sub_1DC0926D8(v34, (uint64_t (*)(_QWORD))type metadata accessor for NewsPlacardStockFeedGroup);
    v36 = *(_QWORD **)(v2 - 328);
    v15 = *(_QWORD *)(v2 - 352);
    if ((v35 & 1) == 0)
      goto LABEL_14;
    swift_storeEnumTagMultiPayload();
    *(_QWORD *)(v2 - 448) = sub_1DC080808((unint64_t *)&unk_1EDB29BB0, (uint64_t (*)(uint64_t))sub_1DC142200, MEMORY[0x1E0DB6F08]);
    v37 = sub_1DC080808(&qword_1EDB29BA8, (uint64_t (*)(uint64_t))sub_1DC142200, MEMORY[0x1E0DB6EF8]);
    MEMORY[0x1DF0C3110](MEMORY[0x1E0DEE9D8], *(_QWORD *)(v2 - 240), *(_QWORD *)(v2 - 448), v37);
    sub_1DC4046F0();
    swift_storeEnumTagMultiPayload();
    v4 = *(_QWORD *)(v2 - 296);
LABEL_17:
    v41 = *(_QWORD *)(v2 - 440);
    sub_1DC404348();
    sub_1DC404744();
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v2 - 320) + 8))(v41, *(_QWORD *)(v2 - 240));
    sub_1DC0926D8(*(_QWORD *)(v2 - 472), (uint64_t (*)(_QWORD))type metadata accessor for NewsPlacardStockFeedGroup);
LABEL_4:
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v2 - 272) + 8))(v1, *(_QWORD *)(v2 - 264));
    sub_1DC406C94();
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v2 - 168) + 8))(v15, *(_QWORD *)(v2 - 160));
    sub_1DC0926D8(v9, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedGroup);
    v7 += *(_QWORD *)(v2 - 360);
    v5 = *(_QWORD *)(v2 - 208) - 1;
    if (*(_QWORD *)(v2 - 208) == 1)
    {
      swift_bridgeObjectRelease();
      goto LABEL_23;
    }
  }
  sub_1DC0926D8(v34, (uint64_t (*)(_QWORD))type metadata accessor for NewsPlacardStockFeedGroup);
  v36 = *(_QWORD **)(v2 - 328);
  v15 = *(_QWORD *)(v2 - 352);
LABEL_14:
  swift_storeEnumTagMultiPayload();
  v38 = sub_1DC080808((unint64_t *)&unk_1EDB29BB0, (uint64_t (*)(uint64_t))sub_1DC142200, MEMORY[0x1E0DB6F08]);
  v39 = sub_1DC080808(&qword_1EDB29BA8, (uint64_t (*)(uint64_t))sub_1DC142200, MEMORY[0x1E0DB6EF8]);
  MEMORY[0x1DF0C3110](MEMORY[0x1E0DEE9D8], *(_QWORD *)(v2 - 240), v38, v39);
  sub_1DC4046F0();
  if (qword_1EDB42970 != -1)
    swift_once();
  v40 = unk_1EDB5E290;
  *v36 = qword_1EDB5E288;
  v36[1] = v40;
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  v4 = *(_QWORD *)(v2 - 296);
  v1 = *(_QWORD *)(v2 - 336);
  goto LABEL_17;
}

unint64_t sub_1DC2F7284()
{
  unint64_t result;

  result = qword_1F0351808;
  if (!qword_1F0351808)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC42630C, &type metadata for StockFeedNewsRefreshDataBlueprintModifier);
    atomic_store(result, (unint64_t *)&qword_1F0351808);
  }
  return result;
}

uint64_t sub_1DC2F72C8(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v14 = MEMORY[0x1E0DEE9D8];
    sub_1DC0F0894(0, v1, 0);
    v2 = v14;
    v4 = *(_QWORD *)(sub_1DC4010E4() - 8);
    v5 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v6 = *(_QWORD *)(v4 + 72);
    do
    {
      v7 = sub_1DC4010B4();
      v9 = v8;
      v11 = *(_QWORD *)(v14 + 16);
      v10 = *(_QWORD *)(v14 + 24);
      if (v11 >= v10 >> 1)
        sub_1DC0F0894(v10 > 1, v11 + 1, 1);
      *(_QWORD *)(v14 + 16) = v11 + 1;
      v12 = v14 + 16 * v11;
      *(_QWORD *)(v12 + 32) = v7;
      *(_QWORD *)(v12 + 40) = v9;
      v5 += v6;
      --v1;
    }
    while (v1);
  }
  return v2;
}

void sub_1DC2F73C4(_QWORD *a1@<X8>)
{
  *a1 = MEMORY[0x1E0DEE9D8];
}

uint64_t sub_1DC2F73D4(uint64_t result, uint64_t a2)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;

  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    v3 = *(_QWORD *)(a2 + 16);
    if ((uint64_t)v3 >= result)
      v4 = result;
    else
      v4 = *(_QWORD *)(a2 + 16);
    if (result)
      v5 = v4;
    else
      v5 = 0;
    if (v3 >= v5)
    {
      sub_1DC4011BC();
      return a2;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1DC2F7444()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  __swift_destroy_boxed_opaque_existential_1(v0 + 136);
  __swift_destroy_boxed_opaque_existential_1(v0 + 176);
  __swift_destroy_boxed_opaque_existential_1(v0 + 216);
  __swift_destroy_boxed_opaque_existential_1(v0 + 256);
  return swift_deallocClassInstance();
}

id sub_1DC2F7498()
{
  if (qword_1EDB2D2E8 != -1)
    swift_once();
  return (id)qword_1EDB2D2E0;
}

uint64_t sub_1DC2F74DC()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v1 = (int *)type metadata accessor for ForYouFeedServiceConfig();
  v2 = v0
     + ((*(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80));
  swift_bridgeObjectRelease();
  v3 = v2 + *(int *)(type metadata accessor for ForYouFeedConfig() + 20);
  v4 = sub_1DC3FFFEC();
  v5 = *(_QWORD *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  v6 = v2 + *(int *)(type metadata accessor for ForYouFeedContentConfig() + 20);
  sub_1DC102724(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  type metadata accessor for StockForYouFeedGroupKnobs();
  swift_release();
  swift_release();
  type metadata accessor for ForYouFeedGroupKnobs();
  swift_bridgeObjectRelease();

  v8 = v2 + v1[7];
  v9 = sub_1DC40070C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  v10 = v2 + v1[8];
  v11 = sub_1DC407714();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  v12 = v2 + v1[10];
  v13 = sub_1DC40124C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
  return swift_deallocObject();
}

uint64_t sub_1DC2F7678()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1DC2F769C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DC2F76C0(_QWORD *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD *))(v1 + 16))(*a1, a1 + 1);
}

uint64_t sub_1DC2F76F0(uint64_t result)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    sub_1DC408B3C();
    return sub_1DC408BD8();
  }
  return result;
}

uint64_t sub_1DC2F777C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1DC2F77A8 + 4 * byte_1DC426440[a1]))(1701869940, 0xE400000000000000);
}

uint64_t sub_1DC2F77A8()
{
  return 0x546E6F6974636573;
}

uint64_t sub_1DC2F77C8()
{
  return 0x6B636F7473;
}

uint64_t sub_1DC2F77DC()
{
  return 0x6565466B636F7473;
}

uint64_t sub_1DC2F7800()
{
  return 0x7972657571;
}

uint64_t sub_1DC2F7814()
{
  return 0x656C6369747261;
}

uint64_t sub_1DC2F782C()
{
  return 7107189;
}

uint64_t sub_1DC2F783C()
{
  return 0x736E6F6974706FLL;
}

uint64_t sub_1DC2F7854()
{
  return 0x6F506C6C6F726373;
}

unint64_t sub_1DC2F7878()
{
  return 0xD000000000000013;
}

uint64_t sub_1DC2F7894(_QWORD *a1)
{
  _BYTE *v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  _OWORD *v11;
  __int128 v12;
  _OWORD v14[2];
  char v15;

  v3 = v1;
  sub_1DC2FD6BC(0, &qword_1EDB3FDD0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v14 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC2FD598();
  sub_1DC409B14();
  LOBYTE(v14[0]) = *v3;
  v15 = 0;
  sub_1DC2FD718();
  sub_1DC409988();
  if (!v2)
  {
    LOBYTE(v14[0]) = v3[1];
    v15 = 1;
    sub_1DC2FD75C();
    sub_1DC409958();
    v10 = type metadata accessor for StocksActivityUserInfo();
    LOBYTE(v14[0]) = 2;
    sub_1DC4010E4();
    sub_1DC080808(&qword_1EDB27480, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF0D0], MEMORY[0x1E0DAF0E0]);
    sub_1DC409958();
    LOBYTE(v14[0]) = 3;
    type metadata accessor for StocksActivity.StockFeed.Series(0);
    sub_1DC080808(&qword_1EDB2C440, type metadata accessor for StocksActivity.StockFeed.Series, (uint64_t)&protocol conformance descriptor for StocksActivity.StockFeed.Series);
    sub_1DC409958();
    LOBYTE(v14[0]) = 4;
    sub_1DC409934();
    LOBYTE(v14[0]) = 5;
    type metadata accessor for ArticleUserInfoModel();
    sub_1DC080808(&qword_1EDB31640, (uint64_t (*)(uint64_t))type metadata accessor for ArticleUserInfoModel, (uint64_t)&protocol conformance descriptor for ArticleUserInfoModel);
    sub_1DC409958();
    LOBYTE(v14[0]) = 6;
    sub_1DC3FFDD0();
    sub_1DC080808(&qword_1EDB28A68, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0010]);
    sub_1DC409958();
    LOBYTE(v14[0]) = 7;
    sub_1DC40994C();
    v11 = &v3[*(int *)(v10 + 48)];
    v12 = v11[1];
    v14[0] = *v11;
    v14[1] = v12;
    v15 = 8;
    sub_1DC2FD7A0();
    sub_1DC409958();
    LOBYTE(v14[0]) = 9;
    sub_1DC409934();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1DC2F7C48@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  _BYTE *v24;
  int *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE *v33;
  char v34;
  _OWORD *v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  _QWORD *v49;
  char *v50;
  _BYTE *v51;
  uint64_t v52;
  __int128 v53;
  __int128 v54;
  char v55;

  v46 = a2;
  v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1DC089DA4(0, (unint64_t *)&unk_1EDB28A70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v43 - v5;
  sub_1DC089DA4(0, &qword_1EDB31648, (uint64_t (*)(uint64_t))type metadata accessor for ArticleUserInfoModel, v3);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v43 - v8;
  sub_1DC089DA4(0, (unint64_t *)&unk_1EDB2C480, type metadata accessor for StocksActivity.StockFeed.Series, v3);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v43 - v11;
  sub_1DC089DA4(0, (unint64_t *)&qword_1EDB28DE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF0D0], v3);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v43 - v14;
  sub_1DC2FD6BC(0, &qword_1EDB42CB8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v48 = v16;
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v43 - v18;
  v52 = type metadata accessor for StocksActivityUserInfo();
  MEMORY[0x1E0C80A78](v52);
  v51 = (char *)&v43 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = a1[3];
  v49 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v21);
  sub_1DC2FD598();
  v47 = v19;
  v22 = v50;
  sub_1DC409B08();
  if (v22)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v49);
  v50 = v12;
  v44 = v6;
  v45 = v9;
  v23 = v17;
  v55 = 0;
  sub_1DC2FD5F0();
  sub_1DC409910();
  v24 = v51;
  *v51 = v53;
  v55 = 1;
  sub_1DC2FD634();
  sub_1DC4098EC();
  v25 = (int *)v52;
  v24[1] = v53;
  sub_1DC4010E4();
  LOBYTE(v53) = 2;
  sub_1DC080808(&qword_1EDB42CD0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF0D0], MEMORY[0x1E0DAF0F0]);
  sub_1DC4098EC();
  sub_1DC2161A8((uint64_t)v15, (uint64_t)&v24[v25[6]], (unint64_t *)&qword_1EDB28DE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF0D0]);
  type metadata accessor for StocksActivity.StockFeed.Series(0);
  LOBYTE(v53) = 3;
  sub_1DC080808(&qword_1EDB42CD8, type metadata accessor for StocksActivity.StockFeed.Series, (uint64_t)&protocol conformance descriptor for StocksActivity.StockFeed.Series);
  v26 = (uint64_t)v50;
  sub_1DC4098EC();
  sub_1DC2161A8(v26, (uint64_t)&v24[v25[7]], (unint64_t *)&unk_1EDB2C480, type metadata accessor for StocksActivity.StockFeed.Series);
  LOBYTE(v53) = 4;
  v27 = sub_1DC4098C8();
  v28 = (uint64_t *)&v24[v25[8]];
  *v28 = v27;
  v28[1] = v29;
  type metadata accessor for ArticleUserInfoModel();
  LOBYTE(v53) = 5;
  sub_1DC080808((unint64_t *)&unk_1EDB42CE0, (uint64_t (*)(uint64_t))type metadata accessor for ArticleUserInfoModel, (uint64_t)&protocol conformance descriptor for ArticleUserInfoModel);
  v30 = (uint64_t)v45;
  sub_1DC4098EC();
  sub_1DC2161A8(v30, (uint64_t)&v24[v25[9]], &qword_1EDB31648, (uint64_t (*)(uint64_t))type metadata accessor for ArticleUserInfoModel);
  sub_1DC3FFDD0();
  LOBYTE(v53) = 6;
  sub_1DC080808(&qword_1EDB42C58, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0038]);
  v31 = (uint64_t)v44;
  sub_1DC4098EC();
  sub_1DC2161A8(v31, (uint64_t)&v24[v25[10]], (unint64_t *)&unk_1EDB28A70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  LOBYTE(v53) = 7;
  v32 = sub_1DC4098E0();
  v33 = &v24[v25[11]];
  *(_QWORD *)v33 = v32;
  v33[8] = v34 & 1;
  v55 = 8;
  sub_1DC2FD678();
  sub_1DC4098EC();
  v35 = &v24[v25[12]];
  v36 = v54;
  *v35 = v53;
  v35[1] = v36;
  LOBYTE(v53) = 9;
  v37 = sub_1DC4098C8();
  v39 = v38;
  (*(void (**)(char *, uint64_t))(v23 + 8))(v47, v48);
  v40 = (uint64_t)v51;
  v41 = (uint64_t *)&v51[*(int *)(v52 + 52)];
  *v41 = v37;
  v41[1] = v39;
  sub_1DC0990BC(v40, v46, (uint64_t (*)(_QWORD))type metadata accessor for StocksActivityUserInfo);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v49);
  return sub_1DC0926D8(v40, (uint64_t (*)(_QWORD))type metadata accessor for StocksActivityUserInfo);
}

uint64_t sub_1DC2F8444()
{
  unsigned __int8 *v0;

  return sub_1DC2F777C(*v0);
}

uint64_t sub_1DC2F844C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC2FA91C(a1, a2);
  *a3 = result;
  return result;
}

void sub_1DC2F8470(_BYTE *a1@<X8>)
{
  *a1 = 10;
}

uint64_t sub_1DC2F847C()
{
  sub_1DC2FD598();
  return sub_1DC409B20();
}

uint64_t sub_1DC2F84A4()
{
  sub_1DC2FD598();
  return sub_1DC409B2C();
}

uint64_t sub_1DC2F84CC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DC2F7C48(a1, a2);
}

uint64_t sub_1DC2F84E0(_QWORD *a1)
{
  return sub_1DC2F7894(a1);
}

uint64_t *sub_1DC2F84F4(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  int *v28;
  uint64_t v29;
  unsigned int (*v30)(_QWORD *, uint64_t, int *);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  unsigned int (*v36)(char *, uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v47;
  void (*v48)(_QWORD *, _QWORD, uint64_t, int *);
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  char *v59;
  char *v60;
  uint64_t v61;
  __int128 v62;
  uint64_t v63;
  _QWORD *v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v68;
  char *__dst;
  uint64_t v70;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_WORD *)a1 = *(_WORD *)a2;
    v7 = a3[6];
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_1DC4010E4();
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      sub_1DC089DA4(0, (unint64_t *)&qword_1EDB28DE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF0D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    v14 = a3[7];
    v15 = (char *)v4 + v14;
    v16 = (char *)a2 + v14;
    v17 = type metadata accessor for StocksActivity.StockFeed.Series(0);
    v18 = *(_QWORD *)(v17 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
    {
      sub_1DC089DA4(0, (unint64_t *)&unk_1EDB2C480, type metadata accessor for StocksActivity.StockFeed.Series, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v15, v16, v10);
      *(_QWORD *)&v15[*(int *)(v17 + 20)] = *(_QWORD *)&v16[*(int *)(v17 + 20)];
      v20 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56);
      swift_bridgeObjectRetain();
      v20(v15, 0, 1, v17);
    }
    v21 = a3[8];
    v22 = a3[9];
    v23 = (uint64_t *)((char *)v4 + v21);
    v24 = (uint64_t *)((char *)a2 + v21);
    v25 = v24[1];
    *v23 = *v24;
    v23[1] = v25;
    v26 = (uint64_t *)((char *)v4 + v22);
    v27 = (uint64_t *)((char *)a2 + v22);
    v28 = (int *)type metadata accessor for ArticleUserInfoModel();
    v29 = *((_QWORD *)v28 - 1);
    v30 = *(unsigned int (**)(_QWORD *, uint64_t, int *))(v29 + 48);
    swift_bridgeObjectRetain();
    if (v30(v27, 1, v28))
    {
      sub_1DC089DA4(0, &qword_1EDB31648, (uint64_t (*)(uint64_t))type metadata accessor for ArticleUserInfoModel, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    }
    else
    {
      v32 = v27[1];
      *v26 = *v27;
      v26[1] = v32;
      v33 = v28[5];
      __dst = (char *)v26 + v33;
      v70 = v29;
      v34 = (char *)v27 + v33;
      v35 = sub_1DC3FFDD0();
      v68 = *(_QWORD *)(v35 - 8);
      v36 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v68 + 48);
      swift_bridgeObjectRetain();
      if (v36(v34, 1, v35))
      {
        sub_1DC089DA4(0, (unint64_t *)&unk_1EDB28A70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(__dst, v34, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v68 + 16))(__dst, v34, v35);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v68 + 56))(__dst, 0, 1, v35);
      }
      *((_BYTE *)v26 + v28[6]) = *((_BYTE *)v27 + v28[6]);
      v38 = v28[7];
      v39 = (char *)v26 + v38;
      v40 = (char *)v27 + v38;
      v41 = *(_QWORD *)((char *)v27 + v38 + 24);
      if (v41)
      {
        v42 = *((_QWORD *)v40 + 4);
        *((_QWORD *)v39 + 3) = v41;
        *((_QWORD *)v39 + 4) = v42;
        (**(void (***)(void))(v41 - 8))();
      }
      else
      {
        v43 = *((_OWORD *)v40 + 1);
        *(_OWORD *)v39 = *(_OWORD *)v40;
        *((_OWORD *)v39 + 1) = v43;
        *((_QWORD *)v39 + 4) = *((_QWORD *)v40 + 4);
      }
      v44 = v28[8];
      v45 = (_QWORD *)((char *)v26 + v44);
      v46 = (_QWORD *)((char *)v27 + v44);
      v47 = v46[1];
      *v45 = *v46;
      v45[1] = v47;
      v48 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v70 + 56);
      swift_bridgeObjectRetain();
      v48(v26, 0, 1, v28);
    }
    v49 = a3[10];
    v50 = (char *)v4 + v49;
    v51 = (char *)a2 + v49;
    v52 = sub_1DC3FFDD0();
    v53 = *(_QWORD *)(v52 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48))(v51, 1, v52))
    {
      sub_1DC089DA4(0, (unint64_t *)&unk_1EDB28A70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v53 + 16))(v50, v51, v52);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v53 + 56))(v50, 0, 1, v52);
    }
    v55 = a3[11];
    v56 = a3[12];
    v57 = (char *)v4 + v55;
    v58 = (char *)a2 + v55;
    *(_QWORD *)v57 = *(_QWORD *)v58;
    v57[8] = v58[8];
    v59 = (char *)v4 + v56;
    v60 = (char *)a2 + v56;
    v61 = *((_QWORD *)v60 + 1);
    if (v61 == 1)
    {
      v62 = *((_OWORD *)v60 + 1);
      *(_OWORD *)v59 = *(_OWORD *)v60;
      *((_OWORD *)v59 + 1) = v62;
    }
    else
    {
      *(_QWORD *)v59 = *(_QWORD *)v60;
      *((_QWORD *)v59 + 1) = v61;
      *((_OWORD *)v59 + 1) = *((_OWORD *)v60 + 1);
      swift_bridgeObjectRetain();
    }
    v63 = a3[13];
    v64 = (uint64_t *)((char *)v4 + v63);
    v65 = (uint64_t *)((char *)a2 + v63);
    v66 = v65[1];
    *v64 = *v65;
    v64[1] = v66;
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1DC2F8970(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v4 = a1 + a2[6];
  v5 = sub_1DC4010E4();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  v7 = a1 + a2[7];
  v8 = type metadata accessor for StocksActivity.StockFeed.Series(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v7, 1, v8))
  {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v7, v5);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  v9 = a1 + a2[9];
  v10 = type metadata accessor for ArticleUserInfoModel();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v9, 1, v10))
  {
    swift_bridgeObjectRelease();
    v11 = v9 + *(int *)(v10 + 20);
    v12 = sub_1DC3FFDD0();
    v13 = *(_QWORD *)(v12 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
    v14 = v9 + *(int *)(v10 + 28);
    if (*(_QWORD *)(v14 + 24))
      __swift_destroy_boxed_opaque_existential_1(v14);
    swift_bridgeObjectRelease();
  }
  v15 = a1 + a2[10];
  v16 = sub_1DC3FFDD0();
  v17 = *(_QWORD *)(v16 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v15, v16);
  if (*(_QWORD *)(a1 + a2[12] + 8) != 1)
    swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_WORD *sub_1DC2F8B44(_WORD *a1, _WORD *a2, int *a3)
{
  int *v3;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  int *v26;
  uint64_t v27;
  unsigned int (*v28)(_QWORD *, uint64_t, int *);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  unsigned int (*v35)(char *, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  uint64_t v46;
  void (*v47)(_QWORD *, _QWORD, uint64_t, int *);
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  char *v58;
  char *v59;
  uint64_t v60;
  __int128 v61;
  uint64_t v62;
  _QWORD *v63;
  _QWORD *v64;
  uint64_t v65;
  int *v67;
  char *__dst;
  uint64_t v69;

  v3 = a3;
  *a1 = *a2;
  v6 = a3[6];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1DC4010E4();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    sub_1DC089DA4(0, (unint64_t *)&qword_1EDB28DE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF0D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v12 = v3[7];
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = type metadata accessor for StocksActivity.StockFeed.Series(0);
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    sub_1DC089DA4(0, (unint64_t *)&unk_1EDB2C480, type metadata accessor for StocksActivity.StockFeed.Series, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v14, v9);
    *(_QWORD *)&v13[*(int *)(v15 + 20)] = *(_QWORD *)&v14[*(int *)(v15 + 20)];
    v18 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56);
    swift_bridgeObjectRetain();
    v18(v13, 0, 1, v15);
  }
  v19 = v3[8];
  v20 = v3[9];
  v21 = (_QWORD *)((char *)a1 + v19);
  v22 = (_QWORD *)((char *)a2 + v19);
  v23 = v22[1];
  *v21 = *v22;
  v21[1] = v23;
  v24 = (_QWORD *)((char *)a1 + v20);
  v25 = (_QWORD *)((char *)a2 + v20);
  v26 = (int *)type metadata accessor for ArticleUserInfoModel();
  v27 = *((_QWORD *)v26 - 1);
  v28 = *(unsigned int (**)(_QWORD *, uint64_t, int *))(v27 + 48);
  swift_bridgeObjectRetain();
  if (v28(v25, 1, v26))
  {
    sub_1DC089DA4(0, &qword_1EDB31648, (uint64_t (*)(uint64_t))type metadata accessor for ArticleUserInfoModel, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
  }
  else
  {
    v69 = v27;
    v30 = v25[1];
    *v24 = *v25;
    v24[1] = v30;
    v31 = v26[5];
    v67 = v3;
    __dst = (char *)v24 + v31;
    v32 = (char *)v25 + v31;
    v33 = sub_1DC3FFDD0();
    v34 = *(_QWORD *)(v33 - 8);
    v35 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48);
    swift_bridgeObjectRetain();
    if (v35(v32, 1, v33))
    {
      sub_1DC089DA4(0, (unint64_t *)&unk_1EDB28A70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(__dst, v32, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v34 + 16))(__dst, v32, v33);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(__dst, 0, 1, v33);
    }
    *((_BYTE *)v24 + v26[6]) = *((_BYTE *)v25 + v26[6]);
    v37 = v26[7];
    v38 = (char *)v24 + v37;
    v39 = (char *)v25 + v37;
    v40 = *(_QWORD *)((char *)v25 + v37 + 24);
    v3 = v67;
    if (v40)
    {
      v41 = *((_QWORD *)v39 + 4);
      *((_QWORD *)v38 + 3) = v40;
      *((_QWORD *)v38 + 4) = v41;
      (**(void (***)(void))(v40 - 8))();
    }
    else
    {
      v42 = *((_OWORD *)v39 + 1);
      *(_OWORD *)v38 = *(_OWORD *)v39;
      *((_OWORD *)v38 + 1) = v42;
      *((_QWORD *)v38 + 4) = *((_QWORD *)v39 + 4);
    }
    v43 = v26[8];
    v44 = (_QWORD *)((char *)v24 + v43);
    v45 = (_QWORD *)((char *)v25 + v43);
    v46 = v45[1];
    *v44 = *v45;
    v44[1] = v46;
    v47 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v69 + 56);
    swift_bridgeObjectRetain();
    v47(v24, 0, 1, v26);
  }
  v48 = v3[10];
  v49 = (char *)a1 + v48;
  v50 = (char *)a2 + v48;
  v51 = sub_1DC3FFDD0();
  v52 = *(_QWORD *)(v51 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v52 + 48))(v50, 1, v51))
  {
    sub_1DC089DA4(0, (unint64_t *)&unk_1EDB28A70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v52 + 16))(v49, v50, v51);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v52 + 56))(v49, 0, 1, v51);
  }
  v54 = v3[11];
  v55 = v3[12];
  v56 = (char *)a1 + v54;
  v57 = (char *)a2 + v54;
  *(_QWORD *)v56 = *(_QWORD *)v57;
  v56[8] = v57[8];
  v58 = (char *)a1 + v55;
  v59 = (char *)a2 + v55;
  v60 = *((_QWORD *)v59 + 1);
  if (v60 == 1)
  {
    v61 = *((_OWORD *)v59 + 1);
    *(_OWORD *)v58 = *(_OWORD *)v59;
    *((_OWORD *)v58 + 1) = v61;
  }
  else
  {
    *(_QWORD *)v58 = *(_QWORD *)v59;
    *((_QWORD *)v58 + 1) = v60;
    *((_OWORD *)v58 + 1) = *((_OWORD *)v59 + 1);
    swift_bridgeObjectRetain();
  }
  v62 = v3[13];
  v63 = (_QWORD *)((char *)a1 + v62);
  v64 = (_QWORD *)((char *)a2 + v62);
  v65 = v64[1];
  *v63 = *v64;
  v63[1] = v65;
  swift_bridgeObjectRetain();
  return a1;
}

_BYTE *sub_1DC2F8F94(_BYTE *a1, _BYTE *a2, int *a3)
{
  _BYTE *v4;
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(_BYTE *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(char *, uint64_t, uint64_t);
  int v21;
  int v22;
  uint64_t (*v23)(uint64_t, uint64_t);
  uint64_t v24;
  void (*v25)(char *, _QWORD, uint64_t, uint64_t);
  int *v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  int *v33;
  uint64_t v34;
  uint64_t (*v35)(_QWORD *, uint64_t, int *);
  int v36;
  int v37;
  uint64_t (*v38)(uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  unsigned int (*v44)(char *, uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t (*v51)(char *, uint64_t, uint64_t);
  int v52;
  uint64_t v53;
  size_t v54;
  void *v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  __int128 v60;
  __int128 v61;
  uint64_t v62;
  _QWORD *v63;
  _QWORD *v64;
  void (*v65)(_QWORD *, _QWORD, uint64_t, int *);
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t *v69;
  uint64_t v70;
  __int128 v71;
  __int128 v72;
  uint64_t v73;
  _QWORD *v74;
  _QWORD *v75;
  uint64_t v76;
  _BYTE *v77;
  _BYTE *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t (*v81)(_BYTE *, uint64_t, uint64_t);
  int v82;
  int v83;
  uint64_t v84;
  uint64_t v85;
  _BYTE *v86;
  _BYTE *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  _BYTE *v91;
  uint64_t v92;
  uint64_t v93;
  __int128 v94;
  __int128 v95;
  uint64_t v96;
  _QWORD *v97;
  _QWORD *v98;
  _BYTE *v100;
  void *v101;
  char *__dst;
  int *v103;

  v4 = a2;
  *a1 = *a2;
  a1[1] = a2[1];
  v6 = a3[6];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_1DC4010E4();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(_BYTE *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    sub_1DC089DA4(0, (unint64_t *)&qword_1EDB28DE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF0D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  v103 = a3;
  v15 = a3[7];
  v16 = &a1[v15];
  v17 = &v4[v15];
  v18 = type metadata accessor for StocksActivity.StockFeed.Series(0);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48);
  v21 = v20(v16, 1, v18);
  v22 = v20(v17, 1, v18);
  if (v21)
  {
    if (v22)
    {
      v23 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
LABEL_12:
      sub_1DC089DA4(0, (unint64_t *)&unk_1EDB2C480, type metadata accessor for StocksActivity.StockFeed.Series, v23);
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
      goto LABEL_16;
    }
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v16, v17, v9);
    *(_QWORD *)&v16[*(int *)(v18 + 20)] = *(_QWORD *)&v17[*(int *)(v18 + 20)];
    v25 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56);
    swift_bridgeObjectRetain();
    v25(v16, 0, 1, v18);
  }
  else
  {
    if (v22)
    {
      sub_1DC0926D8((uint64_t)v16, type metadata accessor for StocksActivity.StockFeed.Series);
      v23 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
      goto LABEL_12;
    }
    (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v16, v17, v9);
    *(_QWORD *)&v16[*(int *)(v18 + 20)] = *(_QWORD *)&v17[*(int *)(v18 + 20)];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
LABEL_16:
  v26 = v103;
  v27 = v103[8];
  v28 = &a1[v27];
  v29 = &v4[v27];
  *v28 = *v29;
  v28[1] = v29[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v30 = v103[9];
  v31 = &a1[v30];
  v32 = &v4[v30];
  v33 = (int *)type metadata accessor for ArticleUserInfoModel();
  v34 = *((_QWORD *)v33 - 1);
  v35 = *(uint64_t (**)(_QWORD *, uint64_t, int *))(v34 + 48);
  v36 = v35(v31, 1, v33);
  v37 = v35(v32, 1, v33);
  if (!v36)
  {
    if (v37)
    {
      sub_1DC0926D8((uint64_t)v31, (uint64_t (*)(_QWORD))type metadata accessor for ArticleUserInfoModel);
      v38 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
      goto LABEL_21;
    }
    *v31 = *v32;
    v31[1] = v32[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v46 = v33[5];
    v47 = (char *)v31 + v46;
    v48 = (char *)v32 + v46;
    v49 = sub_1DC3FFDD0();
    v50 = *(_QWORD *)(v49 - 8);
    v51 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v50 + 48);
    v101 = v47;
    LODWORD(v47) = v51(v47, 1, v49);
    v52 = v51(v48, 1, v49);
    if ((_DWORD)v47)
    {
      if (v52)
      {
        sub_1DC089DA4(0, (unint64_t *)&unk_1EDB28A70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        v54 = *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64);
        v55 = v101;
LABEL_34:
        memcpy(v55, v48, v54);
        goto LABEL_37;
      }
      (*(void (**)(void *, char *, uint64_t))(v50 + 16))(v101, v48, v49);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v101, 0, 1, v49);
    }
    else
    {
      if (v52)
      {
        (*(void (**)(void *, uint64_t))(v50 + 8))(v101, v49);
        sub_1DC089DA4(0, (unint64_t *)&unk_1EDB28A70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        v54 = *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64);
        v55 = v101;
        goto LABEL_34;
      }
      (*(void (**)(void *, char *, uint64_t))(v50 + 24))(v101, v48, v49);
    }
LABEL_37:
    v26 = v103;
    *((_BYTE *)v31 + v33[6]) = *((_BYTE *)v32 + v33[6]);
    v67 = v33[7];
    v68 = (uint64_t)v31 + v67;
    v69 = (_QWORD *)((char *)v32 + v67);
    v70 = *(_QWORD *)((char *)v32 + v67 + 24);
    if (*(_QWORD *)((char *)v31 + v67 + 24))
    {
      if (v70)
      {
        __swift_assign_boxed_opaque_existential_1((uint64_t *)v68, v69);
LABEL_44:
        v73 = v33[8];
        v74 = (_QWORD *)((char *)v31 + v73);
        v75 = (_QWORD *)((char *)v32 + v73);
        *v74 = *v75;
        v74[1] = v75[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        goto LABEL_45;
      }
      __swift_destroy_boxed_opaque_existential_1(v68);
    }
    else if (v70)
    {
      *(_QWORD *)(v68 + 24) = v70;
      *(_QWORD *)(v68 + 32) = v69[4];
      (**(void (***)(uint64_t, char *))(v70 - 8))(v68, (char *)v69);
      goto LABEL_44;
    }
    v71 = *(_OWORD *)v69;
    v72 = *((_OWORD *)v69 + 1);
    *(_QWORD *)(v68 + 32) = v69[4];
    *(_OWORD *)v68 = v71;
    *(_OWORD *)(v68 + 16) = v72;
    goto LABEL_44;
  }
  if (v37)
  {
    v38 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
LABEL_21:
    sub_1DC089DA4(0, &qword_1EDB31648, (uint64_t (*)(uint64_t))type metadata accessor for ArticleUserInfoModel, v38);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
    goto LABEL_45;
  }
  *v31 = *v32;
  v31[1] = v32[1];
  v40 = v33[5];
  v100 = v4;
  __dst = (char *)v31 + v40;
  v41 = (char *)v32 + v40;
  v42 = sub_1DC3FFDD0();
  v43 = *(_QWORD *)(v42 - 8);
  v44 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48);
  swift_bridgeObjectRetain();
  if (v44(v41, 1, v42))
  {
    sub_1DC089DA4(0, (unint64_t *)&unk_1EDB28A70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(__dst, v41, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v43 + 16))(__dst, v41, v42);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v43 + 56))(__dst, 0, 1, v42);
  }
  *((_BYTE *)v31 + v33[6]) = *((_BYTE *)v32 + v33[6]);
  v56 = v33[7];
  v57 = (char *)v31 + v56;
  v58 = (char *)v32 + v56;
  v59 = *(_QWORD *)((char *)v32 + v56 + 24);
  v26 = v103;
  v4 = v100;
  if (v59)
  {
    *((_QWORD *)v57 + 3) = v59;
    *((_QWORD *)v57 + 4) = *((_QWORD *)v58 + 4);
    (**(void (***)(void))(v59 - 8))();
  }
  else
  {
    v60 = *(_OWORD *)v58;
    v61 = *((_OWORD *)v58 + 1);
    *((_QWORD *)v57 + 4) = *((_QWORD *)v58 + 4);
    *(_OWORD *)v57 = v60;
    *((_OWORD *)v57 + 1) = v61;
  }
  v62 = v33[8];
  v63 = (_QWORD *)((char *)v31 + v62);
  v64 = (_QWORD *)((char *)v32 + v62);
  *v63 = *v64;
  v63[1] = v64[1];
  v65 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v34 + 56);
  swift_bridgeObjectRetain();
  v65(v31, 0, 1, v33);
LABEL_45:
  v76 = v26[10];
  v77 = &a1[v76];
  v78 = &v4[v76];
  v79 = sub_1DC3FFDD0();
  v80 = *(_QWORD *)(v79 - 8);
  v81 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v80 + 48);
  v82 = v81(v77, 1, v79);
  v83 = v81(v78, 1, v79);
  if (v82)
  {
    if (!v83)
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v80 + 16))(v77, v78, v79);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v80 + 56))(v77, 0, 1, v79);
      goto LABEL_51;
    }
    goto LABEL_50;
  }
  if (v83)
  {
    (*(void (**)(_BYTE *, uint64_t))(v80 + 8))(v77, v79);
LABEL_50:
    sub_1DC089DA4(0, (unint64_t *)&unk_1EDB28A70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v77, v78, *(_QWORD *)(*(_QWORD *)(v84 - 8) + 64));
    goto LABEL_51;
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v80 + 24))(v77, v78, v79);
LABEL_51:
  v85 = v26[11];
  v86 = &a1[v85];
  v87 = &v4[v85];
  v88 = *(_QWORD *)v87;
  v86[8] = v87[8];
  *(_QWORD *)v86 = v88;
  v89 = v26[12];
  v90 = (uint64_t)&a1[v89];
  v91 = &v4[v89];
  v92 = *(_QWORD *)&a1[v89 + 8];
  v93 = *(_QWORD *)&v4[v89 + 8];
  if (v92 == 1)
  {
    if (v93 == 1)
    {
      v94 = *((_OWORD *)v91 + 1);
      *(_OWORD *)v90 = *(_OWORD *)v91;
      *(_OWORD *)(v90 + 16) = v94;
    }
    else
    {
      *(_QWORD *)v90 = *(_QWORD *)v91;
      *(_QWORD *)(v90 + 8) = *((_QWORD *)v91 + 1);
      *(_OWORD *)(v90 + 16) = *((_OWORD *)v91 + 1);
      swift_bridgeObjectRetain();
    }
  }
  else if (v93 == 1)
  {
    sub_1DC2F97C4(v90);
    v95 = *((_OWORD *)v91 + 1);
    *(_OWORD *)v90 = *(_OWORD *)v91;
    *(_OWORD *)(v90 + 16) = v95;
  }
  else
  {
    *(_QWORD *)v90 = *(_QWORD *)v91;
    *(_QWORD *)(v90 + 8) = *((_QWORD *)v91 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v90 + 16) = *((_QWORD *)v91 + 2);
    *(_QWORD *)(v90 + 24) = *((_QWORD *)v91 + 3);
  }
  v96 = v26[13];
  v97 = &a1[v96];
  v98 = &v4[v96];
  *v97 = *v98;
  v97[1] = v98[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1DC2F97C4(uint64_t a1)
{
  destroy for PlacardMessage();
  return a1;
}

_WORD *sub_1DC2F97F8(_WORD *a1, _WORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _OWORD *v19;
  _OWORD *v20;
  int *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  __int128 v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  _OWORD *v43;
  _OWORD *v44;
  __int128 v45;
  char *__dst;

  *a1 = *a2;
  v6 = a3[6];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1DC4010E4();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    sub_1DC089DA4(0, (unint64_t *)&qword_1EDB28DE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF0D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v12 = a3[7];
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = type metadata accessor for StocksActivity.StockFeed.Series(0);
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    sub_1DC089DA4(0, (unint64_t *)&unk_1EDB2C480, type metadata accessor for StocksActivity.StockFeed.Series, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v13, v14, v9);
    *(_QWORD *)&v13[*(int *)(v15 + 20)] = *(_QWORD *)&v14[*(int *)(v15 + 20)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  v18 = a3[9];
  *(_OWORD *)((char *)a1 + a3[8]) = *(_OWORD *)((char *)a2 + a3[8]);
  v19 = (_OWORD *)((char *)a1 + v18);
  v20 = (_OWORD *)((char *)a2 + v18);
  v21 = (int *)type metadata accessor for ArticleUserInfoModel();
  v22 = *((_QWORD *)v21 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v22 + 48))(v20, 1, v21))
  {
    sub_1DC089DA4(0, &qword_1EDB31648, (uint64_t (*)(uint64_t))type metadata accessor for ArticleUserInfoModel, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  else
  {
    *v19 = *v20;
    v24 = v21[5];
    __dst = (char *)v19 + v24;
    v25 = (char *)v20 + v24;
    v26 = sub_1DC3FFDD0();
    v27 = *(_QWORD *)(v26 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
    {
      sub_1DC089DA4(0, (unint64_t *)&unk_1EDB28A70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(__dst, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v27 + 32))(__dst, v25, v26);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(__dst, 0, 1, v26);
    }
    *((_BYTE *)v19 + v21[6]) = *((_BYTE *)v20 + v21[6]);
    v29 = v21[7];
    v30 = (char *)v19 + v29;
    v31 = (char *)v20 + v29;
    v32 = *((_OWORD *)v31 + 1);
    *(_OWORD *)v30 = *(_OWORD *)v31;
    *((_OWORD *)v30 + 1) = v32;
    *((_QWORD *)v30 + 4) = *((_QWORD *)v31 + 4);
    *(_OWORD *)((char *)v19 + v21[8]) = *(_OWORD *)((char *)v20 + v21[8]);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v22 + 56))(v19, 0, 1, v21);
  }
  v33 = a3[10];
  v34 = (char *)a1 + v33;
  v35 = (char *)a2 + v33;
  v36 = sub_1DC3FFDD0();
  v37 = *(_QWORD *)(v36 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36))
  {
    sub_1DC089DA4(0, (unint64_t *)&unk_1EDB28A70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v34, v35, v36);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
  }
  v39 = a3[11];
  v40 = a3[12];
  v41 = (char *)a1 + v39;
  v42 = (char *)a2 + v39;
  *(_QWORD *)v41 = *(_QWORD *)v42;
  v41[8] = v42[8];
  v43 = (_OWORD *)((char *)a1 + v40);
  v44 = (_OWORD *)((char *)a2 + v40);
  v45 = v44[1];
  *v43 = *v44;
  v43[1] = v45;
  *(_OWORD *)((char *)a1 + a3[13]) = *(_OWORD *)((char *)a2 + a3[13]);
  return a1;
}

_WORD *sub_1DC2F9BC0(_WORD *a1, _WORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(char *, uint64_t, uint64_t);
  int v21;
  int v22;
  uint64_t (*v23)(uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  int *v33;
  uint64_t v34;
  uint64_t (*v35)(_QWORD *, uint64_t, int *);
  int v36;
  int v37;
  uint64_t (*v38)(uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t (*v52)(char *, uint64_t, uint64_t);
  int v53;
  uint64_t v54;
  size_t v55;
  void *v56;
  uint64_t v57;
  char *v58;
  char *v59;
  __int128 v60;
  int *v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t (*v67)(char *, uint64_t, uint64_t);
  int v68;
  int v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  char *v75;
  char *v76;
  uint64_t v77;
  __int128 v78;
  uint64_t v79;
  _QWORD *v80;
  uint64_t *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  __int128 v89;
  uint64_t v90;
  _QWORD *v91;
  uint64_t *v92;
  uint64_t v93;
  uint64_t v94;
  void *v95;
  int *v96;

  *a1 = *a2;
  v6 = a3[6];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1DC4010E4();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    sub_1DC089DA4(0, (unint64_t *)&qword_1EDB28DE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF0D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v7, v8, v9);
LABEL_7:
  v96 = a3;
  v15 = a3[7];
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = type metadata accessor for StocksActivity.StockFeed.Series(0);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48);
  v21 = v20(v16, 1, v18);
  v22 = v20(v17, 1, v18);
  if (v21)
  {
    if (v22)
    {
      v23 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
LABEL_12:
      sub_1DC089DA4(0, (unint64_t *)&unk_1EDB2C480, type metadata accessor for StocksActivity.StockFeed.Series, v23);
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
      goto LABEL_16;
    }
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v16, v17, v9);
    *(_QWORD *)&v16[*(int *)(v18 + 20)] = *(_QWORD *)&v17[*(int *)(v18 + 20)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
  }
  else
  {
    if (v22)
    {
      sub_1DC0926D8((uint64_t)v16, type metadata accessor for StocksActivity.StockFeed.Series);
      v23 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
      goto LABEL_12;
    }
    (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v16, v17, v9);
    *(_QWORD *)&v16[*(int *)(v18 + 20)] = *(_QWORD *)&v17[*(int *)(v18 + 20)];
    swift_bridgeObjectRelease();
  }
LABEL_16:
  v25 = v96[8];
  v26 = (_QWORD *)((char *)a1 + v25);
  v27 = (uint64_t *)((char *)a2 + v25);
  v29 = *v27;
  v28 = v27[1];
  *v26 = v29;
  v26[1] = v28;
  swift_bridgeObjectRelease();
  v30 = v96[9];
  v31 = (_QWORD *)((char *)a1 + v30);
  v32 = (_QWORD *)((char *)a2 + v30);
  v33 = (int *)type metadata accessor for ArticleUserInfoModel();
  v34 = *((_QWORD *)v33 - 1);
  v35 = *(uint64_t (**)(_QWORD *, uint64_t, int *))(v34 + 48);
  v36 = v35(v31, 1, v33);
  v37 = v35(v32, 1, v33);
  if (v36)
  {
    if (!v37)
    {
      *(_OWORD *)v31 = *(_OWORD *)v32;
      v40 = v33[5];
      v41 = (char *)v31 + v40;
      v42 = (char *)v32 + v40;
      v43 = sub_1DC3FFDD0();
      v44 = *(_QWORD *)(v43 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v42, 1, v43))
      {
        sub_1DC089DA4(0, (unint64_t *)&unk_1EDB28A70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v44 + 32))(v41, v42, v43);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v41, 0, 1, v43);
      }
      *((_BYTE *)v31 + v33[6]) = *((_BYTE *)v32 + v33[6]);
      v57 = v33[7];
      v58 = (char *)v31 + v57;
      v59 = (char *)v32 + v57;
      v60 = *((_OWORD *)v59 + 1);
      *(_OWORD *)v58 = *(_OWORD *)v59;
      *((_OWORD *)v58 + 1) = v60;
      *((_QWORD *)v58 + 4) = *((_QWORD *)v59 + 4);
      *(_OWORD *)((char *)v31 + v33[8]) = *(_OWORD *)((char *)v32 + v33[8]);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v34 + 56))(v31, 0, 1, v33);
      goto LABEL_29;
    }
    v38 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
LABEL_21:
    sub_1DC089DA4(0, &qword_1EDB31648, (uint64_t (*)(uint64_t))type metadata accessor for ArticleUserInfoModel, v38);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
LABEL_29:
    v61 = v96;
    goto LABEL_30;
  }
  if (v37)
  {
    sub_1DC0926D8((uint64_t)v31, (uint64_t (*)(_QWORD))type metadata accessor for ArticleUserInfoModel);
    v38 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
    goto LABEL_21;
  }
  v46 = v32[1];
  *v31 = *v32;
  v31[1] = v46;
  swift_bridgeObjectRelease();
  v47 = v33[5];
  v48 = (char *)v31 + v47;
  v49 = (char *)v32 + v47;
  v50 = sub_1DC3FFDD0();
  v51 = *(_QWORD *)(v50 - 8);
  v52 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v51 + 48);
  v95 = v48;
  LODWORD(v48) = v52(v48, 1, v50);
  v53 = v52(v49, 1, v50);
  if ((_DWORD)v48)
  {
    if (!v53)
    {
      (*(void (**)(void *, char *, uint64_t))(v51 + 32))(v95, v49, v50);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v95, 0, 1, v50);
      goto LABEL_48;
    }
    sub_1DC089DA4(0, (unint64_t *)&unk_1EDB28A70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    v55 = *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64);
    v56 = v95;
  }
  else
  {
    if (!v53)
    {
      (*(void (**)(void *, char *, uint64_t))(v51 + 40))(v95, v49, v50);
      goto LABEL_48;
    }
    (*(void (**)(void *, uint64_t))(v51 + 8))(v95, v50);
    sub_1DC089DA4(0, (unint64_t *)&unk_1EDB28A70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    v55 = *(_QWORD *)(*(_QWORD *)(v85 - 8) + 64);
    v56 = v95;
  }
  memcpy(v56, v49, v55);
LABEL_48:
  v61 = v96;
  *((_BYTE *)v31 + v33[6]) = *((_BYTE *)v32 + v33[6]);
  v86 = v33[7];
  v87 = (uint64_t)v31 + v86;
  v88 = (char *)v32 + v86;
  if (*(_QWORD *)((char *)v31 + v86 + 24))
    __swift_destroy_boxed_opaque_existential_1(v87);
  v89 = *((_OWORD *)v88 + 1);
  *(_OWORD *)v87 = *(_OWORD *)v88;
  *(_OWORD *)(v87 + 16) = v89;
  *(_QWORD *)(v87 + 32) = *((_QWORD *)v88 + 4);
  v90 = v33[8];
  v91 = (_QWORD *)((char *)v31 + v90);
  v92 = (_QWORD *)((char *)v32 + v90);
  v94 = *v92;
  v93 = v92[1];
  *v91 = v94;
  v91[1] = v93;
  swift_bridgeObjectRelease();
LABEL_30:
  v62 = v61[10];
  v63 = (char *)a1 + v62;
  v64 = (char *)a2 + v62;
  v65 = sub_1DC3FFDD0();
  v66 = *(_QWORD *)(v65 - 8);
  v67 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v66 + 48);
  v68 = v67(v63, 1, v65);
  v69 = v67(v64, 1, v65);
  if (v68)
  {
    if (!v69)
    {
      (*(void (**)(char *, char *, uint64_t))(v66 + 32))(v63, v64, v65);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v66 + 56))(v63, 0, 1, v65);
      goto LABEL_36;
    }
    goto LABEL_35;
  }
  if (v69)
  {
    (*(void (**)(char *, uint64_t))(v66 + 8))(v63, v65);
LABEL_35:
    sub_1DC089DA4(0, (unint64_t *)&unk_1EDB28A70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
    goto LABEL_36;
  }
  (*(void (**)(char *, char *, uint64_t))(v66 + 40))(v63, v64, v65);
LABEL_36:
  v71 = v61[11];
  v72 = v61[12];
  v73 = (char *)a1 + v71;
  v74 = (char *)a2 + v71;
  *(_QWORD *)v73 = *(_QWORD *)v74;
  v73[8] = v74[8];
  v75 = (char *)a1 + v72;
  v76 = (char *)a2 + v72;
  if (*(_QWORD *)((char *)a1 + v72 + 8) != 1)
  {
    v77 = *((_QWORD *)v76 + 1);
    if (v77 != 1)
    {
      *(_QWORD *)v75 = *(_QWORD *)v76;
      *((_QWORD *)v75 + 1) = v77;
      swift_bridgeObjectRelease();
      *((_OWORD *)v75 + 1) = *((_OWORD *)v76 + 1);
      goto LABEL_41;
    }
    sub_1DC2F97C4((uint64_t)a1 + v72);
  }
  v78 = *((_OWORD *)v76 + 1);
  *(_OWORD *)v75 = *(_OWORD *)v76;
  *((_OWORD *)v75 + 1) = v78;
LABEL_41:
  v79 = v61[13];
  v80 = (_QWORD *)((char *)a1 + v79);
  v81 = (uint64_t *)((char *)a2 + v79);
  v83 = *v81;
  v82 = v81[1];
  *v80 = v83;
  v80[1] = v82;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1DC2FA2B8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC2FA2C4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int v12;
  uint64_t v14;
  uint64_t v15;

  sub_1DC089DA4(0, (unint64_t *)&qword_1EDB28DE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF0D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = a3[6];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  sub_1DC089DA4(0, (unint64_t *)&unk_1EDB2C480, type metadata accessor for StocksActivity.StockFeed.Series, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v7 = *(_QWORD *)(v10 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v10;
    v9 = a3[7];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  if ((_DWORD)a2 != 2147483646)
  {
    sub_1DC089DA4(0, &qword_1EDB31648, (uint64_t (*)(uint64_t))type metadata accessor for ArticleUserInfoModel, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    v7 = *(_QWORD *)(v14 - 8);
    if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    {
      v8 = v14;
      v9 = a3[9];
    }
    else
    {
      sub_1DC089DA4(0, (unint64_t *)&unk_1EDB28A70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      v8 = v15;
      v7 = *(_QWORD *)(v15 - 8);
      v9 = a3[10];
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + a3[8] + 8);
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  v12 = v11 - 1;
  if (v12 < 0)
    v12 = -1;
  return (v12 + 1);
}

uint64_t sub_1DC2FA420()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1DC2FA42C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1DC089DA4(0, (unint64_t *)&qword_1EDB28DE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF0D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = a4[6];
  }
  else
  {
    sub_1DC089DA4(0, (unint64_t *)&unk_1EDB2C480, type metadata accessor for StocksActivity.StockFeed.Series, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    v9 = *(_QWORD *)(v12 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v12;
      v11 = a4[7];
    }
    else
    {
      if (a3 == 2147483646)
      {
        *(_QWORD *)(a1 + a4[8] + 8) = a2;
        return;
      }
      sub_1DC089DA4(0, &qword_1EDB31648, (uint64_t (*)(uint64_t))type metadata accessor for ArticleUserInfoModel, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      v9 = *(_QWORD *)(v13 - 8);
      if (*(_DWORD *)(v9 + 84) == a3)
      {
        v10 = v13;
        v11 = a4[9];
      }
      else
      {
        sub_1DC089DA4(0, (unint64_t *)&unk_1EDB28A70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        v10 = v14;
        v9 = *(_QWORD *)(v14 - 8);
        v11 = a4[10];
      }
    }
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + v11, a2, a2, v10);
}

uint64_t type metadata accessor for StocksActivityUserInfo()
{
  uint64_t result;

  result = qword_1EDB2B890;
  if (!qword_1EDB2B890)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1DC2FA5B4()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  sub_1DC089DA4(319, (unint64_t *)&qword_1EDB28DE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF0D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  if (v0 <= 0x3F)
  {
    sub_1DC089DA4(319, (unint64_t *)&unk_1EDB2C480, type metadata accessor for StocksActivity.StockFeed.Series, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    if (v1 <= 0x3F)
    {
      sub_1DC089DA4(319, &qword_1EDB31648, (uint64_t (*)(uint64_t))type metadata accessor for ArticleUserInfoModel, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      if (v2 <= 0x3F)
      {
        sub_1DC089DA4(319, (unint64_t *)&unk_1EDB28A70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        if (v3 <= 0x3F)
          swift_initStructMetadata();
      }
    }
  }
}

uint64_t sub_1DC2FA708()
{
  type metadata accessor for StocksV2UserActivitySerializer();
  return sub_1DC4054E8();
}

uint64_t sub_1DC2FA748()
{
  type metadata accessor for StocksV2UserActivitySerializer();
  return sub_1DC405500();
}

unint64_t sub_1DC2FA780(uint64_t a1)
{
  return sub_1DC2FD31C(a1);
}

unint64_t sub_1DC2FA794(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t inited;
  int *v6;
  uint64_t v7;

  sub_1DC089DA4(0, &qword_1EDB40070, (uint64_t (*)(uint64_t))sub_1DC0CFB4C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DC40DC10;
  *(_QWORD *)(inited + 32) = 1635017060;
  *(_QWORD *)(inited + 40) = 0xE400000000000000;
  v6 = sub_1DC2FB7BC(a1, a2);
  if (v2)
  {
    swift_bridgeObjectRelease();
    swift_setDeallocating();
    sub_1DC0CFB4C();
    return swift_arrayDestroy();
  }
  else
  {
    *(_QWORD *)(inited + 72) = MEMORY[0x1E0CB0338];
    *(_QWORD *)(inited + 48) = v6;
    *(_QWORD *)(inited + 56) = v7;
    return sub_1DC0CF9B8(inited);
  }
}

uint64_t sub_1DC2FA884()
{
  type metadata accessor for StocksV2UserActivitySerializer();
  return sub_1DC4054F4();
}

uint64_t sub_1DC2FA8BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 40);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 48);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)v1 + 16), v3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 8))(a1, v3, v4);
}

uint64_t sub_1DC2FA91C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1701869940 && a2 == 0xE400000000000000;
  if (v2 || (sub_1DC4099E8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x546E6F6974636573 && a2 == 0xEB00000000657079 || (sub_1DC4099E8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6B636F7473 && a2 == 0xE500000000000000 || (sub_1DC4099E8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6565466B636F7473 && a2 == 0xEF73656972655364 || (sub_1DC4099E8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x7972657571 && a2 == 0xE500000000000000 || (sub_1DC4099E8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x656C6369747261 && a2 == 0xE700000000000000 || (sub_1DC4099E8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 7107189 && a2 == 0xE300000000000000 || (sub_1DC4099E8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x736E6F6974706FLL && a2 == 0xE700000000000000 || (sub_1DC4099E8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x6F506C6C6F726373 && a2 == 0xEE006E6F69746973 || (sub_1DC4099E8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001DC446880)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else
  {
    v6 = sub_1DC4099E8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 9;
    else
      return 10;
  }
}

uint64_t sub_1DC2FAD58(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t (*v20)(_QWORD);
  uint64_t ObjCClassFromMetadata;
  id v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v33)(_QWORD);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;

  v2 = type metadata accessor for StocksActivity.StockFeed.Series(0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = sub_1DC4010E4();
  v5 = *(_QWORD *)(v43 - 8);
  MEMORY[0x1E0C80A78](v43);
  v7 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for StocksActivity.StockFeed(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v42 - v12;
  v14 = type metadata accessor for StocksActivity(0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v42 - v18;
  sub_1DC0990BC(a1, (uint64_t)&v42 - v18, v20);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      type metadata accessor for Localized();
      ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
      v22 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
      goto LABEL_7;
    case 1u:
      sub_1DC25604C();
      v28 = &v19[*(int *)(v27 + 48)];
      type metadata accessor for Localized();
      v29 = swift_getObjCClassFromMetadata();
      v30 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, v29);
      v31 = sub_1DC3FFC80();

      v32 = sub_1DC4059F8();
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v32 - 8) + 8))(v28, v32);
      v33 = (uint64_t (*)(_QWORD))type metadata accessor for ForYouSectionDescriptor;
      v34 = (uint64_t)v19;
      goto LABEL_11;
    case 2u:
      sub_1DC092ED0((uint64_t)v19, (uint64_t)v13, type metadata accessor for StocksActivity.StockFeed);
      type metadata accessor for Localized();
      v23 = swift_getObjCClassFromMetadata();
      v24 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, v23);
      sub_1DC3FFC80();

      sub_1DC0FDC18(0, (unint64_t *)&qword_1EDB400C0, (unint64_t *)&qword_1EDB400F0, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v25 = swift_allocObject();
      *(_OWORD *)(v25 + 16) = xmmword_1DC40DC10;
      sub_1DC0990BC((uint64_t)v13, (uint64_t)v10, type metadata accessor for StocksActivity.StockFeed);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_1DC092ED0((uint64_t)v10, (uint64_t)v4, type metadata accessor for StocksActivity.StockFeed.Series);
        v26 = v43;
        (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v7, v4, v43);
        sub_1DC0926D8((uint64_t)v4, type metadata accessor for StocksActivity.StockFeed.Series);
      }
      else
      {
        v26 = v43;
        (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v43);
      }
      v38 = sub_1DC4010D8();
      v40 = v39;
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v26);
      *(_QWORD *)(v25 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v25 + 64) = sub_1DC0E7FAC();
      *(_QWORD *)(v25 + 32) = v38;
      *(_QWORD *)(v25 + 40) = v40;
      v31 = sub_1DC408A70();
      swift_bridgeObjectRelease();
      v33 = type metadata accessor for StocksActivity.StockFeed;
      v34 = (uint64_t)v13;
      goto LABEL_11;
    case 3u:
      swift_bridgeObjectRelease();
      type metadata accessor for Localized();
      v35 = swift_getObjCClassFromMetadata();
      v22 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, v35);
LABEL_7:
      v31 = sub_1DC3FFC80();

      break;
    case 4u:
    case 5u:
      type metadata accessor for Localized();
      v36 = swift_getObjCClassFromMetadata();
      v37 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, v36);
      v31 = sub_1DC3FFC80();

      v33 = type metadata accessor for StocksActivity;
      v34 = (uint64_t)v19;
LABEL_11:
      sub_1DC0926D8(v34, v33);
      break;
    default:
      sub_1DC0990BC(a1, (uint64_t)v16, type metadata accessor for StocksActivity);
      v44 = 0;
      v45 = 0xE000000000000000;
      sub_1DC409730();
      sub_1DC408B48();
      sub_1DC409808();
      sub_1DC409838();
      __break(1u);
      JUMPOUT(0x1DC2FB490);
  }
  return v31;
}

void sub_1DC2FB4A8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(_QWORD);
  char *v9;
  uint64_t v10;

  v2 = type metadata accessor for StocksActivity.StockFeed.Series(0);
  MEMORY[0x1E0C80A78](v2);
  v3 = sub_1DC4010E4();
  MEMORY[0x1E0C80A78](v3);
  v4 = type metadata accessor for StocksActivity.StockFeed(0);
  MEMORY[0x1E0C80A78](v4);
  MEMORY[0x1E0C80A78](v5);
  v6 = type metadata accessor for StocksActivity(0);
  MEMORY[0x1E0C80A78](v6);
  sub_1DC0990BC(a1, (uint64_t)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  v9 = (char *)sub_1DC2FB604 + 4 * byte_1DC42644A[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1DC2FB604()
{
  uint64_t v0;
  uint64_t v1;

  sub_1DC0926D8(v1, type metadata accessor for StocksActivity);
  return v0;
}

void sub_1DC2FB638()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1DC25604C();
  v2 = v0 + *(int *)(v1 + 48);
  v3 = sub_1DC4059F8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  JUMPOUT(0x1DC2FB60CLL);
}

void sub_1DC2FB670()
{
  swift_bridgeObjectRelease();
  JUMPOUT(0x1DC2FB614);
}

void sub_1DC2FB67C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  JUMPOUT(0x1DC2FB614);
}

void sub_1DC2FB694()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_1DC092ED0(v5, v3, type metadata accessor for StocksActivity.StockFeed);
  sub_1DC11200C();
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1DC40DC10;
  sub_1DC0990BC(v3, v4, type metadata accessor for StocksActivity.StockFeed);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1DC092ED0(v4, v2, type metadata accessor for StocksActivity.StockFeed.Series);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v1, v2, v0);
    sub_1DC0926D8(v2, type metadata accessor for StocksActivity.StockFeed.Series);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v1, v4, v0);
  }
  v8 = sub_1DC4010B4();
  v10 = v9;
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v1, v0);
  *(_QWORD *)(v7 + 32) = v8;
  *(_QWORD *)(v7 + 40) = v10;
  JUMPOUT(0x1DC2FB610);
}

int *sub_1DC2FB7BC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t (*v55)(_QWORD);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  int *v61;
  char *v62;
  uint64_t v63;
  char *v64;
  char *v65;
  char *v66;
  char *v67;
  int *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  char *v85;
  uint64_t v86;
  char v87;
  void (*v88)(char *, uint64_t);
  void (*v89)(_QWORD, _QWORD, _QWORD);
  char *v90;
  uint64_t v91;
  char v92;
  int *v93;
  char *v94;
  uint64_t v95;
  char *v96;
  char *v97;
  char *v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  char *v104;
  uint64_t v105;
  int *v106;
  char *v107;
  uint64_t v108;
  char *v109;
  char *v110;
  char *v111;
  char *v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  unint64_t v124;
  unint64_t v125;
  uint64_t v126;
  char v127;
  void (*v128)(unint64_t, uint64_t);
  uint64_t v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  uint64_t v138;
  unint64_t v139;
  char *v140;
  uint64_t v141;
  char v142;
  void (*v143)(char *, uint64_t);
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  unint64_t v147;
  uint64_t v148;
  unint64_t v149;
  uint64_t v150;
  char v151;
  unint64_t v152;
  char v153;
  int *v154;
  _BYTE *v155;
  uint64_t *v156;
  uint64_t v157;
  _QWORD *v158;
  _BYTE *v159;
  _BYTE *v160;
  _QWORD *v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t (*v164)(uint64_t);
  uint64_t v165;
  unint64_t v166;
  uint64_t v167;
  char *v168;
  uint64_t v169;
  char v170;
  char *v171;
  char v172;
  char v173;
  int *v174;
  _BYTE *v175;
  uint64_t v176;
  _BYTE *v177;
  uint64_t v178;
  _QWORD *v179;
  _BYTE *v180;
  _BYTE *v181;
  _QWORD *v182;
  unint64_t v183;
  uint64_t v184;
  char *v185;
  uint64_t v186;
  char v187;
  char *v188;
  char v189;
  char v190;
  _BYTE *v191;
  char *v192;
  char *v193;
  _BYTE *v194;
  uint64_t v195;
  _QWORD *v196;
  _BYTE *v197;
  _BYTE *v198;
  _QWORD *v199;
  uint64_t v200;
  uint64_t v201;
  int *result;
  _QWORD v203[2];
  char *v204;
  char *v205;
  uint64_t v206;
  char *v207;
  char *v208;
  char *v209;
  char *v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  char *v215;
  char *v216;
  uint64_t v217;
  char *v218;
  uint64_t v219;
  char *v220;
  _QWORD *v221;
  unint64_t v222;
  uint64_t v223;
  uint64_t v224;
  unint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  __int128 v232;
  uint64_t v233;
  uint64_t v234;
  _QWORD v235[2];
  uint64_t v236;

  v224 = a2;
  v233 = sub_1DC3FFDD0();
  v231 = *(_QWORD *)(v233 - 8);
  MEMORY[0x1E0C80A78](v233);
  v216 = (char *)v203 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v213 = type metadata accessor for StocksActivity.Article(0);
  MEMORY[0x1E0C80A78](v213);
  v214 = (uint64_t)v203 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v219 = (uint64_t)v203 - v6;
  v7 = type metadata accessor for StocksActivity.StockFeed.Series(0);
  v226 = *(_QWORD *)(v7 - 8);
  v227 = v7;
  MEMORY[0x1E0C80A78](v7);
  v206 = (uint64_t)v203 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v232 = sub_1DC404318();
  v217 = *(_QWORD *)(v232 - 8);
  MEMORY[0x1E0C80A78](v232);
  v222 = (unint64_t)v203 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v225 = (unint64_t)v203 - v11;
  MEMORY[0x1E0C80A78](v12);
  v208 = (char *)v203 - v13;
  MEMORY[0x1E0C80A78](v14);
  v220 = (char *)v203 - v15;
  MEMORY[0x1E0C80A78](v16);
  v207 = (char *)v203 - v17;
  MEMORY[0x1E0C80A78](v18);
  v218 = (char *)v203 - v19;
  v211 = type metadata accessor for StocksActivity.StockFeed(0);
  MEMORY[0x1E0C80A78](v211);
  v212 = (uint64_t)v203 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v223 = (uint64_t)v203 - v22;
  v236 = sub_1DC4010E4();
  v234 = *(_QWORD *)(v236 - 8);
  MEMORY[0x1E0C80A78](v236);
  v210 = (char *)v203 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v24);
  v215 = (char *)v203 - v25;
  v26 = type metadata accessor for ForYouSectionDescriptor();
  MEMORY[0x1E0C80A78](v26);
  v28 = (char *)v203 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v29);
  v221 = (_QWORD *)((char *)v203 - v30);
  v228 = type metadata accessor for StocksActivityUserInfo();
  MEMORY[0x1E0C80A78](v228);
  v32 = (char *)v203 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v33);
  v209 = (char *)v203 - v34;
  MEMORY[0x1E0C80A78](v35);
  v37 = (char *)v203 - v36;
  MEMORY[0x1E0C80A78](v38);
  v204 = (char *)v203 - v39;
  MEMORY[0x1E0C80A78](v40);
  v205 = (char *)v203 - v41;
  MEMORY[0x1E0C80A78](v42);
  v203[1] = (char *)v203 - v43;
  MEMORY[0x1E0C80A78](v44);
  v203[0] = (char *)v203 - v45;
  MEMORY[0x1E0C80A78](v46);
  v48 = (char *)v203 - v47;
  v49 = type metadata accessor for StocksActivity(0);
  MEMORY[0x1E0C80A78](v49);
  v51 = (uint64_t)v203 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v52);
  v54 = (char *)v203 - v53;
  v230 = a1;
  sub_1DC0990BC(a1, (uint64_t)v203 - v53, v55);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v232 = *(_OWORD *)v54;
      v56 = *((_QWORD *)v54 + 2);
      v57 = *((_QWORD *)v54 + 3);
      v58 = *((_QWORD *)v54 + 4);
      v59 = *((_QWORD *)v54 + 5);
      sub_1DC3FFA7C();
      swift_allocObject();
      sub_1DC3FFA70();
      StocksActivity.type.getter();
      v60 = v235[0];
      v61 = (int *)v228;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v234 + 56))(&v48[*(int *)(v228 + 24)], 1, 1, v236);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v226 + 56))(&v48[v61[7]], 1, 1, v227);
      v62 = &v48[v61[9]];
      v63 = type metadata accessor for ArticleUserInfoModel();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v63 - 8) + 56))(v62, 1, 1, v63);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v231 + 56))(&v48[v61[10]], 1, 1, v233);
      *v48 = v60;
      v48[1] = 2;
      v64 = &v48[v61[8]];
      *(_QWORD *)v64 = 0;
      *((_QWORD *)v64 + 1) = 0;
      v65 = &v48[v61[11]];
      *(_QWORD *)v65 = 0;
      v65[8] = 1;
      v66 = &v48[v61[12]];
      *(_OWORD *)v66 = v232;
      *((_QWORD *)v66 + 2) = v56;
      *((_QWORD *)v66 + 3) = v57;
      v67 = &v48[v61[13]];
      *(_QWORD *)v67 = v58;
      *((_QWORD *)v67 + 1) = v59;
      sub_1DC080808(&qword_1EDB2B888, (uint64_t (*)(uint64_t))type metadata accessor for StocksActivityUserInfo, (uint64_t)&unk_1DC426520);
      v68 = (int *)sub_1DC3FFA64();
      sub_1DC0926D8((uint64_t)v48, (uint64_t (*)(_QWORD))type metadata accessor for StocksActivityUserInfo);
      swift_release();
      return v68;
    case 1u:
      sub_1DC25604C();
      v89 = (void (*)(_QWORD, _QWORD, _QWORD))v221;
      sub_1DC092ED0((uint64_t)v54, (uint64_t)v221, (uint64_t (*)(_QWORD))type metadata accessor for ForYouSectionDescriptor);
      sub_1DC0990BC((uint64_t)v89, (uint64_t)v28, (uint64_t (*)(_QWORD))type metadata accessor for ForYouSectionDescriptor);
      v90 = (char *)&loc_1DC2FC050 + dword_1DC2FD30C[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
      return result;
    case 2u:
      v71 = v223;
      sub_1DC092ED0((uint64_t)v54, v223, type metadata accessor for StocksActivity.StockFeed);
      v72 = v71;
      v73 = v212;
      sub_1DC0990BC(v72, v212, type metadata accessor for StocksActivity.StockFeed);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_1DC1E4ABC(0, (unint64_t *)&qword_1EDB275E0, (void (*)(uint64_t))type metadata accessor for StocksActivity.StockFeed.Series);
        v75 = *(_QWORD *)(v73 + *(int *)(v74 + 48));
        v76 = v206;
        sub_1DC092ED0(v73, v206, type metadata accessor for StocksActivity.StockFeed.Series);
        v78 = v231;
        v77 = v232;
        v79 = v236;
        v80 = v234;
        v81 = v224;
        if (v224)
        {
          v222 = v75;
          v82 = v217;
          (*(void (**)(char *, _QWORD, _QWORD))(v217 + 104))(v220, *MEMORY[0x1E0DB6E88], v232);
          v83 = *(_QWORD *)(v81 + 16);
          if (v83)
          {
            v84 = (*(unsigned __int8 *)(v82 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v82 + 80);
            v85 = v208;
            v225 = *(_QWORD *)(v82 + 16);
            ((void (*)(char *, unint64_t, uint64_t))v225)(v208, v81 + v84, v77);
            sub_1DC080808(&qword_1F0351810, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB6E90], MEMORY[0x1E0DB6E98]);
            swift_bridgeObjectRetain();
            v86 = v77;
            v87 = sub_1DC4089F8();
            v88 = *(void (**)(char *, uint64_t))(v82 + 8);
            v88(v85, v86);
            if ((v87 & 1) != 0)
            {
LABEL_9:
              swift_bridgeObjectRelease();
              v88(v220, v232);
              v75 = v222 | 1;
              v78 = v231;
              v79 = v236;
              v80 = v234;
              v76 = v206;
              goto LABEL_52;
            }
            if (v83 == 1)
            {
              swift_bridgeObjectRelease();
              v78 = v231;
              v145 = v232;
            }
            else
            {
              v51 = *(_QWORD *)(v82 + 72);
              v166 = v224 + v51 + v84;
              v167 = 1;
              v145 = v232;
              do
              {
                v168 = v208;
                ((void (*)(char *, unint64_t, uint64_t))v225)(v208, v166, v145);
                v169 = v167 + 1;
                if (__OFADD__(v167, 1))
                  goto LABEL_65;
                v170 = sub_1DC4089F8();
                v171 = v168;
                v172 = v170;
                v88(v171, v145);
                if ((v172 & 1) != 0)
                  goto LABEL_9;
                ++v167;
                v166 += v51;
                v145 = v232;
              }
              while (v169 != v83);
              swift_bridgeObjectRelease();
              v78 = v231;
            }
            v79 = v236;
            v80 = v234;
            v76 = v206;
            v88(v220, v145);
          }
          else
          {
            (*(void (**)(char *, uint64_t))(v82 + 8))(v220, v77);
          }
          v75 = v222;
        }
LABEL_52:
        sub_1DC3FFA7C();
        swift_allocObject();
        sub_1DC3FFA70();
        StocksActivity.type.getter();
        v173 = v235[0];
        v174 = (int *)v228;
        v175 = v204;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v80 + 56))(&v204[*(int *)(v228 + 24)], 1, 1, v79);
        v176 = (uint64_t)&v175[v174[7]];
        sub_1DC0990BC(v76, v176, type metadata accessor for StocksActivity.StockFeed.Series);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v226 + 56))(v176, 0, 1, v227);
        v177 = &v175[v174[9]];
        v178 = type metadata accessor for ArticleUserInfoModel();
        (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v178 - 8) + 56))(v177, 1, 1, v178);
        (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v78 + 56))(&v175[v174[10]], 1, 1, v233);
        *v175 = v173;
        v175[1] = 2;
        v179 = &v175[v174[8]];
        *v179 = 0;
        v179[1] = 0;
        v180 = &v175[v174[11]];
        *(_QWORD *)v180 = v75;
        v180[8] = 0;
        v181 = &v175[v174[12]];
        *(_OWORD *)v181 = xmmword_1DC426760;
        *((_QWORD *)v181 + 2) = 0;
        *((_QWORD *)v181 + 3) = 0;
        v182 = &v175[v174[13]];
        *v182 = 0;
        v182[1] = 0;
        sub_1DC080808(&qword_1EDB2B888, (uint64_t (*)(uint64_t))type metadata accessor for StocksActivityUserInfo, (uint64_t)&unk_1DC426520);
        v68 = (int *)sub_1DC3FFA64();
        swift_release();
        sub_1DC0926D8((uint64_t)v175, (uint64_t (*)(_QWORD))type metadata accessor for StocksActivityUserInfo);
        sub_1DC0926D8(v76, type metadata accessor for StocksActivity.StockFeed.Series);
        sub_1DC0926D8(v223, type metadata accessor for StocksActivity.StockFeed);
        return v68;
      }
      sub_1DC1E4ABC(0, (unint64_t *)&qword_1EDB28DF0, (void (*)(uint64_t))MEMORY[0x1E0DAF0D0]);
      v130 = *(char **)(v73 + *(int *)(v129 + 48));
      v131 = v234;
      v132 = v236;
      (*(void (**)(char *, uint64_t, uint64_t))(v234 + 32))(v210, v73, v236);
      v134 = v231;
      v133 = v232;
      v135 = v224;
      v225 = (unint64_t)v130;
      if (v224)
      {
        v136 = v217;
        v137 = v218;
        (*(void (**)(char *, _QWORD, _QWORD))(v217 + 104))(v218, *MEMORY[0x1E0DB6E88], v232);
        v138 = *(_QWORD *)(v135 + 16);
        if (v138)
        {
          v139 = (*(unsigned __int8 *)(v136 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v136 + 80);
          v140 = v207;
          v222 = *(_QWORD *)(v136 + 16);
          ((void (*)(char *, unint64_t, uint64_t))v222)(v207, v135 + v139, v133);
          sub_1DC080808(&qword_1F0351810, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB6E90], MEMORY[0x1E0DB6E98]);
          swift_bridgeObjectRetain();
          v141 = v133;
          v142 = sub_1DC4089F8();
          v143 = *(void (**)(char *, uint64_t))(v136 + 8);
          v143(v140, v141);
          if ((v142 & 1) != 0)
          {
LABEL_25:
            swift_bridgeObjectRelease();
            v143(v218, v232);
            v225 |= 1uLL;
            v134 = v231;
            v132 = v236;
            v131 = v234;
          }
          else
          {
            if (v138 == 1)
            {
              swift_bridgeObjectRelease();
              v134 = v231;
              v132 = v236;
              v131 = v234;
              v146 = v232;
            }
            else
            {
              v51 = *(_QWORD *)(v136 + 72);
              v183 = v224 + v51 + v139;
              v184 = 1;
              v146 = v232;
              do
              {
                v185 = v207;
                ((void (*)(char *, unint64_t, uint64_t))v222)(v207, v183, v146);
                v186 = v184 + 1;
                if (__OFADD__(v184, 1))
                  goto LABEL_66;
                v187 = sub_1DC4089F8();
                v188 = v185;
                v189 = v187;
                v143(v188, v146);
                if ((v189 & 1) != 0)
                  goto LABEL_25;
                ++v184;
                v183 += v51;
                v146 = v232;
              }
              while (v186 != v138);
              swift_bridgeObjectRelease();
              v134 = v231;
              v132 = v236;
              v131 = v234;
            }
            v143(v218, v146);
          }
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v136 + 8))(v137, v133);
        }
      }
      sub_1DC3FFA7C();
      swift_allocObject();
      sub_1DC3FFA70();
      StocksActivity.type.getter();
      v190 = v235[0];
      v68 = (int *)v228;
      v191 = v205;
      v192 = &v205[*(int *)(v228 + 24)];
      v193 = v210;
      (*(void (**)(char *, char *, uint64_t))(v131 + 16))(v192, v210, v132);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v131 + 56))(v192, 0, 1, v132);
      (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v226 + 56))(&v191[v68[7]], 1, 1, v227);
      v194 = &v191[v68[9]];
      v195 = type metadata accessor for ArticleUserInfoModel();
      (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v195 - 8) + 56))(v194, 1, 1, v195);
      (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v134 + 56))(&v191[v68[10]], 1, 1, v233);
      *v191 = v190;
      v191[1] = 2;
      v196 = &v191[v68[8]];
      *v196 = 0;
      v196[1] = 0;
      v197 = &v191[v68[11]];
      *(_QWORD *)v197 = v225;
      v197[8] = 0;
      v198 = &v191[v68[12]];
      *(_OWORD *)v198 = xmmword_1DC426760;
      *((_QWORD *)v198 + 2) = 0;
      *((_QWORD *)v198 + 3) = 0;
      v199 = &v191[v68[13]];
      *v199 = 0;
      v199[1] = 0;
      sub_1DC080808(&qword_1EDB2B888, (uint64_t (*)(uint64_t))type metadata accessor for StocksActivityUserInfo, (uint64_t)&unk_1DC426520);
      v200 = v229;
      v201 = sub_1DC3FFA64();
      if (v200)
      {
        swift_release();
        sub_1DC0926D8((uint64_t)v191, (uint64_t (*)(_QWORD))type metadata accessor for StocksActivityUserInfo);
        (*(void (**)(char *, uint64_t))(v131 + 8))(v193, v132);
        v164 = type metadata accessor for StocksActivity.StockFeed;
        v165 = v223;
LABEL_61:
        sub_1DC0926D8(v165, v164);
      }
      else
      {
        v68 = (int *)v201;
        swift_release();
        sub_1DC0926D8((uint64_t)v191, (uint64_t (*)(_QWORD))type metadata accessor for StocksActivityUserInfo);
        (*(void (**)(char *, uint64_t))(v131 + 8))(v193, v132);
        sub_1DC0926D8(v223, type metadata accessor for StocksActivity.StockFeed);
      }
      return v68;
    case 3u:
      v68 = *(int **)v54;
      v91 = *((_QWORD *)v54 + 1);
      sub_1DC3FFA7C();
      swift_allocObject();
      sub_1DC3FFA70();
      StocksActivity.type.getter();
      v92 = v235[0];
      v93 = (int *)v228;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v234 + 56))(&v37[*(int *)(v228 + 24)], 1, 1, v236);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v226 + 56))(&v37[v93[7]], 1, 1, v227);
      v94 = &v37[v93[9]];
      v95 = type metadata accessor for ArticleUserInfoModel();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v95 - 8) + 56))(v94, 1, 1, v95);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v231 + 56))(&v37[v93[10]], 1, 1, v233);
      *v37 = v92;
      v37[1] = 2;
      v96 = &v37[v93[8]];
      *(_QWORD *)v96 = v68;
      *((_QWORD *)v96 + 1) = v91;
      v97 = &v37[v93[11]];
      *(_QWORD *)v97 = 0;
      v97[8] = 1;
      v98 = &v37[v93[12]];
      *(_OWORD *)v98 = xmmword_1DC426760;
      *((_QWORD *)v98 + 2) = 0;
      *((_QWORD *)v98 + 3) = 0;
      v99 = &v37[v93[13]];
      *(_QWORD *)v99 = 0;
      *((_QWORD *)v99 + 1) = 0;
      sub_1DC080808(&qword_1EDB2B888, (uint64_t (*)(uint64_t))type metadata accessor for StocksActivityUserInfo, (uint64_t)&unk_1DC426520);
      v100 = v229;
      v101 = sub_1DC3FFA64();
      if (!v100)
        v68 = (int *)v101;
      sub_1DC0926D8((uint64_t)v37, (uint64_t (*)(_QWORD))type metadata accessor for StocksActivityUserInfo);
      swift_release();
      return v68;
    case 4u:
      v69 = v219;
      sub_1DC092ED0((uint64_t)v54, v219, type metadata accessor for StocksActivity.Article);
      v70 = v214;
      sub_1DC0990BC(v69, v214, type metadata accessor for StocksActivity.Article);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        swift_unknownObjectRelease();
        v223 = 0;
      }
      else
      {
        sub_1DC1446B4();
        v223 = *(_QWORD *)(v70 + *(int *)(v116 + 48));
        sub_1DC2FD4F8(v70 + *(int *)(v116 + 64));
        sub_1DC0926D8(v70, (uint64_t (*)(_QWORD))MEMORY[0x1E0D570B0]);
      }
      v117 = v233;
      v118 = v234;
      v119 = v236;
      v120 = v232;
      v121 = v224;
      if (!v224)
        goto LABEL_42;
      v122 = v217;
      (*(void (**)(unint64_t, _QWORD, _QWORD))(v217 + 104))(v225, *MEMORY[0x1E0DB6E88], v232);
      v123 = *(_QWORD *)(v121 + 16);
      if (v123)
      {
        v124 = (*(unsigned __int8 *)(v122 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v122 + 80);
        v125 = v222;
        v221 = *(_QWORD **)(v122 + 16);
        ((void (*)(unint64_t, unint64_t, uint64_t))v221)(v222, v121 + v124, v120);
        sub_1DC080808(&qword_1F0351810, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB6E90], MEMORY[0x1E0DB6E98]);
        swift_bridgeObjectRetain();
        v126 = v120;
        v127 = sub_1DC4089F8();
        v128 = *(void (**)(unint64_t, uint64_t))(v122 + 8);
        v128(v125, v126);
        if ((v127 & 1) != 0)
        {
LABEL_21:
          swift_bridgeObjectRelease();
          v128(v225, v232);
          v223 |= 1uLL;
          v117 = v233;
          v118 = v234;
          v119 = v236;
          v69 = v219;
          goto LABEL_42;
        }
        if (v123 == 1)
        {
          swift_bridgeObjectRelease();
          v117 = v233;
          v118 = v234;
          v119 = v236;
          v144 = v232;
        }
        else
        {
          v51 = *(_QWORD *)(v122 + 72);
          v147 = v224 + v51 + v124;
          v148 = 1;
          v144 = v232;
          do
          {
            v149 = v222;
            ((void (*)(unint64_t, unint64_t, uint64_t))v221)(v222, v147, v144);
            v150 = v148 + 1;
            if (__OFADD__(v148, 1))
            {
              __break(1u);
LABEL_65:
              __break(1u);
LABEL_66:
              __break(1u);
LABEL_67:
              sub_1DC0990BC(v230, v51, type metadata accessor for StocksActivity);
              v235[0] = 0;
              v235[1] = 0xE000000000000000;
              sub_1DC409730();
              swift_bridgeObjectRelease();
              strcpy((char *)v235, "This activity ");
              HIBYTE(v235[1]) = -18;
              StocksActivity.identifier.getter();
              sub_1DC408B48();
              swift_bridgeObjectRelease();
              sub_1DC408B48();
              sub_1DC409838();
              __break(1u);
              JUMPOUT(0x1DC2FD2F4);
            }
            v151 = sub_1DC4089F8();
            v152 = v149;
            v153 = v151;
            v128(v152, v144);
            if ((v153 & 1) != 0)
              goto LABEL_21;
            ++v148;
            v147 += v51;
            v144 = v232;
          }
          while (v150 != v123);
          swift_bridgeObjectRelease();
          v117 = v233;
          v118 = v234;
          v119 = v236;
        }
        v69 = v219;
        v128(v225, v144);
      }
      else
      {
        (*(void (**)(unint64_t, uint64_t))(v122 + 8))(v225, v120);
      }
LABEL_42:
      sub_1DC3FFA7C();
      swift_allocObject();
      sub_1DC3FFA70();
      StocksActivity.type.getter();
      v68 = (int *)LOBYTE(v235[0]);
      v154 = (int *)v228;
      v155 = v209;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v118 + 56))(&v209[*(int *)(v228 + 24)], 1, 1, v119);
      (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v226 + 56))(&v155[v154[7]], 1, 1, v227);
      v156 = (uint64_t *)&v155[v154[9]];
      sub_1DC3662A8(v156);
      v157 = type metadata accessor for ArticleUserInfoModel();
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v157 - 8) + 56))(v156, 0, 1, v157);
      (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v231 + 56))(&v155[v154[10]], 1, 1, v117);
      *v155 = (_BYTE)v68;
      v155[1] = 2;
      v158 = &v155[v154[8]];
      *v158 = 0;
      v158[1] = 0;
      v159 = &v155[v154[11]];
      *(_QWORD *)v159 = v223;
      v159[8] = 0;
      v160 = &v155[v154[12]];
      *(_OWORD *)v160 = xmmword_1DC426760;
      *((_QWORD *)v160 + 2) = 0;
      *((_QWORD *)v160 + 3) = 0;
      v161 = &v155[v154[13]];
      *v161 = 0;
      v161[1] = 0;
      sub_1DC080808(&qword_1EDB2B888, (uint64_t (*)(uint64_t))type metadata accessor for StocksActivityUserInfo, (uint64_t)&unk_1DC426520);
      v162 = v229;
      v163 = sub_1DC3FFA64();
      if (v162)
      {
        swift_release();
        sub_1DC0926D8((uint64_t)v155, (uint64_t (*)(_QWORD))type metadata accessor for StocksActivityUserInfo);
        v164 = type metadata accessor for StocksActivity.Article;
        v165 = v69;
        goto LABEL_61;
      }
      v68 = (int *)v163;
      swift_release();
      sub_1DC0926D8((uint64_t)v155, (uint64_t (*)(_QWORD))type metadata accessor for StocksActivityUserInfo);
      sub_1DC0926D8(v69, type metadata accessor for StocksActivity.Article);
      return v68;
    case 5u:
      v102 = v231;
      v103 = v216;
      v104 = v54;
      v105 = v233;
      (*(void (**)(char *, char *, uint64_t))(v231 + 32))(v216, v104, v233);
      sub_1DC3FFA7C();
      swift_allocObject();
      sub_1DC3FFA70();
      StocksActivity.type.getter();
      v68 = (int *)LOBYTE(v235[0]);
      v106 = (int *)v228;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v234 + 56))(&v32[*(int *)(v228 + 24)], 1, 1, v236);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v226 + 56))(&v32[v106[7]], 1, 1, v227);
      v107 = &v32[v106[9]];
      v108 = type metadata accessor for ArticleUserInfoModel();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v108 - 8) + 56))(v107, 1, 1, v108);
      v109 = &v32[v106[10]];
      (*(void (**)(char *, char *, uint64_t))(v102 + 16))(v109, v103, v105);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v102 + 56))(v109, 0, 1, v105);
      *v32 = (char)v68;
      v32[1] = 2;
      v110 = &v32[v106[8]];
      *(_QWORD *)v110 = 0;
      *((_QWORD *)v110 + 1) = 0;
      v111 = &v32[v106[11]];
      *(_QWORD *)v111 = 0;
      v111[8] = 1;
      v112 = &v32[v106[12]];
      *(_OWORD *)v112 = xmmword_1DC426760;
      *((_QWORD *)v112 + 2) = 0;
      *((_QWORD *)v112 + 3) = 0;
      v113 = &v32[v106[13]];
      *(_QWORD *)v113 = 0;
      *((_QWORD *)v113 + 1) = 0;
      sub_1DC080808(&qword_1EDB2B888, (uint64_t (*)(uint64_t))type metadata accessor for StocksActivityUserInfo, (uint64_t)&unk_1DC426520);
      v114 = v229;
      v115 = sub_1DC3FFA64();
      if (!v114)
        v68 = (int *)v115;
      swift_release();
      sub_1DC0926D8((uint64_t)v32, (uint64_t (*)(_QWORD))type metadata accessor for StocksActivityUserInfo);
      (*(void (**)(char *, uint64_t))(v102 + 8))(v103, v105);
      return v68;
    default:
      goto LABEL_67;
  }
}

unint64_t sub_1DC2FD31C(uint64_t a1)
{
  uint64_t v1;
  uint64_t inited;
  int *v4;
  uint64_t v5;

  sub_1DC089DA4(0, &qword_1EDB40070, (uint64_t (*)(uint64_t))sub_1DC0CFB4C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DC40DC10;
  *(_QWORD *)(inited + 32) = 1635017060;
  *(_QWORD *)(inited + 40) = 0xE400000000000000;
  v4 = sub_1DC2FB7BC(a1, 0);
  if (v1)
  {
    swift_bridgeObjectRelease();
    swift_setDeallocating();
    sub_1DC0CFB4C();
    return swift_arrayDestroy();
  }
  else
  {
    *(_QWORD *)(inited + 72) = MEMORY[0x1E0CB0338];
    *(_QWORD *)(inited + 48) = v4;
    *(_QWORD *)(inited + 56) = v5;
    return sub_1DC0CF9B8(inited);
  }
}

id sub_1DC2FD3FC(uint64_t a1)
{
  id v2;
  void *v3;
  id v4;
  void *v5;
  void *v6;

  sub_1DC408A4C();
  v2 = objc_allocWithZone(MEMORY[0x1E0CA6B50]);
  v3 = (void *)sub_1DC408A1C();
  swift_bridgeObjectRelease();
  v4 = objc_msgSend(v2, sel_initWithItemContentType_, v3);

  sub_1DC2FAD58(a1);
  v5 = (void *)sub_1DC408A1C();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_setDisplayName_, v5);

  sub_1DC2FB4A8(a1);
  v6 = (void *)sub_1DC408CC8();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_setKeywords_, v6);

  return v4;
}

uint64_t sub_1DC2FD4F8(uint64_t a1)
{
  uint64_t v2;

  sub_1DC0FDC18(0, (unint64_t *)&qword_1EDB39A70, (unint64_t *)&unk_1EDB39A60, (uint64_t)&protocol descriptor for ArticleScienceDataProviderType, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1DC2FD554()
{
  unint64_t result;

  result = qword_1F0351818;
  if (!qword_1F0351818)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC42671C, &type metadata for StocksV2UserActivitySerializer.SerializationError);
    atomic_store(result, (unint64_t *)&qword_1F0351818);
  }
  return result;
}

unint64_t sub_1DC2FD598()
{
  unint64_t result;

  result = qword_1EDB2B870;
  if (!qword_1EDB2B870)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC4266CC, &type metadata for StocksActivityUserInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB2B870);
  }
  return result;
}

uint64_t sub_1DC2FD5DC(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
    return swift_bridgeObjectRelease();
  return result;
}

unint64_t sub_1DC2FD5F0()
{
  unint64_t result;

  result = qword_1EDB42CC0;
  if (!qword_1EDB42CC0)
  {
    result = MEMORY[0x1DF0CAB8C](&protocol conformance descriptor for StocksActivityType, &type metadata for StocksActivityType);
    atomic_store(result, (unint64_t *)&qword_1EDB42CC0);
  }
  return result;
}

unint64_t sub_1DC2FD634()
{
  unint64_t result;

  result = qword_1EDB42CC8;
  if (!qword_1EDB42CC8)
  {
    result = MEMORY[0x1DF0CAB8C](&protocol conformance descriptor for ForYouFeedSection, &type metadata for ForYouFeedSection);
    atomic_store(result, (unint64_t *)&qword_1EDB42CC8);
  }
  return result;
}

unint64_t sub_1DC2FD678()
{
  unint64_t result;

  result = qword_1F0351820;
  if (!qword_1F0351820)
  {
    result = MEMORY[0x1DF0CAB8C](&protocol conformance descriptor for ScrollPosition, &type metadata for ScrollPosition);
    atomic_store(result, (unint64_t *)&qword_1F0351820);
  }
  return result;
}

void sub_1DC2FD6BC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC2FD598();
    v7 = a3(a1, &type metadata for StocksActivityUserInfo.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1DC2FD718()
{
  unint64_t result;

  result = qword_1EDB2B860;
  if (!qword_1EDB2B860)
  {
    result = MEMORY[0x1DF0CAB8C](&protocol conformance descriptor for StocksActivityType, &type metadata for StocksActivityType);
    atomic_store(result, (unint64_t *)&qword_1EDB2B860);
  }
  return result;
}

unint64_t sub_1DC2FD75C()
{
  unint64_t result;

  result = qword_1EDB278A0;
  if (!qword_1EDB278A0)
  {
    result = MEMORY[0x1DF0CAB8C](&protocol conformance descriptor for ForYouFeedSection, &type metadata for ForYouFeedSection);
    atomic_store(result, (unint64_t *)&qword_1EDB278A0);
  }
  return result;
}

unint64_t sub_1DC2FD7A0()
{
  unint64_t result;

  result = qword_1EDB2D670;
  if (!qword_1EDB2D670)
  {
    result = MEMORY[0x1DF0CAB8C](&protocol conformance descriptor for ScrollPosition, &type metadata for ScrollPosition);
    atomic_store(result, (unint64_t *)&qword_1EDB2D670);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for StocksActivityUserInfo.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF7)
    goto LABEL_17;
  if (a2 + 9 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 9) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 9;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 9;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 9;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xA;
  v8 = v6 - 10;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for StocksActivityUserInfo.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 9 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 9) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF6)
    return ((uint64_t (*)(void))((char *)&loc_1DC2FD8C0 + 4 * byte_1DC426462[v4]))();
  *a1 = a2 + 9;
  return ((uint64_t (*)(void))((char *)sub_1DC2FD8F4 + 4 * byte_1DC42645D[v4]))();
}

uint64_t sub_1DC2FD8F4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC2FD8FC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC2FD904);
  return result;
}

uint64_t sub_1DC2FD910(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC2FD918);
  *(_BYTE *)result = a2 + 9;
  return result;
}

uint64_t sub_1DC2FD91C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC2FD924(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StocksActivityUserInfo.CodingKeys()
{
  return &type metadata for StocksActivityUserInfo.CodingKeys;
}

ValueMetadata *type metadata accessor for StocksV2UserActivitySerializer.SerializationError()
{
  return &type metadata for StocksV2UserActivitySerializer.SerializationError;
}

unint64_t sub_1DC2FD954()
{
  unint64_t result;

  result = qword_1F0351828;
  if (!qword_1F0351828)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC4266A4, &type metadata for StocksActivityUserInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F0351828);
  }
  return result;
}

unint64_t sub_1DC2FD99C()
{
  unint64_t result;

  result = qword_1EDB2B880;
  if (!qword_1EDB2B880)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC426614, &type metadata for StocksActivityUserInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB2B880);
  }
  return result;
}

unint64_t sub_1DC2FD9E4()
{
  unint64_t result;

  result = qword_1EDB2B878;
  if (!qword_1EDB2B878)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC42663C, &type metadata for StocksActivityUserInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB2B878);
  }
  return result;
}

uint64_t OnboardingConfigurationFactory.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t method lookup function for OnboardingConfigurationFactory()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1DC2FDA3C()
{
  uint64_t ObjCClassFromMetadata;
  id v1;
  uint64_t v2;

  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v2 = sub_1DC3FFC80();

  return v2;
}

uint64_t sub_1DC2FDB08()
{
  uint64_t ObjCClassFromMetadata;
  id v1;
  uint64_t v2;

  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v2 = sub_1DC3FFC80();

  return v2;
}

uint64_t sub_1DC2FDBBC()
{
  uint64_t ObjCClassFromMetadata;
  id v1;
  uint64_t v2;

  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v2 = sub_1DC3FFC80();

  return v2;
}

uint64_t type metadata accessor for WatchlistCreationAlert.Localization()
{
  return objc_opt_self();
}

ValueMetadata *type metadata accessor for WatchlistCreationAlert()
{
  return &type metadata for WatchlistCreationAlert;
}

uint64_t sub_1DC2FDCA8()
{
  uint64_t ObjCClassFromMetadata;
  id v1;
  uint64_t v2;

  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v2 = sub_1DC3FFC80();

  return v2;
}

id sub_1DC2FDD6C(void *a1, void *a2)
{
  uint64_t ObjCClassFromMetadata;
  void *v5;
  id v6;
  void *v7;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;
  void *v12;

  type metadata accessor for WatchlistCreationAlert.Localization();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v5 = (void *)objc_opt_self();
  v6 = objc_msgSend(v5, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1DC3FFC80();

  v7 = (void *)sub_1DC408A1C();
  swift_bridgeObjectRelease();
  objc_msgSend(a1, sel_setPlaceholder_, v7, 0x80000001DC446950);

  type metadata accessor for Localized();
  v8 = swift_getObjCClassFromMetadata();
  v9 = objc_msgSend(v5, sel_bundleForClass_, v8);
  sub_1DC3FFC80();

  v10 = (void *)sub_1DC408A1C();
  swift_bridgeObjectRelease();
  objc_msgSend(a1, sel_setAccessibilityLabel_, v10, 0x80000001DC4469B0);

  if (a2)
  {
    v11 = objc_msgSend(v5, sel_bundleForClass_, v8);
    sub_1DC3FFC80();

    v12 = (void *)sub_1DC408A1C();
    swift_bridgeObjectRelease();
    objc_msgSend(a2, sel_setText_, v12, 0x80000001DC446A10);

  }
  objc_msgSend(a1, sel_setEnablesReturnKeyAutomatically_, 1);
  objc_msgSend(a1, sel_setReturnKeyType_, 9);
  return objc_msgSend(a1, sel_setAutocapitalizationType_, 1);
}

uint64_t type metadata accessor for LinkedStockProvider()
{
  return objc_opt_self();
}

uint64_t sub_1DC2FE094(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  void *v7;
  uint64_t v8;

  swift_retain();
  sub_1DC402C08();
  swift_release();
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a3;
  *(_QWORD *)(v6 + 24) = a4;
  swift_retain();
  v7 = (void *)sub_1DC402C80();
  v8 = sub_1DC402D04();
  swift_release();
  swift_release();

  return v8;
}

_QWORD *sub_1DC2FE1F8(unint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  id v20;
  void *v21;
  uint64_t v22;
  void *v23;
  id v24;
  id v25;
  void *v26;
  char *v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  char *v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  _QWORD *v40;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  char *v63;
  unint64_t v64;
  unint64_t v65;
  uint64_t v66;

  v3 = v2;
  v60 = a2;
  v5 = sub_1DC402830();
  v53 = *(_QWORD *)(v5 - 8);
  v54 = v5;
  MEMORY[0x1E0C80A78](v5);
  v52 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1DC089DA4(0, (unint64_t *)&unk_1EDB274C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB3B00], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v8);
  v59 = (char *)&v48 - v9;
  v61 = sub_1DC402860();
  v57 = *(_QWORD *)(v61 - 8);
  MEMORY[0x1E0C80A78](v61);
  v51 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC089DA4(0, (unint64_t *)&unk_1EDB28A70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], v7);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v48 - v12;
  v14 = sub_1DC3FFDD0();
  v66 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v63 = (char *)&v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v58 = (char *)&v48 - v17;
  if (a1 >> 62)
  {
LABEL_26:
    swift_bridgeObjectRetain();
    v18 = sub_1DC409850();
    if (v18)
      goto LABEL_3;
  }
  else
  {
    v18 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v18)
    {
LABEL_3:
      v62 = (void *)v3;
      v55 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v56 = v18;
      v64 = a1;
      v65 = a1 & 0xC000000000000001;
      v3 = 4;
      v48 = v13;
      v49 = v14;
      while (1)
      {
        if (v65)
          v20 = (id)MEMORY[0x1DF0C9FBC](v3 - 4, a1);
        else
          v20 = *(id *)(a1 + 8 * v3);
        v21 = v20;
        a1 = v3 - 3;
        if (__OFADD__(v3 - 4, 1))
        {
          __break(1u);
          goto LABEL_26;
        }
        objc_opt_self();
        v22 = swift_dynamicCastObjCClass();
        if (v22)
        {
          v23 = (void *)v22;
          v24 = v21;
          v25 = objc_msgSend(v23, "URL");
          if (v25)
          {
            v26 = v25;
            v27 = v63;
            sub_1DC3FFD94();

            v28 = v66;
            v29 = *(void (**)(char *, char *, uint64_t))(v66 + 32);
            v29(v13, v27, v14);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v13, 0, 1, v14);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v13, 1, v14) != 1)
            {
              v30 = v58;
              v29(v58, v13, v14);
              (*(void (**)(char *, char *, uint64_t))(v66 + 16))(v63, v30, v14);
              sub_1DC4029D4();
              swift_allocObject();
              sub_1DC4029BC();
              v31 = (uint64_t)v59;
              v32 = v62;
              sub_1DC4029C8();
              if (v32)
              {

                (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v57 + 56))(v31, 1, 1, v61);
                swift_release();

                (*(void (**)(char *, uint64_t))(v66 + 8))(v30, v14);
                sub_1DC0B091C(v31, (unint64_t *)&unk_1EDB274C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB3B00]);

                v62 = 0;
                v18 = v56;
              }
              else
              {
                v62 = 0;
                v33 = v57;
                v34 = v61;
                (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v57 + 56))(v31, 0, 1, v61);
                v35 = v51;
                (*(void (**)(char *, uint64_t, uint64_t))(v33 + 32))(v51, v31, v34);
                v36 = v52;
                sub_1DC402848();
                v50 = sub_1DC402824();
                v38 = v37;
                swift_release();

                (*(void (**)(char *, uint64_t))(v53 + 8))(v36, v54);
                v39 = v35;
                v14 = v49;
                (*(void (**)(char *, uint64_t))(v33 + 8))(v39, v61);
                (*(void (**)(char *, uint64_t))(v66 + 8))(v30, v14);

                if (v38)
                {
                  v40 = v55;
                  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                  v18 = v56;
                  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
                    v55 = sub_1DC108BBC(0, v40[2] + 1, 1, v40);
                  v13 = v48;
                  v42 = v50;
                  v44 = v55[2];
                  v43 = v55[3];
                  if (v44 >= v43 >> 1)
                    v55 = sub_1DC108BBC((_QWORD *)(v43 > 1), v44 + 1, 1, v55);
                  v45 = v55;
                  v55[2] = v44 + 1;
                  v46 = &v45[2 * v44];
                  v46[4] = v42;
                  v46[5] = v38;
                }
                else
                {
                  v13 = v48;
                  v18 = v56;
                }
              }
              goto LABEL_5;
            }
          }
          else
          {
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v66 + 56))(v13, 1, 1, v14);
          }

          sub_1DC0B091C((uint64_t)v13, (unint64_t *)&unk_1EDB28A70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
        }
        else
        {

        }
LABEL_5:
        ++v3;
        v19 = a1 == v18;
        a1 = v64;
        if (v19)
        {
          swift_bridgeObjectRelease();
          return v55;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  return (_QWORD *)MEMORY[0x1E0DEE9D8];
}

void sub_1DC2FE78C(void *a1, uint64_t a2, const void *a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  id v15;
  void *v16;
  id v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  id v22;
  void *v23;
  id v24;
  id v25;
  void *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  id v31;
  uint64_t aBlock;
  uint64_t v33;
  uint64_t (*v34)(uint64_t);
  void *v35;
  uint64_t (*v36)();
  uint64_t v37;

  v29 = a2;
  v31 = a1;
  v28 = sub_1DC4024D0();
  v4 = *(_QWORD *)(v28 - 8);
  MEMORY[0x1E0C80A78](v28);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = a3;
  v8 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
  sub_1DC089DA4(0, (unint64_t *)&qword_1EDB3FE80, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB3FF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  sub_1DC402A40();
  v9 = swift_allocObject();
  v30 = xmmword_1DC40DC10;
  *(_OWORD *)(v9 + 16) = xmmword_1DC40DC10;
  sub_1DC089DA4(0, &qword_1EDB3FE70, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB3FB0], v8);
  v10 = *(_QWORD *)(sub_1DC402A10() - 8);
  v11 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = v30;
  v13 = (_QWORD *)(v12 + v11);
  *v13 = 0x6C6F626D7973;
  v13[1] = 0xE600000000000000;
  (*(void (**)(void))(v10 + 104))();
  *(_QWORD *)&v30 = a3;
  _Block_copy(a3);
  v14 = sub_1DC27359C(MEMORY[0x1E0DEE9D8]);
  MEMORY[0x1DF0C3290](0x736B636F7473, 0xE600000000000000, 0, 0, 0, 0, 0, 0, v12, v14);
  v15 = objc_msgSend(v31, sel_documentController);
  if (v15)
  {
    v16 = v15;
    v17 = objc_msgSend(v15, sel_additions);
    sub_1DC2FEC50();
    v18 = sub_1DC408CD4();

    swift_bridgeObjectRetain();
    sub_1DC2FE1F8(v18, v9);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v29 + OBJC_IVAR____TtC8StocksUI19LinkedStockProvider_metadataManager), *(_QWORD *)(v29 + OBJC_IVAR____TtC8StocksUI19LinkedStockProvider_metadataManager + 24));
    v19 = v28;
    (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E0DB32A8], v28);
    sub_1DC400CAC();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v19);
    v20 = swift_allocObject();
    *(_QWORD *)(v20 + 16) = sub_1DC167734;
    *(_QWORD *)(v20 + 24) = v7;
    swift_retain();
    v21 = (void *)sub_1DC402C80();
    type metadata accessor for LinkedStockProvider();
    sub_1DC402D10();
    swift_release();
    swift_release();
    swift_release();

    v22 = objc_allocWithZone(MEMORY[0x1E0D58A00]);
    v36 = nullsub_1;
    v37 = 0;
    aBlock = MEMORY[0x1E0C809B0];
    v33 = 1107296256;
    v34 = sub_1DC081B88;
    v35 = &block_descriptor_6_0;
    v23 = _Block_copy(&aBlock);
    swift_release();
    v24 = objc_msgSend(v22, sel_initWithBlock_, v23);
    _Block_release(v23);
    if (v24)
    {
      swift_release();

      return;
    }
    _Block_release((const void *)v30);
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    (*(void (**)(void))(v30 + 16))();
    v25 = objc_allocWithZone(MEMORY[0x1E0D58A00]);
    v36 = nullsub_1;
    v37 = 0;
    aBlock = MEMORY[0x1E0C809B0];
    v33 = 1107296256;
    v34 = sub_1DC081B88;
    v35 = &block_descriptor_32;
    v26 = _Block_copy(&aBlock);
    swift_release();
    v27 = objc_msgSend(v25, sel_initWithBlock_, v26);
    _Block_release(v26);
    if (v27)
    {
      swift_release();
      return;
    }
  }
  _Block_release((const void *)v30);
  __break(1u);
}

uint64_t sub_1DC2FEC2C()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

unint64_t sub_1DC2FEC50()
{
  unint64_t result;

  result = qword_1EDB3F818;
  if (!qword_1EDB3F818)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EDB3F818);
  }
  return result;
}

uint64_t sub_1DC2FEC8C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DC2FECB0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1DC2FE094(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

void sub_1DC2FECD4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  unsigned int v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;

  v2 = a2 + 16;
  swift_beginAccess();
  v3 = MEMORY[0x1DF0CAD78](v2);
  if (v3)
  {
    v4 = (void *)v3;
    v5 = *(unsigned __int16 *)(v3 + OBJC_IVAR____TtC8StocksUI23StockListViewController_toolbarState);
    if (*(_WORD *)(v3 + OBJC_IVAR____TtC8StocksUI23StockListViewController_toolbarState) != 2)
    {
      v6 = sub_1DC4090D0();
      if (v6)
      {
        v7 = (void *)v6;
        sub_1DC0C9038(v5 & 1, (v5 >> 8) & 1);
        sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3F880);
        v8 = sub_1DC408CC8();
        swift_bridgeObjectRelease();
        objc_msgSend(v7, sel_setToolbarItems_, v8);

        v4 = (void *)v8;
      }
    }

  }
}

void sub_1DC2FEDAC(char *a1, id a2)
{
  char v3;
  id v4;
  _BOOL8 v5;
  id v6;
  id v7;

  v3 = *a1;
  v4 = objc_msgSend(a2, sel_editButtonItem);
  v5 = (v3 & 1) == 0;
  objc_msgSend(v4, sel_setEnabled_, v5);

  v6 = objc_msgSend(a2, sel_navigationItem);
  v7 = objc_msgSend(v6, sel_rightBarButtonItem);

  objc_msgSend(v7, sel_setEnabled_, v5);
}

void sub_1DC2FEE60(void *a1)
{
  char *v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = OBJC_IVAR____TtC8StocksUI23StockListViewController_scrollTracker;
  *(_QWORD *)&v1[v2] = objc_msgSend(objc_allocWithZone((Class)sub_1DC4043F0()), sel_init);
  *(_QWORD *)&v1[OBJC_IVAR____TtC8StocksUI23StockListViewController_backgroundView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC8StocksUI23StockListViewController____lazy_storage___exchangeStatusToolbarItem] = 0;
  *(_WORD *)&v1[OBJC_IVAR____TtC8StocksUI23StockListViewController_toolbarState] = 2;
  v3 = &v1[OBJC_IVAR____TtC8StocksUI23StockListViewController_lastContentOffset];
  *(_QWORD *)v3 = 0;
  *((_QWORD *)v3 + 1) = 0;
  v3[16] = 1;
  v4 = OBJC_IVAR____TtC8StocksUI23StockListViewController_logger;
  if (qword_1EDB273E0 != -1)
    swift_once();
  v5 = sub_1DC403F64();
  v6 = __swift_project_value_buffer(v5, (uint64_t)qword_1EDB5DDE8);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(&v1[v4], v6, v5);
  *(_QWORD *)&v1[OBJC_IVAR____TtC8StocksUI23StockListViewController_contentSizeCategoryObserver] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC8StocksUI23StockListViewController_applicationStateObserver] = 0;

  sub_1DC409838();
  __break(1u);
}

id sub_1DC2FEFBC()
{
  char *v0;
  objc_class *ObjectType;
  void *v2;
  id v3;
  id v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  id v8;
  objc_super v10;

  ObjectType = (objc_class *)swift_getObjectType();
  v2 = (void *)objc_opt_self();
  v3 = objc_msgSend(v2, sel_defaultCenter);
  objc_msgSend(v3, sel_removeObserver_name_object_, v0, *MEMORY[0x1E0DC46F0], 0);

  v4 = objc_msgSend(v2, sel_defaultCenter);
  objc_msgSend(v4, sel_removeObserver_name_object_, v0, *MEMORY[0x1E0DC4608], 0);

  v5 = *(_QWORD *)&v0[OBJC_IVAR____TtC8StocksUI23StockListViewController_contentSizeCategoryObserver];
  if (v5)
  {
    swift_unknownObjectRetain();
    v6 = objc_msgSend(v2, sel_defaultCenter);
    objc_msgSend(v6, sel_removeObserver_, v5);
    swift_unknownObjectRelease();

  }
  v7 = *(_QWORD *)&v0[OBJC_IVAR____TtC8StocksUI23StockListViewController_applicationStateObserver];
  if (v7)
  {
    swift_unknownObjectRetain();
    v8 = objc_msgSend(v2, sel_defaultCenter);
    objc_msgSend(v8, sel_removeObserver_, v7);
    swift_unknownObjectRelease();

  }
  v10.receiver = v0;
  v10.super_class = ObjectType;
  return objc_msgSendSuper2(&v10, sel_dealloc);
}

uint64_t sub_1DC2FF2D0()
{
  return type metadata accessor for StockListViewController();
}

uint64_t sub_1DC2FF308()
{
  swift_getObjectType();
  return sub_1DC4013B4();
}

uint64_t sub_1DC2FF34C()
{
  swift_getObjectType();
  return sub_1DC4013CC();
}

uint64_t sub_1DC2FF388()
{
  swift_getObjectType();
  return sub_1DC4013C0();
}

uint64_t sub_1DC2FF3C4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void (*v6)(char *);
  uint64_t v8;

  v2 = sub_1DC3FFADC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(void (**)(char *))(a1 + 32);
  sub_1DC3FFAD0();
  swift_retain();
  v6(v5);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

void sub_1DC2FF468(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v3;
  void *v4;
  id v5;
  id v6;

  v2 = a2 + 16;
  swift_beginAccess();
  v3 = (void *)MEMORY[0x1DF0CAD78](v2);
  if (v3)
  {
    v4 = v3;
    if ((objc_msgSend(v3, sel_isEditing) & 1) == 0)
    {
      v5 = objc_msgSend(v4, sel_navigationItem);
      v6 = sub_1DC0CEAC8();
      objc_msgSend(v5, sel_setRightBarButtonItem_, v6);

    }
  }
}

void sub_1DC2FF50C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t ObjectType;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t (*v40)(void);
  uint64_t v41;
  uint64_t (*v42)(void);
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  BOOL v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  id v54;
  id v55;
  unsigned __int8 v56;
  uint64_t v57;
  void (*v58)(uint64_t *, _QWORD);
  void (*v59)(char *);
  char *v60;
  char *v61;
  uint64_t (*v62)(void);
  uint64_t v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t (*v73)(uint64_t);
  uint64_t v74;
  void (*v75)(uint64_t *, _QWORD);
  char *v76;
  void (*v77)(char *, uint64_t);
  int EnumCaseMultiPayload;
  uint64_t v79;
  uint64_t v80;
  void *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  NSObject *v85;
  os_log_type_t v86;
  uint8_t *v87;
  uint64_t v88;
  void *v89;
  uint64_t v90;
  void *v91;
  char *v92;
  NSObject *v93;
  os_log_type_t v94;
  uint8_t *v95;
  uint8_t *v96;
  uint64_t v97;
  char *v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t *v104;
  char *v105;
  void (*v106)(char *, uint64_t, uint64_t);
  char *v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  char *v111;
  char *v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t *v118;
  uint64_t v119;
  uint64_t v120;
  void (*v121)(char *, uint64_t, uint64_t);
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;

  v101 = sub_1DC403F64();
  v100 = *(_QWORD *)(v101 - 8);
  MEMORY[0x1E0C80A78](v101);
  v99 = (char *)&v98 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v98 = (char *)&v98 - v6;
  v119 = type metadata accessor for StockListModel(0);
  MEMORY[0x1E0C80A78](v119);
  v112 = (char *)&v98 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v111 = (char *)&v98 - v9;
  sub_1DC0F8190();
  v11 = v10;
  v12 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v98 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v126 = (char *)&v98 - v16;
  sub_1DC108DCC();
  v108 = v17;
  MEMORY[0x1E0C80A78](v17);
  v123 = (uint64_t)&v98 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0CC0A4(0, (unint64_t *)&qword_1EDB29D98, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60]);
  v120 = v19;
  v125 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v122 = (char *)&v98 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v98 - v22;
  MEMORY[0x1E0C80A78](v24);
  v107 = (char *)&v98 - v25;
  sub_1DC0CC0A4(0, (unint64_t *)&qword_1EDB2AB40, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790]);
  v113 = v26;
  v115 = *(_QWORD *)(v26 - 8);
  MEMORY[0x1E0C80A78](v26);
  v114 = (char *)&v98 - v27;
  sub_1DC11258C();
  v29 = v28;
  MEMORY[0x1E0C80A78](v28);
  v116 = (uint64_t)&v98 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = a2 + 16;
  swift_beginAccess();
  v32 = MEMORY[0x1DF0CAD78](a2 + 16);
  if (v32)
  {
    v33 = (void *)v32;
    v34 = *(_QWORD *)(v32 + OBJC_IVAR____TtC8StocksUI23StockListViewController_eventHandler);
    swift_unknownObjectRetain();

    v35 = *(_QWORD *)(v34 + 40);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v35 + 96))(ObjectType, v35);
    swift_unknownObjectRelease();
  }
  v109 = v11;
  v110 = v14;
  v124 = v12;
  swift_beginAccess();
  v102 = v31;
  v37 = MEMORY[0x1DF0CAD78](v31);
  if (v37)
  {
    v38 = (void *)v37;
    sub_1DC08E44C();

  }
  v39 = v113;
  v106 = *(void (**)(char *, uint64_t, uint64_t))(v115 + 16);
  v106(v114, a1, v113);
  v40 = MEMORY[0x1E0DBC790];
  sub_1DC0D4244((unint64_t *)&unk_1EDB2AB20, (unint64_t *)&qword_1EDB2AB40, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790], MEMORY[0x1E0DBC7C0]);
  v41 = v116;
  sub_1DC408BF0();
  v42 = v40;
  v43 = (uint64_t *)(v41 + *(int *)(v29 + 36));
  v44 = sub_1DC0D4244((unint64_t *)&unk_1EDB2AB30, (unint64_t *)&qword_1EDB2AB40, (uint64_t (*)(uint64_t, _QWORD *))v42, MEMORY[0x1E0DBC7C8]);
  v45 = *v43;
  sub_1DC408ED8();
  v46 = v45 == v127;
  v47 = v120;
  v48 = v125;
  if (!v46)
  {
    v105 = v23;
    v104 = v43;
    v103 = v44;
    do
    {
      v58 = (void (*)(uint64_t *, _QWORD))sub_1DC408EF0();
      v59 = *(void (**)(char *))(v48 + 16);
      v60 = v107;
      v59(v107);
      v58(&v127, 0);
      v61 = v114;
      v106(v114, v41, v39);
      sub_1DC408EE4();
      (*(void (**)(char *, uint64_t))(v115 + 8))(v61, v39);
      (*(void (**)(char *, char *, uint64_t))(v48 + 32))(v23, v60, v47);
      v121 = (void (*)(char *, uint64_t, uint64_t))v59;
      ((void (*)(char *, char *, uint64_t))v59)(v122, v23, v47);
      v62 = MEMORY[0x1E0DB7B60];
      sub_1DC0D4244((unint64_t *)&unk_1EDB29D80, (unint64_t *)&qword_1EDB29D98, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60], MEMORY[0x1E0DB7B90]);
      v63 = v123;
      sub_1DC408BF0();
      v64 = (uint64_t *)(v63 + *(int *)(v108 + 36));
      v65 = sub_1DC0D4244(&qword_1EDB29D90, (unint64_t *)&qword_1EDB29D98, (uint64_t (*)(uint64_t, _QWORD *))v62, MEMORY[0x1E0DB7B98]);
      v66 = *v64;
      v67 = v63;
      sub_1DC408ED8();
      v68 = (uint64_t)v112;
      v69 = (uint64_t)v111;
      v70 = v124;
      v71 = v110;
      v72 = v109;
      if (v66 != v127)
      {
        v118 = v64;
        v117 = v65;
        do
        {
          v75 = (void (*)(uint64_t *, _QWORD))sub_1DC408EF0();
          (*(void (**)(char *))(v70 + 16))(v126);
          v75(&v127, 0);
          v76 = v122;
          v121(v122, v67, v47);
          sub_1DC408EE4();
          v77 = *(void (**)(char *, uint64_t))(v125 + 8);
          v77(v76, v47);
          (*(void (**)(char *, char *, uint64_t))(v70 + 32))(v71, v126, v72);
          sub_1DC404354();
          sub_1DC0990BC(v69, v68, type metadata accessor for StockListModel);
          EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          v73 = type metadata accessor for StockListStockModel;
          if (EnumCaseMultiPayload)
          {
            if (EnumCaseMultiPayload != 1)
            {
              sub_1DC0926D8(v69, type metadata accessor for StockListModel);
              (*(void (**)(char *, uint64_t))(v124 + 8))(v71, v72);
              sub_1DC0926D8(v123, (uint64_t (*)(_QWORD))sub_1DC108DCC);
              v77(v105, v120);
              sub_1DC0926D8(v116, (uint64_t (*)(_QWORD))sub_1DC11258C);
              v79 = v102;
              swift_beginAccess();
              v80 = MEMORY[0x1DF0CAD78](v79);
              if (v80)
              {
                v81 = (void *)v80;
                v82 = v100;
                v83 = v98;
                v84 = v101;
                (*(void (**)(char *, uint64_t, uint64_t))(v100 + 16))(v98, v80 + OBJC_IVAR____TtC8StocksUI23StockListViewController_logger, v101);

                v85 = sub_1DC403F4C();
                v86 = sub_1DC408FE0();
                if (os_log_type_enabled(v85, v86))
                {
                  v87 = (uint8_t *)swift_slowAlloc();
                  *(_WORD *)v87 = 0;
                  _os_log_impl(&dword_1DC07D000, v85, v86, "Hiding ForYou card due to having an empty stock list", v87, 2u);
                  MEMORY[0x1DF0CAC88](v87, -1, -1);
                }

                (*(void (**)(char *, uint64_t))(v82 + 8))(v83, v84);
              }
              swift_beginAccess();
              v88 = MEMORY[0x1DF0CAD78](v79);
              if (v88)
              {
                v89 = (void *)v88;
                sub_1DC2FFFE4(0, 1);
                goto LABEL_31;
              }
              return;
            }
            v73 = type metadata accessor for StockListModel;
          }
          sub_1DC0926D8(v68, v73);
          sub_1DC0926D8(v69, type metadata accessor for StockListModel);
          v70 = v124;
          (*(void (**)(char *, uint64_t))(v124 + 8))(v71, v72);
          v74 = *v118;
          v67 = v123;
          v47 = v120;
          sub_1DC408ED8();
        }
        while (v74 != v127);
      }
      sub_1DC0926D8(v67, (uint64_t (*)(_QWORD))sub_1DC108DCC);
      v48 = v125;
      v23 = v105;
      (*(void (**)(char *, uint64_t))(v125 + 8))(v105, v47);
      v57 = *v104;
      v41 = v116;
      v39 = v113;
      sub_1DC408ED8();
    }
    while (v57 != v127);
  }
  sub_1DC0926D8(v41, (uint64_t (*)(_QWORD))sub_1DC11258C);
  v49 = v102;
  swift_beginAccess();
  v50 = (void *)MEMORY[0x1DF0CAD78](v49);
  v51 = v101;
  v52 = v100;
  if (v50)
  {
    v53 = v50;
    v54 = objc_msgSend(v50, sel_navigationItem);
    v55 = objc_msgSend(v54, sel_searchController);

    if (v55)
    {
      v56 = objc_msgSend(v55, sel_isActive);

      if ((v56 & 1) != 0)
        return;
    }
    else
    {

    }
  }
  swift_beginAccess();
  v90 = MEMORY[0x1DF0CAD78](v49);
  if (v90)
  {
    v91 = (void *)v90;
    v92 = v99;
    (*(void (**)(char *, uint64_t, uint64_t))(v52 + 16))(v99, v90 + OBJC_IVAR____TtC8StocksUI23StockListViewController_logger, v51);

    v93 = sub_1DC403F4C();
    v94 = sub_1DC408FE0();
    if (os_log_type_enabled(v93, v94))
    {
      v95 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v95 = 0;
      _os_log_impl(&dword_1DC07D000, v93, v94, "Showing ForYou card after a blueprint refresh", v95, 2u);
      v96 = v95;
      v92 = v99;
      MEMORY[0x1DF0CAC88](v96, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v52 + 8))(v92, v51);
  }
  swift_beginAccess();
  v97 = MEMORY[0x1DF0CAD78](v49);
  if (v97)
  {
    v89 = (void *)v97;
    sub_1DC096E2C(1);
LABEL_31:

  }
}

void sub_1DC2FFFE4(int a1, int a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  void *v22;
  unint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t);
  uint64_t (*v25)(void);
  uint64_t (*v26)(uint64_t);
  id v27;
  char *v28;
  char *v29;
  char v30;
  void (*v31)(char *, char *, uint64_t);
  char *v32;
  char v33;
  char *v34;
  char v35;
  NSObject *v36;
  os_log_type_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  int v44;
  int v45;
  char *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  sub_1DC130A74(0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (uint64_t)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC132A64();
  v9 = v8;
  v52 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1DC4059F8();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v49 = (char *)&v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v43 - v16;
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v43 - v19;
  v47 = v2;
  v21 = sub_1DC4090D0();
  if (v21)
  {
    v22 = (void *)v21;
    v45 = a1;
    v48 = v17;
    v46 = v20;
    v23 = sub_1DC4056B0();
    v44 = a2;
    if (v23 >> 62)
      v24 = (void (*)(char *, uint64_t, uint64_t))sub_1DC409850();
    else
      v24 = *(void (**)(char *, uint64_t, uint64_t))((v23 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRelease();
    if (__OFSUB__(v24, 1))
    {
      __break(1u);
    }
    else
    {
      v53 = sub_1DC4056C8();
      v51 = v12;
      v25 = MEMORY[0x1E0DBA2A8];
      sub_1DC089DA4(0, &qword_1EDB3F6F8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DBA2A8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
      v50 = v22;
      v26 = (uint64_t (*)(uint64_t))v25;
      v12 = v51;
      sub_1DC11300C((unint64_t *)&unk_1EDB3F700, &qword_1EDB3F6F8, v26, MEMORY[0x1E0DEAF50]);
      sub_1DC408E9C();
      swift_bridgeObjectRelease();
      v53 = (uint64_t)v24 - 1;
      sub_1DC402704();
      (*(void (**)(char *, uint64_t))(v52 + 8))(v11, v9);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v7, 1, v12) == 1)
      {

        sub_1DC0926D8(v7, (uint64_t (*)(_QWORD))sub_1DC130A74);
        return;
      }
      v27 = v50;
      v28 = v46;
      (*(void (**)(char *, uint64_t, uint64_t))(v13 + 32))(v46, v7, v12);
      v7 = *MEMORY[0x1E0DBA270];
      v24 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 104);
      v29 = v48;
      v24(v48, v7, v12);
      sub_1DC080808((unint64_t *)&qword_1EDB2A3C8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DBA2A8], MEMORY[0x1E0DBA2C0]);
      v30 = sub_1DC4089F8();
      v11 = *(char **)(v13 + 8);
      ((void (*)(char *, uint64_t))v11)(v29, v12);
      if ((v30 & 1) != 0)
      {
        ((void (*)(char *, uint64_t))v11)(v28, v12);

        return;
      }
      v31 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
      v32 = v49;
      v31(v49, v28, v12);
      v23 = (unint64_t)v27;
      if ((v45 & 1) != 0)
      {
        ((void (*)(char *, uint64_t))v11)(v32, v12);
        v33 = v44;
      }
      else
      {
        v34 = v48;
        v24(v48, *MEMORY[0x1E0DBA290], v12);
        v35 = sub_1DC4089F8();
        ((void (*)(char *, uint64_t))v11)(v34, v12);
        ((void (*)(char *, uint64_t))v11)(v32, v12);
        v33 = v44;
        if ((v35 & 1) != 0)
        {
          ((void (*)(char *, uint64_t))v11)(v46, v12);

          return;
        }
      }
      v36 = sub_1DC403F4C();
      v37 = sub_1DC408FE0();
      if (os_log_type_enabled(v36, v37))
      {
        v38 = swift_slowAlloc();
        *(_DWORD *)v38 = 67109376;
        LODWORD(v53) = v45 & 1;
        sub_1DC4095B0();
        *(_WORD *)(v38 + 8) = 1024;
        LODWORD(v53) = v33 & 1;
        v23 = (unint64_t)v27;
        sub_1DC4095B0();
        _os_log_impl(&dword_1DC07D000, v36, v37, "Hiding ForYou card ifExpanded=%{BOOL}d, animated=%{BOOL}d", (uint8_t *)v38, 0xEu);
        v39 = v38;
        v12 = v51;
        MEMORY[0x1DF0CAC88](v39, -1, -1);
      }

      v40 = sub_1DC4056B0();
      if (!(v40 >> 62))
      {
        v41 = *(_QWORD *)((v40 & 0xFFFFFFFFFFFFF8) + 0x10);
        goto LABEL_17;
      }
    }
    v41 = sub_1DC409850();
LABEL_17:
    swift_bridgeObjectRelease();
    if (__OFSUB__(v41, 1))
    {
      __break(1u);
    }
    else
    {
      v42 = v48;
      v24(v48, v7, v12);
      sub_1DC40565C();

      ((void (*)(char *, uint64_t))v11)(v42, v12);
      ((void (*)(char *, uint64_t))v11)(v46, v12);
    }
  }
}

void sub_1DC300508(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  void *v3;
  id v4;
  id v5;
  id v6;

  v1 = a1 + 16;
  swift_beginAccess();
  v2 = (void *)MEMORY[0x1DF0CAD78](v1);
  if (v2)
  {
    v3 = v2;
    v4 = objc_msgSend(v2, sel_navigationItem);

    v5 = objc_msgSend(v4, sel_searchController);
    if (v5)
    {
      v6 = objc_msgSend(v5, sel_searchBar);

      objc_msgSend(v6, sel_becomeFirstResponder);
    }
  }
}

uint64_t sub_1DC3005C4(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  void *v3;
  uint64_t v4;

  v1 = a1 + 16;
  swift_beginAccess();
  result = MEMORY[0x1DF0CAD78](v1);
  if (result)
  {
    v3 = (void *)result;
    v4 = *(_QWORD *)(result + OBJC_IVAR____TtC8StocksUI23StockListViewController_eventHandler);
    swift_unknownObjectRetain();

    __swift_project_boxed_opaque_existential_1((_QWORD *)(v4 + 48), *(_QWORD *)(v4 + 72));
    sub_1DC3155CC(0);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1DC30064C(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  void (*v8)(uint64_t, uint64_t (*)(), uint64_t, uint64_t, uint64_t);
  id v9;

  v1 = a1 + 16;
  swift_beginAccess();
  result = MEMORY[0x1DF0CAD78](v1);
  if (result)
  {
    v3 = (void *)result;
    v4 = *(_QWORD *)(result + OBJC_IVAR____TtC8StocksUI23StockListViewController_eventHandler);
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_WORD *)(v5 + 24) = 257;
    v6 = *(_QWORD *)(v4 + 40);
    ObjectType = swift_getObjectType();
    v8 = *(void (**)(uint64_t, uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v6 + 136);
    v9 = v3;
    v8(1, sub_1DC307458, v5, ObjectType, v6);

    return swift_release();
  }
  return result;
}

void sub_1DC300718(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;

  v4 = a3 + 16;
  swift_beginAccess();
  v5 = MEMORY[0x1DF0CAD78](v4);
  if (v5)
  {
    v6 = (void *)v5;
    sub_1DC305B48(a1);

  }
}

uint64_t sub_1DC3007B4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  unsigned int (*v15)(char *, uint64_t, uint64_t);
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t (*v22)(void);
  char *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[2];
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  sub_1DC0CC0A4(0, (unint64_t *)&qword_1EDB2AB40, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790]);
  v29 = *(_QWORD *)(v3 - 8);
  v30 = v3;
  MEMORY[0x1E0C80A78](v3);
  v28 = (char *)v26 - v4;
  sub_1DC0D8B60(0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v26 - v9;
  v11 = sub_1DC400280();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getObjectType();
  sub_1DC4065BC();
  v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  if (v15(v7, 1, v11) == 1)
  {
    v26[1] = v1;
    v27 = a1;
    sub_1DC4055CC();
    v16 = (void *)sub_1DC405074();
    swift_release();
    v17 = objc_msgSend(v16, sel_indexPathsForSelectedItems);

    if (v17)
    {
      v18 = sub_1DC408CD4();

      if (*(_QWORD *)(v18 + 16))
      {
        (*(void (**)(char *, unint64_t, uint64_t))(v12 + 16))(v10, v18 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80)), v11);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v10, 0, 1, v11);
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, 1, 1, v11);
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, 1, 1, v11);
    }
    a1 = v27;
    sub_1DC0926D8((uint64_t)v7, (uint64_t (*)(_QWORD))sub_1DC0D8B60);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v10, v7, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v10, 0, 1, v11);
  }
  if (v15(v10, 1, v11) == 1)
  {
    sub_1DC0926D8((uint64_t)v10, (uint64_t (*)(_QWORD))sub_1DC0D8B60);
    sub_1DC0F8190();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(a1, 1, 1, v19);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
    sub_1DC4055E4();
    v21 = a1;
    v31 = v32;
    v22 = MEMORY[0x1E0DB80B8];
    sub_1DC0CC0A4(0, (unint64_t *)&unk_1EDB29EA0, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB80B8]);
    sub_1DC0D4244((unint64_t *)&qword_1EDB29E90, (unint64_t *)&unk_1EDB29EA0, (uint64_t (*)(uint64_t, _QWORD *))v22, MEMORY[0x1E0DB80D0]);
    v23 = v28;
    sub_1DC405050();
    swift_release();
    v24 = v30;
    sub_1DC406D54();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v23, v24);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    sub_1DC0F8190();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v21, 0, 1, v25);
  }
}

id sub_1DC300B60(char *a1, char a2, char a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  objc_class *v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  void *v16;
  void *v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t, uint64_t);
  void *v20;
  int v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t ObjectType;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  void *v30;
  void *v31;
  uint64_t v32;
  void *v33;
  char *v34;
  _QWORD aBlock[6];
  objc_super v37;

  sub_1DC0D8B60(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (objc_class *)type metadata accessor for StockListViewController();
  v37.receiver = a1;
  v37.super_class = v9;
  objc_msgSendSuper2(&v37, sel_setEditing_animated_, a2 & 1, a3 & 1);
  if ((a2 & 1) != 0)
  {
    v10 = objc_msgSend(a1, sel_navigationItem);
    v11 = objc_msgSend(a1, sel_editButtonItem);
    objc_msgSend(v10, sel_setRightBarButtonItem_, v11);
  }
  else
  {
    v12 = sub_1DC0CEAC8();
    if (!v12)
      goto LABEL_6;
    v10 = v12;
    v11 = objc_msgSend(a1, sel_navigationItem);
    objc_msgSend(v11, sel_setRightBarButtonItem_, v10);
  }

LABEL_6:
  v13 = sub_1DC082CEC();
  objc_msgSend(v13, sel_setNeedsLayout);

  v14 = sub_1DC082CEC();
  objc_msgSend(v14, sel_layoutIfNeeded);

  sub_1DC0C9038(a2 & 1, 1);
  v15 = sub_1DC4090D0();
  if (v15)
  {
    v16 = (void *)v15;
    sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3F880);
    v17 = (void *)sub_1DC408CC8();
    swift_bridgeObjectRelease();
    objc_msgSend(v16, sel_setToolbarItems_animated_, v17, a3 & 1);

    if ((a2 & 1) != 0)
    {
LABEL_8:
      swift_getObjectType();
      v18 = sub_1DC400280();
      v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56);
      v19(v8, 1, 1, v18);
      sub_1DC4065C8();
      sub_1DC4055CC();
      v20 = (void *)sub_1DC405074();
      swift_release();
      v19(v8, 1, 1, v18);
      v21 = a3 & 1;
      sub_1DC40907C();

      sub_1DC0926D8((uint64_t)v8, (uint64_t (*)(_QWORD))sub_1DC0D8B60);
      v22 = sub_1DC403F4C();
      v23 = sub_1DC408FE0();
      if (os_log_type_enabled(v22, v23))
      {
        v24 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v24 = 0;
        _os_log_impl(&dword_1DC07D000, v22, v23, "Hiding ForYou card due to entering edit state", v24, 2u);
        MEMORY[0x1DF0CAC88](v24, -1, -1);
      }

      sub_1DC2FFFE4(1, v21);
      goto LABEL_16;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    if ((a2 & 1) != 0)
      goto LABEL_8;
  }
  v25 = *(_QWORD *)(*(_QWORD *)&a1[OBJC_IVAR____TtC8StocksUI23StockListViewController_eventHandler] + 40);
  ObjectType = swift_getObjectType();
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v25 + 32))(ObjectType, v25) & 1) == 0)
  {
    v27 = sub_1DC403F4C();
    v28 = sub_1DC408FE0();
    if (os_log_type_enabled(v27, v28))
    {
      v29 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v29 = 0;
      _os_log_impl(&dword_1DC07D000, v27, v28, "Showing ForYou card due to exiting edit state", v29, 2u);
      MEMORY[0x1DF0CAC88](v29, -1, -1);
    }

    sub_1DC096E2C(a3 & 1);
  }
LABEL_16:
  sub_1DC4055CC();
  v30 = (void *)sub_1DC405074();
  swift_release();
  objc_msgSend(v30, sel_setDragInteractionEnabled_, (a2 & 1) == 0);

  v31 = (void *)objc_opt_self();
  objc_msgSend(v31, sel_begin);
  v32 = swift_allocObject();
  *(_BYTE *)(v32 + 16) = a2 & 1;
  *(_QWORD *)(v32 + 24) = a1;
  aBlock[4] = sub_1DC30714C;
  aBlock[5] = v32;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1DC081B88;
  aBlock[3] = &block_descriptor_47;
  v33 = _Block_copy(aBlock);
  v34 = a1;
  swift_release();
  objc_msgSend(v31, sel_setCompletionBlock_, v33);
  _Block_release(v33);
  sub_1DC4055C0();
  return objc_msgSend(v31, sel_commit);
}

void sub_1DC301050(char a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void *v13;
  const void *v14;
  id v15;
  uint64_t (*v16)(uint64_t);
  void *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD aBlock[6];

  v4 = sub_1DC40724C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1DC407270();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) == 0)
  {
    sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3F8D0);
    v19 = sub_1DC409148();
    v12 = swift_allocObject();
    *(_QWORD *)(v12 + 16) = a2;
    aBlock[4] = sub_1DC307158;
    aBlock[5] = v12;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1DC081B88;
    aBlock[3] = &block_descriptor_53;
    v13 = _Block_copy(aBlock);
    v18 = v5;
    v14 = v13;
    v15 = a2;
    swift_release();
    sub_1DC407264();
    aBlock[0] = MEMORY[0x1E0DEE9D8];
    v16 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
    sub_1DC080808(&qword_1EDB275A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    sub_1DC089DA4(0, (unint64_t *)&unk_1EDB3F710, v16, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1DC11300C((unint64_t *)&qword_1EDB3F720, (unint64_t *)&unk_1EDB3F710, v16, MEMORY[0x1E0DEAF38]);
    sub_1DC40964C();
    v17 = (void *)v19;
    MEMORY[0x1DF0C99C8](0, v11, v7, v14);
    _Block_release(v14);

    (*(void (**)(char *, uint64_t))(v18 + 8))(v7, v4);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
}

void sub_1DC301490(uint64_t a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  void *v21;
  void *v22;
  uint64_t v23;
  void *v24;
  id v25;
  void *v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  id v35;
  id v36;
  void *v37;
  void *v38;
  id v39;
  double v40;
  CGFloat v41;
  double v42;
  CGFloat v43;
  double v44;
  CGFloat v45;
  double v46;
  CGFloat v47;
  void *v48;
  double v49;
  double v50;
  void *v51;
  void *v52;
  id v53;
  id v54;
  double v55;
  CGFloat v56;
  double v57;
  CGFloat v58;
  double v59;
  CGFloat v60;
  double v61;
  CGFloat v62;
  uint64_t v63;
  id v64;
  _QWORD *v65;
  id v66;
  unint64_t v67;
  _QWORD *v68;
  _QWORD *v69;
  _QWORD *v70;
  id v71;
  void *v72;
  id v73;
  uint64_t v74;
  unsigned int (*v75)(uint64_t, uint64_t, id);
  id v76;
  uint64_t v77;
  char *v78;
  id v79;
  unint64_t v80;
  id v81;
  void *v82;
  id v83;
  void *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  void (*v88)(char *, uint64_t, id);
  char *v89;
  void (*v90)(char *, id);
  id v91;
  void *v92;
  double v93;
  CGFloat v94;
  double v95;
  CGFloat v96;
  double v97;
  CGFloat v98;
  double v99;
  CGFloat v100;
  uint64_t v101;
  uint64_t v102;
  id v103;
  char *v104;
  uint64_t v105;
  unsigned int (*v106)(uint64_t, uint64_t, id);
  uint64_t v107;
  char *v108;
  char *v109;
  char *v110;
  char *v111;
  _QWORD *v112;
  id v113;
  double v114;
  id v115;
  CGRect v116;
  CGRect v117;
  CGRect v118;
  CGRect v119;

  sub_1DC0D8B60(0);
  MEMORY[0x1E0C80A78](v3);
  v111 = (char *)&v106 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  *(_QWORD *)&v114 = (char *)&v106 - v6;
  v7 = (_QWORD *)sub_1DC400280();
  v112 = (_QWORD *)*(v7 - 1);
  v113 = v7;
  MEMORY[0x1E0C80A78](v7);
  v110 = (char *)&v106 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v106 - v10;
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v106 - v13;
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v106 - v16;
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v106 - v19;
  v115 = v1;
  sub_1DC4055CC();
  v21 = (void *)sub_1DC405074();
  swift_release();
  sub_1DC4055CC();
  v22 = (void *)sub_1DC405074();
  swift_release();
  v23 = a1;
  v24 = (void *)sub_1DC40022C();
  v25 = objc_msgSend(v22, sel_cellForItemAtIndexPath_, v24);

  if (!v25)
  {
    v64 = v113;
    v63 = *(_QWORD *)&v114;
    v115 = v17;
    v108 = v14;
    v109 = v11;
    v65 = v112;
    v107 = v23;
    v66 = objc_msgSend(v21, sel_visibleCells);
    sub_1DC0821D4(0, &qword_1F0351A60);
    v67 = sub_1DC408CD4();

    if (v67 >> 62)
    {
      swift_bridgeObjectRetain();
      v105 = sub_1DC409850();
      swift_bridgeObjectRelease();
      v68 = v65;
      if (v105)
      {
LABEL_11:
        if ((v67 & 0xC000000000000001) != 0)
        {
          v69 = (_QWORD *)MEMORY[0x1DF0C9FBC](0, v67);
        }
        else
        {
          if (!*(_QWORD *)((v67 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            goto LABEL_44;
          }
          v69 = *(id *)(v67 + 32);
        }
        v70 = v69;
        swift_bridgeObjectRelease();
        v113 = v21;
        v71 = objc_msgSend(v21, sel_indexPathForCell_, v70);
        if (v71)
        {
          v72 = v71;
          v73 = v115;
          sub_1DC400238();

          v21 = (void *)v68[4];
          v74 = v63;
          ((void (*)(uint64_t, id, id))v21)(v63, v73, v64);
          v63 = v68[7];
          ((void (*)(uint64_t, _QWORD, uint64_t, id))v63)(v74, 0, 1, v64);
          v75 = (unsigned int (*)(_QWORD, _QWORD, _QWORD))v68[6];
          if (v75(v74, 1, v64) != 1)
          {
            v106 = (unsigned int (*)(uint64_t, uint64_t, id))v75;
            v112 = v70;
            ((void (*)(char *, uint64_t, id))v21)(v20, v74, v64);
            v76 = objc_msgSend(v113, (SEL)&selRef_initWithJSONRepresentation_);
            v67 = sub_1DC408CD4();

            if (!(v67 >> 62))
            {
              v77 = *(_QWORD *)((v67 & 0xFFFFFFFFFFFFF8) + 0x10);
              goto LABEL_18;
            }
LABEL_44:
            swift_bridgeObjectRetain();
            v77 = sub_1DC409850();
            swift_bridgeObjectRelease();
LABEL_18:
            v78 = v109;
            v79 = v115;
            if (!v77)
            {
              swift_bridgeObjectRelease();
              ((void (*)(char *, id))v68[1])(v20, v64);

              return;
            }
            v80 = v77 - 1;
            if (__OFSUB__(v77, 1))
            {
              __break(1u);
            }
            else if ((v67 & 0xC000000000000001) == 0)
            {
              if ((v80 & 0x8000000000000000) != 0)
              {
                __break(1u);
              }
              else if (v80 < *(_QWORD *)((v67 & 0xFFFFFFFFFFFFF8) + 0x10))
              {
                v81 = *(id *)(v67 + 8 * v80 + 32);
LABEL_24:
                v82 = v81;
                swift_bridgeObjectRelease();
                v83 = objc_msgSend(v113, sel_indexPathForCell_, v82);
                if (v83)
                {
                  v84 = v83;
                  sub_1DC400238();

                  v74 = (uint64_t)v111;
                  ((void (*)(char *, id, id))v21)(v111, v79, v64);
                  ((void (*)(uint64_t, _QWORD, uint64_t, id))v63)(v74, 0, 1, v64);
                  if (v106(v74, 1, v64) != 1)
                  {
                    ((void (*)(char *, uint64_t, id))v21)(v108, v74, v64);
                    v85 = v107;
                    v86 = sub_1DC400268();
                    v87 = sub_1DC400268();
                    v88 = (void (*)(char *, uint64_t, id))v68[2];
                    v88(v78, v85, v64);
                    v89 = v110;
                    v88(v110, (uint64_t)v20, v64);
                    if (v86 >= v87)
                    {
                      v101 = sub_1DC400274();
                      v102 = sub_1DC400274();
                      v90 = (void (*)(char *, id))v68[1];
                      v90(v89, v64);
                      v90(v78, v64);
                      v103 = v113;
                      if (v101 >= v102)
                      {
                        sub_1DC400268();
                        v104 = v108;
                        sub_1DC400268();

                        v90(v104, v64);
                        v90(v20, v64);
                        return;
                      }

                    }
                    else
                    {

                      v90 = (void (*)(char *, id))v68[1];
                      v90(v89, v64);
                      v90(v78, v64);
                    }
                    v90(v108, v64);
                    v90(v20, v64);
                    return;
                  }
                }
                else
                {
                  v74 = (uint64_t)v111;
                  ((void (*)(char *, uint64_t, uint64_t, id))v63)(v111, 1, 1, v64);
                }

                ((void (*)(char *, id))v68[1])(v20, v64);
LABEL_32:
                sub_1DC0926D8(v74, (uint64_t (*)(_QWORD))sub_1DC0D8B60);
                return;
              }
              __break(1u);
              goto LABEL_49;
            }
            v81 = (id)MEMORY[0x1DF0C9FBC](v80, v67);
            goto LABEL_24;
          }
        }
        else
        {
          v74 = v63;
          ((void (*)(uint64_t, uint64_t, uint64_t, id))v68[7])(v63, 1, 1, v64);
        }

        goto LABEL_32;
      }
    }
    else
    {
      v68 = v65;
      if (*(_QWORD *)((v67 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_11;
    }

    swift_bridgeObjectRelease();
    return;
  }
  sub_1DC4055CC();
  v26 = (void *)sub_1DC405074();
  swift_release();
  objc_msgSend(v25, sel_frame);
  v28 = v27;
  v30 = v29;
  v32 = v31;
  v34 = v33;
  v35 = v115;
  v36 = objc_msgSend(v115, sel_view);
  if (!v36)
  {
LABEL_49:
    __break(1u);
LABEL_50:
    __break(1u);
    goto LABEL_51;
  }
  v37 = v36;
  v38 = v25;
  v39 = objc_msgSend(v36, sel_coordinateSpace);

  objc_msgSend(v26, sel_convertRect_toCoordinateSpace_, v39, v28, v30, v32, v34);
  v41 = v40;
  v43 = v42;
  v45 = v44;
  v47 = v46;

  swift_unknownObjectRelease();
  sub_1DC4055CC();
  v48 = (void *)sub_1DC405074();
  swift_release();
  objc_msgSend(v48, sel_adjustedContentInset);
  v50 = v49;

  v51 = (void *)sub_1DC4090D0();
  if (!v51
    || (v52 = v51,
        v53 = objc_msgSend(v51, sel_navigationController),
        v52,
        !v53))
  {
LABEL_7:
    v117.origin.x = v41;
    v117.origin.y = v43;
    v117.size.width = v45;
    v117.size.height = v47;
    if (CGRectGetMinY(v117) < v50)
    {

      return;
    }
    v118.origin.x = v41;
    v118.origin.y = v43;
    v118.size.width = v45;
    v118.size.height = v47;
    CGRectGetMaxY(v118);
    v91 = objc_msgSend(v35, sel_view);
    if (v91)
    {
      v92 = v91;
      objc_msgSend(v91, sel_frame);
      v94 = v93;
      v96 = v95;
      v98 = v97;
      v100 = v99;

      v119.origin.x = v94;
      v119.origin.y = v96;
      v119.size.width = v98;
      v119.size.height = v100;
      CGRectGetMaxY(v119);

      return;
    }
    goto LABEL_50;
  }
  v114 = v41;
  v54 = objc_msgSend(v53, sel_toolbar);

  if (v54)
  {
    objc_msgSend(v54, sel_frame);
    v56 = v55;
    v58 = v57;
    v60 = v59;
    v62 = v61;

    v116.origin.x = v56;
    v116.origin.y = v58;
    v116.size.width = v60;
    v116.size.height = v62;
    CGRectGetHeight(v116);
    v41 = v114;
    goto LABEL_7;
  }
LABEL_51:
  __break(1u);
}

void sub_1DC301D94(char *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjectType;
  void (*v17)(_QWORD, uint64_t (*)(), uint64_t, uint64_t, uint64_t);
  char *v18;
  uint64_t v19;
  void *v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t);
  char *v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t *v35;
  char *v36;
  char *v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  id v48;
  id v49;
  void *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  v61 = a2;
  v3 = sub_1DC406D78();
  v59 = *(_QWORD *)(v3 - 8);
  v60 = v3;
  MEMORY[0x1E0C80A78](v3);
  v58 = (char *)&v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1DC406D84();
  v56 = *(_QWORD *)(v5 - 8);
  v57 = v5;
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = sub_1DC407EAC();
  v8 = *(_QWORD *)(v53 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x1E0C80A78](v53);
  v52 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1DC4059F8();
  v54 = *(_QWORD *)(v10 - 8);
  v55 = v10;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)&a1[OBJC_IVAR____TtC8StocksUI23StockListViewController_eventHandler];
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a1;
  *(_WORD *)(v14 + 24) = 0;
  v15 = *(_QWORD *)(v13 + 40);
  ObjectType = swift_getObjectType();
  v17 = *(void (**)(_QWORD, uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v15 + 136);
  v18 = a1;
  v17(0, sub_1DC307458, v14, ObjectType, v15);
  swift_release();
  v19 = sub_1DC4090D0();
  if (!v19)
    goto LABEL_10;
  v20 = (void *)v19;
  v21 = sub_1DC4056B0();
  if (v21 >> 62)
    v22 = sub_1DC409850();
  else
    v22 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRelease();
  if (!v22)
  {

LABEL_10:
    sub_1DC4055B4();
    sub_1DC1F3790();
    v35 = (uint64_t *)&v7[*(int *)(v34 + 48)];
    v36 = &v7[*(int *)(v34 + 64)];
    sub_1DC407E4C();
    v37 = &v18[OBJC_IVAR____TtC8StocksUI23StockListViewController_styler];
    swift_beginAccess();
    v38 = __swift_project_boxed_opaque_existential_1(v37, *((_QWORD *)v37 + 3));
    v39 = *(_QWORD *)(*v38 + 80);
    v40 = *(_QWORD *)(*v38 + 88);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(*v38 + 56), v39);
    sub_1DC3A5558(v39, v40, v35);
    v41 = *MEMORY[0x1E0DB6F70];
    v42 = sub_1DC404390();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 104))(v36, v41, v42);
    v44 = v56;
    v43 = v57;
    (*(void (**)(char *, _QWORD, uint64_t))(v56 + 104))(v7, *MEMORY[0x1E0DBC800], v57);
    v46 = v58;
    v45 = v59;
    v47 = v60;
    (*(void (**)(char *, _QWORD, uint64_t))(v59 + 104))(v58, *MEMORY[0x1E0DBC808], v60);
    sub_1DC4048E8();
    swift_release();
    (*(void (**)(char *, uint64_t))(v45 + 8))(v46, v47);
    (*(void (**)(char *, uint64_t))(v44 + 8))(v7, v43);
    goto LABEL_11;
  }
  v23 = sub_1DC4056B0();
  if (v23 >> 62)
    v24 = sub_1DC409850();
  else
    v24 = *(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRelease();
  if (!__OFSUB__(v24, 1))
  {
    v25 = *MEMORY[0x1E0DBA270];
    v27 = v54;
    v26 = v55;
    v28 = *(void (**)(char *, uint64_t, uint64_t))(v54 + 104);
    v60 = v24 - 1;
    v28(v12, v25, v55);
    v29 = v52;
    v30 = v53;
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v52, v61, v53);
    v31 = (*(unsigned __int8 *)(v8 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    v32 = swift_allocObject();
    *(_QWORD *)(v32 + 16) = v18;
    (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v32 + v31, v29, v30);
    v33 = v18;
    sub_1DC40565C();

    swift_release();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v12, v26);
LABEL_11:
    v48 = objc_msgSend(v18, sel_editButtonItem);
    objc_msgSend(v48, sel_setEnabled_, 0);

    v49 = sub_1DC0CEAC8();
    objc_msgSend(v49, sel_setEnabled_, 0);

    sub_1DC4055CC();
    v50 = (void *)sub_1DC405074();
    swift_release();
    objc_msgSend(v50, sel_setUserInteractionEnabled_, 0);

    return;
  }
  __break(1u);
}

uint64_t sub_1DC302240(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t *v11;
  char *v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v21[2];
  uint64_t v22;

  v22 = sub_1DC406D78();
  v3 = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v22);
  v5 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1DC406D84();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21[1] = sub_1DC4055B4();
  sub_1DC1F3790();
  v11 = (uint64_t *)&v9[*(int *)(v10 + 48)];
  v12 = &v9[*(int *)(v10 + 64)];
  sub_1DC407E4C();
  v13 = (_QWORD *)(a2 + OBJC_IVAR____TtC8StocksUI23StockListViewController_styler);
  swift_beginAccess();
  v14 = __swift_project_boxed_opaque_existential_1(v13, v13[3]);
  v15 = *(_QWORD *)(*v14 + 80);
  v16 = *(_QWORD *)(*v14 + 88);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(*v14 + 56), v15);
  sub_1DC3A5558(v15, v16, v11);
  v17 = *MEMORY[0x1E0DB6F70];
  v18 = sub_1DC404390();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v12, v17, v18);
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E0DBC800], v6);
  v19 = v22;
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DBC808], v22);
  sub_1DC4048E8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v19);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1DC302430(char *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  void (*v6)(_QWORD, id (*)(), uint64_t, uint64_t, uint64_t);
  char *v7;

  v2 = *(_QWORD *)&a1[OBJC_IVAR____TtC8StocksUI23StockListViewController_eventHandler];
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = a1;
  *(_WORD *)(v3 + 24) = 0;
  v4 = *(_QWORD *)(v2 + 40);
  ObjectType = swift_getObjectType();
  v6 = *(void (**)(_QWORD, id (*)(), uint64_t, uint64_t, uint64_t))(v4 + 136);
  v7 = a1;
  v6(0, sub_1DC307118, v3, ObjectType, v4);
  return swift_release();
}

void sub_1DC3024C0(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  void *v15;
  uint64_t v16;

  v2 = sub_1DC406D78();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1DC406D84();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC4055B4();
  v10 = sub_1DC4048DC();
  swift_release();
  if ((v10 & 1) != 0)
  {
    sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FC00);
    v11 = (void *)sub_1DC409580();
    sub_1DC408FE0();
    sub_1DC403F28();

    sub_1DC4055B4();
    (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E0DBC7E8], v6);
    (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DBC808], v2);
    *(_QWORD *)(swift_allocObject() + 16) = a1;
    v12 = a1;
    sub_1DC4048E8();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  v13 = objc_msgSend(a1, sel_editButtonItem);
  objc_msgSend(v13, sel_setEnabled_, 1);

  v14 = sub_1DC0CEAC8();
  objc_msgSend(v14, sel_setEnabled_, 1);

  sub_1DC4055CC();
  v15 = (void *)sub_1DC405074();
  swift_release();
  objc_msgSend(v15, sel_setUserInteractionEnabled_, 1);

}

void sub_1DC302720()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  unsigned int (*v23)(uint64_t, uint64_t, uint64_t);
  char *v24;
  char v25;
  void (*v26)(char *, uint64_t);
  uint64_t v27;
  char *v28;

  v0 = sub_1DC4059F8();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v27 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC3071A0();
  v5 = v4;
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC130A74(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v27 - v12;
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v27 - v15;
  v17 = sub_1DC4090D0();
  if (v17)
  {
    v18 = (void *)v17;
    v28 = v3;
    v19 = sub_1DC4056C8();
    v20 = *(_QWORD *)(v19 + 16);
    if (v20)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v1 + 16))(v16, v19+ ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80))+ *(_QWORD *)(v1 + 72) * (v20 - 1), v0);
      v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v1 + 56);
      v21(v16, 0, 1, v0);
    }
    else
    {
      v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v1 + 56);
      v21(v16, 1, 1, v0);
    }
    swift_bridgeObjectRelease();
    (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v13, *MEMORY[0x1E0DBA270], v0);
    v21(v13, 0, 1, v0);
    v22 = (uint64_t)&v7[*(int *)(v5 + 48)];
    sub_1DC0990BC((uint64_t)v16, (uint64_t)v7, (uint64_t (*)(_QWORD))sub_1DC130A74);
    sub_1DC0990BC((uint64_t)v13, v22, (uint64_t (*)(_QWORD))sub_1DC130A74);
    v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1 + 48);
    if (v23((uint64_t)v7, 1, v0) == 1)
    {
      sub_1DC0926D8((uint64_t)v13, (uint64_t (*)(_QWORD))sub_1DC130A74);
      sub_1DC0926D8((uint64_t)v16, (uint64_t (*)(_QWORD))sub_1DC130A74);
      if (v23(v22, 1, v0) == 1)
      {
        sub_1DC0926D8((uint64_t)v7, (uint64_t (*)(_QWORD))sub_1DC130A74);
LABEL_12:
        sub_1DC4056C8();
        swift_bridgeObjectRelease();
        sub_1DC405680();
        goto LABEL_13;
      }
    }
    else
    {
      sub_1DC0990BC((uint64_t)v7, (uint64_t)v10, (uint64_t (*)(_QWORD))sub_1DC130A74);
      if (v23(v22, 1, v0) != 1)
      {
        v24 = v28;
        (*(void (**)(char *, uint64_t, uint64_t))(v1 + 32))(v28, v22, v0);
        sub_1DC080808((unint64_t *)&qword_1EDB2A3C8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DBA2A8], MEMORY[0x1E0DBA2C0]);
        v25 = sub_1DC4089F8();
        v26 = *(void (**)(char *, uint64_t))(v1 + 8);
        v26(v24, v0);
        sub_1DC0926D8((uint64_t)v13, (uint64_t (*)(_QWORD))sub_1DC130A74);
        sub_1DC0926D8((uint64_t)v16, (uint64_t (*)(_QWORD))sub_1DC130A74);
        v26(v10, v0);
        sub_1DC0926D8((uint64_t)v7, (uint64_t (*)(_QWORD))sub_1DC130A74);
        if ((v25 & 1) != 0)
          goto LABEL_12;
LABEL_13:

        return;
      }
      sub_1DC0926D8((uint64_t)v13, (uint64_t (*)(_QWORD))sub_1DC130A74);
      sub_1DC0926D8((uint64_t)v16, (uint64_t (*)(_QWORD))sub_1DC130A74);
      (*(void (**)(char *, uint64_t))(v1 + 8))(v10, v0);
    }
    sub_1DC0926D8((uint64_t)v7, (uint64_t (*)(_QWORD))sub_1DC3071A0);
    goto LABEL_13;
  }
}

uint64_t sub_1DC302ABC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;

  v3 = a1 + 16;
  swift_beginAccess();
  result = MEMORY[0x1DF0CAD78](v3);
  if (result)
  {
    v5 = (void *)result;
    v6 = *(_QWORD *)(result + OBJC_IVAR____TtC8StocksUI23StockListViewController_eventHandler);
    swift_unknownObjectRetain();

    v7 = *(_QWORD *)(v6 + 40);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 112))(a2, 1, ObjectType, v7);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1DC302B54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t ObjectType;
  _QWORD v16[6];

  v4 = v3;
  sub_1DC4055CC();
  v8 = (void *)sub_1DC405074();
  swift_release();
  v9 = objc_msgSend(v8, sel_indexPathsForSelectedItems);

  if (v9)
  {
    sub_1DC400280();
    v10 = sub_1DC408CD4();

    MEMORY[0x1E0C80A78](v11);
    v16[2] = a2;
    v12 = sub_1DC3BD2DC((uint64_t (*)(char *))sub_1DC306E7C, (_BOOL8)v16, v10);
    swift_bridgeObjectRelease();
  }
  else
  {
    v12 = 1;
  }
  v13 = *(_QWORD *)(*(_QWORD *)(v4 + OBJC_IVAR____TtC8StocksUI23StockListViewController_eventHandler) + 40);
  ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, BOOL, uint64_t, uint64_t))(v13 + 128))(a1, a2, a3, v12, ObjectType, v13);
}

void sub_1DC302C8C(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  unsigned __int8 v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  void *v26;
  id v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  _QWORD aBlock[6];

  v33 = a1;
  v34 = a2;
  sub_1DC0CC0A4(0, (unint64_t *)&qword_1EDB2AB40, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v28 - v6;
  sub_1DC0F8190();
  v9 = v8;
  v10 = *(_QWORD *)(v8 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = v2;
  sub_1DC4055CC();
  v13 = (void *)sub_1DC405074();
  swift_release();
  v14 = objc_msgSend(v13, sel_hasActiveDrag);

  if ((v14 & 1) == 0)
  {
    v30 = v5;
    v31 = v7;
    v32 = v4;
    v15 = objc_msgSend(v35, sel_navigationItem);
    v16 = objc_msgSend(v15, sel_searchController);

    if (v16)
    {
      v17 = swift_allocObject();
      v29 = v16;
      v18 = v17;
      swift_unknownObjectWeakInit();
      v19 = v9;
      (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v34, v9);
      v21 = v30;
      v20 = v31;
      v22 = v32;
      (*(void (**)(char *, uint64_t, uint64_t))(v30 + 16))(v31, v33, v32);
      v23 = (*(unsigned __int8 *)(v10 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
      v24 = (v11 + v23 + *(unsigned __int8 *)(v21 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
      v25 = swift_allocObject();
      *(_QWORD *)(v25 + 16) = v18;
      (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v25 + v23, v12, v19);
      (*(void (**)(unint64_t, char *, uint64_t))(v21 + 32))(v25 + v24, v20, v22);
      aBlock[4] = sub_1DC306F80;
      aBlock[5] = v25;
      aBlock[0] = MEMORY[0x1E0C809B0];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1DC081B88;
      aBlock[3] = &block_descriptor_26;
      v26 = _Block_copy(aBlock);
      swift_release();
      v27 = v29;
      objc_msgSend(v29, sel_dismissViewControllerAnimated_completion_, 1, v26);
      _Block_release(v26);

    }
    sub_1DC30347C();
  }
}

uint64_t sub_1DC302F18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  void *v20;
  char *v21;
  uint64_t (*v22)(uint64_t);
  uint64_t v23;
  char *v24;
  void *v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD aBlock[6];

  v28 = a2;
  v29 = a1;
  v33 = sub_1DC40724C();
  v36 = *(_QWORD *)(v33 - 8);
  MEMORY[0x1E0C80A78](v33);
  v32 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1DC407270();
  v34 = *(_QWORD *)(v5 - 8);
  v35 = v5;
  MEMORY[0x1E0C80A78](v5);
  v31 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0CC0A4(0, (unint64_t *)&qword_1EDB2AB40, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790]);
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v27 - v10;
  sub_1DC0F8190();
  v13 = v12;
  v14 = *(_QWORD *)(v12 - 8);
  v15 = *(_QWORD *)(v14 + 64);
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3F8D0);
  v30 = sub_1DC409148();
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, v28, v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a3, v8);
  v17 = (*(unsigned __int8 *)(v14 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v18 = (v15 + v17 + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = v29;
  (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(v19 + v17, v16, v13);
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v19 + v18, v11, v8);
  aBlock[4] = sub_1DC30705C;
  aBlock[5] = v19;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1DC081B88;
  aBlock[3] = &block_descriptor_32;
  v20 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  v21 = v31;
  sub_1DC407264();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  v22 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  sub_1DC080808(&qword_1EDB275A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  sub_1DC089DA4(0, (unint64_t *)&unk_1EDB3F710, v22, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1DC11300C((unint64_t *)&qword_1EDB3F720, (unint64_t *)&unk_1EDB3F710, v22, MEMORY[0x1E0DEAF38]);
  v24 = v32;
  v23 = v33;
  sub_1DC40964C();
  v25 = (void *)v30;
  MEMORY[0x1DF0C99C8](0, v21, v24, v20);
  _Block_release(v20);

  (*(void (**)(char *, uint64_t))(v36 + 8))(v24, v23);
  return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v21, v35);
}

uint64_t sub_1DC303250(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  uint64_t result;
  void *v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  _QWORD v21[3];
  uint64_t v22;

  v6 = sub_1DC404BDC();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = a1 + 16;
  swift_beginAccess();
  v11 = MEMORY[0x1DF0CAD78](a1 + 16);
  if (v11)
  {
    v12 = (void *)v11;
    sub_1DC40910C();

    if (*((_QWORD *)&v19 + 1))
    {
      sub_1DC097DD0(&v18, (uint64_t)v21);
      __swift_project_boxed_opaque_existential_1(v21, v22);
      (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E0DB8448], v6);
      sub_1DC405344();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
      if (UIAccessibilityIsVoiceOverRunning())
        goto LABEL_9;
      goto LABEL_7;
    }
  }
  else
  {
    v20 = 0;
    v18 = 0u;
    v19 = 0u;
  }
  sub_1DC0A6180((uint64_t)&v18, (uint64_t)&unk_1F034ED90, (uint64_t)&qword_1EDB41E10, MEMORY[0x1E0DB9590], (uint64_t (*)(_QWORD))sub_1DC0A6204);
  if (UIAccessibilityIsVoiceOverRunning())
    goto LABEL_9;
LABEL_7:
  swift_beginAccess();
  v13 = MEMORY[0x1DF0CAD78](v10);
  if (v13)
  {
    v14 = (void *)v13;
    sub_1DC0824D4(v13 + OBJC_IVAR____TtC8StocksUI23StockListViewController_keyboardInputMonitor, (uint64_t)v21);

    __swift_project_boxed_opaque_existential_1(v21, v22);
    sub_1DC40586C();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
  }
LABEL_9:
  swift_beginAccess();
  result = MEMORY[0x1DF0CAD78](v10);
  if (result)
  {
    v16 = (void *)result;
    swift_unknownObjectRetain();

    HIBYTE(v17) = 0;
    sub_1DC31B73C(a2, a3, (unsigned __int8 *)&v17 + 7);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1DC30347C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t result;
  int EnumCaseMultiPayload;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t v8;

  v1 = type metadata accessor for StockListModel(0);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + OBJC_IVAR____TtC8StocksUI23StockListViewController_featureAvailability), *(_QWORD *)(v0 + OBJC_IVAR____TtC8StocksUI23StockListViewController_featureAvailability + 24));
  result = sub_1DC400C1C();
  if ((result & 1) != 0)
  {
    sub_1DC0F8190();
    sub_1DC404354();
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload)
    {
      if (EnumCaseMultiPayload == 1)
        sub_1DC0926D8((uint64_t)v3, type metadata accessor for StockListModel);
      v6 = *(_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC8StocksUI23StockListViewController_eventHandler) + 40);
      ObjectType = swift_getObjectType();
      return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 160))(ObjectType, v6);
    }
    else
    {
      return sub_1DC0926D8((uint64_t)v3, type metadata accessor for StockListStockModel);
    }
  }
  return result;
}

uint64_t sub_1DC303590(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char v13;
  void (*v14)(char *, uint64_t);
  _BOOL8 v15;
  uint64_t v16;
  uint64_t ObjectType;
  uint64_t v19;

  v3 = v2;
  v5 = sub_1DC404E34();
  v6 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB8930];
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v19 - v11;
  sub_1DC405BCC();
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E0DB8900], v5);
  sub_1DC080808(&qword_1F0351A68, v6, MEMORY[0x1E0DB8938]);
  v13 = sub_1DC4089F8();
  v14 = *(void (**)(char *, uint64_t))(v7 + 8);
  v14(v9, v5);
  v14(v12, v5);
  v15 = (v13 & 1) == 0 && !UIAccessibilityIsVoiceOverRunning();
  v16 = *(_QWORD *)(*(_QWORD *)(v3 + OBJC_IVAR____TtC8StocksUI23StockListViewController_eventHandler) + 40);
  ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, _BOOL8, uint64_t, uint64_t))(v16 + 112))(a2, v15, ObjectType, v16);
}

uint64_t sub_1DC3036E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t ObjectType;

  swift_retain();
  sub_1DC402764();
  swift_release();
  v1 = *(_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC8StocksUI23StockListViewController_eventHandler) + 40);
  ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(v1 + 136))(1, 0, 0, ObjectType, v1);
}

void sub_1DC303778()
{
  char *v0;
  char *v1;
  void *v2;
  unsigned __int8 v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t ObjectType;

  v1 = v0;
  swift_retain();
  sub_1DC402764();
  swift_release();
  sub_1DC4055CC();
  v2 = (void *)sub_1DC405074();
  swift_release();
  v3 = objc_msgSend(v2, sel_hasActiveDrop);

  if ((v3 & 1) == 0)
  {
    v4 = *(_QWORD *)&v1[OBJC_IVAR____TtC8StocksUI23StockListViewController_eventHandler];
    v5 = objc_msgSend(v1, sel_isEditing);
    v6 = *(_QWORD *)(v4 + 40);
    ObjectType = swift_getObjectType();
    (*(void (**)(id, _QWORD, _QWORD, uint64_t, uint64_t))(v6 + 136))(v5, 0, 0, ObjectType, v6);
  }
}

uint64_t sub_1DC303860(uint64_t a1, void *a2)
{
  char *v2;
  uint64_t v4;
  void *v5;
  char *v6;
  uint64_t v8;
  uint64_t ObjectType;
  _QWORD v10[6];

  if (a2)
  {
    v4 = swift_allocObject();
    *(_QWORD *)(v4 + 16) = v2;
    v10[4] = sub_1DC306F2C;
    v10[5] = v4;
    v10[0] = MEMORY[0x1E0C809B0];
    v10[1] = 1107296256;
    v10[2] = sub_1DC081B88;
    v10[3] = &block_descriptor_33;
    v5 = _Block_copy(v10);
    swift_unknownObjectRetain();
    v6 = v2;
    swift_release();
    objc_msgSend(a2, sel_addCompletion_, v5);
    _Block_release(v5);
    return swift_unknownObjectRelease();
  }
  else
  {
    v8 = *(_QWORD *)(*(_QWORD *)&v2[OBJC_IVAR____TtC8StocksUI23StockListViewController_eventHandler] + 40);
    ObjectType = swift_getObjectType();
    return (*(uint64_t (**)(uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(v8 + 176))(1, 0, 0, ObjectType, v8);
  }
}

uint64_t sub_1DC303968()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t ObjectType;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC8StocksUI23StockListViewController_eventHandler) + 40);
  ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 168))(1, ObjectType, v1);
  return sub_1DC31B89C();
}

uint64_t sub_1DC3039D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t ObjectType;

  v4 = *(_QWORD *)(*(_QWORD *)(v2 + OBJC_IVAR____TtC8StocksUI23StockListViewController_eventHandler) + 40);
  ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 80))(a2, ObjectType, v4);
}

uint64_t sub_1DC303A24(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t ObjectType;

  v4 = *(_QWORD *)(*(_QWORD *)(v2 + OBJC_IVAR____TtC8StocksUI23StockListViewController_eventHandler) + 40);
  ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 72))(a2, ObjectType, v4);
}

uint64_t sub_1DC303A7C()
{
  char *v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t ObjectType;

  v1 = *(_QWORD *)&v0[OBJC_IVAR____TtC8StocksUI23StockListViewController_eventHandler];
  v2 = objc_msgSend(v0, sel_isEditing);
  v3 = *(_QWORD *)(v1 + 40);
  ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(id, _QWORD, _QWORD, uint64_t, uint64_t))(v3 + 136))(v2, 0, 0, ObjectType, v3);
}

uint64_t sub_1DC303AEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t ObjectType;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC8StocksUI23StockListViewController_eventHandler) + 40);
  ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 168))(1, ObjectType, v1);
}

uint64_t sub_1DC303B30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t ObjectType;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC8StocksUI23StockListViewController_eventHandler) + 40);
  ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(v1 + 136))(1, 0, 0, ObjectType, v1);
}

void sub_1DC303BC4(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t ObjectType;
  uint64_t v13;
  void *v14;
  void *v15;
  uint64_t v16;
  char v17;
  id v18;
  double v19;
  double v20;
  double v21;
  double v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  id v26[2];
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  _QWORD v30[4];

  v3 = sub_1DC4047EC();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1DC40481C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC8StocksUI23StockListViewController_eventHandler) + 40);
  ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 168))(2, ObjectType, v11);
  v13 = sub_1DC4090D0();
  if (!v13
    || (v14 = (void *)v13, v15 = (void *)sub_1DC405674(), v14, !v15)
    || (v26[1] = v15,
        sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3F8B0),
        sub_1DC0A3390(0, (unint64_t *)&unk_1EDB2A3B0),
        (swift_dynamicCast() & 1) == 0))
  {
    v29 = 0;
    v27 = 0u;
    v28 = 0u;
    goto LABEL_8;
  }
  if (!*((_QWORD *)&v28 + 1))
  {
LABEL_8:
    sub_1DC0A6180((uint64_t)&v27, (uint64_t)&qword_1EDB40AB8, (uint64_t)&unk_1EDB2A3B0, MEMORY[0x1E0DBA248], (uint64_t (*)(_QWORD))sub_1DC0A6204);

    return;
  }
  v26[0] = a1;
  sub_1DC097DD0(&v27, (uint64_t)v30);
  __swift_project_boxed_opaque_existential_1(v30, v30[3]);
  sub_1DC4059D4();
  v16 = sub_1DC404810();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E0DB7BE0], v3);
  v17 = sub_1DC151BD8((uint64_t)v6, v16);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  if ((v17 & 1) != 0)
  {
    v18 = v26[0];
    objc_msgSend(v26[0], sel_adjustedContentInset);
    v20 = v19;
    objc_msgSend(v18, sel_contentOffset);
    v22 = v20 + v21;
    v23 = (void *)sub_1DC4043CC();
    v24 = swift_allocObject();
    swift_unknownObjectUnownedInit();
    v25 = swift_allocObject();
    *(_QWORD *)(v25 + 16) = v24;
    *(double *)(v25 + 24) = v22;
    swift_retain();

    swift_release();
    swift_release();
  }
  else
  {

  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
}

uint64_t sub_1DC303EE4@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  void *Strong;
  unsigned __int8 v20;
  double v21;
  double v22;
  double v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t result;
  void *v28;
  void *v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t *v42;
  uint64_t v43;
  void (*v44)(char *, _QWORD, uint64_t);
  char *v45;
  char v46;
  void (*v47)(char *, uint64_t);
  void *v48;
  void *v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unsigned int v62;
  char *v63;
  uint64_t v64;
  char *v65;

  v8 = sub_1DC4059F8();
  v64 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v63 = (char *)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v56 = (char *)&v54 - v11;
  sub_1DC307310();
  v59 = *(_QWORD *)(v12 - 8);
  v60 = v12;
  MEMORY[0x1E0C80A78](v12);
  v57 = (char *)&v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC307378(0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (unint64_t *)((char *)&v54 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v17);
  v65 = (char *)&v54 - v18;
  v58 = a2 + 16;
  Strong = (void *)swift_unknownObjectUnownedLoadStrong();
  v20 = objc_msgSend(Strong, sel_isEditing);

  if ((v20 & 1) != 0
    || ((objc_msgSend(a1, sel_adjustedContentInset), v22 = v21, objc_msgSend(a1, sel_contentOffset), v22 + v23 > 0.0)
      ? (v24 = v22 + v23 <= a4)
      : (v24 = 1),
        v24))
  {
    v25 = *MEMORY[0x1E0DB71C8];
    v26 = sub_1DC4043D8();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 104))(a3, v25, v26);
  }
  v28 = (void *)swift_unknownObjectUnownedLoadStrong();
  v29 = (void *)sub_1DC4090D0();

  if (!v29)
  {
LABEL_20:
    v52 = *MEMORY[0x1E0DB71D0];
    v53 = sub_1DC4043D8();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 104))(a3, v52, v53);
  }
  v54 = v29;
  v55 = a3;
  result = sub_1DC4056C8();
  v30 = result;
  v31 = 0;
  v32 = *(_QWORD *)(result + 16);
  v62 = *MEMORY[0x1E0DBA298];
  v33 = v56;
  v34 = v60;
  while (1)
  {
    v35 = v65;
    if (v31 == v32)
    {
      v36 = 1;
      v31 = v32;
      goto LABEL_15;
    }
    if (v31 >= *(_QWORD *)(v30 + 16))
      break;
    v37 = v64;
    v38 = &v57[*(int *)(v34 + 48)];
    (*(void (**)(char *, unint64_t, uint64_t))(v64 + 16))(v38, v30+ ((*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80))+ *(_QWORD *)(v37 + 72) * v31, v8);
    v39 = (char *)v16 + *(int *)(v34 + 48);
    *v16 = v31;
    (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v39, v38, v8);
    v36 = 0;
    ++v31;
    v35 = v65;
LABEL_15:
    v40 = v59;
    (*(void (**)(unint64_t *, uint64_t, uint64_t, uint64_t))(v59 + 56))(v16, v36, 1, v34);
    sub_1DC092ED0((uint64_t)v16, (uint64_t)v35, (uint64_t (*)(_QWORD))sub_1DC307378);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v35, 1, v34) == 1)
    {

      swift_bridgeObjectRelease();
      a3 = v55;
      goto LABEL_20;
    }
    v41 = v30;
    v42 = v16;
    v61 = *(_QWORD *)v35;
    v43 = v64;
    (*(void (**)(char *, char *, uint64_t))(v64 + 32))(v33, &v35[*(int *)(v34 + 48)], v8);
    v44 = *(void (**)(char *, _QWORD, uint64_t))(v43 + 104);
    v45 = v63;
    v44(v63, v62, v8);
    sub_1DC080808(&qword_1EDB2A3C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DBA2A8], MEMORY[0x1E0DBA2B8]);
    v46 = sub_1DC4089E0();
    v47 = *(void (**)(char *, uint64_t))(v43 + 8);
    v47(v45, v8);
    if ((v46 & 1) != 0)
    {
      v48 = (void *)swift_unknownObjectUnownedLoadStrong();
      v49 = (void *)sub_1DC4090D0();

      if (v49)
      {
        v50 = v63;
        v44(v63, v62, v8);
        sub_1DC40565C();

        v51 = v50;
        v33 = v56;
        v47(v51, v8);
      }
    }
    result = ((uint64_t (*)(char *, uint64_t))v47)(v33, v8);
    v16 = v42;
    v34 = v60;
    v30 = v41;
  }
  __break(1u);
  return result;
}

uint64_t sub_1DC3043F0(void *a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;

  result = (uint64_t)objc_msgSend(a1, sel_ts_isScrolling);
  if ((result & 1) == 0)
  {
    v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8StocksUI23StockListViewController_eventHandler);
    sub_1DC0D3BA4(&v14);
    v4 = v14;
    v5 = v15;
    v6 = v16;
    v7 = *(_QWORD *)(v3 + 40);
    ObjectType = swift_getObjectType();
    v11 = v4;
    v12 = v5;
    v13 = v6;
    (*(void (**)(__int128 *, uint64_t, uint64_t))(v7 + 120))(&v11, ObjectType, v7);
    swift_bridgeObjectRelease();
    v9 = *(_QWORD *)(v3 + 40);
    v10 = swift_getObjectType();
    return (*(uint64_t (**)(uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(v9 + 176))(2, 0, 0, v10, v9);
  }
  return result;
}

uint64_t sub_1DC304624(void *a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  char *v12;
  char *v13;
  char *v14;
  char *v15;
  void *v16;
  uint64_t v17;
  void *v18;
  id v19;
  uint64_t (*v20)(uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD aBlock[6];

  v2 = v1;
  v4 = sub_1DC40724C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1DC407270();
  v9 = *(_QWORD *)(v8 - 8);
  *(_QWORD *)&v10 = MEMORY[0x1E0C80A78](v8).n128_u64[0];
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (char *)objc_msgSend(a1, sel_searchResultsController, v10);
  v24 = v8;
  v25 = v5;
  v23 = v9;
  if (v13)
  {
    v14 = v13;
    swift_getObjectType();
    if (swift_conformsToProtocol2())
      v15 = v14;
    else
      v15 = 0;
    if (v15)
    {
      *(_QWORD *)&v15[OBJC_IVAR____TtC8StocksUI25StockSearchViewController_delegate + 8] = &off_1EA462960;
      swift_unknownObjectWeakAssign();
    }
    else
    {

    }
  }
  else
  {
    v15 = 0;
  }
  sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3F8D0);
  v16 = (void *)sub_1DC409148();
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v2;
  aBlock[4] = sub_1DC3072B4;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1DC081B88;
  aBlock[3] = &block_descriptor_69;
  v18 = _Block_copy(aBlock);
  v19 = v2;
  swift_release();
  sub_1DC407264();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  v20 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  sub_1DC080808(&qword_1EDB275A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  sub_1DC089DA4(0, (unint64_t *)&unk_1EDB3F710, v20, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1DC11300C((unint64_t *)&qword_1EDB3F720, (unint64_t *)&unk_1EDB3F710, v20, MEMORY[0x1E0DEAF38]);
  sub_1DC40964C();
  MEMORY[0x1DF0C99C8](0, v12, v7, v18);
  _Block_release(v18);

  (*(void (**)(char *, uint64_t))(v25 + 8))(v7, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v12, v24);
}

void sub_1DC3048C8(void *a1)
{
  id v1;
  id v2;
  id v3;

  v1 = objc_msgSend(a1, sel_navigationItem);
  v2 = objc_msgSend(v1, sel_searchController);

  if (v2)
  {
    v3 = objc_msgSend(v2, sel_searchBar);

    objc_msgSend(v3, sel_becomeFirstResponder);
  }
}

void sub_1DC3049B8(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  char *v4;
  char *v5;
  void *v6;
  uint64_t v7;
  uint64_t ObjectType;
  char v9;
  NSObject *v10;
  os_log_type_t v11;
  _BOOL4 v12;
  uint8_t *v13;
  uint8_t *v14;
  id v15;

  v2 = v1;
  v3 = (char *)objc_msgSend(a1, sel_searchResultsController);
  if (v3)
  {
    v4 = v3;
    swift_getObjectType();
    if (swift_conformsToProtocol2())
      v5 = v4;
    else
      v5 = 0;
    if (v5)
    {
      v15 = v5;
      *(_QWORD *)&v5[OBJC_IVAR____TtC8StocksUI25StockSearchViewController_delegate + 8] = 0;
      swift_unknownObjectWeakAssign();
      goto LABEL_9;
    }

  }
  v15 = 0;
LABEL_9:
  sub_1DC4055CC();
  v6 = (void *)sub_1DC405074();
  swift_release();
  objc_msgSend(v6, sel_setHidden_, 0);

  v7 = *(_QWORD *)(*(_QWORD *)(v2 + OBJC_IVAR____TtC8StocksUI23StockListViewController_eventHandler) + 40);
  ObjectType = swift_getObjectType();
  v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 32))(ObjectType, v7);
  v10 = sub_1DC403F4C();
  v11 = sub_1DC408FE0();
  v12 = os_log_type_enabled(v10, v11);
  if ((v9 & 1) != 0)
  {
    if (v12)
    {
      v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v13 = 0;
      _os_log_impl(&dword_1DC07D000, v10, v11, "Hiding ForYou card due to search dismissal with an empty stock list", v13, 2u);
      MEMORY[0x1DF0CAC88](v13, -1, -1);
    }

    sub_1DC2FFFE4(1, 1);
  }
  else
  {
    if (v12)
    {
      v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v14 = 0;
      _os_log_impl(&dword_1DC07D000, v10, v11, "Showing ForYou card due to search dismissal", v14, 2u);
      MEMORY[0x1DF0CAC88](v14, -1, -1);
    }

    sub_1DC096E2C(1);
  }

}

void sub_1DC304CD8(uint64_t a1)
{
  void *v1;
  _BOOL8 v2;
  id v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  id v8;

  v1 = (void *)MEMORY[0x1DF0CAD78](a1 + OBJC_IVAR____TtC8StocksUI25StockSearchViewController_searchBar);
  v2 = (_BOOL8)v1;
  if (v1)
  {
    v3 = objc_msgSend(v1, sel_text);

    if (v3)
    {
      v4 = sub_1DC408A4C();
      v6 = v5;

      swift_bridgeObjectRelease();
      v7 = HIBYTE(v6) & 0xF;
      if ((v6 & 0x2000000000000000) == 0)
        v7 = v4 & 0xFFFFFFFFFFFFLL;
      v2 = v7 != 0;
    }
    else
    {
      v2 = 0;
    }
  }
  sub_1DC4055CC();
  v8 = (id)sub_1DC405074();
  swift_release();
  objc_msgSend(v8, sel_setHidden_, v2);

}

BOOL sub_1DC304DB8()
{
  void *v0;
  id v1;
  id v2;
  unsigned int v3;
  _BOOL8 result;

  v1 = objc_msgSend(v0, sel_navigationItem);
  v2 = objc_msgSend(v1, sel_searchController);

  result = 1;
  if (v2)
  {
    v3 = objc_msgSend(v2, sel_isActive);

    if (v3)
      return 0;
  }
  return result;
}

void sub_1DC304E34()
{
  NSObject *v0;
  os_log_type_t v1;
  uint8_t *v2;

  v0 = sub_1DC403F4C();
  v1 = sub_1DC408FE0();
  if (os_log_type_enabled(v0, v1))
  {
    v2 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v2 = 0;
    _os_log_impl(&dword_1DC07D000, v0, v1, "Hiding ForYou card due to trait collection change with search active", v2, 2u);
    MEMORY[0x1DF0CAC88](v2, -1, -1);
  }

  sub_1DC2FFFE4(0, 0);
}

uint64_t sub_1DC304EE4()
{
  void *v0;
  id v1;
  id v2;
  id v3;

  v1 = objc_msgSend(v0, sel_navigationItem);
  v2 = objc_msgSend(v1, sel_searchController);

  if (v2)
  {
    if (objc_msgSend(v2, sel_isActive))
    {
      v3 = objc_msgSend(v2, sel_searchResultsController);

      if (v3)
        return (uint64_t)v3;
    }
    else
    {

    }
  }
  return sub_1DC405638();
}

void sub_1DC304F98(double a1)
{
  id v2;
  id v3;
  id v4;

  v2 = sub_1DC082CEC();
  objc_msgSend(v2, sel_setAlpha_, a1);

  v3 = sub_1DC0CEAC8();
  v4 = objc_msgSend(v3, sel_ts_barButtonItemView);

  objc_msgSend(v4, sel_setAlpha_, a1);
}

void sub_1DC305034(double a1)
{
  id v2;
  id v3;
  id v4;

  v2 = sub_1DC082CEC();
  objc_msgSend(v2, sel_setAlpha_, a1);

  v3 = sub_1DC0CEAC8();
  v4 = objc_msgSend(v3, sel_ts_barButtonItemView);

  objc_msgSend(v4, sel_setAlpha_, a1);
}

uint64_t sub_1DC305130()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t ObjectType;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;

  v23 = sub_1DC404E34();
  v1 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  v24 = (char *)&v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1DC404E1C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0ED4AC(0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0F8190();
  v11 = v10;
  v12 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v22 - v16;
  v25 = v0;
  sub_1DC3007B4((uint64_t)v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v9, 1, v11) == 1)
    return sub_1DC0926D8((uint64_t)v9, (uint64_t (*)(_QWORD))sub_1DC0ED4AC);
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v17, v9, v11);
  if ((sub_1DC404330() & 1) != 0)
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v14, v17, v11);
    (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E0DB88D8], v3);
    (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v24, *MEMORY[0x1E0DB8900], v23);
    sub_1DC0E65C4(0, &qword_1F0351A88, MEMORY[0x1E0DBA748]);
    swift_allocObject();
    v19 = sub_1DC405B9C();
    v20 = *(_QWORD *)(*(_QWORD *)(v25 + OBJC_IVAR____TtC8StocksUI23StockListViewController_eventHandler) + 40);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v20 + 112))(v19, 0, ObjectType, v20);
    swift_release();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v17, v11);
}

uint64_t sub_1DC305470(uint64_t a1, uint64_t a2)
{
  void *v2;
  objc_class *ObjectType;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  unsigned __int8 v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  id v23[2];
  objc_super v24;
  _QWORD v25[3];
  uint64_t v26;

  ObjectType = (objc_class *)swift_getObjectType();
  sub_1DC0ED4AC(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0F8190();
  v10 = v9;
  v11 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((sub_1DC40028C() & 1) != 0 || (sub_1DC40028C() & 1) != 0)
  {
    sub_1DC1994D8(a2, (uint64_t)v25);
    if (v26)
    {
      sub_1DC0821D4(0, &qword_1F0351A80);
      if (swift_dynamicCast())
      {

        v14 = 0;
        return v14 & 1;
      }
    }
    else
    {
      sub_1DC0A6180((uint64_t)v25, (uint64_t)&qword_1EDB40100, MEMORY[0x1E0DEE9B8] + 8, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD))sub_1DC083594);
    }
    sub_1DC3007B4((uint64_t)v8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) == 1)
    {
      sub_1DC0926D8((uint64_t)v8, (uint64_t (*)(_QWORD))sub_1DC0ED4AC);
      v14 = 0;
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v8, v10);
      v14 = sub_1DC404330();
      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    }
  }
  else
  {
    sub_1DC1994D8(a2, (uint64_t)v25);
    v15 = v26;
    if (v26)
    {
      v16 = __swift_project_boxed_opaque_existential_1(v25, v26);
      v17 = *(_QWORD *)(v15 - 8);
      v18 = MEMORY[0x1E0C80A78](v16);
      v20 = (char *)v23 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, __n128))(v17 + 16))(v20, v18);
      v21 = sub_1DC4099D0();
      (*(void (**)(char *, uint64_t))(v17 + 8))(v20, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
    }
    else
    {
      v21 = 0;
    }
    v24.receiver = v2;
    v24.super_class = ObjectType;
    v14 = objc_msgSendSuper2(&v24, sel_canPerformAction_withSender_, a1, v21);
    swift_unknownObjectRelease();
  }
  return v14 & 1;
}

uint64_t sub_1DC3057BC()
{
  uint64_t v0;

  sub_1DC4055E4();
  v0 = sub_1DC404A08();
  swift_release();
  return v0;
}

uint64_t sub_1DC30580C()
{
  sub_1DC4055E4();
  sub_1DC404A14();
  return swift_release();
}

uint64_t sub_1DC30585C()
{
  sub_1DC080808(&qword_1F034C870, (uint64_t (*)(uint64_t))type metadata accessor for StockListViewController, (uint64_t)&unk_1DC426938);
  return sub_1DC405038();
}

uint64_t sub_1DC3058AC()
{
  sub_1DC080808(&qword_1F034C870, (uint64_t (*)(uint64_t))type metadata accessor for StockListViewController, (uint64_t)&unk_1DC426938);
  return sub_1DC405044();
}

uint64_t sub_1DC3058FC()
{
  return sub_1DC080808(&qword_1F0351A50, (uint64_t (*)(uint64_t))type metadata accessor for StockListViewController, (uint64_t)&unk_1DC426908);
}

uint64_t sub_1DC305928()
{
  return sub_1DC080808(&qword_1F0351A58, (uint64_t (*)(uint64_t))type metadata accessor for StockListViewController, (uint64_t)&unk_1DC426B68);
}

uint64_t sub_1DC305954(char a1)
{
  void *v1;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  id v8;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  char v11;
  _QWORD *v12;
  id v13;
  uint64_t v15;

  type metadata accessor for TickerCardContainerControllerAnimationCoordinator();
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = MEMORY[0x1E0DEE9E0];
  v4 = (uint64_t *)(v3 + 16);
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v1;
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = v1;
  type metadata accessor for TickerAnimation();
  if ((a1 & 1) != 0)
  {
    v12 = (_QWORD *)swift_allocObject();
    v12[2] = sub_1DC306E98;
    v12[3] = v5;
    v12[4] = sub_1DC306EB4;
    v12[5] = v6;
    swift_beginAccess();
    v13 = v1;
    swift_retain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v15 = *v4;
    *v4 = 0x8000000000000000;
    v10 = (uint64_t)v12;
    v11 = 0;
  }
  else
  {
    v7 = (_QWORD *)swift_allocObject();
    v7[2] = sub_1DC306EF4;
    v7[3] = v5;
    v7[4] = sub_1DC306F10;
    v7[5] = v6;
    swift_beginAccess();
    v8 = v1;
    swift_retain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v15 = *v4;
    *v4 = 0x8000000000000000;
    v10 = (uint64_t)v7;
    v11 = 1;
  }
  sub_1DC35AA24(v10, v11, isUniquelyReferenced_nonNull_native);
  *v4 = v15;
  swift_bridgeObjectRelease();
  swift_endAccess();
  swift_release();
  return v3;
}

void sub_1DC305B48(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  double v5;
  uint64_t v6;
  char *v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  id v17;
  id v18;
  void *v19;
  uint64_t v20;
  void *v21;
  id v22;
  _QWORD aBlock[6];

  v2 = v1;
  v4 = type metadata accessor for StockSearchMode(0);
  *(_QWORD *)&v5 = MEMORY[0x1E0C80A78](v4).n128_u64[0];
  v7 = (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = objc_msgSend(v1, sel_navigationItem, v5);
  v9 = objc_msgSend(v8, sel_searchController);

  if (v9)
  {
    objc_msgSend(v9, sel_setShowsSearchResultsController_, 1);
    v10 = objc_msgSend(v9, sel_searchResultsController);
    if (v10)
    {
      v11 = v10;
      swift_getObjectType();
      if (swift_conformsToProtocol2())
        v12 = v11;
      else
        v12 = 0;
      if (v12)
      {
        v13 = sub_1DC40124C();
        v14 = *(_QWORD *)(v13 - 8);
        (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v7, a1, v13);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v7, 0, 1, v13);
        sub_1DC1F17A0((uint64_t)v7);

        sub_1DC0926D8((uint64_t)v7, type metadata accessor for StockSearchMode);
      }
      else
      {

      }
    }
    v15 = objc_msgSend(v2, sel_navigationItem);
    v16 = objc_msgSend(v15, sel_searchController);

    if (v16)
    {
      v17 = objc_msgSend(v16, sel_searchBar);

      if (v17)
      {
        v18 = objc_msgSend(v2, sel_splitViewController);
        if (v18)
        {
          v19 = v18;
          v20 = swift_allocObject();
          *(_QWORD *)(v20 + 16) = v17;
          aBlock[4] = sub_1DC3073B4;
          aBlock[5] = v20;
          aBlock[0] = MEMORY[0x1E0C809B0];
          aBlock[1] = 1107296256;
          aBlock[2] = sub_1DC081B88;
          aBlock[3] = &block_descriptor_89;
          v21 = _Block_copy(aBlock);
          v22 = v17;
          swift_release();
          objc_msgSend(v19, sel_dismissViewControllerAnimated_completion_, 1, v21);

          _Block_release(v21);
          v9 = v19;
        }
        else
        {
          objc_msgSend(v17, sel_becomeFirstResponder);

        }
      }
    }

  }
}

uint64_t sub_1DC305DE0()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int EnumCaseMultiPayload;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  objc_class *v17;
  char *v18;
  id v19;
  objc_super v21;

  sub_1DC0FED34(0);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v21 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1DC4010E4();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for StockListStockModel(0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for StockListModel(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0F8190();
  sub_1DC404354();
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    v14 = 0;
    if (EnumCaseMultiPayload == 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  else
  {
    sub_1DC092ED0((uint64_t)v12, (uint64_t)v9, type metadata accessor for StockListStockModel);
    v15 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
    v15(v6, v9, v3);
    v16 = type metadata accessor for StockViewModel();
    sub_1DC0990BC((uint64_t)&v9[*(int *)(v16 + 20)], (uint64_t)v2, (uint64_t (*)(_QWORD))sub_1DC0FED34);
    v17 = (objc_class *)type metadata accessor for StockShareActivityItemSource();
    v18 = (char *)objc_allocWithZone(v17);
    v15(&v18[OBJC_IVAR____TtC8StocksUI28StockShareActivityItemSource_stock], v6, v3);
    sub_1DC0990BC((uint64_t)v2, (uint64_t)&v18[OBJC_IVAR____TtC8StocksUI28StockShareActivityItemSource_quote], (uint64_t (*)(_QWORD))sub_1DC0FED34);
    v21.receiver = v18;
    v21.super_class = v17;
    v19 = objc_msgSendSuper2(&v21, sel_init);
    sub_1DC0926D8((uint64_t)v2, (uint64_t (*)(_QWORD))sub_1DC0FED34);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    v14 = sub_1DC1CAF28();

    sub_1DC0926D8((uint64_t)v9, type metadata accessor for StockListStockModel);
  }
  return v14;
}

uint64_t sub_1DC30602C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  void *v8;
  void (*v9)(char *, _QWORD, uint64_t);
  void (*v10)(char *, uint64_t);
  char v11;
  char v12;
  uint64_t v14;

  v0 = sub_1DC4059F8();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v14 - v5;
  v7 = sub_1DC4090D0();
  if (v7)
  {
    v8 = (void *)v7;
    sub_1DC405668();

    v9 = *(void (**)(char *, _QWORD, uint64_t))(v1 + 104);
    v9(v3, *MEMORY[0x1E0DBA290], v0);
    LOBYTE(v8) = sub_1DC4059EC();
    v10 = *(void (**)(char *, uint64_t))(v1 + 8);
    v10(v3, v0);
    if ((v8 & 1) != 0)
    {
      v10(v6, v0);
      v11 = 0;
    }
    else
    {
      v9(v3, *MEMORY[0x1E0DBA260], v0);
      v12 = sub_1DC4059EC();
      v10(v3, v0);
      v10(v6, v0);
      v11 = v12 ^ 1;
    }
  }
  else
  {
    v11 = 1;
  }
  return v11 & 1;
}

uint64_t sub_1DC306168(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;

  if ((result & 1) == 0)
  {
    v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8StocksUI23StockListViewController_eventHandler);
    sub_1DC0D3BA4(&v13);
    v3 = v13;
    v4 = v14;
    v5 = v15;
    v6 = *(_QWORD *)(v2 + 40);
    ObjectType = swift_getObjectType();
    v10 = v3;
    v11 = v4;
    v12 = v5;
    (*(void (**)(__int128 *, uint64_t, uint64_t))(v6 + 120))(&v10, ObjectType, v6);
    swift_bridgeObjectRelease();
    v8 = *(_QWORD *)(v2 + 40);
    v9 = swift_getObjectType();
    return (*(uint64_t (**)(uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(v8 + 176))(2, 0, 0, v9, v8);
  }
  return result;
}

uint64_t sub_1DC306224()
{
  uint64_t v0;
  uint64_t v1;
  __int128 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  uint64_t v7;
  uint64_t v8;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8StocksUI23StockListViewController_eventHandler);
  sub_1DC0D3BA4(&v13);
  v2 = v13;
  v3 = v14;
  v4 = v15;
  v5 = *(_QWORD *)(v1 + 40);
  ObjectType = swift_getObjectType();
  v10 = v2;
  v11 = v3;
  v12 = v4;
  (*(void (**)(__int128 *, uint64_t, uint64_t))(v5 + 120))(&v10, ObjectType, v5);
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(v1 + 40);
  v8 = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(v7 + 176))(2, 0, 0, v8, v7);
}

uint64_t sub_1DC3062DC()
{
  uint64_t ObjCClassFromMetadata;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  sub_1DC0821D4(0, &qword_1EDB42CF0);
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1DC3FFC80();

  v2 = sub_1DC408F8C();
  sub_1DC083594(0, (unint64_t *)&qword_1EDB400D0, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1DC40FA60;
  *(_QWORD *)(v3 + 32) = v2;
  v5 = v3;
  sub_1DC408CF8();
  return v5;
}

char *sub_1DC306458(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, _QWORD *a13, _QWORD *a14, uint64_t a15, uint64_t a16, uint64_t a17, char *a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  uint64_t *boxed_opaque_existential_1;
  uint64_t v27;
  id v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  char *v36;
  id v37;
  id v38;
  char *v39;
  void *v40;
  char *v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  char *v46;
  char *v47;
  void *v48;
  id v49;
  id v50;
  char *v51;
  objc_class *ObjectType;
  _QWORD v58[3];
  uint64_t v59;
  objc_super v60;
  _QWORD v61[5];
  _QWORD v62[5];
  _QWORD v63[5];
  uint64_t v64[6];

  ObjectType = (objc_class *)swift_getObjectType();
  v64[3] = a20;
  v64[4] = a22;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v64);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a20 - 8) + 32))(boxed_opaque_existential_1, a15, a20);
  v63[3] = type metadata accessor for StockListRenderer();
  v63[4] = &off_1EA451348;
  v63[0] = a1;
  v62[3] = type metadata accessor for StockListStyler();
  v62[4] = &off_1EA46DE80;
  v62[0] = a2;
  v61[3] = type metadata accessor for WatchlistEditMenuProvider();
  v61[4] = &off_1EA4609C0;
  v61[0] = a16;
  v27 = OBJC_IVAR____TtC8StocksUI23StockListViewController_scrollTracker;
  v28 = objc_allocWithZone((Class)sub_1DC4043F0());
  v29 = a18;
  *(_QWORD *)&a18[v27] = objc_msgSend(v28, sel_init);
  *(_QWORD *)&v29[OBJC_IVAR____TtC8StocksUI23StockListViewController_backgroundView] = 0;
  *(_QWORD *)&v29[OBJC_IVAR____TtC8StocksUI23StockListViewController____lazy_storage___exchangeStatusToolbarItem] = 0;
  *(_WORD *)&v29[OBJC_IVAR____TtC8StocksUI23StockListViewController_toolbarState] = 2;
  v30 = &v29[OBJC_IVAR____TtC8StocksUI23StockListViewController_lastContentOffset];
  *(_QWORD *)v30 = 0;
  *((_QWORD *)v30 + 1) = 0;
  v30[16] = 1;
  v31 = OBJC_IVAR____TtC8StocksUI23StockListViewController_logger;
  if (qword_1EDB273E0 != -1)
    swift_once();
  v32 = sub_1DC403F64();
  v33 = __swift_project_value_buffer(v32, (uint64_t)qword_1EDB5DDE8);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(&v29[v31], v33, v32);
  *(_QWORD *)&v29[OBJC_IVAR____TtC8StocksUI23StockListViewController_contentSizeCategoryObserver] = 0;
  *(_QWORD *)&v29[OBJC_IVAR____TtC8StocksUI23StockListViewController_applicationStateObserver] = 0;
  sub_1DC0824D4((uint64_t)v63, (uint64_t)&v29[OBJC_IVAR____TtC8StocksUI23StockListViewController_renderer]);
  sub_1DC0824D4((uint64_t)v62, (uint64_t)&v29[OBJC_IVAR____TtC8StocksUI23StockListViewController_styler]);
  v34 = &v29[OBJC_IVAR____TtC8StocksUI23StockListViewController_eventHandler];
  *(_QWORD *)v34 = a3;
  *((_QWORD *)v34 + 1) = a4;
  *(_QWORD *)&v29[OBJC_IVAR____TtC8StocksUI23StockListViewController_blueprintViewController] = a5;
  v35 = &v29[OBJC_IVAR____TtC8StocksUI23StockListViewController_blueprintSelectionProvider];
  *(_QWORD *)v35 = a6;
  *((_QWORD *)v35 + 1) = a21;
  v36 = &v29[OBJC_IVAR____TtC8StocksUI23StockListViewController_mastheadViewProvider];
  *(_QWORD *)v36 = a7;
  *((_QWORD *)v36 + 1) = a8;
  *(_QWORD *)&v29[OBJC_IVAR____TtC8StocksUI23StockListViewController_lazySearchController] = a9;
  *(_QWORD *)&v29[OBJC_IVAR____TtC8StocksUI23StockListViewController_bootstrapper] = a10;
  *(_QWORD *)&v29[OBJC_IVAR____TtC8StocksUI23StockListViewController_commands] = a11;
  sub_1DC0824D4(a12, (uint64_t)&v29[OBJC_IVAR____TtC8StocksUI23StockListViewController_keyboardInputMonitor]);
  sub_1DC0824D4((uint64_t)a13, (uint64_t)&v29[OBJC_IVAR____TtC8StocksUI23StockListViewController_appConfigurationManager]);
  sub_1DC0824D4((uint64_t)a14, (uint64_t)&v29[OBJC_IVAR____TtC8StocksUI23StockListViewController_quoteAttributionProvider]);
  sub_1DC0824D4((uint64_t)v64, (uint64_t)&v29[OBJC_IVAR____TtC8StocksUI23StockListViewController_featureAvailability]);
  sub_1DC0824D4((uint64_t)v61, (uint64_t)&v29[OBJC_IVAR____TtC8StocksUI23StockListViewController_editWatchlistMenuProvider]);
  *(_QWORD *)&v29[OBJC_IVAR____TtC8StocksUI23StockListViewController_stockListDraggingObserver] = a17;
  swift_unknownObjectRetain();
  v37 = a5;
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_retain();
  v38 = a10;
  swift_retain();
  swift_retain();

  v60.receiver = v29;
  v60.super_class = ObjectType;
  v39 = (char *)objc_msgSendSuper2(&v60, sel_initWithNibName_bundle_, 0, 0);
  *(_QWORD *)(*(_QWORD *)&v39[OBJC_IVAR____TtC8StocksUI23StockListViewController_eventHandler] + 24) = &off_1EA462998;
  swift_unknownObjectWeakAssign();
  v40 = *(void **)&v39[OBJC_IVAR____TtC8StocksUI23StockListViewController_blueprintViewController];
  v41 = v39;
  v42 = v40;
  sub_1DC405620();

  v43 = a14[3];
  v44 = a14[4];
  __swift_project_boxed_opaque_existential_1(a14, v43);
  (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v43, v44);
  sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3F8D0);
  v45 = (void *)sub_1DC409148();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1DC402794();
  swift_release();

  swift_release();
  __swift_project_boxed_opaque_existential_1(v58, v59);
  v46 = v41;
  sub_1DC4024AC();

  __swift_destroy_boxed_opaque_existential_1((uint64_t)v58);
  __swift_project_boxed_opaque_existential_1(a13, a13[3]);
  sub_1DC400DC0();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1DC40274C();
  swift_release();
  swift_release();
  __swift_project_boxed_opaque_existential_1(v58, v59);
  v47 = v46;
  sub_1DC4024AC();

  __swift_destroy_boxed_opaque_existential_1((uint64_t)v58);
  v48 = (void *)objc_opt_self();
  v49 = objc_msgSend(v48, sel_defaultCenter);
  objc_msgSend(v49, sel_addObserver_selector_name_object_, v47, sel_reconfigureLayoutForAccessibilityStateChange, *MEMORY[0x1E0DC46F0], 0);

  v50 = objc_msgSend(v48, sel_defaultCenter);
  objc_msgSend(v50, sel_addObserver_selector_name_object_, v47, sel_reconfigureLayoutForAccessibilityStateChange, *MEMORY[0x1E0DC4608], 0);

  *(_QWORD *)(swift_allocObject() + 16) = v47;
  v51 = v47;
  swift_retain();
  sub_1DC40274C();
  swift_release();
  swift_release();

  __swift_destroy_boxed_opaque_existential_1((uint64_t)v61);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v64);
  __swift_destroy_boxed_opaque_existential_1(a12);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v62);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v63);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v58);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a14);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a13);
  return v51;
}

char *sub_1DC306AF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, __int128 a9, __int128 a10, _QWORD *a11, _QWORD *a12, uint64_t a13, uint64_t a14, uint64_t a15, objc_class *a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t *boxed_opaque_existential_1;
  uint64_t *v32;
  uint64_t *v33;
  char *v34;
  uint64_t v35;
  __n128 v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  __n128 v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  __n128 v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v55;
  Class v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  _QWORD *v64;
  __int128 v65;
  __int128 v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73[3];
  uint64_t v74;
  uint64_t v75;
  uint64_t v76[3];
  uint64_t v77;
  uint64_t v78;
  uint64_t v79[3];
  uint64_t v80;
  uint64_t v81;

  v71 = a7;
  v72 = a8;
  v69 = a5;
  v70 = a6;
  v67 = a3;
  v68 = a4;
  v66 = a9;
  v65 = a10;
  v64 = a11;
  v63 = a12;
  v62 = a15;
  v56 = a16;
  v58 = a13;
  v61 = a23;
  v59 = a26;
  v60 = a18;
  v57 = *(_QWORD *)(a21 - 8);
  MEMORY[0x1E0C80A78](a1);
  v29 = (char *)&v55 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = a17;
  v81 = v30;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v79);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a17 - 8) + 32))(boxed_opaque_existential_1, a1, a17);
  v77 = a20;
  v78 = a25;
  v32 = __swift_allocate_boxed_opaque_existential_1(v76);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a20 - 8) + 32))(v32, a2, a20);
  v74 = a19;
  v75 = a24;
  v33 = __swift_allocate_boxed_opaque_existential_1(v73);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a19 - 8) + 32))(v33, a14, a19);
  v34 = (char *)objc_allocWithZone(v56);
  v35 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v79, v80);
  v36 = MEMORY[0x1E0C80A78](v35);
  v38 = (uint64_t *)((char *)&v55 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v39 + 16))(v38, v36);
  v40 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v76, v77);
  v41 = MEMORY[0x1E0C80A78](v40);
  v43 = (uint64_t *)((char *)&v55 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v44 + 16))(v43, v41);
  v45 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v73, v74);
  v46 = MEMORY[0x1E0C80A78](v45);
  v48 = (uint64_t *)((char *)&v55 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v49 + 16))(v48, v46);
  v50 = *v38;
  v51 = *v43;
  v52 = *v48;
  (*(void (**)(char *, uint64_t, uint64_t))(v57 + 16))(v29, v58, a21);
  v53 = sub_1DC306458(v50, v51, v67, v68, v69, v70, v71, v72, v66, *((void **)&v66 + 1), v65, *((uint64_t *)&v65 + 1), v64, v63, (uint64_t)v29, v52, v62, v34, v60,
          a21,
          v61,
          v59);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v73);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v76);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v79);
  return v53;
}

uint64_t sub_1DC306E38()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1DC306E5C(uint64_t a1)
{
  uint64_t v1;

  sub_1DC2FECD4(a1, v1);
}

void sub_1DC306E74(char *a1)
{
  uint64_t v1;

  sub_1DC2FEDAC(a1, *(id *)(v1 + 16));
}

uint64_t sub_1DC306E7C()
{
  return sub_1DC3BD930() & 1;
}

void sub_1DC306E98()
{
  sub_1DC304F98(0.0);
}

void sub_1DC306EB4()
{
  sub_1DC305034(0.0);
}

uint64_t sub_1DC306ED0()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1DC306EF4()
{
  sub_1DC304F98(1.0);
}

void sub_1DC306F10()
{
  sub_1DC305034(1.0);
}

uint64_t sub_1DC306F2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t ObjectType;

  v1 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC8StocksUI23StockListViewController_eventHandler)
                 + 40);
  ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(v1 + 176))(1, 0, 0, ObjectType, v1);
}

uint64_t sub_1DC306F80()
{
  return sub_1DC307068((uint64_t (*)(_QWORD, unint64_t, unint64_t))sub_1DC302F18);
}

uint64_t objectdestroy_22Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  sub_1DC0F8190();
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = v4 + *(_QWORD *)(v3 + 64);
  sub_1DC0CC0A4(0, (unint64_t *)&qword_1EDB2AB40, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790]);
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  v9 = (v5 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v0 + v4, v2);
  (*(void (**)(unint64_t, uint64_t))(v8 + 8))(v0 + v9, v7);
  return swift_deallocObject();
}

uint64_t sub_1DC30705C()
{
  return sub_1DC307068((uint64_t (*)(_QWORD, unint64_t, unint64_t))sub_1DC303250);
}

uint64_t sub_1DC307068(uint64_t (*a1)(_QWORD, unint64_t, unint64_t))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_1DC0F8190();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = v4 + *(_QWORD *)(v3 + 64);
  sub_1DC0CC0A4(0, (unint64_t *)&qword_1EDB2AB40, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790]);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80);
  return a1(*(_QWORD *)(v1 + 16), v1 + v4, v1 + ((v5 + v7) & ~v7));
}

void sub_1DC3070EC()
{
  sub_1DC304E34();
}

uint64_t sub_1DC3070F4()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_1DC307118()
{
  uint64_t v0;

  return sub_1DC300B60(*(char **)(v0 + 16), *(_BYTE *)(v0 + 24), *(_BYTE *)(v0 + 25));
}

uint64_t sub_1DC307128()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1DC30714C()
{
  uint64_t v0;

  sub_1DC301050(*(_BYTE *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1DC307158()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t ObjectType;

  v1 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC8StocksUI23StockListViewController_eventHandler)
                 + 40);
  ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 96))(ObjectType, v1);
}

void sub_1DC307198()
{
  sub_1DC302720();
}

void sub_1DC3071A0()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1F0351A70)
  {
    sub_1DC130A74(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1F0351A70);
  }
}

uint64_t sub_1DC307200()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1DC407EAC();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1DC307274(uint64_t a1)
{
  uint64_t v1;

  sub_1DC407EAC();
  return sub_1DC302240(a1, *(_QWORD *)(v1 + 16));
}

void sub_1DC3072B4()
{
  uint64_t v0;

  sub_1DC3048C8(*(void **)(v0 + 16));
}

uint64_t sub_1DC3072BC()
{
  swift_unknownObjectUnownedDestroy();
  return swift_deallocObject();
}

uint64_t sub_1DC3072E0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DC307304@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1DC303EE4(a1, *(_QWORD *)(v2 + 16), a2, *(double *)(v2 + 24));
}

void sub_1DC307310()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EDB27450)
  {
    sub_1DC4059F8();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EDB27450);
  }
}

void sub_1DC307378(uint64_t a1)
{
  sub_1DC089DA4(a1, &qword_1EDB28A28, (uint64_t (*)(uint64_t))sub_1DC307310, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

void sub_1DC307394()
{
  uint64_t v0;

  sub_1DC300508(v0);
}

uint64_t sub_1DC30739C()
{
  uint64_t v0;

  return sub_1DC3005C4(v0);
}

uint64_t sub_1DC3073A4()
{
  uint64_t v0;

  return sub_1DC30064C(v0);
}

void sub_1DC3073AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1DC300718(a1, a2, v2);
}

id sub_1DC3073B4()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), sel_becomeFirstResponder);
}

void sub_1DC3073C4(uint64_t a1)
{
  uint64_t v1;

  sub_1DC2FF468(a1, v1);
}

void sub_1DC3073DC(uint64_t a1)
{
  uint64_t v1;

  sub_1DC2FF50C(a1, v1);
}

uint64_t sub_1DC307460()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  _BYTE v13[16];
  uint64_t v14;
  unint64_t v15;

  v1 = sub_1DC4010E4();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = &v13[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for CommandShareContent(0);
  MEMORY[0x1E0C80A78](v5);
  v7 = &v13[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1DC216164(v0, (uint64_t)v7);
  sub_1DC20BAD4();
  v9 = (uint64_t)&v7[*(int *)(v8 + 48)];
  v10 = v7[*(int *)(v8 + 64)];
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v2 + 32))(v4, v7, v1);
  v14 = 0;
  v15 = 0xE000000000000000;
  sub_1DC409730();
  sub_1DC408B48();
  sub_1DC409808();
  sub_1DC408B48();
  v13[15] = v10;
  sub_1DC409808();
  sub_1DC408B48();
  v11 = v14;
  (*(void (**)(_BYTE *, uint64_t))(v2 + 8))(v4, v1);
  sub_1DC1C9068(v9);
  return v11;
}

uint64_t sub_1DC3075FC()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjCClassFromMetadata;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  v0 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1DC089DA4(0, (unint64_t *)&unk_1EDB29EF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB8200], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v18 - v2;
  sub_1DC089DA4(0, &qword_1EDB29B38, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB6A80], v0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v18 - v5;
  sub_1DC089DA4(0, qword_1EDB30C90, type metadata accessor for CommandShareContent, v0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v18 - v8;
  v10 = sub_1DC406B8C();
  __swift_allocate_value_buffer(v10, qword_1EDB5DE48);
  __swift_project_value_buffer(v10, (uint64_t)qword_1EDB5DE48);
  if (qword_1EDB2A9D8 != -1)
    swift_once();
  v11 = type metadata accessor for CommandShareContent(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v9, 1, 1, v11);
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v13 = (void *)objc_opt_self();
  swift_retain();
  v14 = objc_msgSend(v13, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1DC3FFC80();

  v15 = sub_1DC4041D4();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v6, 1, 1, v15);
  v16 = sub_1DC404B10();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v3, 1, 1, v16);
  return sub_1DC406B50();
}

uint64_t sub_1DC30788C(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjCClassFromMetadata;
  void *v17;
  id v18;
  void *v19;
  id v20;
  uint64_t v22;

  v4 = sub_1DC404C54();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for CommandShareContent(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EDB2A9D8 != -1)
    swift_once();
  sub_1DC20BAD4();
  v12 = (uint64_t)&v10[*(int *)(v11 + 48)];
  v13 = *(int *)(v11 + 64);
  v14 = sub_1DC4010E4();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v10, a1, v14);
  v15 = type metadata accessor for StockViewModel();
  sub_1DC0F01B0(a1 + *(int *)(v15 + 20), v12);
  v10[v13] = a2;
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v17 = (void *)objc_opt_self();
  swift_retain();
  v18 = objc_msgSend(v17, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1DC3FFC80();

  if (qword_1EDB3F190 != -1)
    swift_once();
  v19 = (void *)qword_1EDB5E120;
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DB8530], v4);
  sub_1DC40463C();
  swift_allocObject();
  v20 = v19;
  return sub_1DC4045E8();
}

uint64_t storeEnumTagSinglePayload for CommandShareAction(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1DC307B40 + 4 * byte_1DC426C85[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1DC307B74 + 4 * byte_1DC426C80[v4]))();
}

uint64_t sub_1DC307B74(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC307B7C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC307B84);
  return result;
}

uint64_t sub_1DC307B90(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC307B98);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1DC307B9C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC307BA4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CommandShareAction()
{
  return &type metadata for CommandShareAction;
}

_QWORD *sub_1DC307BC0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  id v21;
  id v22;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1DC4010E4();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    sub_1DC20BAD4();
    v9 = v8;
    v10 = *(int *)(v8 + 48);
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    v13 = sub_1DC401030();
    v14 = *(_QWORD *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    {
      sub_1DC089DA4(0, &qword_1EDB28DC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF040], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
    *((_BYTE *)a1 + *(int *)(v9 + 64)) = *((_BYTE *)a2 + *(int *)(v9 + 64));
    v17 = *(int *)(a3 + 20);
    v18 = *(int *)(a3 + 24);
    v19 = *(void **)((char *)a2 + v17);
    *(_QWORD *)((char *)a1 + v17) = v19;
    v20 = *(void **)((char *)a2 + v18);
    *(_QWORD *)((char *)a1 + v18) = v20;
    v21 = v19;
    v22 = v20;
  }
  return a1;
}

void sub_1DC307D18(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = sub_1DC4010E4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  sub_1DC20BAD4();
  v6 = a1 + *(int *)(v5 + 48);
  v7 = sub_1DC401030();
  v8 = *(_QWORD *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);

}

uint64_t sub_1DC307DC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  const void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  id v19;
  id v20;

  v6 = sub_1DC4010E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  sub_1DC20BAD4();
  v8 = v7;
  v9 = *(int *)(v7 + 48);
  v10 = (void *)(a1 + v9);
  v11 = (const void *)(a2 + v9);
  v12 = sub_1DC401030();
  v13 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
  {
    sub_1DC089DA4(0, &qword_1EDB28DC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF040], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v13 + 16))(v10, v11, v12);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  *(_BYTE *)(a1 + *(int *)(v8 + 64)) = *(_BYTE *)(a2 + *(int *)(v8 + 64));
  v15 = *(int *)(a3 + 20);
  v16 = *(int *)(a3 + 24);
  v17 = *(void **)(a2 + v15);
  *(_QWORD *)(a1 + v15) = v17;
  v18 = *(void **)(a2 + v16);
  *(_QWORD *)(a1 + v16) = v18;
  v19 = v17;
  v20 = v18;
  return a1;
}

uint64_t sub_1DC307EEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(void *, uint64_t, uint64_t);
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  id v21;
  uint64_t v22;
  void *v23;
  void *v24;
  id v25;

  v6 = sub_1DC4010E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  sub_1DC20BAD4();
  v8 = v7;
  v9 = *(int *)(v7 + 48);
  v10 = (void *)(a1 + v9);
  v11 = (void *)(a2 + v9);
  v12 = sub_1DC401030();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(void *, void *, uint64_t))(v13 + 24))(v10, v11, v12);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    sub_1DC089DA4(0, &qword_1EDB28DC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF040], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v13 + 16))(v10, v11, v12);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
LABEL_7:
  *(_BYTE *)(a1 + *(int *)(v8 + 64)) = *(_BYTE *)(a2 + *(int *)(v8 + 64));
  v18 = *(int *)(a3 + 20);
  v19 = *(void **)(a2 + v18);
  v20 = *(void **)(a1 + v18);
  *(_QWORD *)(a1 + v18) = v19;
  v21 = v19;

  v22 = *(int *)(a3 + 24);
  v23 = *(void **)(a1 + v22);
  v24 = *(void **)(a2 + v22);
  *(_QWORD *)(a1 + v22) = v24;
  v25 = v24;

  return a1;
}

uint64_t sub_1DC308078(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  const void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = sub_1DC4010E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  sub_1DC20BAD4();
  v8 = v7;
  v9 = *(int *)(v7 + 48);
  v10 = (void *)(a1 + v9);
  v11 = (const void *)(a2 + v9);
  v12 = sub_1DC401030();
  v13 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
  {
    sub_1DC089DA4(0, &qword_1EDB28DC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF040], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v13 + 32))(v10, v11, v12);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  *(_BYTE *)(a1 + *(int *)(v8 + 64)) = *(_BYTE *)(a2 + *(int *)(v8 + 64));
  v15 = *(int *)(a3 + 24);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  *(_QWORD *)(a1 + v15) = *(_QWORD *)(a2 + v15);
  return a1;
}

uint64_t sub_1DC30819C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(void *, uint64_t, uint64_t);
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  void *v21;

  v6 = sub_1DC4010E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  sub_1DC20BAD4();
  v8 = v7;
  v9 = *(int *)(v7 + 48);
  v10 = (void *)(a1 + v9);
  v11 = (void *)(a2 + v9);
  v12 = sub_1DC401030();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(void *, void *, uint64_t))(v13 + 40))(v10, v11, v12);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    sub_1DC089DA4(0, &qword_1EDB28DC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF040], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v13 + 32))(v10, v11, v12);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
LABEL_7:
  *(_BYTE *)(a1 + *(int *)(v8 + 64)) = *(_BYTE *)(a2 + *(int *)(v8 + 64));
  v18 = *(int *)(a3 + 20);
  v19 = *(void **)(a1 + v18);
  *(_QWORD *)(a1 + v18) = *(_QWORD *)(a2 + v18);

  v20 = *(int *)(a3 + 24);
  v21 = *(void **)(a1 + v20);
  *(_QWORD *)(a1 + v20) = *(_QWORD *)(a2 + v20);

  return a1;
}

uint64_t sub_1DC308320()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC30832C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v8;

  if (*(_DWORD *)(*(_QWORD *)(type metadata accessor for CommandShareContent(0) - 8) + 84) == (_DWORD)a2)
  {
    sub_1DC20BAD4();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(a1, a2, v6);
  }
  else
  {
    v8 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
    if (v8 >= 0xFFFFFFFF)
      LODWORD(v8) = -1;
    return (v8 + 1);
  }
}

uint64_t sub_1DC3083B4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC3083C0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for CommandShareContent(0);
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
  {
    sub_1DC20BAD4();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(a1, a2, a2, v9);
  }
  else
  {
    *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

_QWORD *sub_1DC308444(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = sub_1DC4010E4();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    sub_1DC20BAD4();
    v8 = v7;
    v9 = *(int *)(v7 + 48);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_1DC401030();
    v13 = *(_QWORD *)(v12 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
    {
      sub_1DC089DA4(0, &qword_1EDB28DC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF040], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
    *((_BYTE *)a1 + *(int *)(v8 + 64)) = *((_BYTE *)a2 + *(int *)(v8 + 64));
  }
  return a1;
}

uint64_t sub_1DC30857C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v2 = sub_1DC4010E4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  sub_1DC20BAD4();
  v4 = a1 + *(int *)(v3 + 48);
  v5 = sub_1DC401030();
  v6 = *(_QWORD *)(v5 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  return result;
}

uint64_t sub_1DC308610(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = sub_1DC4010E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  sub_1DC20BAD4();
  v6 = v5;
  v7 = *(int *)(v5 + 48);
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_1DC401030();
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    sub_1DC089DA4(0, &qword_1EDB28DC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF040], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  *(_BYTE *)(a1 + *(int *)(v6 + 64)) = *(_BYTE *)(a2 + *(int *)(v6 + 64));
  return a1;
}

uint64_t sub_1DC30871C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;

  v4 = sub_1DC4010E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  sub_1DC20BAD4();
  v6 = v5;
  v7 = *(int *)(v5 + 48);
  v8 = (void *)(a1 + v7);
  v9 = (void *)(a2 + v7);
  v10 = sub_1DC401030();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 24))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    sub_1DC089DA4(0, &qword_1EDB28DC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF040], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v8, v9, v10);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
  *(_BYTE *)(a1 + *(int *)(v6 + 64)) = *(_BYTE *)(a2 + *(int *)(v6 + 64));
  return a1;
}

uint64_t sub_1DC308874(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = sub_1DC4010E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  sub_1DC20BAD4();
  v6 = v5;
  v7 = *(int *)(v5 + 48);
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_1DC401030();
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    sub_1DC089DA4(0, &qword_1EDB28DC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF040], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  *(_BYTE *)(a1 + *(int *)(v6 + 64)) = *(_BYTE *)(a2 + *(int *)(v6 + 64));
  return a1;
}

uint64_t sub_1DC308980(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;

  v4 = sub_1DC4010E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  sub_1DC20BAD4();
  v6 = v5;
  v7 = *(int *)(v5 + 48);
  v8 = (void *)(a1 + v7);
  v9 = (void *)(a2 + v7);
  v10 = sub_1DC401030();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    sub_1DC089DA4(0, &qword_1EDB28DC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF040], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
  *(_BYTE *)(a1 + *(int *)(v6 + 64)) = *(_BYTE *)(a2 + *(int *)(v6 + 64));
  return a1;
}

uint64_t sub_1DC308AD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1DC20BAD4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_1DC308B14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  sub_1DC20BAD4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, a2, a3, v6);
}

unint64_t sub_1DC308B64()
{
  unint64_t result;

  result = qword_1F0351A90;
  if (!qword_1F0351A90)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC426DA4, &type metadata for CommandShareAction);
    atomic_store(result, (unint64_t *)&qword_1F0351A90);
  }
  return result;
}

uint64_t sub_1DC308BA8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  double v20;
  CGFloat v21;
  double v22;
  CGFloat v23;
  double v24;
  CGFloat v25;
  double v26;
  CGFloat v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  CGFloat Height;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char v40[16];
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  CGFloat v46;
  CGFloat v47;
  CGFloat v48;
  CGFloat v49;
  CGFloat v50;
  char *v51;
  _OWORD v52[3];
  uint64_t v53;
  uint64_t v54;
  CGRect v55;

  v54 = a3;
  v39 = type metadata accessor for StockSearchLayoutSectionDescriptor();
  MEMORY[0x1E0C80A78](v39);
  v38 = (uint64_t)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v37 - v7;
  v9 = type metadata accessor for StockSearchSectionHeaderViewLayoutAttributes();
  MEMORY[0x1E0C80A78](v9);
  v37 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for StockSearchSectionHeaderViewLayoutOptions();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for StockSearchSectionDescriptor();
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC157CB8();
  sub_1DC4046FC();
  sub_1DC24645C((uint64_t *)v52);
  sub_1DC0926D8((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for StockSearchSectionDescriptor);
  v17 = sub_1DC4052FC();
  v18 = a1;
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v13, a1, v17);
  v19 = __swift_project_boxed_opaque_existential_1((_QWORD *)(a2 + 56), *(_QWORD *)(a2 + 80));
  sub_1DC3BA060((uint64_t)v52, *v19);
  v21 = v20;
  v23 = v22;
  v25 = v24;
  v27 = v26;
  sub_1DC405230();
  v29 = v28;
  sub_1DC405224();
  v30 = (void *)sub_1DC405254();

  v55.origin.x = v21;
  v55.origin.y = v23;
  v55.size.width = v25;
  v55.size.height = v27;
  Height = CGRectGetHeight(v55);
  v44 = 0;
  v43 = 0;
  v45 = v29;
  v46 = Height + 0.0 + 11.0;
  v47 = v21;
  v48 = v23;
  v49 = v25;
  v50 = v27;
  v51 = v13;
  v32 = (uint64_t)v37;
  sub_1DC4051D0();
  sub_1DC21AFC4();
  v34 = (uint64_t)&v8[*(int *)(v33 + 48)];
  *((_QWORD *)v8 + 6) = v53;
  v35 = v52[1];
  *(_OWORD *)v8 = v52[0];
  *((_OWORD *)v8 + 1) = v35;
  *((_OWORD *)v8 + 2) = v52[2];
  sub_1DC0990BC(v32, v34, (uint64_t (*)(_QWORD))type metadata accessor for StockSearchSectionHeaderViewLayoutAttributes);
  v41 = v18;
  v42 = a2;
  sub_1DC156070((void (*)(char *))sub_1DC30970C, (uint64_t)v40);
  sub_1DC0990BC((uint64_t)v8, v38, (uint64_t (*)(_QWORD))type metadata accessor for StockSearchLayoutSectionDescriptor);
  type metadata accessor for StockSearchLayoutModel();
  sub_1DC080808(&qword_1EDB3CB80, (uint64_t (*)(uint64_t))type metadata accessor for StockSearchLayoutSectionDescriptor, (uint64_t)&unk_1DC419DE0);
  sub_1DC080808(&qword_1EDB340B0, (uint64_t (*)(uint64_t))type metadata accessor for StockSearchLayoutModel, (uint64_t)&unk_1DC422B70);
  sub_1DC405308();
  sub_1DC0926D8((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for StockSearchLayoutSectionDescriptor);
  sub_1DC0926D8(v32, (uint64_t (*)(_QWORD))type metadata accessor for StockSearchSectionHeaderViewLayoutAttributes);
  return sub_1DC0926D8((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for StockSearchSectionHeaderViewLayoutOptions);
}

uint64_t sub_1DC308F8C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  double v30;
  double v31;
  double v32;
  _BOOL4 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  double v50;
  double v51;
  double v52;
  _BOOL4 v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  uint64_t v86;
  CGRect v87;
  CGRect v88;

  v65 = a1;
  v71 = a3;
  v68 = sub_1DC40124C();
  v67 = *(_QWORD *)(v68 - 8);
  MEMORY[0x1E0C80A78](v68);
  v66 = (char *)&v65 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = type metadata accessor for StockSearchLayoutModel();
  MEMORY[0x1E0C80A78](v70);
  v69 = (uint64_t)&v65 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for StockSearchCellViewLayoutOptions();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v65 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v65 - v10;
  v12 = type metadata accessor for StockViewModel();
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v65 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v65 - v16;
  v18 = type metadata accessor for StockSearchModel();
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v65 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0D95F0(0);
  sub_1DC404354();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1DC1C62AC();
    v22 = &v20[*(int *)(v21 + 48)];
    sub_1DC0F0F38((uint64_t)v20, (uint64_t)v14);
    v23 = v67;
    v24 = v68;
    (*(void (**)(char *, char *, uint64_t))(v67 + 32))(v66, v22, v68);
    v25 = sub_1DC4052FC();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v8, v65, v25);
    v8[*(int *)(v6 + 20)] = 1;
    v26 = __swift_project_boxed_opaque_existential_1((_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 40));
    __swift_project_boxed_opaque_existential_1((_QWORD *)(*v26 + 16), *(_QWORD *)(*v26 + 40));
    v27 = sub_1DC4010D8();
    v29 = sub_1DC1D60E4(v27, v28, 0);
    swift_bridgeObjectRelease();
    sub_1DC4052F0();
    v31 = v30;
    sub_1DC405224();
    sub_1DC408F74();
    objc_msgSend(v29, sel_boundingRectWithSize_options_context_, 0, 0, v31 - v32, 1.79769313e308);
    v33 = CGRectGetHeight(v87) >= 27.0;
    sub_1DC17F374(v33, *(double *)&v14, (uint64_t)v8, (uint64_t)&v72);

    sub_1DC2B3B68();
    v35 = v69 + *(int *)(v34 + 48);
    v36 = v69 + *(int *)(v34 + 64);
    sub_1DC0990BC((uint64_t)v14, v69, (uint64_t (*)(_QWORD))type metadata accessor for StockViewModel);
    v37 = v66;
    (*(void (**)(uint64_t, char *, uint64_t))(v23 + 16))(v35, v66, v24);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v23 + 56))(v35, 0, 1, v24);
    v38 = v85;
    *(_OWORD *)(v36 + 192) = v84;
    *(_OWORD *)(v36 + 208) = v38;
    *(_QWORD *)(v36 + 224) = v86;
    v39 = v81;
    *(_OWORD *)(v36 + 128) = v80;
    *(_OWORD *)(v36 + 144) = v39;
    v40 = v83;
    *(_OWORD *)(v36 + 160) = v82;
    *(_OWORD *)(v36 + 176) = v40;
    v41 = v77;
    *(_OWORD *)(v36 + 64) = v76;
    *(_OWORD *)(v36 + 80) = v41;
    v42 = v79;
    *(_OWORD *)(v36 + 96) = v78;
    *(_OWORD *)(v36 + 112) = v42;
    v43 = v73;
    *(_OWORD *)v36 = v72;
    *(_OWORD *)(v36 + 16) = v43;
    v44 = v75;
    *(_OWORD *)(v36 + 32) = v74;
    *(_OWORD *)(v36 + 48) = v44;
    sub_1DC080808(&qword_1EDB340B0, (uint64_t (*)(uint64_t))type metadata accessor for StockSearchLayoutModel, (uint64_t)&unk_1DC422B70);
    sub_1DC404DD4();
    sub_1DC0926D8((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for StockSearchCellViewLayoutOptions);
    (*(void (**)(char *, uint64_t))(v23 + 8))(v37, v24);
    v17 = v14;
  }
  else
  {
    sub_1DC0F0F38((uint64_t)v20, (uint64_t)v17);
    v45 = sub_1DC4052FC();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 16))(v11, v65, v45);
    v11[*(int *)(v6 + 20)] = 0;
    v46 = __swift_project_boxed_opaque_existential_1((_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 40));
    __swift_project_boxed_opaque_existential_1((_QWORD *)(*v46 + 16), *(_QWORD *)(*v46 + 40));
    v47 = sub_1DC4010D8();
    v49 = sub_1DC1D60E4(v47, v48, 0);
    swift_bridgeObjectRelease();
    sub_1DC4052F0();
    v51 = v50;
    sub_1DC405224();
    sub_1DC408F74();
    objc_msgSend(v49, sel_boundingRectWithSize_options_context_, 0, 0, v51 - v52, 1.79769313e308);
    v53 = CGRectGetHeight(v88) >= 27.0;
    sub_1DC17F374(v53, *(double *)&v17, (uint64_t)v11, (uint64_t)&v72);

    sub_1DC2B3B68();
    v55 = v69 + *(int *)(v54 + 48);
    v56 = v69 + *(int *)(v54 + 64);
    sub_1DC0990BC((uint64_t)v17, v69, (uint64_t (*)(_QWORD))type metadata accessor for StockViewModel);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v67 + 56))(v55, 1, 1, v68);
    v57 = v85;
    *(_OWORD *)(v56 + 192) = v84;
    *(_OWORD *)(v56 + 208) = v57;
    *(_QWORD *)(v56 + 224) = v86;
    v58 = v81;
    *(_OWORD *)(v56 + 128) = v80;
    *(_OWORD *)(v56 + 144) = v58;
    v59 = v83;
    *(_OWORD *)(v56 + 160) = v82;
    *(_OWORD *)(v56 + 176) = v59;
    v60 = v77;
    *(_OWORD *)(v56 + 64) = v76;
    *(_OWORD *)(v56 + 80) = v60;
    v61 = v79;
    *(_OWORD *)(v56 + 96) = v78;
    *(_OWORD *)(v56 + 112) = v61;
    v62 = v73;
    *(_OWORD *)v56 = v72;
    *(_OWORD *)(v56 + 16) = v62;
    v63 = v75;
    *(_OWORD *)(v56 + 32) = v74;
    *(_OWORD *)(v56 + 48) = v63;
    sub_1DC080808(&qword_1EDB340B0, (uint64_t (*)(uint64_t))type metadata accessor for StockSearchLayoutModel, (uint64_t)&unk_1DC422B70);
    sub_1DC404DD4();
    sub_1DC0926D8((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for StockSearchCellViewLayoutOptions);
  }
  return sub_1DC0926D8((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for StockViewModel);
}

uint64_t sub_1DC3095A8(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE v10[16];
  uint64_t v11;
  uint64_t v12;

  v4 = sub_1DC4052FC();
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = *v2;
  (*(void (**)(_BYTE *, uint64_t, __n128))(v8 + 16))(&v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)], a2, v5);
  v11 = a2;
  v12 = v7;
  sub_1DC155DF8((void (*)(char *))sub_1DC3096D8, (uint64_t)v10);
  type metadata accessor for StockSearchLayoutSectionDescriptor();
  type metadata accessor for StockSearchLayoutModel();
  sub_1DC080808(&qword_1EDB3CB80, (uint64_t (*)(uint64_t))type metadata accessor for StockSearchLayoutSectionDescriptor, (uint64_t)&unk_1DC419DE0);
  sub_1DC080808(&qword_1EDB340B0, (uint64_t (*)(uint64_t))type metadata accessor for StockSearchLayoutModel, (uint64_t)&unk_1DC422B70);
  return sub_1DC404540();
}

uint64_t sub_1DC3096D8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1DC308BA8(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_1DC3096F4@<X0>(_QWORD *a1@<X8>)
{
  return sub_1DC3BA188(a1);
}

uint64_t sub_1DC30970C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1DC308F8C(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

char *sub_1DC309728(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v5;
  objc_class *ObjectType;
  uint64_t v11;
  id v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  objc_super v20;

  v5 = v4;
  ObjectType = (objc_class *)swift_getObjectType();
  v11 = OBJC_IVAR____TtC8StocksUI21StockFeedEarningsView_separatorView;
  v12 = objc_allocWithZone(MEMORY[0x1E0DC3F10]);
  v13 = v4;
  *(_QWORD *)&v5[v11] = objc_msgSend(v12, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v14 = OBJC_IVAR____TtC8StocksUI21StockFeedEarningsView_earningsLabel;
  *(_QWORD *)&v13[v14] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v15 = OBJC_IVAR____TtC8StocksUI21StockFeedEarningsView_addCalendarButton;
  *(_QWORD *)&v13[v15] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for StockFeedEarningsView.AddCalendarButton()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);

  v20.receiver = v13;
  v20.super_class = ObjectType;
  v16 = (char *)objc_msgSendSuper2(&v20, sel_initWithFrame_, a1, a2, a3, a4);
  v17 = *(_QWORD *)&v16[OBJC_IVAR____TtC8StocksUI21StockFeedEarningsView_separatorView];
  v18 = v16;
  objc_msgSend(v18, sel_addSubview_, v17);
  objc_msgSend(v18, sel_addSubview_, *(_QWORD *)&v18[OBJC_IVAR____TtC8StocksUI21StockFeedEarningsView_earningsLabel]);
  objc_msgSend(v18, sel_addSubview_, *(_QWORD *)&v18[OBJC_IVAR____TtC8StocksUI21StockFeedEarningsView_addCalendarButton]);

  return v18;
}

char *sub_1DC3098EC(char *a1, double a2, double a3, double a4, double a5)
{
  objc_class *ObjectType;
  uint64_t v11;
  Class v12;
  id v13;
  char *v14;
  char *v15;
  void *v16;
  char *v17;
  id v18;
  objc_super v20;

  ObjectType = (objc_class *)swift_getObjectType();
  v11 = qword_1EDB330E0;
  sub_1DC12F234();
  v13 = objc_allocWithZone(v12);
  v14 = a1;
  *(_QWORD *)&a1[v11] = objc_msgSend(v13, sel_init);

  v20.receiver = v14;
  v20.super_class = ObjectType;
  v15 = (char *)objc_msgSendSuper2(&v20, sel_initWithFrame_, a2, a3, a4, a5);
  v16 = *(void **)&v15[qword_1EDB330E0];
  v17 = v15;
  v18 = v16;
  sub_1DC406898();

  return v17;
}

void sub_1DC3099D4(char *a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  Class v6;
  id v7;
  id v8;

  v5 = qword_1EDB330E0;
  sub_1DC12F234();
  v7 = objc_allocWithZone(v6);
  v8 = a3;
  *(_QWORD *)&a1[v5] = objc_msgSend(v7, sel_init);

  sub_1DC409838();
  __break(1u);
}

void sub_1DC309A70()
{
  uint64_t v0;

}

void sub_1DC309A80(uint64_t a1)
{

}

uint64_t type metadata accessor for StockFeedEarningsView()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for StockFeedEarningsView.AddCalendarButton()
{
  uint64_t result;

  result = qword_1EDB330E8;
  if (!qword_1EDB330E8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1DC309B34()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1DC309B80()
{
  return type metadata accessor for StockFeedEarningsView.AddCalendarButton();
}

void sub_1DC309B88()
{
  _QWORD *v0;
  id v1;

  v1 = objc_retain(*(id *)(*(_QWORD *)(*v0 + OBJC_IVAR____TtC8StocksUI21StockFeedEarningsView_addCalendarButton)
                         + qword_1EDB330E0));

}

void sub_1DC309BDC()
{
  sub_1DC309C38((unint64_t *)&unk_1EDB33100, (uint64_t)&unk_1DC426F5C);
  JUMPOUT(0x1DF0C7418);
}

uint64_t sub_1DC309C14()
{
  return sub_1DC309C38(&qword_1EDB330F8, (uint64_t)&unk_1DC426F24);
}

uint64_t sub_1DC309C38(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for StockFeedEarningsView();
    result = MEMORY[0x1DF0CAB8C](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1DC309C74()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = OBJC_IVAR____TtC8StocksUI21StockFeedEarningsView_separatorView;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v2 = OBJC_IVAR____TtC8StocksUI21StockFeedEarningsView_earningsLabel;
  *(_QWORD *)&v0[v2] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v3 = OBJC_IVAR____TtC8StocksUI21StockFeedEarningsView_addCalendarButton;
  *(_QWORD *)&v0[v3] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for StockFeedEarningsView.AddCalendarButton()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);

  sub_1DC409838();
  __break(1u);
}

id PremiumSealColorPalette.innerSealTopLeftDynamicColor.getter()
{
  id *v0;

  return *v0;
}

id PremiumSealColorPalette.innerSealBottomRightDynamicColor.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 8);
}

id PremiumSealColorPalette.outerSealDynamicColor.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 16);
}

_QWORD *initializeBufferWithCopyOfBuffer for PremiumSealColorPalette(_QWORD *a1, uint64_t a2)
{
  void *v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  id v8;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = *(void **)(a2 + 16);
  a1[2] = v5;
  v6 = v3;
  v7 = v4;
  v8 = v5;
  return a1;
}

void destroy for PremiumSealColorPalette(id *a1)
{

}

uint64_t assignWithCopy for PremiumSealColorPalette(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(void **)(a2 + 8);
  v8 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v7;
  v9 = v7;

  v10 = *(void **)(a2 + 16);
  v11 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v10;
  v12 = v10;

  return a1;
}

uint64_t assignWithTake for PremiumSealColorPalette(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;

  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  v5 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);

  return a1;
}

ValueMetadata *type metadata accessor for PremiumSealColorPalette()
{
  return &type metadata for PremiumSealColorPalette;
}

uint64_t destroy for ManageWatchlistsDeleteWatchlistBlueprintModifier()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for ManageWatchlistsDeleteWatchlistBlueprintModifier(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for ManageWatchlistsDeleteWatchlistBlueprintModifier(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ManageWatchlistsDeleteWatchlistBlueprintModifier(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for ManageWatchlistsDeleteWatchlistBlueprintModifier()
{
  return &type metadata for ManageWatchlistsDeleteWatchlistBlueprintModifier;
}

uint64_t sub_1DC30A01C(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v14 = MEMORY[0x1E0DEE9D8];
    sub_1DC0F0894(0, v1, 0);
    v2 = v14;
    v4 = *(_QWORD *)(sub_1DC40124C() - 8);
    v5 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v6 = *(_QWORD *)(v4 + 72);
    do
    {
      v7 = sub_1DC4011E0();
      v9 = v8;
      v11 = *(_QWORD *)(v14 + 16);
      v10 = *(_QWORD *)(v14 + 24);
      if (v11 >= v10 >> 1)
        sub_1DC0F0894(v10 > 1, v11 + 1, 1);
      *(_QWORD *)(v14 + 16) = v11 + 1;
      v12 = v14 + 16 * v11;
      *(_QWORD *)(v12 + 32) = v7;
      *(_QWORD *)(v12 + 40) = v9;
      v5 += v6;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1DC30A118(void (*a1)(char *, uint64_t), void (*a2)(uint64_t *), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t (*v16)(void);
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  int v32;
  int v33;
  uint64_t inited;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t *);
  uint64_t v39;
  uint64_t v40;
  uint64_t (*v41)(void);
  uint64_t v42;
  uint64_t result;
  uint64_t v44;
  void (*v45)(uint64_t *);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _BYTE *v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t *v56;
  char *v57;
  uint64_t *v58;
  void (*v59)(char *);
  uint64_t v60;
  char *v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  void (*v65)(char *, uint64_t);
  uint64_t *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void (*v72)(uint64_t *);
  uint64_t v73;

  v64 = a7;
  v65 = a1;
  v71 = a3;
  v72 = a2;
  sub_1DC30AD20(0, &qword_1F034E398, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB9A28]);
  v67 = *(_QWORD *)(v8 - 8);
  v68 = v8;
  MEMORY[0x1E0C80A78](v8);
  v66 = (uint64_t *)((char *)&v59 - v9);
  v62 = sub_1DC405C68();
  v60 = *(_QWORD *)(v62 - 8);
  MEMORY[0x1E0C80A78](v62);
  v61 = (char *)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC142B5C();
  v12 = v11;
  v13 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v59 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x1E0DBC790];
  sub_1DC30ACCC(0, &qword_1F0351AD0, (unint64_t *)&qword_1F0350F40, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790]);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v59 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v59 - v21;
  sub_1DC30AD20(0, (unint64_t *)&qword_1F0350F40, (uint64_t (*)(uint64_t, _QWORD *))v16);
  v69 = *(_QWORD *)(v23 - 8);
  v70 = v23;
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)&v59 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v26);
  v63 = (char *)&v59 - v27;
  v28 = sub_1DC404E1C();
  v29 = *(_QWORD *)(v28 - 8);
  MEMORY[0x1E0C80A78](v28);
  v31 = (char *)&v59 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = a6;
  if (a6)
  {
    swift_retain();
    sub_1DC405BB4();
    v32 = (*(uint64_t (**)(char *, uint64_t))(v29 + 88))(v31, v28);
    v33 = *MEMORY[0x1E0DB88D8];
    (*(void (**)(char *, uint64_t))(v29 + 8))(v31, v28);
    if (v32 == v33)
    {
      sub_1DC11200C();
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1DC40DC10;
      sub_1DC405BA8();
      v35 = sub_1DC404324();
      v37 = v36;
      (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
      *(_QWORD *)(inited + 32) = v35;
      *(_QWORD *)(inited + 40) = v37;
      v38 = v72;
      sub_1DC30A714(inited, v72, v71, (uint64_t)v22);
      swift_setDeallocating();
      swift_arrayDestroy();
      v40 = v69;
      v39 = v70;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v69 + 48))(v22, 1, v70) == 1)
      {
        swift_release();
        v41 = MEMORY[0x1E0DBC790];
        v42 = (uint64_t)v22;
        return sub_1DC30ADA8(v42, &qword_1F0351AD0, (unint64_t *)&qword_1F0350F40, (uint64_t (*)(uint64_t, _QWORD *))v41);
      }
      (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v63, v22, v39);
      LODWORD(v64) = *MEMORY[0x1E0DBA8E8];
      v53 = v60;
      v59 = *(void (**)(char *))(v60 + 104);
      v54 = v61;
      v55 = v62;
      v59(v61);
      sub_1DC405B90();
      v65 = *(void (**)(char *, uint64_t))(v53 + 8);
      v65(v54, v55);
      type metadata accessor for ManageWatchlistsModel();
      sub_1DC142C7C();
      sub_1DC157B44();
      v56 = v66;
      v57 = v63;
      sub_1DC405548();
      v38(v56);
      (*(void (**)(uint64_t *, uint64_t))(v67 + 8))(v56, v68);
      ((void (*)(char *, _QWORD, uint64_t))v59)(v54, v64, v55);
      sub_1DC405C74();
      swift_release();
      swift_release();
      v65(v54, v55);
      return (*(uint64_t (**)(char *, uint64_t))(v69 + 8))(v57, v70);
    }
    else
    {
      sub_1DC30AC88();
      v48 = swift_allocError();
      *v49 = 0;
      v51 = v66;
      v50 = v67;
      *v66 = v48;
      v52 = v68;
      (*(void (**)(uint64_t *, _QWORD, uint64_t))(v50 + 104))(v51, *MEMORY[0x1E0DB99F0], v68);
      v72(v51);
      swift_release();
      return (*(uint64_t (**)(uint64_t *, uint64_t))(v50 + 8))(v51, v52);
    }
  }
  else
  {
    result = v64;
    if (!v64)
      return result;
    v44 = sub_1DC30A01C(v64);
    v45 = v72;
    sub_1DC30A714(v44, v72, v71, (uint64_t)v19);
    swift_bridgeObjectRelease();
    v47 = v69;
    v46 = v70;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v69 + 48))(v19, 1, v70) == 1)
    {
      v41 = MEMORY[0x1E0DBC790];
      v42 = (uint64_t)v19;
      return sub_1DC30ADA8(v42, &qword_1F0351AD0, (unint64_t *)&qword_1F0350F40, (uint64_t (*)(uint64_t, _QWORD *))v41);
    }
    (*(void (**)(char *, char *, uint64_t))(v47 + 32))(v25, v19, v46);
    type metadata accessor for ManageWatchlistsModel();
    sub_1DC142C7C();
    sub_1DC157B44();
    v58 = v66;
    sub_1DC405548();
    v45(v58);
    (*(void (**)(uint64_t *, uint64_t))(v67 + 8))(v58, v68);
    return (*(uint64_t (**)(char *, uint64_t))(v47 + 8))(v25, v46);
  }
}

uint64_t sub_1DC30A714@<X0>(uint64_t a1@<X0>, void (*a2)(uint64_t *)@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(void);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  void (*v29)(__n128);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  void (*v38)(char *, char *, uint64_t);
  char *v39;
  uint64_t v40;
  void (*v41)(char *, uint64_t);
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _BYTE *v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  _BYTE *v52;
  uint64_t *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v58;
  void (*v59)(uint64_t *);
  uint64_t v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;

  v65 = a3;
  sub_1DC30AD20(0, &qword_1F034E398, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB9A28]);
  v63 = *(_QWORD *)(v7 - 8);
  v64 = v7;
  MEMORY[0x1E0C80A78](v7);
  v62 = (uint64_t *)((char *)&v58 - v8);
  sub_1DC1DD764();
  MEMORY[0x1E0C80A78](v9);
  v71 = (char *)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC142B5C();
  v70 = v11;
  v74 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v68 = (char *)&v58 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x1E0DB7B60];
  sub_1DC30ACCC(0, (unint64_t *)&qword_1F034E3A8, (unint64_t *)&qword_1F034C028, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60]);
  MEMORY[0x1E0C80A78](v14);
  v75 = (uint64_t)&v58 - v15;
  sub_1DC30AD20(0, (unint64_t *)&qword_1F034C028, (uint64_t (*)(uint64_t, _QWORD *))v13);
  v17 = v16;
  v18 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v67 = (char *)&v58 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v58 - v21;
  sub_1DC30AD20(0, (unint64_t *)&qword_1F0350F40, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790]);
  v24 = v23;
  v25 = MEMORY[0x1E0C80A78](v23);
  v27 = (char *)&v58 - v26;
  v66 = v28;
  v29 = *(void (**)(__n128))(v28 + 16);
  v72 = v27;
  v29(v25);
  v30 = *(_QWORD *)(a1 + 16);
  if (v30)
  {
    v59 = a2;
    v61 = a4;
    swift_bridgeObjectRetain();
    v60 = a1;
    v31 = a1 + 40;
    v32 = v18;
    v69 = v24;
    while (1)
    {
      swift_bridgeObjectRetain();
      v33 = v75;
      sub_1DC406CC4();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v32 + 48))(v33, 1, v17) == 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1DC30ADA8(v75, (unint64_t *)&qword_1F034E3A8, (unint64_t *)&qword_1F034C028, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60]);
        sub_1DC30AC88();
        v46 = swift_allocError();
        v45 = 1;
        *v47 = 1;
        v49 = v62;
        v48 = v63;
        *v62 = v46;
        v50 = v64;
        (*(void (**)(uint64_t *, _QWORD, uint64_t))(v48 + 104))(v49, *MEMORY[0x1E0DB99F0], v64);
        v59(v49);
        (*(void (**)(uint64_t *, uint64_t))(v48 + 8))(v49, v50);
        goto LABEL_10;
      }
      (*(void (**)(char *, uint64_t, uint64_t))(v32 + 32))(v22, v75, v17);
      v34 = (uint64_t)v71;
      sub_1DC4047BC();
      swift_bridgeObjectRelease();
      v35 = v74;
      v36 = v70;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v74 + 48))(v34, 1, v70) == 1)
        break;
      v31 += 16;
      v37 = v68;
      (*(void (**)(char *, uint64_t, uint64_t))(v35 + 32))(v68, v34, v36);
      v38 = *(void (**)(char *, char *, uint64_t))(v32 + 16);
      v73 = v30;
      v39 = v67;
      v38(v67, v22, v17);
      sub_1DC404750();
      v40 = v69;
      sub_1DC406CB8();
      v41 = *(void (**)(char *, uint64_t))(v32 + 8);
      v42 = v39;
      v43 = v73;
      v41(v42, v17);
      (*(void (**)(char *, uint64_t))(v74 + 8))(v37, v36);
      v41(v22, v17);
      v24 = v40;
      v30 = v43 - 1;
      if (!v30)
      {
        swift_bridgeObjectRelease();
        a4 = v61;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    sub_1DC30ADE4(v34);
    sub_1DC30AC88();
    v51 = swift_allocError();
    v45 = 1;
    *v52 = 1;
    v53 = v62;
    *v62 = v51;
    v54 = v22;
    v56 = v63;
    v55 = v64;
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(v63 + 104))(v53, *MEMORY[0x1E0DB99F0], v64);
    v59(v53);
    (*(void (**)(uint64_t *, uint64_t))(v56 + 8))(v53, v55);
    (*(void (**)(char *, uint64_t))(v32 + 8))(v54, v17);
LABEL_10:
    v44 = v66;
    v24 = v69;
    (*(void (**)(char *, uint64_t))(v66 + 8))(v72, v69);
    a4 = v61;
  }
  else
  {
LABEL_7:
    v44 = v66;
    (*(void (**)(uint64_t, char *, uint64_t))(v66 + 32))(a4, v72, v24);
    v45 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v44 + 56))(a4, v45, 1, v24);
}

uint64_t sub_1DC30AC34(void (*a1)(char *, uint64_t), void (*a2)(uint64_t *), uint64_t a3)
{
  uint64_t *v3;

  return sub_1DC30A118(a1, a2, a3, *v3, v3[1], v3[2], v3[3]);
}

unint64_t sub_1DC30AC44()
{
  unint64_t result;

  result = qword_1F0351AC8;
  if (!qword_1F0351AC8)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC427004, &type metadata for ManageWatchlistsDeleteWatchlistBlueprintModifier);
    atomic_store(result, (unint64_t *)&qword_1F0351AC8);
  }
  return result;
}

unint64_t sub_1DC30AC88()
{
  unint64_t result;

  result = qword_1F0351AD8;
  if (!qword_1F0351AD8)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC4270F4, &type metadata for ManageWatchlistsDeleteWatchlistBlueprintModifier.Errors);
    atomic_store(result, (unint64_t *)&qword_1F0351AD8);
  }
  return result;
}

void sub_1DC30ACCC(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t, _QWORD *))
{
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    sub_1DC30AD20(255, a3, a4);
    v5 = sub_1DC4095A4();
    if (!v6)
      atomic_store(v5, a2);
  }
}

void sub_1DC30AD20(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *))
{
  unint64_t v6;
  uint64_t v7;
  _QWORD v8[4];

  if (!*a2)
  {
    v8[0] = &type metadata for ManageWatchlistsSectionDescriptor;
    v8[1] = type metadata accessor for ManageWatchlistsModel();
    v8[2] = sub_1DC142C7C();
    v8[3] = sub_1DC157B44();
    v6 = a3(a1, v8);
    if (!v7)
      atomic_store(v6, a2);
  }
}

uint64_t sub_1DC30ADA8(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t, _QWORD *))
{
  uint64_t v5;

  sub_1DC30ACCC(0, a2, a3, a4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

uint64_t sub_1DC30ADE4(uint64_t a1)
{
  uint64_t v2;

  sub_1DC1DD764();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t storeEnumTagSinglePayload for ManageWatchlistsDeleteWatchlistBlueprintModifier.Errors(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1DC30AE6C + 4 * byte_1DC426FC5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1DC30AEA0 + 4 * asc_1DC426FC0[v4]))();
}

uint64_t sub_1DC30AEA0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC30AEA8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC30AEB0);
  return result;
}

uint64_t sub_1DC30AEBC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC30AEC4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1DC30AEC8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC30AED0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ManageWatchlistsDeleteWatchlistBlueprintModifier.Errors()
{
  return &type metadata for ManageWatchlistsDeleteWatchlistBlueprintModifier.Errors;
}

unint64_t sub_1DC30AEF0()
{
  unint64_t result;

  result = qword_1F0351AE0;
  if (!qword_1F0351AE0)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC4270CC, &type metadata for ManageWatchlistsDeleteWatchlistBlueprintModifier.Errors);
    atomic_store(result, (unint64_t *)&qword_1F0351AE0);
  }
  return result;
}

uint64_t sub_1DC30AF34()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  sub_1DC133BB0(0);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1DC3FFDD0();
  __swift_allocate_value_buffer(v3, qword_1F0368BD8);
  v4 = __swift_project_value_buffer(v3, (uint64_t)qword_1F0368BD8);
  sub_1DC3FFDC4();
  v5 = *(_QWORD *)(v3 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v2, 1, v3);
  if ((_DWORD)result != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v5 + 32))(v4, v2, v3);
  __break(1u);
  return result;
}

uint64_t sub_1DC30B010(double a1)
{
  uint64_t v1;
  id v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void (*v14)(void *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v17[5];

  v3 = (id)sub_1DC0FD03C(0, *(_QWORD *)(v1 + 56), *(_BYTE *)(v1 + 64), a1);
  objc_msgSend(v3, sel_setNumberStyle_, 1);
  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithDouble_, a1);
  v5 = objc_msgSend(v3, sel_stringFromNumber_, v4);

  if (v5)
  {
    v6 = sub_1DC408A4C();
    v8 = v7;

  }
  else
  {

    v6 = sub_1DC408DE8();
    v8 = v9;
  }
  v10 = *(_QWORD *)(v1 + 40);
  v11 = *(_QWORD *)(v1 + 48);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + 16), v10);
  v12 = (void *)sub_1DC4087F4();
  v13 = *(_QWORD *)(v11 + 8);
  v14 = *(void (**)(void *, uint64_t, uint64_t))(v13 + 8);
  v17[3] = v10;
  v17[4] = v11;
  __swift_allocate_boxed_opaque_existential_1(v17);
  v14(v12, v10, v13);

  v15 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 136))(v6, v8, v10, v11);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  return v15;
}

uint64_t sub_1DC30B188()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for StockChartPriceLabelFormatter()
{
  return objc_opt_self();
}

uint64_t sub_1DC30B1D4(double a1)
{
  return sub_1DC30B010(a1);
}

uint64_t sub_1DC30B1F4@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[5];
  _BYTE v20[24];
  uint64_t v21;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB3AD88);
  result = sub_1DC402608();
  if (v21)
  {
    v4 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v20, v21);
    v5 = MEMORY[0x1E0C80A78](v4);
    v7 = (_QWORD *)((char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v8 + 16))(v7, v5);
    v9 = *v7;
    v10 = type metadata accessor for ForYouFeedMastheadViewStyler();
    v19[3] = v10;
    v19[4] = &off_1EA45A458;
    v19[0] = v9;
    v11 = type metadata accessor for ForYouFeedMastheadViewRenderer();
    v12 = (_QWORD *)swift_allocObject();
    v13 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v19, v10);
    v14 = MEMORY[0x1E0C80A78](v13);
    v16 = (_QWORD *)((char *)v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v17 + 16))(v16, v14);
    v18 = *v16;
    v12[5] = v10;
    v12[6] = &off_1EA45A458;
    v12[2] = v18;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
    result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
    a2[3] = v11;
    a2[4] = &off_1EA44E0E8;
    *a2 = v12;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC30B38C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, qword_1EDB2D2F0);
  result = sub_1DC402608();
  if (v7)
  {
    v4 = type metadata accessor for ForYouFeedMastheadViewStyler();
    v5 = swift_allocObject();
    result = sub_1DC097DD0(&v6, v5 + 16);
    a2[3] = v4;
    a2[4] = (uint64_t)&off_1EA45A458;
    *a2 = v5;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC30B43C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[5];
  _BYTE v20[24];
  uint64_t v21;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB3AD88);
  result = sub_1DC402608();
  if (v21)
  {
    v4 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v20, v21);
    v5 = MEMORY[0x1E0C80A78](v4);
    v7 = (_QWORD *)((char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v8 + 16))(v7, v5);
    v9 = *v7;
    v10 = type metadata accessor for ForYouFeedMastheadViewStyler();
    v19[3] = v10;
    v19[4] = &off_1EA45A458;
    v19[0] = v9;
    v11 = type metadata accessor for ForYouFeedMastheadViewLayoutAttributesFactory();
    v12 = (_QWORD *)swift_allocObject();
    v13 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v19, v10);
    v14 = MEMORY[0x1E0C80A78](v13);
    v16 = (_QWORD *)((char *)v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v17 + 16))(v16, v14);
    v18 = *v16;
    v12[5] = v10;
    v12[6] = &off_1EA45A458;
    v12[2] = v18;
    v12[7] = MEMORY[0x1E0DEE9E0];
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
    result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
    a2[3] = v11;
    a2[4] = &off_1EA464048;
    *a2 = v12;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC30B5E0@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  id v17;
  _BYTE v19[24];
  uint64_t v20;
  _BYTE v21[24];
  uint64_t v22;
  uint64_t v23;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  result = sub_1DC402608();
  v5 = v23;
  if (!v23)
  {
    __break(1u);
    goto LABEL_7;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB282E0);
  result = sub_1DC402608();
  if (!v22)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB3EF70);
  result = sub_1DC402608();
  if (!v20)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for PremiumSealAnimationManager();
  result = sub_1DC4025FC();
  if (result)
  {
    v6 = result;
    v7 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v21, v22);
    v8 = MEMORY[0x1E0C80A78](v7);
    v10 = (uint64_t *)&v19[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
    (*(void (**)(uint64_t *, __n128))(v11 + 16))(v10, v8);
    v12 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v19, v20);
    v13 = MEMORY[0x1E0C80A78](v12);
    v15 = (uint64_t *)&v19[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
    (*(void (**)(uint64_t *, __n128))(v16 + 16))(v15, v13);
    v17 = sub_1DC30D5D8(v5, *v10, *v15, v6);
    swift_release();
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
    a2[3] = type metadata accessor for ForYouFeedMastheadViewProvider();
    result = sub_1DC080808(&qword_1EDB40E00, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedMastheadViewProvider, (uint64_t)&unk_1DC419588);
    a2[4] = result;
    *a2 = v17;
    return result;
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_1DC30B848@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t **v7;
  uint64_t v8;
  id v9;
  _BYTE v11[24];
  uint64_t v12;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB364A8);
  result = sub_1DC402608();
  if (v12)
  {
    v4 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v11, v12);
    v5 = MEMORY[0x1E0C80A78](v4);
    v7 = (uint64_t **)&v11[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
    (*(void (**)(uint64_t **, __n128))(v8 + 16))(v7, v5);
    v9 = sub_1DC30D0A4(*v7);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
    result = sub_1DC080808((unint64_t *)&unk_1EDB34BE0, (uint64_t (*)(uint64_t))type metadata accessor for QuoteDetailViewRenderer, (uint64_t)&unk_1DC41ACF0);
    *a2 = v9;
    a2[1] = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC30B948@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1DC08AE10(a1, (uint64_t (*)(_QWORD))type metadata accessor for QuoteDetailViewStyler, (uint64_t (*)(_BYTE *, uint64_t, uint64_t, uint64_t))sub_1DC0A3134, (uint64_t)&off_1EA46A710, a2);
}

uint64_t sub_1DC30B964@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[5];
  _BYTE v20[24];
  uint64_t v21;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB364A8);
  result = sub_1DC402608();
  if (v21)
  {
    v4 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v20, v21);
    v5 = MEMORY[0x1E0C80A78](v4);
    v7 = (_QWORD *)((char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v8 + 16))(v7, v5);
    v9 = *v7;
    v10 = type metadata accessor for QuoteDetailViewStyler();
    v19[3] = v10;
    v19[4] = &off_1EA46A710;
    v19[0] = v9;
    v11 = type metadata accessor for QuoteDetailViewLayoutAttributesFactory();
    v12 = swift_allocObject();
    v13 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v19, v10);
    v14 = MEMORY[0x1E0C80A78](v13);
    v16 = (_QWORD *)((char *)v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v17 + 16))(v16, v14);
    v18 = *v16;
    *(_QWORD *)(v12 + 40) = v10;
    *(_QWORD *)(v12 + 48) = &off_1EA46A710;
    *(_QWORD *)(v12 + 16) = v18;
    *(_QWORD *)(v12 + 56) = 0;
    *(_BYTE *)(v12 + 64) = 1;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
    result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
    a2[3] = v11;
    a2[4] = (uint64_t)&off_1EA464E38;
    *a2 = v12;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC30BB10@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v22[5];
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE v27[24];
  uint64_t v28;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB3A830);
  result = sub_1DC402608();
  if (!v28)
  {
    __break(1u);
    goto LABEL_6;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB38718);
  result = sub_1DC402608();
  v5 = v25;
  if (!v25)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v6 = v26;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, (unint64_t *)&unk_1EDB28C90);
  result = sub_1DC402608();
  if (v24)
  {
    v7 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v27, v28);
    v8 = MEMORY[0x1E0C80A78](v7);
    v10 = (_QWORD *)((char *)&v22[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v11 + 16))(v10, v8);
    v12 = *v10;
    v13 = type metadata accessor for StockFeedMastheadViewStyler();
    v22[3] = v13;
    v22[4] = &off_1EA46AB68;
    v22[0] = v12;
    type metadata accessor for StockFeedMastheadViewRenderer();
    v14 = (_QWORD *)swift_allocObject();
    v15 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v22, v13);
    v16 = MEMORY[0x1E0C80A78](v15);
    v18 = (_QWORD *)((char *)&v22[-1] - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v19 + 16))(v18, v16);
    v20 = *v18;
    v14[5] = v13;
    v14[6] = &off_1EA46AB68;
    v14[2] = v20;
    v14[7] = v5;
    v14[8] = v6;
    sub_1DC097DD0(&v23, (uint64_t)(v14 + 9));
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
    result = sub_1DC080808(&qword_1EDB396F8, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedMastheadViewRenderer, (uint64_t)&unk_1DC41C588);
    *a2 = v14;
    a2[1] = result;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1DC30BD7C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1DC08AE10(a1, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedMastheadViewStyler, (uint64_t (*)(_BYTE *, uint64_t, uint64_t, uint64_t))sub_1DC0A3134, (uint64_t)&off_1EA46AB68, a2);
}

uint64_t sub_1DC30BD98@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  _QWORD *v20;
  __int128 v21;
  uint64_t v22;
  _BYTE v23[24];
  uint64_t v24;
  _BYTE v25[24];
  uint64_t v26;
  _BYTE v27[24];
  uint64_t v28;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB3A830);
  result = sub_1DC402608();
  if (!v28)
  {
    __break(1u);
    goto LABEL_7;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB3E9A8);
  result = sub_1DC402608();
  if (!v26)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, (unint64_t *)&unk_1EDB36C60);
  result = sub_1DC402608();
  if (!v24)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, (unint64_t *)&unk_1EDB28C90);
  result = sub_1DC402608();
  if (v22)
  {
    v5 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v27, v28);
    v6 = MEMORY[0x1E0C80A78](v5);
    v8 = (uint64_t *)((char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v9 + 16))(v8, v6);
    v10 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v25, v26);
    v11 = MEMORY[0x1E0C80A78](v10);
    v13 = (uint64_t *)((char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v14 + 16))(v13, v11);
    v15 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v23, v24);
    v16 = MEMORY[0x1E0C80A78](v15);
    v18 = (uint64_t *)((char *)&v21 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v19 + 16))(v18, v16);
    v20 = sub_1DC30D1AC(*v8, *v13, *v18, &v21);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
    result = type metadata accessor for StockFeedMastheadViewLayoutAttributesFactory();
    a2[3] = result;
    a2[4] = &off_1EA467AF0;
    *a2 = v20;
    return result;
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_1DC30C064@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v21[5];
  uint64_t v22;
  uint64_t v23;
  _BYTE v24[24];
  uint64_t v25;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB388D8);
  result = sub_1DC402608();
  if (v25)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1DC096268(0, &qword_1EDB38718);
    result = sub_1DC402608();
    v5 = v22;
    if (v22)
    {
      v6 = v23;
      v7 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v24, v25);
      v8 = MEMORY[0x1E0C80A78](v7);
      v10 = (_QWORD *)((char *)v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, __n128))(v11 + 16))(v10, v8);
      v12 = *v10;
      v13 = type metadata accessor for StockFeedQuoteViewStyler();
      v21[3] = v13;
      v21[4] = &off_1EA45D718;
      v21[0] = v12;
      type metadata accessor for StockFeedPriceViewRenderer();
      v14 = (_QWORD *)swift_allocObject();
      v15 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v21, v13);
      v16 = MEMORY[0x1E0C80A78](v15);
      v18 = (_QWORD *)((char *)v21 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, __n128))(v19 + 16))(v18, v16);
      v20 = *v18;
      v14[5] = v13;
      v14[6] = &off_1EA45D718;
      v14[2] = v20;
      v14[7] = v5;
      v14[8] = v6;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
      result = sub_1DC080808(&qword_1EDB36E18, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedPriceViewRenderer, (uint64_t)&unk_1DC413CA4);
      *a2 = v14;
      a2[1] = result;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1DC30C274@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1DC08AE10(a1, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedQuoteViewStyler, (uint64_t (*)(_BYTE *, uint64_t, uint64_t, uint64_t))sub_1DC28928C, (uint64_t)&off_1EA45D718, a2);
}

uint64_t sub_1DC30C290@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t *boxed_opaque_existential_1;
  void (*v9)(char *, uint64_t *, uint64_t, __n128);
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33[5];
  _QWORD v34[3];
  uint64_t v35;
  uint64_t v36;
  _BYTE v37[24];
  uint64_t v38;
  _BYTE v39[24];
  uint64_t v40;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB388D8);
  result = sub_1DC402608();
  if (!v40)
  {
    __break(1u);
    goto LABEL_6;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB3E9A8);
  result = sub_1DC402608();
  if (!v38)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v32 = a2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, (unint64_t *)&unk_1EDB28C90);
  result = sub_1DC402608();
  v5 = v35;
  if (v35)
  {
    v31 = type metadata accessor for StockFeedPriceViewLayoutAttributesFactory();
    v6 = v36;
    v7 = __swift_project_boxed_opaque_existential_1(v34, v35);
    v33[3] = v5;
    v33[4] = v6;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v33);
    v9 = *(void (**)(char *, uint64_t *, uint64_t, __n128))(*(_QWORD *)(v5 - 8) + 16);
    ((void (*)(uint64_t *, _QWORD *, uint64_t))v9)(boxed_opaque_existential_1, v7, v5);
    v10 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v39, v40);
    v30 = (uint64_t)&v30;
    v11 = MEMORY[0x1E0C80A78](v10);
    v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, __n128))(v14 + 16))(v13, v11);
    v15 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v37, v38);
    v16 = MEMORY[0x1E0C80A78](v15);
    v18 = (char *)&v30 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
    v20 = (*(uint64_t (**)(char *, __n128))(v19 + 16))(v18, v16);
    v21 = MEMORY[0x1E0C80A78](v20);
    v23 = (char *)&v30 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
    v9(v23, boxed_opaque_existential_1, v5, v21);
    v24 = type metadata accessor for StockFeedQuoteViewStyler();
    v25 = type metadata accessor for QuoteSummaryViewLayoutAttributesFactory();
    v26 = (uint64_t)v13;
    v27 = v31;
    v28 = sub_1DC3FEB8C(v26, (uint64_t)v18, (uint64_t)v23, v31, v24, v5, v25, (uint64_t)&off_1EA45D718, v6, (uint64_t)&off_1EA4523A8);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v39);
    result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
    v29 = v32;
    v32[3] = v27;
    v29[4] = &off_1EA46E108;
    *v29 = v28;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1DC30C59C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  _UNKNOWN **v21;
  _QWORD v22[5];
  _BYTE v23[24];
  uint64_t v24;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB3A828);
  result = sub_1DC402608();
  if (v24)
  {
    v4 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v23, v24);
    v5 = MEMORY[0x1E0C80A78](v4);
    v7 = (uint64_t *)((char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v8 + 16))(v7, v5);
    v9 = *v7;
    v10 = type metadata accessor for StockFeedEarningsViewStyler();
    v22[3] = v10;
    v22[4] = &off_1EA44ECE8;
    v22[0] = v9;
    type metadata accessor for StockFeedEarningsViewRenderer();
    v11 = swift_allocObject();
    v12 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v22, v10);
    v13 = MEMORY[0x1E0C80A78](v12);
    v15 = (uint64_t *)((char *)&v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v16 + 16))(v15, v13);
    v17 = *v15;
    v20 = v10;
    v21 = &off_1EA44ECE8;
    *(_QWORD *)&v19 = v17;
    sub_1DC097DD0(&v19, v11 + 16);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
    result = sub_1DC080808(&qword_1EDB39648, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedEarningsViewRenderer, (uint64_t)&unk_1DC420C98);
    *a2 = v11;
    a2[1] = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC30C750@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1DC08AE10(a1, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedEarningsViewStyler, (uint64_t (*)(_BYTE *, uint64_t, uint64_t, uint64_t))sub_1DC0A3134, (uint64_t)&off_1EA44ECE8, a2);
}

uint64_t sub_1DC30C76C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v24[5];
  _BYTE v25[24];
  uint64_t v26;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB3A828);
  result = sub_1DC402608();
  if (v26)
  {
    v4 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v25, v26);
    v5 = MEMORY[0x1E0C80A78](v4);
    v7 = (_QWORD *)((char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v8 + 16))(v7, v5);
    v9 = *v7;
    v10 = type metadata accessor for StockFeedEarningsViewStyler();
    v24[3] = v10;
    v24[4] = &off_1EA44ECE8;
    v24[0] = v9;
    v11 = type metadata accessor for StockFeedEarningsViewLayoutAttributesFactory();
    v12 = swift_allocObject();
    v13 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v24, v10);
    v14 = MEMORY[0x1E0C80A78](v13);
    v16 = (_QWORD *)((char *)v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v17 + 16))(v16, v14);
    v18 = *v16;
    *(_QWORD *)(v12 + 80) = v10;
    *(_QWORD *)(v12 + 88) = &off_1EA44ECE8;
    __asm { FMOV            V1.2D, #12.0 }
    *(_OWORD *)(v12 + 16) = xmmword_1DC4271B0;
    *(_OWORD *)(v12 + 32) = _Q1;
    *(_QWORD *)(v12 + 48) = 0x4014000000000000;
    *(_QWORD *)(v12 + 56) = v18;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
    result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
    a2[3] = v11;
    a2[4] = (uint64_t)&off_1EA457730;
    *a2 = v12;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC30C918@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  _UNKNOWN **v21;
  _QWORD v22[5];
  _BYTE v23[24];
  uint64_t v24;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB3B5C0);
  result = sub_1DC402608();
  if (v24)
  {
    v4 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v23, v24);
    v5 = MEMORY[0x1E0C80A78](v4);
    v7 = (uint64_t *)((char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v8 + 16))(v7, v5);
    v9 = *v7;
    v10 = type metadata accessor for BilingualFeedPromptViewStyler();
    v22[3] = v10;
    v22[4] = &off_1EA450F18;
    v22[0] = v9;
    type metadata accessor for BilingualFeedPromptViewRenderer();
    v11 = swift_allocObject();
    v12 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v22, v10);
    v13 = MEMORY[0x1E0C80A78](v12);
    v15 = (uint64_t *)((char *)&v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v16 + 16))(v15, v13);
    v17 = *v15;
    v20 = v10;
    v21 = &off_1EA450F18;
    *(_QWORD *)&v19 = v17;
    sub_1DC097DD0(&v19, v11 + 16);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
    result = sub_1DC080808(&qword_1EDB3A388, (uint64_t (*)(uint64_t))type metadata accessor for BilingualFeedPromptViewRenderer, (uint64_t)&unk_1DC413818);
    *a2 = v11;
    a2[1] = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC30CACC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1DC08AE10(a1, (uint64_t (*)(_QWORD))type metadata accessor for BilingualFeedPromptViewStyler, (uint64_t (*)(_BYTE *, uint64_t, uint64_t, uint64_t))sub_1DC174998, (uint64_t)&off_1EA450F18, a2);
}

uint64_t sub_1DC30CAE8@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[5];
  _BYTE v20[24];
  uint64_t v21;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB3B5C0);
  result = sub_1DC402608();
  if (v21)
  {
    v4 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v20, v21);
    v5 = MEMORY[0x1E0C80A78](v4);
    v7 = (_QWORD *)((char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v8 + 16))(v7, v5);
    v9 = *v7;
    v10 = type metadata accessor for BilingualFeedPromptViewStyler();
    v19[3] = v10;
    v19[4] = &off_1EA450F18;
    v19[0] = v9;
    v11 = type metadata accessor for BilingualFeedPromptViewLayoutAttributesFactory();
    v12 = (_QWORD *)swift_allocObject();
    v13 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v19, v10);
    v14 = MEMORY[0x1E0C80A78](v13);
    v16 = (_QWORD *)((char *)v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v17 + 16))(v16, v14);
    v18 = *v16;
    v12[5] = v10;
    v12[6] = &off_1EA450F18;
    v12[2] = v18;
    sub_1DC30D3C0();
    swift_allocObject();
    v12[7] = sub_1DC402C14();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
    result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
    a2[3] = v11;
    a2[4] = &off_1EA452988;
    *a2 = v12;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC30CCA0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  _UNKNOWN **v21;
  _QWORD v22[5];
  _BYTE v23[24];
  uint64_t v24;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB37450);
  result = sub_1DC402608();
  if (v24)
  {
    v4 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v23, v24);
    v5 = MEMORY[0x1E0C80A78](v4);
    v7 = (uint64_t *)((char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v8 + 16))(v7, v5);
    v9 = *v7;
    v10 = type metadata accessor for BrandingTitleViewStyler();
    v22[3] = v10;
    v22[4] = &off_1EA461EE8;
    v22[0] = v9;
    type metadata accessor for BrandingTitleViewRenderer();
    v11 = swift_allocObject();
    v12 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v22, v10);
    v13 = MEMORY[0x1E0C80A78](v12);
    v15 = (uint64_t *)((char *)&v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v16 + 16))(v15, v13);
    v17 = *v15;
    v20 = v10;
    v21 = &off_1EA461EE8;
    *(_QWORD *)&v19 = v17;
    sub_1DC097DD0(&v19, v11 + 16);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
    result = sub_1DC080808(&qword_1EDB35EB8, (uint64_t (*)(uint64_t))type metadata accessor for BrandingTitleViewRenderer, (uint64_t)&unk_1DC42A084);
    *a2 = v11;
    a2[1] = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC30CE54@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1DC09D6D8(a1, (uint64_t (*)(_QWORD))type metadata accessor for BrandingTitleViewStyler, (uint64_t (*)(char *, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1DC10F4FC, (uint64_t)&off_1EA461EE8, a2);
}

uint64_t sub_1DC30CE70@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[5];
  _BYTE v20[24];
  uint64_t v21;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB37450);
  result = sub_1DC402608();
  if (v21)
  {
    v4 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v20, v21);
    v5 = MEMORY[0x1E0C80A78](v4);
    v7 = (_QWORD *)((char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v8 + 16))(v7, v5);
    v9 = *v7;
    v10 = type metadata accessor for BrandingTitleViewStyler();
    v19[3] = v10;
    v19[4] = &off_1EA461EE8;
    v19[0] = v9;
    v11 = type metadata accessor for BrandingTitleViewLayoutAttributesFactory();
    v12 = (_QWORD *)swift_allocObject();
    v13 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v19, v10);
    v14 = MEMORY[0x1E0C80A78](v13);
    v16 = (_QWORD *)((char *)v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v17 + 16))(v16, v14);
    v18 = *v16;
    v12[5] = v10;
    v12[6] = &off_1EA461EE8;
    v12[2] = v18;
    v12[7] = MEMORY[0x1E0DEE9E0];
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
    result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
    a2[3] = v11;
    a2[4] = &off_1EA45AE08;
    *a2 = v12;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC30D014@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1DC0851D8(a1, a2);
}

uint64_t sub_1DC30D030@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t result;

  v2 = sub_1DC408248();
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D5EDF8];
  swift_allocObject();
  v4 = sub_1DC40823C();
  a1[3] = v2;
  result = sub_1DC080808(&qword_1F0351AE8, v3, MEMORY[0x1E0D5EDE8]);
  a1[4] = result;
  *a1 = v4;
  return result;
}

id sub_1DC30D0A4(uint64_t *a1)
{
  uint64_t v1;
  objc_class *v2;
  char *v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  objc_super v13;
  _QWORD v14[5];
  _QWORD v15[3];
  uint64_t v16;
  _UNKNOWN **v17;

  v16 = *a1;
  v1 = v16;
  v17 = &off_1EA46A710;
  v15[0] = a1;
  v2 = (objc_class *)type metadata accessor for QuoteDetailViewRenderer();
  v3 = (char *)objc_allocWithZone(v2);
  v4 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v15, v16);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (uint64_t *)((char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v8 + 16))(v7, v5);
  v9 = *v7;
  v14[3] = v1;
  v14[4] = &off_1EA46A710;
  v14[0] = v9;
  v10 = &v3[OBJC_IVAR____TtC8StocksUI23QuoteDetailViewRenderer_lastKnownContentOffset];
  *(_QWORD *)v10 = 0;
  *((_QWORD *)v10 + 1) = 0;
  v10[16] = 1;
  sub_1DC0824D4((uint64_t)v14, (uint64_t)&v3[OBJC_IVAR____TtC8StocksUI23QuoteDetailViewRenderer_styler]);
  v13.receiver = v3;
  v13.super_class = v2;
  v11 = objc_msgSendSuper2(&v13, sel_init);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
  return v11;
}

_QWORD *sub_1DC30D1AC(uint64_t a1, uint64_t a2, uint64_t a3, __int128 *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v32[3];
  uint64_t v33;
  _UNKNOWN **v34;
  _QWORD v35[3];
  uint64_t v36;
  _UNKNOWN **v37;
  _QWORD v38[5];

  v8 = type metadata accessor for StockFeedMastheadViewStyler();
  v38[3] = v8;
  v38[4] = &off_1EA46AB68;
  v38[0] = a1;
  v9 = type metadata accessor for QuoteSummaryViewLayoutAttributesFactory();
  v36 = v9;
  v37 = &off_1EA4523A8;
  v35[0] = a2;
  v10 = type metadata accessor for MastheadMetricsFactory();
  v33 = v10;
  v34 = &off_1EA46B190;
  v32[0] = a3;
  type metadata accessor for StockFeedMastheadViewLayoutAttributesFactory();
  v11 = (_QWORD *)swift_allocObject();
  v12 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v38, v8);
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = (_QWORD *)((char *)&v32[-1] - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v16 + 16))(v15, v13);
  v17 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v35, v36);
  v18 = MEMORY[0x1E0C80A78](v17);
  v20 = (_QWORD *)((char *)&v32[-1] - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v21 + 16))(v20, v18);
  v22 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v32, v33);
  v23 = MEMORY[0x1E0C80A78](v22);
  v25 = (_QWORD *)((char *)&v32[-1] - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v26 + 16))(v25, v23);
  v27 = *v15;
  v28 = *v20;
  v29 = *v25;
  v11[5] = v8;
  v11[6] = &off_1EA46AB68;
  v11[2] = v27;
  v11[10] = v9;
  v11[11] = &off_1EA4523A8;
  v11[12] = v29;
  v11[7] = v28;
  v11[15] = v10;
  v11[16] = &off_1EA46B190;
  v11[22] = MEMORY[0x1E0DEE9E0];
  sub_1DC097DD0(a4, (uint64_t)(v11 + 17));
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
  return v11;
}

void sub_1DC30D3C0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB29618)
  {
    v0 = sub_1DC402C20();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB29618);
  }
}

uint64_t sub_1DC30D424()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocObject();
}

id sub_1DC30D448(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char *a5)
{
  objc_class *ObjectType;
  uint64_t v11;
  id v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  objc_super v19;
  _QWORD v20[5];
  _QWORD v21[5];

  ObjectType = (objc_class *)swift_getObjectType();
  v21[3] = type metadata accessor for ForYouFeedMastheadViewRenderer();
  v21[4] = &off_1EA44E0E8;
  v21[0] = a2;
  v20[3] = type metadata accessor for ForYouFeedMastheadViewLayoutAttributesFactory();
  v20[4] = &off_1EA464048;
  v20[0] = a3;
  v11 = OBJC_IVAR____TtC8StocksUI30ForYouFeedMastheadViewProvider_mastheadView;
  v12 = objc_allocWithZone((Class)type metadata accessor for ForYouFeedMastheadView());
  v13 = a5;
  *(_QWORD *)&a5[v11] = objc_msgSend(v12, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v14 = &v13[OBJC_IVAR____TtC8StocksUI30ForYouFeedMastheadViewProvider_margins];
  *(_QWORD *)&v13[OBJC_IVAR____TtC8StocksUI30ForYouFeedMastheadViewProvider_margins] = 0x408EF00000000000;
  v15 = *MEMORY[0x1E0DB93C0];
  v16 = sub_1DC4051E8();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v14, v15, v16);
  *(_QWORD *)&v13[OBJC_IVAR____TtC8StocksUI30ForYouFeedMastheadViewProvider_model] = a1;
  sub_1DC0824D4((uint64_t)v21, (uint64_t)&v13[OBJC_IVAR____TtC8StocksUI30ForYouFeedMastheadViewProvider_renderer]);
  sub_1DC0824D4((uint64_t)v20, (uint64_t)&v13[OBJC_IVAR____TtC8StocksUI30ForYouFeedMastheadViewProvider_layoutAttributesFactory]);
  *(_QWORD *)&v13[OBJC_IVAR____TtC8StocksUI30ForYouFeedMastheadViewProvider_animationManager] = a4;
  swift_retain();
  swift_retain();

  v19.receiver = v13;
  v19.super_class = ObjectType;
  v17 = objc_msgSendSuper2(&v19, sel_init);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
  return v17;
}

id sub_1DC30D5D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  id v19;
  _QWORD v21[3];
  uint64_t v22;
  _UNKNOWN **v23;
  _QWORD v24[3];
  uint64_t v25;
  _UNKNOWN **v26;

  v25 = type metadata accessor for ForYouFeedMastheadViewRenderer();
  v26 = &off_1EA44E0E8;
  v24[0] = a2;
  v22 = type metadata accessor for ForYouFeedMastheadViewLayoutAttributesFactory();
  v23 = &off_1EA464048;
  v21[0] = a3;
  v8 = (char *)objc_allocWithZone((Class)type metadata accessor for ForYouFeedMastheadViewProvider());
  v9 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v24, v25);
  v10 = MEMORY[0x1E0C80A78](v9);
  v12 = (_QWORD *)((char *)v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v13 + 16))(v12, v10);
  v14 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v21, v22);
  v15 = MEMORY[0x1E0C80A78](v14);
  v17 = (_QWORD *)((char *)v21 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v18 + 16))(v17, v15);
  v19 = sub_1DC30D448(a1, *v12, *v17, a4, v8);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
  return v19;
}

uint64_t sub_1DC30D728(_QWORD *a1)
{
  void (*v2)(_QWORD *);
  _BYTE v4[24];
  uint64_t v5;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for ManageWatchlistsContentMode(0);
  sub_1DC402518();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC143F58();
  sub_1DC406844();
  if (v5)
  {
    sub_1DC4018AC();
    swift_dynamicCast();
  }
  else
  {
    sub_1DC0926D8((uint64_t)v4, (uint64_t (*)(_QWORD))sub_1DC0D11C4);
  }
  sub_1DC4018AC();
  sub_1DC4024DC();
  swift_release();
  v2 = (void (*)(_QWORD *))sub_1DC40682C();
  v2(a1);
  return swift_release();
}

uint64_t sub_1DC30D870(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t result;
  void *v31;
  id v32;
  void *v33;
  void *v34;
  id v35;
  void *v36;
  void *v37;
  id v38;
  id v39;
  double v40;
  double v41;
  void *v42;
  void *v43;
  double v44;
  double v45;
  double v46;
  double v47;
  double v48;
  double v49;
  double v50;
  double v51;
  id v52;
  id v53;
  double v54;
  double v55;
  double v56;
  double v57;
  double v58;
  double v59;
  double v60;
  double v61;
  void *v62;
  id v63;
  id v64;
  id v65;
  id v66;
  _QWORD v67[3];
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  __int128 v73;
  uint64_t v74;
  char v75;
  _QWORD v76[5];
  char v77[16];
  double v78;
  double v79;
  char v80[40];
  _QWORD v81[4];
  char v82;

  v67[0] = a3;
  v68 = a1;
  sub_1DC143F58();
  v71 = v4;
  v70 = *(_QWORD *)(v4 - 8);
  v5 = *(_QWORD *)(v70 + 64);
  MEMORY[0x1E0C80A78](v4);
  v69 = (char *)v67 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC092F50(0, (unint64_t *)&qword_1EDB28DE0, (void (*)(uint64_t))MEMORY[0x1E0DAF0D0]);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v67 - v7;
  v9 = sub_1DC4010E4();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v67 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for ManageWatchlistsContentMode(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(_QWORD *)(v14 + 64);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)v67 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)v67 - v18;
  sub_1DC1338B8(a2, (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_1DC133864((uint64_t)v8);
    sub_1DC15C2FC();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v19, 1, 1, v20);
  }
  else
  {
    v21 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
    v21(v12, v8, v9);
    v21(v19, v12, v9);
    sub_1DC15C2FC();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v19, 0, 1, v22);
  }
  v23 = v72[5];
  v67[2] = v72[6];
  v67[1] = __swift_project_boxed_opaque_existential_1(v72 + 2, v23);
  sub_1DC30DECC();
  sub_1DC173D68((uint64_t)v19, (uint64_t)v16);
  v24 = v70;
  v25 = v69;
  v26 = v71;
  (*(void (**)(char *, uint64_t, uint64_t))(v70 + 16))(v69, v68, v71);
  v27 = (*(unsigned __int8 *)(v14 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v28 = (v15 + *(unsigned __int8 *)(v24 + 80) + v27) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
  v29 = swift_allocObject();
  sub_1DC173658((uint64_t)v16, v29 + v27);
  (*(void (**)(unint64_t, char *, uint64_t))(v24 + 32))(v29 + v28, v25, v26);
  sub_1DC4025F0();
  result = swift_release();
  if (!v74)
  {
    __break(1u);
    goto LABEL_30;
  }
  sub_1DC097DD0(&v73, (uint64_t)v76);
  __swift_project_boxed_opaque_existential_1(v76, v76[3]);
  v31 = (void *)sub_1DC1BA434((uint64_t)v19);
  v32 = objc_msgSend(objc_allocWithZone((Class)sub_1DC404F78()), sel_initWithRootViewController_, v31);

  if (!v67[0])
  {
LABEL_20:
    v52 = 0;
    goto LABEL_21;
  }
  swift_retain();
  v33 = (void *)sub_1DC405404();
  if (!v33)
  {
LABEL_19:
    swift_release();
    goto LABEL_20;
  }
  v34 = v33;
  v35 = objc_msgSend(v33, sel_nextResponder);
  if (!v35)
    goto LABEL_18;
  v36 = v35;
  while (1)
  {
    objc_opt_self();
    v37 = (void *)swift_dynamicCastObjCClass();
    if (v37)
      break;
    v38 = objc_msgSend(v36, sel_nextResponder);

    v36 = v38;
    if (!v38)
      goto LABEL_18;
  }
  v39 = objc_msgSend(v37, sel_view);

  if (!v39)
  {
LABEL_18:

    goto LABEL_19;
  }
  sub_1DC4053F8();
  v41 = v78;
  v40 = v79;
  sub_1DC0E71D0((uint64_t)v77, (uint64_t)&v73);
  if ((v75 & 1) != 0 || v41 == 0.0 && v40 == 0.0)
  {
    v42 = (void *)sub_1DC405404();
    if (v42)
    {
      v43 = v42;
      objc_msgSend(v42, sel_bounds);
      v45 = v44;
      v47 = v46;
      v49 = v48;
      v51 = v50;

    }
    else
    {
      v45 = 0.0;
      v47 = 0.0;
      v49 = 0.0;
      v51 = 0.0;
    }
    goto LABEL_26;
  }
  sub_1DC4053F8();
  result = sub_1DC0E71D0((uint64_t)v80, (uint64_t)v81);
  if ((v82 & 1) == 0)
  {
    v45 = *(double *)v81;
    v47 = *(double *)&v81[1];
    v49 = *(double *)&v81[2];
    v51 = *(double *)&v81[3];
LABEL_26:
    v53 = v34;
    objc_msgSend(v39, sel_convertRect_fromCoordinateSpace_, v53, v45, v47, v49, v51);
    v55 = v54;
    v57 = v56;
    v59 = v58;
    v61 = v60;

    swift_release();
    v62 = (void *)v72[7];
    v52 = v39;
    v63 = objc_msgSend(v62, sel_traitCollection);
    v64 = objc_msgSend(v63, sel_horizontalSizeClass);

    if (v64 != (id)1)
    {
      objc_msgSend(v32, sel_setModalPresentationStyle_, 7);
      objc_msgSend(v32, sel_setPreferredContentSize_, 376.0, 390.0);
      v65 = objc_msgSend(v32, sel_popoverPresentationController);
      objc_msgSend(v65, sel_setSourceView_, v52);

      v66 = objc_msgSend(v32, sel_popoverPresentationController);
      objc_msgSend(v66, sel_setSourceRect_, v55, v57, v59, v61);

      v52 = v66;
      goto LABEL_22;
    }

LABEL_21:
    objc_msgSend(v32, sel_setModalPresentationStyle_, 2, v67[0]);
LABEL_22:

    sub_1DC0926D8((uint64_t)v19, type metadata accessor for ManageWatchlistsContentMode);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v76);
    return (uint64_t)v32;
  }
LABEL_30:
  __break(1u);
  return result;
}

unint64_t sub_1DC30DECC()
{
  unint64_t result;

  result = qword_1EDB36C58;
  if (!qword_1EDB36C58)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EDB36C58);
  }
  return result;
}

uint64_t sub_1DC30DF20()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = *(_QWORD *)(type metadata accessor for ManageWatchlistsContentMode(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);
  sub_1DC143F58();
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  sub_1DC15C2FC();
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v0 + v2, 1, v8))
  {
    v9 = sub_1DC4010E4();
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v0 + v2, v9);
  }
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + ((v2 + v3 + v7) & ~v7), v5);
  return swift_deallocObject();
}

uint64_t sub_1DC30E004(_QWORD *a1)
{
  type metadata accessor for ManageWatchlistsContentMode(0);
  sub_1DC143F58();
  return sub_1DC30D728(a1);
}

uint64_t *sub_1DC30E06C@<X0>(uint64_t *result@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;

  v2 = *result;
  if ((unint64_t)*result >= 3)
    LOBYTE(v2) = 3;
  *a2 = v2;
  return result;
}

BOOL sub_1DC30E084(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 < *a2;
}

BOOL sub_1DC30E098(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a2 >= *a1;
}

BOOL sub_1DC30E0AC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 >= *a2;
}

BOOL sub_1DC30E0C0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a2 < *a1;
}

uint64_t sub_1DC30E0DC()
{
  uint64_t v0;
  int v1;
  char v2;

  v1 = *(unsigned __int8 *)(v0 + 273);
  if (v1 == 2)
  {
    v2 = _s11TeaSettings0B0C8StocksUIE7WelcomeV7VersionV14isBrandNewUserSbvgZ_0();
    *(_BYTE *)(v0 + 273) = v2 & 1;
  }
  else
  {
    v2 = v1 & 1;
  }
  return v2 & 1;
}

uint64_t sub_1DC30E110(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  unint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD aBlock[6];

  v4 = sub_1DC40724C();
  v21 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1DC407270();
  v19 = *(_QWORD *)(v7 - 8);
  v20 = v7;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC3126DC();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  MEMORY[0x1E0C80A78](v10);
  sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3F8D0);
  v13 = (void *)sub_1DC409148();
  sub_1DC312734(a1, (uint64_t)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = (*(unsigned __int8 *)(v11 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = a2;
  sub_1DC312814((uint64_t)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v15 + v14);
  aBlock[4] = sub_1DC312858;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1DC081B88;
  aBlock[3] = &block_descriptor_34;
  v16 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  sub_1DC407264();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  sub_1DC081B48(&qword_1EDB275A0, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  sub_1DC1130A0(0);
  sub_1DC081B48((unint64_t *)&qword_1EDB3F720, 255, (uint64_t (*)(uint64_t))sub_1DC1130A0, MEMORY[0x1E0DEAF38]);
  sub_1DC40964C();
  MEMORY[0x1DF0C99C8](0, v9, v6, v16);
  _Block_release(v16);

  (*(void (**)(char *, uint64_t))(v21 + 8))(v6, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v9, v20);
}

_QWORD *sub_1DC30E388(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _QWORD *result;
  _QWORD *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  id v24;
  char v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57[7];
  char v58;
  uint64_t v59;
  char v60;
  void *v61;

  v3 = sub_1DC407EAC();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC312888();
  v8 = v7;
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = (_QWORD *)swift_weakLoadStrong();
  if (result)
  {
    v12 = result;
    v13 = (void *)result[25];
    if (!v13)
      return (_QWORD *)swift_release();
    v44 = a2;
    v43 = v6;
    v14 = result[24];
    v15 = result[26];
    v16 = result[27];
    v17 = result[28];
    v18 = result[29];
    v20 = result[30];
    v19 = result[31];
    v21 = result[32];
    v22 = (void *)result[33];
    v57[0] = result[23];
    v57[1] = v14;
    v57[2] = (uint64_t)v13;
    v57[3] = v15;
    v57[4] = v16;
    v57[5] = v17;
    v57[6] = v18;
    v58 = v20 & 1;
    v59 = v19;
    v60 = v21;
    v61 = v22;
    v23 = (void *)result[20];
    v45 = v22;
    v46 = v21;
    v47 = v19;
    v48 = v57[0];
    v49 = v14;
    v52 = v17;
    v53 = v13;
    v50 = v15;
    v51 = v16;
    v54 = v18;
    sub_1DC3128EC(v57[0], v14, v13, v15, v16, v17, v18, v20, v19, v21, v22);
    v24 = v23;
    v25 = sub_1DC407F00();

    v26 = 0x656E696C6E4FLL;
    if ((v25 & 1) != 0)
      v26 = 0x656E696C66664FLL;
    v42 = v26;
    if ((v25 & 1) != 0)
      v27 = 0xE700000000000000;
    else
      v27 = 0xE600000000000000;
    if (qword_1EDB42200 != -1)
      swift_once();
    v28 = sub_1DC403F64();
    __swift_project_value_buffer(v28, (uint64_t)qword_1EDB5E250);
    swift_retain_n();
    swift_bridgeObjectRetain();
    v29 = sub_1DC403F4C();
    v30 = sub_1DC408FE0();
    if (os_log_type_enabled(v29, v30))
    {
      v31 = swift_slowAlloc();
      v41 = v20;
      v32 = v31;
      v40 = swift_slowAlloc();
      v56 = v40;
      *(_DWORD *)v32 = 136315394;
      swift_bridgeObjectRetain();
      v55 = sub_1DC2A9C74(v42, v27, &v56);
      sub_1DC4095B0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v32 + 12) = 2080;
      sub_1DC402740();
      v55 = sub_1DC2A9C74(*(_QWORD *)&aStart_0[8 * (char)v55], 0xE500000000000000, &v56);
      sub_1DC4095B0();
      swift_release_n();
      swift_bridgeObjectRelease();
      v33 = v40;
      swift_arrayDestroy();
      MEMORY[0x1DF0CAC88](v33, -1, -1);
      v34 = v32;
      v20 = v41;
      MEMORY[0x1DF0CAC88](v34, -1, -1);

    }
    else
    {

      swift_release_n();
      swift_bridgeObjectRelease_n();
    }
    sub_1DC402740();
    v35 = v56;
    v36 = *(int *)(v8 + 48);
    sub_1DC312734(v44, (uint64_t)v10);
    v10[v36] = v35;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v10, 1, v3) == 1)
    {
      v37 = v12[2];
      v38 = *(void **)(v37 + OBJC_IVAR____TtC8StocksUI11WelcomeView_errorView);
      *(_QWORD *)(v37 + OBJC_IVAR____TtC8StocksUI11WelcomeView_errorView) = 0;
      sub_1DC299708(v38);

      objc_msgSend(*(id *)(v37 + OBJC_IVAR____TtC8StocksUI11WelcomeView_activityIndicator), sel_setHidden_, 0);
      *((_BYTE *)v12 + 272) = 0;
      if (v35 == 1)
        sub_1DC30E8D4((uint64_t)v57);
      sub_1DC31291C(v48, v49, v53, v50, v51, v52, v54, v20, v47, v46, v45);
      return (_QWORD *)swift_release();
    }
    v39 = (uint64_t)v43;
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v43, v10, v3);
    sub_1DC30ED20(v39, (double *)v57);
    sub_1DC31291C(v48, v49, v53, v50, v51, v52, v54, v20, v47, v46, v45);
    swift_release();
    return (_QWORD *)(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v39, v3);
  }
  return result;
}

uint64_t sub_1DC30E8D4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  void *v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;

  v2 = v1;
  if (qword_1EDB42200 != -1)
    swift_once();
  v4 = sub_1DC403F64();
  __swift_project_value_buffer(v4, (uint64_t)qword_1EDB5E250);
  v5 = sub_1DC403F4C();
  v6 = sub_1DC408FE0();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v7 = 0;
    _os_log_impl(&dword_1DC07D000, v5, v6, "Starting welcome animation.", v7, 2u);
    MEMORY[0x1DF0CAC88](v7, -1, -1);
  }

  type metadata accessor for WelcomeViewAnimator.Canceler();
  v8 = swift_allocObject();
  *(_BYTE *)(v8 + 16) = 0;
  swift_beginAccess();
  v9 = swift_retain();
  MEMORY[0x1DF0C9530](v9);
  if (*(_QWORD *)((*(_QWORD *)(v2 + 176) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)(v2 + 176) & 0xFFFFFFFFFFFFFF8)
                                                                                      + 0x18) >> 1)
    sub_1DC408D4C();
  sub_1DC408D64();
  sub_1DC408CF8();
  v10 = swift_endAccess();
  MEMORY[0x1E0C80A78](v10);
  sub_1DC402E0C();
  sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3F8D0);
  v11 = (void *)sub_1DC409148();
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = sub_1DC312964;
  *(_QWORD *)(v12 + 24) = v2;
  swift_retain();
  sub_1DC402CF8();
  swift_release();

  swift_release();
  v13 = (void *)sub_1DC409148();
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = sub_1DC3129C0;
  *(_QWORD *)(v14 + 24) = v2;
  swift_retain();
  sub_1DC402CF8();
  swift_release();

  swift_release();
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = sub_1DC3129C8;
  *(_QWORD *)(v15 + 24) = v2;
  swift_retain();
  v16 = (void *)sub_1DC402C80();
  sub_1DC402CF8();
  swift_release();
  swift_release();

  v17 = (void *)sub_1DC409148();
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = v2;
  *(_QWORD *)(v18 + 24) = v8;
  v19 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v18 + 64) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v18 + 80) = v19;
  *(_OWORD *)(v18 + 96) = *(_OWORD *)(a1 + 64);
  *(_QWORD *)(v18 + 112) = *(_QWORD *)(a1 + 80);
  v20 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v18 + 32) = *(_OWORD *)a1;
  *(_OWORD *)(v18 + 48) = v20;
  swift_retain();
  swift_retain();
  sub_1DC312A6C(a1);
  sub_1DC402D04();
  swift_release();

  swift_release();
  v21 = (void *)sub_1DC409148();
  v22 = swift_allocObject();
  *(_QWORD *)(v22 + 16) = v2;
  v23 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v22 + 56) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v22 + 72) = v23;
  *(_OWORD *)(v22 + 88) = *(_OWORD *)(a1 + 64);
  *(_QWORD *)(v22 + 104) = *(_QWORD *)(a1 + 80);
  v24 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v22 + 24) = *(_OWORD *)a1;
  *(_OWORD *)(v22 + 40) = v24;
  swift_retain();
  sub_1DC312A6C(a1);
  sub_1DC402D34();
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

void sub_1DC30ED20(uint64_t a1, double *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t);
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t);
  uint64_t v27;
  double *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v3 = v2;
  v6 = sub_1DC407EAC();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v27 - v11;
  if (qword_1EDB42200 != -1)
    swift_once();
  v13 = sub_1DC403F64();
  __swift_project_value_buffer(v13, (uint64_t)qword_1EDB5E250);
  v14 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v14(v12, a1, v6);
  v30 = a1;
  v14(v9, a1, v6);
  v15 = sub_1DC403F4C();
  v16 = sub_1DC408FE0();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = swift_slowAlloc();
    v28 = a2;
    v18 = v17;
    v27 = swift_slowAlloc();
    v32 = v27;
    *(_DWORD *)v18 = 136315394;
    v29 = v2;
    v19 = sub_1DC407E64();
    v31 = sub_1DC2A9C74(v19, v20, &v32);
    sub_1DC4095B0();
    swift_bridgeObjectRelease();
    v21 = *(void (**)(char *, uint64_t))(v7 + 8);
    v21(v12, v6);
    *(_WORD *)(v18 + 12) = 2080;
    v22 = _s8StocksUI16OfflineAlertableV5titleSSSgvg_0();
    v31 = sub_1DC2A9C74(v22, v23, &v32);
    v3 = v29;
    sub_1DC4095B0();
    swift_bridgeObjectRelease();
    v21(v9, v6);
    _os_log_impl(&dword_1DC07D000, v15, v16, "Rendering error view for model %s (%s", (uint8_t *)v18, 0x16u);
    v24 = v27;
    swift_arrayDestroy();
    MEMORY[0x1DF0CAC88](v24, -1, -1);
    v25 = v18;
    a2 = v28;
    MEMORY[0x1DF0CAC88](v25, -1, -1);
  }
  else
  {
    v26 = *(void (**)(char *, uint64_t))(v7 + 8);
    v26(v12, v6);
    v26(v9, v6);
  }

  __swift_project_boxed_opaque_existential_1((_QWORD *)(v3 + 72), *(_QWORD *)(v3 + 96));
  sub_1DC16E78C(v30, a2, *(char **)(v3 + 16));
  *(_BYTE *)(v3 + 272) = 1;
}

_QWORD *sub_1DC30EFD0(double *a1)
{
  uint64_t v1;
  uint64_t v2;
  double v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t i;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t j;
  uint64_t v24;
  void *v25;
  id v26;
  id v27;
  double v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  id v39;
  NSObject *v40;
  os_log_type_t v41;
  uint8_t *v42;
  _QWORD *result;
  NSObject *v44;
  os_log_type_t v45;
  uint8_t *v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  id v52;
  char v53;
  id v54[21];
  _BYTE v55[784];
  _QWORD v56[7];
  char v57;
  double v58;
  char v59;
  void *v60;

  v2 = v1;
  v3 = *a1;
  v4 = *((_QWORD *)a1 + 1);
  v5 = (void *)*((_QWORD *)a1 + 2);
  v6 = *((_QWORD *)a1 + 3);
  v7 = *((_QWORD *)a1 + 4);
  v8 = (_QWORD *)(v1 + 168);
  v10 = *((_QWORD *)a1 + 5);
  v9 = *((_QWORD *)a1 + 6);
  swift_beginAccess();
  v11 = *(_QWORD *)(v2 + 168);
  if (v11 >> 62)
  {
    swift_bridgeObjectRetain();
    v12 = sub_1DC409850();
    if (!v12)
      goto LABEL_10;
  }
  else
  {
    v12 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v12)
      goto LABEL_10;
  }
  if (v12 < 1)
  {
    __break(1u);
    goto LABEL_42;
  }
  for (i = 0; i != v12; ++i)
  {
    if ((v11 & 0xC000000000000001) != 0)
      v14 = (id)MEMORY[0x1DF0C9FBC](i, v11);
    else
      v14 = *(id *)(v11 + 8 * i + 32);
    v15 = v14;
    objc_msgSend(v14, sel_stopAnimation_, 1);

  }
LABEL_10:
  swift_bridgeObjectRelease();
  v16 = MEMORY[0x1E0DEE9D8];
  *v8 = MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRelease();
  if (qword_1EDB42200 != -1)
    swift_once();
  v17 = sub_1DC403F64();
  __swift_project_value_buffer(v17, (uint64_t)qword_1EDB5E250);
  v18 = sub_1DC403F4C();
  v19 = sub_1DC408FE0();
  if (os_log_type_enabled(v18, v19))
  {
    v20 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v20 = 0;
    _os_log_impl(&dword_1DC07D000, v18, v19, "Cancelling all outstanding cancelers.", v20, 2u);
    MEMORY[0x1DF0CAC88](v20, -1, -1);
  }

  swift_beginAccess();
  v21 = *(_QWORD *)(v2 + 176);
  if (v21 >> 62)
  {
    swift_bridgeObjectRetain();
    v22 = sub_1DC409850();
    if (!v22)
      goto LABEL_23;
  }
  else
  {
    v22 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v22)
      goto LABEL_23;
  }
  if (v22 < 1)
  {
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  for (j = 0; j != v22; ++j)
  {
    if ((v21 & 0xC000000000000001) != 0)
      v24 = MEMORY[0x1DF0C9FBC](j, v21);
    else
      v24 = swift_retain();
    *(_BYTE *)(v24 + 16) = 1;
    swift_release();
  }
LABEL_23:
  swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 176) = v16;
  swift_bridgeObjectRelease();
  v25 = (void *)*((_QWORD *)a1 + 2);
  v26 = objc_msgSend(v25, sel_horizontalSizeClass);
  v27 = objc_msgSend(v25, sel_verticalSizeClass);
  if ((unint64_t)v26 < 2)
    goto LABEL_24;
  if (v26 != (id)2)
  {
LABEL_43:
    result = (_QWORD *)sub_1DC409838();
    __break(1u);
    return result;
  }
  if (v27 == (id)2)
  {
    v29 = 0;
    v28 = (a1[1] + -768.0) * 0.00390625;
    goto LABEL_25;
  }
LABEL_24:
  v28 = (a1[1] + -568.0) / 244.0;
  v29 = 1;
LABEL_25:
  v50 = v29;
  sub_1DC198D28((uint64_t)a1);
  sub_1DC402740();
  v30 = v55[0];
  *(double *)v56 = v3;
  v56[1] = v4;
  v56[2] = v5;
  v56[3] = v6;
  v56[4] = v7;
  v56[5] = v10;
  v56[6] = v9;
  v57 = v29;
  v58 = v28;
  v59 = v55[0];
  v60 = v25;
  v31 = v29;
  v32 = *(_QWORD *)(v2 + 192);
  v33 = *(void **)(v2 + 200);
  v48 = *(_QWORD *)(v2 + 208);
  v49 = *(_QWORD *)(v2 + 184);
  v34 = *(_QWORD *)(v2 + 216);
  v35 = *(_QWORD *)(v2 + 224);
  v37 = *(_QWORD *)(v2 + 232);
  v36 = *(_QWORD *)(v2 + 240);
  v47 = *(_OWORD *)(v2 + 248);
  v38 = *(void **)(v2 + 264);
  *(double *)(v2 + 184) = v3;
  *(_QWORD *)(v2 + 192) = v4;
  *(_QWORD *)(v2 + 200) = v5;
  *(_QWORD *)(v2 + 208) = v6;
  *(_QWORD *)(v2 + 216) = v7;
  *(_QWORD *)(v2 + 224) = v10;
  *(_QWORD *)(v2 + 232) = v9;
  *(_QWORD *)(v2 + 240) = v31;
  *(double *)(v2 + 248) = v28;
  *(_QWORD *)(v2 + 256) = v30;
  *(_QWORD *)(v2 + 264) = v25;
  sub_1DC198D28((uint64_t)a1);
  v52 = v5;
  v39 = v25;
  sub_1DC31291C(v49, v32, v33, v48, v34, v35, v37, v36, v47, *((uint64_t *)&v47 + 1), v38);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 56));
  sub_1DC28BE54((uint64_t)v54);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v2 + 112), *(_QWORD *)(v2 + 136));
  sub_1DC196ED8(v54, (uint64_t)v56, v55);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v2 + 72), *(_QWORD *)(v2 + 96));
  sub_1DC16CD34(v54, v50, (uint64_t)v55, *(char **)(v2 + 16));
  swift_retain();
  v40 = sub_1DC403F4C();
  v41 = sub_1DC408FE0();
  if (os_log_type_enabled(v40, v41))
  {
    v42 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v42 = 134217984;
    sub_1DC402740();
    sub_1DC4095B0();
    swift_release();
    _os_log_impl(&dword_1DC07D000, v40, v41, "Rendering for key frame %ld", v42, 0xCu);
    MEMORY[0x1DF0CAC88](v42, -1, -1);

  }
  else
  {

    swift_release();
  }
  sub_1DC402740();
  if (v53)
  {
    if (v53 == 1)
    {
      if ((sub_1DC407F00() & 1) != 0 || *(_BYTE *)(v2 + 272) == 1)
      {
        sub_1DC30F660((uint64_t)v56);
      }
      else
      {
        v44 = sub_1DC403F4C();
        v45 = sub_1DC408FE0();
        if (os_log_type_enabled(v44, v45))
        {
          v46 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v46 = 0;
          _os_log_impl(&dword_1DC07D000, v44, v45, "Did reveal Page 1.", v46, 2u);
          MEMORY[0x1DF0CAC88](v46, -1, -1);
        }

        sub_1DC310A70((uint64_t)v56, v54);
        UIAccessibilityPostNotification(*MEMORY[0x1E0DC45C0], 0);
      }
    }
  }
  else
  {
    sub_1DC30E8D4((uint64_t)v56);
  }

  sub_1DC312C34((uint64_t)v55);
  return sub_1DC28CD60(v54);
}

uint64_t sub_1DC30F660(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  void *v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  void *v19;
  uint64_t v21;
  uint64_t v22;
  _QWORD aBlock[6];

  v2 = v1;
  v4 = sub_1DC40724C();
  v22 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1DC407270();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EDB42200 != -1)
    swift_once();
  v11 = sub_1DC403F64();
  __swift_project_value_buffer(v11, (uint64_t)qword_1EDB5E250);
  v12 = sub_1DC403F4C();
  v13 = sub_1DC408FE0();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v14 = 0;
    _os_log_impl(&dword_1DC07D000, v12, v13, "Displaying offline message.", v14, 2u);
    MEMORY[0x1DF0CAC88](v14, -1, -1);
  }

  sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3F8D0);
  v15 = (void *)sub_1DC409148();
  v16 = swift_allocObject();
  v17 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v16 + 56) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v16 + 72) = v17;
  *(_OWORD *)(v16 + 88) = *(_OWORD *)(a1 + 64);
  v18 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v16 + 24) = *(_OWORD *)a1;
  *(_QWORD *)(v16 + 16) = v2;
  *(_QWORD *)(v16 + 104) = *(_QWORD *)(a1 + 80);
  *(_OWORD *)(v16 + 40) = v18;
  aBlock[4] = sub_1DC312AB0;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1DC081B88;
  aBlock[3] = &block_descriptor_21_0;
  v19 = _Block_copy(aBlock);
  swift_retain();
  sub_1DC312A6C(a1);
  swift_release();
  sub_1DC407264();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  sub_1DC081B48(&qword_1EDB275A0, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  sub_1DC1130A0(0);
  sub_1DC081B48((unint64_t *)&qword_1EDB3F720, 255, (uint64_t (*)(uint64_t))sub_1DC1130A0, MEMORY[0x1E0DEAF38]);
  sub_1DC40964C();
  MEMORY[0x1DF0C99C8](0, v10, v6, v19);
  _Block_release(v19);

  (*(void (**)(char *, uint64_t))(v22 + 8))(v6, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_1DC30F958(uint64_t a1, __int128 *a2)
{
  if ((sub_1DC30E0DC() & 1) != 0)
    return sub_1DC30F9D4(a2);
  sub_1DC083594(0, (unint64_t *)&qword_1EDB29708, MEMORY[0x1E0DEE9C0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  return sub_1DC402D58();
}

uint64_t sub_1DC30F9D4(__int128 *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  void *v8;
  char v9;
  uint64_t v10;
  void *v11;
  id v12;
  id v13;
  uint64_t v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  uint64_t v21;
  void *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD v36[21];
  _BYTE __src[784];
  __int128 v38;
  void *v39;
  __int128 v40;
  __int128 v41;
  char v42;
  uint64_t v43;
  char v44;
  void *v45;

  v2 = v1;
  if (qword_1EDB42200 != -1)
    swift_once();
  v4 = sub_1DC403F64();
  __swift_project_value_buffer(v4, (uint64_t)qword_1EDB5E250);
  v5 = sub_1DC403F4C();
  v6 = sub_1DC408FE0();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v7 = 0;
    _os_log_impl(&dword_1DC07D000, v5, v6, "Starting Page 1 reveal.", v7, 2u);
    MEMORY[0x1DF0CAC88](v7, -1, -1);
  }

  __swift_project_boxed_opaque_existential_1(v2 + 14, v2[17]);
  __swift_project_boxed_opaque_existential_1(v2 + 4, v2[7]);
  sub_1DC28BE54((uint64_t)v36);
  v8 = (void *)*((_QWORD *)a1 + 2);
  v9 = *((_BYTE *)a1 + 56);
  v10 = *((_QWORD *)a1 + 8);
  v11 = (void *)*((_QWORD *)a1 + 10);
  v38 = *a1;
  v39 = v8;
  v40 = *(__int128 *)((char *)a1 + 24);
  v41 = *(__int128 *)((char *)a1 + 40);
  v42 = v9;
  v43 = v10;
  v44 = 1;
  v45 = v11;
  v12 = v8;
  v13 = v11;
  sub_1DC196ED8(v36, (uint64_t)&v38, __src);

  sub_1DC28CD60(v36);
  sub_1DC21CEE8();
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = v2;
  memcpy((void *)(v14 + 24), __src, 0x310uLL);
  sub_1DC0821D4(0, &qword_1F0351BD0);
  swift_retain();
  sub_1DC312AE8((uint64_t)__src);
  v15 = (void *)sub_1DC409214();
  swift_beginAccess();
  v16 = v15;
  MEMORY[0x1DF0C9530]();
  if (*(_QWORD *)((v2[21] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v2[21] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1DC408D4C();
  sub_1DC408D64();
  sub_1DC408CF8();
  swift_endAccess();
  v17 = sub_1DC409208();
  swift_release();

  sub_1DC21CF30();
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = v2;
  memcpy((void *)(v18 + 24), __src, 0x310uLL);
  swift_retain();
  sub_1DC312AE8((uint64_t)__src);
  v19 = (void *)sub_1DC409214();
  swift_beginAccess();
  v20 = v19;
  MEMORY[0x1DF0C9530]();
  if (*(_QWORD *)((v2[21] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v2[21] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1DC408D4C();
  sub_1DC408D64();
  sub_1DC408CF8();
  swift_endAccess();
  v21 = sub_1DC409208();
  swift_release();

  sub_1DC21CF78();
  v22 = (void *)sub_1DC409214();
  swift_beginAccess();
  v23 = v22;
  MEMORY[0x1DF0C9530]();
  if (*(_QWORD *)((v2[21] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v2[21] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1DC408D4C();
  sub_1DC408D64();
  sub_1DC408CF8();
  swift_endAccess();
  if (qword_1F034AEB8 != -1)
    swift_once();
  sub_1DC081B48(&qword_1F0351BD8, v24, (uint64_t (*)(uint64_t))type metadata accessor for WelcomeViewAnimator, (uint64_t)&unk_1DC427454);
  sub_1DC4012D0();
  v25 = swift_allocObject();
  *(_QWORD *)(v25 + 16) = v2;
  memcpy((void *)(v25 + 24), __src, 0x310uLL);
  swift_retain();
  sub_1DC312AE8((uint64_t)__src);
  v26 = sub_1DC409208();
  swift_release();
  type metadata accessor for WelcomeViewAnimator.Canceler();
  v27 = swift_allocObject();
  *(_BYTE *)(v27 + 16) = 0;
  swift_beginAccess();
  v28 = swift_retain();
  MEMORY[0x1DF0C9530](v28);
  if (*(_QWORD *)((v2[22] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v2[22] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1DC408D4C();
  sub_1DC408D64();
  sub_1DC408CF8();
  swift_endAccess();
  sub_1DC083594(0, (unint64_t *)&qword_1EDB29708, MEMORY[0x1E0DEE9C0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
  sub_1DC083594(0, (unint64_t *)&qword_1EDB400D0, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = xmmword_1DC412B70;
  *(_QWORD *)(v29 + 32) = v17;
  *(_QWORD *)(v29 + 40) = v21;
  *(_QWORD *)(v29 + 48) = v26;
  sub_1DC408CF8();
  swift_retain();
  swift_retain();
  swift_retain();
  v30 = (void *)sub_1DC402C80();
  sub_1DC312B68();
  sub_1DC081B48(&qword_1F0351BE8, 255, (uint64_t (*)(uint64_t))sub_1DC312B68, MEMORY[0x1E0DEAF50]);
  sub_1DC402CD4();
  swift_bridgeObjectRelease();

  sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3F8D0);
  v31 = (void *)sub_1DC409148();
  v32 = swift_allocObject();
  swift_weakInit();
  v33 = swift_allocObject();
  *(_QWORD *)(v33 + 16) = v27;
  *(_QWORD *)(v33 + 24) = v32;
  swift_retain();
  v34 = sub_1DC402D04();
  swift_release();
  swift_release();

  swift_release();
  swift_release();
  swift_release();

  swift_release();
  sub_1DC312C34((uint64_t)__src);
  return v34;
}

uint64_t sub_1DC31012C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t);
  _QWORD v12[2];

  v2 = sub_1DC407294();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v12 - v7;
  v9 = *(_QWORD *)(a1 + 160);
  if ((sub_1DC407F00() & 1) != 0)
  {
    sub_1DC312D24();
    swift_allocError();
    swift_willThrow();
  }
  else if ((sub_1DC30E0DC() & 1) != 0)
  {
    sub_1DC407288();
    MEMORY[0x1DF0C7B14](v5, 1.6);
    v10 = *(void (**)(char *, uint64_t))(v3 + 8);
    v10(v5, v2);
    v9 = sub_1DC402C5C();
    v10(v8, v2);
  }
  else
  {
    sub_1DC083594(0, (unint64_t *)&qword_1EDB29708, MEMORY[0x1E0DEE9C0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    return sub_1DC402D58();
  }
  return v9;
}

uint64_t sub_1DC31028C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v0 = sub_1DC402B90();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EDB42200 != -1)
    swift_once();
  v4 = sub_1DC403F64();
  __swift_project_value_buffer(v4, (uint64_t)qword_1EDB5E250);
  v5 = sub_1DC403F4C();
  v6 = sub_1DC408FE0();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v7 = 0;
    _os_log_impl(&dword_1DC07D000, v5, v6, "Beginning pre-warming.", v7, 2u);
    MEMORY[0x1DF0CAC88](v7, -1, -1);
  }

  if (qword_1EDB29530 != -1)
    swift_once();
  v8 = sub_1DC402890();
  __swift_project_value_buffer(v8, (uint64_t)qword_1EDB29510);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB46B0], v0);
  v9 = sub_1DC402AAC();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v9;
}

void sub_1DC31042C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  _OWORD v34[10];
  uint64_t v35;
  _OWORD v36[10];
  uint64_t v37;
  _BYTE v38[168];

  v8 = *(_OWORD *)(a1 + 144);
  v36[8] = *(_OWORD *)(a1 + 128);
  v36[9] = v8;
  v37 = *(_QWORD *)(a1 + 160);
  v9 = *(_OWORD *)(a1 + 80);
  v36[4] = *(_OWORD *)(a1 + 64);
  v36[5] = v9;
  v10 = *(_OWORD *)(a1 + 112);
  v36[6] = *(_OWORD *)(a1 + 96);
  v36[7] = v10;
  v11 = *(_OWORD *)(a1 + 16);
  v36[0] = *(_OWORD *)a1;
  v36[1] = v11;
  v12 = *(_OWORD *)(a1 + 48);
  v36[2] = *(_OWORD *)(a1 + 32);
  v36[3] = v12;
  if ((sub_1DC407F00() & 1) != 0)
  {
    sub_1DC312D24();
    swift_allocError();
    swift_willThrow();
  }
  else if ((*(_BYTE *)(a3 + 16) & 1) != 0)
  {
    if (qword_1EDB42200 != -1)
      swift_once();
    v13 = sub_1DC403F64();
    __swift_project_value_buffer(v13, (uint64_t)qword_1EDB5E250);
    v14 = sub_1DC403F4C();
    v15 = sub_1DC408FE0();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v16 = 0;
      MEMORY[0x1DF0CAC88](v16, -1, -1);
    }

  }
  else if ((sub_1DC30E0DC() & 1) != 0)
  {
    if (qword_1EDB42200 != -1)
      swift_once();
    v17 = sub_1DC403F64();
    __swift_project_value_buffer(v17, (uint64_t)qword_1EDB5E250);
    v18 = sub_1DC403F4C();
    v19 = sub_1DC408FE0();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v20 = 0;
      MEMORY[0x1DF0CAC88](v20, -1, -1);
    }

    v21 = sub_1DC403F4C();
    v22 = sub_1DC408FE0();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v23 = 0;
      _os_log_impl(&dword_1DC07D000, v21, v22, "Did reveal Page 1.", v23, 2u);
      MEMORY[0x1DF0CAC88](v23, -1, -1);
    }

    sub_1DC310A70(a4, (id *)v36);
    UIAccessibilityPostNotification(*MEMORY[0x1E0DC45C0], 0);
  }
  else
  {
    v24 = *(_OWORD *)(a1 + 144);
    v34[8] = *(_OWORD *)(a1 + 128);
    v34[9] = v24;
    v35 = *(_QWORD *)(a1 + 160);
    v25 = *(_OWORD *)(a1 + 80);
    v34[4] = *(_OWORD *)(a1 + 64);
    v34[5] = v25;
    v26 = *(_OWORD *)(a1 + 112);
    v34[6] = *(_OWORD *)(a1 + 96);
    v34[7] = v26;
    v27 = *(_OWORD *)(a1 + 16);
    v34[0] = *(_OWORD *)a1;
    v34[1] = v27;
    v28 = *(_OWORD *)(a1 + 48);
    v34[2] = *(_OWORD *)(a1 + 32);
    v34[3] = v28;
    nullsub_1(v34);
    v29 = sub_1DC312C5C((uint64_t)v34, (uint64_t)v38);
    MEMORY[0x1E0C80A78](v29);
    sub_1DC402E0C();
    sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3F8D0);
    v30 = (void *)sub_1DC409148();
    v31 = swift_allocObject();
    *(_QWORD *)(v31 + 16) = a2;
    v32 = *(_OWORD *)(a4 + 48);
    *(_OWORD *)(v31 + 56) = *(_OWORD *)(a4 + 32);
    *(_OWORD *)(v31 + 72) = v32;
    *(_OWORD *)(v31 + 88) = *(_OWORD *)(a4 + 64);
    *(_QWORD *)(v31 + 104) = *(_QWORD *)(a4 + 80);
    v33 = *(_OWORD *)(a4 + 16);
    *(_OWORD *)(v31 + 24) = *(_OWORD *)a4;
    *(_OWORD *)(v31 + 40) = v33;
    swift_retain();
    sub_1DC312A6C(a4);
    sub_1DC402CF8();
    swift_release();
    swift_release();

    swift_release();
  }
}

uint64_t sub_1DC310830(uint64_t a1, uint64_t a2, __int128 *a3)
{
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;

  if (qword_1EDB42200 != -1)
    swift_once();
  v4 = sub_1DC403F64();
  __swift_project_value_buffer(v4, (uint64_t)qword_1EDB5E250);
  v5 = sub_1DC403F4C();
  v6 = sub_1DC408FE0();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v7 = 0;
    _os_log_impl(&dword_1DC07D000, v5, v6, "Offline error occurred during start animation.", v7, 2u);
    MEMORY[0x1DF0CAC88](v7, -1, -1);
  }

  sub_1DC30F9D4(a3);
  swift_release();
  return sub_1DC30F660((uint64_t)a3);
}

uint64_t sub_1DC310924(uint64_t a1, double *a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;

  sub_1DC3126DC();
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1DC407EAC();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC407F3C();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    if (qword_1F034AFB8 != -1)
      swift_once();
    v10 = __swift_project_value_buffer(v6, (uint64_t)qword_1F03689F0);
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v10, v6);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v5, v6);
  }
  sub_1DC30ED20((uint64_t)v9, a2);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1DC310A70(uint64_t a1, id *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  void *v19;
  id v20;
  id v21;
  char *v22;
  id v23;
  id v24;
  uint64_t v25;
  void *v26;
  id v27;
  uint64_t v28;
  void *v29;
  id v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _BYTE v59[784];
  CGFloat __src[98];
  _QWORD v61[7];
  char v62;
  uint64_t v63;
  char v64;
  id v65;
  _QWORD v66[7];
  char v67;
  uint64_t v68;
  char v69;
  void *v70;

  v3 = v2;
  if (qword_1EDB42200 != -1)
    swift_once();
  v6 = sub_1DC403F64();
  __swift_project_value_buffer(v6, (uint64_t)qword_1EDB5E250);
  v7 = sub_1DC403F4C();
  v8 = sub_1DC408FE0();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v9 = 0;
    _os_log_impl(&dword_1DC07D000, v7, v8, "Starting Page 2 reveal.", v9, 2u);
    MEMORY[0x1DF0CAC88](v9, -1, -1);
  }

  __swift_project_boxed_opaque_existential_1(v3 + 14, v3[17]);
  v11 = *(_QWORD *)(a1 + 8);
  v12 = *(void **)(a1 + 16);
  v13 = *(_QWORD *)(a1 + 24);
  v14 = *(_QWORD *)(a1 + 32);
  v15 = *(_QWORD *)(a1 + 40);
  v16 = *(_QWORD *)(a1 + 48);
  v17 = *(_BYTE *)(a1 + 56);
  v18 = *(_QWORD *)(a1 + 64);
  v19 = *(void **)(a1 + 80);
  v66[0] = *(_QWORD *)a1;
  v10 = v66[0];
  v66[1] = v11;
  v66[2] = v12;
  v66[3] = v13;
  v66[4] = v14;
  v66[5] = v15;
  v66[6] = v16;
  v67 = v17;
  v68 = v18;
  v69 = 1;
  v70 = v19;
  v20 = v12;
  v21 = v19;
  sub_1DC196ED8(a2, (uint64_t)v66, v59);

  __swift_project_boxed_opaque_existential_1(v3 + 9, v3[12]);
  v22 = (char *)v3[2];
  sub_1DC16CD34(a2, v17, (uint64_t)v59, v22);
  __swift_project_boxed_opaque_existential_1(v3 + 14, v3[17]);
  v61[0] = v10;
  v61[1] = v11;
  v61[2] = v20;
  v61[3] = v13;
  v61[4] = v14;
  v61[5] = v15;
  v61[6] = v16;
  v62 = v17;
  v63 = v18;
  v64 = 2;
  v65 = v21;
  v23 = v20;
  v24 = v21;
  sub_1DC196ED8(a2, (uint64_t)v61, __src);

  sub_1DC21CFC0();
  v25 = swift_allocObject();
  *(_QWORD *)(v25 + 16) = v3;
  memcpy((void *)(v25 + 24), __src, 0x310uLL);
  sub_1DC0821D4(0, &qword_1F0351BD0);
  swift_retain();
  sub_1DC312AE8((uint64_t)__src);
  v26 = (void *)sub_1DC409214();
  swift_beginAccess();
  v27 = v26;
  MEMORY[0x1DF0C9530]();
  if (*(_QWORD *)((v3[21] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v3[21] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1DC408D4C();
  sub_1DC408D64();
  sub_1DC408CF8();
  swift_endAccess();
  v56 = sub_1DC409208();
  swift_release();

  sub_1DC21D008();
  v28 = swift_allocObject();
  *(_QWORD *)(v28 + 16) = v3;
  memcpy((void *)(v28 + 24), __src, 0x310uLL);
  swift_retain();
  sub_1DC312AE8((uint64_t)__src);
  v29 = (void *)sub_1DC409214();
  swift_beginAccess();
  v30 = v29;
  MEMORY[0x1DF0C9530]();
  if (*(_QWORD *)((v3[21] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v3[21] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1DC408D4C();
  sub_1DC408D64();
  sub_1DC408CF8();
  swift_endAccess();
  v55 = sub_1DC409208();
  swift_release();

  __swift_project_boxed_opaque_existential_1(v3 + 9, v3[12]);
  sub_1DC083594(0, (unint64_t *)&qword_1EDB400D0, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v31 = swift_allocObject();
  *(_OWORD *)(v31 + 16) = xmmword_1DC40FA60;
  *(_QWORD *)(v31 + 32) = swift_getKeyPath();
  sub_1DC408CF8();
  if (v31 >> 62)
  {
    swift_bridgeObjectRetain();
    v33 = sub_1DC409850();
    swift_bridgeObjectRelease();
    if (v33)
      goto LABEL_11;
  }
  else if (*(_QWORD *)((v31 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_11:
    v32 = sub_1DC368124(v31);
    goto LABEL_14;
  }
  v32 = MEMORY[0x1E0DEE9E8];
LABEL_14:
  swift_bridgeObjectRelease();
  sub_1DC16E178(0, v32, __src, v22);
  swift_bridgeObjectRelease();
  if (qword_1F034AF38 != -1)
    swift_once();
  sub_1DC081B48(&qword_1F0351BD8, v34, (uint64_t (*)(uint64_t))type metadata accessor for WelcomeViewAnimator, (uint64_t)&unk_1DC427454);
  sub_1DC4012D0();
  v35 = swift_allocObject();
  *(_OWORD *)(v35 + 16) = xmmword_1DC40FA60;
  *(_QWORD *)(v35 + 32) = swift_getKeyPath();
  sub_1DC408CF8();
  if (!(v35 >> 62))
  {
    if (!*(_QWORD *)((v35 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_20;
    goto LABEL_18;
  }
  swift_bridgeObjectRetain();
  v36 = sub_1DC409850();
  swift_bridgeObjectRelease();
  if (v36)
LABEL_18:
    sub_1DC368124(v35);
LABEL_20:
  swift_bridgeObjectRelease();
  v58 = sub_1DC311A1C();
  swift_bridgeObjectRelease();
  v37 = swift_allocObject();
  *(_OWORD *)(v37 + 16) = xmmword_1DC40FA60;
  *(_QWORD *)(v37 + 32) = swift_getKeyPath();
  sub_1DC408CF8();
  if (!(v37 >> 62))
  {
    if (!*(_QWORD *)((v37 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_24;
    goto LABEL_22;
  }
  swift_bridgeObjectRetain();
  v38 = sub_1DC409850();
  swift_bridgeObjectRelease();
  if (v38)
LABEL_22:
    sub_1DC368124(v37);
LABEL_24:
  swift_bridgeObjectRelease();
  v39 = sub_1DC311A1C();
  swift_bridgeObjectRelease();
  v40 = swift_allocObject();
  *(_OWORD *)(v40 + 16) = xmmword_1DC40FA60;
  *(_QWORD *)(v40 + 32) = swift_getKeyPath();
  sub_1DC408CF8();
  if (!(v40 >> 62))
  {
    if (!*(_QWORD *)((v40 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_28;
    goto LABEL_26;
  }
  swift_bridgeObjectRetain();
  v41 = sub_1DC409850();
  swift_bridgeObjectRelease();
  if (v41)
LABEL_26:
    sub_1DC368124(v40);
LABEL_28:
  swift_bridgeObjectRelease();
  v54 = sub_1DC311A1C();
  swift_bridgeObjectRelease();
  v42 = swift_allocObject();
  *(_OWORD *)(v42 + 16) = xmmword_1DC40FA60;
  *(_QWORD *)(v42 + 32) = swift_getKeyPath();
  sub_1DC408CF8();
  if (!(v42 >> 62))
  {
    if (!*(_QWORD *)((v42 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_32;
    goto LABEL_30;
  }
  swift_bridgeObjectRetain();
  v43 = sub_1DC409850();
  swift_bridgeObjectRelease();
  if (v43)
LABEL_30:
    sub_1DC368124(v42);
LABEL_32:
  swift_bridgeObjectRelease();
  v57 = sub_1DC311A1C();
  swift_bridgeObjectRelease();
  v44 = swift_allocObject();
  *(_OWORD *)(v44 + 16) = xmmword_1DC40FA60;
  *(_QWORD *)(v44 + 32) = swift_getKeyPath();
  sub_1DC408CF8();
  if (!(v44 >> 62))
  {
    if (!*(_QWORD *)((v44 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_36;
    goto LABEL_34;
  }
  swift_bridgeObjectRetain();
  v45 = sub_1DC409850();
  swift_bridgeObjectRelease();
  if (v45)
LABEL_34:
    sub_1DC368124(v44);
LABEL_36:
  swift_bridgeObjectRelease();
  v46 = sub_1DC311A1C();
  swift_bridgeObjectRelease();
  type metadata accessor for WelcomeViewAnimator.Canceler();
  v47 = swift_allocObject();
  *(_BYTE *)(v47 + 16) = 0;
  swift_beginAccess();
  v48 = swift_retain();
  MEMORY[0x1DF0C9530](v48);
  if (*(_QWORD *)((v3[22] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v3[22] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1DC408D4C();
  sub_1DC408D64();
  sub_1DC408CF8();
  swift_endAccess();
  sub_1DC083594(0, (unint64_t *)&qword_1EDB29708, MEMORY[0x1E0DEE9C0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
  v49 = swift_allocObject();
  *(_OWORD *)(v49 + 16) = xmmword_1DC427210;
  *(_QWORD *)(v49 + 32) = v56;
  *(_QWORD *)(v49 + 40) = v55;
  *(_QWORD *)(v49 + 48) = v58;
  *(_QWORD *)(v49 + 56) = v39;
  *(_QWORD *)(v49 + 64) = v54;
  *(_QWORD *)(v49 + 72) = v57;
  *(_QWORD *)(v49 + 80) = v46;
  sub_1DC408CF8();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1DC402CE0();
  swift_bridgeObjectRelease();
  sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3F8D0);
  v50 = (void *)sub_1DC409148();
  v51 = swift_allocObject();
  swift_weakInit();
  v52 = swift_allocObject();
  *(_QWORD *)(v52 + 16) = v47;
  *(_QWORD *)(v52 + 24) = v51;
  swift_retain();
  sub_1DC402D04();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  swift_release();
  sub_1DC312C34((uint64_t)__src);
  return sub_1DC312C34((uint64_t)v59);
}

uint64_t sub_1DC311608(uint64_t a1, CGFloat *a2, uint64_t a3, char a4)
{
  unint64_t inited;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;

  __swift_project_boxed_opaque_existential_1((_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 96));
  sub_1DC083594(0, (unint64_t *)&qword_1EDB400D0, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DC40FA60;
  *(_QWORD *)(inited + 32) = swift_getKeyPath();
  sub_1DC408CF8();
  v8 = inited;
  if (inited >> 62)
  {
    swift_bridgeObjectRetain();
    v10 = sub_1DC409850();
    swift_bridgeObjectRelease();
    if (v10)
      goto LABEL_3;
LABEL_5:
    v9 = MEMORY[0x1E0DEE9E8];
    goto LABEL_6;
  }
  if (!*(_QWORD *)((inited & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_5;
LABEL_3:
  v9 = sub_1DC368124(v8);
LABEL_6:
  swift_bridgeObjectRelease();
  sub_1DC16E178(a4, v9, a2, *(char **)(a1 + 16));
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DC311730(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  _QWORD v7[21];
  _BYTE v8[168];
  __int128 v9;
  _BYTE v10[168];

  sub_1DC312C5C(a1, (uint64_t)v8);
  sub_1DC312C5C((uint64_t)v8, (uint64_t)v10);
  sub_1DC312C5C(a1, (uint64_t)&v9);
  if (sub_1DC312F08((uint64_t)&v9) == 1)
  {
    __swift_project_boxed_opaque_existential_1((_QWORD *)(a2 + 32), *(_QWORD *)(a2 + 56));
    sub_1DC40070C();
    sub_1DC402E0C();
    sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3F8D0);
    v4 = (void *)sub_1DC409148();
    swift_retain();
    v5 = sub_1DC402D04();
    swift_release();

    swift_release();
  }
  else
  {
    sub_1DC083594(0, &qword_1F0351C00, (uint64_t)&type metadata for WelcomeModel, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    sub_1DC312C5C((uint64_t)v10, (uint64_t)v7);
    sub_1DC312F50(v7);
    return sub_1DC402D58();
  }
  return v5;
}

uint64_t sub_1DC3118BC(uint64_t a1, uint64_t a2, __int128 *a3)
{
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  void *v10;
  char v11;
  uint64_t v12;
  void *v13;
  id v14;
  id v15;
  uint64_t v16;
  _BYTE v18[784];
  _OWORD v19[10];
  uint64_t v20;
  __int128 v21;
  void *v22;
  __int128 v23;
  __int128 v24;
  char v25;
  uint64_t v26;
  char v27;
  void *v28;

  v5 = *(_OWORD *)(a1 + 144);
  v19[8] = *(_OWORD *)(a1 + 128);
  v19[9] = v5;
  v20 = *(_QWORD *)(a1 + 160);
  v6 = *(_OWORD *)(a1 + 80);
  v19[4] = *(_OWORD *)(a1 + 64);
  v19[5] = v6;
  v7 = *(_OWORD *)(a1 + 112);
  v19[6] = *(_OWORD *)(a1 + 96);
  v19[7] = v7;
  v8 = *(_OWORD *)(a1 + 16);
  v19[0] = *(_OWORD *)a1;
  v19[1] = v8;
  v9 = *(_OWORD *)(a1 + 48);
  v19[2] = *(_OWORD *)(a1 + 32);
  v19[3] = v9;
  __swift_project_boxed_opaque_existential_1((_QWORD *)(a2 + 112), *(_QWORD *)(a2 + 136));
  v10 = (void *)*((_QWORD *)a3 + 2);
  v11 = *((_BYTE *)a3 + 56);
  v12 = *((_QWORD *)a3 + 8);
  v13 = (void *)*((_QWORD *)a3 + 10);
  v21 = *a3;
  v22 = v10;
  v23 = *(__int128 *)((char *)a3 + 24);
  v24 = *(__int128 *)((char *)a3 + 40);
  v25 = v11;
  v26 = v12;
  v27 = 2;
  v28 = v13;
  v14 = v10;
  v15 = v13;
  sub_1DC196ED8(v19, (uint64_t)&v21, v18);

  __swift_project_boxed_opaque_existential_1((_QWORD *)(a2 + 72), *(_QWORD *)(a2 + 96));
  sub_1DC16CD34((id *)v19, v11, (uint64_t)v18, *(char **)(a2 + 16));
  sub_1DC083594(0, (unint64_t *)&qword_1EDB29708, MEMORY[0x1E0DEE9C0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  v16 = sub_1DC402D58();
  sub_1DC312C34((uint64_t)v18);
  return v16;
}

uint64_t sub_1DC311A1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  type metadata accessor for WelcomeViewAnimator.Canceler();
  *(_BYTE *)(swift_allocObject() + 16) = 0;
  swift_beginAccess();
  v1 = swift_retain();
  MEMORY[0x1DF0C9530](v1);
  if (*(_QWORD *)((*(_QWORD *)(v0 + 176) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)(v0 + 176) & 0xFFFFFFFFFFFFFF8)
                                                                                      + 0x18) >> 1)
    sub_1DC408D4C();
  sub_1DC408D64();
  sub_1DC408CF8();
  v2 = swift_endAccess();
  MEMORY[0x1E0C80A78](v2);
  sub_1DC083594(0, (unint64_t *)&qword_1EDB29708, MEMORY[0x1E0DEE9C0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  v3 = sub_1DC402DA0();
  swift_release();
  return v3;
}

void sub_1DC311B68(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4, const char *a5, uint64_t a6, const char *a7)
{
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  char v15;
  NSObject *v16;
  os_log_type_t v17;
  _BOOL4 v18;
  uint8_t *v19;
  uint8_t *v20;

  if (qword_1EDB42200 != -1)
    swift_once();
  v11 = sub_1DC403F64();
  __swift_project_value_buffer(v11, (uint64_t)qword_1EDB5E250);
  v12 = sub_1DC403F4C();
  v13 = sub_1DC408FE0();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v14 = 0;
    _os_log_impl(&dword_1DC07D000, v12, v13, a4, v14, 2u);
    MEMORY[0x1DF0CAC88](v14, -1, -1);
  }

  v15 = *(_BYTE *)(a2 + 16);
  v16 = sub_1DC403F4C();
  v17 = sub_1DC408FE0();
  v18 = os_log_type_enabled(v16, v17);
  if ((v15 & 1) != 0)
  {
    if (v18)
    {
      v19 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v19 = 0;
      _os_log_impl(&dword_1DC07D000, v16, v17, a7, v19, 2u);
      MEMORY[0x1DF0CAC88](v19, -1, -1);
    }

  }
  else
  {
    if (v18)
    {
      v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v20 = 0;
      _os_log_impl(&dword_1DC07D000, v16, v17, a5, v20, 2u);
      MEMORY[0x1DF0CAC88](v20, -1, -1);
    }

    swift_beginAccess();
    if (swift_weakLoadStrong())
    {
      swift_retain();
      swift_release();
      sub_1DC312650();
      sub_1DC402764();
      swift_release();
    }
  }
}

uint64_t sub_1DC311D90(uint64_t a1, uint64_t a2, double a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, const void *a9)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  void *v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  const void *v36;
  void (*v37)(char *, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD aBlock[6];

  v36 = a9;
  v33 = a7;
  v34 = a8;
  v32 = a6;
  v12 = sub_1DC40724C();
  v41 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1DC407270();
  v39 = *(_QWORD *)(v15 - 8);
  v40 = v15;
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_1DC407294();
  v19 = *(_QWORD *)(v18 - 8);
  v38 = v18;
  MEMORY[0x1E0C80A78](v18);
  v21 = (char *)&v32 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)&v32 - v23;
  v25 = swift_allocObject();
  *(_QWORD *)(v25 + 16) = a1;
  *(_QWORD *)(v25 + 24) = a2;
  sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3F8D0);
  swift_retain();
  v35 = sub_1DC409148();
  sub_1DC407288();
  MEMORY[0x1DF0C7B14](v21, a3);
  v37 = *(void (**)(char *, uint64_t))(v19 + 8);
  v37(v21, v18);
  v26 = (_QWORD *)swift_allocObject();
  v27 = v33;
  v26[2] = v32;
  v26[3] = sub_1DC080634;
  v26[4] = v25;
  v26[5] = v27;
  v26[6] = v34;
  v28 = (uint64_t)v36;
  memcpy(v26 + 7, v36, 0x310uLL);
  aBlock[4] = sub_1DC312E50;
  aBlock[5] = v26;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1DC081B88;
  aBlock[3] = &block_descriptor_70;
  v29 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1DC312AE8(v28);
  swift_release();
  sub_1DC407264();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  sub_1DC081B48(&qword_1EDB275A0, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  sub_1DC1130A0(0);
  sub_1DC081B48((unint64_t *)&qword_1EDB3F720, 255, (uint64_t (*)(uint64_t))sub_1DC1130A0, MEMORY[0x1E0DEAF38]);
  sub_1DC40964C();
  v30 = (void *)v35;
  MEMORY[0x1DF0C9998](v24, v17, v14, v29);
  _Block_release(v29);

  (*(void (**)(char *, uint64_t))(v41 + 8))(v14, v12);
  (*(void (**)(char *, uint64_t))(v39 + 8))(v17, v40);
  return ((uint64_t (*)(char *, uint64_t))v37)(v24, v38);
}

uint64_t sub_1DC3120C4(uint64_t a1, uint64_t (*a2)(void), uint64_t a3, uint64_t a4, uint64_t a5, const void *a6)
{
  _QWORD *v11;
  void *v12;
  id v13;
  uint64_t v14;
  _QWORD *v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;

  if ((*(_BYTE *)(a1 + 16) & 1) != 0)
    return a2();
  sub_1DC21D050();
  v11 = (_QWORD *)swift_allocObject();
  v11[2] = a4;
  v11[3] = a5;
  memcpy(v11 + 4, a6, 0x310uLL);
  sub_1DC0821D4(0, &qword_1F0351BD0);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1DC312AE8((uint64_t)a6);
  v12 = (void *)sub_1DC409214();
  swift_beginAccess();
  v13 = v12;
  MEMORY[0x1DF0C9530]();
  if (*(_QWORD *)((*(_QWORD *)(a4 + 168) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)(a4 + 168) & 0xFFFFFFFFFFFFFF8)
                                                                                      + 0x18) >> 1)
    sub_1DC408D4C();
  sub_1DC408D64();
  sub_1DC408CF8();
  swift_endAccess();
  v14 = sub_1DC409208();
  swift_release();

  sub_1DC21D098();
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = a4;
  v15[3] = a5;
  memcpy(v15 + 4, a6, 0x310uLL);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1DC312AE8((uint64_t)a6);
  v16 = (void *)sub_1DC409214();
  swift_beginAccess();
  v17 = v16;
  MEMORY[0x1DF0C9530]();
  if (*(_QWORD *)((*(_QWORD *)(a4 + 168) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)(a4 + 168) & 0xFFFFFFFFFFFFFF8)
                                                                                      + 0x18) >> 1)
    sub_1DC408D4C();
  sub_1DC408D64();
  sub_1DC408CF8();
  swift_endAccess();
  v18 = sub_1DC409208();
  swift_release();

  sub_1DC083594(0, (unint64_t *)&qword_1EDB29708, MEMORY[0x1E0DEE9C0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
  sub_1DC083594(0, (unint64_t *)&qword_1EDB400D0, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1DC40FA50;
  *(_QWORD *)(v19 + 32) = v14;
  *(_QWORD *)(v19 + 40) = v18;
  sub_1DC408CF8();
  swift_retain();
  swift_retain();
  sub_1DC402CE0();
  swift_bridgeObjectRelease();
  sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3F8D0);
  v20 = (void *)sub_1DC409148();
  v21 = swift_allocObject();
  *(_QWORD *)(v21 + 16) = a2;
  *(_QWORD *)(v21 + 24) = a3;
  swift_retain();
  sub_1DC402D04();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t sub_1DC312480()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  __swift_destroy_boxed_opaque_existential_1(v0 + 72);
  __swift_destroy_boxed_opaque_existential_1(v0 + 112);
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1DC31291C(*(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 192), *(void **)(v0 + 200), *(_QWORD *)(v0 + 208), *(_QWORD *)(v0 + 216), *(_QWORD *)(v0 + 224), *(_QWORD *)(v0 + 232), *(_QWORD *)(v0 + 240), *(_QWORD *)(v0 + 248), *(_QWORD *)(v0 + 256), *(void **)(v0 + 264));
  return v0;
}

uint64_t sub_1DC312508()
{
  sub_1DC312480();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for WelcomeViewAnimator()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for WelcomeViewAnimator.Canceler()
{
  return objc_opt_self();
}

ValueMetadata *type metadata accessor for WelcomeViewAnimator.State()
{
  return &type metadata for WelcomeViewAnimator.State;
}

uint64_t storeEnumTagSinglePayload for WelcomeViewKeyFrame(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1DC3125CC + 4 * byte_1DC427225[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1DC312600 + 4 * byte_1DC427220[v4]))();
}

uint64_t sub_1DC312600(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC312608(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC312610);
  return result;
}

uint64_t sub_1DC31261C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC312624);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1DC312628(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC312630(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WelcomeViewKeyFrame()
{
  return &type metadata for WelcomeViewKeyFrame;
}

unint64_t sub_1DC312650()
{
  unint64_t result;

  result = qword_1F0351BB0;
  if (!qword_1F0351BB0)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC4273C4, &type metadata for WelcomeViewKeyFrame);
    atomic_store(result, (unint64_t *)&qword_1F0351BB0);
  }
  return result;
}

unint64_t sub_1DC312698()
{
  unint64_t result;

  result = qword_1F0351BB8;
  if (!qword_1F0351BB8)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC42742C, &type metadata for WelcomeViewAnimator.State);
    atomic_store(result, (unint64_t *)&qword_1F0351BB8);
  }
  return result;
}

void sub_1DC3126DC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F0351BC0)
  {
    sub_1DC120BB8();
    v0 = sub_1DC407F30();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1F0351BC0);
  }
}

uint64_t sub_1DC312734(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1DC3126DC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC312778()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1DC3126DC();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = (v2 + 24) & ~v2;
  swift_release();
  v4 = sub_1DC407EAC();
  v5 = *(_QWORD *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v0 + v3, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v0 + v3, v4);
  return swift_deallocObject();
}

uint64_t sub_1DC312814(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1DC3126DC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

_QWORD *sub_1DC312858()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1DC3126DC();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  return sub_1DC30E388(*(_QWORD *)(v0 + 16), v0 + ((v2 + 24) & ~v2));
}

void sub_1DC312888()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1F0351BC8)
  {
    sub_1DC3126DC();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1F0351BC8);
  }
}

id sub_1DC3128EC(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  id v11;
  id result;

  if (a3)
  {
    v11 = a3;
    return a11;
  }
  return result;
}

void sub_1DC31291C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  if (a3)
  {

  }
}

uint64_t sub_1DC31294C()
{
  uint64_t v0;

  return sub_1DC30F958(*(_QWORD *)(v0 + 16), *(__int128 **)(v0 + 24));
}

uint64_t sub_1DC312964()
{
  uint64_t v0;

  return sub_1DC31012C(v0);
}

uint64_t sub_1DC31297C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DC3129A0()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1DC3129C0()
{
  return sub_1DC31028C();
}

uint64_t sub_1DC3129C8()
{
  uint64_t v0;

  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 56));
  type metadata accessor for WelcomeModelProvider();
  return sub_1DC28C688();
}

uint64_t sub_1DC312A14()
{
  uint64_t v0;

  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_1DC312A50(uint64_t a1)
{
  uint64_t v1;

  sub_1DC31042C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), v1 + 32);
}

uint64_t sub_1DC312A6C(uint64_t a1)
{
  void *v2;
  id v3;
  id v4;

  v2 = *(void **)(a1 + 80);
  v3 = *(id *)(a1 + 16);
  v4 = v2;
  return a1;
}

uint64_t sub_1DC312AA0(uint64_t a1)
{
  uint64_t v1;

  return sub_1DC310830(a1, *(_QWORD *)(v1 + 16), (__int128 *)(v1 + 24));
}

uint64_t sub_1DC312AB0()
{
  uint64_t v0;

  return sub_1DC310924(*(_QWORD *)(v0 + 16), (double *)(v0 + 24));
}

uint64_t sub_1DC312AC0()
{
  uint64_t v0;

  return sub_1DC311608(*(_QWORD *)(v0 + 16), (CGFloat *)(v0 + 24), (uint64_t)&unk_1DC4274D8, 4);
}

uint64_t sub_1DC312AE8(uint64_t a1)
{
  id v2;

  v2 = *(id *)(a1 + 184);
  return a1;
}

uint64_t sub_1DC312B14()
{
  uint64_t v0;

  return sub_1DC311608(*(_QWORD *)(v0 + 16), (CGFloat *)(v0 + 24), (uint64_t)&unk_1DC4274D8, 2);
}

uint64_t sub_1DC312B40()
{
  uint64_t v0;

  return sub_1DC311608(*(_QWORD *)(v0 + 16), (CGFloat *)(v0 + 24), (uint64_t)&unk_1DC4274B8, 2);
}

void sub_1DC312B68()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F0351BE0)
  {
    sub_1DC083594(255, (unint64_t *)&qword_1EDB29708, MEMORY[0x1E0DEE9C0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
    v0 = sub_1DC408D70();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1F0351BE0);
  }
}

uint64_t sub_1DC312BD8()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

void sub_1DC312C00(uint64_t a1)
{
  uint64_t v1;

}

uint64_t sub_1DC312C34(uint64_t a1)
{

  return a1;
}

uint64_t sub_1DC312C5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1DC083594(0, &qword_1F0351BF0, (uint64_t)&type metadata for WelcomeModel, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC312CB8()
{
  uint64_t v0;

  return sub_1DC311730(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t objectdestroy_14Tm()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1DC312D08(uint64_t a1)
{
  uint64_t v1;

  return sub_1DC3118BC(a1, *(_QWORD *)(v1 + 16), (__int128 *)(v1 + 24));
}

unint64_t sub_1DC312D24()
{
  unint64_t result;

  result = qword_1F0351BF8;
  if (!qword_1F0351BF8)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC4276B4, &type metadata for WelcomeViewAnimator.Error);
    atomic_store(result, (unint64_t *)&qword_1F0351BF8);
  }
  return result;
}

uint64_t objectdestroy_23Tm()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1DC312D9C()
{
  uint64_t v0;

  return sub_1DC311608(*(_QWORD *)(v0 + 16), (CGFloat *)(v0 + 24), (uint64_t)&unk_1DC427598, 2);
}

void sub_1DC312DC8(uint64_t a1)
{
  uint64_t v1;

}

uint64_t sub_1DC312DFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1DC311D90(a1, a2, *(double *)(v4 + 16), a3, a4, *(_QWORD *)(v4 + 24), *(_QWORD *)(v4 + 32), *(_QWORD *)(v4 + 40), *(const void **)(v4 + 48));
}

uint64_t sub_1DC312E0C()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1DC312E50()
{
  uint64_t v0;

  return sub_1DC3120C4(*(_QWORD *)(v0 + 16), *(uint64_t (**)(void))(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), (const void *)(v0 + 56));
}

id sub_1DC312E68()
{
  return sub_1DC312EB0(1);
}

uint64_t objectdestroy_72Tm()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

id sub_1DC312EA8()
{
  return sub_1DC312EB0(2);
}

id sub_1DC312EB0(char a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v4 = *(_QWORD *)(v1 + 16);
  v3 = *(_QWORD *)(v1 + 24);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v4 + 72), *(_QWORD *)(v4 + 96));
  return sub_1DC16E178(a1, v3, (CGFloat *)(v1 + 32), *(char **)(v4 + 16));
}

uint64_t sub_1DC312F08(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

uint64_t sub_1DC312F20()
{
  uint64_t v0;

  return sub_1DC28BD84(v0);
}

double sub_1DC312F38@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)&result = sub_1DC28BDD0(a1).n128_u64[0];
  return result;
}

_QWORD *sub_1DC312F50(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  id v4;
  id v5;
  void *v7;
  void *v8;

  v2 = a1[13];
  v3 = a1[14];
  v7 = (void *)a1[19];
  v8 = (void *)a1[20];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1DC313024(v2, v3);
  swift_bridgeObjectRetain();
  v4 = v7;
  v5 = v8;
  return a1;
}

uint64_t sub_1DC313024(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for WelcomeViewAnimator.Error(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1DC313094 + 4 * byte_1DC42722A[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1DC3130B4 + 4 * byte_1DC42722F[v4]))();
}

_BYTE *sub_1DC313094(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1DC3130B4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC3130BC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC3130C4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC3130CC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC3130D4(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for WelcomeViewAnimator.Error()
{
  return &type metadata for WelcomeViewAnimator.Error;
}

uint64_t _s8StocksUI18WelcomeViewVariantOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1DC31313C + 4 * byte_1DC427239[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1DC313170 + 4 * byte_1DC427234[v4]))();
}

uint64_t sub_1DC313170(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC313178(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC313180);
  return result;
}

uint64_t sub_1DC31318C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC313194);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1DC313198(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC3131A0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WelcomeViewVariant()
{
  return &type metadata for WelcomeViewVariant;
}

unint64_t sub_1DC3131C0()
{
  unint64_t result;

  result = qword_1F0351C08;
  if (!qword_1F0351C08)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC427624, &type metadata for WelcomeViewVariant);
    atomic_store(result, (unint64_t *)&qword_1F0351C08);
  }
  return result;
}

unint64_t sub_1DC313208()
{
  unint64_t result;

  result = qword_1F0351C10;
  if (!qword_1F0351C10)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC42768C, &type metadata for WelcomeViewAnimator.Error);
    atomic_store(result, (unint64_t *)&qword_1F0351C10);
  }
  return result;
}

BOOL static SidebarAppearance.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t SidebarAppearance.hash(into:)()
{
  return sub_1DC409ACC();
}

uint64_t SidebarAppearance.hashValue.getter()
{
  sub_1DC409AC0();
  sub_1DC409ACC();
  return sub_1DC409AF0();
}

unint64_t sub_1DC313308()
{
  unint64_t result;

  result = qword_1F0351C18;
  if (!qword_1F0351C18)
  {
    result = MEMORY[0x1DF0CAB8C](&protocol conformance descriptor for SidebarAppearance, &type metadata for SidebarAppearance);
    atomic_store(result, (unint64_t *)&qword_1F0351C18);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for SidebarAppearance(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1DC313398 + 4 * byte_1DC427715[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1DC3133CC + 4 * asc_1DC427710[v4]))();
}

uint64_t sub_1DC3133CC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC3133D4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC3133DCLL);
  return result;
}

uint64_t sub_1DC3133E8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC3133F0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1DC3133F4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC3133FC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SidebarAppearance()
{
  return &type metadata for SidebarAppearance;
}

uint64_t *sub_1DC313418(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  int *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  char *v47;
  void (*v48)(char *, char *, uint64_t);
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  int *v58;
  char *v59;
  uint64_t *v60;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *a1 = *a2;
    v19 = v18 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    sub_1DC0F14E0();
    v7 = *(int *)(v6 + 48);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_1DC4010E4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    v11 = (int *)type metadata accessor for StockViewModel();
    v12 = v11[5];
    v13 = &v8[v12];
    v14 = &v9[v12];
    v15 = sub_1DC401030();
    v16 = *(_QWORD *)(v15 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
    {
      sub_1DC092F50(0, &qword_1EDB28DC0, (void (*)(uint64_t))MEMORY[0x1E0DAF040]);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
    }
    v20 = v11[6];
    v21 = &v8[v20];
    v22 = &v9[v20];
    v23 = (int *)type metadata accessor for StockSparklineViewModel(0);
    v24 = *((_QWORD *)v23 - 1);
    v60 = a1;
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v24 + 48))(v22, 1, v23))
    {
      sub_1DC092F50(0, &qword_1EDB353E0, (void (*)(uint64_t))type metadata accessor for StockSparklineViewModel);
      memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
    else
    {
      v26 = sub_1DC408614();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v21, v22, v26);
      v27 = v23[5];
      v28 = &v21[v27];
      v29 = &v22[v27];
      *(_QWORD *)v28 = *(_QWORD *)v29;
      v28[8] = v29[8];
      v30 = v23[6];
      v31 = &v21[v30];
      v32 = &v22[v30];
      *(_QWORD *)v31 = *(_QWORD *)v32;
      v31[8] = v32[8];
      v21[v23[7]] = v22[v23[7]];
      v33 = v23[8];
      v34 = &v21[v33];
      v35 = &v22[v33];
      v36 = sub_1DC400F7C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 16))(v34, v35, v36);
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v24 + 56))(v21, 0, 1, v23);
    }
    v37 = v11[7];
    v58 = v11;
    v59 = v8;
    v38 = &v8[v37];
    v39 = &v9[v37];
    *(_QWORD *)v38 = *(_QWORD *)&v9[v37];
    v38[8] = v9[v37 + 8];
    *((_QWORD *)v38 + 2) = *(_QWORD *)&v9[v37 + 16];
    v38[24] = v9[v37 + 24];
    *((_QWORD *)v38 + 4) = *(_QWORD *)&v9[v37 + 32];
    v38[40] = v9[v37 + 40];
    v40 = *(_QWORD *)&v9[v37 + 56];
    *((_QWORD *)v38 + 6) = *(_QWORD *)&v9[v37 + 48];
    *((_QWORD *)v38 + 7) = v40;
    v41 = *(_QWORD *)&v9[v37 + 72];
    *((_QWORD *)v38 + 8) = *(_QWORD *)&v9[v37 + 64];
    *((_QWORD *)v38 + 9) = v41;
    v38[80] = v9[v37 + 80];
    v42 = type metadata accessor for PriceViewModel();
    v43 = *(int *)(v42 + 40);
    v44 = &v38[v43];
    v45 = &v39[v43];
    v46 = sub_1DC4011C8();
    v47 = v9;
    v48 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v48(v44, v45, v46);
    v49 = *(int *)(v42 + 44);
    v50 = &v38[v49];
    v51 = &v39[v49];
    v52 = sub_1DC400118();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 16))(v50, v51, v52);
    v53 = v58[8];
    v54 = &v59[v53];
    v55 = &v47[v53];
    v56 = sub_1DC4008EC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v56 - 8) + 16))(v54, v55, v56);
    v59[v58[9]] = v47[v58[9]];
    return v60;
  }
  return (uint64_t *)v19;
}

_QWORD *sub_1DC31378C(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(char *, uint64_t, uint64_t);
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  int *v22;
  uint64_t v23;
  uint64_t (*v24)(char *, uint64_t, int *);
  int v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;

  *a1 = *a2;
  sub_1DC0F14E0();
  v5 = *(int *)(v4 + 48);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_1DC4010E4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 24))(v6, v7, v8);
  v9 = (int *)type metadata accessor for StockViewModel();
  v10 = v9[5];
  v11 = &v6[v10];
  v12 = &v7[v10];
  v13 = sub_1DC401030();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  v16 = v15(v11, 1, v13);
  v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v11, v13);
LABEL_6:
    sub_1DC092F50(0, &qword_1EDB28DC0, (void (*)(uint64_t))MEMORY[0x1E0DAF040]);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 24))(v11, v12, v13);
LABEL_7:
  v19 = v9[6];
  v20 = &v6[v19];
  v21 = &v7[v19];
  v22 = (int *)type metadata accessor for StockSparklineViewModel(0);
  v23 = *((_QWORD *)v22 - 1);
  v24 = *(uint64_t (**)(char *, uint64_t, int *))(v23 + 48);
  v25 = v24(v20, 1, v22);
  v26 = v24(v21, 1, v22);
  if (v25)
  {
    if (!v26)
    {
      v28 = sub_1DC408614();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v20, v21, v28);
      v29 = v22[5];
      v30 = &v20[v29];
      v31 = &v21[v29];
      v32 = *(_QWORD *)v31;
      v30[8] = v31[8];
      *(_QWORD *)v30 = v32;
      v33 = v22[6];
      v34 = &v20[v33];
      v35 = &v21[v33];
      LOBYTE(v32) = v35[8];
      *(_QWORD *)v34 = *(_QWORD *)v35;
      v34[8] = v32;
      v20[v22[7]] = v21[v22[7]];
      v36 = v22[8];
      v37 = &v20[v36];
      v38 = &v21[v36];
      v39 = sub_1DC400F7C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v37, v38, v39);
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v23 + 56))(v20, 0, 1, v22);
      goto LABEL_16;
    }
  }
  else
  {
    if (!v26)
    {
      v40 = sub_1DC408614();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 24))(v20, v21, v40);
      v41 = v22[5];
      v42 = &v20[v41];
      v43 = &v21[v41];
      v44 = *(_QWORD *)v43;
      v42[8] = v43[8];
      *(_QWORD *)v42 = v44;
      v45 = v22[6];
      v46 = &v20[v45];
      v47 = &v21[v45];
      LOBYTE(v44) = v47[8];
      *(_QWORD *)v46 = *(_QWORD *)v47;
      v46[8] = v44;
      v20[v22[7]] = v21[v22[7]];
      v48 = v22[8];
      v49 = &v20[v48];
      v50 = &v21[v48];
      v51 = sub_1DC400F7C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 24))(v49, v50, v51);
      goto LABEL_16;
    }
    sub_1DC0926D8((uint64_t)v20, type metadata accessor for StockSparklineViewModel);
  }
  sub_1DC092F50(0, &qword_1EDB353E0, (void (*)(uint64_t))type metadata accessor for StockSparklineViewModel);
  memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
LABEL_16:
  v52 = v9[7];
  v53 = &v6[v52];
  v54 = &v7[v52];
  v55 = *(_QWORD *)&v7[v52];
  v53[8] = v54[8];
  *(_QWORD *)v53 = v55;
  v56 = *((_QWORD *)v54 + 2);
  v53[24] = v54[24];
  *((_QWORD *)v53 + 2) = v56;
  v57 = *((_QWORD *)v54 + 4);
  v53[40] = v54[40];
  *((_QWORD *)v53 + 4) = v57;
  *((_QWORD *)v53 + 6) = *((_QWORD *)v54 + 6);
  *((_QWORD *)v53 + 7) = *((_QWORD *)v54 + 7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)v53 + 8) = *((_QWORD *)v54 + 8);
  *((_QWORD *)v53 + 9) = *((_QWORD *)v54 + 9);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v53[80] = v54[80];
  v58 = type metadata accessor for PriceViewModel();
  v59 = *(int *)(v58 + 40);
  v60 = &v53[v59];
  v61 = &v54[v59];
  v62 = sub_1DC4011C8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v62 - 8) + 24))(v60, v61, v62);
  v63 = *(int *)(v58 + 44);
  v64 = &v53[v63];
  v65 = &v54[v63];
  v66 = sub_1DC400118();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v66 - 8) + 24))(v64, v65, v66);
  v67 = v9[8];
  v68 = &v6[v67];
  v69 = &v7[v67];
  v70 = sub_1DC4008EC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v70 - 8) + 24))(v68, v69, v70);
  v6[v9[9]] = v7[v9[9]];
  return a1;
}

_QWORD *sub_1DC313BF0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(char *, uint64_t, uint64_t);
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  int *v22;
  uint64_t v23;
  uint64_t (*v24)(char *, uint64_t, int *);
  int v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;

  *a1 = *a2;
  sub_1DC0F14E0();
  v5 = *(int *)(v4 + 48);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_1DC4010E4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 40))(v6, v7, v8);
  v9 = (int *)type metadata accessor for StockViewModel();
  v10 = v9[5];
  v11 = &v6[v10];
  v12 = &v7[v10];
  v13 = sub_1DC401030();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  v16 = v15(v11, 1, v13);
  v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v12, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v11, v13);
LABEL_6:
    sub_1DC092F50(0, &qword_1EDB28DC0, (void (*)(uint64_t))MEMORY[0x1E0DAF040]);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 40))(v11, v12, v13);
LABEL_7:
  v19 = v9[6];
  v20 = &v6[v19];
  v21 = &v7[v19];
  v22 = (int *)type metadata accessor for StockSparklineViewModel(0);
  v23 = *((_QWORD *)v22 - 1);
  v24 = *(uint64_t (**)(char *, uint64_t, int *))(v23 + 48);
  v25 = v24(v20, 1, v22);
  v26 = v24(v21, 1, v22);
  if (v25)
  {
    if (!v26)
    {
      v28 = sub_1DC408614();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 32))(v20, v21, v28);
      v29 = v22[5];
      v30 = &v20[v29];
      v31 = &v21[v29];
      *(_QWORD *)v30 = *(_QWORD *)v31;
      v30[8] = v31[8];
      v32 = v22[6];
      v33 = &v20[v32];
      v34 = &v21[v32];
      *(_QWORD *)v33 = *(_QWORD *)v34;
      v33[8] = v34[8];
      v20[v22[7]] = v21[v22[7]];
      v35 = v22[8];
      v36 = &v20[v35];
      v37 = &v21[v35];
      v38 = sub_1DC400F7C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v36, v37, v38);
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v23 + 56))(v20, 0, 1, v22);
      goto LABEL_16;
    }
  }
  else
  {
    if (!v26)
    {
      v39 = sub_1DC408614();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 40))(v20, v21, v39);
      v40 = v22[5];
      v41 = &v20[v40];
      v42 = &v21[v40];
      *(_QWORD *)v41 = *(_QWORD *)v42;
      v41[8] = v42[8];
      v43 = v22[6];
      v44 = &v20[v43];
      v45 = &v21[v43];
      *(_QWORD *)v44 = *(_QWORD *)v45;
      v44[8] = v45[8];
      v20[v22[7]] = v21[v22[7]];
      v46 = v22[8];
      v47 = &v20[v46];
      v48 = &v21[v46];
      v49 = sub_1DC400F7C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 40))(v47, v48, v49);
      goto LABEL_16;
    }
    sub_1DC0926D8((uint64_t)v20, type metadata accessor for StockSparklineViewModel);
  }
  sub_1DC092F50(0, &qword_1EDB353E0, (void (*)(uint64_t))type metadata accessor for StockSparklineViewModel);
  memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
LABEL_16:
  v50 = v9[7];
  v51 = &v6[v50];
  v52 = &v7[v50];
  *(_QWORD *)v51 = *(_QWORD *)&v7[v50];
  v51[8] = v7[v50 + 8];
  *((_QWORD *)v51 + 2) = *(_QWORD *)&v7[v50 + 16];
  v51[24] = v7[v50 + 24];
  *((_QWORD *)v51 + 4) = *(_QWORD *)&v7[v50 + 32];
  v51[40] = v7[v50 + 40];
  v53 = *(_QWORD *)&v7[v50 + 56];
  *((_QWORD *)v51 + 6) = *(_QWORD *)&v7[v50 + 48];
  *((_QWORD *)v51 + 7) = v53;
  swift_bridgeObjectRelease();
  v54 = *((_QWORD *)v52 + 9);
  *((_QWORD *)v51 + 8) = *((_QWORD *)v52 + 8);
  *((_QWORD *)v51 + 9) = v54;
  swift_bridgeObjectRelease();
  v51[80] = v52[80];
  v55 = type metadata accessor for PriceViewModel();
  v56 = *(int *)(v55 + 40);
  v57 = &v51[v56];
  v58 = &v52[v56];
  v59 = sub_1DC4011C8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 40))(v57, v58, v59);
  v60 = *(int *)(v55 + 44);
  v61 = &v51[v60];
  v62 = &v52[v60];
  v63 = sub_1DC400118();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v63 - 8) + 40))(v61, v62, v63);
  v64 = v9[8];
  v65 = &v6[v64];
  v66 = &v7[v64];
  v67 = sub_1DC4008EC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v67 - 8) + 40))(v65, v66, v67);
  v6[v9[9]] = v7[v9[9]];
  return a1;
}

uint64_t sub_1DC314034()
{
  sub_1DC08AB48(&qword_1EDB2CA60, (uint64_t)&unk_1DC427870);
  return sub_1DC402E18();
}

uint64_t sub_1DC314080@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  v2 = sub_1DC406AFC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(a1, 1, 1, v2);
}

uint64_t sub_1DC3140C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DC3140E8(a1, MEMORY[0x1E0DB7520], MEMORY[0x1E0DB7528], a2);
}

uint64_t sub_1DC3140D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DC3140E8(a1, MEMORY[0x1E0DB7428], MEMORY[0x1E0DB7430], a2);
}

uint64_t sub_1DC3140E8@<X0>(uint64_t a1@<X0>, unsigned int *a2@<X2>, uint64_t (*a3)(_QWORD)@<X3>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  MEMORY[0x1E0C80A78](a1);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0F0F7C(v4, (uint64_t)v9);
  sub_1DC0F14E0();
  v11 = (uint64_t)&v9[*(int *)(v10 + 48)];
  v12 = *a2;
  v13 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(a4, v12, v13);
  return sub_1DC0926D8(v11, (uint64_t (*)(_QWORD))type metadata accessor for StockViewModel);
}

uint64_t sub_1DC31419C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v23;

  v4 = type metadata accessor for StockViewModel();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v23 - v8;
  sub_1DC3142E8();
  MEMORY[0x1E0C80A78](v10);
  v12 = (uint64_t *)((char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = (uint64_t *)((char *)v12 + *(int *)(v13 + 48));
  sub_1DC0F0F7C(a1, (uint64_t)v12);
  sub_1DC0F0F7C(a2, (uint64_t)v14);
  v15 = *v12;
  sub_1DC0F14E0();
  v17 = *(int *)(v16 + 48);
  v18 = (uint64_t)v12 + v17;
  v19 = *v14;
  v20 = (uint64_t)v14 + v17;
  sub_1DC0F0F38(v18, (uint64_t)v9);
  sub_1DC0F0F38(v20, (uint64_t)v6);
  if (v15 == v19)
    v21 = sub_1DC0FD638((uint64_t)v9, (uint64_t)v6);
  else
    v21 = 0;
  sub_1DC0926D8((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for StockViewModel);
  sub_1DC0926D8((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for StockViewModel);
  return v21 & 1;
}

void sub_1DC3142E8()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EDB27680)
  {
    type metadata accessor for TickerModel();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EDB27680);
  }
}

uint64_t sub_1DC314348(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t ObjectType;
  void (*v21)(char *, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _OWORD v25[2];
  uint64_t v26;
  _OWORD v27[2];
  uint64_t v28;

  v3 = type metadata accessor for StockListSelectionModel();
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC089DA4(0, (unint64_t *)&unk_1EDB29810, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD3C8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v22 - v7;
  v9 = type metadata accessor for StocksActivity(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC1E4ABC(0, (unint64_t *)&qword_1EDB28DF0, (void (*)(uint64_t))MEMORY[0x1E0DAF0D0]);
  v13 = *(int *)(v12 + 48);
  v14 = sub_1DC4010E4();
  v23 = *(_QWORD *)(v14 - 8);
  v24 = a1;
  v15 = *(void (**)(char *, uint64_t, uint64_t))(v23 + 16);
  v15(v11, a1, v14);
  *(_QWORD *)&v11[v13] = 0;
  type metadata accessor for StocksActivity.StockFeed(0);
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  v16 = *(_QWORD *)(v1 + 88);
  v17 = sub_1DC403340();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v8, 1, 1, v17);
  v28 = 0;
  memset(v27, 0, sizeof(v27));
  v26 = 0;
  memset(v25, 0, sizeof(v25));
  swift_retain();
  sub_1DC22BAE0((uint64_t)v11, v16, (uint64_t)v8, (uint64_t)v27, 0, 0, (uint64_t)v25);
  swift_release();
  sub_1DC0A6180((uint64_t)v25, (uint64_t)&qword_1EDB29410, (uint64_t)&unk_1EDB29400, MEMORY[0x1E0DB35B0], (uint64_t (*)(_QWORD))sub_1DC0A6204);
  sub_1DC0A6180((uint64_t)v27, (uint64_t)&qword_1EDB2ACD0, (uint64_t)&qword_1EDB2ACC0, MEMORY[0x1E0D53040], (uint64_t (*)(_QWORD))sub_1DC0A6204);
  sub_1DC0A6180((uint64_t)v8, (uint64_t)&unk_1EDB29810, (uint64_t)MEMORY[0x1E0DAD3C8], (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD))sub_1DC089DA4);
  sub_1DC0926D8((uint64_t)v11, type metadata accessor for StocksActivity);
  swift_release();
  result = MEMORY[0x1DF0CAD78](v1 + 24);
  if (result)
  {
    v19 = *(_QWORD *)(result + 40);
    ObjectType = swift_getObjectType();
    v15(v5, v24, v14);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v5, 0, 2, v14);
    v21 = *(void (**)(char *, uint64_t, uint64_t))(v19 + 88);
    swift_retain();
    v21(v5, ObjectType, v19);
    sub_1DC0926D8((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for StockListSelectionModel);
    swift_release();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1DC31464C(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  int v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  void *v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unsigned int *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t ObjectType;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(uint64_t, uint64_t, uint64_t);
  _QWORD v51[2];
  uint64_t *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(char *, uint64_t, uint64_t);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  _OWORD v62[2];
  uint64_t v63;
  _OWORD v64[2];
  uint64_t v65;

  v4 = v3;
  v8 = type metadata accessor for StockListSelectionModel();
  MEMORY[0x1E0C80A78](v8);
  v60 = (char *)v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1DC405D88();
  v54 = *(_QWORD *)(v10 - 8);
  v55 = v10;
  MEMORY[0x1E0C80A78](v10);
  v52 = (_QWORD *)((char *)v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v12);
  v53 = (char *)v51 - v13;
  sub_1DC089DA4(0, (unint64_t *)&unk_1EDB29810, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD3C8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v14);
  v61 = (char *)v51 - v15;
  v16 = type metadata accessor for StocksActivity(0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)v51 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)v51 - v20;
  v22 = type metadata accessor for StocksActivity.StockFeed.Series(0);
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)v51 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = *a3;
  v26 = sub_1DC4010E4();
  v57 = *(_QWORD *)(v26 - 8);
  v58 = v26;
  v27 = *(void (**)(char *, uint64_t, uint64_t))(v57 + 16);
  v59 = a1;
  v56 = v27;
  ((void (*)(char *, uint64_t))v27)(v24, a1);
  *(_QWORD *)&v24[*(int *)(v22 + 20)] = a2;
  if (v25)
  {
    v61 = v24;
    __swift_project_boxed_opaque_existential_1(v4 + 12, v4[15]);
    swift_bridgeObjectRetain();
    v28 = sub_1DC404B34();
    if (!v28)
    {
      v41 = (uint64_t)v61;
      return sub_1DC0926D8(v41, type metadata accessor for StocksActivity.StockFeed.Series);
    }
    v29 = (void *)v28;
    v51[1] = v4[10];
    sub_1DC0990BC((uint64_t)v61, (uint64_t)v18, type metadata accessor for StocksActivity.StockFeed.Series);
    sub_1DC1E4ABC(0, (unint64_t *)&qword_1EDB275E0, (void (*)(uint64_t))type metadata accessor for StocksActivity.StockFeed.Series);
    *(_QWORD *)&v18[*(int *)(v30 + 48)] = 2;
    type metadata accessor for StocksActivity.StockFeed(0);
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
    __swift_project_boxed_opaque_existential_1(v4 + 12, v4[15]);
    v31 = v29;
    v32 = sub_1DC404B40();
    if (v25 == 1)
    {

      v35 = v52;
      *v52 = v32;
      v42 = (unsigned int *)MEMORY[0x1E0DBAC78];
      v24 = v61;
      v33 = v55;
      v34 = v53;
    }
    else
    {
      v33 = v55;
      v34 = v53;
      if (v25 == 2)
      {

        v35 = v52;
        *v52 = 0;
      }
      else
      {
        v35 = v52;
        *v52 = (uint64_t)v29;
      }
      v35[1] = v32;
      v42 = (unsigned int *)MEMORY[0x1E0DBAC80];
      v24 = v61;
    }
    v43 = v54;
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(v54 + 104))(v35, *v42, v33);
    (*(void (**)(char *, uint64_t *, uint64_t))(v43 + 32))(v34, v35, v33);
    sub_1DC404510();

    (*(void (**)(char *, uint64_t))(v43 + 8))(v34, v33);
    sub_1DC0926D8((uint64_t)v18, type metadata accessor for StocksActivity);
  }
  else
  {
    sub_1DC1E4ABC(0, (unint64_t *)&qword_1EDB275E0, (void (*)(uint64_t))type metadata accessor for StocksActivity.StockFeed.Series);
    v37 = *(int *)(v36 + 48);
    sub_1DC0990BC((uint64_t)v24, (uint64_t)v21, type metadata accessor for StocksActivity.StockFeed.Series);
    *(_QWORD *)&v21[v37] = 0;
    type metadata accessor for StocksActivity.StockFeed(0);
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
    v38 = v4[11];
    v39 = sub_1DC403340();
    v40 = (uint64_t)v61;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v61, 1, 1, v39);
    v65 = 0;
    memset(v64, 0, sizeof(v64));
    v63 = 0;
    memset(v62, 0, sizeof(v62));
    swift_bridgeObjectRetain();
    swift_retain();
    sub_1DC22BAE0((uint64_t)v21, v38, v40, (uint64_t)v64, 0, 0, (uint64_t)v62);
    swift_release();
    sub_1DC0A6180((uint64_t)v62, (uint64_t)&qword_1EDB29410, (uint64_t)&unk_1EDB29400, MEMORY[0x1E0DB35B0], (uint64_t (*)(_QWORD))sub_1DC0A6204);
    sub_1DC0A6180((uint64_t)v64, (uint64_t)&qword_1EDB2ACD0, (uint64_t)&qword_1EDB2ACC0, MEMORY[0x1E0D53040], (uint64_t (*)(_QWORD))sub_1DC0A6204);
    sub_1DC0A6180(v40, (uint64_t)&unk_1EDB29810, (uint64_t)MEMORY[0x1E0DAD3C8], (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD))sub_1DC089DA4);
    sub_1DC0926D8((uint64_t)v21, type metadata accessor for StocksActivity);
    swift_release();
  }
  v44 = MEMORY[0x1DF0CAD78](v4 + 3);
  if (v44)
  {
    v45 = *(_QWORD *)(v44 + 40);
    ObjectType = swift_getObjectType();
    v47 = (uint64_t)v60;
    v48 = v58;
    v56(v60, v59, v58);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v57 + 56))(v47, 0, 2, v48);
    v49 = *(void (**)(uint64_t, uint64_t, uint64_t))(v45 + 88);
    swift_retain();
    v49(v47, ObjectType, v45);
    sub_1DC0926D8(v47, (uint64_t (*)(_QWORD))type metadata accessor for StockListSelectionModel);
    swift_unknownObjectRelease();
    sub_1DC0926D8((uint64_t)v24, type metadata accessor for StocksActivity.StockFeed.Series);
    return swift_release();
  }
  v41 = (uint64_t)v24;
  return sub_1DC0926D8(v41, type metadata accessor for StocksActivity.StockFeed.Series);
}

uint64_t sub_1DC314C64(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE v20[16];
  _BYTE v21[40];
  _QWORD v22[5];
  _OWORD v23[2];
  uint64_t v24;

  v5 = type metadata accessor for StocksActivity(0);
  MEMORY[0x1E0C80A78](v5);
  v7 = &v20[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = type metadata accessor for StocksActivity.StockFeed.Series(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = &v20[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = sub_1DC4010E4();
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v10, a1, v11);
  *(_QWORD *)&v10[*(int *)(v8 + 20)] = a2;
  v12 = *(_QWORD *)(v2 + 80);
  sub_1DC1E4ABC(0, (unint64_t *)&qword_1EDB275E0, (void (*)(uint64_t))type metadata accessor for StocksActivity.StockFeed.Series);
  v14 = *(int *)(v13 + 48);
  sub_1DC0990BC((uint64_t)v10, (uint64_t)v7, type metadata accessor for StocksActivity.StockFeed.Series);
  *(_QWORD *)&v7[v14] = 0;
  type metadata accessor for StocksActivity.StockFeed(0);
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  v15 = *(_QWORD *)(v2 + 88);
  v24 = 0;
  memset(v23, 0, sizeof(v23));
  v22[4] = v12;
  v22[3] = sub_1DC4018AC();
  v22[0] = v15;
  v16 = MEMORY[0x1E0D53040];
  sub_1DC316088((uint64_t)v23, (uint64_t)v21, (uint64_t)&qword_1EDB2ACD0, (uint64_t)&qword_1EDB2ACC0, MEMORY[0x1E0D53040], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1DC0A6204);
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v15;
  sub_1DC316038((uint64_t)v21, v17 + 24, (uint64_t)&qword_1EDB2ACD0, (uint64_t)&qword_1EDB2ACC0, v16, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1DC0A6204);
  sub_1DC083C10();
  sub_1DC081B48((unint64_t *)&qword_1EDB29CA0, 255, (uint64_t (*)(uint64_t))sub_1DC083C10, MEMORY[0x1E0DB75C0]);
  swift_retain_n();
  swift_bridgeObjectRetain();
  swift_retain();
  v18 = sub_1DC406E08();
  swift_release();
  sub_1DC0926D8((uint64_t)v22, (uint64_t (*)(_QWORD))sub_1DC0D11C4);
  sub_1DC0A6180((uint64_t)v23, (uint64_t)&qword_1EDB2ACD0, (uint64_t)&qword_1EDB2ACC0, MEMORY[0x1E0D53040], (uint64_t (*)(_QWORD))sub_1DC0A6204);
  sub_1DC0926D8((uint64_t)v7, type metadata accessor for StocksActivity);
  swift_release();
  sub_1DC0926D8((uint64_t)v10, type metadata accessor for StocksActivity.StockFeed.Series);
  return v18;
}

uint64_t sub_1DC314F38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t ObjectType;
  uint64_t v19;
  void (*v20)(_BYTE *, uint64_t, uint64_t);
  _BYTE v21[16];
  _OWORD v22[2];
  uint64_t v23;
  _OWORD v24[2];
  uint64_t v25;

  v1 = type metadata accessor for StockListSelectionModel();
  MEMORY[0x1E0C80A78](v1);
  v3 = &v21[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1DC089DA4(0, (unint64_t *)&unk_1EDB29810, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD3C8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v6 = &v21[-v5];
  v7 = type metadata accessor for StocksActivity(0);
  MEMORY[0x1E0C80A78](v7);
  v9 = &v21[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1DC25604C();
  v11 = &v9[*(int *)(v10 + 48)];
  type metadata accessor for ForYouSectionDescriptor();
  swift_storeEnumTagMultiPayload();
  v12 = *MEMORY[0x1E0DBA290];
  v13 = sub_1DC4059F8();
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v11, v12, v13);
  swift_storeEnumTagMultiPayload();
  v14 = *(_QWORD *)(v0 + 88);
  v15 = sub_1DC403340();
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v6, 1, 1, v15);
  v25 = 0;
  memset(v24, 0, sizeof(v24));
  v23 = 0;
  memset(v22, 0, sizeof(v22));
  swift_retain();
  sub_1DC22BAE0((uint64_t)v9, v14, (uint64_t)v6, (uint64_t)v24, 0, 0, (uint64_t)v22);
  swift_release();
  sub_1DC0A6180((uint64_t)v22, (uint64_t)&qword_1EDB29410, (uint64_t)&unk_1EDB29400, MEMORY[0x1E0DB35B0], (uint64_t (*)(_QWORD))sub_1DC0A6204);
  sub_1DC0A6180((uint64_t)v24, (uint64_t)&qword_1EDB2ACD0, (uint64_t)&qword_1EDB2ACC0, MEMORY[0x1E0D53040], (uint64_t (*)(_QWORD))sub_1DC0A6204);
  sub_1DC0A6180((uint64_t)v6, (uint64_t)&unk_1EDB29810, (uint64_t)MEMORY[0x1E0DAD3C8], (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD))sub_1DC089DA4);
  sub_1DC0926D8((uint64_t)v9, type metadata accessor for StocksActivity);
  swift_release();
  result = MEMORY[0x1DF0CAD78](v0 + 24);
  if (result)
  {
    v17 = *(_QWORD *)(result + 40);
    ObjectType = swift_getObjectType();
    v19 = sub_1DC4010E4();
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v3, 1, 2, v19);
    v20 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v17 + 88);
    swift_retain();
    v20(v3, ObjectType, v17);
    sub_1DC0926D8((uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for StockListSelectionModel);
    swift_release();
    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_1DC31521C(id *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  void *v20;
  void *v21;
  _QWORD *v22;
  void *v23;
  id v24;
  uint64_t (*v25)(uint64_t);
  uint64_t v26;
  id v27;
  _QWORD aBlock[6];

  v6 = sub_1DC40724C();
  v27 = *(id *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1DC407270();
  v10 = *(_QWORD *)(v9 - 8);
  *(_QWORD *)&v11 = MEMORY[0x1E0C80A78](v9).n128_u64[0];
  v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *a1;
  v15 = objc_msgSend(*a1, sel_view, v11);
  if (v15)
  {
    v16 = v15;
    v17 = objc_msgSend(v15, sel_superview);

    if (v17)
    {
      v18 = objc_msgSend(v14, sel_searchBar);
      objc_msgSend(v18, sel_becomeFirstResponder);

      v19 = objc_msgSend(v14, sel_searchBar);
      if (a3)
        v20 = (void *)sub_1DC408A1C();
      else
        v20 = 0;
      v27 = v20;
      objc_msgSend(v19, sel_setText_);

    }
    else
    {
      sub_1DC0ACADC();
      v21 = (void *)sub_1DC409148();
      v22 = (_QWORD *)swift_allocObject();
      v22[2] = v14;
      v22[3] = a2;
      v22[4] = a3;
      aBlock[4] = sub_1DC315D58;
      aBlock[5] = v22;
      aBlock[0] = MEMORY[0x1E0C809B0];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1DC081B88;
      aBlock[3] = &block_descriptor_35;
      v23 = _Block_copy(aBlock);
      swift_bridgeObjectRetain();
      v24 = v14;
      swift_release();
      sub_1DC407264();
      aBlock[0] = MEMORY[0x1E0DEE9D8];
      v25 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
      sub_1DC081B48(&qword_1EDB275A0, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
      sub_1DC089DA4(0, (unint64_t *)&unk_1EDB3F710, v25, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1DC1B5D98();
      sub_1DC40964C();
      MEMORY[0x1DF0C99C8](0, v13, v8, v23);
      _Block_release(v23);

      (*((void (**)(char *, uint64_t))v27 + 1))(v8, v6);
      (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_1DC315518(void *a1, uint64_t a2, uint64_t a3)
{
  id v5;
  id v6;
  uint64_t v7;
  id v8;

  v5 = objc_msgSend(a1, sel_searchBar);
  objc_msgSend(v5, sel_becomeFirstResponder);

  v6 = objc_msgSend(a1, sel_searchBar);
  if (a3)
    v7 = sub_1DC408A1C();
  else
    v7 = 0;
  v8 = (id)v7;
  objc_msgSend(v6, sel_setText_);

}

uint64_t sub_1DC3155CC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v15[16];
  _OWORD v16[2];
  uint64_t v17;
  _OWORD v18[2];
  uint64_t v19;

  sub_1DC089DA4(0, (unint64_t *)&unk_1EDB29810, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD3C8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v5 = &v15[-v4];
  v6 = type metadata accessor for StocksActivity(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1DC17CCB0();
  v10 = *(int *)(v9 + 48);
  v11 = sub_1DC4010E4();
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v8, 1, 1, v11);
  *(_QWORD *)&v8[v10] = a1;
  swift_storeEnumTagMultiPayload();
  v12 = *(_QWORD *)(v1 + 88);
  v13 = sub_1DC403340();
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v5, 1, 1, v13);
  v19 = 0;
  memset(v18, 0, sizeof(v18));
  v17 = 0;
  memset(v16, 0, sizeof(v16));
  swift_retain();
  swift_retain();
  sub_1DC22BAE0((uint64_t)v8, v12, (uint64_t)v5, (uint64_t)v18, 0, 0, (uint64_t)v16);
  swift_release();
  sub_1DC0A6180((uint64_t)v16, (uint64_t)&qword_1EDB29410, (uint64_t)&unk_1EDB29400, MEMORY[0x1E0DB35B0], (uint64_t (*)(_QWORD))sub_1DC0A6204);
  sub_1DC0A6180((uint64_t)v18, (uint64_t)&qword_1EDB2ACD0, (uint64_t)&qword_1EDB2ACC0, MEMORY[0x1E0D53040], (uint64_t (*)(_QWORD))sub_1DC0A6204);
  sub_1DC0A6180((uint64_t)v5, (uint64_t)&unk_1EDB29810, (uint64_t)MEMORY[0x1E0DAD3C8], (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD))sub_1DC089DA4);
  sub_1DC0926D8((uint64_t)v8, type metadata accessor for StocksActivity);
  return swift_release();
}

void sub_1DC3157E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;

  v0 = type metadata accessor for StocksActivity.StockFeed.Series(0);
  MEMORY[0x1E0C80A78](v0);
  v1 = sub_1DC4010E4();
  MEMORY[0x1E0C80A78](v1);
  v2 = type metadata accessor for StocksActivity.StockFeed(0);
  MEMORY[0x1E0C80A78](v2);
  MEMORY[0x1E0C80A78](v3);
  v4 = type metadata accessor for StocksActivity(0);
  MEMORY[0x1E0C80A78](v4);
  sub_1DC08CCDC(0, (unint64_t *)&qword_1EDB2A920, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DBC2E0]);
  sub_1DC406838();
  v5 = (char *)sub_1DC315950 + 4 * byte_1DC4279F0[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1DC315950()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1DC0926D8(v0, type metadata accessor for StocksActivity);
  v2 = *MEMORY[0x1E0DBA4F8];
  v3 = sub_1DC405AA0();
  return (*(uint64_t (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(*(_QWORD *)(v1 - 96), v2, v3);
}

void sub_1DC3159AC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  JUMPOUT(0x1DC315960);
}

void sub_1DC3159C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1DC25604C();
  v3 = v0 + *(int *)(v2 + 48);
  sub_1DC314F38();
  v4 = *MEMORY[0x1E0DBA4E8];
  v5 = sub_1DC405AA0();
  (*(void (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(*(_QWORD *)(v1 - 96), v4, v5);
  v6 = sub_1DC4059F8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v3, v6);
  sub_1DC0926D8(v0, (uint64_t (*)(_QWORD))type metadata accessor for ForYouSectionDescriptor);
  JUMPOUT(0x1DC31598CLL);
}

void sub_1DC315A38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_1DC092ED0(v5, v4, type metadata accessor for StocksActivity.StockFeed);
  if (qword_1EDB29178 != -1)
    swift_once();
  *(_BYTE *)(v7 - 81) = 3;
  swift_retain();
  sub_1DC402560();
  swift_release();
  sub_1DC0990BC(v4, v6, type metadata accessor for StocksActivity.StockFeed);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1DC092ED0(v6, v3, type metadata accessor for StocksActivity.StockFeed.Series);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 16))(v2, v3, v1);
    sub_1DC0926D8(v3, type metadata accessor for StocksActivity.StockFeed.Series);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 32))(v2, v6, v1);
  }
  sub_1DC314348(v2);
  (*(void (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
  sub_1DC0926D8(v4, type metadata accessor for StocksActivity.StockFeed);
  JUMPOUT(0x1DC315968);
}

uint64_t sub_1DC315C40()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy();
  sub_1DC148A20(v0 + 24);
  __swift_destroy_boxed_opaque_existential_1(v0 + 40);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  return swift_deallocClassInstance();
}

uint64_t sub_1DC315C90(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = sub_1DC081B48(&qword_1EDB2E730, a2, (uint64_t (*)(uint64_t))type metadata accessor for StockListRouter, (uint64_t)&unk_1DC427A80);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1DC315CCC()
{
  uint64_t v0;

  swift_release();
  if (*(_QWORD *)(v0 + 48))
    __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  return swift_deallocObject();
}

uint64_t sub_1DC315D00()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1DC315D24(id *a1)
{
  uint64_t v1;

  sub_1DC31521C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1DC315D2C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1DC315D58()
{
  uint64_t v0;

  sub_1DC315518(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_1DC315D64(uint64_t a1)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t (*v9)(void);
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  id v19;
  void *v20;
  void *v21;
  uint64_t v23;
  char *v24;

  v2 = sub_1DC3FFDD0();
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8];
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v24 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for StockListRouteModel();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0DEB940];
  sub_1DC089DA4(0, (unint64_t *)&unk_1EDB28A70, v3, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v23 - v14;
  sub_1DC0990BC(a1, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for StockListRouteModel);
  v16 = (uint64_t)v8;
  v17 = v2;
  sub_1DC316038(v16, (uint64_t)v15, (uint64_t)&unk_1EDB28A70, (uint64_t)v3, (uint64_t)v9, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1DC089DA4);
  sub_1DC316088((uint64_t)v15, (uint64_t)v12, (uint64_t)&unk_1EDB28A70, (uint64_t)v3, (uint64_t)v9, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1DC089DA4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v12, 1, v2) == 1)
  {
    sub_1DC0A6180((uint64_t)v15, (uint64_t)&unk_1EDB28A70, (uint64_t)MEMORY[0x1E0CAFFF8], (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD))sub_1DC089DA4);
  }
  else
  {
    v18 = v24;
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v24, v12, v17);
    v19 = objc_msgSend((id)objc_opt_self(), sel_sharedApplication);
    v20 = (void *)sub_1DC3FFD88();
    sub_1DC1A1DA0(MEMORY[0x1E0DEE9D8]);
    type metadata accessor for OpenExternalURLOptionsKey(0);
    sub_1DC081B48(&qword_1F034BCC0, 255, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_1DC40D990);
    v21 = (void *)sub_1DC408980();
    swift_bridgeObjectRelease();
    objc_msgSend(v19, sel_openURL_options_completionHandler_, v20, v21, 0);

    (*(void (**)(char *, uint64_t))(v4 + 8))(v18, v17);
    v12 = v15;
  }
  return sub_1DC0A6180((uint64_t)v12, (uint64_t)&unk_1EDB28A70, (uint64_t)MEMORY[0x1E0CAFFF8], (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD))sub_1DC089DA4);
}

uint64_t sub_1DC316038(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(_QWORD, uint64_t, uint64_t, uint64_t))
{
  uint64_t v8;

  v8 = a6(0, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a2, a1, v8);
  return a2;
}

uint64_t sub_1DC316088(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(_QWORD, uint64_t, uint64_t, uint64_t))
{
  uint64_t v8;

  v8 = a6(0, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a2, a1, v8);
  return a2;
}

uint64_t sub_1DC3160D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint8_t *v24;
  char *v25;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;

  v37 = a3;
  sub_1DC31644C();
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1DC407E10();
  v35 = *(_QWORD *)(v6 - 8);
  v36 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1DC407F54();
  v31 = *(_QWORD *)(v9 - 8);
  v32 = v9;
  MEMORY[0x1E0C80A78](v9);
  v33 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1DC40814C();
  v28 = *(_QWORD *)(v11 - 8);
  v29 = v11;
  MEMORY[0x1E0C80A78](v11);
  v30 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC1A76B0();
  v14 = v13;
  v15 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v34 = (char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1DC403F64();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v27 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC09BDF8();
  sub_1DC409598();
  sub_1DC403F70();
  v21 = sub_1DC403F4C();
  v22 = sub_1DC408FE0();
  if (os_log_type_enabled(v21, v22))
  {
    v23 = (uint8_t *)swift_slowAlloc();
    v27 = v8;
    v24 = v23;
    *(_WORD *)v23 = 0;
    _os_log_impl(&dword_1DC07D000, v21, v22, "Observed audio finished playing, closing player", v23, 2u);
    v8 = v27;
    MEMORY[0x1DF0CAC88](v24, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  (*(void (**)(char *, _QWORD, uint64_t))(v28 + 104))(v30, *MEMORY[0x1E0D5E7A8], v29);
  (*(void (**)(char *, _QWORD, uint64_t))(v31 + 104))(v33, *MEMORY[0x1E0D5DBC0], v32);
  (*(void (**)(char *, _QWORD, uint64_t))(v35 + 104))(v8, *MEMORY[0x1E0D5D4B8], v36);
  v38 = 0u;
  v39 = 0u;
  v25 = v34;
  sub_1DC40808C();
  swift_getObjectType();
  sub_1DC4069E8();
  (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v5, v25, v14);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v5, 0, 1, v14);
  sub_1DC404AD4();
  swift_release();
  sub_1DC3164A0((uint64_t)v5);
  return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v25, v14);
}

void sub_1DC31644C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F0351C20)
  {
    sub_1DC1A76B0();
    v0 = sub_1DC4095A4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1F0351C20);
  }
}

uint64_t sub_1DC3164A0(uint64_t a1)
{
  uint64_t v2;

  sub_1DC31644C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1DC3165F0(_QWORD *a1@<X8>)
{
  *a1 = 0x405D000000000000;
}

void sub_1DC3165FC(_QWORD *a1@<X8>)
{
  *a1 = 0x4062600000000000;
}

__n128 sub_1DC31660C@<Q0>(double *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  uint64_t inited;
  void *v19;
  uint64_t v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  void *v25;
  void *v26;
  double v27;
  void *v28;
  void *v29;
  id v30;
  void *v31;
  id v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  double v38;
  double v39;
  double v40;
  unsigned int v41;
  double *v42;
  double v43;
  double v44;
  double v45;
  double v46;
  double v47;
  double v48;
  double v49;
  double v50;
  double v51;
  double v52;
  double v53;
  double v54;
  double v55;
  double v56;
  double v57;
  double v58;
  double v59;
  double v60;
  double v61;
  double v62;
  double v63;
  double v64;
  double v65;
  double v66;
  double v67;
  double v68;
  double v69;
  CGFloat v70;
  void *v71;
  double v72;
  double v73;
  void *v74;
  double v75;
  double v76;
  CGFloat v77;
  uint64_t v78;
  uint64_t v79;
  CGFloat v80;
  char *v81;
  CGFloat v82;
  uint64_t v83;
  double v84;
  double v85;
  uint64_t v86;
  char v87;
  double v88;
  double v89;
  double v90;
  void *v91;
  double v92;
  double v93;
  double v94;
  void *v95;
  double v96;
  double v97;
  CGFloat v98;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat MinY;
  CGFloat v103;
  char v104;
  void *v105;
  uint64_t v106;
  char *v107;
  double v108;
  double v109;
  double v110;
  CGFloat v111;
  double v112;
  double v113;
  CGFloat v114;
  double MaxY;
  char v116;
  double v117;
  CGFloat v118;
  double v119;
  double v120;
  void *v121;
  double v122;
  double v123;
  double v124;
  double v125;
  double v126;
  CGFloat v127;
  uint64_t v128;
  unint64_t v129;
  CGFloat v130;
  CGFloat v131;
  CGFloat v132;
  CGFloat v133;
  char *v134;
  CGFloat v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  __int128 v139;
  uint64_t v140;
  __int128 v141;
  __int128 v142;
  __int128 v143;
  __n128 result;
  uint64_t v145;
  double v146;
  char *v147;
  double v148;
  double v149;
  CGFloat v150;
  CGFloat v151;
  char *v152;
  uint64_t v153;
  CGFloat v154;
  CGFloat v155;
  CGFloat v156;
  CGFloat v157;
  uint64_t v158;
  CGFloat v159;
  CGFloat v160;
  CGFloat v161;
  CGFloat height;
  double v163;
  id v164;
  CGFloat v165;
  double *v166;
  double v167;
  __int128 v168;
  __int128 v169;
  __int128 v170;
  __n128 v171;
  __int128 v172;
  __int128 v173;
  __int128 v174;
  __int128 v175;
  __int128 v176;
  __int128 v177;
  __int128 v178;
  CGRect v179;
  CGRect v180;
  CGRect v181;
  CGRect v182;
  CGRect v183;
  CGRect v184;
  CGRect v185;
  CGRect v186;
  CGRect v187;

  v158 = a2;
  sub_1DC089DA4(0, &qword_1EDB28AD0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0AE8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  *(_QWORD *)&height = (char *)&v145 - v5;
  v159 = COERCE_DOUBLE(sub_1DC400100());
  v157 = *(double *)(*(_QWORD *)&v159 - 8);
  MEMORY[0x1E0C80A78](*(_QWORD *)&v159);
  *(_QWORD *)&v156 = (char *)&v145 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(double *)&v7 = COERCE_DOUBLE(sub_1DC400118());
  v153 = *(_QWORD *)(v7 - 8);
  v154 = *(double *)&v7;
  MEMORY[0x1E0C80A78](v7);
  v152 = (char *)&v145 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(double *)&v9 = COERCE_DOUBLE(sub_1DC40007C());
  v160 = *(double *)(v9 - 8);
  v161 = *(double *)&v9;
  MEMORY[0x1E0C80A78](v9);
  v147 = (char *)&v145 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v167 = COERCE_DOUBLE(sub_1DC3FFFEC());
  v151 = *(double *)(*(_QWORD *)&v167 - 8);
  MEMORY[0x1E0C80A78](*(_QWORD *)&v167);
  v12 = (char *)&v145 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *a1;
  v14 = a1[1];
  v15 = a1[3];
  v166 = a1;
  v16 = a1[5];
  v163 = v13;
  v165 = v15;
  v17 = v13 - v15;
  sub_1DC089DA4(0, (unint64_t *)&qword_1EDB40090, (uint64_t (*)(uint64_t))sub_1DC112C08, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DC40C740;
  v19 = (void *)*MEMORY[0x1E0DC1138];
  *(_QWORD *)(inited + 32) = *MEMORY[0x1E0DC1138];
  *(double *)&v20 = COERCE_DOUBLE(sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FB00));
  swift_bridgeObjectRetain_n();
  v21 = v19;
  sub_1DC4073B4();
  *(_QWORD *)(inited + 40) = v168;
  v22 = (void *)*MEMORY[0x1E0DC1150];
  v155 = *(double *)&v20;
  *(double *)(inited + 64) = *(double *)&v20;
  *(_QWORD *)(inited + 72) = v22;
  *(_QWORD *)(inited + 104) = MEMORY[0x1E0DEB070];
  *(_QWORD *)(inited + 80) = 0xBFD3333333333333;
  v23 = v22;
  sub_1DC0FA3C4(inited);
  v24 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  v25 = (void *)sub_1DC408A1C();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1DC080808((unint64_t *)&qword_1EDB3F988, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1DC40D90C);
  v26 = (void *)sub_1DC408980();
  swift_bridgeObjectRelease();
  v164 = objc_msgSend(v24, sel_initWithString_attributes_, v25, v26);
  swift_bridgeObjectRelease();

  __swift_project_boxed_opaque_existential_1((_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 40));
  if (qword_1EDB40B10 != -1)
    swift_once();
  v27 = v17 - v16;
  v28 = (void *)qword_1EDB40B00;
  v146 = v16;
  if (qword_1EDB40B00)
  {
    sub_1DC3FFFE0();
    v29 = (void *)sub_1DC3FFF50();
    (*(void (**)(char *, double))(*(_QWORD *)&v151 + 8))(v12, COERCE_DOUBLE(*(_QWORD *)&v167));
    v30 = objc_msgSend(v28, sel_stringFromDate_, v29);

    sub_1DC408A4C();
  }
  v31 = v164;
  v32 = sub_1DC237494();
  swift_bridgeObjectRelease();
  objc_msgSend(v31, sel_boundingRectWithSize_options_context_, 1, 0, v17 - v16, v14);
  v34 = v33;
  v36 = v35;
  v38 = v37;
  v40 = v39;
  v41 = objc_msgSend(v31, sel_su_containsExcessiveLineHeightCharacter);
  v42 = (double *)MEMORY[0x1E0DC49E8];
  if (v41)
  {
    objc_msgSend(*((id *)v166 + 6), sel_displayScale);
    objc_msgSend(v31, sel_su_languageAwareOutsetsAtScale_);
    v44 = v43;
    v46 = v45;
    v48 = v47;
    v50 = v49;
  }
  else
  {
    v44 = *MEMORY[0x1E0DC49E8];
    v46 = *(double *)(MEMORY[0x1E0DC49E8] + 8);
    v48 = *(double *)(MEMORY[0x1E0DC49E8] + 16);
    v50 = *(double *)(MEMORY[0x1E0DC49E8] + 24);
  }
  v51 = UIEdgeInsetsInsetRect_0(v34, v36, v38, v40, v44, v46, v48, v50);
  v150 = v52;
  v151 = v51;
  v148 = v27;
  v167 = v14;
  objc_msgSend(v32, sel_boundingRectWithSize_options_context_, 0, 0, v27, v14);
  v54 = v53;
  v56 = v55;
  v58 = v57;
  v60 = v59;
  if (objc_msgSend(v32, sel_su_containsExcessiveLineHeightCharacter))
  {
    objc_msgSend(*((id *)v166 + 6), sel_displayScale);
    objc_msgSend(v32, sel_su_languageAwareOutsetsAtScale_);
    v62 = v61;
    v64 = v63;
    v66 = v65;
    v68 = v67;
  }
  else
  {
    v62 = *v42;
    v64 = v42[1];
    v66 = v42[2];
    v68 = v42[3];
  }
  v149 = UIEdgeInsetsInsetRect_0(v54, v56, v58, v60, v62, v64, v66, v68);
  v70 = v69;
  v71 = (void *)sub_1DC4091A8();
  objc_msgSend(v71, sel_ascender);
  v73 = v72;

  v74 = (void *)sub_1DC4091A8();
  objc_msgSend(v74, sel_capHeight);
  v76 = v75;

  sub_1DC089DA4(0, &qword_1F0351C38, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0AE8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v77 = v160;
  v78 = swift_allocObject();
  *(_OWORD *)(v78 + 16) = xmmword_1DC40FA70;
  sub_1DC400070();
  sub_1DC400070();
  sub_1DC400070();
  v79 = sub_1DC368D60(v78);
  swift_setDeallocating();
  v80 = v161;
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v81 = v152;
  sub_1DC4000DC();
  v82 = v156;
  sub_1DC40010C();
  (*(void (**)(char *, CGFloat))(v153 + 8))(v81, COERCE_CGFLOAT(*(_QWORD *)&v154));
  v83 = *(_QWORD *)&height;
  sub_1DC4000E8();
  (*(void (**)(CGFloat, CGFloat))(*(_QWORD *)&v157 + 8))(COERCE_CGFLOAT(*(_QWORD *)&v82), COERCE_CGFLOAT(*(_QWORD *)&v159));
  if ((*(unsigned int (**)(uint64_t, uint64_t, CGFloat))(*(_QWORD *)&v77 + 48))(v83, 1, COERCE_CGFLOAT(*(_QWORD *)&v80)) == 1)
  {
    swift_bridgeObjectRelease();
    sub_1DC3174E8(v83);
    v84 = 0.0;
  }
  else
  {
    v85 = v73 - v76;
    v86 = (uint64_t)v147;
    (*(void (**)(char *, uint64_t, CGFloat))(*(_QWORD *)&v77 + 32))(v147, v83, COERCE_CGFLOAT(*(_QWORD *)&v80));
    v87 = sub_1DC151A54(v86, v79);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, CGFloat))(*(_QWORD *)&v77 + 8))(v86, COERCE_CGFLOAT(*(_QWORD *)&v80));
    if ((v87 & 1) != 0)
      v84 = v62 - v85;
    else
      v84 = 0.0;
  }
  v88 = v167;
  sub_1DC408F80();
  v90 = fmax(-v89, 5.0);
  sub_1DC4073B4();
  v91 = (void *)v168;
  objc_msgSend((id)v168, sel_descender);
  v93 = v92;

  v94 = v90 - v93;
  v95 = (void *)sub_1DC4091A8();
  objc_msgSend(v95, sel_ascender);
  v97 = v96;

  v179.origin.y = v88 - v97 - v94;
  v98 = v165;
  v179.origin.x = v165;
  v179.size.width = v149;
  v179.size.height = v70;
  v180 = CGRectIntegral(v179);
  x = v180.origin.x;
  y = v180.origin.y;
  width = v180.size.width;
  height = v180.size.height;
  MinY = CGRectGetMinY(v180);
  v181.size.height = v150;
  v181.size.width = v151;
  v181.origin.y = MinY - v84 - v150;
  v181.origin.x = v98;
  v182 = CGRectIntegral(v181);
  v103 = v182.origin.x;
  v160 = v182.size.width;
  v161 = v182.origin.y;
  v159 = v182.size.height;
  swift_retain();
  v104 = sub_1DC397AB0();
  v105 = v164;
  if ((v104 & 1) != 0)
  {
    if (qword_1EDB42978 != -1)
      swift_once();
    type metadata accessor for ForYouMastheadModel();
    sub_1DC080808(&qword_1F034BA40, (uint64_t (*)(uint64_t))type metadata accessor for ForYouMastheadModel, (uint64_t)&unk_1DC42D554);
    sub_1DC4012D0();
    swift_release();
    v106 = 0;
    v107 = 0;
    v108 = 0.0;
    v109 = 0.0;
    if ((v168 & 1) != 0)
    {
      sub_1DC403C34();
      sub_1DC403C10();
      v111 = v110;
      v113 = v112;
      v183.size.height = height;
      v114 = v163 - v110 - v146;
      v183.origin.x = x;
      v183.origin.y = y;
      v183.size.width = width;
      MaxY = CGRectGetMaxY(v183);
      v184.origin.x = v103;
      v184.size.width = v160;
      v184.origin.y = v161;
      v184.size.height = v159;
      v185.origin.y = (MaxY + CGRectGetMinY(v184)) * 0.5 - v113 * 0.5;
      v185.origin.x = v114;
      v185.size.width = v111;
      v185.size.height = v113;
      *(CGRect *)&v106 = CGRectIntegral(v185);
    }
  }
  else
  {
    swift_release();
    v106 = 0;
    v107 = 0;
    v108 = 0.0;
    v109 = 0.0;
  }
  v150 = v109;
  v151 = v108;
  v152 = v107;
  v153 = v106;
  v155 = width;
  v156 = y;
  swift_retain();
  v116 = sub_1DC397AB0();
  swift_release();
  v117 = 0.0;
  v118 = 0.0;
  v119 = 0.0;
  if ((v116 & 1) == 0)
  {
    objc_msgSend(*((id *)v166 + 6), sel_displayScale);
    v118 = v148;
    v119 = 1.0 / v120;
  }
  v154 = v103;
  v157 = x;
  sub_1DC136F04();
  swift_retain();
  sub_1DC4073B4();
  swift_release();
  v121 = (void *)v168;
  v122 = 0.0;
  if ((_QWORD)v168)
  {
    objc_msgSend((id)v168, sel_size);
    v122 = v123;
    v117 = v124;

  }
  v125 = v167 + -2.0;
  v126 = v163;
  v127 = v165;
  v186.origin.x = v165;
  v186.origin.y = v167 + -2.0;
  v186.size.width = v118;
  v186.size.height = v119;
  v187.origin.y = CGRectGetMaxY(v186) - v117;
  v187.origin.x = v126 - v122;
  v187.size.width = v122;
  v187.size.height = v117;
  CGRectIntegral(v187);
  v129 = MEMORY[0x1E0C80A78](v128).n128_u64[0];
  *(&v145 - 22) = (uint64_t)v166;
  v130 = v161;
  *((CGFloat *)&v145 - 21) = v154;
  *((CGFloat *)&v145 - 20) = v130;
  v131 = v159;
  *((CGFloat *)&v145 - 19) = v160;
  *((CGFloat *)&v145 - 18) = v131;
  v132 = v156;
  *((CGFloat *)&v145 - 17) = v157;
  *((CGFloat *)&v145 - 16) = v132;
  v133 = height;
  *((CGFloat *)&v145 - 15) = v155;
  *((CGFloat *)&v145 - 14) = v133;
  *((CGFloat *)&v145 - 13) = v127;
  *((double *)&v145 - 12) = v125;
  *((CGFloat *)&v145 - 11) = v118;
  *((double *)&v145 - 10) = v119;
  v134 = v152;
  *(&v145 - 9) = v153;
  *(&v145 - 8) = (uint64_t)v134;
  v135 = v150;
  *((CGFloat *)&v145 - 7) = v151;
  *((CGFloat *)&v145 - 6) = v135;
  *(&v145 - 5) = v129;
  *(&v145 - 4) = v136;
  *(&v145 - 3) = v137;
  *(&v145 - 2) = v138;
  sub_1DC4051C4();

  v139 = v177;
  v140 = v158;
  *(_OWORD *)(v158 + 128) = v176;
  *(_OWORD *)(v140 + 144) = v139;
  *(_OWORD *)(v140 + 160) = v178;
  v141 = v173;
  *(_OWORD *)(v140 + 64) = v172;
  *(_OWORD *)(v140 + 80) = v141;
  v142 = v175;
  *(_OWORD *)(v140 + 96) = v174;
  *(_OWORD *)(v140 + 112) = v142;
  v143 = v169;
  *(_OWORD *)v140 = v168;
  *(_OWORD *)(v140 + 16) = v143;
  result = v171;
  *(_OWORD *)(v140 + 32) = v170;
  *(__n128 *)(v140 + 48) = result;
  return result;
}

double sub_1DC317178@<D0>(uint64_t *a1@<X1>, uint64_t a2@<X8>, __int128 a3, uint64_t a4, double a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  double result;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  __int128 v65;
  uint64_t v66;
  double v67;

  v67 = a5;
  v66 = a4;
  v65 = a3;
  v64 = a10;
  v63 = a11;
  v62 = a12;
  v61 = a13;
  v54 = a6;
  v53 = a7;
  v52 = a8;
  v51 = a9;
  v15 = sub_1DC404210();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v47 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = *a1;
  v59 = a1[1];
  v19 = *MEMORY[0x1E0DB6B40];
  v20 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 104);
  v20(v18, v19, v15);
  sub_1DC404204();
  v57 = v22;
  v58 = v21;
  v55 = v24;
  v56 = v23;
  v25 = *(void (**)(char *, uint64_t))(v16 + 8);
  v25(v18, v15);
  v20(v18, v19, v15);
  sub_1DC404204();
  v50 = v26;
  v49 = v27;
  v48 = v28;
  v47 = v29;
  v25(v18, v15);
  v20(v18, v19, v15);
  sub_1DC404204();
  v31 = v30;
  v33 = v32;
  v35 = v34;
  v37 = v36;
  v25(v18, v15);
  v20(v18, v19, v15);
  sub_1DC404204();
  v39 = v38;
  v41 = v40;
  v43 = v42;
  v45 = v44;
  v25(v18, v15);
  *(_QWORD *)a2 = v60;
  *(_QWORD *)(a2 + 8) = v59;
  *(_QWORD *)(a2 + 16) = v58;
  *(_QWORD *)(a2 + 24) = v57;
  *(_QWORD *)(a2 + 32) = v56;
  *(_QWORD *)(a2 + 40) = v55;
  *(_QWORD *)(a2 + 48) = v50;
  *(_QWORD *)(a2 + 56) = v49;
  *(_QWORD *)(a2 + 64) = v48;
  *(_QWORD *)(a2 + 72) = v47;
  *(_OWORD *)(a2 + 80) = v65;
  *(_QWORD *)(a2 + 96) = v66;
  result = v67;
  *(double *)(a2 + 104) = v67;
  *(_QWORD *)(a2 + 112) = v31;
  *(_QWORD *)(a2 + 120) = v33;
  *(_QWORD *)(a2 + 128) = v35;
  *(_QWORD *)(a2 + 136) = v37;
  *(_QWORD *)(a2 + 144) = v39;
  *(_QWORD *)(a2 + 152) = v41;
  *(_QWORD *)(a2 + 160) = v43;
  *(_QWORD *)(a2 + 168) = v45;
  return result;
}

uint64_t type metadata accessor for ForYouFeedMastheadViewLayoutAttributesFactory()
{
  return objc_opt_self();
}

double sub_1DC317474()
{
  double v0;
  double v2;

  sub_1DC4073B4();
  sub_1DC405A58();
  return v2 + v0;
}

double UIEdgeInsetsInsetRect_0(double a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8)
{
  return a3 - (a6 + a8);
}

uint64_t sub_1DC3174E8(uint64_t a1)
{
  uint64_t v2;

  sub_1DC089DA4(0, &qword_1EDB28AD0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0AE8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

double sub_1DC31753C@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1DC317178(*(uint64_t **)(v1 + 16), a1, *(_OWORD *)(v1 + 88), *(_QWORD *)(v1 + 104), *(double *)(v1 + 112), *(_QWORD *)(v1 + 120), *(_QWORD *)(v1 + 128), *(_QWORD *)(v1 + 136), *(_QWORD *)(v1 + 144), *(_QWORD *)(v1 + 152), *(_QWORD *)(v1 + 160), *(_QWORD *)(v1 + 168), *(_QWORD *)(v1 + 176));
}

ValueMetadata *type metadata accessor for ForYouFeedFailedData()
{
  return &type metadata for ForYouFeedFailedData;
}

_QWORD *sub_1DC3175A4(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _OWORD *v10;
  _OWORD *v11;
  __int128 v12;
  _OWORD *v13;
  _OWORD *v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  _OWORD *v18;
  _OWORD *v19;
  __int128 v20;
  _OWORD *v21;
  _OWORD *v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  _OWORD *v26;
  _OWORD *v27;
  __int128 v28;
  _OWORD *v29;
  _OWORD *v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  _OWORD *v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  _OWORD *v41;
  _OWORD *v42;
  _OWORD *v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v46 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v46 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1DC406040();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (_OWORD *)((char *)a1 + v8);
    v11 = (_OWORD *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    v13 = (_OWORD *)((char *)a1 + v9);
    v14 = (_OWORD *)((char *)a2 + v9);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    v16 = a3[7];
    v17 = a3[8];
    v18 = (_OWORD *)((char *)a1 + v16);
    v19 = (_OWORD *)((char *)a2 + v16);
    v20 = v19[1];
    *v18 = *v19;
    v18[1] = v20;
    v21 = (_OWORD *)((char *)a1 + v17);
    v22 = (_OWORD *)((char *)a2 + v17);
    v23 = v22[1];
    *v21 = *v22;
    v21[1] = v23;
    v24 = a3[9];
    v25 = a3[10];
    v26 = (_OWORD *)((char *)a1 + v24);
    v27 = (_OWORD *)((char *)a2 + v24);
    v28 = v27[1];
    *v26 = *v27;
    v26[1] = v28;
    v29 = (_OWORD *)((char *)a1 + v25);
    v30 = (_OWORD *)((char *)a2 + v25);
    v31 = v30[1];
    *v29 = *v30;
    v29[1] = v31;
    v32 = a3[11];
    v33 = a3[12];
    v34 = *(_OWORD *)((char *)a2 + v32);
    v35 = *(_OWORD *)((char *)a2 + v32 + 16);
    v36 = (_OWORD *)((char *)a1 + v32);
    *v36 = v34;
    v36[1] = v35;
    memcpy((char *)a1 + v33, (char *)a2 + v33, 0x111uLL);
    v37 = a3[13];
    v38 = a3[14];
    v39 = *(_OWORD *)((char *)a2 + v37);
    v40 = *(_OWORD *)((char *)a2 + v37 + 16);
    v41 = (_OWORD *)((char *)a1 + v37);
    *v41 = v39;
    v41[1] = v40;
    v42 = (_OWORD *)((char *)a1 + v38);
    v43 = (_OWORD *)((char *)a2 + v38);
    v44 = v43[1];
    *v42 = *v43;
    v42[1] = v44;
    v45 = a3[16];
    *((_BYTE *)a1 + a3[15]) = *((_BYTE *)a2 + a3[15]);
    *(_QWORD *)((char *)a1 + v45) = *(_QWORD *)((char *)a2 + v45);
  }
  return a1;
}

uint64_t sub_1DC3176E8(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1DC406040();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t sub_1DC31771C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  _OWORD *v10;
  __int128 v11;
  _OWORD *v12;
  _OWORD *v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  _OWORD *v17;
  _OWORD *v18;
  __int128 v19;
  _OWORD *v20;
  _OWORD *v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  _OWORD *v25;
  _OWORD *v26;
  __int128 v27;
  _OWORD *v28;
  _OWORD *v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  _OWORD *v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  _OWORD *v40;
  _OWORD *v41;
  _OWORD *v42;
  __int128 v43;
  uint64_t v44;

  v6 = sub_1DC406040();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_OWORD *)(a1 + v7);
  v10 = (_OWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = (_OWORD *)(a1 + v8);
  v13 = (_OWORD *)(a2 + v8);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  v15 = a3[7];
  v16 = a3[8];
  v17 = (_OWORD *)(a1 + v15);
  v18 = (_OWORD *)(a2 + v15);
  v19 = v18[1];
  *v17 = *v18;
  v17[1] = v19;
  v20 = (_OWORD *)(a1 + v16);
  v21 = (_OWORD *)(a2 + v16);
  v22 = v21[1];
  *v20 = *v21;
  v20[1] = v22;
  v23 = a3[9];
  v24 = a3[10];
  v25 = (_OWORD *)(a1 + v23);
  v26 = (_OWORD *)(a2 + v23);
  v27 = v26[1];
  *v25 = *v26;
  v25[1] = v27;
  v28 = (_OWORD *)(a1 + v24);
  v29 = (_OWORD *)(a2 + v24);
  v30 = v29[1];
  *v28 = *v29;
  v28[1] = v30;
  v31 = a3[11];
  v32 = a3[12];
  v33 = *(_OWORD *)(a2 + v31);
  v34 = *(_OWORD *)(a2 + v31 + 16);
  v35 = (_OWORD *)(a1 + v31);
  *v35 = v33;
  v35[1] = v34;
  memcpy((void *)(a1 + v32), (const void *)(a2 + v32), 0x111uLL);
  v36 = a3[13];
  v37 = a3[14];
  v38 = *(_OWORD *)(a2 + v36);
  v39 = *(_OWORD *)(a2 + v36 + 16);
  v40 = (_OWORD *)(a1 + v36);
  *v40 = v38;
  v40[1] = v39;
  v41 = (_OWORD *)(a1 + v37);
  v42 = (_OWORD *)(a2 + v37);
  v43 = v42[1];
  *v41 = *v42;
  v41[1] = v43;
  v44 = a3[16];
  *(_BYTE *)(a1 + a3[15]) = *(_BYTE *)(a2 + a3[15]);
  *(_QWORD *)(a1 + v44) = *(_QWORD *)(a2 + v44);
  return a1;
}

uint64_t sub_1DC317834(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;

  v6 = sub_1DC406040();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  v8[2] = v9[2];
  v8[3] = v9[3];
  v10 = a3[6];
  v11 = (_QWORD *)(a1 + v10);
  v12 = (_QWORD *)(a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  v11[2] = v12[2];
  v11[3] = v12[3];
  v13 = a3[7];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (_QWORD *)(a2 + v13);
  *v14 = *v15;
  v14[1] = v15[1];
  v14[2] = v15[2];
  v14[3] = v15[3];
  v16 = a3[8];
  v17 = (_QWORD *)(a1 + v16);
  v18 = (_QWORD *)(a2 + v16);
  *v17 = *v18;
  v17[1] = v18[1];
  v17[2] = v18[2];
  v17[3] = v18[3];
  v19 = a3[9];
  v20 = (_QWORD *)(a1 + v19);
  v21 = (_QWORD *)(a2 + v19);
  *v20 = *v21;
  v20[1] = v21[1];
  v20[2] = v21[2];
  v20[3] = v21[3];
  v22 = a3[10];
  v23 = (_QWORD *)(a1 + v22);
  v24 = (_QWORD *)(a2 + v22);
  *v23 = *v24;
  v23[1] = v24[1];
  v23[2] = v24[2];
  v23[3] = v24[3];
  v25 = a3[11];
  v26 = (_QWORD *)(a1 + v25);
  v27 = (_QWORD *)(a2 + v25);
  *v26 = *v27;
  v26[1] = v27[1];
  v26[2] = v27[2];
  v26[3] = v27[3];
  v28 = a3[12];
  v29 = a1 + v28;
  v30 = a2 + v28;
  *(_QWORD *)v29 = *(_QWORD *)v30;
  *(_QWORD *)(v29 + 8) = *(_QWORD *)(v30 + 8);
  *(_QWORD *)(v29 + 16) = *(_QWORD *)(v30 + 16);
  *(_QWORD *)(v29 + 24) = *(_QWORD *)(v30 + 24);
  *(_QWORD *)(v29 + 32) = *(_QWORD *)(v30 + 32);
  *(_QWORD *)(v29 + 40) = *(_QWORD *)(v30 + 40);
  *(_QWORD *)(v29 + 48) = *(_QWORD *)(v30 + 48);
  *(_QWORD *)(v29 + 56) = *(_QWORD *)(v30 + 56);
  *(_QWORD *)(v29 + 64) = *(_QWORD *)(v30 + 64);
  *(_QWORD *)(v29 + 72) = *(_QWORD *)(v30 + 72);
  *(_QWORD *)(v29 + 80) = *(_QWORD *)(v30 + 80);
  *(_QWORD *)(v29 + 88) = *(_QWORD *)(v30 + 88);
  *(_QWORD *)(v29 + 96) = *(_QWORD *)(v30 + 96);
  *(_QWORD *)(v29 + 104) = *(_QWORD *)(v30 + 104);
  *(_QWORD *)(v29 + 112) = *(_QWORD *)(v30 + 112);
  *(_QWORD *)(v29 + 120) = *(_QWORD *)(v30 + 120);
  *(_QWORD *)(v29 + 128) = *(_QWORD *)(v30 + 128);
  *(_BYTE *)(v29 + 136) = *(_BYTE *)(v30 + 136);
  v31 = *(_OWORD *)(v30 + 224);
  v32 = *(_OWORD *)(v30 + 240);
  v33 = *(_OWORD *)(v30 + 256);
  *(_BYTE *)(v29 + 272) = *(_BYTE *)(v30 + 272);
  *(_OWORD *)(v29 + 240) = v32;
  *(_OWORD *)(v29 + 256) = v33;
  *(_OWORD *)(v29 + 224) = v31;
  v34 = *(_OWORD *)(v30 + 160);
  v35 = *(_OWORD *)(v30 + 176);
  v36 = *(_OWORD *)(v30 + 208);
  *(_OWORD *)(v29 + 192) = *(_OWORD *)(v30 + 192);
  *(_OWORD *)(v29 + 208) = v36;
  *(_OWORD *)(v29 + 160) = v34;
  *(_OWORD *)(v29 + 176) = v35;
  *(_OWORD *)(v29 + 144) = *(_OWORD *)(v30 + 144);
  v37 = a3[13];
  v38 = (_QWORD *)(a1 + v37);
  v39 = (_QWORD *)(a2 + v37);
  *v38 = *v39;
  v38[1] = v39[1];
  v38[2] = v39[2];
  v38[3] = v39[3];
  v40 = a3[14];
  v41 = (_QWORD *)(a1 + v40);
  v42 = (_QWORD *)(a2 + v40);
  *v41 = *v42;
  v41[1] = v42[1];
  v41[2] = v42[2];
  v41[3] = v42[3];
  *(_BYTE *)(a1 + a3[15]) = *(_BYTE *)(a2 + a3[15]);
  *(_QWORD *)(a1 + a3[16]) = *(_QWORD *)(a2 + a3[16]);
  return a1;
}

uint64_t sub_1DC317AF4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  _OWORD *v10;
  __int128 v11;
  _OWORD *v12;
  _OWORD *v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  _OWORD *v17;
  _OWORD *v18;
  __int128 v19;
  _OWORD *v20;
  _OWORD *v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  _OWORD *v25;
  _OWORD *v26;
  __int128 v27;
  _OWORD *v28;
  _OWORD *v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  _OWORD *v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  _OWORD *v40;
  _OWORD *v41;
  _OWORD *v42;
  __int128 v43;
  uint64_t v44;

  v6 = sub_1DC406040();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_OWORD *)(a1 + v7);
  v10 = (_OWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = (_OWORD *)(a1 + v8);
  v13 = (_OWORD *)(a2 + v8);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  v15 = a3[7];
  v16 = a3[8];
  v17 = (_OWORD *)(a1 + v15);
  v18 = (_OWORD *)(a2 + v15);
  v19 = v18[1];
  *v17 = *v18;
  v17[1] = v19;
  v20 = (_OWORD *)(a1 + v16);
  v21 = (_OWORD *)(a2 + v16);
  v22 = v21[1];
  *v20 = *v21;
  v20[1] = v22;
  v23 = a3[9];
  v24 = a3[10];
  v25 = (_OWORD *)(a1 + v23);
  v26 = (_OWORD *)(a2 + v23);
  v27 = v26[1];
  *v25 = *v26;
  v25[1] = v27;
  v28 = (_OWORD *)(a1 + v24);
  v29 = (_OWORD *)(a2 + v24);
  v30 = v29[1];
  *v28 = *v29;
  v28[1] = v30;
  v31 = a3[11];
  v32 = a3[12];
  v33 = *(_OWORD *)(a2 + v31);
  v34 = *(_OWORD *)(a2 + v31 + 16);
  v35 = (_OWORD *)(a1 + v31);
  *v35 = v33;
  v35[1] = v34;
  memcpy((void *)(a1 + v32), (const void *)(a2 + v32), 0x111uLL);
  v36 = a3[13];
  v37 = a3[14];
  v38 = *(_OWORD *)(a2 + v36);
  v39 = *(_OWORD *)(a2 + v36 + 16);
  v40 = (_OWORD *)(a1 + v36);
  *v40 = v38;
  v40[1] = v39;
  v41 = (_OWORD *)(a1 + v37);
  v42 = (_OWORD *)(a2 + v37);
  v43 = v42[1];
  *v41 = *v42;
  v41[1] = v43;
  v44 = a3[16];
  *(_BYTE *)(a1 + a3[15]) = *(_BYTE *)(a2 + a3[15]);
  *(_QWORD *)(a1 + v44) = *(_QWORD *)(a2 + v44);
  return a1;
}

uint64_t sub_1DC317C0C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  _OWORD *v10;
  __int128 v11;
  _OWORD *v12;
  _OWORD *v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  _OWORD *v17;
  _OWORD *v18;
  __int128 v19;
  _OWORD *v20;
  _OWORD *v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  _OWORD *v25;
  _OWORD *v26;
  __int128 v27;
  _OWORD *v28;
  _OWORD *v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  _OWORD *v33;
  _OWORD *v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  uint64_t v49;
  uint64_t v50;
  _OWORD *v51;
  _OWORD *v52;
  __int128 v53;
  _OWORD *v54;
  _OWORD *v55;
  __int128 v56;
  uint64_t v57;

  v6 = sub_1DC406040();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_OWORD *)(a1 + v7);
  v10 = (_OWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = (_OWORD *)(a1 + v8);
  v13 = (_OWORD *)(a2 + v8);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  v15 = a3[7];
  v16 = a3[8];
  v17 = (_OWORD *)(a1 + v15);
  v18 = (_OWORD *)(a2 + v15);
  v19 = v18[1];
  *v17 = *v18;
  v17[1] = v19;
  v20 = (_OWORD *)(a1 + v16);
  v21 = (_OWORD *)(a2 + v16);
  v22 = v21[1];
  *v20 = *v21;
  v20[1] = v22;
  v23 = a3[9];
  v24 = a3[10];
  v25 = (_OWORD *)(a1 + v23);
  v26 = (_OWORD *)(a2 + v23);
  v27 = v26[1];
  *v25 = *v26;
  v25[1] = v27;
  v28 = (_OWORD *)(a1 + v24);
  v29 = (_OWORD *)(a2 + v24);
  v30 = v29[1];
  *v28 = *v29;
  v28[1] = v30;
  v31 = a3[11];
  v32 = a3[12];
  v33 = (_OWORD *)(a1 + v31);
  v34 = (_OWORD *)(a2 + v31);
  v35 = v34[1];
  *v33 = *v34;
  v33[1] = v35;
  v36 = a1 + v32;
  v37 = a2 + v32;
  v38 = *(_OWORD *)(v37 + 16);
  *(_OWORD *)v36 = *(_OWORD *)v37;
  *(_OWORD *)(v36 + 16) = v38;
  v39 = *(_OWORD *)(v37 + 48);
  *(_OWORD *)(v36 + 32) = *(_OWORD *)(v37 + 32);
  *(_OWORD *)(v36 + 48) = v39;
  v40 = *(_OWORD *)(v37 + 80);
  *(_OWORD *)(v36 + 64) = *(_OWORD *)(v37 + 64);
  *(_OWORD *)(v36 + 80) = v40;
  v41 = *(_OWORD *)(v37 + 112);
  *(_OWORD *)(v36 + 96) = *(_OWORD *)(v37 + 96);
  *(_OWORD *)(v36 + 112) = v41;
  *(_QWORD *)(v36 + 128) = *(_QWORD *)(v37 + 128);
  *(_BYTE *)(v36 + 136) = *(_BYTE *)(v37 + 136);
  v42 = *(_OWORD *)(v37 + 144);
  v43 = *(_OWORD *)(v37 + 160);
  v44 = *(_OWORD *)(v37 + 192);
  *(_OWORD *)(v36 + 176) = *(_OWORD *)(v37 + 176);
  *(_OWORD *)(v36 + 192) = v44;
  *(_OWORD *)(v36 + 144) = v42;
  *(_OWORD *)(v36 + 160) = v43;
  v45 = *(_OWORD *)(v37 + 208);
  v46 = *(_OWORD *)(v37 + 224);
  v47 = *(_OWORD *)(v37 + 240);
  v48 = *(_OWORD *)(v37 + 256);
  *(_BYTE *)(v36 + 272) = *(_BYTE *)(v37 + 272);
  *(_OWORD *)(v36 + 240) = v47;
  *(_OWORD *)(v36 + 256) = v48;
  *(_OWORD *)(v36 + 208) = v45;
  *(_OWORD *)(v36 + 224) = v46;
  v49 = a3[13];
  v50 = a3[14];
  v51 = (_OWORD *)(a1 + v49);
  v52 = (_OWORD *)(a2 + v49);
  v53 = v52[1];
  *v51 = *v52;
  v51[1] = v53;
  v54 = (_OWORD *)(a1 + v50);
  v55 = (_OWORD *)(a2 + v50);
  v56 = v55[1];
  *v54 = *v55;
  v54[1] = v56;
  v57 = a3[16];
  *(_BYTE *)(a1 + a3[15]) = *(_BYTE *)(a2 + a3[15]);
  *(_QWORD *)(a1 + v57) = *(_QWORD *)(a2 + v57);
  return a1;
}

uint64_t sub_1DC317D74()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC317D80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;

  v6 = sub_1DC406040();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 48) + 136);
  if (v9 >= 2)
    return ((v9 + 2147483646) & 0x7FFFFFFF) + 1;
  else
    return 0;
}

uint64_t sub_1DC317E10()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC317E1C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1DC406040();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 48) + 136) = a2 + 1;
  return result;
}

uint64_t type metadata accessor for StockFeedMastheadViewLayoutAttributes()
{
  uint64_t result;

  result = qword_1EDB3D7C0;
  if (!qword_1EDB3D7C0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1DC317ED4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1DC406040();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1DC317F78@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1DC406040();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t sub_1DC317FB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  unsigned int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (*(_BYTE *)(v2 + *(int *)(a1 + 60)))
  {
    v4 = (unsigned int *)MEMORY[0x1E0DBB628];
  }
  else
  {
    v5 = *MEMORY[0x1E0DBB608];
    v6 = sub_1DC4061B4();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(a2, v5, v6);
    v4 = (unsigned int *)MEMORY[0x1E0DBB620];
  }
  v7 = *v4;
  v8 = sub_1DC4061C0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(a2, v7, v8);
}

uint64_t sub_1DC318038@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  int v4;
  uint64_t v5;
  unsigned int *v6;

  v4 = *(unsigned __int8 *)(v2 + *(int *)(a1 + 60));
  v5 = sub_1DC4065D4();
  v6 = (unsigned int *)MEMORY[0x1E0DBBEB0];
  if (v4)
    v6 = (unsigned int *)MEMORY[0x1E0DBBEA8];
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, *v6, v5);
}

double sub_1DC318090(uint64_t a1)
{
  uint64_t v1;

  return *(double *)(v1 + *(int *)(a1 + 20));
}

uint64_t sub_1DC3180A4()
{
  sub_1DC318124(&qword_1EDB3D7B0, (uint64_t)&unk_1DC427C78);
  return sub_1DC40625C();
}

uint64_t sub_1DC3180DC()
{
  return sub_1DC318124(&qword_1EDB3D7B8, (uint64_t)&unk_1DC427C40);
}

uint64_t sub_1DC318100()
{
  return sub_1DC318124(&qword_1EDB3D7B0, (uint64_t)&unk_1DC427C78);
}

uint64_t sub_1DC318124(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for StockFeedMastheadViewLayoutAttributes();
    result = MEMORY[0x1DF0CAB8C](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DC318164(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  char *v47;
  void *v48;
  void *v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  int v63;
  uint64_t v64;
  void (*v65)(char *, uint64_t);
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  _OWORD v78[2];
  uint64_t v79;

  v3 = v2;
  v70 = a2;
  v5 = sub_1DC4046E4();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v66 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1DC3FFDD0();
  v73 = *(_QWORD *)(v9 - 8);
  v74 = v9;
  MEMORY[0x1E0C80A78](v9);
  v72 = (char *)&v66 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v71 = (char *)&v66 - v12;
  v13 = sub_1DC401D08();
  v68 = *(_QWORD *)(v13 - 8);
  v69 = v13;
  MEMORY[0x1E0C80A78](v13);
  v67 = (char *)&v66 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1DC401984();
  v76 = *(_QWORD *)(v15 - 8);
  v77 = v15;
  MEMORY[0x1E0C80A78](v15);
  v17 = (uint64_t *)((char *)&v66 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v18);
  v75 = (char *)&v66 - v19;
  v20 = sub_1DC3FFDB8();
  if (v21)
  {
    v22 = v21;
    if (v20 == sub_1DC3FFD64() && v22 == v23)
      v24 = 1;
    else
      v24 = sub_1DC4099E8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v25 = sub_1DC3FFDAC();
    v27 = v26;
    v28 = sub_1DC3FFD58();
    if (v27)
    {
      if (v25 == v28 && v27 == v29)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_11:
        (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0DB7AB0], v5);
        sub_1DC40298C();
        return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      }
      v31 = sub_1DC4099E8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (((v24 | v31) & 1) != 0)
        goto LABEL_11;
    }
    else
    {
      swift_bridgeObjectRelease();
      if ((v24 & 1) != 0)
        goto LABEL_11;
    }
  }
  __swift_project_boxed_opaque_existential_1(v3 + 3, v3[6]);
  sub_1DC089DA4(0, &qword_1F0352EE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D571A8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v32 = sub_1DC401C54();
  v33 = *(_QWORD *)(v32 - 8);
  v34 = (*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
  v35 = swift_allocObject();
  *(_OWORD *)(v35 + 16) = xmmword_1DC40DC10;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v33 + 104))(v35 + v34, *MEMORY[0x1E0D571A0], v32);
  v36 = v75;
  sub_1DC401B28();
  swift_bridgeObjectRelease();
  v37 = v76;
  v38 = v77;
  (*(void (**)(uint64_t *, char *, uint64_t))(v76 + 16))(v17, v36, v77);
  v39 = (*(uint64_t (**)(uint64_t *, uint64_t))(v37 + 88))(v17, v38);
  if (v39 != *MEMORY[0x1E0D56C78])
  {
    if (v39 == *MEMORY[0x1E0D56C68])
    {
      (*(void (**)(uint64_t *, uint64_t))(v37 + 96))(v17, v38);
      v43 = v73;
      v44 = (uint64_t)v71;
      v45 = v17;
      v46 = v74;
      (*(void (**)(char *, uint64_t *, uint64_t))(v73 + 32))(v71, v45, v74);
      __swift_project_boxed_opaque_existential_1(v3 + 8, v3[11]);
      v79 = 0;
      memset(v78, 0, sizeof(v78));
      v47 = sub_1DC222604(v44, (uint64_t)v78);
      sub_1DC0A6180((uint64_t)v78, (uint64_t)&qword_1F034C050, (uint64_t)&qword_1F034F350, (uint64_t)&protocol descriptor for WebViewCoordinatorType, (uint64_t (*)(_QWORD))sub_1DC0A6204);
      if (v47)
      {
        v48 = (void *)MEMORY[0x1DF0CAD78](v3 + 2);
        if (v48)
        {
          v49 = v48;
          v50 = objc_msgSend(v48, sel_splitViewController);

          if (v50)
          {
            objc_msgSend(v50, sel_showViewController_sender_, v47, 0);

          }
        }

      }
      (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v44, v46);
      return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v36, v38);
    }
    if (v39 == *MEMORY[0x1E0D56C60])
    {
      (*(void (**)(uint64_t *, uint64_t))(v37 + 96))(v17, v38);
      v52 = *v17;
      v51 = v17[1];
      sub_1DC319ADC();
      v54 = *(int *)(v53 + 48);
    }
    else
    {
      if (v39 != *MEMORY[0x1E0D56C70])
      {
        if (v39 == *MEMORY[0x1E0D56C58])
        {
          (*(void (**)(uint64_t *, uint64_t))(v37 + 96))(v17, v38);
          swift_bridgeObjectRelease();
        }
        else
        {
          if (v39 != *MEMORY[0x1E0D56C50])
          {
            if (v39 != *MEMORY[0x1E0D56C48])
            {
              v65 = *(void (**)(char *, uint64_t))(v37 + 8);
              v65(v36, v38);
              return ((uint64_t (*)(uint64_t *, uint64_t))v65)(v17, v38);
            }
            goto LABEL_14;
          }
          (*(void (**)(uint64_t *, uint64_t))(v37 + 96))(v17, v38);
          swift_bridgeObjectRelease();
          sub_1DC319B44();
          sub_1DC0A6180((uint64_t)v17 + *(int *)(v64 + 48), (uint64_t)&unk_1EDB28A70, (uint64_t)MEMORY[0x1E0CAFFF8], (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD))sub_1DC089DA4);
        }
        sub_1DC31886C(a1);
        return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v36, v38);
      }
      (*(void (**)(uint64_t *, uint64_t))(v37 + 96))(v17, v38);
      v52 = *v17;
      v51 = v17[1];
      swift_bridgeObjectRelease();
      sub_1DC319A64();
      v54 = *(int *)(v55 + 64);
    }
    v56 = (char *)v17 + v54;
    v57 = sub_1DC40202C();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v57 - 8) + 8))(v56, v57);
    v58 = v3;
    v60 = v69;
    v59 = v70;
    v62 = v67;
    v61 = v68;
    (*(void (**)(char *, uint64_t, uint64_t))(v68 + 16))(v67, v70, v69);
    v63 = (*(uint64_t (**)(char *, uint64_t))(v61 + 88))(v62, v60);
    if (v63 == *MEMORY[0x1E0D572B0])
    {
      sub_1DC318FF0(v52, v51, v58[13]);
    }
    else if (v63 == *MEMORY[0x1E0D572B8] || v63 == *MEMORY[0x1E0D572A0] || v63 == *MEMORY[0x1E0D572A8])
    {
      sub_1DC318A54(v52, v51, v59);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v61 + 8))(v62, v60);
    }
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v36, v38);
  }
LABEL_14:
  (*(void (**)(uint64_t *, uint64_t))(v37 + 96))(v17, v38);
  v41 = (uint64_t)v72;
  v40 = v73;
  v42 = v74;
  (*(void (**)(char *, uint64_t *, uint64_t))(v73 + 32))(v72, v17, v74);
  sub_1DC31886C(v41);
  (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v41, v42);
  return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v36, v38);
}

void sub_1DC31886C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  void *v9;
  unint64_t v10;
  uint64_t v11;
  void *v12;
  _QWORD aBlock[6];

  v2 = v1;
  v4 = sub_1DC3FFDD0();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x1E0C80A78](v4);
  v7 = objc_msgSend((id)objc_opt_self(), sel_sharedApplication);
  v8 = (void *)sub_1DC3FFD88();
  sub_1DC1A1DA0(MEMORY[0x1E0DEE9D8]);
  type metadata accessor for OpenExternalURLOptionsKey(0);
  sub_1DC080808(&qword_1F034BCC0, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_1DC40D990);
  v9 = (void *)sub_1DC408980();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  v10 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = v2;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v11 + v10, (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  aBlock[4] = sub_1DC319D50;
  aBlock[5] = v11;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1DC319CA0;
  aBlock[3] = &block_descriptor_36;
  v12 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v7, sel_openURL_options_completionHandler_, v8, v9, v12);
  _Block_release(v12);

}

uint64_t sub_1DC318A54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t, uint64_t);
  char *v34;
  char *v35;
  int v36;
  char *v37;
  char *v38;
  id v39;
  unsigned int *v40;
  uint64_t *v41;
  id v42;
  uint64_t v43;
  id v44;
  uint64_t v45;
  int v46;
  void (*v47)(char *, uint64_t);
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;

  v66 = a1;
  v54 = a3;
  v3 = sub_1DC401D08();
  v56 = *(_QWORD *)(v3 - 8);
  v57 = v3;
  MEMORY[0x1E0C80A78](v3);
  v55 = (char *)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v53 = (char *)&v53 - v6;
  v7 = sub_1DC405D88();
  v60 = *(_QWORD *)(v7 - 8);
  v61 = v7;
  MEMORY[0x1E0C80A78](v7);
  v58 = (uint64_t *)((char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v9);
  v59 = (char *)&v53 - v10;
  v11 = sub_1DC40202C();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC089DA4(0, (unint64_t *)&unk_1EDB28A70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v53 - v16;
  v18 = sub_1DC401A2C();
  v63 = *(_QWORD *)(v18 - 8);
  v64 = v18;
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v53 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = type metadata accessor for StocksActivity(0);
  MEMORY[0x1E0C80A78](v65);
  v22 = (char *)&v53 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC1446B4();
  v62 = *(int *)(v23 + 48);
  v24 = &v22[*(int *)(v23 + 64)];
  v25 = sub_1DC3FFDD0();
  v26 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56);
  v26(v17, 1, 1, v25);
  swift_bridgeObjectRetain();
  sub_1DC401A20();
  v27 = v25;
  v28 = v67;
  v26(v17, 1, 1, v27);
  (*(void (**)(char *, _QWORD, uint64_t))(v12 + 104))(v14, *MEMORY[0x1E0D57870], v11);
  sub_1DC401B64();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  sub_1DC0A6180((uint64_t)v17, (uint64_t)&unk_1EDB28A70, (uint64_t)MEMORY[0x1E0CAFFF8], (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD))sub_1DC089DA4);
  (*(void (**)(char *, uint64_t))(v63 + 8))(v20, v64);
  *((_QWORD *)v24 + 4) = 0;
  *(_OWORD *)v24 = 0u;
  *((_OWORD *)v24 + 1) = 0u;
  *(_QWORD *)&v22[v62] = 0;
  type metadata accessor for StocksActivity.Article(0);
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  __swift_project_boxed_opaque_existential_1(v28 + 15, v28[18]);
  v29 = sub_1DC404B34();
  if (v29)
  {
    v30 = (void *)v29;
    v66 = v28[14];
    v31 = v56;
    v32 = v57;
    v33 = *(void (**)(char *, uint64_t, uint64_t))(v56 + 16);
    v34 = v53;
    v33(v53, v54, v57);
    v35 = v55;
    v33(v55, (uint64_t)v34, v32);
    v36 = (*(uint64_t (**)(char *, uint64_t))(v31 + 88))(v35, v32);
    v37 = v34;
    if (v36 == *MEMORY[0x1E0D572B0])
    {
      (*(void (**)(char *, uint64_t))(v31 + 8))(v34, v32);
      v38 = v59;
LABEL_4:
      __swift_project_boxed_opaque_existential_1(v28 + 15, v28[18]);
      v39 = v30;
      sub_1DC404B40();

      swift_bridgeObjectRelease();
      v40 = (unsigned int *)MEMORY[0x1E0DBAC88];
      v41 = v58;
LABEL_12:
      v51 = v60;
      v50 = v61;
      (*(void (**)(uint64_t *, _QWORD, uint64_t))(v60 + 104))(v41, *v40, v61);
      (*(void (**)(char *, uint64_t *, uint64_t))(v51 + 32))(v38, v41, v50);
      sub_1DC404510();

      (*(void (**)(char *, uint64_t))(v51 + 8))(v38, v50);
      return sub_1DC1B3F14((uint64_t)v22);
    }
    v38 = v59;
    if (v36 == *MEMORY[0x1E0D572B8])
    {
      (*(void (**)(char *, uint64_t))(v31 + 8))(v34, v32);
      __swift_project_boxed_opaque_existential_1(v28 + 15, v28[18]);
      v42 = v30;
      v43 = sub_1DC404B40();

      v41 = v58;
      *v58 = v43;
      v40 = (unsigned int *)MEMORY[0x1E0DBAC78];
      goto LABEL_12;
    }
    if (v36 == *MEMORY[0x1E0D572A0])
    {
      (*(void (**)(char *, uint64_t))(v31 + 8))(v34, v32);
      __swift_project_boxed_opaque_existential_1(v28 + 15, v28[18]);
      v44 = v30;
      v45 = sub_1DC404B40();

      v41 = v58;
      *v58 = 0;
      v41[1] = v45;
    }
    else
    {
      v46 = *MEMORY[0x1E0D572A8];
      v47 = *(void (**)(char *, uint64_t))(v31 + 8);
      v47(v37, v32);
      if (v36 != v46)
      {
        v47(v35, v32);
        goto LABEL_4;
      }
      __swift_project_boxed_opaque_existential_1(v28 + 15, v28[18]);
      v48 = v30;
      v49 = sub_1DC404B40();
      v41 = v58;
      *v58 = (uint64_t)v30;
      v41[1] = v49;
    }
    v40 = (unsigned int *)MEMORY[0x1E0DBAC80];
    goto LABEL_12;
  }
  return sub_1DC1B3F14((uint64_t)v22);
}

uint64_t sub_1DC318FF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _OWORD v33[2];
  uint64_t v34;
  _OWORD v35[2];
  uint64_t v36;
  _OWORD v37[2];
  uint64_t v38;

  v31 = a1;
  v32 = a3;
  v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1DC089DA4(0, (unint64_t *)&unk_1EDB29810, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD3C8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v29 = (char *)&v24 - v5;
  v6 = sub_1DC40202C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC089DA4(0, (unint64_t *)&unk_1EDB28A70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], v3);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v24 - v11;
  v28 = sub_1DC401A2C();
  v27 = *(_QWORD *)(v28 - 8);
  MEMORY[0x1E0C80A78](v28);
  v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = type metadata accessor for StocksActivity(0);
  MEMORY[0x1E0C80A78](v30);
  v16 = (char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC1446B4();
  v26 = *(int *)(v17 + 48);
  v25 = &v16[*(int *)(v17 + 64)];
  v18 = sub_1DC3FFDD0();
  v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56);
  v19(v12, 1, 1, v18);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1DC401A20();
  v20 = v18;
  v21 = (uint64_t)v29;
  v19(v12, 1, 1, v20);
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E0D57870], v6);
  sub_1DC401B64();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_1DC0A6180((uint64_t)v12, (uint64_t)&unk_1EDB28A70, (uint64_t)MEMORY[0x1E0CAFFF8], (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD))sub_1DC089DA4);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v14, v28);
  v38 = 0;
  memset(v37, 0, sizeof(v37));
  sub_1DC144788((uint64_t)v37, (uint64_t)v25);
  *(_QWORD *)&v16[v26] = 0;
  type metadata accessor for StocksActivity.Article(0);
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  v22 = sub_1DC403340();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v21, 1, 1, v22);
  v36 = 0;
  memset(v35, 0, sizeof(v35));
  v34 = 0;
  memset(v33, 0, sizeof(v33));
  sub_1DC22BAE0((uint64_t)v16, v32, v21, (uint64_t)v35, 0, 0, (uint64_t)v33);
  swift_release();
  sub_1DC0A6180((uint64_t)v33, (uint64_t)&qword_1EDB29410, (uint64_t)&unk_1EDB29400, MEMORY[0x1E0DB35B0], (uint64_t (*)(_QWORD))sub_1DC0A6204);
  sub_1DC0A6180((uint64_t)v35, (uint64_t)&qword_1EDB2ACD0, (uint64_t)&qword_1EDB2ACC0, MEMORY[0x1E0D53040], (uint64_t (*)(_QWORD))sub_1DC0A6204);
  sub_1DC0A6180(v21, (uint64_t)&unk_1EDB29810, (uint64_t)MEMORY[0x1E0DAD3C8], (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD))sub_1DC089DA4);
  sub_1DC1B3F14((uint64_t)v16);
  return swift_release();
}

uint64_t sub_1DC3193E8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t *, char *, uint64_t);
  int v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  void *v38;
  unsigned __int8 v39;
  void (*v40)(char *, uint64_t);
  void (*v41)(char *, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  __int128 v58;
  __int128 v59;
  uint64_t v60;

  v54 = sub_1DC40202C();
  v56 = *(_QWORD *)(v54 - 8);
  MEMORY[0x1E0C80A78](v54);
  v51 = (char *)&v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC089DA4(0, (unint64_t *)&unk_1EDB28A70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v47 = (char *)&v43 - v5;
  v6 = sub_1DC401A2C();
  v49 = *(_QWORD *)(v6 - 8);
  v50 = v6;
  MEMORY[0x1E0C80A78](v6);
  v48 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = type metadata accessor for StocksActivity(0);
  MEMORY[0x1E0C80A78](v52);
  v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1DC401984();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (uint64_t *)((char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v43 - v15;
  v17 = v1[6];
  v53 = v1;
  __swift_project_boxed_opaque_existential_1(v1 + 3, v17);
  v18 = a1;
  sub_1DC401B28();
  v19 = *(void (**)(uint64_t *, char *, uint64_t))(v11 + 16);
  v55 = v16;
  v19(v13, v16, v10);
  v20 = (*(uint64_t (**)(uint64_t *, uint64_t))(v11 + 88))(v13, v10);
  if (v20 == *MEMORY[0x1E0D56C60])
  {
    v45 = v11;
    v46 = v10;
    (*(void (**)(uint64_t *, uint64_t))(v11 + 96))(v13, v10);
    v21 = *v13;
    v43 = v13[1];
    v44 = v21;
    sub_1DC319ADC();
    v23 = *(void (**)(char *, uint64_t))(v56 + 8);
    v24 = v54;
    v23((char *)v13 + *(int *)(v22 + 48), v54);
LABEL_5:
    v57 = v53[14];
    sub_1DC1446B4();
    v30 = *(int *)(v29 + 48);
    v31 = (uint64_t)&v9[*(int *)(v29 + 64)];
    v32 = sub_1DC3FFDD0();
    v33 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56);
    v34 = (uint64_t)v47;
    v33(v47, 1, 1, v32);
    swift_retain();
    v35 = v48;
    sub_1DC401A20();
    v33((char *)v34, 1, 1, v32);
    v36 = v51;
    (*(void (**)(char *, _QWORD, uint64_t))(v56 + 104))(v51, *MEMORY[0x1E0D57870], v24);
    sub_1DC401B64();
    v23(v36, v24);
    sub_1DC0A6180(v34, (uint64_t)&unk_1EDB28A70, (uint64_t)MEMORY[0x1E0CAFFF8], (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD))sub_1DC089DA4);
    (*(void (**)(char *, uint64_t))(v49 + 8))(v35, v50);
    *(_QWORD *)&v9[v30] = 0;
    v60 = 0;
    v58 = 0u;
    v59 = 0u;
    sub_1DC144788((uint64_t)&v58, v31);
    type metadata accessor for StocksActivity.Article(0);
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
    sub_1DC083C10();
    sub_1DC080808((unint64_t *)&qword_1EDB29CA0, (uint64_t (*)(uint64_t))sub_1DC083C10, MEMORY[0x1E0DB75C0]);
    v37 = sub_1DC406E2C();
    sub_1DC1B3F14((uint64_t)v9);
    swift_release();
    (*(void (**)(char *, uint64_t))(v45 + 8))(v55, v46);
    return v37;
  }
  v25 = v56;
  v26 = v54;
  if (v20 == *MEMORY[0x1E0D56C70])
  {
    v45 = v11;
    v46 = v10;
    (*(void (**)(uint64_t *, uint64_t))(v11 + 96))(v13, v10);
    v27 = *v13;
    v43 = v13[1];
    v44 = v27;
    swift_bridgeObjectRelease();
    sub_1DC319A64();
    v23 = *(void (**)(char *, uint64_t))(v25 + 8);
    v24 = v26;
    v23((char *)v13 + *(int *)(v28 + 64), v26);
    goto LABEL_5;
  }
  if ((sub_1DC3FFD4C() & 1) != 0
    && (v38 = (void *)sub_1DC3FFD88(),
        v39 = objc_msgSend(v38, sel_fc_isNewsURL),
        v38,
        (v39 & 1) == 0))
  {
    __swift_project_boxed_opaque_existential_1(v53 + 8, v53[11]);
    v60 = 0;
    v58 = 0u;
    v59 = 0u;
    v37 = (uint64_t)sub_1DC222604(v18, (uint64_t)&v58);
    sub_1DC0A6180((uint64_t)&v58, (uint64_t)&qword_1F034C050, (uint64_t)&qword_1F034F350, (uint64_t)&protocol descriptor for WebViewCoordinatorType, (uint64_t (*)(_QWORD))sub_1DC0A6204);
    v41 = *(void (**)(char *, uint64_t))(v11 + 8);
    v41(v55, v10);
    v41((char *)v13, v10);
  }
  else
  {
    v40 = *(void (**)(char *, uint64_t))(v11 + 8);
    v40(v55, v10);
    v40((char *)v13, v10);
    return 0;
  }
  return v37;
}

uint64_t sub_1DC31992C()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 120);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1DC319980(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  v2 = sub_1DC401D08();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v3 + 104))(v6, *MEMORY[0x1E0D572B0], v2, v4);
  sub_1DC318164(a1, (uint64_t)v6);
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
}

uint64_t sub_1DC319A24(uint64_t a1, uint64_t a2)
{
  return sub_1DC318164(a1, a2);
}

uint64_t sub_1DC319A44(uint64_t a1)
{
  return sub_1DC3193E8(a1);
}

void sub_1DC319A64()
{
  unint64_t TupleTypeMetadata3;
  uint64_t v1;

  if (!qword_1F0351C40)
  {
    sub_1DC0F0CA0();
    sub_1DC40202C();
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1)
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_1F0351C40);
  }
}

void sub_1DC319ADC()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1F0351C48)
  {
    sub_1DC40202C();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1F0351C48);
  }
}

void sub_1DC319B44()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1F0351C50)
  {
    sub_1DC089DA4(255, (unint64_t *)&unk_1EDB28A70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1F0351C50);
  }
}

void sub_1DC319BC4(char a1, uint64_t a2, uint64_t a3)
{
  char *v5;
  void *v6;
  void *v7;
  id v8;
  _OWORD v9[2];
  uint64_t v10;

  if ((a1 & 1) == 0)
  {
    __swift_project_boxed_opaque_existential_1((_QWORD *)(a2 + 64), *(_QWORD *)(a2 + 88));
    v10 = 0;
    memset(v9, 0, sizeof(v9));
    v5 = sub_1DC222604(a3, (uint64_t)v9);
    sub_1DC0A6180((uint64_t)v9, (uint64_t)&qword_1F034C050, (uint64_t)&qword_1F034F350, (uint64_t)&protocol descriptor for WebViewCoordinatorType, (uint64_t (*)(_QWORD))sub_1DC0A6204);
    if (v5)
    {
      v6 = (void *)MEMORY[0x1DF0CAD78](a2 + 16);
      if (v6)
      {
        v7 = v6;
        v8 = objc_msgSend(v6, sel_splitViewController);

        if (v8)
        {
          objc_msgSend(v8, sel_showViewController_sender_, v5, 0);

        }
      }

    }
  }
}

uint64_t sub_1DC319CA0(uint64_t a1, uint64_t a2)
{
  void (*v3)(uint64_t);

  v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);
  return swift_release();
}

uint64_t sub_1DC319CDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1DC3FFDD0();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

void sub_1DC319D50(char a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(sub_1DC3FFDD0() - 8) + 80);
  sub_1DC319BC4(a1, *(_QWORD *)(v1 + 16), v1 + ((v3 + 24) & ~v3));
}

char *sub_1DC319D90(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v5;
  objc_class *ObjectType;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  id v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  Class v23;
  char *v24;
  uint64_t v25;
  char *v26;
  void *v27;
  void *v28;
  void *v29;
  id v30;
  objc_super v32;

  v5 = v4;
  ObjectType = (objc_class *)swift_getObjectType();
  sub_1DC092F50(0, &qword_1F034C648, (void (*)(uint64_t))sub_1DC15E910);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v32 - v12;
  v14 = OBJC_IVAR____TtC8StocksUI19StockSearchCellView_symbolLabel;
  v15 = objc_allocWithZone(MEMORY[0x1E0DC3990]);
  v16 = v5;
  *(_QWORD *)&v5[v14] = objc_msgSend(v15, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v17 = OBJC_IVAR____TtC8StocksUI19StockSearchCellView_nameLabel;
  *(_QWORD *)&v16[v17] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v18 = OBJC_IVAR____TtC8StocksUI19StockSearchCellView_exchangeLabel;
  *(_QWORD *)&v16[v18] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v19 = OBJC_IVAR____TtC8StocksUI19StockSearchCellView_priceLabel;
  *(_QWORD *)&v16[v19] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v20 = OBJC_IVAR____TtC8StocksUI19StockSearchCellView_priceChangeLabel;
  *(_QWORD *)&v16[v20] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v21 = OBJC_IVAR____TtC8StocksUI19StockSearchCellView_watchlistSelectionButton;
  if (qword_1EDB2AA40 != -1)
    swift_once();
  sub_1DC15E910();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v13, 1, 1, v22);
  sub_1DC15E9B4();
  objc_allocWithZone(v23);
  swift_retain();
  *(_QWORD *)&v16[v21] = sub_1DC404D38();
  v16[OBJC_IVAR____TtC8StocksUI19StockSearchCellView_isSelectable] = 1;
  v16[OBJC_IVAR____TtC8StocksUI19StockSearchCellView_isSelected] = 0;
  v16[OBJC_IVAR____TtC8StocksUI19StockSearchCellView_isHighlightable] = 1;
  v16[OBJC_IVAR____TtC8StocksUI19StockSearchCellView_isHighlighted] = 0;

  v32.receiver = v16;
  v32.super_class = ObjectType;
  v24 = (char *)objc_msgSendSuper2(&v32, sel_initWithFrame_, a1, a2, a3, a4);
  v25 = *(_QWORD *)&v24[OBJC_IVAR____TtC8StocksUI19StockSearchCellView_symbolLabel];
  v26 = v24;
  objc_msgSend(v26, sel_addSubview_, v25);
  v27 = *(void **)&v26[OBJC_IVAR____TtC8StocksUI19StockSearchCellView_nameLabel];
  objc_msgSend(v26, sel_addSubview_, v27);
  v28 = *(void **)&v26[OBJC_IVAR____TtC8StocksUI19StockSearchCellView_exchangeLabel];
  objc_msgSend(v26, sel_addSubview_, v28);
  objc_msgSend(v26, sel_addSubview_, *(_QWORD *)&v26[OBJC_IVAR____TtC8StocksUI19StockSearchCellView_priceLabel]);
  objc_msgSend(v26, sel_addSubview_, *(_QWORD *)&v26[OBJC_IVAR____TtC8StocksUI19StockSearchCellView_priceChangeLabel]);
  v29 = *(void **)&v26[OBJC_IVAR____TtC8StocksUI19StockSearchCellView_watchlistSelectionButton];
  objc_msgSend(v26, sel_addSubview_, v29);
  objc_msgSend(v27, sel_setNumberOfLines_, 0);
  objc_msgSend(v28, sel_setNumberOfLines_, 0);
  v30 = v29;
  objc_msgSend(v30, sel_setClipsToBounds_, 1);

  return v26;
}

uint64_t type metadata accessor for StockSearchCellView()
{
  return objc_opt_self();
}

uint64_t sub_1DC31A1D4()
{
  _QWORD *v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(*v0 + OBJC_IVAR____TtC8StocksUI19StockSearchCellView_isSelected);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_1DC31A21C(char a1, uint64_t a2, uint64_t a3)
{
  return sub_1DC10CCD0(a1, a2, a3, &OBJC_IVAR____TtC8StocksUI19StockSearchCellView_isSelected);
}

uint64_t (*sub_1DC31A228())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_1DC31A270()
{
  _QWORD *v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(*v0 + OBJC_IVAR____TtC8StocksUI19StockSearchCellView_isHighlighted);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_1DC31A2B8(char a1, uint64_t a2, uint64_t a3)
{
  return sub_1DC10CCD0(a1, a2, a3, &OBJC_IVAR____TtC8StocksUI19StockSearchCellView_isHighlighted);
}

uint64_t (*sub_1DC31A2C4())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1DC31A30C()
{
  return sub_1DC404D2C();
}

void sub_1DC31A338()
{
  sub_1DC31AA14(qword_1EDB31450, (uint64_t)&unk_1DC427E0C);
  JUMPOUT(0x1DF0C7418);
}

unint64_t sub_1DC31A3A0()
{
  void *v0;
  unint64_t v1;
  char v2;
  uint64_t v3;
  char v5;
  objc_super v6;

  v6.receiver = v0;
  v6.super_class = (Class)swift_getObjectType();
  v1 = (unint64_t)objc_msgSendSuper2(&v6, sel_accessibilityTraits);
  sub_1DC404D20();
  if (v5 == 2)
    goto LABEL_8;
  if ((v5 & 1) != 0)
  {
    v2 = sub_1DC4099E8();
    swift_bridgeObjectRelease();
    if ((v2 & 1) != 0)
      goto LABEL_5;
LABEL_8:
    if ((*MEMORY[0x1E0DC46B0] & v1) != 0)
      return v1 & ~*MEMORY[0x1E0DC46B0];
    else
      return v1;
  }
  swift_bridgeObjectRelease();
LABEL_5:
  v3 = *MEMORY[0x1E0DC46B0];
  if ((*MEMORY[0x1E0DC46B0] & ~v1) == 0)
    v3 = 0;
  return v3 | v1;
}

uint64_t sub_1DC31A668()
{
  void *v0;
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t ObjCClassFromMetadata;
  id v5;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  id v10;
  void *v11;
  void *v12;
  uint64_t v13;
  _QWORD aBlock[6];
  objc_super v16;
  uint64_t v17;

  v16.receiver = v0;
  v16.super_class = (Class)swift_getObjectType();
  v1 = objc_msgSendSuper2(&v16, sel_accessibilityCustomActions);
  if (v1)
  {
    v2 = v1;
    sub_1DC0821D4(0, &qword_1EDB42CF8);
    v3 = sub_1DC408CD4();

  }
  else
  {
    v3 = MEMORY[0x1E0DEE9D8];
  }
  v17 = v3;
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v5 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1DC3FFC80();

  v6 = objc_msgSend((id)objc_opt_self(), sel_configurationWithPointSize_, 30.0, 0x80000001DC447770);
  v7 = (void *)sub_1DC408A1C();
  v8 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_withConfiguration_, v7, v6);

  v9 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v10 = objc_allocWithZone(MEMORY[0x1E0DC33F0]);
  swift_retain();
  v11 = (void *)sub_1DC408A1C();
  swift_bridgeObjectRelease();
  aBlock[4] = sub_1DC31AE00;
  aBlock[5] = v9;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1DC1DB22C;
  aBlock[3] = &block_descriptor_37;
  v12 = _Block_copy(aBlock);
  objc_msgSend(v10, sel_initWithName_image_actionHandler_, v11, v8, v12);

  _Block_release(v12);
  swift_release();
  v13 = swift_release();
  MEMORY[0x1DF0C9530](v13);
  if (*(_QWORD *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1DC408D4C();
  sub_1DC408D64();
  sub_1DC408CF8();
  return v17;
}

uint64_t sub_1DC31A9F0()
{
  return sub_1DC31AA14(&qword_1EDB27A08, (uint64_t)&unk_1DC427DD4);
}

uint64_t sub_1DC31AA14(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for StockSearchCellView();
    result = MEMORY[0x1DF0CAB8C](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DC31AA50()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1DC31AA74(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  id v14;
  uint64_t ObjCClassFromMetadata;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  id v22;
  uint64_t v23;
  void *v24;
  id v25;
  void *v26;
  void (*v27)(char *, char *, uint64_t);
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  id v32;

  sub_1DC092F50(0, &qword_1EDB28B50, (void (*)(uint64_t))MEMORY[0x1E0CB1658]);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v30 - v4;
  v6 = sub_1DC400280();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v30 - v11;
  swift_beginAccess();
  v13 = MEMORY[0x1DF0CAD78](a2 + 16);
  if (!v13)
    return 0;
  v14 = (id)v13;
  sub_1DC0821D4(0, &qword_1F0351A60);
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  while ((objc_msgSend(v14, sel_isKindOfClass_, ObjCClassFromMetadata) & 1) == 0)
  {
    v16 = objc_msgSend(v14, sel_superview);

    v14 = v16;
    if (!v16)
      return 0;
  }
  objc_opt_self();
  v18 = swift_dynamicCastObjCClass();
  if (v18)
  {
    v19 = v18;
    v31 = v6;
    sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3F8A0);
    v20 = swift_getObjCClassFromMetadata();
    v21 = v14;
    v32 = v21;
    while ((objc_msgSend(v21, sel_isKindOfClass_, v20) & 1) == 0)
    {
      v22 = objc_msgSend(v21, sel_superview);

      v21 = v22;
      if (!v22)
        goto LABEL_18;
    }
    objc_opt_self();
    v23 = swift_dynamicCastObjCClass();
    if (!v23)
    {

LABEL_18:
      v17 = 0;
      v14 = v32;
      goto LABEL_24;
    }
    v24 = (void *)v23;
    v14 = v21;
    v25 = objc_msgSend(v24, sel_indexPathForCell_, v19);
    if (v25)
    {
      v26 = v25;
      sub_1DC400238();

      v27 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
      v28 = v31;
      v27(v5, v9, v31);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v5, 0, 1, v28);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v28) != 1)
      {
        v27(v12, v5, v28);
        if (objc_msgSend(v24, sel_delegate))
        {
          sub_1DC405D10();
          if (swift_dynamicCastClass())
          {
            sub_1DC405CF8();
            swift_unknownObjectRelease();

            (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v28);
            v17 = 1;
            goto LABEL_24;
          }
          swift_unknownObjectRelease();
        }

        (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v28);
        goto LABEL_23;
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v31);
    }

    sub_1DC15EA7C((uint64_t)v5);
  }
LABEL_23:
  v17 = 0;
LABEL_24:

  return v17;
}

uint64_t sub_1DC31AE00(uint64_t a1)
{
  uint64_t v1;

  return sub_1DC31AA74(a1, v1);
}

void sub_1DC31AE08()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  Class v12;
  uint64_t v13;

  v1 = v0;
  sub_1DC092F50(0, &qword_1F034C648, (void (*)(uint64_t))sub_1DC15E910);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v13 - v3;
  v5 = OBJC_IVAR____TtC8StocksUI19StockSearchCellView_symbolLabel;
  *(_QWORD *)&v1[v5] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v6 = OBJC_IVAR____TtC8StocksUI19StockSearchCellView_nameLabel;
  *(_QWORD *)&v1[v6] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v7 = OBJC_IVAR____TtC8StocksUI19StockSearchCellView_exchangeLabel;
  *(_QWORD *)&v1[v7] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v8 = OBJC_IVAR____TtC8StocksUI19StockSearchCellView_priceLabel;
  *(_QWORD *)&v1[v8] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v9 = OBJC_IVAR____TtC8StocksUI19StockSearchCellView_priceChangeLabel;
  *(_QWORD *)&v1[v9] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v10 = OBJC_IVAR____TtC8StocksUI19StockSearchCellView_watchlistSelectionButton;
  if (qword_1EDB2AA40 != -1)
    swift_once();
  sub_1DC15E910();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v4, 1, 1, v11);
  sub_1DC15E9B4();
  objc_allocWithZone(v12);
  swift_retain();
  *(_QWORD *)&v1[v10] = sub_1DC404D38();
  v1[OBJC_IVAR____TtC8StocksUI19StockSearchCellView_isSelectable] = 1;
  v1[OBJC_IVAR____TtC8StocksUI19StockSearchCellView_isSelected] = 0;
  v1[OBJC_IVAR____TtC8StocksUI19StockSearchCellView_isHighlightable] = 1;
  v1[OBJC_IVAR____TtC8StocksUI19StockSearchCellView_isHighlighted] = 0;

  sub_1DC409838();
  __break(1u);
}

ValueMetadata *type metadata accessor for ForYouFeedRelayoutBlueprintModifier()
{
  return &type metadata for ForYouFeedRelayoutBlueprintModifier;
}

uint64_t sub_1DC31B060(uint64_t a1, void (*a2)(char *))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  sub_1DC0FE574(0, &qword_1EDB2A288, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB9A28]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v15 - v7;
  sub_1DC12E67C();
  v10 = &v8[*(int *)(v9 + 48)];
  sub_1DC0FE574(0, (unint64_t *)&qword_1EDB2AB80, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790]);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v8, a1, v11);
  v12 = *MEMORY[0x1E0DB7FB8];
  v13 = sub_1DC404984();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v10, v12, v13);
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0DB9A00], v5);
  a2(v8);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1DC31B188()
{
  unint64_t result;

  result = qword_1EDB40F20;
  if (!qword_1EDB40F20)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC427EE4, &type metadata for ForYouFeedRelayoutBlueprintModifier);
    atomic_store(result, (unint64_t *)&qword_1EDB40F20);
  }
  return result;
}

uint64_t static UIActivityType.copyLink.getter()
{
  return sub_1DC408A1C();
}

uint64_t sub_1DC31B1EC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjCClassFromMetadata;
  id v13;
  id v14;
  uint64_t v16;

  v2 = sub_1DC404F90();
  MEMORY[0x1E0C80A78](v2);
  v3 = sub_1DC4010E4();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC133BB0(0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1DC404C78();
  MEMORY[0x1E0C80A78](v10);
  sub_1DC406AE4();
  sub_1DC406AD8();
  sub_1DC401048();
  v11 = sub_1DC3FFDD0();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v9, 0, 1, v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
  sub_1DC404C6C();
  sub_1DC408A1C();
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v13 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1DC3FFC80();

  v14 = objc_msgSend((id)objc_opt_self(), sel_ts_link);
  sub_1DC404F84();
  sub_1DC4046C0();
  swift_allocObject();
  return sub_1DC4046B4();
}

uint64_t _s5TeaUI15ContextMenuItemC06StocksB0E8copyLink5stockAC0F4Core5StockV_tFZ_0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t ObjCClassFromMetadata;
  id v16;
  id v17;
  _QWORD v19[2];

  v2 = sub_1DC404C54();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1DC4010E4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC133BB0(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1DC404C78();
  MEMORY[0x1E0C80A78](v13);
  sub_1DC406AE4();
  v19[1] = sub_1DC406AD8();
  sub_1DC401048();
  v14 = sub_1DC3FFDD0();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v12, 0, 1, v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  sub_1DC404C6C();
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v16 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1DC3FFC80();

  v17 = objc_msgSend((id)objc_opt_self(), sel_ts_link);
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DB8530], v2);
  sub_1DC40463C();
  swift_allocObject();
  return sub_1DC4045E8();
}

uint64_t sub_1DC31B73C(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  unsigned __int8 v12;
  uint64_t result;
  uint64_t v14;
  _BYTE v15[15];
  unsigned __int8 v16;

  v4 = v3;
  v6 = type metadata accessor for StockListStockModel(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = type metadata accessor for StockListModel(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = &v15[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = *a3;
  sub_1DC0F8190();
  sub_1DC404354();
  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result)
  {
    if ((_DWORD)result == 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      __swift_project_boxed_opaque_existential_1((_QWORD *)(v4 + 48), *(_QWORD *)(v4 + 72));
      return sub_1DC314F38();
    }
  }
  else
  {
    sub_1DC0F25C8((uint64_t)v11, (uint64_t)v8);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v4 + 48), *(_QWORD *)(v4 + 72));
    v14 = sub_1DC3AF5D8();
    v16 = v12;
    sub_1DC31464C((uint64_t)v8, v14, &v16);
    swift_bridgeObjectRelease();
    return sub_1DC31BDD4((uint64_t)v8);
  }
  return result;
}

uint64_t sub_1DC31B89C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v1 = type metadata accessor for StockListStockModel(0);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for StockListModel(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0F8190();
  sub_1DC404354();
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    v8 = 0;
    if (EnumCaseMultiPayload == 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  else
  {
    sub_1DC0F25C8((uint64_t)v6, (uint64_t)v3);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 72));
    v9 = sub_1DC3AF5D8();
    v8 = sub_1DC314C64((uint64_t)v3, v9);
    swift_bridgeObjectRelease();
    sub_1DC31BDD4((uint64_t)v3);
  }
  return v8;
}

uint64_t sub_1DC31B9D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  uint64_t result;
  UIAccessibilityNotifications v12;
  void *v13;
  void *v14;
  id v15;
  uint64_t v16;

  sub_1DC089DA4(0, &qword_1EDB28B50, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1658], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v16 - v4;
  v6 = sub_1DC400280();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x1DF0CAD78](v1 + 16, v8);
  if (result)
  {
    sub_1DC0EDD64(a1, (uint64_t)v5, &qword_1EDB28B50, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1658]);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
    {
      sub_1DC0B091C((uint64_t)v5, &qword_1EDB28B50, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1658]);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v5, v6);
      v12 = *MEMORY[0x1E0DC4578];
      sub_1DC4055CC();
      v13 = (void *)sub_1DC405074();
      swift_release();
      v14 = (void *)sub_1DC40022C();
      v15 = objc_msgSend(v13, sel_cellForItemAtIndexPath_, v14);

      UIAccessibilityPostNotification(v12, v15);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    }
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1DC31BB94()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1DC31BBB8(uint64_t a1, uint64_t a2, unsigned __int8 *a3, uint64_t a4)
{
  unsigned __int8 v6;
  unsigned __int8 v8;

  v6 = *a3;
  __swift_project_boxed_opaque_existential_1((_QWORD *)(a4 + 48), *(_QWORD *)(a4 + 72));
  v8 = v6;
  return sub_1DC31464C(a1, a2, &v8);
}

uint64_t sub_1DC31BC10(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  sub_1DC4010D8();
  sub_1DC31BE2C();
  sub_1DC406808();
  swift_allocObject();
  sub_1DC4067CC();
  v3 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = v3;
  *(_QWORD *)(v4 + 24) = a2;
  swift_retain();
  swift_retain();
  sub_1DC4067F0();
  swift_release();
  swift_release();
  swift_release();
  sub_1DC4067D8();
  return swift_release();
}

uint64_t sub_1DC31BD20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;

  result = MEMORY[0x1DF0CAD78](a3 + 16);
  if (result)
  {
    sub_1DC31BC10(a1, a2);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1DC31BD7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t))
{
  uint64_t result;

  result = MEMORY[0x1DF0CAD78](a2 + 16);
  if (result)
  {
    a5(a1, result);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1DC31BDD4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for StockListStockModel(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DC31BE10(uint64_t a1)
{
  return sub_1DC08C058(a1);
}

uint64_t sub_1DC31BE24()
{
  uint64_t v0;

  return sub_1DC302430(*(char **)(v0 + 16));
}

unint64_t sub_1DC31BE2C()
{
  unint64_t result;

  result = qword_1F0351CA8;
  if (!qword_1F0351CA8)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC421B98, &type metadata for AlertWatchlistRemoval);
    atomic_store(result, (unint64_t *)&qword_1F0351CA8);
  }
  return result;
}

uint64_t sub_1DC31BE70()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1DC31BE94()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DC31BEC0()
{
  uint64_t v0;

  return sub_1DC302ABC(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void sub_1DC31BEC8()
{
  uint64_t v0;

  sub_1DC3024C0(*(void **)(v0 + 16));
}

uint64_t sub_1DC31BED0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t result;
  void *v9;
  unint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;

  v4 = sub_1DC407EAC();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = MEMORY[0x1E0C80A78](v4);
  result = MEMORY[0x1DF0CAD78](a2 + 16, v7);
  if (result)
  {
    v9 = (void *)result;
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
    v10 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    v11 = swift_allocObject();
    *(_QWORD *)(v11 + 16) = v9;
    (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v11 + v10, (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
    v12 = v9;
    sub_1DC402E3C();
    swift_unknownObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t sub_1DC31BFCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1DC407EAC();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

void sub_1DC31C040()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(sub_1DC407EAC() - 8) + 80);
  sub_1DC301D94(*(char **)(v0 + 16), v0 + ((v1 + 24) & ~v1));
}

uint64_t type metadata accessor for WelcomeDataManager()
{
  return objc_opt_self();
}

uint64_t sub_1DC31C098@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(_QWORD);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;

  v2 = type metadata accessor for StockFeedModel();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC142D3C();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC142DA0(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC165EEC(0, (unint64_t *)&qword_1EDB2AB10, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790]);
  sub_1DC406D60();
  sub_1DC165EEC(0, (unint64_t *)&qword_1EDB29D60, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60]);
  v12 = v11;
  v13 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v7, 1, v11) == 1)
  {
    v14 = (uint64_t (*)(_QWORD))sub_1DC142D3C;
    v15 = (uint64_t)v7;
LABEL_5:
    sub_1DC0926D8(v15, v14);
    v19 = sub_1DC401030();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(a1, 1, 1, v19);
  }
  sub_1DC4047BC();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v7, v12);
  sub_1DC142200();
  v17 = v16;
  v18 = *(_QWORD *)(v16 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v10, 1, v16) == 1)
  {
    v14 = (uint64_t (*)(_QWORD))sub_1DC142DA0;
    v15 = (uint64_t)v10;
    goto LABEL_5;
  }
  sub_1DC404354();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v10, v17);
  sub_1DC334F40();
  return sub_1DC0926D8((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedModel);
}

void __swiftcall WelcomeModule.createViewController()(UIViewController *__return_ptr retstr)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;

  v2 = sub_1DC403AC0();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v3 + 104))(v6, *MEMORY[0x1E0DADEF0], v2, v4);
  sub_1DC4017EC();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + OBJC_IVAR____TtC8StocksUI13WelcomeModule_resolver), *(_QWORD *)(v1 + OBJC_IVAR____TtC8StocksUI13WelcomeModule_resolver + 24));
  type metadata accessor for WelcomeViewController();
  swift_retain();
  v7 = sub_1DC4025E4();
  swift_release();
  if (v7)
    swift_release();
  else
    __break(1u);
}

uint64_t sub_1DC31C3E0(_QWORD *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4018AC();
  return sub_1DC40250C();
}

uint64_t sub_1DC31C434(_QWORD *a1)
{
  return sub_1DC31C3E0(a1);
}

id WelcomeModule.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void WelcomeModule.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id WelcomeModule.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1DC31C648()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;

  v1 = sub_1DC403AC0();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = MEMORY[0x1E0C80A78](v1);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *v0;
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v2 + 104))(v5, *MEMORY[0x1E0DADEF0], v1, v3);
  sub_1DC4017EC();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v6 + OBJC_IVAR____TtC8StocksUI13WelcomeModule_resolver), *(_QWORD *)(v6 + OBJC_IVAR____TtC8StocksUI13WelcomeModule_resolver + 24));
  type metadata accessor for WelcomeViewController();
  swift_retain();
  v7 = sub_1DC4025E4();
  result = swift_release();
  if (v7)
  {
    swift_release();
    return v7;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t method lookup function for WelcomeModule()
{
  return swift_lookUpClassMethod();
}

uint64_t static Settings.UserPreferences.chartDateRange.getter()
{
  return sub_1DC10D910(&qword_1EDB28E90);
}

ValueMetadata *type metadata accessor for Settings.UserPreferences()
{
  return &type metadata for Settings.UserPreferences;
}

void sub_1DC31C79C()
{
  sub_1DC31C804();
}

unint64_t sub_1DC31C7C0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1F0351D58;
  if (!qword_1F0351D58)
  {
    v1 = type metadata accessor for BilingualFeedCommandHandler();
    result = MEMORY[0x1DF0CAB8C](&unk_1DC4281BC, v1);
    atomic_store(result, (unint64_t *)&qword_1F0351D58);
  }
  return result;
}

void sub_1DC31C804()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  char *v7;
  uint64_t ObjCClassFromMetadata;
  id v9;
  void *v10;
  _QWORD v12[4];

  v1 = v0 + 16;
  v2 = *(_QWORD *)(v0 + 40);
  v3 = __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), v2);
  v4 = *(_QWORD *)(v2 - 8);
  v5 = MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v12[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, __n128))(v4 + 16))(v7, v5);
  sub_1DC4009A0();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v2);
  sub_1DC0824D4(v1, (uint64_t)v12);
  __swift_project_boxed_opaque_existential_1(v12, v12[3]);
  sub_1DC4009AC();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v9 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1DC3FFC80();

  v10 = (void *)sub_1DC408A1C();
  swift_bridgeObjectRelease();
  MEMORY[0x1DF0CA4D8](v10);

}

uint64_t sub_1DC31C9CC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t);
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  void *v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t);
  id v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  id v44;
  id v45;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;

  v3 = sub_1DC401984();
  v51 = *(_QWORD *)(v3 - 8);
  v52 = v3;
  MEMORY[0x1E0C80A78](v3);
  v53 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1DC3FFDD0();
  v54 = *(_QWORD *)(v5 - 8);
  v55 = v5;
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for StocksActivity(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1DC4010E4();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v50 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC089DA4(0, (unint64_t *)&qword_1EDB28DE0, v14, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v47 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v47 - v19;
  v57 = &unk_1F03AF830;
  v21 = swift_dynamicCastObjCProtocolConditional();
  if (!v21)
    return 0;
  v22 = (void *)v21;
  swift_unknownObjectRetain();
  sub_1DC31CF9C(v22, v1, (uint64_t)v20);
  sub_1DC1338B8((uint64_t)v20, (uint64_t)v17);
  v23 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48))(v17, 1, v11);
  v48 = v20;
  v49 = a1;
  if (v23 == 1)
  {
    sub_1DC0B091C((uint64_t)v17, (unint64_t *)&qword_1EDB28DE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF0D0]);
    v24 = v54;
    v25 = v55;
    v29 = objc_msgSend(v22, "URL");
    sub_1DC3FFD94();

    v30 = sub_1DC3193E8((uint64_t)v7);
    v31 = *(void (**)(char *, uint64_t))(v24 + 8);
    v31(v7, v25);
    if (v30)
    {
      __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + OBJC_IVAR____TtC8StocksUI21ActionPreviewActivity_handler), *(_QWORD *)(v1 + OBJC_IVAR____TtC8StocksUI21ActionPreviewActivity_handler + 24));
      v32 = objc_msgSend(v22, "URL");
      sub_1DC3FFD94();

      v33 = v53;
      sub_1DC401B28();
      v31(v7, v25);
      v35 = v51;
      v34 = v52;
      v36 = (*(uint64_t (**)(char *, uint64_t))(v51 + 88))(v33, v52);
      if (v36 == *MEMORY[0x1E0D56C60])
      {
        (*(void (**)(char *, uint64_t))(v35 + 96))(v33, v34);
        swift_bridgeObjectRelease();
        sub_1DC319ADC();
        v38 = &v33[*(int *)(v37 + 48)];
        v39 = sub_1DC40202C();
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v39 - 8) + 8))(v38, v39);
        v40 = (uint64_t)v48;
      }
      else
      {
        v40 = (uint64_t)v48;
        if (v36 != *MEMORY[0x1E0D56C70])
        {
          sub_1DC0B091C((uint64_t)v48, (unint64_t *)&qword_1EDB28DE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF0D0]);
          swift_unknownObjectRelease();
          (*(void (**)(char *, uint64_t))(v35 + 8))(v33, v34);
          return v30;
        }
        (*(void (**)(char *, uint64_t))(v35 + 96))(v33, v34);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1DC319A64();
        v42 = &v33[*(int *)(v41 + 64)];
        v43 = sub_1DC40202C();
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v43 - 8) + 8))(v42, v43);
      }
      v44 = objc_allocWithZone((Class)sub_1DC405128());
      v30 = sub_1DC40511C();
      swift_unknownObjectRelease();
      sub_1DC0B091C(v40, (unint64_t *)&qword_1EDB28DE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF0D0]);
    }
    else
    {
      sub_1DC0B091C((uint64_t)v20, (unint64_t *)&qword_1EDB28DE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF0D0]);
      swift_unknownObjectRelease();
    }
  }
  else
  {
    v26 = v50;
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v50, v17, v11);
    v47 = v1;
    v56 = *(_QWORD *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC8StocksUI21ActionPreviewActivity_router) + 112);
    sub_1DC1B5E40();
    v28 = *(int *)(v27 + 48);
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v10, v26, v11);
    *(_QWORD *)&v10[v28] = 0;
    type metadata accessor for StocksActivity.StockFeed(0);
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
    sub_1DC083C10();
    sub_1DC080808((unint64_t *)&qword_1EDB29CA0, (uint64_t (*)(uint64_t))sub_1DC083C10, MEMORY[0x1E0DB75C0]);
    swift_retain();
    sub_1DC406E2C();
    sub_1DC1B3F14((uint64_t)v10);
    swift_release();
    v45 = objc_allocWithZone((Class)sub_1DC405128());
    v30 = sub_1DC40511C();
    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v26, v11);
    sub_1DC0B091C((uint64_t)v48, (unint64_t *)&qword_1EDB28DE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF0D0]);
  }
  return v30;
}

uint64_t sub_1DC31CF9C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v28[2];
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v28[1] = a2;
  v34 = a3;
  v4 = sub_1DC402830();
  v30 = *(_QWORD *)(v4 - 8);
  v31 = v4;
  MEMORY[0x1E0C80A78](v4);
  v29 = (char *)v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC089DA4(0, (unint64_t *)&unk_1EDB274C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB3B00], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v28 - v7;
  v9 = sub_1DC402860();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v32 = (char *)v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1DC3FFDD0();
  v13 = objc_msgSend(a1, "URL", MEMORY[0x1E0C80A78](v12).n128_f64[0]);
  sub_1DC3FFD94();

  sub_1DC4029D4();
  swift_allocObject();
  sub_1DC4029BC();
  v14 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
  sub_1DC089DA4(0, (unint64_t *)&qword_1EDB3FE80, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB3FF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  sub_1DC402A40();
  v15 = swift_allocObject();
  v33 = xmmword_1DC40DC10;
  *(_OWORD *)(v15 + 16) = xmmword_1DC40DC10;
  sub_1DC089DA4(0, &qword_1EDB3FE70, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB3FB0], v14);
  v16 = *(_QWORD *)(sub_1DC402A10() - 8);
  v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = v33;
  v19 = (_QWORD *)(v18 + v17);
  *v19 = 0x6C6F626D7973;
  v19[1] = 0xE600000000000000;
  (*(void (**)(void))(v16 + 104))();
  v20 = sub_1DC27359C(MEMORY[0x1E0DEE9D8]);
  MEMORY[0x1DF0C3290](0x736B636F7473, 0xE600000000000000, 0, 0, 0, 0, 0, 0, v18, v20);
  sub_1DC4029C8();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
  v22 = v32;
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v32, v8, v9);
  v23 = v29;
  sub_1DC402848();
  v24 = sub_1DC402824();
  v26 = v25;
  (*(void (**)(char *, uint64_t))(v30 + 8))(v23, v31);
  if (v26)
  {
    v35 = v24;
    v36 = v26;
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1DC402C38();
    swift_release();
    swift_bridgeObjectRelease_n();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v22, v9);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v22, v9);
    swift_release();
    v21 = sub_1DC4010E4();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v34, 1, 1, v21);
  }
}

uint64_t type metadata accessor for ActionPreviewActivity()
{
  return objc_opt_self();
}

uint64_t sub_1DC31D544()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t result;
  void *v9;
  id v10;
  _QWORD v11[2];

  v0 = sub_1DC401D08();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1DC3FFDD0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11[1] = &unk_1F03AF830;
  result = swift_dynamicCastObjCProtocolConditional();
  if (result)
  {
    v9 = (void *)result;
    swift_unknownObjectRetain();
    v10 = objc_msgSend(v9, "URL");
    sub_1DC3FFD94();

    (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0D572B0], v0);
    sub_1DC318164((uint64_t)v7, (uint64_t)v3);
    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  return result;
}

uint64_t dispatch thunk of ScrollRestorationManagerType.userActivity.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of ScrollRestorationManagerType.userActivity.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of ScrollRestorationManagerType.userActivity.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of ScrollRestorationManagerType.popScrollPosition(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t sub_1DC31D6C8()
{
  uint64_t v0;

  swift_release();
  return swift_deallocClassInstance();
}

void *sub_1DC31D6F4()
{
  uint64_t v0;
  void *v1;
  id v2;

  swift_beginAccess();
  v1 = *(void **)(v0 + 16);
  v2 = v1;
  return v1;
}

void sub_1DC31D734(uint64_t a1)
{
  uint64_t v1;
  void *v3;

  swift_beginAccess();
  v3 = *(void **)(v1 + 16);
  *(_QWORD *)(v1 + 16) = a1;

}

uint64_t (*sub_1DC31D778())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_1DC31D7B4()
{
  uint64_t v0;

  sub_1DC148A20(v0 + 16);
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

id sub_1DC31D8C0()
{
  return sub_1DC29A458(type metadata accessor for StockView.PriceChangeButton);
}

uint64_t sub_1DC31D99C()
{
  char *v0;
  char *v1;
  uint64_t v2;
  void *v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t *v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  BOOL v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t result;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;

  v1 = &v0[OBJC_IVAR____TtCC8StocksUI9StockView18StockViewAXElement_stockView];
  v2 = MEMORY[0x1DF0CAD78](&v0[OBJC_IVAR____TtCC8StocksUI9StockView18StockViewAXElement_stockView]);
  if (v2)
  {
    v3 = (void *)v2;
    v4 = *(id *)(v2 + OBJC_IVAR____TtC8StocksUI9StockView_symbolLabel);

    v5 = objc_msgSend(v4, sel_text);
    if (v5)
    {
      v6 = sub_1DC408A4C();
      v8 = v7;

    }
    else
    {
      v6 = 0;
      v8 = 0;
    }
    v52 = v6;
    v53 = v8;
  }
  else
  {
    v52 = 0;
    v53 = 0;
  }
  v9 = MEMORY[0x1DF0CAD78](v1);
  if (v9)
  {
    v10 = (void *)v9;
    v11 = *(id *)(v9 + OBJC_IVAR____TtC8StocksUI9StockView_companyLabel);

    v12 = objc_msgSend(v11, sel_text);
    if (v12)
    {
      v13 = sub_1DC408A4C();
      v15 = v14;

    }
    else
    {
      v13 = 0;
      v15 = 0;
    }
    v54 = v13;
    v55 = v15;
  }
  else
  {
    v54 = 0;
    v55 = 0;
  }
  v16 = MEMORY[0x1DF0CAD78](v1);
  if (v16)
  {
    v17 = (void *)v16;
    v18 = *(id *)(v16 + OBJC_IVAR____TtC8StocksUI9StockView_companyLabelLong);

    v19 = objc_msgSend(v18, sel_text);
    if (v19)
    {
      v20 = sub_1DC408A4C();
      v22 = v21;

    }
    else
    {
      v20 = 0;
      v22 = 0;
    }
    v56 = v20;
    v57 = v22;
  }
  else
  {
    v56 = 0;
    v57 = 0;
  }
  v23 = MEMORY[0x1DF0CAD78](v1);
  if (v23)
  {
    v24 = (void *)v23;
    v26 = *(_QWORD *)(v23 + OBJC_IVAR____TtC8StocksUI9StockView_accessibilityCompanyName);
    v25 = *(_QWORD *)(v23 + OBJC_IVAR____TtC8StocksUI9StockView_accessibilityCompanyName + 8);
    swift_bridgeObjectRetain();

  }
  else
  {
    v26 = 0;
    v25 = 0;
  }
  v58 = v26;
  v59 = v25;
  v27 = MEMORY[0x1DF0CAD78](v1);
  if (v27)
  {
    v28 = (void *)v27;
    v30 = *(_QWORD *)(v27 + OBJC_IVAR____TtC8StocksUI9StockView_accessibilityLongCompanyName);
    v29 = *(_QWORD *)(v27 + OBJC_IVAR____TtC8StocksUI9StockView_accessibilityLongCompanyName + 8);
    swift_bridgeObjectRetain();

  }
  else
  {
    v30 = 0;
    v29 = 0;
  }
  v60 = v30;
  v61 = v29;
  v31 = objc_msgSend(v0, sel_accessibilityLabel);
  if (v31)
  {
    v32 = v31;
    v33 = sub_1DC408A4C();
    v35 = v34;

  }
  else
  {
    v33 = 0;
    v35 = 0;
  }
  v36 = 0;
  v62 = v33;
  v63 = v35;
  v37 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  while (1)
  {
    v39 = &v52 + 2 * v36;
    v40 = v39[1];
    if (!v40)
      goto LABEL_30;
    v41 = *v39;
    v42 = HIBYTE(v40) & 0xF;
    if ((v40 & 0x2000000000000000) == 0)
      v42 = v41 & 0xFFFFFFFFFFFFLL;
    if (!v42)
      goto LABEL_30;
    v43 = v37[2];
    if (!v43)
      goto LABEL_42;
    v44 = v37[4] == v41 && v40 == v37[5];
    if (!v44 && (sub_1DC4099E8() & 1) == 0)
    {
      if (v43 == 1)
        goto LABEL_42;
      if (v37[6] != v41 || v40 != v37[7])
      {
        result = sub_1DC4099E8();
        if ((result & 1) == 0)
          break;
      }
    }
LABEL_30:
    if (++v36 == 6)
    {
      sub_1DC083594(0, (unint64_t *)&qword_1EDB284B0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
      swift_arrayDestroy();
      return (uint64_t)v37;
    }
  }
  if (v43 == 2)
  {
LABEL_42:
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v37 = sub_1DC108BBC(0, v43 + 1, 1, v37);
    v46 = v37[2];
    v45 = v37[3];
    if (v46 >= v45 >> 1)
      v37 = sub_1DC108BBC((_QWORD *)(v45 > 1), v46 + 1, 1, v37);
    v37[2] = v46 + 1;
    v38 = &v37[2 * v46];
    v38[4] = v41;
    v38[5] = v40;
    goto LABEL_30;
  }
  v48 = v37 + 9;
  v49 = 2;
  while (1)
  {
    v50 = v49 + 1;
    if (__OFADD__(v49, 1))
      break;
    if (*(v48 - 1) == v41 && v40 == *v48)
      goto LABEL_30;
    result = sub_1DC4099E8();
    if ((result & 1) != 0)
      goto LABEL_30;
    v48 += 2;
    ++v49;
    if (v50 == v43)
      goto LABEL_42;
  }
  __break(1u);
  return result;
}

uint64_t sub_1DC31DE1C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t (*v3)(void);
  uint64_t v4;

  v1 = MEMORY[0x1DF0CAD78](v0 + OBJC_IVAR____TtCC8StocksUI9StockView18StockViewAXElement_stockView);
  if (!v1)
    return MEMORY[0x1E0DEE9D8];
  v2 = (void *)v1;
  v3 = *(uint64_t (**)(void))(v1 + OBJC_IVAR____TtC8StocksUI9StockView_makeAccessibilityCustomActions);
  sub_1DC113F04((uint64_t)v3);

  if (!v3)
    return MEMORY[0x1E0DEE9D8];
  v4 = v3();
  sub_1DC0E81D0((uint64_t)v3);
  return v4;
}

uint64_t sub_1DC31E010()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  id v4;
  id v5;
  void *v6;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;
  uint64_t inited;
  void *v12;
  id v13;
  id v14;
  void *v15;
  void *v16;
  id v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  void *v21;
  id v22;
  id v23;
  id v24;
  void *v25;
  id v26;
  id v27;
  void *v28;
  id v29;
  uint64_t v30;
  id v31;
  id v32;
  id v33;
  uint64_t v34;
  char v36;

  v1 = v0 + OBJC_IVAR____TtCC8StocksUI9StockView18StockViewAXElement_stockView;
  v2 = MEMORY[0x1DF0CAD78](v0 + OBJC_IVAR____TtCC8StocksUI9StockView18StockViewAXElement_stockView);
  v3 = (id)v2;
  if (v2)
  {
    v4 = *(id *)(v2 + OBJC_IVAR____TtC8StocksUI9StockView_companyLabelLong);

    v3 = objc_msgSend(v4, sel_text);
    if (v3)
    {
      sub_1DC408A4C();

      v5 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
      v6 = (void *)sub_1DC408A1C();
      swift_bridgeObjectRelease();
      v3 = objc_msgSend(v5, sel_initWithString_, v6);

    }
  }
  v7 = MEMORY[0x1DF0CAD78](v1);
  if (v7
    && (v8 = (void *)v7,
        v9 = *(id *)(v7 + OBJC_IVAR____TtC8StocksUI9StockView_symbolLabel),
        v8,
        v10 = objc_msgSend(v9, sel_text),
        v9,
        v10))
  {
    sub_1DC408A4C();

    sub_1DC10B31C(0, (unint64_t *)&qword_1EDB40090, (void (*)(uint64_t))sub_1DC112C08);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1DC40DC10;
    v12 = (void *)*MEMORY[0x1E0DC45F0];
    *(_QWORD *)(inited + 32) = *MEMORY[0x1E0DC45F0];
    *(_QWORD *)(inited + 64) = MEMORY[0x1E0DEAFA0];
    *(_BYTE *)(inited + 40) = 1;
    v13 = v12;
    sub_1DC0FA3C4(inited);
    v14 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
    v15 = (void *)sub_1DC408A1C();
    swift_bridgeObjectRelease();
    type metadata accessor for Key(0);
    sub_1DC081B48((unint64_t *)&qword_1EDB3F988, 255, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1DC40D90C);
    v16 = (void *)sub_1DC408980();
    swift_bridgeObjectRelease();
    v17 = objc_msgSend(v14, sel_initWithString_attributes_, v15, v16);

  }
  else
  {
    v17 = 0;
  }
  v18 = MEMORY[0x1DF0CAD78](v1);
  if (!v18)
    goto LABEL_13;
  v19 = (void *)v18;
  swift_retain();

  sub_1DC406778();
  swift_release();
  if ((v36 & 1) == 0)
    goto LABEL_13;
  v20 = MEMORY[0x1DF0CAD78](v1);
  if (v20
    && (v21 = (void *)v20,
        v22 = *(id *)(v20 + OBJC_IVAR____TtC8StocksUI9StockView_exchangeLabel),
        v21,
        v23 = objc_msgSend(v22, sel_text),
        v22,
        v23))
  {
    sub_1DC408A4C();

    v24 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
    v25 = (void *)sub_1DC408A1C();
    swift_bridgeObjectRelease();
    v26 = objc_msgSend(v24, sel_initWithString_, v25);

  }
  else
  {
LABEL_13:
    v26 = 0;
  }
  v27 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  v28 = (void *)sub_1DC408A1C();
  v29 = objc_msgSend(v27, sel_initWithString_, v28);

  sub_1DC10B31C(0, &qword_1EDB40088, (void (*)(uint64_t))sub_1DC112D48);
  v30 = swift_allocObject();
  *(_OWORD *)(v30 + 16) = xmmword_1DC40FA70;
  *(_QWORD *)(v30 + 32) = v3;
  *(_QWORD *)(v30 + 40) = v17;
  *(_QWORD *)(v30 + 48) = v26;
  sub_1DC408CF8();
  v31 = v26;
  v32 = v3;
  v33 = v17;
  v34 = sub_1DC40430C();

  swift_bridgeObjectRelease();
  return v34;
}

uint64_t sub_1DC31E408()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  uint64_t v16;
  id v17;
  void *v18;
  id v19;
  id v20;
  void *v21;
  id v22;
  uint64_t v23;
  id v25;
  char v26;

  v1 = v0 + OBJC_IVAR____TtCC8StocksUI9StockView18StockViewAXElement_stockView;
  v2 = MEMORY[0x1DF0CAD78](v0 + OBJC_IVAR____TtCC8StocksUI9StockView18StockViewAXElement_stockView);
  if (v2)
  {
    v3 = (void *)v2;
    swift_retain();

    sub_1DC406778();
    swift_release();
    if ((v26 & 1) != 0)
      return 0;
  }
  v4 = MEMORY[0x1DF0CAD78](v1);
  if (!v4)
    return 0;
  v5 = (char *)v4;
  v6 = OBJC_IVAR____TtC8StocksUI9StockView_priceChangeButton;
  v7 = objc_msgSend(*(id *)(v4 + OBJC_IVAR____TtC8StocksUI9StockView_priceChangeButton), sel_accessibilityLabel);
  if (!v7)
  {

    return 0;
  }
  v8 = v7;
  sub_1DC408A4C();

  v9 = objc_msgSend(*(id *)&v5[v6], sel_accessibilityValue);
  if (!v9)
  {

LABEL_11:
    swift_bridgeObjectRelease();
    return 0;
  }
  v10 = v9;
  sub_1DC408A4C();

  v11 = *(void **)&v5[OBJC_IVAR____TtC8StocksUI9StockView_accessibilityPriceString];
  if (!v11)
  {

    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  v12 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  v13 = v11;
  v14 = (void *)sub_1DC408A1C();
  v15 = objc_msgSend(v12, sel_initWithString_, v14);

  sub_1DC10B31C(0, &qword_1EDB40088, (void (*)(uint64_t))sub_1DC112D48);
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1DC40FA70;
  *(_QWORD *)(v16 + 32) = v11;
  v17 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  v25 = v13;
  v18 = (void *)sub_1DC408A1C();
  swift_bridgeObjectRelease();
  v19 = objc_msgSend(v17, sel_initWithString_, v18);

  *(_QWORD *)(v16 + 40) = v19;
  v20 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  v21 = (void *)sub_1DC408A1C();
  swift_bridgeObjectRelease();
  v22 = objc_msgSend(v20, sel_initWithString_, v21);

  *(_QWORD *)(v16 + 48) = v22;
  sub_1DC408CF8();
  v23 = sub_1DC40430C();

  swift_bridgeObjectRelease();
  return v23;
}

id sub_1DC31E714()
{
  return sub_1DC29A458(type metadata accessor for StockView.StockViewAXElement);
}

uint64_t sub_1DC31E824()
{
  _QWORD *v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(*v0 + OBJC_IVAR____TtC8StocksUI9StockView_isSelected);
  swift_beginAccess();
  return *v1;
}

uint64_t (*sub_1DC31E86C())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

void sub_1DC31E8B4(uint64_t a1, uint64_t a2)
{
  sub_1DC081B48(&qword_1EDB3F340, a2, (uint64_t (*)(uint64_t))type metadata accessor for StockView, (uint64_t)&unk_1DC42847C);
  JUMPOUT(0x1DF0C7418);
}

uint64_t sub_1DC31E8F4()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  void *v3;
  void *v4;
  double v5;
  char *v6;
  id v7;
  double v8;
  char v10;

  v1 = v0;
  v2 = *(char **)(v0 + OBJC_IVAR____TtC8StocksUI9StockView_sparklineView);
  v3 = (void *)sub_1DC408584();
  objc_msgSend(v3, sel_setImage_, 0);

  v4 = *(void **)&v2[OBJC_IVAR____TtC8StocksUI18StockSparklineView_baselineIndicatorLayer];
  v5 = 0.0;
  objc_msgSend(v4, sel_setFrame_, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v4, sel_setPath_, 0);
  v6 = *(char **)(v1 + OBJC_IVAR____TtC8StocksUI9StockView_priceChangeButton);
  v7 = *(id *)&v6[OBJC_IVAR____TtCC8StocksUI9StockView17PriceChangeButton_onTap];

  sub_1DC406778();
  if (v10 != 2)
  {
    if ((v10 & 1) != 0)
      v8 = 0.0;
    else
      v8 = 1.0;
    if ((v10 & 1) != 0)
      v5 = 1.0;
    objc_msgSend(v2, sel_setAlpha_, v8);
    objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC8StocksUI9StockView_priceLabel), sel_setAlpha_, v8);
    objc_msgSend(v6, sel_setAlpha_, v8);
    objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC8StocksUI9StockView_companyLabel), sel_setAlpha_, v8);
    objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC8StocksUI9StockView_exchangeLabel), sel_setAlpha_, v5);
    objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC8StocksUI9StockView_companyLabelLong), sel_setAlpha_, v5);
  }
  return sub_1DC406790();
}

uint64_t sub_1DC31EA94()
{
  return sub_1DC31E8F4();
}

uint64_t sub_1DC31EAB4()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = *v0 + OBJC_IVAR____TtC8StocksUI9StockView_revision;
  swift_beginAccess();
  return *(_QWORD *)v1;
}

uint64_t sub_1DC31EAFC(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v3;
  uint64_t result;

  v3 = (_QWORD *)(*v1 + OBJC_IVAR____TtC8StocksUI9StockView_revision);
  result = swift_beginAccess();
  *v3 = a1;
  return result;
}

uint64_t (*sub_1DC31EB48())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1DC31EBF8()
{
  uint64_t v0;
  id v1;
  void *v2;
  uint64_t v3;
  char v5;

  sub_1DC40679C();
  if (v5 != 1)
    return 0;
  v1 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC8StocksUI9StockView_companyLabel), sel_text);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = sub_1DC408A4C();

  return v3;
}

uint64_t sub_1DC31ED24()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1DC31ED48()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;

  v1 = OBJC_IVAR____TtC8StocksUI9StockView_symbolLabel;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v2 = OBJC_IVAR____TtC8StocksUI9StockView_companyLabel;
  *(_QWORD *)&v0[v2] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v3 = OBJC_IVAR____TtC8StocksUI9StockView_companyLabelLong;
  *(_QWORD *)&v0[v3] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v4 = OBJC_IVAR____TtC8StocksUI9StockView_exchangeLabel;
  *(_QWORD *)&v0[v4] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v5 = OBJC_IVAR____TtC8StocksUI9StockView_priceLabel;
  *(_QWORD *)&v0[v5] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v6 = OBJC_IVAR____TtC8StocksUI9StockView_priceChangeButton;
  *(_QWORD *)&v0[v6] = sub_1DC0D4D90();
  v7 = OBJC_IVAR____TtC8StocksUI9StockView_sparklineView;
  *(_QWORD *)&v0[v7] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for StockSparklineView()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v0[OBJC_IVAR____TtC8StocksUI9StockView_axElement] = 0;
  v0[OBJC_IVAR____TtC8StocksUI9StockView_isSelected] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8StocksUI9StockView_revision] = 0;
  v8 = OBJC_IVAR____TtC8StocksUI9StockView_isEditing;
  sub_1DC083594(0, &qword_1EDB2A8C8, MEMORY[0x1E0DEAFA0], MEMORY[0x1E0DBC1B0]);
  swift_allocObject();
  *(_QWORD *)&v0[v8] = sub_1DC40676C();
  v9 = &v0[OBJC_IVAR____TtC8StocksUI9StockView_makeAccessibilityCustomActions];
  *v9 = 0;
  v9[1] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8StocksUI9StockView_accessibilityPriceString] = 0;
  v10 = &v0[OBJC_IVAR____TtC8StocksUI9StockView_accessibilityCompanyName];
  *v10 = 0;
  v10[1] = 0;
  v11 = &v0[OBJC_IVAR____TtC8StocksUI9StockView_accessibilityLongCompanyName];
  *v11 = 0;
  v11[1] = 0;

  sub_1DC409838();
  __break(1u);
}

uint64_t sub_1DC31EF7C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  uint64_t inited;
  void *v20;
  unint64_t v21;
  id v22;
  uint64_t v23;
  id v24;
  void *v25;
  void *v26;
  id v27;
  void *v28;
  id v29;
  void *v30;
  id v31;
  uint64_t result;
  void *v33;
  void *v34;
  double v35;
  id v36;
  double v37;
  double v38;
  double v39;
  double v40;
  CGFloat v41;
  double v42;
  double v43;
  CGFloat v44;
  CGFloat Height;
  uint64_t WatchlistViewLayoutAttributes;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  CGRect v51;

  v4 = sub_1DC40952C();
  v49 = *(_QWORD *)(v4 - 8);
  v50 = v4;
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1DC4052FC();
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = v12;
  v48 = v11;
  (*(void (**)(char *, uint64_t, __n128))(v12 + 16))(v10, a1, v8);
  sub_1DC405224();
  v14 = v13;
  sub_1DC405224();
  v16 = v15;
  sub_1DC405230();
  v18 = v17;
  sub_1DC0FB194();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DC40DC10;
  v20 = (void *)*MEMORY[0x1E0DC1138];
  *(_QWORD *)(inited + 32) = *MEMORY[0x1E0DC1138];
  v21 = sub_1DC0D0F34();
  swift_bridgeObjectRetain();
  v22 = v20;
  v23 = sub_1DC4092F8();
  *(_QWORD *)(inited + 64) = v21;
  *(_QWORD *)(inited + 40) = v23;
  sub_1DC0FA3C4(inited);
  v24 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  v25 = (void *)sub_1DC408A1C();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1DC0FB14C();
  v26 = (void *)sub_1DC408980();
  swift_bridgeObjectRelease();
  v27 = objc_msgSend(v24, sel_initWithString_attributes_, v25, v26);

  sub_1DC409514();
  v28 = (void *)sub_1DC4092F8();
  v29 = objc_msgSend((id)objc_opt_self(), sel_configurationWithFont_, v28);

  sub_1DC409400();
  sub_1DC40946C();
  v30 = (void *)sub_1DC408A1C();
  v31 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v30);

  sub_1DC409508();
  sub_1DC409484();
  sub_1DC409448();
  result = sub_1DC4094FC();
  if (result)
  {
    v33 = (void *)result;
    result = sub_1DC4093F4();
    if (result)
    {
      v34 = (void *)result;
      v35 = v18 - v14 - v16;
      v36 = objc_msgSend(v33, sel_imageWithConfiguration_, result);

      objc_msgSend(v36, sel_size);
      sub_1DC40943C();
      sub_1DC409460();
      sub_1DC4091B4();
      v38 = v37;
      sub_1DC409460();
      v41 = v35 + v39 + v40;
      sub_1DC409460();
      v44 = v38 + v42 + v43;
      v51.origin.x = 0.0;
      v51.origin.y = 0.0;
      v51.size.width = v41;
      v51.size.height = v44;
      Height = CGRectGetHeight(v51);

      (*(void (**)(char *, uint64_t))(v47 + 8))(v10, v48);
      *(CGFloat *)a2 = Height;
      *(_QWORD *)(a2 + 8) = 0;
      *(_QWORD *)(a2 + 16) = 0;
      *(CGFloat *)(a2 + 24) = v41;
      *(CGFloat *)(a2 + 32) = v44;
      WatchlistViewLayoutAttributes = type metadata accessor for CreateWatchlistViewLayoutAttributes();
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v49 + 32))(a2 + *(int *)(WatchlistViewLayoutAttributes + 24), v6, v50);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for CreateWatchlistViewLayoutAttributesFactory()
{
  return objc_opt_self();
}

double UIEdgeInsets.macUnscaled.getter()
{
  double v0;
  double v1;

  sub_1DC4018E8();
  v1 = v0;
  sub_1DC4018E8();
  sub_1DC4018E8();
  sub_1DC4018E8();
  return v1;
}

uint64_t sub_1DC31F3F4()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1DC31F430(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  int v9;
  id v10;
  void *v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  void *v20;
  id v21;
  id v22;
  void *v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  id v28;
  void *v29;
  id v30;
  id v31;
  void *v32;
  id v33;
  id v34;
  uint64_t v35;
  id v36;
  void *v37;
  id v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  id v42;
  void *v43;
  id v44;
  uint64_t v46;
  unint64_t v47;

  v4 = sub_1DC4002BC();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v5 + 16))(v8, a3, v4, v6);
  v9 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v8, v4);
  if (v9 == *MEMORY[0x1E0DAE0B0])
  {
    v10 = sub_1DC31FC68(&OBJC_IVAR____TtC8StocksUI30StockChartCalloutDateFormatter____lazy_storage___dateFormatter, (SEL *)&selRef_setDateStyle_, 2);
    v11 = (void *)sub_1DC3FFF50();
    v12 = objc_msgSend(v10, sel_stringFromDate_, v11);

    v13 = sub_1DC408A4C();
    v15 = v14;

    v46 = v13;
    v47 = v15;
    sub_1DC408B48();
    v16 = sub_1DC31FC68(&OBJC_IVAR____TtC8StocksUI30StockChartCalloutDateFormatter____lazy_storage___timeFormatter, (SEL *)&selRef_setTimeStyle_, 1);
    v17 = (void *)sub_1DC3FFF50();
    v18 = objc_msgSend(v16, sel_stringFromDate_, v17);

    sub_1DC408A4C();
    sub_1DC408B48();
    swift_bridgeObjectRelease();
    sub_1DC408B48();
    v19 = sub_1DC31FC68(&OBJC_IVAR____TtC8StocksUI30StockChartCalloutDateFormatter____lazy_storage___timeFormatter, (SEL *)&selRef_setTimeStyle_, 1);
    v20 = (void *)sub_1DC3FFF50();
    v21 = objc_msgSend(v19, sel_stringFromDate_, v20);
  }
  else
  {
    if (v9 != *MEMORY[0x1E0DAE0B8])
    {
      v36 = sub_1DC31FC68(&OBJC_IVAR____TtC8StocksUI30StockChartCalloutDateFormatter____lazy_storage___dateFormatter, (SEL *)&selRef_setDateStyle_, 2);
      v37 = (void *)sub_1DC3FFF50();
      v38 = objc_msgSend(v36, sel_stringFromDate_, v37);

      v39 = sub_1DC408A4C();
      v41 = v40;

      v46 = v39;
      v47 = v41;
      sub_1DC408B48();
      v42 = sub_1DC31FC68(&OBJC_IVAR____TtC8StocksUI30StockChartCalloutDateFormatter____lazy_storage___dateFormatter, (SEL *)&selRef_setDateStyle_, 2);
      v43 = (void *)sub_1DC3FFF50();
      v44 = objc_msgSend(v42, sel_stringFromDate_, v43);

      sub_1DC408A4C();
      sub_1DC408B48();
      swift_bridgeObjectRelease();
      v35 = v46;
      (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
      return v35;
    }
    v46 = 0;
    v47 = 0xE000000000000000;
    sub_1DC409730();
    v22 = sub_1DC31FC68(&OBJC_IVAR____TtC8StocksUI30StockChartCalloutDateFormatter____lazy_storage___dateFormatter, (SEL *)&selRef_setDateStyle_, 2);
    v23 = (void *)sub_1DC3FFF50();
    v24 = objc_msgSend(v22, sel_stringFromDate_, v23);

    v25 = sub_1DC408A4C();
    v27 = v26;
    swift_bridgeObjectRelease();

    v46 = v25;
    v47 = v27;
    sub_1DC408B48();
    v28 = sub_1DC31FC68(&OBJC_IVAR____TtC8StocksUI30StockChartCalloutDateFormatter____lazy_storage___timeFormatter, (SEL *)&selRef_setTimeStyle_, 1);
    v29 = (void *)sub_1DC3FFF50();
    v30 = objc_msgSend(v28, sel_stringFromDate_, v29);

    sub_1DC408A4C();
    sub_1DC408B48();
    swift_bridgeObjectRelease();
    sub_1DC408B48();
    v31 = sub_1DC31FC68(&OBJC_IVAR____TtC8StocksUI30StockChartCalloutDateFormatter____lazy_storage___dateFormatter, (SEL *)&selRef_setDateStyle_, 2);
    v32 = (void *)sub_1DC3FFF50();
    v33 = objc_msgSend(v31, sel_stringFromDate_, v32);

    sub_1DC408A4C();
    sub_1DC408B48();
    swift_bridgeObjectRelease();
    sub_1DC408B48();
    v19 = sub_1DC31FC68(&OBJC_IVAR____TtC8StocksUI30StockChartCalloutDateFormatter____lazy_storage___timeFormatter, (SEL *)&selRef_setTimeStyle_, 1);
    v20 = (void *)sub_1DC3FFF50();
    v21 = objc_msgSend(v19, (SEL)&selRef_aggregate, v20);
  }
  v34 = v21;

  sub_1DC408A4C();
  sub_1DC408B48();
  swift_bridgeObjectRelease();
  return v46;
}

uint64_t sub_1DC31F9AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  int v9;
  int v10;
  int v11;
  id v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  id v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t ObjCClassFromMetadata;
  id v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  _QWORD v32[2];

  v4 = sub_1DC4002BC();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v5 + 16))(v8, a2, v4, v6);
  v9 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v8, v4);
  v10 = *MEMORY[0x1E0DAE0B0];
  v11 = *MEMORY[0x1E0DAE0B8];
  v12 = sub_1DC31FC68(&OBJC_IVAR____TtC8StocksUI30StockChartCalloutDateFormatter____lazy_storage___dateFormatter, (SEL *)&selRef_setDateStyle_, 2);
  v32[1] = a1;
  v13 = (void *)sub_1DC3FFF50();
  v14 = objc_msgSend(v12, sel_stringFromDate_, v13);

  v15 = sub_1DC408A4C();
  v17 = v16;

  if (v9 == v10 || v9 == v11)
  {
    v19 = v17;
    v20 = sub_1DC31FC68(&OBJC_IVAR____TtC8StocksUI30StockChartCalloutDateFormatter____lazy_storage___timeFormatter, (SEL *)&selRef_setTimeStyle_, 1);
    v21 = (void *)sub_1DC3FFF50();
    v22 = objc_msgSend(v20, sel_stringFromDate_, v21);

    v23 = sub_1DC408A4C();
    v25 = v24;

    type metadata accessor for Localized();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    v27 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
    sub_1DC3FFC80();

    sub_1DC0E7FF0();
    v28 = swift_allocObject();
    *(_OWORD *)(v28 + 16) = xmmword_1DC40C740;
    v29 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v28 + 56) = MEMORY[0x1E0DEA968];
    v30 = sub_1DC0E7FAC();
    *(_QWORD *)(v28 + 32) = v15;
    *(_QWORD *)(v28 + 40) = v19;
    *(_QWORD *)(v28 + 96) = v29;
    *(_QWORD *)(v28 + 104) = v30;
    *(_QWORD *)(v28 + 64) = v30;
    *(_QWORD *)(v28 + 72) = v23;
    *(_QWORD *)(v28 + 80) = v25;
    v15 = sub_1DC408A28();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  }
  return v15;
}

id sub_1DC31FC68(uint64_t *a1, SEL *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  uint64_t v9;
  id v10;
  void *v11;
  void *v12;
  id v13;

  v4 = *a1;
  v5 = *(void **)(v3 + *a1);
  if (v5)
  {
    v6 = *(id *)(v3 + *a1);
  }
  else
  {
    v9 = v3;
    v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3578]), sel_init);
    objc_msgSend(v10, *a2, a3);
    v11 = (void *)sub_1DC4001F0();
    objc_msgSend(v10, sel_setTimeZone_, v11);

    v12 = *(void **)(v9 + v4);
    *(_QWORD *)(v9 + v4) = v10;
    v6 = v10;

    v5 = 0;
  }
  v13 = v5;
  return v6;
}

uint64_t sub_1DC31FD24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC8StocksUI30StockChartCalloutDateFormatter_timezone;
  v2 = sub_1DC400220();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_1DC31FD94()
{
  return type metadata accessor for StockChartCalloutDateFormatter();
}

uint64_t type metadata accessor for StockChartCalloutDateFormatter()
{
  uint64_t result;

  result = qword_1EDB39D20;
  if (!qword_1EDB39D20)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1DC31FDD8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1DC400220();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

void *sub_1DC31FE50()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  void *v35;
  id v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  void *v42;
  uint64_t v43;
  __n128 v44;
  uint64_t v45;
  char *v46;
  void *v47;
  void (*v48)(char *, uint64_t);
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  unint64_t v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  void *v61;
  uint64_t v62;
  void *v63;
  uint64_t v64;
  void *v65;
  uint64_t v66;
  id v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void *v78;
  uint64_t v79;
  void (*v80)(uint64_t, _QWORD, uint64_t, uint64_t);
  id v81;
  void *Strong;
  char *v83;
  void *v84;
  uint64_t v85;
  _QWORD v87[3];
  uint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  _QWORD *v92;
  uint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  char *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  __int128 v114;
  __int128 v115;
  __int128 v116;
  __int128 v117;
  uint64_t v118;
  __int128 v119;
  __int128 v120;
  char v121;

  v1 = v0;
  sub_1DC092F50(0, &qword_1F034C568, (void (*)(uint64_t))type metadata accessor for WatchlistMembershipCommandContext);
  MEMORY[0x1E0C80A78](v2);
  v91 = (char *)v87 - v3;
  v4 = sub_1DC405848();
  v88 = *(_QWORD *)(v4 - 8);
  v89 = v4;
  MEMORY[0x1E0C80A78](v4);
  v90 = (char *)v87 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1DC40124C();
  v96 = *(_QWORD *)(v6 - 8);
  v97 = v6;
  MEMORY[0x1E0C80A78](v6);
  v95 = (char *)v87 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC092F50(0, &qword_1EDB28E40, v8);
  MEMORY[0x1E0C80A78](v9);
  v94 = (char *)v87 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v87 - v12;
  v14 = type metadata accessor for StockViewModel();
  v93 = *(_QWORD *)(v14 - 8);
  v15 = *(_QWORD *)(v93 + 64);
  MEMORY[0x1E0C80A78](v14);
  v99 = (char *)v87 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)v87 - v17;
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)v87 - v20;
  v22 = type metadata accessor for StockSearchLayoutModel();
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)v87 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC2AF968();
  sub_1DC404DE0();
  sub_1DC2B3B68();
  v26 = (uint64_t)&v24[*(int *)(v25 + 48)];
  v27 = &v24[*(int *)(v25 + 64)];
  v118 = *((_QWORD *)v27 + 28);
  v28 = *((_OWORD *)v27 + 13);
  v116 = *((_OWORD *)v27 + 12);
  v117 = v28;
  v29 = *((_OWORD *)v27 + 11);
  v114 = *((_OWORD *)v27 + 10);
  v115 = v29;
  v30 = *((_OWORD *)v27 + 9);
  v112 = *((_OWORD *)v27 + 8);
  v113 = v30;
  v31 = *((_OWORD *)v27 + 7);
  v110 = *((_OWORD *)v27 + 6);
  v111 = v31;
  v32 = *((_OWORD *)v27 + 5);
  v108 = *((_OWORD *)v27 + 4);
  v109 = v32;
  v33 = *((_OWORD *)v27 + 1);
  v104 = *(_OWORD *)v27;
  v105 = v33;
  v34 = *((_OWORD *)v27 + 3);
  v106 = *((_OWORD *)v27 + 2);
  v107 = v34;
  sub_1DC0F0F38((uint64_t)v24, (uint64_t)v21);
  v98 = v13;
  sub_1DC2B1C94(v26, (uint64_t)v13);
  sub_1DC320D84();
  v35 = (void *)sub_1DC4090AC();
  v36 = objc_msgSend(v35, sel_backgroundView);
  v100 = v21;
  if (v36)
  {
    v37 = v36;
    swift_beginAccess();
    v39 = v1[7];
    v38 = v1[8];
    v40 = __swift_project_boxed_opaque_existential_1(v1 + 4, v39);
    v92 = v87;
    v41 = v1;
    v42 = v35;
    v43 = *(_QWORD *)(v39 - 8);
    v44 = MEMORY[0x1E0C80A78](v40);
    v46 = (char *)v87 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, __n128))(v43 + 16))(v46, v44);
    v47 = (void *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)(v38 + 16) + 64))(v39);
    v48 = *(void (**)(char *, uint64_t))(v43 + 8);
    v35 = v42;
    v1 = v41;
    v48(v46, v39);
    objc_msgSend(v37, sel_setBackgroundColor_, v47);

    v21 = v100;
  }
  sub_1DC3206D8(v35);
  v49 = swift_allocObject();
  v92 = (_QWORD *)(v49 + 16);
  swift_unknownObjectUnownedInit();
  swift_unownedRetainStrong();
  swift_unownedRetain();
  swift_release();
  sub_1DC0FD5F4((uint64_t)v21, (uint64_t)v18);
  sub_1DC0FD5F4((uint64_t)v18, (uint64_t)v99);
  v50 = (*(unsigned __int8 *)(v93 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v93 + 80);
  v51 = (v15 + v50 + 7) & 0xFFFFFFFFFFFFFFF8;
  v52 = swift_allocObject();
  *(_QWORD *)(v52 + 16) = v1;
  sub_1DC0F0F38((uint64_t)v18, v52 + v50);
  v53 = v52 + v51;
  v54 = v117;
  *(_OWORD *)(v53 + 192) = v116;
  *(_OWORD *)(v53 + 208) = v54;
  *(_QWORD *)(v53 + 224) = v118;
  v55 = v113;
  *(_OWORD *)(v53 + 128) = v112;
  *(_OWORD *)(v53 + 144) = v55;
  v56 = v115;
  *(_OWORD *)(v53 + 160) = v114;
  *(_OWORD *)(v53 + 176) = v56;
  v57 = v109;
  *(_OWORD *)(v53 + 64) = v108;
  *(_OWORD *)(v53 + 80) = v57;
  v58 = v111;
  *(_OWORD *)(v53 + 96) = v110;
  *(_OWORD *)(v53 + 112) = v58;
  v59 = v105;
  *(_OWORD *)v53 = v104;
  *(_OWORD *)(v53 + 16) = v59;
  v60 = v107;
  *(_OWORD *)(v53 + 32) = v106;
  *(_OWORD *)(v53 + 48) = v60;
  *(_QWORD *)(v52 + ((v51 + 239) & 0xFFFFFFFFFFFFFFF8)) = v49;
  swift_unownedRetain();
  v93 = v49;
  swift_retain();
  v61 = (void *)sub_1DC4053D4();
  v62 = swift_allocObject();
  *(_QWORD *)(v62 + 16) = sub_1DC321010;
  *(_QWORD *)(v62 + 24) = v52;
  swift_retain();

  swift_release();
  v63 = (void *)sub_1DC40538C();
  v64 = swift_allocObject();
  *(_QWORD *)(v64 + 16) = sub_1DC321010;
  *(_QWORD *)(v64 + 24) = v52;
  swift_retain();

  swift_release();
  v65 = (void *)sub_1DC405398();
  v66 = swift_allocObject();
  *(_QWORD *)(v66 + 16) = sub_1DC321010;
  *(_QWORD *)(v66 + 24) = v52;
  swift_retain();

  swift_release();
  v67 = v94;
  sub_1DC191CF8((uint64_t)v98, (uint64_t)v94);
  v68 = v96;
  v69 = v97;
  if ((*(unsigned int (**)(id, uint64_t, uint64_t))(v96 + 48))(v67, 1, v97) == 1)
  {
    sub_1DC092F14((uint64_t)v67, &qword_1EDB28E40, (void (*)(uint64_t))MEMORY[0x1E0DAF270]);
  }
  else
  {
    v70 = v95;
    (*(void (**)(char *, id, uint64_t))(v68 + 32))(v95, v67, v69);
    v71 = (char *)sub_1DC4053B0();
    v94 = (char *)*(id *)&v71[OBJC_IVAR____TtC8StocksUI19StockSearchCellView_watchlistSelectionButton];

    v72 = v1[11];
    v87[1] = v1[12];
    v87[2] = v72;
    (*(void (**)(char *, _QWORD, uint64_t))(v88 + 104))(v90, *MEMORY[0x1E0DB9EF8], v89);
    v73 = v1[13];
    v102 = sub_1DC4018AC();
    v103 = sub_1DC080808((unint64_t *)&qword_1EDB29180, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8638], MEMORY[0x1E0D59B68]);
    v101 = v73;
    v119 = 0u;
    v120 = 0u;
    v121 = 1;
    sub_1DC405434();
    swift_allocObject();
    swift_retain();
    sub_1DC40541C();
    v74 = (uint64_t)v91;
    (*(void (**)(char *, char *, uint64_t))(v68 + 16))(v91, v70, v69);
    v75 = type metadata accessor for WatchlistMembershipCommandContext(0);
    v76 = v74 + *(int *)(v75 + 20);
    v77 = sub_1DC4010E4();
    v78 = v35;
    v79 = *(_QWORD *)(v77 - 8);
    (*(void (**)(uint64_t, char *, uint64_t))(v79 + 16))(v76, v100, v77);
    v80 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v79 + 56);
    v35 = v78;
    v80(v76, 0, 1, v77);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v75 - 8) + 56))(v74, 0, 1, v75);
    v81 = v94;
    sub_1DC404D50();

    swift_release();
    sub_1DC092F14(v74, &qword_1F034C568, (void (*)(uint64_t))type metadata accessor for WatchlistMembershipCommandContext);
    (*(void (**)(char *, uint64_t))(v96 + 8))(v95, v97);
  }
  swift_unownedRetainStrong();
  swift_unknownObjectRetain();
  swift_release();
  Strong = (void *)swift_unknownObjectUnownedLoadStrong();
  v83 = (char *)sub_1DC4053B0();

  v84 = (void *)swift_unknownObjectUnownedLoadStrong();
  sub_1DC405380();

  v85 = (uint64_t)v99;
  sub_1DC3BF8E8(v99, (double *)&v104, v83, 0);
  swift_release();
  swift_release();
  swift_unknownObjectRelease();

  swift_unownedRelease();
  sub_1DC0DD6D4(v85);
  sub_1DC092F14((uint64_t)v98, &qword_1EDB28E40, (void (*)(uint64_t))MEMORY[0x1E0DAF270]);
  sub_1DC0DD6D4((uint64_t)v100);
  return v35;
}

uint64_t sub_1DC3206D8(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  char *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  id v25;
  id v26;
  char *v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v32;
  uint64_t **v33;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t **v39;
  uint64_t v40;
  uint64_t v41;

  v2 = v1;
  v4 = sub_1DC404B58();
  v40 = *(_QWORD *)(v4 - 8);
  v41 = v4;
  MEMORY[0x1E0C80A78](v4);
  v39 = (uint64_t **)((char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = sub_1DC4065EC();
  v37 = *(_QWORD *)(v6 - 8);
  v38 = v6;
  MEMORY[0x1E0C80A78](v6);
  v36 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1DC4054C4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (void *)sub_1DC405368();
  swift_beginAccess();
  v13 = *(_QWORD *)(v1 + 56);
  v14 = *(_QWORD *)(v1 + 64);
  v15 = __swift_project_boxed_opaque_existential_1((_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 56));
  v16 = *(_QWORD *)(v13 - 8);
  v17 = MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v35 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, __n128))(v16 + 16))(v19, v17);
  v20 = (void *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)(v14 + 16) + 88))(v13);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v19, v13);
  objc_msgSend(v12, sel_setBackgroundColor_, v20);

  v21 = (void *)sub_1DC405368();
  sub_1DC4054B8();

  v22 = (void *)sub_1DC405368();
  (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E0DB9858], v8);
  sub_1DC4054D0();

  objc_msgSend(a1, sel_setFocusEffect_, 0);
  v23 = (void *)sub_1DC405368();
  sub_1DC4054AC();

  v24 = (void *)MEMORY[0x1DF0CAD78](v2 + 16);
  if (v24)
  {
    v25 = objc_msgSend(v24, sel_presentingViewController);
    v26 = objc_msgSend(v25, sel_splitViewController);
    swift_unknownObjectRelease();

  }
  v27 = v36;
  sub_1DC4065E0();
  v28 = (uint64_t *)swift_allocObject();
  v29 = MEMORY[0x1E0DBBF10];
  v30 = v38;
  v28[5] = v38;
  v28[6] = v29;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v28 + 2);
  v32 = v37;
  (*(void (**)(uint64_t *, char *, uint64_t))(v37 + 16))(boxed_opaque_existential_1, v27, v30);
  v33 = v39;
  *v39 = v28;
  (*(void (**)(uint64_t **, _QWORD, uint64_t))(v40 + 104))(v33, *MEMORY[0x1E0DB82C0], v41);
  sub_1DC4053A4();
  return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v27, v30);
}

void sub_1DC3209F0(uint64_t a1, void *a2, double *a3)
{
  void *Strong;
  void *v6;
  char *v7;

  swift_unownedRetainStrong();
  swift_unknownObjectRetain();
  swift_release();
  Strong = (void *)swift_unknownObjectUnownedLoadStrong();
  v7 = (char *)sub_1DC4053B0();

  v6 = (void *)swift_unknownObjectUnownedLoadStrong();
  sub_1DC405380();

  sub_1DC3BF8E8(a2, a3, v7, 0);
  swift_unknownObjectRelease();

}

uint64_t sub_1DC320A98()
{
  uint64_t v0;

  sub_1DC148A20(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1DC320ADC()
{
  sub_1DC320D84();
  return sub_1DC4090C4();
}

void *sub_1DC320B10@<X0>(_QWORD *a1@<X8>)
{
  void *result;

  result = sub_1DC31FE50();
  *a1 = result;
  return result;
}

uint64_t sub_1DC320B3C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v12[3];
  uint64_t v13;
  uint64_t v14;

  swift_beginAccess();
  sub_1DC0824D4(v2 + 32, (uint64_t)v12);
  v4 = v13;
  v5 = v14;
  __swift_project_boxed_opaque_existential_1(v12, v13);
  v6 = *(_QWORD *)(v5 + 8);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 8);
  v10 = v4;
  v11 = v5;
  __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v9);
  v7(a2, v4, v6);
  swift_beginAccess();
  __swift_destroy_boxed_opaque_existential_1(v2 + 32);
  sub_1DC097DD0(&v9, v2 + 32);
  swift_endAccess();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  swift_getObjectType();
  return sub_1DC405DF4();
}

uint64_t sub_1DC320C44@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  if (objc_msgSend(a1, sel_horizontalSizeClass) == (id)2)
  {
    sub_1DC0E6698();
    v6 = *(int *)(v4 + 48);
    sub_1DC4066E8();
  }
  else
  {
    sub_1DC0E6698();
    v6 = *(int *)(v5 + 48);
    sub_1DC4066DC();
  }
  swift_beginAccess();
  v7 = v2[7];
  v8 = v2[8];
  v9 = __swift_project_boxed_opaque_existential_1(v2 + 4, v7);
  v10 = *(_QWORD *)(v7 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, __n128))(v10 + 16))(v13, v11);
  v14 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v8 + 16) + 160))(v7);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v7);
  *(_QWORD *)(a2 + v6) = v14;
  v15 = *MEMORY[0x1E0DBC008];
  v16 = sub_1DC40667C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(a2, v15, v16);
}

void sub_1DC320D84()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB27578)
  {
    type metadata accessor for StockSearchCellView();
    sub_1DC080808(qword_1EDB31450, (uint64_t (*)(uint64_t))type metadata accessor for StockSearchCellView, (uint64_t)&unk_1DC427E0C);
    v0 = sub_1DC4053E0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB27578);
  }
}

uint64_t sub_1DC320DFC()
{
  swift_unknownObjectUnownedDestroy();
  return swift_deallocObject();
}

uint64_t sub_1DC320E20()
{
  uint64_t v0;
  int *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v1 = (int *)type metadata accessor for StockViewModel();
  v2 = (*(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80);
  swift_unownedRelease();
  v3 = v0 + v2;
  v4 = sub_1DC4010E4();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v0 + v2, v4);
  v5 = v0 + v2 + v1[5];
  v6 = sub_1DC401030();
  v7 = *(_QWORD *)(v6 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6))
    (*(void (**)(unint64_t, uint64_t))(v7 + 8))(v5, v6);
  v8 = v3 + v1[6];
  v9 = type metadata accessor for StockSparklineViewModel(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v8, 1, v9))
  {
    v10 = sub_1DC408614();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v8, v10);
    v11 = v8 + *(int *)(v9 + 32);
    v12 = sub_1DC400F7C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  }
  v13 = v3 + v1[7];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v14 = type metadata accessor for PriceViewModel();
  v15 = v13 + *(int *)(v14 + 40);
  v16 = sub_1DC4011C8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
  v17 = v13 + *(int *)(v14 + 44);
  v18 = sub_1DC400118();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
  v19 = v3 + v1[8];
  v20 = sub_1DC4008EC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
  swift_release();
  return swift_deallocObject();
}

void sub_1DC321010()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(type metadata accessor for StockViewModel() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  sub_1DC3209F0(*(_QWORD *)(v0 + 16), (void *)(v0 + v2), (double *)(v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_1DC321060()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DC321084()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocObject();
}

uint64_t sub_1DC3210B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  void (*v16)(unint64_t *, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t (*v18)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t result;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v4 = sub_1DC403A60();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1DC403BEC();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (unint64_t *)((char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = *(_QWORD *)(a1 + 16);
  if (!v12)
  {
LABEL_6:
    v17 = sub_1DC403A54();
    v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56);
    v19 = a2;
    return v18(v19, 1, 1, v17);
  }
  v26 = v5;
  v27 = v4;
  v28 = a2;
  v13 = a1 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
  v14 = *MEMORY[0x1E0D617F8];
  v15 = *(_QWORD *)(v9 + 72);
  v16 = *(void (**)(unint64_t *, uint64_t, uint64_t))(v9 + 16);
  swift_bridgeObjectRetain();
  while (1)
  {
    v16(v11, v13, v8);
    if ((*(unsigned int (**)(unint64_t *, uint64_t))(v9 + 88))(v11, v8) == v14)
      break;
    (*(void (**)(unint64_t *, uint64_t))(v9 + 8))(v11, v8);
    v13 += v15;
    if (!--v12)
    {
      swift_bridgeObjectRelease();
      a2 = v28;
      goto LABEL_6;
    }
  }
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t *, uint64_t))(v9 + 96))(v11, v8);
  v21 = *v11;
  v22 = v11[2];
  swift_bridgeObjectRelease();
  if (!v22)
  {
    v17 = sub_1DC403A54();
    v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56);
    v19 = v28;
    return v18(v19, 1, 1, v17);
  }
  if (v21 >= 0x15)
  {
    result = sub_1DC409838();
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v26 + 104))(v7, **((unsigned int **)&unk_1EA4649D0 + v21), v27);
    v23 = v28;
    sub_1DC403A3C();
    v24 = sub_1DC403A54();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v23, 0, 1, v24);
  }
  return result;
}

uint64_t sub_1DC321314@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  void (*v15)(_QWORD *, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v4 = sub_1DC403B14();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1DC403BEC();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (uint64_t *)((char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = *(_QWORD *)(a1 + 16);
  if (!v11)
  {
LABEL_6:
    v16 = sub_1DC403B08();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(a2, 1, 1, v16);
  }
  v24 = a2;
  v12 = a1 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  v13 = *MEMORY[0x1E0D61800];
  v14 = *(_QWORD *)(v8 + 72);
  v15 = *(void (**)(_QWORD *, uint64_t, uint64_t))(v8 + 16);
  swift_bridgeObjectRetain();
  while (1)
  {
    v15(v10, v12, v7);
    if ((*(unsigned int (**)(_QWORD *, uint64_t))(v8 + 88))(v10, v7) == v13)
      break;
    (*(void (**)(_QWORD *, uint64_t))(v8 + 8))(v10, v7);
    v12 += v14;
    if (!--v11)
    {
      swift_bridgeObjectRelease();
      a2 = v24;
      goto LABEL_6;
    }
  }
  swift_bridgeObjectRelease();
  (*(void (**)(_QWORD *, uint64_t))(v8 + 96))(v10, v7);
  v18 = v10[2];
  v20 = v10[5];
  v19 = v10[6];
  swift_bridgeObjectRelease();
  result = FCFeedGroupType.groupType()(v18, (uint64_t)v6);
  if (v20 > 0x7FFFFFFF)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (v20 < (uint64_t)0xFFFFFFFF80000000 || v19 < (uint64_t)0xFFFFFFFF80000000)
    goto LABEL_14;
  if (v19 > 0x7FFFFFFF)
  {
LABEL_15:
    __break(1u);
    return result;
  }
  v21 = v24;
  sub_1DC403AF0();
  v22 = sub_1DC403B08();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v21, 0, 1, v22);
}

uint64_t sub_1DC321528()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1DC321554(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1DC3215C4(a1, a2);
    return swift_release();
  }
  return result;
}

uint64_t sub_1DC3215C4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  unsigned int (*v29)(uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  id *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v44;
  uint64_t result;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(uint64_t);
  uint64_t v55;
  uint64_t v56;
  int *v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unsigned int (*v64)(uint64_t, uint64_t, uint64_t);
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  id *v72;
  uint64_t v73;
  _QWORD *v74;
  uint64_t v75;

  v75 = a2;
  sub_1DC154164();
  v4 = v3;
  MEMORY[0x1E0C80A78](v3);
  v66 = (uint64_t)&v63 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1DC400010();
  v69 = *(_QWORD *)(v6 - 8);
  v70 = v6;
  MEMORY[0x1E0C80A78](v6);
  v68 = (char *)&v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for StocksAudioTrack();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v65 = (uint64_t)&v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (id *)((char *)&v63 - v12);
  sub_1DC1540EC();
  v15 = v14;
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v63 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC089DA4(0, &qword_1EDB2B7F0, (uint64_t (*)(uint64_t))type metadata accessor for StocksAudioTrack, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v18);
  v71 = (char *)&v63 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v72 = (id *)((char *)&v63 - v21);
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)&v63 - v23;
  MEMORY[0x1E0C80A78](v25);
  v27 = (char *)&v63 - v26;
  v67 = a1;
  sub_1DC401D14();
  v73 = v4;
  sub_1DC401D14();
  v28 = (uint64_t)&v17[*(int *)(v15 + 48)];
  sub_1DC0EDD64((uint64_t)v27, (uint64_t)v17, &qword_1EDB2B7F0, (uint64_t (*)(uint64_t))type metadata accessor for StocksAudioTrack);
  sub_1DC0EDD64((uint64_t)v24, v28, &qword_1EDB2B7F0, (uint64_t (*)(uint64_t))type metadata accessor for StocksAudioTrack);
  v29 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v29((uint64_t)v17, 1, v8) == 1)
  {
    sub_1DC0B091C((uint64_t)v24, &qword_1EDB2B7F0, (uint64_t (*)(uint64_t))type metadata accessor for StocksAudioTrack);
    sub_1DC0B091C((uint64_t)v27, &qword_1EDB2B7F0, (uint64_t (*)(uint64_t))type metadata accessor for StocksAudioTrack);
    if (v29(v28, 1, v8) == 1)
    {
      v30 = (uint64_t)v17;
LABEL_25:
      result = sub_1DC0B091C(v30, &qword_1EDB2B7F0, (uint64_t (*)(uint64_t))type metadata accessor for StocksAudioTrack);
      v32 = v74;
      goto LABEL_28;
    }
    goto LABEL_6;
  }
  v31 = v72;
  sub_1DC0EDD64((uint64_t)v17, (uint64_t)v72, &qword_1EDB2B7F0, (uint64_t (*)(uint64_t))type metadata accessor for StocksAudioTrack);
  if (v29(v28, 1, v8) == 1)
  {
    sub_1DC0B091C((uint64_t)v24, &qword_1EDB2B7F0, (uint64_t (*)(uint64_t))type metadata accessor for StocksAudioTrack);
    sub_1DC0B091C((uint64_t)v27, &qword_1EDB2B7F0, (uint64_t (*)(uint64_t))type metadata accessor for StocksAudioTrack);
    sub_1DC0926D8((uint64_t)v31, (uint64_t (*)(_QWORD))type metadata accessor for StocksAudioTrack);
LABEL_6:
    sub_1DC0926D8((uint64_t)v17, (uint64_t (*)(_QWORD))sub_1DC1540EC);
    v32 = v74;
LABEL_7:
    if ((sub_1DC401D20() & 1) == 0)
    {
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1DC401810();
      swift_release();
      swift_bridgeObjectRelease();
    }
    if (v32[5])
    {
      v33 = v32[5];
    }
    else
    {
      v33 = v32[4];
      swift_retain();
    }
    type metadata accessor for AudioSessionManager.Session();
    v46 = swift_allocObject();
    swift_retain();
    v47 = v68;
    sub_1DC400004();
    v48 = sub_1DC3FFFF8();
    v50 = v49;
    (*(void (**)(char *, uint64_t))(v69 + 8))(v47, v70);
    *(_QWORD *)(v46 + 16) = v48;
    *(_QWORD *)(v46 + 24) = v50;
    *(_BYTE *)(v46 + 48) = 1;
    *(_QWORD *)(v46 + 56) = 0;
    *(_QWORD *)(v46 + 64) = 0;
    *(_QWORD *)(v46 + 32) = v33;
    *(_QWORD *)(v46 + 40) = 0;
    v32[13] = v46;
    swift_release();
    if ((sub_1DC401D20() & 1) == 0)
    {
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1DC401804();
      swift_release();
      swift_bridgeObjectRelease();
    }
    v32[5] = 0;
    swift_release();
    v51 = (uint64_t)v71;
    sub_1DC401D14();
    if (v29(v51, 1, v8) == 1)
    {
      result = sub_1DC0B091C(v51, &qword_1EDB2B7F0, (uint64_t (*)(uint64_t))type metadata accessor for StocksAudioTrack);
    }
    else
    {
      v52 = v51;
      v53 = v65;
      sub_1DC092ED0(v52, v65, (uint64_t (*)(_QWORD))type metadata accessor for StocksAudioTrack);
      swift_beginAccess();
      v54 = (void (*)(uint64_t))v32[14];
      if (v54)
      {
        swift_endAccess();
        swift_retain();
        v54(v53);
        sub_1DC0E81D0((uint64_t)v54);
        sub_1DC0926D8(v53, (uint64_t (*)(_QWORD))type metadata accessor for StocksAudioTrack);
      }
      else
      {
        sub_1DC0926D8(v53, (uint64_t (*)(_QWORD))type metadata accessor for StocksAudioTrack);
        swift_endAccess();
      }
      v55 = v32[14];
      v32[14] = 0;
      v32[15] = 0;
      result = sub_1DC0E81D0(v55);
    }
    goto LABEL_28;
  }
  v63 = v8;
  v64 = v29;
  v34 = (uint64_t)v13;
  sub_1DC092ED0(v28, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for StocksAudioTrack);
  v35 = objc_msgSend(*v31, sel_identifier);
  v36 = sub_1DC408A4C();
  v38 = v37;

  v39 = objc_msgSend(*v13, sel_identifier);
  v40 = sub_1DC408A4C();
  v42 = v41;

  if (v36 == v40 && v38 == v42)
  {
    swift_bridgeObjectRelease_n();
    sub_1DC0926D8(v34, (uint64_t (*)(_QWORD))type metadata accessor for StocksAudioTrack);
    sub_1DC0B091C((uint64_t)v24, &qword_1EDB2B7F0, (uint64_t (*)(uint64_t))type metadata accessor for StocksAudioTrack);
    sub_1DC0B091C((uint64_t)v27, &qword_1EDB2B7F0, (uint64_t (*)(uint64_t))type metadata accessor for StocksAudioTrack);
    sub_1DC0926D8((uint64_t)v72, (uint64_t (*)(_QWORD))type metadata accessor for StocksAudioTrack);
    v30 = (uint64_t)v17;
    goto LABEL_25;
  }
  v44 = sub_1DC4099E8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1DC0926D8(v34, (uint64_t (*)(_QWORD))type metadata accessor for StocksAudioTrack);
  sub_1DC0B091C((uint64_t)v24, &qword_1EDB2B7F0, (uint64_t (*)(uint64_t))type metadata accessor for StocksAudioTrack);
  sub_1DC0B091C((uint64_t)v27, &qword_1EDB2B7F0, (uint64_t (*)(uint64_t))type metadata accessor for StocksAudioTrack);
  sub_1DC0926D8((uint64_t)v72, (uint64_t (*)(_QWORD))type metadata accessor for StocksAudioTrack);
  result = sub_1DC0B091C((uint64_t)v17, &qword_1EDB2B7F0, (uint64_t (*)(uint64_t))type metadata accessor for StocksAudioTrack);
  v32 = v74;
  v8 = v63;
  v29 = v64;
  if ((v44 & 1) == 0)
    goto LABEL_7;
LABEL_28:
  if (*(_BYTE *)(v32[13] + 48) == 1)
  {
    v56 = v66;
    sub_1DC0990BC(v75, v66, (uint64_t (*)(_QWORD))sub_1DC154164);
    if (swift_getEnumCaseMultiPayload())
    {
      return sub_1DC0926D8(v56, (uint64_t (*)(_QWORD))sub_1DC154164);
    }
    else
    {
      sub_1DC27A2C4();
      v58 = *(_QWORD *)(v56 + v57[12]);
      v59 = v56 + v57[16];
      v60 = *(_BYTE *)(v56 + v57[20]);
      v61 = sub_1DC401C18();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 8))(v59, v61);
      result = sub_1DC0926D8(v56, (uint64_t (*)(_QWORD))type metadata accessor for StocksAudioTrack);
      if ((v60 & 1) == 0)
      {
        v62 = v32[13];
        *(_QWORD *)(v62 + 40) = v58;
        *(_BYTE *)(v62 + 48) = 0;
      }
    }
  }
  return result;
}

uint64_t sub_1DC321D3C()
{
  uint64_t v0;

  swift_release();

  swift_release();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  swift_release();
  swift_release();
  sub_1DC0E81D0(*(_QWORD *)(v0 + 112));
  __swift_destroy_boxed_opaque_existential_1(v0 + 128);
  return v0;
}

uint64_t sub_1DC321DA0()
{
  sub_1DC321D3C();
  return swift_deallocClassInstance();
}

uint64_t sub_1DC321DC0(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  __n128 v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int EnumCaseMultiPayload;
  double v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  double v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void (*v63)(uint64_t, uint64_t);
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  int v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  char *v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  unint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  char *v133;
  char v134;

  v127 = a2;
  v128 = a3;
  v112 = a1;
  v4 = sub_1DC40328C();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD2D0];
  v132 = v4;
  v129 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v111 = v6;
  v131 = (char *)&v98 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v130 = sub_1DC403280();
  v126 = *(_QWORD *)(v130 - 8);
  MEMORY[0x1E0C80A78](v130);
  v123 = v7;
  v133 = (char *)&v98 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1DC40367C();
  v124 = *(_QWORD *)(v8 - 8);
  v125 = v8;
  MEMORY[0x1E0C80A78](v8);
  v121 = v9;
  v122 = (char *)&v98 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v102 = sub_1DC403298();
  v101 = *(_QWORD *)(v102 - 8);
  MEMORY[0x1E0C80A78](v102);
  v99 = (char *)&v98 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1DC089DA4(0, &qword_1F0352088, v5, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v12);
  v103 = (char *)&v98 - v13;
  sub_1DC089DA4(0, &qword_1EDB2B7F0, (uint64_t (*)(uint64_t))type metadata accessor for StocksAudioTrack, v11);
  MEMORY[0x1E0C80A78](v14);
  v109 = (char *)&v98 - v15;
  v110 = type metadata accessor for StocksAudioTrack();
  v108 = *(_QWORD *)(v110 - 8);
  MEMORY[0x1E0C80A78](v110);
  v105 = (uint64_t)&v98 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC154164();
  v119 = v17;
  MEMORY[0x1E0C80A78](v17);
  v100 = (char *)&v98 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v104 = (uint64_t)&v98 - v20;
  MEMORY[0x1E0C80A78](v21);
  v106 = (uint64_t)&v98 - v22;
  MEMORY[0x1E0C80A78](v23);
  v107 = (char *)&v98 - v24;
  MEMORY[0x1E0C80A78](v25);
  v120 = (char *)&v98 - v26;
  MEMORY[0x1E0C80A78](v27);
  v117 = (char *)&v98 - v28;
  MEMORY[0x1E0C80A78](v29);
  v118 = (char *)&v98 - v30;
  v116 = sub_1DC3FFFEC();
  v115 = *(_QWORD *)(v116 - 8);
  MEMORY[0x1E0C80A78](v116);
  v32 = (char *)&v98 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = sub_1DC400010();
  v34 = *(_QWORD *)(v33 - 8);
  MEMORY[0x1E0C80A78](v33);
  v36 = (char *)&v98 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = sub_1DC4017E0();
  v38 = *(_QWORD *)(v37 - 8);
  v39 = MEMORY[0x1E0C80A78](v37);
  v41 = (char *)&v98 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  v113 = *(_QWORD *)(v3 + 16);
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v38 + 104))(v41, *MEMORY[0x1E0CF8550], v37, v39);
  sub_1DC400004();
  sub_1DC3FFFF8();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v36, v33);
  sub_1DC3FFFE0();
  v42 = (uint64_t)v117;
  sub_1DC401654();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v115 + 8))(v32, v116);
  v43 = v114;
  (*(void (**)(char *, uint64_t))(v38 + 8))(v41, v37);
  v44 = *(_QWORD *)(v43 + 104);
  v45 = v43;
  swift_retain();
  v46 = (uint64_t)v118;
  sub_1DC402740();
  v47 = v46;
  sub_1DC0990BC(v46, v42, (uint64_t (*)(_QWORD))sub_1DC154164);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    v49 = 0.0;
    v50 = v129;
    if (EnumCaseMultiPayload != 1)
      goto LABEL_6;
    sub_1DC27A3D0();
    v49 = *(double *)(v42 + *(int *)(v51 + 48));
    v52 = v42 + *(int *)(v51 + 64);
    v53 = sub_1DC401C18();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 8))(v52, v53);
  }
  else
  {
    sub_1DC27A2C4();
    v49 = *(double *)(v42 + *(int *)(v54 + 48));
    v55 = v42 + *(int *)(v54 + 64);
    v56 = sub_1DC401C18();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 8))(v55, v56);
    v50 = v129;
  }
  sub_1DC0926D8(v42, (uint64_t (*)(_QWORD))type metadata accessor for StocksAudioTrack);
LABEL_6:
  sub_1DC0926D8(v47, (uint64_t (*)(_QWORD))sub_1DC154164);
  if ((*(_BYTE *)(v44 + 48) & 1) == 0)
  {
    v57 = v49 - *(double *)(v44 + 40);
    if (v57 <= 0.0)
      v57 = 0.0;
    *(double *)(v44 + 56) = *(double *)(v44 + 56) + v57;
    *(double *)(v44 + 64) = v57;
    *(_QWORD *)(v44 + 40) = 0;
    *(_BYTE *)(v44 + 48) = 1;
  }
  swift_release();
  v58 = (uint64_t)v120;
  sub_1DC402740();
  if (swift_getEnumCaseMultiPayload())
  {
    sub_1DC0926D8(v58, (uint64_t (*)(_QWORD))sub_1DC154164);
LABEL_14:
    v66 = v131;
    v67 = v132;
    v68 = v130;
    v69 = v112;
    goto LABEL_15;
  }
  sub_1DC27A2C4();
  v60 = v59;
  v61 = v58 + *(int *)(v59 + 64);
  v62 = sub_1DC401C18();
  v63 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 8);
  v63(v61, v62);
  sub_1DC0926D8(v58, (uint64_t (*)(_QWORD))type metadata accessor for StocksAudioTrack);
  v64 = (uint64_t)v107;
  sub_1DC402740();
  v65 = (uint64_t)v109;
  sub_1DC401D14();
  sub_1DC0926D8(v64, (uint64_t (*)(_QWORD))sub_1DC154164);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v108 + 48))(v65, 1, v110) == 1)
  {
    sub_1DC0B091C(v65, &qword_1EDB2B7F0, (uint64_t (*)(uint64_t))type metadata accessor for StocksAudioTrack);
    goto LABEL_14;
  }
  v81 = v65;
  v82 = v105;
  sub_1DC092ED0(v81, v105, (uint64_t (*)(_QWORD))type metadata accessor for StocksAudioTrack);
  v83 = v106;
  sub_1DC402740();
  v84 = v104;
  sub_1DC0990BC(v83, v104, (uint64_t (*)(_QWORD))sub_1DC154164);
  v85 = swift_getEnumCaseMultiPayload();
  if (!v85)
  {
    v69 = v112;
    goto LABEL_20;
  }
  v69 = v112;
  if (v85 == 1)
  {
    sub_1DC27A3D0();
    v60 = v86;
LABEL_20:
    v63(v84 + *(int *)(v60 + 64), v62);
    sub_1DC0926D8(v84, (uint64_t (*)(_QWORD))type metadata accessor for StocksAudioTrack);
  }
  sub_1DC0926D8(v106, (uint64_t (*)(_QWORD))sub_1DC154164);
  objc_msgSend(*(id *)(v82 + *(int *)(v110 + 24)), sel_duration);
  if ((sub_1DC4022FC() & 1) != 0)
  {
    v87 = v129;
    v88 = (uint64_t *)v82;
    v89 = (uint64_t)v103;
    v67 = v132;
    (*(void (**)(char *, uint64_t, uint64_t))(v129 + 16))(v103, v128, v132);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v87 + 56))(v89, 0, 1, v67);
    v90 = (uint64_t)v100;
    sub_1DC402740();
    sub_1DC3228B8(v69, v127, v89, v88, v90);
    sub_1DC0926D8(v90, (uint64_t (*)(_QWORD))sub_1DC154164);
    sub_1DC0B091C(v89, &qword_1F0352088, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD2D0]);
    v91 = (uint64_t)v88;
    v50 = v87;
  }
  else
  {
    v92 = (uint64_t)v99;
    (*(void (**)(char *, _QWORD, uint64_t))(v101 + 104))(v99, *MEMORY[0x1E0DAD2F8], v102);
    v93 = v129;
    v94 = (unint64_t)v103;
    v67 = v132;
    (*(void (**)(char *, uint64_t, uint64_t))(v129 + 16))(v103, v128, v132);
    v95 = (uint64_t *)v82;
    (*(void (**)(unint64_t, _QWORD, uint64_t, uint64_t))(v93 + 56))(v94, 0, 1, v67);
    v96 = (uint64_t)v100;
    sub_1DC402740();
    v134 = 1;
    sub_1DC322C9C(v92, v69, v127, v94, v95, v96, 0x100000000uLL);
    sub_1DC0926D8(v96, (uint64_t (*)(_QWORD))sub_1DC154164);
    v97 = v94;
    v50 = v93;
    sub_1DC0B091C(v97, &qword_1F0352088, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD2D0]);
    (*(void (**)(uint64_t, uint64_t))(v101 + 8))(v92, v102);
    v91 = (uint64_t)v95;
  }
  sub_1DC0926D8(v91, (uint64_t (*)(_QWORD))type metadata accessor for StocksAudioTrack);
  v68 = v130;
  v66 = v131;
LABEL_15:
  v120 = (char *)swift_allocObject();
  swift_weakInit();
  v71 = v124;
  v70 = v125;
  v72 = v122;
  (*(void (**)(char *, uint64_t, uint64_t))(v124 + 16))(v122, v69, v125);
  v73 = v126;
  (*(void (**)(char *, unint64_t, uint64_t))(v126 + 16))(v133, v127, v68);
  (*(void (**)(char *, uint64_t, uint64_t))(v50 + 16))(v66, v128, v67);
  v74 = v50;
  v75 = (*(unsigned __int8 *)(v71 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v71 + 80);
  v76 = (v121 + *(unsigned __int8 *)(v73 + 80) + v75) & ~(unint64_t)*(unsigned __int8 *)(v73 + 80);
  v77 = (v123 + *(unsigned __int8 *)(v74 + 80) + v76) & ~(unint64_t)*(unsigned __int8 *)(v74 + 80);
  v78 = swift_allocObject();
  *(_QWORD *)(v78 + 16) = v120;
  (*(void (**)(unint64_t, char *, uint64_t))(v71 + 32))(v78 + v75, v72, v70);
  (*(void (**)(unint64_t, char *, uint64_t))(v73 + 32))(v78 + v76, v133, v130);
  (*(void (**)(unint64_t, char *, uint64_t))(v74 + 32))(v78 + v77, v131, v132);
  swift_beginAccess();
  v79 = *(_QWORD *)(v45 + 112);
  *(_QWORD *)(v45 + 112) = sub_1DC329FEC;
  *(_QWORD *)(v45 + 120) = v78;
  return sub_1DC0E81D0(v79);
}

uint64_t sub_1DC3228B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  void (*v21)(__n128);
  uint64_t v22;
  char *v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;

  v48 = a5;
  v49 = a3;
  v54 = a2;
  v60 = sub_1DC403280();
  v6 = *(_QWORD *)(v60 - 8);
  v55 = *(_QWORD *)(v6 + 64);
  v56 = v6;
  MEMORY[0x1E0C80A78](v60);
  v59 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC089DA4(0, &qword_1F0352088, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD2D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v9 = *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64);
  v50 = *(_QWORD *)(v8 - 8);
  v51 = v9;
  MEMORY[0x1E0C80A78](v8);
  v57 = (uint64_t)&v38 - v10;
  sub_1DC154164();
  v47 = *(_QWORD *)(v11 - 8);
  v44 = *(_QWORD *)(v47 + 64);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = v13;
  v14 = type metadata accessor for StocksAudioTrack();
  v39 = *(_QWORD *)(v14 - 8);
  v15 = *(_QWORD *)(v39 + 64);
  MEMORY[0x1E0C80A78](v14);
  v40 = (uint64_t)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1DC4011BC();
  v17 = *(_QWORD *)(v16 - 8);
  v41 = v16;
  v18 = *(_QWORD *)(v17 + 64);
  MEMORY[0x1E0C80A78](v16);
  v43 = (char *)&v38 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x1E0C80A78](v19);
  v45 = *a4;
  v21 = *(void (**)(__n128))(v17 + 16);
  v38 = v17;
  v23 = (char *)&v38 - v22;
  v52 = (char *)&v38 - v22;
  v21(v20);
  v46 = *(_QWORD *)(v58 + 104);
  v53 = *(_QWORD *)(v46 + 32);
  sub_1DC0990BC((uint64_t)a4, (uint64_t)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for StocksAudioTrack);
  ((void (*)(char *, char *, uint64_t))v21)((char *)&v38 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0), v23, v16);
  sub_1DC0990BC(v48, (uint64_t)v13, (uint64_t (*)(_QWORD))sub_1DC154164);
  sub_1DC0EDD64(v49, v57, &qword_1F0352088, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD2D0]);
  v24 = v56;
  (*(void (**)(char *, uint64_t, uint64_t))(v56 + 16))(v59, v54, v60);
  v25 = (*(unsigned __int8 *)(v39 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80);
  v26 = (v15 + v25 + 7) & 0xFFFFFFFFFFFFFFF8;
  v27 = (v26 + 15) & 0xFFFFFFFFFFFFFFF8;
  v28 = (*(unsigned __int8 *)(v17 + 80) + v27 + 8) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  v29 = (v18 + *(unsigned __int8 *)(v47 + 80) + v28) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80);
  v30 = (v44 + v29 + 7) & 0xFFFFFFFFFFFFFFF8;
  v31 = (*(unsigned __int8 *)(v50 + 80) + v30 + 8) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80);
  v32 = (v51 + *(unsigned __int8 *)(v24 + 80) + v31) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
  v33 = swift_allocObject();
  sub_1DC092ED0(v40, v33 + v25, (uint64_t (*)(_QWORD))type metadata accessor for StocksAudioTrack);
  *(_QWORD *)(v33 + v26) = v45;
  *(_QWORD *)(v33 + v27) = v58;
  v34 = v33 + v28;
  v35 = v38;
  v36 = v41;
  (*(void (**)(unint64_t, char *, uint64_t))(v38 + 32))(v34, v43, v41);
  sub_1DC092ED0((uint64_t)v42, v33 + v29, (uint64_t (*)(_QWORD))sub_1DC154164);
  *(_QWORD *)(v33 + v30) = v46;
  sub_1DC329704(v57, v33 + v31);
  (*(void (**)(unint64_t, char *, uint64_t))(v56 + 32))(v33 + v32, v59, v60);
  swift_retain_n();
  swift_unknownObjectRetain();
  swift_retain();
  sub_1DC401828();
  swift_release();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v52, v36);
  return swift_release();
}

uint64_t sub_1DC322C9C(uint64_t a1, uint64_t a2, unint64_t a3, unint64_t a4, uint64_t *a5, uint64_t a6, unint64_t a7)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  char *v27;
  void (*v28)(char *, uint64_t, uint64_t, __n128);
  uint64_t (*v29)(char *, uint64_t);
  uint64_t v30;
  int v31;
  int v32;
  uint64_t v33;
  uint64_t *v34;
  char *v35;
  void (*v36)(char *, char *, uint64_t);
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t *v75;
  unint64_t v76;
  unint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;

  v75 = a5;
  v76 = a4;
  v74 = a3;
  v72 = a2;
  v81 = sub_1DC403280();
  v87 = *(_QWORD *)(v81 - 8);
  MEMORY[0x1E0C80A78](v81);
  v71 = v10;
  v91 = (char *)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC089DA4(0, &qword_1F0352088, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD2D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v69 = *(_QWORD *)(v11 - 8);
  v70 = *(_QWORD *)(v69 + 64);
  MEMORY[0x1E0C80A78](v11);
  v90 = (uint64_t)&v58 - v12;
  v88 = sub_1DC40367C();
  v86 = *(_QWORD *)(v88 - 8);
  MEMORY[0x1E0C80A78](v88);
  v67 = v13;
  v85 = (char *)&v58 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC154164();
  v65 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v66 = v15;
  v84 = (uint64_t)&v58 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for StocksAudioTrack();
  v64 = *(_QWORD *)(v16 - 8);
  v17 = *(_QWORD *)(v64 + 64);
  MEMORY[0x1E0C80A78](v16);
  v80 = (uint64_t)&v58 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = sub_1DC4011BC();
  v93 = *(_QWORD *)(v89 - 8);
  v18 = *(_QWORD *)(v93 + 64);
  MEMORY[0x1E0C80A78](v89);
  v78 = (char *)&v58 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v82 = (char *)&v58 - v20;
  v21 = sub_1DC403298();
  v22 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  v79 = (char *)&v58 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = v23;
  v25 = MEMORY[0x1E0C80A78](v24);
  v27 = (char *)&v58 - v26;
  v28 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v22 + 16);
  v73 = a1;
  v28((char *)&v58 - v26, a1, v21, v25);
  v68 = v22;
  v29 = *(uint64_t (**)(char *, uint64_t))(v22 + 88);
  v30 = a6;
  v83 = v21;
  v31 = v29(v27, v21);
  v32 = *MEMORY[0x1E0DAD310];
  v77 = a7;
  v33 = HIDWORD(a7) & 1;
  if (v31 != v32 && v31 != *MEMORY[0x1E0DAD320])
  {
    if (v31 == *MEMORY[0x1E0DAD2F0] || v31 == *MEMORY[0x1E0DAD2F8] || v31 == *MEMORY[0x1E0DAD308])
      goto LABEL_11;
    if (v31 != *MEMORY[0x1E0DAD300]
      && v31 != *MEMORY[0x1E0DAD2E8]
      && v31 != *MEMORY[0x1E0DAD318]
      && v31 != *MEMORY[0x1E0DAD2E0])
    {
      sub_1DC409838();
      __break(1u);
LABEL_11:
      sub_1DC325BE0(v73, v72, v74, v76, v75, a6, v77 | (unint64_t)(v33 << 32));
    }
  }
  v34 = v75;
  v59 = *v75;
  v35 = (char *)v75 + *(int *)(v16 + 20);
  v61 = v33;
  v36 = *(void (**)(char *, char *, uint64_t))(v93 + 16);
  v37 = v93;
  v38 = v82;
  v39 = v89;
  v36(v82, v35, v89);
  v60 = *(_QWORD *)(v92 + 104);
  v62 = *(_QWORD *)(v60 + 32);
  sub_1DC0990BC((uint64_t)v34, v80, (uint64_t (*)(_QWORD))type metadata accessor for StocksAudioTrack);
  v36(v78, v38, v39);
  sub_1DC0990BC(v30, v84, (uint64_t (*)(_QWORD))sub_1DC154164);
  v40 = v86;
  (*(void (**)(char *, uint64_t, uint64_t))(v86 + 16))(v85, v72, v88);
  ((void (*)(char *, uint64_t, uint64_t))v28)(v79, v73, v83);
  sub_1DC0EDD64(v76, v90, &qword_1F0352088, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD2D0]);
  v41 = v87;
  (*(void (**)(char *, unint64_t, uint64_t))(v87 + 16))(v91, v74, v81);
  v42 = (*(unsigned __int8 *)(v64 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v64 + 80);
  v43 = v41;
  v44 = (v17 + v42 + 7) & 0xFFFFFFFFFFFFFFF8;
  v45 = (v44 + 15) & 0xFFFFFFFFFFFFFFF8;
  v46 = (*(unsigned __int8 *)(v37 + 80) + v45 + 8) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80);
  v47 = (v18 + *(unsigned __int8 *)(v65 + 80) + v46) & ~(unint64_t)*(unsigned __int8 *)(v65 + 80);
  v48 = (v66 + *(unsigned __int8 *)(v40 + 80) + v47) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80);
  v49 = (v67 + v48 + 7) & 0xFFFFFFFFFFFFFFF8;
  v50 = v68;
  v51 = (*(unsigned __int8 *)(v68 + 80) + v49 + 8) & ~(unint64_t)*(unsigned __int8 *)(v68 + 80);
  v74 = (v63 + v51 + 3) & 0xFFFFFFFFFFFFFFFCLL;
  v75 = (uint64_t *)((*(unsigned __int8 *)(v69 + 80) + v74 + 5) & ~(unint64_t)*(unsigned __int8 *)(v69 + 80));
  v76 = ((unint64_t)v75 + v70 + *(unsigned __int8 *)(v43 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80);
  v52 = swift_allocObject();
  sub_1DC092ED0(v80, v52 + v42, (uint64_t (*)(_QWORD))type metadata accessor for StocksAudioTrack);
  *(_QWORD *)(v52 + v44) = v59;
  v53 = v93;
  *(_QWORD *)(v52 + v45) = v92;
  v54 = v52 + v46;
  v55 = v89;
  (*(void (**)(unint64_t, char *, uint64_t))(v53 + 32))(v54, v78, v89);
  sub_1DC092ED0(v84, v52 + v47, (uint64_t (*)(_QWORD))sub_1DC154164);
  (*(void (**)(unint64_t, char *, uint64_t))(v86 + 32))(v52 + v48, v85, v88);
  *(_QWORD *)(v52 + v49) = v60;
  (*(void (**)(unint64_t, char *, uint64_t))(v50 + 32))(v52 + v51, v79, v83);
  v56 = v52 + v74;
  *(_DWORD *)v56 = v77;
  *(_BYTE *)(v56 + 4) = v61;
  sub_1DC329704(v90, (uint64_t)v75 + v52);
  (*(void (**)(unint64_t, char *, uint64_t))(v87 + 32))(v52 + v76, v91, v81);
  swift_retain_n();
  swift_unknownObjectRetain();
  swift_retain();
  sub_1DC401828();
  swift_release();
  (*(void (**)(char *, uint64_t))(v93 + 8))(v82, v55);
  return swift_release();
}

uint64_t sub_1DC3233F0(uint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  char v26;

  sub_1DC154164();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC089DA4(0, &qword_1F0352088, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD2D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v24 - v13;
  v15 = sub_1DC403298();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v16 + 104))(v18, *MEMORY[0x1E0DAD2F0], v15);
    v20 = sub_1DC40328C();
    v24 = a3;
    v25 = a1;
    v21 = v20;
    v22 = a4;
    v23 = *(_QWORD *)(v20 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))(v14, a5, v20);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v14, 0, 1, v21);
    sub_1DC402740();
    v26 = 1;
    sub_1DC322C9C((uint64_t)v18, v24, v22, (unint64_t)v14, v25, (uint64_t)v11, 0x100000000uLL);
    swift_release();
    sub_1DC0926D8((uint64_t)v11, (uint64_t (*)(_QWORD))sub_1DC154164);
    sub_1DC0B091C((uint64_t)v14, &qword_1F0352088, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD2D0]);
    return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  }
  return result;
}

uint64_t sub_1DC3235F8(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int EnumCaseMultiPayload;
  uint64_t v31;
  uint64_t v32;
  double v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  double v46;
  uint64_t v47;
  uint64_t (*v48)(uint64_t);
  uint64_t *v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  char *v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  char v61;

  v54 = a1;
  v55 = a2;
  v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1DC089DA4(0, &qword_1F0352088, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD2D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v56 = (char *)&v50 - v5;
  v53 = sub_1DC403298();
  v57 = *(_QWORD *)(v53 - 8);
  MEMORY[0x1E0C80A78](v53);
  v59 = (char *)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC089DA4(0, &qword_1EDB2B7F0, (uint64_t (*)(uint64_t))type metadata accessor for StocksAudioTrack, v3);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v50 - v8;
  sub_1DC154164();
  v11 = v10;
  MEMORY[0x1E0C80A78](v10);
  v58 = (char *)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v50 - v14;
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v50 - v17;
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v50 - v20;
  v22 = type metadata accessor for StocksAudioTrack();
  v23 = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v22);
  v25 = (uint64_t *)((char *)&v50 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  v60 = v2;
  sub_1DC402740();
  v52 = v11;
  sub_1DC401D14();
  sub_1DC0926D8((uint64_t)v21, (uint64_t (*)(_QWORD))sub_1DC154164);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v9, 1, v22) == 1)
    return sub_1DC0B091C((uint64_t)v9, &qword_1EDB2B7F0, (uint64_t (*)(uint64_t))type metadata accessor for StocksAudioTrack);
  v28 = v53;
  v27 = v54;
  v51 = v25;
  sub_1DC092ED0((uint64_t)v9, (uint64_t)v25, (uint64_t (*)(_QWORD))type metadata accessor for StocksAudioTrack);
  v29 = *(_QWORD *)(v60 + 104);
  swift_retain();
  sub_1DC402740();
  sub_1DC0990BC((uint64_t)v18, (uint64_t)v15, (uint64_t (*)(_QWORD))sub_1DC154164);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v31 = (uint64_t)v18;
  v32 = (uint64_t)v15;
  if (!EnumCaseMultiPayload)
  {
    sub_1DC27A2C4();
    v33 = *(double *)&v15[*(int *)(v42 + 48)];
    v43 = &v15[*(int *)(v42 + 64)];
    v44 = sub_1DC401C18();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v44 - 8) + 8))(v43, v44);
    v34 = v27;
    v35 = v28;
    v36 = (unint64_t)v56;
    v37 = v57;
    v38 = (uint64_t)v59;
    goto LABEL_7;
  }
  v33 = 0.0;
  v34 = v27;
  v35 = v28;
  v36 = (unint64_t)v56;
  v37 = v57;
  v38 = (uint64_t)v59;
  if (EnumCaseMultiPayload == 1)
  {
    sub_1DC27A3D0();
    v33 = *(double *)&v15[*(int *)(v39 + 48)];
    v40 = &v15[*(int *)(v39 + 64)];
    v41 = sub_1DC401C18();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v41 - 8) + 8))(v40, v41);
LABEL_7:
    sub_1DC0926D8(v32, (uint64_t (*)(_QWORD))type metadata accessor for StocksAudioTrack);
  }
  sub_1DC0926D8(v31, (uint64_t (*)(_QWORD))sub_1DC154164);
  v45 = (uint64_t)v58;
  if ((*(_BYTE *)(v29 + 48) & 1) == 0)
  {
    v46 = v33 - *(double *)(v29 + 40);
    if (v46 <= 0.0)
      v46 = 0.0;
    *(double *)(v29 + 56) = *(double *)(v29 + 56) + v46;
    *(double *)(v29 + 64) = v46;
    *(_QWORD *)(v29 + 40) = 0;
    *(_BYTE *)(v29 + 48) = 1;
  }
  swift_release();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v37 + 104))(v38, *MEMORY[0x1E0DAD2F8], v35);
  v47 = sub_1DC40328C();
  v48 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD2D0];
  (*(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56))(v36, 1, 1, v47);
  sub_1DC402740();
  v61 = 1;
  v49 = v51;
  sub_1DC322C9C(v38, v34, v55, v36, v51, v45, 0x100000000uLL);
  sub_1DC0926D8(v45, (uint64_t (*)(_QWORD))sub_1DC154164);
  sub_1DC0B091C(v36, &qword_1F0352088, v48);
  (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v38, v35);
  return sub_1DC0926D8((uint64_t)v49, (uint64_t (*)(_QWORD))type metadata accessor for StocksAudioTrack);
}

uint64_t sub_1DC323A74(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(uint64_t);
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  _QWORD v40[2];
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  char v56;

  v53 = a3;
  v54 = a1;
  v55 = a2;
  v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1DC089DA4(0, &qword_1F0352088, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD2D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v5);
  v51 = (char *)v40 - v6;
  v52 = sub_1DC403298();
  v50 = *(_QWORD *)(v52 - 8);
  MEMORY[0x1E0C80A78](v52);
  v49 = (char *)v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1DC3FFFEC();
  v47 = *(_QWORD *)(v8 - 8);
  v48 = v8;
  MEMORY[0x1E0C80A78](v8);
  v46 = (char *)v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1DC400010();
  v41 = *(_QWORD *)(v10 - 8);
  v42 = v10;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1DC4017E0();
  v43 = *(_QWORD *)(v13 - 8);
  v44 = v13;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC089DA4(0, &qword_1EDB2B7F0, (uint64_t (*)(uint64_t))type metadata accessor for StocksAudioTrack, v4);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)v40 - v17;
  sub_1DC154164();
  MEMORY[0x1E0C80A78](v19);
  v45 = (char *)v40 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)v40 - v22;
  v24 = type metadata accessor for StocksAudioTrack();
  v25 = *(_QWORD *)(v24 - 8);
  MEMORY[0x1E0C80A78](v24);
  v27 = (_QWORD *)((char *)v40 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  v40[1] = *(_QWORD *)(v3 + 48);
  sub_1DC402740();
  sub_1DC401D14();
  sub_1DC0926D8((uint64_t)v23, (uint64_t (*)(_QWORD))sub_1DC154164);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v18, 1, v24) == 1)
  {
    sub_1DC0B091C((uint64_t)v18, &qword_1EDB2B7F0, (uint64_t (*)(uint64_t))type metadata accessor for StocksAudioTrack);
    return sub_1DC321DC0(v54, v55, v53);
  }
  else
  {
    sub_1DC092ED0((uint64_t)v18, (uint64_t)v27, (uint64_t (*)(_QWORD))type metadata accessor for StocksAudioTrack);
    v29 = v43;
    v30 = v44;
    (*(void (**)(char *, _QWORD, uint64_t))(v43 + 104))(v15, *MEMORY[0x1E0CF8550], v44);
    sub_1DC400004();
    sub_1DC3FFFF8();
    (*(void (**)(char *, uint64_t))(v41 + 8))(v12, v42);
    v31 = v46;
    sub_1DC3FFFE0();
    sub_1DC401654();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v47 + 8))(v31, v48);
    (*(void (**)(char *, uint64_t))(v29 + 8))(v15, v30);
    v33 = (uint64_t)v49;
    v32 = v50;
    v34 = v52;
    (*(void (**)(char *, _QWORD, uint64_t))(v50 + 104))(v49, *MEMORY[0x1E0DAD308], v52);
    v35 = sub_1DC40328C();
    v36 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD2D0];
    v37 = *(_QWORD *)(v35 - 8);
    v38 = (unint64_t)v51;
    (*(void (**)(char *, uint64_t, uint64_t))(v37 + 16))(v51, v53, v35);
    (*(void (**)(unint64_t, _QWORD, uint64_t, uint64_t))(v37 + 56))(v38, 0, 1, v35);
    v39 = (uint64_t)v45;
    sub_1DC402740();
    v56 = 1;
    sub_1DC322C9C(v33, v54, v55, v38, v27, v39, 0x100000000uLL);
    sub_1DC0926D8(v39, (uint64_t (*)(_QWORD))sub_1DC154164);
    sub_1DC0B091C(v38, &qword_1F0352088, v36);
    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v33, v34);
    return sub_1DC0926D8((uint64_t)v27, (uint64_t (*)(_QWORD))type metadata accessor for StocksAudioTrack);
  }
}

uint64_t sub_1DC323EE8(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  char v33;

  v30 = a1;
  v31 = a2;
  v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1DC089DA4(0, &qword_1F0352088, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD2D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v28 = (char *)&v26 - v5;
  v29 = sub_1DC403298();
  v27 = *(_QWORD *)(v29 - 8);
  MEMORY[0x1E0C80A78](v29);
  v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC089DA4(0, &qword_1EDB2B7F0, (uint64_t (*)(uint64_t))type metadata accessor for StocksAudioTrack, v3);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v26 - v9;
  sub_1DC154164();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v26 - v15;
  v17 = type metadata accessor for StocksAudioTrack();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v20 = (uint64_t *)((char *)&v26 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  v32 = v2;
  sub_1DC402740();
  sub_1DC401D14();
  sub_1DC0926D8((uint64_t)v16, (uint64_t (*)(_QWORD))sub_1DC154164);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v10, 1, v17) == 1)
    return sub_1DC0B091C((uint64_t)v10, &qword_1EDB2B7F0, (uint64_t (*)(uint64_t))type metadata accessor for StocksAudioTrack);
  sub_1DC092ED0((uint64_t)v10, (uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for StocksAudioTrack);
  v22 = v27;
  v23 = v29;
  (*(void (**)(char *, _QWORD, uint64_t))(v27 + 104))(v7, *MEMORY[0x1E0DAD2E8], v29);
  v24 = sub_1DC40328C();
  v25 = (unint64_t)v28;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v28, 1, 1, v24);
  sub_1DC402740();
  v33 = 1;
  sub_1DC322C9C((uint64_t)v7, v30, v31, v25, v20, (uint64_t)v13, 0x100000000uLL);
  sub_1DC0926D8((uint64_t)v13, (uint64_t (*)(_QWORD))sub_1DC154164);
  sub_1DC0B091C(v25, &qword_1F0352088, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD2D0]);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v7, v23);
  return sub_1DC0926D8((uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for StocksAudioTrack);
}

uint64_t sub_1DC3241D4(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  int EnumCaseMultiPayload;
  double v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  double v44;
  uint64_t v45;
  int v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t (*v60)(uint64_t);
  uint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char v86;

  v83 = a2;
  v84 = a1;
  v3 = sub_1DC3FFFEC();
  v4 = *(_QWORD *)(v3 - 8);
  v74 = v3;
  v75 = v4;
  MEMORY[0x1E0C80A78](v3);
  v76 = (char *)&v70 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1DC403298();
  v7 = *(_QWORD *)(v6 - 8);
  v81 = v6;
  v82 = v7;
  MEMORY[0x1E0C80A78](v6);
  v71 = (char *)&v70 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1DC089DA4(0, &qword_1F0352088, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD2D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v10);
  v80 = (char *)&v70 - v11;
  sub_1DC089DA4(0, &qword_1EDB2B7F0, (uint64_t (*)(uint64_t))type metadata accessor for StocksAudioTrack, v9);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v70 - v13;
  sub_1DC154164();
  v16 = v15;
  MEMORY[0x1E0C80A78](v15);
  v73 = (char *)&v70 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v79 = (uint64_t)&v70 - v19;
  MEMORY[0x1E0C80A78](v20);
  v77 = (char *)&v70 - v21;
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)&v70 - v23;
  MEMORY[0x1E0C80A78](v25);
  v27 = (char *)&v70 - v26;
  MEMORY[0x1E0C80A78](v28);
  v30 = (char *)&v70 - v29;
  v31 = type metadata accessor for StocksAudioTrack();
  v32 = *(_QWORD *)(v31 - 8);
  MEMORY[0x1E0C80A78](v31);
  v34 = (uint64_t *)((char *)&v70 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0));
  v85 = v2;
  v35 = *(_QWORD *)(v2 + 48);
  sub_1DC402740();
  v78 = v16;
  sub_1DC401D14();
  sub_1DC0926D8((uint64_t)v30, (uint64_t (*)(_QWORD))sub_1DC154164);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v14, 1, v31) == 1)
    return sub_1DC0B091C((uint64_t)v14, &qword_1EDB2B7F0, (uint64_t (*)(uint64_t))type metadata accessor for StocksAudioTrack);
  v70 = v31;
  v37 = (uint64_t)v77;
  sub_1DC092ED0((uint64_t)v14, (uint64_t)v34, (uint64_t (*)(_QWORD))type metadata accessor for StocksAudioTrack);
  v38 = *(_QWORD *)(v85 + 104);
  swift_retain();
  sub_1DC402740();
  sub_1DC0990BC((uint64_t)v27, (uint64_t)v24, (uint64_t (*)(_QWORD))sub_1DC154164);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v72 = v35;
  if (EnumCaseMultiPayload)
  {
    v40 = 0.0;
    if (EnumCaseMultiPayload != 1)
      goto LABEL_8;
    sub_1DC27A3D0();
  }
  else
  {
    sub_1DC27A2C4();
  }
  v40 = *(double *)&v24[*(int *)(v41 + 48)];
  v42 = &v24[*(int *)(v41 + 64)];
  v43 = sub_1DC401C18();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v43 - 8) + 8))(v42, v43);
  sub_1DC0926D8((uint64_t)v24, (uint64_t (*)(_QWORD))type metadata accessor for StocksAudioTrack);
LABEL_8:
  sub_1DC0926D8((uint64_t)v27, (uint64_t (*)(_QWORD))sub_1DC154164);
  if ((*(_BYTE *)(v38 + 48) & 1) == 0)
  {
    v44 = v40 - *(double *)(v38 + 40);
    if (v44 <= 0.0)
      v44 = 0.0;
    *(double *)(v38 + 56) = *(double *)(v38 + 56) + v44;
    *(double *)(v38 + 64) = v44;
    *(_QWORD *)(v38 + 40) = 0;
    *(_BYTE *)(v38 + 48) = 1;
  }
  swift_release();
  sub_1DC402740();
  v45 = v79;
  sub_1DC0990BC(v37, v79, (uint64_t (*)(_QWORD))sub_1DC154164);
  v46 = swift_getEnumCaseMultiPayload();
  v47 = (unint64_t)v80;
  if (!v46)
  {
    sub_1DC27A2C4();
    v57 = v45 + *(int *)(v56 + 64);
    v58 = sub_1DC401C18();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 8))(v57, v58);
    v48 = v83;
    v49 = v84;
    v51 = v81;
    v50 = v82;
    v52 = v37;
    goto LABEL_16;
  }
  v48 = v83;
  v49 = v84;
  v51 = v81;
  v50 = v82;
  v52 = v37;
  if (v46 == 1)
  {
    sub_1DC27A3D0();
    v54 = v45 + *(int *)(v53 + 64);
    v55 = sub_1DC401C18();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 8))(v54, v55);
LABEL_16:
    sub_1DC0926D8(v45, (uint64_t (*)(_QWORD))type metadata accessor for StocksAudioTrack);
  }
  sub_1DC0926D8(v52, (uint64_t (*)(_QWORD))sub_1DC154164);
  objc_msgSend(*(id *)((char *)v34 + *(int *)(v70 + 24)), sel_duration);
  if ((sub_1DC4022FC() & 1) != 0)
  {
    v59 = sub_1DC40328C();
    v60 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD2D0];
    (*(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 56))(v47, 1, 1, v59);
    v61 = (uint64_t)v73;
    sub_1DC402740();
    sub_1DC3228B8(v49, v48, v47, v34, v61);
    sub_1DC0926D8(v61, (uint64_t (*)(_QWORD))sub_1DC154164);
    sub_1DC0B091C(v47, &qword_1F0352088, v60);
  }
  else
  {
    v62 = v34;
    v63 = (uint64_t)v71;
    (*(void (**)(char *, _QWORD, uint64_t))(v50 + 104))(v71, *MEMORY[0x1E0DAD2F8], v51);
    v64 = sub_1DC40328C();
    (*(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 56))(v47, 1, 1, v64);
    v65 = (uint64_t)v73;
    sub_1DC402740();
    v86 = 1;
    sub_1DC322C9C(v63, v49, v48, v47, v62, v65, 0x100000000uLL);
    sub_1DC0926D8(v65, (uint64_t (*)(_QWORD))sub_1DC154164);
    sub_1DC0B091C(v47, &qword_1F0352088, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD2D0]);
    v66 = v63;
    v34 = v62;
    (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v66, v51);
  }
  v67 = v74;
  v68 = v75;
  v69 = v76;
  sub_1DC3FFFE0();
  sub_1DC401648();
  (*(void (**)(char *, uint64_t))(v68 + 8))(v69, v67);
  return sub_1DC0926D8((uint64_t)v34, (uint64_t (*)(_QWORD))type metadata accessor for StocksAudioTrack);
}

uint64_t sub_1DC32484C(uint64_t a1, unint64_t a2, double a3)
{
  uint64_t v3;
  uint64_t (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t result;
  uint64_t v32;
  uint64_t v33;
  int EnumCaseMultiPayload;
  double v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  double v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  double v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  double v61;
  uint64_t *v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  char v73;

  v63 = a1;
  v64 = a2;
  v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1DC089DA4(0, &qword_1F0352088, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD2D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v6);
  v66 = (char *)&v62 - v7;
  v67 = sub_1DC403298();
  v65 = *(_QWORD *)(v67 - 8);
  MEMORY[0x1E0C80A78](v67);
  v71 = (char *)&v62 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC089DA4(0, &qword_1EDB2B7F0, (uint64_t (*)(uint64_t))type metadata accessor for StocksAudioTrack, v5);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v62 - v10;
  sub_1DC154164();
  MEMORY[0x1E0C80A78](v12);
  v69 = (uint64_t)&v62 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v72 = (uint64_t)&v62 - v15;
  MEMORY[0x1E0C80A78](v16);
  v70 = (char *)&v62 - v17;
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v62 - v19;
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v62 - v22;
  MEMORY[0x1E0C80A78](v24);
  v26 = (char *)&v62 - v25;
  v27 = type metadata accessor for StocksAudioTrack();
  v28 = *(_QWORD *)(v27 - 8);
  MEMORY[0x1E0C80A78](v27);
  v30 = (uint64_t *)((char *)&v62 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
  v68 = v3;
  sub_1DC402740();
  sub_1DC401D14();
  sub_1DC0926D8((uint64_t)v26, (uint64_t (*)(_QWORD))sub_1DC154164);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v11, 1, v27) == 1)
    return sub_1DC0B091C((uint64_t)v11, &qword_1EDB2B7F0, (uint64_t (*)(uint64_t))type metadata accessor for StocksAudioTrack);
  v62 = v30;
  sub_1DC092ED0((uint64_t)v11, (uint64_t)v30, (uint64_t (*)(_QWORD))type metadata accessor for StocksAudioTrack);
  v32 = v68;
  v33 = *(_QWORD *)(v68 + 104);
  swift_retain();
  sub_1DC402740();
  sub_1DC0990BC((uint64_t)v23, (uint64_t)v20, (uint64_t (*)(_QWORD))sub_1DC154164);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    v35 = 0.0;
    v37 = (unint64_t)v66;
    v36 = v67;
    v38 = v65;
    if (EnumCaseMultiPayload != 1)
      goto LABEL_8;
    sub_1DC27A3D0();
    v35 = *(double *)&v20[*(int *)(v39 + 48)];
    v40 = &v20[*(int *)(v39 + 64)];
    v41 = sub_1DC401C18();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v41 - 8) + 8))(v40, v41);
  }
  else
  {
    sub_1DC27A2C4();
    v35 = *(double *)&v20[*(int *)(v42 + 48)];
    v43 = &v20[*(int *)(v42 + 64)];
    v44 = sub_1DC401C18();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v44 - 8) + 8))(v43, v44);
    v37 = (unint64_t)v66;
    v36 = v67;
    v38 = v65;
  }
  sub_1DC0926D8((uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for StocksAudioTrack);
LABEL_8:
  sub_1DC0926D8((uint64_t)v23, (uint64_t (*)(_QWORD))sub_1DC154164);
  if ((*(_BYTE *)(v33 + 48) & 1) == 0)
  {
    v45 = v35 - *(double *)(v33 + 40);
    if (v45 <= 0.0)
      v45 = 0.0;
    *(double *)(v33 + 56) = *(double *)(v33 + 56) + v45;
    *(double *)(v33 + 64) = v45;
    *(_QWORD *)(v33 + 40) = 0;
    *(_BYTE *)(v33 + 48) = 1;
  }
  swift_release();
  v46 = *(_QWORD *)(v32 + 104);
  *(_QWORD *)(v46 + 40) = 0;
  *(_BYTE *)(v46 + 48) = 1;
  v47 = (uint64_t)v71;
  (*(void (**)(char *, _QWORD, uint64_t))(v38 + 104))(v71, *MEMORY[0x1E0DAD318], v36);
  v48 = sub_1DC40328C();
  (*(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 56))(v37, 1, 1, v48);
  v49 = (uint64_t)v70;
  sub_1DC402740();
  v50 = v72;
  sub_1DC402740();
  v51 = v69;
  sub_1DC0990BC(v50, v69, (uint64_t (*)(_QWORD))sub_1DC154164);
  v52 = swift_getEnumCaseMultiPayload();
  if (v52)
  {
    v53 = 0.0;
    v54 = v62;
    if (v52 != 1)
      goto LABEL_17;
    sub_1DC27A3D0();
    v53 = *(double *)(v51 + *(int *)(v55 + 48));
    v56 = v51 + *(int *)(v55 + 64);
    v57 = sub_1DC401C18();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 8))(v56, v57);
  }
  else
  {
    sub_1DC27A2C4();
    v53 = *(double *)(v51 + *(int *)(v58 + 48));
    v59 = v51 + *(int *)(v58 + 64);
    v60 = sub_1DC401C18();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v60 - 8) + 8))(v59, v60);
    v54 = v62;
  }
  sub_1DC0926D8(v51, (uint64_t (*)(_QWORD))type metadata accessor for StocksAudioTrack);
LABEL_17:
  result = sub_1DC0926D8(v72, (uint64_t (*)(_QWORD))sub_1DC154164);
  v61 = v53 - a3;
  if (v53 - a3 <= 0.0)
    v61 = 0.0;
  if ((~*(_QWORD *)&v61 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_24;
  }
  if (v61 <= -2147483650.0)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if (v61 < 2147483650.0)
  {
    v73 = 0;
    sub_1DC322C9C(v47, v63, v64, v37, v54, v49, (int)v61);
    sub_1DC0926D8(v49, (uint64_t (*)(_QWORD))sub_1DC154164);
    sub_1DC0B091C(v37, &qword_1F0352088, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD2D0]);
    (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v47, v36);
    return sub_1DC0926D8((uint64_t)v54, (uint64_t (*)(_QWORD))type metadata accessor for StocksAudioTrack);
  }
LABEL_25:
  __break(1u);
  return result;
}

id sub_1DC324E1C(uint64_t a1, unint64_t a2, double a3)
{
  uint64_t v3;
  uint64_t (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  unsigned int (*v32)(char *, uint64_t, uint64_t);
  id result;
  uint64_t v34;
  int EnumCaseMultiPayload;
  uint64_t v36;
  double v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  double v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  double v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  double v63;
  double v64;
  uint64_t *v65;
  uint64_t v66;
  unint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char v78;

  v66 = a1;
  v67 = a2;
  v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1DC089DA4(0, &qword_1F0352088, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD2D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v6);
  v69 = (char *)&v65 - v7;
  v70 = sub_1DC403298();
  v76 = *(_QWORD *)(v70 - 8);
  MEMORY[0x1E0C80A78](v70);
  v75 = (char *)&v65 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC089DA4(0, &qword_1EDB2B7F0, (uint64_t (*)(uint64_t))type metadata accessor for StocksAudioTrack, v5);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v65 - v10;
  sub_1DC154164();
  v13 = v12;
  MEMORY[0x1E0C80A78](v12);
  v73 = (uint64_t)&v65 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v68 = (char *)&v65 - v16;
  MEMORY[0x1E0C80A78](v17);
  v74 = (char *)&v65 - v18;
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v65 - v20;
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)&v65 - v23;
  MEMORY[0x1E0C80A78](v25);
  v27 = (char *)&v65 - v26;
  v28 = type metadata accessor for StocksAudioTrack();
  v29 = *(_QWORD *)(v28 - 8);
  MEMORY[0x1E0C80A78](v28);
  v31 = (uint64_t *)((char *)&v65 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  v77 = v3;
  sub_1DC402740();
  v71 = v13;
  sub_1DC401D14();
  sub_1DC0926D8((uint64_t)v27, (uint64_t (*)(_QWORD))sub_1DC154164);
  v32 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48);
  v72 = v28;
  if (v32(v11, 1, v28) == 1)
    return (id)sub_1DC0B091C((uint64_t)v11, &qword_1EDB2B7F0, (uint64_t (*)(uint64_t))type metadata accessor for StocksAudioTrack);
  v65 = v31;
  sub_1DC092ED0((uint64_t)v11, (uint64_t)v31, (uint64_t (*)(_QWORD))type metadata accessor for StocksAudioTrack);
  v34 = *(_QWORD *)(v77 + 104);
  swift_retain();
  sub_1DC402740();
  sub_1DC0990BC((uint64_t)v24, (uint64_t)v21, (uint64_t (*)(_QWORD))sub_1DC154164);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v36 = (uint64_t)v21;
  if (EnumCaseMultiPayload)
  {
    v37 = 0.0;
    v39 = (unint64_t)v69;
    v38 = v70;
    v40 = (uint64_t)v68;
    if (EnumCaseMultiPayload != 1)
      goto LABEL_8;
    sub_1DC27A3D0();
    v37 = *(double *)(v36 + *(int *)(v41 + 48));
    v42 = v36 + *(int *)(v41 + 64);
    v43 = sub_1DC401C18();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 8))(v42, v43);
  }
  else
  {
    sub_1DC27A2C4();
    v37 = *(double *)&v21[*(int *)(v44 + 48)];
    v45 = &v21[*(int *)(v44 + 64)];
    v46 = sub_1DC401C18();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v46 - 8) + 8))(v45, v46);
    v39 = (unint64_t)v69;
    v38 = v70;
    v40 = (uint64_t)v68;
  }
  sub_1DC0926D8(v36, (uint64_t (*)(_QWORD))type metadata accessor for StocksAudioTrack);
LABEL_8:
  sub_1DC0926D8((uint64_t)v24, (uint64_t (*)(_QWORD))sub_1DC154164);
  if ((*(_BYTE *)(v34 + 48) & 1) == 0)
  {
    v47 = v37 - *(double *)(v34 + 40);
    if (v47 <= 0.0)
      v47 = 0.0;
    *(double *)(v34 + 56) = *(double *)(v34 + 56) + v47;
    *(double *)(v34 + 64) = v47;
    *(_QWORD *)(v34 + 40) = 0;
    *(_BYTE *)(v34 + 48) = 1;
  }
  swift_release();
  v48 = v76;
  v49 = *(_QWORD *)(v77 + 104);
  *(_QWORD *)(v49 + 40) = 0;
  *(_BYTE *)(v49 + 48) = 1;
  v50 = (uint64_t)v75;
  (*(void (**)(char *, _QWORD, uint64_t))(v48 + 104))(v75, *MEMORY[0x1E0DAD2E0], v38);
  v51 = sub_1DC40328C();
  (*(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 56))(v39, 1, 1, v51);
  v52 = (uint64_t)v74;
  sub_1DC402740();
  sub_1DC402740();
  v53 = v73;
  sub_1DC0990BC(v40, v73, (uint64_t (*)(_QWORD))sub_1DC154164);
  v54 = swift_getEnumCaseMultiPayload();
  if (v54)
  {
    v55 = 0.0;
    v56 = v65;
    if (v54 != 1)
      goto LABEL_17;
    sub_1DC27A3D0();
    v55 = *(double *)(v53 + *(int *)(v57 + 48));
    v58 = v53 + *(int *)(v57 + 64);
    v59 = sub_1DC401C18();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 8))(v58, v59);
  }
  else
  {
    sub_1DC27A2C4();
    v55 = *(double *)(v53 + *(int *)(v60 + 48));
    v61 = v53 + *(int *)(v60 + 64);
    v62 = sub_1DC401C18();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 8))(v61, v62);
    v56 = v65;
  }
  sub_1DC0926D8(v53, (uint64_t (*)(_QWORD))type metadata accessor for StocksAudioTrack);
LABEL_17:
  sub_1DC0926D8(v40, (uint64_t (*)(_QWORD))sub_1DC154164);
  v63 = v55 + a3;
  result = objc_msgSend(*(id *)((char *)v56 + *(int *)(v72 + 24)), sel_duration);
  if (v64 >= v63)
    v64 = v63;
  if ((~*(_QWORD *)&v64 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_24;
  }
  if (v64 <= -2147483650.0)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if (v64 < 2147483650.0)
  {
    v78 = 0;
    sub_1DC322C9C(v50, v66, v67, v39, v56, v52, (int)v64);
    sub_1DC0926D8(v52, (uint64_t (*)(_QWORD))sub_1DC154164);
    sub_1DC0B091C(v39, &qword_1F0352088, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD2D0]);
    (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v50, v38);
    return (id)sub_1DC0926D8((uint64_t)v56, (uint64_t (*)(_QWORD))type metadata accessor for StocksAudioTrack);
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1DC325418(uint64_t a1, unint64_t a2, double a3)
{
  uint64_t v3;
  uint64_t (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  void (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t result;
  uint64_t v29;
  int EnumCaseMultiPayload;
  double v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  double v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(unint64_t, uint64_t, uint64_t, uint64_t);
  unint64_t v43;
  uint64_t v44;
  void (*v45)(uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t *v51;
  void (*v52)(uint64_t, uint64_t, uint64_t);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  char v61;
  char v62;

  v58 = a1;
  v59 = a2;
  v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1DC089DA4(0, &qword_1F0352088, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD2D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v6);
  v57 = (unint64_t)&v50 - v7;
  v56 = sub_1DC403298();
  v53 = *(_QWORD *)(v56 - 8);
  MEMORY[0x1E0C80A78](v56);
  v55 = (uint64_t)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC089DA4(0, &qword_1EDB2B7F0, (uint64_t (*)(uint64_t))type metadata accessor for StocksAudioTrack, v5);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v50 - v10;
  sub_1DC154164();
  v13 = v12;
  MEMORY[0x1E0C80A78](v12);
  v54 = (uint64_t)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v50 - v16;
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v50 - v19;
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v50 - v22;
  v24 = type metadata accessor for StocksAudioTrack();
  v25 = *(_QWORD *)(v24 - 8);
  MEMORY[0x1E0C80A78](v24);
  v27 = (uint64_t *)((char *)&v50 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  v60 = v3;
  sub_1DC402740();
  v52 = v13;
  sub_1DC401D14();
  sub_1DC0926D8((uint64_t)v23, (uint64_t (*)(_QWORD))sub_1DC154164);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v11, 1, v24) == 1)
    return sub_1DC0B091C((uint64_t)v11, &qword_1EDB2B7F0, (uint64_t (*)(uint64_t))type metadata accessor for StocksAudioTrack);
  v51 = v27;
  sub_1DC092ED0((uint64_t)v11, (uint64_t)v27, (uint64_t (*)(_QWORD))type metadata accessor for StocksAudioTrack);
  v29 = *(_QWORD *)(v60 + 104);
  swift_retain();
  sub_1DC402740();
  sub_1DC0990BC((uint64_t)v20, (uint64_t)v17, (uint64_t (*)(_QWORD))sub_1DC154164);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    v31 = 0.0;
    if (EnumCaseMultiPayload != 1)
      goto LABEL_8;
    sub_1DC27A3D0();
  }
  else
  {
    sub_1DC27A2C4();
  }
  v31 = *(double *)&v17[*(int *)(v32 + 48)];
  v33 = &v17[*(int *)(v32 + 64)];
  v34 = sub_1DC401C18();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v34 - 8) + 8))(v33, v34);
  sub_1DC0926D8((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for StocksAudioTrack);
LABEL_8:
  sub_1DC0926D8((uint64_t)v20, (uint64_t (*)(_QWORD))sub_1DC154164);
  if ((*(_BYTE *)(v29 + 48) & 1) == 0)
  {
    v35 = v31 - *(double *)(v29 + 40);
    if (v35 <= 0.0)
      v35 = 0.0;
    *(double *)(v29 + 56) = *(double *)(v29 + 56) + v35;
    *(double *)(v29 + 64) = v35;
    *(_QWORD *)(v29 + 40) = 0;
    *(_BYTE *)(v29 + 48) = 1;
  }
  swift_release();
  v36 = *(_QWORD *)(v60 + 104);
  *(_QWORD *)(v36 + 40) = 0;
  *(_BYTE *)(v36 + 48) = 1;
  v37 = *MEMORY[0x1E0DAD2F8];
  v38 = v53;
  v52 = *(void (**)(uint64_t, uint64_t, uint64_t))(v53 + 104);
  v39 = v55;
  v40 = v56;
  v52(v55, v37, v56);
  v41 = sub_1DC40328C();
  v42 = *(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56);
  v43 = v57;
  v42(v57, 1, 1, v41);
  v44 = v54;
  sub_1DC402740();
  v62 = 1;
  sub_1DC322C9C(v39, v58, v59, v43, v51, v44, 0x100000000uLL);
  sub_1DC0926D8(v44, (uint64_t (*)(_QWORD))sub_1DC154164);
  sub_1DC0B091C(v43, &qword_1F0352088, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD2D0]);
  v45 = *(void (**)(uint64_t, uint64_t))(v38 + 8);
  v45(v39, v40);
  v52(v39, *MEMORY[0x1E0DAD308], v40);
  v42(v43, 1, 1, v41);
  result = sub_1DC402740();
  if ((~*(_QWORD *)&a3 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (a3 <= -2147483650.0)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (a3 < 2147483650.0)
  {
    v61 = 0;
    v47 = v54;
    v46 = v55;
    v48 = v57;
    v49 = v51;
    sub_1DC322C9C(v55, v58, v59, v57, v51, v54, (int)a3);
    sub_1DC0926D8(v47, (uint64_t (*)(_QWORD))sub_1DC154164);
    sub_1DC0B091C(v48, &qword_1F0352088, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD2D0]);
    v45(v46, v56);
    return sub_1DC0926D8((uint64_t)v49, (uint64_t (*)(_QWORD))type metadata accessor for StocksAudioTrack);
  }
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_1DC32594C(uint64_t a1, unint64_t a2, uint64_t a3)
{
  return sub_1DC321DC0(a1, a2, a3);
}

uint64_t sub_1DC32596C(uint64_t a1, unint64_t a2)
{
  return sub_1DC3235F8(a1, a2);
}

uint64_t sub_1DC32598C(uint64_t a1, unint64_t a2, uint64_t a3)
{
  return sub_1DC323A74(a1, a2, a3);
}

uint64_t sub_1DC3259AC(uint64_t a1, unint64_t a2)
{
  return sub_1DC323EE8(a1, a2);
}

uint64_t sub_1DC3259CC(uint64_t a1, unint64_t a2)
{
  return sub_1DC3241D4(a1, a2);
}

uint64_t sub_1DC3259EC(uint64_t a1, unint64_t a2, double a3)
{
  return sub_1DC32484C(a1, a2, a3);
}

id sub_1DC325A0C(uint64_t a1, unint64_t a2, double a3)
{
  return sub_1DC324E1C(a1, a2, a3);
}

uint64_t sub_1DC325A2C(uint64_t a1, unint64_t a2, double a3)
{
  return sub_1DC325418(a1, a2, a3);
}

uint64_t sub_1DC325A4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0;
  sub_1DC4039C4();
  sub_1DC080808(&qword_1F0352100, (uint64_t (*)(uint64_t))MEMORY[0x1E0DADD08], MEMORY[0x1E0DADD00]);
  sub_1DC401864();
  sub_1DC403A54();
  sub_1DC080808((unint64_t *)&qword_1EDB29950, (uint64_t (*)(uint64_t))MEMORY[0x1E0DADDD0], MEMORY[0x1E0DADDB0]);
  sub_1DC401864();
  sub_1DC403B08();
  sub_1DC080808(&qword_1EDB27520, (uint64_t (*)(uint64_t))MEMORY[0x1E0DADF38], MEMORY[0x1E0DADF08]);
  sub_1DC401864();
  v2 = sub_1DC401894();
  sub_1DC403A78();
  sub_1DC080808((unint64_t *)&unk_1EDB29970, (uint64_t (*)(uint64_t))MEMORY[0x1E0DADE28], MEMORY[0x1E0DADE18]);
  sub_1DC401864();
  *(_QWORD *)(v1 + 40) = v2;
  return swift_release();
}

uint64_t sub_1DC325BC0()
{
  return sub_1DC325A4C();
}

uint64_t sub_1DC325BE0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  void (*v24)(__n128);
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  char *v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;

  v68 = a7;
  v57 = a6;
  v61 = a4;
  v62 = a3;
  v58 = a2;
  v60 = a1;
  v79 = sub_1DC403280();
  v73 = *(_QWORD *)(v79 - 8);
  v67 = *(_QWORD *)(v73 + 64);
  MEMORY[0x1E0C80A78](v79);
  v78 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC089DA4(0, &qword_1F0352088, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD2D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v10 = *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64);
  v65 = *(_QWORD *)(v9 - 8);
  v66 = v10;
  MEMORY[0x1E0C80A78](v9);
  v76 = (uint64_t)&v45 - v11;
  v75 = sub_1DC403298();
  v70 = *(_QWORD *)(v75 - 8);
  v59 = *(_QWORD *)(v70 + 64);
  MEMORY[0x1E0C80A78](v75);
  v74 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = sub_1DC40367C();
  v69 = *(_QWORD *)(v72 - 8);
  v56 = *(_QWORD *)(v69 + 64);
  MEMORY[0x1E0C80A78](v72);
  v71 = (char *)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC154164();
  v52 = *(_QWORD *)(v14 - 8);
  v53 = *(_QWORD *)(v52 + 64);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = v16;
  v17 = type metadata accessor for StocksAudioTrack();
  v47 = *(_QWORD *)(v17 - 8);
  v18 = *(_QWORD *)(v47 + 64);
  MEMORY[0x1E0C80A78](v17);
  v48 = (uint64_t)&v45 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_1DC4011BC();
  v20 = *(_QWORD *)(v19 - 8);
  v49 = v19;
  v21 = *(_QWORD *)(v20 + 64);
  MEMORY[0x1E0C80A78](v19);
  v51 = (char *)&v45 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = MEMORY[0x1E0C80A78](v22);
  v54 = *a5;
  v24 = *(void (**)(__n128))(v20 + 16);
  v46 = v20;
  v26 = (char *)&v45 - v25;
  v63 = (char *)&v45 - v25;
  v24(v23);
  v55 = *(_QWORD *)(v77 + 104);
  v64 = *(_QWORD *)(v55 + 32);
  sub_1DC0990BC((uint64_t)a5, (uint64_t)&v45 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for StocksAudioTrack);
  ((void (*)(char *, char *, uint64_t))v24)((char *)&v45 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0), v26, v19);
  sub_1DC0990BC(v57, (uint64_t)v16, (uint64_t (*)(_QWORD))sub_1DC154164);
  v27 = v69;
  (*(void (**)(char *, uint64_t, uint64_t))(v69 + 16))(v71, v58, v72);
  v28 = v70;
  (*(void (**)(char *, uint64_t, uint64_t))(v70 + 16))(v74, v60, v75);
  sub_1DC0EDD64(v61, v76, &qword_1F0352088, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD2D0]);
  v29 = v73;
  (*(void (**)(char *, unint64_t, uint64_t))(v73 + 16))(v78, v62, v79);
  v30 = (*(unsigned __int8 *)(v47 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80);
  v31 = (v18 + v30 + 7) & 0xFFFFFFFFFFFFFFF8;
  v32 = (v31 + 15) & 0xFFFFFFFFFFFFFFF8;
  v33 = (*(unsigned __int8 *)(v20 + 80) + v32 + 8) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  v34 = (v21 + *(unsigned __int8 *)(v52 + 80) + v33) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80);
  v35 = (v53 + *(unsigned __int8 *)(v27 + 80) + v34) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
  v36 = (v56 + v35 + 7) & 0xFFFFFFFFFFFFFFF8;
  v37 = (*(unsigned __int8 *)(v28 + 80) + v36 + 8) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
  v62 = (v59 + v37 + 3) & 0xFFFFFFFFFFFFFFFCLL;
  v65 = (*(unsigned __int8 *)(v65 + 80) + v62 + 5) & ~(unint64_t)*(unsigned __int8 *)(v65 + 80);
  v66 = (v66 + *(unsigned __int8 *)(v29 + 80) + v65) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
  v38 = swift_allocObject();
  sub_1DC092ED0(v48, v38 + v30, (uint64_t (*)(_QWORD))type metadata accessor for StocksAudioTrack);
  *(_QWORD *)(v38 + v31) = v54;
  *(_QWORD *)(v38 + v32) = v77;
  v39 = v38 + v33;
  v40 = v46;
  v41 = v49;
  (*(void (**)(unint64_t, char *, uint64_t))(v46 + 32))(v39, v51, v49);
  sub_1DC092ED0((uint64_t)v50, v38 + v34, (uint64_t (*)(_QWORD))sub_1DC154164);
  (*(void (**)(unint64_t, char *, uint64_t))(v69 + 32))(v38 + v35, v71, v72);
  *(_QWORD *)(v38 + v36) = v55;
  (*(void (**)(unint64_t, char *, uint64_t))(v70 + 32))(v38 + v37, v74, v75);
  v42 = v38 + v62;
  v43 = BYTE4(v68);
  *(_DWORD *)v42 = v68;
  *(_BYTE *)(v42 + 4) = v43 & 1;
  sub_1DC329704(v76, v38 + v65);
  (*(void (**)(unint64_t, char *, uint64_t))(v73 + 32))(v38 + v66, v78, v79);
  swift_retain_n();
  swift_unknownObjectRetain();
  swift_retain();
  sub_1DC401828();
  swift_release();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v63, v41);
  return swift_release();
}

id sub_1DC326170(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v13;
  char *v14;
  uint64_t (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  id result;
  double v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (**v51)(char *, uint64_t);
  uint64_t v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  void *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  unsigned __int8 v62;
  uint64_t v63;
  uint64_t v64;
  id v65;
  id v66;
  id v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  void (*v81)(char *, uint64_t, uint64_t);
  char *v82;
  uint64_t v83;
  uint64_t v84;
  char v85;
  uint64_t (*v86)(uint64_t);
  uint64_t v87;
  uint64_t v88;
  int v89;
  uint64_t v90;
  char *v91;
  double v92;
  double v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  unint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  void *v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  void (**v143)(char *, uint64_t);
  uint64_t v144;
  uint64_t v145;
  __int128 v146;

  v132 = a7;
  v133 = a8;
  v136 = a6;
  v130 = a5;
  v106 = a4;
  v126 = a3;
  v142 = a1;
  v118 = sub_1DC403280();
  v117 = *(_QWORD *)(v118 - 8);
  MEMORY[0x1E0C80A78](v118);
  v14 = (char *)&v98 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1DC089DA4(0, &qword_1F0352088, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD2D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v16);
  v113 = (uint64_t)&v98 - v17;
  sub_1DC154164();
  MEMORY[0x1E0C80A78](v18);
  v111 = (uint64_t)&v98 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v110 = sub_1DC403298();
  v109 = *(_QWORD *)(v110 - 8);
  MEMORY[0x1E0C80A78](v110);
  v112 = (char *)&v98 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v116 = sub_1DC403580();
  v115 = *(_QWORD *)(v116 - 8);
  MEMORY[0x1E0C80A78](v116);
  v114 = (char *)&v98 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC089DA4(0, (unint64_t *)&unk_1F0352098, (uint64_t (*)(uint64_t))MEMORY[0x1E0DADC78], v15);
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)&v98 - v23;
  v131 = sub_1DC403958();
  v135 = *(_QWORD *)(v131 - 8);
  MEMORY[0x1E0C80A78](v131);
  v107 = (char *)&v98 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v134 = sub_1DC40367C();
  v26 = *(_QWORD *)(v134 - 8);
  MEMORY[0x1E0C80A78](v134);
  v28 = (char *)&v98 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = sub_1DC4030D0();
  v129 = *(_QWORD *)(v29 - 8);
  MEMORY[0x1E0C80A78](v29);
  v128 = (char *)&v98 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v127 = sub_1DC4034F0();
  v125 = *(_QWORD *)(v127 - 8);
  MEMORY[0x1E0C80A78](v127);
  v124 = (char *)&v98 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v100 = sub_1DC403B2C();
  v99 = *(_QWORD *)(v100 - 8);
  MEMORY[0x1E0C80A78](v100);
  v98 = (char *)&v98 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v105 = sub_1DC402FB0();
  v104 = *(_QWORD *)(v105 - 8);
  MEMORY[0x1E0C80A78](v105);
  v103 = (char *)&v98 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v137 = sub_1DC4032BC();
  v123 = *(_QWORD *)(v137 - 8);
  MEMORY[0x1E0C80A78](v137);
  v35 = (char *)&v98 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = sub_1DC40310C();
  MEMORY[0x1E0C80A78](v36);
  v38 = (char *)&v98 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v141 = sub_1DC403B80();
  v143 = *(void (***)(char *, uint64_t))(v141 - 8);
  MEMORY[0x1E0C80A78](v141);
  v40 = (char *)&v98 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = objc_msgSend(*(id *)(a2 + *(int *)(type metadata accessor for StocksAudioTrack() + 24)), sel_duration);
  if ((~*(_QWORD *)&v42 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_24;
  }
  if (v42 <= -2147483650.0)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if (v42 >= 2147483650.0)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v120 = v29;
  v121 = v26;
  v122 = v28;
  v101 = v24;
  v108 = v14;
  sub_1DC23B898((uint64_t)v38);
  sub_1DC403B74();
  sub_1DC089DA4(0, (unint64_t *)&qword_1EDB3FE40, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8178], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v119 = v35;
  v145 = v43;
  v44 = sub_1DC401618();
  v45 = *(_QWORD *)(v44 - 8);
  v46 = *(unsigned __int8 *)(v45 + 80);
  v47 = (v46 + 32) & ~v46;
  v144 = v47 + *(_QWORD *)(v45 + 72);
  v48 = v46 | 7;
  v49 = swift_allocObject();
  v146 = xmmword_1DC40DC10;
  *(_OWORD *)(v49 + 16) = xmmword_1DC40DC10;
  v50 = *MEMORY[0x1E0CF8170];
  v51 = *(void (***)(char *, uint64_t))(v45 + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v51)(v49 + v47, v50, v44);
  sub_1DC080808(&qword_1F03520A8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAE030], MEMORY[0x1E0DAE020]);
  v138 = "ssionManager.swift";
  v52 = v141;
  sub_1DC4015C4();
  swift_bridgeObjectRelease();
  v143[1](v40, v52);
  v53 = v126;
  swift_getObjectType();
  v54 = (uint64_t)v119;
  sub_1DC29A9A8((uint64_t)v119);
  v55 = swift_allocObject();
  *(_OWORD *)(v55 + 16) = v146;
  v139 = v47;
  v140 = v44;
  LODWORD(v141) = v50;
  v143 = v51;
  ((void (*)(uint64_t, uint64_t, uint64_t))v51)(v55 + v47, v50, v44);
  sub_1DC080808((unint64_t *)&unk_1EDB297F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD350], MEMORY[0x1E0DAD338]);
  v102 = 0x80000001DC448290;
  v56 = v137;
  sub_1DC4015C4();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v123 + 8))(v54, v56);
  v57 = objc_msgSend(v53, sel_sourceChannel);
  if (v57)
  {
    v58 = v57;
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v106 + 56), *(_QWORD *)(v106 + 80));
    v59 = v103;
    sub_1DC292AD8(v58);
    v60 = swift_allocObject();
    *(_OWORD *)(v60 + 16) = v146;
    ((void (*)(uint64_t, _QWORD, uint64_t))v143)(v60 + v139, v141, v140);
    sub_1DC080808((unint64_t *)&unk_1EDB29750, (uint64_t (*)(uint64_t))MEMORY[0x1E0DACE70], MEMORY[0x1E0DACE60]);
    v61 = v105;
    sub_1DC4015C4();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v104 + 8))(v59, v61);
  }
  v137 = v48;
  v62 = objc_msgSend(v53, sel_respondsToSelector_, sel_parentIssue);
  v63 = v139;
  v64 = v140;
  if ((v62 & 1) != 0)
  {
    v65 = objc_msgSend(v53, sel_parentIssue);
    if (v65)
    {
      v66 = v65;
      v67 = objc_msgSend(v66, sel_identifier);
      sub_1DC408A4C();

      v68 = v98;
      sub_1DC403B20();
      v69 = swift_allocObject();
      *(_OWORD *)(v69 + 16) = v146;
      ((void (*)(uint64_t, _QWORD, uint64_t))v143)(v69 + v63, v141, v64);
      sub_1DC080808(&qword_1EDB29990, (uint64_t (*)(uint64_t))MEMORY[0x1E0DADF98], MEMORY[0x1E0DADF88]);
      v70 = v100;
      sub_1DC4015C4();

      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v99 + 8))(v68, v70);
    }
  }
  v71 = v124;
  sub_1DC15CA64();
  v72 = swift_allocObject();
  *(_OWORD *)(v72 + 16) = v146;
  v73 = v63;
  v74 = v141;
  ((void (*)(uint64_t, _QWORD, uint64_t))v143)(v72 + v63, v141, v64);
  sub_1DC080808(&qword_1EDB29850, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD5E8], MEMORY[0x1E0DAD5D0]);
  v75 = v127;
  sub_1DC4015C4();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v125 + 8))(v71, v75);
  v76 = v128;
  sub_1DC327064();
  v77 = swift_allocObject();
  *(_OWORD *)(v77 + 16) = v146;
  ((void (*)(uint64_t, uint64_t, uint64_t))v143)(v77 + v73, v74, v64);
  sub_1DC080808(&qword_1F03520B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DACFB8], MEMORY[0x1E0DACFA8]);
  v78 = v120;
  sub_1DC4015C4();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v129 + 8))(v76, v78);
  v79 = *MEMORY[0x1E0DAD808];
  v80 = v121;
  v81 = *(void (**)(char *, uint64_t, uint64_t))(v121 + 104);
  v82 = v122;
  v83 = v134;
  v81(v122, v79, v134);
  sub_1DC080808(&qword_1F03520B8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD810], MEMORY[0x1E0DAD820]);
  v84 = v132;
  v85 = sub_1DC4089F8();
  (*(void (**)(char *, uint64_t))(v80 + 8))(v82, v83);
  if ((v85 & 1) != 0)
  {
    v86 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DADC78];
    sub_1DC080808(&qword_1F03520C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DADC78], MEMORY[0x1E0DADC68]);
    v87 = (uint64_t)v101;
    v88 = v131;
    sub_1DC4015B8();
    v89 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v135 + 48))(v87, 1, v88);
    result = (id)sub_1DC0B091C(v87, (unint64_t *)&unk_1F0352098, v86);
    v90 = v133;
    if (v89 != 1)
      goto LABEL_14;
    v81(v82, v79, v134);
    v91 = v107;
    sub_1DC40394C();
    sub_1DC4015C4();
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v80 + 16))(v82, v84, v83);
    v91 = v107;
    sub_1DC40394C();
    sub_1DC080808(&qword_1F03520C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DADC78], MEMORY[0x1E0DADC68]);
    v88 = v131;
    sub_1DC4015C4();
    v90 = v133;
  }
  result = (id)(*(uint64_t (**)(char *, uint64_t))(v135 + 8))(v91, v88);
LABEL_14:
  v92 = *(double *)(v90 + 56);
  if ((~*(_QWORD *)&v92 & 0x7FF0000000000000) == 0)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  if (v92 <= -9.22337204e18)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  if (v92 >= 9.22337204e18)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v93 = *(double *)(v90 + 64);
  if ((~*(_QWORD *)&v93 & 0x7FF0000000000000) == 0)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (v93 <= -9.22337204e18)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  if (v93 >= 9.22337204e18)
  {
LABEL_31:
    __break(1u);
    return result;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v109 + 16))(v112, a9, v110);
  v94 = v111;
  sub_1DC0990BC(v136, v111, (uint64_t (*)(_QWORD))sub_1DC154164);
  if ((a10 & 0x100000000) != 0)
    sub_1DC3271A8();
  sub_1DC0926D8(v94, (uint64_t (*)(_QWORD))sub_1DC154164);
  sub_1DC0EDD64(a11, v113, &qword_1F0352088, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD2D0]);
  (*(void (**)(char *, uint64_t, uint64_t))(v117 + 16))(v108, a12, v118);
  swift_bridgeObjectRetain();
  v95 = v114;
  sub_1DC403574();
  v96 = swift_allocObject();
  *(_OWORD *)(v96 + 16) = v146;
  ((void (*)(uint64_t, _QWORD, uint64_t))v143)(v96 + v139, v141, v140);
  sub_1DC080808(&qword_1F03520C8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD6B8], MEMORY[0x1E0DAD6A8]);
  v97 = v116;
  sub_1DC4015C4();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v115 + 8))(v95, v97);
  sub_1DC403850();
  sub_1DC080808(&qword_1F03520D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DADAD0], MEMORY[0x1E0DADAC8]);
  return (id)sub_1DC401570();
}

uint64_t sub_1DC327064()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t (*v9)(_QWORD);
  int EnumCaseMultiPayload;
  uint64_t v11;
  uint64_t v13;

  v1 = v0;
  v2 = sub_1DC401C18();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC154164();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0990BC(v1, (uint64_t)v8, v9);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    sub_1DC27A2C4();
    goto LABEL_5;
  }
  if (EnumCaseMultiPayload == 1)
  {
    sub_1DC27A3D0();
LABEL_5:
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, &v8[*(int *)(v11 + 64)], v2);
    sub_1DC401C0C();
    sub_1DC4030C4();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return sub_1DC0926D8((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for StocksAudioTrack);
  }
  return sub_1DC4030C4();
}

uint64_t sub_1DC3271A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t (*v4)(_QWORD);
  int EnumCaseMultiPayload;
  double v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;

  sub_1DC154164();
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0990BC(v0, (uint64_t)v3, v4);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    v6 = 0.0;
    if (EnumCaseMultiPayload != 1)
      return (int)v6;
    sub_1DC27A3D0();
  }
  else
  {
    sub_1DC27A2C4();
  }
  v6 = *(double *)&v3[*(int *)(v7 + 48)];
  v8 = &v3[*(int *)(v7 + 64)];
  v9 = sub_1DC401C18();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  result = sub_1DC0926D8((uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for StocksAudioTrack);
  if ((~*(_QWORD *)&v6 & 0x7FF0000000000000) != 0)
  {
    if (v6 <= -2147483650.0)
    {
      __break(1u);
    }
    else if (v6 < 2147483650.0)
    {
      return (int)v6;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1DC3272D0(uint64_t a1, uint64_t a2, void *a3, _QWORD *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  void (**v45)(char *, uint64_t);
  uint64_t v46;
  char *v47;
  double v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void (**v60)(char *, uint64_t);
  void *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  id v69;
  void *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  id v75;
  id v76;
  id v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  void (*v95)(char *, uint64_t, uint64_t);
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t (*v99)(uint64_t);
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  int v103;
  uint64_t result;
  char *v105;
  double v106;
  double v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  char *v113;
  char v114;
  unsigned int *v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  unint64_t v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  char *v146;
  uint64_t v147;
  char *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  char *v157;
  uint64_t v158;
  uint64_t v159;
  char *v160;
  uint64_t v161;
  void *v162;
  uint64_t v163;
  char *v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  char *v171;
  char *v172;
  uint64_t v173;
  uint64_t v174;
  _QWORD *v175;
  unint64_t v176;
  void (**v177)(char *, uint64_t);
  char *v178;
  unsigned int v179;
  void (**v180)(char *, uint64_t);
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  __int128 v184;
  _OWORD v185[2];

  v169 = a8;
  v168 = a7;
  v174 = a6;
  v175 = a4;
  v162 = a3;
  v183 = a1;
  v149 = sub_1DC403184();
  v147 = *(_QWORD *)(v149 - 8);
  MEMORY[0x1E0C80A78](v149);
  v145 = (char *)&v122 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v146 = (char *)&v122 - v16;
  v144 = sub_1DC40124C();
  v143 = *(_QWORD *)(v144 - 8);
  MEMORY[0x1E0C80A78](v144);
  v142 = (char *)&v122 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_1DC403178();
  v150 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v148 = (char *)&v122 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v140 = sub_1DC403280();
  v139 = *(_QWORD *)(v140 - 8);
  MEMORY[0x1E0C80A78](v140);
  v141 = (char *)&v122 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1DC089DA4(0, &qword_1F0352088, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD2D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v22);
  v135 = (uint64_t)&v122 - v23;
  sub_1DC154164();
  MEMORY[0x1E0C80A78](v24);
  v134 = (uint64_t)&v122 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v133 = sub_1DC403298();
  v132 = *(_QWORD *)(v133 - 8);
  MEMORY[0x1E0C80A78](v133);
  v172 = (char *)&v122 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v138 = sub_1DC403580();
  v137 = *(_QWORD *)(v138 - 8);
  MEMORY[0x1E0C80A78](v138);
  v136 = (char *)&v122 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC089DA4(0, (unint64_t *)&unk_1F0352098, (uint64_t (*)(uint64_t))MEMORY[0x1E0DADC78], v21);
  MEMORY[0x1E0C80A78](v28);
  v30 = (char *)&v122 - v29;
  v31 = sub_1DC403958();
  v167 = *(_QWORD *)(v31 - 8);
  MEMORY[0x1E0C80A78](v31);
  v130 = (char *)&v122 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v170 = sub_1DC40367C();
  v166 = *(_QWORD *)(v170 - 8);
  MEMORY[0x1E0C80A78](v170);
  v171 = (char *)&v122 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = sub_1DC4018DC();
  v165 = *(_QWORD *)(v34 - 8);
  MEMORY[0x1E0C80A78](v34);
  v164 = (char *)&v122 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v163 = sub_1DC4030D0();
  v161 = *(_QWORD *)(v163 - 8);
  MEMORY[0x1E0C80A78](v163);
  v160 = (char *)&v122 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v159 = sub_1DC4034F0();
  v158 = *(_QWORD *)(v159 - 8);
  MEMORY[0x1E0C80A78](v159);
  v157 = (char *)&v122 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v124 = sub_1DC403B2C();
  v123 = *(_QWORD *)(v124 - 8);
  MEMORY[0x1E0C80A78](v124);
  v122 = (char *)&v122 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v129 = sub_1DC402FB0();
  v128 = *(_QWORD *)(v129 - 8);
  MEMORY[0x1E0C80A78](v129);
  v127 = (char *)&v122 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v156 = sub_1DC4032BC();
  v155 = *(_QWORD *)(v156 - 8);
  MEMORY[0x1E0C80A78](v156);
  v154 = (uint64_t)&v122 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = sub_1DC40310C();
  MEMORY[0x1E0C80A78](v41);
  v43 = (char *)&v122 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = sub_1DC403B80();
  v45 = *(void (***)(char *, uint64_t))(v44 - 8);
  MEMORY[0x1E0C80A78](v44);
  v47 = (char *)&v122 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_msgSend(*(id *)(a2 + *(int *)(type metadata accessor for StocksAudioTrack() + 24)), sel_duration);
  if ((~*(_QWORD *)&v48 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_27;
  }
  if (v48 <= -2147483650.0)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  if (v48 >= 2147483650.0)
  {
LABEL_28:
    __break(1u);
LABEL_29:
    swift_once();
    goto LABEL_10;
  }
  v151 = v34;
  v152 = a5;
  v125 = v30;
  v153 = v31;
  v131 = v18;
  sub_1DC23B898((uint64_t)v43);
  sub_1DC403B74();
  sub_1DC089DA4(0, (unint64_t *)&qword_1EDB3FE40, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8178], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v50 = v49;
  v51 = sub_1DC401618();
  v52 = *(_QWORD *)(v51 - 8);
  v53 = *(_QWORD *)(v52 + 72);
  v54 = *(unsigned __int8 *)(v52 + 80);
  v180 = v45;
  v181 = (v54 + 32) & ~v54;
  v55 = v44;
  v182 = v181 + v53;
  v56 = v181;
  v57 = v54 | 7;
  v58 = v50;
  v59 = swift_allocObject();
  v184 = xmmword_1DC40DC10;
  *(_OWORD *)(v59 + 16) = xmmword_1DC40DC10;
  v179 = *MEMORY[0x1E0CF8170];
  v60 = *(void (***)(char *, uint64_t))(v52 + 104);
  ((void (*)(uint64_t))v60)(v59 + v56);
  sub_1DC080808(&qword_1F03520A8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAE030], MEMORY[0x1E0DAE020]);
  v176 = (unint64_t)"ssionManager.swift";
  sub_1DC4015C4();
  v173 = v58;
  swift_bridgeObjectRelease();
  v180[1](v47, v55);
  v61 = v162;
  swift_getObjectType();
  v62 = v154;
  sub_1DC29A9A8(v154);
  v180 = (void (**)(char *, uint64_t))v57;
  v63 = swift_allocObject();
  *(_OWORD *)(v63 + 16) = v184;
  v64 = v179;
  v177 = v60;
  v178 = (char *)v51;
  ((void (*)(uint64_t, _QWORD, uint64_t))v60)(v63 + v181, v179, v51);
  sub_1DC080808((unint64_t *)&unk_1EDB297F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD350], MEMORY[0x1E0DAD338]);
  v126 = 0x80000001DC448290;
  v65 = v156;
  sub_1DC4015C4();
  v66 = v181;
  v67 = v64;
  v68 = v61;
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v155 + 8))(v62, v65);
  v69 = objc_msgSend(v61, sel_sourceChannel);
  if (v69)
  {
    v70 = v69;
    __swift_project_boxed_opaque_existential_1(v175 + 7, v175[10]);
    v71 = v127;
    sub_1DC292AD8(v70);
    v72 = swift_allocObject();
    *(_OWORD *)(v72 + 16) = v184;
    ((void (*)(uint64_t, uint64_t, char *))v177)(v72 + v66, v64, v178);
    sub_1DC080808((unint64_t *)&unk_1EDB29750, (uint64_t (*)(uint64_t))MEMORY[0x1E0DACE70], MEMORY[0x1E0DACE60]);
    v73 = v129;
    sub_1DC4015C4();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v128 + 8))(v71, v73);
  }
  v74 = v67;
  if ((objc_msgSend(v68, sel_respondsToSelector_, sel_parentIssue) & 1) != 0)
  {
    v75 = objc_msgSend(v68, sel_parentIssue);
    if (v75)
    {
      v76 = v75;
      v77 = objc_msgSend(v76, sel_identifier);
      sub_1DC408A4C();

      v78 = v122;
      sub_1DC403B20();
      v79 = swift_allocObject();
      *(_OWORD *)(v79 + 16) = v184;
      ((void (*)(uint64_t, uint64_t, char *))v177)(v79 + v181, v74, v178);
      sub_1DC080808(&qword_1EDB29990, (uint64_t (*)(uint64_t))MEMORY[0x1E0DADF98], MEMORY[0x1E0DADF88]);
      v80 = v124;
      sub_1DC4015C4();

      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v123 + 8))(v78, v80);
    }
  }
  v81 = v157;
  sub_1DC15CA64();
  v82 = swift_allocObject();
  *(_OWORD *)(v82 + 16) = v184;
  v18 = v181;
  v45 = v177;
  ((void (*)(uint64_t, uint64_t, char *))v177)(v82 + v181, v74, v178);
  sub_1DC080808(&qword_1EDB29850, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD5E8], MEMORY[0x1E0DAD5D0]);
  v83 = v159;
  sub_1DC4015C4();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v158 + 8))(v81, v83);
  v84 = v160;
  sub_1DC327064();
  v85 = swift_allocObject();
  *(_OWORD *)(v85 + 16) = v184;
  v86 = v74;
  v47 = v178;
  ((void (*)(uint64_t, uint64_t, char *))v45)(v85 + v18, v86, v178);
  sub_1DC080808(&qword_1F03520B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DACFB8], MEMORY[0x1E0DACFA8]);
  v87 = v163;
  sub_1DC4015C4();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v161 + 8))(v84, v87);
  if (qword_1F034B120 != -1)
    goto LABEL_29;
LABEL_10:
  v88 = v151;
  v89 = __swift_project_value_buffer(v151, (uint64_t)qword_1F0352050);
  v90 = v165;
  v91 = v164;
  (*(void (**)(char *, uint64_t, uint64_t))(v165 + 16))(v164, v89, v88);
  v92 = swift_allocObject();
  *(_OWORD *)(v92 + 16) = v184;
  ((void (*)(uint64_t, _QWORD, char *))v45)(v92 + v18, v179, v47);
  sub_1DC080808((unint64_t *)&unk_1F03520D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86B8]);
  sub_1DC4015C4();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v90 + 8))(v91, v88);
  v93 = *MEMORY[0x1E0DAD808];
  v94 = v166;
  v95 = *(void (**)(char *, uint64_t, uint64_t))(v166 + 104);
  v96 = v171;
  v97 = v170;
  v95(v171, v93, v170);
  sub_1DC080808(&qword_1F03520B8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD810], MEMORY[0x1E0DAD820]);
  v98 = v168;
  LOBYTE(v90) = sub_1DC4089F8();
  (*(void (**)(char *, uint64_t))(v94 + 8))(v96, v97);
  if ((v90 & 1) != 0)
  {
    v99 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DADC78];
    sub_1DC080808(&qword_1F03520C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DADC78], MEMORY[0x1E0DADC68]);
    v100 = (uint64_t)v125;
    v101 = v153;
    sub_1DC4015B8();
    v102 = v167;
    v103 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v167 + 48))(v100, 1, v101);
    result = sub_1DC0B091C(v100, (unint64_t *)&unk_1F0352098, v99);
    if (v103 != 1)
      goto LABEL_15;
    v95(v171, v93, v170);
    v105 = v130;
    sub_1DC40394C();
    sub_1DC4015C4();
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v94 + 16))(v96, v98, v97);
    v105 = v130;
    sub_1DC40394C();
    sub_1DC080808(&qword_1F03520C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DADC78], MEMORY[0x1E0DADC68]);
    v101 = v153;
    sub_1DC4015C4();
    v102 = v167;
  }
  result = (*(uint64_t (**)(char *, uint64_t))(v102 + 8))(v105, v101);
LABEL_15:
  v106 = *(double *)(v169 + 56);
  if ((~*(_QWORD *)&v106 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_31;
  }
  if (v106 <= -9.22337204e18)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  if (v106 >= 9.22337204e18)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  v107 = *(double *)(v169 + 64);
  if ((~*(_QWORD *)&v107 & 0x7FF0000000000000) == 0)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  if (v107 <= -9.22337204e18)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v107 >= 9.22337204e18)
  {
LABEL_35:
    __break(1u);
    return result;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v132 + 16))(v172, a9, v133);
  v108 = v134;
  sub_1DC0990BC(v174, v134, (uint64_t (*)(_QWORD))sub_1DC154164);
  if ((a10 & 0x100000000) != 0)
    sub_1DC3271A8();
  sub_1DC0926D8(v108, (uint64_t (*)(_QWORD))sub_1DC154164);
  sub_1DC0EDD64(a11, v135, &qword_1F0352088, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD2D0]);
  (*(void (**)(char *, uint64_t, uint64_t))(v139 + 16))(v141, a12, v140);
  swift_bridgeObjectRetain();
  v109 = v136;
  sub_1DC403574();
  v110 = swift_allocObject();
  *(_OWORD *)(v110 + 16) = v184;
  v111 = v178;
  ((void (*)(uint64_t, _QWORD, char *))v177)(v110 + v181, v179, v178);
  sub_1DC080808(&qword_1F03520C8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD6B8], MEMORY[0x1E0DAD6A8]);
  v176 |= 0x8000000000000000;
  v112 = v138;
  sub_1DC4015C4();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v137 + 8))(v109, v112);
  __swift_project_boxed_opaque_existential_1(v175 + 16, v175[19]);
  v113 = v142;
  sub_1DC400A60();
  v114 = sub_1DC4011D4();
  v115 = (unsigned int *)MEMORY[0x1E0DAD158];
  v116 = v147;
  if ((v114 & 1) == 0)
    v115 = (unsigned int *)MEMORY[0x1E0DAD150];
  v117 = v146;
  v118 = v149;
  (*(void (**)(char *, _QWORD, uint64_t))(v147 + 104))(v146, *v115, v149);
  (*(void (**)(char *, char *, uint64_t))(v116 + 16))(v145, v117, v118);
  v119 = v148;
  sub_1DC40316C();
  (*(void (**)(char *, uint64_t))(v143 + 8))(v113, v144);
  (*(void (**)(char *, uint64_t))(v116 + 8))(v117, v118);
  v120 = swift_allocObject();
  *(_OWORD *)(v120 + 16) = v184;
  ((void (*)(uint64_t, _QWORD, char *))v177)(v120 + v181, v179, v111);
  sub_1DC080808(&qword_1EDB297C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD148], MEMORY[0x1E0DAD138]);
  v121 = v131;
  sub_1DC4015C4();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v150 + 8))(v119, v121);
  sub_1DC40337C();
  sub_1DC080808((unint64_t *)&unk_1F03520E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD410], MEMORY[0x1E0DAD408]);
  memset(v185, 0, sizeof(v185));
  sub_1DC4015DC();
  return sub_1DC0926D8((uint64_t)v185, (uint64_t (*)(_QWORD))sub_1DC0D11C4);
}

uint64_t sub_1DC328614(uint64_t a1, uint64_t a2, void *a3, _QWORD *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  double v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(uint64_t, uint64_t, uint64_t);
  void *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  id v55;
  void *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  id v60;
  id v61;
  id v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  void (*v74)(uint64_t, uint64_t, uint64_t);
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t result;
  uint64_t v84;
  double v85;
  double v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  char v94;
  unsigned int *v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  char *v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  void *v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  _QWORD *v144;
  uint64_t v145;
  unint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  void (*v151)(uint64_t, uint64_t, uint64_t);
  uint64_t v152;
  uint64_t v153;
  __int128 v154;
  _OWORD v155[2];

  v120 = a8;
  v142 = a7;
  v143 = a6;
  v144 = a4;
  v145 = a5;
  v138 = a3;
  v150 = a1;
  v128 = sub_1DC403184();
  v126 = *(_QWORD *)(v128 - 8);
  MEMORY[0x1E0C80A78](v128);
  v124 = (char *)&v102 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v125 = (char *)&v102 - v12;
  v123 = sub_1DC40124C();
  v122 = *(_QWORD *)(v123 - 8);
  MEMORY[0x1E0C80A78](v123);
  v121 = (char *)&v102 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1DC403178();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v127 = (char *)&v102 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v115 = sub_1DC403280();
  v114 = *(_QWORD *)(v115 - 8);
  MEMORY[0x1E0C80A78](v115);
  v118 = (char *)&v102 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC089DA4(0, &qword_1F0352088, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD2D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v18);
  v113 = (uint64_t)&v102 - v19;
  v111 = sub_1DC403298();
  v110 = *(_QWORD *)(v111 - 8);
  MEMORY[0x1E0C80A78](v111);
  v112 = (char *)&v102 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v119 = sub_1DC403580();
  v117 = *(_QWORD *)(v119 - 8);
  MEMORY[0x1E0C80A78](v119);
  v116 = (char *)&v102 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_1DC4018DC();
  v23 = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v22);
  v25 = (char *)&v102 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = sub_1DC4030D0();
  v140 = *(_QWORD *)(v26 - 8);
  v141 = v26;
  MEMORY[0x1E0C80A78](v26);
  v139 = (char *)&v102 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v137 = sub_1DC4034F0();
  v136 = *(_QWORD *)(v137 - 8);
  MEMORY[0x1E0C80A78](v137);
  v135 = (char *)&v102 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v104 = sub_1DC403B2C();
  v103 = *(_QWORD *)(v104 - 8);
  MEMORY[0x1E0C80A78](v104);
  v102 = (char *)&v102 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v107 = sub_1DC402FB0();
  v106 = *(_QWORD *)(v107 - 8);
  MEMORY[0x1E0C80A78](v107);
  v105 = (char *)&v102 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v134 = sub_1DC4032BC();
  v133 = *(_QWORD *)(v134 - 8);
  MEMORY[0x1E0C80A78](v134);
  v132 = (uint64_t)&v102 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = sub_1DC40310C();
  MEMORY[0x1E0C80A78](v32);
  v34 = (char *)&v102 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = sub_1DC403B80();
  v36 = *(_QWORD *)(v35 - 8);
  MEMORY[0x1E0C80A78](v35);
  v38 = (char *)&v102 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_msgSend(*(id *)(a2 + *(int *)(type metadata accessor for StocksAudioTrack() + 24)), sel_duration);
  if ((~*(_QWORD *)&v39 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_20;
  }
  if (v39 <= -2147483650.0)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if (v39 >= 2147483650.0)
  {
LABEL_21:
    __break(1u);
LABEL_22:
    swift_once();
    goto LABEL_10;
  }
  v129 = v25;
  v130 = v23;
  v131 = v22;
  v108 = v15;
  v109 = v14;
  sub_1DC23B898((uint64_t)v34);
  sub_1DC403B74();
  sub_1DC089DA4(0, (unint64_t *)&qword_1EDB3FE40, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8178], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v41 = v40;
  v42 = sub_1DC401618();
  v43 = *(_QWORD *)(v42 - 8);
  v44 = *(_QWORD *)(v43 + 72);
  v45 = *(unsigned __int8 *)(v43 + 80);
  v152 = (v45 + 32) & ~v45;
  v153 = v152 + v44;
  v46 = v152;
  v148 = v45 | 7;
  v47 = swift_allocObject();
  v154 = xmmword_1DC40DC10;
  *(_OWORD *)(v47 + 16) = xmmword_1DC40DC10;
  v149 = v36;
  v48 = *MEMORY[0x1E0CF8170];
  v49 = *(void (**)(uint64_t, uint64_t, uint64_t))(v43 + 104);
  v49(v47 + v46, v48, v42);
  sub_1DC080808(&qword_1F03520A8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAE030], MEMORY[0x1E0DAE020]);
  v146 = (unint64_t)"ssionManager.swift";
  sub_1DC4015C4();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v149 + 8))(v38, v35);
  v50 = v138;
  swift_getObjectType();
  v51 = v132;
  sub_1DC29A9A8(v132);
  v149 = v41;
  v52 = swift_allocObject();
  *(_OWORD *)(v52 + 16) = v154;
  v147 = v42;
  v49(v52 + v152, v48, v42);
  sub_1DC080808((unint64_t *)&unk_1EDB297F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD350], MEMORY[0x1E0DAD338]);
  v53 = v134;
  sub_1DC4015C4();
  swift_bridgeObjectRelease();
  v54 = v48;
  (*(void (**)(uint64_t, uint64_t))(v133 + 8))(v51, v53);
  v55 = objc_msgSend(v50, sel_sourceChannel);
  if (v55)
  {
    v56 = v55;
    __swift_project_boxed_opaque_existential_1(v144 + 7, v144[10]);
    v57 = v105;
    sub_1DC292AD8(v56);
    v58 = swift_allocObject();
    *(_OWORD *)(v58 + 16) = v154;
    v49(v58 + v152, v48, v147);
    sub_1DC080808((unint64_t *)&unk_1EDB29750, (uint64_t (*)(uint64_t))MEMORY[0x1E0DACE70], MEMORY[0x1E0DACE60]);
    v59 = v107;
    sub_1DC4015C4();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v106 + 8))(v57, v59);
  }
  if ((objc_msgSend(v50, sel_respondsToSelector_, sel_parentIssue) & 1) != 0)
  {
    v60 = objc_msgSend(v50, sel_parentIssue);
    if (v60)
    {
      v61 = v60;
      v62 = objc_msgSend(v61, sel_identifier);
      sub_1DC408A4C();

      v63 = v102;
      sub_1DC403B20();
      v64 = swift_allocObject();
      *(_OWORD *)(v64 + 16) = v154;
      v49(v64 + v152, v48, v147);
      sub_1DC080808(&qword_1EDB29990, (uint64_t (*)(uint64_t))MEMORY[0x1E0DADF98], MEMORY[0x1E0DADF88]);
      v65 = v104;
      sub_1DC4015C4();

      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v103 + 8))(v63, v65);
    }
  }
  v66 = v135;
  sub_1DC15CA64();
  v151 = v49;
  LODWORD(v145) = v54;
  v67 = swift_allocObject();
  *(_OWORD *)(v67 + 16) = v154;
  v68 = v152;
  v69 = v147;
  v151(v67 + v152, v145, v147);
  sub_1DC080808(&qword_1EDB29850, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD5E8], MEMORY[0x1E0DAD5D0]);
  v70 = v146 | 0x8000000000000000;
  v71 = v137;
  sub_1DC4015C4();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v136 + 8))(v66, v71);
  v72 = v139;
  sub_1DC327064();
  v73 = v145;
  v74 = v151;
  v75 = swift_allocObject();
  *(_OWORD *)(v75 + 16) = v154;
  v76 = v75 + v68;
  v15 = v73;
  v74(v76, v73, v69);
  sub_1DC080808(&qword_1F03520B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DACFB8], MEMORY[0x1E0DACFA8]);
  v138 = (void *)v70;
  v77 = v141;
  sub_1DC4015C4();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v140 + 8))(v72, v77);
  if (qword_1F034B120 != -1)
    goto LABEL_22;
LABEL_10:
  v78 = v131;
  v79 = __swift_project_value_buffer(v131, (uint64_t)qword_1F0352050);
  v80 = v130;
  v81 = v129;
  (*(void (**)(char *, uint64_t, uint64_t))(v130 + 16))(v129, v79, v78);
  v82 = swift_allocObject();
  *(_OWORD *)(v82 + 16) = v154;
  v151(v82 + v152, v15, v147);
  sub_1DC080808((unint64_t *)&unk_1F03520D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86B8]);
  sub_1DC4015C4();
  swift_bridgeObjectRelease();
  result = (*(uint64_t (**)(char *, uint64_t))(v80 + 8))(v81, v78);
  v84 = v142;
  v85 = *(double *)(v142 + 56);
  if ((~*(_QWORD *)&v85 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_24;
  }
  if (v85 <= -9.22337204e18)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if (v85 >= 9.22337204e18)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v86 = *(double *)(v142 + 64);
  if ((~*(_QWORD *)&v86 & 0x7FF0000000000000) == 0)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  if (v86 <= -9.22337204e18)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  if (v86 >= 9.22337204e18)
  {
LABEL_28:
    __break(1u);
    return result;
  }
  v140 = (uint64_t)v86;
  v141 = (uint64_t)v85;
  (*(void (**)(char *, _QWORD, uint64_t))(v110 + 104))(v112, *MEMORY[0x1E0DAD310], v111);
  sub_1DC3271A8();
  v143 = *(_QWORD *)(v84 + 16);
  v87 = v147;
  sub_1DC0EDD64(v120, v113, &qword_1F0352088, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD2D0]);
  (*(void (**)(char *, uint64_t, uint64_t))(v114 + 16))(v118, a9, v115);
  swift_bridgeObjectRetain();
  v88 = v116;
  sub_1DC403574();
  v89 = swift_allocObject();
  *(_OWORD *)(v89 + 16) = v154;
  v90 = v15;
  v91 = v87;
  v151(v89 + v152, v15, v87);
  sub_1DC080808(&qword_1F03520C8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD6B8], MEMORY[0x1E0DAD6A8]);
  v92 = v119;
  sub_1DC4015C4();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v117 + 8))(v88, v92);
  __swift_project_boxed_opaque_existential_1(v144 + 16, v144[19]);
  v93 = v121;
  sub_1DC400A60();
  v94 = sub_1DC4011D4();
  v95 = (unsigned int *)MEMORY[0x1E0DAD158];
  v96 = v126;
  if ((v94 & 1) == 0)
    v95 = (unsigned int *)MEMORY[0x1E0DAD150];
  v97 = v125;
  v98 = v128;
  (*(void (**)(char *, _QWORD, uint64_t))(v126 + 104))(v125, *v95, v128);
  (*(void (**)(char *, char *, uint64_t))(v96 + 16))(v124, v97, v98);
  v99 = v127;
  sub_1DC40316C();
  (*(void (**)(char *, uint64_t))(v122 + 8))(v93, v123);
  (*(void (**)(char *, uint64_t))(v96 + 8))(v97, v98);
  v100 = swift_allocObject();
  *(_OWORD *)(v100 + 16) = v154;
  v151(v100 + v152, v90, v91);
  sub_1DC080808(&qword_1EDB297C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD148], MEMORY[0x1E0DAD138]);
  v101 = v109;
  sub_1DC4015C4();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v108 + 8))(v99, v101);
  sub_1DC403934();
  sub_1DC080808(&qword_1F03520F8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DADC30], MEMORY[0x1E0DADC28]);
  memset(v155, 0, sizeof(v155));
  sub_1DC4015DC();
  return sub_1DC0926D8((uint64_t)v155, (uint64_t (*)(_QWORD))sub_1DC0D11C4);
}

uint64_t sub_1DC3295C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v13;

  v0 = sub_1DC3FFFEC();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v13 - v5;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v13 - v8;
  v10 = sub_1DC4018DC();
  __swift_allocate_value_buffer(v10, qword_1F0352050);
  __swift_project_value_buffer(v10, (uint64_t)qword_1F0352050);
  sub_1DC3FFFE0();
  v11 = *(void (**)(char *, char *, uint64_t))(v1 + 16);
  v11(v6, v9, v0);
  v11(v3, v9, v0);
  sub_1DC4018D0();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v9, v0);
}

uint64_t type metadata accessor for NoopAudioSessionManager()
{
  return objc_opt_self();
}

uint64_t sub_1DC329704(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1DC089DA4(0, &qword_1F0352088, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD2D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC329760(uint64_t a1)
{
  return sub_1DC32977C(a1, (uint64_t (*)(uint64_t, unint64_t, _QWORD, _QWORD, unint64_t, unint64_t, unint64_t, _QWORD, unint64_t, unint64_t, unint64_t, unint64_t))sub_1DC3272D0);
}

uint64_t sub_1DC329770(uint64_t a1)
{
  return sub_1DC32977C(a1, (uint64_t (*)(uint64_t, unint64_t, _QWORD, _QWORD, unint64_t, unint64_t, unint64_t, _QWORD, unint64_t, unint64_t, unint64_t, unint64_t))sub_1DC326170);
}

uint64_t sub_1DC32977C(uint64_t a1, uint64_t (*a2)(uint64_t, unint64_t, _QWORD, _QWORD, unint64_t, unint64_t, unint64_t, _QWORD, unint64_t, unint64_t, unint64_t, unint64_t))
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v24;
  unint64_t v25;

  v3 = *(_QWORD *)(type metadata accessor for StocksAudioTrack() - 8);
  v24 = (*(_QWORD *)(v3 + 64)
       + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))
       + 7) & 0xFFFFFFFFFFFFFFF8;
  v25 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v4 = (v24 + 15) & 0xFFFFFFFFFFFFFFF8;
  v5 = *(_QWORD *)(sub_1DC4011BC() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + v4 + 8) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64);
  sub_1DC154164();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = (v7 + *(unsigned __int8 *)(v9 + 80) + v6) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v11 = *(_QWORD *)(v9 + 64);
  v12 = *(_QWORD *)(sub_1DC40367C() - 8);
  v13 = (v10 + v11 + *(unsigned __int8 *)(v12 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v14 = (*(_QWORD *)(v12 + 64) + v13 + 7) & 0xFFFFFFFFFFFFFFF8;
  v15 = *(_QWORD *)(sub_1DC403298() - 8);
  v16 = (*(unsigned __int8 *)(v15 + 80) + v14 + 8) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  v17 = (*(_QWORD *)(v15 + 64) + v16 + 3) & 0xFFFFFFFFFFFFFFFCLL;
  sub_1DC089DA4(0, &qword_1F0352088, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD2D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + v17 + 5) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = *(_QWORD *)(v19 + 64);
  v22 = *(unsigned __int8 *)(*(_QWORD *)(sub_1DC403280() - 8) + 80);
  return a2(a1, v2 + v25, *(_QWORD *)(v2 + v24), *(_QWORD *)(v2 + v4), v2 + v6, v2 + v10, v2 + v13, *(_QWORD *)(v2 + v14), v2 + v16, *(unsigned int *)(v2 + v17) | ((unint64_t)*(unsigned __int8 *)(v2 + v17 + 4) << 32), v2 + v20, v2 + ((v21 + v22 + v20) & ~v22));
}

uint64_t sub_1DC329938()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int EnumCaseMultiPayload;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v1 = (int *)type metadata accessor for StocksAudioTrack();
  v2 = *((_QWORD *)v1 - 1);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  v5 = sub_1DC4011BC();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + v4 + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = *(_QWORD *)(v6 + 64);
  sub_1DC154164();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = (v8 + *(unsigned __int8 *)(v10 + 80) + v7) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v12 = (*(_QWORD *)(v10 + 64) + v11 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_1DC089DA4(0, &qword_1F0352088, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD2D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(unsigned __int8 *)(v14 + 80);
  v44 = v15 + v12 + 8;
  v47 = *(_QWORD *)(v14 + 64);
  v48 = sub_1DC403280();
  v45 = *(unsigned __int8 *)(*(_QWORD *)(v48 - 8) + 80);
  v46 = *(_QWORD *)(v48 - 8);
  v16 = v0 + v3;
  swift_unknownObjectRelease();
  v17 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v17(v16 + v1[5], v5);

  v18 = v16 + v1[12];
  sub_1DC401B1C();
  LODWORD(v6) = swift_getEnumCaseMultiPayload();
  swift_release();
  if ((_DWORD)v6 == 1)
  {
    sub_1DC1A3F20();
    v20 = v18 + *(int *)(v19 + 48);
    v21 = sub_1DC4020BC();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 8))(v20, v21);
  }
  v22 = v44 & ~v15;
  swift_unknownObjectRelease();
  swift_release();
  v17(v0 + v7, v5);
  v23 = v0 + v11;
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    swift_unknownObjectRelease();
    v17(v23 + v1[5], v5);

    v33 = v23 + v1[12];
    v34 = swift_getEnumCaseMultiPayload();
    swift_release();
    if (v34 == 1)
    {
      sub_1DC1A3F20();
      v36 = v33 + *(int *)(v35 + 48);
      v37 = sub_1DC4020BC();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 8))(v36, v37);
    }
    sub_1DC27A3D0();
    v39 = v23 + *(int *)(v38 + 64);
    v40 = sub_1DC401C18();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 8))(v39, v40);
  }
  else if (!EnumCaseMultiPayload)
  {
    swift_unknownObjectRelease();
    v17(v23 + v1[5], v5);

    v25 = v23 + v1[12];
    v26 = swift_getEnumCaseMultiPayload();
    swift_release();
    if (v26 == 1)
    {
      sub_1DC1A3F20();
      v28 = v25 + *(int *)(v27 + 48);
      v29 = sub_1DC4020BC();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 8))(v28, v29);
    }
    sub_1DC27A2C4();
    v31 = v23 + *(int *)(v30 + 64);
    v32 = sub_1DC401C18();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 8))(v31, v32);
  }
  swift_release();
  v41 = sub_1DC40328C();
  v42 = *(_QWORD *)(v41 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v42 + 48))(v0 + v22, 1, v41))
    (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v0 + v22, v41);
  (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v0 + ((v47 + v45 + v22) & ~v45), v48);
  return swift_deallocObject();
}

uint64_t sub_1DC329D88(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v3 = *(_QWORD *)(type metadata accessor for StocksAudioTrack() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  v7 = *(_QWORD *)(sub_1DC4011BC() - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + v6 + 8) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v7 + 64);
  sub_1DC154164();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = (v9 + *(unsigned __int8 *)(v11 + 80) + v8) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v13 = (*(_QWORD *)(v11 + 64) + v12 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_1DC089DA4(0, &qword_1F0352088, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD2D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = (*(unsigned __int8 *)(v15 + 80) + v13 + 8) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  v17 = *(_QWORD *)(v15 + 64);
  v18 = *(unsigned __int8 *)(*(_QWORD *)(sub_1DC403280() - 8) + 80);
  return sub_1DC328614(a1, v1 + v4, *(void **)(v1 + v5), *(_QWORD **)(v1 + v6), v1 + v8, v1 + v12, *(_QWORD *)(v1 + v13), v1 + v16, v1 + ((v17 + v18 + v16) & ~v18));
}

uint64_t sub_1DC329EC8()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1DC329EEC()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  uint64_t v12;

  v12 = sub_1DC40367C();
  v1 = *(_QWORD *)(v12 - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);
  v11 = sub_1DC403280();
  v4 = *(_QWORD *)(v11 - 8);
  v5 = (v2 + v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v4 + 64);
  v7 = sub_1DC40328C();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = (v5 + v6 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v1 + 8))(v0 + v2, v12);
  (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v0 + v5, v11);
  (*(void (**)(unint64_t, uint64_t))(v8 + 8))(v0 + v9, v7);
  return swift_deallocObject();
}

uint64_t sub_1DC329FEC(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = *(_QWORD *)(sub_1DC40367C() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v3 + 64);
  v6 = *(_QWORD *)(sub_1DC403280() - 8);
  v7 = (v4 + v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = *(unsigned __int8 *)(*(_QWORD *)(sub_1DC40328C() - 8) + 80);
  return sub_1DC3233F0(a1, *(_QWORD *)(v1 + 16), v1 + v4, v1 + v7, v1 + ((v7 + v8 + v9) & ~v9));
}

uint64_t sub_1DC32A084()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 40);

  return swift_deallocClassInstance();
}

ValueMetadata *type metadata accessor for WatchlistRenameErrorAlert()
{
  return &type metadata for WatchlistRenameErrorAlert;
}

uint64_t sub_1DC32A0D4()
{
  uint64_t ObjCClassFromMetadata;
  id v1;
  uint64_t v2;

  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1DC3FFC80();

  v2 = sub_1DC408A70();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_1DC32A1F8()
{
  return sub_1DC32A0D4();
}

uint64_t sub_1DC32A204()
{
  uint64_t ObjCClassFromMetadata;
  id v1;
  uint64_t v2;

  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v2 = sub_1DC3FFC80();

  return v2;
}

uint64_t sub_1DC32A2BC()
{
  uint64_t ObjCClassFromMetadata;
  id v1;
  uint64_t v2;

  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1DC3FFC80();

  v2 = sub_1DC408A70();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t _s8StocksUI20WatchlistRenameErrorOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1DC32A3F0 + 4 * byte_1DC428985[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1DC32A424 + 4 * asc_1DC428980[v4]))();
}

uint64_t sub_1DC32A424(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC32A42C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC32A434);
  return result;
}

uint64_t sub_1DC32A440(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC32A448);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1DC32A44C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC32A454(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WatchlistRenameError()
{
  return &type metadata for WatchlistRenameError;
}

unint64_t sub_1DC32A474()
{
  unint64_t result;

  result = qword_1F0352108;
  if (!qword_1F0352108)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC428AE8, &type metadata for WatchlistRenameError);
    atomic_store(result, (unint64_t *)&qword_1F0352108);
  }
  return result;
}

uint64_t sub_1DC32A4B8(uint64_t a1, double *a2, char *a3)
{
  uint64_t v3;
  uint64_t v4;
  void *v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE v18[40];
  uint64_t v19;
  uint64_t v20;

  v4 = v3;
  v8 = *(void **)&a3[OBJC_IVAR____TtC8StocksUI28StockSearchSectionHeaderView_watchlistSwitcherButton];
  objc_msgSend(v8, sel_setFrame_, a2[4], a2[5], a2[6], a2[7]);
  v9 = (_QWORD *)(v3 + 16);
  swift_beginAccess();
  v10 = __swift_project_boxed_opaque_existential_1((_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 40));
  v12 = *(_QWORD *)(*v10 + 40);
  v11 = *(_QWORD *)(*v10 + 48);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(*v10 + 16), v12);
  v13 = (void *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)(v11 + 16) + 64))(v12);
  objc_msgSend(a3, sel_setBackgroundColor_, v13);

  sub_1DC32A638(a1 + 16, (uint64_t)v18);
  sub_1DC32A638((uint64_t)v18, (uint64_t)&v19);
  v14 = v20;
  if (v20)
  {
    v15 = v19;
    __swift_project_boxed_opaque_existential_1(v9, *(_QWORD *)(v4 + 40));
    v16 = type metadata accessor for StockSearchSectionHeaderViewLayoutAttributes();
    sub_1DC3541EC(v8, v15, v14, *(void **)((char *)a2 + *(int *)(v16 + 28)));
  }
  swift_allocObject();
  swift_unknownObjectWeakInit();

  return swift_release();
}

uint64_t sub_1DC32A638(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1DC32A67C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1DC32A67C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F0352110)
  {
    v0 = sub_1DC4095A4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1F0352110);
  }
}

uint64_t sub_1DC32A6D0()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

double sub_1DC32A6F4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void (*v10)(void *, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  char v16;
  uint64_t v17;
  char v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  double result;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v27[5];
  _OWORD v28[4];
  char v29;
  __int128 v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  char v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  char v43;
  uint64_t v44[4];
  __int128 v45;
  __int128 v46;
  __int128 v47;

  v6 = v3[5];
  v7 = v3[6];
  __swift_project_boxed_opaque_existential_1(v3 + 2, v6);
  v8 = (void *)sub_1DC405254();
  v9 = *(_QWORD *)(v7 + 8);
  v10 = *(void (**)(void *, uint64_t, uint64_t))(v9 + 8);
  v27[3] = v6;
  v27[4] = v7;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v27);
  v10(v8, v6, v9);

  v11 = a2 + *(int *)(type metadata accessor for QuoteDetailViewLayoutOptions() + 20);
  v12 = *(_QWORD *)(v11 + 8);
  v14 = *(_QWORD *)(v11 + 16);
  v13 = *(_QWORD *)(v11 + 24);
  if ((*(_BYTE *)(v11 + 80) & 1) != 0)
  {
    sub_1DC32D9AC(a1, a2, *(_QWORD *)v11, (uint64_t)boxed_opaque_existential_1, (uint64_t)&unk_1EA44CFA8, (uint64_t)v3, v6, v7, v28, *(double *)(v11 + 8), *(double *)(v11 + 16), *(double *)(v11 + 24));
  }
  else
  {
    v44[0] = *(_QWORD *)v11;
    v44[1] = v12;
    v44[2] = v14;
    v44[3] = v13;
    v15 = *(_OWORD *)(v11 + 48);
    v45 = *(_OWORD *)(v11 + 32);
    v46 = v15;
    v47 = *(_OWORD *)(v11 + 64);
    sub_1DC32C860(a1, a2, v44, (uint64_t)boxed_opaque_existential_1, (uint64_t)&unk_1EA44CFA8, (uint64_t)v3, v6, v7, v28);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
  v16 = v43;
  v17 = v31;
  v18 = v29;
  LOBYTE(v27[0]) = v38;
  v19 = v28[1];
  *(_OWORD *)a3 = v28[0];
  *(_OWORD *)(a3 + 16) = v19;
  v20 = v28[3];
  *(_OWORD *)(a3 + 32) = v28[2];
  *(_OWORD *)(a3 + 48) = v20;
  *(_BYTE *)(a3 + 64) = v18;
  *(_OWORD *)(a3 + 72) = v30;
  *(_QWORD *)(a3 + 88) = v17;
  v21 = v33;
  *(_OWORD *)(a3 + 96) = v32;
  *(_OWORD *)(a3 + 112) = v21;
  v22 = v35;
  *(_OWORD *)(a3 + 128) = v34;
  *(_OWORD *)(a3 + 144) = v22;
  v23 = v37;
  *(_OWORD *)(a3 + 160) = v36;
  *(_OWORD *)(a3 + 176) = v23;
  *(_BYTE *)(a3 + 192) = v27[0];
  *(_OWORD *)(a3 + 200) = v39;
  *(_OWORD *)(a3 + 216) = v40;
  *(_OWORD *)(a3 + 232) = v41;
  result = *(double *)&v42;
  *(_OWORD *)(a3 + 248) = v42;
  *(_BYTE *)(a3 + 264) = v16;
  return result;
}

uint64_t sub_1DC32A8C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, CGFloat a4@<D0>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  __int128 v23;
  char v24;
  CGFloat v25;
  CGFloat v26;
  CGFloat v27;
  CGFloat v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  double v32;
  double v33;
  double v34;
  CGFloat v35;
  _QWORD *v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t inited;
  void *v40;
  uint64_t v41;
  id v42;
  void *v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t (*v48)(uint64_t, uint64_t);
  id v49;
  uint64_t v50;
  id v51;
  void *v52;
  void *v53;
  id v54;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  double v59;
  void *v60;
  double v61;
  double v62;
  CGFloat v63;
  CGFloat v64;
  CGFloat v65;
  CGFloat v66;
  CGFloat v67;
  double v68;
  double v69;
  double v70;
  double v71;
  double v72;
  double v73;
  double v74;
  double v75;
  double v76;
  double v77;
  double v78;
  double v79;
  double v80;
  double v81;
  double v82;
  uint64_t v83;
  __int128 *v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  CGRect v89;
  CGRect v90;
  CGRect v91;
  CGRect v92;
  CGRect v93;
  CGRect v94;
  CGRect v95;

  v5 = v4;
  v10 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1DC089DA4(0, &qword_1EDB28BA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAE188], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v85 - v12;
  sub_1DC089DA4(0, (unint64_t *)&unk_1EDB28A70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], v10);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v85 - v15;
  v17 = type metadata accessor for QuoteDetailViewModel();
  sub_1DC32EEFC(a1 + *(int *)(v17 + 20), (uint64_t)v13);
  v18 = sub_1DC400370();
  v19 = *(_QWORD *)(v18 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v13, 1, v18) == 1)
  {
    sub_1DC0B091C((uint64_t)v13, &qword_1EDB28BA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAE188]);
    v20 = sub_1DC3FFDD0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v16, 1, 1, v20);
LABEL_4:
    result = sub_1DC0B091C((uint64_t)v16, (unint64_t *)&unk_1EDB28A70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    v23 = 0uLL;
    v24 = 1;
    v25 = 0.0;
    v26 = 0.0;
    v27 = 0.0;
    v28 = 0.0;
    v29 = 0uLL;
    v30 = 0uLL;
    v31 = 0uLL;
    goto LABEL_12;
  }
  sub_1DC4002C8();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v13, v18);
  v21 = sub_1DC3FFDD0();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 48))(v16, 1, v21) == 1)
    goto LABEL_4;
  sub_1DC0B091C((uint64_t)v16, (unint64_t *)&unk_1EDB28A70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  sub_1DC4052F0();
  v33 = v32;
  sub_1DC4051F4();
  v35 = v34;
  sub_1DC4051F4();
  v36 = __swift_project_boxed_opaque_existential_1((_QWORD *)(v5 + 16), *(_QWORD *)(v5 + 40));
  v37 = (_QWORD *)(a1 + *(int *)(v17 + 24));
  *(_QWORD *)&v86 = *v37;
  v38 = (_QWORD *)*v36;
  sub_1DC089DA4(0, (unint64_t *)&qword_1EDB40090, (uint64_t (*)(uint64_t))sub_1DC112C08, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DC40C740;
  v40 = (void *)*MEMORY[0x1E0DC1138];
  *(_QWORD *)(inited + 32) = *MEMORY[0x1E0DC1138];
  v41 = sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FB00);
  swift_bridgeObjectRetain();
  v42 = v40;
  *(_QWORD *)(inited + 40) = sub_1DC4092F8();
  v43 = (void *)*MEMORY[0x1E0DC1140];
  *(_QWORD *)(inited + 64) = v41;
  *(_QWORD *)(inited + 72) = v43;
  v44 = v38 + 2;
  v45 = v38[5];
  v46 = v38[6];
  __swift_project_boxed_opaque_existential_1(v44, v45);
  v47 = *(_QWORD *)(v46 + 16);
  v48 = *(uint64_t (**)(uint64_t, uint64_t))(v47 + 104);
  v49 = v43;
  v50 = v48(v45, v47);
  *(_QWORD *)(inited + 104) = sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FB30);
  *(_QWORD *)(inited + 80) = v50;
  sub_1DC0FA3C4(inited);
  v51 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  v52 = (void *)sub_1DC408A1C();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1DC0FB14C();
  v53 = (void *)sub_1DC408980();
  swift_bridgeObjectRelease();
  v54 = objc_msgSend(v51, sel_initWithString_attributes_, v52, v53);

  objc_msgSend(v54, sel_boundingRectWithSize_options_context_, 1, 0, v33, 1.79769313e308);
  x = v89.origin.x;
  y = v89.origin.y;
  width = v89.size.width;
  height = v89.size.height;
  v59 = CGRectGetWidth(v89);
  v60 = (void *)v37[2];
  v61 = 0.0;
  v62 = 0.0;
  if (v60)
    objc_msgSend(v60, sel_size, 0.0);
  v63 = v59 + v62;
  v90.origin.x = x;
  v90.origin.y = y;
  v90.size.width = width;
  v90.size.height = height;
  v91.size.height = CGRectGetHeight(v90);
  v91.origin.y = 0.0;
  v91.origin.x = v35;
  v91.size.width = v63;
  v92 = CGRectIntegral(v91);
  v64 = v92.origin.x;
  v65 = v92.origin.y;
  v66 = v92.size.width;
  v67 = v92.size.height;
  sub_1DC405230();
  if (v68 > 990.0)
  {
    sub_1DC405224();
    v70 = v69;
    sub_1DC4051F4();
    v61 = v70 - v71;
  }
  sub_1DC405230();
  v73 = v72;
  sub_1DC405230();
  v75 = v74;
  if (v73 > 990.0)
  {
    sub_1DC405224();
    v77 = v75 - v76;
    sub_1DC405224();
    v79 = v77 - v78;
    sub_1DC4051F4();
    v81 = v80;
    sub_1DC4051F4();
    v75 = v79 + v81 + v82;
  }
  v93.origin.x = v64;
  v93.origin.y = v65;
  v93.size.width = v66;
  v93.size.height = v67;
  v94.size.height = CGRectGetHeight(v93);
  v94.origin.x = v61;
  v94.origin.y = a4;
  v94.size.width = v75;
  v95 = CGRectIntegral(v94);
  v25 = v95.origin.x;
  v26 = v95.origin.y;
  v27 = v95.size.width;
  v28 = v95.size.height;
  MEMORY[0x1E0C80A78](v83);
  *((CGFloat *)&v85 - 4) = v64;
  *((CGFloat *)&v85 - 3) = v65;
  *((CGFloat *)&v85 - 2) = v66;
  *((CGFloat *)&v85 - 1) = v67;
  type metadata accessor for CGRect(0);
  sub_1DC4051C4();

  v86 = v87;
  v85 = v88;
  result = type metadata accessor for QuoteDetailViewLayoutOptions();
  v29 = v85;
  v23 = v86;
  v24 = 0;
  v84 = (__int128 *)(a2 + *(int *)(result + 28));
  v30 = *v84;
  v31 = v84[1];
LABEL_12:
  *(_OWORD *)a3 = v23;
  *(_OWORD *)(a3 + 16) = v29;
  *(CGFloat *)(a3 + 32) = v25;
  *(CGFloat *)(a3 + 40) = v26;
  *(CGFloat *)(a3 + 48) = v27;
  *(CGFloat *)(a3 + 56) = v28;
  *(_OWORD *)(a3 + 64) = v30;
  *(_OWORD *)(a3 + 80) = v31;
  *(_BYTE *)(a3 + 96) = v24;
  return result;
}

void sub_1DC32AEBC(CGRect *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  char *v6;
  double v7;
  CGFloat v8;
  double v9;
  CGFloat v10;
  double v11;
  CGFloat v12;
  double v13;
  CGFloat v14;
  uint64_t v15;
  CGRect v16;

  v2 = sub_1DC404210();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v3 + 104))(v6, *MEMORY[0x1E0DB6B40], v2, v4);
  sub_1DC404204();
  v8 = v7;
  v10 = v9;
  v12 = v11;
  v14 = v13;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  v16.origin.x = v8;
  v16.origin.y = v10;
  v16.size.width = v12;
  v16.size.height = v14;
  *a1 = CGRectIntegral(v16);
}

uint64_t sub_1DC32AFB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X4>, int a3@<W5>, uint64_t a4@<X8>, double a5@<D0>, double a6@<D1>, double a7@<D2>, double a8@<D3>, double a9@<D4>, double a10@<D5>, double a11@<D6>, double a12@<D7>, double a13, uint64_t a14, double a15, double a16, uint64_t a17, double a18)
{
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t result;
  double v36;
  double v37;
  double v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  double v50;
  double v51;
  double v52;
  double v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  char v57;
  _OWORD v58[5];
  uint64_t v59;
  uint64_t v60;
  unsigned __int8 v61;

  v56 = a3;
  v53 = a12;
  v52 = a10;
  v51 = a9;
  v50 = a8;
  v55 = a17;
  v54 = a14;
  sub_1DC2254EC(a2, (uint64_t)v58);
  v49 = v58[0];
  v48 = v58[1];
  v47 = v58[2];
  v46 = v58[3];
  v45 = v58[4];
  v44 = v59;
  v43 = v60;
  v42 = v61;
  v24 = sub_1DC400118();
  v25 = *(_QWORD *)(v24 - 8);
  MEMORY[0x1E0C80A78](v24);
  v27 = (char *)&v41 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  v28 = swift_bridgeObjectRetain();
  v29 = sub_1DC32EFBC(v28, a1);
  swift_bridgeObjectRelease();
  swift_release();
  swift_retain();
  v30 = swift_bridgeObjectRetain();
  v31 = sub_1DC32EFBC(v30, a1);
  swift_bridgeObjectRelease();
  swift_release();
  swift_retain();
  v32 = swift_bridgeObjectRetain();
  v33 = sub_1DC32E7C0(v32, a1);
  swift_bridgeObjectRelease();
  swift_release();
  sub_1DC4000DC();
  v34 = sub_1DC40001C();
  result = (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v27, v24);
  v36 = -a16;
  v57 = v42;
  if ((v34 & 1) != 0)
    v36 = a13 - a11 + a18;
  *(double *)a4 = a5;
  *(double *)(a4 + 8) = a6;
  v37 = 0.0;
  if ((v34 & 1) == 0)
    v37 = a15;
  v38 = v50;
  *(double *)(a4 + 16) = a7;
  *(double *)(a4 + 24) = v38;
  *(double *)(a4 + 32) = v51;
  *(double *)(a4 + 40) = v52;
  *(double *)(a4 + 48) = a11;
  *(double *)(a4 + 56) = v53;
  *(_BYTE *)(a4 + 64) = 1;
  *(_QWORD *)(a4 + 72) = v29;
  *(_QWORD *)(a4 + 80) = v31;
  *(_QWORD *)(a4 + 88) = v33;
  *(_OWORD *)(a4 + 96) = v49;
  *(_OWORD *)(a4 + 112) = v48;
  *(_OWORD *)(a4 + 128) = v47;
  *(_OWORD *)(a4 + 144) = v46;
  *(_OWORD *)(a4 + 160) = v45;
  v39 = v43;
  *(_QWORD *)(a4 + 176) = v44;
  *(_QWORD *)(a4 + 184) = v39;
  *(_BYTE *)(a4 + 192) = v57;
  v40 = v54;
  *(double *)(a4 + 200) = a13;
  *(_QWORD *)(a4 + 208) = v40;
  *(double *)(a4 + 216) = a15;
  *(double *)(a4 + 224) = a16;
  *(_QWORD *)(a4 + 232) = v55;
  *(double *)(a4 + 240) = a18;
  *(double *)(a4 + 248) = v36;
  *(double *)(a4 + 256) = v37;
  *(_BYTE *)(a4 + 264) = v56;
  return result;
}

uint64_t sub_1DC32B2E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X4>, int a3@<W5>, uint64_t a4@<X8>, double a5@<D0>, double a6@<D1>, double a7@<D2>, double a8@<D3>, double a9@<D4>, double a10@<D5>, double a11@<D6>, double a12@<D7>, uint64_t a13, uint64_t a14, double a15, double a16, uint64_t a17, uint64_t a18)
{
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t result;
  double v37;
  double v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  double v50;
  double v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  char v57;
  _OWORD v58[5];
  uint64_t v59;
  uint64_t v60;
  unsigned __int8 v61;

  v56 = a3;
  v51 = a12;
  v50 = a11;
  v55 = a18;
  v54 = a17;
  v53 = a14;
  v52 = a13;
  sub_1DC2254EC(a2, (uint64_t)v58);
  v49 = v58[0];
  v48 = v58[1];
  v47 = v58[2];
  v46 = v58[3];
  v45 = v58[4];
  v44 = v59;
  v43 = v60;
  v42 = v61;
  v26 = sub_1DC400118();
  v27 = *(_QWORD *)(v26 - 8);
  MEMORY[0x1E0C80A78](v26);
  v29 = (char *)&v41 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  v30 = swift_bridgeObjectRetain();
  v31 = sub_1DC32EFBC(v30, a1);
  swift_bridgeObjectRelease();
  swift_release();
  swift_retain();
  v32 = swift_bridgeObjectRetain();
  v33 = sub_1DC32EFBC(v32, a1);
  swift_bridgeObjectRelease();
  swift_release();
  swift_retain();
  v34 = swift_bridgeObjectRetain();
  v35 = sub_1DC32E7C0(v34, a1);
  swift_bridgeObjectRelease();
  swift_release();
  sub_1DC4000DC();
  LOBYTE(a1) = sub_1DC40001C();
  result = (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v29, v26);
  v37 = -a16;
  v57 = v42;
  v38 = 0.0;
  if ((a1 & 1) != 0)
    v37 = 0.0;
  else
    v38 = a15;
  *(double *)a4 = a5;
  *(double *)(a4 + 8) = a6;
  *(double *)(a4 + 16) = a7;
  *(double *)(a4 + 24) = a8;
  *(double *)(a4 + 32) = a9;
  *(double *)(a4 + 40) = a10;
  *(double *)(a4 + 48) = v50;
  *(double *)(a4 + 56) = v51;
  *(_BYTE *)(a4 + 64) = 0;
  *(_QWORD *)(a4 + 72) = v31;
  *(_QWORD *)(a4 + 80) = v33;
  *(_QWORD *)(a4 + 88) = v35;
  *(_OWORD *)(a4 + 96) = v49;
  *(_OWORD *)(a4 + 112) = v48;
  *(_OWORD *)(a4 + 128) = v47;
  *(_OWORD *)(a4 + 144) = v46;
  *(_OWORD *)(a4 + 160) = v45;
  v39 = v43;
  *(_QWORD *)(a4 + 176) = v44;
  *(_QWORD *)(a4 + 184) = v39;
  *(_BYTE *)(a4 + 192) = v57;
  *(_QWORD *)(a4 + 200) = v52;
  *(_QWORD *)(a4 + 208) = v53;
  *(double *)(a4 + 216) = a15;
  v40 = v54;
  *(double *)(a4 + 224) = a16;
  *(_QWORD *)(a4 + 232) = v40;
  *(_QWORD *)(a4 + 240) = v55;
  *(double *)(a4 + 248) = v37;
  *(double *)(a4 + 256) = v38;
  *(_BYTE *)(a4 + 264) = v56;
  return result;
}

uint64_t sub_1DC32B608()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for QuoteDetailViewLayoutAttributesFactory()
{
  return objc_opt_self();
}

size_t sub_1DC32B64C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  _QWORD *v9;
  size_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v2 = type metadata accessor for ForYouSection();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(_QWORD *)(*(_QWORD *)(a1 + 16) + 16);
  if (!v5)
    return MEMORY[0x1E0DEE9D8];
  sub_1DC089DA4(0, &qword_1EDB3FE28, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF1A0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v6 = *(_QWORD *)(sub_1DC4011BC() - 8);
  v7 = *(_QWORD *)(v6 + 72);
  v8 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v9 = (_QWORD *)swift_allocObject();
  result = _swift_stdlib_malloc_size(v9);
  if (v7)
  {
    if (result - v8 != 0x8000000000000000 || v7 != -1)
    {
      v9[2] = v5;
      v9[3] = 2 * ((uint64_t)(result - v8) / v7);
      sub_1DC32F2E8(a1, (uint64_t)v4);
      v12 = sub_1DC32BB30(&v14, (uint64_t)v9 + v8, v5);
      swift_release();
      if (v12 == v5)
        return (size_t)v9;
      __break(1u);
      return MEMORY[0x1E0DEE9D8];
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

_QWORD *sub_1DC32B788(unint64_t a1)
{
  return sub_1DC32B7A0(a1, (void (*)(_QWORD *, uint64_t, unint64_t))sub_1DC19070C);
}

_QWORD *sub_1DC32B794(unint64_t a1)
{
  return sub_1DC32B7A0(a1, (void (*)(_QWORD *, uint64_t, unint64_t))sub_1DC190948);
}

_QWORD *sub_1DC32B7A0(unint64_t a1, void (*a2)(_QWORD *, uint64_t, unint64_t))
{
  uint64_t v4;
  _QWORD *v5;
  int64_t v6;
  uint64_t v7;
  void (*v8)(_QWORD *, uint64_t, unint64_t);

  if (a1 >> 62)
    goto LABEL_10;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v4)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  while (1)
  {
    if (v4 <= 0)
    {
      v5 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    else
    {
      sub_1DC083594(0, (unint64_t *)&qword_1EDB400D0, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v5 = (_QWORD *)swift_allocObject();
      v6 = _swift_stdlib_malloc_size(v5);
      v7 = v6 - 32;
      if (v6 < 32)
        v7 = v6 - 25;
      v5[2] = v4;
      v5[3] = (2 * (v7 >> 3)) | 1;
    }
    swift_bridgeObjectRetain();
    a2(v5 + 4, v4, a1);
    a2 = v8;
    swift_bridgeObjectRelease();
    if (a2 == (void (*)(_QWORD *, uint64_t, unint64_t))v4)
      break;
    __break(1u);
LABEL_10:
    swift_bridgeObjectRetain();
    v4 = sub_1DC409850();
    swift_bridgeObjectRelease();
    if (!v4)
      return (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  return v5;
}

_QWORD *sub_1DC32B8B8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  sub_1DC083594(0, (unint64_t *)&qword_1EDB40040, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v3 = (_QWORD *)swift_allocObject();
  v4 = _swift_stdlib_malloc_size(v3);
  v5 = v4 - 32;
  if (v4 < 32)
    v5 = v4 - 17;
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 4);
  v6 = sub_1DC32BD34((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_1DC2CAD14();
  if (v6 != v1)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  return v3;
}

uint64_t sub_1DC32B9B0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return sub_1DC0D0304(a1, a2, a3, a4, &qword_1EDB3FE28, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF1A0]);
}

uint64_t sub_1DC32B9C4(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4;
  int64_t v5;
  _QWORD *v8;
  size_t v9;
  void *v10;
  uint64_t result;

  v4 = a4 >> 1;
  v5 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v5)
      return MEMORY[0x1E0DEE9D8];
    if (v5 <= 0)
    {
      v8 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      if (v4 != a3)
      {
LABEL_5:
        if (v5 < 0)
          goto LABEL_17;
        v10 = v8 + 4;
        if (a2 + a3 < (unint64_t)v8 + v5 + 32 && (unint64_t)v10 < a2 + a3 + v5)
          goto LABEL_17;
        memcpy(v10, (const void *)(a2 + a3), v5);
        return (uint64_t)v8;
      }
    }
    else
    {
      sub_1DC083594(0, &qword_1EDB3FFE8, (uint64_t)&type metadata for QuoteDetailViewComponent, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v8 = (_QWORD *)swift_allocObject();
      v9 = _swift_stdlib_malloc_size(v8);
      v8[2] = v5;
      v8[3] = 2 * v9 - 64;
      if (v4 != a3)
        goto LABEL_5;
    }
    __break(1u);
  }
  __break(1u);
LABEL_17:
  result = sub_1DC40988C();
  __break(1u);
  return result;
}

uint64_t sub_1DC32BB30(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;

  v23 = a3;
  sub_1DC089DA4(0, &qword_1EDB28E20, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF1A0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v22 - v7;
  v9 = sub_1DC4011BC();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = *(_QWORD *)(v3 + 16);
  *(_QWORD *)(v13 + 24) = 0;
  sub_1DC2020E4();
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = sub_1DC2020DC;
  *(_QWORD *)(v14 + 24) = v13;
  swift_bridgeObjectRetain();
  result = sub_1DC32F2AC(v3);
  v16 = 0;
  if (!a2 || (v17 = v23) == 0)
  {
LABEL_12:
    *a1 = v14;
    return v16;
  }
  if ((v23 & 0x8000000000000000) == 0)
  {
    v22 = a1;
    (*(void (**)(uint64_t))(v14 + 16))(result);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    {
      v16 = 0;
LABEL_9:
      sub_1DC0B091C((uint64_t)v8, &qword_1EDB28E20, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF1A0]);
    }
    else
    {
      v16 = 0;
      v18 = v17;
      v19 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
      v20 = v18 - 1;
      while (1)
      {
        v19(v12, v8, v9);
        v21 = ((uint64_t (*)(uint64_t, char *, uint64_t))v19)(a2, v12, v9);
        if (v20 == v16)
          break;
        a2 += *(_QWORD *)(v10 + 72);
        (*(void (**)(uint64_t))(v14 + 16))(v21);
        ++v16;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
          goto LABEL_9;
      }
      v16 = v23;
    }
    a1 = v22;
    goto LABEL_12;
  }
  __break(1u);
  return result;
}

uint64_t sub_1DC32BD34(uint64_t result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  _QWORD *v20;
  uint64_t v21;

  v5 = (_QWORD *)result;
  v6 = a4 + 56;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 56);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = (_QWORD *)(*(_QWORD *)(a4 + 48) + 16 * v16);
    v21 = v20[1];
    *v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    result = swift_bridgeObjectRetain();
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

unint64_t sub_1DC32BF30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, double a8, double a9, double a10)
{
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  uint64_t v24;
  double v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t inited;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t (*v37)(uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  id v40;
  void *v41;
  void *v42;
  id v43;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  double v48;
  double v49;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v51;
  unint64_t result;
  uint64_t v53;
  void *v54;
  id v55;
  double v56;
  id v57;
  char v58;
  char v59;
  char v60;
  double v61;
  _QWORD *v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  uint64_t (*v69)(uint64_t, uint64_t);
  uint64_t v70;
  id v71;
  void *v72;
  void *v73;
  id v74;
  CGFloat v75;
  CGFloat v76;
  CGFloat v77;
  CGFloat v78;
  double v79;
  double v80;
  _QWORD *v81;
  uint64_t v82;
  id v83;
  _QWORD *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t (*v88)(uint64_t, uint64_t);
  id v89;
  uint64_t v90;
  id v91;
  void *v92;
  void *v93;
  id v94;
  CGFloat v95;
  CGFloat v96;
  CGFloat v97;
  CGFloat v98;
  double v99;
  double v100;
  double v101;
  char v102;
  _QWORD *v103;
  uint64_t v104;
  uint64_t v105;
  double v106;
  double v107;
  uint64_t v108;
  uint64_t v109;
  void *v110;
  double v111;
  id v113;
  id v114;
  double v115;
  void *v116;
  uint64_t v117;
  void *v118;
  unint64_t v119;
  id v120;
  id v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  unsigned __int8 v126;
  uint64_t v127;
  _QWORD v128[3];
  uint64_t v129;
  _UNKNOWN **v130;
  CGRect v131;
  CGRect v132;
  CGRect v133;
  CGRect v134;
  CGRect v135;
  CGRect v136;

  v129 = type metadata accessor for QuoteDetailViewStyler();
  v130 = &off_1EA46A710;
  v128[0] = a4;
  swift_retain();
  sub_1DC4051F4();
  sub_1DC4051F4();
  sub_1DC4052F0();
  v20 = v19;
  sub_1DC408F74();
  v22 = v21;
  sub_1DC4052F0();
  v24 = *(_QWORD *)(a5 + 16);
  if (!v24)
  {
    sub_1DC1A4BA0(MEMORY[0x1E0DEE9D8]);
LABEL_17:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v128);
    return a6;
  }
  v25 = v23;
  v104 = a2;
  v105 = a3;
  v106 = a8;
  v107 = a9;
  v108 = a7;
  v109 = a6;
  v111 = (v20 - v22 - a9) / (double)a6;
  v123 = sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FB00);
  v118 = (void *)*MEMORY[0x1E0DC1138];
  v116 = (void *)*MEMORY[0x1E0DC1140];
  swift_bridgeObjectRetain();
  v26 = 0;
  v27 = MEMORY[0x1E0DEE9E0];
  v124 = a1;
  v125 = a5;
  v122 = v24;
  do
  {
    v127 = v27;
    v28 = a5 + v26++;
    v29 = *(unsigned __int8 *)(v28 + 32);
    v126 = *(_BYTE *)(v28 + 32);
    v30 = __swift_project_boxed_opaque_existential_1(v128, v129);
    sub_1DC1FD438(v29, 0);
    v31 = (_QWORD *)*v30;
    sub_1DC089DA4(0, (unint64_t *)&qword_1EDB40090, (uint64_t (*)(uint64_t))sub_1DC112C08, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1DC40C740;
    *(_QWORD *)(inited + 32) = v118;
    swift_bridgeObjectRetain();
    v121 = v118;
    *(_QWORD *)(inited + 40) = sub_1DC409304();
    *(_QWORD *)(inited + 64) = v123;
    *(_QWORD *)(inited + 72) = v116;
    v33 = v31 + 2;
    v34 = v31[5];
    v35 = v31[6];
    __swift_project_boxed_opaque_existential_1(v33, v34);
    v36 = *(_QWORD *)(v35 + 16);
    v37 = *(uint64_t (**)(uint64_t, uint64_t))(v36 + 48);
    v120 = v116;
    v38 = v37(v34, v36);
    v39 = sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FB30);
    *(_QWORD *)(inited + 104) = v39;
    *(_QWORD *)(inited + 80) = v38;
    sub_1DC0FA3C4(inited);
    v40 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
    v41 = (void *)sub_1DC408A1C();
    swift_bridgeObjectRelease();
    type metadata accessor for Key(0);
    sub_1DC0FB14C();
    v42 = (void *)sub_1DC408980();
    swift_bridgeObjectRelease();
    v43 = objc_msgSend(v40, sel_initWithString_attributes_, v41, v42);
    swift_bridgeObjectRelease();

    objc_msgSend(v43, sel_boundingRectWithSize_options_context_, 0, 0, v25, 1.79769313e308);
    x = v131.origin.x;
    y = v131.origin.y;
    width = v131.size.width;
    height = v131.size.height;
    v48 = ceil(CGRectGetWidth(v131));
    v132.origin.x = x;
    v132.origin.y = y;
    v132.size.width = width;
    v132.size.height = height;
    v49 = ceil(CGRectGetHeight(v132));
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    a5 = v125;
    sub_1DC35A51C((uint64_t)v43, v126, isUniquelyReferenced_nonNull_native, v48, v49);
    v27 = v127;
    swift_bridgeObjectRelease();
  }
  while (v122 != v26);
  v117 = v39;
  swift_bridgeObjectRelease();
  v51 = sub_1DC1A4BA0(MEMORY[0x1E0DEE9D8]);
  result = swift_bridgeObjectRetain();
  v53 = 0;
  v115 = v25;
  v55 = v120;
  v54 = v121;
  while (1)
  {
    if (!*(_QWORD *)(v27 + 16))
    {
      __break(1u);
LABEL_19:
      __break(1u);
      goto LABEL_20;
    }
    v59 = *(_BYTE *)(a5 + v53 + 32);
    result = sub_1DC1A36AC(v59);
    if ((v60 & 1) == 0)
      goto LABEL_19;
    v119 = v51;
    v61 = v111 - *(double *)(*(_QWORD *)(v27 + 56) + 24 * result) - a10;
    sub_1DC1FC8BC(v59);
    v62 = (_QWORD *)*__swift_project_boxed_opaque_existential_1(v128, v129);
    v63 = swift_initStackObject();
    *(_OWORD *)(v63 + 16) = xmmword_1DC40C740;
    *(_QWORD *)(v63 + 32) = v54;
    swift_bridgeObjectRetain();
    v114 = v54;
    *(_QWORD *)(v63 + 40) = sub_1DC4092F8();
    *(_QWORD *)(v63 + 64) = v123;
    *(_QWORD *)(v63 + 72) = v55;
    v64 = v62 + 2;
    v66 = v62[5];
    v65 = v62[6];
    __swift_project_boxed_opaque_existential_1(v64, v66);
    v67 = *(_QWORD *)(v65 + 16);
    v68 = v55;
    v69 = *(uint64_t (**)(uint64_t, uint64_t))(v67 + 200);
    v113 = v68;
    v70 = v69(v66, v67);
    *(_QWORD *)(v63 + 104) = v117;
    *(_QWORD *)(v63 + 80) = v70;
    sub_1DC0FA3C4(v63);
    v71 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
    v72 = (void *)sub_1DC408A1C();
    swift_bridgeObjectRelease();
    v73 = (void *)sub_1DC408980();
    swift_bridgeObjectRelease();
    v74 = objc_msgSend(v71, sel_initWithString_attributes_, v72, v73);

    objc_msgSend(v74, sel_boundingRectWithSize_options_context_, 0, 0, v25, 1.79769313e308);
    v75 = v133.origin.x;
    v76 = v133.origin.y;
    v77 = v133.size.width;
    v78 = v133.size.height;
    v79 = ceil(CGRectGetWidth(v133));
    v134.origin.x = v75;
    v134.origin.y = v76;
    v134.size.width = v77;
    v134.size.height = v78;
    v80 = CGRectGetHeight(v134);
    if (v79 >= v61)
      break;
    v56 = v80;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v57 = v74;
    v58 = swift_isUniquelyReferenced_nonNull_native();
    sub_1DC35A51C((uint64_t)v57, v59, v58, v79, ceil(v56));
    v51 = v119;
LABEL_6:

    result = swift_bridgeObjectRelease();
    a5 = v125;
    ++v53;
    v54 = v121;
    v27 = v127;
    v25 = v115;
    v55 = v120;
    if (v122 == v53)
    {
      swift_bridgeObjectRelease();
      a6 = v109;
      goto LABEL_17;
    }
  }
  v110 = v74;
  v81 = (_QWORD *)*__swift_project_boxed_opaque_existential_1(v128, v129);
  v82 = swift_initStackObject();
  *(_OWORD *)(v82 + 16) = xmmword_1DC40C740;
  *(_QWORD *)(v82 + 32) = v114;
  swift_bridgeObjectRetain();
  v83 = v114;
  *(_QWORD *)(v82 + 40) = sub_1DC4092F8();
  *(_QWORD *)(v82 + 64) = v123;
  *(_QWORD *)(v82 + 72) = v113;
  v84 = v81 + 2;
  v85 = v81[5];
  v86 = v81[6];
  __swift_project_boxed_opaque_existential_1(v84, v85);
  v87 = *(_QWORD *)(v86 + 16);
  v88 = *(uint64_t (**)(uint64_t, uint64_t))(v87 + 200);
  v89 = v113;
  v90 = v88(v85, v87);
  *(_QWORD *)(v82 + 104) = v117;
  *(_QWORD *)(v82 + 80) = v90;
  sub_1DC0FA3C4(v82);
  v91 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  v92 = (void *)sub_1DC408A1C();
  swift_bridgeObjectRelease();
  v93 = (void *)sub_1DC408980();
  swift_bridgeObjectRelease();
  v94 = objc_msgSend(v91, sel_initWithString_attributes_, v92, v93);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  objc_msgSend(v94, sel_boundingRectWithSize_options_context_, 0, 0, v115, 1.79769313e308);
  v95 = v135.origin.x;
  v96 = v135.origin.y;
  v97 = v135.size.width;
  v98 = v135.size.height;
  v99 = ceil(CGRectGetWidth(v135));
  v136.origin.x = v95;
  v136.origin.y = v96;
  v136.size.width = v97;
  v136.size.height = v98;
  v100 = CGRectGetHeight(v136);
  if (v99 < v61 || v109 == 1)
  {
    v101 = ceil(v100);
    v57 = v94;
    v102 = swift_isUniquelyReferenced_nonNull_native();
    sub_1DC35A51C((uint64_t)v57, v59, v102, v99, v101);
    v51 = v119;

    goto LABEL_6;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if (!__OFSUB__(v109, 1))
  {
    v103 = __swift_project_boxed_opaque_existential_1(v128, v129);
    a6 = sub_1DC32BF30(v124, v104, v105, *v103, v125, v109 - 1, v108, v106, v107, a10);

    goto LABEL_17;
  }
LABEL_20:
  __break(1u);
  return result;
}

void sub_1DC32C860(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>)
{
  uint64_t *boxed_opaque_existential_1;
  double v16;
  int64_t v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(uint64_t, uint64_t);
  uint64_t v31;
  id v32;
  void *v33;
  void *v34;
  id v35;
  CGFloat v36;
  CGFloat v37;
  CGFloat v38;
  CGFloat v39;
  double v40;
  double v41;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  _QWORD *v48;
  uint64_t v49;
  id v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t (*v55)(uint64_t, uint64_t);
  id v56;
  uint64_t v57;
  id v58;
  void *v59;
  void *v60;
  id v61;
  CGFloat v62;
  CGFloat v63;
  CGFloat v64;
  CGFloat v65;
  double v66;
  double v67;
  char v68;
  double v69;
  unsigned __int8 *v70;
  int64_t v71;
  unsigned __int8 v72;
  unsigned __int8 v73;
  unint64_t v74;
  char v75;
  double v76;
  unint64_t v77;
  char v78;
  uint64_t v79;
  int64_t v80;
  uint64_t v81;
  unsigned __int8 v82;
  unsigned __int8 v83;
  unint64_t v84;
  char v85;
  double v86;
  unint64_t v87;
  char v88;
  double v89;
  double v90;
  uint64_t v91;
  double v92;
  double v93;
  double v94;
  double v95;
  double v96;
  double v97;
  double v98;
  double v99;
  double v100;
  double v101;
  double v102;
  double v103;
  double v104;
  double v105;
  double v106;
  double v107;
  double v108;
  uint64_t v109;
  double v110;
  double v111;
  uint64_t v112;
  unint64_t v113;
  double v114;
  double v115;
  CGFloat *v116;
  uint64_t v117;
  uint64_t v118;
  double v119;
  unsigned __int8 v120;
  double v121;
  double v122;
  double v123;
  CGFloat v124;
  CGFloat v125;
  CGFloat v126;
  CGFloat v127;
  unint64_t v128;
  char v129;
  uint64_t v130;
  double v131;
  CGFloat v132;
  id v133;
  CGFloat MinX;
  uint64_t v135;
  id v136;
  char v137;
  unint64_t v138;
  char v139;
  uint64_t v140;
  double v141;
  double v142;
  id v143;
  CGFloat v144;
  id v145;
  char v146;
  unint64_t v147;
  char v148;
  double MinY;
  void *v150;
  double v151;
  double v152;
  void *v153;
  double v154;
  double v155;
  double v156;
  unint64_t v157;
  char v158;
  double v159;
  void *v160;
  double v161;
  double v162;
  double v163;
  double v164;
  CGFloat v165;
  CGFloat v166;
  CGFloat v167;
  CGFloat v168;
  _QWORD *v169;
  unint64_t v170;
  unint64_t v171;
  unint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  unint64_t v177;
  int64_t v178;
  int64_t v179;
  double v180;
  unint64_t v181;
  unint64_t v182;
  double MaxY;
  int64_t v184;
  unint64_t v185;
  int64_t v186;
  double v187;
  double v188;
  double v189;
  double v190;
  double v191;
  double v192;
  double v193;
  double v194;
  double v195;
  double v196;
  double v197;
  double v198;
  double v199;
  double v200;
  double v201;
  double v202;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  uint64_t v207;
  double v208;
  CGFloat v209;
  CGFloat v210;
  CGFloat v211;
  CGFloat v212;
  CGFloat v213;
  uint64_t v214;
  double v217;
  uint64_t v218;
  uint64_t *v219;
  double v220;
  unsigned __int8 *v221;
  void *v222;
  uint64_t v223;
  uint64_t v224;
  void *v225;
  unsigned __int8 v226;
  uint64_t v227;
  uint64_t v228;
  double v229;
  double v230;
  uint64_t v231;
  double v232;
  id v233;
  uint64_t v234;
  id v235;
  uint64_t v236;
  double v237;
  unsigned __int8 v238;
  uint64_t v239;
  uint64_t v240;
  int64_t v241;
  double v242;
  uint64_t v243;
  uint64_t v244;
  double v245;
  _QWORD v246[34];
  _QWORD *v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250[3];
  uint64_t v251;
  uint64_t v252;
  _BYTE v253[104];
  _QWORD v254[12];
  char v255;
  __int128 v256;
  CGFloat v257;
  CGFloat v258;
  id v259;
  uint64_t v260;
  __int128 v261;
  CGFloat v262;
  CGFloat v263;
  id v264;
  unint64_t v265;
  CGRect v266;
  CGRect v267;
  CGRect v268;
  CGRect v269;
  CGRect v270;
  CGRect v271;
  CGRect v272;
  CGRect v273;
  CGRect v274;
  CGRect v275;
  CGRect v276;
  CGRect v277;
  CGRect v278;
  CGRect v279;
  CGRect v280;
  CGRect v281;
  CGRect v282;
  CGRect v283;
  CGRect v284;

  v251 = a7;
  v252 = a8;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v250);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a7 - 8) + 16))(boxed_opaque_existential_1, a4, a7);
  sub_1DC4052F0();
  v17 = *(_QWORD *)(a5 + 16);
  v18 = MEMORY[0x1E0DEE9E0];
  v244 = a5;
  v218 = a2;
  v219 = a3;
  v228 = a1;
  if (!v17)
  {
    v237 = 0.0;
    v240 = MEMORY[0x1E0DEE9E0];
    v81 = MEMORY[0x1E0DEE9E0];
    v69 = 0.0;
    v91 = *a3;
    if (*a3)
      goto LABEL_25;
LABEL_59:
    __break(1u);
LABEL_60:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v114 = 0.0;
    v173 = MEMORY[0x1E0DEE9E0];
    v245 = 0.0;
LABEL_62:
    swift_bridgeObjectRelease();
    v174 = v173 + 64;
    v175 = 1 << *(_BYTE *)(v173 + 32);
    v176 = -1;
    if (v175 < 64)
      v176 = ~(-1 << v175);
    v177 = v176 & *(_QWORD *)(v173 + 64);
    v178 = (unint64_t)(v175 + 63) >> 6;
    swift_bridgeObjectRetain_n();
    v179 = 0;
    v180 = 0.0;
    while (1)
    {
      if (v177)
      {
        v181 = __clz(__rbit64(v177));
        v177 &= v177 - 1;
        v182 = v181 | (v179 << 6);
      }
      else
      {
        v184 = v179 + 1;
        if (__OFADD__(v179, 1))
          goto LABEL_112;
        if (v184 >= v178)
        {
LABEL_89:
          swift_release();
          swift_bridgeObjectRelease();
          sub_1DC405230();
          v187 = 0.0;
          if (v188 > 990.0)
          {
            sub_1DC405224();
            v190 = v189;
            sub_1DC4051F4();
            v187 = v190 - v191;
          }
          sub_1DC405230();
          v193 = v192;
          sub_1DC405230();
          v195 = v194;
          if (v193 > 990.0)
          {
            sub_1DC405224();
            v197 = v195 - v196;
            sub_1DC405224();
            v199 = v197 - v198;
            sub_1DC4051F4();
            v201 = v200;
            sub_1DC4051F4();
            v195 = v199 + v201 + v202;
          }
          v282.size.height = v180 + 15.0 + 15.0;
          v282.origin.y = 0.0;
          v282.origin.x = v187;
          v282.size.width = v195;
          v283 = CGRectIntegral(v282);
          x = v283.origin.x;
          y = v283.origin.y;
          width = v283.size.width;
          height = v283.size.height;
          v207 = type metadata accessor for QuoteDetailViewLayoutOptions();
          sub_1DC32A8C0(v228, v218, (uint64_t)v253, v114 + 15.0 + v245 + *(double *)(v218 + *(int *)(v207 + 24)));
          sub_1DC405230();
          v209 = v208;
          sub_1DC2254EC((uint64_t)v253, (uint64_t)v254);
          v210 = x;
          v211 = y;
          v212 = width;
          v213 = height;
          if ((v255 & 1) == 0)
          {
            v210 = *(double *)&v254[4];
            v211 = *(double *)&v254[5];
            v212 = *(double *)&v254[6];
            v213 = *(double *)&v254[7];
          }
          v284.size.height = CGRectGetMaxY(*(CGRect *)&v210);
          v284.origin.x = 0.0;
          v284.origin.y = 0.0;
          v284.size.width = v209;
          CGRectIntegral(v284);
          *(CGFloat *)(a6 + 56) = v209;
          *(_BYTE *)(a6 + 64) = 0;
          MEMORY[0x1E0C80A78](v214);
          sub_1DC4051C4();
          memcpy(a9, v246, 0x109uLL);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v250);
          return;
        }
        v185 = *(_QWORD *)(v174 + 8 * v184);
        ++v179;
        if (!v185)
        {
          v179 = v184 + 1;
          if (v184 + 1 >= v178)
            goto LABEL_89;
          v185 = *(_QWORD *)(v174 + 8 * v179);
          if (!v185)
          {
            v179 = v184 + 2;
            if (v184 + 2 >= v178)
              goto LABEL_89;
            v185 = *(_QWORD *)(v174 + 8 * v179);
            if (!v185)
            {
              v179 = v184 + 3;
              if (v184 + 3 >= v178)
                goto LABEL_89;
              v185 = *(_QWORD *)(v174 + 8 * v179);
              if (!v185)
              {
                v179 = v184 + 4;
                if (v184 + 4 >= v178)
                  goto LABEL_89;
                v185 = *(_QWORD *)(v174 + 8 * v179);
                if (!v185)
                {
                  v179 = v184 + 5;
                  if (v184 + 5 >= v178)
                    goto LABEL_89;
                  v185 = *(_QWORD *)(v174 + 8 * v179);
                  if (!v185)
                  {
                    v186 = v184 + 6;
                    if (v186 >= v178)
                      goto LABEL_89;
                    v185 = *(_QWORD *)(v174 + 8 * v186);
                    if (!v185)
                    {
                      while (1)
                      {
                        v179 = v186 + 1;
                        if (__OFADD__(v186, 1))
                          goto LABEL_114;
                        if (v179 >= v178)
                          goto LABEL_89;
                        v185 = *(_QWORD *)(v174 + 8 * v179);
                        ++v186;
                        if (v185)
                          goto LABEL_88;
                      }
                    }
                    v179 = v186;
                  }
                }
              }
            }
          }
        }
LABEL_88:
        v177 = (v185 - 1) & v185;
        v182 = __clz(__rbit64(v185)) + (v179 << 6);
      }
      MaxY = CGRectGetMaxY(*(CGRect *)(*(_QWORD *)(v173 + 56) + 48 * v182));
      if (v180 <= MaxY)
        v180 = MaxY;
    }
  }
  v19 = v16;
  v221 = (unsigned __int8 *)(a5 + 32);
  v243 = sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FB00);
  v225 = (void *)*MEMORY[0x1E0DC1138];
  v222 = (void *)*MEMORY[0x1E0DC1140];
  swift_bridgeObjectRetain();
  v20 = 0;
  v241 = v17;
  do
  {
    v21 = a5 + v20++;
    v22 = *(_BYTE *)(v21 + 32);
    v238 = v22;
    v23 = __swift_project_boxed_opaque_existential_1(v250, v251);
    sub_1DC1FC8BC(v22);
    swift_bridgeObjectRelease();
    v24 = (_QWORD *)*v23;
    sub_1DC089DA4(0, (unint64_t *)&qword_1EDB40090, (uint64_t (*)(uint64_t))sub_1DC112C08, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v25 = swift_allocObject();
    *(_OWORD *)(v25 + 16) = xmmword_1DC40C740;
    *(_QWORD *)(v25 + 32) = v225;
    swift_bridgeObjectRetain();
    v235 = v225;
    *(_QWORD *)(v25 + 40) = sub_1DC4092F8();
    *(_QWORD *)(v25 + 64) = v243;
    *(_QWORD *)(v25 + 72) = v222;
    v26 = v24 + 2;
    v27 = v24[5];
    v28 = v24[6];
    __swift_project_boxed_opaque_existential_1(v26, v27);
    v29 = *(_QWORD *)(v28 + 16);
    v30 = *(uint64_t (**)(uint64_t, uint64_t))(v29 + 200);
    v233 = v222;
    v31 = v30(v27, v29);
    v231 = sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FB30);
    *(_QWORD *)(v25 + 104) = v231;
    *(_QWORD *)(v25 + 80) = v31;
    sub_1DC0FA3C4(v25);
    v32 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
    v33 = (void *)sub_1DC408A1C();
    swift_bridgeObjectRelease();
    type metadata accessor for Key(0);
    sub_1DC0FB14C();
    v34 = (void *)sub_1DC408980();
    swift_bridgeObjectRelease();
    v35 = objc_msgSend(v32, sel_initWithString_attributes_, v33, v34);
    a5 = v244;
    swift_bridgeObjectRelease();

    objc_msgSend(v35, sel_boundingRectWithSize_options_context_, 0, 0, v19, 1.79769313e308);
    v36 = v266.origin.x;
    v37 = v266.origin.y;
    v38 = v266.size.width;
    v39 = v266.size.height;
    v40 = ceil(CGRectGetWidth(v266));
    v267.origin.x = v36;
    v267.origin.y = v37;
    v267.size.width = v38;
    v267.size.height = v39;
    v41 = ceil(CGRectGetHeight(v267));
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v246[0] = v18;
    sub_1DC35A51C((uint64_t)v35, v238, isUniquelyReferenced_nonNull_native, v40, v41);
    swift_bridgeObjectRelease();
  }
  while (v241 != v20);
  v223 = v18;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v43 = 0;
  v44 = MEMORY[0x1E0DEE9E0];
  do
  {
    v239 = v44;
    v45 = a5 + v43++;
    v46 = *(unsigned __int8 *)(v45 + 32);
    v226 = *(_BYTE *)(v45 + 32);
    v47 = __swift_project_boxed_opaque_existential_1(v250, v251);
    sub_1DC1FD438(v46, 0);
    v48 = (_QWORD *)*v47;
    v49 = swift_allocObject();
    *(_OWORD *)(v49 + 16) = xmmword_1DC40C740;
    *(_QWORD *)(v49 + 32) = v235;
    swift_bridgeObjectRetain();
    v50 = v235;
    *(_QWORD *)(v49 + 40) = sub_1DC409304();
    *(_QWORD *)(v49 + 64) = v243;
    *(_QWORD *)(v49 + 72) = v233;
    v51 = v48 + 2;
    v53 = v48[5];
    v52 = v48[6];
    __swift_project_boxed_opaque_existential_1(v51, v53);
    v54 = *(_QWORD *)(v52 + 16);
    v55 = *(uint64_t (**)(uint64_t, uint64_t))(v54 + 48);
    v56 = v233;
    v57 = v55(v53, v54);
    a5 = v244;
    *(_QWORD *)(v49 + 104) = v231;
    *(_QWORD *)(v49 + 80) = v57;
    sub_1DC0FA3C4(v49);
    v58 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
    v59 = (void *)sub_1DC408A1C();
    swift_bridgeObjectRelease();
    v60 = (void *)sub_1DC408980();
    swift_bridgeObjectRelease();
    v61 = objc_msgSend(v58, sel_initWithString_attributes_, v59, v60);
    swift_bridgeObjectRelease();

    objc_msgSend(v61, sel_boundingRectWithSize_options_context_, 0, 0, v19, 1.79769313e308);
    v62 = v268.origin.x;
    v63 = v268.origin.y;
    v64 = v268.size.width;
    v65 = v268.size.height;
    v66 = ceil(CGRectGetWidth(v268));
    v269.origin.x = v62;
    v269.origin.y = v63;
    v269.size.width = v64;
    v269.size.height = v65;
    v67 = ceil(CGRectGetHeight(v269));
    v68 = swift_isUniquelyReferenced_nonNull_native();
    v246[0] = v239;
    sub_1DC35A51C((uint64_t)v61, v226, v68, v66, v67);
    v44 = v239;
    swift_bridgeObjectRelease();
  }
  while (v241 != v43);
  swift_bridgeObjectRelease();
  v69 = 0.0;
  v70 = v221;
  v17 = v241;
  v71 = v241;
  a3 = v219;
  do
  {
    if (!*(_QWORD *)(v223 + 16))
      goto LABEL_104;
    v240 = v44;
    v73 = *v70++;
    v72 = v73;
    v74 = sub_1DC1A36AC(v73);
    if ((v75 & 1) == 0)
      goto LABEL_105;
    if (!*(_QWORD *)(v240 + 16))
      goto LABEL_106;
    v76 = *(double *)(*(_QWORD *)(v223 + 56) + 24 * v74);
    v77 = sub_1DC1A36AC(v72);
    if ((v78 & 1) == 0)
      goto LABEL_107;
    v44 = v240;
    v79 = *(_QWORD *)(v240 + 56);
    if (v69 <= v76 + *(double *)(v79 + 24 * v77))
      v69 = v76 + *(double *)(v79 + 24 * v77);
    --v71;
  }
  while (v71);
  v237 = 0.0;
  v80 = v241;
  v81 = v223;
  v18 = MEMORY[0x1E0DEE9E0];
  do
  {
    if (!*(_QWORD *)(v223 + 16))
      goto LABEL_108;
    v83 = *v221;
    v82 = *v221++;
    v84 = sub_1DC1A36AC(v83);
    if ((v85 & 1) == 0)
      goto LABEL_109;
    if (!*(_QWORD *)(v240 + 16))
      goto LABEL_110;
    v86 = *(double *)(*(_QWORD *)(v223 + 56) + 24 * v84 + 8);
    v87 = sub_1DC1A36AC(v82);
    if ((v88 & 1) == 0)
      goto LABEL_111;
    v89 = *(double *)(*(_QWORD *)(v240 + 56) + 24 * v87 + 8);
    if (v86 > v89)
      v89 = v86;
    v90 = v237;
    if (v237 <= v89)
      v90 = v89;
    v237 = v90;
    --v80;
  }
  while (v80);
  v91 = *v219;
  if (!*v219)
    goto LABEL_59;
LABEL_25:
  swift_bridgeObjectRetain();
  v227 = sub_1DC32E960(0, v17, v91, v244, a3);
  swift_bridgeObjectRelease();
  v92 = *((double *)a3 + 3);
  if (*((double *)a3 + 2) > v69 + *((double *)a3 + 4))
    v93 = *((double *)a3 + 2);
  else
    v93 = v69 + *((double *)a3 + 4);
  sub_1DC4051F4();
  v95 = v94;
  sub_1DC4051F4();
  v97 = v96;
  sub_1DC405230();
  v99 = v98;
  sub_1DC405230();
  v101 = v100;
  if (v99 > 990.0)
  {
    sub_1DC405224();
    v103 = v101 - v102;
    sub_1DC405224();
    v105 = v103 - v104;
    sub_1DC4051F4();
    v107 = v106;
    sub_1DC4051F4();
    v101 = v105 + v107 + v108;
  }
  v109 = *(_QWORD *)(v227 + 16);
  v224 = v109;
  v110 = (double)(v109 - 1);
  v111 = v101 - v95 - v97 - (v93 * (double)v109 + v92 * v110);
  v112 = v240;
  if (v111 > 0.0)
  {
    v93 = v93 + v111 * 0.666666667 / (double)v109;
    v92 = v92 + v111 * 0.333333333 / v110;
  }
  v249 = v18;
  v248 = v18;
  v247 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  if (!v109)
    goto LABEL_60;
  v220 = v92 + v93;
  v217 = v92 * 0.5;
  swift_bridgeObjectRetain();
  v113 = 0;
  v114 = 0.0;
  v245 = 0.0;
  v115 = 0.0;
  v229 = v93;
LABEL_36:
  if (v113 >= *(_QWORD *)(v227 + 16))
    goto LABEL_113;
  v117 = *(_QWORD *)(v227 + 32 + 8 * v113);
  v236 = *(_QWORD *)(v117 + 16);
  if (!v236)
    goto LABEL_53;
  sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FB00);
  v232 = *((double *)a3 + 1);
  swift_bridgeObjectRetain();
  v118 = 0;
  v119 = 0.0;
  v234 = v117;
  v230 = v115;
  while (1)
  {
    v120 = *(_BYTE *)(v117 + v118 + 32);
    v121 = v115;
    v122 = v93;
    v123 = v237;
    v270 = CGRectIntegral(*(CGRect *)(&v119 - 1));
    if (!*(_QWORD *)(v81 + 16))
      break;
    v124 = v270.origin.x;
    v125 = v270.origin.y;
    v126 = v270.size.width;
    v127 = v270.size.height;
    v128 = sub_1DC1A36AC(v120);
    if ((v129 & 1) == 0)
      goto LABEL_97;
    v242 = v114;
    v130 = *(_QWORD *)(v81 + 56) + 24 * v128;
    v132 = *(double *)v130;
    v131 = *(double *)(v130 + 8);
    v133 = *(id *)(v130 + 16);
    v271.origin.x = v124;
    v271.origin.y = v125;
    v271.size.width = v126;
    v271.size.height = v127;
    MinX = CGRectGetMinX(v271);
    v272.origin.x = v124;
    v272.origin.y = v125;
    v272.size.width = v126;
    v272.size.height = v127;
    v273.origin.y = CGRectGetMaxY(v272) - v131;
    v273.origin.x = MinX;
    v273.size.width = v132;
    v273.size.height = v131;
    v274 = CGRectIntegral(v273);
    *(CGFloat *)&v261 = v274.origin.x;
    *((_QWORD *)&v261 + 1) = *(_QWORD *)&v274.origin.y;
    v262 = v274.size.width;
    v263 = v274.size.height;
    v264 = v133;
    v265 = v113;
    v135 = v113;
    v136 = v133;
    v137 = swift_isUniquelyReferenced_nonNull_native();
    v246[0] = v249;
    sub_1DC35A3C4(&v261, v120, v137);
    swift_bridgeObjectRelease();
    if (!*(_QWORD *)(v112 + 16))
      goto LABEL_98;
    v138 = sub_1DC1A36AC(v120);
    if ((v139 & 1) == 0)
      goto LABEL_99;
    v140 = *(_QWORD *)(v112 + 56) + 24 * v138;
    v141 = *(double *)v140;
    v142 = *(double *)(v140 + 8);
    v143 = *(id *)(v140 + 16);
    v275.origin.x = v124;
    v275.origin.y = v125;
    v275.size.width = v126;
    v275.size.height = v127;
    v144 = CGRectGetMaxX(v275) - v141;
    v276.origin.x = v124;
    v276.origin.y = v125;
    v276.size.width = v126;
    v276.size.height = v127;
    v277.origin.y = CGRectGetMaxY(v276) - v142;
    v277.origin.x = v144;
    v277.size.width = v141;
    v277.size.height = v142;
    v278 = CGRectIntegral(v277);
    *(CGFloat *)&v256 = v278.origin.x;
    *((_QWORD *)&v256 + 1) = *(_QWORD *)&v278.origin.y;
    v257 = v278.size.width;
    v258 = v278.size.height;
    v259 = v143;
    v260 = v135;
    v145 = v143;
    v146 = swift_isUniquelyReferenced_nonNull_native();
    v246[0] = v248;
    sub_1DC35A3C4(&v256, v120, v146);
    swift_bridgeObjectRelease();
    if (!*(_QWORD *)(v249 + 16))
      goto LABEL_100;
    v147 = sub_1DC1A36AC(v120);
    if ((v148 & 1) == 0)
      goto LABEL_101;
    MinY = CGRectGetMinY(*(CGRect *)(*(_QWORD *)(v249 + 56) + 48 * v147));
    v150 = (void *)sub_1DC4092F8();
    objc_msgSend(v150, sel_ascender);
    v152 = v151;

    v153 = (void *)sub_1DC4092F8();
    objc_msgSend(v153, sel_capHeight);
    v155 = v154;

    v156 = v245;
    if (MinY + v152 - v155 < v245)
      v156 = MinY + v152 - v155;
    v245 = v156;
    if (!*(_QWORD *)(v249 + 16))
      goto LABEL_102;
    v157 = sub_1DC1A36AC(v120);
    if ((v158 & 1) == 0)
      goto LABEL_103;
    ++v118;
    v159 = CGRectGetMaxY(*(CGRect *)(*(_QWORD *)(v249 + 56) + 48 * v157));
    v160 = (void *)sub_1DC4092F8();
    objc_msgSend(v160, sel_descender);
    v162 = v161;

    v114 = v242;
    if (v242 <= v159 + v162)
      v114 = v159 + v162;
    v279.origin.x = v124;
    v279.origin.y = v125;
    v279.size.width = v126;
    v279.size.height = v127;
    v163 = CGRectGetMaxY(v279);

    v115 = v230;
    v119 = v232 + v163;
    v93 = v229;
    v112 = v240;
    v113 = v135;
    v117 = v234;
    if (v236 == v118)
    {
      swift_bridgeObjectRelease();
      a3 = v219;
LABEL_53:
      if (v115 > 0.0)
      {
        sub_1DC405218();
        v280.origin.y = v245;
        v280.size.height = v114 - v245;
        v280.size.width = 1.0 / v164;
        v280.origin.x = v115 - v217;
        v281 = CGRectIntegral(v280);
        v165 = v281.origin.x;
        v166 = v281.origin.y;
        v167 = v281.size.width;
        v168 = v281.size.height;
        v169 = v247;
        v170 = v113;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v169 = sub_1DC166380(0, v247[2] + 1, 1, v247);
        v172 = v169[2];
        v171 = v169[3];
        if (v172 >= v171 >> 1)
          v169 = sub_1DC166380((_QWORD *)(v171 > 1), v172 + 1, 1, v169);
        v169[2] = v172 + 1;
        v116 = (CGFloat *)&v169[4 * v172];
        v116[4] = v165;
        v116[5] = v166;
        v116[6] = v167;
        v116[7] = v168;
        v247 = v169;
        v112 = v240;
        v113 = v170;
      }
      ++v113;
      v115 = v220 + v115;
      if (v113 == v224)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v173 = v248;
        goto LABEL_62;
      }
      goto LABEL_36;
    }
  }
  __break(1u);
LABEL_97:
  __break(1u);
LABEL_98:
  __break(1u);
LABEL_99:
  __break(1u);
LABEL_100:
  __break(1u);
LABEL_101:
  __break(1u);
LABEL_102:
  __break(1u);
LABEL_103:
  __break(1u);
LABEL_104:
  __break(1u);
LABEL_105:
  __break(1u);
LABEL_106:
  __break(1u);
LABEL_107:
  __break(1u);
LABEL_108:
  __break(1u);
LABEL_109:
  __break(1u);
LABEL_110:
  __break(1u);
LABEL_111:
  __break(1u);
LABEL_112:
  __break(1u);
LABEL_113:
  __break(1u);
LABEL_114:
  __break(1u);
}

void sub_1DC32D9AC(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, double a10@<D0>, double a11@<D1>, double a12@<D2>)
{
  uint64_t *boxed_opaque_existential_1;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  double v38;
  double v39;
  double v40;
  uint64_t v41;
  unsigned __int8 *v42;
  uint64_t v43;
  unsigned __int8 v44;
  unsigned __int8 v45;
  unint64_t v46;
  char v47;
  double v48;
  unint64_t v49;
  char v50;
  double v51;
  double v52;
  double v53;
  double v54;
  uint64_t v55;
  uint64_t v56;
  double v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  double v61;
  CGFloat *v62;
  double v63;
  unsigned __int8 v64;
  CGFloat v65;
  CGFloat v66;
  CGFloat v67;
  CGFloat v68;
  unint64_t v69;
  char v70;
  uint64_t v71;
  CGFloat v72;
  double v73;
  id v74;
  CGFloat MinX;
  id v76;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v78;
  char v79;
  uint64_t v80;
  double v81;
  double v82;
  id v83;
  CGFloat v84;
  unint64_t v85;
  id v86;
  char v87;
  unint64_t v88;
  char v89;
  double v90;
  double MinY;
  void *v92;
  double v93;
  double v94;
  void *v95;
  double v96;
  double v97;
  double v98;
  double v99;
  unint64_t v100;
  char v101;
  double v102;
  void *v103;
  double v104;
  double v105;
  double v106;
  CGFloat v107;
  double v108;
  CGFloat v109;
  CGFloat v110;
  CGFloat v111;
  CGFloat v112;
  _QWORD *v113;
  unint64_t v114;
  unint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  unint64_t v119;
  int64_t v120;
  int64_t v121;
  unint64_t v122;
  unint64_t v123;
  double MaxY;
  int64_t v125;
  unint64_t v126;
  int64_t v127;
  double v128;
  double v129;
  double v130;
  double v131;
  double v132;
  double v133;
  double v134;
  double v135;
  double v136;
  double v137;
  double v138;
  double v139;
  double v140;
  double v141;
  double v142;
  double v143;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  uint64_t v148;
  double v149;
  CGFloat v150;
  CGFloat v151;
  CGFloat v152;
  CGFloat v153;
  CGFloat v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v159;
  double v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  double v166;
  double v167;
  uint64_t v168;
  uint64_t v169;
  double v170;
  double v171;
  double v172;
  double v173;
  int64_t v174;
  CGFloat v175;
  _QWORD v176[34];
  _QWORD *v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180[3];
  uint64_t v181;
  uint64_t v182;
  _BYTE v183[104];
  _QWORD v184[12];
  char v185;
  __int128 v186;
  CGFloat v187;
  CGFloat v188;
  id v189;
  unint64_t v190;
  __int128 v191;
  CGFloat v192;
  CGFloat v193;
  id v194;
  unint64_t v195;
  CGRect v196;
  CGRect v197;
  CGRect v198;
  CGRect v199;
  CGRect v200;
  CGRect v201;
  CGRect v202;
  CGRect v203;
  CGRect v204;
  CGRect v205;
  CGRect v206;
  CGRect v207;
  CGRect v208;
  CGRect v209;
  CGRect v210;
  CGRect v211;
  CGRect v212;

  v181 = a7;
  v182 = a8;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v180);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a7 - 8) + 16))(boxed_opaque_existential_1, a4, a7);
  v23 = __swift_project_boxed_opaque_existential_1(v180, v181);
  v156 = a1;
  v167 = a10;
  v174 = sub_1DC32BF30(a1, a2, a3, *v23, a5, a3, a6, a10, a11, a12);
  v25 = v24;
  v27 = v26;
  sub_1DC4051F4();
  sub_1DC4051F4();
  sub_1DC405230();
  v29 = v28;
  sub_1DC405230();
  v31 = v30;
  if (v29 > 990.0)
  {
    sub_1DC405224();
    v33 = v31 - v32;
    sub_1DC405224();
    v35 = v33 - v34;
    sub_1DC4051F4();
    v37 = v36;
    sub_1DC4051F4();
    v31 = v35 + v37 + v38;
  }
  v164 = a2;
  v157 = a6;
  sub_1DC408F74();
  v40 = v39;
  v41 = *(_QWORD *)(a5 + 16);
  if (v41)
  {
    v42 = (unsigned __int8 *)(a5 + 32);
    v170 = 0.0;
    v43 = *(_QWORD *)(a5 + 16);
    while (*(_QWORD *)(v25 + 16))
    {
      v45 = *v42++;
      v44 = v45;
      v46 = sub_1DC1A36AC(v45);
      if ((v47 & 1) == 0)
        goto LABEL_91;
      if (!*(_QWORD *)(v27 + 16))
        goto LABEL_92;
      v48 = *(double *)(*(_QWORD *)(v25 + 56) + 24 * v46 + 8);
      v49 = sub_1DC1A36AC(v44);
      if ((v50 & 1) == 0)
        goto LABEL_93;
      v51 = *(double *)(*(_QWORD *)(v27 + 56) + 24 * v49 + 8);
      if (v48 > v51)
        v51 = v48;
      v52 = v170;
      if (v170 <= v51)
        v52 = v51;
      v170 = v52;
      if (!--v43)
        goto LABEL_16;
    }
    goto LABEL_90;
  }
  v170 = 0.0;
LABEL_16:
  v53 = ceil((double)v41 / (double)v174);
  if ((~*(_QWORD *)&v53 & 0x7FF0000000000000) == 0)
    goto LABEL_96;
  if (v53 <= -9.22337204e18)
  {
LABEL_97:
    __break(1u);
    goto LABEL_98;
  }
  if (v53 >= 9.22337204e18)
  {
LABEL_98:
    __break(1u);
    goto LABEL_99;
  }
  if ((v174 & 0x8000000000000000) == 0)
  {
    v54 = (v31 - v40 - a11) / (double)v174;
    v55 = (uint64_t)v53;
    swift_bridgeObjectRetain();
    v56 = sub_1DC32E58C(0, v174, a5, v55);
    swift_bridgeObjectRelease();
    v178 = MEMORY[0x1E0DEE9E0];
    v179 = MEMORY[0x1E0DEE9E0];
    v177 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v57 = 0.0;
    v161 = *(_QWORD *)(v56 + 16);
    if (!v161)
    {
      v172 = 0.0;
      v173 = 0.0;
LABEL_48:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v116 = v178 + 64;
      v117 = 1 << *(_BYTE *)(v178 + 32);
      v118 = -1;
      if (v117 < 64)
        v118 = ~(-1 << v117);
      v119 = v118 & *(_QWORD *)(v178 + 64);
      v120 = (unint64_t)(v117 + 63) >> 6;
      swift_bridgeObjectRetain_n();
      v121 = 0;
      while (1)
      {
        if (v119)
        {
          v122 = __clz(__rbit64(v119));
          v119 &= v119 - 1;
          v123 = v122 | (v121 << 6);
        }
        else
        {
          v125 = v121 + 1;
          if (__OFADD__(v121, 1))
            goto LABEL_94;
          if (v125 >= v120)
          {
LABEL_75:
            swift_release();
            swift_bridgeObjectRelease();
            sub_1DC405230();
            v128 = 0.0;
            if (v129 > 990.0)
            {
              sub_1DC405224();
              v131 = v130;
              sub_1DC4051F4();
              v128 = v131 - v132;
            }
            sub_1DC405230();
            v134 = v133;
            sub_1DC405230();
            v136 = v135;
            if (v134 > 990.0)
            {
              sub_1DC405224();
              v138 = v136 - v137;
              sub_1DC405224();
              v140 = v138 - v139;
              sub_1DC4051F4();
              v142 = v141;
              sub_1DC4051F4();
              v136 = v140 + v142 + v143;
            }
            v210.size.height = v57 + 15.0 + 15.0;
            v210.origin.y = 0.0;
            v210.origin.x = v128;
            v210.size.width = v136;
            v211 = CGRectIntegral(v210);
            x = v211.origin.x;
            y = v211.origin.y;
            width = v211.size.width;
            height = v211.size.height;
            v148 = type metadata accessor for QuoteDetailViewLayoutOptions();
            sub_1DC32A8C0(v156, v164, (uint64_t)v183, v172 + 15.0 + v173 + *(double *)(v164 + *(int *)(v148 + 24)));
            sub_1DC405230();
            v150 = v149;
            sub_1DC2254EC((uint64_t)v183, (uint64_t)v184);
            v151 = x;
            v152 = y;
            v153 = width;
            v154 = height;
            if ((v185 & 1) == 0)
            {
              v151 = *(double *)&v184[4];
              v152 = *(double *)&v184[5];
              v153 = *(double *)&v184[6];
              v154 = *(double *)&v184[7];
            }
            v212.size.height = CGRectGetMaxY(*(CGRect *)&v151);
            v212.origin.x = 0.0;
            v212.origin.y = 0.0;
            v212.size.width = v150;
            CGRectIntegral(v212);
            *(CGFloat *)(v157 + 56) = v150;
            *(_BYTE *)(v157 + 64) = 0;
            MEMORY[0x1E0C80A78](v155);
            sub_1DC4051C4();
            memcpy(a9, v176, 0x109uLL);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            __swift_destroy_boxed_opaque_existential_1((uint64_t)v180);
            return;
          }
          v126 = *(_QWORD *)(v116 + 8 * v125);
          ++v121;
          if (!v126)
          {
            v121 = v125 + 1;
            if (v125 + 1 >= v120)
              goto LABEL_75;
            v126 = *(_QWORD *)(v116 + 8 * v121);
            if (!v126)
            {
              v121 = v125 + 2;
              if (v125 + 2 >= v120)
                goto LABEL_75;
              v126 = *(_QWORD *)(v116 + 8 * v121);
              if (!v126)
              {
                v121 = v125 + 3;
                if (v125 + 3 >= v120)
                  goto LABEL_75;
                v126 = *(_QWORD *)(v116 + 8 * v121);
                if (!v126)
                {
                  v121 = v125 + 4;
                  if (v125 + 4 >= v120)
                    goto LABEL_75;
                  v126 = *(_QWORD *)(v116 + 8 * v121);
                  if (!v126)
                  {
                    v121 = v125 + 5;
                    if (v125 + 5 >= v120)
                      goto LABEL_75;
                    v126 = *(_QWORD *)(v116 + 8 * v121);
                    if (!v126)
                    {
                      v127 = v125 + 6;
                      if (v127 >= v120)
                        goto LABEL_75;
                      v126 = *(_QWORD *)(v116 + 8 * v127);
                      if (!v126)
                      {
                        while (1)
                        {
                          v121 = v127 + 1;
                          if (__OFADD__(v127, 1))
                            goto LABEL_100;
                          if (v121 >= v120)
                            goto LABEL_75;
                          v126 = *(_QWORD *)(v116 + 8 * v121);
                          ++v127;
                          if (v126)
                            goto LABEL_74;
                        }
                      }
                      v121 = v127;
                    }
                  }
                }
              }
            }
          }
LABEL_74:
          v119 = (v126 - 1) & v126;
          v123 = __clz(__rbit64(v126)) + (v121 << 6);
        }
        MaxY = CGRectGetMaxY(*(CGRect *)(*(_QWORD *)(v178 + 56) + 48 * v123));
        if (v57 <= MaxY)
          v57 = MaxY;
      }
    }
    v160 = v54 + a11;
    v162 = v56 + 32;
    swift_bridgeObjectRetain();
    v58 = 0;
    v172 = 0.0;
    v173 = 0.0;
    v171 = 0.0;
    v163 = v25;
    v166 = (v31 - v40 - a11) / (double)v174;
    v159 = v56;
    v165 = v27;
    while (1)
    {
      if (v58 >= *(_QWORD *)(v56 + 16))
        goto LABEL_95;
      v59 = *(_QWORD *)(v162 + 8 * v58);
      v169 = *(_QWORD *)(v59 + 16);
      if (v169)
        break;
LABEL_23:
      ++v58;
      v171 = v160 + v171;
      if (v58 == v161)
      {
        swift_bridgeObjectRelease();
        goto LABEL_48;
      }
    }
    sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FB00);
    swift_bridgeObjectRetain();
    v60 = 0;
    v61 = 0.0;
    v168 = v59;
    while (1)
    {
      v64 = *(_BYTE *)(v59 + v60 + 32);
      v197.size.height = v170;
      v197.origin.x = v171;
      v197.origin.y = v61;
      v197.size.width = v54;
      v198 = CGRectIntegral(v197);
      if (!*(_QWORD *)(v25 + 16))
        break;
      v65 = v198.origin.x;
      v66 = v198.origin.y;
      v67 = v198.size.width;
      v68 = v198.size.height;
      v69 = sub_1DC1A36AC(v64);
      if ((v70 & 1) == 0)
        goto LABEL_83;
      v71 = *(_QWORD *)(v25 + 56) + 24 * v69;
      v72 = *(double *)v71;
      v73 = *(double *)(v71 + 8);
      v74 = *(id *)(v71 + 16);
      v199.origin.x = v65;
      v199.origin.y = v66;
      v199.size.width = v67;
      v199.size.height = v68;
      MinX = CGRectGetMinX(v199);
      v200.origin.x = v65;
      v200.origin.y = v66;
      v200.size.width = v67;
      v200.size.height = v68;
      v201.origin.y = CGRectGetMaxY(v200) - v73;
      v201.origin.x = MinX;
      v201.size.width = v72;
      v201.size.height = v73;
      v202 = CGRectIntegral(v201);
      *(CGFloat *)&v191 = v202.origin.x;
      *((_QWORD *)&v191 + 1) = *(_QWORD *)&v202.origin.y;
      v192 = v202.size.width;
      v193 = v202.size.height;
      v194 = v74;
      v195 = v58;
      v76 = v74;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v176[0] = v179;
      sub_1DC35A3C4(&v191, v64, isUniquelyReferenced_nonNull_native);
      swift_bridgeObjectRelease();
      if (!*(_QWORD *)(v27 + 16))
        goto LABEL_84;
      v78 = sub_1DC1A36AC(v64);
      if ((v79 & 1) == 0)
        goto LABEL_85;
      v80 = *(_QWORD *)(v27 + 56) + 24 * v78;
      v81 = *(double *)v80;
      v82 = *(double *)(v80 + 8);
      v83 = *(id *)(v80 + 16);
      v203.origin.x = v65;
      v203.origin.y = v66;
      v203.size.width = v67;
      v203.size.height = v68;
      v84 = CGRectGetMaxX(v203) - v81;
      v204.origin.x = v65;
      v204.origin.y = v66;
      v204.size.width = v67;
      v204.size.height = v68;
      v205.origin.y = CGRectGetMaxY(v204) - v82;
      v205.origin.x = v84;
      v205.size.width = v81;
      v205.size.height = v82;
      v206 = CGRectIntegral(v205);
      *(CGFloat *)&v186 = v206.origin.x;
      *((_QWORD *)&v186 + 1) = *(_QWORD *)&v206.origin.y;
      v187 = v206.size.width;
      v188 = v206.size.height;
      v189 = v83;
      v190 = v58;
      v85 = v58;
      v86 = v83;
      v87 = swift_isUniquelyReferenced_nonNull_native();
      v176[0] = v178;
      sub_1DC35A3C4(&v186, v64, v87);
      swift_bridgeObjectRelease();
      if (!*(_QWORD *)(v179 + 16))
        goto LABEL_86;
      v88 = sub_1DC1A36AC(v64);
      if ((v89 & 1) == 0)
        goto LABEL_87;
      v175 = v66;
      v90 = v61;
      MinY = CGRectGetMinY(*(CGRect *)(*(_QWORD *)(v179 + 56) + 48 * v88));
      v92 = (void *)sub_1DC4092F8();
      objc_msgSend(v92, sel_ascender);
      v94 = v93;

      v95 = (void *)sub_1DC4092F8();
      objc_msgSend(v95, sel_capHeight);
      v97 = v96;

      v98 = MinY + v94 - v97;
      v99 = v173;
      if (v98 < v173)
        v99 = v98;
      if (!*(_QWORD *)(v179 + 16))
        goto LABEL_88;
      v100 = sub_1DC1A36AC(v64);
      if ((v101 & 1) == 0)
        goto LABEL_89;
      v173 = v99;
      v102 = CGRectGetMaxY(*(CGRect *)(*(_QWORD *)(v179 + 56) + 48 * v100));
      v103 = (void *)sub_1DC4092F8();
      objc_msgSend(v103, sel_descender);
      v105 = v104;

      v106 = v172;
      if (v172 <= v102 + v105)
        v106 = v102 + v105;
      v172 = v106;
      if (v60)
      {
        v207.origin.x = v65;
        v207.origin.y = v175;
        v207.size.width = v67;
        v207.size.height = v68;
        v107 = CGRectGetWidth(v207);
        sub_1DC405218();
        v208.size.height = 1.0 / v108;
        v208.origin.x = v171;
        v208.origin.y = v90 - v167 * 0.5;
        v208.size.width = v107;
        v209 = CGRectIntegral(v208);
        v109 = v209.origin.x;
        v110 = v209.origin.y;
        v111 = v209.size.width;
        v112 = v209.size.height;
        v113 = v177;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v113 = sub_1DC166380(0, v177[2] + 1, 1, v177);
        v115 = v113[2];
        v114 = v113[3];
        if (v115 >= v114 >> 1)
          v113 = sub_1DC166380((_QWORD *)(v114 > 1), v115 + 1, 1, v113);
        v113[2] = v115 + 1;
        v62 = (CGFloat *)&v113[4 * v115];
        v62[4] = v109;
        v62[5] = v110;
        v62[6] = v111;
        v62[7] = v112;
        v177 = v113;
        v25 = v163;
      }
      ++v60;
      v196.origin.x = v65;
      v196.origin.y = v175;
      v196.size.width = v67;
      v196.size.height = v68;
      v63 = CGRectGetMaxY(v196);

      v54 = v166;
      v61 = v63 + v167;
      v59 = v168;
      v58 = v85;
      v27 = v165;
      if (v169 == v60)
      {
        swift_bridgeObjectRelease();
        v57 = 0.0;
        v56 = v159;
        goto LABEL_23;
      }
    }
    __break(1u);
LABEL_83:
    __break(1u);
LABEL_84:
    __break(1u);
LABEL_85:
    __break(1u);
LABEL_86:
    __break(1u);
LABEL_87:
    __break(1u);
LABEL_88:
    __break(1u);
LABEL_89:
    __break(1u);
LABEL_90:
    __break(1u);
LABEL_91:
    __break(1u);
LABEL_92:
    __break(1u);
LABEL_93:
    __break(1u);
LABEL_94:
    __break(1u);
LABEL_95:
    __break(1u);
LABEL_96:
    __break(1u);
    goto LABEL_97;
  }
LABEL_99:
  __break(1u);
LABEL_100:
  __break(1u);
}

uint64_t sub_1DC32E58C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v4 = a2 - result;
  if (!__OFSUB__(a2, result))
  {
    v5 = MEMORY[0x1E0DEE9D8];
    if (!v4)
      return v5;
    v8 = a2;
    v9 = result;
    v23 = MEMORY[0x1E0DEE9D8];
    result = sub_1DC2AD400(0, v4 & ~(v4 >> 63), 0);
    if (a4 < 0)
      goto LABEL_40;
    if (v8 < v9 || v4 < 0)
      goto LABEL_41;
    v5 = v23;
    v10 = *(_QWORD *)(a3 + 16);
    v21 = v10;
    v22 = v8;
    while (v8 != v9)
    {
      v11 = v9 * a4;
      if ((unsigned __int128)(v9 * (__int128)a4) >> 64 != (v9 * a4) >> 63)
        goto LABEL_34;
      if (v11 < 0)
        goto LABEL_35;
      if (v10 >= v11)
        v12 = v9 * a4;
      else
        v12 = v10;
      if (v11)
        v13 = v12;
      else
        v13 = 0;
      if (!a4 || v10 - v13 < 0 || (v14 = v10, v10 - v13 >= a4))
      {
        v14 = v13 + a4;
        if (__OFADD__(v13, a4))
          goto LABEL_38;
      }
      if (v14 < v13)
        goto LABEL_36;
      if (v10 < v14)
        goto LABEL_37;
      v15 = a4;
      sub_1DC409A0C();
      swift_unknownObjectRetain_n();
      swift_bridgeObjectRetain();
      v16 = swift_dynamicCastClass();
      if (!v16)
      {
        swift_bridgeObjectRelease();
        v16 = MEMORY[0x1E0DEE9D8];
      }
      v17 = *(_QWORD *)(v16 + 16);
      swift_release();
      if (v17 == v14 - v13)
      {
        v18 = swift_dynamicCastClass();
        a4 = v15;
        if (!v18)
        {
          swift_bridgeObjectRelease();
          v18 = MEMORY[0x1E0DEE9D8];
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        v18 = sub_1DC32B9C4(a3, a3 + 32, v13, (2 * v14) | 1);
        a4 = v15;
      }
      result = swift_bridgeObjectRelease();
      v20 = *(_QWORD *)(v23 + 16);
      v19 = *(_QWORD *)(v23 + 24);
      if (v20 >= v19 >> 1)
        result = sub_1DC2AD400(v19 > 1, v20 + 1, 1);
      *(_QWORD *)(v23 + 16) = v20 + 1;
      *(_QWORD *)(v23 + 8 * v20 + 32) = v18;
      ++v9;
      v10 = v21;
      v8 = v22;
      if (v22 == v9)
        return v5;
    }
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
  }
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1DC32E7C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  uint64_t v24;
  void (*v25)(char *, _QWORD, uint64_t);
  unsigned int v26;
  uint64_t v27;
  uint64_t v28;

  v27 = a2;
  v4 = sub_1DC404210();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(a1 + 16);
  v9 = MEMORY[0x1E0DEE9D8];
  if (v8)
  {
    v24 = v2;
    v28 = MEMORY[0x1E0DEE9D8];
    sub_1DC2AD3C8(0, v8, 0);
    v9 = v28;
    v26 = *MEMORY[0x1E0DB6B40];
    v25 = *(void (**)(char *, _QWORD, uint64_t))(v5 + 104);
    v10 = a1 + 56;
    do
    {
      v25(v7, v26, v4);
      sub_1DC404204();
      v12 = v11;
      v14 = v13;
      v16 = v15;
      v18 = v17;
      v19 = v5;
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      v28 = v9;
      v21 = *(_QWORD *)(v9 + 16);
      v20 = *(_QWORD *)(v9 + 24);
      if (v21 >= v20 >> 1)
      {
        sub_1DC2AD3C8(v20 > 1, v21 + 1, 1);
        v9 = v28;
      }
      *(_QWORD *)(v9 + 16) = v21 + 1;
      v22 = (_QWORD *)(v9 + 32 * v21);
      v22[4] = v12;
      v22[5] = v14;
      v22[6] = v16;
      v22[7] = v18;
      v10 += 32;
      --v8;
      v5 = v19;
    }
    while (v8);
  }
  return v9;
}

uint64_t sub_1DC32E960(int64_t a1, int64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v7;
  int64_t v8;
  int64_t v9;
  int64_t v10;
  _BOOL4 v11;
  BOOL v12;
  uint64_t result;
  int64_t v14;
  BOOL v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  unint64_t v23;
  unint64_t v24;
  size_t v25;
  void *v26;
  BOOL v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  unint64_t v35;
  unint64_t v36;
  int64_t v37;
  BOOL v38;
  size_t v39;
  void *v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  v7 = a3;
  v8 = a1;
  v9 = 0;
  v10 = a1;
  while (1)
  {
    v11 = v10 <= a2;
    if (a3 > 0)
      v11 = v10 >= a2;
    if (v11)
      break;
    v12 = __OFADD__(v10, a3);
    v10 += a3;
    if (v12)
      v10 = (v10 >> 63) ^ 0x8000000000000000;
    v12 = __OFADD__(v9++, 1);
    if (v12)
    {
      __break(1u);
      break;
    }
  }
  v49 = MEMORY[0x1E0DEE9D8];
  sub_1DC2AD400(0, v9, 0);
  result = v49;
  v42 = a5;
  if (v9)
  {
    v43 = *(_QWORD *)(a4 + 16);
    v44 = *a5;
    v41 = a4 + 32;
    v14 = a2;
    while (1)
    {
      v15 = v8 <= v14;
      if (v7 > 0)
        v15 = v8 >= v14;
      if (v15)
        break;
      if (__OFADD__(v8, v7))
        v16 = ((v8 + v7) >> 63) ^ 0x8000000000000000;
      else
        v16 = v8 + v7;
      if (__OFADD__(v8, v44))
        goto LABEL_73;
      if (v43 >= v8 + v44)
        v17 = v8 + v44;
      else
        v17 = v43;
      v18 = v17 - v8;
      if (v17 < v8)
        goto LABEL_74;
      if (v8 < 0)
        goto LABEL_75;
      v47 = result;
      v19 = v7;
      sub_1DC409A0C();
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain_n();
      v20 = swift_dynamicCastClass();
      if (!v20)
      {
        swift_bridgeObjectRelease();
        v20 = MEMORY[0x1E0DEE9D8];
      }
      v21 = *(_QWORD *)(v20 + 16);
      swift_release();
      if (v21 == v18)
      {
        v22 = (_QWORD *)swift_dynamicCastClass();
        v7 = v19;
        v14 = a2;
        if (!v22)
        {
          swift_bridgeObjectRelease();
          v22 = (_QWORD *)MEMORY[0x1E0DEE9D8];
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        v22 = (_QWORD *)MEMORY[0x1E0DEE9D8];
        v7 = v19;
        v14 = a2;
        if (v17 != v8)
        {
          if (v18 < 1)
          {
            if (v18 < 0)
              goto LABEL_79;
          }
          else
          {
            sub_1DC083594(0, &qword_1EDB3FFE8, (uint64_t)&type metadata for QuoteDetailViewComponent, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
            v22 = (_QWORD *)swift_allocObject();
            v25 = _swift_stdlib_malloc_size(v22);
            v22[2] = v18;
            v22[3] = 2 * v25 - 64;
          }
          v26 = v22 + 4;
          if (v41 + v8 < (unint64_t)v22 + v18 + 32 && (unint64_t)v26 < v41 + v17)
            goto LABEL_79;
          memcpy(v26, (const void *)(v41 + v8), v17 - v8);
        }
      }
      swift_bridgeObjectRelease();
      result = v47;
      v24 = *(_QWORD *)(v47 + 16);
      v23 = *(_QWORD *)(v47 + 24);
      if (v24 >= v23 >> 1)
      {
        sub_1DC2AD400(v23 > 1, v24 + 1, 1);
        v14 = a2;
        result = v47;
      }
      *(_QWORD *)(result + 16) = v24 + 1;
      *(_QWORD *)(result + 8 * v24 + 32) = v22;
      v8 = v16;
      if (!--v9)
        goto LABEL_41;
    }
    __break(1u);
LABEL_73:
    __break(1u);
LABEL_74:
    __break(1u);
LABEL_75:
    __break(1u);
  }
  else
  {
    v16 = v8;
    v14 = a2;
LABEL_41:
    v27 = v16 <= v14;
    if (v7 > 0)
      v27 = v16 >= v14;
    if (v27)
      return result;
    v48 = *v42;
    v45 = a4 + 32;
    while (1)
    {
      v28 = __OFADD__(v16, v7) ? ((v16 + v7) >> 63) ^ 0x8000000000000000 : v16 + v7;
      if (__OFADD__(v16, v48))
        break;
      if (*(_QWORD *)(a4 + 16) >= v16 + v48)
        v29 = v16 + v48;
      else
        v29 = *(_QWORD *)(a4 + 16);
      v30 = v29 - v16;
      if (v29 < v16)
        goto LABEL_77;
      if (v16 < 0)
        goto LABEL_78;
      v31 = result;
      sub_1DC409A0C();
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain_n();
      v32 = swift_dynamicCastClass();
      if (!v32)
      {
        swift_bridgeObjectRelease();
        v32 = MEMORY[0x1E0DEE9D8];
      }
      v33 = *(_QWORD *)(v32 + 16);
      swift_release();
      if (v33 == v30)
      {
        v34 = (_QWORD *)swift_dynamicCastClass();
        if (!v34)
        {
          swift_bridgeObjectRelease();
          v34 = (_QWORD *)MEMORY[0x1E0DEE9D8];
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        v34 = (_QWORD *)MEMORY[0x1E0DEE9D8];
        if (v29 != v16)
        {
          if (v30 < 1)
          {
            if (v30 < 0)
              goto LABEL_79;
          }
          else
          {
            sub_1DC083594(0, &qword_1EDB3FFE8, (uint64_t)&type metadata for QuoteDetailViewComponent, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
            v34 = (_QWORD *)swift_allocObject();
            v39 = _swift_stdlib_malloc_size(v34);
            v34[2] = v30;
            v34[3] = 2 * v39 - 64;
          }
          v40 = v34 + 4;
          if (v45 + v16 < (unint64_t)v34 + v30 + 32 && (unint64_t)v40 < v45 + v29)
            goto LABEL_79;
          memcpy(v40, (const void *)(v45 + v16), v29 - v16);
        }
      }
      swift_bridgeObjectRelease();
      result = v31;
      v50 = v31;
      v36 = *(_QWORD *)(v31 + 16);
      v35 = *(_QWORD *)(v31 + 24);
      v37 = a2;
      if (v36 >= v35 >> 1)
      {
        sub_1DC2AD400(v35 > 1, v36 + 1, 1);
        v37 = a2;
        result = v50;
      }
      *(_QWORD *)(result + 16) = v36 + 1;
      *(_QWORD *)(result + 8 * v36 + 32) = v34;
      v38 = v28 <= v37;
      if (v7 > 0)
        v38 = v28 >= v37;
      v16 = v28;
      if (v38)
        return result;
    }
  }
  __break(1u);
LABEL_77:
  __break(1u);
LABEL_78:
  __break(1u);
LABEL_79:
  result = sub_1DC40988C();
  __break(1u);
  return result;
}

uint64_t sub_1DC32EE90(uint64_t a1)
{
  return sub_1DC32EF70(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, double, double, double, double, double, double, double, double, double, double, double, double, double, double))sub_1DC32AFB8);
}

void sub_1DC32EE9C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB3FCD0)
  {
    sub_1DC1A4D18();
    v0 = sub_1DC409880();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB3FCD0);
  }
}

uint64_t sub_1DC32EEFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1DC089DA4(0, &qword_1EDB28BA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAE188], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1DC32EF58(CGRect *a1@<X8>)
{
  sub_1DC32AEBC(a1);
}

uint64_t sub_1DC32EF64(uint64_t a1)
{
  return sub_1DC32EF70(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, double, double, double, double, double, double, double, double, double, double, double, double, double, double))sub_1DC32B2E0);
}

uint64_t sub_1DC32EF70(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, double, double, double, double, double, double, double, double, double, double, double, double, double, double))
{
  uint64_t v2;

  return a2(a1, *(_QWORD *)(v2 + 80), *(_QWORD *)(v2 + 88), *(_QWORD *)(v2 + 96), *(_QWORD *)(v2 + 104), *(unsigned __int8 *)(v2 + 160), *(double *)(v2 + 16), *(double *)(v2 + 24), *(double *)(v2 + 32), *(double *)(v2 + 40), *(double *)(v2 + 48), *(double *)(v2 + 56), *(double *)(v2 + 64), *(double *)(v2 + 72), *(double *)(v2 + 112), *(double *)(v2 + 120), *(double *)(v2 + 128), *(double *)(v2 + 136), *(double *)(v2 + 144),
           *(double *)(v2 + 152));
}

_QWORD *sub_1DC32EFBC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *result;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t i;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int64_t v49;
  unsigned int v50;
  int v51;

  v48 = a2;
  v3 = sub_1DC404210();
  v45 = *(_QWORD *)(v3 - 8);
  v46 = v3;
  MEMORY[0x1E0C80A78](v3);
  v44 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC32EE9C();
  result = (_QWORD *)sub_1DC40985C();
  v6 = 0;
  v47 = a1;
  v9 = *(_QWORD *)(a1 + 64);
  v8 = a1 + 64;
  v7 = v9;
  v10 = 1 << *(_BYTE *)(v8 - 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & v7;
  v40 = v8;
  v41 = (unint64_t)(v10 + 63) >> 6;
  v50 = *MEMORY[0x1E0DB6B40];
  v42 = result + 8;
  v43 = result;
  v13 = v44;
  v14 = v45;
  v15 = v46;
  if ((v11 & v7) == 0)
    goto LABEL_5;
LABEL_4:
  v16 = __clz(__rbit64(v12));
  v12 &= v12 - 1;
  v49 = v6;
  for (i = v16 | (v6 << 6); ; i = __clz(__rbit64(v19)) + (v20 << 6))
  {
    v22 = *(_QWORD *)(v47 + 56);
    v51 = *(unsigned __int8 *)(*(_QWORD *)(v47 + 48) + i);
    v23 = v22 + 48 * i;
    v24 = *(void **)(v23 + 32);
    v25 = *(_QWORD *)(v23 + 40);
    (*(void (**)(char *, _QWORD, uint64_t))(v14 + 104))(v13, v50, v15);
    v26 = v24;
    sub_1DC404204();
    v28 = v27;
    v30 = v29;
    v32 = v31;
    v34 = v33;
    (*(void (**)(char *, uint64_t))(v14 + 8))(v13, v15);
    result = v43;
    *(_QWORD *)((char *)v42 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    *(_BYTE *)(result[6] + i) = v51;
    v35 = (_QWORD *)(result[7] + 48 * i);
    *v35 = v28;
    v35[1] = v30;
    v35[2] = v32;
    v35[3] = v34;
    v35[4] = v26;
    v35[5] = v25;
    v36 = result[2];
    v37 = __OFADD__(v36, 1);
    v38 = v36 + 1;
    if (v37)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    result[2] = v38;
    v6 = v49;
    if (v12)
      goto LABEL_4;
LABEL_5:
    v18 = v6 + 1;
    if (__OFADD__(v6, 1))
      goto LABEL_24;
    if (v18 >= v41)
      return result;
    v19 = *(_QWORD *)(v40 + 8 * v18);
    v20 = v6 + 1;
    if (!v19)
    {
      v20 = v6 + 2;
      if (v6 + 2 >= v41)
        return result;
      v19 = *(_QWORD *)(v40 + 8 * v20);
      if (!v19)
      {
        v20 = v6 + 3;
        if (v6 + 3 >= v41)
          return result;
        v19 = *(_QWORD *)(v40 + 8 * v20);
        if (!v19)
          break;
      }
    }
LABEL_18:
    v12 = (v19 - 1) & v19;
    v49 = v20;
  }
  v21 = v6 + 4;
  if (v6 + 4 >= v41)
    return result;
  v19 = *(_QWORD *)(v40 + 8 * v21);
  if (v19)
  {
    v20 = v6 + 4;
    goto LABEL_18;
  }
  while (1)
  {
    v20 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v20 >= v41)
      return result;
    v19 = *(_QWORD *)(v40 + 8 * v20);
    ++v21;
    if (v19)
      goto LABEL_18;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1DC32F288()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1DC32F2AC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ForYouSection();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DC32F2E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ForYouSection();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t initializeBufferWithCopyOfBuffer for QuoteDetailViewLayoutAttributesFactory.SizedComponent(uint64_t a1, uint64_t a2)
{
  void *v3;
  id v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(void **)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v3;
  v4 = v3;
  return a1;
}

void destroy for WelcomeViewAnimatorOptions(uint64_t a1)
{

}

_QWORD *assignWithCopy for QuoteDetailViewLayoutAttributesFactory.SizedComponent(_QWORD *a1, _QWORD *a2)
{
  void *v3;
  void *v4;
  id v5;

  *a1 = *a2;
  a1[1] = a2[1];
  v3 = (void *)a2[2];
  v4 = (void *)a1[2];
  a1[2] = v3;
  v5 = v3;

  return a1;
}

uint64_t assignWithTake for QuoteDetailViewLayoutAttributesFactory.SizedComponent(uint64_t a1, uint64_t a2)
{
  void *v3;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);

  return a1;
}

uint64_t getEnumTagSinglePayload for LegacyTopStoriesForYouFeedGroupConfig(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LegacyTopStoriesForYouFeedGroupConfig(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for QuoteDetailViewLayoutAttributesFactory.SizedComponent()
{
  return &type metadata for QuoteDetailViewLayoutAttributesFactory.SizedComponent;
}

uint64_t sub_1DC32F480(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1DC32FFEC(a4);
}

uint64_t sub_1DC32F4A4@<X0>(uint64_t a1@<X3>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = sub_1DC330144(a1);
  *a2 = result & 1;
  return result;
}

void sub_1DC32F4D4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  char *v31;
  int v32;
  int v33;
  char *v34;
  int v35;
  uint64_t ObjCClassFromMetadata;
  id v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  id v43;
  void (*v44)(char *, uint64_t);
  char *v45;
  int v46;
  int v47;
  uint64_t v48;
  id v49;
  void *v50;
  void (*v51)(char *, uint64_t);
  uint64_t v52;
  id v53;
  void (*v54)(char *, uint64_t);
  char *v55;
  char *v56;
  char *v57;
  char *v58;
  char *v59;
  char *v60;

  v2 = sub_1DC400940();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v55 = (char *)&v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v56 = (char *)&v55 - v6;
  MEMORY[0x1E0C80A78](v7);
  v57 = (char *)&v55 - v8;
  MEMORY[0x1E0C80A78](v9);
  v58 = (char *)&v55 - v10;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v55 - v12;
  MEMORY[0x1E0C80A78](v14);
  v59 = (char *)&v55 - v15;
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v55 - v17;
  MEMORY[0x1E0C80A78](v19);
  v60 = (char *)&v55 - v20;
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v55 - v22;
  MEMORY[0x1E0C80A78](v24);
  v26 = (char *)&v55 - v25;
  v27 = sub_1DC400970();
  v28 = *(_QWORD *)(v27 - 8);
  v29 = MEMORY[0x1E0C80A78](v27);
  v31 = (char *)&v55 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v28 + 16))(v31, a1, v27, v29);
  v32 = (*(uint64_t (**)(char *, uint64_t))(v28 + 88))(v31, v27);
  if (v32 == *MEMORY[0x1E0DAE8C0])
  {
    (*(void (**)(char *, uint64_t))(v28 + 96))(v31, v27);
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v26, v31, v2);
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v23, v26, v2);
    v33 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v23, v2);
    if (v33 == *MEMORY[0x1E0DAE908] || v33 == *MEMORY[0x1E0DAE8E8])
    {
      type metadata accessor for Localized();
      ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
      v37 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
      sub_1DC3FFC80();

      (*(void (**)(char *, uint64_t))(v3 + 8))(v26, v2);
    }
    else
    {
      v44 = *(void (**)(char *, uint64_t))(v3 + 8);
      v44(v26, v2);
      v44(v23, v2);
    }
    goto LABEL_25;
  }
  if (v32 != *MEMORY[0x1E0DAE8D0])
  {
    if (v32 == *MEMORY[0x1E0DAE948])
    {
      (*(void (**)(char *, uint64_t))(v28 + 96))(v31, v27);
      v38 = v3;
      v39 = v59;
      v40 = v2;
      (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v59, v31, v2);
      (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v13, v39, v2);
      v41 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v13, v2);
      if (v41 != *MEMORY[0x1E0DAE908] && v41 != *MEMORY[0x1E0DAE8E8])
      {
        v51 = *(void (**)(char *, uint64_t))(v3 + 8);
        v51(v39, v2);
        v51(v13, v2);
        goto LABEL_25;
      }
      goto LABEL_24;
    }
    if (v32 == *MEMORY[0x1E0DAE930])
    {
      (*(void (**)(char *, uint64_t))(v28 + 96))(v31, v27);
      v38 = v3;
      v39 = v58;
      v40 = v2;
      (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v58, v31, v2);
      v45 = v57;
      (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v57, v39, v2);
      v46 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v45, v2);
      if (v46 == *MEMORY[0x1E0DAE908] || v46 == *MEMORY[0x1E0DAE8E8])
      {
LABEL_24:
        type metadata accessor for Localized();
        v48 = swift_getObjCClassFromMetadata();
        v49 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, v48);
        sub_1DC3FFC80();

        (*(void (**)(char *, uint64_t))(v38 + 8))(v39, v40);
        goto LABEL_25;
      }
    }
    else
    {
      if (v32 != *MEMORY[0x1E0DAE8E0])
      {
        if (v32 == *MEMORY[0x1E0DAE928])
        {
          type metadata accessor for Localized();
          v52 = swift_getObjCClassFromMetadata();
          v53 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, v52);
          sub_1DC3FFC80();

        }
        else
        {
          (*(void (**)(char *, uint64_t))(v28 + 8))(v31, v27);
        }
        goto LABEL_25;
      }
      (*(void (**)(char *, uint64_t))(v28 + 96))(v31, v27);
      v38 = v3;
      v39 = v56;
      v40 = v2;
      (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v56, v31, v2);
      v45 = v55;
      (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v55, v39, v2);
      v47 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v45, v2);
      if (v47 == *MEMORY[0x1E0DAE908] || v47 == *MEMORY[0x1E0DAE8E8])
        goto LABEL_24;
    }
    v54 = *(void (**)(char *, uint64_t))(v38 + 8);
    v54(v39, v40);
    v54(v45, v40);
    goto LABEL_25;
  }
  (*(void (**)(char *, uint64_t))(v28 + 96))(v31, v27);
  v34 = v60;
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v60, v31, v2);
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v18, v34, v2);
  v35 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v18, v2);
  if (v35 == *MEMORY[0x1E0DAE908] || v35 == *MEMORY[0x1E0DAE8E8])
  {
    type metadata accessor for Localized();
    v42 = swift_getObjCClassFromMetadata();
    v43 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, v42);
    sub_1DC3FFC80();

    (*(void (**)(char *, uint64_t))(v3 + 8))(v34, v2);
LABEL_25:
    v50 = (void *)sub_1DC408A1C();
    swift_bridgeObjectRelease();
    MEMORY[0x1DF0CA4D8](v50);

    return;
  }
  sub_1DC4099DC();
  __break(1u);
}

uint64_t sub_1DC32FFEC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t result;
  uint64_t v15;

  v2 = v1;
  v4 = sub_1DC400970();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for SortWatchlistCommandContext(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_BYTE *)(a1 + *(int *)(v11 + 24));
  sub_1DC3305B0(a1, (uint64_t)v10);
  if ((v12 & 1) != 0)
  {
    sub_1DC0926D8((uint64_t)v10, type metadata accessor for SortWatchlistCommandContext);
  }
  else
  {
    sub_1DC401240();
    v13 = sub_1DC400910();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    result = sub_1DC0926D8((uint64_t)v10, type metadata accessor for SortWatchlistCommandContext);
    if ((v13 & 1) != 0)
      return result;
  }
  sub_1DC32F4D4(a1 + *(int *)(v8 + 20));
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 40));
  sub_1DC400A9C();
  return swift_release();
}

uint64_t sub_1DC330144(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, unint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  int v34;
  char *v35;
  char *v36;
  char *v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t);
  _QWORD v41[2];
  char *v42;
  char *v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v3 = sub_1DC400940();
  v46 = *(_QWORD *)(v3 - 8);
  v47 = v3;
  MEMORY[0x1E0C80A78](v3);
  v45 = (char *)v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v44 = (char *)v41 - v6;
  v7 = sub_1DC400970();
  v48 = *(_QWORD *)(v7 - 8);
  v49 = v7;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC176BD8(0);
  MEMORY[0x1E0C80A78](v10);
  v50 = (char *)v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1DC40124C();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)v41 - v17;
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 40));
  v19 = sub_1DC400ACC();
  v20 = *(_QWORD *)(v19 + 16);
  if (v20)
  {
    v42 = v9;
    v43 = v18;
    v51 = a1;
    v21 = v13;
    v22 = v19 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
    v23 = *(_QWORD *)(v21 + 72);
    v24 = v21;
    v25 = *(void (**)(char *, unint64_t, uint64_t))(v21 + 16);
    v41[1] = v19;
    swift_bridgeObjectRetain();
    while (1)
    {
      v25(v15, v22, v12);
      v26 = sub_1DC4011E0();
      v28 = v27;
      if (v26 == sub_1DC4011E0() && v28 == v29)
        break;
      v30 = sub_1DC4099E8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v30 & 1) != 0)
        goto LABEL_11;
      (*(void (**)(char *, uint64_t))(v24 + 8))(v15, v12);
      v22 += v23;
      if (!--v20)
      {
        swift_bridgeObjectRelease();
        v31 = 1;
        a1 = v51;
        v13 = v24;
        v9 = v42;
        v18 = v43;
        goto LABEL_9;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_11:
    swift_bridgeObjectRelease();
    v13 = v24;
    v32 = (uint64_t)v50;
    (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v50, v15, v12);
    v31 = 0;
    a1 = v51;
    v9 = v42;
    v18 = v43;
  }
  else
  {
    v31 = 1;
LABEL_9:
    v32 = (uint64_t)v50;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56))(v32, v31, 1, v12);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v32, 1, v12) == 1)
  {
    sub_1DC0926D8(v32, (uint64_t (*)(_QWORD))sub_1DC176BD8);
    v33 = 0;
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 32))(v18, v32, v12);
    v34 = *(unsigned __int8 *)(a1 + *(int *)(type metadata accessor for SortWatchlistCommandContext(0) + 24));
    sub_1DC401240();
    if (v34 == 1)
    {
      v35 = v9;
      v36 = v44;
      sub_1DC40094C();
      (*(void (**)(char *, uint64_t))(v48 + 8))(v35, v49);
      v37 = v45;
      sub_1DC40094C();
      sub_1DC330568();
      v38 = v47;
      sub_1DC408C80();
      sub_1DC408C80();
      v33 = v53 == v52;
      v39 = *(void (**)(char *, uint64_t))(v46 + 8);
      v39(v37, v38);
      v39(v36, v38);
    }
    else
    {
      v33 = sub_1DC400910();
      (*(void (**)(char *, uint64_t))(v48 + 8))(v9, v49);
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v18, v12);
  }
  return v33 & 1;
}

unint64_t sub_1DC330568()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1F0352118;
  if (!qword_1F0352118)
  {
    v1 = sub_1DC400940();
    result = MEMORY[0x1DF0CAB8C](MEMORY[0x1E0DAE918], v1);
    atomic_store(result, (unint64_t *)&qword_1F0352118);
  }
  return result;
}

uint64_t sub_1DC3305B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SortWatchlistCommandContext(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for AdComponentTrackerFactory()
{
  return objc_opt_self();
}

uint64_t sub_1DC330614@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v8[2];

  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 16);
  sub_1DC0824D4(v3 + 24, (uint64_t)v8);
  v5 = type metadata accessor for AdComponentTracker();
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = v4;
  sub_1DC097DD0(v8, v6 + 24);
  a1[3] = v5;
  a1[4] = sub_1DC330698();
  *a1 = v6;
  return swift_retain();
}

unint64_t sub_1DC330698()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EDB2FFB0;
  if (!qword_1EDB2FFB0)
  {
    v1 = type metadata accessor for AdComponentTracker();
    result = MEMORY[0x1DF0CAB8C](&unk_1DC414664, v1);
    atomic_store(result, (unint64_t *)&qword_1EDB2FFB0);
  }
  return result;
}

uint64_t sub_1DC3306E0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC3306EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1DC4052FC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_1DC330728()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC330734(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1DC4052FC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for CreateWatchlistViewLayoutOptions()
{
  uint64_t result;

  result = qword_1F0352178;
  if (!qword_1F0352178)
    return swift_getSingletonMetadata();
  return result;
}

ValueMetadata *type metadata accessor for StockFeedRelayoutBlueprintModifier()
{
  return &type metadata for StockFeedRelayoutBlueprintModifier;
}

uint64_t sub_1DC3307C0(uint64_t a1, void (*a2)(char *))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  sub_1DC165EEC(0, &qword_1EDB2A278, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB9A28]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v15 - v7;
  sub_1DC19E06C();
  v10 = &v8[*(int *)(v9 + 48)];
  sub_1DC165EEC(0, (unint64_t *)&qword_1EDB2AB10, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790]);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v8, a1, v11);
  v12 = *MEMORY[0x1E0DB7FB8];
  v13 = sub_1DC404984();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v10, v12, v13);
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0DB9A00], v5);
  a2(v8);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1DC3308E8()
{
  unint64_t result;

  result = qword_1EDB40F10;
  if (!qword_1EDB40F10)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC428D84, &type metadata for StockFeedRelayoutBlueprintModifier);
    atomic_store(result, (unint64_t *)&qword_1EDB40F10);
  }
  return result;
}

uint64_t sub_1DC33092C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC330938(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1DC4052FC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_1DC330974()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC330980(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1DC4052FC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for StockFeedEarningsViewLayoutOptions()
{
  uint64_t result;

  result = qword_1EDB3C8F0;
  if (!qword_1EDB3C8F0)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1DC3309FC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  id v10;

  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC8StocksUI20TickerCollectionView_autoScrolling) != 1
    || UIAccessibilityIsReduceMotionEnabled()
    || UIAccessibilityIsVoiceOverRunning())
  {
    v1 = OBJC_IVAR____TtC8StocksUI20TickerCollectionView_displayLink;
    v2 = *(void **)(v0 + OBJC_IVAR____TtC8StocksUI20TickerCollectionView_displayLink);
    if (v2)
    {
      objc_msgSend(v2, sel_invalidate);
      v2 = *(void **)(v0 + v1);
    }
    *(_QWORD *)(v0 + v1) = 0;
    goto LABEL_7;
  }
  v3 = OBJC_IVAR____TtC8StocksUI20TickerCollectionView_displayLink;
  if (!*(_QWORD *)(v0 + OBJC_IVAR____TtC8StocksUI20TickerCollectionView_displayLink))
  {
    v4 = objc_msgSend((id)objc_opt_self(), sel_displayLinkWithTarget_selector_, v0, sel_autoScrollWithDisplayWithDisplayLink_);
    v5 = *(void **)(v0 + v3);
    *(_QWORD *)(v0 + v3) = v4;

    v6 = *(void **)(v0 + v3);
    if (v6)
    {
      objc_msgSend(v6, sel_setPreferredFramesPerSecond_, 60);
      v7 = *(void **)(v0 + v3);
      if (v7)
      {
        v8 = (void *)objc_opt_self();
        v9 = v7;
        v10 = objc_msgSend(v8, sel_currentRunLoop);
        objc_msgSend(v9, sel_addToRunLoop_forMode_, v10, *MEMORY[0x1E0C99860]);

        v2 = v10;
LABEL_7:

      }
    }
  }
}

double sub_1DC330B4C()
{
  uint64_t v0;
  _BYTE *v1;

  v1 = (_BYTE *)(v0 + OBJC_IVAR____TtC8StocksUI20TickerCollectionView____lazy_storage___delta);
  if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC8StocksUI20TickerCollectionView____lazy_storage___delta + 8) & 1) == 0)
    return *(double *)v1;
  *(_QWORD *)v1 = 0x402E000000000000;
  v1[8] = 0;
  return 15.0;
}

void sub_1DC330B7C(void *a1)
{
  void *v1;
  id v3;
  double v4;
  double v5;
  double v6;
  double v7;
  id v8;
  double v9;
  double v10;
  double v11;

  v3 = objc_msgSend(v1, sel_window);

  if (v3)
  {
    objc_msgSend(v1, sel_contentSize);
    if (v4 != 0.0)
    {
      v5 = sub_1DC330B4C();
      objc_msgSend(a1, sel_duration);
      v7 = fmax(v5 * v6, 0.25);
      v8 = objc_msgSend(v1, sel_effectiveUserInterfaceLayoutDirection);
      objc_msgSend(v1, sel_contentOffset);
      v10 = v9;
      objc_msgSend(v1, sel_contentOffset);
      v11 = -v7;
      if (v8 != (id)1)
        v11 = v7;
      objc_msgSend(v1, sel_setContentOffset_, v10 + v11);
    }
  }
  else
  {
    *((_BYTE *)v1 + OBJC_IVAR____TtC8StocksUI20TickerCollectionView_autoScrolling) = 0;
    sub_1DC3309FC();
  }
}

id sub_1DC330D9C()
{
  void *v0;
  objc_class *ObjectType;
  void *v2;
  id v3;
  id v4;
  objc_super v6;

  ObjectType = (objc_class *)swift_getObjectType();
  v2 = (void *)objc_opt_self();
  v3 = objc_msgSend(v2, sel_defaultCenter);
  objc_msgSend(v3, sel_removeObserver_name_object_, v0, *MEMORY[0x1E0DC45B0], 0);

  v4 = objc_msgSend(v2, sel_defaultCenter);
  objc_msgSend(v4, sel_removeObserver_name_object_, v0, *MEMORY[0x1E0DC46F0], 0);

  v6.receiver = v0;
  v6.super_class = ObjectType;
  return objc_msgSendSuper2(&v6, sel_dealloc);
}

void sub_1DC330EA4()
{
  _BYTE *v0;
  char *v1;
  char *v2;
  id v3;
  unsigned __int8 v4;

  v0[OBJC_IVAR____TtC8StocksUI20TickerCollectionView_autoScrolling] = 0;
  v1 = &v0[OBJC_IVAR____TtC8StocksUI20TickerCollectionView____lazy_storage___delta];
  *(_QWORD *)v1 = 0;
  v1[8] = 1;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8StocksUI20TickerCollectionView_minimumScrollDelta] = 0x3FD0000000000000;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8StocksUI20TickerCollectionView_displayLink] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8StocksUI20TickerCollectionView_preferredFrameRate] = 60;
  v2 = &v0[OBJC_IVAR____TtC8StocksUI20TickerCollectionView_tickerCollectionModel];
  v3 = objc_msgSend((id)objc_opt_self(), sel_sharedApplication);
  v4 = objc_msgSend(v3, sel_isRunningPerformanceTest);

  *(_QWORD *)v2 = 0x4008000000000000;
  *((_QWORD *)v2 + 1) = 4;
  v2[16] = v4;

  sub_1DC409838();
  __break(1u);
}

_QWORD *sub_1DC330FAC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, char *, uint64_t);
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  char *v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  void (*v88)(char *, char *, uint64_t);
  char *v89;
  char *v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  _QWORD *v101;
  uint64_t v102;
  char *v103;
  char *v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  void (*v113)(char *, char *, uint64_t);
  char *v114;
  char *v115;
  uint64_t v116;
  char *v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  char *v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  char *v153;
  uint64_t v154;
  char *v155;
  char *v156;
  char *v157;
  void (*v158)(char *, char *, uint64_t);
  char *v159;
  void (*v160)(char *, char *, uint64_t);
  char *v161;
  void (*v162)(char *, char *, uint64_t);
  char *v163;
  void (*v164)(char *, char *, uint64_t);
  char *v165;
  uint64_t v166;
  char *v167;
  uint64_t v168;
  char *v169;
  char *v170;
  int *v171;
  int *v172;
  char *v173;
  int *v174;
  int *v175;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v15 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v15 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v7 = sub_1DC4010E4();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
        v8 = (int *)type metadata accessor for StockFeedMastheadModel();
        v9 = v8[5];
        v10 = (char *)a1 + v9;
        v11 = (char *)a2 + v9;
        v12 = sub_1DC401030();
        v13 = *(_QWORD *)(v12 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
        {
          sub_1DC0FED34(0);
          memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
        }
        v53 = v8[6];
        v54 = (char *)a1 + v53;
        v55 = (char *)a2 + v53;
        v56 = sub_1DC400F7C();
        v57 = *(_QWORD *)(v56 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v57 + 48))(v55, 1, v56))
        {
          sub_1DC089DA4(0, (unint64_t *)&unk_1EDB28D90, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAEFA8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
          memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v57 + 16))(v54, v55, v56);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v57 + 56))(v54, 0, 1, v56);
        }
        v75 = v8[7];
        v76 = (_QWORD *)((char *)a1 + v75);
        v77 = (char *)a2 + v75;
        v78 = *(_QWORD *)((char *)a2 + v75 + 8);
        *v76 = *(_QWORD *)((char *)a2 + v75);
        v76[1] = v78;
        v79 = (char *)a1 + v75;
        v170 = (char *)a1 + v75;
        v172 = v8;
        v174 = (int *)type metadata accessor for QuoteSummaryViewModel();
        v80 = v174[5];
        v81 = &v79[v80];
        v82 = &v77[v80];
        *(_QWORD *)v81 = *(_QWORD *)&v77[v80];
        v81[8] = v77[v80 + 8];
        *((_QWORD *)v81 + 2) = *(_QWORD *)&v77[v80 + 16];
        v81[24] = v77[v80 + 24];
        *((_QWORD *)v81 + 4) = *(_QWORD *)&v77[v80 + 32];
        v81[40] = v77[v80 + 40];
        v83 = *(_QWORD *)&v77[v80 + 56];
        *((_QWORD *)v81 + 6) = *(_QWORD *)&v77[v80 + 48];
        *((_QWORD *)v81 + 7) = v83;
        v84 = *(_QWORD *)&v77[v80 + 72];
        *((_QWORD *)v81 + 8) = *(_QWORD *)&v77[v80 + 64];
        *((_QWORD *)v81 + 9) = v84;
        v81[80] = v77[v80 + 80];
        v85 = type metadata accessor for PriceViewModel();
        v86 = *(int *)(v85 + 40);
        v163 = &v82[v86];
        v167 = &v81[v86];
        v87 = sub_1DC4011C8();
        v88 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v87 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v90 = v163;
        v89 = v167;
        v164 = v88;
        v168 = v87;
        v88(v89, v90, v87);
        v91 = *(int *)(v85 + 44);
        v92 = &v81[v91];
        v93 = &v82[v91];
        v94 = sub_1DC400118();
        v160 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v94 - 8) + 16);
        v160(v92, v93, v94);
        v95 = v174[6];
        v96 = &v170[v95];
        v97 = &v77[v95];
        v98 = *(_QWORD *)(v85 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v98 + 48))(&v77[v95], 1, v85))
        {
          sub_1DC089DA4(0, (unint64_t *)&qword_1EDB2D5E8, (uint64_t (*)(uint64_t))type metadata accessor for PriceViewModel, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
          memcpy(v96, v97, *(_QWORD *)(*(_QWORD *)(v99 - 8) + 64));
        }
        else
        {
          *(_QWORD *)v96 = *(_QWORD *)v97;
          v96[8] = v97[8];
          *((_QWORD *)v96 + 2) = *((_QWORD *)v97 + 2);
          v96[24] = v97[24];
          *((_QWORD *)v96 + 4) = *((_QWORD *)v97 + 4);
          v96[40] = v97[40];
          v125 = *((_QWORD *)v97 + 7);
          *((_QWORD *)v96 + 6) = *((_QWORD *)v97 + 6);
          *((_QWORD *)v96 + 7) = v125;
          v126 = *((_QWORD *)v97 + 9);
          *((_QWORD *)v96 + 8) = *((_QWORD *)v97 + 8);
          *((_QWORD *)v96 + 9) = v126;
          v96[80] = v97[80];
          v127 = *(int *)(v85 + 40);
          v156 = &v97[v127];
          v159 = &v96[v127];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v164(v159, v156, v168);
          v160(&v96[*(int *)(v85 + 44)], &v97[*(int *)(v85 + 44)], v94);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v98 + 56))(v96, 0, 1, v85);
        }
        v128 = v174[7];
        v129 = &v170[v128];
        v130 = &v77[v128];
        v131 = sub_1DC4008EC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v131 - 8) + 16))(v129, v130, v131);
        v132 = v174[8];
        v133 = &v170[v132];
        v134 = &v77[v132];
        v135 = sub_1DC4002BC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v135 - 8) + 16))(v133, v134, v135);
        v136 = v174[9];
        v137 = &v170[v136];
        v138 = &v77[v136];
        v139 = *((_QWORD *)v138 + 1);
        *(_QWORD *)v137 = *(_QWORD *)v138;
        *((_QWORD *)v137 + 1) = v139;
        *((_BYTE *)a1 + v172[8]) = *((_BYTE *)a2 + v172[8]);
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 1u:
        v17 = sub_1DC4010E4();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(a1, a2, v17);
        v18 = (int *)type metadata accessor for StockFeedMastheadModel();
        v19 = v18[5];
        v20 = (char *)a1 + v19;
        v21 = (char *)a2 + v19;
        v22 = sub_1DC401030();
        v23 = *(_QWORD *)(v22 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
        {
          sub_1DC0FED34(0);
          memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v20, v21, v22);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
        }
        v59 = v18[6];
        v60 = (char *)a1 + v59;
        v61 = (char *)a2 + v59;
        v62 = sub_1DC400F7C();
        v63 = *(_QWORD *)(v62 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v63 + 48))(v61, 1, v62))
        {
          sub_1DC089DA4(0, (unint64_t *)&unk_1EDB28D90, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAEFA8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
          memcpy(v60, v61, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v63 + 16))(v60, v61, v62);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v63 + 56))(v60, 0, 1, v62);
        }
        v100 = v18[7];
        v101 = (_QWORD *)((char *)a1 + v100);
        v102 = *(_QWORD *)((char *)a2 + v100 + 8);
        v169 = (char *)a2 + v100;
        v103 = (char *)a2 + v100;
        *v101 = *(_QWORD *)((char *)a2 + v100);
        v101[1] = v102;
        v104 = (char *)a1 + v100;
        v171 = v18;
        v173 = (char *)a1 + v100;
        v175 = (int *)type metadata accessor for QuoteSummaryViewModel();
        v105 = v175[5];
        v106 = &v104[v105];
        v107 = &v103[v105];
        *(_QWORD *)v106 = *(_QWORD *)&v103[v105];
        v106[8] = v103[v105 + 8];
        *((_QWORD *)v106 + 2) = *(_QWORD *)&v103[v105 + 16];
        v106[24] = v103[v105 + 24];
        *((_QWORD *)v106 + 4) = *(_QWORD *)&v103[v105 + 32];
        v106[40] = v103[v105 + 40];
        v108 = *(_QWORD *)&v103[v105 + 56];
        *((_QWORD *)v106 + 6) = *(_QWORD *)&v103[v105 + 48];
        *((_QWORD *)v106 + 7) = v108;
        v109 = *(_QWORD *)&v103[v105 + 72];
        *((_QWORD *)v106 + 8) = *(_QWORD *)&v103[v105 + 64];
        *((_QWORD *)v106 + 9) = v109;
        v106[80] = v103[v105 + 80];
        v110 = type metadata accessor for PriceViewModel();
        v111 = *(int *)(v110 + 40);
        v161 = &v107[v111];
        v165 = &v106[v111];
        v112 = sub_1DC4011C8();
        v113 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v112 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v115 = v161;
        v114 = v165;
        v162 = v113;
        v166 = v112;
        v113(v114, v115, v112);
        v116 = *(int *)(v110 + 44);
        v117 = &v106[v116];
        v118 = &v107[v116];
        v119 = sub_1DC400118();
        v158 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v119 - 8) + 16);
        v158(v117, v118, v119);
        v120 = v175[6];
        v121 = &v173[v120];
        v122 = &v169[v120];
        v123 = *(_QWORD *)(v110 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v123 + 48))(&v169[v120], 1, v110))
        {
          sub_1DC089DA4(0, (unint64_t *)&qword_1EDB2D5E8, (uint64_t (*)(uint64_t))type metadata accessor for PriceViewModel, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
          memcpy(v121, v122, *(_QWORD *)(*(_QWORD *)(v124 - 8) + 64));
        }
        else
        {
          *(_QWORD *)v121 = *(_QWORD *)v122;
          v121[8] = v122[8];
          *((_QWORD *)v121 + 2) = *((_QWORD *)v122 + 2);
          v121[24] = v122[24];
          *((_QWORD *)v121 + 4) = *((_QWORD *)v122 + 4);
          v121[40] = v122[40];
          v140 = *((_QWORD *)v122 + 7);
          *((_QWORD *)v121 + 6) = *((_QWORD *)v122 + 6);
          *((_QWORD *)v121 + 7) = v140;
          v141 = *((_QWORD *)v122 + 9);
          *((_QWORD *)v121 + 8) = *((_QWORD *)v122 + 8);
          *((_QWORD *)v121 + 9) = v141;
          v121[80] = v122[80];
          v142 = *(int *)(v110 + 40);
          v155 = &v122[v142];
          v157 = &v121[v142];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v162(v157, v155, v166);
          v158(&v121[*(int *)(v110 + 44)], &v122[*(int *)(v110 + 44)], v119);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v123 + 56))(v121, 0, 1, v110);
        }
        v143 = v175[7];
        v144 = &v173[v143];
        v145 = &v169[v143];
        v146 = sub_1DC4008EC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v146 - 8) + 16))(v144, v145, v146);
        v147 = v175[8];
        v148 = &v173[v147];
        v149 = &v169[v147];
        v150 = sub_1DC4002BC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v150 - 8) + 16))(v148, v149, v150);
        v151 = v175[9];
        v152 = &v173[v151];
        v153 = &v169[v151];
        v154 = *((_QWORD *)v153 + 1);
        *(_QWORD *)v152 = *(_QWORD *)v153;
        *((_QWORD *)v152 + 1) = v154;
        *((_BYTE *)a1 + v171[8]) = *((_BYTE *)a2 + v171[8]);
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 2u:
        v25 = sub_1DC4010E4();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(a1, a2, v25);
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
        v26 = sub_1DC4010E4();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(a1, a2, v26);
        sub_1DC14227C();
        v28 = v27;
        v29 = *(int *)(v27 + 48);
        v30 = (char *)a1 + v29;
        v31 = (char *)a2 + v29;
        v32 = sub_1DC401030();
        v33 = *(_QWORD *)(v32 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
        {
          sub_1DC0FED34(0);
          memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v30, v31, v32);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
        }
        v65 = *(int *)(v28 + 64);
        v66 = (char *)a1 + v65;
        v67 = (char *)a2 + v65;
        v68 = sub_1DC400370();
        v69 = *(_QWORD *)(v68 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v69 + 48))(v67, 1, v68))
        {
          sub_1DC133AB4(0);
          memcpy(v66, v67, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v69 + 16))(v66, v67, v68);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v69 + 56))(v66, 0, 1, v68);
        }
        swift_storeEnumTagMultiPayload();
        break;
      case 4u:
        v35 = sub_1DC4010E4();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(a1, a2, v35);
        v36 = (int *)type metadata accessor for StockEarningsModel();
        v37 = v36[5];
        v38 = (char *)a1 + v37;
        v39 = (char *)a2 + v37;
        v40 = sub_1DC3FFFEC();
        v41 = *(_QWORD *)(v40 - 8);
        v42 = *(void (**)(char *, char *, uint64_t))(v41 + 16);
        v42(v38, v39, v40);
        v43 = v36[6];
        v44 = (char *)a1 + v43;
        v45 = (char *)a2 + v43;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))((char *)a2 + v43, 1, v40))
        {
          sub_1DC089DA4(0, &qword_1EDB28AC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
          memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
        }
        else
        {
          v42(v44, v45, v40);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v44, 0, 1, v40);
        }
        v71 = v36[7];
        v72 = (char *)a1 + v71;
        v73 = (char *)a2 + v71;
        v74 = sub_1DC400220();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v74 - 8) + 16))(v72, v73, v74);
        *((_BYTE *)a1 + v36[8]) = *((_BYTE *)a2 + v36[8]);
        *((_BYTE *)a1 + v36[9]) = *((_BYTE *)a2 + v36[9]);
        swift_storeEnumTagMultiPayload();
        break;
      case 5u:
        v47 = a2[1];
        *a1 = *a2;
        a1[1] = v47;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 6u:
        sub_1DC0F4CCC();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v48 - 8) + 16))(a1, a2, v48);
        swift_storeEnumTagMultiPayload();
        break;
      case 7u:
        v49 = a2[1];
        *a1 = *a2;
        a1[1] = v49;
        a1[2] = a2[2];
        swift_bridgeObjectRetain();
        swift_retain();
        swift_storeEnumTagMultiPayload();
        break;
      case 8u:
        v50 = sub_1DC407EAC();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v50 - 8) + 16))(a1, a2, v50);
        sub_1DC165FB8();
        *(_QWORD *)((char *)a1 + *(int *)(v51 + 48)) = *(_QWORD *)((char *)a2 + *(int *)(v51 + 48));
        swift_retain();
        swift_storeEnumTagMultiPayload();
        break;
      case 9u:
        v52 = sub_1DC407CFC();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v52 - 8) + 16))(a1, a2, v52);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_1DC331C10(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(uint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t (*v45)(uint64_t, uint64_t);
  uint64_t v46;

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
    case 1:
      v3 = sub_1DC4010E4();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
      v4 = (int *)type metadata accessor for StockFeedMastheadModel();
      v5 = a1 + v4[5];
      v6 = sub_1DC401030();
      v7 = *(_QWORD *)(v6 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6))
        (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
      v8 = a1 + v4[6];
      v9 = sub_1DC400F7C();
      v10 = *(_QWORD *)(v9 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
        (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
      v11 = a1 + v4[7];
      swift_bridgeObjectRelease();
      v12 = (int *)type metadata accessor for QuoteSummaryViewModel();
      v13 = v11 + v12[5];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v14 = type metadata accessor for PriceViewModel();
      v15 = v13 + *(int *)(v14 + 40);
      v16 = sub_1DC4011C8();
      v17 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8);
      v17(v15, v16);
      v18 = v13 + *(int *)(v14 + 44);
      v19 = sub_1DC400118();
      v20 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 8);
      v20(v18, v19);
      v21 = v11 + v12[6];
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v21, 1, v14))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v17(v21 + *(int *)(v14 + 40), v16);
        v20(v21 + *(int *)(v14 + 44), v19);
      }
      v22 = v11 + v12[7];
      v23 = sub_1DC4008EC();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 8))(v22, v23);
      v24 = v11 + v12[8];
      v25 = sub_1DC4002BC();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 8))(v24, v25);
      return swift_bridgeObjectRelease();
    case 2:
      v26 = sub_1DC4010E4();
      goto LABEL_23;
    case 3:
      v27 = sub_1DC4010E4();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 8))(a1, v27);
      sub_1DC14227C();
      v29 = v28;
      v30 = a1 + *(int *)(v28 + 48);
      v31 = sub_1DC401030();
      v32 = *(_QWORD *)(v31 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31))
        (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v30, v31);
      v33 = a1 + *(int *)(v29 + 64);
      v34 = sub_1DC400370();
      v35 = *(_QWORD *)(v34 - 8);
      result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34);
      if ((_DWORD)result)
        return result;
      v45 = *(uint64_t (**)(uint64_t, uint64_t))(v35 + 8);
      v46 = v33;
      v44 = v34;
      goto LABEL_24;
    case 4:
      v36 = sub_1DC4010E4();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 8))(a1, v36);
      v37 = (int *)type metadata accessor for StockEarningsModel();
      v38 = a1 + v37[5];
      v39 = sub_1DC3FFFEC();
      v40 = *(_QWORD *)(v39 - 8);
      v41 = *(void (**)(uint64_t, uint64_t))(v40 + 8);
      v41(v38, v39);
      v42 = a1 + v37[6];
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v40 + 48))(v42, 1, v39))
        v41(v42, v39);
      a1 += v37[7];
      v26 = sub_1DC400220();
      goto LABEL_23;
    case 5:
      return swift_bridgeObjectRelease();
    case 6:
      sub_1DC0F4CCC();
      goto LABEL_23;
    case 7:
      swift_bridgeObjectRelease();
      return swift_release();
    case 8:
      v43 = sub_1DC407EAC();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 8))(a1, v43);
      sub_1DC165FB8();
      return swift_release();
    case 9:
      v26 = sub_1DC407CFC();
LABEL_23:
      v44 = v26;
      v45 = *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 8);
      v46 = a1;
LABEL_24:
      result = v45(v46, v44);
      break;
    default:
      return result;
  }
  return result;
}

_QWORD *sub_1DC332040(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, char *, uint64_t);
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  void (*v84)(char *, char *, uint64_t);
  char *v85;
  char *v86;
  uint64_t v87;
  char *v88;
  _QWORD *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  _QWORD *v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  void (*v109)(char *, char *, uint64_t);
  char *v110;
  char *v111;
  uint64_t v112;
  char *v113;
  _QWORD *v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  _QWORD *v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  _QWORD *v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  _QWORD *v149;
  char *v150;
  uint64_t v151;
  char *v153;
  char *v154;
  char *v155;
  char *v156;
  void (*v157)(char *, char *, uint64_t);
  void (*v158)(char *, char *, uint64_t);
  char *v159;
  void (*v160)(char *, char *, uint64_t);
  char *v161;
  void (*v162)(char *, char *, uint64_t);
  char *v163;
  uint64_t v164;
  char *v165;
  uint64_t v166;
  int *v167;
  int *v168;
  _QWORD *v169;
  _QWORD *v170;
  int *v171;
  int *v172;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v6 = sub_1DC4010E4();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
      v7 = (int *)type metadata accessor for StockFeedMastheadModel();
      v8 = v7[5];
      v9 = (char *)a1 + v8;
      v10 = (char *)a2 + v8;
      v11 = sub_1DC401030();
      v12 = *(_QWORD *)(v11 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
      {
        sub_1DC0FED34(0);
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      }
      v50 = v7[6];
      v51 = (char *)a1 + v50;
      v52 = (char *)a2 + v50;
      v53 = sub_1DC400F7C();
      v54 = *(_QWORD *)(v53 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48))(v52, 1, v53))
      {
        sub_1DC089DA4(0, (unint64_t *)&unk_1EDB28D90, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAEFA8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v51, v52, v53);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v54 + 56))(v51, 0, 1, v53);
      }
      v169 = a2;
      v171 = v7;
      v72 = v7[7];
      v73 = (_QWORD *)((char *)a1 + v72);
      v74 = (char *)a2 + v72;
      v75 = *(_QWORD *)((char *)a2 + v72 + 8);
      *v73 = *(_QWORD *)((char *)a2 + v72);
      v73[1] = v75;
      v167 = (int *)type metadata accessor for QuoteSummaryViewModel();
      v76 = v167[5];
      v77 = (char *)v73 + v76;
      v78 = &v74[v76];
      *(_QWORD *)v77 = *(_QWORD *)&v74[v76];
      v77[8] = v74[v76 + 8];
      *((_QWORD *)v77 + 2) = *(_QWORD *)&v74[v76 + 16];
      v77[24] = v74[v76 + 24];
      *((_QWORD *)v77 + 4) = *(_QWORD *)&v74[v76 + 32];
      v77[40] = v74[v76 + 40];
      v79 = *(_QWORD *)&v74[v76 + 56];
      *((_QWORD *)v77 + 6) = *(_QWORD *)&v74[v76 + 48];
      *((_QWORD *)v77 + 7) = v79;
      v80 = *(_QWORD *)&v74[v76 + 72];
      *((_QWORD *)v77 + 8) = *(_QWORD *)&v74[v76 + 64];
      *((_QWORD *)v77 + 9) = v80;
      v77[80] = v74[v76 + 80];
      v81 = type metadata accessor for PriceViewModel();
      v82 = *(int *)(v81 + 40);
      v159 = &v78[v82];
      v163 = &v77[v82];
      v83 = sub_1DC4011C8();
      v84 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v83 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v86 = v159;
      v85 = v163;
      v160 = v84;
      v164 = v83;
      v84(v85, v86, v83);
      v87 = *(int *)(v81 + 44);
      v88 = &v77[v87];
      v89 = v73;
      v90 = &v78[v87];
      v91 = sub_1DC400118();
      v157 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v91 - 8) + 16);
      v157(v88, v90, v91);
      v92 = v167[6];
      v93 = (_QWORD *)((char *)v73 + v92);
      v94 = &v74[v92];
      v95 = *(_QWORD *)(v81 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v95 + 48))(&v74[v92], 1, v81))
      {
        sub_1DC089DA4(0, (unint64_t *)&qword_1EDB2D5E8, (uint64_t (*)(uint64_t))type metadata accessor for PriceViewModel, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(v93, v94, *(_QWORD *)(*(_QWORD *)(v96 - 8) + 64));
      }
      else
      {
        *v93 = *(_QWORD *)v94;
        *((_BYTE *)v93 + 8) = v94[8];
        v93[2] = *((_QWORD *)v94 + 2);
        *((_BYTE *)v93 + 24) = v94[24];
        v93[4] = *((_QWORD *)v94 + 4);
        *((_BYTE *)v93 + 40) = v94[40];
        v122 = *((_QWORD *)v94 + 7);
        v93[6] = *((_QWORD *)v94 + 6);
        v93[7] = v122;
        v123 = *((_QWORD *)v94 + 9);
        v93[8] = *((_QWORD *)v94 + 8);
        v93[9] = v123;
        *((_BYTE *)v93 + 80) = v94[80];
        v124 = *(int *)(v81 + 40);
        v153 = &v94[v124];
        v155 = (char *)v93 + v124;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v160(v155, v153, v164);
        v157((char *)v93 + *(int *)(v81 + 44), &v94[*(int *)(v81 + 44)], v91);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v95 + 56))(v93, 0, 1, v81);
      }
      v125 = v167[7];
      v126 = (char *)v89 + v125;
      v127 = &v74[v125];
      v128 = sub_1DC4008EC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v128 - 8) + 16))(v126, v127, v128);
      v129 = v167[8];
      v130 = (char *)v89 + v129;
      v131 = &v74[v129];
      v132 = sub_1DC4002BC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v132 - 8) + 16))(v130, v131, v132);
      v133 = v167[9];
      v134 = (_QWORD *)((char *)v89 + v133);
      v135 = &v74[v133];
      v136 = *((_QWORD *)v135 + 1);
      *v134 = *(_QWORD *)v135;
      v134[1] = v136;
      *((_BYTE *)a1 + v171[8]) = *((_BYTE *)v169 + v171[8]);
      swift_bridgeObjectRetain();
      goto LABEL_40;
    case 1u:
      v14 = sub_1DC4010E4();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(a1, a2, v14);
      v15 = (int *)type metadata accessor for StockFeedMastheadModel();
      v16 = v15[5];
      v17 = (char *)a1 + v16;
      v18 = (char *)a2 + v16;
      v19 = sub_1DC401030();
      v20 = *(_QWORD *)(v19 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
      {
        sub_1DC0FED34(0);
        memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v17, v18, v19);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
      }
      v56 = v15[6];
      v57 = (char *)a1 + v56;
      v58 = (char *)a2 + v56;
      v59 = sub_1DC400F7C();
      v60 = *(_QWORD *)(v59 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v60 + 48))(v58, 1, v59))
      {
        sub_1DC089DA4(0, (unint64_t *)&unk_1EDB28D90, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAEFA8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v57, v58, v59);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v60 + 56))(v57, 0, 1, v59);
      }
      v170 = a1;
      v172 = v15;
      v97 = v15[7];
      v98 = (_QWORD *)((char *)a1 + v97);
      v99 = (char *)a2 + v97;
      v100 = *(_QWORD *)((char *)a2 + v97 + 8);
      *v98 = *(_QWORD *)((char *)a2 + v97);
      v98[1] = v100;
      v168 = (int *)type metadata accessor for QuoteSummaryViewModel();
      v101 = v168[5];
      v102 = (char *)v98 + v101;
      v103 = &v99[v101];
      *(_QWORD *)v102 = *(_QWORD *)&v99[v101];
      v102[8] = v99[v101 + 8];
      *((_QWORD *)v102 + 2) = *(_QWORD *)&v99[v101 + 16];
      v102[24] = v99[v101 + 24];
      *((_QWORD *)v102 + 4) = *(_QWORD *)&v99[v101 + 32];
      v102[40] = v99[v101 + 40];
      v104 = *(_QWORD *)&v99[v101 + 56];
      *((_QWORD *)v102 + 6) = *(_QWORD *)&v99[v101 + 48];
      *((_QWORD *)v102 + 7) = v104;
      v105 = *(_QWORD *)&v99[v101 + 72];
      *((_QWORD *)v102 + 8) = *(_QWORD *)&v99[v101 + 64];
      *((_QWORD *)v102 + 9) = v105;
      v102[80] = v99[v101 + 80];
      v106 = type metadata accessor for PriceViewModel();
      v107 = *(int *)(v106 + 40);
      v161 = &v103[v107];
      v165 = &v102[v107];
      v108 = sub_1DC4011C8();
      v109 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v108 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v111 = v161;
      v110 = v165;
      v162 = v109;
      v166 = v108;
      v109(v110, v111, v108);
      v112 = *(int *)(v106 + 44);
      v113 = &v102[v112];
      v114 = v98;
      v115 = &v103[v112];
      v116 = sub_1DC400118();
      v158 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v116 - 8) + 16);
      v158(v113, v115, v116);
      v117 = v168[6];
      v118 = (_QWORD *)((char *)v98 + v117);
      v119 = &v99[v117];
      v120 = *(_QWORD *)(v106 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v120 + 48))(&v99[v117], 1, v106))
      {
        sub_1DC089DA4(0, (unint64_t *)&qword_1EDB2D5E8, (uint64_t (*)(uint64_t))type metadata accessor for PriceViewModel, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(v118, v119, *(_QWORD *)(*(_QWORD *)(v121 - 8) + 64));
      }
      else
      {
        *v118 = *(_QWORD *)v119;
        *((_BYTE *)v118 + 8) = v119[8];
        v118[2] = *((_QWORD *)v119 + 2);
        *((_BYTE *)v118 + 24) = v119[24];
        v118[4] = *((_QWORD *)v119 + 4);
        *((_BYTE *)v118 + 40) = v119[40];
        v137 = *((_QWORD *)v119 + 7);
        v118[6] = *((_QWORD *)v119 + 6);
        v118[7] = v137;
        v138 = *((_QWORD *)v119 + 9);
        v118[8] = *((_QWORD *)v119 + 8);
        v118[9] = v138;
        *((_BYTE *)v118 + 80) = v119[80];
        v139 = *(int *)(v106 + 40);
        v154 = &v119[v139];
        v156 = (char *)v118 + v139;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v162(v156, v154, v166);
        v158((char *)v118 + *(int *)(v106 + 44), &v119[*(int *)(v106 + 44)], v116);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v120 + 56))(v118, 0, 1, v106);
      }
      v140 = v168[7];
      v141 = (char *)v114 + v140;
      v142 = &v99[v140];
      v143 = sub_1DC4008EC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v143 - 8) + 16))(v141, v142, v143);
      v144 = v168[8];
      v145 = (char *)v114 + v144;
      v146 = &v99[v144];
      v147 = sub_1DC4002BC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v147 - 8) + 16))(v145, v146, v147);
      v148 = v168[9];
      v149 = (_QWORD *)((char *)v114 + v148);
      v150 = &v99[v148];
      v151 = *((_QWORD *)v150 + 1);
      *v149 = *(_QWORD *)v150;
      v149[1] = v151;
      a1 = v170;
      *((_BYTE *)v170 + v172[8]) = *((_BYTE *)a2 + v172[8]);
      swift_bridgeObjectRetain();
      goto LABEL_40;
    case 2u:
      v22 = sub_1DC4010E4();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(a1, a2, v22);
      goto LABEL_40;
    case 3u:
      v23 = sub_1DC4010E4();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(a1, a2, v23);
      sub_1DC14227C();
      v25 = v24;
      v26 = *(int *)(v24 + 48);
      v27 = (char *)a1 + v26;
      v28 = (char *)a2 + v26;
      v29 = sub_1DC401030();
      v30 = *(_QWORD *)(v29 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
      {
        sub_1DC0FED34(0);
        memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v27, v28, v29);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
      }
      v62 = *(int *)(v25 + 64);
      v63 = (char *)a1 + v62;
      v64 = (char *)a2 + v62;
      v65 = sub_1DC400370();
      v66 = *(_QWORD *)(v65 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v66 + 48))(v64, 1, v65))
      {
        sub_1DC133AB4(0);
        memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v66 + 16))(v63, v64, v65);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v66 + 56))(v63, 0, 1, v65);
      }
      goto LABEL_40;
    case 4u:
      v32 = sub_1DC4010E4();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(a1, a2, v32);
      v33 = (int *)type metadata accessor for StockEarningsModel();
      v34 = v33[5];
      v35 = (char *)a1 + v34;
      v36 = (char *)a2 + v34;
      v37 = sub_1DC3FFFEC();
      v38 = *(_QWORD *)(v37 - 8);
      v39 = *(void (**)(char *, char *, uint64_t))(v38 + 16);
      v39(v35, v36, v37);
      v40 = v33[6];
      v41 = (char *)a1 + v40;
      v42 = (char *)a2 + v40;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))((char *)a2 + v40, 1, v37))
      {
        sub_1DC089DA4(0, &qword_1EDB28AC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
      }
      else
      {
        v39(v41, v42, v37);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v41, 0, 1, v37);
      }
      v68 = v33[7];
      v69 = (char *)a1 + v68;
      v70 = (char *)a2 + v68;
      v71 = sub_1DC400220();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v71 - 8) + 16))(v69, v70, v71);
      *((_BYTE *)a1 + v33[8]) = *((_BYTE *)a2 + v33[8]);
      *((_BYTE *)a1 + v33[9]) = *((_BYTE *)a2 + v33[9]);
      goto LABEL_40;
    case 5u:
      v44 = a2[1];
      *a1 = *a2;
      a1[1] = v44;
      swift_bridgeObjectRetain();
      goto LABEL_40;
    case 6u:
      sub_1DC0F4CCC();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v45 - 8) + 16))(a1, a2, v45);
      goto LABEL_40;
    case 7u:
      v46 = a2[1];
      *a1 = *a2;
      a1[1] = v46;
      a1[2] = a2[2];
      swift_bridgeObjectRetain();
      swift_retain();
      goto LABEL_40;
    case 8u:
      v47 = sub_1DC407EAC();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(a1, a2, v47);
      sub_1DC165FB8();
      *(_QWORD *)((char *)a1 + *(int *)(v48 + 48)) = *(_QWORD *)((char *)a2 + *(int *)(v48 + 48));
      swift_retain();
      goto LABEL_40;
    case 9u:
      v49 = sub_1DC407CFC();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v49 - 8) + 16))(a1, a2, v49);
LABEL_40:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

_QWORD *sub_1DC332C50(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, char *, uint64_t);
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  char *v72;
  char *v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void (*v80)(char *, char *, uint64_t);
  char *v81;
  char *v82;
  uint64_t v83;
  char *v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  _QWORD *v94;
  char *v95;
  char *v96;
  uint64_t v97;
  char *v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  void (*v103)(char *, char *, uint64_t);
  char *v104;
  char *v105;
  uint64_t v106;
  char *v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  char *v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  char *v126;
  char *v128;
  void (*v129)(char *, char *, uint64_t);
  char *v130;
  void (*v131)(char *, char *, uint64_t);
  char *v132;
  char *v133;
  uint64_t v134;
  char *v135;
  char *v136;
  char *v137;
  char *v138;
  int *v139;
  int *v140;

  if (a1 != a2)
  {
    sub_1DC0926D8((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedModel);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v6 = sub_1DC4010E4();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
        v7 = (int *)type metadata accessor for StockFeedMastheadModel();
        v8 = v7[5];
        v9 = (char *)a1 + v8;
        v10 = (char *)a2 + v8;
        v11 = sub_1DC401030();
        v12 = *(_QWORD *)(v11 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
        {
          sub_1DC0FED34(0);
          memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
        }
        v48 = v7[6];
        v49 = (char *)a1 + v48;
        v50 = (char *)a2 + v48;
        v51 = sub_1DC400F7C();
        v52 = *(_QWORD *)(v51 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v52 + 48))(v50, 1, v51))
        {
          sub_1DC089DA4(0, (unint64_t *)&unk_1EDB28D90, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAEFA8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
          memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v52 + 16))(v49, v50, v51);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v52 + 56))(v49, 0, 1, v51);
        }
        v70 = v7[7];
        v71 = (_QWORD *)((char *)a1 + v70);
        v72 = (char *)a2 + v70;
        *v71 = *(_QWORD *)((char *)a2 + v70);
        v139 = v7;
        v71[1] = *(_QWORD *)((char *)a2 + v70 + 8);
        v73 = (char *)a1 + v70;
        v136 = (char *)a1 + v70;
        v140 = (int *)type metadata accessor for QuoteSummaryViewModel();
        v74 = v140[5];
        v75 = &v73[v74];
        v76 = &v72[v74];
        LOBYTE(v74) = v72[v74 + 8];
        *(_QWORD *)v75 = *(_QWORD *)v76;
        v75[8] = v74;
        LOBYTE(v74) = v76[24];
        *((_QWORD *)v75 + 2) = *((_QWORD *)v76 + 2);
        v75[24] = v74;
        LOBYTE(v74) = v76[40];
        *((_QWORD *)v75 + 4) = *((_QWORD *)v76 + 4);
        v75[40] = v74;
        *((_QWORD *)v75 + 6) = *((_QWORD *)v76 + 6);
        *((_QWORD *)v75 + 7) = *((_QWORD *)v76 + 7);
        *((_QWORD *)v75 + 8) = *((_QWORD *)v76 + 8);
        *((_QWORD *)v75 + 9) = *((_QWORD *)v76 + 9);
        v75[80] = v76[80];
        v77 = type metadata accessor for PriceViewModel();
        v78 = *(int *)(v77 + 40);
        v130 = &v76[v78];
        v133 = &v75[v78];
        v79 = sub_1DC4011C8();
        v80 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v79 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v82 = v130;
        v81 = v133;
        v131 = v80;
        v134 = v79;
        v80(v81, v82, v79);
        v83 = *(int *)(v77 + 44);
        v84 = &v75[v83];
        v85 = v136;
        v86 = &v76[v83];
        v87 = v77;
        v88 = sub_1DC400118();
        v129 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v88 - 8) + 16);
        v129(v84, v86, v88);
        v89 = v140[6];
        v90 = &v136[v89];
        v138 = v72;
        v91 = &v72[v89];
        v92 = *(_QWORD *)(v87 - 8);
        if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v92 + 48))(&v72[v89], 1, v87))
          goto LABEL_36;
        goto LABEL_34;
      case 1u:
        v14 = sub_1DC4010E4();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(a1, a2, v14);
        v15 = (int *)type metadata accessor for StockFeedMastheadModel();
        v16 = v15[5];
        v17 = (char *)a1 + v16;
        v18 = (char *)a2 + v16;
        v19 = sub_1DC401030();
        v20 = *(_QWORD *)(v19 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
        {
          sub_1DC0FED34(0);
          memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v17, v18, v19);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
        }
        v54 = v15[6];
        v55 = (char *)a1 + v54;
        v56 = (char *)a2 + v54;
        v57 = sub_1DC400F7C();
        v58 = *(_QWORD *)(v57 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v58 + 48))(v56, 1, v57))
        {
          sub_1DC089DA4(0, (unint64_t *)&unk_1EDB28D90, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAEFA8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
          memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v58 + 16))(v55, v56, v57);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v58 + 56))(v55, 0, 1, v57);
        }
        v93 = v15[7];
        v94 = (_QWORD *)((char *)a1 + v93);
        v95 = (char *)a2 + v93;
        *v94 = *(_QWORD *)((char *)a2 + v93);
        v139 = v15;
        v94[1] = *(_QWORD *)((char *)a2 + v93 + 8);
        v96 = (char *)a1 + v93;
        v137 = (char *)a1 + v93;
        v140 = (int *)type metadata accessor for QuoteSummaryViewModel();
        v97 = v140[5];
        v98 = &v96[v97];
        v99 = &v95[v97];
        LOBYTE(v97) = v95[v97 + 8];
        *(_QWORD *)v98 = *(_QWORD *)v99;
        v98[8] = v97;
        LOBYTE(v97) = v99[24];
        *((_QWORD *)v98 + 2) = *((_QWORD *)v99 + 2);
        v98[24] = v97;
        LOBYTE(v97) = v99[40];
        *((_QWORD *)v98 + 4) = *((_QWORD *)v99 + 4);
        v98[40] = v97;
        *((_QWORD *)v98 + 6) = *((_QWORD *)v99 + 6);
        *((_QWORD *)v98 + 7) = *((_QWORD *)v99 + 7);
        *((_QWORD *)v98 + 8) = *((_QWORD *)v99 + 8);
        *((_QWORD *)v98 + 9) = *((_QWORD *)v99 + 9);
        v98[80] = v99[80];
        v100 = type metadata accessor for PriceViewModel();
        v101 = *(int *)(v100 + 40);
        v132 = &v99[v101];
        v135 = &v98[v101];
        v102 = sub_1DC4011C8();
        v103 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v102 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v105 = v132;
        v104 = v135;
        v131 = v103;
        v134 = v102;
        v103(v104, v105, v102);
        v106 = *(int *)(v100 + 44);
        v107 = &v98[v106];
        v87 = v100;
        v108 = &v99[v106];
        v85 = v137;
        v88 = sub_1DC400118();
        v129 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v88 - 8) + 16);
        v129(v107, v108, v88);
        v109 = v140[6];
        v90 = &v137[v109];
        v138 = v95;
        v91 = &v95[v109];
        v92 = *(_QWORD *)(v87 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v92 + 48))(&v95[v109], 1, v87))
        {
LABEL_34:
          sub_1DC089DA4(0, (unint64_t *)&qword_1EDB2D5E8, (uint64_t (*)(uint64_t))type metadata accessor for PriceViewModel, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
          memcpy(v90, v91, *(_QWORD *)(*(_QWORD *)(v110 - 8) + 64));
        }
        else
        {
LABEL_36:
          v111 = *(_QWORD *)v91;
          v90[8] = v91[8];
          *(_QWORD *)v90 = v111;
          v112 = *((_QWORD *)v91 + 2);
          v90[24] = v91[24];
          *((_QWORD *)v90 + 2) = v112;
          v113 = *((_QWORD *)v91 + 4);
          v90[40] = v91[40];
          *((_QWORD *)v90 + 4) = v113;
          *((_QWORD *)v90 + 6) = *((_QWORD *)v91 + 6);
          *((_QWORD *)v90 + 7) = *((_QWORD *)v91 + 7);
          *((_QWORD *)v90 + 8) = *((_QWORD *)v91 + 8);
          *((_QWORD *)v90 + 9) = *((_QWORD *)v91 + 9);
          v90[80] = v91[80];
          v114 = *(int *)(v87 + 40);
          v115 = &v90[v114];
          v128 = &v91[v114];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v131(v115, v128, v134);
          v129(&v90[*(int *)(v87 + 44)], &v91[*(int *)(v87 + 44)], v88);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v92 + 56))(v90, 0, 1, v87);
        }
        v116 = v140[7];
        v117 = &v85[v116];
        v118 = &v138[v116];
        v119 = sub_1DC4008EC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v119 - 8) + 16))(v117, v118, v119);
        v120 = v140[8];
        v121 = &v85[v120];
        v122 = &v138[v120];
        v123 = sub_1DC4002BC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v123 - 8) + 16))(v121, v122, v123);
        v124 = v140[9];
        v125 = &v85[v124];
        v126 = &v138[v124];
        *(_QWORD *)v125 = *(_QWORD *)v126;
        *((_QWORD *)v125 + 1) = *((_QWORD *)v126 + 1);
        *((_BYTE *)a1 + v139[8]) = *((_BYTE *)a2 + v139[8]);
        swift_bridgeObjectRetain();
        goto LABEL_38;
      case 2u:
        v22 = sub_1DC4010E4();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(a1, a2, v22);
        goto LABEL_38;
      case 3u:
        v23 = sub_1DC4010E4();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(a1, a2, v23);
        sub_1DC14227C();
        v25 = v24;
        v26 = *(int *)(v24 + 48);
        v27 = (char *)a1 + v26;
        v28 = (char *)a2 + v26;
        v29 = sub_1DC401030();
        v30 = *(_QWORD *)(v29 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
        {
          sub_1DC0FED34(0);
          memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v27, v28, v29);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
        }
        v60 = *(int *)(v25 + 64);
        v61 = (char *)a1 + v60;
        v62 = (char *)a2 + v60;
        v63 = sub_1DC400370();
        v64 = *(_QWORD *)(v63 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v64 + 48))(v62, 1, v63))
        {
          sub_1DC133AB4(0);
          memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v61, v62, v63);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v64 + 56))(v61, 0, 1, v63);
        }
        goto LABEL_38;
      case 4u:
        v32 = sub_1DC4010E4();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(a1, a2, v32);
        v33 = (int *)type metadata accessor for StockEarningsModel();
        v34 = v33[5];
        v35 = (char *)a1 + v34;
        v36 = (char *)a2 + v34;
        v37 = sub_1DC3FFFEC();
        v38 = *(_QWORD *)(v37 - 8);
        v39 = *(void (**)(char *, char *, uint64_t))(v38 + 16);
        v39(v35, v36, v37);
        v40 = v33[6];
        v41 = (char *)a1 + v40;
        v42 = (char *)a2 + v40;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))((char *)a2 + v40, 1, v37))
        {
          sub_1DC089DA4(0, &qword_1EDB28AC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
          memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
        }
        else
        {
          v39(v41, v42, v37);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v41, 0, 1, v37);
        }
        v66 = v33[7];
        v67 = (char *)a1 + v66;
        v68 = (char *)a2 + v66;
        v69 = sub_1DC400220();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v69 - 8) + 16))(v67, v68, v69);
        *((_BYTE *)a1 + v33[8]) = *((_BYTE *)a2 + v33[8]);
        *((_BYTE *)a1 + v33[9]) = *((_BYTE *)a2 + v33[9]);
        goto LABEL_38;
      case 5u:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        goto LABEL_38;
      case 6u:
        sub_1DC0F4CCC();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v44 - 8) + 16))(a1, a2, v44);
        goto LABEL_38;
      case 7u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        swift_bridgeObjectRetain();
        swift_retain();
        goto LABEL_38;
      case 8u:
        v45 = sub_1DC407EAC();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v45 - 8) + 16))(a1, a2, v45);
        sub_1DC165FB8();
        *(_QWORD *)((char *)a1 + *(int *)(v46 + 48)) = *(_QWORD *)((char *)a2 + *(int *)(v46 + 48));
        swift_retain();
        goto LABEL_38;
      case 9u:
        v47 = sub_1DC407CFC();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(a1, a2, v47);
LABEL_38:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

_BYTE *sub_1DC333900(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, char *, uint64_t);
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  __int128 v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  char *v97;
  __int128 v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  __int128 v108;
  uint64_t v109;
  char *v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  char *v115;
  uint64_t v116;
  void (*v118)(char *, char *, uint64_t);
  void (*v119)(char *, char *);
  uint64_t v120;
  char *v121;
  char *v122;
  int *v123;
  int *v124;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v6 = sub_1DC4010E4();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      v7 = (int *)type metadata accessor for StockFeedMastheadModel();
      v8 = v7[5];
      v9 = &a1[v8];
      v10 = &a2[v8];
      v11 = sub_1DC401030();
      v12 = *(_QWORD *)(v11 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
      {
        sub_1DC0FED34(0);
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      }
      v48 = v7[6];
      v49 = &a1[v48];
      v50 = &a2[v48];
      v51 = sub_1DC400F7C();
      v52 = *(_QWORD *)(v51 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v52 + 48))(v50, 1, v51))
      {
        sub_1DC089DA4(0, (unint64_t *)&unk_1EDB28D90, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAEFA8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v52 + 32))(v49, v50, v51);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v52 + 56))(v49, 0, 1, v51);
      }
      v124 = v7;
      v70 = v7[7];
      v71 = &a1[v70];
      v72 = &a2[v70];
      *(_OWORD *)&a1[v70] = *(_OWORD *)&a2[v70];
      v73 = type metadata accessor for QuoteSummaryViewModel();
      v74 = *(int *)(v73 + 20);
      v75 = &v71[v74];
      v76 = &v72[v74];
      *(_QWORD *)v75 = *(_QWORD *)&v72[v74];
      v75[8] = v72[v74 + 8];
      *((_QWORD *)v75 + 2) = *(_QWORD *)&v72[v74 + 16];
      v75[24] = v72[v74 + 24];
      *((_QWORD *)v75 + 4) = *(_QWORD *)&v72[v74 + 32];
      v75[40] = v72[v74 + 40];
      v77 = *(_OWORD *)&v72[v74 + 64];
      *((_OWORD *)v75 + 3) = *(_OWORD *)&v72[v74 + 48];
      *((_OWORD *)v75 + 4) = v77;
      v75[80] = v72[v74 + 80];
      v78 = type metadata accessor for PriceViewModel();
      v79 = *(int *)(v78 + 40);
      v80 = &v75[v79];
      v81 = &v76[v79];
      v82 = sub_1DC4011C8();
      v119 = *(void (**)(char *, char *))(*(_QWORD *)(v82 - 8) + 32);
      v120 = v82;
      v119(v80, v81);
      v83 = *(int *)(v78 + 44);
      v84 = &v75[v83];
      v85 = &v76[v83];
      v86 = sub_1DC400118();
      v118 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v86 - 8) + 32);
      v118(v84, v85, v86);
      v122 = v71;
      v123 = (int *)v73;
      v87 = *(int *)(v73 + 24);
      v88 = &v71[v87];
      v121 = v72;
      v89 = &v72[v87];
      v90 = *(_QWORD *)(v78 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v90 + 48))(&v72[v87], 1, v78))
        goto LABEL_33;
      goto LABEL_31;
    case 1u:
      v14 = sub_1DC4010E4();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(a1, a2, v14);
      v15 = (int *)type metadata accessor for StockFeedMastheadModel();
      v16 = v15[5];
      v17 = &a1[v16];
      v18 = &a2[v16];
      v19 = sub_1DC401030();
      v20 = *(_QWORD *)(v19 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
      {
        sub_1DC0FED34(0);
        memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v17, v18, v19);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
      }
      v54 = v15[6];
      v55 = &a1[v54];
      v56 = &a2[v54];
      v57 = sub_1DC400F7C();
      v58 = *(_QWORD *)(v57 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v58 + 48))(v56, 1, v57))
      {
        sub_1DC089DA4(0, (unint64_t *)&unk_1EDB28D90, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAEFA8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v58 + 32))(v55, v56, v57);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v58 + 56))(v55, 0, 1, v57);
      }
      v124 = v15;
      v91 = v15[7];
      v92 = &a1[v91];
      v93 = &a2[v91];
      *(_OWORD *)&a1[v91] = *(_OWORD *)&a2[v91];
      v94 = type metadata accessor for QuoteSummaryViewModel();
      v95 = *(int *)(v94 + 20);
      v96 = &v92[v95];
      v97 = &v93[v95];
      *(_QWORD *)v96 = *(_QWORD *)&v93[v95];
      v96[8] = v93[v95 + 8];
      *((_QWORD *)v96 + 2) = *(_QWORD *)&v93[v95 + 16];
      v96[24] = v93[v95 + 24];
      *((_QWORD *)v96 + 4) = *(_QWORD *)&v93[v95 + 32];
      v96[40] = v93[v95 + 40];
      v98 = *(_OWORD *)&v93[v95 + 64];
      *((_OWORD *)v96 + 3) = *(_OWORD *)&v93[v95 + 48];
      *((_OWORD *)v96 + 4) = v98;
      v96[80] = v93[v95 + 80];
      v78 = type metadata accessor for PriceViewModel();
      v99 = *(int *)(v78 + 40);
      v100 = &v96[v99];
      v101 = &v97[v99];
      v102 = sub_1DC4011C8();
      v119 = *(void (**)(char *, char *))(*(_QWORD *)(v102 - 8) + 32);
      v120 = v102;
      v119(v100, v101);
      v103 = *(int *)(v78 + 44);
      v104 = &v96[v103];
      v105 = &v97[v103];
      v86 = sub_1DC400118();
      v118 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v86 - 8) + 32);
      v118(v104, v105, v86);
      v122 = v92;
      v123 = (int *)v94;
      v106 = *(int *)(v94 + 24);
      v88 = &v92[v106];
      v121 = v93;
      v89 = &v93[v106];
      v90 = *(_QWORD *)(v78 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v90 + 48))(&v93[v106], 1, v78))
      {
LABEL_31:
        sub_1DC089DA4(0, (unint64_t *)&qword_1EDB2D5E8, (uint64_t (*)(uint64_t))type metadata accessor for PriceViewModel, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(v88, v89, *(_QWORD *)(*(_QWORD *)(v107 - 8) + 64));
      }
      else
      {
LABEL_33:
        *(_QWORD *)v88 = *(_QWORD *)v89;
        v88[8] = v89[8];
        *((_QWORD *)v88 + 2) = *((_QWORD *)v89 + 2);
        v88[24] = v89[24];
        *((_QWORD *)v88 + 4) = *((_QWORD *)v89 + 4);
        v88[40] = v89[40];
        v108 = *((_OWORD *)v89 + 4);
        *((_OWORD *)v88 + 3) = *((_OWORD *)v89 + 3);
        *((_OWORD *)v88 + 4) = v108;
        v88[80] = v89[80];
        ((void (*)(char *, char *, uint64_t))v119)(&v88[*(int *)(v78 + 40)], &v89[*(int *)(v78 + 40)], v120);
        v118(&v88[*(int *)(v78 + 44)], &v89[*(int *)(v78 + 44)], v86);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v90 + 56))(v88, 0, 1, v78);
      }
      v109 = v123[7];
      v110 = &v122[v109];
      v111 = &v121[v109];
      v112 = sub_1DC4008EC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v112 - 8) + 32))(v110, v111, v112);
      v113 = v123[8];
      v114 = &v122[v113];
      v115 = &v121[v113];
      v116 = sub_1DC4002BC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v116 - 8) + 32))(v114, v115, v116);
      *(_OWORD *)&v122[v123[9]] = *(_OWORD *)&v121[v123[9]];
      a1[v124[8]] = a2[v124[8]];
      goto LABEL_35;
    case 2u:
      v22 = sub_1DC4010E4();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(a1, a2, v22);
      goto LABEL_35;
    case 3u:
      v23 = sub_1DC4010E4();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(a1, a2, v23);
      sub_1DC14227C();
      v25 = v24;
      v26 = *(int *)(v24 + 48);
      v27 = &a1[v26];
      v28 = &a2[v26];
      v29 = sub_1DC401030();
      v30 = *(_QWORD *)(v29 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
      {
        sub_1DC0FED34(0);
        memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v27, v28, v29);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
      }
      v60 = *(int *)(v25 + 64);
      v61 = &a1[v60];
      v62 = &a2[v60];
      v63 = sub_1DC400370();
      v64 = *(_QWORD *)(v63 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v64 + 48))(v62, 1, v63))
      {
        sub_1DC133AB4(0);
        memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v64 + 32))(v61, v62, v63);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v64 + 56))(v61, 0, 1, v63);
      }
      goto LABEL_35;
    case 4u:
      v32 = sub_1DC4010E4();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v32 - 8) + 32))(a1, a2, v32);
      v33 = (int *)type metadata accessor for StockEarningsModel();
      v34 = v33[5];
      v35 = &a1[v34];
      v36 = &a2[v34];
      v37 = sub_1DC3FFFEC();
      v38 = *(_QWORD *)(v37 - 8);
      v39 = *(void (**)(char *, char *, uint64_t))(v38 + 32);
      v39(v35, v36, v37);
      v40 = v33[6];
      v41 = &a1[v40];
      v42 = &a2[v40];
      if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v38 + 48))(&a2[v40], 1, v37))
      {
        sub_1DC089DA4(0, &qword_1EDB28AC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
      }
      else
      {
        v39(v41, v42, v37);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v41, 0, 1, v37);
      }
      v66 = v33[7];
      v67 = &a1[v66];
      v68 = &a2[v66];
      v69 = sub_1DC400220();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v69 - 8) + 32))(v67, v68, v69);
      a1[v33[8]] = a2[v33[8]];
      a1[v33[9]] = a2[v33[9]];
      goto LABEL_35;
    case 6u:
      sub_1DC0F4CCC();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v44 - 8) + 32))(a1, a2, v44);
      goto LABEL_35;
    case 8u:
      v45 = sub_1DC407EAC();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v45 - 8) + 32))(a1, a2, v45);
      sub_1DC165FB8();
      *(_QWORD *)&a1[*(int *)(v46 + 48)] = *(_QWORD *)&a2[*(int *)(v46 + 48)];
      goto LABEL_35;
    case 9u:
      v47 = sub_1DC407CFC();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v47 - 8) + 32))(a1, a2, v47);
LABEL_35:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

_BYTE *sub_1DC334414(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, char *, uint64_t);
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  __int128 v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  void (*v83)(char *, char *, uint64_t);
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  char *v95;
  __int128 v96;
  uint64_t v97;
  char *v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  char *v103;
  uint64_t v104;
  __int128 v105;
  uint64_t v106;
  char *v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  char *v116;
  uint64_t v117;
  void (*v119)(char *, char *);
  uint64_t v120;
  char *v121;
  char *v122;
  int *v123;
  int *v124;

  if (a1 != a2)
  {
    sub_1DC0926D8((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedModel);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v6 = sub_1DC4010E4();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
        v7 = (int *)type metadata accessor for StockFeedMastheadModel();
        v8 = v7[5];
        v9 = &a1[v8];
        v10 = &a2[v8];
        v11 = sub_1DC401030();
        v12 = *(_QWORD *)(v11 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
        {
          sub_1DC0FED34(0);
          memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
        }
        v48 = v7[6];
        v49 = &a1[v48];
        v50 = &a2[v48];
        v51 = sub_1DC400F7C();
        v52 = *(_QWORD *)(v51 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v52 + 48))(v50, 1, v51))
        {
          sub_1DC089DA4(0, (unint64_t *)&unk_1EDB28D90, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAEFA8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
          memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v52 + 32))(v49, v50, v51);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v52 + 56))(v49, 0, 1, v51);
        }
        v124 = v7;
        v66 = v7[7];
        v67 = &a1[v66];
        v68 = &a2[v66];
        *(_OWORD *)&a1[v66] = *(_OWORD *)&a2[v66];
        v69 = type metadata accessor for QuoteSummaryViewModel();
        v70 = *(int *)(v69 + 20);
        v71 = &v67[v70];
        v72 = &v68[v70];
        *(_QWORD *)v71 = *(_QWORD *)&v68[v70];
        v71[8] = v68[v70 + 8];
        *((_QWORD *)v71 + 2) = *(_QWORD *)&v68[v70 + 16];
        v71[24] = v68[v70 + 24];
        *((_QWORD *)v71 + 4) = *(_QWORD *)&v68[v70 + 32];
        v71[40] = v68[v70 + 40];
        v73 = *(_OWORD *)&v68[v70 + 64];
        *((_OWORD *)v71 + 3) = *(_OWORD *)&v68[v70 + 48];
        *((_OWORD *)v71 + 4) = v73;
        v71[80] = v68[v70 + 80];
        v74 = type metadata accessor for PriceViewModel();
        v75 = *(int *)(v74 + 40);
        v76 = &v71[v75];
        v77 = &v72[v75];
        v78 = sub_1DC4011C8();
        v119 = *(void (**)(char *, char *))(*(_QWORD *)(v78 - 8) + 32);
        v120 = v78;
        v119(v76, v77);
        v79 = *(int *)(v74 + 44);
        v80 = &v71[v79];
        v81 = &v72[v79];
        v82 = sub_1DC400118();
        v83 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v82 - 8) + 32);
        v83(v80, v81, v82);
        v122 = v67;
        v123 = (int *)v69;
        v84 = *(int *)(v69 + 24);
        v85 = &v67[v84];
        v121 = v68;
        v86 = &v68[v84];
        v87 = *(_QWORD *)(v74 - 8);
        if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v87 + 48))(&v68[v84], 1, v74))
          goto LABEL_32;
        goto LABEL_27;
      case 1u:
        v14 = sub_1DC4010E4();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(a1, a2, v14);
        v15 = (int *)type metadata accessor for StockFeedMastheadModel();
        v16 = v15[5];
        v17 = &a1[v16];
        v18 = &a2[v16];
        v19 = sub_1DC401030();
        v20 = *(_QWORD *)(v19 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
        {
          sub_1DC0FED34(0);
          memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v17, v18, v19);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
        }
        v54 = v15[6];
        v55 = &a1[v54];
        v56 = &a2[v54];
        v57 = sub_1DC400F7C();
        v58 = *(_QWORD *)(v57 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v58 + 48))(v56, 1, v57))
        {
          sub_1DC089DA4(0, (unint64_t *)&unk_1EDB28D90, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAEFA8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
          memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v58 + 32))(v55, v56, v57);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v58 + 56))(v55, 0, 1, v57);
        }
        v124 = v15;
        v89 = v15[7];
        v90 = &a1[v89];
        v91 = &a2[v89];
        *(_OWORD *)&a1[v89] = *(_OWORD *)&a2[v89];
        v92 = type metadata accessor for QuoteSummaryViewModel();
        v93 = *(int *)(v92 + 20);
        v94 = &v90[v93];
        v95 = &v91[v93];
        *(_QWORD *)v94 = *(_QWORD *)&v91[v93];
        v94[8] = v91[v93 + 8];
        *((_QWORD *)v94 + 2) = *(_QWORD *)&v91[v93 + 16];
        v94[24] = v91[v93 + 24];
        *((_QWORD *)v94 + 4) = *(_QWORD *)&v91[v93 + 32];
        v94[40] = v91[v93 + 40];
        v96 = *(_OWORD *)&v91[v93 + 64];
        *((_OWORD *)v94 + 3) = *(_OWORD *)&v91[v93 + 48];
        *((_OWORD *)v94 + 4) = v96;
        v94[80] = v91[v93 + 80];
        v74 = type metadata accessor for PriceViewModel();
        v97 = *(int *)(v74 + 40);
        v98 = &v94[v97];
        v99 = &v95[v97];
        v100 = sub_1DC4011C8();
        v119 = *(void (**)(char *, char *))(*(_QWORD *)(v100 - 8) + 32);
        v120 = v100;
        v119(v98, v99);
        v101 = *(int *)(v74 + 44);
        v102 = &v94[v101];
        v103 = &v95[v101];
        v82 = sub_1DC400118();
        v83 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v82 - 8) + 32);
        v83(v102, v103, v82);
        v122 = v90;
        v123 = (int *)v92;
        v104 = *(int *)(v92 + 24);
        v85 = &v90[v104];
        v121 = v91;
        v86 = &v91[v104];
        v87 = *(_QWORD *)(v74 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v87 + 48))(&v91[v104], 1, v74))
        {
LABEL_27:
          sub_1DC089DA4(0, (unint64_t *)&qword_1EDB2D5E8, (uint64_t (*)(uint64_t))type metadata accessor for PriceViewModel, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
          memcpy(v85, v86, *(_QWORD *)(*(_QWORD *)(v88 - 8) + 64));
        }
        else
        {
LABEL_32:
          *(_QWORD *)v85 = *(_QWORD *)v86;
          v85[8] = v86[8];
          *((_QWORD *)v85 + 2) = *((_QWORD *)v86 + 2);
          v85[24] = v86[24];
          *((_QWORD *)v85 + 4) = *((_QWORD *)v86 + 4);
          v85[40] = v86[40];
          v105 = *((_OWORD *)v86 + 4);
          *((_OWORD *)v85 + 3) = *((_OWORD *)v86 + 3);
          *((_OWORD *)v85 + 4) = v105;
          v85[80] = v86[80];
          ((void (*)(char *, char *, uint64_t))v119)(&v85[*(int *)(v74 + 40)], &v86[*(int *)(v74 + 40)], v120);
          v83(&v85[*(int *)(v74 + 44)], &v86[*(int *)(v74 + 44)], v82);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v87 + 56))(v85, 0, 1, v74);
        }
        v106 = v123[7];
        v107 = &v122[v106];
        v108 = &v121[v106];
        v109 = sub_1DC4008EC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v109 - 8) + 32))(v107, v108, v109);
        v110 = v123[8];
        v111 = &v122[v110];
        v112 = &v121[v110];
        v113 = sub_1DC4002BC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v113 - 8) + 32))(v111, v112, v113);
        *(_OWORD *)&v122[v123[9]] = *(_OWORD *)&v121[v123[9]];
        a1[v124[8]] = a2[v124[8]];
        goto LABEL_37;
      case 2u:
        v22 = sub_1DC4010E4();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(a1, a2, v22);
        goto LABEL_37;
      case 3u:
        v23 = sub_1DC4010E4();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(a1, a2, v23);
        sub_1DC14227C();
        v25 = v24;
        v26 = *(int *)(v24 + 48);
        v27 = &a1[v26];
        v28 = &a2[v26];
        v29 = sub_1DC401030();
        v30 = *(_QWORD *)(v29 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
        {
          sub_1DC0FED34(0);
          memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v27, v28, v29);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
        }
        v60 = *(int *)(v25 + 64);
        v61 = &a1[v60];
        v62 = &a2[v60];
        v63 = sub_1DC400370();
        v64 = *(_QWORD *)(v63 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v64 + 48))(v62, 1, v63))
        {
          sub_1DC133AB4(0);
          memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v64 + 32))(v61, v62, v63);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v64 + 56))(v61, 0, 1, v63);
        }
        goto LABEL_37;
      case 4u:
        v32 = sub_1DC4010E4();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v32 - 8) + 32))(a1, a2, v32);
        v33 = (int *)type metadata accessor for StockEarningsModel();
        v34 = v33[5];
        v35 = &a1[v34];
        v36 = &a2[v34];
        v37 = sub_1DC3FFFEC();
        v38 = *(_QWORD *)(v37 - 8);
        v39 = *(void (**)(char *, char *, uint64_t))(v38 + 32);
        v39(v35, v36, v37);
        v40 = v33[6];
        v41 = &a1[v40];
        v42 = &a2[v40];
        if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v38 + 48))(&a2[v40], 1, v37))
        {
          sub_1DC089DA4(0, &qword_1EDB28AC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
          memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
        }
        else
        {
          v39(v41, v42, v37);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v41, 0, 1, v37);
        }
        v114 = v33[7];
        v115 = &a1[v114];
        v116 = &a2[v114];
        v117 = sub_1DC400220();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v117 - 8) + 32))(v115, v116, v117);
        a1[v33[8]] = a2[v33[8]];
        a1[v33[9]] = a2[v33[9]];
        goto LABEL_37;
      case 6u:
        sub_1DC0F4CCC();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v44 - 8) + 32))(a1, a2, v44);
        goto LABEL_37;
      case 8u:
        v45 = sub_1DC407EAC();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v45 - 8) + 32))(a1, a2, v45);
        sub_1DC165FB8();
        *(_QWORD *)&a1[*(int *)(v46 + 48)] = *(_QWORD *)&a2[*(int *)(v46 + 48)];
        goto LABEL_37;
      case 9u:
        v47 = sub_1DC407CFC();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v47 - 8) + 32))(a1, a2, v47);
LABEL_37:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

void sub_1DC334F40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;

  v1 = v0;
  v2 = type metadata accessor for StockFeedModel();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for StockFeedMastheadModel();
  MEMORY[0x1E0C80A78](v5);
  sub_1DC0990BC(v1, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedModel);
  v6 = (char *)sub_1DC335010 + 4 * byte_1DC428E94[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1DC335010()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1DC0926D8(v1, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedModel);
  v2 = sub_1DC401030();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v0, 1, 1, v2);
}

void sub_1DC33514C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(_QWORD);
  char *v7;
  _QWORD v8[2];

  v1 = sub_1DC407CFC();
  v8[0] = *(_QWORD *)(v1 - 8);
  v8[1] = v1;
  MEMORY[0x1E0C80A78](v1);
  v2 = sub_1DC407EAC();
  MEMORY[0x1E0C80A78](v2);
  sub_1DC0F4CCC();
  MEMORY[0x1E0C80A78](v3);
  v4 = type metadata accessor for StockFeedModel();
  MEMORY[0x1E0C80A78](v4);
  sub_1DC0990BC(v0, (uint64_t)v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  v7 = (char *)sub_1DC3352A4 + 4 * byte_1DC428E9F[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1DC3352A4()
{
  uint64_t v0;

  sub_1DC0926D8(v0, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedMastheadModel);
  return 0x646165687473616DLL;
}

uint64_t sub_1DC3354C8()
{
  sub_1DC080808(&qword_1EDB2D790, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedModel, (uint64_t)&unk_1DC429028);
  return sub_1DC402E18();
}

void sub_1DC33551C(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  _QWORD v26[4];
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  char *v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;

  v37 = a1;
  sub_1DC089DA4(0, (unint64_t *)&unk_1EDB28A70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v1);
  v30 = (char *)v26 - v2;
  v27 = sub_1DC4011BC();
  v26[2] = *(_QWORD *)(v27 - 8);
  MEMORY[0x1E0C80A78](v27);
  v26[3] = (char *)v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v26[1] = (char *)v26 - v5;
  sub_1DC22E2CC();
  MEMORY[0x1E0C80A78](v6);
  v32 = (char *)v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0F4CCC();
  v31 = v8;
  v29 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v28 = (char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC133AB4(0);
  MEMORY[0x1E0C80A78](v10);
  v34 = (char *)v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v36 = (char *)v26 - v13;
  sub_1DC0FED34(0);
  MEMORY[0x1E0C80A78](v14);
  v33 = (char *)v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v35 = (char *)v26 - v17;
  v18 = sub_1DC4010E4();
  MEMORY[0x1E0C80A78](v18);
  MEMORY[0x1E0C80A78](v19);
  v20 = sub_1DC4003B8();
  MEMORY[0x1E0C80A78](v20);
  v21 = type metadata accessor for StockFeedModel();
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)v26 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for StockFeedMastheadModel();
  MEMORY[0x1E0C80A78](v24);
  sub_1DC0990BC(v38, (uint64_t)v23, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedModel);
  v25 = (char *)sub_1DC33584C + 4 * byte_1DC428EAA[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1DC33584C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;

  result = sub_1DC0926D8(v0, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedModel);
  v3 = *(_QWORD *)(v1 - 96);
  *(_QWORD *)(v3 + 32) = 0;
  *(_OWORD *)v3 = 0u;
  *(_OWORD *)(v3 + 16) = 0u;
  return result;
}

void sub_1DC335C40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(_QWORD);
  char *v5;
  uint64_t v6;

  sub_1DC0F4CCC();
  MEMORY[0x1E0C80A78](v1);
  v2 = type metadata accessor for StockFeedModel();
  MEMORY[0x1E0C80A78](v2);
  sub_1DC0990BC(v0, (uint64_t)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  v5 = (char *)sub_1DC335D0C + 4 * byte_1DC428EB5[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1DC335D0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1DC0926D8(v1, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedMastheadModel);
  v2 = sub_1DC4011BC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v0, 1, 1, v2);
}

void sub_1DC335E48()
{
  swift_bridgeObjectRelease();
  swift_release();
  JUMPOUT(0x1DC335E08);
}

void sub_1DC335E5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(_QWORD);
  char *v6;
  uint64_t v7;

  v1 = sub_1DC4011BC();
  MEMORY[0x1E0C80A78](v1);
  sub_1DC0F4CCC();
  MEMORY[0x1E0C80A78](v2);
  v3 = type metadata accessor for StockFeedModel();
  MEMORY[0x1E0C80A78](v3);
  sub_1DC0990BC(v0, (uint64_t)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  v6 = (char *)sub_1DC335F68 + 4 * byte_1DC428EC0[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1DC335F68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1DC0926D8(v1, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedMastheadModel);
  v2 = sub_1DC406AFC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v0, 1, 1, v2);
}

void sub_1DC336104(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(_QWORD);
  char *v16;
  _QWORD v17[18];

  v17[3] = a2;
  v17[4] = a3;
  v17[10] = a2;
  v17[11] = a3;
  v17[6] = a4;
  v17[7] = a5;
  v17[12] = a4;
  v17[13] = a5;
  v17[8] = a6;
  v17[9] = a7;
  v17[14] = a6;
  v17[15] = a7;
  v17[5] = a8;
  v17[16] = a8;
  v17[17] = a9;
  v17[1] = a1;
  v17[2] = a9;
  v10 = sub_1DC403FAC();
  MEMORY[0x1E0C80A78](v10);
  sub_1DC0F4CCC();
  MEMORY[0x1E0C80A78](v11);
  MEMORY[0x1E0C80A78](v12);
  v13 = type metadata accessor for StockFeedModel();
  MEMORY[0x1E0C80A78](v13);
  sub_1DC0990BC(v9, (uint64_t)v17 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v15);
  v16 = (char *)sub_1DC336250 + 4 * byte_1DC428ECB[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1DC336250()
{
  uint64_t v0;

  sub_1DC0926D8(v0, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedModel);
  return 0;
}

void sub_1DC3363A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(_QWORD);
  char *v14;
  _QWORD v15[16];

  v15[5] = a5;
  v15[6] = a8;
  v15[7] = a1;
  v15[8] = a2;
  v15[3] = a4;
  v15[4] = a9;
  v15[9] = a3;
  v15[10] = a6;
  v15[11] = a7;
  v10 = sub_1DC406D48();
  MEMORY[0x1E0C80A78](v10);
  v11 = type metadata accessor for StockFeedModel();
  MEMORY[0x1E0C80A78](v11);
  sub_1DC0990BC(v9, (uint64_t)v15 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v13);
  v14 = (char *)sub_1DC33649C + 4 * byte_1DC428ED6[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1DC33649C()
{
  uint64_t v0;

  sub_1DC0926D8(v0, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedMastheadModel);
  return 0;
}

void sub_1DC3367F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1DC336104(a1, a2, a3, a4, a5, a6, a7, a8, a9);
}

void sub_1DC336800(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1DC3363A4(a1, a2, a3, a4, a5, a6, a7, a8, a9);
}

void sub_1DC33680C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(_QWORD);
  char *v4;
  uint64_t v5;

  v1 = type metadata accessor for StockFeedModel();
  MEMORY[0x1E0C80A78](v1);
  sub_1DC0990BC(v0, (uint64_t)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
  v4 = (char *)sub_1DC336898 + 4 * byte_1DC428EE1[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1DC336898()
{
  uint64_t v0;

  sub_1DC0926D8(v0, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedModel);
  return 0;
}

void sub_1DC336968()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(_QWORD);
  char *v4;
  uint64_t v5;

  v1 = type metadata accessor for StockFeedModel();
  MEMORY[0x1E0C80A78](v1);
  sub_1DC0990BC(v0, (uint64_t)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
  v4 = (char *)sub_1DC3369F4 + 4 * byte_1DC428EEC[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1DC3369F4()
{
  uint64_t v0;

  sub_1DC0926D8(v0, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedModel);
  return 0;
}

void sub_1DC336AC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(_QWORD);
  char *v4;
  uint64_t v5;

  v1 = type metadata accessor for StockFeedModel();
  MEMORY[0x1E0C80A78](v1);
  sub_1DC0990BC(v0, (uint64_t)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
  v4 = (char *)sub_1DC336B50 + 4 * byte_1DC428EF7[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1DC336B50()
{
  uint64_t v0;

  sub_1DC0926D8(v0, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedMastheadModel);
  return 0;
}

void sub_1DC336C20()
{
  sub_1DC336C4C();
}

void sub_1DC336C4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(_QWORD);
  char *v4;
  uint64_t v5;

  v1 = type metadata accessor for StockFeedModel();
  MEMORY[0x1E0C80A78](v1);
  sub_1DC0990BC(v0, (uint64_t)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
  v4 = (char *)sub_1DC336CEC + 4 * byte_1DC428F02[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1DC336CEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(_QWORD);
  unsigned int *v3;
  uint64_t v4;
  uint64_t v5;

  sub_1DC0926D8(v1, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedModel);
  v4 = *v3;
  v5 = v2(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(v0, v4, v5);
}

void sub_1DC336E00()
{
  sub_1DC336C4C();
}

void sub_1DC336E2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(_QWORD);
  char *v4;
  uint64_t v5;

  v1 = type metadata accessor for StockFeedModel();
  MEMORY[0x1E0C80A78](v1);
  sub_1DC0990BC(v0, (uint64_t)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
  v4 = (char *)sub_1DC336EB8 + 4 * byte_1DC428F0D[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1DC336EB8()
{
  uint64_t v0;

  sub_1DC0926D8(v0, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedModel);
  return 0;
}

uint64_t sub_1DC336F88@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0990BC(v5, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedModel);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v7 = sub_1DC407CFC();
  v8 = *(_QWORD *)(v7 - 8);
  if (EnumCaseMultiPayload == 9)
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(a1, v4, v7);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(a1, 1, 1, v7);
    return sub_1DC0926D8((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedModel);
  }
}

uint64_t sub_1DC33707C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = sub_1DC407CFC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return swift_storeEnumTagMultiPayload();
}

void sub_1DC3370D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(_QWORD);
  char *v6;
  uint64_t v7;

  v1 = sub_1DC4011BC();
  MEMORY[0x1E0C80A78](v1);
  sub_1DC0F4CCC();
  MEMORY[0x1E0C80A78](v2);
  v3 = type metadata accessor for StockFeedModel();
  MEMORY[0x1E0C80A78](v3);
  sub_1DC0990BC(v0, (uint64_t)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  v6 = (char *)&loc_1DC3371C8 + *((int *)qword_1DC3373F0 + swift_getEnumCaseMultiPayload());
  __asm { BR              X10 }
}

void sub_1DC3371D8()
{
  uint64_t v0;

  sub_1DC0926D8(v0, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedMastheadModel);
  sub_1DC33514C();
}

void sub_1DC337420()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(_QWORD);
  char *v6;
  uint64_t v7;

  v1 = sub_1DC407EAC();
  MEMORY[0x1E0C80A78](v1);
  sub_1DC0F4CCC();
  MEMORY[0x1E0C80A78](v2);
  v3 = type metadata accessor for StockFeedModel();
  MEMORY[0x1E0C80A78](v3);
  sub_1DC0990BC(v0, (uint64_t)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  v6 = (char *)sub_1DC337528 + 4 * byte_1DC428F18[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1DC337528()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1DC0926D8(v1, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedMastheadModel);
  v2 = *MEMORY[0x1E0D5CA08];
  v3 = sub_1DC407BE8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(v0, v2, v3);
}

void sub_1DC3375F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v3, v1, v2);
  sub_1DC0F5BE8(v0);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v2);
  JUMPOUT(0x1DC3375ACLL);
}

void sub_1DC33762C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1DC165FB8();
  swift_release();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v0, v2, v1);
  sub_1DC407E64();
  _s8StocksUI16OfflineAlertableV5titleSSSgvg_0();
  _s8StocksUI16OfflineAlertableV7messageSSSgvg_0();
  sub_1DC4073F0();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0, v1);
  JUMPOUT(0x1DC3375ACLL);
}

void sub_1DC3376AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_1DC407CFC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 32))(v0, v1, v2);
  JUMPOUT(0x1DC3375ACLL);
}

void sub_1DC3376D8()
{
  uint64_t v0;

  sub_1DC0926D8(v0, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedModel);
  sub_1DC33514C();
  sub_1DC407BB8();
  JUMPOUT(0x1DC3375ACLL);
}

uint64_t sub_1DC337708()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  v1 = v0;
  v2 = sub_1DC407CFC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0990BC(v1, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedModel);
  if (swift_getEnumCaseMultiPayload() == 9)
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    v9 = sub_1DC407CE4();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  else
  {
    sub_1DC0926D8((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedModel);
    return 0;
  }
  return v9;
}

void sub_1DC33781C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  _QWORD v74[7];
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  char *v81;
  char *v82;
  char *v83;
  char *v84;
  char *v85;
  char *v86;
  char *v87;
  char *v88;
  char *v89;
  char *v90;
  char *v91;
  char *v92;
  char *v93;
  char *v94;
  char *v95;
  char *v96;
  char *v97;
  char *v98;
  char *v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  char *v109;
  char *v110;
  char *v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;

  v115 = a2;
  v116 = (char *)a1;
  v2 = type metadata accessor for StockEarningsModel();
  MEMORY[0x1E0C80A78](v2);
  v91 = (char *)v74 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v90 = (char *)v74 - v5;
  v107 = sub_1DC407CFC();
  v105 = *(_QWORD *)(v107 - 8);
  MEMORY[0x1E0C80A78](v107);
  v89 = (char *)v74 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v88 = (char *)v74 - v8;
  v106 = sub_1DC407EAC();
  v104 = *(_QWORD *)(v106 - 8);
  MEMORY[0x1E0C80A78](v106);
  v87 = (char *)v74 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v86 = (char *)v74 - v11;
  sub_1DC0F4CCC();
  v102 = *(_QWORD *)(v12 - 8);
  v103 = v12;
  MEMORY[0x1E0C80A78](v12);
  v85 = (char *)v74 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v84 = (char *)v74 - v15;
  v75 = sub_1DC400370();
  v74[5] = *(_QWORD *)(v75 - 8);
  MEMORY[0x1E0C80A78](v75);
  v74[1] = (char *)v74 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC338CF0(0);
  v74[4] = v17;
  MEMORY[0x1E0C80A78](v17);
  v74[6] = (char *)v74 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = sub_1DC401030();
  v78 = *(_QWORD *)(v80 - 8);
  MEMORY[0x1E0C80A78](v80);
  v74[3] = (char *)v74 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0CD95C();
  v77 = v20;
  MEMORY[0x1E0C80A78](v20);
  v79 = (char *)v74 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC133AB4(0);
  MEMORY[0x1E0C80A78](v22);
  v74[2] = (char *)v74 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v24);
  v92 = (char *)v74 - v25;
  MEMORY[0x1E0C80A78](v26);
  v81 = (char *)v74 - v27;
  MEMORY[0x1E0C80A78](v28);
  v93 = (char *)v74 - v29;
  MEMORY[0x1E0C80A78](v30);
  v112 = (char *)v74 - v31;
  sub_1DC0FED34(0);
  MEMORY[0x1E0C80A78](v32);
  v76 = (char *)v74 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v34);
  v94 = (char *)v74 - v35;
  MEMORY[0x1E0C80A78](v36);
  v95 = (char *)v74 - v37;
  MEMORY[0x1E0C80A78](v38);
  v98 = (char *)v74 - v39;
  MEMORY[0x1E0C80A78](v40);
  v99 = (char *)v74 - v41;
  v42 = sub_1DC4010E4();
  v43 = *(_QWORD *)(v42 - 8);
  v113 = v42;
  v114 = v43;
  MEMORY[0x1E0C80A78](v42);
  v100 = (char *)v74 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v45);
  v101 = (char *)v74 - v46;
  MEMORY[0x1E0C80A78](v47);
  v83 = (char *)v74 - v48;
  MEMORY[0x1E0C80A78](v49);
  v82 = (char *)v74 - v50;
  v51 = type metadata accessor for StockFeedMastheadModel();
  MEMORY[0x1E0C80A78](v51);
  v96 = (char *)v74 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v53);
  v97 = (char *)v74 - v54;
  v55 = type metadata accessor for StockFeedModel();
  MEMORY[0x1E0C80A78](v55);
  v110 = (char *)v74 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v57);
  v109 = (char *)v74 - v58;
  MEMORY[0x1E0C80A78](v59);
  v111 = (char *)v74 - v60;
  MEMORY[0x1E0C80A78](v61);
  MEMORY[0x1E0C80A78](v62);
  MEMORY[0x1E0C80A78](v63);
  MEMORY[0x1E0C80A78](v64);
  v108 = (char *)v74 - v65;
  MEMORY[0x1E0C80A78](v66);
  MEMORY[0x1E0C80A78](v67);
  MEMORY[0x1E0C80A78](v68);
  sub_1DC338D04(0);
  MEMORY[0x1E0C80A78](v69);
  v72 = (char *)v74 + *(int *)(v71 + 48) - ((v70 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0990BC((uint64_t)v116, (uint64_t)v74 - ((v70 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for StockFeedModel);
  v116 = v72;
  sub_1DC0990BC(v115, (uint64_t)v72, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedModel);
  v73 = (char *)sub_1DC337F58 + 4 * word_1DC428F24[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1DC337F58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t (*v5)(_QWORD);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_1DC0990BC(v1, v0, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedModel);
  v3 = *(_QWORD *)(v2 - 96);
  if (swift_getEnumCaseMultiPayload())
  {
    sub_1DC0926D8(v0, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedMastheadModel);
    v4 = 0;
    v5 = (uint64_t (*)(_QWORD))sub_1DC338D04;
  }
  else
  {
    v6 = *(_QWORD *)(v2 - 248);
    sub_1DC092ED0(v0, v6, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedMastheadModel);
    v7 = v3;
    v8 = *(_QWORD *)(v2 - 256);
    sub_1DC092ED0(v7, v8, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedMastheadModel);
    v4 = sub_1DC2F2908(v6, v8);
    sub_1DC0926D8(v8, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedMastheadModel);
    sub_1DC0926D8(v6, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedMastheadModel);
    v5 = (uint64_t (*)(_QWORD))type metadata accessor for StockFeedModel;
  }
  sub_1DC0926D8(v1, v5);
  return v4 & 1;
}

void sub_1DC338CF0(uint64_t a1)
{
  sub_1DC338D18(a1, &qword_1EDB28BA8, sub_1DC133AB4);
}

void sub_1DC338D04(uint64_t a1)
{
  sub_1DC338D18(a1, &qword_1EDB27730, (void (*)(uint64_t))type metadata accessor for StockFeedModel);
}

void sub_1DC338D18(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t TupleTypeMetadata2;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v5)
      atomic_store(TupleTypeMetadata2, a2);
  }
}

uint64_t sub_1DC338D70@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int EnumCaseMultiPayload;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;

  v2 = v1;
  sub_1DC154164();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for StocksAudioTrack();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC338EE8(v2, (uint64_t)v6);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    sub_1DC27A2C4();
    goto LABEL_5;
  }
  if (EnumCaseMultiPayload == 1)
  {
    sub_1DC27A3D0();
LABEL_5:
    v12 = *(_QWORD *)&v6[*(int *)(v11 + 48)];
    v13 = &v6[*(int *)(v11 + 64)];
    sub_1DC154230((uint64_t)v6, (uint64_t)v9);
    v14 = sub_1DC401C18();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
    sub_1DC154088();
    v16 = v15;
    v17 = *(int *)(v15 + 48);
    sub_1DC154230((uint64_t)v9, a1);
    *(_QWORD *)(a1 + v17) = v12;
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(a1, 0, 1, v16);
  }
  sub_1DC154088();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(a1, 1, 1, v19);
}

uint64_t sub_1DC338EE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1DC154164();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC338F2C()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  __swift_destroy_boxed_opaque_existential_1(v0 + 136);
  __swift_destroy_boxed_opaque_existential_1(v0 + 176);
  __swift_destroy_boxed_opaque_existential_1(v0 + 216);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 280);
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 328);
  return v0;
}

uint64_t sub_1DC338F98()
{
  sub_1DC338F2C();
  return swift_deallocClassInstance();
}

uint64_t sub_1DC338FB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  double v61;
  double v62;
  double v63;
  double v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void *v70;
  char *v71;
  _QWORD *v72;
  __int128 v73;
  id v74;
  uint64_t v75;
  uint64_t v76;
  id v77;
  void *v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD v82[12];
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  id v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  char *v122;
  char *v123;
  uint64_t v124;
  __int128 v125;
  CGRect v126;
  _QWORD v127[2];
  __int128 v128;
  __int128 v129;
  void *v130;

  v124 = a3;
  sub_1DC0FFB28(0);
  MEMORY[0x1E0C80A78](v6);
  v121 = (char *)&v83 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v119 = sub_1DC4057D0();
  v118 = *(_QWORD *)(v119 - 8);
  MEMORY[0x1E0C80A78](v119);
  v123 = (char *)&v83 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v117 = sub_1DC4052FC();
  v116 = *(_QWORD *)(v117 - 8);
  MEMORY[0x1E0C80A78](v117);
  v122 = (char *)&v83 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v115 = sub_1DC406328();
  v114 = *(_QWORD *)(v115 - 8);
  MEMORY[0x1E0C80A78](v115);
  v113 = (char *)&v83 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v111 = sub_1DC407A5C();
  v110 = *(_QWORD *)(v111 - 8);
  MEMORY[0x1E0C80A78](v111);
  v109 = (uint64_t)&v83 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103 = sub_1DC40145C();
  v102 = *(_QWORD *)(v103 - 8);
  MEMORY[0x1E0C80A78](v103);
  v106 = (char *)&v83 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v108 = sub_1DC401450();
  v107 = *(_QWORD *)(v108 - 8);
  MEMORY[0x1E0C80A78](v108);
  v104 = (char *)&v83 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1DC401438();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v83 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC101FB4(0);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v83 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_1DC407BF4();
  v22 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  v24 = (char *)&v83 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v105 = v3;
  v101 = *(_QWORD *)(v3 + 256);
  sub_1DC0FE574(0, (unint64_t *)&qword_1EDB2AB80, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790]);
  v112 = v25;
  v120 = a1;
  v97 = sub_1DC406C70();
  v100 = v26;
  if (qword_1EDB2D2E8 != -1)
    swift_once();
  v27 = (void *)qword_1EDB2D2E0;
  v95 = qword_1EDB2D2E0;
  v28 = *MEMORY[0x1E0D5CA88];
  v99 = v22;
  v29 = *(void (**)(char *, uint64_t, uint64_t))(v22 + 104);
  v98 = v21;
  v29(v24, v28, v21);
  v30 = sub_1DC407C84();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v20, 1, 1, v30);
  (*(void (**)(char *, _QWORD, uint64_t))(v15 + 104))(v17, *MEMORY[0x1E0DB5D88], v14);
  v96 = v27;
  sub_1DC405230();
  sub_1DC4092B0();
  v92 = v31;
  v91 = v32;
  sub_1DC405230();
  v90 = v33;
  v89 = v34;
  sub_1DC405260();
  v88 = v35;
  v87 = v36;
  sub_1DC40520C();
  v86 = v37;
  v85 = v38;
  sub_1DC40526C();
  v84 = v39;
  v83 = v40;
  sub_1DC405254();
  sub_1DC405224();
  v42 = v41;
  v44 = v43;
  v46 = v45;
  v48 = v47;
  sub_1DC405248();
  v94 = v14;
  sub_1DC40529C();
  v93 = v15;
  sub_1DC40523C();
  v50 = v49;
  v52 = v51;
  v54 = v53;
  v56 = v55;
  (*(void (**)(char *, _QWORD, uint64_t))(v102 + 104))(v106, *MEMORY[0x1E0DB6098], v103);
  v82[6] = 0;
  v82[7] = 0;
  v82[10] = v54;
  v82[11] = v56;
  v82[8] = v50;
  v82[9] = v52;
  v82[4] = v46;
  v82[5] = v48;
  v82[2] = v42;
  v82[3] = v44;
  v82[1] = v83;
  v82[0] = v84;
  v57 = v104;
  sub_1DC401444();
  v58 = v109;
  v59 = v105;
  sub_1DC3399AC(v105, v109);
  v106 = (char *)sub_1DC407558();
  swift_bridgeObjectRelease();

  (*(void (**)(uint64_t, uint64_t))(v110 + 8))(v58, v111);
  (*(void (**)(char *, uint64_t))(v107 + 8))(v57, v108);
  (*(void (**)(char *, uint64_t))(v93 + 8))(v17, v94);
  sub_1DC0926D8((uint64_t)v20, (uint64_t (*)(_QWORD))sub_1DC101FB4);
  (*(void (**)(char *, uint64_t))(v99 + 8))(v24, v98);
  sub_1DC405224();
  v60 = sub_1DC408F68();
  MEMORY[0x1DF0C97B8](v60, 0.0, v61, v62, v63, v64);
  v65 = __swift_project_boxed_opaque_existential_1((_QWORD *)(v59 + 216), *(_QWORD *)(v59 + 240));
  sub_1DC405230();
  v67 = v66;
  v69 = v68;
  v70 = (void *)sub_1DC405254();
  v71 = v113;
  sub_1DC405200();
  v72 = (_QWORD *)*v65;
  v127[0] = v67;
  v127[1] = v69;
  v73 = *(_OWORD *)(MEMORY[0x1E0DC49E8] + 16);
  v128 = *MEMORY[0x1E0DC49E8];
  v129 = v73;
  v130 = v70;
  __swift_project_boxed_opaque_existential_1(v72 + 2, v72[5]);
  v74 = v70;
  sub_1DC103804(COERCE_DOUBLE(v127), &v125);
  CGRectGetMinY(v126);
  __swift_project_boxed_opaque_existential_1(v72 + 7, v72[10]);
  if (qword_1EDB276F0 != -1)
    swift_once();
  v75 = qword_1EDB276E0;
  v76 = *(_QWORD *)algn_1EDB276E8;
  swift_bridgeObjectRetain();
  v77 = sub_1DC103D30(v75, v76, v74);
  swift_bridgeObjectRelease();
  v78 = (void *)sub_1DC4091A8();

  objc_msgSend(v78, sel_ascender);
  objc_msgSend(v78, sel_capHeight);

  sub_1DC104498((uint64_t)&v125);
  (*(void (**)(char *, uint64_t))(v114 + 8))(v71, v115);
  (*(void (**)(char *, uint64_t, uint64_t))(v116 + 16))(v122, a2, v117);
  (*(void (**)(char *, _QWORD, uint64_t))(v118 + 104))(v123, *MEMORY[0x1E0DB9DD8], v119);
  v79 = (uint64_t)v121;
  v80 = (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v112 - 8) + 16))(v121, v120);
  MEMORY[0x1E0C80A78](v80);
  sub_1DC33ED14(v79, (void (*)(uint64_t, char *))sub_1DC33F828, (uint64_t)v82);
  sub_1DC0926D8(v79, (uint64_t (*)(_QWORD))sub_1DC0FFB28);
  type metadata accessor for ForYouFeedLayoutSectionDescriptor(0);
  type metadata accessor for ForYouFeedLayoutModel();
  sub_1DC080808(&qword_1EDB3BAD8, type metadata accessor for ForYouFeedLayoutSectionDescriptor, (uint64_t)&unk_1DC42E530);
  sub_1DC080808((unint64_t *)&unk_1EDB32A70, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedLayoutModel, (uint64_t)&unk_1DC430478);
  sub_1DC404564();
  return swift_release();
}

uint64_t sub_1DC3399AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v21 = a1;
  v24 = a2;
  v2 = sub_1DC407A50();
  MEMORY[0x1E0C80A78](v2);
  v3 = sub_1DC4079B4();
  v22 = *(_QWORD *)(v3 - 8);
  v23 = v3;
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1DC4079CC();
  MEMORY[0x1E0C80A78](v6);
  v7 = sub_1DC4079E4();
  MEMORY[0x1E0C80A78](v7);
  v8 = sub_1DC407A08();
  MEMORY[0x1E0C80A78](v8);
  v9 = sub_1DC407A20();
  MEMORY[0x1E0C80A78](v9);
  sub_1DC089DA4(0, &qword_1EDB426D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5BDD8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v21 - v11;
  v13 = sub_1DC407A2C();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v21 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(_BYTE *)(v21 + 272) & 1) != 0)
  {
    sub_1DC407A14();
    v18 = sub_1DC4079F0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v12, 1, 1, v18);
    (*(void (**)(char *, _QWORD, uint64_t))(v14 + 104))(v17, *MEMORY[0x1E0D5BE00], v13);
  }
  else
  {
    (*(void (**)(char *, _QWORD, uint64_t, __n128))(v14 + 104))(v17, *MEMORY[0x1E0D5BE00], v13, v15);
    v19 = sub_1DC4079F0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v12, 1, 1, v19);
    sub_1DC407A14();
  }
  sub_1DC4079D8();
  sub_1DC4079D8();
  (*(void (**)(char *, _QWORD, uint64_t))(v22 + 104))(v5, *MEMORY[0x1E0D5BD98], v23);
  sub_1DC4079C0();
  sub_1DC407A44();
  return sub_1DC407A38();
}

void sub_1DC339CDC(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  _QWORD v93[8];
  uint64_t v94;
  uint64_t v95;
  char *v96;
  char *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  char *v104;
  char *v105;
  char *v106;
  char *v107;
  char *v108;
  char *v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  char *v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  char *v122;
  char *v123;
  char *v124;
  char *v125;
  char *v126;
  char *v127;
  char *v128;
  char *v129;
  char *v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  char *v135;
  char *v136;
  char *v137;
  uint64_t v138;
  char *v139;
  char *v140;
  char *v141;
  char *v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  char *v146;
  uint64_t v147;
  char *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  char *v157;
  char *v158;
  char *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;

  v150 = a5;
  v151 = a4;
  v147 = a3;
  v110 = a1;
  v153 = a6;
  v162 = type metadata accessor for ForYouFeedLayoutModel();
  MEMORY[0x1E0C80A78](v162);
  v7 = sub_1DC407B04();
  v161 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  sub_1DC0FF434();
  v160 = v8;
  MEMORY[0x1E0C80A78](v8);
  v158 = (char *)v93 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v157 = (char *)v93 - v11;
  MEMORY[0x1E0C80A78](v12);
  v159 = (char *)v93 - v13;
  sub_1DC0F4468(0);
  MEMORY[0x1E0C80A78](v14);
  v129 = (char *)v93 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for CuratedForYouFeedGroup();
  MEMORY[0x1E0C80A78](v16);
  v128 = (char *)v93 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for ForYouFeedLayoutSectionDescriptor.StockSectionFooter(0);
  MEMORY[0x1E0C80A78](v18);
  v135 = (char *)v93 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0FE51C(0);
  MEMORY[0x1E0C80A78](v20);
  v137 = (char *)v93 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v112 = type metadata accessor for StockTitleViewLayoutOptions();
  MEMORY[0x1E0C80A78](v112);
  v113 = (char *)v93 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v95 = type metadata accessor for StockTitleViewLayoutAttributes();
  MEMORY[0x1E0C80A78](v95);
  v141 = (char *)v93 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for StockTitleViewModel();
  MEMORY[0x1E0C80A78](v24);
  v134 = (char *)v93 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v120 = sub_1DC4052FC();
  v103 = *(_QWORD *)(v120 - 8);
  MEMORY[0x1E0C80A78](v120);
  v105 = (char *)v93 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = type metadata accessor for StockViewModel();
  MEMORY[0x1E0C80A78](v27);
  v111 = (char *)v93 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v29);
  v140 = (char *)v93 - v30;
  v133 = sub_1DC4010E4();
  v132 = *(_QWORD *)(v133 - 8);
  MEMORY[0x1E0C80A78](v133);
  v139 = (char *)v93 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = sub_1DC406358();
  v152 = *(_QWORD *)(v32 - 8);
  MEMORY[0x1E0C80A78](v32);
  v126 = (char *)v93 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v34);
  v125 = (char *)v93 - v35;
  MEMORY[0x1E0C80A78](v36);
  v127 = (char *)v93 - v37;
  MEMORY[0x1E0C80A78](v38);
  v118 = (char *)v93 - v39;
  MEMORY[0x1E0C80A78](v40);
  v143 = (char *)v93 - v41;
  v156 = type metadata accessor for ForYouFeedLayoutSectionDescriptor(0);
  MEMORY[0x1E0C80A78](v156);
  v123 = (char *)v93 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v43);
  v122 = (char *)v93 - v44;
  MEMORY[0x1E0C80A78](v45);
  v124 = (char *)v93 - v46;
  MEMORY[0x1E0C80A78](v47);
  v142 = (char *)v93 - v48;
  v115 = sub_1DC406040();
  v114 = *(_QWORD *)(v115 - 8);
  MEMORY[0x1E0C80A78](v115);
  v116 = (char *)v93 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0F4528(0);
  MEMORY[0x1E0C80A78](v50);
  v130 = (char *)v93 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v52);
  v117 = (char *)v93 - v53;
  v145 = sub_1DC4073A8();
  v144 = *(_QWORD *)(v145 - 8);
  MEMORY[0x1E0C80A78](v145);
  v104 = (char *)v93 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v55);
  v96 = (char *)v93 - v56;
  MEMORY[0x1E0C80A78](v57);
  v97 = (char *)v93 - v58;
  v155 = sub_1DC407510();
  v149 = *(_QWORD *)(v155 - 8);
  MEMORY[0x1E0C80A78](v155);
  MEMORY[0x1E0C80A78](v59);
  v102 = (char *)v93 - v60;
  MEMORY[0x1E0C80A78](v61);
  v121 = (char *)v93 - v62;
  MEMORY[0x1E0C80A78](v63);
  v131 = (char *)v93 - v64;
  v100 = sub_1DC406328();
  v99 = *(_QWORD *)(v100 - 8);
  MEMORY[0x1E0C80A78](v100);
  v93[1] = (char *)v93 - ((v65 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v66);
  v93[5] = (char *)v93 - v67;
  v101 = type metadata accessor for ForYouTitleViewLayoutOptions();
  MEMORY[0x1E0C80A78](v101);
  v93[2] = (char *)v93 - ((v68 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v69);
  v93[6] = (char *)v93 - v70;
  v94 = type metadata accessor for ForYouTitleViewLayoutAttributes();
  MEMORY[0x1E0C80A78](v94);
  v93[4] = (char *)v93 - ((v71 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v72);
  v93[7] = (char *)v93 - v73;
  v74 = type metadata accessor for AttributionSource();
  MEMORY[0x1E0C80A78](v74);
  v98 = (char *)v93 - ((v75 + 15) & 0xFFFFFFFFFFFFFFF0);
  v138 = type metadata accessor for ForYouFeedLayoutSectionDescriptor.LegacyHeader(0);
  v119 = *(_QWORD *)(v138 - 8);
  MEMORY[0x1E0C80A78](v138);
  v106 = (char *)v93 - ((v76 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v77);
  v93[3] = (char *)v93 - v78;
  MEMORY[0x1E0C80A78](v79);
  v108 = (char *)v93 - v80;
  MEMORY[0x1E0C80A78](v81);
  v136 = (char *)v93 - v82;
  sub_1DC0FEF78(0);
  MEMORY[0x1E0C80A78](v83);
  v107 = (char *)v93 - ((v84 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v85);
  v148 = (char *)v93 - v86;
  MEMORY[0x1E0C80A78](v87);
  v109 = (char *)v93 - v88;
  MEMORY[0x1E0C80A78](v89);
  v146 = (char *)v93 - v90;
  v91 = type metadata accessor for ForYouFeedSectionDescriptor();
  MEMORY[0x1E0C80A78](v91);
  sub_1DC0FE574(0, (unint64_t *)&qword_1EDB29D00, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60]);
  v154 = a2;
  sub_1DC4046FC();
  v92 = (char *)sub_1DC33A7E0 + 4 * word_1DC4292C0[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1DC33A7E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  double v3;
  double v4;
  uint64_t v5;
  double v6;
  void *v7;
  id v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  double v14;
  uint64_t v15;
  void *v16;
  void *v17;
  void *v18;
  double v19;
  double v20;
  void *v21;
  double v22;
  double v23;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  BOOL v55;
  double v56;
  char *v57;
  int *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  uint64_t v65;
  int EnumCaseMultiPayload;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v71;
  uint64_t v72;
  uint64_t *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t *v76;
  uint64_t MaxY;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  void (*v83)(uint64_t);
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t result;
  CGRect v96;
  CGRect v97;
  CGRect v98;
  CGRect v99;
  CGRect v100;

  sub_1DC092ED0(v1, *(_QWORD *)(v2 - 432), (uint64_t (*)(_QWORD))sub_1DC0FEF78);
  v7 = (void *)sub_1DC405254();
  v8 = objc_msgSend(v7, sel_horizontalSizeClass);

  *(_QWORD *)(v2 - 912) = v0;
  if (v8 && v8 != (id)2)
  {
    v32 = *(_QWORD **)(v2 - 392);
    v10 = *(_QWORD *)(v2 - 512);
    if (v8 != (id)1)
    {
      result = sub_1DC409838();
      __break(1u);
      return result;
    }
    v33 = v32[38];
    v34 = v32[39];
    __swift_project_boxed_opaque_existential_1(v32 + 35, v33);
    v35 = *(uint64_t **)(v2 - 816);
    AttributionProviderType.source.getter(v33, v34);
    v36 = v32[40];
    sub_1DC0824D4((uint64_t)(v32 + 41), v2 - 296);
    swift_unknownObjectRetain();
    sub_1DC25D008(v35, v36, (__int128 *)(v2 - 296), (uint64_t *)(v2 - 256));
    sub_1DC0824D4((uint64_t)(v32 + 17), v2 - 296);
    *(_QWORD *)(v2 - 312) = __swift_project_boxed_opaque_existential_1((_QWORD *)(v2 - 296), *(_QWORD *)(v2 - 272));
    sub_1DC4052F0();
    v38 = v37;
    v40 = v39;
    sub_1DC408F68();
    v42 = v41;
    v44 = v43;
    v46 = v45;
    v48 = v47;
    v49 = *(_QWORD *)(v2 - 872);
    sub_1DC405200();
    sub_1DC405218();
    v51 = v50;
    v52 = sub_1DC405254();
    v53 = sub_1DC40529C();
    v31 = *(_QWORD *)(v2 - 448);
    v30 = *(_QWORD *)(v2 - 440);
    v54 = (*(uint64_t (**)(_QWORD, uint64_t, uint64_t))(v31 + 48))(*(_QWORD *)(v2 - 432), 1, v30);
    v55 = v54 == 1;
    if (v54 == 1)
      v56 = 14.0;
    else
      v56 = 4.0;
    v57 = *(char **)(v2 - 864);
    *(_QWORD *)v57 = v38;
    *((_QWORD *)v57 + 1) = v40;
    *((_QWORD *)v57 + 2) = v42;
    *((_QWORD *)v57 + 3) = v44;
    *((_QWORD *)v57 + 4) = v46;
    *((_QWORD *)v57 + 5) = v48;
    v58 = *(int **)(v2 - 792);
    (*(void (**)(char *, uint64_t, _QWORD))(*(_QWORD *)(v2 - 808) + 32))(&v57[v58[6]], v49, *(_QWORD *)(v2 - 800));
    *(_QWORD *)&v57[v58[7]] = v51;
    *(_QWORD *)&v57[v58[8]] = v52;
    *(_QWORD *)&v57[v58[9]] = v53;
    v57[v58[10]] = 1;
    v57[v58[11]] = v55;
    *(_QWORD *)&v57[v58[12]] = 0x4000000000000000;
    *(double *)&v57[v58[13]] = v56;
    v59 = *(_QWORD *)(v2 - 856);
    sub_1DC102A30((_QWORD *)(v2 - 256), (uint64_t)v57, v59);
    sub_1DC0926D8((uint64_t)v57, (uint64_t (*)(_QWORD))type metadata accessor for ForYouTitleViewLayoutOptions);
    __swift_destroy_boxed_opaque_existential_1(v2 - 296);
    sub_1DC0F45FC(0, &qword_1EDB31870, (void (*)(uint64_t))type metadata accessor for ForYouTitleViewLayoutAttributes);
    v61 = v10 + *(int *)(v60 + 48);
    v62 = *(_OWORD *)(v2 - 192);
    *(_QWORD *)(v10 + 80) = *(_QWORD *)(v2 - 176);
    v63 = *(_OWORD *)(v2 - 224);
    *(_OWORD *)(v10 + 48) = *(_OWORD *)(v2 - 208);
    *(_OWORD *)(v10 + 64) = v62;
    v64 = *(_OWORD *)(v2 - 240);
    *(_OWORD *)v10 = *(_OWORD *)(v2 - 256);
    *(_OWORD *)(v10 + 16) = v64;
    *(_OWORD *)(v10 + 32) = v63;
    sub_1DC092ED0(v59, v61, (uint64_t (*)(_QWORD))type metadata accessor for ForYouTitleViewLayoutAttributes);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    *(_QWORD *)(v2 - 328) = v5;
    v9 = __swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)(v2 - 392) + 16), *(_QWORD *)(*(_QWORD *)(v2 - 392) + 40));
    v10 = *(_QWORD *)(v2 - 512);
    if (qword_1EDB40C08 != -1)
      swift_once();
    v11 = qword_1EDB5E140;
    v12 = *(_QWORD *)algn_1EDB5E148;
    sub_1DC4052F0();
    v14 = v13;
    *(double *)(v2 - 312) = v13;
    *(_QWORD *)(v2 - 344) = v15;
    v16 = (void *)sub_1DC405254();
    sub_1DC0F45FC(0, (unint64_t *)&unk_1EDB40C10, (void (*)(uint64_t))type metadata accessor for SectionHeaderViewLayoutAttributes);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(*v9 + 16), *(_QWORD *)(*v9 + 40));
    v17 = (void *)sub_1DC20D5DC(v11, v12, v16);
    v18 = (void *)sub_1DC4091A8();
    objc_msgSend(v18, sel_ascender);
    v20 = v19;

    v21 = (void *)sub_1DC4091A8();
    objc_msgSend(v21, sel_capHeight);
    v23 = v22;

    *(double *)(v2 - 416) = v6 - (v20 - v23);
    *(double *)(v2 - 336) = v14 - v4 - v3;
    objc_msgSend(v17, sel_boundingRectWithSize_options_context_, 33, 0);
    x = v96.origin.x;
    y = v96.origin.y;
    *(double *)(v2 - 320) = v3;
    width = v96.size.width;
    height = v96.size.height;
    CGRectGetHeight(v96);
    v97.origin.x = x;
    v97.origin.y = y;
    v97.size.width = width;
    v97.size.height = height;
    CGRectGetWidth(v97);
    v98.origin.x = x;
    v98.origin.y = y;
    v98.size.width = width;
    v98.size.height = height;
    CGRectGetHeight(v98);
    MEMORY[0x1E0C80A78](v28);
    type metadata accessor for SectionHeaderViewLayoutAttributes();
    sub_1DC4051C4();

    v29 = *(_QWORD *)algn_1EDB5E148;
    *(_QWORD *)v10 = qword_1EDB5E140;
    *(_QWORD *)(v10 + 8) = v29;
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    v30 = *(_QWORD *)(v2 - 440);
    v31 = *(_QWORD *)(v2 - 448);
  }
  v65 = *(_QWORD *)(v2 - 736);
  sub_1DC0990BC(v10, v65, type metadata accessor for ForYouFeedLayoutSectionDescriptor.LegacyHeader);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v67 = *(_QWORD *)(v2 - 552);
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      swift_bridgeObjectRelease();
      sub_1DC0F45FC(0, (unint64_t *)&unk_1EDB40C10, (void (*)(uint64_t))type metadata accessor for SectionHeaderViewLayoutAttributes);
      v69 = v65 + *(int *)(v68 + 48);
      *(_QWORD *)(v2 - 232) = type metadata accessor for SectionHeaderViewLayoutAttributes();
      *(_QWORD *)(v2 - 224) = sub_1DC080808(&qword_1EDB40EF0, (uint64_t (*)(uint64_t))type metadata accessor for SectionHeaderViewLayoutAttributes, (uint64_t)&unk_1DC40E158);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v2 - 256));
      sub_1DC092ED0(v69, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(_QWORD))type metadata accessor for SectionHeaderViewLayoutAttributes);
    }
    else
    {
      sub_1DC0FD654();
      v75 = v65 + *(int *)(v74 + 48);
      *(_QWORD *)(v2 - 232) = *(_QWORD *)(v2 - 840);
      *(_QWORD *)(v2 - 224) = sub_1DC080808(&qword_1EDB3A080, (uint64_t (*)(uint64_t))type metadata accessor for StockTitleViewLayoutAttributes, (uint64_t)&unk_1DC425D30);
      v76 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v2 - 256));
      sub_1DC092ED0(v75, (uint64_t)v76, (uint64_t (*)(_QWORD))type metadata accessor for StockTitleViewLayoutAttributes);
      sub_1DC0926D8(v65, (uint64_t (*)(_QWORD))type metadata accessor for StockViewModel);
    }
  }
  else
  {
    sub_1DC0F45FC(0, &qword_1EDB31870, (void (*)(uint64_t))type metadata accessor for ForYouTitleViewLayoutAttributes);
    v72 = v65 + *(int *)(v71 + 48);
    *(_QWORD *)(v2 - 232) = *(_QWORD *)(v2 - 848);
    *(_QWORD *)(v2 - 224) = sub_1DC080808(&qword_1EDB3A4E8, (uint64_t (*)(uint64_t))type metadata accessor for ForYouTitleViewLayoutAttributes, (uint64_t)&unk_1DC422340);
    v73 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v2 - 256));
    sub_1DC092ED0(v72, (uint64_t)v73, (uint64_t (*)(_QWORD))type metadata accessor for ForYouTitleViewLayoutAttributes);
    sub_1DC101F40(v65);
  }
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v2 - 256), *(_QWORD *)(v2 - 232));
  sub_1DC40622C();
  MaxY = CGRectGetMaxY(v99);
  __swift_destroy_boxed_opaque_existential_1(v2 - 256);
  v78 = *(_QWORD *)(v2 - 728);
  sub_1DC0990BC(*(_QWORD *)(v2 - 432), v78, (uint64_t (*)(_QWORD))sub_1DC0FEF78);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v31 + 48))(v78, 1, v30) == 1)
  {
    v79 = sub_1DC0926D8(v78, (uint64_t (*)(_QWORD))sub_1DC0FEF78);
    MEMORY[0x1E0C80A78](v79);
    sub_1DC40751C();
  }
  else
  {
    v80 = *(_QWORD *)(v2 - 824);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 32))(v80, v78, v30);
    sub_1DC33C79C(v80, *(_QWORD *)(v2 - 368), *(_QWORD *)(v2 - 400), 0, MaxY, 0, MaxY, v67, 0);
    (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v80, v30);
  }
  *(_QWORD *)(v2 - 312) = sub_1DC33CE00();
  v81 = *(_QWORD *)(v2 - 664);
  v82 = *(_QWORD *)(v2 - 432);
  sub_1DC33D078(v82, v67, v81);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v2 - 688) + 104))(*(_QWORD *)(v2 - 672), *MEMORY[0x1E0DBB2B0], *(_QWORD *)(v2 - 680));
  sub_1DC407504();
  CGRectGetMaxY(v100);
  sub_1DC408494();
  v83 = (void (*)(uint64_t))MEMORY[0x1E0D604D8];
  swift_allocObject();
  v84 = sub_1DC408488();
  sub_1DC0F4484(0, &qword_1EDB3B9D8, (void (*)(uint64_t))type metadata accessor for ForYouFeedLayoutSectionDescriptor.LegacyHeader, v83);
  v86 = *(_QWORD *)(v2 - 464);
  v87 = v86 + *(int *)(v85 + 48);
  v88 = *(int *)(v85 + 64);
  sub_1DC0990BC(v81, v86, (uint64_t (*)(_QWORD))sub_1DC0F4528);
  v89 = *(_QWORD *)(v2 - 512);
  sub_1DC0990BC(v89, v87, type metadata accessor for ForYouFeedLayoutSectionDescriptor.LegacyHeader);
  *(_QWORD *)(v86 + v88) = v84;
  swift_storeEnumTagMultiPayload();
  v90 = *MEMORY[0x1E0DBBA10];
  v91 = sub_1DC406340();
  v92 = *(_QWORD *)(v2 - 456);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v91 - 8) + 104))(v92, v90, v91);
  (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v2 - 384) + 104))(v92, *MEMORY[0x1E0DBBA20], *(_QWORD *)(v2 - 912));
  sub_1DC080808(&qword_1EDB3BAD8, type metadata accessor for ForYouFeedLayoutSectionDescriptor, (uint64_t)&unk_1DC42E530);
  sub_1DC080808((unint64_t *)&unk_1EDB32A70, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedLayoutModel, (uint64_t)&unk_1DC430478);
  v93 = *(_QWORD *)(v2 - 376);
  sub_1DC405320();
  sub_1DC0926D8(v81, (uint64_t (*)(_QWORD))sub_1DC0F4528);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v2 - 408) + 8))(*(_QWORD *)(v2 - 552), *(_QWORD *)(v2 - 360));
  sub_1DC0926D8(v89, type metadata accessor for ForYouFeedLayoutSectionDescriptor.LegacyHeader);
  sub_1DC0926D8(v82, (uint64_t (*)(_QWORD))sub_1DC0FEF78);
  sub_1DC0EFABC();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v94 - 8) + 56))(v93, 0, 1, v94);
}

uint64_t sub_1DC33C79C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, int a6@<W5>, uint64_t a7@<X7>, uint64_t a8@<X8>, unsigned __int8 a9)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *, uint64_t);
  uint64_t v42;
  uint64_t v43;
  void (*v44)(char *, uint64_t, uint64_t, uint64_t);
  _QWORD v46[4];
  int v47;
  uint64_t v48;
  int v49;
  char *v50;
  char *v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD v58[6];

  v46[2] = a7;
  v46[3] = a2;
  v49 = a6;
  v55 = a4;
  v56 = a5;
  v57 = a3;
  v54 = a8;
  v47 = a9;
  sub_1DC089DA4(0, &qword_1EDB29120, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB6148], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v10);
  v53 = (char *)v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v52 = (char *)v46 - v13;
  MEMORY[0x1E0C80A78](v14);
  v51 = (char *)v46 - v15;
  MEMORY[0x1E0C80A78](v16);
  v50 = (char *)v46 - v17;
  v18 = sub_1DC407FFC();
  MEMORY[0x1E0C80A78](v18);
  v46[1] = (char *)v46 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC14272C(0);
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)v46 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_1DC4073A8();
  v24 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  v26 = (char *)v46 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC142748(0);
  MEMORY[0x1E0C80A78](v27);
  v29 = (char *)v46 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC142764(0);
  MEMORY[0x1E0C80A78](v30);
  v32 = (char *)v46 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = sub_1DC407EDC();
  v34 = *(_QWORD *)(v33 - 8);
  MEMORY[0x1E0C80A78](v33);
  v36 = (char *)v46 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC40739C();
  v37 = sub_1DC407408();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v32, 1, 1, v37);
  v38 = *(void (**)(char *, uint64_t, uint64_t))(v24 + 16);
  v48 = a1;
  v38(v26, a1, v23);
  sub_1DC407954();
  v39 = sub_1DC407960();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v29, 0, 1, v39);
  v40 = sub_1DC407708();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v22, 1, 1, v40);
  sub_1DC0FE574(0, (unint64_t *)&qword_1EDB29D00, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60]);
  sub_1DC080808((unint64_t *)&unk_1EDB375F0, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedSectionDescriptor, (uint64_t)&unk_1DC425B54);
  sub_1DC080808(&qword_1EDB2E080, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedModel, (uint64_t)&unk_1DC42EDB8);
  sub_1DC40478C();
  sub_1DC0926D8((uint64_t)v22, (uint64_t (*)(_QWORD))sub_1DC14272C);
  sub_1DC0926D8((uint64_t)v29, (uint64_t (*)(_QWORD))sub_1DC142748);
  sub_1DC0926D8((uint64_t)v32, (uint64_t (*)(_QWORD))sub_1DC142764);
  v41 = *(void (**)(char *, uint64_t))(v34 + 8);
  v41(v36, v33);
  if ((v47 & 1) == 0)
  {
    sub_1DC089DA4(0, &qword_1EDB3FFA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5D670], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    sub_1DC407E34();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1DC40DC10;
    sub_1DC407FE4();
    sub_1DC407E28();
  }
  sub_1DC40739C();
  v42 = sub_1DC40841C();
  swift_bridgeObjectRelease();
  v41(v36, v33);
  v58[3] = sub_1DC4082FC();
  v58[4] = MEMORY[0x1E0D5F208];
  v58[0] = v42;
  v43 = sub_1DC40148C();
  v44 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56);
  v44(v50, 1, 1, v43);
  v44(v51, 1, 1, v43);
  v44(v52, 1, 1, v43);
  v44(v53, 1, 1, v43);
  sub_1DC401480();
  swift_allocObject();
  swift_retain();
  sub_1DC401474();
  sub_1DC40754C();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return sub_1DC0926D8((uint64_t)v58, (uint64_t (*)(_QWORD))sub_1DC0FF598);
}

uint64_t sub_1DC33CD78()
{
  _OWORD v1[2];
  uint64_t v2;

  sub_1DC0FE574(0, (unint64_t *)&qword_1EDB29D00, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60]);
  sub_1DC0FF4B0();
  memset(v1, 0, sizeof(v1));
  v2 = 0;
  sub_1DC407540();
  return sub_1DC0926D8((uint64_t)v1, (uint64_t (*)(_QWORD))sub_1DC0FF598);
}

uint64_t sub_1DC33CE00()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  int64_t v11;
  unint64_t v12;
  uint64_t v13;
  void (*v14)(char *, unint64_t, uint64_t);
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD v19[2];
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v24 = type metadata accessor for ForYouFeedLayoutModel();
  MEMORY[0x1E0C80A78](v24);
  v1 = (char *)v19 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_1DC407B04();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0FF434();
  v23 = v6;
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1DC4074E0();
  v11 = *(_QWORD *)(v10 + 16);
  if (v11)
  {
    v25 = MEMORY[0x1E0DEE9D8];
    sub_1DC0FF228(0, v11, 0);
    v12 = v10 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v13 = *(_QWORD *)(v3 + 72);
    v19[1] = v10;
    v20 = v13;
    v14 = *(void (**)(char *, unint64_t, uint64_t))(v3 + 16);
    v21 = v9;
    v22 = v3;
    do
    {
      v14(v5, v12, v2);
      v14(v1, (unint64_t)v5, v2);
      swift_storeEnumTagMultiPayload();
      sub_1DC080808((unint64_t *)&unk_1EDB32A60, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedLayoutModel, (uint64_t)&unk_1DC430440);
      sub_1DC404DD4();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      v15 = v25;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1DC0FF228(0, *(_QWORD *)(v15 + 16) + 1, 1);
        v15 = v25;
      }
      v17 = *(_QWORD *)(v15 + 16);
      v16 = *(_QWORD *)(v15 + 24);
      if (v17 >= v16 >> 1)
      {
        sub_1DC0FF228(v16 > 1, v17 + 1, 1);
        v15 = v25;
      }
      *(_QWORD *)(v15 + 16) = v17 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v15+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(_QWORD *)(v7 + 72) * v17, v21, v23);
      v25 = v15;
      v12 += v20;
      --v11;
      v3 = v22;
    }
    while (v11);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
  return v15;
}

uint64_t sub_1DC33D078@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v22 = a2;
  v23 = a3;
  v4 = sub_1DC407510();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0FEF78(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1DC4073A8();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v22 - v16;
  sub_1DC0990BC(a1, (uint64_t)v10, (uint64_t (*)(_QWORD))sub_1DC0FEF78);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_1DC0926D8((uint64_t)v10, (uint64_t (*)(_QWORD))sub_1DC0FEF78);
    sub_1DC0F4468(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v23, 1, 1, v18);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v17, v10, v11);
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v14, v17, v11);
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v22, v4);
    v20 = v23;
    sub_1DC33D268((uint64_t)v14, (uint64_t)v7, v23);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v11);
    sub_1DC0F4468(0);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v20, 0, 1, v21);
  }
}

uint64_t sub_1DC33D268@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  char *v26;
  uint64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  int64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  void (*v47)(char *, unint64_t, uint64_t);
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  void (*v58)(char *, unint64_t, uint64_t);
  uint64_t v59;
  char *v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t result;
  uint64_t v66;
  void (*v67)(char *, uint64_t);
  void (*v68)(char *, uint64_t, uint64_t);
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;

  v75 = a1;
  v5 = type metadata accessor for ForYouFeedLayoutSectionDescriptor.Header(0);
  v77 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v66 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1DC407B64();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v66 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ForYouFeedLayoutSectionDescriptor.Footer(0);
  v78 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v66 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = sub_1DC407690();
  v83 = *(_QWORD *)(v81 - 8);
  MEMORY[0x1E0C80A78](v81);
  v80 = (char *)&v66 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for ForYouFeedLayoutSectionDescriptor.Decoration(0);
  v79 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v85 = (uint64_t)&v66 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_1DC406040();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v21 = (char *)&v66 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_1DC4073A8();
  v71 = *(_QWORD *)(v22 - 8);
  v72 = v22;
  (*(void (**)(uint64_t, uint64_t))(v71 + 16))(a3, v75);
  v23 = *MEMORY[0x1E0DBB2B8];
  v68 = *(void (**)(char *, uint64_t, uint64_t))(v19 + 104);
  v68(v21, v23, v18);
  v24 = sub_1DC4074F8();
  v25 = *(void (**)(char *, uint64_t))(v19 + 8);
  v69 = v21;
  v70 = v18;
  v26 = v21;
  v27 = v24;
  v67 = v25;
  v25(v26, v18);
  v28 = *(_QWORD *)(v27 + 16);
  v73 = a2;
  v74 = a3;
  v84 = v9;
  v82 = v14;
  if (v28)
  {
    v86 = MEMORY[0x1E0DEE9D8];
    sub_1DC2AE82C(0, v28, 0);
    v29 = *(unsigned __int8 *)(v9 + 80);
    v66 = v27;
    v30 = v27 + ((v29 + 32) & ~v29);
    v76 = *(_QWORD *)(v9 + 72);
    v31 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
    v32 = v9;
    v33 = (uint64_t)v7;
    do
    {
      v31(v11, v30, v8);
      v31(v7, (uint64_t)v11, v8);
      (*(void (**)(char *, uint64_t))(v32 + 8))(v11, v8);
      v34 = v86;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1DC2AE82C(0, *(_QWORD *)(v34 + 16) + 1, 1);
        v32 = v84;
        v34 = v86;
      }
      v36 = *(_QWORD *)(v34 + 16);
      v35 = *(_QWORD *)(v34 + 24);
      if (v36 >= v35 >> 1)
      {
        sub_1DC2AE82C(v35 > 1, v36 + 1, 1);
        v32 = v84;
        v34 = v86;
      }
      *(_QWORD *)(v34 + 16) = v36 + 1;
      v7 = (char *)v33;
      sub_1DC092ED0(v33, v34+ ((*(unsigned __int8 *)(v77 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v77 + 80))+ *(_QWORD *)(v77 + 72) * v36, type metadata accessor for ForYouFeedLayoutSectionDescriptor.Header);
      v30 += v76;
      --v28;
    }
    while (v28);
    swift_bridgeObjectRelease();
    a2 = v73;
    a3 = v74;
    v14 = v82;
  }
  else
  {
    swift_bridgeObjectRelease();
    v34 = MEMORY[0x1E0DEE9D8];
  }
  sub_1DC0F4468(0);
  v38 = v37;
  *(_QWORD *)(a3 + *(int *)(v37 + 28)) = v34;
  v40 = v69;
  v39 = v70;
  v68(v69, *MEMORY[0x1E0DBB2B0], v70);
  v41 = sub_1DC4074F8();
  v67(v40, v39);
  v42 = *(_QWORD *)(v41 + 16);
  v77 = v38;
  if (v42)
  {
    v86 = MEMORY[0x1E0DEE9D8];
    sub_1DC2AE800(0, v42, 0);
    v43 = v84;
    v44 = (*(unsigned __int8 *)(v84 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v84 + 80);
    v76 = v41;
    v45 = v41 + v44;
    v46 = *(_QWORD *)(v84 + 72);
    v47 = *(void (**)(char *, unint64_t, uint64_t))(v84 + 16);
    do
    {
      v47(v11, v45, v8);
      v47(v14, (unint64_t)v11, v8);
      (*(void (**)(char *, uint64_t))(v43 + 8))(v11, v8);
      v48 = v86;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1DC2AE800(0, *(_QWORD *)(v48 + 16) + 1, 1);
        v43 = v84;
        v48 = v86;
      }
      v50 = *(_QWORD *)(v48 + 16);
      v49 = *(_QWORD *)(v48 + 24);
      if (v50 >= v49 >> 1)
      {
        sub_1DC2AE800(v49 > 1, v50 + 1, 1);
        v43 = v84;
        v48 = v86;
      }
      *(_QWORD *)(v48 + 16) = v50 + 1;
      v51 = v48
          + ((*(unsigned __int8 *)(v78 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v78 + 80))
          + *(_QWORD *)(v78 + 72) * v50;
      v14 = v82;
      sub_1DC092ED0((uint64_t)v82, v51, type metadata accessor for ForYouFeedLayoutSectionDescriptor.Footer);
      v45 += v46;
      --v42;
    }
    while (v42);
    swift_bridgeObjectRelease();
    a2 = v73;
    a3 = v74;
    v38 = v77;
  }
  else
  {
    swift_bridgeObjectRelease();
    v48 = MEMORY[0x1E0DEE9D8];
  }
  *(_QWORD *)(a3 + *(int *)(v38 + 32)) = v48;
  v52 = sub_1DC4074EC();
  v53 = *(_QWORD *)(v52 + 16);
  v54 = MEMORY[0x1E0DEE9D8];
  v55 = v85;
  if (v53)
  {
    v86 = MEMORY[0x1E0DEE9D8];
    sub_1DC2AE7D4(0, v53, 0);
    v56 = v52 + ((*(unsigned __int8 *)(v83 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v83 + 80));
    v57 = *(_QWORD *)(v83 + 72);
    v58 = *(void (**)(char *, unint64_t, uint64_t))(v83 + 16);
    do
    {
      v60 = v80;
      v59 = v81;
      v58(v80, v56, v81);
      v58((char *)v55, (unint64_t)v60, v59);
      (*(void (**)(char *, uint64_t))(v83 + 8))(v60, v59);
      v54 = v86;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1DC2AE7D4(0, *(_QWORD *)(v54 + 16) + 1, 1);
        v54 = v86;
      }
      v62 = *(_QWORD *)(v54 + 16);
      v61 = *(_QWORD *)(v54 + 24);
      if (v62 >= v61 >> 1)
      {
        sub_1DC2AE7D4(v61 > 1, v62 + 1, 1);
        v54 = v86;
      }
      *(_QWORD *)(v54 + 16) = v62 + 1;
      v63 = v54
          + ((*(unsigned __int8 *)(v79 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v79 + 80))
          + *(_QWORD *)(v79 + 72) * v62;
      v55 = v85;
      sub_1DC092ED0(v85, v63, type metadata accessor for ForYouFeedLayoutSectionDescriptor.Decoration);
      v56 += v57;
      --v53;
    }
    while (v53);
    a2 = v73;
    a3 = v74;
    v38 = v77;
  }
  v64 = sub_1DC407510();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 8))(a2, v64);
  (*(void (**)(uint64_t, uint64_t))(v71 + 8))(v75, v72);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a3 + *(int *)(v38 + 36)) = v54;
  return result;
}

uint64_t sub_1DC33D8E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t (*v38)(_QWORD);
  uint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  void (*v46)(char *, uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  int *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  void (*v60)(char *, uint64_t);
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  void (*v73)(char *, uint64_t, uint64_t);
  char *v74;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  double v101[15];
  _OWORD v102[10];
  uint64_t v103;

  v93 = a4;
  v91 = a3;
  v79 = a2;
  v95 = (char *)a5;
  v92 = sub_1DC4052FC();
  v89 = *(_QWORD *)(v92 - 8);
  MEMORY[0x1E0C80A78](v92);
  v90 = (char *)&v76 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1DC4011C8();
  MEMORY[0x1E0C80A78](v7);
  v87 = (char *)&v76 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for PriceViewModel();
  MEMORY[0x1E0C80A78](v9);
  v88 = (uint64_t)&v76 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1DC4008EC();
  v85 = *(_QWORD *)(v11 - 8);
  v86 = v11;
  MEMORY[0x1E0C80A78](v11);
  v84 = (char *)&v76 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0FF558(0);
  MEMORY[0x1E0C80A78](v13);
  v99 = (uint64_t)&v76 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0FED34(0);
  MEMORY[0x1E0C80A78](v15);
  v80 = (uint64_t)&v76 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v76 - v18;
  v81 = type metadata accessor for StockViewModel();
  MEMORY[0x1E0C80A78](v81);
  v82 = (char *)&v76 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v98 = sub_1DC4010E4();
  v96 = *(_QWORD *)(v98 - 8);
  MEMORY[0x1E0C80A78](v98);
  v100 = (char *)&v76 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v22);
  v97 = (char *)&v76 - v23;
  v24 = type metadata accessor for StockSectionFooterViewModel();
  MEMORY[0x1E0C80A78](v24);
  v83 = (uint64_t)&v76 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC101F24(0);
  MEMORY[0x1E0C80A78](v26);
  v78 = (char *)&v76 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = sub_1DC407B64();
  v29 = *(_QWORD *)(v28 - 8);
  MEMORY[0x1E0C80A78](v28);
  v77 = (char *)&v76 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = sub_1DC406040();
  v32 = *(_QWORD *)(v31 - 8);
  MEMORY[0x1E0C80A78](v31);
  v34 = (char *)&v76 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0FE51C(0);
  MEMORY[0x1E0C80A78](v35);
  v37 = (char *)&v76 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0990BC(a1, (uint64_t)v37, v38);
  v39 = sub_1DC407510();
  v40 = *(_QWORD *)(v39 - 8);
  v41 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v40 + 48))(v37, 1, v39);
  v94 = v19;
  if (v41 == 1)
  {
    sub_1DC0926D8((uint64_t)v37, (uint64_t (*)(_QWORD))sub_1DC0FE51C);
  }
  else
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v32 + 104))(v34, *MEMORY[0x1E0DBB2B0], v31);
    v42 = sub_1DC4074F8();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v34, v31);
    (*(void (**)(char *, uint64_t))(v40 + 8))(v37, v39);
    if (*(_QWORD *)(v42 + 16))
    {
      v43 = (uint64_t)v78;
      (*(void (**)(char *, unint64_t, uint64_t))(v29 + 16))(v78, v42 + ((*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80)), v28);
      v44 = 0;
    }
    else
    {
      v44 = 1;
      v43 = (uint64_t)v78;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 56))(v43, v44, 1, v28);
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48))(v43, 1, v28) != 1)
    {
      v73 = *(void (**)(char *, uint64_t, uint64_t))(v29 + 32);
      v74 = v77;
      v73(v77, v43, v28);
      v73(v95, (uint64_t)v74, v28);
      goto LABEL_10;
    }
    sub_1DC0926D8(v43, (uint64_t (*)(_QWORD))sub_1DC101F24);
    v19 = v94;
  }
  v45 = v97;
  v46 = *(void (**)(char *, uint64_t, uint64_t))(v96 + 16);
  v47 = v98;
  v46(v97, v79, v98);
  v46(v100, (uint64_t)v45, v47);
  v48 = sub_1DC401030();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 56))(v19, 1, 1, v48);
  v49 = type metadata accessor for StockSparklineViewModel(0);
  v50 = v99;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 56))(v99, 1, 1, v49);
  v52 = v84;
  v51 = v85;
  v53 = v86;
  (*(void (**)(char *, _QWORD, uint64_t))(v85 + 104))(v84, *MEMORY[0x1E0DAE868], v86);
  v54 = (uint64_t)v82;
  v46(v82, (uint64_t)v100, v47);
  v55 = (int *)v81;
  sub_1DC0990BC((uint64_t)v19, v54 + *(int *)(v81 + 20), (uint64_t (*)(_QWORD))sub_1DC0FED34);
  sub_1DC0990BC(v50, v54 + v55[6], (uint64_t (*)(_QWORD))sub_1DC0FF558);
  (*(void (**)(uint64_t, char *, uint64_t))(v51 + 16))(v54 + v55[8], v52, v53);
  *(_BYTE *)(v54 + v55[9]) = 0;
  v56 = (uint64_t)v19;
  v57 = v80;
  sub_1DC0990BC(v56, v80, (uint64_t (*)(_QWORD))sub_1DC0FED34);
  v58 = v87;
  sub_1DC401078();
  v59 = v88;
  sub_1DC0FE8A4(v57, v58, 9666786, 0xA300000000000000, v88);
  (*(void (**)(char *, uint64_t))(v51 + 8))(v52, v53);
  sub_1DC0926D8(v99, (uint64_t (*)(_QWORD))sub_1DC0FF558);
  sub_1DC0926D8((uint64_t)v94, (uint64_t (*)(_QWORD))sub_1DC0FED34);
  v60 = *(void (**)(char *, uint64_t))(v96 + 8);
  v61 = v98;
  v60(v100, v98);
  sub_1DC092ED0(v59, v54 + v55[7], (uint64_t (*)(_QWORD))type metadata accessor for PriceViewModel);
  v60(v97, v61);
  v62 = v83;
  sub_1DC092ED0(v54, v83, (uint64_t (*)(_QWORD))type metadata accessor for StockViewModel);
  sub_1DC0F4544();
  v64 = &v95[*(int *)(v63 + 48)];
  sub_1DC0990BC(v62, (uint64_t)v95, (uint64_t (*)(_QWORD))type metadata accessor for StockSectionFooterViewModel);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v91 + 96), *(_QWORD *)(v91 + 120));
  v65 = (uint64_t)v90;
  (*(void (**)(char *, uint64_t, uint64_t))(v89 + 16))(v90, v93, v92);
  sub_1DC101048(v65, (uint64_t)v101);
  sub_1DC0FFB60(*(double *)&v62, v101, (uint64_t)v102);
  sub_1DC101020((uint64_t)v101);
  sub_1DC0926D8(v62, (uint64_t (*)(_QWORD))type metadata accessor for StockSectionFooterViewModel);
  v66 = v102[7];
  v67 = v102[9];
  *((_OWORD *)v64 + 8) = v102[8];
  *((_OWORD *)v64 + 9) = v67;
  v68 = v102[3];
  v69 = v102[5];
  v70 = v102[6];
  *((_OWORD *)v64 + 4) = v102[4];
  *((_OWORD *)v64 + 5) = v69;
  *((_OWORD *)v64 + 6) = v70;
  *((_OWORD *)v64 + 7) = v66;
  v71 = v102[1];
  v72 = v102[2];
  *(_OWORD *)v64 = v102[0];
  *((_OWORD *)v64 + 1) = v71;
  *((_QWORD *)v64 + 20) = v103;
  *((_OWORD *)v64 + 2) = v72;
  *((_OWORD *)v64 + 3) = v68;
LABEL_10:
  type metadata accessor for ForYouFeedLayoutSectionDescriptor.StockSectionFooter(0);
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1DC33E078(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  int64_t v22;
  unint64_t v23;
  uint64_t v24;
  void (*v25)(char *, unint64_t, uint64_t);
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  int64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t, uint64_t);
  unint64_t v35;
  unint64_t v36;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v40 = a3;
  v41 = a2;
  v42 = a1;
  v45 = type metadata accessor for ForYouFeedLayoutModel();
  MEMORY[0x1E0C80A78](v45);
  v4 = (char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1DC407B04();
  v46 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0FF434();
  v44 = v8;
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v43 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v38 - v12;
  sub_1DC0FE51C(0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1DC407510();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v38 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0990BC(v42, (uint64_t)v16, (uint64_t (*)(_QWORD))sub_1DC0FE51C);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
  {
    sub_1DC0926D8((uint64_t)v16, (uint64_t (*)(_QWORD))sub_1DC0FE51C);
    sub_1DC0FE574(0, (unint64_t *)&qword_1EDB29D00, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60]);
    sub_1DC0FF4B0();
    v21 = sub_1DC407534();
    v22 = *(_QWORD *)(v21 + 16);
    if (v22)
    {
      v47 = MEMORY[0x1E0DEE9D8];
      sub_1DC0FF228(0, v22, 0);
      v23 = v21 + ((*(unsigned __int8 *)(v46 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80));
      v24 = *(_QWORD *)(v46 + 72);
      v41 = v21;
      v42 = v24;
      v25 = *(void (**)(char *, unint64_t, uint64_t))(v46 + 16);
      v43 = v13;
      do
      {
        v25(v7, v23, v5);
        v25(v4, (unint64_t)v7, v5);
        swift_storeEnumTagMultiPayload();
        sub_1DC080808((unint64_t *)&unk_1EDB32A60, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedLayoutModel, (uint64_t)&unk_1DC430440);
        sub_1DC404DD4();
        (*(void (**)(char *, uint64_t))(v46 + 8))(v7, v5);
        v26 = v47;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1DC0FF228(0, *(_QWORD *)(v26 + 16) + 1, 1);
          v26 = v47;
        }
        v28 = *(_QWORD *)(v26 + 16);
        v27 = *(_QWORD *)(v26 + 24);
        if (v28 >= v27 >> 1)
        {
          sub_1DC0FF228(v27 > 1, v28 + 1, 1);
          v26 = v47;
        }
        *(_QWORD *)(v26 + 16) = v28 + 1;
        (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v26+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(_QWORD *)(v9 + 72) * v28, v43, v44);
        v47 = v26;
        v23 += v42;
        --v22;
      }
      while (v22);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      return MEMORY[0x1E0DEE9D8];
    }
  }
  else
  {
    v41 = v18;
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v20, v16, v17);
    v29 = sub_1DC4074E0();
    v30 = *(_QWORD *)(v29 + 16);
    v31 = v20;
    if (v30)
    {
      v39 = v20;
      v40 = v17;
      v47 = MEMORY[0x1E0DEE9D8];
      sub_1DC0FF228(0, v30, 0);
      v32 = *(unsigned __int8 *)(v46 + 80);
      v38 = v29;
      v33 = v29 + ((v32 + 32) & ~v32);
      v42 = *(_QWORD *)(v46 + 72);
      v34 = *(void (**)(char *, uint64_t, uint64_t))(v46 + 16);
      do
      {
        v34(v7, v33, v5);
        v34(v4, (uint64_t)v7, v5);
        swift_storeEnumTagMultiPayload();
        sub_1DC080808((unint64_t *)&unk_1EDB32A60, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedLayoutModel, (uint64_t)&unk_1DC430440);
        sub_1DC404DD4();
        (*(void (**)(char *, uint64_t))(v46 + 8))(v7, v5);
        v26 = v47;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1DC0FF228(0, *(_QWORD *)(v26 + 16) + 1, 1);
          v26 = v47;
        }
        v36 = *(_QWORD *)(v26 + 16);
        v35 = *(_QWORD *)(v26 + 24);
        if (v36 >= v35 >> 1)
        {
          sub_1DC0FF228(v35 > 1, v36 + 1, 1);
          v26 = v47;
        }
        *(_QWORD *)(v26 + 16) = v36 + 1;
        (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v26+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(_QWORD *)(v9 + 72) * v36, v43, v44);
        v47 = v26;
        v33 += v42;
        --v30;
      }
      while (v30);
      swift_bridgeObjectRelease();
      v31 = v39;
      v17 = v40;
    }
    else
    {
      swift_bridgeObjectRelease();
      v26 = MEMORY[0x1E0DEE9D8];
    }
    (*(void (**)(char *, uint64_t))(v41 + 8))(v31, v17);
  }
  return v26;
}

uint64_t sub_1DC33E5BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  void (*v23)(uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;

  v32 = a2;
  v33 = a3;
  sub_1DC0FE51C(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1DC407510();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v31 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v30 - v11;
  sub_1DC0FEF78(0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1DC4073A8();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v30 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v30 - v21;
  sub_1DC0990BC(a1, (uint64_t)v15, (uint64_t (*)(_QWORD))sub_1DC0FEF78);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    v23 = sub_1DC0FEF78;
    v24 = (uint64_t)v15;
LABEL_5:
    sub_1DC0926D8(v24, (uint64_t (*)(_QWORD))v23);
    sub_1DC0F4468(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v33, 1, 1, v25);
  }
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v22, v15, v16);
  sub_1DC0990BC(v32, (uint64_t)v6, (uint64_t (*)(_QWORD))sub_1DC0FE51C);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v22, v16);
    v23 = sub_1DC0FE51C;
    v24 = (uint64_t)v6;
    goto LABEL_5;
  }
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v12, v6, v7);
  (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v19, v22, v16);
  v27 = (uint64_t)v31;
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v31, v12, v7);
  v28 = v33;
  sub_1DC33D268((uint64_t)v19, v27, v33);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v12, v7);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v22, v16);
  sub_1DC0F4468(0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v28, 0, 1, v29);
}

uint64_t sub_1DC33E874@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  void *v21;
  id v22;
  double v23;
  double v24;
  double v25;
  CGFloat v26;
  CGFloat v27;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  uint64_t result;
  _QWORD v33[2];
  CGRect v34;
  CGRect v35;
  CGRect v36;
  CGRect v37;

  v33[1] = a2;
  v3 = type metadata accessor for ForYouFeedLayoutModel();
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1DC4052FC();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for ForYouFeedModel();
  MEMORY[0x1E0C80A78](v10);
  v12 = (_QWORD *)((char *)v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1DC0FF574(0);
  sub_1DC404354();
  if (swift_getEnumCaseMultiPayload() == 4)
  {
    v13 = *v12;
    v14 = v12[1];
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
    sub_1DC4052F0();
    v16 = v15;
    sub_1DC4052F0();
    sub_1DC405224();
    v18 = v17;
    v20 = v19;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    sub_1DC0D0F34();
    v21 = (void *)sub_1DC4092F8();
    v22 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC1290]), sel_init);
    sub_1DC408B0C();
    v24 = v23;
    v26 = v25;

    v27 = v18 + (v16 - v18 - v20) * 0.5 - v24 * 0.5;
    v34.origin.x = v27;
    v34.origin.y = 100.0;
    v34.size.width = v24;
    v34.size.height = v26;
    v35.size.height = CGRectGetMaxY(v34);
    v35.origin.x = 0.0;
    v35.origin.y = 0.0;
    v35.size.width = v16;
    v36 = CGRectIntegral(v35);
    x = v36.origin.x;
    y = v36.origin.y;
    width = v36.size.width;
    height = v36.size.height;
    v36.origin.x = v27;
    v36.origin.y = 100.0;
    v36.size.width = v24;
    v36.size.height = v26;
    v37 = CGRectIntegral(v36);
    *(_QWORD *)v5 = v13;
    *((_QWORD *)v5 + 1) = v14;
    *((CGFloat *)v5 + 2) = x;
    *((CGFloat *)v5 + 3) = y;
    *((CGFloat *)v5 + 4) = width;
    *((CGFloat *)v5 + 5) = height;
    *(CGRect *)(v5 + 48) = v37;
    swift_storeEnumTagMultiPayload();
    sub_1DC080808((unint64_t *)&unk_1EDB32A60, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedLayoutModel, (uint64_t)&unk_1DC430440);
    return sub_1DC404DD4();
  }
  else
  {
    result = sub_1DC409838();
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC33EBA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1DC338FB8(a1, a2, a3);
}

uint64_t sub_1DC33EBC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9, __int128 *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  uint64_t *boxed_opaque_existential_1;

  *(_QWORD *)(a13 + 352) = a14;
  *(_QWORD *)(a13 + 360) = a15;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(a13 + 328));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a14 - 8) + 32))(boxed_opaque_existential_1, a12, a14);
  *(_QWORD *)(a13 + 40) = type metadata accessor for SectionHeaderViewLayoutAttributesFactory();
  *(_QWORD *)(a13 + 48) = &off_1EA46AE90;
  *(_QWORD *)(a13 + 16) = a1;
  *(_QWORD *)(a13 + 80) = type metadata accessor for StockTitleViewLayoutAttributesFactory();
  *(_QWORD *)(a13 + 88) = &off_1EA463288;
  *(_QWORD *)(a13 + 56) = a2;
  *(_QWORD *)(a13 + 120) = type metadata accessor for StockSectionFooterViewLayoutAttributesFactory();
  *(_QWORD *)(a13 + 128) = &off_1EA455D20;
  *(_QWORD *)(a13 + 96) = a3;
  *(_QWORD *)(a13 + 160) = type metadata accessor for ForYouTitleViewLayoutAttributesFactory();
  *(_QWORD *)(a13 + 168) = &off_1EA464650;
  *(_QWORD *)(a13 + 136) = a4;
  *(_QWORD *)(a13 + 200) = type metadata accessor for PlacardViewLayoutAttributesFactory();
  *(_QWORD *)(a13 + 208) = &off_1EA467ED8;
  *(_QWORD *)(a13 + 176) = a5;
  *(_QWORD *)(a13 + 240) = type metadata accessor for MastheadMetricsFactory();
  *(_QWORD *)(a13 + 248) = &off_1EA46B190;
  *(_QWORD *)(a13 + 216) = a6;
  *(_QWORD *)(a13 + 256) = a7;
  *(_QWORD *)(a13 + 264) = a8;
  *(_BYTE *)(a13 + 272) = a9 & 1;
  sub_1DC097DD0(a10, a13 + 280);
  *(_QWORD *)(a13 + 320) = a11;
  return a13;
}

uint64_t sub_1DC33ED14(uint64_t a1, void (*a2)(uint64_t, char *), uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE *v31;
  uint64_t v32;
  _BYTE *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t result;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  void (*v45)(uint64_t *, _QWORD);
  uint64_t v46;
  uint64_t v47;
  _BYTE *v48;
  uint64_t v49;
  _BYTE *v50;
  void (*v51)(_BYTE *, _BYTE *, uint64_t);
  _BYTE *v52;
  uint64_t v53;
  _BYTE *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(_BYTE *, uint64_t, uint64_t);
  _BYTE *v65;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v67;
  unint64_t v68;
  unint64_t v69;
  _BYTE v70[16];
  _BYTE *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _BYTE *v78;
  _QWORD *v79;
  _BYTE *v80;
  uint64_t v81;
  _BYTE *v82;
  void (*v83)(uint64_t, char *);
  uint64_t v84;
  _BYTE *v85;
  uint64_t v86;
  _BYTE *v87;
  _BYTE *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92[5];
  unint64_t v93;

  v83 = (void (*)(uint64_t, char *))a2;
  sub_1DC1044C0(0);
  MEMORY[0x1E0C80A78](v5);
  v82 = &v70[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1DC0EFABC();
  v81 = v7;
  v91 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v80 = &v70[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v9);
  v71 = &v70[-v10];
  sub_1DC0FE574(0, (unint64_t *)&qword_1EDB29D00, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60]);
  v12 = *(_QWORD *)(v11 - 8);
  v89 = v11;
  v90 = v12;
  MEMORY[0x1E0C80A78](v11);
  v88 = &v70[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v14);
  v87 = &v70[-v15];
  sub_1DC0FE67C();
  v86 = v16;
  MEMORY[0x1E0C80A78](v16);
  v85 = &v70[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v18);
  v79 = &v70[-v19];
  sub_1DC0FE574(0, (unint64_t *)&qword_1EDB2AB80, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790]);
  v21 = v20;
  v22 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  v24 = &v70[-v23];
  sub_1DC0FFB28(0);
  MEMORY[0x1E0C80A78](v25);
  v27 = &v70[-((v26 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1DC102A0C(0);
  v29 = v28;
  MEMORY[0x1E0C80A78](v28);
  v31 = &v70[-((v30 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v32 = a1;
  v33 = v24;
  sub_1DC0990BC(v32, (uint64_t)v27, (uint64_t (*)(_QWORD))sub_1DC0FFB28);
  v84 = v22;
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v22 + 32))(v24, v27, v21);
  sub_1DC1029BC((unint64_t *)&unk_1EDB2AB60, MEMORY[0x1E0DBC7C0]);
  sub_1DC408BF0();
  v34 = *(int *)(v29 + 36);
  v35 = (uint64_t)v31;
  *(_QWORD *)&v31[v34] = 0;
  v36 = MEMORY[0x1E0DBC7C8];
  sub_1DC1028DC(0, (unint64_t *)&qword_1EDB3FC90, (unint64_t *)&unk_1EDB2AB70, MEMORY[0x1E0DBC7C8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEC8F8]);
  v38 = (uint64_t *)&v31[*(int *)(v37 + 36)];
  v39 = sub_1DC1029BC((unint64_t *)&unk_1EDB2AB70, v36);
  v40 = *v38;
  sub_1DC408ED8();
  if (v40 == v92[0])
  {
    v93 = MEMORY[0x1E0DEE9D8];
LABEL_3:
    sub_1DC0926D8(v35, (uint64_t (*)(_QWORD))sub_1DC102A0C);
    return v93;
  }
  else
  {
    v77 = v34;
    v78 = v33;
    v93 = MEMORY[0x1E0DEE9D8];
    v42 = v90;
    v75 = v21;
    v76 = v35;
    v74 = v38;
    v73 = a3;
    v72 = v39;
    while (1)
    {
      v45 = (void (*)(uint64_t *, _QWORD))sub_1DC408EF0();
      v46 = v35;
      v48 = v88;
      v47 = v89;
      (*(void (**)(_BYTE *))(v42 + 16))(v88);
      v45(v92, 0);
      v49 = v84;
      v50 = v78;
      (*(void (**)(_BYTE *, uint64_t, uint64_t))(v84 + 16))(v78, v46, v21);
      sub_1DC408EE4();
      (*(void (**)(_BYTE *, uint64_t))(v49 + 8))(v50, v21);
      v51 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v42 + 32);
      v52 = v87;
      v51(v87, v48, v47);
      v53 = v86;
      v54 = &v85[*(int *)(v86 + 48)];
      v55 = v77;
      v56 = *(_QWORD *)(v46 + v77);
      result = ((uint64_t (*)(_BYTE *, _BYTE *, uint64_t))v51)(v54, v52, v47);
      if (__OFADD__(v56, 1))
        break;
      *(_QWORD *)(v46 + v55) = v56 + 1;
      v57 = *(int *)(v53 + 48);
      v58 = v47;
      v59 = (uint64_t)v79;
      v60 = (char *)v79 + v57;
      *v79 = v56;
      v51((_BYTE *)(v59 + v57), v54, v58);
      v61 = (uint64_t)v82;
      v83(v56, v60);
      sub_1DC0926D8(v59, (uint64_t (*)(_QWORD))sub_1DC0FE67C);
      v62 = v91;
      v63 = v81;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v91 + 48))(v61, 1, v81) == 1)
      {
        sub_1DC0926D8(v61, (uint64_t (*)(_QWORD))sub_1DC1044C0);
        v21 = v75;
        v35 = v76;
        v43 = v74;
      }
      else
      {
        v64 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v62 + 32);
        v65 = v71;
        v64(v71, v61, v63);
        v64(v80, (uint64_t)v65, v63);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v21 = v75;
        v43 = v74;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          v93 = sub_1DC102968(0, *(_QWORD *)(v93 + 16) + 1, 1, v93);
        v35 = v76;
        v68 = *(_QWORD *)(v93 + 16);
        v67 = *(_QWORD *)(v93 + 24);
        if (v68 >= v67 >> 1)
          v93 = sub_1DC102968(v67 > 1, v68 + 1, 1, v93);
        v69 = v93;
        *(_QWORD *)(v93 + 16) = v68 + 1;
        v64((_BYTE *)(v69+ ((*(unsigned __int8 *)(v91 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v91 + 80))+ *(_QWORD *)(v91 + 72) * v68), (uint64_t)v80, v63);
      }
      v44 = *v43;
      sub_1DC408ED8();
      v42 = v90;
      if (v44 == v92[0])
        goto LABEL_3;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC33F300(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9, __int128 *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t *v32;
  uint64_t *v33;
  uint64_t *boxed_opaque_existential_1;
  uint64_t *v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  int v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  __int128 *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91[3];
  uint64_t v92;
  uint64_t v93;
  uint64_t v94[3];
  uint64_t v95;
  uint64_t v96;
  uint64_t v97[3];
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;

  v90 = a8;
  v89 = a7;
  v80 = a6;
  v78 = a5;
  v76 = a4;
  v74 = a3;
  v88 = a10;
  v87 = a11;
  v86 = a12;
  v79 = a13;
  v77 = a27;
  v73 = a26;
  v75 = a23;
  v85 = a24;
  v83 = a17;
  v84 = a9 & 1;
  v82 = *(_QWORD *)(a17 - 8);
  MEMORY[0x1E0C80A78](a1);
  v81 = (char *)&v72 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v107 = a14;
  v108 = v30;
  v31 = __swift_allocate_boxed_opaque_existential_1(&v106);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a14 - 8) + 32))(v31, a1, a14);
  v104 = a18;
  v105 = a25;
  v32 = __swift_allocate_boxed_opaque_existential_1(&v103);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a18 - 8) + 32))(v32, a2, a18);
  v101 = a15;
  v102 = a22;
  v33 = __swift_allocate_boxed_opaque_existential_1(&v100);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a15 - 8) + 32))(v33, v74, a15);
  v98 = a19;
  v99 = v73;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v97);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a19 - 8) + 32))(boxed_opaque_existential_1, v76, a19);
  v95 = a16;
  v96 = v75;
  v35 = __swift_allocate_boxed_opaque_existential_1(v94);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a16 - 8) + 32))(v35, v78, a16);
  v92 = a20;
  v93 = v77;
  v36 = __swift_allocate_boxed_opaque_existential_1(v91);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a20 - 8) + 32))(v36, v80, a20);
  v37 = swift_allocObject();
  v38 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v106, v107);
  MEMORY[0x1E0C80A78](v38);
  v40 = (uint64_t *)((char *)&v72 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v41 + 16))(v40);
  v42 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v103, v104);
  MEMORY[0x1E0C80A78](v42);
  v44 = (uint64_t *)((char *)&v72 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v45 + 16))(v44);
  v46 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v100, v101);
  MEMORY[0x1E0C80A78](v46);
  v48 = (uint64_t *)((char *)&v72 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v49 + 16))(v48);
  v50 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v97, v98);
  MEMORY[0x1E0C80A78](v50);
  v52 = (uint64_t *)((char *)&v72 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v53 + 16))(v52);
  v54 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v94, v95);
  MEMORY[0x1E0C80A78](v54);
  v56 = (uint64_t *)((char *)&v72 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v57 + 16))(v56);
  v58 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v91, v92);
  MEMORY[0x1E0C80A78](v58);
  v60 = (uint64_t *)((char *)&v72 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v61 + 16))(v60);
  v62 = *v40;
  v63 = *v44;
  v64 = *v48;
  v65 = *v52;
  v66 = *v56;
  v67 = *v60;
  v68 = (uint64_t)v81;
  v69 = v83;
  (*(void (**)(char *, uint64_t, uint64_t))(v82 + 16))(v81, v86, v83);
  v70 = sub_1DC33EBC0(v62, v63, v64, v65, v66, v67, v89, v90, v84, v88, v87, v68, v37, v69, v85);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v91);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v94);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v97);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v100);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v103);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v106);
  return v70;
}

void sub_1DC33F828(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v3;

  sub_1DC339CDC(a1, a2, v3[2], v3[3], v3[10], a3);
}

uint64_t sub_1DC33F840@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1DC33E874(*(_QWORD *)(v1 + 24), a1);
}

double sub_1DC33F85C@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1DC3C126C(a1, *(double *)(v1 + 16), *(double *)(v1 + 32));
}

uint64_t sub_1DC33F898()
{
  return sub_1DC33CD78();
}

uint64_t sub_1DC33F8A4()
{
  return sub_1DC33F918();
}

uint64_t sub_1DC33F8C4@<X0>(BOOL *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  __swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)v1 + 24), *(_QWORD *)(*(_QWORD *)v1 + 48));
  result = sub_1DC400BF8();
  *a1 = (result & 1) == 0;
  return result;
}

uint64_t sub_1DC33F918()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  _BYTE v8[16];
  _OWORD v9[2];
  uint64_t v10;
  _OWORD v11[2];
  uint64_t v12;

  sub_1DC1EA918(0);
  MEMORY[0x1E0C80A78](v0);
  v2 = &v8[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3 = type metadata accessor for StocksActivity(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = &v8[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_storeEnumTagMultiPayload();
  v6 = sub_1DC403340();
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v2, 1, 1, v6);
  v12 = 0;
  memset(v11, 0, sizeof(v11));
  v10 = 0;
  memset(v9, 0, sizeof(v9));
  swift_retain();
  sub_1DC22BAE0((uint64_t)v5, 0, (uint64_t)v2, (uint64_t)v11, 0, 0, (uint64_t)v9);
  swift_release();
  sub_1DC17C7C8((uint64_t)v9, &qword_1EDB29410, (unint64_t *)&unk_1EDB29400);
  sub_1DC17C7C8((uint64_t)v11, &qword_1EDB2ACD0, (unint64_t *)&qword_1EDB2ACC0);
  sub_1DC0926D8((uint64_t)v2, (uint64_t (*)(_QWORD))sub_1DC1EA918);
  sub_1DC0926D8((uint64_t)v5, type metadata accessor for StocksActivity);
  return swift_release();
}

uint64_t sub_1DC33FAE4(void *a1, uint64_t a2, uint64_t a3, void *a4, SEL *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v14;
  id v15;
  id v16;

  sub_1DC0821D4(0, (unint64_t *)&qword_1F034D000);
  sub_1DC182B48();
  v14 = sub_1DC408E54();
  v15 = a4;
  v16 = a1;
  sub_1DC33FBA0(v14, (uint64_t)a4, a5, a6, a7, a8);

  return swift_bridgeObjectRelease();
}

uint64_t sub_1DC33FBA0(uint64_t a1, uint64_t a2, SEL *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  void *v6;
  void *v8;
  objc_class *ObjectType;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void *v17;
  void *v18;
  uint64_t v19;
  void *v20;
  id v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD aBlock[6];
  objc_super v30;

  v24 = a5;
  v25 = a6;
  v8 = v6;
  ObjectType = (objc_class *)swift_getObjectType();
  v11 = sub_1DC40724C();
  v28 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1DC407270();
  v26 = *(_QWORD *)(v14 - 8);
  v27 = v14;
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0821D4(0, (unint64_t *)&qword_1F034D000);
  sub_1DC182B48();
  v17 = (void *)sub_1DC408E48();
  v30.receiver = v8;
  v30.super_class = ObjectType;
  objc_msgSendSuper2(&v30, *a3, v17, a2);

  sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3F8D0);
  v18 = (void *)sub_1DC409148();
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = v8;
  aBlock[4] = v24;
  aBlock[5] = v19;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1DC081B88;
  aBlock[3] = v25;
  v20 = _Block_copy(aBlock);
  v21 = v8;
  swift_release();
  sub_1DC407264();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  sub_1DC080808(&qword_1EDB275A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  sub_1DC1130A0(0);
  sub_1DC080808((unint64_t *)&qword_1EDB3F720, (uint64_t (*)(uint64_t))sub_1DC1130A0, MEMORY[0x1E0DEAF38]);
  sub_1DC40964C();
  MEMORY[0x1DF0C99C8](0, v16, v13, v20);
  _Block_release(v20);

  (*(void (**)(char *, uint64_t))(v28 + 8))(v13, v11);
  return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v16, v27);
}

void sub_1DC33FE10(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v7;
  uint64_t v8;
  void *v9;
  id v10;
  _QWORD v11[6];

  objc_msgSend(a1, sel_setAlpha_);
  v7 = (void *)objc_opt_self();
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a1;
  v11[4] = a3;
  v11[5] = v8;
  v11[0] = MEMORY[0x1E0C809B0];
  v11[1] = 1107296256;
  v11[2] = sub_1DC081B88;
  v11[3] = a4;
  v9 = _Block_copy(v11);
  v10 = a1;
  swift_release();
  objc_msgSend(v7, sel_animateWithDuration_animations_, v9, 0.25);
  _Block_release(v9);
}

uint64_t type metadata accessor for TapDimmingTextView()
{
  return objc_opt_self();
}

uint64_t sub_1DC33FFE0()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1DC340004()
{
  uint64_t v0;

  sub_1DC33FE10(*(void **)(v0 + 16), (uint64_t)&unk_1EA465280, (uint64_t)sub_1DC3400F0, (uint64_t)&block_descriptor_6_1);
}

void sub_1DC340038()
{
  uint64_t v0;

  sub_1DC33FE10(*(void **)(v0 + 16), (uint64_t)&unk_1EA465320, (uint64_t)sub_1DC34006C, (uint64_t)&block_descriptor_18_3);
}

id sub_1DC34006C()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), sel_setAlpha_, 1.0);
}

void sub_1DC340080()
{
  uint64_t v0;

  sub_1DC33FE10(*(void **)(v0 + 16), (uint64_t)&unk_1EA4653C0, (uint64_t)sub_1DC3400B4, (uint64_t)&block_descriptor_30);
}

id sub_1DC3400B4()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), sel_setAlpha_, 0.5);
}

void sub_1DC340108(uint64_t a1, uint64_t a2, double *a3, char *a4)
{
  uint64_t v4;
  uint64_t v5;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  _QWORD v19[5];

  v5 = v4;
  v10 = *(void **)&a4[OBJC_IVAR____TtC8StocksUI17SectionHeaderView_backgroundView];
  objc_msgSend(v10, sel_setFrame_, a3[4], a3[5], a3[6], a3[7]);
  v11 = *(void **)&a4[OBJC_IVAR____TtC8StocksUI17SectionHeaderView_titleLabel];
  objc_msgSend(v11, sel_setFrame_, a3[8], a3[9], a3[10], a3[11]);
  swift_beginAccess();
  sub_1DC0824D4(v4 + 16, (uint64_t)v19);
  __swift_project_boxed_opaque_existential_1(v19, v19[3]);
  v12 = objc_msgSend(a4, sel_traitCollection);
  v13 = (void *)sub_1DC20D5DC(a1, a2, v12);

  objc_msgSend(v11, sel_setAttributedText_, v13);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
  v14 = objc_msgSend((id)objc_opt_self(), sel_clearColor);
  objc_msgSend(a4, sel_setBackgroundColor_, v14);

  v15 = __swift_project_boxed_opaque_existential_1((_QWORD *)(v5 + 16), *(_QWORD *)(v5 + 40));
  v16 = *(_QWORD *)(*v15 + 80);
  v17 = *(_QWORD *)(*v15 + 88);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(*v15 + 56), v16);
  v18 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v17 + 16))(v16, v17);
  objc_msgSend(v10, sel_setBackgroundColor_, v18);

}

unint64_t sub_1DC3402BC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EDB364B0;
  if (!qword_1EDB364B0)
  {
    v1 = type metadata accessor for SectionHeaderViewRenderer();
    result = MEMORY[0x1DF0CAB8C](&unk_1DC4294BC, v1);
    atomic_store(result, (unint64_t *)&qword_1EDB364B0);
  }
  return result;
}

uint64_t *sub_1DC340300(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1DC40124C();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    *(uint64_t *)((char *)v4 + *(int *)(a3 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 24));
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1DC3403BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_1DC40124C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  return swift_bridgeObjectRelease();
}

_QWORD *sub_1DC340418(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1DC40124C();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_1DC3404A8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1DC40124C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_1DC340548(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1DC40124C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

_QWORD *sub_1DC3405C0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1DC40124C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1DC340648()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC340654(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1DC40124C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t sub_1DC3406D0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC3406DC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_1DC40124C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for StockListWatchlistPickerUpdateBlueprintModifier()
{
  uint64_t result;

  result = qword_1F0352288;
  if (!qword_1F0352288)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1DC34078C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1DC40124C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1DC34080C(uint64_t a1, void (*a2)(char *), uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t updated;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(void);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *);
  _QWORD v40[5];

  v38 = a3;
  v39 = a2;
  v5 = sub_1DC404984();
  v34 = *(_QWORD *)(v5 - 8);
  v35 = v5;
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0CC0A4(0, &qword_1EDB2A280, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB9A28]);
  v36 = *(_QWORD *)(v8 - 8);
  v37 = v8;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v31 - v9;
  sub_1DC1326EC();
  MEMORY[0x1E0C80A78](v11);
  sub_1DC0CC0A4(0, (unint64_t *)&qword_1EDB2AB40, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790]);
  v32 = *(_QWORD *)(v12 - 8);
  v33 = v12;
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v31 - v13;
  updated = type metadata accessor for StockListWatchlistPickerUpdateBlueprintModifier();
  v16 = sub_1DC4011F8();
  v18 = v17;
  v19 = sub_1DC4011E0();
  v20 = *(_QWORD *)(v3 + *(int *)(updated + 24));
  v40[0] = v16;
  v40[1] = v18;
  v40[2] = v19;
  v40[3] = v21;
  v40[4] = v20;
  swift_bridgeObjectRetain();
  v22 = sub_1DC340B5C(a1, v40);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v23 = MEMORY[0x1E0DB7B60];
  sub_1DC0CC0A4(0, (unint64_t *)&qword_1EDB29D98, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60]);
  v25 = v24;
  v26 = sub_1DC0D4244((unint64_t *)&unk_1EDB29D70, (unint64_t *)&qword_1EDB29D98, (uint64_t (*)(uint64_t, _QWORD *))v23, MEMORY[0x1E0DB7B88]);
  v27 = sub_1DC0D4244(&qword_1EDB29D68, (unint64_t *)&qword_1EDB29D98, (uint64_t (*)(uint64_t, _QWORD *))v23, MEMORY[0x1E0DB7B80]);
  MEMORY[0x1DF0C311C](v22, v25, v26, v27);
  type metadata accessor for StockListModel(0);
  sub_1DC0D75BC();
  sub_1DC080808(&qword_1EDB2D860, type metadata accessor for StockListModel, (uint64_t)&unk_1DC41C258);
  sub_1DC406D0C();
  v29 = v34;
  v28 = v35;
  (*(void (**)(char *, _QWORD, uint64_t))(v34 + 104))(v7, *MEMORY[0x1E0DB7FB8], v35);
  sub_1DC119B9C();
  sub_1DC405554();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v7, v28);
  v39(v10);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v10, v37);
  return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v14, v33);
}

uint64_t sub_1DC340B30()
{
  return sub_1DC080808(&qword_1F03522C8, (uint64_t (*)(uint64_t))type metadata accessor for StockListWatchlistPickerUpdateBlueprintModifier, (uint64_t)&unk_1DC429548);
}

uint64_t sub_1DC340B5C(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t (*v13)(void);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  void (*v21)(uint64_t *, _QWORD);
  void (*v22)(char *);
  __int128 v23;
  uint64_t *v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  _QWORD v28[4];
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  __int128 v52;
  __int128 v53;
  uint64_t v54;
  __int128 v55;
  __int128 v56;
  uint64_t v57;

  v34 = *a2;
  v33 = a2[1];
  v31 = a2[2];
  v32 = (__int128 *)(a2 + 2);
  v30 = a2[3];
  v35 = a2;
  v29 = a2[4];
  sub_1DC132790();
  MEMORY[0x1E0C80A78](v3);
  v28[3] = (char *)v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0CC0A4(0, (unint64_t *)&qword_1EDB29D98, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v28 - v11;
  v13 = MEMORY[0x1E0DBC790];
  sub_1DC0CC0A4(0, (unint64_t *)&qword_1EDB2AB40, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790]);
  v15 = v14;
  v16 = sub_1DC0D4244((unint64_t *)&unk_1EDB2AB30, (unint64_t *)&qword_1EDB2AB40, (uint64_t (*)(uint64_t, _QWORD *))v13, MEMORY[0x1E0DBC7C8]);
  v28[1] = v15;
  v17 = sub_1DC408EC0();
  v18 = MEMORY[0x1E0DEE9D8];
  if (!v17)
    return v18;
  v19 = v17;
  v50 = MEMORY[0x1E0DEE9D8];
  sub_1DC2AD824(0, v17 & ~(v17 >> 63), 0);
  result = sub_1DC408E90();
  if ((v19 & 0x8000000000000000) == 0)
  {
    v57 = v16;
    v37 = a1;
    v36 = v12;
    while (1)
    {
      v21 = (void (*)(uint64_t *, _QWORD))sub_1DC408EF0();
      v22 = *(void (**)(char *))(v7 + 16);
      v22(v9);
      v21(&v44, 0);
      sub_1DC4046FC();
      if (v49)
      {
        if (v49 != 1)
        {
          ((void (*)(char *, char *, uint64_t, uint64_t, uint64_t))v22)(v12, v9, v6, v47, v48);
          goto LABEL_10;
        }
        sub_1DC10BD5C(v44, v45, v46, v47, v48, 1u);
        v38 = v34;
        v39 = v33;
        v40 = v31;
        v41 = v30;
        v42 = v29;
        v43 = 1;
        v23 = *(_OWORD *)v35;
        v55 = *v32;
        v56 = v23;
        v54 = v35[4];
        sub_1DC113A6C((uint64_t)&v56);
        sub_1DC113A6C((uint64_t)&v55);
        v24 = &v54;
      }
      else
      {
        sub_1DC10BD5C(v44, v45, v46, v47, v48, 0);
        v38 = v34;
        v39 = v33;
        v40 = v31;
        v41 = v30;
        v42 = v29;
        v43 = 0;
        v53 = *(_OWORD *)v35;
        v52 = *v32;
        v51 = v35[4];
        sub_1DC113A6C((uint64_t)&v53);
        sub_1DC113A6C((uint64_t)&v52);
        v24 = &v51;
      }
      sub_1DC113274((uint64_t)v24);
      sub_1DC404738();
      type metadata accessor for StockListModel(0);
      sub_1DC0D75BC();
      sub_1DC080808(&qword_1EDB2D860, type metadata accessor for StockListModel, (uint64_t)&unk_1DC41C258);
      sub_1DC4046F0();
LABEL_10:
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      v18 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1DC2AD824(0, *(_QWORD *)(v18 + 16) + 1, 1);
        v18 = v50;
      }
      v26 = *(_QWORD *)(v18 + 16);
      v25 = *(_QWORD *)(v18 + 24);
      if (v26 >= v25 >> 1)
      {
        sub_1DC2AD824(v25 > 1, v26 + 1, 1);
        v18 = v50;
      }
      *(_QWORD *)(v18 + 16) = v26 + 1;
      v27 = v18
          + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))
          + *(_QWORD *)(v7 + 72) * v26;
      v12 = v36;
      (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v27, v36, v6);
      v50 = v18;
      sub_1DC408EE4();
      if (!--v19)
        return v18;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1DC34105C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v12[16];
  uint64_t v13;
  uint64_t v14;

  v5 = sub_1DC406358();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v12[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  *v8 = MEMORY[0x1E0DEE9D8];
  v9 = *MEMORY[0x1E0DBBA40];
  v10 = sub_1DC40634C();
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v8, v9, v10);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0DBBA30], v5);
  v13 = a2;
  v14 = a3;
  sub_1DC15682C((void (*)(char *))sub_1DC341570, (uint64_t)v12);
  type metadata accessor for TickerLayoutModel();
  sub_1DC118258();
  sub_1DC080808(&qword_1EDB2FE70, (uint64_t (*)(uint64_t))type metadata accessor for TickerLayoutModel, (uint64_t)&unk_1DC431518);
  return sub_1DC405320();
}

uint64_t sub_1DC3411C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  _OWORD v27[10];
  uint64_t v28;

  v5 = type metadata accessor for TickerLayoutModel();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TickerViewLayoutOptions();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for StockViewModel();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for TickerModel();
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0F6C50(0);
  sub_1DC404354();
  sub_1DC0F14E0();
  sub_1DC0F0F38((uint64_t)&v16[*(int *)(v17 + 48)], (uint64_t)v13);
  v18 = sub_1DC4052FC();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v10, a2, v18);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 40));
  sub_1DC0FB328((uint64_t)v13, (uint64_t)v10, (uint64_t)v27);
  sub_1DC0F80B0();
  v20 = &v7[*(int *)(v19 + 48)];
  sub_1DC0FD5F4((uint64_t)v13, (uint64_t)v7);
  v21 = v27[9];
  *((_OWORD *)v20 + 8) = v27[8];
  *((_OWORD *)v20 + 9) = v21;
  *((_QWORD *)v20 + 20) = v28;
  v22 = v27[5];
  *((_OWORD *)v20 + 4) = v27[4];
  *((_OWORD *)v20 + 5) = v22;
  v23 = v27[7];
  *((_OWORD *)v20 + 6) = v27[6];
  *((_OWORD *)v20 + 7) = v23;
  v24 = v27[1];
  *(_OWORD *)v20 = v27[0];
  *((_OWORD *)v20 + 1) = v24;
  v25 = v27[3];
  *((_OWORD *)v20 + 2) = v27[2];
  *((_OWORD *)v20 + 3) = v25;
  sub_1DC080808(&qword_1EDB2FE68, (uint64_t (*)(uint64_t))type metadata accessor for TickerLayoutModel, (uint64_t)&unk_1DC4314E0);
  sub_1DC404DD4();
  sub_1DC0926D8((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for TickerViewLayoutOptions);
  return sub_1DC0926D8((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for StockViewModel);
}

uint64_t sub_1DC3413F0(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v14[16];
  uint64_t v15;
  uint64_t v16;

  v4 = sub_1DC4057D0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = &v14[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = sub_1DC4052FC();
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = *v2;
  (*(void (**)(_BYTE *, uint64_t, __n128))(v12 + 16))(&v14[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)], a2, v9);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DB9DD0], v4);
  v15 = a2;
  v16 = v11;
  sub_1DC1565B4((void (*)(char *))sub_1DC341554, (uint64_t)v14);
  type metadata accessor for TickerLayoutModel();
  sub_1DC118258();
  sub_1DC080808(&qword_1EDB2FE70, (uint64_t (*)(uint64_t))type metadata accessor for TickerLayoutModel, (uint64_t)&unk_1DC431518);
  return sub_1DC404564();
}

uint64_t sub_1DC341554(uint64_t a1)
{
  uint64_t v1;

  return sub_1DC34105C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1DC341570(uint64_t a1)
{
  uint64_t v1;

  return sub_1DC3411C0(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1DC34158C()
{
  swift_unknownObjectUnownedDestroy();
  return swift_deallocObject();
}

id StockSearchModule.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void StockSearchModule.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id StockSearchModule.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t dispatch thunk of StockSearchModuleType.createSearchController()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t method lookup function for StockSearchModule()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1DC341670()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC8StocksUI38BackgroundFetchRegistrationStartupTask_group;
  v2 = sub_1DC402890();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC8StocksUI38BackgroundFetchRegistrationStartupTask_appConfigurationManager);
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t static StartupTaskGroup.backgroundFetchRegistration.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1EDB29508 != -1)
    swift_once();
  v2 = sub_1DC402890();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EDB294E8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_1DC341754()
{
  return type metadata accessor for BackgroundFetchRegistrationStartupTask();
}

BOOL static StockChartHighlightStyle.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t StockChartHighlightStyle.hash(into:)()
{
  return sub_1DC409ACC();
}

uint64_t StockChartHighlightStyle.hashValue.getter()
{
  sub_1DC409AC0();
  sub_1DC409ACC();
  return sub_1DC409AF0();
}

unint64_t sub_1DC3417E4()
{
  unint64_t result;

  result = qword_1F03522E8;
  if (!qword_1F03522E8)
  {
    result = MEMORY[0x1DF0CAB8C](&protocol conformance descriptor for StockChartHighlightStyle, &type metadata for StockChartHighlightStyle);
    atomic_store(result, (unint64_t *)&qword_1F03522E8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for StockChartHighlightStyle(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1DC341874 + 4 * byte_1DC429775[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1DC3418A8 + 4 * byte_1DC429770[v4]))();
}

uint64_t sub_1DC3418A8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC3418B0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC3418B8);
  return result;
}

uint64_t sub_1DC3418C4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC3418CCLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1DC3418D0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC3418D8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StockChartHighlightStyle()
{
  return &type metadata for StockChartHighlightStyle;
}

uint64_t sub_1DC3418F4(_QWORD *a1)
{
  uint64_t result;
  Class v2;
  id v3;
  uint64_t v4;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB2B060);
  result = sub_1DC402608();
  if (v4)
  {
    sub_1DC12D5DC();
    v3 = objc_allocWithZone(v2);
    return sub_1DC407F24();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC341980@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1DC342F90(a1, (uint64_t (*)(_QWORD))type metadata accessor for WelcomeFlowProvider, (uint64_t)&off_1EA44F6F0, a2);
}

uint64_t sub_1DC341994@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v3 = type metadata accessor for WelcomeFlowProvider();
  result = sub_1DC4025FC();
  if (result)
  {
    v5 = result;
    a2[3] = v3;
    result = sub_1DC080808(&qword_1EDB426F8, (uint64_t (*)(uint64_t))type metadata accessor for WelcomeFlowProvider, (uint64_t)&unk_1DC40EF84);
    a2[4] = result;
    *a2 = v5;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC341A20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v5;

  v0 = sub_1DC402C50();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for WelcomeViewController();
  sub_1DC402B30();
  swift_release();
  sub_1DC096268(0, &qword_1EDB426E8);
  sub_1DC402B3C();
  swift_release();
  sub_1DC096268(0, &qword_1EDB426E0);
  sub_1DC402B3C();
  type metadata accessor for WelcomeRouter();
  sub_1DC402488();
  swift_release();
  swift_release();
  sub_1DC096268(0, &qword_1EDB42728);
  sub_1DC402B3C();
  swift_release();
  sub_1DC096268(0, &qword_1EDB42700);
  sub_1DC402B3C();
  swift_release();
  sub_1DC096268(0, &qword_1EDB42708);
  sub_1DC402B3C();
  swift_release();
  sub_1DC096268(0, &qword_1EDB426F0);
  sub_1DC402B3C();
  swift_release();
  sub_1DC096268(0, &qword_1EDB42748);
  sub_1DC402B3C();
  swift_release();
  sub_1DC096268(0, (unint64_t *)&unk_1EDB42758);
  sub_1DC402B3C();
  swift_release();
  sub_1DC096268(0, &qword_1EDB42780);
  sub_1DC402B3C();
  swift_release();
  type metadata accessor for WelcomeViewAnimator();
  sub_1DC402B30();
  swift_release();
  sub_1DC096268(0, &qword_1EDB42750);
  sub_1DC402B3C();
  swift_release();
  sub_1DC096268(0, &qword_1EDB42738);
  sub_1DC402B3C();
  swift_release();
  sub_1DC096268(0, &qword_1EDB42740);
  sub_1DC402B3C();
  swift_release();
  type metadata accessor for WelcomeFlowProvider();
  sub_1DC402B30();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB4A18], v0);
  sub_1DC4024A0();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_1DC341E40(_QWORD *a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  _BYTE v23[24];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE v27[24];
  uint64_t v28;
  _BYTE v29[24];
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE v33[24];
  uint64_t v34;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB426E8);
  result = sub_1DC402608();
  if (!v34)
  {
    __break(1u);
    goto LABEL_9;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB42728);
  result = sub_1DC402608();
  v3 = v31;
  if (!v31)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v4 = v32;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB42740);
  result = sub_1DC402608();
  if (!v30)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB42738);
  result = sub_1DC402608();
  if (!v28)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, (unint64_t *)&unk_1EDB29FB0);
  result = sub_1DC402608();
  v5 = v25;
  if (!v25)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v22 = v26;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, (unint64_t *)&unk_1EDB295C0);
  result = sub_1DC402608();
  if (v24)
  {
    v6 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v33, v34);
    v7 = MEMORY[0x1E0C80A78](v6);
    v9 = (uint64_t *)&v23[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
    (*(void (**)(uint64_t *, __n128))(v10 + 16))(v9, v7);
    v11 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v29, v30);
    v12 = MEMORY[0x1E0C80A78](v11);
    v14 = (uint64_t *)&v23[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
    (*(void (**)(uint64_t *, __n128))(v15 + 16))(v14, v12);
    v16 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v27, v28);
    v17 = MEMORY[0x1E0C80A78](v16);
    v19 = (uint64_t *)&v23[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
    (*(void (**)(uint64_t *, __n128))(v20 + 16))(v19, v17);
    v21 = sub_1DC3435F8(*v9, v3, v4, *v14, *v19, v5, v22, (uint64_t)v23);
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
    return (uint64_t)v21;
  }
LABEL_13:
  __break(1u);
  return result;
}

uint64_t sub_1DC3421D4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v14[24];
  uint64_t v15;
  uint64_t v16;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, qword_1EDB2D2F0);
  result = sub_1DC402608();
  v4 = v15;
  if (v15)
  {
    v5 = type metadata accessor for WelcomeStyler();
    v6 = v16;
    v7 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v14, v15);
    v8 = MEMORY[0x1E0C80A78](v7);
    v10 = &v14[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
    (*(void (**)(_BYTE *, __n128))(v11 + 16))(v10, v8);
    v12 = sub_1DC0A3134((uint64_t)v10, v5, v4, v6);
    result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
    a2[3] = v5;
    a2[4] = (uint64_t)&off_1EA4551F0;
    *a2 = v12;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC3422E8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  __int128 v6[2];

  sub_1DC0824D4(a1, (uint64_t)v6);
  v3 = type metadata accessor for WelcomeRouter();
  v4 = swift_allocObject();
  swift_unknownObjectWeakInit();
  result = sub_1DC097DD0(v6, v4 + 24);
  a2[3] = v3;
  a2[4] = (uint64_t)&off_1EA460430;
  *a2 = v4;
  return result;
}

void sub_1DC342360(uint64_t a1, _QWORD *a2)
{
  id v2;

  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for WelcomeViewController();
  v2 = (id)sub_1DC4025FC();
  swift_unknownObjectWeakAssign();

}

uint64_t sub_1DC3423CC@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t **v15;
  uint64_t v16;
  _QWORD *v17;
  _BYTE v18[24];
  uint64_t v19;
  _BYTE v20[24];
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB42700);
  result = sub_1DC402608();
  v5 = v22;
  if (!v22)
  {
    __break(1u);
    goto LABEL_6;
  }
  v6 = v23;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB426E0);
  result = sub_1DC402608();
  if (!v21)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB426F0);
  result = sub_1DC402608();
  if (v19)
  {
    v7 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v20, v21);
    v8 = MEMORY[0x1E0C80A78](v7);
    v10 = (uint64_t *)&v18[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
    (*(void (**)(uint64_t *, __n128))(v11 + 16))(v10, v8);
    v12 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v18, v19);
    v13 = MEMORY[0x1E0C80A78](v12);
    v15 = (uint64_t **)&v18[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
    (*(void (**)(uint64_t **, __n128))(v16 + 16))(v15, v13);
    v17 = sub_1DC34302C(v5, v6, *v10, *v15);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
    result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
    *a2 = v17;
    a2[1] = &off_1EA46A8B0;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1DC3425E0@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB42708);
  result = sub_1DC402608();
  if (v8)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1DC096268(0, &qword_1F03522F8);
    result = sub_1DC402608();
    if (v6)
    {
      type metadata accessor for WelcomeInteractor();
      v5 = (_QWORD *)swift_allocObject();
      v5[3] = 0;
      result = swift_unknownObjectWeakInit();
      v5[4] = v8;
      v5[5] = v9;
      v5[6] = v6;
      v5[7] = v7;
      *a2 = v5;
      a2[1] = &off_1EA469898;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1DC342700@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for WelcomeDataManager();
  result = swift_allocObject();
  *a1 = result;
  a1[1] = (uint64_t)&off_1EA464628;
  return result;
}

uint64_t sub_1DC34273C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4018AC();
  result = sub_1DC4025FC();
  if (result)
  {
    v4 = result;
    v5 = type metadata accessor for WelcomeTracker();
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    swift_retain();
    sub_1DC401828();
    result = swift_release();
    a2[3] = v5;
    a2[4] = (uint64_t)&off_1EA4528B0;
    *a2 = v6;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC3427E4@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1DC342938(a1, (uint64_t (*)(_QWORD))type metadata accessor for WelcomeViewRenderer, (uint64_t)&off_1EA450C58, a2);
}

uint64_t sub_1DC3427F8@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  _BYTE *v11;
  _QWORD *v12;
  _BYTE v14[24];
  uint64_t v15;
  uint64_t v16;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, qword_1EDB2D2F0);
  result = sub_1DC402608();
  v4 = v15;
  if (v15)
  {
    v5 = type metadata accessor for WelcomeViewStylerFactory();
    v6 = v16;
    v7 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v14, v15);
    v8 = *(_QWORD *)(v4 - 8);
    v9 = MEMORY[0x1E0C80A78](v7);
    v11 = &v14[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
    (*(void (**)(_BYTE *, __n128))(v8 + 16))(v11, v9);
    v12 = sub_1DC35FF48((uint64_t)v11, v5, v4, v6);
    (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v11, v4);
    result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
    a2[3] = v5;
    a2[4] = &off_1EA4668F8;
    *a2 = v12;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC342924@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1DC342938(a1, (uint64_t (*)(_QWORD))type metadata accessor for WelcomeViewLayoutAttributesFactory, (uint64_t)&off_1EA452418, a2);
}

uint64_t sub_1DC342938@<X0>(_QWORD *a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t result;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[5];
  _BYTE v24[24];
  uint64_t v25;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, (unint64_t *)&unk_1EDB42758);
  result = sub_1DC402608();
  if (v25)
  {
    v8 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v24, v25);
    v9 = MEMORY[0x1E0C80A78](v8);
    v11 = (_QWORD *)((char *)v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v12 + 16))(v11, v9);
    v13 = *v11;
    v14 = type metadata accessor for WelcomeViewStylerFactory();
    v23[3] = v14;
    v23[4] = &off_1EA4668F8;
    v23[0] = v13;
    v15 = a2(0);
    v16 = (_QWORD *)swift_allocObject();
    v17 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v23, v14);
    v18 = MEMORY[0x1E0C80A78](v17);
    v20 = (_QWORD *)((char *)v23 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v21 + 16))(v20, v18);
    v22 = *v20;
    v16[5] = v14;
    v16[6] = &off_1EA4668F8;
    v16[2] = v22;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
    result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
    a4[3] = v15;
    a4[4] = a3;
    *a4 = v16;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC342AD8(_QWORD *a1)
{
  uint64_t result;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE v22[24];
  uint64_t v23;
  _BYTE v24[24];
  uint64_t v25;
  _BYTE v26[24];
  uint64_t v27;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB42750);
  result = sub_1DC402608();
  if (!v27)
  {
    __break(1u);
    goto LABEL_8;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB42748);
  result = sub_1DC402608();
  if (!v25)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB42780);
  result = sub_1DC402608();
  if (!v23)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC402AB8();
  result = sub_1DC4025FC();
  if (!result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v3 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC12D5DC();
  result = sub_1DC4025FC();
  if (result)
  {
    v4 = (void *)result;
    v5 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v26, v27);
    v6 = MEMORY[0x1E0C80A78](v5);
    v8 = (uint64_t *)&v22[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
    (*(void (**)(uint64_t *, __n128))(v9 + 16))(v8, v6);
    v10 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v24, v25);
    v11 = MEMORY[0x1E0C80A78](v10);
    v13 = (uint64_t *)&v22[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
    (*(void (**)(uint64_t *, __n128))(v14 + 16))(v13, v11);
    v15 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v22, v23);
    v16 = MEMORY[0x1E0C80A78](v15);
    v18 = (uint64_t *)&v22[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
    (*(void (**)(uint64_t *, __n128))(v19 + 16))(v18, v16);
    v20 = sub_1DC343990(*v8, *v13, *v18, v3, v4);
    swift_release();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
    return v20;
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1DC342DC4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *boxed_opaque_existential_1;
  void (*v10)(char *, uint64_t *, uint64_t, __n128);
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v17[5];
  _QWORD v18[3];
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB27470);
  result = sub_1DC402608();
  if (v22)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1DC096268(0, (unint64_t *)&unk_1EDB28C90);
    result = sub_1DC402608();
    v5 = v19;
    if (v19)
    {
      v6 = type metadata accessor for WelcomeModelProvider();
      v7 = v20;
      v8 = __swift_project_boxed_opaque_existential_1(v18, v19);
      v17[3] = v5;
      v17[4] = v7;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v17);
      v10 = *(void (**)(char *, uint64_t *, uint64_t, __n128))(*(_QWORD *)(v5 - 8) + 16);
      v11 = ((uint64_t (*)(uint64_t *, _QWORD *, uint64_t))v10)(boxed_opaque_existential_1, v8, v5);
      v12 = MEMORY[0x1E0C80A78](v11);
      v14 = (char *)&v17[-1] - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
      v10(v14, boxed_opaque_existential_1, v5, v12);
      v15 = sub_1DC0D2E30(&v21, (uint64_t)v14, v6, v5, v7);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
      result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
      a2[3] = v6;
      a2[4] = (uint64_t)&off_1EA45DC50;
      *a2 = v15;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1DC342F68@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1DC342F90(a1, (uint64_t (*)(_QWORD))type metadata accessor for WelcomeViewAnimator, (uint64_t)&off_1EA463710, a2);
}

uint64_t sub_1DC342F7C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1DC342F90(a1, (uint64_t (*)(_QWORD))type metadata accessor for WelcomeViewAnimator, (uint64_t)&off_1EA463700, a2);
}

uint64_t sub_1DC342F90@<X0>(_QWORD *a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v7;
  uint64_t result;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v7 = a2(0);
  result = sub_1DC4025FC();
  if (result)
  {
    a4[3] = v7;
    a4[4] = a3;
    *a4 = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC34300C()
{
  type metadata accessor for WelcomeFlowProvider();
  return swift_allocObject();
}

_QWORD *sub_1DC34302C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v25[5];
  _QWORD v26[5];
  _QWORD v27[3];
  uint64_t v28;
  _UNKNOWN **v29;
  _QWORD v30[6];

  v8 = *a4;
  v9 = type metadata accessor for WelcomeRouter();
  v30[3] = v9;
  v30[4] = &off_1EA460430;
  v30[0] = a3;
  v28 = v8;
  v29 = &off_1EA4528B0;
  v27[0] = a4;
  type metadata accessor for WelcomeEventHandler();
  v10 = (_QWORD *)swift_allocObject();
  v11 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v30, v9);
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (_QWORD *)((char *)&v25[-1] - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v15 + 16))(v14, v12);
  v16 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v27, v28);
  v17 = MEMORY[0x1E0C80A78](v16);
  v19 = (_QWORD *)((char *)&v25[-1] - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v20 + 16))(v19, v17);
  v21 = *v14;
  v22 = *v19;
  v26[3] = v9;
  v26[4] = &off_1EA460430;
  v25[4] = &off_1EA4528B0;
  v26[0] = v21;
  v25[3] = v8;
  v25[0] = v22;
  v10[3] = 0;
  swift_unknownObjectWeakInit();
  v10[4] = a1;
  v10[5] = a2;
  sub_1DC0824D4((uint64_t)v26, (uint64_t)(v10 + 6));
  sub_1DC0824D4((uint64_t)v25, (uint64_t)(v10 + 11));
  *(_QWORD *)(v10[4] + 24) = &off_1EA46A8A8;
  swift_unknownObjectWeakAssign();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
  return v10;
}

uint64_t sub_1DC3431E4()
{
  sub_1DC4026D4();
  sub_1DC096268(0, &qword_1EDB2FFA8);
  sub_1DC402B3C();
  swift_release();
  swift_release();
  sub_1DC4026D4();
  sub_1DC12D5DC();
  sub_1DC402B30();
  swift_release();
  swift_release();
  sub_1DC4026D4();
  sub_1DC096268(0, &qword_1EDB42730);
  sub_1DC402B3C();
  swift_release();
  swift_release();
  sub_1DC4026D4();
  sub_1DC096268(0, (unint64_t *)&unk_1EDB42690);
  sub_1DC402B3C();
  swift_release();
  swift_release();
  sub_1DC4026E0();
  sub_1DC402B24();
  return swift_release();
}

char *sub_1DC34334C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, _BYTE *a9)
{
  objc_class *ObjectType;
  uint64_t v18;
  id v19;
  char *v20;
  char *v21;
  char *v22;
  char *v23;
  void *v24;
  char *v25;
  void *v26;
  id v27;
  objc_super v29;
  _QWORD v30[5];
  _QWORD v31[3];
  uint64_t v32;
  _UNKNOWN **v33;
  _QWORD v34[5];

  ObjectType = (objc_class *)swift_getObjectType();
  v34[3] = type metadata accessor for WelcomeStyler();
  v34[4] = &off_1EA4551F0;
  v34[0] = a1;
  v32 = type metadata accessor for WelcomeViewAnimator();
  v33 = &off_1EA463700;
  v31[0] = a4;
  v30[3] = v32;
  v30[4] = &off_1EA463710;
  v30[0] = a5;
  a9[OBJC_IVAR____TtC8StocksUI21WelcomeViewController_allowRendering] = 0;
  v18 = OBJC_IVAR____TtC8StocksUI21WelcomeViewController_statusBarView;
  v19 = objc_allocWithZone((Class)sub_1DC404444());
  v20 = a9;
  *(_QWORD *)&a9[v18] = objc_msgSend(v19, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  sub_1DC0824D4((uint64_t)v34, (uint64_t)&v20[OBJC_IVAR____TtC8StocksUI21WelcomeViewController_styler]);
  v21 = &v20[OBJC_IVAR____TtC8StocksUI21WelcomeViewController_eventHandler];
  *(_QWORD *)v21 = a2;
  *((_QWORD *)v21 + 1) = a3;
  sub_1DC0824D4((uint64_t)v31, (uint64_t)&v20[OBJC_IVAR____TtC8StocksUI21WelcomeViewController_viewProvider]);
  sub_1DC0824D4((uint64_t)v30, (uint64_t)&v20[OBJC_IVAR____TtC8StocksUI21WelcomeViewController_viewAnimator]);
  v22 = &v20[OBJC_IVAR____TtC8StocksUI21WelcomeViewController_toolbarManager];
  *(_QWORD *)v22 = a6;
  *((_QWORD *)v22 + 1) = a7;
  sub_1DC0824D4(a8, (uint64_t)&v20[OBJC_IVAR____TtC8StocksUI21WelcomeViewController_sceneStateManager]);
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();

  v29.receiver = v20;
  v29.super_class = ObjectType;
  v23 = (char *)objc_msgSendSuper2(&v29, sel_initWithNibName_bundle_, 0, 0);
  *(_QWORD *)(*(_QWORD *)&v23[OBJC_IVAR____TtC8StocksUI21WelcomeViewController_eventHandler] + 24) = &off_1EA46ADE0;
  swift_unknownObjectWeakAssign();
  v24 = *(void **)(*(_QWORD *)(*__swift_project_boxed_opaque_existential_1(v31, v32) + 16)
                 + OBJC_IVAR____TtC8StocksUI11WelcomeView_continueButton);
  v25 = v23;
  objc_msgSend(v24, sel_addTarget_action_forControlEvents_, v25, sel_didTapContinueButton, 64);
  v26 = *(void **)(*(_QWORD *)(*__swift_project_boxed_opaque_existential_1(v31, v32) + 16)
                 + OBJC_IVAR____TtC8StocksUI11WelcomeView_onPrivacyTap);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  v27 = v26;

  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a8);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
  return v25;
}

char *sub_1DC3435F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _BYTE *v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  char *v32;
  _QWORD v35[3];
  uint64_t v36;
  _UNKNOWN **v37;
  _QWORD v38[3];
  uint64_t v39;
  _UNKNOWN **v40;
  _QWORD v41[3];
  uint64_t v42;
  _UNKNOWN **v43;

  v42 = type metadata accessor for WelcomeStyler();
  v43 = &off_1EA4551F0;
  v41[0] = a1;
  v39 = type metadata accessor for WelcomeViewAnimator();
  v40 = &off_1EA463700;
  v38[0] = a4;
  v36 = v39;
  v37 = &off_1EA463710;
  v35[0] = a5;
  v16 = objc_allocWithZone((Class)type metadata accessor for WelcomeViewController());
  v17 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v41, v42);
  v18 = MEMORY[0x1E0C80A78](v17);
  v20 = (_QWORD *)((char *)&v35[-1] - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v21 + 16))(v20, v18);
  v22 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v38, v39);
  v23 = MEMORY[0x1E0C80A78](v22);
  v25 = (_QWORD *)((char *)&v35[-1] - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v26 + 16))(v25, v23);
  v27 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v35, v36);
  v28 = MEMORY[0x1E0C80A78](v27);
  v30 = (_QWORD *)((char *)&v35[-1] - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v31 + 16))(v30, v28);
  v32 = sub_1DC34334C(*v20, a2, a3, *v25, *v30, a6, a7, a8, v16);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
  return v32;
}

uint64_t sub_1DC3437E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6)
{
  uint64_t v12;
  id v13;
  _QWORD v15[5];
  _QWORD v16[5];
  _QWORD v17[5];

  v17[3] = type metadata accessor for WelcomeModelProvider();
  v17[4] = &off_1EA45DC50;
  v17[0] = a1;
  v16[3] = type metadata accessor for WelcomeViewRenderer();
  v16[4] = &off_1EA450C58;
  v16[0] = a2;
  v15[3] = type metadata accessor for WelcomeViewLayoutAttributesFactory();
  v15[4] = &off_1EA452418;
  v15[0] = a3;
  *(_QWORD *)(a6 + 16) = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for WelcomeView()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  sub_1DC343B68();
  swift_allocObject();
  *(_QWORD *)(a6 + 24) = sub_1DC402734();
  v12 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(a6 + 168) = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(a6 + 176) = v12;
  *(_OWORD *)(a6 + 200) = 0u;
  *(_OWORD *)(a6 + 216) = 0u;
  *(_OWORD *)(a6 + 232) = 0u;
  *(_OWORD *)(a6 + 248) = 0u;
  *(_OWORD *)(a6 + 184) = 0u;
  *(_OWORD *)(a6 + 257) = 0u;
  *(_BYTE *)(a6 + 273) = 2;
  sub_1DC0824D4((uint64_t)v17, a6 + 32);
  sub_1DC0824D4((uint64_t)v16, a6 + 72);
  sub_1DC0824D4((uint64_t)v15, a6 + 112);
  *(_QWORD *)(a6 + 152) = a4;
  *(_QWORD *)(a6 + 160) = a5;
  swift_allocObject();
  swift_weakInit();
  swift_retain();
  v13 = a5;

  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  return a6;
}

uint64_t sub_1DC343990(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v29[3];
  uint64_t v30;
  _UNKNOWN **v31;
  _QWORD v32[3];
  uint64_t v33;
  _UNKNOWN **v34;
  _QWORD v35[3];
  uint64_t v36;
  _UNKNOWN **v37;

  v36 = type metadata accessor for WelcomeModelProvider();
  v37 = &off_1EA45DC50;
  v35[0] = a1;
  v33 = type metadata accessor for WelcomeViewRenderer();
  v34 = &off_1EA450C58;
  v32[0] = a2;
  v30 = type metadata accessor for WelcomeViewLayoutAttributesFactory();
  v31 = &off_1EA452418;
  v29[0] = a3;
  type metadata accessor for WelcomeViewAnimator();
  v10 = swift_allocObject();
  v11 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v35, v36);
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (_QWORD *)((char *)&v29[-1] - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v15 + 16))(v14, v12);
  v16 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v32, v33);
  v17 = MEMORY[0x1E0C80A78](v16);
  v19 = (_QWORD *)((char *)&v29[-1] - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v20 + 16))(v19, v17);
  v21 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v29, v30);
  v22 = MEMORY[0x1E0C80A78](v21);
  v24 = (_QWORD *)((char *)&v29[-1] - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v25 + 16))(v24, v22);
  v26 = sub_1DC3437E4(*v14, *v19, *v24, a4, a5, v10);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
  return v26;
}

void sub_1DC343B68()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F03522F0)
  {
    v0 = sub_1DC402770();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1F03522F0);
  }
}

uint64_t sub_1DC343BBC()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1DC343BE0(uint64_t a1)
{
  uint64_t v1;

  return sub_1DC30E110(a1, v1);
}

uint64_t sub_1DC343BE8()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1DC343C0C()
{
  uint64_t v0;

  sub_1DC3C02A4(v0);
}

uint64_t sub_1DC343C14@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  __n128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  double *v49;
  uint64_t result;
  double *v51;
  uint64_t v52;
  double v53;
  uint64_t v54;
  double *v55;
  double v56;
  double v57;
  double v58;
  uint64_t v59;
  double *v60;
  double v61;
  double v62;
  uint64_t v63;
  void (*v64)(double *, _QWORD);
  void (*v65)(char *);
  char *v66;
  char *v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  BOOL v78;
  void (*v79)(double *, _QWORD);
  char *v80;
  char *v81;
  int EnumCaseMultiPayload;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  void (*v92)(char *, uint64_t, uint64_t, uint64_t);
  char *v93;
  uint64_t v94;
  int v95;
  double v96;
  double v97;
  _QWORD *v98;
  unint64_t v99;
  unint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  char *v108;
  char *v109;
  char *v110;
  uint64_t v111;
  double v112;
  double v113;
  _QWORD *v114;
  _QWORD *v115;
  unint64_t v116;
  unint64_t v117;
  uint64_t v118;
  uint64_t v119;
  _QWORD *v120;
  uint64_t v121;
  _QWORD *v122;
  _QWORD *v123;
  uint64_t v124;
  double v125;
  uint64_t v126;
  double *v127;
  double v128;
  double v129;
  double v130;
  uint64_t v131;
  double *v132;
  double v133;
  double v134;
  _QWORD v135[2];
  char *v136;
  char *v137;
  char *v138;
  uint64_t v139;
  _QWORD *v140;
  _QWORD *v141;
  char *v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  void (*v146)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  uint64_t *v153;
  uint64_t v154;
  uint64_t v155;
  char *v156;
  void (*v157)(char *, uint64_t, uint64_t, __n128);
  char *v158;
  char *v159;
  uint64_t v160;
  char *v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  char *v165;
  char *v166;
  uint64_t v167;
  uint64_t v168;
  void (*v169)(char *, uint64_t);
  void (*v170)(char *, uint64_t, uint64_t);
  double v171;

  v135[1] = a1;
  v145 = sub_1DC400F7C();
  v139 = *(_QWORD *)(v145 - 8);
  MEMORY[0x1E0C80A78](v145);
  v138 = (char *)v135 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0FF558(0);
  MEMORY[0x1E0C80A78](v3);
  v144 = (uint64_t)v135 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0FED34(0);
  MEMORY[0x1E0C80A78](v5);
  v148 = (uint64_t)v135 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0BB2BC(0);
  MEMORY[0x1E0C80A78](v7);
  v143 = (char *)v135 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v142 = (char *)v135 - v10;
  v150 = sub_1DC3FFFEC();
  v149 = *(_QWORD *)(v150 - 8);
  MEMORY[0x1E0C80A78](v150);
  v137 = (char *)v135 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v136 = (char *)v135 - v13;
  v14 = type metadata accessor for StockListStockModel(0);
  MEMORY[0x1E0C80A78](v14);
  v151 = (uint64_t)v135 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v167 = type metadata accessor for StockListModel(0);
  MEMORY[0x1E0C80A78](v167);
  v17 = (char *)v135 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0F8190();
  v19 = v18;
  v20 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v156 = (char *)v135 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v22);
  v166 = (char *)v135 - v23;
  sub_1DC108DCC();
  v162 = v24;
  MEMORY[0x1E0C80A78](v24);
  v161 = (char *)v135 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v26);
  v28 = (char *)v135 - v27;
  sub_1DC0CC0A4(0, (unint64_t *)&qword_1EDB2AB40, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790]);
  v30 = v29;
  v31 = *(_QWORD *)(v29 - 8);
  MEMORY[0x1E0C80A78](v29);
  v159 = (char *)v135 - v32;
  sub_1DC0CC0A4(0, (unint64_t *)&qword_1EDB29D98, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60]);
  v34 = v33;
  v164 = *(_QWORD *)(v33 - 8);
  MEMORY[0x1E0C80A78](v33);
  v165 = (char *)v135 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v36);
  v158 = (char *)v135 - v37;
  sub_1DC11258C();
  v39 = v38;
  MEMORY[0x1E0C80A78](v38);
  v41 = (char *)v135 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = MEMORY[0x1E0C80A78](v42);
  v163 = (uint64_t)v135 - v44;
  v160 = v31;
  v157 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v31 + 16);
  v157(v41, v1, v30, v43);
  v45 = sub_1DC0D4244((unint64_t *)&unk_1EDB2AB30, (unint64_t *)&qword_1EDB2AB40, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790], MEMORY[0x1E0DBC7C8]);
  sub_1DC408E90();
  *(double *)&v41[*(int *)(v39 + 36)] = v171;
  v46 = v163;
  sub_1DC092ED0((uint64_t)v41, v163, (uint64_t (*)(_QWORD))sub_1DC11258C);
  v47 = (uint64_t *)(v46 + *(int *)(v39 + 36));
  v48 = *v47;
  sub_1DC408ED8();
  if (v48 != *(_QWORD *)&v171)
  {
    v140 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v141 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v168 = v20;
    v155 = v30;
    v154 = v45;
    v153 = v47;
    v152 = v28;
    while (1)
    {
      v64 = (void (*)(double *, _QWORD))sub_1DC408EF0();
      v65 = *(void (**)(char *))(v164 + 16);
      v66 = v158;
      v65(v158);
      v64(&v171, 0);
      v67 = v159;
      ((void (*)(char *, uint64_t, uint64_t))v157)(v159, v46, v30);
      sub_1DC408EE4();
      (*(void (**)(char *, uint64_t))(v160 + 8))(v67, v30);
      v68 = (uint64_t)v161;
      v170 = (void (*)(char *, uint64_t, uint64_t))v65;
      ((void (*)(char *, char *, uint64_t))v65)(v161, v66, v34);
      sub_1DC0D4244(&qword_1EDB29D90, (unint64_t *)&qword_1EDB29D98, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60], MEMORY[0x1E0DB7B98]);
      sub_1DC408E90();
      v69 = v66;
      v70 = (uint64_t)v152;
      v169 = *(void (**)(char *, uint64_t))(v164 + 8);
      v169(v69, v34);
      v71 = v162;
      *(double *)(v68 + *(int *)(v162 + 36)) = v171;
      sub_1DC092ED0(v68, v70, (uint64_t (*)(_QWORD))sub_1DC108DCC);
      v72 = (uint64_t *)(v70 + *(int *)(v71 + 36));
      v73 = *v72;
      sub_1DC408ED8();
      if (v73 != *(_QWORD *)&v171)
        break;
LABEL_26:
      sub_1DC0926D8(v70, (uint64_t (*)(_QWORD))sub_1DC108DCC);
      v63 = *v153;
      v46 = v163;
      v30 = v155;
      sub_1DC408ED8();
      if (v63 == *(_QWORD *)&v171)
        goto LABEL_3;
    }
    v74 = v168;
LABEL_29:
    v75 = v156;
    v76 = (uint64_t)v17;
    while (1)
    {
      v79 = (void (*)(double *, _QWORD))sub_1DC408EF0();
      v80 = v166;
      (*(void (**)(char *))(v74 + 16))(v166);
      v79(&v171, 0);
      v81 = v165;
      v170(v165, v70, v34);
      sub_1DC408EE4();
      v169(v81, v34);
      (*(void (**)(char *, char *, uint64_t))(v74 + 32))(v75, v80, v19);
      v17 = (char *)v76;
      sub_1DC404354();
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 1)
      {
        (*(void (**)(char *, uint64_t))(v74 + 8))(v75, v19);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        if (EnumCaseMultiPayload != 2)
        {
          v83 = v151;
          sub_1DC092ED0(v76, v151, type metadata accessor for StockListStockModel);
          v147 = type metadata accessor for StockViewModel();
          v84 = v83 + *(int *)(v147 + 20);
          v85 = v148;
          sub_1DC0990BC(v84, v148, (uint64_t (*)(_QWORD))sub_1DC0FED34);
          v86 = sub_1DC401030();
          v87 = *(_QWORD *)(v86 - 8);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v87 + 48))(v85, 1, v86) == 1)
          {
            sub_1DC0926D8(v85, (uint64_t (*)(_QWORD))sub_1DC0FED34);
            v88 = (uint64_t)v142;
            v146 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v149 + 56);
            v146(v142, 1, 1, v150);
            goto LABEL_38;
          }
          v89 = v87;
          v90 = v142;
          sub_1DC400FE8();
          v88 = (uint64_t)v90;
          (*(void (**)(uint64_t, uint64_t))(v89 + 8))(v148, v86);
          v91 = v149;
          v92 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v149 + 56);
          v93 = v90;
          v94 = v150;
          v92(v93, 0, 1, v150);
          v95 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v91 + 48))(v88, 1, v94);
          v146 = v92;
          if (v95 == 1)
          {
LABEL_38:
            sub_1DC0926D8(v88, (uint64_t (*)(_QWORD))sub_1DC0BB2BC);
          }
          else
          {
            (*(void (**)(char *, uint64_t, uint64_t))(v91 + 32))(v136, v88, v94);
            sub_1DC3FFF80();
            v97 = v96;
            v98 = v140;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v98 = sub_1DC0F0774(0, v98[2] + 1, 1, v98);
            v100 = v98[2];
            v99 = v98[3];
            v101 = v149;
            if (v100 >= v99 >> 1)
            {
              v122 = sub_1DC0F0774((_QWORD *)(v99 > 1), v100 + 1, 1, v98);
              v101 = v149;
              v98 = v122;
            }
            v98[2] = v100 + 1;
            v140 = v98;
            *(double *)&v98[v100 + 4] = fabs(v97);
            (*(void (**)(char *))(v101 + 8))(v136);
          }
          v102 = v144;
          sub_1DC0990BC(v151 + *(int *)(v147 + 24), v144, (uint64_t (*)(_QWORD))sub_1DC0FF558);
          v103 = type metadata accessor for StockSparklineViewModel(0);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v103 - 8) + 48))(v102, 1, v103) == 1)
          {
            sub_1DC0926D8(v102, (uint64_t (*)(_QWORD))sub_1DC0FF558);
            v104 = (uint64_t)v143;
            v146(v143, 1, 1, v150);
            goto LABEL_47;
          }
          v105 = v102 + *(int *)(v103 + 32);
          v106 = v139;
          v107 = v138;
          (*(void (**)(char *, uint64_t, uint64_t))(v139 + 16))(v138, v105, v145);
          sub_1DC0926D8(v102, type metadata accessor for StockSparklineViewModel);
          v108 = v143;
          sub_1DC400EF8();
          v109 = v107;
          v104 = (uint64_t)v108;
          (*(void (**)(char *, uint64_t))(v106 + 8))(v109, v145);
          v110 = v108;
          v111 = v150;
          v146(v110, 0, 1, v150);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v149 + 48))(v104, 1, v111) == 1)
          {
LABEL_47:
            sub_1DC0926D8(v151, type metadata accessor for StockListStockModel);
            (*(void (**)(char *, uint64_t))(v168 + 8))(v156, v19);
            sub_1DC0926D8(v104, (uint64_t (*)(_QWORD))sub_1DC0BB2BC);
          }
          else
          {
            (*(void (**)(char *, uint64_t, uint64_t))(v149 + 32))(v137, v104, v150);
            sub_1DC3FFF80();
            v113 = v112;
            v114 = v141;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v114 = sub_1DC0F0774(0, v114[2] + 1, 1, v114);
            v115 = v114;
            v116 = v114[2];
            v141 = v115;
            v117 = v115[3];
            v118 = v149;
            v119 = v168;
            if (v116 >= v117 >> 1)
            {
              v123 = sub_1DC0F0774((_QWORD *)(v117 > 1), v116 + 1, 1, v141);
              v118 = v149;
              v141 = v123;
            }
            v120 = v141;
            v141[2] = v116 + 1;
            *(double *)&v120[v116 + 4] = fabs(v113);
            (*(void (**)(char *))(v118 + 8))(v137);
            sub_1DC0926D8(v151, type metadata accessor for StockListStockModel);
            (*(void (**)(char *, uint64_t))(v119 + 8))(v156, v19);
          }
          v121 = *v72;
          sub_1DC408ED8();
          v78 = v121 == *(_QWORD *)&v171;
          v74 = v168;
          if (v78)
            goto LABEL_26;
          goto LABEL_29;
        }
        (*(void (**)(char *, uint64_t))(v74 + 8))(v75, v19);
      }
      v77 = *v72;
      sub_1DC408ED8();
      v78 = v77 == *(_QWORD *)&v171;
      v74 = v168;
      if (v78)
      {
        v17 = (char *)v76;
        goto LABEL_26;
      }
    }
  }
  v141 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v140 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_3:
  sub_1DC0926D8(v46, (uint64_t (*)(_QWORD))sub_1DC11258C);
  sub_1DC0F0CF4();
  v49 = (double *)v140;
  swift_bridgeObjectRetain();
  sub_1DC408D1C();
  result = swift_bridgeObjectRelease();
  if ((~*(_QWORD *)&v171 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_81;
  }
  if (v171 <= -2147483650.0)
  {
LABEL_81:
    __break(1u);
    goto LABEL_82;
  }
  if (v171 >= 2147483650.0)
  {
LABEL_82:
    __break(1u);
    goto LABEL_83;
  }
  v51 = (double *)v141;
  swift_bridgeObjectRetain();
  sub_1DC408D1C();
  result = swift_bridgeObjectRelease();
  if ((~*(_QWORD *)&v171 & 0x7FF0000000000000) == 0)
  {
LABEL_83:
    __break(1u);
    goto LABEL_84;
  }
  if (v171 <= -2147483650.0)
  {
LABEL_84:
    __break(1u);
    goto LABEL_85;
  }
  if (v171 >= 2147483650.0)
  {
LABEL_85:
    __break(1u);
LABEL_86:
    __break(1u);
    goto LABEL_87;
  }
  v52 = *((_QWORD *)v49 + 2);
  if (!v52)
  {
    v58 = 0.0;
    goto LABEL_57;
  }
  v53 = v49[4];
  v54 = v52 - 1;
  if (v52 != 1)
  {
    v55 = v49 + 5;
    do
    {
      v56 = *v55++;
      v57 = v56;
      if (v56 < v53)
        v53 = v57;
      --v54;
    }
    while (v54);
  }
  if ((~*(_QWORD *)&v53 & 0x7FF0000000000000) == 0)
    goto LABEL_96;
  if (v53 <= -2147483650.0)
    goto LABEL_86;
  if (v53 >= 2147483650.0)
  {
LABEL_87:
    __break(1u);
    goto LABEL_88;
  }
  v58 = v49[4];
  v59 = v52 - 1;
  if (v59)
  {
    v60 = v49 + 5;
    do
    {
      v61 = *v60++;
      v62 = v61;
      if (v58 < v61)
        v58 = v62;
      --v59;
    }
    while (v59);
  }
LABEL_57:
  result = swift_bridgeObjectRelease();
  if ((~*(_QWORD *)&v58 & 0x7FF0000000000000) == 0)
  {
LABEL_88:
    __break(1u);
    goto LABEL_89;
  }
  if (v58 <= -2147483650.0)
  {
LABEL_89:
    __break(1u);
    goto LABEL_90;
  }
  if (v58 >= 2147483650.0)
  {
LABEL_90:
    __break(1u);
LABEL_91:
    __break(1u);
    goto LABEL_92;
  }
  v124 = *((_QWORD *)v51 + 2);
  if (!v124)
  {
    v130 = 0.0;
    goto LABEL_76;
  }
  v125 = v51[4];
  v126 = v124 - 1;
  if (v124 != 1)
  {
    v127 = v51 + 5;
    do
    {
      v128 = *v127++;
      v129 = v128;
      if (v128 < v125)
        v125 = v129;
      --v126;
    }
    while (v126);
  }
  if ((~*(_QWORD *)&v125 & 0x7FF0000000000000) == 0)
    goto LABEL_97;
  if (v125 <= -2147483650.0)
    goto LABEL_91;
  if (v125 >= 2147483650.0)
  {
LABEL_92:
    __break(1u);
    goto LABEL_93;
  }
  v130 = v51[4];
  v131 = v124 - 1;
  if (v131)
  {
    v132 = v51 + 5;
    do
    {
      v133 = *v132++;
      v134 = v133;
      if (v130 < v133)
        v130 = v134;
      --v131;
    }
    while (v131);
  }
LABEL_76:
  result = swift_bridgeObjectRelease();
  if ((~*(_QWORD *)&v130 & 0x7FF0000000000000) == 0)
  {
LABEL_93:
    __break(1u);
    goto LABEL_94;
  }
  if (v130 > -2147483650.0)
  {
    if (v130 < 2147483650.0)
      return sub_1DC40343C();
    goto LABEL_95;
  }
LABEL_94:
  __break(1u);
LABEL_95:
  __break(1u);
LABEL_96:
  __break(1u);
LABEL_97:
  __break(1u);
  return result;
}

uint64_t sub_1DC344C08(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t (*v9)(void);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  char *v19;
  void (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  void (*v29)(uint64_t *, _QWORD);
  uint64_t v30;
  void (*v31)(char *);
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  void (*v43)(char *, uint64_t, uint64_t);
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47[4];
  uint64_t v48;

  v46 = a1;
  sub_1DC132790();
  MEMORY[0x1E0C80A78](v1);
  v41 = (char *)&v38 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0CC0A4(0, (unint64_t *)&qword_1EDB29D98, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60]);
  v40 = v3;
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v39 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v38 - v7;
  v9 = MEMORY[0x1E0DBC790];
  sub_1DC0CC0A4(0, (unint64_t *)&qword_1EDB2AB40, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790]);
  v11 = v10;
  v12 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v38 - v13;
  sub_1DC11258C();
  v16 = v15;
  v17 = MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v38 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = MEMORY[0x1E0DEE9D8];
  v45 = v12;
  v20 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v21 = v11;
  v43 = v20;
  ((void (*)(char *, uint64_t, uint64_t, __n128))v20)(v14, v46, v11, v17);
  sub_1DC0D4244((unint64_t *)&unk_1EDB2AB20, (unint64_t *)&qword_1EDB2AB40, (uint64_t (*)(uint64_t, _QWORD *))v9, MEMORY[0x1E0DBC7C0]);
  v44 = v14;
  sub_1DC408BF0();
  v22 = *(int *)(v16 + 36);
  v23 = (uint64_t)v19;
  v24 = &v19[v22];
  v25 = sub_1DC0D4244((unint64_t *)&unk_1EDB2AB30, (unint64_t *)&qword_1EDB2AB40, (uint64_t (*)(uint64_t, _QWORD *))v9, MEMORY[0x1E0DBC7C8]);
  v42 = v24;
  v26 = *(_QWORD *)v24;
  sub_1DC408ED8();
  if (v26 != v47[0])
  {
    v46 = v25;
    v27 = v39;
    do
    {
      v28 = v42;
      v29 = (void (*)(uint64_t *, _QWORD))sub_1DC408EF0();
      v30 = v4;
      v31 = *(void (**)(char *))(v4 + 16);
      v32 = v8;
      v33 = v40;
      v31(v8);
      v29(v47, 0);
      v34 = v44;
      v43(v44, v23, v21);
      sub_1DC408EE4();
      (*(void (**)(char *, uint64_t))(v45 + 8))(v34, v21);
      (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v27, v8, v33);
      swift_getKeyPath();
      v35 = (uint64_t)v41;
      swift_getAtKeyPath();
      swift_release();
      (*(void (**)(char *, uint64_t))(v30 + 8))(v27, v33);
      sub_1DC18FC7C(v35);
      v36 = *(_QWORD *)v28;
      sub_1DC408ED8();
      v4 = v30;
      v8 = v32;
    }
    while (v36 != v47[0]);
  }
  sub_1DC0926D8(v23, (uint64_t (*)(_QWORD))sub_1DC11258C);
  return v48;
}

BOOL sub_1DC344F54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v1 = sub_1DC40124C();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(_QWORD *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 120));
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v5 + 32), *(_QWORD *)(v5 + 56));
  sub_1DC400A60();
  v6 = sub_1DC401228();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  v7 = *(_QWORD *)(v6 + 16);
  swift_bridgeObjectRelease();
  return v7 == 0;
}

uint64_t sub_1DC345018()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v5)(void);

  v2 = *(_QWORD *)(*(_QWORD *)v0 + 80);
  v1 = *(_QWORD *)(*(_QWORD *)v0 + 88);
  (*(void (**)(uint64_t, uint64_t))(v1 + 48))(v2, v1);
  v3 = swift_allocObject();
  swift_weakInit();
  v4 = (_QWORD *)swift_allocObject();
  v4[2] = v2;
  v4[3] = v1;
  v4[4] = v3;
  v5 = MEMORY[0x1E0DB8020];
  sub_1DC0CC0A4(0, (unint64_t *)&qword_1EDB29E10, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB8020]);
  sub_1DC0D4244(&qword_1EDB29E08, (unint64_t *)&qword_1EDB29E10, (uint64_t (*)(uint64_t, _QWORD *))v5, MEMORY[0x1E0DB8030]);
  swift_retain();
  sub_1DC4049E4();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1DC345144(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;

  sub_1DC1339CC(0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v6 = result;
    v7 = *(_QWORD *)(*(_QWORD *)result + 232);
    v30 = *(_QWORD *)(result + v7);
    sub_1DC112498(0, (unint64_t *)&qword_1EDB426B0, (uint64_t (*)(void))sub_1DC34FEFC, (uint64_t)&type metadata for StockListRefreshBlocker, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6CB8]);
    sub_1DC34FF40((unint64_t *)&unk_1EDB426A0, MEMORY[0x1E0DB6CD8]);
    swift_retain();
    sub_1DC408E90();
    result = sub_1DC408ED8();
    if ((v26 & 1) != 0 || (v29 & 1) != 0)
    {
      __break(1u);
      return result;
    }
    v8 = v24;
    v9 = v27;
    v10 = v28;
    v11 = v25;
    swift_release();
    if (v11 == v10)
    {
      if (v8 == v9)
      {
        sub_1DC3454C0(a1);
        swift_release();
        return swift_release();
      }
      if (qword_1EDB273E0 == -1)
      {
LABEL_8:
        v12 = sub_1DC403F64();
        __swift_project_value_buffer(v12, (uint64_t)qword_1EDB5DDE8);
        swift_retain_n();
        v13 = sub_1DC403F4C();
        v14 = sub_1DC408FE0();
        if (os_log_type_enabled(v13, v14))
        {
          v15 = (uint8_t *)swift_slowAlloc();
          v16 = swift_slowAlloc();
          v23 = a1;
          v24 = v16;
          *(_DWORD *)v15 = 136315138;
          v22 = v15 + 4;
          v27 = *(_QWORD *)(v6 + v7);
          sub_1DC34FF40(&qword_1EDB42208, MEMORY[0x1E0DB6CE0]);
          v17 = sub_1DC4099B8();
          v27 = sub_1DC2A9C74(v17, v18, &v24);
          a1 = v23;
          sub_1DC4095B0();
          swift_release_n();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1DC07D000, v13, v14, "Stock list update priceChangeDisplay will be queued while refresh is blocked by: %s", v15, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1DF0CAC88](v16, -1, -1);
          MEMORY[0x1DF0CAC88](v15, -1, -1);

        }
        else
        {

          swift_release_n();
        }
        v19 = sub_1DC4008EC();
        v20 = *(_QWORD *)(v19 - 8);
        (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v4, a1, v19);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v4, 0, 1, v19);
        v21 = v6 + *(_QWORD *)(*(_QWORD *)v6 + 248);
        swift_beginAccess();
        sub_1DC3501E4((uint64_t)v4, v21, (uint64_t (*)(_QWORD))sub_1DC1339CC);
        swift_endAccess();
        return swift_release();
      }
    }
    else
    {
      __break(1u);
    }
    swift_once();
    goto LABEL_8;
  }
  return result;
}

uint64_t sub_1DC3454C0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char v12;
  void (*v13)(char *, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;

  v3 = *v1;
  v4 = sub_1DC4044BC();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB7380];
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v21 - v10;
  sub_1DC4049CC();
  sub_1DC404A14();
  swift_release();
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0DB7378], v4);
  sub_1DC080808(&qword_1EDB27550, v5, MEMORY[0x1E0DB7388]);
  v12 = sub_1DC4089F8();
  v13 = *(void (**)(char *, uint64_t))(v6 + 8);
  v13(v8, v4);
  v13(v11, v4);
  if ((v12 & 1) != 0)
  {
    sub_1DC083594(0, (unint64_t *)&qword_1EDB29708, MEMORY[0x1E0DEE9C0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    return sub_1DC402D58();
  }
  else
  {
    v16 = *(_QWORD *)(v3 + 80);
    v15 = *(_QWORD *)(v3 + 88);
    v17 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15 + 56))(a1, v16, v15);
    v18 = swift_allocObject();
    v19 = swift_weakInit();
    MEMORY[0x1E0C80A78](v19);
    *(&v21 - 4) = v16;
    *(&v21 - 3) = v15;
    *(&v21 - 2) = v18;
    *(&v21 - 1) = v17;
    sub_1DC083594(0, (unint64_t *)&qword_1EDB29708, MEMORY[0x1E0DEE9C0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    v14 = sub_1DC402DA0();
    swift_release();
    swift_release();
  }
  return v14;
}

uint64_t sub_1DC34570C(uint64_t a1)
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1DC345768(a1);
    return swift_release();
  }
  return result;
}

uint64_t sub_1DC345768(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(void);

  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(*(_QWORD *)v1 + 88) + 96))(a1, *(_QWORD *)(*(_QWORD *)v1 + 80));
  v2 = MEMORY[0x1E0DB8020];
  sub_1DC0CC0A4(0, (unint64_t *)&qword_1EDB29E10, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB8020]);
  sub_1DC0D4244(&qword_1EDB29E08, (unint64_t *)&qword_1EDB29E10, (uint64_t (*)(uint64_t, _QWORD *))v2, MEMORY[0x1E0DB8030]);
  sub_1DC4049E4();
  return swift_release();
}

uint64_t sub_1DC345820(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t result;
  uint64_t v13;
  char v14;
  void (*v15)(char *, uint64_t);
  uint64_t v16;

  v2 = sub_1DC4044BC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v16 - v7;
  sub_1DC112498(0, &qword_1EDB2B018, (uint64_t (*)(void))sub_1DC11EF34, (uint64_t)&type metadata for StockListOfflineModel, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0D5DAF8]);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v16 - v10;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1DC350E00(a1, (uint64_t)v11);
    v13 = sub_1DC407EAC();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v11, 1, v13) == 1)
    {
      sub_1DC350E64((uint64_t)v11);
      sub_1DC4049CC();
      sub_1DC404A14();
      swift_release();
      (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DB7370], v2);
      sub_1DC080808(&qword_1EDB27550, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB7380], MEMORY[0x1E0DB7388]);
      v14 = sub_1DC4089F8();
      v15 = *(void (**)(char *, uint64_t))(v3 + 8);
      v15(v5, v2);
      v15(v8, v2);
      if ((v14 & 1) == 0)
        sub_1DC0B3560();
      return swift_release();
    }
    else
    {
      swift_release();
      return sub_1DC350E64((uint64_t)v11);
    }
  }
  return result;
}

void sub_1DC345A20(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  int v6;
  unint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;

  sub_1DC112498(0, &qword_1EDB2B018, (uint64_t (*)(void))sub_1DC11EF34, (uint64_t)&type metadata for StockListOfflineModel, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0D5DAF8]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v15 - v3;
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    sub_1DC350E00(a1, (uint64_t)v4);
    v5 = sub_1DC407EAC();
    v6 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5);
    sub_1DC350E64((uint64_t)v4);
    if (v6 == 1)
    {
      swift_retain();
      v7 = sub_1DC404FFC();
      if (v7 >> 62)
      {
        if (v7 >> 62 == 1)
        {
          swift_release();
          if (qword_1EDB273E0 != -1)
            swift_once();
          v8 = sub_1DC403F64();
          __swift_project_value_buffer(v8, (uint64_t)qword_1EDB5DDE8);
          v9 = sub_1DC403F4C();
          v10 = sub_1DC408FE0();
          if (os_log_type_enabled(v9, v10))
          {
            v11 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)v11 = 0;
            _os_log_impl(&dword_1DC07D000, v9, v10, "Stock list will not reattempt prewarm because it has already finished", v11, 2u);
            MEMORY[0x1DF0CAC88](v11, -1, -1);
            swift_release();

            return;
          }
          goto LABEL_13;
        }
      }
      else
      {
        sub_1DC2B95BC((id)v7);
      }
      swift_release();
      sub_1DC0B3560();
      goto LABEL_16;
    }
    if (qword_1EDB273E0 != -1)
      swift_once();
    v12 = sub_1DC403F64();
    __swift_project_value_buffer(v12, (uint64_t)qword_1EDB5DDE8);
    v9 = sub_1DC403F4C();
    v13 = sub_1DC408FE0();
    if (os_log_type_enabled(v9, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v14 = 0;
      _os_log_impl(&dword_1DC07D000, v9, v13, "Stock list will not reattempt prewarm because new state is offline", v14, 2u);
      MEMORY[0x1DF0CAC88](v14, -1, -1);
    }
LABEL_13:

LABEL_16:
    swift_release();
  }
}

uint64_t sub_1DC345CBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  sub_1DC1339CC(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1DC40124C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v27 - v14;
  sub_1DC1339B0(0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v27 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v20 = result;
    v21 = MEMORY[0x1DF0CAD78](result + 16);
    if (v21)
    {
      v28 = *(_QWORD *)(*(_QWORD *)v20 + 120);
      v29 = a3;
      v22 = *(_QWORD *)(v20 + v28);
      v30 = a4;
      v31 = v21;
      __swift_project_boxed_opaque_existential_1((_QWORD *)(v22 + 32), *(_QWORD *)(v22 + 56));
      swift_retain();
      sub_1DC400A60();
      sub_1DC401240();
      v23 = *(void (**)(char *, uint64_t))(v10 + 8);
      v23(v15, v9);
      v24 = sub_1DC400970();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v18, 0, 1, v24);
      __swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)(v20 + v28) + 32), *(_QWORD *)(*(_QWORD *)(v20 + v28) + 56));
      sub_1DC400A60();
      sub_1DC4011EC();
      v23(v12, v9);
      v25 = sub_1DC4008EC();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v8, 0, 1, v25);
      type metadata accessor for StockListInteractor(0, v29, v30, v26);
      sub_1DC11F098((uint64_t)v18, (uint64_t)v8, v31);
      swift_unknownObjectRelease();
      swift_release_n();
      sub_1DC0926D8((uint64_t)v8, (uint64_t (*)(_QWORD))sub_1DC1339CC);
      return sub_1DC0926D8((uint64_t)v18, (uint64_t (*)(_QWORD))sub_1DC1339B0);
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_1DC345F4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  int v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t);
  uint64_t result;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(uint64_t, char *, uint64_t);
  uint64_t v34;
  _QWORD *v35;
  char *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  __int128 v46;
  char v47;

  sub_1DC350D1C(0);
  MEMORY[0x1E0C80A78](v1);
  v40 = (char *)&v30 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = sub_1DC405848();
  v31 = *(_QWORD *)(v32 - 8);
  MEMORY[0x1E0C80A78](v32);
  v36 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1DC40124C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1DC4008EC();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v39 = (char *)&v30 - v13;
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v30 - v15;
  v17 = *(_QWORD *)(*(_QWORD *)v0 + 120);
  v37 = v0;
  v18 = *(_QWORD *)(v0 + v17);
  v19 = *(_QWORD *)(v18 + 56);
  v34 = v18;
  v35 = (_QWORD *)(v18 + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v18 + 32), v19);
  sub_1DC400A60();
  sub_1DC4011EC();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v20 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
  v38 = v16;
  v20(v11, v16, v8);
  v41 = v9;
  v21 = (*(uint64_t (**)(char *, uint64_t))(v9 + 88))(v11, v8);
  v22 = *MEMORY[0x1E0DAE888];
  if (v21 == (_DWORD)v22)
  {
    v22 = *MEMORY[0x1E0DAE878];
  }
  else if (v21 != *MEMORY[0x1E0DAE868])
  {
    v22 = *MEMORY[0x1E0DAE868];
    if (v21 != *MEMORY[0x1E0DAE878])
    {
      result = sub_1DC409838();
      __break(1u);
      return result;
    }
  }
  v33 = (void (*)(uint64_t, char *, uint64_t))v20;
  v23 = v39;
  (*(void (**)(char *, uint64_t, uint64_t))(v41 + 104))(v39, v22, v8);
  (*(void (**)(char *, _QWORD, uint64_t))(v31 + 104))(v36, *MEMORY[0x1E0DB9EF8], v32);
  v24 = v37;
  v25 = *(_QWORD *)(v37 + *(_QWORD *)(*(_QWORD *)v37 + 128));
  v43 = sub_1DC4018AC();
  v44 = sub_1DC080808((unint64_t *)&qword_1EDB29180, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8638], MEMORY[0x1E0D59B68]);
  v42 = v25;
  v45 = 0u;
  v46 = 0u;
  v47 = 1;
  sub_1DC405434();
  swift_allocObject();
  swift_retain();
  sub_1DC40541C();
  v37 = *(_QWORD *)(v24 + *(_QWORD *)(*(_QWORD *)v24 + 136) + 8);
  swift_getObjectType();
  if (qword_1EDB2AA50 != -1)
    swift_once();
  __swift_project_boxed_opaque_existential_1(v35, *(_QWORD *)(v34 + 56));
  v26 = (uint64_t)v40;
  sub_1DC400A60();
  v27 = type metadata accessor for ChangeWatchlistDisplayContext(0);
  v33(v26 + *(int *)(v27 + 20), v23, v8);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v26, 0, 1, v27);
  swift_retain();
  sub_1DC404A80();
  swift_release_n();
  sub_1DC0926D8(v26, (uint64_t (*)(_QWORD))sub_1DC350D1C);
  v28 = *(void (**)(char *, uint64_t))(v41 + 8);
  v28(v23, v8);
  return ((uint64_t (*)(char *, uint64_t))v28)(v38, v8);
}

uint64_t sub_1DC3463EC(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char *v9;
  uint64_t v11;

  v3 = *v1;
  v4 = sub_1DC405B30();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x1E0C80A78](v4);
  v7 = swift_allocObject();
  swift_weakInit();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  v8 = (*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v9 = (char *)swift_allocObject();
  *((_QWORD *)v9 + 2) = *(_QWORD *)(v3 + 80);
  *((_QWORD *)v9 + 3) = *(_QWORD *)(v3 + 88);
  *((_QWORD *)v9 + 4) = v7;
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(&v9[v8], (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  swift_retain();
  sub_1DC401828();
  swift_release();
  return swift_release();
}

uint64_t sub_1DC34651C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  char v27;
  unsigned int *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  int v36;
  unsigned int *v37;
  char *v38;
  uint64_t v39;
  uint64_t (*v40)(void);
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t (*v44)(uint64_t);
  char *v45;
  void (*v46)(char *, uint64_t);
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;

  v64 = a3;
  v3 = sub_1DC3FFFEC();
  v71 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1DC403448();
  v69 = *(_QWORD *)(v6 - 8);
  v70 = v6;
  MEMORY[0x1E0C80A78](v6);
  v68 = (uint64_t)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0CC0A4(0, (unint64_t *)&qword_1EDB2AB40, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790]);
  v66 = *(_QWORD *)(v8 - 8);
  v67 = v8;
  MEMORY[0x1E0C80A78](v8);
  v65 = (char *)&v48 - v9;
  v62 = sub_1DC403AB4();
  v59 = *(_QWORD *)(v62 - 8);
  MEMORY[0x1E0C80A78](v62);
  v60 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1DC4061A8();
  v56 = *(_QWORD *)(v11 - 8);
  v57 = v11;
  MEMORY[0x1E0C80A78](v11);
  v55 = (char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = sub_1DC403034();
  v61 = *(_QWORD *)(v63 - 8);
  MEMORY[0x1E0C80A78](v63);
  v58 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1DC403184();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v48 - v19;
  v51 = sub_1DC40124C();
  v21 = *(_QWORD *)(v51 - 8);
  MEMORY[0x1E0C80A78](v51);
  v23 = (char *)&v48 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = sub_1DC403178();
  v53 = *(_QWORD *)(v54 - 8);
  MEMORY[0x1E0C80A78](v54);
  v52 = (char *)&v48 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v49 = v5;
    v50 = v3;
    v26 = *(_QWORD *)(*(_QWORD *)result + 120);
    v48 = result;
    __swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)(result + v26) + 32), *(_QWORD *)(*(_QWORD *)(result + v26) + 56));
    sub_1DC400A60();
    v27 = sub_1DC4011D4();
    v28 = (unsigned int *)MEMORY[0x1E0DAD158];
    if ((v27 & 1) == 0)
      v28 = (unsigned int *)MEMORY[0x1E0DAD150];
    (*(void (**)(char *, _QWORD, uint64_t))(v15 + 104))(v20, *v28, v14);
    (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v17, v20, v14);
    v29 = v52;
    sub_1DC40316C();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v51);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v20, v14);
    sub_1DC089DA4(0, (unint64_t *)&qword_1EDB3FE40, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8178], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v30 = sub_1DC401618();
    v31 = *(_QWORD *)(v30 - 8);
    v32 = (*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
    v33 = swift_allocObject();
    *(_OWORD *)(v33 + 16) = xmmword_1DC40DC10;
    (*(void (**)(unint64_t, _QWORD, uint64_t))(v31 + 104))(v33 + v32, *MEMORY[0x1E0CF8170], v30);
    sub_1DC080808(&qword_1EDB297C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD148], MEMORY[0x1E0DAD138]);
    v34 = v54;
    sub_1DC4015C4();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v53 + 8))(v29, v34);
    v35 = v55;
    sub_1DC405B0C();
    v36 = (*(uint64_t (**)(char *, uint64_t))(v56 + 88))(v35, v57);
    if (v36 == *MEMORY[0x1E0DBB5D8])
    {
      v37 = (unsigned int *)MEMORY[0x1E0DADE88];
    }
    else
    {
      v37 = (unsigned int *)MEMORY[0x1E0DADE90];
      if (v36 != *MEMORY[0x1E0DBB5E8] && v36 != *MEMORY[0x1E0DBB5F0] && v36 != *MEMORY[0x1E0DBB5E0])
      {
        result = sub_1DC409838();
        __break(1u);
        return result;
      }
    }
    (*(void (**)(char *, _QWORD, uint64_t))(v59 + 104))(v60, *v37, v62);
    v38 = v58;
    sub_1DC403028();
    sub_1DC080808((unint64_t *)&unk_1EDB29760, (uint64_t (*)(uint64_t))MEMORY[0x1E0DACF28], MEMORY[0x1E0DACF18]);
    v39 = v63;
    sub_1DC4015C4();
    (*(void (**)(char *, uint64_t))(v61 + 8))(v38, v39);
    sub_1DC4049CC();
    v72 = v73;
    v40 = MEMORY[0x1E0DB80B8];
    sub_1DC0CC0A4(0, (unint64_t *)&unk_1EDB29EA0, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB80B8]);
    sub_1DC0D4244((unint64_t *)&qword_1EDB29E90, (unint64_t *)&unk_1EDB29EA0, (uint64_t (*)(uint64_t, _QWORD *))v40, MEMORY[0x1E0DB80D0]);
    v41 = v65;
    sub_1DC405050();
    swift_release();
    v42 = v68;
    sub_1DC343C14(v68);
    (*(void (**)(char *, uint64_t))(v66 + 8))(v41, v67);
    sub_1DC080808(&qword_1EDB27508, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD528], MEMORY[0x1E0DAD520]);
    v43 = v70;
    sub_1DC4015C4();
    (*(void (**)(uint64_t, uint64_t))(v69 + 8))(v42, v43);
    sub_1DC40355C();
    v44 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD690];
    v45 = v49;
    sub_1DC405B24();
    sub_1DC080808(&qword_1EDB29870, v44, MEMORY[0x1E0DAD688]);
    sub_1DC401594();
    v46 = *(void (**)(char *, uint64_t))(v71 + 8);
    v47 = v50;
    v46(v45, v50);
    sub_1DC405B18();
    sub_1DC4015A0();
    swift_release();
    return ((uint64_t (*)(char *, uint64_t))v46)(v45, v47);
  }
  return result;
}

uint64_t sub_1DC346CD4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v2 = v1;
  v35 = *v2;
  sub_1DC0CC0A4(0, (unint64_t *)&unk_1EDB29FC8, MEMORY[0x1E0DB8880]);
  v5 = v4;
  v34 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v33 = (char *)&v29 - v6;
  v7 = type metadata accessor for StockListStockModel(0);
  v30 = *(_QWORD *)(v7 - 8);
  v8 = *(_QWORD *)(v30 + 64);
  MEMORY[0x1E0C80A78](v7);
  v31 = (uint64_t)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v36 = (uint64_t)&v29 - v10;
  v11 = type metadata accessor for StockListModel(0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0F8190();
  v15 = v14;
  v16 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v29 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = a1;
  sub_1DC404DA4();
  sub_1DC404354();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result)
  {
    if ((_DWORD)result == 1)
      return sub_1DC0926D8((uint64_t)v13, type metadata accessor for StockListModel);
  }
  else
  {
    v20 = v36;
    sub_1DC092ED0((uint64_t)v13, v36, type metadata accessor for StockListStockModel);
    v29 = *(uint64_t *)((char *)v2 + *(_QWORD *)(*v2 + 128));
    v21 = swift_allocObject();
    swift_weakInit();
    v22 = v31;
    sub_1DC0990BC(v20, v31, type metadata accessor for StockListStockModel);
    v23 = v33;
    v24 = v34;
    (*(void (**)(char *, uint64_t, uint64_t))(v34 + 16))(v33, v32, v5);
    v25 = (*(unsigned __int8 *)(v30 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
    v26 = (v8 + v25 + *(unsigned __int8 *)(v24 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
    v27 = (char *)swift_allocObject();
    v28 = v35;
    *((_QWORD *)v27 + 2) = *(_QWORD *)(v35 + 80);
    *((_QWORD *)v27 + 3) = *(_QWORD *)(v28 + 88);
    *((_QWORD *)v27 + 4) = v21;
    sub_1DC092ED0(v22, (uint64_t)&v27[v25], type metadata accessor for StockListStockModel);
    (*(void (**)(char *, char *, uint64_t))(v24 + 32))(&v27[v26], v23, v5);
    swift_retain();
    sub_1DC401828();
    swift_release();
    sub_1DC0926D8(v36, type metadata accessor for StockListStockModel);
    return swift_release();
  }
  return result;
}

uint64_t sub_1DC346FCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t result;
  void (*v41)(char *, uint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(_QWORD);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  double v57;
  char *v58;
  double v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  double v63;
  uint64_t v64;
  double v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  char *v71;
  double v72;
  double v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  _QWORD *v80;
  uint64_t v81;
  void (*v82)(char *, unint64_t, uint64_t);
  char *v83;
  uint64_t v84;
  char v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  char v92;
  unsigned int *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t (*v104)(uint64_t);
  char *v105;
  void (*v106)(char *, uint64_t);
  uint64_t v107;
  _QWORD v108[2];
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  char *v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  __int128 v125;
  unsigned int v126;
  void (*v127)(uint64_t, _QWORD, uint64_t);
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  char *v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  char *v146;
  uint64_t v147;
  char *v148;
  uint64_t v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;

  v143 = a4;
  v144 = a1;
  sub_1DC0F8190();
  v130 = v5;
  v129 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v148 = (char *)v108 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0CC0A4(0, (unint64_t *)&qword_1EDB2AB40, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790]);
  v147 = v7;
  v128 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v146 = (char *)v108 - v8;
  v9 = sub_1DC4033A0();
  v132 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v131 = (char *)v108 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v117 = sub_1DC403184();
  v116 = *(_QWORD *)(v117 - 8);
  MEMORY[0x1E0C80A78](v117);
  v114 = (char *)v108 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v115 = (char *)v108 - v13;
  v120 = sub_1DC403178();
  v119 = *(_QWORD *)(v120 - 8);
  MEMORY[0x1E0C80A78](v120);
  v118 = (char *)v108 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v152 = sub_1DC40124C();
  v142 = *(char **)(v152 - 8);
  MEMORY[0x1E0C80A78](v152);
  v113 = (char *)v108 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v124 = (char *)v108 - v17;
  sub_1DC176BD8(0);
  MEMORY[0x1E0C80A78](v18);
  v133 = (char *)v108 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v123 = sub_1DC400F7C();
  v122 = *(_QWORD *)(v123 - 8);
  MEMORY[0x1E0C80A78](v123);
  v121 = (char *)v108 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0FF558(0);
  MEMORY[0x1E0C80A78](v21);
  v141 = (uint64_t)v108 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v151 = sub_1DC3FFFEC();
  v149 = *(_QWORD *)(v151 - 8);
  MEMORY[0x1E0C80A78](v151);
  v150 = (char *)v108 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0FED34(0);
  MEMORY[0x1E0C80A78](v24);
  v140 = (uint64_t)v108 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v136 = sub_1DC403310();
  v135 = *(_QWORD *)(v136 - 8);
  MEMORY[0x1E0C80A78](v136);
  v134 = (char *)v108 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_1DC402F50();
  MEMORY[0x1E0C80A78](v27);
  v29 = (char *)v108 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v137 = sub_1DC4011C8();
  v30 = *(_QWORD *)(v137 - 8);
  MEMORY[0x1E0C80A78](v137);
  v32 = (char *)v108 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = sub_1DC4010E4();
  v34 = *(_QWORD *)(v33 - 8);
  MEMORY[0x1E0C80A78](v33);
  v36 = (char *)v108 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = sub_1DC402F44();
  v138 = *(_QWORD *)(v37 - 8);
  v139 = v37;
  MEMORY[0x1E0C80A78](v37);
  v39 = (char *)v108 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  v145 = result;
  if (result)
  {
    v108[0] = v9;
    v41 = *(void (**)(char *, uint64_t, uint64_t))(v34 + 16);
    v112 = a3;
    v41(v36, a3, v33);
    sub_1DC4010B4();
    sub_1DC401078();
    sub_1DC23A0A0((uint64_t)v29);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v32, v137);
    sub_1DC4010CC();
    sub_1DC402F2C();
    (*(void (**)(char *, uint64_t))(v34 + 8))(v36, v33);
    sub_1DC089DA4(0, (unint64_t *)&qword_1EDB3FE40, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8178], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v43 = v42;
    v44 = sub_1DC401618();
    v45 = *(_QWORD *)(v44 - 8);
    v46 = *(unsigned __int8 *)(v45 + 80);
    v47 = (v46 + 32) & ~v46;
    v137 = v47 + *(_QWORD *)(v45 + 72);
    v108[1] = v46 | 7;
    v48 = swift_allocObject();
    v125 = xmmword_1DC40DC10;
    *(_OWORD *)(v48 + 16) = xmmword_1DC40DC10;
    v109 = v47;
    v49 = *(void (**)(_QWORD))(v45 + 104);
    v126 = *MEMORY[0x1E0CF8170];
    v111 = v44;
    v127 = (void (*)(uint64_t, _QWORD, uint64_t))v49;
    v49(v48 + v47);
    sub_1DC080808(&qword_1EDB29738, (uint64_t (*)(uint64_t))MEMORY[0x1E0DACD70], MEMORY[0x1E0DACD58]);
    v50 = v139;
    sub_1DC4015C4();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v138 + 8))(v39, v50);
    v51 = type metadata accessor for StockViewModel();
    v52 = v112;
    v53 = v140;
    sub_1DC0990BC(v112 + *(int *)(v51 + 20), v140, (uint64_t (*)(_QWORD))sub_1DC0FED34);
    v54 = sub_1DC401030();
    v55 = *(_QWORD *)(v54 - 8);
    v56 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v55 + 48))(v53, 1, v54);
    v110 = v43;
    if (v56 == 1)
    {
      result = sub_1DC0926D8(v53, (uint64_t (*)(_QWORD))sub_1DC0FED34);
      v57 = 0.0;
    }
    else
    {
      v58 = v150;
      sub_1DC400FE8();
      (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v53, v54);
      sub_1DC3FFF80();
      v57 = v59;
      result = (*(uint64_t (**)(char *, uint64_t))(v149 + 8))(v58, v151);
    }
    v60 = v152;
    v61 = v141;
    v62 = v142;
    v63 = fabs(v57);
    if ((~*(_QWORD *)&v63 & 0x7FF0000000000000) != 0)
    {
      if (v63 > -2147483650.0)
      {
        if (v63 < 2147483650.0)
        {
          sub_1DC0990BC(v52 + *(int *)(v51 + 24), v141, (uint64_t (*)(_QWORD))sub_1DC0FF558);
          v64 = type metadata accessor for StockSparklineViewModel(0);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 48))(v61, 1, v64) == 1)
          {
            result = sub_1DC0926D8(v61, (uint64_t (*)(_QWORD))sub_1DC0FF558);
            v65 = 0.0;
          }
          else
          {
            v66 = v61 + *(int *)(v64 + 32);
            v67 = v122;
            v68 = v61;
            v69 = v121;
            v70 = v123;
            (*(void (**)(char *, uint64_t, uint64_t))(v122 + 16))(v121, v66, v123);
            sub_1DC0926D8(v68, type metadata accessor for StockSparklineViewModel);
            v71 = v150;
            sub_1DC400EF8();
            (*(void (**)(char *, uint64_t))(v67 + 8))(v69, v70);
            sub_1DC3FFF80();
            v65 = v72;
            result = (*(uint64_t (**)(char *, uint64_t))(v149 + 8))(v71, v151);
          }
          v73 = fabs(v65);
          if ((~*(_QWORD *)&v73 & 0x7FF0000000000000) != 0)
          {
            if (v73 > -2147483650.0)
            {
              if (v73 < 2147483650.0)
              {
                v74 = v134;
                sub_1DC403304();
                sub_1DC080808(&qword_1EDB27500, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD3A8], MEMORY[0x1E0DAD398]);
                v142 = "stInteractor.swift";
                v75 = v136;
                sub_1DC4015C4();
                (*(void (**)(char *, uint64_t))(v135 + 8))(v74, v75);
                v76 = *(_QWORD *)(v145 + *(_QWORD *)(*(_QWORD *)v145 + 120));
                __swift_project_boxed_opaque_existential_1((_QWORD *)(v76 + 32), *(_QWORD *)(v76 + 56));
                v77 = sub_1DC400ACC();
                v78 = *(_QWORD *)(v77 + 16);
                if (v78)
                {
                  v79 = v77 + ((v62[80] + 32) & ~(unint64_t)v62[80]);
                  v80 = (_QWORD *)(v52 + *(int *)(type metadata accessor for StockListStockModel(0) + 24));
                  v81 = *((_QWORD *)v62 + 9);
                  v82 = (void (*)(char *, unint64_t, uint64_t))*((_QWORD *)v62 + 2);
                  swift_bridgeObjectRetain();
                  v83 = v124;
                  while (1)
                  {
                    v82(v83, v79, v60);
                    if (sub_1DC4011E0() == *v80 && v84 == v80[1])
                    {
                      swift_bridgeObjectRelease();
                      goto LABEL_27;
                    }
                    v86 = sub_1DC4099E8();
                    swift_bridgeObjectRelease();
                    if ((v86 & 1) != 0)
                      break;
                    v60 = v152;
                    (*((void (**)(char *, uint64_t))v62 + 1))(v83, v152);
                    v79 += v81;
                    if (!--v78)
                    {
                      swift_bridgeObjectRelease();
                      v87 = 1;
                      goto LABEL_24;
                    }
                  }
                  v60 = v152;
LABEL_27:
                  swift_bridgeObjectRelease();
                  v88 = (uint64_t)v133;
                  (*((void (**)(char *, char *, uint64_t))v62 + 4))(v133, v83, v60);
                  v87 = 0;
                }
                else
                {
                  v87 = 1;
LABEL_24:
                  v88 = (uint64_t)v133;
                }
                (*((void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v62 + 7))(v88, v87, 1, v60);
                swift_bridgeObjectRelease();
                if ((*((unsigned int (**)(uint64_t, uint64_t, uint64_t))v62 + 6))(v88, 1, v60) == 1)
                {
                  sub_1DC0926D8(v88, (uint64_t (*)(_QWORD))sub_1DC176BD8);
                  v89 = v111;
                  v90 = v109;
                }
                else
                {
                  v91 = v113;
                  (*((void (**)(char *, uint64_t, uint64_t))v62 + 4))(v113, v88, v60);
                  v92 = sub_1DC4011D4();
                  v93 = (unsigned int *)MEMORY[0x1E0DAD158];
                  v94 = v116;
                  if ((v92 & 1) == 0)
                    v93 = (unsigned int *)MEMORY[0x1E0DAD150];
                  v95 = v60;
                  v96 = v115;
                  v97 = v117;
                  (*(void (**)(char *, _QWORD, uint64_t))(v116 + 104))(v115, *v93, v117);
                  (*(void (**)(char *, char *, uint64_t))(v94 + 16))(v114, v96, v97);
                  v98 = v118;
                  sub_1DC40316C();
                  (*((void (**)(char *, uint64_t))v62 + 1))(v91, v95);
                  (*(void (**)(char *, uint64_t))(v94 + 8))(v96, v97);
                  v99 = swift_allocObject();
                  *(_OWORD *)(v99 + 16) = v125;
                  v90 = v109;
                  v89 = v111;
                  v127(v99 + v109, v126, v111);
                  sub_1DC080808(&qword_1EDB297C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD148], MEMORY[0x1E0DAD138]);
                  v100 = v120;
                  sub_1DC4015C4();
                  swift_bridgeObjectRelease();
                  (*(void (**)(char *, uint64_t))(v119 + 8))(v98, v100);
                }
                sub_1DC0CC0A4(0, (unint64_t *)&unk_1EDB29FC8, MEMORY[0x1E0DB8880]);
                sub_1DC404DBC();
                sub_1DC404DA4();
                sub_1DC080808(&qword_1EDB2D858, type metadata accessor for StockListModel, (uint64_t)&unk_1DC41C1E0);
                result = sub_1DC406D30();
                if (result >= (uint64_t)0xFFFFFFFF80000000)
                {
                  if (result <= 0x7FFFFFFF)
                  {
                    v101 = v131;
                    sub_1DC403394();
                    (*(void (**)(char *, uint64_t))(v129 + 8))(v148, v130);
                    (*(void (**)(char *, uint64_t))(v128 + 8))(v146, v147);
                    v102 = swift_allocObject();
                    *(_OWORD *)(v102 + 16) = v125;
                    v127(v102 + v90, v126, v89);
                    sub_1DC080808(&qword_1EDB29820, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD438], MEMORY[0x1E0DAD428]);
                    v103 = v108[0];
                    sub_1DC4015C4();
                    swift_bridgeObjectRelease();
                    (*(void (**)(char *, uint64_t))(v132 + 8))(v101, v103);
                    sub_1DC4035F8();
                    v104 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD738];
                    v105 = v150;
                    sub_1DC404DC8();
                    sub_1DC080808(&qword_1EDB298A0, v104, MEMORY[0x1E0DAD730]);
                    sub_1DC401594();
                    v106 = *(void (**)(char *, uint64_t))(v149 + 8);
                    v107 = v151;
                    v106(v105, v151);
                    sub_1DC404DB0();
                    sub_1DC4015A0();
                    swift_release();
                    return ((uint64_t (*)(char *, uint64_t))v106)(v105, v107);
                  }
LABEL_44:
                  __break(1u);
                  return result;
                }
LABEL_43:
                __break(1u);
                goto LABEL_44;
              }
LABEL_42:
              __break(1u);
              goto LABEL_43;
            }
LABEL_41:
            __break(1u);
            goto LABEL_42;
          }
LABEL_40:
          __break(1u);
          goto LABEL_41;
        }
LABEL_39:
        __break(1u);
        goto LABEL_40;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_39;
  }
  return result;
}

uint64_t sub_1DC347E8C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)();
  uint64_t v14;
  uint64_t v15;

  v3 = type metadata accessor for EngagementEvent();
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for StockListSelectionModel();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC080808((unint64_t *)&qword_1EDB351C0, (uint64_t (*)(uint64_t))type metadata accessor for StockListSelectionModel, (uint64_t)&unk_1DC4157E8);
  sub_1DC402764();
  sub_1DC0990BC(a1, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for StockListSelectionModel);
  v9 = sub_1DC4010E4();
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v8, 2, v9);
  if ((_DWORD)result)
  {
    if ((_DWORD)result != 1)
      return result;
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 208)), *(_QWORD *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 208) + 24));
    v11 = *MEMORY[0x1E0DADDE8];
    v12 = sub_1DC403A60();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v5, v11, v12);
    swift_storeEnumTagMultiPayload();
    sub_1DC087D08((uint64_t)v5);
    v13 = type metadata accessor for EngagementEvent;
    v14 = (uint64_t)v5;
  }
  else
  {
    v13 = type metadata accessor for StockListSelectionModel;
    v14 = (uint64_t)v8;
  }
  return sub_1DC0926D8(v14, (uint64_t (*)(_QWORD))v13);
}

uint64_t sub_1DC34802C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v5;

  v1 = type metadata accessor for EngagementEvent();
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 208)), *(_QWORD *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 208) + 24));
  swift_storeEnumTagMultiPayload();
  sub_1DC087D08((uint64_t)v3);
  return sub_1DC0926D8((uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for EngagementEvent);
}

uint64_t sub_1DC3480D0()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t result;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  _QWORD v23[2];

  v1 = v0;
  v2 = *v0;
  v3 = sub_1DC4010E4();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for AttributionSource();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for StockListRouteModel();
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for StockListSelectionModel();
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23[1] = v2;
  sub_1DC402740();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v15, 2, v3))
  {
    result = MEMORY[0x1DF0CAD78](v1 + 2);
    if (result)
    {
      v17 = (_QWORD *)((char *)v1 + *(_QWORD *)(*v1 + 176));
      v18 = v17[3];
      v19 = v17[4];
      __swift_project_boxed_opaque_existential_1(v17, v18);
      AttributionProviderType.source.getter(v18, v19);
      sub_1DC0990BC((uint64_t)&v9[*(int *)(v7 + 20)], (uint64_t)v12, (uint64_t (*)(_QWORD))sub_1DC133BB0);
      sub_1DC0926D8((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for AttributionSource);
      swift_storeEnumTagMultiPayload();
      sub_1DC315D64((uint64_t)v12);
      swift_unknownObjectRelease();
      return sub_1DC0926D8((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for StockListRouteModel);
    }
  }
  else
  {
    v20 = (*(uint64_t (**)(char *, char *, uint64_t))(v4 + 32))(v6, v15, v3);
    MEMORY[0x1E0C80A78](v20);
    v23[-2] = v1;
    v23[-1] = v6;
    sub_1DC133BB0(0);
    sub_1DC402E0C();
    sub_1DC0ACADC();
    v21 = (void *)sub_1DC409148();
    sub_1DC083594(0, (unint64_t *)&qword_1EDB41D28, MEMORY[0x1E0DEE9C0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
    sub_1DC402D1C();
    swift_release();

    v22 = (void *)sub_1DC409148();
    sub_1DC402D40();
    swift_release();
    swift_release();

    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  return result;
}

uint64_t sub_1DC3483D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, BOOL *a3@<X8>)
{
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;

  v6 = type metadata accessor for StockListRouteModel();
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x1DF0CAD78](a2 + 16, v7);
  v11 = result;
  if (result)
  {
    sub_1DC0990BC(a1, (uint64_t)v9, (uint64_t (*)(_QWORD))sub_1DC133BB0);
    swift_storeEnumTagMultiPayload();
    sub_1DC315D64((uint64_t)v9);
    swift_unknownObjectRelease();
    result = sub_1DC0926D8((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for StockListRouteModel);
  }
  *a3 = v11 == 0;
  return result;
}

uint64_t sub_1DC3484AC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  uint64_t result;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v3 = type metadata accessor for AttributionSource();
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for StockListRouteModel();
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x1DF0CAD78](a2 + 16, v7);
  if (result)
  {
    v11 = (_QWORD *)(a2 + *(_QWORD *)(*(_QWORD *)a2 + 176));
    v12 = v11[3];
    v13 = v11[4];
    __swift_project_boxed_opaque_existential_1(v11, v12);
    AttributionProviderType.source.getter(v12, v13);
    sub_1DC0990BC((uint64_t)&v5[*(int *)(v3 + 20)], (uint64_t)v9, (uint64_t (*)(_QWORD))sub_1DC133BB0);
    sub_1DC0926D8((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for AttributionSource);
    swift_storeEnumTagMultiPayload();
    sub_1DC315D64((uint64_t)v9);
    swift_unknownObjectRelease();
    return sub_1DC0926D8((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for StockListRouteModel);
  }
  return result;
}

uint64_t sub_1DC3485EC(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v36;
  char *v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t (*v52)(void);
  void (*v53)(char *, uint64_t);
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  int v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(char *, char *, uint64_t);
  char *v65;
  char *v66;
  uint64_t v67;
  void (*v68)(_QWORD *, uint64_t, uint64_t);
  char v69;
  uint64_t (*v70)(char *, uint64_t);
  uint64_t (*v71)(char *, uint64_t);
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  char *v82;
  char v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  int v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  unint64_t v102;
  _QWORD *v103;
  uint64_t *v104;
  char *v105;
  uint64_t (*v106)(void);
  uint64_t v107;
  char *v108;
  uint64_t (*v109)(char *, uint64_t);
  uint64_t v110;
  uint64_t v111;
  char *v112;
  char *v113;
  uint64_t v114;
  char *v115;
  char *v116;
  char *v117;
  uint64_t v118;
  char *v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  char *v127;
  uint64_t v128;
  int v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  __int128 v138;
  __int128 v139;
  char v140;

  v129 = a2;
  v134 = a1;
  v124 = *v2;
  sub_1DC104530();
  MEMORY[0x1E0C80A78](v3);
  v113 = (char *)&v107 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC25CD80(0);
  MEMORY[0x1E0C80A78](v5);
  v117 = (char *)&v107 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v118 = sub_1DC405848();
  v121 = *(_QWORD *)(v118 - 8);
  MEMORY[0x1E0C80A78](v118);
  v119 = (char *)&v107 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v128 = sub_1DC400280();
  v131 = *(_QWORD *)(v128 - 8);
  MEMORY[0x1E0C80A78](v128);
  v127 = (char *)&v107 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v123 = sub_1DC4010E4();
  v122 = *(_QWORD *)(v123 - 8);
  MEMORY[0x1E0C80A78](v123);
  v112 = (char *)&v107 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for StockListSelectionModel();
  MEMORY[0x1E0C80A78](v10);
  v114 = (uint64_t)&v107 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v116 = (char *)&v107 - v13;
  v130 = sub_1DC404E1C();
  v133 = *(_QWORD *)(v130 - 8);
  MEMORY[0x1E0C80A78](v130);
  v115 = (char *)&v107 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v126 = (char *)&v107 - v16;
  MEMORY[0x1E0C80A78](v17);
  v120 = (char *)&v107 - v18;
  MEMORY[0x1E0C80A78](v19);
  v132 = (char *)&v107 - v20;
  v21 = type metadata accessor for StockListModel(0);
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v107 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0F8190();
  v25 = v24;
  v26 = *(_QWORD *)(v24 - 8);
  MEMORY[0x1E0C80A78](v24);
  v28 = (char *)&v107 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = type metadata accessor for StockListStockModel(0);
  v30 = *(_QWORD *)(v29 - 8);
  v31 = *(_QWORD *)(v30 + 64);
  MEMORY[0x1E0C80A78](v29);
  MEMORY[0x1E0C80A78](v32);
  v34 = (char *)&v107 - v33;
  sub_1DC405BA8();
  sub_1DC404354();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v28, v25);
  if (swift_getEnumCaseMultiPayload())
  {
    sub_1DC0926D8((uint64_t)v23, type metadata accessor for StockListModel);
    return sub_1DC405BC0();
  }
  v110 = v30;
  v111 = (uint64_t)&v107 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = v126;
  v36 = v127;
  v38 = v129;
  v39 = v131;
  v40 = v128;
  sub_1DC092ED0((uint64_t)v23, (uint64_t)v34, type metadata accessor for StockListStockModel);
  v41 = v132;
  v42 = v134;
  sub_1DC405BB4();
  v43 = v130;
  v109 = *(uint64_t (**)(char *, uint64_t))(v133 + 88);
  v44 = v109(v41, v130);
  if (v44 == *MEMORY[0x1E0DB88C8])
  {
    (*(void (**)(char *, uint64_t))(v133 + 96))(v41, v43);
    sub_1DC2492CC();
    (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v36, &v41[*(int *)(v45 + 48)], v40);
    v46 = sub_1DC400268();
    v48 = *(_QWORD *)(v124 + 80);
    v47 = *(_QWORD *)(v124 + 88);
    v135 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t, uint64_t))(v47 + 88))(v34, v46, v42, v48, v47);
    v49 = (uint64_t)v34;
    v50 = swift_allocObject();
    swift_weakInit();
    v51 = (_QWORD *)swift_allocObject();
    v51[2] = v48;
    v51[3] = v47;
    v51[4] = v50;
    v52 = MEMORY[0x1E0DB8020];
    sub_1DC0CC0A4(0, (unint64_t *)&qword_1EDB29E10, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB8020]);
    sub_1DC0D4244(&qword_1EDB29E08, (unint64_t *)&qword_1EDB29E10, (uint64_t (*)(uint64_t, _QWORD *))v52, MEMORY[0x1E0DB8030]);
    swift_retain();
    sub_1DC4049E4();
    swift_release();
    v53 = *(void (**)(char *, uint64_t))(v131 + 8);
    v53(v36, v40);
    sub_1DC0926D8(v49, type metadata accessor for StockListStockModel);
    swift_release();
    swift_release();
    return ((uint64_t (*)(char *, uint64_t))v53)(v132, v40);
  }
  if (v44 != *MEMORY[0x1E0DB88D8])
  {
    v108 = v34;
    v63 = v133;
    v64 = *(void (**)(char *, char *, uint64_t))(v133 + 16);
    v65 = v120;
    v64(v120, v41, v43);
    v66 = (char *)v37;
    *v37 = 0x6D79536572616853;
    v37[1] = 0xEB000000006C6F62;
    v67 = *MEMORY[0x1E0DB88D0];
    v68 = *(void (**)(_QWORD *, uint64_t, uint64_t))(v63 + 104);
    v68((char *)v37, v67, v43);
    sub_1DC080808(&qword_1F0352308, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB88E8], MEMORY[0x1E0DB88F0]);
    v69 = sub_1DC4089F8();
    v70 = *(uint64_t (**)(char *, uint64_t))(v63 + 8);
    v70(v66, v43);
    v70(v65, v43);
    if ((v69 & 1) != 0)
    {
      v71 = v70;
      (*(void (**)(char *, _QWORD, uint64_t))(v121 + 104))(v119, *MEMORY[0x1E0DB9EE0], v118);
      v72 = *(_QWORD *)(v125 + *(_QWORD *)(*(_QWORD *)v125 + 128));
      v136 = sub_1DC4018AC();
      v137 = sub_1DC080808((unint64_t *)&qword_1EDB29180, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8638], MEMORY[0x1E0D59B68]);
      v135 = v72;
      swift_retain();
      sub_1DC405B84();
      v138 = 0u;
      v139 = 0u;
      v140 = 1;
      sub_1DC405434();
      swift_allocObject();
      sub_1DC40541C();
      swift_getObjectType();
      if (qword_1EDB2A9D8 != -1)
        swift_once();
      sub_1DC20BAD4();
      v74 = (uint64_t)v117;
      v75 = (uint64_t)&v117[*(int *)(v73 + 48)];
      v76 = *(int *)(v73 + 64);
      v77 = (uint64_t)v108;
      (*(void (**)(char *, char *, uint64_t))(v122 + 16))(v117, v108, v123);
      v78 = type metadata accessor for StockViewModel();
      sub_1DC0990BC(v77 + *(int *)(v78 + 20), v75, (uint64_t (*)(_QWORD))sub_1DC0FED34);
      *(_BYTE *)(v74 + v76) = 2;
      v79 = type metadata accessor for CommandShareContent(0);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v79 - 8) + 56))(v74, 0, 1, v79);
      swift_retain();
      sub_1DC404A80();
      v80 = v132;
      swift_release_n();
      v91 = v130;
      sub_1DC0926D8(v74, (uint64_t (*)(_QWORD))sub_1DC25CD80);
      v92 = v77;
    }
    else
    {
      v82 = v115;
      v64(v115, v41, v43);
      *(_QWORD *)v66 = 0x61576567616E614DLL;
      *((_QWORD *)v66 + 1) = 0xEF7473696C686374;
      v68(v66, v67, v43);
      v83 = sub_1DC4089F8();
      v70(v66, v43);
      v70(v82, v43);
      if ((v83 & 1) == 0)
      {
        v89 = v109(v41, v43);
        v90 = (uint64_t)v108;
        if (v89 == (_DWORD)v67)
        {
          (*(void (**)(char *, uint64_t))(v133 + 96))(v41, v43);
          swift_bridgeObjectRelease();
        }
        else if (v89 != *MEMORY[0x1E0DB88E0])
        {
          sub_1DC405BC0();
          sub_1DC0926D8(v90, type metadata accessor for StockListStockModel);
          return v70(v41, v43);
        }
        sub_1DC405BC0();
        return sub_1DC0926D8(v90, type metadata accessor for StockListStockModel);
      }
      v71 = v70;
      (*(void (**)(char *, _QWORD, uint64_t))(v121 + 104))(v119, *MEMORY[0x1E0DB9EE0], v118);
      v84 = *(_QWORD *)(v125 + *(_QWORD *)(*(_QWORD *)v125 + 128));
      v136 = sub_1DC4018AC();
      v137 = sub_1DC080808((unint64_t *)&qword_1EDB29180, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8638], MEMORY[0x1E0D59B68]);
      v135 = v84;
      swift_retain();
      sub_1DC405B84();
      v138 = 0u;
      v139 = 0u;
      v140 = 1;
      sub_1DC405434();
      swift_allocObject();
      sub_1DC40541C();
      swift_getObjectType();
      v85 = (uint64_t)v108;
      if (qword_1EDB2AA88 != -1)
        swift_once();
      v86 = v122;
      v87 = (uint64_t)v113;
      v88 = v123;
      (*(void (**)(char *, uint64_t, uint64_t))(v122 + 16))(v113, v85, v123);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v86 + 56))(v87, 0, 1, v88);
      swift_retain();
      sub_1DC404A80();
      v80 = v132;
      swift_release_n();
      v91 = v130;
      sub_1DC0926D8(v87, (uint64_t (*)(_QWORD))sub_1DC104530);
      v92 = v85;
    }
    sub_1DC0926D8(v92, type metadata accessor for StockListStockModel);
    return v71(v80, v91);
  }
  if ((v38 & 1) != 0)
  {
    v54 = (uint64_t)v34;
    v55 = v125;
    v56 = (uint64_t)v116;
    sub_1DC402740();
    v57 = v114;
    sub_1DC0990BC(v56, v114, (uint64_t (*)(_QWORD))type metadata accessor for StockListSelectionModel);
    v58 = v122;
    v59 = v123;
    v60 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v122 + 48))(v57, 2, v123);
    v61 = v124;
    if (v60)
    {
      if (v60 == 1)
      {
        v132 = (char *)0xE500000000000000;
        v62 = 0x7961646F74;
      }
      else
      {
        v132 = (char *)0xE400000000000000;
        v62 = 1701736302;
      }
      v131 = v62;
    }
    else
    {
      v93 = v112;
      (*(void (**)(char *, uint64_t, uint64_t))(v58 + 32))(v112, v57, v59);
      v131 = sub_1DC40103C();
      v132 = v94;
      (*(void (**)(char *, uint64_t))(v58 + 8))(v93, v59);
    }
    v95 = v110;
    sub_1DC0926D8(v56, (uint64_t (*)(_QWORD))type metadata accessor for StockListSelectionModel);
    v97 = *(_QWORD *)(v61 + 80);
    v96 = *(_QWORD *)(v61 + 88);
    v133 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v96 + 80))(v42, v97, v96);
    v130 = *(_QWORD *)(v55 + 32);
    v135 = v133;
    v98 = swift_allocObject();
    swift_weakInit();
    v99 = v54;
    v108 = (char *)v54;
    v100 = v111;
    sub_1DC0990BC(v99, v111, type metadata accessor for StockListStockModel);
    v101 = (*(unsigned __int8 *)(v95 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v95 + 80);
    v102 = (v31 + v101 + 7) & 0xFFFFFFFFFFFFFFF8;
    v103 = (_QWORD *)swift_allocObject();
    v103[2] = v97;
    v103[3] = v96;
    v103[4] = v98;
    sub_1DC092ED0(v100, (uint64_t)v103 + v101, type metadata accessor for StockListStockModel);
    *(_QWORD *)((char *)v103 + v102) = v42;
    v104 = (_QWORD *)((char *)v103 + ((v102 + 15) & 0xFFFFFFFFFFFFFFF8));
    v105 = v132;
    *v104 = v131;
    v104[1] = (uint64_t)v105;
    v106 = MEMORY[0x1E0DB8020];
    sub_1DC0CC0A4(0, (unint64_t *)&qword_1EDB29E10, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB8020]);
    sub_1DC0D4244(&qword_1EDB29E08, (unint64_t *)&qword_1EDB29E10, (uint64_t (*)(uint64_t, _QWORD *))v106, MEMORY[0x1E0DB8030]);
    swift_retain();
    swift_retain();
    sub_1DC4049E4();
    swift_release();
    sub_1DC0926D8((uint64_t)v108, type metadata accessor for StockListStockModel);
    swift_release();
    return swift_release();
  }
  else
  {
    v81 = MEMORY[0x1DF0CAD78](v125 + 16);
    if (v81)
    {
      sub_1DC31BD20((uint64_t)v34, v42, v81);
      swift_unknownObjectRelease();
    }
    return sub_1DC0926D8((uint64_t)v34, type metadata accessor for StockListStockModel);
  }
}

uint64_t sub_1DC34948C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id *v22;
  uint64_t result;
  uint64_t v24;
  int v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v39 = a7;
  v40 = a8;
  v42 = a5;
  v43 = a6;
  v44 = a4;
  v38 = a3;
  v9 = type metadata accessor for StockListSelectionModel();
  MEMORY[0x1E0C80A78](v9);
  v37 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0F8190();
  v12 = v11;
  v41 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for StockListStockModel(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(_QWORD *)(v16 + 64);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_1DC405578();
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v22 = (id *)((char *)&v36 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v24 = result;
    (*(void (**)(id *, uint64_t, uint64_t))(v20 + 16))(v22, a1, v19);
    v25 = (*(uint64_t (**)(id *, uint64_t))(v20 + 88))(v22, v19);
    if (v25 == *MEMORY[0x1E0DB9A48])
    {
      (*(void (**)(id *, uint64_t))(v20 + 96))(v22, v19);

    }
    else if (v25 != *MEMORY[0x1E0DB9A40])
    {
      if (v25 != *MEMORY[0x1E0DB9A50])
      {
        result = sub_1DC409838();
        __break(1u);
        return result;
      }
      sub_1DC0990BC(v38, (uint64_t)&v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for StockListStockModel);
      v26 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
      v27 = (v17 + v26 + 7) & 0xFFFFFFFFFFFFFFF8;
      v28 = swift_allocObject();
      v29 = v40;
      *(_QWORD *)(v28 + 16) = v39;
      *(_QWORD *)(v28 + 24) = v29;
      sub_1DC092ED0((uint64_t)v18, v28 + v26, type metadata accessor for StockListStockModel);
      *(_QWORD *)(v28 + v27) = v24;
      swift_retain();
      sub_1DC401828();
      swift_release();
      if ((sub_1DC0D97C4() & 1) != 0)
        sub_1DC349DC0();
      sub_1DC405BA8();
      v30 = sub_1DC404324();
      v32 = v31;
      (*(void (**)(char *, uint64_t))(v41 + 8))(v14, v12);
      if (v30 == v42 && v32 == v43)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        v33 = sub_1DC4099E8();
        swift_bridgeObjectRelease();
        if ((v33 & 1) == 0)
          return swift_release();
      }
      v34 = sub_1DC4010E4();
      v35 = (uint64_t)v37;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v37, 2, 2, v34);
      sub_1DC080808((unint64_t *)&qword_1EDB351C0, (uint64_t (*)(uint64_t))type metadata accessor for StockListSelectionModel, (uint64_t)&unk_1DC4157E8);
      sub_1DC402764();
      sub_1DC0926D8(v35, (uint64_t (*)(_QWORD))type metadata accessor for StockListSelectionModel);
      return swift_release();
    }
    sub_1DC405BC0();
    return swift_release();
  }
  return result;
}

uint64_t sub_1DC34985C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  _BYTE *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE *v34;
  char v35;
  unsigned int *v36;
  uint64_t v37;
  _BYTE *v38;
  uint64_t v39;
  uint64_t v40;
  _BYTE *v41;
  uint64_t v42;
  uint64_t v43;
  _BYTE v45[4];
  unsigned int v46;
  void (*v47)(uint64_t);
  __int128 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _BYTE *v54;
  uint64_t v55;
  _BYTE *v56;
  uint64_t v57;
  _BYTE *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _BYTE *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _OWORD v66[3];

  v57 = a3;
  v55 = a1;
  v63 = sub_1DC403184();
  v60 = *(_QWORD *)(v63 - 8);
  MEMORY[0x1E0C80A78](v63);
  v62 = &v45[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v5);
  v58 = &v45[-v6];
  v61 = sub_1DC40124C();
  v59 = *(_QWORD *)(v61 - 8);
  MEMORY[0x1E0C80A78](v61);
  v54 = &v45[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = sub_1DC403178();
  v9 = *(_QWORD *)(v8 - 8);
  v64 = v8;
  v65 = v9;
  MEMORY[0x1E0C80A78](v8);
  v56 = &v45[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = sub_1DC402F50();
  MEMORY[0x1E0C80A78](v11);
  v13 = &v45[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v51 = sub_1DC4011C8();
  v14 = *(_QWORD *)(v51 - 8);
  MEMORY[0x1E0C80A78](v51);
  v16 = &v45[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v17 = sub_1DC4010E4();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v20 = &v45[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v21 = sub_1DC402F44();
  v22 = *(_QWORD *)(v21 - 8);
  v52 = v21;
  v53 = v22;
  v23 = MEMORY[0x1E0C80A78](v21);
  v25 = &v45[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(_BYTE *, uint64_t, uint64_t, __n128))(v18 + 16))(v20, a2, v17, v23);
  sub_1DC4010B4();
  sub_1DC401078();
  sub_1DC23A0A0((uint64_t)v13);
  (*(void (**)(_BYTE *, uint64_t))(v14 + 8))(v16, v51);
  sub_1DC4010CC();
  sub_1DC402F2C();
  (*(void (**)(_BYTE *, uint64_t))(v18 + 8))(v20, v17);
  sub_1DC089DA4(0, (unint64_t *)&qword_1EDB3FE40, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8178], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v51 = v26;
  v27 = sub_1DC401618();
  v28 = *(_QWORD *)(v27 - 8);
  v29 = *(unsigned __int8 *)(v28 + 80);
  v30 = (v29 + 32) & ~v29;
  v50 = v30 + *(_QWORD *)(v28 + 72);
  v49 = v29 | 7;
  v31 = swift_allocObject();
  v48 = xmmword_1DC40DC10;
  *(_OWORD *)(v31 + 16) = xmmword_1DC40DC10;
  v46 = *MEMORY[0x1E0CF8170];
  v47 = *(void (**)(uint64_t))(v28 + 104);
  v47(v31 + v30);
  sub_1DC080808(&qword_1EDB29738, (uint64_t (*)(uint64_t))MEMORY[0x1E0DACD70], MEMORY[0x1E0DACD58]);
  v32 = v52;
  sub_1DC4015C4();
  swift_bridgeObjectRelease();
  (*(void (**)(_BYTE *, uint64_t))(v53 + 8))(v25, v32);
  v33 = *(_QWORD *)(v57 + *(_QWORD *)(*(_QWORD *)v57 + 120));
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v33 + 32), *(_QWORD *)(v33 + 56));
  v34 = v54;
  sub_1DC400A60();
  v35 = sub_1DC4011D4();
  v36 = (unsigned int *)MEMORY[0x1E0DAD158];
  v37 = v60;
  if ((v35 & 1) == 0)
    v36 = (unsigned int *)MEMORY[0x1E0DAD150];
  v38 = v58;
  v39 = v63;
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v60 + 104))(v58, *v36, v63);
  v40 = v37;
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v37 + 16))(v62, v38, v39);
  v41 = v56;
  sub_1DC40316C();
  (*(void (**)(_BYTE *, uint64_t))(v59 + 8))(v34, v61);
  (*(void (**)(_BYTE *, uint64_t))(v40 + 8))(v38, v39);
  v42 = swift_allocObject();
  *(_OWORD *)(v42 + 16) = v48;
  ((void (*)(uint64_t, _QWORD, uint64_t))v47)(v42 + v30, v46, v27);
  sub_1DC080808(&qword_1EDB297C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD148], MEMORY[0x1E0DAD138]);
  v43 = v64;
  sub_1DC4015C4();
  swift_bridgeObjectRelease();
  (*(void (**)(_BYTE *, uint64_t))(v65 + 8))(v41, v43);
  sub_1DC403550();
  sub_1DC080808(&qword_1F034FAD0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD680], MEMORY[0x1E0DAD678]);
  memset(v66, 0, 32);
  sub_1DC4015DC();
  return sub_1DC150744((uint64_t)v66);
}

uint64_t sub_1DC349DC0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t result;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void);
  uint64_t v13;
  _QWORD v14[2];

  v1 = v0;
  v2 = *v0;
  v3 = type metadata accessor for AttributionSource();
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = sub_1DC0D97C4();
  if ((result & 1) != 0)
  {
    v7 = *(_QWORD *)(*v0 + 184);
    v8 = (uint64_t *)((char *)v0 + v7);
    v9 = *(uint64_t *)((char *)v0 + v7 + 24);
    v10 = *(uint64_t *)((char *)v1 + v7 + 32);
    __swift_project_boxed_opaque_existential_1(v8, *(uint64_t *)((char *)v1 + v7 + 24));
    AttributionProviderType.source.getter(v9, v10);
    v11 = (*(uint64_t (**)(char *, _QWORD))(*(_QWORD *)(v2 + 88) + 120))(v5, *(_QWORD *)(v2 + 80));
    sub_1DC0926D8((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for AttributionSource);
    v14[1] = v11;
    v12 = MEMORY[0x1E0DB8020];
    sub_1DC0CC0A4(0, (unint64_t *)&qword_1EDB29E10, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB8020]);
    sub_1DC0D4244(&qword_1EDB29E08, (unint64_t *)&qword_1EDB29E10, (uint64_t (*)(uint64_t, _QWORD *))v12, MEMORY[0x1E0DB8030]);
    sub_1DC4049E4();
    v13 = MEMORY[0x1DF0CAD78](v1 + 2);
    if (v13)
    {
      sub_1DC31BE10(v13);
      swift_release();
      return swift_unknownObjectRelease();
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_1DC349F38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  uint64_t v13;
  _QWORD *v14;
  void *v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD aBlock[6];

  v6 = sub_1DC40724C();
  v19 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_1DC407270();
  v9 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0ACADC();
  v12 = (void *)sub_1DC409148();
  v13 = swift_allocObject();
  swift_beginAccess();
  swift_weakLoadStrong();
  swift_weakInit();
  swift_release();
  v14 = (_QWORD *)swift_allocObject();
  v14[2] = a3;
  v14[3] = a4;
  v14[4] = v13;
  aBlock[4] = sub_1DC35093C;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1DC081B88;
  aBlock[3] = &block_descriptor_95;
  v15 = _Block_copy(aBlock);
  swift_release();
  sub_1DC407264();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  sub_1DC080808(&qword_1EDB275A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  sub_1DC1130A0(0);
  sub_1DC080808((unint64_t *)&qword_1EDB3F720, (uint64_t (*)(uint64_t))sub_1DC1130A0, MEMORY[0x1E0DEAF38]);
  sub_1DC40964C();
  MEMORY[0x1DF0C99C8](0, v11, v8, v15);
  _Block_release(v15);

  (*(void (**)(char *, uint64_t))(v19 + 8))(v8, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v18);
}

uint64_t sub_1DC34A18C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t (*v28)(void);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t);
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD v47[2];
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  v49 = a2;
  v50 = a3;
  sub_1DC0D8B60(0);
  MEMORY[0x1E0C80A78](v3);
  v51 = (char *)v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1DC4010E4();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v52 = (char *)v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for StockListSelectionModel();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v47 - v12;
  sub_1DC0CC0A4(0, (unint64_t *)&qword_1EDB2AB40, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790]);
  v57 = *(_QWORD *)(v14 - 8);
  v58 = v14;
  MEMORY[0x1E0C80A78](v14);
  v48 = (char *)v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)v47 - v17;
  sub_1DC0ED4AC(0);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)v47 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0F8190();
  v23 = v22;
  v24 = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v22);
  v56 = (char *)v47 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v27 = result;
    v53 = v21;
    v54 = v24;
    v55 = v23;
    sub_1DC4049CC();
    v59 = v60;
    v28 = MEMORY[0x1E0DB80B8];
    sub_1DC0CC0A4(0, (unint64_t *)&unk_1EDB29EA0, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB80B8]);
    v29 = v6;
    v30 = v5;
    v32 = v31;
    v47[0] = sub_1DC0D4244((unint64_t *)&qword_1EDB29E90, (unint64_t *)&unk_1EDB29EA0, (uint64_t (*)(uint64_t, _QWORD *))v28, MEMORY[0x1E0DB80D0]);
    v47[1] = v32;
    sub_1DC405050();
    swift_release();
    sub_1DC402740();
    sub_1DC0990BC((uint64_t)v13, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for StockListSelectionModel);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v10, 2, v30))
    {
      v33 = v52;
      (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v52, v10, v30);
      sub_1DC40103C();
      (*(void (**)(char *, uint64_t))(v29 + 8))(v33, v30);
    }
    v35 = v54;
    v34 = v55;
    v36 = (uint64_t)v53;
    sub_1DC0926D8((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for StockListSelectionModel);
    v37 = v58;
    sub_1DC406C7C();
    swift_bridgeObjectRelease();
    v38 = *(void (**)(char *, uint64_t))(v57 + 8);
    v38(v18, v37);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v35 + 48))(v36, 1, v34) == 1)
    {
      swift_release();
      return sub_1DC0926D8(v36, (uint64_t (*)(_QWORD))sub_1DC0ED4AC);
    }
    else
    {
      v39 = v56;
      (*(void (**)(char *, uint64_t, uint64_t))(v35 + 32))(v56, v36, v34);
      v40 = MEMORY[0x1DF0CAD78](v27 + 16);
      if (v40)
      {
        v41 = v40;
        swift_retain();
        sub_1DC4049CC();
        v59 = v60;
        v42 = v48;
        sub_1DC405050();
        swift_release();
        v43 = (uint64_t)v51;
        v44 = v58;
        sub_1DC406D24();
        v38(v42, v44);
        v46 = type metadata accessor for StockListInteractor(0, v49, v50, v45);
        sub_1DC11F3A0(v43, v41, v46, (uint64_t)&off_1EA4657F0);
        swift_unknownObjectRelease();
        swift_release_n();
        sub_1DC0926D8(v43, (uint64_t (*)(_QWORD))sub_1DC0D8B60);
      }
      else
      {
        swift_release();
      }
      return (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v39, v34);
    }
  }
  return result;
}

uint64_t sub_1DC34A638(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v3 = sub_1DC40124C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for StocksActivity(0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (uint64_t *)((char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = *a1;
  v11 = a1[1];
  v12 = a1[2];
  v13 = a1[3];
  v20 = v12;
  v21 = v10;
  v14 = *v1;
  v22 = *(uint64_t *)((char *)v1 + *(_QWORD *)(*v1 + 168));
  __swift_project_boxed_opaque_existential_1((_QWORD *)(*(uint64_t *)((char *)v1 + *(_QWORD *)(v14 + 120)) + 32), *(_QWORD *)(*(uint64_t *)((char *)v1 + *(_QWORD *)(v14 + 120)) + 56));
  swift_bridgeObjectRetain();
  sub_1DC400A60();
  v15 = sub_1DC4011E0();
  v17 = v16;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  *v9 = v21;
  v9[1] = v11;
  v9[2] = v20;
  v9[3] = v13;
  v9[4] = v15;
  v9[5] = v17;
  swift_storeEnumTagMultiPayload();
  sub_1DC404F00();
  return sub_1DC0926D8((uint64_t)v9, type metadata accessor for StocksActivity);
}

uint64_t sub_1DC34A79C(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  char *v22;
  void (*v23)(char *, uint64_t, uint64_t, __n128);
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int EnumCaseMultiPayload;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t (*v38)(void);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  v48 = a4;
  v51 = a1;
  v52 = a2;
  v6 = *v4;
  v7 = type metadata accessor for StockListStockModel(0);
  MEMORY[0x1E0C80A78](v7);
  v41 = (uint64_t)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = type metadata accessor for StockListModel(0);
  MEMORY[0x1E0C80A78](v54);
  v53 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1DC404E34();
  v49 = *(_QWORD *)(v10 - 8);
  v50 = v10;
  MEMORY[0x1E0C80A78](v10);
  v47 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1DC404E1C();
  v44 = *(_QWORD *)(v12 - 8);
  v45 = v12;
  MEMORY[0x1E0C80A78](v12);
  v42 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0F8190();
  v55 = v14;
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = v17;
  v18 = sub_1DC400280();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(_QWORD *)(v19 + 64);
  v21 = MEMORY[0x1E0C80A78](v18);
  v22 = (char *)&v39 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v19 + 16);
  v23(v22, a3, v18, v21);
  v24 = (*(unsigned __int8 *)(v19 + 80) + 41) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v25 = swift_allocObject();
  v40 = *(_QWORD *)(v6 + 80);
  *(_QWORD *)(v25 + 16) = v40;
  v39 = *(_QWORD *)(v6 + 88);
  v26 = v46;
  *(_QWORD *)(v25 + 24) = v39;
  *(_QWORD *)(v25 + 32) = v26;
  *(_BYTE *)(v25 + 40) = v48;
  (*(void (**)(unint64_t, char *, uint64_t))(v19 + 32))(v25 + v24, v22, v18);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, v51, v55);
  sub_1DC2492CC();
  v28 = v42;
  v29 = &v42[*(int *)(v27 + 48)];
  ((void (*)(char *, uint64_t, uint64_t))v23)(v42, v52, v18);
  v52 = a3;
  ((void (*)(char *, uint64_t, uint64_t))v23)(v29, a3, v18);
  (*(void (**)(char *, _QWORD, uint64_t))(v44 + 104))(v28, *MEMORY[0x1E0DB88C8], v45);
  (*(void (**)(char *, _QWORD, uint64_t))(v49 + 104))(v47, *MEMORY[0x1E0DB8910], v50);
  v30 = swift_allocObject();
  *(_QWORD *)(v30 + 16) = sub_1DC35034C;
  *(_QWORD *)(v30 + 24) = v25;
  sub_1DC0E65C4(0, &qword_1F0351A88, MEMORY[0x1E0DBA748]);
  swift_allocObject();
  swift_retain();
  swift_retain();
  v31 = sub_1DC405B9C();
  v32 = (uint64_t)v53;
  sub_1DC404354();
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    swift_release();
  }
  else
  {
    v35 = v41;
    sub_1DC092ED0(v32, v41, type metadata accessor for StockListStockModel);
    v36 = sub_1DC400268();
    v56 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v39 + 88))(v35, v36, v31, v40);
    v37 = swift_allocObject();
    *(_QWORD *)(v37 + 16) = sub_1DC35034C;
    *(_QWORD *)(v37 + 24) = v25;
    v38 = MEMORY[0x1E0DB8020];
    sub_1DC0CC0A4(0, (unint64_t *)&qword_1EDB29E10, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB8020]);
    sub_1DC0D4244(&qword_1EDB29E08, (unint64_t *)&qword_1EDB29E10, (uint64_t (*)(uint64_t, _QWORD *))v38, MEMORY[0x1E0DB8030]);
    swift_retain();
    sub_1DC4049E4();
    swift_release();
    swift_release();
    swift_release();
    sub_1DC0926D8(v35, type metadata accessor for StockListStockModel);
  }
  return swift_release();
}

uint64_t sub_1DC34AC44(uint64_t *a1, int a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD aBlock[6];

  v20 = a3;
  v21 = a2;
  v3 = *a1;
  v4 = sub_1DC40724C();
  v25 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1DC407270();
  v23 = *(_QWORD *)(v7 - 8);
  v24 = v7;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1DC400280();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0ACADC();
  v22 = sub_1DC409148();
  v14 = swift_allocObject();
  swift_weakInit();
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v20, v10);
  v15 = (*(unsigned __int8 *)(v11 + 80) + 41) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = *(_QWORD *)(v3 + 80);
  *(_QWORD *)(v16 + 24) = *(_QWORD *)(v3 + 88);
  *(_QWORD *)(v16 + 32) = v14;
  *(_BYTE *)(v16 + 40) = v21;
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v16 + v15, v13, v10);
  aBlock[4] = sub_1DC3503F8;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1DC081B88;
  aBlock[3] = &block_descriptor_77;
  v17 = _Block_copy(aBlock);
  swift_release();
  sub_1DC407264();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  sub_1DC080808(&qword_1EDB275A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  sub_1DC1130A0(0);
  sub_1DC080808((unint64_t *)&qword_1EDB3F720, (uint64_t (*)(uint64_t))sub_1DC1130A0, MEMORY[0x1E0DEAF38]);
  sub_1DC40964C();
  v18 = (void *)v22;
  MEMORY[0x1DF0C99C8](0, v9, v6, v17);
  _Block_release(v17);

  (*(void (**)(char *, uint64_t))(v25 + 8))(v6, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v9, v24);
}

uint64_t sub_1DC34AEEC(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_1DC0D8B60(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v13 = result;
    if ((a2 & 1) != 0)
    {
      v14 = MEMORY[0x1DF0CAD78](result + 16);
      if (v14)
      {
        v15 = v14;
        v16 = sub_1DC400280();
        v17 = *(_QWORD *)(v16 - 8);
        (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v11, a3, v16);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v11, 0, 1, v16);
        v19 = type metadata accessor for StockListInteractor(0, a4, a5, v18);
        swift_retain();
        sub_1DC11F3A0((uint64_t)v11, v15, v19, (uint64_t)&off_1EA4657F0);
        swift_unknownObjectRelease();
        swift_release();
        sub_1DC0926D8((uint64_t)v11, (uint64_t (*)(_QWORD))sub_1DC0D8B60);
      }
    }
    if (MEMORY[0x1DF0CAD78](v13 + 16))
    {
      v20 = sub_1DC400280();
      v21 = *(_QWORD *)(v20 - 8);
      (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v11, a3, v20);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v11, 0, 1, v20);
      sub_1DC31B9D8((uint64_t)v11);
      swift_release();
      swift_unknownObjectRelease();
      return sub_1DC0926D8((uint64_t)v11, (uint64_t (*)(_QWORD))sub_1DC0D8B60);
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_1DC34B0BC(char a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t result;
  uint64_t (*v16)(uint64_t);
  char v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  void *v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t (*v39)(uint64_t);
  _QWORD aBlock[7];
  char v41;

  v38 = a3;
  v39 = a2;
  v5 = (_QWORD *)*v3;
  v6 = sub_1DC40724C();
  v36 = *(_QWORD *)(v6 - 8);
  v37 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1DC407270();
  v34 = *(_QWORD *)(v9 - 8);
  v35 = v9;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)((char *)v3 + v5[29]);
  v41 = 0;
  aBlock[0] = v12;
  sub_1DC112498(0, (unint64_t *)&qword_1EDB426B0, (uint64_t (*)(void))sub_1DC34FEFC, (uint64_t)&type metadata for StockListRefreshBlocker, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6CB8]);
  sub_1DC34FF40(&qword_1F0352300, MEMORY[0x1E0DB6CD0]);
  swift_retain();
  v13 = sub_1DC408C2C();
  if (v13 == 2)
  {
    MEMORY[0x1E0C80A78](v13);
    *(&v34 - 2) = (uint64_t)&v41;
    v14 = sub_1DC3BD514((uint64_t (*)(uint64_t *))sub_1DC3502E0, (uint64_t)(&v34 - 4));
    result = swift_release();
    if ((v14 & 1) == 0)
      goto LABEL_3;
  }
  else
  {
    v17 = v13;
    result = swift_release();
    if ((v17 & 1) == 0)
    {
LABEL_3:
      if ((a1 & 1) == 0)
      {
        v16 = v39;
        if (!v39)
          return result;
        return v16(result);
      }
      goto LABEL_8;
    }
  }
  if ((a1 & 1) == 0)
  {
    if (qword_1EDB273E0 != -1)
      swift_once();
    v22 = sub_1DC403F64();
    __swift_project_value_buffer(v22, (uint64_t)qword_1EDB5DDE8);
    v23 = sub_1DC403F4C();
    v24 = sub_1DC408FE0();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v25 = 0;
      _os_log_impl(&dword_1DC07D000, v23, v24, "Stock list coming out of editing state", v25, 2u);
      MEMORY[0x1DF0CAC88](v25, -1, -1);
    }

    sub_1DC34B580(0, 0, 0);
    sub_1DC0ACADC();
    v26 = (void *)sub_1DC409148();
    v27 = swift_allocObject();
    swift_weakInit();
    v28 = (_QWORD *)swift_allocObject();
    v28[2] = v5[10];
    v29 = v5[11];
    v31 = v38;
    v30 = (uint64_t)v39;
    v28[3] = v29;
    v28[4] = v30;
    v28[5] = v31;
    v28[6] = v27;
    aBlock[4] = sub_1DC350338;
    aBlock[5] = v28;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1DC081B88;
    aBlock[3] = &block_descriptor_40;
    v32 = _Block_copy(aBlock);
    sub_1DC113F04(v30);
    swift_release();
    sub_1DC407264();
    aBlock[0] = MEMORY[0x1E0DEE9D8];
    sub_1DC080808(&qword_1EDB275A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    sub_1DC1130A0(0);
    sub_1DC080808((unint64_t *)&qword_1EDB3F720, (uint64_t (*)(uint64_t))sub_1DC1130A0, MEMORY[0x1E0DEAF38]);
    v33 = v37;
    sub_1DC40964C();
    MEMORY[0x1DF0C99C8](0, v11, v8, v32);
    _Block_release(v32);

    (*(void (**)(char *, uint64_t))(v36 + 8))(v8, v33);
    return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v11, v35);
  }
LABEL_8:
  if (qword_1EDB273E0 != -1)
    swift_once();
  v18 = sub_1DC403F64();
  __swift_project_value_buffer(v18, (uint64_t)qword_1EDB5DDE8);
  v19 = sub_1DC403F4C();
  v20 = sub_1DC408FE0();
  if (os_log_type_enabled(v19, v20))
  {
    v21 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v21 = 0;
    _os_log_impl(&dword_1DC07D000, v19, v20, "Stock list entering editing state", v21, 2u);
    MEMORY[0x1DF0CAC88](v21, -1, -1);
  }

  result = sub_1DC34B914(0);
  v16 = v39;
  if (v39)
    return v16(result);
  return result;
}

uint64_t sub_1DC34B580(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;

  v4 = v3;
  if (qword_1EDB273E0 != -1)
    swift_once();
  v8 = sub_1DC403F64();
  __swift_project_value_buffer(v8, (uint64_t)qword_1EDB5DDE8);
  v9 = sub_1DC403F4C();
  v10 = sub_1DC408FE0();
  if (os_log_type_enabled(v9, v10))
  {
    v19 = a3;
    v11 = swift_slowAlloc();
    v12 = swift_slowAlloc();
    v20 = v12;
    *(_DWORD *)v11 = 136315394;
    if (a1)
    {
      if (a1 == 1)
        v13 = 0xD000000000000012;
      else
        v13 = 0x6E696C6C6F726373;
      if (a1 == 1)
        v14 = 0x80000001DC432EF0;
      else
        v14 = 0xE900000000000067;
    }
    else
    {
      v14 = 0xE700000000000000;
      v13 = 0x676E6974696465;
    }
    sub_1DC2A9C74(v13, v14, &v20);
    sub_1DC4095B0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 12) = 2080;
    v15 = sub_1DC408DE8();
    sub_1DC2A9C74(v15, v16, &v20);
    sub_1DC4095B0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1DC07D000, v9, v10, "Stock list refresh blocker will be removed: %s after delay: %s", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1DF0CAC88](v12, -1, -1);
    MEMORY[0x1DF0CAC88](v11, -1, -1);

    a3 = v19;
  }
  else
  {

  }
  LOBYTE(v20) = a1;
  v17 = swift_allocObject();
  *(_BYTE *)(v17 + 16) = a1;
  *(_QWORD *)(v17 + 24) = a2;
  *(_QWORD *)(v17 + 32) = a3;
  *(_QWORD *)(v17 + 40) = v4;
  swift_retain();
  sub_1DC113F04(a2);
  swift_retain();
  sub_1DC4042AC();
  swift_release();
  return swift_release();
}

uint64_t sub_1DC34B844(void (*a1)(__n128))
{
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  char *v5;
  uint64_t result;
  uint64_t v7;

  v2 = type metadata accessor for StockListSelectionModel();
  v3 = MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
    a1(v3);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1DC402740();
    sub_1DC09AFFC((uint64_t)v5);
    swift_release();
    return sub_1DC0926D8((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for StockListSelectionModel);
  }
  return result;
}

uint64_t sub_1DC34B914(char a1)
{
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v10;

  if (qword_1EDB273E0 != -1)
    swift_once();
  v2 = sub_1DC403F64();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EDB5DDE8);
  v3 = sub_1DC403F4C();
  v4 = sub_1DC408FE0();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    v6 = swift_slowAlloc();
    v10 = v6;
    *(_DWORD *)v5 = 136315138;
    if (a1)
    {
      if (a1 == 1)
        v7 = 0xD000000000000012;
      else
        v7 = 0x6E696C6C6F726373;
      if (a1 == 1)
        v8 = 0x80000001DC432EF0;
      else
        v8 = 0xE900000000000067;
    }
    else
    {
      v8 = 0xE700000000000000;
      v7 = 0x676E6974696465;
    }
    sub_1DC2A9C74(v7, v8, &v10);
    sub_1DC4095B0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1DC07D000, v3, v4, "Stock list refreshing will be blocked by: %s", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1DF0CAC88](v6, -1, -1);
    MEMORY[0x1DF0CAC88](v5, -1, -1);
  }

  LOBYTE(v10) = a1;
  swift_retain();
  sub_1DC4042A0();
  return swift_release();
}

uint64_t sub_1DC34BAFC(char *a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char v9;
  uint64_t v10;

  v9 = *a1;
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = v9;
  *(_BYTE *)(v10 + 17) = a2;
  *(_QWORD *)(v10 + 24) = a3;
  *(_QWORD *)(v10 + 32) = a4;
  *(_QWORD *)(v10 + 40) = a5;
  sub_1DC113F04(a3);
  swift_retain();
  sub_1DC402E3C();
  return swift_release();
}

void sub_1DC34BB88(unsigned __int8 a1, char a2, void (*a3)(void), uint64_t a4, uint64_t *a5)
{
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  _BOOL4 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  int v53;
  BOOL v54;
  void (*v55)(void);
  NSObject *v56;
  os_log_type_t v57;
  uint8_t *v58;
  const char *v59;
  _BOOL4 v60;
  char *v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  _QWORD *v70;
  uint64_t v71;
  void *v72;
  char *v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  uint64_t v82;
  uint64_t v83;
  void *v84;
  _QWORD *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  void *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t (*v93)(void);
  char *v94;
  uint64_t v95;
  uint64_t v96;
  void (*v97)(void);
  char *v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char v106;
  uint64_t v107;
  int v108;
  char v109;
  uint64_t v110;

  v10 = a1;
  v95 = *a5;
  v102 = sub_1DC4008EC();
  v11 = *(_QWORD *)(v102 - 8);
  MEMORY[0x1E0C80A78](v102);
  v99 = (char *)&v90 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v101 = sub_1DC400514();
  v103 = *(_QWORD *)(v101 - 8);
  v13 = *(_QWORD *)(v103 + 64);
  MEMORY[0x1E0C80A78](v101);
  v94 = (char *)&v90 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v98 = (char *)&v90 - v15;
  sub_1DC34FE90();
  v100 = v16;
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v90 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC1339CC(0);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v90 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v10 != 3)
  {
    v96 = a4;
    if (qword_1EDB273E0 != -1)
      swift_once();
    v29 = sub_1DC403F64();
    v30 = __swift_project_value_buffer(v29, (uint64_t)qword_1EDB5DDE8);
    swift_retain_n();
    v93 = (uint64_t (*)(void))v30;
    v31 = sub_1DC403F4C();
    v32 = sub_1DC408FE0();
    v33 = os_log_type_enabled(v31, v32);
    v97 = a3;
    v92 = v11;
    if (v33)
    {
      v34 = swift_slowAlloc();
      v35 = swift_slowAlloc();
      v107 = v35;
      *(_DWORD *)v34 = 136315394;
      v91 = v35;
      if (a1)
      {
        if (a1 == 1)
          v36 = 0xD000000000000012;
        else
          v36 = 0x6E696C6C6F726373;
        if (a1 == 1)
          v37 = 0x80000001DC432EF0;
        else
          v37 = 0xE900000000000067;
      }
      else
      {
        v36 = 0x676E6974696465;
        v37 = 0xE700000000000000;
      }
      v104 = sub_1DC2A9C74(v36, v37, &v107);
      sub_1DC4095B0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v34 + 12) = 2080;
      v104 = *(uint64_t *)((char *)a5 + *(_QWORD *)(*a5 + 232));
      sub_1DC112498(0, (unint64_t *)&qword_1EDB426B0, (uint64_t (*)(void))sub_1DC34FEFC, (uint64_t)&type metadata for StockListRefreshBlocker, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6CB8]);
      sub_1DC34FF40(&qword_1EDB42208, MEMORY[0x1E0DB6CE0]);
      v38 = sub_1DC4099B8();
      v104 = sub_1DC2A9C74(v38, v39, &v107);
      sub_1DC4095B0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1DC07D000, v31, v32, "Stock list is removing refresh blocker: %s.\nCurrent refresh blockers are: %s", (uint8_t *)v34, 0x16u);
      v40 = v91;
      swift_arrayDestroy();
      MEMORY[0x1DF0CAC88](v40, -1, -1);
      MEMORY[0x1DF0CAC88](v34, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    v110 = *(uint64_t *)((char *)a5 + *(_QWORD *)(*a5 + 232));
    sub_1DC112498(0, (unint64_t *)&qword_1EDB426B0, (uint64_t (*)(void))sub_1DC34FEFC, (uint64_t)&type metadata for StockListRefreshBlocker, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6CB8]);
    sub_1DC34FF40((unint64_t *)&unk_1EDB426A0, MEMORY[0x1E0DB6CD8]);
    swift_retain();
    sub_1DC408E90();
    sub_1DC408ED8();
    v41 = v96;
    if ((v109 & 1) == 0 && (v106 & 1) == 0)
    {
      v42 = v107;
      v43 = v104;
      v44 = v105;
      v45 = v108;
      swift_release();
      if (v45 == v44)
      {
        if (v42 == v43)
        {
          v46 = (uint64_t)a5 + *(_QWORD *)(*a5 + 248);
          swift_beginAccess();
          sub_1DC0990BC(v46, (uint64_t)v21, (uint64_t (*)(_QWORD))sub_1DC1339CC);
          v47 = (uint64_t)a5 + *(_QWORD *)(*a5 + 240);
          swift_beginAccess();
          v48 = (uint64_t)&v18[*(int *)(v100 + 48)];
          sub_1DC092ED0((uint64_t)v21, (uint64_t)v18, (uint64_t (*)(_QWORD))sub_1DC1339CC);
          sub_1DC0990BC(v47, v48, (uint64_t (*)(_QWORD))sub_1DC133A98);
          v49 = v92;
          v50 = v102;
          LODWORD(v47) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v92 + 48))(v18, 1, v102);
          v51 = v101;
          v52 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v103 + 48))(v48, 1, v101);
          v53 = v52;
          v54 = (_DWORD)v47 == 1;
          v55 = v97;
          if (!v54)
          {
            v61 = v99;
            v62 = (*(uint64_t (**)(char *, char *, uint64_t))(v49 + 32))(v99, v18, v50);
            if (v53 == 1)
            {
              MEMORY[0x1E0C80A78](v62);
              *(&v90 - 2) = (uint64_t)a5;
              *(&v90 - 1) = (uint64_t)v61;
              sub_1DC402E0C();
              v63 = (_QWORD *)swift_allocObject();
              v64 = (uint64_t)v97;
              v63[2] = a5;
              v63[3] = v64;
              v63[4] = v41;
              v65 = swift_allocObject();
              *(_QWORD *)(v65 + 16) = sub_1DC34FFCC;
              *(_QWORD *)(v65 + 24) = v63;
              swift_retain();
              sub_1DC113F04(v64);
              v66 = (void *)sub_1DC402C80();
              sub_1DC402D04();
              swift_release();
              swift_release();
              swift_release();

              (*(void (**)(char *, uint64_t))(v49 + 8))(v61, v50);
            }
            else
            {
              v73 = v61;
              v74 = v103;
              v93 = *(uint64_t (**)(void))(v103 + 32);
              v75 = v98;
              v76 = v93();
              MEMORY[0x1E0C80A78](v76);
              *(&v90 - 2) = (uint64_t)a5;
              *(&v90 - 1) = (uint64_t)v73;
              v100 = MEMORY[0x1E0DEE9C0] + 8;
              sub_1DC402E0C();
              v77 = v94;
              (*(void (**)(char *, char *, uint64_t))(v74 + 16))(v94, v75, v51);
              v78 = *(unsigned __int8 *)(v74 + 80);
              v79 = v51;
              v80 = (v78 + 40) & ~v78;
              v81 = (_QWORD *)swift_allocObject();
              v82 = v95;
              v81[2] = *(_QWORD *)(v95 + 80);
              v81[3] = *(_QWORD *)(v82 + 88);
              v81[4] = a5;
              ((void (*)(char *, char *, uint64_t))v93)((char *)v81 + v80, v77, v79);
              v83 = swift_allocObject();
              *(_QWORD *)(v83 + 16) = sub_1DC350008;
              *(_QWORD *)(v83 + 24) = v81;
              swift_retain();
              v84 = (void *)sub_1DC402C80();
              sub_1DC402CF8();
              swift_release();
              swift_release();

              v85 = (_QWORD *)swift_allocObject();
              v87 = v96;
              v86 = (uint64_t)v97;
              v85[2] = a5;
              v85[3] = v86;
              v85[4] = v87;
              v88 = swift_allocObject();
              *(_QWORD *)(v88 + 16) = sub_1DC35003C;
              *(_QWORD *)(v88 + 24) = v85;
              swift_retain();
              sub_1DC113F04(v86);
              v89 = (void *)sub_1DC402C80();
              sub_1DC402D04();
              swift_release();
              swift_release();
              swift_release();

              (*(void (**)(char *, uint64_t))(v103 + 8))(v98, v79);
              (*(void (**)(char *, uint64_t))(v49 + 8))(v99, v50);
            }
            return;
          }
          if (v52 != 1)
          {
            v67 = v103;
            v68 = v98;
            v69 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v103 + 32))(v98, v48, v51);
            MEMORY[0x1E0C80A78](v69);
            *(&v90 - 2) = (uint64_t)a5;
            *(&v90 - 1) = (uint64_t)v68;
            sub_1DC402E0C();
            v70 = (_QWORD *)swift_allocObject();
            v70[2] = a5;
            v70[3] = v55;
            v70[4] = v41;
            v71 = swift_allocObject();
            *(_QWORD *)(v71 + 16) = sub_1DC351050;
            *(_QWORD *)(v71 + 24) = v70;
            swift_retain();
            sub_1DC113F04((uint64_t)v55);
            v72 = (void *)sub_1DC402C80();
            sub_1DC402D04();
            swift_release();
            swift_release();
            swift_release();

            (*(void (**)(char *, uint64_t))(v67 + 8))(v68, v51);
            return;
          }
          v56 = sub_1DC403F4C();
          v57 = sub_1DC408FE0();
          if (!os_log_type_enabled(v56, v57))
            goto LABEL_42;
          v58 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v58 = 0;
          v59 = "No update data to refresh after removal of all refreshBlockers";
        }
        else
        {
          v56 = sub_1DC403F4C();
          v57 = sub_1DC408FE0();
          v60 = os_log_type_enabled(v56, v57);
          v55 = v97;
          if (!v60)
            goto LABEL_42;
          v58 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v58 = 0;
          v59 = "All refreshBlockers are not removed";
        }
        _os_log_impl(&dword_1DC07D000, v56, v57, v59, v58, 2u);
        MEMORY[0x1DF0CAC88](v58, -1, -1);
LABEL_42:

        if (v55)
          v55();
        return;
      }
      __break(1u);
    }
    __break(1u);
    return;
  }
  if (qword_1EDB273E0 != -1)
    swift_once();
  v22 = sub_1DC403F64();
  __swift_project_value_buffer(v22, (uint64_t)qword_1EDB5DDE8);
  v23 = sub_1DC403F4C();
  v24 = sub_1DC408FE0();
  if (os_log_type_enabled(v23, v24))
  {
    v25 = (uint8_t *)swift_slowAlloc();
    v26 = swift_slowAlloc();
    v107 = v26;
    *(_DWORD *)v25 = 136315138;
    if (a2)
    {
      if (a2 == 1)
        v27 = 0xD000000000000012;
      else
        v27 = 0x6E696C6C6F726373;
      if (a2 == 1)
        v28 = 0x80000001DC432EF0;
      else
        v28 = 0xE900000000000067;
    }
    else
    {
      v27 = 0x676E6974696465;
      v28 = 0xE700000000000000;
    }
    v104 = sub_1DC2A9C74(v27, v28, &v107);
    sub_1DC4095B0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1DC07D000, v23, v24, "Attempted to remove refresh blocker %s, but it was already removed", v25, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1DF0CAC88](v26, -1, -1);
    MEMORY[0x1DF0CAC88](v25, -1, -1);

    if (a3)
      goto LABEL_27;
  }
  else
  {

    if (a3)
LABEL_27:
      a3();
  }
}

uint64_t sub_1DC34C75C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char v12;
  void (*v13)(char *, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;

  v3 = *v1;
  v4 = sub_1DC4044BC();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB7380];
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v21 - v10;
  sub_1DC4049CC();
  sub_1DC404A14();
  swift_release();
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0DB7378], v4);
  sub_1DC080808(&qword_1EDB27550, v5, MEMORY[0x1E0DB7388]);
  v12 = sub_1DC4089F8();
  v13 = *(void (**)(char *, uint64_t))(v6 + 8);
  v13(v8, v4);
  v13(v11, v4);
  if ((v12 & 1) != 0)
  {
    sub_1DC083594(0, (unint64_t *)&qword_1EDB29708, MEMORY[0x1E0DEE9C0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    return sub_1DC402D58();
  }
  else
  {
    v16 = *(_QWORD *)(v3 + 80);
    v15 = *(_QWORD *)(v3 + 88);
    v17 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15 + 72))(a1, v16, v15);
    v18 = swift_allocObject();
    v19 = swift_weakInit();
    MEMORY[0x1E0C80A78](v19);
    *(&v21 - 6) = v16;
    *(&v21 - 5) = v15;
    *(&v21 - 4) = v18;
    *(&v21 - 3) = v17;
    *(&v21 - 2) = a1;
    sub_1DC083594(0, (unint64_t *)&qword_1EDB29708, MEMORY[0x1E0DEE9C0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    v14 = sub_1DC402DA0();
    swift_release();
    swift_release();
  }
  return v14;
}

uint64_t sub_1DC34C9B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v14;

  sub_1DC1339CC(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1DC4008EC();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  v8 = a1 + *(_QWORD *)(*(_QWORD *)a1 + 248);
  swift_beginAccess();
  sub_1DC3501E4((uint64_t)v6, v8, (uint64_t (*)(_QWORD))sub_1DC1339CC);
  swift_endAccess();
  if (qword_1EDB273E0 != -1)
    swift_once();
  v9 = sub_1DC403F64();
  __swift_project_value_buffer(v9, (uint64_t)qword_1EDB5DDE8);
  v10 = sub_1DC403F4C();
  v11 = sub_1DC408FE0();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v12 = 0;
    _os_log_impl(&dword_1DC07D000, v10, v11, "Stock list is being refreshed with queued price data", v12, 2u);
    MEMORY[0x1DF0CAC88](v12, -1, -1);
  }

  return sub_1DC34C75C(a2);
}

uint64_t sub_1DC34CB38(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;

  sub_1DC133A98(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1DC400514();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  v8 = a1 + *(_QWORD *)(*(_QWORD *)a1 + 240);
  swift_beginAccess();
  sub_1DC3501E4((uint64_t)v6, v8, (uint64_t (*)(_QWORD))sub_1DC133A98);
  result = swift_endAccess();
  if (a2)
    return a2(result);
  return result;
}

uint64_t sub_1DC34CC14(uint64_t a1, uint64_t a2, const char *a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;

  if (qword_1EDB273E0 != -1)
    swift_once();
  v7 = sub_1DC403F64();
  __swift_project_value_buffer(v7, (uint64_t)qword_1EDB5DDE8);
  v8 = sub_1DC403F4C();
  v9 = sub_1DC408FE0();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v10 = 0;
    _os_log_impl(&dword_1DC07D000, v8, v9, a3, v10, 2u);
    MEMORY[0x1DF0CAC88](v10, -1, -1);
  }

  return a4(a2);
}

uint64_t sub_1DC34CD10(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;

  sub_1DC1339CC(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1DC4008EC();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  v8 = a1 + *(_QWORD *)(*(_QWORD *)a1 + 248);
  swift_beginAccess();
  sub_1DC3501E4((uint64_t)v6, v8, (uint64_t (*)(_QWORD))sub_1DC1339CC);
  result = swift_endAccess();
  if (a2)
    return a2(result);
  return result;
}

uint64_t sub_1DC34CDEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  char *v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v1 = sub_1DC40124C();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = MEMORY[0x1E0C80A78](v1);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x1DF0CAD78](v0 + 16, v3);
  if (result)
  {
    v7 = result;
    v8 = *(_QWORD *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 120));
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v8 + 32), *(_QWORD *)(v8 + 56));
    sub_1DC400A60();
    v9 = (void *)MEMORY[0x1DF0CAD78](v7 + 16);
    if (v9)
    {
      sub_1DC34F3B4((uint64_t)v5, v9);
      swift_unknownObjectRelease();
    }
    swift_unknownObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  }
  return result;
}

uint64_t sub_1DC34CED8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = a2;
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    v13 = swift_allocObject();
    swift_weakInit();
    v14 = (_QWORD *)swift_allocObject();
    v14[2] = a7;
    v14[3] = a8;
    v14[4] = v13;
    v14[5] = sub_1DC1DB830;
    v14[6] = v12;
    sub_1DC0D4244(&qword_1EDB29E08, (unint64_t *)&qword_1EDB29E10, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB8020], MEMORY[0x1E0DB8030]);
    swift_retain();
    swift_retain();
    sub_1DC4049E4();
    swift_release();
    swift_release();
  }
  else
  {
    swift_retain();
  }
  return swift_release();
}

uint64_t sub_1DC34D04C(uint64_t a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v9 = sub_1DC40124C();
  v30 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC1339CC(0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC1339B0(0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v19 = result;
    v20 = MEMORY[0x1DF0CAD78](result + 16);
    if (v20)
    {
      v21 = v20;
      v22 = sub_1DC400970();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v17, 1, 1, v22);
      v23 = *(_QWORD *)(v19 + *(_QWORD *)(*(_QWORD *)v19 + 120));
      v27 = v9;
      v29 = a6;
      __swift_project_boxed_opaque_existential_1((_QWORD *)(v23 + 32), *(_QWORD *)(v23 + 56));
      v28 = a5;
      swift_retain();
      sub_1DC400A60();
      sub_1DC4011EC();
      (*(void (**)(char *, uint64_t))(v30 + 8))(v11, v27);
      v24 = sub_1DC4008EC();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v14, 0, 1, v24);
      type metadata accessor for StockListInteractor(0, v28, v29, v25);
      sub_1DC11F098((uint64_t)v17, (uint64_t)v14, v21);
      swift_unknownObjectRelease();
      swift_release();
      sub_1DC0926D8((uint64_t)v14, (uint64_t (*)(_QWORD))sub_1DC1339CC);
      v20 = sub_1DC0926D8((uint64_t)v17, (uint64_t (*)(_QWORD))sub_1DC1339B0);
    }
    a3(v20);
    return swift_release();
  }
  return result;
}

uint64_t sub_1DC34D29C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t (*v22)(char *, uint64_t, uint64_t);
  int v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  int v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  uint64_t result;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unsigned __int8 v45;

  v44 = a3;
  v38 = a1;
  v40 = a4;
  v42 = *a4;
  sub_1DC0FED34(0);
  MEMORY[0x1E0C80A78](v5);
  v39 = (uint64_t)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for StockListToolbarModel();
  MEMORY[0x1E0C80A78](v7);
  v41 = (uint64_t)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1DC4010E4();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for StockListSelectionModel();
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v38 - v17;
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v38 - v20;
  v43 = a2;
  sub_1DC402740();
  sub_1DC0990BC((uint64_t)v21, (uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for StockListSelectionModel);
  v22 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v23 = v22(v18, 2, v9);
  if (v23)
  {
    if (v23 == 1)
    {
      v24 = 0xE500000000000000;
      v25 = 0x7961646F74;
    }
    else
    {
      v24 = 0xE400000000000000;
      v25 = 1701736302;
    }
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v18, v9);
    v25 = sub_1DC40103C();
    v24 = v26;
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  sub_1DC0926D8((uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for StockListSelectionModel);
  v27 = v44;
  sub_1DC0990BC(v44, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for StockListSelectionModel);
  v28 = v22(v15, 2, v9);
  if (!v28)
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v15, v9);
    v30 = sub_1DC40103C();
    v29 = v31;
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    goto LABEL_12;
  }
  if (v28 != 1)
  {
    v29 = 0xE400000000000000;
    v30 = 1701736302;
LABEL_12:
    if (v25 != v30)
      goto LABEL_15;
    goto LABEL_13;
  }
  v29 = 0xE500000000000000;
  if (v25 != 0x7961646F74)
  {
LABEL_15:
    v32 = sub_1DC4099E8();
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    if ((v32 & 1) == 0)
      return result;
    goto LABEL_16;
  }
LABEL_13:
  if (v24 != v29)
    goto LABEL_15;
  swift_bridgeObjectRelease_n();
LABEL_16:
  v34 = v39;
  sub_1DC0990BC(v38, v39, (uint64_t (*)(_QWORD))sub_1DC0FED34);
  if (qword_1EDB290D0 != -1)
    swift_once();
  v35 = v42;
  MEMORY[0x1DF0CAB8C](&unk_1DC429B28, v42);
  sub_1DC4012D0();
  v36 = v41;
  sub_1DC3D3528(v34, v45, v41);
  v37 = MEMORY[0x1DF0CAD78](v43 + 16);
  if (v37)
  {
    sub_1DC11F08C(v36, v37, v35, (uint64_t)&off_1EA4657F0);
    swift_unknownObjectRelease();
  }
  sub_1DC09AFFC(v27);
  return sub_1DC0926D8(v36, (uint64_t (*)(_QWORD))type metadata accessor for StockListToolbarModel);
}

uint64_t sub_1DC34D680(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t Strong;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t (**v23)();
  uint64_t (*v24)(void);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v29 = a8;
  v13 = sub_1DC400514();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(_QWORD *)(v14 + 64);
  MEMORY[0x1E0C80A78](v13);
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = a1;
  *(_QWORD *)(v16 + 24) = a2;
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v18 = *(_QWORD *)(Strong + 32);
    v27 = a9;
    v28 = v18;
    v30 = a6;
    v19 = swift_allocObject();
    swift_weakInit();
    (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))((char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), a7, v13);
    v20 = (*(unsigned __int8 *)(v14 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
    v21 = (char *)swift_allocObject();
    v22 = v27;
    *((_QWORD *)v21 + 2) = v29;
    *((_QWORD *)v21 + 3) = v22;
    *((_QWORD *)v21 + 4) = v19;
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(&v21[v20], (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), v13);
    v23 = (uint64_t (**)())&v21[(v15 + v20 + 7) & 0xFFFFFFFFFFFFFFF8];
    *v23 = sub_1DC080654;
    v23[1] = (uint64_t (*)())v16;
    v24 = MEMORY[0x1E0DB8020];
    sub_1DC0CC0A4(0, (unint64_t *)&qword_1EDB29E10, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB8020]);
    sub_1DC0D4244(&qword_1EDB29E08, (unint64_t *)&qword_1EDB29E10, (uint64_t (*)(uint64_t, _QWORD *))v24, MEMORY[0x1E0DB8030]);
    swift_retain();
    swift_retain();
    sub_1DC4049E4();
    swift_release();
    swift_release();
  }
  else
  {
    swift_retain();
  }
  return swift_release();
}

uint64_t sub_1DC34D89C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  void (*v32)(char *, uint64_t, uint64_t, uint64_t);
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  void (*v47)(uint64_t);
  unsigned __int8 v48;

  v42 = a6;
  v43 = a7;
  v46 = a5;
  v47 = a4;
  v7 = type metadata accessor for StockListToolbarModel();
  MEMORY[0x1E0C80A78](v7);
  v44 = (uint64_t)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0FED34(0);
  MEMORY[0x1E0C80A78](v9);
  v41 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v40 - v12;
  v14 = sub_1DC401030();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v45 = (char *)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1DC4010E4();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v40 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for StockListSelectionModel();
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v40 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v25 = result;
    sub_1DC402740();
    v26 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v18 + 48))(v23, 2, v17);
    if (!(_DWORD)v26)
    {
      (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v20, v23, v17);
      v27 = sub_1DC400508();
      v28 = sub_1DC4010B4();
      if (*(_QWORD *)(v27 + 16) && (v30 = sub_1DC0ED368(v28, v29), (v31 & 1) != 0))
      {
        (*(void (**)(char *, unint64_t, uint64_t))(v15 + 16))(v13, *(_QWORD *)(v27 + 56) + *(_QWORD *)(v15 + 72) * v30, v14);
        v32 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
        v32(v13, 0, 1, v14);
      }
      else
      {
        v32 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
        v32(v13, 1, 1, v14);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
      {
        (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
        v26 = sub_1DC0926D8((uint64_t)v13, (uint64_t (*)(_QWORD))sub_1DC0FED34);
      }
      else
      {
        v33 = v45;
        (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v45, v13, v14);
        v34 = (uint64_t)v41;
        (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v41, v33, v14);
        v32((char *)v34, 0, 1, v14);
        if (qword_1EDB290D0 != -1)
          swift_once();
        v36 = type metadata accessor for StockListInteractor(0, v42, v43, v35);
        MEMORY[0x1DF0CAB8C](&unk_1DC429B28, v36);
        sub_1DC4012D0();
        v37 = v44;
        sub_1DC3D3528(v34, v48, v44);
        v38 = MEMORY[0x1DF0CAD78](v25 + 16);
        if (v38)
        {
          v39 = v38;
          swift_retain();
          sub_1DC11F08C(v37, v39, v36, (uint64_t)&off_1EA4657F0);
          swift_unknownObjectRelease();
          swift_release();
        }
        sub_1DC0926D8(v37, (uint64_t (*)(_QWORD))type metadata accessor for StockListToolbarModel);
        (*(void (**)(char *, uint64_t))(v15 + 8))(v45, v14);
        v26 = (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v20, v17);
      }
    }
    v47(v26);
    return swift_release();
  }
  return result;
}

uint64_t sub_1DC34DC8C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;

  v2 = *v1;
  v21 = a1;
  v22 = v2;
  v23 = sub_1DC4004C0();
  v3 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  v19 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = v4;
  v5 = sub_1DC402AE8();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EDB29178 != -1)
    swift_once();
  v25 = 2;
  v9 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4250];
  sub_1DC089DA4(0, &qword_1EDB3FE88, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4250], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1DC40C740;
  swift_retain();
  sub_1DC402ADC();
  sub_1DC402AD0();
  v24 = v10;
  sub_1DC080808(&qword_1EDB274D0, v9, MEMORY[0x1E0DB4258]);
  sub_1DC350F38(0);
  sub_1DC080808((unint64_t *)&qword_1EDB3F6D0, (uint64_t (*)(uint64_t))sub_1DC350F38, MEMORY[0x1E0DEAF38]);
  sub_1DC40964C();
  v11 = swift_allocObject();
  swift_weakInit();
  v12 = v19;
  v13 = v23;
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v19, v21, v23);
  v14 = (*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v15 = (char *)swift_allocObject();
  v16 = v22;
  *((_QWORD *)v15 + 2) = *(_QWORD *)(v22 + 80);
  *((_QWORD *)v15 + 3) = *(_QWORD *)(v16 + 88);
  *((_QWORD *)v15 + 4) = v11;
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(&v15[v14], v12, v13);
  swift_retain();
  sub_1DC40256C();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return swift_release();
}

uint64_t sub_1DC34DF34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t (*v8)(void);

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(a4 + 64))(a2, a3, a4);
    v8 = MEMORY[0x1E0DB8020];
    sub_1DC0CC0A4(0, (unint64_t *)&qword_1EDB29E10, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB8020]);
    sub_1DC0D4244(&qword_1EDB29E08, (unint64_t *)&qword_1EDB29E10, (uint64_t (*)(uint64_t, _QWORD *))v8, MEMORY[0x1E0DB8030]);
    swift_retain();
    sub_1DC4049E4();
    swift_release();
    return swift_release_n();
  }
  return result;
}

uint64_t sub_1DC34E040(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  int v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;

  v4 = type metadata accessor for StockListSelectionModel();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1DC405578();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v8 + 16))(v11, a1, v7, v9);
  LODWORD(a1) = (*(uint64_t (**)(char *, uint64_t))(v8 + 88))(v11, v7);
  v12 = *MEMORY[0x1E0DB9A50];
  result = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  if ((_DWORD)a1 == v12)
  {
    if ((sub_1DC0D97C4() & 1) != 0)
    {
      return sub_1DC349DC0();
    }
    else
    {
      v14 = MEMORY[0x1DF0CAD78](a2 + 16);
      if (v14)
      {
        sub_1DC11EF98(v14);
        swift_unknownObjectRelease();
      }
      sub_1DC402740();
      sub_1DC085A98((uint64_t)v6);
      return sub_1DC0926D8((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for StockListSelectionModel);
    }
  }
  return result;
}

uint64_t sub_1DC34E1A8()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(void);
  _QWORD v12[2];

  v1 = (_QWORD *)*v0;
  v2 = sub_1DC40124C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = v1[15];
  v12[0] = (char *)v0 + v1[14];
  v7 = *(_QWORD *)((char *)v0 + v6);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v7 + 32), *(_QWORD *)(v7 + 56));
  sub_1DC400A60();
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v7 + 32), *(_QWORD *)(v7 + 56));
  v8 = sub_1DC400ACC();
  v9 = (*(uint64_t (**)(char *, uint64_t, _QWORD))(v1[11] + 112))(v5, v8, v1[10]);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v12[1] = v9;
  v10 = MEMORY[0x1E0DB8020];
  sub_1DC0CC0A4(0, (unint64_t *)&qword_1EDB29E10, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB8020]);
  sub_1DC0D4244(&qword_1EDB29E08, (unint64_t *)&qword_1EDB29E10, (uint64_t (*)(uint64_t, _QWORD *))v10, MEMORY[0x1E0DB8030]);
  sub_1DC4049E4();
  return swift_release();
}

void sub_1DC34E320()
{
  id v0;

  sub_1DC400514();
  sub_1DC402E0C();
  v0 = (id)sub_1DC402C80();
  sub_1DC402D10();
  swift_release();
  swift_release();

}

uint64_t sub_1DC34E3AC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int EnumCaseMultiPayload;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t (*v37)(_QWORD);
  uint64_t v38;
  int v39;
  void (*v40)(char *, char *, uint64_t);
  char *v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD v47[2];
  _QWORD *v48;
  char *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  void (*v53)(char *, unint64_t, uint64_t);
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unsigned __int8 v63[16];

  v47[1] = *v0;
  v1 = type metadata accessor for StockListStockModel(0);
  MEMORY[0x1E0C80A78](v1);
  v50 = (uint64_t)v47 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = type metadata accessor for StockListModel(0);
  MEMORY[0x1E0C80A78](v56);
  v52 = (char *)v47 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v61 = (uint64_t)v47 - v5;
  sub_1DC10B384(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC104530();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0F8190();
  v60 = v12;
  v57 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v59 = (char *)v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1DC4010E4();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v55 = (char *)v47 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v51 = (char *)v47 - v18;
  MEMORY[0x1E0C80A78](v19);
  v49 = (char *)v47 - v20;
  sub_1DC0CC0A4(0, (unint64_t *)&qword_1EDB2AB40, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790]);
  v22 = v21;
  v23 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  v25 = (char *)v47 - v24;
  v48 = v0;
  sub_1DC4049CC();
  v62 = *(_QWORD *)v63;
  sub_1DC0CC0A4(0, (unint64_t *)&unk_1EDB29EA0, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB80B8]);
  sub_1DC0D4244((unint64_t *)&qword_1EDB29E90, (unint64_t *)&unk_1EDB29EA0, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB80B8], MEMORY[0x1E0DB80D0]);
  sub_1DC405050();
  swift_release();
  v26 = sub_1DC344C08((uint64_t)v25);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v25, v22);
  v27 = *(_QWORD *)(v26 + 16);
  if (v27)
  {
    v28 = v26 + ((*(unsigned __int8 *)(v57 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80));
    v29 = *(_QWORD *)(v57 + 72);
    v53 = *(void (**)(char *, unint64_t, uint64_t))(v57 + 16);
    v54 = v29;
    v47[0] = v26;
    swift_bridgeObjectRetain();
    v30 = MEMORY[0x1E0DEE9D8];
    v31 = (uint64_t)v52;
    do
    {
      v58 = v30;
      v53(v59, v28, v60);
      v32 = v61;
      sub_1DC404354();
      sub_1DC0990BC(v32, v31, type metadata accessor for StockListModel);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload)
      {
        if (EnumCaseMultiPayload == 1)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        v34 = type metadata accessor for StockViewModel();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v8, 1, 1, v34);
      }
      else
      {
        v35 = v50;
        sub_1DC092ED0(v31, v50, type metadata accessor for StockListStockModel);
        sub_1DC0990BC(v35, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for StockViewModel);
        sub_1DC0926D8(v35, type metadata accessor for StockListStockModel);
        v34 = type metadata accessor for StockViewModel();
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v8, 0, 1, v34);
      }
      sub_1DC0926D8(v61, type metadata accessor for StockListModel);
      type metadata accessor for StockViewModel();
      v36 = 1;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 48))(v8, 1, v34) == 1)
      {
        v37 = (uint64_t (*)(_QWORD))sub_1DC10B384;
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v11, v8, v14);
        v36 = 0;
        v37 = (uint64_t (*)(_QWORD))type metadata accessor for StockViewModel;
      }
      v38 = v57;
      sub_1DC0926D8((uint64_t)v8, v37);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v11, v36, 1, v14);
      (*(void (**)(char *, uint64_t))(v38 + 8))(v59, v60);
      v39 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48))(v11, 1, v14);
      v30 = v58;
      if (v39 == 1)
      {
        sub_1DC0926D8((uint64_t)v11, (uint64_t (*)(_QWORD))sub_1DC104530);
      }
      else
      {
        v40 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
        v41 = v51;
        v40(v51, v11, v14);
        v40(v55, v41, v14);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v30 = sub_1DC0BA930(0, *(_QWORD *)(v30 + 16) + 1, 1, v30);
        v43 = *(_QWORD *)(v30 + 16);
        v42 = *(_QWORD *)(v30 + 24);
        if (v43 >= v42 >> 1)
          v30 = sub_1DC0BA930(v42 > 1, v43 + 1, 1, v30);
        *(_QWORD *)(v30 + 16) = v43 + 1;
        v40((char *)(v30+ ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80))+ *(_QWORD *)(v15 + 72) * v43), v55, v14);
        v31 = (uint64_t)v52;
      }
      v28 += v54;
      --v27;
    }
    while (v27);
    swift_bridgeObjectRelease_n();
  }
  else
  {
    swift_bridgeObjectRelease();
    v30 = MEMORY[0x1E0DEE9D8];
  }
  v44 = (uint64_t)v49;
  if (!*(_QWORD *)(v30 + 16))
    return swift_bridgeObjectRelease();
  (*(void (**)(char *, unint64_t, uint64_t))(v15 + 16))(v49, v30 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80)), v14);
  v45 = MEMORY[0x1DF0CAD78](v48 + 2);
  if (v45)
  {
    v63[0] = 0;
    sub_1DC31BBB8(v44, v30, v63, v45);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 8))(v44, v14);
}

uint64_t *sub_1DC34EA24()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1DC148A20((uint64_t)(v0 + 2));
  swift_release();
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v1 + 80) - 8) + 8))((uint64_t)v0 + *(_QWORD *)(*v0 + 112));
  swift_unknownObjectRelease();
  swift_release();
  swift_unknownObjectRelease();
  swift_release();

  swift_unknownObjectRelease();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v0 + *(_QWORD *)(*v0 + 176));
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v0 + *(_QWORD *)(*v0 + 184));
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v0 + *(_QWORD *)(*v0 + 208));
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v0 + *(_QWORD *)(*v0 + 216));
  swift_bridgeObjectRelease();
  swift_release();
  sub_1DC0926D8((uint64_t)v0 + *(_QWORD *)(*v0 + 240), (uint64_t (*)(_QWORD))sub_1DC133A98);
  sub_1DC0926D8((uint64_t)v0 + *(_QWORD *)(*v0 + 248), (uint64_t (*)(_QWORD))sub_1DC1339CC);
  return v0;
}

uint64_t sub_1DC34EB90()
{
  sub_1DC34EA24();
  return swift_deallocClassInstance();
}

uint64_t storeEnumTagSinglePayload for StockListRefreshBlocker(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1DC34EC00 + 4 * byte_1DC429895[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1DC34EC34 + 4 * byte_1DC429890[v4]))();
}

uint64_t sub_1DC34EC34(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC34EC3C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC34EC44);
  return result;
}

uint64_t sub_1DC34EC50(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC34EC58);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1DC34EC5C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC34EC64(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StockListRefreshBlocker()
{
  return &type metadata for StockListRefreshBlocker;
}

uint64_t sub_1DC34ECBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  _QWORD *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v39 = a3;
  v5 = v3 + 2;
  v36 = *v3;
  sub_1DC176BD8(0);
  MEMORY[0x1E0C80A78](v6);
  v40 = (uint64_t)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC1339CC(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1DC40124C();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v35 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v33 - v15;
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v33 - v18;
  sub_1DC1339B0(0);
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v33 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC09AA58();
  v23 = MEMORY[0x1DF0CAD78](v3 + 2);
  if (v23)
  {
    v24 = v23;
    v34 = v3 + 2;
    v37 = v12;
    v38 = v11;
    __swift_project_boxed_opaque_existential_1((_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 56));
    sub_1DC400A60();
    sub_1DC401240();
    v25 = *(void (**)(char *, uint64_t))(v37 + 8);
    v25(v19, v38);
    v26 = sub_1DC400970();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v22, 0, 1, v26);
    v5 = v34;
    __swift_project_boxed_opaque_existential_1((_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 56));
    v11 = v38;
    sub_1DC400A60();
    sub_1DC4011EC();
    v25(v16, v11);
    v12 = v37;
    v27 = sub_1DC4008EC();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v10, 0, 1, v27);
    sub_1DC11F098((uint64_t)v22, (uint64_t)v10, v24);
    swift_unknownObjectRelease();
    sub_1DC0926D8((uint64_t)v10, (uint64_t (*)(_QWORD))sub_1DC1339CC);
    sub_1DC0926D8((uint64_t)v22, (uint64_t (*)(_QWORD))sub_1DC1339B0);
  }
  v28 = v40;
  sub_1DC0990BC(v39, v40, (uint64_t (*)(_QWORD))sub_1DC176BD8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v28, 1, v11) == 1)
    return sub_1DC0926D8(v28, (uint64_t (*)(_QWORD))sub_1DC176BD8);
  v30 = (uint64_t)v35;
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 32))(v35, v28, v11);
  v31 = MEMORY[0x1DF0CAD78](v5);
  if (v31)
  {
    v32 = (void *)MEMORY[0x1DF0CAD78](v31 + 16);
    if (v32)
    {
      sub_1DC34F3B4(v30, v32);
      swift_unknownObjectRelease();
    }
    swift_unknownObjectRelease();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8))(v30, v11);
}

uint64_t sub_1DC34F004(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DC34F5D8(a3);
}

uint64_t sub_1DC34F010(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DC34F87C(a3);
}

uint64_t sub_1DC34F018()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t ObjectType;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 120)) + 120);
  ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(v1 + 24))(ObjectType, v1);
  return swift_release();
}

uint64_t sub_1DC34F058(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1DC158A30(*a1, *a2);
}

uint64_t sub_1DC34F064()
{
  sub_1DC409AC0();
  sub_1DC408AF4();
  swift_bridgeObjectRelease();
  return sub_1DC409AF0();
}

uint64_t sub_1DC34F10C()
{
  sub_1DC408AF4();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DC34F190()
{
  sub_1DC409AC0();
  sub_1DC408AF4();
  swift_bridgeObjectRelease();
  return sub_1DC409AF0();
}

uint64_t sub_1DC34F234@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1DC350FB4();
  *a1 = result;
  return result;
}

void sub_1DC34F260(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE700000000000000;
  v4 = 0x80000001DC432EF0;
  v5 = 0xD000000000000012;
  if (v2 != 1)
  {
    v5 = 0x6E696C6C6F726373;
    v4 = 0xE900000000000067;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x676E6974696465;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1DC34F2C8()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0xD000000000000012;
  if (*v0 != 1)
    v1 = 0x6E696C6C6F726373;
  if (*v0)
    return v1;
  else
    return 0x676E6974696465;
}

unint64_t sub_1DC34F330()
{
  unint64_t result;

  result = qword_1EDB42718;
  if (!qword_1EDB42718)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC429A38, &type metadata for StockListRefreshBlocker);
    atomic_store(result, (unint64_t *)&qword_1EDB42718);
  }
  return result;
}

void sub_1DC34F374()
{
  JUMPOUT(0x1DF0CAB8CLL);
}

uint64_t sub_1DC34F384()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1DC34F3A8(uint64_t a1)
{
  uint64_t *v1;

  return sub_1DC345CBC(a1, v1[4], v1[2], v1[3]);
}

void sub_1DC34F3B4(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  void *v14;
  _QWORD v15[2];

  v15[0] = a1;
  v3 = sub_1DC3FF9A4();
  MEMORY[0x1E0C80A78](v3);
  v4 = sub_1DC40124C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1DC400574();
  v9 = objc_msgSend(a2, sel_view, MEMORY[0x1E0C80A78](v8).n128_f64[0]);
  if (v9)
  {
    v10 = v9;
    sub_1DC409328();

    v11 = objc_msgSend(a2, sel_view);
    if (v11)
    {
      v12 = v11;
      (*(void (**)(char *, _QWORD, uint64_t))(v5 + 16))(v7, v15[0], v4);
      sub_1DC400568();
      v15[1] = MEMORY[0x1E0DEE9D8];
      sub_1DC080808(&qword_1EDB42628, (uint64_t (*)(uint64_t))MEMORY[0x1E0C90498], MEMORY[0x1E0C904C0]);
      sub_1DC1B5058(0);
      sub_1DC080808(&qword_1EDB42790, (uint64_t (*)(uint64_t))sub_1DC1B5058, MEMORY[0x1E0DEAF38]);
      sub_1DC40964C();
      v13 = objc_allocWithZone((Class)sub_1DC403EC8());
      sub_1DC080808(&qword_1EDB42638, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAE508], MEMORY[0x1E0DAE4F0]);
      v14 = (void *)sub_1DC403EBC();
      sub_1DC409334();

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_1DC34F5D8(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  int v25;
  char v26;
  uint64_t result;
  uint64_t v28;
  _QWORD v29[2];

  v2 = v1;
  v29[1] = *v1;
  v4 = sub_1DC4004C0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC1339CC(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v29 - v12;
  sub_1DC1339B0(0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)v29 - v18;
  sub_1DC400490();
  v21 = v20;
  swift_bridgeObjectRelease();
  if (v21)
  {
    sub_1DC34E1A8();
    goto LABEL_9;
  }
  sub_1DC40049C();
  v22 = sub_1DC400970();
  v23 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 48))(v19, 1, v22);
  sub_1DC0926D8((uint64_t)v19, (uint64_t (*)(_QWORD))sub_1DC1339B0);
  if (v23 != 1)
  {
    sub_1DC34E320();
    goto LABEL_9;
  }
  sub_1DC4004A8();
  v24 = sub_1DC4008EC();
  v25 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 48))(v13, 1, v24);
  sub_1DC0926D8((uint64_t)v13, (uint64_t (*)(_QWORD))sub_1DC1339CC);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  if (v25 == 1)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  else
  {
    v26 = sub_1DC400484();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    if ((v26 & 1) == 0)
      goto LABEL_9;
  }
  sub_1DC34DC8C(a1);
LABEL_9:
  result = MEMORY[0x1DF0CAD78](v2 + 2);
  if (result)
  {
    v28 = result;
    sub_1DC40049C();
    sub_1DC4004A8();
    sub_1DC11F098((uint64_t)v16, (uint64_t)v10, v28);
    swift_unknownObjectRelease();
    sub_1DC0926D8((uint64_t)v10, (uint64_t (*)(_QWORD))sub_1DC1339CC);
    return sub_1DC0926D8((uint64_t)v16, (uint64_t (*)(_QWORD))sub_1DC1339B0);
  }
  return result;
}

uint64_t sub_1DC34F87C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  int v14;
  int v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  _QWORD v27[2];
  char *v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  int v37;
  char v38;
  uint64_t v39;

  v2 = v1;
  v32 = a1;
  sub_1DC133A98(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v30 = (char *)v27 - v7;
  v31 = sub_1DC400514();
  v8 = *(_QWORD *)(v31 - 8);
  MEMORY[0x1E0C80A78](v31);
  v29 = (char *)v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(*(_QWORD *)v1 + 232);
  v39 = *(_QWORD *)(v1 + v10);
  sub_1DC112498(0, (unint64_t *)&qword_1EDB426B0, (uint64_t (*)(void))sub_1DC34FEFC, (uint64_t)&type metadata for StockListRefreshBlocker, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6CB8]);
  sub_1DC34FF40((unint64_t *)&unk_1EDB426A0, MEMORY[0x1E0DB6CD8]);
  swift_retain();
  sub_1DC408E90();
  result = sub_1DC408ED8();
  if ((v38 & 1) != 0 || (v35 & 1) != 0)
  {
    __break(1u);
    return result;
  }
  v12 = v36;
  v13 = v33;
  v14 = v34;
  v15 = v37;
  swift_release();
  if (v15 == v14)
  {
    if (v12 == v13)
    {
      sub_1DC34C75C(v32);
      return swift_release();
    }
    if (qword_1EDB273E0 == -1)
      goto LABEL_7;
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_7:
  v16 = sub_1DC403F64();
  __swift_project_value_buffer(v16, (uint64_t)qword_1EDB5DDE8);
  swift_retain_n();
  v17 = sub_1DC403F4C();
  v18 = sub_1DC408FE0();
  if (os_log_type_enabled(v17, v18))
  {
    v19 = (uint8_t *)swift_slowAlloc();
    v20 = swift_slowAlloc();
    v28 = v5;
    *(_DWORD *)v19 = 136315138;
    v36 = v20;
    v27[1] = v19 + 4;
    v33 = *(_QWORD *)(v2 + v10);
    sub_1DC34FF40(&qword_1EDB42208, MEMORY[0x1E0DB6CE0]);
    v21 = sub_1DC4099B8();
    v33 = sub_1DC2A9C74(v21, v22, &v36);
    v5 = v28;
    sub_1DC4095B0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1DC07D000, v17, v18, "Stock list update price data will be queued while refresh is blocked by: %s", v19, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1DF0CAC88](v20, -1, -1);
    MEMORY[0x1DF0CAC88](v19, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  v23 = (uint64_t)v30;
  v24 = v2 + *(_QWORD *)(*(_QWORD *)v2 + 240);
  swift_beginAccess();
  sub_1DC0990BC(v24, v23, (uint64_t (*)(_QWORD))sub_1DC133A98);
  v25 = v31;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v23, 1, v31) == 1)
  {
    sub_1DC0926D8(v23, (uint64_t (*)(_QWORD))sub_1DC133A98);
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v5, v32, v25);
  }
  else
  {
    v26 = v29;
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 32))(v29, v23, v25);
    sub_1DC4004FC();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v26, v25);
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v25);
  swift_beginAccess();
  sub_1DC3501E4((uint64_t)v5, v24, (uint64_t (*)(_QWORD))sub_1DC133A98);
  return swift_endAccess();
}

uint64_t sub_1DC34FCEC()
{
  return sub_1DC350968(&off_1EA4511A0);
}

uint64_t sub_1DC34FD0C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(type metadata accessor for StockListSelectionModel() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = sub_1DC4010E4();
  v4 = *(_QWORD *)(v3 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v4 + 48))(v0 + v2, 2, v3))
    (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v0 + v2, v3);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DC34FDBC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;

  v5 = *(_QWORD *)(type metadata accessor for StockListSelectionModel() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  return sub_1DC34D29C(a1, a2, v2 + v6, *(uint64_t **)(v2 + ((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_1DC34FE34(char *a1)
{
  uint64_t v1;

  return sub_1DC34BAFC(a1, *(_BYTE *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t objectdestroy_8Tm()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 24))
    swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1DC34FE7C()
{
  uint64_t v0;

  sub_1DC34BB88(*(_BYTE *)(v0 + 16), *(_BYTE *)(v0 + 17), *(void (**)(void))(v0 + 24), *(_QWORD *)(v0 + 32), *(uint64_t **)(v0 + 40));
}

void sub_1DC34FE90()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EDB42640)
  {
    sub_1DC1339CC(255);
    sub_1DC133A98(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EDB42640);
  }
}

unint64_t sub_1DC34FEFC()
{
  unint64_t result;

  result = qword_1EDB42710;
  if (!qword_1EDB42710)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC4299F8, &type metadata for StockListRefreshBlocker);
    atomic_store(result, (unint64_t *)&qword_1EDB42710);
  }
  return result;
}

uint64_t sub_1DC34FF40(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    sub_1DC112498(255, (unint64_t *)&qword_1EDB426B0, (uint64_t (*)(void))sub_1DC34FEFC, (uint64_t)&type metadata for StockListRefreshBlocker, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6CB8]);
    result = MEMORY[0x1DF0CAB8C](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DC34FFA0()
{
  uint64_t v0;

  return sub_1DC34CC14(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), "Stock list is being refreshed with queued priceChangeDisplay", sub_1DC3454C0);
}

uint64_t sub_1DC34FFCC()
{
  uint64_t v0;

  return sub_1DC34CD10(*(_QWORD *)(v0 + 16), *(uint64_t (**)(uint64_t))(v0 + 24));
}

uint64_t sub_1DC34FFD8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DC34FFFC()
{
  return objectdestroy_13Tm((uint64_t (*)(_QWORD))MEMORY[0x1E0DAE458]);
}

uint64_t sub_1DC350008()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(sub_1DC400514() - 8) + 80);
  return sub_1DC34C9B0(*(_QWORD *)(v0 + 32), v0 + ((v1 + 40) & ~v1));
}

uint64_t sub_1DC35003C()
{
  uint64_t v0;

  return sub_1DC34CB38(*(_QWORD *)(v0 + 16), *(uint64_t (**)(uint64_t))(v0 + 24));
}

uint64_t sub_1DC350058()
{
  uint64_t v0;

  return sub_1DC34CC14(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), "Stock list is being refreshed with queued price data", sub_1DC34C75C);
}

uint64_t objectdestroy_14Tm_0()
{
  uint64_t v0;

  swift_release();
  if (*(_QWORD *)(v0 + 24))
    swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DC3500B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;

  return sub_1DC34D680(a1, a2, a3, a4, v4[4], v4[5], v4[6], v4[2], v4[3]);
}

uint64_t sub_1DC3500E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1DC400514();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DC350178(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char *v7;

  v3 = v1[2];
  v4 = v1[3];
  v5 = *(_QWORD *)(sub_1DC400514() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = (char *)v1 + ((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
  return sub_1DC34D89C(a1, v1[4], (uint64_t)v1 + v6, *(void (**)(uint64_t))v7, *((_QWORD *)v7 + 1), v3, v4);
}

uint64_t sub_1DC3501E4(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DC350228(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;

  return sub_1DC34CED8(a1, a2, a3, a4, v4[4], v4[5], v4[2], v4[3]);
}

uint64_t sub_1DC350234()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DC350260(uint64_t a1)
{
  uint64_t v1;

  return sub_1DC34D04C(a1, *(_QWORD *)(v1 + 32), *(void (**)(uint64_t))(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1DC350274()
{
  return sub_1DC080808(&qword_1EDB2D860, type metadata accessor for StockListModel, (uint64_t)&unk_1DC41C258);
}

uint64_t sub_1DC3502A0()
{
  sub_1DC0CC0A4(0, (unint64_t *)&qword_1EDB29D98, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60]);
  return sub_1DC404738();
}

uint64_t sub_1DC3502E0(unsigned __int8 *a1)
{
  uint64_t v1;

  return sub_1DC3BD9A4(*a1, **(_BYTE **)(v1 + 16)) & 1;
}

uint64_t sub_1DC350304()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 32))
    swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DC350338()
{
  uint64_t v0;

  return sub_1DC34B844(*(void (**)(__n128))(v0 + 32));
}

uint64_t sub_1DC35034C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(sub_1DC400280() - 8) + 80);
  return sub_1DC34AC44(*(uint64_t **)(v0 + 32), *(unsigned __int8 *)(v0 + 40), v0 + ((v1 + 41) & ~v1));
}

uint64_t objectdestroy_63Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1DC400280();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 41) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1DC3503F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  v3 = *(unsigned __int8 *)(*(_QWORD *)(sub_1DC400280() - 8) + 80);
  return sub_1DC34AEEC(*(_QWORD *)(v0 + 32), *(_BYTE *)(v0 + 40), v0 + ((v3 + 41) & ~v3), v1, v2);
}

uint64_t sub_1DC350448(uint64_t a1)
{
  uint64_t *v1;

  return sub_1DC349F38(a1, v1[4], v1[2], v1[3]);
}

uint64_t sub_1DC350454()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v1 = *(_QWORD *)(type metadata accessor for StockListStockModel(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  swift_release();
  v3 = v0 + v2;
  v4 = sub_1DC4010E4();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v0 + v2, v4);
  v5 = (int *)type metadata accessor for StockViewModel();
  v6 = v0 + v2 + v5[5];
  v7 = sub_1DC401030();
  v8 = *(_QWORD *)(v7 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
    (*(void (**)(unint64_t, uint64_t))(v8 + 8))(v6, v7);
  v9 = v3 + v5[6];
  v10 = type metadata accessor for StockSparklineViewModel(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v9, 1, v10))
  {
    v11 = sub_1DC408614();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v9, v11);
    v12 = v9 + *(int *)(v10 + 32);
    v13 = sub_1DC400F7C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
  }
  v14 = v3 + v5[7];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v15 = type metadata accessor for PriceViewModel();
  v16 = v14 + *(int *)(v15 + 40);
  v17 = sub_1DC4011C8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v16, v17);
  v18 = v14 + *(int *)(v15 + 44);
  v19 = sub_1DC400118();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v18, v19);
  v20 = v3 + v5[8];
  v21 = sub_1DC4008EC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 8))(v20, v21);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1DC350678(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v3 = v1[2];
  v4 = v1[3];
  v5 = *(_QWORD *)(type metadata accessor for StockListStockModel(0) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = (*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1DC34948C(a1, v1[4], (uint64_t)v1 + v6, *(_QWORD *)((char *)v1 + v7), *(_QWORD *)((char *)v1 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)((char *)v1 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8) + 8), v3, v4);
}

uint64_t sub_1DC3506F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v1 = *(_QWORD *)(type metadata accessor for StockListStockModel(0) - 8);
  v2 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
  v3 = sub_1DC4010E4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  v4 = (int *)type metadata accessor for StockViewModel();
  v5 = v2 + v4[5];
  v6 = sub_1DC401030();
  v7 = *(_QWORD *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6))
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  v8 = v2 + v4[6];
  v9 = type metadata accessor for StockSparklineViewModel(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v8, 1, v9))
  {
    v10 = sub_1DC408614();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v8, v10);
    v11 = v8 + *(int *)(v9 + 32);
    v12 = sub_1DC400F7C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  }
  v13 = v2 + v4[7];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v14 = type metadata accessor for PriceViewModel();
  v15 = v13 + *(int *)(v14 + 40);
  v16 = sub_1DC4011C8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
  v17 = v13 + *(int *)(v14 + 44);
  v18 = sub_1DC400118();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
  v19 = v2 + v4[8];
  v20 = sub_1DC4008EC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DC3508EC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(type metadata accessor for StockListStockModel(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  return sub_1DC34985C(a1, v1 + v4, *(_QWORD *)(v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_1DC35093C()
{
  uint64_t *v0;

  return sub_1DC34A18C(v0[4], v0[2], v0[3]);
}

uint64_t sub_1DC350948()
{
  return sub_1DC350968(&off_1EA4511A8);
}

uint64_t sub_1DC350968(uint64_t (**a1)(uint64_t, uint64_t, _UNKNOWN **))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, _UNKNOWN **);
  uint64_t v4;

  v2 = *(_QWORD *)(v1 + 24);
  v3 = *a1;
  v4 = type metadata accessor for StockListDataManager();
  return v3(v2, v4, &off_1EA451150);
}

uint64_t sub_1DC3509C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, BOOL *a3@<X8>)
{
  return sub_1DC3483D4(a1, a2, a3);
}

uint64_t sub_1DC3509D8()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;

  v1 = *(_QWORD *)(type metadata accessor for StockListStockModel(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v27 = *(_QWORD *)(v1 + 64);
  sub_1DC0CC0A4(0, (unint64_t *)&unk_1EDB29FC8, MEMORY[0x1E0DB8880]);
  v28 = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(unsigned __int8 *)(v4 + 80);
  swift_release();
  v6 = v0 + v2;
  v7 = sub_1DC4010E4();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v0 + v2, v7);
  v8 = (int *)type metadata accessor for StockViewModel();
  v9 = v0 + v2 + v8[5];
  v10 = sub_1DC401030();
  v11 = *(_QWORD *)(v10 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    (*(void (**)(unint64_t, uint64_t))(v11 + 8))(v9, v10);
  v12 = v6 + v8[6];
  v13 = type metadata accessor for StockSparklineViewModel(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v12, 1, v13))
  {
    v14 = sub_1DC408614();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v12, v14);
    v15 = v12 + *(int *)(v13 + 32);
    v16 = sub_1DC400F7C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
  }
  v17 = (v2 + v27 + v5) & ~v5;
  v18 = v6 + v8[7];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v19 = type metadata accessor for PriceViewModel();
  v20 = v18 + *(int *)(v19 + 40);
  v21 = sub_1DC4011C8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 8))(v20, v21);
  v22 = v18 + *(int *)(v19 + 44);
  v23 = sub_1DC400118();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 8))(v22, v23);
  v24 = v6 + v8[8];
  v25 = sub_1DC4008EC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 8))(v24, v25);
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v0 + v17, v28);
  return swift_deallocObject();
}

uint64_t sub_1DC350C2C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *(_QWORD *)(type metadata accessor for StockListStockModel(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = v4 + *(_QWORD *)(v3 + 64);
  sub_1DC0CC0A4(0, (unint64_t *)&unk_1EDB29FC8, MEMORY[0x1E0DB8880]);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80);
  return sub_1DC346FCC(a1, *(_QWORD *)(v1 + 32), v1 + v4, v1 + ((v5 + v7) & ~v7));
}

uint64_t sub_1DC350CBC()
{
  return objectdestroy_13Tm((uint64_t (*)(_QWORD))MEMORY[0x1E0DBA668]);
}

uint64_t sub_1DC350CC8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(sub_1DC405B30() - 8) + 80);
  return sub_1DC34651C(a1, *(_QWORD *)(v1 + 32), v1 + ((v3 + 40) & ~v3));
}

void sub_1DC350D1C(uint64_t a1)
{
  sub_1DC089DA4(a1, &qword_1F0352310, type metadata accessor for ChangeWatchlistDisplayContext, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

uint64_t sub_1DC350D38()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DC350D5C(uint64_t a1)
{
  return sub_1DC345144(a1);
}

uint64_t sub_1DC350D68(uint64_t a1)
{
  return sub_1DC34570C(a1);
}

void sub_1DC350D74(uint64_t a1)
{
  sub_1DC345A20(a1);
}

uint64_t sub_1DC350D80()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_1DC405578();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DC350DF4(uint64_t a1)
{
  return sub_1DC345820(a1);
}

uint64_t sub_1DC350E00(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1DC112498(0, &qword_1EDB2B018, (uint64_t (*)(void))sub_1DC11EF34, (uint64_t)&type metadata for StockListOfflineModel, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0D5DAF8]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC350E64(uint64_t a1)
{
  uint64_t v2;

  sub_1DC112498(0, &qword_1EDB2B018, (uint64_t (*)(void))sub_1DC11EF34, (uint64_t)&type metadata for StockListOfflineModel, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0D5DAF8]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DC350EC0()
{
  type metadata accessor for StockListDataManager();
  return sub_1DC176990();
}

uint64_t sub_1DC350F10(uint64_t a1)
{
  return sub_1DC34C75C(a1);
}

void sub_1DC350F38(uint64_t a1)
{
  sub_1DC089DA4(a1, (unint64_t *)&unk_1EDB3F6C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4250], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
}

uint64_t sub_1DC350F54()
{
  return objectdestroy_13Tm((uint64_t (*)(_QWORD))MEMORY[0x1E0DAE3E0]);
}

uint64_t sub_1DC350F60()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0[2];
  v2 = v0[3];
  v3 = *(unsigned __int8 *)(*(_QWORD *)(sub_1DC4004C0() - 8) + 80);
  return sub_1DC34DF34(v0[4], (uint64_t)v0 + ((v3 + 40) & ~v3), v1, v2);
}

uint64_t sub_1DC350FAC(uint64_t a1)
{
  uint64_t v1;

  return sub_1DC34E040(a1, v1);
}

uint64_t sub_1DC350FB4()
{
  unint64_t v0;

  v0 = sub_1DC4098A4();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

uint64_t sub_1DC351054()
{
  return sub_1DC34FFA0();
}

uint64_t sub_1DC351068(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t ObjectType;
  uint64_t v23;
  uint64_t v24;
  unsigned int (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  void (*v27)(char *, char *, uint64_t);
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD v48[4];
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  v4 = sub_1DC3FFFEC();
  v59 = *(_QWORD *)(v4 - 8);
  v60 = v4;
  MEMORY[0x1E0C80A78](v4);
  v58 = (char *)v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1DC3FFBE4();
  v61 = *(_QWORD *)(v6 - 8);
  v62 = v6;
  MEMORY[0x1E0C80A78](v6);
  v57 = (char *)v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1DC400220();
  v53 = *(_QWORD *)(v8 - 8);
  v54 = v8;
  MEMORY[0x1E0C80A78](v8);
  v52 = (char *)v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1DC4001CC();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v56 = (char *)v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC089DA4(0, &qword_1EDB28CC8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAED38], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)v48 - v14;
  v16 = sub_1DC400D6C();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)v48 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = *(_QWORD *)(a1 + 16);
  v21 = *(_QWORD *)(a1 + 24);
  ObjectType = swift_getObjectType();
  v55 = a2;
  v23 = ObjectType;
  sub_1DC400EBC();
  v24 = v17;
  v25 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
  v26 = v16;
  if (v25(v15, 1, v16) == 1)
  {
    sub_1DC3514F0((uint64_t)v15);
  }
  else
  {
    v48[1] = v23;
    v48[2] = v20;
    v48[3] = v21;
    v49 = v24;
    v50 = v10;
    v51 = v11;
    v27 = *(void (**)(char *, char *, uint64_t))(v24 + 32);
    v28 = v19;
    v27(v19, v15, v16);
    v29 = v56;
    sub_1DC40019C();
    v30 = type metadata accessor for StockEarningsModel();
    (*(void (**)(char *, uint64_t, uint64_t))(v53 + 16))(v52, v55 + *(int *)(v30 + 28), v54);
    sub_1DC4001A8();
    sub_1DC089DA4(0, (unint64_t *)&qword_1EDB3FDF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB11B8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v31 = sub_1DC4001B4();
    v32 = *(_QWORD *)(v31 - 8);
    v33 = (*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
    v34 = swift_allocObject();
    *(_OWORD *)(v34 + 16) = xmmword_1DC40DC10;
    (*(void (**)(unint64_t, _QWORD, uint64_t))(v32 + 104))(v34 + v33, *MEMORY[0x1E0CB1130], v31);
    sub_1DC367EA4(v34);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    v35 = v58;
    sub_1DC400D54();
    v36 = v57;
    sub_1DC40013C();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v59 + 8))(v35, v60);
    v37 = sub_1DC3FFB90();
    v38 = v36;
    v39 = v49;
    if ((v40 & 1) != 0)
    {
      (*(void (**)(char *, uint64_t))(v61 + 8))(v36, v62);
      (*(void (**)(char *, uint64_t))(v51 + 8))(v29, v50);
      (*(void (**)(char *, uint64_t))(v39 + 8))(v28, v26);
    }
    else
    {
      v41 = v28;
      v43 = v61;
      v42 = v62;
      v45 = v50;
      v44 = v51;
      if (v37 < 1)
      {
        v48[0] = v41;
        v46 = sub_1DC400D60();
        (*(void (**)(char *, uint64_t))(v43 + 8))(v38, v42);
        (*(void (**)(char *, uint64_t))(v44 + 8))(v29, v45);
        (*(void (**)(_QWORD, uint64_t))(v39 + 8))(v48[0], v26);
        return v46;
      }
      sub_1DC400EA4();
      (*(void (**)(char *, uint64_t))(v43 + 8))(v38, v42);
      (*(void (**)(char *, uint64_t))(v44 + 8))(v29, v45);
      (*(void (**)(char *, uint64_t))(v39 + 8))(v41, v26);
    }
  }
  return 0;
}

uint64_t type metadata accessor for StockFeedEarningsViewModelFactory()
{
  return objc_opt_self();
}

uint64_t sub_1DC3514F0(uint64_t a1)
{
  uint64_t v2;

  sub_1DC089DA4(0, &qword_1EDB28CC8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAED38], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DC351544(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  int v44;
  uint64_t (*v45)(_QWORD);
  int EnumCaseMultiPayload;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  void *v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  int v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t (*v69)(void);
  uint64_t v70;
  uint64_t v71;
  void *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t (*v76)(void);
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t ObjectType;
  uint64_t v81;
  void (*v82)(char *, char *, uint64_t);
  uint64_t v83;
  uint64_t v84;
  void (*v85)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unsigned int *v96;
  uint64_t v97;
  uint64_t v99;
  uint64_t v100;
  uint64_t *v101;
  char *v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  char *v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  _OWORD v125[2];
  uint64_t v126;
  _OWORD v127[2];

  v124 = a1;
  v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1DC089DA4(0, &qword_1F0352F10, (uint64_t (*)(uint64_t))sub_1DC1EF064, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v104 = (char *)&v99 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v115 = (char *)&v99 - v7;
  v113 = sub_1DC407E10();
  v111 = *(_QWORD *)(v113 - 8);
  MEMORY[0x1E0C80A78](v113);
  v114 = (char *)&v99 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v109 = sub_1DC407F54();
  v108 = *(_QWORD *)(v109 - 8);
  MEMORY[0x1E0C80A78](v109);
  v112 = (char *)&v99 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v107 = sub_1DC40814C();
  v106 = *(_QWORD *)(v107 - 8);
  MEMORY[0x1E0C80A78](v107);
  v110 = (char *)&v99 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC1EF064();
  v116 = v11;
  v120 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v121 = (char *)&v99 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1DC401BB8();
  MEMORY[0x1E0C80A78](v13);
  v117 = (uint64_t)&v99 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103 = sub_1DC405D88();
  v100 = *(_QWORD *)(v103 - 8);
  MEMORY[0x1E0C80A78](v103);
  v101 = (uint64_t *)((char *)&v99 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v16);
  v102 = (char *)&v99 - v17;
  sub_1DC089DA4(0, (unint64_t *)&unk_1EDB29810, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD3C8], v3);
  MEMORY[0x1E0C80A78](v18);
  v118 = (char *)&v99 - v19;
  v20 = type metadata accessor for StocksActivity(0);
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v99 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)&v99 - v24;
  v26 = type metadata accessor for StocksActivity.Article(0);
  MEMORY[0x1E0C80A78](v26);
  v28 = (uint64_t *)((char *)&v99 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v29);
  v119 = (uint64_t)&v99 - v30;
  MEMORY[0x1E0C80A78](v31);
  v33 = (uint64_t *)((char *)&v99 - v32);
  MEMORY[0x1E0C80A78](v34);
  v122 = (uint64_t)&v99 - v35;
  MEMORY[0x1E0C80A78](v36);
  v38 = (char *)&v99 - v37;
  v39 = type metadata accessor for ForYouFeedRouteModel();
  MEMORY[0x1E0C80A78](v39);
  v105 = (uint64_t)&v99 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v41);
  v43 = (char *)&v99 - v42;
  v44 = *a2;
  sub_1DC0990BC(v124, (uint64_t)&v99 - v42, v45);
  v124 = v39;
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    LODWORD(v118) = v44;
    if (EnumCaseMultiPayload == 1)
    {
      v47 = v119;
      sub_1DC092ED0((uint64_t)v43, v119, type metadata accessor for StocksActivity.Article);
      sub_1DC0990BC(v47, (uint64_t)v28, type metadata accessor for StocksActivity.Article);
      v48 = swift_getEnumCaseMultiPayload();
      v49 = v123;
      if ((_DWORD)v48 == 1)
      {
        v50 = *v28;
      }
      else
      {
        sub_1DC1446B4();
        v68 = (uint64_t)v28 + *(int *)(v67 + 64);
        v69 = MEMORY[0x1E0D570B0];
        v70 = v117;
        sub_1DC092ED0((uint64_t)v28, v117, (uint64_t (*)(_QWORD))MEMORY[0x1E0D570B0]);
        v50 = sub_1DC401B94();
        sub_1DC0926D8(v70, (uint64_t (*)(_QWORD))v69);
        v48 = sub_1DC17C7C8(v68, (unint64_t *)&qword_1EDB39A70, (unint64_t *)&unk_1EDB39A60);
        if (!v50)
        {
          v93 = v105;
          sub_1DC0990BC(v47, v105, type metadata accessor for StocksActivity.Article);
          swift_storeEnumTagMultiPayload();
          LOBYTE(v127[0]) = (_BYTE)v118;
          sub_1DC351544(v93, v127);
          sub_1DC0926D8(v93, (uint64_t (*)(_QWORD))type metadata accessor for ForYouFeedRouteModel);
          v73 = v47;
          return sub_1DC0926D8(v73, type metadata accessor for StocksActivity.Article);
        }
      }
      MEMORY[0x1E0C80A78](v48);
      *(&v99 - 2) = v49;
      *(&v99 - 1) = v47;
      sub_1DC402E0C();
      v71 = swift_allocObject();
      *(_QWORD *)(v71 + 16) = v50;
      *(_QWORD *)(v71 + 24) = v49;
      swift_unknownObjectRetain();
      swift_retain();
      v72 = (void *)sub_1DC402C80();
      sub_1DC402D04();
      swift_release();
      swift_release();
      swift_release();

      swift_unknownObjectRelease();
      v73 = v47;
    }
    else
    {
      v62 = (uint64_t)v43;
      v63 = v122;
      sub_1DC092ED0(v62, v122, type metadata accessor for StocksActivity.Article);
      sub_1DC0990BC(v63, (uint64_t)v33, type metadata accessor for StocksActivity.Article);
      v64 = swift_getEnumCaseMultiPayload();
      v65 = v123;
      if (v64 == 1)
      {
        v66 = *v33;
      }
      else
      {
        sub_1DC1446B4();
        v75 = (uint64_t)v33 + *(int *)(v74 + 64);
        v76 = MEMORY[0x1E0D570B0];
        v77 = v117;
        sub_1DC092ED0((uint64_t)v33, v117, (uint64_t (*)(_QWORD))MEMORY[0x1E0D570B0]);
        v66 = sub_1DC401B94();
        sub_1DC0926D8(v77, (uint64_t (*)(_QWORD))v76);
        sub_1DC17C7C8(v75, (unint64_t *)&qword_1EDB39A70, (unint64_t *)&unk_1EDB39A60);
        if (!v66)
        {
          v94 = v122;
          v95 = v105;
          sub_1DC0990BC(v122, v105, type metadata accessor for StocksActivity.Article);
          swift_storeEnumTagMultiPayload();
          LOBYTE(v127[0]) = (_BYTE)v118;
          sub_1DC351544(v95, v127);
          sub_1DC0926D8(v95, (uint64_t (*)(_QWORD))type metadata accessor for ForYouFeedRouteModel);
          v73 = v94;
          return sub_1DC0926D8(v73, type metadata accessor for StocksActivity.Article);
        }
      }
      v119 = v66;
      *(_QWORD *)&v125[0] = v66;
      (*(void (**)(char *, _QWORD, uint64_t))(v106 + 104))(v110, *MEMORY[0x1E0D5E7A8], v107);
      (*(void (**)(char *, _QWORD, uint64_t))(v108 + 104))(v112, *MEMORY[0x1E0D5DBC8], v109);
      (*(void (**)(char *, _QWORD, uint64_t))(v111 + 104))(v114, *MEMORY[0x1E0D5D498], v113);
      memset(v127, 0, sizeof(v127));
      sub_1DC112C9C();
      swift_unknownObjectRetain();
      v78 = v121;
      sub_1DC40808C();
      v79 = *(_QWORD *)(v65 + 96);
      ObjectType = swift_getObjectType();
      sub_1DC406A60();
      v81 = v120;
      v82 = *(void (**)(char *, char *, uint64_t))(v120 + 16);
      v83 = (uint64_t)v115;
      v84 = v116;
      v82(v115, v78, v116);
      v85 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v81 + 56);
      v85(v83, 0, 1, v84);
      v114 = (char *)ObjectType;
      v117 = v79;
      LOBYTE(v79) = sub_1DC404AA4();
      swift_release();
      sub_1DC0B091C(v83, &qword_1F0352F10, (uint64_t (*)(uint64_t))sub_1DC1EF064);
      if ((v79 & 1) != 0)
      {
        sub_1DC406A60();
        v86 = (uint64_t)v104;
        v87 = v121;
        v82(v104, v121, v84);
        v85(v86, 0, 1, v84);
        sub_1DC404AD4();
        swift_unknownObjectRelease();
        swift_release();
        sub_1DC0B091C(v86, &qword_1F0352F10, (uint64_t (*)(uint64_t))sub_1DC1EF064);
        (*(void (**)(char *, uint64_t))(v120 + 8))(v87, v84);
        v73 = v122;
      }
      else
      {
        v88 = v122;
        v89 = v105;
        sub_1DC0990BC(v122, v105, type metadata accessor for StocksActivity.Article);
        swift_storeEnumTagMultiPayload();
        LOBYTE(v127[0]) = (_BYTE)v118;
        sub_1DC351544(v89, v127);
        swift_unknownObjectRelease();
        sub_1DC0926D8(v89, (uint64_t (*)(_QWORD))type metadata accessor for ForYouFeedRouteModel);
        (*(void (**)(char *, uint64_t))(v81 + 8))(v121, v84);
        v73 = v88;
      }
    }
  }
  else
  {
    v51 = (uint64_t)v118;
    v52 = (uint64_t)v22;
    sub_1DC092ED0((uint64_t)v43, (uint64_t)v38, type metadata accessor for StocksActivity.Article);
    if (v44)
    {
      v53 = v123;
      v54 = (_QWORD *)(v123 + 280);
      __swift_project_boxed_opaque_existential_1((_QWORD *)(v123 + 280), *(_QWORD *)(v123 + 304));
      v55 = sub_1DC404B34();
      if (v55)
      {
        v56 = (void *)v55;
        sub_1DC0990BC((uint64_t)v38, (uint64_t)v22, type metadata accessor for StocksActivity.Article);
        swift_storeEnumTagMultiPayload();
        __swift_project_boxed_opaque_existential_1(v54, *(_QWORD *)(v53 + 304));
        v57 = v56;
        v58 = sub_1DC404B40();
        if (v44 == 1)
        {

          v61 = v101;
          *v101 = v58;
          v96 = (unsigned int *)MEMORY[0x1E0DBAC78];
          v59 = v100;
          v60 = v102;
        }
        else
        {
          v59 = v100;
          v60 = v102;
          v61 = v101;
          if (v44 == 2)
          {

            *v61 = 0;
          }
          else
          {
            *v101 = (uint64_t)v56;
          }
          v61[1] = v58;
          v96 = (unsigned int *)MEMORY[0x1E0DBAC80];
        }
        v97 = v103;
        (*(void (**)(uint64_t *, _QWORD, uint64_t))(v59 + 104))(v61, *v96, v103);
        (*(void (**)(char *, uint64_t *, uint64_t))(v59 + 32))(v60, v61, v97);
        sub_1DC404510();

        (*(void (**)(char *, uint64_t))(v59 + 8))(v60, v97);
        sub_1DC0926D8(v52, type metadata accessor for StocksActivity);
      }
    }
    else
    {
      v90 = v123;
      sub_1DC0990BC((uint64_t)v38, (uint64_t)v25, type metadata accessor for StocksActivity.Article);
      swift_storeEnumTagMultiPayload();
      v91 = *(_QWORD *)(v90 + 144);
      v92 = sub_1DC403340();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v92 - 8) + 56))(v51, 1, 1, v92);
      sub_1DC0824D4(v90 + 152, (uint64_t)v127);
      v126 = 0;
      memset(v125, 0, sizeof(v125));
      swift_retain();
      sub_1DC22BAE0((uint64_t)v25, v91, v51, (uint64_t)v127, 0, 0, (uint64_t)v125);
      swift_release();
      sub_1DC17C7C8((uint64_t)v125, &qword_1EDB29410, (unint64_t *)&unk_1EDB29400);
      sub_1DC17C7C8((uint64_t)v127, &qword_1EDB2ACD0, (unint64_t *)&qword_1EDB2ACC0);
      sub_1DC0B091C(v51, (unint64_t *)&unk_1EDB29810, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD3C8]);
      sub_1DC0926D8((uint64_t)v25, type metadata accessor for StocksActivity);
      swift_release();
    }
    v73 = (uint64_t)v38;
  }
  return sub_1DC0926D8(v73, type metadata accessor for StocksActivity.Article);
}

uint64_t sub_1DC352230(uint64_t a1, uint64_t a2)
{
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v15[40];
  _BYTE v16[40];

  v4 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD3C8];
  sub_1DC089DA4(0, (unint64_t *)&unk_1EDB29810, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD3C8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v5);
  v7 = &v15[-v6];
  v8 = type metadata accessor for StocksActivity(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = &v15[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1DC0990BC(a2, (uint64_t)v10, type metadata accessor for StocksActivity.Article);
  swift_storeEnumTagMultiPayload();
  v11 = *(_QWORD *)(a1 + 144);
  v12 = sub_1DC403340();
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v7, 1, 1, v12);
  sub_1DC0824D4(a1 + 152, (uint64_t)v16);
  sub_1DC0824D4(a1 + 40, (uint64_t)v15);
  swift_retain();
  v13 = sub_1DC22BAE0((uint64_t)v10, v11, (uint64_t)v7, (uint64_t)v16, 0, 0, (uint64_t)v15);
  sub_1DC17C7C8((uint64_t)v15, &qword_1EDB29410, (unint64_t *)&unk_1EDB29400);
  sub_1DC17C7C8((uint64_t)v16, &qword_1EDB2ACD0, (unint64_t *)&qword_1EDB2ACC0);
  sub_1DC0B091C((uint64_t)v7, (unint64_t *)&unk_1EDB29810, v4);
  sub_1DC0926D8((uint64_t)v10, type metadata accessor for StocksActivity);
  swift_release();
  return v13;
}

uint64_t sub_1DC352410(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  char *v22;
  uint64_t ObjectType;
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  char *v26;
  uint64_t v27;
  void (*v28)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v29;
  char *v30;
  void *v31;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  void *v40;
  __int128 v41;
  __int128 v42;
  uint64_t v43;

  v39 = a3;
  sub_1DC089DA4(0, &qword_1F0352F10, (uint64_t (*)(uint64_t))sub_1DC1EF064, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v33 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v38 = (char *)&v33 - v7;
  v8 = sub_1DC407E10();
  v36 = *(_QWORD *)(v8 - 8);
  v37 = (char *)v8;
  MEMORY[0x1E0C80A78](v8);
  v34 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1DC407F54();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1DC40814C();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC1EF064();
  v35 = v18;
  v19 = *(_QWORD *)(v18 - 8);
  v20 = MEMORY[0x1E0C80A78](v18);
  v22 = (char *)&v33 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = a2;
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v15 + 104))(v17, *MEMORY[0x1E0D5E7A8], v14, v20);
  (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v13, *MEMORY[0x1E0D5DBC8], v10);
  (*(void (**)(char *, _QWORD, char *))(v36 + 104))(v34, *MEMORY[0x1E0D5D498], v37);
  v41 = 0u;
  v42 = 0u;
  sub_1DC112C9C();
  swift_unknownObjectRetain();
  sub_1DC40808C();
  ObjectType = swift_getObjectType();
  sub_1DC406A60();
  v24 = *(void (**)(char *, char *, uint64_t))(v19 + 16);
  v25 = (uint64_t)v38;
  v37 = v22;
  v26 = v22;
  v27 = v35;
  v24(v38, v26, v35);
  v39 = v19;
  v28 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v19 + 56);
  v28(v25, 0, 1, v27);
  v36 = ObjectType;
  LOBYTE(v11) = sub_1DC404AA4();
  swift_release();
  sub_1DC0B091C(v25, &qword_1F0352F10, (uint64_t (*)(uint64_t))sub_1DC1EF064);
  if ((v11 & 1) != 0)
  {
    sub_1DC406A60();
    v29 = (uint64_t)v33;
    v30 = v37;
    v24(v33, v37, v27);
    v28(v29, 0, 1, v27);
    v31 = v40;
    sub_1DC404AD4();
    swift_release();
    if (v31)

    sub_1DC0B091C(v29, &qword_1F0352F10, (uint64_t (*)(uint64_t))sub_1DC1EF064);
  }
  else
  {
    v30 = v37;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v30, v27);
}

uint64_t sub_1DC35278C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE v22[40];
  _QWORD v23[5];
  _BYTE v24[40];

  v3 = type metadata accessor for ForYouFeedRouteModel();
  MEMORY[0x1E0C80A78](v3);
  v5 = &v22[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = type metadata accessor for StocksActivity.Article(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = &v22[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1DC089DA4(0, (unint64_t *)&qword_1EDB2C5F0, type metadata accessor for StocksActivity, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v9);
  v11 = &v22[-v10 - 8];
  v12 = type metadata accessor for StocksActivity(0);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = &v22[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1DC0990BC(a1, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for ForYouFeedRouteModel);
  if (swift_getEnumCaseMultiPayload() >= 2)
  {
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, 1, 1, v12);
    sub_1DC0926D8((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for ForYouFeedRouteModel);
  }
  else
  {
    sub_1DC092ED0((uint64_t)v5, (uint64_t)v8, type metadata accessor for StocksActivity.Article);
    sub_1DC092ED0((uint64_t)v8, (uint64_t)v11, type metadata accessor for StocksActivity.Article);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v11, 0, 1, v12);
  }
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_1DC0B091C((uint64_t)v11, (unint64_t *)&qword_1EDB2C5F0, type metadata accessor for StocksActivity);
    return 0;
  }
  else
  {
    sub_1DC092ED0((uint64_t)v11, (uint64_t)v15, type metadata accessor for StocksActivity);
    v17 = *(_QWORD *)(v1 + 80);
    v18 = *(_QWORD *)(v1 + 144);
    sub_1DC0824D4(v1 + 152, (uint64_t)v24);
    v23[4] = v17;
    v23[3] = sub_1DC4018AC();
    v23[0] = v18;
    sub_1DC194128((uint64_t)v24, (uint64_t)v22);
    v19 = swift_allocObject();
    *(_QWORD *)(v19 + 16) = v18;
    sub_1DC1941B8((uint64_t)v22, v19 + 24);
    sub_1DC083C10();
    sub_1DC080808((unint64_t *)&qword_1EDB29CA0, (uint64_t (*)(uint64_t))sub_1DC083C10, MEMORY[0x1E0DB75C0]);
    swift_retain_n();
    swift_retain();
    v16 = sub_1DC406E08();
    swift_release();
    sub_1DC0926D8((uint64_t)v23, (uint64_t (*)(_QWORD))sub_1DC0D11C4);
    sub_1DC17C7C8((uint64_t)v24, &qword_1EDB2ACD0, (unint64_t *)&qword_1EDB2ACC0);
    swift_release();
    sub_1DC0926D8((uint64_t)v15, type metadata accessor for StocksActivity);
  }
  return v16;
}

uint64_t sub_1DC352AE8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t ObjectType;
  void (*v21)(char *, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _OWORD v25[2];
  uint64_t v26;
  _BYTE v27[40];

  v3 = type metadata accessor for StockListSelectionModel();
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC089DA4(0, (unint64_t *)&unk_1EDB29810, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD3C8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v22 - v7;
  v9 = type metadata accessor for StocksActivity(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC1B5E40();
  v13 = *(int *)(v12 + 48);
  v14 = sub_1DC4010E4();
  v23 = *(_QWORD *)(v14 - 8);
  v24 = a1;
  v15 = *(void (**)(char *, uint64_t, uint64_t))(v23 + 16);
  v15(v11, a1, v14);
  *(_QWORD *)&v11[v13] = 0;
  type metadata accessor for StocksActivity.StockFeed(0);
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  v16 = *(_QWORD *)(v1 + 144);
  v17 = sub_1DC403340();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v8, 1, 1, v17);
  sub_1DC0824D4(v1 + 152, (uint64_t)v27);
  v26 = 0;
  memset(v25, 0, sizeof(v25));
  swift_retain();
  sub_1DC22BAE0((uint64_t)v11, v16, (uint64_t)v8, (uint64_t)v27, 0, 0, (uint64_t)v25);
  swift_release();
  sub_1DC17C7C8((uint64_t)v25, &qword_1EDB29410, (unint64_t *)&unk_1EDB29400);
  sub_1DC17C7C8((uint64_t)v27, &qword_1EDB2ACD0, (unint64_t *)&qword_1EDB2ACC0);
  sub_1DC0B091C((uint64_t)v8, (unint64_t *)&unk_1EDB29810, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD3C8]);
  sub_1DC0926D8((uint64_t)v11, type metadata accessor for StocksActivity);
  swift_release();
  result = MEMORY[0x1DF0CAD78](v1 + 24);
  if (result)
  {
    v19 = *(_QWORD *)(result + 40);
    ObjectType = swift_getObjectType();
    v15(v5, v24, v14);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v5, 0, 2, v14);
    v21 = *(void (**)(char *, uint64_t, uint64_t))(v19 + 96);
    swift_retain();
    v21(v5, ObjectType, v19);
    sub_1DC0926D8((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for StockListSelectionModel);
    swift_release();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1DC352DC0()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy();
  sub_1DC148A20(v0 + 24);
  __swift_destroy_boxed_opaque_existential_1(v0 + 40);
  swift_release();
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 104);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 152);
  __swift_destroy_boxed_opaque_existential_1(v0 + 192);
  __swift_destroy_boxed_opaque_existential_1(v0 + 232);

  __swift_destroy_boxed_opaque_existential_1(v0 + 280);
  return v0;
}

uint64_t sub_1DC352E34()
{
  sub_1DC352DC0();
  return swift_deallocClassInstance();
}

uint64_t sub_1DC352E54()
{
  uint64_t v0;

  return sub_1DC352230(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1DC352E6C()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DC352E98(uint64_t a1)
{
  uint64_t v1;

  return sub_1DC352410(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1DC352EB0()
{
  uint64_t v0;

  swift_release();
  if (*(_QWORD *)(v0 + 48))
    __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  return swift_deallocObject();
}

uint64_t sub_1DC352EE4()
{
  sub_1DC3532F4();
  return sub_1DC409B20();
}

uint64_t sub_1DC352F0C()
{
  sub_1DC3532F4();
  return sub_1DC409B2C();
}

uint64_t sub_1DC352F34(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1DC35329C();
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC3532F4();
  sub_1DC409B14();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1DC352FF4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t, uint64_t);
  _QWORD v23[2];
  uint64_t v24;
  uint64_t v25;

  v25 = a1;
  v24 = sub_1DC407A74();
  v1 = *(_QWORD *)(v24 - 8);
  MEMORY[0x1E0C80A78](v24);
  v3 = (char *)v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC353238();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v23 - v8;
  v10 = sub_1DC40799C();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1DC400010();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)v23 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC400004();
  v18 = sub_1DC3FFFF8();
  v23[0] = v19;
  v23[1] = v18;
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v13, *MEMORY[0x1E0D5BD28], v10);
  v20 = sub_1DC402DC4();
  v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56);
  v21(v9, 1, 1, v20);
  v21(v6, 1, 1, v20);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0D5BF78], v24);
  sub_1DC1B88BC();
  sub_1DC1B8900();
  return sub_1DC40745C();
}

void sub_1DC353238()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB41DD0)
  {
    sub_1DC402DC4();
    v0 = sub_1DC4095A4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB41DD0);
  }
}

ValueMetadata *type metadata accessor for NewsPlacardStockFeedGroupConfigData()
{
  return &type metadata for NewsPlacardStockFeedGroupConfigData;
}

void sub_1DC35329C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F0352318)
  {
    sub_1DC3532F4();
    v0 = sub_1DC409994();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1F0352318);
  }
}

unint64_t sub_1DC3532F4()
{
  unint64_t result;

  result = qword_1F0352320;
  if (!qword_1F0352320)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC429DE0, &type metadata for NewsPlacardStockFeedGroupConfigData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F0352320);
  }
  return result;
}

ValueMetadata *type metadata accessor for NewsPlacardStockFeedGroupConfigData.CodingKeys()
{
  return &type metadata for NewsPlacardStockFeedGroupConfigData.CodingKeys;
}

unint64_t sub_1DC35334C()
{
  unint64_t result;

  result = qword_1F0352328;
  if (!qword_1F0352328)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC429D90, &type metadata for NewsPlacardStockFeedGroupConfigData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F0352328);
  }
  return result;
}

unint64_t sub_1DC353394()
{
  unint64_t result;

  result = qword_1F0352330;
  if (!qword_1F0352330)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC429DB8, &type metadata for NewsPlacardStockFeedGroupConfigData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F0352330);
  }
  return result;
}

uint64_t (*sub_1DC3533D8())(uint64_t a1)
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 64);
  v2 = (uint64_t (*)(uint64_t))v1;
  if (v1 == 1)
  {
    v3 = swift_allocObject();
    swift_weakInit();
    v4 = *(_QWORD *)(v0 + 64);
    v2 = sub_1DC353E88;
    *(_QWORD *)(v0 + 64) = sub_1DC353E88;
    *(_QWORD *)(v0 + 72) = v3;
    swift_retain();
    sub_1DC353E2C(v4);
  }
  sub_1DC353E3C(v1);
  return v2;
}

uint64_t (*sub_1DC353478())(uint64_t a1)
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = (uint64_t (*)(uint64_t))v1;
  if (v1 == 1)
  {
    v3 = swift_allocObject();
    swift_weakInit();
    v4 = *(_QWORD *)(v0 + 80);
    v2 = sub_1DC353E0C;
    *(_QWORD *)(v0 + 80) = sub_1DC353E0C;
    *(_QWORD *)(v0 + 88) = v3;
    swift_retain();
    sub_1DC353E2C(v4);
  }
  sub_1DC353E3C(v1);
  return v2;
}

uint64_t sub_1DC353518(uint64_t a1, uint64_t a2, char a3, char a4)
{
  uint64_t result;
  uint64_t v7;
  id v8;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v7 = result;
    v8 = sub_1DC3535E0();
    objc_msgSend(v8, sel_setPersonalizedAds_, a3 & 1);

    *(_BYTE *)(v7 + 57) = a4;
    sub_1DC4012A0();
    type metadata accessor for OnboardingPersonalizedAdsStep();
    sub_1DC353E4C(&qword_1F0352338, (uint64_t)&unk_1DC429ED0);
    sub_1DC4013B4();
    swift_release();
    sub_1DC353B70();
    return swift_release();
  }
  return result;
}

id sub_1DC3535E0()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  void *v4;
  id v5;

  v1 = *(void **)(v0 + 96);
  if (v1)
  {
    v2 = *(id *)(v0 + 96);
  }
  else
  {
    v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D43808]), sel_init);
    v4 = *(void **)(v0 + 96);
    *(_QWORD *)(v0 + 96) = v3;
    v2 = v3;

    v1 = 0;
  }
  v5 = v1;
  return v2;
}

uint64_t sub_1DC353648()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  unsigned int v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  const char *v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  id v22;
  uint64_t v23;
  id v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  char v30;

  v1 = v0;
  sub_1DC4012A0();
  sub_1DC353E4C(&qword_1EDB28030, (uint64_t)&unk_1DC429E90);
  sub_1DC4012D0();
  swift_release();
  if (v30 == 1)
  {
    if (qword_1EDB29AD0 != -1)
      swift_once();
    v2 = sub_1DC403F64();
    __swift_project_value_buffer(v2, (uint64_t)qword_1EDB29AB0);
    v3 = sub_1DC403F4C();
    v4 = sub_1DC408FE0();
    if (os_log_type_enabled(v3, v4))
    {
      v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v5 = 0;
      _os_log_impl(&dword_1DC07D000, v3, v4, "Force showing due to showPersonalizedAdsOnNextLaunch being set", v5, 2u);
      MEMORY[0x1DF0CAC88](v5, -1, -1);
    }

    return 1;
  }
  v7 = sub_1DC3535E0();
  v8 = objc_msgSend(v7, sel_acknowledgedVersionForPersonalizedAds);

  v9 = sub_1DC3535E0();
  v10 = objc_msgSend(v9, sel_latestVersionForPersonalizedAdsConsent);

  if ((uint64_t)v8 >= (uint64_t)v10)
  {
    if (qword_1EDB29AD0 != -1)
      swift_once();
    v18 = sub_1DC403F64();
    __swift_project_value_buffer(v18, (uint64_t)qword_1EDB29AB0);
    swift_retain_n();
    v19 = sub_1DC403F4C();
    v20 = sub_1DC408FE0();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v21 = 134349056;
      v22 = sub_1DC3535E0();
      objc_msgSend(v22, sel_acknowledgedVersionForPersonalizedAds);
      swift_release();

      sub_1DC4095B0();
      swift_release();
      _os_log_impl(&dword_1DC07D000, v19, v20, "Not showing due to version: %{public}ld", v21, 0xCu);
      MEMORY[0x1DF0CAC88](v21, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    return 0;
  }
  v11 = objc_msgSend((id)objc_opt_self(), sel_sharedAccount);
  v12 = objc_msgSend(v11, sel_isContentStoreFrontSupported);

  if (!v12)
  {
    if (qword_1EDB29AD0 != -1)
      swift_once();
    v23 = sub_1DC403F64();
    __swift_project_value_buffer(v23, (uint64_t)qword_1EDB29AB0);
    v14 = sub_1DC403F4C();
    v15 = sub_1DC408FE0();
    if (!os_log_type_enabled(v14, v15))
      goto LABEL_23;
    v16 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v16 = 0;
    v17 = "Not showing due to unsupported storefront";
    goto LABEL_22;
  }
  if ((*(_BYTE *)(v1 + 56) & 1) != 0)
  {
    if (qword_1EDB29AD0 != -1)
      swift_once();
    v13 = sub_1DC403F64();
    __swift_project_value_buffer(v13, (uint64_t)qword_1EDB29AB0);
    v14 = sub_1DC403F4C();
    v15 = sub_1DC408FE0();
    if (!os_log_type_enabled(v14, v15))
      goto LABEL_23;
    v16 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v16 = 0;
    v17 = "Not showing due non-apple news source";
LABEL_22:
    _os_log_impl(&dword_1DC07D000, v14, v15, v17, v16, 2u);
    MEMORY[0x1DF0CAC88](v16, -1, -1);
LABEL_23:

    return 0;
  }
  v25 = sub_1DC3535E0();
  v6 = objc_msgSend(v25, sel_shouldPresentPersonalizedAdsOnboarding);

  if (qword_1EDB29AD0 != -1)
    swift_once();
  v26 = sub_1DC403F64();
  __swift_project_value_buffer(v26, (uint64_t)qword_1EDB29AB0);
  v27 = sub_1DC403F4C();
  v28 = sub_1DC408FE0();
  if (os_log_type_enabled(v27, v28))
  {
    v29 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v29 = 67109120;
    sub_1DC4095B0();
    _os_log_impl(&dword_1DC07D000, v27, v28, "Should present personalized ads onboarding: %{BOOL}d", v29, 8u);
    MEMORY[0x1DF0CAC88](v29, -1, -1);
  }

  return (uint64_t)v6;
}

void sub_1DC353B70()
{
  id v0;
  id v1;
  id v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  id v7;

  v0 = sub_1DC3535E0();
  v1 = objc_msgSend(v0, sel_latestVersionForPersonalizedAdsConsent);

  v2 = sub_1DC3535E0();
  objc_msgSend(v2, sel_setAcknowledgedVersionForPersonalizedAds_, v1);

  if (qword_1EDB29AD0 != -1)
    swift_once();
  v3 = sub_1DC403F64();
  __swift_project_value_buffer(v3, (uint64_t)qword_1EDB29AB0);
  swift_retain_n();
  v4 = sub_1DC403F4C();
  v5 = sub_1DC408FE0();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v6 = 134349056;
    v7 = sub_1DC3535E0();
    objc_msgSend(v7, sel_acknowledgedVersionForPersonalizedAds);
    swift_release();

    sub_1DC4095B0();
    swift_release();
    _os_log_impl(&dword_1DC07D000, v4, v5, "Set acknowledgedVersion to %{public}ld", v6, 0xCu);
    MEMORY[0x1DF0CAC88](v6, -1, -1);

  }
  else
  {

    swift_release_n();
  }
}

uint64_t sub_1DC353D14()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  sub_1DC353E2C(*(_QWORD *)(v0 + 64));
  sub_1DC353E2C(*(_QWORD *)(v0 + 80));

  return swift_deallocClassInstance();
}

uint64_t sub_1DC353D50()
{
  return sub_1DC353648() & 1;
}

uint64_t sub_1DC353D74@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;

  return sub_1DC0824D4(*v1 + 16, a1);
}

uint64_t (*sub_1DC353D84())(uint64_t a1)
{
  return sub_1DC3533D8();
}

uint64_t (*sub_1DC353DA4())(uint64_t a1)
{
  return sub_1DC353478();
}

uint64_t sub_1DC353DC4()
{
  return sub_1DC353E4C(&qword_1EDB28030, (uint64_t)&unk_1DC429E90);
}

uint64_t sub_1DC353DE8()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1DC353E0C(uint64_t a1)
{
  uint64_t v1;

  return sub_1DC353518(a1, v1, 0, 0);
}

uint64_t sub_1DC353E2C(uint64_t result)
{
  if (result != 1)
    return sub_1DC0E81D0(result);
  return result;
}

uint64_t sub_1DC353E3C(uint64_t result)
{
  if (result != 1)
    return sub_1DC113F04(result);
  return result;
}

uint64_t sub_1DC353E4C(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for OnboardingPersonalizedAdsStep();
    result = MEMORY[0x1DF0CAB8C](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DC353E88(uint64_t a1)
{
  uint64_t v1;

  return sub_1DC353518(a1, v1, 1, 1);
}

uint64_t type metadata accessor for NoopForYouFeedTitleViewAnimator()
{
  return objc_opt_self();
}

id sub_1DC353EC8(int a1, id a2, double a3, void *a4)
{
  objc_msgSend(a2, sel_setAlpha_, 1.0 - a3);
  objc_msgSend(a2, sel_frame);
  objc_msgSend(a4, sel_setFrame_);
  return objc_msgSend(a4, sel_setAlpha_, 1.0);
}

uint64_t sub_1DC353F34(char a1, void *a2, void *a3)
{
  return sub_1DC353F3C(a1 & 1, a2, a3);
}

uint64_t sub_1DC353F3C(char a1, id a2, void *a3)
{
  uint64_t v5;
  double v6;
  double v7;

  v5 = a1 & 1;
  if ((a1 & 1) != 0)
    v6 = 0.0;
  else
    v6 = 1.0;
  if ((a1 & 1) != 0)
    v7 = 1.0;
  else
    v7 = 0.0;
  objc_msgSend(a2, sel_setAlpha_, v6);
  objc_msgSend(a2, sel_frame);
  objc_msgSend(a3, sel_setFrame_);
  objc_msgSend(a3, sel_setAlpha_, v7);
  return v5;
}

_QWORD *sub_1DC353FC4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t, uint64_t, uint64_t);
  uint64_t *v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40[5];
  uint64_t v41[5];
  uint64_t v42[6];

  v2 = v1;
  v39 = *v1;
  v5 = v1[5];
  v4 = v1[6];
  __swift_project_boxed_opaque_existential_1(v1 + 2, v5);
  v6 = v4;
  v38 = v4;
  v7 = *(_QWORD *)(v4 + 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 8);
  v42[3] = v5;
  v42[4] = v6;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v42);
  v8(a1, v5, v7);
  v10 = v1[10];
  v9 = v1[11];
  __swift_project_boxed_opaque_existential_1(v2 + 7, v2[10]);
  v37 = v9;
  v11 = *(_QWORD *)(v9 + 8);
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 8);
  v41[3] = v10;
  v41[4] = v9;
  v13 = __swift_allocate_boxed_opaque_existential_1(v41);
  v12(a1, v10, v11);
  v14 = v1[15];
  v15 = v1[16];
  __swift_project_boxed_opaque_existential_1(v2 + 12, v2[15]);
  v16 = *(_QWORD *)(v15 + 8);
  v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 8);
  v40[3] = v14;
  v40[4] = v15;
  v18 = __swift_allocate_boxed_opaque_existential_1(v40);
  v19 = v17(a1, v14, v16);
  v20 = MEMORY[0x1E0C80A78](v19);
  v22 = (char *)&boxed_opaque_existential_1 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = (*(uint64_t (**)(char *, uint64_t *, uint64_t, __n128))(v23 + 16))(v22, boxed_opaque_existential_1, v5, v20);
  v25 = MEMORY[0x1E0C80A78](v24);
  v27 = (char *)&boxed_opaque_existential_1 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = (*(uint64_t (**)(char *, uint64_t *, uint64_t, __n128))(v28 + 16))(v27, v13, v10, v25);
  v30 = MEMORY[0x1E0C80A78](v29);
  v32 = (char *)&boxed_opaque_existential_1 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t *, uint64_t, __n128))(v33 + 16))(v32, v18, v14, v30);
  v34 = sub_1DC10E16C((uint64_t)v22, (uint64_t)v27, (uint64_t)v32, v39, v5, v14, v10, v38, v15, v37);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v42);
  return v34;
}

id sub_1DC3541EC(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v4;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  int v12;
  uint64_t v13;
  uint64_t v15;

  sub_1DC112940();
  *(_QWORD *)&v9 = MEMORY[0x1E0C80A78](v8).n128_u64[0];
  v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (objc_msgSend(a4, sel_userInterfaceIdiom, v9) == (id)5)
  {
    v12 = 0;
  }
  else
  {
    objc_msgSend(a4, sel_horizontalSizeClass);
    v12 = 1;
  }
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v4 + 96), *(_QWORD *)(v4 + 120));
  sub_1DC0D0594(a2, v12, (uint64_t)v11);
  v13 = sub_1DC40952C();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v11, 0, 1, v13);
  sub_1DC409544();
  return objc_msgSend(a1, sel_setPreferredBehavioralStyle_, 1);
}

_QWORD *sub_1DC3542F8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *result;

  result = sub_1DC353FC4(a1);
  *a2 = result;
  return result;
}

uint64_t type metadata accessor for BrandingTitleViewRenderer()
{
  return objc_opt_self();
}

unint64_t sub_1DC354340(uint64_t a1)
{
  unint64_t result;

  result = sub_1DC354364();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1DC354364()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EDB35EB0;
  if (!qword_1EDB35EB0)
  {
    v1 = type metadata accessor for BrandingTitleViewRenderer();
    result = MEMORY[0x1DF0CAB8C](&unk_1DC42A05C, v1);
    atomic_store(result, (unint64_t *)&qword_1EDB35EB0);
  }
  return result;
}

unint64_t sub_1DC3543A8(uint64_t (*a1)(uint64_t, _UNKNOWN **))
{
  _QWORD *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t inited;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t, uint64_t);
  id v16;
  uint64_t v17;

  v3 = v1;
  v4 = *v1;
  sub_1DC0FB194();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DC40C740;
  v6 = (void *)*MEMORY[0x1E0DC1138];
  *(_QWORD *)(inited + 32) = *MEMORY[0x1E0DC1138];
  v7 = v6;
  v8 = a1(v4, &off_1EA466298);
  v9 = sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FB00);
  *(_QWORD *)(inited + 40) = v8;
  v10 = (void *)*MEMORY[0x1E0DC1140];
  *(_QWORD *)(inited + 64) = v9;
  *(_QWORD *)(inited + 72) = v10;
  v11 = v3 + 2;
  v12 = v3[5];
  v13 = v3[6];
  __swift_project_boxed_opaque_existential_1(v11, v12);
  v14 = *(_QWORD *)(v13 + 16);
  v15 = *(uint64_t (**)(uint64_t, uint64_t))(v14 + 96);
  v16 = v10;
  v17 = v15(v12, v14);
  *(_QWORD *)(inited + 104) = sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FB30);
  *(_QWORD *)(inited + 80) = v17;
  return sub_1DC0FA3C4(inited);
}

id sub_1DC3544B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  id v6;
  void *v7;
  void *v8;
  id v9;

  swift_bridgeObjectRetain();
  if ((a5 & 1) != 0)
    sub_1DC3543A8((uint64_t (*)(uint64_t, _UNKNOWN **))sub_1DC0E9F40);
  else
    sub_1DC0E9E3C();
  v6 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  v7 = (void *)sub_1DC408A1C();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1DC0FB14C();
  v8 = (void *)sub_1DC408980();
  swift_bridgeObjectRelease();
  v9 = objc_msgSend(v6, sel_initWithString_attributes_, v7, v8);

  return v9;
}

id sub_1DC35458C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  id v6;
  void *v7;
  void *v8;
  id v9;

  swift_bridgeObjectRetain();
  if ((a5 & 1) != 0)
    sub_1DC3543A8((uint64_t (*)(uint64_t, _UNKNOWN **))sub_1DC0E9E1C);
  else
    sub_1DC0E9CA4();
  v6 = objc_allocWithZone(MEMORY[0x1E0CB3778]);
  v7 = (void *)sub_1DC408A1C();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1DC0FB14C();
  v8 = (void *)sub_1DC408980();
  swift_bridgeObjectRelease();
  v9 = objc_msgSend(v6, sel_initWithString_attributes_, v7, v8);

  return v9;
}

unint64_t sub_1DC35466C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EDB2D688;
  if (!qword_1EDB2D688)
  {
    v1 = type metadata accessor for StockFeedGroup();
    result = MEMORY[0x1DF0CAB8C](&unk_1DC42A728, v1);
    atomic_store(result, (unint64_t *)&qword_1EDB2D688);
  }
  return result;
}

uint64_t sub_1DC3546B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  int *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t result;
  char v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t, uint64_t);
  uint64_t v33;

  v3 = v2;
  v6 = sub_1DC4011BC();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(a1 + 16);
  if (v10)
  {
    v30 = v3;
    v31 = a2;
    v11 = a1 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
    v12 = *(_QWORD *)(v7 + 72);
    v32 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
    v33 = v12;
    v29 = a1;
    swift_bridgeObjectRetain();
    v13 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v14 = v7;
    do
    {
      v32(v9, v11, v6);
      v15 = sub_1DC401150();
      v17 = v16;
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v13 = sub_1DC108BBC(0, v13[2] + 1, 1, v13);
      v19 = v13[2];
      v18 = v13[3];
      if (v19 >= v18 >> 1)
        v13 = sub_1DC108BBC((_QWORD *)(v18 > 1), v19 + 1, 1, v13);
      v13[2] = v19 + 1;
      v20 = &v13[2 * v19];
      v20[4] = v15;
      v20[5] = v17;
      v11 += v33;
      --v10;
      v7 = v14;
    }
    while (v10);
    swift_bridgeObjectRelease();
    v3 = v30;
    a2 = v31;
  }
  else
  {
    v13 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v21 = sub_1DC3CFCA4((uint64_t)v13);
  swift_bridgeObjectRelease();
  v22 = (int *)type metadata accessor for StockFeedPool();
  v23 = swift_bridgeObjectRetain();
  v24 = sub_1DC354A88(v23, v21);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v25 = sub_1DC4010E4();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(a2, v3, v25);
  v27 = *(_BYTE *)(v3 + v22[6]);
  v28 = *(_BYTE *)(v3 + v22[7]);
  *(_QWORD *)(a2 + v22[5]) = v24;
  *(_BYTE *)(a2 + v22[6]) = v27;
  *(_BYTE *)(a2 + v22[7]) = v28;
  return result;
}

uint64_t sub_1DC3548DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;

  v4 = type metadata accessor for NewsStockFeedGroup();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for StockFeedGroup();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC354A00(a1, (uint64_t)v9);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1DC354A44((uint64_t)v9, (uint64_t)v6);
    v10 = *((_QWORD *)v6 + 2);
    swift_bridgeObjectRetain();
    sub_1DC0926D8((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for NewsStockFeedGroup);
  }
  else
  {
    sub_1DC0926D8((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedGroup);
    v10 = MEMORY[0x1E0DEE9D8];
  }
  sub_1DC3546B4(v10, a2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DC354A00(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for StockFeedGroup();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC354A44(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for NewsStockFeedGroup();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC354A88(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  BOOL v25;
  uint64_t v26;
  _QWORD *v27;
  BOOL v28;
  void (*v29)(char *, char *, uint64_t);
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  void (*v35)(char *, uint64_t, uint64_t, __n128);
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;

  v5 = sub_1DC4011BC();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v38 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v8);
  v41 = (char *)&v33 - v10;
  result = MEMORY[0x1E0DEE9D8];
  v42 = MEMORY[0x1E0DEE9D8];
  v37 = *(_QWORD *)(a1 + 16);
  if (v37)
  {
    v33 = v2;
    v12 = 0;
    v13 = *(_QWORD *)(v6 + 72);
    v34 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    v36 = a1 + v34;
    v35 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v6 + 16);
    v39 = a2 + 56;
    v40 = v13;
    while (1)
    {
      v14 = v5;
      v35(v41, v36 + v40 * v12, v5, v9);
      v15 = sub_1DC401150();
      v17 = v16;
      v18 = a2;
      if (!*(_QWORD *)(a2 + 16))
        goto LABEL_20;
      v19 = v15;
      sub_1DC409AC0();
      sub_1DC408AF4();
      v20 = sub_1DC409AF0();
      v21 = -1 << *(_BYTE *)(a2 + 32);
      v22 = v20 & ~v21;
      if (((*(_QWORD *)(v39 + ((v22 >> 3) & 0xFFFFFFFFFFFFF8)) >> v22) & 1) == 0)
        goto LABEL_20;
      v23 = *(_QWORD *)(v18 + 48);
      v24 = (_QWORD *)(v23 + 16 * v22);
      v25 = *v24 == v19 && v24[1] == v17;
      if (!v25 && (sub_1DC4099E8() & 1) == 0)
        break;
LABEL_3:
      swift_bridgeObjectRelease();
      v5 = v14;
      (*(void (**)(char *, uint64_t))(v6 + 8))(v41, v14);
LABEL_4:
      ++v12;
      a2 = v18;
      if (v12 == v37)
        return v42;
    }
    v26 = ~v21;
    while (1)
    {
      v22 = (v22 + 1) & v26;
      if (((*(_QWORD *)(v39 + ((v22 >> 3) & 0xFFFFFFFFFFFFF8)) >> v22) & 1) == 0)
        break;
      v27 = (_QWORD *)(v23 + 16 * v22);
      v28 = *v27 == v19 && v27[1] == v17;
      if (v28 || (sub_1DC4099E8() & 1) != 0)
        goto LABEL_3;
    }
LABEL_20:
    swift_bridgeObjectRelease();
    v29 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
    v5 = v14;
    v29(v38, v41, v14);
    v30 = v42;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1DC2AD4BC(0, *(_QWORD *)(v30 + 16) + 1, 1);
      v30 = v42;
    }
    v32 = *(_QWORD *)(v30 + 16);
    v31 = *(_QWORD *)(v30 + 24);
    if (v32 >= v31 >> 1)
    {
      sub_1DC2AD4BC(v31 > 1, v32 + 1, 1);
      v30 = v42;
    }
    *(_QWORD *)(v30 + 16) = v32 + 1;
    v29((char *)(v30 + v34 + v32 * v40), v38, v14);
    v42 = v30;
    goto LABEL_4;
  }
  return result;
}

uint64_t type metadata accessor for StockFeedPool()
{
  uint64_t result;

  result = qword_1EDB2D178;
  if (!qword_1EDB2D178)
    return swift_getSingletonMetadata();
  return result;
}

_QWORD *sub_1DC354DA0(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1DC4010E4();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[6];
    *(_QWORD *)((char *)a1 + a3[5]) = *(_QWORD *)((char *)a2 + a3[5]);
    *((_BYTE *)a1 + v8) = *((_BYTE *)a2 + v8);
    *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for StocksActivity.StockFeed.Series(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1DC4010E4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DC354E84(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1DC4010E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_BYTE *)(a1 + v7) = *(_BYTE *)(a2 + v7);
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1DC354EF8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;

  v6 = sub_1DC4010E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_1DC354F7C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1DC4010E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_BYTE *)(a1 + v7) = *(_BYTE *)(a2 + v7);
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_1DC354FEC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1DC4010E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  swift_bridgeObjectRelease();
  v7 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  *(_BYTE *)(a1 + v7) = *(_BYTE *)(a2 + v7);
  return a1;
}

uint64_t sub_1DC355064()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC355070(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1DC4010E4();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_1DC3550EC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC3550F8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1DC4010E4();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t sub_1DC355170()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1DC4010E4();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1DC3551F0()
{
  id v0;
  id v1;
  uint64_t result;

  v0 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v1 = objc_msgSend(v0, sel_bundleIdentifier);

  if (v1)
  {
    sub_1DC408A4C();

  }
  sub_1DC09BDF8();
  result = sub_1DC40958C();
  qword_1EDB2CE00 = result;
  return result;
}

uint64_t sub_1DC3552C0()
{
  uint64_t v0;
  id v1;
  id v2;

  v0 = sub_1DC403F64();
  __swift_allocate_value_buffer(v0, qword_1EDB5E250);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EDB5E250);
  v1 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v2 = objc_msgSend(v1, sel_bundleIdentifier);

  if (v2)
  {
    sub_1DC408A4C();

  }
  return sub_1DC403F58();
}

uint64_t sub_1DC3553AC()
{
  uint64_t v0;
  id v1;
  id v2;

  v0 = sub_1DC403F64();
  __swift_allocate_value_buffer(v0, qword_1F0368BF0);
  __swift_project_value_buffer(v0, (uint64_t)qword_1F0368BF0);
  v1 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v2 = objc_msgSend(v1, sel_bundleIdentifier);

  if (v2)
  {
    sub_1DC408A4C();

  }
  return sub_1DC403F58();
}

uint64_t *sub_1DC355498(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t v14;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1DC40124C();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v13 = a3[7];
    *(uint64_t *)((char *)v4 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
    *(uint64_t *)((char *)v4 + v13) = *(uint64_t *)((char *)a2 + v13);
  }
  swift_retain();
  return v4;
}

uint64_t sub_1DC355558(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_1DC40124C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  return swift_release();
}

_QWORD *sub_1DC3555B4(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1DC40124C();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  v12 = a3[7];
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  *(_QWORD *)((char *)a1 + v12) = *(_QWORD *)((char *)a2 + v12);
  swift_retain();
  return a1;
}

_QWORD *sub_1DC35564C(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1DC40124C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *sub_1DC3556F8(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1DC40124C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[7];
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  *(_QWORD *)((char *)a1 + v10) = *(_QWORD *)((char *)a2 + v10);
  return a1;
}

_QWORD *sub_1DC355778(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1DC40124C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[7];
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  *(_QWORD *)((char *)a1 + v11) = *(_QWORD *)((char *)a2 + v11);
  swift_release();
  return a1;
}

uint64_t sub_1DC355808()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC355814(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1DC40124C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t sub_1DC355890()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC35589C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_1DC40124C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for ManageWatchlistsMoveWatchlistBlueprintModifier()
{
  uint64_t result;

  result = qword_1F0352430;
  if (!qword_1F0352430)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1DC35594C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1DC40124C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1DC3559DC(void (*a1)(char *), void (*a2)(uint64_t *), uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  void (*v35)(char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *);
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(uint64_t *);

  v50 = a3;
  v51 = a2;
  sub_1DC1736C8(0, &qword_1F034E398, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB9A28]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (uint64_t *)((char *)&v36 - v7);
  v42 = sub_1DC405C68();
  v39 = *(_QWORD *)(v42 - 8);
  MEMORY[0x1E0C80A78](v42);
  v41 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC1736C8(0, (unint64_t *)&qword_1F0350F40, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790]);
  v11 = v10;
  v46 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v40 = (char *)&v36 - v12;
  sub_1DC089DA4(0, (unint64_t *)&qword_1F034E3A0, (uint64_t (*)(uint64_t))sub_1DC142B5C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v36 - v14;
  sub_1DC142B5C();
  v48 = *(_QWORD *)(v16 - 8);
  v49 = v16;
  MEMORY[0x1E0C80A78](v16);
  v45 = (char *)&v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC1DD7B8();
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v36 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC1736C8(0, (unint64_t *)&qword_1F034C028, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60]);
  v22 = v21;
  v23 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  v43 = (char *)&v36 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v25);
  v27 = (char *)&v36 - v26;
  v47 = v11;
  v38 = a1;
  sub_1DC406D60();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v20, 1, v22) == 1)
  {
    sub_1DC355FA0((uint64_t)v20);
    sub_1DC355FDC();
    *v8 = swift_allocError();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0DB99F0], v5);
    v51(v8);
    return (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 8))(v8, v5);
  }
  else
  {
    v36 = v6;
    v37 = v5;
    (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v27, v20, v22);
    type metadata accessor for ManageWatchlistsMoveWatchlistBlueprintModifier();
    sub_1DC4011E0();
    sub_1DC4047BC();
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48))(v15, 1, v49) == 1)
    {
      sub_1DC30ADE4((uint64_t)v15);
      sub_1DC355FDC();
      *v8 = swift_allocError();
      v30 = v36;
      v29 = v37;
      (*(void (**)(uint64_t *, _QWORD, uint64_t))(v36 + 104))(v8, *MEMORY[0x1E0DB99F0], v37);
      v51(v8);
      (*(void (**)(uint64_t *, uint64_t))(v30 + 8))(v8, v29);
      return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v27, v22);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v48 + 32))(v45, v15, v49);
      (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v43, v27, v22);
      sub_1DC40472C();
      v31 = v40;
      (*(void (**)(void))(v46 + 16))();
      sub_1DC406CB8();
      LODWORD(v44) = *MEMORY[0x1E0DBA8E8];
      v32 = v39;
      v38 = *(void (**)(char *))(v39 + 104);
      v34 = v41;
      v33 = v42;
      v38(v41);
      sub_1DC405B90();
      v39 = *(_QWORD *)(v32 + 8);
      ((void (*)(char *, uint64_t))v39)(v34, v33);
      type metadata accessor for ManageWatchlistsModel();
      sub_1DC142C7C();
      sub_1DC080808((unint64_t *)&unk_1F0350F30, (uint64_t (*)(uint64_t))type metadata accessor for ManageWatchlistsModel, (uint64_t)&unk_1DC423338);
      sub_1DC405548();
      v51(v8);
      (*(void (**)(uint64_t *, uint64_t))(v36 + 8))(v8, v37);
      ((void (*)(char *, _QWORD, uint64_t))v38)(v34, v44, v33);
      sub_1DC405C74();
      swift_release();
      ((void (*)(char *, uint64_t))v39)(v34, v33);
      (*(void (**)(char *, uint64_t))(v46 + 8))(v31, v47);
      v35 = *(void (**)(char *, uint64_t))(v23 + 8);
      v35(v43, v22);
      (*(void (**)(char *, uint64_t))(v48 + 8))(v45, v49);
      return ((uint64_t (*)(char *, uint64_t))v35)(v27, v22);
    }
  }
}

uint64_t sub_1DC355F74()
{
  return sub_1DC080808(&qword_1F0352470, (uint64_t (*)(uint64_t))type metadata accessor for ManageWatchlistsMoveWatchlistBlueprintModifier, (uint64_t)&unk_1DC42A1D8);
}

uint64_t sub_1DC355FA0(uint64_t a1)
{
  uint64_t v2;

  sub_1DC1DD7B8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1DC355FDC()
{
  unint64_t result;

  result = qword_1F0352478;
  if (!qword_1F0352478)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC42A2C8, &type metadata for ManageWatchlistsMoveWatchlistBlueprintModifier.Errors);
    atomic_store(result, (unint64_t *)&qword_1F0352478);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ManageWatchlistsMoveWatchlistBlueprintModifier.Errors(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1DC356060 + 4 * byte_1DC42A180[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1DC356080 + 4 * byte_1DC42A185[v4]))();
}

_BYTE *sub_1DC356060(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1DC356080(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC356088(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC356090(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC356098(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC3560A0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ManageWatchlistsMoveWatchlistBlueprintModifier.Errors()
{
  return &type metadata for ManageWatchlistsMoveWatchlistBlueprintModifier.Errors;
}

unint64_t sub_1DC3560C0()
{
  unint64_t result;

  result = qword_1F0352480;
  if (!qword_1F0352480)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC42A2A0, &type metadata for ManageWatchlistsMoveWatchlistBlueprintModifier.Errors);
    atomic_store(result, (unint64_t *)&qword_1F0352480);
  }
  return result;
}

double sub_1DC356104()
{
  id v0;
  double result;

  v0 = objc_msgSend((id)objc_opt_self(), sel_configurationWithPointSize_weight_, 4, 64.0);
  xmmword_1F0368C10 = xmmword_1DC42A310;
  xmmword_1F0368C20 = xmmword_1DC42A320;
  result = 32.0;
  xmmword_1F0368C30 = xmmword_1DC42A330;
  xmmword_1F0368C40 = xmmword_1DC42A340;
  qword_1F0368C50 = 0x4034000000000000;
  qword_1F0368C58 = (uint64_t)v0;
  return result;
}

double sub_1DC356178()
{
  id v0;
  double result;

  v0 = objc_msgSend((id)objc_opt_self(), sel_configurationWithPointSize_weight_, 4, 40.0);
  xmmword_1F0368C60 = xmmword_1DC42A350;
  xmmword_1F0368C70 = xmmword_1DC42A360;
  result = 29.0;
  xmmword_1F0368C80 = xmmword_1DC42A370;
  xmmword_1F0368C90 = xmmword_1DC42A380;
  qword_1F0368CA0 = 0x4030000000000000;
  qword_1F0368CA8 = (uint64_t)v0;
  return result;
}

id sub_1DC3561EC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  char v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  uint64_t inited;
  void *v15;
  uint64_t v16;
  void *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(uint64_t, uint64_t);
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  id v28;
  void *v29;
  void *v30;
  id v31;
  char v32;
  uint64_t (*v33)(void);
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t (*v41)(void);
  id v42;
  char v43;
  void *v44;
  uint64_t (*v45)(void);
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v50;
  _QWORD *v51;
  id v52;
  id v53;
  id v54;

  v1 = v0;
  v2 = (void *)objc_opt_self();
  sub_1DC401900();
  v3 = objc_msgSend(v2, sel_systemFontOfSize_weight_);
  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC1288]), sel_init);
  if (*(_QWORD *)(sub_1DC4000A0() + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_1DC210430();
    sub_1DC210474();
    v5 = sub_1DC4089C8();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
    {
      objc_msgSend(v3, sel_capHeight);
      v7 = v6;
      objc_msgSend(v3, sel_descender);
      v9 = v7 - v8;
      v10 = *(double *)(v1 + 64);
      objc_msgSend(v3, sel_pointSize);
      v12 = round(v9 + v10 * v11);
      objc_msgSend(v4, sel_setMinimumLineHeight_, v12);
      objc_msgSend(v4, sel_setMaximumLineHeight_, v12);
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  objc_msgSend(v4, sel_setAlignment_, 1);
  LODWORD(v13) = 0.5;
  objc_msgSend(v4, sel_setHyphenationFactor_, v13);
  objc_msgSend(v4, sel_setLineBreakStrategy_, 0xFFFFLL);
  sub_1DC089DA4(0, (unint64_t *)&qword_1EDB40090, (uint64_t (*)(uint64_t))sub_1DC112C08, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DC40FA70;
  v15 = (void *)*MEMORY[0x1E0DC1138];
  *(_QWORD *)(inited + 32) = *MEMORY[0x1E0DC1138];
  v16 = sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FB00);
  *(_QWORD *)(inited + 40) = v3;
  v17 = (void *)*MEMORY[0x1E0DC1140];
  *(_QWORD *)(inited + 64) = v16;
  *(_QWORD *)(inited + 72) = v17;
  v18 = (_QWORD *)(v1 + 16);
  v50 = v1;
  v51 = (_QWORD *)(v1 + 16);
  v19 = *(_QWORD *)(v1 + 40);
  v20 = *(_QWORD *)(v1 + 48);
  __swift_project_boxed_opaque_existential_1(v18, v19);
  v21 = *(_QWORD *)(v20 + 16);
  v22 = *(uint64_t (**)(uint64_t, uint64_t))(v21 + 48);
  swift_bridgeObjectRetain();
  v23 = v15;
  v54 = v3;
  v24 = v17;
  v25 = v22(v19, v21);
  v26 = sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FB30);
  *(_QWORD *)(inited + 80) = v25;
  v27 = (void *)*MEMORY[0x1E0DC1178];
  *(_QWORD *)(inited + 104) = v26;
  *(_QWORD *)(inited + 112) = v27;
  *(_QWORD *)(inited + 144) = sub_1DC0821D4(0, &qword_1EDB3F9E8);
  *(_QWORD *)(inited + 120) = v4;
  v52 = v27;
  v53 = v4;
  sub_1DC0FA3C4(inited);
  v28 = objc_allocWithZone(MEMORY[0x1E0CB3778]);
  v29 = (void *)sub_1DC408A1C();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1DC080808((unint64_t *)&qword_1EDB3F988, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1DC40D90C);
  v30 = (void *)sub_1DC408980();
  swift_bridgeObjectRelease();
  v31 = objc_msgSend(v28, sel_initWithString_attributes_, v29, v30);

  sub_1DC1790B0();
  sub_1DC409610();
  if ((v32 & 1) == 0)
  {
    v33 = MEMORY[0x1E0DEB848];
    sub_1DC35E2FC(0, &qword_1F0352590, MEMORY[0x1E0DEA790], MEMORY[0x1E0DEA7A0], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DEB848]);
    v34 = v24;
    sub_1DC35E2A8(&qword_1F0352598, &qword_1F0352590, (uint64_t (*)(_QWORD, uint64_t, uint64_t))v33, MEMORY[0x1E0DEB8A8]);
    swift_bridgeObjectRetain();
    v35 = sub_1DC409574();
    v37 = v36;
    v39 = *(_QWORD *)(v50 + 40);
    v38 = *(_QWORD *)(v50 + 48);
    __swift_project_boxed_opaque_existential_1(v51, v39);
    v40 = (void *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)(v38 + 16) + 104))(v39);
    objc_msgSend(v31, sel_addAttribute_value_range_, v34, v40, v35, v37);

  }
  v41 = MEMORY[0x1E0DEA4B0];
  sub_1DC35E2FC(0, &qword_1F0352580, MEMORY[0x1E0DEA790], MEMORY[0x1E0DEA7A0], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DEA4B0]);
  sub_1DC35E2A8(&qword_1F0352588, &qword_1F0352580, (uint64_t (*)(_QWORD, uint64_t, uint64_t))v41, MEMORY[0x1E0DEA4E8]);
  sub_1DC409628();
  v42 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC1288]), sel_init);
  if (*(_QWORD *)(sub_1DC4000A0() + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_1DC210430();
    sub_1DC210474();
    v43 = sub_1DC4089C8();
    swift_bridgeObjectRelease();
    v44 = v54;
    if ((v43 & 1) != 0)
    {
      objc_msgSend(v54, sel_lineHeight);
      objc_msgSend(v42, sel_setMinimumLineHeight_);
      objc_msgSend(v54, sel_lineHeight);
      objc_msgSend(v42, sel_setMaximumLineHeight_);
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    v44 = v54;
  }
  objc_msgSend(v42, sel_setAlignment_, 1);
  objc_msgSend(v53, sel_hyphenationFactor);
  objc_msgSend(v42, sel_setHyphenationFactor_);
  objc_msgSend(v42, sel_setLineBreakStrategy_, 0xFFFFLL);
  v45 = MEMORY[0x1E0DEB848];
  sub_1DC35E2FC(0, &qword_1F0352590, MEMORY[0x1E0DEA790], MEMORY[0x1E0DEA7A0], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DEB848]);
  sub_1DC35E2A8(&qword_1F0352598, &qword_1F0352590, (uint64_t (*)(_QWORD, uint64_t, uint64_t))v45, MEMORY[0x1E0DEB8A8]);
  swift_bridgeObjectRetain();
  v46 = v42;
  v47 = sub_1DC409574();
  objc_msgSend(v31, sel_addAttribute_value_range_, v52, v46, v47, v48);

  return v31;
}

id sub_1DC356924()
{
  _QWORD *v0;
  _QWORD *v1;
  id v2;
  uint64_t v3;
  void *v4;
  double v5;
  double v6;
  void *v7;
  double v8;
  double v9;
  uint64_t inited;
  void *v11;
  id v12;
  void *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t, uint64_t);
  id v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  id v24;
  id v25;
  void *v26;
  void *v27;
  id v28;

  v1 = v0;
  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC1288]), sel_init);
  v3 = sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FB00);
  v4 = (void *)sub_1DC4092F8();
  objc_msgSend(v4, sel_lineHeight);
  v6 = v5;

  objc_msgSend(v2, sel_setMinimumLineHeight_, v6);
  v7 = (void *)sub_1DC4092F8();
  objc_msgSend(v7, sel_lineHeight);
  v9 = v8;

  objc_msgSend(v2, sel_setMaximumLineHeight_, v9);
  objc_msgSend(v2, sel_setLineBreakStrategy_, 0xFFFFLL);
  sub_1DC089DA4(0, (unint64_t *)&qword_1EDB40090, (uint64_t (*)(uint64_t))sub_1DC112C08, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DC40FA70;
  v11 = (void *)*MEMORY[0x1E0DC1138];
  *(_QWORD *)(inited + 32) = *MEMORY[0x1E0DC1138];
  swift_bridgeObjectRetain();
  v12 = v11;
  *(_QWORD *)(inited + 40) = sub_1DC4092F8();
  v13 = (void *)*MEMORY[0x1E0DC1140];
  *(_QWORD *)(inited + 64) = v3;
  *(_QWORD *)(inited + 72) = v13;
  v14 = v1 + 2;
  v16 = v1[5];
  v15 = v1[6];
  __swift_project_boxed_opaque_existential_1(v14, v16);
  v17 = *(_QWORD *)(v15 + 16);
  v18 = *(uint64_t (**)(uint64_t, uint64_t))(v17 + 48);
  v19 = v13;
  v20 = v18(v16, v17);
  v21 = sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FB30);
  *(_QWORD *)(inited + 80) = v20;
  v22 = (void *)*MEMORY[0x1E0DC1178];
  *(_QWORD *)(inited + 104) = v21;
  *(_QWORD *)(inited + 112) = v22;
  *(_QWORD *)(inited + 144) = sub_1DC0821D4(0, &qword_1EDB3F9E8);
  *(_QWORD *)(inited + 120) = v2;
  v23 = v22;
  v24 = v2;
  sub_1DC0FA3C4(inited);
  v25 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  v26 = (void *)sub_1DC408A1C();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1DC080808((unint64_t *)&qword_1EDB3F988, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1DC40D90C);
  v27 = (void *)sub_1DC408980();
  swift_bridgeObjectRelease();
  v28 = objc_msgSend(v25, sel_initWithString_attributes_, v26, v27);

  return v28;
}

id sub_1DC356C24()
{
  _QWORD *v0;
  _QWORD *v1;
  id v2;
  uint64_t v3;
  void *v4;
  double v5;
  double v6;
  void *v7;
  double v8;
  double v9;
  uint64_t inited;
  void *v11;
  id v12;
  void *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t, uint64_t);
  id v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  id v24;
  id v25;
  void *v26;
  void *v27;
  id v28;

  v1 = v0;
  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC1288]), sel_init);
  v3 = sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FB00);
  v4 = (void *)sub_1DC4092F8();
  objc_msgSend(v4, sel_lineHeight);
  v6 = v5;

  objc_msgSend(v2, sel_setMinimumLineHeight_, v6);
  v7 = (void *)sub_1DC4092F8();
  objc_msgSend(v7, sel_lineHeight);
  v9 = v8;

  objc_msgSend(v2, sel_setMaximumLineHeight_, v9);
  objc_msgSend(v2, sel_setLineBreakStrategy_, 0xFFFFLL);
  sub_1DC089DA4(0, (unint64_t *)&qword_1EDB40090, (uint64_t (*)(uint64_t))sub_1DC112C08, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DC40FA70;
  v11 = (void *)*MEMORY[0x1E0DC1138];
  *(_QWORD *)(inited + 32) = *MEMORY[0x1E0DC1138];
  swift_bridgeObjectRetain();
  v12 = v11;
  sub_1DC401900();
  *(_QWORD *)(inited + 40) = sub_1DC4092F8();
  v13 = (void *)*MEMORY[0x1E0DC1140];
  *(_QWORD *)(inited + 64) = v3;
  *(_QWORD *)(inited + 72) = v13;
  v14 = v1 + 2;
  v16 = v1[5];
  v15 = v1[6];
  __swift_project_boxed_opaque_existential_1(v14, v16);
  v17 = *(_QWORD *)(v15 + 16);
  v18 = *(uint64_t (**)(uint64_t, uint64_t))(v17 + 48);
  v19 = v13;
  v20 = v18(v16, v17);
  v21 = sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FB30);
  *(_QWORD *)(inited + 80) = v20;
  v22 = (void *)*MEMORY[0x1E0DC1178];
  *(_QWORD *)(inited + 104) = v21;
  *(_QWORD *)(inited + 112) = v22;
  *(_QWORD *)(inited + 144) = sub_1DC0821D4(0, &qword_1EDB3F9E8);
  *(_QWORD *)(inited + 120) = v2;
  v23 = v22;
  v24 = v2;
  sub_1DC0FA3C4(inited);
  v25 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  v26 = (void *)sub_1DC408A1C();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1DC080808((unint64_t *)&qword_1EDB3F988, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1DC40D90C);
  v27 = (void *)sub_1DC408980();
  swift_bridgeObjectRelease();
  v28 = objc_msgSend(v25, sel_initWithString_attributes_, v26, v27);

  return v28;
}

id sub_1DC356F3C()
{
  void *v0;
  id v1;
  id v2;
  void *v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  char isUniquelyReferenced_nonNull_native;
  void *v13;
  id v14;
  id v15;
  char v16;
  id v17;
  void *v18;
  void *v19;
  id v20;
  _OWORD v22[2];
  __int128 v23;
  uint64_t v24;

  v0 = (void *)objc_opt_self();
  v1 = objc_msgSend(v0, sel_currentDevice);
  v2 = objc_msgSend(v1, sel_userInterfaceIdiom);

  if (v2 == (id)5)
  {
    v3 = (void *)objc_opt_self();
    objc_msgSend(v3, sel_defaultFontSize);
    v4 = objc_msgSend(v3, sel_boldSystemFontOfSize_);
  }
  else
  {
    sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FB00);
    v4 = (id)sub_1DC4092F8();
  }
  v5 = v4;
  sub_1DC0FA3C4(MEMORY[0x1E0DEE9D8]);
  v6 = objc_msgSend(v0, sel_currentDevice);
  v7 = objc_msgSend(v6, sel_userInterfaceIdiom);

  if (v7 != (id)5)
  {
    v8 = (void *)*MEMORY[0x1E0DC1140];
    v9 = (void *)objc_opt_self();
    v10 = v8;
    v11 = objc_msgSend(v9, sel_whiteColor);
    v24 = sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FB30);
    *(_QWORD *)&v23 = v11;
    sub_1DC0FA0E4(&v23, v22);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_1DC35A674(v22, v10, isUniquelyReferenced_nonNull_native);

    swift_bridgeObjectRelease();
  }
  v13 = (void *)*MEMORY[0x1E0DC1138];
  v24 = sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FB00);
  *(_QWORD *)&v23 = v5;
  sub_1DC0FA0E4(&v23, v22);
  v14 = v13;
  v15 = v5;
  v16 = swift_isUniquelyReferenced_nonNull_native();
  sub_1DC35A674(v22, v14, v16);

  swift_bridgeObjectRelease();
  v17 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  swift_bridgeObjectRetain();
  v18 = (void *)sub_1DC408A1C();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1DC080808((unint64_t *)&qword_1EDB3F988, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1DC40D90C);
  v19 = (void *)sub_1DC408980();
  swift_bridgeObjectRelease();
  v20 = objc_msgSend(v17, sel_initWithString_attributes_, v18, v19);

  return v20;
}

uint64_t sub_1DC357248(void *a1)
{
  uint64_t (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  char v27;
  id v28;
  id v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  double *v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  id v58;
  double v59;
  id v60;
  void *v61;
  double v62;
  id v63;
  id v64;
  double v65;
  double v66;
  uint64_t inited;
  void *v68;
  id v69;
  id v70;
  uint64_t v71;
  void *v72;
  id v73;
  id v74;
  void *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  double *v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  char *v92;
  char v93[16];
  _QWORD **v94;
  _QWORD *v95[2];

  v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1DC089DA4(0, &qword_1F0352530, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAF138], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v84 = (char *)&v79 - v4;
  sub_1DC089DA4(0, &qword_1F0352538, (uint64_t (*)(uint64_t))sub_1DC358324, v2);
  MEMORY[0x1E0C80A78](v5);
  v85 = (char *)&v79 - v6;
  sub_1DC358324();
  v86 = v7;
  v83 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v81 = (uint64_t)&v79 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v82 = (uint64_t)&v79 - v10;
  v11 = sub_1DC3FFC20();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v79 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v79 - v16;
  v88 = sub_1DC3FFC50();
  v91 = *(_QWORD *)(v88 - 8);
  MEMORY[0x1E0C80A78](v88);
  v80 = (char *)&v79 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v20 = MEMORY[0x1E0C80A78](v19).n128_u64[0];
  v92 = (char *)&v79 - v21;
  v22 = objc_msgSend(a1, sel_string, v20);
  v23 = sub_1DC408A4C();
  v25 = v24;

  v95[0] = (_QWORD *)46;
  v95[1] = (_QWORD *)0xE100000000000000;
  v94 = v95;
  sub_1DC35DC0C(sub_1DC35DDE8, (uint64_t)v93, v23, v25);
  v27 = v26;
  v89 = v23;
  v90 = v25;
  sub_1DC408B18();
  if ((v27 & 1) == 0)
  {
    sub_1DC408B24();
    sub_1DC408BA8();
  }
  v28 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3778]), sel_initWithAttributedString_, a1);
  v29 = a1;
  sub_1DC3FFC68();
  sub_1DC3FFC2C();
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v14, v17, v11);
  sub_1DC080808(&qword_1F0352550, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAF160], MEMORY[0x1E0CAF178]);
  v95[0] = (_QWORD *)sub_1DC408C20();
  sub_1DC35C0E8(v95);
  v30 = v95[0];
  (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v11);
  v31 = v30[2];
  v32 = v88;
  v33 = v86;
  v34 = (uint64_t)v85;
  if (!v31)
  {
    v57 = sub_1DC3FFC14();
    v39 = (uint64_t)v84;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 56))(v84, 1, 1, v57);
    goto LABEL_9;
  }
  v35 = v31 - 1;
  v36 = sub_1DC3FFC14();
  v37 = *(_QWORD *)(v36 - 8);
  v38 = (unint64_t)v30
      + ((*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80))
      + *(_QWORD *)(v37 + 72) * v35;
  v39 = (uint64_t)v84;
  (*(void (**)(char *, unint64_t, uint64_t))(v37 + 16))(v84, v38, v36);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v37 + 56))(v39, 0, 1, v36);
  v40 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v37 + 48))(v39, 1, v36);
  v41 = v91;
  if (v40 == 1)
  {
LABEL_9:
    sub_1DC0B091C(v39, &qword_1F0352530, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAF138]);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v83 + 56))(v34, 1, 1, v33);
    v44 = v87;
    goto LABEL_10;
  }
  sub_1DC3FFC08();
  (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v39, v36);
  v42 = v83;
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v83 + 56))(v34, 0, 1, v33);
  v43 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v42 + 48))(v34, 1, v33);
  v44 = v87;
  if (v43 == 1)
  {
LABEL_10:
    v52 = v32;
    v54 = v28;
    swift_release();
    sub_1DC0B091C(v34, &qword_1F0352538, (uint64_t (*)(uint64_t))sub_1DC358324);
    goto LABEL_11;
  }
  v45 = v82;
  sub_1DC092ED0(v34, v82, (uint64_t (*)(_QWORD))sub_1DC358324);
  v46 = v30[2];
  swift_release();
  if (v46 < 2)
  {
    v52 = v32;
    v54 = v28;
    v56 = v45;
  }
  else
  {
    v47 = *MEMORY[0x1E0DC1140];
    v48 = v45;
    v50 = *((_QWORD *)v44 + 5);
    v49 = *((_QWORD *)v44 + 6);
    __swift_project_boxed_opaque_existential_1((_QWORD *)v44 + 2, v50);
    v51 = (void *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)(v49 + 16) + 104))(v50);
    sub_1DC0990BC(v48, v81, (uint64_t (*)(_QWORD))sub_1DC358324);
    (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v80, v92, v32);
    sub_1DC080808(&qword_1F0352558, (uint64_t (*)(uint64_t))sub_1DC358324, MEMORY[0x1E0DEB8A8]);
    sub_1DC080808(&qword_1F0352560, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAF240], MEMORY[0x1E0CAF230]);
    v52 = v32;
    v53 = sub_1DC409568();
    v54 = v28;
    objc_msgSend(v28, sel_addAttribute_value_range_, v47, v51, v53, v55);

    v56 = v48;
  }
  sub_1DC35DE3C(v56);
LABEL_11:
  v58 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC1288]), sel_init);
  objc_msgSend(v58, sel_setAlignment_, 1);
  v59 = v44[14];
  v60 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC37F8]), sel_initForTextStyle_, *MEMORY[0x1E0DC4A88]);
  v61 = (void *)objc_opt_self();
  v62 = *MEMORY[0x1E0DC1440];
  v63 = objc_msgSend(v61, sel_systemFontOfSize_weight_, v59, *MEMORY[0x1E0DC1440]);
  v64 = objc_msgSend(v60, sel_scaledFontForFont_maximumPointSize_, v63, 18.0);

  objc_msgSend(v64, sel_pointSize);
  v66 = v65;

  sub_1DC089DA4(0, (unint64_t *)&qword_1EDB40090, (uint64_t (*)(uint64_t))sub_1DC112C08, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DC40C740;
  v68 = (void *)*MEMORY[0x1E0DC1138];
  *(_QWORD *)(inited + 32) = *MEMORY[0x1E0DC1138];
  v69 = v68;
  v70 = objc_msgSend(v61, sel_systemFontOfSize_weight_, v66, v62);
  v71 = sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FB00);
  *(_QWORD *)(inited + 40) = v70;
  v72 = (void *)*MEMORY[0x1E0DC1178];
  *(_QWORD *)(inited + 64) = v71;
  *(_QWORD *)(inited + 72) = v72;
  *(_QWORD *)(inited + 104) = sub_1DC0821D4(0, &qword_1EDB3F9E8);
  *(_QWORD *)(inited + 80) = v58;
  v73 = v72;
  v74 = v58;
  sub_1DC0FA3C4(inited);
  type metadata accessor for Key(0);
  sub_1DC080808((unint64_t *)&qword_1EDB3F988, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1DC40D90C);
  v75 = (void *)sub_1DC408980();
  swift_bridgeObjectRelease();
  v76 = sub_1DC408B18();
  swift_bridgeObjectRelease();
  objc_msgSend(v54, sel_addAttributes_range_, v75, 0, v76);

  sub_1DC0821D4(0, &qword_1EDB3F8D8);
  v77 = sub_1DC409184();

  (*(void (**)(char *, uint64_t))(v91 + 8))(v92, v52);
  return v77;
}

void sub_1DC357B3C(void *a1, char a2)
{
  uint64_t v2;
  uint64_t *v5;
  id v6;

  objc_msgSend(a1, sel_setContentMode_, 4);
  if ((a2 & 1) != 0)
  {
    if (qword_1F034ADE8 != -1)
      swift_once();
    v5 = &qword_1F0368918;
  }
  else
  {
    if (qword_1F034ADE0 != -1)
      swift_once();
    v5 = &qword_1F0368910;
  }
  v6 = objc_msgSend((id)*v5, sel_imageWithConfiguration_, *(_QWORD *)(v2 + 128));
  objc_msgSend(a1, sel_setImage_, v6);

}

void sub_1DC357C1C(void *a1, unsigned __int8 a2)
{
  _QWORD *v2;
  _QWORD *v3;
  int v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  void *v16;
  id v17;
  uint64_t v18;

  v3 = v2;
  v5 = a2;
  objc_msgSend(a1, sel_setContentMode_, 4);
  if (qword_1F034ADF0 != -1)
    swift_once();
  v6 = objc_msgSend((id)qword_1F0368920, sel_imageWithConfiguration_, v2[16]);
  v17 = v6;
  if (v5 == 2)
  {
    objc_msgSend(a1, sel_setImage_, v6);

  }
  else
  {
    v8 = v2[5];
    v7 = v2[6];
    __swift_project_boxed_opaque_existential_1(v3 + 2, v3[5]);
    (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(_QWORD *)(v7 + 16) + 32))(&v18, v8);
    if ((v5 & 1) != 0)
    {
      v13 = v3[5];
      v12 = v3[6];
      __swift_project_boxed_opaque_existential_1(v3 + 2, v13);
      v14 = (id)(*(uint64_t (**)(uint64_t))(*(_QWORD *)(v12 + 16) + 104))(v13);
    }
    else
    {
      v9 = v18;
      v10 = (void *)objc_opt_self();
      if (v9 == 1)
        v11 = objc_msgSend(v10, sel_whiteColor);
      else
        v11 = objc_msgSend(v10, sel_blackColor);
      v14 = v11;
    }
    v15 = v14;
    v16 = (void *)sub_1DC409394();

    objc_msgSend(a1, sel_setImage_, v16);
  }
}

void sub_1DC357DC4(void *a1)
{
  _QWORD *v1;
  id v3;
  id v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;

  v3 = objc_msgSend((id)objc_opt_self(), sel_currentDevice);
  v4 = objc_msgSend(v3, sel_userInterfaceIdiom);

  if (v4 != (id)5)
  {
    v5 = v1 + 2;
    v7 = v1[5];
    v6 = v1[6];
    __swift_project_boxed_opaque_existential_1(v5, v7);
    v8 = (void *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)(v6 + 16) + 104))(v7);
    objc_msgSend(a1, sel_setBackgroundColor_, v8);

  }
  v9 = objc_msgSend(a1, sel_layer);
  objc_msgSend(v9, sel_setCornerRadius_, 14.0);

  v10 = objc_msgSend(a1, sel_layer);
  objc_msgSend(v10, sel_setCornerCurve_, *MEMORY[0x1E0CD2A68]);

}

void sub_1DC357ED4(void *a1, char a2)
{
  _QWORD *v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  uint64_t v10;

  if ((a2 & 1) != 0)
  {
    v4 = v2 + 2;
    v6 = v2[5];
    v5 = v2[6];
    __swift_project_boxed_opaque_existential_1(v4, v6);
    (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(_QWORD *)(v5 + 16) + 32))(&v10, v6);
    if ((_BYTE)v10)
      v7 = 2;
    else
      v7 = 1;
    v8 = objc_msgSend((id)objc_opt_self(), sel_effectWithStyle_, v7);
  }
  else
  {
    v8 = 0;
  }
  objc_msgSend(a1, sel_setEffect_, v8);

}

uint64_t sub_1DC357F84()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for WelcomeViewStyler()
{
  return objc_opt_self();
}

void destroy for WelcomeViewStyleParameters(uint64_t a1)
{

}

uint64_t initializeWithCopy for WelcomeViewStyleParameters(uint64_t a1, uint64_t a2)
{
  __int128 v3;
  __int128 v4;
  void *v5;
  id v6;

  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  v5 = *(void **)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v5;
  v6 = v5;
  return a1;
}

_QWORD *assignWithCopy for WelcomeViewStyleParameters(_QWORD *a1, _QWORD *a2)
{
  void *v3;
  void *v4;
  id v5;

  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  a1[7] = a2[7];
  a1[8] = a2[8];
  v3 = (void *)a2[9];
  v4 = (void *)a1[9];
  a1[9] = v3;
  v5 = v3;

  return a1;
}

uint64_t assignWithTake for WelcomeViewStyleParameters(uint64_t a1, uint64_t a2)
{
  __int128 v3;
  __int128 v4;
  void *v5;

  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  v5 = *(void **)(a1 + 72);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);

  return a1;
}

uint64_t getEnumTagSinglePayload for WelcomeViewStyleParameters(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 80))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 72);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for WelcomeViewStyleParameters(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 72) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 80) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for WelcomeViewStyleParameters()
{
  return &type metadata for WelcomeViewStyleParameters;
}

id sub_1DC358184()
{
  return sub_1DC3561EC();
}

id sub_1DC3581A4()
{
  return sub_1DC356924();
}

id sub_1DC3581C4()
{
  return sub_1DC356C24();
}

id sub_1DC3581E4()
{
  return sub_1DC356F3C();
}

uint64_t sub_1DC358204@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t *boxed_opaque_existential_1;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __n128 v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v23[5];
  __int128 v24[5];

  v7 = *v3;
  v8 = *(_QWORD *)(*v3 + 40);
  v9 = *(_QWORD *)(*v3 + 48);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(*v3 + 16), v8);
  v10 = *(_QWORD *)(v9 + 8);
  v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 8);
  v23[3] = v8;
  v23[4] = v9;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v23);
  v13 = v11(a1, v8, v10);
  v14 = *(_OWORD *)(v7 + 72);
  v15 = *(_OWORD *)(v7 + 104);
  v24[2] = *(_OWORD *)(v7 + 88);
  v24[3] = v15;
  v24[4] = *(_OWORD *)(v7 + 120);
  v24[0] = *(_OWORD *)(v7 + 56);
  v24[1] = v14;
  v16 = MEMORY[0x1E0C80A78](v13);
  v18 = (char *)&v23[-1] - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t *, uint64_t, __n128))(v19 + 16))(v18, boxed_opaque_existential_1, v8, v16);
  v20 = sub_1DC35DD10((uint64_t)v18, v24, a2, v8, v9);
  sub_1DC35E344((uint64_t)v24);
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
  *a3 = v20;
  return result;
}

void sub_1DC358324()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F0352540)
  {
    sub_1DC3FFC44();
    sub_1DC080808(&qword_1F0352548, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAF1B0], MEMORY[0x1E0CAF1C0]);
    v0 = sub_1DC408F08();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1F0352540);
  }
}

uint64_t sub_1DC35839C(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t result;
  int64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  int64_t v39;
  _QWORD *v40;
  uint64_t i;
  int v42;

  v3 = v2;
  v5 = sub_1DC400220();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  sub_1DC1A4B0C();
  v42 = a2;
  v10 = sub_1DC409868();
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
    goto LABEL_41;
  v12 = 1 << *(_BYTE *)(v9 + 32);
  v13 = *(_QWORD *)(v9 + 64);
  v40 = (_QWORD *)(v9 + 64);
  if (v12 < 64)
    v14 = ~(-1 << v12);
  else
    v14 = -1;
  v15 = v14 & v13;
  v38 = v2;
  v39 = (unint64_t)(v12 + 63) >> 6;
  v16 = v10 + 64;
  result = swift_retain();
  v18 = 0;
  for (i = v9; ; v9 = i)
  {
    if (v15)
    {
      v20 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v21 = v20 | (v18 << 6);
      goto LABEL_22;
    }
    v22 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v39)
      break;
    v23 = v40;
    v24 = v40[v22];
    ++v18;
    if (!v24)
    {
      v18 = v22 + 1;
      if (v22 + 1 >= v39)
        goto LABEL_34;
      v24 = v40[v18];
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v39)
        {
LABEL_34:
          swift_release();
          v3 = v38;
          if ((v42 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v24 = v40[v25];
        if (!v24)
        {
          while (1)
          {
            v18 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_43;
            if (v18 >= v39)
              goto LABEL_34;
            v24 = v40[v18];
            ++v25;
            if (v24)
              goto LABEL_21;
          }
        }
        v18 = v25;
      }
    }
LABEL_21:
    v15 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v18 << 6);
LABEL_22:
    v26 = *(_QWORD *)(v6 + 72);
    v27 = *(_QWORD *)(v9 + 48) + v26 * v21;
    if ((v42 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 32))(v8, v27, v5);
      v28 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v21);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, v27, v5);
      v28 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v21);
      swift_retain();
    }
    sub_1DC080808(&qword_1EDB28B20, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1470], MEMORY[0x1E0CB1490]);
    result = sub_1DC4089B0();
    v29 = -1 << *(_BYTE *)(v11 + 32);
    v30 = result & ~v29;
    v31 = v30 >> 6;
    if (((-1 << v30) & ~*(_QWORD *)(v16 + 8 * (v30 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v30) & ~*(_QWORD *)(v16 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v32 = 0;
      v33 = (unint64_t)(63 - v29) >> 6;
      do
      {
        if (++v31 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v34 = v31 == v33;
        if (v31 == v33)
          v31 = 0;
        v32 |= v34;
        v35 = *(_QWORD *)(v16 + 8 * v31);
      }
      while (v35 == -1);
      v19 = __clz(__rbit64(~v35)) + (v31 << 6);
    }
    *(_QWORD *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v11 + 48) + v26 * v19, v8, v5);
    *(_QWORD *)(*(_QWORD *)(v11 + 56) + 8 * v19) = v28;
    ++*(_QWORD *)(v11 + 16);
  }
  swift_release();
  v3 = v38;
  v23 = v40;
  if ((v42 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v36 = 1 << *(_BYTE *)(v9 + 32);
  if (v36 >= 64)
    bzero(v23, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v36;
  *(_QWORD *)(v9 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v11;
  return result;
}

uint64_t sub_1DC35872C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  id v31;
  uint64_t v32;
  int64_t v33;
  _QWORD *v34;
  char v35;
  __int128 v36;
  __int128 v37;

  v3 = v2;
  v5 = *v2;
  sub_1DC35E05C(0, (unint64_t *)&qword_1EDB3FCD0);
  v35 = a2;
  result = sub_1DC409868();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 0;
    v34 = (_QWORD *)(v5 + 64);
    v9 = 1 << *(_BYTE *)(v5 + 32);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v33 = (unint64_t)(v9 + 63) >> 6;
    v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        v18 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v19 = v18 | (v8 << 6);
      }
      else
      {
        v20 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        result = v5 + 64;
        if (v20 >= v33)
          goto LABEL_33;
        v21 = v34[v20];
        ++v8;
        if (!v21)
        {
          v8 = v20 + 1;
          if (v20 + 1 >= v33)
            goto LABEL_33;
          v21 = v34[v8];
          if (!v21)
          {
            v22 = v20 + 2;
            if (v22 >= v33)
            {
LABEL_33:
              if ((v35 & 1) == 0)
              {
                result = swift_release();
                v3 = v2;
                goto LABEL_40;
              }
              v32 = 1 << *(_BYTE *)(v5 + 32);
              if (v32 >= 64)
                bzero(v34, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v34 = -1 << v32;
              v3 = v2;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v21 = v34[v22];
            if (!v21)
            {
              while (1)
              {
                v8 = v22 + 1;
                if (__OFADD__(v22, 1))
                  goto LABEL_42;
                if (v8 >= v33)
                  goto LABEL_33;
                v21 = v34[v8];
                ++v22;
                if (v21)
                  goto LABEL_30;
              }
            }
            v8 = v22;
          }
        }
LABEL_30:
        v11 = (v21 - 1) & v21;
        v19 = __clz(__rbit64(v21)) + (v8 << 6);
      }
      v27 = *(_BYTE *)(*(_QWORD *)(v5 + 48) + v19);
      v28 = *(_QWORD *)(v5 + 56) + 48 * v19;
      v36 = *(_OWORD *)(v28 + 16);
      v37 = *(_OWORD *)v28;
      v30 = *(void **)(v28 + 32);
      v29 = *(_QWORD *)(v28 + 40);
      if ((v35 & 1) == 0)
        v31 = v30;
      sub_1DC409AC0();
      sub_1DC409ACC();
      result = sub_1DC409AF0();
      v13 = -1 << *(_BYTE *)(v7 + 32);
      v14 = result & ~v13;
      v15 = v14 >> 6;
      if (((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        v16 = __clz(__rbit64((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v23 = 0;
        v24 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v25 = v15 == v24;
          if (v15 == v24)
            v15 = 0;
          v23 |= v25;
          v26 = *(_QWORD *)(v12 + 8 * v15);
        }
        while (v26 == -1);
        v16 = __clz(__rbit64(~v26)) + (v15 << 6);
      }
      *(_QWORD *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(_BYTE *)(*(_QWORD *)(v7 + 48) + v16) = v27;
      v17 = *(_QWORD *)(v7 + 56) + 48 * v16;
      *(_OWORD *)v17 = v37;
      *(_OWORD *)(v17 + 16) = v36;
      *(_QWORD *)(v17 + 32) = v30;
      *(_QWORD *)(v17 + 40) = v29;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_40:
  *v3 = v7;
  return result;
}

uint64_t sub_1DC358A34(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  void *v29;
  id v30;
  uint64_t v31;
  int64_t v32;
  _QWORD *v33;
  char v34;
  __int128 v35;

  v3 = v2;
  v5 = *v2;
  sub_1DC35E05C(0, (unint64_t *)&qword_1EDB3FCD8);
  v34 = a2;
  result = sub_1DC409868();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 0;
    v33 = (_QWORD *)(v5 + 64);
    v9 = 1 << *(_BYTE *)(v5 + 32);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v32 = (unint64_t)(v9 + 63) >> 6;
    v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        v18 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v19 = v18 | (v8 << 6);
      }
      else
      {
        v20 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        result = v5 + 64;
        if (v20 >= v32)
          goto LABEL_33;
        v21 = v33[v20];
        ++v8;
        if (!v21)
        {
          v8 = v20 + 1;
          if (v20 + 1 >= v32)
            goto LABEL_33;
          v21 = v33[v8];
          if (!v21)
          {
            v22 = v20 + 2;
            if (v22 >= v32)
            {
LABEL_33:
              if ((v34 & 1) == 0)
              {
                result = swift_release();
                v3 = v2;
                goto LABEL_40;
              }
              v31 = 1 << *(_BYTE *)(v5 + 32);
              if (v31 >= 64)
                bzero(v33, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v33 = -1 << v31;
              v3 = v2;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v21 = v33[v22];
            if (!v21)
            {
              while (1)
              {
                v8 = v22 + 1;
                if (__OFADD__(v22, 1))
                  goto LABEL_42;
                if (v8 >= v32)
                  goto LABEL_33;
                v21 = v33[v8];
                ++v22;
                if (v21)
                  goto LABEL_30;
              }
            }
            v8 = v22;
          }
        }
LABEL_30:
        v11 = (v21 - 1) & v21;
        v19 = __clz(__rbit64(v21)) + (v8 << 6);
      }
      v27 = *(_BYTE *)(*(_QWORD *)(v5 + 48) + v19);
      v28 = *(_QWORD *)(v5 + 56) + 24 * v19;
      v35 = *(_OWORD *)v28;
      v29 = *(void **)(v28 + 16);
      if ((v34 & 1) == 0)
        v30 = v29;
      sub_1DC409AC0();
      sub_1DC409ACC();
      result = sub_1DC409AF0();
      v13 = -1 << *(_BYTE *)(v7 + 32);
      v14 = result & ~v13;
      v15 = v14 >> 6;
      if (((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        v16 = __clz(__rbit64((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v23 = 0;
        v24 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v25 = v15 == v24;
          if (v15 == v24)
            v15 = 0;
          v23 |= v25;
          v26 = *(_QWORD *)(v12 + 8 * v15);
        }
        while (v26 == -1);
        v16 = __clz(__rbit64(~v26)) + (v15 << 6);
      }
      *(_QWORD *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(_BYTE *)(*(_QWORD *)(v7 + 48) + v16) = v27;
      v17 = *(_QWORD *)(v7 + 56) + 24 * v16;
      *(_OWORD *)v17 = v35;
      *(_QWORD *)(v17 + 16) = v29;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_40:
  *v3 = v7;
  return result;
}

uint64_t sub_1DC358D30(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  _QWORD *v18;
  unint64_t v19;
  int64_t v20;
  void *v21;
  _OWORD *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;
  char v35;
  _OWORD v36[2];

  v3 = v2;
  v5 = *v2;
  sub_1DC0FA340();
  v35 = a2;
  v6 = sub_1DC409868();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_41;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v34 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v33 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v15 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v16 = v15 | (v13 << 6);
      goto LABEL_22;
    }
    v17 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v17 >= v33)
      break;
    v18 = (_QWORD *)(v5 + 64);
    v19 = *(_QWORD *)(v34 + 8 * v17);
    ++v13;
    if (!v19)
    {
      v13 = v17 + 1;
      if (v17 + 1 >= v33)
        goto LABEL_34;
      v19 = *(_QWORD *)(v34 + 8 * v13);
      if (!v19)
      {
        v20 = v17 + 2;
        if (v20 >= v33)
        {
LABEL_34:
          swift_release();
          if ((v35 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v19 = *(_QWORD *)(v34 + 8 * v20);
        if (!v19)
        {
          while (1)
          {
            v13 = v20 + 1;
            if (__OFADD__(v20, 1))
              goto LABEL_43;
            if (v13 >= v33)
              goto LABEL_34;
            v19 = *(_QWORD *)(v34 + 8 * v13);
            ++v20;
            if (v19)
              goto LABEL_21;
          }
        }
        v13 = v20;
      }
    }
LABEL_21:
    v10 = (v19 - 1) & v19;
    v16 = __clz(__rbit64(v19)) + (v13 << 6);
LABEL_22:
    v21 = *(void **)(*(_QWORD *)(v5 + 48) + 8 * v16);
    v22 = (_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v16);
    if ((v35 & 1) != 0)
    {
      sub_1DC0FA0E4(v22, v36);
    }
    else
    {
      sub_1DC1B26C0((uint64_t)v22, (uint64_t)v36);
      v23 = v21;
    }
    sub_1DC408A4C();
    sub_1DC409AC0();
    sub_1DC408AF4();
    v24 = sub_1DC409AF0();
    result = swift_bridgeObjectRelease();
    v25 = -1 << *(_BYTE *)(v7 + 32);
    v26 = v24 & ~v25;
    v27 = v26 >> 6;
    if (((-1 << v26) & ~*(_QWORD *)(v11 + 8 * (v26 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v28 = 0;
      v29 = (unint64_t)(63 - v25) >> 6;
      do
      {
        if (++v27 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v30 = v27 == v29;
        if (v27 == v29)
          v27 = 0;
        v28 |= v30;
        v31 = *(_QWORD *)(v11 + 8 * v27);
      }
      while (v31 == -1);
      v14 = __clz(__rbit64(~v31)) + (v27 << 6);
    }
    *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v14) = v21;
    result = (uint64_t)sub_1DC0FA0E4(v36, (_OWORD *)(*(_QWORD *)(v7 + 56) + 32 * v14));
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v18 = (_QWORD *)(v5 + 64);
  if ((v35 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v32 = 1 << *(_BYTE *)(v5 + 32);
  if (v32 >= 64)
    bzero(v18, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v18 = -1 << v32;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1DC359064(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  char v26;
  void *v27;
  id v28;
  uint64_t v29;
  int64_t v30;
  _QWORD *v31;

  v3 = v2;
  v5 = *v2;
  sub_1DC35E1F0(0, &qword_1EDB3FCE0, (void (*)(uint64_t))type metadata accessor for QuoteDetailViewLabelAccessibilityElement, (void (*)(void))sub_1DC1A4D18);
  result = sub_1DC409868();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 0;
    v31 = (_QWORD *)(v5 + 64);
    v9 = 1 << *(_BYTE *)(v5 + 32);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v30 = (unint64_t)(v9 + 63) >> 6;
    v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        v17 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v18 = v17 | (v8 << 6);
      }
      else
      {
        v19 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        result = v5 + 64;
        if (v19 >= v30)
          goto LABEL_33;
        v20 = v31[v19];
        ++v8;
        if (!v20)
        {
          v8 = v19 + 1;
          if (v19 + 1 >= v30)
            goto LABEL_33;
          v20 = v31[v8];
          if (!v20)
          {
            v21 = v19 + 2;
            if (v21 >= v30)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                result = swift_release();
                v3 = v2;
                goto LABEL_40;
              }
              v29 = 1 << *(_BYTE *)(v5 + 32);
              if (v29 >= 64)
                bzero(v31, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v31 = -1 << v29;
              v3 = v2;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v20 = v31[v21];
            if (!v20)
            {
              while (1)
              {
                v8 = v21 + 1;
                if (__OFADD__(v21, 1))
                  goto LABEL_42;
                if (v8 >= v30)
                  goto LABEL_33;
                v20 = v31[v8];
                ++v21;
                if (v20)
                  goto LABEL_30;
              }
            }
            v8 = v21;
          }
        }
LABEL_30:
        v11 = (v20 - 1) & v20;
        v18 = __clz(__rbit64(v20)) + (v8 << 6);
      }
      v26 = *(_BYTE *)(*(_QWORD *)(v5 + 48) + v18);
      v27 = *(void **)(*(_QWORD *)(v5 + 56) + 8 * v18);
      if ((a2 & 1) == 0)
        v28 = v27;
      sub_1DC409AC0();
      sub_1DC409ACC();
      result = sub_1DC409AF0();
      v13 = -1 << *(_BYTE *)(v7 + 32);
      v14 = result & ~v13;
      v15 = v14 >> 6;
      if (((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        v16 = __clz(__rbit64((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v22 = 0;
        v23 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v24 = v15 == v23;
          if (v15 == v23)
            v15 = 0;
          v22 |= v24;
          v25 = *(_QWORD *)(v12 + 8 * v15);
        }
        while (v25 == -1);
        v16 = __clz(__rbit64(~v25)) + (v15 << 6);
      }
      *(_QWORD *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(_BYTE *)(*(_QWORD *)(v7 + 48) + v16) = v26;
      *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v16) = v27;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_40:
  *v3 = v7;
  return result;
}

uint64_t sub_1DC359348(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  id v33;
  uint64_t v34;
  uint64_t *v35;
  int64_t v36;
  uint64_t v37;
  char v38;

  v3 = v2;
  v5 = *v2;
  sub_1DC35E17C();
  v38 = a2;
  v6 = sub_1DC409868();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v37 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v35 = v2;
  v36 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v36)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v37 + 8 * v21);
    ++v13;
    if (!v23)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v36)
        goto LABEL_33;
      v23 = *(_QWORD *)(v37 + 8 * v13);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v36)
        {
LABEL_33:
          swift_release();
          v3 = v35;
          if ((v38 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = *(_QWORD *)(v37 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v13 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_42;
            if (v13 >= v36)
              goto LABEL_33;
            v23 = *(_QWORD *)(v37 + 8 * v13);
            ++v24;
            if (v23)
              goto LABEL_30;
          }
        }
        v13 = v24;
      }
    }
LABEL_30:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v20);
    v31 = *v29;
    v30 = v29[1];
    v32 = *(void **)(*(_QWORD *)(v5 + 56) + 8 * v20);
    if ((v38 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      v33 = v32;
    }
    sub_1DC409AC0();
    sub_1DC408AF4();
    result = sub_1DC409AF0();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v27 = v16 == v26;
        if (v16 == v26)
          v16 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v31;
    v18[1] = v30;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v17) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v35;
  v22 = (_QWORD *)(v5 + 64);
  if ((v38 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v34 = 1 << *(_BYTE *)(v5 + 32);
  if (v34 >= 64)
    bzero(v22, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v34;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1DC359650(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;
  _QWORD *v30;

  v3 = v2;
  v5 = *v2;
  sub_1DC35E1F0(0, (unint64_t *)&unk_1EDB3FCF0, (void (*)(uint64_t))type metadata accessor for TickerAnimation, (void (*)(void))sub_1DC35E264);
  result = sub_1DC409868();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 0;
    v30 = (_QWORD *)(v5 + 64);
    v9 = 1 << *(_BYTE *)(v5 + 32);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v29 = (unint64_t)(v9 + 63) >> 6;
    v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        v17 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v18 = v17 | (v8 << 6);
      }
      else
      {
        v19 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        result = v5 + 64;
        if (v19 >= v29)
          goto LABEL_33;
        v20 = v30[v19];
        ++v8;
        if (!v20)
        {
          v8 = v19 + 1;
          if (v19 + 1 >= v29)
            goto LABEL_33;
          v20 = v30[v8];
          if (!v20)
          {
            v21 = v19 + 2;
            if (v21 >= v29)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                result = swift_release();
                v3 = v2;
                goto LABEL_40;
              }
              v28 = 1 << *(_BYTE *)(v5 + 32);
              if (v28 >= 64)
                bzero(v30, ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v30 = -1 << v28;
              v3 = v2;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v20 = v30[v21];
            if (!v20)
            {
              while (1)
              {
                v8 = v21 + 1;
                if (__OFADD__(v21, 1))
                  goto LABEL_42;
                if (v8 >= v29)
                  goto LABEL_33;
                v20 = v30[v8];
                ++v21;
                if (v20)
                  goto LABEL_30;
              }
            }
            v8 = v21;
          }
        }
LABEL_30:
        v11 = (v20 - 1) & v20;
        v18 = __clz(__rbit64(v20)) + (v8 << 6);
      }
      v26 = *(_BYTE *)(*(_QWORD *)(v5 + 48) + v18);
      v27 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v18);
      if ((a2 & 1) == 0)
        swift_retain();
      sub_1DC409AC0();
      sub_1DC409ACC();
      result = sub_1DC409AF0();
      v13 = -1 << *(_BYTE *)(v7 + 32);
      v14 = result & ~v13;
      v15 = v14 >> 6;
      if (((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        v16 = __clz(__rbit64((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v22 = 0;
        v23 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v24 = v15 == v23;
          if (v15 == v23)
            v15 = 0;
          v22 |= v24;
          v25 = *(_QWORD *)(v12 + 8 * v15);
        }
        while (v25 == -1);
        v16 = __clz(__rbit64(~v25)) + (v15 << 6);
      }
      *(_QWORD *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(_BYTE *)(*(_QWORD *)(v7 + 48) + v16) = v26;
      *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v16) = v27;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_40:
  *v3 = v7;
  return result;
}

uint64_t sub_1DC35993C(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t result;
  int64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  char v36;
  unint64_t v37;
  BOOL v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  int64_t v43;
  _QWORD *v44;
  int v45;
  char *v46;
  uint64_t v47;

  v3 = v2;
  v47 = sub_1DC4010E4();
  v5 = *(_QWORD *)(v47 - 8);
  MEMORY[0x1E0C80A78](v47);
  v46 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v2;
  sub_1DC0E93B8(0, (unint64_t *)&qword_1EDB3FD00, v8);
  v45 = a2;
  v9 = sub_1DC409868();
  v10 = v9;
  if (!*(_QWORD *)(v7 + 16))
    goto LABEL_41;
  v11 = 1 << *(_BYTE *)(v7 + 32);
  v12 = *(_QWORD *)(v7 + 64);
  v44 = (_QWORD *)(v7 + 64);
  if (v11 < 64)
    v13 = ~(-1 << v11);
  else
    v13 = -1;
  v14 = v13 & v12;
  v42 = v2;
  v43 = (unint64_t)(v11 + 63) >> 6;
  v15 = v9 + 64;
  result = swift_retain();
  v17 = 0;
  while (1)
  {
    if (v14)
    {
      v20 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v21 = v20 | (v17 << 6);
      goto LABEL_22;
    }
    v22 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v43)
      break;
    v23 = v44;
    v24 = v44[v22];
    ++v17;
    if (!v24)
    {
      v17 = v22 + 1;
      if (v22 + 1 >= v43)
        goto LABEL_34;
      v24 = v44[v17];
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v43)
        {
LABEL_34:
          swift_release();
          v3 = v42;
          if ((v45 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v24 = v44[v25];
        if (!v24)
        {
          while (1)
          {
            v17 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_43;
            if (v17 >= v43)
              goto LABEL_34;
            v24 = v44[v17];
            ++v25;
            if (v24)
              goto LABEL_21;
          }
        }
        v17 = v25;
      }
    }
LABEL_21:
    v14 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v17 << 6);
LABEL_22:
    v26 = *(_QWORD *)(v7 + 56);
    v27 = v7;
    v28 = (uint64_t *)(*(_QWORD *)(v7 + 48) + 16 * v21);
    v30 = *v28;
    v29 = v28[1];
    v31 = *(_QWORD *)(v5 + 72);
    v32 = v26 + v31 * v21;
    if ((v45 & 1) != 0)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v46, v32, v47);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v46, v32, v47);
      swift_bridgeObjectRetain();
    }
    sub_1DC409AC0();
    sub_1DC408AF4();
    result = sub_1DC409AF0();
    v33 = -1 << *(_BYTE *)(v10 + 32);
    v34 = result & ~v33;
    v35 = v34 >> 6;
    if (((-1 << v34) & ~*(_QWORD *)(v15 + 8 * (v34 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v34) & ~*(_QWORD *)(v15 + 8 * (v34 >> 6)))) | v34 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v36 = 0;
      v37 = (unint64_t)(63 - v33) >> 6;
      do
      {
        if (++v35 == v37 && (v36 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v38 = v35 == v37;
        if (v35 == v37)
          v35 = 0;
        v36 |= v38;
        v39 = *(_QWORD *)(v15 + 8 * v35);
      }
      while (v39 == -1);
      v18 = __clz(__rbit64(~v39)) + (v35 << 6);
    }
    *(_QWORD *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v10 + 48) + 16 * v18);
    *v19 = v30;
    v19[1] = v29;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v5 + 32))(*(_QWORD *)(v10 + 56) + v31 * v18, v46, v47);
    ++*(_QWORD *)(v10 + 16);
    v7 = v27;
  }
  swift_release();
  v3 = v42;
  v23 = v44;
  if ((v45 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v40 = 1 << *(_BYTE *)(v7 + 32);
  if (v40 >= 64)
    bzero(v23, ((unint64_t)(v40 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v40;
  *(_QWORD *)(v7 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v10;
  return result;
}

uint64_t sub_1DC359CC4(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  char v26;
  void *v27;
  id v28;
  uint64_t v29;
  int64_t v30;
  _QWORD *v31;

  v3 = v2;
  v5 = *v2;
  sub_1DC35E36C();
  result = sub_1DC409868();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 0;
    v31 = (_QWORD *)(v5 + 64);
    v9 = 1 << *(_BYTE *)(v5 + 32);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v30 = (unint64_t)(v9 + 63) >> 6;
    v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        v17 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v18 = v17 | (v8 << 6);
      }
      else
      {
        v19 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        result = v5 + 64;
        if (v19 >= v30)
          goto LABEL_33;
        v20 = v31[v19];
        ++v8;
        if (!v20)
        {
          v8 = v19 + 1;
          if (v19 + 1 >= v30)
            goto LABEL_33;
          v20 = v31[v8];
          if (!v20)
          {
            v21 = v19 + 2;
            if (v21 >= v30)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                result = swift_release();
                v3 = v2;
                goto LABEL_40;
              }
              v29 = 1 << *(_BYTE *)(v5 + 32);
              if (v29 >= 64)
                bzero(v31, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v31 = -1 << v29;
              v3 = v2;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v20 = v31[v21];
            if (!v20)
            {
              while (1)
              {
                v8 = v21 + 1;
                if (__OFADD__(v21, 1))
                  goto LABEL_42;
                if (v8 >= v30)
                  goto LABEL_33;
                v20 = v31[v8];
                ++v21;
                if (v20)
                  goto LABEL_30;
              }
            }
            v8 = v21;
          }
        }
LABEL_30:
        v11 = (v20 - 1) & v20;
        v18 = __clz(__rbit64(v20)) + (v8 << 6);
      }
      v26 = *(_BYTE *)(*(_QWORD *)(v5 + 48) + v18);
      v27 = *(void **)(*(_QWORD *)(v5 + 56) + 8 * v18);
      if ((a2 & 1) == 0)
        v28 = v27;
      sub_1DC409AC0();
      sub_1DC409ACC();
      result = sub_1DC409AF0();
      v13 = -1 << *(_BYTE *)(v7 + 32);
      v14 = result & ~v13;
      v15 = v14 >> 6;
      if (((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        v16 = __clz(__rbit64((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v22 = 0;
        v23 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v24 = v15 == v23;
          if (v15 == v23)
            v15 = 0;
          v22 |= v24;
          v25 = *(_QWORD *)(v12 + 8 * v15);
        }
        while (v25 == -1);
        v16 = __clz(__rbit64(~v25)) + (v15 << 6);
      }
      *(_QWORD *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(_BYTE *)(*(_QWORD *)(v7 + 48) + v16) = v26;
      *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v16) = v27;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_40:
  *v3 = v7;
  return result;
}

uint64_t sub_1DC359F88(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;
  _QWORD *v30;

  v3 = v2;
  v5 = *v2;
  sub_1DC35E100();
  result = sub_1DC409868();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 0;
    v30 = (_QWORD *)(v5 + 64);
    v9 = 1 << *(_BYTE *)(v5 + 32);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v29 = (unint64_t)(v9 + 63) >> 6;
    v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        v17 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v18 = v17 | (v8 << 6);
      }
      else
      {
        v19 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        result = v5 + 64;
        if (v19 >= v29)
          goto LABEL_33;
        v20 = v30[v19];
        ++v8;
        if (!v20)
        {
          v8 = v19 + 1;
          if (v19 + 1 >= v29)
            goto LABEL_33;
          v20 = v30[v8];
          if (!v20)
          {
            v21 = v19 + 2;
            if (v21 >= v29)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                result = swift_release();
                v3 = v2;
                goto LABEL_40;
              }
              v28 = 1 << *(_BYTE *)(v5 + 32);
              if (v28 >= 64)
                bzero(v30, ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v30 = -1 << v28;
              v3 = v2;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v20 = v30[v21];
            if (!v20)
            {
              while (1)
              {
                v8 = v21 + 1;
                if (__OFADD__(v21, 1))
                  goto LABEL_42;
                if (v8 >= v29)
                  goto LABEL_33;
                v20 = v30[v8];
                ++v21;
                if (v20)
                  goto LABEL_30;
              }
            }
            v8 = v21;
          }
        }
LABEL_30:
        v11 = (v20 - 1) & v20;
        v18 = __clz(__rbit64(v20)) + (v8 << 6);
      }
      v26 = *(_BYTE *)(*(_QWORD *)(v5 + 48) + v18);
      v27 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v18);
      if ((a2 & 1) == 0)
        swift_bridgeObjectRetain();
      sub_1DC409AC0();
      sub_1DC409AD8();
      result = sub_1DC409AF0();
      v13 = -1 << *(_BYTE *)(v7 + 32);
      v14 = result & ~v13;
      v15 = v14 >> 6;
      if (((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        v16 = __clz(__rbit64((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v22 = 0;
        v23 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v24 = v15 == v23;
          if (v15 == v23)
            v15 = 0;
          v22 |= v24;
          v25 = *(_QWORD *)(v12 + 8 * v15);
        }
        while (v25 == -1);
        v16 = __clz(__rbit64(~v25)) + (v15 << 6);
      }
      *(_QWORD *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(_BYTE *)(*(_QWORD *)(v7 + 48) + v16) = v26;
      *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v16) = v27;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_40:
  *v3 = v7;
  return result;
}

uint64_t sub_1DC35A254(uint64_t a1, int a2)
{
  return sub_1DC0E902C(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for CuratedForYouFeedGroupKnobs, (unint64_t *)&unk_1EDB3FD10);
}

uint64_t sub_1DC35A268(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t result;
  unint64_t v23;
  char v24;
  uint64_t v25;

  v4 = (_QWORD **)v3;
  v8 = sub_1DC400220();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_1DC1A3640(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  v18 = v13;
  v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    v20 = *v4;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      v21 = v20[7];
      result = swift_release();
      *(_QWORD *)(v21 + 8 * v14) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_1DC35AC54();
    goto LABEL_7;
  }
  sub_1DC35839C(v17, a3 & 1);
  v23 = sub_1DC1A3640(a2);
  if ((v18 & 1) != (v24 & 1))
  {
LABEL_14:
    result = sub_1DC409A3C();
    __break(1u);
    return result;
  }
  v14 = v23;
  v20 = *v4;
  if ((v18 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  return sub_1DC35AB58(v14, (uint64_t)v11, a1, v20);
}

void sub_1DC35A3C4(_OWORD *a1, unsigned __int8 a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  __int128 v18;
  unint64_t v19;
  char v20;
  _OWORD *v21;
  __int128 v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;

  v4 = v3;
  v8 = *v3;
  v10 = sub_1DC1A36AC(a2);
  v11 = *(_QWORD *)(v8 + 16);
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v14 = v9;
  v15 = *(_QWORD *)(v8 + 24);
  if (v15 >= v13 && (a3 & 1) != 0)
    goto LABEL_7;
  if (v15 >= v13 && (a3 & 1) == 0)
  {
    sub_1DC35AE80();
LABEL_7:
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
    {
LABEL_8:
      v17 = v16[7] + 48 * v10;

      v18 = a1[1];
      *(_OWORD *)v17 = *a1;
      *(_OWORD *)(v17 + 16) = v18;
      *(_OWORD *)(v17 + 32) = a1[2];
      return;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    *(_BYTE *)(v16[6] + v10) = a2;
    v21 = (_OWORD *)(v16[7] + 48 * v10);
    v22 = a1[1];
    *v21 = *a1;
    v21[1] = v22;
    v21[2] = a1[2];
    v23 = v16[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (!v24)
    {
      v16[2] = v25;
      return;
    }
    goto LABEL_14;
  }
  sub_1DC35872C(v13, a3 & 1);
  v19 = sub_1DC1A36AC(a2);
  if ((v14 & 1) == (v20 & 1))
  {
    v10 = v19;
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  sub_1DC409A3C();
  __break(1u);
}

void sub_1DC35A51C(uint64_t a1, unsigned __int8 a2, char a3, double a4, double a5)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;

  v6 = v5;
  v12 = *v5;
  v14 = sub_1DC1A36AC(a2);
  v15 = *(_QWORD *)(v12 + 16);
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v18 = v13;
  v19 = *(_QWORD *)(v12 + 24);
  if (v19 >= v17 && (a3 & 1) != 0)
    goto LABEL_7;
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_1DC35B040();
LABEL_7:
    v20 = (_QWORD *)*v6;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      v21 = v20[7] + 24 * v14;

      *(double *)v21 = a4;
      *(double *)(v21 + 8) = a5;
      *(_QWORD *)(v21 + 16) = a1;
      return;
    }
LABEL_11:
    v20[(v14 >> 6) + 8] |= 1 << v14;
    *(_BYTE *)(v20[6] + v14) = a2;
    v24 = v20[7] + 24 * v14;
    *(double *)v24 = a4;
    *(double *)(v24 + 8) = a5;
    *(_QWORD *)(v24 + 16) = a1;
    v25 = v20[2];
    v26 = __OFADD__(v25, 1);
    v27 = v25 + 1;
    if (!v26)
    {
      v20[2] = v27;
      return;
    }
    goto LABEL_14;
  }
  sub_1DC358A34(v17, a3 & 1);
  v22 = sub_1DC1A36AC(a2);
  if ((v18 & 1) == (v23 & 1))
  {
    v14 = v22;
    v20 = (_QWORD *)*v6;
    if ((v18 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  sub_1DC409A3C();
  __break(1u);
}

_OWORD *sub_1DC35A674(_OWORD *a1, void *a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v7;
  char v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL8 v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  _QWORD *v15;
  _OWORD *v16;
  _OWORD *result;
  unint64_t v18;
  char v19;

  v4 = (_QWORD **)v3;
  v7 = (_QWORD *)*v3;
  v9 = sub_1DC1A363C((uint64_t)a2);
  v10 = v7[2];
  v11 = (v8 & 1) == 0;
  v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
  }
  else
  {
    v13 = v8;
    v14 = v7[3];
    if (v14 >= v12 && (a3 & 1) != 0)
    {
LABEL_7:
      v15 = *v4;
      if ((v13 & 1) != 0)
      {
LABEL_8:
        v16 = (_OWORD *)(v15[7] + 32 * v9);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
        return sub_1DC0FA0E4(a1, v16);
      }
      goto LABEL_11;
    }
    if (v14 >= v12 && (a3 & 1) == 0)
    {
      sub_1DC35B200();
      goto LABEL_7;
    }
    sub_1DC358D30(v12, a3 & 1);
    v18 = sub_1DC1A363C((uint64_t)a2);
    if ((v13 & 1) == (v19 & 1))
    {
      v9 = v18;
      v15 = *v4;
      if ((v13 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1DC35ABF0(v9, (uint64_t)a2, a1, v15);
      return a2;
    }
  }
  type metadata accessor for Key(0);
  result = (_OWORD *)sub_1DC409A3C();
  __break(1u);
  return result;
}

void sub_1DC35A794(uint64_t a1, unsigned __int8 a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v4 = v3;
  v8 = *v3;
  v10 = sub_1DC1A36AC(a2);
  v11 = *(_QWORD *)(v8 + 16);
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v14 = v9;
  v15 = *(_QWORD *)(v8 + 24);
  if (v15 >= v13 && (a3 & 1) != 0)
    goto LABEL_7;
  if (v15 >= v13 && (a3 & 1) == 0)
  {
    sub_1DC35B574();
LABEL_7:
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
    {
LABEL_8:
      v17 = v16[7];

      *(_QWORD *)(v17 + 8 * v10) = a1;
      return;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    *(_BYTE *)(v16[6] + v10) = a2;
    *(_QWORD *)(v16[7] + 8 * v10) = a1;
    v20 = v16[2];
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (!v21)
    {
      v16[2] = v22;
      return;
    }
    goto LABEL_14;
  }
  sub_1DC359064(v13, a3 & 1);
  v18 = sub_1DC1A36AC(a2);
  if ((v14 & 1) == (v19 & 1))
  {
    v10 = v18;
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  sub_1DC409A3C();
  __break(1u);
}

void sub_1DC35A8C8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  uint64_t *v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;

  v5 = v4;
  v10 = *v4;
  v12 = sub_1DC0ED368(a2, a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_1DC35B730();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      v19 = v18[7];

      *(_QWORD *)(v19 + 8 * v12) = a1;
      return;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v22 = (uint64_t *)(v18[6] + 16 * v12);
    *v22 = a2;
    v22[1] = a3;
    *(_QWORD *)(v18[7] + 8 * v12) = a1;
    v23 = v18[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (!v24)
    {
      v18[2] = v25;
      swift_bridgeObjectRetain();
      return;
    }
    goto LABEL_14;
  }
  sub_1DC359348(v15, a4 & 1);
  v20 = sub_1DC0ED368(a2, a3);
  if ((v16 & 1) == (v21 & 1))
  {
    v12 = v20;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  sub_1DC409A3C();
  __break(1u);
}

uint64_t sub_1DC35AA24(uint64_t a1, char a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  char v7;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t result;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;

  v4 = v3;
  v7 = a2 & 1;
  v8 = *v3;
  v10 = sub_1DC1A3780(a2 & 1);
  v11 = *(_QWORD *)(v8 + 16);
  v12 = (v9 & 1) == 0;
  result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v14 = v9;
  v15 = *(_QWORD *)(v8 + 24);
  if (v15 >= result && (a3 & 1) != 0)
    goto LABEL_7;
  if (v15 >= result && (a3 & 1) == 0)
  {
    result = (uint64_t)sub_1DC35B8DC();
LABEL_7:
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
    {
LABEL_8:
      v17 = v16[7];
      result = swift_release();
      *(_QWORD *)(v17 + 8 * v10) = a1;
      return result;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    *(_BYTE *)(v16[6] + v10) = v7;
    *(_QWORD *)(v16[7] + 8 * v10) = a1;
    v19 = v16[2];
    v20 = __OFADD__(v19, 1);
    v21 = v19 + 1;
    if (!v20)
    {
      v16[2] = v21;
      return result;
    }
    goto LABEL_14;
  }
  sub_1DC359650(result, a3 & 1);
  result = sub_1DC1A3780(v7);
  if ((v14 & 1) == (v18 & 1))
  {
    v10 = result;
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_1DC409A3C();
  __break(1u);
  return result;
}

uint64_t sub_1DC35AB58(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = sub_1DC400220();
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, a2, v9);
  *(_QWORD *)(a4[7] + 8 * a1) = a3;
  v11 = a4[2];
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
    __break(1u);
  else
    a4[2] = v13;
  return result;
}

_OWORD *sub_1DC35ABF0(unint64_t a1, uint64_t a2, _OWORD *a3, _QWORD *a4)
{
  _OWORD *result;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(_QWORD *)(a4[6] + 8 * a1) = a2;
  result = sub_1DC0FA0E4(a3, (_OWORD *)(a4[7] + 32 * a1));
  v6 = a4[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a4[2] = v8;
  return result;
}

void *sub_1DC35AC54()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  int64_t v26;

  v1 = sub_1DC400220();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC1A4B0C();
  v24 = v0;
  v5 = *v0;
  v6 = sub_1DC40985C();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v24 = v7;
    return result;
  }
  result = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v25 = v5 + 64;
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v26 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v16 = v15 | (v11 << 6);
      goto LABEL_12;
    }
    v20 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v20);
    ++v11;
    if (!v21)
    {
      v11 = v20 + 1;
      if (v20 + 1 >= v26)
        goto LABEL_26;
      v21 = *(_QWORD *)(v25 + 8 * v11);
      if (!v21)
        break;
    }
LABEL_25:
    v14 = (v21 - 1) & v21;
    v16 = __clz(__rbit64(v21)) + (v11 << 6);
LABEL_12:
    v17 = *(_QWORD *)(v2 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(_QWORD *)(v5 + 48) + v17, v1);
    v18 = 8 * v16;
    v19 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v16);
    (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(_QWORD *)(v7 + 48) + v17, v4, v1);
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + v18) = v19;
    result = (void *)swift_retain();
  }
  v22 = v20 + 2;
  if (v22 >= v26)
    goto LABEL_26;
  v21 = *(_QWORD *)(v25 + 8 * v22);
  if (v21)
  {
    v11 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v11 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v11);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1DC35AE80()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  sub_1DC35E05C(0, (unint64_t *)&qword_1EDB3FCD0);
  v2 = *v0;
  v3 = sub_1DC40985C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = *(_QWORD *)(v2 + 56) + 48 * v15;
    v17 = *(void **)(v16 + 32);
    v18 = *(_QWORD *)(v16 + 40);
    v19 = *(_OWORD *)v16;
    v20 = *(_OWORD *)(v16 + 16);
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
    v21 = *(_QWORD *)(v4 + 56) + 48 * v15;
    *(_OWORD *)v21 = v19;
    *(_OWORD *)(v21 + 16) = v20;
    *(_QWORD *)(v21 + 32) = v17;
    *(_QWORD *)(v21 + 40) = v18;
    result = v17;
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1DC35B040()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  __int128 v18;
  uint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  sub_1DC35E05C(0, (unint64_t *)&qword_1EDB3FCD8);
  v2 = *v0;
  v3 = sub_1DC40985C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_26;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
        break;
    }
LABEL_25:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = *(_QWORD *)(v2 + 56) + 24 * v15;
    v17 = *(void **)(v16 + 16);
    v18 = *(_OWORD *)v16;
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
    v19 = *(_QWORD *)(v4 + 56) + 24 * v15;
    *(_OWORD *)v19 = v18;
    *(_QWORD *)(v19 + 16) = v17;
    result = v17;
  }
  v22 = v20 + 2;
  if (v22 >= v13)
    goto LABEL_26;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1DC35B200()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  _OWORD v22[2];

  v1 = v0;
  sub_1DC0FA340();
  v2 = *v0;
  v3 = sub_1DC40985C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v13)
      goto LABEL_26;
    v20 = *(_QWORD *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      v9 = v19 + 1;
      if (v19 + 1 >= v13)
        goto LABEL_26;
      v20 = *(_QWORD *)(v6 + 8 * v9);
      if (!v20)
        break;
    }
LABEL_25:
    v12 = (v20 - 1) & v20;
    v15 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + 8 * v15);
    v18 = 32 * v15;
    sub_1DC1B26C0(*(_QWORD *)(v2 + 56) + 32 * v15, (uint64_t)v22);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    sub_1DC0FA0E4(v22, (_OWORD *)(*(_QWORD *)(v4 + 56) + v18));
    result = v17;
  }
  v21 = v19 + 2;
  if (v21 >= v13)
    goto LABEL_26;
  v20 = *(_QWORD *)(v6 + 8 * v21);
  if (v20)
  {
    v9 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v20 = *(_QWORD *)(v6 + 8 * v9);
    ++v21;
    if (v20)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1DC35B3C0()
{
  return sub_1DC35BEB0((void (*)(uint64_t))type metadata accessor for StockViewRenderer.RenderedState, &qword_1EDB3FD08);
}

id sub_1DC35B3D4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  __int128 v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  sub_1DC108550();
  v2 = *v0;
  v3 = sub_1DC40985C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_26;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
        break;
    }
LABEL_25:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + 8 * v15);
    v18 = 16 * v15;
    v19 = *(_OWORD *)(*(_QWORD *)(v2 + 56) + v18);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    *(_OWORD *)(*(_QWORD *)(v4 + 56) + v18) = v19;
    result = v17;
  }
  v22 = v20 + 2;
  if (v22 >= v13)
    goto LABEL_26;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1DC35B574()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  void *v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;

  v1 = v0;
  sub_1DC35E1F0(0, &qword_1EDB3FCE0, (void (*)(uint64_t))type metadata accessor for QuoteDetailViewLabelAccessibilityElement, (void (*)(void))sub_1DC1A4D18);
  v2 = *v0;
  v3 = sub_1DC40985C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v13)
        goto LABEL_26;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
        break;
    }
LABEL_25:
    v12 = (v18 - 1) & v18;
    v15 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_12:
    v16 = *(void **)(*(_QWORD *)(v2 + 56) + 8 * v15);
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v15) = v16;
    result = v16;
  }
  v19 = v17 + 2;
  if (v19 >= v13)
    goto LABEL_26;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1DC35B730()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  sub_1DC35E17C();
  v2 = *v0;
  v3 = sub_1DC40985C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = v17[1];
    v19 = 8 * v15;
    v20 = *(void **)(*(_QWORD *)(v2 + 56) + v19);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    result = v20;
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1DC35B8DC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;

  v1 = v0;
  sub_1DC35E1F0(0, (unint64_t *)&unk_1EDB3FCF0, (void (*)(uint64_t))type metadata accessor for TickerAnimation, (void (*)(void))sub_1DC35E264);
  v2 = *v0;
  v3 = sub_1DC40985C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v13)
        goto LABEL_26;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
        break;
    }
LABEL_25:
    v12 = (v18 - 1) & v18;
    v15 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_12:
    v16 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * v15);
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v15) = v16;
    result = (void *)swift_retain();
  }
  v19 = v17 + 2;
  if (v19 >= v13)
    goto LABEL_26;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1DC35BA98()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  void (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *result;
  unint64_t v10;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  int64_t v34;
  uint64_t v35;
  uint64_t v36;

  v35 = sub_1DC4010E4();
  v1 = *(_QWORD *)(v35 - 8);
  MEMORY[0x1E0C80A78](v35);
  v3 = (char *)&v31 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0E93B8(0, (unint64_t *)&qword_1EDB3FD00, v4);
  v32 = v0;
  v5 = *v0;
  v6 = sub_1DC40985C();
  v7 = *(_QWORD *)(v5 + 16);
  v36 = v6;
  if (!v7)
  {
    result = (void *)swift_release();
    v30 = v36;
    v29 = v32;
LABEL_28:
    *v29 = v30;
    return result;
  }
  v8 = v6;
  result = (void *)(v6 + 64);
  v10 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v5 || (unint64_t)result >= v5 + 64 + 8 * v10)
  {
    result = memmove(result, (const void *)(v5 + 64), 8 * v10);
    v8 = v36;
  }
  v33 = v5 + 64;
  v12 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v5 + 16);
  v13 = 1 << *(_BYTE *)(v5 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & *(_QWORD *)(v5 + 64);
  v34 = (unint64_t)(v13 + 63) >> 6;
  v16 = v35;
  while (1)
  {
    if (v15)
    {
      v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v18 = v17 | (v12 << 6);
      goto LABEL_12;
    }
    v26 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v26 >= v34)
      goto LABEL_26;
    v27 = *(_QWORD *)(v33 + 8 * v26);
    ++v12;
    if (!v27)
    {
      v12 = v26 + 1;
      if (v26 + 1 >= v34)
        goto LABEL_26;
      v27 = *(_QWORD *)(v33 + 8 * v12);
      if (!v27)
        break;
    }
LABEL_25:
    v15 = (v27 - 1) & v27;
    v18 = __clz(__rbit64(v27)) + (v12 << 6);
LABEL_12:
    v19 = 16 * v18;
    v20 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v18);
    v22 = *v20;
    v21 = v20[1];
    v23 = *(_QWORD *)(v1 + 72) * v18;
    (*(void (**)(char *, unint64_t, uint64_t))(v1 + 16))(v3, *(_QWORD *)(v5 + 56) + v23, v16);
    v24 = v36;
    v25 = (_QWORD *)(*(_QWORD *)(v36 + 48) + v19);
    *v25 = v22;
    v25[1] = v21;
    (*(void (**)(unint64_t, char *, uint64_t))(v1 + 32))(*(_QWORD *)(v24 + 56) + v23, v3, v16);
    result = (void *)swift_bridgeObjectRetain();
  }
  v28 = v26 + 2;
  if (v28 >= v34)
  {
LABEL_26:
    result = (void *)swift_release();
    v29 = v32;
    v30 = v36;
    goto LABEL_28;
  }
  v27 = *(_QWORD *)(v33 + 8 * v28);
  if (v27)
  {
    v12 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    v12 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v12 >= v34)
      goto LABEL_26;
    v27 = *(_QWORD *)(v33 + 8 * v12);
    ++v28;
    if (v27)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_1DC35BD00()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  void *v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;

  v1 = v0;
  sub_1DC35E36C();
  v2 = *v0;
  v3 = sub_1DC40985C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v13)
        goto LABEL_26;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
        break;
    }
LABEL_25:
    v12 = (v18 - 1) & v18;
    v15 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_12:
    v16 = *(void **)(*(_QWORD *)(v2 + 56) + 8 * v15);
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v15) = v16;
    result = v16;
  }
  v19 = v17 + 2;
  if (v19 >= v13)
    goto LABEL_26;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1DC35BE9C()
{
  return sub_1DC35BEB0((void (*)(uint64_t))type metadata accessor for CuratedForYouFeedGroupKnobs, (unint64_t *)&unk_1EDB3FD10);
}

void *sub_1DC35BEB0(void (*a1)(uint64_t), unint64_t *a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *result;
  unint64_t v12;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t *v29;
  uint64_t v30;
  int64_t v31;
  uint64_t v32;

  v5 = ((uint64_t (*)(_QWORD))a1)(0);
  v32 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v29 - v6;
  sub_1DC0E93B8(0, a2, a1);
  v29 = v2;
  v8 = *v2;
  v9 = sub_1DC40985C();
  v10 = v9;
  if (!*(_QWORD *)(v8 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v29 = v10;
    return result;
  }
  result = (void *)(v9 + 64);
  v12 = (unint64_t)((1 << *(_BYTE *)(v10 + 32)) + 63) >> 6;
  if (v10 != v8 || (unint64_t)result >= v8 + 64 + 8 * v12)
    result = memmove(result, (const void *)(v8 + 64), 8 * v12);
  v30 = v8 + 64;
  v14 = 0;
  *(_QWORD *)(v10 + 16) = *(_QWORD *)(v8 + 16);
  v15 = 1 << *(_BYTE *)(v8 + 32);
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & *(_QWORD *)(v8 + 64);
  v31 = (unint64_t)(v15 + 63) >> 6;
  while (1)
  {
    if (v17)
    {
      v18 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v19 = v18 | (v14 << 6);
      goto LABEL_12;
    }
    v26 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v26 >= v31)
      goto LABEL_26;
    v27 = *(_QWORD *)(v30 + 8 * v26);
    ++v14;
    if (!v27)
    {
      v14 = v26 + 1;
      if (v26 + 1 >= v31)
        goto LABEL_26;
      v27 = *(_QWORD *)(v30 + 8 * v14);
      if (!v27)
        break;
    }
LABEL_25:
    v17 = (v27 - 1) & v27;
    v19 = __clz(__rbit64(v27)) + (v14 << 6);
LABEL_12:
    v20 = 16 * v19;
    v21 = (uint64_t *)(*(_QWORD *)(v8 + 48) + 16 * v19);
    v22 = *v21;
    v23 = v21[1];
    v24 = *(_QWORD *)(v32 + 72) * v19;
    sub_1DC0990BC(*(_QWORD *)(v8 + 56) + v24, (uint64_t)v7, (uint64_t (*)(_QWORD))a1);
    v25 = (_QWORD *)(*(_QWORD *)(v10 + 48) + v20);
    *v25 = v22;
    v25[1] = v23;
    sub_1DC092ED0((uint64_t)v7, *(_QWORD *)(v10 + 56) + v24, (uint64_t (*)(_QWORD))a1);
    result = (void *)swift_bridgeObjectRetain();
  }
  v28 = v26 + 2;
  if (v28 >= v31)
    goto LABEL_26;
  v27 = *(_QWORD *)(v30 + 8 * v28);
  if (v27)
  {
    v14 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    v14 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v14 >= v31)
      goto LABEL_26;
    v27 = *(_QWORD *)(v30 + 8 * v14);
    ++v28;
    if (v27)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void sub_1DC35C0E8(_QWORD **a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  _QWORD v5[2];

  v2 = *(_QWORD *)(sub_1DC3FFC14() - 8);
  v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v3 = (_QWORD *)sub_1DC35DDAC(v3);
  v4 = v3[2];
  v5[0] = (char *)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v5[1] = v4;
  sub_1DC35C168(v5);
  *a1 = v3;
}

void sub_1DC35C168(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(void);
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t, uint64_t);
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  void (*v41)(char *, uint64_t);
  void (*v42)(char *, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(void);
  char *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  void (*v52)(char *, uint64_t, uint64_t);
  uint64_t v53;
  char *v54;
  int v55;
  void (*v56)(char *, uint64_t);
  void (*v57)(char *, uint64_t);
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  char *v66;
  uint64_t v67;
  void (*v68)(char *, uint64_t, uint64_t);
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void (*v75)(void);
  uint64_t v76;
  void (*v77)(char *, char *, uint64_t);
  char *v78;
  uint64_t v79;
  uint64_t v80;
  void (*v81)(char *, uint64_t, uint64_t);
  char *v82;
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char v87;
  void (*v88)(char *, uint64_t);
  void (*v89)(char *, uint64_t);
  uint64_t v90;
  void (*v91)(void);
  char *v92;
  void (*v93)(char *, char *, uint64_t);
  unint64_t v94;
  unint64_t v95;
  char *v96;
  char *v97;
  unint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  BOOL v109;
  unint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  BOOL v119;
  uint64_t v120;
  char v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  BOOL v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  unint64_t v137;
  uint64_t v138;
  char *v139;
  char *v140;
  uint64_t v141;
  char *v142;
  uint64_t v143;
  unint64_t v144;
  uint64_t v145;
  unint64_t v146;
  char *v147;
  char *v148;
  uint64_t v149;
  uint64_t v150;
  char *v151;
  unint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  char *v159;
  uint64_t v160;
  unint64_t v161;
  uint64_t v162;
  uint64_t v163;
  char *v164;
  void (*v165)(char *, uint64_t);
  void (*v166)(char *, uint64_t, uint64_t);
  char *v167;
  char *v168;
  char *v169;
  char *v170;
  char *v171;
  uint64_t v172;
  _QWORD *v173;
  uint64_t v174;
  uint64_t v175;
  char *v176;
  void (*v177)(void);
  char *v178;
  uint64_t v179;
  uint64_t v180;
  char *v181;
  uint64_t v182;

  v2 = v1;
  v172 = sub_1DC3FFC44();
  v163 = *(_QWORD *)(v172 - 8);
  MEMORY[0x1E0C80A78](v172);
  v171 = (char *)&v153 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v170 = (char *)&v153 - v6;
  sub_1DC358324();
  MEMORY[0x1E0C80A78](v7);
  v169 = (char *)&v153 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v168 = (char *)&v153 - v10;
  v11 = sub_1DC3FFC14();
  v182 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v159 = (char *)&v153 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v176 = (char *)&v153 - v14;
  MEMORY[0x1E0C80A78](v15);
  v167 = (char *)&v153 - v16;
  MEMORY[0x1E0C80A78](v17);
  v181 = (char *)&v153 - v18;
  v19 = a1[1];
  v20 = sub_1DC4099AC();
  if (v20 >= v19)
  {
    if (v19 < 0)
      goto LABEL_138;
    if (v19)
      sub_1DC35CE38(0, v19, 1, a1);
    return;
  }
  if (v19 >= 0)
    v21 = v19;
  else
    v21 = v19 + 1;
  if (v19 < -1)
    goto LABEL_146;
  v174 = v11;
  v154 = v20;
  if (v19 < 2)
  {
    v25 = (char *)MEMORY[0x1E0DEE9D8];
    v161 = MEMORY[0x1E0DEE9D8]
         + ((*(unsigned __int8 *)(v182 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v182 + 80));
    v153 = MEMORY[0x1E0DEE9D8];
    if (v19 != 1)
    {
      v27 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
LABEL_104:
      if (v27 >= 2)
      {
        v145 = *a1;
        do
        {
          v146 = v27 - 2;
          if (v27 < 2)
            goto LABEL_133;
          if (!v145)
            goto LABEL_145;
          v147 = v25;
          v148 = v25 + 32;
          v149 = *(_QWORD *)&v25[16 * v146 + 32];
          v150 = *(_QWORD *)&v25[16 * v27 + 24];
          sub_1DC35D1C4(v145 + *(_QWORD *)(v182 + 72) * v149, v145 + *(_QWORD *)(v182 + 72) * *(_QWORD *)&v148[16 * v27 - 16], v145 + *(_QWORD *)(v182 + 72) * v150, v161);
          if (v2)
            break;
          if (v150 < v149)
            goto LABEL_134;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v147 = sub_1DC35DBF8((uint64_t)v147);
          if (v146 >= *((_QWORD *)v147 + 2))
            goto LABEL_135;
          v151 = &v147[16 * v146 + 32];
          *(_QWORD *)v151 = v149;
          *((_QWORD *)v151 + 1) = v150;
          v152 = *((_QWORD *)v147 + 2);
          if (v27 > v152)
            goto LABEL_136;
          v25 = v147;
          memmove(&v147[16 * v27 + 16], &v147[16 * v27 + 32], 16 * (v152 - v27));
          *((_QWORD *)v147 + 2) = v152 - 1;
          v27 = v152 - 1;
        }
        while (v152 > 2);
      }
LABEL_115:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v153 + 16) = 0;
      swift_bridgeObjectRelease();
      return;
    }
  }
  else
  {
    v22 = v21 >> 1;
    v23 = sub_1DC408D58();
    *(_QWORD *)(v23 + 16) = v22;
    v24 = *(unsigned __int8 *)(v182 + 80);
    v153 = v23;
    v161 = v23 + ((v24 + 32) & ~v24);
  }
  v26 = 0;
  v25 = (char *)MEMORY[0x1E0DEE9D8];
  v173 = a1;
  while (1)
  {
    v156 = v25;
    v28 = v26;
    v160 = v26;
    if (v26 + 1 >= v19)
    {
      v44 = v26 + 1;
      v25 = v156;
    }
    else
    {
      v157 = *a1;
      v29 = v157;
      v180 = *(_QWORD *)(v182 + 72);
      v30 = v180;
      v175 = v26 + 1;
      v31 = *(void (**)(void))(v182 + 16);
      v32 = v174;
      v31();
      v33 = v167;
      v177 = v31;
      ((void (*)(char *, uint64_t, uint64_t))v31)(v167, v29 + v30 * v28, v32);
      v34 = (uint64_t)v168;
      sub_1DC3FFC08();
      v179 = v19;
      v35 = v163;
      v36 = *(void (**)(char *, uint64_t, uint64_t))(v163 + 16);
      v37 = v170;
      v38 = v172;
      v36(v170, v34, v172);
      sub_1DC35DE3C(v34);
      v39 = (uint64_t)v169;
      sub_1DC3FFC08();
      v40 = v171;
      v166 = v36;
      v36(v171, v39, v38);
      sub_1DC35DE3C(v39);
      LODWORD(v178) = sub_1DC3FFC38();
      v41 = *(void (**)(char *, uint64_t))(v35 + 8);
      v19 = v179;
      v41(v40, v38);
      v165 = v41;
      v41(v37, v38);
      v42 = *(void (**)(char *, uint64_t))(v182 + 8);
      v28 = v160;
      v42(v33, v32);
      v164 = (char *)v42;
      v42(v181, v32);
      v43 = v180;
      v44 = v28 + 2;
      if (v28 + 2 < v19)
      {
        v155 = v2;
        v162 = v180 * v175;
        v45 = v157;
        v158 = v180 * v44;
        while (1)
        {
          v175 = v44;
          v46 = v174;
          v47 = v177;
          v177();
          v48 = v167;
          ((void (*)(char *, uint64_t, uint64_t))v47)(v167, v45 + v162, v46);
          v49 = (uint64_t)v168;
          sub_1DC3FFC08();
          v50 = v170;
          v51 = v172;
          v52 = v166;
          v166(v170, v49, v172);
          sub_1DC35DE3C(v49);
          v53 = (uint64_t)v169;
          sub_1DC3FFC08();
          v54 = v171;
          v52(v171, v53, v51);
          sub_1DC35DE3C(v53);
          v55 = sub_1DC3FFC38();
          v56 = v165;
          v165(v54, v51);
          v56(v50, v51);
          v57 = (void (*)(char *, uint64_t))v164;
          ((void (*)(char *, uint64_t))v164)(v48, v46);
          v57(v181, v46);
          if (((v178 ^ v55) & 1) != 0)
            break;
          v44 = v175 + 1;
          v19 = v179;
          v43 = v180;
          v45 += v180;
          if (v179 == v175 + 1)
          {
            v44 = v179;
            v2 = v155;
            v28 = v160;
            goto LABEL_23;
          }
        }
        v2 = v155;
        v44 = v175;
        v28 = v160;
        v19 = v179;
        v43 = v180;
      }
LABEL_23:
      a1 = v173;
      v25 = v156;
      if ((v178 & 1) != 0)
      {
        if (v44 < v28)
          goto LABEL_139;
        if (v28 < v44)
        {
          v155 = v2;
          v58 = v28;
          v59 = 0;
          v60 = v43 * (v44 - 1);
          v61 = v44 * v43;
          v62 = v58;
          v63 = v58 * v43;
          v175 = v44;
          do
          {
            if (v62 != v44 + v59 - 1)
            {
              if (!v157)
                goto LABEL_144;
              v65 = v157 + v63;
              v66 = (char *)(v157 + v60);
              v67 = v157;
              v68 = *(void (**)(char *, uint64_t, uint64_t))(v182 + 32);
              v68(v159, v157 + v63, v174);
              if (v63 < v60 || v65 >= v67 + v61)
              {
                v64 = v174;
                swift_arrayInitWithTakeFrontToBack();
              }
              else
              {
                v64 = v174;
                if (v63 != v60)
                  swift_arrayInitWithTakeBackToFront();
              }
              v68(v66, (uint64_t)v159, v64);
              a1 = v173;
              v44 = v175;
              v43 = v180;
            }
            ++v62;
            --v59;
            v60 -= v43;
            v61 -= v43;
            v63 += v43;
          }
          while (v62 < v44 + v59);
          v2 = v155;
          v25 = v156;
          v28 = v160;
          v19 = v179;
        }
      }
    }
    if (v44 < v19)
    {
      if (__OFSUB__(v44, v28))
        goto LABEL_137;
      if (v44 - v28 < v154)
        break;
    }
LABEL_55:
    if (v44 < v28)
      goto LABEL_132;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v25 = sub_1DC35D898(0, *((_QWORD *)v25 + 2) + 1, 1, v25);
    v95 = *((_QWORD *)v25 + 2);
    v94 = *((_QWORD *)v25 + 3);
    v27 = v95 + 1;
    if (v95 >= v94 >> 1)
      v25 = sub_1DC35D898((char *)(v94 > 1), v95 + 1, 1, v25);
    *((_QWORD *)v25 + 2) = v27;
    v96 = &v25[16 * v95 + 32];
    *(_QWORD *)v96 = v28;
    *((_QWORD *)v96 + 1) = v44;
    v175 = v44;
    if (v95)
    {
      v97 = v25 + 32;
      while (1)
      {
        v98 = v27 - 1;
        if (v27 >= 4)
        {
          v103 = &v97[16 * v27];
          v104 = *((_QWORD *)v103 - 8);
          v105 = *((_QWORD *)v103 - 7);
          v109 = __OFSUB__(v105, v104);
          v106 = v105 - v104;
          if (v109)
            goto LABEL_121;
          v108 = *((_QWORD *)v103 - 6);
          v107 = *((_QWORD *)v103 - 5);
          v109 = __OFSUB__(v107, v108);
          v101 = v107 - v108;
          v102 = v109;
          if (v109)
            goto LABEL_122;
          v110 = v27 - 2;
          v111 = &v97[16 * v27 - 32];
          v113 = *(_QWORD *)v111;
          v112 = *((_QWORD *)v111 + 1);
          v109 = __OFSUB__(v112, v113);
          v114 = v112 - v113;
          if (v109)
            goto LABEL_124;
          v109 = __OFADD__(v101, v114);
          v115 = v101 + v114;
          if (v109)
            goto LABEL_127;
          if (v115 >= v106)
          {
            v133 = &v97[16 * v98];
            v135 = *(_QWORD *)v133;
            v134 = *((_QWORD *)v133 + 1);
            v109 = __OFSUB__(v134, v135);
            v136 = v134 - v135;
            if (v109)
              goto LABEL_131;
            v126 = v101 < v136;
            goto LABEL_93;
          }
        }
        else
        {
          if (v27 != 3)
          {
            v127 = *((_QWORD *)v25 + 4);
            v128 = *((_QWORD *)v25 + 5);
            v109 = __OFSUB__(v128, v127);
            v120 = v128 - v127;
            v121 = v109;
            goto LABEL_87;
          }
          v100 = *((_QWORD *)v25 + 4);
          v99 = *((_QWORD *)v25 + 5);
          v109 = __OFSUB__(v99, v100);
          v101 = v99 - v100;
          v102 = v109;
        }
        if ((v102 & 1) != 0)
          goto LABEL_123;
        v110 = v27 - 2;
        v116 = &v97[16 * v27 - 32];
        v118 = *(_QWORD *)v116;
        v117 = *((_QWORD *)v116 + 1);
        v119 = __OFSUB__(v117, v118);
        v120 = v117 - v118;
        v121 = v119;
        if (v119)
          goto LABEL_126;
        v122 = &v97[16 * v98];
        v124 = *(_QWORD *)v122;
        v123 = *((_QWORD *)v122 + 1);
        v109 = __OFSUB__(v123, v124);
        v125 = v123 - v124;
        if (v109)
          goto LABEL_129;
        if (__OFADD__(v120, v125))
          goto LABEL_130;
        if (v120 + v125 >= v101)
        {
          v126 = v101 < v125;
LABEL_93:
          if (v126)
            v98 = v110;
          goto LABEL_95;
        }
LABEL_87:
        if ((v121 & 1) != 0)
          goto LABEL_125;
        v129 = &v97[16 * v98];
        v131 = *(_QWORD *)v129;
        v130 = *((_QWORD *)v129 + 1);
        v109 = __OFSUB__(v130, v131);
        v132 = v130 - v131;
        if (v109)
          goto LABEL_128;
        if (v132 < v120)
          goto LABEL_14;
LABEL_95:
        v137 = v98 - 1;
        if (v98 - 1 >= v27)
        {
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
          goto LABEL_141;
        }
        v138 = *a1;
        if (!*a1)
          goto LABEL_143;
        v139 = &v97[16 * v137];
        v140 = v97;
        v141 = *(_QWORD *)v139;
        v142 = &v140[16 * v98];
        v143 = *((_QWORD *)v142 + 1);
        sub_1DC35D1C4(v138 + *(_QWORD *)(v182 + 72) * *(_QWORD *)v139, v138 + *(_QWORD *)(v182 + 72) * *(_QWORD *)v142, v138 + *(_QWORD *)(v182 + 72) * v143, v161);
        if (v2)
          goto LABEL_115;
        if (v143 < v141)
          goto LABEL_118;
        if (v98 > *((_QWORD *)v25 + 2))
          goto LABEL_119;
        *(_QWORD *)v139 = v141;
        *(_QWORD *)&v25[16 * v137 + 40] = v143;
        v144 = *((_QWORD *)v25 + 2);
        if (v98 >= v144)
          goto LABEL_120;
        v97 = v25 + 32;
        v27 = v144 - 1;
        memmove(v142, v142 + 16, 16 * (v144 - 1 - v98));
        *((_QWORD *)v25 + 2) = v144 - 1;
        a1 = v173;
        if (v144 <= 2)
          goto LABEL_14;
      }
    }
    v27 = 1;
LABEL_14:
    v19 = a1[1];
    v26 = v175;
    if (v175 >= v19)
      goto LABEL_104;
  }
  if (__OFADD__(v28, v154))
    goto LABEL_140;
  if (v28 + v154 >= v19)
    v69 = v19;
  else
    v69 = v28 + v154;
  if (v69 >= v28)
  {
    if (v44 != v69)
    {
      v155 = v2;
      v70 = *(char **)(v182 + 72);
      v162 = *(_QWORD *)(v182 + 16);
      v71 = (_QWORD)v70 * (v44 - 1);
      v164 = v70;
      v72 = v44 * (_QWORD)v70;
      v73 = v174;
      v158 = v69;
      do
      {
        v75 = 0;
        v175 = v44;
        v165 = (void (*)(char *, uint64_t))v72;
        v166 = (void (*)(char *, uint64_t, uint64_t))v71;
        while (1)
        {
          v180 = v28;
          v76 = *a1;
          v179 = (uint64_t)v75 + v72;
          v77 = (void (*)(char *, char *, uint64_t))v162;
          ((void (*)(void))v162)();
          v177 = v75;
          v178 = (char *)v75 + v71;
          v78 = v167;
          v77(v167, (char *)v75 + v71 + v76, v73);
          v79 = (uint64_t)v168;
          sub_1DC3FFC08();
          v80 = v163;
          v81 = *(void (**)(char *, uint64_t, uint64_t))(v163 + 16);
          v82 = v170;
          v83 = a1;
          v84 = v172;
          v81(v170, v79, v172);
          sub_1DC35DE3C(v79);
          v85 = (uint64_t)v169;
          sub_1DC3FFC08();
          v86 = v171;
          v81(v171, v85, v84);
          sub_1DC35DE3C(v85);
          v87 = sub_1DC3FFC38();
          v88 = *(void (**)(char *, uint64_t))(v80 + 8);
          v73 = v174;
          v88(v86, v84);
          v88(v82, v84);
          v89 = *(void (**)(char *, uint64_t))(v182 + 8);
          v89(v78, v73);
          v89(v181, v73);
          if ((v87 & 1) == 0)
            break;
          v90 = *v83;
          if (!*v83)
            goto LABEL_142;
          v72 = (uint64_t)v165;
          v71 = (uint64_t)v166;
          v91 = v177;
          v92 = (char *)v177 + (_QWORD)v166 + v90;
          v93 = *(void (**)(char *, char *, uint64_t))(v182 + 32);
          v93(v176, (char *)v177 + (_QWORD)v165 + v90, v73);
          v74 = v175;
          swift_arrayInitWithTakeFrontToBack();
          v93(v92, v176, v73);
          v75 = (void (*)(void))((char *)v91 - (char *)v164);
          v28 = v180 + 1;
          a1 = v173;
          if (v74 == v180 + 1)
            goto LABEL_48;
        }
        v74 = v175;
        a1 = v83;
        v72 = (uint64_t)v165;
        v71 = (uint64_t)v166;
LABEL_48:
        v44 = v74 + 1;
        v71 += (uint64_t)v164;
        v72 += (uint64_t)v164;
        v28 = v160;
      }
      while (v44 != v158);
      v44 = v158;
      v2 = v155;
      v25 = v156;
    }
    goto LABEL_55;
  }
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  sub_1DC40982C();
  __break(1u);
}

void sub_1DC35CE38(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(__n128);
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t, uint64_t);
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  void (*v38)(char *, uint64_t);
  char *v39;
  char *v40;
  uint64_t v41;
  void (*v42)(char *, uint64_t);
  char *v43;
  uint64_t v44;
  char *v45;
  void (*v46)(char *, uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(__n128);
  _QWORD *v51;
  char *v52;
  char *v53;
  char *v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  char *v68;

  v49 = a1;
  v7 = sub_1DC3FFC44();
  v57 = *(_QWORD *)(v7 - 8);
  v58 = v7;
  MEMORY[0x1E0C80A78](v7);
  v56 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v55 = (char *)&v47 - v10;
  sub_1DC358324();
  MEMORY[0x1E0C80A78](v11);
  v54 = (char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v53 = (char *)&v47 - v14;
  v15 = sub_1DC3FFC14();
  v66 = *(_QWORD **)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v63 = (char *)&v47 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v52 = (char *)&v47 - v18;
  v20 = MEMORY[0x1E0C80A78](v19);
  v68 = (char *)&v47 - v21;
  v62 = a3;
  v48 = a2;
  if (a3 != a2)
  {
    v22 = v66[9];
    v50 = (void (*)(__n128))v66[2];
    v51 = a4;
    v23 = v22 * (v62 - 1);
    v59 = v22;
    v24 = v22 * v62;
LABEL_5:
    v25 = 0;
    v67 = v49;
    v60 = v24;
    v61 = v23;
    while (1)
    {
      v26 = *a4;
      v65 = v24 + v25;
      v27 = v50;
      v50(v20);
      v64 = v23 + v25;
      v28 = v23 + v25 + v26;
      v29 = v52;
      ((void (*)(char *, uint64_t, uint64_t))v27)(v52, v28, v15);
      v30 = (uint64_t)v53;
      sub_1DC3FFC08();
      v32 = v57;
      v31 = v58;
      v33 = *(void (**)(char *, uint64_t, uint64_t))(v57 + 16);
      v34 = v55;
      v33(v55, v30, v58);
      sub_1DC35DE3C(v30);
      v35 = (uint64_t)v54;
      sub_1DC3FFC08();
      v36 = v15;
      v37 = v56;
      v33(v56, v35, v31);
      sub_1DC35DE3C(v35);
      LOBYTE(v35) = sub_1DC3FFC38();
      v38 = *(void (**)(char *, uint64_t))(v32 + 8);
      v39 = v37;
      v15 = v36;
      v38(v39, v31);
      v40 = v34;
      v24 = v60;
      v41 = v31;
      a4 = v51;
      v38(v40, v41);
      v42 = (void (*)(char *, uint64_t))v66[1];
      v43 = v29;
      v23 = v61;
      v42(v43, v36);
      v42(v68, v36);
      if ((v35 & 1) == 0)
      {
LABEL_4:
        v23 += v59;
        v24 += v59;
        if (++v62 == v48)
          return;
        goto LABEL_5;
      }
      v44 = *a4;
      if (!*a4)
        break;
      v45 = (char *)(v44 + v23 + v25);
      v46 = (void (*)(char *, uint64_t, uint64_t))v66[4];
      v46(v63, v44 + v24 + v25, v15);
      swift_arrayInitWithTakeFrontToBack();
      v46(v45, (uint64_t)v63, v15);
      v25 -= v59;
      if (v62 == ++v67)
        goto LABEL_4;
    }
    __break(1u);
  }
}

uint64_t sub_1DC35D1C4(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v28;
  char *v29;
  char *v30;
  uint64_t v31;
  void (*v32)(void);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t, uint64_t);
  uint64_t v37;
  void (*v38)(char *, uint64_t);
  void (*v39)(char *, uint64_t);
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  void (*v50)(void);
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(char *, uint64_t, uint64_t);
  uint64_t v56;
  char *v57;
  char v58;
  void (*v59)(char *, uint64_t);
  void (*v60)(char *, uint64_t);
  uint64_t v61;
  unint64_t v62;
  void (*v63)(void);
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;
  uint64_t result;
  uint64_t v68;
  uint64_t v69;
  void (*v70)(void);
  void (*v71)(void);
  unint64_t v72;
  uint64_t v73;
  unint64_t v74;
  char *v75;
  char *v76;
  char *v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  unint64_t v85;
  char *v86;
  unint64_t v87;
  unint64_t v88;
  unint64_t v89;

  v8 = sub_1DC3FFC44();
  v9 = *(_QWORD *)(v8 - 8);
  v80 = v8;
  v81 = v9;
  MEMORY[0x1E0C80A78](v8);
  v79 = (char *)&v68 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v76 = (char *)&v68 - v12;
  sub_1DC358324();
  MEMORY[0x1E0C80A78](v13);
  v78 = (char *)&v68 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v77 = (char *)&v68 - v16;
  v84 = sub_1DC3FFC14();
  MEMORY[0x1E0C80A78](v84);
  v75 = (char *)&v68 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v86 = (char *)&v68 - v19;
  v82 = v20;
  v21 = *(_QWORD *)(v20 + 72);
  if (!v21)
  {
    __break(1u);
LABEL_61:
    __break(1u);
LABEL_62:
    __break(1u);
    goto LABEL_63;
  }
  if (a2 - a1 == 0x8000000000000000 && v21 == -1)
    goto LABEL_61;
  v22 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v21 == -1)
    goto LABEL_62;
  v23 = (uint64_t)(a2 - a1) / v21;
  v89 = a1;
  v88 = a4;
  v24 = v22 / v21;
  if (v23 >= v22 / v21)
  {
    if ((v24 & 0x8000000000000000) == 0)
    {
      v26 = v24 * v21;
      if (a4 < a2 || a2 + v26 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      v87 = a4 + v26;
      v89 = a2;
      if (v26 >= 1 && a1 < a2)
      {
        v47 = -v21;
        v70 = *(void (**)(void))(v82 + 16);
        v71 = (void (*)(void))a1;
        v72 = a4;
        v69 = -v21;
        v48 = v76;
        do
        {
          v85 = a2;
          v83 = a3;
          v74 = a3 + v47;
          v49 = v84;
          v50 = v70;
          v70();
          v51 = v75;
          v73 = a2 + v47;
          ((void (*)(char *))v50)(v75);
          v52 = (uint64_t)v77;
          sub_1DC3FFC08();
          v54 = v80;
          v53 = v81;
          v55 = *(void (**)(char *, uint64_t, uint64_t))(v81 + 16);
          v55(v48, v52, v80);
          sub_1DC35DE3C(v52);
          v56 = (uint64_t)v78;
          sub_1DC3FFC08();
          v57 = v79;
          v55(v79, v56, v54);
          sub_1DC35DE3C(v56);
          v58 = sub_1DC3FFC38();
          v59 = *(void (**)(char *, uint64_t))(v53 + 8);
          v59(v57, v54);
          v59(v48, v54);
          v60 = *(void (**)(char *, uint64_t))(v82 + 8);
          v60(v51, v49);
          v60(v86, v49);
          if ((v58 & 1) != 0)
          {
            v61 = v69;
            v62 = v74;
            if (v83 < v85 || v74 >= v85)
            {
              v65 = v73;
              swift_arrayInitWithTakeFrontToBack();
              v63 = v71;
              v64 = v72;
              v47 = v61;
            }
            else
            {
              v63 = v71;
              v64 = v72;
              v47 = v69;
              v65 = v73;
              if (v83 != v85)
                swift_arrayInitWithTakeBackToFront();
            }
            v89 += v47;
          }
          else
          {
            v65 = v85;
            v66 = v87;
            v87 += v69;
            v47 = v69;
            v62 = v74;
            if (v83 < v66 || v74 >= v66)
            {
              swift_arrayInitWithTakeFrontToBack();
              v63 = v71;
              v64 = v72;
            }
            else
            {
              v63 = v71;
              v64 = v72;
              if (v83 != v66)
                swift_arrayInitWithTakeBackToFront();
            }
          }
          if (v87 <= v64)
            break;
          a2 = v65;
          a3 = v62;
        }
        while (v65 > (unint64_t)v63);
      }
      goto LABEL_59;
    }
  }
  else if ((v23 & 0x8000000000000000) == 0)
  {
    v25 = v23 * v21;
    if (a4 < a1 || a1 + v25 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    v74 = a4 + v25;
    v87 = a4 + v25;
    if (v25 >= 1 && a2 < a3)
    {
      v71 = *(void (**)(void))(v82 + 16);
      v83 = a3;
      v73 = v21;
      v28 = v75;
      v29 = v76;
      v30 = v79;
      do
      {
        v85 = a2;
        v31 = v84;
        v32 = v71;
        v71();
        ((void (*)(char *, unint64_t, uint64_t))v32)(v28, a4, v31);
        v33 = (uint64_t)v77;
        sub_1DC3FFC08();
        v34 = v80;
        v35 = v81;
        v36 = *(void (**)(char *, uint64_t, uint64_t))(v81 + 16);
        v36(v29, v33, v80);
        sub_1DC35DE3C(v33);
        v37 = (uint64_t)v78;
        sub_1DC3FFC08();
        v36(v30, v37, v34);
        sub_1DC35DE3C(v37);
        LOBYTE(v37) = sub_1DC3FFC38();
        v38 = *(void (**)(char *, uint64_t))(v35 + 8);
        v38(v30, v34);
        v38(v29, v34);
        v39 = *(void (**)(char *, uint64_t))(v82 + 8);
        v39(v28, v31);
        v39(v86, v31);
        v40 = v89;
        if ((v37 & 1) != 0)
        {
          v41 = v73;
          v42 = v85 + v73;
          if (v89 < v85 || v89 >= v42)
          {
            swift_arrayInitWithTakeFrontToBack();
            v43 = v83;
          }
          else
          {
            v43 = v83;
            if (v89 == v85)
              v40 = v85;
            else
              swift_arrayInitWithTakeBackToFront();
          }
        }
        else
        {
          v44 = v85;
          v41 = v73;
          v45 = v88 + v73;
          if (v89 < v88 || v89 >= v45)
          {
            swift_arrayInitWithTakeFrontToBack();
            v43 = v83;
          }
          else
          {
            v43 = v83;
            if (v89 != v88)
              swift_arrayInitWithTakeBackToFront();
          }
          v88 = v45;
          v42 = v44;
        }
        v89 = v40 + v41;
        a4 = v88;
        if (v88 >= v74)
          break;
        a2 = v42;
      }
      while (v42 < v43);
    }
LABEL_59:
    sub_1DC35DAEC(&v89, &v88, (uint64_t *)&v87, (uint64_t (*)(_QWORD))MEMORY[0x1E0CAF138]);
    return 1;
  }
LABEL_63:
  result = sub_1DC40988C();
  __break(1u);
  return result;
}

char *sub_1DC35D898(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1DC35DE78();
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1DC35D990(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *result;
  uint64_t v7;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  v5 = v4 + 7;
  if (v4 >= 0)
    v5 = *a3 - (_QWORD)v3;
  if (v4 <= -8)
  {
    result = (char *)sub_1DC40988C();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v7 = v5 >> 3;
    if (result != v3 || result >= &v3[8 * v7])
      return (char *)memmove(result, v3, 8 * v7);
  }
  return result;
}

char *sub_1DC35DA38(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *result;
  uint64_t v7;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  v5 = v4 + 31;
  if (v4 >= 0)
    v5 = *a3 - (_QWORD)v3;
  if (v4 <= -32)
  {
    result = (char *)sub_1DC40988C();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v7 = v5 >> 5;
    if (result != v3 || result >= &v3[32 * v7])
      return (char *)memmove(result, v3, 32 * v7);
  }
  return result;
}

uint64_t sub_1DC35DAE0(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_1DC35DAEC(a1, a2, a3, (uint64_t (*)(_QWORD))sub_1DC157CB8);
}

uint64_t sub_1DC35DAEC(unint64_t *a1, unint64_t *a2, uint64_t *a3, uint64_t (*a4)(_QWORD))
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;

  v4 = *a1;
  v5 = *a2;
  v6 = *a3;
  result = a4(0);
  v8 = *(_QWORD *)(*(_QWORD *)(result - 8) + 72);
  if (!v8)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v9 = v6 - v5;
  if (v6 - v5 == 0x8000000000000000 && v8 == -1)
    goto LABEL_14;
  if (v9 / v8 < 0)
  {
LABEL_15:
    result = sub_1DC40988C();
    __break(1u);
    return result;
  }
  if (v4 < v5 || v4 >= v5 + v9 / v8 * v8)
    return swift_arrayInitWithTakeFrontToBack();
  if (v4 != v5)
    return swift_arrayInitWithTakeBackToFront();
  return result;
}

char *sub_1DC35DBF8(uint64_t a1)
{
  return sub_1DC35D898(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

unint64_t sub_1DC35DC0C(uint64_t (*a1)(_QWORD *), uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  _QWORD v12[2];

  v5 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0)
    v5 = a3 & 0xFFFFFFFFFFFFLL;
  if (!v5)
    return 0;
  while (1)
  {
    v7 = sub_1DC408B30();
    v12[0] = sub_1DC408BC0();
    v12[1] = v8;
    v9 = a1(v12);
    if (v4)
      break;
    v10 = v9;
    swift_bridgeObjectRelease();
    if ((v10 & 1) != 0)
      return v7;
    if (v7 < 0x4000)
      return 0;
  }
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1DC35DD10(uint64_t a1, __int128 *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t *boxed_opaque_existential_1;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;

  v14 = a4;
  v15 = a5;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v13);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 32))(boxed_opaque_existential_1, a1, a4);
  v9 = swift_allocObject();
  sub_1DC097DD0(&v13, v9 + 16);
  v10 = *a2;
  *(_OWORD *)(v9 + 72) = a2[1];
  v11 = a2[3];
  *(_OWORD *)(v9 + 88) = a2[2];
  *(_OWORD *)(v9 + 104) = v11;
  *(_OWORD *)(v9 + 120) = a2[4];
  *(_OWORD *)(v9 + 56) = v10;
  return v9;
}

uint64_t sub_1DC35DDAC(_QWORD *a1)
{
  return sub_1DC2AF1C8(0, a1[2], 0, a1);
}

uint64_t sub_1DC35DDC0(uint64_t a1)
{
  return sub_1DC2AF1DC(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1DC35DDD4(_QWORD *a1)
{
  return sub_1DC2AF360(0, a1[2], 0, a1);
}

uint64_t sub_1DC35DDE8(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v2;

  v2 = *(_QWORD **)(v1 + 16);
  if (*a1 == *v2 && a1[1] == v2[1])
    return 1;
  else
    return sub_1DC4099E8() & 1;
}

uint64_t sub_1DC35DE3C(uint64_t a1)
{
  uint64_t v2;

  sub_1DC358324();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1DC35DE78()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F0352568)
  {
    sub_1DC35E2FC(255, &qword_1F0352570, MEMORY[0x1E0DEB418], MEMORY[0x1E0DEB430], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DEB848]);
    v0 = sub_1DC4099C4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1F0352568);
  }
}

void sub_1DC35DEEC(void *a1)
{
  id v2;
  id v3;
  id v4;
  id v5;

  v2 = objc_msgSend(a1, sel_textContainer);
  objc_msgSend(v2, sel_setMaximumNumberOfLines_, 0);

  v3 = objc_msgSend(a1, sel_textContainer);
  objc_msgSend(v3, sel_setLineBreakMode_, 0);

  v4 = objc_msgSend(a1, sel_textContainer);
  objc_msgSend(v4, sel_setLineFragmentPadding_, 0.0);

  objc_msgSend(a1, sel_setTextContainerInset_, *MEMORY[0x1E0DC49E8], *(double *)(MEMORY[0x1E0DC49E8] + 8), *(double *)(MEMORY[0x1E0DC49E8] + 16), *(double *)(MEMORY[0x1E0DC49E8] + 24));
  objc_msgSend(a1, sel_setEditable_, 0);
  objc_msgSend(a1, sel_setSelectable_, 0);
  objc_msgSend(a1, sel_setScrollEnabled_, 0);
  objc_msgSend(a1, sel_setShowsVerticalScrollIndicator_, 0);
  objc_msgSend(a1, sel_setShowsHorizontalScrollIndicator_, 0);
  v5 = objc_msgSend((id)objc_opt_self(), sel_clearColor);
  objc_msgSend(a1, sel_setBackgroundColor_, v5);

}

void sub_1DC35E05C(uint64_t a1, unint64_t *a2)
{
  unint64_t v3;
  uint64_t v4;

  if (!*a2)
  {
    sub_1DC1A4D18();
    v3 = sub_1DC409880();
    if (!v4)
      atomic_store(v3, a2);
  }
}

uint64_t sub_1DC35E0BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for StockViewRenderer.RenderedState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_1DC35E100()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F0352578)
  {
    sub_1DC089DA4(255, &qword_1EDB3F630, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF0D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    v0 = sub_1DC409880();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1F0352578);
  }
}

void sub_1DC35E17C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB3FD28)
  {
    sub_1DC0821D4(255, (unint64_t *)&unk_1EDB3F870);
    v0 = sub_1DC409880();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB3FD28);
  }
}

void sub_1DC35E1F0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    a3(255);
    a4();
    v6 = sub_1DC409880();
    if (!v7)
      atomic_store(v6, a2);
  }
}

unint64_t sub_1DC35E264()
{
  unint64_t result;

  result = qword_1EDB3F028;
  if (!qword_1EDB3F028)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC42CDD8, &type metadata for TickerCardContainerControllerAnimationCoordinator.Step);
    atomic_store(result, (unint64_t *)&qword_1EDB3F028);
  }
  return result;
}

uint64_t sub_1DC35E2A8(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(_QWORD, uint64_t, uint64_t), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_1DC35E2FC(255, a2, MEMORY[0x1E0DEA790], MEMORY[0x1E0DEA7A0], a3);
    result = MEMORY[0x1DF0CAB8C](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1DC35E2FC(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD, uint64_t, uint64_t))
{
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    v6 = a5(0, a3, a4);
    if (!v7)
      atomic_store(v6, a2);
  }
}

uint64_t sub_1DC35E344(uint64_t a1)
{
  id v2;

  v2 = *(id *)(a1 + 72);
  return a1;
}

void sub_1DC35E36C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB3FCE8)
  {
    sub_1DC0821D4(255, (unint64_t *)&unk_1EDB3FB40);
    sub_1DC1A4D18();
    v0 = sub_1DC409880();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB3FCE8);
  }
}

void sub_1DC35E3E4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F03525A0)
  {
    type metadata accessor for UIContentSizeCategory(255);
    v0 = sub_1DC4099C4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1F03525A0);
  }
}

uint64_t static Settings.Refreshing.MarketData.overrideEnabled.getter()
{
  return sub_1DC10D910(&qword_1EDB28E58);
}

uint64_t sub_1DC35E454()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t result;
  _QWORD v5[4];

  v0 = sub_1DC401348();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC08A0F4(0, (unint64_t *)&unk_1F034F208);
  v5[2] = 0x3FF0000000000000;
  v5[3] = 0x3FF0000000000000;
  v5[1] = 0x7FEFFFFFFFFFFFFFLL;
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB57E0], v0);
  result = sub_1DC401390();
  qword_1F03525A8 = result;
  return result;
}

uint64_t static Settings.Refreshing.MarketData.overrideInterval.getter()
{
  return sub_1DC10D910(&qword_1F034B150);
}

ValueMetadata *type metadata accessor for Settings.Refreshing()
{
  return &type metadata for Settings.Refreshing;
}

ValueMetadata *type metadata accessor for Settings.Refreshing.MarketData()
{
  return &type metadata for Settings.Refreshing.MarketData;
}

uint64_t FCFeedGroupType.groupType()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unsigned int *v3;
  uint64_t v4;
  uint64_t v5;

  switch(a1)
  {
    case 18:
      v3 = (unsigned int *)MEMORY[0x1E0DADF78];
      break;
    case 19:
      v3 = (unsigned int *)MEMORY[0x1E0DADF68];
      break;
    case 23:
      v3 = (unsigned int *)MEMORY[0x1E0DADF60];
      break;
    case 26:
      v3 = (unsigned int *)MEMORY[0x1E0DADF48];
      break;
    default:
      v3 = (unsigned int *)MEMORY[0x1E0DADF70];
      break;
  }
  v4 = *v3;
  v5 = sub_1DC403B14();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
}

ValueMetadata *type metadata accessor for TickerOfflineModel()
{
  return &type metadata for TickerOfflineModel;
}

uint64_t sub_1DC35E624()
{
  uint64_t v0;
  uint64_t ObjCClassFromMetadata;
  void *v2;
  id v3;
  id v4;

  v0 = sub_1DC407EAC();
  __swift_allocate_value_buffer(v0, qword_1F0368CB0);
  __swift_project_value_buffer(v0, (uint64_t)qword_1F0368CB0);
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v2 = (void *)objc_opt_self();
  v3 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1DC3FFC80();

  v4 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata, 0x80000001DC449680);
  sub_1DC3FFC80();

  return sub_1DC407E58();
}

uint64_t sub_1DC35E7C4()
{
  uint64_t v0;
  uint64_t ObjCClassFromMetadata;
  void *v2;
  id v3;
  id v4;

  v0 = sub_1DC407EAC();
  __swift_allocate_value_buffer(v0, qword_1F0368CC8);
  __swift_project_value_buffer(v0, (uint64_t)qword_1F0368CC8);
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v2 = (void *)objc_opt_self();
  v3 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1DC3FFC80();

  v4 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata, 0x80000001DC4495A0);
  sub_1DC3FFC80();

  return sub_1DC407E58();
}

uint64_t sub_1DC35E964()
{
  uint64_t v0;
  uint64_t ObjCClassFromMetadata;
  void *v2;
  id v3;
  id v4;

  v0 = sub_1DC407EAC();
  __swift_allocate_value_buffer(v0, qword_1F0368CE0);
  __swift_project_value_buffer(v0, (uint64_t)qword_1F0368CE0);
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v2 = (void *)objc_opt_self();
  v3 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1DC3FFC80();

  v4 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata, 0x80000001DC4494C0);
  sub_1DC3FFC80();

  return sub_1DC407E58();
}

uint64_t sub_1DC35EB08()
{
  uint64_t v0;
  uint64_t ObjCClassFromMetadata;
  void *v2;
  id v3;
  id v4;

  v0 = sub_1DC407EAC();
  __swift_allocate_value_buffer(v0, qword_1F0368CF8);
  __swift_project_value_buffer(v0, (uint64_t)qword_1F0368CF8);
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v2 = (void *)objc_opt_self();
  v3 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1DC3FFC80();

  v4 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata, 0x80000001DC4493F0);
  sub_1DC3FFC80();

  return sub_1DC407E58();
}

uint64_t sub_1DC35ECA4@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC1825D8(&qword_1F034B158, (uint64_t)qword_1F0368CB0, a1);
}

uint64_t sub_1DC35ECC0@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC1825D8(&qword_1F034B160, (uint64_t)qword_1F0368CC8, a1);
}

uint64_t sub_1DC35ECDC@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC1825D8(&qword_1F034B168, (uint64_t)qword_1F0368CE0, a1);
}

uint64_t sub_1DC35ECF8@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC1825D8(&qword_1F034B170, (uint64_t)qword_1F0368CF8, a1);
}

uint64_t sub_1DC35ED14()
{
  sub_1DC089DA4(0, &qword_1EDB29660, (uint64_t (*)(uint64_t))sub_1DC19DD20, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  return sub_1DC402DA0();
}

void sub_1DC35ED84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  void *v27;
  _QWORD v28[5];
  uint64_t v29;

  v28[3] = a8;
  v28[4] = a5;
  v29 = a1;
  v28[1] = a11;
  v28[2] = a10;
  v12 = sub_1DC4025B4();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1DC3FFFEC();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)v28 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC3FFFE0();
  (*(void (**)(char *, _QWORD, uint64_t))(v13 + 104))(v15, *MEMORY[0x1E0DB3560], v12);
  sub_1DC400718();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  v20 = swift_allocObject();
  v21 = v29;
  *(_QWORD *)(v20 + 16) = v29;
  *(_QWORD *)(v20 + 24) = a2;
  swift_retain();
  v22 = (void *)sub_1DC402C80();
  sub_1DC402D04();
  swift_release();
  swift_release();

  v23 = (void *)sub_1DC402C80();
  sub_1DC402D94();
  swift_release();

  v24 = swift_allocObject();
  *(_QWORD *)(v24 + 16) = v21;
  *(_QWORD *)(v24 + 24) = a2;
  swift_retain();
  v25 = (void *)sub_1DC402C80();
  sub_1DC402D88();
  swift_release();
  swift_release();

  v26 = swift_allocObject();
  *(_QWORD *)(v26 + 16) = v21;
  *(_QWORD *)(v26 + 24) = a2;
  swift_retain();
  v27 = (void *)sub_1DC402C80();
  sub_1DC402D34();
  swift_release();
  swift_release();
  swift_release();

}

void sub_1DC35EFF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;

  sub_1DC35ED84(a1, a2, a3, a4, v4[4], v4[5], v4[6], v4[7], v4[8], v4[2], v4[3]);
}

uint64_t sub_1DC35F02C(uint64_t a1, void (*a2)(char *))
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  sub_1DC19DD20(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1DC400F7C();
  v8 = *(_QWORD *)(v7 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v6, a1, v7);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
  a2(v6);
  return sub_1DC35F280((uint64_t)v6);
}

uint64_t sub_1DC35F0F4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DC35F118(uint64_t a1)
{
  uint64_t v1;

  return sub_1DC35F02C(a1, *(void (**)(char *))(v1 + 16));
}

uint64_t sub_1DC35F130(uint64_t a1, void (*a2)(char *))
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v8;

  sub_1DC19DD20(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1DC400F7C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  a2(v5);
  return sub_1DC35F280((uint64_t)v5);
}

uint64_t sub_1DC35F1CC(uint64_t a1)
{
  uint64_t v1;

  return sub_1DC35F130(a1, *(void (**)(char *))(v1 + 16));
}

uint64_t sub_1DC35F1E4(uint64_t a1, void (*a2)(char *))
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v8;

  sub_1DC19DD20(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1DC400F7C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  a2(v5);
  return sub_1DC35F280((uint64_t)v5);
}

uint64_t sub_1DC35F278(uint64_t a1)
{
  uint64_t v1;

  return sub_1DC35F1E4(a1, *(void (**)(char *))(v1 + 16));
}

uint64_t sub_1DC35F280(uint64_t a1)
{
  uint64_t v2;

  sub_1DC19DD20(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t getEnumTagSinglePayload for AppReviewRequestState(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 24))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for AppReviewRequestState(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 24) = v3;
  return result;
}

ValueMetadata *type metadata accessor for AppReviewRequestState()
{
  return &type metadata for AppReviewRequestState;
}

unint64_t sub_1DC35F320(char a1)
{
  if (!a1)
    return 0xD000000000000015;
  if (a1 == 1)
    return 0xD000000000000013;
  return 0xD000000000000016;
}

uint64_t sub_1DC35F37C(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD v11[2];
  char v12;
  char v13;
  char v14;

  v11[1] = a3;
  sub_1DC35F898(0, &qword_1F03525C0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC35F854();
  sub_1DC409B14();
  v14 = 0;
  sub_1DC40997C();
  if (!v3)
  {
    v13 = 1;
    sub_1DC40997C();
    v12 = 2;
    sub_1DC40997C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1DC35F4D0()
{
  char *v0;

  return sub_1DC35F320(*v0);
}

uint64_t sub_1DC35F4D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC35F594(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC35F4FC()
{
  sub_1DC35F854();
  return sub_1DC409B20();
}

uint64_t sub_1DC35F524()
{
  sub_1DC35F854();
  return sub_1DC409B2C();
}

uint64_t sub_1DC35F54C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  result = sub_1DC35F6D4(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
  }
  return result;
}

uint64_t sub_1DC35F578(_QWORD *a1)
{
  uint64_t *v1;

  return sub_1DC35F37C(a1, *v1, v1[1]);
}

uint64_t sub_1DC35F594(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000015 && a2 == 0x80000001DC449720 || (sub_1DC4099E8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001DC449740 || (sub_1DC4099E8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001DC449760)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v5 = sub_1DC4099E8();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1DC35F6D4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE v10[16];

  sub_1DC35F898(0, &qword_1F03525B0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = &v10[-v6];
  v8 = a1[3];
  __swift_project_boxed_opaque_existential_1(a1, v8);
  sub_1DC35F854();
  sub_1DC409B08();
  if (!v1)
  {
    v10[15] = 0;
    v8 = sub_1DC409904();
    v10[14] = 1;
    sub_1DC409904();
    v10[13] = 2;
    sub_1DC409904();
    (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v8;
}

unint64_t sub_1DC35F854()
{
  unint64_t result;

  result = qword_1F03525B8;
  if (!qword_1F03525B8)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC42A62C, &type metadata for AppReviewRequestState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F03525B8);
  }
  return result;
}

void sub_1DC35F898(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC35F854();
    v7 = a3(a1, &type metadata for AppReviewRequestState.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t storeEnumTagSinglePayload for AppReviewRequestState.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1DC35F940 + 4 * byte_1DC42A4F5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1DC35F974 + 4 * asc_1DC42A4F0[v4]))();
}

uint64_t sub_1DC35F974(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC35F97C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC35F984);
  return result;
}

uint64_t sub_1DC35F990(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC35F998);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1DC35F99C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC35F9A4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AppReviewRequestState.CodingKeys()
{
  return &type metadata for AppReviewRequestState.CodingKeys;
}

unint64_t sub_1DC35F9C4()
{
  unint64_t result;

  result = qword_1F03525C8;
  if (!qword_1F03525C8)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC42A604, &type metadata for AppReviewRequestState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F03525C8);
  }
  return result;
}

unint64_t sub_1DC35FA0C()
{
  unint64_t result;

  result = qword_1F03525D0;
  if (!qword_1F03525D0)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC42A574, &type metadata for AppReviewRequestState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F03525D0);
  }
  return result;
}

unint64_t sub_1DC35FA54()
{
  unint64_t result;

  result = qword_1F03525D8;
  if (!qword_1F03525D8)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC42A59C, &type metadata for AppReviewRequestState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F03525D8);
  }
  return result;
}

uint64_t sub_1DC35FA98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  _BYTE v9[16];

  v0 = sub_1DC401348();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = &v9[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = sub_1DC401354();
  v5 = MEMORY[0x1E0C80A78](v4);
  (*(void (**)(_BYTE *, _QWORD, __n128))(v7 + 104))(&v9[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)], *MEMORY[0x1E0DB5800], v5);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB57E0], v0);
  v9[15] = 0;
  sub_1DC132DB8();
  swift_allocObject();
  result = sub_1DC4013A8();
  qword_1EDB41238 = result;
  return result;
}

uint64_t static Settings.Radars.radar50783266.getter()
{
  if (qword_1EDB41248 != -1)
    swift_once();
  return swift_retain();
}

ValueMetadata *type metadata accessor for Settings.Radars()
{
  return &type metadata for Settings.Radars;
}

uint64_t type metadata accessor for WelcomeViewStylerFactory()
{
  return objc_opt_self();
}

uint64_t sub_1DC35FC20@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v3;

  if ((a1 & 1) != 0)
    v3 = *v2 + 96;
  else
    v3 = *v2 + 56;
  return sub_1DC0824D4(v3, a2);
}

uint64_t sub_1DC35FC4C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *v1;
  v4 = (_QWORD *)(*v1 + 16);
  v5 = *(_QWORD *)(*v1 + 40);
  v6 = *(_QWORD *)(v3 + 48);
  __swift_project_boxed_opaque_existential_1(v4, v5);
  return sub_1DC3A54D0(v5, v6, a1);
}

uint64_t sub_1DC35FC9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t *boxed_opaque_existential_1;
  _QWORD *v12;
  uint64_t result;
  uint64_t v14[5];

  v7 = *(_QWORD *)(*(_QWORD *)v3 + 40);
  v8 = *(_QWORD *)(*(_QWORD *)v3 + 48);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)v3 + 16), v7);
  v9 = *(_QWORD *)(v8 + 8);
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 8);
  v14[3] = v7;
  v14[4] = v8;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v14);
  v10(a1, v7, v9);
  v12 = sub_1DC35FF48((uint64_t)boxed_opaque_existential_1, a2, v7, v8);
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
  *a3 = v12;
  return result;
}

_QWORD *sub_1DC35FD50(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t *boxed_opaque_existential_1;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  id v17;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  _UNKNOWN **v29;
  uint64_t v30[5];

  v30[3] = a3;
  v30[4] = a4;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v30);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 32))(boxed_opaque_existential_1, a1, a3);
  sub_1DC0824D4((uint64_t)v30, (uint64_t)(a2 + 2));
  sub_1DC0824D4((uint64_t)v30, (uint64_t)&v27);
  if (qword_1F034B138 != -1)
    swift_once();
  v23 = xmmword_1F0368C20;
  v25 = xmmword_1F0368C10;
  v19 = xmmword_1F0368C40;
  v21 = xmmword_1F0368C30;
  v8 = qword_1F0368C50;
  v9 = (void *)qword_1F0368C58;
  v10 = type metadata accessor for WelcomeViewStyler();
  v11 = swift_allocObject();
  sub_1DC097DD0(&v27, v11 + 16);
  *(_OWORD *)(v11 + 56) = v25;
  *(_OWORD *)(v11 + 72) = v23;
  *(_OWORD *)(v11 + 88) = v21;
  *(_OWORD *)(v11 + 104) = v19;
  *(_QWORD *)(v11 + 120) = v8;
  *(_QWORD *)(v11 + 128) = v9;
  a2[10] = v10;
  a2[11] = &off_1EA466550;
  a2[7] = v11;
  sub_1DC0824D4((uint64_t)v30, (uint64_t)&v27);
  v12 = qword_1F034B140;
  v13 = v9;
  if (v12 != -1)
    swift_once();
  v24 = xmmword_1F0368C70;
  v26 = xmmword_1F0368C60;
  v20 = xmmword_1F0368C90;
  v22 = xmmword_1F0368C80;
  v14 = qword_1F0368CA0;
  v15 = (void *)qword_1F0368CA8;
  v16 = swift_allocObject();
  sub_1DC097DD0(&v27, v16 + 16);
  *(_OWORD *)(v16 + 56) = v26;
  *(_OWORD *)(v16 + 72) = v24;
  *(_OWORD *)(v16 + 88) = v22;
  *(_OWORD *)(v16 + 104) = v20;
  *(_QWORD *)(v16 + 120) = v14;
  *(_QWORD *)(v16 + 128) = v15;
  v28 = v10;
  v29 = &off_1EA466550;
  *(_QWORD *)&v27 = v16;
  v17 = v15;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
  sub_1DC097DD0(&v27, (uint64_t)(a2 + 12));
  return a2;
}

_QWORD *sub_1DC35FF48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD *v10;
  uint64_t v12;

  v7 = *(_QWORD *)(a3 - 8);
  MEMORY[0x1E0C80A78](a1);
  v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (_QWORD *)swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, a3);
  return sub_1DC35FD50((uint64_t)v9, v10, a3, a4);
}

uint64_t sub_1DC36005C()
{
  return sub_1DC3613A4(&qword_1EDB2D678, (uint64_t)&unk_1DC42A808);
}

uint64_t type metadata accessor for StockFeedGroup()
{
  uint64_t result;

  result = qword_1EDB2D6B0;
  if (!qword_1EDB2D6B0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1DC3600BC()
{
  return sub_1DC3613A4(&qword_1EDB2D698, (uint64_t)&unk_1DC42A7B0);
}

unint64_t sub_1DC3600E4()
{
  unint64_t result;

  result = qword_1EDB41E78;
  if (!qword_1EDB41E78)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC415504, &type metadata for StockFeedGroupKind);
    atomic_store(result, (unint64_t *)&qword_1EDB41E78);
  }
  return result;
}

unint64_t sub_1DC36012C()
{
  unint64_t result;

  result = qword_1EDB41E60;
  if (!qword_1EDB41E60)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC4154DC, &type metadata for StockFeedGroupKind);
    atomic_store(result, (unint64_t *)&qword_1EDB41E60);
  }
  return result;
}

unint64_t sub_1DC360174()
{
  unint64_t result;

  result = qword_1EDB41E68;
  if (!qword_1EDB41E68)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC415474, &type metadata for StockFeedGroupKind);
    atomic_store(result, (unint64_t *)&qword_1EDB41E68);
  }
  return result;
}

uint64_t sub_1DC3601BC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t (*v13)(_QWORD);
  int EnumCaseMultiPayload;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v2 = v1;
  v4 = type metadata accessor for NewsPlacardStockFeedGroup();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for NewsStockFeedGroup();
  MEMORY[0x1E0C80A78](v7);
  v9 = (uint64_t *)((char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = type metadata accessor for StockFeedGroup();
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0990BC(v2, (uint64_t)v12, v13);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_1DC092ED0((uint64_t)v12, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for NewsStockFeedGroup);
      sub_1DC142534();
      v16 = a1 + *(int *)(v15 + 64);
      v17 = v9[1];
      *(_QWORD *)a1 = *v9;
      *(_QWORD *)(a1 + 8) = v17;
      *(_BYTE *)(a1 + 16) = *((_BYTE *)v9 + *(int *)(v7 + 28));
      sub_1DC0990BC((uint64_t)v9 + *(int *)(v7 + 32), v16, (uint64_t (*)(_QWORD))sub_1DC0FEF78);
      swift_bridgeObjectRetain();
      sub_1DC0926D8((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for NewsStockFeedGroup);
    }
    else
    {
      v18 = sub_1DC407300();
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(a1, v12, v18);
    }
    type metadata accessor for StockFeedSectionDescriptor();
  }
  else
  {
    sub_1DC092ED0((uint64_t)v12, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for NewsPlacardStockFeedGroup);
    sub_1DC0926D8((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for NewsPlacardStockFeedGroup);
    type metadata accessor for StockFeedSectionDescriptor();
  }
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1DC3603D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t (*v15)(_QWORD);
  int EnumCaseMultiPayload;
  uint64_t (*v17)();
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;

  v1 = v0;
  v2 = sub_1DC407300();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for NewsPlacardStockFeedGroup();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for NewsStockFeedGroup();
  MEMORY[0x1E0C80A78](v9);
  v11 = (uint64_t *)((char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = type metadata accessor for StockFeedGroup();
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0990BC(v1, (uint64_t)v14, v15);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v14, v2);
      v18 = sub_1DC4072C4();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      return v18;
    }
    v17 = type metadata accessor for NewsStockFeedGroup;
    sub_1DC092ED0((uint64_t)v14, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for NewsStockFeedGroup);
    v18 = *v11;
    swift_bridgeObjectRetain();
    v19 = (uint64_t)v11;
  }
  else
  {
    v17 = type metadata accessor for NewsPlacardStockFeedGroup;
    sub_1DC092ED0((uint64_t)v14, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for NewsPlacardStockFeedGroup);
    sub_1DC1B8858();
    v18 = sub_1DC40742C();
    v19 = (uint64_t)v8;
  }
  sub_1DC0926D8(v19, (uint64_t (*)(_QWORD))v17);
  return v18;
}

uint64_t sub_1DC3605B4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t (*v19)(_QWORD);
  int EnumCaseMultiPayload;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v2 = v1;
  v31 = a1;
  v3 = sub_1DC407300();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0FEF78(0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1DC40799C();
  v29 = *(_QWORD *)(v10 - 8);
  v30 = v10;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for NewsStockFeedGroup();
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for StockFeedGroup();
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v28 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0990BC(v2, (uint64_t)v18, v19);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_1DC092ED0((uint64_t)v18, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for NewsStockFeedGroup);
      sub_1DC0990BC((uint64_t)&v15[*(int *)(v13 + 32)], (uint64_t)v9, (uint64_t (*)(_QWORD))sub_1DC0FEF78);
      v21 = sub_1DC4073A8();
      v22 = *(_QWORD *)(v21 - 8);
      v23 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v22 + 48))(v9, 1, v21);
      v25 = v30;
      v24 = v31;
      v26 = v29;
      if (v23 == 1)
      {
        sub_1DC0926D8((uint64_t)v9, (uint64_t (*)(_QWORD))sub_1DC0FEF78);
        (*(void (**)(uint64_t, _QWORD, uint64_t))(v26 + 104))(v24, *MEMORY[0x1E0D5BD28], v25);
      }
      else
      {
        sub_1DC407348();
        (*(void (**)(char *, uint64_t))(v22 + 8))(v9, v21);
        (*(void (**)(uint64_t, char *, uint64_t))(v26 + 32))(v24, v12, v25);
      }
      return sub_1DC0926D8((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for NewsStockFeedGroup);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v18, v3);
      sub_1DC4072D0();
      return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    }
  }
  else
  {
    sub_1DC0926D8((uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedGroup);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v29 + 104))(v31, *MEMORY[0x1E0D5BD28], v30);
  }
}

double sub_1DC36086C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t (*v15)(_QWORD);
  int EnumCaseMultiPayload;
  uint64_t v17;
  uint64_t v18;
  double v19;
  double v20;
  double v21;
  uint64_t v23;

  v1 = v0;
  v2 = sub_1DC407300();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0FEF78(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for NewsStockFeedGroup();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for StockFeedGroup();
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0990BC(v1, (uint64_t)v14, v15);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_1DC092ED0((uint64_t)v14, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for NewsStockFeedGroup);
      sub_1DC0990BC((uint64_t)&v11[*(int *)(v9 + 32)], (uint64_t)v8, (uint64_t (*)(_QWORD))sub_1DC0FEF78);
      v17 = sub_1DC4073A8();
      v18 = *(_QWORD *)(v17 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v8, 1, v17) == 1)
      {
        sub_1DC0926D8((uint64_t)v8, (uint64_t (*)(_QWORD))sub_1DC0FEF78);
        v19 = 1.0;
      }
      else
      {
        sub_1DC407354();
        v19 = v21;
        (*(void (**)(char *, uint64_t))(v18 + 8))(v8, v17);
      }
      sub_1DC0926D8((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for NewsStockFeedGroup);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v14, v2);
      sub_1DC4072DC();
      v19 = v20;
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    }
  }
  else
  {
    sub_1DC0926D8((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedGroup);
    return 1.0;
  }
  return v19;
}

uint64_t sub_1DC360AA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t (*v8)(_QWORD);
  uint64_t v9;
  uint64_t v11;

  v1 = v0;
  v2 = type metadata accessor for NewsStockFeedGroup();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for StockFeedGroup();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0990BC(v1, (uint64_t)v7, v8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1DC092ED0((uint64_t)v7, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for NewsStockFeedGroup);
    if ((v4[*(int *)(v2 + 28)] & 1) != 0)
      v9 = MEMORY[0x1E0DEE9D8];
    else
      v9 = sub_1DC408CE0();
    sub_1DC0926D8((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for NewsStockFeedGroup);
  }
  else
  {
    sub_1DC0926D8((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedGroup);
    return MEMORY[0x1E0DEE9D8];
  }
  return v9;
}

unint64_t sub_1DC360BD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t (*v8)(_QWORD);
  unint64_t v9;
  unint64_t v10;
  uint64_t (*v11)();
  uint64_t v12;
  uint64_t v14;

  v1 = v0;
  v2 = type metadata accessor for NewsStockFeedGroup();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for StockFeedGroup();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0990BC(v1, (uint64_t)v7, v8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1DC092ED0((uint64_t)v7, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for NewsStockFeedGroup);
    if ((v4[*(int *)(v2 + 28)] & 1) != 0)
      v9 = sub_1DC1A1F08(MEMORY[0x1E0DEE9D8]);
    else
      v9 = sub_1DC408CEC();
    v10 = v9;
    v11 = type metadata accessor for NewsStockFeedGroup;
    v12 = (uint64_t)v4;
  }
  else
  {
    v10 = sub_1DC1A1F08(MEMORY[0x1E0DEE9D8]);
    v11 = type metadata accessor for StockFeedGroup;
    v12 = (uint64_t)v7;
  }
  sub_1DC0926D8(v12, (uint64_t (*)(_QWORD))v11);
  return v10;
}

uint64_t sub_1DC360D14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t (*v15)(_QWORD);
  int EnumCaseMultiPayload;
  uint64_t (*v17)();
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;

  v1 = v0;
  v2 = sub_1DC407300();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for NewsPlacardStockFeedGroup();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for NewsStockFeedGroup();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for StockFeedGroup();
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0990BC(v1, (uint64_t)v14, v15);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v14, v2);
      v18 = sub_1DC4072AC();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      return v18;
    }
    v17 = type metadata accessor for NewsStockFeedGroup;
    sub_1DC092ED0((uint64_t)v14, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for NewsStockFeedGroup);
    v18 = sub_1DC4010B4();
    v19 = (uint64_t)v11;
  }
  else
  {
    v17 = type metadata accessor for NewsPlacardStockFeedGroup;
    sub_1DC092ED0((uint64_t)v14, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for NewsPlacardStockFeedGroup);
    sub_1DC1B8858();
    v18 = sub_1DC40742C();
    v19 = (uint64_t)v8;
  }
  sub_1DC0926D8(v19, (uint64_t (*)(_QWORD))v17);
  return v18;
}

uint64_t sub_1DC360F08@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t result;
  uint64_t v9;

  v2 = v1;
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0990BC(v6, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedGroup);
  v7 = 0x20001u >> (8 * swift_getEnumCaseMultiPayload());
  result = sub_1DC0926D8((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedGroup);
  *a1 = v7;
  return result;
}

uint64_t sub_1DC360FB0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *MEMORY[0x1E0D5AFA0];
  v3 = sub_1DC4075E8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

uint64_t sub_1DC360FF4()
{
  return sub_1DC3613A4(&qword_1EDB2D6A8, (uint64_t)&unk_1DC42A7E0);
}

uint64_t sub_1DC361024()
{
  sub_1DC3613A4((unint64_t *)&qword_1EDB2D688, (uint64_t)&unk_1DC42A728);
  return sub_1DC407DB0();
}

uint64_t sub_1DC36106C()
{
  sub_1DC3613A4(&qword_1EDB2D678, (uint64_t)&unk_1DC42A808);
  return sub_1DC407DF8();
}

uint64_t sub_1DC3610C0()
{
  sub_1DC3613A4(&qword_1EDB2D678, (uint64_t)&unk_1DC42A808);
  return sub_1DC407DE0();
}

uint64_t sub_1DC3610F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int EnumCaseMultiPayload;
  uint64_t v10;
  uint64_t v12;

  v1 = v0;
  v2 = sub_1DC407300();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0990BC(v1, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedGroup);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_1DC0926D8((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedGroup);
      return 1937204558;
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
      v10 = sub_1DC4072F4();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    }
  }
  else
  {
    sub_1DC0926D8((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedGroup);
    return 0x616C50207377654ELL;
  }
  return v10;
}

uint64_t sub_1DC361248()
{
  sub_1DC3613A4(&qword_1EDB2D698, (uint64_t)&unk_1DC42A7B0);
  return sub_1DC40286C();
}

uint64_t sub_1DC361280()
{
  return sub_1DC3613A4(&qword_1EDB2D680, (uint64_t)&unk_1DC42A8C0);
}

uint64_t sub_1DC3612A4()
{
  return sub_1DC3613A4(&qword_1EDB2D6A0, (uint64_t)&unk_1DC42A898);
}

uint64_t sub_1DC3612C8()
{
  return sub_1DC3613A4(&qword_1EDB2D690, (uint64_t)&unk_1DC42A870);
}

uint64_t sub_1DC3612EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v5;

  v0 = sub_1DC400010();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC400004();
  sub_1DC3FFFF8();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_1DC4072B8();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1DC3613A4(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for StockFeedGroup();
    result = MEMORY[0x1DF0CAB8C](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

_QWORD *sub_1DC3613E4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v20 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v21 = sub_1DC407300();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(a1, a2, v21);
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v7 = a2[1];
      *a1 = *a2;
      a1[1] = v7;
      a1[2] = a2[2];
      v8 = (int *)type metadata accessor for NewsStockFeedGroup();
      v9 = v8[6];
      v10 = (char *)a1 + v9;
      v11 = (char *)a2 + v9;
      v12 = sub_1DC4010E4();
      v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v13(v10, v11, v12);
      *((_BYTE *)a1 + v8[7]) = *((_BYTE *)a2 + v8[7]);
      v14 = v8[8];
      v15 = (char *)a1 + v14;
      v16 = (char *)a2 + v14;
      v17 = sub_1DC4073A8();
      v18 = *(_QWORD *)(v17 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
      {
        sub_1DC0FEF78(0);
        memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v15, v16, v17);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
      }
    }
    else
    {
      sub_1DC1B8858();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(a1, a2, v22);
      v23 = type metadata accessor for NewsPlacardStockFeedGroup();
      *((_BYTE *)a1 + *(int *)(v23 + 20)) = *((_BYTE *)a2 + *(int *)(v23 + 20));
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1DC3615E0(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  result = swift_getEnumCaseMultiPayload();
  switch((_DWORD)result)
  {
    case 2:
      v3 = sub_1DC407300();
      goto LABEL_6;
    case 1:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v7 = type metadata accessor for NewsStockFeedGroup();
      v8 = a1 + *(int *)(v7 + 24);
      v9 = sub_1DC4010E4();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
      v10 = a1 + *(int *)(v7 + 32);
      v11 = sub_1DC4073A8();
      v12 = *(_QWORD *)(v11 - 8);
      result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11);
      if (!(_DWORD)result)
      {
        v5 = *(uint64_t (**)(uint64_t, uint64_t))(v12 + 8);
        v6 = v10;
        v4 = v11;
        return v5(v6, v4);
      }
      break;
    case 0:
      sub_1DC1B8858();
LABEL_6:
      v4 = v3;
      v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8);
      v6 = a1;
      return v5(v6, v4);
  }
  return result;
}

_QWORD *sub_1DC3616D0(_QWORD *a1, _QWORD *a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    v18 = sub_1DC407300();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(a1, a2, v18);
  }
  else if (EnumCaseMultiPayload == 1)
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    a1[2] = a2[2];
    v6 = (int *)type metadata accessor for NewsStockFeedGroup();
    v7 = v6[6];
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_1DC4010E4();
    v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
    *((_BYTE *)a1 + v6[7]) = *((_BYTE *)a2 + v6[7]);
    v12 = v6[8];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    v15 = sub_1DC4073A8();
    v16 = *(_QWORD *)(v15 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
    {
      sub_1DC0FEF78(0);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
    }
  }
  else
  {
    sub_1DC1B8858();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(a1, a2, v19);
    v20 = type metadata accessor for NewsPlacardStockFeedGroup();
    *((_BYTE *)a1 + *(int *)(v20 + 20)) = *((_BYTE *)a2 + *(int *)(v20 + 20));
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *sub_1DC3618A0(_QWORD *a1, _QWORD *a2)
{
  int EnumCaseMultiPayload;
  int *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  if (a1 != a2)
  {
    sub_1DC0926D8((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedGroup);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v17 = sub_1DC407300();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(a1, a2, v17);
    }
    else if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      v5 = (int *)type metadata accessor for NewsStockFeedGroup();
      v6 = v5[6];
      v7 = (char *)a1 + v6;
      v8 = (char *)a2 + v6;
      v9 = sub_1DC4010E4();
      v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v10(v7, v8, v9);
      *((_BYTE *)a1 + v5[7]) = *((_BYTE *)a2 + v5[7]);
      v11 = v5[8];
      v12 = (char *)a1 + v11;
      v13 = (char *)a2 + v11;
      v14 = sub_1DC4073A8();
      v15 = *(_QWORD *)(v14 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
      {
        sub_1DC0FEF78(0);
        memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v12, v13, v14);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
      }
    }
    else
    {
      sub_1DC1B8858();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(a1, a2, v18);
      v19 = type metadata accessor for NewsPlacardStockFeedGroup();
      *((_BYTE *)a1 + *(int *)(v19 + 20)) = *((_BYTE *)a2 + *(int *)(v19 + 20));
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1DC361A90(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  const void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    v16 = sub_1DC407300();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(a1, a2, v16);
  }
  else if (EnumCaseMultiPayload == 1)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    v5 = (int *)type metadata accessor for NewsStockFeedGroup();
    v6 = v5[6];
    v7 = a1 + v6;
    v8 = a2 + v6;
    v9 = sub_1DC4010E4();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
    *(_BYTE *)(a1 + v5[7]) = *(_BYTE *)(a2 + v5[7]);
    v10 = v5[8];
    v11 = (void *)(a1 + v10);
    v12 = (const void *)(a2 + v10);
    v13 = sub_1DC4073A8();
    v14 = *(_QWORD *)(v13 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    {
      sub_1DC0FEF78(0);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v14 + 32))(v11, v12, v13);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
  }
  else
  {
    sub_1DC1B8858();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(a1, a2, v17);
    v18 = type metadata accessor for NewsPlacardStockFeedGroup();
    *(_BYTE *)(a1 + *(int *)(v18 + 20)) = *(_BYTE *)(a2 + *(int *)(v18 + 20));
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_1DC361C3C(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  const void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  if (a1 != a2)
  {
    sub_1DC0926D8(a1, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedGroup);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v16 = sub_1DC407300();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(a1, a2, v16);
    }
    else if (EnumCaseMultiPayload == 1)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      v5 = (int *)type metadata accessor for NewsStockFeedGroup();
      v6 = v5[6];
      v7 = a1 + v6;
      v8 = a2 + v6;
      v9 = sub_1DC4010E4();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
      *(_BYTE *)(a1 + v5[7]) = *(_BYTE *)(a2 + v5[7]);
      v10 = v5[8];
      v11 = (void *)(a1 + v10);
      v12 = (const void *)(a2 + v10);
      v13 = sub_1DC4073A8();
      v14 = *(_QWORD *)(v13 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
      {
        sub_1DC0FEF78(0);
        memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v14 + 32))(v11, v12, v13);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      }
    }
    else
    {
      sub_1DC1B8858();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(a1, a2, v17);
      v18 = type metadata accessor for NewsPlacardStockFeedGroup();
      *(_BYTE *)(a1 + *(int *)(v18 + 20)) = *(_BYTE *)(a2 + *(int *)(v18 + 20));
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1DC361E00()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  result = type metadata accessor for NewsPlacardStockFeedGroup();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for NewsStockFeedGroup();
    if (v2 <= 0x3F)
    {
      result = sub_1DC407300();
      if (v3 <= 0x3F)
      {
        swift_initEnumMetadataMultiPayload();
        return 0;
      }
    }
  }
  return result;
}

unint64_t sub_1DC361EA0()
{
  unint64_t result;

  result = qword_1EDB30F00;
  if (!qword_1EDB30F00)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC41ABA8, &type metadata for ForYouFeedGroupKind);
    atomic_store(result, (unint64_t *)&qword_1EDB30F00);
  }
  return result;
}

unint64_t sub_1DC361EE8()
{
  unint64_t result;

  result = qword_1EDB30ED8;
  if (!qword_1EDB30ED8)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC41AB80, &type metadata for ForYouFeedGroupKind);
    atomic_store(result, (unint64_t *)&qword_1EDB30ED8);
  }
  return result;
}

unint64_t sub_1DC361F30()
{
  unint64_t result;

  result = qword_1EDB30EE0;
  if (!qword_1EDB30EE0)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC41AB18, &type metadata for ForYouFeedGroupKind);
    atomic_store(result, (unint64_t *)&qword_1EDB30EE0);
  }
  return result;
}

void sub_1DC361F88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(_QWORD);
  char *v6;
  uint64_t v7;

  v1 = type metadata accessor for CuratedForYouFeedGroup();
  MEMORY[0x1E0C80A78](v1);
  v2 = type metadata accessor for StockForYouFeedGroup();
  MEMORY[0x1E0C80A78](v2);
  v3 = type metadata accessor for ForYouFeedGroup();
  MEMORY[0x1E0C80A78](v3);
  sub_1DC0990BC(v0, (uint64_t)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  v6 = (char *)sub_1DC362080 + 4 * byte_1DC42A950[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1DC362080()
{
  uint64_t v0;

  v0 = sub_1DC408CEC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

void sub_1DC36215C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(_QWORD);
  char *v6;
  uint64_t v7;

  v1 = sub_1DC407300();
  MEMORY[0x1E0C80A78](v1);
  v2 = type metadata accessor for CuratedForYouFeedGroup();
  MEMORY[0x1E0C80A78](v2);
  v3 = type metadata accessor for ForYouFeedGroup();
  MEMORY[0x1E0C80A78](v3);
  sub_1DC0990BC(v0, (uint64_t)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  v6 = (char *)sub_1DC362260 + 4 * byte_1DC42A954[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1DC362260()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 0x726F745320706F54;
}

void sub_1DC362388()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(_QWORD);
  char *v7;
  uint64_t v8;

  v1 = sub_1DC407300();
  MEMORY[0x1E0C80A78](v1);
  v2 = type metadata accessor for CuratedForYouFeedGroup();
  MEMORY[0x1E0C80A78](v2);
  v3 = type metadata accessor for StockForYouFeedGroup();
  MEMORY[0x1E0C80A78](v3);
  v4 = type metadata accessor for ForYouFeedGroup();
  MEMORY[0x1E0C80A78](v4);
  sub_1DC0990BC(v0, (uint64_t)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  v7 = (char *)sub_1DC3624B8 + 4 * byte_1DC42A958[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1DC3624B8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 0x726F745320706F54;
}

uint64_t sub_1DC3625A8()
{
  sub_1DC091A8C(&qword_1EDB2DF40, (uint64_t)&unk_1DC42AA4C);
  return sub_1DC407DF8();
}

uint64_t sub_1DC3625F8()
{
  sub_1DC091A8C(&qword_1EDB2DF40, (uint64_t)&unk_1DC42AA4C);
  return sub_1DC407DE0();
}

uint64_t sub_1DC362638(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_1DC0926D8(result, (uint64_t (*)(_QWORD))type metadata accessor for ForYouFeedGroup);
    v2 = (char *)&loc_1DC36269C + 4 * byte_1DC42A968[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

_BYTE *sub_1DC36284C(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 3:
      v15 = sub_1DC407300();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(a1, a2, v15);
LABEL_10:
      swift_storeEnumTagMultiPayload();
      return a1;
    case 2:
      v16 = sub_1DC4073A8();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(a1, a2, v16);
      v17 = type metadata accessor for CuratedForYouFeedGroup();
      *(_OWORD *)&a1[*(int *)(v17 + 20)] = *(_OWORD *)&a2[*(int *)(v17 + 20)];
      goto LABEL_10;
    case 1:
      v7 = sub_1DC4010E4();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      v8 = (int *)type metadata accessor for StockForYouFeedGroup();
      *(_QWORD *)&a1[v8[5]] = *(_QWORD *)&a2[v8[5]];
      a1[v8[6]] = a2[v8[6]];
      v9 = v8[7];
      v10 = &a1[v9];
      v11 = &a2[v9];
      v12 = sub_1DC4073A8();
      v13 = *(_QWORD *)(v12 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
      {
        sub_1DC0FEF78(0);
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      }
      goto LABEL_10;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

_BYTE *sub_1DC362A04(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  if (a1 == a2)
    return a1;
  sub_1DC0926D8((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for ForYouFeedGroup);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 3:
      v15 = sub_1DC407300();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(a1, a2, v15);
LABEL_11:
      swift_storeEnumTagMultiPayload();
      return a1;
    case 2:
      v16 = sub_1DC4073A8();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(a1, a2, v16);
      v17 = type metadata accessor for CuratedForYouFeedGroup();
      *(_OWORD *)&a1[*(int *)(v17 + 20)] = *(_OWORD *)&a2[*(int *)(v17 + 20)];
      goto LABEL_11;
    case 1:
      v7 = sub_1DC4010E4();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      v8 = (int *)type metadata accessor for StockForYouFeedGroup();
      *(_QWORD *)&a1[v8[5]] = *(_QWORD *)&a2[v8[5]];
      a1[v8[6]] = a2[v8[6]];
      v9 = v8[7];
      v10 = &a1[v9];
      v11 = &a2[v9];
      v12 = sub_1DC4073A8();
      v13 = *(_QWORD *)(v12 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
      {
        sub_1DC0FEF78(0);
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      }
      goto LABEL_11;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

id sub_1DC362BD4()
{
  char *v0;
  objc_class *ObjectType;
  char *v2;
  objc_super v4;

  ObjectType = (objc_class *)swift_getObjectType();
  __swift_project_boxed_opaque_existential_1(&v0[OBJC_IVAR____TtC8StocksUI21ForYouFeedDataManager_priceDataManager], *(_QWORD *)&v0[OBJC_IVAR____TtC8StocksUI21ForYouFeedDataManager_priceDataManager + 24]);
  sub_1DC080808(&qword_1EDB32888, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedDataManager, (uint64_t)&unk_1DC42ACB8);
  sub_1DC400D18();
  __swift_project_boxed_opaque_existential_1(&v0[OBJC_IVAR____TtC8StocksUI21ForYouFeedDataManager_watchlistManager], *(_QWORD *)&v0[OBJC_IVAR____TtC8StocksUI21ForYouFeedDataManager_watchlistManager + 24]);
  sub_1DC080808(&qword_1EDB32890, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedDataManager, (uint64_t)&unk_1DC42AC88);
  v2 = v0;
  sub_1DC400AD8();

  v4.receiver = v2;
  v4.super_class = ObjectType;
  return objc_msgSendSuper2(&v4, sel_dealloc);
}

uint64_t sub_1DC362E9C()
{
  return type metadata accessor for ForYouFeedDataManager();
}

void sub_1DC362EA4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(void);
  id v8;

  v2 = a2 + 16;
  swift_beginAccess();
  v3 = MEMORY[0x1DF0CAD78](v2);
  if (v3)
  {
    v4 = (void *)v3;
    v5 = v3 + OBJC_IVAR____TtC8StocksUI21ForYouFeedDataManager_delegate;
    if (MEMORY[0x1DF0CAD78](v3 + OBJC_IVAR____TtC8StocksUI21ForYouFeedDataManager_delegate))
    {
      v6 = *(_QWORD *)(v5 + 8);
      swift_getObjectType();
      v7 = *(void (**)(void))(v6 + 24);
      v8 = v4;
      v7();

      swift_unknownObjectRelease();
    }
    else
    {

    }
  }
}

uint64_t sub_1DC362F5C()
{
  CFTimeInterval v0;
  id v1;
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;

  swift_getObjectType();
  v0 = CACurrentMediaTime();
  if (qword_1EDB2DB60 != -1)
    swift_once();
  v1 = (id)qword_1EDB2DB58;
  sub_1DC408FE0();
  sub_1DC403F28();

  MEMORY[0x1E0C80A78](v2);
  type metadata accessor for ForYouFeedServiceConfig();
  sub_1DC402E0C();
  sub_1DC08CBF0(0, &qword_1EDB2AEF8, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedServiceConfig, sub_1DC106C20, MEMORY[0x1E0D5BBD8]);
  sub_1DC402D10();
  swift_release();
  v3 = (void *)sub_1DC402C80();
  sub_1DC402D04();
  swift_release();

  *(CFTimeInterval *)(swift_allocObject() + 16) = v0;
  v4 = (void *)sub_1DC402C80();
  sub_1DC402D10();
  swift_release();
  swift_release();

  *(CFTimeInterval *)(swift_allocObject() + 16) = v0;
  v5 = (void *)sub_1DC402C80();
  v6 = sub_1DC402D34();
  swift_release();
  swift_release();

  return v6;
}

uint64_t sub_1DC3631A4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  sub_1DC0C5984(0);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(a2 + OBJC_IVAR____TtC8StocksUI21ForYouFeedDataManager_feedService), *(_QWORD *)(a2 + OBJC_IVAR____TtC8StocksUI21ForYouFeedDataManager_feedService + 24));
  type metadata accessor for ForYouFeedServiceConfig();
  sub_1DC106C20();
  sub_1DC407D5C();
  type metadata accessor for ForYouFeedServiceProxy();
  v8 = sub_1DC1C3F38();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v8;
}

uint64_t sub_1DC363298@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *a1;
  return swift_retain();
}

uint64_t sub_1DC3632B8(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;

  sub_1DC089DA4(0, &qword_1EDB28AC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v19 - v5;
  v7 = *a1;
  sub_1DC3FFFE0();
  v8 = sub_1DC3FFFEC();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v6, 0, 1, v8);
  v9 = a2 + OBJC_IVAR____TtC8StocksUI21ForYouFeedDataManager_lastRefreshDate;
  swift_beginAccess();
  sub_1DC0BB2D8((uint64_t)v6, v9);
  swift_endAccess();
  if (qword_1EDB2DB60 != -1)
    swift_once();
  v10 = (void *)qword_1EDB2DB58;
  sub_1DC0E7FF0();
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1DC40C740;
  v12 = v10;
  sub_1DC408E00();
  v13 = MEMORY[0x1E0DEB100];
  *(_QWORD *)(v11 + 56) = MEMORY[0x1E0DEB070];
  *(_QWORD *)(v11 + 64) = v13;
  *(_QWORD *)(v11 + 32) = v14;
  v20 = v7;
  sub_1DC08CBF0(0, &qword_1EDB2AEF8, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedServiceConfig, sub_1DC106C20, MEMORY[0x1E0D5BBD8]);
  sub_1DC363EAC();
  v15 = sub_1DC40286C();
  v17 = v16;
  *(_QWORD *)(v11 + 96) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v11 + 104) = sub_1DC0E7FAC();
  *(_QWORD *)(v11 + 72) = v15;
  *(_QWORD *)(v11 + 80) = v17;
  sub_1DC408FE0();
  sub_1DC403F28();

  swift_bridgeObjectRelease();
  v20 = v7;
  sub_1DC083594(0, &qword_1EDB296A0, (uint64_t)&type metadata for ForYouFeedRefreshData, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  swift_retain();
  return sub_1DC402D58();
}

uint64_t sub_1DC36350C()
{
  id v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  if (qword_1EDB2DB60 != -1)
    swift_once();
  v0 = (id)qword_1EDB2DB58;
  sub_1DC408FC8();
  sub_1DC0E7FF0();
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1DC40C740;
  sub_1DC408E00();
  v2 = MEMORY[0x1E0DEB100];
  *(_QWORD *)(v1 + 56) = MEMORY[0x1E0DEB070];
  *(_QWORD *)(v1 + 64) = v2;
  *(_QWORD *)(v1 + 32) = v3;
  sub_1DC0A3390(0, (unint64_t *)&qword_1EDB400E0);
  sub_1DC409808();
  *(_QWORD *)(v1 + 96) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v1 + 104) = sub_1DC0E7FAC();
  *(_QWORD *)(v1 + 72) = 0;
  *(_QWORD *)(v1 + 80) = 0xE000000000000000;
  sub_1DC403F28();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1DC363664(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;

  if (qword_1EDB2DB60 != -1)
    swift_once();
  v5 = (void *)qword_1EDB2DB58;
  sub_1DC0E7FF0();
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1DC40FA70;
  v7 = v5;
  sub_1DC408E00();
  v8 = MEMORY[0x1E0DEB100];
  *(_QWORD *)(v6 + 56) = MEMORY[0x1E0DEB070];
  *(_QWORD *)(v6 + 64) = v8;
  *(_QWORD *)(v6 + 32) = v9;
  v10 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v6 + 96) = MEMORY[0x1E0DEA968];
  v11 = sub_1DC0E7FAC();
  *(_QWORD *)(v6 + 104) = v11;
  *(_QWORD *)(v6 + 72) = a2;
  *(_QWORD *)(v6 + 80) = a3;
  sub_1DC0A3390(0, (unint64_t *)&qword_1EDB400E0);
  swift_bridgeObjectRetain();
  sub_1DC409808();
  *(_QWORD *)(v6 + 136) = v10;
  *(_QWORD *)(v6 + 144) = v11;
  *(_QWORD *)(v6 + 112) = 0;
  *(_QWORD *)(v6 + 120) = 0xE000000000000000;
  sub_1DC408FE0();
  sub_1DC403F28();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1DC3637E0()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  double v21;
  double v22;
  void (*v23)(char *, uint64_t);
  double v24;
  double v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v0 = sub_1DC40070C();
  v26 = *(_QWORD *)(v0 - 8);
  v27 = v0;
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v26 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC089DA4(0, &qword_1EDB28AC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v26 - v4;
  v6 = sub_1DC3FFFEC();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v26 - v11;
  v13 = sub_1DC40793C();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC40133C();
  sub_1DC401324();
  if (qword_1EDB27488 != -1)
    swift_once();
  sub_1DC401318();
  swift_release();
  v17 = (*(uint64_t (**)(char *, uint64_t))(v14 + 88))(v16, v13);
  if (v17 == *MEMORY[0x1E0D5BC50])
  {
    v18 = v28;
    v19 = v28 + OBJC_IVAR____TtC8StocksUI21ForYouFeedDataManager_lastRefreshDate;
    swift_beginAccess();
    sub_1DC0BB31C(v19, (uint64_t)v5);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
    {
      sub_1DC0B091C((uint64_t)v5, &qword_1EDB28AC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
      return 0;
    }
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v12, v5, v6);
    sub_1DC3FFFE0();
    sub_1DC3FFF38();
    v22 = v21;
    v23 = *(void (**)(char *, uint64_t))(v7 + 8);
    v23(v9, v6);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v18 + OBJC_IVAR____TtC8StocksUI21ForYouFeedDataManager_appConfigurationManager), *(_QWORD *)(v18 + OBJC_IVAR____TtC8StocksUI21ForYouFeedDataManager_appConfigurationManager + 24));
    sub_1DC400DCC();
    sub_1DC4006AC();
    v25 = v24;
    (*(void (**)(char *, uint64_t))(v26 + 8))(v2, v27);
    v23(v12, v6);
    return v25 < v22;
  }
  else
  {
    if (v17 == *MEMORY[0x1E0D5BC58])
      return 0;
    if (v17 == *MEMORY[0x1E0D5BC48])
    {
      return 1;
    }
    else
    {
      result = sub_1DC4099DC();
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_1DC363B24(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t ObjectType;

  v4 = v2 + OBJC_IVAR____TtC8StocksUI21ForYouFeedDataManager_delegate;
  result = MEMORY[0x1DF0CAD78](v2 + OBJC_IVAR____TtC8StocksUI21ForYouFeedDataManager_delegate);
  if (result)
  {
    v6 = *(_QWORD *)(v4 + 8);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(v6 + 8))(v2, &off_1EA466BB0, a2, ObjectType, v6);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1DC363C4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  int v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  uint64_t v12;

  v1 = v0;
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DAE950];
  sub_1DC089DA4(0, (unint64_t *)&unk_1EDB28C20, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAE950], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v12 - v4;
  sub_1DC40049C();
  v6 = sub_1DC400970();
  v7 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v5, 1, v6);
  result = sub_1DC0B091C((uint64_t)v5, (unint64_t *)&unk_1EDB28C20, v2);
  if (v7 != 1)
  {
    v9 = v1 + OBJC_IVAR____TtC8StocksUI21ForYouFeedDataManager_delegate;
    result = MEMORY[0x1DF0CAD78](v1 + OBJC_IVAR____TtC8StocksUI21ForYouFeedDataManager_delegate);
    if (result)
    {
      v10 = *(_QWORD *)(v9 + 8);
      ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v10 + 24))(v1, &off_1EA466BB0, ObjectType, v10);
      return swift_unknownObjectRelease();
    }
  }
  return result;
}

uint64_t sub_1DC363D60()
{
  swift_getObjectType();
  return sub_1DC400CC4();
}

uint64_t sub_1DC363D9C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DC363DC0()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1DC363DE4()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1DC363E08(uint64_t a1)
{
  uint64_t v1;

  return sub_1DC363664(a1, *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_1DC363E14@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1DC401228();
  *a1 = result;
  return result;
}

uint64_t sub_1DC363E3C()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1DC363E60(uint64_t a1)
{
  uint64_t v1;

  sub_1DC362EA4(a1, v1);
}

uint64_t sub_1DC363E6C()
{
  return swift_deallocObject();
}

uint64_t sub_1DC363E7C(uint64_t *a1, uint64_t a2)
{
  return sub_1DC3632B8(a1, a2);
}

uint64_t sub_1DC363E94()
{
  return swift_deallocObject();
}

uint64_t sub_1DC363EA4()
{
  return sub_1DC36350C();
}

unint64_t sub_1DC363EAC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EDB2AEE8;
  if (!qword_1EDB2AEE8)
  {
    sub_1DC08CBF0(255, &qword_1EDB2AEF8, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedServiceConfig, sub_1DC106C20, MEMORY[0x1E0D5BBD8]);
    result = MEMORY[0x1DF0CAB8C](MEMORY[0x1E0D5BBE8], v1);
    atomic_store(result, (unint64_t *)&qword_1EDB2AEE8);
  }
  return result;
}

NSAttributedString __swiftcall NSAttributedString.appendingAccessibilityDWCPriceChangeArrow(pointingUpward:withFont:withColor:)(Swift::Bool pointingUpward, UIFont withFont, UIColor withColor)
{
  _BOOL4 ShouldDifferentiateWithoutColor;
  void *v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  id v17;
  id v18;
  void *v19;

  ShouldDifferentiateWithoutColor = UIAccessibilityShouldDifferentiateWithoutColor();
  v6 = v18;
  if (!ShouldDifferentiateWithoutColor)
    return (NSAttributedString)v6;
  objc_msgSend(v18, sel_mutableCopy);
  sub_1DC409634();
  swift_unknownObjectRelease();
  sub_1DC3641AC();
  if ((swift_dynamicCast() & 1) == 0)
  {
    v6 = v18;
    return (NSAttributedString)v6;
  }
  v7 = objc_msgSend((id)objc_opt_self(), sel_configurationWithFont_scale_, withFont.super.isa, 1);
  v8 = (void *)sub_1DC408A1C();
  swift_bridgeObjectRelease();
  v9 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_withConfiguration_, v8, v7);

  if (v9)
  {
    v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC12B0]), sel_init);
    v11 = objc_msgSend(v9, sel_imageWithTintColor_renderingMode_, withColor.super.isa, 1);
    objc_msgSend(v10, sel_setImage_, v11);

    v12 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
    v13 = (void *)sub_1DC408A1C();
    v14 = objc_msgSend(v12, sel_initWithString_, v13);

    objc_msgSend(v19, sel_appendAttributedString_, v14);
    v15 = objc_msgSend((id)objc_opt_self(), sel_attributedStringWithAttachment_, v10);
    objc_msgSend(v19, sel_appendAttributedString_, v15);

    return (NSAttributedString)v19;
  }
  else
  {
    v17 = v18;

    return (NSAttributedString)v17;
  }
}

unint64_t sub_1DC3641AC()
{
  unint64_t result;

  result = qword_1F0352780;
  if (!qword_1F0352780)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1F0352780);
  }
  return result;
}

uint64_t sub_1DC3641E8(uint64_t a1, char a2, char a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v16;

  v7 = sub_1DC400118();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 < 1)
    return 0;
  v11 = *(void **)(v3 + 16);
  sub_1DC4000DC();
  v12 = (void *)sub_1DC4000AC();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  v13 = objc_msgSend(v11, sel_formattedCount_withLocale_longform_compactDisplay_, a1, v12, a2 & 1, a3 & 1);

  if (!v13)
    return 0;
  v14 = sub_1DC408A4C();

  return v14;
}

uint64_t sub_1DC3642EC()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for UnitNumberFormatter()
{
  return objc_opt_self();
}

void sub_1DC364330(char a1)
{
  sub_1DC409AC0();
  __asm { BR              X10 }
}

uint64_t sub_1DC364388()
{
  sub_1DC408AF4();
  swift_bridgeObjectRelease();
  return sub_1DC409AF0();
}

void sub_1DC3643F8(char a1)
{
  sub_1DC409AC0();
  __asm { BR              X10 }
}

uint64_t sub_1DC364454()
{
  sub_1DC408AF4();
  swift_bridgeObjectRelease();
  return sub_1DC409AF0();
}

void sub_1DC3644E0(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1DC364528()
{
  sub_1DC408AF4();
  return swift_bridgeObjectRelease();
}

void sub_1DC364584(uint64_t a1, char a2)
{
  __asm { BR              X11 }
}

uint64_t sub_1DC3645CC()
{
  sub_1DC408AF4();
  return swift_bridgeObjectRelease();
}

void sub_1DC364640(uint64_t a1, char a2)
{
  sub_1DC409AC0();
  __asm { BR              X10 }
}

uint64_t sub_1DC364698()
{
  sub_1DC408AF4();
  swift_bridgeObjectRelease();
  return sub_1DC409AF0();
}

void sub_1DC364724(uint64_t a1, char a2)
{
  sub_1DC409AC0();
  __asm { BR              X10 }
}

uint64_t sub_1DC364778()
{
  sub_1DC408AF4();
  swift_bridgeObjectRelease();
  return sub_1DC409AF0();
}

uint64_t StocksActivity.Article.articleID.getter()
{
  return sub_1DC367034(MEMORY[0x1E0D57068], (SEL *)&selRef_articleID);
}

uint64_t sub_1DC3647FC()
{
  uint64_t ObjCClassFromMetadata;
  id v1;
  uint64_t v2;

  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v2 = sub_1DC3FFC80();

  return v2;
}

uint64_t sub_1DC3649B4()
{
  uint64_t ObjCClassFromMetadata;
  id v1;
  uint64_t v2;

  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v2 = sub_1DC3FFC80();

  return v2;
}

id sub_1DC364B74@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(_QWORD *, uint64_t, uint64_t, uint64_t);
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;

  if ((*v1 & 0x8000000000000000) != 0)
  {
    v7 = (void *)sub_1DC408A1C();
    v8 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v7);

    if (v8)
    {
      v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, 0.305882353, 0.674509804, 0.97254902, 1.0);
      *a1 = v8;
      a1[1] = v9;
      v10 = *MEMORY[0x1E0D57000];
      v11 = sub_1DC401B4C();
      v12 = *(_QWORD *)(v11 - 8);
      (*(void (**)(_QWORD *, uint64_t, uint64_t))(v12 + 104))(a1, v10, v11);
      v13 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(v12 + 56);
      v14 = a1;
      v15 = 0;
      v16 = v11;
    }
    else
    {
      v16 = sub_1DC401B4C();
      v13 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56);
      v14 = a1;
      v15 = 1;
    }
    return (id)v13(v14, v15, 1, v16);
  }
  else
  {
    if (qword_1F034ADB0 != -1)
      swift_once();
    v17 = (id)qword_1F03688E8;
    *a1 = qword_1F03688E8;
    a1[1] = 0;
    v3 = *MEMORY[0x1E0D57000];
    v4 = sub_1DC401B4C();
    v5 = *(_QWORD *)(v4 - 8);
    (*(void (**)(_QWORD *, uint64_t, uint64_t))(v5 + 104))(a1, v3, v4);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
    return v17;
  }
}

void StocksActivity.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(_QWORD);
  char *v21;
  _QWORD v22[2];
  uint64_t v23;
  char *v24;
  char *v25;
  char *v26;
  char *v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;

  v1 = type metadata accessor for PreBuyFlowRouteModel();
  MEMORY[0x1E0C80A78](v1);
  v28 = (char *)v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC089DA4(0, (unint64_t *)&qword_1EDB28DE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF0D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v26 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v29 = (char *)v22 - v6;
  v7 = type metadata accessor for CampaignRouteModel();
  MEMORY[0x1E0C80A78](v7);
  v24 = (char *)v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1DC3FFDD0();
  MEMORY[0x1E0C80A78](v9);
  v10 = type metadata accessor for StocksActivity.Article(0);
  MEMORY[0x1E0C80A78](v10);
  v27 = (char *)v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for StocksActivity.StockFeed.Series(0);
  MEMORY[0x1E0C80A78](v12);
  v22[1] = (char *)v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1DC4010E4();
  v30 = *(_QWORD *)(v14 - 8);
  v31 = v14;
  MEMORY[0x1E0C80A78](v14);
  MEMORY[0x1E0C80A78](v15);
  v25 = (char *)v22 - v16;
  v23 = type metadata accessor for StocksActivity.StockFeed(0);
  MEMORY[0x1E0C80A78](v23);
  MEMORY[0x1E0C80A78](v17);
  v18 = type metadata accessor for StocksActivity(0);
  MEMORY[0x1E0C80A78](v18);
  sub_1DC0990BC(v0, (uint64_t)v22 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0), v20);
  v21 = (char *)&loc_1DC365018 + *((int *)qword_1DC3658C0 + swift_getEnumCaseMultiPayload());
  __asm { BR              X10 }
}

uint64_t sub_1DC365028()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  StocksActivity.type.getter();
  return ((uint64_t (*)(void))((char *)&loc_1DC365070 + *((int *)qword_1DC365958 + *(unsigned __int8 *)(v0 - 96))))();
}

uint64_t sub_1DC365080()
{
  uint64_t v0;

  StocksActivity.type.getter();
  return ((uint64_t (*)(void))((char *)&loc_1DC3650B4 + *((int *)qword_1DC365940 + *(unsigned __int8 *)(v0 - 96))))();
}

unint64_t sub_1DC3650C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1DC175964(0, (unint64_t *)&qword_1EDB34880, (void (*)(uint64_t))type metadata accessor for ForYouSectionDescriptor, (void (*)(uint64_t))MEMORY[0x1E0DBA2A8]);
  v2 = v0 + *(int *)(v1 + 48);
  v3 = sub_1DC4059F8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  sub_1DC0926D8(v0, (uint64_t (*)(_QWORD))type metadata accessor for ForYouSectionDescriptor);
  return 0xD00000000000001ELL;
}

void sub_1DC365970(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;

  if ((*v1 & 0x8000000000000000) != 0)
  {
    sub_1DC0821D4(0, &qword_1EDB3F850);
    v5 = (void *)sub_1DC408FB0();
    if (!v5
      || (v6 = v5,
          v11 = objc_msgSend(v5, sel_traitCollection),
          v6,
          (v7 = v11) == 0))
    {
      v7 = objc_msgSend((id)objc_opt_self(), sel_currentTraitCollection);
    }
    v12 = v7;
    v8 = objc_msgSend(v7, sel_horizontalSizeClass);
    v9 = sub_1DC401EB8();
    v10 = MEMORY[0x1E0D575E8];
    a1[3] = v9;
    a1[4] = v10;
    __swift_allocate_boxed_opaque_existential_1(a1);
    if (v8 == (id)1)
      sub_1DC401EA0();
    else
      sub_1DC401EAC();

  }
  else
  {
    v3 = sub_1DC401EB8();
    v4 = MEMORY[0x1E0D575E8];
    a1[3] = v3;
    a1[4] = v4;
    __swift_allocate_boxed_opaque_existential_1(a1);
    sub_1DC401EAC();
  }
}

StocksUI::StocksActivityType_optional __swiftcall StocksActivityType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  StocksUI::StocksActivityType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1DC4098A4();
  result.value = swift_bridgeObjectRelease();
  v5 = 6;
  if (v3 < 6)
    v5 = v3;
  *v2 = v5;
  return result;
}

StocksUI::StocksActivity::Options __swiftcall StocksActivity.Options.init(rawValue:)(StocksUI::StocksActivity::Options rawValue)
{
  StocksUI::StocksActivity::Options *v1;

  v1->rawValue = rawValue.rawValue;
  return rawValue;
}

uint64_t StocksActivity.Article.redirect.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t (*v10)(_QWORD);
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(void);
  uint64_t v16;

  v2 = v1;
  v4 = sub_1DC401BB8();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for StocksActivity.Article(0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0990BC(v2, (uint64_t)v9, v10);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1DC0926D8((uint64_t)v9, type metadata accessor for StocksActivity.Article);
    v11 = sub_1DC402128();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(a1, 1, 1, v11);
  }
  else
  {
    sub_1DC1446B4();
    v14 = (uint64_t)&v9[*(int *)(v13 + 64)];
    v15 = MEMORY[0x1E0D570B0];
    sub_1DC092ED0((uint64_t)v9, (uint64_t)v6, (uint64_t (*)(_QWORD))MEMORY[0x1E0D570B0]);
    sub_1DC401BA0();
    sub_1DC0926D8((uint64_t)v6, (uint64_t (*)(_QWORD))v15);
    return sub_1DC0A6180(v14, (uint64_t)&qword_1EDB39A70, (uint64_t)&unk_1EDB39A60, (uint64_t)&protocol descriptor for ArticleScienceDataProviderType, (uint64_t (*)(_QWORD))sub_1DC0A6204);
  }
}

void StocksActivity.collapseSidebar.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(_QWORD);
  char *v8;
  uint64_t v9;

  v1 = type metadata accessor for StocksActivity.StockFeed(0);
  MEMORY[0x1E0C80A78](v1);
  MEMORY[0x1E0C80A78](v2);
  v3 = type metadata accessor for StocksActivity.Article(0);
  MEMORY[0x1E0C80A78](v3);
  MEMORY[0x1E0C80A78](v4);
  v5 = type metadata accessor for StocksActivity(0);
  MEMORY[0x1E0C80A78](v5);
  sub_1DC0990BC(v0, (uint64_t)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
  v8 = (char *)sub_1DC365D90 + 4 * byte_1DC42AD9E[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1DC365D90()
{
  uint64_t v0;

  sub_1DC0926D8(v0, type metadata accessor for StocksActivity);
  return 0;
}

void sub_1DC365DC8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  JUMPOUT(0x1DC365DA0);
}

void sub_1DC365DE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1DC175964(0, (unint64_t *)&qword_1EDB34880, (void (*)(uint64_t))type metadata accessor for ForYouSectionDescriptor, (void (*)(uint64_t))MEMORY[0x1E0DBA2A8]);
  v2 = v0 + *(int *)(v1 + 48);
  v3 = sub_1DC4059F8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  JUMPOUT(0x1DC365D9CLL);
}

void sub_1DC365E3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1DC092ED0(v2, v0, type metadata accessor for StocksActivity.StockFeed);
  sub_1DC0990BC(v0, v1, type metadata accessor for StocksActivity.StockFeed);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1DC3678C0(0, (unint64_t *)&qword_1EDB275E0, (void (*)(uint64_t))type metadata accessor for StocksActivity.StockFeed.Series);
    sub_1DC0926D8(v1, type metadata accessor for StocksActivity.StockFeed.Series);
  }
  else
  {
    sub_1DC3678C0(0, (unint64_t *)&qword_1EDB28DF0, (void (*)(uint64_t))MEMORY[0x1E0DAF0D0]);
    v3 = sub_1DC4010E4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v1, v3);
  }
  sub_1DC0926D8(v0, type metadata accessor for StocksActivity.StockFeed);
  JUMPOUT(0x1DC365DA4);
}

void StocksActivity.type.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(_QWORD);
  char *v5;
  uint64_t v6;

  v1 = type metadata accessor for StocksActivity(0);
  MEMORY[0x1E0C80A78](v1);
  MEMORY[0x1E0C80A78](v2);
  sub_1DC0990BC(v0, (uint64_t)&v6 - v3, v4);
  v5 = (char *)sub_1DC3660C0 + 4 * byte_1DC42ADAC[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1DC3660C0()
{
  _BYTE *v0;
  uint64_t result;

  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *v0 = 0;
  return result;
}

void sub_1DC366194()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t *v2;
  uint64_t v3;
  uint64_t v4;

  sub_1DC17769C(*v2);
  sub_1DC0990BC(v0, v1, type metadata accessor for StocksActivity);
  *(_QWORD *)(v3 - 64) = 0;
  *(_QWORD *)(v3 - 56) = 0xE000000000000000;
  sub_1DC409730();
  v4 = *(_QWORD *)(v3 - 56);
  *(_QWORD *)(v3 - 64) = *(_QWORD *)(v3 - 64);
  *(_QWORD *)(v3 - 56) = v4;
  sub_1DC408B48();
  sub_1DC409808();
  sub_1DC409838();
  __break(1u);
}

uint64_t sub_1DC3662A8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  id *v20;
  uint64_t (*v21)(_QWORD);
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(void);
  uint64_t v32;
  char *v33;
  uint64_t v34;
  void *v35;
  void (*v36)(char *, uint64_t);
  uint64_t v37;
  id v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  int *v44;
  char *v45;
  uint64_t result;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  int *v53;
  _QWORD *v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t *v59;
  char v60[40];

  v59 = a1;
  v58 = sub_1DC40202C();
  v55 = *(_QWORD *)(v58 - 8);
  MEMORY[0x1E0C80A78](v58);
  v3 = (char *)&v55 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC089DA4(0, (unint64_t *)&unk_1EDB28A70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v56 = (char *)&v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v57 = (uint64_t)&v55 - v7;
  v8 = sub_1DC401960();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1DC401BB8();
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v55 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v55 - v16;
  v18 = type metadata accessor for StocksActivity.Article(0);
  MEMORY[0x1E0C80A78](v18);
  v20 = (id *)((char *)&v55 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1DC0990BC(v1, (uint64_t)v20, v21);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v22 = *v20;
    v23 = objc_msgSend(*v20, sel_identifier);
    v24 = sub_1DC408A4C();
    v26 = v25;

    v27 = objc_msgSend(v22, sel_contentURL);
    if (v27)
    {
      v28 = v27;
      v29 = (uint64_t)v56;
      sub_1DC3FFD94();

      swift_unknownObjectRelease();
      v30 = sub_1DC3FFDD0();
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v29, 0, 1, v30);
    }
    else
    {
      swift_unknownObjectRelease();
      v42 = sub_1DC3FFDD0();
      v29 = (uint64_t)v56;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56))(v56, 1, 1, v42);
    }
    v43 = v59;
    v44 = (int *)type metadata accessor for ArticleUserInfoModel();
    v45 = (char *)v43 + v44[7];
    *((_QWORD *)v45 + 4) = 0;
    *(_OWORD *)v45 = 0u;
    *((_OWORD *)v45 + 1) = 0u;
    *v43 = v24;
    v43[1] = v26;
    *((_BYTE *)v43 + v44[6]) = 1;
    result = sub_1DC316038(v29, (uint64_t)v43 + v44[5], (uint64_t)&unk_1EDB28A70, (uint64_t)MEMORY[0x1E0CAFFF8], (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1DC089DA4);
    v47 = (uint64_t *)((char *)v43 + v44[8]);
    *v47 = 0;
    v47[1] = 0;
  }
  else
  {
    v31 = MEMORY[0x1E0D570B0];
    sub_1DC092ED0((uint64_t)v20, (uint64_t)v17, (uint64_t (*)(_QWORD))MEMORY[0x1E0D570B0]);
    sub_1DC0990BC((uint64_t)v17, (uint64_t)v14, (uint64_t (*)(_QWORD))v31);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      result = sub_1DC409838();
      __break(1u);
    }
    else
    {
      sub_1DC4022CC();
      v32 = sub_1DC401954();
      v56 = v33;
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      v34 = sub_1DC3FFDD0();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v57, 1, 1, v34);
      sub_1DC4022E4();
      sub_1DC401B7C();
      v35 = (void *)sub_1DC402020();
      v36 = *(void (**)(char *, uint64_t))(v55 + 8);
      v36(v3, v58);
      if (v35)
      {
        v37 = v32;
        v38 = objc_msgSend(v35, sel_jsonRepresentation);

        v39 = v59;
        if (v38)
        {
          v35 = (void *)sub_1DC408A4C();
          v41 = v40;

          swift_release();
        }
        else
        {
          swift_release();
          v35 = 0;
          v41 = 0;
        }
        v32 = v37;
      }
      else
      {
        swift_release();
        v41 = 0;
        v39 = v59;
      }
      sub_1DC1446B4();
      v49 = (uint64_t)v20 + *(int *)(v48 + 64);
      sub_1DC175964(0, (unint64_t *)&qword_1EDB42670, (void (*)(uint64_t))MEMORY[0x1E0D57E30], (void (*)(uint64_t))MEMORY[0x1E0D57888]);
      v51 = &v14[*(int *)(v50 + 48)];
      sub_1DC0926D8((uint64_t)v17, (uint64_t (*)(_QWORD))MEMORY[0x1E0D570B0]);
      v52 = v56;
      *v39 = v32;
      v39[1] = (uint64_t)v52;
      v53 = (int *)type metadata accessor for ArticleUserInfoModel();
      *((_BYTE *)v39 + v53[6]) = 0;
      sub_1DC316038(v57, (uint64_t)v39 + v53[5], (uint64_t)&unk_1EDB28A70, (uint64_t)MEMORY[0x1E0CAFFF8], (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1DC089DA4);
      sub_1DC316038((uint64_t)v60, (uint64_t)v39 + v53[7], (uint64_t)&unk_1EDB29388, (uint64_t)&qword_1EDB29380, MEMORY[0x1E0D57EE8], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1DC0A6204);
      v54 = (uint64_t *)((char *)v39 + v53[8]);
      *v54 = v35;
      v54[1] = v41;
      v36(v51, v58);
      return sub_1DC0A6180(v49, (uint64_t)&qword_1EDB39A70, (uint64_t)&unk_1EDB39A60, (uint64_t)&protocol descriptor for ArticleScienceDataProviderType, (uint64_t (*)(_QWORD))sub_1DC0A6204);
    }
  }
  return result;
}

uint64_t StocksActivity.StockFeed.stock.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t (*v10)(_QWORD);
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;

  v2 = v1;
  v4 = type metadata accessor for StocksActivity.StockFeed.Series(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for StocksActivity.StockFeed(0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0990BC(v2, (uint64_t)v9, v10);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1DC092ED0((uint64_t)v9, (uint64_t)v6, type metadata accessor for StocksActivity.StockFeed.Series);
    v11 = sub_1DC4010E4();
    (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, v6, v11);
    return sub_1DC0926D8((uint64_t)v6, type metadata accessor for StocksActivity.StockFeed.Series);
  }
  else
  {
    v13 = sub_1DC4010E4();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(a1, v9, v13);
  }
}

uint64_t StocksActivity.Article.headline.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t (*v8)(_QWORD);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void);
  uint64_t v14;

  v1 = v0;
  v2 = sub_1DC401BB8();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for StocksActivity.Article(0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0990BC(v1, (uint64_t)v7, v8);
  if (swift_getEnumCaseMultiPayload() == 1)
    return *(_QWORD *)v7;
  sub_1DC1446B4();
  v11 = (uint64_t)&v7[*(int *)(v10 + 64)];
  v12 = MEMORY[0x1E0D570B0];
  sub_1DC092ED0((uint64_t)v7, (uint64_t)v4, (uint64_t (*)(_QWORD))MEMORY[0x1E0D570B0]);
  v9 = sub_1DC401B94();
  sub_1DC0926D8((uint64_t)v4, (uint64_t (*)(_QWORD))v12);
  sub_1DC0A6180(v11, (uint64_t)&qword_1EDB39A70, (uint64_t)&unk_1EDB39A60, (uint64_t)&protocol descriptor for ArticleScienceDataProviderType, (uint64_t (*)(_QWORD))sub_1DC0A6204);
  return v9;
}

void StocksActivityType.eligibilities.getter()
{
  __asm { BR              X10 }
}

uint64_t sub_1DC366AE4()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1DC089DA4(0, &qword_1EDB3FF60, (uint64_t (*)(uint64_t))MEMORY[0x1E0DBA148], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v0 = sub_1DC405938();
  v1 = *(_QWORD *)(v0 - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1DC40DC10;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v1 + 104))(v3 + v2, *MEMORY[0x1E0DBA140], v0);
  v4 = sub_1DC369338(v3);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  return v4;
}

uint64_t StocksActivityType.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1DC366D9C + 4 * byte_1DC42ADC0[*v0]))(0xD00000000000001DLL, 0x80000001DC432CB0);
}

unint64_t sub_1DC366D9C()
{
  return 0xD00000000000001ELL;
}

uint64_t sub_1DC366DC4@<X0>(uint64_t a1@<X8>)
{
  return a1 + 2;
}

void sub_1DC366DFC(char *a1)
{
  sub_1DC1597DC(*a1);
}

void sub_1DC366E08()
{
  char *v0;

  sub_1DC3643F8(*v0);
}

void sub_1DC366E10(uint64_t a1)
{
  char *v1;

  sub_1DC364584(a1, *v1);
}

void sub_1DC366E18(uint64_t a1)
{
  char *v1;

  sub_1DC364640(a1, *v1);
}

StocksUI::StocksActivityType_optional sub_1DC366E20(Swift::String *a1)
{
  return StocksActivityType.init(rawValue:)(*a1);
}

uint64_t sub_1DC366E2C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = StocksActivityType.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1DC366E50()
{
  sub_1DC3696E0();
  return sub_1DC408CA4();
}

uint64_t sub_1DC366EAC()
{
  sub_1DC3696E0();
  return sub_1DC408C8C();
}

uint64_t sub_1DC366EFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v0 = type metadata accessor for StocksActivity(0);
  __swift_allocate_value_buffer(v0, qword_1EDB2C360);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EDB2C360);
  sub_1DC175964(0, (unint64_t *)&qword_1EDB34880, (void (*)(uint64_t))type metadata accessor for ForYouSectionDescriptor, (void (*)(uint64_t))MEMORY[0x1E0DBA2A8]);
  v3 = v1 + *(int *)(v2 + 48);
  type metadata accessor for ForYouSectionDescriptor();
  swift_storeEnumTagMultiPayload();
  v4 = *MEMORY[0x1E0DBA288];
  v5 = sub_1DC4059F8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(v3, v4, v5);
  return swift_storeEnumTagMultiPayload();
}

uint64_t static StocksActivity.main.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1EDB2C380 != -1)
    swift_once();
  v2 = type metadata accessor for StocksActivity(0);
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EDB2C360);
  return sub_1DC0990BC(v3, a1, type metadata accessor for StocksActivity);
}

uint64_t sub_1DC367034(uint64_t (*a1)(uint64_t), SEL *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  id *v11;
  uint64_t (*v12)(_QWORD);
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(void);
  uint64_t v18;
  uint64_t v20;

  v5 = v2;
  v6 = sub_1DC401BB8();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for StocksActivity.Article(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (id *)((char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1DC0990BC(v5, (uint64_t)v11, v12);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v13 = objc_msgSend(*v11, *a2);
    v14 = sub_1DC408A4C();
    swift_unknownObjectRelease();

  }
  else
  {
    sub_1DC1446B4();
    v16 = (uint64_t)v11 + *(int *)(v15 + 64);
    v17 = MEMORY[0x1E0D570B0];
    v18 = sub_1DC092ED0((uint64_t)v11, (uint64_t)v8, (uint64_t (*)(_QWORD))MEMORY[0x1E0D570B0]);
    v14 = a1(v18);
    sub_1DC0926D8((uint64_t)v8, (uint64_t (*)(_QWORD))v17);
    sub_1DC0A6180(v16, (uint64_t)&qword_1EDB39A70, (uint64_t)&unk_1EDB39A60, (uint64_t)&protocol descriptor for ArticleScienceDataProviderType, (uint64_t (*)(_QWORD))sub_1DC0A6204);
  }
  return v14;
}

void StocksActivity.eligibilities.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(_QWORD);
  char *v4;
  uint64_t v5;

  v1 = type metadata accessor for StocksActivity(0);
  MEMORY[0x1E0C80A78](v1);
  sub_1DC0990BC(v0, (uint64_t)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
  v4 = (char *)sub_1DC36723C + 4 * byte_1DC42ADCB[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1DC36723C()
{
  uint64_t v0;

  sub_1DC0926D8(v0, type metadata accessor for StocksActivity);
  return MEMORY[0x1E0DEE9E8];
}

void StocksActivity.disableAnimation.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(_QWORD);
  char *v8;
  uint64_t v9;

  v1 = type metadata accessor for StocksActivity.StockFeed(0);
  MEMORY[0x1E0C80A78](v1);
  MEMORY[0x1E0C80A78](v2);
  v3 = type metadata accessor for StocksActivity.Article(0);
  MEMORY[0x1E0C80A78](v3);
  MEMORY[0x1E0C80A78](v4);
  v5 = type metadata accessor for StocksActivity(0);
  MEMORY[0x1E0C80A78](v5);
  sub_1DC0990BC(v0, (uint64_t)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
  v8 = (char *)sub_1DC3674A0 + 4 * byte_1DC42ADD9[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1DC3674A0()
{
  uint64_t v0;

  sub_1DC0926D8(v0, type metadata accessor for StocksActivity);
  return 0;
}

void sub_1DC3674D8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  JUMPOUT(0x1DC3674B0);
}

void sub_1DC3674F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1DC175964(0, (unint64_t *)&qword_1EDB34880, (void (*)(uint64_t))type metadata accessor for ForYouSectionDescriptor, (void (*)(uint64_t))MEMORY[0x1E0DBA2A8]);
  v2 = v0 + *(int *)(v1 + 48);
  v3 = sub_1DC4059F8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  JUMPOUT(0x1DC3674ACLL);
}

void sub_1DC36754C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1DC092ED0(v2, v0, type metadata accessor for StocksActivity.StockFeed);
  sub_1DC0990BC(v0, v1, type metadata accessor for StocksActivity.StockFeed);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1DC3678C0(0, (unint64_t *)&qword_1EDB275E0, (void (*)(uint64_t))type metadata accessor for StocksActivity.StockFeed.Series);
    sub_1DC0926D8(v1, type metadata accessor for StocksActivity.StockFeed.Series);
  }
  else
  {
    sub_1DC3678C0(0, (unint64_t *)&qword_1EDB28DF0, (void (*)(uint64_t))MEMORY[0x1E0DAF0D0]);
    v3 = sub_1DC4010E4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v1, v3);
  }
  sub_1DC0926D8(v0, type metadata accessor for StocksActivity.StockFeed);
  JUMPOUT(0x1DC3674B4);
}

void StocksActivity.affectsNavigationStack.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(_QWORD);
  char *v4;
  uint64_t v5;

  v1 = type metadata accessor for StocksActivity(0);
  MEMORY[0x1E0C80A78](v1);
  sub_1DC0990BC(v0, (uint64_t)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
  v4 = (char *)sub_1DC3677B0 + 4 * byte_1DC42ADE7[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1DC3677B0()
{
  uint64_t v0;

  sub_1DC0926D8(v0, type metadata accessor for StocksActivity);
  return 1;
}

void sub_1DC3677F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1DC175964(0, (unint64_t *)&qword_1EDB34880, (void (*)(uint64_t))type metadata accessor for ForYouSectionDescriptor, (void (*)(uint64_t))MEMORY[0x1E0DBA2A8]);
  v2 = v0 + *(int *)(v1 + 48);
  v3 = sub_1DC4059F8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  JUMPOUT(0x1DC3677BCLL);
}

void sub_1DC36784C()
{
  uint64_t v0;

  sub_1DC17CCB0();
  swift_release();
  sub_1DC0A6180(v0, (uint64_t)&qword_1EDB28DE0, (uint64_t)MEMORY[0x1E0DAF0D0], (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD))sub_1DC089DA4);
  JUMPOUT(0x1DC3677C0);
}

void static StocksActivity.Options.collapseSidebar.getter(_QWORD *a1@<X8>)
{
  *a1 = 1;
}

void static StocksActivity.Options.disableAnimation.getter(_QWORD *a1@<X8>)
{
  *a1 = 2;
}

void static StocksActivity.Options.default.getter(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

uint64_t StocksActivity.Options.rawValue.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

void sub_1DC3678C0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t TupleTypeMetadata2;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v5)
      atomic_store(TupleTypeMetadata2, a2);
  }
}

uint64_t sub_1DC367924()
{
  _BYTE *v0;

  if (*v0)
    return 0x694C736B636F7473;
  else
    return 0x6C616974696E69;
}

uint64_t sub_1DC367964@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC36DDA8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC367988()
{
  sub_1DC3695B8();
  return sub_1DC409B20();
}

uint64_t sub_1DC3679B0()
{
  sub_1DC3695B8();
  return sub_1DC409B2C();
}

uint64_t StocksActivity.StockFeed.Series.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD v11[2];
  char v12;
  char v13;

  v3 = v1;
  sub_1DC112498(0, &qword_1F0352788, (uint64_t (*)(void))sub_1DC3695B8, (uint64_t)&type metadata for StocksActivity.StockFeed.Series.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC3695B8();
  sub_1DC409B14();
  v13 = 0;
  sub_1DC4010E4();
  sub_1DC080808(&qword_1EDB27480, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF0D0], MEMORY[0x1E0DAF0E0]);
  sub_1DC409988();
  if (!v2)
  {
    v11[1] = *(_QWORD *)(v3 + *(int *)(type metadata accessor for StocksActivity.StockFeed.Series(0) + 20));
    v12 = 1;
    sub_1DC089DA4(0, &qword_1EDB3F630, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF0D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1DC3695FC(&qword_1F0352798, &qword_1EDB27480, MEMORY[0x1E0DAF0E0], MEMORY[0x1E0DEAF10]);
    sub_1DC409988();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t StocksActivity.StockFeed.Series.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  char v26;
  char v27;

  v18 = a2;
  v23 = sub_1DC4010E4();
  v19 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  v20 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC112498(0, (unint64_t *)&unk_1F03527A0, (uint64_t (*)(void))sub_1DC3695B8, (uint64_t)&type metadata for StocksActivity.StockFeed.Series.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v22 = v4;
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v18 - v6;
  v8 = type metadata accessor for StocksActivity.StockFeed.Series(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC3695B8();
  v21 = v7;
  v11 = (uint64_t)v24;
  sub_1DC409B08();
  if (v11)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v24 = a1;
  v12 = v19;
  v27 = 0;
  sub_1DC080808(&qword_1EDB42CD0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF0D0], MEMORY[0x1E0DAF0F0]);
  v14 = v20;
  v13 = v21;
  v16 = v22;
  v15 = v23;
  sub_1DC409910();
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v10, v14, v15);
  sub_1DC089DA4(0, &qword_1EDB3F630, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF0D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  v26 = 1;
  sub_1DC3695FC(&qword_1F03527B0, &qword_1EDB42CD0, MEMORY[0x1E0DAF0F0], MEMORY[0x1E0DEAF40]);
  sub_1DC409910();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v13, v16);
  *(_QWORD *)&v10[*(int *)(v8 + 20)] = v25;
  sub_1DC0990BC((uint64_t)v10, v18, type metadata accessor for StocksActivity.StockFeed.Series);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
  return sub_1DC0926D8((uint64_t)v10, type metadata accessor for StocksActivity.StockFeed.Series);
}

uint64_t sub_1DC367E7C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return StocksActivity.StockFeed.Series.init(from:)(a1, a2);
}

uint64_t sub_1DC367E90(_QWORD *a1)
{
  return StocksActivity.StockFeed.Series.encode(to:)(a1);
}

uint64_t sub_1DC367EA4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  char *v23;
  uint64_t result;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;

  v2 = sub_1DC4001B4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v33 = (char *)&v28 - v7;
  v8 = *(_QWORD *)(a1 + 16);
  if (v8)
  {
    sub_1DC36E0FC(0, (unint64_t *)&unk_1EDB3FC10, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB11B8], &qword_1EDB28AF8, MEMORY[0x1E0CB11D0]);
    v9 = sub_1DC40970C();
    v10 = 0;
    v32 = v9 + 56;
    v11 = *(unsigned __int8 *)(v3 + 80);
    v29 = v8;
    v30 = a1 + ((v11 + 32) & ~v11);
    v12 = *(_QWORD *)(v3 + 72);
    v13 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    while (1)
    {
      v31 = v10;
      v13(v33, v30 + v12 * v10, v2);
      sub_1DC080808(&qword_1EDB28AF8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB11B8], MEMORY[0x1E0CB11D0]);
      v14 = sub_1DC4089B0();
      v15 = ~(-1 << *(_BYTE *)(v9 + 32));
      v16 = v14 & v15;
      v17 = (v14 & (unint64_t)v15) >> 6;
      v18 = *(_QWORD *)(v32 + 8 * v17);
      v19 = 1 << (v14 & v15);
      if ((v19 & v18) != 0)
      {
        do
        {
          v13(v5, *(_QWORD *)(v9 + 48) + v16 * v12, v2);
          sub_1DC080808((unint64_t *)&unk_1EDB28B00, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB11B8], MEMORY[0x1E0CB11D8]);
          v20 = sub_1DC4089F8();
          v21 = v3;
          v22 = *(void (**)(char *, uint64_t))(v3 + 8);
          v22(v5, v2);
          if ((v20 & 1) != 0)
          {
            v22(v33, v2);
            v3 = v21;
            v8 = v29;
            goto LABEL_4;
          }
          v16 = (v16 + 1) & v15;
          v17 = v16 >> 6;
          v18 = *(_QWORD *)(v32 + 8 * (v16 >> 6));
          v19 = 1 << v16;
          v3 = v21;
        }
        while ((v18 & (1 << v16)) != 0);
        v8 = v29;
      }
      v23 = v33;
      *(_QWORD *)(v32 + 8 * v17) = v19 | v18;
      result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v9 + 48) + v16 * v12, v23, v2);
      v25 = *(_QWORD *)(v9 + 16);
      v26 = __OFADD__(v25, 1);
      v27 = v25 + 1;
      if (v26)
        break;
      *(_QWORD *)(v9 + 16) = v27;
LABEL_4:
      v10 = v31 + 1;
      if (v31 + 1 == v8)
        return v9;
    }
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E0DEE9E8];
  }
  return result;
}

unint64_t sub_1DC368124(unint64_t result)
{
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  BOOL v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;

  v1 = result;
  v2 = result >> 62;
  if (result >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_1DC409850();
    result = swift_bridgeObjectRelease();
    if (v5)
    {
LABEL_3:
      sub_1DC36DD34();
      result = sub_1DC40970C();
      v3 = result;
      v19 = v1;
      if (!v2)
        goto LABEL_4;
LABEL_8:
      swift_bridgeObjectRetain();
      v4 = sub_1DC409850();
      result = swift_bridgeObjectRelease();
      if (!v4)
        return v3;
      goto LABEL_9;
    }
  }
  else if (*(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  v3 = MEMORY[0x1E0DEE9E8];
  v19 = v1;
  if (v2)
    goto LABEL_8;
LABEL_4:
  v4 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v4)
    return v3;
LABEL_9:
  v6 = 0;
  v7 = v3 + 56;
  v18 = v4;
  while ((v19 & 0xC000000000000001) != 0)
  {
    result = MEMORY[0x1DF0C9FBC](v6, v19);
    v8 = result;
    v9 = __OFADD__(v6++, 1);
    if (v9)
      goto LABEL_25;
LABEL_17:
    sub_1DC089DA4(0, (unint64_t *)&qword_1F034C400, (uint64_t (*)(uint64_t))type metadata accessor for WelcomeView, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEC5A8]);
    result = sub_1DC4089B0();
    v10 = -1 << *(_BYTE *)(v3 + 32);
    v11 = result & ~v10;
    v12 = v11 >> 6;
    v13 = *(_QWORD *)(v7 + 8 * (v11 >> 6));
    v14 = 1 << v11;
    if (((1 << v11) & v13) != 0)
    {
      v15 = ~v10;
      while (1)
      {
        result = sub_1DC4089F8();
        if ((result & 1) != 0)
          break;
        v11 = (v11 + 1) & v15;
        v12 = v11 >> 6;
        v13 = *(_QWORD *)(v7 + 8 * (v11 >> 6));
        v14 = 1 << v11;
        if ((v13 & (1 << v11)) == 0)
        {
          v4 = v18;
          goto LABEL_22;
        }
      }
      result = swift_release();
      v4 = v18;
      if (v6 == v18)
        return v3;
    }
    else
    {
LABEL_22:
      *(_QWORD *)(v7 + 8 * v12) = v14 | v13;
      *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v11) = v8;
      v16 = *(_QWORD *)(v3 + 16);
      v9 = __OFADD__(v16, 1);
      v17 = v16 + 1;
      if (v9)
        goto LABEL_26;
      *(_QWORD *)(v3 + 16) = v17;
      if (v6 == v4)
        return v3;
    }
  }
  if (v6 >= *(_QWORD *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_27;
  v8 = *(_QWORD *)(v19 + 32 + 8 * v6);
  result = swift_retain();
  v9 = __OFADD__(v6++, 1);
  if (!v9)
    goto LABEL_17;
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1DC368398(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  char *v23;
  uint64_t result;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;

  v2 = sub_1DC4047EC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v33 = (char *)&v28 - v7;
  v8 = *(_QWORD *)(a1 + 16);
  if (v8)
  {
    sub_1DC36E0FC(0, &qword_1EDB284E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB7BE8], &qword_1EDB27560, MEMORY[0x1E0DB7BF0]);
    v9 = sub_1DC40970C();
    v10 = 0;
    v32 = v9 + 56;
    v11 = *(unsigned __int8 *)(v3 + 80);
    v29 = v8;
    v30 = a1 + ((v11 + 32) & ~v11);
    v12 = *(_QWORD *)(v3 + 72);
    v13 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    while (1)
    {
      v31 = v10;
      v13(v33, v30 + v12 * v10, v2);
      sub_1DC080808(&qword_1EDB27560, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB7BE8], MEMORY[0x1E0DB7BF0]);
      v14 = sub_1DC4089B0();
      v15 = ~(-1 << *(_BYTE *)(v9 + 32));
      v16 = v14 & v15;
      v17 = (v14 & (unint64_t)v15) >> 6;
      v18 = *(_QWORD *)(v32 + 8 * v17);
      v19 = 1 << (v14 & v15);
      if ((v19 & v18) != 0)
      {
        do
        {
          v13(v5, *(_QWORD *)(v9 + 48) + v16 * v12, v2);
          sub_1DC080808(&qword_1EDB29DA8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB7BE8], MEMORY[0x1E0DB7BF8]);
          v20 = sub_1DC4089F8();
          v21 = v3;
          v22 = *(void (**)(char *, uint64_t))(v3 + 8);
          v22(v5, v2);
          if ((v20 & 1) != 0)
          {
            v22(v33, v2);
            v3 = v21;
            v8 = v29;
            goto LABEL_4;
          }
          v16 = (v16 + 1) & v15;
          v17 = v16 >> 6;
          v18 = *(_QWORD *)(v32 + 8 * (v16 >> 6));
          v19 = 1 << v16;
          v3 = v21;
        }
        while ((v18 & (1 << v16)) != 0);
        v8 = v29;
      }
      v23 = v33;
      *(_QWORD *)(v32 + 8 * v17) = v19 | v18;
      result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v9 + 48) + v16 * v12, v23, v2);
      v25 = *(_QWORD *)(v9 + 16);
      v26 = __OFADD__(v25, 1);
      v27 = v25 + 1;
      if (v26)
        break;
      *(_QWORD *)(v9 + 16) = v27;
LABEL_4:
      v10 = v31 + 1;
      if (v31 + 1 == v8)
        return v9;
    }
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E0DEE9E8];
  }
  return result;
}

uint64_t sub_1DC368618(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  char *v23;
  uint64_t result;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;

  v2 = sub_1DC405338();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v33 = (char *)&v28 - v7;
  v8 = *(_QWORD *)(a1 + 16);
  if (v8)
  {
    sub_1DC36E0FC(0, &qword_1EDB3FC20, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB9558], &qword_1EDB2A148, MEMORY[0x1E0DB9560]);
    v9 = sub_1DC40970C();
    v10 = 0;
    v32 = v9 + 56;
    v11 = *(unsigned __int8 *)(v3 + 80);
    v29 = v8;
    v30 = a1 + ((v11 + 32) & ~v11);
    v12 = *(_QWORD *)(v3 + 72);
    v13 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    while (1)
    {
      v31 = v10;
      v13(v33, v30 + v12 * v10, v2);
      sub_1DC080808(&qword_1EDB2A148, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB9558], MEMORY[0x1E0DB9560]);
      v14 = sub_1DC4089B0();
      v15 = ~(-1 << *(_BYTE *)(v9 + 32));
      v16 = v14 & v15;
      v17 = (v14 & (unint64_t)v15) >> 6;
      v18 = *(_QWORD *)(v32 + 8 * v17);
      v19 = 1 << (v14 & v15);
      if ((v19 & v18) != 0)
      {
        do
        {
          v13(v5, *(_QWORD *)(v9 + 48) + v16 * v12, v2);
          sub_1DC080808((unint64_t *)&unk_1F0352840, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB9558], MEMORY[0x1E0DB9568]);
          v20 = sub_1DC4089F8();
          v21 = v3;
          v22 = *(void (**)(char *, uint64_t))(v3 + 8);
          v22(v5, v2);
          if ((v20 & 1) != 0)
          {
            v22(v33, v2);
            v3 = v21;
            v8 = v29;
            goto LABEL_4;
          }
          v16 = (v16 + 1) & v15;
          v17 = v16 >> 6;
          v18 = *(_QWORD *)(v32 + 8 * (v16 >> 6));
          v19 = 1 << v16;
          v3 = v21;
        }
        while ((v18 & (1 << v16)) != 0);
        v8 = v29;
      }
      v23 = v33;
      *(_QWORD *)(v32 + 8 * v17) = v19 | v18;
      result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v9 + 48) + v16 * v12, v23, v2);
      v25 = *(_QWORD *)(v9 + 16);
      v26 = __OFADD__(v25, 1);
      v27 = v25 + 1;
      if (v26)
        break;
      *(_QWORD *)(v9 + 16) = v27;
LABEL_4:
      v10 = v31 + 1;
      if (v31 + 1 == v8)
        return v9;
    }
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E0DEE9E8];
  }
  return result;
}

uint64_t sub_1DC368898(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    sub_1DC36E0FC(0, &qword_1F0352808, (uint64_t (*)(uint64_t))type metadata accessor for ActivityType, &qword_1F034BCA0, (uint64_t)&unk_1DC40D950);
    v3 = sub_1DC40970C();
    v4 = 0;
    v5 = v3 + 56;
    v31 = v1;
    v32 = a1 + 32;
    while (1)
    {
      v6 = *(void **)(v32 + 8 * v4);
      sub_1DC408A4C();
      sub_1DC409AC0();
      v7 = v6;
      sub_1DC408AF4();
      v8 = sub_1DC409AF0();
      result = swift_bridgeObjectRelease();
      v10 = -1 << *(_BYTE *)(v3 + 32);
      v11 = v8 & ~v10;
      v12 = v11 >> 6;
      v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
      v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        v15 = sub_1DC408A4C();
        v17 = v16;
        if (v15 == sub_1DC408A4C() && v17 == v18)
        {
LABEL_3:
          swift_bridgeObjectRelease_n();
LABEL_4:

          goto LABEL_5;
        }
        v20 = sub_1DC4099E8();
        swift_bridgeObjectRelease();
        result = swift_bridgeObjectRelease();
        if ((v20 & 1) != 0)
          goto LABEL_4;
        v21 = ~v10;
        while (1)
        {
          v11 = (v11 + 1) & v21;
          v12 = v11 >> 6;
          v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
          v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0)
            break;
          v22 = sub_1DC408A4C();
          v24 = v23;
          if (v22 == sub_1DC408A4C() && v24 == v25)
            goto LABEL_3;
          v27 = sub_1DC4099E8();
          swift_bridgeObjectRelease();
          result = swift_bridgeObjectRelease();
          if ((v27 & 1) != 0)
            goto LABEL_4;
        }
      }
      *(_QWORD *)(v5 + 8 * v12) = v14 | v13;
      *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v11) = v7;
      v28 = *(_QWORD *)(v3 + 16);
      v29 = __OFADD__(v28, 1);
      v30 = v28 + 1;
      if (v29)
      {
        __break(1u);
        return result;
      }
      *(_QWORD *)(v3 + 16) = v30;
LABEL_5:
      if (++v4 == v31)
        return v3;
    }
  }
  return MEMORY[0x1E0DEE9E8];
}

uint64_t sub_1DC368AE0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  char *v23;
  uint64_t result;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;

  v2 = sub_1DC408344();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v33 = (char *)&v28 - v7;
  v8 = *(_QWORD *)(a1 + 16);
  if (v8)
  {
    sub_1DC36E0FC(0, &qword_1EDB3FC30, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5F470], (unint64_t *)&unk_1EDB2B118, MEMORY[0x1E0D5F478]);
    v9 = sub_1DC40970C();
    v10 = 0;
    v32 = v9 + 56;
    v11 = *(unsigned __int8 *)(v3 + 80);
    v29 = v8;
    v30 = a1 + ((v11 + 32) & ~v11);
    v12 = *(_QWORD *)(v3 + 72);
    v13 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    while (1)
    {
      v31 = v10;
      v13(v33, v30 + v12 * v10, v2);
      sub_1DC080808((unint64_t *)&unk_1EDB2B118, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5F470], MEMORY[0x1E0D5F478]);
      v14 = sub_1DC4089B0();
      v15 = ~(-1 << *(_BYTE *)(v9 + 32));
      v16 = v14 & v15;
      v17 = (v14 & (unint64_t)v15) >> 6;
      v18 = *(_QWORD *)(v32 + 8 * v17);
      v19 = 1 << (v14 & v15);
      if ((v19 & v18) != 0)
      {
        do
        {
          v13(v5, *(_QWORD *)(v9 + 48) + v16 * v12, v2);
          sub_1DC080808(&qword_1F0352820, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5F470], MEMORY[0x1E0D5F480]);
          v20 = sub_1DC4089F8();
          v21 = v3;
          v22 = *(void (**)(char *, uint64_t))(v3 + 8);
          v22(v5, v2);
          if ((v20 & 1) != 0)
          {
            v22(v33, v2);
            v3 = v21;
            v8 = v29;
            goto LABEL_4;
          }
          v16 = (v16 + 1) & v15;
          v17 = v16 >> 6;
          v18 = *(_QWORD *)(v32 + 8 * (v16 >> 6));
          v19 = 1 << v16;
          v3 = v21;
        }
        while ((v18 & (1 << v16)) != 0);
        v8 = v29;
      }
      v23 = v33;
      *(_QWORD *)(v32 + 8 * v17) = v19 | v18;
      result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v9 + 48) + v16 * v12, v23, v2);
      v25 = *(_QWORD *)(v9 + 16);
      v26 = __OFADD__(v25, 1);
      v27 = v25 + 1;
      if (v26)
        break;
      *(_QWORD *)(v9 + 16) = v27;
LABEL_4:
      v10 = v31 + 1;
      if (v31 + 1 == v8)
        return v9;
    }
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E0DEE9E8];
  }
  return result;
}

uint64_t sub_1DC368D60(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  char *v23;
  uint64_t result;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;

  v2 = sub_1DC40007C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v33 = (char *)&v28 - v7;
  v8 = *(_QWORD *)(a1 + 16);
  if (v8)
  {
    sub_1DC36E0FC(0, &qword_1F0352828, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0AE8], (unint64_t *)&unk_1F0352830, MEMORY[0x1E0CB0B00]);
    v9 = sub_1DC40970C();
    v10 = 0;
    v32 = v9 + 56;
    v11 = *(unsigned __int8 *)(v3 + 80);
    v29 = v8;
    v30 = a1 + ((v11 + 32) & ~v11);
    v12 = *(_QWORD *)(v3 + 72);
    v13 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    while (1)
    {
      v31 = v10;
      v13(v33, v30 + v12 * v10, v2);
      sub_1DC080808((unint64_t *)&unk_1F0352830, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0AE8], MEMORY[0x1E0CB0B00]);
      v14 = sub_1DC4089B0();
      v15 = ~(-1 << *(_BYTE *)(v9 + 32));
      v16 = v14 & v15;
      v17 = (v14 & (unint64_t)v15) >> 6;
      v18 = *(_QWORD *)(v32 + 8 * v17);
      v19 = 1 << (v14 & v15);
      if ((v19 & v18) != 0)
      {
        do
        {
          v13(v5, *(_QWORD *)(v9 + 48) + v16 * v12, v2);
          sub_1DC080808(&qword_1F034C408, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0AE8], MEMORY[0x1E0CB0B08]);
          v20 = sub_1DC4089F8();
          v21 = v3;
          v22 = *(void (**)(char *, uint64_t))(v3 + 8);
          v22(v5, v2);
          if ((v20 & 1) != 0)
          {
            v22(v33, v2);
            v3 = v21;
            v8 = v29;
            goto LABEL_4;
          }
          v16 = (v16 + 1) & v15;
          v17 = v16 >> 6;
          v18 = *(_QWORD *)(v32 + 8 * (v16 >> 6));
          v19 = 1 << v16;
          v3 = v21;
        }
        while ((v18 & (1 << v16)) != 0);
        v8 = v29;
      }
      v23 = v33;
      *(_QWORD *)(v32 + 8 * v17) = v19 | v18;
      result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v9 + 48) + v16 * v12, v23, v2);
      v25 = *(_QWORD *)(v9 + 16);
      v26 = __OFADD__(v25, 1);
      v27 = v25 + 1;
      if (v26)
        break;
      *(_QWORD *)(v9 + 16) = v27;
LABEL_4:
      v10 = v31 + 1;
      if (v31 + 1 == v8)
        return v9;
    }
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E0DEE9E8];
  }
  return result;
}

void sub_1DC368FE0(unint64_t a1)
{
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  char v18;
  uint64_t v19;
  id v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  char v33;
  uint64_t v34;
  id v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v1 = a1;
  v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_1DC409850();
    swift_bridgeObjectRelease();
    if (v5)
    {
LABEL_3:
      sub_1DC36DC6C();
      v3 = sub_1DC40970C();
      if (!v2)
        goto LABEL_4;
LABEL_8:
      swift_bridgeObjectRetain();
      v4 = sub_1DC409850();
      swift_bridgeObjectRelease();
      if (!v4)
        return;
      goto LABEL_9;
    }
  }
  else if (*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  v3 = MEMORY[0x1E0DEE9E8];
  if (v2)
    goto LABEL_8;
LABEL_4:
  v4 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v4)
    return;
LABEL_9:
  v6 = v3 + 56;
  v42 = v4;
  if ((v1 & 0xC000000000000001) != 0)
  {
    v7 = 0;
    v40 = v1;
    while (1)
    {
      while (1)
      {
        v8 = MEMORY[0x1DF0C9FBC](v7, v1);
        v9 = __OFADD__(v7++, 1);
        if (v9)
        {
          __break(1u);
          goto LABEL_36;
        }
        v10 = v8;
        v11 = sub_1DC4093B8();
        v12 = -1 << *(_BYTE *)(v3 + 32);
        v13 = v11 & ~v12;
        v14 = v13 >> 6;
        v15 = *(_QWORD *)(v6 + 8 * (v13 >> 6));
        v16 = 1 << v13;
        if (((1 << v13) & v15) != 0)
          break;
LABEL_20:
        *(_QWORD *)(v6 + 8 * v14) = v16 | v15;
        *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v13) = v10;
        v22 = *(_QWORD *)(v3 + 16);
        v9 = __OFADD__(v22, 1);
        v23 = v22 + 1;
        if (v9)
          goto LABEL_37;
        *(_QWORD *)(v3 + 16) = v23;
        if (v7 == v4)
          return;
      }
      sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3F940);
      v17 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v13);
      v18 = sub_1DC4093C4();

      if ((v18 & 1) == 0)
      {
        v19 = ~v12;
        while (1)
        {
          v13 = (v13 + 1) & v19;
          v14 = v13 >> 6;
          v15 = *(_QWORD *)(v6 + 8 * (v13 >> 6));
          v16 = 1 << v13;
          if ((v15 & (1 << v13)) == 0)
            break;
          v20 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v13);
          v21 = sub_1DC4093C4();

          if ((v21 & 1) != 0)
            goto LABEL_11;
        }
        v1 = v40;
        v4 = v42;
        goto LABEL_20;
      }
LABEL_11:
      swift_unknownObjectRelease();
      v1 = v40;
      v4 = v42;
      if (v7 == v42)
        return;
    }
  }
  v24 = 0;
  v39 = v1 + 32;
  v41 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v24 != v41)
  {
    v25 = *(id *)(v39 + 8 * v24);
    v26 = sub_1DC4093B8();
    v27 = -1 << *(_BYTE *)(v3 + 32);
    v28 = v26 & ~v27;
    v29 = v28 >> 6;
    v30 = *(_QWORD *)(v6 + 8 * (v28 >> 6));
    v31 = 1 << v28;
    if (((1 << v28) & v30) != 0)
    {
      sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3F940);
      v32 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v28);
      v33 = sub_1DC4093C4();

      if ((v33 & 1) != 0)
      {
LABEL_24:

        goto LABEL_25;
      }
      v34 = ~v27;
      while (1)
      {
        v28 = (v28 + 1) & v34;
        v29 = v28 >> 6;
        v30 = *(_QWORD *)(v6 + 8 * (v28 >> 6));
        v31 = 1 << v28;
        if ((v30 & (1 << v28)) == 0)
          break;
        v35 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v28);
        v36 = sub_1DC4093C4();

        if ((v36 & 1) != 0)
          goto LABEL_24;
      }
    }
    *(_QWORD *)(v6 + 8 * v29) = v31 | v30;
    *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v28) = v25;
    v37 = *(_QWORD *)(v3 + 16);
    v9 = __OFADD__(v37, 1);
    v38 = v37 + 1;
    if (v9)
      goto LABEL_38;
    *(_QWORD *)(v3 + 16) = v38;
LABEL_25:
    if (++v24 == v42)
      return;
  }
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
}

uint64_t sub_1DC369338(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  char *v23;
  uint64_t result;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;

  v2 = sub_1DC405938();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v33 = (char *)&v28 - v7;
  v8 = *(_QWORD *)(a1 + 16);
  if (v8)
  {
    sub_1DC36E0FC(0, &qword_1EDB3FC28, (uint64_t (*)(uint64_t))MEMORY[0x1E0DBA148], &qword_1EDB2A380, MEMORY[0x1E0DBA150]);
    v9 = sub_1DC40970C();
    v10 = 0;
    v32 = v9 + 56;
    v11 = *(unsigned __int8 *)(v3 + 80);
    v29 = v8;
    v30 = a1 + ((v11 + 32) & ~v11);
    v12 = *(_QWORD *)(v3 + 72);
    v13 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    while (1)
    {
      v31 = v10;
      v13(v33, v30 + v12 * v10, v2);
      sub_1DC080808(&qword_1EDB2A380, (uint64_t (*)(uint64_t))MEMORY[0x1E0DBA148], MEMORY[0x1E0DBA150]);
      v14 = sub_1DC4089B0();
      v15 = ~(-1 << *(_BYTE *)(v9 + 32));
      v16 = v14 & v15;
      v17 = (v14 & (unint64_t)v15) >> 6;
      v18 = *(_QWORD *)(v32 + 8 * v17);
      v19 = 1 << (v14 & v15);
      if ((v19 & v18) != 0)
      {
        do
        {
          v13(v5, *(_QWORD *)(v9 + 48) + v16 * v12, v2);
          sub_1DC080808((unint64_t *)&unk_1EDB2A388, (uint64_t (*)(uint64_t))MEMORY[0x1E0DBA148], MEMORY[0x1E0DBA158]);
          v20 = sub_1DC4089F8();
          v21 = v3;
          v22 = *(void (**)(char *, uint64_t))(v3 + 8);
          v22(v5, v2);
          if ((v20 & 1) != 0)
          {
            v22(v33, v2);
            v3 = v21;
            v8 = v29;
            goto LABEL_4;
          }
          v16 = (v16 + 1) & v15;
          v17 = v16 >> 6;
          v18 = *(_QWORD *)(v32 + 8 * (v16 >> 6));
          v19 = 1 << v16;
          v3 = v21;
        }
        while ((v18 & (1 << v16)) != 0);
        v8 = v29;
      }
      v23 = v33;
      *(_QWORD *)(v32 + 8 * v17) = v19 | v18;
      result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v9 + 48) + v16 * v12, v23, v2);
      v25 = *(_QWORD *)(v9 + 16);
      v26 = __OFADD__(v25, 1);
      v27 = v25 + 1;
      if (v26)
        break;
      *(_QWORD *)(v9 + 16) = v27;
LABEL_4:
      v10 = v31 + 1;
      if (v31 + 1 == v8)
        return v9;
    }
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E0DEE9E8];
  }
  return result;
}

unint64_t sub_1DC3695B8()
{
  unint64_t result;

  result = qword_1F0352790;
  if (!qword_1F0352790)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC42B44C, &type metadata for StocksActivity.StockFeed.Series.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F0352790);
  }
  return result;
}

uint64_t sub_1DC3695FC(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  result = *a1;
  if (!result)
  {
    v9 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF0D0];
    sub_1DC089DA4(255, &qword_1EDB3F630, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF0D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    v11 = v10;
    v12 = sub_1DC080808(a2, v9, a3);
    result = MEMORY[0x1DF0CAB8C](a4, v11, &v12);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1DC369698()
{
  unint64_t result;

  result = qword_1F03527B8;
  if (!qword_1F03527B8)
  {
    result = MEMORY[0x1DF0CAB8C](&protocol conformance descriptor for StocksActivityType, &type metadata for StocksActivityType);
    atomic_store(result, (unint64_t *)&qword_1F03527B8);
  }
  return result;
}

unint64_t sub_1DC3696E0()
{
  unint64_t result;

  result = qword_1EDB275D0;
  if (!qword_1EDB275D0)
  {
    result = MEMORY[0x1DF0CAB8C](&protocol conformance descriptor for StocksActivityType, &type metadata for StocksActivityType);
    atomic_store(result, (unint64_t *)&qword_1EDB275D0);
  }
  return result;
}

unint64_t sub_1DC369728()
{
  unint64_t result;

  result = qword_1EDB2B858;
  if (!qword_1EDB2B858)
  {
    result = MEMORY[0x1DF0CAB8C](&protocol conformance descriptor for StocksActivityType, &type metadata for StocksActivityType);
    atomic_store(result, (unint64_t *)&qword_1EDB2B858);
  }
  return result;
}

unint64_t sub_1DC369770()
{
  unint64_t result;

  result = qword_1F03527C0;
  if (!qword_1F03527C0)
  {
    result = MEMORY[0x1DF0CAB8C](&protocol conformance descriptor for StocksActivity.Options, &type metadata for StocksActivity.Options);
    atomic_store(result, (unint64_t *)&qword_1F03527C0);
  }
  return result;
}

unint64_t sub_1DC3697B8()
{
  unint64_t result;

  result = qword_1F03527C8;
  if (!qword_1F03527C8)
  {
    result = MEMORY[0x1DF0CAB8C](&protocol conformance descriptor for StocksActivity.Options, &type metadata for StocksActivity.Options);
    atomic_store(result, (unint64_t *)&qword_1F03527C8);
  }
  return result;
}

unint64_t sub_1DC369800()
{
  unint64_t result;

  result = qword_1F03527D0;
  if (!qword_1F03527D0)
  {
    result = MEMORY[0x1DF0CAB8C](&protocol conformance descriptor for StocksActivity.Options, &type metadata for StocksActivity.Options);
    atomic_store(result, (unint64_t *)&qword_1F03527D0);
  }
  return result;
}

unint64_t sub_1DC369848()
{
  unint64_t result;

  result = qword_1F03527D8;
  if (!qword_1F03527D8)
  {
    result = MEMORY[0x1DF0CAB8C](&protocol conformance descriptor for StocksActivity.Options, &type metadata for StocksActivity.Options);
    atomic_store(result, (unint64_t *)&qword_1F03527D8);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for StocksActivityType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFB)
    goto LABEL_17;
  if (a2 + 5 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 5) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 5;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 5;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 5;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 6;
  v8 = v6 - 6;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for StocksActivityType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1DC369968 + 4 * byte_1DC42ADFA[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1DC36999C + 4 * byte_1DC42ADF5[v4]))();
}

uint64_t sub_1DC36999C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC3699A4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC3699ACLL);
  return result;
}

uint64_t sub_1DC3699B8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC3699C0);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1DC3699C4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC3699CC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StocksActivityType()
{
  return &type metadata for StocksActivityType;
}

char *initializeBufferWithCopyOfBuffer for StocksActivity(char *a1, char **a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  char *v7;
  char *v8;
  char *v9;
  char *v10;
  char *result;
  uint64_t v12;
  int EnumCaseMultiPayload;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(char *, uint64_t, uint64_t);
  char *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  void (*v70)(char *, uint64_t, uint64_t);
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  __int128 v77;
  char *__dst;
  uint64_t v79;
  unsigned int (*v80)(char *, uint64_t, uint64_t);

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v10 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = &v10[(v6 + 16) & ~(unint64_t)v6];
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v7 = a2[1];
        *(_QWORD *)a1 = *a2;
        *((_QWORD *)a1 + 1) = v7;
        *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
        v8 = a2[4];
        v9 = a2[5];
        *((_QWORD *)a1 + 4) = v8;
        *((_QWORD *)a1 + 5) = v9;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        return a1;
      case 1u:
        v12 = type metadata accessor for ForYouSectionDescriptor();
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 2)
        {
          v58 = sub_1DC407300();
          (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v58 - 8) + 16))(a1, a2, v58);
          swift_storeEnumTagMultiPayload();
        }
        else if (EnumCaseMultiPayload == 1)
        {
          v59 = a2[1];
          *(_QWORD *)a1 = *a2;
          *((_QWORD *)a1 + 1) = v59;
          swift_bridgeObjectRetain();
          swift_storeEnumTagMultiPayload();
        }
        else if (EnumCaseMultiPayload)
        {
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
        }
        else
        {
          v14 = sub_1DC4010E4();
          (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(a1, a2, v14);
          swift_storeEnumTagMultiPayload();
        }
        sub_1DC175964(0, (unint64_t *)&qword_1EDB34880, (void (*)(uint64_t))type metadata accessor for ForYouSectionDescriptor, (void (*)(uint64_t))MEMORY[0x1E0DBA2A8]);
        v61 = *(int *)(v60 + 48);
        v62 = &a1[v61];
        v63 = (uint64_t)a2 + v61;
        v64 = sub_1DC4059F8();
        (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 16))(v62, v63, v64);
        swift_storeEnumTagMultiPayload();
        return a1;
      case 2u:
        type metadata accessor for StocksActivity.StockFeed(0);
        v15 = swift_getEnumCaseMultiPayload();
        v16 = sub_1DC4010E4();
        (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(a1, a2, v16);
        if (v15 == 1)
        {
          v17 = type metadata accessor for StocksActivity.StockFeed.Series(0);
          *(_QWORD *)&a1[*(int *)(v17 + 20)] = *(char **)((char *)a2 + *(int *)(v17 + 20));
          sub_1DC3678C0(0, (unint64_t *)&qword_1EDB275E0, (void (*)(uint64_t))type metadata accessor for StocksActivity.StockFeed.Series);
          *(_QWORD *)&a1[*(int *)(v18 + 48)] = *(char **)((char *)a2 + *(int *)(v18 + 48));
          swift_bridgeObjectRetain();
        }
        else
        {
          sub_1DC3678C0(0, (unint64_t *)&qword_1EDB28DF0, (void (*)(uint64_t))MEMORY[0x1E0DAF0D0]);
          *(_QWORD *)&a1[*(int *)(v50 + 48)] = *(char **)((char *)a2 + *(int *)(v50 + 48));
        }
        goto LABEL_29;
      case 3u:
        v19 = a2[1];
        *(_QWORD *)a1 = *a2;
        *((_QWORD *)a1 + 1) = v19;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        return a1;
      case 4u:
        type metadata accessor for StocksActivity.Article(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          *(_QWORD *)a1 = *a2;
          swift_unknownObjectRetain();
        }
        else
        {
          sub_1DC401BB8();
          v51 = swift_getEnumCaseMultiPayload();
          *(_QWORD *)a1 = *a2;
          if (v51 == 1)
          {
            swift_retain();
          }
          else
          {
            sub_1DC175964(0, (unint64_t *)&qword_1EDB42670, (void (*)(uint64_t))MEMORY[0x1E0D57E30], (void (*)(uint64_t))MEMORY[0x1E0D57888]);
            v66 = *(int *)(v65 + 48);
            v67 = &a1[v66];
            v68 = (uint64_t)a2 + v66;
            v69 = sub_1DC40202C();
            v70 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v69 - 8) + 16);
            swift_retain();
            v70(v67, v68, v69);
          }
          swift_storeEnumTagMultiPayload();
          sub_1DC1446B4();
          *(_QWORD *)&a1[*(int *)(v71 + 48)] = *(char **)((char *)a2 + *(int *)(v71 + 48));
          v72 = *(int *)(v71 + 64);
          v73 = &a1[v72];
          v74 = (uint64_t)a2 + v72;
          v75 = *(uint64_t *)((char *)a2 + v72 + 24);
          if (v75)
          {
            v76 = *(_QWORD *)(v74 + 32);
            *((_QWORD *)v73 + 3) = v75;
            *((_QWORD *)v73 + 4) = v76;
            (**(void (***)(void))(v75 - 8))();
          }
          else
          {
            v77 = *(_OWORD *)(v74 + 16);
            *(_OWORD *)v73 = *(_OWORD *)v74;
            *((_OWORD *)v73 + 1) = v77;
            *((_QWORD *)v73 + 4) = *(_QWORD *)(v74 + 32);
          }
        }
LABEL_29:
        swift_storeEnumTagMultiPayload();
        swift_storeEnumTagMultiPayload();
        return a1;
      case 5u:
        v20 = sub_1DC3FFDD0();
        (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(a1, a2, v20);
        swift_storeEnumTagMultiPayload();
        return a1;
      case 6u:
        __asm { BR              X10 }
        return result;
      case 7u:
        v21 = a2[1];
        *(_QWORD *)a1 = *a2;
        *((_QWORD *)a1 + 1) = v21;
        *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
        v22 = a2[5];
        *((_QWORD *)a1 + 4) = a2[4];
        *((_QWORD *)a1 + 5) = v22;
        v23 = a2[7];
        *((_QWORD *)a1 + 6) = a2[6];
        *((_QWORD *)a1 + 7) = v23;
        *((_QWORD *)a1 + 8) = a2[8];
        v24 = type metadata accessor for CampaignRouteModel();
        v25 = *(int *)(v24 + 40);
        __dst = &a1[v25];
        v79 = v24;
        v26 = (char *)a2 + v25;
        v27 = sub_1DC403DA8();
        v28 = *(_QWORD *)(v27 - 8);
        v80 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v80(v26, 1, v27))
        {
          sub_1DC089DA4(0, (unint64_t *)&qword_1EDB299F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D61E10], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
          memcpy(__dst, v26, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v28 + 16))(__dst, v26, v27);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(__dst, 0, 1, v27);
        }
        v53 = (uint64_t)a2 + *(int *)(v79 + 44);
        *(_QWORD *)(swift_unknownObjectWeakCopyInit() + 8) = *(_QWORD *)(v53 + 8);
        swift_storeEnumTagMultiPayload();
        return a1;
      case 8u:
        v30 = (unint64_t)*a2;
        sub_1DC17766C(v30);
        *(_QWORD *)a1 = v30;
        swift_storeEnumTagMultiPayload();
        return a1;
      case 9u:
        if (*a2)
        {
          v31 = a2[1];
          *(_QWORD *)a1 = *a2;
          *((_QWORD *)a1 + 1) = v31;
          swift_retain();
        }
        else
        {
          *(_OWORD *)a1 = *(_OWORD *)a2;
        }
        goto LABEL_37;
      case 0xAu:
        v32 = sub_1DC4010E4();
        v33 = *(_QWORD *)(v32 - 8);
        if ((*(unsigned int (**)(char **, uint64_t, uint64_t))(v33 + 48))(a2, 1, v32))
        {
          sub_1DC089DA4(0, (unint64_t *)&qword_1EDB28DE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF0D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char **, uint64_t))(v33 + 16))(a1, a2, v32);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(a1, 0, 1, v32);
        }
        v54 = *(int *)(type metadata accessor for WatchlistCreationRouteModel() + 20);
        v55 = &a1[v54];
        v56 = (char **)((char *)a2 + v54);
        if (*v56)
        {
          v57 = v56[1];
          *(_QWORD *)v55 = *v56;
          *((_QWORD *)v55 + 1) = v57;
          swift_retain();
        }
        else
        {
          *(_OWORD *)v55 = *(_OWORD *)v56;
        }
LABEL_37:
        swift_storeEnumTagMultiPayload();
        break;
      case 0xBu:
        v35 = sub_1DC4010E4();
        v36 = *(_QWORD *)(v35 - 8);
        if ((*(unsigned int (**)(char **, uint64_t, uint64_t))(v36 + 48))(a2, 1, v35))
        {
          sub_1DC089DA4(0, (unint64_t *)&qword_1EDB28DE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF0D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char **, uint64_t))(v36 + 16))(a1, a2, v35);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(a1, 0, 1, v35);
        }
        sub_1DC17CCB0();
        *(_QWORD *)&a1[*(int *)(v52 + 48)] = *(char **)((char *)a2 + *(int *)(v52 + 48));
        swift_retain();
        swift_storeEnumTagMultiPayload();
        break;
      case 0xCu:
        v38 = *a2;
        *(_QWORD *)a1 = *a2;
        v39 = type metadata accessor for PreBuyFlowRouteModel();
        v40 = *(int *)(v39 + 20);
        v41 = &a1[v40];
        v42 = (uint64_t)a2 + v40;
        v43 = sub_1DC403BD4();
        v44 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 16);
        v45 = v38;
        v44(v41, v42, v43);
        v46 = *(int *)(v39 + 24);
        v47 = &a1[v46];
        v48 = (uint64_t)a2 + v46;
        v49 = sub_1DC403CA0();
        (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 16))(v47, v48, v49);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
        break;
    }
  }
  return a1;
}

void destroy for StocksActivity(uint64_t a1)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int EnumCaseMultiPayload;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      swift_bridgeObjectRelease();
      goto LABEL_5;
    case 1u:
      type metadata accessor for ForYouSectionDescriptor();
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        v14 = sub_1DC407300();
      }
      else
      {
        if (EnumCaseMultiPayload == 1)
        {
          swift_bridgeObjectRelease();
          goto LABEL_35;
        }
        if (EnumCaseMultiPayload)
          goto LABEL_35;
        v14 = sub_1DC4010E4();
      }
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(a1, v14);
LABEL_35:
      sub_1DC175964(0, (unint64_t *)&qword_1EDB34880, (void (*)(uint64_t))type metadata accessor for ForYouSectionDescriptor, (void (*)(uint64_t))MEMORY[0x1E0DBA2A8]);
      a1 += *(int *)(v23 + 48);
      v12 = sub_1DC4059F8();
LABEL_36:
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(a1, v12);
      return;
    case 2u:
      type metadata accessor for StocksActivity.StockFeed(0);
      v2 = swift_getEnumCaseMultiPayload();
      v3 = sub_1DC4010E4();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
      if (v2 != 1)
        return;
      type metadata accessor for StocksActivity.StockFeed.Series(0);
LABEL_5:
      swift_bridgeObjectRelease();
      return;
    case 3u:
      goto LABEL_5;
    case 4u:
      type metadata accessor for StocksActivity.Article(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        swift_unknownObjectRelease();
      }
      else
      {
        sub_1DC401BB8();
        v17 = swift_getEnumCaseMultiPayload();
        swift_release();
        if (v17 != 1)
        {
          sub_1DC175964(0, (unint64_t *)&qword_1EDB42670, (void (*)(uint64_t))MEMORY[0x1E0D57E30], (void (*)(uint64_t))MEMORY[0x1E0D57888]);
          v19 = a1 + *(int *)(v18 + 48);
          v20 = sub_1DC40202C();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
        }
        sub_1DC1446B4();
        v22 = a1 + *(int *)(v21 + 64);
        if (*(_QWORD *)(v22 + 24))
LABEL_38:
          __swift_destroy_boxed_opaque_existential_1(v22);
      }
      return;
    case 5u:
      v12 = sub_1DC3FFDD0();
      goto LABEL_36;
    case 6u:
      switch(*(_BYTE *)(a1 + 40))
      {
        case 0:
        case 3:
          goto LABEL_27;
        case 1:
          v22 = a1;
          goto LABEL_38;
        case 2:

          break;
        default:
          return;
      }
      return;
    case 7u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v4 = a1 + *(int *)(type metadata accessor for CampaignRouteModel() + 40);
      v5 = sub_1DC403DA8();
      v6 = *(_QWORD *)(v5 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
        (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
      swift_unknownObjectWeakDestroy();
      return;
    case 8u:
      sub_1DC17769C(*(_QWORD *)a1);
      return;
    case 9u:
      if (*(_QWORD *)a1)
        goto LABEL_27;
      return;
    case 0xAu:
      v15 = sub_1DC4010E4();
      v16 = *(_QWORD *)(v15 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(a1, 1, v15))
        (*(void (**)(uint64_t, uint64_t))(v16 + 8))(a1, v15);
      if (*(_QWORD *)(a1 + *(int *)(type metadata accessor for WatchlistCreationRouteModel() + 20)))
        goto LABEL_27;
      return;
    case 0xBu:
      v7 = sub_1DC4010E4();
      v8 = *(_QWORD *)(v7 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(a1, 1, v7))
        (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a1, v7);
      sub_1DC17CCB0();
LABEL_27:
      swift_release();
      return;
    case 0xCu:

      v9 = type metadata accessor for PreBuyFlowRouteModel();
      v10 = a1 + *(int *)(v9 + 20);
      v11 = sub_1DC403BD4();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
      a1 += *(int *)(v9 + 24);
      v12 = sub_1DC403CA0();
      goto LABEL_36;
    default:
      return;
  }
}

uint64_t initializeWithCopy for StocksActivity(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int EnumCaseMultiPayload;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  const void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(uint64_t, uint64_t, uint64_t);
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(uint64_t, uint64_t, uint64_t);
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  __int128 v74;
  uint64_t result;
  void *__dst;
  uint64_t v77;
  unsigned int (*v78)(const void *, uint64_t, uint64_t);

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v6 = *(_QWORD *)(a2 + 8);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = v6;
      *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
      v7 = *(_QWORD *)(a2 + 32);
      v8 = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 32) = v7;
      *(_QWORD *)(a1 + 40) = v8;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_46;
    case 1u:
      v9 = type metadata accessor for ForYouSectionDescriptor();
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        v55 = sub_1DC407300();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 16))(a1, a2, v55);
        swift_storeEnumTagMultiPayload();
      }
      else if (EnumCaseMultiPayload == 1)
      {
        v56 = *(_QWORD *)(a2 + 8);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = v56;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
      }
      else if (EnumCaseMultiPayload)
      {
        memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
      }
      else
      {
        v11 = sub_1DC4010E4();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
        swift_storeEnumTagMultiPayload();
      }
      sub_1DC175964(0, (unint64_t *)&qword_1EDB34880, (void (*)(uint64_t))type metadata accessor for ForYouSectionDescriptor, (void (*)(uint64_t))MEMORY[0x1E0DBA2A8]);
      v58 = *(int *)(v57 + 48);
      v59 = a1 + v58;
      v60 = a2 + v58;
      v61 = sub_1DC4059F8();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 16))(v59, v60, v61);
      goto LABEL_46;
    case 2u:
      type metadata accessor for StocksActivity.StockFeed(0);
      v12 = swift_getEnumCaseMultiPayload();
      v13 = sub_1DC4010E4();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(a1, a2, v13);
      if (v12 == 1)
      {
        v14 = type metadata accessor for StocksActivity.StockFeed.Series(0);
        *(_QWORD *)(a1 + *(int *)(v14 + 20)) = *(_QWORD *)(a2 + *(int *)(v14 + 20));
        sub_1DC3678C0(0, (unint64_t *)&qword_1EDB275E0, (void (*)(uint64_t))type metadata accessor for StocksActivity.StockFeed.Series);
        *(_QWORD *)(a1 + *(int *)(v15 + 48)) = *(_QWORD *)(a2 + *(int *)(v15 + 48));
        swift_bridgeObjectRetain();
      }
      else
      {
        sub_1DC3678C0(0, (unint64_t *)&qword_1EDB28DF0, (void (*)(uint64_t))MEMORY[0x1E0DAF0D0]);
        *(_QWORD *)(a1 + *(int *)(v47 + 48)) = *(_QWORD *)(a2 + *(int *)(v47 + 48));
      }
      goto LABEL_45;
    case 3u:
      v16 = *(_QWORD *)(a2 + 8);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = v16;
      swift_bridgeObjectRetain();
      goto LABEL_46;
    case 4u:
      type metadata accessor for StocksActivity.Article(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *(_QWORD *)a1 = *(_QWORD *)a2;
        swift_unknownObjectRetain();
      }
      else
      {
        sub_1DC401BB8();
        v48 = swift_getEnumCaseMultiPayload();
        *(_QWORD *)a1 = *(_QWORD *)a2;
        if (v48 == 1)
        {
          swift_retain();
        }
        else
        {
          sub_1DC175964(0, (unint64_t *)&qword_1EDB42670, (void (*)(uint64_t))MEMORY[0x1E0D57E30], (void (*)(uint64_t))MEMORY[0x1E0D57888]);
          v63 = *(int *)(v62 + 48);
          v64 = a1 + v63;
          v65 = a2 + v63;
          v66 = sub_1DC40202C();
          v67 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 16);
          swift_retain();
          v67(v64, v65, v66);
        }
        swift_storeEnumTagMultiPayload();
        sub_1DC1446B4();
        *(_QWORD *)(a1 + *(int *)(v68 + 48)) = *(_QWORD *)(a2 + *(int *)(v68 + 48));
        v69 = *(int *)(v68 + 64);
        v70 = a1 + v69;
        v71 = a2 + v69;
        v72 = *(_QWORD *)(a2 + v69 + 24);
        if (v72)
        {
          v73 = *(_QWORD *)(v71 + 32);
          *(_QWORD *)(v70 + 24) = v72;
          *(_QWORD *)(v70 + 32) = v73;
          (**(void (***)(void))(v72 - 8))();
        }
        else
        {
          v74 = *(_OWORD *)(v71 + 16);
          *(_OWORD *)v70 = *(_OWORD *)v71;
          *(_OWORD *)(v70 + 16) = v74;
          *(_QWORD *)(v70 + 32) = *(_QWORD *)(v71 + 32);
        }
      }
LABEL_45:
      swift_storeEnumTagMultiPayload();
      goto LABEL_46;
    case 5u:
      v17 = sub_1DC3FFDD0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(a1, a2, v17);
      goto LABEL_46;
    case 6u:
      __asm { BR              X10 }
      return result;
    case 7u:
      v18 = *(_QWORD *)(a2 + 8);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = v18;
      *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
      v19 = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 40) = v19;
      v20 = *(_QWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 56) = v20;
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      v21 = type metadata accessor for CampaignRouteModel();
      v22 = *(int *)(v21 + 40);
      __dst = (void *)(a1 + v22);
      v77 = v21;
      v23 = (const void *)(a2 + v22);
      v24 = sub_1DC403DA8();
      v25 = *(_QWORD *)(v24 - 8);
      v78 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v25 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v78(v23, 1, v24))
      {
        sub_1DC089DA4(0, (unint64_t *)&qword_1EDB299F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D61E10], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(__dst, v23, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v25 + 16))(__dst, v23, v24);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v25 + 56))(__dst, 0, 1, v24);
      }
      v50 = a2 + *(int *)(v77 + 44);
      *(_QWORD *)(swift_unknownObjectWeakCopyInit() + 8) = *(_QWORD *)(v50 + 8);
      goto LABEL_46;
    case 8u:
      v27 = *(_QWORD *)a2;
      sub_1DC17766C(v27);
      *(_QWORD *)a1 = v27;
      goto LABEL_46;
    case 9u:
      if (*(_QWORD *)a2)
      {
        v28 = *(_QWORD *)(a2 + 8);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = v28;
        swift_retain();
      }
      else
      {
        *(_OWORD *)a1 = *(_OWORD *)a2;
      }
      goto LABEL_46;
    case 0xAu:
      v29 = sub_1DC4010E4();
      v30 = *(_QWORD *)(v29 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v30 + 48))(a2, 1, v29))
      {
        sub_1DC089DA4(0, (unint64_t *)&qword_1EDB28DE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF0D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 16))(a1, a2, v29);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v30 + 56))(a1, 0, 1, v29);
      }
      v51 = *(int *)(type metadata accessor for WatchlistCreationRouteModel() + 20);
      v52 = (_QWORD *)(a1 + v51);
      v53 = (_QWORD *)(a2 + v51);
      if (*v53)
      {
        v54 = v53[1];
        *v52 = *v53;
        v52[1] = v54;
        swift_retain();
      }
      else
      {
        *(_OWORD *)v52 = *(_OWORD *)v53;
      }
      goto LABEL_46;
    case 0xBu:
      v32 = sub_1DC4010E4();
      v33 = *(_QWORD *)(v32 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v33 + 48))(a2, 1, v32))
      {
        sub_1DC089DA4(0, (unint64_t *)&qword_1EDB28DE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF0D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v33 + 16))(a1, a2, v32);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v33 + 56))(a1, 0, 1, v32);
      }
      sub_1DC17CCB0();
      *(_QWORD *)(a1 + *(int *)(v49 + 48)) = *(_QWORD *)(a2 + *(int *)(v49 + 48));
      swift_retain();
      goto LABEL_46;
    case 0xCu:
      v35 = *(void **)a2;
      *(_QWORD *)a1 = *(_QWORD *)a2;
      v36 = type metadata accessor for PreBuyFlowRouteModel();
      v37 = *(int *)(v36 + 20);
      v38 = a1 + v37;
      v39 = a2 + v37;
      v40 = sub_1DC403BD4();
      v41 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 16);
      v42 = v35;
      v41(v38, v39, v40);
      v43 = *(int *)(v36 + 24);
      v44 = a1 + v43;
      v45 = a2 + v43;
      v46 = sub_1DC403CA0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 16))(v44, v45, v46);
LABEL_46:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

unint64_t *assignWithCopy for StocksActivity(unint64_t *a1, unint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  void (*v34)(char *, char *, uint64_t);
  id v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  void (*v59)(char *, char *, uint64_t);
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  __int128 v65;
  __int128 v66;
  unint64_t *result;
  char *__dst;
  uint64_t v69;
  unsigned int (*v70)(char *, uint64_t, uint64_t);

  if (a1 != a2)
  {
    sub_1DC0926D8((uint64_t)a1, type metadata accessor for StocksActivity);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *a1 = *a2;
        a1[1] = a2[1];
        *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
        a1[4] = a2[4];
        a1[5] = a2[5];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_47;
      case 1u:
        v6 = type metadata accessor for ForYouSectionDescriptor();
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 2)
        {
          v48 = sub_1DC407300();
          (*(void (**)(unint64_t *, unint64_t *, uint64_t))(*(_QWORD *)(v48 - 8) + 16))(a1, a2, v48);
          swift_storeEnumTagMultiPayload();
        }
        else if (EnumCaseMultiPayload == 1)
        {
          *a1 = *a2;
          a1[1] = a2[1];
          swift_bridgeObjectRetain();
          swift_storeEnumTagMultiPayload();
        }
        else if (EnumCaseMultiPayload)
        {
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
        }
        else
        {
          v8 = sub_1DC4010E4();
          (*(void (**)(unint64_t *, unint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
          swift_storeEnumTagMultiPayload();
        }
        sub_1DC175964(0, (unint64_t *)&qword_1EDB34880, (void (*)(uint64_t))type metadata accessor for ForYouSectionDescriptor, (void (*)(uint64_t))MEMORY[0x1E0DBA2A8]);
        v50 = *(int *)(v49 + 48);
        v51 = (char *)a1 + v50;
        v52 = (char *)a2 + v50;
        v53 = sub_1DC4059F8();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v53 - 8) + 16))(v51, v52, v53);
        goto LABEL_47;
      case 2u:
        type metadata accessor for StocksActivity.StockFeed(0);
        v9 = swift_getEnumCaseMultiPayload();
        v10 = sub_1DC4010E4();
        (*(void (**)(unint64_t *, unint64_t *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
        if (v9 == 1)
        {
          v11 = type metadata accessor for StocksActivity.StockFeed.Series(0);
          *(unint64_t *)((char *)a1 + *(int *)(v11 + 20)) = *(unint64_t *)((char *)a2 + *(int *)(v11 + 20));
          sub_1DC3678C0(0, (unint64_t *)&qword_1EDB275E0, (void (*)(uint64_t))type metadata accessor for StocksActivity.StockFeed.Series);
          *(unint64_t *)((char *)a1 + *(int *)(v12 + 48)) = *(unint64_t *)((char *)a2 + *(int *)(v12 + 48));
          swift_bridgeObjectRetain();
        }
        else
        {
          sub_1DC3678C0(0, (unint64_t *)&qword_1EDB28DF0, (void (*)(uint64_t))MEMORY[0x1E0DAF0D0]);
          *(unint64_t *)((char *)a1 + *(int *)(v40 + 48)) = *(unint64_t *)((char *)a2 + *(int *)(v40 + 48));
        }
        goto LABEL_46;
      case 3u:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        goto LABEL_47;
      case 4u:
        type metadata accessor for StocksActivity.Article(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          *a1 = *a2;
          swift_unknownObjectRetain();
        }
        else
        {
          sub_1DC401BB8();
          v41 = swift_getEnumCaseMultiPayload();
          *a1 = *a2;
          if (v41 == 1)
          {
            swift_retain();
          }
          else
          {
            sub_1DC175964(0, (unint64_t *)&qword_1EDB42670, (void (*)(uint64_t))MEMORY[0x1E0D57E30], (void (*)(uint64_t))MEMORY[0x1E0D57888]);
            v55 = *(int *)(v54 + 48);
            v56 = (char *)a1 + v55;
            v57 = (char *)a2 + v55;
            v58 = sub_1DC40202C();
            v59 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v58 - 8) + 16);
            swift_retain();
            v59(v56, v57, v58);
          }
          swift_storeEnumTagMultiPayload();
          sub_1DC1446B4();
          *(unint64_t *)((char *)a1 + *(int *)(v60 + 48)) = *(unint64_t *)((char *)a2 + *(int *)(v60 + 48));
          v61 = *(int *)(v60 + 64);
          v62 = (char *)a1 + v61;
          v63 = (char *)a2 + v61;
          v64 = *(unint64_t *)((char *)a2 + v61 + 24);
          if (v64)
          {
            *((_QWORD *)v62 + 3) = v64;
            *((_QWORD *)v62 + 4) = *((_QWORD *)v63 + 4);
            (**(void (***)(void))(v64 - 8))();
          }
          else
          {
            v65 = *(_OWORD *)v63;
            v66 = *((_OWORD *)v63 + 1);
            *((_QWORD *)v62 + 4) = *((_QWORD *)v63 + 4);
            *(_OWORD *)v62 = v65;
            *((_OWORD *)v62 + 1) = v66;
          }
        }
LABEL_46:
        swift_storeEnumTagMultiPayload();
        goto LABEL_47;
      case 5u:
        v13 = sub_1DC3FFDD0();
        (*(void (**)(unint64_t *, unint64_t *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(a1, a2, v13);
        goto LABEL_47;
      case 6u:
        __asm { BR              X10 }
        return result;
      case 7u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        a1[4] = a2[4];
        a1[5] = a2[5];
        a1[6] = a2[6];
        a1[7] = a2[7];
        a1[8] = a2[8];
        v14 = type metadata accessor for CampaignRouteModel();
        v15 = *(int *)(v14 + 40);
        __dst = (char *)a1 + v15;
        v69 = v14;
        v16 = (char *)a2 + v15;
        v17 = sub_1DC403DA8();
        v18 = *(_QWORD *)(v17 - 8);
        v70 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v70(v16, 1, v17))
        {
          sub_1DC089DA4(0, (unint64_t *)&qword_1EDB299F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D61E10], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
          memcpy(__dst, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v18 + 16))(__dst, v16, v17);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(__dst, 0, 1, v17);
        }
        v43 = (char *)a2 + *(int *)(v69 + 44);
        *(_QWORD *)(swift_unknownObjectWeakCopyInit() + 8) = *((_QWORD *)v43 + 1);
        goto LABEL_47;
      case 8u:
        v20 = *a2;
        sub_1DC17766C(v20);
        *a1 = v20;
        goto LABEL_47;
      case 9u:
        if (*a2)
        {
          v21 = a2[1];
          *a1 = *a2;
          a1[1] = v21;
          swift_retain();
        }
        else
        {
          *(_OWORD *)a1 = *(_OWORD *)a2;
        }
        goto LABEL_47;
      case 0xAu:
        v22 = sub_1DC4010E4();
        v23 = *(_QWORD *)(v22 - 8);
        if ((*(unsigned int (**)(unint64_t *, uint64_t, uint64_t))(v23 + 48))(a2, 1, v22))
        {
          sub_1DC089DA4(0, (unint64_t *)&qword_1EDB28DE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF0D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
        }
        else
        {
          (*(void (**)(unint64_t *, unint64_t *, uint64_t))(v23 + 16))(a1, a2, v22);
          (*(void (**)(unint64_t *, _QWORD, uint64_t, uint64_t))(v23 + 56))(a1, 0, 1, v22);
        }
        v44 = *(int *)(type metadata accessor for WatchlistCreationRouteModel() + 20);
        v45 = (unint64_t *)((char *)a1 + v44);
        v46 = (unint64_t *)((char *)a2 + v44);
        if (*v46)
        {
          v47 = v46[1];
          *v45 = *v46;
          v45[1] = v47;
          swift_retain();
        }
        else
        {
          *(_OWORD *)v45 = *(_OWORD *)v46;
        }
        goto LABEL_47;
      case 0xBu:
        v25 = sub_1DC4010E4();
        v26 = *(_QWORD *)(v25 - 8);
        if ((*(unsigned int (**)(unint64_t *, uint64_t, uint64_t))(v26 + 48))(a2, 1, v25))
        {
          sub_1DC089DA4(0, (unint64_t *)&qword_1EDB28DE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF0D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
        }
        else
        {
          (*(void (**)(unint64_t *, unint64_t *, uint64_t))(v26 + 16))(a1, a2, v25);
          (*(void (**)(unint64_t *, _QWORD, uint64_t, uint64_t))(v26 + 56))(a1, 0, 1, v25);
        }
        sub_1DC17CCB0();
        *(unint64_t *)((char *)a1 + *(int *)(v42 + 48)) = *(unint64_t *)((char *)a2 + *(int *)(v42 + 48));
        swift_retain();
        goto LABEL_47;
      case 0xCu:
        v28 = (void *)*a2;
        *a1 = *a2;
        v29 = type metadata accessor for PreBuyFlowRouteModel();
        v30 = *(int *)(v29 + 20);
        v31 = (char *)a1 + v30;
        v32 = (char *)a2 + v30;
        v33 = sub_1DC403BD4();
        v34 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 16);
        v35 = v28;
        v34(v31, v32, v33);
        v36 = *(int *)(v29 + 24);
        v37 = (char *)a1 + v36;
        v38 = (char *)a2 + v36;
        v39 = sub_1DC403CA0();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v37, v38, v39);
LABEL_47:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

_QWORD *initializeWithTake for StocksActivity(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  __int128 v60;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      v6 = type metadata accessor for ForYouSectionDescriptor();
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        v45 = sub_1DC407300();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v45 - 8) + 32))(a1, a2, v45);
        swift_storeEnumTagMultiPayload();
      }
      else if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
      }
      else
      {
        v8 = sub_1DC4010E4();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
        swift_storeEnumTagMultiPayload();
      }
      sub_1DC175964(0, (unint64_t *)&qword_1EDB34880, (void (*)(uint64_t))type metadata accessor for ForYouSectionDescriptor, (void (*)(uint64_t))MEMORY[0x1E0DBA2A8]);
      v47 = *(int *)(v46 + 48);
      v48 = (char *)a1 + v47;
      v49 = (char *)a2 + v47;
      v50 = sub_1DC4059F8();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v50 - 8) + 32))(v48, v49, v50);
      goto LABEL_36;
    case 2u:
      type metadata accessor for StocksActivity.StockFeed(0);
      v9 = swift_getEnumCaseMultiPayload();
      v10 = sub_1DC4010E4();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(a1, a2, v10);
      if (v9 == 1)
      {
        v11 = type metadata accessor for StocksActivity.StockFeed.Series(0);
        *(_QWORD *)((char *)a1 + *(int *)(v11 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v11 + 20));
        sub_1DC3678C0(0, (unint64_t *)&qword_1EDB275E0, (void (*)(uint64_t))type metadata accessor for StocksActivity.StockFeed.Series);
      }
      else
      {
        sub_1DC3678C0(0, (unint64_t *)&qword_1EDB28DF0, (void (*)(uint64_t))MEMORY[0x1E0DAF0D0]);
      }
      *(_QWORD *)((char *)a1 + *(int *)(v12 + 48)) = *(_QWORD *)((char *)a2 + *(int *)(v12 + 48));
      swift_storeEnumTagMultiPayload();
      goto LABEL_36;
    case 4u:
      v13 = type metadata accessor for StocksActivity.Article(0);
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      }
      else
      {
        v37 = sub_1DC401BB8();
        if (swift_getEnumCaseMultiPayload())
        {
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
        }
        else
        {
          *a1 = *a2;
          sub_1DC175964(0, (unint64_t *)&qword_1EDB42670, (void (*)(uint64_t))MEMORY[0x1E0D57E30], (void (*)(uint64_t))MEMORY[0x1E0D57888]);
          v52 = *(int *)(v51 + 48);
          v53 = (char *)a1 + v52;
          v54 = (char *)a2 + v52;
          v55 = sub_1DC40202C();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 32))(v53, v54, v55);
          swift_storeEnumTagMultiPayload();
        }
        sub_1DC1446B4();
        *(_QWORD *)((char *)a1 + *(int *)(v56 + 48)) = *(_QWORD *)((char *)a2 + *(int *)(v56 + 48));
        v57 = *(int *)(v56 + 64);
        v58 = (char *)a1 + v57;
        v59 = (char *)a2 + v57;
        *((_QWORD *)v58 + 4) = *((_QWORD *)v59 + 4);
        v60 = *((_OWORD *)v59 + 1);
        *(_OWORD *)v58 = *(_OWORD *)v59;
        *((_OWORD *)v58 + 1) = v60;
        swift_storeEnumTagMultiPayload();
      }
      goto LABEL_36;
    case 5u:
      v14 = sub_1DC3FFDD0();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(a1, a2, v14);
      goto LABEL_36;
    case 7u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      a1[2] = a2[2];
      *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 3);
      *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
      *(_OWORD *)(a1 + 7) = *(_OWORD *)(a2 + 7);
      v15 = type metadata accessor for CampaignRouteModel();
      v16 = *(int *)(v15 + 40);
      v17 = (char *)a1 + v16;
      v18 = (char *)a2 + v16;
      v19 = sub_1DC403DA8();
      v20 = *(_QWORD *)(v19 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
      {
        sub_1DC089DA4(0, (unint64_t *)&qword_1EDB299F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D61E10], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v17, v18, v19);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
      }
      v38 = (char *)a2 + *(int *)(v15 + 44);
      *(_QWORD *)(swift_unknownObjectWeakTakeInit() + 8) = *((_QWORD *)v38 + 1);
      goto LABEL_36;
    case 0xAu:
      v22 = sub_1DC4010E4();
      v23 = *(_QWORD *)(v22 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v23 + 48))(a2, 1, v22))
      {
        sub_1DC089DA4(0, (unint64_t *)&qword_1EDB28DE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF0D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v23 + 32))(a1, a2, v22);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v23 + 56))(a1, 0, 1, v22);
      }
      v39 = *(int *)(type metadata accessor for WatchlistCreationRouteModel() + 20);
      v40 = (_QWORD *)((char *)a1 + v39);
      v41 = (_QWORD *)((char *)a2 + v39);
      v42 = *v41;
      if (*v41)
      {
        v43 = v41[1];
        *v40 = v42;
        v40[1] = v43;
      }
      else
      {
        *(_OWORD *)v40 = *(_OWORD *)v41;
      }
      goto LABEL_36;
    case 0xBu:
      v25 = sub_1DC4010E4();
      v26 = *(_QWORD *)(v25 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v26 + 48))(a2, 1, v25))
      {
        sub_1DC089DA4(0, (unint64_t *)&qword_1EDB28DE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF0D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v26 + 32))(a1, a2, v25);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v26 + 56))(a1, 0, 1, v25);
      }
      sub_1DC17CCB0();
      *(_QWORD *)((char *)a1 + *(int *)(v44 + 48)) = *(_QWORD *)((char *)a2 + *(int *)(v44 + 48));
      goto LABEL_36;
    case 0xCu:
      *a1 = *a2;
      v28 = type metadata accessor for PreBuyFlowRouteModel();
      v29 = *(int *)(v28 + 20);
      v30 = (char *)a1 + v29;
      v31 = (char *)a2 + v29;
      v32 = sub_1DC403BD4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 32))(v30, v31, v32);
      v33 = *(int *)(v28 + 24);
      v34 = (char *)a1 + v33;
      v35 = (char *)a2 + v33;
      v36 = sub_1DC403CA0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 32))(v34, v35, v36);
LABEL_36:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

_QWORD *assignWithTake for StocksActivity(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  __int128 v60;

  if (a1 != a2)
  {
    sub_1DC0926D8((uint64_t)a1, type metadata accessor for StocksActivity);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        v6 = type metadata accessor for ForYouSectionDescriptor();
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 2)
        {
          v45 = sub_1DC407300();
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v45 - 8) + 32))(a1, a2, v45);
          swift_storeEnumTagMultiPayload();
        }
        else if (EnumCaseMultiPayload)
        {
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
        }
        else
        {
          v8 = sub_1DC4010E4();
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
          swift_storeEnumTagMultiPayload();
        }
        sub_1DC175964(0, (unint64_t *)&qword_1EDB34880, (void (*)(uint64_t))type metadata accessor for ForYouSectionDescriptor, (void (*)(uint64_t))MEMORY[0x1E0DBA2A8]);
        v47 = *(int *)(v46 + 48);
        v48 = (char *)a1 + v47;
        v49 = (char *)a2 + v47;
        v50 = sub_1DC4059F8();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v50 - 8) + 32))(v48, v49, v50);
        goto LABEL_37;
      case 2u:
        type metadata accessor for StocksActivity.StockFeed(0);
        v9 = swift_getEnumCaseMultiPayload();
        v10 = sub_1DC4010E4();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(a1, a2, v10);
        if (v9 == 1)
        {
          v11 = type metadata accessor for StocksActivity.StockFeed.Series(0);
          *(_QWORD *)((char *)a1 + *(int *)(v11 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v11 + 20));
          sub_1DC3678C0(0, (unint64_t *)&qword_1EDB275E0, (void (*)(uint64_t))type metadata accessor for StocksActivity.StockFeed.Series);
        }
        else
        {
          sub_1DC3678C0(0, (unint64_t *)&qword_1EDB28DF0, (void (*)(uint64_t))MEMORY[0x1E0DAF0D0]);
        }
        *(_QWORD *)((char *)a1 + *(int *)(v12 + 48)) = *(_QWORD *)((char *)a2 + *(int *)(v12 + 48));
        swift_storeEnumTagMultiPayload();
        goto LABEL_37;
      case 4u:
        v13 = type metadata accessor for StocksActivity.Article(0);
        if (swift_getEnumCaseMultiPayload())
        {
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
        }
        else
        {
          v37 = sub_1DC401BB8();
          if (swift_getEnumCaseMultiPayload())
          {
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
          }
          else
          {
            *a1 = *a2;
            sub_1DC175964(0, (unint64_t *)&qword_1EDB42670, (void (*)(uint64_t))MEMORY[0x1E0D57E30], (void (*)(uint64_t))MEMORY[0x1E0D57888]);
            v52 = *(int *)(v51 + 48);
            v53 = (char *)a1 + v52;
            v54 = (char *)a2 + v52;
            v55 = sub_1DC40202C();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 32))(v53, v54, v55);
            swift_storeEnumTagMultiPayload();
          }
          sub_1DC1446B4();
          *(_QWORD *)((char *)a1 + *(int *)(v56 + 48)) = *(_QWORD *)((char *)a2 + *(int *)(v56 + 48));
          v57 = *(int *)(v56 + 64);
          v58 = (char *)a1 + v57;
          v59 = (char *)a2 + v57;
          *((_QWORD *)v58 + 4) = *((_QWORD *)v59 + 4);
          v60 = *((_OWORD *)v59 + 1);
          *(_OWORD *)v58 = *(_OWORD *)v59;
          *((_OWORD *)v58 + 1) = v60;
          swift_storeEnumTagMultiPayload();
        }
        goto LABEL_37;
      case 5u:
        v14 = sub_1DC3FFDD0();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(a1, a2, v14);
        goto LABEL_37;
      case 7u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        a1[2] = a2[2];
        *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 3);
        *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
        *(_OWORD *)(a1 + 7) = *(_OWORD *)(a2 + 7);
        v15 = type metadata accessor for CampaignRouteModel();
        v16 = *(int *)(v15 + 40);
        v17 = (char *)a1 + v16;
        v18 = (char *)a2 + v16;
        v19 = sub_1DC403DA8();
        v20 = *(_QWORD *)(v19 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
        {
          sub_1DC089DA4(0, (unint64_t *)&qword_1EDB299F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D61E10], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
          memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v17, v18, v19);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
        }
        v38 = (char *)a2 + *(int *)(v15 + 44);
        *(_QWORD *)(swift_unknownObjectWeakTakeInit() + 8) = *((_QWORD *)v38 + 1);
        goto LABEL_37;
      case 0xAu:
        v22 = sub_1DC4010E4();
        v23 = *(_QWORD *)(v22 - 8);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v23 + 48))(a2, 1, v22))
        {
          sub_1DC089DA4(0, (unint64_t *)&qword_1EDB28DE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF0D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
        }
        else
        {
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v23 + 32))(a1, a2, v22);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v23 + 56))(a1, 0, 1, v22);
        }
        v39 = *(int *)(type metadata accessor for WatchlistCreationRouteModel() + 20);
        v40 = (_QWORD *)((char *)a1 + v39);
        v41 = (_QWORD *)((char *)a2 + v39);
        v42 = *v41;
        if (*v41)
        {
          v43 = v41[1];
          *v40 = v42;
          v40[1] = v43;
        }
        else
        {
          *(_OWORD *)v40 = *(_OWORD *)v41;
        }
        goto LABEL_37;
      case 0xBu:
        v25 = sub_1DC4010E4();
        v26 = *(_QWORD *)(v25 - 8);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v26 + 48))(a2, 1, v25))
        {
          sub_1DC089DA4(0, (unint64_t *)&qword_1EDB28DE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF0D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
        }
        else
        {
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v26 + 32))(a1, a2, v25);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v26 + 56))(a1, 0, 1, v25);
        }
        sub_1DC17CCB0();
        *(_QWORD *)((char *)a1 + *(int *)(v44 + 48)) = *(_QWORD *)((char *)a2 + *(int *)(v44 + 48));
        goto LABEL_37;
      case 0xCu:
        *a1 = *a2;
        v28 = type metadata accessor for PreBuyFlowRouteModel();
        v29 = *(int *)(v28 + 20);
        v30 = (char *)a1 + v29;
        v31 = (char *)a2 + v29;
        v32 = sub_1DC403BD4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 32))(v30, v31, v32);
        v33 = *(int *)(v28 + 24);
        v34 = (char *)a1 + v33;
        v35 = (char *)a2 + v33;
        v36 = sub_1DC403CA0();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 32))(v34, v35, v36);
LABEL_37:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

ValueMetadata *type metadata accessor for StocksActivity.Options()
{
  return &type metadata for StocksActivity.Options;
}

uint64_t *initializeBufferWithCopyOfBuffer for StocksActivity.StockFeed(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v7 = sub_1DC4010E4();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    if (EnumCaseMultiPayload == 1)
    {
      v8 = type metadata accessor for StocksActivity.StockFeed.Series(0);
      *(uint64_t *)((char *)a1 + *(int *)(v8 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v8 + 20));
      sub_1DC3678C0(0, (unint64_t *)&qword_1EDB275E0, (void (*)(uint64_t))type metadata accessor for StocksActivity.StockFeed.Series);
      *(uint64_t *)((char *)a1 + *(int *)(v9 + 48)) = *(uint64_t *)((char *)a2 + *(int *)(v9 + 48));
      swift_bridgeObjectRetain();
    }
    else
    {
      sub_1DC3678C0(0, (unint64_t *)&qword_1EDB28DF0, (void (*)(uint64_t))MEMORY[0x1E0DAF0D0]);
      *(uint64_t *)((char *)a1 + *(int *)(v11 + 48)) = *(uint64_t *)((char *)a2 + *(int *)(v11 + 48));
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for StocksActivity.StockFeed(uint64_t a1)
{
  int EnumCaseMultiPayload;
  uint64_t v3;
  uint64_t result;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v3 = sub_1DC4010E4();
  result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  if (EnumCaseMultiPayload == 1)
  {
    type metadata accessor for StocksActivity.StockFeed.Series(0);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for StocksActivity.StockFeed(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v5 = sub_1DC4010E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a1, a2, v5);
  if (EnumCaseMultiPayload == 1)
  {
    v6 = type metadata accessor for StocksActivity.StockFeed.Series(0);
    *(_QWORD *)(a1 + *(int *)(v6 + 20)) = *(_QWORD *)(a2 + *(int *)(v6 + 20));
    sub_1DC3678C0(0, (unint64_t *)&qword_1EDB275E0, (void (*)(uint64_t))type metadata accessor for StocksActivity.StockFeed.Series);
    *(_QWORD *)(a1 + *(int *)(v7 + 48)) = *(_QWORD *)(a2 + *(int *)(v7 + 48));
    swift_bridgeObjectRetain();
  }
  else
  {
    sub_1DC3678C0(0, (unint64_t *)&qword_1EDB28DF0, (void (*)(uint64_t))MEMORY[0x1E0DAF0D0]);
    *(_QWORD *)(a1 + *(int *)(v8 + 48)) = *(_QWORD *)(a2 + *(int *)(v8 + 48));
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithCopy for StocksActivity.StockFeed(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (a1 != a2)
  {
    sub_1DC0926D8(a1, type metadata accessor for StocksActivity.StockFeed);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v5 = sub_1DC4010E4();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a1, a2, v5);
    if (EnumCaseMultiPayload == 1)
    {
      v6 = type metadata accessor for StocksActivity.StockFeed.Series(0);
      *(_QWORD *)(a1 + *(int *)(v6 + 20)) = *(_QWORD *)(a2 + *(int *)(v6 + 20));
      sub_1DC3678C0(0, (unint64_t *)&qword_1EDB275E0, (void (*)(uint64_t))type metadata accessor for StocksActivity.StockFeed.Series);
      *(_QWORD *)(a1 + *(int *)(v7 + 48)) = *(_QWORD *)(a2 + *(int *)(v7 + 48));
      swift_bridgeObjectRetain();
    }
    else
    {
      sub_1DC3678C0(0, (unint64_t *)&qword_1EDB28DF0, (void (*)(uint64_t))MEMORY[0x1E0DAF0D0]);
      *(_QWORD *)(a1 + *(int *)(v8 + 48)) = *(_QWORD *)(a2 + *(int *)(v8 + 48));
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t initializeWithTake for StocksActivity.StockFeed(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v5 = sub_1DC4010E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a1, a2, v5);
  if (EnumCaseMultiPayload == 1)
  {
    v6 = type metadata accessor for StocksActivity.StockFeed.Series(0);
    *(_QWORD *)(a1 + *(int *)(v6 + 20)) = *(_QWORD *)(a2 + *(int *)(v6 + 20));
    sub_1DC3678C0(0, (unint64_t *)&qword_1EDB275E0, (void (*)(uint64_t))type metadata accessor for StocksActivity.StockFeed.Series);
  }
  else
  {
    sub_1DC3678C0(0, (unint64_t *)&qword_1EDB28DF0, (void (*)(uint64_t))MEMORY[0x1E0DAF0D0]);
  }
  *(_QWORD *)(a1 + *(int *)(v7 + 48)) = *(_QWORD *)(a2 + *(int *)(v7 + 48));
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithTake for StocksActivity.StockFeed(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  if (a1 != a2)
  {
    sub_1DC0926D8(a1, type metadata accessor for StocksActivity.StockFeed);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v5 = sub_1DC4010E4();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a1, a2, v5);
    if (EnumCaseMultiPayload == 1)
    {
      v6 = type metadata accessor for StocksActivity.StockFeed.Series(0);
      *(_QWORD *)(a1 + *(int *)(v6 + 20)) = *(_QWORD *)(a2 + *(int *)(v6 + 20));
      sub_1DC3678C0(0, (unint64_t *)&qword_1EDB275E0, (void (*)(uint64_t))type metadata accessor for StocksActivity.StockFeed.Series);
    }
    else
    {
      sub_1DC3678C0(0, (unint64_t *)&qword_1EDB28DF0, (void (*)(uint64_t))MEMORY[0x1E0DAF0D0]);
    }
    *(_QWORD *)(a1 + *(int *)(v7 + 48)) = *(_QWORD *)(a2 + *(int *)(v7 + 48));
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t *initializeBufferWithCopyOfBuffer for StocksActivity.StockFeed.Series(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1DC4010E4();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t initializeWithCopy for StocksActivity.StockFeed.Series(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1DC4010E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for StocksActivity.StockFeed.Series(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1DC4010E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for StocksActivity.StockFeed.Series(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1DC4010E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for StocksActivity.StockFeed.Series(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1DC4010E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for StocksActivity.StockFeed.Series()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC36CCE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1DC4010E4();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for StocksActivity.StockFeed.Series()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC36CD70(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1DC4010E4();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for StocksActivity.Article(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v6 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v6 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      swift_unknownObjectRetain();
    }
    else
    {
      sub_1DC401BB8();
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      *a1 = *a2;
      if (EnumCaseMultiPayload == 1)
      {
        swift_retain();
      }
      else
      {
        sub_1DC175964(0, (unint64_t *)&qword_1EDB42670, (void (*)(uint64_t))MEMORY[0x1E0D57E30], (void (*)(uint64_t))MEMORY[0x1E0D57888]);
        v9 = *(int *)(v8 + 48);
        v10 = (char *)a1 + v9;
        v11 = (char *)a2 + v9;
        v12 = sub_1DC40202C();
        v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
        swift_retain();
        v13(v10, v11, v12);
      }
      swift_storeEnumTagMultiPayload();
      sub_1DC1446B4();
      *(uint64_t *)((char *)a1 + *(int *)(v14 + 48)) = *(uint64_t *)((char *)a2 + *(int *)(v14 + 48));
      v15 = *(int *)(v14 + 64);
      v16 = (char *)a1 + v15;
      v17 = (char *)a2 + v15;
      v18 = *(uint64_t *)((char *)a2 + v15 + 24);
      if (v18)
      {
        v19 = *((_QWORD *)v17 + 4);
        *((_QWORD *)v16 + 3) = v18;
        *((_QWORD *)v16 + 4) = v19;
        (**(void (***)(void))(v18 - 8))();
      }
      else
      {
        v20 = *((_OWORD *)v17 + 1);
        *(_OWORD *)v16 = *(_OWORD *)v17;
        *((_OWORD *)v16 + 1) = v20;
        *((_QWORD *)v16 + 4) = *((_QWORD *)v17 + 4);
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for StocksActivity.Article(uint64_t a1)
{
  uint64_t result;
  int EnumCaseMultiPayload;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  if (swift_getEnumCaseMultiPayload() == 1)
    return swift_unknownObjectRelease();
  sub_1DC401BB8();
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  swift_release();
  if (EnumCaseMultiPayload != 1)
  {
    sub_1DC175964(0, (unint64_t *)&qword_1EDB42670, (void (*)(uint64_t))MEMORY[0x1E0D57E30], (void (*)(uint64_t))MEMORY[0x1E0D57888]);
    v5 = a1 + *(int *)(v4 + 48);
    v6 = sub_1DC40202C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  }
  sub_1DC1446B4();
  result = a1 + *(int *)(v7 + 64);
  if (*(_QWORD *)(result + 24))
    return __swift_destroy_boxed_opaque_existential_1(result);
  return result;
}

_QWORD *initializeWithCopy for StocksActivity.Article(_QWORD *a1, _QWORD *a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *a1 = *a2;
    swift_unknownObjectRetain();
  }
  else
  {
    sub_1DC401BB8();
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    if (EnumCaseMultiPayload == 1)
    {
      swift_retain();
    }
    else
    {
      sub_1DC175964(0, (unint64_t *)&qword_1EDB42670, (void (*)(uint64_t))MEMORY[0x1E0D57E30], (void (*)(uint64_t))MEMORY[0x1E0D57888]);
      v6 = *(int *)(v5 + 48);
      v7 = (char *)a1 + v6;
      v8 = (char *)a2 + v6;
      v9 = sub_1DC40202C();
      v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
      swift_retain();
      v10(v7, v8, v9);
    }
    swift_storeEnumTagMultiPayload();
    sub_1DC1446B4();
    *(_QWORD *)((char *)a1 + *(int *)(v11 + 48)) = *(_QWORD *)((char *)a2 + *(int *)(v11 + 48));
    v12 = *(int *)(v11 + 64);
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    v15 = *(_QWORD *)((char *)a2 + v12 + 24);
    if (v15)
    {
      v16 = *((_QWORD *)v14 + 4);
      *((_QWORD *)v13 + 3) = v15;
      *((_QWORD *)v13 + 4) = v16;
      (**(void (***)(void))(v15 - 8))();
    }
    else
    {
      v17 = *((_OWORD *)v14 + 1);
      *(_OWORD *)v13 = *(_OWORD *)v14;
      *((_OWORD *)v13 + 1) = v17;
      *((_QWORD *)v13 + 4) = *((_QWORD *)v14 + 4);
    }
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *assignWithCopy for StocksActivity.Article(_QWORD *a1, _QWORD *a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;

  if (a1 != a2)
  {
    sub_1DC0926D8((uint64_t)a1, type metadata accessor for StocksActivity.Article);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      swift_unknownObjectRetain();
    }
    else
    {
      sub_1DC401BB8();
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      *a1 = *a2;
      if (EnumCaseMultiPayload == 1)
      {
        swift_retain();
      }
      else
      {
        sub_1DC175964(0, (unint64_t *)&qword_1EDB42670, (void (*)(uint64_t))MEMORY[0x1E0D57E30], (void (*)(uint64_t))MEMORY[0x1E0D57888]);
        v6 = *(int *)(v5 + 48);
        v7 = (char *)a1 + v6;
        v8 = (char *)a2 + v6;
        v9 = sub_1DC40202C();
        v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
        swift_retain();
        v10(v7, v8, v9);
      }
      swift_storeEnumTagMultiPayload();
      sub_1DC1446B4();
      *(_QWORD *)((char *)a1 + *(int *)(v11 + 48)) = *(_QWORD *)((char *)a2 + *(int *)(v11 + 48));
      v12 = *(int *)(v11 + 64);
      v13 = (char *)a1 + v12;
      v14 = (char *)a2 + v12;
      v15 = *(_QWORD *)((char *)a2 + v12 + 24);
      if (v15)
      {
        *((_QWORD *)v13 + 3) = v15;
        *((_QWORD *)v13 + 4) = *((_QWORD *)v14 + 4);
        (**(void (***)(void))(v15 - 8))();
      }
      else
      {
        v16 = *(_OWORD *)v14;
        v17 = *((_OWORD *)v14 + 1);
        *((_QWORD *)v13 + 4) = *((_QWORD *)v14 + 4);
        *(_OWORD *)v13 = v16;
        *((_OWORD *)v13 + 1) = v17;
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_QWORD *initializeWithTake for StocksActivity.Article(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  __int128 v16;

  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v6 = sub_1DC401BB8();
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
    else
    {
      *a1 = *a2;
      sub_1DC175964(0, (unint64_t *)&qword_1EDB42670, (void (*)(uint64_t))MEMORY[0x1E0D57E30], (void (*)(uint64_t))MEMORY[0x1E0D57888]);
      v8 = *(int *)(v7 + 48);
      v9 = (char *)a1 + v8;
      v10 = (char *)a2 + v8;
      v11 = sub_1DC40202C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
      swift_storeEnumTagMultiPayload();
    }
    sub_1DC1446B4();
    *(_QWORD *)((char *)a1 + *(int *)(v12 + 48)) = *(_QWORD *)((char *)a2 + *(int *)(v12 + 48));
    v13 = *(int *)(v12 + 64);
    v14 = (char *)a1 + v13;
    v15 = (char *)a2 + v13;
    *((_QWORD *)v14 + 4) = *((_QWORD *)v15 + 4);
    v16 = *((_OWORD *)v15 + 1);
    *(_OWORD *)v14 = *(_OWORD *)v15;
    *((_OWORD *)v14 + 1) = v16;
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_QWORD *assignWithTake for StocksActivity.Article(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  __int128 v16;

  if (a1 != a2)
  {
    sub_1DC0926D8((uint64_t)a1, type metadata accessor for StocksActivity.Article);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v6 = sub_1DC401BB8();
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
      }
      else
      {
        *a1 = *a2;
        sub_1DC175964(0, (unint64_t *)&qword_1EDB42670, (void (*)(uint64_t))MEMORY[0x1E0D57E30], (void (*)(uint64_t))MEMORY[0x1E0D57888]);
        v8 = *(int *)(v7 + 48);
        v9 = (char *)a1 + v8;
        v10 = (char *)a2 + v8;
        v11 = sub_1DC40202C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
        swift_storeEnumTagMultiPayload();
      }
      sub_1DC1446B4();
      *(_QWORD *)((char *)a1 + *(int *)(v12 + 48)) = *(_QWORD *)((char *)a2 + *(int *)(v12 + 48));
      v13 = *(int *)(v12 + 64);
      v14 = (char *)a1 + v13;
      v15 = (char *)a2 + v13;
      *((_QWORD *)v14 + 4) = *((_QWORD *)v15 + 4);
      v16 = *((_OWORD *)v15 + 1);
      *(_OWORD *)v14 = *(_OWORD *)v15;
      *((_OWORD *)v14 + 1) = v16;
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

void destroy for StocksActivity.Alert(uint64_t a1)
{
  int v1;

  v1 = *(unsigned __int8 *)(a1 + 40);
  while (2)
  {
    switch(v1)
    {
      case 0:
      case 3:
        swift_release();
        break;
      case 1:
        __swift_destroy_boxed_opaque_existential_1(a1);
        break;
      case 2:

        break;
      default:
        v1 = *(_DWORD *)a1 + 4;
        continue;
    }
    break;
  }
}

uint64_t initializeWithCopy for StocksActivity.Alert(uint64_t a1, uint64_t a2)
{
  int v3;
  void *v4;
  id v5;
  __int128 v6;

  v3 = *(unsigned __int8 *)(a2 + 40);
  while (2)
  {
    switch(v3)
    {
      case 0:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_BYTE *)(a1 + 40) = 0;
        goto LABEL_7;
      case 1:
        v6 = *(_OWORD *)(a2 + 24);
        *(_OWORD *)(a1 + 24) = v6;
        (**(void (***)(uint64_t))(v6 - 8))(a1);
        *(_BYTE *)(a1 + 40) = 1;
        return a1;
      case 2:
        v4 = *(void **)a2;
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_BYTE *)(a1 + 40) = 2;
        v5 = v4;
        return a1;
      case 3:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_BYTE *)(a1 + 40) = 3;
LABEL_7:
        swift_retain();
        return a1;
      default:
        v3 = *(_DWORD *)a2 + 4;
        continue;
    }
  }
}

uint64_t assignWithCopy for StocksActivity.Alert(uint64_t a1, uint64_t a2)
{
  int v4;
  int v5;
  uint64_t v6;
  void *v7;
  id v8;

  if (a1 != a2)
  {
    v4 = *(unsigned __int8 *)(a1 + 40);
    while (2)
    {
      switch(v4)
      {
        case 0:
        case 3:
          swift_release();
          break;
        case 1:
          __swift_destroy_boxed_opaque_existential_1(a1);
          break;
        case 2:

          break;
        default:
          v4 = *(_DWORD *)a1 + 4;
          continue;
      }
      break;
    }
    v5 = *(unsigned __int8 *)(a2 + 40);
    while (2)
    {
      switch(v5)
      {
        case 0:
          *(_QWORD *)a1 = *(_QWORD *)a2;
          *(_BYTE *)(a1 + 40) = 0;
          goto LABEL_15;
        case 1:
          v6 = *(_QWORD *)(a2 + 24);
          *(_QWORD *)(a1 + 24) = v6;
          *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
          (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1, a2);
          *(_BYTE *)(a1 + 40) = 1;
          return a1;
        case 2:
          v7 = *(void **)a2;
          *(_QWORD *)a1 = *(_QWORD *)a2;
          *(_BYTE *)(a1 + 40) = 2;
          v8 = v7;
          return a1;
        case 3:
          *(_QWORD *)a1 = *(_QWORD *)a2;
          *(_BYTE *)(a1 + 40) = 3;
LABEL_15:
          swift_retain();
          break;
        default:
          v5 = *(_DWORD *)a2 + 4;
          continue;
      }
      break;
    }
  }
  return a1;
}

uint64_t assignWithTake for StocksActivity.Alert(uint64_t a1, uint64_t a2)
{
  int v4;
  int v5;
  char v6;
  __int128 v7;

  if (a1 != a2)
  {
    v4 = *(unsigned __int8 *)(a1 + 40);
    while (2)
    {
      switch(v4)
      {
        case 0:
        case 3:
          swift_release();
          break;
        case 1:
          __swift_destroy_boxed_opaque_existential_1(a1);
          break;
        case 2:

          break;
        default:
          v4 = *(_DWORD *)a1 + 4;
          continue;
      }
      break;
    }
    v5 = *(unsigned __int8 *)(a2 + 40);
    while (2)
    {
      switch(v5)
      {
        case 0:
          v6 = 0;
          *(_QWORD *)a1 = *(_QWORD *)a2;
          break;
        case 1:
          v7 = *(_OWORD *)(a2 + 16);
          *(_OWORD *)a1 = *(_OWORD *)a2;
          *(_OWORD *)(a1 + 16) = v7;
          *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
          v6 = 1;
          break;
        case 2:
          *(_QWORD *)a1 = *(_QWORD *)a2;
          v6 = 2;
          break;
        case 3:
          *(_QWORD *)a1 = *(_QWORD *)a2;
          v6 = 3;
          break;
        default:
          v5 = *(_DWORD *)a2 + 4;
          continue;
      }
      break;
    }
    *(_BYTE *)(a1 + 40) = v6;
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for StocksActivity.Alert(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0xFD && *(_BYTE *)(a1 + 41))
    return (*(_DWORD *)a1 + 253);
  v3 = *(unsigned __int8 *)(a1 + 40);
  if (v3 >= 4)
    return (v3 ^ 0xFF) + 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for StocksActivity.Alert(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_OWORD *)(result + 25) = 0u;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 253;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 41) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 41) = 0;
    if (a2)
      *(_BYTE *)(result + 40) = -(char)a2;
  }
  return result;
}

uint64_t sub_1DC36D994(uint64_t a1)
{
  uint64_t result;

  result = *(unsigned __int8 *)(a1 + 40);
  if (result >= 4)
    return (*(_DWORD *)a1 + 4);
  return result;
}

uint64_t sub_1DC36D9B0(uint64_t result, unsigned int a2)
{
  if (a2 > 3)
  {
    *(_QWORD *)(result + 32) = 0;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 4;
    LOBYTE(a2) = 4;
  }
  *(_BYTE *)(result + 40) = a2;
  return result;
}

ValueMetadata *type metadata accessor for StocksActivity.Alert()
{
  return &type metadata for StocksActivity.Alert;
}

unint64_t *initializeBufferWithCopyOfBuffer for StocksActivity.Tip(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;

  v3 = *a2;
  sub_1DC17766C(*a2);
  *a1 = v3;
  return a1;
}

unint64_t destroy for StocksActivity.Tip(unint64_t *a1)
{
  return sub_1DC17769C(*a1);
}

unint64_t *assignWithCopy for StocksActivity.Tip(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;
  unint64_t v4;

  v3 = *a2;
  sub_1DC17766C(*a2);
  v4 = *a1;
  *a1 = v3;
  sub_1DC17769C(v4);
  return a1;
}

unint64_t *assignWithTake for StocksActivity.Tip(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;

  v3 = *a1;
  *a1 = *a2;
  sub_1DC17769C(v3);
  return a1;
}

uint64_t sub_1DC36DA88(_QWORD *a1)
{
  return *a1 >> 61;
}

_QWORD *sub_1DC36DA94(_QWORD *result)
{
  *result &= 0x1FFFFFFFFFFFFFFFuLL;
  return result;
}

uint64_t *sub_1DC36DAA4(uint64_t *result, uint64_t a2)
{
  *result = *result & 0xFFFFFFFFFFFFFF8 | (a2 << 61);
  return result;
}

ValueMetadata *type metadata accessor for StocksActivity.Tip()
{
  return &type metadata for StocksActivity.Tip;
}

uint64_t storeEnumTagSinglePayload for StocksActivity.StockFeed.Series.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1DC36DB14 + 4 * byte_1DC42AE8B[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1DC36DB48 + 4 * byte_1DC42AE86[v4]))();
}

uint64_t sub_1DC36DB48(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC36DB50(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC36DB58);
  return result;
}

uint64_t sub_1DC36DB64(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC36DB6CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1DC36DB70(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC36DB78(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StocksActivity.StockFeed.Series.CodingKeys()
{
  return &type metadata for StocksActivity.StockFeed.Series.CodingKeys;
}

unint64_t sub_1DC36DB98()
{
  unint64_t result;

  result = qword_1F03527E8;
  if (!qword_1F03527E8)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC42B424, &type metadata for StocksActivity.StockFeed.Series.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F03527E8);
  }
  return result;
}

unint64_t sub_1DC36DBE0()
{
  unint64_t result;

  result = qword_1F03527F0;
  if (!qword_1F03527F0)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC42B394, &type metadata for StocksActivity.StockFeed.Series.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F03527F0);
  }
  return result;
}

unint64_t sub_1DC36DC28()
{
  unint64_t result;

  result = qword_1F03527F8;
  if (!qword_1F03527F8)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC42B3BC, &type metadata for StocksActivity.StockFeed.Series.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F03527F8);
  }
  return result;
}

void sub_1DC36DC6C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB3FC48)
  {
    sub_1DC0821D4(255, (unint64_t *)&qword_1EDB3F940);
    sub_1DC36DCDC();
    v0 = sub_1DC409718();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB3FC48);
  }
}

unint64_t sub_1DC36DCDC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EDB3F950;
  if (!qword_1EDB3F950)
  {
    v1 = sub_1DC0821D4(255, (unint64_t *)&qword_1EDB3F940);
    result = MEMORY[0x1DF0CAB8C](MEMORY[0x1E0DEFCF8], v1);
    atomic_store(result, (unint64_t *)&qword_1EDB3F950);
  }
  return result;
}

void sub_1DC36DD34()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F0352810)
  {
    sub_1DC089DA4(255, (unint64_t *)&qword_1F034C400, (uint64_t (*)(uint64_t))type metadata accessor for WelcomeView, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEC5A8]);
    v0 = sub_1DC409718();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1F0352810);
  }
}

uint64_t sub_1DC36DDA8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6C616974696E69 && a2 == 0xE700000000000000;
  if (v2 || (sub_1DC4099E8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x694C736B636F7473 && a2 == 0xEA00000000007473)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1DC4099E8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1DC36DEA4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t result;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  BOOL v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    sub_1DC112498(0, &qword_1EDB3FC38, (uint64_t (*)(void))sub_1DC36E0B8, (uint64_t)&type metadata for ForYouFeedGroupKnobs.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEC268]);
    v3 = sub_1DC40970C();
    v4 = 0;
    v5 = v3 + 56;
    v28 = v1;
    v29 = a1 + 32;
    v27 = v3;
    while (1)
    {
      v6 = (uint64_t *)(v29 + 32 * v4);
      v8 = *v6;
      v7 = v6[1];
      v9 = v6[2];
      v10 = *((unsigned __int8 *)v6 + 24);
      sub_1DC409AC0();
      swift_bridgeObjectRetain_n();
      sub_1DC408AF4();
      swift_bridgeObjectRelease();
      v30 = v4;
      sub_1DC409AD8();
      if (v10 != 1)
        sub_1DC409ACC();
      result = sub_1DC409AF0();
      v12 = ~(-1 << *(_BYTE *)(v3 + 32));
      v13 = result & v12;
      v14 = (result & (unint64_t)v12) >> 6;
      v15 = *(_QWORD *)(v5 + 8 * v14);
      v16 = 1 << (result & v12);
      v17 = *(_QWORD *)(v3 + 48);
      if ((v16 & v15) != 0)
      {
        do
        {
          v18 = v17 + 32 * v13;
          result = *(_QWORD *)v18;
          v19 = *(_QWORD *)(v18 + 16);
          v20 = *(_BYTE *)(v18 + 24);
          v21 = *(_QWORD *)v18 == v8 && *(_QWORD *)(v18 + 8) == v7;
          if (v21 || (result = sub_1DC4099E8(), (result & 1) != 0))
          {
            if ((v20 & 1) != 0)
            {
              if ((v10 & 1) != 0)
                goto LABEL_3;
            }
            else
            {
              if (v19 == v9)
                v22 = v10;
              else
                v22 = 1;
              if ((v22 & 1) == 0)
              {
LABEL_3:
                swift_bridgeObjectRelease();
                v3 = v27;
                v1 = v28;
                goto LABEL_4;
              }
            }
          }
          v13 = (v13 + 1) & v12;
          v14 = v13 >> 6;
          v15 = *(_QWORD *)(v5 + 8 * (v13 >> 6));
          v16 = 1 << v13;
        }
        while ((v15 & (1 << v13)) != 0);
        v3 = v27;
        v1 = v28;
        v17 = *(_QWORD *)(v27 + 48);
      }
      *(_QWORD *)(v5 + 8 * v14) = v16 | v15;
      v23 = v17 + 32 * v13;
      *(_QWORD *)v23 = v8;
      *(_QWORD *)(v23 + 8) = v7;
      *(_QWORD *)(v23 + 16) = v9;
      *(_BYTE *)(v23 + 24) = v10;
      v24 = *(_QWORD *)(v3 + 16);
      v25 = __OFADD__(v24, 1);
      v26 = v24 + 1;
      if (v25)
        break;
      *(_QWORD *)(v3 + 16) = v26;
LABEL_4:
      v4 = v30 + 1;
      if (v30 + 1 == v1)
        return v3;
    }
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E0DEE9E8];
  }
  return result;
}

unint64_t sub_1DC36E0B8()
{
  unint64_t result;

  result = qword_1EDB316C0;
  if (!qword_1EDB316C0)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC430B44, &type metadata for ForYouFeedGroupKnobs.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB316C0);
  }
  return result;
}

void sub_1DC36E0FC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), unint64_t *a4, uint64_t a5)
{
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    a3(255);
    sub_1DC080808(a4, a3, a5);
    v9 = sub_1DC409718();
    if (!v10)
      atomic_store(v9, a2);
  }
}

uint64_t sub_1DC36E188()
{
  sub_1DC409AC0();
  sub_1DC408AF4();
  swift_bridgeObjectRelease();
  return sub_1DC409AF0();
}

uint64_t sub_1DC36E210()
{
  sub_1DC408AF4();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DC36E274()
{
  sub_1DC409AC0();
  sub_1DC408AF4();
  swift_bridgeObjectRelease();
  return sub_1DC409AF0();
}

uint64_t sub_1DC36E2F8@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1DC4098A4();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

void sub_1DC36E354(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x676E696863746177;
  if (*v1)
    v2 = 0x6863746157746F6ELL;
  v3 = 0xE800000000000000;
  if (*v1)
    v3 = 0xEB00000000676E69;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1DC36E39C(char *a1, char *a2)
{
  return sub_1DC158CB4(*a1, *a2);
}

uint64_t sub_1DC36E3A8@<X0>(BOOL *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v3;
  uint64_t v4;

  *a1 = (*v1 & 1) == 0;
  v3 = *MEMORY[0x1E0DB6C98];
  v4 = sub_1DC404294();
  return (*(uint64_t (**)(BOOL *, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 104))(a1, v3, v4);
}

BOOL sub_1DC36E400(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v2;
  int v3;
  int v4;
  int v5;

  v2 = *((_QWORD *)a1 + 1);
  if (a1[1])
    v3 = 256;
  else
    v3 = 0;
  v4 = v3 | *a1;
  if (a2[1])
    v5 = 256;
  else
    v5 = 0;
  return sub_1DC36F8B0(v4, v2, v5 | *a2, *((_QWORD *)a2 + 1));
}

uint64_t sub_1DC36E43C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_1DC370B84();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1DC36E46C@<X0>(uint64_t result@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjCClassFromMetadata;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = 0;
  if (*(_BYTE *)(result + 1) == 1)
  {
    v4 = 0;
    if ((*(_BYTE *)result & 1) == 0)
    {
      v5 = *(_QWORD *)(result + 8);
      type metadata accessor for Localized();
      ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
      v7 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
      sub_1DC3FFC80();

      sub_1DC089DA4(0, (unint64_t *)&qword_1EDB400C0, (uint64_t (*)(uint64_t))sub_1DC1542B8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v8 = swift_allocObject();
      v9 = MEMORY[0x1E0DEB418];
      *(_OWORD *)(v8 + 16) = xmmword_1DC40DC10;
      v10 = MEMORY[0x1E0DEB490];
      *(_QWORD *)(v8 + 56) = v9;
      *(_QWORD *)(v8 + 64) = v10;
      *(_QWORD *)(v8 + 32) = v5;
      v3 = sub_1DC408A70();
      v4 = v11;
      result = swift_bridgeObjectRelease();
    }
  }
  else
  {
    v4 = 0;
  }
  *a2 = v3;
  a2[1] = v4;
  return result;
}

void sub_1DC36E5D0(_QWORD *a1@<X8>)
{
  void *v2;
  id v3;

  v2 = (void *)sub_1DC408A1C();
  swift_bridgeObjectRelease();
  v3 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v2);

  if (v3)
    *a1 = v3;
  else
    __break(1u);
}

uint64_t sub_1DC36E6A0@<X0>(_BYTE *a1@<X0>, uint64_t a2@<X8>)
{
  char v4;
  uint64_t v5;
  unsigned int *v6;

  v4 = a1[1];
  v5 = sub_1DC404C54();
  v6 = (unsigned int *)MEMORY[0x1E0DB8530];
  if ((v4 & 1) == 0 && !*a1)
    v6 = (unsigned int *)MEMORY[0x1E0DB8520];
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, *v6, v5);
}

uint64_t static UIActivityType.watchStock.getter()
{
  return sub_1DC408A1C();
}

uint64_t *sub_1DC36E724(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1DC40124C();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1DC4008EC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return a1;
}

uint64_t sub_1DC36E7CC(uint64_t a1, uint64_t a2)
{
  return sub_1DC36EB98(a1, a2, (uint64_t (*)(_QWORD))MEMORY[0x1E0DAE890]);
}

uint64_t sub_1DC36E7D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_1DC40124C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1DC4008EC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

uint64_t sub_1DC36E854(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_1DC40124C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1DC4008EC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t sub_1DC36E8D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_1DC40124C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1DC4008EC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t sub_1DC36E94C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_1DC40124C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1DC4008EC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_1DC36E9C8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC36E9D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  v6 = sub_1DC40124C();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v8 = sub_1DC4008EC();
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t sub_1DC36EA48()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC36EA54(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v8 = sub_1DC40124C();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v10 = sub_1DC4008EC();
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

_QWORD *sub_1DC36EAD0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1DC40124C();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1DC400970();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    *((_BYTE *)a1 + *(int *)(a3 + 24)) = *((_BYTE *)a2 + *(int *)(a3 + 24));
  }
  return a1;
}

uint64_t sub_1DC36EB8C(uint64_t a1, uint64_t a2)
{
  return sub_1DC36EB98(a1, a2, (uint64_t (*)(_QWORD))MEMORY[0x1E0DAE950]);
}

uint64_t sub_1DC36EB98(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_1DC40124C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(a1, v6);
  v7 = a1 + *(int *)(a2 + 20);
  v8 = a3(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
}

uint64_t sub_1DC36EC00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_1DC40124C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1DC400970();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  *(_BYTE *)(a1 + *(int *)(a3 + 24)) = *(_BYTE *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_1DC36EC90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_1DC40124C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1DC400970();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  *(_BYTE *)(a1 + *(int *)(a3 + 24)) = *(_BYTE *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_1DC36ED20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_1DC40124C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1DC400970();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  *(_BYTE *)(a1 + *(int *)(a3 + 24)) = *(_BYTE *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_1DC36EDB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_1DC40124C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1DC400970();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  *(_BYTE *)(a1 + *(int *)(a3 + 24)) = *(_BYTE *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_1DC36EE40()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC36EE4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v14;

  v6 = sub_1DC40124C();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_1DC400970();
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24));
  if (v14 >= 2)
    return ((v14 + 2147483646) & 0x7FFFFFFF) + 1;
  else
    return 0;
}

uint64_t sub_1DC36EF04()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC36EF10(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = sub_1DC40124C();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = sub_1DC400970();
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_BYTE *)(a1 + *(int *)(a4 + 24)) = a2 + 1;
  return result;
}

uint64_t storeEnumTagSinglePayload for WatchlistState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1DC36F000 + 4 * byte_1DC42B4A5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1DC36F034 + 4 * byte_1DC42B4A0[v4]))();
}

uint64_t sub_1DC36F034(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC36F03C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC36F044);
  return result;
}

uint64_t sub_1DC36F050(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC36F058);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1DC36F05C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC36F064(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WatchlistState()
{
  return &type metadata for WatchlistState;
}

uint64_t *sub_1DC36F080(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1DC40124C();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1DC4010E4();
    v12 = *(_QWORD *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    {
      sub_1DC089DA4(0, (unint64_t *)&qword_1EDB28DE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF0D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
  }
  return a1;
}

uint64_t sub_1DC36F19C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v4 = sub_1DC40124C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = sub_1DC4010E4();
  v7 = *(_QWORD *)(v6 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  return result;
}

uint64_t sub_1DC36F22C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = sub_1DC40124C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_1DC4010E4();
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    sub_1DC089DA4(0, (unint64_t *)&qword_1EDB28DE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF0D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  return a1;
}

uint64_t sub_1DC36F31C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;

  v6 = sub_1DC40124C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (void *)(a1 + v7);
  v9 = (void *)(a2 + v7);
  v10 = sub_1DC4010E4();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 24))(v8, v9, v10);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    sub_1DC089DA4(0, (unint64_t *)&qword_1EDB28DE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF0D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v8, v9, v10);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  return a1;
}

uint64_t sub_1DC36F458(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = sub_1DC40124C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_1DC4010E4();
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    sub_1DC089DA4(0, (unint64_t *)&qword_1EDB28DE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF0D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  return a1;
}

uint64_t sub_1DC36F548(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;

  v6 = sub_1DC40124C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (void *)(a1 + v7);
  v9 = (void *)(a2 + v7);
  v10 = sub_1DC4010E4();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v8, v9, v10);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    sub_1DC089DA4(0, (unint64_t *)&qword_1EDB28DE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF0D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  return a1;
}

uint64_t sub_1DC36F684()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC36F690(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = sub_1DC40124C();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1DC089DA4(0, (unint64_t *)&qword_1EDB28DE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF0D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    v8 = v11;
    v12 = *(_QWORD *)(v11 - 8);
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t sub_1DC36F71C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC36F728(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v8 = sub_1DC40124C();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1DC089DA4(0, (unint64_t *)&qword_1EDB28DE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF0D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    v10 = v13;
    v14 = *(_QWORD *)(v13 - 8);
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1DC36F7C0()
{
  void *v0;
  id v1;

  v0 = (void *)sub_1DC408A1C();
  swift_bridgeObjectRelease();
  v1 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v0);

  if (v1)
    sub_1DC404F84();
  else
    __break(1u);
}

BOOL sub_1DC36F8B0(int a1, uint64_t a2, int a3, uint64_t a4)
{
  BOOL v8;
  uint64_t v9;
  unint64_t v10;
  BOOL v11;
  uint64_t v12;
  unint64_t v13;
  _BOOL8 result;
  char v15;

  v8 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v9 = 0x6863746157746F6ELL;
  else
    v9 = 0x676E696863746177;
  if (v8)
    v10 = 0xE800000000000000;
  else
    v10 = 0xEB00000000676E69;
  v11 = (a3 & 1) == 0;
  if ((a3 & 1) != 0)
    v12 = 0x6863746157746F6ELL;
  else
    v12 = 0x676E696863746177;
  if (v11)
    v13 = 0xE800000000000000;
  else
    v13 = 0xEB00000000676E69;
  if (v9 == v12 && v10 == v13)
  {
    swift_bridgeObjectRelease_n();
    if (((a1 ^ a3) & 0x100) != 0)
      return 0;
    return a2 == a4;
  }
  v15 = sub_1DC4099E8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = 0;
  if (((a1 ^ a3) & 0x100) == 0 && (v15 & 1) != 0)
    return a2 == a4;
  return result;
}

uint64_t sub_1DC36F9A0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  unint64_t v34;

  sub_1DC1FB6C4();
  MEMORY[0x1E0C80A78](v2);
  v29 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC089DA4(0, (unint64_t *)&qword_1F034EA90, (uint64_t (*)(uint64_t))sub_1DC1FB774, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v27 - v5;
  sub_1DC37015C(0, &qword_1F0352858, (void (*)(uint64_t))type metadata accessor for SortWatchlistCommandContext);
  MEMORY[0x1E0C80A78](v7);
  v8 = type metadata accessor for SortWatchlistCommandContext(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1DC400940();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(int *)(v8 + 24);
  if (*(_BYTE *)(a1 + v15) == 1)
  {
    sub_1DC40094C();
    v16 = sub_1DC40091C();
    v27 = v17;
    v28 = v16;
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  else
  {
    v18 = sub_1DC400904();
    v27 = v19;
    v28 = v18;
  }
  if (*(_BYTE *)(a1 + v15) == 1)
  {
    v33 = 0;
    v34 = 0xE000000000000000;
    if (qword_1EDB2AA68 != -1)
      swift_once();
    sub_1DC4068EC();
    sub_1DC408B48();
    swift_bridgeObjectRelease();
    sub_1DC408B48();
    sub_1DC4011E0();
    sub_1DC408B48();
    swift_bridgeObjectRelease();
    sub_1DC408B48();
    v30 = sub_1DC400964();
    v31 = v20;
    v32 = v21 & 1;
    sub_1DC3701D0();
    sub_1DC409808();
    sub_1DC408B48();
    sub_1DC40094C();
    v22 = sub_1DC400934();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    v30 = v22;
    sub_1DC4099B8();
    sub_1DC408B48();
    swift_bridgeObjectRelease();
  }
  else
  {
    v33 = 0;
    v34 = 0xE000000000000000;
    if (qword_1EDB2AA68 != -1)
      swift_once();
    sub_1DC4068EC();
    sub_1DC408B48();
    swift_bridgeObjectRelease();
    sub_1DC408B48();
    sub_1DC4011E0();
    sub_1DC408B48();
    swift_bridgeObjectRelease();
    sub_1DC408B48();
    v30 = sub_1DC400964();
    v31 = v23;
    v32 = v24 & 1;
    sub_1DC3701D0();
    sub_1DC409808();
  }
  if (qword_1EDB2AA68 != -1)
    swift_once();
  sub_1DC0990BC(a1, (uint64_t)v10, type metadata accessor for SortWatchlistCommandContext);
  v30 = v28;
  v31 = v27;
  swift_retain();
  sub_1DC405914();
  sub_1DC1FB774();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v6, 1, 1, v25);
  sub_1DC404ED0();
  sub_1DC40463C();
  swift_allocObject();
  return sub_1DC4045A0();
}

uint64_t sub_1DC36FE4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v24[2];
  uint64_t v25;
  uint64_t v26;

  sub_1DC1FB6C4();
  MEMORY[0x1E0C80A78](v4);
  v24[1] = (char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC089DA4(0, (unint64_t *)&qword_1F034EA90, (uint64_t (*)(uint64_t))sub_1DC1FB774, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v24 - v7;
  sub_1DC37015C(0, &qword_1F0352850, (void (*)(uint64_t))type metadata accessor for ChangeWatchlistDisplayContext);
  MEMORY[0x1E0C80A78](v9);
  v10 = type metadata accessor for ChangeWatchlistDisplayContext(0);
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)v24 - v14;
  v16 = sub_1DC40124C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v15, a1, v16);
  v17 = &v15[*(int *)(v10 + 20)];
  v18 = sub_1DC4008EC();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v17, a2, v18);
  if (qword_1EDB2AA50 != -1)
    swift_once();
  sub_1DC0990BC((uint64_t)v15, (uint64_t)v13, type metadata accessor for ChangeWatchlistDisplayContext);
  swift_retain();
  v25 = sub_1DC4068EC();
  v26 = v19;
  sub_1DC408B48();
  sub_1DC4011E0();
  sub_1DC408B48();
  swift_bridgeObjectRelease();
  sub_1DC408B48();
  sub_1DC4008D4();
  sub_1DC408B48();
  swift_bridgeObjectRelease();
  v25 = sub_1DC4008D4();
  v26 = v20;
  sub_1DC405914();
  sub_1DC1FB774();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v8, 1, 1, v21);
  sub_1DC404ED0();
  sub_1DC40463C();
  swift_allocObject();
  v22 = sub_1DC4045A0();
  sub_1DC0926D8((uint64_t)v15, type metadata accessor for ChangeWatchlistDisplayContext);
  return v22;
}

void sub_1DC37015C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_1DC405920();
    if (!v5)
      atomic_store(v4, a2);
  }
}

void sub_1DC3701D0()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1F0352860)
  {
    sub_1DC083594(255, &qword_1F0352868, MEMORY[0x1E0DEB418], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1F0352860);
  }
}

uint64_t sub_1DC37024C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t ObjCClassFromMetadata;
  void *v5;
  id v6;
  void *v7;
  id v8;
  uint64_t v10;

  v0 = sub_1DC404C54();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EDB2AA98 != -1)
    swift_once();
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v5 = (void *)objc_opt_self();
  swift_retain();
  v6 = objc_msgSend(v5, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1DC3FFC80();

  v7 = (void *)sub_1DC408A1C();
  v8 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v7);

  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB8530], v0);
  sub_1DC40463C();
  swift_allocObject();
  return sub_1DC4045DC();
}

uint64_t sub_1DC370430(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  __int16 v9;
  uint64_t v10;

  sub_1DC370D94(0, &qword_1F0352870, (void (*)(uint64_t))MEMORY[0x1E0DB8E60]);
  MEMORY[0x1E0C80A78](v2);
  sub_1DC370B24();
  MEMORY[0x1E0C80A78](v3);
  v4 = sub_1DC4010E4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EDB2AA88 != -1)
    swift_once();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  swift_retain();
  sub_1DC408A1C();
  v9 = 1;
  v10 = 0;
  sub_1DC11EA24();
  sub_1DC404B7C();
  v9 = 1;
  v10 = 0;
  sub_1DC404F90();
  sub_1DC404B7C();
  sub_1DC4046C0();
  swift_allocObject();
  return sub_1DC4046A8();
}

uint64_t sub_1DC370634(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v18[4];
  __int16 v19;
  uint64_t v20;

  sub_1DC370CD8();
  MEMORY[0x1E0C80A78](v2);
  v18[3] = (char *)v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC370D30();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC370DFC();
  MEMORY[0x1E0C80A78](v7);
  sub_1DC370E9C();
  MEMORY[0x1E0C80A78](v8);
  v9 = sub_1DC4010E4();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EDB2AA88 != -1)
    swift_once();
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a1, v9);
  swift_retain();
  v13 = sub_1DC4068EC();
  v18[1] = v14;
  v18[2] = v13;
  v19 = 1;
  v20 = 0;
  sub_1DC11EA24();
  v15 = MEMORY[0x1E0DEA968];
  sub_1DC405908();
  v19 = 1;
  v20 = 0;
  sub_1DC083594(0, (unint64_t *)&qword_1EDB284B0, v15, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
  sub_1DC405908();
  v19 = 1;
  v20 = 0;
  sub_1DC15E978();
  sub_1DC404B7C();
  sub_1DC370D94(0, &qword_1EDB29F08, (void (*)(uint64_t))sub_1DC15E978);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v6, 0, 1, v16);
  v19 = 1;
  v20 = 0;
  sub_1DC404EC4();
  sub_1DC40463C();
  swift_allocObject();
  return sub_1DC4045AC();
}

uint64_t sub_1DC370944()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t ObjCClassFromMetadata;
  void *v5;
  id v6;
  void *v7;
  id v8;
  uint64_t v10;

  v0 = sub_1DC404C54();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EDB2AA60 != -1)
    swift_once();
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v5 = (void *)objc_opt_self();
  swift_retain();
  v6 = objc_msgSend(v5, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1DC3FFC80();

  v7 = (void *)sub_1DC408A1C();
  v8 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v7);

  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB8530], v0);
  sub_1DC40463C();
  swift_allocObject();
  return sub_1DC4045DC();
}

void sub_1DC370B24()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F0352878[0])
  {
    sub_1DC11EA24();
    v0 = sub_1DC404B94();
    if (!v1)
      atomic_store(v0, qword_1F0352878);
  }
}

uint64_t sub_1DC370B84()
{
  uint64_t ObjCClassFromMetadata;
  id v1;
  uint64_t v2;

  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v2 = sub_1DC3FFC80();

  return v2;
}

void sub_1DC370CD8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB2A038)
  {
    sub_1DC11EA24();
    v0 = sub_1DC404EE8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB2A038);
  }
}

void sub_1DC370D30()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB29F10)
  {
    sub_1DC370D94(255, &qword_1EDB29F08, (void (*)(uint64_t))sub_1DC15E978);
    v0 = sub_1DC4095A4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB29F10);
  }
}

void sub_1DC370D94(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    sub_1DC11EA24();
    v4 = sub_1DC404B94();
    if (!v5)
      atomic_store(v4, a2);
  }
}

void sub_1DC370DFC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB2A370)
  {
    sub_1DC4010E4();
    sub_1DC083594(255, (unint64_t *)&qword_1EDB284B0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
    sub_1DC11EA24();
    v0 = sub_1DC405920();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB2A370);
  }
}

void sub_1DC370E9C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB2A368)
  {
    sub_1DC4010E4();
    sub_1DC11EA24();
    v0 = sub_1DC405920();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB2A368);
  }
}

uint64_t getEnumTagSinglePayload for WatchlistCommandState(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && a1[16])
    return (*(_DWORD *)a1 + 255);
  v3 = *a1;
  v4 = v3 >= 2;
  v5 = v3 - 2;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for WatchlistCommandState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for WatchlistCommandState()
{
  return &type metadata for WatchlistCommandState;
}

char *sub_1DC370FAC(char *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(char *, uint64_t, uint64_t);
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v4 = sub_1DC4010E4();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48);
  v7 = v6(a1, 1, v4);
  v8 = v6(a2, 1, v4);
  if (v7)
  {
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(v5 + 16))(a1, a2, v4);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v8)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(a1, v4);
LABEL_6:
    sub_1DC089DA4(0, (unint64_t *)&qword_1EDB28DE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF0D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v5 + 24))(a1, a2, v4);
LABEL_7:
  v10 = *(int *)(type metadata accessor for WatchlistCreationRouteModel() + 20);
  v11 = &a1[v10];
  v12 = &a2[v10];
  v13 = *(_QWORD *)&a1[v10];
  v14 = *(_QWORD *)v12;
  if (!v13)
  {
    if (v14)
    {
      v16 = *((_QWORD *)v12 + 1);
      *(_QWORD *)v11 = v14;
      *((_QWORD *)v11 + 1) = v16;
      swift_retain();
      return a1;
    }
LABEL_13:
    *(_OWORD *)v11 = *(_OWORD *)v12;
    return a1;
  }
  if (!v14)
  {
    swift_release();
    goto LABEL_13;
  }
  v15 = *((_QWORD *)v12 + 1);
  *(_QWORD *)v11 = v14;
  *((_QWORD *)v11 + 1) = v15;
  swift_retain();
  swift_release();
  return a1;
}

char *sub_1DC371114(char *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;

  v4 = sub_1DC4010E4();
  v5 = *(_QWORD *)(v4 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(a2, 1, v4))
  {
    sub_1DC089DA4(0, (unint64_t *)&qword_1EDB28DE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF0D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(a1, a2, v4);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  }
  v7 = *(int *)(type metadata accessor for WatchlistCreationRouteModel() + 20);
  v8 = &a1[v7];
  v9 = &a2[v7];
  v10 = *(_QWORD *)v9;
  if (*(_QWORD *)v9)
  {
    v11 = *((_QWORD *)v9 + 1);
    *(_QWORD *)v8 = v10;
    *((_QWORD *)v8 + 1) = v11;
  }
  else
  {
    *(_OWORD *)v8 = *(_OWORD *)v9;
  }
  return a1;
}

char *sub_1DC3711FC(char *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(char *, uint64_t, uint64_t);
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v4 = sub_1DC4010E4();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48);
  v7 = v6(a1, 1, v4);
  v8 = v6(a2, 1, v4);
  if (v7)
  {
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(v5 + 32))(a1, a2, v4);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v8)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(a1, v4);
LABEL_6:
    sub_1DC089DA4(0, (unint64_t *)&qword_1EDB28DE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF0D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v5 + 40))(a1, a2, v4);
LABEL_7:
  v10 = *(int *)(type metadata accessor for WatchlistCreationRouteModel() + 20);
  v11 = &a1[v10];
  v12 = &a2[v10];
  v13 = *(_QWORD *)&a1[v10];
  v14 = *(_QWORD *)v12;
  if (!v13)
  {
    if (v14)
    {
      v16 = *((_QWORD *)v12 + 1);
      *(_QWORD *)v11 = v14;
      *((_QWORD *)v11 + 1) = v16;
      return a1;
    }
LABEL_13:
    *(_OWORD *)v11 = *(_OWORD *)v12;
    return a1;
  }
  if (!v14)
  {
    swift_release();
    goto LABEL_13;
  }
  v15 = *((_QWORD *)v12 + 1);
  *(_QWORD *)v11 = v14;
  *((_QWORD *)v11 + 1) = v15;
  swift_release();
  return a1;
}

uint64_t sub_1DC371358(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WatchlistCreationRouteModel();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_1DC371394(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WatchlistCreationRouteModel();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_1DC3713D4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC3713E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1DC4008EC();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t sub_1DC37145C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC371468(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_1DC4008EC();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for StockSearchPriceChangeDisplayBlueprintModifier()
{
  uint64_t result;

  result = qword_1EDB41C60;
  if (!qword_1EDB41C60)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1DC371518()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1DC4008EC();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1DC37158C(uint64_t a1, void (*a2)(char *), uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *);
  _BYTE v29[16];
  uint64_t v30;
  _BYTE v31[16];

  v27 = a3;
  v28 = a2;
  v21 = a1;
  v24 = sub_1DC404984();
  v4 = *(_QWORD *)(v24 - 8);
  MEMORY[0x1E0C80A78](v24);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC187FFC(0, (unint64_t *)&qword_1EDB41E18, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB9A28]);
  v25 = *(_QWORD *)(v7 - 8);
  v26 = v7;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v21 - v8;
  sub_1DC187F08();
  MEMORY[0x1E0C80A78](v10);
  sub_1DC187FFC(0, (unint64_t *)&qword_1EDB2AB88, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790]);
  v22 = *(_QWORD *)(v11 - 8);
  v23 = v11;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v21 - v12;
  v30 = v3;
  v14 = sub_1DC15575C((void (*)(char *))sub_1DC372258, (uint64_t)v29, (uint64_t)v31);
  sub_1DC187FFC(0, (unint64_t *)&qword_1EDB41DF0, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60]);
  v16 = v15;
  v17 = sub_1DC187FAC((unint64_t *)&unk_1EDB41DE0, MEMORY[0x1E0DB7B88]);
  v18 = sub_1DC187FAC(&qword_1EDB41DD8, MEMORY[0x1E0DB7B80]);
  MEMORY[0x1DF0C311C](v14, v16, v17, v18);
  type metadata accessor for StockSearchSectionDescriptor();
  type metadata accessor for StockSearchModel();
  sub_1DC080808(&qword_1EDB389D0, (uint64_t (*)(uint64_t))type metadata accessor for StockSearchSectionDescriptor, (uint64_t)&unk_1DC41CD30);
  sub_1DC080808(&qword_1EDB2F300, (uint64_t (*)(uint64_t))type metadata accessor for StockSearchModel, (uint64_t)&unk_1DC42E184);
  sub_1DC406D0C();
  v19 = v24;
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E0DB7FB8], v24);
  sub_1DC080808((unint64_t *)&qword_1EDB41520, (uint64_t (*)(uint64_t))type metadata accessor for StockSearchSectionDescriptor, (uint64_t)&unk_1DC41CDA0);
  sub_1DC405554();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v19);
  v28(v9);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v9, v26);
  return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v13, v23);
}

uint64_t sub_1DC371878(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE v11[16];
  uint64_t v12;
  _BYTE v13[8];

  sub_1DC1880C8();
  MEMORY[0x1E0C80A78](v3);
  v4 = type metadata accessor for StockSearchSectionDescriptor();
  MEMORY[0x1E0C80A78](v4);
  sub_1DC187FFC(0, (unint64_t *)&qword_1EDB41DF0, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60]);
  sub_1DC4046FC();
  v12 = a2;
  v5 = sub_1DC155790((void (*)(char *))sub_1DC372274, (uint64_t)v11, (uint64_t)v13);
  sub_1DC0D95F0(0);
  v7 = v6;
  v8 = sub_1DC080808(&qword_1EDB429D0, (uint64_t (*)(uint64_t))sub_1DC0D95F0, MEMORY[0x1E0DB6F08]);
  v9 = sub_1DC080808(&qword_1EDB42B00, (uint64_t (*)(uint64_t))sub_1DC0D95F0, MEMORY[0x1E0DB6EF8]);
  MEMORY[0x1DF0C311C](v5, v7, v8, v9);
  type metadata accessor for StockSearchModel();
  sub_1DC080808(&qword_1EDB389D0, (uint64_t (*)(uint64_t))type metadata accessor for StockSearchSectionDescriptor, (uint64_t)&unk_1DC41CD30);
  sub_1DC080808(&qword_1EDB2F300, (uint64_t (*)(uint64_t))type metadata accessor for StockSearchModel, (uint64_t)&unk_1DC42E184);
  return sub_1DC4046F0();
}

uint64_t sub_1DC371A48@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  int *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  int EnumCaseMultiPayload;
  uint64_t v30;
  char *v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, uint64_t, uint64_t);
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  _QWORD *v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(char *, uint64_t, uint64_t);
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  void (*v67)(char *, char *, uint64_t);
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;

  v85 = a2;
  v72 = a1;
  v82 = (_QWORD *)sub_1DC40124C();
  v80 = *(v82 - 1);
  MEMORY[0x1E0C80A78](v82);
  v78 = (char *)&v67 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1DC4011C8();
  MEMORY[0x1E0C80A78](v3);
  v83 = (char *)&v67 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for PriceViewModel();
  MEMORY[0x1E0C80A78](v5);
  v84 = (uint64_t)&v67 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = sub_1DC4008EC();
  v87 = *(_QWORD *)(v79 - 8);
  MEMORY[0x1E0C80A78](v79);
  v75 = (char *)&v67 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC092F50(0, &qword_1EDB353E0, (void (*)(uint64_t))type metadata accessor for StockSparklineViewModel);
  MEMORY[0x1E0C80A78](v8);
  v74 = (char *)&v67 - v9;
  sub_1DC092F50(0, &qword_1EDB28DC0, (void (*)(uint64_t))MEMORY[0x1E0DAF040]);
  MEMORY[0x1E0C80A78](v10);
  v73 = (uint64_t)&v67 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v86 = (uint64_t)&v67 - v13;
  v14 = sub_1DC4010E4();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v67 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = (int *)type metadata accessor for StockViewModel();
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v67 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v67 - v22;
  v24 = type metadata accessor for StockSearchModel();
  MEMORY[0x1E0C80A78](v24);
  v76 = (uint64_t)&v67 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v26);
  v28 = (char *)&v67 - v27;
  sub_1DC0D95F0(0);
  sub_1DC404354();
  v81 = v24;
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v77 = v23;
  v70 = v14;
  v71 = v15;
  v69 = v17;
  if (EnumCaseMultiPayload == 1)
  {
    sub_1DC1C62AC();
    v68 = v30;
    v31 = &v28[*(int *)(v30 + 48)];
    sub_1DC092ED0((uint64_t)v28, (uint64_t)v23, (uint64_t (*)(_QWORD))type metadata accessor for StockViewModel);
    (*(void (**)(char *, char *, _QWORD *))(v80 + 32))(v78, v31, v82);
    v67 = *(void (**)(char *, char *, uint64_t))(v15 + 16);
    v32 = v17;
    v33 = v17;
    v34 = v14;
    v67(v33, v23, v14);
    v35 = (uint64_t)&v23[v18[5]];
    v36 = v86;
    sub_1DC092F9C(v35, v86, &qword_1EDB28DC0, (void (*)(uint64_t))MEMORY[0x1E0DAF040]);
    v37 = type metadata accessor for StockSparklineViewModel(0);
    v38 = (uint64_t)v74;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v74, 1, 1, v37);
    v39 = type metadata accessor for StockSearchPriceChangeDisplayBlueprintModifier();
    v40 = *(void (**)(char *, uint64_t, uint64_t))(v87 + 16);
    v41 = v75;
    v42 = v79;
    v40(v75, v72 + *(int *)(v39 + 20), v79);
    v67(v20, v32, v34);
    sub_1DC092F9C(v36, (uint64_t)&v20[v18[5]], &qword_1EDB28DC0, (void (*)(uint64_t))MEMORY[0x1E0DAF040]);
    sub_1DC092F9C(v38, (uint64_t)&v20[v18[6]], &qword_1EDB353E0, (void (*)(uint64_t))type metadata accessor for StockSparklineViewModel);
    v40(&v20[v18[8]], (uint64_t)v41, v42);
    v20[v18[9]] = 0;
    v43 = v36;
    v44 = v73;
    sub_1DC092F9C(v43, v73, &qword_1EDB28DC0, (void (*)(uint64_t))MEMORY[0x1E0DAF040]);
    v45 = v83;
    sub_1DC401078();
    v46 = v84;
    sub_1DC0FE8A4(v44, v45, 9666786, 0xA300000000000000, v84);
    (*(void (**)(char *, uint64_t))(v87 + 8))(v41, v42);
    sub_1DC092F14(v38, &qword_1EDB353E0, (void (*)(uint64_t))type metadata accessor for StockSparklineViewModel);
    sub_1DC092F14(v86, &qword_1EDB28DC0, (void (*)(uint64_t))MEMORY[0x1E0DAF040]);
    (*(void (**)(char *, uint64_t))(v71 + 8))(v69, v70);
    sub_1DC092ED0(v46, (uint64_t)&v20[v18[7]], (uint64_t (*)(_QWORD))type metadata accessor for PriceViewModel);
    v47 = v76 + *(int *)(v68 + 48);
    sub_1DC0FD5F4((uint64_t)v20, v76);
    v48 = v80;
    v49 = v78;
    v50 = v82;
    (*(void (**)(uint64_t, char *, _QWORD *))(v80 + 16))(v47, v78, v82);
    swift_storeEnumTagMultiPayload();
    sub_1DC080808(&qword_1EDB2F300, (uint64_t (*)(uint64_t))type metadata accessor for StockSearchModel, (uint64_t)&unk_1DC42E184);
    sub_1DC404348();
    sub_1DC0DD6D4((uint64_t)v20);
    (*(void (**)(char *, _QWORD *))(v48 + 8))(v49, v50);
  }
  else
  {
    sub_1DC092ED0((uint64_t)v28, (uint64_t)v23, (uint64_t (*)(_QWORD))type metadata accessor for StockViewModel);
    v82 = *(_QWORD **)(v15 + 16);
    v51 = v17;
    v52 = v17;
    v53 = v14;
    ((void (*)(char *, char *, uint64_t))v82)(v52, v23, v14);
    v54 = (uint64_t)&v23[v18[5]];
    v55 = v86;
    sub_1DC092F9C(v54, v86, &qword_1EDB28DC0, (void (*)(uint64_t))MEMORY[0x1E0DAF040]);
    v56 = type metadata accessor for StockSparklineViewModel(0);
    v57 = (uint64_t)v74;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 56))(v74, 1, 1, v56);
    v58 = type metadata accessor for StockSearchPriceChangeDisplayBlueprintModifier();
    v59 = *(void (**)(char *, uint64_t, uint64_t))(v87 + 16);
    v60 = v75;
    v61 = v79;
    v59(v75, v72 + *(int *)(v58 + 20), v79);
    ((void (*)(char *, char *, uint64_t))v82)(v20, v51, v53);
    sub_1DC092F9C(v55, (uint64_t)&v20[v18[5]], &qword_1EDB28DC0, (void (*)(uint64_t))MEMORY[0x1E0DAF040]);
    sub_1DC092F9C(v57, (uint64_t)&v20[v18[6]], &qword_1EDB353E0, (void (*)(uint64_t))type metadata accessor for StockSparklineViewModel);
    v59(&v20[v18[8]], (uint64_t)v60, v61);
    v20[v18[9]] = 0;
    v62 = v55;
    v63 = v73;
    sub_1DC092F9C(v62, v73, &qword_1EDB28DC0, (void (*)(uint64_t))MEMORY[0x1E0DAF040]);
    v64 = v83;
    sub_1DC401078();
    v65 = v84;
    sub_1DC0FE8A4(v63, v64, 9666786, 0xA300000000000000, v84);
    (*(void (**)(char *, uint64_t))(v87 + 8))(v60, v61);
    sub_1DC092F14(v57, &qword_1EDB353E0, (void (*)(uint64_t))type metadata accessor for StockSparklineViewModel);
    sub_1DC092F14(v86, &qword_1EDB28DC0, (void (*)(uint64_t))MEMORY[0x1E0DAF040]);
    (*(void (**)(char *, uint64_t))(v71 + 8))(v69, v70);
    sub_1DC092ED0(v65, (uint64_t)&v20[v18[7]], (uint64_t (*)(_QWORD))type metadata accessor for PriceViewModel);
    sub_1DC0FD5F4((uint64_t)v20, v76);
    swift_storeEnumTagMultiPayload();
    sub_1DC080808(&qword_1EDB2F300, (uint64_t (*)(uint64_t))type metadata accessor for StockSearchModel, (uint64_t)&unk_1DC42E184);
    sub_1DC404348();
    sub_1DC0DD6D4((uint64_t)v20);
  }
  return sub_1DC0DD6D4((uint64_t)v77);
}

uint64_t sub_1DC37222C()
{
  return sub_1DC080808(&qword_1EDB41C58, (uint64_t (*)(uint64_t))type metadata accessor for StockSearchPriceChangeDisplayBlueprintModifier, (uint64_t)&unk_1DC42B6F8);
}

uint64_t sub_1DC372258(uint64_t a1)
{
  uint64_t v1;

  return sub_1DC371878(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1DC372274@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1DC371A48(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_1DC372290(uint64_t a1)
{
  return sub_1DC3722F4(a1, 0xD00000000000001ALL, 0x80000001DC44A4C0, &qword_1F03528A8);
}

uint64_t static Settings.Earnings.ConfigOverrides.earningsStartDate.getter()
{
  return sub_1DC10D910(&qword_1F034B178);
}

uint64_t sub_1DC3722D0(uint64_t a1)
{
  return sub_1DC3722F4(a1, 0xD000000000000018, 0x80000001DC44A4A0, (uint64_t *)&unk_1F03528B0);
}

uint64_t sub_1DC3722F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t result;
  _QWORD v10[4];

  v5 = sub_1DC401348();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC37277C();
  v10[3] = 1;
  v10[1] = 100;
  v10[2] = -10;
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0DB57E0], v5);
  result = sub_1DC401390();
  *a4 = result;
  return result;
}

uint64_t static Settings.Earnings.ConfigOverrides.earningsEndDate.getter()
{
  return sub_1DC10D910(&qword_1F034B180);
}

uint64_t Settings.Earnings.ConfigOverrides.__allocating_init(key:defaultValue:access:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  v5 = sub_1DC401348();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a4, v5);
  v9 = sub_1DC4012F4();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a4, v5);
  return v9;
}

uint64_t Settings.Earnings.ConfigOverrides.init(key:defaultValue:access:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v5 = sub_1DC401348();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v6 + 16))((char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a4, v5, v7);
  v9 = sub_1DC4012F4();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a4, v5);
  return v9;
}

uint64_t Settings.Earnings.ConfigOverrides.__deallocating_deinit()
{
  _s11TeaSettings0B0C8StocksUIE4TipsV8EarningsV15ConfigOverridesCfd_0();
  return swift_deallocClassInstance();
}

uint64_t sub_1DC3725A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;

  v0 = sub_1DC401348();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v10 - v6;
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v1 + 104))((char *)&v10 - v6, *MEMORY[0x1E0DB57E8], v0, v5);
  type metadata accessor for Settings.Earnings.ConfigOverrides();
  swift_allocObject();
  (*(void (**)(char *, char *, uint64_t))(v1 + 16))(v3, v7, v0);
  v8 = sub_1DC4012F4();
  result = (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v7, v0);
  qword_1EDB28FE0 = v8;
  return result;
}

uint64_t static Settings.Earnings.configOverrides.getter()
{
  if (qword_1EDB28FE8 != -1)
    swift_once();
  return swift_retain();
}

ValueMetadata *type metadata accessor for Settings.Earnings()
{
  return &type metadata for Settings.Earnings;
}

uint64_t type metadata accessor for Settings.Earnings.ConfigOverrides()
{
  uint64_t result;

  result = qword_1EDB28FA8;
  if (!qword_1EDB28FA8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1DC372738()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1DC372774()
{
  return type metadata accessor for Settings.Earnings.ConfigOverrides();
}

void sub_1DC37277C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB29118)
  {
    v0 = sub_1DC40139C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB29118);
  }
}

ValueMetadata *type metadata accessor for ForYouFeedExpandData()
{
  return &type metadata for ForYouFeedExpandData;
}

uint64_t sub_1DC3727E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  id *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  unsigned int (*v25)(uint64_t, uint64_t, uint64_t);
  id *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int EnumCaseMultiPayload;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(uint64_t, uint64_t);
  uint64_t result;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  id *v52;
  uint64_t v53;
  uint64_t v54;

  sub_1DC338D18(0, (unint64_t *)&qword_1F0352960, (void (*)(uint64_t))sub_1DC154164);
  v48 = v6;
  MEMORY[0x1E0C80A78](v6);
  v51 = (uint64_t)&v48 - v7;
  v8 = type metadata accessor for StocksAudioTrack();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v52 = (id *)((char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1DC1540EC();
  v12 = v11;
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC12D138(0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (id *)((char *)&v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v48 - v19;
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v48 - v22;
  v53 = a3;
  v54 = a3 + 16;
  sub_1DC154164();
  v49 = a1;
  sub_1DC401D14();
  v50 = a2;
  sub_1DC401D14();
  v24 = (uint64_t)&v14[*(int *)(v12 + 48)];
  sub_1DC0990BC((uint64_t)v23, (uint64_t)v14, (uint64_t (*)(_QWORD))sub_1DC12D138);
  sub_1DC0990BC((uint64_t)v20, v24, (uint64_t (*)(_QWORD))sub_1DC12D138);
  v25 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v25((uint64_t)v14, 1, v8) == 1)
  {
    sub_1DC0926D8((uint64_t)v20, (uint64_t (*)(_QWORD))sub_1DC12D138);
    sub_1DC0926D8((uint64_t)v23, (uint64_t (*)(_QWORD))sub_1DC12D138);
    if (v25(v24, 1, v8) == 1)
      goto LABEL_10;
LABEL_6:
    sub_1DC0926D8((uint64_t)v14, (uint64_t (*)(_QWORD))sub_1DC1540EC);
    goto LABEL_20;
  }
  sub_1DC0990BC((uint64_t)v14, (uint64_t)v17, (uint64_t (*)(_QWORD))sub_1DC12D138);
  if (v25(v24, 1, v8) == 1)
  {
    sub_1DC0926D8((uint64_t)v20, (uint64_t (*)(_QWORD))sub_1DC12D138);
    sub_1DC0926D8((uint64_t)v23, (uint64_t (*)(_QWORD))sub_1DC12D138);
    sub_1DC0926D8((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for StocksAudioTrack);
    goto LABEL_6;
  }
  v26 = v52;
  sub_1DC154230(v24, (uint64_t)v52);
  v27 = objc_msgSend(*v17, sel_identifier);
  v28 = sub_1DC408A4C();
  v30 = v29;

  v31 = objc_msgSend(*v26, sel_identifier);
  v32 = sub_1DC408A4C();
  v34 = v33;

  if (v28 == v32 && v30 == v34)
  {
    swift_bridgeObjectRelease_n();
    sub_1DC0926D8((uint64_t)v52, (uint64_t (*)(_QWORD))type metadata accessor for StocksAudioTrack);
    sub_1DC0926D8((uint64_t)v20, (uint64_t (*)(_QWORD))sub_1DC12D138);
    sub_1DC0926D8((uint64_t)v23, (uint64_t (*)(_QWORD))sub_1DC12D138);
    sub_1DC0926D8((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for StocksAudioTrack);
LABEL_10:
    sub_1DC0926D8((uint64_t)v14, (uint64_t (*)(_QWORD))sub_1DC12D138);
    goto LABEL_11;
  }
  v46 = sub_1DC4099E8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1DC0926D8((uint64_t)v52, (uint64_t (*)(_QWORD))type metadata accessor for StocksAudioTrack);
  sub_1DC0926D8((uint64_t)v20, (uint64_t (*)(_QWORD))sub_1DC12D138);
  sub_1DC0926D8((uint64_t)v23, (uint64_t (*)(_QWORD))sub_1DC12D138);
  sub_1DC0926D8((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for StocksAudioTrack);
  sub_1DC0926D8((uint64_t)v14, (uint64_t (*)(_QWORD))sub_1DC12D138);
  if ((v46 & 1) != 0)
  {
LABEL_11:
    v35 = v51;
    v36 = v51 + *(int *)(v48 + 48);
    sub_1DC0990BC(v49, v51, (uint64_t (*)(_QWORD))sub_1DC154164);
    sub_1DC0990BC(v50, v36, (uint64_t (*)(_QWORD))sub_1DC154164);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload)
    {
      if (EnumCaseMultiPayload != 1)
      {
        result = swift_getEnumCaseMultiPayload();
        if ((_DWORD)result == 2)
          return result;
        goto LABEL_18;
      }
      sub_1DC27A3D0();
      v39 = *(int *)(v38 + 64);
      v40 = v35 + v39;
      if (swift_getEnumCaseMultiPayload() == 1)
      {
LABEL_14:
        v41 = sub_1DC401C18();
        v42 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 8);
        v42(v36 + v39, v41);
        sub_1DC0926D8(v36, (uint64_t (*)(_QWORD))type metadata accessor for StocksAudioTrack);
        v42(v40, v41);
        return sub_1DC0926D8(v35, (uint64_t (*)(_QWORD))type metadata accessor for StocksAudioTrack);
      }
    }
    else
    {
      sub_1DC27A2C4();
      v39 = *(int *)(v44 + 64);
      v40 = v35 + v39;
      if (!swift_getEnumCaseMultiPayload())
        goto LABEL_14;
    }
    v45 = sub_1DC401C18();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 8))(v40, v45);
    sub_1DC0926D8(v35, (uint64_t (*)(_QWORD))type metadata accessor for StocksAudioTrack);
LABEL_18:
    sub_1DC0926D8(v36, (uint64_t (*)(_QWORD))sub_1DC154164);
  }
LABEL_20:
  v47 = v54;
  swift_beginAccess();
  result = MEMORY[0x1DF0CAD78](v47);
  if (result)
  {
    swift_getObjectType();
    sub_1DC4069A0();
    sub_1DC407B58();
    sub_1DC404A44();
    swift_release();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1DC372D80@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void **v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  uint64_t v22;
  void *v23;
  void (*v24)(char *, uint64_t);
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v30;
  void *v31;
  void *v32;
  id v33;
  unsigned int v34;
  uint64_t v35;
  uint64_t (*v36)(uint64_t, uint64_t, uint64_t);
  unsigned int *v37;
  uint64_t v38;
  int EnumCaseMultiPayload;
  uint64_t v40;
  uint64_t v41;
  unsigned int *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  v56 = a1;
  sub_1DC154164();
  v3 = v2;
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1DC407D50();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v51 - v11;
  sub_1DC12D138(0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (void **)((char *)&v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v55 = v1;
  v51 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8StocksUI34FeedHeadlinePlaybackCommandHandler_playbackConductor);
  sub_1DC401F78();
  sub_1DC402740();
  swift_release();
  v16 = type metadata accessor for StocksAudioTrack();
  v17 = (*(uint64_t (**)(void **, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v15, 1, v16);
  v52 = v5;
  v53 = v3;
  if (v17 == 1)
  {
    sub_1DC0926D8((uint64_t)v15, (uint64_t (*)(_QWORD))sub_1DC12D138);
    v18 = 0;
    v19 = 0;
  }
  else
  {
    v20 = *v15;
    swift_unknownObjectRetain();
    sub_1DC0926D8((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for StocksAudioTrack);
    v21 = objc_msgSend(v20, sel_identifier);
    swift_unknownObjectRelease();
    v18 = sub_1DC408A4C();
    v19 = v22;

  }
  sub_1DC407B4C();
  v23 = (void *)sub_1DC407D38();
  v24 = *(void (**)(char *, uint64_t))(v7 + 8);
  v54 = v6;
  v24(v12, v6);
  v25 = objc_msgSend(v23, sel_identifier);
  swift_unknownObjectRelease();
  v26 = sub_1DC408A4C();
  v28 = v27;

  if (!v19)
  {
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  if (v18 != v26 || v19 != v28)
  {
    v30 = sub_1DC4099E8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v30 & 1) != 0)
      goto LABEL_17;
LABEL_12:
    v31 = *(void **)(v55 + OBJC_IVAR____TtC8StocksUI34FeedHeadlinePlaybackCommandHandler_readingHistory);
    sub_1DC407B4C();
    v32 = (void *)sub_1DC407D38();
    v24(v9, v54);
    v33 = objc_msgSend(v32, sel_identifier);
    swift_unknownObjectRelease();
    if (!v33)
    {
      sub_1DC408A4C();
      v33 = (id)sub_1DC408A1C();
      swift_bridgeObjectRelease();
    }
    v34 = objc_msgSend(v31, sel_hasArticleCompletedListening_, v33);

    v35 = sub_1DC40784C();
    v36 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 104);
    if (v34)
      v37 = (unsigned int *)MEMORY[0x1E0D5B8B8];
    else
      v37 = (unsigned int *)MEMORY[0x1E0D5B8A8];
    v43 = *v37;
    v44 = v56;
    return v36(v44, v43, v35);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_17:
  sub_1DC401F84();
  v38 = (uint64_t)v52;
  sub_1DC402740();
  swift_release();
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    sub_1DC27A2C4();
    v41 = v38 + *(int *)(v45 + 64);
    v42 = (unsigned int *)MEMORY[0x1E0D5B8B0];
    goto LABEL_23;
  }
  if (EnumCaseMultiPayload == 1)
  {
    sub_1DC27A3D0();
    v41 = v38 + *(int *)(v40 + 64);
    v42 = (unsigned int *)MEMORY[0x1E0D5B8A0];
LABEL_23:
    v46 = *v42;
    v47 = sub_1DC40784C();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 104))(v56, v46, v47);
    v48 = sub_1DC401C18();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 8))(v41, v48);
    return sub_1DC0926D8(v38, (uint64_t (*)(_QWORD))type metadata accessor for StocksAudioTrack);
  }
  v50 = *MEMORY[0x1E0D5B8A8];
  v35 = sub_1DC40784C();
  v36 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 104);
  v44 = v56;
  v43 = v50;
  return v36(v44, v43, v35);
}

uint64_t sub_1DC373254(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_1DC373370(a1, a2, a4, a5, a6);
}

uint64_t sub_1DC373280@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC372D80(a1);
}

uint64_t sub_1DC373318()
{
  return sub_1DC080808(&qword_1F0352958, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5B8C0], MEMORY[0x1E0D5B898]);
}

uint64_t sub_1DC373344()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1DC373368(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1DC3727E8(a1, a2, v2);
}

uint64_t sub_1DC373370(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __n128 v40;
  uint64_t v41;
  char *v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(char *, uint64_t);
  uint64_t v49;
  char *v50;
  uint64_t v51;
  void (*v52)(uint64_t, char *, uint64_t);
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  char *v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  __int128 v87;
  __int128 v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;

  v83 = a4;
  v84 = a5;
  v75 = a3;
  v76 = a2;
  v77 = a1;
  sub_1DC31644C();
  MEMORY[0x1E0C80A78](v5);
  v63 = (char *)&v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v66 = (char *)&v61 - v8;
  sub_1DC1A76B0();
  v69 = v9;
  v68 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v62 = (char *)&v61 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v65 = (char *)&v61 - v12;
  sub_1DC373B68(0);
  MEMORY[0x1E0C80A78](v13);
  v73 = (char *)&v61 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1DC407E10();
  v81 = *(_QWORD *)(v15 - 8);
  v82 = v15;
  MEMORY[0x1E0C80A78](v15);
  v67 = (char *)&v61 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v74 = (char *)&v61 - v18;
  v19 = sub_1DC407F54();
  v79 = *(_QWORD *)(v19 - 8);
  v80 = v19;
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v61 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v22);
  v86 = (char *)&v61 - v23;
  v78 = sub_1DC40814C();
  v24 = *(_QWORD *)(v78 - 8);
  MEMORY[0x1E0C80A78](v78);
  v26 = (char *)&v61 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v27);
  v85 = (char *)&v61 - v28;
  v29 = sub_1DC407D50();
  v30 = *(_QWORD *)(v29 - 8);
  MEMORY[0x1E0C80A78](v29);
  v32 = (char *)&v61 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v33);
  v35 = (char *)&v61 - v34;
  sub_1DC1EF064();
  v72 = v36;
  v71 = *(_QWORD *)(v36 - 8);
  MEMORY[0x1E0C80A78](v36);
  v70 = (char *)&v61 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = sub_1DC40784C();
  v39 = *(_QWORD *)(v38 - 8);
  v40 = MEMORY[0x1E0C80A78](v38);
  v42 = (char *)&v61 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v39 + 16))(v42, v83, v38, v40);
  v43 = (*(uint64_t (**)(char *, uint64_t))(v39 + 88))(v42, v38);
  if (v43 == *MEMORY[0x1E0D5B8A8])
    goto LABEL_2;
  if (v43 == *MEMORY[0x1E0D5B8B0])
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v24 + 104))(v26, *MEMORY[0x1E0D5E7A8], v78);
    (*(void (**)(char *, _QWORD, uint64_t))(v79 + 104))(v21, *MEMORY[0x1E0D5DBC8], v80);
    (*(void (**)(char *, _QWORD, uint64_t))(v81 + 104))(v67, *MEMORY[0x1E0D5D498], v82);
    v87 = 0u;
    v88 = 0u;
    v50 = v65;
    sub_1DC40808C();
    swift_getObjectType();
    sub_1DC406A3C();
    v51 = v68;
    v52 = *(void (**)(uint64_t, char *, uint64_t))(v68 + 16);
    v53 = &v91;
LABEL_11:
    v54 = *(v53 - 32);
    v55 = v69;
    v52(v54, v50, v69);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v51 + 56))(v54, 0, 1, v55);
    sub_1DC404AD4();
    swift_release();
    sub_1DC0926D8(v54, (uint64_t (*)(_QWORD))sub_1DC31644C);
    return (*(uint64_t (**)(char *, uint64_t))(v51 + 8))(v50, v55);
  }
  if (v43 == *MEMORY[0x1E0D5B8A0])
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v24 + 104))(v26, *MEMORY[0x1E0D5E7A8], v78);
    (*(void (**)(char *, _QWORD, uint64_t))(v79 + 104))(v21, *MEMORY[0x1E0D5DBC8], v80);
    (*(void (**)(char *, _QWORD, uint64_t))(v81 + 104))(v67, *MEMORY[0x1E0D5D498], v82);
    v87 = 0u;
    v88 = 0u;
    v50 = v62;
    sub_1DC40808C();
    swift_getObjectType();
    sub_1DC406A48();
    v51 = v68;
    v52 = *(void (**)(uint64_t, char *, uint64_t))(v68 + 16);
    v53 = &v90;
    goto LABEL_11;
  }
  if (v43 != *MEMORY[0x1E0D5B8B8])
    return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v42, v38);
LABEL_2:
  if (v84)
  {
    sub_1DC405410();
    sub_1DC373B84();
    sub_1DC4018AC();
    if ((swift_dynamicCast() & 1) != 0)
    {
      v44 = v89;
      v45 = *(_QWORD *)(v64 + OBJC_IVAR____TtC8StocksUI34FeedHeadlinePlaybackCommandHandler_audioPlaybackContext + 24);
      v46 = *(_QWORD *)(v64 + OBJC_IVAR____TtC8StocksUI34FeedHeadlinePlaybackCommandHandler_audioPlaybackContext + 32);
      __swift_project_boxed_opaque_existential_1((_QWORD *)(v64 + OBJC_IVAR____TtC8StocksUI34FeedHeadlinePlaybackCommandHandler_audioPlaybackContext), v45);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v46 + 8))(v44, v45, v46);
      swift_release();
    }
  }
  sub_1DC407B4C();
  v47 = sub_1DC407D38();
  v48 = *(void (**)(char *, uint64_t))(v30 + 8);
  v48(v35, v29);
  v89 = v47;
  (*(void (**)(char *, _QWORD, uint64_t))(v24 + 104))(v85, *MEMORY[0x1E0D5E7A8], v78);
  (*(void (**)(char *, _QWORD, uint64_t))(v79 + 104))(v86, *MEMORY[0x1E0D5DBC8], v80);
  (*(void (**)(char *, _QWORD, uint64_t))(v81 + 104))(v74, *MEMORY[0x1E0D5D498], v82);
  sub_1DC407B4C();
  v49 = sub_1DC407D44();
  v48(v32, v29);
  if (v49)
  {
    *((_QWORD *)&v88 + 1) = swift_getObjectType();
    *(_QWORD *)&v87 = v49;
  }
  else
  {
    v87 = 0u;
    v88 = 0u;
  }
  v56 = (uint64_t)v73;
  v57 = v72;
  v58 = v71;
  v59 = v70;
  sub_1DC112C9C();
  sub_1DC40808C();
  swift_getObjectType();
  sub_1DC406A60();
  (*(void (**)(uint64_t, char *, uint64_t))(v58 + 16))(v56, v59, v57);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v58 + 56))(v56, 0, 1, v57);
  sub_1DC404AD4();
  swift_release();
  sub_1DC0926D8(v56, (uint64_t (*)(_QWORD))sub_1DC373B68);
  return (*(uint64_t (**)(char *, uint64_t))(v58 + 8))(v59, v57);
}

void sub_1DC373B68(uint64_t a1)
{
  sub_1DC089DA4(a1, &qword_1F0352F10, (uint64_t (*)(uint64_t))sub_1DC1EF064, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

unint64_t sub_1DC373B84()
{
  unint64_t result;

  result = qword_1EDB29C40;
  if (!qword_1EDB29C40)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EDB29C40);
  }
  return result;
}

void sub_1DC373BD8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  int64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t i;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  id v15;
  uint64_t v16;

  v3 = a1 + 64;
  v4 = 1 << *(_BYTE *)(a1 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a1 + 64);
  v7 = v1 + OBJC_IVAR____TtC8StocksUI34FeedHeadlinePlaybackCommandHandler_commandCenter;
  v8 = (unint64_t)(v4 + 63) >> 6;
  swift_bridgeObjectRetain();
  v9 = 0;
  v16 = v3;
  if (v6)
    goto LABEL_6;
LABEL_7:
  v12 = v9 + 1;
  if (!__OFADD__(v9, 1))
  {
    if (v12 < v8)
    {
      v13 = *(_QWORD *)(v3 + 8 * v12);
      ++v9;
      if (v13)
        goto LABEL_20;
      v9 = v12 + 1;
      if (v12 + 1 >= v8)
        goto LABEL_25;
      v13 = *(_QWORD *)(v3 + 8 * v9);
      if (v13)
        goto LABEL_20;
      v9 = v12 + 2;
      if (v12 + 2 >= v8)
        goto LABEL_25;
      v13 = *(_QWORD *)(v3 + 8 * v9);
      if (v13)
      {
LABEL_20:
        v6 = (v13 - 1) & v13;
        for (i = __clz(__rbit64(v13)) + (v9 << 6); ; i = v10 | (v9 << 6))
        {
          v15 = *(id *)(*(_QWORD *)(a1 + 56) + 8 * i);
          if ((objc_msgSend(v15, sel_unsignedIntegerValue) & 0x2000) != 0 && MEMORY[0x1DF0CAD78](v7))
          {
            swift_getObjectType();
            sub_1DC4069A0();
            sub_1DC407B58();
            v3 = v16;
            sub_1DC404A44();
            swift_release();

            swift_unknownObjectRelease();
            if (!v6)
              goto LABEL_7;
          }
          else
          {

            if (!v6)
              goto LABEL_7;
          }
LABEL_6:
          v10 = __clz(__rbit64(v6));
          v6 &= v6 - 1;
        }
      }
      v14 = v12 + 3;
      if (v14 < v8)
      {
        v13 = *(_QWORD *)(v3 + 8 * v14);
        if (v13)
        {
          v9 = v14;
          goto LABEL_20;
        }
        while (1)
        {
          v9 = v14 + 1;
          if (__OFADD__(v14, 1))
            goto LABEL_27;
          if (v9 >= v8)
            break;
          v13 = *(_QWORD *)(v3 + 8 * v9);
          ++v14;
          if (v13)
            goto LABEL_20;
        }
      }
    }
LABEL_25:
    swift_release();
    return;
  }
  __break(1u);
LABEL_27:
  __break(1u);
}

uint64_t sub_1DC373DC0(_QWORD *a1)
{
  uint64_t result;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC089DA4(0, &qword_1EDB295A0, MEMORY[0x1E0DB6EB0], MEMORY[0x1E0DB3F60]);
  result = sub_1DC4025FC();
  if (result)
  {
    v2 = result;
    type metadata accessor for BrowsingWebUserActivityHandler();
    v3 = swift_allocObject();
    sub_1DC089DA4(0, &qword_1EDB42188, (uint64_t (*)(uint64_t))MEMORY[0x1E0DBA8A0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    sub_1DC405C50();
    v4 = swift_allocObject();
    *(_OWORD *)(v4 + 16) = xmmword_1DC40DC10;
    sub_1DC405C44();
    *(_QWORD *)(v3 + 16) = v4;
    *(_QWORD *)(v3 + 24) = v2;
    return v3;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC373EC0(_QWORD *a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC08CC60(0, (unint64_t *)&qword_1EDB29CB0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB75B0]);
  result = sub_1DC4025FC();
  if (!result)
  {
    __break(1u);
    goto LABEL_6;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC0A3390(0, &qword_1EDB2B0F0);
  result = sub_1DC402608();
  if (!v8)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC0A3390(0, (unint64_t *)&unk_1EDB28CA0);
  result = sub_1DC402608();
  if (v6)
  {
    type metadata accessor for StocksV1UserActivityHandler();
    v3 = swift_allocObject();
    sub_1DC089DA4(0, &qword_1EDB42188, (uint64_t (*)(uint64_t))MEMORY[0x1E0DBA8A0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    sub_1DC405C50();
    v4 = swift_allocObject();
    *(_OWORD *)(v4 + 16) = xmmword_1DC40DC10;
    sub_1DC405C44();
    *(_QWORD *)(v3 + 16) = v4;
    type metadata accessor for StocksActivity(0);
    sub_1DC2736B0();
    sub_1DC40424C();
    sub_1DC097DD0(&v7, v3 + OBJC_IVAR____TtC8StocksUI27StocksV1UserActivityHandler_featureAvailability);
    sub_1DC097DD0(&v5, v3 + OBJC_IVAR____TtC8StocksUI27StocksV1UserActivityHandler_stockMetadataManager);
    return v3;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1DC3740C8(_QWORD *a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  __int128 v5[2];
  __int128 v6;
  uint64_t v7;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC08CC60(0, (unint64_t *)&qword_1EDB29CB0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB75B0]);
  result = sub_1DC4025FC();
  if (!result)
  {
    __break(1u);
    goto LABEL_6;
  }
  v3 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC0A3390(0, &qword_1EDB2B0F0);
  result = sub_1DC402608();
  if (!v7)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for StocksV2UserActivityDeserializer();
  result = sub_1DC4025FC();
  if (result)
  {
    v4 = result;
    sub_1DC0824D4((uint64_t)a1, (uint64_t)v5);
    type metadata accessor for StocksV2UserActivityHandler();
    swift_allocObject();
    return sub_1DC3743A0(v3, &v6, v4, v5);
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1DC374200(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[3];
  uint64_t v11;
  uint64_t v12;

  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  v3 = type metadata accessor for BrowsingWebUserActivityHandler();
  result = sub_1DC4025FC();
  if (!result)
  {
    __break(1u);
    goto LABEL_6;
  }
  v5 = result;
  v11 = v3;
  v12 = sub_1DC080808(qword_1EDB41568, (uint64_t (*)(uint64_t))type metadata accessor for BrowsingWebUserActivityHandler, (uint64_t)&unk_1DC41E310);
  v10[0] = v5;
  sub_1DC405C2C();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  v6 = type metadata accessor for StocksV1UserActivityHandler();
  result = sub_1DC4025FC();
  if (!result)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v7 = result;
  v11 = v6;
  v12 = sub_1DC080808(&qword_1EDB41E50, (uint64_t (*)(uint64_t))type metadata accessor for StocksV1UserActivityHandler, (uint64_t)&unk_1DC414268);
  v10[0] = v7;
  sub_1DC405C2C();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  v8 = type metadata accessor for StocksV2UserActivityHandler();
  result = sub_1DC4025FC();
  if (result)
  {
    v9 = result;
    v11 = v8;
    v12 = sub_1DC080808(&qword_1EDB41E58, (uint64_t (*)(uint64_t))type metadata accessor for StocksV2UserActivityHandler, (uint64_t)&unk_1DC4311C8);
    v10[0] = v9;
    sub_1DC405C2C();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1DC3743A0(uint64_t a1, __int128 *a2, uint64_t a3, __int128 *a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  _QWORD v16[2];

  sub_1DC08CC60(0, (unint64_t *)&qword_1EDB29B50, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6C48]);
  v10 = v9;
  v11 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)v16 - v12;
  sub_1DC089DA4(0, &qword_1EDB42188, (uint64_t (*)(uint64_t))MEMORY[0x1E0DBA8A0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  sub_1DC405C50();
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1DC40DC10;
  sub_1DC405C44();
  *(_QWORD *)(v4 + 16) = v14;
  v16[1] = a1;
  type metadata accessor for StocksActivity(0);
  sub_1DC08CC60(0, (unint64_t *)&qword_1EDB29CB0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB75B0]);
  sub_1DC2736B0();
  sub_1DC40424C();
  (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(v4 + OBJC_IVAR____TtC8StocksUI27StocksV2UserActivityHandler_navigator, v13, v10);
  sub_1DC097DD0(a2, v4 + OBJC_IVAR____TtC8StocksUI27StocksV2UserActivityHandler_featureAvailability);
  *(_QWORD *)(v4 + OBJC_IVAR____TtC8StocksUI27StocksV2UserActivityHandler_userActivityDeserializer) = a3;
  sub_1DC097DD0(a4, v4 + OBJC_IVAR____TtC8StocksUI27StocksV2UserActivityHandler_resolver);
  return v4;
}

uint64_t destroy for QuoteDetailViewLayoutAttributes()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for QuoteDetailViewLayoutAttributes(uint64_t a1, uint64_t a2)
{
  __int128 v3;
  __int128 v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;

  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  v5 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v5;
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  v6 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v6;
  v7 = *(_OWORD *)(a2 + 128);
  v8 = *(_OWORD *)(a2 + 144);
  v9 = *(_OWORD *)(a2 + 160);
  v10 = *(_OWORD *)(a2 + 176);
  *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
  *(_OWORD *)(a1 + 160) = v9;
  *(_OWORD *)(a1 + 176) = v10;
  *(_OWORD *)(a1 + 128) = v7;
  *(_OWORD *)(a1 + 144) = v8;
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  v11 = *(_OWORD *)(a2 + 216);
  *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
  *(_OWORD *)(a1 + 216) = v11;
  *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
  *(_BYTE *)(a1 + 264) = *(_BYTE *)(a2 + 264);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for QuoteDetailViewLayoutAttributes(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_OWORD *)(a2 + 96);
  v5 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v5;
  *(_OWORD *)(a1 + 96) = v4;
  v6 = *(_OWORD *)(a2 + 144);
  v7 = *(_OWORD *)(a2 + 160);
  v8 = *(_OWORD *)(a2 + 176);
  *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
  *(_OWORD *)(a1 + 160) = v7;
  *(_OWORD *)(a1 + 176) = v8;
  *(_OWORD *)(a1 + 144) = v6;
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
  *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
  *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
  *(_BYTE *)(a1 + 264) = *(_BYTE *)(a2 + 264);
  return a1;
}

void *__swift_memcpy265_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x109uLL);
}

uint64_t assignWithTake for QuoteDetailViewLayoutAttributes(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRelease();
  v6 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v6;
  *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
  v7 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v7;
  v8 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v8;
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
  *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
  *(_BYTE *)(a1 + 264) = *(_BYTE *)(a2 + 264);
  return a1;
}

uint64_t getEnumTagSinglePayload for QuoteDetailViewLayoutAttributes(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 265))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 72);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for QuoteDetailViewLayoutAttributes(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 264) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 265) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 72) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 265) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for QuoteDetailViewLayoutAttributes()
{
  return &type metadata for QuoteDetailViewLayoutAttributes;
}

uint64_t sub_1DC3748E0()
{
  sub_1DC374950();
  return sub_1DC40625C();
}

unint64_t sub_1DC37490C()
{
  unint64_t result;

  result = qword_1F0352968;
  if (!qword_1F0352968)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC42B8C0, &type metadata for QuoteDetailViewLayoutAttributes);
    atomic_store(result, (unint64_t *)&qword_1F0352968);
  }
  return result;
}

unint64_t sub_1DC374950()
{
  unint64_t result;

  result = qword_1F0352970;
  if (!qword_1F0352970)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC42B8F8, &type metadata for QuoteDetailViewLayoutAttributes);
    atomic_store(result, (unint64_t *)&qword_1F0352970);
  }
  return result;
}

ValueMetadata *type metadata accessor for QuoteDetailViewLayoutAttributes.AttributionLayoutAttributes()
{
  return &type metadata for QuoteDetailViewLayoutAttributes.AttributionLayoutAttributes;
}

void destroy for QuoteDetailViewLayoutAttributes.LayoutComponent(uint64_t a1)
{

}

uint64_t initializeWithCopy for QuoteDetailViewLayoutAttributes.LayoutComponent(uint64_t a1, uint64_t a2)
{
  __int128 v3;
  void *v4;
  uint64_t v5;
  id v6;

  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  v4 = *(void **)(a2 + 32);
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 40) = v5;
  v6 = v4;
  return a1;
}

_QWORD *assignWithCopy for QuoteDetailViewLayoutAttributes.LayoutComponent(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;

  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  v4 = (void *)a2[4];
  v5 = (void *)a1[4];
  a1[4] = v4;
  v6 = v4;

  a1[5] = a2[5];
  return a1;
}

uint64_t assignWithTake for QuoteDetailViewLayoutAttributes.LayoutComponent(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  void *v5;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(void **)(a1 + 32);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);

  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for QuoteDetailViewLayoutAttributes.LayoutComponent(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for QuoteDetailViewLayoutAttributes.LayoutComponent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 32) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for QuoteDetailViewLayoutAttributes.LayoutComponent()
{
  return &type metadata for QuoteDetailViewLayoutAttributes.LayoutComponent;
}

uint64_t sub_1DC374B30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  void (**v28)(char *, char *, uint64_t);
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  _OWORD *v50;
  char *v51;
  uint64_t v52;
  void (*v53)(uint64_t *, _QWORD);
  uint64_t v54;
  int64_t v55;
  uint64_t v56;
  uint64_t *v57;
  unint64_t v58;
  void (*v59)(char *, unint64_t, uint64_t);
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  void (**v89)(uint64_t, uint64_t);
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t *v105;
  uint64_t v106[4];
  uint64_t v107;
  uint64_t v108;

  v100 = a3;
  sub_1DC376BB0(0);
  v99 = v5;
  MEMORY[0x1E0C80A78](v5);
  v98 = (uint64_t)&v80 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1DC4011BC();
  v8 = *(_QWORD *)(v7 - 8);
  v103 = v7;
  v104 = v8;
  MEMORY[0x1E0C80A78](v7);
  v102 = (char *)&v80 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v108 = sub_1DC40838C();
  v10 = *(_QWORD *)(v108 - 8);
  MEMORY[0x1E0C80A78](v108);
  v105 = (uint64_t *)((char *)&v80 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = type metadata accessor for StockFeedPool();
  v90 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v91 = v13;
  v92 = (uint64_t)&v80 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1DC4083BC();
  v94 = *(_QWORD *)(v14 - 8);
  v95 = v14;
  MEMORY[0x1E0C80A78](v14);
  v93 = (char *)&v80 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = sub_1DC400010();
  v87 = *(_QWORD *)(v88 - 8);
  MEMORY[0x1E0C80A78](v88);
  v85 = (char *)&v80 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0FEF78(0);
  MEMORY[0x1E0C80A78](v17);
  v86 = (char *)&v80 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = sub_1DC4010E4();
  v83 = *(_QWORD *)(v84 - 8);
  MEMORY[0x1E0C80A78](v84);
  v101 = (char *)&v80 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = type metadata accessor for NewsStockFeedGroup();
  MEMORY[0x1E0C80A78](v82);
  v89 = (void (**)(uint64_t, uint64_t))((char *)&v80 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1DC286108(0);
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v80 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for NewsStockFeedGroupConfigData();
  MEMORY[0x1E0C80A78](v24);
  v26 = (char *)&v80 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_1DC407EF4();
  v28 = *(void (***)(char *, char *, uint64_t))(v27 - 8);
  MEMORY[0x1E0C80A78](v27);
  v30 = (char *)&v80 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v97 = v12;
  v81 = *(int *)(v12 + 20);
  if (*(_QWORD *)(*(_QWORD *)(a1 + v81) + 16)
    || (v32 = *(_QWORD *)(a2 + OBJC_IVAR____TtC8StocksUI25NewsStockFeedGroupEmitter_featureAvailability + 24),
        v31 = *(_QWORD *)(a2 + OBJC_IVAR____TtC8StocksUI25NewsStockFeedGroupEmitter_featureAvailability + 32),
        v96 = a1,
        v80 = v31,
        __swift_project_boxed_opaque_existential_1((_QWORD *)(a2 + OBJC_IVAR____TtC8StocksUI25NewsStockFeedGroupEmitter_featureAvailability), v32), v33 = v96, a1 = v96, (sub_1DC400C1C() & 1) != 0))
  {
    v34 = a1;
    v35 = sub_1DC375580(a1);
    v80 = a2;
    sub_1DC145CD4();
    sub_1DC407444();
    sub_1DC092ED0((uint64_t)v26, (uint64_t)v23, (uint64_t (*)(_QWORD))sub_1DC286108);
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v28[6])(v23, 1, v27) == 1)
    {
      sub_1DC0926D8((uint64_t)v23, (uint64_t (*)(_QWORD))sub_1DC286108);
      v36 = v83;
      v37 = v34;
      v38 = v84;
      (*(void (**)(char *, uint64_t, uint64_t))(v83 + 16))(v101, v34, v84);
      v39 = *(_BYTE *)(v34 + *(int *)(v97 + 24));
      v40 = sub_1DC4073A8();
      v41 = (uint64_t)v86;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v86, 1, 1, v40);
      swift_bridgeObjectRetain();
      v42 = v85;
      sub_1DC400004();
      v43 = sub_1DC3FFFF8();
      v45 = v44;
      (*(void (**)(char *, uint64_t))(v87 + 8))(v42, v88);
      v46 = (uint64_t)v89;
      *v89 = (void (*)(uint64_t, uint64_t))v43;
      *(_QWORD *)(v46 + 8) = v45;
      *(_QWORD *)(v46 + 16) = v35;
      v47 = v82;
      (*(void (**)(uint64_t, char *, uint64_t))(v36 + 32))(v46 + *(int *)(v82 + 24), v101, v38);
      *(_BYTE *)(v46 + *(int *)(v47 + 28)) = v39;
      sub_1DC092ED0(v41, v46 + *(int *)(v47 + 32), (uint64_t (*)(_QWORD))sub_1DC0FEF78);
      v48 = *(_QWORD *)(v35 + 16);
      swift_bridgeObjectRelease();
      if (v48 >= *(_QWORD *)(*(_QWORD *)(v37 + v81) + 16))
      {
        sub_1DC0990BC(v46, v98, (uint64_t (*)(_QWORD))type metadata accessor for NewsStockFeedGroup);
        type metadata accessor for StockFeedGroup();
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        sub_1DC376BD4();
        v50 = (_OWORD *)(v98 + *(int *)(v49 + 48));
        sub_1DC0990BC(v46, v98, (uint64_t (*)(_QWORD))type metadata accessor for NewsStockFeedGroup);
        type metadata accessor for StockFeedGroup();
        swift_storeEnumTagMultiPayload();
        *v50 = 0u;
        v50[1] = 0u;
      }
      swift_storeEnumTagMultiPayload();
      sub_1DC089DA4(0, &qword_1EDB29670, (uint64_t (*)(uint64_t))sub_1DC376BB0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
      swift_allocObject();
      v76 = sub_1DC402D58();
      sub_1DC0926D8(v46, (uint64_t (*)(_QWORD))type metadata accessor for NewsStockFeedGroup);
    }
    else
    {
      v98 = v35;
      v96 = v34;
      v89 = (void (**)(uint64_t, uint64_t))v28;
      v28[4](v30, v23, v27);
      v51 = v30;
      v52 = *(_QWORD *)(sub_1DC4078C4() + 16);
      swift_bridgeObjectRelease();
      if (v52)
      {
        v53 = (void (*)(uint64_t *, _QWORD))sub_1DC407EE8();
        sub_1DC3CF234(&v107, 0xD000000000000020, 0x80000001DC44A620);
        swift_bridgeObjectRelease();
        v53(v106, 0);
      }
      v88 = (uint64_t)v51;
      v97 = v27;
      v54 = v98;
      v55 = *(_QWORD *)(v98 + 16);
      v56 = v108;
      if (v55)
      {
        v106[0] = MEMORY[0x1E0DEE9D8];
        sub_1DC2AD7F8(0, v55, 0);
        v57 = v105;
        v58 = v54 + ((*(unsigned __int8 *)(v104 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v104 + 80));
        v101 = *(char **)(v104 + 72);
        v59 = *(void (**)(char *, unint64_t, uint64_t))(v104 + 16);
        v60 = *MEMORY[0x1E0D5F7C8];
        do
        {
          v61 = v102;
          v62 = v103;
          v59(v102, v58, v103);
          *v57 = sub_1DC401144();
          (*(void (**)(uint64_t *, uint64_t, uint64_t))(v10 + 104))(v57, v60, v56);
          (*(void (**)(char *, uint64_t))(v104 + 8))(v61, v62);
          v63 = v106[0];
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1DC2AD7F8(0, *(_QWORD *)(v63 + 16) + 1, 1);
            v63 = v106[0];
          }
          v65 = *(_QWORD *)(v63 + 16);
          v64 = *(_QWORD *)(v63 + 24);
          v57 = v105;
          if (v65 >= v64 >> 1)
          {
            sub_1DC2AD7F8(v64 > 1, v65 + 1, 1);
            v57 = v105;
            v63 = v106[0];
          }
          *(_QWORD *)(v63 + 16) = v65 + 1;
          v56 = v108;
          (*(void (**)(unint64_t, uint64_t *, uint64_t))(v10 + 32))(v63+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(_QWORD *)(v10 + 72) * v65, v57, v108);
          v106[0] = v63;
          v58 += (unint64_t)v101;
          --v55;
        }
        while (v55);
      }
      v66 = MEMORY[0x1E0DEE9D8];
      sub_1DC285D68(MEMORY[0x1E0DEE9D8]);
      sub_1DC285D74(v66);
      sub_1DC285E94(v66);
      v67 = v93;
      v68 = sub_1DC4083B0();
      MEMORY[0x1E0C80A78](v68);
      v69 = v88;
      *(&v80 - 4) = v80;
      *(&v80 - 3) = v69;
      v70 = v100;
      *(&v80 - 2) = (uint64_t)v67;
      *(&v80 - 1) = v70;
      sub_1DC407EDC();
      sub_1DC402E0C();
      v71 = v92;
      sub_1DC0990BC(v96, v92, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedPool);
      v72 = (*(unsigned __int8 *)(v90 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v90 + 80);
      v73 = swift_allocObject();
      v74 = v98;
      *(_QWORD *)(v73 + 16) = v70;
      *(_QWORD *)(v73 + 24) = v74;
      sub_1DC092ED0(v71, v73 + v72, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedPool);
      swift_retain();
      v75 = (void *)sub_1DC402C80();
      type metadata accessor for NewsStockFeedGroupEmitter();
      v76 = sub_1DC402D10();
      swift_release();
      swift_release();

      (*(void (**)(char *, uint64_t))(v94 + 8))(v67, v95);
      v89[1](v69, v97);
    }
  }
  else
  {
    v77 = v98;
    sub_1DC352FF4(v98);
    v78 = *(_BYTE *)(v33 + *(int *)(v97 + 28));
    *(_BYTE *)(v77 + *(int *)(type metadata accessor for NewsPlacardStockFeedGroup() + 20)) = v78;
    type metadata accessor for StockFeedGroup();
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
    sub_1DC089DA4(0, &qword_1EDB29670, (uint64_t (*)(uint64_t))sub_1DC376BB0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    return sub_1DC402D58();
  }
  return v76;
}

uint64_t sub_1DC375580(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36[2];

  v2 = sub_1DC407C84();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for StockFeedPool();
  v7 = v6;
  if (*(_BYTE *)(a1 + *(int *)(v6 + 24)) == 1)
  {
    v8 = *(_QWORD *)(a1 + *(int *)(v6 + 20));
    if (*(_QWORD *)(v8 + 16) <= 1uLL)
      v9 = 1;
    else
      v9 = *(_QWORD *)(v8 + 16);
    if (qword_1EDB2CE08 != -1)
      swift_once();
    v10 = (void *)qword_1EDB2CE00;
    sub_1DC0E7FF0();
    v11 = swift_allocObject();
    v12 = MEMORY[0x1E0DEB418];
    *(_OWORD *)(v11 + 16) = xmmword_1DC40DC10;
    v13 = MEMORY[0x1E0DEB490];
    *(_QWORD *)(v11 + 56) = v12;
    *(_QWORD *)(v11 + 64) = v13;
    *(_QWORD *)(v11 + 32) = v9;
    v14 = v10;
    sub_1DC408FE0();
    sub_1DC403F28();

    swift_bridgeObjectRelease();
    v15 = sub_1DC2F73D4(v9, v8);
    v17 = v16;
    v19 = v18;
    v21 = v20;
    if ((v20 & 1) == 0)
    {
      swift_bridgeObjectRetain();
LABEL_9:
      v22 = sub_1DC32B9B0(v15, v17, v19, v21);
      swift_unknownObjectRelease();
      return v22;
    }
    sub_1DC409A0C();
    swift_unknownObjectRetain_n();
    swift_bridgeObjectRetain();
    v32 = swift_dynamicCastClass();
    if (!v32)
    {
      swift_unknownObjectRelease();
      v32 = MEMORY[0x1E0DEE9D8];
    }
    v33 = *(_QWORD *)(v32 + 16);
    swift_release();
    if (__OFSUB__(v21 >> 1, v19))
    {
      __break(1u);
    }
    else if (v33 == (v21 >> 1) - v19)
    {
      v31 = swift_dynamicCastClass();
      swift_unknownObjectRelease();
      if (!v31)
        goto LABEL_24;
      return v31;
    }
    swift_unknownObjectRelease();
    goto LABEL_9;
  }
  type metadata accessor for NewsStockFeedGroupKnobs();
  sub_1DC4078E8();
  sub_1DC407978();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v24 = sub_1DC2F73D4(v36[1], *(_QWORD *)(a1 + *(int *)(v7 + 20)));
  v26 = v25;
  v28 = v27;
  v30 = v29;
  if ((v29 & 1) == 0)
  {
    swift_bridgeObjectRetain();
LABEL_12:
    v31 = sub_1DC32B9B0(v24, v26, v28, v30);
    swift_unknownObjectRelease();
    return v31;
  }
  sub_1DC409A0C();
  swift_unknownObjectRetain_n();
  swift_bridgeObjectRetain();
  v34 = swift_dynamicCastClass();
  if (!v34)
  {
    swift_unknownObjectRelease();
    v34 = MEMORY[0x1E0DEE9D8];
  }
  v35 = *(_QWORD *)(v34 + 16);
  swift_release();
  if (__OFSUB__(v30 >> 1, v28))
  {
    __break(1u);
    goto LABEL_29;
  }
  if (v35 != (v30 >> 1) - v28)
  {
LABEL_29:
    swift_unknownObjectRelease();
    goto LABEL_12;
  }
  v31 = swift_dynamicCastClass();
  swift_unknownObjectRelease();
  if (!v31)
  {
LABEL_24:
    swift_unknownObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
  return v31;
}

uint64_t sub_1DC3758E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  char *v42;
  char *v43;
  char *v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char v57;

  v49 = a4;
  v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1DC089DA4(0, (unint64_t *)&unk_1EDB2B0B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5E5A8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v8);
  v43 = (char *)&v42 - v9;
  sub_1DC089DA4(0, &qword_1EDB2B0F8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5F240], v7);
  MEMORY[0x1E0C80A78](v10);
  v44 = (char *)&v42 - v11;
  sub_1DC089DA4(0, (unint64_t *)&qword_1EDB2AE68, (uint64_t (*)(uint64_t))sub_1DC12D9D0, v7);
  MEMORY[0x1E0C80A78](v12);
  v42 = (char *)&v42 - v13;
  v14 = sub_1DC408164();
  v55 = *(_QWORD *)(v14 - 8);
  v56 = v14;
  MEMORY[0x1E0C80A78](v14);
  v54 = (char *)&v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC089DA4(0, &qword_1EDB273E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52E40], v7);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v42 - v17;
  v53 = sub_1DC407FCC();
  v51 = *(_QWORD *)(v53 - 8);
  MEMORY[0x1E0C80A78](v53);
  v20 = (char *)&v42 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_1DC407EF4();
  v22 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  v24 = (char *)&v42 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8StocksUI25NewsStockFeedGroupEmitter_formatService + 24);
  v46 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8StocksUI25NewsStockFeedGroupEmitter_formatService + 32);
  v47 = v25;
  v45 = __swift_project_boxed_opaque_existential_1((_QWORD *)(a1 + OBJC_IVAR____TtC8StocksUI25NewsStockFeedGroupEmitter_formatService), v25);
  v50 = v22;
  v26 = *(void (**)(char *, uint64_t, uint64_t))(v22 + 16);
  v48 = v24;
  v52 = v21;
  v26(v24, a2, v21);
  sub_1DC089DA4(0, &qword_1EDB3FFB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5F978], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v27 = sub_1DC4083BC();
  v28 = *(_QWORD *)(v27 - 8);
  v29 = (*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
  v30 = swift_allocObject();
  *(_OWORD *)(v30 + 16) = xmmword_1DC40DC10;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v28 + 16))(v30 + v29, a3, v27);
  v31 = sub_1DC40709C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v18, 1, 1, v31);
  v32 = MEMORY[0x1E0DEE9D8];
  sub_1DC1E8D18(MEMORY[0x1E0DEE9D8]);
  sub_1DC1E8D18(v32);
  sub_1DC1E8E3C(v32);
  sub_1DC1E8E48(v32);
  sub_1DC1E8F68(v32);
  sub_1DC1E8F74(v32);
  v33 = v43;
  sub_1DC407FC0();
  sub_1DC12D9D0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v42, 1, 1, v34);
  v35 = sub_1DC408320();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v44, 1, 1, v35);
  v57 = 0;
  sub_1DC08CBF0(0, (unint64_t *)&unk_1EDB2B100, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedServiceConfig, sub_1DC1D0ED8, MEMORY[0x1E0D5F438]);
  swift_allocObject();
  swift_retain();
  sub_1DC408338();
  v36 = sub_1DC40811C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v33, 1, 1, v36);
  v37 = qword_1EDB2CE08;
  (id)*MEMORY[0x1E0D58680];
  if (v37 != -1)
    swift_once();
  (id)qword_1EDB2CE00;
  v38 = v54;
  sub_1DC408158();
  v39 = v48;
  v40 = sub_1DC408014();
  (*(void (**)(char *, uint64_t))(v55 + 8))(v38, v56);
  (*(void (**)(char *, uint64_t))(v51 + 8))(v20, v53);
  (*(void (**)(char *, uint64_t))(v50 + 8))(v39, v52);
  return v40;
}

uint64_t sub_1DC375E40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  _BYTE *v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(_BYTE *, _BYTE *, uint64_t);
  _BYTE *v34;
  void (*v35)(_BYTE *, _QWORD, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  _BYTE *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _OWORD *v46;
  uint64_t v47;
  _BYTE v49[4];
  int v50;
  _BYTE *v51;
  uint64_t v52;
  uint64_t v53;
  _BYTE *v54;
  uint64_t *v55;
  uint64_t v56;
  _BYTE *v57;
  uint64_t v58;
  uint64_t v59;
  _BYTE *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _BYTE *v65;
  uint64_t v66;

  v66 = a5;
  v62 = a4;
  v63 = a3;
  v61 = a1;
  sub_1DC376BB0(0);
  v64 = v5;
  MEMORY[0x1E0C80A78](v5);
  v65 = &v49[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = sub_1DC400010();
  v58 = *(_QWORD *)(v7 - 8);
  v59 = v7;
  MEMORY[0x1E0C80A78](v7);
  v57 = &v49[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1DC0FEF78(0);
  MEMORY[0x1E0C80A78](v9);
  v54 = &v49[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = sub_1DC4010E4();
  v52 = *(_QWORD *)(v11 - 8);
  v53 = v11;
  MEMORY[0x1E0C80A78](v11);
  v51 = &v49[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v56 = type metadata accessor for NewsStockFeedGroup();
  MEMORY[0x1E0C80A78](v56);
  v55 = (uint64_t *)&v49[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1DC089DA4(0, &qword_1EDB275B8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5AE10], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v14);
  v60 = &v49[-v15];
  v16 = sub_1DC40799C();
  MEMORY[0x1E0C80A78](v16);
  MEMORY[0x1E0C80A78](v17);
  v18 = sub_1DC407EDC();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v21 = &v49[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v22 = sub_1DC4073A8();
  v23 = *(_QWORD *)(v22 - 8);
  v24 = MEMORY[0x1E0C80A78](v22);
  v26 = &v49[-((v25 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(_BYTE *, uint64_t, uint64_t, __n128))(v19 + 16))(v21, v61, v18, v24);
  sub_1DC145CD4();
  sub_1DC407438();
  sub_1DC407438();
  sub_1DC12D9D0();
  sub_1DC4076CC();
  v27 = sub_1DC4075C4();
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v60, 1, 1, v27);
  sub_1DC407390();
  v29 = v51;
  v28 = v52;
  v30 = v66;
  v31 = v53;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v52 + 16))(v51, v66, v53);
  v32 = type metadata accessor for StockFeedPool();
  v50 = *(unsigned __int8 *)(v30 + *(int *)(v32 + 24));
  v33 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v23 + 16);
  v34 = v54;
  v60 = v26;
  v33(v54, v26, v22);
  v61 = v23;
  v35 = *(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v23 + 56);
  v36 = (uint64_t)v34;
  v63 = v22;
  v35(v34, 0, 1, v22);
  v37 = v62;
  swift_bridgeObjectRetain();
  v38 = v57;
  sub_1DC400004();
  v39 = sub_1DC3FFFF8();
  v41 = v40;
  (*(void (**)(_BYTE *, uint64_t))(v58 + 8))(v38, v59);
  v42 = v55;
  *v55 = v39;
  v42[1] = v41;
  v42[2] = v37;
  v43 = v56;
  v44 = (uint64_t)v42;
  (*(void (**)(char *, _BYTE *, uint64_t))(v28 + 32))((char *)v42 + *(int *)(v56 + 24), v29, v31);
  *(_BYTE *)(v44 + *(int *)(v43 + 28)) = v50;
  sub_1DC092ED0(v36, v44 + *(int *)(v43 + 32), (uint64_t (*)(_QWORD))sub_1DC0FEF78);
  if (*(_QWORD *)(v37 + 16) >= *(_QWORD *)(*(_QWORD *)(v66 + *(int *)(v32 + 20)) + 16))
  {
    sub_1DC0990BC(v44, (uint64_t)v65, (uint64_t (*)(_QWORD))type metadata accessor for NewsStockFeedGroup);
    type metadata accessor for StockFeedGroup();
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    sub_1DC376BD4();
    v46 = &v65[*(int *)(v45 + 48)];
    sub_1DC0990BC(v44, (uint64_t)v65, (uint64_t (*)(_QWORD))type metadata accessor for NewsStockFeedGroup);
    type metadata accessor for StockFeedGroup();
    swift_storeEnumTagMultiPayload();
    *v46 = 0u;
    v46[1] = 0u;
  }
  swift_storeEnumTagMultiPayload();
  sub_1DC089DA4(0, &qword_1EDB29670, (uint64_t (*)(uint64_t))sub_1DC376BB0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  v47 = sub_1DC402D58();
  sub_1DC0926D8(v44, (uint64_t (*)(_QWORD))type metadata accessor for NewsStockFeedGroup);
  (*(void (**)(_BYTE *, uint64_t))(v61 + 8))(v60, v63);
  return v47;
}

uint64_t sub_1DC3763C4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  id v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;

  sub_1DC376BB0(0);
  v11 = v2;
  MEMORY[0x1E0C80A78](v2);
  v4 = (uint64_t *)((char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_1EDB2CE08 != -1)
    swift_once();
  v5 = (id)qword_1EDB2CE00;
  sub_1DC408FC8();
  sub_1DC0E7FF0();
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1DC40DC10;
  v12 = 0;
  v13 = 0xE000000000000000;
  v14 = a1;
  sub_1DC0A3390(0, (unint64_t *)&qword_1EDB400E0);
  sub_1DC409808();
  v8 = v12;
  v7 = v13;
  *(_QWORD *)(v6 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v6 + 64) = sub_1DC0E7FAC();
  *(_QWORD *)(v6 + 32) = v8;
  *(_QWORD *)(v6 + 40) = v7;
  sub_1DC403F28();

  swift_bridgeObjectRelease();
  v12 = 0;
  v13 = 0xE000000000000000;
  sub_1DC409730();
  sub_1DC408B48();
  v14 = a1;
  sub_1DC409808();
  v9 = v13;
  *v4 = v12;
  v4[1] = v9;
  swift_storeEnumTagMultiPayload();
  sub_1DC089DA4(0, &qword_1EDB29670, (uint64_t (*)(uint64_t))sub_1DC376BB0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  return sub_1DC402D58();
}

uint64_t sub_1DC3765EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC8StocksUI25NewsStockFeedGroupEmitter_config;
  sub_1DC145CD4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_1DC0926D8(v0 + OBJC_IVAR____TtC8StocksUI25NewsStockFeedGroupEmitter_knobs, (uint64_t (*)(_QWORD))type metadata accessor for NewsStockFeedGroupKnobs);
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC8StocksUI25NewsStockFeedGroupEmitter_formatService);
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC8StocksUI25NewsStockFeedGroupEmitter_featureAvailability);
  return swift_deallocClassInstance();
}

uint64_t sub_1DC376674()
{
  return type metadata accessor for NewsStockFeedGroupEmitter();
}

uint64_t type metadata accessor for NewsStockFeedGroupEmitter()
{
  uint64_t result;

  result = qword_1EDB363E0;
  if (!qword_1EDB363E0)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1DC3766B8()
{
  unint64_t v0;
  unint64_t v1;

  sub_1DC145CD4();
  if (v0 <= 0x3F)
  {
    type metadata accessor for NewsStockFeedGroupKnobs();
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

uint64_t sub_1DC37674C@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + OBJC_IVAR____TtC8StocksUI25NewsStockFeedGroupEmitter_config;
  sub_1DC145CD4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_1DC376794@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t *boxed_opaque_existential_1;

  v3 = *v1 + OBJC_IVAR____TtC8StocksUI25NewsStockFeedGroupEmitter_knobs;
  a1[3] = type metadata accessor for NewsStockFeedGroupKnobs();
  a1[4] = sub_1DC080808(&qword_1F034FAA8, (uint64_t (*)(uint64_t))type metadata accessor for NewsStockFeedGroupKnobs, (uint64_t)&unk_1DC431250);
  a1[5] = sub_1DC080808(&qword_1F0352978, (uint64_t (*)(uint64_t))type metadata accessor for NewsStockFeedGroupKnobs, (uint64_t)&unk_1DC431228);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a1);
  return sub_1DC0990BC(v3, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(_QWORD))type metadata accessor for NewsStockFeedGroupKnobs);
}

uint64_t sub_1DC37682C()
{
  sub_1DC089DA4(0, (unint64_t *)&qword_1EDB29700, (uint64_t (*)(uint64_t))sub_1DC0D11C4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  return sub_1DC402D58();
}

uint64_t sub_1DC37688C()
{
  void *v0;
  void *v1;
  uint64_t v2;

  type metadata accessor for StockFeedPool();
  sub_1DC402E0C();
  swift_retain();
  v0 = (void *)sub_1DC402C80();
  sub_1DC376BB0(0);
  sub_1DC402D10();
  swift_release();
  swift_release();

  v1 = (void *)sub_1DC402C80();
  v2 = sub_1DC402D7C();
  swift_release();

  return v2;
}

uint64_t sub_1DC376960()
{
  sub_1DC145CD4();
  return sub_1DC40742C();
}

uint64_t sub_1DC376994@<X0>(uint64_t *a1@<X8>)
{
  uint64_t inited;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1DC089DA4(0, &qword_1EDB40070, (uint64_t (*)(uint64_t))sub_1DC0CFB4C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DC40DC10;
  *(_QWORD *)(inited + 32) = 0x696669746E656469;
  *(_QWORD *)(inited + 40) = 0xEA00000000007265;
  sub_1DC145CD4();
  v3 = sub_1DC40742C();
  *(_QWORD *)(inited + 72) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(inited + 48) = v3;
  *(_QWORD *)(inited + 56) = v4;
  sub_1DC0CF9B8(inited);
  sub_1DC089DA4(0, &qword_1EDB294A0, (uint64_t (*)(uint64_t))type metadata accessor for NewsStockFeedGroupEmitter, MEMORY[0x1E0DB3C70]);
  a1[3] = v5;
  a1[4] = sub_1DC376D50();
  __swift_allocate_boxed_opaque_existential_1(a1);
  return sub_1DC402878();
}

uint64_t sub_1DC376AB0()
{
  sub_1DC080808(&qword_1EDB363D0, (uint64_t (*)(uint64_t))type metadata accessor for NewsStockFeedGroupEmitter, (uint64_t)&unk_1DC42B9E0);
  return sub_1DC40286C();
}

uint64_t sub_1DC376AF0()
{
  return sub_1DC080808(&qword_1EDB363D8, (uint64_t (*)(uint64_t))type metadata accessor for NewsStockFeedGroupEmitter, (uint64_t)&unk_1DC42B9B8);
}

uint64_t sub_1DC376B1C()
{
  return sub_1DC080808(&qword_1EDB363C8, (uint64_t (*)(uint64_t))type metadata accessor for NewsStockFeedGroupEmitter, (uint64_t)&unk_1DC42BA10);
}

uint64_t sub_1DC376B48()
{
  return sub_1DC080808(&qword_1EDB363D0, (uint64_t (*)(uint64_t))type metadata accessor for NewsStockFeedGroupEmitter, (uint64_t)&unk_1DC42B9E0);
}

uint64_t sub_1DC376B74()
{
  return sub_1DC4078D0();
}

uint64_t sub_1DC376B98(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1DC374B30(a1, a2, v2);
}

void sub_1DC376BB0(uint64_t a1)
{
  sub_1DC08CBF0(a1, &qword_1EDB2AED0, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedGroup, (uint64_t (*)(void))sub_1DC35466C, MEMORY[0x1E0D5B9F8]);
}

void sub_1DC376BD4()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EDB27728)
  {
    type metadata accessor for StockFeedGroup();
    sub_1DC0D11C4();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EDB27728);
  }
}

uint64_t sub_1DC376C40()
{
  uint64_t *v0;

  return sub_1DC3758E4(v0[2], v0[3], v0[4], v0[5]);
}

uint64_t sub_1DC376C5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for StockFeedPool() - 8) + 80);
  v2 = (v1 + 32) & ~v1;
  swift_release();
  swift_bridgeObjectRelease();
  v3 = sub_1DC4010E4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v0 + v2, v3);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1DC376CF4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for StockFeedPool() - 8) + 80);
  return sub_1DC375E40(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), v2 + ((v5 + 32) & ~v5));
}

unint64_t sub_1DC376D50()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EDB29498;
  if (!qword_1EDB29498)
  {
    sub_1DC089DA4(255, &qword_1EDB294A0, (uint64_t (*)(uint64_t))type metadata accessor for NewsStockFeedGroupEmitter, MEMORY[0x1E0DB3C70]);
    result = MEMORY[0x1DF0CAB8C](MEMORY[0x1E0DB3C80], v1);
    atomic_store(result, (unint64_t *)&qword_1EDB29498);
  }
  return result;
}

void sub_1DC376DB0()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;

  v0 = sub_1DC407B04();
  MEMORY[0x1E0C80A78](v0);
  v1 = type metadata accessor for StockFeedLayoutModel();
  MEMORY[0x1E0C80A78](v1);
  sub_1DC142304();
  sub_1DC404DE0();
  v2 = (char *)sub_1DC376E8C + 4 * byte_1DC42BAD0[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1DC376E8C()
{
  uint64_t v0;
  uint64_t v1;

  sub_1DC1426A0();
  sub_1DC0926D8(v0 + *(int *)(v1 + 48), (uint64_t (*)(_QWORD))type metadata accessor for StockFeedMastheadViewLayoutAttributes);
  return sub_1DC0926D8(v0, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedMastheadModel);
}

void sub_1DC376FAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v2, v0, v1);
  sub_1DC4075D0();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v1);
  JUMPOUT(0x1DC376F8CLL);
}

uint64_t type metadata accessor for StockFeedBlueprintCellPrefetcher()
{
  return objc_opt_self();
}

void sub_1DC37700C()
{
  sub_1DC376DB0();
}

char *sub_1DC37702C(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v5;
  objc_class *ObjectType;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  id v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  Class v23;
  char *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  objc_super v29;

  v5 = v4;
  ObjectType = (objc_class *)swift_getObjectType();
  sub_1DC0835D8(0, &qword_1EDB2A928, MEMORY[0x1E0DBC320]);
  v12 = v11;
  v13 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v15 = (id *)((char *)&v29.receiver - v14);
  v16 = OBJC_IVAR____TtC8StocksUI22StockSectionFooterView_moreLabel;
  v17 = objc_allocWithZone(MEMORY[0x1E0DC3990]);
  v18 = v5;
  *(_QWORD *)&v5[v16] = objc_msgSend(v17, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v19 = OBJC_IVAR____TtC8StocksUI22StockSectionFooterView_symbolLabel;
  *(_QWORD *)&v18[v19] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v20 = OBJC_IVAR____TtC8StocksUI22StockSectionFooterView_arrowShapeView;
  *(_QWORD *)&v18[v20] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ShapeView()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v21 = OBJC_IVAR____TtC8StocksUI22StockSectionFooterView_topLineView;
  *(_QWORD *)&v18[v21] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v22 = OBJC_IVAR____TtC8StocksUI22StockSectionFooterView_onTap;
  sub_1DC0835D8(0, (unint64_t *)&qword_1EDB2A930, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DBC348]);
  *(_QWORD *)&v18[v22] = objc_msgSend(objc_allocWithZone(v23), sel_init);

  v29.receiver = v18;
  v29.super_class = ObjectType;
  v24 = (char *)objc_msgSendSuper2(&v29, sel_initWithFrame_, a1, a2, a3, a4);
  v25 = *(_QWORD *)&v24[OBJC_IVAR____TtC8StocksUI22StockSectionFooterView_moreLabel];
  v26 = v24;
  objc_msgSend(v26, sel_addSubview_, v25);
  objc_msgSend(v26, sel_addSubview_, *(_QWORD *)&v26[OBJC_IVAR____TtC8StocksUI22StockSectionFooterView_symbolLabel]);
  objc_msgSend(v26, sel_addSubview_, *(_QWORD *)&v26[OBJC_IVAR____TtC8StocksUI22StockSectionFooterView_arrowShapeView]);
  objc_msgSend(v26, sel_addSubview_, *(_QWORD *)&v26[OBJC_IVAR____TtC8StocksUI22StockSectionFooterView_topLineView]);
  *v15 = 1;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v13 + 104))(v15, *MEMORY[0x1E0DBC310], v12);
  v27 = v26;

  (*(void (**)(_QWORD *, uint64_t))(v13 + 8))(v15, v12);
  objc_msgSend(v27, sel_setIsAccessibilityElement_, 1);
  objc_msgSend(v27, sel_setAccessibilityTraits_, *MEMORY[0x1E0DC4660]);

  return v27;
}

void sub_1DC3773A0()
{
  sub_1DC11DEC8(&qword_1EDB341E8, (uint64_t)&unk_1DC42BBB0);
  JUMPOUT(0x1DF0C7418);
}

void sub_1DC3774E4()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  Class v6;

  v1 = OBJC_IVAR____TtC8StocksUI22StockSectionFooterView_moreLabel;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v2 = OBJC_IVAR____TtC8StocksUI22StockSectionFooterView_symbolLabel;
  *(_QWORD *)&v0[v2] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v3 = OBJC_IVAR____TtC8StocksUI22StockSectionFooterView_arrowShapeView;
  *(_QWORD *)&v0[v3] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ShapeView()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v4 = OBJC_IVAR____TtC8StocksUI22StockSectionFooterView_topLineView;
  *(_QWORD *)&v0[v4] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v5 = OBJC_IVAR____TtC8StocksUI22StockSectionFooterView_onTap;
  sub_1DC0835D8(0, (unint64_t *)&qword_1EDB2A930, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DBC348]);
  *(_QWORD *)&v0[v5] = objc_msgSend(objc_allocWithZone(v6), sel_init);

  sub_1DC409838();
  __break(1u);
}

char *sub_1DC377638(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v5;
  objc_class *ObjectType;
  uint64_t v11;
  id v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  objc_super v21;

  v5 = v4;
  ObjectType = (objc_class *)swift_getObjectType();
  v11 = OBJC_IVAR____TtC8StocksUI14StockTitleView_titleLabel;
  v12 = objc_allocWithZone(MEMORY[0x1E0DC3990]);
  v13 = v4;
  *(_QWORD *)&v5[v11] = objc_msgSend(v12, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v14 = OBJC_IVAR____TtC8StocksUI14StockTitleView_nameLabel;
  *(_QWORD *)&v13[v14] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v15 = OBJC_IVAR____TtC8StocksUI14StockTitleView_backgroundView;
  *(_QWORD *)&v13[v15] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v16 = OBJC_IVAR____TtC8StocksUI14StockTitleView_quoteSummaryView;
  *(_QWORD *)&v13[v16] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for QuoteSummaryView()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);

  v21.receiver = v13;
  v21.super_class = ObjectType;
  v17 = (char *)objc_msgSendSuper2(&v21, sel_initWithFrame_, a1, a2, a3, a4);
  v18 = *(_QWORD *)&v17[OBJC_IVAR____TtC8StocksUI14StockTitleView_backgroundView];
  v19 = v17;
  objc_msgSend(v19, sel_addSubview_, v18);
  objc_msgSend(v19, sel_addSubview_, *(_QWORD *)&v19[OBJC_IVAR____TtC8StocksUI14StockTitleView_titleLabel]);
  objc_msgSend(v19, sel_addSubview_, *(_QWORD *)&v19[OBJC_IVAR____TtC8StocksUI14StockTitleView_nameLabel]);
  objc_msgSend(v19, sel_addSubview_, *(_QWORD *)&v19[OBJC_IVAR____TtC8StocksUI14StockTitleView_quoteSummaryView]);

  return v19;
}

void sub_1DC377894()
{
  sub_1DC12AF54(&qword_1EDB2D938, (uint64_t)&unk_1DC42BC28);
  JUMPOUT(0x1DF0C7418);
}

void sub_1DC3778CC()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = OBJC_IVAR____TtC8StocksUI14StockTitleView_titleLabel;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v2 = OBJC_IVAR____TtC8StocksUI14StockTitleView_nameLabel;
  *(_QWORD *)&v0[v2] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v3 = OBJC_IVAR____TtC8StocksUI14StockTitleView_backgroundView;
  *(_QWORD *)&v0[v3] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v4 = OBJC_IVAR____TtC8StocksUI14StockTitleView_quoteSummaryView;
  *(_QWORD *)&v0[v4] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for QuoteSummaryView()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);

  sub_1DC409838();
  __break(1u);
}

__n128 __swift_memcpy176_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __n128 result;
  __int128 v8;
  __int128 v9;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  v4 = a2[3];
  v5 = a2[4];
  v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  result = (__n128)a2[7];
  v8 = a2[8];
  v9 = a2[10];
  *(_OWORD *)(a1 + 144) = a2[9];
  *(_OWORD *)(a1 + 160) = v9;
  *(__n128 *)(a1 + 112) = result;
  *(_OWORD *)(a1 + 128) = v8;
  return result;
}

uint64_t getEnumTagSinglePayload for ForYouFeedMastheadViewLayoutAttributes(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 176))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for ForYouFeedMastheadViewLayoutAttributes(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 168) = 0;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 176) = v3;
  return result;
}

ValueMetadata *type metadata accessor for ForYouFeedMastheadViewLayoutAttributes()
{
  return &type metadata for ForYouFeedMastheadViewLayoutAttributes;
}

char *sub_1DC377AAC(char *a1, char *a2, int *a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  int *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  unsigned int (*v42)(char *, uint64_t, uint64_t);
  void (*v43)(char *, char *, uint64_t);

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v22 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v22 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1DC4010E4();
    v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v9 = a3[5];
    v10 = &a1[v9];
    v11 = &a2[v9];
    v8(&a1[v9], &a2[v9], v7);
    v12 = (int *)type metadata accessor for StockEarningsModel();
    v13 = v12[5];
    v14 = &v10[v13];
    v15 = &v11[v13];
    v16 = sub_1DC3FFFEC();
    v17 = *(_QWORD *)(v16 - 8);
    v43 = *(void (**)(char *, char *, uint64_t))(v17 + 16);
    v43(v14, v15, v16);
    v18 = v12[6];
    v19 = &v10[v18];
    v20 = &v11[v18];
    v42 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
    if (v42(&v11[v18], 1, v16))
    {
      sub_1DC089DA4(0, &qword_1EDB28AC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      v43(v19, v20, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v19, 0, 1, v16);
    }
    v23 = v12[7];
    v24 = &v10[v23];
    v25 = &v11[v23];
    v26 = sub_1DC400220();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
    v10[v12[8]] = v11[v12[8]];
    v10[v12[9]] = v11[v12[9]];
    v43(&a1[a3[6]], &a2[a3[6]], v16);
    v27 = a3[7];
    v28 = &a1[v27];
    v29 = &a2[v27];
    if (v42(&a2[v27], 1, v16))
    {
      sub_1DC089DA4(0, &qword_1EDB28AC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    }
    else
    {
      v43(v28, v29, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v28, 0, 1, v16);
    }
    v31 = a3[8];
    v32 = a3[9];
    v33 = &a1[v31];
    v34 = &a2[v31];
    v35 = *((_QWORD *)v34 + 1);
    *(_QWORD *)v33 = *(_QWORD *)v34;
    *((_QWORD *)v33 + 1) = v35;
    a1[v32] = a2[v32];
    v36 = a3[10];
    v37 = a3[11];
    v38 = &a1[v36];
    v39 = &a2[v36];
    v40 = *((_QWORD *)v39 + 1);
    *(_QWORD *)v38 = *(_QWORD *)v39;
    *((_QWORD *)v38 + 1) = v40;
    a1[v37] = a2[v37];
    *(_QWORD *)&a1[a3[12]] = *(_QWORD *)&a2[a3[12]];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1DC377D6C(uint64_t a1, int *a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  unsigned int (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v4 = sub_1DC4010E4();
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(a1, v4);
  v6 = a1 + a2[5];
  v5(v6, v4);
  v7 = (int *)type metadata accessor for StockEarningsModel();
  v8 = v6 + v7[5];
  v9 = sub_1DC3FFFEC();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
  v11(v8, v9);
  v12 = v6 + v7[6];
  v13 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  if (!v13(v12, 1, v9))
    v11(v12, v9);
  v14 = v6 + v7[7];
  v15 = sub_1DC400220();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14, v15);
  v11(a1 + a2[6], v9);
  v16 = a1 + a2[7];
  if (!v13(v16, 1, v9))
    v11(v16, v9);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DC377EB0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  void *v13;
  const void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  const void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  const void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  unsigned int (*v40)(uint64_t, uint64_t, uint64_t);
  void (*v41)(void *, const void *, uint64_t);

  v6 = sub_1DC4010E4();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v7(a1 + v8, a2 + v8, v6);
  v11 = (int *)type metadata accessor for StockEarningsModel();
  v12 = v11[5];
  v13 = (void *)(v9 + v12);
  v14 = (const void *)(v10 + v12);
  v15 = sub_1DC3FFFEC();
  v16 = *(_QWORD *)(v15 - 8);
  v41 = *(void (**)(void *, const void *, uint64_t))(v16 + 16);
  v41(v13, v14, v15);
  v17 = v11[6];
  v18 = (void *)(v9 + v17);
  v19 = (const void *)(v10 + v17);
  v40 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48);
  if (v40(v10 + v17, 1, v15))
  {
    sub_1DC089DA4(0, &qword_1EDB28AC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    v41(v18, v19, v15);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v18, 0, 1, v15);
  }
  v21 = v11[7];
  v22 = v9 + v21;
  v23 = v10 + v21;
  v24 = sub_1DC400220();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v22, v23, v24);
  *(_BYTE *)(v9 + v11[8]) = *(_BYTE *)(v10 + v11[8]);
  *(_BYTE *)(v9 + v11[9]) = *(_BYTE *)(v10 + v11[9]);
  v41((void *)(a1 + a3[6]), (const void *)(a2 + a3[6]), v15);
  v25 = a3[7];
  v26 = (void *)(a1 + v25);
  v27 = (const void *)(a2 + v25);
  if (v40(a2 + v25, 1, v15))
  {
    sub_1DC089DA4(0, &qword_1EDB28AC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
  }
  else
  {
    v41(v26, v27, v15);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v26, 0, 1, v15);
  }
  v29 = a3[8];
  v30 = a3[9];
  v31 = (_QWORD *)(a1 + v29);
  v32 = (_QWORD *)(a2 + v29);
  v33 = v32[1];
  *v31 = *v32;
  v31[1] = v33;
  *(_BYTE *)(a1 + v30) = *(_BYTE *)(a2 + v30);
  v34 = a3[10];
  v35 = a3[11];
  v36 = (_QWORD *)(a1 + v34);
  v37 = (_QWORD *)(a2 + v34);
  v38 = v37[1];
  *v36 = *v37;
  v36[1] = v38;
  *(_BYTE *)(a1 + v35) = *(_BYTE *)(a2 + v35);
  *(_QWORD *)(a1 + a3[12]) = *(_QWORD *)(a2 + a3[12]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1DC378144(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  const void *v19;
  uint64_t (*v20)(uint64_t, uint64_t, uint64_t);
  int v21;
  int v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  const void *v31;
  int v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v42;
  void (*v43)(uint64_t, uint64_t, uint64_t);
  int *v44;

  v6 = sub_1DC4010E4();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v44 = a3;
  v8 = a3[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v7(a1 + v8, a2 + v8, v6);
  v11 = (int *)type metadata accessor for StockEarningsModel();
  v12 = v11[5];
  v13 = v9 + v12;
  v14 = v10 + v12;
  v15 = sub_1DC3FFFEC();
  v16 = *(_QWORD *)(v15 - 8);
  v43 = *(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 24);
  v43(v13, v14, v15);
  v17 = v11[6];
  v18 = (void *)(v9 + v17);
  v19 = (const void *)(v10 + v17);
  v42 = v16;
  v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 48);
  v21 = v20(v9 + v17, 1, v15);
  v22 = v20((uint64_t)v19, 1, v15);
  if (v21)
  {
    if (!v22)
    {
      (*(void (**)(void *, const void *, uint64_t))(v42 + 16))(v18, v19, v15);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v18, 0, 1, v15);
LABEL_7:
      v24 = v43;
      goto LABEL_8;
    }
LABEL_6:
    sub_1DC089DA4(0, &qword_1EDB28AC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    goto LABEL_7;
  }
  if (v22)
  {
    (*(void (**)(void *, uint64_t))(v42 + 8))(v18, v15);
    goto LABEL_6;
  }
  v24 = v43;
  v43((uint64_t)v18, (uint64_t)v19, v15);
LABEL_8:
  v25 = v11[7];
  v26 = v9 + v25;
  v27 = v10 + v25;
  v28 = sub_1DC400220();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 24))(v26, v27, v28);
  *(_BYTE *)(v9 + v11[8]) = *(_BYTE *)(v10 + v11[8]);
  *(_BYTE *)(v9 + v11[9]) = *(_BYTE *)(v10 + v11[9]);
  v24(a1 + v44[6], a2 + v44[6], v15);
  v29 = v44[7];
  v30 = (void *)(a1 + v29);
  v31 = (const void *)(a2 + v29);
  v32 = v20(a1 + v29, 1, v15);
  v33 = v20((uint64_t)v31, 1, v15);
  if (!v32)
  {
    if (!v33)
    {
      v24((uint64_t)v30, (uint64_t)v31, v15);
      goto LABEL_14;
    }
    (*(void (**)(void *, uint64_t))(v42 + 8))(v30, v15);
    goto LABEL_13;
  }
  if (v33)
  {
LABEL_13:
    sub_1DC089DA4(0, &qword_1EDB28AC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    goto LABEL_14;
  }
  (*(void (**)(void *, const void *, uint64_t))(v42 + 16))(v30, v31, v15);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v30, 0, 1, v15);
LABEL_14:
  v35 = v44[8];
  v36 = (_QWORD *)(a1 + v35);
  v37 = (_QWORD *)(a2 + v35);
  *v36 = *v37;
  v36[1] = v37[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + v44[9]) = *(_BYTE *)(a2 + v44[9]);
  v38 = v44[10];
  v39 = (_QWORD *)(a1 + v38);
  v40 = (_QWORD *)(a2 + v38);
  *v39 = *v40;
  v39[1] = v40[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + v44[11]) = *(_BYTE *)(a2 + v44[11]);
  *(_QWORD *)(a1 + v44[12]) = *(_QWORD *)(a2 + v44[12]);
  return a1;
}

uint64_t sub_1DC378498(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  void *v13;
  const void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  const void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  const void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unsigned int (*v32)(uint64_t, uint64_t, uint64_t);
  void (*v33)(void *, const void *, uint64_t);

  v6 = sub_1DC4010E4();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v7(a1 + v8, a2 + v8, v6);
  v11 = (int *)type metadata accessor for StockEarningsModel();
  v12 = v11[5];
  v13 = (void *)(v9 + v12);
  v14 = (const void *)(v10 + v12);
  v15 = sub_1DC3FFFEC();
  v16 = *(_QWORD *)(v15 - 8);
  v33 = *(void (**)(void *, const void *, uint64_t))(v16 + 32);
  v33(v13, v14, v15);
  v17 = v11[6];
  v18 = (void *)(v9 + v17);
  v19 = (const void *)(v10 + v17);
  v32 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48);
  if (v32(v10 + v17, 1, v15))
  {
    sub_1DC089DA4(0, &qword_1EDB28AC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    v33(v18, v19, v15);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v18, 0, 1, v15);
  }
  v21 = v11[7];
  v22 = v9 + v21;
  v23 = v10 + v21;
  v24 = sub_1DC400220();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v22, v23, v24);
  *(_BYTE *)(v9 + v11[8]) = *(_BYTE *)(v10 + v11[8]);
  *(_BYTE *)(v9 + v11[9]) = *(_BYTE *)(v10 + v11[9]);
  v33((void *)(a1 + a3[6]), (const void *)(a2 + a3[6]), v15);
  v25 = a3[7];
  v26 = (void *)(a1 + v25);
  v27 = (const void *)(a2 + v25);
  if (v32(a2 + v25, 1, v15))
  {
    sub_1DC089DA4(0, &qword_1EDB28AC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
  }
  else
  {
    v33(v26, v27, v15);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v26, 0, 1, v15);
  }
  v29 = a3[9];
  *(_OWORD *)(a1 + a3[8]) = *(_OWORD *)(a2 + a3[8]);
  *(_BYTE *)(a1 + v29) = *(_BYTE *)(a2 + v29);
  v30 = a3[11];
  *(_OWORD *)(a1 + a3[10]) = *(_OWORD *)(a2 + a3[10]);
  *(_BYTE *)(a1 + v30) = *(_BYTE *)(a2 + v30);
  *(_QWORD *)(a1 + a3[12]) = *(_QWORD *)(a2 + a3[12]);
  return a1;
}

uint64_t sub_1DC378710(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  const void *v19;
  uint64_t (*v20)(uint64_t, uint64_t, uint64_t);
  int v21;
  int v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  const void *v31;
  int v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  void (*v48)(uint64_t, uint64_t, uint64_t);
  int *v49;

  v6 = sub_1DC4010E4();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v49 = a3;
  v8 = a3[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v7(a1 + v8, a2 + v8, v6);
  v11 = (int *)type metadata accessor for StockEarningsModel();
  v12 = v11[5];
  v13 = v9 + v12;
  v14 = v10 + v12;
  v15 = sub_1DC3FFFEC();
  v16 = *(_QWORD *)(v15 - 8);
  v48 = *(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 40);
  v48(v13, v14, v15);
  v17 = v11[6];
  v18 = (void *)(v9 + v17);
  v19 = (const void *)(v10 + v17);
  v47 = v16;
  v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 48);
  v21 = v20(v9 + v17, 1, v15);
  v22 = v20((uint64_t)v19, 1, v15);
  if (v21)
  {
    if (!v22)
    {
      (*(void (**)(void *, const void *, uint64_t))(v47 + 32))(v18, v19, v15);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v18, 0, 1, v15);
LABEL_7:
      v24 = v48;
      goto LABEL_8;
    }
LABEL_6:
    sub_1DC089DA4(0, &qword_1EDB28AC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    goto LABEL_7;
  }
  if (v22)
  {
    (*(void (**)(void *, uint64_t))(v47 + 8))(v18, v15);
    goto LABEL_6;
  }
  v24 = v48;
  v48((uint64_t)v18, (uint64_t)v19, v15);
LABEL_8:
  v25 = v11[7];
  v26 = v9 + v25;
  v27 = v10 + v25;
  v28 = sub_1DC400220();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 40))(v26, v27, v28);
  *(_BYTE *)(v9 + v11[8]) = *(_BYTE *)(v10 + v11[8]);
  *(_BYTE *)(v9 + v11[9]) = *(_BYTE *)(v10 + v11[9]);
  v24(a1 + v49[6], a2 + v49[6], v15);
  v29 = v49[7];
  v30 = (void *)(a1 + v29);
  v31 = (const void *)(a2 + v29);
  v32 = v20(a1 + v29, 1, v15);
  v33 = v20((uint64_t)v31, 1, v15);
  if (!v32)
  {
    if (!v33)
    {
      v24((uint64_t)v30, (uint64_t)v31, v15);
      goto LABEL_14;
    }
    (*(void (**)(void *, uint64_t))(v47 + 8))(v30, v15);
    goto LABEL_13;
  }
  if (v33)
  {
LABEL_13:
    sub_1DC089DA4(0, &qword_1EDB28AC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    goto LABEL_14;
  }
  (*(void (**)(void *, const void *, uint64_t))(v47 + 32))(v30, v31, v15);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v30, 0, 1, v15);
LABEL_14:
  v35 = v49[8];
  v36 = (_QWORD *)(a1 + v35);
  v37 = (uint64_t *)(a2 + v35);
  v39 = *v37;
  v38 = v37[1];
  *v36 = v39;
  v36[1] = v38;
  swift_bridgeObjectRelease();
  v40 = v49[10];
  *(_BYTE *)(a1 + v49[9]) = *(_BYTE *)(a2 + v49[9]);
  v41 = (_QWORD *)(a1 + v40);
  v42 = (uint64_t *)(a2 + v40);
  v44 = *v42;
  v43 = v42[1];
  *v41 = v44;
  v41[1] = v43;
  swift_bridgeObjectRelease();
  v45 = v49[12];
  *(_BYTE *)(a1 + v49[11]) = *(_BYTE *)(a2 + v49[11]);
  *(_QWORD *)(a1 + v45) = *(_QWORD *)(a2 + v45);
  return a1;
}

uint64_t sub_1DC378A3C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC378A48(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v17;

  v6 = sub_1DC4010E4();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = type metadata accessor for StockEarningsModel();
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v13 = a3[5];
LABEL_9:
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = sub_1DC3FFFEC();
  v12 = *(_QWORD *)(v14 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v14;
    v13 = a3[6];
    goto LABEL_9;
  }
  sub_1DC089DA4(0, &qword_1EDB28AC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v12 = *(_QWORD *)(v15 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v15;
    v13 = a3[7];
    goto LABEL_9;
  }
  v17 = *(_QWORD *)(a1 + a3[10] + 8);
  if (v17 >= 0xFFFFFFFF)
    LODWORD(v17) = -1;
  return (v17 + 1);
}

uint64_t sub_1DC378B54()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1DC378B60(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v8 = sub_1DC4010E4();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
LABEL_10:
    v11(v12, a2, a2, v10);
    return;
  }
  v13 = type metadata accessor for StockEarningsModel();
  v14 = *(_QWORD *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = v13;
    v15 = a4[5];
LABEL_9:
    v12 = a1 + v15;
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_10;
  }
  v16 = sub_1DC3FFFEC();
  v14 = *(_QWORD *)(v16 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = v16;
    v15 = a4[6];
    goto LABEL_9;
  }
  sub_1DC089DA4(0, &qword_1EDB28AC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v14 = *(_QWORD *)(v17 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = v17;
    v15 = a4[7];
    goto LABEL_9;
  }
  *(_QWORD *)(a1 + a4[10] + 8) = (a2 - 1);
}

uint64_t type metadata accessor for StockFeedEarningsViewModel()
{
  uint64_t result;

  result = qword_1EDB36D60;
  if (!qword_1EDB36D60)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1DC378CA4()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  sub_1DC4010E4();
  if (v0 <= 0x3F)
  {
    type metadata accessor for StockEarningsModel();
    if (v1 <= 0x3F)
    {
      sub_1DC3FFFEC();
      if (v2 <= 0x3F)
      {
        sub_1DC089DA4(319, &qword_1EDB28AC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        if (v3 <= 0x3F)
          swift_initStructMetadata();
      }
    }
  }
}

uint64_t sub_1DC378DA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, int *a6@<X5>, uint64_t a7@<X6>, int a8@<W7>, uint64_t a9@<X8>)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  void (*v47)(uint64_t, uint64_t);
  int *v48;
  uint64_t *v49;
  int *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char v60;
  void (*v61)(char *, uint64_t);
  uint64_t v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  uint64_t v70;
  id v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t result;
  uint64_t *v75;
  uint64_t v76;
  uint64_t v77;
  void (*v78)(_QWORD, _QWORD, _QWORD, _QWORD);
  void (*v79)(char *, uint64_t, uint64_t, uint64_t);
  void (*v80)(_QWORD, _QWORD, _QWORD);
  char *v81;
  uint64_t v82;
  void (*v83)(_QWORD, _QWORD);
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  char *v88;
  char *v89;
  char *v90;
  uint64_t v91;
  char *v92;
  char *v93;
  void (*v94)(char *, uint64_t);
  char *v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t ObjCClassFromMetadata;
  id v100;
  uint64_t v101;
  uint64_t v102;
  unint64_t v103;
  void (*v104)(char *, uint64_t, uint64_t, uint64_t);
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  void (*v109)(uint64_t, uint64_t);
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  id v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  id v124;
  uint64_t v125;
  uint64_t v126;
  unint64_t v127;
  uint64_t v128;
  uint64_t v129;
  void (*v130)(uint64_t, uint64_t);
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  char *v138;
  char *v139;
  char *v140;
  char *v141;
  uint64_t v142;
  void (*v143)(char *, uint64_t);
  char *v144;
  char *v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  uint64_t v150;
  void (*v151)(char *, uint64_t, uint64_t, uint64_t);
  void (*v152)(_QWORD, _QWORD, _QWORD, _QWORD);
  void (*v153)(char *, uint64_t, uint64_t, uint64_t);
  char *v154;
  char *v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  int *v165;
  char *v166;
  uint64_t v167;
  uint64_t v168;
  void (*v169)(char *, uint64_t, uint64_t, uint64_t);
  char *v170;

  LODWORD(v167) = a8;
  v168 = a7;
  v164 = a5;
  v165 = a6;
  v148 = sub_1DC3FFEC0();
  v147 = *(_QWORD *)(v148 - 8);
  MEMORY[0x1E0C80A78](v148);
  v146 = (char *)&v132 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v143 = (void (*)(char *, uint64_t))sub_1DC3FFE6C();
  v142 = *((_QWORD *)v143 - 1);
  MEMORY[0x1E0C80A78](v143);
  v141 = (char *)&v132 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1DC3FFD40();
  MEMORY[0x1E0C80A78](v16);
  v145 = (char *)&v132 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_1DC400220();
  MEMORY[0x1E0C80A78](v18);
  v144 = (char *)&v132 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_1DC400118();
  MEMORY[0x1E0C80A78](v20);
  v140 = (char *)&v132 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1DC089DA4(0, &qword_1EDB28A80, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB03F8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v23);
  v139 = (char *)&v132 - v24;
  sub_1DC089DA4(0, &qword_1EDB28A88, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0428], v22);
  MEMORY[0x1E0C80A78](v25);
  v137 = (char *)&v132 - v26;
  v150 = sub_1DC3FFF20();
  v136 = *(_QWORD *)(v150 - 8);
  MEMORY[0x1E0C80A78](v150);
  v138 = (char *)&v132 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v28);
  v149 = (char *)&v132 - v29;
  MEMORY[0x1E0C80A78](v30);
  v154 = (char *)&v132 - v31;
  v32 = sub_1DC4001B4();
  v151 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v32 - 8);
  v152 = (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))v32;
  MEMORY[0x1E0C80A78](v32);
  v34 = (char *)&v132 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC089DA4(0, &qword_1EDB28AC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], v22);
  MEMORY[0x1E0C80A78](v35);
  v37 = (char *)&v132 - v36;
  v38 = sub_1DC3FFFEC();
  v39 = *(_QWORD *)(v38 - 8);
  MEMORY[0x1E0C80A78](v38);
  v155 = (char *)&v132 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = sub_1DC4001CC();
  v162 = *(_QWORD *)(v41 - 8);
  v163 = v41;
  MEMORY[0x1E0C80A78](v41);
  v156 = (char *)&v132 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v43);
  v45 = (char *)&v132 - v44;
  v46 = sub_1DC4010E4();
  v159 = *(_QWORD *)(v46 - 8);
  v160 = v46;
  v47 = *(void (**)(uint64_t, uint64_t))(v159 + 16);
  v161 = a1;
  v47(a9, a1);
  v48 = (int *)type metadata accessor for StockFeedEarningsViewModel();
  sub_1DC237240(a2, a9 + v48[5]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v39 + 16))(a9 + v48[6], a3, v38);
  sub_1DC0BB31C(a4, a9 + v48[7]);
  v49 = (uint64_t *)(a9 + v48[8]);
  v50 = v165;
  *v49 = v164;
  v49[1] = (uint64_t)v50;
  *(_BYTE *)(a9 + v48[9]) = v167;
  v167 = a2;
  v51 = sub_1DC3BBCB0();
  *(_QWORD *)(a9 + v48[12]) = v51;
  v165 = v48;
  v52 = v48[11];
  v153 = (void (*)(char *, uint64_t, uint64_t, uint64_t))sub_1DC37A030(v168, a3);
  v164 = v53;
  sub_1DC40019C();
  v166 = v45;
  v54 = sub_1DC379D40(a4);
  v157 = a3;
  v158 = v39;
  if (v54 <= 0)
  {
    *(_BYTE *)(a9 + v52) = v51 == 0;
    v55 = a4;
  }
  else
  {
    *(_BYTE *)(a9 + v52) = 1;
    sub_1DC0BB31C(a4, (uint64_t)v37);
    v55 = a4;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v37, 1, v38) != 1)
    {
      v135 = a4;
      v134 = a9;
      v76 = (uint64_t)v155;
      (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v155, v37, v38);
      v77 = *MEMORY[0x1E0CB1160];
      v133 = v38;
      v79 = v151;
      v78 = v152;
      v80 = (void (*)(_QWORD, _QWORD, _QWORD))*((_QWORD *)v151 + 13);
      v80(v34, v77, v152);
      v81 = v166;
      v82 = sub_1DC4001C0();
      v83 = (void (*)(_QWORD, _QWORD))*((_QWORD *)v79 + 1);
      v83(v34, v78);
      v80(v34, v77, v78);
      v84 = sub_1DC4001C0();
      v83(v34, v78);
      v85 = v164;
      if (v82 == v84)
      {
        swift_bridgeObjectRelease();
        v164 = sub_1DC3FFE24();
        v153 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v164 - 8) + 56);
        v86 = v137;
        v153(v137, 1, 1, v164);
        v87 = sub_1DC3FFE0C();
        v152 = *(void (**)(_QWORD, _QWORD, _QWORD, _QWORD))(*(_QWORD *)(v87 - 8) + 56);
        v88 = v139;
        v152(v139, 1, 1, v87);
        sub_1DC4000B8();
        sub_1DC400160();
        sub_1DC4001FC();
        sub_1DC3FFD34();
        v89 = v149;
        sub_1DC3FFE3C();
        v90 = v141;
        sub_1DC3FFE60();
        sub_1DC3FFE30();
        (*(void (**)(char *, _QWORD *))(v142 + 8))(v90, v143);
        v143 = *(void (**)(char *, uint64_t))(v136 + 8);
        v91 = v150;
        v143(v89, v150);
        v153(v86, 1, 1, v164);
        v152(v88, 1, 1, v87);
        sub_1DC4000B8();
        sub_1DC400160();
        sub_1DC4001FC();
        sub_1DC3FFD34();
        v92 = v138;
        sub_1DC3FFE3C();
        v93 = v146;
        sub_1DC3FFEA8();
        sub_1DC3FFE54();
        (*(void (**)(char *, uint64_t))(v147 + 8))(v93, v148);
        v94 = v143;
        v143(v92, v91);
        sub_1DC1CB0F4();
        v95 = v154;
        sub_1DC3FFFD4();
        v164 = (uint64_t)v169;
        v156 = v170;
        v96 = v157;
        sub_1DC3FFFD4();
        v152 = (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))v170;
        v153 = v169;
        v97 = v89;
        sub_1DC3FFFD4();
        v98 = v170;
        v151 = v169;
        type metadata accessor for Localized();
        ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
        v100 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
        sub_1DC3FFC80();

        sub_1DC089DA4(0, (unint64_t *)&qword_1EDB400C0, (uint64_t (*)(uint64_t))sub_1DC1542B8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
        v101 = swift_allocObject();
        *(_OWORD *)(v101 + 16) = xmmword_1DC40FA70;
        v102 = MEMORY[0x1E0DEA968];
        *(_QWORD *)(v101 + 56) = MEMORY[0x1E0DEA968];
        v103 = sub_1DC0E7FAC();
        *(_QWORD *)(v101 + 32) = v151;
        *(_QWORD *)(v101 + 40) = v98;
        *(_QWORD *)(v101 + 96) = v102;
        *(_QWORD *)(v101 + 104) = v103;
        v104 = v153;
        *(_QWORD *)(v101 + 64) = v103;
        *(_QWORD *)(v101 + 72) = v104;
        *(_QWORD *)(v101 + 80) = v152;
        *(_QWORD *)(v101 + 136) = v102;
        *(_QWORD *)(v101 + 144) = v103;
        v105 = v156;
        *(_QWORD *)(v101 + 112) = v164;
        *(_QWORD *)(v101 + 120) = v105;
        v106 = sub_1DC408A70();
        v66 = v107;
        swift_bridgeObjectRelease();
        v108 = sub_1DC4052FC();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v108 - 8) + 8))(v168, v108);
        sub_1DC379FA0(v135);
        v109 = *(void (**)(uint64_t, uint64_t))(v158 + 8);
        v110 = v96;
        v111 = v133;
        v109(v110, v133);
        sub_1DC379FF4(v167);
        (*(void (**)(uint64_t, uint64_t))(v159 + 8))(v161, v160);
        v94(v97, v91);
        v94(v95, v91);
        v109((uint64_t)v155, v111);
        result = (*(uint64_t (**)(char *, uint64_t))(v162 + 8))(v166, v163);
      }
      else
      {
        v118 = v81;
        v119 = v168;
        v120 = sub_1DC37A030(v168, v76);
        v122 = v121;
        type metadata accessor for Localized();
        v123 = swift_getObjCClassFromMetadata();
        v124 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, v123);
        sub_1DC3FFC80();

        sub_1DC089DA4(0, (unint64_t *)&qword_1EDB400C0, (uint64_t (*)(uint64_t))sub_1DC1542B8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
        v125 = swift_allocObject();
        *(_OWORD *)(v125 + 16) = xmmword_1DC40C740;
        v126 = MEMORY[0x1E0DEA968];
        *(_QWORD *)(v125 + 56) = MEMORY[0x1E0DEA968];
        v127 = sub_1DC0E7FAC();
        *(_QWORD *)(v125 + 32) = v153;
        *(_QWORD *)(v125 + 40) = v85;
        *(_QWORD *)(v125 + 96) = v126;
        *(_QWORD *)(v125 + 104) = v127;
        *(_QWORD *)(v125 + 64) = v127;
        *(_QWORD *)(v125 + 72) = v120;
        *(_QWORD *)(v125 + 80) = v122;
        v106 = sub_1DC408A70();
        v66 = v128;
        swift_bridgeObjectRelease();
        v129 = sub_1DC4052FC();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v129 - 8) + 8))(v119, v129);
        sub_1DC379FA0(v135);
        v130 = *(void (**)(uint64_t, uint64_t))(v158 + 8);
        v131 = v133;
        v130(v157, v133);
        sub_1DC379FF4(v167);
        (*(void (**)(uint64_t, uint64_t))(v159 + 8))(v161, v160);
        v130(v76, v131);
        result = (*(uint64_t (**)(char *, uint64_t))(v162 + 8))(v118, v163);
      }
      v75 = (uint64_t *)(v134 + v165[10]);
      goto LABEL_15;
    }
    sub_1DC379FA0((uint64_t)v37);
  }
  v57 = v162;
  v56 = v163;
  v58 = v167;
  v59 = v156;
  sub_1DC40019C();
  type metadata accessor for StockEarningsModel();
  v60 = sub_1DC400130();
  v61 = *(void (**)(char *, uint64_t))(v57 + 8);
  v61(v59, v56);
  if ((v60 & 1) == 0)
  {
    sub_1DC40019C();
    v69 = sub_1DC400154();
    v61(v59, v56);
    if ((v69 & 1) != 0)
    {
      swift_bridgeObjectRelease();
      type metadata accessor for Localized();
      v70 = swift_getObjCClassFromMetadata();
      v71 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, v70);
      v64 = sub_1DC3FFC80();
      v66 = v72;

      v73 = sub_1DC4052FC();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v73 - 8) + 8))(v168, v73);
      sub_1DC379FA0(v55);
      (*(void (**)(uint64_t, uint64_t))(v158 + 8))(v157, v38);
      v68 = v167;
      goto LABEL_9;
    }
    type metadata accessor for Localized();
    v112 = swift_getObjCClassFromMetadata();
    v113 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, v112);
    sub_1DC3FFC80();

    sub_1DC089DA4(0, (unint64_t *)&qword_1EDB400C0, (uint64_t (*)(uint64_t))sub_1DC1542B8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v114 = swift_allocObject();
    *(_OWORD *)(v114 + 16) = xmmword_1DC40DC10;
    *(_QWORD *)(v114 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v114 + 64) = sub_1DC0E7FAC();
    v115 = v164;
    *(_QWORD *)(v114 + 32) = v153;
    *(_QWORD *)(v114 + 40) = v115;
    v106 = sub_1DC408A70();
    v66 = v116;
    swift_bridgeObjectRelease();
    v117 = sub_1DC4052FC();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v117 - 8) + 8))(v168, v117);
    sub_1DC379FA0(v55);
    (*(void (**)(uint64_t, uint64_t))(v158 + 8))(v157, v38);
    sub_1DC379FF4(v167);
    (*(void (**)(uint64_t, uint64_t))(v159 + 8))(v161, v160);
    result = ((uint64_t (*)(char *, uint64_t))v61)(v166, v56);
    v75 = (uint64_t *)(a9 + v165[10]);
LABEL_15:
    *v75 = v106;
    goto LABEL_16;
  }
  swift_bridgeObjectRelease();
  type metadata accessor for Localized();
  v62 = swift_getObjCClassFromMetadata();
  v63 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, v62);
  v64 = sub_1DC3FFC80();
  v66 = v65;

  v67 = sub_1DC4052FC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v67 - 8) + 8))(v168, v67);
  sub_1DC379FA0(v55);
  (*(void (**)(uint64_t, uint64_t))(v158 + 8))(v157, v38);
  v68 = v58;
LABEL_9:
  sub_1DC379FF4(v68);
  (*(void (**)(uint64_t, uint64_t))(v159 + 8))(v161, v160);
  result = ((uint64_t (*)(char *, uint64_t))v61)(v166, v56);
  v75 = (uint64_t *)(a9 + v165[10]);
  *v75 = v64;
LABEL_16:
  v75[1] = v66;
  return result;
}

uint64_t sub_1DC379D40(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t v21;
  uint64_t v22;

  v2 = sub_1DC3FFBE4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC089DA4(0, &qword_1EDB28AC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v21 - v7;
  v9 = sub_1DC3FFFEC();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0BB31C(a1, (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_1DC379FA0((uint64_t)v8);
    return 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
    sub_1DC089DA4(0, (unint64_t *)&qword_1EDB3FDF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB11B8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v14 = sub_1DC4001B4();
    v21 = v2;
    v22 = v3;
    v15 = *(_QWORD *)(v14 - 8);
    v16 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
    v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_1DC40DC10;
    (*(void (**)(unint64_t, _QWORD, uint64_t))(v15 + 104))(v17 + v16, *MEMORY[0x1E0CB1130], v14);
    sub_1DC367EA4(v17);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    sub_1DC40013C();
    swift_bridgeObjectRelease();
    v18 = sub_1DC3FFB90();
    v20 = v19;
    (*(void (**)(char *, uint64_t))(v22 + 8))(v5, v21);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    if ((v20 & 1) != 0)
      return 0;
    else
      return v18;
  }
}

uint64_t sub_1DC379FA0(uint64_t a1)
{
  uint64_t v2;

  sub_1DC089DA4(0, &qword_1EDB28AC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DC379FF4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for StockEarningsModel();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DC37A030(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  void *v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  void (*v34)(char *, uint64_t);
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  char *v42;
  uint64_t result;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  v57 = a2;
  v2 = sub_1DC3FFE6C();
  v55 = *(_QWORD *)(v2 - 8);
  v56 = v2;
  MEMORY[0x1E0C80A78](v2);
  v54 = (char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1DC3FFEC0();
  v52 = *(_QWORD *)(v4 - 8);
  v53 = v4;
  MEMORY[0x1E0C80A78](v4);
  v51 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1DC3FFD40();
  MEMORY[0x1E0C80A78](v6);
  v50 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1DC400220();
  MEMORY[0x1E0C80A78](v8);
  v49 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1DC4001CC();
  MEMORY[0x1E0C80A78](v10);
  v48 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1DC400118();
  MEMORY[0x1E0C80A78](v12);
  v13 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1DC089DA4(0, &qword_1EDB28A80, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB03F8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v44 - v15;
  sub_1DC089DA4(0, &qword_1EDB28A88, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0428], v13);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v44 - v18;
  v20 = sub_1DC3FFF20();
  v47 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v44 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)&v44 - v24;
  MEMORY[0x1E0C80A78](v26);
  v28 = (char *)&v44 - v27;
  v29 = (void *)sub_1DC405284();
  v30 = objc_msgSend(v29, sel_horizontalSizeClass);

  if ((unint64_t)v30 >= 2)
  {
    v44 = v20;
    v45 = v25;
    v37 = v47;
    v46 = v28;
    if (v30 != (id)2)
    {
      result = sub_1DC409838();
      __break(1u);
      return result;
    }
    sub_1DC4052F0();
    v38 = sub_1DC3FFE24();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v19, 1, 1, v38);
    v39 = sub_1DC3FFE0C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v16, 1, 1, v39);
    sub_1DC4000B8();
    sub_1DC400160();
    sub_1DC4001FC();
    sub_1DC3FFD34();
    sub_1DC3FFE3C();
    v40 = v51;
    sub_1DC3FFEB4();
    v41 = v45;
    sub_1DC3FFE54();
    (*(void (**)(char *, uint64_t))(v52 + 8))(v40, v53);
    v34 = *(void (**)(char *, uint64_t))(v37 + 8);
    v20 = v44;
    v34(v22, v44);
    v42 = v54;
    sub_1DC3FFE60();
    v28 = v46;
    sub_1DC3FFE30();
    (*(void (**)(char *, uint64_t))(v55 + 8))(v42, v56);
    v36 = v41;
  }
  else
  {
    v31 = sub_1DC3FFE24();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v19, 1, 1, v31);
    v32 = sub_1DC3FFE0C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v16, 1, 1, v32);
    sub_1DC4000B8();
    sub_1DC400160();
    sub_1DC4001FC();
    sub_1DC3FFD34();
    sub_1DC3FFE3C();
    v33 = v51;
    sub_1DC3FFEA8();
    sub_1DC3FFE54();
    (*(void (**)(char *, uint64_t))(v52 + 8))(v33, v53);
    v34 = *(void (**)(char *, uint64_t))(v47 + 8);
    v34(v22, v20);
    v35 = v54;
    sub_1DC3FFE60();
    sub_1DC3FFE30();
    (*(void (**)(char *, uint64_t))(v55 + 8))(v35, v56);
    v36 = v25;
  }
  v34(v36, v20);
  sub_1DC1CB0F4();
  sub_1DC3FFFD4();
  v34(v28, v20);
  return v58;
}

ValueMetadata *type metadata accessor for EarningsCalendarButtonAction()
{
  return &type metadata for EarningsCalendarButtonAction;
}

void *__swift_memcpy376_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x178uLL);
}

uint64_t getEnumTagSinglePayload for StockFeedPriceViewLayoutAttributes(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 376))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 200);
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for StockFeedPriceViewLayoutAttributes(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 376) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 376) = 0;
    if (a2)
      *(_BYTE *)(result + 200) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for StockFeedPriceViewLayoutAttributes()
{
  return &type metadata for StockFeedPriceViewLayoutAttributes;
}

uint64_t sub_1DC37A6C0()
{
  sub_1DC37A730();
  return sub_1DC40625C();
}

unint64_t sub_1DC37A6EC()
{
  unint64_t result;

  result = qword_1F03529C8;
  if (!qword_1F03529C8)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC42BDB4, &type metadata for StockFeedPriceViewLayoutAttributes);
    atomic_store(result, (unint64_t *)&qword_1F03529C8);
  }
  return result;
}

unint64_t sub_1DC37A730()
{
  unint64_t result;

  result = qword_1F03529D0;
  if (!qword_1F03529D0)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC42BDEC, &type metadata for StockFeedPriceViewLayoutAttributes);
    atomic_store(result, (unint64_t *)&qword_1F03529D0);
  }
  return result;
}

uint64_t sub_1DC37A774@<X0>(double a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  double v3;
  double v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  double v13;
  double v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  double v23;
  id v24;
  id v25;
  void *v26;
  id v27;
  _BOOL4 v29;
  void *v30;
  id v31;
  void *v32;
  id v33;
  double v34;
  uint64_t v35;
  _QWORD *v36;
  void *v37;
  void *v38;
  id v39;
  _QWORD *v40;
  double v41;
  void *v42;
  void *v43;
  void *v44;
  uint64_t inited;
  void *v46;
  void *v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t (*v52)(uint64_t, uint64_t);
  id v53;
  id v54;
  id v55;
  uint64_t v56;
  id v57;
  void *v58;
  double v59;
  double v60;
  void *v61;
  _QWORD *v62;
  double v63;
  void *v64;
  id v65;
  double v66;
  _QWORD *v67;
  CGFloat v68;
  void *v69;
  double v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void *v74;
  void *v75;
  uint64_t v76;
  uint64_t (*v77)(uint64_t, uint64_t);
  id v78;
  id v79;
  uint64_t v80;
  id v81;
  void *v82;
  void *v83;
  id v84;
  unsigned int v85;
  void *v86;
  double v87;
  double v88;
  double v89;
  double v90;
  double v91;
  double v92;
  double v93;
  double v94;
  CGFloat v95;
  _QWORD *v96;
  _QWORD *v97;
  uint64_t v98;
  id v99;
  double v100;
  id v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t (*v105)(uint64_t, uint64_t);
  id v106;
  uint64_t v107;
  id v108;
  void *v109;
  void *v110;
  id v111;
  double v112;
  double v113;
  double v114;
  double v115;
  double v116;
  double v117;
  double v118;
  double v119;
  id v120;
  double v121;
  id v122;
  double v123;
  double v124;
  _QWORD *v125;
  unint64_t v126;
  double v127;
  uint64_t v128;
  uint64_t v129;
  _QWORD *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  void *v136;
  char *v137;
  _QWORD *v138;
  __int128 v139;
  id v140;
  double MinY;
  uint64_t v142;
  uint64_t v143;
  id v144;
  void *v145;
  double v146;
  double v147;
  double v148;
  double v149;
  double v150;
  double v151;
  uint64_t v152;
  uint64_t v153;
  double v154;
  char v155;
  BOOL v156;
  CGFloat v157;
  double v158;
  double v159;
  double v160;
  double v161;
  double v162;
  double v163;
  CGFloat v164;
  CGFloat Width;
  CGFloat Height;
  CGFloat v167;
  CGFloat v168;
  double v169;
  void *v170;
  double v171;
  double v172;
  double v173;
  void *v174;
  double v175;
  double v176;
  CGFloat v177;
  CGFloat v178;
  _QWORD *v179;
  double v180;
  CGFloat x;
  CGFloat y;
  CGFloat v183;
  CGFloat v184;
  double v185;
  void *v186;
  double v187;
  double v188;
  CGFloat v189;
  CGFloat v190;
  double v191;
  double v192;
  CGFloat v193;
  CGFloat v194;
  CGFloat v195;
  CGFloat v196;
  CGFloat v197;
  CGFloat v198;
  CGFloat v199;
  CGFloat v200;
  CGFloat v201;
  CGFloat v202;
  double v203;
  _QWORD *v204;
  void *v205;
  double v206;
  double v207;
  CGFloat v208;
  double v209;
  void *v210;
  double v211;
  double v212;
  void *v213;
  double v214;
  double v215;
  double v216;
  double v217;
  double v218;
  double v219;
  BOOL v220;
  double v221;
  double v222;
  double v223;
  double v224;
  CGFloat v225;
  CGFloat v226;
  double v227;
  CGFloat v228;
  CGFloat v229;
  CGFloat v230;
  double v231;
  double v232;
  _QWORD *v233;
  double v234;
  double v235;
  double v236;
  CGFloat v237;
  CGFloat v238;
  double v239;
  void *v240;
  double v241;
  double v242;
  CGFloat v243;
  CGFloat v244;
  CGFloat v245;
  CGFloat v246;
  CGFloat v247;
  CGFloat v248;
  CGFloat v249;
  double v250;
  void *v251;
  id v252;
  CGFloat v253;
  double v254;
  double v255;
  double MaxY;
  double v257;
  void *v258;
  id v259;
  uint64_t v260;
  double v261;
  double v262;
  double v263;
  double v264;
  double v265;
  double v266;
  double v267;
  uint64_t result;
  double v269;
  _QWORD *v270;
  CGFloat v271;
  CGFloat v272;
  CGFloat v273;
  CGFloat v274;
  CGFloat v275;
  CGFloat v276;
  CGFloat v277;
  CGFloat v278;
  CGFloat v279;
  CGFloat v280;
  void *v281;
  id v282;
  uint64_t v283;
  double v284;
  double v285;
  double v286;
  uint64_t v287;
  uint64_t v288;
  id v289;
  double v290;
  double v291;
  double v292;
  CGFloat v293;
  CGFloat v294;
  id v295;
  CGFloat v296;
  uint64_t v297;
  char *v298;
  CGFloat v299;
  double v300;
  _BOOL4 v301;
  double v302;
  uint64_t v303;
  char *v304;
  double v305;
  double v306;
  unint64_t v307;
  CGFloat v308;
  uint64_t v309;
  __int128 v310;
  id v311;
  CGFloat v312;
  CGFloat v313;
  id v314;
  _QWORD *v315;
  uint64_t v316;
  double MaxX;
  __int128 v318;
  __int128 v319;
  __int128 v320;
  __int128 v321;
  __int128 v322;
  __int128 v323;
  __int128 v324;
  __int128 v325;
  __int128 v326;
  __int128 v327;
  __int128 v328;
  __int128 v329;
  double v330;
  double v331;
  CGFloat v332;
  CGFloat v333;
  CGFloat v334;
  double v335;
  double v336;
  _QWORD *v337;
  __int128 v338;
  CGRect v339;
  CGRect v340[4];
  double v341;
  _QWORD v342[2];
  __int128 v343;
  __int128 v344;
  void *v345;
  CGRect v346;
  CGRect v347;
  CGRect v348;
  CGRect v349;
  CGRect v350;
  CGRect v351;
  CGRect v352;
  CGRect v353;
  CGRect v354;
  CGRect v355;
  CGRect v356;
  CGRect v357;
  CGRect v358;
  CGRect v359;
  CGRect v360;
  CGRect v361;
  CGRect v362;
  CGRect v363;
  CGRect v364;
  CGRect v365;
  CGRect v366;
  CGRect v367;
  CGRect v368;
  CGRect v369;
  CGRect v370;
  CGRect v371;
  CGRect v372;
  CGRect v373;
  CGRect v374;
  CGRect v375;
  CGRect v376;
  CGRect v377;
  CGRect v378;
  CGRect v379;
  CGRect v380;

  v4 = v3;
  v303 = a3;
  v7 = type metadata accessor for QuoteSummaryViewLayoutOptions();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v284 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(double *)&v10 = COERCE_DOUBLE(sub_1DC406328());
  v299 = *(double *)(v10 - 8);
  v300 = *(double *)&v10;
  MEMORY[0x1E0C80A78](v10);
  v298 = (char *)&v284 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC405230();
  v13 = v12;
  v15 = v14;
  sub_1DC405224();
  v17 = v16;
  v19 = v18;
  v21 = v20;
  v23 = v22;
  v24 = objc_msgSend((id)objc_opt_self(), sel_currentDevice);
  v25 = objc_msgSend(v24, sel_userInterfaceIdiom);

  v26 = (void *)sub_1DC405254();
  v27 = objc_msgSend(v26, sel_horizontalSizeClass);

  v29 = v27 != (id)1 && v25 == (id)1;
  v30 = (void *)sub_1DC405254();
  v31 = objc_msgSend(v30, sel_horizontalSizeClass);

  v306 = v23;
  if (v31 == (id)1)
    v23 = 46.0;
  v32 = (void *)sub_1DC405284();
  v33 = objc_msgSend(v32, sel_horizontalSizeClass);

  v34 = 30.0;
  v313 = v4;
  if ((unint64_t)v33 >= 2)
  {
    if (v33 != (id)2)
      goto LABEL_56;
    sub_1DC4052F0();
    v34 = 28.0;
    v4 = v313;
  }
  v35 = *(_QWORD *)(*(_QWORD *)&v4 + 40);
  v315 = (_QWORD *)(*(_QWORD *)&v4 + 16);
  v36 = __swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)&v4 + 16), v35);
  MaxX = a1;
  v37 = (void *)sub_1DC4010D8();
  v38 = (void *)sub_1DC405284();
  v39 = objc_msgSend(v38, sel_horizontalSizeClass);

  v316 = a2;
  v304 = v9;
  v301 = v29;
  v314 = v37;
  if ((unint64_t)v39 >= 2)
  {
    if (v39 != (id)2)
      goto LABEL_56;
    sub_1DC4052F0();
  }
  v40 = (_QWORD *)*v36;
  v41 = COERCE_DOUBLE(sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FB00));
  v42 = (void *)sub_1DC4092F8();
  v312 = v41;
  v43 = (void *)sub_1DC409310();

  sub_1DC0FB194();
  v311 = v44;
  inited = swift_initStackObject();
  v310 = xmmword_1DC40C740;
  *(_OWORD *)(inited + 16) = xmmword_1DC40C740;
  v46 = (void *)*MEMORY[0x1E0DC1138];
  *(_QWORD *)(inited + 32) = *MEMORY[0x1E0DC1138];
  sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FB00);
  *(_QWORD *)(inited + 40) = v43;
  v47 = (void *)*MEMORY[0x1E0DC1140];
  *(double *)(inited + 64) = v41;
  *(_QWORD *)(inited + 72) = v47;
  v48 = v40 + 2;
  v50 = v40[5];
  v49 = v40[6];
  __swift_project_boxed_opaque_existential_1(v48, v50);
  v51 = *(_QWORD *)(v49 + 16);
  v52 = *(uint64_t (**)(uint64_t, uint64_t))(v51 + 48);
  swift_bridgeObjectRetain();
  v53 = v46;
  v54 = v43;
  v55 = v47;
  v56 = v52(v50, v51);
  *(double *)&v309 = COERCE_DOUBLE(sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FB30));
  *(double *)(inited + 104) = *(double *)&v309;
  *(_QWORD *)(inited + 80) = v56;
  sub_1DC0FA3C4(inited);
  v57 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  v58 = (void *)sub_1DC408A1C();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  v60 = v59;
  *(double *)&v307 = COERCE_DOUBLE(sub_1DC0FB14C());
  v308 = v60;
  v61 = (void *)sub_1DC408980();
  swift_bridgeObjectRelease();
  v314 = objc_msgSend(v57, sel_initWithString_attributes_, v58, v61);
  swift_bridgeObjectRelease();

  v62 = __swift_project_boxed_opaque_existential_1(v315, *(_QWORD *)(*(_QWORD *)&v313 + 40));
  v63 = COERCE_DOUBLE(sub_1DC40106C());
  v64 = (void *)sub_1DC405284();
  v65 = objc_msgSend(v64, sel_horizontalSizeClass);

  v66 = v312;
  v288 = v17;
  v302 = v63;
  if ((unint64_t)v65 < 2)
    goto LABEL_14;
  if (v65 != (id)2)
  {
LABEL_56:
    result = sub_1DC409838();
    __break(1u);
    return result;
  }
  sub_1DC4052F0();
  if (v224 >= 640.0)
  {
    v67 = (_QWORD *)*v62;
    v68 = *MEMORY[0x1E0DC4A88];
    goto LABEL_15;
  }
LABEL_14:
  v67 = (_QWORD *)*v62;
  v68 = *MEMORY[0x1E0DC4A88];
LABEL_15:
  v296 = v68;
  v69 = (void *)sub_1DC4092F8();
  v286 = v13 - v19;
  v70 = v13 - v19 - v23 - v34 + -32.0;
  v71 = swift_initStackObject();
  *(_OWORD *)(v71 + 16) = v310;
  *(_QWORD *)(v71 + 32) = v53;
  *(_QWORD *)(v71 + 40) = v69;
  *(double *)(v71 + 64) = v66;
  *(_QWORD *)(v71 + 72) = v55;
  v73 = v67[5];
  v72 = v67[6];
  __swift_project_boxed_opaque_existential_1(v67 + 2, v73);
  v74 = v53;
  v75 = v55;
  v76 = *(_QWORD *)(v72 + 16);
  v77 = *(uint64_t (**)(uint64_t, uint64_t))(v76 + 200);
  swift_bridgeObjectRetain();
  v78 = v74;
  v79 = v69;
  v295 = v75;
  v80 = v77(v73, v76);
  *(double *)(v71 + 104) = *(double *)&v309;
  *(_QWORD *)(v71 + 80) = v80;
  sub_1DC0FA3C4(v71);
  v81 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  v82 = (void *)sub_1DC408A1C();
  swift_bridgeObjectRelease();
  v83 = (void *)sub_1DC408980();
  swift_bridgeObjectRelease();
  v84 = objc_msgSend(v81, sel_initWithString_attributes_, v82, v83);
  swift_bridgeObjectRelease();

  v85 = objc_msgSend(v84, sel_su_containsExcessiveLineHeightCharacter);
  v305 = v19;
  v287 = v21;
  v284 = v34;
  v285 = v23;
  v289 = v84;
  if (v85)
  {
    v86 = (void *)sub_1DC405254();
    objc_msgSend(v86, sel_displayScale);
    v88 = v87;

    objc_msgSend(v84, sel_su_languageAwareOutsetsAtScale_, v88);
    v90 = v89;
    v291 = v92;
    v292 = v91;
    v290 = v93;
  }
  else
  {
    v90 = *MEMORY[0x1E0DC49E8];
    v94 = *(double *)(MEMORY[0x1E0DC49E8] + 8);
    v291 = *(double *)(MEMORY[0x1E0DC49E8] + 16);
    v292 = v94;
    v290 = *(double *)(MEMORY[0x1E0DC49E8] + 24);
  }
  v302 = v13;
  v95 = v313;
  v96 = __swift_project_boxed_opaque_existential_1(v315, *(_QWORD *)(*(_QWORD *)&v313 + 40));
  v297 = type metadata accessor for StockFeedMastheadModel();
  sub_1DC0FB1E8(*(_QWORD *)&MaxX + *(int *)(v297 + 20));
  v97 = (_QWORD *)*v96;
  v98 = swift_allocObject();
  *(_OWORD *)(v98 + 16) = v310;
  *(_QWORD *)(v98 + 32) = v78;
  swift_bridgeObjectRetain();
  v99 = v78;
  v100 = v312;
  *(_QWORD *)(v98 + 40) = sub_1DC4092F8();
  v101 = v295;
  *(double *)(v98 + 64) = v100;
  *(_QWORD *)(v98 + 72) = v101;
  v102 = v97[5];
  v103 = v97[6];
  __swift_project_boxed_opaque_existential_1(v97 + 2, v102);
  v104 = *(_QWORD *)(v103 + 16);
  v105 = *(uint64_t (**)(uint64_t, uint64_t))(v104 + 200);
  v106 = v101;
  v107 = v105(v102, v104);
  *(double *)(v98 + 104) = *(double *)&v309;
  *(_QWORD *)(v98 + 80) = v107;
  sub_1DC0FA3C4(v98);
  v108 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  v109 = (void *)sub_1DC408A1C();
  swift_bridgeObjectRelease();
  v110 = (void *)sub_1DC408980();
  swift_bridgeObjectRelease();
  v111 = objc_msgSend(v108, sel_initWithString_attributes_, v109, v110);
  swift_bridgeObjectRelease();

  objc_msgSend(v314, sel_boundingRectWithSize_options_context_, 1, 0, v70, v15);
  v113 = v112;
  v115 = v114;
  v117 = v116;
  v119 = v118;
  v120 = v289;
  objc_msgSend(v289, sel_boundingRectWithSize_options_context_, 1, 0, v70, v15);
  v295 = v122;
  v296 = v121;
  v293 = v124;
  v294 = v123;
  v312 = UIEdgeInsetsInsetRect_0(v121, *(double *)&v122, v123, v124, v90, v292, v291, v290);
  v315 = v125;
  v311 = v111;
  objc_msgSend(v111, sel_boundingRectWithSize_options_context_, 1, 0, v70, v15);
  v307 = v126;
  v308 = v127;
  v309 = v128;
  *(_QWORD *)&v310 = v129;
  v130 = __swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)&v95 + 96), *(_QWORD *)(*(_QWORD *)&v95 + 120));
  v131 = v316;
  sub_1DC4052F0();
  v133 = v132;
  v135 = v134;
  v136 = (void *)sub_1DC405254();
  v137 = v298;
  sub_1DC405200();
  v138 = (_QWORD *)*v130;
  v342[0] = v133;
  v342[1] = v135;
  v139 = *(_OWORD *)(MEMORY[0x1E0DC49E8] + 16);
  v343 = *MEMORY[0x1E0DC49E8];
  v344 = v139;
  v345 = v136;
  __swift_project_boxed_opaque_existential_1(v138 + 2, v138[5]);
  v140 = v136;
  sub_1DC103804(COERCE_DOUBLE(v342), &v338);
  MinY = CGRectGetMinY(v339);
  __swift_project_boxed_opaque_existential_1(v138 + 7, v138[10]);
  if (qword_1EDB276F0 != -1)
    swift_once();
  v142 = qword_1EDB276E0;
  v143 = *(_QWORD *)algn_1EDB276E8;
  swift_bridgeObjectRetain();
  v144 = sub_1DC103D30(v142, v143, v140);
  swift_bridgeObjectRelease();
  v145 = (void *)sub_1DC4091A8();

  objc_msgSend(v145, sel_ascender);
  v147 = v146;
  objc_msgSend(v145, sel_capHeight);
  v149 = v148;

  sub_1DC104498((uint64_t)&v338);
  v292 = *((double *)&v338 + 1);
  (*(void (**)(char *, double))(*(_QWORD *)&v299 + 8))(v137, COERCE_DOUBLE(*(_QWORD *)&v300));
  v346.origin.x = v113;
  v346.origin.y = v115;
  v346.size.width = v117;
  v346.size.height = v119;
  v150 = MinY + v147 - v149 + 1.0 + CGRectGetHeight(v346);
  v151 = *(double *)&v315 + v150;
  v152 = sub_1DC4052FC();
  v153 = (uint64_t)v304;
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v152 - 8) + 16))(v304, v131, v152);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)&v95 + 56), *(_QWORD *)(*(_QWORD *)&v95 + 80));
  sub_1DC0DF3A4(*(_QWORD *)&MaxX + *(int *)(v297 + 28), *(double *)&v153, v340);
  v326 = 0u;
  v327 = 0u;
  v324 = 0u;
  v325 = 0u;
  v322 = 0u;
  v323 = 0u;
  v318 = 0u;
  v319 = 0u;
  v347.origin.x = v113;
  v347.origin.y = v115;
  v347.size.width = v117;
  v347.size.height = v119;
  v154 = v150 - CGRectGetHeight(v347);
  MaxX = v70;
  v155 = sub_1DC37C258((uint64_t)v340, v113, v115, v117, v119, 14.0, v296, *(CGFloat *)&v295, v294, v293, v70);
  v156 = v301;
  v157 = v119;
  if (v301)
  {
    sub_1DC4052F0();
    v348.origin.x = v158 - v306 + -28.0;
    v348.origin.y = 11.0;
    v348.size.width = 28.0;
    v348.size.height = 28.0;
    v349 = CGRectIntegral(v348);
    *(CGFloat *)&v324 = v349.origin.x;
    *((_QWORD *)&v324 + 1) = *(_QWORD *)&v349.origin.y;
    *(CGFloat *)&v325 = v349.size.width;
    *((_QWORD *)&v325 + 1) = *(_QWORD *)&v349.size.height;
    v350.origin.x = CGRectGetMinX(v349) + -28.0 + -16.0;
    v350.origin.y = 11.0;
    v350.size.width = 28.0;
    v350.size.height = 28.0;
    v351 = CGRectIntegral(v350);
    *(CGFloat *)&v326 = v351.origin.x;
    *((_QWORD *)&v326 + 1) = *(_QWORD *)&v351.origin.y;
    *(CGFloat *)&v327 = v351.size.width;
    *((_QWORD *)&v327 + 1) = *(_QWORD *)&v351.size.height;
  }
  v159 = v151 + 3.0;
  v160 = v154 + 8.0;
  v161 = v113;
  v162 = v115;
  v163 = v117;
  v164 = v157;
  if (v155)
  {
    if (v155 == 1)
    {
      Width = CGRectGetWidth(*(CGRect *)&v161);
      v352.origin.x = v113;
      v352.origin.y = v115;
      v352.size.width = v117;
      v352.size.height = v157;
      Height = CGRectGetHeight(v352);
      v167 = v305;
      v330 = v305;
      v331 = v154 + 8.0;
      v332 = Width;
      v333 = Height;
      v353.origin.x = v305;
      v353.origin.y = v154 + 8.0;
      v353.size.width = Width;
      v353.size.height = Height;
      v168 = CGRectGetMaxX(v353) + 14.0;
      v354.origin.x = v167;
      v354.origin.y = v154 + 8.0;
      v354.size.width = Width;
      v354.size.height = Height;
      v169 = CGRectGetMinY(v354);
      v170 = (void *)sub_1DC4091A8();
      objc_msgSend(v170, sel_ascender);
      v172 = v171;

      v173 = v169 + v172;
      v174 = (void *)sub_1DC4091A8();
      objc_msgSend(v174, sel_ascender);
      v176 = v175;

      v177 = v173 - v176;
      v334 = v168;
      v313 = v168;
      v335 = v173 - v176;
      v178 = v312;
      v336 = v312;
      v179 = v315;
      v337 = v315;
      sub_1DC4052F0();
      MaxX = v180 - v306;
      x = v340[0].origin.x;
      y = v340[0].origin.y;
      v183 = v340[0].size.width;
      v184 = v340[0].size.height;
      v300 = MaxX - CGRectGetWidth(v340[0]);
      v355.origin.x = v168;
      MaxX = v177;
      v355.origin.y = v177;
      v355.size.width = v178;
      *(_QWORD *)&v355.size.height = v179;
      v185 = CGRectGetMinY(v355);
      v186 = (void *)sub_1DC4091A8();
      objc_msgSend(v186, sel_ascender);
      v188 = v187;

      v189 = v185 + v188 - v341;
      v356.origin.x = x;
      v356.origin.y = y;
      v356.size.width = v183;
      v356.size.height = v184;
      v190 = CGRectGetWidth(v356);
      v357.origin.x = x;
      v357.origin.y = y;
      v357.size.width = v183;
      v357.size.height = v184;
      v358.size.height = CGRectGetHeight(v357);
      v358.origin.x = v300;
      *(double *)&v328 = v300;
      *((CGFloat *)&v328 + 1) = v189;
      *(CGFloat *)&v329 = v190;
      *((_QWORD *)&v329 + 1) = *(_QWORD *)&v358.size.height;
      v358.origin.y = v189;
      v358.size.width = v190;
      v191 = v305;
      v192 = CGRectGetMaxY(v358) + 8.0;
      v194 = *(double *)&v307;
      v193 = v308;
      *(_QWORD *)&v359.origin.x = v307;
      v359.origin.y = v308;
      v196 = *(double *)&v309;
      v195 = *(double *)&v310;
      *(_QWORD *)&v359.size.width = v309;
      *(_QWORD *)&v359.size.height = v310;
      v197 = CGRectGetWidth(v359);
      v360.origin.x = v194;
      v360.origin.y = v193;
      v360.size.width = v196;
      v360.size.height = v195;
      v198 = v313;
      v199 = CGRectGetHeight(v360);
      *(double *)&v320 = v191;
      *((double *)&v320 + 1) = v192;
      *(CGFloat *)&v321 = v197;
      *((CGFloat *)&v321 + 1) = v199;
    }
    else
    {
      v225 = CGRectGetWidth(*(CGRect *)&v161);
      v366.origin.x = v113;
      v366.origin.y = v115;
      v366.size.width = v117;
      v366.size.height = v157;
      v226 = CGRectGetHeight(v366);
      v227 = v305;
      v330 = v305;
      v331 = v160;
      v332 = v225;
      v333 = v226;
      v228 = v340[0].origin.x;
      v299 = v340[0].origin.y;
      v300 = v340[0].origin.x;
      v229 = v340[0].size.width;
      v230 = v340[0].size.height;
      v231 = v286 - CGRectGetWidth(v340[0]) + -14.0;
      v232 = v312;
      v233 = v315;
      v234 = v159 - *(double *)&v315;
      v334 = v227;
      v335 = v234;
      if (v231 < v312)
        v232 = v231;
      v336 = v232;
      v337 = v315;
      sub_1DC4052F0();
      v236 = v235 - v306;
      v367.origin.x = v228;
      v237 = v299;
      v367.origin.y = v299;
      v367.size.width = v229;
      v367.size.height = v230;
      v238 = CGRectGetWidth(v367);
      v312 = v232;
      v313 = v236 - v238;
      v368.origin.x = v227;
      MaxX = v234;
      v368.origin.y = v234;
      v368.size.width = v232;
      *(_QWORD *)&v368.size.height = v233;
      v239 = CGRectGetMinY(v368);
      v240 = (void *)sub_1DC4091A8();
      objc_msgSend(v240, sel_ascender);
      v242 = v241;

      v243 = v239 + v242 - v341;
      v244 = v300;
      v369.origin.x = v300;
      v369.origin.y = v237;
      v369.size.width = v229;
      v369.size.height = v230;
      v245 = CGRectGetWidth(v369);
      v370.origin.x = v244;
      v370.origin.y = v237;
      v370.size.width = v229;
      v370.size.height = v230;
      v371.size.height = CGRectGetHeight(v370);
      v371.origin.x = v313;
      *(CGFloat *)&v328 = v313;
      *((CGFloat *)&v328 + 1) = v243;
      *(CGFloat *)&v329 = v245;
      *((_QWORD *)&v329 + 1) = *(_QWORD *)&v371.size.height;
      v371.origin.y = v243;
      v371.size.width = v245;
      v191 = v227;
      v192 = CGRectGetMaxY(v371) + 8.0;
      v247 = *(double *)&v307;
      v246 = v308;
      *(_QWORD *)&v372.origin.x = v307;
      v372.origin.y = v308;
      v249 = *(double *)&v309;
      v248 = *(double *)&v310;
      *(_QWORD *)&v372.size.width = v309;
      *(_QWORD *)&v372.size.height = v310;
      v197 = CGRectGetWidth(v372);
      v373.origin.x = v247;
      v373.origin.y = v246;
      v373.size.width = v249;
      v373.size.height = v248;
      v199 = CGRectGetHeight(v373);
      *(double *)&v320 = v191;
      *((double *)&v320 + 1) = v192;
      *(CGFloat *)&v321 = v197;
      *((CGFloat *)&v321 + 1) = v199;
      v198 = v191;
    }
    v250 = v302;
  }
  else
  {
    v200 = CGRectGetWidth(*(CGRect *)&v161);
    v361.origin.x = v113;
    v361.origin.y = v115;
    v361.size.width = v117;
    v361.size.height = v157;
    v201 = CGRectGetHeight(v361);
    v330 = v305;
    v331 = v160;
    v332 = v200;
    v333 = v201;
    v362.origin.x = v113;
    v362.origin.y = v115;
    v362.size.width = v117;
    v362.size.height = v157;
    v202 = CGRectGetWidth(v362);
    v203 = v312;
    v204 = v315;
    if (v312 + v202 < MaxX
      && (v205 = (void *)sub_1DC4091A8(),
          objc_msgSend(v205, sel_lineHeight),
          v207 = v206,
          v205,
          *(double *)&v204 / v207 == 1.0))
    {
      v208 = v305;
      v363.origin.x = v305;
      v363.origin.y = v160;
      v363.size.width = v200;
      v363.size.height = v201;
      MaxX = CGRectGetMaxX(v363);
      v364.origin.x = v208;
      v364.origin.y = v160;
      v364.size.width = v200;
      v364.size.height = v201;
      v209 = CGRectGetMinY(v364);
      v210 = (void *)sub_1DC4091A8();
      objc_msgSend(v210, sel_ascender);
      v212 = v211;

      v213 = (void *)sub_1DC4091A8();
      objc_msgSend(v213, sel_ascender);
      v215 = v214;

      sub_1DC4052F0();
      v217 = v216 - v306;
      v365.origin.x = v208;
      v365.origin.y = v160;
      v365.size.width = v200;
      v365.size.height = v201;
      v218 = v217 - CGRectGetMaxX(v365);
      v203 = v312;
      v219 = v218 + -14.0;
      v220 = v218 + -14.0 < v312;
      v221 = MaxX + 14.0;
      v222 = v209 + v212;
      v204 = v315;
      v223 = v222 - v215;
      v334 = MaxX + 14.0;
      v335 = v223;
      if (v220)
        v203 = v219;
      v336 = v203;
      v337 = v315;
    }
    else
    {
      v223 = v159 - *(double *)&v204;
      v208 = v305;
      v334 = v305;
      v335 = v159 - *(double *)&v204;
      v336 = v203;
      v337 = v204;
      v221 = v305;
    }
    v312 = v203;
    v313 = v221;
    MaxX = v223;
    v269 = v203;
    v270 = v204;
    v271 = CGRectGetMaxY(*(CGRect *)&v221) + 12.0;
    v272 = v340[0].origin.x;
    v273 = v340[0].origin.y;
    v274 = v340[0].size.width;
    v275 = v340[0].size.height;
    v276 = CGRectGetWidth(v340[0]);
    v377.origin.x = v272;
    v377.origin.y = v273;
    v377.size.width = v274;
    v377.size.height = v275;
    v378.size.height = CGRectGetHeight(v377);
    *(CGFloat *)&v328 = v208;
    *((CGFloat *)&v328 + 1) = v271;
    *(CGFloat *)&v329 = v276;
    *((_QWORD *)&v329 + 1) = *(_QWORD *)&v378.size.height;
    v378.origin.x = v208;
    v378.origin.y = v271;
    v378.size.width = v276;
    v192 = CGRectGetMaxY(v378) + 10.0;
    v278 = *(double *)&v307;
    v277 = v308;
    *(_QWORD *)&v379.origin.x = v307;
    v379.origin.y = v308;
    v280 = *(double *)&v309;
    v279 = *(double *)&v310;
    *(_QWORD *)&v379.size.width = v309;
    *(_QWORD *)&v379.size.height = v310;
    v197 = CGRectGetWidth(v379);
    v380.origin.x = v278;
    v380.origin.y = v277;
    v380.size.width = v280;
    v380.size.height = v279;
    v199 = CGRectGetHeight(v380);
    *(CGFloat *)&v320 = v208;
    *((double *)&v320 + 1) = v192;
    *(CGFloat *)&v321 = v197;
    *((CGFloat *)&v321 + 1) = v199;
    v281 = (void *)sub_1DC405254();
    v282 = objc_msgSend(v281, sel_horizontalSizeClass);

    v191 = v208;
    v250 = v302;
    if (v282 == (id)1)
    {
      *(double *)&v318 = v302 - v285 + -16.0 - v284;
      *((_QWORD *)&v318 + 1) = 0;
      *(double *)&v319 = v284;
      *((double *)&v319 + 1) = v284;
    }
    v198 = v313;
  }
  v251 = (void *)sub_1DC405254();
  v252 = objc_msgSend(v251, sel_horizontalSizeClass);

  v253 = v191;
  if (v252 == (id)1)
  {
    v328 = 0u;
    v329 = 0u;
    v320 = 0u;
    v321 = 0u;
    v253 = 0.0;
    v192 = 0.0;
    v197 = 0.0;
    v199 = 0.0;
  }
  if (v155)
  {
    v374.origin.x = v253;
    v374.origin.y = v192;
    v374.size.width = v197;
    v374.size.height = v199;
    v254 = CGRectGetMaxY(v374) + 12.0;
    if (v292 > v254)
      v255 = v292;
    else
      v255 = v254;
  }
  else
  {
    v375.origin.x = v198;
    v375.origin.y = MaxX;
    v375.size.width = v312;
    *(_QWORD *)&v375.size.height = v315;
    MaxY = CGRectGetMaxY(v375);
    v376.origin.x = v253;
    v376.origin.y = v192;
    v376.size.width = v197;
    v376.size.height = v199;
    v257 = CGRectGetMaxY(v376);
    if (MaxY > v257)
      v257 = MaxY;
    v255 = ceil(v257) + 12.0;
  }
  v258 = (void *)sub_1DC405254();
  v259 = objc_msgSend(v258, sel_horizontalSizeClass);

  if (v259 == (id)1)
  {
    v255 = ceil(fmax(v255, 44.0));
    sub_1DC405218();
    v262 = v255 - 1.0 / v261;
    sub_1DC4052F0();
    v264 = v263;
    sub_1DC408F74();
    v266 = v264 - v265;
    v260 = sub_1DC405218();
    *(double *)&v322 = v191;
    *((double *)&v322 + 1) = v262;
    *(double *)&v323 = v266;
    *((double *)&v323 + 1) = 1.0 / v267;
  }
  MEMORY[0x1E0C80A78](v260);
  *(&v284 - 16) = 0.0;
  *(&v284 - 15) = 0.0;
  *(&v284 - 14) = v250;
  *(&v284 - 13) = v255;
  *((_QWORD *)&v284 - 12) = &v330;
  *((_QWORD *)&v284 - 11) = &v334;
  *((_QWORD *)&v284 - 10) = &v318;
  *((_BYTE *)&v284 - 72) = v156;
  *((_QWORD *)&v284 - 8) = &v326;
  *((_QWORD *)&v284 - 7) = &v324;
  *((_QWORD *)&v284 - 6) = &v328;
  *((_QWORD *)&v284 - 5) = v340;
  *((_QWORD *)&v284 - 4) = &v322;
  *((_QWORD *)&v284 - 3) = &v320;
  v283 = v131;
  type metadata accessor for StockFeedMastheadViewLayoutAttributes();
  sub_1DC4051D0();

  return sub_1DC1012A4(v153);
}

uint64_t sub_1DC37BBB8@<X0>(int a1@<W4>, uint64_t a2@<X5>, uint64_t a3@<X6>, uint64_t a4@<X8>, double a5@<D0>, double a6@<D1>, double a7@<D2>, double a8@<D3>, const void *a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t, __n128);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  id v62;
  char v63;
  double v64;
  void *v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  int *v69;
  double *v70;
  double v71;
  double v72;
  _QWORD *v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  uint64_t v86;
  uint64_t v87;
  _QWORD *v88;
  uint64_t v89;
  uint64_t v90;
  _QWORD *v91;
  _QWORD *v92;
  uint64_t result;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  double v121;
  double v122;
  double v123;
  double v124;

  v101 = a3;
  v107 = a2;
  LODWORD(v102) = a1;
  v123 = a7;
  v124 = a8;
  v121 = a5;
  v122 = a6;
  v120 = a12;
  v103 = a11;
  v98 = a10;
  v13 = sub_1DC404210();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v94 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *MEMORY[0x1E0DB6B40];
  v19 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v14 + 104);
  v19(v17, v18, v13, v15);
  sub_1DC404204();
  v118 = v21;
  v119 = v20;
  v116 = v23;
  v117 = v22;
  v24 = *(void (**)(char *, uint64_t))(v14 + 8);
  v24(v17, v13);
  ((void (*)(char *, uint64_t, uint64_t))v19)(v17, v18, v13);
  sub_1DC404204();
  v114 = v26;
  v115 = v25;
  v112 = v28;
  v113 = v27;
  v24(v17, v13);
  ((void (*)(char *, uint64_t, uint64_t))v19)(v17, v18, v13);
  sub_1DC404204();
  v111 = v29;
  v110 = v30;
  v109 = v31;
  v108 = v32;
  v24(v17, v13);
  ((void (*)(char *, uint64_t, uint64_t))v19)(v17, v18, v13);
  sub_1DC404204();
  v107 = v33;
  v106 = v34;
  v105 = v35;
  v104 = v36;
  v24(v17, v13);
  ((void (*)(char *, uint64_t, uint64_t))v19)(v17, v18, v13);
  sub_1DC404204();
  v102 = v37;
  v101 = v38;
  v100 = v39;
  v99 = v40;
  v24(v17, v13);
  ((void (*)(char *, uint64_t, uint64_t))v19)(v17, v18, v13);
  sub_1DC404204();
  v97 = v41;
  v96 = v42;
  v95 = v43;
  v94 = v44;
  v24(v17, v13);
  ((void (*)(char *, uint64_t, uint64_t))v19)(v17, v18, v13);
  sub_1DC404204();
  v46 = v45;
  v48 = v47;
  v50 = v49;
  v52 = v51;
  v24(v17, v13);
  ((void (*)(char *, uint64_t, uint64_t))v19)(v17, v18, v13);
  sub_1DC404204();
  v54 = v53;
  v56 = v55;
  v58 = v57;
  v60 = v59;
  v24(v17, v13);
  v61 = (void *)sub_1DC405284();
  v62 = objc_msgSend(v61, sel_horizontalSizeClass);

  if ((unint64_t)v62 >= 2)
  {
    if (v62 != (id)2)
    {
      result = sub_1DC409838();
      __break(1u);
      return result;
    }
    sub_1DC4052F0();
    if (v64 >= 640.0)
      v63 = 1;
    else
      v63 = 2;
  }
  else
  {
    v63 = 0;
  }
  v65 = (void *)sub_1DC405254();
  v66 = objc_msgSend(v65, sel_horizontalSizeClass);

  v67 = *MEMORY[0x1E0DBB2B8];
  v68 = sub_1DC406040();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v68 - 8) + 104))(a4, v67, v68);
  v69 = (int *)type metadata accessor for StockFeedMastheadViewLayoutAttributes();
  v70 = (double *)(a4 + v69[5]);
  v71 = v122;
  *v70 = v121;
  v70[1] = v71;
  v72 = v124;
  v70[2] = v123;
  v70[3] = v72;
  v73 = (_QWORD *)(a4 + v69[6]);
  v74 = v118;
  *v73 = v119;
  v73[1] = v74;
  v75 = v116;
  v73[2] = v117;
  v73[3] = v75;
  v76 = (_QWORD *)(a4 + v69[7]);
  v77 = v114;
  *v76 = v115;
  v76[1] = v77;
  v78 = v112;
  v76[2] = v113;
  v76[3] = v78;
  v79 = (_QWORD *)(a4 + v69[8]);
  v80 = v110;
  *v79 = v111;
  v79[1] = v80;
  v81 = v108;
  v79[2] = v109;
  v79[3] = v81;
  v82 = (_QWORD *)(a4 + v69[9]);
  v83 = v106;
  *v82 = v107;
  v82[1] = v83;
  v84 = v104;
  v82[2] = v105;
  v82[3] = v84;
  v85 = (_QWORD *)(a4 + v69[10]);
  v86 = v101;
  *v85 = v102;
  v85[1] = v86;
  v87 = v99;
  v85[2] = v100;
  v85[3] = v87;
  v88 = (_QWORD *)(a4 + v69[11]);
  v89 = v96;
  *v88 = v97;
  v88[1] = v89;
  v90 = v94;
  v88[2] = v95;
  v88[3] = v90;
  result = (uint64_t)memcpy((void *)(a4 + v69[12]), a9, 0x111uLL);
  v91 = (_QWORD *)(a4 + v69[13]);
  *v91 = v46;
  v91[1] = v48;
  v91[2] = v50;
  v91[3] = v52;
  v92 = (_QWORD *)(a4 + v69[14]);
  *v92 = v54;
  v92[1] = v56;
  v92[2] = v58;
  v92[3] = v60;
  *(_BYTE *)(a4 + v69[15]) = v63;
  *(_QWORD *)(a4 + v69[16]) = v66;
  return result;
}

uint64_t sub_1DC37C1F4()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  __swift_destroy_boxed_opaque_existential_1(v0 + 136);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for StockFeedMastheadViewLayoutAttributesFactory()
{
  return objc_opt_self();
}

uint64_t sub_1DC37C258(uint64_t a1, double a2, double a3, double a4, double a5, double a6, CGFloat a7, CGFloat a8, CGFloat a9, CGFloat a10, double a11)
{
  CGFloat v23;
  CGFloat v24;
  void *v25;
  id v26;
  uint64_t result;
  double v28;
  CGRect v29;

  v23 = CGRectGetWidth(*(CGRect *)&a2) + a6;
  v29.origin.x = a7;
  v29.origin.y = a8;
  v29.size.width = a9;
  v29.size.height = a10;
  v24 = v23 + CGRectGetWidth(v29) + a6;
  if (v24 + CGRectGetWidth(*(CGRect *)a1) > a11)
    return 0;
  if ((*(_BYTE *)(a1 + 136) & 1) != 0)
    return 0;
  v25 = (void *)sub_1DC405284();
  v26 = objc_msgSend(v25, sel_horizontalSizeClass);

  if ((unint64_t)v26 < 2)
    return 0;
  if (v26 == (id)2)
  {
    sub_1DC4052F0();
    if (v28 >= 640.0)
      return 1;
    else
      return 2;
  }
  else
  {
    result = sub_1DC409838();
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC37C394@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1DC37BBB8(*(unsigned __int8 *)(v1 + 72), *(_QWORD *)(v1 + 80), *(_QWORD *)(v1 + 88), a1, *(double *)(v1 + 16), *(double *)(v1 + 24), *(double *)(v1 + 32), *(double *)(v1 + 40), *(const void **)(v1 + 104), *(_QWORD *)(v1 + 112), *(_QWORD *)(v1 + 120), *(_QWORD *)(v1 + 128));
}

_QWORD *sub_1DC37C3DC(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1DC407EF4();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v13 = a3[7];
    *((_BYTE *)v4 + a3[6]) = *((_BYTE *)a2 + a3[6]);
    *((_BYTE *)v4 + v13) = *((_BYTE *)a2 + v13);
    v14 = a3[9];
    *((_BYTE *)v4 + a3[8]) = *((_BYTE *)a2 + a3[8]);
    *((_BYTE *)v4 + v14) = *((_BYTE *)a2 + v14);
    v15 = a3[11];
    *((_BYTE *)v4 + a3[10]) = *((_BYTE *)a2 + a3[10]);
    *((_BYTE *)v4 + v15) = *((_BYTE *)a2 + v15);
    *((_BYTE *)v4 + a3[12]) = *((_BYTE *)a2 + a3[12]);
  }
  return v4;
}

uint64_t sub_1DC37C4D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_1DC407EF4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *sub_1DC37C518(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1DC407EF4();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  v12 = a3[7];
  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  *((_BYTE *)a1 + v12) = *((_BYTE *)a2 + v12);
  v13 = a3[9];
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  *((_BYTE *)a1 + v13) = *((_BYTE *)a2 + v13);
  v14 = a3[11];
  *((_BYTE *)a1 + a3[10]) = *((_BYTE *)a2 + a3[10]);
  *((_BYTE *)a1 + v14) = *((_BYTE *)a2 + v14);
  *((_BYTE *)a1 + a3[12]) = *((_BYTE *)a2 + a3[12]);
  return a1;
}

_QWORD *sub_1DC37C5E0(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1DC407EF4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  *((_BYTE *)a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
  *((_BYTE *)a1 + a3[10]) = *((_BYTE *)a2 + a3[10]);
  *((_BYTE *)a1 + a3[11]) = *((_BYTE *)a2 + a3[11]);
  *((_BYTE *)a1 + a3[12]) = *((_BYTE *)a2 + a3[12]);
  return a1;
}

_OWORD *sub_1DC37C6B8(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1DC407EF4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[7];
  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  *((_BYTE *)a1 + v10) = *((_BYTE *)a2 + v10);
  v11 = a3[9];
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  *((_BYTE *)a1 + v11) = *((_BYTE *)a2 + v11);
  v12 = a3[11];
  *((_BYTE *)a1 + a3[10]) = *((_BYTE *)a2 + a3[10]);
  *((_BYTE *)a1 + v12) = *((_BYTE *)a2 + v12);
  *((_BYTE *)a1 + a3[12]) = *((_BYTE *)a2 + a3[12]);
  return a1;
}

_QWORD *sub_1DC37C76C(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1DC407EF4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[7];
  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  *((_BYTE *)a1 + v11) = *((_BYTE *)a2 + v11);
  v12 = a3[9];
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  *((_BYTE *)a1 + v12) = *((_BYTE *)a2 + v12);
  v13 = a3[11];
  *((_BYTE *)a1 + a3[10]) = *((_BYTE *)a2 + a3[10]);
  *((_BYTE *)a1 + v13) = *((_BYTE *)a2 + v13);
  *((_BYTE *)a1 + a3[12]) = *((_BYTE *)a2 + a3[12]);
  return a1;
}

uint64_t sub_1DC37C828()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC37C834(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1DC407EF4();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t sub_1DC37C8B0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC37C8BC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_1DC407EF4();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t sub_1DC37C930()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = (int *)type metadata accessor for CuratedForYouFeedGroupConfigData();
  if ((*(_BYTE *)(v0 + v1[6]) & 1) == 0)
  {
    if ((*(_BYTE *)(v0 + v1[7]) & 1) != 0)
    {
      if (*(_BYTE *)(v0 + v1[8]))
      {
        if (*(_BYTE *)(v0 + v1[9]))
        {
          if (*(_BYTE *)(v0 + v1[10]))
          {
            if (*(_BYTE *)(v0 + v1[11]))
            {
              v2 = 33;
              if ((*(_BYTE *)(v0 + v1[12]) & 1) != 0)
                return v2;
              return v2 | 2;
            }
            v2 = 33;
            goto LABEL_93;
          }
          v2 = 16777249;
          if (*(_BYTE *)(v0 + v1[11]))
            goto LABEL_94;
        }
        else if (*(_BYTE *)(v0 + v1[10]))
        {
          v2 = 8388641;
          if (*(_BYTE *)(v0 + v1[11]))
            goto LABEL_94;
        }
        else
        {
          v2 = 25165857;
          if (*(_BYTE *)(v0 + v1[11]))
            goto LABEL_94;
        }
      }
      else if (*(_BYTE *)(v0 + v1[9]))
      {
        if (*(_BYTE *)(v0 + v1[10]))
        {
          v2 = 2097185;
          if (*(_BYTE *)(v0 + v1[11]))
            goto LABEL_94;
        }
        else
        {
          v2 = 18874401;
          if (*(_BYTE *)(v0 + v1[11]))
            goto LABEL_94;
        }
      }
      else if (*(_BYTE *)(v0 + v1[10]))
      {
        v2 = 10485793;
        if (*(_BYTE *)(v0 + v1[11]))
          goto LABEL_94;
      }
      else
      {
        v2 = 27263009;
        if (*(_BYTE *)(v0 + v1[11]))
          goto LABEL_94;
      }
LABEL_93:
      v2 |= 0x800uLL;
      goto LABEL_94;
    }
    if (*(_BYTE *)(v0 + v1[8]))
    {
      if (*(_BYTE *)(v0 + v1[9]))
      {
        if (*(_BYTE *)(v0 + v1[10]))
        {
          v3 = 1048577;
LABEL_59:
          if (*(_BYTE *)(v0 + v1[11]) == 1)
          {
            v2 = v3 + 32;
            if ((*(_BYTE *)(v0 + v1[12]) & 1) != 0)
              return v2;
            return v2 | 2;
          }
          v2 = v3 | 0x20;
          goto LABEL_93;
        }
        v6 = 17825793;
      }
      else
      {
        if (*(_BYTE *)(v0 + v1[10]))
        {
          v3 = 9437185;
          goto LABEL_59;
        }
        v6 = 26214401;
      }
    }
    else if (*(_BYTE *)(v0 + v1[9]))
    {
      if (*(_BYTE *)(v0 + v1[10]))
      {
        v3 = 3145729;
        goto LABEL_59;
      }
      v6 = 19922945;
    }
    else
    {
      if (*(_BYTE *)(v0 + v1[10]))
      {
        v3 = 11534337;
        goto LABEL_59;
      }
      v6 = 28311553;
    }
    v2 = v6 | 0x20;
    goto LABEL_92;
  }
  if (!*(_BYTE *)(v0 + v1[7]))
  {
    if ((*(_BYTE *)(v0 + v1[8]) & 1) != 0)
    {
      if (*(_BYTE *)(v0 + v1[9]))
      {
        if (*(_BYTE *)(v0 + v1[10]))
        {
          v2 = 1048577;
          if (*(_BYTE *)(v0 + v1[11]))
            goto LABEL_94;
        }
        else
        {
          v2 = 17825793;
          if (*(_BYTE *)(v0 + v1[11]))
            goto LABEL_94;
        }
      }
      else if (*(_BYTE *)(v0 + v1[10]))
      {
        v2 = 9437185;
        if (*(_BYTE *)(v0 + v1[11]))
          goto LABEL_94;
      }
      else
      {
        v2 = 26214401;
        if (*(_BYTE *)(v0 + v1[11]))
          goto LABEL_94;
      }
    }
    else if (*(_BYTE *)(v0 + v1[9]))
    {
      if (*(_BYTE *)(v0 + v1[10]))
      {
        v2 = 3145729;
        if (*(_BYTE *)(v0 + v1[11]))
          goto LABEL_94;
      }
      else
      {
        v2 = 19922945;
        if (*(_BYTE *)(v0 + v1[11]))
          goto LABEL_94;
      }
    }
    else if (*(_BYTE *)(v0 + v1[10]))
    {
      v2 = 11534337;
      if (*(_BYTE *)(v0 + v1[11]))
        goto LABEL_94;
    }
    else
    {
      v2 = 28311553;
      if (*(_BYTE *)(v0 + v1[11]))
        goto LABEL_94;
    }
    goto LABEL_93;
  }
  if (!*(_BYTE *)(v0 + v1[8]))
  {
    if ((*(_BYTE *)(v0 + v1[9]) & 1) != 0)
    {
      if (*(_BYTE *)(v0 + v1[10]))
        v4 = 1048577;
      else
        v4 = 17825793;
    }
    else if (*(_BYTE *)(v0 + v1[10]))
    {
      v4 = 9437185;
    }
    else
    {
      v4 = 26214401;
    }
    v2 = v4 + 0x100000;
    if (*(_BYTE *)(v0 + v1[11]))
      goto LABEL_94;
    goto LABEL_93;
  }
  if (*(_BYTE *)(v0 + v1[9]))
  {
    if (*(_BYTE *)(v0 + v1[10]))
    {
      if (*(_BYTE *)(v0 + v1[11]) == 1)
      {
        v2 = 1;
        if ((*(_BYTE *)(v0 + v1[12]) & 1) != 0)
          return v2;
        return v2 | 2;
      }
      v2 = 1;
      goto LABEL_93;
    }
    v2 = 16777217;
LABEL_92:
    if ((*(_BYTE *)(v0 + v1[11]) & 1) != 0)
      goto LABEL_94;
    goto LABEL_93;
  }
  if ((*(_BYTE *)(v0 + v1[10]) & 1) != 0)
    v5 = 3145729;
  else
    v5 = 19922945;
  v2 = v5 + 5242880;
  if (!*(_BYTE *)(v0 + v1[11]))
    goto LABEL_93;
LABEL_94:
  if ((*(_BYTE *)(v0 + v1[12]) & 1) == 0)
    return v2 | 2;
  return v2;
}

uint64_t sub_1DC37CC54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unsigned __int8 a4@<W3>, unsigned __int8 a5@<W4>, unsigned __int8 a6@<W5>, unsigned __int8 a7@<W6>, unsigned __int8 a8@<W7>, _QWORD *a9@<X8>, char a10, char a11)
{
  int v18;
  int *v19;
  char *v20;
  uint64_t v21;
  uint64_t result;
  int v23;
  int v25;
  int v26;
  int v27;

  v27 = a8;
  v26 = a7;
  v25 = a6;
  v23 = a5;
  v18 = a4;
  v19 = (int *)type metadata accessor for CuratedForYouFeedGroupConfigData();
  v20 = (char *)a9 + v19[5];
  v21 = sub_1DC407EF4();
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v20, a1, v21);
  *a9 = a2;
  a9[1] = a3;
  *((_BYTE *)a9 + v19[6]) = (v18 == 2) | a4 & 1;
  *((_BYTE *)a9 + v19[7]) = (v23 == 2) | a5 & 1;
  *((_BYTE *)a9 + v19[8]) = (v25 == 2) | a6 & 1;
  *((_BYTE *)a9 + v19[9]) = (v26 == 2) | a7 & 1;
  *((_BYTE *)a9 + v19[10]) = (v27 == 2) | a8 & 1;
  *((_BYTE *)a9 + v19[11]) = a10 & 1;
  *((_BYTE *)a9 + v19[12]) = (a11 == 2) | a11 & 1;
  return result;
}

uint64_t sub_1DC37CDD8@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  int v20;
  int v21;
  int v22;
  int v23;
  uint64_t v24;
  int v25;
  _QWORD *v26;
  char *v27;
  uint64_t v28;
  _QWORD *v29;
  char v30;
  char v31;
  char v32;
  unsigned __int8 v33;
  unsigned __int8 v34;
  unsigned __int8 v35;
  unsigned __int8 v36;
  unsigned __int8 v37;

  v26 = a2;
  v3 = sub_1DC407EF4();
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC37D578(0, &qword_1EDB3FDC8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v28 = v6;
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v20 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC37D534();
  v27 = v9;
  v10 = v29;
  sub_1DC409B08();
  if (v10)
  {
    v19 = (uint64_t)a1;
  }
  else
  {
    v29 = a1;
    v37 = 1;
    sub_1DC089A54(&qword_1EDB2AFF0, MEMORY[0x1E0D5D920]);
    v11 = v27;
    v12 = v28;
    sub_1DC409910();
    v37 = 0;
    v13 = sub_1DC4098F8();
    v36 = 2;
    v24 = v15;
    v16 = v13;
    sub_1DC4098B0();
    v25 = v37;
    v35 = 3;
    sub_1DC4098B0();
    v23 = v36;
    v34 = 4;
    sub_1DC4098B0();
    v22 = v35;
    v33 = 5;
    sub_1DC4098B0();
    v21 = v34;
    v32 = 6;
    sub_1DC4098B0();
    v20 = v33;
    v31 = 7;
    sub_1DC4098B0();
    v17 = v7;
    v18 = v32;
    v30 = 8;
    sub_1DC4098B0();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v11, v12);
    sub_1DC37CC54((uint64_t)v5, v16, v24, v25, v23, v22, v21, v20, v26, v18, v31);
    v19 = (uint64_t)v29;
  }
  return __swift_destroy_boxed_opaque_existential_1(v19);
}

uint64_t sub_1DC37D110(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1DC37D144 + 4 * byte_1DC42BEE0[a1]))(0x65707974627573, 0xE700000000000000);
}

uint64_t sub_1DC37D144()
{
  return 0x746E65746E6F63;
}

unint64_t sub_1DC37D158()
{
  return 0xD000000000000012;
}

uint64_t sub_1DC37D1F4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  _BYTE v9[16];

  sub_1DC37D578(0, &qword_1F03529D8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = &v9[-v6];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC37D534();
  sub_1DC409B14();
  v9[15] = 0;
  sub_1DC409964();
  if (!v1)
  {
    type metadata accessor for CuratedForYouFeedGroupConfigData();
    v9[14] = 1;
    sub_1DC407EF4();
    sub_1DC089A54(&qword_1F034C128, MEMORY[0x1E0D5D918]);
    sub_1DC409988();
    v9[13] = 2;
    sub_1DC409970();
    v9[12] = 3;
    sub_1DC409970();
    v9[11] = 4;
    sub_1DC409970();
    v9[10] = 5;
    sub_1DC409970();
    v9[9] = 6;
    sub_1DC409970();
    v9[8] = 7;
    sub_1DC409970();
    v9[7] = 8;
    sub_1DC409970();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1DC37D480()
{
  unsigned __int8 *v0;

  return sub_1DC37D110(*v0);
}

uint64_t sub_1DC37D488@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC37DDE0(a1, a2);
  *a3 = result;
  return result;
}

void sub_1DC37D4AC(_BYTE *a1@<X8>)
{
  *a1 = 9;
}

uint64_t sub_1DC37D4B8()
{
  sub_1DC37D534();
  return sub_1DC409B20();
}

uint64_t sub_1DC37D4E0()
{
  sub_1DC37D534();
  return sub_1DC409B2C();
}

uint64_t sub_1DC37D508@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1DC37CDD8(a1, a2);
}

uint64_t sub_1DC37D51C(_QWORD *a1)
{
  return sub_1DC37D1F4(a1);
}

unint64_t sub_1DC37D534()
{
  unint64_t result;

  result = qword_1EDB3ABE0;
  if (!qword_1EDB3ABE0)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC42C094, &type metadata for CuratedForYouFeedGroupConfigData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB3ABE0);
  }
  return result;
}

void sub_1DC37D578(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC37D534();
    v7 = a3(a1, &type metadata for CuratedForYouFeedGroupConfigData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1DC37D5D4(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char v37;
  int *v38;
  int v39;
  int v40;
  int v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  int v57;
  int v58;
  int v59;
  uint64_t v60;
  char v61;
  char v62;
  char v63;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  char *v71;
  char *v72;
  char *v73;
  uint64_t v74;

  v66 = type metadata accessor for CuratedForYouFeedGroupConfigData();
  MEMORY[0x1E0C80A78](v66);
  v74 = (uint64_t)&v65 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v73 = (char *)&v65 - v6;
  MEMORY[0x1E0C80A78](v7);
  v72 = (char *)&v65 - v8;
  MEMORY[0x1E0C80A78](v9);
  v71 = (char *)&v65 - v10;
  MEMORY[0x1E0C80A78](v11);
  v70 = (char *)&v65 - v12;
  MEMORY[0x1E0C80A78](v13);
  v69 = (char *)&v65 - v14;
  MEMORY[0x1E0C80A78](v15);
  v68 = (uint64_t)&v65 - v16;
  MEMORY[0x1E0C80A78](v17);
  v67 = (uint64_t)&v65 - v18;
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v65 - v20;
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)&v65 - v23;
  MEMORY[0x1E0C80A78](v25);
  v27 = (char *)&v65 - v26;
  MEMORY[0x1E0C80A78](v28);
  v30 = (char *)&v65 - v29;
  MEMORY[0x1E0C80A78](v31);
  v33 = (char *)&v65 - v32;
  MEMORY[0x1E0C80A78](v34);
  v36 = (char *)&v65 - v35;
  if (*a1 == *a2 && a1[1] == a2[1])
  {
    sub_1DC37DB2C((uint64_t)a1, (uint64_t)&v65 - v35);
    sub_1DC37DB2C((uint64_t)a2, (uint64_t)v33);
  }
  else
  {
    v37 = sub_1DC4099E8();
    sub_1DC37DB2C((uint64_t)a1, (uint64_t)v36);
    sub_1DC37DB2C((uint64_t)a2, (uint64_t)v33);
    if ((v37 & 1) == 0)
    {
      sub_1DC37DB70((uint64_t)v33);
      sub_1DC37DB70((uint64_t)v36);
      sub_1DC37DB2C((uint64_t)a1, (uint64_t)v30);
      sub_1DC37DB2C((uint64_t)a2, (uint64_t)v27);
      goto LABEL_13;
    }
  }
  v38 = (int *)v66;
  v39 = v36[*(int *)(v66 + 24)];
  sub_1DC37DB70((uint64_t)v36);
  v40 = v33[v38[6]];
  sub_1DC37DB70((uint64_t)v33);
  sub_1DC37DB2C((uint64_t)a1, (uint64_t)v30);
  sub_1DC37DB2C((uint64_t)a2, (uint64_t)v27);
  if (v39 != v40)
  {
LABEL_13:
    sub_1DC37DB70((uint64_t)v27);
    sub_1DC37DB70((uint64_t)v30);
    sub_1DC37DB2C((uint64_t)a1, (uint64_t)v24);
    sub_1DC37DB2C((uint64_t)a2, (uint64_t)v21);
    v44 = (uint64_t)v69;
    v43 = (uint64_t)v70;
    goto LABEL_14;
  }
  v41 = v30[v38[7]];
  sub_1DC37DB70((uint64_t)v30);
  v42 = v27[v38[7]];
  sub_1DC37DB70((uint64_t)v27);
  sub_1DC37DB2C((uint64_t)a1, (uint64_t)v24);
  sub_1DC37DB2C((uint64_t)a2, (uint64_t)v21);
  v44 = (uint64_t)v69;
  v43 = (uint64_t)v70;
  if (v41 != v42)
  {
LABEL_14:
    sub_1DC37DB70((uint64_t)v21);
    sub_1DC37DB70((uint64_t)v24);
    v47 = v67;
    sub_1DC37DB2C((uint64_t)a1, v67);
    v48 = v68;
    sub_1DC37DB2C((uint64_t)a2, v68);
    v49 = (uint64_t)v71;
    goto LABEL_15;
  }
  v45 = v24[v38[8]];
  sub_1DC37DB70((uint64_t)v24);
  v46 = v21[v38[8]];
  sub_1DC37DB70((uint64_t)v21);
  v47 = v67;
  sub_1DC37DB2C((uint64_t)a1, v67);
  v48 = v68;
  sub_1DC37DB2C((uint64_t)a2, v68);
  v49 = (uint64_t)v71;
  if (v45 != v46)
  {
LABEL_15:
    sub_1DC37DB70(v48);
    sub_1DC37DB70(v47);
    sub_1DC37DB2C((uint64_t)a1, v44);
    sub_1DC37DB2C((uint64_t)a2, v43);
    v55 = (uint64_t)v72;
    v54 = (uint64_t)v73;
    goto LABEL_16;
  }
  v50 = v47;
  v51 = *(unsigned __int8 *)(v47 + v38[9]);
  sub_1DC37DB70(v50);
  v52 = v48;
  v53 = *(unsigned __int8 *)(v48 + v38[9]);
  sub_1DC37DB70(v52);
  sub_1DC37DB2C((uint64_t)a1, v44);
  sub_1DC37DB2C((uint64_t)a2, v43);
  v55 = (uint64_t)v72;
  v54 = (uint64_t)v73;
  if (v51 != v53)
  {
LABEL_16:
    sub_1DC37DB70(v43);
    sub_1DC37DB70(v44);
    sub_1DC37DB2C((uint64_t)a1, v49);
    sub_1DC37DB2C((uint64_t)a2, v55);
    goto LABEL_17;
  }
  v56 = *(unsigned __int8 *)(v44 + v38[10]);
  sub_1DC37DB70(v44);
  v57 = *(unsigned __int8 *)(v43 + v38[10]);
  sub_1DC37DB70(v43);
  sub_1DC37DB2C((uint64_t)a1, v49);
  sub_1DC37DB2C((uint64_t)a2, v55);
  if (v56 != v57)
  {
LABEL_17:
    sub_1DC37DB70(v55);
    sub_1DC37DB70(v49);
    sub_1DC37DB2C((uint64_t)a1, v54);
    v60 = v74;
    sub_1DC37DB2C((uint64_t)a2, v74);
    goto LABEL_18;
  }
  v58 = *(unsigned __int8 *)(v49 + v38[11]);
  sub_1DC37DB70(v49);
  v59 = *(unsigned __int8 *)(v55 + v38[11]);
  sub_1DC37DB70(v55);
  sub_1DC37DB2C((uint64_t)a1, v54);
  v60 = v74;
  sub_1DC37DB2C((uint64_t)a2, v74);
  if (v58 != v59)
  {
LABEL_18:
    sub_1DC37DB70(v60);
    sub_1DC37DB70(v54);
    v63 = 0;
    return v63 & 1;
  }
  v61 = *(_BYTE *)(v54 + v38[12]);
  sub_1DC37DB70(v54);
  v62 = *(_BYTE *)(v60 + v38[12]);
  sub_1DC37DB70(v60);
  v63 = v61 ^ v62 ^ 1;
  return v63 & 1;
}

uint64_t sub_1DC37DB2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CuratedForYouFeedGroupConfigData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC37DB70(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for CuratedForYouFeedGroupConfigData();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t getEnumTagSinglePayload for CuratedForYouFeedGroupConfigData.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF8)
    goto LABEL_17;
  if (a2 + 8 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 8) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 8;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 8;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 8;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 9;
  v8 = v6 - 9;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for CuratedForYouFeedGroupConfigData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_1DC37DC88 + 4 * byte_1DC42BEEE[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_1DC37DCBC + 4 * byte_1DC42BEE9[v4]))();
}

uint64_t sub_1DC37DCBC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC37DCC4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC37DCCCLL);
  return result;
}

uint64_t sub_1DC37DCD8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC37DCE0);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_1DC37DCE4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC37DCEC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CuratedForYouFeedGroupConfigData.CodingKeys()
{
  return &type metadata for CuratedForYouFeedGroupConfigData.CodingKeys;
}

unint64_t sub_1DC37DD0C()
{
  unint64_t result;

  result = qword_1F03529E0;
  if (!qword_1F03529E0)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC42C06C, &type metadata for CuratedForYouFeedGroupConfigData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F03529E0);
  }
  return result;
}

unint64_t sub_1DC37DD54()
{
  unint64_t result;

  result = qword_1EDB3ABF0;
  if (!qword_1EDB3ABF0)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC42BFDC, &type metadata for CuratedForYouFeedGroupConfigData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB3ABF0);
  }
  return result;
}

unint64_t sub_1DC37DD9C()
{
  unint64_t result;

  result = qword_1EDB3ABE8;
  if (!qword_1EDB3ABE8)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC42C004, &type metadata for CuratedForYouFeedGroupConfigData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB3ABE8);
  }
  return result;
}

uint64_t sub_1DC37DDE0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x65707974627573 && a2 == 0xE700000000000000;
  if (v2 || (sub_1DC4099E8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746E65746E6F63 && a2 == 0xE700000000000000 || (sub_1DC4099E8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001DC44AB40 || (sub_1DC4099E8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001DC44AB60 || (sub_1DC4099E8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001DC44AB80 || (sub_1DC4099E8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001DC44ABA0 || (sub_1DC4099E8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001DC44ABC0 || (sub_1DC4099E8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001DC44ABE0 || (sub_1DC4099E8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x80000001DC44AC00)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    v6 = sub_1DC4099E8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 8;
    else
      return 9;
  }
}

uint64_t type metadata accessor for ArticleSharingActivityOptionsProvider()
{
  return objc_opt_self();
}

uint64_t *sub_1DC37E1D4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1DC102724(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = type metadata accessor for StockForYouFeedGroupKnobs();
    *(uint64_t *)((char *)a1 + *(int *)(v8 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v8 + 20));
    *(uint64_t *)((char *)a1 + *(int *)(v8 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(v8 + 24));
    v9 = type metadata accessor for ForYouFeedGroupKnobs();
    *(uint64_t *)((char *)a1 + *(int *)(v9 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(v9 + 24));
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1DC37E2B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_1DC102724(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = type metadata accessor for StockForYouFeedGroupKnobs();
  *(_QWORD *)(a1 + *(int *)(v7 + 20)) = *(_QWORD *)(a2 + *(int *)(v7 + 20));
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + *(int *)(v7 + 24)) = *(_QWORD *)(a2 + *(int *)(v7 + 24));
  swift_retain();
  swift_release();
  v8 = type metadata accessor for ForYouFeedGroupKnobs();
  *(_QWORD *)(a1 + *(int *)(v8 + 24)) = *(_QWORD *)(a2 + *(int *)(v8 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1DC37E37C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_1DC102724(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = type metadata accessor for StockForYouFeedGroupKnobs();
  *(_QWORD *)(a1 + *(int *)(v7 + 20)) = *(_QWORD *)(a2 + *(int *)(v7 + 20));
  *(_QWORD *)(a1 + *(int *)(v7 + 24)) = *(_QWORD *)(a2 + *(int *)(v7 + 24));
  v8 = type metadata accessor for ForYouFeedGroupKnobs();
  *(_QWORD *)(a1 + *(int *)(v8 + 24)) = *(_QWORD *)(a2 + *(int *)(v8 + 24));
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1DC37E40C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_1DC102724(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = type metadata accessor for StockForYouFeedGroupKnobs();
  *(_QWORD *)(a1 + *(int *)(v7 + 20)) = *(_QWORD *)(a2 + *(int *)(v7 + 20));
  swift_release();
  *(_QWORD *)(a1 + *(int *)(v7 + 24)) = *(_QWORD *)(a2 + *(int *)(v7 + 24));
  swift_release();
  v8 = type metadata accessor for ForYouFeedGroupKnobs();
  *(_QWORD *)(a1 + *(int *)(v8 + 24)) = *(_QWORD *)(a2 + *(int *)(v8 + 24));
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1DC37E4B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ForYouFeedGroupKnobs();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_1DC37E4F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ForYouFeedGroupKnobs();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_1DC37E534@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;
  char v17;
  char v18;

  v14 = a2;
  sub_1DC092F50(0, qword_1EDB31730, (void (*)(uint64_t))type metadata accessor for ForYouFeedGroupKnobs);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v13 - v5;
  sub_1DC37E80C();
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC37E864();
  sub_1DC409B08();
  if (!v2)
  {
    type metadata accessor for ForYouFeedGroupKnobs();
    v18 = 0;
    sub_1DC080808(&qword_1EDB316E8, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedGroupKnobs, (uint64_t)&unk_1DC430A98);
    sub_1DC4098B0();
    v17 = 1;
    sub_1DC4098B0();
    sub_1DC092B08((uint64_t)v6, v15, v16, v14);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1DC37E6E0@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1DC4098A4();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

uint64_t sub_1DC37E73C@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1DC4098A4();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

uint64_t sub_1DC37E79C()
{
  sub_1DC37E864();
  return sub_1DC409B20();
}

uint64_t sub_1DC37E7C4()
{
  sub_1DC37E864();
  return sub_1DC409B2C();
}

uint64_t sub_1DC37E7EC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DC37E534(a1, a2);
}

uint64_t sub_1DC37E800@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1DC37E8A8(v1, a1);
}

void sub_1DC37E80C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB3FD98)
  {
    sub_1DC37E864();
    v0 = sub_1DC409928();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB3FD98);
  }
}

unint64_t sub_1DC37E864()
{
  unint64_t result;

  result = qword_1EDB329A0;
  if (!qword_1EDB329A0)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC42C2CC, &type metadata for ForYouFeedKnobsConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB329A0);
  }
  return result;
}

uint64_t sub_1DC37E8A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ForYouFeedGroupKnobs();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t storeEnumTagSinglePayload for ForYouFeedKnobsConfig.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1DC37E938 + 4 * byte_1DC42C145[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1DC37E96C + 4 * asc_1DC42C140[v4]))();
}

uint64_t sub_1DC37E96C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC37E974(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC37E97CLL);
  return result;
}

uint64_t sub_1DC37E988(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC37E990);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1DC37E994(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC37E99C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ForYouFeedKnobsConfig.CodingKeys()
{
  return &type metadata for ForYouFeedKnobsConfig.CodingKeys;
}

unint64_t sub_1DC37E9BC()
{
  unint64_t result;

  result = qword_1F0352A88;
  if (!qword_1F0352A88)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC42C2A4, &type metadata for ForYouFeedKnobsConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F0352A88);
  }
  return result;
}

unint64_t sub_1DC37EA04()
{
  unint64_t result;

  result = qword_1EDB329B0;
  if (!qword_1EDB329B0)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC42C1DC, &type metadata for ForYouFeedKnobsConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB329B0);
  }
  return result;
}

unint64_t sub_1DC37EA4C()
{
  unint64_t result;

  result = qword_1EDB329A8;
  if (!qword_1EDB329A8)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC42C204, &type metadata for ForYouFeedKnobsConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB329A8);
  }
  return result;
}

uint64_t sub_1DC37EA94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t);
  _QWORD v32[2];
  uint64_t *v33;
  char *v34;
  uint64_t v35;
  _OWORD v36[2];
  uint64_t v37;
  _OWORD v38[2];
  uint64_t v39;

  v32[1] = a3;
  v35 = a2;
  sub_1DC1EA918(0);
  MEMORY[0x1E0C80A78](v4);
  v34 = (char *)v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for StocksActivity(0);
  MEMORY[0x1E0C80A78](v6);
  v33 = (_QWORD *)((char *)v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1DC373B68(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1DC407E10();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)v32 - v16;
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)v32 - v19;
  sub_1DC37EE14(a1, (uint64_t)v10);
  sub_1DC1EF064();
  v22 = v21;
  v23 = *(_QWORD *)(v21 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v10, 1, v21) == 1)
    return sub_1DC0926D8((uint64_t)v10, (uint64_t (*)(_QWORD))sub_1DC373B68);
  sub_1DC4080B0();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v10, v22);
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v20, v17, v11);
  v25 = v35;
  if (v35)
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v14, v20, v11);
    v26 = (*(uint64_t (**)(char *, uint64_t))(v12 + 88))(v14, v11);
    if (v26 == *MEMORY[0x1E0D5D4B0])
    {
      v27 = 0x4000000000000000;
    }
    else
    {
      if (v26 != *MEMORY[0x1E0D5D498])
      {
        v31 = *(void (**)(char *, uint64_t))(v12 + 8);
        swift_retain();
        v31(v14, v11);
        v31(v20, v11);
        return swift_release();
      }
      v27 = 0x6000000000000000;
    }
    v28 = (uint64_t)v33;
    *v33 = v27 | v25;
    swift_storeEnumTagMultiPayload();
    v29 = sub_1DC403340();
    v30 = (uint64_t)v34;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v34, 1, 1, v29);
    v39 = 0;
    memset(v38, 0, sizeof(v38));
    v37 = 0;
    memset(v36, 0, sizeof(v36));
    swift_retain();
    sub_1DC22BAE0(v28, 0, v30, (uint64_t)v38, 0, 0, (uint64_t)v36);
    swift_release();
    sub_1DC17C7C8((uint64_t)v36, &qword_1EDB29410, (unint64_t *)&unk_1EDB29400);
    sub_1DC17C7C8((uint64_t)v38, &qword_1EDB2ACD0, (unint64_t *)&qword_1EDB2ACC0);
    sub_1DC0926D8(v30, (uint64_t (*)(_QWORD))sub_1DC1EA918);
    sub_1DC0926D8(v28, type metadata accessor for StocksActivity);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v20, v11);
}

uint64_t sub_1DC37EE14(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1DC373B68(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC37EE58@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t *boxed_opaque_existential_1;
  void (*v13)(char *, uint64_t *, uint64_t, __n128);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  char *v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24[5];
  _QWORD v25[3];
  uint64_t v26;
  uint64_t v27;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC0995E8(0, (unint64_t *)&qword_1EDB3FAB0);
  result = sub_1DC4025FC();
  if (!result)
  {
    __break(1u);
    goto LABEL_8;
  }
  v5 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, (unint64_t *)&qword_1EDB29EE0);
  result = sub_1DC402608();
  if (!v24[0])
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v6 = sub_1DC4018AC();
  result = sub_1DC4025FC();
  if (!result)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v7 = result;
  v22 = v5;
  v23 = a2;
  v26 = v6;
  v27 = sub_1DC080808((unint64_t *)&qword_1EDB29180, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8638], MEMORY[0x1E0D59B68]);
  v25[0] = v7;
  sub_1DC40583C();
  swift_allocObject();
  v8 = sub_1DC405830();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB2B0F0);
  result = sub_1DC402608();
  v9 = v6;
  if (!v6)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v10 = v27;
  v11 = __swift_project_boxed_opaque_existential_1(v25, v26);
  v24[3] = v9;
  v24[4] = v10;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v24);
  v13 = *(void (**)(char *, uint64_t *, uint64_t, __n128))(*(_QWORD *)(v9 - 8) + 16);
  ((void (*)(uint64_t *, _QWORD *, uint64_t))v13)(boxed_opaque_existential_1, v11, v9);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC09A0D0();
  result = sub_1DC4025FC();
  if (result)
  {
    v14 = type metadata accessor for AudioActionHandler();
    v15 = sub_1DC401F84();
    v16 = swift_release();
    v17 = MEMORY[0x1E0C80A78](v16);
    v19 = (char *)&v22 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
    v13(v19, boxed_opaque_existential_1, v9, v17);
    v20 = sub_1DC3B1A74(v22, v8, (uint64_t)v19, v15, v14, v9, v10);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
    v21 = v23;
    v23[3] = v14;
    result = sub_1DC080808((unint64_t *)&unk_1EDB30140, (uint64_t (*)(uint64_t))type metadata accessor for AudioActionHandler, (uint64_t)&unk_1DC42E910);
    v21[4] = result;
    *v21 = v20;
    return result;
  }
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1DC37F148@<X0>(_QWORD *a1@<X0>, unint64_t *a2@<X8>)
{
  unint64_t result;
  unint64_t v4;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC08CBF0(0, &qword_1EDB292C8, (uint64_t (*)(uint64_t))type metadata accessor for StocksAudioTrack, sub_1DC12D234, MEMORY[0x1E0D579A0]);
  result = sub_1DC4025FC();
  if (result)
  {
    v4 = result;
    result = sub_1DC37FB4C();
    *a2 = v4;
    a2[1] = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC37F1C8(_QWORD *a1)
{
  uint64_t result;
  objc_class *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4018AC();
  result = sub_1DC4025FC();
  if (!result)
  {
    __break(1u);
    goto LABEL_10;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC09A0D0();
  result = sub_1DC4025FC();
  if (!result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  sub_1DC401F84();
  swift_release();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB29C60);
  result = sub_1DC4025D8();
  if (!v7)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  result = sub_1DC4025D8();
  if (!v6)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v3 = (objc_class *)type metadata accessor for NowPlayingBackgroundView();
  objc_msgSend(objc_allocWithZone(v3), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(objc_allocWithZone(v3), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, (unint64_t *)&unk_1EDB29308);
  result = sub_1DC402608();
  if (!v5)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, (unint64_t *)&qword_1EDB29EE0);
  result = sub_1DC402608();
  if (!v4)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  result = sub_1DC4025FC();
  if (result)
  {
    sub_1DC08CBF0(0, &qword_1EDB292C8, (uint64_t (*)(uint64_t))type metadata accessor for StocksAudioTrack, sub_1DC12D234, MEMORY[0x1E0D579A0]);
    sub_1DC080808((unint64_t *)&qword_1EDB29180, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8638], MEMORY[0x1E0D59B68]);
    sub_1DC404870();
    swift_allocObject();
    sub_1DC404858();
    sub_1DC080808((unint64_t *)&unk_1F0352AA0, (uint64_t (*)(uint64_t))type metadata accessor for NowPlayingBackgroundView, (uint64_t)&unk_1DC41D57C);
    return sub_1DC4020C8();
  }
LABEL_15:
  __break(1u);
  return result;
}

uint64_t sub_1DC37F56C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, (unint64_t *)&qword_1EDB29EE0);
  result = sub_1DC402608();
  if (v8)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1DC4018AC();
    result = sub_1DC4025FC();
    if (result)
    {
      v5 = result;
      v6 = type metadata accessor for NowPlayingMenuFactory();
      v7 = (_QWORD *)swift_allocObject();
      v7[2] = v8;
      v7[3] = v9;
      v7[4] = v5;
      a2[3] = v6;
      result = sub_1DC080808((unint64_t *)&unk_1F0352A90, (uint64_t (*)(uint64_t))type metadata accessor for NowPlayingMenuFactory, (uint64_t)&unk_1DC417568);
      a2[4] = result;
      *a2 = v7;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1DC37F684@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC08CBF0(0, (unint64_t *)&qword_1EDB29CB0, type metadata accessor for StocksActivity, sub_1DC08CDA4, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB75B0]);
  result = sub_1DC4025FC();
  if (!result)
  {
    __break(1u);
    goto LABEL_6;
  }
  v5 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC09A0D0();
  result = sub_1DC4025FC();
  if (!result)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v6 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, (unint64_t *)&qword_1EDB29EE0);
  result = sub_1DC402608();
  if (v9)
  {
    v7 = type metadata accessor for NowPlayingPresenter();
    v8 = (_QWORD *)swift_allocObject();
    v8[2] = v5;
    v8[3] = v6;
    v8[4] = v9;
    v8[5] = v10;
    a2[3] = v7;
    result = sub_1DC080808(qword_1EDB30F28, (uint64_t (*)(uint64_t))type metadata accessor for NowPlayingPresenter, (uint64_t)&unk_1DC417504);
    a2[4] = result;
    *a2 = v8;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

id sub_1DC37F7F4()
{
  return objc_msgSend((id)objc_opt_self(), sel_sharedCommandCenter);
}

uint64_t sub_1DC37F820(_QWORD *a1)
{
  uint64_t result;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC09A0D0();
  result = sub_1DC4025FC();
  if (!result)
    __break(1u);
  return result;
}

uint64_t sub_1DC37F870()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1DC37F894(uint64_t a1)
{
  uint64_t v1;

  return sub_1DC3160D8(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1DC37F89C()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DC37F8C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1DC153614(a1, a2, *(void **)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_1DC37F8D0()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  return swift_deallocObject();
}

uint64_t sub_1DC37F8FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1DC279378(a1, a2, *(_QWORD *)(v2 + 16), (_QWORD *)(v2 + 24));
}

_QWORD *sub_1DC37F908(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, _QWORD *a7)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v25[4];
  _QWORD v26[5];

  v14 = sub_1DC400010();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26[3] = type metadata accessor for AnalyticsChannelDataFactory();
  v26[4] = &off_1EA45E160;
  v26[0] = a4;
  a7[14] = 0;
  a7[15] = 0;
  a7[2] = a1;
  a7[3] = a2;
  a7[5] = 0;
  a7[6] = a3;
  sub_1DC0824D4((uint64_t)v26, (uint64_t)(a7 + 7));
  a7[12] = a5;
  sub_1DC0824D4(a6, (uint64_t)(a7 + 16));
  swift_retain();
  v18 = a2;
  swift_retain();
  swift_retain();
  v19 = sub_1DC401684();
  a7[4] = v19;
  type metadata accessor for AudioSessionManager.Session();
  v20 = swift_allocObject();
  swift_retain();
  sub_1DC400004();
  v21 = sub_1DC3FFFF8();
  v23 = v22;
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  *(_QWORD *)(v20 + 16) = v21;
  *(_QWORD *)(v20 + 24) = v23;
  *(_BYTE *)(v20 + 48) = 1;
  *(_QWORD *)(v20 + 56) = 0;
  *(_QWORD *)(v20 + 64) = 0;
  *(_QWORD *)(v20 + 32) = v19;
  *(_QWORD *)(v20 + 40) = 0;
  a7[13] = v20;
  swift_allocObject();
  swift_weakInit();
  sub_1DC402758();
  swift_release();
  __swift_project_boxed_opaque_existential_1(v25, v25[3]);
  swift_retain();
  sub_1DC4024AC();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a6);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  return a7;
}

uint64_t sub_1DC37FAF4()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1DC37FB18(uint64_t a1, uint64_t a2)
{
  return sub_1DC321554(a1, a2);
}

uint64_t sub_1DC37FB20()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocObject();
}

unint64_t sub_1DC37FB44@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1DC37F148((_QWORD *)(v1 + 16), a1);
}

unint64_t sub_1DC37FB4C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1F0352AB0;
  if (!qword_1F0352AB0)
  {
    sub_1DC08CBF0(255, &qword_1EDB292C8, (uint64_t (*)(uint64_t))type metadata accessor for StocksAudioTrack, sub_1DC12D234, MEMORY[0x1E0D579A0]);
    result = MEMORY[0x1DF0CAB8C](MEMORY[0x1E0D579A8], v1);
    atomic_store(result, (unint64_t *)&qword_1F0352AB0);
  }
  return result;
}

void sub_1DC37FD14(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  void *v5;

  v1 = a1 + 16;
  swift_beginAccess();
  v2 = MEMORY[0x1DF0CAD78](v1);
  if (v2)
  {
    v3 = (void *)v2;
    v4 = *(id *)(v2 + OBJC_IVAR____TtC8StocksUI24ForYouFeedViewController_blueprintViewController);

    sub_1DC4055CC();
    v5 = (void *)sub_1DC405074();
    swift_release();
    objc_msgSend(v5, sel_reloadData);

  }
}

void sub_1DC37FDA8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;

  v3 = sub_1DC4052FC();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v7 = MEMORY[0x1DF0CAD78](a2 + 16);
  if (v7)
  {
    v8 = (void *)v7;
    sub_1DC4055CC();
    v9 = (void *)sub_1DC405074();
    swift_release();
    sub_1DC405608();
    swift_getObjectType();
    sub_1DC406274();
    swift_unknownObjectRelease();
    sub_1DC109614((uint64_t)&v15);
    v14 = v15;
    v10 = v16;
    v11 = v17;
    v12 = v18;
    v13 = sub_1DC10AC24();
    v19 = v14;
    v20 = v10;
    v21 = v11;
    v22 = v12;
    v23 = v13 & 1;
    sub_1DC108FFC(v9, (uint64_t)v6, 4);

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
}

void sub_1DC37FFE0()
{
  id *v0;
  id v1;

  v1 = objc_msgSend(*v0, sel_parentViewController);
  sub_1DC404048();

}

uint64_t sub_1DC380030(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t *v10;
  char *v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v20[2];
  uint64_t v21;

  v21 = sub_1DC406D78();
  v2 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  v4 = (char *)v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1DC406D84();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20[1] = sub_1DC4055B4();
  sub_1DC1F3790();
  v10 = (uint64_t *)&v8[*(int *)(v9 + 48)];
  v11 = &v8[*(int *)(v9 + 64)];
  sub_1DC407E4C();
  v12 = (_QWORD *)(a1 + OBJC_IVAR____TtC8StocksUI24ForYouFeedViewController_styler);
  swift_beginAccess();
  v13 = __swift_project_boxed_opaque_existential_1(v12, v12[3]);
  v14 = *(_QWORD *)(*v13 + 40);
  v15 = *(_QWORD *)(*v13 + 48);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(*v13 + 16), v14);
  sub_1DC0D33C0(v14, v15, v10);
  v16 = *MEMORY[0x1E0DB6F80];
  v17 = sub_1DC404390();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v11, v16, v17);
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0DBC800], v5);
  v18 = v21;
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E0DBC808], v21);
  sub_1DC4048E8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v18);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1DC380220()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;

  v0 = sub_1DC406D78();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1DC406D84();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC4055B4();
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DBC7E8], v4);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DBC808], v0);
  sub_1DC4048E8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1DC380350(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t ObjectType;
  _QWORD v17[3];
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  _QWORD v21[4];

  v17[1] = a3;
  v17[2] = a1;
  v18 = a2;
  sub_1DC10B148(0, (unint64_t *)&qword_1EDB29D00, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v17 - v7;
  v9 = sub_1DC404BDC();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v3 + OBJC_IVAR____TtC8StocksUI24ForYouFeedViewController_keyboardInputMonitor), *(_QWORD *)(v3 + OBJC_IVAR____TtC8StocksUI24ForYouFeedViewController_keyboardInputMonitor + 24));
  sub_1DC40586C();
  sub_1DC40910C();
  if (v20)
  {
    sub_1DC097DD0(&v19, (uint64_t)v21);
    __swift_project_boxed_opaque_existential_1(v21, v21[3]);
    (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x1E0DB8450], v9);
    sub_1DC405344();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
  }
  else
  {
    sub_1DC17C7C8((uint64_t)&v19, (unint64_t *)&unk_1F034ED90, &qword_1EDB41E10);
  }
  v13 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8StocksUI24ForYouFeedViewController_eventHandler);
  sub_1DC400274();
  sub_1DC10B148(0, (unint64_t *)&qword_1EDB2AB80, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790]);
  sub_1DC406D6C();
  v14 = *(_QWORD *)(v13 + 40);
  ObjectType = swift_getObjectType();
  LOBYTE(v21[0]) = 0;
  (*(void (**)(uint64_t, char *, _QWORD, _QWORD *, uint64_t, uint64_t))(v14 + 64))(v18, v8, 0, v21, ObjectType, v14);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_1DC380560()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;

  v0 = sub_1DC4011BC();
  MEMORY[0x1E0C80A78](v0);
  sub_1DC0F4CCC();
  MEMORY[0x1E0C80A78](v1);
  v2 = type metadata accessor for ForYouFeedModel();
  MEMORY[0x1E0C80A78](v2);
  sub_1DC0FF574(0);
  sub_1DC404354();
  v3 = (char *)sub_1DC380668 + 4 * byte_1DC42C490[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1DC380668()
{
  uint64_t v0;

  sub_1DC0926D8(v0, (uint64_t (*)(_QWORD))type metadata accessor for ForYouFeedModel);
  return 0;
}

uint64_t sub_1DC38078C(uint64_t a1, uint64_t a2)
{
  return sub_1DC3A468C(a2);
}

uint64_t sub_1DC3807B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1DC0B90D8(a1, a2, a3, a4, (uint64_t (*)(uint64_t))sub_1DC2D57A0);
}

uint64_t sub_1DC3807C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v12;

  sub_1DC10B148(0, &qword_1EDB2A440, MEMORY[0x1E0DBA640]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v12 - v7;
  __swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)(v2 + OBJC_IVAR____TtC8StocksUI24ForYouFeedViewController_eventHandler) + 88), *(_QWORD *)(*(_QWORD *)(v2 + OBJC_IVAR____TtC8StocksUI24ForYouFeedViewController_eventHandler) + 112));
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a2, v5);
  v9 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v10 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v10 + v9, v8, v5);
  sub_1DC401828();
  return swift_release();
}

uint64_t sub_1DC3808C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t ObjectType;

  v4 = *(_QWORD **)(v2 + OBJC_IVAR____TtC8StocksUI24ForYouFeedViewController_eventHandler);
  v5 = v4[5];
  ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 112))(a2, ObjectType, v5);
  __swift_project_boxed_opaque_existential_1(v4 + 11, v4[14]);
  return sub_1DC2D4994(a2);
}

ValueMetadata *type metadata accessor for ForYouFeedViewController.Event()
{
  return &type metadata for ForYouFeedViewController.Event;
}

uint64_t sub_1DC3809E4(uint64_t a1, uint64_t a2)
{
  return sub_1DC381C0C(a2);
}

void sub_1DC3809EC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int v7;
  void *v8;
  uint64_t v9;

  v3 = sub_1DC405824();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC404000();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a2, v3);
  v7 = (*(uint64_t (**)(char *, uint64_t))(v4 + 88))(v6, v3);
  if (v7 != *MEMORY[0x1E0DB9E80])
  {
    if (v7 == *MEMORY[0x1E0DB9E70])
    {
      sub_1DC4055CC();
      v8 = (void *)sub_1DC405074();
      swift_release();
      objc_msgSend(v8, sel_setShowsVerticalScrollIndicator_, 0);

    }
    else
    {
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    }
  }
}

void sub_1DC380B08(uint64_t a1, uint64_t a2)
{
  sub_1DC381E60(a2);
}

void sub_1DC380B10(double a1)
{
  void *v1;
  id v3;
  id v4;

  v3 = objc_msgSend(v1, sel_view);
  if (v3)
  {
    v4 = v3;
    sub_1DC1B9090(v3, a1);

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1DC380B84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;

  v4 = sub_1DC404BE8();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v5 + 16))(v8, a1, v4, v6);
  v9 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v8, v4);
  if (v9 == *MEMORY[0x1E0DB8468])
  {
    v10 = *MEMORY[0x1E0DBA288];
    v11 = sub_1DC4059F8();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(a2, v10, v11);
    v12 = (unsigned int *)MEMORY[0x1E0DBA230];
LABEL_5:
    v15 = *v12;
    v16 = sub_1DC4059C8();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(a2, v15, v16);
  }
  if (v9 == *MEMORY[0x1E0DB8460])
  {
    v13 = *MEMORY[0x1E0DBA1F8];
    v14 = sub_1DC4059B0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(a2, v13, v14);
    v12 = (unsigned int *)MEMORY[0x1E0DBA208];
    goto LABEL_5;
  }
  result = sub_1DC409838();
  __break(1u);
  return result;
}

uint64_t sub_1DC380D20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DC380B84(a1, a2);
}

uint64_t sub_1DC380D34()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v1 = (_QWORD *)(*v0 + OBJC_IVAR____TtC8StocksUI24ForYouFeedViewController_styler);
  swift_beginAccess();
  v2 = __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  v4 = *(_QWORD *)(*v2 + 40);
  v3 = *(_QWORD *)(*v2 + 48);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(*v2 + 16), v4);
  (*(void (**)(uint64_t))(*(_QWORD *)(v3 + 16) + 448))(v4);
  return sub_1DC404BF4();
}

uint64_t sub_1DC380DC0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  void (*v20)(unint64_t, _QWORD, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned __int8 v29;

  v28 = a1;
  swift_getObjectType();
  v1 = sub_1DC4047D4();
  v26 = *(_QWORD *)(v1 - 8);
  v27 = v1;
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v23 - v5;
  v7 = sub_1DC4047E0();
  v24 = *(_QWORD *)(v7 - 8);
  v25 = v7;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v23 - v12;
  if (qword_1EDB28F80 != -1)
    swift_once();
  sub_1DC081B48(&qword_1EDB359D8, v11, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedViewController, (uint64_t)&unk_1DC42C874);
  sub_1DC4012D0();
  v14 = v29;
  sub_1DC089DA4(0, (unint64_t *)&qword_1EDB3FEE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB7BE8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v15 = sub_1DC4047EC();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(_QWORD *)(v16 + 72);
  v18 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  if (v14 == 1)
  {
    v19 = swift_allocObject();
    *(_OWORD *)(v19 + 16) = xmmword_1DC40C740;
    v20 = *(void (**)(unint64_t, _QWORD, uint64_t))(v16 + 104);
    v20(v19 + v18, *MEMORY[0x1E0DB7BD8], v15);
    v20(v19 + v18 + v17, *MEMORY[0x1E0DB7BE0], v15);
    sub_1DC368398(v19);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    (*(void (**)(char *, _QWORD, uint64_t))(v24 + 104))(v13, *MEMORY[0x1E0DB7BC0], v25);
    (*(void (**)(char *, _QWORD, uint64_t))(v26 + 104))(v6, *MEMORY[0x1E0DB7BA0], v27);
  }
  else
  {
    v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = xmmword_1DC40DC10;
    (*(void (**)(unint64_t, _QWORD, uint64_t))(v16 + 104))(v22 + v18, *MEMORY[0x1E0DB7BE0], v15);
    sub_1DC368398(v22);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    (*(void (**)(char *, _QWORD, uint64_t))(v24 + 104))(v9, *MEMORY[0x1E0DB7BC0], v25);
    (*(void (**)(char *, _QWORD, uint64_t))(v26 + 104))(v3, *MEMORY[0x1E0DB7BA0], v27);
  }
  return sub_1DC404804();
}

uint64_t sub_1DC381158@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC380DC0(a1);
}

uint64_t sub_1DC381178()
{
  return sub_1DC405638();
}

uint64_t sub_1DC3811A0@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = (_QWORD *)(*v1 + OBJC_IVAR____TtC8StocksUI24ForYouFeedViewController_styler);
  swift_beginAccess();
  v4 = __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  v6 = *(_QWORD *)(*v4 + 40);
  v5 = *(_QWORD *)(*v4 + 48);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(*v4 + 16), v6);
  *a1 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v5 + 16) + 72))(v6);
  v7 = *MEMORY[0x1E0DBB098];
  v8 = sub_1DC405EF0();
  return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(a1, v7, v8);
}

uint64_t sub_1DC381254(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  int v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int *v22;
  void *v23;
  void *v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;

  v2 = sub_1DC405B54();
  v26 = *(_QWORD *)(v2 - 8);
  v27 = v2;
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0D8B60(0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1DC400280();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1DC404BDC();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v13 + 16))(v16, a1, v12, v14);
  v17 = (*(uint64_t (**)(char *, uint64_t))(v13 + 88))(v16, v12);
  if (v17 == *MEMORY[0x1E0DB8448])
  {
    sub_1DC4055CC();
    v18 = (void *)sub_1DC405074();
    swift_release();
    v19 = objc_msgSend(v18, sel_indexPathsForSelectedItems);

    if (v19)
    {
      v20 = sub_1DC408CD4();

      if (*(_QWORD *)(v20 + 16))
      {
        (*(void (**)(char *, unint64_t, uint64_t))(v9 + 16))(v7, v20 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80)), v8);
        v21 = 0;
      }
      else
      {
        v21 = 1;
      }
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, v21, 1, v8);
      swift_bridgeObjectRelease();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) != 1)
      {
        (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
        sub_1DC4055CC();
        v23 = (void *)sub_1DC405074();
        swift_release();
        v24 = (void *)sub_1DC40022C();
        objc_msgSend(v23, sel_deselectItemAtIndexPath_animated_, v24, 1);

        (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
        goto LABEL_12;
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
    }
    sub_1DC0926D8((uint64_t)v7, (uint64_t (*)(_QWORD))sub_1DC0D8B60);
LABEL_12:
    v22 = (unsigned int *)MEMORY[0x1E0DBA6B8];
    goto LABEL_13;
  }
  if (v17 == *MEMORY[0x1E0DB8450])
  {
    v22 = (unsigned int *)MEMORY[0x1E0DBA6B0];
LABEL_13:
    (*(void (**)(char *, _QWORD, uint64_t))(v26 + 104))(v4, *v22, v27);
    return sub_1DC4055F0();
  }
  result = sub_1DC409838();
  __break(1u);
  return result;
}

uint64_t sub_1DC3815C0(uint64_t a1)
{
  return sub_1DC381254(a1);
}

uint64_t sub_1DC3815F8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[3];
  uint64_t v14;
  uint64_t v15;

  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC8StocksUI24ForYouFeedViewController_styler);
  swift_beginAccess();
  v4 = __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  v5 = *(_QWORD *)(*v4 + 40);
  v6 = *(_QWORD *)(*v4 + 48);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(*v4 + 16), v5);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v6 + 72))(v13, v5, v6);
  v7 = v14;
  v8 = v15;
  __swift_project_boxed_opaque_existential_1(v13, v14);
  v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 488))(v7, v8);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
  *a1 = v9;
  v10 = *MEMORY[0x1E0DBA7F8];
  v11 = sub_1DC405BE4();
  return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(a1, v10, v11);
}

uint64_t sub_1DC3816DC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1DC4055CC();
  v2 = sub_1DC405074();
  swift_release();
  *a1 = v2;
  v3 = *MEMORY[0x1E0DB8660];
  v4 = sub_1DC404CA8();
  return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 104))(a1, v3, v4);
}

uint64_t sub_1DC381750()
{
  swift_getObjectType();
  return sub_1DC4042DC();
}

uint64_t sub_1DC381778()
{
  return sub_1DC081B48(&qword_1EDB37600, 255, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedSectionDescriptor, (uint64_t)&unk_1DC425AEC);
}

uint64_t sub_1DC3817A8()
{
  return sub_1DC081B48((unint64_t *)&unk_1EDB2E070, 255, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedModel, (uint64_t)&unk_1DC42ED60);
}

void sub_1DC3817D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  id v13;
  double MinY;
  double v15;
  void *v16;
  CGRect v18;
  CGRect v19;

  if (a3 != a2)
  {
    v4 = a3;
    v6 = *a4;
    v7 = *a4 + 8 * a3 - 8;
LABEL_5:
    v8 = *(void **)(v6 + 8 * v4);
    v9 = a1;
    v10 = v7;
    while (1)
    {
      v11 = *(void **)v10;
      v12 = v8;
      v13 = v11;
      objc_msgSend(v12, sel_frame);
      MinY = CGRectGetMinY(v18);
      objc_msgSend(v13, sel_frame);
      v15 = CGRectGetMinY(v19);

      if (MinY > v15)
      {
LABEL_4:
        ++v4;
        v7 += 8;
        if (v4 == a2)
          return;
        goto LABEL_5;
      }
      if (!v6)
        break;
      v16 = *(void **)v10;
      v8 = *(void **)(v10 + 8);
      *(_QWORD *)v10 = v8;
      *(_QWORD *)(v10 + 8) = v16;
      v10 -= 8;
      if (v4 == ++v9)
        goto LABEL_4;
    }
    __break(1u);
  }
}

uint64_t sub_1DC3818D4(void **__src, id *a2, unint64_t a3, void **a4)
{
  id *v5;
  void **v6;
  int64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void **v13;
  void **v14;
  void *v15;
  id v16;
  id v17;
  double v18;
  double v19;
  id *v20;
  id *v21;
  id *v22;
  void **v23;
  id *v24;
  id *v25;
  void *v26;
  id v27;
  id v28;
  double MinY;
  double v30;
  uint64_t result;
  char *v33;
  void **v34;
  id *v35;
  CGRect v36;
  CGRect v37;
  CGRect v38;
  CGRect v39;

  v5 = a2;
  v6 = __src;
  v7 = (char *)a2 - (char *)__src;
  v8 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0)
    v8 = (char *)a2 - (char *)__src;
  v9 = v8 >> 3;
  v10 = a3 - (_QWORD)a2;
  v11 = a3 - (_QWORD)a2 + 7;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v11 = a3 - (_QWORD)a2;
  v12 = v11 >> 3;
  v35 = __src;
  v34 = a4;
  if (v9 >= v11 >> 3)
  {
    if (v10 < -7)
      goto LABEL_46;
    if (a4 != a2 || &a2[v12] <= a4)
      memmove(a4, a2, 8 * v12);
    v21 = &a4[v12];
    v33 = (char *)v21;
    v35 = v5;
    if (v6 >= v5 || v10 < 8)
      goto LABEL_45;
    v22 = (id *)(a3 - 8);
    v23 = v5;
    while (1)
    {
      v24 = v22 + 1;
      v25 = v21 - 1;
      v26 = *--v23;
      v27 = *(v21 - 1);
      v28 = v26;
      objc_msgSend(v27, sel_frame);
      MinY = CGRectGetMinY(v38);
      objc_msgSend(v28, sel_frame);
      v30 = CGRectGetMinY(v39);

      if (MinY <= v30)
        break;
      v33 = (char *)(v21 - 1);
      if (v24 < v21 || v22 >= v21)
      {
        *v22 = *v25;
        v23 = v5;
        --v21;
        goto LABEL_43;
      }
      if (v24 != v21)
        *v22 = *v25;
      v23 = v5;
      --v21;
      if (v5 <= v6)
        goto LABEL_45;
LABEL_44:
      --v22;
      v5 = v23;
      if (v21 <= a4)
        goto LABEL_45;
    }
    if (v24 != v5 || v22 >= v5)
      *v22 = *v23;
    v35 = v23;
LABEL_43:
    if (v23 <= v6)
      goto LABEL_45;
    goto LABEL_44;
  }
  if (v7 >= -7)
  {
    if (a4 != __src || &__src[v9] <= a4)
      memmove(a4, __src, 8 * v9);
    v13 = &a4[v9];
    v33 = (char *)v13;
    if ((unint64_t)v5 < a3 && v7 >= 8)
    {
      v14 = a4;
      do
      {
        v15 = *v14;
        v16 = *v5;
        v17 = v15;
        objc_msgSend(v16, sel_frame);
        v18 = CGRectGetMinY(v36);
        objc_msgSend(v17, sel_frame);
        v19 = CGRectGetMinY(v37);

        if (v18 <= v19)
        {
          v20 = v5 + 1;
          if (v6 < v5 || v6 >= v20 || v6 != v5)
            *v6 = *v5;
        }
        else
        {
          if (v6 != v14)
            *v6 = *v14;
          v34 = ++v14;
          v20 = v5;
        }
        ++v6;
        if (v14 >= v13)
          break;
        v5 = v20;
      }
      while ((unint64_t)v20 < a3);
      v35 = v6;
    }
LABEL_45:
    sub_1DC35D98C(&v35, &v34, &v33);
    return 1;
  }
LABEL_46:
  result = sub_1DC40988C();
  __break(1u);
  return result;
}

uint64_t sub_1DC381C0C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  uint64_t result;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;

  v2 = sub_1DC4052FC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1DC405824();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v7 + 16))(v10, a1, v6, v8);
  result = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v10, v6);
  if ((_DWORD)result != *MEMORY[0x1E0DB9E60]
    && (_DWORD)result != *MEMORY[0x1E0DB9E78]
    && (_DWORD)result != *MEMORY[0x1E0DB9E80])
  {
    if ((_DWORD)result == *MEMORY[0x1E0DB9E70])
    {
      sub_1DC4055CC();
      v14 = (void *)sub_1DC405074();
      swift_release();
      sub_1DC405608();
      swift_getObjectType();
      sub_1DC406274();
      swift_unknownObjectRelease();
      sub_1DC109614((uint64_t)&v20);
      v19 = v20;
      v15 = v21;
      v16 = v22;
      v17 = v23;
      v18 = sub_1DC10AC24();
      v24 = v19;
      v25 = v15;
      v26 = v16;
      v27 = v17;
      v28 = v18 & 1;
      sub_1DC108FFC(v14, (uint64_t)v5, 1);

      return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    }
    else if ((_DWORD)result != *MEMORY[0x1E0DB9E68])
    {
      result = sub_1DC409838();
      __break(1u);
    }
  }
  return result;
}

void sub_1DC381E60(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void (*v13)(char *, uint64_t, uint64_t);
  uint64_t (*v14)(char *, uint64_t);
  int v15;
  int v16;
  int v17;
  void *v19;
  int v23;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  id v32;
  void *v33;
  void *v34;
  id v35;
  void *v36;
  void *v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  char v44;
  id v45;
  void *v46;
  void *v47;
  id v48;
  double v49;
  double v50;
  double v51;
  double v52;
  id v53;
  uint64_t v54;
  void *v55;
  void *v56;
  void *v57;
  id v58;
  double v59;
  double v60;
  double v61;
  double v62;
  id v63;
  uint64_t v64;
  void *v65;
  void *v66;
  __int128 v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t aBlock;
  uint64_t v72;
  void *v73;
  void *v74;
  void (*v75)();
  uint64_t v76;
  __int128 v77;
  uint64_t v78;
  uint64_t v79;
  char v80;
  __int128 v81;
  uint64_t v82;
  uint64_t v83;
  char v84;
  char v85;

  v2 = v1;
  v4 = sub_1DC4052FC();
  v69 = *(_QWORD *)(v4 - 8);
  v70 = v4;
  MEMORY[0x1E0C80A78](v4);
  v68 = (char *)&v67 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1DC4059F8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v67 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v67 - v11;
  sub_1DC404018();
  v13 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v13(v12, a1, v6);
  v14 = *(uint64_t (**)(char *, uint64_t))(v7 + 88);
  v15 = v14(v12, v6);
  v16 = *MEMORY[0x1E0DBA260];
  v17 = *MEMORY[0x1E0DBA290];
  if (v15 == *MEMORY[0x1E0DBA260] || v15 == v17)
  {
    *(_QWORD *)&v67 = v13;
    sub_1DC4055CC();
    v19 = (void *)sub_1DC405074();
    swift_release();
    objc_msgSend(v19, sel_setShowsVerticalScrollIndicator_, 1);
  }
  else
  {
    if (v15 != *MEMORY[0x1E0DBA298] && v15 != *MEMORY[0x1E0DBA288])
    {
      if (v15 == *MEMORY[0x1E0DBA2A0] || v15 == *MEMORY[0x1E0DBA280] || v15 == *MEMORY[0x1E0DBA278])
        goto LABEL_21;
      if (v15 != *MEMORY[0x1E0DBA270])
      {
LABEL_49:
        sub_1DC409838();
        __break(1u);
        return;
      }
    }
    *(_QWORD *)&v67 = v13;
    sub_1DC4055CC();
    v19 = (void *)sub_1DC405074();
    swift_release();
    objc_msgSend(v19, sel_setShowsVerticalScrollIndicator_, 0);
  }

  v13 = (void (*)(char *, uint64_t, uint64_t))v67;
LABEL_21:
  v13(v9, a1, v6);
  v23 = v14(v9, v6);
  if (v23 == v16 || v23 == v17)
    goto LABEL_26;
  if (v23 == *MEMORY[0x1E0DBA298])
  {
LABEL_32:
    v38 = *(_QWORD *)&v2[OBJC_IVAR____TtC8StocksUI24ForYouFeedViewController_collapsingAnimator];
    sub_1DC4055CC();
    v39 = (void *)sub_1DC405074();
    swift_release();
    sub_1DC405608();
    swift_getObjectType();
    v40 = (uint64_t)v68;
    sub_1DC406274();
    swift_unknownObjectRelease();
    sub_1DC109614((uint64_t)&v77);
    v67 = v77;
    v41 = v78;
    v42 = v79;
    v43 = v80;
    v44 = sub_1DC10AC24();
    v81 = v67;
    v82 = v41;
    v83 = v42;
    v84 = v43;
    v85 = v44 & 1;
    sub_1DC108FFC(v39, v40, 0);

    (*(void (**)(uint64_t, uint64_t))(v69 + 8))(v40, v70);
    v45 = objc_msgSend(v2, sel_view);
    if (v45)
    {
      v33 = v45;
      v46 = *(void **)(v38 + 48);
      if (v46)
        objc_msgSend(v46, sel_setHidden_, 0);
      v47 = (void *)objc_opt_self();
      v48 = objc_allocWithZone(MEMORY[0x1E0CD27D0]);
      LODWORD(v49) = 1036831949;
      LODWORD(v50) = 1061997773;
      LODWORD(v51) = 0.25;
      LODWORD(v52) = 1.0;
      v53 = objc_msgSend(v48, sel_initWithControlPoints__::, v51, v49, v50, v52);
      v75 = sub_1DC382A84;
      v76 = v38;
      v54 = MEMORY[0x1E0C809B0];
      aBlock = MEMORY[0x1E0C809B0];
      v72 = 1107296256;
      v73 = sub_1DC081B88;
      v74 = &block_descriptor_9_0;
      v55 = _Block_copy(&aBlock);
      swift_retain();
      swift_release();
      v75 = (void (*)())nullsub_1;
      v76 = 0;
      aBlock = v54;
      v72 = 1107296256;
      v73 = sub_1DC319CA0;
      v74 = &block_descriptor_12_1;
      v56 = _Block_copy(&aBlock);
      objc_msgSend(v47, sel_nu_animateWithDuration_delay_timingFunction_options_animations_completion_, v53, 0, v55, v56, 0.25, 0.0);

      _Block_release(v56);
      _Block_release(v55);
      goto LABEL_45;
    }
    goto LABEL_48;
  }
  if (v23 == *MEMORY[0x1E0DBA288])
    goto LABEL_26;
  if (v23 != *MEMORY[0x1E0DBA2A0] && v23 != *MEMORY[0x1E0DBA280])
  {
    if (v23 != *MEMORY[0x1E0DBA278])
    {
      if (v23 != *MEMORY[0x1E0DBA270])
        goto LABEL_49;
      goto LABEL_32;
    }
LABEL_26:
    v25 = *(_QWORD *)&v2[OBJC_IVAR____TtC8StocksUI24ForYouFeedViewController_collapsingAnimator];
    sub_1DC4055CC();
    v26 = (void *)sub_1DC405074();
    swift_release();
    sub_1DC405608();
    swift_getObjectType();
    v27 = (uint64_t)v68;
    sub_1DC406274();
    swift_unknownObjectRelease();
    sub_1DC109614((uint64_t)&v77);
    v67 = v77;
    v28 = v78;
    v29 = v79;
    v30 = v80;
    v31 = sub_1DC10AC24();
    v81 = v67;
    v82 = v28;
    v83 = v29;
    v84 = v30;
    v85 = v31 & 1;
    sub_1DC108FFC(v26, v27, 2);

    (*(void (**)(uint64_t, uint64_t))(v69 + 8))(v27, v70);
    v32 = objc_msgSend(v2, sel_view);
    if (!v32)
    {
      __break(1u);
LABEL_48:
      __break(1u);
      goto LABEL_49;
    }
    v33 = v32;
    v34 = *(void **)(v25 + 48);
    if (!v34)
      goto LABEL_36;
    v35 = v34;
    if ((objc_msgSend(v35, sel_isHidden) & 1) == 0)
    {
      v57 = (void *)objc_opt_self();
      v58 = objc_allocWithZone(MEMORY[0x1E0CD27D0]);
      LODWORD(v59) = 1036831949;
      LODWORD(v60) = 1061997773;
      LODWORD(v61) = 0.25;
      LODWORD(v62) = 1.0;
      v63 = objc_msgSend(v58, sel_initWithControlPoints__::, v61, v59, v60, v62);
      v75 = sub_1DC382A7C;
      v76 = v25;
      v64 = MEMORY[0x1E0C809B0];
      aBlock = MEMORY[0x1E0C809B0];
      v72 = 1107296256;
      v73 = sub_1DC081B88;
      v74 = &block_descriptor_41;
      v65 = _Block_copy(&aBlock);
      swift_retain();
      swift_release();
      v75 = (void (*)())nullsub_1;
      v76 = 0;
      aBlock = v64;
      v72 = 1107296256;
      v73 = sub_1DC319CA0;
      v74 = &block_descriptor_6_2;
      v66 = _Block_copy(&aBlock);
      objc_msgSend(v57, sel_nu_animateWithDuration_delay_timingFunction_options_animations_completion_, v63, 0, v65, v66, 0.25, 0.0);

      _Block_release(v66);
      _Block_release(v65);
      goto LABEL_45;
    }

    v36 = *(void **)(v25 + 48);
    if (v36)
    {
      objc_msgSend(v36, sel_removeFromSuperview);
      v37 = *(void **)(v25 + 48);
    }
    else
    {
LABEL_36:
      v37 = 0;
    }
    *(_QWORD *)(v25 + 48) = 0;

    v33 = v37;
LABEL_45:

  }
}

uint64_t sub_1DC382628(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void *v17;
  uint64_t v18;
  void *v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t ObjectType;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  _QWORD v36[4];

  v3 = v2;
  v30 = a2;
  v32 = a1;
  sub_1DC10B148(0, (unint64_t *)&qword_1EDB29D00, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60]);
  v33 = v4;
  v31 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v28 - v5;
  sub_1DC10B148(0, (unint64_t *)&qword_1EDB2AB80, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790]);
  v28 = *(_QWORD *)(v7 - 8);
  v29 = v7;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v28 - v8;
  sub_1DC0D8B60(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1DC404BDC();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC40910C();
  if (v35)
  {
    sub_1DC097DD0(&v34, (uint64_t)v36);
    __swift_project_boxed_opaque_existential_1(v36, v36[3]);
    (*(void (**)(char *, _QWORD, uint64_t))(v14 + 104))(v16, *MEMORY[0x1E0DB8450], v13);
    sub_1DC405344();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
  }
  else
  {
    sub_1DC17C7C8((uint64_t)&v34, (unint64_t *)&unk_1F034ED90, &qword_1EDB41E10);
  }
  sub_1DC4055CC();
  v17 = (void *)sub_1DC405074();
  swift_release();
  v18 = v30;
  v19 = (void *)sub_1DC409088();

  sub_1DC4055CC();
  v20 = (void *)sub_1DC405074();
  swift_release();
  v21 = sub_1DC400280();
  v22 = *(_QWORD *)(v21 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v12, v18, v21);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v12, 0, 1, v21);
  sub_1DC40907C();

  sub_1DC0926D8((uint64_t)v12, (uint64_t (*)(_QWORD))sub_1DC0D8B60);
  v23 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8StocksUI24ForYouFeedViewController_eventHandler);
  sub_1DC4055E4();
  *(_QWORD *)&v34 = v36[0];
  sub_1DC10B148(0, (unint64_t *)&qword_1EDB29EC0, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB80B8]);
  sub_1DC10B280();
  sub_1DC405050();
  swift_release();
  sub_1DC400274();
  v24 = v29;
  sub_1DC406D6C();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v9, v24);
  v25 = *(_QWORD *)(v23 + 40);
  ObjectType = swift_getObjectType();
  LOBYTE(v34) = 0;
  (*(void (**)(uint64_t, char *, uint64_t, __int128 *, uint64_t, uint64_t))(v25 + 64))(v32, v6, 1, &v34, ObjectType, v25);

  return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v6, v33);
}

uint64_t sub_1DC382994()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DC3829C0()
{
  uint64_t v0;
  uint64_t v1;

  sub_1DC10B148(0, &qword_1EDB2A440, MEMORY[0x1E0DBA640]);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_1DC382A30(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  sub_1DC10B148(0, &qword_1EDB2A440, MEMORY[0x1E0DBA640]);
  v4 = *(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80);
  return sub_1DC2D64D0(a1, v1 + ((v4 + 16) & ~v4));
}

void sub_1DC382A7C()
{
  uint64_t v0;

  sub_1DC1B8F84(v0);
}

void sub_1DC382A84()
{
  uint64_t v0;

  sub_1DC1B8E78(v0);
}

void sub_1DC382A8C()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0;
  v2 = OBJC_IVAR____TtC8StocksUI24ForYouFeedViewController_statusBarView;
  *(_QWORD *)&v1[v2] = objc_msgSend(objc_allocWithZone((Class)sub_1DC404444()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v3 = OBJC_IVAR____TtC8StocksUI24ForYouFeedViewController_eventManager;
  sub_1DC382D78();
  swift_allocObject();
  *(_QWORD *)&v1[v3] = sub_1DC402578();
  v1[OBJC_IVAR____TtC8StocksUI24ForYouFeedViewController_toolbarTitleIsHidden] = 1;
  *(_QWORD *)&v1[OBJC_IVAR____TtC8StocksUI24ForYouFeedViewController_cancellables] = MEMORY[0x1E0DEE9E8];

  sub_1DC409838();
  __break(1u);
}

uint64_t sub_1DC382B74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  int v8;
  uint64_t result;
  uint64_t v10;

  v0 = sub_1DC4059F8();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1DC4090D0();
  if (!v4)
    return 1;
  v5 = (void *)v4;
  v6 = sub_1DC405674();
  if (!v6)
    goto LABEL_9;
  v7 = (void *)v6;
  if ((sub_1DC4090E8() & 1) == 0)
  {

LABEL_9:
    return 0;
  }
  sub_1DC405668();
  v8 = (*(uint64_t (**)(char *, uint64_t))(v1 + 88))(v3, v0);
  if (v8 == *MEMORY[0x1E0DBA260] || v8 == *MEMORY[0x1E0DBA290])
  {

    return 1;
  }
  if (v8 != *MEMORY[0x1E0DBA298]
    && v8 != *MEMORY[0x1E0DBA288]
    && v8 != *MEMORY[0x1E0DBA2A0]
    && v8 != *MEMORY[0x1E0DBA280]
    && v8 != *MEMORY[0x1E0DBA278]
    && v8 != *MEMORY[0x1E0DBA270])
  {
    result = sub_1DC409838();
    __break(1u);
    return result;
  }

  return 0;
}

uint64_t sub_1DC382D44()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1DC382D68()
{
  uint64_t v0;

  sub_1DC37FD14(v0);
}

void sub_1DC382D70(uint64_t a1)
{
  uint64_t v1;

  sub_1DC37FDA8(a1, v1);
}

void sub_1DC382D78()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB293F0)
  {
    sub_1DC11AD44();
    v0 = sub_1DC402584();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB293F0);
  }
}

uint64_t sub_1DC382DE8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC382DF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1DC092F50(0, &qword_1EDB2AFF8, (void (*)(uint64_t))MEMORY[0x1E0D5D908]);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_1DC382E40()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC382E4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1DC092F50(0, &qword_1EDB2AFF8, (void (*)(uint64_t))MEMORY[0x1E0D5D908]);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_1DC382E9C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;

  v15 = a2;
  sub_1DC092F50(0, &qword_1EDB2AFF8, (void (*)(uint64_t))MEMORY[0x1E0D5D908]);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v14 - v5;
  sub_1DC3831FC(0, &qword_1EDB3FDC0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v14 - v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC3831B8();
  sub_1DC409B08();
  if (!v2)
  {
    v12 = v15;
    sub_1DC407EF4();
    sub_1DC080808(&qword_1EDB2AFF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5D908], MEMORY[0x1E0D5D920]);
    sub_1DC4098EC();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    sub_1DC145DBC((uint64_t)v6, v12);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1DC38303C()
{
  sub_1DC3831B8();
  return sub_1DC409B20();
}

uint64_t sub_1DC383064()
{
  sub_1DC3831B8();
  return sub_1DC409B2C();
}

uint64_t sub_1DC38308C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DC382E9C(a1, a2);
}

uint64_t sub_1DC3830A0(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1DC3831FC(0, &qword_1F0352B68, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC3831B8();
  sub_1DC409B14();
  sub_1DC407EF4();
  sub_1DC080808(&qword_1F034C128, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5D908], MEMORY[0x1E0D5D918]);
  sub_1DC409958();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1DC3831B8()
{
  unint64_t result;

  result = qword_1EDB39F30;
  if (!qword_1EDB39F30)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC42CA04, &type metadata for StockForYouFeedGroupConfigData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB39F30);
  }
  return result;
}

void sub_1DC3831FC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC3831B8();
    v7 = a3(a1, &type metadata for StockForYouFeedGroupConfigData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t storeEnumTagSinglePayload for StockForYouFeedGroupConfigData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1DC383298 + 4 * byte_1DC42C8C0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1DC3832B8 + 4 * byte_1DC42C8C5[v4]))();
}

_BYTE *sub_1DC383298(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1DC3832B8(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC3832C0(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC3832C8(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC3832D0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC3832D8(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for StockForYouFeedGroupConfigData.CodingKeys()
{
  return &type metadata for StockForYouFeedGroupConfigData.CodingKeys;
}

unint64_t sub_1DC3832F8()
{
  unint64_t result;

  result = qword_1F0352B70;
  if (!qword_1F0352B70)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC42C9DC, &type metadata for StockForYouFeedGroupConfigData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F0352B70);
  }
  return result;
}

unint64_t sub_1DC383340()
{
  unint64_t result;

  result = qword_1EDB39F40;
  if (!qword_1EDB39F40)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC42C94C, &type metadata for StockForYouFeedGroupConfigData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB39F40);
  }
  return result;
}

unint64_t sub_1DC383388()
{
  unint64_t result;

  result = qword_1EDB39F38;
  if (!qword_1EDB39F38)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC42C974, &type metadata for StockForYouFeedGroupConfigData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB39F38);
  }
  return result;
}

id sub_1DC3833F8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for StockChartViewController.ErrorContext(0);
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1DC383468(void *a1)
{
  id v2;
  id v3;
  id v4;
  id v5;
  uint64_t inited;
  uint64_t v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  uint64_t v14;
  id v15;
  id v16;
  void *v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  id v23;
  id v24;
  id v25;
  uint64_t v26;
  id v27;
  id v28;
  void *v29;
  void *v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  id v35;
  id v36;
  id v37;
  uint64_t v38;
  id v39;
  id v40;
  void *v41;
  void *v42;
  id v43;
  void *v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;

  v2 = objc_msgSend(a1, sel_state);
  v3 = sub_1DC38532C();
  v4 = sub_1DC3854D8();
  v5 = sub_1DC385680();
  objc_msgSend(a1, sel_addState_, v3);
  objc_msgSend(a1, sel_addState_, v4);
  objc_msgSend(a1, sel_addState_, v5);
  sub_1DC0E7820();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DC412B70;
  *(_QWORD *)(inited + 32) = v2;
  *(_QWORD *)(inited + 40) = v4;
  *(_QWORD *)(inited + 48) = v5;
  v45 = inited;
  sub_1DC408CF8();
  if (!(v45 >> 62))
  {
    v7 = *(_QWORD *)((v45 & 0xFFFFFFFFFFFFF8) + 0x10);
    v8 = v2;
    v9 = v4;
    v10 = v5;
    v44 = v2;
    if (!v7)
      goto LABEL_5;
    goto LABEL_3;
  }
  v11 = v2;
  v12 = v4;
  v13 = v5;
  swift_bridgeObjectRetain();
  v14 = sub_1DC409850();
  swift_bridgeObjectRelease();
  v44 = v2;
  if (v14)
LABEL_3:
    sub_1DC368FE0(v45);
LABEL_5:
  swift_bridgeObjectRelease();
  v15 = objc_allocWithZone(MEMORY[0x1E0D60B08]);
  v16 = v3;
  v17 = (void *)sub_1DC408A1C();
  sub_1DC386780();
  sub_1DC080808((unint64_t *)&qword_1EDB3F950, (uint64_t (*)(uint64_t))sub_1DC386780, MEMORY[0x1E0DEFCF8]);
  v18 = (void *)sub_1DC408E48();
  swift_bridgeObjectRelease();
  v19 = objc_msgSend(v15, sel_initWithName_transitionFromStates_toState_, v17, v18, v16);

  objc_msgSend(a1, sel_addEvent_, v19);
  v20 = swift_initStackObject();
  *(_OWORD *)(v20 + 16) = xmmword_1DC40FA50;
  *(_QWORD *)(v20 + 32) = v16;
  *(_QWORD *)(v20 + 40) = v4;
  v46 = v20;
  sub_1DC408CF8();
  if (!(v46 >> 62))
  {
    v21 = *(_QWORD *)((v46 & 0xFFFFFFFFFFFFF8) + 0x10);
    v22 = v4;
    v23 = v16;
    if (!v21)
      goto LABEL_9;
    goto LABEL_7;
  }
  v24 = v4;
  v25 = v16;
  swift_bridgeObjectRetain();
  v26 = sub_1DC409850();
  swift_bridgeObjectRelease();
  if (v26)
LABEL_7:
    sub_1DC368FE0(v46);
LABEL_9:
  swift_bridgeObjectRelease();
  v27 = objc_allocWithZone(MEMORY[0x1E0D60B08]);
  v28 = v5;
  v29 = (void *)sub_1DC408A1C();
  v30 = (void *)sub_1DC408E48();
  swift_bridgeObjectRelease();
  v31 = objc_msgSend(v27, sel_initWithName_transitionFromStates_toState_, v29, v30, v28);

  objc_msgSend(a1, sel_addEvent_, v31);
  v32 = swift_initStackObject();
  *(_OWORD *)(v32 + 16) = xmmword_1DC40FA50;
  *(_QWORD *)(v32 + 32) = v16;
  *(_QWORD *)(v32 + 40) = v28;
  v47 = v32;
  sub_1DC408CF8();
  if (v47 >> 62)
  {
    v36 = v28;
    v37 = v16;
    swift_bridgeObjectRetain();
    v38 = sub_1DC409850();
    swift_bridgeObjectRelease();
    if (!v38)
      goto LABEL_13;
    goto LABEL_11;
  }
  v33 = *(_QWORD *)((v47 & 0xFFFFFFFFFFFFF8) + 0x10);
  v34 = v28;
  v35 = v16;
  if (v33)
LABEL_11:
    sub_1DC368FE0(v47);
LABEL_13:
  swift_bridgeObjectRelease();
  v39 = objc_allocWithZone(MEMORY[0x1E0D60B08]);
  v40 = v4;
  v41 = (void *)sub_1DC408A1C();
  v42 = (void *)sub_1DC408E48();
  swift_bridgeObjectRelease();
  v43 = objc_msgSend(v39, sel_initWithName_transitionFromStates_toState_, v41, v42, v40);

  objc_msgSend(a1, sel_addEvent_, v43);
  objc_msgSend(a1, sel_activate);

}

id StockChartViewController.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id StockChartViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  objc_class *v3;
  objc_class *v4;
  void *v6;
  id v7;

  v4 = v3;
  if (a2)
  {
    v6 = (void *)sub_1DC408A1C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = 0;
  }
  v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);

  return v7;
}

void StockChartViewController.init(nibName:bundle:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id StockChartViewController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

Swift::Void __swiftcall StockChartViewController.viewDidLoad()()
{
  char *v0;
  char *v1;
  objc_class *ObjectType;
  uint64_t v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  void (**v10)(uint64_t);
  uint64_t v11;
  id v12;
  void *v13;
  id v14;
  void *v15;
  id v16;
  void *v17;
  void *v18;
  void *v19;
  id v20;
  void *v21;
  id v22;
  void *v23;
  void *v24;
  id v25;
  void *v26;
  id v27;
  void *v28;
  uint64_t ObjCClassFromMetadata;
  id v30;
  void *v31;
  id v32;
  _QWORD v33[2];
  uint64_t v34;
  char v35[40];
  objc_super v36;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  v3 = sub_1DC4002BC();
  v4 = *(_QWORD *)(v3 - 8);
  *(_QWORD *)&v5 = MEMORY[0x1E0C80A78](v3).n128_u64[0];
  v7 = (char *)v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36.receiver = v0;
  v36.super_class = ObjectType;
  objc_msgSendSuper2(&v36, sel_viewDidLoad, v5);
  v8 = *(_QWORD *)&v0[OBJC_IVAR____TtC8StocksUI24StockChartViewController_dateRangePicker];
  v9 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v10 = (void (**)(uint64_t))(v8 + OBJC_IVAR____TtC8StocksUI19DateRangePickerView_onChange);
  v11 = *(_QWORD *)(v8 + OBJC_IVAR____TtC8StocksUI19DateRangePickerView_onChange);
  *v10 = sub_1DC386508;
  v10[1] = (void (*)(uint64_t))v9;
  sub_1DC0E81D0(v11);
  v12 = objc_msgSend(v1, sel_view);
  if (!v12)
  {
    __break(1u);
    goto LABEL_12;
  }
  v13 = v12;
  objc_msgSend(v12, sel_addSubview_, *(_QWORD *)&v1[OBJC_IVAR____TtC8StocksUI24StockChartViewController_topDateRangePickerSeparator]);

  v14 = objc_msgSend(v1, sel_view);
  if (!v14)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v15 = v14;
  objc_msgSend(v14, sel_addSubview_, *(_QWORD *)&v1[OBJC_IVAR____TtC8StocksUI24StockChartViewController_interactionDisplayView]);

  v16 = objc_msgSend(v1, sel_view);
  if (!v16)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v17 = v16;
  v33[1] = ObjectType;
  v34 = v4;
  v18 = *(void **)&v1[OBJC_IVAR____TtC8StocksUI24StockChartViewController_activityIndicator];
  objc_msgSend(v16, sel_addSubview_, v18);

  v19 = *(void **)&v1[OBJC_IVAR____TtC8StocksUI24StockChartViewController_lineChartViewController];
  objc_msgSend(v1, sel_addChildViewController_, v19);
  v20 = objc_msgSend(v1, sel_view);
  if (!v20)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v21 = v20;
  v33[0] = v3;
  v22 = objc_msgSend(v19, sel_view);
  if (!v22)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v23 = v22;
  objc_msgSend(v21, sel_addSubview_, v22);

  objc_msgSend(v19, sel_didMoveToParentViewController_, v1);
  v24 = *(void **)&v1[OBJC_IVAR____TtC8StocksUI24StockChartViewController_columnChartViewController];
  objc_msgSend(v1, sel_addChildViewController_, v24);
  v25 = objc_msgSend(v1, sel_view);
  if (!v25)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v26 = v25;
  v27 = objc_msgSend(v24, sel_view);
  if (!v27)
  {
LABEL_17:
    __break(1u);
    return;
  }
  v28 = v27;
  objc_msgSend(v26, sel_addSubview_, v27);

  objc_msgSend(v24, sel_didMoveToParentViewController_, v1);
  if (qword_1EDB28E90 != -1)
    swift_once();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1DC080808(&qword_1EDB27F20, type metadata accessor for StockChartViewController, (uint64_t)&protocol conformance descriptor for StockChartViewController);
  sub_1DC4012DC();
  swift_release();
  sub_1DC384578((uint64_t)v7);
  sub_1DC40874C();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1DC40274C();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
  objc_msgSend(v18, sel_setIsAccessibilityElement_, 1);
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v30 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1DC3FFC80();

  v31 = (void *)sub_1DC408A1C();
  swift_bridgeObjectRelease();
  objc_msgSend(v18, sel_setAccessibilityLabel_, v31);

  v32 = objc_msgSend(v1, sel_traitCollection);
  sub_1DC384BB0((uint64_t)v32);

  (*(void (**)(char *, _QWORD))(v34 + 8))(v7, v33[0]);
}

void sub_1DC384068(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void *v6;
  id v7;
  void *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  double v15;
  double v16;
  void *v17;
  id v18;

  v3 = a2 + 16;
  swift_beginAccess();
  v4 = MEMORY[0x1DF0CAD78](v3);
  if (v4)
  {
    v5 = (char *)v4;
    v6 = *(void **)(v4 + OBJC_IVAR____TtC8StocksUI24StockChartViewController_stateMachine);
    if (v6)
    {
      v7 = v6;
      v8 = (void *)sub_1DC408A1C();

      v9 = *(_QWORD *)&v5[OBJC_IVAR____TtC8StocksUI24StockChartViewController_eventHandler];
      swift_unknownObjectRetain();
      v10 = objc_msgSend(v5, sel_traitCollection);
      v11 = *(_QWORD *)(v9 + 32);
      v12 = (void *)objc_opt_self();
      v13 = v10;
      v14 = objc_msgSend(v12, sel_mainScreen);
      objc_msgSend(v14, sel_scale);
      v16 = v15;

      v17 = *(void **)(v11 + 192);
      *(_QWORD *)(v11 + 192) = v13;
      *(double *)(v11 + 200) = v16;
      v18 = v13;

      sub_1DC14A57C(a1, v18, 0, v16);
      if (qword_1EDB28E90 != -1)
        swift_once();
      type metadata accessor for StockChartInteractor();
      sub_1DC080808(&qword_1EDB31D48, (uint64_t (*)(uint64_t))type metadata accessor for StockChartInteractor, (uint64_t)&unk_1DC40E930);
      sub_1DC4013B4();

      swift_unknownObjectRelease();
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_1DC384258(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v4 = sub_1DC4002BC();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = MEMORY[0x1E0C80A78](v4);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v5 + 16))((char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4, v7);
  v8 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v9 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v9 + v8, (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  *(_QWORD *)(v9 + ((v6 + v8 + 7) & 0xFFFFFFFFFFFFFFF8)) = a2;
  swift_retain();
  sub_1DC402E3C();
  return swift_release();
}

void sub_1DC384348(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint8_t *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23[3];

  v4 = sub_1DC4002BC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a2 + 16;
  if (qword_1F034B060 != -1)
    swift_once();
  v9 = sub_1DC403F64();
  __swift_project_value_buffer(v9, (uint64_t)qword_1F0368A90);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  v10 = sub_1DC403F4C();
  v11 = sub_1DC408FE0();
  if (os_log_type_enabled(v10, v11))
  {
    v21 = a1;
    v12 = swift_slowAlloc();
    v20 = a2 + 16;
    v13 = (uint8_t *)v12;
    v14 = swift_slowAlloc();
    v23[0] = v14;
    *(_DWORD *)v13 = 136446210;
    v15 = sub_1DC4002B0();
    v22 = sub_1DC2A9C74(v15, v16, v23);
    a1 = v21;
    sub_1DC4095B0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    _os_log_impl(&dword_1DC07D000, v10, v11, "Chart range was updated, newDateRange=%{public}s", v13, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1DF0CAC88](v14, -1, -1);
    v17 = v13;
    v8 = v20;
    MEMORY[0x1DF0CAC88](v17, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }

  swift_beginAccess();
  v18 = MEMORY[0x1DF0CAD78](v8);
  if (v18)
  {
    v19 = (void *)v18;
    sub_1DC384578(a1);

  }
}

void sub_1DC384578(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  void (*v21)(char *, uint64_t);
  id v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, unint64_t, uint64_t);
  uint64_t v39;

  sub_1DC092F50(0, (unint64_t *)&qword_1EDB28B80, (void (*)(uint64_t))MEMORY[0x1E0DAE0F8]);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v32 - v4;
  v6 = sub_1DC4002BC();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v32 - v11;
  v13 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8StocksUI24StockChartViewController_dateRangePicker);
  v14 = OBJC_IVAR____TtC8StocksUI19DateRangePickerView_segmentedControl;
  v15 = *(id *)(v13 + OBJC_IVAR____TtC8StocksUI19DateRangePickerView_segmentedControl);
  v16 = sub_1DC404948();

  v17 = v16;
  v18 = *(_QWORD *)(v16 + 16);
  if (!v18)
  {
    swift_bridgeObjectRelease();
LABEL_11:
    v28 = *(id *)(v13 + v14);
    v29 = sub_1DC404948();

    if (*(_QWORD *)(v29 + 16))
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v7 + 16))(v5, v29 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80)), v6);
      v30 = 0;
    }
    else
    {
      v30 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, v30, 1, v6);
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
    {
      sub_1DC092F14((uint64_t)v5, (unint64_t *)&qword_1EDB28B80, (void (*)(uint64_t))MEMORY[0x1E0DAE0F8]);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v5, v6);
      v31 = *(id *)(v13 + v14);
      sub_1DC404924();

      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    }
    return;
  }
  v35 = v14;
  v36 = v13;
  v32 = v9;
  v33 = v5;
  v19 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v38 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
  v38(v12, v17 + v19, v6);
  sub_1DC080808(&qword_1EDB28B70, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAE0F8], MEMORY[0x1E0DAE108]);
  v37 = v17;
  swift_bridgeObjectRetain();
  v39 = a1;
  v20 = sub_1DC4089F8();
  v34 = v7;
  v21 = *(void (**)(char *, uint64_t))(v7 + 8);
  v21(v12, v6);
  if ((v20 & 1) != 0)
  {
LABEL_3:
    swift_bridgeObjectRelease_n();
    v22 = *(id *)(v36 + v35);
    sub_1DC404924();

    return;
  }
  if (v18 == 1)
  {
LABEL_10:
    swift_bridgeObjectRelease_n();
    v5 = v33;
    v7 = v34;
    v9 = v32;
    v14 = v35;
    v13 = v36;
    goto LABEL_11;
  }
  v23 = *(_QWORD *)(v34 + 72);
  v24 = v37 + v23 + v19;
  v25 = 1;
  while (1)
  {
    v38(v12, v24, v6);
    v26 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    v27 = sub_1DC4089F8();
    v21(v12, v6);
    if ((v27 & 1) != 0)
      goto LABEL_3;
    ++v25;
    v24 += v23;
    if (v26 == v18)
      goto LABEL_10;
  }
  __break(1u);
}

char *sub_1DC3848C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *result;
  char *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  double v16;
  CGFloat v17;
  double v18;
  CGFloat v19;
  double v20;
  CGFloat v21;
  double v22;
  CGFloat v23;
  double MinX;
  double v25;
  char *v26;
  double v27;
  CGFloat v28;
  double v29;
  CGFloat v30;
  double v31;
  CGFloat v32;
  double v33;
  CGFloat v34;
  double MinY;
  double Width;
  char *v37;
  double v38;
  double v39;
  CGFloat v40;
  double v41;
  CGFloat v42;
  double v43;
  CGFloat v44;
  double v45;
  CGFloat v46;
  uint64_t v47;
  CGRect v48;
  CGRect v49;
  CGRect v50;
  CGRect v51;
  CGRect v52;

  sub_1DC092F50(0, &qword_1EDB284A8, (void (*)(uint64_t))MEMORY[0x1E0DB26D0]);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v47 - v5;
  v7 = sub_1DC4087C4();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = (char *)MEMORY[0x1DF0CAD78](a2 + 16);
  if (result)
  {
    v12 = result;
    sub_1DC386800(a1, (uint64_t)v6);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
    {

      return (char *)sub_1DC092F14((uint64_t)v6, &qword_1EDB284A8, (void (*)(uint64_t))MEMORY[0x1E0DB26D0]);
    }
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
    v13 = OBJC_IVAR____TtC8StocksUI24StockChartViewController_columnChartViewController;
    result = (char *)objc_msgSend(*(id *)&v12[OBJC_IVAR____TtC8StocksUI24StockChartViewController_columnChartViewController], sel_view);
    if (result)
    {
      v14 = result;
      result = (char *)objc_msgSend(*(id *)&v12[OBJC_IVAR____TtC8StocksUI24StockChartViewController_lineChartViewController], sel_view);
      if (result)
      {
        v15 = result;
        objc_msgSend(result, sel_frame);
        v17 = v16;
        v19 = v18;
        v21 = v20;
        v23 = v22;

        v48.origin.x = v17;
        v48.origin.y = v19;
        v48.size.width = v21;
        v48.size.height = v23;
        MinX = CGRectGetMinX(v48);
        sub_1DC4087B8();
        v25 = CGRectGetMinX(v49);
        result = (char *)objc_msgSend(*(id *)&v12[v13], sel_view);
        if (result)
        {
          v26 = result;
          objc_msgSend(result, sel_frame);
          v28 = v27;
          v30 = v29;
          v32 = v31;
          v34 = v33;

          v50.origin.x = v28;
          v50.origin.y = v30;
          v50.size.width = v32;
          v50.size.height = v34;
          MinY = CGRectGetMinY(v50);
          sub_1DC4087B8();
          Width = CGRectGetWidth(v51);
          result = (char *)objc_msgSend(*(id *)&v12[v13], sel_view);
          if (result)
          {
            v37 = result;
            v38 = MinX + v25;
            objc_msgSend(result, sel_frame);
            v40 = v39;
            v42 = v41;
            v44 = v43;
            v46 = v45;

            v52.origin.x = v40;
            v52.origin.y = v42;
            v52.size.width = v44;
            v52.size.height = v46;
            objc_msgSend(v14, sel_setFrame_, v38, MinY, Width, CGRectGetHeight(v52));

            return (char *)(*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
          }
LABEL_13:
          __break(1u);
          return result;
        }
LABEL_12:
        __break(1u);
        goto LABEL_13;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_12;
  }
  return result;
}

void sub_1DC384BB0(uint64_t a1)
{
  char *v1;
  char *v2;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  _QWORD *v9;
  id v10;
  void *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  _QWORD *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[3];
  uint64_t v25;
  uint64_t v26;

  v2 = v1;
  v4 = &v2[OBJC_IVAR____TtC8StocksUI24StockChartViewController_styler];
  swift_beginAccess();
  sub_1DC0824D4((uint64_t)v4, (uint64_t)v24);
  v5 = v25;
  v6 = v26;
  __swift_project_boxed_opaque_existential_1(v24, v25);
  v7 = *(_QWORD *)(v6 + 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 8);
  v22 = v5;
  v23 = v6;
  __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v21);
  v8(a1, v5, v7);
  swift_beginAccess();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
  sub_1DC097DD0(&v21, (uint64_t)v4);
  swift_endAccess();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
  sub_1DC0824D4((uint64_t)v4, (uint64_t)v24);
  v9 = __swift_project_boxed_opaque_existential_1(v24, v25);
  v10 = objc_msgSend(v2, sel_view);
  if (v10)
  {
    v11 = v10;
    v12 = (_QWORD *)(*v9 + 56);
    v14 = *(_QWORD *)(*v9 + 80);
    v13 = *(_QWORD *)(*v9 + 88);
    __swift_project_boxed_opaque_existential_1(v12, v14);
    v15 = (void *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)(v13 + 16) + 72))(v14);
    objc_msgSend(v11, sel_setBackgroundColor_, v15);

    __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
    __swift_project_boxed_opaque_existential_1(v4, *((_QWORD *)v4 + 3));
    sub_1DC160DEC();
    v16 = __swift_project_boxed_opaque_existential_1(v4, *((_QWORD *)v4 + 3));
    v17 = *(void **)&v2[OBJC_IVAR____TtC8StocksUI24StockChartViewController_topDateRangePickerSeparator];
    v19 = *(_QWORD *)(*v16 + 80);
    v18 = *(_QWORD *)(*v16 + 88);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(*v16 + 56), v19);
    v20 = (void *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)(v18 + 16) + 152))(v19);
    objc_msgSend(v17, sel_setBackgroundColor_, v20);

  }
  else
  {
    __break(1u);
  }
}

Swift::Void __swiftcall StockChartViewController.traitCollectionDidChange(_:)(UITraitCollection_optional a1)
{
  char *v1;
  char *v2;
  Class isa;
  objc_class *ObjectType;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  char *v12;
  id v13;
  objc_class *v14;
  id v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  void *v22;
  id v23;
  id v24;
  double v25;
  double v26;
  void *v27;
  id v28;
  objc_super v29;

  v2 = v1;
  isa = a1.value.super.isa;
  ObjectType = (objc_class *)swift_getObjectType();
  sub_1DC092F50(0, (unint64_t *)&qword_1EDB28B80, (void (*)(uint64_t))MEMORY[0x1E0DAE0F8]);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v29 - v6;
  v8 = sub_1DC4002BC();
  v9 = *(_QWORD *)(v8 - 8);
  *(_QWORD *)&v10 = MEMORY[0x1E0C80A78](v8).n128_u64[0];
  v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29.receiver = v2;
  v29.super_class = ObjectType;
  objc_msgSendSuper2(&v29, sel_traitCollectionDidChange_, isa, v10);
  v13 = objc_msgSend(v2, sel_traitCollection);
  sub_1DC384BB0((uint64_t)v13);

  if (isa)
  {
    v14 = isa;
    v15 = -[objc_class userInterfaceStyle](v14, sel_userInterfaceStyle);
    v16 = objc_msgSend(v2, sel_traitCollection);
    v17 = objc_msgSend(v16, sel_userInterfaceStyle);

    if (v15 == v17)
    {

    }
    else
    {
      v18 = objc_retain(*(id *)(*(_QWORD *)&v2[OBJC_IVAR____TtC8StocksUI24StockChartViewController_dateRangePicker]
                              + OBJC_IVAR____TtC8StocksUI19DateRangePickerView_segmentedControl));
      sub_1DC40490C();

      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
      {

        sub_1DC092F14((uint64_t)v7, (unint64_t *)&qword_1EDB28B80, (void (*)(uint64_t))MEMORY[0x1E0DAE0F8]);
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v12, v7, v8);
        v19 = *(_QWORD *)&v2[OBJC_IVAR____TtC8StocksUI24StockChartViewController_eventHandler];
        v20 = objc_msgSend(v2, sel_traitCollection);
        v21 = *(_QWORD *)(v19 + 32);
        v22 = (void *)objc_opt_self();
        v23 = v20;
        v24 = objc_msgSend(v22, sel_mainScreen);
        objc_msgSend(v24, sel_scale);
        v26 = v25;

        v27 = *(void **)(v21 + 192);
        *(_QWORD *)(v21 + 192) = v23;
        *(double *)(v21 + 200) = v26;
        v28 = v23;

        sub_1DC14A57C((uint64_t)v12, v28, 1, v26);
        if (qword_1EDB28E90 != -1)
          swift_once();
        type metadata accessor for StockChartInteractor();
        sub_1DC080808(&qword_1EDB31D48, (uint64_t (*)(uint64_t))type metadata accessor for StockChartInteractor, (uint64_t)&unk_1DC40E930);
        sub_1DC4013B4();

        (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
      }
    }
  }
}

Swift::Void __swiftcall StockChartViewController.viewDidLayoutSubviews()()
{
  char *v0;
  void *v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  void *v14;
  void *v15;
  id v16;
  void *v17;
  double v18;
  CGFloat v19;
  double v20;
  CGFloat v21;
  double v22;
  CGFloat v23;
  double v24;
  CGFloat v25;
  double MidX;
  id v27;
  void *v28;
  double v29;
  CGFloat v30;
  double v31;
  CGFloat v32;
  double v33;
  CGFloat v34;
  double v35;
  CGFloat v36;
  objc_super v37;
  CGRect v38;
  CGRect v39;

  v37.receiver = v0;
  v37.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v37, sel_viewDidLayoutSubviews);
  v1 = *(void **)&v0[OBJC_IVAR____TtC8StocksUI24StockChartViewController_errorView];
  if (v1)
  {
    v2 = *(void **)&v0[OBJC_IVAR____TtC8StocksUI24StockChartViewController_lineChartViewController];
    v3 = v1;
    v4 = objc_msgSend(v2, sel_view);
    if (!v4)
      goto LABEL_9;
    v5 = v4;
    objc_msgSend(v4, sel_frame);
    v7 = v6;
    v9 = v8;
    v11 = v10;
    v13 = v12;

    objc_msgSend(v3, sel_setFrame_, v7, v9, v11, v13);
  }
  v14 = *(void **)&v0[OBJC_IVAR____TtC8StocksUI24StockChartViewController_activityIndicator];
  v15 = *(void **)&v0[OBJC_IVAR____TtC8StocksUI24StockChartViewController_lineChartViewController];
  v16 = objc_msgSend(v15, sel_view);
  if (v16)
  {
    v17 = v16;
    objc_msgSend(v16, sel_frame);
    v19 = v18;
    v21 = v20;
    v23 = v22;
    v25 = v24;

    v38.origin.x = v19;
    v38.origin.y = v21;
    v38.size.width = v23;
    v38.size.height = v25;
    MidX = CGRectGetMidX(v38);
    v27 = objc_msgSend(v15, sel_view);
    if (v27)
    {
      v28 = v27;
      objc_msgSend(v27, sel_frame);
      v30 = v29;
      v32 = v31;
      v34 = v33;
      v36 = v35;

      v39.origin.x = v30;
      v39.origin.y = v32;
      v39.size.width = v34;
      v39.size.height = v36;
      objc_msgSend(v14, sel_setCenter_, MidX, CGRectGetMidY(v39));
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
LABEL_9:
  __break(1u);
}

id sub_1DC38532C()
{
  id v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  uint64_t v7;
  void *v8;
  id v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, void *, uint64_t);
  void *v14;
  void (*v15)(uint64_t, uint64_t);
  uint64_t v16;

  v0 = objc_allocWithZone(MEMORY[0x1E0D60B10]);
  v1 = (void *)sub_1DC408A1C();
  v2 = objc_msgSend(v0, sel_initWithName_, v1);

  v3 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v15 = sub_1DC3867F0;
  v16 = v3;
  v4 = MEMORY[0x1E0C809B0];
  v11 = MEMORY[0x1E0C809B0];
  v12 = 1107296256;
  v13 = sub_1DC3859FC;
  v14 = &block_descriptor_21_1;
  v5 = _Block_copy(&v11);
  swift_release();
  v6 = objc_msgSend(v2, sel_onWillEnter_, v5);
  _Block_release(v5);

  v7 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v15 = sub_1DC3867F8;
  v16 = v7;
  v11 = v4;
  v12 = 1107296256;
  v13 = sub_1DC3859FC;
  v14 = &block_descriptor_25;
  v8 = _Block_copy(&v11);
  swift_release();
  v9 = objc_msgSend(v2, sel_onWillExit_, v8);
  _Block_release(v8);

  return v2;
}

id sub_1DC3854D8()
{
  id v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  uint64_t v7;
  void *v8;
  id v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, void *, uint64_t);
  void *v14;
  void *v15;
  uint64_t v16;

  v0 = objc_allocWithZone(MEMORY[0x1E0D60B10]);
  v1 = (void *)sub_1DC408A1C();
  v2 = objc_msgSend(v0, sel_initWithName_, v1);

  v3 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v15 = sub_1DC3867CC;
  v16 = v3;
  v4 = MEMORY[0x1E0C809B0];
  v11 = MEMORY[0x1E0C809B0];
  v12 = 1107296256;
  v13 = sub_1DC3859FC;
  v14 = &block_descriptor_13;
  v5 = _Block_copy(&v11);
  swift_release();
  v6 = objc_msgSend(v2, sel_onWillEnter_, v5);
  _Block_release(v5);

  v7 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v15 = sub_1DC3867D4;
  v16 = v7;
  v11 = v4;
  v12 = 1107296256;
  v13 = sub_1DC3859FC;
  v14 = &block_descriptor_17;
  v8 = _Block_copy(&v11);
  swift_release();
  v9 = objc_msgSend(v2, sel_onWillExit_, v8);
  _Block_release(v8);

  return v2;
}

id sub_1DC385680()
{
  id v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  uint64_t v7;
  void *v8;
  id v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, void *, uint64_t);
  void *v14;
  void (*v15)(uint64_t, uint64_t);
  uint64_t v16;

  v0 = objc_allocWithZone(MEMORY[0x1E0D60B10]);
  v1 = (void *)sub_1DC408A1C();
  v2 = objc_msgSend(v0, sel_initWithName_, v1);

  v3 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v15 = sub_1DC3867BC;
  v16 = v3;
  v4 = MEMORY[0x1E0C809B0];
  v11 = MEMORY[0x1E0C809B0];
  v12 = 1107296256;
  v13 = sub_1DC3859FC;
  v14 = &block_descriptor_42;
  v5 = _Block_copy(&v11);
  swift_release();
  v6 = objc_msgSend(v2, sel_onWillEnter_, v5);
  _Block_release(v5);

  v7 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v15 = sub_1DC3867C4;
  v16 = v7;
  v11 = v4;
  v12 = 1107296256;
  v13 = sub_1DC3859FC;
  v14 = &block_descriptor_9_1;
  v8 = _Block_copy(&v11);
  swift_release();
  v9 = objc_msgSend(v2, sel_onWillExit_, v8);
  _Block_release(v8);

  return v2;
}

void sub_1DC385834(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  void *v7;
  id v8;
  id v9;
  void *v10;
  double v11;
  CGFloat v12;
  double v13;
  CGFloat v14;
  double v15;
  CGFloat v16;
  double v17;
  CGFloat v18;
  double MidX;
  id v20;
  void *v21;
  double v22;
  CGFloat v23;
  double v24;
  CGFloat v25;
  double v26;
  CGFloat v27;
  double v28;
  CGFloat v29;
  CGRect v30;
  CGRect v31;

  v3 = a3 + 16;
  swift_beginAccess();
  v4 = MEMORY[0x1DF0CAD78](v3);
  if (v4)
  {
    v5 = (char *)v4;
    swift_retain();
    swift_retain();
    sub_1DC402A70();
    swift_release();
    swift_release();
    v6 = OBJC_IVAR____TtC8StocksUI24StockChartViewController_activityIndicator;
    v7 = *(void **)&v5[OBJC_IVAR____TtC8StocksUI24StockChartViewController_lineChartViewController];
    v8 = *(id *)&v5[OBJC_IVAR____TtC8StocksUI24StockChartViewController_activityIndicator];
    v9 = objc_msgSend(v7, sel_view, 1);
    if (v9)
    {
      v10 = v9;
      objc_msgSend(v9, sel_frame);
      v12 = v11;
      v14 = v13;
      v16 = v15;
      v18 = v17;

      v30.origin.x = v12;
      v30.origin.y = v14;
      v30.size.width = v16;
      v30.size.height = v18;
      MidX = CGRectGetMidX(v30);
      v20 = objc_msgSend(v7, sel_view);
      if (v20)
      {
        v21 = v20;
        objc_msgSend(v20, sel_frame);
        v23 = v22;
        v25 = v24;
        v27 = v26;
        v29 = v28;

        v31.origin.x = v23;
        v31.origin.y = v25;
        v31.size.width = v27;
        v31.size.height = v29;
        objc_msgSend(v8, sel_setCenter_, MidX, CGRectGetMidY(v31));

        objc_msgSend(*(id *)&v5[v6], sel_startAnimating);
        UIAccessibilityPostNotification(*MEMORY[0x1E0DC4578], 0);

        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
}

uint64_t sub_1DC3859FC(uint64_t a1, void *a2, uint64_t a3)
{
  void (*v5)(id, _QWORD *);
  id v6;
  _QWORD v8[4];

  v5 = *(void (**)(id, _QWORD *))(a1 + 32);
  v8[3] = swift_getObjectType();
  v8[0] = a3;
  swift_retain();
  v6 = a2;
  swift_unknownObjectRetain();
  v5(v6, v8);
  swift_release();

  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
}

void sub_1DC385A84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v3 = a3 + 16;
  swift_beginAccess();
  v4 = MEMORY[0x1DF0CAD78](v3);
  if (v4)
  {
    v5 = (void *)v4;
    objc_msgSend(*(id *)(v4 + OBJC_IVAR____TtC8StocksUI24StockChartViewController_activityIndicator), sel_stopAnimating);
    UIAccessibilityPostNotification(*MEMORY[0x1E0DC4578], 0);

  }
}

void sub_1DC385AFC(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  char *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  id v23;
  id v24;
  void *v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  id v34;
  void *v35;
  void *v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  uint64_t v42[4];

  v4 = a3 + 16;
  swift_beginAccess();
  v5 = MEMORY[0x1DF0CAD78](v4);
  if (v5)
  {
    v6 = (char *)v5;
    if (objc_msgSend(a1, sel_context))
    {
      type metadata accessor for StockChartViewController.ErrorContext(0);
      v7 = swift_dynamicCastClass();
      if (v7)
      {
        v8 = v7;
        type metadata accessor for StockChartViewController.Errors(0);
        sub_1DC080808((unint64_t *)&unk_1EDB413D8, type metadata accessor for StockChartViewController.Errors, (uint64_t)&unk_1DC42CBDC);
        v9 = (void *)swift_allocError();
        v11 = v10;
        v12 = v8
            + OBJC_IVAR____TtCC8StocksUI24StockChartViewControllerP33_E483C2B618A7CE6B48867B145DEE9A5212ErrorContext_model;
        v13 = sub_1DC407EAC();
        v14 = *(_QWORD *)(v13 - 8);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v11, v12, v13);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
        v42[0] = (uint64_t)v9;
        swift_retain();
        swift_retain();
        v15 = v9;
        sub_1DC402A70();

        swift_release();
        swift_release();
        v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
        v17 = &v6[OBJC_IVAR____TtC8StocksUI24StockChartViewController_styler];
        swift_beginAccess();
        v18 = __swift_project_boxed_opaque_existential_1(v17, *((_QWORD *)v17 + 3));
        v19 = *(_QWORD *)(*v18 + 80);
        v20 = *(_QWORD *)(*v18 + 88);
        __swift_project_boxed_opaque_existential_1((_QWORD *)(*v18 + 56), v19);
        sub_1DC3A54D0(v19, v20, v42);
        __swift_project_boxed_opaque_existential_1(v42, v42[3]);
        _s8StocksUI16OfflineAlertableV5titleSSSgvg_0();
        _s8StocksUI16OfflineAlertableV7messageSSSgvg_0();
        v21 = (void *)sub_1DC40466C();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        objc_msgSend(v16, sel_setAttributedText_, v21);

        __swift_destroy_boxed_opaque_existential_1((uint64_t)v42);
        objc_msgSend(v16, sel_setNumberOfLines_, 0);
        v22 = *(void **)&v6[OBJC_IVAR____TtC8StocksUI24StockChartViewController_lineChartViewController];
        v23 = v16;
        v24 = objc_msgSend(v22, sel_view);
        if (v24)
        {
          v25 = v24;
          objc_msgSend(v24, sel_frame);
          v27 = v26;
          v29 = v28;
          v31 = v30;
          v33 = v32;

          objc_msgSend(v23, sel_setFrame_, v27, v29, v31, v33);
          v34 = objc_msgSend(v6, sel_view);
          if (v34)
          {
            v35 = v34;
            objc_msgSend(v34, sel_addSubview_, v23);

            swift_unknownObjectRelease();
            v36 = *(void **)&v6[OBJC_IVAR____TtC8StocksUI24StockChartViewController_errorView];
            *(_QWORD *)&v6[OBJC_IVAR____TtC8StocksUI24StockChartViewController_errorView] = v23;

LABEL_9:
            UIAccessibilityPostNotification(*MEMORY[0x1E0DC4578], 0);

            return;
          }
        }
        else
        {
          __break(1u);
        }
        __break(1u);
        return;
      }
      swift_unknownObjectRelease();
    }
    type metadata accessor for StockChartViewController.Errors(0);
    sub_1DC080808((unint64_t *)&unk_1EDB413D8, type metadata accessor for StockChartViewController.Errors, (uint64_t)&unk_1DC42CBDC);
    v37 = (void *)swift_allocError();
    v39 = v38;
    v40 = sub_1DC407EAC();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v39, 1, 1, v40);
    v42[0] = (uint64_t)v37;
    swift_retain();
    swift_retain();
    v41 = v37;
    sub_1DC402A70();

    swift_release();
    swift_release();
    goto LABEL_9;
  }
}

void sub_1DC385F38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  void *v7;
  void *v8;

  v3 = a3 + 16;
  swift_beginAccess();
  v4 = MEMORY[0x1DF0CAD78](v3);
  if (v4)
  {
    v5 = (char *)v4;
    v6 = OBJC_IVAR____TtC8StocksUI24StockChartViewController_errorView;
    v7 = *(void **)(v4 + OBJC_IVAR____TtC8StocksUI24StockChartViewController_errorView);
    if (v7)
    {
      objc_msgSend(v7, sel_removeFromSuperview);
      v8 = *(void **)&v5[v6];
    }
    else
    {
      v8 = 0;
    }
    *(_QWORD *)&v5[v6] = 0;

    UIAccessibilityPostNotification(*MEMORY[0x1E0DC4578], 0);
  }
}

void sub_1DC385FC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  void *v7;
  id v8;
  void *v9;

  v3 = a3 + 16;
  swift_beginAccess();
  v4 = MEMORY[0x1DF0CAD78](v3);
  if (v4)
  {
    v5 = (char *)v4;
    swift_retain();
    swift_retain();
    sub_1DC402A70();
    swift_release();
    swift_release();
    v6 = objc_msgSend(*(id *)&v5[OBJC_IVAR____TtC8StocksUI24StockChartViewController_lineChartViewController], sel_view, 2);
    if (v6)
    {
      v7 = v6;
      objc_msgSend(v6, sel_setAlpha_, 1.0);

      v8 = objc_msgSend(*(id *)&v5[OBJC_IVAR____TtC8StocksUI24StockChartViewController_columnChartViewController], sel_view);
      if (v8)
      {
        v9 = v8;
        objc_msgSend(v8, sel_setAlpha_, 1.0);

        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
}

void sub_1DC3860D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  void *v7;
  id v8;
  void *v9;

  v3 = a3 + 16;
  swift_beginAccess();
  v4 = MEMORY[0x1DF0CAD78](v3);
  if (v4)
  {
    v5 = (char *)v4;
    v6 = objc_msgSend(*(id *)(v4 + OBJC_IVAR____TtC8StocksUI24StockChartViewController_lineChartViewController), sel_view);
    if (v6)
    {
      v7 = v6;
      objc_msgSend(v6, sel_setAlpha_, 0.0);

      v8 = objc_msgSend(*(id *)&v5[OBJC_IVAR____TtC8StocksUI24StockChartViewController_columnChartViewController], sel_view);
      if (v8)
      {
        v9 = v8;
        objc_msgSend(v8, sel_setAlpha_, 0.0);

        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
}

id sub_1DC3861A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  id v13;
  uint64_t v14;

  v4 = OBJC_IVAR____TtC8StocksUI24StockChartViewController_activeCallout;
  v5 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8StocksUI24StockChartViewController_activeCallout);
  if ((~v5 & 0xF000000000000007) != 0)
  {
    if ((v5 & 0x8000000000000000) == 0)
      return (id)v5;
    v14 = v5;
    v7 = (id)(v5 & 0x7FFFFFFFFFFFFFFFLL);
    sub_1DC40445C();
    v8 = *(_QWORD *)(a1 + v4);
    *(_QWORD *)(a1 + v4) = 0xF000000000000007;
    sub_1DC14DB5C(v8);
    sub_1DC14DB5C(v14);
  }
  v9 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8StocksUI24StockChartViewController_calloutViewProvider + 24);
  v10 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8StocksUI24StockChartViewController_calloutViewProvider + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(a1 + OBJC_IVAR____TtC8StocksUI24StockChartViewController_calloutViewProvider), v9);
  v11 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 8))(a2, v9, v10);
  v12 = *(_QWORD *)(a1 + v4);
  *(_QWORD *)(a1 + v4) = v11;
  v13 = v11;
  sub_1DC14DB5C(v12);
  sub_1DC404468();
  return v13;
}

id sub_1DC3862A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;

  v4 = OBJC_IVAR____TtC8StocksUI24StockChartViewController_activeCallout;
  v5 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8StocksUI24StockChartViewController_activeCallout);
  if ((~v5 & 0xF000000000000007) == 0)
    goto LABEL_4;
  if ((v5 & 0x8000000000000000) == 0)
  {
    v6 = (id)v5;
    sub_1DC40445C();
    v7 = *(_QWORD *)(a1 + v4);
    *(_QWORD *)(a1 + v4) = 0xF000000000000007;
    sub_1DC14DB5C(v7);
    sub_1DC14DB5C(v5);
LABEL_4:
    v8 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8StocksUI24StockChartViewController_rangeCalloutViewProvider + 24);
    v9 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8StocksUI24StockChartViewController_rangeCalloutViewProvider + 32);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(a1 + OBJC_IVAR____TtC8StocksUI24StockChartViewController_rangeCalloutViewProvider), v8);
    v10 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 8))(a2, v8, v9);
    v11 = *(_QWORD *)(a1 + v4);
    *(_QWORD *)(a1 + v4) = v10 | 0x8000000000000000;
    v12 = (id)v10;
    sub_1DC14DB5C(v11);
    sub_1DC404468();
    return v12;
  }
  return (id)(v5 & 0x7FFFFFFFFFFFFFFFLL);
}

id sub_1DC3863A0(char a1, char a2)
{
  id *v2;

  return objc_msgSend(*v2, sel_setEditing_animated_, a1 & 1, a2 & 1);
}

void sub_1DC3863C0()
{
  sub_1DC080808(&qword_1EDB42D00, type metadata accessor for StockChartViewController, (uint64_t)&protocol conformance descriptor for StockChartViewController);
  JUMPOUT(0x1DF0C7418);
}

void _s8StocksUI24StockChartViewControllerC5coderACSgSo7NSCoderC_tcfc_0()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = OBJC_IVAR____TtC8StocksUI24StockChartViewController_topDateRangePickerSeparator;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v2 = OBJC_IVAR____TtC8StocksUI24StockChartViewController_activityIndicator;
  *(_QWORD *)&v0[v2] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3438]), sel_initWithActivityIndicatorStyle_, 100);
  *(_QWORD *)&v0[OBJC_IVAR____TtC8StocksUI24StockChartViewController_activeCallout] = 0xF000000000000007;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8StocksUI24StockChartViewController_stateMachine] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8StocksUI24StockChartViewController_errorView] = 0;

  sub_1DC409838();
  __break(1u);
}

uint64_t sub_1DC3864E4()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1DC386508(uint64_t a1)
{
  uint64_t v1;

  sub_1DC384068(a1, v1);
}

uint64_t sub_1DC386510(uint64_t a1)
{
  uint64_t v1;

  return sub_1DC384258(a1, v1);
}

char *sub_1DC386518(uint64_t a1)
{
  uint64_t v1;

  return sub_1DC3848C8(a1, v1);
}

uint64_t sub_1DC386520()
{
  return sub_1DC080808((unint64_t *)&unk_1EDB35C50, type metadata accessor for StockChartViewController, (uint64_t)&protocol conformance descriptor for StockChartViewController);
}

uint64_t sub_1DC38654C()
{
  return type metadata accessor for StockChartViewController(0);
}

uint64_t method lookup function for StockChartViewController()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1DC386560()
{
  return type metadata accessor for StockChartViewController.ErrorContext(0);
}

uint64_t type metadata accessor for StockChartViewController.ErrorContext(uint64_t a1)
{
  return sub_1DC08CD5C(a1, qword_1EDB413C0);
}

uint64_t sub_1DC38657C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1DC407EAC();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for StockChartViewController.Callout(_QWORD *a1, _QWORD *a2)
{
  void *v3;
  id v4;

  v3 = (void *)(*a2 & 0x7FFFFFFFFFFFFFFFLL);
  *a1 = *a2;
  v4 = v3;
  return a1;
}

void destroy for StockChartViewController.Callout(_QWORD *a1)
{

}

uint64_t *assignWithCopy for StockChartViewController.Callout(uint64_t *a1, uint64_t *a2)
{
  void *v3;
  uint64_t v4;
  void *v5;
  id v6;

  v3 = (void *)(*a2 & 0x7FFFFFFFFFFFFFFFLL);
  v4 = *a1;
  *a1 = *a2;
  v5 = (void *)(v4 & 0x7FFFFFFFFFFFFFFFLL);
  v6 = v3;

  return a1;
}

uint64_t *assignWithTake for StockChartViewController.Callout(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = *a1;
  *a1 = *a2;

  return a1;
}

uint64_t getEnumTagSinglePayload for StockChartViewController.Callout(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7F && *(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 127);
  v3 = (((*(_QWORD *)a1 >> 57) >> 6) | (2 * ((*(_QWORD *)a1 >> 57) & 0x38 | *(_QWORD *)a1 & 7))) ^ 0x7F;
  if (v3 >= 0x7E)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for StockChartViewController.Callout(uint64_t result, unsigned int a2, unsigned int a3)
{
  uint64_t v3;

  if (a2 > 0x7E)
  {
    *(_QWORD *)result = a2 - 127;
    if (a3 >= 0x7F)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7F)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
    {
      v3 = (-a2 >> 1) & 0x3F | ((-a2 & 0x7F) << 6);
      *(_QWORD *)result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_1DC386740(_QWORD *a1)
{
  return *a1 >> 63;
}

_QWORD *sub_1DC38674C(_QWORD *result)
{
  *result &= ~0x8000000000000000;
  return result;
}

uint64_t *sub_1DC38675C(uint64_t *result, uint64_t a2)
{
  *result = *result & 0xFFFFFFFFFFFFFF8 | (a2 << 63);
  return result;
}

ValueMetadata *type metadata accessor for StockChartViewController.Callout()
{
  return &type metadata for StockChartViewController.Callout;
}

unint64_t sub_1DC386780()
{
  unint64_t result;

  result = qword_1EDB3F940;
  if (!qword_1EDB3F940)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EDB3F940);
  }
  return result;
}

void sub_1DC3867BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1DC385FC8(a1, a2, v2);
}

void sub_1DC3867C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1DC3860D4(a1, a2, v2);
}

void sub_1DC3867CC(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_1DC385AFC(a1, a2, v2);
}

void sub_1DC3867D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1DC385F38(a1, a2, v2);
}

uint64_t type metadata accessor for StockChartViewController.Errors(uint64_t a1)
{
  return sub_1DC08CD5C(a1, qword_1EDB413E8);
}

void sub_1DC3867F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1DC385834(a1, a2, v2);
}

void sub_1DC3867F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1DC385A84(a1, a2, v2);
}

uint64_t sub_1DC386800(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1DC092F50(0, &qword_1EDB284A8, (void (*)(uint64_t))MEMORY[0x1E0DB26D0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC386854()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_1DC4002BC();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  swift_release();
  return swift_deallocObject();
}

void sub_1DC3868C8()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(sub_1DC4002BC() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  sub_1DC384348(v0 + v2, *(_QWORD *)(v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t *sub_1DC386908(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v7 = sub_1DC407EAC();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t sub_1DC3869D0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = sub_1DC407EAC();
  v3 = *(_QWORD *)(v2 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, 1, v2);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  return result;
}

void *sub_1DC386A38(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1DC407EAC();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

void *sub_1DC386ADC(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;

  v6 = sub_1DC407EAC();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 24))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

void *sub_1DC386BCC(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1DC407EAC();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

void *sub_1DC386C70(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;

  v6 = sub_1DC407EAC();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 40))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

uint64_t sub_1DC386D60()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC386D6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  v4 = sub_1DC407EAC();
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 2)
    return v5 - 1;
  else
    return 0;
}

uint64_t sub_1DC386DB8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC386DC4(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 1);
  else
    v5 = 0;
  v6 = sub_1DC407EAC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, v5, a3, v6);
}

uint64_t sub_1DC386E14(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1DC407EAC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 1, v2);
}

uint64_t sub_1DC386E4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1DC407EAC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, 1, v4);
}

uint64_t sub_1DC386E8C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1DC407EAC();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

void sub_1DC386F0C()
{
  uint64_t Strong;
  void *v1;
  void *v2;

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    MEMORY[0x1E0C80A78](Strong);
    sub_1DC400F7C();
    sub_1DC402E0C();
    v1 = (void *)sub_1DC402554();
    sub_1DC08CBF0(0, &qword_1EDB31228, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedBlueprintModifierFactory, sub_1DC38FB30, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for StockFeedInteractor);
    sub_1DC402D1C();
    swift_release();

    v2 = (void *)sub_1DC402554();
    sub_1DC402D40();
    swift_release();
    swift_release();
    swift_release();

  }
}

uint64_t sub_1DC387060(uint64_t a1, uint64_t a2)
{
  int *updated;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v24[2];
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  updated = (int *)type metadata accessor for StockFeedChartUpdateBlueprintModifier();
  v5 = MEMORY[0x1E0C80A78](updated);
  v29 = (uint64_t)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v24 - v7;
  v27 = sub_1DC40124C();
  v25 = *(_QWORD *)(v27 - 8);
  MEMORY[0x1E0C80A78](v27);
  v10 = (char *)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = sub_1DC4008EC();
  v26 = *(_QWORD *)(v28 - 8);
  MEMORY[0x1E0C80A78](v28);
  v12 = (char *)v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC19DD20(0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1DC400F7C();
  v17 = *(_QWORD *)(v16 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v15, a1, v16);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v15, 0, 1, v16);
  v24[1] = a2;
  __swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)(a2 + 48) + OBJC_IVAR____TtC8StocksUI20StockFeedDataManager_watchlistManager), *(_QWORD *)(*(_QWORD *)(a2 + 48) + OBJC_IVAR____TtC8StocksUI20StockFeedDataManager_watchlistManager + 24));
  sub_1DC400A60();
  v18 = v12;
  v24[0] = v12;
  sub_1DC4011EC();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v10, v27);
  v19 = *(_QWORD *)(a2 + 40);
  sub_1DC0990BC((uint64_t)v15, (uint64_t)&v8[updated[5]], (uint64_t (*)(_QWORD))sub_1DC19DD20);
  v20 = v26;
  v21 = v28;
  (*(void (**)(char *, char *, uint64_t))(v26 + 16))(&v8[updated[6]], v18, v28);
  sub_1DC0824D4(v19 + OBJC_IVAR____TtC8StocksUI33StockFeedBlueprintModifierFactory_featureAvailability, (uint64_t)&v8[updated[7]]);
  *(_QWORD *)v8 = 0x6470557472616843;
  *((_QWORD *)v8 + 1) = 0xEB00000000657461;
  sub_1DC0990BC((uint64_t)v8, v29, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedChartUpdateBlueprintModifier);
  sub_1DC239CF0();
  swift_allocObject();
  sub_1DC080808(&qword_1EDB3D6F0, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedChartUpdateBlueprintModifier, (uint64_t)&unk_1DC4219F0);
  v22 = sub_1DC40499C();
  sub_1DC0926D8((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedChartUpdateBlueprintModifier);
  (*(void (**)(_QWORD, uint64_t))(v20 + 8))(v24[0], v21);
  sub_1DC0926D8((uint64_t)v15, (uint64_t (*)(_QWORD))sub_1DC19DD20);
  v30 = v22;
  sub_1DC080808(&qword_1EDB29DF8, (uint64_t (*)(uint64_t))sub_1DC239CF0, MEMORY[0x1E0DB8030]);
  sub_1DC4049E4();
  return swift_release();
}

uint64_t sub_1DC38739C(uint64_t a1, uint64_t a2)
{
  int *updated;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  updated = (int *)type metadata accessor for StockFeedChartUpdateBlueprintModifier();
  v4 = MEMORY[0x1E0C80A78](updated);
  v29 = (uint64_t)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v23 - v6;
  v26 = sub_1DC40124C();
  v8 = *(_QWORD *)(v26 - 8);
  MEMORY[0x1E0C80A78](v26);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_1DC4008EC();
  v25 = *(_QWORD *)(v27 - 8);
  v11 = v25;
  MEMORY[0x1E0C80A78](v27);
  v24 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC19DD20(0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1DC400F7C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 1, 1, v16);
  v28 = a2;
  __swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)(a2 + 48) + OBJC_IVAR____TtC8StocksUI20StockFeedDataManager_watchlistManager), *(_QWORD *)(*(_QWORD *)(a2 + 48) + OBJC_IVAR____TtC8StocksUI20StockFeedDataManager_watchlistManager + 24));
  sub_1DC400A60();
  v17 = v24;
  sub_1DC4011EC();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v26);
  v18 = *(_QWORD *)(a2 + 40);
  sub_1DC0990BC((uint64_t)v15, (uint64_t)&v7[updated[5]], (uint64_t (*)(_QWORD))sub_1DC19DD20);
  v19 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
  v20 = v27;
  v19(&v7[updated[6]], v17, v27);
  sub_1DC0824D4(v18 + OBJC_IVAR____TtC8StocksUI33StockFeedBlueprintModifierFactory_featureAvailability, (uint64_t)&v7[updated[7]]);
  *(_QWORD *)v7 = 0x6470557472616843;
  *((_QWORD *)v7 + 1) = 0xEB00000000657461;
  sub_1DC0990BC((uint64_t)v7, v29, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedChartUpdateBlueprintModifier);
  sub_1DC239CF0();
  swift_allocObject();
  sub_1DC080808(&qword_1EDB3D6F0, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedChartUpdateBlueprintModifier, (uint64_t)&unk_1DC4219F0);
  v21 = sub_1DC40499C();
  sub_1DC0926D8((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedChartUpdateBlueprintModifier);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v17, v20);
  sub_1DC0926D8((uint64_t)v15, (uint64_t (*)(_QWORD))sub_1DC19DD20);
  v30 = v21;
  sub_1DC080808(&qword_1EDB29DF8, (uint64_t (*)(uint64_t))sub_1DC239CF0, MEMORY[0x1E0DB8030]);
  sub_1DC4049E4();
  return swift_release();
}

uint64_t sub_1DC3876B4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  __int128 v10[2];

  sub_1DC0824D4((uint64_t)a1, (uint64_t)v10);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4018AC();
  result = sub_1DC4025FC();
  if (result)
  {
    v5 = result;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1DC096268(0, (unint64_t *)&qword_1EDB2ACC0);
    result = sub_1DC402608();
    if (v9)
    {
      v6 = type metadata accessor for StockFeedModule();
      v7 = swift_allocObject();
      sub_1DC097DD0(v10, v7 + 16);
      *(_QWORD *)(v7 + 56) = v5;
      result = sub_1DC097DD0(&v8, v7 + 64);
      a2[3] = v6;
      a2[4] = (uint64_t)&off_1EA4544C8;
      *a2 = v7;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1DC3877C4(uint64_t a1)
{
  return sub_1DC080C78(a1, (void (*)(_QWORD))sub_1DC08C2A0, MEMORY[0x1E0DB8F58]);
}

uint64_t sub_1DC3877D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v6;

  v0 = sub_1DC402E30();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for StockFeedViewController();
  sub_1DC402B30();
  swift_release();
  sub_1DC096268(0, &qword_1EDB31240);
  sub_1DC402B3C();
  swift_release();
  sub_1DC096268(0, &qword_1EDB31238);
  sub_1DC402B3C();
  type metadata accessor for StockFeedRouter();
  sub_1DC402488();
  swift_release();
  swift_release();
  sub_1DC096268(0, &qword_1EDB42770);
  sub_1DC402B3C();
  swift_release();
  sub_1DC096268(0, &qword_1EDB36608);
  sub_1DC402B3C();
  type metadata accessor for StockFeedEventHandler();
  sub_1DC402488();
  swift_release();
  swift_release();
  sub_1DC096268(0, &qword_1EDB34E80);
  sub_1DC402B3C();
  swift_release();
  sub_1DC08CBF0(0, &qword_1EDB31228, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedBlueprintModifierFactory, sub_1DC38FB30, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for StockFeedInteractor);
  sub_1DC402B30();
  sub_1DC402494();
  swift_release();
  swift_release();
  sub_1DC096268(0, &qword_1EDB35C70);
  sub_1DC402B3C();
  swift_release();
  sub_1DC096268(0, &qword_1EDB322C8);
  sub_1DC402B3C();
  swift_release();
  sub_1DC38FB4C();
  sub_1DC402B30();
  swift_release();
  type metadata accessor for StockFeedBlueprintModifierFactory();
  sub_1DC402B30();
  swift_release();
  sub_1DC096268(0, &qword_1EDB37B70);
  sub_1DC402B3C();
  swift_release();
  sub_1DC38FC14();
  sub_1DC402B30();
  sub_1DC402494();
  swift_release();
  swift_release();
  sub_1DC38FDA0();
  sub_1DC402B30();
  sub_1DC402494();
  swift_release();
  swift_release();
  sub_1DC4061D8();
  v4 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DBB678];
  sub_1DC402B30();
  swift_release();
  sub_1DC38FCC0();
  sub_1DC402B30();
  swift_release();
  sub_1DC38FEA4();
  sub_1DC402B30();
  swift_release();
  sub_1DC1C022C();
  sub_1DC402B30();
  swift_release();
  type metadata accessor for StockFeedBlueprintLayoutBuilder();
  sub_1DC402B30();
  swift_release();
  sub_1DC38FF6C();
  sub_1DC402B30();
  sub_1DC402494();
  swift_release();
  swift_release();
  sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3F8A0);
  sub_1DC402B30();
  swift_release();
  sub_1DC2CA250();
  sub_1DC402B30();
  swift_release();
  sub_1DC096268(0, &qword_1EDB2A6F0);
  sub_1DC402B3C();
  sub_1DC405EC0();
  sub_1DC402488();
  swift_release();
  swift_release();
  sub_1DC12F920(0, (unint64_t *)&qword_1EDB27588, v4, MEMORY[0x1E0DBB668], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DBAE10]);
  sub_1DC402B30();
  sub_1DC402494();
  swift_release();
  swift_release();
  sub_1DC2CA3C0();
  sub_1DC402B30();
  sub_1DC402494();
  swift_release();
  swift_release();
  sub_1DC2CA538();
  sub_1DC402B30();
  sub_1DC402494();
  swift_release();
  swift_release();
  sub_1DC2CA674();
  sub_1DC402B30();
  swift_release();
  sub_1DC405800();
  sub_1DC402B30();
  swift_release();
  type metadata accessor for StockFeedBlueprintViewCellProvider();
  sub_1DC402B30();
  sub_1DC402494();
  swift_release();
  swift_release();
  type metadata accessor for StockFeedBlueprintViewSupplementaryViewProvider();
  sub_1DC402B30();
  sub_1DC402494();
  swift_release();
  swift_release();
  sub_1DC08CBF0(0, &qword_1EDB2A410, (uint64_t (*)(uint64_t))sub_1DC38FB4C, (uint64_t (*)(void))sub_1DC20CC04, MEMORY[0x1E0DBA600]);
  sub_1DC402B30();
  sub_1DC402494();
  swift_release();
  swift_release();
  sub_1DC08CBF0(0, &qword_1EDB2A320, (uint64_t (*)(uint64_t))sub_1DC2CA250, sub_1DC2CA750, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB9DC0]);
  sub_1DC402B30();
  sub_1DC402494();
  swift_release();
  swift_release();
  sub_1DC405E6C();
  sub_1DC402B30();
  swift_release();
  sub_1DC405E84();
  sub_1DC402B30();
  swift_release();
  sub_1DC404AF8();
  sub_1DC402B30();
  swift_release();
  sub_1DC390038();
  sub_1DC402B30();
  sub_1DC402494();
  swift_release();
  swift_release();
  sub_1DC405860();
  sub_1DC402B30();
  swift_release();
  sub_1DC089DA4(0, &qword_1EDB2A738, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedModel, MEMORY[0x1E0DBBA68]);
  sub_1DC402B30();
  swift_release();
  sub_1DC3900C0(0);
  sub_1DC402B30();
  swift_release();
  sub_1DC096268(0, &qword_1EDB2A7C0);
  sub_1DC402B3C();
  swift_release();
  sub_1DC096268(0, &qword_1EDB2A300);
  sub_1DC402B3C();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB5028], v0);
  sub_1DC40247C();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_1DC390154();
  sub_1DC402B30();
  swift_release();
  sub_1DC4057A0();
  sub_1DC402B30();
  sub_1DC402494();
  swift_release();
  swift_release();
  sub_1DC3901CC();
  sub_1DC402B30();
  sub_1DC402494();
  swift_release();
  swift_release();
  sub_1DC3902C4();
  sub_1DC402B30();
  sub_1DC402494();
  swift_release();
  swift_release();
  type metadata accessor for StockFeedBlueprintCellPrefetcher();
  sub_1DC402B30();
  return swift_release();
}

char *sub_1DC388480(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  char *result;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  _QWORD v33[2];
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD v45[3];
  uint64_t v46;
  _UNKNOWN **v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char v55[24];
  uint64_t v56;
  char v57[8];
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61[8];
  uint64_t v62;

  sub_1DC089DA4(0, (unint64_t *)&qword_1EDB28DE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF0D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v33 - v3;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB31240);
  result = (char *)sub_1DC402608();
  if (!v62)
  {
    __break(1u);
    goto LABEL_20;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB36608);
  result = (char *)sub_1DC402608();
  v6 = v59;
  if (!v59)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v7 = v60;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC38FF6C();
  result = (char *)sub_1DC4025FC();
  if (!result)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v8 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC390038();
  result = (char *)sub_1DC4025FC();
  if (!result)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (uint64_t)result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB29F00);
  result = (char *)sub_1DC402608();
  if (!v58)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v44 = v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_1DC4018AC();
  result = (char *)sub_1DC4025FC();
  if (!result)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB2B168);
  result = (char *)sub_1DC402608();
  if (!v56)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  sub_1DC4084B8();
  swift_allocObject();
  v43 = sub_1DC4084AC();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v11 = sub_1DC4010E4();
  sub_1DC402608();
  result = (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v4, 1, v11);
  if ((_DWORD)result == 1)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC089DA4(0, (unint64_t *)&qword_1EDB29460, (uint64_t (*)(uint64_t))type metadata accessor for StockListSelectionModel, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB3938]);
  result = (char *)sub_1DC4025FC();
  if (!result)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v12 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB2A350);
  result = (char *)sub_1DC402608();
  if (!v56)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v42 = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, (unint64_t *)&unk_1EDB29FB0);
  result = (char *)sub_1DC402608();
  v13 = v53;
  if (!v53)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  v41 = v54;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, (unint64_t *)&unk_1EDB28D58);
  result = (char *)sub_1DC402608();
  v40 = v51;
  if (!v51)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  v39 = v52;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC08C2A0();
  result = (char *)sub_1DC4025FC();
  if (!result)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  v35 = result;
  v36 = v7;
  v37 = v6;
  v38 = v4;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, (unint64_t *)&qword_1EDB29EE0);
  result = (char *)sub_1DC402608();
  v14 = v49;
  if (!v49)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  v15 = (uint64_t)v12;
  v34 = v50;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  result = (char *)sub_1DC402608();
  if (!v48)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  result = (char *)sub_1DC4025FC();
  if (!result)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  v16 = result;
  v46 = v10;
  v47 = (_UNKNOWN **)sub_1DC080808((unint64_t *)&qword_1EDB29180, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8638], MEMORY[0x1E0D59B68]);
  v45[0] = v16;
  sub_1DC404870();
  swift_allocObject();
  v17 = sub_1DC404858();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  result = (char *)sub_1DC4025FC();
  if (result)
  {
    v18 = (uint64_t)result;
    v19 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v61, v62);
    v33[1] = v33;
    MEMORY[0x1E0C80A78](v19);
    v21 = (_QWORD *)((char *)v33 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v22 + 16))(v21);
    v23 = *v21;
    v24 = type metadata accessor for StockFeedStyler();
    v47 = &off_1EA44F568;
    v46 = v24;
    v45[0] = v23;
    v25 = (char *)objc_allocWithZone((Class)type metadata accessor for StockFeedViewController());
    v26 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v45, v46);
    v33[0] = v33;
    MEMORY[0x1E0C80A78](v26);
    v28 = (_QWORD *)((char *)v33 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v29 + 16))(v28);
    v30 = *v28;
    v32 = v39;
    v39 = v17;
    v31 = v42;
    v41 = sub_1DC3910F8(v30, v37, v36, v42, v44, (uint64_t)v57, v43, (uint64_t)v38, v15, (uint64_t)v55, v13, (uint64_t)v41, v40, v32, (uint64_t)v35, v14, v34, v17, v18,
            v25);
    swift_unknownObjectRelease();

    swift_release();
    swift_release();
    swift_release();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_release();
    swift_unknownObjectRelease();
    swift_release();
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v45);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v61);
    return v41;
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_1DC388D18@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[24];
  uint64_t v14;
  uint64_t v15;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, qword_1EDB2D2F0);
  result = sub_1DC402608();
  v4 = v14;
  if (v14)
  {
    v5 = type metadata accessor for StockFeedStyler();
    v6 = v15;
    v7 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v13, v14);
    MEMORY[0x1E0C80A78](v7);
    v9 = &v13[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
    (*(void (**)(_BYTE *))(v10 + 16))(v9);
    v11 = sub_1DC0A3134((uint64_t)v9, v5, v4, v6);
    result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
    a2[3] = v5;
    a2[4] = (uint64_t)&off_1EA44F568;
    *a2 = v11;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC388E2C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t *v26;
  uint64_t v27;
  _QWORD v28[5];
  __int128 v29;
  uint64_t v30;
  _BYTE v31[24];
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;
  __int128 v39[3];

  sub_1DC089DA4(0, (unint64_t *)&qword_1EDB28DE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF0D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v26 - v5;
  sub_1DC0824D4((uint64_t)a1, (uint64_t)v39);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC08CBF0(0, (unint64_t *)&qword_1EDB29CB0, type metadata accessor for StocksActivity, sub_1DC08CDA4, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB75B0]);
  result = sub_1DC4025FC();
  if (!result)
  {
    __break(1u);
    goto LABEL_12;
  }
  v8 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v9 = sub_1DC4010E4();
  sub_1DC402608();
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v6, 1, v9);
  if ((_DWORD)result == 1)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4018AC();
  result = sub_1DC4025FC();
  if (!result)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v10 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, (unint64_t *)&qword_1EDB2ACC0);
  result = sub_1DC402608();
  if (!v38)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, qword_1EDB2D2F0);
  result = sub_1DC402608();
  if (!v36)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB2B160);
  result = sub_1DC402608();
  if (!v34)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB3A2E0);
  result = sub_1DC402608();
  if (!v32)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v27 = v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3F970);
  result = sub_1DC4025FC();
  if (!result)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v11 = result;
  v26 = a2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB29F00);
  result = sub_1DC402608();
  if (v30)
  {
    v12 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v31, v32);
    MEMORY[0x1E0C80A78](v12);
    v14 = (uint64_t *)((char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v15 + 16))(v14);
    v16 = *v14;
    v17 = type metadata accessor for AnalyticsChannelDataFactory();
    v28[3] = v17;
    v28[4] = &off_1EA45E160;
    v28[0] = v16;
    v18 = type metadata accessor for StockFeedRouter();
    v19 = swift_allocObject();
    v20 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v28, v17);
    MEMORY[0x1E0C80A78](v20);
    v22 = (uint64_t *)((char *)&v26 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v23 + 16))(v22);
    v24 = sub_1DC39051C(v39, v8, (uint64_t)v6, v27, &v37, &v35, &v33, *v22, v11, &v29, v19);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
    result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
    v25 = v26;
    v26[3] = v18;
    v25[4] = (uint64_t)&off_1EA452098;
    *v25 = v24;
    return result;
  }
LABEL_19:
  __break(1u);
  return result;
}

void sub_1DC3892E0(uint64_t a1, _QWORD *a2)
{
  id v2;

  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for StockFeedViewController();
  v2 = (id)sub_1DC4025FC();
  swift_unknownObjectWeakAssign();

}

uint64_t sub_1DC38934C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB27470);
  result = sub_1DC402608();
  if (v7)
  {
    v4 = type metadata accessor for StockEarningsModelFactory();
    v5 = swift_allocObject();
    result = sub_1DC097DD0(&v6, v5 + 16);
    a2[3] = v4;
    a2[4] = (uint64_t)&off_1EA44F538;
    *a2 = v5;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC3893FC@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD v18[2];
  _BYTE v19[24];
  uint64_t v20;
  _BYTE v21[24];
  uint64_t v22;
  _BYTE v23[24];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB34E80);
  result = sub_1DC402608();
  v5 = v25;
  if (!v25)
  {
    __break(1u);
    goto LABEL_8;
  }
  v6 = v26;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB31238);
  result = sub_1DC402608();
  if (!v24)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB322C8);
  result = sub_1DC402608();
  if (!v22)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB274B0);
  result = sub_1DC402608();
  if (!v20)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, (unint64_t *)&qword_1EDB29EE0);
  result = sub_1DC402608();
  v7 = v18[0];
  if (v18[0])
  {
    v8 = v18[1];
    v9 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v23, v24);
    MEMORY[0x1E0C80A78](v9);
    v11 = (_QWORD *)((char *)v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v12 + 16))(v11);
    v13 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v21, v22);
    MEMORY[0x1E0C80A78](v13);
    v15 = (_QWORD *)((char *)v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v16 + 16))(v15);
    v17 = sub_1DC391774(v5, v6, *v11, *v15, (uint64_t)v19, v7, v8);
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
    result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
    *a2 = v17;
    a2[1] = &off_1EA46AC78;
    return result;
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1DC3896D8(uint64_t a1, _QWORD *a2)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, _UNKNOWN **, uint64_t, uint64_t);
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  _BYTE v9[24];
  uint64_t v10;
  uint64_t v11;

  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1DC096268(0, &qword_1EDB31238);
  result = sub_1DC402608();
  if (v8)
  {
    sub_1DC097DD0(&v7, (uint64_t)v9);
    v3 = v10;
    v4 = v11;
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v9, v10);
    v5 = *(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v4 + 16);
    v6 = swift_retain();
    v5(v6, &off_1EA46ABF8, v3, v4);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC3897A4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC08CBF0(0, &qword_1EDB31228, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedBlueprintModifierFactory, sub_1DC38FB30, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for StockFeedInteractor);
  result = sub_1DC4025FC();
  if (result)
  {
    *a2 = result;
    a2[1] = (uint64_t)&off_1EA453DD8;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC389824(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  void *v13;
  uint64_t v14;
  char *v15;
  id v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22[24];
  uint64_t v23;
  char v24[24];
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  sub_1DC089DA4(0, (unint64_t *)&qword_1EDB28DE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF0D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v16 - v3;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB35C70);
  result = sub_1DC402608();
  v6 = v26;
  if (!v26)
  {
    __break(1u);
    goto LABEL_15;
  }
  v7 = v27;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, (unint64_t *)&unk_1EDB337B0);
  result = sub_1DC402608();
  if (!v25)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC38FC14();
  result = sub_1DC4025FC();
  if (!result)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v8 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for StockFeedBlueprintModifierFactory();
  result = sub_1DC4025FC();
  if (!result)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v20 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC1C022C();
  result = sub_1DC4025FC();
  v21 = result;
  if (!result)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v19 = v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC1315E8();
  result = sub_1DC4025FC();
  if (!result)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_1DC4010E4();
  sub_1DC402608();
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v4, 1, v10);
  if ((_DWORD)result == 1)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC390154();
  result = sub_1DC4025FC();
  if (!result)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v11 = (void *)result;
  v18 = v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC08F8F4();
  result = sub_1DC4025FC();
  if (!result)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v12 = (void *)result;
  v17 = v4;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC3901CC();
  result = sub_1DC4025FC();
  if (!result)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v13 = (void *)result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB28C40);
  result = sub_1DC402608();
  if (!v23)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC08C2A0();
  result = sub_1DC4025FC();
  if (result)
  {
    v14 = result;
    sub_1DC08CBF0(0, &qword_1EDB31228, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedBlueprintModifierFactory, sub_1DC38FB30, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for StockFeedInteractor);
    swift_allocObject();
    v16 = v13;
    v15 = sub_1DC390BF4(v18, v19, (uint64_t)v24, v8, v20, v21, v9, (uint64_t)v17, v11, v12, v13, (uint64_t)v22, v14);
    swift_unknownObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    swift_release();

    swift_release();
    return (uint64_t)v15;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1DC389C98(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  _QWORD v14[4];

  sub_1DC089DA4(0, (unint64_t *)&qword_1EDB28DE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF0D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v9 - v4;
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1DC096268(0, (unint64_t *)&unk_1EDB295C0);
  result = sub_1DC402608();
  if (!v13)
  {
    __break(1u);
    goto LABEL_8;
  }
  sub_1DC097DD0(&v12, (uint64_t)v14);
  __swift_project_boxed_opaque_existential_1(v14, v14[3]);
  sub_1DC391A50(&qword_1EDB31220, (uint64_t)&unk_1DC414C48);
  sub_1DC402B48();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v12);
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1DC096268(0, &qword_1EDB28C40);
  result = sub_1DC402608();
  if (!v11)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  sub_1DC097DD0(&v10, (uint64_t)&v12);
  __swift_project_boxed_opaque_existential_1(&v12, v13);
  sub_1DC391A50(&qword_1EDB31210, (uint64_t)&unk_1DC414B98);
  sub_1DC400988();
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1DC08C1A0();
  result = sub_1DC4025FC();
  if (!result)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  swift_allocObject();
  swift_weakInit();
  sub_1DC4070C0();
  swift_release();
  __swift_project_boxed_opaque_existential_1(&v10, v11);
  sub_1DC4024AC();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v10);
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1DC096268(0, &qword_1EDB28BF0);
  result = sub_1DC402608();
  if (!(_QWORD)v10)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  v7 = sub_1DC4010E4();
  sub_1DC402608();
  v8 = *(_QWORD *)(v7 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v7);
  if ((_DWORD)result != 1)
  {
    swift_getObjectType();
    sub_1DC391A50(&qword_1EDB31208, (uint64_t)&unk_1DC414B70);
    sub_1DC4010B4();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v5, v7);
    sub_1DC400724();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v12);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1DC38A048(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1DC089DA4(0, &qword_1EDB3FF80, (uint64_t (*)(uint64_t))sub_1DC391AB0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    sub_1DC391AB0();
    v4 = v3;
    v5 = *(_QWORD *)(v3 - 8);
    v6 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_1DC40DC10;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v5 + 16))(v7 + v6, a1, v4);
    sub_1DC407858();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1DC38A148@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  _QWORD v30[5];
  __int128 v31;
  uint64_t v32;
  _BYTE v33[24];
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  uint64_t v42;
  __int128 v43;
  uint64_t v44;

  sub_1DC089DA4(0, (unint64_t *)&qword_1EDB28DE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF0D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v27 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v7 = sub_1DC4010E4();
  sub_1DC402608();
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v6, 1, v7);
  if ((_DWORD)result == 1)
  {
    __break(1u);
    goto LABEL_12;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, (unint64_t *)&unk_1EDB28C50);
  result = sub_1DC402608();
  if (!v44)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB28CC0);
  result = sub_1DC402608();
  if (!v42)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB3B460);
  result = sub_1DC402608();
  v9 = v39;
  if (!v39)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v10 = v40;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB28C88);
  result = sub_1DC402608();
  if (!v38)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v29 = a2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB28BF0);
  result = sub_1DC402608();
  v11 = v35;
  if (!v35)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v12 = v36;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB322C0);
  result = sub_1DC402608();
  if (!v34)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v27 = v10;
  v28 = v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC08C368();
  result = sub_1DC4025FC();
  if (!result)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v13 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB27470);
  result = sub_1DC402608();
  if (v32)
  {
    v14 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v33, v34);
    MEMORY[0x1E0C80A78](v14);
    v16 = (uint64_t *)((char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v17 + 16))(v16);
    v18 = *v16;
    v19 = type metadata accessor for StockFeedServiceProxy();
    v30[3] = v19;
    v30[4] = &off_1EA45F9B8;
    v30[0] = v18;
    type metadata accessor for StockFeedDataManager();
    v20 = swift_allocObject();
    v21 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v30, v19);
    MEMORY[0x1E0C80A78](v21);
    v23 = (uint64_t *)((char *)&v27 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v24 + 16))(v23);
    v25 = sub_1DC39077C((uint64_t)v6, &v43, &v41, v28, v27, &v37, v11, v12, *v23, v13, &v31, v20);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
    result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
    v26 = v29;
    *v29 = v25;
    v26[1] = (uint64_t)&off_1EA455DB0;
    return result;
  }
LABEL_19:
  __break(1u);
  return result;
}

uint64_t sub_1DC38A5F0@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27[5];
  _QWORD v28[3];
  uint64_t v29;
  uint64_t v30;
  _QWORD v31[5];
  _QWORD v32[5];
  _QWORD v33[5];
  _BYTE v34[24];
  uint64_t v35;
  char v36[24];
  uint64_t v37;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4018AC();
  result = sub_1DC4025FC();
  if (!result)
  {
    __break(1u);
    goto LABEL_14;
  }
  v5 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC38FB4C();
  result = sub_1DC4025FC();
  if (!result)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v6 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC1C022C();
  result = sub_1DC4025FC();
  if (!result)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v7 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4061D8();
  result = sub_1DC4025CC();
  if (!result)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v8 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB28CD0);
  result = sub_1DC402608();
  if (!v37)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB3A2E0);
  result = sub_1DC402608();
  if (!v35)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v26 = a2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3F970);
  result = sub_1DC4025FC();
  if (!result)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = (void *)result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, (unint64_t *)&unk_1EDB29910);
  result = sub_1DC402608();
  if (!v33[3])
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB292D8);
  result = sub_1DC402608();
  if (!v32[3])
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v25 = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, (unint64_t *)&unk_1EDB28C50);
  result = sub_1DC402608();
  if (!v31[3])
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v23 = v7;
  v24 = v6;
  v10 = v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, (unint64_t *)&unk_1EDB28C90);
  result = sub_1DC402608();
  v11 = v29;
  if (v29)
  {
    v12 = type metadata accessor for StockFeedTracker();
    v13 = v30;
    v14 = __swift_project_boxed_opaque_existential_1(v28, v29);
    v27[3] = v11;
    v27[4] = v13;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v27);
    (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(boxed_opaque_existential_1, v14, v11);
    v16 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v34, v35);
    MEMORY[0x1E0C80A78](v16);
    v18 = (char *)&v23 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v19 + 16))(v18);
    v20 = type metadata accessor for AnalyticsChannelDataFactory();
    v21 = sub_1DC3A1C70(v10, v24, v23, v25, (uint64_t)v36, (uint64_t)v18, v9, (uint64_t)v33, (uint64_t)v32, (uint64_t)v31, (uint64_t)boxed_opaque_existential_1, v12, v20, v11, (uint64_t)&off_1EA45E160, v13);
    swift_release();
    swift_release();
    swift_release();
    swift_release();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
    result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
    v22 = v26;
    v26[3] = v12;
    v22[4] = &off_1EA4693A0;
    *v22 = v21;
    return result;
  }
LABEL_23:
  __break(1u);
  return result;
}

uint64_t sub_1DC38AAB8(uint64_t a1)
{
  return sub_1DC080C78(a1, (void (*)(_QWORD))sub_1DC38FB4C, MEMORY[0x1E0DB80B0]);
}

uint64_t sub_1DC38AACC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE v27[12];
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v32;
  uint64_t v33[5];
  _QWORD v34[3];
  uint64_t v35;
  uint64_t v36;
  _BYTE v37[24];
  uint64_t v38;
  char v39;
  _BYTE v40[24];
  uint64_t v41;
  __int128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  uint64_t v47;
  __int128 v48;
  uint64_t v49;
  __int128 v50;
  uint64_t v51;

  sub_1DC089DA4(0, (unint64_t *)&qword_1EDB28DE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF0D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v4 = &v27[-v3];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v5 = sub_1DC4010E4();
  sub_1DC402608();
  result = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5);
  if ((_DWORD)result == 1)
  {
    __break(1u);
    goto LABEL_14;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB28CC0);
  result = sub_1DC402608();
  if (!v51)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB28C88);
  result = sub_1DC402608();
  if (!v49)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, (unint64_t *)&unk_1EDB28C50);
  result = sub_1DC402608();
  if (!v47)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB28BF0);
  result = sub_1DC402608();
  v7 = v44;
  if (!v44)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v8 = v45;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB27470);
  result = sub_1DC402608();
  if (!v43)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC390154();
  result = sub_1DC4025FC();
  if (!result)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB37B70);
  result = sub_1DC402608();
  if (!v41)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  result = sub_1DC402608();
  v10 = v39;
  if (v39 == 2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB42770);
  result = sub_1DC402608();
  if (!v38)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v29 = v9;
  v30 = v8;
  v31 = v7;
  v32 = v4;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, (unint64_t *)&unk_1EDB28C90);
  result = sub_1DC402608();
  v11 = v35;
  if (v35)
  {
    v28 = v10 & 1;
    v12 = type metadata accessor for StockFeedBlueprintModifierFactory();
    v13 = v36;
    v14 = __swift_project_boxed_opaque_existential_1(v34, v11);
    v33[3] = v11;
    v33[4] = v13;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v33);
    (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(boxed_opaque_existential_1, v14, v11);
    v16 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v40, v41);
    MEMORY[0x1E0C80A78](v16);
    v18 = &v27[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
    (*(void (**)(_BYTE *))(v19 + 16))(v18);
    v20 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v37, v38);
    MEMORY[0x1E0C80A78](v20);
    v22 = &v27[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
    (*(void (**)(_BYTE *))(v23 + 16))(v22);
    v24 = type metadata accessor for StockFeedSectionFactory();
    v25 = type metadata accessor for StockEarningsModelFactory();
    v26 = sub_1DC239AEC((uint64_t)v32, &v50, &v48, &v46, v31, v30, &v42, v29, (uint64_t)v18, v28, (uint64_t)v22, (uint64_t)boxed_opaque_existential_1, v12, v24, v25, v11, (uint64_t)&off_1EA461078, (uint64_t)&off_1EA44F538, v13);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
    return v26;
  }
LABEL_23:
  __break(1u);
  return result;
}

uint64_t sub_1DC38B044@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB28C40);
  result = sub_1DC402608();
  if (!v11)
  {
    __break(1u);
    goto LABEL_6;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, (unint64_t *)&unk_1EDB2AF10);
  result = sub_1DC402608();
  if (!v9)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC0995E8(0, &qword_1EDB3F9E0);
  result = sub_1DC4025FC();
  if (result)
  {
    v5 = result;
    v6 = type metadata accessor for StockFeedSectionFactory();
    v7 = swift_allocObject();
    sub_1DC097DD0(&v10, v7 + 16);
    result = sub_1DC097DD0(&v8, v7 + 56);
    *(_QWORD *)(v7 + 96) = v5;
    a2[3] = v6;
    a2[4] = (uint64_t)&off_1EA461078;
    *a2 = v7;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1DC38B1A8(_QWORD *a1)
{
  uint64_t result;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC38FB4C();
  result = sub_1DC4025FC();
  if (result)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1DC38FCC0();
    result = sub_1DC4025FC();
    if (result)
    {
      sub_1DC38FC14();
      swift_allocObject();
      return sub_1DC4049C0();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1DC38B284(uint64_t a1, _QWORD *a2)
{
  uint64_t result;

  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1DC38FDA0();
  result = sub_1DC4025FC();
  if (result)
  {
    sub_1DC39195C();
    swift_allocObject();
    sub_1DC080808(&qword_1EDB2A830, (uint64_t (*)(uint64_t))sub_1DC38FDA0, MEMORY[0x1E0DBBFB0]);
    sub_1DC405B3C();
    sub_1DC4049D8();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC38B34C(_QWORD *a1)
{
  uint64_t result;
  uint64_t v3;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC1C022C();
  result = sub_1DC4025FC();
  if (!result)
  {
    __break(1u);
    goto LABEL_8;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB2A6F0);
  result = sub_1DC4025D8();
  if (!v3)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for StockFeedBlueprintLayoutBuilder();
  result = sub_1DC4025FC();
  if (!result)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC38FEA4();
  result = sub_1DC4025FC();
  if (!result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4061D8();
  result = sub_1DC4025CC();
  if (result)
  {
    sub_1DC38FDA0();
    swift_allocObject();
    return sub_1DC40661C();
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1DC38B530(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  unint64_t v18;

  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  v3 = sub_1DC405E6C();
  result = sub_1DC4025CC();
  if (!result)
  {
    __break(1u);
    goto LABEL_7;
  }
  v17 = v3;
  v18 = MEMORY[0x1E0DBAFA0];
  *(_QWORD *)&v16 = result;
  sub_1DC406628();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v16);
  v5 = sub_1DC4060F4();
  swift_allocObject();
  v6 = sub_1DC4060E8();
  v17 = v5;
  v18 = MEMORY[0x1E0DBB430];
  *(_QWORD *)&v16 = v6;
  sub_1DC406628();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v16);
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1DC089DA4(0, &qword_1EDB2A738, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedModel, MEMORY[0x1E0DBBA68]);
  v8 = v7;
  result = sub_1DC4025FC();
  if (!result)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  v9 = result;
  v17 = v8;
  v18 = sub_1DC3918F4();
  *(_QWORD *)&v16 = v9;
  sub_1DC406628();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v16);
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  v10 = sub_1DC407930();
  sub_1DC0824D4((uint64_t)a2, (uint64_t)&v16);
  v11 = swift_allocObject();
  sub_1DC097DD0(&v16, v11 + 16);
  v12 = sub_1DC4025E4();
  result = swift_release();
  if (!v12)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v17 = v10;
  v18 = sub_1DC080808(&qword_1EDB2AF00, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5BC30], MEMORY[0x1E0D5BC28]);
  *(_QWORD *)&v16 = v12;
  sub_1DC406628();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v16);
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  v13 = sub_1DC407B70();
  sub_1DC0824D4((uint64_t)a2, (uint64_t)&v16);
  v14 = swift_allocObject();
  sub_1DC097DD0(&v16, v14 + 16);
  v15 = sub_1DC4025E4();
  result = swift_release();
  if (v15)
  {
    v17 = v13;
    v18 = sub_1DC080808(&qword_1EDB2AF68, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5C670], MEMORY[0x1E0D5C668]);
    *(_QWORD *)&v16 = v15;
    sub_1DC406628();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v16);
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_1DC38B820(_QWORD *a1, _QWORD *a2)
{
  uint64_t result;
  void *v5;
  void *v6;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1DC405800();
  result = sub_1DC4025CC();
  if (!result)
  {
    __break(1u);
    goto LABEL_6;
  }
  v5 = (void *)result;
  sub_1DC402530();

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3F8A0);
  result = sub_1DC4025CC();
  if (!result)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v6 = (void *)result;
  sub_1DC0821D4(0, &qword_1EDB3F840);
  sub_1DC408B00();
  sub_1DC402524();

  swift_bridgeObjectRelease();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1DC08CBF0(0, &qword_1EDB31228, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedBlueprintModifierFactory, sub_1DC38FB30, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for StockFeedInteractor);
  result = sub_1DC4025FC();
  if (result)
  {
    sub_1DC391A50(&qword_1EDB31200, (uint64_t)&unk_1DC414BF0);
    sub_1DC096268(0, (unint64_t *)&unk_1EDB2AF20);
    sub_1DC402518();
    return swift_release();
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1DC38BA74(_QWORD *a1)
{
  uint64_t result;
  uint64_t v3;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC2CA250();
  result = sub_1DC4025FC();
  if (!result)
  {
    __break(1u);
    goto LABEL_6;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB2A940);
  result = sub_1DC402608();
  if (!v3)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC08CBF0(0, &qword_1EDB2A320, (uint64_t (*)(uint64_t))sub_1DC2CA250, sub_1DC2CA750, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB9DC0]);
  result = sub_1DC4025FC();
  if (result)
  {
    sub_1DC390414(&qword_1EDB2A318, &qword_1EDB2A320, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB9DC0], MEMORY[0x1E0DB9DC8]);
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1DC4057A0();
    sub_1DC4025CC();
    sub_1DC38FCC0();
    swift_allocObject();
    return sub_1DC404BB8();
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1DC38BC50(uint64_t a1)
{
  return sub_1DC080C78(a1, (void (*)(_QWORD))sub_1DC38FEA4, MEMORY[0x1E0DBB3E8]);
}

uint64_t sub_1DC38BC64(uint64_t a1)
{
  return sub_1DC080C78(a1, (void (*)(_QWORD))sub_1DC1C022C, MEMORY[0x1E0DB9978]);
}

uint64_t sub_1DC38BC78(_QWORD *a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v63;
  uint64_t *v64;
  int v65;
  uint64_t *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69[5];
  _QWORD v70[3];
  uint64_t v71;
  uint64_t v72;
  _BYTE v73[24];
  uint64_t v74;
  __int128 v75;
  uint64_t v76;
  char v77;
  _BYTE v78[24];
  uint64_t v79;
  _BYTE v80[24];
  uint64_t v81;
  _BYTE v82[24];
  uint64_t v83;
  _BYTE v84[24];
  uint64_t v85;
  _BYTE v86[24];
  uint64_t v87;
  _BYTE v88[24];
  uint64_t v89;
  _BYTE v90[24];
  uint64_t v91;
  _BYTE v92[24];
  uint64_t v93;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB3EF68);
  result = sub_1DC402608();
  if (!v93)
  {
    __break(1u);
    goto LABEL_17;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB3ED50);
  result = sub_1DC402608();
  if (!v91)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB3E410);
  result = sub_1DC402608();
  if (!v89)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB3E788);
  result = sub_1DC402608();
  if (!v87)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB3EF60);
  result = sub_1DC402608();
  if (!v85)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB3DBA0);
  result = sub_1DC402608();
  if (!v83)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB3F0D8);
  result = sub_1DC402608();
  if (!v81)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB3EA58);
  result = sub_1DC402608();
  if (!v79)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC12F920(0, (unint64_t *)&unk_1EDB2AE10, MEMORY[0x1E0D5E880], MEMORY[0x1E0D5E878], MEMORY[0x1E0D5AA30]);
  result = sub_1DC4025FC();
  if (!result)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v3 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC408428();
  result = sub_1DC4025FC();
  if (!result)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v4 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  result = sub_1DC402608();
  if (v77 == 2)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB289C0);
  sub_1DC400BC8();
  sub_1DC4025D8();
  result = swift_bridgeObjectRelease();
  if (!v76)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB3D7A0);
  result = sub_1DC402608();
  if (!v74)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v67 = v4;
  v68 = v3;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, (unint64_t *)&unk_1EDB28C90);
  result = sub_1DC402608();
  if (v71)
  {
    v65 = v77 & 1;
    v63 = type metadata accessor for StockFeedBlueprintLayoutBuilder();
    v5 = v72;
    v59 = v72;
    v61 = v71;
    v6 = __swift_project_boxed_opaque_existential_1(v70, v71);
    v69[3] = v61;
    v69[4] = v5;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v69);
    (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v61 - 8) + 16))(boxed_opaque_existential_1, v6, v61);
    v7 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v92, v93);
    v66 = &v45;
    MEMORY[0x1E0C80A78](v7);
    v58 = (uint64_t)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(void))(v9 + 16))();
    v10 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v90, v91);
    v64 = &v45;
    MEMORY[0x1E0C80A78](v10);
    v56 = (uint64_t)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(void))(v12 + 16))();
    v13 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v88, v89);
    v60 = &v45;
    MEMORY[0x1E0C80A78](v13);
    v55 = (uint64_t)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(void))(v15 + 16))();
    v16 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v86, v87);
    v57 = &v45;
    MEMORY[0x1E0C80A78](v16);
    v53 = (uint64_t)&v45 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(void))(v18 + 16))();
    v19 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v84, v85);
    v54 = &v45;
    MEMORY[0x1E0C80A78](v19);
    v51 = (uint64_t)&v45 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(void))(v21 + 16))();
    v22 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v82, v83);
    v52 = &v45;
    MEMORY[0x1E0C80A78](v22);
    v49 = (uint64_t)&v45 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(void))(v24 + 16))();
    v25 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v80, v81);
    v50 = &v45;
    MEMORY[0x1E0C80A78](v25);
    v27 = (char *)&v45 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v28 + 16))(v27);
    v29 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v78, v79);
    v48 = &v45;
    MEMORY[0x1E0C80A78](v29);
    v31 = (char *)&v45 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v32 + 16))(v31);
    v33 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v73, v74);
    v47 = &v45;
    MEMORY[0x1E0C80A78](v33);
    v35 = (uint64_t *)((char *)&v45 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v36 + 16))(v35);
    v46 = type metadata accessor for StockFeedMastheadViewLayoutAttributesFactory();
    v45 = type metadata accessor for BrandingTitleViewLayoutAttributesFactory();
    v37 = type metadata accessor for StockChartViewLayoutAttributesFactory();
    v38 = type metadata accessor for StockFeedEarningsViewLayoutAttributesFactory();
    v39 = type metadata accessor for BilingualFeedPromptViewLayoutAttributesFactory();
    v40 = type metadata accessor for StockFeedPriceViewLayoutAttributesFactory();
    v41 = type metadata accessor for QuoteDetailViewLayoutAttributesFactory();
    v42 = type metadata accessor for PlacardViewLayoutAttributesFactory();
    v43 = type metadata accessor for StockFeedEarningsViewModelFactory();
    v44 = sub_1DC1417B8(v58, v56, v55, v53, v51, v49, (uint64_t)v27, (uint64_t)v31, v68, v67, v65, &v75, v35, (uint64_t)boxed_opaque_existential_1, v63, v46, v45, v37, v38,
            v39,
            v61,
            v40,
            v41,
            v42,
            v43,
            (uint64_t)&off_1EA467AF0,
            (uint64_t)&off_1EA45AE08,
            (uint64_t)&off_1EA461928,
            (uint64_t)&off_1EA457730,
            (uint64_t)&off_1EA452988,
            v59,
            (uint64_t)&off_1EA46E108,
            (uint64_t)&off_1EA464E38,
            (uint64_t)&off_1EA467ED8,
            (uint64_t)&off_1EA466018);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v69);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v73);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v78);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v80);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v82);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v84);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v86);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v88);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v90);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v92);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v70);
    return v44;
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_1DC38C680(_QWORD *a1)
{
  uint64_t result;
  Class v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC38FB4C();
  result = sub_1DC4025FC();
  if (!result)
  {
    __break(1u);
    goto LABEL_11;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC2CA250();
  result = sub_1DC4025FC();
  if (!result)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB2A6F0);
  result = sub_1DC4025D8();
  if (!v7)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB2A940);
  result = sub_1DC402608();
  if (!v6)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC08CBF0(0, &qword_1EDB2A410, (uint64_t (*)(uint64_t))sub_1DC38FB4C, (uint64_t (*)(void))sub_1DC20CC04, MEMORY[0x1E0DBA600]);
  result = sub_1DC4025FC();
  if (!result)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC404AF8();
  result = sub_1DC4025CC();
  if (!result)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, (unint64_t *)&qword_1EDB29EE0);
  result = sub_1DC402608();
  if (!v5)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4018AC();
  result = sub_1DC4025FC();
  if (result)
  {
    sub_1DC080808((unint64_t *)&qword_1EDB29180, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8638], MEMORY[0x1E0D59B68]);
    sub_1DC38FF6C();
    v4 = objc_allocWithZone(v3);
    return sub_1DC40562C();
  }
LABEL_17:
  __break(1u);
  return result;
}

uint64_t sub_1DC38C990(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v3 = sub_1DC405B54();
  MEMORY[0x1E0C80A78](v3);
  (*(void (**)(char *, _QWORD))(v5 + 104))((char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E0DBA6B8]);
  sub_1DC4055F0();
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1DC096268(0, &qword_1EDB2B130);
  result = sub_1DC402608();
  if (v7)
  {
    swift_getObjectType();
    swift_allocObject();
    swift_unknownObjectWeakInit();
    sub_1DC408314();
    swift_allocObject();
    sub_1DC408308();
    sub_1DC4083C8();
    return swift_unknownObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC38CAF0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  unint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  _QWORD v19[4];
  uint64_t v20;

  sub_1DC089DA4(0, (unint64_t *)&unk_1F0352BE0, (uint64_t (*)(uint64_t))sub_1DC157E68, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v19 - v4;
  sub_1DC157E68();
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = a2 + 16;
  swift_beginAccess();
  v12 = MEMORY[0x1DF0CAD78](a2 + 16);
  if (v12)
  {
    v13 = (void *)v12;
    sub_1DC4055E4();

    v20 = v19[1];
    sub_1DC38FB4C();
    sub_1DC20CC04();
    sub_1DC405050();
    swift_release();
    v14 = sub_1DC1581D0();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  else
  {
    v14 = 0xF000000000000007;
  }
  swift_beginAccess();
  v15 = MEMORY[0x1DF0CAD78](v11);
  if (v15)
  {
    v16 = (void *)v15;
    sub_1DC4055E4();

    v19[0] = v20;
    sub_1DC38FB4C();
    sub_1DC20CC04();
    sub_1DC405050();
    swift_release();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v5, 1, 1, v7);
  }
  sub_1DC40463C();
  type metadata accessor for StockFeedSectionDescriptor();
  type metadata accessor for StockFeedModel();
  sub_1DC080808(&qword_1EDB36EE0, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedSectionDescriptor, (uint64_t)&unk_1DC4167B0);
  sub_1DC080808(&qword_1EDB2D770, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedModel, (uint64_t)&unk_1DC429058);
  sub_1DC408434();
  sub_1DC390BA0((uint64_t)v5);
  type metadata accessor for StockFeedServiceConfig();
  sub_1DC080808(&qword_1EDB33F10, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedServiceConfig, (uint64_t)&unk_1DC411510);
  v17 = sub_1DC4045F4();
  swift_bridgeObjectRelease();
  sub_1DC1F0AAC(v14);
  return v17;
}

uint64_t sub_1DC38CDC0(_QWORD *a1)
{
  uint64_t result;
  void *v2;
  id v3;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC12F920(0, (unint64_t *)&qword_1EDB27588, (uint64_t (*)(uint64_t))MEMORY[0x1E0DBB678], MEMORY[0x1E0DBB668], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DBAE10]);
  result = sub_1DC4025CC();
  if (result)
  {
    v2 = (void *)result;
    v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC35B8]), sel_initWithFrame_collectionViewLayout_, result, 0.0, 0.0, 0.0, 0.0);

    return (uint64_t)v3;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC38CE84(_QWORD *a1)
{
  uint64_t result;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3F8A0);
  result = sub_1DC4025CC();
  if (!result)
  {
    __break(1u);
    goto LABEL_7;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC2CA3C0();
  result = sub_1DC4025FC();
  if (!result)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC2CA538();
  result = sub_1DC4025FC();
  if (!result)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC2CA674();
  result = sub_1DC4025FC();
  if (result)
  {
    sub_1DC2CA250();
    swift_allocObject();
    return sub_1DC405068();
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_1DC38CFEC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  void *v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10[2];
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  _BYTE v14[40];

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC2CA250();
  result = sub_1DC4025FC();
  if (!result)
  {
    __break(1u);
    goto LABEL_6;
  }
  v5 = (void *)sub_1DC405074();
  swift_release();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB29F00);
  result = sub_1DC402608();
  if (!*((_QWORD *)&v12 + 1))
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  sub_1DC097DD0(&v11, (uint64_t)v14);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC0995E8(0, (unint64_t *)&qword_1EDB2A578);
  result = sub_1DC4025FC();
  if (result)
  {
    sub_1DC405EC0();
    v13 = 0;
    v11 = 0u;
    v12 = 0u;
    sub_1DC0824D4((uint64_t)v14, (uint64_t)v10);
    v6 = swift_allocObject();
    sub_1DC097DD0(v10, v6 + 16);
    *(_QWORD *)(v6 + 56) = v5;
    v7 = v5;
    v8 = sub_1DC405EA8();
    result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
    v9 = MEMORY[0x1E0DBAFF8];
    *a2 = v8;
    a2[1] = v9;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1DC38D190(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  char v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[3];
  uint64_t v16;

  v14 = sub_1DC4051E8();
  v3 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v5 = (_QWORD *)((char *)&v15[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = sub_1DC4052D8();
  MEMORY[0x1E0C80A78](v6);
  v7 = sub_1DC4052B4();
  MEMORY[0x1E0C80A78](v7);
  (*(void (**)(char *, _QWORD))(v9 + 104))((char *)&v15[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E0DB9470]);
  sub_1DC405E90();
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1DC096268(0, (unint64_t *)&unk_1EDB28C90);
  result = sub_1DC402608();
  if (v16)
  {
    __swift_project_boxed_opaque_existential_1(v15, v16);
    v11 = sub_1DC400C1C();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
    if ((v11 & 1) != 0)
    {
      v12 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB94A0];
      sub_1DC089DA4(0, &qword_1EDB3FF20, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB94A0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v13 = swift_allocObject();
      *(_OWORD *)(v13 + 16) = xmmword_1DC40C740;
      sub_1DC4052C0();
      sub_1DC4052CC();
      v15[0] = v13;
      sub_1DC080808(&qword_1EDB2A0F8, v12, MEMORY[0x1E0DB94A8]);
      sub_1DC089DA4(0, &qword_1EDB3F6D8, v12, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1DC0B23DC(&qword_1EDB3F6E0, &qword_1EDB3F6D8, v12);
      sub_1DC40964C();
      sub_1DC405E9C();
    }
    *v5 = 0x408EF00000000000;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DB93C0], v14);
    return sub_1DC405EB4();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC38D444(_QWORD *a1)
{
  uint64_t result;
  Class v2;
  id v3;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4061D8();
  result = sub_1DC4025CC();
  if (result)
  {
    sub_1DC12F920(0, (unint64_t *)&qword_1EDB27588, (uint64_t (*)(uint64_t))MEMORY[0x1E0DBB678], MEMORY[0x1E0DBB668], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DBAE10]);
    v3 = objc_allocWithZone(v2);
    return sub_1DC405DC4();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC38D4F0(_QWORD *a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  Class v6;
  id v7;
  __int128 v8[2];

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC38FB4C();
  result = sub_1DC4025FC();
  if (!result)
  {
    __break(1u);
    goto LABEL_7;
  }
  v3 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC1C022C();
  result = sub_1DC4025FC();
  if (!result)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for StockFeedBlueprintViewCellProvider();
  sub_1DC0824D4((uint64_t)a1, (uint64_t)v8);
  v4 = swift_allocObject();
  sub_1DC097DD0(v8, v4 + 16);
  v5 = sub_1DC4025E4();
  result = swift_release();
  if (!v5)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for StockFeedBlueprintViewSupplementaryViewProvider();
  result = sub_1DC4025FC();
  if (result)
  {
    *(_QWORD *)&v8[0] = v3;
    sub_1DC2CA3C0();
    v7 = objc_allocWithZone(v6);
    return sub_1DC406160();
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_1DC38D67C(_QWORD *a1, _QWORD *a2)
{
  uint64_t result;
  void *v4;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3F8A0);
  result = sub_1DC4025CC();
  if (result)
  {
    v4 = (void *)result;
    sub_1DC0821D4(0, &qword_1EDB3F840);
    sub_1DC408B00();
    sub_1DC402524();

    return swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC38D768(uint64_t a1, _QWORD *a2)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[3];
  uint64_t v6;
  uint64_t v7;

  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1DC096268(0, &qword_1EDB2A7C0);
  result = sub_1DC4025D8();
  v3 = v6;
  if (v6)
  {
    v4 = v7;
    __swift_project_boxed_opaque_existential_1(v5, v6);
    MEMORY[0x1DF0C6E0C](v3, v4);
    sub_1DC40616C();
    swift_release();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC38D838(_QWORD *a1)
{
  uint64_t result;
  Class v3;
  id v4;
  uint64_t v5;
  uint64_t v6;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC38FB4C();
  result = sub_1DC4025FC();
  if (!result)
  {
    __break(1u);
    goto LABEL_10;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC1C022C();
  result = sub_1DC4025FC();
  if (!result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC08CBF0(0, &qword_1EDB2A410, (uint64_t (*)(uint64_t))sub_1DC38FB4C, (uint64_t (*)(void))sub_1DC20CC04, MEMORY[0x1E0DBA600]);
  result = sub_1DC4025FC();
  if (!result)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, (unint64_t *)&qword_1EDB29EE0);
  result = sub_1DC402608();
  if (!v6)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4018AC();
  result = sub_1DC4025FC();
  if (!result)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  sub_1DC080808((unint64_t *)&qword_1EDB29180, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8638], MEMORY[0x1E0D59B68]);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB2A350);
  result = sub_1DC402608();
  if (!v5)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC3902C4();
  result = sub_1DC4025FC();
  if (result)
  {
    sub_1DC080808(&qword_1EDB2A020, (uint64_t (*)(uint64_t))sub_1DC3902C4, MEMORY[0x1E0DB88C0]);
    sub_1DC2CA538();
    v4 = objc_allocWithZone(v3);
    return sub_1DC405FA4();
  }
LABEL_15:
  __break(1u);
  return result;
}

void sub_1DC38DAE4(uint64_t a1, _QWORD *a2)
{
  void *v3;
  uint64_t v4;
  id v5;

  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1DC404AF8();
  sub_1DC4025CC();
  sub_1DC405FBC();
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1DC390038();
  if (sub_1DC4025FC())
    sub_1DC080808(&qword_1EDB2A638, (uint64_t (*)(uint64_t))sub_1DC390038, MEMORY[0x1E0DBB510]);
  sub_1DC405FC8();
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1DC405800();
  if (sub_1DC4025CC())
  {
    sub_1DC405F98();
    __swift_project_boxed_opaque_existential_1(a2, a2[3]);
    sub_1DC405E84();
    sub_1DC4025CC();
    sub_1DC405FD4();
    __swift_project_boxed_opaque_existential_1(a2, a2[3]);
    sub_1DC38FF6C();
    sub_1DC4025FC();
    sub_1DC405F8C();
    v3 = (void *)sub_1DC405F80();
    __swift_project_boxed_opaque_existential_1(a2, a2[3]);
    type metadata accessor for StockFeedViewController();
    v4 = sub_1DC4025FC();
    if (v4)
    {
      v5 = (id)v4;
      sub_1DC405D04();

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_1DC38DCFC(_QWORD *a1)
{
  uint64_t result;
  Class v3;
  id v4;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC38FB4C();
  result = sub_1DC4025FC();
  if (result)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1DC1C022C();
    result = sub_1DC4025FC();
    if (result)
    {
      sub_1DC2CA674();
      v4 = objc_allocWithZone(v3);
      return sub_1DC4062C8();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1DC38DDB8()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);
  id v2;

  v0 = sub_1DC4057E8();
  v1 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB9E20];
  MEMORY[0x1E0C80A78](v0);
  sub_1DC089DA4(0, &qword_1EDB3FF58, v1, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1DC40DC10;
  sub_1DC4057DC();
  sub_1DC080808((unint64_t *)&unk_1EDB2A340, v1, MEMORY[0x1E0DB9E28]);
  sub_1DC089DA4(0, &qword_1EDB3F6E8, v1, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1DC0B23DC((unint64_t *)&qword_1EDB3F6F0, &qword_1EDB3F6E8, v1);
  sub_1DC40964C();
  v2 = objc_allocWithZone((Class)sub_1DC405800());
  return sub_1DC4057F4();
}

uint64_t sub_1DC38DF04(_QWORD *a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t **v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE v30[24];
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE v34[24];
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  uint64_t v49;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, qword_1EDB2D2F0);
  result = sub_1DC402608();
  if (!v49)
  {
    __break(1u);
    goto LABEL_14;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB3BFC0);
  result = sub_1DC402608();
  if (!v46)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB39F20);
  result = sub_1DC402608();
  if (!v44)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB37768);
  result = sub_1DC402608();
  if (!v42)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v29 = v47;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB3BFB8);
  result = sub_1DC402608();
  v3 = v40;
  if (!v40)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v28 = v46;
  v27 = v41;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB34BD0);
  result = sub_1DC402608();
  v26 = v38;
  if (!v38)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v25 = v39;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB3CDE8);
  result = sub_1DC402608();
  v4 = v36;
  if (!v36)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v24 = v45;
  v23 = v37;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for StockChartViewController(0);
  result = sub_1DC4025FC();
  if (!result)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v5 = result;
  v21 = v43;
  v22 = v42;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB36D50);
  result = sub_1DC402608();
  if (!v35)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v20 = v44;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB2AEA8);
  result = sub_1DC402608();
  v6 = v32;
  if (!v32)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v7 = v33;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB3D7A0);
  result = sub_1DC402608();
  if (v31)
  {
    v8 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v34, v35);
    MEMORY[0x1E0C80A78](v8);
    v10 = (uint64_t *)((char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v11 + 16))(v10);
    v12 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v30, v31);
    MEMORY[0x1E0C80A78](v12);
    v14 = (uint64_t **)((char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t **))(v15 + 16))(v14);
    *((_QWORD *)&v19 + 1) = v7;
    *(_QWORD *)&v19 = v6;
    *((_QWORD *)&v18 + 1) = v4;
    *(_QWORD *)&v18 = v25;
    *((_QWORD *)&v17 + 1) = v26;
    *(_QWORD *)&v17 = v27;
    v16 = sub_1DC390998(&v48, v28, v29, v20, v24, v22, v21, v3, v17, v18, v23, v5, *v10, v19, *v14);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
    return v16;
  }
LABEL_23:
  __break(1u);
  return result;
}

void sub_1DC38E46C(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  _UNKNOWN **v3;
  id v4;

  v2 = *a1;
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for StockFeedViewController();
  v4 = (id)sub_1DC4025FC();
  v3 = &off_1EA457770;
  if (!v4)
    v3 = 0;
  *(_QWORD *)(v2 + 24) = v3;
  swift_unknownObjectWeakAssign();

}

uint64_t sub_1DC38E4EC(_QWORD *a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t *boxed_opaque_existential_1;
  uint64_t (*v10)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v11;
  uint64_t v12;
  char *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20[5];
  _QWORD v21[3];
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB38D10);
  result = sub_1DC402608();
  if (!v32)
  {
    __break(1u);
    goto LABEL_10;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB3BFC0);
  result = sub_1DC402608();
  if (!v30)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, qword_1EDB2D2F0);
  result = sub_1DC402608();
  if (!v29)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB2AF70);
  result = sub_1DC402608();
  if (!v27)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, (unint64_t *)&qword_1EDB29EE0);
  result = sub_1DC402608();
  v3 = v24;
  if (!v24)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v19 = v33;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4018AC();
  result = sub_1DC4025FC();
  if (!result)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v4 = result;
  v15 = v25;
  v16 = v31;
  v17 = v30;
  v18 = v32;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, (unint64_t *)&unk_1EDB28C90);
  result = sub_1DC402608();
  v5 = v22;
  if (v22)
  {
    v6 = type metadata accessor for StockFeedBlueprintViewSupplementaryViewProvider();
    v7 = v23;
    v8 = __swift_project_boxed_opaque_existential_1(v21, v22);
    v20[3] = v5;
    v20[4] = v7;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v20);
    v10 = *(uint64_t (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v5 - 8) + 16);
    v11 = v10(boxed_opaque_existential_1, v8, v5);
    MEMORY[0x1E0C80A78](v11);
    v13 = (char *)&v15 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
    v10((uint64_t *)v13, boxed_opaque_existential_1, v5);
    v14 = sub_1DC25CAF8(v18, v19, v17, v16, &v28, &v26, v3, v15, v4, (uint64_t)v13, v6, v5, v7);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
    return (uint64_t)v14;
  }
LABEL_15:
  __break(1u);
  return result;
}

void sub_1DC38E86C(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  _UNKNOWN **v3;
  id v4;

  v2 = *a1;
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for StockFeedViewController();
  v4 = (id)sub_1DC4025FC();
  v3 = &off_1EA457768;
  if (!v4)
    v3 = 0;
  *(_QWORD *)(v2 + 24) = v3;
  swift_unknownObjectWeakAssign();

}

uint64_t sub_1DC38E8EC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t result;
  uint64_t v13;
  _QWORD v14[2];

  v2 = sub_1DC406184();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (_QWORD *)((char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = sub_1DC40619C();
  MEMORY[0x1E0C80A78](v6);
  sub_1DC08CBF0(0, &qword_1EDB27580, (uint64_t (*)(uint64_t))sub_1DC38FB4C, (uint64_t (*)(void))sub_1DC20CC04, MEMORY[0x1E0DBA5F0]);
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)v14 - v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC38FB4C();
  result = sub_1DC4025FC();
  if (result)
  {
    v13 = result;
    (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E0DBA5E8], v8);
    *v5 = 0;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DBB5B0], v2);
    sub_1DC406190();
    v14[1] = v13;
    sub_1DC08CBF0(0, &qword_1EDB2A410, (uint64_t (*)(uint64_t))sub_1DC38FB4C, (uint64_t (*)(void))sub_1DC20CC04, MEMORY[0x1E0DBA600]);
    swift_allocObject();
    return sub_1DC405AC4();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC38EADC(uint64_t a1, _QWORD *a2)
{
  uint64_t result;

  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1DC1C022C();
  result = sub_1DC4025FC();
  if (result)
  {
    sub_1DC080808(&qword_1EDB2A240, (uint64_t (*)(uint64_t))sub_1DC1C022C, MEMORY[0x1E0DB9990]);
    return sub_1DC405AB8();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC38EB80(_QWORD *a1)
{
  uint64_t result;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC2CA250();
  result = sub_1DC4025FC();
  if (result)
  {
    sub_1DC08CBF0(0, &qword_1EDB2A320, (uint64_t (*)(uint64_t))sub_1DC2CA250, sub_1DC2CA750, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB9DC0]);
    swift_allocObject();
    return sub_1DC4057AC();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC38EC14(uint64_t a1, _QWORD *a2)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v7[5];

  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1DC1C022C();
  result = sub_1DC4025FC();
  if (result)
  {
    __swift_project_boxed_opaque_existential_1(a2, a2[3]);
    sub_1DC2CA250();
    result = sub_1DC4025FC();
    if (result)
    {
      sub_1DC390478();
      v5 = v4;
      swift_allocObject();
      v6 = sub_1DC40664C();
      v7[3] = v5;
      v7[4] = sub_1DC080808(&qword_1EDB2A868, (uint64_t (*)(uint64_t))sub_1DC390478, MEMORY[0x1E0DBBFE8]);
      v7[0] = v6;
      sub_1DC4057B8();
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1DC38ED30(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id (**v8)();
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[6];

  sub_1DC089DA4(0, &qword_1EDB2A6E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DBB798], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (_QWORD *)((char *)v15 - v3);
  v5 = sub_1DC405E60();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (id (**)())((char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v9 = sub_1DC405E84();
  result = sub_1DC4025CC();
  if (result)
  {
    v15[4] = v9;
    v15[5] = MEMORY[0x1E0DBAFC8];
    v15[1] = result;
    v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_1DC40DC10;
    *v8 = sub_1DC10C350;
    v8[1] = (id (*)())v11;
    (*(void (**)(id (**)(), _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0DBAF88], v5);
    *v4 = 10;
    v12 = *MEMORY[0x1E0DBB790];
    v13 = sub_1DC406214();
    v14 = *(_QWORD *)(v13 - 8);
    (*(void (**)(_QWORD *, uint64_t, uint64_t))(v14 + 104))(v4, v12, v13);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v4, 0, 1, v13);
    sub_1DC405E6C();
    swift_allocObject();
    return sub_1DC405E54();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC38EF0C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1DC1120B4();
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1DC40C740;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC390038();
  result = sub_1DC4025FC();
  if (result)
  {
    v4 = result;
    v5 = sub_1DC080808(&qword_1EDB2A630, (uint64_t (*)(uint64_t))sub_1DC390038, MEMORY[0x1E0DBB518]);
    *(_QWORD *)(v2 + 32) = v4;
    *(_QWORD *)(v2 + 40) = v5;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1DC405860();
    result = sub_1DC4025CC();
    if (result)
    {
      v6 = MEMORY[0x1E0DB9FC8];
      *(_QWORD *)(v2 + 48) = result;
      *(_QWORD *)(v2 + 56) = v6;
      sub_1DC404AF8();
      swift_allocObject();
      return sub_1DC404AEC();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1DC38F02C(_QWORD *a1)
{
  uint64_t result;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC2CA250();
  result = sub_1DC4025FC();
  if (result)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1DC3900C0(0);
    result = sub_1DC4025FC();
    if (result)
    {
      sub_1DC390038();
      swift_allocObject();
      return sub_1DC406124();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1DC38F108(uint64_t a1, _QWORD *a2)
{
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1DC38FF6C();
  if (sub_1DC4025FC())
    sub_1DC080808(&qword_1EDB2A2A0, (uint64_t (*)(uint64_t))sub_1DC38FF6C, MEMORY[0x1E0DB9B60]);
  return sub_1DC406130();
}

uint64_t sub_1DC38F194(_QWORD *a1)
{
  uint64_t result;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC2CA250();
  result = sub_1DC4025FC();
  if (result)
  {
    sub_1DC405074();
    swift_release();
    sub_1DC405860();
    swift_allocObject();
    return sub_1DC405854();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC38F218(_QWORD *a1)
{
  uint64_t result;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC3900C0(0);
  result = sub_1DC4025FC();
  if (result)
  {
    sub_1DC089DA4(0, &qword_1EDB2A738, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedModel, MEMORY[0x1E0DBBA68]);
    swift_allocObject();
    return sub_1DC406364();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC38F2A4(uint64_t a1)
{
  return sub_1DC080C78(a1, sub_1DC3900C0, MEMORY[0x1E0DBBC40]);
}

uint64_t sub_1DC38F2B8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC38FF6C();
  v4 = v3;
  result = sub_1DC4025FC();
  if (result)
  {
    v6 = result;
    a2[3] = v4;
    result = sub_1DC080808(&qword_1EDB2A2A8, (uint64_t (*)(uint64_t))sub_1DC38FF6C, MEMORY[0x1E0DB9B58]);
    a2[4] = result;
    *a2 = v6;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC38F344@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  objc_class *v4;
  id v5;
  uint64_t v6;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3F8A0);
  result = sub_1DC4025CC();
  if (result)
  {
    v4 = (objc_class *)sub_1DC404EB8();
    v5 = objc_allocWithZone(v4);
    result = sub_1DC404EAC();
    v6 = MEMORY[0x1E0DB8B60];
    a2[3] = (uint64_t)v4;
    a2[4] = v6;
    *a2 = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC38F3F8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  objc_class *v4;
  id v5;
  uint64_t v6;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3F8A0);
  result = sub_1DC4025CC();
  if (result)
  {
    v4 = (objc_class *)sub_1DC404EB8();
    v5 = objc_allocWithZone(v4);
    result = sub_1DC404EAC();
    v6 = MEMORY[0x1E0DB8B60];
    a2[3] = (uint64_t)v4;
    a2[4] = v6;
    *a2 = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC38F4AC(_QWORD *a1)
{
  uint64_t result;
  objc_class *v2;
  char *v3;
  char *v4;
  char *v5;
  char *v6;
  objc_super v7;
  _BYTE v8[24];
  uint64_t v9;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB2B060);
  result = sub_1DC402608();
  if (v9)
  {
    v2 = (objc_class *)sub_1DC390154();
    v3 = (char *)objc_allocWithZone(v2);
    v4 = &v3[qword_1F034E060];
    *(_QWORD *)v4 = 0;
    *((_QWORD *)v4 + 1) = 0;
    sub_1DC0824D4((uint64_t)v8, (uint64_t)&v3[qword_1F034E068]);
    v7.receiver = v3;
    v7.super_class = v2;
    v5 = (char *)objc_msgSendSuper2(&v7, sel_init);
    __swift_project_boxed_opaque_existential_1(&v5[qword_1F034E068], *(_QWORD *)&v5[qword_1F034E068 + 24]);
    v6 = v5;
    sub_1DC407FB4();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
    return (uint64_t)v6;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC38F5B8(uint64_t a1)
{
  return sub_1DC080C78(a1, (void (*)(_QWORD))MEMORY[0x1E0DB9DA8], MEMORY[0x1E0DB9DA0]);
}

uint64_t sub_1DC38F5CC(uint64_t a1, _QWORD *a2)
{
  uint64_t result;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1DC2CA250();
  result = sub_1DC4025FC();
  if (result)
  {
    v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DBADE0];
    sub_1DC08CBF0(0, &qword_1EDB2A4C0, (uint64_t (*)(uint64_t))sub_1DC2CA250, sub_1DC2CA750, MEMORY[0x1E0DBADE0]);
    swift_allocObject();
    sub_1DC405DB8();
    sub_1DC390414((unint64_t *)&qword_1EDB2A4B8, &qword_1EDB2A4C0, v3, MEMORY[0x1E0DBADE8]);
    sub_1DC405794();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC38F6C8(_QWORD *a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  Class v5;
  id v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC38FC14();
  result = sub_1DC4025FC();
  if (!result)
  {
    __break(1u);
    goto LABEL_8;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC38FB4C();
  result = sub_1DC4025FC();
  if (!result)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB2ACF8);
  sub_1DC408B60();
  sub_1DC0824D4((uint64_t)a1, (uint64_t)&v7);
  v3 = swift_allocObject();
  sub_1DC097DD0(&v7, v3 + 16);
  sub_1DC4025C0();
  swift_release();
  result = swift_bridgeObjectRelease();
  if (!v10)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v4 = sub_1DC4061D8();
  result = sub_1DC4025CC();
  if (!result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v8 = v4;
  v9 = MEMORY[0x1E0DBB668];
  *(_QWORD *)&v7 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC12DF98();
  result = sub_1DC4025FC();
  if (result)
  {
    sub_1DC3901CC();
    v6 = objc_allocWithZone(v5);
    return sub_1DC407864();
  }
LABEL_11:
  __break(1u);
  return result;
}

void sub_1DC38F8F8(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  void *v3;
  id v4;

  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1DC2CA538();
  v2 = sub_1DC4025FC();
  if (v2)
  {
    v3 = (void *)v2;
    v4 = (id)sub_1DC405F80();
    sub_1DC3901CC();
    sub_1DC405D04();

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1DC38F988(_QWORD *a1)
{
  uint64_t result;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC1C022C();
  result = sub_1DC4025FC();
  if (result)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    type metadata accessor for StockFeedBlueprintCellPrefetcher();
    result = sub_1DC4025FC();
    if (result)
    {
      sub_1DC3902C4();
      swift_allocObject();
      return sub_1DC404DF8();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1DC38FA4C(uint64_t a1, _QWORD *a2)
{
  uint64_t result;

  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1DC2CA250();
  result = sub_1DC4025FC();
  if (result)
  {
    sub_1DC405074();
    swift_release();
    return sub_1DC404E04();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC38FAC4(_QWORD *a1)
{
  uint64_t result;
  uint64_t v2;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4075DC();
  result = sub_1DC4025FC();
  if (result)
  {
    v2 = result;
    type metadata accessor for StockFeedBlueprintCellPrefetcher();
    result = swift_allocObject();
    *(_QWORD *)(result + 16) = v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC38FB30()
{
  return sub_1DC080808(&qword_1EDB3BE10, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedBlueprintModifierFactory, (uint64_t)&unk_1DC41C720);
}

void sub_1DC38FB4C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB29E80)
  {
    type metadata accessor for StockFeedSectionDescriptor();
    type metadata accessor for StockFeedModel();
    sub_1DC080808(&qword_1EDB36EE0, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedSectionDescriptor, (uint64_t)&unk_1DC4167B0);
    sub_1DC080808(&qword_1EDB2D770, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedModel, (uint64_t)&unk_1DC429058);
    v0 = sub_1DC404A2C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB29E80);
  }
}

