uint64_t sub_1DC121914@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  _UNKNOWN **v19;
  _QWORD v20[5];
  _BYTE v21[24];
  uint64_t v22;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB397F0);
  result = sub_1DC402608();
  if (v22)
  {
    v4 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v21, v22);
    MEMORY[0x1E0C80A78](v4);
    v6 = (uint64_t *)((char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v7 + 16))(v6);
    v8 = *v6;
    v9 = type metadata accessor for StockSearchCellViewStyler();
    v20[3] = v9;
    v20[4] = &off_1EA455318;
    v20[0] = v8;
    type metadata accessor for StockSearchCellViewRenderer();
    v10 = swift_allocObject();
    v11 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v20, v9);
    MEMORY[0x1E0C80A78](v11);
    v13 = (uint64_t *)((char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v14 + 16))(v13);
    v15 = *v13;
    v18 = v9;
    v19 = &off_1EA455318;
    *(_QWORD *)&v17 = v15;
    sub_1DC097DD0(&v17, v10 + 16);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
    result = sub_1DC081B48(&qword_1EDB37E38, 255, (uint64_t (*)(uint64_t))type metadata accessor for StockSearchCellViewRenderer, (uint64_t)&unk_1DC42F9E4);
    *a2 = v10;
    a2[1] = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC121ACC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1DC08AE10(a1, (uint64_t (*)(_QWORD))type metadata accessor for StockSearchCellViewStyler, (uint64_t (*)(_BYTE *, uint64_t, uint64_t, uint64_t))sub_1DC0A3134, (uint64_t)&off_1EA455318, a2);
}

uint64_t sub_1DC121AE8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1DC08AE10(a1, (uint64_t (*)(_QWORD))type metadata accessor for StockSearchStyler, (uint64_t (*)(_BYTE *, uint64_t, uint64_t, uint64_t))sub_1DC0A3134, (uint64_t)&off_1EA45D6D8, a2);
}

uint64_t sub_1DC121B04@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v3 = type metadata accessor for StockSearchRouter();
  result = sub_1DC4025FC();
  if (result)
  {
    a2[3] = v3;
    a2[4] = (uint64_t)&off_1EA459DD8;
    *a2 = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC121B74(_QWORD *a1)
{
  uint64_t result;
  Class v2;
  id v3;
  uint64_t v4;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB2B060);
  result = sub_1DC402608();
  if (v4)
  {
    sub_1DC12D634();
    v3 = objc_allocWithZone(v2);
    return sub_1DC407F24();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC121C00(_QWORD *a1)
{
  uint64_t result;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC0D8C20();
  result = sub_1DC4025FC();
  if (result)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    type metadata accessor for StockSearchBlueprintViewCellProvider();
    result = sub_1DC4025FC();
    if (result)
    {
      sub_1DC081B48(&qword_1EDB3D340, 255, (uint64_t (*)(uint64_t))type metadata accessor for StockSearchBlueprintViewCellProvider, (uint64_t)&unk_1DC428758);
      sub_1DC08CBF0(0, &qword_1EDB2A8C0, (uint64_t (*)(uint64_t))sub_1DC0D8C20, sub_1DC0D8CC8, MEMORY[0x1E0DBC0E0]);
      swift_allocObject();
      return sub_1DC406724();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1DC121D14@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = type metadata accessor for StockSearchCompositionalLayoutOptionsProvider();
  v3 = swift_allocObject();
  a1[3] = v2;
  result = sub_1DC081B48(&qword_1EDB3ED58, 255, (uint64_t (*)(uint64_t))type metadata accessor for StockSearchCompositionalLayoutOptionsProvider, (uint64_t)&protocol conformance descriptor for StockSearchCompositionalLayoutOptionsProvider);
  a1[4] = result;
  *a1 = v3;
  return result;
}

uint64_t sub_1DC121D84(_QWORD *a1)
{
  uint64_t result;
  Class v3;
  id v4;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4061D8();
  result = sub_1DC4025CC();
  if (result)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1DC12F28C();
    result = sub_1DC4025FC();
    if (result)
    {
      sub_1DC12F33C();
      v4 = objc_allocWithZone(v3);
      return sub_1DC406694();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1DC121E60@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC0AEF08();
  v4 = v3;
  result = sub_1DC4025FC();
  if (result)
  {
    v6 = result;
    a2[3] = v4;
    result = sub_1DC081B48(&qword_1EDB2A2F0, 255, (uint64_t (*)(uint64_t))sub_1DC0AEF08, MEMORY[0x1E0DB9B58]);
    a2[4] = result;
    *a2 = v6;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC121EF0(_QWORD *a1)
{
  uint64_t result;
  Class v3;
  id v4;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC0D8C20();
  result = sub_1DC4025FC();
  if (result)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1DC0AEFF8();
    result = sub_1DC4025FC();
    if (result)
    {
      sub_1DC12FAE4();
      v4 = objc_allocWithZone(v3);
      return sub_1DC40649C();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1DC121FAC(uint64_t a1)
{
  return sub_1DC080C78(a1, (void (*)(_QWORD))MEMORY[0x1E0DBB678], MEMORY[0x1E0DBB670]);
}

uint64_t sub_1DC121FC0(_QWORD *a1)
{
  uint64_t v1;

  return sub_1DC0871C0(a1, (_QWORD *)(v1 + 16));
}

uint64_t sub_1DC121FC8(uint64_t a1)
{
  return sub_1DC080C78(a1, (void (*)(_QWORD))sub_1DC1300C4, MEMORY[0x1E0DBB3E8]);
}

uint64_t sub_1DC121FDC(uint64_t a1)
{
  return sub_1DC080C78(a1, (void (*)(_QWORD))sub_1DC0AEFF8, MEMORY[0x1E0DB9978]);
}

uint64_t sub_1DC121FF0(_QWORD *a1)
{
  uint64_t v1;

  return sub_1DC121FF8(a1, *(_BYTE *)(v1 + 16));
}

uint64_t sub_1DC121FF8(_QWORD *a1, char a2)
{
  uint64_t result;
  uint64_t v5;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  if ((a2 & 1) != 0)
  {
    sub_1DC0AEBAC();
    result = sub_1DC4025FC();
    if (result)
    {
      __swift_project_boxed_opaque_existential_1(a1, a1[3]);
      sub_1DC1311A8();
      result = sub_1DC4025FC();
      if (result)
      {
        __swift_project_boxed_opaque_existential_1(a1, a1[3]);
        sub_1DC096268(0, &qword_1EDB2A940);
        result = sub_1DC402608();
        if (v5)
        {
          sub_1DC131850();
          swift_allocObject();
          return sub_1DC404BC4();
        }
        goto LABEL_12;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  sub_1DC1311A8();
  result = sub_1DC4025FC();
  if (!result)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB2A940);
  result = sub_1DC402608();
  if (!v5)
  {
LABEL_14:
    __break(1u);
    return result;
  }
  sub_1DC131850();
  swift_allocObject();
  return sub_1DC404BB8();
}

uint64_t sub_1DC1221F0(uint64_t a1)
{
  return sub_1DC080C78(a1, (void (*)(_QWORD))sub_1DC0D8C20, MEMORY[0x1E0DB80B0]);
}

uint64_t sub_1DC122204(_QWORD *a1)
{
  return sub_1DC12220C(a1);
}

uint64_t sub_1DC12220C(_QWORD *a1)
{
  uint64_t result;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC0D8C20();
  result = sub_1DC4025FC();
  if (result)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1DC131850();
    result = sub_1DC4025FC();
    if (result)
    {
      sub_1DC131BE0();
      swift_allocObject();
      return sub_1DC4049B4();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1DC1222F4(_QWORD *a1)
{
  uint64_t v1;

  return sub_1DC1222FC(a1, *(_BYTE *)(v1 + 16));
}

uint64_t sub_1DC1222FC(_QWORD *a1, char a2)
{
  uint64_t result;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  if ((a2 & 1) != 0)
  {
    sub_1DC0AEBAC();
    result = sub_1DC4025FC();
    if (result)
    {
      sub_1DC0AEA68();
      swift_allocObject();
      return sub_1DC406604();
    }
    __break(1u);
  }
  else
  {
    sub_1DC0AE7F8();
    result = sub_1DC4025FC();
    if (result)
    {
      sub_1DC0AEA68();
      swift_allocObject();
      return sub_1DC4065F8();
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1DC1223D0()
{
  return sub_1DC4012B8();
}

void sub_1DC1223DC()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  swift_checkMetadataState();
  if (v0 <= 0x3F)
  {
    sub_1DC133A98(319);
    if (v1 <= 0x3F)
    {
      sub_1DC1339CC(319);
      if (v2 <= 0x3F)
        swift_initClassMetadata2();
    }
  }
}

uint64_t type metadata accessor for StockListInteractor(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for StockListInteractor);
}

uint64_t sub_1DC1224E8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(sub_1DC405578() - 8) + 80);
  return sub_1DC122528(v0 + ((v1 + 32) & ~v1));
}

uint64_t sub_1DC122528(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  id *v6;
  int v7;
  uint64_t result;
  _BYTE v10[16];

  v2 = sub_1DC405578();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (id *)&v10[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(id *, uint64_t, uint64_t, __n128))(v3 + 16))(v6, a1, v2, v4);
  v7 = (*(uint64_t (**)(id *, uint64_t))(v3 + 88))(v6, v2);
  if (v7 == *MEMORY[0x1E0DB9A48])
  {
    (*(void (**)(id *, uint64_t))(v3 + 96))(v6, v2);

    sub_1DC3D31D8();
  }
  else
  {
    if (v7 != *MEMORY[0x1E0DB9A40] && v7 != *MEMORY[0x1E0DB9A50])
    {
      result = sub_1DC409838();
      __break(1u);
      return result;
    }
    sub_1DC115560();
  }
  if (qword_1EDB29178 != -1)
    swift_once();
  v10[15] = 0;
  swift_retain();
  sub_1DC402560();
  return swift_release();
}

uint64_t sub_1DC1226D0(uint64_t a1)
{
  _QWORD *v1;

  return sub_1DC0A7D8C(a1, v1[4], v1[2], v1[3]);
}

uint64_t sub_1DC1226DC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int v6;
  unsigned int *v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  unsigned int *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v2 = sub_1DC4061A8();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC4060B8();
  v6 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  if (v6 == *MEMORY[0x1E0DBB5D8])
  {
    v7 = (unsigned int *)MEMORY[0x1E0DACE00];
LABEL_9:
    v9 = *v7;
    v10 = sub_1DC402F5C();
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104);
    v12 = a1;
    v13 = v9;
    return v11(v12, v13, v10);
  }
  if (v6 == *MEMORY[0x1E0DBB5E8] || v6 == *MEMORY[0x1E0DBB5F0])
  {
    v7 = (unsigned int *)MEMORY[0x1E0DACDF0];
    goto LABEL_9;
  }
  if (v6 != *MEMORY[0x1E0DBB5E0])
  {
    v17 = *MEMORY[0x1E0DACDF0];
    v18 = sub_1DC402F5C();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(a1, v17, v18);
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  v15 = sub_1DC4060AC();
  v10 = sub_1DC402F5C();
  v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104);
  if (v15)
    v16 = (unsigned int *)MEMORY[0x1E0DACDD0];
  else
    v16 = (unsigned int *)MEMORY[0x1E0DACE00];
  v13 = *v16;
  v12 = a1;
  return v11(v12, v13, v10);
}

uint64_t sub_1DC122864()
{
  uint64_t v0;
  uint64_t result;

  result = MEMORY[0x1DF0CAD78](v0 + 16);
  if (result)
  {
    sub_1DC11EFAC(result);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1DC1228B0()
{
  return sub_1DC40271C();
}

uint64_t sub_1DC1228D8(uint64_t a1)
{
  uint64_t *v1;

  return sub_1DC082BF4(a1, v1[4], v1[2], v1[3]);
}

uint64_t sub_1DC1228E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v1 = type metadata accessor for EngagementEvent();
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 208)), *(_QWORD *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 208) + 24));
  v4 = *MEMORY[0x1E0DADDE8];
  v5 = sub_1DC403A60();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(v3, v4, v5);
  swift_storeEnumTagMultiPayload();
  sub_1DC087D08((uint64_t)v3);
  return sub_1DC0926D8((uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for EngagementEvent);
}

uint64_t type metadata accessor for PlacardViewRenderer()
{
  return objc_opt_self();
}

unint64_t sub_1DC1229DC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EDB30FC0;
  if (!qword_1EDB30FC0)
  {
    v1 = type metadata accessor for PlacardViewRenderer();
    result = MEMORY[0x1DF0CAB8C](&unk_1DC41CBC4, v1);
    atomic_store(result, (unint64_t *)&qword_1EDB30FC0);
  }
  return result;
}

unint64_t sub_1DC122A20(uint64_t a1)
{
  unint64_t result;

  result = sub_1DC1229DC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for ForYouFeedTestSuite()
{
  return objc_opt_self();
}

ValueMetadata *type metadata accessor for ForYouFeedGroupKind()
{
  return &type metadata for ForYouFeedGroupKind;
}

uint64_t sub_1DC122AB8()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for EmptyListViewStyler()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for CoordinatorAssembly()
{
  return objc_opt_self();
}

uint64_t sub_1DC122B24(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int v7;

  v2 = sub_1DC4010E4();
  if (v3 <= 0x3F)
  {
    sub_1DC089DA4(319, &qword_1EDB28DC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF040], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    if (v5 > 0x3F)
    {
      return v4;
    }
    else
    {
      swift_getTupleTypeLayout3();
      swift_initEnumMetadataSingleCase();
      v2 = 0;
      *(_DWORD *)(*(_QWORD *)(a1 - 8) + 84) = v7;
    }
  }
  return v2;
}

uint64_t type metadata accessor for AudioSessionManager.Session()
{
  return objc_opt_self();
}

unint64_t sub_1DC122C00()
{
  unint64_t result;

  result = qword_1EDB30AC0;
  if (!qword_1EDB30AC0)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC431404, &type metadata for ArticleOfflineModel);
    atomic_store(result, (unint64_t *)&qword_1EDB30AC0);
  }
  return result;
}

uint64_t type metadata accessor for URLHandlerAssembly()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for TickerViewRenderer()
{
  return objc_opt_self();
}

uint64_t sub_1DC122C88(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = sub_1DC081B48(&qword_1EDB309D0, a2, (uint64_t (*)(uint64_t))type metadata accessor for TickerViewRenderer, (uint64_t)&unk_1DC412BC4);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1DC122CC4()
{
  unint64_t result;

  result = qword_1EDB309C8;
  if (!qword_1EDB309C8)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC42A474, &type metadata for TickerOfflineModel);
    atomic_store(result, (unint64_t *)&qword_1EDB309C8);
  }
  return result;
}

uint64_t type metadata accessor for TickerEventHandler()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for StockListTestSuite()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for StockFeedTestSuite()
{
  return objc_opt_self();
}

void sub_1DC122DDC()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  sub_1DC4010E4();
  if (v0 <= 0x3F)
  {
    sub_1DC3FFFEC();
    if (v1 <= 0x3F)
    {
      sub_1DC089DA4(319, &qword_1EDB28AC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      if (v2 <= 0x3F)
      {
        sub_1DC400220();
        if (v3 <= 0x3F)
          swift_initStructMetadata();
      }
    }
  }
}

uint64_t type metadata accessor for StockEarningsModel()
{
  uint64_t result;

  result = qword_1EDB307E0;
  if (!qword_1EDB307E0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t type metadata accessor for StockChartAssembly()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for OnboardingAssembly()
{
  return objc_opt_self();
}

uint64_t sub_1DC122F44()
{
  sub_1DC4026D4();
  sub_1DC096268(0, &qword_1EDB319F8);
  sub_1DC402B3C();
  swift_release();
  swift_release();
  sub_1DC4026E0();
  sub_1DC402B24();
  return swift_release();
}

uint64_t sub_1DC122FD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t *boxed_opaque_existential_1;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v20[5];

  v7 = *(_QWORD *)(*(_QWORD *)v3 + 40);
  v8 = *(_QWORD *)(*(_QWORD *)v3 + 48);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)v3 + 16), v7);
  v9 = *(_QWORD *)(v8 + 8);
  v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 8);
  v20[3] = v7;
  v20[4] = v8;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v20);
  v12 = v10(a1, v7, v9);
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v20[-1] - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t *, uint64_t, __n128))(v16 + 16))(v15, boxed_opaque_existential_1, v7, v13);
  v17 = sub_1DC0A956C((uint64_t)v15, a2, v7, v8);
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  *a3 = v17;
  return result;
}

uint64_t type metadata accessor for ForYouFeedAssembly()
{
  return objc_opt_self();
}

void sub_1DC1230E4(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  _UNKNOWN **v3;
  id v4;

  v2 = *a1;
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for ForYouFeedViewController();
  v4 = (id)sub_1DC4025FC();
  v3 = &off_1EA467F78;
  if (!v4)
    v3 = 0;
  *(_QWORD *)(v2 + 24) = v3;
  swift_unknownObjectWeakAssign();

}

void sub_1DC123164(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  id v3;

  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for ForYouFeedViewController();
  v2 = sub_1DC4025FC();
  if (v2)
  {
    v3 = (id)v2;
    swift_unknownObjectWeakAssign();

  }
  else
  {
    __break(1u);
  }
}

void sub_1DC1231D8(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  _UNKNOWN **v3;
  id v4;

  v2 = *a1;
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for ForYouFeedViewController();
  v4 = (id)sub_1DC4025FC();
  v3 = &off_1EA467F88;
  if (!v4)
    v3 = 0;
  *(_QWORD *)(v2 + 24) = v3;
  swift_unknownObjectWeakAssign();

}

uint64_t sub_1DC123258(uint64_t a1, _QWORD *a2)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, _UNKNOWN **, uint64_t, uint64_t);
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  _BYTE v9[24];
  uint64_t v10;
  uint64_t v11;

  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1DC096268(0, (unint64_t *)&unk_1EDB31850);
  result = sub_1DC402608();
  if (v8)
  {
    sub_1DC097DD0(&v7, (uint64_t)v9);
    v3 = v10;
    v4 = v11;
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v9, v10);
    v5 = *(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v4 + 16);
    v6 = swift_retain();
    v5(v6, &off_1EA469910, v3, v4);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC123324(_QWORD *a1)
{
  uint64_t v1;

  return sub_1DC09B968(a1, (_QWORD *)(v1 + 16));
}

uint64_t sub_1DC123330()
{
  return sub_1DC407684();
}

uint64_t sub_1DC123338(uint64_t a1, _QWORD *a2)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[3];
  uint64_t v6;
  uint64_t v7;

  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1DC096268(0, &qword_1EDB2A7C0);
  result = sub_1DC4025D8();
  v3 = v6;
  if (v6)
  {
    v4 = v7;
    __swift_project_boxed_opaque_existential_1(v5, v6);
    MEMORY[0x1DF0C6E0C](v3, v4);
    sub_1DC40616C();
    swift_release();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC123408(uint64_t a1, _QWORD *a2)
{
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1DC10B428();
  if (sub_1DC4025FC())
    sub_1DC080808(&qword_1EDB2A2C8, (uint64_t (*)(uint64_t))sub_1DC10B428, MEMORY[0x1E0DB9B60]);
  return sub_1DC406130();
}

uint64_t sub_1DC123494()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v0 = sub_1DC4051E8();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (uint64_t *)((char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = sub_1DC4052B4();
  MEMORY[0x1E0C80A78](v4);
  (*(void (**)(char *, _QWORD))(v6 + 104))((char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E0DB9470]);
  sub_1DC405E90();
  *v3 = 0x408EF00000000000;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB93C0], v0);
  return sub_1DC405EB4();
}

uint64_t sub_1DC123588(uint64_t a1, _QWORD *a2)
{
  uint64_t result;

  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1DC10B4F4();
  result = sub_1DC4025FC();
  if (result)
  {
    sub_1DC080808((unint64_t *)&unk_1EDB2A1F0, (uint64_t (*)(uint64_t))sub_1DC10B4F4, MEMORY[0x1E0DB9990]);
    return sub_1DC405AB8();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC12362C(uint64_t a1, _QWORD *a2)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v7[5];

  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1DC10B4F4();
  result = sub_1DC4025FC();
  if (result)
  {
    __swift_project_boxed_opaque_existential_1(a2, a2[3]);
    sub_1DC130F04();
    result = sub_1DC4025FC();
    if (result)
    {
      sub_1DC12F504();
      v5 = v4;
      swift_allocObject();
      v6 = sub_1DC40664C();
      v7[3] = v5;
      v7[4] = sub_1DC080808(&qword_1EDB2A858, (uint64_t (*)(uint64_t))sub_1DC12F504, MEMORY[0x1E0DBBFE8]);
      v7[0] = v6;
      sub_1DC4057B8();
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1DC123748(uint64_t a1, _QWORD *a2)
{
  uint64_t result;

  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1DC130F04();
  result = sub_1DC4025FC();
  if (result)
  {
    sub_1DC405074();
    swift_release();
    return sub_1DC404E04();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC1237C0(uint64_t a1, _QWORD *a2)
{
  uint64_t result;

  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1DC12F81C();
  result = sub_1DC4025FC();
  if (result)
  {
    sub_1DC1309AC();
    swift_allocObject();
    sub_1DC080808(&qword_1EDB2A800, (uint64_t (*)(uint64_t))sub_1DC12F81C, MEMORY[0x1E0DBBFB0]);
    sub_1DC405B3C();
    sub_1DC4049D8();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1DC123888(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  void *v3;
  id v4;

  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1DC1303D0();
  v2 = sub_1DC4025FC();
  if (v2)
  {
    v3 = (void *)v2;
    v4 = (id)sub_1DC405F80();
    sub_1DC12D7F4();
    sub_1DC405D04();

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1DC123918(_QWORD *a1)
{
  uint64_t result;
  void *v2;
  id v3;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC12F920(0, (unint64_t *)&unk_1EDB2A7B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DBB678], MEMORY[0x1E0DBB668], MEMORY[0x1E0DBBD28]);
  result = sub_1DC4025CC();
  if (result)
  {
    v2 = (void *)result;
    v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC35B8]), sel_initWithFrame_collectionViewLayout_, result, 0.0, 0.0, 0.0, 0.0);

    return (uint64_t)v3;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC1239DC(_QWORD *a1)
{
  return sub_1DC08766C(a1);
}

uint64_t sub_1DC1239F0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t *boxed_opaque_existential_1;
  uint64_t (*v11)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16[5];
  _QWORD v17[3];
  uint64_t v18;
  uint64_t v19;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC0995E8(0, (unint64_t *)&qword_1EDB3FAB0);
  result = sub_1DC4025FC();
  if (result)
  {
    v5 = result;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1DC096268(0, (unint64_t *)&unk_1EDB28C90);
    result = sub_1DC402608();
    v6 = v18;
    if (v18)
    {
      v7 = type metadata accessor for ForYouFeedMastheadModelProvider();
      v8 = v19;
      v9 = __swift_project_boxed_opaque_existential_1(v17, v18);
      v16[3] = v6;
      v16[4] = v8;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v16);
      v11 = *(uint64_t (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
      v12 = v11(boxed_opaque_existential_1, v9, v6);
      MEMORY[0x1E0C80A78](v12);
      v14 = (char *)v16 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
      v11((uint64_t *)v14, boxed_opaque_existential_1, v6);
      v15 = sub_1DC117AC8(v5, (uint64_t)v14, v7, v6, v8);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
      result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
      a2[3] = v7;
      a2[4] = (uint64_t)&off_1EA46C748;
      *a2 = v15;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1DC123B8C(_QWORD *a1)
{
  uint64_t result;
  uint64_t v2;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4075DC();
  result = sub_1DC4025FC();
  if (result)
  {
    v2 = result;
    type metadata accessor for ForYouFeedBlueprintCellPrefetcher();
    result = swift_allocObject();
    *(_QWORD *)(result + 16) = v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC123BF8(_QWORD *a1)
{
  uint64_t result;
  uint64_t v2;
  uint64_t v3;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB376B8);
  result = sub_1DC402608();
  if (v2)
  {
    type metadata accessor for ForYouFeedViewCollapsingAnimator();
    swift_allocObject();
    return sub_1DC09D460(v2, v3);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC123C98@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, (unint64_t *)&unk_1EDB2AF10);
  result = sub_1DC402608();
  if (v9)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1DC0995E8(0, &qword_1EDB3F9E0);
    result = sub_1DC4025FC();
    if (result)
    {
      v5 = result;
      v6 = type metadata accessor for ForYouFeedSectionFactory();
      v7 = swift_allocObject();
      result = sub_1DC097DD0(&v8, v7 + 16);
      *(_QWORD *)(v7 + 56) = v5;
      a2[3] = v6;
      a2[4] = (uint64_t)&off_1EA468C28;
      *a2 = v7;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1DC123DA0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC08CBF0(0, &qword_1EDB31838, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedBlueprintModifierFactory, sub_1DC1159C8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ForYouFeedInteractor);
  result = sub_1DC4025FC();
  if (result)
  {
    *a2 = result;
    a2[1] = (uint64_t)&off_1EA45FF78;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC123E20(_QWORD *a1)
{
  return sub_1DC08766C(a1);
}

uint64_t sub_1DC123E34@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC10B428();
  v4 = v3;
  result = sub_1DC4025FC();
  if (result)
  {
    v6 = result;
    a2[3] = v4;
    result = sub_1DC080808((unint64_t *)&unk_1EDB2A2D0, (uint64_t (*)(uint64_t))sub_1DC10B428, MEMORY[0x1E0DB9B58]);
    a2[4] = result;
    *a2 = v6;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC123EC0(_QWORD *a1)
{
  uint64_t result;
  Class v2;
  id v3;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4061D8();
  result = sub_1DC4025CC();
  if (result)
  {
    sub_1DC12F920(0, (unint64_t *)&unk_1EDB2A7B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DBB678], MEMORY[0x1E0DBB668], MEMORY[0x1E0DBBD28]);
    v3 = objc_allocWithZone(v2);
    return sub_1DC406568();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC123F6C(uint64_t a1)
{
  return sub_1DC080C78(a1, sub_1DC12FA50, MEMORY[0x1E0DBBC40]);
}

uint64_t sub_1DC123F80(_QWORD *a1)
{
  uint64_t result;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC12FA50(0);
  result = sub_1DC4025FC();
  if (result)
  {
    sub_1DC089DA4(0, &qword_1EDB2A748, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedModel, MEMORY[0x1E0DBBA68]);
    swift_allocObject();
    return sub_1DC406364();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC12400C(_QWORD *a1)
{
  uint64_t result;
  Class v3;
  id v4;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC0C5214();
  result = sub_1DC4025FC();
  if (result)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1DC10B4F4();
    result = sub_1DC4025FC();
    if (result)
    {
      sub_1DC12FD4C();
      v4 = objc_allocWithZone(v3);
      return sub_1DC4062C8();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1DC1240CC(_QWORD *a1)
{
  uint64_t result;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC130F04();
  result = sub_1DC4025FC();
  if (result)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1DC12FA50(0);
    result = sub_1DC4025FC();
    if (result)
    {
      sub_1DC10B3A0();
      swift_allocObject();
      return sub_1DC406124();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1DC1241A8(uint64_t a1)
{
  return sub_1DC080C78(a1, (void (*)(_QWORD))sub_1DC130194, MEMORY[0x1E0DBB3E8]);
}

uint64_t sub_1DC1241BC(_QWORD *a1)
{
  uint64_t result;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC130F04();
  result = sub_1DC4025FC();
  if (result)
  {
    sub_1DC08CBF0(0, (unint64_t *)&unk_1EDB2A330, (uint64_t (*)(uint64_t))sub_1DC130F04, sub_1DC131048, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB9DC0]);
    swift_allocObject();
    return sub_1DC4057AC();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC124250@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  objc_class *v4;
  id v5;
  uint64_t v6;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3F8A0);
  result = sub_1DC4025CC();
  if (result)
  {
    v4 = (objc_class *)sub_1DC404EB8();
    v5 = objc_allocWithZone(v4);
    result = sub_1DC404EAC();
    v6 = MEMORY[0x1E0DB8B60];
    a2[3] = (uint64_t)v4;
    a2[4] = v6;
    *a2 = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC124304(uint64_t a1)
{
  return sub_1DC080C78(a1, (void (*)(_QWORD))sub_1DC10B4F4, MEMORY[0x1E0DB9978]);
}

uint64_t sub_1DC124318(_QWORD *a1)
{
  uint64_t result;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC10B4F4();
  result = sub_1DC4025FC();
  if (result)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    type metadata accessor for ForYouFeedBlueprintCellPrefetcher();
    result = sub_1DC4025FC();
    if (result)
    {
      sub_1DC13167C();
      swift_allocObject();
      return sub_1DC404DF8();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1DC1243DC(_QWORD *a1)
{
  uint64_t result;
  uint64_t v3;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC130F04();
  result = sub_1DC4025FC();
  if (!result)
  {
    __break(1u);
    goto LABEL_6;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB2A940);
  result = sub_1DC402608();
  if (!v3)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC08CBF0(0, (unint64_t *)&unk_1EDB2A330, (uint64_t (*)(uint64_t))sub_1DC130F04, sub_1DC131048, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB9DC0]);
  result = sub_1DC4025FC();
  if (result)
  {
    sub_1DC130A90();
    sub_1DC131940();
    swift_allocObject();
    return sub_1DC404BB8();
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1DC124538(uint64_t a1)
{
  return sub_1DC080C78(a1, (void (*)(_QWORD))sub_1DC0C5214, MEMORY[0x1E0DB80B0]);
}

uint64_t sub_1DC12454C(_QWORD *a1)
{
  uint64_t result;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC0C5214();
  result = sub_1DC4025FC();
  if (result)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1DC131940();
    result = sub_1DC4025FC();
    if (result)
    {
      sub_1DC131C90();
      swift_allocObject();
      return sub_1DC4049C0();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1DC124628(uint64_t a1)
{
  return sub_1DC080C78(a1, (void (*)(_QWORD))sub_1DC10D720, MEMORY[0x1E0DB8F58]);
}

uint64_t type metadata accessor for EngagementAssembly()
{
  return objc_opt_self();
}

uint64_t sub_1DC124660@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = type metadata accessor for AppReviewRequestStore();
  v3 = swift_allocObject();
  sub_1DC10D7E8(0, (unint64_t *)&unk_1EDB29630, qword_1EDB325F8, (uint64_t)&type metadata for AppReviewRequestState);
  swift_allocObject();
  result = sub_1DC402C8C();
  *(_QWORD *)(v3 + 16) = result;
  a1[3] = v2;
  a1[4] = (uint64_t)&off_1EA453A60;
  *a1 = v3;
  return result;
}

uint64_t sub_1DC124704@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = type metadata accessor for EngagementUpsellBannerPropertiesProvider();
  v3 = swift_allocObject();
  a1[3] = v2;
  result = sub_1DC080808(&qword_1EDB3E148, (uint64_t (*)(uint64_t))type metadata accessor for EngagementUpsellBannerPropertiesProvider, (uint64_t)&unk_1DC42CEAC);
  a1[4] = result;
  *a1 = v3;
  return result;
}

uint64_t sub_1DC124770@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  type metadata accessor for EngagementFeatureSettings();
  v2 = swift_allocObject();
  *(_DWORD *)(v2 + 16) = 0x10000;
  result = sub_1DC080808(&qword_1EDB36190, (uint64_t (*)(uint64_t))type metadata accessor for EngagementFeatureSettings, (uint64_t)&unk_1DC42CEE4);
  *a1 = v2;
  a1[1] = result;
  return result;
}

uint64_t sub_1DC1247DC()
{
  uint64_t result;

  result = qword_1EDB303E0;
  if (!qword_1EDB303E0)
  {
    sub_1DC11E498();
    sub_1DC11E454();
    type metadata accessor for DualOfflineManager();
  }
  return result;
}

uint64_t sub_1DC124854()
{
  return swift_initClassMetadata2();
}

void type metadata accessor for DualOfflineManager()
{
  JUMPOUT(0x1DF0CAAE4);
}

uint64_t type metadata accessor for DataRefreshManager()
{
  return objc_opt_self();
}

void sub_1DC1248C8()
{
  unint64_t v0;

  sub_1DC13244C();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t type metadata accessor for CampaignRouteModel()
{
  uint64_t result;

  result = qword_1EDB30210;
  if (!qword_1EDB30210)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t type metadata accessor for TodayViewRenderer()
{
  return objc_opt_self();
}

unint64_t sub_1DC1249C0(uint64_t a1)
{
  unint64_t result;

  result = sub_1DC3E20EC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1DC1249E4(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  int v4;

  result = type metadata accessor for StockViewModel();
  if (v3 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    swift_initEnumMetadataSingleCase();
    result = 0;
    *(_DWORD *)(*(_QWORD *)(a1 - 8) + 84) = v4;
  }
  return result;
}

uint64_t sub_1DC124A5C()
{
  return sub_1DC080808(&qword_1EDB2FE70, (uint64_t (*)(uint64_t))type metadata accessor for TickerLayoutModel, (uint64_t)&unk_1DC431518);
}

uint64_t sub_1DC124A78()
{
  return sub_1DC081B48(&qword_1EDB2FE68, 255, (uint64_t (*)(uint64_t))type metadata accessor for TickerLayoutModel, (uint64_t)&unk_1DC4314E0);
}

uint64_t sub_1DC124A98()
{
  return sub_1DC0F89FC(&qword_1EDB2FE68, (uint64_t)&unk_1DC4314E0);
}

uint64_t sub_1DC124ABC(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = sub_1DC081B48(&qword_1EDB2FCC8, a2, (uint64_t (*)(uint64_t))type metadata accessor for StockViewRenderer, (uint64_t)&unk_1DC410EE0);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

_QWORD *sub_1DC124AF8(uint64_t a1, uint64_t a2, __int128 *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v22[3];
  uint64_t v23;
  _UNKNOWN **v24;
  _QWORD v25[5];

  v6 = type metadata accessor for StockViewStyler();
  v25[3] = v6;
  v25[4] = &off_1EA4530B0;
  v25[0] = a1;
  v7 = type metadata accessor for StockSparklineViewRenderer();
  v23 = v7;
  v24 = &off_1EA46A468;
  v22[0] = a2;
  type metadata accessor for StockViewRenderer();
  v8 = (_QWORD *)swift_allocObject();
  v9 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v25, v6);
  v10 = MEMORY[0x1E0C80A78](v9);
  v12 = (_QWORD *)((char *)v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v13 + 16))(v12, v10);
  v14 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v22, v23);
  v15 = MEMORY[0x1E0C80A78](v14);
  v17 = (_QWORD *)((char *)v22 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v18 + 16))(v17, v15);
  v19 = *v12;
  v20 = *v17;
  v8[5] = v6;
  v8[6] = &off_1EA4530B0;
  v8[2] = v19;
  v8[10] = v7;
  v8[11] = &off_1EA46A468;
  v8[7] = v20;
  v8[17] = MEMORY[0x1E0DEE9E0];
  sub_1DC097DD0(a3, (uint64_t)(v8 + 12));
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  return v8;
}

uint64_t sub_1DC124C74()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for StockViewModel();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for StockSearchStyler()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for StockSearchRouter()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for StockSearchModule()
{
  return objc_opt_self();
}

void sub_1DC124DA0(UISearchController *a1@<X8>)
{
  StockSearchModule.createSearchController()(a1);
}

uint64_t sub_1DC124DC0(_QWORD *a1)
{
  return sub_1DC095808(a1);
}

uint64_t type metadata accessor for StockListRenderer()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for StockListAssembly()
{
  return objc_opt_self();
}

uint64_t sub_1DC124E08(uint64_t a1, _QWORD *a2)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, _UNKNOWN **, uint64_t, uint64_t);
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  _BYTE v9[24];
  uint64_t v10;
  uint64_t v11;

  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1DC096268(0, &qword_1EDB31398);
  result = sub_1DC402608();
  if (v8)
  {
    sub_1DC097DD0(&v7, (uint64_t)v9);
    v3 = v10;
    v4 = v11;
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v9, v10);
    v5 = *(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v4 + 16);
    v6 = swift_retain();
    v5(v6, &off_1EA464388, v3, v4);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC124ED4(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t result;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  _QWORD v15[4];

  v2 = type metadata accessor for StockListSelectionModel();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v13 - v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, (unint64_t *)&unk_1EDB28C90);
  result = sub_1DC402608();
  if (v14)
  {
    sub_1DC097DD0(&v13, (uint64_t)v15);
    __swift_project_boxed_opaque_existential_1(v15, v15[3]);
    v9 = sub_1DC400C1C();
    v10 = sub_1DC4010E4();
    if ((v9 & 1) != 0)
      v11 = 2;
    else
      v11 = 1;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v7, v11, 2, v10);
    sub_1DC0990BC((uint64_t)v7, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for StockListSelectionModel);
    sub_1DC089DA4(0, (unint64_t *)&qword_1EDB29460, (uint64_t (*)(uint64_t))type metadata accessor for StockListSelectionModel, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB3938]);
    swift_allocObject();
    v12 = sub_1DC402734();
    sub_1DC0926D8((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for StockListSelectionModel);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
    return v12;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC12506C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_1DC125074((_QWORD *)(v1 + 16), a1);
}

uint64_t sub_1DC125074@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  _QWORD v6[3];
  uint64_t v7;
  uint64_t v8;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB33570);
  result = sub_1DC402608();
  v4 = v7;
  if (v7)
  {
    v5 = v8;
    __swift_project_boxed_opaque_existential_1(v6, v7);
    *a2 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v4, v5);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC12511C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[5];
  _BYTE v20[24];
  uint64_t v21;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB313A0);
  result = sub_1DC402608();
  if (v21)
  {
    v4 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v20, v21);
    v5 = MEMORY[0x1E0C80A78](v4);
    v7 = (_QWORD *)((char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v8 + 16))(v7, v5);
    v9 = *v7;
    v10 = type metadata accessor for StockListStyler();
    v19[3] = v10;
    v19[4] = &off_1EA46DE80;
    v19[0] = v9;
    v11 = type metadata accessor for StockListRenderer();
    v12 = (_QWORD *)swift_allocObject();
    v13 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v19, v10);
    v14 = MEMORY[0x1E0C80A78](v13);
    v16 = (_QWORD *)((char *)v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v17 + 16))(v16, v14);
    v18 = *v16;
    v12[5] = v10;
    v12[6] = &off_1EA46DE80;
    v12[2] = v18;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
    result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
    a2[3] = v11;
    a2[4] = &off_1EA451348;
    *a2 = v12;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC1252B4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v14[24];
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB30AB8);
  result = sub_1DC402608();
  if (v18)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1DC096268(0, qword_1EDB2D2F0);
    result = sub_1DC402608();
    v5 = v15;
    if (v15)
    {
      v6 = type metadata accessor for StockListStyler();
      v7 = v16;
      v8 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v14, v15);
      v9 = MEMORY[0x1E0C80A78](v8);
      v11 = &v14[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
      (*(void (**)(_BYTE *, __n128))(v12 + 16))(v11, v9);
      v13 = sub_1DC0D2E30(&v17, (uint64_t)v11, v6, v5, v7);
      result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
      a2[3] = v6;
      a2[4] = (uint64_t)&off_1EA46DE80;
      *a2 = v13;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1DC125420(uint64_t a1)
{
  return sub_1DC080C78(a1, (void (*)(_QWORD))sub_1DC13143C, MEMORY[0x1E0DB8F58]);
}

uint64_t sub_1DC125434()
{
  return sub_1DC0D58B8();
}

uint64_t type metadata accessor for StockFeedAssembly()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for SectionHeaderView()
{
  return objc_opt_self();
}

uint64_t sub_1DC125494(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for SectionHeaderView();
    result = MEMORY[0x1DF0CAB8C](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DC1254D0()
{
  return sub_1DC125494(&qword_1EDB2F870, (uint64_t)&unk_1DC40E6B4);
}

uint64_t type metadata accessor for PlacardViewStyler()
{
  return objc_opt_self();
}

void sub_1DC125514()
{
  unint64_t v0;

  sub_1DC1324E8(319);
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t type metadata accessor for ForYouFeedTracker()
{
  uint64_t result;

  result = qword_1EDB2F6B0;
  if (!qword_1EDB2F6B0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1DC1255F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  unsigned int *v18;
  uint64_t v21;
  uint64_t (*v22)(uint64_t, uint64_t, uint64_t);
  uint64_t v23;
  _BYTE v24[24];

  v4 = sub_1DC4061A8();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = &v24[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1DC1324E8(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = &v24[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v11);
  v13 = &v24[-v12];
  v14 = a1 + OBJC_IVAR____TtC8StocksUI17ForYouFeedTracker_onDeckViewAction;
  swift_beginAccess();
  sub_1DC0990BC(v14, (uint64_t)v13, (uint64_t (*)(_QWORD))sub_1DC1324E8);
  v15 = sub_1DC402F5C();
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v16 + 48))(v13, 1, v15) != 1)
  {
    (*(void (**)(uint64_t, _BYTE *, uint64_t))(v16 + 32))(a2, v13, v15);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v10, 1, 1, v15);
    swift_beginAccess();
    sub_1DC2DBAD4((uint64_t)v10, v14);
    return swift_endAccess();
  }
  sub_1DC0926D8((uint64_t)v13, (uint64_t (*)(_QWORD))sub_1DC1324E8);
  sub_1DC4060B8();
  v17 = (*(uint64_t (**)(_BYTE *, uint64_t))(v5 + 88))(v7, v4);
  if (v17 == *MEMORY[0x1E0DBB5D8])
  {
    v18 = (unsigned int *)MEMORY[0x1E0DACE00];
LABEL_11:
    v21 = *v18;
    v22 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 104);
    return v22(a2, v21, v15);
  }
  if (v17 == *MEMORY[0x1E0DBB5E8] || v17 == *MEMORY[0x1E0DBB5F0])
  {
    v18 = (unsigned int *)MEMORY[0x1E0DACDF0];
    goto LABEL_11;
  }
  if (v17 != *MEMORY[0x1E0DBB5E0])
  {
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v16 + 104))(a2, *MEMORY[0x1E0DACDF0], v15);
    return (*(uint64_t (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
  }
  v23 = sub_1DC4060AC();
  v22 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 104);
  if (v23)
    v21 = *MEMORY[0x1E0DACDD0];
  else
    v21 = *MEMORY[0x1E0DACE00];
  return v22(a2, v21, v15);
}

uint64_t dispatch thunk of DynamicStylerType.dynamic(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t type metadata accessor for BootstrapAssembly()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for AudioTrackFactory()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for TickerViewStyler()
{
  return objc_opt_self();
}

uint64_t sub_1DC1258E8()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for TickerInteractor(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for TickerInteractor);
}

uint64_t sub_1DC1259A0(uint64_t a1)
{
  _QWORD *v1;

  return sub_1DC081CE0(a1, v1[4], v1[2], v1[3]);
}

unint64_t sub_1DC1259AC()
{
  unint64_t result;

  result = qword_1EDB2F3E0[0];
  if (!qword_1EDB2F3E0[0])
  {
    result = MEMORY[0x1DF0CAB8C](&protocol conformance descriptor for SymbolAutomation, &type metadata for SymbolAutomation);
    atomic_store(result, qword_1EDB2F3E0);
  }
  return result;
}

unint64_t sub_1DC1259F0()
{
  unint64_t result;

  result = qword_1EDB2F3D8;
  if (!qword_1EDB2F3D8)
  {
    result = MEMORY[0x1DF0CAB8C](&protocol conformance descriptor for SymbolAutomation, &type metadata for SymbolAutomation);
    atomic_store(result, (unint64_t *)&qword_1EDB2F3D8);
  }
  return result;
}

unint64_t sub_1DC125A34()
{
  unint64_t result;

  result = qword_1EDB2F3D0;
  if (!qword_1EDB2F3D0)
  {
    result = MEMORY[0x1DF0CAB8C](&protocol conformance descriptor for SymbolAutomation, &type metadata for SymbolAutomation);
    atomic_store(result, (unint64_t *)&qword_1EDB2F3D0);
  }
  return result;
}

uint64_t sub_1DC125A80()
{
  return sub_1DC10C774(&qword_1EDB2F320, (uint64_t)&unk_1DC42E0C4);
}

uint64_t sub_1DC125AA4()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  _QWORD v3[6];

  result = type metadata accessor for StockViewModel();
  if (v1 <= 0x3F)
  {
    v3[4] = *(_QWORD *)(result - 8) + 64;
    result = sub_1DC40124C();
    if (v2 <= 0x3F)
    {
      swift_getTupleTypeLayout2();
      v3[5] = v3;
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t sub_1DC125B3C()
{
  return sub_1DC081B48(&qword_1EDB2F300, 255, (uint64_t (*)(uint64_t))type metadata accessor for StockSearchModel, (uint64_t)&unk_1DC42E184);
}

uint64_t sub_1DC125B5C()
{
  return sub_1DC10C774(&qword_1EDB2F308, (uint64_t)&unk_1DC42E12C);
}

uint64_t sub_1DC125B80()
{
  return sub_1DC10C774(&qword_1EDB2F318, (uint64_t)&unk_1DC42E0EC);
}

uint64_t sub_1DC125BA4()
{
  return sub_1DC10C774(&qword_1EDB2F2F8, (uint64_t)&unk_1DC42E2CC);
}

uint64_t sub_1DC125BC8()
{
  return sub_1DC10C774(&qword_1EDB2F310, (uint64_t)&unk_1DC42E154);
}

uint64_t type metadata accessor for RendererAssembly()
{
  return objc_opt_self();
}

uint64_t sub_1DC125C0C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[5];
  _BYTE v20[24];
  uint64_t v21;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB3B468);
  result = sub_1DC402608();
  if (v21)
  {
    v4 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v20, v21);
    v5 = MEMORY[0x1E0C80A78](v4);
    v7 = (_QWORD *)((char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v8 + 16))(v7, v5);
    v9 = *v7;
    v10 = type metadata accessor for StockSectionFooterViewStyler();
    v19[3] = v10;
    v19[4] = &off_1EA451700;
    v19[0] = v9;
    v11 = type metadata accessor for StockSectionFooterViewLayoutAttributesFactory();
    v12 = (_QWORD *)swift_allocObject();
    v13 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v19, v10);
    v14 = MEMORY[0x1E0C80A78](v13);
    v16 = (_QWORD *)((char *)v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v17 + 16))(v16, v14);
    v18 = *v16;
    v12[5] = v10;
    v12[6] = &off_1EA451700;
    v12[2] = v18;
    v12[7] = MEMORY[0x1E0DEE9E0];
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
    result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
    a2[3] = v11;
    a2[4] = &off_1EA455D20;
    *a2 = v12;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC125DB0@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[5];
  _BYTE v20[24];
  uint64_t v21;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB37770);
  result = sub_1DC402608();
  if (v21)
  {
    v4 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v20, v21);
    v5 = MEMORY[0x1E0C80A78](v4);
    v7 = (_QWORD *)((char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v8 + 16))(v7, v5);
    v9 = *v7;
    v10 = type metadata accessor for SectionHeaderViewStyler();
    v19[3] = v10;
    v19[4] = &off_1EA457D98;
    v19[0] = v9;
    v11 = type metadata accessor for SectionHeaderViewLayoutAttributesFactory();
    v12 = (_QWORD *)swift_allocObject();
    v13 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v19, v10);
    v14 = MEMORY[0x1E0C80A78](v13);
    v16 = (_QWORD *)((char *)v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v17 + 16))(v16, v14);
    v18 = *v16;
    v12[5] = v10;
    v12[6] = &off_1EA457D98;
    v12[2] = v18;
    v12[7] = MEMORY[0x1E0DEE9E0];
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
    result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
    a2[3] = v11;
    a2[4] = &off_1EA46AE90;
    *a2 = v12;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC125F54@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[5];
  _BYTE v20[24];
  uint64_t v21;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB36D30);
  result = sub_1DC402608();
  if (v21)
  {
    v4 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v20, v21);
    v5 = MEMORY[0x1E0C80A78](v4);
    v7 = (_QWORD *)((char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v8 + 16))(v7, v5);
    v9 = *v7;
    v10 = type metadata accessor for QuoteSummaryViewStyler();
    v19[3] = v10;
    v19[4] = &off_1EA45CD78;
    v19[0] = v9;
    v11 = type metadata accessor for QuoteSummaryViewLayoutAttributesFactory();
    v12 = (_QWORD *)swift_allocObject();
    v13 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v19, v10);
    v14 = MEMORY[0x1E0C80A78](v13);
    v16 = (_QWORD *)((char *)v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v17 + 16))(v16, v14);
    v18 = *v16;
    v12[5] = v10;
    v12[6] = &off_1EA45CD78;
    v12[2] = v18;
    v12[7] = MEMORY[0x1E0DEE9E0];
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
    result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
    a2[3] = v11;
    a2[4] = &off_1EA4523A8;
    *a2 = v12;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC1260F8@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[5];
  _BYTE v20[24];
  uint64_t v21;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB32D80);
  result = sub_1DC402608();
  if (v21)
  {
    v4 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v20, v21);
    v5 = MEMORY[0x1E0C80A78](v4);
    v7 = (_QWORD *)((char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v8 + 16))(v7, v5);
    v9 = *v7;
    v10 = type metadata accessor for PlacardViewStyler();
    v19[3] = v10;
    v19[4] = &off_1EA45F278;
    v19[0] = v9;
    v11 = type metadata accessor for PlacardViewLayoutAttributesFactory();
    v12 = (_QWORD *)swift_allocObject();
    v13 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v19, v10);
    v14 = MEMORY[0x1E0C80A78](v13);
    v16 = (_QWORD *)((char *)v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v17 + 16))(v16, v14);
    v18 = *v16;
    v12[5] = v10;
    v12[6] = &off_1EA45F278;
    v12[2] = v18;
    v12[7] = MEMORY[0x1E0DEE9E0];
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
    result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
    a2[3] = v11;
    a2[4] = &off_1EA467ED8;
    *a2 = v12;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC12629C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1DC08AE10(a1, (uint64_t (*)(_QWORD))type metadata accessor for StockSectionFooterViewStyler, (uint64_t (*)(_BYTE *, uint64_t, uint64_t, uint64_t))sub_1DC0A3134, (uint64_t)&off_1EA451700, a2);
}

uint64_t sub_1DC1262B8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1DC09D6D8(a1, (uint64_t (*)(_QWORD))type metadata accessor for SectionHeaderViewStyler, (uint64_t (*)(char *, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1DC10F4FC, (uint64_t)&off_1EA457D98, a2);
}

uint64_t sub_1DC1262D4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1DC09D6D8(a1, (uint64_t (*)(_QWORD))type metadata accessor for QuoteSummaryViewStyler, (uint64_t (*)(char *, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1DC10F4FC, (uint64_t)&off_1EA45CD78, a2);
}

uint64_t sub_1DC1262F0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1DC09D6D8(a1, (uint64_t (*)(_QWORD))type metadata accessor for StockTitleViewStyler, (uint64_t (*)(char *, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1DC10F4FC, (uint64_t)&off_1EA45A4E0, a2);
}

uint64_t sub_1DC12630C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1DC08AE10(a1, (uint64_t (*)(_QWORD))type metadata accessor for PlacardViewStyler, (uint64_t (*)(_BYTE *, uint64_t, uint64_t, uint64_t))sub_1DC0A3134, (uint64_t)&off_1EA45F278, a2);
}

uint64_t sub_1DC126328@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  _BYTE *v11;
  _QWORD *v12;
  _BYTE v14[24];
  uint64_t v15;
  uint64_t v16;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, qword_1EDB2D2F0);
  result = sub_1DC402608();
  v4 = v15;
  if (v15)
  {
    v5 = type metadata accessor for StockViewStyler();
    v6 = v16;
    v7 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v14, v15);
    v8 = *(_QWORD *)(v4 - 8);
    v9 = MEMORY[0x1E0C80A78](v7);
    v11 = &v14[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
    (*(void (**)(_BYTE *, __n128))(v8 + 16))(v11, v9);
    v12 = sub_1DC10EEE8((uint64_t)v11, v5, v4, v6);
    (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v11, v4);
    result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
    a2[3] = v5;
    a2[4] = &off_1EA4530B0;
    *a2 = v12;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC126454@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  __int128 v5;
  uint64_t v6;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, qword_1EDB2D2F0);
  result = sub_1DC402608();
  if (v6)
  {
    a2[3] = (uint64_t)&type metadata for AddButtonStyler;
    a2[4] = (uint64_t)&off_1EA456088;
    v4 = swift_allocObject();
    *a2 = v4;
    return sub_1DC097DD0(&v5, v4 + 16);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC126504@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  _UNKNOWN **v21;
  _QWORD v22[5];
  _BYTE v23[24];
  uint64_t v24;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB3B468);
  result = sub_1DC402608();
  if (v24)
  {
    v4 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v23, v24);
    v5 = MEMORY[0x1E0C80A78](v4);
    v7 = (uint64_t *)((char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v8 + 16))(v7, v5);
    v9 = *v7;
    v10 = type metadata accessor for StockSectionFooterViewStyler();
    v22[3] = v10;
    v22[4] = &off_1EA451700;
    v22[0] = v9;
    type metadata accessor for StockSectionFooterViewRenderer();
    v11 = swift_allocObject();
    v12 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v22, v10);
    v13 = MEMORY[0x1E0C80A78](v12);
    v15 = (uint64_t *)((char *)&v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v16 + 16))(v15, v13);
    v17 = *v15;
    v20 = v10;
    v21 = &off_1EA451700;
    *(_QWORD *)&v19 = v17;
    sub_1DC097DD0(&v19, v11 + 16);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
    result = sub_1DC080808(&qword_1EDB39FC8, (uint64_t (*)(uint64_t))type metadata accessor for StockSectionFooterViewRenderer, (uint64_t)&unk_1DC42E6E8);
    *a2 = v11;
    a2[1] = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC1266B8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  _UNKNOWN **v21;
  _QWORD v22[5];
  _BYTE v23[24];
  uint64_t v24;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB37770);
  result = sub_1DC402608();
  if (v24)
  {
    v4 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v23, v24);
    v5 = MEMORY[0x1E0C80A78](v4);
    v7 = (uint64_t *)((char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v8 + 16))(v7, v5);
    v9 = *v7;
    v10 = type metadata accessor for SectionHeaderViewStyler();
    v22[3] = v10;
    v22[4] = &off_1EA457D98;
    v22[0] = v9;
    type metadata accessor for SectionHeaderViewRenderer();
    v11 = swift_allocObject();
    v12 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v22, v10);
    v13 = MEMORY[0x1E0C80A78](v12);
    v15 = (uint64_t *)((char *)&v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v16 + 16))(v15, v13);
    v17 = *v15;
    v20 = v10;
    v21 = &off_1EA457D98;
    *(_QWORD *)&v19 = v17;
    sub_1DC097DD0(&v19, v11 + 16);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
    result = sub_1DC080808(&qword_1EDB364B8, (uint64_t (*)(uint64_t))type metadata accessor for SectionHeaderViewRenderer, (uint64_t)&unk_1DC4294E4);
    *a2 = v11;
    a2[1] = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC12686C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  _UNKNOWN **v21;
  _QWORD v22[5];
  _BYTE v23[24];
  uint64_t v24;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB36D30);
  result = sub_1DC402608();
  if (v24)
  {
    v4 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v23, v24);
    v5 = MEMORY[0x1E0C80A78](v4);
    v7 = (uint64_t *)((char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v8 + 16))(v7, v5);
    v9 = *v7;
    v10 = type metadata accessor for QuoteSummaryViewStyler();
    v22[3] = v10;
    v22[4] = &off_1EA45CD78;
    v22[0] = v9;
    type metadata accessor for QuoteSummaryViewRenderer();
    v11 = swift_allocObject();
    v12 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v22, v10);
    v13 = MEMORY[0x1E0C80A78](v12);
    v15 = (uint64_t *)((char *)&v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v16 + 16))(v15, v13);
    v17 = *v15;
    v20 = v10;
    v21 = &off_1EA45CD78;
    *(_QWORD *)&v19 = v17;
    sub_1DC097DD0(&v19, v11 + 16);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
    result = sub_1DC080808(&qword_1EDB35AA8, (uint64_t (*)(uint64_t))type metadata accessor for QuoteSummaryViewRenderer, (uint64_t)&unk_1DC4246B4);
    *a2 = v11;
    a2[1] = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC126A20@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  _UNKNOWN **v21;
  _QWORD v22[5];
  _BYTE v23[24];
  uint64_t v24;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB32D80);
  result = sub_1DC402608();
  if (v24)
  {
    v4 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v23, v24);
    v5 = MEMORY[0x1E0C80A78](v4);
    v7 = (uint64_t *)((char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v8 + 16))(v7, v5);
    v9 = *v7;
    v10 = type metadata accessor for PlacardViewStyler();
    v22[3] = v10;
    v22[4] = &off_1EA45F278;
    v22[0] = v9;
    type metadata accessor for PlacardViewRenderer();
    v11 = swift_allocObject();
    v12 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v22, v10);
    v13 = MEMORY[0x1E0C80A78](v12);
    v15 = (uint64_t *)((char *)&v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v16 + 16))(v15, v13);
    v17 = *v15;
    v20 = v10;
    v21 = &off_1EA45F278;
    *(_QWORD *)&v19 = v17;
    sub_1DC097DD0(&v19, v11 + 16);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
    result = sub_1DC080808(&qword_1EDB30FC8, (uint64_t (*)(uint64_t))type metadata accessor for PlacardViewRenderer, (uint64_t)&unk_1DC41CBEC);
    *a2 = v11;
    a2[1] = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC126BD4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;

  v2 = sub_1DC4050C8();
  swift_allocObject();
  result = sub_1DC4050BC();
  v4 = MEMORY[0x1E0DB9050];
  a1[3] = v2;
  a1[4] = v4;
  *a1 = result;
  return result;
}

uint64_t sub_1DC126C28@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1DC0851D8(a1, a2);
}

uint64_t type metadata accessor for ProviderAssembly()
{
  return objc_opt_self();
}

uint64_t sub_1DC126C6C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (_QWORD *)(*(_QWORD *)v0 + 16);
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 40);
  v3 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v3 + 16) + 24) + 8))(v2);
}

uint64_t type metadata accessor for ForYouFeedRouter()
{
  return objc_opt_self();
}

uint64_t sub_1DC126CD0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(*(_QWORD *)v2 + 32) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

uint64_t type metadata accessor for ForYouFeedModule()
{
  return objc_opt_self();
}

uint64_t sub_1DC126D24@<X0>(uint64_t (*a1)(void)@<X1>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v5 = a1();
    result = swift_release();
    *a2 = v5;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC126D94@<X0>(uint64_t *a1@<X8>)
{
  return sub_1DC126D24((uint64_t (*)(void))sub_1DC126E64, a1);
}

id sub_1DC126DB4@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  _QWORD v12[5];

  v3 = (void *)v1[18];
  if (v3)
  {
    v4 = v1[21];
    v5 = v1[22];
    v6 = (id)v1[18];
    v7 = v1[19];
    v8 = v1[20];
  }
  else
  {
    sub_1DC0B5458((uint64_t)v1, v12);
    v9 = (void *)v12[0];
    v7 = v12[1];
    v8 = v12[2];
    v4 = v12[3];
    v5 = v12[4];
    v10 = (void *)v1[18];
    v1[18] = v12[0];
    v1[19] = v7;
    v1[20] = v8;
    v1[21] = v4;
    v1[22] = v5;
    v6 = v9;

    v3 = 0;
  }
  *a1 = v6;
  a1[1] = v7;
  a1[2] = v8;
  a1[3] = v4;
  a1[4] = v5;
  return v3;
}

uint64_t sub_1DC126E4C(_QWORD *a1)
{
  uint64_t v1;

  return sub_1DC0B4E58(a1, *(_QWORD *)(v1 + 16));
}

id sub_1DC126E64()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  void *v4;
  id v5;

  v1 = *(void **)(v0 + 192);
  if (v1)
  {
    v2 = *(id *)(v0 + 192);
  }
  else
  {
    v3 = (void *)sub_1DC0B5120(v0);
    v4 = *(void **)(v0 + 192);
    *(_QWORD *)(v0 + 192) = v3;
    v2 = v3;

    v1 = 0;
  }
  v5 = v1;
  return v2;
}

void sub_1DC126EBC()
{
  unint64_t v0;

  sub_1DC0BB2BC(319);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_1DC126F34()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1DC126F3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1DC0BB31C(v2 + *(int *)(a1 + 20), a2);
}

uint64_t sub_1DC126F4C()
{
  return sub_1DC080808(&qword_1EDB328D0, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedGroupConfig, (uint64_t)&unk_1DC425E8C);
}

uint64_t sub_1DC126F80(uint64_t a1)
{
  return sub_1DC09BD28(a1, 0x6665526563697250, 0xEC00000068736572, &qword_1EDB2EC80);
}

uint64_t type metadata accessor for WelcomeAssembly()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for ToolbarAssembly()
{
  return objc_opt_self();
}

uint64_t sub_1DC126FE8()
{
  return sub_1DC4046CC();
}

uint64_t sub_1DC126FF8()
{
  sub_1DC4046D8();
  sub_1DC402B3C();
  return swift_release();
}

uint64_t sub_1DC127038@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_1DC1320AC();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC131790(0, (unint64_t *)&qword_1EDB29EE0);
  result = sub_1DC402608();
  if (v10)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    v8 = sub_1DC4046D8();
    sub_1DC402608();
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v6, 1, v8);
    if ((_DWORD)result != 1)
    {
      sub_1DC404534();
      result = sub_1DC404528();
      v9 = MEMORY[0x1E0DB75D8];
      *a2 = result;
      a2[1] = v9;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for TodayViewStyler()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for TickerTestSuite()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for StockViewStyler()
{
  return objc_opt_self();
}

uint64_t sub_1DC127218()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1DC40124C();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for StockSearchMode(uint64_t a1)
{
  return sub_1DC08CD5C(a1, qword_1EDB2E8A8);
}

uint64_t type metadata accessor for StockListStyler()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for StockListRouter()
{
  return objc_opt_self();
}

uint64_t sub_1DC1272C0()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for StockListModule()
{
  return objc_opt_self();
}

uint64_t sub_1DC127314(_QWORD *a1)
{
  uint64_t v1;

  return sub_1DC086804(a1, *(_QWORD *)(v1 + 16));
}

void sub_1DC12731C()
{
  unint64_t v0;

  sub_1DC089DA4(319, &qword_1EDB28AC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t type metadata accessor for StockFeedConfig()
{
  uint64_t result;

  result = qword_1EDB2E350;
  if (!qword_1EDB2E350)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t type metadata accessor for ServiceAssembly()
{
  return objc_opt_self();
}

uint64_t sub_1DC127408()
{
  sub_1DC12DA48();
  sub_1DC402B30();
  return swift_release();
}

uint64_t sub_1DC127448@<X0>(_QWORD *a1@<X0>, BOOL *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t *boxed_opaque_existential_1;
  void (*v8)(char *, uint64_t *, uint64_t, __n128);
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  BOOL v13;
  uint64_t v14[5];
  _QWORD v15[3];
  uint64_t v16;
  uint64_t v17;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, (unint64_t *)&unk_1EDB28C90);
  result = sub_1DC402608();
  v4 = v16;
  if (v16)
  {
    v5 = v17;
    v6 = __swift_project_boxed_opaque_existential_1(v15, v16);
    v14[3] = v4;
    v14[4] = v5;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v14);
    v8 = *(void (**)(char *, uint64_t *, uint64_t, __n128))(*(_QWORD *)(v4 - 8) + 16);
    v9 = ((uint64_t (*)(uint64_t *, _QWORD *, uint64_t))v8)(boxed_opaque_existential_1, v6, v4);
    v10 = MEMORY[0x1E0C80A78](v9);
    v12 = (char *)v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
    v8(v12, boxed_opaque_existential_1, v4, v10);
    v13 = sub_1DC12C5D4((uint64_t)v12, v4);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
    result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
    *a2 = v13;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC127570@<X0>(_QWORD *a1@<X0>, void (*a2)(_QWORD)@<X1>, uint64_t (*a3)(_QWORD)@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t result;
  uint64_t v10;
  uint64_t v11;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  a2(0);
  result = sub_1DC4025FC();
  if (result)
  {
    v10 = result;
    v11 = a3(0);
    result = swift_allocObject();
    *(_QWORD *)(result + 16) = v10;
    a5[3] = v11;
    a5[4] = a4;
    *a5 = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC12760C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1DC127570(a1, sub_1DC12D6E4, (uint64_t (*)(_QWORD))type metadata accessor for ForYouFeedServiceProxy, (uint64_t)&off_1EA454438, a2);
}

uint64_t sub_1DC127628(_QWORD *a1)
{
  return sub_1DC093FC4(a1, 0x6546756F59726F46, 0xEA00000000006465, (void (*)(_QWORD))sub_1DC12DA48, sub_1DC12D6E4);
}

uint64_t sub_1DC127654(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t result;
  _QWORD v7[2];

  sub_1DC092F50(0, &qword_1EDB2AD88, (void (*)(uint64_t))MEMORY[0x1E0D5A4C0]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v7 - v3;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v5 = sub_1DC4073D8();
  sub_1DC4025D8();
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    type metadata accessor for ForYouFeedPoolService();
    result = sub_1DC4025FC();
    if (result)
    {
      v7[1] = result;
      sub_1DC08CBF0(0, &qword_1EDB2ADE8, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedPoolService, sub_1DC11F628, MEMORY[0x1E0D5A890]);
      swift_allocObject();
      return sub_1DC4074B0();
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1DC1277B4(_QWORD *a1)
{
  uint64_t result;
  id v2;
  _QWORD v3[3];
  uint64_t v4;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, (unint64_t *)&unk_1EDB28C90);
  result = sub_1DC402608();
  if (v4)
  {
    __swift_project_boxed_opaque_existential_1(v3, v4);
    sub_1DC400BE0();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
    if (qword_1EDB2D2E8 != -1)
      swift_once();
    v2 = (id)qword_1EDB2D2E0;
    return sub_1DC4073CC();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for ManagerAssembly()
{
  return objc_opt_self();
}

uint64_t sub_1DC1278D8(_QWORD *a1)
{
  uint64_t result;
  uint64_t v2;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4018AC();
  result = sub_1DC4025FC();
  if (result)
  {
    if (qword_1EDB29178 != -1)
      swift_once();
    v2 = qword_1EDB29168;
    swift_retain();
    swift_release();
    return v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC127970@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  char v5;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  result = sub_1DC402608();
  if (v5 == 2)
  {
    __break(1u);
  }
  else
  {
    v4 = type metadata accessor for OnboardingConfigurationFactory();
    result = swift_allocObject();
    *(_BYTE *)(result + 16) = v5 & 1;
    a2[3] = v4;
    a2[4] = (uint64_t)&off_1EA462830;
    *a2 = result;
  }
  return result;
}

uint64_t sub_1DC127A08()
{
  uint64_t result;

  type metadata accessor for PremiumSealAnimationManager();
  result = swift_allocObject();
  *(_BYTE *)(result + 16) = 1;
  return result;
}

uint64_t sub_1DC127A34@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for StocksV2UserActivityDeserializer();
  result = sub_1DC4025FC();
  if (result)
  {
    v4 = result;
    type metadata accessor for ScrollRestorationManager();
    result = swift_allocObject();
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = v4;
    *a2 = result;
    a2[1] = (uint64_t)&off_1EA4646F0;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC127AB0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t refreshed;
  uint64_t result;

  refreshed = type metadata accessor for DataRefreshManager();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = MEMORY[0x1E0DEE9D8];
  a1[3] = refreshed;
  a1[4] = (uint64_t)&off_1EA454508;
  *a1 = result;
  return result;
}

uint64_t sub_1DC127B00@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC403D9C();
  result = sub_1DC4025FC();
  if (result)
  {
    sub_1DC403D6C();
    v4 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D61D70];
    swift_allocObject();
    v5 = sub_1DC403D60();
    result = sub_1DC080808(&qword_1EDB299D0, v4, MEMORY[0x1E0D61D68]);
    *a2 = v5;
    a2[1] = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1DC127BAC@<X0>(_QWORD *a1@<X8>)
{
  objc_class *v2;
  id result;
  uint64_t v4;

  v2 = (objc_class *)sub_1DC404F6C();
  result = objc_msgSend(objc_allocWithZone(v2), sel_init);
  v4 = MEMORY[0x1E0DB8D60];
  a1[3] = v2;
  a1[4] = v4;
  *a1 = result;
  return result;
}

uint64_t sub_1DC127BF4(_QWORD *a1)
{
  uint64_t result;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for StocksV2UserActivitySerializer();
  result = sub_1DC4025FC();
  if (result)
  {
    sub_1DC1315E8();
    swift_allocObject();
    return sub_1DC404F0C();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for ForYouTitleView()
{
  return objc_opt_self();
}

uint64_t sub_1DC127C94(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for ForYouTitleView();
    result = MEMORY[0x1DF0CAB8C](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DC127CF0()
{
  return sub_1DC127C94(&qword_1EDB2E158, (uint64_t)&unk_1DC4317D0);
}

uint64_t sub_1DC127D14()
{
  return sub_1DC080808(&qword_1EDB2E0A8, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedModel, (uint64_t)&unk_1DC42ECA0);
}

void sub_1DC127D40()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  _QWORD v7[10];

  sub_1DC0F4CCC();
  if (v1 <= 0x3F)
  {
    v7[4] = *(_QWORD *)(v0 - 8) + 64;
    sub_1DC0F5AF4();
    if (v3 <= 0x3F)
    {
      v7[5] = *(_QWORD *)(v2 - 8) + 64;
      v7[6] = &unk_1DC42EC58;
      sub_1DC407EAC();
      if (v4 <= 0x3F)
      {
        swift_getTupleTypeLayout2();
        v7[7] = v7;
        v7[8] = &unk_1DC42EC88;
        v5 = sub_1DC407CFC();
        if (v6 <= 0x3F)
        {
          v7[9] = *(_QWORD *)(v5 - 8) + 64;
          swift_initEnumMetadataMultiPayload();
        }
      }
    }
  }
}

uint64_t sub_1DC127E1C()
{
  return sub_1DC080808(&qword_1EDB2E090, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedModel, (uint64_t)&unk_1DC42ED08);
}

uint64_t sub_1DC127E48()
{
  return sub_1DC080808(&qword_1EDB2E0A0, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedModel, (uint64_t)&unk_1DC42ECC8);
}

uint64_t sub_1DC127E74()
{
  return sub_1DC080808((unint64_t *)&unk_1EDB2E048, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedModel, (uint64_t)&unk_1DC42EEC0);
}

uint64_t sub_1DC127EA0()
{
  return sub_1DC080808(&qword_1EDB2E098, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedModel, (uint64_t)&unk_1DC42ED30);
}

uint64_t sub_1DC127ECC()
{
  sub_1DC091A8C(&qword_1EDB2DF68, (uint64_t)&unk_1DC42A9F4);
  return sub_1DC40286C();
}

uint64_t sub_1DC127F04(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ForYouFeedGroup();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DC127F40(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ForYouFeedGroup();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC127F84()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  result = type metadata accessor for StockForYouFeedGroup();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for CuratedForYouFeedGroup();
    if (v2 <= 0x3F)
    {
      result = sub_1DC407300();
      if (v3 <= 0x3F)
      {
        swift_initEnumMetadataMultiPayload();
        return 0;
      }
    }
  }
  return result;
}

unint64_t sub_1DC12802C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EDB2DF50;
  if (!qword_1EDB2DF50)
  {
    v1 = type metadata accessor for ForYouFeedGroup();
    result = MEMORY[0x1DF0CAB8C](&unk_1DC42A96C, v1);
    atomic_store(result, (unint64_t *)&qword_1EDB2DF50);
  }
  return result;
}

uint64_t sub_1DC128074()
{
  return sub_1DC091A8C((unint64_t *)&unk_1EDB2DF80, (uint64_t)&unk_1DC42AA24);
}

uint64_t sub_1DC128098()
{
  return sub_1DC091A8C(&qword_1EDB2DF40, (uint64_t)&unk_1DC42AA4C);
}

uint64_t sub_1DC1280BC()
{
  return sub_1DC091A8C(&qword_1EDB2DF68, (uint64_t)&unk_1DC42A9F4);
}

uint64_t sub_1DC1280E0()
{
  return sub_1DC091A8C(&qword_1EDB2DF48, (uint64_t)&unk_1DC42AB04);
}

uint64_t sub_1DC128104()
{
  return sub_1DC091A8C((unint64_t *)&unk_1EDB2DF70, (uint64_t)&unk_1DC42AADC);
}

uint64_t sub_1DC128128()
{
  return sub_1DC091A8C((unint64_t *)&unk_1EDB2DF58, (uint64_t)&unk_1DC42AAB4);
}

uint64_t type metadata accessor for FactoryAssembly()
{
  return objc_opt_self();
}

uint64_t sub_1DC12816C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, qword_1EDB2D2F0);
  result = sub_1DC402608();
  if (v7)
  {
    v4 = type metadata accessor for OfflineAlertControllerFactory();
    v5 = swift_allocObject();
    sub_1DC097DD0(&v6, v5 + 16);
    a2[3] = v4;
    result = sub_1DC080808(&qword_1EDB391B0, (uint64_t (*)(uint64_t))type metadata accessor for OfflineAlertControllerFactory, (uint64_t)&unk_1DC415B50);
    a2[4] = result;
    *a2 = v5;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t destroy for EngagementEvent(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      v3 = sub_1DC403610();
      goto LABEL_8;
    case 1:
      v3 = sub_1DC4034C0();
      goto LABEL_8;
    case 2:
      v3 = sub_1DC4036DC();
      goto LABEL_8;
    case 3:
      v3 = sub_1DC403130();
      goto LABEL_8;
    case 4:
      v3 = sub_1DC403424();
      goto LABEL_8;
    case 5:
      v3 = sub_1DC403A60();
LABEL_8:
      result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t type metadata accessor for EngagementEvent()
{
  uint64_t result;

  result = qword_1EDB277E8;
  if (!qword_1EDB277E8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t type metadata accessor for EmptyListModule()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for CommandObserver()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for CommandAssembly()
{
  return objc_opt_self();
}

uint64_t sub_1DC12837C(_QWORD *a1)
{
  return sub_1DC0A9FB8(a1, (unint64_t *)&unk_1EDB28C50, MEMORY[0x1E0DAEA08], (void (*)(_QWORD))type metadata accessor for ViewWatchlistCommandHandler, (void (*)(_BYTE *, uint64_t))sub_1DC097DD0);
}

uint64_t sub_1DC1283A0(uint64_t a1)
{
  return sub_1DC09FBB4(a1, (void (*)(_QWORD))type metadata accessor for ViewWatchlistCommandHandler);
}

uint64_t sub_1DC1283B4(_QWORD *a1)
{
  return sub_1DC083BA0(a1, (void (*)(_QWORD))type metadata accessor for CreateWatchlistCommandHandler);
}

uint64_t sub_1DC1283C0(uint64_t a1)
{
  return sub_1DC09FBB4(a1, (void (*)(_QWORD))type metadata accessor for CreateWatchlistCommandHandler);
}

uint64_t sub_1DC1283D4(uint64_t a1)
{
  return sub_1DC09FBB4(a1, (void (*)(_QWORD))type metadata accessor for WatchlistMembershipCommandHandler);
}

uint64_t sub_1DC1283E8(uint64_t a1)
{
  return sub_1DC1F8530(a1, (void (*)(_QWORD, __n128))type metadata accessor for CommandObserver);
}

uint64_t sub_1DC1283FC(_QWORD *a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  uint64_t v6;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB27470);
  result = sub_1DC402608();
  if (v6)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1DC083C10();
    result = sub_1DC4025FC();
    if (result)
    {
      v3 = result;
      type metadata accessor for EarningsShownCommandHandler();
      v4 = swift_allocObject();
      sub_1DC097DD0(&v5, v4 + 16);
      *(_QWORD *)(v4 + 56) = v3;
      return v4;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1DC1284D8(uint64_t a1)
{
  return sub_1DC09FBB4(a1, (void (*)(_QWORD))type metadata accessor for EarningsShownCommandHandler);
}

uint64_t sub_1DC1284EC()
{
  type metadata accessor for StocksSharingCompleteCommandHandler();
  return swift_allocObject();
}

uint64_t sub_1DC12850C(uint64_t a1)
{
  return sub_1DC1F8530(a1, (void (*)(_QWORD, __n128))type metadata accessor for StocksSharingCompleteCommandHandler);
}

uint64_t sub_1DC128520(_QWORD *a1)
{
  return sub_1DC0A9FB8(a1, &qword_1EDB29F00, MEMORY[0x1E0DB8260], (void (*)(_QWORD))type metadata accessor for StocksSharingCommandHandler, (void (*)(_BYTE *, uint64_t))sub_1DC097DD0);
}

uint64_t sub_1DC128544(uint64_t a1)
{
  return sub_1DC09FBB4(a1, (void (*)(_QWORD))type metadata accessor for StocksSharingCommandHandler);
}

uint64_t sub_1DC128558(uint64_t a1)
{
  return sub_1DC09FBB4(a1, (void (*)(_QWORD))MEMORY[0x1E0DB8B50]);
}

uint64_t sub_1DC12856C(uint64_t a1)
{
  return sub_1DC09FBB4(a1, (void (*)(_QWORD))type metadata accessor for OpenMainWindowCommandHandler);
}

uint64_t sub_1DC128580(_QWORD *a1)
{
  return sub_1DC0AA070(a1, (void (*)(_QWORD))sub_1DC083C10, (uint64_t (*)(_QWORD))type metadata accessor for WatchlistCommandHandler, (uint64_t (*)(_BYTE *, char *, uint64_t, uint64_t, uint64_t, uint64_t))sub_1DC115230);
}

uint64_t sub_1DC12859C(uint64_t a1)
{
  return sub_1DC09FBB4(a1, (void (*)(_QWORD))type metadata accessor for WatchlistCommandHandler);
}

uint64_t sub_1DC1285B0(uint64_t a1)
{
  return sub_1DC1F8530(a1, (void (*)(_QWORD, __n128))sub_1DC1F89D8);
}

uint64_t sub_1DC1285C4(uint64_t a1)
{
  return sub_1DC09FBB4(a1, sub_1DC13080C);
}

uint64_t sub_1DC1285D8()
{
  type metadata accessor for DebugMenuCommandHandler();
  return swift_allocObject();
}

uint64_t sub_1DC1285F8(uint64_t a1)
{
  return sub_1DC09FBB4(a1, (void (*)(_QWORD))type metadata accessor for DebugMenuCommandHandler);
}

uint64_t sub_1DC12860C(_QWORD *a1)
{
  return sub_1DC0A9FB8(a1, &qword_1EDB28C40, MEMORY[0x1E0DAE970], (void (*)(_QWORD))type metadata accessor for BilingualFeedCommandHandler, (void (*)(_BYTE *, uint64_t))sub_1DC097DD0);
}

uint64_t sub_1DC128630(uint64_t a1)
{
  return sub_1DC09FBB4(a1, (void (*)(_QWORD))type metadata accessor for BilingualFeedCommandHandler);
}

uint64_t sub_1DC128644(_QWORD *a1)
{
  return sub_1DC0A9FB8(a1, (unint64_t *)&unk_1EDB337B0, (uint64_t)&protocol descriptor for DataRefreshManagerType, (void (*)(_QWORD))type metadata accessor for DataRefreshCommandHandler, (void (*)(_BYTE *, uint64_t))sub_1DC097DD0);
}

uint64_t sub_1DC128668(uint64_t a1)
{
  return sub_1DC09FBB4(a1, (void (*)(_QWORD))type metadata accessor for DataRefreshCommandHandler);
}

uint64_t sub_1DC12867C(_QWORD *a1)
{
  return sub_1DC1F81E0(a1, (void (*)(_QWORD))sub_1DC083C10, (uint64_t (*)(_QWORD))type metadata accessor for ProvideFeedbackCommandHandler, (uint64_t (*)(uint64_t, char *, uint64_t, uint64_t, uint64_t))sub_1DC117AC8);
}

uint64_t sub_1DC128698(uint64_t a1)
{
  return sub_1DC09FBB4(a1, (void (*)(_QWORD))type metadata accessor for ProvideFeedbackCommandHandler);
}

uint64_t sub_1DC1286AC()
{
  type metadata accessor for PrivacyCommandHandler();
  return swift_allocObject();
}

uint64_t sub_1DC1286CC(uint64_t a1)
{
  return sub_1DC09FBB4(a1, (void (*)(_QWORD))type metadata accessor for PrivacyCommandHandler);
}

uint64_t sub_1DC1286E0(_QWORD *a1)
{
  return sub_1DC1F81E0(a1, (void (*)(_QWORD))type metadata accessor for IdentificationResetManager, (uint64_t (*)(_QWORD))type metadata accessor for ResetIdentifierCommandHandler, (uint64_t (*)(uint64_t, char *, uint64_t, uint64_t, uint64_t))sub_1DC117AC8);
}

uint64_t sub_1DC1286FC(uint64_t a1)
{
  return sub_1DC09FBB4(a1, (void (*)(_QWORD))type metadata accessor for ResetIdentifierCommandHandler);
}

uint64_t sub_1DC128710(_QWORD *a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC0995E8(0, (unint64_t *)&qword_1EDB3FAB0);
  result = sub_1DC4025FC();
  if (result)
  {
    v3 = result;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1DC0995E8(0, &qword_1EDB3F9E0);
    result = sub_1DC4025FC();
    if (result)
    {
      v4 = result;
      type metadata accessor for CopyArticleCommandHandler();
      result = swift_allocObject();
      *(_QWORD *)(result + 16) = v3;
      *(_QWORD *)(result + 24) = v4;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1DC1287E0(uint64_t a1)
{
  return sub_1DC09FBB4(a1, (void (*)(_QWORD))type metadata accessor for CopyArticleCommandHandler);
}

uint64_t sub_1DC1287F4()
{
  type metadata accessor for CopyLink2CommandHandler();
  return swift_allocObject();
}

uint64_t sub_1DC128814(uint64_t a1)
{
  return sub_1DC09FBB4(a1, (void (*)(_QWORD))type metadata accessor for CopyLink2CommandHandler);
}

uint64_t sub_1DC128828(_QWORD *a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC083C10();
  result = sub_1DC4025FC();
  if (result)
  {
    v3 = result;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1DC4018AC();
    result = sub_1DC4025FC();
    if (result)
    {
      v4 = result;
      type metadata accessor for ReadStoryCommandHandler();
      result = swift_allocObject();
      *(_QWORD *)(result + 16) = v3;
      *(_QWORD *)(result + 24) = v4;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1DC1288D8(uint64_t a1)
{
  return sub_1DC09FBB4(a1, (void (*)(_QWORD))type metadata accessor for ReadStoryCommandHandler);
}

uint64_t sub_1DC1288EC()
{
  type metadata accessor for CopyLinkCommandHandler();
  return swift_allocObject();
}

uint64_t sub_1DC12890C(uint64_t a1)
{
  return sub_1DC09FBB4(a1, (void (*)(_QWORD))type metadata accessor for CopyLinkCommandHandler);
}

uint64_t sub_1DC128920()
{
  type metadata accessor for CurrencyDisplayCommandHandler();
  return swift_allocObject();
}

uint64_t sub_1DC128940(uint64_t a1)
{
  return sub_1DC09FBB4(a1, (void (*)(_QWORD))type metadata accessor for CurrencyDisplayCommandHandler);
}

uint64_t sub_1DC128954(_QWORD *a1)
{
  return sub_1DC0AA070(a1, (void (*)(_QWORD))MEMORY[0x1E0CF8638], (uint64_t (*)(_QWORD))type metadata accessor for ChangeWatchlistDisplayCommandHandler, (uint64_t (*)(_BYTE *, char *, uint64_t, uint64_t, uint64_t, uint64_t))sub_1DC115230);
}

uint64_t sub_1DC128970(uint64_t a1)
{
  return sub_1DC09FBB4(a1, (void (*)(_QWORD))type metadata accessor for ChangeWatchlistDisplayCommandHandler);
}

uint64_t sub_1DC128984(_QWORD *a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t *boxed_opaque_existential_1;
  void (*v8)(char *, uint64_t *, uint64_t, __n128);
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15[5];
  _QWORD v16[3];
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, (unint64_t *)&unk_1EDB28C50);
  result = sub_1DC402608();
  if (v20)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1DC096268(0, (unint64_t *)&unk_1EDB28C90);
    result = sub_1DC402608();
    v3 = v17;
    if (v17)
    {
      v4 = type metadata accessor for SortWatchlistCommandHandler();
      v5 = v18;
      v6 = __swift_project_boxed_opaque_existential_1(v16, v17);
      v15[3] = v3;
      v15[4] = v5;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v15);
      v8 = *(void (**)(char *, uint64_t *, uint64_t, __n128))(*(_QWORD *)(v3 - 8) + 16);
      v9 = ((uint64_t (*)(uint64_t *, _QWORD *, uint64_t))v8)(boxed_opaque_existential_1, v6, v3);
      v10 = MEMORY[0x1E0C80A78](v9);
      v12 = (char *)&v15[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
      v8(v12, boxed_opaque_existential_1, v3, v10);
      v13 = sub_1DC0D2E30(&v19, (uint64_t)v12, v4, v3, v5);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
      return v13;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1DC128B10(uint64_t a1)
{
  return sub_1DC09FBB4(a1, (void (*)(_QWORD))type metadata accessor for SortWatchlistCommandHandler);
}

uint64_t sub_1DC128B24(_QWORD *a1)
{
  return sub_1DC0A9FB8(a1, (unint64_t *)&unk_1EDB28C50, MEMORY[0x1E0DAEA08], (void (*)(_QWORD))type metadata accessor for ViewNextPreviousWatchlistCommandHandler, (void (*)(_BYTE *, uint64_t))sub_1DC097DD0);
}

uint64_t sub_1DC128B48(uint64_t a1)
{
  return sub_1DC09FBB4(a1, (void (*)(_QWORD))type metadata accessor for ViewNextPreviousWatchlistCommandHandler);
}

uint64_t sub_1DC128B5C(uint64_t a1, _QWORD *a2)
{
  return sub_1DC0BCFF8(a1, a2, (void (*)(_QWORD))type metadata accessor for CopyArticleCommandHandler, (void (*)(void))MEMORY[0x1E0D59ED8], (void (*)(void))sub_1DC11A0CC);
}

uint64_t sub_1DC128B78(uint64_t a1, _QWORD *a2)
{
  return sub_1DC0BCFF8(a1, a2, (void (*)(_QWORD))type metadata accessor for CopyLink2CommandHandler, (void (*)(void))MEMORY[0x1E0DBC4C0], (void (*)(void))sub_1DC11DA1C);
}

uint64_t sub_1DC128B94(uint64_t a1, _QWORD *a2)
{
  return sub_1DC0BCFF8(a1, a2, (void (*)(_QWORD))type metadata accessor for CopyLinkCommandHandler, MEMORY[0x1E0DBC4B0], (void (*)(void))sub_1DC11E8B8);
}

uint64_t sub_1DC128BB0(uint64_t a1, _QWORD *a2)
{
  uint64_t result;

  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for CreateWatchlistCommandHandler();
  result = sub_1DC4025FC();
  if (result)
  {
    swift_getObjectType();
    if (qword_1EDB27590 != -1)
      swift_once();
    type metadata accessor for CreateWatchlistCommandContext(0);
    sub_1DC080808(&qword_1EDB38E10, (uint64_t (*)(uint64_t))type metadata accessor for CreateWatchlistCommandHandler, (uint64_t)&unk_1DC423E30);
    sub_1DC404A8C();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC128CBC(uint64_t a1, _QWORD *a2)
{
  uint64_t result;

  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for WatchlistMembershipCommandHandler();
  result = sub_1DC4025FC();
  if (result)
  {
    swift_getObjectType();
    if (qword_1EDB2AA40 != -1)
      swift_once();
    type metadata accessor for WatchlistMembershipCommandContext(0);
    sub_1DC080808(&qword_1EDB3C448, (uint64_t (*)(uint64_t))type metadata accessor for WatchlistMembershipCommandHandler, (uint64_t)&unk_1DC41CCB4);
    sub_1DC404A98();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC128DD0(uint64_t a1, _QWORD *a2)
{
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for CommandObserver();
  sub_1DC4025FC();
  return swift_release();
}

uint64_t sub_1DC128E1C(uint64_t a1, _QWORD *a2)
{
  uint64_t result;

  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for EarningsShownCommandHandler();
  result = sub_1DC4025FC();
  if (result)
  {
    swift_getObjectType();
    if (qword_1EDB2AA30 != -1)
      swift_once();
    sub_1DC080808(&qword_1EDB37528, (uint64_t (*)(uint64_t))type metadata accessor for EarningsShownCommandHandler, (uint64_t)&unk_1DC42091C);
    sub_1DC404A8C();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC128F1C(uint64_t a1, _QWORD *a2)
{
  uint64_t result;

  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for WatchlistCommandHandler();
  result = sub_1DC4025FC();
  if (result)
  {
    swift_getObjectType();
    if (qword_1EDB2AA88 != -1)
      swift_once();
    sub_1DC4010E4();
    sub_1DC080808(&qword_1EDB354B8, (uint64_t (*)(uint64_t))type metadata accessor for WatchlistCommandHandler, (uint64_t)&unk_1DC4195E8);
    sub_1DC404A98();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC129030(uint64_t a1, _QWORD *a2)
{
  uint64_t result;

  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for StocksSharingCompleteCommandHandler();
  result = sub_1DC4025FC();
  if (result)
  {
    swift_getObjectType();
    if (qword_1EDB2A9D0 != -1)
      swift_once();
    type metadata accessor for CommandStocksShareContentComplete(0);
    sub_1DC080808(&qword_1EDB2C2A8, (uint64_t (*)(uint64_t))type metadata accessor for StocksSharingCompleteCommandHandler, (uint64_t)&unk_1DC411064);
    sub_1DC404A8C();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC12913C(uint64_t a1, _QWORD *a2)
{
  uint64_t result;

  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for StocksSharingCommandHandler();
  result = sub_1DC4025FC();
  if (result)
  {
    swift_getObjectType();
    if (qword_1EDB2A9D8 != -1)
      swift_once();
    type metadata accessor for CommandShareContent(0);
    sub_1DC080808(&qword_1EDB2BE60, (uint64_t (*)(uint64_t))type metadata accessor for StocksSharingCommandHandler, (uint64_t)&unk_1DC419A1C);
    sub_1DC404A8C();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1DC129248(uint64_t a1, _QWORD *a2)
{
  id v3;
  unsigned int v4;

  v3 = objc_msgSend((id)objc_opt_self(), sel_sharedApplication);
  v4 = objc_msgSend(v3, sel_supportsMultipleScenes);

  if (v4)
  {
    __swift_project_boxed_opaque_existential_1(a2, a2[3]);
    type metadata accessor for OpenMainWindowCommandHandler();
    if (sub_1DC4025FC())
    {
      swift_getObjectType();
      if (qword_1EDB410D0 != -1)
        swift_once();
      sub_1DC080808(&qword_1EDB41180, (uint64_t (*)(uint64_t))type metadata accessor for OpenMainWindowCommandHandler, (uint64_t)&protocol conformance descriptor for OpenMainWindowCommandHandler);
      sub_1DC404A8C();
      swift_release();
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_1DC129388(uint64_t a1, _QWORD *a2)
{
  id v3;
  unsigned int v4;

  v3 = objc_msgSend((id)objc_opt_self(), sel_sharedApplication);
  v4 = objc_msgSend(v3, sel_supportsMultipleScenes);

  if (v4)
  {
    __swift_project_boxed_opaque_existential_1(a2, a2[3]);
    sub_1DC1F89D8(0);
    if (sub_1DC4025FC())
    {
      swift_getObjectType();
      if (qword_1EDB410C8 != -1)
        swift_once();
      type metadata accessor for StocksActivity(0);
      sub_1DC080808((unint64_t *)&unk_1EDB41090, (uint64_t (*)(uint64_t))sub_1DC1F89D8, MEMORY[0x1E0DBA818]);
      sub_1DC404A8C();
      swift_release();
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_1DC1294D4(uint64_t a1, _QWORD *a2)
{
  id v3;
  unsigned int v4;

  v3 = objc_msgSend((id)objc_opt_self(), sel_sharedApplication);
  v4 = objc_msgSend(v3, sel_supportsMultipleScenes);

  if (v4)
  {
    __swift_project_boxed_opaque_existential_1(a2, a2[3]);
    sub_1DC13080C(0);
    if (sub_1DC4025FC())
    {
      swift_getObjectType();
      if (qword_1EDB410E0 != -1)
        swift_once();
      type metadata accessor for StocksActivity(0);
      sub_1DC080808((unint64_t *)&unk_1EDB410A0, (uint64_t (*)(uint64_t))sub_1DC13080C, MEMORY[0x1E0DBAED0]);
      sub_1DC404A8C();
      swift_release();
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_1DC129620(uint64_t a1, _QWORD *a2)
{
  uint64_t result;

  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for DebugMenuCommandHandler();
  result = sub_1DC4025FC();
  if (result)
  {
    swift_getObjectType();
    if (qword_1EDB2AA08 != -1)
      swift_once();
    sub_1DC080808(&qword_1EDB345C0, (uint64_t (*)(uint64_t))type metadata accessor for DebugMenuCommandHandler, (uint64_t)&unk_1DC424608);
    sub_1DC404A8C();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC129720(uint64_t a1, _QWORD *a2)
{
  uint64_t result;

  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for BilingualFeedCommandHandler();
  result = sub_1DC4025FC();
  if (result)
  {
    swift_getObjectType();
    if (qword_1EDB2A9F0 != -1)
      swift_once();
    sub_1DC080808(&qword_1EDB373A8, (uint64_t (*)(uint64_t))type metadata accessor for BilingualFeedCommandHandler, (uint64_t)&unk_1DC42823C);
    sub_1DC404A8C();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC129820(uint64_t a1, _QWORD *a2)
{
  uint64_t result;

  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for DataRefreshCommandHandler();
  result = sub_1DC4025FC();
  if (result)
  {
    swift_getObjectType();
    if (qword_1EDB2A9F8 != -1)
      swift_once();
    sub_1DC080808(&qword_1EDB360D8, (uint64_t (*)(uint64_t))type metadata accessor for DataRefreshCommandHandler, (uint64_t)&unk_1DC417D3C);
    sub_1DC404A8C();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC129920(uint64_t a1, _QWORD *a2)
{
  uint64_t result;

  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for ProvideFeedbackCommandHandler();
  result = sub_1DC4025FC();
  if (result)
  {
    swift_getObjectType();
    if (qword_1EDB2AA10 != -1)
      swift_once();
    sub_1DC080808(&qword_1EDB42768, (uint64_t (*)(uint64_t))type metadata accessor for ProvideFeedbackCommandHandler, (uint64_t)&unk_1DC429400);
    sub_1DC404A98();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC129A28(uint64_t a1, _QWORD *a2)
{
  uint64_t result;

  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for ReadStoryCommandHandler();
  result = sub_1DC4025FC();
  if (result)
  {
    swift_getObjectType();
    sub_1DC406AC0();
    sub_1DC0995E8(0, (unint64_t *)&qword_1EDB3F920);
    sub_1DC080808((unint64_t *)&unk_1EDB34BF0, (uint64_t (*)(uint64_t))type metadata accessor for ReadStoryCommandHandler, (uint64_t)&unk_1DC42E860);
    sub_1DC404A8C();
    swift_release();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC129B24(uint64_t a1, _QWORD *a2)
{
  uint64_t result;

  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for PrivacyCommandHandler();
  result = sub_1DC4025FC();
  if (result)
  {
    swift_getObjectType();
    if (qword_1EDB2AA28 != -1)
      swift_once();
    sub_1DC080808(&qword_1EDB32D88, (uint64_t (*)(uint64_t))type metadata accessor for PrivacyCommandHandler, (uint64_t)&unk_1DC42EB88);
    sub_1DC404A8C();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC129C24(uint64_t a1, _QWORD *a2)
{
  uint64_t result;

  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for ResetIdentifierCommandHandler();
  result = sub_1DC4025FC();
  if (result)
  {
    swift_getObjectType();
    if (qword_1EDB2AA38 != -1)
      swift_once();
    sub_1DC080808(&qword_1EDB39440, (uint64_t (*)(uint64_t))type metadata accessor for ResetIdentifierCommandHandler, (uint64_t)&unk_1DC418870);
    sub_1DC404A8C();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC129D24(uint64_t a1, _QWORD *a2)
{
  uint64_t result;

  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for CurrencyDisplayCommandHandler();
  result = sub_1DC4025FC();
  if (result)
  {
    swift_getObjectType();
    if (qword_1EDB2A9E0 != -1)
      swift_once();
    sub_1DC080808(&qword_1EDB38FE0, (uint64_t (*)(uint64_t))type metadata accessor for CurrencyDisplayCommandHandler, (uint64_t)&unk_1DC40EEF0);
    sub_1DC404A98();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC129E2C(uint64_t a1, _QWORD *a2)
{
  uint64_t result;

  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for ChangeWatchlistDisplayCommandHandler();
  result = sub_1DC4025FC();
  if (result)
  {
    swift_getObjectType();
    if (qword_1EDB2AA50 != -1)
      swift_once();
    type metadata accessor for ChangeWatchlistDisplayContext(0);
    sub_1DC080808(&qword_1EDB3D0F8, (uint64_t (*)(uint64_t))type metadata accessor for ChangeWatchlistDisplayCommandHandler, (uint64_t)&unk_1DC430988);
    sub_1DC404A98();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC129F40(uint64_t a1, _QWORD *a2)
{
  uint64_t result;

  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for SortWatchlistCommandHandler();
  result = sub_1DC4025FC();
  if (result)
  {
    swift_getObjectType();
    if (qword_1EDB2AA68 != -1)
      swift_once();
    type metadata accessor for SortWatchlistCommandContext(0);
    sub_1DC080808(&qword_1EDB37818, (uint64_t (*)(uint64_t))type metadata accessor for SortWatchlistCommandHandler, (uint64_t)&unk_1DC428C7C);
    sub_1DC404A98();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC12A054(uint64_t a1, _QWORD *a2)
{
  uint64_t result;

  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for ViewWatchlistCommandHandler();
  result = sub_1DC4025FC();
  if (result)
  {
    swift_getObjectType();
    if (qword_1EDB2AA78 != -1)
      swift_once();
    sub_1DC40124C();
    sub_1DC080808(&qword_1EDB38088, (uint64_t (*)(uint64_t))type metadata accessor for ViewWatchlistCommandHandler, (uint64_t)&unk_1DC40FB4C);
    sub_1DC404A98();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for ArticleAssembly()
{
  return objc_opt_self();
}

uint64_t sub_1DC12A190(uint64_t a1)
{
  return sub_1DC09BD28(a1, 0x616E614D61746144, 0xEB00000000726567, &qword_1EDB2DB58);
}

unint64_t sub_1DC12A1B8()
{
  unint64_t result;

  result = qword_1EDB2DB50;
  if (!qword_1EDB2DB50)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC42B544, &type metadata for WatchlistState);
    atomic_store(result, (unint64_t *)&qword_1EDB2DB50);
  }
  return result;
}

uint64_t type metadata accessor for TickerAssembly()
{
  return objc_opt_self();
}

void sub_1DC12A21C(uint64_t a1, _QWORD *a2)
{
  id v2;

  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for TickerViewController();
  v2 = (id)sub_1DC4025FC();
  swift_unknownObjectWeakAssign();

}

void sub_1DC12A294(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  _UNKNOWN **v3;
  id v4;

  v2 = *a1;
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for TickerViewController();
  v4 = (id)sub_1DC4025FC();
  v3 = &off_1EA468C38;
  if (!v4)
    v3 = 0;
  *(_QWORD *)(v2 + 24) = v3;
  swift_unknownObjectWeakAssign();

}

uint64_t sub_1DC12A314(uint64_t a1, _QWORD *a2)
{
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1DC130C94();
  if (sub_1DC4025FC())
    sub_1DC080808(&qword_1EDB2A290, (uint64_t (*)(uint64_t))sub_1DC130C94, MEMORY[0x1E0DB9B60]);
  return sub_1DC406130();
}

uint64_t sub_1DC12A3A0(uint64_t a1, _QWORD *a2)
{
  uint64_t result;

  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1DC0AE0F4(0);
  result = sub_1DC4025FC();
  if (result)
  {
    sub_1DC080808(&qword_1EDB2A228, (uint64_t (*)(uint64_t))sub_1DC0AE0F4, MEMORY[0x1E0DB9990]);
    return sub_1DC405AB8();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC12A444(_QWORD *a1)
{
  uint64_t result;
  void *v2;
  id v3;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC1308A8();
  result = sub_1DC4025CC();
  if (result)
  {
    v2 = (void *)result;
    v3 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for TickerCollectionView()), sel_initWithFrame_collectionViewLayout_, result, 0.0, 0.0, 0.0, 0.0);

    return (uint64_t)v3;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC12A4E0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1DC08AE10(a1, (uint64_t (*)(_QWORD))type metadata accessor for TickerCardContainerStyler, (uint64_t (*)(_BYTE *, uint64_t, uint64_t, uint64_t))sub_1DC119EC8, (uint64_t)&off_1EA45AD78, a2);
}

uint64_t sub_1DC12A4FC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1DC12A504((_QWORD *)(v1 + 16), a1);
}

uint64_t sub_1DC12A504@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for TickerViewController();
  result = sub_1DC4025FC();
  if (result)
    *a2 = result;
  else
    __break(1u);
  return result;
}

uint64_t sub_1DC12A55C()
{
  type metadata accessor for TickerBlueprintViewSupplementaryViewProvider();
  return swift_allocObject();
}

uint64_t sub_1DC12A57C(_QWORD *a1)
{
  uint64_t result;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB34318);
  result = sub_1DC402608();
  if (v3)
  {
    type metadata accessor for TickerBlueprintViewCellProvider();
    v2 = (_QWORD *)swift_allocObject();
    v2[3] = 0;
    swift_unknownObjectWeakInit();
    v2[4] = v3;
    v2[5] = v4;
    return (uint64_t)v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC12A624(_QWORD *a1)
{
  uint64_t result;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[5];
  _BYTE v15[24];
  uint64_t v16;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB3D928);
  result = sub_1DC402608();
  if (v16)
  {
    v2 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v15, v16);
    MEMORY[0x1E0C80A78](v2);
    v4 = (_QWORD *)((char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v5 + 16))(v4);
    v6 = *v4;
    v7 = type metadata accessor for TickerViewLayoutAttributesFactory();
    v14[3] = v7;
    v14[4] = &off_1EA44FCD8;
    v14[0] = v6;
    type metadata accessor for TickerBlueprintLayoutBuilder();
    v8 = (_QWORD *)swift_allocObject();
    v9 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v14, v7);
    MEMORY[0x1E0C80A78](v9);
    v11 = (_QWORD *)((char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v12 + 16))(v11);
    v13 = *v11;
    v8[5] = v7;
    v8[6] = &off_1EA44FCD8;
    v8[2] = v13;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
    return (uint64_t)v8;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC12A7A0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1DC08AE10(a1, (uint64_t (*)(_QWORD))type metadata accessor for TickerViewStyler, (uint64_t (*)(_BYTE *, uint64_t, uint64_t, uint64_t))sub_1DC0A3134, (uint64_t)&off_1EA44FA68, a2);
}

uint64_t sub_1DC12A7BC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1DC08AE10(a1, (uint64_t (*)(_QWORD))type metadata accessor for TickerStyler, (uint64_t (*)(_BYTE *, uint64_t, uint64_t, uint64_t))sub_1DC119EC8, (uint64_t)&off_1EA45ADA8, a2);
}

uint64_t sub_1DC12A7D8(_QWORD *a1)
{
  uint64_t result;
  Class v2;
  id v3;
  uint64_t v4;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB2B060);
  result = sub_1DC402608();
  if (v4)
  {
    sub_1DC112498(0, &qword_1EDB2B030, (uint64_t (*)(void))sub_1DC122CC4, (uint64_t)&type metadata for TickerOfflineModel, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0D5DB20]);
    v3 = objc_allocWithZone(v2);
    return sub_1DC407F24();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC12A884(_QWORD *a1)
{
  uint64_t result;
  Class v3;
  id v4;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC0AE018(0);
  result = sub_1DC4025FC();
  if (result)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1DC0AE0F4(0);
    result = sub_1DC4025FC();
    if (result)
    {
      sub_1DC12FDF8();
      v4 = objc_allocWithZone(v3);
      return sub_1DC4062C8();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1DC12A940(_QWORD *a1)
{
  uint64_t v1;

  return sub_1DC0894D4(a1, (_QWORD *)(v1 + 16));
}

uint64_t sub_1DC12A948(_QWORD *a1)
{
  uint64_t result;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC131064();
  result = sub_1DC4025FC();
  if (result)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1DC0AE018(0);
    result = sub_1DC4025FC();
    if (result)
    {
      sub_1DC0AE02C();
      swift_allocObject();
      return sub_1DC406124();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1DC12AA24(uint64_t a1)
{
  return sub_1DC080C78(a1, sub_1DC1300A0, MEMORY[0x1E0DBB3E8]);
}

uint64_t sub_1DC12AA38(_QWORD *a1)
{
  uint64_t result;
  Class v2;
  id v3;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4061D8();
  result = sub_1DC4025CC();
  if (result)
  {
    sub_1DC1308A8();
    v3 = objc_allocWithZone(v2);
    return sub_1DC405DC4();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC12AABC(uint64_t a1)
{
  return sub_1DC080C78(a1, sub_1DC0AE0F4, MEMORY[0x1E0DB9978]);
}

uint64_t sub_1DC12AAD0(_QWORD *a1)
{
  uint64_t result;
  uint64_t v3;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC131064();
  result = sub_1DC4025FC();
  if (result)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1DC096268(0, &qword_1EDB2A940);
    result = sub_1DC402608();
    if (v3)
    {
      sub_1DC131B04();
      swift_allocObject();
      return sub_1DC404BB8();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1DC12ABCC(uint64_t a1)
{
  return sub_1DC080C78(a1, sub_1DC0AE018, MEMORY[0x1E0DB80B0]);
}

uint64_t sub_1DC12ABE0(_QWORD *a1)
{
  uint64_t result;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC0AE018(0);
  result = sub_1DC4025FC();
  if (result)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1DC131B04();
    result = sub_1DC4025FC();
    if (result)
    {
      sub_1DC131E1C();
      swift_allocObject();
      return sub_1DC4049C0();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1DC12ACB4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8[2];

  sub_1DC0824D4((uint64_t)a1, (uint64_t)v8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4018AC();
  result = sub_1DC4025FC();
  if (result)
  {
    v5 = result;
    v6 = type metadata accessor for TickerModule();
    v7 = swift_allocObject();
    result = sub_1DC097DD0(v8, v7 + 16);
    *(_QWORD *)(v7 + 56) = v5;
    a2[3] = v6;
    a2[4] = (uint64_t)&off_1EA45E870;
    *a2 = v7;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for StylerAssembly()
{
  return objc_opt_self();
}

uint64_t sub_1DC12AD80@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  __int128 v5;
  uint64_t v6;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC0A3390(0, qword_1EDB2D2F0);
  result = sub_1DC402608();
  if (v6)
  {
    a2[3] = (uint64_t)&type metadata for AppBackgroundStyler;
    a2[4] = (uint64_t)&off_1EA44F400;
    v4 = swift_allocObject();
    *a2 = v4;
    return sub_1DC097DD0(&v5, v4 + 16);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1DC12AE34()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;

  sub_1DC4010E4();
  if (v0 <= 0x3F)
  {
    sub_1DC092F50(319, &qword_1EDB28DC0, (void (*)(uint64_t))MEMORY[0x1E0DAF040]);
    if (v1 <= 0x3F)
    {
      sub_1DC092F50(319, &qword_1EDB353E0, (void (*)(uint64_t))type metadata accessor for StockSparklineViewModel);
      if (v2 <= 0x3F)
      {
        type metadata accessor for PriceViewModel();
        if (v3 <= 0x3F)
        {
          sub_1DC4008EC();
          if (v4 <= 0x3F)
            swift_initStructMetadata();
        }
      }
    }
  }
}

uint64_t type metadata accessor for StockTitleView()
{
  return objc_opt_self();
}

uint64_t sub_1DC12AF54(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for StockTitleView();
    result = MEMORY[0x1DF0CAB8C](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DC12AF90()
{
  return sub_1DC12AF54(&qword_1EDB2D930, (uint64_t)&unk_1DC42BBF0);
}

uint64_t sub_1DC12AFB4()
{
  return sub_1DC080808(&qword_1EDB2D880, type metadata accessor for StockListModel, (uint64_t)&unk_1DC41BFA8);
}

uint64_t sub_1DC12AFE0()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for StockListStockModel(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_1DC12B04C()
{
  return sub_1DC080808(&qword_1EDB2D868, type metadata accessor for StockListModel, (uint64_t)&unk_1DC41C010);
}

uint64_t sub_1DC12B078()
{
  return sub_1DC080808(&qword_1EDB2D878, type metadata accessor for StockListModel, (uint64_t)&unk_1DC41BFD0);
}

uint64_t sub_1DC12B0A4()
{
  return sub_1DC080808(&qword_1EDB2D850, type metadata accessor for StockListModel, (uint64_t)&unk_1DC41C168);
}

uint64_t sub_1DC12B0D0()
{
  return sub_1DC080808(&qword_1EDB2D870, type metadata accessor for StockListModel, (uint64_t)&unk_1DC41C038);
}

uint64_t sub_1DC12B0FC()
{
  return sub_1DC080808(&qword_1EDB2D7A0, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedModel, (uint64_t)&unk_1DC428F98);
}

uint64_t sub_1DC12B128()
{
  return sub_1DC080808(&qword_1EDB2D788, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedModel, (uint64_t)&unk_1DC429000);
}

uint64_t sub_1DC12B154()
{
  return sub_1DC080808(&qword_1EDB2D798, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedModel, (uint64_t)&unk_1DC428FC0);
}

uint64_t sub_1DC12B180()
{
  return sub_1DC080808(&qword_1EDB2D758, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedModel, (uint64_t)&unk_1DC429190);
}

uint64_t sub_1DC12B1AC()
{
  return sub_1DC080808(&qword_1EDB2D790, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedModel, (uint64_t)&unk_1DC429028);
}

uint64_t sub_1DC12B1D8()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1DC4011C8();
  if (v1 <= 0x3F)
  {
    result = sub_1DC400118();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_1DC12B288()
{
  uint64_t result;

  type metadata accessor for PriceChangeFormatter();
  result = swift_initStaticObject();
  qword_1EDB5DEB0 = result;
  return result;
}

uint64_t sub_1DC12B2B4()
{
  uint64_t v0;
  uint64_t result;

  type metadata accessor for PriceFormatter();
  v0 = swift_allocObject();
  result = sub_1DC4000B8();
  qword_1EDB5DFD0 = v0;
  return result;
}

uint64_t sub_1DC12B300()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1DC400118();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for PriceFormatter()
{
  uint64_t result;

  result = qword_1EDB2D4D0;
  if (!qword_1EDB2D4D0)
    return swift_getSingletonMetadata();
  return result;
}

id sub_1DC12B3A8(uint64_t a1)
{
  return sub_1DC093478(a1, 3, &qword_1F0368B38);
}

id sub_1DC12B3B8(uint64_t a1)
{
  return sub_1DC093478(a1, 2, &qword_1EDB5DEA8);
}

id sub_1DC12B3C8()
{
  id result;

  result = sub_1DC0A1B08(3);
  qword_1F0368B40 = (uint64_t)result;
  return result;
}

id sub_1DC12B3E8()
{
  id result;

  result = sub_1DC0A1B08(2);
  qword_1EDB5DFB8 = (uint64_t)result;
  return result;
}

ValueMetadata *type metadata accessor for ForYouFeedPool()
{
  return &type metadata for ForYouFeedPool;
}

unint64_t sub_1DC12B418()
{
  unint64_t result;

  result = qword_1EDB2D388;
  if (!qword_1EDB2D388)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC40FD8C, &type metadata for ForYouFeedPool);
    atomic_store(result, (unint64_t *)&qword_1EDB2D388);
  }
  return result;
}

void sub_1DC12B460()
{
  JUMPOUT(0x1DF0CAB8CLL);
}

void sub_1DC12B470()
{
  JUMPOUT(0x1DF0CAB8CLL);
}

uint64_t sub_1DC12B480()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for CellAutomation(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CellAutomation);
}

uint64_t dispatch thunk of BaseStylerType.theme.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of BaseStylerType.style(window:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 80))();
}

uint64_t type metadata accessor for WelcomeModule()
{
  return objc_opt_self();
}

unint64_t sub_1DC12B534()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EDB2D2D0;
  if (!qword_1EDB2D2D0)
  {
    v1 = type metadata accessor for WelcomeModule();
    result = MEMORY[0x1DF0CAB8C](&protocol conformance descriptor for WelcomeModule, v1);
    atomic_store(result, (unint64_t *)&qword_1EDB2D2D0);
  }
  return result;
}

unint64_t sub_1DC12B578(uint64_t a1)
{
  unint64_t result;

  result = sub_1DC12B534();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for MediaAssembly()
{
  return objc_opt_self();
}

uint64_t sub_1DC12B5C0()
{
  id v0;

  sub_1DC4017D4();
  v0 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  return sub_1DC4017C8();
}

uint64_t sub_1DC12B608(_QWORD *a1)
{
  return sub_1DC0A2238(a1);
}

uint64_t sub_1DC12B610()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;

  v0 = sub_1DC40178C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (uint64_t *)((char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1DC40172C();
  *v3 = 11;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0CF8430], v0);
  return sub_1DC401720();
}

uint64_t sub_1DC12B6A8(_QWORD *a1)
{
  uint64_t result;
  uint64_t v2;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB27470);
  result = sub_1DC402608();
  if (v2)
  {
    sub_1DC403274();
    swift_allocObject();
    return sub_1DC403268();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC12B73C()
{
  return sub_1DC0B0530();
}

id sub_1DC12B75C()
{
  id result;
  uint64_t v1;

  result = sub_1DC08A7E4();
  qword_1EDB276E0 = (uint64_t)result;
  *(_QWORD *)algn_1EDB276E8 = v1;
  return result;
}

id sub_1DC12B77C()
{
  id result;

  result = sub_1DC09918C();
  qword_1EDB276C8 = (uint64_t)result;
  return result;
}

uint64_t type metadata accessor for MainTestSuite()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for EmptyListView()
{
  return objc_opt_self();
}

uint64_t sub_1DC12B814()
{
  return sub_1DC080808(&qword_1EDB2CF98, (uint64_t (*)(uint64_t))type metadata accessor for EmptyListView, (uint64_t)&unk_1DC41801C);
}

uint64_t sub_1DC12B830(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for EmptyListView();
    result = MEMORY[0x1DF0CAB8C](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DC12B86C()
{
  return sub_1DC12B830(&qword_1EDB2CF90, (uint64_t)&unk_1DC417FE4);
}

uint64_t type metadata accessor for DebugAssembly()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for AudioAssembly()
{
  return objc_opt_self();
}

uint64_t sub_1DC12B90C(_QWORD *a1)
{
  uint64_t result;
  uint64_t v2;
  __int128 v3;
  uint64_t v4;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, (unint64_t *)&unk_1EDB29398);
  result = sub_1DC402608();
  if (v4)
  {
    type metadata accessor for AudioListeningProgressAdapter();
    v2 = swift_allocObject();
    sub_1DC097DD0(&v3, v2 + 16);
    return v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC12B9A8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1DC083EE4(a1, (uint64_t)&off_1EA464AE0, a2);
}

uint64_t sub_1DC12B9B4(_QWORD *a1)
{
  return sub_1DC099FC4(a1, MEMORY[0x1E0D57748], (void (*)(_QWORD))MEMORY[0x1E0D57AF0], MEMORY[0x1E0D57AE8]);
}

id sub_1DC12B9D0()
{
  Class v0;

  sub_1DC08CBF0(0, &qword_1EDB291C0, (uint64_t (*)(uint64_t))type metadata accessor for StocksAudioTrack, sub_1DC12D218, MEMORY[0x1E0D56D08]);
  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

uint64_t sub_1DC12BA14(_QWORD *a1)
{
  uint64_t result;
  uint64_t v2;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB2B128);
  result = sub_1DC402608();
  if (v2)
  {
    sub_1DC402314();
    swift_allocObject();
    return sub_1DC402308();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC12BAA8(_QWORD *a1)
{
  return sub_1DC099FC4(a1, MEMORY[0x1E0D57750], (void (*)(_QWORD))MEMORY[0x1E0D57DC8], MEMORY[0x1E0D57DC0]);
}

uint64_t sub_1DC12BAC4(_QWORD *a1)
{
  uint64_t result;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC08CBF0(0, &qword_1EDB291C0, (uint64_t (*)(uint64_t))type metadata accessor for StocksAudioTrack, sub_1DC12D218, MEMORY[0x1E0D56D08]);
  result = sub_1DC4025FC();
  if (result)
  {
    sub_1DC402290();
    swift_allocObject();
    sub_1DC132C7C();
    return sub_1DC402284();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC12BB70@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC09A0D0();
  v4 = v3;
  result = sub_1DC4025FC();
  if (result)
  {
    v6 = result;
    a2[3] = v4;
    result = sub_1DC080808((unint64_t *)&unk_1EDB292A8, (uint64_t (*)(uint64_t))sub_1DC09A0D0, MEMORY[0x1E0D57798]);
    a2[4] = result;
    *a2 = v6;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC12BBFC(_QWORD *a1)
{
  uint64_t result;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC08CBF0(0, &qword_1EDB291C0, (uint64_t (*)(uint64_t))type metadata accessor for StocksAudioTrack, sub_1DC12D218, MEMORY[0x1E0D56D08]);
  result = sub_1DC4025FC();
  if (!result)
  {
    __break(1u);
    goto LABEL_6;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for StocksAudioPlaybackQueue();
  result = sub_1DC4025FC();
  if (!result)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for AudioListeningProgressAdapter();
  result = sub_1DC4025FC();
  if (result)
  {
    sub_1DC09A0D0();
    swift_allocObject();
    return sub_1DC401FD8();
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for ArticleRouter()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for TipsAssembly()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for TickerStyler()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for TickerRouter()
{
  return objc_opt_self();
}

uint64_t sub_1DC12BDA4()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for TickerModule()
{
  return objc_opt_self();
}

uint64_t sub_1DC12BDF0(_QWORD *a1)
{
  return sub_1DC12BDF8(a1);
}

uint64_t sub_1DC12BDF8(_QWORD *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4018AC();
  sub_1DC40250C();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC0C70EC();
  return sub_1DC402530();
}

double sub_1DC12BE94()
{
  double result;

  qword_1EDB5DE88 = 0;
  unk_1EDB5DE90 = 0;
  result = 20.0;
  xmmword_1EDB5DE98 = xmmword_1DC420960;
  return result;
}

void sub_1DC12BEB0()
{
  qword_1EDB5DE80 = 0x404C000000000000;
}

uint64_t sub_1DC12BEC0(unsigned __int8 *a1)
{
  return *a1;
}

ValueMetadata *type metadata accessor for ThemingStyle()
{
  return &type metadata for ThemingStyle;
}

uint64_t type metadata accessor for MenuAssembly()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for MastheadView()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for MainAssembly()
{
  return objc_opt_self();
}

uint64_t sub_1DC12BF5C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v14[24];
  uint64_t v15;
  uint64_t v16;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, qword_1EDB2D2F0);
  result = sub_1DC402608();
  v4 = v15;
  if (v15)
  {
    v5 = type metadata accessor for MainStyler();
    v6 = v16;
    v7 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v14, v15);
    v8 = MEMORY[0x1E0C80A78](v7);
    v10 = &v14[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
    (*(void (**)(_BYTE *, __n128))(v11 + 16))(v10, v8);
    v12 = sub_1DC0A3134((uint64_t)v10, v5, v4, v6);
    result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
    a2[3] = v5;
    a2[4] = (uint64_t)&off_1EA44F640;
    *a2 = v12;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC12C070(_QWORD *a1)
{
  uint64_t result;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC1315E8();
  result = sub_1DC4025FC();
  if (result)
  {
    sub_1DC083C10();
    swift_allocObject();
    return sub_1DC4044F8();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC12C0E8()
{
  return sub_1DC08AB48(&qword_1EDB2CA70, (uint64_t)&unk_1DC4277E0);
}

uint64_t sub_1DC12C10C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  int v4;

  result = type metadata accessor for StockViewModel();
  if (v3 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    swift_initEnumMetadataSingleCase();
    result = 0;
    *(_DWORD *)(*(_QWORD *)(a1 - 8) + 84) = v4;
  }
  return result;
}

uint64_t sub_1DC12C188()
{
  return sub_1DC081B48(&qword_1EDB2CA50, 255, (uint64_t (*)(uint64_t))type metadata accessor for TickerModel, (uint64_t)&unk_1DC4278A0);
}

uint64_t sub_1DC12C1A8()
{
  return sub_1DC08AB48(&qword_1EDB2CA58, (uint64_t)&unk_1DC427848);
}

uint64_t sub_1DC12C1CC()
{
  return sub_1DC08AB48(&qword_1EDB2CA68, (uint64_t)&unk_1DC427808);
}

uint64_t sub_1DC12C1F0()
{
  return sub_1DC08AB48((unint64_t *)&unk_1EDB2CA40, (uint64_t)&unk_1DC427920);
}

uint64_t sub_1DC12C214()
{
  return sub_1DC08AB48(&qword_1EDB2CA60, (uint64_t)&unk_1DC427870);
}

uint64_t type metadata accessor for PlacardView()
{
  return objc_opt_self();
}

uint64_t sub_1DC12C258(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for PlacardView();
    result = MEMORY[0x1DF0CAB8C](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DC12C294()
{
  return sub_1DC12C258(&qword_1EDB2CA30, (uint64_t)&unk_1DC41B214);
}

uint64_t type metadata accessor for PPTAssembly()
{
  return objc_opt_self();
}

void sub_1DC12C2D8(void *a1, _QWORD *a2)
{
  sub_1DC087858(a1, a2);
}

void sub_1DC12C2E0(void **a1, uint64_t a2)
{
  sub_1DC087168(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for ForYouFeedMemoryTestCase);
}

void sub_1DC12C2EC(void **a1, uint64_t a2)
{
  sub_1DC087168(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedMemoryTestCase);
}

void sub_1DC12C2F8(void **a1, uint64_t a2)
{
  sub_1DC0A8F0C(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for ForYouFeedRotateTestCase, (uint64_t (*)(_QWORD))type metadata accessor for ForYouFeedScrollTestCase, (uint64_t (*)(_QWORD))type metadata accessor for ForYouFeedScrollLandscapeTestCase);
}

void sub_1DC12C314(void **a1, uint64_t a2)
{
  sub_1DC0A8F0C(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for StockListRotateTestCase, (uint64_t (*)(_QWORD))type metadata accessor for StockListScrollTestCase, (uint64_t (*)(_QWORD))type metadata accessor for StockListScrollLandscapeTestCase);
}

void sub_1DC12C330(void **a1, uint64_t a2)
{
  sub_1DC0A8F0C(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedRotateTestCase, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedScrollTestCase, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedScrollLandscapeTestCase);
}

void sub_1DC12C34C(void **a1, uint64_t a2)
{
  sub_1DC087168(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for TickerScrollTestCase);
}

id sub_1DC12C358(_QWORD *a1)
{
  id result;
  id v2;
  objc_class *v3;
  char *v4;
  char *v5;
  objc_super v6;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC13143C();
  result = (id)sub_1DC4025FC();
  if (result)
  {
    v2 = result;
    v3 = (objc_class *)type metadata accessor for ExtendedLaunchToStockListTestCase();
    v4 = (char *)objc_allocWithZone(v3);
    v5 = &v4[OBJC_IVAR____TtC8StocksUI33ExtendedLaunchToStockListTestCase_testName];
    strcpy(&v4[OBJC_IVAR____TtC8StocksUI33ExtendedLaunchToStockListTestCase_testName], "ExtendedLaunch");
    v5[15] = -18;
    *(_QWORD *)&v4[OBJC_IVAR____TtC8StocksUI33ExtendedLaunchToStockListTestCase_timeoutInSeconds] = 0x403E000000000000;
    *(_QWORD *)&v4[OBJC_IVAR____TtC8StocksUI33ExtendedLaunchToStockListTestCase_aggregate] = 1;
    *(_QWORD *)&v4[OBJC_IVAR____TtC8StocksUI33ExtendedLaunchToStockListTestCase_stockListPrewarmState] = v2;
    v6.receiver = v4;
    v6.super_class = v3;
    return objc_msgSendSuper2(&v6, sel_init);
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1DC12C440(uint64_t a1)
{
  return sub_1DC080C54(a1, (uint64_t (*)(_QWORD))type metadata accessor for ForYouFeedMemoryTestSuite);
}

id sub_1DC12C44C(uint64_t a1)
{
  return sub_1DC080C54(a1, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedMemoryTestSuite);
}

id sub_1DC12C458(uint64_t a1)
{
  return sub_1DC080C54(a1, (uint64_t (*)(_QWORD))type metadata accessor for ForYouFeedTestSuite);
}

id sub_1DC12C464(uint64_t a1)
{
  return sub_1DC080C54(a1, (uint64_t (*)(_QWORD))type metadata accessor for StockListTestSuite);
}

id sub_1DC12C470(uint64_t a1)
{
  return sub_1DC080C54(a1, (uint64_t (*)(_QWORD))type metadata accessor for TickerTestSuite);
}

id sub_1DC12C47C(uint64_t a1)
{
  return sub_1DC080C54(a1, (uint64_t (*)(_QWORD))type metadata accessor for MainTestSuite);
}

uint64_t sub_1DC12C488()
{
  return sub_1DC0B2A34();
}

void sub_1DC12C4A8()
{
  qword_1EDB5DE78 = 0x4074000000000000;
}

uint64_t type metadata accessor for AdsAssembly()
{
  return objc_opt_self();
}

uint64_t sub_1DC12C4D8(_QWORD *a1)
{
  return sub_1DC0B3D64(a1, MEMORY[0x1E0DAD180], (void (*)(_QWORD))sub_1DC117384);
}

uint64_t sub_1DC12C4EC(_QWORD *a1)
{
  return sub_1DC0B3D64(a1, MEMORY[0x1E0DAD190], (void (*)(_QWORD))sub_1DC117630);
}

uint64_t sub_1DC12C500(_QWORD *a1)
{
  return sub_1DC0B3D64(a1, MEMORY[0x1E0DAD198], (void (*)(_QWORD))sub_1DC1176F0);
}

uint64_t sub_1DC12C514(uint64_t a1, _QWORD *a2)
{
  return sub_1DC09869C(a1, a2, (void (*)(_QWORD))sub_1DC117630, (void (*)(void))sub_1DC1176D4);
}

uint64_t sub_1DC12C528(uint64_t a1, _QWORD *a2)
{
  return sub_1DC09869C(a1, a2, (void (*)(_QWORD))sub_1DC1176F0, (void (*)(void))sub_1DC117794);
}

uint64_t sub_1DC12C53C(uint64_t a1, _QWORD *a2)
{
  return sub_1DC09869C(a1, a2, (void (*)(_QWORD))sub_1DC117384, (void (*)(void))sub_1DC117428);
}

uint64_t type metadata accessor for TickerView()
{
  return objc_opt_self();
}

uint64_t sub_1DC12C574(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for TickerView();
    result = MEMORY[0x1DF0CAB8C](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DC12C5B0()
{
  return sub_1DC12C574(&qword_1EDB2C8C8, (uint64_t)&unk_1DC42FDAC);
}

BOOL sub_1DC12C5D4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  char *v6;
  char v7;
  uint64_t v9;

  v3 = *(_QWORD *)(a2 - 8);
  v4 = MEMORY[0x1E0C80A78](a1);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, __n128))(v3 + 32))(v6, v4);
  v7 = sub_1DC400BE0();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, a2);
  return (v7 & 1) == 0;
}

uint64_t type metadata accessor for MainStyler()
{
  return objc_opt_self();
}

uint64_t sub_1DC12C688(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = sub_1DC081B48(&qword_1EDB2C738, a2, (uint64_t (*)(uint64_t))type metadata accessor for MainModule, (uint64_t)&protocol conformance descriptor for MainModule);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

void sub_1DC12C6C4(UIViewController *a1@<X8>)
{
  MainModule.createViewController()(a1);
}

uint64_t sub_1DC12C6E4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1DC400118();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for BaseStyler()
{
  uint64_t result;

  result = qword_1EDB2C678;
  if (!qword_1EDB2C678)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1DC12C798()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (_QWORD *)(*v0 + OBJC_IVAR____TtC8StocksUI10BaseStyler_theme);
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 152))(v2, v3);
}

uint64_t sub_1DC12C7E8()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (_QWORD *)(*v0 + OBJC_IVAR____TtC8StocksUI10BaseStyler_theme);
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 448))(v2, v3);
}

void sub_1DC12C838(void *a1)
{
  _QWORD *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;

  v3 = (_QWORD *)(*v1 + OBJC_IVAR____TtC8StocksUI10BaseStyler_theme);
  v4 = v3[3];
  v5 = v3[4];
  __swift_project_boxed_opaque_existential_1(v3, v4);
  v6 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v5 + 104))(v4, v5);
  objc_msgSend(a1, sel_setTintColor_, v6);

  v7 = v3[3];
  v8 = v3[4];
  __swift_project_boxed_opaque_existential_1(v3, v7);
  v9 = (id)(*(uint64_t (**)(uint64_t, uint64_t))(v8 + 56))(v7, v8);
  objc_msgSend(a1, sel_setBackgroundColor_, v9);

}

void sub_1DC12C8FC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB2C5F0)
  {
    type metadata accessor for StocksActivity(255);
    v0 = sub_1DC4095A4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB2C5F0);
  }
}

uint64_t sub_1DC12C950()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  char v4;
  char *v5;
  uint64_t *v6;

  result = sub_1DC4010E4();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    v5 = &v4;
    result = type metadata accessor for StocksActivity.StockFeed.Series(319);
    if (v2 <= 0x3F)
    {
      swift_getTupleTypeLayout2();
      v6 = &v3;
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for StocksActivity.StockFeed(uint64_t a1)
{
  return sub_1DC08CD5C(a1, qword_1EDB2C4E8);
}

uint64_t sub_1DC12CA18()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1DC4010E4();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for StocksActivity.StockFeed.Series(uint64_t a1)
{
  return sub_1DC08CD5C(a1, qword_1EDB2C448);
}

uint64_t sub_1DC12CAA0()
{
  uint64_t result;
  unint64_t v1;
  _QWORD v2[6];

  result = sub_1DC401BB8();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout3();
    v2[4] = v2;
    v2[5] = &unk_1DC42B330;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for StocksActivity.Article(uint64_t a1)
{
  return sub_1DC08CD5C(a1, qword_1EDB2C390);
}

uint64_t type metadata accessor for StocksSharingCompleteCommandHandler()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for StocksV2UserActivityDeserializer()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for StocksV2UserActivitySerializer()
{
  return objc_opt_self();
}

void sub_1DC12CBA0()
{
  unint64_t v0;

  sub_1DC132300();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t type metadata accessor for StocksV2UserActivityHandler()
{
  uint64_t result;

  result = qword_1EDB2C010;
  if (!qword_1EDB2C010)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1DC12CC70()
{
  unint64_t v0;

  sub_1DC132300();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t type metadata accessor for StocksV1UserActivityHandler()
{
  uint64_t result;

  result = qword_1EDB2BF20;
  if (!qword_1EDB2BF20)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t type metadata accessor for StocksSharingCommandHandler()
{
  return objc_opt_self();
}

void sub_1DC12CD54()
{
  unint64_t v0;

  sub_1DC132300();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t type metadata accessor for StocksShortcutItemHandler()
{
  uint64_t result;

  result = qword_1EDB2BD88;
  if (!qword_1EDB2BD88)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1DC12CE18()
{
  unint64_t v0;

  sub_1DC132300();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t type metadata accessor for StocksV1SymbolURLHandler()
{
  uint64_t result;

  result = qword_1EDB2BCB0;
  if (!qword_1EDB2BCB0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1DC12CED8()
{
  return swift_retain();
}

void sub_1DC12CEE8()
{
  unint64_t v0;

  sub_1DC132300();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t type metadata accessor for StocksArticleURLHandler()
{
  uint64_t result;

  result = qword_1EDB2BA38;
  if (!qword_1EDB2BA38)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1DC12CFB8()
{
  unint64_t v0;

  sub_1DC132300();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t type metadata accessor for StocksSearchURLHandler()
{
  uint64_t result;

  result = qword_1EDB2B950;
  if (!qword_1EDB2B950)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1DC12D070()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EDB2B868)
  {
    type metadata accessor for StocksActivity(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EDB2B868);
  }
}

uint64_t storeEnumTagSinglePayload for StocksAudioTrack()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1DC12D0E0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = type metadata accessor for StocksAudioTrack();
    v7 = a3(a1, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

void sub_1DC12D138(uint64_t a1)
{
  sub_1DC089DA4(a1, &qword_1EDB2B7F0, (uint64_t (*)(uint64_t))type metadata accessor for StocksAudioTrack, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

uint64_t sub_1DC12D154()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1DC4011BC();
  if (v1 <= 0x3F)
  {
    result = sub_1DC401B1C();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_1DC12D218()
{
  return sub_1DC080808((unint64_t *)&unk_1EDB2B770, (uint64_t (*)(uint64_t))type metadata accessor for StocksAudioTrack, (uint64_t)&protocol conformance descriptor for StocksAudioTrack);
}

uint64_t sub_1DC12D234()
{
  return sub_1DC080808((unint64_t *)&unk_1EDB2B760, (uint64_t (*)(uint64_t))type metadata accessor for StocksAudioTrack, (uint64_t)&protocol conformance descriptor for StocksAudioTrack);
}

uint64_t sub_1DC12D250()
{
  return sub_1DC080808((unint64_t *)&qword_1EDB2B788, (uint64_t (*)(uint64_t))type metadata accessor for StocksAudioTrack, (uint64_t)&protocol conformance descriptor for StocksAudioTrack);
}

uint64_t sub_1DC12D27C()
{
  return sub_1DC080808(&qword_1EDB2B780, (uint64_t (*)(uint64_t))type metadata accessor for StocksAudioTrack, (uint64_t)&protocol conformance descriptor for StocksAudioTrack);
}

uint64_t sub_1DC12D2A8()
{
  return sub_1DC080808((unint64_t *)&unk_1EDB2B770, (uint64_t (*)(uint64_t))type metadata accessor for StocksAudioTrack, (uint64_t)&protocol conformance descriptor for StocksAudioTrack);
}

uint64_t sub_1DC12D2D4()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for StockViewModel();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1DC12D350()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  char v5;
  char *v6;
  void *v7;
  void *v8;

  v0 = sub_1DC4010E4();
  if (v1 <= 0x3F)
  {
    sub_1DC089DA4(319, &qword_1EDB28DC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF040], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    if (v3 > 0x3F)
    {
      return v2;
    }
    else
    {
      swift_getTupleTypeLayout3();
      v6 = &v5;
      v7 = &unk_1DC426D20;
      v8 = &unk_1DC426D38;
      swift_initStructMetadata();
      return 0;
    }
  }
  return v0;
}

uint64_t type metadata accessor for ForYouFeedBlueprintViewSupplementaryViewProvider()
{
  return objc_opt_self();
}

uint64_t sub_1DC12D450()
{
  return sub_1DC085450();
}

void sub_1DC12D474(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  sub_1DC0A45EC(a1, a2, *a3, a4);
}

uint64_t sub_1DC12D498()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v5;

  v0 = sub_1DC406040();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC130830();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DBB2B8], v0);
  sub_1DC4090B8();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_1DC12D554(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_1DC082260(a1, a2, *a3);
}

uint64_t type metadata accessor for TickerBlueprintViewSupplementaryViewProvider()
{
  return objc_opt_self();
}

unint64_t sub_1DC12D598()
{
  unint64_t result;

  result = qword_1EDB2B080;
  if (!qword_1EDB2B080)
  {
    result = MEMORY[0x1DF0CAB8C](MEMORY[0x1E0D5E378], MEMORY[0x1E0D5E388]);
    atomic_store(result, (unint64_t *)&qword_1EDB2B080);
  }
  return result;
}

void sub_1DC12D5DC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB2B040)
  {
    sub_1DC120BB8();
    v0 = sub_1DC407F48();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB2B040);
  }
}

void sub_1DC12D634()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB2B028)
  {
    sub_1DC11B7B8();
    v0 = sub_1DC407F48();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB2B028);
  }
}

void sub_1DC12D68C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB2B008)
  {
    sub_1DC122CC4();
    v0 = sub_1DC407F30();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB2B008);
  }
}

void sub_1DC12D6E4(uint64_t a1)
{
  sub_1DC08CBF0(a1, &qword_1EDB2AFC8, (uint64_t (*)(uint64_t))sub_1DC12DA48, sub_1DC12DB3C, MEMORY[0x1E0D5CF20]);
}

void sub_1DC12D708(uint64_t a1)
{
  sub_1DC08CBF0(a1, (unint64_t *)&unk_1EDB2AFB8, (uint64_t (*)(uint64_t))sub_1DC12DB58, sub_1DC12DC4C, MEMORY[0x1E0D5CF20]);
}

unint64_t sub_1DC12D72C()
{
  unint64_t result;

  result = qword_1EDB2AF58;
  if (!qword_1EDB2AF58)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EDB2AF58);
  }
  return result;
}

void sub_1DC12D780()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB2AF40)
  {
    v0 = sub_1DC407990();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB2AF40);
  }
}

void sub_1DC12D7F4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB2AEC0)
  {
    sub_1DC0C5214();
    sub_1DC131940();
    sub_1DC10B280();
    sub_1DC080808(&qword_1EDB29F50, (uint64_t (*)(uint64_t))sub_1DC131940, MEMORY[0x1E0DB8440]);
    sub_1DC080808(&qword_1EDB2E088, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedModel, (uint64_t)&unk_1DC42EE10);
    sub_1DC080808(&qword_1EDB2E080, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedModel, (uint64_t)&unk_1DC42EDB8);
    v0 = sub_1DC407870();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB2AEC0);
  }
}

uint64_t sub_1DC12D8EC(uint64_t a1)
{
  uint64_t v2;

  sub_1DC12D96C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DC12D928(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1DC12D96C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1DC12D96C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB2AE90)
  {
    sub_1DC1639E4(255, (unint64_t *)&unk_1EDB2AE80, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0D5B210]);
    v0 = sub_1DC4095A4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB2AE90);
  }
}

void sub_1DC12D9D0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB2AE60)
  {
    type metadata accessor for StockFeedServiceConfig();
    sub_1DC080808(&qword_1EDB33F10, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedServiceConfig, (uint64_t)&unk_1DC411510);
    v0 = sub_1DC4076E4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB2AE60);
  }
}

void sub_1DC12DA48()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB2AE40)
  {
    type metadata accessor for ForYouFeedGroupEmitterFactory();
    sub_1DC08CBF0(255, &qword_1EDB2ADE8, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedPoolService, sub_1DC11F628, MEMORY[0x1E0D5A890]);
    sub_1DC080808(&qword_1EDB390A8, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedGroupEmitterFactory, (uint64_t)&unk_1DC40FCD0);
    sub_1DC3EB8E4(&qword_1EDB2ADE0, &qword_1EDB2ADE8, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedPoolService, sub_1DC11F628);
    v0 = sub_1DC407588();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB2AE40);
  }
}

uint64_t sub_1DC12DB3C()
{
  return sub_1DC080808(&qword_1EDB2AE38, (uint64_t (*)(uint64_t))sub_1DC12DA48, MEMORY[0x1E0D5AC10]);
}

void sub_1DC12DB58()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB2AE30)
  {
    type metadata accessor for StockFeedGroupEmitterFactory();
    sub_1DC08CBF0(255, &qword_1EDB2ADD8, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedPoolService, sub_1DC120438, MEMORY[0x1E0D5A890]);
    sub_1DC080808(&qword_1EDB38828, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedGroupEmitterFactory, (uint64_t)&unk_1DC40EDB0);
    sub_1DC3EB8E4(&qword_1EDB2ADD0, &qword_1EDB2ADD8, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedPoolService, sub_1DC120438);
    v0 = sub_1DC407588();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB2AE30);
  }
}

uint64_t sub_1DC12DC4C()
{
  return sub_1DC080808((unint64_t *)&unk_1EDB2AE20, (uint64_t (*)(uint64_t))sub_1DC12DB58, MEMORY[0x1E0D5AC10]);
}

void sub_1DC12DC68()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB2AD70)
  {
    type metadata accessor for ForYouFeedServiceConfig();
    sub_1DC11B178();
    sub_1DC080808(&qword_1EDB347D0, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedServiceConfig, (uint64_t)&unk_1DC431F70);
    v0 = sub_1DC407318();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB2AD70);
  }
}

void sub_1DC12DD08()
{
  uint64_t (*v0)(uint64_t);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1EDB2AD30)
  {
    sub_1DC4071B0();
    v0 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D53588];
    sub_1DC407198();
    sub_1DC080808(&qword_1EDB2ACF0, v0, MEMORY[0x1E0D53580]);
    v1 = sub_1DC4071C8();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1EDB2AD30);
  }
}

void sub_1DC12DDAC()
{
  uint64_t (*v0)(uint64_t);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1EDB2AD28)
  {
    sub_1DC40718C();
    v0 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D53320];
    sub_1DC4070B4();
    sub_1DC080808(&qword_1EDB2ACE8, v0, MEMORY[0x1E0D53318]);
    v1 = sub_1DC4071C8();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1EDB2AD28);
  }
}

void sub_1DC12DE50()
{
  uint64_t (*v0)(uint64_t);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1EDB2AD20)
  {
    sub_1DC407180();
    v0 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D53260];
    sub_1DC4071A4();
    sub_1DC080808(&qword_1EDB2ACE0, v0, MEMORY[0x1E0D53258]);
    v1 = sub_1DC4071C8();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1EDB2AD20);
  }
}

void sub_1DC12DEF4()
{
  uint64_t (*v0)(uint64_t);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1EDB2AD18)
  {
    sub_1DC407114();
    v0 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D530C0];
    sub_1DC4070B4();
    sub_1DC080808(&qword_1EDB2ACD8, v0, MEMORY[0x1E0D530B8]);
    v1 = sub_1DC4071C8();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1EDB2AD18);
  }
}

void sub_1DC12DF98()
{
  uint64_t (*v0)(uint64_t);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1EDB2AD10)
  {
    sub_1DC4070D8();
    v0 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D53030];
    sub_1DC407174();
    sub_1DC080808(&qword_1EDB2ACB8, v0, MEMORY[0x1E0D53028]);
    v1 = sub_1DC4071C8();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1EDB2AD10);
  }
}

void sub_1DC12E03C()
{
  uint64_t (*v0)(uint64_t);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1EDB2AD00)
  {
    sub_1DC407084();
    v0 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D52C40];
    sub_1DC407090();
    sub_1DC080808(&qword_1EDB2AC98, v0, MEMORY[0x1E0D52C38]);
    v1 = sub_1DC4071C8();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1EDB2AD00);
  }
}

unint64_t sub_1DC12E0E0()
{
  unint64_t result;

  result = qword_1EDB2ACC0;
  if (!qword_1EDB2ACC0)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EDB2ACC0);
  }
  return result;
}

uint64_t sub_1DC12E134()
{
  uint64_t v0;

  v0 = sub_1DC406FDC();
  __swift_allocate_value_buffer(v0, qword_1EDB5DE60);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EDB5DE60);
  return sub_1DC406FD0();
}

void sub_1DC12E1CC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB2AC60)
  {
    sub_1DC40124C();
    v0 = sub_1DC406F88();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB2AC60);
  }
}

uint64_t sub_1DC12E230()
{
  return sub_1DC081B48((unint64_t *)&unk_1EDB2AC50, 255, (uint64_t (*)(uint64_t))sub_1DC12E1CC, MEMORY[0x1E0C95FB8]);
}

uint64_t sub_1DC12E250(unint64_t *a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    sub_1DC0AC988(255, a2, a3, a4);
    result = MEMORY[0x1DF0CAB8C](MEMORY[0x1E0C95CB8], v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DC12E290(unint64_t *a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    sub_1DC0ACA34(255, a2, a3, a4);
    result = MEMORY[0x1DF0CAB8C](MEMORY[0x1E0C95CB8], v6);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1DC12E2D0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB2AC38)
  {
    sub_1DC08CBF0(255, &qword_1EDB2ABE8, (uint64_t (*)(uint64_t))sub_1DC12E538, sub_1DC12E5B0, MEMORY[0x1E0C958D0]);
    sub_1DC0ACADC();
    sub_1DC1EDC5C(&qword_1EDB2ABE0, &qword_1EDB2ABE8, (uint64_t (*)(uint64_t))sub_1DC12E538, sub_1DC12E5B0);
    sub_1DC080808(&qword_1EDB3F8C8, (uint64_t (*)(uint64_t))sub_1DC0ACADC, MEMORY[0x1E0DEF7F8]);
    v0 = sub_1DC406F64();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB2AC38);
  }
}

unint64_t sub_1DC12E3C4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EDB2AC20;
  if (!qword_1EDB2AC20)
  {
    sub_1DC08CBF0(255, &qword_1EDB2AC28, (uint64_t (*)(uint64_t))sub_1DC12E4F8, sub_1DC12E51C, MEMORY[0x1E0C95978]);
    result = MEMORY[0x1DF0CAB8C](MEMORY[0x1E0C95988], v1);
    atomic_store(result, (unint64_t *)&qword_1EDB2AC20);
  }
  return result;
}

void sub_1DC12E42C(uint64_t a1)
{
  sub_1DC08CBF0(a1, &qword_1EDB2AC18, (uint64_t (*)(uint64_t))sub_1DC12E1CC, sub_1DC12E230, MEMORY[0x1E0C95978]);
}

uint64_t sub_1DC12E450()
{
  return sub_1DC081B48(&qword_1EDB2AC10, 255, (uint64_t (*)(uint64_t))sub_1DC12E42C, MEMORY[0x1E0C95988]);
}

void sub_1DC12E470(uint64_t a1)
{
  sub_1DC08CBF0(a1, (unint64_t *)&unk_1EDB2AC00, (uint64_t (*)(uint64_t))sub_1DC12E42C, sub_1DC12E450, MEMORY[0x1E0C958D0]);
}

uint64_t sub_1DC12E494()
{
  return sub_1DC081B48((unint64_t *)&unk_1EDB2ABF0, 255, (uint64_t (*)(uint64_t))sub_1DC12E470, MEMORY[0x1E0C958E0]);
}

void sub_1DC12E4B4(uint64_t a1)
{
  sub_1DC08CBF0(a1, &qword_1EDB2ABE8, (uint64_t (*)(uint64_t))sub_1DC12E538, sub_1DC12E5B0, MEMORY[0x1E0C958D0]);
}

uint64_t sub_1DC12E4D8()
{
  return sub_1DC081B48(&qword_1EDB2ABE0, 255, (uint64_t (*)(uint64_t))sub_1DC12E4B4, MEMORY[0x1E0C958E0]);
}

void sub_1DC12E4F8(uint64_t a1)
{
  sub_1DC08CBF0(a1, &qword_1EDB2ABD8, (uint64_t (*)(uint64_t))sub_1DC12E5D0, sub_1DC12E660, MEMORY[0x1E0C958D0]);
}

uint64_t sub_1DC12E51C()
{
  return sub_1DC080808(&qword_1EDB2ABD0, (uint64_t (*)(uint64_t))sub_1DC12E4F8, MEMORY[0x1E0C958E0]);
}

void sub_1DC12E538()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB2ABC8)
  {
    sub_1DC12E470(255);
    sub_1DC4008EC();
    sub_1DC12E494();
    v0 = sub_1DC406F58();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB2ABC8);
  }
}

uint64_t sub_1DC12E5B0()
{
  return sub_1DC081B48(&qword_1EDB2ABC0, 255, (uint64_t (*)(uint64_t))sub_1DC12E538, MEMORY[0x1E0C95748]);
}

void sub_1DC12E5D0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB2ABB8)
  {
    sub_1DC12E1CC();
    sub_1DC083594(255, (unint64_t *)&qword_1EDB3F770, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1DC12E230();
    v0 = sub_1DC406F58();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB2ABB8);
  }
}

uint64_t sub_1DC12E660()
{
  return sub_1DC080808(&qword_1EDB2ABB0, (uint64_t (*)(uint64_t))sub_1DC12E5D0, MEMORY[0x1E0C95748]);
}

void sub_1DC12E67C()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EDB2AB48)
  {
    sub_1DC0FE574(255, (unint64_t *)&qword_1EDB2AB80, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790]);
    sub_1DC404984();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EDB2AB48);
  }
}

void sub_1DC12E6FC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB2AB40)
  {
    type metadata accessor for StockListModel(255);
    sub_1DC0D75BC();
    sub_1DC081B48(&qword_1EDB2D860, 255, type metadata accessor for StockListModel, (uint64_t)&unk_1DC41C258);
    v0 = sub_1DC406D48();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB2AB40);
  }
}

void sub_1DC12E7A0()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EDB2AB18)
  {
    sub_1DC0CC0A4(255, (unint64_t *)&qword_1EDB2AB40, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790]);
    sub_1DC404984();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EDB2AB18);
  }
}

void sub_1DC12E820()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB2AAD8)
  {
    type metadata accessor for TickerModel();
    sub_1DC0DDCD4();
    sub_1DC12C188();
    v0 = sub_1DC406D48();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB2AAD8);
  }
}

uint64_t sub_1DC12E8A4()
{
  return sub_1DC081B48(&qword_1EDB2AAD0, 255, (uint64_t (*)(uint64_t))sub_1DC12E820, MEMORY[0x1E0DBC7C8]);
}

void sub_1DC12E8C4()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EDB2AAC8)
  {
    sub_1DC0DDD18(255, (unint64_t *)&qword_1EDB2AAD8, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790]);
    sub_1DC404984();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EDB2AAC8);
  }
}

void sub_1DC12E944()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB2AAC0)
  {
    sub_1DC406B8C();
    v0 = sub_1DC4095A4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB2AAC0);
  }
}

unint64_t sub_1DC12E998()
{
  unint64_t result;

  result = qword_1EDB2AAA8;
  if (!qword_1EDB2AAA8)
  {
    sub_1DC0821D4(255, (unint64_t *)&qword_1EDB3F8B0);
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EDB2AAA8);
  }
  return result;
}

uint64_t sub_1DC12EA04(uint64_t a1)
{
  return sub_1DC0834AC(a1, 0xD000000000000026, 0x80000001DC449FD0, &qword_1EDB5DFA0);
}

uint64_t sub_1DC12EA28(uint64_t a1)
{
  return sub_1DC0834AC(a1, 0xD000000000000019, 0x80000001DC44A150, &qword_1EDB5DF98);
}

uint64_t sub_1DC12EA4C()
{
  void (*v0)(uint64_t);
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t result;
  uint64_t v7;

  v0 = (void (*)(uint64_t))MEMORY[0x1E0DAF0D0];
  sub_1DC089DA4(0, &qword_1EDB2A978, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF0D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DBC400]);
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v5 = (char *)&v7 - v4;
  sub_1DC13228C(0, &qword_1EDB29B70, v0, (void (*)(void))sub_1DC11EA24);
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DBC3F8], v2);
  result = sub_1DC406904();
  qword_1EDB5DF90 = result;
  return result;
}

uint64_t sub_1DC12EB30()
{
  void (*v0)(uint64_t);
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t result;
  uint64_t v7;

  v0 = (void (*)(uint64_t))MEMORY[0x1E0DAF270];
  sub_1DC089DA4(0, (unint64_t *)&unk_1EDB2A980, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF270], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DBC400]);
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v5 = (char *)&v7 - v4;
  sub_1DC132230(0, &qword_1EDB29B78, v0);
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DBC3F8], v2);
  result = sub_1DC406904();
  qword_1EDB5DE38 = result;
  return result;
}

uint64_t sub_1DC12EC04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t result;
  uint64_t v6;

  sub_1DC089DA4(0, &qword_1EDB2A948, type metadata accessor for SortWatchlistCommandContext, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DBC400]);
  v1 = v0;
  v2 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v4 = (char *)&v6 - v3;
  sub_1DC132230(0, &qword_1EDB29B58, (void (*)(uint64_t))type metadata accessor for SortWatchlistCommandContext);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E0DBC3F8], v1);
  result = sub_1DC406904();
  qword_1EDB5DF88 = result;
  return result;
}

uint64_t sub_1DC12ECD8(uint64_t a1)
{
  return sub_1DC0834AC(a1, 0xD000000000000017, 0x80000001DC44A130, &qword_1EDB5DF80);
}

uint64_t sub_1DC12ECFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t result;
  uint64_t v6;

  sub_1DC089DA4(0, &qword_1EDB2A970, type metadata accessor for ChangeWatchlistDisplayContext, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DBC400]);
  v1 = v0;
  v2 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v4 = (char *)&v6 - v3;
  sub_1DC132230(0, &qword_1EDB29B68, (void (*)(uint64_t))type metadata accessor for ChangeWatchlistDisplayContext);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E0DBC3F8], v1);
  result = sub_1DC406904();
  qword_1EDB5DF78 = result;
  return result;
}

uint64_t sub_1DC12EDD0(uint64_t a1)
{
  return sub_1DC0834AC(a1, 0xD00000000000002ALL, 0x80000001DC44A000, &qword_1EDB5DF70);
}

uint64_t sub_1DC12EDF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t result;
  uint64_t v6;

  sub_1DC089DA4(0, &qword_1EDB2A958, type metadata accessor for WatchlistMembershipCommandContext, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DBC400]);
  v1 = v0;
  v2 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v4 = (char *)&v6 - v3;
  sub_1DC13228C(0, &qword_1EDB29B60, (void (*)(uint64_t))type metadata accessor for WatchlistMembershipCommandContext, (void (*)(void))sub_1DC12A1B8);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E0DBC3F8], v1);
  result = sub_1DC406904();
  qword_1EDB5DF68 = result;
  return result;
}

uint64_t sub_1DC12EED8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t result;
  uint64_t v6;

  sub_1DC0835D8(0, (unint64_t *)&qword_1EDB2A990, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DBC400]);
  v1 = v0;
  v2 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v4 = (char *)&v6 - v3;
  sub_1DC0835D8(0, &qword_1EDB2A9C8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DBC428]);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E0DBC3F8], v1);
  result = sub_1DC406904();
  qword_1EDB5DF60 = result;
  return result;
}

uint64_t sub_1DC12EFA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t result;
  uint64_t v6;

  sub_1DC083594(0, (unint64_t *)&qword_1EDB2A990, MEMORY[0x1E0DEE9C0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DBC400]);
  v1 = v0;
  v2 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v4 = (char *)&v6 - v3;
  sub_1DC21F6EC();
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E0DBC3F8], v1);
  result = sub_1DC406904();
  qword_1EDB5E280 = result;
  return result;
}

uint64_t sub_1DC12F06C(uint64_t a1)
{
  return sub_1DC0834AC(a1, 0xD000000000000020, 0x80000001DC43DDC0, &qword_1EDB5DF40);
}

uint64_t sub_1DC12F090(uint64_t a1)
{
  return sub_1DC0834AC(a1, 0xD00000000000001ELL, 0x80000001DC43DE10, &qword_1EDB5DE30);
}

uint64_t sub_1DC12F0B4(uint64_t a1)
{
  return sub_1DC0834AC(a1, 0xD00000000000001DLL, 0x80000001DC43DDF0, &qword_1EDB5DF38);
}

uint64_t sub_1DC12F0D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t result;
  uint64_t v6;

  sub_1DC12F1DC();
  v1 = v0;
  v2 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC1321C8();
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E0DBC3F8], v1);
  result = sub_1DC406904();
  qword_1EDB5DF28 = result;
  return result;
}

void sub_1DC12F188()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB2A9C0)
  {
    sub_1DC406814();
    v0 = sub_1DC4068F8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB2A9C0);
  }
}

void sub_1DC12F1DC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB2A990)
  {
    v0 = sub_1DC4068E0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB2A990);
  }
}

void sub_1DC12F234()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB2A930)
  {
    v0 = sub_1DC4068A4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB2A930);
  }
}

void sub_1DC12F28C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB2A8A8)
  {
    sub_1DC0D8C20();
    type metadata accessor for StockSearchViewController(255);
    sub_1DC0D8CC8();
    sub_1DC081B48(&qword_1EDB36840, 255, type metadata accessor for StockSearchViewController, (uint64_t)&unk_1DC417320);
    v0 = sub_1DC406718();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB2A8A8);
  }
}

void sub_1DC12F33C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB2A890)
  {
    sub_1DC4061D8();
    sub_1DC0D8C20();
    type metadata accessor for StockSearchViewController(255);
    sub_1DC0D8CC8();
    sub_1DC081B48(&qword_1EDB36840, 255, type metadata accessor for StockSearchViewController, (uint64_t)&unk_1DC417320);
    v0 = sub_1DC4066AC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB2A890);
  }
}

void sub_1DC12F404()
{
  uint64_t (*v0)(void);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1EDB2A888)
  {
    sub_1DC4061D8();
    v0 = MEMORY[0x1E0DB80B8];
    sub_1DC0D7514(255, (unint64_t *)&unk_1EDB29EA0, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB80B8]);
    type metadata accessor for StockListViewController();
    sub_1DC0D9E18((unint64_t *)&qword_1EDB29E90, (unint64_t *)&unk_1EDB29EA0, (uint64_t (*)(uint64_t, _QWORD *))v0, MEMORY[0x1E0DB80D0]);
    sub_1DC081B48(&qword_1EDB35268, 255, (uint64_t (*)(uint64_t))type metadata accessor for StockListViewController, (uint64_t)&unk_1DC426A30);
    v1 = sub_1DC4066AC();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1EDB2A888);
  }
}

void sub_1DC12F504()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB2A860)
  {
    sub_1DC10B4F4();
    sub_1DC130F04();
    sub_1DC080808(&qword_1EDB2A200, (uint64_t (*)(uint64_t))sub_1DC10B4F4, MEMORY[0x1E0DB9998]);
    sub_1DC131048();
    v0 = sub_1DC406658();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB2A860);
  }
}

unint64_t sub_1DC12F5A8()
{
  unint64_t result;

  result = qword_1EDB2A850;
  if (!qword_1EDB2A850)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EDB2A850);
  }
  return result;
}

void sub_1DC12F5FC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB2A848)
  {
    sub_1DC130D7C();
    type metadata accessor for StockListBlueprintLayoutBuilder();
    sub_1DC13007C(255);
    sub_1DC081B48(&qword_1EDB2A260, 255, (uint64_t (*)(uint64_t))sub_1DC130D7C, MEMORY[0x1E0DB9998]);
    sub_1DC081B48(&qword_1EDB3A8A8, 255, (uint64_t (*)(uint64_t))type metadata accessor for StockListBlueprintLayoutBuilder, (uint64_t)&unk_1DC414F50);
    sub_1DC081B48(&qword_1EDB2A5D8, 255, (uint64_t (*)(uint64_t))sub_1DC13007C, MEMORY[0x1E0DBB3F8]);
    v0 = sub_1DC406634();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB2A848);
  }
}

void sub_1DC12F70C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB2A818)
  {
    sub_1DC0AEFF8();
    type metadata accessor for StockSearchBlueprintLayoutBuilder();
    sub_1DC1300C4();
    sub_1DC081B48(&qword_1EDB2A218, 255, (uint64_t (*)(uint64_t))sub_1DC0AEFF8, MEMORY[0x1E0DB9998]);
    sub_1DC081B48(&qword_1EDB3C228, 255, (uint64_t (*)(uint64_t))type metadata accessor for StockSearchBlueprintLayoutBuilder, (uint64_t)&unk_1DC426E84);
    sub_1DC081B48(&qword_1EDB2A5A8, 255, (uint64_t (*)(uint64_t))sub_1DC1300C4, MEMORY[0x1E0DBB3F8]);
    v0 = sub_1DC406634();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB2A818);
  }
}

void sub_1DC12F81C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB2A808)
  {
    sub_1DC10B4F4();
    type metadata accessor for ForYouFeedBlueprintLayoutBuilder();
    sub_1DC130194();
    sub_1DC080808(&qword_1EDB2A200, (uint64_t (*)(uint64_t))sub_1DC10B4F4, MEMORY[0x1E0DB9998]);
    sub_1DC080808((unint64_t *)&unk_1EDB3AC80, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedBlueprintLayoutBuilder, (uint64_t)&unk_1DC429360);
    sub_1DC080808(&qword_1EDB2A598, (uint64_t (*)(uint64_t))sub_1DC130194, MEMORY[0x1E0DBB3F8]);
    v0 = sub_1DC406634();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB2A808);
  }
}

void sub_1DC12F920(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;

  if (!*a2)
  {
    v9 = a3(255);
    v10 = a5(a1, v9, a4);
    if (!v11)
      atomic_store(v10, a2);
  }
}

void sub_1DC12F980()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB2A7A0)
  {
    sub_1DC130D7C();
    sub_1DC1312F8();
    sub_1DC081B48(&qword_1EDB2A260, 255, (uint64_t (*)(uint64_t))sub_1DC130D7C, MEMORY[0x1E0DB9998]);
    sub_1DC081B48(&qword_1EDB2A088, 255, (uint64_t (*)(uint64_t))sub_1DC1312F8, MEMORY[0x1E0DB9008]);
    v0 = sub_1DC40655C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB2A7A0);
  }
}

void sub_1DC12FA50(uint64_t a1)
{
  sub_1DC089DA4(a1, &qword_1EDB2A790, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedModel, MEMORY[0x1E0DBBC48]);
}

unint64_t sub_1DC12FA6C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_1EDB2A788;
  if (!qword_1EDB2A788)
  {
    sub_1DC12FA50(255);
    v2 = v1;
    v3 = sub_1DC080808((unint64_t *)&unk_1EDB2E060, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedModel, (uint64_t)&unk_1DC42EEF8);
    result = MEMORY[0x1DF0CAB8C](MEMORY[0x1E0DBBC50], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1EDB2A788);
  }
  return result;
}

void sub_1DC12FAE4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB2A768)
  {
    sub_1DC0D8C20();
    sub_1DC0AEFF8();
    type metadata accessor for StockSearchViewController(255);
    sub_1DC0D8CC8();
    sub_1DC081B48(&qword_1EDB2A218, 255, (uint64_t (*)(uint64_t))sub_1DC0AEFF8, MEMORY[0x1E0DB9998]);
    sub_1DC081B48(&qword_1EDB36840, 255, type metadata accessor for StockSearchViewController, (uint64_t)&unk_1DC417320);
    v0 = sub_1DC4064C0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB2A768);
  }
}

void sub_1DC12FBD4()
{
  uint64_t (*v0)(void);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1EDB2A758)
  {
    v0 = MEMORY[0x1E0DB80B8];
    sub_1DC0CC0A4(255, (unint64_t *)&unk_1EDB29EA0, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB80B8]);
    sub_1DC130D7C();
    type metadata accessor for StockListViewController();
    sub_1DC0D4244((unint64_t *)&qword_1EDB29E90, (unint64_t *)&unk_1EDB29EA0, (uint64_t (*)(uint64_t, _QWORD *))v0, MEMORY[0x1E0DB80D0]);
    sub_1DC080808(&qword_1EDB2A260, (uint64_t (*)(uint64_t))sub_1DC130D7C, MEMORY[0x1E0DB9998]);
    sub_1DC080808(&qword_1EDB35268, (uint64_t (*)(uint64_t))type metadata accessor for StockListViewController, (uint64_t)&unk_1DC426A30);
    v1 = sub_1DC4064C0();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1EDB2A758);
  }
}

unint64_t sub_1DC12FCEC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EDB2A740;
  if (!qword_1EDB2A740)
  {
    sub_1DC089DA4(255, &qword_1EDB2A748, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedModel, MEMORY[0x1E0DBBA68]);
    result = MEMORY[0x1DF0CAB8C](MEMORY[0x1E0DBBA70], v1);
    atomic_store(result, (unint64_t *)&qword_1EDB2A740);
  }
  return result;
}

void sub_1DC12FD4C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB2A728)
  {
    sub_1DC0C5214();
    sub_1DC10B4F4();
    sub_1DC10B280();
    sub_1DC080808(&qword_1EDB2A200, (uint64_t (*)(uint64_t))sub_1DC10B4F4, MEMORY[0x1E0DB9998]);
    v0 = sub_1DC4062D4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB2A728);
  }
}

void sub_1DC12FDF8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB2A700)
  {
    sub_1DC0AE018(255);
    sub_1DC0AE0F4(255);
    sub_1DC0ADECC();
    sub_1DC080808(&qword_1EDB2A230, (uint64_t (*)(uint64_t))sub_1DC0AE0F4, MEMORY[0x1E0DB9998]);
    v0 = sub_1DC4062D4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB2A700);
  }
}

void sub_1DC12FEA4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB2A6D0)
  {
    sub_1DC0C5214();
    sub_1DC10B4F4();
    type metadata accessor for ForYouFeedBlueprintViewCellProvider();
    type metadata accessor for ForYouFeedBlueprintViewSupplementaryViewProvider();
    sub_1DC10B280();
    sub_1DC080808(&qword_1EDB2A200, (uint64_t (*)(uint64_t))sub_1DC10B4F4, MEMORY[0x1E0DB9998]);
    sub_1DC080808(&qword_1EDB3CDF0, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedBlueprintViewCellProvider, (uint64_t)&unk_1DC423AFC);
    sub_1DC080808(&qword_1EDB2B3E8, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedBlueprintViewSupplementaryViewProvider, (uint64_t)&unk_1DC41419C);
    sub_1DC080808((unint64_t *)&unk_1EDB32A70, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedLayoutModel, (uint64_t)&unk_1DC430478);
    v0 = sub_1DC406178();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB2A6D0);
  }
}

void sub_1DC12FFEC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, _QWORD *))
{
  unint64_t v10;
  uint64_t v11;
  _QWORD v12[4];

  if (!*a2)
  {
    v12[0] = &type metadata for StockListLayoutSectionDescriptor;
    v12[1] = type metadata accessor for StockListLayoutModel();
    v12[2] = a3();
    v12[3] = a4();
    v10 = a5(a1, v12);
    if (!v11)
      atomic_store(v10, a2);
  }
}

void sub_1DC13007C(uint64_t a1)
{
  sub_1DC12FFEC(a1, &qword_1EDB2A5E0, (uint64_t (*)(void))sub_1DC117078, sub_1DC12018C, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBB3F0]);
}

void sub_1DC1300A0(uint64_t a1)
{
  sub_1DC09A738(a1, &qword_1EDB2A5C0, (uint64_t (*)(void))sub_1DC118258, sub_1DC124A5C, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBB3F0]);
}

void sub_1DC1300C4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB2A5B0)
  {
    type metadata accessor for StockSearchLayoutSectionDescriptor();
    type metadata accessor for StockSearchLayoutModel();
    sub_1DC081B48(&qword_1EDB3CB88, 255, (uint64_t (*)(uint64_t))type metadata accessor for StockSearchLayoutSectionDescriptor, (uint64_t)&unk_1DC419E18);
    sub_1DC081B48(&qword_1EDB340B8, 255, (uint64_t (*)(uint64_t))type metadata accessor for StockSearchLayoutModel, (uint64_t)&unk_1DC422BA8);
    v0 = sub_1DC4060C4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB2A5B0);
  }
}

void sub_1DC130194()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB2A5A0)
  {
    type metadata accessor for ForYouFeedLayoutSectionDescriptor(255);
    type metadata accessor for ForYouFeedLayoutModel();
    sub_1DC080808(&qword_1EDB3BAD8, type metadata accessor for ForYouFeedLayoutSectionDescriptor, (uint64_t)&unk_1DC42E530);
    sub_1DC080808((unint64_t *)&unk_1EDB32A70, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedLayoutModel, (uint64_t)&unk_1DC430478);
    v0 = sub_1DC4060C4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB2A5A0);
  }
}

void sub_1DC13025C()
{
  uint64_t (*v0)(void);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1EDB2A588)
  {
    v0 = MEMORY[0x1E0DB80B8];
    sub_1DC0D7514(255, (unint64_t *)&unk_1EDB29EA0, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB80B8]);
    sub_1DC130D7C();
    sub_1DC1312F8();
    sub_1DC0D9E18((unint64_t *)&qword_1EDB29E90, (unint64_t *)&unk_1EDB29EA0, (uint64_t (*)(uint64_t, _QWORD *))v0, MEMORY[0x1E0DB80D0]);
    sub_1DC081B48(&qword_1EDB2A260, 255, (uint64_t (*)(uint64_t))sub_1DC130D7C, MEMORY[0x1E0DB9998]);
    sub_1DC081B48(&qword_1EDB2A088, 255, (uint64_t (*)(uint64_t))sub_1DC1312F8, MEMORY[0x1E0DB9008]);
    v1 = sub_1DC406058();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1EDB2A588);
  }
}

unint64_t sub_1DC13037C()
{
  unint64_t result;

  result = qword_1EDB2A578;
  if (!qword_1EDB2A578)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EDB2A578);
  }
  return result;
}

void sub_1DC1303D0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB2A558)
  {
    sub_1DC0C5214();
    sub_1DC10B4F4();
    type metadata accessor for ForYouFeedViewController();
    sub_1DC10B280();
    sub_1DC080808(&qword_1EDB2A200, (uint64_t (*)(uint64_t))sub_1DC10B4F4, MEMORY[0x1E0DB9998]);
    sub_1DC080808((unint64_t *)&unk_1EDB359B0, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedViewController, (uint64_t)&unk_1DC42C71C);
    sub_1DC080808((unint64_t *)&unk_1EDB32A70, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedLayoutModel, (uint64_t)&unk_1DC430478);
    v0 = sub_1DC405FE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB2A558);
  }
}

void sub_1DC1304DC()
{
  uint64_t (*v0)(void);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1EDB2A540)
  {
    v0 = MEMORY[0x1E0DB80B8];
    sub_1DC0CC0A4(255, (unint64_t *)&unk_1EDB29EA0, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB80B8]);
    sub_1DC130D7C();
    type metadata accessor for StockListViewController();
    sub_1DC0D4244((unint64_t *)&qword_1EDB29E90, (unint64_t *)&unk_1EDB29EA0, (uint64_t (*)(uint64_t, _QWORD *))v0, MEMORY[0x1E0DB80D0]);
    sub_1DC080808(&qword_1EDB2A260, (uint64_t (*)(uint64_t))sub_1DC130D7C, MEMORY[0x1E0DB9998]);
    sub_1DC080808(&qword_1EDB35268, (uint64_t (*)(uint64_t))type metadata accessor for StockListViewController, (uint64_t)&unk_1DC426A30);
    sub_1DC080808(&qword_1EDB32488, (uint64_t (*)(uint64_t))type metadata accessor for StockListLayoutModel, (uint64_t)&unk_1DC414968);
    v1 = sub_1DC405FE0();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1EDB2A540);
  }
}

void sub_1DC130618()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB2A518)
  {
    sub_1DC0AE018(255);
    sub_1DC0AE0F4(255);
    type metadata accessor for TickerViewController();
    sub_1DC0ADECC();
    sub_1DC080808(&qword_1EDB2A230, (uint64_t (*)(uint64_t))sub_1DC0AE0F4, MEMORY[0x1E0DB9998]);
    sub_1DC080808(&qword_1EDB325E8, (uint64_t (*)(uint64_t))type metadata accessor for TickerViewController, (uint64_t)&unk_1DC42D038);
    sub_1DC124A5C();
    v0 = sub_1DC405FE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB2A518);
  }
}

void sub_1DC13070C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB2A508)
  {
    type metadata accessor for StockSearchSectionDescriptor();
    type metadata accessor for StockSearchModel();
    sub_1DC081B48(&qword_1EDB389D0, 255, (uint64_t (*)(uint64_t))type metadata accessor for StockSearchSectionDescriptor, (uint64_t)&unk_1DC41CD30);
    sub_1DC125B3C();
    v0 = sub_1DC405F74();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB2A508);
  }
}

unint64_t sub_1DC1307B4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EDB2A4E0;
  if (!qword_1EDB2A4E0)
  {
    sub_1DC0AE268(255, &qword_1EDB2A4E8, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBB1C8]);
    result = MEMORY[0x1DF0CAB8C](MEMORY[0x1E0DBB1D0], v1);
    atomic_store(result, (unint64_t *)&qword_1EDB2A4E0);
  }
  return result;
}

void sub_1DC13080C(uint64_t a1)
{
  sub_1DC08CBF0(a1, &qword_1EDB2A4D8, type metadata accessor for StocksActivity, sub_1DC08CDA4, MEMORY[0x1E0DBAEC8]);
}

void sub_1DC130830()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB2A4D0)
  {
    type metadata accessor for StockListSectionHeaderView();
    sub_1DC080808(&qword_1EDB37040, (uint64_t (*)(uint64_t))type metadata accessor for StockListSectionHeaderView, (uint64_t)&unk_1DC413634);
    v0 = sub_1DC405E18();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB2A4D0);
  }
}

void sub_1DC1308A8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB27588)
  {
    sub_1DC4061D8();
    v0 = sub_1DC405DD0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB27588);
  }
}

void sub_1DC130904()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB2A470)
  {
    type metadata accessor for StockSearchSectionDescriptor();
    type metadata accessor for StockSearchModel();
    sub_1DC081B48(&qword_1EDB389D0, 255, (uint64_t (*)(uint64_t))type metadata accessor for StockSearchSectionDescriptor, (uint64_t)&unk_1DC41CD30);
    sub_1DC125B3C();
    v0 = sub_1DC405B48();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB2A470);
  }
}

void sub_1DC1309AC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB2A468)
  {
    type metadata accessor for ForYouFeedSectionDescriptor();
    type metadata accessor for ForYouFeedModel();
    sub_1DC080808(&qword_1EDB37600, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedSectionDescriptor, (uint64_t)&unk_1DC425AEC);
    sub_1DC080808((unint64_t *)&unk_1EDB2E070, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedModel, (uint64_t)&unk_1DC42ED60);
    v0 = sub_1DC405B48();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB2A468);
  }
}

void sub_1DC130A74(uint64_t a1)
{
  sub_1DC089DA4(a1, &qword_1EDB2A3D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DBA2A8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

unint64_t sub_1DC130A90()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EDB2A328;
  if (!qword_1EDB2A328)
  {
    sub_1DC08CBF0(255, (unint64_t *)&unk_1EDB2A330, (uint64_t (*)(uint64_t))sub_1DC130F04, sub_1DC131048, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB9DC0]);
    result = MEMORY[0x1DF0CAB8C](MEMORY[0x1E0DB9DC8], v1);
    atomic_store(result, (unint64_t *)&qword_1EDB2A328);
  }
  return result;
}

void sub_1DC130AF8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB2A310)
  {
    sub_1DC1312F8();
    sub_1DC081B48(&qword_1EDB2A088, 255, (uint64_t (*)(uint64_t))sub_1DC1312F8, MEMORY[0x1E0DB9008]);
    v0 = sub_1DC4057C4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB2A310);
  }
}

void sub_1DC130B74()
{
  uint64_t (*v0)(void);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1EDB2A2C0)
  {
    v0 = MEMORY[0x1E0DB80B8];
    sub_1DC0D7514(255, (unint64_t *)&unk_1EDB29EA0, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB80B8]);
    sub_1DC1312F8();
    type metadata accessor for StockListViewController();
    sub_1DC0D9E18((unint64_t *)&qword_1EDB29E90, (unint64_t *)&unk_1EDB29EA0, (uint64_t (*)(uint64_t, _QWORD *))v0, MEMORY[0x1E0DB80D0]);
    sub_1DC081B48(&qword_1EDB2A088, 255, (uint64_t (*)(uint64_t))sub_1DC1312F8, MEMORY[0x1E0DB9008]);
    sub_1DC081B48(&qword_1EDB35268, 255, (uint64_t (*)(uint64_t))type metadata accessor for StockListViewController, (uint64_t)&unk_1DC426A30);
    v1 = sub_1DC405644();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1EDB2A2C0);
  }
}

void sub_1DC130C94()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB2A298)
  {
    sub_1DC0AE018(255);
    sub_1DC131064();
    type metadata accessor for TickerViewController();
    sub_1DC0ADECC();
    sub_1DC080808(&qword_1EDB2A0A8, (uint64_t (*)(uint64_t))sub_1DC131064, MEMORY[0x1E0DB9008]);
    sub_1DC080808(&qword_1EDB325E8, (uint64_t (*)(uint64_t))type metadata accessor for TickerViewController, (uint64_t)&unk_1DC42D038);
    v0 = sub_1DC405644();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB2A298);
  }
}

void sub_1DC130D7C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB2A268)
  {
    type metadata accessor for StockListLayoutModel();
    sub_1DC108E64();
    sub_1DC080808(&qword_1EDB32480, (uint64_t (*)(uint64_t))type metadata accessor for StockListLayoutModel, (uint64_t)&unk_1DC414930);
    v0 = sub_1DC405524();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB2A268);
  }
}

void sub_1DC130E1C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB2A1D0)
  {
    type metadata accessor for ForYouFeedViewController();
    sub_1DC080808(&qword_1EDB359C0, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedViewController, (uint64_t)&unk_1DC42C538);
    v0 = sub_1DC405488();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB2A1D0);
  }
}

void sub_1DC130E94(uint64_t a1)
{
  sub_1DC089DA4(a1, &qword_1EDB2A140, (uint64_t (*)(uint64_t))sub_1DC104584, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

void sub_1DC130EB0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB2A100)
  {
    sub_1DC4052FC();
    v0 = sub_1DC4095A4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB2A100);
  }
}

void sub_1DC130F04()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB2A0D0)
  {
    sub_1DC0821D4(255, (unint64_t *)&qword_1EDB3F8A0);
    sub_1DC12FEA4();
    sub_1DC1303D0();
    sub_1DC12FD4C();
    type metadata accessor for ForYouFeedViewController();
    sub_1DC080808((unint64_t *)&unk_1EDB2A6C0, (uint64_t (*)(uint64_t))sub_1DC12FEA4, MEMORY[0x1E0DBB5A8]);
    sub_1DC080808((unint64_t *)&unk_1EDB2A548, (uint64_t (*)(uint64_t))sub_1DC1303D0, MEMORY[0x1E0DBB230]);
    sub_1DC080808(&qword_1EDB2A720, (uint64_t (*)(uint64_t))sub_1DC12FD4C, MEMORY[0x1E0DBB950]);
    v0 = sub_1DC405080();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB2A0D0);
  }
}

uint64_t sub_1DC131048()
{
  return sub_1DC080808(&qword_1EDB2A0C8, (uint64_t (*)(uint64_t))sub_1DC130F04, MEMORY[0x1E0DB9008]);
}

void sub_1DC131064()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB2A0B0)
  {
    sub_1DC0821D4(255, (unint64_t *)&qword_1EDB3F8A0);
    sub_1DC0ADEE8();
    sub_1DC130618();
    sub_1DC12FDF8();
    type metadata accessor for TickerViewController();
    sub_1DC080808(&qword_1EDB2A680, (uint64_t (*)(uint64_t))sub_1DC0ADEE8, MEMORY[0x1E0DBB5A8]);
    sub_1DC080808(&qword_1EDB2A510, (uint64_t (*)(uint64_t))sub_1DC130618, MEMORY[0x1E0DBB230]);
    sub_1DC080808(&qword_1EDB2A6F8, (uint64_t (*)(uint64_t))sub_1DC12FDF8, MEMORY[0x1E0DBB950]);
    v0 = sub_1DC405080();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB2A0B0);
  }
}

void sub_1DC1311A8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB2A0A0)
  {
    sub_1DC0821D4(255, (unint64_t *)&qword_1EDB3F8A0);
    sub_1DC0AEA68();
    sub_1DC0AE950();
    sub_1DC12FAE4();
    type metadata accessor for StockSearchViewController(255);
    sub_1DC081B48(&qword_1EDB2A7E0, 255, (uint64_t (*)(uint64_t))sub_1DC0AEA68, MEMORY[0x1E0DBBF58]);
    sub_1DC081B48(&qword_1EDB2A560, 255, (uint64_t (*)(uint64_t))sub_1DC0AE950, MEMORY[0x1E0DBB230]);
    sub_1DC081B48(&qword_1EDB2A760, 255, (uint64_t (*)(uint64_t))sub_1DC12FAE4, MEMORY[0x1E0DBBBE8]);
    v0 = sub_1DC405080();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB2A0A0);
  }
}

void sub_1DC1312F8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB2A090)
  {
    sub_1DC0821D4(255, (unint64_t *)&qword_1EDB3F8A0);
    sub_1DC09529C();
    sub_1DC1304DC();
    sub_1DC12FBD4();
    type metadata accessor for StockListViewController();
    sub_1DC080808(&qword_1EDB2A7D0, (uint64_t (*)(uint64_t))sub_1DC09529C, MEMORY[0x1E0DBBF58]);
    sub_1DC080808(&qword_1EDB2A538, (uint64_t (*)(uint64_t))sub_1DC1304DC, MEMORY[0x1E0DBB230]);
    sub_1DC080808(&qword_1EDB2A750, (uint64_t (*)(uint64_t))sub_1DC12FBD4, MEMORY[0x1E0DBBBE8]);
    v0 = sub_1DC405080();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB2A090);
  }
}

void sub_1DC13143C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB2A078)
  {
    type metadata accessor for StockListModel(255);
    sub_1DC0D75BC();
    sub_1DC080808(&qword_1EDB2D860, type metadata accessor for StockListModel, (uint64_t)&unk_1DC41C258);
    v0 = sub_1DC405020();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB2A078);
  }
}

unint64_t sub_1DC1314DC()
{
  unint64_t result;

  result = qword_1EDB2A068;
  if (!qword_1EDB2A068)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EDB2A068);
  }
  return result;
}

uint64_t sub_1DC131530(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1DC132688(0, &qword_1EDB2A060, (unint64_t *)&qword_1EDB2A050, MEMORY[0x1E0DB8CD0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1DC131594()
{
  unint64_t result;

  result = qword_1EDB2A050;
  if (!qword_1EDB2A050)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EDB2A050);
  }
  return result;
}

void sub_1DC1315E8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB2A040)
  {
    type metadata accessor for StocksActivity(255);
    type metadata accessor for StocksV2UserActivitySerializer();
    sub_1DC081B48(&qword_1EDB2C100, 255, (uint64_t (*)(uint64_t))type metadata accessor for StocksV2UserActivitySerializer, (uint64_t)&unk_1DC426570);
    v0 = sub_1DC404F18();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB2A040);
  }
}

void sub_1DC13167C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB2A018)
  {
    sub_1DC10B4F4();
    type metadata accessor for ForYouFeedBlueprintCellPrefetcher();
    sub_1DC080808(&qword_1EDB2A200, (uint64_t (*)(uint64_t))sub_1DC10B4F4, MEMORY[0x1E0DB9998]);
    sub_1DC080808(&qword_1EDB3B5E0, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedBlueprintCellPrefetcher, (uint64_t)&unk_1DC421CD4);
    sub_1DC080808(&qword_1EDB32A90, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedLayoutModel, (uint64_t)&unk_1DC430668);
    sub_1DC080808((unint64_t *)&unk_1EDB32A80, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedLayoutModel, (uint64_t)&unk_1DC430518);
    v0 = sub_1DC404E10();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB2A018);
  }
}

uint64_t sub_1DC131790(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

void sub_1DC1317D8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB29FA0)
  {
    type metadata accessor for PlacardView();
    sub_1DC080808(&qword_1EDB2CA38, (uint64_t (*)(uint64_t))type metadata accessor for PlacardView, (uint64_t)&unk_1DC41B24C);
    v0 = sub_1DC404C3C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB29FA0);
  }
}

void sub_1DC131850()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB29F68)
  {
    type metadata accessor for StockSearchSectionDescriptor();
    type metadata accessor for StockSearchModel();
    sub_1DC1311A8();
    sub_1DC081B48(&qword_1EDB389D0, 255, (uint64_t (*)(uint64_t))type metadata accessor for StockSearchSectionDescriptor, (uint64_t)&unk_1DC41CD30);
    sub_1DC125B3C();
    sub_1DC081B48(&qword_1EDB2A098, 255, (uint64_t (*)(uint64_t))sub_1DC1311A8, MEMORY[0x1E0DB9008]);
    v0 = sub_1DC404BD0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB29F68);
  }
}

void sub_1DC131940()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB29F58)
  {
    type metadata accessor for ForYouFeedSectionDescriptor();
    type metadata accessor for ForYouFeedModel();
    sub_1DC130F04();
    sub_1DC080808(&qword_1EDB37600, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedSectionDescriptor, (uint64_t)&unk_1DC425AEC);
    sub_1DC080808((unint64_t *)&unk_1EDB2E070, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedModel, (uint64_t)&unk_1DC42ED60);
    sub_1DC131048();
    v0 = sub_1DC404BD0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB29F58);
  }
}

void sub_1DC131A20()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB29F40)
  {
    type metadata accessor for StockListModel(255);
    sub_1DC1312F8();
    sub_1DC0D75BC();
    sub_1DC081B48(&qword_1EDB2D860, 255, type metadata accessor for StockListModel, (uint64_t)&unk_1DC41C258);
    sub_1DC081B48(&qword_1EDB2A088, 255, (uint64_t (*)(uint64_t))sub_1DC1312F8, MEMORY[0x1E0DB9008]);
    v0 = sub_1DC404BD0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB29F40);
  }
}

void sub_1DC131B04()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB29F20)
  {
    type metadata accessor for TickerModel();
    sub_1DC131064();
    sub_1DC0DDCD4();
    sub_1DC080808(&qword_1EDB2CA50, (uint64_t (*)(uint64_t))type metadata accessor for TickerModel, (uint64_t)&unk_1DC4278A0);
    sub_1DC080808(&qword_1EDB2A0A8, (uint64_t (*)(uint64_t))sub_1DC131064, MEMORY[0x1E0DB9008]);
    v0 = sub_1DC404BD0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB29F20);
  }
}

void sub_1DC131BE0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB29E48)
  {
    sub_1DC0D8C20();
    sub_1DC131850();
    sub_1DC0D8CC8();
    sub_1DC081B48(&qword_1EDB29F60, 255, (uint64_t (*)(uint64_t))sub_1DC131850, MEMORY[0x1E0DB8440]);
    v0 = sub_1DC4049FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB29E48);
  }
}

void sub_1DC131C90()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB29E40)
  {
    sub_1DC0C5214();
    sub_1DC131940();
    sub_1DC10B280();
    sub_1DC080808(&qword_1EDB29F50, (uint64_t (*)(uint64_t))sub_1DC131940, MEMORY[0x1E0DB8440]);
    v0 = sub_1DC4049FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB29E40);
  }
}

void sub_1DC131D3C()
{
  uint64_t (*v0)(void);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1EDB29E38)
  {
    v0 = MEMORY[0x1E0DB80B8];
    sub_1DC0D7514(255, (unint64_t *)&unk_1EDB29EA0, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB80B8]);
    sub_1DC131A20();
    sub_1DC0D9E18((unint64_t *)&qword_1EDB29E90, (unint64_t *)&unk_1EDB29EA0, (uint64_t (*)(uint64_t, _QWORD *))v0, MEMORY[0x1E0DB80D0]);
    sub_1DC081B48(&qword_1EDB29F38, 255, (uint64_t (*)(uint64_t))sub_1DC131A20, MEMORY[0x1E0DB8440]);
    v1 = sub_1DC4049FC();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1EDB29E38);
  }
}

void sub_1DC131E1C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB29E28)
  {
    sub_1DC0AE018(255);
    sub_1DC131B04();
    sub_1DC0ADECC();
    sub_1DC080808(&qword_1EDB29F18, (uint64_t (*)(uint64_t))sub_1DC131B04, MEMORY[0x1E0DB8440]);
    v0 = sub_1DC4049FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB29E28);
  }
}

void sub_1DC131EC8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB29E10)
  {
    type metadata accessor for StockListModel(255);
    sub_1DC0D75BC();
    sub_1DC080808(&qword_1EDB2D860, type metadata accessor for StockListModel, (uint64_t)&unk_1DC41C258);
    v0 = sub_1DC4049A8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB29E10);
  }
}

void sub_1DC131F68()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB29DE8)
  {
    type metadata accessor for TickerModel();
    sub_1DC0DDCD4();
    sub_1DC080808(&qword_1EDB2CA50, (uint64_t (*)(uint64_t))type metadata accessor for TickerModel, (uint64_t)&unk_1DC4278A0);
    v0 = sub_1DC4049A8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB29DE8);
  }
}

void sub_1DC132008()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB29D30)
  {
    type metadata accessor for TickerModel();
    sub_1DC0DDCD4();
    sub_1DC12C188();
    v0 = sub_1DC4047B0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB29D30);
  }
}

uint64_t sub_1DC13208C()
{
  return sub_1DC081B48(&qword_1EDB29D28, 255, (uint64_t (*)(uint64_t))sub_1DC132008, MEMORY[0x1E0DB7B98]);
}

void sub_1DC1320AC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB29CD0)
  {
    sub_1DC4046D8();
    v0 = sub_1DC4095A4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB29CD0);
  }
}

uint64_t sub_1DC132100()
{
  uint64_t v0;

  v0 = sub_1DC4044EC();
  __swift_allocate_value_buffer(v0, qword_1EDB29C70);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EDB29C70);
  return sub_1DC4044E0();
}

unint64_t sub_1DC132174()
{
  unint64_t result;

  result = qword_1EDB29C68;
  if (!qword_1EDB29C68)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EDB29C68);
  }
  return result;
}

void sub_1DC1321C8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB29B80)
  {
    v0 = sub_1DC4042F4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB29B80);
  }
}

void sub_1DC132230(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_1DC4042F4();
    if (!v5)
      atomic_store(v4, a2);
  }
}

void sub_1DC13228C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    a3(255);
    a4();
    v6 = sub_1DC4042F4();
    if (!v7)
      atomic_store(v6, a2);
  }
}

void sub_1DC132300()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB29B50)
  {
    type metadata accessor for StocksActivity(255);
    sub_1DC080808((unint64_t *)&unk_1EDB2C5A0, type metadata accessor for StocksActivity, (uint64_t)&protocol conformance descriptor for StocksActivity);
    v0 = sub_1DC404258();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB29B50);
  }
}

uint64_t sub_1DC132378(uint64_t a1)
{
  return sub_1DC08E0F8(a1, qword_1EDB29AD8);
}

uint64_t static Logger.widgetRefresh.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC1323C0(&qword_1EDB29AF8, (uint64_t)qword_1EDB29AD8, a1);
}

uint64_t sub_1DC1323C0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;

  if (*a1 != -1)
    swift_once();
  v5 = sub_1DC403F64();
  v6 = __swift_project_value_buffer(v5, a2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a3, v6, v5);
}

uint64_t sub_1DC132428(uint64_t a1)
{
  return sub_1DC08E0F8(a1, qword_1EDB5DDD0);
}

void sub_1DC13244C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB299F0)
  {
    sub_1DC403DA8();
    v0 = sub_1DC4095A4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB299F0);
  }
}

unint64_t sub_1DC1324A0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EDB29950;
  if (!qword_1EDB29950)
  {
    v1 = sub_1DC403A54();
    result = MEMORY[0x1DF0CAB8C](MEMORY[0x1E0DADDB0], v1);
    atomic_store(result, (unint64_t *)&qword_1EDB29950);
  }
  return result;
}

void sub_1DC1324E8(uint64_t a1)
{
  sub_1DC089DA4(a1, (unint64_t *)&unk_1EDB29740, (uint64_t (*)(uint64_t))MEMORY[0x1E0DACE08], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

void sub_1DC132504()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB29708)
  {
    v0 = sub_1DC402DAC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB29708);
  }
}

void sub_1DC13255C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB296F8)
  {
    sub_1DC0821D4(255, (unint64_t *)&qword_1EDB284C8);
    v0 = sub_1DC402DAC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB296F8);
  }
}

void sub_1DC1325C0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB29610)
  {
    v0 = sub_1DC402C20();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB29610);
  }
}

void sub_1DC132624()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB295E8)
  {
    sub_1DC0821D4(255, (unint64_t *)&unk_1EDB3F8F8);
    v0 = sub_1DC402BFC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB295E8);
  }
}

void sub_1DC132688(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    v8 = sub_1DC096268(255, a3);
    v9 = a5(a1, v8);
    if (!v10)
      atomic_store(v9, a2);
  }
}

void sub_1DC1326EC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB29580)
  {
    sub_1DC0CC0A4(255, (unint64_t *)&qword_1EDB29D98, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60]);
    sub_1DC0CBFB8((unint64_t *)&unk_1EDB29D70, MEMORY[0x1E0DB7B88]);
    sub_1DC0CBFB8(&qword_1EDB29D68, MEMORY[0x1E0DB7B80]);
    v0 = sub_1DC4028E4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB29580);
  }
}

void sub_1DC132790()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB29550)
  {
    sub_1DC0F8190();
    sub_1DC080808(&qword_1EDB29BD8, (uint64_t (*)(uint64_t))sub_1DC0F8190, MEMORY[0x1E0DB6F08]);
    sub_1DC080808(&qword_1EDB29BD0, (uint64_t (*)(uint64_t))sub_1DC0F8190, MEMORY[0x1E0DB6EF8]);
    v0 = sub_1DC4028E4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB29550);
  }
}

uint64_t sub_1DC132834()
{
  uint64_t v0;

  v0 = sub_1DC402890();
  __swift_allocate_value_buffer(v0, qword_1EDB29510);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EDB29510);
  return sub_1DC402884();
}

uint64_t sub_1DC132890()
{
  uint64_t v0;

  v0 = sub_1DC402890();
  __swift_allocate_value_buffer(v0, qword_1EDB294E8);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EDB294E8);
  return sub_1DC402884();
}

uint64_t sub_1DC1328F0()
{
  uint64_t v0;

  v0 = sub_1DC402890();
  __swift_allocate_value_buffer(v0, qword_1EDB294C8);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EDB294C8);
  return sub_1DC402884();
}

void sub_1DC132950()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB29488)
  {
    type metadata accessor for TickerViewController();
    sub_1DC0B5BAC();
    v0 = sub_1DC402800();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB29488);
  }
}

void sub_1DC1329B8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB29470)
  {
    v0 = sub_1DC4027DC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB29470);
  }
}

void sub_1DC132A10()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB29460)
  {
    type metadata accessor for StockListSelectionModel();
    v0 = sub_1DC402770();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB29460);
  }
}

void sub_1DC132A64()
{
  uint64_t (*v0)(uint64_t);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1EDB29440)
  {
    v0 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DBA2A8];
    sub_1DC089DA4(255, &qword_1EDB3F6F8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DBA2A8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1DC11300C((unint64_t *)&unk_1EDB3F700, &qword_1EDB3F6F8, v0, MEMORY[0x1E0DEAF50]);
    v1 = sub_1DC4026F8();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1EDB29440);
  }
}

void sub_1DC132B04(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, _QWORD, uint64_t, _QWORD))
{
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    v7 = a3(255);
    v8 = a4(a1, MEMORY[0x1E0DEA968], v7, MEMORY[0x1E0DEA978]);
    if (!v9)
      atomic_store(v8, a2);
  }
}

void sub_1DC132B6C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB29418)
  {
    sub_1DC400514();
    v0 = sub_1DC4026C8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB29418);
  }
}

void sub_1DC132BD0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB293E0)
  {
    sub_1DC0B5BAC();
    v0 = sub_1DC402584();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB293E0);
  }
}

unint64_t sub_1DC132C28()
{
  unint64_t result;

  result = qword_1EDB274B8;
  if (!qword_1EDB274B8)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EDB274B8);
  }
  return result;
}

unint64_t sub_1DC132C7C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EDB291B0;
  if (!qword_1EDB291B0)
  {
    sub_1DC08CBF0(255, &qword_1EDB291C0, (uint64_t (*)(uint64_t))type metadata accessor for StocksAudioTrack, sub_1DC12D218, MEMORY[0x1E0D56D08]);
    result = MEMORY[0x1DF0CAB8C](MEMORY[0x1E0D56D18], v1);
    atomic_store(result, (unint64_t *)&qword_1EDB291B0);
  }
  return result;
}

uint64_t sub_1DC132CE4()
{
  uint64_t result;

  sub_1DC132BD0();
  swift_allocObject();
  result = sub_1DC402578();
  qword_1EDB29168 = result;
  return result;
}

uint64_t _s12AppAnalytics7TrackerC8StocksUIE15appEventManager13TeaFoundation0gH0CyAD0aG0OGvg_0()
{
  if (qword_1EDB29178 != -1)
    swift_once();
  return swift_retain();
}

unint64_t sub_1DC132D64()
{
  unint64_t result;

  result = qword_1EDB29130;
  if (!qword_1EDB29130)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EDB29130);
  }
  return result;
}

void sub_1DC132DB8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB29110)
  {
    v0 = sub_1DC40139C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB29110);
  }
}

void sub_1DC132E14()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB29100)
  {
    sub_1DC4012E8();
    sub_1DC132F2C();
    v0 = sub_1DC40139C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB29100);
  }
}

void sub_1DC132E74()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F034EDE8)
  {
    sub_1DC1335C0();
    v0 = sub_1DC40139C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1F034EDE8);
  }
}

void sub_1DC132ECC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB290F0)
  {
    sub_1DC4002BC();
    sub_1DC133AD0();
    v0 = sub_1DC40139C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB290F0);
  }
}

unint64_t sub_1DC132F2C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EDB290D8;
  if (!qword_1EDB290D8)
  {
    v1 = sub_1DC4012E8();
    result = MEMORY[0x1DF0CAB8C](MEMORY[0x1E0DB54F0], v1);
    atomic_store(result, (unint64_t *)&qword_1EDB290D8);
  }
  return result;
}

uint64_t sub_1DC132F74(uint64_t a1)
{
  return sub_1DC089FB8(a1, 0xD000000000000033, 0x80000001DC43C2C0, &qword_1EDB5DE18);
}

uint64_t sub_1DC132F98(uint64_t a1)
{
  return sub_1DC089FB8(a1, 0xD000000000000035, 0x80000001DC43C280, &qword_1EDB5DF10);
}

uint64_t sub_1DC132FBC(uint64_t a1)
{
  return sub_1DC2014F8(a1, 0xD00000000000003ALL, 0x80000001DC43C240, &qword_1EDB5DF08);
}

uint64_t sub_1DC132FE0(uint64_t a1, unsigned int *a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t result;
  uint64_t v15;
  uint64_t *v16;

  v16 = a5;
  v6 = sub_1DC401348();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1DC4012E8();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v15 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC132E14();
  (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v13, *a2, v10);
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E0DB57E8], v6);
  result = sub_1DC401384();
  *v16 = result;
  return result;
}

uint64_t sub_1DC1330FC(uint64_t a1)
{
  return sub_1DC132FE0(a1, MEMORY[0x1E0DB54D8], 0xD00000000000001ELL, 0x80000001DC434940, &qword_1EDB28FF0);
}

uint64_t sub_1DC133128(uint64_t a1)
{
  return sub_1DC133150(a1, -1, 0xD00000000000002DLL, 0x80000001DC43DD10, &qword_1EDB28FA0);
}

uint64_t sub_1DC133150(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t result;
  _QWORD v12[4];

  v7 = sub_1DC401348();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC08A0F4(0, (unint64_t *)&qword_1EDB29118);
  v12[2] = a2;
  v12[3] = a2;
  v12[1] = 0x7FFFFFFFFFFFFFFFLL;
  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E0DB57E0], v7);
  result = sub_1DC401390();
  *a5 = result;
  return result;
}

uint64_t sub_1DC133248(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  _BYTE v14[16];

  v5 = sub_1DC401348();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v14[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = sub_1DC401354();
  v10 = MEMORY[0x1E0C80A78](v9);
  (*(void (**)(_BYTE *, _QWORD, __n128))(v12 + 104))(&v14[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)], *MEMORY[0x1E0DB5800], v10);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0DB57E0], v5);
  v14[15] = 1;
  sub_1DC08A0F4(0, (unint64_t *)&qword_1EDB29110);
  swift_allocObject();
  result = sub_1DC4013A8();
  *a4 = result;
  return result;
}

uint64_t sub_1DC133388(uint64_t a1)
{
  return sub_1DC133248(a1, 0xD000000000000022, 0x80000001DC4407A0, &qword_1EDB28F70);
}

uint64_t sub_1DC1333AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  _BYTE v9[16];

  v0 = sub_1DC401348();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = &v9[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = sub_1DC401354();
  v5 = MEMORY[0x1E0C80A78](v4);
  (*(void (**)(_BYTE *, _QWORD, __n128))(v7 + 104))(&v9[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)], *MEMORY[0x1E0DB5800], v5);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB57E0], v0);
  v9[15] = 0;
  sub_1DC132E74();
  swift_allocObject();
  result = sub_1DC4013A8();
  qword_1F034EDD0 = result;
  return result;
}

uint64_t _s3PPTV20ExtendedLaunchTargetOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1DC133510 + 4 * byte_1DC418DF5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1DC133544 + 4 * byte_1DC418DF0[v4]))();
}

uint64_t sub_1DC133544(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC13354C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC133554);
  return result;
}

uint64_t sub_1DC133560(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC133568);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1DC13356C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC133574(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void sub_1DC133580(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x73694C6B636F7473;
  if (*v1)
    v2 = 0x756F59726F66;
  v3 = 0xE900000000000074;
  if (*v1)
    v3 = 0xE600000000000000;
  *a1 = v2;
  a1[1] = v3;
}

unint64_t sub_1DC1335C0()
{
  unint64_t result;

  result = qword_1F034EDF0;
  if (!qword_1F034EDF0)
  {
    result = MEMORY[0x1DF0CAB8C](&protocol conformance descriptor for Settings.PPT.ExtendedLaunchTarget, &type metadata for Settings.PPT.ExtendedLaunchTarget);
    atomic_store(result, (unint64_t *)&qword_1F034EDF0);
  }
  return result;
}

unint64_t sub_1DC133604()
{
  unint64_t result;

  result = qword_1F034EDE0;
  if (!qword_1F034EDE0)
  {
    result = MEMORY[0x1DF0CAB8C](&protocol conformance descriptor for Settings.PPT.ExtendedLaunchTarget, &type metadata for Settings.PPT.ExtendedLaunchTarget);
    atomic_store(result, (unint64_t *)&qword_1F034EDE0);
  }
  return result;
}

unint64_t sub_1DC133648()
{
  unint64_t result;

  result = qword_1F034EDD8;
  if (!qword_1F034EDD8)
  {
    result = MEMORY[0x1DF0CAB8C](&protocol conformance descriptor for Settings.PPT.ExtendedLaunchTarget, &type metadata for Settings.PPT.ExtendedLaunchTarget);
    atomic_store(result, (unint64_t *)&qword_1F034EDD8);
  }
  return result;
}

uint64_t sub_1DC13368C()
{
  sub_1DC133604();
  return sub_1DC408C5C();
}

uint64_t sub_1DC1336D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;

  v0 = sub_1DC401348();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1DC401354();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1DC4002BC();
  MEMORY[0x1E0C80A78](v8);
  (*(void (**)(char *, _QWORD))(v10 + 104))((char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E0DAE0B0]);
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DB5800], v4);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB57E0], v0);
  sub_1DC132ECC();
  swift_allocObject();
  result = sub_1DC4013A8();
  qword_1EDB28E80 = result;
  return result;
}

uint64_t static Settings.UserPreferences.showCurrency.getter()
{
  return sub_1DC10D910(&qword_1EDB28E78);
}

uint64_t sub_1DC133864(uint64_t a1)
{
  uint64_t v2;

  sub_1DC089DA4(0, (unint64_t *)&qword_1EDB28DE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF0D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DC1338B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1DC089DA4(0, (unint64_t *)&qword_1EDB28DE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF0D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1DC133914(uint64_t a1)
{
  sub_1DC089DA4(a1, (unint64_t *)&unk_1EDB28D20, (uint64_t (*)(uint64_t))sub_1DC133930, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

void sub_1DC133930(uint64_t a1)
{
  sub_1DC089DA4(a1, (unint64_t *)&unk_1EDB28D10, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAEE08], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

uint64_t sub_1DC13394C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1DC0FDC18(0, (unint64_t *)&qword_1EDB28C80, (unint64_t *)&qword_1EDB28C78, MEMORY[0x1E0DAEB88], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1DC1339B0(uint64_t a1)
{
  sub_1DC089DA4(a1, (unint64_t *)&unk_1EDB28C20, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAE950], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

void sub_1DC1339CC(uint64_t a1)
{
  sub_1DC089DA4(a1, &qword_1EDB28C18, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAE890], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

void sub_1DC1339E8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB28BE8)
  {
    sub_1DC40070C();
    v0 = sub_1DC4095A4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB28BE8);
  }
}

uint64_t sub_1DC133A3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1DC089DA4(0, &qword_1EDB28BE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAE458], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1DC133A98(uint64_t a1)
{
  sub_1DC089DA4(a1, &qword_1EDB28BE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAE458], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

void sub_1DC133AB4(uint64_t a1)
{
  sub_1DC089DA4(a1, &qword_1EDB28BA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAE188], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

unint64_t sub_1DC133AD0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EDB28B58;
  if (!qword_1EDB28B58)
  {
    v1 = sub_1DC4002BC();
    result = MEMORY[0x1DF0CAB8C](MEMORY[0x1E0DAE098], v1);
    atomic_store(result, (unint64_t *)&qword_1EDB28B58);
  }
  return result;
}

void sub_1DC133B18()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB28AE8)
  {
    sub_1DC400118();
    v0 = sub_1DC4095A4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB28AE8);
  }
}

uint64_t sub_1DC133B6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1DC133BB0(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1DC133BB0(uint64_t a1)
{
  sub_1DC089DA4(a1, (unint64_t *)&unk_1EDB28A70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

void _SUCrawlView(void *a1, uint64_t a2, void *a3)
{
  id v5;
  void (**v6)(id, id, _QWORD, char *);
  void (**v7)(_QWORD, _QWORD, _QWORD, _QWORD);
  void *v8;
  _QWORD v9[4];
  void (**v10)(id, id, _QWORD, char *);
  _QWORD *v11;
  uint64_t v12;
  char v13;
  _QWORD v14[4];

  v5 = a1;
  v6 = a3;
  v14[0] = 0;
  v14[1] = v14;
  v14[2] = 0x2020000000;
  v14[3] = 0;
  v13 = 0;
  v6[2](v6, v5, 0, &v13);
  if (!v13)
  {
    v9[0] = MEMORY[0x1E0C809B0];
    v9[1] = 3221225472;
    v9[2] = ___SUCrawlView_block_invoke_2;
    v9[3] = &unk_1EA44CCF8;
    v11 = v14;
    v12 = a2;
    v10 = v6;
    ___SUCrawlView_block_invoke_2((uint64_t)v9);
    v7 = (void (**)(_QWORD, _QWORD, _QWORD, _QWORD))objc_claimAutoreleasedReturnValue();
    v8 = _Block_copy(v7);
    ((void (**)(_QWORD, void *, id, char *))v7)[2](v7, v8, v5, &v13);

  }
  _Block_object_dispose(v14, 8);

}

void sub_1DC134238(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void SUCrawlView(void *a1, uint64_t a2, void *a3)
{
  id v5;
  id v6;
  _QWORD v7[4];
  id v8;

  v5 = a3;
  v7[0] = MEMORY[0x1E0C809B0];
  v7[1] = 3221225472;
  v7[2] = __SUCrawlView_block_invoke;
  v7[3] = &unk_1EA44CD20;
  v8 = v5;
  v6 = v5;
  _SUCrawlView(a1, a2, v7);

}

id SUCrawlViewAndCollect(void *a1, uint64_t a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  void *v10;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, void *);
  void *v15;
  id v16;
  id v17;

  v5 = a3;
  v6 = a1;
  v7 = (void *)objc_opt_new();
  v12 = MEMORY[0x1E0C809B0];
  v13 = 3221225472;
  v14 = __SUCrawlViewAndCollect_block_invoke;
  v15 = &unk_1EA44CD48;
  v16 = v7;
  v17 = v5;
  v8 = v7;
  v9 = v5;
  SUCrawlView(v6, a2, &v12);

  v10 = (void *)objc_msgSend(v8, "copy", v12, v13, v14, v15);
  return v10;
}

id SUFirstViewPassing(void *a1, uint64_t a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  id v8;
  _QWORD v10[4];
  id v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t, uint64_t);
  void (*v17)(uint64_t);
  id v18;

  v5 = a1;
  v6 = a3;
  v13 = 0;
  v14 = &v13;
  v15 = 0x3032000000;
  v16 = __Block_byref_object_copy_;
  v17 = __Block_byref_object_dispose_;
  v18 = 0;
  v10[0] = MEMORY[0x1E0C809B0];
  v10[1] = 3221225472;
  v10[2] = __SUFirstViewPassing_block_invoke;
  v10[3] = &unk_1EA44CD70;
  v12 = &v13;
  v7 = v6;
  v11 = v7;
  SUCrawlView(v5, a2, v10);
  v8 = (id)v14[5];

  _Block_object_dispose(&v13, 8);
  return v8;
}

void sub_1DC1349A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy_(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose_(uint64_t a1)
{

}

BOOL SUViewContainsViewOfClass(void *a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  _BOOL8 v4;
  _QWORD v6[5];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __SUViewContainsViewOfClass_block_invoke;
  v6[3] = &__block_descriptor_40_e16_B16__0__UIView_8lu32l8;
  v6[4] = a3;
  SUFirstViewPassing(a1, a2, v6);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = v3 != 0;

  return v4;
}

void _SUCrawlViewController(void *a1, uint64_t a2, void *a3)
{
  id v5;
  void (**v6)(id, id, _QWORD, char *);
  void (*v7)(uint64_t, void *, void *, _BYTE *);
  uint64_t *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v14[4];

  v5 = a1;
  v6 = a3;
  v14[0] = 0;
  v14[1] = v14;
  v14[2] = 0x2020000000;
  v14[3] = 0;
  v13 = 0;
  v6[2](v6, v5, 0, &v13);
  if (!v13)
  {
    if (a2 == 2)
    {
      v11 = MEMORY[0x1E0C809B0];
      v7 = ___SUCrawlViewController_block_invoke_3;
      v8 = &v11;
    }
    else
    {
      if (a2 != 1)
      {
        v9 = 0;
        goto LABEL_8;
      }
      v12 = MEMORY[0x1E0C809B0];
      v7 = ___SUCrawlViewController_block_invoke_2;
      v8 = &v12;
    }
    v8[1] = 3221225472;
    v8[2] = (uint64_t)v7;
    v8[3] = (uint64_t)&unk_1EA44CDB8;
    v8[5] = (uint64_t)v14;
    v8[4] = (uint64_t)v6;
    v9 = _Block_copy(v8);

LABEL_8:
    v10 = _Block_copy(v9);
    (*((void (**)(void *, void *, id, char *))v9 + 2))(v9, v10, v5, &v13);

  }
  _Block_object_dispose(v14, 8);

}

void sub_1DC134C20(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 64), 8);
  _Unwind_Resume(a1);
}

void SUCrawlViewController(void *a1, uint64_t a2, void *a3)
{
  id v5;
  id v6;
  _QWORD v7[4];
  id v8;

  v5 = a3;
  v7[0] = MEMORY[0x1E0C809B0];
  v7[1] = 3221225472;
  v7[2] = __SUCrawlViewController_block_invoke;
  v7[3] = &unk_1EA44CDE0;
  v8 = v5;
  v6 = v5;
  _SUCrawlViewController(a1, a2, v7);

}

id SUCrawlViewControllerAndCollect(void *a1, uint64_t a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  void *v10;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, void *);
  void *v15;
  id v16;
  id v17;

  v5 = a3;
  v6 = a1;
  v7 = (void *)objc_opt_new();
  v12 = MEMORY[0x1E0C809B0];
  v13 = 3221225472;
  v14 = __SUCrawlViewControllerAndCollect_block_invoke;
  v15 = &unk_1EA44CE08;
  v16 = v7;
  v17 = v5;
  v8 = v7;
  v9 = v5;
  SUCrawlViewController(v6, a2, &v12);

  v10 = (void *)objc_msgSend(v8, "copy", v12, v13, v14, v15);
  return v10;
}

id SUFirstViewControllerPassing(void *a1, uint64_t a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  id v8;
  _QWORD v10[4];
  id v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t, uint64_t);
  void (*v17)(uint64_t);
  id v18;

  v5 = a1;
  v6 = a3;
  v13 = 0;
  v14 = &v13;
  v15 = 0x3032000000;
  v16 = __Block_byref_object_copy_;
  v17 = __Block_byref_object_dispose_;
  v18 = 0;
  v10[0] = MEMORY[0x1E0C809B0];
  v10[1] = 3221225472;
  v10[2] = __SUFirstViewControllerPassing_block_invoke;
  v10[3] = &unk_1EA44CE30;
  v12 = &v13;
  v7 = v6;
  v11 = v7;
  SUCrawlViewController(v5, a2, v10);
  v8 = (id)v14[5];

  _Block_object_dispose(&v13, 8);
  return v8;
}

void sub_1DC135338(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

BOOL SUViewControllerContainsViewControllerOfClass(void *a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  _BOOL8 v4;
  _QWORD v6[5];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __SUViewControllerContainsViewControllerOfClass_block_invoke;
  v6[3] = &__block_descriptor_40_e26_B16__0__UIViewController_8lu32l8;
  v6[4] = a3;
  SUFirstViewControllerPassing(a1, a2, v6);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = v3 != 0;

  return v4;
}

id SUViewHierarchy(void *a1)
{
  id v1;
  void *v2;
  id v3;
  void *v4;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t);
  void *v9;
  id v10;
  id v11;

  v1 = a1;
  v2 = (void *)objc_opt_new();
  v6 = MEMORY[0x1E0C809B0];
  v7 = 3221225472;
  v8 = __SUViewHierarchy_block_invoke_2;
  v9 = &unk_1EA44CEB8;
  v10 = v2;
  v11 = &__block_literal_global_14;
  v3 = v2;
  _SUCrawlView(v1, 2, &v6);

  v4 = (void *)objc_msgSend(v3, "copy", v6, v7, v8, v9);
  return v4;
}

id SUViewControllerHierarchy(void *a1)
{
  id v1;
  void *v2;
  id v3;
  void *v4;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t);
  void *v9;
  id v10;
  id v11;

  v1 = a1;
  v2 = (void *)objc_opt_new();
  v6 = MEMORY[0x1E0C809B0];
  v7 = 3221225472;
  v8 = __SUViewControllerHierarchy_block_invoke_2;
  v9 = &unk_1EA44CF20;
  v10 = v2;
  v11 = &__block_literal_global_19;
  v3 = v2;
  _SUCrawlViewController(v1, 2, &v6);

  v4 = (void *)objc_msgSend(v3, "copy", v6, v7, v8, v9);
  return v4;
}

void sub_1DC135914(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_1DC1359B0(uint64_t a1, double *a2, void *a3, char *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  id v14;
  uint64_t v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  uint64_t v36;
  id v38;
  uint64_t inited;
  void *v40;
  uint64_t v41;
  id v42;
  void *v43;
  id v44;
  id v45;
  void *v46;
  void *v47;
  id v48;
  double MaxX;
  void *v50;
  void *v51;
  id v52;
  id v53;
  uint64_t v54;
  _QWORD *v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  id v60;
  void *v61;
  _QWORD *v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  id v70;
  id v71;
  id v72;
  id v73;
  _QWORD *v74;
  id v75;
  uint64_t v76;
  void *v77;
  CGRect v78;
  CGRect v79;

  v5 = v4;
  v9 = sub_1DC3FFFEC();
  v10 = *(_QWORD *)(v9 - 8);
  *(_QWORD *)&v11 = MEMORY[0x1E0C80A78](v9).n128_u64[0];
  v13 = (char *)&v69 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = objc_msgSend(a3, sel_horizontalSizeClass, v11);
  if ((unint64_t)v14 < 2)
    return objc_msgSend(a4, sel_setHidden_, 1);
  if (v14 != (id)2)
    return objc_msgSend(a4, sel_setFrame_, v15);
  v69 = v9;
  objc_msgSend(a4, sel_setHidden_, 0);
  objc_msgSend(a4, sel_setFrame_, 0.0, 0.0, *a2, a2[1]);
  v16 = a2[10];
  v17 = a2[11];
  v18 = a2[12];
  v19 = a2[13];
  v71 = *(id *)&a4[qword_1EDB40BD0];
  objc_msgSend(v71, sel_setFrame_, v16, v17, v18, v19);
  v20 = a2[18];
  v21 = a2[19];
  v22 = a2[20];
  v23 = a2[21];
  v72 = *(id *)&a4[qword_1EDB40BD8];
  objc_msgSend(v72, sel_setFrame_, v20, v21, v22, v23);
  v24 = a2[14];
  v25 = a2[15];
  v26 = a2[16];
  v27 = a2[17];
  v75 = *(id *)&a4[qword_1F0350C00];
  objc_msgSend(v75, sel_setFrame_, v24, v25, v26, v27);
  v28 = a2[2];
  v29 = a2[3];
  v30 = a2[4];
  v31 = a2[5];
  v70 = *(id *)&a4[qword_1EDB40BE0];
  objc_msgSend(v70, sel_setFrame_, v28, v29, v30, v31);
  v32 = a2[6];
  v33 = a2[7];
  v34 = a2[8];
  v35 = a2[9];
  v73 = *(id *)&a4[qword_1EDB40BE8];
  objc_msgSend(v73, sel_setFrame_, v32, v33, v34, v35);
  swift_retain();
  if ((sub_1DC397AB0() & 1) != 0)
  {
    if (qword_1EDB42978 != -1)
      swift_once();
    type metadata accessor for ForYouMastheadModel();
    sub_1DC080808(&qword_1F034BA40, (uint64_t (*)(uint64_t))type metadata accessor for ForYouMastheadModel, (uint64_t)&unk_1DC42D554);
    sub_1DC4012D0();
    swift_release();
    if ((v77 & 1) != 0)
    {
      v36 = 0;
      goto LABEL_12;
    }
  }
  else
  {
    swift_release();
  }
  v36 = 1;
LABEL_12:
  v38 = v75;
  objc_msgSend(v75, sel_setHidden_, v36);
  v76 = v5;
  v74 = (_QWORD *)(v5 + 16);
  sub_1DC0FB194();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DC40C740;
  v40 = (void *)*MEMORY[0x1E0DC1138];
  *(_QWORD *)(inited + 32) = *MEMORY[0x1E0DC1138];
  v41 = sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FB00);
  swift_bridgeObjectRetain_n();
  v42 = v40;
  sub_1DC4073B4();
  *(_QWORD *)(inited + 40) = v77;
  v43 = (void *)*MEMORY[0x1E0DC1150];
  *(_QWORD *)(inited + 64) = v41;
  *(_QWORD *)(inited + 72) = v43;
  *(_QWORD *)(inited + 104) = MEMORY[0x1E0DEB070];
  *(_QWORD *)(inited + 80) = 0xBFD3333333333333;
  v44 = v43;
  sub_1DC0FA3C4(inited);
  v45 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  v46 = (void *)sub_1DC408A1C();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1DC080808((unint64_t *)&qword_1EDB3F988, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1DC40D90C);
  v47 = (void *)sub_1DC408980();
  swift_bridgeObjectRelease();
  v48 = objc_msgSend(v45, sel_initWithString_attributes_, v46, v47);
  swift_bridgeObjectRelease();

  objc_msgSend(v70, sel_setAttributedText_, v48);
  objc_msgSend(v73, sel_frame);
  MaxX = CGRectGetMaxX(v78);
  objc_msgSend(v38, sel_frame);
  if (CGRectGetMinX(v79) + -10.0 < MaxX)
  {
    swift_retain();
    if ((sub_1DC397AB0() & 1) != 0)
    {
      if (qword_1EDB42978 != -1)
        swift_once();
      type metadata accessor for ForYouMastheadModel();
      sub_1DC080808(&qword_1F034BA40, (uint64_t (*)(uint64_t))type metadata accessor for ForYouMastheadModel, (uint64_t)&unk_1DC42D554);
      sub_1DC4012D0();
      swift_release();
      if ((v77 & 1) != 0)
      {
        __swift_project_boxed_opaque_existential_1(v74, *(_QWORD *)(v76 + 40));
        if (qword_1F034B188 != -1)
          swift_once();
        v50 = (void *)qword_1F0352C28;
        if (!qword_1F0352C28)
          goto LABEL_26;
        goto LABEL_25;
      }
    }
    else
    {
      swift_release();
    }
  }
  __swift_project_boxed_opaque_existential_1(v74, *(_QWORD *)(v76 + 40));
  if (qword_1EDB40B10 != -1)
    swift_once();
  v50 = (void *)qword_1EDB40B00;
  if (!qword_1EDB40B00)
    goto LABEL_26;
LABEL_25:
  sub_1DC3FFFE0();
  v51 = (void *)sub_1DC3FFF50();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v69);
  v52 = objc_msgSend(v50, sel_stringFromDate_, v51);

  sub_1DC408A4C();
LABEL_26:
  v53 = sub_1DC237494();
  swift_bridgeObjectRelease();
  objc_msgSend(v73, sel_setAttributedText_, v53);

  v54 = v76;
  v55 = v74;
  v56 = __swift_project_boxed_opaque_existential_1(v74, *(_QWORD *)(v76 + 40));
  v57 = *(_QWORD *)(*v56 + 40);
  v58 = *(_QWORD *)(*v56 + 48);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(*v56 + 16), v57);
  v59 = (void *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)(v58 + 16) + 504))(v57);
  objc_msgSend(v71, sel_setBackgroundColor_, v59);

  v60 = objc_msgSend((id)objc_opt_self(), sel_clearColor);
  objc_msgSend(a4, sel_setBackgroundColor_, v60);

  sub_1DC136F04();
  swift_retain();
  sub_1DC4073B4();
  swift_release();
  v61 = v77;
  objc_msgSend(v72, sel_setImage_, v77);

  v62 = __swift_project_boxed_opaque_existential_1(v55, *(_QWORD *)(v54 + 40));
  v63 = *v62;
  v64 = (_QWORD *)(*v62 + 16);
  v66 = *(_QWORD *)(*v62 + 40);
  v65 = *(_QWORD *)(*v62 + 48);
  __swift_project_boxed_opaque_existential_1(v64, v66);
  (*(void (**)(uint64_t))(*(_QWORD *)(v65 + 16) + 512))(v66);
  sub_1DC403C1C();
  v68 = *(_QWORD *)(v63 + 40);
  v67 = *(_QWORD *)(v63 + 48);
  __swift_project_boxed_opaque_existential_1(v64, v68);
  (*(void (**)(uint64_t))(*(_QWORD *)(v67 + 16) + 520))(v68);
  return (id)sub_1DC403C28();
}

uint64_t type metadata accessor for ForYouFeedMastheadViewRenderer()
{
  return objc_opt_self();
}

void type metadata accessor for TestScrollDirection(uint64_t a1)
{
  sub_1DC0FAC88(a1, &qword_1F034B640);
}

void type metadata accessor for UIContentSizeCategory(uint64_t a1)
{
  sub_1DC0FAC88(a1, &qword_1F034B648);
}

uint64_t getEnumTagSinglePayload for StockChartRangeCalloutViewOptions(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for StockChartRangeCalloutViewOptions(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 32) = v3;
  return result;
}

void type metadata accessor for UIEdgeInsets(uint64_t a1)
{
  sub_1DC0FAC88(a1, &qword_1F034B650);
}

void type metadata accessor for UIInterfaceOrientation(uint64_t a1)
{
  sub_1DC0FAC88(a1, &qword_1F034B658);
}

void type metadata accessor for TestAggregate(uint64_t a1)
{
  sub_1DC0FAC88(a1, &qword_1F034B660);
}

uint64_t getEnumTagSinglePayload for StockChartModelFactoryProvider.Axis(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for StockChartModelFactoryProvider.Axis(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CGPoint(uint64_t a1)
{
  sub_1DC0FAC88(a1, (unint64_t *)&unk_1EDB3FB20);
}

uint64_t sub_1DC1362E8(uint64_t a1, uint64_t a2)
{
  return sub_1DC136E34(a1, a2, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1940]);
}

uint64_t sub_1DC136304()
{
  return sub_1DC408E0C();
}

uint64_t sub_1DC13630C(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  char v4;
  int v5;
  int v6;
  char v7;

  v6 = 0;
  v7 = 1;
  result = MEMORY[0x1DF0C968C](a1, &v6);
  v4 = v7;
  v5 = v6;
  if (v7)
    v5 = 0;
  *(_DWORD *)a2 = v5;
  *(_BYTE *)(a2 + 4) = v4;
  return result;
}

uint64_t sub_1DC13635C(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;
  int v5;
  int v7;
  char v8;

  v7 = 0;
  v8 = 1;
  v3 = MEMORY[0x1DF0C9698](a1, &v7);
  v4 = v8;
  v5 = v7;
  if (v8)
    v5 = 0;
  *(_DWORD *)a2 = v5;
  *(_BYTE *)(a2 + 4) = v4;
  return v3 & 1;
}

void sub_1DC1363B0(float *a1@<X8>)
{
  *a1 = MEMORY[0x1DF0C96A4]();
}

uint64_t sub_1DC1363D4(uint64_t a1, id *a2)
{
  uint64_t result;

  result = sub_1DC408A34();
  *a2 = 0;
  return result;
}

uint64_t sub_1DC136448(uint64_t a1, id *a2)
{
  char v3;

  v3 = sub_1DC408A40();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_1DC1364C4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  sub_1DC408A4C();
  v2 = sub_1DC408A1C();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

id sub_1DC136504()
{
  id *v0;

  return *v0;
}

uint64_t sub_1DC13650C@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t sub_1DC136514(uint64_t a1, uint64_t a2)
{
  return sub_1DC136E34(a1, a2, MEMORY[0x1E0DEA950]);
}

uint64_t sub_1DC136524()
{
  return sub_1DC409ACC();
}

uint64_t sub_1DC136550()
{
  sub_1DC409AC0();
  sub_1DC409ACC();
  return sub_1DC409AF0();
}

uint64_t sub_1DC136594()
{
  sub_1DC409AC0();
  sub_1DC409ACC();
  return sub_1DC409AF0();
}

uint64_t sub_1DC1365D8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_1DC408A4C();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1DC136600()
{
  return sub_1DC408A4C();
}

uint64_t sub_1DC136610()
{
  sub_1DC080808((unint64_t *)&unk_1F0350BF0, (uint64_t (*)(uint64_t))type metadata accessor for SKError, (uint64_t)&unk_1DC40D774);
  return sub_1DC3FFCD4();
}

uint64_t sub_1DC136650()
{
  sub_1DC080808((unint64_t *)&unk_1F0350BF0, (uint64_t (*)(uint64_t))type metadata accessor for SKError, (uint64_t)&unk_1DC40D774);
  return sub_1DC3FFCA4();
}

uint64_t sub_1DC136690(void *a1)
{
  id v2;

  sub_1DC080808((unint64_t *)&unk_1F0350BF0, (uint64_t (*)(uint64_t))type metadata accessor for SKError, (uint64_t)&unk_1DC40D774);
  v2 = a1;
  return sub_1DC3FFC98();
}

uint64_t sub_1DC1366F4()
{
  id *v0;
  id v1;
  uint64_t v2;

  v1 = *v0;
  v2 = sub_1DC4093D0();

  return v2;
}

uint64_t sub_1DC136728()
{
  sub_1DC080808((unint64_t *)&unk_1F0350BF0, (uint64_t (*)(uint64_t))type metadata accessor for SKError, (uint64_t)&unk_1DC40D774);
  return sub_1DC3FFCC8();
}

uint64_t sub_1DC136778()
{
  sub_1DC409AC0();
  sub_1DC4089BC();
  return sub_1DC409AF0();
}

_QWORD *sub_1DC1367D4@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *result;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

void sub_1DC1367E4(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

uint64_t sub_1DC1367F0()
{
  sub_1DC080808(&qword_1F034BA48, (uint64_t (*)(uint64_t))type metadata accessor for UIContentSizeCategory, (uint64_t)&unk_1DC40C944);
  sub_1DC080808(&qword_1F034BA50, (uint64_t (*)(uint64_t))type metadata accessor for UIContentSizeCategory, (uint64_t)&unk_1DC40C8E4);
  return sub_1DC409898();
}

uint64_t sub_1DC136874()
{
  return sub_1DC080808(&qword_1F034B668, (uint64_t (*)(uint64_t))type metadata accessor for UIContentSizeCategory, (uint64_t)&unk_1DC40C8A8);
}

uint64_t sub_1DC1368A0()
{
  return sub_1DC080808(&qword_1F034B670, (uint64_t (*)(uint64_t))type metadata accessor for UIContentSizeCategory, (uint64_t)&unk_1DC40C87C);
}

uint64_t sub_1DC1368CC()
{
  return sub_1DC080808(&qword_1F034B678, (uint64_t (*)(uint64_t))type metadata accessor for UIContentSizeCategory, (uint64_t)&unk_1DC40C918);
}

uint64_t sub_1DC1368F8()
{
  sub_1DC080808((unint64_t *)&qword_1EDB3F988, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1DC40D90C);
  sub_1DC080808(&qword_1F034BC98, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1DC40D210);
  return sub_1DC409898();
}

uint64_t sub_1DC13697C()
{
  sub_1DC080808(&qword_1F034BCB0, (uint64_t (*)(uint64_t))type metadata accessor for Identifier, (uint64_t)&unk_1DC40D00C);
  sub_1DC080808(&qword_1F034BCB8, (uint64_t (*)(uint64_t))type metadata accessor for Identifier, (uint64_t)&unk_1DC40CFAC);
  return sub_1DC409898();
}

uint64_t sub_1DC136A00()
{
  sub_1DC080808(&qword_1F034BCC0, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_1DC40D990);
  sub_1DC080808(&qword_1F034BCC8, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_1DC40CE98);
  return sub_1DC409898();
}

uint64_t sub_1DC136A84()
{
  sub_1DC080808(&qword_1F034BCA0, (uint64_t (*)(uint64_t))type metadata accessor for ActivityType, (uint64_t)&unk_1DC40D950);
  sub_1DC080808(&qword_1F034BCA8, (uint64_t (*)(uint64_t))type metadata accessor for ActivityType, (uint64_t)&unk_1DC40D0FC);
  return sub_1DC409898();
}

_DWORD *sub_1DC136B08@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_DWORD *)a2 = *result;
  *(_BYTE *)(a2 + 4) = 0;
  return result;
}

float sub_1DC136B18@<S0>(_DWORD *a1@<X8>)
{
  float *v1;
  float result;

  result = *v1;
  *a1 = *(_DWORD *)v1;
  return result;
}

uint64_t sub_1DC136B24()
{
  sub_1DC080808(&qword_1F034BC68, (uint64_t (*)(uint64_t))type metadata accessor for UILayoutPriority, (uint64_t)&unk_1DC40D6E4);
  sub_1DC080808((unint64_t *)&unk_1F034BC70, (uint64_t (*)(uint64_t))type metadata accessor for UILayoutPriority, (uint64_t)&unk_1DC40D684);
  return sub_1DC409898();
}

uint64_t sub_1DC136BB8()
{
  sub_1DC080808((unint64_t *)&unk_1EDB3FA70, (uint64_t (*)(uint64_t))type metadata accessor for AttributeName, (uint64_t)&unk_1DC40D884);
  sub_1DC080808(&qword_1F034BC90, (uint64_t (*)(uint64_t))type metadata accessor for AttributeName, (uint64_t)&unk_1DC40D324);
  return sub_1DC409898();
}

uint64_t sub_1DC136C3C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1DC408A1C();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_1DC136C80()
{
  sub_1DC080808((unint64_t *)&unk_1EDB3FA18, (uint64_t (*)(uint64_t))type metadata accessor for TraitKey, (uint64_t)&unk_1DC40D8C8);
  sub_1DC080808((unint64_t *)&unk_1F034BC80, (uint64_t (*)(uint64_t))type metadata accessor for TraitKey, (uint64_t)&unk_1DC40D438);
  return sub_1DC409898();
}

uint64_t sub_1DC136D04()
{
  sub_1DC080808(&qword_1F034BC20, (uint64_t (*)(uint64_t))type metadata accessor for SKError, (uint64_t)&unk_1DC40D5D8);
  return sub_1DC409A6C();
}

uint64_t sub_1DC136D44()
{
  sub_1DC080808(&qword_1F034BC20, (uint64_t (*)(uint64_t))type metadata accessor for SKError, (uint64_t)&unk_1DC40D5D8);
  return sub_1DC409A60();
}

uint64_t sub_1DC136D88()
{
  sub_1DC080808((unint64_t *)&unk_1F0350BF0, (uint64_t (*)(uint64_t))type metadata accessor for SKError, (uint64_t)&unk_1DC40D774);
  return sub_1DC3FFC8C();
}

uint64_t sub_1DC136DC8()
{
  sub_1DC080808((unint64_t *)&unk_1F0350BF0, (uint64_t (*)(uint64_t))type metadata accessor for SKError, (uint64_t)&unk_1DC40D774);
  return sub_1DC3FFCB0();
}

BOOL sub_1DC136E20(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1DC136E34(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_1DC408A4C();
  v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1DC136E70()
{
  sub_1DC408A4C();
  sub_1DC408AF4();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DC136EB0()
{
  return sub_1DC408E3C();
}

uint64_t sub_1DC136EB8()
{
  return sub_1DC409AE4();
}

void sub_1DC136EE8()
{
  JUMPOUT(0x1DF0CA328);
}

id sub_1DC136EFC@<X0>(_QWORD *a1@<X8>)
{
  return sub_1DC3BB200(a1);
}

void sub_1DC136F04()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB42980)
  {
    sub_1DC0821D4(255, (unint64_t *)&qword_1EDB3FB38);
    v0 = sub_1DC4095A4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB42980);
  }
}

void type metadata accessor for UILayoutPriority(uint64_t a1)
{
  sub_1DC0FAC88(a1, &qword_1F034BB18);
}

void type metadata accessor for SKError(uint64_t a1)
{
  sub_1DC0FAC88(a1, &qword_1F034BB20);
}

void type metadata accessor for FCSubscriptionButtonTargetType(uint64_t a1)
{
  sub_1DC0FAC88(a1, &qword_1F034BB28);
}

void type metadata accessor for _NSRange(uint64_t a1)
{
  sub_1DC0FAC88(a1, &qword_1F034BB30);
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
  sub_1DC0FAC88(a1, &qword_1EDB27458);
}

void type metadata accessor for TraitKey(uint64_t a1)
{
  sub_1DC0FAC88(a1, &qword_1EDB3FA30);
}

void type metadata accessor for AttributeName(uint64_t a1)
{
  sub_1DC0FAC88(a1, (unint64_t *)&unk_1EDB3FA88);
}

void type metadata accessor for FCPurchaseValidationState(uint64_t a1)
{
  sub_1DC0FAC88(a1, &qword_1F034BB38);
}

void type metadata accessor for ActivityType(uint64_t a1)
{
  sub_1DC0FAC88(a1, (unint64_t *)&unk_1F034BB40);
}

void type metadata accessor for Identifier(uint64_t a1)
{
  sub_1DC0FAC88(a1, &qword_1EDB42948);
}

void type metadata accessor for OpenExternalURLOptionsKey(uint64_t a1)
{
  sub_1DC0FAC88(a1, (unint64_t *)&unk_1F034BB50);
}

void type metadata accessor for UIUserInterfaceSizeClass(uint64_t a1)
{
  sub_1DC0FAC88(a1, &qword_1EDB3FA38);
}

void type metadata accessor for UIAccessibilityContrast(uint64_t a1)
{
  sub_1DC0FAC88(a1, &qword_1F034BB60);
}

void type metadata accessor for UIUserInterfaceStyle(uint64_t a1)
{
  sub_1DC0FAC88(a1, &qword_1F034BB68);
}

void type metadata accessor for CGPath(uint64_t a1)
{
  sub_1DC0FAC88(a1, (unint64_t *)&unk_1F034BB70);
}

uint64_t sub_1DC137094()
{
  return sub_1DC080808(&qword_1F034BB80, (uint64_t (*)(uint64_t))type metadata accessor for UIUserInterfaceStyle, (uint64_t)&unk_1DC40CCB4);
}

uint64_t sub_1DC1370C0()
{
  return sub_1DC080808(&qword_1F034BB88, (uint64_t (*)(uint64_t))type metadata accessor for UIAccessibilityContrast, (uint64_t)&unk_1DC40CD60);
}

uint64_t sub_1DC1370EC()
{
  return sub_1DC080808(&qword_1F034BB90, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_1DC40CE5C);
}

uint64_t sub_1DC137118()
{
  return sub_1DC080808(&qword_1F034BB98, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_1DC40CE30);
}

uint64_t sub_1DC137144()
{
  return sub_1DC080808(&qword_1F034BBA0, (uint64_t (*)(uint64_t))type metadata accessor for Identifier, (uint64_t)&unk_1DC40CF70);
}

uint64_t sub_1DC137170()
{
  return sub_1DC080808(&qword_1F034BBA8, (uint64_t (*)(uint64_t))type metadata accessor for Identifier, (uint64_t)&unk_1DC40CF44);
}

uint64_t sub_1DC13719C()
{
  return sub_1DC080808(&qword_1F034BBB0, (uint64_t (*)(uint64_t))type metadata accessor for Identifier, (uint64_t)&unk_1DC40CFE0);
}

uint64_t sub_1DC1371C8()
{
  return sub_1DC080808(&qword_1F034BBB8, (uint64_t (*)(uint64_t))type metadata accessor for ActivityType, (uint64_t)&unk_1DC40D0C4);
}

uint64_t sub_1DC1371F4()
{
  return sub_1DC080808(&qword_1F034BBC0, (uint64_t (*)(uint64_t))type metadata accessor for ActivityType, (uint64_t)&unk_1DC40D09C);
}

uint64_t sub_1DC137220()
{
  return sub_1DC080808(&qword_1F034BBC8, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1DC40D1D4);
}

uint64_t sub_1DC13724C()
{
  return sub_1DC080808(&qword_1F034BBD0, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1DC40D1A8);
}

uint64_t sub_1DC137278()
{
  return sub_1DC080808(&qword_1F034BBD8, (uint64_t (*)(uint64_t))type metadata accessor for AttributeName, (uint64_t)&unk_1DC40D2E8);
}

uint64_t sub_1DC1372A4()
{
  return sub_1DC080808(&qword_1F034BBE0, (uint64_t (*)(uint64_t))type metadata accessor for AttributeName, (uint64_t)&unk_1DC40D2BC);
}

uint64_t sub_1DC1372D0()
{
  return sub_1DC080808(&qword_1F034BBE8, (uint64_t (*)(uint64_t))type metadata accessor for TraitKey, (uint64_t)&unk_1DC40D3FC);
}

uint64_t sub_1DC1372FC()
{
  return sub_1DC080808(&qword_1F034BBF0, (uint64_t (*)(uint64_t))type metadata accessor for TraitKey, (uint64_t)&unk_1DC40D3D0);
}

uint64_t sub_1DC137328()
{
  return sub_1DC080808(&qword_1F034BBF8, (uint64_t (*)(uint64_t))type metadata accessor for SKError, (uint64_t)&unk_1DC40D4F0);
}

uint64_t sub_1DC137354()
{
  return sub_1DC080808(&qword_1F034BC00, (uint64_t (*)(uint64_t))type metadata accessor for SKError, (uint64_t)&unk_1DC40D51C);
}

uint64_t sub_1DC137380()
{
  return sub_1DC080808(&qword_1F034BC08, (uint64_t (*)(uint64_t))type metadata accessor for UILayoutPriority, (uint64_t)&unk_1DC40D648);
}

uint64_t sub_1DC1373AC()
{
  return sub_1DC080808(&qword_1F034BC10, (uint64_t (*)(uint64_t))type metadata accessor for UILayoutPriority, (uint64_t)&unk_1DC40D61C);
}

BOOL sub_1DC1373D8(float *a1, float *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1DC1373EC()
{
  return sub_1DC080808(&qword_1F034BC18, (uint64_t (*)(uint64_t))type metadata accessor for UILayoutPriority, (uint64_t)&unk_1DC40D6B8);
}

uint64_t sub_1DC137418()
{
  return sub_1DC080808(&qword_1F034BC20, (uint64_t (*)(uint64_t))type metadata accessor for SKError, (uint64_t)&unk_1DC40D5D8);
}

uint64_t sub_1DC137444()
{
  return sub_1DC080808(&qword_1F034BC28, (uint64_t (*)(uint64_t))type metadata accessor for SKError, (uint64_t)&unk_1DC40D5A4);
}

uint64_t sub_1DC137470()
{
  return sub_1DC080808(&qword_1F034BC30, (uint64_t (*)(uint64_t))type metadata accessor for SKError, (uint64_t)&unk_1DC40D560);
}

uint64_t sub_1DC13749C()
{
  return sub_1DC080808(&qword_1F034BC38, (uint64_t (*)(uint64_t))type metadata accessor for Code, (uint64_t)&unk_1DC40D81C);
}

void type metadata accessor for Code(uint64_t a1)
{
  sub_1DC0FAC88(a1, &qword_1F034BCD0);
}

uint64_t sub_1DC1374DC()
{
  return sub_1DC080808(&qword_1F034BC40, (uint64_t (*)(uint64_t))type metadata accessor for Code, (uint64_t)&unk_1DC40D7E0);
}

unint64_t sub_1DC13750C()
{
  unint64_t result;

  result = qword_1F034BC48;
  if (!qword_1F034BC48)
  {
    result = MEMORY[0x1DF0CAB8C](MEMORY[0x1E0DEB470], MEMORY[0x1E0DEB418]);
    atomic_store(result, (unint64_t *)&qword_1F034BC48);
  }
  return result;
}

uint64_t sub_1DC137550()
{
  return sub_1DC080808(&qword_1F034BC50, (uint64_t (*)(uint64_t))type metadata accessor for Code, (uint64_t)&unk_1DC40D858);
}

uint64_t sub_1DC13757C()
{
  return sub_1DC080808((unint64_t *)&unk_1F0350BF0, (uint64_t (*)(uint64_t))type metadata accessor for SKError, (uint64_t)&unk_1DC40D774);
}

uint64_t sub_1DC1375A8()
{
  return sub_1DC080808(&qword_1EDB3FA80, (uint64_t (*)(uint64_t))type metadata accessor for AttributeName, (uint64_t)&unk_1DC40D358);
}

uint64_t sub_1DC1375D4()
{
  return sub_1DC080808(&qword_1EDB3FA28, (uint64_t (*)(uint64_t))type metadata accessor for TraitKey, (uint64_t)&unk_1DC40D46C);
}

uint64_t sub_1DC137600()
{
  return sub_1DC080808(&qword_1F034BC58, (uint64_t (*)(uint64_t))type metadata accessor for ActivityType, (uint64_t)&unk_1DC40D12C);
}

uint64_t sub_1DC13762C()
{
  return sub_1DC080808(&qword_1F034BC60, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_1DC40CECC);
}

void type metadata accessor for UIStatusBarStyle(uint64_t a1)
{
  sub_1DC0FAC88(a1, &qword_1F034BCD8);
}

void type metadata accessor for IndicatorStyle(uint64_t a1)
{
  sub_1DC0FAC88(a1, &qword_1F034BCE0);
}

void type metadata accessor for UIKeyboardAppearance(uint64_t a1)
{
  sub_1DC0FAC88(a1, &qword_1F034BCE8);
}

void sub_1DC1376C0()
{
  qword_1EDB3A708 = 0x406A400000000000;
}

uint64_t sub_1DC1376D4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, _QWORD, __n128);
  uint64_t v19;
  uint64_t v20;
  _QWORD v22[2];

  v22[1] = a1;
  v1 = sub_1DC407A50();
  MEMORY[0x1E0C80A78](v1);
  v2 = sub_1DC4079B4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1DC4079CC();
  MEMORY[0x1E0C80A78](v6);
  v7 = sub_1DC4079E4();
  MEMORY[0x1E0C80A78](v7);
  v8 = sub_1DC407A08();
  MEMORY[0x1E0C80A78](v8);
  v9 = sub_1DC407A20();
  MEMORY[0x1E0C80A78](v9);
  sub_1DC089DA4(0, &qword_1EDB426D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5BDD8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v22 - v11;
  v13 = sub_1DC407A2C();
  v14 = MEMORY[0x1E0C80A78](v13);
  v16 = (char *)v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *(void (**)(char *, _QWORD, __n128))(v17 + 104);
  if ((*(_BYTE *)(v22[0] + 352) & 1) != 0)
  {
    v18(v16, *MEMORY[0x1E0D5BE08], v14);
    sub_1DC407A14();
    v19 = sub_1DC4079F0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v12, 1, 1, v19);
  }
  else
  {
    v18(v16, *MEMORY[0x1E0D5BE00], v14);
    v20 = sub_1DC4079F0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v12, 1, 1, v20);
    sub_1DC407A14();
  }
  sub_1DC4079D8();
  sub_1DC4079D8();
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0D5BD98], v2);
  sub_1DC4079C0();
  sub_1DC407A44();
  return sub_1DC407A38();
}

uint64_t sub_1DC1379F4()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  __swift_destroy_boxed_opaque_existential_1(v0 + 136);
  __swift_destroy_boxed_opaque_existential_1(v0 + 176);
  __swift_destroy_boxed_opaque_existential_1(v0 + 216);
  __swift_destroy_boxed_opaque_existential_1(v0 + 256);
  __swift_destroy_boxed_opaque_existential_1(v0 + 296);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 360);
  __swift_destroy_boxed_opaque_existential_1(v0 + 400);
  __swift_destroy_boxed_opaque_existential_1(v0 + 440);
  return v0;
}

uint64_t sub_1DC137A70()
{
  sub_1DC1379F4();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for StockFeedBlueprintLayoutBuilder()
{
  return objc_opt_self();
}

uint64_t sub_1DC137AB0()
{
  return sub_1DC081B48(&qword_1EDB36EE0, 255, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedSectionDescriptor, (uint64_t)&unk_1DC4167B0);
}

uint64_t sub_1DC137AE0()
{
  return sub_1DC081B48(&qword_1EDB3B308, 255, type metadata accessor for StockFeedLayoutSectionDescriptor, (uint64_t)&unk_1DC41ECF0);
}

uint64_t sub_1DC137B10()
{
  return sub_1DC081B48(&qword_1EDB32160, 255, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedLayoutModel, (uint64_t)&unk_1DC413950);
}

uint64_t sub_1DC137B40()
{
  return sub_1DC081B48(&qword_1EDB2D770, 255, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedModel, (uint64_t)&unk_1DC429058);
}

uint64_t sub_1DC137B70()
{
  return sub_1DC4012DC();
}

uint64_t sub_1DC137B7C@<X0>(void (*a1)(_QWORD)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  char **v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  void *v59;
  uint64_t v60;
  void (*v61)(char *, uint64_t, uint64_t);
  uint64_t v62;
  void (*v63)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  double v78;
  double v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  double v88;
  char *v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  void (*v94)(_QWORD);
  unint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  _QWORD *v100;
  char *v101;
  uint64_t v102;
  _QWORD *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  void (*v109)(uint64_t *, _QWORD);
  uint64_t v110;
  char *v111;
  char *v112;
  char *v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  _QWORD *v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  int64_t *v125;
  uint64_t v126;
  uint64_t v127;
  int v128;
  double v129;
  char *v130;
  uint64_t v131;
  char *v132;
  char *v133;
  uint64_t v134;
  int64_t *v135;
  char *v136;
  void (*v137)(char *, char *, char *);
  int64_t v138;
  uint64_t v139;
  double v140;
  double v141;
  uint64_t v142;
  int64_t v143;
  unint64_t v144;
  uint64_t v145;
  void (*v146)(char *, unint64_t, unint64_t *);
  unint64_t *v147;
  uint64_t v148;
  char *v149;
  uint64_t *v150;
  uint64_t v151;
  uint64_t v152;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v154;
  unint64_t v155;
  uint64_t v156;
  uint64_t v157;
  double v158;
  double *v159;
  uint64_t v160;
  uint64_t v161;
  double *v162;
  double v163;
  double v164;
  double v165;
  uint64_t v166;
  char *v167;
  uint64_t v168;
  void (*v169)(uint64_t, unint64_t *);
  unint64_t *v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t result;
  _QWORD v175[2];
  double v176;
  uint64_t v177;
  double v178;
  uint64_t v179;
  char *v180;
  uint64_t v181;
  _QWORD v182[2];
  uint64_t v183;
  char *v184;
  char *v185;
  int64_t *v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  char *v192;
  char *v193;
  uint64_t v194;
  int64_t *v195;
  uint64_t v196;
  char *v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  _QWORD *v208;
  uint64_t v209;
  id v210;
  char *v211;
  char *v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  char *v220;
  char *v221;
  uint64_t v222;
  uint64_t v223;
  char *v224;
  uint64_t v225;
  uint64_t v226;
  char *v227;
  uint64_t v228;
  unint64_t *v229;
  double v230;
  char *v231;
  uint64_t v232;
  uint64_t v233;
  _QWORD *v234;
  uint64_t v235;
  _QWORD *v236;
  uint64_t v237;
  char *v238;
  char *v239;
  uint64_t v240;
  char *v241;
  uint64_t v242;
  _QWORD *v243;
  char *v244;
  char *v245;
  uint64_t v246;
  char *v247;
  uint64_t v248;
  uint64_t v249;
  char *v250;
  char *v251;
  void (*v252)(_QWORD);
  uint64_t v253;
  uint64_t v254;
  unint64_t v255;
  char v256;
  uint64_t v257;

  v252 = a1;
  v194 = a3;
  v185 = *v3;
  v191 = sub_1DC4057D0();
  v190 = *(_QWORD *)(v191 - 8);
  MEMORY[0x1E0C80A78](v191);
  v193 = (char *)v182 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v189 = sub_1DC4052FC();
  v188 = *(_QWORD *)(v189 - 8);
  MEMORY[0x1E0C80A78](v189);
  v192 = (char *)v182 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC089DA4(0, &qword_1EDB3FC50, (uint64_t (*)(uint64_t))sub_1DC141E14, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEC628]);
  MEMORY[0x1E0C80A78](v7);
  v182[0] = (char *)v182 - v8;
  v226 = type metadata accessor for StockFeedLayoutSectionDescriptor(0);
  MEMORY[0x1E0C80A78](v226);
  v182[1] = (char *)v182 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC141E14();
  v229 = v10;
  v232 = *(v10 - 1);
  MEMORY[0x1E0C80A78](v10);
  v183 = (uint64_t)v182 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v184 = (char *)v182 - v13;
  MEMORY[0x1E0C80A78](v14);
  v231 = (char *)v182 - v15;
  v240 = type metadata accessor for StockFeedSectionDescriptor();
  MEMORY[0x1E0C80A78](v240);
  v239 = (char *)v182 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v238 = (char *)v182 - v18;
  sub_1DC141EE4();
  v20 = v19;
  v196 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v237 = (uint64_t)v182 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v22);
  v241 = (char *)v182 - v23;
  MEMORY[0x1E0C80A78](v24);
  v236 = (_QWORD *)((char *)v182 - v25);
  sub_1DC141F5C(0, (unint64_t *)&qword_1EDB2AB10, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790]);
  v27 = v26;
  v246 = *(_QWORD *)(v26 - 8);
  MEMORY[0x1E0C80A78](v26);
  v247 = (char *)v182 - v28;
  sub_1DC142030(0);
  v242 = v29;
  MEMORY[0x1E0C80A78](v29);
  v224 = (char *)v182 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC142054(0);
  MEMORY[0x1E0C80A78](v31);
  v234 = (_QWORD *)((char *)v182 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v33);
  v227 = (char *)v182 - v34;
  sub_1DC14211C(0);
  MEMORY[0x1E0C80A78](v35);
  v195 = (_QWORD *)((char *)v182 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1DC142138();
  v187 = v37;
  MEMORY[0x1E0C80A78](v37);
  v186 = (_QWORD *)((char *)v182 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1DC141F5C(0, (unint64_t *)&qword_1EDB29D60, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60]);
  v249 = *((_QWORD *)v39 - 1);
  v250 = v39;
  MEMORY[0x1E0C80A78](v39);
  v245 = (char *)v182 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v41);
  v244 = (char *)v182 - v42;
  MEMORY[0x1E0C80A78](v43);
  v197 = (char *)v182 - v44;
  v243 = (_QWORD *)sub_1DC407A5C();
  v233 = *(v243 - 1);
  MEMORY[0x1E0C80A78](v243);
  v222 = (uint64_t)v182 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  v219 = sub_1DC40145C();
  v218 = *(_QWORD *)(v219 - 8);
  MEMORY[0x1E0C80A78](v219);
  v220 = (char *)v182 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  v225 = sub_1DC401450();
  v223 = *(_QWORD *)(v225 - 8);
  MEMORY[0x1E0C80A78](v225);
  v221 = (char *)v182 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = (_QWORD *)sub_1DC401438();
  v49 = *(v48 - 1);
  MEMORY[0x1E0C80A78](v48);
  v251 = (char *)v182 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC101FB4(0);
  MEMORY[0x1E0C80A78](v51);
  v53 = (char *)v182 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = sub_1DC407BF4();
  v55 = *(_QWORD *)(v54 - 8);
  MEMORY[0x1E0C80A78](v54);
  v57 = (char *)v182 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  v216 = *(_QWORD *)(*(_QWORD *)&v230 + 336);
  v248 = v27;
  v213 = sub_1DC406C70();
  v214 = v58;
  if (qword_1EDB2CE08 != -1)
    goto LABEL_38;
  while (1)
  {
    v59 = (void *)qword_1EDB2CE00;
    v60 = *MEMORY[0x1E0D5CAA8];
    v217 = v55;
    v61 = *(void (**)(char *, uint64_t, uint64_t))(v55 + 104);
    v212 = v57;
    v215 = v54;
    v61(v57, v60, v54);
    v62 = sub_1DC407C84();
    v63 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 56);
    v211 = v53;
    v63(v53, 1, 1, v62);
    (*(void (**)(char *, _QWORD, _QWORD *))(v49 + 104))(v251, *MEMORY[0x1E0DB5D88], v48);
    v210 = v59;
    sub_1DC405230();
    sub_1DC4092B0();
    v207 = v64;
    v206 = v65;
    sub_1DC405230();
    v205 = v66;
    v204 = v67;
    sub_1DC405260();
    v203 = v68;
    v202 = v69;
    sub_1DC40520C();
    v201 = v70;
    v200 = v71;
    sub_1DC40526C();
    v199 = v72;
    v198 = v73;
    sub_1DC405254();
    v209 = v49;
    sub_1DC405224();
    v75 = v74;
    v77 = v76;
    sub_1DC405248();
    sub_1DC40529C();
    v208 = v48;
    v228 = a2;
    sub_1DC40523C();
    v79 = v78;
    v81 = v80;
    v83 = v82;
    v85 = v84;
    (*(void (**)(char *, _QWORD, uint64_t))(v218 + 104))(v220, *MEMORY[0x1E0DB6098], v219);
    v176 = 0.0;
    v177 = 0;
    v180 = v83;
    v181 = v85;
    v178 = v79;
    v179 = v81;
    v175[0] = v75;
    v175[1] = v77;
    v86 = v221;
    sub_1DC401444();
    v87 = v222;
    v88 = v230;
    sub_1DC1376D4(v222);
    v89 = v212;
    v90 = (uint64_t)v211;
    v91 = v251;
    v92 = sub_1DC407558();
    swift_bridgeObjectRelease();

    (*(void (**)(uint64_t, _QWORD *))(v233 + 8))(v87, v243);
    (*(void (**)(char *, uint64_t))(v223 + 8))(v86, v225);
    (*(void (**)(char *, _QWORD *))(v209 + 8))(v91, v208);
    sub_1DC0926D8(v90, (uint64_t (*)(_QWORD))sub_1DC101FB4);
    v93 = (*(uint64_t (**)(char *, uint64_t))(v217 + 8))(v89, v215);
    v256 = 1;
    MEMORY[0x1E0C80A78](v93);
    v178 = v88;
    v179 = v228;
    v180 = &v256;
    v181 = v92;
    v223 = v92;
    v94 = v252;
    v95 = sub_1DC13CAD4((void (*)(char *))sub_1DC1421AC, (uint64_t)&v176);
    v251 = 0;
    v255 = v95;
    v96 = v246;
    v97 = v227;
    v98 = v248;
    v243 = *(_QWORD **)(v246 + 16);
    ((void (*)(char *, void (*)(_QWORD), uint64_t))v243)(v227, v94, v248);
    v99 = (uint64_t)v97;
    v100 = v234;
    sub_1DC0990BC(v99, (uint64_t)v234, (uint64_t (*)(_QWORD))sub_1DC142054);
    v101 = v247;
    (*(void (**)(char *, _QWORD *, uint64_t))(v96 + 32))(v247, v100, v98);
    sub_1DC1425D4((unint64_t *)&unk_1EDB2AAF0, (unint64_t *)&qword_1EDB2AB10, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790], MEMORY[0x1E0DBC7C0]);
    v225 = v95;
    swift_bridgeObjectRetain();
    v55 = (uint64_t)v224;
    sub_1DC408BF0();
    v242 = *(int *)(v242 + 36);
    *(_QWORD *)(v55 + v242) = 0;
    sub_1DC1421C8(0);
    v103 = (_QWORD *)(v55 + *(int *)(v102 + 36));
    v104 = sub_1DC1425D4((unint64_t *)&unk_1EDB2AB00, (unint64_t *)&qword_1EDB2AB10, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790], MEMORY[0x1E0DBC7C8]);
    v105 = *v103;
    sub_1DC408ED8();
    if (v105 == v254)
      break;
    v106 = v96;
    v107 = v101;
    v234 = v103;
    v233 = v104;
    v235 = v20;
    while (1)
    {
      v108 = v106;
      v109 = (void (*)(uint64_t *, _QWORD))sub_1DC408EF0();
      v110 = v249;
      v111 = v245;
      v57 = v250;
      v252 = *(void (**)(_QWORD))(v249 + 16);
      v252(v245);
      v109(&v254, 0);
      ((void (*)(char *, uint64_t, uint64_t))v243)(v107, v55, v98);
      sub_1DC408EE4();
      (*(void (**)(char *, uint64_t))(v108 + 8))(v107, v98);
      a2 = v110;
      v53 = *(char **)(v110 + 32);
      v112 = v244;
      ((void (*)(char *, char *, char *))v53)(v244, v111, v57);
      v20 = v235;
      v48 = v241;
      v113 = &v241[*(int *)(v235 + 48)];
      v54 = v242;
      v49 = *(_QWORD *)(v55 + v242);
      ((void (*)(char *, char *, char *))v53)(v113, v112, v57);
      if (__OFADD__(v49, 1))
        break;
      *(_QWORD *)(v55 + v54) = v49 + 1;
      v114 = (uint64_t)v236;
      v115 = (char *)v236 + *(int *)(v20 + 48);
      *v236 = v49;
      ((void (*)(char *, char *, char *))v53)(v115, v113, v57);
      v116 = v237;
      sub_1DC092ED0(v114, v237, (uint64_t (*)(_QWORD))sub_1DC141EE4);
      v117 = v20;
      v118 = *(int *)(v20 + 48);
      v119 = (_QWORD *)v116;
      v120 = (char *)v48 + v118;
      *v48 = *v119;
      ((void (*)(char *, char *, char *))v252)((char *)v48 + v118, (char *)v119 + v118, v57);
      v121 = (uint64_t)v238;
      sub_1DC4046FC();
      (*(void (**)(char *, char *))(a2 + 8))(v120, v57);
      v122 = (uint64_t)v239;
      swift_storeEnumTagMultiPayload();
      LOBYTE(v120) = sub_1DC1E04E4(v121, v122);
      sub_1DC0926D8(v122, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedSectionDescriptor);
      sub_1DC0926D8(v121, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedSectionDescriptor);
      if ((v120 & 1) != 0)
      {
        sub_1DC0926D8(v55, (uint64_t (*)(_QWORD))sub_1DC142030);
        v125 = v195;
        sub_1DC092ED0((uint64_t)v119, (uint64_t)v195, (uint64_t (*)(_QWORD))sub_1DC141EE4);
        v124 = 0;
        v20 = v117;
        goto LABEL_9;
      }
      sub_1DC0926D8((uint64_t)v119, (uint64_t (*)(_QWORD))sub_1DC141EE4);
      v123 = *v234;
      v98 = v248;
      sub_1DC408ED8();
      v20 = v117;
      v106 = v246;
      v107 = v247;
      if (v123 == v254)
        goto LABEL_7;
    }
    __break(1u);
LABEL_38:
    swift_once();
  }
LABEL_7:
  sub_1DC0926D8(v55, (uint64_t (*)(_QWORD))sub_1DC142030);
  v124 = 1;
  v125 = v195;
LABEL_9:
  v126 = (uint64_t)v227;
  v127 = v196;
  (*(void (**)(int64_t *, uint64_t, uint64_t, uint64_t))(v196 + 56))(v125, v124, 1, v20);
  sub_1DC0926D8(v126, (uint64_t (*)(_QWORD))sub_1DC142054);
  v128 = (*(uint64_t (**)(int64_t *, uint64_t, uint64_t))(v127 + 48))(v125, 1, v20);
  v129 = v230;
  v130 = v250;
  v131 = v20;
  v132 = v197;
  if (v128 == 1)
  {
    sub_1DC0926D8((uint64_t)v125, (uint64_t (*)(_QWORD))sub_1DC14211C);
LABEL_22:
    swift_bridgeObjectRelease();
LABEL_36:
    v172 = v191;
    v173 = v190;
    (*(void (**)(char *, uint64_t, uint64_t))(v188 + 16))(v192, v228, v189);
    (*(void (**)(char *, _QWORD, uint64_t))(v173 + 104))(v193, *MEMORY[0x1E0DB9DD8], v172);
    type metadata accessor for StockFeedLayoutModel();
    sub_1DC081B48(&qword_1EDB3B310, 255, type metadata accessor for StockFeedLayoutSectionDescriptor, (uint64_t)&unk_1DC41ED28);
    sub_1DC081B48(&qword_1EDB32168, 255, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedLayoutModel, (uint64_t)&unk_1DC413988);
    sub_1DC404564();
    return swift_release();
  }
  v133 = (char *)v125 + *(int *)(v131 + 48);
  v134 = v187;
  v135 = v186;
  v136 = (char *)v186 + *(int *)(v187 + 48);
  *v186 = *v125;
  v137 = *(void (**)(char *, char *, char *))(v249 + 32);
  v137(v136, v133, v130);
  v138 = *v135;
  v137(v132, (char *)v135 + *(int *)(v134 + 48), v130);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)&v129 + 440), *(_QWORD *)(*(_QWORD *)&v129 + 464));
  if ((sub_1DC400C1C() & 1) == 0)
  {
    (*(void (**)(char *, char *))(v249 + 8))(v132, v130);
    goto LABEL_22;
  }
  v139 = v228;
  sub_1DC4052F0();
  v141 = v140;
  v142 = v225;
  v143 = *(_QWORD *)(v225 + 16);
  if (v143)
  {
    v254 = MEMORY[0x1E0DEE9D8];
    sub_1DC2AD2E0(0, v143, 0);
    v144 = v142 + ((*(unsigned __int8 *)(v232 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v232 + 80));
    v145 = *(_QWORD *)(v232 + 72);
    v146 = *(void (**)(char *, unint64_t, unint64_t *))(v232 + 16);
    v147 = v229;
    while (1)
    {
      v148 = (uint64_t)v231;
      v146(v231, v144, v147);
      v149 = v251;
      sub_1DC13DFC4(v148, (double *)&v253);
      v150 = &v257;
      if (v149)
        goto LABEL_41;
      (*(void (**)(uint64_t, unint64_t *))(v232 + 8))(v148, v147);
      v151 = v253;
      v152 = v254;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v251 = 0;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1DC2AD2E0(0, *(_QWORD *)(v152 + 16) + 1, 1);
        v147 = v229;
        v152 = v254;
      }
      v155 = *(_QWORD *)(v152 + 16);
      v154 = *(_QWORD *)(v152 + 24);
      if (v155 >= v154 >> 1)
      {
        sub_1DC2AD2E0(v154 > 1, v155 + 1, 1);
        v147 = v229;
        v152 = v254;
      }
      *(_QWORD *)(v152 + 16) = v155 + 1;
      *(_QWORD *)(v152 + 8 * v155 + 32) = v151;
      v144 += v145;
      if (!--v143)
      {
        swift_bridgeObjectRelease();
        v139 = v228;
        v129 = v230;
        v156 = *(_QWORD *)(v152 + 16);
        if (!v156)
          goto LABEL_27;
        goto LABEL_24;
      }
    }
  }
  swift_bridgeObjectRelease();
  v152 = MEMORY[0x1E0DEE9D8];
  v156 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
  if (v156)
  {
LABEL_24:
    if (v156 == 1)
    {
      v157 = 0;
      v158 = 0.0;
    }
    else
    {
      v157 = v156 & 0x7FFFFFFFFFFFFFFELL;
      v159 = (double *)(v152 + 40);
      v158 = 0.0;
      v160 = v156 & 0x7FFFFFFFFFFFFFFELL;
      do
      {
        v158 = v158 + *(v159 - 1) + *v159;
        v159 += 2;
        v160 -= 2;
      }
      while (v160);
      if (v156 == v157)
        goto LABEL_33;
    }
    v161 = v156 - v157;
    v162 = (double *)(v152 + 8 * v157 + 32);
    do
    {
      v163 = *v162++;
      v158 = v158 + v163;
      --v161;
    }
    while (v161);
  }
  else
  {
LABEL_27:
    v158 = 0.0;
  }
LABEL_33:
  swift_bridgeObjectRelease();
  sub_1DC40523C();
  sub_1DC408F80();
  v165 = v141 - v158 - v164 + -10.0;
  v148 = v226;
  v166 = swift_storeEnumTagMultiPayload();
  MEMORY[0x1E0C80A78](v166);
  v176 = v129;
  v177 = v139;
  v178 = v165;
  LOBYTE(v179) = 0;
  v180 = v185;
  sub_1DC154D50((void (*)(char *))sub_1DC1421EC, (uint64_t)v175);
  type metadata accessor for StockFeedLayoutModel();
  sub_1DC081B48(&qword_1EDB3B308, 255, type metadata accessor for StockFeedLayoutSectionDescriptor, (uint64_t)&unk_1DC41ECF0);
  sub_1DC081B48(&qword_1EDB32160, 255, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedLayoutModel, (uint64_t)&unk_1DC413950);
  v167 = v184;
  sub_1DC405308();
  v147 = &v255;
  v168 = v183;
  sub_1DC13E4F4(v138, v183);
  v169 = *(void (**)(uint64_t, unint64_t *))(v232 + 8);
  v170 = v229;
  v169(v168, v229);
  v150 = *(uint64_t **)(v255 + 16);
  if ((uint64_t)v150 < v138)
  {
    __break(1u);
  }
  else if ((v138 & 0x8000000000000000) == 0)
  {
    v171 = v182[0];
    (*(void (**)(_QWORD, char *, unint64_t *))(v232 + 16))(v182[0], v167, v170);
    sub_1DC220D28(v138, v138, v171);
    v169((uint64_t)v167, v170);
    (*(void (**)(char *, char *))(v249 + 8))(v132, v250);
    goto LABEL_36;
  }
  __break(1u);
LABEL_41:
  (*(void (**)(uint64_t, unint64_t *))(*(v150 - 32) + 8))(v148, v147);
  result = swift_release();
  __break(1u);
  return result;
}

void sub_1DC138FDC(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  _QWORD v32[11];
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v35 = a4;
  v34 = a3;
  v43 = a2;
  v48 = a1;
  v44 = a5;
  v37 = type metadata accessor for StockFeedLayoutSectionDescriptor(0);
  MEMORY[0x1E0C80A78](v37);
  v36 = (char *)v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = sub_1DC4073A8();
  MEMORY[0x1E0C80A78](v33);
  v32[2] = (char *)v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0FEF78(0);
  MEMORY[0x1E0C80A78](v7);
  v32[9] = (char *)v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v32[10] = (char *)v32 - v10;
  v47 = type metadata accessor for StockFeedModel();
  MEMORY[0x1E0C80A78](v47);
  v42 = (char *)v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC142200();
  v38 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v41 = (char *)v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v40 = (char *)v32 - v15;
  MEMORY[0x1E0C80A78](v16);
  v39 = (char *)v32 - v17;
  sub_1DC14239C();
  v32[1] = v18;
  MEMORY[0x1E0C80A78](v18);
  v45 = (char *)v32 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC141F5C(0, (unint64_t *)&qword_1EDB29D60, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60]);
  v49 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  v46 = (char *)v32 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v22);
  sub_1DC142434();
  v32[8] = v23;
  v32[7] = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  v32[5] = (char *)v32 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v25);
  v32[6] = (char *)v32 - v26;
  v27 = type metadata accessor for StockFeedMastheadModel();
  MEMORY[0x1E0C80A78](v27);
  v28 = type metadata accessor for StockFeedSectionDescriptor();
  MEMORY[0x1E0C80A78](v28);
  v32[3] = (char *)v32 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v30);
  sub_1DC4046FC();
  v32[4] = v28;
  v31 = (char *)sub_1DC1393C8 + 4 * word_1DC40DA70[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1DC1393C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(v2 - 256);
  sub_1DC092ED0(v1, v0, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedMastheadModel);
  sub_1DC139CD8(*(_QWORD *)(v2 - 264), v0, v3);
  sub_1DC0926D8(v0, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedMastheadModel);
  sub_1DC141E14();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 0, 1, v4);
}

uint64_t sub_1DC139CD8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v20[2];
  char v21[16];
  uint64_t v22;
  char *v23;
  uint64_t v24;

  v4 = v3;
  v20[1] = a3;
  v7 = type metadata accessor for StockFeedLayoutSectionDescriptor(0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for StockFeedMastheadViewLayoutAttributes();
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for StockFeedMastheadViewLayoutOptions();
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1DC4052FC();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v15, a1, v16);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 40));
  sub_1DC37A774(*(double *)&a2, (uint64_t)v15, (uint64_t)v12);
  sub_1DC142614();
  v18 = (uint64_t)&v9[*(int *)(v17 + 48)];
  sub_1DC0990BC(a2, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedMastheadModel);
  sub_1DC0990BC((uint64_t)v12, v18, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedMastheadViewLayoutAttributes);
  swift_storeEnumTagMultiPayload();
  v22 = v4;
  v23 = v15;
  v24 = a1;
  sub_1DC154D50((void (*)(char *))sub_1DC142680, (uint64_t)v21);
  type metadata accessor for StockFeedLayoutModel();
  sub_1DC081B48(&qword_1EDB3B308, 255, type metadata accessor for StockFeedLayoutSectionDescriptor, (uint64_t)&unk_1DC41ECF0);
  sub_1DC081B48(&qword_1EDB32160, 255, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedLayoutModel, (uint64_t)&unk_1DC413950);
  sub_1DC405308();
  sub_1DC0926D8((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedMastheadViewLayoutAttributes);
  return sub_1DC0926D8((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedMastheadViewLayoutOptions);
}

uint64_t sub_1DC139F10(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  uint64_t v8;
  uint64_t v9;
  _BYTE v11[16];
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;

  v8 = *v4;
  v9 = type metadata accessor for StockFeedLayoutSectionDescriptor(0);
  MEMORY[0x1E0C80A78](v9);
  swift_storeEnumTagMultiPayload();
  v12 = v4;
  v13 = a2;
  v14 = a3;
  v15 = a4 & 1;
  v16 = v8;
  sub_1DC154D50((void (*)(char *))sub_1DC1421EC, (uint64_t)v11);
  type metadata accessor for StockFeedLayoutModel();
  sub_1DC081B48(&qword_1EDB3B308, 255, type metadata accessor for StockFeedLayoutSectionDescriptor, (uint64_t)&unk_1DC41ECF0);
  sub_1DC081B48(&qword_1EDB32160, 255, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedLayoutModel, (uint64_t)&unk_1DC413950);
  return sub_1DC405308();
}

void sub_1DC13A05C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;

  v0 = type metadata accessor for BrandingTitleViewLayoutOptions();
  MEMORY[0x1E0C80A78](v0);
  v1 = type metadata accessor for StockFeedSectionDescriptor();
  MEMORY[0x1E0C80A78](v1);
  sub_1DC141F5C(0, (unint64_t *)&qword_1EDB29D60, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60]);
  sub_1DC4046FC();
  v2 = (char *)&loc_1DC13A14C + dword_1DC13A7C4[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1DC13A16C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  result = sub_1DC0926D8(v1, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedMastheadModel);
  *(_QWORD *)v0 = 0;
  *(_QWORD *)(v0 + 8) = 0;
  *(_QWORD *)(v0 + 16) = 0;
  *(_OWORD *)(v0 + 24) = 0u;
  *(_OWORD *)(v0 + 40) = 0u;
  *(_OWORD *)(v0 + 56) = 0u;
  *(_OWORD *)(v0 + 72) = 0u;
  return result;
}

uint64_t sub_1DC13A7E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  void (*v43)(char *, uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(char *, _QWORD);
  CGFloat v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(char *, uint64_t, uint64_t, uint64_t);
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  int64_t v65;
  unint64_t v66;
  unint64_t v67;
  uint64_t v68;
  void (*v69)(char *, unint64_t, uint64_t);
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  char *v74;
  uint64_t v75;
  CGFloat MaxY;
  void (*v77)(char *, uint64_t, uint64_t);
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  char *v82;
  char *v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD *v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  _QWORD v107[5];
  char v108[8];
  uint64_t v109;
  CGRect v110;

  v89 = a3;
  v93 = (_QWORD *)a2;
  v79 = a1;
  v92 = a5;
  v106 = type metadata accessor for StockFeedLayoutModel();
  MEMORY[0x1E0C80A78](v106);
  v103 = (char *)&v74 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1DC407B04();
  v104 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v74 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC142304();
  v102 = v10;
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v105 = (char *)&v74 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v91 = sub_1DC406358();
  v90 = *(_QWORD *)(v91 - 8);
  MEMORY[0x1E0C80A78](v91);
  v101 = (char *)&v74 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v100 = type metadata accessor for StockFeedLayoutSectionDescriptor(0);
  MEMORY[0x1E0C80A78](v100);
  v99 = (uint64_t)&v74 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC142710(0);
  v88 = v15;
  v87 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v98 = (uint64_t)&v74 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC089DA4(0, &qword_1EDB29120, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB6148], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v17);
  v84 = (char *)&v74 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v83 = (char *)&v74 - v20;
  MEMORY[0x1E0C80A78](v21);
  v82 = (char *)&v74 - v22;
  MEMORY[0x1E0C80A78](v23);
  v81 = (char *)&v74 - v24;
  v97 = sub_1DC407510();
  v96 = *(_QWORD *)(v97 - 8);
  MEMORY[0x1E0C80A78](v97);
  v85 = (char *)&v74 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v26);
  v95 = (char *)&v74 - v27;
  sub_1DC14272C(0);
  MEMORY[0x1E0C80A78](v28);
  v74 = (char *)&v74 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = sub_1DC4073A8();
  v31 = *(_QWORD *)(v30 - 8);
  MEMORY[0x1E0C80A78](v30);
  v33 = (char *)&v74 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC142748(0);
  MEMORY[0x1E0C80A78](v34);
  v36 = (char *)&v74 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC142764(0);
  MEMORY[0x1E0C80A78](v37);
  v39 = (char *)&v74 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  MaxY = COERCE_DOUBLE(sub_1DC407EDC());
  v75 = *(_QWORD *)(*(_QWORD *)&MaxY - 8);
  MEMORY[0x1E0C80A78](*(_QWORD *)&MaxY);
  v41 = (char *)&v74 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  v94 = a4;
  sub_1DC40739C();
  v42 = sub_1DC407408();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56))(v39, 1, 1, v42);
  v43 = *(void (**)(char *, uint64_t, uint64_t))(v31 + 16);
  v78 = v30;
  v77 = v43;
  v43(v33, a4, v30);
  v80 = v33;
  sub_1DC407954();
  v44 = sub_1DC407960();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 56))(v36, 0, 1, v44);
  v45 = sub_1DC407708();
  v46 = (uint64_t)v74;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56))(v74, 1, 1, v45);
  sub_1DC141F5C(0, (unint64_t *)&qword_1EDB29D60, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60]);
  sub_1DC081B48((unint64_t *)&unk_1EDB36ED0, 255, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedSectionDescriptor, (uint64_t)&unk_1DC416818);
  sub_1DC081B48(&qword_1EDB2D778, 255, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedModel, (uint64_t)&unk_1DC429088);
  v47 = sub_1DC40478C();
  sub_1DC0926D8(v46, (uint64_t (*)(_QWORD))sub_1DC14272C);
  sub_1DC0926D8((uint64_t)v36, (uint64_t (*)(_QWORD))sub_1DC142748);
  sub_1DC0926D8((uint64_t)v39, (uint64_t (*)(_QWORD))sub_1DC142764);
  v48 = *(void (**)(char *, _QWORD))(v75 + 8);
  v49 = MaxY;
  v48(v41, *(_QWORD *)&MaxY);
  sub_1DC40739C();
  v79 = v47;
  v50 = sub_1DC40841C();
  v48(v41, *(_QWORD *)&v49);
  sub_1DC142780((uint64_t)v93, (uint64_t)v108);
  if (v109)
    MaxY = CGRectGetMaxY(v110);
  else
    MaxY = 0.0;
  v107[3] = sub_1DC4082FC();
  v107[4] = MEMORY[0x1E0D5F208];
  v107[0] = v50;
  v51 = sub_1DC40148C();
  v52 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 56);
  v52(v81, 1, 1, v51);
  v52(v82, 1, 1, v51);
  v52(v83, 1, 1, v51);
  v52(v84, 1, 1, v51);
  sub_1DC401480();
  swift_allocObject();
  v86 = v50;
  swift_retain();
  sub_1DC401474();
  v53 = v95;
  sub_1DC40754C();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1DC0926D8((uint64_t)v107, (uint64_t (*)(_QWORD))sub_1DC0FF598);
  v54 = (uint64_t)v80;
  v77(v80, v94, v78);
  v55 = (uint64_t)v85;
  (*(void (**)(char *, char *, uint64_t))(v96 + 16))(v85, v53, v97);
  v56 = v98;
  sub_1DC140968(v54, v55, v98);
  sub_1DC14290C(0, (unint64_t *)&qword_1EDB3B210, sub_1DC1427BC);
  v58 = v99;
  v59 = v99 + *(int *)(v57 + 48);
  sub_1DC0990BC(v56, v99, (uint64_t (*)(_QWORD))sub_1DC142710);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v87 + 56))(v58, 0, 1, v88);
  v60 = v93;
  sub_1DC142780((uint64_t)v93, v59);
  swift_storeEnumTagMultiPayload();
  v61 = *MEMORY[0x1E0DBBA10];
  v62 = sub_1DC406340();
  v63 = v101;
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 104))(v101, v61, v62);
  (*(void (**)(char *, _QWORD, uint64_t))(v90 + 104))(v63, *MEMORY[0x1E0DBBA20], v91);
  sub_1DC1427D8(v60, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1DC14282C);
  v64 = sub_1DC4074E0();
  v65 = *(_QWORD *)(v64 + 16);
  if (v65)
  {
    v107[0] = MEMORY[0x1E0DEE9D8];
    sub_1DC2AD2B4(0, v65, 0);
    v66 = (*(unsigned __int8 *)(v104 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v104 + 80);
    v94 = v64;
    v67 = v64 + v66;
    v68 = *(_QWORD *)(v104 + 72);
    v69 = *(void (**)(char *, unint64_t, uint64_t))(v104 + 16);
    do
    {
      v69(v9, v67, v7);
      v69(v103, (unint64_t)v9, v7);
      swift_storeEnumTagMultiPayload();
      sub_1DC081B48(&qword_1EDB32160, 255, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedLayoutModel, (uint64_t)&unk_1DC413950);
      sub_1DC404DD4();
      (*(void (**)(char *, uint64_t))(v104 + 8))(v9, v7);
      v70 = v107[0];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1DC2AD2B4(0, *(_QWORD *)(v70 + 16) + 1, 1);
        v70 = v107[0];
      }
      v72 = *(_QWORD *)(v70 + 16);
      v71 = *(_QWORD *)(v70 + 24);
      if (v72 >= v71 >> 1)
      {
        sub_1DC2AD2B4(v71 > 1, v72 + 1, 1);
        v70 = v107[0];
      }
      *(_QWORD *)(v70 + 16) = v72 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v70+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ *(_QWORD *)(v11 + 72) * v72, v105, v102);
      v107[0] = v70;
      v67 += v68;
      --v65;
    }
    while (v65);
  }
  swift_bridgeObjectRelease();
  sub_1DC081B48(&qword_1EDB3B310, 255, type metadata accessor for StockFeedLayoutSectionDescriptor, (uint64_t)&unk_1DC41ED28);
  sub_1DC081B48(&qword_1EDB32168, 255, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedLayoutModel, (uint64_t)&unk_1DC413988);
  sub_1DC405320();
  swift_release();
  sub_1DC0926D8(v98, (uint64_t (*)(_QWORD))sub_1DC142710);
  return (*(uint64_t (**)(char *, uint64_t))(v96 + 8))(v95, v97);
}

uint64_t sub_1DC13B364@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  void (*v46)(__int128 *, _QWORD);
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t (*v58)(uint64_t);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  int64_t v67;
  unint64_t v68;
  unint64_t v69;
  uint64_t v70;
  void (*v71)(char *, unint64_t, uint64_t);
  char *v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  char *v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  uint64_t v86;
  _QWORD v88[2];
  unint64_t v89;
  int v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  char *v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  char *v108;
  char *v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  _QWORD *v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  char *v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  __int128 v128;
  __int128 v129;
  uint64_t v130;
  uint64_t v131;

  v113 = a3;
  v114 = (_QWORD *)a2;
  v116 = a4;
  v126 = type metadata accessor for StockFeedLayoutModel();
  MEMORY[0x1E0C80A78](v126);
  v123 = (char *)&v91 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v122 = sub_1DC407B04();
  v125 = *(_QWORD *)(v122 - 8);
  MEMORY[0x1E0C80A78](v122);
  v121 = (char *)&v91 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC142304();
  v119 = *(_QWORD *)(v7 - 8);
  v120 = v7;
  MEMORY[0x1E0C80A78](v7);
  v124 = (char *)&v91 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103 = sub_1DC407510();
  v102 = *(_QWORD *)(v103 - 8);
  MEMORY[0x1E0C80A78](v103);
  v110 = (char *)&v91 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC142748(0);
  MEMORY[0x1E0C80A78](v10);
  v101 = (char *)&v91 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1DC4074A4();
  MEMORY[0x1E0C80A78](v12);
  v100 = (char *)&v91 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v98 = sub_1DC407BE8();
  v97 = *(_QWORD *)(v98 - 8);
  MEMORY[0x1E0C80A78](v98);
  v96 = (char *)&v91 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC142200();
  v117 = v15;
  v107 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v94 = (char *)&v91 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v95 = (char *)&v91 - v18;
  v19 = sub_1DC407D98();
  v93 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v99 = (char *)&v91 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v112 = sub_1DC406358();
  v111 = *(_QWORD *)(v112 - 8);
  MEMORY[0x1E0C80A78](v112);
  v109 = (char *)&v91 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v22);
  v106 = (char *)&v91 - v23;
  v118 = type metadata accessor for StockFeedLayoutSectionDescriptor(0);
  MEMORY[0x1E0C80A78](v118);
  v108 = (char *)&v91 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v25);
  v105 = (char *)&v91 - v26;
  v104 = sub_1DC4014A4();
  v27 = *(_QWORD *)(v104 - 8);
  MEMORY[0x1E0C80A78](v104);
  v29 = (char *)&v91 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = sub_1DC40142C();
  v31 = *(_QWORD *)(v30 - 8);
  MEMORY[0x1E0C80A78](v30);
  v33 = (char *)&v91 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = type metadata accessor for StockFeedSectionDescriptor();
  MEMORY[0x1E0C80A78](v34);
  v36 = (char *)&v91 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC141F5C(0, (unint64_t *)&qword_1EDB29D60, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60]);
  v127 = v37;
  sub_1DC4046FC();
  if (swift_getEnumCaseMultiPayload() != 1)
    goto LABEL_28;
  swift_bridgeObjectRelease();
  v115 = v36;
  if (v36[16] != 1)
  {
    v39 = sub_1DC1425D4((unint64_t *)&unk_1EDB29D50, (unint64_t *)&qword_1EDB29D60, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60], MEMORY[0x1E0DB7B98]);
    v40 = sub_1DC408EC0();
    v92 = v19;
    if (!v40)
    {
LABEL_11:
      v50 = v98;
      v106 = (char *)sub_1DC404708();
      v105 = v51;
      v104 = sub_1DC404708();
      v98 = v52;
      v53 = v95;
      sub_1DC4047C8();
      sub_1DC081B48(&qword_1EDB2D778, 255, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedModel, (uint64_t)&unk_1DC429088);
      v54 = v96;
      v55 = v117;
      sub_1DC404360();
      (*(void (**)(char *, uint64_t))(v107 + 8))(v53, v55);
      v56 = sub_1DC407BD0();
      (*(void (**)(char *, uint64_t))(v97 + 8))(v54, v50);
      if ((v56 & 1) != 0)
      {
        (*(void (**)(char *, _QWORD, uint64_t))(v93 + 104))(v99, *MEMORY[0x1E0D5D278], v92);
      }
      else
      {
        sub_1DC081B48((unint64_t *)&unk_1EDB36ED0, 255, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedSectionDescriptor, (uint64_t)&unk_1DC416818);
        sub_1DC404774();
      }
      sub_1DC081B48((unint64_t *)&unk_1EDB36ED0, 255, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedSectionDescriptor, (uint64_t)&unk_1DC416818);
      sub_1DC404780();
      v57 = sub_1DC407960();
      v128 = 0u;
      v129 = 0u;
      v130 = 0;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 56))(v101, 1, 1, v57);
      sub_1DC407498();
      v58 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D5A7E0];
      swift_allocObject();
      v89 = sub_1DC142858();
      v88[0] = 0;
      v88[1] = v117;
      v59 = MEMORY[0x1E0DEE9D8];
      v60 = sub_1DC40748C();
      v131 = v60;
      sub_1DC081B48((unint64_t *)&unk_1EDB2ADC0, 255, v58, MEMORY[0x1E0D5A7D8]);
      v128 = 0u;
      v129 = 0u;
      v130 = 0;
      sub_1DC407540();
      sub_1DC0926D8((uint64_t)&v128, (uint64_t (*)(_QWORD))sub_1DC0FF598);
      sub_1DC14290C(0, (unint64_t *)&qword_1EDB3B210, sub_1DC1427BC);
      v62 = v108;
      v63 = (uint64_t)&v108[*(int *)(v61 + 48)];
      sub_1DC142710(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 56))(v62, 1, 1, v64);
      v65 = v114;
      sub_1DC142780((uint64_t)v114, v63);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, _QWORD, uint64_t))(v111 + 104))(v109, *MEMORY[0x1E0DBBA50], v112);
      sub_1DC1427D8(v65, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1DC14282C);
      v66 = sub_1DC4074E0();
      v67 = *(_QWORD *)(v66 + 16);
      if (v67)
      {
        v127 = v60;
        *(_QWORD *)&v128 = v59;
        sub_1DC2AD2B4(0, v67, 0);
        v68 = (*(unsigned __int8 *)(v125 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v125 + 80);
        v117 = v66;
        v69 = v66 + v68;
        v70 = *(_QWORD *)(v125 + 72);
        v71 = *(void (**)(char *, unint64_t, uint64_t))(v125 + 16);
        v72 = v121;
        do
        {
          v73 = v122;
          v71(v72, v69, v122);
          v71(v123, (unint64_t)v72, v73);
          swift_storeEnumTagMultiPayload();
          sub_1DC081B48(&qword_1EDB32160, 255, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedLayoutModel, (uint64_t)&unk_1DC413950);
          sub_1DC404DD4();
          (*(void (**)(char *, uint64_t))(v125 + 8))(v72, v73);
          v74 = v128;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1DC2AD2B4(0, *(_QWORD *)(v74 + 16) + 1, 1);
            v74 = v128;
          }
          v76 = *(_QWORD *)(v74 + 16);
          v75 = *(_QWORD *)(v74 + 24);
          v77 = v124;
          if (v76 >= v75 >> 1)
          {
            sub_1DC2AD2B4(v75 > 1, v76 + 1, 1);
            v74 = v128;
          }
          *(_QWORD *)(v74 + 16) = v76 + 1;
          (*(void (**)(unint64_t, char *, uint64_t))(v119 + 32))(v74+ ((*(unsigned __int8 *)(v119 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v119 + 80))+ *(_QWORD *)(v119 + 72) * v76, v77, v120);
          *(_QWORD *)&v128 = v74;
          v69 += v70;
          --v67;
        }
        while (v67);
      }
      swift_bridgeObjectRelease();
      sub_1DC081B48(&qword_1EDB3B310, 255, type metadata accessor for StockFeedLayoutSectionDescriptor, (uint64_t)&unk_1DC41ED28);
      sub_1DC081B48(&qword_1EDB32168, 255, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedLayoutModel, (uint64_t)&unk_1DC413988);
      sub_1DC405320();
      swift_release();
      (*(void (**)(char *, uint64_t))(v102 + 8))(v110, v103);
      goto LABEL_26;
    }
    v41 = v40;
    v131 = MEMORY[0x1E0DEE9D8];
    sub_1DC2AD2FC(0, v40 & ~(v40 >> 63), 0);
    v42 = v131;
    sub_1DC408E90();
    if ((v41 & 0x8000000000000000) == 0)
    {
      v43 = v117;
      v44 = v94;
      v45 = v107;
      do
      {
        v46 = (void (*)(__int128 *, _QWORD))sub_1DC408EF0();
        (*(void (**)(char *))(v45 + 16))(v44);
        v46(&v128, 0);
        v131 = v42;
        v47 = v39;
        v49 = *(_QWORD *)(v42 + 16);
        v48 = *(_QWORD *)(v42 + 24);
        if (v49 >= v48 >> 1)
        {
          sub_1DC2AD2FC(v48 > 1, v49 + 1, 1);
          v42 = v131;
        }
        *(_QWORD *)(v42 + 16) = v49 + 1;
        (*(void (**)(unint64_t, char *, uint64_t))(v45 + 32))(v42+ ((*(unsigned __int8 *)(v45 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80))+ *(_QWORD *)(v45 + 72) * v49, v44, v43);
        sub_1DC408EE4();
        --v41;
        v39 = v47;
      }
      while (v41);
      goto LABEL_11;
    }
    __break(1u);
LABEL_28:
    v90 = 0;
    v89 = 413;
    goto LABEL_29;
  }
  sub_1DC407528();
  sub_1DC401420();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v33, v30);
  v38 = (*(uint64_t (**)(char *, uint64_t))(v27 + 88))(v29, v104);
  if (v38 != *MEMORY[0x1E0DB6228] && v38 != *MEMORY[0x1E0DB6238] && v38 != *MEMORY[0x1E0DB6240])
  {
    while (1)
    {
      v90 = 0;
      v89 = 359;
LABEL_29:
      sub_1DC409838();
      __break(1u);
    }
  }
  sub_1DC1425D4((unint64_t *)&unk_1EDB29D50, (unint64_t *)&qword_1EDB29D60, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60], MEMORY[0x1E0DB7B98]);
  v78 = sub_1DC408EA8();
  MEMORY[0x1E0C80A78](v78);
  v89 = a1;
  v79 = sub_1DC154FE4((void (*)(uint64_t *__return_ptr, uint64_t *))sub_1DC1428D4, (uint64_t)v88, v78);
  swift_bridgeObjectRelease();
  swift_retain();
  v80 = sub_1DC14162C(v79);
  swift_bridgeObjectRelease();
  swift_release();
  sub_1DC14101C(v80);
  swift_bridgeObjectRelease();
  sub_1DC14290C(0, (unint64_t *)&qword_1EDB3B210, sub_1DC1427BC);
  v82 = v105;
  v83 = (uint64_t)&v105[*(int *)(v81 + 48)];
  sub_1DC142710(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v84 - 8) + 56))(v82, 1, 1, v84);
  v85 = v114;
  sub_1DC142780((uint64_t)v114, v83);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(char *, _QWORD, uint64_t))(v111 + 104))(v106, *MEMORY[0x1E0DBBA50], v112);
  sub_1DC1427D8(v85, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1DC14282C);
  sub_1DC081B48(&qword_1EDB3B310, 255, type metadata accessor for StockFeedLayoutSectionDescriptor, (uint64_t)&unk_1DC41ED28);
  sub_1DC081B48(&qword_1EDB32168, 255, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedLayoutModel, (uint64_t)&unk_1DC413988);
  sub_1DC405320();
LABEL_26:
  sub_1DC142534();
  return sub_1DC0926D8((uint64_t)&v115[*(int *)(v86 + 64)], (uint64_t (*)(_QWORD))sub_1DC0FEF78);
}

uint64_t sub_1DC13C28C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t);
  uint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t);
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  _QWORD v34[5];
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  _OWORD v40[2];
  uint64_t v41;

  v34[4] = a3;
  v35 = a2;
  v34[0] = a1;
  v39 = type metadata accessor for StockFeedLayoutModel();
  MEMORY[0x1E0C80A78](v39);
  v4 = (char *)v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1DC407B04();
  v38 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC142304();
  v36 = v8;
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v37 = (char *)v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1DC407510();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1DC406358();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)v34 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for StockFeedLayoutSectionDescriptor(0);
  MEMORY[0x1E0C80A78](v19);
  v34[1] = (char *)v34 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34[2] = v21;
  swift_storeEnumTagMultiPayload();
  v22 = *MEMORY[0x1E0DBBA50];
  v23 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 104);
  v34[3] = v18;
  v23(v18, v22, v15);
  sub_1DC141F5C(0, (unint64_t *)&qword_1EDB29D60, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60]);
  sub_1DC1429EC();
  memset(v40, 0, sizeof(v40));
  v41 = 0;
  sub_1DC407540();
  sub_1DC0926D8((uint64_t)v40, (uint64_t (*)(_QWORD))sub_1DC0FF598);
  v24 = sub_1DC4074E0();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  v25 = *(_QWORD *)(v24 + 16);
  if (v25)
  {
    *(_QWORD *)&v40[0] = MEMORY[0x1E0DEE9D8];
    sub_1DC2AD2B4(0, v25, 0);
    v26 = v38;
    v27 = *(unsigned __int8 *)(v38 + 80);
    v34[0] = v24;
    v28 = v24 + ((v27 + 32) & ~v27);
    v35 = *(_QWORD *)(v38 + 72);
    v29 = *(void (**)(char *, uint64_t, uint64_t))(v38 + 16);
    do
    {
      v29(v7, v28, v5);
      v29(v4, (uint64_t)v7, v5);
      swift_storeEnumTagMultiPayload();
      sub_1DC081B48(&qword_1EDB32160, 255, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedLayoutModel, (uint64_t)&unk_1DC413950);
      sub_1DC404DD4();
      (*(void (**)(char *, uint64_t))(v26 + 8))(v7, v5);
      v30 = *(_QWORD *)&v40[0];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1DC2AD2B4(0, *(_QWORD *)(v30 + 16) + 1, 1);
        v30 = *(_QWORD *)&v40[0];
      }
      v32 = *(_QWORD *)(v30 + 16);
      v31 = *(_QWORD *)(v30 + 24);
      if (v32 >= v31 >> 1)
      {
        sub_1DC2AD2B4(v31 > 1, v32 + 1, 1);
        v30 = *(_QWORD *)&v40[0];
      }
      *(_QWORD *)(v30 + 16) = v32 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v30+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(_QWORD *)(v9 + 72) * v32, v37, v36);
      *(_QWORD *)&v40[0] = v30;
      v28 += v35;
      --v25;
      v26 = v38;
    }
    while (v25);
  }
  swift_bridgeObjectRelease();
  sub_1DC081B48(&qword_1EDB3B310, 255, type metadata accessor for StockFeedLayoutSectionDescriptor, (uint64_t)&unk_1DC41ED28);
  sub_1DC081B48(&qword_1EDB32168, 255, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedLayoutModel, (uint64_t)&unk_1DC413988);
  return sub_1DC405320();
}

uint64_t sub_1DC13C6B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t);
  uint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t);
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  _QWORD v34[5];
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  _OWORD v40[2];
  uint64_t v41;

  v34[4] = a3;
  v35 = a2;
  v34[0] = a1;
  v39 = type metadata accessor for StockFeedLayoutModel();
  MEMORY[0x1E0C80A78](v39);
  v4 = (char *)v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1DC407B04();
  v38 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC142304();
  v36 = v8;
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v37 = (char *)v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1DC407510();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1DC406358();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)v34 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for StockFeedLayoutSectionDescriptor(0);
  MEMORY[0x1E0C80A78](v19);
  v34[1] = (char *)v34 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34[2] = v21;
  swift_storeEnumTagMultiPayload();
  v22 = *MEMORY[0x1E0DBBA50];
  v23 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 104);
  v34[3] = v18;
  v23(v18, v22, v15);
  sub_1DC141F5C(0, (unint64_t *)&qword_1EDB29D60, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60]);
  sub_1DC1429EC();
  memset(v40, 0, sizeof(v40));
  v41 = 0;
  sub_1DC407540();
  sub_1DC0926D8((uint64_t)v40, (uint64_t (*)(_QWORD))sub_1DC0FF598);
  v24 = sub_1DC4074E0();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  v25 = *(_QWORD *)(v24 + 16);
  if (v25)
  {
    *(_QWORD *)&v40[0] = MEMORY[0x1E0DEE9D8];
    sub_1DC2AD2B4(0, v25, 0);
    v26 = v38;
    v27 = *(unsigned __int8 *)(v38 + 80);
    v34[0] = v24;
    v28 = v24 + ((v27 + 32) & ~v27);
    v35 = *(_QWORD *)(v38 + 72);
    v29 = *(void (**)(char *, uint64_t, uint64_t))(v38 + 16);
    do
    {
      v29(v7, v28, v5);
      v29(v4, (uint64_t)v7, v5);
      swift_storeEnumTagMultiPayload();
      sub_1DC081B48(&qword_1EDB32160, 255, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedLayoutModel, (uint64_t)&unk_1DC413950);
      sub_1DC404DD4();
      (*(void (**)(char *, uint64_t))(v26 + 8))(v7, v5);
      v30 = *(_QWORD *)&v40[0];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1DC2AD2B4(0, *(_QWORD *)(v30 + 16) + 1, 1);
        v30 = *(_QWORD *)&v40[0];
      }
      v32 = *(_QWORD *)(v30 + 16);
      v31 = *(_QWORD *)(v30 + 24);
      if (v32 >= v31 >> 1)
      {
        sub_1DC2AD2B4(v31 > 1, v32 + 1, 1);
        v30 = *(_QWORD *)&v40[0];
      }
      *(_QWORD *)(v30 + 16) = v32 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v30+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(_QWORD *)(v9 + 72) * v32, v37, v36);
      *(_QWORD *)&v40[0] = v30;
      v28 += v35;
      --v25;
      v26 = v38;
    }
    while (v25);
  }
  swift_bridgeObjectRelease();
  sub_1DC081B48(&qword_1EDB3B310, 255, type metadata accessor for StockFeedLayoutSectionDescriptor, (uint64_t)&unk_1DC41ED28);
  sub_1DC081B48(&qword_1EDB32168, 255, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedLayoutModel, (uint64_t)&unk_1DC413988);
  return sub_1DC405320();
}

unint64_t sub_1DC13CAD4(void (*a1)(char *), uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(void);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  void (*v32)(uint64_t *, _QWORD);
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *, uint64_t, uint64_t);
  char *v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  char *v52;
  char *v53;
  void (*v54)(char *, unint64_t, uint64_t, __n128);
  char *v55;
  uint64_t v56;
  char *v57;
  char *v58;
  char *v59;
  void (*v60)(char *);
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65[5];
  uint64_t v66;

  v60 = a1;
  v61 = a2;
  sub_1DC142380(0);
  MEMORY[0x1E0C80A78](v2);
  v59 = (char *)&v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC141E14();
  v62 = *(_QWORD *)(v4 - 8);
  v63 = v4;
  MEMORY[0x1E0C80A78](v4);
  v53 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v50 = (char *)&v48 - v7;
  sub_1DC141F5C(0, (unint64_t *)&qword_1EDB29D60, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60]);
  v9 = v8;
  v10 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v58 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v57 = (char *)&v48 - v13;
  v14 = MEMORY[0x1E0DBC790];
  sub_1DC141F5C(0, (unint64_t *)&qword_1EDB2AB10, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790]);
  v16 = v15;
  v17 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v48 - v18;
  sub_1DC1421C8(0);
  v21 = v20;
  v22 = MEMORY[0x1E0C80A78](v20);
  v24 = (char *)&v48 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = v17;
  v54 = *(void (**)(char *, unint64_t, uint64_t, __n128))(v17 + 16);
  v54(v19, v64, v16, v22);
  sub_1DC1425D4((unint64_t *)&unk_1EDB2AAF0, (unint64_t *)&qword_1EDB2AB10, (uint64_t (*)(uint64_t, _QWORD *))v14, MEMORY[0x1E0DBC7C0]);
  v55 = v19;
  sub_1DC408BF0();
  v25 = (uint64_t)v24;
  v26 = &v24[*(int *)(v21 + 36)];
  v27 = sub_1DC1425D4((unint64_t *)&unk_1EDB2AB00, (unint64_t *)&qword_1EDB2AB10, (uint64_t (*)(uint64_t, _QWORD *))v14, MEMORY[0x1E0DBC7C8]);
  v28 = *(_QWORD *)v26;
  sub_1DC408ED8();
  if (v28 == v65[0])
  {
    v64 = MEMORY[0x1E0DEE9D8];
LABEL_3:
    sub_1DC0926D8(v25, (uint64_t (*)(_QWORD))sub_1DC1421C8);
  }
  else
  {
    v64 = MEMORY[0x1E0DEE9D8];
    v49 = v10;
    v51 = v27;
    v52 = v26;
    v29 = v57;
    while (1)
    {
      v32 = (void (*)(uint64_t *, _QWORD))sub_1DC408EF0();
      (*(void (**)(char *))(v10 + 16))(v29);
      v32(v65, 0);
      v33 = v55;
      v34 = v25;
      ((void (*)(char *, uint64_t, uint64_t))v54)(v55, v25, v16);
      sub_1DC408EE4();
      (*(void (**)(char *, uint64_t))(v56 + 8))(v33, v16);
      v35 = v58;
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v58, v29, v9);
      v36 = (uint64_t)v59;
      v37 = v66;
      v60(v35);
      v66 = v37;
      if (v37)
        break;
      (*(void (**)(char *, uint64_t))(v10 + 8))(v35, v9);
      v39 = v62;
      v38 = v63;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v62 + 48))(v36, 1, v63) == 1)
      {
        sub_1DC0926D8(v36, (uint64_t (*)(_QWORD))sub_1DC142380);
        v25 = v34;
        v30 = v52;
      }
      else
      {
        v40 = v9;
        v41 = *(void (**)(char *, uint64_t, uint64_t))(v39 + 32);
        v42 = v50;
        v41(v50, v36, v38);
        v41(v53, (uint64_t)v42, v38);
        v25 = v34;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v64 = sub_1DC16636C(0, *(_QWORD *)(v64 + 16) + 1, 1, v64);
        v44 = *(_QWORD *)(v64 + 16);
        v43 = *(_QWORD *)(v64 + 24);
        v9 = v40;
        if (v44 >= v43 >> 1)
          v64 = sub_1DC16636C(v43 > 1, v44 + 1, 1, v64);
        v10 = v49;
        v45 = v63;
        v46 = v64;
        *(_QWORD *)(v64 + 16) = v44 + 1;
        v41((char *)(v46+ ((*(unsigned __int8 *)(v62 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v62 + 80))+ *(_QWORD *)(v62 + 72) * v44), (uint64_t)v53, v45);
        v30 = v52;
      }
      v31 = *(_QWORD *)v30;
      sub_1DC408ED8();
      if (v31 == v65[0])
        goto LABEL_3;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v35, v9);
    sub_1DC0926D8(v25, (uint64_t (*)(_QWORD))sub_1DC1421C8);
    swift_bridgeObjectRelease();
  }
  return v64;
}

unint64_t sub_1DC13CF98(void (*a1)(char *), uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  void (*v33)(uint64_t *, _QWORD);
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, uint64_t, uint64_t);
  char *v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  char *v53;
  char *v54;
  void (*v55)(char *, uint64_t, uint64_t, __n128);
  char *v56;
  uint64_t v57;
  char *v58;
  char *v59;
  char *v60;
  void (*v61)(char *);
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66[5];
  uint64_t v67;

  v3 = v2;
  v61 = a1;
  v62 = a2;
  sub_1DC142AC4(0);
  MEMORY[0x1E0C80A78](v4);
  v60 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC142AE0();
  v63 = *(_QWORD *)(v6 - 8);
  v64 = v6;
  MEMORY[0x1E0C80A78](v6);
  v54 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v51 = (char *)&v49 - v9;
  sub_1DC142B5C();
  v11 = v10;
  v12 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v59 = (char *)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v58 = (char *)&v49 - v15;
  sub_1DC142BD8();
  v17 = v16;
  v18 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v49 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC142CC0();
  v22 = v21;
  v23 = MEMORY[0x1E0C80A78](v21);
  v25 = (char *)&v49 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = v18;
  v55 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v18 + 16);
  v55(v20, v3, v17, v23);
  sub_1DC081B48(&qword_1F034C048, 255, (uint64_t (*)(uint64_t))sub_1DC142BD8, MEMORY[0x1E0DB7B90]);
  v56 = v20;
  sub_1DC408BF0();
  v26 = (uint64_t)v25;
  v27 = &v25[*(int *)(v22 + 36)];
  v28 = sub_1DC081B48(&qword_1F034C040, 255, (uint64_t (*)(uint64_t))sub_1DC142BD8, MEMORY[0x1E0DB7B98]);
  v29 = *(_QWORD *)v27;
  sub_1DC408ED8();
  if (v29 == v66[0])
  {
    v65 = MEMORY[0x1E0DEE9D8];
LABEL_3:
    sub_1DC0926D8(v26, (uint64_t (*)(_QWORD))sub_1DC142CC0);
  }
  else
  {
    v65 = MEMORY[0x1E0DEE9D8];
    v50 = v12;
    v52 = v28;
    v53 = v27;
    v30 = v58;
    while (1)
    {
      v33 = (void (*)(uint64_t *, _QWORD))sub_1DC408EF0();
      (*(void (**)(char *))(v12 + 16))(v30);
      v33(v66, 0);
      v34 = v56;
      v35 = v26;
      ((void (*)(char *, uint64_t, uint64_t))v55)(v56, v26, v17);
      sub_1DC408EE4();
      (*(void (**)(char *, uint64_t))(v57 + 8))(v34, v17);
      v36 = v59;
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v59, v30, v11);
      v37 = (uint64_t)v60;
      v38 = v67;
      v61(v36);
      v67 = v38;
      if (v38)
        break;
      (*(void (**)(char *, uint64_t))(v12 + 8))(v36, v11);
      v40 = v63;
      v39 = v64;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v63 + 48))(v37, 1, v64) == 1)
      {
        sub_1DC0926D8(v37, (uint64_t (*)(_QWORD))sub_1DC142AC4);
        v26 = v35;
        v31 = v53;
      }
      else
      {
        v41 = v11;
        v42 = *(void (**)(char *, uint64_t, uint64_t))(v40 + 32);
        v43 = v51;
        v42(v51, v37, v39);
        v42(v54, (uint64_t)v43, v39);
        v26 = v35;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v65 = sub_1DC166B6C(0, *(_QWORD *)(v65 + 16) + 1, 1, v65);
        v45 = *(_QWORD *)(v65 + 16);
        v44 = *(_QWORD *)(v65 + 24);
        v11 = v41;
        if (v45 >= v44 >> 1)
          v65 = sub_1DC166B6C(v44 > 1, v45 + 1, 1, v65);
        v12 = v50;
        v46 = v64;
        v47 = v65;
        *(_QWORD *)(v65 + 16) = v45 + 1;
        v42((char *)(v47+ ((*(unsigned __int8 *)(v63 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80))+ *(_QWORD *)(v63 + 72) * v45), (uint64_t)v54, v46);
        v31 = v53;
      }
      v32 = *(_QWORD *)v31;
      sub_1DC408ED8();
      if (v32 == v66[0])
        goto LABEL_3;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v36, v11);
    sub_1DC0926D8(v26, (uint64_t (*)(_QWORD))sub_1DC142CC0);
    swift_bridgeObjectRelease();
  }
  return v65;
}

unint64_t sub_1DC13D440(void (*a1)(char *), uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(void);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  void (*v30)(uint64_t *, _QWORD);
  char *v31;
  char *v32;
  uint64_t v33;
  void (*v34)(char *, char *, uint64_t);
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  char *v44;
  char *v45;
  char *v46;
  void (*v47)(char *, unint64_t, uint64_t, __n128);
  char *v48;
  uint64_t v49;
  char *v50;
  char *v51;
  void (*v52)(char *);
  uint64_t v53;
  char *v54;
  unint64_t v55;
  uint64_t v56[4];
  uint64_t v57;

  v52 = a1;
  v53 = a2;
  sub_1DC142D3C();
  MEMORY[0x1E0C80A78](v2);
  v51 = (char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC141F5C(0, (unint64_t *)&qword_1EDB29D60, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v46 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v44 = (char *)&v44 - v9;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v44 - v11;
  MEMORY[0x1E0C80A78](v13);
  v50 = (char *)&v44 - v14;
  v15 = MEMORY[0x1E0DBC790];
  sub_1DC141F5C(0, (unint64_t *)&qword_1EDB2AB10, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790]);
  v17 = v16;
  v18 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v44 - v19;
  sub_1DC1421C8(0);
  v22 = v21;
  v23 = MEMORY[0x1E0C80A78](v21);
  v25 = (char *)&v44 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = v18;
  v47 = *(void (**)(char *, unint64_t, uint64_t, __n128))(v18 + 16);
  v47(v20, v55, v17, v23);
  sub_1DC1425D4((unint64_t *)&unk_1EDB2AAF0, (unint64_t *)&qword_1EDB2AB10, (uint64_t (*)(uint64_t, _QWORD *))v15, MEMORY[0x1E0DBC7C0]);
  v48 = v20;
  sub_1DC408BF0();
  v26 = &v25[*(int *)(v22 + 36)];
  sub_1DC1425D4((unint64_t *)&unk_1EDB2AB00, (unint64_t *)&qword_1EDB2AB10, (uint64_t (*)(uint64_t, _QWORD *))v15, MEMORY[0x1E0DBC7C8]);
  v54 = v26;
  v27 = *(_QWORD *)v26;
  sub_1DC408ED8();
  if (v27 == v56[0])
  {
    v55 = MEMORY[0x1E0DEE9D8];
LABEL_3:
    sub_1DC0926D8((uint64_t)v25, (uint64_t (*)(_QWORD))sub_1DC1421C8);
  }
  else
  {
    v45 = v12;
    v55 = MEMORY[0x1E0DEE9D8];
    while (1)
    {
      v30 = (void (*)(uint64_t *, _QWORD))sub_1DC408EF0();
      v31 = v50;
      (*(void (**)(char *))(v6 + 16))(v50);
      v30(v56, 0);
      v32 = v48;
      v33 = (uint64_t)v25;
      ((void (*)(char *, char *, uint64_t))v47)(v48, v25, v17);
      sub_1DC408EE4();
      (*(void (**)(char *, uint64_t))(v49 + 8))(v32, v17);
      v34 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
      v35 = v45;
      v34(v45, v31, v5);
      v36 = (uint64_t)v51;
      v37 = v57;
      v52(v35);
      if (v37)
        break;
      v57 = 0;
      (*(void (**)(char *, uint64_t))(v6 + 8))(v35, v5);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v36, 1, v5) == 1)
      {
        sub_1DC0926D8(v36, (uint64_t (*)(_QWORD))sub_1DC142D3C);
        v28 = v54;
      }
      else
      {
        v38 = v44;
        v34(v44, (char *)v36, v5);
        v34(v46, v38, v5);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v28 = v54;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          v55 = sub_1DC166E2C(0, *(_QWORD *)(v55 + 16) + 1, 1, v55);
        v41 = *(_QWORD *)(v55 + 16);
        v40 = *(_QWORD *)(v55 + 24);
        if (v41 >= v40 >> 1)
          v55 = sub_1DC166E2C(v40 > 1, v41 + 1, 1, v55);
        v42 = v55;
        *(_QWORD *)(v55 + 16) = v41 + 1;
        v34((char *)(v42+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v41), v46, v5);
      }
      v29 = *(_QWORD *)v28;
      v25 = (char *)v33;
      sub_1DC408ED8();
      if (v29 == v56[0])
        goto LABEL_3;
    }
    (*(void (**)(char *, uint64_t))(v6 + 8))(v35, v5);
    sub_1DC0926D8(v33, (uint64_t (*)(_QWORD))sub_1DC1421C8);
    swift_bridgeObjectRelease();
  }
  return v55;
}

unint64_t sub_1DC13D8D0(void (*a1)(char *), uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(void);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  void (*v30)(uint64_t *, _QWORD);
  char *v31;
  char *v32;
  uint64_t v33;
  void (*v34)(char *, char *, uint64_t);
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  char *v44;
  char *v45;
  char *v46;
  void (*v47)(char *, unint64_t, uint64_t, __n128);
  char *v48;
  uint64_t v49;
  char *v50;
  char *v51;
  void (*v52)(char *);
  uint64_t v53;
  char *v54;
  unint64_t v55;
  uint64_t v56[4];
  uint64_t v57;

  v52 = a1;
  v53 = a2;
  sub_1DC142DA0(0);
  MEMORY[0x1E0C80A78](v2);
  v51 = (char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC142200();
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v46 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v44 = (char *)&v44 - v9;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v44 - v11;
  MEMORY[0x1E0C80A78](v13);
  v50 = (char *)&v44 - v14;
  v15 = MEMORY[0x1E0DB7B60];
  sub_1DC141F5C(0, (unint64_t *)&qword_1EDB29D60, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60]);
  v17 = v16;
  v18 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v44 - v19;
  sub_1DC14239C();
  v22 = v21;
  v23 = MEMORY[0x1E0C80A78](v21);
  v25 = (char *)&v44 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = v18;
  v47 = *(void (**)(char *, unint64_t, uint64_t, __n128))(v18 + 16);
  v47(v20, v55, v17, v23);
  sub_1DC1425D4(&qword_1EDB426C8, (unint64_t *)&qword_1EDB29D60, (uint64_t (*)(uint64_t, _QWORD *))v15, MEMORY[0x1E0DB7B90]);
  v48 = v20;
  sub_1DC408BF0();
  v26 = &v25[*(int *)(v22 + 36)];
  sub_1DC1425D4((unint64_t *)&unk_1EDB29D50, (unint64_t *)&qword_1EDB29D60, (uint64_t (*)(uint64_t, _QWORD *))v15, MEMORY[0x1E0DB7B98]);
  v54 = v26;
  v27 = *(_QWORD *)v26;
  sub_1DC408ED8();
  if (v27 == v56[0])
  {
    v55 = MEMORY[0x1E0DEE9D8];
LABEL_3:
    sub_1DC0926D8((uint64_t)v25, (uint64_t (*)(_QWORD))sub_1DC14239C);
  }
  else
  {
    v45 = v12;
    v55 = MEMORY[0x1E0DEE9D8];
    while (1)
    {
      v30 = (void (*)(uint64_t *, _QWORD))sub_1DC408EF0();
      v31 = v50;
      (*(void (**)(char *))(v6 + 16))(v50);
      v30(v56, 0);
      v32 = v48;
      v33 = (uint64_t)v25;
      ((void (*)(char *, char *, uint64_t))v47)(v48, v25, v17);
      sub_1DC408EE4();
      (*(void (**)(char *, uint64_t))(v49 + 8))(v32, v17);
      v34 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
      v35 = v45;
      v34(v45, v31, v5);
      v36 = (uint64_t)v51;
      v37 = v57;
      v52(v35);
      if (v37)
        break;
      v57 = 0;
      (*(void (**)(char *, uint64_t))(v6 + 8))(v35, v5);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v36, 1, v5) == 1)
      {
        sub_1DC0926D8(v36, (uint64_t (*)(_QWORD))sub_1DC142DA0);
        v28 = v54;
      }
      else
      {
        v38 = v44;
        v34(v44, (char *)v36, v5);
        v34(v46, v38, v5);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v28 = v54;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          v55 = sub_1DC166E40(0, *(_QWORD *)(v55 + 16) + 1, 1, v55);
        v41 = *(_QWORD *)(v55 + 16);
        v40 = *(_QWORD *)(v55 + 24);
        if (v41 >= v40 >> 1)
          v55 = sub_1DC166E40(v40 > 1, v41 + 1, 1, v55);
        v42 = v55;
        *(_QWORD *)(v55 + 16) = v41 + 1;
        v34((char *)(v42+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v41), v46, v5);
      }
      v29 = *(_QWORD *)v28;
      v25 = (char *)v33;
      sub_1DC408ED8();
      if (v29 == v56[0])
        goto LABEL_3;
    }
    (*(void (**)(char *, uint64_t))(v6 + 8))(v35, v5);
    sub_1DC0926D8(v33, (uint64_t (*)(_QWORD))sub_1DC14239C);
    swift_bridgeObjectRelease();
  }
  return v55;
}

unint64_t sub_1DC13DD50(void (*a1)(_QWORD), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  char *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v25;
  void (*v26)(_QWORD);
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;

  v31 = a2;
  sub_1DC0ED4AC(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0F8190();
  v28 = v9;
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v30 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v27 = (char *)&v25 - v13;
  v14 = *(_QWORD *)(a3 + 16);
  if (!v14)
    return MEMORY[0x1E0DEE9D8];
  v15 = *(_QWORD *)(sub_1DC4010E4() - 8);
  v16 = a3 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
  v29 = *(_QWORD *)(v15 + 72);
  v25 = a3;
  swift_bridgeObjectRetain();
  v17 = MEMORY[0x1E0DEE9D8];
  v26 = a1;
  v18 = v28;
  do
  {
    a1(v16);
    if (v3)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v17;
    }
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v18) == 1)
    {
      sub_1DC0926D8((uint64_t)v8, (uint64_t (*)(_QWORD))sub_1DC0ED4AC);
    }
    else
    {
      v19 = v10;
      v20 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
      v21 = v27;
      v20(v27, v8, v18);
      v20(v30, v21, v18);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v17 = sub_1DC1668E0(0, *(_QWORD *)(v17 + 16) + 1, 1, v17);
      v23 = *(_QWORD *)(v17 + 16);
      v22 = *(_QWORD *)(v17 + 24);
      if (v23 >= v22 >> 1)
        v17 = sub_1DC1668E0(v22 > 1, v23 + 1, 1, v17);
      *(_QWORD *)(v17 + 16) = v23 + 1;
      v18 = v28;
      v20((char *)(v17+ ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80))+ *(_QWORD *)(v19 + 72) * v23), v30, v28);
      v10 = v19;
      a1 = v26;
    }
    v16 += v29;
    --v14;
  }
  while (v14);
  swift_bridgeObjectRelease();
  return v17;
}

uint64_t sub_1DC13DFC4@<X0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  void (*v17)(char *, _QWORD);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  double v24;
  double v25;
  uint64_t v26;
  double *v27;
  uint64_t v28;
  uint64_t v29;
  double *v30;
  double v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  double *v36;
  uint64_t v37;
  double *v38;
  uint64_t v39;
  uint64_t v40;
  double *v41;
  double v42;
  uint64_t v43;
  double *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50[32];
  uint64_t v51;

  v44 = a2;
  v3 = type metadata accessor for StockFeedLayoutSectionDescriptor(0);
  MEMORY[0x1E0C80A78](v3);
  v45 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = type metadata accessor for StockFeedLayoutModel();
  MEMORY[0x1E0C80A78](v49);
  v6 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC142304();
  v8 = v7;
  v48 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC141E14();
  v12 = v11;
  sub_1DC081B48(&qword_1F034BFF0, 255, (uint64_t (*)(uint64_t))sub_1DC141E14, MEMORY[0x1E0DB9528]);
  v13 = sub_1DC408EC0();
  v14 = MEMORY[0x1E0DEE9D8];
  if (!v13)
    goto LABEL_9;
  v15 = v13;
  v51 = MEMORY[0x1E0DEE9D8];
  sub_1DC2AD2E0(0, v13 & ~(v13 >> 63), 0);
  result = sub_1DC408E90();
  if ((v15 & 0x8000000000000000) == 0)
  {
    v46 = v12;
    v47 = a1;
    do
    {
      v17 = (void (*)(char *, _QWORD))sub_1DC408EF0();
      v18 = v48;
      (*(void (**)(char *))(v48 + 16))(v10);
      v17(v50, 0);
      sub_1DC404DE0();
      sub_1DC081B48(&qword_1EDB32168, 255, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedLayoutModel, (uint64_t)&unk_1DC413988);
      sub_1DC40625C();
      v20 = v19;
      sub_1DC0926D8((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedLayoutModel);
      (*(void (**)(char *, uint64_t))(v18 + 8))(v10, v8);
      v14 = v51;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1DC2AD2E0(0, *(_QWORD *)(v14 + 16) + 1, 1);
        v14 = v51;
      }
      v22 = *(_QWORD *)(v14 + 16);
      v21 = *(_QWORD *)(v14 + 24);
      if (v22 >= v21 >> 1)
      {
        sub_1DC2AD2E0(v21 > 1, v22 + 1, 1);
        v14 = v51;
      }
      *(_QWORD *)(v14 + 16) = v22 + 1;
      *(_QWORD *)(v14 + 8 * v22 + 32) = v20;
      sub_1DC408EE4();
      --v15;
    }
    while (v15);
LABEL_9:
    v23 = *(_QWORD *)(v14 + 16);
    v24 = 0.0;
    v25 = 0.0;
    if (!v23)
      goto LABEL_17;
    if (v23 == 1)
    {
      v26 = 0;
    }
    else
    {
      v26 = v23 & 0x7FFFFFFFFFFFFFFELL;
      v27 = (double *)(v14 + 40);
      v28 = v23 & 0x7FFFFFFFFFFFFFFELL;
      do
      {
        v25 = v25 + *(v27 - 1) + *v27;
        v27 += 2;
        v28 -= 2;
      }
      while (v28);
      if (v23 == v26)
      {
LABEL_17:
        swift_bridgeObjectRelease();
        v32 = (uint64_t)v45;
        sub_1DC405314();
        v33 = sub_1DC2708C8();
        result = sub_1DC0926D8(v32, type metadata accessor for StockFeedLayoutSectionDescriptor);
        if (!v33)
        {
          v36 = v44;
LABEL_29:
          *v36 = v25 + v24;
          return result;
        }
        v34 = sub_1DC13E3D4(v33);
        swift_bridgeObjectRelease();
        v35 = *(_QWORD *)(v34 + 16);
        if (v35)
        {
          v36 = v44;
          if (v35 == 1)
          {
            v37 = 0;
            v24 = 0.0;
          }
          else
          {
            v37 = v35 & 0x7FFFFFFFFFFFFFFELL;
            v38 = (double *)(v34 + 40);
            v24 = 0.0;
            v39 = v35 & 0x7FFFFFFFFFFFFFFELL;
            do
            {
              v24 = v24 + *(v38 - 1) + *v38;
              v38 += 2;
              v39 -= 2;
            }
            while (v39);
            if (v35 == v37)
              goto LABEL_28;
          }
          v40 = v35 - v37;
          v41 = (double *)(v34 + 8 * v37 + 32);
          do
          {
            v42 = *v41++;
            v24 = v24 + v42;
            --v40;
          }
          while (v40);
        }
        else
        {
          v24 = 0.0;
          v36 = v44;
        }
LABEL_28:
        result = swift_bridgeObjectRelease();
        goto LABEL_29;
      }
    }
    v29 = v23 - v26;
    v30 = (double *)(v14 + 8 * v26 + 32);
    do
    {
      v31 = *v30++;
      v25 = v25 + v31;
      --v29;
    }
    while (v29);
    goto LABEL_17;
  }
  __break(1u);
  return result;
}

uint64_t sub_1DC13E3D4(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  _QWORD *v4;
  CGFloat Height;
  unint64_t v6;
  unint64_t v7;
  uint64_t v9;
  CGRect v10;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v9 = MEMORY[0x1E0DEE9D8];
    sub_1DC2AD2E0(0, v1, 0);
    v2 = v9;
    v4 = (_QWORD *)(a1 + 32);
    do
    {
      __swift_project_boxed_opaque_existential_1(v4, v4[3]);
      sub_1DC40622C();
      Height = CGRectGetHeight(v10);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        sub_1DC2AD2E0(0, *(_QWORD *)(v9 + 16) + 1, 1);
      v7 = *(_QWORD *)(v9 + 16);
      v6 = *(_QWORD *)(v9 + 24);
      if (v7 >= v6 >> 1)
        sub_1DC2AD2E0(v6 > 1, v7 + 1, 1);
      *(_QWORD *)(v9 + 16) = v7 + 1;
      *(CGFloat *)(v9 + 8 * v7 + 32) = Height;
      v4 += 5;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1DC13E4F4@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t *v2;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t result;

  v5 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v5 = sub_1DC141008(v5);
  v6 = *(_QWORD *)(v5 + 16);
  if (v6 <= a1)
  {
    __break(1u);
    goto LABEL_15;
  }
  v7 = v6 - 1;
  sub_1DC141E14();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 72);
  v11 = v5 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80)) + v10 * a1;
  result = (*(uint64_t (**)(uint64_t, unint64_t, uint64_t))(v9 + 32))(a2, v11, v8);
  if ((uint64_t)(v7 - a1) < 0)
  {
LABEL_15:
    result = sub_1DC40988C();
    __break(1u);
    return result;
  }
  if (v10 > 0 || v11 >= v11 + v10 + v10 * (v7 - a1))
  {
    result = swift_arrayInitWithTakeFrontToBack();
  }
  else if (v10)
  {
    result = swift_arrayInitWithTakeBackToFront();
  }
  *(_QWORD *)(v5 + 16) = v7;
  *v2 = v5;
  return result;
}

void sub_1DC13E630()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;

  v0 = type metadata accessor for StockFeedPriceViewLayoutOptions();
  MEMORY[0x1E0C80A78](v0);
  v5 = type metadata accessor for StockFeedLayoutModel();
  MEMORY[0x1E0C80A78](v5);
  v1 = type metadata accessor for StockFeedMastheadViewLayoutAttributes();
  MEMORY[0x1E0C80A78](v1);
  v2 = type metadata accessor for StockFeedMastheadModel();
  MEMORY[0x1E0C80A78](v2);
  v3 = type metadata accessor for StockFeedModel();
  MEMORY[0x1E0C80A78](v3);
  sub_1DC142200();
  sub_1DC404354();
  v4 = (char *)sub_1DC13E7AC + 4 * byte_1DC40DA80[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1DC13E7AC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_1DC092ED0(v2, v4, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedMastheadModel);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v5 + 16), *(_QWORD *)(v5 + 40));
  sub_1DC37A774(*(double *)&v4, *v0, v1);
  sub_1DC1426A0();
  v7 = v3 + *(int *)(v6 + 48);
  sub_1DC0990BC(v4, v3, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedMastheadModel);
  sub_1DC0990BC(v1, v7, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedMastheadViewLayoutAttributes);
  swift_storeEnumTagMultiPayload();
  sub_1DC081B48(&qword_1EDB32160, 255, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedLayoutModel, (uint64_t)&unk_1DC413950);
  sub_1DC404DD4();
  sub_1DC0926D8(v1, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedMastheadViewLayoutAttributes);
  return sub_1DC0926D8(v4, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedMastheadModel);
}

void sub_1DC13E9A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1DC14227C();
  v2 = v0 + *(int *)(v1 + 48);
  sub_1DC0926D8(v0 + *(int *)(v1 + 64), (uint64_t (*)(_QWORD))sub_1DC133AB4);
  sub_1DC0926D8(v2, (uint64_t (*)(_QWORD))sub_1DC0FED34);
  v3 = sub_1DC4010E4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v0, v3);
  sub_1DC409838();
  __break(1u);
}

uint64_t sub_1DC13EACC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  int EnumCaseMultiPayload;
  uint64_t v25;
  uint64_t *v26;
  int *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t, uint64_t);
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _OWORD *v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  char *v48;
  int *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _OWORD v66[8];
  uint64_t v67;

  v62 = a2;
  v53 = a1;
  v65 = a3;
  v64 = type metadata accessor for StockFeedLayoutModel();
  MEMORY[0x1E0C80A78](v64);
  v63 = (uint64_t)&v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for StockFeedEarningsViewLayoutOptions();
  MEMORY[0x1E0C80A78](v4);
  v61 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = sub_1DC4052FC();
  v54 = *(_QWORD *)(v59 - 8);
  MEMORY[0x1E0C80A78](v59);
  v7 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0BB2BC(0);
  MEMORY[0x1E0C80A78](v8);
  v58 = (uint64_t)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = sub_1DC3FFFEC();
  v55 = *(_QWORD *)(v56 - 8);
  MEMORY[0x1E0C80A78](v56);
  v57 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1DC4010E4();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v67 = (uint64_t)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for StockFeedEarningsViewModel();
  MEMORY[0x1E0C80A78](v14);
  v60 = (uint64_t)&v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = type metadata accessor for StockEarningsModel();
  MEMORY[0x1E0C80A78](v52);
  v17 = (char *)&v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v48 - v19;
  v21 = type metadata accessor for StockFeedModel();
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v48 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC142200();
  sub_1DC404354();
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload != 4)
    __asm { BR              X10 }
  sub_1DC092ED0((uint64_t)v23, (uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for StockEarningsModel);
  v25 = v53;
  v26 = __swift_project_boxed_opaque_existential_1((_QWORD *)(v53 + 400), *(_QWORD *)(v53 + 424));
  v50 = sub_1DC351068(*v26, (uint64_t)v20);
  v49 = v27;
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 16))(v67, v20, v11);
  v48 = v17;
  sub_1DC0990BC((uint64_t)v20, (uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for StockEarningsModel);
  v28 = (uint64_t)v20;
  v29 = v52;
  v30 = (uint64_t)v57;
  (*(void (**)(char *, uint64_t, uint64_t))(v55 + 16))(v57, v28 + *(int *)(v52 + 20), v56);
  v31 = v28 + *(int *)(v29 + 24);
  v51 = v28;
  v32 = v58;
  sub_1DC0990BC(v31, v58, (uint64_t (*)(_QWORD))sub_1DC0BB2BC);
  v33 = *(void (**)(char *, uint64_t, uint64_t))(v54 + 16);
  v34 = v7;
  v35 = (uint64_t)v7;
  v36 = v62;
  v37 = v59;
  v33(v34, v62, v59);
  v38 = *(unsigned __int8 *)(v28 + *(int *)(v29 + 32));
  v39 = v60;
  sub_1DC378DA4(v67, (uint64_t)v48, v30, v32, v50, v49, v35, v38, v60);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v25 + 136), *(_QWORD *)(v25 + 160));
  v40 = (uint64_t)v61;
  v33(v61, v36, v37);
  sub_1DC2045AC(v39, v66);
  sub_1DC0926D8(v40, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedEarningsViewLayoutOptions);
  sub_1DC142984(0, &qword_1EDB36D58, (void (*)(uint64_t))type metadata accessor for StockFeedEarningsViewModel);
  v42 = (_OWORD *)(v63 + *(int *)(v41 + 48));
  sub_1DC0990BC(v39, v63, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedEarningsViewModel);
  v43 = v66[5];
  v42[4] = v66[4];
  v42[5] = v43;
  v44 = v66[7];
  v42[6] = v66[6];
  v42[7] = v44;
  v45 = v66[1];
  *v42 = v66[0];
  v42[1] = v45;
  v46 = v66[3];
  v42[2] = v66[2];
  v42[3] = v46;
  swift_storeEnumTagMultiPayload();
  sub_1DC081B48(&qword_1EDB32160, 255, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedLayoutModel, (uint64_t)&unk_1DC413950);
  sub_1DC404DD4();
  sub_1DC0926D8(v39, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedEarningsViewModel);
  return sub_1DC0926D8(v51, (uint64_t (*)(_QWORD))type metadata accessor for StockEarningsModel);
}

void sub_1DC13F028()
{
  uint64_t v0;

  sub_1DC0926D8(v0, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedMastheadModel);
  sub_1DC409838();
  __break(1u);
}

void sub_1DC13F154(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, int a4@<W4>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  _QWORD v24[4];
  int v25;
  uint64_t v26;
  char *v27;
  char *v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v24[0] = a5;
  v25 = a4;
  v24[3] = a3;
  v30 = a2;
  v37 = a1;
  v36 = a6;
  v26 = type metadata accessor for QuoteDetailViewLayoutOptions();
  MEMORY[0x1E0C80A78](v26);
  v27 = (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC089DA4(0, (unint64_t *)&unk_1EDB28978, (uint64_t (*)(uint64_t))type metadata accessor for AttributionSource, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v7);
  v24[2] = (char *)v24 - v8;
  v9 = type metadata accessor for QuoteDetailViewModel();
  MEMORY[0x1E0C80A78](v9);
  v31 = (char *)v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC133AB4(0);
  MEMORY[0x1E0C80A78](v11);
  v24[1] = (char *)v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v29 = (char *)v24 - v14;
  sub_1DC0FED34(0);
  MEMORY[0x1E0C80A78](v15);
  MEMORY[0x1E0C80A78](v16);
  v28 = (char *)v24 - v17;
  v35 = type metadata accessor for StockFeedLayoutModel();
  MEMORY[0x1E0C80A78](v35);
  v34 = (char *)v24 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for StockChartViewLayoutOptions();
  MEMORY[0x1E0C80A78](v19);
  v20 = type metadata accessor for StockChartModel();
  MEMORY[0x1E0C80A78](v20);
  v21 = sub_1DC4010E4();
  v32 = *(_QWORD *)(v21 - 8);
  v33 = v21;
  MEMORY[0x1E0C80A78](v21);
  v22 = type metadata accessor for StockFeedModel();
  MEMORY[0x1E0C80A78](v22);
  sub_1DC142200();
  sub_1DC404354();
  v23 = (char *)sub_1DC13F454 + 4 * word_1DC40DA96[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1DC13F454()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;

  v8 = *(_QWORD *)(v0 + 88);
  v7 = *(_QWORD *)(v0 + 96);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(v2, v1, v7);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v4, v2, v7);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)(v6 - 72) + 96), *(_QWORD *)(*(_QWORD *)(v6 - 72) + 120));
  v9 = sub_1DC4052FC();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v3, *(_QWORD *)(v0 + 72), v9);
  if (qword_1EDB28110 != -1)
    swift_once();
  *(_QWORD *)(v3 + *(int *)(v5 + 20)) = qword_1EDB3A708;
  v10 = v3 + *(int *)(v5 + 24);
  *(_QWORD *)v10 = *(_QWORD *)(v0 + 24);
  *(_BYTE *)(v10 + 8) = *(_DWORD *)(v0 + 36) & 1;
  sub_1DC2DC614(v3, v0 + 136);
  sub_1DC0926D8(v3, (uint64_t (*)(_QWORD))type metadata accessor for StockChartViewLayoutOptions);
  sub_1DC142984(0, &qword_1EDB2E2B8, (void (*)(uint64_t))type metadata accessor for StockChartModel);
  v12 = *(_QWORD *)(v0 + 104) + *(int *)(v11 + 48);
  sub_1DC0990BC(v4, *(_QWORD *)(v0 + 104), (uint64_t (*)(_QWORD))type metadata accessor for StockChartModel);
  v13 = *(_OWORD *)(v0 + 312);
  *(_OWORD *)(v12 + 160) = *(_OWORD *)(v0 + 296);
  *(_OWORD *)(v12 + 176) = v13;
  *(_QWORD *)(v12 + 192) = *(_QWORD *)(v0 + 328);
  v14 = *(_OWORD *)(v0 + 248);
  *(_OWORD *)(v12 + 96) = *(_OWORD *)(v0 + 232);
  *(_OWORD *)(v12 + 112) = v14;
  v15 = *(_OWORD *)(v0 + 280);
  *(_OWORD *)(v12 + 128) = *(_OWORD *)(v0 + 264);
  *(_OWORD *)(v12 + 144) = v15;
  v16 = *(_OWORD *)(v0 + 184);
  *(_OWORD *)(v12 + 32) = *(_OWORD *)(v0 + 168);
  *(_OWORD *)(v12 + 48) = v16;
  v17 = *(_OWORD *)(v0 + 216);
  *(_OWORD *)(v12 + 64) = *(_OWORD *)(v0 + 200);
  *(_OWORD *)(v12 + 80) = v17;
  v18 = *(_OWORD *)(v0 + 152);
  *(_OWORD *)v12 = *(_OWORD *)(v0 + 136);
  *(_OWORD *)(v12 + 16) = v18;
  swift_storeEnumTagMultiPayload();
  sub_1DC081B48(&qword_1EDB32160, 255, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedLayoutModel, (uint64_t)&unk_1DC413950);
  sub_1DC404DD4();
  sub_1DC0926D8(v4, (uint64_t (*)(_QWORD))type metadata accessor for StockChartModel);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v2, v7);
}

void sub_1DC13F9B4()
{
  uint64_t v0;

  sub_1DC0926D8(v0, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedMastheadModel);
  sub_1DC409838();
  __break(1u);
}

uint64_t sub_1DC13FAA4@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  char *v34;
  uint64_t *v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;

  v35 = a2;
  sub_1DC142748(0);
  MEMORY[0x1E0C80A78](v3);
  v34 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1DC4074A4();
  MEMORY[0x1E0C80A78](v5);
  v33 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = sub_1DC407BE8();
  v7 = *(_QWORD *)(v26 - 8);
  MEMORY[0x1E0C80A78](v26);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC142200();
  v11 = v10;
  v12 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1DC407D98();
  v24 = *(_QWORD *)(v15 - 8);
  v25 = v15;
  MEMORY[0x1E0C80A78](v15);
  v32 = (char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *a1;
  sub_1DC141F5C(0, (unint64_t *)&qword_1EDB29D60, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60]);
  v31 = v17;
  swift_bridgeObjectRetain();
  v18 = sub_1DC404708();
  v29 = v19;
  v30 = v18;
  v20 = sub_1DC404708();
  v27 = v21;
  v28 = v20;
  sub_1DC4047C8();
  sub_1DC081B48(&qword_1EDB2D778, 255, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedModel, (uint64_t)&unk_1DC429088);
  sub_1DC404360();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  LOBYTE(v17) = sub_1DC407BD0();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v26);
  if ((v17 & 1) != 0)
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v24 + 104))(v32, *MEMORY[0x1E0D5D278], v25);
  }
  else
  {
    sub_1DC081B48((unint64_t *)&unk_1EDB36ED0, 255, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedSectionDescriptor, (uint64_t)&unk_1DC416818);
    sub_1DC404774();
  }
  sub_1DC081B48((unint64_t *)&unk_1EDB36ED0, 255, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedSectionDescriptor, (uint64_t)&unk_1DC416818);
  sub_1DC404780();
  v22 = sub_1DC407960();
  v36 = 0u;
  v37 = 0u;
  v38 = 0;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v34, 1, 1, v22);
  sub_1DC407498();
  swift_allocObject();
  sub_1DC142858();
  result = sub_1DC40748C();
  *v35 = result;
  return result;
}

uint64_t sub_1DC13FE0C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t);
  char *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char *v22;
  uint64_t result;
  _QWORD v24[2];
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  _OWORD v39[2];
  uint64_t v40;
  uint64_t v41;

  v29 = a2;
  v37 = type metadata accessor for StockFeedLayoutModel();
  MEMORY[0x1E0C80A78](v37);
  v36 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = sub_1DC407B04();
  v5 = *(_QWORD *)(v34 - 8);
  MEMORY[0x1E0C80A78](v34);
  v33 = (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC142304();
  v35 = v7;
  v32 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v38 = (char *)v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1DC407510();
  v28 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = *a1;
  sub_1DC407498();
  sub_1DC081B48((unint64_t *)&unk_1EDB2ADC0, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5A7E0], MEMORY[0x1E0D5A7D8]);
  memset(v39, 0, sizeof(v39));
  v40 = 0;
  sub_1DC407540();
  sub_1DC0926D8((uint64_t)v39, (uint64_t (*)(_QWORD))sub_1DC0FF598);
  v27 = v11;
  v12 = sub_1DC4074E0();
  v13 = *(_QWORD *)(v12 + 16);
  if (v13)
  {
    v25 = v9;
    v26 = v2;
    *(_QWORD *)&v39[0] = MEMORY[0x1E0DEE9D8];
    sub_1DC2AD2B4(0, v13, 0);
    v14 = *(unsigned __int8 *)(v5 + 80);
    v24[1] = v12;
    v15 = v12 + ((v14 + 32) & ~v14);
    v30 = *(_QWORD *)(v5 + 72);
    v31 = v5;
    v16 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v17 = v33;
    v18 = v34;
    do
    {
      v16(v17, v15, v18);
      v16(v36, (uint64_t)v17, v18);
      swift_storeEnumTagMultiPayload();
      sub_1DC081B48(&qword_1EDB32160, 255, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedLayoutModel, (uint64_t)&unk_1DC413950);
      sub_1DC404DD4();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v17, v18);
      v19 = *(_QWORD *)&v39[0];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1DC2AD2B4(0, *(_QWORD *)(v19 + 16) + 1, 1);
        v19 = *(_QWORD *)&v39[0];
      }
      v21 = *(_QWORD *)(v19 + 16);
      v20 = *(_QWORD *)(v19 + 24);
      v22 = v38;
      if (v21 >= v20 >> 1)
      {
        sub_1DC2AD2B4(v20 > 1, v21 + 1, 1);
        v22 = v38;
        v19 = *(_QWORD *)&v39[0];
      }
      *(_QWORD *)(v19 + 16) = v21 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v32 + 32))(v19+ ((*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80))+ *(_QWORD *)(v32 + 72) * v21, v22, v35);
      *(_QWORD *)&v39[0] = v19;
      v5 = v31;
      v15 += v30;
      --v13;
    }
    while (v13);
    swift_bridgeObjectRelease();
    v9 = v25;
  }
  else
  {
    swift_bridgeObjectRelease();
    v19 = MEMORY[0x1E0DEE9D8];
  }
  result = (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v27, v9);
  *v29 = v19;
  return result;
}

uint64_t sub_1DC14017C@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  int EnumCaseMultiPayload;
  uint64_t v14;
  uint64_t v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  void *v22;
  id v23;
  double v24;
  double v25;
  double v26;
  CGFloat v27;
  CGFloat v28;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  _QWORD v34[2];
  CGRect v35;
  CGRect v36;
  CGRect v37;
  CGRect v38;

  v34[1] = a2;
  v3 = type metadata accessor for StockFeedLayoutModel();
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1DC4052FC();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for StockFeedModel();
  MEMORY[0x1E0C80A78](v10);
  v12 = (_QWORD *)((char *)v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1DC142200();
  sub_1DC404354();
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload != 5)
    __asm { BR              X10 }
  v14 = *v12;
  v15 = v12[1];
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  sub_1DC4052F0();
  v17 = v16;
  sub_1DC4052F0();
  sub_1DC405224();
  v19 = v18;
  v21 = v20;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FB00);
  v22 = (void *)sub_1DC4092F8();
  v23 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC1290]), sel_init);
  sub_1DC408B0C();
  v25 = v24;
  v27 = v26;

  v28 = v19 + (v17 - v19 - v21) * 0.5 - v25 * 0.5;
  v35.origin.x = v28;
  v35.origin.y = 100.0;
  v35.size.width = v25;
  v35.size.height = v27;
  v36.size.height = CGRectGetMaxY(v35);
  v36.origin.x = 0.0;
  v36.origin.y = 0.0;
  v36.size.width = v17;
  v37 = CGRectIntegral(v36);
  x = v37.origin.x;
  y = v37.origin.y;
  width = v37.size.width;
  height = v37.size.height;
  v37.origin.x = v28;
  v37.origin.y = 100.0;
  v37.size.width = v25;
  v37.size.height = v27;
  v38 = CGRectIntegral(v37);
  *(_QWORD *)v5 = v14;
  *((_QWORD *)v5 + 1) = v15;
  *((CGFloat *)v5 + 2) = x;
  *((CGFloat *)v5 + 3) = y;
  *((CGFloat *)v5 + 4) = width;
  *((CGFloat *)v5 + 5) = height;
  *(CGRect *)(v5 + 48) = v38;
  swift_storeEnumTagMultiPayload();
  sub_1DC081B48(&qword_1EDB32160, 255, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedLayoutModel, (uint64_t)&unk_1DC413950);
  return sub_1DC404DD4();
}

void sub_1DC140484()
{
  uint64_t v0;

  sub_1DC0926D8(v0, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedMastheadModel);
  sub_1DC409838();
  __break(1u);
}

void sub_1DC140594()
{
  swift_bridgeObjectRelease();
  swift_release();
  JUMPOUT(0x1DC140540);
}

uint64_t sub_1DC1405AC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  int EnumCaseMultiPayload;
  double v12;
  CGFloat v13;
  double v14;
  CGFloat v15;
  double v16;
  CGFloat v17;
  double v18;
  CGFloat v19;
  double v20;
  CGFloat v21;
  double v22;
  CGFloat v23;
  __int128 v24;
  __int128 v25;
  CGSize size;
  __int128 v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  _OWORD v37[2];
  uint64_t v38;
  uint64_t v39;
  CGRect v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  CGFloat v47[6];
  __int128 v48;
  uint64_t v49;

  v30 = a2;
  v32 = a3;
  v31 = type metadata accessor for StockFeedLayoutModel();
  MEMORY[0x1E0C80A78](v31);
  v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1DC4052FC();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for StockFeedModel();
  MEMORY[0x1E0C80A78](v10);
  sub_1DC142200();
  sub_1DC404354();
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload != 10)
    __asm { BR              X10 }
  __swift_project_boxed_opaque_existential_1((_QWORD *)(a1 + 256), *(_QWORD *)(a1 + 280));
  sub_1DC399244((uint64_t *)v37);
  v33 = v37[0];
  v34 = v37[1];
  v35 = v38;
  v36 = v39;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v30, v6);
  sub_1DC4052F0();
  v13 = v12;
  sub_1DC4052F0();
  v15 = v14;
  sub_1DC405224();
  v17 = v16;
  v19 = v18;
  v21 = v20;
  v23 = v22;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v47[0] = v13;
  v47[1] = v15;
  v47[2] = v17;
  v47[3] = v19;
  v47[4] = v21;
  v47[5] = v23;
  v48 = xmmword_1DC40DC30;
  v49 = 0x4026000000000000;
  sub_1DC19F618(v47, &v40);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v24 = v44;
  *((_OWORD *)v5 + 4) = v43;
  *((_OWORD *)v5 + 5) = v24;
  v25 = v46;
  *((_OWORD *)v5 + 6) = v45;
  *((_OWORD *)v5 + 7) = v25;
  size = v40.size;
  *(CGPoint *)v5 = v40.origin;
  *((CGSize *)v5 + 1) = size;
  v27 = v42;
  *((_OWORD *)v5 + 2) = v41;
  *((_OWORD *)v5 + 3) = v27;
  swift_storeEnumTagMultiPayload();
  sub_1DC081B48(&qword_1EDB32160, 255, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedLayoutModel, (uint64_t)&unk_1DC413950);
  return sub_1DC404DD4();
}

void sub_1DC140838()
{
  uint64_t v0;

  sub_1DC0926D8(v0, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedMastheadModel);
  sub_1DC409838();
  __break(1u);
}

uint64_t sub_1DC140968@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  char *v26;
  uint64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  int64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  void (*v47)(char *, unint64_t, uint64_t);
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  void (*v58)(char *, unint64_t, uint64_t);
  uint64_t v59;
  char *v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t result;
  uint64_t v66;
  void (*v67)(char *, uint64_t);
  void (*v68)(char *, uint64_t, uint64_t);
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;

  v75 = a1;
  v5 = type metadata accessor for StockFeedLayoutSectionDescriptor.Header(0);
  v77 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v66 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1DC407B64();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v66 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for StockFeedLayoutSectionDescriptor.Footer(0);
  v78 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v66 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = sub_1DC407690();
  v83 = *(_QWORD *)(v81 - 8);
  MEMORY[0x1E0C80A78](v81);
  v80 = (char *)&v66 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for StockFeedLayoutSectionDescriptor.Decoration(0);
  v79 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v85 = (uint64_t)&v66 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_1DC406040();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v21 = (char *)&v66 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_1DC4073A8();
  v71 = *(_QWORD *)(v22 - 8);
  v72 = v22;
  (*(void (**)(uint64_t, uint64_t))(v71 + 16))(a3, v75);
  v23 = *MEMORY[0x1E0DBB2B8];
  v68 = *(void (**)(char *, uint64_t, uint64_t))(v19 + 104);
  v68(v21, v23, v18);
  v24 = sub_1DC4074F8();
  v25 = *(void (**)(char *, uint64_t))(v19 + 8);
  v69 = v21;
  v70 = v18;
  v26 = v21;
  v27 = v24;
  v67 = v25;
  v25(v26, v18);
  v28 = *(_QWORD *)(v27 + 16);
  v73 = a2;
  v74 = a3;
  v84 = v9;
  v82 = v14;
  if (v28)
  {
    v86 = MEMORY[0x1E0DEE9D8];
    sub_1DC2AD39C(0, v28, 0);
    v29 = *(unsigned __int8 *)(v9 + 80);
    v66 = v27;
    v30 = v27 + ((v29 + 32) & ~v29);
    v76 = *(_QWORD *)(v9 + 72);
    v31 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
    v32 = v9;
    v33 = (uint64_t)v7;
    do
    {
      v31(v11, v30, v8);
      v31(v7, (uint64_t)v11, v8);
      (*(void (**)(char *, uint64_t))(v32 + 8))(v11, v8);
      v34 = v86;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1DC2AD39C(0, *(_QWORD *)(v34 + 16) + 1, 1);
        v32 = v84;
        v34 = v86;
      }
      v36 = *(_QWORD *)(v34 + 16);
      v35 = *(_QWORD *)(v34 + 24);
      if (v36 >= v35 >> 1)
      {
        sub_1DC2AD39C(v35 > 1, v36 + 1, 1);
        v32 = v84;
        v34 = v86;
      }
      *(_QWORD *)(v34 + 16) = v36 + 1;
      v7 = (char *)v33;
      sub_1DC092ED0(v33, v34+ ((*(unsigned __int8 *)(v77 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v77 + 80))+ *(_QWORD *)(v77 + 72) * v36, type metadata accessor for StockFeedLayoutSectionDescriptor.Header);
      v30 += v76;
      --v28;
    }
    while (v28);
    swift_bridgeObjectRelease();
    a2 = v73;
    a3 = v74;
    v14 = v82;
  }
  else
  {
    swift_bridgeObjectRelease();
    v34 = MEMORY[0x1E0DEE9D8];
  }
  sub_1DC142710(0);
  v38 = v37;
  *(_QWORD *)(a3 + *(int *)(v37 + 28)) = v34;
  v40 = v69;
  v39 = v70;
  v68(v69, *MEMORY[0x1E0DBB2B0], v70);
  v41 = sub_1DC4074F8();
  v67(v40, v39);
  v42 = *(_QWORD *)(v41 + 16);
  v77 = v38;
  if (v42)
  {
    v86 = MEMORY[0x1E0DEE9D8];
    sub_1DC2AD370(0, v42, 0);
    v43 = v84;
    v44 = (*(unsigned __int8 *)(v84 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v84 + 80);
    v76 = v41;
    v45 = v41 + v44;
    v46 = *(_QWORD *)(v84 + 72);
    v47 = *(void (**)(char *, unint64_t, uint64_t))(v84 + 16);
    do
    {
      v47(v11, v45, v8);
      v47(v14, (unint64_t)v11, v8);
      (*(void (**)(char *, uint64_t))(v43 + 8))(v11, v8);
      v48 = v86;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1DC2AD370(0, *(_QWORD *)(v48 + 16) + 1, 1);
        v43 = v84;
        v48 = v86;
      }
      v50 = *(_QWORD *)(v48 + 16);
      v49 = *(_QWORD *)(v48 + 24);
      if (v50 >= v49 >> 1)
      {
        sub_1DC2AD370(v49 > 1, v50 + 1, 1);
        v43 = v84;
        v48 = v86;
      }
      *(_QWORD *)(v48 + 16) = v50 + 1;
      v51 = v48
          + ((*(unsigned __int8 *)(v78 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v78 + 80))
          + *(_QWORD *)(v78 + 72) * v50;
      v14 = v82;
      sub_1DC092ED0((uint64_t)v82, v51, type metadata accessor for StockFeedLayoutSectionDescriptor.Footer);
      v45 += v46;
      --v42;
    }
    while (v42);
    swift_bridgeObjectRelease();
    a2 = v73;
    a3 = v74;
    v38 = v77;
  }
  else
  {
    swift_bridgeObjectRelease();
    v48 = MEMORY[0x1E0DEE9D8];
  }
  *(_QWORD *)(a3 + *(int *)(v38 + 32)) = v48;
  v52 = sub_1DC4074EC();
  v53 = *(_QWORD *)(v52 + 16);
  v54 = MEMORY[0x1E0DEE9D8];
  v55 = v85;
  if (v53)
  {
    v86 = MEMORY[0x1E0DEE9D8];
    sub_1DC2AD344(0, v53, 0);
    v56 = v52 + ((*(unsigned __int8 *)(v83 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v83 + 80));
    v57 = *(_QWORD *)(v83 + 72);
    v58 = *(void (**)(char *, unint64_t, uint64_t))(v83 + 16);
    do
    {
      v60 = v80;
      v59 = v81;
      v58(v80, v56, v81);
      v58((char *)v55, (unint64_t)v60, v59);
      (*(void (**)(char *, uint64_t))(v83 + 8))(v60, v59);
      v54 = v86;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1DC2AD344(0, *(_QWORD *)(v54 + 16) + 1, 1);
        v54 = v86;
      }
      v62 = *(_QWORD *)(v54 + 16);
      v61 = *(_QWORD *)(v54 + 24);
      if (v62 >= v61 >> 1)
      {
        sub_1DC2AD344(v61 > 1, v62 + 1, 1);
        v54 = v86;
      }
      *(_QWORD *)(v54 + 16) = v62 + 1;
      v63 = v54
          + ((*(unsigned __int8 *)(v79 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v79 + 80))
          + *(_QWORD *)(v79 + 72) * v62;
      v55 = v85;
      sub_1DC092ED0(v85, v63, type metadata accessor for StockFeedLayoutSectionDescriptor.Decoration);
      v56 += v57;
      --v53;
    }
    while (v53);
    a2 = v73;
    a3 = v74;
    v38 = v77;
  }
  v64 = sub_1DC407510();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 8))(a2, v64);
  (*(void (**)(uint64_t, uint64_t))(v71 + 8))(v75, v72);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a3 + *(int *)(v38 + 36)) = v54;
  return result;
}

uint64_t sub_1DC140FE8@<X0>(void (*a1)(_QWORD)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1DC137B7C(a1, a2, a3);
}

uint64_t sub_1DC141008(unint64_t a1)
{
  return sub_1DC16636C(0, *(_QWORD *)(a1 + 16), 0, a1);
}

uint64_t sub_1DC14101C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t result;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  BOOL v36;
  char *v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  _QWORD v41[2];
  uint64_t (*v42)(char *, uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  char *v46;
  char *v47;
  uint64_t v48;
  unint64_t v49;

  sub_1DC1428F0(0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v44 = (uint64_t)v41 - v6;
  sub_1DC142304();
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v46 = (char *)v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(unsigned __int8 *)(v9 + 80);
  v12 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v43 = (v11 + 32) & ~v11;
  v47 = (char *)(MEMORY[0x1E0DEE9D8] + v43);
  v41[1] = v11 | 7;
  result = swift_bridgeObjectRetain();
  v48 = 0;
  v49 = 0;
  v14 = 0;
LABEL_4:
  v17 = *(_QWORD *)(a1 + 16);
  if (v14 != v17)
  {
    if (v14 < v17)
    {
      while (1)
      {
        v18 = *(_QWORD *)(a1 + 32 + 8 * v14);
        swift_bridgeObjectRetain();
        result = swift_bridgeObjectRelease();
        if (v18)
          break;
LABEL_9:
        ++v14;
        v19 = *(_QWORD *)(a1 + 16);
        if (v14 == v19)
          goto LABEL_38;
        if (v14 >= v19)
          goto LABEL_44;
      }
      v15 = *(_QWORD *)(v18 + 16);
      if (!v15)
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v4, 1, 1, v8);
        result = sub_1DC0926D8((uint64_t)v4, (uint64_t (*)(_QWORD))sub_1DC1428F0);
        goto LABEL_9;
      }
      v16 = 0;
      ++v14;
      while (1)
      {
        if (v16 >= v15)
          goto LABEL_45;
        v45 = v12;
        v20 = *(_QWORD *)(v9 + 72);
        v49 = v16;
        (*(void (**)(char *, unint64_t, uint64_t))(v9 + 16))(v4, v18 + v43 + v20 * v16, v8);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v4, 0, 1, v8);
        v21 = v44;
        sub_1DC092ED0((uint64_t)v4, v44, (uint64_t (*)(_QWORD))sub_1DC1428F0);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v21, 1, v8) == 1)
        {
          swift_bridgeObjectRelease();
          v12 = v45;
          goto LABEL_39;
        }
        v42 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 32);
        result = v42(v46, v21, v8);
        if (!v48)
          break;
        v22 = v45;
        v23 = v48 - 1;
        if (__OFSUB__(v48, 1))
          goto LABEL_46;
LABEL_37:
        v48 = v23;
        ++v49;
        v37 = v47;
        result = v42(v47, (uint64_t)v46, v8);
        v47 = &v37[v20];
        v12 = v22;
        v15 = *(_QWORD *)(v18 + 16);
        v16 = v49;
        if (v49 == v15)
        {
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v4, 1, 1, v8);
          result = sub_1DC0926D8((uint64_t)v4, (uint64_t (*)(_QWORD))sub_1DC1428F0);
          goto LABEL_4;
        }
      }
      v24 = v45[3];
      if ((uint64_t)((v24 >> 1) + 0x4000000000000000) < 0)
        goto LABEL_48;
      v25 = v24 & 0xFFFFFFFFFFFFFFFELL;
      if (v25 <= 1)
        v26 = 1;
      else
        v26 = v25;
      sub_1DC089DA4(0, &qword_1EDB3FEF8, (uint64_t (*)(uint64_t))sub_1DC142304, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v27 = v43;
      v48 = v26;
      v22 = (_QWORD *)swift_allocObject();
      result = _swift_stdlib_malloc_size(v22);
      if (!v20)
        goto LABEL_49;
      v28 = result - v27;
      if (result - v27 == 0x8000000000000000 && v20 == -1)
        goto LABEL_50;
      v30 = v27;
      v31 = v28 / v20;
      v22[2] = v48;
      v22[3] = 2 * (v28 / v20);
      v32 = (char *)v22 + v30;
      v33 = v45[3] >> 1;
      v34 = v33 * v20;
      if (!v45[2])
      {
LABEL_36:
        v47 = &v32[v34];
        v35 = (v31 & 0x7FFFFFFFFFFFFFFFLL) - v33;
        result = swift_release();
        v36 = __OFSUB__(v35, 1);
        v23 = v35 - 1;
        if (v36)
          goto LABEL_46;
        goto LABEL_37;
      }
      if (v22 < v45 || v32 >= (char *)v45 + v30 + v34)
      {
        v47 = (char *)v22 + v30;
        v48 = v33;
        v41[0] = v33 * v20;
        swift_arrayInitWithTakeFrontToBack();
      }
      else
      {
        if (v22 == v45)
        {
LABEL_35:
          v45[2] = 0;
          goto LABEL_36;
        }
        v47 = (char *)v22 + v30;
        v48 = v33;
        v41[0] = v33 * v20;
        swift_arrayInitWithTakeBackToFront();
      }
      v34 = v41[0];
      v32 = v47;
      v33 = v48;
      goto LABEL_35;
    }
LABEL_44:
    __break(1u);
LABEL_45:
    __break(1u);
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
LABEL_38:
  v21 = v44;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v44, 1, 1, v8);
  swift_bridgeObjectRelease();
LABEL_39:
  swift_bridgeObjectRelease();
  result = sub_1DC0926D8(v21, (uint64_t (*)(_QWORD))sub_1DC1428F0);
  v38 = v12[3];
  if (v38 < 2)
    return (uint64_t)v12;
  v39 = v38 >> 1;
  v36 = __OFSUB__(v39, v48);
  v40 = v39 - v48;
  if (!v36)
  {
    v12[2] = v40;
    return (uint64_t)v12;
  }
LABEL_47:
  __break(1u);
LABEL_48:
  __break(1u);
LABEL_49:
  __break(1u);
LABEL_50:
  __break(1u);
  return result;
}

uint64_t sub_1DC141478(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, __int128 *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  uint64_t *boxed_opaque_existential_1;

  *(_QWORD *)(a15 + 464) = a16;
  *(_QWORD *)(a15 + 472) = a17;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(a15 + 440));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a16 - 8) + 32))(boxed_opaque_existential_1, a14, a16);
  *(_QWORD *)(a15 + 40) = type metadata accessor for StockFeedMastheadViewLayoutAttributesFactory();
  *(_QWORD *)(a15 + 48) = &off_1EA467AF0;
  *(_QWORD *)(a15 + 16) = a1;
  *(_QWORD *)(a15 + 80) = type metadata accessor for StockFeedPriceViewLayoutAttributesFactory();
  *(_QWORD *)(a15 + 88) = &off_1EA46E108;
  *(_QWORD *)(a15 + 56) = a2;
  *(_QWORD *)(a15 + 120) = type metadata accessor for StockChartViewLayoutAttributesFactory();
  *(_QWORD *)(a15 + 128) = &off_1EA461928;
  *(_QWORD *)(a15 + 96) = a3;
  *(_QWORD *)(a15 + 200) = type metadata accessor for QuoteDetailViewLayoutAttributesFactory();
  *(_QWORD *)(a15 + 208) = &off_1EA464E38;
  *(_QWORD *)(a15 + 176) = a4;
  *(_QWORD *)(a15 + 160) = type metadata accessor for StockFeedEarningsViewLayoutAttributesFactory();
  *(_QWORD *)(a15 + 168) = &off_1EA457730;
  *(_QWORD *)(a15 + 136) = a5;
  *(_QWORD *)(a15 + 240) = type metadata accessor for PlacardViewLayoutAttributesFactory();
  *(_QWORD *)(a15 + 248) = &off_1EA467ED8;
  *(_QWORD *)(a15 + 216) = a6;
  *(_QWORD *)(a15 + 280) = type metadata accessor for BilingualFeedPromptViewLayoutAttributesFactory();
  *(_QWORD *)(a15 + 288) = &off_1EA452988;
  *(_QWORD *)(a15 + 256) = a7;
  *(_QWORD *)(a15 + 320) = type metadata accessor for BrandingTitleViewLayoutAttributesFactory();
  *(_QWORD *)(a15 + 328) = &off_1EA45AE08;
  *(_QWORD *)(a15 + 296) = a8;
  *(_QWORD *)(a15 + 424) = type metadata accessor for StockFeedEarningsViewModelFactory();
  *(_QWORD *)(a15 + 432) = &off_1EA466018;
  *(_QWORD *)(a15 + 400) = a13;
  *(_QWORD *)(a15 + 336) = a9;
  *(_QWORD *)(a15 + 344) = a10;
  *(_BYTE *)(a15 + 352) = a11 & 1;
  sub_1DC097DD0(a12, a15 + 360);
  return a15;
}

uint64_t sub_1DC14162C(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v2 = v1;
  if (a1 >> 62)
    goto LABEL_18;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v5 = MEMORY[0x1E0DEE9D8];
    if (!v4)
      return v5;
    v14 = MEMORY[0x1E0DEE9D8];
    result = sub_1DC2AD328(0, v4 & ~(v4 >> 63), 0);
    if (v4 < 0)
      break;
    v7 = 0;
    v5 = v14;
    while (v4 != v7)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        v8 = MEMORY[0x1DF0C9FBC](v7, a1);
      }
      else
      {
        v8 = *(_QWORD *)(a1 + 8 * v7 + 32);
        swift_retain();
      }
      v12 = v8;
      sub_1DC13FE0C(&v12, &v13);
      if (v2)
      {
        swift_release();
        swift_release();
        return v5;
      }
      v2 = 0;
      swift_release();
      v9 = v13;
      v14 = v5;
      v11 = *(_QWORD *)(v5 + 16);
      v10 = *(_QWORD *)(v5 + 24);
      if (v11 >= v10 >> 1)
      {
        sub_1DC2AD328(v10 > 1, v11 + 1, 1);
        v5 = v14;
      }
      ++v7;
      *(_QWORD *)(v5 + 16) = v11 + 1;
      *(_QWORD *)(v5 + 8 * v11 + 32) = v9;
      if (v4 == v7)
        return v5;
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    v4 = sub_1DC409850();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_1DC1417B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, __int128 *a12, uint64_t *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35)
{
  uint64_t v36;
  uint64_t v37;
  uint64_t *boxed_opaque_existential_1;
  uint64_t *v39;
  uint64_t *v40;
  uint64_t *v41;
  uint64_t *v42;
  uint64_t *v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t **v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t *v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  int v118;
  uint64_t v119;
  uint64_t v120;
  __int128 *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124[3];
  uint64_t v125;
  uint64_t v126;
  uint64_t v127[3];
  uint64_t v128;
  uint64_t v129;
  uint64_t v130[3];
  uint64_t v131;
  uint64_t v132;
  uint64_t v133[3];
  uint64_t v134;
  uint64_t v135;
  uint64_t v136[3];
  uint64_t v137;
  uint64_t v138;
  uint64_t v139[3];
  uint64_t v140;
  uint64_t v141;
  uint64_t v142[3];
  uint64_t v143;
  uint64_t v144;
  uint64_t v145[3];
  uint64_t v146;
  uint64_t v147;
  uint64_t v148[3];
  uint64_t v149;
  uint64_t v150;

  v112 = a8;
  v110 = a7;
  v108 = a6;
  v104 = a5;
  v102 = a4;
  v99 = a2;
  v100 = a3;
  v123 = a9;
  v122 = a10;
  v119 = a14;
  v114 = a15;
  v121 = a12;
  v113 = a13;
  v120 = a31;
  v106 = a30;
  v111 = a35;
  v103 = a34;
  v109 = a25;
  v101 = a29;
  v97 = a28;
  v98 = a33;
  v107 = a27;
  v118 = a11 & 1;
  v105 = a17;
  v117 = a21;
  v116 = *(_QWORD *)(a21 - 8);
  MEMORY[0x1E0C80A78](a1);
  v115 = (char *)&v96 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v149 = a16;
  v150 = v37;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v148);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a16 - 8) + 32))(boxed_opaque_existential_1, a1, a16);
  v146 = a22;
  v147 = a32;
  v39 = __swift_allocate_boxed_opaque_existential_1(v145);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a22 - 8) + 32))(v39, v99, a22);
  v143 = a18;
  v144 = v97;
  v40 = __swift_allocate_boxed_opaque_existential_1(v142);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a18 - 8) + 32))(v40, v100, a18);
  v140 = a23;
  v141 = v98;
  v41 = __swift_allocate_boxed_opaque_existential_1(v139);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a23 - 8) + 32))(v41, v102, a23);
  v137 = a19;
  v138 = v101;
  v42 = __swift_allocate_boxed_opaque_existential_1(v136);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a19 - 8) + 32))(v42, v104, a19);
  v134 = a24;
  v135 = v103;
  v43 = __swift_allocate_boxed_opaque_existential_1(v133);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a24 - 8) + 32))(v43, v108, a24);
  v131 = a20;
  v132 = v106;
  v44 = __swift_allocate_boxed_opaque_existential_1(v130);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a20 - 8) + 32))(v44, v110, a20);
  v45 = v105;
  v128 = v105;
  v129 = v107;
  v46 = __swift_allocate_boxed_opaque_existential_1(v127);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 32))(v46, v112, v45);
  v47 = v109;
  v125 = v109;
  v126 = v111;
  v48 = __swift_allocate_boxed_opaque_existential_1(v124);
  (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v47 - 8) + 32))(v48, v113, v47);
  v114 = swift_allocObject();
  v49 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v148, v149);
  MEMORY[0x1E0C80A78](v49);
  v113 = (uint64_t *)((char *)&v96 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(void))(v51 + 16))();
  v52 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v145, v146);
  MEMORY[0x1E0C80A78](v52);
  v54 = (uint64_t *)((char *)&v96 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v55 + 16))(v54);
  v56 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v142, v143);
  MEMORY[0x1E0C80A78](v56);
  v58 = (uint64_t *)((char *)&v96 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v59 + 16))(v58);
  v60 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v139, v140);
  MEMORY[0x1E0C80A78](v60);
  v62 = (uint64_t *)((char *)&v96 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v63 + 16))(v62);
  v64 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v136, v137);
  MEMORY[0x1E0C80A78](v64);
  v66 = (uint64_t **)((char *)&v96 - ((v65 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t **))(v67 + 16))(v66);
  v68 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v133, v134);
  MEMORY[0x1E0C80A78](v68);
  v70 = (uint64_t *)((char *)&v96 - ((v69 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v71 + 16))(v70);
  v72 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v130, v131);
  MEMORY[0x1E0C80A78](v72);
  v74 = (uint64_t *)((char *)&v96 - ((v73 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v75 + 16))(v74);
  v76 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v127, v128);
  MEMORY[0x1E0C80A78](v76);
  v78 = (uint64_t *)((char *)&v96 - ((v77 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v79 + 16))(v78);
  v80 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v124, v125);
  MEMORY[0x1E0C80A78](v80);
  v82 = (uint64_t *)((char *)&v96 - ((v81 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v83 + 16))(v82);
  v84 = *v113;
  v85 = *v54;
  v86 = *v58;
  v87 = *v62;
  v88 = *v66;
  v112 = *v70;
  v113 = v88;
  v89 = *v74;
  v90 = *v78;
  v91 = *v82;
  v92 = (uint64_t)v115;
  v93 = v117;
  (*(void (**)(char *, uint64_t, uint64_t))(v116 + 16))(v115, v119, v117);
  v94 = sub_1DC141478(v84, v85, v86, v87, (uint64_t)v113, v112, v89, v90, v123, v122, v118, v121, v91, v92, v114, v93, v120);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v124);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v127);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v130);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v133);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v136);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v139);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v142);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v145);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v148);
  return v94;
}

void sub_1DC141E14()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB2A128)
  {
    type metadata accessor for StockFeedLayoutSectionDescriptor(255);
    type metadata accessor for StockFeedLayoutModel();
    sub_1DC081B48(&qword_1EDB3B308, 255, type metadata accessor for StockFeedLayoutSectionDescriptor, (uint64_t)&unk_1DC41ECF0);
    sub_1DC081B48(&qword_1EDB32160, 255, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedLayoutModel, (uint64_t)&unk_1DC413950);
    v0 = sub_1DC40532C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB2A128);
  }
}

void sub_1DC141EE4()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EDB3F7D8)
  {
    sub_1DC141F5C(255, (unint64_t *)&qword_1EDB29D60, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EDB3F7D8);
  }
}

void sub_1DC141F5C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *))
{
  unint64_t v6;
  uint64_t v7;
  _QWORD v8[4];

  if (!*a2)
  {
    v8[0] = type metadata accessor for StockFeedSectionDescriptor();
    v8[1] = type metadata accessor for StockFeedModel();
    v8[2] = sub_1DC081B48(&qword_1EDB36EE0, 255, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedSectionDescriptor, (uint64_t)&unk_1DC4167B0);
    v8[3] = sub_1DC081B48(&qword_1EDB2D770, 255, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedModel, (uint64_t)&unk_1DC429058);
    v6 = a3(a1, v8);
    if (!v7)
      atomic_store(v6, a2);
  }
}

void sub_1DC142030(uint64_t a1)
{
  sub_1DC142078(a1, (unint64_t *)&unk_1EDB3FC98, (unint64_t *)&unk_1EDB2AAF0, MEMORY[0x1E0DBC7C0], MEMORY[0x1E0DECC48]);
}

void sub_1DC142054(uint64_t a1)
{
  sub_1DC142078(a1, &qword_1EDB3FCB0, (unint64_t *)&unk_1EDB2AAF0, MEMORY[0x1E0DBC7C0], MEMORY[0x1E0DECC58]);
}

void sub_1DC142078(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t (*v10)(void);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;

  if (!*a2)
  {
    v10 = MEMORY[0x1E0DBC790];
    sub_1DC141F5C(255, (unint64_t *)&qword_1EDB2AB10, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790]);
    v12 = v11;
    v13 = sub_1DC1425D4(a3, (unint64_t *)&qword_1EDB2AB10, (uint64_t (*)(uint64_t, _QWORD *))v10, a4);
    v14 = a5(a1, v12, v13);
    if (!v15)
      atomic_store(v14, a2);
  }
}

void sub_1DC14211C(uint64_t a1)
{
  sub_1DC089DA4(a1, &qword_1EDB3F7E0, (uint64_t (*)(uint64_t))sub_1DC141EE4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

void sub_1DC142138()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EDB3F800)
  {
    sub_1DC141F5C(255, (unint64_t *)&qword_1EDB29D60, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EDB3F800);
  }
}

void sub_1DC1421AC(uint64_t a1@<X8>)
{
  uint64_t *v1;

  sub_1DC138FDC(v1[2], v1[3], v1[4], v1[5], a1);
}

void sub_1DC1421C8(uint64_t a1)
{
  sub_1DC142078(a1, &qword_1EDB3FC80, (unint64_t *)&unk_1EDB2AB00, MEMORY[0x1E0DBC7C8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEC8F8]);
}

void sub_1DC1421EC(uint64_t a1@<X8>)
{
  sub_1DC142A9C(a1);
}

void sub_1DC142200()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB29BC0)
  {
    type metadata accessor for StockFeedModel();
    sub_1DC081B48(&qword_1EDB2D770, 255, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedModel, (uint64_t)&unk_1DC429058);
    v0 = sub_1DC40436C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB29BC0);
  }
}

void sub_1DC14227C()
{
  unint64_t TupleTypeMetadata3;
  uint64_t v1;

  if (!qword_1EDB288F0)
  {
    sub_1DC4010E4();
    sub_1DC0FED34(255);
    sub_1DC133AB4(255);
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1)
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_1EDB288F0);
  }
}

void sub_1DC142304()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB29FF0)
  {
    type metadata accessor for StockFeedLayoutModel();
    sub_1DC081B48(&qword_1EDB32160, 255, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedLayoutModel, (uint64_t)&unk_1DC413950);
    v0 = sub_1DC404DEC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB29FF0);
  }
}

void sub_1DC142380(uint64_t a1)
{
  sub_1DC089DA4(a1, &qword_1EDB2A130, (uint64_t (*)(uint64_t))sub_1DC141E14, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

void sub_1DC14239C()
{
  uint64_t (*v0)(void);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1EDB3FC68)
  {
    v0 = MEMORY[0x1E0DB7B60];
    sub_1DC141F5C(255, (unint64_t *)&qword_1EDB29D60, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60]);
    sub_1DC1425D4((unint64_t *)&unk_1EDB29D50, (unint64_t *)&qword_1EDB29D60, (uint64_t (*)(uint64_t, _QWORD *))v0, MEMORY[0x1E0DB7B98]);
    v1 = sub_1DC409814();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1EDB3FC68);
  }
}

void sub_1DC142434()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB29548)
  {
    sub_1DC142200();
    sub_1DC081B48((unint64_t *)&unk_1EDB29BB0, 255, (uint64_t (*)(uint64_t))sub_1DC142200, MEMORY[0x1E0DB6F08]);
    sub_1DC081B48(&qword_1EDB29BA8, 255, (uint64_t (*)(uint64_t))sub_1DC142200, MEMORY[0x1E0DB6EF8]);
    v0 = sub_1DC4028E4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB29548);
  }
}

uint64_t sub_1DC1424E0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1DC1405AC(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_1DC1424FC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1DC14017C(*(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_1DC142518@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1DC13EACC(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

void sub_1DC142534()
{
  unint64_t TupleTypeMetadata3;
  uint64_t v1;

  if (!qword_1EDB3F5D8)
  {
    sub_1DC0FEF78(255);
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1)
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_1EDB3F5D8);
  }
}

void sub_1DC1425A4(uint64_t a1, uint64_t a2, void *a3)
{
  if (a2)
  {
    swift_bridgeObjectRelease();

  }
}

uint64_t sub_1DC1425D4(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_1DC141F5C(255, a2, a3);
    result = MEMORY[0x1DF0CAB8C](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1DC142614()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EDB33EF8)
  {
    type metadata accessor for StockFeedMastheadModel();
    type metadata accessor for StockFeedMastheadViewLayoutAttributes();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EDB33EF8);
  }
}

void sub_1DC142680()
{
  sub_1DC13E630();
}

void sub_1DC1426A0()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1F034BFF8)
  {
    type metadata accessor for StockFeedMastheadModel();
    type metadata accessor for StockFeedMastheadViewLayoutAttributes();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1F034BFF8);
  }
}

void sub_1DC142710(uint64_t a1)
{
  sub_1DC089DA4(a1, &qword_1EDB3B200, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5A418], (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for StockFeedLayoutSectionDescriptor.Data);
}

void sub_1DC14272C(uint64_t a1)
{
  sub_1DC089DA4(a1, &qword_1EDB2AE98, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5B2B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

void sub_1DC142748(uint64_t a1)
{
  sub_1DC089DA4(a1, &qword_1EDB2AF30, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5BCC8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

void sub_1DC142764(uint64_t a1)
{
  sub_1DC089DA4(a1, &qword_1EDB2AD98, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5A648], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

uint64_t sub_1DC142780(uint64_t a1, uint64_t a2)
{
  __swift_memcpy88_8(a2, a1);
  return a2;
}

void sub_1DC1427BC(uint64_t a1)
{
  sub_1DC089DA4(a1, &qword_1EDB3B208, (uint64_t (*)(uint64_t))sub_1DC142710, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

_QWORD *sub_1DC1427D8(_QWORD *a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10]);
  return a1;
}

uint64_t sub_1DC14282C(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;
  uint64_t result;

  if (a2)
  {
    v3 = a3;
    return swift_bridgeObjectRetain();
  }
  return result;
}

unint64_t sub_1DC142858()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_1EDB29BA0;
  if (!qword_1EDB29BA0)
  {
    sub_1DC142200();
    v2 = v1;
    v3 = sub_1DC081B48(&qword_1EDB2D778, 255, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedModel, (uint64_t)&unk_1DC429088);
    result = MEMORY[0x1DF0CAB8C](MEMORY[0x1E0D59D90], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1EDB29BA0);
  }
  return result;
}

uint64_t sub_1DC1428D4@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1DC13FAA4(a1, a2);
}

void sub_1DC1428F0(uint64_t a1)
{
  sub_1DC089DA4(a1, &qword_1F034C000, (uint64_t (*)(uint64_t))sub_1DC142304, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

void sub_1DC14290C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t TupleTypeMetadata2;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v5)
      atomic_store(TupleTypeMetadata2, a2);
  }
}

uint64_t sub_1DC142970@<X0>(uint64_t a1@<X8>)
{
  double *v1;

  return sub_1DC249EBC(a1, v1[2], v1[3], v1[4], v1[5]);
}

void sub_1DC142984(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t TupleTypeMetadata2;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v5)
      atomic_store(TupleTypeMetadata2, a2);
  }
}

unint64_t sub_1DC1429EC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_1EDB29D38;
  if (!qword_1EDB29D38)
  {
    sub_1DC141F5C(255, (unint64_t *)&qword_1EDB29D60, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60]);
    v2 = v1;
    v3[0] = sub_1DC081B48((unint64_t *)&unk_1EDB36ED0, 255, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedSectionDescriptor, (uint64_t)&unk_1DC416818);
    v3[1] = sub_1DC081B48(&qword_1EDB2D778, 255, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedModel, (uint64_t)&unk_1DC429088);
    result = MEMORY[0x1DF0CAB8C](MEMORY[0x1E0D59E78], v2, v3);
    atomic_store(result, (unint64_t *)&qword_1EDB29D38);
  }
  return result;
}

void sub_1DC142A9C(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_1DC13F154(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(unsigned __int8 *)(v1 + 40), *(_QWORD *)(v1 + 48), a1);
}

void sub_1DC142AC4(uint64_t a1)
{
  sub_1DC089DA4(a1, &qword_1F034C008, (uint64_t (*)(uint64_t))sub_1DC142AE0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

void sub_1DC142AE0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F034C010)
  {
    type metadata accessor for ManageWatchlistsLayoutModel();
    sub_1DC081B48(&qword_1F034C018, 255, (uint64_t (*)(uint64_t))type metadata accessor for ManageWatchlistsLayoutModel, (uint64_t)&unk_1DC4134C8);
    v0 = sub_1DC404DEC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1F034C010);
  }
}

void sub_1DC142B5C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F034C020)
  {
    type metadata accessor for ManageWatchlistsModel();
    sub_1DC081B48((unint64_t *)&unk_1F0350F30, 255, (uint64_t (*)(uint64_t))type metadata accessor for ManageWatchlistsModel, (uint64_t)&unk_1DC423338);
    v0 = sub_1DC40436C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1F034C020);
  }
}

void sub_1DC142BD8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F034C028)
  {
    type metadata accessor for ManageWatchlistsModel();
    sub_1DC142C7C();
    sub_1DC081B48((unint64_t *)&unk_1F0350F30, 255, (uint64_t (*)(uint64_t))type metadata accessor for ManageWatchlistsModel, (uint64_t)&unk_1DC423338);
    v0 = sub_1DC4047B0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1F034C028);
  }
}

unint64_t sub_1DC142C7C()
{
  unint64_t result;

  result = qword_1F034C030;
  if (!qword_1F034C030)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC42DC54, &type metadata for ManageWatchlistsSectionDescriptor);
    atomic_store(result, (unint64_t *)&qword_1F034C030);
  }
  return result;
}

void sub_1DC142CC0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F034C038)
  {
    sub_1DC142BD8();
    sub_1DC081B48(&qword_1F034C040, 255, (uint64_t (*)(uint64_t))sub_1DC142BD8, MEMORY[0x1E0DB7B98]);
    v0 = sub_1DC409814();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1F034C038);
  }
}

void sub_1DC142D3C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB27558)
  {
    sub_1DC141F5C(255, (unint64_t *)&qword_1EDB29D60, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60]);
    v0 = sub_1DC4095A4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB27558);
  }
}

void sub_1DC142DA0(uint64_t a1)
{
  sub_1DC089DA4(a1, &qword_1EDB29BC8, (uint64_t (*)(uint64_t))sub_1DC142200, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

uint64_t sub_1DC142DBC@<X0>(void (*a1)(uint64_t, uint64_t, uint64_t, uint64_t)@<X1>, char *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  int v23;
  char *v24;
  id v25;
  void *v26;
  void (*v27)(char *, char *, uint64_t);
  void (*v28)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t result;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  char *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  void (*v48)(uint64_t, uint64_t, uint64_t, uint64_t);
  __int128 v49;
  uint64_t v50;
  _QWORD v51[5];

  v48 = a1;
  v45 = sub_1DC401984();
  v43 = *(_QWORD *)(v45 - 8);
  MEMORY[0x1E0C80A78](v45);
  v44 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC089DA4(0, (unint64_t *)&unk_1EDB28A70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v41 - v6;
  v8 = sub_1DC3FFDD0();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v42 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v41 - v12;
  MEMORY[0x1E0C80A78](v14);
  v47 = (char *)&v41 - v15;
  v16 = type metadata accessor for StocksActivity.Article(0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (id *)((char *)&v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1DC1449E0();
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v41 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = v2;
  sub_1DC407F3C();
  v22 = sub_1DC407EAC();
  v23 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 48))(v21, 1, v22);
  sub_1DC0926D8((uint64_t)v21, (uint64_t (*)(_QWORD))sub_1DC1449E0);
  if (v23 != 1)
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(a2, 1, 1, v8);
  v24 = a2;
  sub_1DC0990BC((uint64_t)v48, (uint64_t)v18, type metadata accessor for StocksActivity.Article);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_1DC0926D8((uint64_t)v18, type metadata accessor for StocksActivity.Article);
LABEL_12:
    a2 = v24;
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(a2, 1, 1, v8);
  }
  v25 = objc_msgSend(*v18, sel_contentURL);
  if (!v25)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
    goto LABEL_11;
  }
  v26 = v25;
  sub_1DC3FFD94();

  v27 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
  v27(v7, v13, v8);
  v28 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
  v28((uint64_t)v7, 0, 1, v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
LABEL_11:
    swift_unknownObjectRelease();
    sub_1DC0A6180((uint64_t)v7, (uint64_t)&unk_1EDB28A70, (uint64_t)MEMORY[0x1E0CAFFF8], (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD))sub_1DC089DA4);
    goto LABEL_12;
  }
  v48 = v28;
  v27(v47, v7, v8);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v46 + 16), *(_QWORD *)(v46 + 40));
  sub_1DC096268(0, &qword_1EDB274B0);
  result = sub_1DC402608();
  v46 = v8;
  if (v50)
  {
    sub_1DC097DD0(&v49, (uint64_t)v51);
    v41 = v51[4];
    __swift_project_boxed_opaque_existential_1(v51, v51[3]);
    sub_1DC089DA4(0, &qword_1F0352EE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D571A8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v30 = sub_1DC401C54();
    v31 = *(_QWORD *)(v30 - 8);
    v32 = (*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
    v33 = swift_allocObject();
    *(_OWORD *)(v33 + 16) = xmmword_1DC40DC10;
    (*(void (**)(unint64_t, _QWORD, uint64_t))(v31 + 104))(v33 + v32, *MEMORY[0x1E0D571A0], v30);
    v34 = v44;
    v35 = v47;
    sub_1DC401B28();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    v36 = v46;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v35, v46);
    v37 = v43;
    v38 = v45;
    v39 = (*(uint64_t (**)(char *, uint64_t))(v43 + 88))(v34, v45);
    if (v39 == *MEMORY[0x1E0D56C78] || v39 == *MEMORY[0x1E0D56C48])
    {
      (*(void (**)(char *, uint64_t))(v37 + 96))(v34, v38);
      v40 = v42;
      v27(v42, v34, v36);
      v27(v24, v40, v36);
      v48((uint64_t)v24, 0, 1, v36);
    }
    else
    {
      v48((uint64_t)v24, 1, 1, v36);
      (*(void (**)(char *, uint64_t))(v37 + 8))(v34, v38);
    }
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v51);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC1432F4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  void **v37;
  uint64_t (*v38)(_QWORD);
  void *v39;
  uint64_t ObjectType;
  id v41;
  void *v42;
  uint64_t v43;
  void (*v44)(char *, char *, uint64_t);
  char *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  int EnumCaseMultiPayload;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  _QWORD *v66;
  void *v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void (*v79)(uint64_t, uint64_t);
  uint64_t v80;
  void (*v81)(uint64_t, uint64_t);
  uint64_t result;
  char *v83;
  id v84;
  void *v85;
  id v86;
  void *v87;
  uint64_t v88;
  void (*v89)(uint64_t, uint64_t);
  uint64_t v90;
  char *v91;
  char *v92;
  char *v93;
  char *v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  char *v106;
  _QWORD *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  __int128 v112;
  __int128 v113;
  _UNKNOWN **v114;
  __int128 v115;
  uint64_t v116;
  _QWORD v117[4];

  v108 = a1;
  v3 = sub_1DC3FF9A4();
  MEMORY[0x1E0C80A78](v3);
  v92 = (char *)&v90 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1DC089DA4(0, (unint64_t *)&qword_1EDB42668, (uint64_t (*)(uint64_t))MEMORY[0x1E0D56E78], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v6);
  v96 = (char *)&v90 - v7;
  v95 = sub_1DC401AB0();
  v97 = *(_QWORD *)(v95 - 8);
  MEMORY[0x1E0C80A78](v95);
  v91 = (char *)&v90 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v93 = (char *)&v90 - v10;
  sub_1DC143F58();
  v101 = v11;
  v100 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v98 = v12;
  v99 = (char *)&v90 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v105 = sub_1DC401984();
  v103 = *(_QWORD *)(v105 - 8);
  MEMORY[0x1E0C80A78](v105);
  v104 = (char *)&v90 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC089DA4(0, (unint64_t *)&unk_1EDB28A70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], v5);
  MEMORY[0x1E0C80A78](v14);
  v94 = (char *)&v90 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v90 - v17;
  v19 = sub_1DC3FFDD0();
  v110 = *(_QWORD *)(v19 - 8);
  v111 = v19;
  MEMORY[0x1E0C80A78](v19);
  v102 = (char *)&v90 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v90 - v22;
  MEMORY[0x1E0C80A78](v24);
  v106 = (char *)&v90 - v25;
  v107 = (_QWORD *)sub_1DC40202C();
  v26 = *(v107 - 1);
  MEMORY[0x1E0C80A78](v107);
  v28 = (char *)&v90 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = sub_1DC401BB8();
  MEMORY[0x1E0C80A78](v29);
  v31 = (uint64_t *)((char *)&v90 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v32);
  v34 = (char *)&v90 - v33;
  v35 = type metadata accessor for StocksActivity.Article(0);
  MEMORY[0x1E0C80A78](v35);
  v37 = (void **)((char *)&v90 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1DC0990BC(a2, (uint64_t)v37, v38);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_1DC1446B4();
    v61 = (uint64_t)v37 + *(int *)(v60 + 64);
    sub_1DC144744((uint64_t)v37, (uint64_t)v34);
    sub_1DC144788(v61, (uint64_t)v117);
    sub_1DC0990BC((uint64_t)v34, (uint64_t)v31, (uint64_t (*)(_QWORD))MEMORY[0x1E0D570B0]);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v63 = *v31;
    if (EnumCaseMultiPayload != 1)
    {
      sub_1DC1447E4();
      v65 = (char *)v31 + *(int *)(v64 + 48);
      v66 = v107;
      (*(void (**)(char *, char *, _QWORD *))(v26 + 32))(v28, v65, v107);
      v67 = (void *)sub_1DC143FD0(v108, v63, (uint64_t)v28, (uint64_t)v117);
      swift_release();
      (*(void (**)(char *, _QWORD *))(v26 + 8))(v28, v66);
      sub_1DC0A6180((uint64_t)v117, (uint64_t)&qword_1EDB39A70, (uint64_t)&unk_1EDB39A60, (uint64_t)&protocol descriptor for ArticleScienceDataProviderType, (uint64_t (*)(_QWORD))sub_1DC14465C);
      sub_1DC0926D8((uint64_t)v34, (uint64_t (*)(_QWORD))MEMORY[0x1E0D570B0]);
      return (uint64_t)v67;
    }
    swift_release();
    sub_1DC0A6180((uint64_t)v117, (uint64_t)&qword_1EDB39A70, (uint64_t)&unk_1EDB39A60, (uint64_t)&protocol descriptor for ArticleScienceDataProviderType, (uint64_t (*)(_QWORD))sub_1DC14465C);
    sub_1DC0926D8((uint64_t)v34, (uint64_t (*)(_QWORD))MEMORY[0x1E0D570B0]);
    return 0;
  }
  v39 = *v37;
  ObjectType = swift_getObjectType();
  v41 = objc_msgSend(v39, sel_contentURL);
  if (!v41)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v110 + 56))(v18, 1, 1, v111);
    goto LABEL_14;
  }
  v42 = v41;
  sub_1DC3FFD94();

  v43 = v110;
  v44 = *(void (**)(char *, char *, uint64_t))(v110 + 32);
  v45 = v23;
  v46 = v111;
  v44(v18, v45, v111);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v18, 0, 1, v46);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v18, 1, v46) == 1)
  {
LABEL_14:
    swift_unknownObjectRelease();
    sub_1DC0A6180((uint64_t)v18, (uint64_t)&unk_1EDB28A70, (uint64_t)MEMORY[0x1E0CAFFF8], (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD))sub_1DC089DA4);
    return 0;
  }
  v90 = ObjectType;
  v47 = v106;
  v44(v106, v18, v46);
  v48 = *(_QWORD *)(v109 + 40);
  v107 = (_QWORD *)(v109 + 16);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v109 + 16), v48);
  sub_1DC096268(0, &qword_1EDB274B0);
  sub_1DC402608();
  if (!v116)
  {
    __break(1u);
    goto LABEL_33;
  }
  sub_1DC097DD0(&v115, (uint64_t)v117);
  __swift_project_boxed_opaque_existential_1(v117, v117[3]);
  sub_1DC089DA4(0, &qword_1F0352EE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D571A8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v49 = sub_1DC401C54();
  v50 = *(_QWORD *)(v49 - 8);
  v51 = (*(unsigned __int8 *)(v50 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80);
  v52 = swift_allocObject();
  *(_OWORD *)(v52 + 16) = xmmword_1DC40DC10;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v50 + 104))(v52 + v51, *MEMORY[0x1E0D571A0], v49);
  v53 = v104;
  sub_1DC401B28();
  swift_bridgeObjectRelease();
  v54 = v103;
  v55 = v105;
  if ((*(unsigned int (**)(char *, uint64_t))(v103 + 88))(v53, v105) != *MEMORY[0x1E0D56C68])
  {
    (*(void (**)(char *, uint64_t))(v110 + 8))(v47, v111);
    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v54 + 8))(v53, v55);
LABEL_26:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v117);
    return 0;
  }
  (*(void (**)(char *, uint64_t))(v54 + 96))(v53, v55);
  v44(v102, v53, v111);
  v56 = v108;
  sub_1DC406844();
  if (!v116)
  {
    sub_1DC0926D8((uint64_t)&v115, (uint64_t (*)(_QWORD))sub_1DC0D11C4);
    v58 = v107;
    goto LABEL_17;
  }
  sub_1DC4018AC();
  v57 = swift_dynamicCast();
  v58 = v107;
  if ((v57 & 1) == 0)
  {
LABEL_17:
    v105 = 0;
    goto LABEL_18;
  }
  v59 = v112;
  __swift_project_boxed_opaque_existential_1(v107, *(_QWORD *)(v109 + 40));
  sub_1DC096268(0, (unint64_t *)&unk_1EDB28C50);
  sub_1DC402608();
  if (!v116)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  type metadata accessor for WebViewCoordinator();
  swift_allocObject();
  swift_unknownObjectRetain();
  v105 = sub_1DC24C3DC(v59, (uint64_t)v39, (uint64_t)&v115);
  swift_release();
  swift_unknownObjectRelease();
LABEL_18:
  __swift_project_boxed_opaque_existential_1(v58, *(_QWORD *)(v109 + 40));
  sub_1DC096268(0, (unint64_t *)&unk_1EDB38BB0);
  v68 = v100;
  v69 = v99;
  v70 = v101;
  (*(void (**)(char *, uint64_t, uint64_t))(v100 + 16))(v99, v56, v101);
  v71 = (*(unsigned __int8 *)(v68 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v68 + 80);
  v72 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v68 + 32))(v72 + v71, v69, v70);
  sub_1DC4025F0();
  swift_release();
  if (!*((_QWORD *)&v113 + 1))
  {
LABEL_33:
    swift_release();
    __break(1u);
    goto LABEL_34;
  }
  sub_1DC097DD0(&v112, (uint64_t)&v115);
  __swift_project_boxed_opaque_existential_1(&v115, v116);
  v73 = v97;
  v74 = (uint64_t)v96;
  v75 = (uint64_t)v102;
  v76 = v105;
  if (v105)
  {
    *((_QWORD *)&v113 + 1) = type metadata accessor for WebViewCoordinator();
    v114 = &off_1EA45B008;
    *(_QWORD *)&v112 = v76;
  }
  else
  {
    v114 = 0;
    v112 = 0u;
    v113 = 0u;
  }
  swift_retain();
  v67 = sub_1DC222604(v75, (uint64_t)&v112);
  sub_1DC0A6180((uint64_t)&v112, (uint64_t)&qword_1F034C050, (uint64_t)&qword_1F034F350, (uint64_t)&protocol descriptor for WebViewCoordinatorType, (uint64_t (*)(_QWORD))sub_1DC14465C);
  if (!v67)
  {
    swift_release();
    swift_unknownObjectRelease();
    v80 = v111;
    v81 = *(void (**)(uint64_t, uint64_t))(v110 + 8);
    v81(v75, v111);
    v81((uint64_t)v106, v80);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v115);
    goto LABEL_26;
  }
  objc_msgSend(v67, sel_setModalPresentationStyle_, 3);
  swift_unknownObjectRetain();
  sub_1DC4091D8();
  sub_1DC401A98();
  v77 = v95;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v73 + 48))(v74, 1, v95) == 1)
  {
    swift_release();
    swift_unknownObjectRelease();
    v78 = v111;
    v79 = *(void (**)(uint64_t, uint64_t))(v110 + 8);
    v79(v75, v111);
    v79((uint64_t)v106, v78);
    sub_1DC0A6180(v74, (uint64_t)&qword_1EDB42668, (uint64_t)MEMORY[0x1E0D56E78], (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD))sub_1DC089DA4);
LABEL_31:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v115);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v117);
    return (uint64_t)v67;
  }
  v105 = v76;
  v83 = v93;
  (*(void (**)(char *, uint64_t, uint64_t))(v73 + 32))(v93, v74, v77);
  v84 = objc_msgSend(v67, sel_view);
  if (v84)
  {
    v85 = v84;
    (*(void (**)(char *, char *, uint64_t))(v73 + 16))(v91, v83, v77);
    sub_1DC3FF998();
    v86 = objc_allocWithZone((Class)sub_1DC403EC8());
    sub_1DC080808(&qword_1EDB42660, (uint64_t (*)(uint64_t))MEMORY[0x1E0D56E78], MEMORY[0x1E0D56E60]);
    v87 = (void *)sub_1DC403EBC();
    sub_1DC409334();
    swift_release();
    swift_unknownObjectRelease();

    (*(void (**)(char *, uint64_t))(v73 + 8))(v83, v77);
    v88 = v111;
    v89 = *(void (**)(uint64_t, uint64_t))(v110 + 8);
    v89(v75, v111);
    v89((uint64_t)v106, v88);
    goto LABEL_31;
  }
LABEL_35:
  result = swift_release();
  __break(1u);
  return result;
}

void sub_1DC143F58()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB2A920)
  {
    type metadata accessor for StocksActivity(255);
    sub_1DC080808((unint64_t *)&unk_1EDB2C5A0, type metadata accessor for StocksActivity, (uint64_t)&protocol conformance descriptor for StocksActivity);
    v0 = sub_1DC406850();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB2A920);
  }
}

uint64_t sub_1DC143FD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t (**v9)();
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  char *v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  void *v26;
  uint64_t v27;
  id v28;
  id v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (**v33)();
  id v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t (**v40)();
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  uint64_t v49;
  _QWORD v50[3];
  uint64_t v51;

  v5 = v4;
  v43 = a4;
  v37 = a3;
  v47 = a2;
  v7 = sub_1DC405E48();
  v38 = *(_QWORD *)(v7 - 8);
  v39 = v7;
  MEMORY[0x1E0C80A78](v7);
  v9 = (uint64_t (**)())((char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1DC143F58();
  v11 = v10;
  v12 = *(_QWORD *)(v10 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  MEMORY[0x1E0C80A78](v10);
  v42 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1DC401960();
  v45 = *(_QWORD *)(v14 - 8);
  v46 = v14;
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1DC4017BC();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v20 = (uint64_t *)((char *)&v37 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  v44 = a1;
  sub_1DC406844();
  v40 = v9;
  if (v51)
  {
    sub_1DC4018AC();
    if ((swift_dynamicCast() & 1) != 0)
    {
      v41 = v48;
      *v20 = 0x656C6369747261;
      v20[1] = 0xE700000000000000;
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(v18 + 104))(v20, *MEMORY[0x1E0CF8508], v17);
      sub_1DC4022CC();
      sub_1DC401948();
      (*(void (**)(char *, uint64_t))(v45 + 8))(v16, v46);
      sub_1DC40187C();
      swift_release();
      swift_bridgeObjectRelease();
      (*(void (**)(_QWORD *, uint64_t))(v18 + 8))(v20, v17);
    }
  }
  else
  {
    sub_1DC0926D8((uint64_t)v50, (uint64_t (*)(_QWORD))sub_1DC0D11C4);
  }
  v21 = v5[5];
  v41 = v5[6];
  __swift_project_boxed_opaque_existential_1(v5 + 2, v21);
  sub_1DC096268(0, &qword_1EDB292C0);
  sub_1DC144854(v43, (uint64_t)v50);
  v22 = v42;
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v42, v44, v11);
  v23 = (*(unsigned __int8 *)(v12 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v24 = swift_allocObject();
  *(_QWORD *)(v24 + 16) = v47;
  sub_1DC144788((uint64_t)v50, v24 + 24);
  (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v24 + v23, v22, v11);
  swift_retain();
  sub_1DC4025F0();
  result = swift_release();
  if (v49)
  {
    sub_1DC097DD0(&v48, (uint64_t)v50);
    __swift_project_boxed_opaque_existential_1(v50, v51);
    sub_1DC4022E4();
    v26 = (void *)sub_1DC402038();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v48);
    sub_1DC4022CC();
    sub_1DC401948();
    (*(void (**)(char *, uint64_t))(v45 + 8))(v16, v46);
    sub_1DC4021B8();
    swift_bridgeObjectRelease();
    v27 = sub_1DC080808(&qword_1EDB29328, (uint64_t (*)(uint64_t))MEMORY[0x1E0D57BA0], MEMORY[0x1E0D57B88]);
    v28 = objc_allocWithZone((Class)sub_1DC404F78());
    v29 = v26;
    v30 = objc_msgSend(v28, sel_initWithRootViewController_, v29, v37);
    sub_1DC406208();
    v31 = swift_allocObject();
    *(_QWORD *)(v31 + 16) = v29;
    *(_QWORD *)(v31 + 24) = v27;
    v32 = v39;
    v33 = v40;
    *v40 = sub_1DC14499C;
    v33[1] = (uint64_t (*)())v31;
    (*(void (**)(uint64_t (**)(), _QWORD, uint64_t))(v38 + 104))(v33, *MEMORY[0x1E0DBAF58], v32);
    v34 = v29;
    v35 = v30;
    v36 = sub_1DC4061E4();
    sub_1DC4061F0();
    sub_1DC4061FC();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)v50);
    return v36;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC14446C(uint64_t a1)
{
  void (*v2)(uint64_t);

  sub_1DC143F58();
  v2 = (void (*)(uint64_t))sub_1DC40682C();
  v2(a1);
  return swift_release();
}

uint64_t sub_1DC1444AC()
{
  uint64_t v0;
  uint64_t v1;

  sub_1DC143F58();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_1DC14450C(uint64_t a1)
{
  sub_1DC143F58();
  return sub_1DC14446C(a1);
}

uint64_t sub_1DC144548(_QWORD *a1)
{
  void (*v2)(_QWORD *);

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4022D8();
  sub_1DC096268(0, &qword_1EDB292E8);
  sub_1DC4024E8();
  swift_unknownObjectRelease();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, (unint64_t *)&unk_1EDB39A60);
  sub_1DC4024E8();
  sub_1DC143F58();
  v2 = (void (*)(_QWORD *))sub_1DC40682C();
  v2(a1);
  return swift_release();
}

void sub_1DC14465C(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    sub_1DC096268(255, a3);
    v4 = sub_1DC4095A4();
    if (!v5)
      atomic_store(v4, a2);
  }
}

void sub_1DC1446B4()
{
  unint64_t TupleTypeMetadata3;
  uint64_t v1;

  if (!qword_1EDB29200)
  {
    sub_1DC401BB8();
    sub_1DC14465C(255, (unint64_t *)&qword_1EDB39A70, (unint64_t *)&unk_1EDB39A60);
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1)
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_1EDB29200);
  }
}

uint64_t sub_1DC144744(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1DC401BB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC144788(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1DC14465C(0, (unint64_t *)&qword_1EDB39A70, (unint64_t *)&unk_1EDB39A60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1DC1447E4()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EDB42670)
  {
    sub_1DC4022F0();
    sub_1DC40202C();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EDB42670);
  }
}

uint64_t sub_1DC144854(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1DC14465C(0, (unint64_t *)&qword_1EDB39A70, (unint64_t *)&unk_1EDB39A60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC1448B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1DC143F58();
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  v4 = *(unsigned __int8 *)(v3 + 80);
  swift_release();
  if (*(_QWORD *)(v0 + 48))
    __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0 + ((v4 + 64) & ~v4), v2);
  return swift_deallocObject();
}

uint64_t sub_1DC144934(_QWORD *a1)
{
  sub_1DC143F58();
  return sub_1DC144548(a1);
}

uint64_t sub_1DC144978()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1DC14499C()
{
  swift_getObjectType();
  return sub_1DC4025A8();
}

void sub_1DC1449E0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB2B010)
  {
    sub_1DC122C00();
    v0 = sub_1DC407F30();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB2B010);
  }
}

_QWORD *sub_1DC144A38(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1DC3FFFEC();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    *((_BYTE *)v4 + *(int *)(a3 + 24)) = *((_BYTE *)a2 + *(int *)(a3 + 24));
  }
  return v4;
}

uint64_t sub_1DC144AF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_1DC3FFFEC();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *sub_1DC144B38(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1DC3FFFEC();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  *((_BYTE *)a1 + *(int *)(a3 + 24)) = *((_BYTE *)a2 + *(int *)(a3 + 24));
  return a1;
}

_QWORD *sub_1DC144BC4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1DC3FFFEC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  *((_BYTE *)a1 + *(int *)(a3 + 24)) = *((_BYTE *)a2 + *(int *)(a3 + 24));
  return a1;
}

_OWORD *sub_1DC144C54(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1DC3FFFEC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  *((_BYTE *)a1 + *(int *)(a3 + 24)) = *((_BYTE *)a2 + *(int *)(a3 + 24));
  return a1;
}

_QWORD *sub_1DC144CCC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1DC3FFFEC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  *((_BYTE *)a1 + *(int *)(a3 + 24)) = *((_BYTE *)a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_1DC144D4C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC144D58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1DC3FFFEC();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t sub_1DC144DD4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC144DE0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_1DC3FFFEC();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for WebViewSession()
{
  uint64_t result;

  result = qword_1F034C0B0;
  if (!qword_1F034C0B0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1DC144E90()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1DC3FFFEC();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for WebViewSession.Trigger(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1DC144F58 + 4 * byte_1DC40DC45[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1DC144F8C + 4 * byte_1DC40DC40[v4]))();
}

uint64_t sub_1DC144F8C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC144F94(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC144F9CLL);
  return result;
}

uint64_t sub_1DC144FA8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC144FB0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1DC144FB4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC144FBC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_1DC144FC8(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for WebViewSession.Trigger()
{
  return &type metadata for WebViewSession.Trigger;
}

unint64_t sub_1DC144FE8()
{
  unint64_t result;

  result = qword_1F034C0F0;
  if (!qword_1F034C0F0)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC40DCD8, &type metadata for WebViewSession.Trigger);
    atomic_store(result, (unint64_t *)&qword_1F034C0F0);
  }
  return result;
}

BOOL sub_1DC14502C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_1DC145044()
{
  sub_1DC409AC0();
  sub_1DC409ACC();
  return sub_1DC409AF0();
}

uint64_t sub_1DC145088()
{
  return sub_1DC409ACC();
}

uint64_t sub_1DC1450B0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  sub_1DC3FFBFC();
  result = sub_1DC3FFBF0();
  *a1 = result;
  return result;
}

uint64_t sub_1DC1450DC()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_1DC145100()
{
  uint64_t v0;

  return *(id *)(v0 + 16);
}

uint64_t *sub_1DC145108(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_1DC092F50(0, &qword_1EDB2AFF8, (void (*)(uint64_t))MEMORY[0x1E0D5D908]);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v7 = sub_1DC407EF4();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
  }
  return a1;
}

void *sub_1DC1451E8(void *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void *, uint64_t, uint64_t);
  int v7;
  int v8;
  uint64_t v9;

  v4 = sub_1DC407EF4();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
  v7 = v6(a1, 1, v4);
  v8 = v6(a2, 1, v4);
  if (!v7)
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 24))(a1, a2, v4);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v5 + 8))(a1, v4);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    sub_1DC092F50(0, &qword_1EDB2AFF8, (void (*)(uint64_t))MEMORY[0x1E0D5D908]);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v5 + 16))(a1, a2, v4);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  return a1;
}

void *sub_1DC1452E4(void *a1, const void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_1DC407EF4();
  v5 = *(_QWORD *)(v4 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(a2, 1, v4))
  {
    sub_1DC092F50(0, &qword_1EDB2AFF8, (void (*)(uint64_t))MEMORY[0x1E0D5D908]);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v5 + 32))(a1, a2, v4);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  }
  return a1;
}

void *sub_1DC145394(void *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void *, uint64_t, uint64_t);
  int v7;
  int v8;
  uint64_t v9;

  v4 = sub_1DC407EF4();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
  v7 = v6(a1, 1, v4);
  v8 = v6(a2, 1, v4);
  if (!v7)
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 40))(a1, a2, v4);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v5 + 8))(a1, v4);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    sub_1DC092F50(0, &qword_1EDB2AFF8, (void (*)(uint64_t))MEMORY[0x1E0D5D908]);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v5 + 32))(a1, a2, v4);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  return a1;
}

uint64_t sub_1DC145490()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC14549C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1DC092F50(0, &qword_1EDB2AFF8, (void (*)(uint64_t))MEMORY[0x1E0D5D908]);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_1DC1454E8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC1454F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1DC092F50(0, &qword_1EDB2AFF8, (void (*)(uint64_t))MEMORY[0x1E0D5D908]);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for NewsStockFeedGroupConfigData()
{
  uint64_t result;

  result = qword_1EDB38578;
  if (!qword_1EDB38578)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1DC145580@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;

  v15 = a2;
  sub_1DC092F50(0, &qword_1EDB2AFF8, (void (*)(uint64_t))MEMORY[0x1E0D5D908]);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v14 - v5;
  sub_1DC145E10(0, &qword_1EDB3FDB8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v14 - v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC145D78();
  sub_1DC409B08();
  if (!v2)
  {
    v12 = v15;
    sub_1DC407EF4();
    sub_1DC080808(&qword_1EDB2AFF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5D908], MEMORY[0x1E0D5D920]);
    sub_1DC4098EC();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    sub_1DC145DBC((uint64_t)v6, v12);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1DC145720()
{
  sub_1DC409AC0();
  sub_1DC409ACC();
  return sub_1DC409AF0();
}

uint64_t sub_1DC145760()
{
  return sub_1DC409ACC();
}

uint64_t sub_1DC145784()
{
  return 0x746E65746E6F63;
}

uint64_t sub_1DC14579C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x746E65746E6F63 && a2 == 0xE700000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1DC4099E8();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1DC145830()
{
  return 0;
}

uint64_t sub_1DC14583C()
{
  sub_1DC145D78();
  return sub_1DC409B20();
}

uint64_t sub_1DC145864()
{
  sub_1DC145D78();
  return sub_1DC409B2C();
}

uint64_t sub_1DC14588C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DC145580(a1, a2);
}

uint64_t sub_1DC1458A0(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1DC145E10(0, &qword_1F034C120, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC145D78();
  sub_1DC409B14();
  sub_1DC407EF4();
  sub_1DC080808(&qword_1F034C128, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5D908], MEMORY[0x1E0D5D918]);
  sub_1DC409958();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1DC1459B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;

  v28 = type metadata accessor for NewsStockFeedGroupConfigData();
  MEMORY[0x1E0C80A78](v28);
  v27 = (char *)&v23 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  v1 = sub_1DC407A74();
  v25 = *(_QWORD *)(v1 - 8);
  v26 = v1;
  MEMORY[0x1E0C80A78](v1);
  v24 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC092F50(0, (unint64_t *)&qword_1EDB41DD0, (void (*)(uint64_t))MEMORY[0x1E0DB4DC8]);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v23 - v7;
  v9 = sub_1DC40799C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1DC400010();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC145CD4();
  v18 = v17;
  __swift_allocate_value_buffer(v17, qword_1EDB5E238);
  __swift_project_value_buffer(v18, (uint64_t)qword_1EDB5E238);
  sub_1DC400004();
  v23 = sub_1DC3FFFF8();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x1E0D5BD28], v9);
  v19 = sub_1DC402DC4();
  v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56);
  v20(v8, 1, 1, v19);
  v20(v5, 1, 1, v19);
  (*(void (**)(char *, _QWORD, uint64_t))(v25 + 104))(v24, *MEMORY[0x1E0D5BF78], v26);
  v21 = sub_1DC407EF4();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v27, 1, 1, v21);
  sub_1DC080808(&qword_1EDB38570, (uint64_t (*)(uint64_t))type metadata accessor for NewsStockFeedGroupConfigData, (uint64_t)&unk_1DC40DE08);
  sub_1DC080808(&qword_1EDB38568, (uint64_t (*)(uint64_t))type metadata accessor for NewsStockFeedGroupConfigData, (uint64_t)&unk_1DC40DDE0);
  return sub_1DC40745C();
}

void sub_1DC145CD4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB275A8)
  {
    type metadata accessor for NewsStockFeedGroupConfigData();
    sub_1DC080808(&qword_1EDB38570, (uint64_t (*)(uint64_t))type metadata accessor for NewsStockFeedGroupConfigData, (uint64_t)&unk_1DC40DE08);
    sub_1DC080808(&qword_1EDB38568, (uint64_t (*)(uint64_t))type metadata accessor for NewsStockFeedGroupConfigData, (uint64_t)&unk_1DC40DDE0);
    v0 = sub_1DC407480();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB275A8);
  }
}

unint64_t sub_1DC145D78()
{
  unint64_t result;

  result = qword_1EDB38550;
  if (!qword_1EDB38550)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC40DEF4, &type metadata for NewsStockFeedGroupConfigData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB38550);
  }
  return result;
}

uint64_t sub_1DC145DBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1DC092F50(0, &qword_1EDB2AFF8, (void (*)(uint64_t))MEMORY[0x1E0D5D908]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1DC145E10(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC145D78();
    v7 = a3(a1, &type metadata for NewsStockFeedGroupConfigData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t storeEnumTagSinglePayload for NewsStockFeedGroupConfigData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1DC145EAC + 4 * byte_1DC40DDB0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1DC145ECC + 4 * byte_1DC40DDB5[v4]))();
}

_BYTE *sub_1DC145EAC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1DC145ECC(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC145ED4(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC145EDC(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC145EE4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC145EEC(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for NewsStockFeedGroupConfigData.CodingKeys()
{
  return &type metadata for NewsStockFeedGroupConfigData.CodingKeys;
}

unint64_t sub_1DC145F0C()
{
  unint64_t result;

  result = qword_1F034C130;
  if (!qword_1F034C130)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC40DECC, &type metadata for NewsStockFeedGroupConfigData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F034C130);
  }
  return result;
}

unint64_t sub_1DC145F54()
{
  unint64_t result;

  result = qword_1EDB38560;
  if (!qword_1EDB38560)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC40DE3C, &type metadata for NewsStockFeedGroupConfigData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB38560);
  }
  return result;
}

unint64_t sub_1DC145F9C()
{
  unint64_t result;

  result = qword_1EDB38558;
  if (!qword_1EDB38558)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC40DE64, &type metadata for NewsStockFeedGroupConfigData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB38558);
  }
  return result;
}

uint64_t type metadata accessor for ManageWatchlistsStyler()
{
  return objc_opt_self();
}

uint64_t sub_1DC146000()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);

  return swift_deallocClassInstance();
}

uint64_t sub_1DC146034()
{
  sub_1DC0BEA74();
  swift_allocObject();
  sub_1DC1465A4();
  return sub_1DC40499C();
}

uint64_t sub_1DC14609C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v2 = type metadata accessor for ForYouFeedPriceChangeDisplayBlueprintModifier();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (uint64_t *)((char *)&v13 - v6);
  v9 = (char *)&v13 + *(int *)(v8 + 20) - v6;
  v10 = sub_1DC4008EC();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v9, a1, v10);
  *v7 = 0xD000000000000012;
  v7[1] = 0x80000001DC4338C0;
  sub_1DC0990BC((uint64_t)v7, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for ForYouFeedPriceChangeDisplayBlueprintModifier);
  sub_1DC0BEA74();
  swift_allocObject();
  sub_1DC080808(&qword_1EDB41218, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedPriceChangeDisplayBlueprintModifier, (uint64_t)&unk_1DC423EF0);
  v11 = sub_1DC40499C();
  sub_1DC0926D8((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for ForYouFeedPriceChangeDisplayBlueprintModifier);
  return v11;
}

uint64_t sub_1DC1461D4(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t refreshed;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  refreshed = type metadata accessor for ForYouFeedRefreshBlueprintModifier();
  MEMORY[0x1E0C80A78](refreshed);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (uint64_t *)((char *)&v16 - v9);
  v11 = *v2;
  sub_1DC0824D4(v11 + 16, (uint64_t)&v16 - v9 + 16);
  sub_1DC0824D4(v11 + 56, (uint64_t)(v10 + 8));
  v12 = (char *)v10 + *(int *)(refreshed + 32);
  v13 = sub_1DC4008EC();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v12, a2, v13);
  *v10 = 0x68736572666552;
  v10[1] = 0xE700000000000000;
  v10[7] = a1;
  sub_1DC0990BC((uint64_t)v10, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for ForYouFeedRefreshBlueprintModifier);
  sub_1DC0BEA74();
  swift_allocObject();
  sub_1DC080808(&qword_1EDB3C5D8, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedRefreshBlueprintModifier, (uint64_t)&unk_1DC41E098);
  swift_retain();
  v14 = sub_1DC40499C();
  sub_1DC0926D8((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for ForYouFeedRefreshBlueprintModifier);
  return v14;
}

uint64_t sub_1DC146340()
{
  sub_1DC0BEA74();
  swift_allocObject();
  sub_1DC146560();
  return sub_1DC40499C();
}

uint64_t sub_1DC1463A4()
{
  sub_1DC0BEA74();
  swift_allocObject();
  sub_1DC14651C();
  swift_bridgeObjectRetain();
  return sub_1DC40499C();
}

uint64_t sub_1DC146434()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(*(_QWORD *)v0 + 96);
  sub_1DC0BEA74();
  swift_allocObject();
  sub_1DC1464D8();
  swift_bridgeObjectRetain();
  swift_retain();
  v2 = v1;
  return sub_1DC40499C();
}

unint64_t sub_1DC1464D8()
{
  unint64_t result;

  result = qword_1EDB415E8;
  if (!qword_1EDB415E8)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC4217DC, &type metadata for ForYouFeedFailedBlueprintModifier);
    atomic_store(result, (unint64_t *)&qword_1EDB415E8);
  }
  return result;
}

unint64_t sub_1DC14651C()
{
  unint64_t result;

  result = qword_1EDB3E1E8;
  if (!qword_1EDB3E1E8)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC42D934, &type metadata for ForYouFeedReplaceQuotesBlueprintModifier);
    atomic_store(result, (unint64_t *)&qword_1EDB3E1E8);
  }
  return result;
}

unint64_t sub_1DC146560()
{
  unint64_t result;

  result = qword_1EDB415F8;
  if (!qword_1EDB415F8)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC41E97C, &type metadata for ForYouFeedOnlineBlueprintModifier);
    atomic_store(result, (unint64_t *)&qword_1EDB415F8);
  }
  return result;
}

unint64_t sub_1DC1465A4()
{
  unint64_t result;

  result = qword_1EDB40F18;
  if (!qword_1EDB40F18)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC427F0C, &type metadata for ForYouFeedRelayoutBlueprintModifier);
    atomic_store(result, (unint64_t *)&qword_1EDB40F18);
  }
  return result;
}

_QWORD *sub_1DC1465E8(_OWORD *a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v12 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v12 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = *((_OWORD *)a2 + 1);
    *a1 = *(_OWORD *)a2;
    a1[1] = v5;
    v6 = *((_OWORD *)a2 + 3);
    a1[2] = *((_OWORD *)a2 + 2);
    a1[3] = v6;
    v7 = *((_OWORD *)a2 + 5);
    v8 = *(int *)(a3 + 28);
    v9 = (char *)a1 + v8;
    v10 = (uint64_t)a2 + v8;
    a1[4] = *((_OWORD *)a2 + 4);
    a1[5] = v7;
    v11 = sub_1DC4061C0();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return v3;
}

uint64_t sub_1DC146680(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1 + *(int *)(a2 + 28);
  v3 = sub_1DC4061C0();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

_OWORD *sub_1DC1466B8(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  v6 = a2[5];
  v7 = *(int *)(a3 + 28);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  a1[4] = a2[4];
  a1[5] = v6;
  v10 = sub_1DC4061C0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

_QWORD *sub_1DC146724(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  a1[7] = a2[7];
  a1[8] = a2[8];
  a1[9] = a2[9];
  a1[10] = a2[10];
  a1[11] = a2[11];
  v4 = *(int *)(a3 + 28);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_1DC4061C0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

_OWORD *sub_1DC1467D8(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  v6 = a2[5];
  v7 = *(int *)(a3 + 28);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  a1[4] = a2[4];
  a1[5] = v6;
  v10 = sub_1DC4061C0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

_OWORD *sub_1DC146844(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  v6 = a2[5];
  v7 = *(int *)(a3 + 28);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  a1[4] = a2[4];
  a1[5] = v6;
  v10 = sub_1DC4061C0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_1DC1468B0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC1468BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a1 + *(int *)(a3 + 28);
  v5 = sub_1DC4061C0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, a2, v5);
}

uint64_t sub_1DC1468FC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC146908(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;

  v5 = a1 + *(int *)(a4 + 28);
  v6 = sub_1DC4061C0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, a2, a2, v6);
}

uint64_t sub_1DC14694C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 28);
  v5 = sub_1DC4061C0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_1DC146994()
{
  sub_1DC146A2C(&qword_1EDB40EF8, (uint64_t)&unk_1DC40E108);
  return sub_1DC40625C();
}

uint64_t sub_1DC1469CC()
{
  return sub_1DC405DDC();
}

uint64_t sub_1DC1469E4()
{
  return sub_1DC146A2C(&qword_1EDB40F00, (uint64_t)&unk_1DC40E0D0);
}

uint64_t sub_1DC146A08()
{
  return sub_1DC146A2C(&qword_1EDB40EF8, (uint64_t)&unk_1DC40E108);
}

uint64_t sub_1DC146A2C(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for SectionHeaderViewLayoutAttributes();
    result = MEMORY[0x1DF0CAB8C](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for LayoutSizeClass(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for LayoutSizeClass(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1DC146B48 + 4 * byte_1DC40E195[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1DC146B7C + 4 * byte_1DC40E190[v4]))();
}

uint64_t sub_1DC146B7C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC146B84(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC146B8CLL);
  return result;
}

uint64_t sub_1DC146B98(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC146BA0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1DC146BA4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC146BAC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LayoutSizeClass()
{
  return &type metadata for LayoutSizeClass;
}

unint64_t sub_1DC146BCC()
{
  unint64_t result;

  result = qword_1F034C240;
  if (!qword_1F034C240)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC40E1EC, &type metadata for LayoutSizeClass);
    atomic_store(result, (unint64_t *)&qword_1F034C240);
  }
  return result;
}

uint64_t sub_1DC146C10()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ManageWatchlistsTracker()
{
  return objc_opt_self();
}

uint64_t sub_1DC146CDC()
{
  char *v0;
  uint64_t v1;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  CGRect v14;
  CGRect v15;

  objc_msgSend(v0, sel_frame);
  if (CGRectGetHeight(v14) <= 1.0)
    return 0;
  objc_msgSend(v0, sel_frame);
  if (CGRectGetWidth(v15) <= 1.0)
    return 0;
  sub_1DC0DBA38();
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1DC40C740;
  v2 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC8StocksUI9TodayView_titleLabel], sel_text);
  if (v2)
  {
    v3 = v2;
    v4 = sub_1DC408A4C();
    v6 = v5;

  }
  else
  {
    v4 = 0;
    v6 = 0;
  }
  *(_QWORD *)(v1 + 32) = v4;
  *(_QWORD *)(v1 + 40) = v6;
  v8 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC8StocksUI9TodayView_brandingLabel], sel_text);
  if (v8)
  {
    v9 = v8;
    v10 = sub_1DC408A4C();
    v12 = v11;

  }
  else
  {
    v10 = 0;
    v12 = 0;
  }
  *(_QWORD *)(v1 + 48) = v10;
  *(_QWORD *)(v1 + 56) = v12;
  v7 = sub_1DC404300();
  swift_bridgeObjectRelease();
  return v7;
}

id _s8StocksUI31StockActivityItemsConfigurationCfD_0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1DC146EA8()
{
  _QWORD *v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(*v0 + OBJC_IVAR____TtC8StocksUI9TodayView_isSelected);
  swift_beginAccess();
  return *v1;
}

uint64_t (*sub_1DC146EF0())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_1DC146F3C()
{
  _QWORD *v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(*v0 + OBJC_IVAR____TtC8StocksUI9TodayView_isHighlighted);
  swift_beginAccess();
  return *v1;
}

uint64_t (*sub_1DC146F84())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

void sub_1DC146FCC()
{
  sub_1DC113F6C(&qword_1EDB3F3F8, (uint64_t)&unk_1DC40E284);
  JUMPOUT(0x1DF0C7418);
}

void sub_1DC147004()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0;
  v2 = OBJC_IVAR____TtC8StocksUI9TodayView_titleLabel;
  *(_QWORD *)&v1[v2] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v3 = OBJC_IVAR____TtC8StocksUI9TodayView_brandingLabel;
  *(_QWORD *)&v1[v3] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v1[OBJC_IVAR____TtC8StocksUI9TodayView_isSelectable] = 1;
  v1[OBJC_IVAR____TtC8StocksUI9TodayView_isSelected] = 0;
  v1[OBJC_IVAR____TtC8StocksUI9TodayView_isHighlightable] = 1;
  v1[OBJC_IVAR____TtC8StocksUI9TodayView_isHighlighted] = 0;
  v4 = OBJC_IVAR____TtC8StocksUI9TodayView_isEditing;
  sub_1DC083594(0, &qword_1EDB2A8C8, MEMORY[0x1E0DEAFA0], MEMORY[0x1E0DBC1B0]);
  swift_allocObject();
  *(_QWORD *)&v1[v4] = sub_1DC40676C();
  *(_QWORD *)&v1[OBJC_IVAR____TtC8StocksUI9TodayView_labelAlphaValueWhenEditing] = 0x3FE0000000000000;
  v1[OBJC_IVAR____TtC8StocksUI9TodayView_shouldChangeLabelAlphaWhenEditing] = 1;

  sub_1DC409838();
  __break(1u);
}

uint64_t sub_1DC147164()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1DC147188()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1DC1471B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;

  v1 = type metadata accessor for EngagementEvent();
  MEMORY[0x1E0C80A78](v1);
  sub_1DC1488E0(v0, (uint64_t)&v4 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v3 = (char *)sub_1DC147278 + 4 * byte_1DC40E36C[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1DC147278()
{
  uint64_t v0;
  uint64_t v1;

  sub_1DC0926D8(v0, (uint64_t (*)(_QWORD))type metadata accessor for EngagementEvent);
  return v1;
}

void _s8StocksUI15EngagementEventO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  _QWORD v53[18];
  uint64_t v54;
  char *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;

  v72 = a1;
  v3 = sub_1DC403A60();
  v63 = *(_QWORD *)(v3 - 8);
  v64 = v3;
  MEMORY[0x1E0C80A78](v3);
  v53[16] = (char *)v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v53[15] = (char *)v53 - v6;
  v62 = sub_1DC403130();
  v69 = *(_QWORD *)(v62 - 8);
  MEMORY[0x1E0C80A78](v62);
  v53[14] = (char *)v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v61 = (char *)v53 - v9;
  v60 = sub_1DC403424();
  v68 = *(_QWORD *)(v60 - 8);
  MEMORY[0x1E0C80A78](v60);
  v53[13] = (char *)v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v59 = (char *)v53 - v12;
  v58 = sub_1DC4036DC();
  v67 = *(_QWORD *)(v58 - 8);
  MEMORY[0x1E0C80A78](v58);
  v53[12] = (char *)v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v57 = (char *)v53 - v15;
  v56 = sub_1DC4034C0();
  v66 = *(_QWORD *)(v56 - 8);
  MEMORY[0x1E0C80A78](v56);
  v53[11] = (char *)v53 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v55 = (char *)v53 - v18;
  v19 = sub_1DC4018C4();
  v70 = *(_QWORD *)(v19 - 8);
  v71 = v19;
  MEMORY[0x1E0C80A78](v19);
  v53[10] = (char *)v53 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v53[8] = (char *)v53 - v22;
  MEMORY[0x1E0C80A78](v23);
  v53[9] = (char *)v53 - v24;
  MEMORY[0x1E0C80A78](v25);
  v53[6] = (char *)v53 - v26;
  MEMORY[0x1E0C80A78](v27);
  v53[7] = (char *)v53 - v28;
  MEMORY[0x1E0C80A78](v29);
  v53[4] = (char *)v53 - v30;
  MEMORY[0x1E0C80A78](v31);
  v53[5] = (char *)v53 - v32;
  MEMORY[0x1E0C80A78](v33);
  v53[3] = (char *)v53 - v34;
  MEMORY[0x1E0C80A78](v35);
  v53[1] = (char *)v53 - v36;
  MEMORY[0x1E0C80A78](v37);
  v53[0] = (char *)v53 - v38;
  v54 = sub_1DC403610();
  v65 = *(_QWORD *)(v54 - 8);
  MEMORY[0x1E0C80A78](v54);
  v53[2] = (char *)v53 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v40);
  v53[17] = (char *)v53 - v41;
  v42 = type metadata accessor for EngagementEvent();
  MEMORY[0x1E0C80A78](v42);
  MEMORY[0x1E0C80A78](v43);
  MEMORY[0x1E0C80A78](v44);
  MEMORY[0x1E0C80A78](v45);
  MEMORY[0x1E0C80A78](v46);
  MEMORY[0x1E0C80A78](v47);
  sub_1DC148924();
  MEMORY[0x1E0C80A78](v48);
  v51 = (char *)v53 + *(int *)(v50 + 48) - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC1488E0(v72, (uint64_t)v53 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1DC1488E0(a2, (uint64_t)v51);
  v52 = (char *)sub_1DC147870 + 4 * word_1DC40E374[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1DC147870()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t (*v6)(_QWORD);
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t);

  v4 = v2;
  sub_1DC1488E0(v2, v0);
  if (swift_getEnumCaseMultiPayload())
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v3 - 184) + 8))(v0, *(_QWORD *)(v3 - 272));
    v5 = 0;
    v6 = (uint64_t (*)(_QWORD))sub_1DC148924;
  }
  else
  {
    v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 184) + 32);
    v8 = *(_QWORD *)(v3 - 272);
    v7(*(_QWORD *)(v3 - 280), v0, v8);
    v9 = *(_QWORD *)(v3 - 400);
    v7(v9, v1, v8);
    v10 = *(_QWORD *)(v3 - 416);
    sub_1DC403604();
    v11 = sub_1DC4018B8();
    v13 = v12;
    v14 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 144) + 8);
    v15 = v10;
    v16 = *(_QWORD *)(v3 - 136);
    v14(v15, v16);
    v17 = *(_QWORD *)(v3 - 408);
    sub_1DC403604();
    v18 = sub_1DC4018B8();
    v20 = v19;
    v14(v17, v16);
    if (v11 == v18 && v13 == v20)
      v5 = 1;
    else
      v5 = sub_1DC4099E8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v21 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 184) + 8);
    v21(v9, v8);
    v21(*(_QWORD *)(v3 - 280), v8);
    v6 = (uint64_t (*)(_QWORD))type metadata accessor for EngagementEvent;
  }
  sub_1DC0926D8(v4, v6);
  return v5 & 1;
}

uint64_t *initializeBufferWithCopyOfBuffer for EngagementEvent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v7 = sub_1DC403610();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
        swift_storeEnumTagMultiPayload();
        break;
      case 1u:
        v10 = sub_1DC4034C0();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
        swift_storeEnumTagMultiPayload();
        break;
      case 2u:
        v11 = sub_1DC4036DC();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
        v12 = sub_1DC403130();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(a1, a2, v12);
        swift_storeEnumTagMultiPayload();
        break;
      case 4u:
        v13 = sub_1DC403424();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(a1, a2, v13);
        swift_storeEnumTagMultiPayload();
        break;
      case 5u:
        v14 = sub_1DC403A60();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(a1, a2, v14);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
        break;
    }
  }
  return a1;
}

void *initializeWithCopy for EngagementEvent(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v6 = sub_1DC403610();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
      goto LABEL_9;
    case 1u:
      v7 = sub_1DC4034C0();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      goto LABEL_9;
    case 2u:
      v8 = sub_1DC4036DC();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      goto LABEL_9;
    case 3u:
      v9 = sub_1DC403130();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
      goto LABEL_9;
    case 4u:
      v10 = sub_1DC403424();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
      goto LABEL_9;
    case 5u:
      v11 = sub_1DC403A60();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
LABEL_9:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

void *assignWithCopy for EngagementEvent(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if (a1 != a2)
  {
    sub_1DC0926D8((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for EngagementEvent);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v6 = sub_1DC403610();
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
        swift_storeEnumTagMultiPayload();
        break;
      case 1u:
        v7 = sub_1DC4034C0();
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
        swift_storeEnumTagMultiPayload();
        break;
      case 2u:
        v8 = sub_1DC4036DC();
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
        v9 = sub_1DC403130();
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
        swift_storeEnumTagMultiPayload();
        break;
      case 4u:
        v10 = sub_1DC403424();
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
        swift_storeEnumTagMultiPayload();
        break;
      case 5u:
        v11 = sub_1DC403A60();
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

void *initializeWithTake for EngagementEvent(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v6 = sub_1DC403610();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      goto LABEL_9;
    case 1u:
      v7 = sub_1DC4034C0();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      goto LABEL_9;
    case 2u:
      v8 = sub_1DC4036DC();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
      goto LABEL_9;
    case 3u:
      v9 = sub_1DC403130();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
      goto LABEL_9;
    case 4u:
      v10 = sub_1DC403424();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(a1, a2, v10);
      goto LABEL_9;
    case 5u:
      v11 = sub_1DC403A60();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a1, a2, v11);
LABEL_9:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

void *assignWithTake for EngagementEvent(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if (a1 != a2)
  {
    sub_1DC0926D8((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for EngagementEvent);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v6 = sub_1DC403610();
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
        swift_storeEnumTagMultiPayload();
        break;
      case 1u:
        v7 = sub_1DC4034C0();
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
        swift_storeEnumTagMultiPayload();
        break;
      case 2u:
        v8 = sub_1DC4036DC();
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
        v9 = sub_1DC403130();
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
        swift_storeEnumTagMultiPayload();
        break;
      case 4u:
        v10 = sub_1DC403424();
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(a1, a2, v10);
        swift_storeEnumTagMultiPayload();
        break;
      case 5u:
        v11 = sub_1DC403A60();
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a1, a2, v11);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for EngagementEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a3 - 8) + 48))();
}

uint64_t storeEnumTagSinglePayload for EngagementEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a4 - 8) + 56))();
}

uint64_t sub_1DC1488D0()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1DC1488E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for EngagementEvent();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1DC148924()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1F034C330)
  {
    type metadata accessor for EngagementEvent();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1F034C330);
  }
}

unint64_t sub_1DC148984()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EDB29968;
  if (!qword_1EDB29968)
  {
    v1 = sub_1DC403A60();
    result = MEMORY[0x1DF0CAB8C](MEMORY[0x1E0DADE10], v1);
    atomic_store(result, (unint64_t *)&qword_1EDB29968);
  }
  return result;
}

uint64_t sub_1DC1489CC()
{
  uint64_t v0;

  sub_1DC148A20(v0 + 16);
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 48);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for StockFeedViewerEventHandler()
{
  return objc_opt_self();
}

uint64_t sub_1DC148A20(uint64_t a1)
{
  swift_unknownObjectWeakDestroy();
  return a1;
}

id sub_1DC148A44()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t ObjCClassFromMetadata;
  id v3;
  uint64_t inited;
  void *v5;
  uint64_t v6;
  id v7;
  void *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t);
  id v14;
  uint64_t v15;
  id v16;
  void *v17;
  void *v18;
  id v19;

  v1 = v0;
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v3 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1DC3FFC80();

  sub_1DC089DA4(0, (unint64_t *)&qword_1EDB40090, (uint64_t (*)(uint64_t))sub_1DC112C08, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DC40C740;
  v5 = (void *)*MEMORY[0x1E0DC1138];
  *(_QWORD *)(inited + 32) = *MEMORY[0x1E0DC1138];
  v6 = sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FB00);
  v7 = v5;
  *(_QWORD *)(inited + 40) = sub_1DC4092F8();
  v8 = (void *)*MEMORY[0x1E0DC1140];
  *(_QWORD *)(inited + 64) = v6;
  *(_QWORD *)(inited + 72) = v8;
  v9 = v1 + 2;
  v11 = v1[5];
  v10 = v1[6];
  __swift_project_boxed_opaque_existential_1(v9, v11);
  v12 = *(_QWORD *)(v10 + 16);
  v13 = *(uint64_t (**)(uint64_t, uint64_t))(v12 + 104);
  v14 = v8;
  v15 = v13(v11, v12);
  *(_QWORD *)(inited + 104) = sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FB30);
  *(_QWORD *)(inited + 80) = v15;
  sub_1DC0FA3C4(inited);
  v16 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  v17 = (void *)sub_1DC408A1C();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1DC0FB14C();
  v18 = (void *)sub_1DC408980();
  swift_bridgeObjectRelease();
  v19 = objc_msgSend(v16, sel_initWithString_attributes_, v17, v18, 0x80000001DC433B30);

  return v19;
}

void sub_1DC148D2C(void *a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  char *v21;
  void (*v22)(char *, _QWORD, uint64_t);
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(_QWORD *, _QWORD);
  void *v29;
  void *v30;
  id v31;
  void *v32;
  void *v33;
  id v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  id v39;
  void *v40;
  void *v41;
  id v42;
  void *v43;
  id v44;
  void *v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  void *v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  void *v59;
  _QWORD *v60;
  uint64_t v61;
  int v62;
  _QWORD aBlock[6];

  v62 = a4;
  v55 = a3;
  sub_1DC089DA4(0, (unint64_t *)&qword_1EDB3FBF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC3228], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v5);
  v58 = (char *)&v55 - v6;
  v61 = sub_1DC409478();
  v7 = *(_QWORD *)(v61 - 8);
  MEMORY[0x1E0C80A78](v61);
  v9 = (char *)&v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1DC4094E4();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v55 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1DC409424();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v55 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_1DC40952C();
  v56 = *(_QWORD *)(v18 - 8);
  v57 = v18;
  *(_QWORD *)&v19 = MEMORY[0x1E0C80A78](v18).n128_u64[0];
  v21 = (char *)&v55 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = a1;
  objc_msgSend(a1, sel_setPreferredBehavioralStyle_, 1, v19);
  sub_1DC409520();
  sub_1DC40946C();
  v22 = *(void (**)(char *, _QWORD, uint64_t))(v15 + 104);
  v23 = v60;
  v22(v17, *MEMORY[0x1E0DC3068], v14);
  sub_1DC409430();
  v25 = v23[5];
  v24 = v23[6];
  __swift_project_boxed_opaque_existential_1(v23 + 2, v25);
  (*(void (**)(uint64_t))(*(_QWORD *)(v24 + 16) + 280))(v25);
  sub_1DC4094B4();
  v27 = v23[5];
  v26 = v23[6];
  __swift_project_boxed_opaque_existential_1(v23 + 2, v27);
  (*(void (**)(uint64_t))(*(_QWORD *)(v26 + 16) + 104))(v27);
  sub_1DC4094C0();
  (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v13, *MEMORY[0x1E0DC3190], v10);
  sub_1DC409418();
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E0DC30D0], v61);
  sub_1DC409490();
  v28 = (void (*)(_QWORD *, _QWORD))sub_1DC40940C();
  sub_1DC406EC8();
  v28(aBlock, 0);
  if ((v62 & 1) != 0)
  {
    sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FB00);
    v29 = (void *)sub_1DC4092F8();
    v30 = (void *)objc_opt_self();
    v31 = objc_msgSend(v30, sel_configurationWithFont_scale_, v29, 1);

    sub_1DC409400();
    if (qword_1F034ADA8 != -1)
      swift_once();
    v32 = (void *)qword_1F03688E0;
    v33 = (void *)sub_1DC4092F8();
    v34 = objc_msgSend(v30, sel_configurationWithFont_scale_, v33, 1);

    v35 = objc_msgSend(v32, sel_imageWithConfiguration_, v34);
    v37 = v23[5];
    v36 = v23[6];
    __swift_project_boxed_opaque_existential_1(v23 + 2, v37);
    v38 = (void *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)(v36 + 16) + 104))(v37);
    v39 = objc_msgSend(v35, sel_imageWithTintColor_renderingMode_, v38, 1);
    goto LABEL_8;
  }
  if (!v55)
  {
LABEL_9:
    v51 = v56;
    v50 = v57;
    v52 = v58;
    (*(void (**)(char *, char *, uint64_t))(v56 + 16))(v58, v21, v57);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v52, 0, 1, v50);
    v53 = v59;
    sub_1DC409544();
    aBlock[4] = sub_1DC1498C4;
    aBlock[5] = v23;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1DC149854;
    aBlock[3] = &block_descriptor;
    v54 = _Block_copy(aBlock);
    swift_retain_n();
    swift_release();
    objc_msgSend(v53, sel_setConfigurationUpdateHandler_, v54);
    _Block_release(v54);
    swift_release();
    (*(void (**)(char *, uint64_t))(v51 + 8))(v21, v50);
    return;
  }
  sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FB00);
  v40 = (void *)sub_1DC4092F8();
  v41 = (void *)objc_opt_self();
  v42 = objc_msgSend(v41, sel_configurationWithFont_scale_, v40, 1);

  sub_1DC409400();
  v43 = (void *)sub_1DC408A1C();
  v44 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v43);

  if (v44)
  {
    v45 = (void *)sub_1DC4092F8();
    v46 = objc_msgSend(v41, sel_configurationWithFont_scale_, v45, 1);

    v35 = objc_msgSend(v44, sel_imageWithConfiguration_, v46);
    v48 = v23[5];
    v47 = v23[6];
    __swift_project_boxed_opaque_existential_1(v23 + 2, v48);
    v38 = (void *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)(v47 + 16) + 104))(v48);
    v49 = objc_msgSend(v35, sel_imageWithTintColor_renderingMode_, v38, 1);

LABEL_8:
    sub_1DC409508();
    sub_1DC409448();
    sub_1DC409484();
    goto LABEL_9;
  }
  __break(1u);
}

void sub_1DC149408(void *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  _BYTE *v19;
  id v20;
  uint64_t v22;
  unsigned int (*v23)(_BYTE *, uint64_t, uint64_t);
  uint64_t v24;
  unsigned int (*v25)(_BYTE *, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(_BYTE *, _QWORD);
  id v31;
  void *v32;
  id v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(_BYTE *, _QWORD);
  id v40;
  void *v41;
  id v42;
  _BYTE v43[32];

  sub_1DC089DA4(0, (unint64_t *)&qword_1EDB3FBF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC3228], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v6 = &v43[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v7);
  v9 = &v43[-v8];
  MEMORY[0x1E0C80A78](v10);
  v12 = &v43[-v11];
  MEMORY[0x1E0C80A78](v13);
  v15 = &v43[-v14];
  *(_QWORD *)&v17 = MEMORY[0x1E0C80A78](v16).n128_u64[0];
  v19 = &v43[-v18];
  v20 = objc_msgSend(a1, sel_state, v17);
  if (v20 == (id)4 || v20 == (id)1)
  {
    sub_1DC409538();
    v22 = sub_1DC40952C();
    v23 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 48);
    if (v23(v19, 1, v22))
    {
      sub_1DC1498CC((uint64_t)v19, (uint64_t)v15);
      sub_1DC409544();
      sub_1DC149928((uint64_t)v19);
    }
    else
    {
      v27 = a2[5];
      v26 = a2[6];
      __swift_project_boxed_opaque_existential_1(a2 + 2, v27);
      (*(void (**)(uint64_t))(*(_QWORD *)(v26 + 16) + 288))(v27);
      sub_1DC4094B4();
      sub_1DC409544();
    }
    sub_1DC409538();
    if (v23(v12, 1, v22))
    {
      sub_1DC1498CC((uint64_t)v12, (uint64_t)v15);
      sub_1DC409544();
      sub_1DC149928((uint64_t)v12);
    }
    else
    {
      v29 = a2[5];
      v28 = a2[6];
      __swift_project_boxed_opaque_existential_1(a2 + 2, v29);
      (*(void (**)(uint64_t))(*(_QWORD *)(v28 + 16) + 288))(v29);
      v30 = (void (*)(_BYTE *, _QWORD))sub_1DC40940C();
      sub_1DC406ED4();
      v30(v43, 0);
      sub_1DC409544();
    }
    v31 = objc_msgSend(a1, sel_titleLabel);
    if (v31)
    {
      v32 = v31;
      objc_msgSend(v31, sel_setAlpha_, 0.5);

    }
    v33 = objc_msgSend(a1, sel_imageView);
    if (v33)
    {
      v34 = v33;
      objc_msgSend(v33, sel_setAlpha_, 0.5);
LABEL_26:

    }
  }
  else
  {
    sub_1DC409538();
    v24 = sub_1DC40952C();
    v25 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 48);
    if (v25(v9, 1, v24))
    {
      sub_1DC1498CC((uint64_t)v9, (uint64_t)v15);
      sub_1DC409544();
      sub_1DC149928((uint64_t)v9);
    }
    else
    {
      v36 = a2[5];
      v35 = a2[6];
      __swift_project_boxed_opaque_existential_1(a2 + 2, v36);
      (*(void (**)(uint64_t))(*(_QWORD *)(v35 + 16) + 280))(v36);
      sub_1DC4094B4();
      sub_1DC409544();
    }
    sub_1DC409538();
    if (v25(v6, 1, v24))
    {
      sub_1DC1498CC((uint64_t)v6, (uint64_t)v15);
      sub_1DC409544();
      sub_1DC149928((uint64_t)v6);
    }
    else
    {
      v38 = a2[5];
      v37 = a2[6];
      __swift_project_boxed_opaque_existential_1(a2 + 2, v38);
      (*(void (**)(uint64_t))(*(_QWORD *)(v37 + 16) + 280))(v38);
      v39 = (void (*)(_BYTE *, _QWORD))sub_1DC40940C();
      sub_1DC406ED4();
      v39(v43, 0);
      sub_1DC409544();
    }
    v40 = objc_msgSend(a1, sel_titleLabel);
    if (v40)
    {
      v41 = v40;
      objc_msgSend(v40, sel_setAlpha_, 1.0);

    }
    v42 = objc_msgSend(a1, sel_imageView);
    if (v42)
    {
      v34 = v42;
      objc_msgSend(v42, sel_setAlpha_, 1.0);
      goto LABEL_26;
    }
  }
}

void sub_1DC149854(uint64_t a1, void *a2)
{
  void (*v3)(void);
  id v4;

  v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3();
  swift_release();

}

uint64_t type metadata accessor for StockFeedEarningsViewStyler()
{
  return objc_opt_self();
}

void sub_1DC1498C4(void *a1)
{
  _QWORD *v1;

  sub_1DC149408(a1, v1);
}

uint64_t sub_1DC1498CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1DC089DA4(0, (unint64_t *)&qword_1EDB3FBF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC3228], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC149928(uint64_t a1)
{
  uint64_t v2;

  sub_1DC089DA4(0, (unint64_t *)&qword_1EDB3FBF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC3228], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_QWORD *sub_1DC14997C(_OWORD *a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  uint64_t v16;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = *((_OWORD *)a2 + 1);
    *a1 = *(_OWORD *)a2;
    a1[1] = v7;
    v8 = *((_OWORD *)a2 + 3);
    a1[2] = *((_OWORD *)a2 + 2);
    a1[3] = v8;
    v9 = *(int *)(a3 + 24);
    v10 = (char *)a1 + v9;
    v11 = (uint64_t)a2 + v9;
    v12 = sub_1DC4061C0();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
    v13 = *(int *)(a3 + 28);
    v14 = *(void **)((char *)a2 + v13);
    *(_QWORD *)((char *)v4 + v13) = v14;
    v15 = v14;
  }
  return v4;
}

void sub_1DC149A2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_1DC4061C0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);

}

_OWORD *sub_1DC149A80(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  v8 = *(int *)(a3 + 24);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_1DC4061C0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  v12 = *(int *)(a3 + 28);
  v13 = *(void **)((char *)a2 + v12);
  *(_QWORD *)((char *)a1 + v12) = v13;
  v14 = v13;
  return a1;
}

_QWORD *sub_1DC149B04(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  id v13;

  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  a1[7] = a2[7];
  v6 = *(int *)(a3 + 24);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1DC4061C0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = *(int *)(a3 + 28);
  v11 = *(void **)((char *)a2 + v10);
  v12 = *(void **)((char *)a1 + v10);
  *(_QWORD *)((char *)a1 + v10) = v11;
  v13 = v11;

  return a1;
}

_OWORD *sub_1DC149BC0(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  v8 = *(int *)(a3 + 24);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_1DC4061C0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 28)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 28));
  return a1;
}

_OWORD *sub_1DC149C40(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  v8 = *(int *)(a3 + 24);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_1DC4061C0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  v12 = *(int *)(a3 + 28);
  v13 = *(void **)((char *)a1 + v12);
  *(_QWORD *)((char *)a1 + v12) = *(_QWORD *)((char *)a2 + v12);

  return a1;
}

uint64_t sub_1DC149CC8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC149CD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1DC4061C0();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 24), a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 28));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_1DC149D54()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC149D60(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1DC4061C0();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + *(int *)(a4 + 24), a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 28)) = (a2 - 1);
  return result;
}

uint64_t sub_1DC149DDC()
{
  sub_1DC149E5C(&qword_1F034C340, (uint64_t)&unk_1DC40E5A0);
  return sub_1DC40625C();
}

uint64_t sub_1DC149E14()
{
  return sub_1DC149E5C(&qword_1F034C338, (uint64_t)&unk_1DC40E568);
}

uint64_t sub_1DC149E38()
{
  return sub_1DC149E5C(&qword_1F034C340, (uint64_t)&unk_1DC40E5A0);
}

uint64_t sub_1DC149E5C(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for StockSearchSectionHeaderViewLayoutAttributes();
    result = MEMORY[0x1DF0CAB8C](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1DC149E9C(void *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;

  v2 = v1;
  v4 = v1 + 2;
  v6 = v1[5];
  v5 = v1[6];
  __swift_project_boxed_opaque_existential_1(v4, v6);
  v7 = (void *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)(v5 + 16) + 72))(v6);
  objc_msgSend(a1, sel_setBackgroundColor_, v7);

  v8 = objc_msgSend(a1, sel_titleLabel);
  if (v8)
  {
    v9 = v8;
    v11 = v2[5];
    v10 = v2[6];
    __swift_project_boxed_opaque_existential_1(v4, v11);
    v12 = (id)(*(uint64_t (**)(uint64_t))(*(_QWORD *)(v10 + 16) + 72))(v11);
    objc_msgSend(v9, sel_setBackgroundColor_, v12);

  }
}

void sub_1DC149F90(void *a1)
{
  _QWORD *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  id v11;

  v3 = v1 + 2;
  v5 = v1[5];
  v4 = v1[6];
  __swift_project_boxed_opaque_existential_1(v3, v5);
  v6 = (void *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)(v4 + 16) + 408))(v5);
  objc_msgSend(a1, sel_setBackgroundColor_, v6);

  v7 = objc_msgSend(a1, sel_titleLabel);
  if (v7)
  {
    v8 = v7;
    v9 = objc_msgSend((id)objc_opt_self(), sel_clearColor);
    objc_msgSend(v8, sel_setBackgroundColor_, v9);

  }
  v10 = objc_msgSend(a1, sel_layer);
  objc_msgSend(v10, sel_setCornerCurve_, *MEMORY[0x1E0CD2A68]);

  v11 = objc_msgSend(a1, sel_layer);
  objc_msgSend(v11, sel_setCornerRadius_, 8.0);

}

uint64_t type metadata accessor for DateRangePickerStyler()
{
  return objc_opt_self();
}

void sub_1DC14A0DC(void *a1)
{
  sub_1DC149E9C(a1);
}

void sub_1DC14A0FC(void *a1)
{
  sub_1DC149F90(a1);
}

char *sub_1DC14A11C(double a1, double a2, double a3, double a4)
{
  char *v4;
  objc_class *ObjectType;
  uint64_t v10;
  id v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  void *v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  id v21;
  objc_super v23;

  ObjectType = (objc_class *)swift_getObjectType();
  v10 = OBJC_IVAR____TtC8StocksUI17SectionHeaderView_backgroundView;
  v11 = objc_allocWithZone(MEMORY[0x1E0DC3F10]);
  v12 = v4;
  *(_QWORD *)&v4[v10] = objc_msgSend(v11, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v13 = OBJC_IVAR____TtC8StocksUI17SectionHeaderView_titleLabel;
  *(_QWORD *)&v12[v13] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);

  v23.receiver = v12;
  v23.super_class = ObjectType;
  v14 = (char *)objc_msgSendSuper2(&v23, sel_initWithFrame_, a1, a2, a3, a4);
  v15 = *(_QWORD *)&v14[OBJC_IVAR____TtC8StocksUI17SectionHeaderView_backgroundView];
  v16 = v14;
  objc_msgSend(v16, sel_addSubview_, v15);
  v17 = *(void **)&v16[OBJC_IVAR____TtC8StocksUI17SectionHeaderView_titleLabel];
  objc_msgSend(v16, sel_addSubview_, v17);
  v18 = (unint64_t)objc_msgSend(v17, sel_accessibilityTraits);
  v19 = v18;
  v20 = *MEMORY[0x1E0DC4670];
  if (v18)
  {
    if ((v20 & ~v18) == 0)
      goto LABEL_7;
  }
  else if (!v20)
  {
    v19 = 0;
    goto LABEL_7;
  }
  v19 = v20 | v18;
LABEL_7:
  objc_msgSend(v17, sel_setAccessibilityTraits_, v19);
  v21 = v17;
  objc_msgSend(v21, sel_setNumberOfLines_, 0);

  return v16;
}

void sub_1DC14A3FC()
{
  sub_1DC125494(&qword_1EDB2F878, (uint64_t)&unk_1DC40E6EC);
  JUMPOUT(0x1DF0C7418);
}

uint64_t sub_1DC14A434(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;

  sub_1DC14D580();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v6 = result;
    sub_1DC14D61C(a1, (uint64_t)v4);
    v7 = sub_1DC407EAC();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v4, 1, v7) == 1)
    {
      v8 = MEMORY[0x1DF0CAD78](v6 + 16);
      if (v8)
      {
        v9 = v8;
        v10 = MEMORY[0x1DF0CAD78](v8 + 16);
        if (v10)
        {
          v11 = (char *)v10;
          swift_retain();
          sub_1DC14D880(v9, v11);
          swift_release_n();
          swift_unknownObjectRelease();
        }
        else
        {
          swift_release();
        }
        return swift_unknownObjectRelease();
      }
      else
      {
        return swift_release();
      }
    }
    else
    {
      swift_release();
      return sub_1DC0926D8((uint64_t)v4, (uint64_t (*)(_QWORD))sub_1DC14D580);
    }
  }
  return result;
}

void sub_1DC14A57C(uint64_t a1, void *a2, int a3, double a4)
{
  _QWORD *v4;
  _QWORD *v5;
  void (*v8)(unint64_t, char *, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  char *v28;
  void (*v29)(char *, uint64_t, uint64_t, __n128);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  void *v37;
  id v38;
  void *v39;
  void *v40;
  void (*v41)(char *, char *, uint64_t);
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  unint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  int v61;
  uint64_t v62;
  void *v63;
  void (*v64)(unint64_t, char *, uint64_t);
  char *v65;

  v5 = v4;
  v61 = a3;
  v8 = (void (*)(unint64_t, char *, uint64_t))*v4;
  v63 = a2;
  v64 = v8;
  v9 = sub_1DC4038E0();
  v58 = *(_QWORD *)(v9 - 8);
  v59 = v9;
  MEMORY[0x1E0C80A78](v9);
  v53 = v10;
  v54 = (char *)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v55 = (char *)&v53 - v12;
  v13 = sub_1DC407EAC();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v56 = v15;
  v57 = (char *)&v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v65 = (char *)&v53 - v17;
  v18 = sub_1DC4002BC();
  v19 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DAE0F8];
  v20 = *(_QWORD *)(v18 - 8);
  v21 = *(_QWORD *)(v20 + 64);
  MEMORY[0x1E0C80A78](v18);
  v60 = (char *)&v53 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC14D580();
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)&v53 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC089DA4(0, (unint64_t *)&qword_1EDB28B80, v19, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v26 = MEMORY[0x1E0C80A78](v25);
  v28 = (char *)&v53 - v27;
  v29 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v20 + 16);
  v62 = a1;
  v29((char *)&v53 - v27, a1, v18, v26);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v28, 0, 1, v18);
  v30 = (uint64_t)v5 + OBJC_IVAR____TtC8StocksUI20StockChartInteractor_activeChartRange;
  swift_beginAccess();
  sub_1DC14E600((uint64_t)v28, v30, (unint64_t *)&qword_1EDB28B80, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAE0F8]);
  swift_endAccess();
  sub_1DC407F3C();
  v31 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v24, 1, v13);
  if ((_DWORD)v31 == 1)
  {
    MEMORY[0x1E0C80A78](v31);
    v32 = v62;
    *(&v53 - 2) = (uint64_t)v5;
    *(&v53 - 1) = v32;
    sub_1DC14DD10();
    sub_1DC402E0C();
    v33 = v60;
    ((void (*)(char *, uint64_t, uint64_t))v29)(v60, v32, v18);
    v34 = (*(unsigned __int8 *)(v20 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
    v35 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v20 + 32))(v35 + v34, v33, v18);
    v36 = v35 + ((v21 + v34 + 7) & 0xFFFFFFFFFFFFFFF8);
    v37 = v63;
    *(_QWORD *)v36 = v63;
    *(double *)(v36 + 8) = a4;
    v38 = v37;
    v39 = (void *)sub_1DC402C80();
    sub_1DC402D1C();
    swift_release();
    swift_release();

    swift_allocObject();
    swift_weakInit();
    swift_retain();
    v40 = (void *)sub_1DC402C80();
    sub_1DC402D34();
    swift_release();
    swift_release();
    swift_release_n();

  }
  else
  {
    v41 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
    v42 = v65;
    v41(v65, v24, v13);
    if ((v61 & 1) != 0)
    {
      (*(void (**)(char *, uint64_t))(v14 + 8))(v42, v13);
    }
    else
    {
      v44 = v58;
      v43 = v59;
      v45 = v55;
      (*(void (**)(char *, _QWORD, uint64_t))(v58 + 104))(v55, *MEMORY[0x1E0DADBC0], v59);
      v64 = (void (*)(unint64_t, char *, uint64_t))v41;
      v46 = v54;
      (*(void (**)(char *, char *, uint64_t))(v44 + 16))(v54, v45, v43);
      v47 = (*(unsigned __int8 *)(v44 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80);
      v48 = swift_allocObject();
      (*(void (**)(unint64_t, char *, uint64_t))(v44 + 32))(v48 + v47, v46, v43);
      sub_1DC401828();
      swift_release();
      (*(void (**)(char *, uint64_t))(v44 + 8))(v45, v43);
      v49 = v57;
      v50 = v65;
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v57, v65, v13);
      v51 = (*(unsigned __int8 *)(v14 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
      v52 = swift_allocObject();
      *(_QWORD *)(v52 + 16) = v5;
      v64(v52 + v51, v49, v13);
      swift_retain();
      sub_1DC402E3C();
      swift_release();
      (*(void (**)(char *, uint64_t))(v14 + 8))(v50, v13);
    }
  }
}

uint64_t sub_1DC14AAB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v14;

  v4 = sub_1DC4010E4();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x1E0C80A78](v4);
  v7 = *(_QWORD *)(a1 + 32);
  sub_1DC26CEB8(a2);
  sub_1DC089DA4(0, &qword_1EDB29658, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAE458], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  sub_1DC402DA0();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v7 + OBJC_IVAR____TtC8StocksUI21StockChartDataManager_stock, v4);
  v8 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v9 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v9 + v8, (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  v10 = (void *)sub_1DC402C80();
  sub_1DC089DA4(0, &qword_1EDB28DC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF040], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  sub_1DC402D04();
  swift_release();
  swift_release();

  v11 = (void *)sub_1DC402C80();
  v12 = sub_1DC402C74();
  swift_release();
  swift_release();

  return v12;
}

uint64_t sub_1DC14AC68(uint64_t a1, _QWORD *a2, uint64_t a3, void *a4, double a5)
{
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t (*v22)(uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, char *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __n128 v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t (*v45)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  int *v53;
  void (*v54)(char *, unint64_t, uint64_t);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void (*v63)(char *, uint64_t, uint64_t);
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  uint64_t v74;
  unint64_t v75;
  char *v76;
  unint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  char *v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  unint64_t v91;
  uint64_t v92;
  _QWORD v94[2];
  char *v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  void (*v99)(char *, char *, uint64_t);
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  void (*v107)(char *, uint64_t, uint64_t);
  _QWORD *v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  void (*v112)(char *, uint64_t, uint64_t, __n128);
  uint64_t v113;
  uint64_t v114;
  void (*v115)(char *, char *, uint64_t);
  char *v116;
  _QWORD *v117;
  void *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;

  v117 = a2;
  v118 = a4;
  v120 = a3;
  v119 = sub_1DC4002BC();
  v121 = *(_QWORD *)(v119 - 8);
  MEMORY[0x1E0C80A78](v119);
  v111 = v7;
  v116 = (char *)v94 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1DC089DA4(0, (unint64_t *)&unk_1EDB28D90, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAEFA8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v9);
  v103 = (char *)v94 - v10;
  v98 = sub_1DC4038E0();
  v97 = *(_QWORD *)(v98 - 8);
  MEMORY[0x1E0C80A78](v98);
  v95 = (char *)v94 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v94[1] = v11;
  MEMORY[0x1E0C80A78](v12);
  v96 = (char *)v94 - v13;
  v113 = sub_1DC400220();
  v108 = *(_QWORD **)(v113 - 8);
  MEMORY[0x1E0C80A78](v113);
  v107 = (void (*)(char *, uint64_t, uint64_t))((char *)v94 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1DC0EF7DC();
  MEMORY[0x1E0C80A78](v15);
  v105 = (char *)v94 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v106 = type metadata accessor for StockChartDescriptor();
  MEMORY[0x1E0C80A78](v106);
  v123 = (char *)v94 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC14DD10();
  v19 = v18;
  MEMORY[0x1E0C80A78](v18);
  v21 = (char *)v94 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF040];
  sub_1DC089DA4(0, &qword_1EDB28DC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF040], v8);
  v101 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  v110 = (uint64_t)v94 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v102 = v24;
  MEMORY[0x1E0C80A78](v25);
  v27 = (void (*)(char *, char *, uint64_t))((char *)v94 - v26);
  v28 = sub_1DC400F7C();
  v29 = *(_QWORD *)(v28 - 8);
  v122 = v28;
  MEMORY[0x1E0C80A78](v28);
  v109 = (char *)v94 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v100 = v30;
  v32 = MEMORY[0x1E0C80A78](v31);
  v34 = (char *)v94 - v33;
  v35 = *(int *)(v19 + 48);
  v36 = (uint64_t)&v21[v35];
  v37 = a1;
  v38 = a1 + v35;
  v112 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v29 + 16);
  v112(v21, v37, v28, v32);
  sub_1DC0EDD64(v38, v36, &qword_1EDB28DC0, v22);
  v114 = v29;
  v99 = *(void (**)(char *, char *, uint64_t))(v29 + 32);
  v99(v34, v21, v28);
  sub_1DC14E418(v36, (uint64_t)v27);
  v39 = (_QWORD *)*__swift_project_boxed_opaque_existential_1(v117 + 7, v117[10]);
  v115 = v27;
  v40 = v120;
  v41 = sub_1DC2F0334((uint64_t)v34, v27, v120);
  v104 = v41;
  v42 = v39[5];
  v43 = v39[6];
  __swift_project_boxed_opaque_existential_1(v39 + 2, v42);
  v44 = (uint64_t)v105;
  sub_1DC400F70();
  v45 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v43 + 8);
  v46 = v43;
  v47 = v117;
  v48 = v45(v41, v44, v42, v46);
  sub_1DC0926D8(v44, (uint64_t (*)(_QWORD))sub_1DC0EF7DC);
  v49 = (uint64_t)v107;
  sub_1DC400214();
  v50 = v122;
  v51 = sub_1DC2EC294(v48, v40, v49);
  ((void (*)(uint64_t, uint64_t))v108[1])(v49, v113);
  v52 = v123;
  v113 = (uint64_t)v34;
  ((void (*)(char *, char *, uint64_t))v112)(v123, v34, v50);
  v53 = (int *)v106;
  v54 = *(void (**)(char *, unint64_t, uint64_t))(v121 + 16);
  v54(&v52[*(int *)(v106 + 24)], v40, v119);
  *(_QWORD *)&v52[v53[5]] = v104;
  *(_QWORD *)&v52[v53[7]] = v48;
  *(_QWORD *)&v52[v53[8]] = v51;
  v55 = v47[15];
  v108 = v47 + 12;
  __swift_project_boxed_opaque_existential_1(v47 + 12, v55);
  v56 = sub_1DC257CA8(v52, v118, a5);
  v107 = (void (*)(char *, uint64_t, uint64_t))v54;
  if (v56)
  {
    v57 = v56;
    v58 = (uint64_t)v47 + OBJC_IVAR____TtC8StocksUI20StockChartInteractor_lastKnownQoute;
    swift_beginAccess();
    v59 = (uint64_t)v115;
    sub_1DC14E5A4((uint64_t)v115, v58);
    swift_endAccess();
    v60 = *__swift_project_boxed_opaque_existential_1(v47 + 17, v47[20]);
    v106 = v57;
    v61 = (uint64_t)v103;
    v63 = (void (*)(char *, uint64_t, uint64_t))v112;
    v62 = v113;
    ((void (*)(char *, uint64_t, uint64_t))v112)(v103, v113, v50);
    v64 = v114;
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v114 + 56))(v61, 0, 1, v50);
    v65 = v60 + OBJC_IVAR____TtC8StocksUI33StockChartCalloutViewModelFactory_chart;
    swift_beginAccess();
    sub_1DC14E600(v61, v65, (unint64_t *)&unk_1EDB28D90, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAEFA8]);
    swift_endAccess();
    v66 = v50;
    v67 = v119;
    v54(v116, v120, v119);
    sub_1DC0EDD64(v59, v110, &qword_1EDB28DC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF040]);
    v63(v109, v62, v66);
    v68 = v121;
    v69 = (*(unsigned __int8 *)(v121 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v121 + 80);
    v70 = (v111 + v69 + 7) & 0xFFFFFFFFFFFFFFF8;
    v71 = (*(unsigned __int8 *)(v101 + 80) + v70 + 8) & ~(unint64_t)*(unsigned __int8 *)(v101 + 80);
    v72 = (v102 + *(unsigned __int8 *)(v64 + 80) + v71) & ~(unint64_t)*(unsigned __int8 *)(v64 + 80);
    v73 = (v100 + v72 + 7) & 0xFFFFFFFFFFFFFFF8;
    v74 = swift_allocObject();
    v75 = v74 + v69;
    v76 = v116;
    (*(void (**)(unint64_t, char *, uint64_t))(v68 + 32))(v75, v116, v67);
    *(_QWORD *)(v74 + v70) = v47;
    sub_1DC14E418(v110, v74 + v71);
    v77 = v74 + v72;
    v78 = v106;
    v99((char *)v77, v109, v122);
    *(_QWORD *)(v74 + v73) = v78;
    swift_retain();
    swift_retain();
    sub_1DC402E3C();
    swift_release();
    v79 = v76;
  }
  else
  {
    v80 = v97;
    v81 = v96;
    v82 = v98;
    (*(void (**)(char *, _QWORD, uint64_t))(v97 + 104))(v96, *MEMORY[0x1E0DADBB8], v98);
    v83 = v95;
    (*(void (**)(char *, char *, uint64_t))(v80 + 16))(v95, v81, v82);
    v84 = (*(unsigned __int8 *)(v80 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v80 + 80);
    v85 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v80 + 32))(v85 + v84, v83, v82);
    sub_1DC401828();
    swift_release();
    (*(void (**)(char *, uint64_t))(v80 + 8))(v81, v82);
    swift_retain();
    sub_1DC402E3C();
    v79 = v116;
  }
  swift_release();
  __swift_project_boxed_opaque_existential_1(v108, v47[15]);
  v86 = sub_1DC258AC0((uint64_t)v123, (uint64_t)v118);
  if (v86)
  {
    v87 = v86;
    v88 = v119;
    v107(v79, v120, v119);
    v89 = v121;
    v90 = (*(unsigned __int8 *)(v121 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v121 + 80);
    v91 = (v111 + v90 + 7) & 0xFFFFFFFFFFFFFFF8;
    v92 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v89 + 32))(v92 + v90, v79, v88);
    *(_QWORD *)(v92 + v91) = v47;
    *(_QWORD *)(v92 + ((v91 + 15) & 0xFFFFFFFFFFFFFFF8)) = v87;
    swift_retain();
    swift_retain();
    sub_1DC402E3C();
    swift_release();
  }
  else
  {
    swift_retain();
    sub_1DC402E3C();
  }
  swift_release();
  sub_1DC0926D8((uint64_t)v123, (uint64_t (*)(_QWORD))type metadata accessor for StockChartDescriptor);
  sub_1DC0B091C((uint64_t)v115, &qword_1EDB28DC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF040]);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v114 + 8))(v113, v122);
}

uint64_t sub_1DC14B584(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  char *v21;
  void (*v22)(char *, uint64_t, uint64_t, __n128);
  uint64_t v23;
  uint64_t v24;
  unsigned int (*v25)(uint64_t, uint64_t, uint64_t);
  char *v26;
  uint64_t result;
  uint64_t (*v28)(uint64_t);
  char v29;
  void (*v30)(char *, uint64_t);
  unsigned __int8 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;

  v34 = a5;
  v36 = a3;
  v37 = a4;
  v7 = sub_1DC4002BC();
  v8 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DAE0F8];
  v9 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v39 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC14E888();
  v12 = v11;
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC089DA4(0, (unint64_t *)&qword_1EDB28B80, v8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x1E0C80A78](v18);
  v21 = (char *)&v33 - v20;
  v22 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v9 + 16);
  v35 = a1;
  v22((char *)&v33 - v20, a1, v7, v19);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v21, 0, 1, v7);
  v38 = a2;
  v23 = a2 + OBJC_IVAR____TtC8StocksUI20StockChartInteractor_activeChartRange;
  swift_beginAccess();
  v24 = (uint64_t)&v14[*(int *)(v12 + 48)];
  sub_1DC0EDD64((uint64_t)v21, (uint64_t)v14, (unint64_t *)&qword_1EDB28B80, v8);
  sub_1DC0EDD64(v23, v24, (unint64_t *)&qword_1EDB28B80, v8);
  v25 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v25((uint64_t)v14, 1, v7) != 1)
  {
    v26 = v39;
    sub_1DC0EDD64((uint64_t)v14, (uint64_t)v17, (unint64_t *)&qword_1EDB28B80, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAE0F8]);
    if (v25(v24, 1, v7) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 32))(v26, v24, v7);
      v28 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DAE0F8];
      sub_1DC080808(&qword_1EDB28B70, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAE0F8], MEMORY[0x1E0DAE108]);
      v29 = sub_1DC4089F8();
      v30 = *(void (**)(char *, uint64_t))(v9 + 8);
      v30(v26, v7);
      sub_1DC0B091C((uint64_t)v21, (unint64_t *)&qword_1EDB28B80, v28);
      v30(v17, v7);
      result = sub_1DC0B091C((uint64_t)v14, (unint64_t *)&qword_1EDB28B80, v28);
      if ((v29 & 1) == 0)
        return result;
      goto LABEL_8;
    }
    sub_1DC0B091C((uint64_t)v21, (unint64_t *)&qword_1EDB28B80, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAE0F8]);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v17, v7);
    return sub_1DC0926D8((uint64_t)v14, (uint64_t (*)(_QWORD))sub_1DC14E888);
  }
  sub_1DC0B091C((uint64_t)v21, (unint64_t *)&qword_1EDB28B80, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAE0F8]);
  if (v25(v24, 1, v7) != 1)
    return sub_1DC0926D8((uint64_t)v14, (uint64_t (*)(_QWORD))sub_1DC14E888);
  sub_1DC0B091C((uint64_t)v14, (unint64_t *)&qword_1EDB28B80, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAE0F8]);
LABEL_8:
  v31 = sub_1DC14B908(v35, v36);
  result = MEMORY[0x1DF0CAD78](v38 + 16);
  if (result)
  {
    v32 = MEMORY[0x1DF0CAD78](result + 16);
    if (v32)
    {
      sub_1DC14DEC4(v34, v31, v32);
      swift_unknownObjectRelease();
    }
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1DC14B908(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  char v16;
  char v17;
  uint64_t v19;

  sub_1DC089DA4(0, &qword_1EDB28DC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF040], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v19 - v5;
  v7 = sub_1DC4002BC();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v8 + 16))(v11, a1, v7, v9);
  LODWORD(a1) = (*(uint64_t (**)(char *, uint64_t))(v8 + 88))(v11, v7);
  v12 = *MEMORY[0x1E0DAE0B0];
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  if ((_DWORD)a1 == v12)
  {
    sub_1DC0EDD64(a2, (uint64_t)v6, &qword_1EDB28DC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF040]);
    v13 = sub_1DC401030();
    v14 = *(_QWORD *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v6, 1, v13) == 1)
    {
      sub_1DC0B091C((uint64_t)v6, &qword_1EDB28DC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF040]);
    }
    else
    {
      v15 = COERCE_DOUBLE(sub_1DC400F88());
      v17 = v16;
      (*(void (**)(char *, uint64_t))(v14 + 8))(v6, v13);
      if ((v17 & 1) == 0)
        return v15 < 0.0;
    }
  }
  return sub_1DC20F0C4();
}

uint64_t sub_1DC14BABC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t);
  void *v14;
  void *v15;
  objc_class *v16;
  char *v17;
  id v18;
  void (*v19)(char *, uint64_t);
  id v20;
  id v21;
  uint64_t v22;
  id v23;
  objc_super v24;

  v2 = sub_1DC407EAC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v22 - v8;
  result = MEMORY[0x1DF0CAD78](a1 + 16, v7);
  if (result)
  {
    v11 = result;
    if (qword_1F034B1C0 != -1)
      swift_once();
    v12 = __swift_project_value_buffer(v2, (uint64_t)qword_1F0368D70);
    v13 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    v13(v9, v12, v2);
    result = MEMORY[0x1DF0CAD78](v11 + 16);
    if (result)
    {
      v14 = *(void **)(result + OBJC_IVAR____TtC8StocksUI24StockChartViewController_stateMachine);
      if (v14)
      {
        v23 = v14;
        v15 = (void *)sub_1DC408A1C();
        v13(v5, (uint64_t)v9, v2);
        v16 = (objc_class *)type metadata accessor for StockChartViewController.ErrorContext(0);
        v17 = (char *)objc_allocWithZone(v16);
        v13(&v17[OBJC_IVAR____TtCC8StocksUI24StockChartViewControllerP33_E483C2B618A7CE6B48867B145DEE9A5212ErrorContext_model], (uint64_t)v5, v2);
        v24.receiver = v17;
        v24.super_class = v16;
        v18 = objc_msgSendSuper2(&v24, sel_init);
        v19 = *(void (**)(char *, uint64_t))(v3 + 8);
        v19(v5, v2);
        v20 = v23;
        v21 = objc_msgSend(v23, sel_fireEventWithName_withContext_, v15, v18);
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();

        return ((uint64_t (*)(char *, uint64_t))v19)(v9, v2);
      }
      else
      {
        __break(1u);
      }
    }
    else
    {
      swift_unknownObjectRelease();
      return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v9, v2);
    }
  }
  return result;
}

uint64_t sub_1DC14BCBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int (*v22)(uint64_t, uint64_t, uint64_t);
  uint64_t result;
  char *v24;
  uint64_t (*v25)(uint64_t);
  char v26;
  void (*v27)(char *, uint64_t);
  char *v28;
  uint64_t v29;
  uint64_t v30;

  v29 = a3;
  v5 = sub_1DC4002BC();
  v6 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DAE0F8];
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v28 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC14E888();
  v10 = v9;
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC089DA4(0, (unint64_t *)&qword_1EDB28B80, v6, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v28 - v18;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v7 + 16))((char *)&v28 - v18, a1, v5, v17);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v19, 0, 1, v5);
  v30 = a2;
  v20 = a2 + OBJC_IVAR____TtC8StocksUI20StockChartInteractor_activeChartRange;
  swift_beginAccess();
  v21 = (uint64_t)&v12[*(int *)(v10 + 48)];
  sub_1DC0EDD64((uint64_t)v19, (uint64_t)v12, (unint64_t *)&qword_1EDB28B80, v6);
  sub_1DC0EDD64(v20, v21, (unint64_t *)&qword_1EDB28B80, v6);
  v22 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  if (v22((uint64_t)v12, 1, v5) != 1)
  {
    sub_1DC0EDD64((uint64_t)v12, (uint64_t)v15, (unint64_t *)&qword_1EDB28B80, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAE0F8]);
    if (v22(v21, 1, v5) != 1)
    {
      v24 = v28;
      (*(void (**)(char *, uint64_t, uint64_t))(v7 + 32))(v28, v21, v5);
      v25 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DAE0F8];
      sub_1DC080808(&qword_1EDB28B70, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAE0F8], MEMORY[0x1E0DAE108]);
      v26 = sub_1DC4089F8();
      v27 = *(void (**)(char *, uint64_t))(v7 + 8);
      v27(v24, v5);
      sub_1DC0B091C((uint64_t)v19, (unint64_t *)&qword_1EDB28B80, v25);
      v27(v15, v5);
      result = sub_1DC0B091C((uint64_t)v12, (unint64_t *)&qword_1EDB28B80, v25);
      if ((v26 & 1) == 0)
        return result;
      goto LABEL_8;
    }
    sub_1DC0B091C((uint64_t)v19, (unint64_t *)&qword_1EDB28B80, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAE0F8]);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v15, v5);
    return sub_1DC0926D8((uint64_t)v12, (uint64_t (*)(_QWORD))sub_1DC14E888);
  }
  sub_1DC0B091C((uint64_t)v19, (unint64_t *)&qword_1EDB28B80, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAE0F8]);
  if (v22(v21, 1, v5) != 1)
    return sub_1DC0926D8((uint64_t)v12, (uint64_t (*)(_QWORD))sub_1DC14E888);
  sub_1DC0B091C((uint64_t)v12, (unint64_t *)&qword_1EDB28B80, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAE0F8]);
LABEL_8:
  result = MEMORY[0x1DF0CAD78](v30 + 16);
  if (result)
  {
    sub_1DC14E118(v29, result);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1DC14C004(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x1DF0CAD78](a1 + 16);
  if (result)
  {
    if (MEMORY[0x1DF0CAD78](result + 16))
    {
      sub_1DC408764();
      swift_unknownObjectRelease();
    }
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1DC14C078(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  void *v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t);
  uint64_t v19;
  char *v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;

  v2 = sub_1DC4038E0();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  MEMORY[0x1E0C80A78](v2);
  v24 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v23 - v6;
  sub_1DC089DA4(0, &qword_1EDB28DC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF040], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v23 - v9;
  sub_1DC408FC8();
  sub_1DC0E7FF0();
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1DC40DC10;
  v26 = 0;
  v27 = 0xE000000000000000;
  v25 = a1;
  sub_1DC0A3390(0, (unint64_t *)&qword_1EDB400E0);
  sub_1DC409808();
  v12 = v26;
  v13 = v27;
  *(_QWORD *)(v11 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v11 + 64) = sub_1DC0E7FAC();
  *(_QWORD *)(v11 + 32) = v12;
  *(_QWORD *)(v11 + 40) = v13;
  sub_1DC09BDF8();
  v14 = (void *)sub_1DC409580();
  sub_1DC403F28();
  swift_bridgeObjectRelease();

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v16 = result;
    v17 = sub_1DC401030();
    v18 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF040];
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v10, 1, 1, v17);
    v19 = v16 + OBJC_IVAR____TtC8StocksUI20StockChartInteractor_lastKnownQoute;
    swift_beginAccess();
    sub_1DC14E600((uint64_t)v10, v19, &qword_1EDB28DC0, v18);
    swift_endAccess();
    (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v7, *MEMORY[0x1E0DADBB8], v2);
    v20 = v24;
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v24, v7, v2);
    v21 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
    v22 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v22 + v21, v20, v2);
    sub_1DC401828();
    swift_release();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v7, v2);
    swift_retain();
    sub_1DC402E3C();
    return swift_release_n();
  }
  return result;
}

uint64_t sub_1DC14C384(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v1 = a1 + 16;
  v2 = MEMORY[0x1DF0CAD78](a1 + 16);
  if (v2)
  {
    v3 = v2;
    if (qword_1F034B1C0 != -1)
      swift_once();
    v4 = sub_1DC407EAC();
    v5 = __swift_project_value_buffer(v4, (uint64_t)qword_1F0368D70);
    sub_1DC14E2B0(v5, v3);
    swift_unknownObjectRelease();
  }
  result = MEMORY[0x1DF0CAD78](v1);
  if (result)
  {
    if (MEMORY[0x1DF0CAD78](result + 16))
    {
      sub_1DC408764();
      swift_unknownObjectRelease();
    }
    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_1DC14C458(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  void *v13;
  void (*v14)(char *, uint64_t, uint64_t);
  objc_class *v15;
  char *v16;
  id v17;
  id v18;
  objc_super v19;

  v4 = sub_1DC407EAC();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1DF0CAD78](a1 + 16, v6);
  if (v9)
  {
    v10 = MEMORY[0x1DF0CAD78](v9 + 16);
    if (v10)
    {
      v11 = *(void **)(v10 + OBJC_IVAR____TtC8StocksUI24StockChartViewController_stateMachine);
      if (v11)
      {
        v12 = v11;
        v13 = (void *)sub_1DC408A1C();
        v14 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
        v14(v8, a2, v4);
        v15 = (objc_class *)type metadata accessor for StockChartViewController.ErrorContext(0);
        v16 = (char *)objc_allocWithZone(v15);
        v14(&v16[OBJC_IVAR____TtCC8StocksUI24StockChartViewControllerP33_E483C2B618A7CE6B48867B145DEE9A5212ErrorContext_model], (uint64_t)v8, v4);
        v19.receiver = v16;
        v19.super_class = v15;
        v17 = objc_msgSendSuper2(&v19, sel_init);
        (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
        v18 = objc_msgSend(v12, sel_fireEventWithName_withContext_, v13, v17);
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();

      }
      else
      {
        __break(1u);
      }
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
}

void sub_1DC14C5FC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void *v9;
  double v10;
  id v11;
  uint64_t v12;

  sub_1DC089DA4(0, (unint64_t *)&qword_1EDB28B80, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAE0F8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v12 - v2;
  v4 = sub_1DC4002BC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(v0[22] + 72))
  {
    *((_BYTE *)v0 + OBJC_IVAR____TtC8StocksUI20StockChartInteractor_needRefresh) = 1;
  }
  else
  {
    v8 = (uint64_t)v0 + OBJC_IVAR____TtC8StocksUI20StockChartInteractor_activeChartRange;
    swift_beginAccess();
    sub_1DC0EDD64(v8, (uint64_t)v3, (unint64_t *)&qword_1EDB28B80, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAE0F8]);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
    {
      sub_1DC0B091C((uint64_t)v3, (unint64_t *)&qword_1EDB28B80, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAE0F8]);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v3, v4);
      v9 = (void *)v0[24];
      if (v9)
      {
        v10 = *((double *)v0 + 25);
        v11 = v9;
        sub_1DC14A57C((uint64_t)v7, v11, 0, v10);

      }
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    }
  }
}

uint64_t sub_1DC14C798()
{
  uint64_t v0;

  sub_1DC148A20(v0 + 16);
  swift_unknownObjectRelease();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  __swift_destroy_boxed_opaque_existential_1(v0 + 136);
  swift_release();

  sub_1DC0B091C(v0 + OBJC_IVAR____TtC8StocksUI20StockChartInteractor_activeChartRange, (unint64_t *)&qword_1EDB28B80, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAE0F8]);
  sub_1DC0B091C(v0 + OBJC_IVAR____TtC8StocksUI20StockChartInteractor_lastKnownQoute, &qword_1EDB28DC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF040]);
  return v0;
}

uint64_t sub_1DC14C834()
{
  sub_1DC14C798();
  return swift_deallocClassInstance();
}

uint64_t sub_1DC14C858()
{
  return type metadata accessor for StockChartInteractor();
}

uint64_t type metadata accessor for StockChartInteractor()
{
  uint64_t result;

  result = qword_1EDB31D58;
  if (!qword_1EDB31D58)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1DC14C89C()
{
  unint64_t v0;
  unint64_t v1;

  sub_1DC089DA4(319, (unint64_t *)&qword_1EDB28B80, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAE0F8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  if (v0 <= 0x3F)
  {
    sub_1DC089DA4(319, &qword_1EDB28DC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF040], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

uint64_t sub_1DC14C9A4()
{
  return sub_1DC4013B4();
}

uint64_t sub_1DC14C9B0()
{
  return sub_1DC4013CC();
}

uint64_t sub_1DC14C9BC()
{
  return sub_1DC4013C0();
}

id sub_1DC14C9C4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  id result;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  id v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  _QWORD v55[4];

  v2 = v1;
  v51 = a1;
  v54 = sub_1DC400F7C();
  v3 = *(_QWORD *)(v54 - 8);
  MEMORY[0x1E0C80A78](v54);
  v53 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1DC089DA4(0, (unint64_t *)&unk_1EDB28B30, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1470], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v48 - v7;
  v50 = type metadata accessor for StockChartCalloutViewModel(0);
  MEMORY[0x1E0C80A78](v50);
  v49 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v52 = (uint64_t)&v48 - v11;
  v12 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DAE0F8];
  sub_1DC089DA4(0, (unint64_t *)&qword_1EDB28B80, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAE0F8], v5);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v48 - v14;
  v16 = sub_1DC4002BC();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v48 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = v2 + OBJC_IVAR____TtC8StocksUI20StockChartInteractor_activeChartRange;
  swift_beginAccess();
  sub_1DC0EDD64(v20, (uint64_t)v15, (unint64_t *)&qword_1EDB28B80, v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
    return (id)sub_1DC0B091C((uint64_t)v15, (unint64_t *)&qword_1EDB28B80, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAE0F8]);
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v19, v15, v16);
  v22 = *__swift_project_boxed_opaque_existential_1((_QWORD *)(v2 + 136), *(_QWORD *)(v2 + 160))
      + OBJC_IVAR____TtC8StocksUI33StockChartCalloutViewModelFactory_chart;
  swift_beginAccess();
  v23 = v54;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v22, 1, v54))
  {
    v24 = sub_1DC400220();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v8, 1, 1, v24);
LABEL_6:
    sub_1DC0B091C((uint64_t)v8, (unint64_t *)&unk_1EDB28B30, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1470]);
    return (id)(*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  }
  v25 = v53;
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v53, v22, v23);
  sub_1DC400EEC();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v25, v23);
  v26 = sub_1DC400220();
  v27 = *(_QWORD *)(v26 - 8);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v8, 0, 1, v26);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v8, 1, v26) == 1)
    goto LABEL_6;
  sub_1DC0B091C((uint64_t)v8, (unint64_t *)&unk_1EDB28B30, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1470]);
  sub_1DC14DB74();
  v29 = (uint64_t)v49;
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v49, v51, v28);
  (*(void (**)(uint64_t, char *, uint64_t))(v17 + 16))(v29 + *(int *)(v50 + 20), v19, v16);
  sub_1DC400214();
  v30 = v52;
  sub_1DC092ED0(v29, v52, type metadata accessor for StockChartCalloutViewModel);
  v31 = MEMORY[0x1DF0CAD78](v2 + 16);
  if (!v31)
  {
LABEL_13:
    sub_1DC0926D8(v30, type metadata accessor for StockChartCalloutViewModel);
    return (id)(*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  }
  v32 = MEMORY[0x1DF0CAD78](v31 + 16);
  if (!v32)
  {
    swift_unknownObjectRelease();
    goto LABEL_13;
  }
  v33 = (char *)v32;
  v34 = v16;
  v35 = v19;
  v36 = sub_1DC3861A0(v32, v30);
  result = objc_msgSend(v33, sel_view);
  if (result)
  {
    v37 = result;
    objc_msgSend(result, sel_layoutMargins);
    v39 = v38;
    v41 = v40;
    v43 = v42;
    v45 = v44;

    v46 = *(_QWORD *)&v33[OBJC_IVAR____TtC8StocksUI24StockChartViewController_calloutViewProvider + 24];
    v47 = *(_QWORD *)&v33[OBJC_IVAR____TtC8StocksUI24StockChartViewController_calloutViewProvider + 32];
    __swift_project_boxed_opaque_existential_1(&v33[OBJC_IVAR____TtC8StocksUI24StockChartViewController_calloutViewProvider], v46);
    v55[0] = v39;
    v55[1] = v41;
    v55[2] = v43;
    v55[3] = v45;
    (*(void (**)(uint64_t, id, _QWORD *, uint64_t, uint64_t))(v47 + 16))(v30, v36, v55, v46, v47);
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();

    v19 = v35;
    v16 = v34;
    goto LABEL_13;
  }
  __break(1u);
  return result;
}

id sub_1DC14CE84(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  id v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD v43[4];

  v41 = a1;
  v42 = a2;
  v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1DC089DA4(0, &qword_1F034C358, type metadata accessor for StockChartRangeCalloutViewModel, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v38 - v5;
  v7 = type metadata accessor for StockChartRangeCalloutViewModel(0);
  v39 = *(_QWORD *)(v7 - 8);
  v40 = v7;
  MEMORY[0x1E0C80A78](v7);
  v38 = (uint64_t)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DAE0F8];
  sub_1DC089DA4(0, (unint64_t *)&qword_1EDB28B80, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAE0F8], v3);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v38 - v11;
  v13 = sub_1DC4002BC();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = v2 + OBJC_IVAR____TtC8StocksUI20StockChartInteractor_activeChartRange;
  swift_beginAccess();
  v18 = v17;
  v19 = v14;
  sub_1DC0EDD64(v18, (uint64_t)v12, (unint64_t *)&qword_1EDB28B80, v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
    return (id)sub_1DC0B091C((uint64_t)v12, (unint64_t *)&qword_1EDB28B80, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAE0F8]);
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v12, v13);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v2 + 136), *(_QWORD *)(v2 + 160));
  sub_1DC2DC290(v41, v42, (uint64_t)v16, (uint64_t)v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v6, 1, v40) == 1)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    return (id)sub_1DC0B091C((uint64_t)v6, &qword_1F034C358, type metadata accessor for StockChartRangeCalloutViewModel);
  }
  v21 = v38;
  sub_1DC092ED0((uint64_t)v6, v38, type metadata accessor for StockChartRangeCalloutViewModel);
  v22 = MEMORY[0x1DF0CAD78](v2 + 16);
  if (!v22)
    goto LABEL_10;
  v23 = MEMORY[0x1DF0CAD78](v22 + 16);
  if (!v23)
  {
    swift_unknownObjectRelease();
    goto LABEL_10;
  }
  v24 = (char *)v23;
  v25 = v19;
  v26 = sub_1DC3862A0(v23, v21);
  result = objc_msgSend(v24, sel_view);
  if (result)
  {
    v27 = result;
    objc_msgSend(result, sel_layoutMargins);
    v29 = v28;
    v31 = v30;
    v33 = v32;
    v35 = v34;

    v36 = *(_QWORD *)&v24[OBJC_IVAR____TtC8StocksUI24StockChartViewController_rangeCalloutViewProvider + 24];
    v37 = *(_QWORD *)&v24[OBJC_IVAR____TtC8StocksUI24StockChartViewController_rangeCalloutViewProvider + 32];
    __swift_project_boxed_opaque_existential_1(&v24[OBJC_IVAR____TtC8StocksUI24StockChartViewController_rangeCalloutViewProvider], v36);
    v43[0] = v29;
    v43[1] = v31;
    v43[2] = v33;
    v43[3] = v35;
    (*(void (**)(uint64_t, id, _QWORD *, uint64_t, uint64_t))(v37 + 16))(v21, v26, v43, v36, v37);
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();

    v19 = v25;
LABEL_10:
    sub_1DC0926D8(v21, type metadata accessor for StockChartRangeCalloutViewModel);
    return (id)(*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v16, v13);
  }
  __break(1u);
  return result;
}

void sub_1DC14D1E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = MEMORY[0x1DF0CAD78](v0 + 16);
  if (v1)
  {
    v2 = MEMORY[0x1DF0CAD78](v1 + 16);
    if (v2)
    {
      v3 = v2;
      sub_1DC40445C();
      v4 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8StocksUI24StockChartViewController_activeCallout);
      *(_QWORD *)(v3 + OBJC_IVAR____TtC8StocksUI24StockChartViewController_activeCallout) = 0xF000000000000007;
      sub_1DC14DB5C(v4);
      swift_unknownObjectRelease();
    }
    swift_unknownObjectRelease();
  }
  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC8StocksUI20StockChartInteractor_needRefresh) == 1)
  {
    *(_BYTE *)(v0 + OBJC_IVAR____TtC8StocksUI20StockChartInteractor_needRefresh) = 0;
    sub_1DC14C5FC();
  }
}

uint64_t sub_1DC14D290()
{
  return sub_1DC4028F0();
}

uint64_t sub_1DC14D298()
{
  return sub_1DC402914();
}

uint64_t sub_1DC14D2A4()
{
  return sub_1DC4028F0();
}

uint64_t sub_1DC14D2AC()
{
  return sub_1DC402914();
}

uint64_t sub_1DC14D2B4()
{
  return sub_1DC4028F0();
}

uint64_t sub_1DC14D2BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  unsigned int (*v22)(uint64_t, uint64_t, uint64_t);
  double v23;
  uint64_t v24;
  char v25;
  double v26;
  char v27;
  char v28;
  uint64_t v30;

  v4 = sub_1DC401030();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC089DA4(0, &qword_1EDB28DC0, v8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v30 - v13;
  v15 = sub_1DC4010B4();
  if (*(_QWORD *)(a2 + 16) && (v17 = sub_1DC0ED368(v15, v16), (v18 & 1) != 0))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v5 + 16))(v14, *(_QWORD *)(a2 + 56) + *(_QWORD *)(v5 + 72) * v17, v4);
    v19 = 0;
  }
  else
  {
    v19 = 1;
  }
  v20 = 1;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v14, v19, 1, v4);
  swift_bridgeObjectRelease();
  v21 = v2 + OBJC_IVAR____TtC8StocksUI20StockChartInteractor_lastKnownQoute;
  swift_beginAccess();
  v22 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v22(v21, 1, v4))
  {
    v23 = 0.0;
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v21, v4);
    v24 = sub_1DC401024();
    v20 = v25 & 1;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    v23 = *(double *)&v24;
  }
  sub_1DC0EDD64((uint64_t)v14, (uint64_t)v11, &qword_1EDB28DC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF040]);
  if (v22((uint64_t)v11, 1, v4) == 1)
  {
    sub_1DC0B091C((uint64_t)v11, &qword_1EDB28DC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF040]);
    if ((v20 & 1) != 0)
      return sub_1DC0B091C((uint64_t)v14, &qword_1EDB28DC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF040]);
    goto LABEL_16;
  }
  v26 = COERCE_DOUBLE(sub_1DC401024());
  v28 = v27;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v11, v4);
  if ((v20 & 1) != 0)
  {
    if ((v28 & 1) != 0)
      return sub_1DC0B091C((uint64_t)v14, &qword_1EDB28DC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF040]);
    goto LABEL_16;
  }
  if ((v28 & 1) != 0 || v23 != v26)
LABEL_16:
    sub_1DC14C5FC();
  return sub_1DC0B091C((uint64_t)v14, &qword_1EDB28DC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF040]);
}

uint64_t sub_1DC14D554()
{
  return sub_1DC080808((unint64_t *)&unk_1EDB27AC8, (uint64_t (*)(uint64_t))type metadata accessor for StockChartInteractor, (uint64_t)&unk_1DC40E8E0);
}

void sub_1DC14D580()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB2B000)
  {
    sub_1DC14D5D8();
    v0 = sub_1DC407F30();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB2B000);
  }
}

unint64_t sub_1DC14D5D8()
{
  unint64_t result;

  result = qword_1EDB33CF8;
  if (!qword_1EDB33CF8)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC42FB78, &type metadata for StockChartOfflineModel);
    atomic_store(result, (unint64_t *)&qword_1EDB33CF8);
  }
  return result;
}

uint64_t sub_1DC14D61C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1DC14D580();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC14D660(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t);
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _OWORD v18[2];

  v3 = sub_1DC4038E0();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1DC4038F8();
  v8 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DADBE8];
  v9 = *(_QWORD *)(v7 - 8);
  v10 = MEMORY[0x1E0C80A78](v7);
  v12 = (char *)v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v4 + 16))(v6, a2, v3, v10);
  sub_1DC4038EC();
  sub_1DC089DA4(0, (unint64_t *)&qword_1EDB3FE40, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8178], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v13 = sub_1DC401618();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1DC40DC10;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v14 + 104))(v16 + v15, *MEMORY[0x1E0CF8170], v13);
  sub_1DC080808(&qword_1F034C360, v8, MEMORY[0x1E0DADBD8]);
  sub_1DC4015C4();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v7);
  sub_1DC403928();
  sub_1DC080808(&qword_1F034C368, (uint64_t (*)(uint64_t))MEMORY[0x1E0DADC20], MEMORY[0x1E0DADC18]);
  memset(v18, 0, sizeof(v18));
  sub_1DC4015DC();
  return sub_1DC0926D8((uint64_t)v18, (uint64_t (*)(_QWORD))sub_1DC0D11C4);
}

id sub_1DC14D880(uint64_t a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  id result;
  void *v13;
  id v14;
  void *v15;
  void *v16;
  id v17;
  uint64_t v18;
  void *v19;
  id v20;
  id v21;
  double v22;
  double v23;
  void *v24;
  id v25;
  uint64_t v26;

  sub_1DC089DA4(0, (unint64_t *)&qword_1EDB28B80, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAE0F8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v26 - v5;
  v7 = sub_1DC4002BC();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = objc_retain(*(id *)(*(_QWORD *)&a2[OBJC_IVAR____TtC8StocksUI24StockChartViewController_dateRangePicker]
                          + OBJC_IVAR____TtC8StocksUI19DateRangePickerView_segmentedControl));
  sub_1DC40490C();

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
    return (id)sub_1DC0B091C((uint64_t)v6, (unint64_t *)&qword_1EDB28B80, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAE0F8]);
  result = (id)(*(uint64_t (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
  v13 = *(void **)&a2[OBJC_IVAR____TtC8StocksUI24StockChartViewController_stateMachine];
  if (!v13)
  {
    __break(1u);
    goto LABEL_9;
  }
  v14 = v13;
  v15 = (void *)sub_1DC408A1C();

  result = objc_msgSend(a2, sel_view);
  if (!result)
  {
LABEL_9:
    __break(1u);
    return result;
  }
  v16 = result;
  v17 = objc_msgSend(result, sel_traitCollection);

  v18 = *(_QWORD *)(a1 + 32);
  v19 = (void *)objc_opt_self();
  v20 = v17;
  v21 = objc_msgSend(v19, sel_mainScreen);
  objc_msgSend(v21, sel_scale);
  v23 = v22;

  v24 = *(void **)(v18 + 192);
  *(_QWORD *)(v18 + 192) = v20;
  *(double *)(v18 + 200) = v23;
  v25 = v20;

  sub_1DC14A57C((uint64_t)v10, v25, 0, v23);
  if (qword_1EDB28E90 != -1)
    swift_once();
  type metadata accessor for StockChartInteractor();
  sub_1DC080808(&qword_1EDB31D48, (uint64_t (*)(uint64_t))type metadata accessor for StockChartInteractor, (uint64_t)&unk_1DC40E930);
  sub_1DC4013B4();

  return (id)(*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

void sub_1DC14DB5C(uint64_t a1)
{
  if ((~a1 & 0xF000000000000007) != 0)

}

void sub_1DC14DB74()
{
  uint64_t (*v0)(uint64_t);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1EDB3F490)
  {
    sub_1DC4086A4();
    v0 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB2578];
    sub_1DC080808(&qword_1EDB3F460, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB2578], MEMORY[0x1E0DB2598]);
    sub_1DC080808(&qword_1EDB3F450, v0, MEMORY[0x1E0DB2588]);
    sub_1DC080808(&qword_1EDB3F458, v0, MEMORY[0x1E0DB2590]);
    v1 = sub_1DC4086EC();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1EDB3F490);
  }
}

uint64_t sub_1DC14DC44()
{
  return objectdestroyTm((uint64_t (*)(_QWORD))MEMORY[0x1E0DADBC8]);
}

uint64_t sub_1DC14DC54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1DC407EAC();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

void sub_1DC14DCC8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(sub_1DC407EAC() - 8) + 80);
  sub_1DC14C458(*(_QWORD *)(v0 + 16), v0 + ((v1 + 24) & ~v1));
}

uint64_t sub_1DC14DCF8()
{
  uint64_t v0;

  return sub_1DC14AAB4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void sub_1DC14DD10()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EDB28DA8)
  {
    sub_1DC400F7C();
    sub_1DC089DA4(255, &qword_1EDB28DC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF040], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EDB28DA8);
  }
}

uint64_t sub_1DC14DD94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = sub_1DC4002BC();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_1DC14DE08(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  v5 = *(_QWORD *)(sub_1DC4002BC() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = v2 + ((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
  return sub_1DC14AC68(a1, a2, v2 + v6, *(void **)v7, *(double *)(v7 + 8));
}

uint64_t sub_1DC14DE84()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1DC14DEA8(uint64_t a1)
{
  return sub_1DC14C078(a1);
}

uint64_t sub_1DC14DEB0()
{
  return objectdestroyTm((uint64_t (*)(_QWORD))MEMORY[0x1E0DADBC8]);
}

uint64_t sub_1DC14DEBC()
{
  uint64_t v0;

  return sub_1DC14C384(v0);
}

void sub_1DC14DEC4(uint64_t a1, unsigned __int8 a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  const char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  void *v16;
  id v17;
  void *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(const char *, uint64_t, uint64_t, uint64_t);
  _BYTE v23[24];
  uint64_t v24;

  sub_1DC089DA4(0, &qword_1EDB3F498, (uint64_t (*)(uint64_t))sub_1DC14DB74, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v6);
  v8 = &v23[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v9);
  v11 = &v23[-v10];
  v12 = sub_1DC4085E4();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = &v23[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = *(void **)(a3 + OBJC_IVAR____TtC8StocksUI24StockChartViewController_stateMachine);
  if (v16)
  {
    v17 = v16;
    v18 = (void *)sub_1DC408A1C();

    v24 = a1;
    v19 = (_QWORD *)(a3 + OBJC_IVAR____TtC8StocksUI24StockChartViewController_styler);
    swift_beginAccess();
    __swift_project_boxed_opaque_existential_1(v19, v19[3]);
    sub_1DC161408(a2, (uint64_t)v15);
    sub_1DC408758();
    (*(void (**)(_BYTE *, uint64_t))(v13 + 8))(v15, v12);
    *(_BYTE *)(*(_QWORD *)(a3 + OBJC_IVAR____TtC8StocksUI24StockChartViewController_interactionHandler)
             + OBJC_IVAR____TtC8StocksUI28StockChartInteractionHandler_trend) = a2;
    sub_1DC14DB74();
    v21 = v20;
    v22 = *(void (**)(const char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56);
    v22(v11, 1, 1, v20);
    v22(v8, 1, 1, v21);
    sub_1DC2CDF90(v11, (uint64_t)v8);
    sub_1DC0B091C((uint64_t)v8, &qword_1EDB3F498, (uint64_t (*)(uint64_t))sub_1DC14DB74);
    sub_1DC0B091C((uint64_t)v11, &qword_1EDB3F498, (uint64_t (*)(uint64_t))sub_1DC14DB74);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1DC14E118(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t result;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v14[24];
  uint64_t v15;

  v4 = sub_1DC408674();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = &v14[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  result = MEMORY[0x1DF0CAD78](a2 + 16, v6);
  if (result)
  {
    v15 = a1;
    v10 = (_QWORD *)(result + OBJC_IVAR____TtC8StocksUI24StockChartViewController_styler);
    swift_beginAccess();
    v11 = (_QWORD *)*__swift_project_boxed_opaque_existential_1(v10, v10[3]);
    sub_1DC089DA4(0, &qword_1EDB40010, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB23D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    sub_1DC408518();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1DC40DC10;
    v13 = v11[10];
    v12 = v11[11];
    __swift_project_boxed_opaque_existential_1(v11 + 7, v13);
    (*(void (**)(uint64_t))(*(_QWORD *)(v12 + 16) + 376))(v13);
    sub_1DC40850C();
    sub_1DC408668();
    sub_1DC408758();
    (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v8, v4);
    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_1DC14E2B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void *v10;
  id v11;
  void *v12;
  void (*v13)(char *, uint64_t, uint64_t);
  objc_class *v14;
  char *v15;
  id v16;
  id v17;
  objc_super v18;

  v4 = sub_1DC407EAC();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1DF0CAD78](a2 + 16, v6);
  if (v9)
  {
    v10 = *(void **)(v9 + OBJC_IVAR____TtC8StocksUI24StockChartViewController_stateMachine);
    if (v10)
    {
      v11 = v10;
      v12 = (void *)sub_1DC408A1C();
      v13 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
      v13(v8, a1, v4);
      v14 = (objc_class *)type metadata accessor for StockChartViewController.ErrorContext(0);
      v15 = (char *)objc_allocWithZone(v14);
      v13(&v15[OBJC_IVAR____TtCC8StocksUI24StockChartViewControllerP33_E483C2B618A7CE6B48867B145DEE9A5212ErrorContext_model], (uint64_t)v8, v4);
      v18.receiver = v15;
      v18.super_class = v14;
      v16 = objc_msgSendSuper2(&v18, sel_init);
      (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
      v17 = objc_msgSend(v11, sel_fireEventWithName_withContext_, v12, v16);
      swift_unknownObjectRelease();

    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_1DC14E418(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1DC089DA4(0, &qword_1EDB28DC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF040], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC14E474()
{
  return objectdestroyTm((uint64_t (*)(_QWORD))MEMORY[0x1E0DADBC8]);
}

uint64_t sub_1DC14E480(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(sub_1DC4038E0() - 8) + 80);
  return sub_1DC14D660(a1, v1 + ((v3 + 16) & ~v3));
}

uint64_t sub_1DC14E4BC()
{
  uint64_t v0;

  return sub_1DC14BABC(v0);
}

uint64_t sub_1DC14E4C4()
{
  uint64_t v0;

  return sub_1DC14C004(v0);
}

uint64_t sub_1DC14E4CC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_1DC4002BC();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DC14E558()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(sub_1DC4002BC() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1DC14BCBC(v0 + v2, *(_QWORD *)(v0 + v3), *(_QWORD *)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_1DC14E5A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1DC089DA4(0, &qword_1EDB28DC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF040], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC14E600(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v6;

  sub_1DC089DA4(0, a3, a4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a2, a1, v6);
  return a2;
}

uint64_t sub_1DC14E658()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;

  v1 = sub_1DC4002BC();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_1DC089DA4(0, &qword_1EDB28DC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF040], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (v4 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v13 = *(_QWORD *)(v6 + 64);
  v14 = sub_1DC400F7C();
  v8 = *(_QWORD *)(v14 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  v10 = sub_1DC401030();
  v11 = *(_QWORD *)(v10 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v11 + 48))(v0 + v7, 1, v10))
    (*(void (**)(unint64_t, uint64_t))(v11 + 8))(v0 + v7, v10);
  (*(void (**)(unint64_t, uint64_t))(v8 + 8))(v0 + ((v7 + v13 + v9) & ~v9), v14);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DC14E7C0()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  v1 = *(_QWORD *)(sub_1DC4002BC() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_1DC089DA4(0, &qword_1EDB28DC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF040], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = (v3 + *(unsigned __int8 *)(v5 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = *(_QWORD *)(sub_1DC400F7C() - 8);
  v9 = (v6 + v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  return sub_1DC14B584(v0 + v2, *(_QWORD *)(v0 + v3), v0 + v6, v0 + v9, *(_QWORD *)(v0 + ((*(_QWORD *)(v8 + 64) + v9 + 7) & 0xFFFFFFFFFFFFF8)));
}

void sub_1DC14E888()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EDB28B88)
  {
    sub_1DC089DA4(255, (unint64_t *)&qword_1EDB28B80, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAE0F8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EDB28B88);
  }
}

void sub_1DC14E900(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_1DC26D228(a1, a2, a3, a4, v4);
}

uint64_t sub_1DC14E908()
{
  return objectdestroyTm((uint64_t (*)(_QWORD))MEMORY[0x1E0DAF0D0]);
}

uint64_t sub_1DC14E914@<X0>(uint64_t a1@<X8>)
{
  sub_1DC4010E4();
  return sub_1DC19B444(a1);
}

void sub_1DC14E96C()
{
  uint64_t ObjCClassFromMetadata;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v2 = sub_1DC3FFC80();
  v4 = v3;

  qword_1EDB5E288 = v2;
  unk_1EDB5E290 = v4;
}

_QWORD *assignWithCopy for PlacardMessage(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for PlacardMessage(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PlacardMessage(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PlacardMessage(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PlacardMessage()
{
  return &type metadata for PlacardMessage;
}

uint64_t sub_1DC14EB38(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 1;
  else
    return sub_1DC4099E8();
}

_QWORD *sub_1DC14EB68(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1DC4052FC();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t sub_1DC14EBF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1DC4052FC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1DC14EC4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1DC4052FC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1DC14ECA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1DC4052FC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1DC14ED04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1DC4052FC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1DC14ED60()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC14ED6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;

  v6 = sub_1DC4052FC();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 2)
    return ((v9 + 2147483646) & 0x7FFFFFFF) + 1;
  else
    return 0;
}

uint64_t sub_1DC14EDF8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC14EE04(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1DC4052FC();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 20)) = a2 + 1;
  return result;
}

uint64_t type metadata accessor for StockSearchCellViewLayoutOptions()
{
  uint64_t result;

  result = qword_1F034C3C8;
  if (!qword_1F034C3C8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1DC14EEB8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1DC4052FC();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for WatchlistCreationErrorAlert(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1DC14EF74 + 4 * byte_1DC40E9F5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1DC14EFA8 + 4 * byte_1DC40E9F0[v4]))();
}

uint64_t sub_1DC14EFA8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC14EFB0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC14EFB8);
  return result;
}

uint64_t sub_1DC14EFC4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC14EFCCLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1DC14EFD0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC14EFD8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WatchlistCreationErrorAlert()
{
  return &type metadata for WatchlistCreationErrorAlert;
}

uint64_t sub_1DC14EFF4()
{
  uint64_t ObjCClassFromMetadata;
  id v1;
  uint64_t v2;

  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1DC3FFC80();

  v2 = sub_1DC408A70();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_1DC14F1E8()
{
  return sub_1DC14EFF4();
}

uint64_t sub_1DC14F210()
{
  uint64_t ObjCClassFromMetadata;
  id v1;
  uint64_t v2;

  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v2 = sub_1DC3FFC80();

  return v2;
}

uint64_t sub_1DC14F2D8()
{
  uint64_t ObjCClassFromMetadata;
  id v1;
  uint64_t v2;

  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1DC3FFC80();

  v2 = sub_1DC408A70();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_1DC14F3C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a2;
  swift_retain();
  sub_1DC26C9A0((uint64_t)sub_1DC116D08, v4);
  return swift_release();
}

uint64_t sub_1DC14F4A0()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

void sub_1DC14F4C4(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  id v13;
  void *v14;
  void *v15;
  id v16;
  void *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  _OWORD v24[2];
  _OWORD v25[2];

  v20 = a2;
  v5 = sub_1DC407294();
  v21 = *(_QWORD *)(v5 - 8);
  v22 = v5;
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1DC4059F8();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (void *)sub_1DC408A1C();
  v13 = objc_msgSend(a1, sel_objectForKey_, v12);

  if (v13)
  {
    sub_1DC409634();
    swift_unknownObjectRelease();
    sub_1DC0FA0E4(v24, v25);
    sub_1DC4056E0();
    swift_dynamicCast();
    v14 = v23;
    (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E0DBA298], v8);
    sub_1DC40565C();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    v15 = (void *)sub_1DC408A1C();
    v16 = objc_msgSend(a1, sel_objectForKey_, v15);

    if (v16)
    {
      sub_1DC409634();
      swift_unknownObjectRelease();
      sub_1DC0FA0E4(v24, v25);
      type metadata accessor for StockListViewController();
      swift_dynamicCast();
      v17 = v23;
      sub_1DC4055CC();
      v18 = (void *)sub_1DC405074();
      swift_release();
      v19 = swift_allocObject();
      *(_QWORD *)(v19 + 16) = v20;
      *(_QWORD *)(v19 + 24) = a3;
      swift_retain();
      sub_1DC40727C();
      sub_1DC26C4AC(0x3FF0000000000000, 0, v18, (uint64_t)v7, (uint64_t)sub_1DC14F7B0, v19, 1.0);

      swift_release();
      (*(void (**)(char *, uint64_t))(v21 + 8))(v7, v22);
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_1DC14F78C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DC14F7B0()
{
  uint64_t v0;

  return sub_1DC14F3C0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t dispatch thunk of BackgroundStylerType.backgroundColor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t *assignWithCopy for AppBackgroundStyler(uint64_t *a1, uint64_t *a2)
{
  __swift_assign_boxed_opaque_existential_1(a1, a2);
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_1(uint64_t *result, uint64_t *a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];

  if (result != a2)
  {
    v3 = result;
    v4 = result[3];
    v5 = a2[3];
    if (v4 == v5)
    {
      v9 = *(_QWORD *)(v4 - 8);
      if ((*(_BYTE *)(v9 + 82) & 2) != 0)
      {
        v10 = *a2;
        swift_retain();
        result = (uint64_t *)swift_release();
        *v3 = v10;
      }
      else
      {
        return (uint64_t *)(*(uint64_t (**)(uint64_t *, uint64_t *, uint64_t))(v9 + 24))(result, a2, result[3]);
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      v6 = *(_QWORD *)(v4 - 8);
      v7 = *(_QWORD *)(v5 - 8);
      v8 = *(_DWORD *)(v7 + 80);
      if ((*(_BYTE *)(v6 + 82) & 2) != 0)
      {
        if ((v8 & 0x20000) != 0)
        {
          *result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(_BYTE *, uint64_t *, uint64_t))(v6 + 32))(v11, result, v4);
        if ((v8 & 0x20000) != 0)
        {
          *v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v4);
      }
    }
  }
  return result;
}

uint64_t assignWithTake for AppBackgroundStyler(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  __swift_destroy_boxed_opaque_existential_1(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  return a1;
}

ValueMetadata *type metadata accessor for AppBackgroundStyler()
{
  return &type metadata for AppBackgroundStyler;
}

uint64_t getEnumTagSinglePayload for AddButtonStyler(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AddButtonStyler(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DetailBackgroundStyler()
{
  return &type metadata for DetailBackgroundStyler;
}

uint64_t sub_1DC14FA40()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0;
  v2 = v0[3];
  v3 = v0[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v3 + 16) + 56))(v2);
}

ValueMetadata *_s12PromiseErrorOMa()
{
  return &_s12PromiseErrorON;
}

uint64_t sub_1DC14FA9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t);
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t result;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  Class v37;
  id v38;
  void *v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t *v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;

  v50 = a3;
  v51 = a1;
  v4 = sub_1DC4010E4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for StockFeedViewerPage();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1DC405E3C();
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC1501AC();
  MEMORY[0x1E0C80A78](v15);
  v52 = (char *)&v47 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC08CBF0(0, (unint64_t *)&unk_1EDB29C30, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedViewerPage, sub_1DC150250, MEMORY[0x1E0DB7078]);
  v56 = *(_QWORD *)(v17 - 8);
  v57 = v17;
  MEMORY[0x1E0C80A78](v17);
  v53 = (char *)&v47 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v55 = (char *)&v47 - v20;
  v21 = *(_QWORD *)(a2 + 16);
  v22 = MEMORY[0x1E0DEE9D8];
  if (v21)
  {
    v48 = v8;
    v49 = v14;
    v63 = MEMORY[0x1E0DEE9D8];
    sub_1DC2AD438(0, v21, 0);
    v23 = a2 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    v58 = *(_QWORD *)(v5 + 72);
    v59 = v5;
    v24 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    do
    {
      v24(v7, v23, v4);
      v24(v11, (uint64_t)v7, v4);
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      v22 = v63;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1DC2AD438(0, *(_QWORD *)(v22 + 16) + 1, 1);
        v22 = v63;
      }
      v26 = *(_QWORD *)(v22 + 16);
      v25 = *(_QWORD *)(v22 + 24);
      if (v26 >= v25 >> 1)
      {
        sub_1DC2AD438(v25 > 1, v26 + 1, 1);
        v22 = v63;
      }
      *(_QWORD *)(v22 + 16) = v26 + 1;
      sub_1DC15026C((uint64_t)v11, v22+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(_QWORD *)(v9 + 72) * v26);
      v5 = v59;
      v23 += v58;
      --v21;
    }
    while (v21);
    v8 = v48;
  }
  v27 = sub_1DC080808(&qword_1EDB31268, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedViewerPage, (uint64_t)&unk_1DC42DDD4);
  v28 = sub_1DC080808(&qword_1EDB31250, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedViewerPage, (uint64_t)&unk_1DC42DE3C);
  MEMORY[0x1DF0C311C](v22, v8, v27, v28);
  sub_1DC150250();
  v29 = v55;
  sub_1DC4043B4();
  (*(void (**)(char *, char *, uint64_t))(v56 + 16))(v53, v29, v57);
  sub_1DC1502B0(0);
  swift_allocObject();
  v30 = sub_1DC4050EC();
  swift_retain();
  sub_1DC405E30();
  v63 = v30;
  sub_1DC08CBF0(0, &qword_1EDB2A1E0, (uint64_t (*)(uint64_t))sub_1DC1502B0, sub_1DC1502D4, MEMORY[0x1E0DB9750]);
  swift_allocObject();
  v31 = sub_1DC405494();
  v32 = v54;
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v54 + 16), *(_QWORD *)(v54 + 40));
  type metadata accessor for StockFeedViewerPageViewControllerProvider();
  swift_retain();
  result = sub_1DC4025FC();
  if (result)
  {
    v34 = result;
    v35 = sub_1DC404CC0();
    swift_allocObject();
    swift_retain();
    v36 = sub_1DC404CB4();
    v64 = v35;
    v65 = MEMORY[0x1E0DB86A0];
    v62 = v30;
    v63 = v36;
    v60 = v31;
    v61 = v34;
    sub_1DC1502F0();
    v38 = objc_allocWithZone(v37);
    v39 = (void *)sub_1DC40589C();
    sub_1DC40103C();
    sub_1DC404CCC();
    swift_bridgeObjectRelease();
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v32 + 16), *(_QWORD *)(v32 + 40));
    type metadata accessor for StockFeedViewerViewController();
    swift_unownedRetainStrong();
    swift_unownedRetain();
    swift_unownedRetain();
    swift_release();
    v40 = swift_allocObject();
    *(_QWORD *)(v40 + 16) = v32;
    *(_QWORD *)(v40 + 24) = v39;
    v41 = v39;
    v42 = sub_1DC4025E4();
    swift_unownedRelease();
    result = swift_release();
    if (v42)
    {
      (*(void (**)(char *, uint64_t))(v56 + 8))(v55, v57);

      swift_release();
      swift_release();
      v43 = sub_1DC080808(&qword_1EDB397E8, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedViewerViewController, (uint64_t)&unk_1DC412F70);
      v44 = sub_1DC080808(&qword_1EDB397D0, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedViewerViewController, (uint64_t)&unk_1DC412FA0);
      v45 = sub_1DC080808(&qword_1EDB397C0, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedViewerViewController, (uint64_t)&unk_1DC412F48);
      result = sub_1DC080808(&qword_1EDB397B8, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedViewerViewController, (uint64_t)&unk_1DC412F20);
      v46 = v50;
      *v50 = v42;
      v46[1] = v43;
      v46[2] = v44;
      v46[3] = v45;
      v46[4] = result;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1DC150078(_QWORD *a1, uint64_t a2)
{
  uint64_t v5;
  _QWORD v6[4];

  swift_getObjectType();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  swift_unownedRetainStrong();
  sub_1DC0824D4(a2 + 64, (uint64_t)v6);
  swift_release();
  __swift_project_boxed_opaque_existential_1(v6, v6[3]);
  sub_1DC3F14C8(2);
  sub_1DC12E0E0();
  sub_1DC402518();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v5);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  return sub_1DC402530();
}

uint64_t type metadata accessor for StockFeedViewerModule()
{
  return objc_opt_self();
}

void sub_1DC1501AC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB29588)
  {
    type metadata accessor for StockFeedViewerPage();
    sub_1DC080808(&qword_1EDB31268, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedViewerPage, (uint64_t)&unk_1DC42DDD4);
    sub_1DC080808(&qword_1EDB31250, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedViewerPage, (uint64_t)&unk_1DC42DE3C);
    v0 = sub_1DC4028E4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB29588);
  }
}

uint64_t sub_1DC150250()
{
  return sub_1DC080808(&qword_1EDB31248, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedViewerPage, (uint64_t)&unk_1DC42DE94);
}

uint64_t sub_1DC15026C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for StockFeedViewerPage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1DC1502B0(uint64_t a1)
{
  sub_1DC08CBF0(a1, &qword_1EDB2A0F0, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedViewerPage, sub_1DC150250, MEMORY[0x1E0DB90D8]);
}

uint64_t sub_1DC1502D4()
{
  return sub_1DC080808(&qword_1EDB2A0E8, (uint64_t (*)(uint64_t))sub_1DC1502B0, MEMORY[0x1E0DB90E8]);
}

void sub_1DC1502F0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB2A358)
  {
    sub_1DC1502B0(255);
    type metadata accessor for StockFeedViewerPageViewControllerProvider();
    type metadata accessor for StockFeedViewerViewController();
    sub_1DC08CBF0(255, &qword_1EDB2A1E0, (uint64_t (*)(uint64_t))sub_1DC1502B0, sub_1DC1502D4, MEMORY[0x1E0DB9750]);
    sub_1DC1502D4();
    sub_1DC080808(qword_1EDB3E4C8, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedViewerPageViewControllerProvider, (uint64_t)&unk_1DC416B1C);
    sub_1DC080808(&qword_1EDB397E0, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedViewerViewController, (uint64_t)&unk_1DC413000);
    sub_1DC150414();
    v0 = sub_1DC4058A8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB2A358);
  }
}

unint64_t sub_1DC150414()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EDB2A1D8;
  if (!qword_1EDB2A1D8)
  {
    sub_1DC08CBF0(255, &qword_1EDB2A1E0, (uint64_t (*)(uint64_t))sub_1DC1502B0, sub_1DC1502D4, MEMORY[0x1E0DB9750]);
    result = MEMORY[0x1DF0CAB8C](MEMORY[0x1E0DB9760], v1);
    atomic_store(result, (unint64_t *)&qword_1EDB2A1D8);
  }
  return result;
}

uint64_t sub_1DC15047C()
{
  uint64_t v0;

  swift_unownedRelease();

  return swift_deallocObject();
}

uint64_t sub_1DC1504A8(_QWORD *a1)
{
  uint64_t v1;

  return sub_1DC150078(a1, *(_QWORD *)(v1 + 16));
}

id AccessCheckerHasBundleSubscription(_:to:lineNumber:)(void *a1, uint64_t a2, void *a3, int a4)
{
  id v4;
  char *v7;
  void *v8;
  unint64_t v9;
  id v10;
  unsigned int v11;
  id v12;
  id v13;
  void *v14;
  id v16;
  __int128 v17;
  __int128 v18;
  _BYTE v19[24];
  uint64_t v20;

  v4 = a3;
  if (a3)
  {
    v7 = (char *)objc_msgSend(objc_msgSend(a1, sel_bundleSubscriptionProvider), sel_bundleSubscription);
    swift_unknownObjectRelease();
    if (objc_getAssociatedObject(v7, v7 + 1))
    {
      sub_1DC409634();
      swift_unknownObjectRelease();
    }
    else
    {
      v17 = 0u;
      v18 = 0u;
    }
    sub_1DC0D1180((uint64_t)&v17, (uint64_t)v19);
    if (v20)
    {
      sub_1DC0E7878();
      if ((swift_dynamicCast() & 1) != 0)
      {
        v8 = v16;
        v9 = (unint64_t)objc_msgSend(v16, sel_integerValue);
        if (v9 == -1)
          goto LABEL_19;
        goto LABEL_11;
      }
    }
    else
    {
      sub_1DC150744((uint64_t)v19);
    }
    v8 = 0;
    v9 = 0;
LABEL_11:
    if (objc_getAssociatedObject(v7, (const void *)~v9))
    {
      sub_1DC409634();
      swift_unknownObjectRelease();
    }
    else
    {
      v17 = 0u;
      v18 = 0u;
    }
    sub_1DC0D1180((uint64_t)&v17, (uint64_t)v19);
    if (v20)
    {
      sub_1DC0E7878();
      if ((swift_dynamicCast() & 1) != 0)
      {
        v10 = v16;
        v11 = objc_msgSend(v10, sel_integerValue);

        if ((((v11 - a4) ^ ((_DWORD)v9 + a4)) & 1) == 0)
          return 0;
        goto LABEL_17;
      }
    }
    else
    {
      sub_1DC150744((uint64_t)v19);
    }
LABEL_19:

    if (((((_DWORD)v9 + a4) ^ a4) & 1) == 0)
      return 0;
LABEL_17:
    v12 = objc_msgSend(objc_msgSend(a1, sel_bundleSubscriptionProvider), sel_bundleSubscription);
    swift_unknownObjectRelease();
    v13 = objc_msgSend(v12, sel_bundleChannelIDs);

    v14 = (void *)sub_1DC408A1C();
    v4 = objc_msgSend(v13, sel_containsObject_, v14);

  }
  return v4;
}

uint64_t sub_1DC150744(uint64_t a1)
{
  uint64_t v2;

  sub_1DC0D11C4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

BOOL AccessCheckerHasAccess(_:toItemPaid:isBundlePaid:channelID:lineNumber:)(id a1, char a2, char a3, uint64_t a4, uint64_t a5, int a6)
{
  id v11;
  id v12;
  uint64_t v13;
  char *v14;
  void *v15;
  unint64_t v16;
  id v17;
  unsigned int v18;
  id v19;
  id v20;
  void *v21;
  unsigned __int8 v22;
  id v24;
  __int128 v25;
  __int128 v26;
  _BYTE v27[24];
  uint64_t v28;

  if ((a2 & 1) != 0)
  {
    v11 = objc_msgSend(a1, sel_purchaseProvider);
    if (!a5)
    {
      swift_unknownObjectRelease();
      return 0;
    }
    v12 = objc_msgSend(v11, sel_purchasedTagIDs);
    v13 = sub_1DC408E54();

    LOBYTE(v12) = sub_1DC151630(a4, a5, v13);
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    if ((v12 & 1) == 0)
    {
      if ((a3 & 1) == 0)
        return 0;
      goto LABEL_8;
    }
    return 1;
  }
  if ((a3 & 1) == 0)
    return 1;
  if (!a5)
    return 0;
LABEL_8:
  v14 = (char *)objc_msgSend(objc_msgSend(a1, sel_bundleSubscriptionProvider), sel_bundleSubscription);
  swift_unknownObjectRelease();
  if (objc_getAssociatedObject(v14, v14 + 1))
  {
    sub_1DC409634();
    swift_unknownObjectRelease();
  }
  else
  {
    v25 = 0u;
    v26 = 0u;
  }
  sub_1DC0D1180((uint64_t)&v25, (uint64_t)v27);
  if (!v28)
  {
    sub_1DC150744((uint64_t)v27);
    goto LABEL_17;
  }
  sub_1DC0E7878();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_17:
    v15 = 0;
    v16 = 0;
    goto LABEL_18;
  }
  v15 = v24;
  v16 = (unint64_t)objc_msgSend(v24, sel_integerValue);
  if (v16 == -1)
  {
LABEL_26:

    if (((((_DWORD)v16 + a6) ^ a6) & 1) == 0)
      return 0;
    goto LABEL_27;
  }
LABEL_18:
  if (objc_getAssociatedObject(v14, (const void *)~v16))
  {
    sub_1DC409634();
    swift_unknownObjectRelease();
  }
  else
  {
    v25 = 0u;
    v26 = 0u;
  }
  sub_1DC0D1180((uint64_t)&v25, (uint64_t)v27);
  if (!v28)
  {
    sub_1DC150744((uint64_t)v27);
    goto LABEL_26;
  }
  sub_1DC0E7878();
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_26;
  v17 = v24;
  v18 = objc_msgSend(v17, sel_integerValue);

  if ((((v18 - a6) ^ ((_DWORD)v16 + a6)) & 1) == 0)
    return 0;
LABEL_27:
  v19 = objc_msgSend(objc_msgSend(a1, sel_bundleSubscriptionProvider), sel_bundleSubscription);
  swift_unknownObjectRelease();
  v20 = objc_msgSend(v19, sel_bundleChannelIDs);

  v21 = (void *)sub_1DC408A1C();
  v22 = objc_msgSend(v20, sel_containsObject_, v21);

  return (v22 & 1) != 0;
}

BOOL AccessCheckerHasAccess(_:to:lineNumber:)(void *a1, id a2, int a3)
{
  unsigned __int8 v6;
  unsigned int v7;
  id v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  uint64_t v15;
  char *v17;
  void *v18;
  unint64_t v19;
  id v20;
  unsigned int v21;
  id v22;
  id v23;
  void *v24;
  unsigned __int8 v25;
  id v26;
  __int128 v27;
  __int128 v28;
  _BYTE v29[24];
  uint64_t v30;

  v6 = objc_msgSend(a2, sel_isPaid);
  if ((objc_msgSend(a2, sel_respondsToSelector_, sel_isBundlePaid) & 1) != 0)
    v7 = objc_msgSend(a2, sel_isBundlePaid);
  else
    v7 = 0;
  v8 = objc_msgSend(a2, sel_sourceChannel);
  v9 = (uint64_t)v8;
  if (v8)
  {
    v10 = objc_msgSend(v8, sel_identifier);
    swift_unknownObjectRelease();
    v11 = sub_1DC408A4C();
    v9 = v12;

    if ((v6 & 1) != 0)
      goto LABEL_6;
LABEL_11:
    if ((v7 & 1) != 0)
      goto LABEL_15;
    goto LABEL_12;
  }
  v11 = 0;
  if ((v6 & 1) == 0)
    goto LABEL_11;
LABEL_6:
  v13 = objc_msgSend(a1, sel_purchaseProvider);
  if (v9)
  {
    v14 = objc_msgSend(v13, sel_purchasedTagIDs);
    v15 = sub_1DC408E54();

    LOBYTE(v14) = sub_1DC151630(v11, v9, v15);
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    if ((v14 & 1) == 0)
    {
      if (!v7)
        goto LABEL_35;
      goto LABEL_15;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    return 1;
  }
  swift_unknownObjectRelease();
  if (!v7)
    goto LABEL_35;
LABEL_15:
  if (v9)
  {
    v17 = (char *)objc_msgSend(objc_msgSend(a1, sel_bundleSubscriptionProvider), sel_bundleSubscription);
    swift_unknownObjectRelease();
    if (objc_getAssociatedObject(v17, v17 + 1))
    {
      sub_1DC409634();
      swift_unknownObjectRelease();
    }
    else
    {
      v27 = 0u;
      v28 = 0u;
    }
    sub_1DC0D1180((uint64_t)&v27, (uint64_t)v29);
    if (v30)
    {
      sub_1DC0E7878();
      if ((swift_dynamicCast() & 1) != 0)
      {
        v18 = v26;
        v19 = (unint64_t)objc_msgSend(v26, sel_integerValue);
        if (v19 == -1)
        {
LABEL_34:

          if (((((_DWORD)v19 + a3) ^ a3) & 1) == 0)
            goto LABEL_35;
          goto LABEL_31;
        }
        goto LABEL_25;
      }
    }
    else
    {
      sub_1DC150744((uint64_t)v29);
    }
    v18 = 0;
    v19 = 0;
LABEL_25:
    if (objc_getAssociatedObject(v17, (const void *)~v19))
    {
      sub_1DC409634();
      swift_unknownObjectRelease();
    }
    else
    {
      v27 = 0u;
      v28 = 0u;
    }
    sub_1DC0D1180((uint64_t)&v27, (uint64_t)v29);
    if (!v30)
    {
      sub_1DC150744((uint64_t)v29);
      goto LABEL_34;
    }
    sub_1DC0E7878();
    if ((swift_dynamicCast() & 1) == 0)
      goto LABEL_34;
    v20 = v26;
    v21 = objc_msgSend(v20, sel_integerValue);

    if ((((v21 - a3) ^ ((_DWORD)v19 + a3)) & 1) != 0)
    {
LABEL_31:
      v22 = objc_msgSend(objc_msgSend(a1, sel_bundleSubscriptionProvider), sel_bundleSubscription);
      swift_unknownObjectRelease();
      v23 = objc_msgSend(v22, sel_bundleChannelIDs);

      v24 = (void *)sub_1DC408A1C();
      v25 = objc_msgSend(v23, sel_containsObject_, v24);
      swift_bridgeObjectRelease();

      return (v25 & 1) != 0;
    }
LABEL_35:
    swift_bridgeObjectRelease();
  }
  return 0;
}

{
  unsigned __int8 v6;
  unsigned __int8 v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  char *v14;
  void *v16;
  unint64_t v17;
  id v18;
  unsigned int v19;
  id v20;
  id v21;
  void *v22;
  id v23;
  __int128 v24;
  __int128 v25;
  _BYTE v26[24];
  uint64_t v27;

  v6 = objc_msgSend(a2, sel_isPaid);
  v7 = objc_msgSend(a2, sel_isBundlePaid);
  v8 = objc_msgSend(objc_msgSend(a2, sel_sourceChannel), sel_identifier);
  swift_unknownObjectRelease();
  v9 = sub_1DC408A4C();
  v11 = v10;

  if ((v6 & 1) == 0)
  {
    if ((v7 & 1) != 0)
      goto LABEL_6;
LABEL_8:
    swift_bridgeObjectRelease();
    return 1;
  }
  v12 = objc_msgSend(objc_msgSend(a1, sel_purchaseProvider), sel_purchasedTagIDs);
  v13 = sub_1DC408E54();

  LOBYTE(v12) = sub_1DC151630(v9, v11, v13);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  if ((v12 & 1) != 0)
    goto LABEL_8;
  if ((v7 & 1) == 0)
    goto LABEL_27;
LABEL_6:
  v14 = (char *)objc_msgSend(objc_msgSend(a1, sel_bundleSubscriptionProvider), sel_bundleSubscription);
  swift_unknownObjectRelease();
  if (objc_getAssociatedObject(v14, v14 + 1))
  {
    sub_1DC409634();
    swift_unknownObjectRelease();
  }
  else
  {
    v24 = 0u;
    v25 = 0u;
  }
  sub_1DC0D1180((uint64_t)&v24, (uint64_t)v26);
  if (!v27)
  {
    sub_1DC150744((uint64_t)v26);
    goto LABEL_16;
  }
  sub_1DC0E7878();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_16:
    v16 = 0;
    v17 = 0;
    goto LABEL_17;
  }
  v16 = v23;
  v17 = (unint64_t)objc_msgSend(v23, sel_integerValue);
  if (v17 == -1)
  {
LABEL_26:

    if (((((_DWORD)v17 + a3) ^ a3) & 1) == 0)
      goto LABEL_27;
    goto LABEL_23;
  }
LABEL_17:
  if (objc_getAssociatedObject(v14, (const void *)~v17))
  {
    sub_1DC409634();
    swift_unknownObjectRelease();
  }
  else
  {
    v24 = 0u;
    v25 = 0u;
  }
  sub_1DC0D1180((uint64_t)&v24, (uint64_t)v26);
  if (!v27)
  {
    sub_1DC150744((uint64_t)v26);
    goto LABEL_26;
  }
  sub_1DC0E7878();
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_26;
  v18 = v23;
  v19 = objc_msgSend(v18, sel_integerValue);

  if ((((v19 - a3) ^ ((_DWORD)v17 + a3)) & 1) != 0)
  {
LABEL_23:
    v20 = objc_msgSend(objc_msgSend(a1, sel_bundleSubscriptionProvider), sel_bundleSubscription);
    swift_unknownObjectRelease();
    v21 = objc_msgSend(v20, sel_bundleChannelIDs);

    v22 = (void *)sub_1DC408A1C();
    LOBYTE(v20) = objc_msgSend(v21, sel_containsObject_, v22);
    swift_bridgeObjectRelease();

    return (v20 & 1) != 0;
  }
LABEL_27:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t AccessCheckerHasAccess(_:with:lineNumber:)(void *a1, void *a2, int a3)
{
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  id v14;
  char *v15;
  void *v16;
  unint64_t v17;
  id v18;
  unsigned int v19;
  id v20;
  id v21;
  id v23;
  __int128 v24;
  __int128 v25;
  _BYTE v26[24];
  uint64_t v27;

  v6 = objc_msgSend(a1, sel_purchaseProvider);
  if (objc_msgSend((id)swift_unknownObjectRetain(), sel_tagType) == (id)3)
  {
    v7 = objc_msgSend(a2, sel_asSection);
    if (!v7
      || (v8 = objc_msgSend(v7, sel_parentID), swift_unknownObjectRelease(), !v8))
    {
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      goto LABEL_8;
    }
  }
  else
  {
    v8 = objc_msgSend(a2, sel_identifier);
  }
  v9 = sub_1DC408A4C();
  v11 = v10;

  v12 = objc_msgSend(v6, sel_purchasedTagIDs);
  v13 = sub_1DC408E54();

  LOBYTE(v12) = sub_1DC151630(v9, v11, v13);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v12 & 1) != 0)
    return 1;
LABEL_8:
  v15 = (char *)objc_msgSend(objc_msgSend(a1, sel_bundleSubscriptionProvider), sel_bundleSubscription);
  swift_unknownObjectRelease();
  if (objc_getAssociatedObject(v15, v15 + 1))
  {
    sub_1DC409634();
    swift_unknownObjectRelease();
  }
  else
  {
    v24 = 0u;
    v25 = 0u;
  }
  sub_1DC0D1180((uint64_t)&v24, (uint64_t)v26);
  if (v27)
  {
    sub_1DC0E7878();
    if ((swift_dynamicCast() & 1) != 0)
    {
      v16 = v23;
      v17 = (unint64_t)objc_msgSend(v23, sel_integerValue);
      if (v17 == -1)
        goto LABEL_27;
      goto LABEL_17;
    }
  }
  else
  {
    sub_1DC150744((uint64_t)v26);
  }
  v16 = 0;
  v17 = 0;
LABEL_17:
  if (objc_getAssociatedObject(v15, (const void *)~v17))
  {
    sub_1DC409634();
    swift_unknownObjectRelease();
  }
  else
  {
    v24 = 0u;
    v25 = 0u;
  }
  sub_1DC0D1180((uint64_t)&v24, (uint64_t)v26);
  if (v27)
  {
    sub_1DC0E7878();
    if ((swift_dynamicCast() & 1) != 0)
    {
      v18 = v23;
      v19 = objc_msgSend(v18, sel_integerValue);

      if ((((v19 - a3) ^ ((_DWORD)v17 + a3)) & 1) == 0)
        return 0;
      goto LABEL_23;
    }
  }
  else
  {
    sub_1DC150744((uint64_t)v26);
  }
LABEL_27:

  if (((((_DWORD)v17 + a3) ^ a3) & 1) == 0)
    return 0;
LABEL_23:
  v20 = objc_msgSend(objc_msgSend(a1, sel_bundleSubscriptionProvider), sel_bundleSubscription);
  swift_unknownObjectRelease();
  v21 = objc_msgSend(a2, sel_identifier);
  if (!v21)
  {
    sub_1DC408A4C();
    v21 = (id)sub_1DC408A1C();
    swift_bridgeObjectRelease();
  }
  v14 = objc_msgSend(v20, sel_containsTagID_, v21);

  return (uint64_t)v14;
}

uint64_t sub_1DC151630(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  BOOL v12;
  uint64_t result;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  BOOL v17;

  if (*(_QWORD *)(a3 + 16))
  {
    sub_1DC409AC0();
    sub_1DC408AF4();
    v6 = sub_1DC409AF0();
    v7 = -1 << *(_BYTE *)(a3 + 32);
    v8 = v6 & ~v7;
    v9 = a3 + 56;
    if (((*(_QWORD *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
    {
      v10 = *(_QWORD *)(a3 + 48);
      v11 = (_QWORD *)(v10 + 16 * v8);
      v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (sub_1DC4099E8() & 1) != 0)
        return 1;
      v14 = ~v7;
      v15 = (v8 + 1) & v14;
      if (((*(_QWORD *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) != 0)
      {
        while (1)
        {
          v16 = (_QWORD *)(v10 + 16 * v15);
          v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (sub_1DC4099E8() & 1) != 0)
            break;
          result = 0;
          v15 = (v15 + 1) & v14;
          if (((*(_QWORD *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) == 0)
            return result;
        }
        return 1;
      }
    }
  }
  return 0;
}

uint64_t sub_1DC151764(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  char v9;

  if ((a2 & 0xC000000000000001) != 0)
  {
    swift_retain();
    v3 = sub_1DC4096B8();
    swift_release();
    return v3 & 1;
  }
  else
  {
    if (*(_QWORD *)(a2 + 16)
      && (sub_1DC151D5C(),
          v5 = sub_1DC4089B0(),
          v6 = -1 << *(_BYTE *)(a2 + 32),
          v7 = v5 & ~v6,
          ((*(_QWORD *)(a2 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0))
    {
      v8 = ~v6;
      do
      {
        v9 = sub_1DC4089F8();
        if ((v9 & 1) != 0)
          break;
        v7 = (v7 + 1) & v8;
      }
      while (((*(_QWORD *)(a2 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0);
    }
    else
    {
      v9 = 0;
    }
    return v9 & 1;
  }
}

uint64_t sub_1DC151890(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v20;

  if (*(_QWORD *)(a2 + 16))
  {
    sub_1DC408A4C();
    sub_1DC409AC0();
    sub_1DC408AF4();
    v3 = sub_1DC409AF0();
    swift_bridgeObjectRelease();
    v4 = -1 << *(_BYTE *)(a2 + 32);
    v5 = v3 & ~v4;
    v6 = a2 + 56;
    if (((*(_QWORD *)(a2 + 56 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
    {
      v7 = sub_1DC408A4C();
      v9 = v8;
      if (v7 == sub_1DC408A4C() && v9 == v10)
      {
LABEL_17:
        swift_bridgeObjectRelease_n();
        goto LABEL_18;
      }
      v12 = sub_1DC4099E8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v12 & 1) != 0)
      {
LABEL_18:
        v20 = 1;
        return v20 & 1;
      }
      v13 = ~v4;
      v14 = (v5 + 1) & v13;
      if (((*(_QWORD *)(v6 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
      {
        while (1)
        {
          v15 = sub_1DC408A4C();
          v17 = v16;
          if (v15 == sub_1DC408A4C() && v17 == v18)
            break;
          v20 = sub_1DC4099E8();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v20 & 1) == 0)
          {
            v14 = (v14 + 1) & v13;
            if (((*(_QWORD *)(v6 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
              continue;
          }
          return v20 & 1;
        }
        goto LABEL_17;
      }
    }
  }
  v20 = 0;
  return v20 & 1;
}

uint64_t sub_1DC151A54(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, unint64_t, uint64_t);
  char v12;
  uint64_t v14;
  uint64_t v15;

  v3 = sub_1DC40007C();
  v15 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(a2 + 16)
    && (sub_1DC080808((unint64_t *)&unk_1F0352830, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0AE8], MEMORY[0x1E0CB0B00]), v6 = sub_1DC4089B0(), v7 = -1 << *(_BYTE *)(a2 + 32), v8 = v6 & ~v7, ((*(_QWORD *)(a2 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0))
  {
    v9 = ~v7;
    v10 = *(_QWORD *)(v15 + 72);
    v11 = *(void (**)(char *, unint64_t, uint64_t))(v15 + 16);
    do
    {
      v11(v5, *(_QWORD *)(a2 + 48) + v10 * v8, v3);
      sub_1DC080808(&qword_1F034C408, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0AE8], MEMORY[0x1E0CB0B08]);
      v12 = sub_1DC4089F8();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v5, v3);
      if ((v12 & 1) != 0)
        break;
      v8 = (v8 + 1) & v9;
    }
    while (((*(_QWORD *)(a2 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0);
  }
  else
  {
    v12 = 0;
  }
  return v12 & 1;
}

uint64_t sub_1DC151BD8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, unint64_t, uint64_t);
  char v12;
  uint64_t v14;
  uint64_t v15;

  v3 = sub_1DC4047EC();
  v15 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(a2 + 16)
    && (sub_1DC080808(&qword_1EDB27560, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB7BE8], MEMORY[0x1E0DB7BF0]),
        v6 = sub_1DC4089B0(),
        v7 = -1 << *(_BYTE *)(a2 + 32),
        v8 = v6 & ~v7,
        ((*(_QWORD *)(a2 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0))
  {
    v9 = ~v7;
    v10 = *(_QWORD *)(v15 + 72);
    v11 = *(void (**)(char *, unint64_t, uint64_t))(v15 + 16);
    do
    {
      v11(v5, *(_QWORD *)(a2 + 48) + v10 * v8, v3);
      sub_1DC080808(&qword_1EDB29DA8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB7BE8], MEMORY[0x1E0DB7BF8]);
      v12 = sub_1DC4089F8();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v5, v3);
      if ((v12 & 1) != 0)
        break;
      v8 = (v8 + 1) & v9;
    }
    while (((*(_QWORD *)(a2 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0);
  }
  else
  {
    v12 = 0;
  }
  return v12 & 1;
}

void sub_1DC151D5C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F034C400)
  {
    type metadata accessor for WelcomeView();
    v0 = sub_1DC409784();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1F034C400);
  }
}

uint64_t sub_1DC151DB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  unsigned int (*v54)(char *, uint64_t, uint64_t);
  unsigned int v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unsigned int (*v67)(char *, uint64_t, uint64_t);
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t (*v74)(uint64_t);
  uint64_t (*v75)(uint64_t);
  uint64_t v76;
  char *v77;
  void (*v78)(uint64_t, uint64_t);
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unsigned int (*v89)(uint64_t, uint64_t, uint64_t);
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  int v94;
  uint64_t (*v95)(uint64_t);
  uint64_t v96;
  uint64_t (*v97)(uint64_t);
  uint64_t v98;
  uint64_t v99;
  uint64_t (*v100)(uint64_t);
  uint64_t v101;
  uint64_t (*v102)(uint64_t);
  void (*v103)(char *, uint64_t, uint64_t);
  uint64_t v104;
  unint64_t v105;
  BOOL v106;
  uint64_t v107;
  uint64_t v108;
  int *v109;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  char *v118;
  uint64_t v119;
  char *v120;
  char *v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  unsigned int (*v134)(char *, uint64_t, uint64_t);
  uint64_t v135;
  uint64_t v136;

  v126 = a5;
  v134 = (unsigned int (*)(char *, uint64_t, uint64_t))a4;
  v135 = a3;
  v136 = a2;
  v115 = a1;
  v125 = a6;
  v6 = sub_1DC3FFFEC();
  v7 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870];
  v8 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v120 = (char *)&v113 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1DC400220();
  v123 = *(_QWORD *)(v10 - 8);
  v124 = v10;
  MEMORY[0x1E0C80A78](v10);
  v122 = (char *)&v113 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1DC089DA4(0, &qword_1EDB28BA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAE188], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v13);
  v117 = (char *)&v113 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v116 = (uint64_t)&v113 - v16;
  MEMORY[0x1E0C80A78](v17);
  v132 = (uint64_t)&v113 - v18;
  MEMORY[0x1E0C80A78](v19);
  v118 = (char *)&v113 - v20;
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v113 - v22;
  MEMORY[0x1E0C80A78](v24);
  v26 = (char *)&v113 - v25;
  sub_1DC089DA4(0, &qword_1EDB28DC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF040], v12);
  MEMORY[0x1E0C80A78](v27);
  v119 = (uint64_t)&v113 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v29);
  v131 = (uint64_t)&v113 - v30;
  MEMORY[0x1E0C80A78](v31);
  v33 = (char *)&v113 - v32;
  MEMORY[0x1E0C80A78](v34);
  v36 = (char *)&v113 - v35;
  sub_1DC089DA4(0, &qword_1EDB28AC0, v7, v12);
  MEMORY[0x1E0C80A78](v37);
  v128 = (uint64_t)&v113 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v39);
  v130 = (uint64_t)&v113 - v40;
  MEMORY[0x1E0C80A78](v41);
  v129 = (char *)&v113 - v42;
  MEMORY[0x1E0C80A78](v43);
  v127 = (char *)&v113 - v44;
  MEMORY[0x1E0C80A78](v45);
  v47 = (char *)&v113 - v46;
  MEMORY[0x1E0C80A78](v48);
  v50 = (char *)&v113 - v49;
  MEMORY[0x1E0C80A78](v51);
  v53 = (char *)&v113 - v52;
  sub_1DC0EDD64((uint64_t)v134, (uint64_t)v50, &qword_1EDB28AC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
  sub_1DC0EDD64(v136, (uint64_t)v36, &qword_1EDB28DC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF040]);
  sub_1DC0EDD64(v135, (uint64_t)v26, &qword_1EDB28BA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAE188]);
  v54 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  v55 = v54(v50, 1, v6);
  v133 = v8;
  v134 = v54;
  if (v55 == 1)
  {
    v114 = v26;
    v56 = v23;
    v57 = v118;
    v121 = v53;
    sub_1DC0EDD64((uint64_t)v36, (uint64_t)v33, &qword_1EDB28DC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF040]);
    v58 = sub_1DC401030();
    v59 = *(_QWORD *)(v58 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v59 + 48))(v33, 1, v58) == 1)
    {
      sub_1DC0B091C((uint64_t)v33, &qword_1EDB28DC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF040]);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v133 + 56))(v47, 1, 1, v6);
    }
    else
    {
      sub_1DC400FF4();
      (*(void (**)(char *, uint64_t))(v59 + 8))(v33, v58);
    }
    v53 = v121;
    v67 = v134;
    v68 = (uint64_t)v57;
    v69 = (uint64_t)v56;
    v70 = (uint64_t)v114;
    sub_1DC0EDD64((uint64_t)v114, v69, &qword_1EDB28BA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAE188]);
    if (v67(v47, 1, v6) == 1)
    {
      sub_1DC0EDD64(v69, v68, &qword_1EDB28BA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAE188]);
      v71 = sub_1DC400370();
      v72 = *(_QWORD *)(v71 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v72 + 48))(v68, 1, v71) == 1)
      {
        v73 = v68;
        v74 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DAE188];
        sub_1DC0B091C(v69, &qword_1EDB28BA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAE188]);
        sub_1DC0B091C(v70, &qword_1EDB28BA0, v74);
        sub_1DC0B091C((uint64_t)v36, &qword_1EDB28DC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF040]);
        sub_1DC0B091C(v73, &qword_1EDB28BA0, v74);
        v53 = v121;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v133 + 56))(v121, 1, 1, v6);
      }
      else
      {
        v77 = v121;
        sub_1DC400340();
        sub_1DC0B091C(v69, &qword_1EDB28BA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAE188]);
        sub_1DC0B091C(v70, &qword_1EDB28BA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAE188]);
        sub_1DC0B091C((uint64_t)v36, &qword_1EDB28DC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF040]);
        v78 = *(void (**)(uint64_t, uint64_t))(v72 + 8);
        v53 = v77;
        v78(v68, v71);
      }
      v66 = v6;
      sub_1DC0B091C((uint64_t)v47, &qword_1EDB28AC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
      v60 = v136;
      v63 = (uint64_t)v129;
      v64 = v132;
      v54 = v134;
    }
    else
    {
      v75 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DAE188];
      sub_1DC0B091C(v69, &qword_1EDB28BA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAE188]);
      v54 = v134;
      sub_1DC0B091C(v70, &qword_1EDB28BA0, v75);
      sub_1DC0B091C((uint64_t)v36, &qword_1EDB28DC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF040]);
      v76 = v133;
      (*(void (**)(char *, char *, uint64_t))(v133 + 32))(v53, v47, v6);
      v66 = v6;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v76 + 56))(v53, 0, 1, v6);
      v60 = v136;
      v63 = (uint64_t)v129;
      v64 = v132;
    }
    v62 = v130;
    v65 = v131;
    sub_1DC0B091C((uint64_t)v50, &qword_1EDB28AC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
    v61 = (uint64_t)v127;
  }
  else
  {
    sub_1DC0B091C((uint64_t)v26, &qword_1EDB28BA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAE188]);
    sub_1DC0B091C((uint64_t)v36, &qword_1EDB28DC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF040]);
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v53, v50, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v53, 0, 1, v6);
    v60 = v136;
    v61 = (uint64_t)v127;
    v63 = (uint64_t)v129;
    v62 = v130;
    v65 = v131;
    v64 = v132;
    v66 = v6;
  }
  v79 = v135;
  sub_1DC0EDD64(v126, v63, &qword_1EDB28AC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
  sub_1DC0EDD64(v60, v65, &qword_1EDB28DC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF040]);
  sub_1DC0EDD64(v79, v64, &qword_1EDB28BA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAE188]);
  v80 = v66;
  if (v54((char *)v63, 1, v66) == 1)
  {
    v81 = v119;
    sub_1DC0EDD64(v65, v119, &qword_1EDB28DC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF040]);
    v82 = sub_1DC401030();
    v83 = *(_QWORD *)(v82 - 8);
    v84 = v61;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v83 + 48))(v81, 1, v82) == 1)
    {
      sub_1DC0B091C(v81, &qword_1EDB28DC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF040]);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v133 + 56))(v62, 1, 1, v80);
    }
    else
    {
      sub_1DC400FD0();
      v64 = v132;
      (*(void (**)(uint64_t, uint64_t))(v83 + 8))(v81, v82);
    }
    v88 = (uint64_t)v117;
    v89 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v134;
    v90 = v62;
    v91 = v116;
    sub_1DC0EDD64(v64, v116, &qword_1EDB28BA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAE188]);
    if (v89(v62, 1, v80) == 1)
    {
      v121 = v53;
      sub_1DC0EDD64(v91, v88, &qword_1EDB28BA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAE188]);
      v92 = sub_1DC400370();
      v93 = *(_QWORD *)(v92 - 8);
      v94 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v93 + 48))(v88, 1, v92);
      v86 = (uint64_t)v122;
      v85 = v133;
      if (v94 == 1)
      {
        v95 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DAE188];
        sub_1DC0B091C(v91, &qword_1EDB28BA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAE188]);
        sub_1DC0B091C(v132, &qword_1EDB28BA0, v95);
        sub_1DC0B091C(v131, &qword_1EDB28DC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF040]);
        sub_1DC0B091C(v88, &qword_1EDB28BA0, v95);
        v61 = v84;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v85 + 56))(v84, 1, 1, v80);
      }
      else
      {
        v98 = v84;
        sub_1DC400328();
        v99 = v88;
        v100 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DAE188];
        sub_1DC0B091C(v91, &qword_1EDB28BA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAE188]);
        sub_1DC0B091C(v132, &qword_1EDB28BA0, v100);
        sub_1DC0B091C(v131, &qword_1EDB28DC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF040]);
        v61 = v98;
        v63 = (uint64_t)v129;
        (*(void (**)(uint64_t, uint64_t))(v93 + 8))(v99, v92);
      }
      v53 = v121;
      sub_1DC0B091C(v130, &qword_1EDB28AC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
      v54 = v134;
    }
    else
    {
      v96 = v64;
      v97 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DAE188];
      sub_1DC0B091C(v91, &qword_1EDB28BA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAE188]);
      v54 = v134;
      sub_1DC0B091C(v96, &qword_1EDB28BA0, v97);
      sub_1DC0B091C(v131, &qword_1EDB28DC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF040]);
      v85 = v133;
      v61 = v84;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v133 + 32))(v84, v90, v80);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v85 + 56))(v84, 0, 1, v80);
      v86 = (uint64_t)v122;
    }
    v87 = v136;
    sub_1DC0B091C(v63, &qword_1EDB28AC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
  }
  else
  {
    sub_1DC0B091C(v64, &qword_1EDB28BA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAE188]);
    sub_1DC0B091C(v65, &qword_1EDB28DC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF040]);
    v85 = v133;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v133 + 32))(v61, v63, v66);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v85 + 56))(v61, 0, 1, v66);
    v86 = (uint64_t)v122;
    v87 = v136;
  }
  sub_1DC152AB4(v87, v86);
  v101 = v128;
  sub_1DC0EDD64((uint64_t)v53, v128, &qword_1EDB28AC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
  if (v54((char *)v101, 1, v80) == 1)
  {
    (*(void (**)(uint64_t, uint64_t))(v123 + 8))(v86, v124);
    v102 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870];
    sub_1DC0B091C(v61, &qword_1EDB28AC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
    sub_1DC0B091C((uint64_t)v53, &qword_1EDB28AC0, v102);
  }
  else
  {
    v103 = *(void (**)(char *, uint64_t, uint64_t))(v85 + 32);
    v104 = (uint64_t)v53;
    v105 = (unint64_t)v120;
    v103(v120, v101, v80);
    v106 = sub_1DC152D04(v105, v86);
    sub_1DC0B091C(v104, &qword_1EDB28AC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
    if (v106)
    {
      v107 = sub_1DC4010E4();
      v108 = v125;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v107 - 8) + 16))(v125, v115, v107);
      v109 = (int *)type metadata accessor for StockEarningsModel();
      v103((char *)(v108 + v109[5]), v105, v80);
      sub_1DC153170(v61, v108 + v109[6]);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v123 + 32))(v108 + v109[7], v86, v124);
      *(_BYTE *)(v108 + v109[8]) = 0;
      *(_BYTE *)(v108 + v109[9]) = 0;
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, int *))(*((_QWORD *)v109 - 1) + 56))(v108, 0, 1, v109);
    }
    (*(void (**)(unint64_t, uint64_t))(v85 + 8))(v105, v80);
    (*(void (**)(uint64_t, uint64_t))(v123 + 8))(v86, v124);
    v101 = v61;
  }
  v111 = v125;
  sub_1DC0B091C(v101, &qword_1EDB28AC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
  v112 = type metadata accessor for StockEarningsModel();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v112 - 8) + 56))(v111, 1, 1, v112);
}

uint64_t sub_1DC152AB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t (*v4)(uint64_t);
  uint64_t (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;

  v4 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF040];
  v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1DC089DA4(0, &qword_1EDB28DC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF040], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v21 - v7;
  sub_1DC089DA4(0, (unint64_t *)&unk_1EDB28B30, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1470], v5);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v21 - v13;
  sub_1DC0EDD64(a1, (uint64_t)v8, &qword_1EDB28DC0, v4);
  v15 = sub_1DC401030();
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v8, 1, v15) == 1)
  {
    sub_1DC0B091C((uint64_t)v8, &qword_1EDB28DC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF040]);
    v17 = sub_1DC400220();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v14, 1, 1, v17);
  }
  else
  {
    sub_1DC400FB8();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v8, v15);
    v17 = sub_1DC400220();
    v18 = *(_QWORD *)(v17 - 8);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v14, 0, 1, v17);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v14, 1, v17) != 1)
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v18 + 32))(a2, v14, v17);
  }
  sub_1DC0B091C((uint64_t)v14, (unint64_t *)&unk_1EDB28B30, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1470]);
  sub_1DC4001D8();
  sub_1DC400220();
  v19 = *(_QWORD *)(v17 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48))(v11, 1, v17);
  if ((_DWORD)result != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v19 + 32))(a2, v11, v17);
  __break(1u);
  return result;
}

BOOL sub_1DC152D04(unint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  void (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  char *v24;
  void (*v25)(char *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  char *v32;
  uint64_t v33;
  char v34;
  unint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v45 = a2;
  v46 = a1;
  v54 = sub_1DC3FFBE4();
  v51 = *(_QWORD *)(v54 - 8);
  MEMORY[0x1E0C80A78](v54);
  v48 = (char *)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1DC3FFFEC();
  v5 = *(_QWORD *)(v4 - 8);
  v43 = v4;
  v44 = v5;
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v41 - v9;
  MEMORY[0x1E0C80A78](v11);
  v42 = (char *)&v41 - v12;
  v13 = sub_1DC400220();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = sub_1DC4001CC();
  v50 = *(_QWORD *)(v53 - 8);
  MEMORY[0x1E0C80A78](v53);
  v18 = (char *)&v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = sub_1DC40070C();
  v49 = *(_QWORD *)(v52 - 8);
  MEMORY[0x1E0C80A78](v52);
  v20 = (char *)&v41 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 40));
  v47 = v20;
  v21 = v7;
  sub_1DC400DCC();
  sub_1DC40019C();
  v22 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
  v23 = v43;
  v22(v16, v45, v13);
  sub_1DC4001A8();
  sub_1DC3FFFE0();
  v24 = v42;
  sub_1DC400124();
  v25 = *(void (**)(char *, uint64_t))(v44 + 8);
  v25(v10, v23);
  sub_1DC400124();
  sub_1DC089DA4(0, (unint64_t *)&qword_1EDB3FDF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB11B8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v26 = sub_1DC4001B4();
  v27 = *(_QWORD *)(v26 - 8);
  v28 = (*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
  v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = xmmword_1DC40DC10;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v27 + 104))(v29 + v28, *MEMORY[0x1E0CB1188], v26);
  sub_1DC367EA4(v29);
  swift_setDeallocating();
  swift_arrayDestroy();
  v30 = v24;
  swift_deallocClassInstance();
  v31 = v48;
  sub_1DC40013C();
  v32 = v31;
  swift_bridgeObjectRelease();
  v33 = sub_1DC3FFBCC();
  if ((v34 & 1) != 0)
  {
    (*(void (**)(char *, uint64_t))(v51 + 8))(v31, v54);
    v25(v21, v23);
    v25(v24, v23);
    (*(void (**)(char *, uint64_t))(v50 + 8))(v18, v53);
    (*(void (**)(char *, uint64_t))(v49 + 8))(v47, v52);
    return 0;
  }
  v35 = v33;
  v36 = v47;
  v37 = v51;
  v38 = v54;
  if (v33 < 0)
  {
    (*(void (**)(char *, uint64_t))(v51 + 8))(v32, v54);
    v25(v21, v23);
    v25(v30, v23);
    (*(void (**)(char *, uint64_t))(v50 + 8))(v18, v53);
    (*(void (**)(char *, uint64_t))(v49 + 8))(v36, v52);
    return 0;
  }
  v46 = sub_1DC40058C();
  (*(void (**)(char *, uint64_t))(v37 + 8))(v32, v38);
  v25(v21, v23);
  v25(v30, v23);
  (*(void (**)(char *, uint64_t))(v50 + 8))(v18, v53);
  (*(void (**)(char *, uint64_t))(v49 + 8))(v36, v52);
  return !v35 || v46 >= v35;
}

uint64_t type metadata accessor for StockEarningsModelFactory()
{
  return objc_opt_self();
}

uint64_t sub_1DC153170(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1DC089DA4(0, &qword_1EDB28AC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1DC1531CC(void *a1)
{
  void *v1;
  id v3;
  uint64_t v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  _QWORD v13[6];

  v3 = objc_msgSend((id)objc_opt_self(), sel_tertiarySystemFillColor);
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = v3;
  *(_QWORD *)(v4 + 24) = a1;
  v5 = objc_allocWithZone(MEMORY[0x1E0DC3658]);
  v13[4] = sub_1DC153498;
  v13[5] = v4;
  v13[0] = MEMORY[0x1E0C809B0];
  v13[1] = 1107296256;
  v13[2] = sub_1DC15341C;
  v13[3] = &block_descriptor_0;
  v6 = _Block_copy(v13);
  v7 = v3;
  v8 = a1;
  v9 = objc_msgSend(v5, sel_initWithDynamicProvider_, v6);
  _Block_release(v6);
  swift_release();
  v10 = objc_msgSend(v1, sel_backgroundImageForState_, 0);
  if (v10)
  {
    v11 = v10;
    v12 = objc_msgSend(v10, sel_imageWithTintColor_, v9);
    objc_msgSend(v1, sel_setBackgroundImage_forState_, v12, 0);

    v7 = v11;
    v9 = v12;
  }

}

uint64_t type metadata accessor for StockFeedStyler()
{
  return objc_opt_self();
}

id sub_1DC153354(uint64_t a1, id a2, void *a3)
{
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v9;
  _BYTE v10[24];

  v5 = objc_msgSend(a2, sel_resolvedColorWithTraitCollection_, a1);
  v6 = objc_msgSend(a3, sel_resolvedColorWithTraitCollection_, a1);
  sub_1DC40937C();
  sub_1DC1534A0((uint64_t)&v9, (uint64_t)v10);
  v7 = sub_1DC409370();

  if (v7)
  {

    return (id)v7;
  }
  return v5;
}

id sub_1DC15341C(uint64_t a1, void *a2)
{
  uint64_t (*v3)(void);
  id v4;
  void *v5;

  v3 = *(uint64_t (**)(void))(a1 + 32);
  swift_retain();
  v4 = a2;
  v5 = (void *)v3();
  swift_release();

  return v5;
}

uint64_t sub_1DC15346C()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_1DC153498(uint64_t a1)
{
  uint64_t v1;

  return sub_1DC153354(a1, *(id *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_1DC1534A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1DC1534E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1DC1534E4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB29190)
  {
    sub_1DC153538(255);
    v0 = sub_1DC4095A4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB29190);
  }
}

uint64_t sub_1DC153538(uint64_t a1)
{
  uint64_t v1;
  unint64_t TupleTypeMetadata;
  uint64_t v3;

  v1 = qword_1EDB29188;
  if (!qword_1EDB29188)
  {
    MEMORY[0x1E0C80A78](a1);
    TupleTypeMetadata = swift_getTupleTypeMetadata();
    v1 = TupleTypeMetadata;
    if (!v3)
      atomic_store(TupleTypeMetadata, (unint64_t *)&qword_1EDB29188);
  }
  return v1;
}

uint64_t sub_1DC153614(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unsigned int (*v40)(uint64_t, uint64_t, uint64_t);
  uint64_t result;
  uint64_t v42;
  id *v43;
  uint64_t v44;
  id *v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  id *v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  id v63;
  char *v64;
  void *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  id v70;
  void *v71;
  void *v72;
  void *v73;
  id v74;
  void *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  id v80;
  void *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char v86;
  uint64_t v87;
  uint64_t v88;
  id *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  id v94;
  id *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  char *v100;
  id *v101;
  uint64_t v102;

  v93 = a4;
  v94 = a3;
  v102 = a2;
  v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1DC089DA4(0, &qword_1F034C410, (uint64_t (*)(uint64_t))sub_1DC154088, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v6);
  v98 = (char *)&v87 - v7;
  v8 = sub_1DC3FFFEC();
  v91 = *(_QWORD *)(v8 - 8);
  v92 = v8;
  MEMORY[0x1E0C80A78](v8);
  v90 = (char *)&v87 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for StocksAudioTrack();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v96 = (uint64_t)&v87 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v101 = (id *)((char *)&v87 - v14);
  MEMORY[0x1E0C80A78](v15);
  v95 = (id *)((char *)&v87 - v16);
  MEMORY[0x1E0C80A78](v17);
  v19 = (id *)((char *)&v87 - v18);
  sub_1DC1540EC();
  v21 = v20;
  MEMORY[0x1E0C80A78](v20);
  v23 = (char *)&v87 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC089DA4(0, &qword_1EDB2B7F0, (uint64_t (*)(uint64_t))type metadata accessor for StocksAudioTrack, v5);
  MEMORY[0x1E0C80A78](v24);
  v100 = (char *)&v87 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v26);
  v28 = (id *)((char *)&v87 - v27);
  MEMORY[0x1E0C80A78](v29);
  v31 = (char *)&v87 - v30;
  MEMORY[0x1E0C80A78](v32);
  v34 = (char *)&v87 - v33;
  sub_1DC154164();
  v36 = v35;
  v97 = a1;
  sub_1DC401D14();
  v99 = v36;
  sub_1DC401D14();
  v37 = *(int *)(v21 + 48);
  v38 = v10;
  v39 = (uint64_t)&v23[v37];
  sub_1DC1541D4((uint64_t)v34, (uint64_t)v23);
  sub_1DC1541D4((uint64_t)v31, v39);
  v40 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
  if (v40((uint64_t)v23, 1, v10) == 1)
  {
    sub_1DC0B091C((uint64_t)v31, &qword_1EDB2B7F0, (uint64_t (*)(uint64_t))type metadata accessor for StocksAudioTrack);
    sub_1DC0B091C((uint64_t)v34, &qword_1EDB2B7F0, (uint64_t (*)(uint64_t))type metadata accessor for StocksAudioTrack);
    if (v40(v39, 1, v10) == 1)
      return sub_1DC0B091C((uint64_t)v23, &qword_1EDB2B7F0, (uint64_t (*)(uint64_t))type metadata accessor for StocksAudioTrack);
    goto LABEL_6;
  }
  sub_1DC1541D4((uint64_t)v23, (uint64_t)v28);
  if (v40(v39, 1, v10) == 1)
  {
    sub_1DC0B091C((uint64_t)v31, &qword_1EDB2B7F0, (uint64_t (*)(uint64_t))type metadata accessor for StocksAudioTrack);
    sub_1DC0B091C((uint64_t)v34, &qword_1EDB2B7F0, (uint64_t (*)(uint64_t))type metadata accessor for StocksAudioTrack);
    sub_1DC0926D8((uint64_t)v28, (uint64_t (*)(_QWORD))type metadata accessor for StocksAudioTrack);
LABEL_6:
    sub_1DC0926D8((uint64_t)v23, (uint64_t (*)(_QWORD))sub_1DC1540EC);
    goto LABEL_7;
  }
  v88 = v10;
  v54 = v19;
  sub_1DC154230(v39, (uint64_t)v19);
  v89 = v28;
  v55 = objc_msgSend(*v28, sel_identifier);
  v56 = sub_1DC408A4C();
  v58 = v57;

  v59 = objc_msgSend(*v54, sel_identifier);
  v60 = sub_1DC408A4C();
  v62 = v61;

  if (v56 == v60 && v58 == v62)
  {
    swift_bridgeObjectRelease_n();
    sub_1DC0926D8((uint64_t)v54, (uint64_t (*)(_QWORD))type metadata accessor for StocksAudioTrack);
    sub_1DC0B091C((uint64_t)v31, &qword_1EDB2B7F0, (uint64_t (*)(uint64_t))type metadata accessor for StocksAudioTrack);
    sub_1DC0B091C((uint64_t)v34, &qword_1EDB2B7F0, (uint64_t (*)(uint64_t))type metadata accessor for StocksAudioTrack);
    sub_1DC0926D8((uint64_t)v89, (uint64_t (*)(_QWORD))type metadata accessor for StocksAudioTrack);
    return sub_1DC0B091C((uint64_t)v23, &qword_1EDB2B7F0, (uint64_t (*)(uint64_t))type metadata accessor for StocksAudioTrack);
  }
  v86 = sub_1DC4099E8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1DC0926D8((uint64_t)v54, (uint64_t (*)(_QWORD))type metadata accessor for StocksAudioTrack);
  sub_1DC0B091C((uint64_t)v31, &qword_1EDB2B7F0, (uint64_t (*)(uint64_t))type metadata accessor for StocksAudioTrack);
  sub_1DC0B091C((uint64_t)v34, &qword_1EDB2B7F0, (uint64_t (*)(uint64_t))type metadata accessor for StocksAudioTrack);
  sub_1DC0926D8((uint64_t)v89, (uint64_t (*)(_QWORD))type metadata accessor for StocksAudioTrack);
  result = sub_1DC0B091C((uint64_t)v23, &qword_1EDB2B7F0, (uint64_t (*)(uint64_t))type metadata accessor for StocksAudioTrack);
  v38 = v88;
  if ((v86 & 1) == 0)
  {
LABEL_7:
    v42 = (uint64_t)v100;
    sub_1DC401D14();
    if (v40(v42, 1, v38) == 1)
    {
      sub_1DC0B091C(v42, &qword_1EDB2B7F0, (uint64_t (*)(uint64_t))type metadata accessor for StocksAudioTrack);
      v43 = v101;
      v44 = (uint64_t)v98;
    }
    else
    {
      v45 = v95;
      sub_1DC154230(v42, (uint64_t)v95);
      v46 = v38;
      v47 = *(uint64_t *)((char *)v45 + *(int *)(v38 + 32));
      sub_1DC09BDF8();
      v48 = (void *)sub_1DC409598();
      sub_1DC089DA4(0, (unint64_t *)&qword_1EDB400C0, (uint64_t (*)(uint64_t))sub_1DC1542B8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v49 = swift_allocObject();
      *(_OWORD *)(v49 + 16) = xmmword_1DC40DC10;
      sub_1DC15430C(&qword_1F034D7C0, (uint64_t)&protocol conformance descriptor for StocksAudioTrack);
      v50 = v46;
      v51 = sub_1DC4099B8();
      v53 = v52;
      *(_QWORD *)(v49 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v49 + 64) = sub_1DC0E7FAC();
      *(_QWORD *)(v49 + 32) = v51;
      *(_QWORD *)(v49 + 40) = v53;
      sub_1DC408FE0();
      v43 = v101;
      if ((v47 & 1) != 0)
      {
        sub_1DC403F28();

        swift_bridgeObjectRelease();
        v63 = objc_msgSend(*v45, sel_identifier);
        if (!v63)
        {
          sub_1DC408A4C();
          v63 = (id)sub_1DC408A1C();
          swift_bridgeObjectRelease();
        }
        v64 = v90;
        sub_1DC3FFFE0();
        v65 = (void *)sub_1DC3FFF50();
        (*(void (**)(char *, uint64_t))(v91 + 8))(v64, v92);
        objc_msgSend(v94, sel_markArticle_withLastListened_, v63, v65);

      }
      else
      {
        sub_1DC403F28();

        swift_bridgeObjectRelease();
      }
      v38 = v50;
      v44 = (uint64_t)v98;
      sub_1DC0926D8((uint64_t)v45, (uint64_t (*)(_QWORD))type metadata accessor for StocksAudioTrack);
    }
    sub_1DC338D70(v44);
    sub_1DC154088();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 48))(v44, 1, v66) == 1)
      return sub_1DC0B091C(v44, &qword_1F034C410, (uint64_t (*)(uint64_t))sub_1DC154088);
    sub_1DC154230(v44, (uint64_t)v43);
    v67 = *(uint64_t *)((char *)v43 + *(int *)(v38 + 32));
    v68 = v96;
    sub_1DC154274((uint64_t)v43, v96);
    if ((v67 & 2) != 0)
    {
      objc_msgSend(*(id *)(v68 + *(int *)(v38 + 24)), sel_duration);
      v69 = sub_1DC4022FC();
      sub_1DC0926D8(v68, (uint64_t (*)(_QWORD))type metadata accessor for StocksAudioTrack);
      if ((v69 & 1) != 0)
      {
        v70 = objc_msgSend(*v43, sel_articleID);
        v71 = v70;
        v72 = v70;
        v73 = v70;
        if (!v70)
        {
          sub_1DC408A4C();
          v73 = (void *)sub_1DC408A1C();
          swift_bridgeObjectRelease();
          sub_1DC408A4C();
          v72 = (void *)sub_1DC408A1C();
          swift_bridgeObjectRelease();
          sub_1DC408A4C();
          v71 = (void *)sub_1DC408A1C();
          swift_bridgeObjectRelease();
        }
        sub_1DC09BDF8();
        v74 = v70;
        v75 = (void *)sub_1DC409598();
        sub_1DC089DA4(0, (unint64_t *)&qword_1EDB400C0, (uint64_t (*)(uint64_t))sub_1DC1542B8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
        v76 = swift_allocObject();
        *(_OWORD *)(v76 + 16) = xmmword_1DC40DC10;
        sub_1DC15430C(&qword_1F034D7C0, (uint64_t)&protocol conformance descriptor for StocksAudioTrack);
        v77 = sub_1DC4099B8();
        v79 = v78;
        *(_QWORD *)(v76 + 56) = MEMORY[0x1E0DEA968];
        *(_QWORD *)(v76 + 64) = sub_1DC0E7FAC();
        *(_QWORD *)(v76 + 32) = v77;
        *(_QWORD *)(v76 + 40) = v79;
        sub_1DC408FE0();
        sub_1DC403F28();

        swift_bridgeObjectRelease();
        v80 = v94;
        objc_msgSend(v94, sel_markArticle_withCompletedListening_, v73, 1);

        objc_msgSend(v80, sel_markArticle_withListeningProgress_, v72, 0.0);
        objc_msgSend(v80, sel_markArticle_withReadingPositionJSON_, v71, 0);

        return sub_1DC0926D8((uint64_t)v43, (uint64_t (*)(_QWORD))type metadata accessor for StocksAudioTrack);
      }
    }
    else
    {
      sub_1DC0926D8(v68, (uint64_t (*)(_QWORD))type metadata accessor for StocksAudioTrack);
    }
    sub_1DC09BDF8();
    v81 = (void *)sub_1DC409598();
    sub_1DC089DA4(0, (unint64_t *)&qword_1EDB400C0, (uint64_t (*)(uint64_t))sub_1DC1542B8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v82 = swift_allocObject();
    *(_OWORD *)(v82 + 16) = xmmword_1DC40DC10;
    sub_1DC15430C(&qword_1F034D7C0, (uint64_t)&protocol conformance descriptor for StocksAudioTrack);
    v83 = sub_1DC4099B8();
    v85 = v84;
    *(_QWORD *)(v82 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v82 + 64) = sub_1DC0E7FAC();
    *(_QWORD *)(v82 + 32) = v83;
    *(_QWORD *)(v82 + 40) = v85;
    sub_1DC408FE0();
    sub_1DC403F28();

    swift_bridgeObjectRelease();
    return sub_1DC0926D8((uint64_t)v43, (uint64_t (*)(_QWORD))type metadata accessor for StocksAudioTrack);
  }
  return result;
}

void sub_1DC154088()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1F034C418)
  {
    type metadata accessor for StocksAudioTrack();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1F034C418);
  }
}

void sub_1DC1540EC()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1F0352070)
  {
    sub_1DC089DA4(255, &qword_1EDB2B7F0, (uint64_t (*)(uint64_t))type metadata accessor for StocksAudioTrack, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1F0352070);
  }
}

void sub_1DC154164()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB29250)
  {
    type metadata accessor for StocksAudioTrack();
    sub_1DC15430C((unint64_t *)&unk_1EDB2B770, (uint64_t)&protocol conformance descriptor for StocksAudioTrack);
    v0 = sub_1DC401D2C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB29250);
  }
}

uint64_t sub_1DC1541D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1DC089DA4(0, &qword_1EDB2B7F0, (uint64_t (*)(uint64_t))type metadata accessor for StocksAudioTrack, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC154230(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for StocksAudioTrack();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC154274(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for StocksAudioTrack();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1DC1542B8()
{
  unint64_t result;

  result = qword_1EDB400F0;
  if (!qword_1EDB400F0)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EDB400F0);
  }
  return result;
}

uint64_t sub_1DC15430C(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for StocksAudioTrack();
    result = MEMORY[0x1DF0CAB8C](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DC15434C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t (*v21)(_QWORD);
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  __int128 v28[2];
  __int128 v29[2];

  v27 = a2;
  v4 = type metadata accessor for NewsStockFeedGroupKnobs();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for StockFeedGroupKnobs();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC145CD4();
  v11 = v10;
  v12 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v26 - v16;
  v18 = type metadata accessor for StockFeedGroupConfig();
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v26 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0990BC(a1, (uint64_t)v20, v21);
  v22 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
  v22(v17, v20, v11);
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v14, v17, v11);
  sub_1DC0990BC(v27, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedGroupKnobs);
  sub_1DC15461C((uint64_t)v9, (uint64_t)v6);
  sub_1DC0824D4(v2 + 16, (uint64_t)v29);
  sub_1DC0824D4(v2 + 56, (uint64_t)v28);
  type metadata accessor for NewsStockFeedGroupEmitter();
  v23 = swift_allocObject();
  v22((char *)(v23 + OBJC_IVAR____TtC8StocksUI25NewsStockFeedGroupEmitter_config), v14, v11);
  sub_1DC15461C((uint64_t)v6, v23 + OBJC_IVAR____TtC8StocksUI25NewsStockFeedGroupEmitter_knobs);
  sub_1DC097DD0(v29, v23 + OBJC_IVAR____TtC8StocksUI25NewsStockFeedGroupEmitter_formatService);
  sub_1DC097DD0(v28, v23 + OBJC_IVAR____TtC8StocksUI25NewsStockFeedGroupEmitter_featureAvailability);
  *(_QWORD *)&v29[0] = v23;
  sub_1DC154660();
  swift_allocObject();
  sub_1DC080808(&qword_1EDB363C0, (uint64_t (*)(uint64_t))type metadata accessor for NewsStockFeedGroupEmitter, (uint64_t)&unk_1DC42BA38);
  v24 = sub_1DC4074C8();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v11);
  return v24;
}

uint64_t sub_1DC1545D0()
{
  return sub_1DC080808(&qword_1EDB33F10, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedServiceConfig, (uint64_t)&unk_1DC411510);
}

uint64_t sub_1DC1545FC(uint64_t a1, uint64_t a2)
{
  return sub_1DC15434C(a1, a2);
}

uint64_t sub_1DC15461C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for NewsStockFeedGroupKnobs();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1DC154660()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB2ADF0)
  {
    type metadata accessor for StockFeedServiceConfig();
    sub_1DC080808(&qword_1EDB33F10, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedServiceConfig, (uint64_t)&unk_1DC411510);
    v0 = sub_1DC4074D4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB2ADF0);
  }
}

void sub_1DC1546D8(void *a1, id a2)
{
  _QWORD *v2;
  void *v4;
  id v5;
  id v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;

  if (objc_msgSend(a2, sel_horizontalSizeClass) == (id)2)
  {
    v4 = (void *)objc_opt_self();
    v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, 0.862745098, 0.862745098, 0.870588235, 1.0);
    v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, 0.219607843, 0.219607843, 0.22745098, 1.0);
    v11 = objc_msgSend(v4, sel_ts_dynamicColor_withDarkStyleVariant_, v5, v6);

    v10 = (uint64_t)v11;
  }
  else
  {
    v7 = v2 + 2;
    v9 = v2[5];
    v8 = v2[6];
    __swift_project_boxed_opaque_existential_1(v7, v9);
    v10 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v8 + 16) + 64))(v9);
  }
  v12 = (id)v10;
  objc_msgSend(a1, sel_setBackgroundColor_);

}

uint64_t sub_1DC154810()
{
  if (qword_1EDB28E78 != -1)
    swift_once();
  sub_1DC154954(&qword_1F034C420, (uint64_t)&unk_1DC40EEB0);
  return sub_1DC4013D8();
}

uint64_t sub_1DC15488C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  if (qword_1EDB28E78 != -1)
    swift_once();
  sub_1DC154954((unint64_t *)&unk_1EDB41E90, (uint64_t)&unk_1DC40EE70);
  result = sub_1DC4012D0();
  *a1 = v3;
  return result;
}

uint64_t sub_1DC154924()
{
  return sub_1DC154954((unint64_t *)&unk_1EDB41E90, (uint64_t)&unk_1DC40EE70);
}

uint64_t sub_1DC154948()
{
  return MEMORY[0x1E0DBCA78];
}

uint64_t sub_1DC154954(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for CurrencyDisplayCommandHandler();
    result = MEMORY[0x1DF0CAB8C](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t dispatch thunk of WelcomeFlowProviderType.shouldShowWelcome()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t type metadata accessor for WelcomeFlowProvider()
{
  return objc_opt_self();
}

BOOL sub_1DC1549C0()
{
  uint64_t v0;
  uint64_t v2;

  sub_1DC40133C();
  sub_1DC401324();
  if (qword_1EDB27490 != -1)
    swift_once();
  sub_1DC401318();
  swift_release();
  v0 = v2;
  if (v2 < 0)
  {
    sub_1DC401324();
    if (qword_1EDB28F98 != -1)
      swift_once();
    sub_1DC401318();
    swift_release();
    v0 = v2;
  }
  return v0 < 2;
}

BOOL sub_1DC154A98()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint64_t v4;
  const char *v5;
  uint64_t v6;
  uint64_t v8;

  sub_1DC40133C();
  sub_1DC401324();
  if (qword_1EDB27490 != -1)
    swift_once();
  sub_1DC401318();
  swift_release();
  v0 = v8;
  if (v8 < 0)
  {
    sub_1DC401324();
    if (qword_1EDB28F98 != -1)
      swift_once();
    sub_1DC401318();
    swift_release();
    v0 = v8;
  }
  if (v0 < 1)
  {
    if (qword_1EDB42200 != -1)
      swift_once();
    v6 = sub_1DC403F64();
    __swift_project_value_buffer(v6, (uint64_t)qword_1EDB5E250);
    v2 = sub_1DC403F4C();
    v3 = sub_1DC408FE0();
    if (os_log_type_enabled(v2, v3))
    {
      v4 = swift_slowAlloc();
      *(_DWORD *)v4 = 134349312;
      sub_1DC4095B0();
      *(_WORD *)(v4 + 12) = 2050;
      sub_1DC4095B0();
      v5 = "Terms and Conditions have NOT been agreed to, versionCompleted=%{public}ld, minimumRequired=%{public}ld";
      goto LABEL_16;
    }
  }
  else
  {
    if (qword_1EDB42200 != -1)
      swift_once();
    v1 = sub_1DC403F64();
    __swift_project_value_buffer(v1, (uint64_t)qword_1EDB5E250);
    v2 = sub_1DC403F4C();
    v3 = sub_1DC408FE0();
    if (os_log_type_enabled(v2, v3))
    {
      v4 = swift_slowAlloc();
      *(_DWORD *)v4 = 134349312;
      sub_1DC4095B0();
      *(_WORD *)(v4 + 12) = 2050;
      sub_1DC4095B0();
      v5 = "Terms and Conditions have been agreed to, versionCompleted=%{public}ld, minimumRequired=%{public}ld";
LABEL_16:
      _os_log_impl(&dword_1DC07D000, v2, v3, v5, (uint8_t *)v4, 0x16u);
      MEMORY[0x1DF0CAC88](v4, -1, -1);
    }
  }

  return v0 > 0;
}

uint64_t sub_1DC154D50(void (*a1)(char *), uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  void (*v18)(_BYTE *, _QWORD);
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *);
  uint64_t v27;
  char *v28;
  uint64_t v29;
  _BYTE v30[32];
  uint64_t v31;

  v4 = v3;
  v26 = a1;
  v27 = a2;
  sub_1DC142200();
  v6 = v5;
  v25 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC08CBF0(0, (unint64_t *)&qword_1EDB29FF0, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedLayoutModel, sub_1DC157A3C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB88A0]);
  v24 = v9;
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v28 = (char *)&v21 - v11;
  sub_1DC157A5C();
  v13 = v12;
  sub_1DC157B04();
  v29 = v13;
  v14 = sub_1DC408EC0();
  v15 = MEMORY[0x1E0DEE9D8];
  if (!v14)
    return v15;
  v16 = v14;
  v31 = MEMORY[0x1E0DEE9D8];
  sub_1DC2AD2B4(0, v14 & ~(v14 >> 63), 0);
  result = sub_1DC408E90();
  if ((v16 & 0x8000000000000000) == 0)
  {
    v22 = v6;
    v23 = v2;
    while (1)
    {
      v18 = (void (*)(_BYTE *, _QWORD))sub_1DC408EF0();
      v15 = v25;
      (*(void (**)(char *))(v25 + 16))(v8);
      v18(v30, 0);
      v26(v8);
      if (v4)
        break;
      v4 = 0;
      (*(void (**)(char *, uint64_t))(v15 + 8))(v8, v6);
      v15 = v31;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1DC2AD2B4(0, *(_QWORD *)(v15 + 16) + 1, 1);
        v15 = v31;
      }
      v20 = *(_QWORD *)(v15 + 16);
      v19 = *(_QWORD *)(v15 + 24);
      if (v20 >= v19 >> 1)
      {
        sub_1DC2AD2B4(v19 > 1, v20 + 1, 1);
        v15 = v31;
      }
      *(_QWORD *)(v15 + 16) = v20 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v15+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(_QWORD *)(v10 + 72) * v20, v28, v24);
      v31 = v15;
      sub_1DC408EE4();
      --v16;
      v6 = v22;
      if (!v16)
        return v15;
    }
    (*(void (**)(char *, uint64_t))(v15 + 8))(v8, v6);
    swift_release();
    return v15;
  }
  __break(1u);
  return result;
}

uint64_t sub_1DC154FE4(void (*a1)(uint64_t *__return_ptr, uint64_t *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t result;
  uint64_t *i;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = *(_QWORD *)(a3 + 16);
  result = MEMORY[0x1E0DEE9D8];
  if (v5)
  {
    v11 = MEMORY[0x1E0DEE9D8];
    sub_1DC4097B4();
    for (i = (uint64_t *)(a3 + 32); ; ++i)
    {
      v9 = *i;
      swift_bridgeObjectRetain();
      a1(&v10, &v9);
      swift_bridgeObjectRelease();
      if (v3)
        break;
      sub_1DC40979C();
      sub_1DC4097C0();
      sub_1DC4097CC();
      sub_1DC4097A8();
      if (!--v5)
        return v11;
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_1DC1550E0(void (*a1)(char *), uint64_t a2, uint64_t a3)
{
  return sub_1DC155B88(a1, a2, a3, (uint64_t (*)(_QWORD))sub_1DC142200, (uint64_t (*)(_QWORD, __n128))sub_1DC157A5C, sub_1DC157B04, (uint64_t)sub_1DC2AD2FC);
}

uint64_t sub_1DC155114(void (*a1)(char *), uint64_t a2, uint64_t a3)
{
  return sub_1DC155B88(a1, a2, a3, (uint64_t (*)(_QWORD))sub_1DC157A5C, (uint64_t (*)(_QWORD, __n128))sub_1DC157E68, sub_1DC157F10, (uint64_t)sub_1DC2AD4E8);
}

uint64_t sub_1DC155148(void (*a1)(char *), uint64_t a2, uint64_t a3)
{
  return sub_1DC155B88(a1, a2, a3, (uint64_t (*)(_QWORD))sub_1DC132008, (uint64_t (*)(_QWORD, __n128))sub_1DC12E820, sub_1DC12E8A4, (uint64_t)sub_1DC2AD514);
}

uint64_t sub_1DC15517C(void (*a1)(char *), uint64_t a2, uint64_t a3)
{
  return sub_1DC155B88(a1, a2, a3, (uint64_t (*)(_QWORD))sub_1DC0F6C50, (uint64_t (*)(_QWORD, __n128))sub_1DC132008, sub_1DC13208C, (uint64_t)sub_1DC112914);
}

uint64_t sub_1DC1551B0(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1DC1557F0(a1, a2, a3, a4, (uint64_t (*)(_QWORD))sub_1DC0D95F0, (void (*)(BOOL, unint64_t, uint64_t))sub_1DC2AD540, (uint64_t (*)(_QWORD))type metadata accessor for StockViewModel);
}

uint64_t sub_1DC1551DC(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1DC1557F0(a1, a2, a3, a4, (uint64_t (*)(_QWORD))sub_1DC0F8190, (void (*)(BOOL, unint64_t, uint64_t))sub_1DC1085D8, (uint64_t (*)(_QWORD))MEMORY[0x1E0DAF0D0]);
}

uint64_t sub_1DC155208(void (*a1)(char *), uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  void (*v18)(_BYTE *, _QWORD);
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *);
  uint64_t v27;
  char *v28;
  uint64_t v29;
  _BYTE v30[32];
  uint64_t v31;

  v4 = v3;
  v26 = a1;
  v27 = a2;
  sub_1DC0F8190();
  v6 = v5;
  v25 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC08CBF0(0, (unint64_t *)&qword_1EDB29FF8, (uint64_t (*)(uint64_t))type metadata accessor for StockListLayoutModel, sub_1DC1201AC, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB88A0]);
  v24 = v9;
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v28 = (char *)&v21 - v11;
  sub_1DC102838();
  v13 = v12;
  sub_1DC10BB74();
  v29 = v13;
  v14 = sub_1DC408EC0();
  v15 = MEMORY[0x1E0DEE9D8];
  if (!v14)
    return v15;
  v16 = v14;
  v31 = MEMORY[0x1E0DEE9D8];
  sub_1DC108EA8(0, v14 & ~(v14 >> 63), 0);
  result = sub_1DC408E90();
  if ((v16 & 0x8000000000000000) == 0)
  {
    v22 = v6;
    v23 = v2;
    while (1)
    {
      v18 = (void (*)(_BYTE *, _QWORD))sub_1DC408EF0();
      v15 = v25;
      (*(void (**)(char *))(v25 + 16))(v8);
      v18(v30, 0);
      v26(v8);
      if (v4)
        break;
      v4 = 0;
      (*(void (**)(char *, uint64_t))(v15 + 8))(v8, v6);
      v15 = v31;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1DC108EA8(0, *(_QWORD *)(v15 + 16) + 1, 1);
        v15 = v31;
      }
      v20 = *(_QWORD *)(v15 + 16);
      v19 = *(_QWORD *)(v15 + 24);
      if (v20 >= v19 >> 1)
      {
        sub_1DC108EA8(v19 > 1, v20 + 1, 1);
        v15 = v31;
      }
      *(_QWORD *)(v15 + 16) = v20 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v15+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(_QWORD *)(v10 + 72) * v20, v28, v24);
      v31 = v15;
      sub_1DC408EE4();
      --v16;
      v6 = v22;
      if (!v16)
        return v15;
    }
    (*(void (**)(char *, uint64_t))(v15 + 8))(v8, v6);
    swift_release();
    return v15;
  }
  __break(1u);
  return result;
}

uint64_t sub_1DC15549C(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1DC1557F0(a1, a2, a3, a4, (uint64_t (*)(_QWORD))sub_1DC142200, (void (*)(BOOL, unint64_t, uint64_t))sub_1DC2AD2FC, (uint64_t (*)(_QWORD))MEMORY[0x1E0DAF1A0]);
}

uint64_t sub_1DC1554C8(void (*a1)(char *), uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  void (*v18)(_BYTE *, _QWORD);
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *);
  uint64_t v27;
  char *v28;
  uint64_t v29;
  _BYTE v30[32];
  uint64_t v31;

  v4 = v3;
  v26 = a1;
  v27 = a2;
  sub_1DC142BD8();
  v6 = v5;
  v25 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC157B64();
  v24 = v9;
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v28 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC157C34();
  v13 = v12;
  sub_1DC081B48(&qword_1F034C438, 255, (uint64_t (*)(uint64_t))sub_1DC157C34, MEMORY[0x1E0DBC7C8]);
  v29 = v13;
  v14 = sub_1DC408EC0();
  v15 = MEMORY[0x1E0DEE9D8];
  if (!v14)
    return v15;
  v16 = v14;
  v31 = MEMORY[0x1E0DEE9D8];
  sub_1DC2AD614(0, v14 & ~(v14 >> 63), 0);
  result = sub_1DC408E90();
  if ((v16 & 0x8000000000000000) == 0)
  {
    v22 = v6;
    v23 = v2;
    while (1)
    {
      v18 = (void (*)(_BYTE *, _QWORD))sub_1DC408EF0();
      v15 = v25;
      (*(void (**)(char *))(v25 + 16))(v8);
      v18(v30, 0);
      v26(v8);
      if (v4)
        break;
      v4 = 0;
      (*(void (**)(char *, uint64_t))(v15 + 8))(v8, v6);
      v15 = v31;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1DC2AD614(0, *(_QWORD *)(v15 + 16) + 1, 1);
        v15 = v31;
      }
      v20 = *(_QWORD *)(v15 + 16);
      v19 = *(_QWORD *)(v15 + 24);
      if (v20 >= v19 >> 1)
      {
        sub_1DC2AD614(v19 > 1, v20 + 1, 1);
        v15 = v31;
      }
      *(_QWORD *)(v15 + 16) = v20 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v15+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(_QWORD *)(v10 + 72) * v20, v28, v24);
      v31 = v15;
      sub_1DC408EE4();
      --v16;
      v6 = v22;
      if (!v16)
        return v15;
    }
    (*(void (**)(char *, uint64_t))(v15 + 8))(v8, v6);
    swift_release();
    return v15;
  }
  __break(1u);
  return result;
}

uint64_t sub_1DC15575C(void (*a1)(char *), uint64_t a2, uint64_t a3)
{
  return sub_1DC155B88(a1, a2, a3, (uint64_t (*)(_QWORD))sub_1DC157CB8, (uint64_t (*)(_QWORD, __n128))sub_1DC0D9468, sub_1DC157E08, (uint64_t)sub_1DC2AD66C);
}

uint64_t sub_1DC155790(void (*a1)(char *), uint64_t a2, uint64_t a3)
{
  return sub_1DC155B88(a1, a2, a3, (uint64_t (*)(_QWORD))sub_1DC0D95F0, (uint64_t (*)(_QWORD, __n128))sub_1DC157CB8, sub_1DC157E28, (uint64_t)sub_1DC2AD540);
}

uint64_t sub_1DC1557C4(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1DC1557F0(a1, a2, a3, a4, (uint64_t (*)(_QWORD))sub_1DC0FF574, (void (*)(BOOL, unint64_t, uint64_t))sub_1DC107DB8, (uint64_t (*)(_QWORD))MEMORY[0x1E0DAF1A0]);
}

uint64_t sub_1DC1557F0(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD), void (*a6)(BOOL, unint64_t, uint64_t), uint64_t (*a7)(_QWORD))
{
  uint64_t v7;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v22;
  void (*v23)(BOOL, unint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t);
  uint64_t v27;
  uint64_t v28;

  v10 = v7;
  v26 = a1;
  v27 = a2;
  v25 = a5(0);
  v12 = *(_QWORD *)(v25 - 8);
  MEMORY[0x1E0C80A78](v25);
  v14 = (char *)&v22 - v13;
  v15 = *(_QWORD *)(a3 + 16);
  v16 = MEMORY[0x1E0DEE9D8];
  if (v15)
  {
    v28 = MEMORY[0x1E0DEE9D8];
    v23 = a6;
    a6(0, v15, 0);
    v16 = v28;
    v17 = *(_QWORD *)(a7(0) - 8);
    v18 = a3 + ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80));
    v24 = *(_QWORD *)(v17 + 72);
    while (1)
    {
      v26(v18);
      if (v10)
        break;
      v10 = 0;
      v28 = v16;
      v20 = *(_QWORD *)(v16 + 16);
      v19 = *(_QWORD *)(v16 + 24);
      if (v20 >= v19 >> 1)
      {
        v23(v19 > 1, v20 + 1, 1);
        v16 = v28;
      }
      *(_QWORD *)(v16 + 16) = v20 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v16+ ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))+ *(_QWORD *)(v12 + 72) * v20, v14, v25);
      v18 += v24;
      if (!--v15)
        return v16;
    }
    swift_release();
  }
  return v16;
}

uint64_t sub_1DC155978(void (*a1)(char *), uint64_t a2, uint64_t a3)
{
  return sub_1DC155B88(a1, a2, a3, (uint64_t (*)(_QWORD))sub_1DC0C3C68, (uint64_t (*)(_QWORD, __n128))sub_1DC0C3BC0, sub_1DC10B2FC, (uint64_t)sub_1DC2AD740);
}

uint64_t sub_1DC1559AC(void (*a1)(_QWORD *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(_QWORD *);
  uint64_t v19;
  _QWORD v20[2];
  uint64_t v21;

  v4 = v3;
  v18 = a1;
  v19 = a2;
  v17 = sub_1DC400538();
  v6 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(a3 + 16);
  v10 = MEMORY[0x1E0DEE9D8];
  if (v9)
  {
    v21 = MEMORY[0x1E0DEE9D8];
    sub_1DC2AD7CC(0, v9, 0);
    v10 = v21;
    v11 = (uint64_t *)(a3 + 40);
    while (1)
    {
      v12 = *v11;
      v20[0] = *(v11 - 1);
      v20[1] = v12;
      swift_bridgeObjectRetain();
      v18(v20);
      if (v4)
        break;
      v4 = 0;
      swift_bridgeObjectRelease();
      v21 = v10;
      v14 = *(_QWORD *)(v10 + 16);
      v13 = *(_QWORD *)(v10 + 24);
      if (v14 >= v13 >> 1)
      {
        sub_1DC2AD7CC(v13 > 1, v14 + 1, 1);
        v10 = v21;
      }
      v11 += 2;
      *(_QWORD *)(v10 + 16) = v14 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v10+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v14, v8, v17);
      if (!--v9)
        return v10;
    }
    swift_release();
    swift_bridgeObjectRelease();
  }
  return v10;
}

uint64_t sub_1DC155B20(void (*a1)(char *), uint64_t a2, uint64_t a3)
{
  return sub_1DC155B88(a1, a2, a3, (uint64_t (*)(_QWORD))sub_1DC102838, (uint64_t (*)(_QWORD, __n128))sub_1DC12E6FC, sub_1DC15819C, (uint64_t)sub_1DC2AD824);
}

uint64_t sub_1DC155B54(void (*a1)(char *), uint64_t a2, uint64_t a3)
{
  return sub_1DC155B88(a1, a2, a3, (uint64_t (*)(_QWORD))sub_1DC0F8190, (uint64_t (*)(_QWORD, __n128))sub_1DC102838, sub_1DC10BB74, (uint64_t)sub_1DC1085D8);
}

uint64_t sub_1DC155B88(void (*a1)(char *), uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD), uint64_t (*a5)(_QWORD, __n128), uint64_t (*a6)(void), uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  void (*v25)(_BYTE *, _QWORD);
  unint64_t v26;
  unint64_t v27;
  _QWORD v28[2];
  void (*v29)(char *);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  _BYTE v34[32];
  uint64_t v35;

  v28[0] = a7;
  v11 = v8;
  v29 = a1;
  v30 = a2;
  v12 = a4(0);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x1E0C80A78](v16);
  v33 = (char *)v28 - v18;
  v19 = a5(0, v17);
  v20 = a6();
  v31 = v19;
  v21 = sub_1DC408EC0();
  v22 = MEMORY[0x1E0DEE9D8];
  if (!v21)
    return v22;
  v23 = v21;
  v35 = MEMORY[0x1E0DEE9D8];
  ((void (*)(_QWORD, uint64_t, _QWORD))v28[0])(0, v21 & ~(v21 >> 63), 0);
  result = sub_1DC408E90();
  if ((v23 & 0x8000000000000000) == 0)
  {
    v32 = v20;
    v28[1] = v7;
    while (1)
    {
      v25 = (void (*)(_BYTE *, _QWORD))sub_1DC408EF0();
      (*(void (**)(char *))(v13 + 16))(v15);
      v25(v34, 0);
      v29(v15);
      if (v11)
        break;
      v11 = 0;
      (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
      v22 = v35;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        ((void (*)(_QWORD, uint64_t, uint64_t))v28[0])(0, *(_QWORD *)(v22 + 16) + 1, 1);
        v22 = v35;
      }
      v27 = *(_QWORD *)(v22 + 16);
      v26 = *(_QWORD *)(v22 + 24);
      if (v27 >= v26 >> 1)
      {
        ((void (*)(BOOL, unint64_t, uint64_t))v28[0])(v26 > 1, v27 + 1, 1);
        v22 = v35;
      }
      *(_QWORD *)(v22 + 16) = v27 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))(v22+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))+ *(_QWORD *)(v13 + 72) * v27, v33, v12);
      v35 = v22;
      sub_1DC408EE4();
      if (!--v23)
        return v22;
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    swift_release();
    return v22;
  }
  __break(1u);
  return result;
}

uint64_t sub_1DC155DF8(void (*a1)(char *), uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  void (*v18)(_BYTE *, _QWORD);
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *);
  uint64_t v27;
  char *v28;
  uint64_t v29;
  _BYTE v30[32];
  uint64_t v31;

  v4 = v3;
  v26 = a1;
  v27 = a2;
  sub_1DC157CB8();
  v6 = v5;
  v25 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC157D60();
  v24 = v9;
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v28 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0D9468();
  v13 = v12;
  sub_1DC157E08();
  v29 = v13;
  v14 = sub_1DC408EC0();
  v15 = MEMORY[0x1E0DEE9D8];
  if (!v14)
    return v15;
  v16 = v14;
  v31 = MEMORY[0x1E0DEE9D8];
  sub_1DC2AE77C(0, v14 & ~(v14 >> 63), 0);
  result = sub_1DC408E90();
  if ((v16 & 0x8000000000000000) == 0)
  {
    v22 = v6;
    v23 = v2;
    while (1)
    {
      v18 = (void (*)(_BYTE *, _QWORD))sub_1DC408EF0();
      v15 = v25;
      (*(void (**)(char *))(v25 + 16))(v8);
      v18(v30, 0);
      v26(v8);
      if (v4)
        break;
      v4 = 0;
      (*(void (**)(char *, uint64_t))(v15 + 8))(v8, v6);
      v15 = v31;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1DC2AE77C(0, *(_QWORD *)(v15 + 16) + 1, 1);
        v15 = v31;
      }
      v20 = *(_QWORD *)(v15 + 16);
      v19 = *(_QWORD *)(v15 + 24);
      if (v20 >= v19 >> 1)
      {
        sub_1DC2AE77C(v19 > 1, v20 + 1, 1);
        v15 = v31;
      }
      *(_QWORD *)(v15 + 16) = v20 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v15+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(_QWORD *)(v10 + 72) * v20, v28, v24);
      v31 = v15;
      sub_1DC408EE4();
      --v16;
      v6 = v22;
      if (!v16)
        return v15;
    }
    (*(void (**)(char *, uint64_t))(v15 + 8))(v8, v6);
    swift_release();
    return v15;
  }
  __break(1u);
  return result;
}

uint64_t sub_1DC156070(void (*a1)(char *), uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  void (*v18)(_BYTE *, _QWORD);
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *);
  uint64_t v27;
  char *v28;
  uint64_t v29;
  _BYTE v30[32];
  uint64_t v31;

  v4 = v3;
  v26 = a1;
  v27 = a2;
  sub_1DC0D95F0(0);
  v6 = v5;
  v25 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC08CBF0(0, (unint64_t *)&qword_1F034C440, (uint64_t (*)(uint64_t))type metadata accessor for StockSearchLayoutModel, sub_1DC11DFFC, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB88A0]);
  v24 = v9;
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v28 = (char *)&v21 - v11;
  sub_1DC157CB8();
  v13 = v12;
  sub_1DC157E28();
  v29 = v13;
  v14 = sub_1DC408EC0();
  v15 = MEMORY[0x1E0DEE9D8];
  if (!v14)
    return v15;
  v16 = v14;
  v31 = MEMORY[0x1E0DEE9D8];
  sub_1DC2AE7A8(0, v14 & ~(v14 >> 63), 0);
  result = sub_1DC408E90();
  if ((v16 & 0x8000000000000000) == 0)
  {
    v22 = v6;
    v23 = v2;
    while (1)
    {
      v18 = (void (*)(_BYTE *, _QWORD))sub_1DC408EF0();
      v15 = v25;
      (*(void (**)(char *))(v25 + 16))(v8);
      v18(v30, 0);
      v26(v8);
      if (v4)
        break;
      v4 = 0;
      (*(void (**)(char *, uint64_t))(v15 + 8))(v8, v6);
      v15 = v31;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1DC2AE7A8(0, *(_QWORD *)(v15 + 16) + 1, 1);
        v15 = v31;
      }
      v20 = *(_QWORD *)(v15 + 16);
      v19 = *(_QWORD *)(v15 + 24);
      if (v20 >= v19 >> 1)
      {
        sub_1DC2AE7A8(v19 > 1, v20 + 1, 1);
        v15 = v31;
      }
      *(_QWORD *)(v15 + 16) = v20 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v15+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(_QWORD *)(v10 + 72) * v20, v28, v24);
      v31 = v15;
      sub_1DC408EE4();
      --v16;
      v6 = v22;
      if (!v16)
        return v15;
    }
    (*(void (**)(char *, uint64_t))(v15 + 8))(v8, v6);
    swift_release();
    return v15;
  }
  __break(1u);
  return result;
}

uint64_t sub_1DC156304(void (*a1)(char *), uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  void (*v18)(_BYTE *, _QWORD);
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *);
  uint64_t v27;
  char *v28;
  uint64_t v29;
  _BYTE v30[32];
  uint64_t v31;

  v4 = v3;
  v26 = a1;
  v27 = a2;
  sub_1DC0FF574(0);
  v6 = v5;
  v25 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC08CBF0(0, (unint64_t *)&qword_1EDB29FE0, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedLayoutModel, sub_1DC157E48, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB88A0]);
  v24 = v9;
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v28 = (char *)&v21 - v11;
  sub_1DC0C3C68();
  v13 = v12;
  sub_1DC081B48((unint64_t *)&unk_1EDB29CF0, 255, (uint64_t (*)(uint64_t))sub_1DC0C3C68, MEMORY[0x1E0DB7B98]);
  v29 = v13;
  v14 = sub_1DC408EC0();
  v15 = MEMORY[0x1E0DEE9D8];
  if (!v14)
    return v15;
  v16 = v14;
  v31 = MEMORY[0x1E0DEE9D8];
  sub_1DC0FF228(0, v14 & ~(v14 >> 63), 0);
  result = sub_1DC408E90();
  if ((v16 & 0x8000000000000000) == 0)
  {
    v22 = v6;
    v23 = v2;
    while (1)
    {
      v18 = (void (*)(_BYTE *, _QWORD))sub_1DC408EF0();
      v15 = v25;
      (*(void (**)(char *))(v25 + 16))(v8);
      v18(v30, 0);
      v26(v8);
      if (v4)
        break;
      v4 = 0;
      (*(void (**)(char *, uint64_t))(v15 + 8))(v8, v6);
      v15 = v31;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1DC0FF228(0, *(_QWORD *)(v15 + 16) + 1, 1);
        v15 = v31;
      }
      v20 = *(_QWORD *)(v15 + 16);
      v19 = *(_QWORD *)(v15 + 24);
      if (v20 >= v19 >> 1)
      {
        sub_1DC0FF228(v19 > 1, v20 + 1, 1);
        v15 = v31;
      }
      *(_QWORD *)(v15 + 16) = v20 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v15+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(_QWORD *)(v10 + 72) * v20, v28, v24);
      v31 = v15;
      sub_1DC408EE4();
      --v16;
      v6 = v22;
      if (!v16)
        return v15;
    }
    (*(void (**)(char *, uint64_t))(v15 + 8))(v8, v6);
    swift_release();
    return v15;
  }
  __break(1u);
  return result;
}

uint64_t sub_1DC1565B4(void (*a1)(char *), uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  void (*v18)(_BYTE *, _QWORD);
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *);
  uint64_t v27;
  char *v28;
  uint64_t v29;
  _BYTE v30[32];
  uint64_t v31;

  v4 = v3;
  v26 = a1;
  v27 = a2;
  sub_1DC132008();
  v6 = v5;
  v25 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC10BAF0();
  v24 = v9;
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v28 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC12E820();
  v13 = v12;
  sub_1DC12E8A4();
  v29 = v13;
  v14 = sub_1DC408EC0();
  v15 = MEMORY[0x1E0DEE9D8];
  if (!v14)
    return v15;
  v16 = v14;
  v31 = MEMORY[0x1E0DEE9D8];
  sub_1DC1128A0(0, v14 & ~(v14 >> 63), 0);
  result = sub_1DC408E90();
  if ((v16 & 0x8000000000000000) == 0)
  {
    v22 = v6;
    v23 = v2;
    while (1)
    {
      v18 = (void (*)(_BYTE *, _QWORD))sub_1DC408EF0();
      v15 = v25;
      (*(void (**)(char *))(v25 + 16))(v8);
      v18(v30, 0);
      v26(v8);
      if (v4)
        break;
      v4 = 0;
      (*(void (**)(char *, uint64_t))(v15 + 8))(v8, v6);
      v15 = v31;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1DC1128A0(0, *(_QWORD *)(v15 + 16) + 1, 1);
        v15 = v31;
      }
      v20 = *(_QWORD *)(v15 + 16);
      v19 = *(_QWORD *)(v15 + 24);
      if (v20 >= v19 >> 1)
      {
        sub_1DC1128A0(v19 > 1, v20 + 1, 1);
        v15 = v31;
      }
      *(_QWORD *)(v15 + 16) = v20 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v15+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(_QWORD *)(v10 + 72) * v20, v28, v24);
      v31 = v15;
      sub_1DC408EE4();
      --v16;
      v6 = v22;
      if (!v16)
        return v15;
    }
    (*(void (**)(char *, uint64_t))(v15 + 8))(v8, v6);
    swift_release();
    return v15;
  }
  __break(1u);
  return result;
}

uint64_t sub_1DC15682C(void (*a1)(char *), uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  void (*v18)(_BYTE *, _QWORD);
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *);
  uint64_t v27;
  char *v28;
  uint64_t v29;
  _BYTE v30[32];
  uint64_t v31;

  v4 = v3;
  v26 = a1;
  v27 = a2;
  sub_1DC0F6C50(0);
  v6 = v5;
  v25 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC08CBF0(0, (unint64_t *)&qword_1EDB29FE8, (uint64_t (*)(uint64_t))type metadata accessor for TickerLayoutModel, sub_1DC124A78, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB88A0]);
  v24 = v9;
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v28 = (char *)&v21 - v11;
  sub_1DC132008();
  v13 = v12;
  sub_1DC13208C();
  v29 = v13;
  v14 = sub_1DC408EC0();
  v15 = MEMORY[0x1E0DEE9D8];
  if (!v14)
    return v15;
  v16 = v14;
  v31 = MEMORY[0x1E0DEE9D8];
  sub_1DC1128E8(0, v14 & ~(v14 >> 63), 0);
  result = sub_1DC408E90();
  if ((v16 & 0x8000000000000000) == 0)
  {
    v22 = v6;
    v23 = v2;
    while (1)
    {
      v18 = (void (*)(_BYTE *, _QWORD))sub_1DC408EF0();
      v15 = v25;
      (*(void (**)(char *))(v25 + 16))(v8);
      v18(v30, 0);
      v26(v8);
      if (v4)
        break;
      v4 = 0;
      (*(void (**)(char *, uint64_t))(v15 + 8))(v8, v6);
      v15 = v31;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1DC1128E8(0, *(_QWORD *)(v15 + 16) + 1, 1);
        v15 = v31;
      }
      v20 = *(_QWORD *)(v15 + 16);
      v19 = *(_QWORD *)(v15 + 24);
      if (v20 >= v19 >> 1)
      {
        sub_1DC1128E8(v19 > 1, v20 + 1, 1);
        v15 = v31;
      }
      *(_QWORD *)(v15 + 16) = v20 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v15+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(_QWORD *)(v10 + 72) * v20, v28, v24);
      v31 = v15;
      sub_1DC408EE4();
      --v16;
      v6 = v22;
      if (!v16)
        return v15;
    }
    (*(void (**)(char *, uint64_t))(v15 + 8))(v8, v6);
    swift_release();
    return v15;
  }
  __break(1u);
  return result;
}

uint64_t sub_1DC156AC0(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1DC156AEC(a1, a2, a3, a4, (uint64_t (*)(_QWORD))type metadata accessor for StockViewModel, (void (*)(BOOL, unint64_t, uint64_t))sub_1DC2AE858, (uint64_t (*)(_QWORD))MEMORY[0x1E0DAF0D0]);
}

uint64_t sub_1DC156AEC(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD), void (*a6)(BOOL, unint64_t, uint64_t), uint64_t (*a7)(_QWORD))
{
  uint64_t v7;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v23;
  void (*v24)(BOOL, unint64_t, uint64_t);
  uint64_t v25;
  uint64_t (*v26)(_QWORD);
  void (*v27)(uint64_t);
  uint64_t v28;
  uint64_t v29;

  v10 = v7;
  v27 = a1;
  v28 = a2;
  v26 = a5;
  v12 = a5(0);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v23 - v14;
  v16 = *(_QWORD *)(a3 + 16);
  v17 = MEMORY[0x1E0DEE9D8];
  if (v16)
  {
    v29 = MEMORY[0x1E0DEE9D8];
    v24 = a6;
    a6(0, v16, 0);
    v17 = v29;
    v18 = *(_QWORD *)(a7(0) - 8);
    v19 = a3 + ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80));
    v25 = *(_QWORD *)(v18 + 72);
    while (1)
    {
      v27(v19);
      if (v10)
        break;
      v10 = 0;
      v29 = v17;
      v21 = *(_QWORD *)(v17 + 16);
      v20 = *(_QWORD *)(v17 + 24);
      if (v21 >= v20 >> 1)
      {
        v24(v20 > 1, v21 + 1, 1);
        v17 = v29;
      }
      *(_QWORD *)(v17 + 16) = v21 + 1;
      sub_1DC092ED0((uint64_t)v15, v17+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))+ *(_QWORD *)(v13 + 72) * v21, v26);
      v19 += v25;
      if (!--v16)
        return v17;
    }
    swift_release();
  }
  return v17;
}

_QWORD *sub_1DC156C70(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[5];

  v4 = v3;
  v11[0] = MEMORY[0x1E0DEE9D8];
  sub_1DC089DA4(0, &qword_1EDB427F8, (uint64_t (*)(uint64_t))sub_1DC15795C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB3938]);
  swift_allocObject();
  v3[2] = sub_1DC402734();
  v3[3] = a1;
  v3[4] = a2;
  sub_1DC0824D4((uint64_t)a3, (uint64_t)(v3 + 5));
  swift_getObjectType();
  v8 = qword_1EDB2AA88;
  swift_unknownObjectRetain();
  if (v8 != -1)
    swift_once();
  swift_allocObject();
  swift_weakInit();
  sub_1DC1579A4();
  sub_1DC404AC8();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  swift_allocObject();
  swift_weakInit();
  sub_1DC4010E4();
  sub_1DC404A5C();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  if (qword_1EDB2AA40 != -1)
    swift_once();
  swift_allocObject();
  swift_weakInit();
  type metadata accessor for WatchlistMembershipCommandContext(0);
  sub_1DC404A5C();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  __swift_project_boxed_opaque_existential_1(a3, a3[3]);
  sub_1DC081B48(&qword_1EDB42878, v9, (uint64_t (*)(uint64_t))type metadata accessor for WatchlistMembershipMenuGroupOptionProvider, (uint64_t)&unk_1DC40F04C);
  swift_retain();
  sub_1DC400AB4();
  swift_release();
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a3);
  return v4;
}

uint64_t sub_1DC156F20()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v8[16];

  sub_1DC089DA4(0, (unint64_t *)&qword_1EDB28DE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF0D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v0);
  v2 = &v8[-v1 - 8];
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v4 = result;
    swift_getObjectType();
    if (qword_1EDB2AA88 != -1)
      swift_once();
    sub_1DC4010E4();
    sub_1DC404A74();
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v4 + 40), *(_QWORD *)(v4 + 64));
    v5 = sub_1DC400ACC();
    MEMORY[0x1E0C80A78](v5);
    *(&v7 - 2) = (uint64_t)v2;
    v6 = sub_1DC156AEC((void (*)(uint64_t))sub_1DC1581BC, (uint64_t)(&v7 - 4), v5, (uint64_t)v8, type metadata accessor for WatchlistMembershipCommandContext, (void (*)(BOOL, unint64_t, uint64_t))sub_1DC2AD464, (uint64_t (*)(_QWORD))MEMORY[0x1E0DAF270]);
    swift_bridgeObjectRelease();
    v7 = v6;
    swift_retain();
    sub_1DC402728();
    swift_release();
    sub_1DC133864((uint64_t)v2);
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1DC1570E8()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v8[16];

  sub_1DC089DA4(0, (unint64_t *)&qword_1EDB28DE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF0D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v0);
  v2 = &v8[-v1 - 8];
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v4 = result;
    swift_getObjectType();
    if (qword_1EDB2AA88 != -1)
      swift_once();
    sub_1DC4010E4();
    sub_1DC404A74();
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v4 + 40), *(_QWORD *)(v4 + 64));
    v5 = sub_1DC400ACC();
    MEMORY[0x1E0C80A78](v5);
    *(&v7 - 2) = (uint64_t)v2;
    v6 = sub_1DC156AEC((void (*)(uint64_t))sub_1DC1581BC, (uint64_t)(&v7 - 4), v5, (uint64_t)v8, type metadata accessor for WatchlistMembershipCommandContext, (void (*)(BOOL, unint64_t, uint64_t))sub_1DC2AD464, (uint64_t (*)(_QWORD))MEMORY[0x1E0DAF270]);
    swift_bridgeObjectRelease();
    v7 = v6;
    swift_retain();
    sub_1DC402728();
    swift_release();
    sub_1DC133864((uint64_t)v2);
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1DC1572B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  void *v17;
  void (*v18)(char *, uint64_t);
  void *v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD aBlock[6];

  v4 = sub_1DC40724C();
  v24 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1DC407270();
  v22 = *(_QWORD *)(v7 - 8);
  v23 = v7;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1DC407294();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v21 - v15;
  sub_1DC0ACADC();
  v17 = (void *)sub_1DC409148();
  sub_1DC407288();
  MEMORY[0x1DF0C7B14](v14, 1.0);
  v18 = *(void (**)(char *, uint64_t))(v11 + 8);
  v18(v14, v10);
  aBlock[4] = sub_1DC1579F8;
  aBlock[5] = a3;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1DC081B88;
  aBlock[3] = &block_descriptor_1;
  v19 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  sub_1DC407264();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  sub_1DC081B48(&qword_1EDB275A0, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  sub_1DC1130A0(0);
  sub_1DC081B48((unint64_t *)&qword_1EDB3F720, 255, (uint64_t (*)(uint64_t))sub_1DC1130A0, MEMORY[0x1E0DEAF38]);
  sub_1DC40964C();
  MEMORY[0x1DF0C9998](v16, v9, v6, v19);
  _Block_release(v19);

  (*(void (**)(char *, uint64_t))(v24 + 8))(v6, v4);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v9, v23);
  return ((uint64_t (*)(char *, uint64_t))v18)(v16, v10);
}

uint64_t sub_1DC157528()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v8[16];

  sub_1DC089DA4(0, (unint64_t *)&qword_1EDB28DE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF0D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v0);
  v2 = &v8[-v1 - 8];
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v4 = result;
    swift_getObjectType();
    if (qword_1EDB2AA88 != -1)
      swift_once();
    sub_1DC4010E4();
    sub_1DC404A74();
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v4 + 40), *(_QWORD *)(v4 + 64));
    v5 = sub_1DC400ACC();
    MEMORY[0x1E0C80A78](v5);
    *(&v7 - 2) = (uint64_t)v2;
    v6 = sub_1DC156AEC((void (*)(uint64_t))sub_1DC157A00, (uint64_t)(&v7 - 4), v5, (uint64_t)v8, type metadata accessor for WatchlistMembershipCommandContext, (void (*)(BOOL, unint64_t, uint64_t))sub_1DC2AD464, (uint64_t (*)(_QWORD))MEMORY[0x1E0DAF270]);
    swift_bridgeObjectRelease();
    v7 = v6;
    swift_retain();
    sub_1DC402728();
    swift_release();
    sub_1DC133864((uint64_t)v2);
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1DC1576F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1DC40124C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a3, a1, v6);
  v7 = type metadata accessor for WatchlistMembershipCommandContext(0);
  return sub_1DC1338B8(a2, a3 + *(int *)(v7 + 20));
}

uint64_t sub_1DC15775C()
{
  uint64_t v0;

  swift_release();
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 40);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for WatchlistMembershipMenuGroupOptionProvider()
{
  return objc_opt_self();
}

uint64_t sub_1DC1577B0()
{
  return swift_retain();
}

uint64_t sub_1DC1577BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[2];
  _BYTE v8[16];

  sub_1DC089DA4(0, (unint64_t *)&qword_1EDB28DE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF0D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)v7 - v2;
  swift_getObjectType();
  if (qword_1EDB2AA88 != -1)
    swift_once();
  sub_1DC4010E4();
  sub_1DC404A74();
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 64));
  v4 = sub_1DC400ACC();
  MEMORY[0x1E0C80A78](v4);
  v7[-2] = v3;
  v5 = sub_1DC156AEC((void (*)(uint64_t))sub_1DC1581BC, (uint64_t)&v7[-4], v4, (uint64_t)v8, type metadata accessor for WatchlistMembershipCommandContext, (void (*)(BOOL, unint64_t, uint64_t))sub_1DC2AD464, (uint64_t (*)(_QWORD))MEMORY[0x1E0DAF270]);
  swift_bridgeObjectRelease();
  v7[1] = v5;
  swift_retain();
  sub_1DC402728();
  swift_release();
  sub_1DC133864((uint64_t)v3);
  return swift_bridgeObjectRelease();
}

void sub_1DC15795C(uint64_t a1)
{
  sub_1DC089DA4(a1, &qword_1EDB428B0, type metadata accessor for WatchlistMembershipCommandContext, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
}

uint64_t sub_1DC157978()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1DC15799C()
{
  return sub_1DC156F20();
}

unint64_t sub_1DC1579A4()
{
  unint64_t result;

  result = qword_1EDB42818;
  if (!qword_1EDB42818)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC42B680, &type metadata for WatchlistCommandState);
    atomic_store(result, (unint64_t *)&qword_1EDB42818);
  }
  return result;
}

uint64_t sub_1DC1579E8()
{
  return sub_1DC1570E8();
}

uint64_t sub_1DC1579F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1DC1572B0(a1, a2, v2);
}

uint64_t sub_1DC1579F8()
{
  return sub_1DC157528();
}

uint64_t sub_1DC157A00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1DC1576F0(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_1DC157A1C()
{
  return sub_1DC081B48(&qword_1EDB2D770, 255, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedModel, (uint64_t)&unk_1DC429058);
}

uint64_t sub_1DC157A3C()
{
  return sub_1DC081B48(&qword_1EDB32160, 255, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedLayoutModel, (uint64_t)&unk_1DC413950);
}

void sub_1DC157A5C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB29D60)
  {
    type metadata accessor for StockFeedSectionDescriptor();
    type metadata accessor for StockFeedModel();
    sub_1DC081B48(&qword_1EDB36EE0, 255, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedSectionDescriptor, (uint64_t)&unk_1DC4167B0);
    sub_1DC157A1C();
    v0 = sub_1DC4047B0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB29D60);
  }
}

uint64_t sub_1DC157B04()
{
  return sub_1DC081B48((unint64_t *)&unk_1EDB29D50, 255, (uint64_t (*)(uint64_t))sub_1DC157A5C, MEMORY[0x1E0DB7B98]);
}

uint64_t sub_1DC157B24()
{
  return sub_1DC081B48(&qword_1EDB2D860, 255, type metadata accessor for StockListModel, (uint64_t)&unk_1DC41C258);
}

uint64_t sub_1DC157B44()
{
  return sub_1DC081B48((unint64_t *)&unk_1F0350F30, 255, (uint64_t (*)(uint64_t))type metadata accessor for ManageWatchlistsModel, (uint64_t)&unk_1DC423338);
}

void sub_1DC157B64()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F034C428)
  {
    type metadata accessor for ManageWatchlistsLayoutSectionDescriptor();
    type metadata accessor for ManageWatchlistsLayoutModel();
    sub_1DC081B48(&qword_1F034C430, 255, (uint64_t (*)(uint64_t))type metadata accessor for ManageWatchlistsLayoutSectionDescriptor, (uint64_t)&unk_1DC421E88);
    sub_1DC081B48(&qword_1F034C018, 255, (uint64_t (*)(uint64_t))type metadata accessor for ManageWatchlistsLayoutModel, (uint64_t)&unk_1DC4134C8);
    v0 = sub_1DC40532C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1F034C428);
  }
}

void sub_1DC157C34()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F0350F40)
  {
    type metadata accessor for ManageWatchlistsModel();
    sub_1DC142C7C();
    sub_1DC157B44();
    v0 = sub_1DC406D48();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1F0350F40);
  }
}

void sub_1DC157CB8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB41DF0)
  {
    type metadata accessor for StockSearchSectionDescriptor();
    type metadata accessor for StockSearchModel();
    sub_1DC081B48(&qword_1EDB389D0, 255, (uint64_t (*)(uint64_t))type metadata accessor for StockSearchSectionDescriptor, (uint64_t)&unk_1DC41CD30);
    sub_1DC125B3C();
    v0 = sub_1DC4047B0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB41DF0);
  }
}

void sub_1DC157D60()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB42988)
  {
    type metadata accessor for StockSearchLayoutSectionDescriptor();
    type metadata accessor for StockSearchLayoutModel();
    sub_1DC081B48(&qword_1EDB3CB80, 255, (uint64_t (*)(uint64_t))type metadata accessor for StockSearchLayoutSectionDescriptor, (uint64_t)&unk_1DC419DE0);
    sub_1DC11DFFC();
    v0 = sub_1DC40532C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB42988);
  }
}

uint64_t sub_1DC157E08()
{
  return sub_1DC081B48(&qword_1EDB41E20, 255, (uint64_t (*)(uint64_t))sub_1DC0D9468, MEMORY[0x1E0DBC7C8]);
}

uint64_t sub_1DC157E28()
{
  return sub_1DC081B48(&qword_1F034C448, 255, (uint64_t (*)(uint64_t))sub_1DC157CB8, MEMORY[0x1E0DB7B98]);
}

uint64_t sub_1DC157E48()
{
  return sub_1DC081B48((unint64_t *)&unk_1EDB32A60, 255, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedLayoutModel, (uint64_t)&unk_1DC430440);
}

void sub_1DC157E68()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB2AB10)
  {
    type metadata accessor for StockFeedSectionDescriptor();
    type metadata accessor for StockFeedModel();
    sub_1DC081B48(&qword_1EDB36EE0, 255, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedSectionDescriptor, (uint64_t)&unk_1DC4167B0);
    sub_1DC157A1C();
    v0 = sub_1DC406D48();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB2AB10);
  }
}

uint64_t sub_1DC157F10()
{
  return sub_1DC081B48((unint64_t *)&unk_1EDB2AB00, 255, (uint64_t (*)(uint64_t))sub_1DC157E68, MEMORY[0x1E0DBC7C8]);
}

void sub_1DC157F30(void (*a1)(char *), uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *);
  uint64_t v30;
  uint64_t v31;
  int64_t v32;
  uint64_t v33;
  uint64_t v34;

  v6 = v5;
  v30 = a2;
  v31 = a3;
  v29 = a1;
  v9 = sub_1DC40124C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC08CBF0(0, (unint64_t *)&qword_1F034C020, (uint64_t (*)(uint64_t))type metadata accessor for ManageWatchlistsModel, sub_1DC157B44, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6EE8]);
  v27 = v13;
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v24 - v15;
  v32 = a5 >> 1;
  v33 = a4;
  v17 = (a5 >> 1) - a4;
  if (__OFSUB__(a5 >> 1, a4))
    goto LABEL_19;
  if (v17)
  {
    v34 = MEMORY[0x1E0DEE9D8];
    v28 = (a5 >> 1) - a4;
    sub_1DC2AE8A0(0, v17 & ~(v17 >> 63), 0);
    v18 = v28;
    if (v28 < 0)
    {
LABEL_20:
      __break(1u);
      return;
    }
    v19 = 0;
    v25 = v16;
    v26 = v9;
    while (1)
    {
      v20 = v19 + 1;
      if (__OFADD__(v19, 1))
        break;
      if (v33 + v19 >= v32 || v19 >= v18)
        goto LABEL_18;
      (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v31 + *(_QWORD *)(v10 + 72) * (v33 + v19), v9);
      v29(v12);
      if (v6)
      {
        (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
        swift_release();
        return;
      }
      v6 = 0;
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      v21 = v34;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1DC2AE8A0(0, *(_QWORD *)(v21 + 16) + 1, 1);
        v21 = v34;
      }
      v23 = *(_QWORD *)(v21 + 16);
      v22 = *(_QWORD *)(v21 + 24);
      if (v23 >= v22 >> 1)
      {
        sub_1DC2AE8A0(v22 > 1, v23 + 1, 1);
        v21 = v34;
      }
      *(_QWORD *)(v21 + 16) = v23 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(v21+ ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80))+ *(_QWORD *)(v14 + 72) * v23, v25, v27);
      v34 = v21;
      ++v19;
      v18 = v28;
      v9 = v26;
      if (v20 == v28)
        return;
    }
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
}

uint64_t sub_1DC15819C()
{
  return sub_1DC081B48((unint64_t *)&unk_1EDB2AB30, 255, (uint64_t (*)(uint64_t))sub_1DC12E6FC, MEMORY[0x1E0DBC7C8]);
}

uint64_t sub_1DC1581BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DC157A00(a1, a2);
}

uint64_t sub_1DC1581D0()
{
  uint64_t v0;
  _BYTE v2[24];
  uint64_t v3;

  sub_1DC4078A0();
  sub_1DC407894();
  sub_1DC157E68();
  sub_1DC406CF4();
  if (v3)
  {
    sub_1DC407420();
    swift_dynamicCast();
  }
  else
  {
    sub_1DC150744((uint64_t)v2);
  }
  type metadata accessor for StockFeedServiceConfig();
  sub_1DC080808(&qword_1EDB33F10, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedServiceConfig, (uint64_t)&unk_1DC411510);
  v0 = sub_1DC407888();
  swift_release();
  swift_release();
  return v0;
}

_QWORD *initializeBufferWithCopyOfBuffer for WatchlistDeletionAlert(_QWORD *a1, _QWORD *a2)
{
  void *v3;
  id v4;

  v3 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  v4 = v3;
  return a1;
}

void destroy for WatchlistDeletionAlert(uint64_t a1)
{
  swift_bridgeObjectRelease();

}

_QWORD *assignWithCopy for WatchlistDeletionAlert(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (void *)a2[1];
  v5 = (void *)a1[1];
  a1[1] = v4;
  v6 = v4;

  return a1;
}

uint64_t assignWithTake for WatchlistDeletionAlert(uint64_t a1, _OWORD *a2)
{
  void *v4;

  swift_bridgeObjectRelease();
  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  return a1;
}

uint64_t getEnumTagSinglePayload for StockChartModelFactoryProviderOptions(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for StockChartModelFactoryProviderOptions(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for WatchlistDeletionAlert()
{
  return &type metadata for WatchlistDeletionAlert;
}

uint64_t sub_1DC158444()
{
  uint64_t v0;

  return sub_1DC158584(*(void **)(v0 + 8));
}

uint64_t sub_1DC15844C()
{
  uint64_t v0;

  return sub_1DC158704(*(void **)(v0 + 8));
}

BOOL sub_1DC158454()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 8), sel_horizontalSizeClass) != (id)1;
}

uint64_t sub_1DC15847C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *MEMORY[0x1E0DB9130];
  v3 = sub_1DC4050F8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

uint64_t sub_1DC1584C0()
{
  uint64_t v0;

  return sub_1DC158824(*(void **)(v0 + 8));
}

uint64_t sub_1DC1584C8()
{
  uint64_t ObjCClassFromMetadata;
  id v1;
  uint64_t v2;

  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v2 = sub_1DC3FFC80();

  return v2;
}

uint64_t sub_1DC158584(void *a1)
{
  uint64_t ObjCClassFromMetadata;
  id v2;
  uint64_t v3;

  if (objc_msgSend(a1, sel_horizontalSizeClass) == (id)1)
    sub_1DC401114();
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v2 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v3 = sub_1DC3FFC80();

  return v3;
}

uint64_t sub_1DC158704(void *a1)
{
  uint64_t v1;
  uint64_t ObjCClassFromMetadata;
  id v3;

  if (objc_msgSend(a1, sel_horizontalSizeClass) == (id)1)
    return 0;
  sub_1DC401114();
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v3 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v1 = sub_1DC3FFC80();

  return v1;
}

uint64_t sub_1DC158824(void *a1)
{
  uint64_t ObjCClassFromMetadata;
  id v2;
  uint64_t v3;

  objc_msgSend(a1, sel_horizontalSizeClass);
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v2 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v3 = sub_1DC3FFC80();

  return v3;
}

uint64_t sub_1DC158930(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  v2 = a1;
  if (a1)
  {
    if (a1 == 1)
      v3 = 0x746867696CLL;
    else
      v3 = 1802658148;
    if (v2 == 1)
      v4 = 0xE500000000000000;
    else
      v4 = 0xE400000000000000;
    v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1)
        v6 = 0x746867696CLL;
      else
        v6 = 1802658148;
      if (v5 == 1)
        v7 = 0xE500000000000000;
      else
        v7 = 0xE400000000000000;
      if (v3 != v6)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v4 = 0xE700000000000000;
    v3 = 0x746C7561666564;
    v5 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE700000000000000;
  if (v3 != 0x746C7561666564)
  {
LABEL_21:
    v8 = sub_1DC4099E8();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7)
    goto LABEL_21;
  v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1DC158A30(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2;
  unint64_t v3;
  unint64_t v4;
  int v5;
  unint64_t v6;
  unint64_t v7;
  char v8;

  v2 = a1;
  if (a1)
  {
    if (a1 == 1)
      v3 = 0xD000000000000012;
    else
      v3 = 0x6E696C6C6F726373;
    if (v2 == 1)
      v4 = 0x80000001DC432EF0;
    else
      v4 = 0xE900000000000067;
    v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1)
        v6 = 0xD000000000000012;
      else
        v6 = 0x6E696C6C6F726373;
      if (v5 == 1)
        v7 = 0x80000001DC432EF0;
      else
        v7 = 0xE900000000000067;
      if (v3 != v6)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v4 = 0xE700000000000000;
    v3 = 0x676E6974696465;
    v5 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE700000000000000;
  if (v3 != 0x676E6974696465)
  {
LABEL_21:
    v8 = sub_1DC4099E8();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7)
    goto LABEL_21;
  v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1DC158B50(char a1, char a2)
{
  BOOL v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0xD000000000000010;
  else
    v3 = 0x6565467961646F74;
  if (v2)
    v4 = 0xEF6769666E6F4364;
  else
    v4 = 0x80000001DC432E80;
  if ((a2 & 1) != 0)
    v5 = 0xD000000000000010;
  else
    v5 = 0x6565467961646F74;
  if ((a2 & 1) != 0)
    v6 = 0x80000001DC432E80;
  else
    v6 = 0xEF6769666E6F4364;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1DC4099E8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1DC158C04(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x6E6F4373626F6E6BLL;
  else
    v3 = 0x666E6F4364656566;
  if (v2)
    v4 = 0xEA00000000006769;
  else
    v4 = 0xEB00000000676966;
  if ((a2 & 1) != 0)
    v5 = 0x6E6F4373626F6E6BLL;
  else
    v5 = 0x666E6F4364656566;
  if ((a2 & 1) != 0)
    v6 = 0xEB00000000676966;
  else
    v6 = 0xEA00000000006769;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1DC4099E8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1DC158CB4(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x6863746157746F6ELL;
  else
    v3 = 0x676E696863746177;
  if (v2)
    v4 = 0xE800000000000000;
  else
    v4 = 0xEB00000000676E69;
  if ((a2 & 1) != 0)
    v5 = 0x6863746157746F6ELL;
  else
    v5 = 0x676E696863746177;
  if ((a2 & 1) != 0)
    v6 = 0xEB00000000676E69;
  else
    v6 = 0xE800000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1DC4099E8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1DC158D64(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2;
  unint64_t v3;
  int v4;
  unint64_t v5;
  unint64_t v6;
  int v7;
  char v8;

  v2 = 0xD000000000000010;
  v3 = 0x80000001DC432ED0;
  v4 = a1;
  if (a1)
  {
    if (a1 == 1)
      v5 = 0x6B636F7473;
    else
      v5 = 0x64657461727563;
    if (v4 == 1)
      v6 = 0xE500000000000000;
    else
      v6 = 0xE700000000000000;
    v7 = a2;
    if (!a2)
      goto LABEL_15;
    goto LABEL_9;
  }
  v5 = 0xD000000000000010;
  v6 = 0x80000001DC432ED0;
  v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1)
      v2 = 0x6B636F7473;
    else
      v2 = 0x64657461727563;
    if (v7 == 1)
      v3 = 0xE500000000000000;
    else
      v3 = 0xE700000000000000;
  }
LABEL_15:
  if (v5 == v2 && v6 == v3)
    v8 = 1;
  else
    v8 = sub_1DC4099E8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1DC158E68(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x70756F724778616DLL;
  else
    v3 = 0x6F6E4B70756F7267;
  if (v2)
    v4 = 0xEA00000000007362;
  else
    v4 = 0xE900000000000073;
  if ((a2 & 1) != 0)
    v5 = 0x70756F724778616DLL;
  else
    v5 = 0x6F6E4B70756F7267;
  if ((a2 & 1) != 0)
    v6 = 0xE900000000000073;
  else
    v6 = 0xEA00000000007362;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1DC4099E8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

void sub_1DC158F14(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1DC158F70(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1DC158FDC + 4 * byte_1DC40F175[a2]))(0x6E69727065756C62);
}

uint64_t sub_1DC158FDC(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x6E69727065756C62 && v1 == 0xE900000000000074)
    v2 = 1;
  else
    v2 = sub_1DC4099E8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_1DC159094(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1DC1590F0(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1DC159140 + 4 * byte_1DC40F17E[a2]))(0x6B636F7473);
}

uint64_t sub_1DC159140(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x6B636F7473 && v1 == 0xE500000000000000)
    v2 = 1;
  else
    v2 = sub_1DC4099E8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1DC1591D8(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  v2 = a1;
  if (a1)
  {
    if (a1 == 1)
      v3 = 0x63616C507377656ELL;
    else
      v3 = 25697;
    if (v2 == 1)
      v4 = 0xEB00000000647261;
    else
      v4 = 0xE200000000000000;
    v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1)
        v6 = 0x63616C507377656ELL;
      else
        v6 = 25697;
      if (v5 == 1)
        v7 = 0xEB00000000647261;
      else
        v7 = 0xE200000000000000;
      if (v3 != v6)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v4 = 0xE400000000000000;
    v3 = 1937204590;
    v5 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE400000000000000;
  if (v3 != 1937204590)
  {
LABEL_21:
    v8 = sub_1DC4099E8();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7)
    goto LABEL_21;
  v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

void sub_1DC1592D8(char a1)
{
  __asm { BR              X11 }
}

uint64_t sub_1DC159328(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1DC15938C + 4 * byte_1DC40F186[a2]))(0xD000000000000012);
}

uint64_t sub_1DC15938C(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0xD000000000000012 && v1 == 0x80000001DC432E10)
    v2 = 1;
  else
    v2 = sub_1DC4099E8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1DC15942C(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x6B636F7473;
  else
    v3 = 0x69726F7453706F74;
  if (v2)
    v4 = 0xEA00000000007365;
  else
    v4 = 0xE500000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x6B636F7473;
  else
    v5 = 0x69726F7453706F74;
  if ((a2 & 1) != 0)
    v6 = 0xE500000000000000;
  else
    v6 = 0xEA00000000007365;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1DC4099E8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1DC1594D0(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 1853321060;
  else
    v3 = 28789;
  if (v2)
    v4 = 0xE200000000000000;
  else
    v4 = 0xE400000000000000;
  if ((a2 & 1) != 0)
    v5 = 1853321060;
  else
    v5 = 28789;
  if ((a2 & 1) != 0)
    v6 = 0xE400000000000000;
  else
    v6 = 0xE200000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1DC4099E8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1DC159564(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x697370616C6C6F63;
  else
    v3 = 0x6465786966;
  if (v2)
    v4 = 0xE500000000000000;
  else
    v4 = 0xEA0000000000676ELL;
  if ((a2 & 1) != 0)
    v5 = 0x697370616C6C6F63;
  else
    v5 = 0x6465786966;
  if ((a2 & 1) != 0)
    v6 = 0xEA0000000000676ELL;
  else
    v6 = 0xE500000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1DC4099E8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1DC159608(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x446873696C627570;
  else
    v3 = 0x7370756F7267;
  if (v2)
    v4 = 0xE600000000000000;
  else
    v4 = 0xEB00000000657461;
  if ((a2 & 1) != 0)
    v5 = 0x446873696C627570;
  else
    v5 = 0x7370756F7267;
  if ((a2 & 1) != 0)
    v6 = 0xEB00000000657461;
  else
    v6 = 0xE600000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1DC4099E8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1DC1596B0(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x6465736F6C63;
  else
    v3 = 1852141679;
  if (v2)
    v4 = 0xE400000000000000;
  else
    v4 = 0xE600000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x6465736F6C63;
  else
    v5 = 1852141679;
  if ((a2 & 1) != 0)
    v6 = 0xE600000000000000;
  else
    v6 = 0xE400000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1DC4099E8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1DC159748(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 1835365481;
  else
    v3 = 7368564;
  if (v2)
    v4 = 0xE300000000000000;
  else
    v4 = 0xE400000000000000;
  if ((a2 & 1) != 0)
    v5 = 1835365481;
  else
    v5 = 7368564;
  if ((a2 & 1) != 0)
    v6 = 0xE400000000000000;
  else
    v6 = 0xE300000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1DC4099E8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

void sub_1DC1597DC(char a1)
{
  __asm { BR              X12 }
}

uint64_t sub_1DC15982C(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1DC1598A8 + 4 * byte_1DC40F190[a2]))(0xD00000000000001ELL);
}

uint64_t sub_1DC1598A8(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0xD00000000000001ELL && v1 == 0x80000001DC432CD0)
    v2 = 1;
  else
    v2 = sub_1DC4099E8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1DC159960(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x756F59726F66;
  else
    v3 = 0x73694C6B636F7473;
  if (v2)
    v4 = 0xE900000000000074;
  else
    v4 = 0xE600000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x756F59726F66;
  else
    v5 = 0x73694C6B636F7473;
  if ((a2 & 1) != 0)
    v6 = 0xE600000000000000;
  else
    v6 = 0xE900000000000074;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1DC4099E8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1DC159A04(char a1, char a2)
{
  BOOL v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x657370616C6C6F63;
  else
    v3 = 0xD000000000000010;
  if (v2)
    v4 = 0x80000001DC432DB0;
  else
    v4 = 0xEF72616265646953;
  if ((a2 & 1) != 0)
    v5 = 0x657370616C6C6F63;
  else
    v5 = 0xD000000000000010;
  if ((a2 & 1) != 0)
    v6 = 0xEF72616265646953;
  else
    v6 = 0x80000001DC432DB0;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1DC4099E8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1DC159AB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t WatchlistViewLayoutAttributes;
  uint64_t v5;
  uint64_t WatchlistViewModel;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t (*v56)(uint64_t);
  int EnumCaseMultiPayload;
  uint64_t v58;
  char *v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  void *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  id v73;
  void *v74;
  _QWORD *v75;
  _BYTE *v76;
  char *v77;
  id v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  char *v85;
  id v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t (*v98)(void);
  char *v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t result;
  uint64_t v105;
  void *v106;
  void (*v107)(char *, _QWORD, uint64_t);
  uint64_t v108;
  char *v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  __int128 v114;
  uint64_t v115;
  void *v116;
  void *v117;
  uint64_t v118;
  uint64_t v119;
  void (*v120)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v121;
  uint64_t v122;
  id v123;
  void *v124;
  void (*v125)(_QWORD);
  _QWORD *v126;
  _BYTE *v127;
  char *v128;
  id v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t (*v142)(void);
  char *v143;
  uint64_t v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  void *v148;
  void (*v149)(char *, _QWORD, uint64_t);
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  double *v153;
  void *v154;
  void *v155;
  char *v156;
  char *v157;
  id v158;
  uint64_t v159;
  uint64_t v160;
  id v161;
  void *v162;
  uint64_t v163;
  _QWORD *v164;
  uint64_t v165;
  void *v166;
  id v167;
  void *v168;
  uint64_t v169;
  uint64_t v170;
  _QWORD *v171;
  uint64_t v172;
  uint64_t v173;
  void *v174;
  void *v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  _QWORD *v180;
  uint64_t v181;
  char *v182;
  uint64_t v183;
  char *v184;
  uint64_t v185;
  uint64_t v186;
  char *v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  char *v191;
  uint64_t v192;
  char *v193;
  void (*v194)(_QWORD);
  uint64_t v195;
  uint64_t v196;
  char *v197;
  uint64_t v198;
  uint64_t v199;
  char *v200;
  char *v201;
  uint64_t v202;
  uint64_t v203;
  char *v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  char *v208;
  uint64_t v209;
  char *v210;
  uint64_t v211;
  uint64_t v212;
  char *v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  _QWORD *v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  __int128 v222;
  __int128 v223;
  char v224;
  __int128 v225;
  __int128 v226;
  __int128 v227;
  __int128 v228;
  __int128 v229;
  __int128 v230;
  __int128 v231;
  __int128 v232;
  __int128 v233;
  __int128 v234;
  uint64_t v235;

  v218 = a4;
  v214 = a3;
  v190 = a1;
  WatchlistViewLayoutAttributes = type metadata accessor for CreateWatchlistViewLayoutAttributes();
  MEMORY[0x1E0C80A78](WatchlistViewLayoutAttributes);
  v207 = (uint64_t)&v177 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  WatchlistViewModel = type metadata accessor for CreateWatchlistViewModel();
  MEMORY[0x1E0C80A78](WatchlistViewModel);
  v183 = (uint64_t)&v177 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC08CBF0(0, (unint64_t *)&qword_1F034C020, (uint64_t (*)(uint64_t))type metadata accessor for ManageWatchlistsModel, sub_1DC157B44, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6EE8]);
  v188 = *(_QWORD *)(v8 - 8);
  v189 = v8;
  v186 = *(_QWORD *)(v188 + 64);
  MEMORY[0x1E0C80A78](v8);
  v187 = (char *)&v177 - v9;
  v181 = sub_1DC40442C();
  v179 = *(_QWORD *)(v181 - 8);
  MEMORY[0x1E0C80A78](v181);
  v180 = (uint64_t *)((char *)&v177 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = sub_1DC404414();
  v211 = *(_QWORD *)(v11 - 8);
  v212 = v11;
  MEMORY[0x1E0C80A78](v11);
  v213 = (char *)&v177 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC15C39C(0, (unint64_t *)&qword_1F034C428, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB9518]);
  v205 = *(_QWORD *)(v13 - 8);
  v206 = v13;
  MEMORY[0x1E0C80A78](v13);
  v204 = (char *)&v177 - v14;
  sub_1DC15C39C(0, &qword_1F034C560, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB76E8]);
  v202 = *(_QWORD *)(v15 - 8);
  v203 = v15;
  MEMORY[0x1E0C80A78](v15);
  v201 = (char *)&v177 - v16;
  v17 = type metadata accessor for ManageWatchlistsContentMode(0);
  MEMORY[0x1E0C80A78](v17);
  v178 = (uint64_t)&v177 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v192 = (uint64_t)&v177 - v20;
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v177 - v22;
  MEMORY[0x1E0C80A78](v24);
  v185 = (uint64_t)&v177 - v25;
  sub_1DC092F50(0, (unint64_t *)&qword_1EDB28DE0, (void (*)(uint64_t))MEMORY[0x1E0DAF0D0]);
  MEMORY[0x1E0C80A78](v26);
  v193 = (char *)&v177 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v28);
  v184 = (char *)&v177 - v29;
  v30 = sub_1DC40124C();
  v215 = *(_QWORD *)(v30 - 8);
  v216 = v30;
  MEMORY[0x1E0C80A78](v30);
  v197 = (char *)&v177 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v32);
  v182 = (char *)&v177 - v33;
  sub_1DC092F50(0, &qword_1F034C568, (void (*)(uint64_t))type metadata accessor for WatchlistMembershipCommandContext);
  MEMORY[0x1E0C80A78](v34);
  v191 = (char *)&v177 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v36);
  v38 = (char *)&v177 - v37;
  v39 = sub_1DC405848();
  v198 = *(_QWORD *)(v39 - 8);
  v199 = v39;
  MEMORY[0x1E0C80A78](v39);
  v200 = (char *)&v177 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = sub_1DC404B58();
  v195 = *(_QWORD *)(v41 - 8);
  v196 = v41;
  MEMORY[0x1E0C80A78](v41);
  v43 = (char *)&v177 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  v209 = sub_1DC4043FC();
  v194 = *(void (**)(_QWORD))(v209 - 8);
  MEMORY[0x1E0C80A78](v209);
  v208 = (char *)&v177 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC092F50(0, &qword_1EDB28B50, (void (*)(uint64_t))MEMORY[0x1E0CB1658]);
  MEMORY[0x1E0C80A78](v45);
  v47 = (char *)&v177 - v46;
  v48 = type metadata accessor for WatchlistCellViewModel(0);
  MEMORY[0x1E0C80A78](v48);
  v210 = (char *)&v177 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v50);
  v52 = (char *)&v177 - v51;
  v53 = type metadata accessor for ManageWatchlistsLayoutModel();
  MEMORY[0x1E0C80A78](v53);
  v55 = (char *)&v177 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC08CBF0(0, (unint64_t *)&qword_1F034C010, v56, sub_1DC15BFB4, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB88A0]);
  sub_1DC404DE0();
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    v197 = v38;
    v210 = v23;
    sub_1DC15C090();
    v109 = &v55[*(int *)(v108 + 48)];
    v110 = *((_OWORD *)v109 + 9);
    v233 = *((_OWORD *)v109 + 8);
    v234 = v110;
    v235 = *((_QWORD *)v109 + 20);
    v111 = *((_OWORD *)v109 + 5);
    v229 = *((_OWORD *)v109 + 4);
    v230 = v111;
    v112 = *((_OWORD *)v109 + 7);
    v231 = *((_OWORD *)v109 + 6);
    v232 = v112;
    v113 = *((_OWORD *)v109 + 1);
    v225 = *(_OWORD *)v109;
    v226 = v113;
    v114 = *((_OWORD *)v109 + 3);
    v227 = *((_OWORD *)v109 + 2);
    v228 = v114;
    sub_1DC092ED0((uint64_t)v55, (uint64_t)v52, type metadata accessor for WatchlistCellViewModel);
    sub_1DC08CBF0(0, &qword_1F034C590, (uint64_t (*)(uint64_t))type metadata accessor for WatchlistCellView, sub_1DC15C0F8, MEMORY[0x1E0DB72F0]);
    v207 = v48;
    v115 = v218;
    v116 = (void *)sub_1DC408F14();
    v117 = (void *)sub_1DC40448C();
    v118 = sub_1DC400280();
    v119 = *(_QWORD *)(v118 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v119 + 16))(v47, v115, v118);
    v120 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v119 + 56);
    v121 = 1;
    v120(v47, 0, 1, v118);
    v122 = (uint64_t)v117 + OBJC_IVAR____TtC8StocksUI17WatchlistCellView_indexPath;
    swift_beginAccess();
    sub_1DC15C114((uint64_t)v47, v122);
    swift_endAccess();

    v123 = objc_msgSend((id)objc_opt_self(), sel_secondarySystemBackgroundColor);
    objc_msgSend(v116, sel_setBackgroundColor_, v123);

    v124 = (void *)sub_1DC404498();
    v125 = (void (*)(_QWORD))*((_QWORD *)v194 + 13);
    LODWORD(v193) = *MEMORY[0x1E0DB71F8];
    v194 = v125;
    v125(v208);
    sub_1DC404408();

    (*(void (**)(char *, _QWORD, uint64_t))(v195 + 104))(v43, *MEMORY[0x1E0DB82B0], v196);
    sub_1DC404480();
    v126 = v217;
    v127 = (_BYTE *)sub_1DC40448C();
    sub_1DC22ACFC((uint64_t)v52, (uint64_t)&v225, v127);

    sub_1DC15C168(v116);
    v128 = (char *)sub_1DC40448C();
    v129 = *(id *)&v128[OBJC_IVAR____TtC8StocksUI17WatchlistCellView_selectionButton];

    v130 = v126[13];
    v195 = v126[14];
    v196 = v130;
    (*(void (**)(char *, _QWORD, uint64_t))(v198 + 104))(v200, *MEMORY[0x1E0DB9EF8], v199);
    v131 = v126[16];
    v220 = sub_1DC4018AC();
    v221 = sub_1DC080808((unint64_t *)&qword_1EDB29180, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8638], MEMORY[0x1E0D59B68]);
    v219 = v131;
    v222 = 0u;
    v223 = 0u;
    v224 = 1;
    sub_1DC405434();
    swift_allocObject();
    swift_retain();
    sub_1DC40541C();
    v200 = v52;
    v132 = v182;
    (*(void (**)(void))(v215 + 16))();
    v133 = (uint64_t)v126 + OBJC_IVAR____TtC8StocksUI41ManageWatchlistsBlueprintViewCellProvider_contentMode;
    v134 = v185;
    sub_1DC0990BC(v133, v185, type metadata accessor for ManageWatchlistsContentMode);
    sub_1DC15C2FC();
    v136 = v135;
    v198 = *(_QWORD *)(*(_QWORD *)(v135 - 8) + 48);
    LODWORD(v131) = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v198)(v134, 1, v135);
    v137 = sub_1DC4010E4();
    v138 = *(_QWORD *)(v137 - 8);
    v139 = (uint64_t)v184;
    v199 = v137;
    v214 = v138;
    if ((_DWORD)v131 != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v214 + 32))(v184, v134, v137);
      v138 = v214;
      v137 = v199;
      v121 = 0;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v138 + 56))(v139, v121, 1, v137);
    v140 = (uint64_t)v197;
    (*(void (**)(char *, char *, uint64_t))(v215 + 32))(v197, v132, v216);
    v141 = type metadata accessor for WatchlistMembershipCommandContext(0);
    sub_1DC15C348(v139, v140 + *(int *)(v141 + 20));
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v141 - 8) + 56))(v140, 0, 1, v141);
    sub_1DC404D50();

    swift_release();
    sub_1DC092F14(v140, &qword_1F034C568, (void (*)(uint64_t))type metadata accessor for WatchlistMembershipCommandContext);
    v219 = v217[15];
    v142 = MEMORY[0x1E0DB9980];
    sub_1DC15C39C(0, (unint64_t *)&qword_1F034C5A0, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB9980]);
    sub_1DC15C444(&qword_1F034C5A8, (unint64_t *)&qword_1F034C5A0, (uint64_t (*)(uint64_t, _QWORD *))v142, MEMORY[0x1E0DB9998]);
    v143 = v201;
    sub_1DC405C5C();
    sub_1DC400274();
    v144 = v203;
    v145 = v204;
    sub_1DC404588();
    (*(void (**)(char *, uint64_t))(v202 + 8))(v143, v144);
    sub_1DC15C444(&qword_1F034C5B0, (unint64_t *)&qword_1F034C428, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB9518], MEMORY[0x1E0DB9528]);
    v146 = v206;
    sub_1DC408E90();
    sub_1DC408ED8();
    v147 = sub_1DC408ECC();
    (*(void (**)(char *, uint64_t))(v205 + 8))(v145, v146);
    v148 = (void *)sub_1DC404498();
    v149 = *(void (**)(char *, _QWORD, uint64_t))(v211 + 104);
    if (v147 == 1)
    {
      v149(v213, *MEMORY[0x1E0DB7218], v212);
      sub_1DC404420();
    }
    else
    {
      v149(v213, *MEMORY[0x1E0DB7220], v212);
      sub_1DC404420();

      v162 = (void *)sub_1DC404498();
      v164 = v180;
      v163 = v181;
      *v180 = 0x4000000000000000;
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(v179 + 104))(v164, *MEMORY[0x1E0DB7248], v163);
      sub_1DC404438();

      v148 = (void *)sub_1DC404498();
      ((void (*)(char *, _QWORD, uint64_t))v194)(v208, v193, v209);
      sub_1DC404408();
    }
    v165 = (uint64_t)v200;

    v166 = (void *)sub_1DC40448C();
    objc_msgSend(v166, sel_setIsAccessibilityElement_, 0);

    v167 = v116;
    swift_bridgeObjectRetain();
    v168 = (void *)sub_1DC408A1C();
    swift_bridgeObjectRelease();
    objc_msgSend(v167, sel_setAccessibilityLabel_, v168);

    v169 = (uint64_t)v210;
    sub_1DC0990BC(v165 + *(int *)(v207 + 32), (uint64_t)v210, type metadata accessor for ManageWatchlistsContentMode);
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v198)(v169, 1, v136) == 1)
    {
      sub_1DC0926D8(v165, type metadata accessor for WatchlistCellViewModel);
    }
    else
    {
      sub_1DC15C484(v167);
      sub_1DC0926D8(v165, type metadata accessor for WatchlistCellViewModel);
      (*(void (**)(uint64_t, uint64_t))(v214 + 8))(v169, v199);
    }
    return (uint64_t)v167;
  }
  if (EnumCaseMultiPayload != 1)
  {
    sub_1DC15BFD4();
    v151 = (uint64_t)&v55[*(int *)(v150 + 48)];
    v152 = v183;
    sub_1DC092ED0((uint64_t)v55, v183, (uint64_t (*)(_QWORD))type metadata accessor for CreateWatchlistViewModel);
    v153 = (double *)v207;
    sub_1DC092ED0(v151, v207, (uint64_t (*)(_QWORD))type metadata accessor for CreateWatchlistViewLayoutAttributes);
    sub_1DC08CBF0(0, &qword_1F034C578, (uint64_t (*)(uint64_t))type metadata accessor for CreateWatchlistView, sub_1DC15C044, MEMORY[0x1E0DB72F0]);
    v154 = (void *)sub_1DC408F14();
    v155 = (void *)sub_1DC404498();
    (*(void (**)(char *, _QWORD, uint64_t))(v211 + 104))(v213, *MEMORY[0x1E0DB7218], v212);
    sub_1DC404420();

    v156 = (char *)sub_1DC40448C();
    sub_1DC2E29A0(v152, v153, v156);

    v157 = (char *)sub_1DC40448C();
    v158 = *(id *)&v157[OBJC_IVAR____TtC8StocksUI19CreateWatchlistView_onTap];

    v159 = swift_allocObject();
    swift_weakInit();
    v160 = swift_allocObject();
    *(_QWORD *)(v160 + 16) = v159;
    *(_QWORD *)(v160 + 24) = v154;
    v161 = v154;

    swift_release();
    sub_1DC0926D8((uint64_t)v153, (uint64_t (*)(_QWORD))type metadata accessor for CreateWatchlistViewLayoutAttributes);
    sub_1DC0926D8(v152, (uint64_t (*)(_QWORD))type metadata accessor for CreateWatchlistViewModel);
    return (uint64_t)v161;
  }
  sub_1DC15C090();
  v59 = &v55[*(int *)(v58 + 48)];
  v60 = *((_OWORD *)v59 + 9);
  v233 = *((_OWORD *)v59 + 8);
  v234 = v60;
  v235 = *((_QWORD *)v59 + 20);
  v61 = *((_OWORD *)v59 + 5);
  v229 = *((_OWORD *)v59 + 4);
  v230 = v61;
  v62 = *((_OWORD *)v59 + 7);
  v231 = *((_OWORD *)v59 + 6);
  v232 = v62;
  v63 = *((_OWORD *)v59 + 1);
  v225 = *(_OWORD *)v59;
  v226 = v63;
  v64 = *((_OWORD *)v59 + 3);
  v227 = *((_OWORD *)v59 + 2);
  v228 = v64;
  v65 = (uint64_t)v210;
  sub_1DC092ED0((uint64_t)v55, (uint64_t)v210, type metadata accessor for WatchlistCellViewModel);
  sub_1DC08CBF0(0, &qword_1F034C590, (uint64_t (*)(uint64_t))type metadata accessor for WatchlistCellView, sub_1DC15C0F8, MEMORY[0x1E0DB72F0]);
  v66 = v218;
  v67 = sub_1DC408F14();
  v207 = v48;
  v68 = (void *)v67;
  v69 = (void *)sub_1DC40448C();
  v70 = sub_1DC400280();
  v71 = *(_QWORD *)(v70 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v71 + 16))(v47, v66, v70);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v71 + 56))(v47, 0, 1, v70);
  v72 = (uint64_t)v69 + OBJC_IVAR____TtC8StocksUI17WatchlistCellView_indexPath;
  swift_beginAccess();
  sub_1DC15C114((uint64_t)v47, v72);
  swift_endAccess();

  v73 = objc_msgSend((id)objc_opt_self(), sel_secondarySystemBackgroundColor);
  objc_msgSend(v68, sel_setBackgroundColor_, v73);

  v74 = (void *)sub_1DC404498();
  (*((void (**)(char *, _QWORD, uint64_t))v194 + 13))(v208, *MEMORY[0x1E0DB7200], v209);
  sub_1DC404408();

  (*(void (**)(char *, _QWORD, uint64_t))(v195 + 104))(v43, *MEMORY[0x1E0DB82B0], v196);
  sub_1DC404480();
  v75 = v217;
  v76 = (_BYTE *)sub_1DC40448C();
  sub_1DC22ACFC(v65, (uint64_t)&v225, v76);

  sub_1DC15C168(v68);
  v77 = (char *)sub_1DC40448C();
  v78 = *(id *)&v77[OBJC_IVAR____TtC8StocksUI17WatchlistCellView_onTapEditName];

  v79 = swift_allocObject();
  swift_weakInit();
  v80 = v187;
  v81 = v188;
  v82 = v189;
  (*(void (**)(char *, uint64_t, uint64_t))(v188 + 16))(v187, v190, v189);
  v83 = (*(unsigned __int8 *)(v81 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v81 + 80);
  v84 = swift_allocObject();
  *(_QWORD *)(v84 + 16) = v79;
  (*(void (**)(unint64_t, char *, uint64_t))(v81 + 32))(v84 + v83, v80, v82);

  swift_release();
  v85 = (char *)sub_1DC40448C();
  v86 = *(id *)&v85[OBJC_IVAR____TtC8StocksUI17WatchlistCellView_selectionButton];

  v214 = v75[13];
  (*(void (**)(char *, _QWORD, uint64_t))(v198 + 104))(v200, *MEMORY[0x1E0DB9EF8], v199);
  v87 = v75[16];
  v220 = sub_1DC4018AC();
  v221 = sub_1DC080808((unint64_t *)&qword_1EDB29180, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8638], MEMORY[0x1E0D59B68]);
  v219 = v87;
  v222 = 0u;
  v223 = 0u;
  v224 = 1;
  sub_1DC405434();
  swift_allocObject();
  swift_retain();
  sub_1DC40541C();
  (*(void (**)(char *, char *, uint64_t))(v215 + 16))(v197, &v210[*(int *)(v207 + 28)], v216);
  v88 = v192;
  sub_1DC0990BC((uint64_t)v75 + OBJC_IVAR____TtC8StocksUI41ManageWatchlistsBlueprintViewCellProvider_contentMode, v192, type metadata accessor for ManageWatchlistsContentMode);
  sub_1DC15C2FC();
  v90 = *(char **)(*((_QWORD *)v89 - 1) + 48);
  v208 = v89;
  v200 = v90;
  LODWORD(v87) = ((uint64_t (*)(uint64_t, uint64_t))v90)(v88, 1);
  v91 = sub_1DC4010E4();
  v92 = 1;
  v93 = v91;
  v94 = *(_QWORD *)(v91 - 8);
  v95 = (uint64_t)v193;
  if ((_DWORD)v87 != 1)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v94 + 32))(v193, v88, v91);
    v92 = 0;
  }
  v209 = v94;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v94 + 56))(v95, v92, 1, v93);
  v96 = (uint64_t)v191;
  (*(void (**)(char *, char *, uint64_t))(v215 + 32))(v191, v197, v216);
  v97 = type metadata accessor for WatchlistMembershipCommandContext(0);
  sub_1DC15C348(v95, v96 + *(int *)(v97 + 20));
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v97 - 8) + 56))(v96, 0, 1, v97);
  sub_1DC404D50();

  swift_release();
  sub_1DC092F14(v96, &qword_1F034C568, (void (*)(uint64_t))type metadata accessor for WatchlistMembershipCommandContext);
  v219 = v217[15];
  v98 = MEMORY[0x1E0DB9980];
  sub_1DC15C39C(0, (unint64_t *)&qword_1F034C5A0, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB9980]);
  sub_1DC15C444(&qword_1F034C5A8, (unint64_t *)&qword_1F034C5A0, (uint64_t (*)(uint64_t, _QWORD *))v98, MEMORY[0x1E0DB9998]);
  v99 = v201;
  sub_1DC405C5C();
  sub_1DC400274();
  v100 = v203;
  v101 = v204;
  sub_1DC404588();
  (*(void (**)(char *, uint64_t))(v202 + 8))(v99, v100);
  sub_1DC15C444(&qword_1F034C5B0, (unint64_t *)&qword_1F034C428, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB9518], MEMORY[0x1E0DB9528]);
  v102 = v206;
  sub_1DC408E90();
  sub_1DC408ED8();
  v103 = sub_1DC408ECC();
  (*(void (**)(char *, uint64_t))(v205 + 8))(v101, v102);
  result = sub_1DC400268();
  v105 = result + 1;
  if (__OFADD__(result, 1))
  {
    __break(1u);
    return result;
  }
  v106 = (void *)sub_1DC404498();
  v107 = *(void (**)(char *, _QWORD, uint64_t))(v211 + 104);
  if (v103 == v105)
  {
    v107(v213, *MEMORY[0x1E0DB7218], v212);
    sub_1DC404420();
  }
  else
  {
    v107(v213, *MEMORY[0x1E0DB7220], v212);
    sub_1DC404420();

    v106 = (void *)sub_1DC404498();
    v171 = v180;
    v170 = v181;
    *v180 = 0x3FF0000000000000;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v179 + 104))(v171, *MEMORY[0x1E0DB7248], v170);
    sub_1DC404438();
  }
  v173 = v209;
  v172 = (uint64_t)v210;

  objc_msgSend(v68, sel_setIsAccessibilityElement_, 1);
  v174 = (void *)sub_1DC40448C();
  objc_msgSend(v174, sel_setIsAccessibilityElement_, 0);

  v167 = v68;
  swift_bridgeObjectRetain();
  v175 = (void *)sub_1DC408A1C();
  swift_bridgeObjectRelease();
  objc_msgSend(v167, sel_setAccessibilityLabel_, v175);

  if ((*(_BYTE *)(v172 + 32) & 1) == 0)
  {
    v176 = v178;
    sub_1DC0990BC(v172 + *(int *)(v207 + 32), v178, type metadata accessor for ManageWatchlistsContentMode);
    if (((unsigned int (*)(uint64_t, uint64_t, char *))v200)(v176, 1, v208) != 1)
    {
      sub_1DC15C484(v167);
      sub_1DC0926D8(v172, type metadata accessor for WatchlistCellViewModel);
      (*(void (**)(uint64_t, uint64_t))(v173 + 8))(v176, v93);
      return (uint64_t)v167;
    }
    sub_1DC15C65C(v167);
  }
  sub_1DC0926D8(v172, type metadata accessor for WatchlistCellViewModel);
  return (uint64_t)v167;
}

uint64_t sub_1DC15B0D4(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    if (MEMORY[0x1DF0CAD78](result + 16))
    {
      sub_1DC2B19DC(a2);
      swift_release();
      return swift_unknownObjectRelease();
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_1DC15B15C(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t (**v24)();
  void *v25;
  id v26;
  id v27;
  void *v28;
  uint64_t WatchlistCommandContext;
  uint64_t v30;
  void *v31;

  sub_1DC092F50(0, &qword_1F034C5B8, (void (*)(uint64_t))type metadata accessor for CreateWatchlistCommandContext);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v30 - v4;
  v6 = type metadata accessor for ManageWatchlistsContentMode(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC092F50(0, (unint64_t *)&qword_1EDB28DE0, (void (*)(uint64_t))MEMORY[0x1E0DAF0D0]);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v30 - v10;
  v12 = type metadata accessor for WatchlistCreationRouteModel();
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v16 = result;
    v31 = a2;
    sub_1DC0990BC(result + OBJC_IVAR____TtC8StocksUI41ManageWatchlistsBlueprintViewCellProvider_contentMode, (uint64_t)v8, type metadata accessor for ManageWatchlistsContentMode);
    sub_1DC15C2FC();
    v18 = 1;
    v19 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48))(v8, 1, v17);
    v20 = sub_1DC4010E4();
    v21 = *(_QWORD *)(v20 - 8);
    if (v19 != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v11, v8, v20);
      v18 = 0;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56))(v11, v18, 1, v20);
    v22 = swift_allocObject();
    v23 = v31;
    *(_QWORD *)(v22 + 16) = v16;
    *(_QWORD *)(v22 + 24) = v23;
    sub_1DC15C348((uint64_t)v11, (uint64_t)v14);
    v24 = (uint64_t (**)())&v14[*(int *)(v12 + 20)];
    *v24 = sub_1DC15C7CC;
    v24[1] = (uint64_t (*)())v22;
    v25 = (void *)MEMORY[0x1DF0CAD78](v16 + 16);
    swift_retain();
    v26 = v23;
    if (v25)
    {
      v27 = objc_msgSend(v25, sel_navigationController);
      if (v27)
      {
        v28 = v27;
        objc_msgSend(v27, sel_dismissViewControllerAnimated_completion_, 1, 0);
        swift_unknownObjectRelease();

      }
      else
      {
        swift_unknownObjectRelease();
      }
    }
    swift_getObjectType();
    if (qword_1EDB27590 != -1)
      swift_once();
    sub_1DC0990BC((uint64_t)v14, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for WatchlistCreationRouteModel);
    WatchlistCommandContext = type metadata accessor for CreateWatchlistCommandContext(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(WatchlistCommandContext - 8) + 56))(v5, 0, 1, WatchlistCommandContext);
    sub_1DC404AD4();
    sub_1DC092F14((uint64_t)v5, &qword_1F034C5B8, (void (*)(uint64_t))type metadata accessor for CreateWatchlistCommandContext);
    sub_1DC0926D8((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for WatchlistCreationRouteModel);
    return swift_release();
  }
  return result;
}

uint64_t sub_1DC15B4BC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t (*v16)(_QWORD);
  uint64_t v17;
  uint64_t v19;
  _QWORD v20[6];
  __int128 v21;
  __int128 v22;
  char v23;

  sub_1DC092F50(0, (unint64_t *)&qword_1EDB28DE0, (void (*)(uint64_t))MEMORY[0x1E0DAF0D0]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v20 - v3;
  v5 = sub_1DC405848();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1DC4010E4();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for ManageWatchlistsContentMode(0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0990BC(a1 + OBJC_IVAR____TtC8StocksUI41ManageWatchlistsBlueprintViewCellProvider_contentMode, (uint64_t)v15, v16);
  sub_1DC15C2FC();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48))(v15, 1, v17) == 1)
  {
    swift_getObjectType();
    if (qword_1EDB2AA98 != -1)
      swift_once();
    return sub_1DC404AE0();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v15, v9);
    (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0DB9EE0], v5);
    v19 = *(_QWORD *)(a1 + 128);
    v20[4] = sub_1DC4018AC();
    v20[5] = sub_1DC080808((unint64_t *)&qword_1EDB29180, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8638], MEMORY[0x1E0D59B68]);
    v20[1] = v19;
    swift_retain();
    sub_1DC40448C();
    v21 = 0u;
    v22 = 0u;
    v23 = 1;
    sub_1DC405434();
    swift_allocObject();
    sub_1DC40541C();
    swift_getObjectType();
    if (qword_1EDB2AA88 != -1)
      swift_once();
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v4, v12, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v4, 0, 1, v9);
    swift_retain();
    sub_1DC404A80();
    swift_release_n();
    sub_1DC092F14((uint64_t)v4, (unint64_t *)&qword_1EDB28DE0, (void (*)(uint64_t))MEMORY[0x1E0DAF0D0]);
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
}

BOOL sub_1DC15B82C(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  char *v3;
  id v4;

  v1 = a1 + 16;
  swift_beginAccess();
  v2 = (void *)MEMORY[0x1DF0CAD78](v1);
  if (v2)
  {
    v3 = (char *)sub_1DC40448C();

    v4 = *(id *)&v3[OBJC_IVAR____TtC8StocksUI17WatchlistCellView_onTapEditName];
    MEMORY[0x1DF0C70E8]();

  }
  return v2 != 0;
}

uint64_t sub_1DC15B8B8(uint64_t a1)
{
  uint64_t (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  LOBYTE(v1) = v1(v2);
  swift_release();
  return v1 & 1;
}

BOOL sub_1DC15B8F0(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  char *v3;
  id v4;

  v1 = a1 + 16;
  swift_beginAccess();
  v2 = (void *)MEMORY[0x1DF0CAD78](v1);
  if (v2)
  {
    v3 = (char *)sub_1DC40448C();
    v4 = *(id *)&v3[OBJC_IVAR____TtC8StocksUI17WatchlistCellView_selectionButton];

    objc_msgSend(v4, sel_sendActionsForControlEvents_, 64);
  }
  return v2 != 0;
}

uint64_t sub_1DC15B988(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  char *v4;
  id v5;
  char v6;
  uint64_t v7;
  char v9;

  v1 = a1 + 16;
  swift_beginAccess();
  v2 = MEMORY[0x1DF0CAD78](v1);
  if (!v2)
    return 0;
  v3 = (void *)v2;
  v4 = (char *)sub_1DC40448C();
  v5 = *(id *)&v4[OBJC_IVAR____TtC8StocksUI17WatchlistCellView_selectionButton];

  sub_1DC404D20();
  if (v9 == 2)
  {
LABEL_7:

    return 0;
  }
  if ((v9 & 1) != 0)
  {
    v6 = sub_1DC4099E8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      goto LABEL_6;
    goto LABEL_7;
  }
  swift_bridgeObjectRelease();
LABEL_6:
  v7 = *MEMORY[0x1E0DC46B0];

  return v7;
}

uint64_t sub_1DC15BA9C(uint64_t a1)
{
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;

  v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v3 = v1(v2);
  swift_release();
  return v3;
}

void sub_1DC15BAD4()
{
  uint64_t ObjCClassFromMetadata;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v2 = sub_1DC3FFC80();
  v4 = v3;

  qword_1F034C450 = v2;
  *(_QWORD *)algn_1F034C458 = v4;
}

void sub_1DC15BB9C()
{
  uint64_t ObjCClassFromMetadata;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v2 = sub_1DC3FFC80();
  v4 = v3;

  qword_1F034C460 = v2;
  *(_QWORD *)algn_1F034C468 = v4;
}

uint64_t sub_1DC15BC64()
{
  uint64_t v0;

  sub_1DC148A20(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  sub_1DC0926D8(v0 + OBJC_IVAR____TtC8StocksUI41ManageWatchlistsBlueprintViewCellProvider_contentMode, type metadata accessor for ManageWatchlistsContentMode);
  return v0;
}

uint64_t sub_1DC15BCC8()
{
  sub_1DC15BC64();
  return swift_deallocClassInstance();
}

uint64_t sub_1DC15BCEC()
{
  return type metadata accessor for ManageWatchlistsBlueprintViewCellProvider();
}

uint64_t type metadata accessor for ManageWatchlistsBlueprintViewCellProvider()
{
  uint64_t result;

  result = qword_1F034C4A0;
  if (!qword_1F034C4A0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1DC15BD30()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for ManageWatchlistsContentMode(319);
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1DC15BDD0()
{
  uint64_t (*v0)(uint64_t, uint64_t, uint64_t);

  v0 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB72F0];
  sub_1DC08CBF0(0, &qword_1F034C590, (uint64_t (*)(uint64_t))type metadata accessor for WatchlistCellView, sub_1DC15C0F8, MEMORY[0x1E0DB72F0]);
  sub_1DC408F20();
  sub_1DC08CBF0(0, &qword_1F034C578, (uint64_t (*)(uint64_t))type metadata accessor for CreateWatchlistView, sub_1DC15C044, v0);
  return sub_1DC408F20();
}

uint64_t sub_1DC15BE5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t result;

  result = sub_1DC159AB8(a1, a2, *a3, a4);
  *a5 = result;
  return result;
}

uint64_t sub_1DC15BE88(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v12[3];
  uint64_t v13;
  uint64_t v14;

  swift_beginAccess();
  sub_1DC0824D4(v2 + 32, (uint64_t)v12);
  v4 = v13;
  v5 = v14;
  __swift_project_boxed_opaque_existential_1(v12, v13);
  v6 = *(_QWORD *)(v5 + 8);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 8);
  v10 = v4;
  v11 = v5;
  __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v9);
  v7(a2, v4, v6);
  swift_beginAccess();
  __swift_destroy_boxed_opaque_existential_1(v2 + 32);
  sub_1DC097DD0(&v9, v2 + 32);
  swift_endAccess();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  swift_getObjectType();
  sub_1DC405DF4();
  swift_getObjectType();
  return sub_1DC405DF4();
}

uint64_t sub_1DC15BFB4()
{
  return sub_1DC080808(&qword_1F034C018, (uint64_t (*)(uint64_t))type metadata accessor for ManageWatchlistsLayoutModel, (uint64_t)&unk_1DC4134C8);
}

void sub_1DC15BFD4()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1F034C570)
  {
    type metadata accessor for CreateWatchlistViewModel();
    type metadata accessor for CreateWatchlistViewLayoutAttributes();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1F034C570);
  }
}

uint64_t sub_1DC15C044()
{
  return sub_1DC080808(&qword_1F034C580, (uint64_t (*)(uint64_t))type metadata accessor for CreateWatchlistView, (uint64_t)&unk_1DC41C94C);
}

uint64_t sub_1DC15C060()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1DC15C088()
{
  uint64_t v0;

  return sub_1DC15B15C(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

void sub_1DC15C090()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1F034C588)
  {
    type metadata accessor for WatchlistCellViewModel(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1F034C588);
  }
}

uint64_t sub_1DC15C0F8()
{
  return sub_1DC080808(&qword_1F034C598, (uint64_t (*)(uint64_t))type metadata accessor for WatchlistCellView, (uint64_t)&unk_1DC40F710);
}

uint64_t sub_1DC15C114(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1DC092F50(0, &qword_1EDB28B50, (void (*)(uint64_t))MEMORY[0x1E0CB1658]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

id sub_1DC15C168(void *a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  objc_msgSend(a1, sel_setIsAccessibilityElement_, 0);
  objc_msgSend(a1, sel_setAccessibilityLabel_, 0);
  objc_msgSend(a1, sel_setAccessibilityHint_, 0);
  objc_msgSend(a1, sel__setAccessibilityActivateBlock_, 0);
  v2 = *MEMORY[0x1E0DC4660];
  v3 = (unint64_t)objc_msgSend(a1, sel_accessibilityTraits);
  v4 = -1;
  if ((v3 & v2) != 0)
    v4 = ~v2;
  return objc_msgSend(a1, sel_setAccessibilityTraits_, v4 & v3);
}

uint64_t sub_1DC15C208()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  sub_1DC08CBF0(0, (unint64_t *)&qword_1F034C020, (uint64_t (*)(uint64_t))type metadata accessor for ManageWatchlistsModel, sub_1DC157B44, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6EE8]);
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v0 + v4, v2);
  return swift_deallocObject();
}

uint64_t sub_1DC15C29C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1DC08CBF0(0, (unint64_t *)&qword_1F034C020, (uint64_t (*)(uint64_t))type metadata accessor for ManageWatchlistsModel, sub_1DC157B44, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6EE8]);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  return sub_1DC15B0D4(*(_QWORD *)(v0 + 16), v0 + ((v2 + 24) & ~v2));
}

void sub_1DC15C2FC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F0350F50)
  {
    v0 = sub_1DC4010E4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1F0350F50);
  }
}

uint64_t sub_1DC15C348(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1DC092F50(0, (unint64_t *)&qword_1EDB28DE0, (void (*)(uint64_t))MEMORY[0x1E0DAF0D0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1DC15C39C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *))
{
  unint64_t v6;
  uint64_t v7;
  _QWORD v8[4];

  if (!*a2)
  {
    v8[0] = type metadata accessor for ManageWatchlistsLayoutSectionDescriptor();
    v8[1] = type metadata accessor for ManageWatchlistsLayoutModel();
    v8[2] = sub_1DC080808(&qword_1F034C430, (uint64_t (*)(uint64_t))type metadata accessor for ManageWatchlistsLayoutSectionDescriptor, (uint64_t)&unk_1DC421E88);
    v8[3] = sub_1DC15BFB4();
    v6 = a3(a1, v8);
    if (!v7)
      atomic_store(v6, a2);
  }
}

uint64_t sub_1DC15C444(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_1DC15C39C(255, a2, a3);
    result = MEMORY[0x1DF0CAB8C](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1DC15C484(void *a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t);
  void *v14;
  void *v15;
  uint64_t v16;

  objc_msgSend(a1, sel_setIsAccessibilityElement_, 1);
  v2 = *MEMORY[0x1E0DC4660];
  v3 = (unint64_t)objc_msgSend(a1, sel_accessibilityTraits);
  if ((v2 & ~v3) != 0)
    v4 = v2;
  else
    v4 = 0;
  objc_msgSend(a1, sel_setAccessibilityTraits_, v4 | v3);
  v5 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v15 = sub_1DC15C78C;
  v16 = v5;
  v6 = MEMORY[0x1E0C809B0];
  v11 = MEMORY[0x1E0C809B0];
  v12 = 1107296256;
  v13 = sub_1DC15B8B8;
  v14 = &block_descriptor_14;
  v7 = _Block_copy(&v11);
  swift_release();
  objc_msgSend(a1, sel__setAccessibilityActivateBlock_, v7);
  _Block_release(v7);
  if (qword_1F034AD90 != -1)
    swift_once();
  v8 = (void *)sub_1DC408A1C();
  objc_msgSend(a1, sel_setAccessibilityHint_, v8);

  v9 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v15 = sub_1DC15C794;
  v16 = v9;
  v11 = v6;
  v12 = 1107296256;
  v13 = sub_1DC15BA9C;
  v14 = &block_descriptor_18;
  v10 = _Block_copy(&v11);
  swift_release();
  objc_msgSend(a1, sel__setAccessibilityAdditionalTraitsBlock_, v10);
  _Block_release(v10);
}

void sub_1DC15C65C(void *a1)
{
  uint64_t v2;
  void *v3;
  void *v4;
  _QWORD v5[6];

  v2 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v5[4] = sub_1DC15C784;
  v5[5] = v2;
  v5[0] = MEMORY[0x1E0C809B0];
  v5[1] = 1107296256;
  v5[2] = sub_1DC15B8B8;
  v5[3] = &block_descriptor_2;
  v3 = _Block_copy(v5);
  swift_release();
  objc_msgSend(a1, sel__setAccessibilityActivateBlock_, v3);
  _Block_release(v3);
  if (qword_1F034AD88 != -1)
    swift_once();
  v4 = (void *)sub_1DC408A1C();
  objc_msgSend(a1, sel_setAccessibilityHint_, v4);

}

uint64_t sub_1DC15C760()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

BOOL sub_1DC15C784()
{
  uint64_t v0;

  return sub_1DC15B82C(v0);
}

BOOL sub_1DC15C78C()
{
  uint64_t v0;

  return sub_1DC15B8F0(v0);
}

uint64_t sub_1DC15C794()
{
  uint64_t v0;

  return sub_1DC15B988(v0);
}

uint64_t objectdestroy_2Tm()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1DC15C7CC()
{
  uint64_t v0;

  return sub_1DC15B4BC(*(_QWORD *)(v0 + 16));
}

void sub_1DC15C7E4(uint64_t a1, char a2)
{
  void *v3;
  id v4;
  objc_class *v5;
  Class v6;
  id v7;
  void *v8;
  char v9;
  Class v10;
  Class isa;
  void *withFont;

  v3 = *(void **)(a1 + OBJC_IVAR____TtC8StocksUI10TickerView_priceChangeLabel);
  v4 = objc_msgSend(v3, sel_font);
  if (v4)
  {
    withFont = v4;
    v5 = (objc_class *)objc_msgSend(v3, sel_color);
    if (v5)
    {
      v6 = v5;
      v7 = objc_msgSend(v3, sel_attributedText);
      if (v7)
      {
        v8 = v7;
        if ((a2 & 1) != 0)
          v9 = sub_1DC4099E8();
        else
          v9 = 1;
        swift_bridgeObjectRelease();
        isa = NSAttributedString.appendingAccessibilityDWCPriceChangeArrow(pointingUpward:withFont:withColor:)(v9 & 1, (UIFont)withFont, (UIColor)v6).super.isa;
        objc_msgSend(v3, sel_setAttributedText_, isa);

        v6 = isa;
      }
      else
      {
        v8 = withFont;
      }

      v10 = v6;
    }
    else
    {
      v10 = (Class)withFont;
    }

  }
}

uint64_t sub_1DC15C92C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int EnumCaseMultiPayload;
  char v11;
  uint64_t v13;

  sub_1DC0F8190();
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for StockListModel(0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC404354();
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
      sub_1DC0926D8((uint64_t)v9, type metadata accessor for StockListModel);
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
    v11 = 0;
  }
  else
  {
    sub_1DC0926D8((uint64_t)v9, type metadata accessor for StockListStockModel);
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
    v11 = sub_1DC40433C();
  }
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return v11 & 1;
}

uint64_t sub_1DC15CA64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t result;
  _QWORD v30[10];

  v1 = v0;
  v2 = sub_1DC400898();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1DC4011BC();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v7 + 16))(v10, v1, v6, v8);
  LODWORD(v11) = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v10, v6);
  if ((_DWORD)v11 == *MEMORY[0x1E0DAF188])
  {
    (*(void (**)(char *, uint64_t))(v7 + 96))(v10, v6);
    swift_unknownObjectRelease();
    sub_1DC0B9454();
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, &v10[*(int *)(v12 + 48)], v2);
    v13 = (void *)sub_1DC4007F0();
    v14 = v13;
    if (v13)
    {
      objc_msgSend(v13, sel_computedGlobalScoreCoefficient);
      objc_msgSend(v14, sel_userFeedbackScore);
      objc_msgSend(v14, sel_agedPersonalizationScore);
      v16 = v15;
      objc_msgSend(v14, sel_featureCtr);
      objc_msgSend(v14, sel_personalizationScore);
      v18 = v17;
      objc_msgSend(v14, sel_paidNonpaidSubscriptionCtr);
      objc_msgSend(v14, sel_subscribedChannelCtr);
      v20 = v19;
      objc_msgSend(v14, sel_autoSubscribeCtr);
      v22 = v21;
    }
    else
    {
      v22 = 0;
      v16 = 0;
      v18 = 0;
      v20 = 0;
    }
    sub_1DC15CE88();
    sub_1DC4007D8();
    v30[9] = v23;
    sub_1DC400808();
    v30[8] = v24;
    sub_1DC4007FC();
    v30[7] = v25;
    sub_1DC4007E4();
    v30[6] = v26;
    v11 = sub_1DC400850();
    if (v11 < (uint64_t)0xFFFFFFFF80000000)
    {
      __break(1u);
    }
    else if (v11 <= 0x7FFFFFFF)
    {
      sub_1DC40079C();
      v30[5] = v27;
      sub_1DC400820();
      v30[4] = v28;
      sub_1DC400814();
      v11 = sub_1DC40085C();
      if (v11 >= (uint64_t)0xFFFFFFFF80000000)
      {
        if (v11 <= 0x7FFFFFFF)
        {
          v11 = sub_1DC4007A8();
          if (v11 >= (uint64_t)0xFFFFFFFF80000000)
          {
            if (v11 <= 0x7FFFFFFF)
            {
              sub_1DC4007CC();
              v30[3] = v20;
              sub_1DC4007C0();
              v30[2] = v22;
              sub_1DC4007B4();
              v30[0] = v16;
              v30[1] = v18;
              sub_1DC40088C();
              sub_1DC400874();
              sub_1DC4034D8();

              return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
            }
            goto LABEL_17;
          }
LABEL_16:
          __break(1u);
LABEL_17:
          __break(1u);
          goto LABEL_18;
        }
LABEL_15:
        __break(1u);
        goto LABEL_16;
      }
LABEL_14:
      __break(1u);
      goto LABEL_15;
    }
    __break(1u);
    goto LABEL_14;
  }
LABEL_18:
  if ((_DWORD)v11 == *MEMORY[0x1E0DAF140])
  {
    sub_1DC409838();
    __break(1u);
  }
  result = sub_1DC4099DC();
  __break(1u);
  return result;
}

uint64_t sub_1DC15CE88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  _QWORD v16[2];
  void (*v17)(char *, unint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v0 = sub_1DC400844();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_1DC4039AC();
  v4 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v6 = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1DC400868();
  v8 = *(_QWORD *)(v7 + 16);
  if (v8)
  {
    v20 = MEMORY[0x1E0DEE9D8];
    sub_1DC2AD490(0, v8, 0);
    v9 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
    v16[1] = v7;
    v10 = v7 + v9;
    v11 = *(_QWORD *)(v1 + 72);
    v17 = *(void (**)(char *, unint64_t, uint64_t))(v1 + 16);
    v18 = v11;
    do
    {
      v17(v3, v10, v0);
      sub_1DC40082C();
      sub_1DC400838();
      sub_1DC4039A0();
      (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
      v12 = v20;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1DC2AD490(0, *(_QWORD *)(v12 + 16) + 1, 1);
        v12 = v20;
      }
      v14 = *(_QWORD *)(v12 + 16);
      v13 = *(_QWORD *)(v12 + 24);
      if (v14 >= v13 >> 1)
      {
        sub_1DC2AD490(v13 > 1, v14 + 1, 1);
        v12 = v20;
      }
      *(_QWORD *)(v12 + 16) = v14 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v12+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(_QWORD *)(v4 + 72) * v14, v6, v19);
      v20 = v12;
      v10 += v18;
      --v8;
    }
    while (v8);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
  return v12;
}

uint64_t sub_1DC15D094(uint64_t a1)
{
  return sub_1DC132FE0(a1, MEMORY[0x1E0DB54E0], 0xD000000000000019, 0x80000001DC434960, &qword_1EDB29008);
}

uint64_t static Settings.Features.nffFeeds.getter()
{
  return sub_1DC10D910(&qword_1EDB29018);
}

uint64_t static Settings.Features.narrativeAudio.getter()
{
  return sub_1DC10D910(&qword_1EDB29000);
}

ValueMetadata *type metadata accessor for Settings.Features()
{
  return &type metadata for Settings.Features;
}

id sub_1DC15D10C(__int128 *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  id v19;
  void *v20;
  uint64_t v22;
  _QWORD v23[4];
  uint64_t v24;
  __int128 v25;
  __int128 v26;

  v22 = a3;
  v5 = sub_1DC400280();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1DC406040();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC130830();
  sub_1DC405ECC();
  sub_1DC405EE4();
  v13 = (void *)sub_1DC4090A0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  v14 = swift_allocObject();
  swift_weakInit();
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 24) = *a1;
  v16 = *a1;
  *(_OWORD *)(v15 + 40) = a1[1];
  v17 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(v15 + 96) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(v15 + 112) = v17;
  v18 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v15 + 64) = *(_OWORD *)a2;
  *(_OWORD *)(v15 + 80) = v18;
  *(_QWORD *)(v15 + 16) = v14;
  *(_QWORD *)(v15 + 56) = *((_QWORD *)a1 + 4);
  *(_QWORD *)(v15 + 128) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(v15 + 136) = v13;
  v25 = a1[1];
  v26 = v16;
  v24 = *((_QWORD *)a1 + 4);
  sub_1DC113A6C((uint64_t)&v26);
  sub_1DC113A6C((uint64_t)&v25);
  sub_1DC113274((uint64_t)&v24);
  sub_1DC114564(a2);
  v19 = v13;
  sub_1DC40274C();
  swift_release();
  __swift_project_boxed_opaque_existential_1(v23, v23[3]);
  v20 = (void *)sub_1DC405E0C();
  sub_1DC4024AC();

  __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
  return v19;
}

void sub_1DC15D33C(unsigned __int8 *a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  int v6;
  uint64_t Strong;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void *v12;
  void *v13;
  char *v14;
  id v15;
  char *v16;
  id v17;
  void *v18;
  void *v19;

  v6 = *a1;
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v8 = Strong;
    v9 = *(_QWORD *)(Strong + 16);
    swift_unknownObjectRetain();
    v10 = (char *)sub_1DC405E00();
    v11 = v6 ^ 1u;
    v12 = *(void **)&v10[OBJC_IVAR____TtC8StocksUI26StockListSectionHeaderView_switcherButton];
    objc_msgSend(v12, sel_setFrame_, *(double *)(a4 + 32), *(double *)(a4 + 40), *(double *)(a4 + 48), *(double *)(a4 + 56));
    objc_msgSend(v12, sel_setEnabled_, v11);
    swift_beginAccess();
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v9 + 16), *(_QWORD *)(v9 + 40));
    sub_1DC116DC0(v12, *a3, a3[1], *(void **)(a4 + 64));
    swift_allocObject();
    swift_unknownObjectWeakInit();
    v13 = (void *)sub_1DC40685C();
    swift_unknownObjectRelease();

    swift_release();
    v14 = (char *)sub_1DC405E00();
    v15 = *(id *)&v14[OBJC_IVAR____TtC8StocksUI26StockListSectionHeaderView_switcherButton];

    objc_msgSend(v15, sel_setShowsMenuAsPrimaryAction_, 1);
    v16 = (char *)sub_1DC405E00();
    v17 = *(id *)&v16[OBJC_IVAR____TtC8StocksUI26StockListSectionHeaderView_switcherButton];

    __swift_project_boxed_opaque_existential_1((_QWORD *)(v8 + 96), *(_QWORD *)(v8 + 120));
    v18 = (void *)sub_1DC405E00();
    v19 = (void *)sub_1DC0B5E1C(v18, 0);

    objc_msgSend(v17, sel_setMenu_, v19);
    swift_release();

  }
}

uint64_t sub_1DC15D550()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1DC15D5A0()
{
  return sub_1DC080808(&qword_1EDB32480, (uint64_t (*)(uint64_t))type metadata accessor for StockListLayoutModel, (uint64_t)&unk_1DC414930);
}

uint64_t sub_1DC15D5CC()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1DC15D5F0()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_1DC15D63C(unsigned __int8 *a1)
{
  uint64_t v1;

  sub_1DC15D33C(a1, *(_QWORD *)(v1 + 16), (uint64_t *)(v1 + 24), v1 + 64);
}

uint64_t sub_1DC15D650()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1DC15D674()
{
  uint64_t v0;

  sub_1DC2CA7EC(v0);
}

void destroy for BrandingTitleViewModel(uint64_t a1)
{
  swift_bridgeObjectRelease();

}

_QWORD *_s8StocksUI22BrandingTitleViewModelVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  void *v4;
  id v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = (void *)a2[2];
  a1[2] = v4;
  swift_bridgeObjectRetain();
  v5 = v4;
  return a1;
}

_QWORD *assignWithCopy for BrandingTitleViewModel(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (void *)a1[2];
  v5 = (void *)a2[2];
  a1[2] = v5;
  v6 = v5;

  return a1;
}

uint64_t assignWithTake for BrandingTitleViewModel(uint64_t a1, uint64_t a2)
{
  void *v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  v4 = *(void **)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);

  return a1;
}

uint64_t getEnumTagSinglePayload for BrandingTitleViewModel(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BrandingTitleViewModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for BrandingTitleViewModel()
{
  return &type metadata for BrandingTitleViewModel;
}

uint64_t sub_1DC15D81C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 56));
  sub_1DC081B48(&qword_1EDB2FDA0, v1, (uint64_t (*)(uint64_t))type metadata accessor for TickerDataManager, (uint64_t)&unk_1DC40F53C);
  sub_1DC400AD8();
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 96));
  sub_1DC081B48(&qword_1EDB2FD98, v2, (uint64_t (*)(uint64_t))type metadata accessor for TickerDataManager, (uint64_t)&unk_1DC40F514);
  sub_1DC400D18();
  sub_1DC148A20(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  __swift_destroy_boxed_opaque_existential_1(v0 + 72);

  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1DC15D914(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  void (*v6)(uint64_t, _UNKNOWN **, uint64_t, uint64_t, uint64_t);
  uint64_t v7;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v3 = result;
    if (MEMORY[0x1DF0CAD78](result + 16))
    {
      v4 = *(_QWORD *)(v3 + 24);
      ObjectType = swift_getObjectType();
      v6 = *(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(v4 + 16);
      v7 = swift_retain();
      v6(v7, &off_1EA44FC48, a1, ObjectType, v4);
      swift_release_n();
      return swift_unknownObjectRelease();
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_1DC15D9D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v7;
  uint64_t ObjectType;

  result = MEMORY[0x1DF0CAD78](v3 + 16);
  if (result)
  {
    v7 = *(_QWORD *)(v3 + 24);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 8))(v3, &off_1EA44FC48, a2, a3, ObjectType, v7);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1DC15DA58(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t ObjectType;

  result = MEMORY[0x1DF0CAD78](v2 + 16);
  if (result)
  {
    v5 = *(_QWORD *)(v2 + 24);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(v5 + 24))(v2, &off_1EA44FC48, a2, ObjectType, v5);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1DC15DACC()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1DC15DAF0(uint64_t a1)
{
  return sub_1DC15D914(a1);
}

uint64_t sub_1DC15DAFC()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

void (*sub_1DC15DB30(_QWORD *a1))(_QWORD **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC8StocksUI17WatchlistCellView_isSelected;
  v3[3] = v1;
  v3[4] = v4;
  swift_beginAccess();
  return sub_1DC15DB88;
}

void sub_1DC15DB88(_QWORD **a1, char a2)
{
  _QWORD *v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;

  v3 = *a1;
  swift_endAccess();
  if ((a2 & 1) == 0)
  {
    v4 = v3[3];
    v5 = *(void (**)(uint64_t, uint64_t))(v4 + OBJC_IVAR____TtC8StocksUI17WatchlistCellView_onSelection);
    if (v5)
    {
      v6 = *(unsigned __int8 *)(v4 + v3[4]);
      swift_retain();
      v5(v4, v6);
      sub_1DC0E81D0((uint64_t)v5);
    }
  }
  free(v3);
}

char *sub_1DC15DC10(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v5;
  objc_class *ObjectType;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  id v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  Class v21;
  id v22;
  uint64_t v23;
  Class v24;
  char *v25;
  char *v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  void *v33;
  id v34;
  id v35;
  uint64_t v36;
  char *v37;
  unint64_t v38;
  uint64_t v39;
  objc_super v41;

  v5 = v4;
  ObjectType = (objc_class *)swift_getObjectType();
  sub_1DC092F50(0, &qword_1F034C648, (void (*)(uint64_t))sub_1DC15E910);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v41 - v12;
  v14 = OBJC_IVAR____TtC8StocksUI17WatchlistCellView_titleLabel;
  v15 = objc_allocWithZone(MEMORY[0x1E0DC3990]);
  v16 = v5;
  *(_QWORD *)&v5[v14] = objc_msgSend(v15, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v17 = OBJC_IVAR____TtC8StocksUI17WatchlistCellView_editNameButton;
  *(_QWORD *)&v16[v17] = objc_msgSend((id)objc_opt_self(), sel_buttonWithType_, 0);
  v18 = OBJC_IVAR____TtC8StocksUI17WatchlistCellView_hairlineView;
  *(_QWORD *)&v16[v18] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v19 = OBJC_IVAR____TtC8StocksUI17WatchlistCellView_selectionButton;
  if (qword_1EDB2AA40 != -1)
    swift_once();
  sub_1DC15E910();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v13, 1, 1, v20);
  sub_1DC15E9B4();
  v22 = objc_allocWithZone(v21);
  swift_retain();
  *(_QWORD *)&v16[v19] = sub_1DC404D38();
  v23 = OBJC_IVAR____TtC8StocksUI17WatchlistCellView_onTapEditName;
  sub_1DC12F234();
  *(_QWORD *)&v16[v23] = objc_msgSend(objc_allocWithZone(v24), sel_init);
  v25 = &v16[OBJC_IVAR____TtC8StocksUI17WatchlistCellView_onEditing];
  *(_QWORD *)v25 = 0;
  *((_QWORD *)v25 + 1) = 0;
  v16[OBJC_IVAR____TtC8StocksUI17WatchlistCellView_isEditing] = 0;
  v26 = &v16[OBJC_IVAR____TtC8StocksUI17WatchlistCellView_onSelection];
  *(_QWORD *)v26 = 0;
  *((_QWORD *)v26 + 1) = 0;
  v16[OBJC_IVAR____TtC8StocksUI17WatchlistCellView_isSelected] = 0;
  v27 = &v16[OBJC_IVAR____TtC8StocksUI17WatchlistCellView_indexPath];
  v28 = sub_1DC400280();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v27, 1, 1, v28);

  v41.receiver = v16;
  v41.super_class = ObjectType;
  v29 = (char *)objc_msgSendSuper2(&v41, sel_initWithFrame_, a1, a2, a3, a4);
  v30 = *(_QWORD *)&v29[OBJC_IVAR____TtC8StocksUI17WatchlistCellView_titleLabel];
  v31 = v29;
  objc_msgSend(v31, sel_addSubview_, v30);
  v32 = OBJC_IVAR____TtC8StocksUI17WatchlistCellView_selectionButton;
  objc_msgSend(v31, sel_addSubview_, *(_QWORD *)&v31[OBJC_IVAR____TtC8StocksUI17WatchlistCellView_selectionButton]);
  v33 = *(void **)&v31[OBJC_IVAR____TtC8StocksUI17WatchlistCellView_editNameButton];
  objc_msgSend(v31, sel_addSubview_, v33);
  objc_msgSend(v31, sel_addSubview_, *(_QWORD *)&v31[OBJC_IVAR____TtC8StocksUI17WatchlistCellView_hairlineView]);
  objc_msgSend(*(id *)&v31[v32], sel_setAdjustsImageSizeForAccessibilityContentSizeCategory_, 1);
  objc_msgSend(v33, sel_setAdjustsImageSizeForAccessibilityContentSizeCategory_, 1);
  v34 = *(id *)&v31[OBJC_IVAR____TtC8StocksUI17WatchlistCellView_onTapEditName];
  v35 = v33;
  sub_1DC406898();

  objc_msgSend(v31, sel_setIsAccessibilityElement_, 1);
  v36 = *MEMORY[0x1E0DC4660];
  v37 = v31;
  v38 = (unint64_t)objc_msgSend(v37, sel_accessibilityTraits);
  if ((v36 & ~v38) != 0)
    v39 = v36;
  else
    v39 = 0;
  objc_msgSend(v37, sel_setAccessibilityTraits_, v39 | v38);

  return v37;
}

uint64_t sub_1DC15E08C()
{
  return type metadata accessor for WatchlistCellView();
}

uint64_t type metadata accessor for WatchlistCellView()
{
  uint64_t result;

  result = qword_1F034C630;
  if (!qword_1F034C630)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1DC15E0D0()
{
  unint64_t v0;

  sub_1DC092F50(319, &qword_1EDB28B50, (void (*)(uint64_t))MEMORY[0x1E0CB1658]);
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

void sub_1DC15E17C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  _QWORD *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  _BYTE *v9;
  void (*v10)(uint64_t, _QWORD);
  uint64_t v11;
  uint64_t v12;
  _BYTE v13[24];

  v1 = v0;
  sub_1DC092F50(0, &qword_1EDB28B50, (void (*)(uint64_t))MEMORY[0x1E0CB1658]);
  MEMORY[0x1E0C80A78](v2);
  v4 = &v13[-v3];
  v5 = (_QWORD *)(v0 + OBJC_IVAR____TtC8StocksUI17WatchlistCellView_onEditing);
  v6 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8StocksUI17WatchlistCellView_onEditing);
  *v5 = 0;
  v5[1] = 0;
  sub_1DC0E81D0(v6);
  v7 = (_QWORD *)(v0 + OBJC_IVAR____TtC8StocksUI17WatchlistCellView_onSelection);
  v8 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8StocksUI17WatchlistCellView_onSelection);
  *v7 = 0;
  v7[1] = 0;
  sub_1DC0E81D0(v8);
  *(_BYTE *)(v0 + OBJC_IVAR____TtC8StocksUI17WatchlistCellView_isEditing) = 0;
  v9 = (_BYTE *)(v0 + OBJC_IVAR____TtC8StocksUI17WatchlistCellView_isSelected);
  swift_beginAccess();
  *v9 = 0;
  v10 = (void (*)(uint64_t, _QWORD))*v7;
  if (*v7)
  {
    swift_retain();
    v10(v1, 0);
    sub_1DC0E81D0((uint64_t)v10);
  }
  v11 = sub_1DC400280();
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v4, 1, 1, v11);
  v12 = v1 + OBJC_IVAR____TtC8StocksUI17WatchlistCellView_indexPath;
  swift_beginAccess();
  sub_1DC15C114((uint64_t)v4, v12);
  swift_endAccess();

}

void sub_1DC15E2E8()
{
  sub_1DC15E17C();
}

id sub_1DC15E308(uint64_t a1, char a2, double a3, double a4)
{
  void (*v7)(uint64_t, _QWORD);

  v7 = *(void (**)(uint64_t, _QWORD))(a1 + OBJC_IVAR____TtC8StocksUI17WatchlistCellView_onEditing);
  if (v7)
  {
    swift_retain();
    v7(a1, a2 & 1);
    sub_1DC0E81D0((uint64_t)v7);
  }
  objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC8StocksUI17WatchlistCellView_selectionButton), sel_setAlpha_, a3);
  objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC8StocksUI17WatchlistCellView_editNameButton), sel_setAlpha_, a4);
  return objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC8StocksUI17WatchlistCellView_hairlineView), sel_setAlpha_, a4);
}

uint64_t sub_1DC15E3C4(char a1)
{
  void **v1;
  _BYTE *v3;
  double v4;
  double v5;
  uint64_t v6;
  _BYTE *v7;

  v3 = *v1;
  v3[OBJC_IVAR____TtC8StocksUI17WatchlistCellView_isEditing] = a1;
  if ((a1 & 1) != 0)
    v4 = 1.0;
  else
    v4 = 0.0;
  if ((a1 & 1) != 0)
    v5 = 0.0;
  else
    v5 = 1.0;
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = v3;
  *(_BYTE *)(v6 + 24) = a1;
  *(double *)(v6 + 32) = v5;
  *(double *)(v6 + 40) = v4;
  v7 = v3;
  sub_1DC406B20();
  return swift_release();
}

void sub_1DC15E484()
{
  sub_1DC15E64C(&qword_1F034C598, (uint64_t)&unk_1DC40F710);
  JUMPOUT(0x1DF0C7418);
}

uint64_t sub_1DC15E4BC()
{
  _QWORD *v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(*v0 + OBJC_IVAR____TtC8StocksUI17WatchlistCellView_isSelected);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_1DC15E504(char a1)
{
  uint64_t *v1;
  uint64_t v3;
  _BYTE *v4;
  uint64_t result;
  void (*v6)(uint64_t, _QWORD);

  v3 = *v1;
  v4 = (_BYTE *)(*v1 + OBJC_IVAR____TtC8StocksUI17WatchlistCellView_isSelected);
  result = swift_beginAccess();
  *v4 = a1;
  v6 = *(void (**)(uint64_t, _QWORD))(v3 + OBJC_IVAR____TtC8StocksUI17WatchlistCellView_onSelection);
  if (v6)
  {
    swift_retain();
    v6(v3, a1 & 1);
    return sub_1DC0E81D0((uint64_t)v6);
  }
  return result;
}

void (*sub_1DC15E590(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1DC15DB30(v2);
  return sub_1DC15E5D8;
}

void sub_1DC15E5D8(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD))(*a1 + 32))(*a1);
  free(v1);
}

uint64_t sub_1DC15E604()
{
  return sub_1DC15E64C(&qword_1F034C640, (uint64_t)&unk_1DC40F6D8);
}

uint64_t sub_1DC15E628()
{
  return sub_1DC15E64C(&qword_1F034C598, (uint64_t)&unk_1DC40F710);
}

uint64_t sub_1DC15E64C(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for WatchlistCellView();
    result = MEMORY[0x1DF0CAB8C](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DC15E68C()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_1DC15E6B0()
{
  uint64_t v0;

  return sub_1DC15E308(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24), *(double *)(v0 + 32), *(double *)(v0 + 40));
}

void sub_1DC15E6C0()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  Class v10;
  uint64_t v11;
  Class v12;
  _QWORD *v13;
  _QWORD *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;

  v1 = v0;
  sub_1DC092F50(0, &qword_1F034C648, (void (*)(uint64_t))sub_1DC15E910);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v17 - v3;
  v5 = OBJC_IVAR____TtC8StocksUI17WatchlistCellView_titleLabel;
  *(_QWORD *)&v1[v5] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v6 = OBJC_IVAR____TtC8StocksUI17WatchlistCellView_editNameButton;
  *(_QWORD *)&v1[v6] = objc_msgSend((id)objc_opt_self(), sel_buttonWithType_, 0);
  v7 = OBJC_IVAR____TtC8StocksUI17WatchlistCellView_hairlineView;
  *(_QWORD *)&v1[v7] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v8 = OBJC_IVAR____TtC8StocksUI17WatchlistCellView_selectionButton;
  if (qword_1EDB2AA40 != -1)
    swift_once();
  sub_1DC15E910();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v4, 1, 1, v9);
  sub_1DC15E9B4();
  objc_allocWithZone(v10);
  swift_retain();
  *(_QWORD *)&v1[v8] = sub_1DC404D38();
  v11 = OBJC_IVAR____TtC8StocksUI17WatchlistCellView_onTapEditName;
  sub_1DC12F234();
  *(_QWORD *)&v1[v11] = objc_msgSend(objc_allocWithZone(v12), sel_init);
  v13 = &v1[OBJC_IVAR____TtC8StocksUI17WatchlistCellView_onEditing];
  *v13 = 0;
  v13[1] = 0;
  v1[OBJC_IVAR____TtC8StocksUI17WatchlistCellView_isEditing] = 0;
  v14 = &v1[OBJC_IVAR____TtC8StocksUI17WatchlistCellView_onSelection];
  *v14 = 0;
  v14[1] = 0;
  v1[OBJC_IVAR____TtC8StocksUI17WatchlistCellView_isSelected] = 0;
  v15 = &v1[OBJC_IVAR____TtC8StocksUI17WatchlistCellView_indexPath];
  v16 = sub_1DC400280();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 1, 1, v16);

  sub_1DC409838();
  __break(1u);
}

void sub_1DC15E910()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F034C650)
  {
    sub_1DC15E978();
    sub_1DC12A1B8();
    v0 = sub_1DC404B94();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1F034C650);
  }
}

unint64_t sub_1DC15E978()
{
  unint64_t result;

  result = qword_1EDB3FB38;
  if (!qword_1EDB3FB38)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EDB3FB38);
  }
  return result;
}

void sub_1DC15E9B4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F034C658)
  {
    type metadata accessor for WatchlistMembershipCommandContext(255);
    sub_1DC15EA38();
    sub_1DC12A1B8();
    v0 = sub_1DC404D5C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1F034C658);
  }
}

unint64_t sub_1DC15EA38()
{
  unint64_t result;

  result = qword_1F034C660;
  if (!qword_1F034C660)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC42B56C, &type metadata for WatchlistState);
    atomic_store(result, (unint64_t *)&qword_1F034C660);
  }
  return result;
}

uint64_t sub_1DC15EA7C(uint64_t a1)
{
  uint64_t v2;

  sub_1DC092F50(0, &qword_1EDB28B50, (void (*)(uint64_t))MEMORY[0x1E0CB1658]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t ScrollPosition.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v14;
  __int128 v15;
  char v16;

  sub_1DC15EF28(0, &qword_1F034C668, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v15 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC15ECD4();
  sub_1DC409B08();
  if (!v2)
  {
    v16 = 0;
    sub_1DC15ED18();
    sub_1DC409910();
    if ((v15 & 1) != 0)
    {
      LOBYTE(v15) = 1;
      v10 = sub_1DC4098F8();
      v12 = v11;
      type metadata accessor for CGPoint(0);
      v16 = 2;
      sub_1DC15EFC8(&qword_1F034C678, MEMORY[0x1E0C9BA30]);
      sub_1DC409910();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      v14 = v15;
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      v10 = 0;
      v12 = 0;
      v14 = 0uLL;
    }
    *(_QWORD *)a2 = v10;
    *(_QWORD *)(a2 + 8) = v12;
    *(_OWORD *)(a2 + 16) = v14;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1DC15ECD4()
{
  unint64_t result;

  result = qword_1EDB2D650;
  if (!qword_1EDB2D650)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC40F9A4, &type metadata for ScrollPosition.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB2D650);
  }
  return result;
}

unint64_t sub_1DC15ED18()
{
  unint64_t result;

  result = qword_1F034C670;
  if (!qword_1F034C670)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC40F97C, &type metadata for ScrollPosition.CodingType);
    atomic_store(result, (unint64_t *)&qword_1F034C670);
  }
  return result;
}

uint64_t ScrollPosition.encode(to:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[2];
  uint64_t v14;
  uint64_t v15;
  char v16;

  sub_1DC15EF28(0, &qword_1EDB3FDD8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v13 - v7;
  v9 = v1[1];
  v13[1] = *v1;
  v10 = v1[2];
  v11 = v1[3];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC15ECD4();
  sub_1DC409B14();
  if (!v9)
  {
    LOBYTE(v14) = 0;
    v16 = 0;
    sub_1DC15EF84();
    goto LABEL_5;
  }
  LOBYTE(v14) = 1;
  v16 = 0;
  sub_1DC15EF84();
  sub_1DC409988();
  if (!v2)
  {
    LOBYTE(v14) = 1;
    sub_1DC409964();
    v14 = v10;
    v15 = v11;
    v16 = 2;
    type metadata accessor for CGPoint(0);
    sub_1DC15EFC8(&qword_1EDB3FB18, MEMORY[0x1E0C9BA20]);
LABEL_5:
    sub_1DC409988();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_1DC15EF28(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC15ECD4();
    v7 = a3(a1, &type metadata for ScrollPosition.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1DC15EF84()
{
  unint64_t result;

  result = qword_1EDB2D660;
  if (!qword_1EDB2D660)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC40F954, &type metadata for ScrollPosition.CodingType);
    atomic_store(result, (unint64_t *)&qword_1EDB2D660);
  }
  return result;
}

uint64_t sub_1DC15EFC8(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    type metadata accessor for CGPoint(255);
    result = MEMORY[0x1DF0CAB8C](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DC15F008()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x696669746E656469;
  if (*v0 != 1)
    v1 = 0x74657366666FLL;
  if (*v0)
    return v1;
  else
    return 1701869940;
}

uint64_t sub_1DC15F05C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC15F7E4(a1, a2);
  *a3 = result;
  return result;
}

void sub_1DC15F080(_BYTE *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_1DC15F08C()
{
  sub_1DC15ECD4();
  return sub_1DC409B20();
}

uint64_t sub_1DC15F0B4()
{
  sub_1DC15ECD4();
  return sub_1DC409B2C();
}

uint64_t sub_1DC15F0DC(char *a1, char *a2)
{
  return sub_1DC159748(*a1, *a2);
}

uint64_t sub_1DC15F0E8()
{
  sub_1DC409AC0();
  sub_1DC408AF4();
  swift_bridgeObjectRelease();
  return sub_1DC409AF0();
}

uint64_t sub_1DC15F158()
{
  sub_1DC408AF4();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DC15F1A4()
{
  sub_1DC409AC0();
  sub_1DC408AF4();
  swift_bridgeObjectRelease();
  return sub_1DC409AF0();
}

uint64_t sub_1DC15F210@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1DC4098A4();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

void sub_1DC15F26C(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 7368564;
  if (*v1)
    v2 = 1835365481;
  v3 = 0xE300000000000000;
  if (*v1)
    v3 = 0xE400000000000000;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1DC15F29C()
{
  sub_1DC15F92C();
  return sub_1DC408CA4();
}

uint64_t sub_1DC15F2F8()
{
  sub_1DC15F92C();
  return sub_1DC408C8C();
}

uint64_t sub_1DC15F344@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ScrollPosition.init(from:)(a1, a2);
}

uint64_t sub_1DC15F358(_QWORD *a1)
{
  return ScrollPosition.encode(to:)(a1);
}

uint64_t initializeWithCopy for ScrollPosition(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for ScrollPosition(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  return a1;
}

uint64_t assignWithTake for ScrollPosition(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for ScrollPosition(uint64_t a1, unsigned int a2)
{
  unint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) >= 2)
    return v3;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for ScrollPosition(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

uint64_t sub_1DC15F4E0(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

_QWORD *sub_1DC15F4F8(_QWORD *result, int a2)
{
  if (a2 < 0)
  {
    result[2] = 0;
    result[3] = 0;
    *result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for ScrollPosition()
{
  return &type metadata for ScrollPosition;
}

uint64_t storeEnumTagSinglePayload for ScrollPosition.CodingType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1DC15F578 + 4 * byte_1DC40F76D[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1DC15F5AC + 4 * byte_1DC40F768[v4]))();
}

uint64_t sub_1DC15F5AC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC15F5B4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC15F5BCLL);
  return result;
}

uint64_t sub_1DC15F5C8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC15F5D0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1DC15F5D4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC15F5DC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ScrollPosition.CodingType()
{
  return &type metadata for ScrollPosition.CodingType;
}

uint64_t storeEnumTagSinglePayload for ScrollPosition.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1DC15F644 + 4 * byte_1DC40F777[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1DC15F678 + 4 * byte_1DC40F772[v4]))();
}

uint64_t sub_1DC15F678(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC15F680(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC15F688);
  return result;
}

uint64_t sub_1DC15F694(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC15F69CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1DC15F6A0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC15F6A8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ScrollPosition.CodingKeys()
{
  return &type metadata for ScrollPosition.CodingKeys;
}

unint64_t sub_1DC15F6C8()
{
  unint64_t result;

  result = qword_1F034C680;
  if (!qword_1F034C680)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC40F88C, &type metadata for ScrollPosition.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F034C680);
  }
  return result;
}

unint64_t sub_1DC15F710()
{
  unint64_t result;

  result = qword_1F034C688;
  if (!qword_1F034C688)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC40F92C, &type metadata for ScrollPosition.CodingType);
    atomic_store(result, (unint64_t *)&qword_1F034C688);
  }
  return result;
}

unint64_t sub_1DC15F758()
{
  unint64_t result;

  result = qword_1EDB27720;
  if (!qword_1EDB27720)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC40F7FC, &type metadata for ScrollPosition.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB27720);
  }
  return result;
}

unint64_t sub_1DC15F7A0()
{
  unint64_t result;

  result = qword_1EDB2D658;
  if (!qword_1EDB2D658)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC40F824, &type metadata for ScrollPosition.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB2D658);
  }
  return result;
}

uint64_t sub_1DC15F7E4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1701869940 && a2 == 0xE400000000000000;
  if (v2 || (sub_1DC4099E8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265 || (sub_1DC4099E8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x74657366666FLL && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1DC4099E8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

unint64_t sub_1DC15F92C()
{
  unint64_t result;

  result = qword_1EDB2D668;
  if (!qword_1EDB2D668)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC40F8B4, &type metadata for ScrollPosition.CodingType);
    atomic_store(result, (unint64_t *)&qword_1EDB2D668);
  }
  return result;
}

uint64_t *sub_1DC15F970(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  _OWORD *v18;
  _OWORD *v19;
  __int128 v20;
  id v21;
  uint64_t v22;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v22 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v22 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    v7 = a3[5];
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_1DC4002BC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    v11 = a3[6];
    v12 = (char *)v4 + v11;
    v13 = (char *)a2 + v11;
    v14 = sub_1DC400220();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
    v15 = a3[7];
    v16 = a3[8];
    v17 = *(void **)((char *)a2 + v15);
    *(uint64_t *)((char *)v4 + v15) = (uint64_t)v17;
    v18 = (_OWORD *)((char *)v4 + v16);
    v19 = (_OWORD *)((char *)a2 + v16);
    v20 = v19[1];
    *v18 = *v19;
    v18[1] = v20;
    v21 = v17;
  }
  return v4;
}

void sub_1DC15FA54(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = a1 + a2[5];
  v5 = sub_1DC4002BC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = a1 + a2[6];
  v7 = sub_1DC400220();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);

}

_OWORD *sub_1DC15FACC(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  _OWORD *v17;
  _OWORD *v18;
  __int128 v19;
  id v20;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1DC4002BC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  v10 = a3[6];
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_1DC400220();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
  v14 = a3[7];
  v15 = a3[8];
  v16 = *(void **)((char *)a2 + v14);
  *(_QWORD *)((char *)a1 + v14) = v16;
  v17 = (_OWORD *)((char *)a1 + v15);
  v18 = (_OWORD *)((char *)a2 + v15);
  v19 = v18[1];
  *v17 = *v18;
  v17[1] = v19;
  v20 = v16;
  return a1;
}

_QWORD *sub_1DC15FB84(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  id v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;

  *a1 = *a2;
  a1[1] = a2[1];
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1DC4002BC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = a3[6];
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_1DC400220();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(v11, v12, v13);
  v14 = a3[7];
  v15 = *(void **)((char *)a2 + v14);
  v16 = *(void **)((char *)a1 + v14);
  *(_QWORD *)((char *)a1 + v14) = v15;
  v17 = v15;

  v18 = a3[8];
  v19 = (_QWORD *)((char *)a1 + v18);
  v20 = (_QWORD *)((char *)a2 + v18);
  *v19 = *v20;
  v19[1] = v20[1];
  v19[2] = v20[2];
  v19[3] = v20[3];
  return a1;
}

_OWORD *sub_1DC15FC68(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _OWORD *v15;
  _OWORD *v16;
  __int128 v17;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1DC4002BC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[6];
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_1DC400220();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
  v14 = a3[8];
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  v15 = (_OWORD *)((char *)a1 + v14);
  v16 = (_OWORD *)((char *)a2 + v14);
  v17 = v16[1];
  *v15 = *v16;
  v15[1] = v17;
  return a1;
}

_OWORD *sub_1DC15FD1C(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  _OWORD *v17;
  _OWORD *v18;
  __int128 v19;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1DC4002BC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  v10 = a3[6];
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_1DC400220();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 40))(v11, v12, v13);
  v14 = a3[7];
  v15 = *(void **)((char *)a1 + v14);
  *(_QWORD *)((char *)a1 + v14) = *(_QWORD *)((char *)a2 + v14);

  v16 = a3[8];
  v17 = (_OWORD *)((char *)a1 + v16);
  v18 = (_OWORD *)((char *)a2 + v16);
  v19 = v18[1];
  *v17 = *v18;
  v17[1] = v19;
  return a1;
}

uint64_t sub_1DC15FDDC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC15FDE8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v12;

  v6 = sub_1DC4002BC();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = a3[5];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  v10 = sub_1DC400220();
  v7 = *(_QWORD *)(v10 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v10;
    v9 = a3[6];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  v12 = *(_QWORD *)(a1 + a3[7]);
  if (v12 >= 0xFFFFFFFF)
    LODWORD(v12) = -1;
  return (v12 + 1);
}

uint64_t sub_1DC15FE8C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC15FE98(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;

  v8 = sub_1DC4002BC();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = a4[5];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + v11, a2, a2, v10);
  }
  result = sub_1DC400220();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = a4[6];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + v11, a2, a2, v10);
  }
  *(_QWORD *)(a1 + a4[7]) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for StockChartCalloutLayoutOptions()
{
  uint64_t result;

  result = qword_1F034C6E8;
  if (!qword_1F034C6E8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1DC15FF74()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1DC4002BC();
  if (v1 <= 0x3F)
  {
    result = sub_1DC400220();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_1DC16001C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  id v30;
  uint64_t v31;
  uint64_t *v32;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  char *v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v1 = v0;
  v2 = sub_1DC4088B4();
  v39 = *(_QWORD *)(v2 - 8);
  v40 = v2;
  MEMORY[0x1E0C80A78](v2);
  v38 = (uint64_t *)((char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v36 = sub_1DC408914();
  v4 = *(_QWORD *)(v36 - 8);
  MEMORY[0x1E0C80A78](v36);
  v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1DC408530();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1DC408908();
  MEMORY[0x1E0C80A78](v11);
  v37 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = v0 + 2;
  __swift_project_boxed_opaque_existential_1(v0 + 2, v0[5]);
  v13 = sub_1DC4024B8();
  v34 = v1 + 7;
  v14 = v1[10];
  v15 = v1[11];
  __swift_project_boxed_opaque_existential_1(v1 + 7, v14);
  v16 = 296;
  if ((v13 & 1) != 0)
    v16 = 312;
  (*(void (**)(uint64_t))(*(_QWORD *)(v15 + 16) + v16))(v14);
  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E0DB23E8], v7);
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E0DB2878], v36);
  sub_1DC4088FC();
  sub_1DC0E7820();
  v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_1DC40FA50;
  v18 = v35;
  __swift_project_boxed_opaque_existential_1(v35, v1[5]);
  v19 = sub_1DC4024B8();
  v21 = v1[10];
  v20 = v1[11];
  v22 = v34;
  __swift_project_boxed_opaque_existential_1(v34, v21);
  if ((v19 & 1) != 0)
    v23 = 320;
  else
    v23 = 304;
  v24 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v20 + 16) + v23))(v21);
  v25 = objc_msgSend((id)v24, sel_colorWithAlphaComponent_, 0.38);

  *(_QWORD *)(v17 + 32) = v25;
  __swift_project_boxed_opaque_existential_1(v18, v1[5]);
  LOBYTE(v24) = sub_1DC4024B8();
  v26 = v1[10];
  v27 = v1[11];
  __swift_project_boxed_opaque_existential_1(v22, v26);
  if ((v24 & 1) != 0)
    v28 = 320;
  else
    v28 = 304;
  v29 = (void *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)(v27 + 16) + v28))(v26);
  v30 = objc_msgSend(v29, sel_colorWithAlphaComponent_, 0.0);

  *(_QWORD *)(v17 + 40) = v30;
  v41 = v17;
  sub_1DC408CF8();
  v31 = v40;
  v32 = v38;
  *v38 = v41;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v39 + 104))(v32, *MEMORY[0x1E0DB2820], v31);
  sub_1DC408944();
  swift_allocObject();
  return sub_1DC408938();
}

uint64_t sub_1DC16037C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  id v30;
  uint64_t v31;
  uint64_t *v32;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  char *v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v1 = v0;
  v2 = sub_1DC4088B4();
  v39 = *(_QWORD *)(v2 - 8);
  v40 = v2;
  MEMORY[0x1E0C80A78](v2);
  v38 = (uint64_t *)((char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v36 = sub_1DC408914();
  v4 = *(_QWORD *)(v36 - 8);
  MEMORY[0x1E0C80A78](v36);
  v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1DC408530();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1DC408908();
  MEMORY[0x1E0C80A78](v11);
  v37 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = v0 + 2;
  __swift_project_boxed_opaque_existential_1(v0 + 2, v0[5]);
  v13 = sub_1DC4024B8();
  v34 = v1 + 7;
  v14 = v1[10];
  v15 = v1[11];
  __swift_project_boxed_opaque_existential_1(v1 + 7, v14);
  v16 = 312;
  if ((v13 & 1) != 0)
    v16 = 296;
  (*(void (**)(uint64_t))(*(_QWORD *)(v15 + 16) + v16))(v14);
  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E0DB23E8], v7);
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E0DB2878], v36);
  sub_1DC4088FC();
  sub_1DC0E7820();
  v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_1DC40FA50;
  v18 = v35;
  __swift_project_boxed_opaque_existential_1(v35, v1[5]);
  v19 = sub_1DC4024B8();
  v21 = v1[10];
  v20 = v1[11];
  v22 = v34;
  __swift_project_boxed_opaque_existential_1(v34, v21);
  if ((v19 & 1) != 0)
    v23 = 304;
  else
    v23 = 320;
  v24 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v20 + 16) + v23))(v21);
  v25 = objc_msgSend((id)v24, sel_colorWithAlphaComponent_, 0.37);

  *(_QWORD *)(v17 + 32) = v25;
  __swift_project_boxed_opaque_existential_1(v18, v1[5]);
  LOBYTE(v24) = sub_1DC4024B8();
  v26 = v1[10];
  v27 = v1[11];
  __swift_project_boxed_opaque_existential_1(v22, v26);
  if ((v24 & 1) != 0)
    v28 = 304;
  else
    v28 = 320;
  v29 = (void *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)(v27 + 16) + v28))(v26);
  v30 = objc_msgSend(v29, sel_colorWithAlphaComponent_, 0.0);

  *(_QWORD *)(v17 + 40) = v30;
  v41 = v17;
  sub_1DC408CF8();
  v31 = v40;
  v32 = v38;
  *v38 = v41;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v39 + 104))(v32, *MEMORY[0x1E0DB2820], v31);
  sub_1DC408944();
  swift_allocObject();
  return sub_1DC408938();
}

uint64_t sub_1DC1606DC()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v1 = v0;
  v2 = sub_1DC4088B4();
  v30 = *(_QWORD *)(v2 - 8);
  v31 = v2;
  MEMORY[0x1E0C80A78](v2);
  v29 = (uint64_t *)((char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v28 = sub_1DC408914();
  v4 = *(_QWORD *)(v28 - 8);
  MEMORY[0x1E0C80A78](v28);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1DC408530();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1DC408908();
  MEMORY[0x1E0C80A78](v11);
  v12 = v0 + 7;
  v14 = v0[10];
  v13 = v0[11];
  __swift_project_boxed_opaque_existential_1(v12, v14);
  (*(void (**)(uint64_t))(*(_QWORD *)(v13 + 16) + 328))(v14);
  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E0DB23E8], v7);
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E0DB2878], v28);
  sub_1DC4088FC();
  sub_1DC0E7820();
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1DC40FA50;
  v17 = v1[10];
  v16 = v1[11];
  __swift_project_boxed_opaque_existential_1(v12, v17);
  v18 = (void *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)(v16 + 16) + 336))(v17);
  v19 = objc_msgSend(v18, sel_colorWithAlphaComponent_, 0.45);

  *(_QWORD *)(v15 + 32) = v19;
  v21 = v1[10];
  v20 = v1[11];
  __swift_project_boxed_opaque_existential_1(v12, v21);
  v22 = (void *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)(v20 + 16) + 336))(v21);
  v23 = objc_msgSend(v22, sel_colorWithAlphaComponent_, 0.0);

  *(_QWORD *)(v15 + 40) = v23;
  v32 = v15;
  sub_1DC408CF8();
  v24 = v31;
  v25 = v29;
  *v29 = v32;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v30 + 104))(v25, *MEMORY[0x1E0DB2820], v24);
  sub_1DC408944();
  swift_allocObject();
  return sub_1DC408938();
}

uint64_t sub_1DC160998()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v1 = v0;
  v2 = sub_1DC4088B4();
  v30 = *(_QWORD *)(v2 - 8);
  v31 = v2;
  MEMORY[0x1E0C80A78](v2);
  v29 = (uint64_t *)((char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v28 = sub_1DC408914();
  v4 = *(_QWORD *)(v28 - 8);
  MEMORY[0x1E0C80A78](v28);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1DC408530();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1DC408908();
  MEMORY[0x1E0C80A78](v11);
  v12 = v0 + 7;
  v14 = v0[10];
  v13 = v0[11];
  __swift_project_boxed_opaque_existential_1(v12, v14);
  (*(void (**)(uint64_t))(*(_QWORD *)(v13 + 16) + 344))(v14);
  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E0DB23E8], v7);
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E0DB2878], v28);
  sub_1DC4088FC();
  sub_1DC0E7820();
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1DC40FA50;
  v17 = v1[10];
  v16 = v1[11];
  __swift_project_boxed_opaque_existential_1(v12, v17);
  v18 = (void *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)(v16 + 16) + 352))(v17);
  v19 = objc_msgSend(v18, sel_colorWithAlphaComponent_, 0.45);

  *(_QWORD *)(v15 + 32) = v19;
  v21 = v1[10];
  v20 = v1[11];
  __swift_project_boxed_opaque_existential_1(v12, v21);
  v22 = (void *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)(v20 + 16) + 352))(v21);
  v23 = objc_msgSend(v22, sel_colorWithAlphaComponent_, 0.0);

  *(_QWORD *)(v15 + 40) = v23;
  v32 = v15;
  sub_1DC408CF8();
  v24 = v31;
  v25 = v29;
  *v29 = v32;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v30 + 104))(v25, *MEMORY[0x1E0DB2820], v24);
  sub_1DC408944();
  swift_allocObject();
  return sub_1DC408938();
}

_QWORD *sub_1DC160C54(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t *boxed_opaque_existential_1;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t *v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v25;
  uint64_t v26[5];
  uint64_t v27[5];
  __int128 v28[2];

  v25 = *v1;
  sub_1DC0824D4((uint64_t)(v1 + 2), (uint64_t)v28);
  v4 = v1[10];
  v3 = v1[11];
  __swift_project_boxed_opaque_existential_1(v1 + 7, v4);
  v5 = *(_QWORD *)(v3 + 8);
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 8);
  v27[3] = v4;
  v27[4] = v3;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v27);
  v6(a1, v4, v5);
  v9 = v1[15];
  v8 = v1[16];
  __swift_project_boxed_opaque_existential_1(v1 + 12, v9);
  v10 = *(_QWORD *)(v8 + 8);
  v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 8);
  v26[3] = v9;
  v26[4] = v8;
  v12 = __swift_allocate_boxed_opaque_existential_1(v26);
  v13 = v11(a1, v9, v10);
  v14 = MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v26[-1] - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = (*(uint64_t (**)(char *, uint64_t *, uint64_t, __n128))(v17 + 16))(v16, boxed_opaque_existential_1, v4, v14);
  v19 = MEMORY[0x1E0C80A78](v18);
  v21 = (char *)&v26[-1] - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t *, uint64_t, __n128))(v22 + 16))(v21, v12, v9, v19);
  v23 = sub_1DC1627AC(v28, (uint64_t)v16, (uint64_t)v21, v25, v4, v9, v3, v8);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
  return v23;
}

uint64_t sub_1DC160DEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  _QWORD *v4;
  unint64_t v5;
  uint64_t inited;
  void *v7;
  uint64_t v8;
  void *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, uint64_t);
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  void *v23;
  id v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(uint64_t, uint64_t);
  id v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  id v37;
  void *v38;
  uint64_t v39;
  unint64_t v40;
  unsigned int v41;
  _QWORD *v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  id v49;
  void *v50;
  id v51;
  id v52;
  id v53;
  void *v54;
  id v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  BOOL v60;
  void (*v62)(char *, unint64_t);
  void (*v63)(char *, uint64_t, unint64_t);
  id v64;
  uint64_t v65;
  __int128 v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;
  _QWORD *v70;

  v1 = v0;
  v68 = sub_1DC405164();
  v69 = *(_QWORD *)(v68 - 8);
  MEMORY[0x1E0C80A78](v68);
  v3 = (char *)&v62 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = (_QWORD *)(v0 + 96);
  v4 = (_QWORD *)*__swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + 96), *(_QWORD *)(v1 + 120));
  sub_1DC089DA4(0, (unint64_t *)&qword_1EDB40090, (uint64_t (*)(uint64_t))sub_1DC112C08, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v67 = v5;
  inited = swift_initStackObject();
  v66 = xmmword_1DC40C740;
  *(_OWORD *)(inited + 16) = xmmword_1DC40C740;
  v7 = (void *)*MEMORY[0x1E0DC1138];
  *(_QWORD *)(inited + 32) = *MEMORY[0x1E0DC1138];
  v8 = sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FB00);
  v65 = *MEMORY[0x1E0DC4AB8];
  v64 = v7;
  *(_QWORD *)(inited + 40) = sub_1DC409304();
  v9 = (void *)*MEMORY[0x1E0DC1140];
  *(_QWORD *)(inited + 64) = v8;
  *(_QWORD *)(inited + 72) = v9;
  v10 = v4 + 2;
  v12 = v4[5];
  v11 = v4[6];
  __swift_project_boxed_opaque_existential_1(v10, v12);
  v13 = *(_QWORD *)(v11 + 16);
  v14 = *(uint64_t (**)(uint64_t, uint64_t))(v13 + 48);
  v15 = v9;
  v16 = v14(v12, v13);
  v17 = sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FB30);
  *(_QWORD *)(inited + 104) = v17;
  *(_QWORD *)(inited + 80) = v16;
  sub_1DC0FA3C4(inited);
  v18 = *MEMORY[0x1E0DB9300];
  v19 = v69;
  v63 = *(void (**)(char *, uint64_t, unint64_t))(v69 + 104);
  v20 = v68;
  v63(v3, v18, v68);
  sub_1DC404918();
  swift_bridgeObjectRelease();
  v62 = *(void (**)(char *, unint64_t))(v19 + 8);
  v62(v3, v20);
  v69 = v1;
  v21 = (_QWORD *)*__swift_project_boxed_opaque_existential_1(v70, *(_QWORD *)(v1 + 120));
  v22 = swift_initStackObject();
  *(_OWORD *)(v22 + 16) = v66;
  v23 = v64;
  *(_QWORD *)(v22 + 32) = v64;
  v24 = v23;
  *(_QWORD *)(v22 + 40) = sub_1DC409304();
  *(_QWORD *)(v22 + 64) = v8;
  *(_QWORD *)(v22 + 72) = v15;
  v25 = v21 + 2;
  v26 = v21[5];
  v27 = v21[6];
  __swift_project_boxed_opaque_existential_1(v25, v26);
  v28 = *(_QWORD *)(v27 + 16);
  v29 = *(uint64_t (**)(uint64_t, uint64_t))(v28 + 48);
  v30 = v15;
  v31 = v29(v26, v28);
  *(_QWORD *)(v22 + 104) = v17;
  *(_QWORD *)(v22 + 80) = v31;
  sub_1DC0FA3C4(v22);
  v63(v3, *MEMORY[0x1E0DB9308], v20);
  sub_1DC404918();
  swift_bridgeObjectRelease();
  v62(v3, v20);
  v32 = sub_1DC404930();
  v33 = v32;
  if (v32 >> 62)
  {
LABEL_19:
    swift_bridgeObjectRetain();
    v34 = sub_1DC409850();
    if (v34)
      goto LABEL_3;
  }
  else
  {
    v34 = *(_QWORD *)((v32 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v34)
    {
LABEL_3:
      v68 = v33 & 0xC000000000000001;
      v35 = 4;
      *(_QWORD *)&v66 = *MEMORY[0x1E0CD2A68];
      v36 = 0x1F29CC000uLL;
      v67 = v33;
      while (1)
      {
        if (v68)
          v37 = (id)MEMORY[0x1DF0C9FBC](v35 - 4, v33);
        else
          v37 = *(id *)(v33 + 8 * v35);
        v38 = v37;
        if (__OFADD__(v35 - 4, 1))
        {
          __break(1u);
          goto LABEL_19;
        }
        v39 = v34;
        v40 = v36;
        v41 = objc_msgSend(v37, sel_isSelected);
        v42 = __swift_project_boxed_opaque_existential_1(v70, *(_QWORD *)(v69 + 120));
        v43 = *v42;
        v44 = (_QWORD *)(*v42 + 16);
        v45 = *(_QWORD *)(*v42 + 40);
        v46 = *(_QWORD *)(*v42 + 48);
        __swift_project_boxed_opaque_existential_1(v44, v45);
        v47 = *(_QWORD *)(v46 + 16);
        if (v41)
          break;
        v54 = (void *)(*(uint64_t (**)(uint64_t))(v47 + 72))(v45);
        v36 = v40;
        objc_msgSend(v38, (SEL)(v40 + 840), v54);

        v55 = objc_msgSend(v38, sel_titleLabel);
        if (v55)
        {
          v56 = v55;
          v58 = *(_QWORD *)(v43 + 40);
          v57 = *(_QWORD *)(v43 + 48);
          __swift_project_boxed_opaque_existential_1(v44, v58);
          v59 = v58;
          v36 = v40;
          v53 = (id)(*(uint64_t (**)(uint64_t))(*(_QWORD *)(v57 + 16) + 72))(v59);
          objc_msgSend(v56, (SEL)(v40 + 840), v53);

LABEL_14:
          goto LABEL_15;
        }

LABEL_15:
        v34 = v39;
        v60 = v35 - 3 == v39;
        v33 = v67;
        if (v60)
          return swift_bridgeObjectRelease_n();
        ++v35;
      }
      v48 = (void *)(*(uint64_t (**)(uint64_t))(v47 + 408))(v45);
      v36 = v40;
      objc_msgSend(v38, (SEL)(v40 + 840), v48);

      v49 = objc_msgSend(v38, sel_titleLabel);
      if (v49)
      {
        v50 = v49;
        v51 = objc_msgSend((id)objc_opt_self(), sel_clearColor);
        objc_msgSend(v50, (SEL)(v40 + 840), v51);

      }
      v52 = objc_msgSend(v38, sel_layer);
      objc_msgSend(v52, sel_setCornerCurve_, (_QWORD)v66);

      v53 = objc_msgSend(v38, sel_layer);
      objc_msgSend(v53, sel_setCornerRadius_, 8.0);

      goto LABEL_14;
    }
  }
  return swift_bridgeObjectRelease_n();
}

void sub_1DC161408(unsigned __int8 a1@<W0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  _QWORD *v3;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  char v22;
  int v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  _QWORD *v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v3 = v2;
  v5 = a1;
  v6 = sub_1DC4088B4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (uint64_t *)((char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = sub_1DC408914();
  v46 = *(_QWORD *)(v10 - 8);
  v47 = v10;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1DC408530();
  v44 = *(_QWORD *)(v13 - 8);
  v45 = v13;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1DC408908();
  MEMORY[0x1E0C80A78](v16);
  v48 = sub_1DC16188C(v3);
  v49 = v7;
  v50 = v6;
  v51 = a2;
  if (v5 == 2)
    goto LABEL_2;
  if ((v5 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  v22 = sub_1DC4099E8();
  swift_bridgeObjectRelease();
  if ((v22 & 1) != 0)
  {
LABEL_11:
    v23 = v5 & 1;
    __swift_project_boxed_opaque_existential_1(v3 + 2, v3[5]);
    v24 = sub_1DC4024B8();
    v25 = v3[10];
    v26 = v3[11];
    __swift_project_boxed_opaque_existential_1(v3 + 7, v25);
    v27 = *(_QWORD *)(v26 + 16);
    if ((v24 & 1) != 0)
      v28 = (*(uint64_t (**)(uint64_t))(v27 + 296))(v25);
    else
      v28 = (*(uint64_t (**)(uint64_t))(v27 + 312))(v25);
    v21 = (void *)v28;
    if (v23)
      goto LABEL_6;
    goto LABEL_15;
  }
LABEL_2:
  __swift_project_boxed_opaque_existential_1(v3 + 2, v3[5]);
  v17 = sub_1DC4024B8();
  v19 = v3[10];
  v18 = v3[11];
  __swift_project_boxed_opaque_existential_1(v3 + 7, v19);
  v20 = 296;
  if ((v17 & 1) != 0)
    v20 = 312;
  v21 = (void *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)(v18 + 16) + v20))(v19);
  if (v5 == 2)
  {
LABEL_18:
    __swift_project_boxed_opaque_existential_1(v3 + 2, v3[5]);
    v36 = sub_1DC4024B8();
    v37 = v3 + 7;
    v32 = v3[10];
    v38 = v3[11];
    __swift_project_boxed_opaque_existential_1(v37, v32);
    v34 = *(_QWORD *)(v38 + 16);
    if ((v36 & 1) == 0)
      goto LABEL_17;
LABEL_19:
    v35 = (*(uint64_t (**)(uint64_t))(v34 + 320))(v32);
    goto LABEL_20;
  }
  if ((v5 & 1) != 0)
  {
LABEL_6:
    swift_bridgeObjectRelease();
    goto LABEL_16;
  }
LABEL_15:
  v29 = sub_1DC4099E8();
  swift_bridgeObjectRelease();
  if ((v29 & 1) == 0)
    goto LABEL_18;
LABEL_16:
  __swift_project_boxed_opaque_existential_1(v3 + 2, v3[5]);
  v30 = sub_1DC4024B8();
  v31 = v3 + 7;
  v32 = v3[10];
  v33 = v3[11];
  __swift_project_boxed_opaque_existential_1(v31, v32);
  v34 = *(_QWORD *)(v33 + 16);
  if ((v30 & 1) == 0)
    goto LABEL_19;
LABEL_17:
  v35 = (*(uint64_t (**)(uint64_t))(v34 + 304))(v32);
LABEL_20:
  v39 = (void *)v35;
  sub_1DC0E7820();
  v40 = swift_allocObject();
  *(_OWORD *)(v40 + 16) = xmmword_1DC40FA60;
  v41 = objc_msgSend(v21, sel_colorWithAlphaComponent_, 0.4);
  (*(void (**)(char *, _QWORD, uint64_t))(v44 + 104))(v15, *MEMORY[0x1E0DB23E8], v45);
  (*(void (**)(char *, _QWORD, uint64_t))(v46 + 104))(v12, *MEMORY[0x1E0DB2878], v47);
  sub_1DC4088FC();
  v42 = swift_allocObject();
  *(_OWORD *)(v42 + 16) = xmmword_1DC40FA50;
  *(_QWORD *)(v42 + 32) = objc_msgSend(v39, sel_colorWithAlphaComponent_, 0.12);
  *(_QWORD *)(v42 + 40) = objc_msgSend(v39, sel_colorWithAlphaComponent_, 0.0);
  v52 = v42;
  sub_1DC408CF8();
  *v9 = v52;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v49 + 104))(v9, *MEMORY[0x1E0DB2820], v50);
  sub_1DC408944();
  swift_allocObject();
  *(_QWORD *)(v40 + 32) = sub_1DC408938();
  v52 = v40;
  sub_1DC408CF8();
  sub_1DC4085D8();

}

unint64_t sub_1DC16188C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t (*v6)(uint64_t);
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;

  sub_1DC1628E4(0);
  v13 = v2;
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC089DA4(0, &qword_1EDB40038, v6, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v7 = ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))
     + 3 * *(_QWORD *)(v3 + 72);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1DC40FA70;
  v15 = sub_1DC16037C();
  sub_1DC408944();
  sub_1DC408968();
  v15 = sub_1DC16001C();
  sub_1DC408968();
  v15 = sub_1DC160998();
  sub_1DC408968();
  v10 = a1[10];
  v9 = a1[11];
  __swift_project_boxed_opaque_existential_1(a1 + 7, v10);
  (*(void (**)(char *__return_ptr, uint64_t))(*(_QWORD *)(v9 + 16) + 368))(&v14, v10);
  if (v14 == 1)
  {
    v15 = sub_1DC1606DC();
    sub_1DC408968();
    v8 = sub_1DC166748(1, 4, 1, v8);
    *(_QWORD *)(v8 + 16) = 4;
    (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v8 + v7, v5, v13);
  }
  return v8;
}

uint64_t sub_1DC161AB4@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v21 = a1;
  v2 = sub_1DC4086C8();
  v19 = *(_QWORD *)(v2 - 8);
  v20 = v2;
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1DC408914();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1DC408530();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1DC408908();
  MEMORY[0x1E0C80A78](v13);
  v14 = v1 + 7;
  v16 = v1[10];
  v15 = v1[11];
  __swift_project_boxed_opaque_existential_1(v14, v16);
  (*(void (**)(uint64_t))(*(_QWORD *)(v15 + 16) + 384))(v16);
  (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x1E0DB23E8], v9);
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0DB2878], v5);
  sub_1DC4088FC();
  (*(void (**)(char *, _QWORD, uint64_t))(v19 + 104))(v4, *MEMORY[0x1E0DB25C0], v20);
  return sub_1DC408920();
}

uint64_t sub_1DC161C9C@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v21 = a1;
  v2 = sub_1DC4086C8();
  v19 = *(_QWORD *)(v2 - 8);
  v20 = v2;
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1DC408914();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1DC408530();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1DC408908();
  MEMORY[0x1E0C80A78](v13);
  v14 = v1 + 7;
  v16 = v1[10];
  v15 = v1[11];
  __swift_project_boxed_opaque_existential_1(v14, v16);
  (*(void (**)(uint64_t))(*(_QWORD *)(v15 + 16) + 392))(v16);
  (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x1E0DB23E8], v9);
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0DB2878], v5);
  sub_1DC4088FC();
  (*(void (**)(char *, _QWORD, uint64_t))(v19 + 104))(v4, *MEMORY[0x1E0DB25C8], v20);
  return sub_1DC408920();
}

uint64_t sub_1DC161E84@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v21 = a1;
  v2 = sub_1DC4086C8();
  v19 = *(_QWORD *)(v2 - 8);
  v20 = v2;
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1DC408914();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1DC408530();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1DC408908();
  MEMORY[0x1E0C80A78](v13);
  v14 = v1 + 7;
  v16 = v1[10];
  v15 = v1[11];
  __swift_project_boxed_opaque_existential_1(v14, v16);
  (*(void (**)(uint64_t))(*(_QWORD *)(v15 + 16) + 400))(v16);
  (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x1E0DB23E8], v9);
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0DB2878], v5);
  sub_1DC4088FC();
  (*(void (**)(char *, _QWORD, uint64_t))(v19 + 104))(v4, *MEMORY[0x1E0DB25C0], v20);
  return sub_1DC408920();
}

uint64_t sub_1DC16206C@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  __n128 v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v19[2];

  v19[1] = a1;
  v19[0] = sub_1DC4086C8();
  v2 = *(_QWORD *)(v19[0] - 8);
  MEMORY[0x1E0C80A78](v19[0]);
  v4 = (char *)v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1DC408914();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1DC408530();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (_QWORD *)((char *)v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = sub_1DC408908();
  v14 = MEMORY[0x1E0C80A78](v13);
  *v12 = &unk_1EA44CFD8;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, __n128))(v10 + 104))(v12, *MEMORY[0x1E0DB23F0], v9, v14);
  v15 = v1 + 7;
  v17 = v1[10];
  v16 = v1[11];
  __swift_project_boxed_opaque_existential_1(v15, v17);
  (*(void (**)(uint64_t))(*(_QWORD *)(v16 + 16) + 360))(v17);
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0DB2880], v5);
  sub_1DC4088FC();
  (*(void (**)(char *, _QWORD, _QWORD))(v2 + 104))(v4, *MEMORY[0x1E0DB25C8], v19[0]);
  return sub_1DC408920();
}

id sub_1DC162260()
{
  _QWORD *v0;
  uint64_t inited;
  void **v2;
  void *v3;
  void *v4;
  double v5;
  id v6;
  id v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t);
  id v14;
  uint64_t v15;
  id v16;
  void *v17;
  void *v18;
  id v19;

  sub_1DC089DA4(0, (unint64_t *)&qword_1EDB40090, (uint64_t (*)(uint64_t))sub_1DC112C08, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  v2 = (void **)MEMORY[0x1E0DC1138];
  *(_OWORD *)(inited + 16) = xmmword_1DC40C740;
  v3 = *v2;
  *(_QWORD *)(inited + 32) = *v2;
  v4 = (void *)objc_opt_self();
  v5 = *MEMORY[0x1E0DC1448];
  swift_bridgeObjectRetain();
  v6 = v3;
  v7 = objc_msgSend(v4, sel_monospacedDigitSystemFontOfSize_weight_, 13.0, v5);
  v8 = sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FB00);
  *(_QWORD *)(inited + 40) = v7;
  v9 = (void *)*MEMORY[0x1E0DC1140];
  *(_QWORD *)(inited + 64) = v8;
  *(_QWORD *)(inited + 72) = v9;
  v10 = v0[10];
  v11 = v0[11];
  __swift_project_boxed_opaque_existential_1(v0 + 7, v10);
  v12 = *(_QWORD *)(v11 + 16);
  v13 = *(uint64_t (**)(uint64_t, uint64_t))(v12 + 48);
  v14 = v9;
  v15 = v13(v10, v12);
  *(_QWORD *)(inited + 104) = sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FB30);
  *(_QWORD *)(inited + 80) = v15;
  sub_1DC0FA3C4(inited);
  v16 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  v17 = (void *)sub_1DC408A1C();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1DC0FB14C();
  v18 = (void *)sub_1DC408980();
  swift_bridgeObjectRelease();
  v19 = objc_msgSend(v16, sel_initWithString_attributes_, v17, v18);

  return v19;
}

id sub_1DC16244C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t inited;
  void **v8;
  void *v9;
  void *v10;
  double v11;
  id v12;
  id v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t, uint64_t);
  id v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;
  id v25;
  void *v26;
  void *v27;
  id v28;

  sub_1DC089DA4(0, (unint64_t *)&qword_1EDB40090, (uint64_t (*)(uint64_t))sub_1DC112C08, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  v8 = (void **)MEMORY[0x1E0DC1138];
  *(_OWORD *)(inited + 16) = xmmword_1DC40FA70;
  v9 = *v8;
  *(_QWORD *)(inited + 32) = *v8;
  v10 = (void *)objc_opt_self();
  v11 = *MEMORY[0x1E0DC1448];
  swift_bridgeObjectRetain();
  v12 = v9;
  v13 = objc_msgSend(v10, sel_monospacedDigitSystemFontOfSize_weight_, 13.0, v11);
  v14 = sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FB00);
  *(_QWORD *)(inited + 40) = v13;
  v15 = (void *)*MEMORY[0x1E0DC1140];
  *(_QWORD *)(inited + 64) = v14;
  *(_QWORD *)(inited + 72) = v15;
  v16 = v4[10];
  v17 = v4[11];
  __swift_project_boxed_opaque_existential_1(v4 + 7, v16);
  v18 = *(_QWORD *)(v17 + 16);
  v19 = *(uint64_t (**)(uint64_t, uint64_t))(v18 + 48);
  v20 = v15;
  v21 = v19(v16, v18);
  v22 = sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FB30);
  *(_QWORD *)(inited + 80) = v21;
  v23 = (void *)*MEMORY[0x1E0DC4610];
  *(_QWORD *)(inited + 104) = v22;
  *(_QWORD *)(inited + 112) = v23;
  *(_QWORD *)(inited + 144) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(inited + 120) = a3;
  *(_QWORD *)(inited + 128) = a4;
  v24 = v23;
  swift_bridgeObjectRetain();
  sub_1DC0FA3C4(inited);
  v25 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  v26 = (void *)sub_1DC408A1C();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1DC0FB14C();
  v27 = (void *)sub_1DC408980();
  swift_bridgeObjectRelease();
  v28 = objc_msgSend(v25, sel_initWithString_attributes_, v26, v27);

  return v28;
}

uint64_t sub_1DC162670()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for StockChartStyler()
{
  return objc_opt_self();
}

uint64_t sub_1DC1626C4@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC161AB4(a1);
}

uint64_t sub_1DC1626E4@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC161C9C(a1);
}

uint64_t sub_1DC162704@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC161E84(a1);
}

uint64_t sub_1DC162724@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC16206C(a1);
}

id sub_1DC162744()
{
  return sub_1DC162260();
}

id sub_1DC162764(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1DC16244C(a1, a2, a3, a4);
}

_QWORD *sub_1DC162784@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *result;

  result = sub_1DC160C54(a1);
  *a2 = result;
  return result;
}

_QWORD *sub_1DC1627AC(__int128 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t *boxed_opaque_existential_1;
  uint64_t *v15;
  _QWORD *v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24[3];
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;

  v28 = a5;
  v29 = a7;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v27);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a5 - 8) + 32))(boxed_opaque_existential_1, a2, a5);
  v25 = a6;
  v26 = a8;
  v15 = __swift_allocate_boxed_opaque_existential_1(v24);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a6 - 8) + 32))(v15, a3, a6);
  v16 = (_QWORD *)swift_allocObject();
  v17 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v24, v25);
  v18 = MEMORY[0x1E0C80A78](v17);
  v20 = (uint64_t *)((char *)v24 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v21 + 16))(v20, v18);
  v22 = *v20;
  v16[15] = type metadata accessor for DateRangePickerStyler();
  v16[16] = &off_1EA44EDF8;
  v16[12] = v22;
  sub_1DC097DD0(a1, (uint64_t)(v16 + 2));
  sub_1DC097DD0(&v27, (uint64_t)(v16 + 7));
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
  return v16;
}

void sub_1DC1628E4(uint64_t a1)
{
  sub_1DC089DA4(a1, &qword_1EDB3F578, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB28D8], MEMORY[0x1E0DB2900]);
}

uint64_t sub_1DC162900()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 40);
  v2 = __swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)v0 + 16), v1);
  v3 = *(_QWORD *)(v1 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, __n128))(v3 + 16))(v6, v4);
  sub_1DC400A6C();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v1);
  sub_1DC406F7C();
  return swift_release();
}

uint64_t sub_1DC1629B8@<X0>(uint64_t a1@<X3>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  uint64_t result;
  uint64_t v16;

  v5 = sub_1DC40124C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(*(_QWORD *)v2 + 40);
  v10 = __swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)v2 + 16), v9);
  v11 = *(_QWORD *)(v9 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v16 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, __n128))(v11 + 16))(v14, v12);
  sub_1DC400A60();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v9);
  LOBYTE(v14) = MEMORY[0x1DF0C1A78](a1, v8);
  result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  *a2 = v14 & 1;
  return result;
}

uint64_t sub_1DC162AD0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC162ADC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;

  v6 = sub_1DC4052FC();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 2)
    return ((v9 + 2147483646) & 0x7FFFFFFF) + 1;
  else
    return 0;
}

uint64_t sub_1DC162B68()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC162B74(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1DC4052FC();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 20)) = a2 + 1;
  return result;
}

uint64_t sub_1DC162BEC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t (*v39)(_QWORD);
  int EnumCaseMultiPayload;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(_QWORD, _QWORD, _QWORD);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char **v49;
  char *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  void (*v66)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v67;
  void (*v68)(_QWORD, _QWORD, _QWORD);
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void (*v73)(char *, char *, uint64_t);
  unsigned int (*v74)(uint64_t, uint64_t, uint64_t);
  uint64_t v75;
  uint64_t *v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  char v80;
  uint64_t v81;
  uint64_t v82;
  void (*v83)(char *, uint64_t);
  char *v84;
  _QWORD *v85;
  uint64_t v86;
  void (*v87)(char *, _QWORD, uint64_t);
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  char *v95;
  uint64_t *v96;
  uint64_t v97;
  char *v98;
  char *v99;
  char **v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  _QWORD *v108;
  __int128 v109;
  uint64_t v110;
  __int128 v111;
  __int128 v112[2];
  __int128 v113[2];
  __int128 v114;
  __int128 v115;

  *(_QWORD *)&v109 = a2;
  *(_QWORD *)&v111 = a1;
  sub_1DC12D96C();
  MEMORY[0x1E0C80A78](v2);
  v95 = (char *)&v95 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for CuratedForYouFeedGroupConfigData();
  MEMORY[0x1E0C80A78](v4);
  v96 = (uint64_t *)((char *)&v95 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = type metadata accessor for ForYouFeedKnobsConfig();
  MEMORY[0x1E0C80A78](v6);
  v107 = (uint64_t)&v95 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC163990();
  MEMORY[0x1E0C80A78](v8);
  v97 = (uint64_t)&v95 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v101 = (uint64_t)&v95 - v11;
  v106 = type metadata accessor for CuratedForYouFeedGroupKnobs();
  v104 = *(_QWORD *)(v106 - 8);
  MEMORY[0x1E0C80A78](v106);
  v98 = (char *)&v95 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v99 = (char *)&v95 - v14;
  sub_1DC0C9CBC();
  v102 = v15;
  v110 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v103 = (char *)&v95 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v105 = (char *)&v95 - v18;
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v95 - v20;
  v22 = sub_1DC40070C();
  v23 = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v22);
  v25 = (char *)&v95 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for StockForYouFeedGroupKnobs();
  MEMORY[0x1E0C80A78](v26);
  v100 = (char **)((char *)&v95 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1DC0C9C18();
  v29 = v28;
  v30 = *(_QWORD *)(v28 - 8);
  MEMORY[0x1E0C80A78](v28);
  v32 = (char *)&v95 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v33);
  v35 = (char *)&v95 - v34;
  v36 = type metadata accessor for ForYouFeedGroupConfig();
  MEMORY[0x1E0C80A78](v36);
  v38 = (char *)&v95 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0990BC(v111, (uint64_t)v38, v39);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      *(_QWORD *)&v111 = v30;
      v110 = *(_QWORD *)(v30 + 32);
      ((void (*)(char *, char *, uint64_t))v110)(v35, v38, v29);
      v41 = v108;
      __swift_project_boxed_opaque_existential_1(v108 + 8, v108[11]);
      if ((sub_1DC400BE0() & 1) != 0)
      {
        v42 = v41[2];
        sub_1DC0824D4((uint64_t)(v41 + 3), (uint64_t)&v115);
        v43 = v111;
        (*(void (**)(char *, char *, uint64_t))(v111 + 16))(v32, v35, v29);
        sub_1DC0824D4((uint64_t)(v41 + 18), (uint64_t)&v114);
        v44 = (void (*)(_QWORD, _QWORD, _QWORD))v100;
        sub_1DC0990BC(v109, (uint64_t)v100, (uint64_t (*)(_QWORD))type metadata accessor for StockForYouFeedGroupKnobs);
        sub_1DC0824D4((uint64_t)(v41 + 23), (uint64_t)v113);
        v109 = *(_OWORD *)((char *)v41 + OBJC_IVAR____TtC8StocksUI29ForYouFeedGroupEmitterFactory_newsUserProfileProvider);
        sub_1DC0824D4((uint64_t)v41 + OBJC_IVAR____TtC8StocksUI29ForYouFeedGroupEmitterFactory_formatService, (uint64_t)v112);
        type metadata accessor for StockForYouFeedGroupEmitter();
        v45 = swift_allocObject();
        *(_QWORD *)(v45 + 16) = v42;
        sub_1DC097DD0(&v115, v45 + 24);
        ((void (*)(uint64_t, char *, uint64_t))v110)(v45 + OBJC_IVAR____TtC8StocksUI27StockForYouFeedGroupEmitter_config, v32, v29);
        sub_1DC097DD0(&v114, v45 + OBJC_IVAR____TtC8StocksUI27StockForYouFeedGroupEmitter_headlineViewingHistory);
        sub_1DC092ED0((uint64_t)v44, v45 + OBJC_IVAR____TtC8StocksUI27StockForYouFeedGroupEmitter_knobs, (uint64_t (*)(_QWORD))type metadata accessor for StockForYouFeedGroupKnobs);
        sub_1DC097DD0(v113, v45 + OBJC_IVAR____TtC8StocksUI27StockForYouFeedGroupEmitter_newsFeedService);
        *(_OWORD *)(v45 + OBJC_IVAR____TtC8StocksUI27StockForYouFeedGroupEmitter_newsUserProfileProvider) = v109;
        sub_1DC097DD0(v112, v45 + OBJC_IVAR____TtC8StocksUI27StockForYouFeedGroupEmitter_formatService);
        *(_QWORD *)&v115 = v45;
        sub_1DC1639E4(0, (unint64_t *)&qword_1EDB2ADF8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0D5A958]);
        swift_allocObject();
        sub_1DC080808(&qword_1EDB37C68, (uint64_t (*)(uint64_t))type metadata accessor for StockForYouFeedGroupEmitter, (uint64_t)&unk_1DC41F790);
        swift_unknownObjectRetain();
        swift_unknownObjectRetain();
        v46 = sub_1DC4074C8();
        (*(void (**)(char *, uint64_t))(v43 + 8))(v35, v29);
      }
      else
      {
        __swift_project_boxed_opaque_existential_1(v41 + 3, v41[6]);
        sub_1DC400DCC();
        v67 = v111;
        (*(void (**)(char *, char *, uint64_t))(v111 + 16))(v32, v35, v29);
        v68 = (void (*)(_QWORD, _QWORD, _QWORD))v100;
        sub_1DC0990BC(v109, (uint64_t)v100, (uint64_t (*)(_QWORD))type metadata accessor for StockForYouFeedGroupKnobs);
        sub_1DC0824D4((uint64_t)v41 + OBJC_IVAR____TtC8StocksUI29ForYouFeedGroupEmitterFactory_stockFeedService, (uint64_t)&v115);
        type metadata accessor for YahooStockForYouFeedGroupEmitter();
        v69 = v29;
        v70 = swift_allocObject();
        (*(void (**)(uint64_t, char *, uint64_t))(v23 + 32))(v70 + OBJC_IVAR____TtC8StocksUI32YahooStockForYouFeedGroupEmitter_appConfiguration, v25, v22);
        ((void (*)(uint64_t, char *, uint64_t))v110)(v70 + OBJC_IVAR____TtC8StocksUI32YahooStockForYouFeedGroupEmitter_config, v32, v69);
        sub_1DC092ED0((uint64_t)v68, v70 + OBJC_IVAR____TtC8StocksUI32YahooStockForYouFeedGroupEmitter_knobs, (uint64_t (*)(_QWORD))type metadata accessor for StockForYouFeedGroupKnobs);
        sub_1DC097DD0(&v115, v70 + OBJC_IVAR____TtC8StocksUI32YahooStockForYouFeedGroupEmitter_stockFeedService);
        *(_QWORD *)&v115 = v70;
        sub_1DC1639E4(0, (unint64_t *)&qword_1EDB2ADF8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0D5A958]);
        swift_allocObject();
        sub_1DC080808(&qword_1F034C730, (uint64_t (*)(uint64_t))type metadata accessor for YahooStockForYouFeedGroupEmitter, (uint64_t)&unk_1DC41F260);
        v46 = sub_1DC4074C8();
        (*(void (**)(char *, uint64_t))(v67 + 8))(v35, v69);
      }
    }
    else
    {
      v49 = *(char ***)(v110 + 32);
      v50 = v38;
      v51 = v102;
      v52 = v21;
      ((void (*)(char *, char *, uint64_t))v49)(v21, v50, v102);
      v53 = type metadata accessor for ForYouFeedGroupKnobs();
      v54 = v109;
      v55 = *(_QWORD *)(v109 + *(int *)(v53 + 24));
      v56 = sub_1DC40742C();
      v58 = *(_QWORD *)(v55 + 16);
      v100 = v49;
      if (v58)
      {
        v59 = sub_1DC0ED368(v56, v57);
        v60 = v101;
        v61 = v105;
        v62 = v106;
        v63 = v104;
        if ((v64 & 1) != 0)
        {
          sub_1DC0990BC(*(_QWORD *)(v55 + 56) + *(_QWORD *)(v104 + 72) * v59, v101, (uint64_t (*)(_QWORD))type metadata accessor for CuratedForYouFeedGroupKnobs);
          v65 = v63;
          v66 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v63 + 56);
          v66(v60, 0, 1, v62);
        }
        else
        {
          v65 = v104;
          v66 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v104 + 56);
          v66(v101, 1, 1, v106);
        }
      }
      else
      {
        v65 = v104;
        v66 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v104 + 56);
        v60 = v101;
        v62 = v106;
        v66(v101, 1, 1, v106);
        v61 = v105;
      }
      swift_bridgeObjectRelease();
      v71 = v107;
      sub_1DC0990BC(v54, v107, (uint64_t (*)(_QWORD))type metadata accessor for ForYouFeedKnobsConfig);
      v72 = v110;
      v73 = *(void (**)(char *, char *, uint64_t))(v110 + 16);
      *(_QWORD *)&v111 = v52;
      *(_QWORD *)&v109 = v73;
      v73(v61, v52, v51);
      v74 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v65 + 48);
      if (v74(v60, 1, v62) == 1)
      {
        v75 = *(_QWORD *)(v71 + *(int *)(v53 + 24));
        v76 = v96;
        sub_1DC407444();
        v78 = *v76;
        v77 = v76[1];
        swift_bridgeObjectRetain();
        sub_1DC0926D8((uint64_t)v76, (uint64_t (*)(_QWORD))type metadata accessor for CuratedForYouFeedGroupConfigData);
        if (*(_QWORD *)(v75 + 16) && (v79 = sub_1DC0ED368(v78, v77), (v80 & 1) != 0))
        {
          v81 = v97;
          sub_1DC0990BC(*(_QWORD *)(v75 + 56) + *(_QWORD *)(v104 + 72) * v79, v97, (uint64_t (*)(_QWORD))type metadata accessor for CuratedForYouFeedGroupKnobs);
          v82 = 0;
          v71 = v107;
        }
        else
        {
          v82 = 1;
          v71 = v107;
          v81 = v97;
        }
        v88 = v106;
        v66(v81, v82, 1, v106);
        swift_bridgeObjectRelease();
        if (v74(v81, 1, v88) == 1)
        {
          sub_1DC1639E4(0, (unint64_t *)&unk_1EDB2AE80, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0D5B210]);
          v90 = (uint64_t)v95;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v89 - 8) + 56))(v95, 1, 1, v89);
          v84 = v99;
          sub_1DC1F6584(v90, 0, 0, v99);
          v83 = *(void (**)(char *, uint64_t))(v72 + 8);
          v83(v105, v51);
          sub_1DC0926D8(v81, (uint64_t (*)(_QWORD))sub_1DC163990);
        }
        else
        {
          v83 = *(void (**)(char *, uint64_t))(v72 + 8);
          v83(v105, v51);
          v84 = v99;
          sub_1DC092ED0(v81, (uint64_t)v99, (uint64_t (*)(_QWORD))type metadata accessor for CuratedForYouFeedGroupKnobs);
        }
        v85 = v108;
        v86 = (uint64_t)v98;
        v87 = (void (*)(char *, _QWORD, uint64_t))v109;
        sub_1DC0926D8(v60, (uint64_t (*)(_QWORD))sub_1DC163990);
      }
      else
      {
        v83 = *(void (**)(char *, uint64_t))(v72 + 8);
        v83(v61, v51);
        v84 = v99;
        sub_1DC092ED0(v60, (uint64_t)v99, (uint64_t (*)(_QWORD))type metadata accessor for CuratedForYouFeedGroupKnobs);
        v85 = v108;
        v86 = (uint64_t)v98;
        v87 = (void (*)(char *, _QWORD, uint64_t))v109;
      }
      sub_1DC0926D8(v71, (uint64_t (*)(_QWORD))type metadata accessor for ForYouFeedKnobsConfig);
      v91 = v103;
      v92 = (char *)v111;
      v87(v103, v111, v51);
      sub_1DC0990BC((uint64_t)v84, v86, (uint64_t (*)(_QWORD))type metadata accessor for CuratedForYouFeedGroupKnobs);
      sub_1DC0824D4((uint64_t)v85 + OBJC_IVAR____TtC8StocksUI29ForYouFeedGroupEmitterFactory_formatService, (uint64_t)&v115);
      type metadata accessor for CuratedForYouFeedGroupEmitter();
      v93 = swift_allocObject();
      ((void (*)(uint64_t, char *, uint64_t))v100)(v93 + OBJC_IVAR____TtC8StocksUI29CuratedForYouFeedGroupEmitter_config, v91, v51);
      sub_1DC092ED0(v86, v93 + OBJC_IVAR____TtC8StocksUI29CuratedForYouFeedGroupEmitter_knobs, (uint64_t (*)(_QWORD))type metadata accessor for CuratedForYouFeedGroupKnobs);
      sub_1DC097DD0(&v115, v93 + OBJC_IVAR____TtC8StocksUI29CuratedForYouFeedGroupEmitter_formatService);
      *(_QWORD *)&v115 = v93;
      sub_1DC1639E4(0, (unint64_t *)&qword_1EDB2ADF8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0D5A958]);
      swift_allocObject();
      sub_1DC080808((unint64_t *)&unk_1EDB38ED8, (uint64_t (*)(uint64_t))type metadata accessor for CuratedForYouFeedGroupEmitter, (uint64_t)&unk_1DC416D68);
      v46 = sub_1DC4074C8();
      sub_1DC0926D8((uint64_t)v84, (uint64_t (*)(_QWORD))type metadata accessor for CuratedForYouFeedGroupKnobs);
      v83(v92, v51);
    }
  }
  else
  {
    v111 = *(_OWORD *)v38;
    v47 = *((_QWORD *)v38 + 2);
    type metadata accessor for LegacyTopStoriesForYouFeedGroupEmitter();
    v48 = swift_allocObject();
    *(_QWORD *)(v48 + 48) = 0xEB00000000736569;
    *(_OWORD *)(v48 + 16) = v111;
    *(_QWORD *)(v48 + 32) = v47;
    *(_QWORD *)(v48 + 40) = 0x726F745320706F54;
    *(_QWORD *)&v115 = v48;
    sub_1DC1639E4(0, (unint64_t *)&qword_1EDB2ADF8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0D5A958]);
    swift_allocObject();
    sub_1DC080808(&qword_1EDB42048, (uint64_t (*)(uint64_t))type metadata accessor for LegacyTopStoriesForYouFeedGroupEmitter, (uint64_t)&unk_1DC41BC78);
    return sub_1DC4074C8();
  }
  return v46;
}

uint64_t sub_1DC1638C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  __swift_destroy_boxed_opaque_existential_1(v0 + 104);
  __swift_destroy_boxed_opaque_existential_1(v0 + 144);
  __swift_destroy_boxed_opaque_existential_1(v0 + 184);
  v1 = v0 + OBJC_IVAR____TtC8StocksUI29ForYouFeedGroupEmitterFactory_networkProxy;
  v2 = sub_1DC4025B4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC8StocksUI29ForYouFeedGroupEmitterFactory_stockFeedService);
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC8StocksUI29ForYouFeedGroupEmitterFactory_formatService);
  return v0;
}

uint64_t sub_1DC163964()
{
  sub_1DC1638C0();
  return swift_deallocClassInstance();
}

uint64_t sub_1DC163988()
{
  return type metadata accessor for ForYouFeedGroupEmitterFactory();
}

void sub_1DC163990()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB374C8)
  {
    type metadata accessor for CuratedForYouFeedGroupKnobs();
    v0 = sub_1DC4095A4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB374C8);
  }
}

void sub_1DC1639E4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    v6 = type metadata accessor for ForYouFeedServiceConfig();
    v7 = sub_1DC080808(&qword_1EDB347D0, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedServiceConfig, (uint64_t)&unk_1DC431F70);
    v8 = a3(a1, v6, v7);
    if (!v9)
      atomic_store(v8, a2);
  }
}

uint64_t sub_1DC163A64()
{
  uint64_t v0;

  type metadata accessor for StockSearchModalRouter();
  v0 = swift_allocObject();
  swift_unknownObjectWeakInit();
  return v0;
}

uint64_t sub_1DC163AA4(uint64_t a1, _QWORD *a2)
{
  uint64_t result;
  void *v4;
  _BYTE v5[40];

  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for StockSearchViewController(0);
  result = sub_1DC4025FC();
  if (result)
  {
    v4 = (void *)result;
    swift_unknownObjectWeakAssign();

    __swift_project_boxed_opaque_existential_1(a2, a2[3]);
    sub_1DC08CBF0(0, (unint64_t *)&qword_1EDB29CB0, type metadata accessor for StocksActivity, sub_1DC08CDA4, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB75B0]);
    result = sub_1DC4025FC();
    if (result)
    {
      type metadata accessor for StockSearchModalRouter();
      sub_1DC081B48(&qword_1F034C738, 255, (uint64_t (*)(uint64_t))type metadata accessor for StockSearchModalRouter, (uint64_t)&unk_1DC422758);
      sub_1DC404504();
      swift_release();
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1DC163BCC(_QWORD *a1)
{
  uint64_t result;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC0D8C20();
  result = sub_1DC4025FC();
  if (result)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1DC0AE7F8();
    result = sub_1DC4025FC();
    if (result)
    {
      sub_1DC0AEBAC();
      swift_allocObject();
      return sub_1DC4067A8();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1DC163C9C(uint64_t a1, _QWORD *a2)
{
  return sub_1DC1211F4(a1, a2, MEMORY[0x1E0DBC1C8]);
}

uint64_t sub_1DC163CA8()
{
  return swift_deallocObject();
}

uint64_t sub_1DC163CB8()
{
  return swift_deallocObject();
}

uint64_t sub_1DC163CC8()
{
  return swift_deallocObject();
}

uint64_t sub_1DC163CD8()
{
  return swift_deallocObject();
}

uint64_t sub_1DC163CE8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t result;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v2 = type metadata accessor for StockSearchPriceChangeDisplayBlueprintModifier();
  v3 = MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v7 = (uint64_t *)((char *)&v12 - v6);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v9 = (char *)v7 + *(int *)(v2 + 20);
    v10 = sub_1DC4008EC();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v9, a1, v10);
    *v7 = 0xD000000000000012;
    v7[1] = 0x80000001DC4338C0;
    sub_1DC0990BC((uint64_t)v7, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for StockSearchPriceChangeDisplayBlueprintModifier);
    sub_1DC1641E0();
    swift_allocObject();
    sub_1DC081B48(&qword_1EDB41C50, 255, (uint64_t (*)(uint64_t))type metadata accessor for StockSearchPriceChangeDisplayBlueprintModifier, (uint64_t)&unk_1DC42B720);
    v11 = sub_1DC40499C();
    sub_1DC0926D8((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for StockSearchPriceChangeDisplayBlueprintModifier);
    v12 = v11;
    sub_1DC081B48(&qword_1EDB41DF8, 255, (uint64_t (*)(uint64_t))sub_1DC1641E0, MEMORY[0x1E0DB8030]);
    sub_1DC4049E4();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1DC163EB0(uint64_t a1)
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1DC0D856C(a1);
    return swift_release();
  }
  return result;
}

uint64_t sub_1DC163F0C()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocObject();
}

uint64_t sub_1DC163F30()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);

  return swift_deallocObject();
}

_QWORD *sub_1DC163F5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  _QWORD *v11;
  _QWORD *v12;
  id v20;
  uint64_t v23[4];

  v12 = v11;
  v12[3] = 0;
  swift_unknownObjectWeakInit();
  v12[19] = MEMORY[0x1E0DEE9E8];
  v12[6] = a1;
  v12[7] = a2;
  v12[4] = a3;
  v12[5] = a4;
  v12[8] = a5;
  v12[9] = a6;
  v12[10] = a7;
  v12[11] = a8;
  sub_1DC0824D4(a9, (uint64_t)(v12 + 12));
  v12[17] = a10;
  v12[18] = a11;
  swift_retain();
  swift_unknownObjectRetain();
  swift_retain();
  swift_retain();
  v20 = a6;
  swift_retain();
  swift_retain();
  swift_unknownObjectRetain();
  sub_1DC0AC0AC(v23);
  __swift_project_boxed_opaque_existential_1(v23, v23[3]);
  swift_allocObject();
  swift_weakInit();
  sub_1DC406FC4();
  swift_release();
  swift_beginAccess();
  sub_1DC406F70();
  swift_endAccess();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
  swift_allocObject();
  swift_weakInit();
  sub_1DC40274C();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a9);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
  return v12;
}

uint64_t sub_1DC164158()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1DC16417C(uint64_t a1)
{
  return sub_1DC163CE8(a1);
}

uint64_t sub_1DC164184(uint64_t a1)
{
  return sub_1DC163EB0(a1);
}

uint64_t sub_1DC16418C(uint64_t a1)
{
  uint64_t v2;

  sub_1DC089DA4(0, &qword_1EDB29C28, (uint64_t (*)(uint64_t))sub_1DC0D95F0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1DC1641E0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB41E00)
  {
    type metadata accessor for StockSearchSectionDescriptor();
    type metadata accessor for StockSearchModel();
    sub_1DC081B48(&qword_1EDB389D0, 255, (uint64_t (*)(uint64_t))type metadata accessor for StockSearchSectionDescriptor, (uint64_t)&unk_1DC41CD30);
    sub_1DC125B3C();
    v0 = sub_1DC4049A8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB41E00);
  }
}

uint64_t sub_1DC164288()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1DC1642AC()
{
  uint64_t v0;

  return sub_1DC1F0AC4(v0);
}

unint64_t sub_1DC1642C4()
{
  unint64_t result;

  result = qword_1EDB28C78;
  if (!qword_1EDB28C78)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EDB28C78);
  }
  return result;
}

uint64_t assignWithCopy for ForYouFeedPool(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 32);
  if (!*(_QWORD *)(a1 + 32))
  {
    if (v4)
    {
      *(_QWORD *)(a1 + 32) = v4;
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1 + 8, a2 + 8);
      goto LABEL_8;
    }
LABEL_7:
    v5 = *(_OWORD *)(a2 + 8);
    v6 = *(_OWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 8) = v5;
    *(_OWORD *)(a1 + 24) = v6;
    goto LABEL_8;
  }
  if (!v4)
  {
    __swift_destroy_boxed_opaque_existential_1(a1 + 8);
    goto LABEL_7;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 8), (uint64_t *)(a2 + 8));
LABEL_8:
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ForYouFeedPool(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 32))
    __swift_destroy_boxed_opaque_existential_1(a1 + 8);
  v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t ChartRange.label.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  char *v5;
  int v6;
  uint64_t ObjCClassFromMetadata;
  id v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;

  v1 = sub_1DC4002BC();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = MEMORY[0x1E0C80A78](v1);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v2 + 16))(v5, v0, v1, v3);
  v6 = (*(uint64_t (**)(char *, uint64_t))(v2 + 88))(v5, v1);
  if (v6 == *MEMORY[0x1E0DAE0B0]
    || v6 == *MEMORY[0x1E0DAE0B8]
    || v6 == *MEMORY[0x1E0DAE0C8]
    || v6 == *MEMORY[0x1E0DAE0A0]
    || v6 == *MEMORY[0x1E0DAE0F0]
    || v6 == *MEMORY[0x1E0DAE090]
    || v6 == *MEMORY[0x1E0DAE0C0]
    || v6 == *MEMORY[0x1E0DAE0E0]
    || v6 == *MEMORY[0x1E0DAE0E8]
    || v6 == *MEMORY[0x1E0DAE0D8]
    || v6 == *MEMORY[0x1E0DAE0A8])
  {
    type metadata accessor for Localized();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    v8 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
    v9 = sub_1DC3FFC80();

    return v9;
  }
  else
  {
    result = sub_1DC4099DC();
    __break(1u);
  }
  return result;
}

uint64_t ChartRange.accessibilityLabel.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  char *v5;
  int v6;
  uint64_t ObjCClassFromMetadata;
  id v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;

  v1 = sub_1DC4002BC();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = MEMORY[0x1E0C80A78](v1);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v2 + 16))(v5, v0, v1, v3);
  v6 = (*(uint64_t (**)(char *, uint64_t))(v2 + 88))(v5, v1);
  if (v6 == *MEMORY[0x1E0DAE0B0]
    || v6 == *MEMORY[0x1E0DAE0B8]
    || v6 == *MEMORY[0x1E0DAE0C8]
    || v6 == *MEMORY[0x1E0DAE0A0]
    || v6 == *MEMORY[0x1E0DAE0F0]
    || v6 == *MEMORY[0x1E0DAE090]
    || v6 == *MEMORY[0x1E0DAE0C0]
    || v6 == *MEMORY[0x1E0DAE0E0]
    || v6 == *MEMORY[0x1E0DAE0E8]
    || v6 == *MEMORY[0x1E0DAE0D8]
    || v6 == *MEMORY[0x1E0DAE0A8])
  {
    type metadata accessor for Localized();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    v8 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
    v9 = sub_1DC3FFC80();

    return v9;
  }
  else
  {
    result = sub_1DC4099DC();
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC1650C4()
{
  return sub_1DC0C3B80(&qword_1EDB28B70, MEMORY[0x1E0DAE108]);
}

uint64_t sub_1DC1650E8()
{
  return sub_1DC0C3B80(&qword_1EDB28B60, (uint64_t)&protocol conformance descriptor for ChartRange);
}

ValueMetadata *type metadata accessor for StockFeedOnlineBlueprintModifier()
{
  return &type metadata for StockFeedOnlineBlueprintModifier;
}

unint64_t sub_1DC165128()
{
  unint64_t result;

  result = qword_1F034C740;
  if (!qword_1F034C740)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC40FE84, &type metadata for StockFeedOnlineBlueprintModifier);
    atomic_store(result, (unint64_t *)&qword_1F034C740);
  }
  return result;
}

uint64_t sub_1DC16516C()
{
  return sub_1DC080808(&qword_1EDB36EE0, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedSectionDescriptor, (uint64_t)&unk_1DC4167B0);
}

uint64_t sub_1DC165198()
{
  return sub_1DC080808(&qword_1EDB2D770, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedModel, (uint64_t)&unk_1DC429058);
}

uint64_t sub_1DC1651C4(uint64_t a1, void (*a2)(char *), uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(void);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  void (*v33)(char *, _QWORD);
  char *v34;
  uint64_t v35;
  uint64_t (*v36)(void);
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  _QWORD v45[4];
  char *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(char *);
  char *v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  char *v74;
  char v75[8];
  uint64_t v76;

  v54 = a3;
  v55 = a2;
  v60 = sub_1DC400010();
  v59 = *(_QWORD *)(v60 - 8);
  MEMORY[0x1E0C80A78](v60);
  v58 = (char *)v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = type metadata accessor for StockFeedModel();
  MEMORY[0x1E0C80A78](v73);
  v57 = (char *)v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  sub_1DC142200();
  MEMORY[0x1E0C80A78](v7);
  MEMORY[0x1E0C80A78](v8);
  v74 = (char *)v45 - v9;
  sub_1DC142434();
  MEMORY[0x1E0C80A78](v10);
  v56 = (char *)v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = type metadata accessor for StockFeedSectionDescriptor();
  MEMORY[0x1E0C80A78](v65);
  v61 = (char *)v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v66 = (char *)v45 - v14;
  sub_1DC165EEC(0, (unint64_t *)&qword_1EDB29D60, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60]);
  v16 = v15;
  v70 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v72 = (char *)v45 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v69 = (char *)v45 - v19;
  v53 = sub_1DC404984();
  v52 = *(_QWORD *)(v53 - 8);
  MEMORY[0x1E0C80A78](v53);
  v50 = (char *)v45 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC165EEC(0, &qword_1EDB2A278, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB9A28]);
  v51 = v21;
  v49 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  v48 = (char *)v45 - v22;
  sub_1DC165DE8();
  MEMORY[0x1E0C80A78](v23);
  v45[3] = (char *)v45 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = MEMORY[0x1E0DBC790];
  sub_1DC165EEC(0, (unint64_t *)&qword_1EDB2AB10, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790]);
  v27 = v26;
  v47 = *(_QWORD *)(v26 - 8);
  MEMORY[0x1E0C80A78](v26);
  v46 = (char *)v45 - v28;
  v45[2] = sub_1DC406C70();
  v45[1] = v29;
  v30 = sub_1DC165EAC((unint64_t *)&unk_1EDB2AB00, (unint64_t *)&qword_1EDB2AB10, (uint64_t (*)(uint64_t, _QWORD *))v25, MEMORY[0x1E0DBC7C8]);
  v31 = sub_1DC408EC0();
  v64 = v27;
  if (v31)
  {
    v76 = MEMORY[0x1E0DEE9D8];
    v63 = v31;
    sub_1DC2AD4E8(0, v31 & ~(v31 >> 63), 0);
    sub_1DC408E90();
    if ((v63 & 0x8000000000000000) == 0)
    {
      v68 = v30;
      v62 = a1;
      v71 = v16;
      v32 = v72;
      if (v63)
      {
        v67 = 1;
        v33 = (void (*)(char *, _QWORD))sub_1DC408EF0();
        (*(void (**)(char *))(v70 + 16))(v32);
        v33(v75, 0);
        sub_1DC4046FC();
        v34 = (char *)&loc_1DC165664 + dword_1DC165D9C[swift_getEnumCaseMultiPayload()];
        __asm { BR              X9 }
      }
      __break(1u);
      JUMPOUT(0x1DC165D94);
    }
    __break(1u);
    JUMPOUT(0x1DC165D9CLL);
  }
  v35 = MEMORY[0x1E0DEE9D8];
  v36 = MEMORY[0x1E0DB7B60];
  v37 = sub_1DC165EAC(&qword_1EDB29D48, (unint64_t *)&qword_1EDB29D60, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60], MEMORY[0x1E0DB7B88]);
  v38 = sub_1DC165EAC(&qword_1EDB29D40, (unint64_t *)&qword_1EDB29D60, (uint64_t (*)(uint64_t, _QWORD *))v36, MEMORY[0x1E0DB7B80]);
  MEMORY[0x1DF0C311C](v35, v16, v37, v38);
  sub_1DC080808(&qword_1EDB36EE0, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedSectionDescriptor, (uint64_t)&unk_1DC4167B0);
  sub_1DC080808(&qword_1EDB2D770, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedModel, (uint64_t)&unk_1DC429058);
  v39 = v46;
  sub_1DC406C64();
  v40 = v52;
  v41 = v50;
  v42 = v53;
  (*(void (**)(char *, _QWORD, uint64_t))(v52 + 104))(v50, *MEMORY[0x1E0DB7FB8], v53);
  sub_1DC080808(&qword_1EDB36EE8, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedSectionDescriptor, (uint64_t)&unk_1DC416860);
  v43 = v48;
  sub_1DC405554();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v41, v42);
  v55(v43);
  (*(void (**)(char *, uint64_t))(v49 + 8))(v43, v51);
  return (*(uint64_t (**)(char *, uint64_t))(v47 + 8))(v39, v64);
}

void sub_1DC165DE8()
{
  uint64_t (*v0)(void);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1EDB29578)
  {
    v0 = MEMORY[0x1E0DB7B60];
    sub_1DC165EEC(255, (unint64_t *)&qword_1EDB29D60, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60]);
    sub_1DC165EAC(&qword_1EDB29D48, (unint64_t *)&qword_1EDB29D60, (uint64_t (*)(uint64_t, _QWORD *))v0, MEMORY[0x1E0DB7B88]);
    sub_1DC165EAC(&qword_1EDB29D40, (unint64_t *)&qword_1EDB29D60, (uint64_t (*)(uint64_t, _QWORD *))v0, MEMORY[0x1E0DB7B80]);
    v1 = sub_1DC4028E4();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1EDB29578);
  }
}

uint64_t sub_1DC165EAC(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_1DC165EEC(255, a2, a3);
    result = MEMORY[0x1DF0CAB8C](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1DC165EEC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *))
{
  unint64_t v6;
  uint64_t v7;
  _QWORD v8[4];

  if (!*a2)
  {
    v8[0] = type metadata accessor for StockFeedSectionDescriptor();
    v8[1] = type metadata accessor for StockFeedModel();
    v8[2] = sub_1DC080808(&qword_1EDB36EE0, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedSectionDescriptor, (uint64_t)&unk_1DC4167B0);
    v8[3] = sub_1DC080808(&qword_1EDB2D770, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedModel, (uint64_t)&unk_1DC429058);
    v6 = a3(a1, v8);
    if (!v7)
      atomic_store(v6, a2);
  }
}

void sub_1DC165FB8()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EDB41280)
  {
    sub_1DC407EAC();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EDB41280);
  }
}

uint64_t ANFSceneActivityBridge.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ANFSceneActivityBridge.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

Swift::Void __swiftcall ANFSceneActivityBridge.sceneDidDisconnect()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t);
  uint64_t v5;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain();
    v3 = v1 + 40;
    do
    {
      v4 = *(void (**)(uint64_t))(v3 - 8);
      v5 = swift_retain();
      v4(v5);
      swift_release();
      v3 += 16;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
}

uint64_t ANFSceneActivityBridge.performOnSceneDidDisconnect(on:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v9;
  unint64_t v10;
  _QWORD *v11;

  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = a2;
  v6 = (_QWORD *)(v2 + 16);
  swift_beginAccess();
  v7 = *(_QWORD **)(v2 + 16);
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(v2 + 16) = v7;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v7 = sub_1DC16675C(0, v7[2] + 1, 1, v7);
    *v6 = v7;
  }
  v10 = v7[2];
  v9 = v7[3];
  if (v10 >= v9 >> 1)
  {
    v7 = sub_1DC16675C((_QWORD *)(v9 > 1), v10 + 1, 1, v7);
    *v6 = v7;
  }
  v7[2] = v10 + 1;
  v11 = &v7[2 * v10];
  v11[4] = sub_1DC080634;
  v11[5] = v5;
  return swift_endAccess();
}

uint64_t sub_1DC166200()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DC16636C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1DC0EF554(a1, a2, a3, a4, &qword_1EDB3FF38, (uint64_t (*)(uint64_t))sub_1DC141E14);
}

_QWORD *sub_1DC166380(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1DC089DA4(0, &qword_1EDB400A0, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 1;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4])
          memmove(v13, a4 + 4, 32 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1DC1671E0(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1DC1664A0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1DC0EF554(a1, a2, a3, a4, &qword_1EDB3FE18, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAEF60]);
}

uint64_t sub_1DC1664B4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1DC0EF554(a1, a2, a3, a4, &qword_1EDB3FDE8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
}

uint64_t sub_1DC1664C8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1DC1664E4(a1, a2, a3, a4, (unint64_t *)&qword_1EDB40028, &qword_1EDB3F540, MEMORY[0x1E0DEB070]);
}

uint64_t sub_1DC1664E4(char a1, int64_t a2, char a3, unint64_t a4, unint64_t *a5, unint64_t *a6, uint64_t a7)
{
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  size_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v11 = *(_QWORD *)(a4 + 24);
    v12 = v11 >> 1;
    if ((uint64_t)(v11 >> 1) < a2)
    {
      if (v12 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v12 = v11 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v11 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v12 = a2;
    }
  }
  else
  {
    v12 = a2;
  }
  v13 = *(_QWORD *)(a4 + 16);
  if (v12 <= v13)
    v14 = *(_QWORD *)(a4 + 16);
  else
    v14 = v12;
  if (!v14)
  {
    v19 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_19;
  }
  sub_1DC16773C(0, a5, a6, a7);
  sub_1DC083594(0, a6, a7, MEMORY[0x1E0DB2830]);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(_QWORD *)(v16 + 72);
  v18 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v19 = (_QWORD *)swift_allocObject();
  v20 = _swift_stdlib_malloc_size(v19);
  if (!v17 || (v20 - v18 == 0x8000000000000000 ? (v21 = v17 == -1) : (v21 = 0), v21))
  {
LABEL_29:
    result = sub_1DC40982C();
    __break(1u);
    return result;
  }
  v19[2] = v13;
  v19[3] = 2 * ((uint64_t)(v20 - v18) / v17);
LABEL_19:
  sub_1DC083594(0, a6, a7, MEMORY[0x1E0DB2830]);
  v23 = *(_QWORD *)(v22 - 8);
  v24 = (*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
  v25 = (unint64_t)v19 + v24;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v19 < a4 || v25 >= a4 + v24 + *(_QWORD *)(v23 + 72) * v13)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v19 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_1DC1672C8(0, v13, v25, a4, a6, a7);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v19;
}

uint64_t sub_1DC16672C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1DC1664E4(a1, a2, a3, a4, &qword_1EDB40020, &qword_1EDB3F538, MEMORY[0x1E0DEA968]);
}

uint64_t sub_1DC166748(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1DC0EF554(a1, a2, a3, a4, &qword_1EDB40038, (uint64_t (*)(uint64_t))sub_1DC1628E4);
}

_QWORD *sub_1DC16675C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1DC089DA4(0, (unint64_t *)&unk_1EDB428D0, (uint64_t (*)(uint64_t))sub_1DC16779C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1DC1673F0(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t method lookup function for ANFSceneActivityBridge()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1DC166888(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1DC0EF554(a1, a2, a3, a4, &qword_1F034C770, (uint64_t (*)(uint64_t))sub_1DC157CB8);
}

uint64_t sub_1DC16689C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1DC0EF554(a1, a2, a3, a4, &qword_1F034C750, (uint64_t (*)(uint64_t))MEMORY[0x1E0DBC5A0]);
}

_QWORD *sub_1DC1668B0(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1DC0FDACC(a1, a2, a3, a4, (unint64_t *)&unk_1EDB42950, &qword_1EDB42920, MEMORY[0x1E0DB6FA8]);
}

uint64_t sub_1DC1668CC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1DC0EF554(a1, a2, a3, a4, &qword_1EDB42960, (uint64_t (*)(uint64_t))MEMORY[0x1E0DBC918]);
}

uint64_t sub_1DC1668E0(char a1, int64_t a2, char a3, unint64_t a4)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  size_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (!v9)
  {
    v14 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_19;
  }
  sub_1DC10821C();
  sub_1DC0E6544(0, (unint64_t *)&qword_1EDB29BE0, type metadata accessor for StockListModel, &qword_1EDB2D860, (uint64_t)&unk_1DC41C258);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 72);
  v13 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v14 = (_QWORD *)swift_allocObject();
  v15 = _swift_stdlib_malloc_size(v14);
  if (!v12 || (v15 - v13 == 0x8000000000000000 ? (v16 = v12 == -1) : (v16 = 0), v16))
  {
LABEL_29:
    result = sub_1DC40982C();
    __break(1u);
    return result;
  }
  v14[2] = v8;
  v14[3] = 2 * ((uint64_t)(v15 - v13) / v12);
LABEL_19:
  sub_1DC0E6544(0, (unint64_t *)&qword_1EDB29BE0, type metadata accessor for StockListModel, &qword_1EDB2D860, (uint64_t)&unk_1DC41C258);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  v20 = (unint64_t)v14 + v19;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v14 < a4 || v20 >= a4 + v19 + *(_QWORD *)(v18 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v14 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_1DC1670B8(0, v8, v20, a4, (unint64_t *)&qword_1EDB29BE0, type metadata accessor for StockListModel, &qword_1EDB2D860, (uint64_t)&unk_1DC41C258);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v14;
}

uint64_t sub_1DC166B44(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1DC0EF554(a1, a2, a3, a4, (unint64_t *)&qword_1EDB3FE80, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB3FF8]);
}

uint64_t sub_1DC166B58(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1DC0EF554(a1, a2, a3, a4, &qword_1F034C748, (uint64_t (*)(uint64_t))MEMORY[0x1E0D61828]);
}

uint64_t sub_1DC166B6C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1DC0EF554(a1, a2, a3, a4, &qword_1F034C758, (uint64_t (*)(uint64_t))sub_1DC142AE0);
}

_QWORD *sub_1DC166B80(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1DC083594(0, &qword_1EDB28530, MEMORY[0x1E0DEE9B8] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 1;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4])
          memmove(v13, a4 + 4, 32 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1DC1674F4(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1DC166CA4(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1DC0FDACC(a1, a2, a3, a4, &qword_1EDB3FF08, (unint64_t *)&qword_1EDB2A050, MEMORY[0x1E0DB8CD0]);
}

uint64_t sub_1DC166CC0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1DC0EF554(a1, a2, a3, a4, &qword_1F034C760, (uint64_t (*)(uint64_t))MEMORY[0x1E0D56E78]);
}

uint64_t sub_1DC166CD4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1DC0EF554(a1, a2, a3, a4, &qword_1EDB42990, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB8970]);
}

_QWORD *sub_1DC166CE8(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1DC112138();
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4])
          memmove(v12, a4 + 4, 40 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1DC1675E8(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1DC166E04(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1DC0EF554(a1, a2, a3, a4, &qword_1EDB3FFC0, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedModel);
}

uint64_t sub_1DC166E18(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1DC0EF554(a1, a2, a3, a4, &qword_1EDB3FFA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5D670]);
}

uint64_t sub_1DC166E2C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1DC0EF554(a1, a2, a3, a4, &qword_1EDB3FED0, (uint64_t (*)(uint64_t))sub_1DC157A5C);
}

uint64_t sub_1DC166E40(char a1, int64_t a2, char a3, unint64_t a4)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  size_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (!v9)
  {
    v14 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_19;
  }
  sub_1DC1677DC();
  sub_1DC0E6544(0, (unint64_t *)&qword_1EDB29BC0, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedModel, &qword_1EDB2D770, (uint64_t)&unk_1DC429058);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 72);
  v13 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v14 = (_QWORD *)swift_allocObject();
  v15 = _swift_stdlib_malloc_size(v14);
  if (!v12 || (v15 - v13 == 0x8000000000000000 ? (v16 = v12 == -1) : (v16 = 0), v16))
  {
LABEL_29:
    result = sub_1DC40982C();
    __break(1u);
    return result;
  }
  v14[2] = v8;
  v14[3] = 2 * ((uint64_t)(v15 - v13) / v12);
LABEL_19:
  sub_1DC0E6544(0, (unint64_t *)&qword_1EDB29BC0, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedModel, &qword_1EDB2D770, (uint64_t)&unk_1DC429058);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  v20 = (unint64_t)v14 + v19;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v14 < a4 || v20 >= a4 + v19 + *(_QWORD *)(v18 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v14 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_1DC1670B8(0, v8, v20, a4, (unint64_t *)&qword_1EDB29BC0, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedModel, &qword_1EDB2D770, (uint64_t)&unk_1DC429058);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v14;
}

uint64_t sub_1DC1670A4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1DC0EF554(a1, a2, a3, a4, (unint64_t *)&qword_1F034C768, (uint64_t (*)(uint64_t))sub_1DC142BD8);
}

uint64_t sub_1DC1670B8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t *a5, uint64_t (*a6)(uint64_t), unint64_t *a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t result;

  v8 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v8 & 0x8000000000000000) == 0)
  {
    sub_1DC0E6544(0, a5, a6, a7, a8);
    v13 = *(_QWORD *)(v12 - 8);
    v14 = *(unsigned __int8 *)(v13 + 80);
    v15 = *(_QWORD *)(v13 + 72);
    v16 = a4 + ((v14 + 32) & ~v14) + v15 * a1;
    v17 = v15 * v8;
    v18 = a3 + v17;
    v19 = v16 + v17;
    if (v16 >= v18 || v19 <= a3)
    {
      swift_arrayInitWithCopy();
      return v18;
    }
  }
  result = sub_1DC40988C();
  __break(1u);
  return result;
}

char *sub_1DC1671E0(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 32 * a1 + 32);
    v6 = 32 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)sub_1DC40988C();
  __break(1u);
  return result;
}

uint64_t sub_1DC1672C8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t *a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t result;

  v6 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v6 & 0x8000000000000000) == 0)
  {
    sub_1DC083594(0, a5, a6, MEMORY[0x1E0DB2830]);
    v11 = *(_QWORD *)(v10 - 8);
    v12 = *(unsigned __int8 *)(v11 + 80);
    v13 = *(_QWORD *)(v11 + 72);
    v14 = a4 + ((v12 + 32) & ~v12) + v13 * a1;
    v15 = v13 * v6;
    v16 = a3 + v15;
    v17 = v14 + v15;
    if (v14 >= v16 || v17 <= a3)
    {
      swift_arrayInitWithCopy();
      return v16;
    }
  }
  result = sub_1DC40988C();
  __break(1u);
  return result;
}

uint64_t sub_1DC1673F0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      sub_1DC16779C();
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1DC40988C();
  __break(1u);
  return result;
}

uint64_t sub_1DC1674F4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1DC40988C();
  __break(1u);
  return result;
}

uint64_t sub_1DC1675E8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 40 * a1 + 32;
    v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      sub_1DC0FDC18(0, &qword_1EDB2A060, (unint64_t *)&qword_1EDB2A050, MEMORY[0x1E0DB8CD0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1DC40988C();
  __break(1u);
  return result;
}

uint64_t sub_1DC167710()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_1DC167734()
{
  uint64_t v0;

  return sub_1DC297A9C(*(_QWORD *)(v0 + 16));
}

void sub_1DC16773C(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4)
{
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    sub_1DC083594(255, a3, a4, MEMORY[0x1E0DB2830]);
    v5 = sub_1DC4099C4();
    if (!v6)
      atomic_store(v5, a2);
  }
}

unint64_t sub_1DC16779C()
{
  unint64_t result;

  result = qword_1EDB428E0;
  if (!qword_1EDB428E0)
  {
    result = swift_getFunctionTypeMetadata0();
    atomic_store(result, (unint64_t *)&qword_1EDB428E0);
  }
  return result;
}

void sub_1DC1677DC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB3FEA0)
  {
    sub_1DC0E6544(255, (unint64_t *)&qword_1EDB29BC0, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedModel, &qword_1EDB2D770, (uint64_t)&unk_1DC429058);
    v0 = sub_1DC4099C4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB3FEA0);
  }
}

uint64_t destroy for StockListRemoveStockBlueprintModifier(uint64_t a1)
{
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 16);
  swift_release();
  return __swift_destroy_boxed_opaque_existential_1(a1 + 64);
}

uint64_t initializeWithCopy for StockListRemoveStockBlueprintModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = a2 + 16;
  v6 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 40) = v6;
  v7 = v6;
  v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);
  swift_bridgeObjectRetain();
  v8(a1 + 16, v5, v7);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  v9 = a2 + 64;
  v10 = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 88) = v10;
  v11 = v10;
  v12 = **(void (***)(uint64_t, uint64_t, uint64_t))(v10 - 8);
  swift_retain();
  v12(a1 + 64, v9, v11);
  return a1;
}

_QWORD *assignWithCopy for StockListRemoveStockBlueprintModifier(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __swift_assign_boxed_opaque_existential_1(a1 + 2, a2 + 2);
  a1[7] = a2[7];
  swift_retain();
  swift_release();
  __swift_assign_boxed_opaque_existential_1(a1 + 8, a2 + 8);
  return a1;
}

__n128 __swift_memcpy104_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __n128 result;
  __int128 v5;
  __int128 v6;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  result = (__n128)a2[3];
  v5 = a2[4];
  v6 = a2[5];
  *(_QWORD *)(a1 + 96) = *((_QWORD *)a2 + 12);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t assignWithTake for StockListRemoveStockBlueprintModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  __int128 v7;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 16);
  v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v5;
  v6 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v6;
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a1 + 64);
  v7 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v7;
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  return a1;
}

uint64_t getEnumTagSinglePayload for StockListRemoveStockBlueprintModifier(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 104))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for StockListRemoveStockBlueprintModifier(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 104) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 104) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for StockListRemoveStockBlueprintModifier()
{
  return &type metadata for StockListRemoveStockBlueprintModifier;
}

uint64_t sub_1DC167AFC(uint64_t a1, void (*a2)(uint64_t *), void (*a3)(uint64_t *))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t *);
  void (*v27)(uint64_t *);
  uint64_t v28;
  _BYTE *v29;
  uint64_t v31;
  _BYTE *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  void (**v48)(uint64_t *);
  void *v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(uint64_t *);
  void (*v63)(uint64_t *);
  _OWORD v64[6];
  uint64_t v65;

  v62 = a2;
  v63 = a3;
  v55 = a1;
  sub_1DC0CC01C(0, &qword_1EDB2A280, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB9A28]);
  v60 = *(_QWORD *)(v4 - 8);
  v61 = v4;
  MEMORY[0x1E0C80A78](v4);
  v6 = (uint64_t *)((char *)&v52 - v5);
  sub_1DC0CC01C(0, (unint64_t *)&qword_1EDB2AB40, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790]);
  v56 = v7;
  v54 = *(_QWORD *)(v7 - 8);
  v52 = *(_QWORD *)(v54 + 64);
  MEMORY[0x1E0C80A78](v7);
  v53 = (char *)&v52 - v8;
  v58 = type metadata accessor for StockListModel(0);
  MEMORY[0x1E0C80A78](v58);
  v10 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0F8190();
  v12 = v11;
  v13 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for StockListStockModel(0);
  MEMORY[0x1E0C80A78](v16);
  v57 = (uint64_t)&v52 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_1DC404E1C();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v21 = (char *)&v52 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = v3;
  sub_1DC405BB4();
  v22 = (*(uint64_t (**)(char *, uint64_t))(v19 + 88))(v21, v18);
  v23 = *MEMORY[0x1E0DB88D8];
  (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
  if (v22 == v23)
  {
    v25 = v60;
    v24 = v61;
    v27 = v62;
    v26 = v63;
    sub_1DC405BA8();
    sub_1DC404354();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    if (swift_getEnumCaseMultiPayload())
    {
      sub_1DC0926D8((uint64_t)v10, type metadata accessor for StockListModel);
      sub_1DC168934();
      v28 = swift_allocError();
      *v29 = 0;
      *v6 = v28;
      (*(void (**)(uint64_t *, _QWORD, uint64_t))(v25 + 104))(v6, *MEMORY[0x1E0DB99F0], v24);
      v27(v6);
      return (*(uint64_t (**)(uint64_t *, uint64_t))(v25 + 8))(v6, v24);
    }
    else
    {
      v35 = v57;
      v36 = sub_1DC0F25C8((uint64_t)v10, v57);
      MEMORY[0x1E0C80A78](v36);
      v37 = v59;
      *(&v52 - 2) = v59;
      *(&v52 - 1) = v35;
      sub_1DC402E0C();
      v38 = v54;
      v39 = v53;
      v40 = v56;
      (*(void (**)(char *, uint64_t, uint64_t))(v54 + 16))(v53, v55, v56);
      sub_1DC168990(v37, (uint64_t)v64);
      v41 = (*(unsigned __int8 *)(v38 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80);
      v42 = (v52 + v41 + 7) & 0xFFFFFFFFFFFFFFF8;
      v43 = swift_allocObject();
      (*(void (**)(unint64_t, char *, uint64_t))(v38 + 32))(v43 + v41, v39, v40);
      v44 = v43 + v42;
      v45 = v64[5];
      *(_OWORD *)(v44 + 64) = v64[4];
      *(_OWORD *)(v44 + 80) = v45;
      *(_QWORD *)(v44 + 96) = v65;
      v46 = v64[1];
      *(_OWORD *)v44 = v64[0];
      *(_OWORD *)(v44 + 16) = v46;
      v47 = v64[3];
      *(_OWORD *)(v44 + 32) = v64[2];
      *(_OWORD *)(v44 + 48) = v47;
      v48 = (void (**)(uint64_t *))(v43 + ((v42 + 111) & 0xFFFFFFFFFFFFFFF8));
      *v48 = v27;
      v48[1] = v26;
      swift_retain();
      v49 = (void *)sub_1DC402C80();
      sub_1DC402D04();
      swift_release();
      swift_release();

      v50 = swift_allocObject();
      *(_QWORD *)(v50 + 16) = v27;
      *(_QWORD *)(v50 + 24) = v26;
      swift_retain();
      v51 = (void *)sub_1DC402C80();
      sub_1DC402D34();
      swift_release();
      swift_release();
      swift_release();

      return sub_1DC0926D8(v57, type metadata accessor for StockListStockModel);
    }
  }
  else
  {
    sub_1DC168934();
    v31 = swift_allocError();
    *v32 = 0;
    *v6 = v31;
    v34 = v60;
    v33 = v61;
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(v60 + 104))(v6, *MEMORY[0x1E0DB99F0], v61);
    v62(v6);
    return (*(uint64_t (**)(uint64_t *, uint64_t))(v34 + 8))(v6, v33);
  }
}

uint64_t sub_1DC167FD8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[2];
  uint64_t v9;
  uint64_t v10;

  v2 = sub_1DC40124C();
  v9 = *(_QWORD *)(v2 - 8);
  v10 = v2;
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = a1[5];
  v8[1] = a1[6];
  __swift_project_boxed_opaque_existential_1(a1 + 2, v5);
  sub_1DC4010B4();
  __swift_project_boxed_opaque_existential_1(a1 + 2, a1[5]);
  sub_1DC400A60();
  v6 = sub_1DC400AC0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v4, v10);
  return v6;
}

uint64_t sub_1DC1680E8(uint64_t a1, uint64_t a2, char *a3, void (*a4)(uint64_t *), uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  void (**v30)(char *, char *, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  void (*v35)(char *, uint64_t);
  uint64_t v36;
  _BYTE *v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  char *v48;
  uint64_t v49;
  _BYTE *v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(char *, uint64_t, uint64_t);
  char *v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  void (*v62)(char *, uint64_t);
  void (*v63)(char *, char *, uint64_t);
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  void (**v75)(char *, char *, uint64_t);
  char *v76;
  char *v77;
  uint64_t v78;
  char *v79;
  char *v80;
  void (*v81)(char *, uint64_t);
  uint64_t *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  void (*v86)(uint64_t *);
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;

  v86 = a4;
  v85 = a5;
  v89 = a2;
  v71 = sub_1DC405C68();
  v70 = *(_QWORD *)(v71 - 8);
  MEMORY[0x1E0C80A78](v71);
  v69 = (char *)&v65 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = type metadata accessor for StockListModel(0);
  MEMORY[0x1E0C80A78](v72);
  v67 = (char *)&v65 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0CC01C(0, (unint64_t *)&qword_1EDB2AB40, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790]);
  v88 = v8;
  v78 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v68 = (char *)&v65 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v79 = (char *)&v65 - v11;
  sub_1DC0ED4AC(0);
  MEMORY[0x1E0C80A78](v12);
  v75 = (void (**)(char *, char *, uint64_t))((char *)&v65 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1DC0CC01C(0, &qword_1EDB2A280, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB9A28]);
  v83 = *(_QWORD *)(v14 - 8);
  v84 = v14;
  MEMORY[0x1E0C80A78](v14);
  v82 = (uint64_t *)((char *)&v65 - v15);
  sub_1DC0F8190();
  v17 = v16;
  v18 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v73 = (char *)&v65 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v77 = (char *)&v65 - v21;
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)&v65 - v23;
  sub_1DC0DA430();
  MEMORY[0x1E0C80A78](v25);
  v27 = (char *)&v65 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0CC01C(0, (unint64_t *)&qword_1EDB29D98, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60]);
  v29 = v28;
  v30 = *(void (***)(char *, char *, uint64_t))(v28 - 8);
  MEMORY[0x1E0C80A78](v28);
  v76 = (char *)&v65 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v32);
  v34 = (char *)&v65 - v33;
  v80 = a3;
  sub_1DC405BA8();
  sub_1DC404324();
  v74 = v18;
  v35 = *(void (**)(char *, uint64_t))(v18 + 8);
  v66 = v24;
  v87 = v17;
  v81 = v35;
  v35(v24, v17);
  sub_1DC406CC4();
  swift_bridgeObjectRelease();
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v30[6])(v27, 1, v29) == 1)
  {
    sub_1DC0926D8((uint64_t)v27, (uint64_t (*)(_QWORD))sub_1DC0DA430);
    sub_1DC168934();
    v36 = swift_allocError();
    *v37 = 1;
    v39 = v82;
    v38 = v83;
    *v82 = v36;
    v40 = v84;
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(v38 + 104))(v39, *MEMORY[0x1E0DB99F0], v84);
    v86(v39);
    return (*(uint64_t (**)(uint64_t *, uint64_t))(v38 + 8))(v39, v40);
  }
  else
  {
    v42 = v82;
    v30[4](v34, v27, v29);
    v43 = v73;
    sub_1DC405BA8();
    v44 = v87;
    sub_1DC404324();
    v81(v43, v44);
    v45 = (uint64_t)v75;
    sub_1DC4047BC();
    swift_bridgeObjectRelease();
    v46 = v74;
    v47 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v74 + 48))(v45, 1, v44);
    v48 = v34;
    if (v47 == 1)
    {
      sub_1DC0926D8(v45, (uint64_t (*)(_QWORD))sub_1DC0ED4AC);
      sub_1DC168934();
      v49 = swift_allocError();
      *v50 = 1;
      *v42 = v49;
      v52 = v83;
      v51 = v84;
      (*(void (**)(uint64_t *, _QWORD, uint64_t))(v83 + 104))(v42, *MEMORY[0x1E0DB99F0], v84);
      v86(v42);
      (*(void (**)(uint64_t *, uint64_t))(v52 + 8))(v42, v51);
      return ((uint64_t (*)(char *, uint64_t))v30[1])(v48, v29);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v46 + 32))(v77, v45, v87);
      v53 = *(void (**)(char *, uint64_t, uint64_t))(v78 + 16);
      v53(v79, v89, v88);
      v75 = v30;
      v30[2](v76, v34, v29);
      sub_1DC404750();
      sub_1DC10BB74();
      sub_1DC408E90();
      sub_1DC408ED8();
      if (v91 == v90)
      {
        swift_storeEnumTagMultiPayload();
        sub_1DC157B24();
        v54 = v66;
        sub_1DC404348();
        sub_1DC404744();
        v81(v54, v87);
      }
      v55 = v88;
      v56 = v79;
      sub_1DC406CB8();
      v74 = v29;
      v57 = v68;
      v53(v68, (uint64_t)v56, v55);
      v58 = *MEMORY[0x1E0DBA8E8];
      v80 = v48;
      v59 = v70;
      v60 = v69;
      v61 = v71;
      (*(void (**)(char *, uint64_t, uint64_t))(v70 + 104))(v69, v58, v71);
      sub_1DC405B90();
      (*(void (**)(char *, uint64_t))(v59 + 8))(v60, v61);
      sub_1DC0D75BC();
      sub_1DC157B24();
      sub_1DC405530();
      swift_release();
      v62 = *(void (**)(char *, uint64_t))(v78 + 8);
      v62(v57, v55);
      v86(v42);
      (*(void (**)(uint64_t *, uint64_t))(v83 + 8))(v42, v84);
      v63 = v75[1];
      v64 = v74;
      ((void (*)(char *, uint64_t))v63)(v76, v74);
      v62(v56, v55);
      v81(v77, v87);
      return ((uint64_t (*)(char *, uint64_t))v63)(v80, v64);
    }
  }
}

uint64_t sub_1DC168828(void *a1, void (*a2)(char *))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  id v10;
  uint64_t v12;

  sub_1DC0CC01C(0, &qword_1EDB2A280, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB9A28]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  v7 = MEMORY[0x1E0C80A78](v4);
  v9 = (char *)&v12 - v8;
  *(uint64_t *)((char *)&v12 - v8) = (uint64_t)a1;
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v6 + 104))((char *)&v12 - v8, *MEMORY[0x1E0DB99F0], v5, v7);
  v10 = a1;
  a2(v9);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

unint64_t sub_1DC1688EC()
{
  unint64_t result;

  result = qword_1F034C778;
  if (!qword_1F034C778)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC410028, &type metadata for StockListRemoveStockBlueprintModifier);
    atomic_store(result, (unint64_t *)&qword_1F034C778);
  }
  return result;
}

unint64_t sub_1DC168934()
{
  unint64_t result;

  result = qword_1F034C780;
  if (!qword_1F034C780)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC410118, &type metadata for StockListRemoveStockBlueprintModifier.Errors);
    atomic_store(result, (unint64_t *)&qword_1F034C780);
  }
  return result;
}

uint64_t sub_1DC168978()
{
  uint64_t v0;

  return sub_1DC167FD8(*(_QWORD **)(v0 + 16));
}

uint64_t sub_1DC168990(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for StockListRemoveStockBlueprintModifier(a2, a1);
  return a2;
}

uint64_t sub_1DC1689C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;

  sub_1DC0CC01C(0, (unint64_t *)&qword_1EDB2AB40, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790]);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  v5 = v0 + v4;
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v5 + 16);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v5 + 64);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DC168A80(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;

  sub_1DC0CC01C(0, (unint64_t *)&qword_1EDB2AB40, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790]);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1DC1680E8(a1, v1 + v5, (char *)(v1 + v6), *(void (**)(uint64_t *))(v1 + ((v6 + 111) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v1 + ((v6 + 111) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_1DC168B0C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DC168B30(void *a1)
{
  uint64_t v1;

  return sub_1DC168828(a1, *(void (**)(char *))(v1 + 16));
}

uint64_t storeEnumTagSinglePayload for StockListRemoveStockBlueprintModifier.Errors(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1DC168B84 + 4 * byte_1DC40FFF5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1DC168BB8 + 4 * byte_1DC40FFF0[v4]))();
}

uint64_t sub_1DC168BB8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC168BC0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC168BC8);
  return result;
}

uint64_t sub_1DC168BD4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC168BDCLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1DC168BE0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC168BE8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StockListRemoveStockBlueprintModifier.Errors()
{
  return &type metadata for StockListRemoveStockBlueprintModifier.Errors;
}

unint64_t sub_1DC168C08()
{
  unint64_t result;

  result = qword_1F034C788;
  if (!qword_1F034C788)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC4100F0, &type metadata for StockListRemoveStockBlueprintModifier.Errors);
    atomic_store(result, (unint64_t *)&qword_1F034C788);
  }
  return result;
}

uint64_t TextInputAlert.__allocating_init(type:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 32);
  v5 = __swift_mutable_project_boxed_opaque_existential_1(a1, v3);
  v6 = sub_1DC16974C(v5, v1, v3, v4);
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v6;
}

uint64_t TextInputAlert.init(type:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 32);
  v5 = __swift_mutable_project_boxed_opaque_existential_1(a1, v3);
  v6 = MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, __n128))(v9 + 16))(v8, v6);
  v10 = sub_1DC1696E0((uint64_t)v8, v1, v3, v4);
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v10;
}

uint64_t TextInputAlert.onSubmit(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v2 + 56);
  *(_QWORD *)(v2 + 56) = a1;
  *(_QWORD *)(v2 + 64) = a2;
  sub_1DC0E81D0(v3);
  swift_retain();
  return swift_retain();
}

uint64_t TextInputAlert.onCancel(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v2 + 72);
  *(_QWORD *)(v2 + 72) = a1;
  *(_QWORD *)(v2 + 80) = a2;
  sub_1DC0E81D0(v3);
  swift_retain();
  return swift_retain();
}

uint64_t TextInputAlert.onValidateText(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 88) = a1;
  *(_QWORD *)(v2 + 96) = a2;
  swift_retain();
  swift_release();
  return swift_retain();
}

void TextInputAlert.present(from:animated:completion:)(void *a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  id v9;
  void *v10;
  id v11;
  void *v12;
  _QWORD v13[6];

  v9 = sub_1DC168EC4();
  v10 = *(void **)(v4 + 104);
  *(_QWORD *)(v4 + 104) = v9;
  v11 = v9;

  if (a3)
  {
    v13[4] = a3;
    v13[5] = a4;
    v13[0] = MEMORY[0x1E0C809B0];
    v13[1] = 1107296256;
    v13[2] = sub_1DC081B88;
    v13[3] = &block_descriptor_3;
    v12 = _Block_copy(v13);
    swift_retain();
    swift_release();
  }
  else
  {
    v12 = 0;
  }
  objc_msgSend(a1, sel_presentViewController_animated_completion_, v11, a2 & 1, v12);
  _Block_release(v12);

}

id sub_1DC168EC4()
{
  _QWORD *v0;
  uint64_t (*v1)(uint64_t, uint64_t);
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  void *v16;
  uint64_t v17;
  void *v18;
  void *v19;
  id v20;
  id v21;
  objc_class *v22;
  char *v23;
  char *v24;
  uint64_t (**v25)(uint64_t, uint64_t);
  uint64_t v26;
  id (**v27)(char);
  id v28;
  uint64_t v29;
  void *v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  void *v36;
  void *v37;
  id v38;
  objc_super v40;
  uint64_t aBlock;
  uint64_t v42;
  void (*v43)(uint64_t, void *);
  void *v44;
  void *v45;
  uint64_t v46;

  v1 = (uint64_t (*)(uint64_t, uint64_t))v0;
  v2 = v0 + 2;
  v3 = v0[5];
  v4 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v3);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v4);
  v5 = v0[5];
  v6 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v5);
  (*(void (**)(uint64_t, uint64_t))(v6 + 16))(v5, v6);
  v7 = (void *)sub_1DC408A1C();
  swift_bridgeObjectRelease();
  v8 = (void *)sub_1DC408A1C();
  swift_bridgeObjectRelease();
  v9 = objc_msgSend((id)objc_opt_self(), sel_alertControllerWithTitle_message_preferredStyle_, v7, v8, 1);

  v10 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v1;
  v12 = *((_QWORD *)v1 + 5);
  v13 = *((_QWORD *)v1 + 6);
  __swift_project_boxed_opaque_existential_1(v2, v12);
  v14 = *(void (**)(uint64_t, uint64_t))(v13 + 24);
  swift_retain();
  v14(v12, v13);
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = sub_1DC1698C0;
  *(_QWORD *)(v15 + 24) = v11;
  swift_retain();
  v16 = (void *)sub_1DC408A1C();
  swift_bridgeObjectRelease();
  v45 = sub_1DC080634;
  v46 = v15;
  aBlock = MEMORY[0x1E0C809B0];
  v17 = MEMORY[0x1E0C809B0];
  v42 = 1107296256;
  v43 = sub_1DC149854;
  v44 = &block_descriptor_9;
  v18 = _Block_copy(&aBlock);
  swift_release();
  v19 = (void *)objc_opt_self();
  v20 = objc_msgSend(v19, sel_actionWithTitle_style_handler_, v16, 0, v18);
  _Block_release(v18);

  objc_msgSend(v9, sel_addAction_, v20);
  v21 = v20;
  objc_msgSend(v9, sel_setPreferredAction_, v21);
  v22 = (objc_class *)type metadata accessor for TextFieldValidator();
  v23 = (char *)objc_allocWithZone(v22);
  v24 = &v23[OBJC_IVAR____TtC8StocksUI18TextFieldValidator_submit];
  *(_QWORD *)v24 = nullsub_1;
  *((_QWORD *)v24 + 1) = 0;
  v25 = (uint64_t (**)(uint64_t, uint64_t))&v23[OBJC_IVAR____TtC8StocksUI18TextFieldValidator_isTextValid];
  *v25 = sub_1DC1698EC;
  v25[1] = v1;
  v26 = swift_allocObject();
  *(_QWORD *)(v26 + 16) = v21;
  v27 = (id (**)(char))&v23[OBJC_IVAR____TtC8StocksUI18TextFieldValidator_setAllowSubmission];
  *v27 = sub_1DC169960;
  v27[1] = (id (*)(char))v26;
  v40.receiver = v23;
  v40.super_class = v22;
  swift_retain();
  v28 = objc_msgSendSuper2(&v40, sel_init);
  v29 = swift_allocObject();
  *(_QWORD *)(v29 + 16) = v1;
  *(_QWORD *)(v29 + 24) = v28;
  v45 = sub_1DC16996C;
  v46 = v29;
  aBlock = v17;
  v42 = 1107296256;
  v43 = sub_1DC149854;
  v44 = &block_descriptor_18_0;
  v30 = _Block_copy(&aBlock);
  swift_retain();
  v31 = v28;
  swift_release();
  objc_msgSend(v9, sel_addTextFieldWithConfigurationHandler_, v30, v40.receiver, v40.super_class);
  _Block_release(v30);
  v32 = *((_QWORD *)v1 + 5);
  v33 = *((_QWORD *)v1 + 6);
  __swift_project_boxed_opaque_existential_1(v2, v32);
  (*(void (**)(uint64_t, uint64_t))(v33 + 32))(v32, v33);
  v34 = swift_allocObject();
  *(_QWORD *)(v34 + 16) = v1;
  *(_QWORD *)(v34 + 24) = v31;
  swift_retain();
  v35 = v31;
  v36 = (void *)sub_1DC408A1C();
  swift_bridgeObjectRelease();
  v45 = sub_1DC169978;
  v46 = v34;
  aBlock = MEMORY[0x1E0C809B0];
  v42 = 1107296256;
  v43 = sub_1DC149854;
  v44 = &block_descriptor_24;
  v37 = _Block_copy(&aBlock);
  swift_release();
  v38 = objc_msgSend(v19, sel_actionWithTitle_style_handler_, v36, 1, v37);
  _Block_release(v37);

  objc_msgSend(v9, sel_addAction_, v38);
  swift_release();

  return v9;
}

void sub_1DC16937C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  unint64_t v7;
  id v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t);
  void *v15;
  uint64_t v16;

  v3 = a1 + 16;
  swift_beginAccess();
  v4 = (void *)MEMORY[0x1DF0CAD78](v3);
  if (!v4)
    return;
  v5 = v4;
  v6 = objc_msgSend(v4, sel_textFields);

  if (!v6)
    return;
  sub_1DC169980();
  v7 = sub_1DC408CD4();

  if (v7 >> 62)
  {
    swift_bridgeObjectRetain();
    v16 = sub_1DC409850();
    swift_bridgeObjectRelease();
    if (v16)
      goto LABEL_5;
LABEL_13:
    swift_bridgeObjectRelease();
    return;
  }
  if (!*(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_13;
LABEL_5:
  if ((v7 & 0xC000000000000001) != 0)
  {
    v8 = (id)MEMORY[0x1DF0C9FBC](0, v7);
  }
  else
  {
    if (!*(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    v8 = *(id *)(v7 + 32);
  }
  v9 = v8;
  swift_bridgeObjectRelease();
  v10 = objc_msgSend(v9, sel_text);

  if (v10)
  {
    v11 = sub_1DC408A4C();
    v13 = v12;

    v14 = *(void (**)(uint64_t, uint64_t))(a2 + 56);
    if (v14)
    {
      swift_retain();
      v14(v11, v13);
      sub_1DC0E81D0((uint64_t)v14);
    }
    swift_bridgeObjectRelease();
    v15 = *(void **)(a2 + 104);
    *(_QWORD *)(a2 + 104) = 0;

  }
}

uint64_t sub_1DC169518(void *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(_QWORD);
  uint64_t (*v8)(uint64_t, unint64_t);
  id v9;
  void *v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  char v14;

  v5 = a2[5];
  v6 = a2[6];
  __swift_project_boxed_opaque_existential_1(a2 + 2, v5);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 40))(a1, 0, v5, v6);
  objc_msgSend(a1, sel_setDelegate_, a3);
  v7 = *(uint64_t (**)(_QWORD))(a3 + OBJC_IVAR____TtC8StocksUI18TextFieldValidator_setAllowSubmission);
  v8 = *(uint64_t (**)(uint64_t, unint64_t))(a3
                                                           + OBJC_IVAR____TtC8StocksUI18TextFieldValidator_isTextValid);
  v9 = objc_msgSend(a1, sel_text);
  if (v9)
  {
    v10 = v9;
    v11 = sub_1DC408A4C();
    v13 = v12;

  }
  else
  {
    v11 = 0;
    v13 = 0xE000000000000000;
  }
  v14 = v8(v11, v13);
  swift_bridgeObjectRelease();
  return v7(v14 & 1);
}

void sub_1DC169610(uint64_t a1, uint64_t a2)
{
  void (*v3)(uint64_t);
  uint64_t v4;
  void *v5;

  v3 = *(void (**)(uint64_t))(a2 + 72);
  if (v3)
  {
    v4 = swift_retain();
    v3(v4);
    sub_1DC0E81D0((uint64_t)v3);
  }
  v5 = *(void **)(a2 + 104);
  *(_QWORD *)(a2 + 104) = 0;

}

uint64_t TextInputAlert.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  sub_1DC0E81D0(*(_QWORD *)(v0 + 56));
  sub_1DC0E81D0(*(_QWORD *)(v0 + 72));
  swift_release();

  return v0;
}

uint64_t TextInputAlert.__deallocating_deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  sub_1DC0E81D0(*(_QWORD *)(v0 + 56));
  sub_1DC0E81D0(*(_QWORD *)(v0 + 72));
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_1DC1696E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *boxed_opaque_existential_1;

  *(_QWORD *)(a2 + 40) = a3;
  *(_QWORD *)(a2 + 48) = a4;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(a2 + 16));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 32))(boxed_opaque_existential_1, a1, a3);
  *(_OWORD *)(a2 + 56) = 0u;
  *(_OWORD *)(a2 + 72) = 0u;
  *(_QWORD *)(a2 + 96) = 0;
  *(_QWORD *)(a2 + 104) = 0;
  *(_QWORD *)(a2 + 88) = sub_1DC080520;
  return a2;
}

uint64_t sub_1DC16974C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v13;

  v7 = *(_QWORD *)(a3 - 8);
  MEMORY[0x1E0C80A78](a1);
  v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, a3);
  *(_QWORD *)(v10 + 40) = a3;
  *(_QWORD *)(v10 + 48) = a4;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v10 + 16));
  (*(void (**)(uint64_t *, char *, uint64_t))(v7 + 32))(boxed_opaque_existential_1, v9, a3);
  *(_OWORD *)(v10 + 56) = 0u;
  *(_OWORD *)(v10 + 72) = 0u;
  *(_QWORD *)(v10 + 96) = 0;
  *(_QWORD *)(v10 + 104) = 0;
  *(_QWORD *)(v10 + 88) = sub_1DC080520;
  return v10;
}

uint64_t dispatch thunk of TextInputAlertable.title.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of TextInputAlertable.message.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of TextInputAlertable.submitTitle.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of TextInputAlertable.cancelTitle.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of TextInputAlertable.configureTextField(_:label:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t type metadata accessor for TextInputAlert()
{
  return objc_opt_self();
}

uint64_t method lookup function for TextInputAlert()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of TextInputAlert.__allocating_init(type:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t sub_1DC169870()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1DC169894()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1DC1698C0()
{
  uint64_t v0;

  sub_1DC16937C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1DC1698C8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DC1698EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v5)(uint64_t, uint64_t);

  v5 = *(uint64_t (**)(uint64_t, uint64_t))(v2 + 88);
  swift_retain();
  LOBYTE(a2) = v5(a1, a2);
  swift_release();
  return a2 & 1;
}

uint64_t sub_1DC16993C()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_1DC169960(char a1)
{
  uint64_t v1;

  return sub_1DC3E2130(a1, *(id *)(v1 + 16));
}

uint64_t sub_1DC16996C(void *a1)
{
  uint64_t v1;

  return sub_1DC169518(a1, *(_QWORD **)(v1 + 16), *(_QWORD *)(v1 + 24));
}

void sub_1DC169978(uint64_t a1)
{
  uint64_t v1;

  sub_1DC169610(a1, *(_QWORD *)(v1 + 16));
}

unint64_t sub_1DC169980()
{
  unint64_t result;

  result = qword_1F034C850;
  if (!qword_1F034C850)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1F034C850);
  }
  return result;
}

uint64_t *sub_1DC1699D4(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t v14;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1DC400F7C();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[6];
    *(uint64_t *)((char *)a1 + a3[5]) = *(uint64_t *)((char *)a2 + a3[5]);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1DC4002BC();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v13 = a3[8];
    *(uint64_t *)((char *)a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    *(uint64_t *)((char *)a1 + v13) = *(uint64_t *)((char *)a2 + v13);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1DC169AC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_1DC400F7C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  v5 = a1 + *(int *)(a2 + 24);
  v6 = sub_1DC4002BC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DC169B48(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v6 = sub_1DC400F7C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1DC4002BC();
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  v12 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v12) = *(_QWORD *)(a2 + v12);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1DC169C08(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_1DC400F7C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7 = a3[6];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1DC4002BC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1DC169CE0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_1DC400F7C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1DC4002BC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v11) = *(_QWORD *)(a2 + v11);
  return a1;
}

uint64_t sub_1DC169D80(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_1DC400F7C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  swift_bridgeObjectRelease();
  v7 = a3[6];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1DC4002BC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1DC169E40()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC169E4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;

  v6 = sub_1DC400F7C();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v8 = sub_1DC4002BC();
    v10 = a1 + *(int *)(a3 + 24);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t sub_1DC169EF4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC169F00(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  result = sub_1DC400F7C();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
      return result;
    }
    v10 = sub_1DC4002BC();
    v12 = a1 + *(int *)(a4 + 24);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for StockChartDescriptor()
{
  uint64_t result;

  result = qword_1EDB31C88;
  if (!qword_1EDB31C88)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1DC169FE0()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1DC400F7C();
  if (v1 <= 0x3F)
  {
    result = sub_1DC4002BC();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

id sub_1DC16A074()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  void *v4;
  id v5;

  v1 = *(void **)(v0 + 16);
  if (v1)
  {
    v2 = *(id *)(v0 + 16);
  }
  else
  {
    v3 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ForYouTitleView()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
    v4 = *(void **)(v0 + 16);
    *(_QWORD *)(v0 + 16) = v3;
    v2 = v3;

    v1 = 0;
  }
  v5 = v1;
  return v2;
}

uint64_t sub_1DC16A0EC()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t result;
  uint64_t v8;
  _BYTE v9[24];

  sub_1DC130EB0();
  MEMORY[0x1E0C80A78](v0);
  v2 = &v9[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3 = sub_1DC4052FC();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v8 = result + OBJC_IVAR____TtC8StocksUI23ForYouTitleViewProvider_lastLayoutOptions;
    swift_beginAccess();
    sub_1DC16AA34(v8, (uint64_t)v2);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
    {
      swift_release();
      return sub_1DC0926D8((uint64_t)v2, (uint64_t (*)(_QWORD))sub_1DC130EB0);
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v4 + 32))(v6, v2, v3);
      sub_1DC16A250((uint64_t)v6);
      swift_release();
      return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
    }
  }
  return result;
}

uint64_t sub_1DC16A250(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  int *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  double *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  double v28;
  double v29;
  double v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  id v44;
  id v45;
  id v46;
  char *v47;
  id v48;
  uint64_t v50;
  __int128 v51[2];
  uint64_t v52[12];
  CGRect v53;

  v2 = v1;
  v4 = (int *)type metadata accessor for ForYouTitleViewLayoutOptions();
  MEMORY[0x1E0C80A78](v4);
  v6 = (uint64_t *)((char *)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = type metadata accessor for ForYouTitleViewLayoutAttributes();
  MEMORY[0x1E0C80A78](v7);
  v9 = (double *)((char *)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1DC130EB0();
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for AttributionSource();
  MEMORY[0x1E0C80A78](v13);
  v15 = (uint64_t *)((char *)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = v1[13];
  v17 = v1[14];
  __swift_project_boxed_opaque_existential_1(v1 + 10, v16);
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v17);
  sub_1DC402788();
  swift_release();
  v18 = v1[15];
  sub_1DC0824D4((uint64_t)(v1 + 16), (uint64_t)v51);
  swift_unknownObjectRetain();
  sub_1DC25D008(v15, v18, v51, v52);
  v19 = sub_1DC4052FC();
  v20 = *(_QWORD *)(v19 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v12, a1, v19);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v12, 0, 1, v19);
  v21 = (uint64_t)v2 + OBJC_IVAR____TtC8StocksUI23ForYouTitleViewProvider_lastLayoutOptions;
  swift_beginAccess();
  sub_1DC16AA78((uint64_t)v12, v21);
  swift_endAccess();
  __swift_project_boxed_opaque_existential_1(v2 + 3, v2[6]);
  sub_1DC405230();
  v23 = v22;
  v25 = v24;
  v26 = sub_1DC405224();
  MEMORY[0x1DF0C97B8](v26, 0.0, v27, v28, v29, v30);
  sub_1DC408F68();
  v32 = v31;
  v34 = v33;
  v36 = v35;
  v38 = v37;
  sub_1DC405200();
  sub_1DC405218();
  v40 = v39;
  v41 = sub_1DC405254();
  v42 = sub_1DC40529C();
  *v6 = v23;
  v6[1] = v25;
  v6[2] = v32;
  v6[3] = v34;
  v6[4] = v36;
  v6[5] = v38;
  *(_QWORD *)((char *)v6 + v4[7]) = v40;
  *(_QWORD *)((char *)v6 + v4[8]) = v41;
  *(_QWORD *)((char *)v6 + v4[9]) = v42;
  *((_BYTE *)v6 + v4[10]) = 0;
  *((_BYTE *)v6 + v4[11]) = 0;
  *(_QWORD *)((char *)v6 + v4[12]) = 0x4000000000000000;
  *(_QWORD *)((char *)v6 + v4[13]) = 0x4010000000000000;
  sub_1DC102A30(v52, (uint64_t)v6, (uint64_t)v9);
  sub_1DC0926D8((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for ForYouTitleViewLayoutOptions);
  v43 = (char *)sub_1DC16A074();
  sub_1DC0AAB40((uint64_t)v52, v9, v43);

  v44 = sub_1DC16A074();
  v45 = sub_1DC16A074();
  objc_msgSend(v45, sel_frame);

  v46 = sub_1DC16A074();
  objc_msgSend(v46, sel_frame);
  CGRectGetMaxY(v53);

  sub_1DC4092A4();
  objc_msgSend(v44, sel_setFrame_);

  v47 = (char *)sub_1DC16A074();
  v48 = *(id *)&v47[OBJC_IVAR____TtC8StocksUI15ForYouTitleView_separatorLayer];

  objc_msgSend(v48, sel_setHidden_, 1);
  sub_1DC0926D8((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for ForYouTitleViewLayoutAttributes);
  return sub_1DC101F40((uint64_t)v52);
}

uint64_t sub_1DC16A674()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 80);
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 128);
  sub_1DC0926D8(v0 + OBJC_IVAR____TtC8StocksUI23ForYouTitleViewProvider_lastLayoutOptions, (uint64_t (*)(_QWORD))sub_1DC130EB0);
  return swift_deallocClassInstance();
}

uint64_t sub_1DC16A6DC()
{
  return type metadata accessor for ForYouTitleViewProvider();
}

_QWORD *sub_1DC16A6E4(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t a5, uint64_t a6, _QWORD *a7, uint64_t a8, uint64_t a9)
{
  uint64_t *boxed_opaque_existential_1;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t);
  void *v23;
  char v25[40];
  _QWORD v26[5];
  uint64_t v27[5];

  v27[3] = a8;
  v27[4] = a9;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v27);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a8 - 8) + 32))(boxed_opaque_existential_1, a6, a8);
  v26[3] = type metadata accessor for ForYouTitleViewLayoutAttributesFactory();
  v26[4] = &off_1EA464650;
  v26[0] = a1;
  a7[2] = 0;
  v18 = (char *)a7 + OBJC_IVAR____TtC8StocksUI23ForYouTitleViewProvider_lastLayoutOptions;
  v19 = sub_1DC4052FC();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v18, 1, 1, v19);
  sub_1DC0824D4((uint64_t)v26, (uint64_t)(a7 + 3));
  a7[8] = a2;
  a7[9] = a3;
  sub_1DC0824D4((uint64_t)a4, (uint64_t)(a7 + 10));
  a7[15] = a5;
  sub_1DC0824D4((uint64_t)v27, (uint64_t)(a7 + 16));
  v20 = a4[3];
  v21 = a4[4];
  __swift_project_boxed_opaque_existential_1(a4, v20);
  v22 = *(void (**)(uint64_t, uint64_t))(v21 + 8);
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  v22(v20, v21);
  sub_1DC0ACADC();
  v23 = (void *)sub_1DC409148();
  swift_allocObject();
  swift_weakInit();
  sub_1DC402794();
  swift_release();

  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a4);
  return a7;
}

_QWORD *sub_1DC16A8A4(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *boxed_opaque_existential_1;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33[3];
  uint64_t v34;
  uint64_t v35;

  v31 = a4;
  v32 = a5;
  v16 = *(_QWORD *)(a9 - 8);
  MEMORY[0x1E0C80A78](a1);
  v18 = (char *)&v30 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = v19;
  v35 = v20;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v33);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a8 - 8) + 32))(boxed_opaque_existential_1, a1, a8);
  v22 = (_QWORD *)swift_allocObject();
  v23 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v33, v34);
  MEMORY[0x1E0C80A78](v23);
  v25 = (uint64_t *)((char *)&v30 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v26 + 16))(v25);
  v27 = *v25;
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, a6, a9);
  v28 = sub_1DC16A6E4(v27, a2, a3, v31, v32, (uint64_t)v18, v22, a9, a11);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
  return v28;
}

uint64_t sub_1DC16AA08()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1DC16AA2C()
{
  return sub_1DC16A0EC();
}

uint64_t sub_1DC16AA34(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1DC130EB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC16AA78(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1DC130EB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

id sub_1DC16AABC()
{
  uint64_t ObjCClassFromMetadata;
  id result;

  type metadata accessor for Images();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  result = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  qword_1EDB41188 = (uint64_t)result;
  return result;
}

void sub_1DC16AB0C(uint64_t a1)
{
  sub_1DC16ADF8(a1, 0x6E6F63692D707061, 0xE800000000000000, &qword_1F03688D8);
}

id sub_1DC16AB2C(uint64_t a1)
{
  return sub_1DC16ABD4(a1, (SEL *)&selRef_ts_plus, &qword_1EDB5E1D0);
}

id sub_1DC16AB40(uint64_t a1)
{
  return sub_1DC16ABD4(a1, (SEL *)&selRef_ts_checkmark, &qword_1F03688E0);
}

void sub_1DC16AB54(uint64_t a1)
{
  sub_1DC16ADF8(a1, 0x7070612D7377656ELL, 0xED00006E6F63692DLL, &qword_1F03688E8);
}

void sub_1DC16AB80(uint64_t a1)
{
  sub_1DC16ADF8(a1, 0x6861792D6E6F6369, 0xEF6F676F6C2D6F6FLL, &qword_1EDB5E268);
}

id sub_1DC16ABAC(uint64_t a1)
{
  return sub_1DC16ABD4(a1, (SEL *)&selRef_ts_plusCircleFill, &qword_1F03688F0);
}

id sub_1DC16ABC0(uint64_t a1)
{
  return sub_1DC16ABD4(a1, (SEL *)&selRef_ts_minusCircleFill, &qword_1F03688F8);
}

id sub_1DC16ABD4(uint64_t a1, SEL *a2, _QWORD *a3)
{
  id result;

  result = objc_msgSend((id)objc_opt_self(), *a2);
  *a3 = result;
  return result;
}

id sub_1DC16AC14()
{
  if (qword_1F034AD98 != -1)
    swift_once();
  qword_1F0368900 = qword_1F03688D8;
  return (id)qword_1F03688D8;
}

void sub_1DC16AC5C(uint64_t a1)
{
  sub_1DC16AF90(a1, 0xD000000000000019, 0x80000001DC435720, &qword_1F0368908);
}

void sub_1DC16AC80()
{
  void *v0;
  id v1;
  id v2;

  v0 = (void *)sub_1DC408A1C();
  v1 = objc_msgSend((id)objc_opt_self(), sel__systemImageNamed_, v0);

  if (v1)
  {
    v2 = objc_msgSend(v1, sel_imageWithRenderingMode_, 1);

    qword_1F0368910 = (uint64_t)v2;
  }
  else
  {
    __break(1u);
  }
}

void sub_1DC16AD18(uint64_t a1)
{
  sub_1DC16AF90(a1, 0x657061707377656ELL, 0xE900000000000072, &qword_1F0368918);
}

void sub_1DC16AD3C()
{
  void *v0;
  id v1;
  id v2;

  v0 = (void *)sub_1DC408A1C();
  v1 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v0);

  if (v1)
  {
    v2 = objc_msgSend(v1, sel_imageWithRenderingMode_, 2);

    qword_1F0368920 = (uint64_t)v2;
  }
  else
  {
    __break(1u);
  }
}

void sub_1DC16ADD4(uint64_t a1)
{
  sub_1DC16ADF8(a1, 0xD00000000000001CLL, 0x80000001DC435740, &qword_1EDB5E150);
}

void sub_1DC16ADF8(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  id v5;
  void *v6;
  id v7;

  if (qword_1EDB41190 != -1)
    swift_once();
  v5 = (id)qword_1EDB41188;
  v6 = (void *)sub_1DC408A1C();
  v7 = objc_msgSend((id)objc_opt_self(), sel_imageNamed_inBundle_compatibleWithTraitCollection_, v6, v5, 0);

  if (v7)
    *a4 = v7;
  else
    __break(1u);
}

void sub_1DC16AEB0(uint64_t a1)
{
  sub_1DC16AF90(a1, 0x6C69662E79616C70, 0xE90000000000006CLL, &qword_1F0368928);
}

void sub_1DC16AED4(uint64_t a1)
{
  sub_1DC16AF90(a1, 0x69632E6B72616D78, 0xEC000000656C6372, &qword_1F0368930);
}

void sub_1DC16AEFC(uint64_t a1)
{
  sub_1DC16AF90(a1, 0xD000000000000013, 0x80000001DC435760, &qword_1EDB5E120);
}

void sub_1DC16AF20(uint64_t a1)
{
  sub_1DC16AF90(a1, 0x6C75622E7473696CLL, 0xEB0000000074656CLL, &qword_1F0368938);
}

void sub_1DC16AF48(uint64_t a1)
{
  sub_1DC16AF90(a1, 0xD000000000000015, 0x80000001DC435780, &qword_1F0368940);
}

void sub_1DC16AF6C(uint64_t a1)
{
  sub_1DC16AF90(a1, 0xD000000000000010, 0x80000001DC4357A0, &qword_1F0368948);
}

void sub_1DC16AF90(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  void *v5;
  id v6;

  v5 = (void *)sub_1DC408A1C();
  v6 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v5);

  if (v6)
    *a4 = v6;
  else
    __break(1u);
}

id sub_1DC16B038()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for Images();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for Images()
{
  return objc_opt_self();
}

uint64_t sub_1DC16B08C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v14;
  uint64_t v15;
  id v16;
  _QWORD *v17;
  uint64_t result;
  id v19;
  _QWORD v20[4];

  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a1;
  *(_QWORD *)(v14 + 24) = a2;
  v15 = swift_allocObject();
  v16 = objc_allocWithZone(MEMORY[0x1E0DE7910]);
  swift_retain();
  *(_QWORD *)(v15 + 16) = objc_msgSend(v16, sel_init);
  sub_1DC4055E4();
  sub_1DC404A08();
  swift_release();
  v17 = (_QWORD *)swift_allocObject();
  v17[2] = a6;
  v17[3] = a7;
  v17[4] = a8;
  v17[5] = a9;
  v17[6] = v15;
  v17[7] = sub_1DC16BEB4;
  v17[8] = v14;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1DC40274C();
  swift_release();
  swift_release();
  __swift_project_boxed_opaque_existential_1(v20, v20[3]);
  result = swift_beginAccess();
  if (*(_QWORD *)(v15 + 16))
  {
    v19 = *(id *)(v15 + 16);
    sub_1DC4024AC();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC16B244(uint64_t a1, uint64_t a2, void (*a3)(char *))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v14;

  sub_1DC16BDD4();
  v7 = v6;
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1DC400280();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v9, a1, v10);
  v11 = &v9[*(int *)(v7 + 48)];
  sub_1DC0F8190();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v11, a2, v12);
  a3(v9);
  return sub_1DC0926D8((uint64_t)v9, (uint64_t (*)(_QWORD))sub_1DC16BDD4);
}

uint64_t sub_1DC16B324(uint64_t a1, uint64_t (*a2)(char *), uint64_t a3, uint64_t (*a4)(char *), uint64_t a5, uint64_t a6, void (*a7)(char *, char *), uint64_t a8)
{
  uint64_t (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  unint64_t *v31;
  void (*v32)();
  uint64_t v33;
  uint64_t v34;
  char *v35;
  void **v36;
  void *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *, char *);
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t (*v45)(char *);
  uint64_t v46;
  uint64_t v47;

  v40 = a8;
  v41 = a7;
  v39 = a6;
  v45 = a4;
  v46 = a5;
  v10 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1DC089DA4(0, &qword_1EDB28B50, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1658], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v11);
  v42 = (char *)&v38 - v12;
  v13 = sub_1DC400280();
  v43 = *(_QWORD *)(v13 - 8);
  v44 = v13;
  MEMORY[0x1E0C80A78](v13);
  v38 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC089DA4(0, &qword_1EDB29BF0, (uint64_t (*)(uint64_t))sub_1DC0F8190, v10);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v38 - v16;
  sub_1DC0F8190();
  v47 = v18;
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v21 = (char *)&v38 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0DA430();
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)&v38 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0CC0A4(0, (unint64_t *)&qword_1EDB29D98, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60]);
  v26 = v25;
  v27 = *(_QWORD *)(v25 - 8);
  MEMORY[0x1E0C80A78](v25);
  v29 = (char *)&v38 - v28;
  sub_1DC1C17C4(a2, a3, v24);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v24, 1, v26) == 1)
    return sub_1DC0926D8((uint64_t)v24, (uint64_t (*)(_QWORD))sub_1DC0DA430);
  (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v29, v24, v26);
  sub_1DC1C1B34(v45, v46, v17);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v47) == 1)
  {
    (*(void (**)(char *, uint64_t))(v27 + 8))(v29, v26);
    v31 = &qword_1EDB29BF0;
    v32 = sub_1DC0F8190;
    return sub_1DC0B091C((uint64_t)v17, v31, (uint64_t (*)(uint64_t))v32);
  }
  (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v21, v17, v47);
  sub_1DC0CC0A4(0, (unint64_t *)&qword_1EDB2AB40, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790]);
  v17 = v42;
  sub_1DC406D24();
  v34 = v43;
  v33 = v44;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v17, 1, v44) == 1)
  {
    (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v47);
    (*(void (**)(char *, uint64_t))(v27 + 8))(v29, v26);
    v31 = &qword_1EDB28B50;
    v32 = (void (*)())MEMORY[0x1E0CB1658];
    return sub_1DC0B091C((uint64_t)v17, v31, (uint64_t (*)(uint64_t))v32);
  }
  v35 = v38;
  v36 = (void **)(v39 + 16);
  (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v38, v17, v33);
  swift_beginAccess();
  v37 = *v36;
  *v36 = 0;

  v41(v35, v21);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v35, v33);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v47);
  return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v29, v26);
}

uint64_t sub_1DC16B6C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD v14[4];

  v14[1] = a2;
  v14[2] = a1;
  swift_getObjectType();
  v4 = sub_1DC405974();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0CC0A4(0, (unint64_t *)&qword_1EDB2AB40, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790]);
  v9 = v8;
  v10 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)v14 - v11;
  v14[3] = a3;
  sub_1DC080808(&qword_1F034C870, (uint64_t (*)(uint64_t))type metadata accessor for StockListViewController, (uint64_t)&unk_1DC426938);
  sub_1DC405050();
  sub_1DC405968();
  sub_1DC080808(&qword_1EDB35268, (uint64_t (*)(uint64_t))type metadata accessor for StockListViewController, (uint64_t)&unk_1DC426A30);
  sub_1DC406370();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_1DC16B828(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  id v4;
  void *v5;
  uint64_t v6;

  sub_1DC089DA4(0, &qword_1F034C860, (uint64_t (*)(uint64_t))sub_1DC16BDD4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  sub_1DC402DA0();
  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = a1;
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = sub_1DC16BE40;
  *(_QWORD *)(v3 + 24) = v2;
  v4 = a1;
  v5 = (void *)sub_1DC402C80();
  v6 = sub_1DC402D04();
  swift_release();
  swift_release();

  return v6;
}

uint64_t sub_1DC16B948()
{
  uint64_t v0;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;

  sub_1DC0CC0A4(0, (unint64_t *)&qword_1EDB29D98, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60]);
  sub_1DC4046FC();
  if (v7)
  {
    if (v7 != 1)
      return 0;
    v0 = 0;
  }
  else
  {
    v0 = 1;
  }
  sub_1DC10BD5C(v2, v3, v4, v5, v6, v7);
  return v0;
}

void sub_1DC16B9C4(uint64_t a1, void (*a2)(id))
{
  id v3;
  void *v4;
  id v5;

  sub_1DC16BD54();
  sub_1DC409808();
  v3 = objc_allocWithZone(MEMORY[0x1E0DB59F0]);
  v4 = (void *)sub_1DC408A1C();
  swift_bridgeObjectRelease();
  v5 = objc_msgSend(v3, sel_initWithMessage_, v4);

  a2(v5);
}

uint64_t sub_1DC16BB04()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

void sub_1DC16BB28(void *a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  void *v13;
  __int128 v14;
  __int128 v15;

  v6 = (void *)sub_1DC408A1C();
  v7 = objc_msgSend(a1, sel_objectForKey_, v6);

  if (v7)
  {
    sub_1DC409634();
    swift_unknownObjectRelease();
    sub_1DC0FA0E4(&v14, &v15);
    type metadata accessor for StockListViewController();
    v8 = swift_dynamicCast();
    MEMORY[0x1E0C80A78](v8);
    sub_1DC402E0C();
    v9 = swift_allocObject();
    *(_QWORD *)(v9 + 16) = a2;
    *(_QWORD *)(v9 + 24) = a3;
    swift_retain();
    v10 = (void *)sub_1DC402C80();
    sub_1DC402D04();
    swift_release();
    swift_release();

    v11 = swift_allocObject();
    *(_QWORD *)(v11 + 16) = a2;
    *(_QWORD *)(v11 + 24) = a3;
    swift_retain();
    v12 = (void *)sub_1DC402C80();
    sub_1DC402D34();

    swift_release();
    swift_release();
    swift_release();

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1DC16BD08()
{
  uint64_t v0;

  return sub_1DC16B828(*(void **)(v0 + 16));
}

uint64_t sub_1DC16BD20()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 16))(0);
}

void sub_1DC16BD4C(uint64_t a1)
{
  uint64_t v1;

  sub_1DC16B9C4(a1, *(void (**)(id))(v1 + 16));
}

unint64_t sub_1DC16BD54()
{
  unint64_t result;

  result = qword_1EDB400E0;
  if (!qword_1EDB400E0)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EDB400E0);
  }
  return result;
}

uint64_t sub_1DC16BDA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;

  return sub_1DC16B08C(a1, a2, a3, a4, v4[2], v4[3], v4[4], v4[5], v4[6]);
}

void sub_1DC16BDD4()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1F034C868)
  {
    sub_1DC400280();
    sub_1DC0F8190();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1F034C868);
  }
}

uint64_t sub_1DC16BE40(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1DC16B6C4(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_1DC16BE48()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DC16BE6C(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v4;

  v3 = *(uint64_t (**)(uint64_t, uint64_t))(v1 + 16);
  sub_1DC16BDD4();
  return v3(a1, a1 + *(int *)(v4 + 48));
}

uint64_t sub_1DC16BEB4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1DC16B244(a1, a2, *(void (**)(char *))(v2 + 16));
}

uint64_t sub_1DC16BEBC()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1DC16BEE0()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DC16BF1C(uint64_t a1)
{
  uint64_t v1;

  return sub_1DC16B324(a1, *(uint64_t (**)(char *))(v1 + 16), *(_QWORD *)(v1 + 24), *(uint64_t (**)(char *))(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(void (**)(char *, char *))(v1 + 56), *(_QWORD *)(v1 + 64));
}

uint64_t *sub_1DC16BF40(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1DC4073A8();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    v11 = v10[1];
    *v9 = *v10;
    v9[1] = v11;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1DC16BFD4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1DC4073A8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DC16C01C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;

  v6 = sub_1DC4073A8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1DC16C084(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;

  v6 = sub_1DC4073A8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1DC16C100(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1DC4073A8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1DC16C15C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_1DC4073A8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1DC16C1C8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC16C1D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1DC4073A8();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_1DC16C254()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC16C260(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1DC4073A8();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1DC16C2DC(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  _BYTE v9[16];

  sub_1DC16CA2C(0, &qword_1F034C8A8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = &v9[-v6];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC16C968();
  sub_1DC409B14();
  v9[15] = 0;
  sub_1DC4073A8();
  sub_1DC080808(&qword_1F034C8B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5A418], MEMORY[0x1E0D5A428]);
  sub_1DC409988();
  if (!v1)
  {
    type metadata accessor for CuratedForYouFeedGroup();
    v9[14] = 1;
    sub_1DC409964();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1DC16C438@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;

  v25 = a2;
  v29 = sub_1DC4073A8();
  v26 = *(_QWORD *)(v29 - 8);
  MEMORY[0x1E0C80A78](v29);
  v27 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC16CA2C(0, &qword_1F034C890, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v28 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v22 - v7;
  v9 = type metadata accessor for CuratedForYouFeedGroup();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC16C968();
  sub_1DC409B08();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v23 = v9;
  v24 = v6;
  v12 = (uint64_t)v11;
  v13 = v26;
  v31 = 0;
  sub_1DC080808(&qword_1F034C8A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5A418], MEMORY[0x1E0D5A430]);
  v14 = v27;
  v15 = v28;
  v16 = v29;
  sub_1DC409910();
  (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(v12, v14, v16);
  v30 = 1;
  v17 = sub_1DC4098F8();
  v19 = v18;
  (*(void (**)(char *, uint64_t))(v24 + 8))(v8, v15);
  v20 = (uint64_t *)(v12 + *(int *)(v23 + 20));
  *v20 = v17;
  v20[1] = v19;
  sub_1DC16C9AC(v12, v25);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_1DC16C9F0(v12);
}

uint64_t sub_1DC16C6B8()
{
  _BYTE *v0;

  if (*v0)
    return 0x65707974627573;
  else
    return 0x724774616D726F66;
}

uint64_t sub_1DC16C6FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC16CC2C(a1, a2);
  *a3 = result;
  return result;
}

void sub_1DC16C720(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_1DC16C72C()
{
  sub_1DC16C968();
  return sub_1DC409B20();
}

uint64_t sub_1DC16C754()
{
  sub_1DC16C968();
  return sub_1DC409B2C();
}

uint64_t sub_1DC16C77C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DC16C438(a1, a2);
}

uint64_t sub_1DC16C790(_QWORD *a1)
{
  return sub_1DC16C2DC(a1);
}

uint64_t sub_1DC16C7B8()
{
  sub_1DC080808(&qword_1F034C888, (uint64_t (*)(uint64_t))type metadata accessor for CuratedForYouFeedGroup, (uint64_t)&unk_1DC410448);
  return sub_1DC407DF8();
}

uint64_t sub_1DC16C814()
{
  sub_1DC080808(&qword_1F034C888, (uint64_t (*)(uint64_t))type metadata accessor for CuratedForYouFeedGroup, (uint64_t)&unk_1DC410448);
  return sub_1DC407DE0();
}

uint64_t sub_1DC16C854()
{
  swift_bridgeObjectRetain();
  sub_1DC408B48();
  swift_bridgeObjectRelease();
  sub_1DC408B48();
  return 0x2064657461727543;
}

uint64_t sub_1DC16C8E4()
{
  return sub_1DC080808(&qword_1EDB27D78, (uint64_t (*)(uint64_t))type metadata accessor for CuratedForYouFeedGroup, (uint64_t)&unk_1DC4103B0);
}

uint64_t sub_1DC16C910()
{
  return sub_1DC080808(&qword_1F034C878, (uint64_t (*)(uint64_t))type metadata accessor for CuratedForYouFeedGroup, (uint64_t)&unk_1DC410420);
}

uint64_t sub_1DC16C93C()
{
  return sub_1DC080808(&qword_1F034C880, (uint64_t (*)(uint64_t))type metadata accessor for CuratedForYouFeedGroup, (uint64_t)&unk_1DC4103F8);
}

unint64_t sub_1DC16C968()
{
  unint64_t result;

  result = qword_1F034C898;
  if (!qword_1F034C898)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC410574, &type metadata for CuratedForYouFeedGroup.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F034C898);
  }
  return result;
}

uint64_t sub_1DC16C9AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CuratedForYouFeedGroup();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC16C9F0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for CuratedForYouFeedGroup();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1DC16CA2C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC16C968();
    v7 = a3(a1, &type metadata for CuratedForYouFeedGroup.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t storeEnumTagSinglePayload for CuratedForYouFeedGroup.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1DC16CAD4 + 4 * byte_1DC410325[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1DC16CB08 + 4 * asc_1DC410320[v4]))();
}

uint64_t sub_1DC16CB08(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC16CB10(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC16CB18);
  return result;
}

uint64_t sub_1DC16CB24(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC16CB2CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1DC16CB30(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC16CB38(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CuratedForYouFeedGroup.CodingKeys()
{
  return &type metadata for CuratedForYouFeedGroup.CodingKeys;
}

unint64_t sub_1DC16CB58()
{
  unint64_t result;

  result = qword_1F034C8B8;
  if (!qword_1F034C8B8)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC41054C, &type metadata for CuratedForYouFeedGroup.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F034C8B8);
  }
  return result;
}

unint64_t sub_1DC16CBA0()
{
  unint64_t result;

  result = qword_1F034C8C0;
  if (!qword_1F034C8C0)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC4104BC, &type metadata for CuratedForYouFeedGroup.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F034C8C0);
  }
  return result;
}

unint64_t sub_1DC16CBE8()
{
  unint64_t result;

  result = qword_1F034C8C8;
  if (!qword_1F034C8C8)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC4104E4, &type metadata for CuratedForYouFeedGroup.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F034C8C8);
  }
  return result;
}

uint64_t sub_1DC16CC2C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x724774616D726F66 && a2 == 0xEB0000000070756FLL;
  if (v2 || (sub_1DC4099E8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65707974627573 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1DC4099E8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1DC16CD34(id *a1, char a2, uint64_t a3, char *a4)
{
  _QWORD *v4;
  _QWORD *v5;
  double v10;
  double v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char *v15;
  double v16;
  double v17;
  double v18;
  double v19;
  char *v20;
  char *v21;
  id v22;
  id v23;
  void *v24;
  double v25;
  double v26;
  void *v27;
  double v28;
  double v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  double v36;
  double v37;
  double v38;
  double v39;
  char *v40;
  id v41;
  id v42;
  id v43;
  void *v44;
  double v45;
  double v46;
  void *v47;
  double v48;
  double v49;
  void *v50;
  double v51;
  double v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  uint64_t v56;
  void (*v57)(id, uint64_t, uint64_t);
  void *v58;
  id v59;
  id v60;
  void *v61;
  id v62;
  id v63;
  void *v64;
  id v65;
  id v66;
  void *v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  void *v73;
  void *v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;
  void *v78;
  uint64_t v79;
  id v80;
  _QWORD *v81;
  uint64_t v82;
  uint64_t v83;
  void *v84;
  uint64_t v85;
  id v86;
  id v87;
  _QWORD *v88;
  uint64_t v89;
  uint64_t v90;
  void *v91;
  double v92;
  double v93;
  char v94;
  char **v95;
  char **v96;
  int v97;
  char *v98;
  unsigned __int8 v99;
  id v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  void *v104;
  id v105;
  id v106;
  void *v107;
  id v108;
  id v109;
  id v110;
  id v111;
  unsigned __int8 v112;
  void *v113;
  void *v114;
  id v115;
  double v116;
  double v117;
  double v118;
  double v119;
  void *v120;
  id v121;
  double v122;
  double v123;
  double v124;
  double v125;
  void *v126;
  CGFloat v127;
  CGFloat v128;
  CGFloat v129;
  CGFloat v130;
  id v131;
  double v132;
  double v133;
  double v134;
  double v135;
  double v137;
  double v138;
  double v139;
  double v140;
  uint64_t v141;
  double v142;
  double v143;
  double v144;
  double v145;
  double v146;
  id v147;
  id v148;
  void *v149;
  _QWORD *v150;
  uint64_t v151;
  uint64_t v152;
  id v153;
  uint64_t v154;
  id v155;
  void *v156;
  CGFloat v157;
  CGFloat v158;
  CGFloat v159;
  CGFloat v160;
  uint64_t v161;
  unsigned int v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  id *v166;
  char *v167;
  uint64_t v168;
  double v169;
  double v170;
  CGFloat v171;
  CGFloat v172;
  double v173;
  double v174;
  CGFloat v175;
  CGFloat v176;
  char *v177;
  uint64_t v178;
  char *v179;
  _QWORD v180[3];
  uint64_t v181;
  _BYTE v182[32];
  _BYTE v183[144];
  uint64_t v184[18];
  _QWORD v185[18];
  _QWORD v186[2];
  CGRect v187;
  CGRect v188;
  CGRect v189;
  CGRect v190;

  v5 = v4;
  v10 = *(double *)(a3 + 16);
  v11 = *(double *)(a3 + 24);
  v159 = *(double *)(a3 + 8);
  v160 = *(double *)a3;
  sub_1DC409280();
  objc_msgSend(a4, sel_setCenter_);
  v157 = v11;
  v158 = v10;
  objc_msgSend(a4, sel_setBounds_, 0.0, 0.0, v10, v11);
  sub_1DC083594(0, (unint64_t *)&qword_1EDB400D0, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1DC4105D0;
  *(_QWORD *)(v12 + 32) = swift_getKeyPath();
  *(_QWORD *)(v12 + 40) = swift_getKeyPath();
  *(_QWORD *)(v12 + 48) = swift_getKeyPath();
  *(_QWORD *)(v12 + 56) = swift_getKeyPath();
  *(_QWORD *)(v12 + 64) = swift_getKeyPath();
  *(_QWORD *)(v12 + 72) = swift_getKeyPath();
  *(_QWORD *)(v12 + 80) = swift_getKeyPath();
  *(_QWORD *)(v12 + 88) = swift_getKeyPath();
  v185[0] = v12;
  sub_1DC408CF8();
  if (v12 >> 62)
  {
    swift_bridgeObjectRetain();
    v13 = sub_1DC409850();
    swift_bridgeObjectRelease();
  }
  else
  {
    v13 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v162 = a2 & 1;
  if (v13)
    v14 = sub_1DC368124(v12);
  else
    v14 = MEMORY[0x1E0DEE9E8];
  v166 = a1;
  swift_bridgeObjectRelease();
  v150 = v5;
  sub_1DC16E178(7, v14, (CGFloat *)a3, a4);
  swift_bridgeObjectRelease();
  v15 = *(char **)&a4[OBJC_IVAR____TtC8StocksUI11WelcomeView_titleGroup];
  v16 = *(double *)(a3 + 128);
  v17 = *(double *)(a3 + 136);
  v18 = *(double *)(a3 + 168);
  v19 = *(double *)(a3 + 176);
  v151 = *(_QWORD *)(a3 + 184);
  objc_msgSend(v15, sel_setBounds_, 0.0, 0.0, *(double *)(a3 + 80), *(double *)(a3 + 88));
  v20 = *(char **)&a4[OBJC_IVAR____TtC8StocksUI11WelcomeView_bullet1];
  v138 = *(double *)(a3 + 288);
  v137 = *(double *)(a3 + 296);
  v140 = *(double *)(a3 + 320);
  v139 = *(double *)(a3 + 328);
  v171 = *(double *)(a3 + 344);
  v172 = *(double *)(a3 + 336);
  v169 = *(double *)(a3 + 360);
  v170 = *(double *)(a3 + 352);
  objc_msgSend(v20, sel_setBounds_, 0.0, 0.0, *(double *)(a3 + 248), *(double *)(a3 + 256));
  v21 = *(char **)&a4[OBJC_IVAR____TtC8StocksUI11WelcomeView_bullet2];
  v143 = *(double *)(a3 + 424);
  v142 = *(double *)(a3 + 432);
  v147 = *(id *)(a3 + 456);
  v145 = *(double *)(a3 + 464);
  v175 = *(double *)(a3 + 480);
  v176 = *(double *)(a3 + 472);
  v173 = *(double *)(a3 + 496);
  v174 = *(double *)(a3 + 488);
  objc_msgSend(v21, sel_setBounds_, 0.0, 0.0, *(double *)(a3 + 384), *(double *)(a3 + 392));
  v156 = *(void **)&a4[OBJC_IVAR____TtC8StocksUI11WelcomeView_footer];
  objc_msgSend(v156, sel_setBounds_, 0.0, 0.0, *(double *)(a3 + 664), *(double *)(a3 + 672));
  v154 = OBJC_IVAR____TtCC8StocksUI11WelcomeView10TitleGroup_appIcon;
  v22 = *(id *)&v15[OBJC_IVAR____TtCC8StocksUI11WelcomeView10TitleGroup_appIcon];
  sub_1DC409280();
  objc_msgSend(v22, sel_setCenter_);
  objc_msgSend(v22, sel_setBounds_, 0.0, 0.0, v16, v17);

  v167 = v15;
  v165 = OBJC_IVAR____TtCC8StocksUI11WelcomeView10TitleGroup_welcomeLabel;
  v23 = *(id *)&v15[OBJC_IVAR____TtCC8StocksUI11WelcomeView10TitleGroup_welcomeLabel];
  sub_1DC409280();
  objc_msgSend(v23, sel_setCenter_);
  objc_msgSend(v23, sel_setBounds_, 0.0, 0.0, v18, v19);

  v24 = *(void **)&a4[OBJC_IVAR____TtC8StocksUI11WelcomeView_scrollView];
  v25 = *(double *)(a3 + 48);
  v26 = *(double *)(a3 + 56);
  sub_1DC409280();
  objc_msgSend(v24, sel_setCenter_);
  v155 = v24;
  objc_msgSend(v24, sel_setBounds_, 0.0, 0.0, v25, v26);
  v27 = *(void **)&a4[OBJC_IVAR____TtC8StocksUI11WelcomeView_activityIndicator];
  v28 = *(double *)(a3 + 208);
  v29 = *(double *)(a3 + 216);
  sub_1DC409280();
  objc_msgSend(v27, sel_setCenter_);
  v153 = v27;
  objc_msgSend(v27, sel_setBounds_, 0.0, 0.0, v28, v29);
  v152 = OBJC_IVAR____TtCC8StocksUI11WelcomeView10BulletView_image;
  v30 = *(id *)&v20[OBJC_IVAR____TtCC8StocksUI11WelcomeView10BulletView_image];
  sub_1DC409280();
  objc_msgSend(v30, sel_setCenter_);
  objc_msgSend(v30, sel_setBounds_, 0.0, 0.0, v138, v137);

  v164 = OBJC_IVAR____TtCC8StocksUI11WelcomeView10BulletView_title;
  v31 = *(id *)&v20[OBJC_IVAR____TtCC8StocksUI11WelcomeView10BulletView_title];
  sub_1DC409280();
  objc_msgSend(v31, sel_setCenter_);
  objc_msgSend(v31, sel_setBounds_, 0.0, 0.0, v140, v139);

  v178 = OBJC_IVAR____TtCC8StocksUI11WelcomeView10BulletView_blurb;
  v179 = v20;
  v32 = *(id *)&v20[OBJC_IVAR____TtCC8StocksUI11WelcomeView10BulletView_blurb];
  sub_1DC409280();
  objc_msgSend(v32, sel_setCenter_);
  objc_msgSend(v32, sel_setBounds_, 0.0, 0.0, v170, v169);

  v141 = OBJC_IVAR____TtCC8StocksUI11WelcomeView10BulletView_image;
  v33 = *(id *)&v21[OBJC_IVAR____TtCC8StocksUI11WelcomeView10BulletView_image];
  sub_1DC409280();
  objc_msgSend(v33, sel_setCenter_);
  objc_msgSend(v33, sel_setBounds_, 0.0, 0.0, v143, v142);

  v161 = OBJC_IVAR____TtCC8StocksUI11WelcomeView10BulletView_title;
  v34 = *(id *)&v21[OBJC_IVAR____TtCC8StocksUI11WelcomeView10BulletView_title];
  sub_1DC409280();
  objc_msgSend(v34, sel_setCenter_);
  objc_msgSend(v34, sel_setBounds_, 0.0, 0.0, *(double *)&v147, v145);

  v177 = v21;
  v163 = OBJC_IVAR____TtCC8StocksUI11WelcomeView10BulletView_blurb;
  v35 = *(id *)&v21[OBJC_IVAR____TtCC8StocksUI11WelcomeView10BulletView_blurb];
  sub_1DC409280();
  objc_msgSend(v35, sel_setCenter_);
  objc_msgSend(v35, sel_setBounds_, 0.0, 0.0, v174, v173);

  sub_1DC16EA60(a3 + 504, (uint64_t)v183, &qword_1F034C970, (uint64_t)&type metadata for WelcomeViewBulletLayoutAttributes);
  sub_1DC16EA60((uint64_t)v183, (uint64_t)v185, &qword_1F034C970, (uint64_t)&type metadata for WelcomeViewBulletLayoutAttributes);
  if (sub_1DC16EA44((uint64_t)v185) != 1)
  {
    v36 = *(double *)&v185[7];
    v37 = *(double *)&v185[8];
    v38 = *(double *)&v185[11];
    v39 = *(double *)&v185[12];
    v144 = *(double *)&v185[16];
    v146 = *(double *)&v185[15];
    v40 = *(char **)&a4[OBJC_IVAR____TtC8StocksUI11WelcomeView_bullet3];
    objc_msgSend(v40, sel_setBounds_, 0.0, 0.0, *(double *)&v185[2], *(double *)&v185[3]);
    v41 = *(id *)&v40[OBJC_IVAR____TtCC8StocksUI11WelcomeView10BulletView_image];
    sub_1DC409280();
    objc_msgSend(v41, sel_setCenter_);
    objc_msgSend(v41, sel_setBounds_, 0.0, 0.0, v36, v37);

    v42 = *(id *)&v40[OBJC_IVAR____TtCC8StocksUI11WelcomeView10BulletView_title];
    sub_1DC409280();
    objc_msgSend(v42, sel_setCenter_);
    objc_msgSend(v42, sel_setBounds_, 0.0, 0.0, v38, v39);

    v43 = *(id *)&v40[OBJC_IVAR____TtCC8StocksUI11WelcomeView10BulletView_blurb];
    sub_1DC409280();
    objc_msgSend(v43, sel_setCenter_);
    objc_msgSend(v43, sel_setBounds_, 0.0, 0.0, v146, v144);

  }
  v44 = *(void **)&a4[OBJC_IVAR____TtC8StocksUI11WelcomeView_privacyLink];
  v149 = v44;
  v45 = *(double *)(a3 + 768);
  v46 = *(double *)(a3 + 776);
  sub_1DC409280();
  objc_msgSend(v44, sel_setCenter_);
  objc_msgSend(v44, sel_setBounds_, 0.0, 0.0, v45, v46);
  v47 = *(void **)&a4[OBJC_IVAR____TtC8StocksUI11WelcomeView_privacyIcon];
  v148 = v47;
  v48 = *(double *)(a3 + 736);
  v49 = *(double *)(a3 + 744);
  sub_1DC409280();
  objc_msgSend(v47, sel_setCenter_);
  objc_msgSend(v47, sel_setBounds_, 0.0, 0.0, v48, v49);
  v50 = *(void **)&a4[OBJC_IVAR____TtC8StocksUI11WelcomeView_continueButton];
  v51 = *(double *)(a3 + 704);
  v52 = *(double *)(a3 + 712);
  sub_1DC409280();
  objc_msgSend(v50, sel_setCenter_);
  objc_msgSend(v50, sel_setBounds_, 0.0, 0.0, v51, v52);
  v53 = v150[5];
  v54 = v150[6];
  __swift_project_boxed_opaque_existential_1(v150 + 2, v53);
  v55 = objc_msgSend(a4, sel_traitCollection);
  v56 = *(_QWORD *)(v54 + 8);
  v57 = *(void (**)(id, uint64_t, uint64_t))(v56 + 8);
  v184[3] = v53;
  v184[4] = v54;
  __swift_allocate_boxed_opaque_existential_1(v184);
  v57(v55, v53, v56);

  (*(void (**)(_QWORD *__return_ptr, _QWORD, uint64_t, uint64_t))(v54 + 16))(v180, v162, v53, v54);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v184);
  objc_msgSend(*(id *)&v167[v165], sel_setAttributedText_, v151);
  v58 = *(void **)&v20[v164];
  __swift_project_boxed_opaque_existential_1(v180, v181);
  v59 = v58;
  v60 = sub_1DC356924();
  objc_msgSend(v59, sel_setAttributedText_, v60);

  v61 = *(void **)&v20[v178];
  __swift_project_boxed_opaque_existential_1(v180, v181);
  v62 = v61;
  v63 = sub_1DC356C24();
  objc_msgSend(v62, sel_setAttributedText_, v63);

  v64 = *(void **)&v177[v161];
  __swift_project_boxed_opaque_existential_1(v180, v181);
  v65 = v64;
  v66 = sub_1DC356924();
  objc_msgSend(v65, sel_setAttributedText_, v66);

  v67 = *(void **)&v177[v163];
  __swift_project_boxed_opaque_existential_1(v180, v181);
  v68 = v67;
  v69 = sub_1DC356C24();
  objc_msgSend(v68, sel_setAttributedText_, v69);

  __swift_project_boxed_opaque_existential_1(v180, v181);
  v70 = sub_1DC356F3C();
  objc_msgSend(v50, sel_setAttributedTitle_forState_, v70, 0);

  v71 = objc_msgSend(v166[20], sel_imageWithRenderingMode_, 2);
  objc_msgSend(v148, sel_setImage_, v71);

  objc_msgSend(v148, sel_setIsAccessibilityElement_, 1);
  v72 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  sub_1DC3FFC80();

  v73 = (void *)sub_1DC408A1C();
  swift_bridgeObjectRelease();
  objc_msgSend(v148, sel_setAccessibilityLabel_, v73, 0x80000001DC435840);

  __swift_project_boxed_opaque_existential_1(v180, v181);
  v74 = (void *)sub_1DC357248(v166[19]);
  objc_msgSend(v149, sel_setAttributedText_, v74);

  v75 = __swift_project_boxed_opaque_existential_1(v180, v181);
  v76 = *(_QWORD *)(*v75 + 40);
  v77 = *(_QWORD *)(*v75 + 48);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(*v75 + 16), v76);
  v78 = (void *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)(v77 + 16) + 56))(v76);
  objc_msgSend(a4, sel_setBackgroundColor_, v78);

  v79 = qword_1F034ADD0;
  v80 = *(id *)&v167[v154];
  if (v79 != -1)
    swift_once();
  objc_msgSend(v80, sel_setImage_, qword_1F0368900);

  objc_msgSend(*(id *)&v167[v165], sel_setNumberOfLines_, 0);
  v81 = __swift_project_boxed_opaque_existential_1(v180, v181);
  v82 = *(_QWORD *)(*v81 + 40);
  v83 = *(_QWORD *)(*v81 + 48);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(*v81 + 16), v82);
  v84 = (void *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)(v83 + 16) + 48))(v82);
  objc_msgSend(v153, sel_setColor_, v84);

  v85 = *__swift_project_boxed_opaque_existential_1(v180, v181);
  v86 = *(id *)&v20[v152];
  objc_msgSend(v86, sel_setContentMode_, 4);
  if (qword_1F034ADD8 != -1)
    swift_once();
  v87 = objc_msgSend((id)qword_1F0368908, sel_imageWithConfiguration_, *(_QWORD *)(v85 + 128));
  objc_msgSend(v86, sel_setImage_, v87);

  objc_msgSend(*(id *)&v20[v164], sel_setNumberOfLines_, 0);
  objc_msgSend(*(id *)&v20[v178], sel_setNumberOfLines_, 0);
  __swift_project_boxed_opaque_existential_1(v180, v181);
  sub_1DC357DC4(v50);
  v88 = __swift_project_boxed_opaque_existential_1(v180, v181);
  v89 = *(_QWORD *)(*v88 + 40);
  v90 = *(_QWORD *)(*v88 + 48);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(*v88 + 16), v89);
  v91 = (void *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)(v90 + 16) + 104))(v89);
  objc_msgSend(v148, sel_setTintColor_, v91);

  sub_1DC35DEEC(v149);
  __swift_project_boxed_opaque_existential_1(v180, v181);
  objc_msgSend(v155, sel_contentSize);
  v93 = v92;
  v187.origin.y = v159;
  v187.origin.x = v160;
  v187.size.height = v157;
  v187.size.width = v158;
  v94 = CGRectGetHeight(v187) < v93;
  sub_1DC357ED4(v156, v94);
  sub_1DC16EA60((uint64_t)(v166 + 13), (uint64_t)v182, &qword_1F034C978, (uint64_t)&type metadata for WelcomeModel.Bullet);
  sub_1DC16EA60((uint64_t)v182, (uint64_t)v186, &qword_1F034C978, (uint64_t)&type metadata for WelcomeModel.Bullet);
  v95 = &selRef_scrollViewDidScroll_;
  v96 = &selRef_scrollViewDidScroll_;
  if (v186[1] && (v97 = *(unsigned __int8 *)v166, v97 != 2))
  {
    v102 = *(_QWORD *)&a4[OBJC_IVAR____TtC8StocksUI11WelcomeView_bullet3];
    v103 = OBJC_IVAR____TtCC8StocksUI11WelcomeView10BulletView_title;
    v104 = *(void **)(v102 + OBJC_IVAR____TtCC8StocksUI11WelcomeView10BulletView_title);
    __swift_project_boxed_opaque_existential_1(v180, v181);
    v105 = v104;
    v106 = sub_1DC356924();
    objc_msgSend(v105, sel_setAttributedText_, v106);

    v168 = OBJC_IVAR____TtCC8StocksUI11WelcomeView10BulletView_blurb;
    v107 = *(void **)(v102 + OBJC_IVAR____TtCC8StocksUI11WelcomeView10BulletView_blurb);
    __swift_project_boxed_opaque_existential_1(v180, v181);
    v108 = v107;
    v95 = &selRef_scrollViewDidScroll_;
    v109 = sub_1DC356C24();
    objc_msgSend(v108, sel_setAttributedText_, v109);

    __swift_project_boxed_opaque_existential_1(v180, v181);
    v110 = *(id *)&v177[v141];
    sub_1DC357B3C(v110, v97 & 1);

    objc_msgSend(*(id *)&v177[v161], sel_setNumberOfLines_, 0);
    objc_msgSend(*(id *)&v177[v163], sel_setNumberOfLines_, 0);
    __swift_project_boxed_opaque_existential_1(v180, v181);
    v111 = *(id *)(v102 + OBJC_IVAR____TtCC8StocksUI11WelcomeView10BulletView_image);
    v112 = v97;
    v101 = v163;
    sub_1DC357C1C(v111, v112);

    v113 = *(void **)(v102 + v103);
    v98 = v177;
    v96 = &selRef_scrollViewDidScroll_;
    objc_msgSend(v113, sel_setNumberOfLines_, 0);
    objc_msgSend(*(id *)(v102 + v168), sel_setNumberOfLines_, 0);
  }
  else
  {
    __swift_project_boxed_opaque_existential_1(v180, v181);
    v98 = v177;
    v99 = *(_BYTE *)v166;
    v100 = *(id *)&v177[v141];
    sub_1DC357C1C(v100, v99);

    objc_msgSend(*(id *)&v177[v161], sel_setNumberOfLines_, 0);
    v101 = v163;
    objc_msgSend(*(id *)&v177[v163], sel_setNumberOfLines_, 0);
    v102 = *(_QWORD *)&a4[OBJC_IVAR____TtC8StocksUI11WelcomeView_bullet3];
    objc_msgSend(*(id *)(v102 + OBJC_IVAR____TtCC8StocksUI11WelcomeView10BulletView_image), sel_setHidden_, 1);
    objc_msgSend(*(id *)(v102 + OBJC_IVAR____TtCC8StocksUI11WelcomeView10BulletView_title), sel_setHidden_, 1);
    objc_msgSend(*(id *)(v102 + OBJC_IVAR____TtCC8StocksUI11WelcomeView10BulletView_blurb), sel_setHidden_, 1);
  }
  v114 = *(void **)&v179[v178];
  objc_msgSend(v114, sel_sizeToFit);
  v115 = v114;
  objc_msgSend(v115, sel_frame);
  v188.origin.y = v171;
  v188.origin.x = v172;
  v188.size.height = v169;
  v188.size.width = v170;
  CGRectGetWidth(v188);
  sub_1DC409298();
  v117 = v116;
  v119 = v118;
  sub_1DC409280();
  objc_msgSend(v115, v95[217]);
  objc_msgSend(v115, v96[219], 0.0, 0.0, v117, v119);

  v120 = *(void **)&v98[v101];
  objc_msgSend(v120, sel_sizeToFit);
  v121 = v120;
  objc_msgSend(v121, sel_frame);
  v189.origin.y = v175;
  v189.origin.x = v176;
  v189.size.height = v173;
  v189.size.width = v174;
  CGRectGetWidth(v189);
  sub_1DC409298();
  v123 = v122;
  v125 = v124;
  sub_1DC409280();
  objc_msgSend(v121, v95[217]);
  objc_msgSend(v121, v96[219], 0.0, 0.0, v123, v125);

  v126 = *(void **)(v102 + OBJC_IVAR____TtCC8StocksUI11WelcomeView10BulletView_blurb);
  objc_msgSend(v126, sel_sizeToFit);
  sub_1DC16EA60((uint64_t)v183, (uint64_t)v184, &qword_1F034C970, (uint64_t)&type metadata for WelcomeViewBulletLayoutAttributes);
  if (sub_1DC16EA44((uint64_t)v184) != 1)
  {
    v127 = *(double *)&v184[13];
    v128 = *(double *)&v184[14];
    v129 = *(double *)&v184[15];
    v130 = *(double *)&v184[16];
    v131 = v126;
    objc_msgSend(v131, sel_frame);
    v190.origin.x = v127;
    v190.origin.y = v128;
    v190.size.width = v129;
    v190.size.height = v130;
    CGRectGetWidth(v190);
    sub_1DC409298();
    v133 = v132;
    v135 = v134;
    sub_1DC409280();
    objc_msgSend(v131, v95[217]);
    objc_msgSend(v131, v96[219], 0.0, 0.0, v133, v135);

  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v180);
}

id sub_1DC16E178(char a1, uint64_t a2, CGFloat *a3, char *a4)
{
  _QWORD *v4;
  uint64_t KeyPath;
  char v10;
  CGFloat v11;
  double v12;
  void *v13;
  CGFloat v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  char v18;
  double v19;
  void *v20;
  uint64_t v21;
  char v22;
  double v23;
  void *v24;
  uint64_t v25;
  char v26;
  double tx;
  void *v28;
  uint64_t v29;
  char v30;
  void *v31;
  uint64_t v32;
  char v33;
  void *v34;
  CGFloat height;
  CGFloat v36;
  CGFloat v37;
  CGFloat v38;
  CGFloat v39;
  CGFloat v40;
  CGFloat v41;
  double Width;
  uint64_t v43;
  uint64_t v44;
  id v45;
  char *v46;
  uint64_t v47;
  void *v48;
  void (*v49)(id, uint64_t, uint64_t);
  uint64_t v50;
  void *v51;
  double v52;
  double v53;
  char v54;
  uint64_t v55;
  char v56;
  id result;
  double v58;
  CGRect rect;
  double v60;
  double v61;
  double v62;
  uint64_t v63[5];
  _BYTE v64[144];
  _BYTE v65[144];
  _BYTE v66[144];
  CGAffineTransform v67;
  CGRect v68;
  CGRect v69;
  CGRect v70;

  KeyPath = swift_getKeyPath();
  v10 = sub_1DC151764(KeyPath, a2);
  swift_release();
  if ((v10 & 1) != 0)
  {
    v12 = a3[12];
    v11 = a3[13];
    sub_1DC409280();
    v13 = *(void **)&a4[OBJC_IVAR____TtC8StocksUI11WelcomeView_titleGroup];
    if ((a1 & 1) != 0)
    {
      objc_msgSend(*(id *)&a4[OBJC_IVAR____TtC8StocksUI11WelcomeView_titleGroup], sel_setCenter_);
      *(_QWORD *)&v14 = a1 & 2;
      if ((a1 & 2) == 0)
      {
LABEL_4:
        if ((a1 & 4) == 0)
          goto LABEL_10;
        goto LABEL_9;
      }
    }
    else
    {
      *(_QWORD *)&v14 = a1 & 2;
      if ((a1 & 2) == 0)
        goto LABEL_4;
    }
    objc_msgSend(v13, sel_setAlpha_, v12);
    if ((a1 & 4) != 0)
    {
LABEL_9:
      CGAffineTransformMakeScale(&v67, v11, v11);
      objc_msgSend(v13, sel_setTransform_, &v67);
    }
  }
  else
  {
    *(_QWORD *)&v14 = a1 & 2;
  }
LABEL_10:
  v15 = swift_getKeyPath();
  v16 = sub_1DC151764(v15, a2);
  swift_release();
  if ((v16 & 1) != 0 && v14 != 0.0)
    objc_msgSend(*(id *)(*(_QWORD *)&a4[OBJC_IVAR____TtC8StocksUI11WelcomeView_titleGroup]+ OBJC_IVAR____TtCC8StocksUI11WelcomeView10TitleGroup_appIcon), sel_setAlpha_, a3[18]);
  v17 = swift_getKeyPath();
  v18 = sub_1DC151764(v17, a2);
  swift_release();
  if ((v18 & 1) != 0)
  {
    v19 = a3[33];
    sub_1DC409280();
    v20 = *(void **)&a4[OBJC_IVAR____TtC8StocksUI11WelcomeView_bullet1];
    if ((a1 & 1) != 0)
      objc_msgSend(*(id *)&a4[OBJC_IVAR____TtC8StocksUI11WelcomeView_bullet1], sel_setCenter_);
    if (v14 != 0.0)
      objc_msgSend(v20, sel_setAlpha_, v19);
  }
  v21 = swift_getKeyPath();
  v22 = sub_1DC151764(v21, a2);
  swift_release();
  if ((v22 & 1) != 0)
  {
    v23 = a3[50];
    sub_1DC409280();
    v24 = *(void **)&a4[OBJC_IVAR____TtC8StocksUI11WelcomeView_bullet2];
    if ((a1 & 1) != 0)
      objc_msgSend(*(id *)&a4[OBJC_IVAR____TtC8StocksUI11WelcomeView_bullet2], sel_setCenter_);
    if (v14 != 0.0)
      objc_msgSend(v24, sel_setAlpha_, v23);
  }
  v25 = swift_getKeyPath();
  v26 = sub_1DC151764(v25, a2);
  swift_release();
  if ((v26 & 1) != 0)
  {
    sub_1DC16EA60((uint64_t)(a3 + 63), (uint64_t)v66, &qword_1F034C970, (uint64_t)&type metadata for WelcomeViewBulletLayoutAttributes);
    sub_1DC16EA60((uint64_t)v66, (uint64_t)&v67, &qword_1F034C970, (uint64_t)&type metadata for WelcomeViewBulletLayoutAttributes);
    if (sub_1DC16EA44((uint64_t)&v67) != 1)
    {
      tx = v67.tx;
      sub_1DC409280();
      v28 = *(void **)&a4[OBJC_IVAR____TtC8StocksUI11WelcomeView_bullet3];
      if ((a1 & 1) != 0)
        objc_msgSend(*(id *)&a4[OBJC_IVAR____TtC8StocksUI11WelcomeView_bullet3], sel_setCenter_);
      if (v14 != 0.0)
        objc_msgSend(v28, sel_setAlpha_, tx);
    }
  }
  v29 = swift_getKeyPath();
  v30 = sub_1DC151764(v29, a2);
  swift_release();
  if ((v30 & 1) != 0)
  {
    sub_1DC409280();
    v31 = *(void **)&a4[OBJC_IVAR____TtC8StocksUI11WelcomeView_footer];
    if ((a1 & 1) != 0)
      objc_msgSend(v31, sel_setCenter_);
    if (v14 != 0.0)
      objc_msgSend(v31, sel_setAlpha_, a3[85]);
  }
  v32 = swift_getKeyPath();
  v33 = sub_1DC151764(v32, a2);
  swift_release();
  if ((v33 & 1) != 0)
  {
    v34 = *(void **)&a4[OBJC_IVAR____TtC8StocksUI11WelcomeView_scrollView];
    v58 = a3[84];
    sub_1DC16EA60((uint64_t)(a3 + 63), (uint64_t)v64, &qword_1F034C970, (uint64_t)&type metadata for WelcomeViewBulletLayoutAttributes);
    sub_1DC16EA60((uint64_t)v64, (uint64_t)v65, &qword_1F034C970, (uint64_t)&type metadata for WelcomeViewBulletLayoutAttributes);
    *(_QWORD *)&rect.origin.y = a2;
    rect.size.width = v14;
    if (sub_1DC16EA44((uint64_t)v65) == 1)
    {
      height = a3[46];
      v36 = a3[47];
      v37 = a3[48];
      v38 = a3[49];
    }
    else
    {
      sub_1DC16EA60((uint64_t)v64, (uint64_t)&rect.size.height, &qword_1F034C970, (uint64_t)&type metadata for WelcomeViewBulletLayoutAttributes);
      height = rect.size.height;
      v36 = v60;
      v37 = v61;
      v38 = v62;
    }
    v39 = a3[1];
    rect.origin.x = *a3;
    v68.origin.x = rect.origin.x;
    v40 = a3[2];
    v41 = a3[3];
    v68.origin.y = v39;
    v68.size.width = v40;
    v68.size.height = v41;
    Width = CGRectGetWidth(v68);
    v69.origin.x = height;
    v69.origin.y = v36;
    v69.size.width = v37;
    v69.size.height = v38;
    objc_msgSend(v34, sel_setContentSize_, Width, v58 + CGRectGetMaxY(v69) + 10.0);
    v43 = v4[5];
    v44 = v4[6];
    __swift_project_boxed_opaque_existential_1(v4 + 2, v43);
    v45 = objc_msgSend(a4, sel_traitCollection);
    v46 = a4;
    v47 = *(_QWORD *)(v44 + 8);
    v48 = v34;
    v49 = *(void (**)(id, uint64_t, uint64_t))(v47 + 8);
    v63[3] = v43;
    v63[4] = v44;
    __swift_allocate_boxed_opaque_existential_1(v63);
    v50 = v47;
    a4 = v46;
    v49(v45, v43, v50);

    (*(void (**)(CGFloat *__return_ptr, _QWORD, uint64_t, uint64_t))(v44 + 16))(&rect.size.height, 0, v43, v44);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v63);
    __swift_project_boxed_opaque_existential_1(&rect.size.height, *(uint64_t *)&v62);
    v51 = *(void **)&v46[OBJC_IVAR____TtC8StocksUI11WelcomeView_footer];
    objc_msgSend(v48, sel_contentSize);
    v53 = v52;
    v70.origin.x = rect.origin.x;
    v70.origin.y = v39;
    v70.size.width = v40;
    v70.size.height = v41;
    v54 = CGRectGetHeight(v70) < v53;
    sub_1DC357ED4(v51, v54);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&rect.size.height);
    a2 = *(_QWORD *)&rect.origin.y;
    v14 = rect.size.width;
  }
  v55 = swift_getKeyPath();
  v56 = sub_1DC151764(v55, a2);
  result = (id)swift_release();
  if ((v56 & 1) != 0 && v14 != 0.0)
    return objc_msgSend(*(id *)&a4[OBJC_IVAR____TtC8StocksUI11WelcomeView_activityIndicator], sel_setAlpha_, a3[28]);
  return result;
}

void sub_1DC16E78C(uint64_t a1, double *a2, char *a3)
{
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  double v10;
  double v11;
  id v12;
  double v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  void (*v19)(id, uint64_t, uint64_t);
  id v20;
  void *v21;
  id v22;
  void *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[5];
  uint64_t v28[5];
  CGRect v29;

  v6 = sub_1DC404390();
  v25 = *(_QWORD *)(v6 - 8);
  v26 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1DC4040D8();
  MEMORY[0x1E0C80A78](v9);
  v10 = *a2;
  v11 = a2[1];
  v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC37F8]), sel_initForTextStyle_, *MEMORY[0x1E0DC4A88]);
  objc_msgSend(v12, sel_scaledValueForValue_, 175.0);
  v14 = v13;

  if (v14 > 225.0)
    v14 = 225.0;
  sub_1DC407E4C();
  v16 = v3[5];
  v15 = v3[6];
  __swift_project_boxed_opaque_existential_1(v3 + 2, v16);
  v17 = objc_msgSend(a3, sel_traitCollection);
  v18 = *(_QWORD *)(v15 + 8);
  v19 = *(void (**)(id, uint64_t, uint64_t))(v18 + 8);
  v28[3] = v16;
  v28[4] = v15;
  __swift_allocate_boxed_opaque_existential_1(v28);
  v19(v17, v16, v18);

  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v15 + 24))(v27, v16, v15);
  v20 = objc_allocWithZone((Class)sub_1DC406DA8());
  v21 = (void *)sub_1DC406D9C();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
  v22 = v21;
  objc_msgSend(a3, sel_frame);
  objc_msgSend(v22, sel_setFrame_, 0.0, v11 - v14 - CGRectGetMinY(v29), v10, v14);

  (*(void (**)(char *, _QWORD, uint64_t))(v25 + 104))(v8, *MEMORY[0x1E0DB6F78], v26);
  sub_1DC406D90();
  v23 = *(void **)&a3[OBJC_IVAR____TtC8StocksUI11WelcomeView_errorView];
  *(_QWORD *)&a3[OBJC_IVAR____TtC8StocksUI11WelcomeView_errorView] = v22;
  v24 = v22;
  sub_1DC299708(v23);

  objc_msgSend(*(id *)&a3[OBJC_IVAR____TtC8StocksUI11WelcomeView_activityIndicator], sel_setHidden_, 1);
}

uint64_t type metadata accessor for WelcomeViewRenderer()
{
  return objc_opt_self();
}

uint64_t sub_1DC16EA44(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 136))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_1DC16EA60(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4)
{
  uint64_t v6;

  sub_1DC083594(0, a3, a4, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t type metadata accessor for ManageWatchlistsBlueprintModifierFactory()
{
  return objc_opt_self();
}

uint64_t sub_1DC16EADC()
{
  return sub_1DC080808((unint64_t *)&unk_1F0350F30, (uint64_t (*)(uint64_t))type metadata accessor for ManageWatchlistsModel, (uint64_t)&unk_1DC423338);
}

uint64_t sub_1DC16EB08(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v3 = type metadata accessor for ManageWatchlistsReloadBlueprintModifier();
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (uint64_t *)((char *)&v12 - v7);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)v1 + 16), *(_QWORD *)(*(_QWORD *)v1 + 40));
  v9 = sub_1DC400ACC();
  sub_1DC0990BC(a1, (uint64_t)v8 + *(int *)(v3 + 24), type metadata accessor for ManageWatchlistsContentMode);
  *v8 = 0x64616F6C6552;
  v8[1] = 0xE600000000000000;
  v8[2] = v9;
  sub_1DC0990BC((uint64_t)v8, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for ManageWatchlistsReloadBlueprintModifier);
  sub_1DC16EFB8();
  swift_allocObject();
  sub_1DC080808(&qword_1F034CA90, (uint64_t (*)(uint64_t))type metadata accessor for ManageWatchlistsReloadBlueprintModifier, (uint64_t)&unk_1DC4324B8);
  v10 = sub_1DC40499C();
  sub_1DC0926D8((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for ManageWatchlistsReloadBlueprintModifier);
  return v10;
}

uint64_t sub_1DC16EC58()
{
  sub_1DC16EFB8();
  swift_allocObject();
  sub_1DC16F058();
  swift_retain();
  return sub_1DC40499C();
}

uint64_t sub_1DC16ECE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  v6 = type metadata accessor for ManageWatchlistsMoveWatchlistBlueprintModifier();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v17 - v10;
  v13 = (char *)&v17 + *(int *)(v12 + 20) - v10;
  v14 = sub_1DC40124C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v13, a1, v14);
  strcpy(v11, "MoveWatchlist");
  *((_WORD *)v11 + 7) = -4864;
  *(_QWORD *)&v11[*(int *)(v6 + 24)] = a2;
  *(_QWORD *)&v11[*(int *)(v6 + 28)] = a3;
  sub_1DC0990BC((uint64_t)v11, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for ManageWatchlistsMoveWatchlistBlueprintModifier);
  sub_1DC16EFB8();
  swift_allocObject();
  sub_1DC080808(&qword_1F034CA80, (uint64_t (*)(uint64_t))type metadata accessor for ManageWatchlistsMoveWatchlistBlueprintModifier, (uint64_t)&unk_1DC42A200);
  swift_retain();
  v15 = sub_1DC40499C();
  sub_1DC0926D8((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for ManageWatchlistsMoveWatchlistBlueprintModifier);
  return v15;
}

uint64_t sub_1DC16EE54(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v4 = type metadata accessor for ManageWatchlistsRenameWatchlistBlueprintModifier();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (uint64_t *)((char *)&v15 - v8);
  v11 = (char *)&v15 + *(int *)(v10 + 20) - v8;
  v12 = sub_1DC40124C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v11, a1, v12);
  sub_1DC0990BC(a2, (uint64_t)v9 + *(int *)(v4 + 24), type metadata accessor for ManageWatchlistsContentMode);
  *v9 = 0x6157656D616E6552;
  v9[1] = 0xEF7473696C686374;
  sub_1DC0990BC((uint64_t)v9, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for ManageWatchlistsRenameWatchlistBlueprintModifier);
  sub_1DC16EFB8();
  swift_allocObject();
  sub_1DC080808(&qword_1F034CA78, (uint64_t (*)(uint64_t))type metadata accessor for ManageWatchlistsRenameWatchlistBlueprintModifier, (uint64_t)&unk_1DC416548);
  v13 = sub_1DC40499C();
  sub_1DC0926D8((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for ManageWatchlistsRenameWatchlistBlueprintModifier);
  return v13;
}

void sub_1DC16EFB8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F034CA70)
  {
    type metadata accessor for ManageWatchlistsModel();
    sub_1DC142C7C();
    sub_1DC080808((unint64_t *)&unk_1F0350F30, (uint64_t (*)(uint64_t))type metadata accessor for ManageWatchlistsModel, (uint64_t)&unk_1DC423338);
    v0 = sub_1DC4049A8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1F034CA70);
  }
}

unint64_t sub_1DC16F058()
{
  unint64_t result;

  result = qword_1F034CA88;
  if (!qword_1F034CA88)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC42702C, &type metadata for ManageWatchlistsDeleteWatchlistBlueprintModifier);
    atomic_store(result, (unint64_t *)&qword_1F034CA88);
  }
  return result;
}

uint64_t sub_1DC16F09C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8[2];

  sub_1DC0824D4((uint64_t)a1, (uint64_t)v8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4018AC();
  result = sub_1DC4025FC();
  if (result)
  {
    v5 = result;
    v6 = type metadata accessor for ManageWatchlistsModule();
    v7 = swift_allocObject();
    result = sub_1DC097DD0(v8, v7 + 16);
    *(_QWORD *)(v7 + 56) = v5;
    a2[3] = v6;
    a2[4] = (uint64_t)&off_1EA453CB0;
    *a2 = v7;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC16F148@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t WatchlistViewStyler;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  _UNKNOWN **v21;
  _QWORD v22[5];
  _BYTE v23[24];
  uint64_t v24;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB38EB8);
  result = sub_1DC402608();
  if (v24)
  {
    v4 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v23, v24);
    v5 = MEMORY[0x1E0C80A78](v4);
    v7 = (uint64_t *)((char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v8 + 16))(v7, v5);
    v9 = *v7;
    WatchlistViewStyler = type metadata accessor for CreateWatchlistViewStyler();
    v22[3] = WatchlistViewStyler;
    v22[4] = &off_1EA452EB8;
    v22[0] = v9;
    type metadata accessor for CreateWatchlistViewRenderer();
    v11 = swift_allocObject();
    v12 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v22, WatchlistViewStyler);
    v13 = MEMORY[0x1E0C80A78](v12);
    v15 = (uint64_t *)((char *)&v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v16 + 16))(v15, v13);
    v17 = *v15;
    v20 = WatchlistViewStyler;
    v21 = &off_1EA452EB8;
    *(_QWORD *)&v19 = v17;
    sub_1DC097DD0(&v19, v11 + 16);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
    result = sub_1DC080808(&qword_1F034CC00, (uint64_t (*)(uint64_t))type metadata accessor for CreateWatchlistViewRenderer, (uint64_t)&unk_1DC425324);
    *a2 = v11;
    a2[1] = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC16F2FC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1DC08AE10(a1, (uint64_t (*)(_QWORD))type metadata accessor for CreateWatchlistViewStyler, (uint64_t (*)(_BYTE *, uint64_t, uint64_t, uint64_t))sub_1DC0A3134, (uint64_t)&off_1EA452EB8, a2);
}

uint64_t sub_1DC16F318@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t WatchlistViewStyler;
  uint64_t WatchlistViewLayoutAttributesFactory;
  _QWORD *v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[5];
  _BYTE v20[24];
  uint64_t v21;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB38EB8);
  result = sub_1DC402608();
  if (v21)
  {
    v4 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v20, v21);
    v5 = MEMORY[0x1E0C80A78](v4);
    v7 = (_QWORD *)((char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v8 + 16))(v7, v5);
    v9 = *v7;
    WatchlistViewStyler = type metadata accessor for CreateWatchlistViewStyler();
    v19[3] = WatchlistViewStyler;
    v19[4] = &off_1EA452EB8;
    v19[0] = v9;
    WatchlistViewLayoutAttributesFactory = type metadata accessor for CreateWatchlistViewLayoutAttributesFactory();
    v12 = (_QWORD *)swift_allocObject();
    v13 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v19, WatchlistViewStyler);
    v14 = MEMORY[0x1E0C80A78](v13);
    v16 = (_QWORD *)((char *)v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v17 + 16))(v16, v14);
    v18 = *v16;
    v12[5] = WatchlistViewStyler;
    v12[6] = &off_1EA452EB8;
    v12[2] = v18;
    sub_1DC173E4C();
    swift_allocObject();
    v12[7] = sub_1DC402C14();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
    result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
    a2[3] = WatchlistViewLayoutAttributesFactory;
    a2[4] = &off_1EA464818;
    *a2 = v12;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC16F4D0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  _UNKNOWN **v21;
  _QWORD v22[5];
  _BYTE v23[24];
  uint64_t v24;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB38130);
  result = sub_1DC402608();
  if (v24)
  {
    v4 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v23, v24);
    v5 = MEMORY[0x1E0C80A78](v4);
    v7 = (uint64_t *)((char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v8 + 16))(v7, v5);
    v9 = *v7;
    v10 = type metadata accessor for WatchlistCellViewStyler();
    v22[3] = v10;
    v22[4] = &off_1EA45DDA8;
    v22[0] = v9;
    type metadata accessor for WatchlistCellViewRenderer();
    v11 = swift_allocObject();
    v12 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v22, v10);
    v13 = MEMORY[0x1E0C80A78](v12);
    v15 = (uint64_t *)((char *)&v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v16 + 16))(v15, v13);
    v17 = *v15;
    v20 = v10;
    v21 = &off_1EA45DDA8;
    *(_QWORD *)&v19 = v17;
    sub_1DC097DD0(&v19, v11 + 16);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
    result = sub_1DC080808(&qword_1F034CBF0, (uint64_t (*)(uint64_t))type metadata accessor for WatchlistCellViewRenderer, (uint64_t)&unk_1DC41B4F4);
    *a2 = v11;
    a2[1] = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC16F684@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1DC08AE10(a1, (uint64_t (*)(_QWORD))type metadata accessor for WatchlistCellViewStyler, (uint64_t (*)(_BYTE *, uint64_t, uint64_t, uint64_t))sub_1DC28F1A8, (uint64_t)&off_1EA45DDA8, a2);
}

uint64_t sub_1DC16F6A0@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[5];
  _BYTE v20[24];
  uint64_t v21;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB38130);
  result = sub_1DC402608();
  if (v21)
  {
    v4 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v20, v21);
    v5 = MEMORY[0x1E0C80A78](v4);
    v7 = (_QWORD *)((char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v8 + 16))(v7, v5);
    v9 = *v7;
    v10 = type metadata accessor for WatchlistCellViewStyler();
    v19[3] = v10;
    v19[4] = &off_1EA45DDA8;
    v19[0] = v9;
    v11 = type metadata accessor for WatchlistCellViewLayoutAttributesFactory();
    v12 = (_QWORD *)swift_allocObject();
    v13 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v19, v10);
    v14 = MEMORY[0x1E0C80A78](v13);
    v16 = (_QWORD *)((char *)v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v17 + 16))(v16, v14);
    v18 = *v16;
    v12[5] = v10;
    v12[6] = &off_1EA45DDA8;
    v12[2] = v18;
    sub_1DC173DE8();
    swift_allocObject();
    v12[7] = sub_1DC402C14();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
    result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
    a2[3] = v11;
    a2[4] = &off_1EA451D98;
    *a2 = v12;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC16F858()
{
  type metadata accessor for ManageWatchlistsViewController();
  sub_1DC402B30();
  swift_release();
  sub_1DC096268(0, &qword_1F034CA98);
  sub_1DC402B3C();
  swift_release();
  sub_1DC096268(0, &qword_1F034CAA0);
  sub_1DC402B3C();
  type metadata accessor for ManageWatchlistsRouter();
  sub_1DC402488();
  swift_release();
  swift_release();
  sub_1DC096268(0, &qword_1F034CAA8);
  sub_1DC402B3C();
  swift_release();
  sub_1DC096268(0, &qword_1F034CAB0);
  sub_1DC402B3C();
  swift_release();
  sub_1DC096268(0, &qword_1F034CAB8);
  sub_1DC402B3C();
  swift_release();
  sub_1DC096268(0, &qword_1F034CAC0);
  sub_1DC402B3C();
  swift_release();
  sub_1DC172BFC(0);
  sub_1DC402B30();
  swift_release();
  type metadata accessor for ManageWatchlistsBlueprintModifierFactory();
  sub_1DC402B30();
  swift_release();
  sub_1DC172C10();
  sub_1DC402B30();
  sub_1DC402494();
  swift_release();
  swift_release();
  sub_1DC1732BC();
  sub_1DC402B30();
  swift_release();
  sub_1DC172CD8();
  sub_1DC402B30();
  swift_release();
  sub_1DC172F00();
  sub_1DC402B30();
  swift_release();
  type metadata accessor for ManageWatchlistsBlueprintLayoutBuilder();
  sub_1DC402B30();
  swift_release();
  sub_1DC173384();
  sub_1DC402B30();
  swift_release();
  sub_1DC0821D4(0, (unint64_t *)&unk_1EDB42998);
  sub_1DC402B30();
  swift_release();
  sub_1DC172DB4();
  sub_1DC402B30();
  swift_release();
  sub_1DC096268(0, &qword_1EDB2A6F0);
  sub_1DC402B3C();
  sub_1DC405EC0();
  sub_1DC402488();
  swift_release();
  swift_release();
  sub_1DC172FE4(0, &qword_1F034CAE8, (uint64_t (*)(uint64_t))type metadata accessor for ManageWatchlistsBlueprintViewCellProvider, sub_1DC172FC8, MEMORY[0x1E0DBAB68]);
  sub_1DC402B30();
  sub_1DC402494();
  swift_release();
  swift_release();
  sub_1DC172FE4(0, &qword_1F034CB08, (uint64_t (*)(uint64_t))type metadata accessor for ManageWatchlistsBlueprintViewHeaderFooterProvider, sub_1DC173108, MEMORY[0x1E0DBA6F8]);
  sub_1DC402B30();
  sub_1DC402494();
  swift_release();
  swift_release();
  sub_1DC173124();
  sub_1DC402B30();
  sub_1DC402494();
  swift_release();
  swift_release();
  type metadata accessor for ManageWatchlistsBlueprintViewCellProvider();
  sub_1DC402B30();
  sub_1DC402494();
  swift_release();
  swift_release();
  type metadata accessor for ManageWatchlistsBlueprintViewHeaderFooterProvider();
  sub_1DC402B30();
  swift_release();
  sub_1DC173588(0, &qword_1F034CB60, MEMORY[0x1E0DBA600]);
  sub_1DC402B30();
  swift_release();
  sub_1DC404AF8();
  sub_1DC402B30();
  swift_release();
  sub_1DC173488();
  sub_1DC402B30();
  sub_1DC402494();
  swift_release();
  swift_release();
  sub_1DC405860();
  sub_1DC402B30();
  sub_1DC402494();
  swift_release();
  swift_release();
  sub_1DC096268(0, &qword_1EDB2A7C0);
  sub_1DC402B3C();
  return swift_release();
}

uint64_t sub_1DC16FF38(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[3];
  uint64_t v28;
  _UNKNOWN **v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE v34[24];
  uint64_t v35;

  sub_1DC173604();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1F034CA98);
  result = sub_1DC402608();
  if (!v35)
  {
    __break(1u);
    goto LABEL_8;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1F034CAA8);
  result = sub_1DC402608();
  v6 = v32;
  if (!v32)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v7 = v33;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC173384();
  result = sub_1DC4025FC();
  if (!result)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v8 = (void *)result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v9 = type metadata accessor for ManageWatchlistsContentMode(0);
  sub_1DC402608();
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v4, 1, v9);
  if ((_DWORD)result == 1)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v26 = v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, (unint64_t *)&qword_1EDB29EE0);
  result = sub_1DC402608();
  v10 = v30;
  if (v30)
  {
    v11 = v31;
    v12 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v34, v35);
    v13 = MEMORY[0x1E0C80A78](v12);
    v15 = (uint64_t *)((char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v16 + 16))(v15, v13);
    v17 = *v15;
    v28 = type metadata accessor for ManageWatchlistsStyler();
    v29 = &off_1EA44E9F8;
    v27[0] = v17;
    v18 = (char *)objc_allocWithZone((Class)type metadata accessor for ManageWatchlistsViewController());
    v19 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v27, v28);
    v20 = MEMORY[0x1E0C80A78](v19);
    v22 = (uint64_t *)((char *)&v25 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v23 + 16))(v22, v20);
    v24 = sub_1DC17383C(*v22, v6, v26, v8, (uint64_t)v4, v10, v11, v18);
    swift_unknownObjectRelease();

    swift_unknownObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
    return (uint64_t)v24;
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1DC170268@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, qword_1EDB2D2F0);
  result = sub_1DC402608();
  if (v7)
  {
    v4 = type metadata accessor for ManageWatchlistsStyler();
    v5 = swift_allocObject();
    result = sub_1DC097DD0(&v6, v5 + 16);
    a2[3] = v4;
    a2[4] = (uint64_t)&off_1EA44E9F8;
    *a2 = v5;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC170318@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8[2];

  sub_1DC0824D4((uint64_t)a1, (uint64_t)v8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4018AC();
  result = sub_1DC4025FC();
  if (result)
  {
    v5 = result;
    v6 = type metadata accessor for ManageWatchlistsRouter();
    v7 = swift_allocObject();
    swift_unknownObjectWeakInit();
    result = sub_1DC097DD0(v8, v7 + 24);
    *(_QWORD *)(v7 + 64) = v5;
    a2[3] = v6;
    a2[4] = (uint64_t)&off_1EA461280;
    *a2 = v7;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1DC1703D0(uint64_t a1, _QWORD *a2)
{
  id v2;

  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for ManageWatchlistsViewController();
  v2 = (id)sub_1DC4025FC();
  swift_unknownObjectWeakAssign();

}

uint64_t sub_1DC17043C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t **v15;
  uint64_t v16;
  _QWORD *v17;
  _BYTE v18[24];
  uint64_t v19;
  _BYTE v20[24];
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1F034CAB0);
  result = sub_1DC402608();
  v5 = v22;
  if (!v22)
  {
    __break(1u);
    goto LABEL_6;
  }
  v6 = v23;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1F034CAA0);
  result = sub_1DC402608();
  if (!v21)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1F034CAB8);
  result = sub_1DC402608();
  if (v19)
  {
    v7 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v20, v21);
    v8 = MEMORY[0x1E0C80A78](v7);
    v10 = (uint64_t *)&v18[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
    (*(void (**)(uint64_t *, __n128))(v11 + 16))(v10, v8);
    v12 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v18, v19);
    v13 = MEMORY[0x1E0C80A78](v12);
    v15 = (uint64_t **)&v18[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
    (*(void (**)(uint64_t **, __n128))(v16 + 16))(v15, v13);
    v17 = sub_1DC173AD4(v5, v6, *v10, *v15);
    swift_unknownObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
    result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
    *a2 = v17;
    a2[1] = &off_1EA459550;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1DC170658@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v22[5];
  uint64_t v23;
  uint64_t v24;

  sub_1DC173604();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1F034CAC0);
  result = sub_1DC402608();
  v8 = v23;
  if (!v23)
  {
    __break(1u);
    goto LABEL_10;
  }
  v9 = v24;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC172C10();
  result = sub_1DC4025FC();
  if (!result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v10 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for ManageWatchlistsBlueprintModifierFactory();
  result = sub_1DC4025FC();
  if (!result)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v11 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, (unint64_t *)&unk_1EDB28C50);
  result = sub_1DC402608();
  if (!v22[3])
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v18 = v9;
  v19 = a2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, (unint64_t *)&qword_1EDB29EE0);
  result = sub_1DC402608();
  v12 = v20;
  if (!v20)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v17 = v21;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4018AC();
  result = sub_1DC4025FC();
  if (!result)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v13 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v14 = type metadata accessor for ManageWatchlistsContentMode(0);
  sub_1DC402608();
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v6, 1, v14);
  if ((_DWORD)result != 1)
  {
    sub_1DC1737C4(0);
    swift_allocObject();
    v15 = sub_1DC173C28(v8, v18, v10, v11, v22, v12, v17, v13, (uint64_t)v6);
    swift_unknownObjectRelease();
    swift_release();
    swift_release();
    swift_unknownObjectRelease();
    result = swift_release();
    v16 = v19;
    *v19 = v15;
    v16[1] = &off_1EA45ABD0;
    return result;
  }
LABEL_15:
  __break(1u);
  return result;
}

uint64_t sub_1DC170954@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4018AC();
  result = sub_1DC4025FC();
  if (result)
  {
    v4 = result;
    v5 = type metadata accessor for ManageWatchlistsTracker();
    result = swift_allocObject();
    *(_QWORD *)(result + 16) = v4;
    a2[3] = v5;
    a2[4] = (uint64_t)&off_1EA44EB80;
    *a2 = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC1709D8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for ManageWatchlistsDataManager();
  result = swift_allocObject();
  *a1 = result;
  a1[1] = (uint64_t)&off_1EA46C740;
  return result;
}

uint64_t sub_1DC170A14(uint64_t a1)
{
  return sub_1DC080C78(a1, sub_1DC172BFC, MEMORY[0x1E0DB80B0]);
}

uint64_t sub_1DC170A28(_QWORD *a1)
{
  uint64_t result;
  uint64_t v2;
  __int128 v3;
  uint64_t v4;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, (unint64_t *)&unk_1EDB28C50);
  result = sub_1DC402608();
  if (v4)
  {
    type metadata accessor for ManageWatchlistsBlueprintModifierFactory();
    v2 = swift_allocObject();
    sub_1DC097DD0(&v3, v2 + 16);
    return v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC170AC4(_QWORD *a1)
{
  uint64_t result;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC172BFC(0);
  result = sub_1DC4025FC();
  if (result)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1DC172CD8();
    result = sub_1DC4025FC();
    if (result)
    {
      sub_1DC172C10();
      swift_allocObject();
      return sub_1DC4049C0();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1DC170BA0(uint64_t a1, _QWORD *a2)
{
  uint64_t result;

  sub_1DC1736C8(0, &qword_1F034CBB0, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBB1C8]);
  swift_allocObject();
  sub_1DC405F68();
  sub_1DC1736C8(0, &qword_1F034CBB8, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBA6A8]);
  swift_allocObject();
  sub_1DC17376C();
  sub_1DC405B3C();
  sub_1DC4049D8();
  swift_release();
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1DC1732BC();
  result = sub_1DC4025FC();
  if (result)
  {
    swift_allocObject();
    sub_1DC080808(&qword_1F034CBC8, (uint64_t (*)(uint64_t))sub_1DC1732BC, MEMORY[0x1E0DBB410]);
    sub_1DC405B3C();
    sub_1DC4049D8();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC170CF0(_QWORD *a1)
{
  uint64_t result;
  uint64_t v3;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC172F00();
  result = sub_1DC4025FC();
  if (!result)
  {
    __break(1u);
    goto LABEL_6;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB2A6F0);
  result = sub_1DC4025D8();
  if (!v3)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for ManageWatchlistsBlueprintLayoutBuilder();
  result = sub_1DC4025FC();
  if (result)
  {
    sub_1DC1732BC();
    swift_allocObject();
    return sub_1DC4060D0();
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1DC170E30(_QWORD *a1)
{
  uint64_t result;
  uint64_t v3;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC172DB4();
  result = sub_1DC4025FC();
  if (result)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1DC096268(0, &qword_1EDB2A940);
    result = sub_1DC402608();
    if (v3)
    {
      sub_1DC172CD8();
      swift_allocObject();
      return sub_1DC404BB8();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1DC170F2C(uint64_t a1)
{
  return sub_1DC080C78(a1, (void (*)(_QWORD))sub_1DC172F00, MEMORY[0x1E0DB9978]);
}

uint64_t sub_1DC170F40(_QWORD *a1)
{
  uint64_t result;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t WatchlistViewLayoutAttributesFactory;
  _QWORD *v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v30[3];
  _QWORD v31[3];
  uint64_t v32;
  _UNKNOWN **v33;
  _QWORD v34[5];
  _BYTE v35[24];
  uint64_t v36;
  _BYTE v37[24];
  uint64_t v38;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB3EC90);
  result = sub_1DC402608();
  if (v38)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1DC096268(0, &qword_1EDB3EF50);
    result = sub_1DC402608();
    if (v36)
    {
      v3 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v37, v38);
      v30[2] = v30;
      v4 = MEMORY[0x1E0C80A78](v3);
      v6 = (_QWORD *)((char *)v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, __n128))(v7 + 16))(v6, v4);
      v8 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v35, v36);
      v30[1] = v30;
      v9 = MEMORY[0x1E0C80A78](v8);
      v11 = (_QWORD *)((char *)v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, __n128))(v12 + 16))(v11, v9);
      v13 = *v6;
      v14 = *v11;
      v15 = type metadata accessor for WatchlistCellViewLayoutAttributesFactory();
      v34[3] = v15;
      v34[4] = &off_1EA451D98;
      v34[0] = v13;
      WatchlistViewLayoutAttributesFactory = type metadata accessor for CreateWatchlistViewLayoutAttributesFactory();
      v32 = WatchlistViewLayoutAttributesFactory;
      v33 = &off_1EA464818;
      v31[0] = v14;
      type metadata accessor for ManageWatchlistsBlueprintLayoutBuilder();
      v17 = (_QWORD *)swift_allocObject();
      v18 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v34, v15);
      v19 = MEMORY[0x1E0C80A78](v18);
      v21 = (_QWORD *)((char *)v30 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, __n128))(v22 + 16))(v21, v19);
      v23 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v31, v32);
      v24 = MEMORY[0x1E0C80A78](v23);
      v26 = (_QWORD *)((char *)v30 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, __n128))(v27 + 16))(v26, v24);
      v28 = *v21;
      v29 = *v26;
      v17[5] = v15;
      v17[6] = &off_1EA451D98;
      v17[2] = v28;
      v17[10] = WatchlistViewLayoutAttributesFactory;
      v17[11] = &off_1EA464818;
      v17[7] = v29;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
      return (uint64_t)v17;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1DC171228(_QWORD *a1)
{
  uint64_t result;
  Class v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC172BFC(0);
  result = sub_1DC4025FC();
  if (!result)
  {
    __break(1u);
    goto LABEL_11;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC172DB4();
  result = sub_1DC4025FC();
  if (!result)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB2A6F0);
  result = sub_1DC4025D8();
  if (!v7)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB2A940);
  result = sub_1DC402608();
  if (!v6)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC173588(0, &qword_1F034CB60, MEMORY[0x1E0DBA600]);
  result = sub_1DC4025FC();
  if (!result)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC404AF8();
  result = sub_1DC4025CC();
  if (!result)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, (unint64_t *)&qword_1EDB29EE0);
  result = sub_1DC402608();
  if (!v5)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4018AC();
  result = sub_1DC4025FC();
  if (result)
  {
    sub_1DC080808((unint64_t *)&qword_1EDB29180, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8638], MEMORY[0x1E0D59B68]);
    sub_1DC173384();
    v4 = objc_allocWithZone(v3);
    return sub_1DC40562C();
  }
LABEL_17:
  __break(1u);
  return result;
}

id sub_1DC17151C()
{
  return objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DBCF28]), sel_initWithFrame_style_, objc_msgSend((id)objc_opt_self(), sel_ts_preferredStyleForStyle_, 2), 0.0, 0.0, 0.0, 0.0);
}

uint64_t sub_1DC171578(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t result;
  uint64_t v7;

  v2 = sub_1DC404FB4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC0821D4(0, (unint64_t *)&unk_1EDB42998);
  result = sub_1DC4025CC();
  if (!result)
  {
    __break(1u);
    goto LABEL_7;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC172FE4(0, &qword_1F034CAE8, (uint64_t (*)(uint64_t))type metadata accessor for ManageWatchlistsBlueprintViewCellProvider, sub_1DC172FC8, MEMORY[0x1E0DBAB68]);
  result = sub_1DC4025FC();
  if (!result)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC172FE4(0, &qword_1F034CB08, (uint64_t (*)(uint64_t))type metadata accessor for ManageWatchlistsBlueprintViewHeaderFooterProvider, sub_1DC173108, MEMORY[0x1E0DBA6F8]);
  result = sub_1DC4025FC();
  if (!result)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC173124();
  result = sub_1DC4025FC();
  if (result)
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DB8EF8], v2);
    sub_1DC172DB4();
    swift_allocObject();
    return sub_1DC40505C();
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_1DC171788@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC172DB4();
  result = sub_1DC4025FC();
  if (result)
  {
    sub_1DC405074();
    swift_release();
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1DC13037C();
    result = sub_1DC4025FC();
    if (result)
    {
      sub_1DC405EC0();
      result = sub_1DC405EA8();
      v5 = MEMORY[0x1E0DBAFF8];
      *a2 = result;
      a2[1] = v5;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1DC17187C()
{
  uint64_t v0;
  __n128 v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v0 = sub_1DC4052B4();
  v1 = MEMORY[0x1E0C80A78](v0);
  (*(void (**)(char *, _QWORD, __n128))(v3 + 104))((char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E0DB9470], v1);
  return sub_1DC405E90();
}

uint64_t sub_1DC171900(_QWORD *a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  Class v6;
  id v7;
  __int128 v8[2];

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC172BFC(0);
  result = sub_1DC4025FC();
  if (!result)
  {
    __break(1u);
    goto LABEL_6;
  }
  v3 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC172F00();
  result = sub_1DC4025FC();
  if (!result)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for ManageWatchlistsBlueprintViewCellProvider();
  sub_1DC0824D4((uint64_t)a1, (uint64_t)v8);
  v4 = swift_allocObject();
  sub_1DC097DD0(v8, v4 + 16);
  v5 = sub_1DC4025E4();
  result = swift_release();
  if (v5)
  {
    *(_QWORD *)&v8[0] = v3;
    sub_1DC172FE4(0, &qword_1F034CAE8, (uint64_t (*)(uint64_t))type metadata accessor for ManageWatchlistsBlueprintViewCellProvider, sub_1DC172FC8, MEMORY[0x1E0DBAB68]);
    v7 = objc_allocWithZone(v6);
    return sub_1DC405D58();
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1DC171A74(_QWORD *a1, _QWORD *a2)
{
  uint64_t result;
  void *v4;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1DC0821D4(0, (unint64_t *)&unk_1EDB42998);
  result = sub_1DC4025CC();
  if (result)
  {
    v4 = (void *)result;
    sub_1DC0821D4(0, &qword_1EDB3F840);
    sub_1DC408B00();
    sub_1DC402524();

    return swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC171B60(uint64_t a1, _QWORD *a2)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  _QWORD v6[3];
  uint64_t v7;
  uint64_t v8;

  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for ManageWatchlistsViewController();
  sub_1DC4025FC();
  sub_1DC405D70();
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1DC096268(0, &qword_1EDB2A7C0);
  result = sub_1DC4025D8();
  v4 = v7;
  if (v7)
  {
    v5 = v8;
    __swift_project_boxed_opaque_existential_1(v6, v7);
    MEMORY[0x1DF0C6E0C](v4, v5);
    sub_1DC405D64();
    swift_release();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC171C70(_QWORD *a1)
{
  uint64_t result;
  Class v3;
  id v4;
  uint64_t v5;
  uint64_t v6;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC172BFC(0);
  result = sub_1DC4025FC();
  if (!result)
  {
    __break(1u);
    goto LABEL_10;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC172F00();
  result = sub_1DC4025FC();
  if (!result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for ManageWatchlistsBlueprintViewHeaderFooterProvider();
  result = sub_1DC4025FC();
  if (!result)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC173588(0, &qword_1F034CB60, MEMORY[0x1E0DBA600]);
  result = sub_1DC4025FC();
  if (!result)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, (unint64_t *)&qword_1EDB29EE0);
  result = sub_1DC402608();
  if (!v6)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4018AC();
  result = sub_1DC4025FC();
  if (!result)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  sub_1DC080808((unint64_t *)&qword_1EDB29180, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8638], MEMORY[0x1E0D59B68]);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB2A350);
  result = sub_1DC402608();
  if (v5)
  {
    sub_1DC172FE4(0, &qword_1F034CB08, (uint64_t (*)(uint64_t))type metadata accessor for ManageWatchlistsBlueprintViewHeaderFooterProvider, sub_1DC173108, MEMORY[0x1E0DBA6F8]);
    v4 = objc_allocWithZone(v3);
    return sub_1DC405B60();
  }
LABEL_15:
  __break(1u);
  return result;
}

uint64_t sub_1DC171F0C(uint64_t a1, _QWORD *a2)
{
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1DC404AF8();
  sub_1DC4025CC();
  sub_1DC405B6C();
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1DC173488();
  if (sub_1DC4025FC())
    sub_1DC080808(&qword_1F034CBA8, (uint64_t (*)(uint64_t))sub_1DC173488, MEMORY[0x1E0DBB510]);
  return sub_1DC405B78();
}

uint64_t sub_1DC171FF0(_QWORD *a1)
{
  uint64_t result;
  Class v2;
  id v3;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC172BFC(0);
  result = sub_1DC4025FC();
  if (result)
  {
    sub_1DC173124();
    v3 = objc_allocWithZone(v2);
    return sub_1DC406004();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1DC172064(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  id v4;

  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for ManageWatchlistsViewController();
  if (sub_1DC4025FC())
  {
    sub_1DC406010();
    __swift_project_boxed_opaque_existential_1(a2, a2[3]);
    sub_1DC0821D4(0, (unint64_t *)&unk_1EDB42998);
    v3 = sub_1DC4025CC();
    if (v3)
    {
      v4 = (id)v3;
      sub_1DC40601C();

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_1DC172144(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD v33[5];
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE v40[24];
  uint64_t v41;

  sub_1DC173604();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB38130);
  result = sub_1DC402608();
  if (!v41)
  {
    __break(1u);
    goto LABEL_10;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB39858);
  result = sub_1DC402608();
  v6 = v38;
  if (!v38)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v7 = v39;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, (unint64_t *)&unk_1EDB3A430);
  result = sub_1DC402608();
  v8 = v36;
  if (!v36)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v9 = v37;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, (unint64_t *)&qword_1EDB29EE0);
  result = sub_1DC402608();
  v10 = v34;
  if (!v34)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v32 = v35;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC172F00();
  result = sub_1DC4025FC();
  if (!result)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v11 = result;
  v29 = v9;
  v30 = v8;
  v31 = v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4018AC();
  result = sub_1DC4025FC();
  if (!result)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v12 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v13 = type metadata accessor for ManageWatchlistsContentMode(0);
  sub_1DC402608();
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v4, 1, v13);
  if ((_DWORD)result != 1)
  {
    v14 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v40, v41);
    v15 = MEMORY[0x1E0C80A78](v14);
    v17 = (uint64_t *)((char *)&v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v18 + 16))(v17, v15);
    v19 = *v17;
    v20 = type metadata accessor for WatchlistCellViewStyler();
    v33[3] = v20;
    v33[4] = &off_1EA45DDA8;
    v33[0] = v19;
    type metadata accessor for ManageWatchlistsBlueprintViewCellProvider();
    v21 = (_QWORD *)swift_allocObject();
    v22 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v33, v20);
    v23 = MEMORY[0x1E0C80A78](v22);
    v25 = (uint64_t *)((char *)&v28 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v26 + 16))(v25, v23);
    v27 = sub_1DC172B34(*v25, v6, v31, v30, v29, v10, v32, v11, v12, (uint64_t)v4, v21);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
    return (uint64_t)v27;
  }
LABEL_15:
  __break(1u);
  return result;
}

void sub_1DC17250C(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  _UNKNOWN **v3;
  id v4;

  v2 = *a1;
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for ManageWatchlistsViewController();
  v4 = (id)sub_1DC4025FC();
  v3 = &off_1EA45F9D0;
  if (!v4)
    v3 = 0;
  *(_QWORD *)(v2 + 24) = v3;
  swift_unknownObjectWeakAssign();

}

uint64_t sub_1DC17258C()
{
  type metadata accessor for ManageWatchlistsBlueprintViewHeaderFooterProvider();
  return swift_allocObject();
}

uint64_t sub_1DC1725AC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t result;
  uint64_t v13;
  _QWORD v14[2];

  v2 = sub_1DC406184();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (_QWORD *)((char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = sub_1DC40619C();
  MEMORY[0x1E0C80A78](v6);
  sub_1DC173588(0, &qword_1F034CB98, MEMORY[0x1E0DBA5F0]);
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)v14 - v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC172BFC(0);
  result = sub_1DC4025FC();
  if (result)
  {
    v13 = result;
    (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E0DBA5E8], v8);
    *v5 = 0;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DBB5B0], v2);
    sub_1DC406190();
    v14[1] = v13;
    sub_1DC173588(0, &qword_1F034CB60, MEMORY[0x1E0DBA600]);
    swift_allocObject();
    return sub_1DC405AC4();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC17277C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1DC1120B4();
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1DC40C740;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC173488();
  result = sub_1DC4025FC();
  if (result)
  {
    v4 = result;
    v5 = sub_1DC080808(&qword_1F034CB90, (uint64_t (*)(uint64_t))sub_1DC173488, MEMORY[0x1E0DBB518]);
    *(_QWORD *)(v2 + 32) = v4;
    *(_QWORD *)(v2 + 40) = v5;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1DC405860();
    result = sub_1DC4025CC();
    if (result)
    {
      v6 = MEMORY[0x1E0DB9FC8];
      *(_QWORD *)(v2 + 48) = result;
      *(_QWORD *)(v2 + 56) = v6;
      sub_1DC404AF8();
      swift_allocObject();
      return sub_1DC404AEC();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1DC17289C(_QWORD *a1)
{
  uint64_t result;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC172DB4();
  result = sub_1DC4025FC();
  if (result)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1DC172BFC(0);
    result = sub_1DC4025FC();
    if (result)
    {
      sub_1DC173488();
      swift_allocObject();
      return sub_1DC406124();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1DC172978(uint64_t a1, _QWORD *a2)
{
  return sub_1DC172A24(a1, a2, sub_1DC17356C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DBB500]);
}

uint64_t sub_1DC17298C(_QWORD *a1)
{
  uint64_t result;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC172DB4();
  result = sub_1DC4025FC();
  if (result)
  {
    sub_1DC405074();
    swift_release();
    sub_1DC405860();
    swift_allocObject();
    return sub_1DC405854();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC172A10(uint64_t a1, _QWORD *a2)
{
  return sub_1DC172A24(a1, a2, sub_1DC173550, MEMORY[0x1E0DB9FC0]);
}

uint64_t sub_1DC172A24(uint64_t a1, _QWORD *a2, uint64_t (*a3)(void), uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v7;

  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1DC173384();
  v6 = sub_1DC4025FC();
  if (v6)
    v7 = a3();
  else
    v7 = 0;
  return a4(v6, v7);
}

uint64_t sub_1DC172AA8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC173384();
  v4 = v3;
  result = sub_1DC4025FC();
  if (result)
  {
    v6 = result;
    a2[3] = v4;
    result = sub_1DC080808(&qword_1F034CB78, (uint64_t (*)(uint64_t))sub_1DC173384, MEMORY[0x1E0DB9B58]);
    a2[4] = result;
    *a2 = v6;
  }
  else
  {
    __break(1u);
  }
  return result;
}

_QWORD *sub_1DC172B34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, _QWORD *a11)
{
  __int128 v20;
  uint64_t v21;
  _UNKNOWN **v22;

  v21 = type metadata accessor for WatchlistCellViewStyler();
  v22 = &off_1EA45DDA8;
  *(_QWORD *)&v20 = a1;
  a11[3] = 0;
  swift_unknownObjectWeakInit();
  sub_1DC097DD0(&v20, (uint64_t)(a11 + 4));
  a11[9] = a2;
  a11[10] = a3;
  a11[11] = a4;
  a11[12] = a5;
  a11[13] = a6;
  a11[14] = a7;
  a11[15] = a8;
  a11[16] = a9;
  sub_1DC173658(a10, (uint64_t)a11 + OBJC_IVAR____TtC8StocksUI41ManageWatchlistsBlueprintViewCellProvider_contentMode);
  return a11;
}

void sub_1DC172BFC(uint64_t a1)
{
  sub_1DC1736C8(a1, &qword_1F034CAC8, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB80B8]);
}

void sub_1DC172C10()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F034CAD0)
  {
    sub_1DC172BFC(255);
    sub_1DC172CD8();
    sub_1DC080808(&qword_1F034CAF0, (uint64_t (*)(uint64_t))sub_1DC172BFC, MEMORY[0x1E0DB80D0]);
    sub_1DC080808(&qword_1F034CB40, (uint64_t (*)(uint64_t))sub_1DC172CD8, MEMORY[0x1E0DB8440]);
    v0 = sub_1DC4049FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1F034CAD0);
  }
}

void sub_1DC172CD8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F034CAD8)
  {
    type metadata accessor for ManageWatchlistsModel();
    sub_1DC172DB4();
    sub_1DC142C7C();
    sub_1DC080808((unint64_t *)&unk_1F0350F30, (uint64_t (*)(uint64_t))type metadata accessor for ManageWatchlistsModel, (uint64_t)&unk_1DC423338);
    sub_1DC080808(&qword_1F034CB38, (uint64_t (*)(uint64_t))sub_1DC172DB4, MEMORY[0x1E0DB9008]);
    v0 = sub_1DC404BD0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1F034CAD8);
  }
}

void sub_1DC172DB4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F034CAE0)
  {
    sub_1DC0821D4(255, (unint64_t *)&unk_1EDB42998);
    sub_1DC172FE4(255, &qword_1F034CAE8, (uint64_t (*)(uint64_t))type metadata accessor for ManageWatchlistsBlueprintViewCellProvider, sub_1DC172FC8, MEMORY[0x1E0DBAB68]);
    sub_1DC172FE4(255, &qword_1F034CB08, (uint64_t (*)(uint64_t))type metadata accessor for ManageWatchlistsBlueprintViewHeaderFooterProvider, sub_1DC173108, MEMORY[0x1E0DBA6F8]);
    sub_1DC173124();
    type metadata accessor for ManageWatchlistsViewController();
    sub_1DC1731EC();
    sub_1DC173254();
    sub_1DC080808(&qword_1F034CB30, (uint64_t (*)(uint64_t))sub_1DC173124, MEMORY[0x1E0DBB290]);
    v0 = sub_1DC405080();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1F034CAE0);
  }
}

void sub_1DC172F00()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F034C5A0)
  {
    type metadata accessor for ManageWatchlistsLayoutSectionDescriptor();
    type metadata accessor for ManageWatchlistsLayoutModel();
    sub_1DC080808(&qword_1F034C430, (uint64_t (*)(uint64_t))type metadata accessor for ManageWatchlistsLayoutSectionDescriptor, (uint64_t)&unk_1DC421E88);
    sub_1DC080808(&qword_1F034C018, (uint64_t (*)(uint64_t))type metadata accessor for ManageWatchlistsLayoutModel, (uint64_t)&unk_1DC4134C8);
    v0 = sub_1DC405524();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1F034C5A0);
  }
}

uint64_t sub_1DC172FC8()
{
  return sub_1DC080808(&qword_1F034CAF8, (uint64_t (*)(uint64_t))type metadata accessor for ManageWatchlistsBlueprintViewCellProvider, (uint64_t)&unk_1DC40F2B0);
}

void sub_1DC172FE4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, _QWORD *))
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  _QWORD v15[8];

  if (!*a2)
  {
    sub_1DC172BFC(255);
    v11 = v10;
    sub_1DC172F00();
    v15[0] = v11;
    v15[1] = v12;
    v15[2] = a3(255);
    v15[3] = type metadata accessor for ManageWatchlistsViewController();
    v15[4] = sub_1DC080808(&qword_1F034CAF0, (uint64_t (*)(uint64_t))sub_1DC172BFC, MEMORY[0x1E0DB80D0]);
    v15[5] = sub_1DC080808(&qword_1F034C5A8, (uint64_t (*)(uint64_t))sub_1DC172F00, MEMORY[0x1E0DB9998]);
    v15[6] = a4();
    v15[7] = sub_1DC080808(&qword_1F034CB00, (uint64_t (*)(uint64_t))type metadata accessor for ManageWatchlistsViewController, (uint64_t)&unk_1DC422900);
    v13 = a5(a1, v15);
    if (!v14)
      atomic_store(v13, a2);
  }
}

uint64_t sub_1DC173108()
{
  return sub_1DC080808(&qword_1F034CB10, (uint64_t (*)(uint64_t))type metadata accessor for ManageWatchlistsBlueprintViewHeaderFooterProvider, (uint64_t)&unk_1DC41A784);
}

void sub_1DC173124()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F034CB18)
  {
    sub_1DC172BFC(255);
    type metadata accessor for ManageWatchlistsViewController();
    sub_1DC080808(&qword_1F034CAF0, (uint64_t (*)(uint64_t))sub_1DC172BFC, MEMORY[0x1E0DB80D0]);
    sub_1DC080808(&qword_1F034CB00, (uint64_t (*)(uint64_t))type metadata accessor for ManageWatchlistsViewController, (uint64_t)&unk_1DC422900);
    v0 = sub_1DC406028();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1F034CB18);
  }
}

unint64_t sub_1DC1731EC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1F034CB20;
  if (!qword_1F034CB20)
  {
    sub_1DC172FE4(255, &qword_1F034CAE8, (uint64_t (*)(uint64_t))type metadata accessor for ManageWatchlistsBlueprintViewCellProvider, sub_1DC172FC8, MEMORY[0x1E0DBAB68]);
    result = MEMORY[0x1DF0CAB8C](MEMORY[0x1E0DBAB78], v1);
    atomic_store(result, (unint64_t *)&qword_1F034CB20);
  }
  return result;
}

unint64_t sub_1DC173254()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1F034CB28;
  if (!qword_1F034CB28)
  {
    sub_1DC172FE4(255, &qword_1F034CB08, (uint64_t (*)(uint64_t))type metadata accessor for ManageWatchlistsBlueprintViewHeaderFooterProvider, sub_1DC173108, MEMORY[0x1E0DBA6F8]);
    result = MEMORY[0x1DF0CAB8C](MEMORY[0x1E0DBA708], v1);
    atomic_store(result, (unint64_t *)&qword_1F034CB28);
  }
  return result;
}

void sub_1DC1732BC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F034CB48)
  {
    sub_1DC172F00();
    type metadata accessor for ManageWatchlistsBlueprintLayoutBuilder();
    sub_1DC080808(&qword_1F034C5A8, (uint64_t (*)(uint64_t))sub_1DC172F00, MEMORY[0x1E0DB9998]);
    sub_1DC080808(&qword_1F034CB50, (uint64_t (*)(uint64_t))type metadata accessor for ManageWatchlistsBlueprintLayoutBuilder, (uint64_t)&unk_1DC4169E8);
    v0 = sub_1DC4060DC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1F034CB48);
  }
}

void sub_1DC173384()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F034CB58)
  {
    sub_1DC172BFC(255);
    sub_1DC172DB4();
    type metadata accessor for ManageWatchlistsViewController();
    sub_1DC080808(&qword_1F034CAF0, (uint64_t (*)(uint64_t))sub_1DC172BFC, MEMORY[0x1E0DB80D0]);
    sub_1DC080808(&qword_1F034CB38, (uint64_t (*)(uint64_t))sub_1DC172DB4, MEMORY[0x1E0DB9008]);
    sub_1DC080808(&qword_1F034CB00, (uint64_t (*)(uint64_t))type metadata accessor for ManageWatchlistsViewController, (uint64_t)&unk_1DC422900);
    v0 = sub_1DC405644();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1F034CB58);
  }
}

void sub_1DC173488()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F034CB68)
  {
    sub_1DC172DB4();
    sub_1DC172BFC(255);
    sub_1DC080808(&qword_1F034CB38, (uint64_t (*)(uint64_t))sub_1DC172DB4, MEMORY[0x1E0DB9008]);
    sub_1DC080808(&qword_1F034CB70, (uint64_t (*)(uint64_t))sub_1DC172BFC, MEMORY[0x1E0DB80C8]);
    v0 = sub_1DC40613C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1F034CB68);
  }
}

uint64_t sub_1DC173550()
{
  return sub_1DC080808(&qword_1F034CB80, (uint64_t (*)(uint64_t))sub_1DC173384, MEMORY[0x1E0DB9B48]);
}

uint64_t sub_1DC17356C()
{
  return sub_1DC080808(&qword_1F034CB88, (uint64_t (*)(uint64_t))sub_1DC173384, MEMORY[0x1E0DB9B60]);
}

void sub_1DC173588(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    sub_1DC172BFC(255);
    v7 = v6;
    v8 = sub_1DC080808(&qword_1F034CAF0, (uint64_t (*)(uint64_t))sub_1DC172BFC, MEMORY[0x1E0DB80D0]);
    v9 = a3(a1, v7, v8);
    if (!v10)
      atomic_store(v9, a2);
  }
}

void sub_1DC173604()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F034CBA0)
  {
    type metadata accessor for ManageWatchlistsContentMode(255);
    v0 = sub_1DC4095A4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1F034CBA0);
  }
}

uint64_t sub_1DC173658(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ManageWatchlistsContentMode(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC17369C()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocObject();
}

uint64_t sub_1DC1736C0(_QWORD *a1)
{
  uint64_t v1;

  return sub_1DC171A74(a1, (_QWORD *)(v1 + 16));
}

void sub_1DC1736C8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *))
{
  unint64_t v6;
  uint64_t v7;
  _QWORD v8[4];

  if (!*a2)
  {
    v8[0] = &type metadata for ManageWatchlistsSectionDescriptor;
    v8[1] = type metadata accessor for ManageWatchlistsModel();
    v8[2] = sub_1DC142C7C();
    v8[3] = sub_1DC080808((unint64_t *)&unk_1F0350F30, (uint64_t (*)(uint64_t))type metadata accessor for ManageWatchlistsModel, (uint64_t)&unk_1DC423338);
    v6 = a3(a1, v8);
    if (!v7)
      atomic_store(v6, a2);
  }
}

unint64_t sub_1DC17376C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1F034CBC0;
  if (!qword_1F034CBC0)
  {
    sub_1DC1736C8(255, &qword_1F034CBB0, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBB1C8]);
    result = MEMORY[0x1DF0CAB8C](MEMORY[0x1E0DBB1D0], v1);
    atomic_store(result, (unint64_t *)&qword_1F034CBC0);
  }
  return result;
}

void sub_1DC1737C4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  if (!qword_1F034CBD0)
  {
    v2 = type metadata accessor for ManageWatchlistsBlueprintModifierFactory();
    v3 = sub_1DC080808(&qword_1F034CBD8, (uint64_t (*)(uint64_t))type metadata accessor for ManageWatchlistsBlueprintModifierFactory, (uint64_t)&unk_1DC4107FC);
    v5 = type metadata accessor for ManageWatchlistsInteractor(a1, v2, v3, v4);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_1F034CBD0);
  }
}

char *sub_1DC17383C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, char *a8)
{
  uint64_t v16;
  id v17;
  char *v18;
  char *v19;
  char *v20;
  id v21;
  char *v22;
  char *v23;
  objc_class *ObjectType;
  objc_super v26;
  _QWORD v27[5];

  ObjectType = (objc_class *)swift_getObjectType();
  v27[3] = type metadata accessor for ManageWatchlistsStyler();
  v27[4] = &off_1EA44E9F8;
  v27[0] = a1;
  v16 = OBJC_IVAR____TtC8StocksUI30ManageWatchlistsViewController_descriptionLabel;
  v17 = objc_allocWithZone(MEMORY[0x1E0DC3990]);
  v18 = a8;
  *(_QWORD *)&a8[v16] = objc_msgSend(v17, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  sub_1DC0824D4((uint64_t)v27, (uint64_t)&v18[OBJC_IVAR____TtC8StocksUI30ManageWatchlistsViewController_styler]);
  v19 = &v18[OBJC_IVAR____TtC8StocksUI30ManageWatchlistsViewController_eventHandler];
  *(_QWORD *)v19 = a2;
  *((_QWORD *)v19 + 1) = a3;
  *(_QWORD *)&v18[OBJC_IVAR____TtC8StocksUI30ManageWatchlistsViewController_blueprintViewController] = a4;
  sub_1DC173D68(a5, (uint64_t)&v18[OBJC_IVAR____TtC8StocksUI30ManageWatchlistsViewController_contentMode]);
  v20 = &v18[OBJC_IVAR____TtC8StocksUI30ManageWatchlistsViewController_commandCenter];
  *(_QWORD *)v20 = a6;
  *((_QWORD *)v20 + 1) = a7;
  swift_unknownObjectRetain();
  v21 = a4;
  swift_unknownObjectRetain();

  v26.receiver = v18;
  v26.super_class = ObjectType;
  v22 = (char *)objc_msgSendSuper2(&v26, sel_initWithNibName_bundle_, 0, 0);
  *(_QWORD *)(*(_QWORD *)&v22[OBJC_IVAR____TtC8StocksUI30ManageWatchlistsViewController_eventHandler] + 24) = &off_1EA45F9F0;
  swift_unknownObjectWeakAssign();
  v23 = v22;
  sub_1DC405620();

  sub_1DC173DAC(a5);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
  return v23;
}

_QWORD *sub_1DC1739E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v10;
  uint64_t ObjectType;
  void (*v12)(uint64_t, _UNKNOWN **, uint64_t, uint64_t);
  uint64_t v13;
  _QWORD v15[5];
  _QWORD v16[5];

  v16[3] = type metadata accessor for ManageWatchlistsRouter();
  v16[4] = &off_1EA461280;
  v16[0] = a3;
  v15[3] = type metadata accessor for ManageWatchlistsTracker();
  v15[4] = &off_1EA44EB80;
  v15[0] = a4;
  a5[3] = 0;
  swift_unknownObjectWeakInit();
  a5[4] = a1;
  a5[5] = a2;
  sub_1DC0824D4((uint64_t)v16, (uint64_t)(a5 + 6));
  sub_1DC0824D4((uint64_t)v15, (uint64_t)(a5 + 11));
  v10 = a5[5];
  ObjectType = swift_getObjectType();
  v12 = *(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v10 + 16);
  swift_unknownObjectRetain();
  v13 = swift_retain();
  v12(v13, &off_1EA459520, ObjectType, v10);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
  return a5;
}

_QWORD *sub_1DC173AD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD v22[3];
  uint64_t v23;
  _UNKNOWN **v24;
  _QWORD v25[3];
  uint64_t v26;
  _UNKNOWN **v27;

  v8 = *a4;
  v26 = type metadata accessor for ManageWatchlistsRouter();
  v27 = &off_1EA461280;
  v25[0] = a3;
  v23 = v8;
  v24 = &off_1EA44EB80;
  v22[0] = a4;
  type metadata accessor for ManageWatchlistsEventHandler();
  v9 = (_QWORD *)swift_allocObject();
  v10 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v25, v26);
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = (_QWORD *)((char *)v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v14 + 16))(v13, v11);
  v15 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v22, v23);
  v16 = MEMORY[0x1E0C80A78](v15);
  v18 = (_QWORD *)((char *)v22 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v19 + 16))(v18, v16);
  v20 = sub_1DC1739E8(a1, a2, *v13, *v18, v9);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  return v20;
}

_QWORD *sub_1DC173C28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _QWORD *v9;

  v9[3] = 0;
  swift_unknownObjectWeakInit();
  v9[6] = a1;
  v9[7] = a2;
  v9[4] = a3;
  v9[5] = a4;
  sub_1DC0824D4((uint64_t)a5, (uint64_t)(v9 + 8));
  v9[13] = a6;
  v9[14] = a7;
  v9[15] = a8;
  sub_1DC173D68(a9, (uint64_t)v9 + *(_QWORD *)(*v9 + 152));
  __swift_project_boxed_opaque_existential_1(a5, a5[3]);
  sub_1DC080808(&qword_1F034CBE0, (uint64_t (*)(uint64_t))sub_1DC1737C4, (uint64_t)&unk_1DC41CEC0);
  swift_retain();
  swift_unknownObjectRetain();
  swift_retain();
  swift_unknownObjectRetain();
  swift_retain();
  swift_retain();
  sub_1DC400AB4();
  swift_release();
  sub_1DC173DAC(a9);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a5);
  return v9;
}

uint64_t sub_1DC173D68(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ManageWatchlistsContentMode(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC173DAC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ManageWatchlistsContentMode(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1DC173DE8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F034CBE8)
  {
    v0 = sub_1DC402C20();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1F034CBE8);
  }
}

void sub_1DC173E4C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F034CBF8)
  {
    type metadata accessor for CreateWatchlistViewLayoutAttributes();
    v0 = sub_1DC402C20();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1F034CBF8);
  }
}

void destroy for WelcomeViewLayoutAttributes(uint64_t a1)
{

}

uint64_t initializeWithCopy for WelcomeViewLayoutAttributes(uint64_t a1, uint64_t a2)
{
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  void *v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  id v27;

  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  v6 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v6;
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  v7 = *(void **)(a2 + 184);
  *(_QWORD *)(a1 + 184) = v7;
  v8 = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 208) = v8;
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
  v9 = *(_OWORD *)(a2 + 248);
  v10 = *(_OWORD *)(a2 + 280);
  *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 264);
  *(_OWORD *)(a1 + 280) = v10;
  *(_OWORD *)(a1 + 248) = v9;
  v11 = *(_OWORD *)(a2 + 296);
  v12 = *(_OWORD *)(a2 + 312);
  v13 = *(_OWORD *)(a2 + 328);
  v14 = *(_OWORD *)(a2 + 344);
  *(_QWORD *)(a1 + 360) = *(_QWORD *)(a2 + 360);
  *(_OWORD *)(a1 + 328) = v13;
  *(_OWORD *)(a1 + 344) = v14;
  *(_OWORD *)(a1 + 296) = v11;
  *(_OWORD *)(a1 + 312) = v12;
  v15 = *(_OWORD *)(a2 + 480);
  *(_OWORD *)(a1 + 464) = *(_OWORD *)(a2 + 464);
  *(_OWORD *)(a1 + 480) = v15;
  *(_QWORD *)(a1 + 496) = *(_QWORD *)(a2 + 496);
  v16 = *(_OWORD *)(a2 + 416);
  *(_OWORD *)(a1 + 400) = *(_OWORD *)(a2 + 400);
  *(_OWORD *)(a1 + 416) = v16;
  v17 = *(_OWORD *)(a2 + 448);
  *(_OWORD *)(a1 + 432) = *(_OWORD *)(a2 + 432);
  *(_OWORD *)(a1 + 448) = v17;
  v18 = *(_OWORD *)(a2 + 384);
  *(_OWORD *)(a1 + 368) = *(_OWORD *)(a2 + 368);
  *(_OWORD *)(a1 + 384) = v18;
  v19 = *(_OWORD *)(a2 + 616);
  *(_OWORD *)(a1 + 600) = *(_OWORD *)(a2 + 600);
  *(_OWORD *)(a1 + 616) = v19;
  *(_OWORD *)(a1 + 625) = *(_OWORD *)(a2 + 625);
  v20 = *(_OWORD *)(a2 + 552);
  *(_OWORD *)(a1 + 536) = *(_OWORD *)(a2 + 536);
  *(_OWORD *)(a1 + 552) = v20;
  v21 = *(_OWORD *)(a2 + 584);
  *(_OWORD *)(a1 + 568) = *(_OWORD *)(a2 + 568);
  *(_OWORD *)(a1 + 584) = v21;
  v22 = *(_OWORD *)(a2 + 520);
  *(_OWORD *)(a1 + 504) = *(_OWORD *)(a2 + 504);
  *(_OWORD *)(a1 + 520) = v22;
  v23 = *(_OWORD *)(a2 + 664);
  *(_OWORD *)(a1 + 648) = *(_OWORD *)(a2 + 648);
  *(_OWORD *)(a1 + 664) = v23;
  *(_QWORD *)(a1 + 680) = *(_QWORD *)(a2 + 680);
  v24 = *(_OWORD *)(a2 + 704);
  *(_OWORD *)(a1 + 688) = *(_OWORD *)(a2 + 688);
  *(_OWORD *)(a1 + 704) = v24;
  v25 = *(_OWORD *)(a2 + 736);
  *(_OWORD *)(a1 + 720) = *(_OWORD *)(a2 + 720);
  *(_OWORD *)(a1 + 736) = v25;
  v26 = *(_OWORD *)(a2 + 768);
  *(_OWORD *)(a1 + 752) = *(_OWORD *)(a2 + 752);
  *(_OWORD *)(a1 + 768) = v26;
  v27 = v7;
  return a1;
}

uint64_t assignWithCopy for WelcomeViewLayoutAttributes(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  v4 = *(void **)(a2 + 184);
  v5 = *(void **)(a1 + 184);
  *(_QWORD *)(a1 + 184) = v4;
  v6 = v4;

  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
  *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
  *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
  *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
  *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
  *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
  *(_QWORD *)(a1 + 288) = *(_QWORD *)(a2 + 288);
  *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);
  *(_QWORD *)(a1 + 304) = *(_QWORD *)(a2 + 304);
  *(_QWORD *)(a1 + 312) = *(_QWORD *)(a2 + 312);
  *(_QWORD *)(a1 + 320) = *(_QWORD *)(a2 + 320);
  *(_QWORD *)(a1 + 328) = *(_QWORD *)(a2 + 328);
  *(_QWORD *)(a1 + 336) = *(_QWORD *)(a2 + 336);
  *(_QWORD *)(a1 + 344) = *(_QWORD *)(a2 + 344);
  *(_QWORD *)(a1 + 352) = *(_QWORD *)(a2 + 352);
  *(_QWORD *)(a1 + 360) = *(_QWORD *)(a2 + 360);
  *(_QWORD *)(a1 + 368) = *(_QWORD *)(a2 + 368);
  *(_QWORD *)(a1 + 376) = *(_QWORD *)(a2 + 376);
  *(_QWORD *)(a1 + 384) = *(_QWORD *)(a2 + 384);
  *(_QWORD *)(a1 + 392) = *(_QWORD *)(a2 + 392);
  *(_QWORD *)(a1 + 400) = *(_QWORD *)(a2 + 400);
  *(_QWORD *)(a1 + 408) = *(_QWORD *)(a2 + 408);
  *(_QWORD *)(a1 + 416) = *(_QWORD *)(a2 + 416);
  *(_QWORD *)(a1 + 424) = *(_QWORD *)(a2 + 424);
  *(_QWORD *)(a1 + 432) = *(_QWORD *)(a2 + 432);
  *(_QWORD *)(a1 + 440) = *(_QWORD *)(a2 + 440);
  *(_QWORD *)(a1 + 448) = *(_QWORD *)(a2 + 448);
  *(_QWORD *)(a1 + 456) = *(_QWORD *)(a2 + 456);
  *(_QWORD *)(a1 + 464) = *(_QWORD *)(a2 + 464);
  *(_QWORD *)(a1 + 472) = *(_QWORD *)(a2 + 472);
  *(_QWORD *)(a1 + 480) = *(_QWORD *)(a2 + 480);
  *(_QWORD *)(a1 + 488) = *(_QWORD *)(a2 + 488);
  *(_QWORD *)(a1 + 496) = *(_QWORD *)(a2 + 496);
  *(_OWORD *)(a1 + 504) = *(_OWORD *)(a2 + 504);
  v7 = *(_OWORD *)(a2 + 520);
  v8 = *(_OWORD *)(a2 + 536);
  v9 = *(_OWORD *)(a2 + 568);
  *(_OWORD *)(a1 + 552) = *(_OWORD *)(a2 + 552);
  *(_OWORD *)(a1 + 568) = v9;
  *(_OWORD *)(a1 + 520) = v7;
  *(_OWORD *)(a1 + 536) = v8;
  v10 = *(_OWORD *)(a2 + 584);
  v11 = *(_OWORD *)(a2 + 600);
  v12 = *(_OWORD *)(a2 + 616);
  *(_OWORD *)(a1 + 625) = *(_OWORD *)(a2 + 625);
  *(_OWORD *)(a1 + 600) = v11;
  *(_OWORD *)(a1 + 616) = v12;
  *(_OWORD *)(a1 + 584) = v10;
  *(_QWORD *)(a1 + 648) = *(_QWORD *)(a2 + 648);
  *(_QWORD *)(a1 + 656) = *(_QWORD *)(a2 + 656);
  *(_QWORD *)(a1 + 664) = *(_QWORD *)(a2 + 664);
  *(_QWORD *)(a1 + 672) = *(_QWORD *)(a2 + 672);
  *(_QWORD *)(a1 + 680) = *(_QWORD *)(a2 + 680);
  *(_QWORD *)(a1 + 688) = *(_QWORD *)(a2 + 688);
  *(_QWORD *)(a1 + 696) = *(_QWORD *)(a2 + 696);
  *(_QWORD *)(a1 + 704) = *(_QWORD *)(a2 + 704);
  *(_QWORD *)(a1 + 712) = *(_QWORD *)(a2 + 712);
  *(_QWORD *)(a1 + 720) = *(_QWORD *)(a2 + 720);
  *(_QWORD *)(a1 + 728) = *(_QWORD *)(a2 + 728);
  *(_QWORD *)(a1 + 736) = *(_QWORD *)(a2 + 736);
  *(_QWORD *)(a1 + 744) = *(_QWORD *)(a2 + 744);
  *(_QWORD *)(a1 + 752) = *(_QWORD *)(a2 + 752);
  *(_QWORD *)(a1 + 760) = *(_QWORD *)(a2 + 760);
  *(_QWORD *)(a1 + 768) = *(_QWORD *)(a2 + 768);
  *(_QWORD *)(a1 + 776) = *(_QWORD *)(a2 + 776);
  return a1;
}

void *__swift_memcpy784_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x310uLL);
}

uint64_t assignWithTake for WelcomeViewLayoutAttributes(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  void *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  v6 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v6;
  v7 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v7;
  v8 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v8;
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  v9 = *(void **)(a1 + 184);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);

  v10 = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 208) = v10;
  v11 = *(_OWORD *)(a2 + 240);
  *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
  *(_OWORD *)(a1 + 240) = v11;
  v12 = *(_OWORD *)(a2 + 272);
  *(_OWORD *)(a1 + 256) = *(_OWORD *)(a2 + 256);
  *(_OWORD *)(a1 + 272) = v12;
  v13 = *(_OWORD *)(a2 + 304);
  *(_OWORD *)(a1 + 288) = *(_OWORD *)(a2 + 288);
  *(_OWORD *)(a1 + 304) = v13;
  v14 = *(_OWORD *)(a2 + 336);
  *(_OWORD *)(a1 + 320) = *(_OWORD *)(a2 + 320);
  *(_OWORD *)(a1 + 336) = v14;
  v15 = *(_OWORD *)(a2 + 368);
  *(_OWORD *)(a1 + 352) = *(_OWORD *)(a2 + 352);
  *(_OWORD *)(a1 + 368) = v15;
  v16 = *(_OWORD *)(a2 + 400);
  *(_OWORD *)(a1 + 384) = *(_OWORD *)(a2 + 384);
  *(_OWORD *)(a1 + 400) = v16;
  v17 = *(_OWORD *)(a2 + 432);
  *(_OWORD *)(a1 + 416) = *(_OWORD *)(a2 + 416);
  *(_OWORD *)(a1 + 432) = v17;
  v18 = *(_OWORD *)(a2 + 464);
  *(_OWORD *)(a1 + 448) = *(_OWORD *)(a2 + 448);
  *(_OWORD *)(a1 + 464) = v18;
  *(_OWORD *)(a1 + 480) = *(_OWORD *)(a2 + 480);
  *(_QWORD *)(a1 + 496) = *(_QWORD *)(a2 + 496);
  *(_OWORD *)(a1 + 625) = *(_OWORD *)(a2 + 625);
  v19 = *(_OWORD *)(a2 + 616);
  *(_OWORD *)(a1 + 600) = *(_OWORD *)(a2 + 600);
  *(_OWORD *)(a1 + 616) = v19;
  v20 = *(_OWORD *)(a2 + 584);
  *(_OWORD *)(a1 + 568) = *(_OWORD *)(a2 + 568);
  *(_OWORD *)(a1 + 584) = v20;
  v21 = *(_OWORD *)(a2 + 552);
  *(_OWORD *)(a1 + 536) = *(_OWORD *)(a2 + 536);
  *(_OWORD *)(a1 + 552) = v21;
  v22 = *(_OWORD *)(a2 + 520);
  *(_OWORD *)(a1 + 504) = *(_OWORD *)(a2 + 504);
  *(_OWORD *)(a1 + 520) = v22;
  *(_QWORD *)(a1 + 648) = *(_QWORD *)(a2 + 648);
  v23 = *(_OWORD *)(a2 + 672);
  *(_OWORD *)(a1 + 656) = *(_OWORD *)(a2 + 656);
  *(_OWORD *)(a1 + 672) = v23;
  v24 = *(_OWORD *)(a2 + 704);
  *(_OWORD *)(a1 + 688) = *(_OWORD *)(a2 + 688);
  *(_OWORD *)(a1 + 704) = v24;
  v25 = *(_OWORD *)(a2 + 736);
  *(_OWORD *)(a1 + 720) = *(_OWORD *)(a2 + 720);
  *(_OWORD *)(a1 + 736) = v25;
  v26 = *(_OWORD *)(a2 + 768);
  *(_OWORD *)(a1 + 752) = *(_OWORD *)(a2 + 752);
  *(_OWORD *)(a1 + 768) = v26;
  return a1;
}

uint64_t getEnumTagSinglePayload for WelcomeViewLayoutAttributes(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 784))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 184);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for WelcomeViewLayoutAttributes(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 776) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 760) = 0u;
    *(_OWORD *)(result + 744) = 0u;
    *(_OWORD *)(result + 728) = 0u;
    *(_OWORD *)(result + 712) = 0u;
    *(_OWORD *)(result + 696) = 0u;
    *(_OWORD *)(result + 680) = 0u;
    *(_OWORD *)(result + 664) = 0u;
    *(_OWORD *)(result + 648) = 0u;
    *(_OWORD *)(result + 632) = 0u;
    *(_OWORD *)(result + 616) = 0u;
    *(_OWORD *)(result + 600) = 0u;
    *(_OWORD *)(result + 584) = 0u;
    *(_OWORD *)(result + 568) = 0u;
    *(_OWORD *)(result + 552) = 0u;
    *(_OWORD *)(result + 536) = 0u;
    *(_OWORD *)(result + 520) = 0u;
    *(_OWORD *)(result + 504) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 784) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 184) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 784) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for WelcomeViewLayoutAttributes()
{
  return &type metadata for WelcomeViewLayoutAttributes;
}

__n128 __swift_memcpy136_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v2 = *(_OWORD *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  result = *(__n128 *)(a2 + 80);
  v6 = *(_OWORD *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 80) = result;
  return result;
}

uint64_t getEnumTagSinglePayload for WelcomeViewBulletLayoutAttributes(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 136))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for WelcomeViewBulletLayoutAttributes(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 136) = v3;
  return result;
}

ValueMetadata *type metadata accessor for WelcomeViewBulletLayoutAttributes()
{
  return &type metadata for WelcomeViewBulletLayoutAttributes;
}

void destroy for WelcomeViewTitleGroupLayoutAttributes(uint64_t a1)
{

}

uint64_t initializeWithCopy for WelcomeViewTitleGroupLayoutAttributes(uint64_t a1, uint64_t a2)
{
  __int128 v3;
  __int128 v4;
  void *v5;
  id v6;

  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  v5 = *(void **)(a2 + 120);
  *(_QWORD *)(a1 + 120) = v5;
  v6 = v5;
  return a1;
}

_QWORD *assignWithCopy for WelcomeViewTitleGroupLayoutAttributes(_QWORD *a1, _QWORD *a2)
{
  void *v3;
  void *v4;
  id v5;

  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  a1[7] = a2[7];
  a1[8] = a2[8];
  a1[9] = a2[9];
  a1[10] = a2[10];
  a1[11] = a2[11];
  a1[12] = a2[12];
  a1[13] = a2[13];
  a1[14] = a2[14];
  v3 = (void *)a2[15];
  v4 = (void *)a1[15];
  a1[15] = v3;
  v5 = v3;

  return a1;
}

__n128 __swift_memcpy128_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  result = (__n128)a2[4];
  v6 = a2[5];
  v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 64) = result;
  *(_OWORD *)(a1 + 80) = v6;
  return result;
}

uint64_t assignWithTake for WelcomeViewTitleGroupLayoutAttributes(uint64_t a1, uint64_t a2)
{
  __int128 v3;
  __int128 v4;
  __int128 v5;
  void *v6;

  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  v6 = *(void **)(a1 + 120);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);

  return a1;
}

uint64_t getEnumTagSinglePayload for WelcomeViewTitleGroupLayoutAttributes(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 128))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 120);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for WelcomeViewTitleGroupLayoutAttributes(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 120) = 0;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 128) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 120) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 128) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for WelcomeViewTitleGroupLayoutAttributes()
{
  return &type metadata for WelcomeViewTitleGroupLayoutAttributes;
}

uint64_t sub_1DC174860()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for BilingualFeedPromptViewStyler()
{
  return objc_opt_self();
}

uint64_t sub_1DC1748A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t *boxed_opaque_existential_1;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v20[5];

  v7 = *(_QWORD *)(*(_QWORD *)v3 + 48);
  v8 = *(_QWORD *)(*(_QWORD *)v3 + 56);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)v3 + 24), v7);
  v9 = *(_QWORD *)(v8 + 8);
  v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 8);
  v20[3] = v7;
  v20[4] = v8;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v20);
  v12 = v10(a1, v7, v9);
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v20[-1] - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t *, uint64_t, __n128))(v16 + 16))(v15, boxed_opaque_existential_1, v7, v13);
  v17 = sub_1DC174998((uint64_t)v15, a2, v7, v8);
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  *a3 = v17;
  return result;
}

uint64_t sub_1DC174998(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *boxed_opaque_existential_1;
  uint64_t v7;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;

  v10 = a3;
  v11 = a4;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v9);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 32))(boxed_opaque_existential_1, a1, a3);
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = 0x4030000000000000;
  sub_1DC097DD0(&v9, v7 + 24);
  return v7;
}

uint64_t sub_1DC174A18(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;

  v2 = v1;
  v4 = sub_1DC401D44();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for StocksActivity.Article(0);
  v27 = *(_QWORD *)(v8 - 8);
  v9 = *(_QWORD *)(v27 + 64);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v26 - v12;
  v14 = type metadata accessor for StocksActivity(0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC174E80(v2, (uint64_t)v16);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      __swift_project_boxed_opaque_existential_1(a1, a1[3]);
      sub_1DC13143C();
      if (!sub_1DC4025FC())
      {
        __break(1u);
LABEL_14:
        __break(1u);
LABEL_15:
        __break(1u);
        JUMPOUT(0x1DC174E6CLL);
      }
      sub_1DC17554C();
      swift_allocObject();
      v17 = sub_1DC402DA0();
      swift_release();
      break;
    case 1u:
      __swift_project_boxed_opaque_existential_1(a1, a1[3]);
      sub_1DC10D720();
      if (!sub_1DC4025FC())
        goto LABEL_15;
      sub_1DC175964(0, (unint64_t *)&qword_1EDB34880, (void (*)(uint64_t))type metadata accessor for ForYouSectionDescriptor, (void (*)(uint64_t))MEMORY[0x1E0DBA2A8]);
      v19 = &v16[*(int *)(v18 + 48)];
      sub_1DC17554C();
      swift_allocObject();
      v17 = sub_1DC402DA0();
      v20 = sub_1DC4059F8();
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
      sub_1DC0926D8((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for ForYouSectionDescriptor);
      break;
    case 2u:
      __swift_project_boxed_opaque_existential_1(a1, a1[3]);
      type metadata accessor for StockChartLoadingState();
      if (!sub_1DC4025FC())
        goto LABEL_14;
      sub_1DC17554C();
      swift_allocObject();
      v17 = sub_1DC402DA0();
      sub_1DC0926D8((uint64_t)v16, type metadata accessor for StocksActivity);
      break;
    case 4u:
      sub_1DC1750D8((uint64_t)v16, (uint64_t)v13);
      (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0D57318], v4);
      sub_1DC17511C();
      swift_allocObject();
      v22 = sub_1DC402614();
      sub_1DC17554C();
      swift_allocObject();
      v17 = sub_1DC402DA0();
      sub_1DC1750D8((uint64_t)v13, (uint64_t)v10);
      v23 = (*(unsigned __int8 *)(v27 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
      v24 = swift_allocObject();
      *(_QWORD *)(v24 + 16) = v22;
      sub_1DC1750D8((uint64_t)v10, v24 + v23);
      return v17;
    default:
      if (qword_1EDB27920 != -1)
        swift_once();
      v17 = qword_1EDB305E8;
      v21 = qword_1EDB305F0;
      swift_retain();
      sub_1DC113F04(v21);
      sub_1DC0926D8((uint64_t)v16, type metadata accessor for StocksActivity);
      return v17;
  }
  return v17;
}

uint64_t sub_1DC174E80(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for StocksActivity(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC174EC8(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(_QWORD *))
{
  uint64_t result;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4018AC();
  sub_1DC4024DC();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC403340();
  sub_1DC4024E8();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC0A3390(0, (unint64_t *)&qword_1EDB2ACC0);
  result = sub_1DC4024E8();
  if (a6)
    return a6(a1);
  return result;
}

uint64_t sub_1DC174FD4(_QWORD *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4018AC();
  sub_1DC4024DC();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC0A3390(0, (unint64_t *)&qword_1EDB2ACC0);
  return sub_1DC4024E8();
}

uint64_t sub_1DC175080()
{
  uint64_t result;

  sub_1DC17554C();
  swift_allocObject();
  result = sub_1DC402D58();
  qword_1EDB305F0 = 0;
  qword_1EDB305F8 = 0;
  qword_1EDB305E8 = result;
  return result;
}

uint64_t sub_1DC1750D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for StocksActivity.Article(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1DC17511C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F034CC08)
  {
    sub_1DC401D44();
    sub_1DC401D38();
    sub_1DC080808(&qword_1F034CC10, (uint64_t (*)(uint64_t))MEMORY[0x1E0D572F8], MEMORY[0x1E0D572F0]);
    v0 = sub_1DC40262C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1F034CC08);
  }
}

uint64_t sub_1DC1751AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a2;
  swift_retain();
  sub_1DC405014();
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = sub_1DC1759F0;
  *(_QWORD *)(v5 + 24) = v4;
  sub_1DC402A88();
  swift_release();
  return swift_release();
}

uint64_t sub_1DC175244(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a2;
  swift_retain();
  sub_1DC405014();
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = sub_1DC1759F0;
  *(_QWORD *)(v5 + 24) = v4;
  sub_1DC402A88();
  swift_release();
  return swift_release();
}

uint64_t sub_1DC1752DC@<X0>(_QWORD *a1@<X0>, void (*a2)(uint64_t)@<X1>, uint64_t a3@<X8>)
{
  unsigned int *v4;
  uint64_t v5;
  uint64_t v6;

  if ((*a1 & 0x8000000000000000) != 0)
  {
    v4 = (unsigned int *)MEMORY[0x1E0DB4770];
  }
  else
  {
    a2(1);
    v4 = (unsigned int *)MEMORY[0x1E0DB4768];
  }
  v5 = *v4;
  v6 = sub_1DC402BA8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(a3, v5, v6);
}

uint64_t sub_1DC175340(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a2;
  swift_retain();
  swift_retain();
  sub_1DC402A7C();
  swift_release();
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = sub_1DC1759F0;
  *(_QWORD *)(v5 + 24) = v4;
  sub_1DC402A88();
  swift_release();
  return swift_release();
}

uint64_t sub_1DC1753F0@<X0>(_QWORD *a1@<X0>, void (*a2)(uint64_t)@<X1>, uint64_t a3@<X8>)
{
  unsigned int *v4;
  uint64_t v5;
  uint64_t v6;

  if (*a1 >= 2uLL)
  {
    a2(1);
    v4 = (unsigned int *)MEMORY[0x1E0DB4768];
  }
  else
  {
    v4 = (unsigned int *)MEMORY[0x1E0DB4770];
  }
  v5 = *v4;
  v6 = sub_1DC402BA8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(a3, v5, v6);
}

uint64_t sub_1DC175458(_QWORD *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  return sub_1DC40250C();
}

uint64_t sub_1DC1754AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a2;
  swift_retain();
  sub_1DC402620();
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = sub_1DC1759F0;
  *(_QWORD *)(v5 + 24) = v4;
  sub_1DC402A88();
  swift_release();
  return swift_release();
}

uint64_t sub_1DC175544(uint64_t a1, uint64_t a2)
{
  return sub_1DC1754AC(a1, a2);
}

void sub_1DC17554C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB296E8)
  {
    v0 = sub_1DC402DAC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB296E8);
  }
}

uint64_t sub_1DC1755A0@<X0>(uint64_t a1@<X0>, void (*a2)(uint64_t)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  int v11;
  unsigned int *v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v6 = sub_1DC401D44();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v7 + 16))(v10, a1, v6, v8);
  v11 = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v10, v6);
  if (v11 == *MEMORY[0x1E0D57318] || v11 == *MEMORY[0x1E0D57320])
  {
    v13 = (unsigned int *)MEMORY[0x1E0DB4770];
  }
  else
  {
    if (v11 != *MEMORY[0x1E0D57308] && v11 != *MEMORY[0x1E0D57310])
    {
      v17 = *MEMORY[0x1E0DB4770];
      v18 = sub_1DC402BA8();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(a3, v17, v18);
      return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    }
    a2(1);
    v13 = (unsigned int *)MEMORY[0x1E0DB4768];
  }
  v15 = *v13;
  v16 = sub_1DC402BA8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(a3, v15, v16);
}

uint64_t sub_1DC17570C(_QWORD *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC17511C();
  StocksActivity.Article.articleID.getter();
  sub_1DC4024F4();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DC175790()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int EnumCaseMultiPayload;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for StocksActivity.Article(0) - 8) + 80);
  swift_release();
  v2 = v0 + ((v1 + 24) & ~v1);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_unknownObjectRelease();
  }
  else
  {
    sub_1DC401BB8();
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    swift_release();
    if (EnumCaseMultiPayload != 1)
    {
      sub_1DC175964(0, (unint64_t *)&qword_1EDB42670, (void (*)(uint64_t))MEMORY[0x1E0D57E30], (void (*)(uint64_t))MEMORY[0x1E0D57888]);
      v5 = v2 + *(int *)(v4 + 48);
      v6 = sub_1DC40202C();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
    }
    sub_1DC1446B4();
    v8 = v2 + *(int *)(v7 + 64);
    if (*(_QWORD *)(v8 + 24))
      __swift_destroy_boxed_opaque_existential_1(v8);
  }
  return swift_deallocObject();
}

void sub_1DC1758A0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB39A70)
  {
    sub_1DC0A3390(255, (unint64_t *)&unk_1EDB39A60);
    v0 = sub_1DC4095A4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB39A70);
  }
}

uint64_t sub_1DC175904(_QWORD *a1)
{
  type metadata accessor for StocksActivity.Article(0);
  return sub_1DC17570C(a1);
}

uint64_t sub_1DC175944(uint64_t a1, uint64_t a2)
{
  return sub_1DC175340(a1, a2);
}

uint64_t sub_1DC17594C(_QWORD *a1)
{
  return sub_1DC175458(a1);
}

void sub_1DC175964(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(uint64_t))
{
  unint64_t TupleTypeMetadata2;
  uint64_t v7;

  if (!*a2)
  {
    a3(255);
    a4(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v7)
      atomic_store(TupleTypeMetadata2, a2);
  }
}

uint64_t sub_1DC1759E0(uint64_t a1, uint64_t a2)
{
  return sub_1DC175244(a1, a2);
}

uint64_t sub_1DC1759E8(uint64_t a1, uint64_t a2)
{
  return sub_1DC1751AC(a1, a2);
}

uint64_t sub_1DC1759F4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DC175A18@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1DC1752DC(a1, *(void (**)(uint64_t))(v2 + 16), a2);
}

uint64_t sub_1DC175A30@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1DC1753F0(a1, *(void (**)(uint64_t))(v2 + 16), a2);
}

uint64_t sub_1DC175A38(char a1)
{
  uint64_t v1;
  uint64_t (*v2)(char *);
  char v4;

  v2 = *(uint64_t (**)(char *))(v1 + 16);
  v4 = a1;
  return v2(&v4);
}

uint64_t sub_1DC175A68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1DC1755A0(a1, *(void (**)(uint64_t))(v2 + 16), a2);
}

ValueMetadata *type metadata accessor for CalendarAccessRequestAlert()
{
  return &type metadata for CalendarAccessRequestAlert;
}

uint64_t sub_1DC175AA8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *MEMORY[0x1E0DB9128];
  v3 = sub_1DC4050F8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

uint64_t sub_1DC175AEC()
{
  uint64_t ObjCClassFromMetadata;
  id v1;
  uint64_t v2;

  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v2 = sub_1DC3FFC80();

  return v2;
}

uint64_t sub_1DC175BB8()
{
  uint64_t ObjCClassFromMetadata;
  id v1;
  uint64_t v2;

  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v2 = sub_1DC3FFC80();

  return v2;
}

uint64_t sub_1DC175C6C()
{
  uint64_t ObjCClassFromMetadata;
  id v1;
  uint64_t v2;

  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1DC3FFC80();

  v2 = sub_1DC408A70();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_1DC175D54()
{
  uint64_t ObjCClassFromMetadata;
  id v1;
  uint64_t v2;

  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1DC3FFC80();

  v2 = sub_1DC408A70();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_1DC175E3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0;
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 56));
  sub_1DC080808(&qword_1EDB32388, (uint64_t (*)(uint64_t))type metadata accessor for StockListDataManager, (uint64_t)&unk_1DC410B58);
  sub_1DC400AD8();
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + 72), *(_QWORD *)(v1 + 96));
  sub_1DC080808(&qword_1EDB32390, (uint64_t (*)(uint64_t))type metadata accessor for StockListDataManager, (uint64_t)&unk_1DC410B30);
  sub_1DC400D18();
  sub_1DC148A20(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  __swift_destroy_boxed_opaque_existential_1(v0 + 72);
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 128);

  v2 = v0 + OBJC_IVAR____TtC8StocksUI20StockListDataManager_lastActiveWatchlist;
  v3 = sub_1DC40124C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1DC175F6C()
{
  sub_1DC175E3C();
  return swift_deallocClassInstance();
}

uint64_t sub_1DC175F90()
{
  return type metadata accessor for StockListDataManager();
}

uint64_t sub_1DC175F98(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, _QWORD, uint64_t);
  uint64_t v12;
  void (*v13)(char *, uint64_t);
  uint64_t v15;

  v2 = sub_1DC4024D0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v15 - v7;
  __swift_project_boxed_opaque_existential_1((_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 96));
  sub_1DC11200C();
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1DC40DC10;
  *(_QWORD *)(v9 + 32) = sub_1DC4010B4();
  *(_QWORD *)(v9 + 40) = v10;
  v11 = *(void (**)(char *, _QWORD, uint64_t))(v3 + 104);
  v11(v8, *MEMORY[0x1E0DB32A8], v2);
  v11(v5, *MEMORY[0x1E0DB32B0], v2);
  v12 = sub_1DC400CF4();
  swift_bridgeObjectRelease();
  v13 = *(void (**)(char *, uint64_t))(v3 + 8);
  v13(v5, v2);
  v13(v8, v2);
  return v12;
}

uint64_t sub_1DC1760F4()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  void (*v15)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v18;

  sub_1DC0FED34(0);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v18 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v18 - v4;
  v6 = sub_1DC401030();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1DC400508();
  v11 = sub_1DC4010B4();
  if (*(_QWORD *)(v10 + 16) && (v13 = sub_1DC0ED368(v11, v12), (v14 & 1) != 0))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v7 + 16))(v5, *(_QWORD *)(v10 + 56) + *(_QWORD *)(v7 + 72) * v13, v6);
    v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
    v15(v5, 0, 1, v6);
  }
  else
  {
    v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
    v15(v5, 1, 1, v6);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_1DC0926D8((uint64_t)v5, (uint64_t (*)(_QWORD))sub_1DC0FED34);
    v15(v2, 1, 1, v6);
    sub_1DC089DA4(0, &qword_1EDB29668, (uint64_t (*)(uint64_t))sub_1DC0FED34, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    return sub_1DC402D58();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v5, v6);
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v2, v9, v6);
    v15(v2, 0, 1, v6);
    sub_1DC089DA4(0, &qword_1EDB29668, (uint64_t (*)(uint64_t))sub_1DC0FED34, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    v16 = sub_1DC402D58();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  return v16;
}

uint64_t sub_1DC176354(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, _QWORD, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v18[2];
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v20 = sub_1DC4025B4();
  v2 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  v4 = (char *)v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1DC3FFFEC();
  v21 = *(_QWORD *)(v5 - 8);
  v22 = v5;
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1DC4024D0();
  v9 = *(_QWORD *)(v8 - 8);
  v19 = v8;
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1[19];
  v18[1] = a1[20];
  v18[0] = __swift_project_boxed_opaque_existential_1(a1 + 16, v12);
  sub_1DC4010B4();
  (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E0DB32A8], v8);
  sub_1DC3FFFE0();
  v13 = *(void (**)(char *, _QWORD, uint64_t))(v2 + 104);
  v14 = v2;
  v15 = v20;
  v13(v4, *MEMORY[0x1E0DB3560], v20);
  v16 = sub_1DC400BA4();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v4, v15);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v7, v22);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v19);
  return v16;
}

uint64_t sub_1DC176520()
{
  uint64_t v0;

  sub_1DC133BB0(0);
  MEMORY[0x1E0C80A78](v0);
  sub_1DC4002C8();
  sub_1DC089DA4(0, &qword_1F034CC18, (uint64_t (*)(uint64_t))sub_1DC133BB0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  return sub_1DC402D58();
}

uint64_t sub_1DC1765C8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v8;

  v2 = sub_1DC40124C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1 + 9, a1[12]);
  __swift_project_boxed_opaque_existential_1(a1 + 4, a1[7]);
  sub_1DC400A60();
  sub_1DC401228();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v6 = sub_1DC400D00();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1DC1766C0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  char *v8;
  void (*v9)(char *, uint64_t, uint64_t, __n128);
  unint64_t v10;
  uint64_t v11;
  void (*v12)(unint64_t, char *, uint64_t);
  uint64_t v13;
  void *v14;
  uint64_t v15;
  _QWORD v17[2];

  v3 = *v1;
  v17[0] = a1;
  v17[1] = v3;
  v4 = sub_1DC4010E4();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v5 + 16);
  v9(v8, a1, v4, v7);
  v10 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v11 = swift_allocObject();
  v12 = *(void (**)(unint64_t, char *, uint64_t))(v5 + 32);
  v12(v11 + v10, v8, v4);
  sub_1DC400514();
  sub_1DC402E00();
  swift_release();
  ((void (*)(char *, _QWORD, uint64_t))v9)(v8, v17[0], v4);
  v13 = swift_allocObject();
  v12(v13 + v10, v8, v4);
  v14 = (void *)sub_1DC402C80();
  sub_1DC0FED34(0);
  v15 = sub_1DC402CF8();
  swift_release();
  swift_release();

  return v15;
}

uint64_t sub_1DC176854(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  unint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v11;

  v2 = sub_1DC4010E4();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  v5 = MEMORY[0x1E0C80A78](v2);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v3 + 16))((char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2, v5);
  v6 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v7 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v7 + v6, (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
  sub_1DC400370();
  sub_1DC402E00();
  swift_release();
  v8 = (void *)sub_1DC402C80();
  sub_1DC133BB0(0);
  v9 = sub_1DC402CF8();
  swift_release();

  return v9;
}

uint64_t sub_1DC176990()
{
  sub_1DC400514();
  return sub_1DC402E00();
}

uint64_t sub_1DC1769DC(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v15;
  uint64_t result;
  uint64_t v17;
  uint64_t ObjectType;
  uint64_t v19;

  v3 = v2;
  v6 = sub_1DC40124C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC400A60();
  v10 = sub_1DC4011E0();
  v12 = v11;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  if (v10 == sub_1DC4011E0() && v12 == v13)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v15 = sub_1DC4099E8();
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    if ((v15 & 1) == 0)
      return result;
  }
  result = MEMORY[0x1DF0CAD78](v3 + 16);
  if (result)
  {
    v17 = *(_QWORD *)(v3 + 24);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(v17 + 8))(v3, &off_1EA451150, a2, ObjectType, v17);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1DC176B40(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t ObjectType;

  result = MEMORY[0x1DF0CAD78](v2 + 16);
  if (result)
  {
    v5 = *(_QWORD *)(v2 + 24);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(v5 + 24))(v2, &off_1EA451150, a2, ObjectType, v5);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1DC176BB4()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

void sub_1DC176BD8(uint64_t a1)
{
  sub_1DC089DA4(a1, &qword_1EDB28E40, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF270], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

uint64_t sub_1DC176BF8(uint64_t a1)
{
  return sub_1DC176C34(a1, (uint64_t (*)(uint64_t, uint64_t))sub_1DC176354);
}

uint64_t sub_1DC176C18(uint64_t a1)
{
  return sub_1DC176C34(a1, (uint64_t (*)(uint64_t, uint64_t))sub_1DC175F98);
}

uint64_t sub_1DC176C34(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(sub_1DC4010E4() - 8) + 80);
  return a2(a1, v2 + ((v5 + 16) & ~v5));
}

uint64_t objectdestroy_2Tm_0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_1DC4010E4();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_1DC176CEC()
{
  sub_1DC4010E4();
  return sub_1DC1760F4();
}

uint64_t type metadata accessor for ArticleErrorMessageFactoryProvider()
{
  return objc_opt_self();
}

uint64_t sub_1DC176D94()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_1DC176E00(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  uint64_t *v7;
  uint64_t v8;
  id v9;
  void *v10;
  void *v11;
  uint64_t result;
  uint64_t v13;

  v2 = sub_1DC407EAC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = 0;
  switch(a1)
  {
    case 0:
    case 3:
      goto LABEL_12;
    case 1:
      if (qword_1F034B1E0 != -1)
        swift_once();
      v7 = qword_1F0368DB8;
      goto LABEL_11;
    case 4:
    case 6:
      if (qword_1F034B1F8 != -1)
        swift_once();
      v7 = qword_1F0368E00;
      goto LABEL_11;
    case 5:
      if (qword_1F034B1F0 != -1)
        swift_once();
      v7 = qword_1F0368DE8;
LABEL_11:
      v8 = __swift_project_value_buffer(v2, (uint64_t)v7);
      (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v8, v2);
      v9 = objc_allocWithZone(MEMORY[0x1E0D62940]);
      _s8StocksUI16OfflineAlertableV5titleSSSgvg_0();
      v10 = (void *)sub_1DC408A1C();
      swift_bridgeObjectRelease();
      _s8StocksUI16OfflineAlertableV7messageSSSgvg_0();
      v11 = (void *)sub_1DC408A1C();
      swift_bridgeObjectRelease();
      v6 = objc_msgSend(v9, sel_initWithTitle_subtitle_, v10, v11);

      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
LABEL_12:
      result = (uint64_t)v6;
      break;
    default:
      result = sub_1DC409838();
      __break(1u);
      break;
  }
  return result;
}

uint64_t *sub_1DC177014(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1DC4052FC();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    *(_QWORD *)v9 = *(_QWORD *)v10;
    v9[8] = v10[8];
  }
  return a1;
}

uint64_t sub_1DC1770AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = sub_1DC4052FC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_QWORD *)v8 = *(_QWORD *)v9;
  *(_BYTE *)(v8 + 8) = *(_BYTE *)(v9 + 8);
  return a1;
}

uint64_t sub_1DC177118(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  v6 = sub_1DC4052FC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_BYTE *)(v9 + 8);
  *(_QWORD *)v8 = *(_QWORD *)v9;
  *(_BYTE *)(v8 + 8) = v10;
  return a1;
}

uint64_t sub_1DC177184(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = sub_1DC4052FC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_QWORD *)v8 = *(_QWORD *)v9;
  *(_BYTE *)(v8 + 8) = *(_BYTE *)(v9 + 8);
  return a1;
}

uint64_t sub_1DC1771F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = sub_1DC4052FC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_QWORD *)v8 = *(_QWORD *)v9;
  *(_BYTE *)(v8 + 8) = *(_BYTE *)(v9 + 8);
  return a1;
}

uint64_t sub_1DC17725C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC177268(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1DC4052FC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_1DC1772A4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC1772B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1DC4052FC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t getEnumTagSinglePayload for TickerSectionDescriptor(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for TickerSectionDescriptor(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 8) = v3;
  return result;
}

void sub_1DC177338(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[2];
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v17 = a2;
  v16 = sub_1DC401A5C();
  MEMORY[0x1E0C80A78](v16);
  v15[1] = (char *)v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1DC401A80();
  MEMORY[0x1E0C80A78](v4);
  v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1DC089DA4(0, &qword_1EDB291C8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D56DE8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v15 - v7;
  sub_1DC089DA4(0, (unint64_t *)&unk_1EDB291F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D57010], v5);
  MEMORY[0x1E0C80A78](v9);
  v11 = (_QWORD *)((char *)v15 - v10);
  v12 = sub_1DC401A50();
  MEMORY[0x1E0C80A78](v12);
  v18 = *a1;
  v13 = v18;
  sub_1DC3647FC();
  v18 = v13;
  sub_1DC3649B4();
  v18 = v13;
  sub_1DC364B74(v11);
  v14 = sub_1DC401A38();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v8, 1, 1, v14);
  sub_1DC401A44();
  __asm { BR              X9 }
}

uint64_t sub_1DC17752C()
{
  int v0;
  unint64_t v1;
  unint64_t v2;

  sub_1DC17766C(v1);
  sub_1DC17766C(v1);
  sub_1DC405404();
  v2 = sub_1DC17769C(v1);
  return ((uint64_t (*)(unint64_t))((char *)sub_1DC177570 + 4 * byte_1DC410CDD[v0]))(v2);
}

uint64_t sub_1DC177570()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1DC17766C(v0);
  sub_1DC4053F8();
  sub_1DC17769C(v0);
  sub_1DC17766C(v0);
  sub_1DC4053EC();
  sub_1DC17769C(v0);
  sub_1DC17769C(v0);
  sub_1DC17769C(v0);
  v2 = MEMORY[0x1E0DEE9D8];
  sub_1DC401A74();
  *(_QWORD *)(v1 - 128) = v2;
  sub_1DC1776CC();
  sub_1DC089DA4(0, &qword_1EDB3F680, (uint64_t (*)(uint64_t))MEMORY[0x1E0D56E08], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1DC177714();
  sub_1DC40964C();
  return sub_1DC401A68();
}

unint64_t sub_1DC17766C(unint64_t result)
{
  switch(result >> 61)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
      result = swift_retain();
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1DC17769C(unint64_t result)
{
  switch(result >> 61)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
      result = swift_release();
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1DC1776CC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EDB291D0;
  if (!qword_1EDB291D0)
  {
    v1 = sub_1DC401A5C();
    result = MEMORY[0x1DF0CAB8C](MEMORY[0x1E0D56E10], v1);
    atomic_store(result, (unint64_t *)&qword_1EDB291D0);
  }
  return result;
}

unint64_t sub_1DC177714()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EDB3F688;
  if (!qword_1EDB3F688)
  {
    sub_1DC089DA4(255, &qword_1EDB3F680, (uint64_t (*)(uint64_t))MEMORY[0x1E0D56E08], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1DF0CAB8C](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1EDB3F688);
  }
  return result;
}

uint64_t sub_1DC177774(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1DC4052FC();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t sub_1DC1777B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1DC4052FC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_1DC1777F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1DC4052FC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_1DC177838(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1DC4052FC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_1DC17787C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1DC4052FC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_1DC1778C0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC1778CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1DC4052FC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_1DC177908()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC177914(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1DC4052FC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for StockSearchSectionHeaderViewLayoutOptions()
{
  uint64_t result;

  result = qword_1F034CCE8;
  if (!qword_1F034CCE8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1DC177990()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

double sub_1DC1779BC@<D0>(double *a1@<X8>)
{
  uint64_t v1;

  return sub_1DC21FB7C(v1, a1);
}

double sub_1DC1779C4@<D0>(double *a1@<X8>)
{
  uint64_t v1;

  return sub_1DC21FB70(v1, a1);
}

uint64_t sub_1DC1779D0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;

  v4 = sub_1DC4010E4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  v8 = sub_1DC40103C();
  v10 = v9;
  v11 = sub_1DC4010B4();
  v13 = v12;
  v14 = sub_1DC4010CC();
  v16 = v15;
  result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  a2[2] = v8;
  a2[3] = v10;
  a2[4] = v11;
  a2[5] = v13;
  a2[6] = v14;
  a2[7] = v16;
  *a2 = 0x6C6F626D7973;
  a2[1] = 0xE600000000000000;
  return result;
}

uint64_t sub_1DC177AB4()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1DC177AF0(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  void *v11;
  const void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  int *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(uint64_t, uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int *v56;
  uint64_t v57;
  uint64_t v58;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v16 = *a2;
    *(_QWORD *)a1 = *a2;
    v17 = v16 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
    v5 = *(int *)(a3 + 28);
    v6 = a1 + v5;
    v7 = (uint64_t)a2 + v5;
    v8 = sub_1DC4010E4();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
    v9 = (int *)type metadata accessor for StockViewModel();
    v10 = v9[5];
    v11 = (void *)(v6 + v10);
    v12 = (const void *)(v7 + v10);
    v13 = sub_1DC401030();
    v14 = *(_QWORD *)(v13 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    {
      sub_1DC089DA4(0, &qword_1EDB28DC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF040], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v14 + 16))(v11, v12, v13);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
    v18 = v9[6];
    v19 = (char *)(v6 + v18);
    v20 = (char *)(v7 + v18);
    v21 = (int *)type metadata accessor for StockSparklineViewModel(0);
    v22 = *((_QWORD *)v21 - 1);
    v58 = a1;
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v22 + 48))(v20, 1, v21))
    {
      sub_1DC089DA4(0, &qword_1EDB353E0, type metadata accessor for StockSparklineViewModel, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
    else
    {
      v24 = sub_1DC408614();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v19, v20, v24);
      v25 = v21[5];
      v26 = &v19[v25];
      v27 = &v20[v25];
      *(_QWORD *)v26 = *(_QWORD *)v27;
      v26[8] = v27[8];
      v28 = v21[6];
      v29 = &v19[v28];
      v30 = &v20[v28];
      *(_QWORD *)v29 = *(_QWORD *)v30;
      v29[8] = v30[8];
      v19[v21[7]] = v20[v21[7]];
      v31 = v21[8];
      v32 = &v19[v31];
      v33 = &v20[v31];
      v34 = sub_1DC400F7C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v32, v33, v34);
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v22 + 56))(v19, 0, 1, v21);
    }
    v35 = v9[7];
    v56 = v9;
    v57 = v6;
    v36 = v6 + v35;
    v37 = v7 + v35;
    *(_QWORD *)v36 = *(_QWORD *)(v7 + v35);
    *(_BYTE *)(v36 + 8) = *(_BYTE *)(v7 + v35 + 8);
    *(_QWORD *)(v36 + 16) = *(_QWORD *)(v7 + v35 + 16);
    *(_BYTE *)(v36 + 24) = *(_BYTE *)(v7 + v35 + 24);
    *(_QWORD *)(v36 + 32) = *(_QWORD *)(v7 + v35 + 32);
    *(_BYTE *)(v36 + 40) = *(_BYTE *)(v7 + v35 + 40);
    v38 = *(_QWORD *)(v7 + v35 + 56);
    *(_QWORD *)(v36 + 48) = *(_QWORD *)(v7 + v35 + 48);
    *(_QWORD *)(v36 + 56) = v38;
    v39 = *(_QWORD *)(v7 + v35 + 72);
    *(_QWORD *)(v36 + 64) = *(_QWORD *)(v7 + v35 + 64);
    *(_QWORD *)(v36 + 72) = v39;
    *(_BYTE *)(v36 + 80) = *(_BYTE *)(v7 + v35 + 80);
    v40 = type metadata accessor for PriceViewModel();
    v41 = *(int *)(v40 + 40);
    v42 = v36 + v41;
    v43 = v37 + v41;
    v44 = sub_1DC4011C8();
    v45 = v7;
    v46 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v46(v42, v43, v44);
    v47 = *(int *)(v40 + 44);
    v48 = v36 + v47;
    v49 = v37 + v47;
    v50 = sub_1DC400118();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 16))(v48, v49, v50);
    v51 = v56[8];
    v52 = v57 + v51;
    v53 = v45 + v51;
    v54 = sub_1DC4008EC();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 16))(v52, v53, v54);
    *(_BYTE *)(v57 + v56[9]) = *(_BYTE *)(v45 + v56[9]);
    return v58;
  }
  return v17;
}

uint64_t sub_1DC177E70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(void *, uint64_t, uint64_t);
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  _BYTE *v20;
  int *v21;
  uint64_t v22;
  uint64_t (*v23)(_BYTE *, uint64_t, int *);
  int v24;
  int v25;
  uint64_t (*v26)(uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(int *)(a3 + 28);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_1DC4010E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v5, v6, v7);
  v8 = (int *)type metadata accessor for StockViewModel();
  v9 = v8[5];
  v10 = (void *)(v5 + v9);
  v11 = (void *)(v6 + v9);
  v12 = sub_1DC401030();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14(v11, 1, v12);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(void *, void *, uint64_t))(v13 + 16))(v10, v11, v12);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v16)
  {
    (*(void (**)(void *, uint64_t))(v13 + 8))(v10, v12);
LABEL_6:
    sub_1DC089DA4(0, &qword_1EDB28DC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF040], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v13 + 24))(v10, v11, v12);
LABEL_7:
  v18 = v8[6];
  v19 = (_BYTE *)(v5 + v18);
  v20 = (_BYTE *)(v6 + v18);
  v21 = (int *)type metadata accessor for StockSparklineViewModel(0);
  v22 = *((_QWORD *)v21 - 1);
  v23 = *(uint64_t (**)(_BYTE *, uint64_t, int *))(v22 + 48);
  v24 = v23(v19, 1, v21);
  v25 = v23(v20, 1, v21);
  if (v24)
  {
    if (!v25)
    {
      v28 = sub_1DC408614();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v19, v20, v28);
      v29 = v21[5];
      v30 = &v19[v29];
      v31 = &v20[v29];
      v32 = *(_QWORD *)v31;
      v30[8] = v31[8];
      *(_QWORD *)v30 = v32;
      v33 = v21[6];
      v34 = &v19[v33];
      v35 = &v20[v33];
      LOBYTE(v32) = v35[8];
      *(_QWORD *)v34 = *(_QWORD *)v35;
      v34[8] = v32;
      v19[v21[7]] = v20[v21[7]];
      v36 = v21[8];
      v37 = &v19[v36];
      v38 = &v20[v36];
      v39 = sub_1DC400F7C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v37, v38, v39);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v22 + 56))(v19, 0, 1, v21);
      goto LABEL_16;
    }
    v26 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  }
  else
  {
    if (!v25)
    {
      v40 = sub_1DC408614();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v40 - 8) + 24))(v19, v20, v40);
      v41 = v21[5];
      v42 = &v19[v41];
      v43 = &v20[v41];
      v44 = *(_QWORD *)v43;
      v42[8] = v43[8];
      *(_QWORD *)v42 = v44;
      v45 = v21[6];
      v46 = &v19[v45];
      v47 = &v20[v45];
      LOBYTE(v44) = v47[8];
      *(_QWORD *)v46 = *(_QWORD *)v47;
      v46[8] = v44;
      v19[v21[7]] = v20[v21[7]];
      v48 = v21[8];
      v49 = &v19[v48];
      v50 = &v20[v48];
      v51 = sub_1DC400F7C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 24))(v49, v50, v51);
      goto LABEL_16;
    }
    sub_1DC0926D8((uint64_t)v19, type metadata accessor for StockSparklineViewModel);
    v26 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  }
  sub_1DC089DA4(0, &qword_1EDB353E0, type metadata accessor for StockSparklineViewModel, v26);
  memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
LABEL_16:
  v52 = v8[7];
  v53 = v5 + v52;
  v54 = v6 + v52;
  v55 = *(_QWORD *)(v6 + v52);
  *(_BYTE *)(v53 + 8) = *(_BYTE *)(v54 + 8);
  *(_QWORD *)v53 = v55;
  v56 = *(_QWORD *)(v54 + 16);
  *(_BYTE *)(v53 + 24) = *(_BYTE *)(v54 + 24);
  *(_QWORD *)(v53 + 16) = v56;
  v57 = *(_QWORD *)(v54 + 32);
  *(_BYTE *)(v53 + 40) = *(_BYTE *)(v54 + 40);
  *(_QWORD *)(v53 + 32) = v57;
  *(_QWORD *)(v53 + 48) = *(_QWORD *)(v54 + 48);
  *(_QWORD *)(v53 + 56) = *(_QWORD *)(v54 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v53 + 64) = *(_QWORD *)(v54 + 64);
  *(_QWORD *)(v53 + 72) = *(_QWORD *)(v54 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v53 + 80) = *(_BYTE *)(v54 + 80);
  v58 = type metadata accessor for PriceViewModel();
  v59 = *(int *)(v58 + 40);
  v60 = v53 + v59;
  v61 = v54 + v59;
  v62 = sub_1DC4011C8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 24))(v60, v61, v62);
  v63 = *(int *)(v58 + 44);
  v64 = v53 + v63;
  v65 = v54 + v63;
  v66 = sub_1DC400118();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 24))(v64, v65, v66);
  v67 = v8[8];
  v68 = v5 + v67;
  v69 = v6 + v67;
  v70 = sub_1DC4008EC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v70 - 8) + 24))(v68, v69, v70);
  *(_BYTE *)(v5 + v8[9]) = *(_BYTE *)(v6 + v8[9]);
  return a1;
}

uint64_t sub_1DC1782F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  void *v10;
  const void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  int *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(int *)(a3 + 28);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_1DC4010E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  v8 = (int *)type metadata accessor for StockViewModel();
  v9 = v8[5];
  v10 = (void *)(v5 + v9);
  v11 = (const void *)(v6 + v9);
  v12 = sub_1DC401030();
  v13 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
  {
    sub_1DC089DA4(0, &qword_1EDB28DC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF040], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v13 + 32))(v10, v11, v12);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  v15 = v8[6];
  v16 = (char *)(v5 + v15);
  v17 = (char *)(v6 + v15);
  v18 = (int *)type metadata accessor for StockSparklineViewModel(0);
  v19 = *((_QWORD *)v18 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v19 + 48))(v17, 1, v18))
  {
    sub_1DC089DA4(0, &qword_1EDB353E0, type metadata accessor for StockSparklineViewModel, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    v21 = sub_1DC408614();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v16, v17, v21);
    v22 = v18[5];
    v23 = &v16[v22];
    v24 = &v17[v22];
    *(_QWORD *)v23 = *(_QWORD *)v24;
    v23[8] = v24[8];
    v25 = v18[6];
    v26 = &v16[v25];
    v27 = &v17[v25];
    *(_QWORD *)v26 = *(_QWORD *)v27;
    v26[8] = v27[8];
    v16[v18[7]] = v17[v18[7]];
    v28 = v18[8];
    v29 = &v16[v28];
    v30 = &v17[v28];
    v31 = sub_1DC400F7C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(v29, v30, v31);
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v19 + 56))(v16, 0, 1, v18);
  }
  v32 = v8[7];
  v33 = v5 + v32;
  v34 = v6 + v32;
  *(_QWORD *)v33 = *(_QWORD *)(v6 + v32);
  *(_BYTE *)(v33 + 8) = *(_BYTE *)(v6 + v32 + 8);
  *(_QWORD *)(v33 + 16) = *(_QWORD *)(v6 + v32 + 16);
  *(_BYTE *)(v33 + 24) = *(_BYTE *)(v6 + v32 + 24);
  *(_QWORD *)(v33 + 32) = *(_QWORD *)(v6 + v32 + 32);
  *(_BYTE *)(v33 + 40) = *(_BYTE *)(v6 + v32 + 40);
  v35 = *(_OWORD *)(v6 + v32 + 64);
  *(_OWORD *)(v33 + 48) = *(_OWORD *)(v6 + v32 + 48);
  *(_OWORD *)(v33 + 64) = v35;
  *(_BYTE *)(v33 + 80) = *(_BYTE *)(v6 + v32 + 80);
  v36 = type metadata accessor for PriceViewModel();
  v37 = *(int *)(v36 + 40);
  v38 = v33 + v37;
  v39 = v34 + v37;
  v40 = sub_1DC4011C8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 32))(v38, v39, v40);
  v41 = *(int *)(v36 + 44);
  v42 = v33 + v41;
  v43 = v34 + v41;
  v44 = sub_1DC400118();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 32))(v42, v43, v44);
  v45 = v8[8];
  v46 = v5 + v45;
  v47 = v6 + v45;
  v48 = sub_1DC4008EC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 32))(v46, v47, v48);
  *(_BYTE *)(v5 + v8[9]) = *(_BYTE *)(v6 + v8[9]);
  return a1;
}

uint64_t sub_1DC17860C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(void *, uint64_t, uint64_t);
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  _BYTE *v20;
  int *v21;
  uint64_t v22;
  uint64_t (*v23)(_BYTE *, uint64_t, int *);
  int v24;
  int v25;
  uint64_t (*v26)(uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(int *)(a3 + 28);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_1DC4010E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v5, v6, v7);
  v8 = (int *)type metadata accessor for StockViewModel();
  v9 = v8[5];
  v10 = (void *)(v5 + v9);
  v11 = (void *)(v6 + v9);
  v12 = sub_1DC401030();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14(v11, 1, v12);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(void *, void *, uint64_t))(v13 + 32))(v10, v11, v12);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v16)
  {
    (*(void (**)(void *, uint64_t))(v13 + 8))(v10, v12);
LABEL_6:
    sub_1DC089DA4(0, &qword_1EDB28DC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF040], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v13 + 40))(v10, v11, v12);
LABEL_7:
  v18 = v8[6];
  v19 = (_BYTE *)(v5 + v18);
  v20 = (_BYTE *)(v6 + v18);
  v21 = (int *)type metadata accessor for StockSparklineViewModel(0);
  v22 = *((_QWORD *)v21 - 1);
  v23 = *(uint64_t (**)(_BYTE *, uint64_t, int *))(v22 + 48);
  v24 = v23(v19, 1, v21);
  v25 = v23(v20, 1, v21);
  if (v24)
  {
    if (!v25)
    {
      v28 = sub_1DC408614();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v28 - 8) + 32))(v19, v20, v28);
      v29 = v21[5];
      v30 = &v19[v29];
      v31 = &v20[v29];
      *(_QWORD *)v30 = *(_QWORD *)v31;
      v30[8] = v31[8];
      v32 = v21[6];
      v33 = &v19[v32];
      v34 = &v20[v32];
      *(_QWORD *)v33 = *(_QWORD *)v34;
      v33[8] = v34[8];
      v19[v21[7]] = v20[v21[7]];
      v35 = v21[8];
      v36 = &v19[v35];
      v37 = &v20[v35];
      v38 = sub_1DC400F7C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v36, v37, v38);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v22 + 56))(v19, 0, 1, v21);
      goto LABEL_16;
    }
    v26 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  }
  else
  {
    if (!v25)
    {
      v39 = sub_1DC408614();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v39 - 8) + 40))(v19, v20, v39);
      v40 = v21[5];
      v41 = &v19[v40];
      v42 = &v20[v40];
      *(_QWORD *)v41 = *(_QWORD *)v42;
      v41[8] = v42[8];
      v43 = v21[6];
      v44 = &v19[v43];
      v45 = &v20[v43];
      *(_QWORD *)v44 = *(_QWORD *)v45;
      v44[8] = v45[8];
      v19[v21[7]] = v20[v21[7]];
      v46 = v21[8];
      v47 = &v19[v46];
      v48 = &v20[v46];
      v49 = sub_1DC400F7C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 40))(v47, v48, v49);
      goto LABEL_16;
    }
    sub_1DC0926D8((uint64_t)v19, type metadata accessor for StockSparklineViewModel);
    v26 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  }
  sub_1DC089DA4(0, &qword_1EDB353E0, type metadata accessor for StockSparklineViewModel, v26);
  memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
LABEL_16:
  v50 = v8[7];
  v51 = v5 + v50;
  v52 = v6 + v50;
  *(_QWORD *)v51 = *(_QWORD *)(v6 + v50);
  *(_BYTE *)(v51 + 8) = *(_BYTE *)(v6 + v50 + 8);
  *(_QWORD *)(v51 + 16) = *(_QWORD *)(v6 + v50 + 16);
  *(_BYTE *)(v51 + 24) = *(_BYTE *)(v6 + v50 + 24);
  *(_QWORD *)(v51 + 32) = *(_QWORD *)(v6 + v50 + 32);
  *(_BYTE *)(v51 + 40) = *(_BYTE *)(v6 + v50 + 40);
  v53 = *(_QWORD *)(v6 + v50 + 56);
  *(_QWORD *)(v51 + 48) = *(_QWORD *)(v6 + v50 + 48);
  *(_QWORD *)(v51 + 56) = v53;
  swift_bridgeObjectRelease();
  v54 = *(_QWORD *)(v52 + 72);
  *(_QWORD *)(v51 + 64) = *(_QWORD *)(v52 + 64);
  *(_QWORD *)(v51 + 72) = v54;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v51 + 80) = *(_BYTE *)(v52 + 80);
  v55 = type metadata accessor for PriceViewModel();
  v56 = *(int *)(v55 + 40);
  v57 = v51 + v56;
  v58 = v52 + v56;
  v59 = sub_1DC4011C8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 40))(v57, v58, v59);
  v60 = *(int *)(v55 + 44);
  v61 = v51 + v60;
  v62 = v52 + v60;
  v63 = sub_1DC400118();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v63 - 8) + 40))(v61, v62, v63);
  v64 = v8[8];
  v65 = v5 + v64;
  v66 = v6 + v64;
  v67 = sub_1DC4008EC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v67 - 8) + 40))(v65, v66, v67);
  *(_BYTE *)(v5 + v8[9]) = *(_BYTE *)(v6 + v8[9]);
  return a1;
}

uint64_t sub_1DC178A64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4;
  BOOL v5;
  int v6;
  uint64_t v10;

  if ((_DWORD)a2 == 254)
  {
    v4 = *(unsigned __int8 *)(a1 + 16);
    v5 = v4 >= 2;
    v6 = (v4 + 2147483646) & 0x7FFFFFFF;
    if (v5)
      return (v6 + 1);
    else
      return 0;
  }
  else
  {
    v10 = type metadata accessor for StockViewModel();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(a1 + *(int *)(a3 + 28), a2, v10);
  }
}

uint64_t sub_1DC178AE0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 254)
  {
    *(_BYTE *)(result + 16) = a2 + 1;
  }
  else
  {
    v7 = type metadata accessor for StockViewModel();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 28), a2, a2, v7);
  }
  return result;
}

uint64_t sub_1DC178B50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v3;
  uint64_t *v4;
  unint64_t v8;
  char v9;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;

  v4 = v3;
  swift_bridgeObjectRetain();
  v8 = sub_1DC0ED368(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if ((a2 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v11 = *v4;
    v17 = *v4;
    *v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1DC35B3C0();
      v11 = v17;
    }
    swift_bridgeObjectRelease();
    v12 = *(_QWORD *)(v11 + 56);
    v13 = type metadata accessor for StockViewRenderer.RenderedState();
    v14 = *(_QWORD *)(v13 - 8);
    sub_1DC092ED0(v12 + *(_QWORD *)(v14 + 72) * v8, a3, (uint64_t (*)(_QWORD))type metadata accessor for StockViewRenderer.RenderedState);
    sub_1DC178C80(v8, v11);
    *v4 = v11;
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v14 + 56))(a3, 0, 1, v13);
  }
  else
  {
    v16 = type metadata accessor for StockViewRenderer.RenderedState();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(a3, 1, 1, v16);
  }
}

unint64_t sub_1DC178C80(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  int64_t v17;
  unint64_t v18;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_1DC409658();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      while (1)
      {
        sub_1DC409AC0();
        swift_bridgeObjectRetain();
        sub_1DC408AF4();
        v9 = sub_1DC409AF0();
        result = swift_bridgeObjectRelease();
        v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
          break;
        if (v10 < v8)
          goto LABEL_11;
LABEL_12:
        v11 = *(_QWORD *)(a2 + 48);
        v12 = (_OWORD *)(v11 + 16 * v3);
        v13 = (_OWORD *)(v11 + 16 * v6);
        if (v3 != v6 || v12 >= v13 + 1)
          *v12 = *v13;
        v14 = *(_QWORD *)(a2 + 56);
        v15 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for StockViewRenderer.RenderedState() - 8) + 72);
        v16 = v15 * v3;
        result = v14 + v15 * v3;
        v17 = v15 * v6;
        v18 = v14 + v15 * v6 + v15;
        if (v16 < v17 || result >= v18)
        {
          result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          v3 = v6;
          if (v16 == v17)
            goto LABEL_6;
          result = swift_arrayInitWithTakeBackToFront();
        }
        v3 = v6;
LABEL_6:
        v6 = (v6 + 1) & v7;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          goto LABEL_21;
      }
      if (v10 < v8)
        goto LABEL_6;
LABEL_11:
      if (v3 < (uint64_t)v10)
        goto LABEL_6;
      goto LABEL_12;
    }
LABEL_21:
    v20 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v21 = *v20;
    v22 = (-1 << v3) - 1;
  }
  else
  {
    v20 = (uint64_t *)(v4 + 8 * (result >> 6));
    v22 = *v20;
    v21 = (-1 << result) - 1;
  }
  *v20 = v22 & v21;
  v23 = *(_QWORD *)(a2 + 16);
  v24 = __OFSUB__(v23, 1);
  v25 = v23 - 1;
  if (v24)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v25;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1DC178E7C(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  _BYTE *v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_1DC409658();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_1DC409AC0();
        sub_1DC409ACC();
        result = sub_1DC409AF0();
        v9 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v9 < v8)
            goto LABEL_5;
        }
        else if (v9 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v9)
        {
LABEL_11:
          v10 = *(_QWORD *)(a2 + 48);
          v11 = (_BYTE *)(v10 + v3);
          v12 = (_BYTE *)(v10 + v6);
          if (v3 != v6 || v11 >= v12 + 1)
            *v11 = *v12;
          v13 = *(_QWORD *)(a2 + 56);
          v14 = (_QWORD *)(v13 + 8 * v3);
          v15 = (_QWORD *)(v13 + 8 * v6);
          if (v3 != v6 || (v3 = v6, v14 >= v15 + 1))
          {
            *v14 = *v15;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v16 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v17 = *v16;
    v18 = (-1 << v3) - 1;
  }
  else
  {
    v16 = (uint64_t *)(v4 + 8 * (result >> 6));
    v18 = *v16;
    v17 = (-1 << result) - 1;
  }
  *v16 = v18 & v17;
  v19 = *(_QWORD *)(a2 + 16);
  v20 = __OFSUB__(v19, 1);
  v21 = v19 - 1;
  if (v20)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v21;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t sub_1DC179034(uint64_t a1, uint64_t a2)
{
  uint64_t v5;

  if (*(_QWORD *)a1 != *(_QWORD *)a2
    || *(_QWORD *)(a1 + 8) != *(_QWORD *)(a2 + 8)
    || *(unsigned __int8 *)(a1 + 16) != *(unsigned __int8 *)(a2 + 16))
  {
    return 0;
  }
  v5 = *(int *)(type metadata accessor for StockViewRenderer.RenderedState() + 28);
  return sub_1DC0FD638(a1 + v5, a2 + v5);
}

uint64_t sub_1DC1790A8@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_1DC1779D0(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_1DC1790B0()
{
  unint64_t result;

  result = qword_1EDB3F580;
  if (!qword_1EDB3F580)
  {
    result = MEMORY[0x1DF0CAB8C](MEMORY[0x1E0DEA9B8], MEMORY[0x1E0DEA968]);
    atomic_store(result, (unint64_t *)&qword_1EDB3F580);
  }
  return result;
}

uint64_t sub_1DC1790F4()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  char *v16;
  id v17;
  id v18;
  unsigned int *v19;
  unsigned int *v20;
  uint64_t result;
  id v22;
  _QWORD v23[2];

  v1 = v0;
  sub_1DC17934C();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1DC4039DC();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1DC4039B8();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v14 = MEMORY[0x1E0C80A78](v13).n128_u64[0];
  v16 = (char *)v23 - v15;
  v17 = objc_msgSend(v1, sel_purchaseValidationState, v14);
  if ((unint64_t)v17 < 5)
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v16, **((unsigned int **)&unk_1EA451460 + (_QWORD)v17), v9);
    v18 = objc_msgSend(v1, sel_purchaseType);
    if (v18)
    {
      if (v18 == (id)2)
      {
        v20 = (unsigned int *)MEMORY[0x1E0DADD28];
        goto LABEL_9;
      }
      if (v18 == (id)1)
      {
        if ((objc_msgSend(v1, sel_isNewsAppPurchase) & 1) != 0)
          v19 = (unsigned int *)MEMORY[0x1E0DADD30];
        else
          v19 = (unsigned int *)MEMORY[0x1E0DADD40];
        (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, *v19, v5);
        goto LABEL_12;
      }
    }
    v20 = (unsigned int *)MEMORY[0x1E0DADD38];
LABEL_9:
    (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, *v20, v5);
LABEL_12:
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v12, v16, v9);
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v4, v8, v5);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
    sub_1DC403754();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v16, v9);
  }
  v22 = v17;
  type metadata accessor for FCPurchaseValidationState(0);
  v23[1] = v22;
  result = sub_1DC409A18();
  __break(1u);
  return result;
}

void sub_1DC17934C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB29940)
  {
    sub_1DC4039DC();
    v0 = sub_1DC4095A4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB29940);
  }
}

ValueMetadata *type metadata accessor for SystemTheme()
{
  return &type metadata for SystemTheme;
}

id sub_1DC1793B0()
{
  return objc_msgSend((id)objc_opt_self(), sel_ts_tableCellDefaultSelectionTintColor);
}

id sub_1DC1793DC()
{
  return objc_msgSend((id)objc_opt_self(), sel_ts_systemDarkTealColor);
}

uint64_t sub_1DC179408(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2[5] = a1;
  v2[6] = v1;
  sub_1DC092F50(0, (unint64_t *)&unk_1EDB3F7C0, (void (*)(uint64_t))MEMORY[0x1E0DF0750]);
  v2[7] = swift_task_alloc();
  sub_1DC092F50(0, (unint64_t *)&qword_1EDB2C5F0, (void (*)(uint64_t))type metadata accessor for StocksActivity);
  v2[8] = swift_task_alloc();
  v3 = type metadata accessor for StocksActivity(0);
  v2[9] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[10] = v4;
  v2[11] = *(_QWORD *)(v4 + 64);
  v2[12] = swift_task_alloc();
  v2[13] = swift_task_alloc();
  v2[14] = swift_task_alloc();
  v5 = sub_1DC400E8C();
  v2[15] = v5;
  v2[16] = *(_QWORD *)(v5 - 8);
  v2[17] = swift_task_alloc();
  v6 = sub_1DC400574();
  v2[18] = v6;
  v2[19] = *(_QWORD *)(v6 - 8);
  v2[20] = swift_task_alloc();
  v2[21] = swift_task_alloc();
  v7 = sub_1DC4003B8();
  v2[22] = v7;
  v2[23] = *(_QWORD *)(v7 - 8);
  v2[24] = swift_task_alloc();
  v2[25] = swift_task_alloc();
  v8 = sub_1DC400D48();
  v2[26] = v8;
  v2[27] = *(_QWORD *)(v8 - 8);
  v2[28] = swift_task_alloc();
  v9 = sub_1DC4002A4();
  v2[29] = v9;
  v2[30] = *(_QWORD *)(v9 - 8);
  v2[31] = swift_task_alloc();
  v2[32] = swift_task_alloc();
  v2[33] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1DC1795EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  NSObject *v7;
  os_log_type_t v8;
  _BOOL4 v9;
  uint64_t v10;
  uint64_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  void (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(uint64_t, uint64_t, uint64_t);
  uint64_t v37;

  if (qword_1F034B058 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(v0 + 264);
  v3 = *(_QWORD *)(v0 + 232);
  v4 = *(_QWORD *)(v0 + 240);
  v5 = sub_1DC403F64();
  *(_QWORD *)(v0 + 272) = __swift_project_value_buffer(v5, (uint64_t)qword_1F0368A78);
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  *(_QWORD *)(v0 + 280) = v6;
  v6(v2, v1, v3);
  v7 = sub_1DC403F4C();
  v8 = sub_1DC408FE0();
  v9 = os_log_type_enabled(v7, v8);
  v10 = *(_QWORD *)(v0 + 264);
  v11 = *(_QWORD *)(v0 + 240);
  if (v9)
  {
    v35 = *(_QWORD *)(v0 + 232);
    v12 = (uint8_t *)swift_slowAlloc();
    v36 = v6;
    v37 = swift_slowAlloc();
    v13 = v37;
    *(_DWORD *)v12 = 136315138;
    v14 = sub_1DC400298();
    *(_QWORD *)(v0 + 32) = sub_1DC2A9C74(v14, v15, &v37);
    sub_1DC4095B0();
    swift_bridgeObjectRelease();
    v16 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
    v16(v10, v35);
    _os_log_impl(&dword_1DC07D000, v7, v8, "Handling intent '%s'", v12, 0xCu);
    swift_arrayDestroy();
    v17 = v13;
    v6 = v36;
    MEMORY[0x1DF0CAC88](v17, -1, -1);
    MEMORY[0x1DF0CAC88](v12, -1, -1);
  }
  else
  {
    v16 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
    v16(v10, *(_QWORD *)(v0 + 232));
  }

  *(_QWORD *)(v0 + 288) = v16;
  v18 = *(_QWORD *)(v0 + 256);
  v19 = *(_QWORD *)(v0 + 232);
  v20 = *(_QWORD *)(v0 + 240);
  v6(v18, *(_QWORD *)(v0 + 40), v19);
  v21 = (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 88))(v18, v19);
  if (v21 == *MEMORY[0x1E0DAE070])
  {
    v22 = *(_QWORD *)(v0 + 256);
    v24 = *(_QWORD *)(v0 + 216);
    v23 = *(_QWORD *)(v0 + 224);
    v25 = *(_QWORD *)(v0 + 208);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 240) + 96))(v22, *(_QWORD *)(v0 + 232));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 32))(v23, v22, v25);
    sub_1DC400D30();
    sub_1DC400D3C();
    v26 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 296) = v26;
    *v26 = v0;
    v26[1] = sub_1DC179A88;
    return sub_1DC17A74C(*(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 168), 0);
  }
  if (v21 == *MEMORY[0x1E0DAE078])
  {
    v28 = *(_QWORD *)(v0 + 256);
    v30 = *(_QWORD *)(v0 + 128);
    v29 = *(_QWORD *)(v0 + 136);
    v31 = *(_QWORD *)(v0 + 120);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 240) + 96))(v28, *(_QWORD *)(v0 + 232));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 32))(v29, v28, v31);
    sub_1DC400E74();
    sub_1DC400E80();
    v32 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 312) = v32;
    *v32 = v0;
    v32[1] = sub_1DC179C2C;
    return sub_1DC17A74C(*(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 160), 1);
  }
  if (v21 == *MEMORY[0x1E0DAE050] || v21 == *MEMORY[0x1E0DAE058])
  {
    v16(*(_QWORD *)(v0 + 256), *(_QWORD *)(v0 + 232));
  }
  else if (v21 != *MEMORY[0x1E0DAE068])
  {
    v33 = *(_QWORD *)(v0 + 256);
    v34 = *(_QWORD *)(v0 + 232);
    MEMORY[0x1DF0C2F18]("Encountered unknown switch case. Please update to include the new case.", 71, 2, MEMORY[0x1E0DEE9D8]);
    v16(v33, v34);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  *(_QWORD *)(v0 + 328) = OBJC_IVAR____TtC8StocksUI19StocksIntentHandler_intentDeserializer;
  return swift_task_switch();
}

uint64_t sub_1DC179A88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 200);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 176);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 184);
  v5 = *(_QWORD *)(*(_QWORD *)v1 + 168);
  v6 = *(_QWORD *)(*(_QWORD *)v1 + 144);
  v7 = *(_QWORD *)(*(_QWORD *)v1 + 152);
  *(_QWORD *)(*(_QWORD *)v1 + 304) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  return swift_task_switch();
}

uint64_t sub_1DC179B34()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 216) + 8))(*(_QWORD *)(v0 + 224), *(_QWORD *)(v0 + 208));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DC179C2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 184);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 192);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 176);
  v6 = *(_QWORD *)(*(_QWORD *)v1 + 152);
  v5 = *(_QWORD *)(*(_QWORD *)v1 + 160);
  v7 = *(_QWORD *)(*(_QWORD *)v1 + 144);
  *(_QWORD *)(*(_QWORD *)v1 + 320) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return swift_task_switch();
}

uint64_t sub_1DC179CD8()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 128) + 8))(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 120));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DC179DD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  _BOOL4 v16;
  void (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  _QWORD *v33;
  uint64_t v35;
  uint64_t v36;

  v1 = *(_QWORD *)(v0 + 72);
  v2 = *(_QWORD *)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 64);
  v4 = *(_QWORD *)(v0 + 40);
  v5 = (_QWORD *)(*(_QWORD *)(v0 + 48) + *(_QWORD *)(v0 + 328));
  v6 = v5[3];
  v7 = v5[4];
  __swift_project_boxed_opaque_existential_1(v5, v6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 8))(v4, v6, v7);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_1DC092F14(*(_QWORD *)(v0 + 64), (unint64_t *)&qword_1EDB2C5F0, (void (*)(uint64_t))type metadata accessor for StocksActivity);
    MEMORY[0x1DF0C2F18]("Unexpectedly found no activity for intent that should have one.", 63, 2, MEMORY[0x1E0DEE9D8]);
  }
  else
  {
    v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 280);
    v9 = *(_QWORD *)(v0 + 248);
    v10 = *(_QWORD *)(v0 + 232);
    v12 = *(_QWORD *)(v0 + 104);
    v11 = *(_QWORD *)(v0 + 112);
    v13 = *(_QWORD *)(v0 + 40);
    sub_1DC17C804(*(_QWORD *)(v0 + 64), v11);
    v8(v9, v13, v10);
    sub_1DC0990BC(v11, v12, type metadata accessor for StocksActivity);
    v14 = sub_1DC403F4C();
    v15 = sub_1DC408FE0();
    v16 = os_log_type_enabled(v14, v15);
    v17 = *(void (**)(uint64_t, uint64_t))(v0 + 288);
    v18 = *(_QWORD *)(v0 + 248);
    v19 = *(_QWORD *)(v0 + 232);
    v20 = *(_QWORD *)(v0 + 104);
    if (v16)
    {
      v21 = swift_slowAlloc();
      v35 = swift_slowAlloc();
      v36 = v35;
      *(_DWORD *)v21 = 136315394;
      v22 = sub_1DC400298();
      *(_QWORD *)(v0 + 16) = sub_1DC2A9C74(v22, v23, &v36);
      sub_1DC4095B0();
      swift_bridgeObjectRelease();
      v17(v18, v19);
      *(_WORD *)(v21 + 12) = 2080;
      StocksActivity.identifier.getter();
      *(_QWORD *)(v0 + 24) = sub_1DC2A9C74(v24, v25, &v36);
      sub_1DC4095B0();
      swift_bridgeObjectRelease();
      sub_1DC0926D8(v20, type metadata accessor for StocksActivity);
      _os_log_impl(&dword_1DC07D000, v14, v15, "Mapped intent '%s' to activity '%s'", (uint8_t *)v21, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1DF0CAC88](v35, -1, -1);
      MEMORY[0x1DF0CAC88](v21, -1, -1);
    }
    else
    {
      v17(*(_QWORD *)(v0 + 248), *(_QWORD *)(v0 + 232));
      sub_1DC0926D8(v20, type metadata accessor for StocksActivity);
    }

    v26 = *(_QWORD *)(v0 + 112);
    v27 = *(_QWORD *)(v0 + 96);
    v28 = *(_QWORD *)(v0 + 80);
    v30 = *(_QWORD *)(v0 + 48);
    v29 = *(_QWORD *)(v0 + 56);
    v31 = sub_1DC408DB8();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v29, 1, 1, v31);
    sub_1DC0990BC(v26, v27, type metadata accessor for StocksActivity);
    v32 = (*(unsigned __int8 *)(v28 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
    v33 = (_QWORD *)swift_allocObject();
    v33[2] = 0;
    v33[3] = 0;
    v33[4] = v30;
    sub_1DC17C804(v27, (uint64_t)v33 + v32);
    swift_retain();
    sub_1DC17A4AC(v29, (uint64_t)&unk_1F034CE88, (uint64_t)v33);
    swift_release();
    sub_1DC0926D8(v26, type metadata accessor for StocksActivity);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DC17A1C0()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 216) + 8))(*(_QWORD *)(v0 + 224), *(_QWORD *)(v0 + 208));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DC17A2CC()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 128) + 8))(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 120));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DC17A3D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  *(_QWORD *)(v5 + 16) = a4;
  *(_QWORD *)(v5 + 24) = a5;
  return swift_task_switch();
}

uint64_t sub_1DC17A3EC()
{
  uint64_t v0;

  sub_1DC408DA0();
  *(_QWORD *)(v0 + 32) = sub_1DC408D94();
  sub_1DC408D88();
  return swift_task_switch();
}

uint64_t sub_1DC17A454()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_release();
  sub_1DC17A5E8(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DC17A4AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  v5 = sub_1DC408DB8();
  v6 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5) != 1)
  {
    sub_1DC408DAC();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    if (!*(_QWORD *)(a3 + 16))
      return swift_task_create();
    goto LABEL_3;
  }
  sub_1DC092F14(a1, (unint64_t *)&unk_1EDB3F7C0, (void (*)(uint64_t))MEMORY[0x1E0DF0750]);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1DC408D88();
    swift_unknownObjectRelease();
  }
  return swift_task_create();
}

uint64_t sub_1DC17A5E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE v11[40];
  _OWORD v12[2];
  uint64_t v13;

  sub_1DC092F50(0, (unint64_t *)&unk_1EDB29810, (void (*)(uint64_t))MEMORY[0x1E0DAD3C8]);
  MEMORY[0x1E0C80A78](v4);
  v6 = &v11[-v5 - 8];
  v7 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8StocksUI19StocksIntentHandler_tracker);
  v8 = sub_1DC403340();
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v6, 1, 1, v8);
  v13 = 0;
  memset(v12, 0, sizeof(v12));
  sub_1DC0824D4(v1 + OBJC_IVAR____TtC8StocksUI19StocksIntentHandler_resolver, (uint64_t)v11);
  sub_1DC22B720(a1, v7, (uint64_t)v6, (uint64_t)v12, 0, 0, (uint64_t)v11);
  if (!v2)
    swift_release();
  sub_1DC17C7C8((uint64_t)v11, &qword_1EDB29410, (unint64_t *)&unk_1EDB29400);
  sub_1DC17C7C8((uint64_t)v12, &qword_1EDB2ACD0, (unint64_t *)&qword_1EDB2ACC0);
  return sub_1DC092F14((uint64_t)v6, (unint64_t *)&unk_1EDB29810, (void (*)(uint64_t))MEMORY[0x1E0DAD3C8]);
}

uint64_t sub_1DC17A74C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v4 + 168) = a2;
  *(_QWORD *)(v4 + 176) = v3;
  *(_BYTE *)(v4 + 593) = a3;
  *(_QWORD *)(v4 + 160) = a1;
  sub_1DC092F50(0, &qword_1F034C568, (void (*)(uint64_t))type metadata accessor for WatchlistMembershipCommandContext);
  *(_QWORD *)(v4 + 184) = swift_task_alloc();
  *(_QWORD *)(v4 + 192) = swift_task_alloc();
  v5 = type metadata accessor for WatchlistMembershipCommandContext(0);
  *(_QWORD *)(v4 + 200) = v5;
  *(_QWORD *)(v4 + 208) = *(_QWORD *)(v5 - 8);
  *(_QWORD *)(v4 + 216) = swift_task_alloc();
  v6 = sub_1DC4010E4();
  *(_QWORD *)(v4 + 224) = v6;
  *(_QWORD *)(v4 + 232) = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v4 + 240) = swift_task_alloc();
  *(_QWORD *)(v4 + 248) = swift_task_alloc();
  sub_1DC092F50(0, &qword_1EDB28E40, (void (*)(uint64_t))MEMORY[0x1E0DAF270]);
  *(_QWORD *)(v4 + 256) = swift_task_alloc();
  v7 = sub_1DC40124C();
  *(_QWORD *)(v4 + 264) = v7;
  *(_QWORD *)(v4 + 272) = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v4 + 280) = swift_task_alloc();
  *(_QWORD *)(v4 + 288) = swift_task_alloc();
  *(_QWORD *)(v4 + 296) = swift_task_alloc();
  *(_QWORD *)(v4 + 304) = swift_task_alloc();
  v8 = sub_1DC400574();
  *(_QWORD *)(v4 + 312) = v8;
  *(_QWORD *)(v4 + 320) = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v4 + 328) = swift_task_alloc();
  *(_QWORD *)(v4 + 336) = swift_task_alloc();
  *(_QWORD *)(v4 + 344) = swift_task_alloc();
  *(_QWORD *)(v4 + 352) = swift_task_alloc();
  *(_QWORD *)(v4 + 360) = swift_task_alloc();
  v9 = sub_1DC4003B8();
  *(_QWORD *)(v4 + 368) = v9;
  *(_QWORD *)(v4 + 376) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v4 + 384) = swift_task_alloc();
  *(_QWORD *)(v4 + 392) = swift_task_alloc();
  *(_QWORD *)(v4 + 400) = swift_task_alloc();
  *(_QWORD *)(v4 + 408) = swift_task_alloc();
  sub_1DC408DA0();
  *(_QWORD *)(v4 + 416) = sub_1DC408D94();
  *(_QWORD *)(v4 + 424) = sub_1DC408D88();
  *(_QWORD *)(v4 + 432) = v10;
  return swift_task_switch();
}

uint64_t sub_1DC17A98C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  void (*v10)(_QWORD, uint64_t, uint64_t);
  NSObject *v11;
  os_log_type_t v12;
  _BOOL4 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  void (*v26)(uint64_t, uint64_t);
  uint64_t v27;
  unint64_t v28;
  void (*v29)(uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  os_log_type_t typea[8];
  os_log_type_t type;
  uint64_t v36;

  if (qword_1F034B058 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 160);
  v2 = *(_QWORD *)(v0 + 408);
  v3 = *(_QWORD *)(v0 + 368);
  v4 = *(_QWORD *)(v0 + 376);
  *(_QWORD *)typea = *(_QWORD *)(v0 + 360);
  v6 = *(_QWORD *)(v0 + 312);
  v5 = *(_QWORD *)(v0 + 320);
  v7 = *(_QWORD *)(v0 + 168);
  v8 = sub_1DC403F64();
  *(_QWORD *)(v0 + 440) = __swift_project_value_buffer(v8, (uint64_t)qword_1F0368A78);
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  *(_QWORD *)(v0 + 448) = v9;
  v9(v2, v1, v3);
  v10 = *(void (**)(_QWORD, uint64_t, uint64_t))(v5 + 16);
  *(_QWORD *)(v0 + 456) = v10;
  v10(*(_QWORD *)typea, v7, v6);
  v11 = sub_1DC403F4C();
  v12 = sub_1DC408FE0();
  v13 = os_log_type_enabled(v11, v12);
  v14 = *(_QWORD *)(v0 + 408);
  v16 = *(_QWORD *)(v0 + 368);
  v15 = *(_QWORD *)(v0 + 376);
  v17 = *(_QWORD *)(v0 + 360);
  v18 = *(_QWORD *)(v0 + 312);
  v19 = *(_QWORD *)(v0 + 320);
  if (v13)
  {
    type = v12;
    v20 = *(_BYTE *)(v0 + 593);
    v32 = *(_QWORD *)(v0 + 312);
    v21 = swift_slowAlloc();
    v33 = swift_slowAlloc();
    v36 = v33;
    *(_DWORD *)v21 = 136315650;
    if ((v20 & 1) != 0)
      v22 = 0x6863746157746F6ELL;
    else
      v22 = 0x676E696863746177;
    v31 = v19;
    if ((v20 & 1) != 0)
      v23 = 0xEB00000000676E69;
    else
      v23 = 0xE800000000000000;
    *(_QWORD *)(v0 + 144) = sub_1DC2A9C74(v22, v23, &v36);
    sub_1DC4095B0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v21 + 12) = 2080;
    v24 = sub_1DC4003A0();
    *(_QWORD *)(v0 + 152) = sub_1DC2A9C74(v24, v25, &v36);
    sub_1DC4095B0();
    swift_bridgeObjectRelease();
    v26 = *(void (**)(uint64_t, uint64_t))(v15 + 8);
    v26(v14, v16);
    *(_WORD *)(v21 + 22) = 2080;
    v27 = sub_1DC40055C();
    *(_QWORD *)(v0 + 32) = sub_1DC2A9C74(v27, v28, &v36);
    sub_1DC4095B0();
    swift_bridgeObjectRelease();
    v29 = *(void (**)(uint64_t, uint64_t))(v31 + 8);
    v29(v17, v32);
    _os_log_impl(&dword_1DC07D000, v11, type, "Toggling symbol membership to watchlist to state=%s, symbolID=%s, watchlistID=%s", (uint8_t *)v21, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1DF0CAC88](v33, -1, -1);
    MEMORY[0x1DF0CAC88](v21, -1, -1);
  }
  else
  {
    v26 = *(void (**)(uint64_t, uint64_t))(v15 + 8);
    v26(v14, v16);
    v29 = *(void (**)(uint64_t, uint64_t))(v19 + 8);
    v29(v17, v18);
  }

  *(_QWORD *)(v0 + 464) = v26;
  *(_QWORD *)(v0 + 472) = v29;
  *(_QWORD *)(v0 + 480) = OBJC_IVAR____TtC8StocksUI19StocksIntentHandler_watchlistManager;
  return swift_task_switch();
}

uint64_t sub_1DC17ACA4()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;

  v1 = (_QWORD *)(v0[22] + v0[60]);
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  v0[61] = sub_1DC400AE4();
  v2 = (_QWORD *)swift_task_alloc();
  v0[62] = v2;
  *v2 = v0;
  v2[1] = sub_1DC17AD30;
  return sub_1DC402CC8();
}

uint64_t sub_1DC17AD30()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 504) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_release();
  return swift_task_switch();
}

uint64_t sub_1DC17AD9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(_QWORD, uint64_t, _QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  void (*v22)(uint64_t, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  _BOOL4 v29;
  uint64_t v30;
  uint64_t v31;
  uint8_t *v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(uint64_t, uint64_t, uint64_t);
  NSObject *v44;
  os_log_type_t v45;
  _BOOL4 v46;
  void (*v47)(uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  void (*v56)(uint64_t, uint64_t);
  uint64_t v57;
  unint64_t v58;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void (*v68)(uint64_t, uint64_t, uint64_t);
  void (*v69)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v70;
  uint64_t v71;
  void (*v72)(uint64_t, uint64_t);
  void (*v73)(uint64_t, uint64_t, uint64_t);
  uint64_t v74[2];

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v3 = *(_QWORD *)(v0 + 272);
    v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v5 = *(_QWORD *)(v3 + 72);
    v6 = *(void (**)(_QWORD, uint64_t, _QWORD))(v3 + 16);
    swift_bridgeObjectRetain();
    while (1)
    {
      v6(*(_QWORD *)(v0 + 296), v4, *(_QWORD *)(v0 + 264));
      v7 = sub_1DC4011E0();
      v9 = v8;
      if (v7 == sub_1DC40055C() && v9 == v10)
        break;
      v12 = sub_1DC4099E8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v12 & 1) != 0)
        goto LABEL_12;
      (*(void (**)(_QWORD, _QWORD))(v3 + 8))(*(_QWORD *)(v0 + 296), *(_QWORD *)(v0 + 264));
      v4 += v5;
      if (!--v2)
      {
        swift_bridgeObjectRelease();
        goto LABEL_10;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_12:
    v14 = *(_QWORD *)(v0 + 296);
    v16 = *(_QWORD *)(v0 + 264);
    v15 = *(_QWORD *)(v0 + 272);
    v17 = *(_QWORD *)(v0 + 256);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 32))(v17, v14, v16);
    v13 = 0;
  }
  else
  {
LABEL_10:
    v13 = 1;
  }
  v19 = *(_QWORD *)(v0 + 264);
  v18 = *(_QWORD *)(v0 + 272);
  v20 = *(_QWORD *)(v0 + 256);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 56))(v20, v13, 1, v19);
  swift_bridgeObjectRelease();
  v21 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v20, 1, v19);
  v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 456);
  if (v21 == 1)
  {
    v23 = *(_QWORD *)(v0 + 336);
    v24 = *(_QWORD *)(v0 + 312);
    v25 = *(_QWORD *)(v0 + 256);
    v26 = *(_QWORD *)(v0 + 168);
    swift_release();
    sub_1DC092F14(v25, &qword_1EDB28E40, (void (*)(uint64_t))MEMORY[0x1E0DAF270]);
    v22(v23, v26, v24);
    v27 = sub_1DC403F4C();
    v28 = sub_1DC408FC8();
    v29 = os_log_type_enabled(v27, v28);
    v30 = *(_QWORD *)(v0 + 336);
    v31 = *(_QWORD *)(v0 + 312);
    if (v29)
    {
      v72 = *(void (**)(uint64_t, uint64_t))(v0 + 472);
      v32 = (uint8_t *)swift_slowAlloc();
      v33 = swift_slowAlloc();
      v74[0] = v33;
      *(_DWORD *)v32 = 136315138;
      v34 = sub_1DC40055C();
      *(_QWORD *)(v0 + 24) = sub_1DC2A9C74(v34, v35, v74);
      sub_1DC4095B0();
      swift_bridgeObjectRelease();
      v72(v30, v31);
      _os_log_impl(&dword_1DC07D000, v27, v28, "No watchlist found matching entity watchlistID=%s", v32, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1DF0CAC88](v33, -1, -1);
      MEMORY[0x1DF0CAC88](v32, -1, -1);
    }
    else
    {
      (*(void (**)(_QWORD, _QWORD))(v0 + 472))(*(_QWORD *)(v0 + 336), *(_QWORD *)(v0 + 312));
    }

    sub_1DC3FF968();
    sub_1DC080808(&qword_1F034CE68, (uint64_t (*)(uint64_t))MEMORY[0x1E0C903C0], MEMORY[0x1E0C903C8]);
    swift_allocError();
    sub_1DC3FF950();
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v36 = *(_QWORD *)(v0 + 352);
    v38 = *(_QWORD *)(v0 + 304);
    v37 = *(_QWORD *)(v0 + 312);
    v39 = *(_QWORD *)(v0 + 288);
    v40 = *(_QWORD *)(v0 + 264);
    v41 = *(_QWORD *)(v0 + 272);
    v42 = *(_QWORD *)(v0 + 168);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v41 + 32))(v38, *(_QWORD *)(v0 + 256), v40);
    v43 = *(void (**)(uint64_t, uint64_t, uint64_t))(v41 + 16);
    *(_QWORD *)(v0 + 512) = v43;
    v73 = v43;
    v43(v39, v38, v40);
    v22(v36, v42, v37);
    v44 = sub_1DC403F4C();
    v45 = sub_1DC408FE0();
    v46 = os_log_type_enabled(v44, v45);
    v47 = *(void (**)(uint64_t, uint64_t))(v0 + 472);
    v48 = *(_QWORD *)(v0 + 352);
    v49 = *(_QWORD *)(v0 + 312);
    v50 = *(_QWORD *)(v0 + 288);
    v52 = *(_QWORD *)(v0 + 264);
    v51 = *(_QWORD *)(v0 + 272);
    if (v46)
    {
      v70 = *(_QWORD *)(v0 + 312);
      v53 = swift_slowAlloc();
      v71 = swift_slowAlloc();
      v74[0] = v71;
      *(_DWORD *)v53 = 136315394;
      v54 = sub_1DC40121C();
      *(_QWORD *)(v0 + 128) = sub_1DC2A9C74(v54, v55, v74);
      sub_1DC4095B0();
      swift_bridgeObjectRelease();
      v56 = *(void (**)(uint64_t, uint64_t))(v51 + 8);
      v56(v50, v52);
      *(_WORD *)(v53 + 12) = 2080;
      v57 = sub_1DC40055C();
      *(_QWORD *)(v0 + 136) = sub_1DC2A9C74(v57, v58, v74);
      sub_1DC4095B0();
      swift_bridgeObjectRelease();
      v47(v48, v70);
      _os_log_impl(&dword_1DC07D000, v44, v45, "Matched watchlist ID to watchlistName='%s', watchlistID=%s", (uint8_t *)v53, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1DF0CAC88](v71, -1, -1);
      MEMORY[0x1DF0CAC88](v53, -1, -1);
    }
    else
    {
      v56 = *(void (**)(uint64_t, uint64_t))(v51 + 8);
      v56(*(_QWORD *)(v0 + 288), *(_QWORD *)(v0 + 264));
      v47(v48, v49);
    }

    *(_QWORD *)(v0 + 520) = v56;
    (*(void (**)(_QWORD, _QWORD, _QWORD))(v0 + 448))(*(_QWORD *)(v0 + 400), *(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 368));
    sub_1DC401060();
    if (qword_1EDB2AA40 != -1)
      swift_once();
    v60 = *(_QWORD *)(v0 + 304);
    v61 = *(_QWORD *)(v0 + 264);
    v62 = *(_QWORD *)(v0 + 248);
    v63 = *(_QWORD *)(v0 + 224);
    v64 = *(_QWORD *)(v0 + 232);
    v65 = *(_QWORD *)(v0 + 216);
    v66 = *(_QWORD *)(v0 + 200);
    *(_QWORD *)(v0 + 528) = qword_1EDB5DF68;
    v73(v65, v60, v61);
    v67 = v65 + *(int *)(v66 + 20);
    v68 = *(void (**)(uint64_t, uint64_t, uint64_t))(v64 + 16);
    *(_QWORD *)(v0 + 536) = v68;
    v68(v67, v62, v63);
    v69 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v64 + 56);
    *(_QWORD *)(v0 + 544) = v69;
    v69(v67, 0, 1, v63);
    *(_QWORD *)(v0 + 552) = OBJC_IVAR____TtC8StocksUI19StocksIntentHandler_commandCenter;
    return swift_task_switch();
  }
}

uint64_t sub_1DC17B4C4()
{
  _QWORD *v0;
  _QWORD *v1;

  v1 = (_QWORD *)(v0[22] + v0[69]);
  v0[70] = *v1;
  v0[71] = v1[1];
  return swift_task_switch();
}

uint64_t sub_1DC17B4F0()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t, uint64_t);
  void (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, _QWORD, uint64_t, uint64_t);
  int v11;
  void (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  void (*v24)(uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  _BOOL4 v30;
  void (*v31)(uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _BYTE *v41;
  _BYTE *v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v51;
  void (*v52)(uint64_t, uint64_t);
  uint64_t v53;
  void (*type)(uint64_t, _QWORD, uint64_t, uint64_t);
  void (*v55)(uint64_t, uint64_t);
  uint64_t v56;
  uint64_t v57;
  void (*v58)(uint64_t, uint64_t);
  uint64_t v59;
  uint64_t v60[2];

  type = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v0 + 544);
  v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 536);
  v2 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 512);
  v3 = *(_QWORD *)(v0 + 304);
  v4 = *(_QWORD *)(v0 + 264);
  v5 = *(_QWORD *)(v0 + 248);
  v6 = *(_QWORD *)(v0 + 224);
  v7 = *(_QWORD *)(v0 + 200);
  v53 = *(_QWORD *)(v0 + 208);
  v8 = *(_QWORD *)(v0 + 192);
  *(_QWORD *)(v0 + 576) = swift_getObjectType();
  v2(v8, v3, v4);
  v9 = v8 + *(int *)(v7 + 20);
  v1(v9, v5, v6);
  type(v9, 0, 1, v6);
  v10 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v53 + 56);
  *(_QWORD *)(v0 + 584) = v10;
  v10(v8, 0, 1, v7);
  sub_1DC12A1B8();
  sub_1DC404A68();
  sub_1DC092F14(v8, &qword_1F034C568, (void (*)(uint64_t))type metadata accessor for WatchlistMembershipCommandContext);
  v11 = *(unsigned __int8 *)(v0 + 592);
  if (v11 == 2)
  {
    v12 = *(void (**)(uint64_t, uint64_t))(v0 + 520);
    v13 = *(_QWORD *)(v0 + 304);
    v14 = *(_QWORD *)(v0 + 264);
    v15 = *(_QWORD *)(v0 + 248);
    v16 = *(_QWORD *)(v0 + 224);
    v17 = *(_QWORD *)(v0 + 232);
    v18 = *(_QWORD *)(v0 + 216);
    swift_release();
    MEMORY[0x1DF0C2F18]("Unexpectedly found no state for Commands.Watchlist.membership, this should never fail.", 86, 2, MEMORY[0x1E0DEE9D8]);
    sub_1DC3FF968();
    sub_1DC080808(&qword_1F034CE68, (uint64_t (*)(uint64_t))MEMORY[0x1E0C903C0], MEMORY[0x1E0C903C8]);
    swift_allocError();
    sub_1DC3FF95C();
    swift_willThrow();
    sub_1DC0926D8(v18, type metadata accessor for WatchlistMembershipCommandContext);
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v15, v16);
    v12(v13, v14);
LABEL_27:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  if ((v11 & 1) != 0)
    v19 = 0x6863746157746F6ELL;
  else
    v19 = 0x676E696863746177;
  if ((v11 & 1) != 0)
    v20 = 0xEB00000000676E69;
  else
    v20 = 0xE800000000000000;
  if ((*(_BYTE *)(v0 + 593) & 1) != 0)
    v21 = 0x6863746157746F6ELL;
  else
    v21 = 0x676E696863746177;
  if ((*(_BYTE *)(v0 + 593) & 1) != 0)
    v22 = 0xEB00000000676E69;
  else
    v22 = 0xE800000000000000;
  if (v19 == v21 && v20 == v22)
  {
    v59 = v19;
    swift_bridgeObjectRelease_n();
LABEL_20:
    swift_release();
    v24 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 456);
    v25 = *(_QWORD *)(v0 + 344);
    v26 = *(_QWORD *)(v0 + 312);
    v27 = *(_QWORD *)(v0 + 168);
    (*(void (**)(_QWORD, _QWORD, _QWORD))(v0 + 448))(*(_QWORD *)(v0 + 392), *(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 368));
    v24(v25, v27, v26);
    v28 = sub_1DC403F4C();
    v29 = sub_1DC408FC8();
    v30 = os_log_type_enabled(v28, v29);
    v31 = *(void (**)(uint64_t, uint64_t))(v0 + 472);
    v32 = *(_QWORD *)(v0 + 392);
    v33 = *(_QWORD *)(v0 + 344);
    if (v30)
    {
      v52 = *(void (**)(uint64_t, uint64_t))(v0 + 464);
      v51 = *(_QWORD *)(v0 + 368);
      v56 = *(_QWORD *)(v0 + 312);
      v55 = *(void (**)(uint64_t, uint64_t))(v0 + 472);
      v34 = swift_slowAlloc();
      v57 = swift_slowAlloc();
      v60[0] = v57;
      *(_DWORD *)v34 = 136315906;
      *(_QWORD *)(v0 + 96) = sub_1DC2A9C74(v21, v22, v60);
      sub_1DC4095B0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v34 + 12) = 2080;
      *(_QWORD *)(v0 + 104) = sub_1DC2A9C74(v59, v20, v60);
      sub_1DC4095B0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v34 + 22) = 2080;
      v35 = sub_1DC4003A0();
      *(_QWORD *)(v0 + 112) = sub_1DC2A9C74(v35, v36, v60);
      sub_1DC4095B0();
      swift_bridgeObjectRelease();
      v52(v32, v51);
      *(_WORD *)(v34 + 32) = 2080;
      v37 = sub_1DC40055C();
      *(_QWORD *)(v0 + 120) = sub_1DC2A9C74(v37, v38, v60);
      sub_1DC4095B0();
      swift_bridgeObjectRelease();
      v55(v33, v56);
      _os_log_impl(&dword_1DC07D000, v28, v29, "Unable to toggle symbol watchlist membership to state it's already in expectedState=%s, currentState=%s, symbolID=%s, watchlistID=%s", (uint8_t *)v34, 0x2Au);
      swift_arrayDestroy();
      MEMORY[0x1DF0CAC88](v57, -1, -1);
      MEMORY[0x1DF0CAC88](v34, -1, -1);
    }
    else
    {
      v39 = *(_QWORD *)(v0 + 312);
      (*(void (**)(_QWORD, _QWORD))(v0 + 464))(*(_QWORD *)(v0 + 392), *(_QWORD *)(v0 + 368));
      v31(v33, v39);
    }

    v40 = sub_1DC400A18();
    sub_1DC080808(&qword_1F034CE70, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAE9F8], MEMORY[0x1E0DAEA00]);
    swift_allocError();
    v42 = v41;
    if ((v11 & 1) != 0)
      v43 = sub_1DC4099E8();
    else
      v43 = 1;
    v58 = *(void (**)(uint64_t, uint64_t))(v0 + 520);
    v44 = *(_QWORD *)(v0 + 304);
    v45 = *(_QWORD *)(v0 + 264);
    v46 = *(_QWORD *)(v0 + 248);
    v48 = *(_QWORD *)(v0 + 224);
    v47 = *(_QWORD *)(v0 + 232);
    v49 = *(_QWORD *)(v0 + 216);
    swift_bridgeObjectRelease();
    *v42 = v43 & 1;
    (*(void (**)(_BYTE *, _QWORD, uint64_t))(*(_QWORD *)(v40 - 8) + 104))(v42, *MEMORY[0x1E0DAE9F0], v40);
    swift_willThrow();
    sub_1DC0926D8(v49, type metadata accessor for WatchlistMembershipCommandContext);
    (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v46, v48);
    v58(v44, v45);
    goto LABEL_27;
  }
  v23 = sub_1DC4099E8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v23 & 1) != 0)
  {
    v59 = v19;
    goto LABEL_20;
  }
  return swift_task_switch();
}

uint64_t sub_1DC17BC18()
{
  uint64_t v0;
  void (*v1)(uint64_t, _QWORD, uint64_t, uint64_t);
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  id v17;
  NSObject *v18;
  os_log_type_t v19;
  _BOOL4 v20;
  void (*v21)(uint64_t, uint64_t);
  void (*v22)(uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  id v34;
  uint64_t v35;
  void (*v36)(uint64_t, uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  _BOOL4 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  void (*v57)(uint64_t, uint64_t);
  uint64_t v58;
  unint64_t v59;
  void (*v60)(uint64_t, uint64_t);
  uint64_t v61;
  NSObject *v62;
  uint64_t v63;
  void (*v64)(uint64_t, uint64_t);
  void (*v65)(uint64_t, uint64_t);
  void (*v67)(uint64_t, uint64_t);
  uint64_t v68;
  uint64_t v69;
  os_log_type_t v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  uint64_t v74;
  os_log_type_t typea;
  os_log_type_t type[8];
  NSObject *log;
  os_log_t loga;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81[2];

  v1 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v0 + 584);
  v2 = *(void **)(v0 + 504);
  v3 = *(_QWORD *)(v0 + 216);
  v4 = *(_QWORD *)(v0 + 200);
  v5 = *(_QWORD *)(v0 + 184);
  swift_release();
  sub_1DC0990BC(v3, v5, type metadata accessor for WatchlistMembershipCommandContext);
  v1(v5, 0, 1, v4);
  sub_1DC404AD4();
  if (v2)
  {
    v6 = v2;
    v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 448);
    v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 456);
    v9 = *(_QWORD *)(v0 + 384);
    v10 = *(_QWORD *)(v0 + 368);
    v11 = *(_QWORD *)(v0 + 328);
    v12 = *(_QWORD *)(v0 + 312);
    v14 = *(_QWORD *)(v0 + 160);
    v13 = *(_QWORD *)(v0 + 168);
    sub_1DC092F14(*(_QWORD *)(v0 + 184), &qword_1F034C568, (void (*)(uint64_t))type metadata accessor for WatchlistMembershipCommandContext);
    v8(v9, v14, v10);
    v15 = v6;
    v7(v11, v13, v12);
    v16 = v6;
    v17 = v6;
    v18 = sub_1DC403F4C();
    v19 = sub_1DC408FC8();
    v20 = os_log_type_enabled(v18, v19);
    v22 = *(void (**)(uint64_t, uint64_t))(v0 + 464);
    v21 = *(void (**)(uint64_t, uint64_t))(v0 + 472);
    v23 = *(_QWORD *)(v0 + 384);
    v24 = *(_QWORD *)(v0 + 368);
    v25 = *(_QWORD *)(v0 + 328);
    v26 = *(_QWORD *)(v0 + 312);
    if (v20)
    {
      v67 = *(void (**)(uint64_t, uint64_t))(v0 + 464);
      v71 = *(_QWORD *)(v0 + 312);
      if ((*(_BYTE *)(v0 + 593) & 1) != 0)
        v27 = 0xEB00000000676E69;
      else
        v27 = 0xE800000000000000;
      log = v18;
      if ((*(_BYTE *)(v0 + 593) & 1) != 0)
        v28 = 0x6863746157746F6ELL;
      else
        v28 = 0x676E696863746177;
      typea = v19;
      v29 = swift_slowAlloc();
      v73 = (_QWORD *)swift_slowAlloc();
      v79 = swift_slowAlloc();
      v81[0] = v79;
      *(_DWORD *)v29 = 136315906;
      *(_QWORD *)(v0 + 64) = sub_1DC2A9C74(v28, v27, v81);
      sub_1DC4095B0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v29 + 12) = 2080;
      v30 = sub_1DC4003A0();
      *(_QWORD *)(v0 + 72) = sub_1DC2A9C74(v30, v31, v81);
      sub_1DC4095B0();
      swift_bridgeObjectRelease();
      v67(v23, v24);
      *(_WORD *)(v29 + 22) = 2080;
      v32 = sub_1DC40055C();
      *(_QWORD *)(v0 + 80) = sub_1DC2A9C74(v32, v33, v81);
      sub_1DC4095B0();
      swift_bridgeObjectRelease();
      v21(v25, v71);
      *(_WORD *)(v29 + 32) = 2112;
      v34 = v15;
      v35 = _swift_stdlib_bridgeErrorToNSError();
      *(_QWORD *)(v0 + 88) = v35;
      sub_1DC4095B0();
      *v73 = v35;

      _os_log_impl(&dword_1DC07D000, log, typea, "Error toggling symbol membership to watchlist to state=%s, symbolID=%s, watchlistID=%s, error=%@", (uint8_t *)v29, 0x2Au);
      sub_1DC092F50(0, &qword_1F034AD20, (void (*)(uint64_t))sub_1DC17C78C);
      swift_arrayDestroy();
      MEMORY[0x1DF0CAC88](v73, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x1DF0CAC88](v79, -1, -1);
      MEMORY[0x1DF0CAC88](v29, -1, -1);

    }
    else
    {

      v22(v23, v24);
      v21(v25, v26);

    }
  }
  else
  {
    sub_1DC092F14(*(_QWORD *)(v0 + 184), &qword_1F034C568, (void (*)(uint64_t))type metadata accessor for WatchlistMembershipCommandContext);
  }
  v36 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 512);
  v37 = *(_QWORD *)(v0 + 304);
  v38 = *(_QWORD *)(v0 + 280);
  v39 = *(_QWORD *)(v0 + 264);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0 + 536))(*(_QWORD *)(v0 + 240), *(_QWORD *)(v0 + 248), *(_QWORD *)(v0 + 224));
  v36(v38, v37, v39);
  v40 = sub_1DC403F4C();
  v41 = sub_1DC408FE0();
  v42 = os_log_type_enabled(v40, v41);
  v43 = *(_QWORD *)(v0 + 304);
  v44 = *(_QWORD *)(v0 + 280);
  v45 = *(_QWORD *)(v0 + 264);
  v46 = *(_QWORD *)(v0 + 240);
  v47 = *(_QWORD *)(v0 + 248);
  v48 = *(_QWORD *)(v0 + 224);
  v49 = *(_QWORD *)(v0 + 216);
  if (v42)
  {
    v69 = *(_QWORD *)(v0 + 224);
    loga = *(os_log_t *)(v0 + 216);
    v80 = *(_QWORD *)(v0 + 248);
    v50 = *(_QWORD *)(v0 + 280);
    v74 = *(_QWORD *)(v0 + 272);
    *(_QWORD *)type = *(_QWORD *)(v0 + 304);
    v51 = *(_QWORD *)(v0 + 232);
    if ((*(_BYTE *)(v0 + 593) & 1) != 0)
      v52 = 0xEB00000000676E69;
    else
      v52 = 0xE800000000000000;
    if ((*(_BYTE *)(v0 + 593) & 1) != 0)
      v53 = 0x6863746157746F6ELL;
    else
      v53 = 0x676E696863746177;
    v70 = v41;
    v54 = swift_slowAlloc();
    v72 = swift_slowAlloc();
    v81[0] = v72;
    *(_DWORD *)v54 = 136315650;
    v68 = v45;
    *(_QWORD *)(v0 + 40) = sub_1DC2A9C74(v53, v52, v81);
    sub_1DC4095B0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v54 + 12) = 2080;
    v55 = sub_1DC40103C();
    *(_QWORD *)(v0 + 48) = sub_1DC2A9C74(v55, v56, v81);
    sub_1DC4095B0();
    swift_bridgeObjectRelease();
    v57 = *(void (**)(uint64_t, uint64_t))(v51 + 8);
    v57(v46, v69);
    *(_WORD *)(v54 + 22) = 2080;
    v58 = sub_1DC4011E0();
    *(_QWORD *)(v0 + 56) = sub_1DC2A9C74(v58, v59, v81);
    sub_1DC4095B0();
    swift_bridgeObjectRelease();
    v60 = *(void (**)(uint64_t, uint64_t))(v74 + 8);
    v60(v50, v68);
    _os_log_impl(&dword_1DC07D000, v40, v70, "Successfully toggled symbol membership to watchlist to state=%s, symbolID=%s, watchlistID=%s", (uint8_t *)v54, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1DF0CAC88](v72, -1, -1);
    MEMORY[0x1DF0CAC88](v54, -1, -1);

    sub_1DC0926D8((uint64_t)loga, type metadata accessor for WatchlistMembershipCommandContext);
    v57(v80, v69);
    v60(*(_QWORD *)type, v68);
  }
  else
  {
    v61 = *(_QWORD *)(v0 + 272);
    v62 = v40;
    v63 = *(_QWORD *)(v0 + 232);

    v64 = *(void (**)(uint64_t, uint64_t))(v61 + 8);
    v64(v44, v45);
    v65 = *(void (**)(uint64_t, uint64_t))(v63 + 8);
    v65(v46, v48);
    sub_1DC0926D8(v49, type metadata accessor for WatchlistMembershipCommandContext);
    v65(v47, v48);
    v64(v43, v45);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DC17C3FC()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DC17C544()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC8StocksUI19StocksIntentHandler_navigator;
  sub_1DC132300();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC8StocksUI19StocksIntentHandler_intentDeserializer);
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC8StocksUI19StocksIntentHandler_watchlistManager);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC8StocksUI19StocksIntentHandler_resolver);
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t sub_1DC17C5E0()
{
  return type metadata accessor for StocksIntentHandler();
}

uint64_t type metadata accessor for StocksIntentHandler()
{
  uint64_t result;

  result = qword_1F034CD78;
  if (!qword_1F034CD78)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1DC17C624()
{
  unint64_t v0;

  sub_1DC132300();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t sub_1DC17C6C0()
{
  return sub_1DC080808((unint64_t *)&unk_1F034CE58, (uint64_t (*)(uint64_t))type metadata accessor for StocksIntentHandler, (uint64_t)&unk_1DC411170);
}

uint64_t sub_1DC17C6EC()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1DC17C6F8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1DC17C744;
  return sub_1DC179408(a1);
}

uint64_t sub_1DC17C744()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

unint64_t sub_1DC17C78C()
{
  unint64_t result;

  result = qword_1EDB28A40;
  if (!qword_1EDB28A40)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EDB28A40);
  }
  return result;
}

uint64_t sub_1DC17C7C8(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  uint64_t v4;

  sub_1DC0A6204(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1DC17C804(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for StocksActivity(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC17C848()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int EnumCaseMultiPayload;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for StocksActivity(0) - 8) + 80);
  v2 = (v1 + 40) & ~v1;
  swift_unknownObjectRelease();
  swift_release();
  v3 = v0 + v2;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_deallocObject();
    case 1u:
      type metadata accessor for ForYouSectionDescriptor();
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload != 2)
      {
        if (EnumCaseMultiPayload == 1)
        {
          swift_bridgeObjectRelease();
        }
        else if (!EnumCaseMultiPayload)
        {
          v16 = sub_1DC4010E4();
LABEL_34:
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v0 + v2, v16);
        }
        sub_1DC175964(0, (unint64_t *)&qword_1EDB34880, (void (*)(uint64_t))type metadata accessor for ForYouSectionDescriptor, (void (*)(uint64_t))MEMORY[0x1E0DBA2A8]);
        v3 += *(int *)(v25 + 48);
        v14 = sub_1DC4059F8();
        goto LABEL_36;
      }
      v16 = sub_1DC407300();
      goto LABEL_34;
    case 2u:
      type metadata accessor for StocksActivity.StockFeed(0);
      v4 = swift_getEnumCaseMultiPayload();
      v5 = sub_1DC4010E4();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v0 + v2, v5);
      if (v4 == 1)
      {
        type metadata accessor for StocksActivity.StockFeed.Series(0);
        swift_bridgeObjectRelease();
      }
      return swift_deallocObject();
    case 3u:
      swift_bridgeObjectRelease();
      return swift_deallocObject();
    case 4u:
      type metadata accessor for StocksActivity.Article(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        swift_unknownObjectRelease();
      }
      else
      {
        sub_1DC401BB8();
        v19 = swift_getEnumCaseMultiPayload();
        swift_release();
        if (v19 != 1)
        {
          sub_1DC175964(0, (unint64_t *)&qword_1EDB42670, (void (*)(uint64_t))MEMORY[0x1E0D57E30], (void (*)(uint64_t))MEMORY[0x1E0D57888]);
          v21 = v3 + *(int *)(v20 + 48);
          v22 = sub_1DC40202C();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v21, v22);
        }
        sub_1DC1446B4();
        v24 = v3 + *(int *)(v23 + 64);
        if (*(_QWORD *)(v24 + 24))
          __swift_destroy_boxed_opaque_existential_1(v24);
      }
      return swift_deallocObject();
    case 5u:
      v14 = sub_1DC3FFDD0();
      goto LABEL_36;
    case 6u:
      switch(*(_BYTE *)(v3 + 40))
      {
        case 0:
        case 3:
          goto LABEL_27;
        case 1:
          __swift_destroy_boxed_opaque_existential_1(v0 + v2);
          break;
        case 2:

          break;
        default:
          return swift_deallocObject();
      }
      return swift_deallocObject();
    case 7u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v6 = v3 + *(int *)(type metadata accessor for CampaignRouteModel() + 40);
      v7 = sub_1DC403DA8();
      v8 = *(_QWORD *)(v7 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
        (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
      swift_unknownObjectWeakDestroy();
      return swift_deallocObject();
    case 8u:
      sub_1DC17769C(*(_QWORD *)v3);
      return swift_deallocObject();
    case 9u:
      if (*(_QWORD *)v3)
        goto LABEL_27;
      return swift_deallocObject();
    case 0xAu:
      v17 = sub_1DC4010E4();
      v18 = *(_QWORD *)(v17 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v0 + v2, 1, v17))
        (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v0 + v2, v17);
      if (*(_QWORD *)(v3 + *(int *)(type metadata accessor for WatchlistCreationRouteModel() + 20)))
LABEL_27:
        swift_release();
      return swift_deallocObject();
    case 0xBu:
      v9 = sub_1DC4010E4();
      v10 = *(_QWORD *)(v9 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v0 + v2, 1, v9))
        (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v0 + v2, v9);
      sub_1DC17CCB0();
      swift_release();
      return swift_deallocObject();
    case 0xCu:

      v11 = type metadata accessor for PreBuyFlowRouteModel();
      v12 = v3 + *(int *)(v11 + 20);
      v13 = sub_1DC403BD4();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
      v3 += *(int *)(v11 + 24);
      v14 = sub_1DC403CA0();
LABEL_36:
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v3, v14);
      return swift_deallocObject();
    default:
      return swift_deallocObject();
  }
}

void sub_1DC17CCB0()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1F034CE80)
  {
    sub_1DC092F50(255, (unint64_t *)&qword_1EDB28DE0, (void (*)(uint64_t))MEMORY[0x1E0DAF0D0]);
    sub_1DC092F50(255, qword_1F034E4C0, (void (*)(uint64_t))MEMORY[0x1E0DB96A0]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1F034CE80);
  }
}

uint64_t sub_1DC17CD40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for StocksActivity(0) - 8) + 80);
  v3 = *(_QWORD *)(v0 + 32);
  v4 = v0 + ((v2 + 40) & ~v2);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_1DC17C744;
  v5[2] = v3;
  v5[3] = v4;
  return swift_task_switch();
}

uint64_t sub_1DC17CDBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  unsigned int *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  unint64_t v26;
  unsigned int *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(unint64_t, uint64_t, uint64_t);
  char *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD v38[2];
  uint64_t v39;
  char *v40;
  __int128 v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _OWORD v53[3];

  v47 = a3;
  v52 = a1;
  v4 = sub_1DC4035C8();
  v43 = *(_QWORD *)(v4 - 8);
  v44 = v4;
  MEMORY[0x1E0C80A78](v4);
  v42 = (char *)v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v41 = sub_1DC4030F4();
  v39 = *(_QWORD *)(v41 - 8);
  MEMORY[0x1E0C80A78](v41);
  v40 = (char *)v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = sub_1DC4030E8();
  v45 = *(_QWORD *)(v51 - 8);
  MEMORY[0x1E0C80A78](v51);
  v48 = (char *)v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1DC4037F0();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1DC4038A4();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1DC403874();
  v49 = *(_QWORD *)(v16 - 8);
  v50 = v16;
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x1E0C80A78](v19);
  v46 = (char *)v38 - v21;
  if ((unint64_t)(a2 - 1) > 2)
    v22 = (unsigned int *)MEMORY[0x1E0DADB10];
  else
    v22 = (unsigned int *)qword_1EA451570[a2 - 1];
  v24 = v49;
  v23 = v50;
  v25 = v46;
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v49 + 104))(v46, *v22, v50, v20);
  (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E0DADA20], v8);
  (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v18, v25, v23);
  sub_1DC403898();
  sub_1DC080808(&qword_1F034CE90, (uint64_t (*)(uint64_t))MEMORY[0x1E0DADB70], MEMORY[0x1E0DADB60]);
  v38[1] = 0x80000001DC4360E0;
  sub_1DC4015C4();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  sub_1DC403C4C();
  v26 = sub_1DC403C64();
  if (v26 > 4)
    v27 = (unsigned int *)MEMORY[0x1E0DACFF0];
  else
    v27 = (unsigned int *)qword_1EA451588[v26];
  (*(void (**)(char *, _QWORD, _QWORD))(v39 + 104))(v40, *v27, v41);
  sub_1DC4030DC();
  sub_1DC17D468();
  v28 = sub_1DC401618();
  v29 = *(_QWORD *)(v28 - 8);
  v30 = (*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
  v31 = swift_allocObject();
  v41 = xmmword_1DC40DC10;
  *(_OWORD *)(v31 + 16) = xmmword_1DC40DC10;
  v32 = *MEMORY[0x1E0CF8170];
  v33 = *(void (**)(unint64_t, uint64_t, uint64_t))(v29 + 104);
  v33(v31 + v30, v32, v28);
  sub_1DC080808(&qword_1EDB29790, (uint64_t (*)(uint64_t))MEMORY[0x1E0DACFD0], MEMORY[0x1E0DACFC0]);
  sub_1DC4015C4();
  swift_bridgeObjectRelease();
  sub_1DC403C7C();
  v34 = v42;
  sub_1DC4035BC();
  v35 = swift_allocObject();
  *(_OWORD *)(v35 + 16) = v41;
  v33(v35 + v30, v32, v28);
  sub_1DC080808(&qword_1EDB29890, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD700], MEMORY[0x1E0DAD6F0]);
  v36 = v44;
  sub_1DC4015C4();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v43 + 8))(v34, v36);
  sub_1DC4037FC();
  sub_1DC080808(&qword_1F034CE98, (uint64_t (*)(uint64_t))MEMORY[0x1E0DADA48], MEMORY[0x1E0DADA40]);
  memset(v53, 0, 32);
  sub_1DC4015DC();
  sub_1DC150744((uint64_t)v53);
  (*(void (**)(char *, uint64_t))(v45 + 8))(v48, v51);
  return (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v46, v50);
}

uint64_t type metadata accessor for CampaignLandingPageTracker()
{
  return objc_opt_self();
}

uint64_t sub_1DC17D2E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v4 = sub_1DC403CA0();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = MEMORY[0x1E0C80A78](v4);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v5 + 16))((char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v4, v7);
  v8 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = a1;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v9 + v8, (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  sub_1DC401828();
  return swift_release();
}

uint64_t sub_1DC17D3C8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_1DC403CA0();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_1DC17D428(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(sub_1DC403CA0() - 8) + 80);
  return sub_1DC17CDBC(a1, *(_QWORD *)(v1 + 16), v1 + ((v3 + 24) & ~v3));
}

void sub_1DC17D468()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB3FE40)
  {
    sub_1DC401618();
    v0 = sub_1DC4099C4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB3FE40);
  }
}

void sub_1DC17D53C(void *a1)
{
  void *v2;
  id v3;
  void *v4;
  __int128 v5;
  __int128 v6;

  v2 = (void *)sub_1DC408A1C();
  v3 = objc_msgSend(a1, sel_objectForKey_, v2);

  if (v3)
  {
    sub_1DC409634();
    swift_unknownObjectRelease();
    sub_1DC0FA0E4(&v5, &v6);
    type metadata accessor for ForYouFeedViewController();
    swift_dynamicCast();
    sub_1DC4055CC();
    sub_1DC405074();

    swift_release();
  }
  else
  {
    __break(1u);
  }
}

uint64_t *sub_1DC17D62C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  __int128 v14;
  uint64_t v15;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1DC400514();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v13 = *(int *)(a3 + 24);
    v14 = *(_OWORD *)((char *)a2 + v13 + 24);
    *(_OWORD *)((char *)v4 + v13 + 24) = v14;
    (**(void (***)(void))(v14 - 8))();
  }
  return v4;
}

uint64_t sub_1DC17D6FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_1DC400514();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  return __swift_destroy_boxed_opaque_existential_1(a1 + *(int *)(a2 + 24));
}

_QWORD *sub_1DC17D758(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  __int128 v13;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1DC400514();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  v12 = *(int *)(a3 + 24);
  v13 = *(_OWORD *)((char *)a2 + v12 + 24);
  *(_OWORD *)((char *)a1 + v12 + 24) = v13;
  (**(void (***)(void))(v13 - 8))();
  return a1;
}

_QWORD *sub_1DC17D7FC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1DC400514();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  __swift_assign_boxed_opaque_existential_1((_QWORD *)((char *)a1 + *(int *)(a3 + 24)), (_QWORD *)((char *)a2 + *(int *)(a3 + 24)));
  return a1;
}

_OWORD *sub_1DC17D890(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  __int128 v13;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1DC400514();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = *(int *)(a3 + 24);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = *((_OWORD *)v12 + 1);
  *(_OWORD *)v11 = *(_OWORD *)v12;
  *((_OWORD *)v11 + 1) = v13;
  *((_QWORD *)v11 + 4) = *((_QWORD *)v12 + 4);
  return a1;
}

_QWORD *sub_1DC17D918(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  __int128 v14;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1DC400514();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1 + v11);
  v14 = *((_OWORD *)v13 + 1);
  *(_OWORD *)v12 = *(_OWORD *)v13;
  *((_OWORD *)v12 + 1) = v14;
  *((_QWORD *)v12 + 4) = *((_QWORD *)v13 + 4);
  return a1;
}

uint64_t sub_1DC17D9B0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC17D9BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1DC400514();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t sub_1DC17DA38()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC17DA44(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_1DC400514();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for TickerRefreshPriceDataBlueprintModifier()
{
  uint64_t result;

  result = qword_1EDB283D0;
  if (!qword_1EDB283D0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1DC17DAF4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1DC400514();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1DC17DB70(uint64_t a1, void (*a2)(char *), uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *);
  char v35[16];
  uint64_t v36;
  uint64_t v37;
  _QWORD v38[4];
  char v39[24];

  v33 = a3;
  v34 = a2;
  v5 = sub_1DC404984();
  v27 = *(_QWORD *)(v5 - 8);
  v28 = v5;
  MEMORY[0x1E0C80A78](v5);
  v26 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0AE268(0, &qword_1EDB2A270, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB9A28]);
  v31 = *(_QWORD *)(v7 - 8);
  v32 = v7;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v25 - v8;
  sub_1DC0DBB7C();
  MEMORY[0x1E0C80A78](v10);
  sub_1DC0AE268(0, (unint64_t *)&qword_1EDB2AAD8, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790]);
  v29 = *(_QWORD *)(v11 - 8);
  v30 = v11;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v25 - v12;
  v36 = v3;
  v37 = a1;
  v14 = sub_1DC155148((void (*)(char *))sub_1DC17F2E4, (uint64_t)v35, (uint64_t)v39);
  sub_1DC0AE268(0, (unint64_t *)&qword_1EDB29D30, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60]);
  v16 = v15;
  v17 = sub_1DC0DDDA0(&qword_1EDB29D20, MEMORY[0x1E0DB7B88]);
  v18 = sub_1DC0DDDA0(&qword_1EDB29D18, MEMORY[0x1E0DB7B80]);
  MEMORY[0x1DF0C311C](v14, v16, v17, v18);
  type metadata accessor for TickerModel();
  sub_1DC0DDCD4();
  sub_1DC080808(&qword_1EDB2CA50, (uint64_t (*)(uint64_t))type metadata accessor for TickerModel, (uint64_t)&unk_1DC4278A0);
  sub_1DC406D0C();
  sub_1DC17F300();
  sub_1DC404F24();
  __swift_project_boxed_opaque_existential_1(v38, v38[3]);
  if ((sub_1DC404990() & 1) != 0)
  {
    v20 = v31;
    v19 = v32;
    (*(void (**)(char *, _QWORD, uint64_t))(v31 + 104))(v9, *MEMORY[0x1E0DB9A20], v32);
  }
  else
  {
    v22 = v26;
    v21 = v27;
    v23 = v28;
    (*(void (**)(char *, _QWORD, uint64_t))(v27 + 104))(v26, *MEMORY[0x1E0DB7FB8], v28);
    sub_1DC405554();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v22, v23);
    v20 = v31;
    v19 = v32;
  }
  v34(v9);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v9, v19);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v13, v30);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
}

uint64_t sub_1DC17DEAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE v17[8];
  uint64_t v18;
  uint64_t v19;

  sub_1DC10D848();
  MEMORY[0x1E0C80A78](v6);
  sub_1DC0AE268(0, (unint64_t *)&qword_1EDB29D30, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60]);
  sub_1DC4046FC();
  v18 = v19;
  v14 = a2;
  v15 = a3;
  v16 = a1;
  v7 = sub_1DC15517C((void (*)(char *))sub_1DC17F344, (uint64_t)v13, (uint64_t)v17);
  sub_1DC0F6C50(0);
  v9 = v8;
  v10 = sub_1DC080808(&qword_1EDB29B90, (uint64_t (*)(uint64_t))sub_1DC0F6C50, MEMORY[0x1E0DB6F08]);
  v11 = sub_1DC080808(&qword_1EDB29B88, (uint64_t (*)(uint64_t))sub_1DC0F6C50, MEMORY[0x1E0DB6EF8]);
  MEMORY[0x1DF0C311C](v7, v9, v10, v11);
  type metadata accessor for TickerModel();
  sub_1DC0DDCD4();
  sub_1DC080808(&qword_1EDB2CA50, (uint64_t (*)(uint64_t))type metadata accessor for TickerModel, (uint64_t)&unk_1DC4278A0);
  return sub_1DC4046F0();
}

uint64_t sub_1DC17E038@<X0>(void (*a1)(char *, char *, uint64_t)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  _QWORD *v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t *v46;
  uint64_t (*v47)();
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  char v57;
  char *v58;
  _QWORD *v59;
  char *v60;
  uint64_t v61;
  int v62;
  uint64_t v63;
  int *v64;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  void (*v72)(char *, char *, uint64_t);
  int *v73;
  uint64_t v74;
  char v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  char v84;
  char v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t *v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  char *v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  char *v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  _QWORD *v114;
  void (*v115)(char *, char *, uint64_t);
  uint64_t v116;

  v100 = a4;
  v95 = a3;
  v109 = a2;
  v116 = a5;
  v6 = sub_1DC4011C8();
  MEMORY[0x1E0C80A78](v6);
  v98 = (char *)&v88 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for PriceViewModel();
  MEMORY[0x1E0C80A78](v8);
  v99 = (uint64_t)&v88 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v97 = sub_1DC4008EC();
  v105 = *(_QWORD *)(v97 - 8);
  MEMORY[0x1E0C80A78](v97);
  v103 = (char *)&v88 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1DC4010E4();
  v106 = *(_QWORD *)(v11 - 8);
  v107 = v11;
  MEMORY[0x1E0C80A78](v11);
  v104 = (char *)&v88 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1DC089DA4(0, &qword_1EDB353E0, type metadata accessor for StockSparklineViewModel, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v14);
  v102 = (uint64_t)&v88 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v101 = (char *)&v88 - v17;
  sub_1DC089DA4(0, &qword_1EDB28DC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF040], v13);
  MEMORY[0x1E0C80A78](v18);
  v96 = (uint64_t)&v88 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v111 = (char *)&v88 - v21;
  MEMORY[0x1E0C80A78](v22);
  v110 = (char *)&v88 - v23;
  v24 = sub_1DC401030();
  v112 = *(_QWORD *)(v24 - 8);
  v113 = v24;
  MEMORY[0x1E0C80A78](v24);
  v108 = (char *)&v88 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC089DA4(0, qword_1EDB2D9A0, (uint64_t (*)(uint64_t))type metadata accessor for StockViewModel, v13);
  MEMORY[0x1E0C80A78](v26);
  v28 = (char *)&v88 - v27;
  v29 = type metadata accessor for TickerModel();
  MEMORY[0x1E0C80A78](v29);
  v31 = (char *)&v88 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v32);
  v34 = (char *)&v88 - v33;
  v35 = type metadata accessor for StockViewModel();
  v36 = *(_QWORD *)(v35 - 8);
  MEMORY[0x1E0C80A78](v35);
  v38 = (char *)&v88 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v39);
  v41 = (char *)&v88 - v40;
  sub_1DC0F6C50(0);
  v114 = v42;
  v115 = a1;
  sub_1DC404354();
  v43 = (uint64_t *)v31;
  sub_1DC0990BC((uint64_t)v34, (uint64_t)v31, (uint64_t (*)(_QWORD))type metadata accessor for TickerModel);
  sub_1DC0F14E0();
  v45 = v44;
  sub_1DC092ED0((uint64_t)v43 + *(int *)(v44 + 48), (uint64_t)v28, (uint64_t (*)(_QWORD))type metadata accessor for StockViewModel);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v28, 0, 1, v35);
  sub_1DC0926D8((uint64_t)v34, (uint64_t (*)(_QWORD))type metadata accessor for TickerModel);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v28, 1, v35) == 1)
  {
    v46 = qword_1EDB2D9A0;
    v47 = type metadata accessor for StockViewModel;
    v48 = (uint64_t)v28;
LABEL_10:
    sub_1DC0B091C(v48, v46, (uint64_t (*)(uint64_t))v47);
    return (*(uint64_t (**)(uint64_t, void (*)(char *, char *, uint64_t)))(*(v114 - 1) + 16))(v116, v115);
  }
  v93 = v35;
  v89 = v45;
  v90 = v38;
  v91 = v43;
  v92 = v29;
  v50 = v112;
  v49 = v113;
  sub_1DC092ED0((uint64_t)v28, (uint64_t)v41, (uint64_t (*)(_QWORD))type metadata accessor for StockViewModel);
  type metadata accessor for TickerRefreshPriceDataBlueprintModifier();
  v51 = v109;
  v52 = sub_1DC400508();
  v53 = sub_1DC4010B4();
  v55 = *(_QWORD *)(v52 + 16);
  v94 = v41;
  if (v55)
  {
    v56 = sub_1DC0ED368(v53, v54);
    if ((v57 & 1) != 0)
    {
      v58 = v110;
      (*(void (**)(char *, unint64_t, uint64_t))(v50 + 16))(v110, *(_QWORD *)(v52 + 56) + *(_QWORD *)(v50 + 72) * v56, v49);
      v59 = *(_QWORD **)(v50 + 56);
      ((void (*)(char *, _QWORD, uint64_t, uint64_t))v59)(v58, 0, 1, v49);
    }
    else
    {
      v59 = *(_QWORD **)(v50 + 56);
      v58 = v110;
      ((void (*)(char *, uint64_t, uint64_t, uint64_t))v59)(v110, 1, 1, v49);
    }
  }
  else
  {
    v59 = *(_QWORD **)(v50 + 56);
    v60 = v110;
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v59)(v110, 1, 1, v49);
    v58 = v60;
  }
  v61 = v51;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v62 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v50 + 48))(v58, 1, v49);
  v63 = (uint64_t)v111;
  v64 = (int *)v93;
  if (v62 == 1)
  {
    sub_1DC0926D8((uint64_t)v94, (uint64_t (*)(_QWORD))type metadata accessor for StockViewModel);
    v46 = &qword_1EDB28DC0;
    v47 = MEMORY[0x1E0DAF040];
    v48 = (uint64_t)v58;
    goto LABEL_10;
  }
  v66 = (uint64_t)v108;
  (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v108, v58, v49);
  v114 = v59;
  v67 = v101;
  v68 = v94;
  sub_1DC17E900(v61, v94, v66, v101);
  v69 = v107;
  v115 = *(void (**)(char *, char *, uint64_t))(v106 + 16);
  v115(v104, v68, v107);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v50 + 16))(v63, v66, v49);
  ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v114)(v63, 0, 1, v49);
  v70 = v102;
  sub_1DC0EDD64((uint64_t)v67, v102, &qword_1EDB353E0, type metadata accessor for StockSparklineViewModel);
  v71 = &v68[v64[8]];
  v72 = *(void (**)(char *, char *, uint64_t))(v105 + 16);
  v73 = v64;
  v74 = v97;
  v72(v103, v71, v97);
  v75 = v68[v73[9]];
  v76 = (uint64_t)v90;
  v77 = v104;
  v115(v90, v104, v69);
  sub_1DC0EDD64(v63, v76 + v73[5], &qword_1EDB28DC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF040]);
  sub_1DC0EDD64(v70, v76 + v73[6], &qword_1EDB353E0, type metadata accessor for StockSparklineViewModel);
  v78 = v103;
  v72((char *)(v76 + v73[8]), v103, v74);
  *(_BYTE *)(v76 + v73[9]) = v75;
  v79 = v96;
  sub_1DC0EDD64(v63, v96, &qword_1EDB28DC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF040]);
  v80 = v98;
  v81 = v77;
  sub_1DC401078();
  v82 = v99;
  sub_1DC0FE8A4(v79, v80, 9666786, 0xA300000000000000, v99);
  (*(void (**)(char *, uint64_t))(v105 + 8))(v78, v74);
  sub_1DC0B091C(v102, &qword_1EDB353E0, type metadata accessor for StockSparklineViewModel);
  sub_1DC0B091C(v63, &qword_1EDB28DC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF040]);
  (*(void (**)(char *, uint64_t))(v106 + 8))(v81, v107);
  sub_1DC092ED0(v82, v76 + v73[7], (uint64_t (*)(_QWORD))type metadata accessor for PriceViewModel);
  sub_1DC0AE268(0, (unint64_t *)&qword_1EDB29D30, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60]);
  sub_1DC404708();
  sub_1DC0AE268(0, (unint64_t *)&qword_1EDB2AAD8, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790]);
  v83 = sub_1DC406C4C();
  v85 = v84;
  swift_bridgeObjectRelease();
  if ((v85 & 1) != 0)
    v86 = 0;
  else
    v86 = v83;
  v87 = (uint64_t)v91 + *(int *)(v89 + 48);
  *v91 = v86;
  sub_1DC0990BC(v76, v87, (uint64_t (*)(_QWORD))type metadata accessor for StockViewModel);
  sub_1DC080808(&qword_1EDB2CA50, (uint64_t (*)(uint64_t))type metadata accessor for TickerModel, (uint64_t)&unk_1DC4278A0);
  sub_1DC404348();
  sub_1DC0926D8(v76, (uint64_t (*)(_QWORD))type metadata accessor for StockViewModel);
  sub_1DC0B091C((uint64_t)v101, &qword_1EDB353E0, type metadata accessor for StockSparklineViewModel);
  (*(void (**)(char *, uint64_t))(v112 + 8))(v108, v113);
  return sub_1DC0926D8((uint64_t)v94, (uint64_t (*)(_QWORD))type metadata accessor for StockViewModel);
}

uint64_t sub_1DC17E900@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  uint64_t v6;
  char *v7;
  uint64_t (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  int *v54;
  uint64_t v55;
  int v56;
  char *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  char v63;
  char *v64;
  char *v65;
  void (*v66)(char *, char *, uint64_t);
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t (*v70)(uint64_t);
  uint64_t v71;
  uint64_t v72;
  void (*v73)(uint64_t, _QWORD, uint64_t, uint64_t);
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  int v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  void *v83;
  uint64_t (*v84)(uint64_t, uint64_t, uint64_t, int *);
  char *v85;
  uint64_t v86;
  void (*v87)(char *, uint64_t, uint64_t);
  char *v88;
  char *v89;
  int v90;
  uint64_t v91;
  char v92;
  char v93;
  char *v94;
  int *v95;
  char *v96;
  char *v97;
  char *v99;
  char *v100;
  int v101;
  uint64_t v102;
  char v103;
  char v104;
  char *v105;
  char *v106;
  void (*v107)(char *, char *, uint64_t);
  char *v108;
  char *v109;
  char *v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t refreshed;
  char *v124;

  v120 = a3;
  v121 = a4;
  v112 = type metadata accessor for StockSparklineViewModel.CacheModel(0);
  MEMORY[0x1E0C80A78](v112);
  v7 = (char *)&v107 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1DC089DA4(0, &qword_1EDB353E0, type metadata accessor for StockSparklineViewModel, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v107 - v10;
  sub_1DC089DA4(0, &qword_1EDB28DC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF040], v8);
  MEMORY[0x1E0C80A78](v12);
  v117 = (char *)&v107 - v13;
  sub_1DC089DA4(0, &qword_1EDB3F430, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB24D8], v8);
  MEMORY[0x1E0C80A78](v14);
  v113 = (uint64_t)&v107 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v115 = (uint64_t)&v107 - v17;
  v119 = sub_1DC408614();
  v122 = *(_QWORD *)(v119 - 8);
  MEMORY[0x1E0C80A78](v119);
  v108 = (char *)&v107 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v114 = (char *)&v107 - v20;
  MEMORY[0x1E0C80A78](v21);
  v109 = (char *)&v107 - v22;
  sub_1DC089DA4(0, (unint64_t *)&unk_1EDB28D90, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAEFA8], v8);
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)&v107 - v24;
  v26 = sub_1DC400F7C();
  v27 = *(_QWORD *)(v26 - 8);
  MEMORY[0x1E0C80A78](v26);
  v110 = (char *)&v107 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v29);
  v111 = (char *)&v107 - v30;
  MEMORY[0x1E0C80A78](v31);
  v118 = (char *)&v107 - v32;
  MEMORY[0x1E0C80A78](v33);
  v35 = (char *)&v107 - v34;
  refreshed = type metadata accessor for TickerRefreshPriceDataBlueprintModifier();
  v116 = a1;
  v36 = sub_1DC4004F0();
  v124 = a2;
  v37 = sub_1DC4010B4();
  if (*(_QWORD *)(v36 + 16) && (v39 = sub_1DC0ED368(v37, v38), (v40 & 1) != 0))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v27 + 16))(v25, *(_QWORD *)(v36 + 56) + *(_QWORD *)(v27 + 72) * v39, v26);
    v41 = 0;
  }
  else
  {
    v41 = 1;
  }
  v42 = refreshed;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v27 + 56))(v25, v41, 1, v26);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26) == 1)
  {
    v43 = v7;
    sub_1DC0B091C((uint64_t)v25, (unint64_t *)&unk_1EDB28D90, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAEFA8]);
    v44 = v124;
  }
  else
  {
    v107 = *(void (**)(char *, char *, uint64_t))(v27 + 32);
    v107(v35, v25, v26);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v116 + *(int *)(v42 + 24)), *(_QWORD *)(v116 + *(int *)(v42 + 24) + 24));
    v45 = sub_1DC401030();
    v46 = *(_QWORD *)(v45 - 8);
    v47 = (uint64_t)v117;
    (*(void (**)(char *, uint64_t, uint64_t))(v46 + 16))(v117, v120, v45);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v46 + 56))(v47, 0, 1, v45);
    v48 = v115;
    v44 = v124;
    sub_1DC0EE14C((uint64_t)v35, v47, v124, v115, 0.02);
    v49 = v48;
    sub_1DC0B091C(v47, &qword_1EDB28DC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF040]);
    v50 = v122;
    v51 = v48;
    v52 = v119;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v122 + 48))(v51, 1, v119) != 1)
    {
      v87 = *(void (**)(char *, uint64_t, uint64_t))(v50 + 32);
      v88 = v109;
      v87(v109, v49, v52);
      v89 = v114;
      (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v114, v88, v52);
      (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v118, v35, v26);
      v124 = (char *)sub_1DC401024();
      LODWORD(refreshed) = v90;
      v91 = sub_1DC400F88();
      v93 = v92;
      (*(void (**)(char *, uint64_t))(v50 + 8))(v88, v52);
      (*(void (**)(char *, uint64_t))(v27 + 8))(v35, v26);
      v94 = v121;
      v87(v121, (uint64_t)v89, v52);
      v95 = (int *)type metadata accessor for StockSparklineViewModel(0);
      v107(&v94[v95[8]], v118, v26);
      v96 = &v94[v95[5]];
      *(_QWORD *)v96 = v124;
      v96[8] = refreshed & 1;
      v97 = &v94[v95[6]];
      *(_QWORD *)v97 = v91;
      v97[8] = v93 & 1;
      v94[v95[7]] = 0;
      return (*(uint64_t (**)(char *, _QWORD, uint64_t, int *))(*((_QWORD *)v95 - 1) + 56))(v94, 0, 1, v95);
    }
    v43 = v7;
    (*(void (**)(char *, uint64_t))(v27 + 8))(v35, v26);
    sub_1DC0B091C(v49, &qword_1EDB3F430, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB24D8]);
  }
  v53 = type metadata accessor for StockViewModel();
  sub_1DC0EDD64((uint64_t)&v44[*(int *)(v53 + 24)], (uint64_t)v11, &qword_1EDB353E0, type metadata accessor for StockSparklineViewModel);
  v54 = (int *)type metadata accessor for StockSparklineViewModel(0);
  v55 = *((_QWORD *)v54 - 1);
  v56 = (*(uint64_t (**)(char *, uint64_t, int *))(v55 + 48))(v11, 1, v54);
  v115 = v55;
  if (v56 == 1)
  {
    sub_1DC0B091C((uint64_t)v11, &qword_1EDB353E0, type metadata accessor for StockSparklineViewModel);
    v57 = v121;
  }
  else
  {
    v58 = v54[6];
    v59 = &v11[v54[5]];
    v60 = *(_QWORD *)v59;
    v61 = v59[8];
    v62 = *(_QWORD *)&v11[v58];
    v63 = v11[v58 + 8];
    v64 = &v11[v54[8]];
    v65 = &v43[*(int *)(v112 + 24)];
    v109 = *(char **)(v27 + 16);
    ((void (*)(char *, char *, uint64_t))v109)(v65, v64, v26);
    *(_QWORD *)v43 = v60;
    v43[8] = v61;
    *((_QWORD *)v43 + 2) = v62;
    v43[24] = v63;
    sub_1DC0926D8((uint64_t)v11, type metadata accessor for StockSparklineViewModel);
    v66 = *(void (**)(char *, char *, uint64_t))(v27 + 32);
    v67 = v110;
    v66(v110, v65, v26);
    v68 = (uint64_t)v111;
    v112 = (uint64_t)v66;
    v66(v111, v67, v26);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v116 + *(int *)(refreshed + 24)), *(_QWORD *)(v116 + *(int *)(refreshed + 24) + 24));
    v69 = sub_1DC401030();
    v70 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF040];
    v71 = *(_QWORD *)(v69 - 8);
    v72 = (uint64_t)v117;
    (*(void (**)(char *, uint64_t, uint64_t))(v71 + 16))(v117, v120, v69);
    v73 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v71 + 56);
    v74 = v124;
    v73(v72, 0, 1, v69);
    v75 = v113;
    sub_1DC0EE14C(v68, v72, v74, v113, 0.02);
    sub_1DC0B091C(v72, &qword_1EDB28DC0, v70);
    v76 = v122;
    v77 = v119;
    v78 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v122 + 48))(v75, 1, v119);
    v57 = v121;
    if (v78 != 1)
    {
      v124 = *(char **)(v76 + 32);
      v99 = v108;
      ((void (*)(char *, uint64_t, uint64_t))v124)(v108, v75, v77);
      v100 = v114;
      (*(void (**)(char *, char *, uint64_t))(v76 + 16))(v114, v99, v77);
      ((void (*)(char *, uint64_t, uint64_t))v109)(v118, v68, v26);
      refreshed = sub_1DC401024();
      LODWORD(v117) = v101;
      v102 = sub_1DC400F88();
      v104 = v103;
      (*(void (**)(char *, uint64_t))(v122 + 8))(v99, v77);
      (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v68, v26);
      ((void (*)(char *, char *, uint64_t))v124)(v57, v100, v77);
      ((void (*)(char *, char *, uint64_t))v112)(&v57[v54[8]], v118, v26);
      v105 = &v57[v54[5]];
      *(_QWORD *)v105 = refreshed;
      v105[8] = v117 & 1;
      v106 = &v57[v54[6]];
      *(_QWORD *)v106 = v102;
      v106[8] = v104 & 1;
      v57[v54[7]] = 0;
      v84 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v115 + 56);
      v85 = v57;
      v86 = 0;
      return v84((uint64_t)v85, v86, 1, v54);
    }
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v68, v26);
    sub_1DC0B091C(v75, &qword_1EDB3F430, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB24D8]);
  }
  sub_1DC408FC8();
  sub_1DC089DA4(0, (unint64_t *)&qword_1EDB400C0, (uint64_t (*)(uint64_t))sub_1DC1542B8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v79 = swift_allocObject();
  *(_OWORD *)(v79 + 16) = xmmword_1DC40DC10;
  v80 = sub_1DC4010B4();
  v82 = v81;
  *(_QWORD *)(v79 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v79 + 64) = sub_1DC0E7FAC();
  *(_QWORD *)(v79 + 32) = v80;
  *(_QWORD *)(v79 + 40) = v82;
  sub_1DC09BDF8();
  v83 = (void *)sub_1DC409580();
  sub_1DC403F28();
  swift_bridgeObjectRelease();

  v84 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v115 + 56);
  v85 = v57;
  v86 = 1;
  return v84((uint64_t)v85, v86, 1, v54);
}

uint64_t sub_1DC17F2B8()
{
  return sub_1DC080808(qword_1EDB3DEA8, (uint64_t (*)(uint64_t))type metadata accessor for TickerRefreshPriceDataBlueprintModifier, (uint64_t)&unk_1DC411288);
}

uint64_t sub_1DC17F2E4(uint64_t a1)
{
  uint64_t v1;

  return sub_1DC17DEAC(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

unint64_t sub_1DC17F300()
{
  unint64_t result;

  result = qword_1EDB27EF0;
  if (!qword_1EDB27EF0)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC410CB0, &type metadata for TickerSectionDescriptor);
    atomic_store(result, (unint64_t *)&qword_1EDB27EF0);
  }
  return result;
}

uint64_t sub_1DC17F344@<X0>(void (*a1)(char *, char *, uint64_t)@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  return sub_1DC17E038(a1, v2[2], v2[3], v2[4], a2);
}

ValueMetadata *type metadata accessor for ForYouFeedPrewarmBlueprintModifier()
{
  return &type metadata for ForYouFeedPrewarmBlueprintModifier;
}

__n128 sub_1DC17F374@<Q0>(int a1@<W0>, double a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  id v37;
  void *v38;
  double v39;
  double v40;
  double v41;
  double v42;
  double v43;
  double v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  double v50;
  uint64_t v51;
  char v52;
  char v53;
  double v54;
  uint64_t v55;
  double v56;
  CGFloat y;
  CGFloat x;
  int v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  double v66;
  uint64_t v67;
  uint64_t v68;
  id v69;
  id v70;
  double v71;
  CGFloat v72;
  double v73;
  double v74;
  CGFloat v75;
  double v76;
  double v77;
  CGFloat v78;
  double v79;
  CGFloat v80;
  double v81;
  CGFloat v82;
  double v83;
  CGFloat v84;
  CGFloat v85;
  CGFloat v86;
  CGFloat v87;
  CGFloat v88;
  double v89;
  double v90;
  double v91;
  double v92;
  CGFloat v93;
  double v94;
  CGFloat v95;
  double v96;
  double v97;
  double v98;
  double v99;
  void *v100;
  void *v101;
  void *v102;
  double v103;
  double v104;
  double v105;
  double v106;
  double v107;
  double v108;
  double v109;
  void *v110;
  void *v111;
  double v112;
  CGFloat v113;
  CGFloat v114;
  CGFloat v115;
  CGFloat v116;
  CGFloat v117;
  CGFloat v118;
  CGFloat v119;
  CGFloat v120;
  CGFloat v121;
  CGFloat v122;
  CGFloat v123;
  double v124;
  BOOL v125;
  CGFloat v126;
  double v127;
  CGFloat v128;
  CGFloat v129;
  double v130;
  CGFloat v131;
  double v132;
  CGFloat v133;
  double v134;
  double v135;
  double v136;
  CGFloat v137;
  double v138;
  CGFloat v139;
  CGFloat v140;
  CGFloat v141;
  double v142;
  double v143;
  double v144;
  double v145;
  double v146;
  CGFloat v147;
  double v148;
  double v149;
  double v150;
  void *v151;
  void *v152;
  double v153;
  double v154;
  double v155;
  double v156;
  double v157;
  double v158;
  CGFloat v159;
  CGFloat v160;
  CGFloat v161;
  CGFloat v162;
  CGFloat Width;
  CGFloat Height;
  double v165;
  CGFloat MaxX;
  CGFloat v167;
  double v168;
  CGFloat v169;
  double v170;
  CGFloat v171;
  double v172;
  CGFloat v173;
  double v174;
  CGFloat v175;
  double MaxY;
  CGFloat v177;
  CGFloat v178;
  CGFloat v179;
  CGFloat v180;
  CGFloat v181;
  CGFloat MinX;
  double v183;
  double v184;
  CGFloat v185;
  CGFloat v186;
  CGFloat v187;
  CGFloat v188;
  CGFloat v189;
  CGFloat v190;
  CGFloat v191;
  CGFloat v192;
  CGFloat v193;
  CGFloat v194;
  CGFloat v195;
  CGFloat v196;
  CGFloat v197;
  CGFloat v198;
  CGFloat v199;
  CGFloat v200;
  CGFloat v201;
  CGFloat v202;
  CGFloat v203;
  double v204;
  CGFloat v205;
  CGFloat v206;
  CGFloat v207;
  CGFloat v208;
  CGFloat v209;
  CGFloat v210;
  double v211;
  double v212;
  double v213;
  CGFloat v214;
  uint64_t v215;
  unint64_t v216;
  CGFloat v217;
  CGFloat v218;
  double v219;
  double v220;
  CGFloat v221;
  CGFloat v222;
  uint64_t v223;
  CGFloat v224;
  double v225;
  CGFloat v226;
  double v227;
  CGFloat v228;
  CGFloat v229;
  double v230;
  double v231;
  double v232;
  double v233;
  double v234;
  double v235;
  double v236;
  double v237;
  CGFloat v238;
  CGFloat v239;
  CGFloat v240;
  CGFloat v241;
  CGFloat v242;
  CGFloat v243;
  double v244;
  double v245;
  double v246;
  CGFloat v247;
  CGFloat v248;
  CGFloat v249;
  CGFloat v250;
  CGFloat v251;
  double v252;
  double v253;
  CGFloat v254;
  CGFloat v255;
  CGFloat v256;
  CGFloat v257;
  double v258;
  double v259;
  double v260;
  CGFloat v261;
  CGFloat v262;
  CGFloat v263;
  uint64_t v264;
  unint64_t v265;
  CGFloat v266;
  CGFloat v267;
  CGFloat v268;
  CGFloat v269;
  CGFloat v270;
  CGFloat v271;
  double v272;
  CGFloat v273;
  __int128 v274;
  uint64_t v275;
  __int128 v276;
  __int128 v277;
  __int128 v278;
  __int128 v279;
  __int128 v280;
  __n128 result;
  uint64_t v282;
  CGFloat v283;
  CGFloat v284;
  CGFloat v285;
  CGFloat v286;
  CGFloat v287;
  CGFloat v288;
  double v289;
  CGFloat v290;
  CGFloat v291;
  CGFloat v292;
  CGFloat v293;
  double v294;
  CGFloat v295;
  CGFloat v296;
  CGFloat v297;
  CGFloat v298;
  double v299;
  double v300;
  CGRect v301;
  CGFloat v302;
  double v303;
  uint64_t v304;
  char *v305;
  uint64_t v306;
  uint64_t v307;
  char *v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  CGFloat v312;
  CGFloat v313;
  CGFloat v314;
  id v315;
  CGFloat v316;
  id v317;
  CGFloat v318;
  CGFloat v319;
  __int128 v320;
  __int128 v321;
  __int128 v322;
  __n128 v323;
  __int128 v324;
  __int128 v325;
  __int128 v326;
  __int128 v327;
  __int128 v328;
  __int128 v329;
  __int128 v330;
  __int128 v331;
  __int128 v332;
  __int128 v333;
  uint64_t v334;
  __int128 v335;
  __int128 v336;
  __int128 v337;
  __n128 v338;
  __int128 v339;
  __int128 v340;
  __int128 v341;
  __int128 v342;
  __int128 v343;
  __int128 v344;
  __int128 v345;
  __int128 v346;
  __int128 v347;
  __int128 v348;
  uint64_t v349;
  CGRect v350;
  CGRect v351;
  CGRect v352;
  CGRect v353;
  CGRect v354;
  CGRect v355;
  CGRect v356;
  CGRect v357;
  CGRect v358;
  CGRect v359;
  CGRect v360;
  CGRect v361;
  CGRect v362;
  CGRect v363;
  CGRect v364;
  CGRect v365;
  CGRect v366;
  CGRect v367;
  CGRect v368;
  CGRect v369;
  CGRect v370;
  CGRect v371;
  CGRect v372;
  CGRect v373;
  CGRect v374;
  CGRect v375;
  CGRect v376;
  CGRect v377;
  CGRect v378;
  CGRect v379;
  CGRect v380;
  CGRect v381;
  CGRect v382;
  CGRect v383;
  CGRect v384;
  CGRect v385;
  CGRect v386;
  CGRect v387;
  CGRect v388;
  CGRect v389;
  CGRect v390;
  CGRect v391;
  CGRect v392;
  CGRect v393;
  CGRect v394;
  CGRect v395;
  CGRect v396;
  CGRect v397;
  CGRect v398;
  CGRect v399;
  CGRect v400;

  v5 = v4;
  v311 = a4;
  v9 = sub_1DC4011C8();
  v301.origin.x = *(CGFloat *)(v9 - 8);
  *(_QWORD *)&v301.origin.y = v9;
  MEMORY[0x1E0C80A78](v9);
  *(_QWORD *)&v300 = (char *)&v282 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1DC406328();
  v309 = *(_QWORD *)(v11 - 8);
  v310 = v11;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v282 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v299 = COERCE_DOUBLE(type metadata accessor for PriceViewModel());
  MEMORY[0x1E0C80A78](*(_QWORD *)&v299);
  *(_QWORD *)&v301.size.height = (char *)&v282 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  *(_QWORD *)&v301.size.width = (char *)&v282 - v16;
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v282 - v18;
  v20 = sub_1DC4010E4();
  v21 = MEMORY[0x1E0C80A78](v20);
  v23 = (char *)&v282 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v306 = v25;
  v307 = v24;
  (*(void (**)(char *, double, __n128))(v25 + 16))(v23, COERCE_DOUBLE(*(_QWORD *)&a2), v21);
  *(double *)&v26 = COERCE_DOUBLE(type metadata accessor for StockViewModel());
  v27 = *(_QWORD *)&a2 + *(int *)(v26 + 28);
  v318 = *(double *)&v19;
  sub_1DC0FC054(v27, (uint64_t)v19);
  sub_1DC405200();
  v308 = v13;
  sub_1DC406304();
  v30 = v28 + v29;
  sub_1DC405224();
  v32 = v31;
  sub_1DC405230();
  v34 = v33;
  v296 = v32;
  sub_1DC408F74();
  v303 = v30;
  v36 = v34 - v35 - v30;
  v37 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC37F8]), sel_initForTextStyle_, *MEMORY[0x1E0DC4A98]);
  v304 = a3;
  v38 = (void *)sub_1DC405254();
  objc_msgSend(v37, sel_scaledValueForValue_compatibleWithTraitCollection_, v38, 22.0);
  v40 = v39;

  LODWORD(v313) = a1;
  v41 = 8.0;
  if ((a1 & 1) == 0)
    v41 = 24.0;
  v42 = v41 + v40;
  v43 = 12.0;
  if ((a1 & 1) == 0)
    v43 = 4.0;
  v302 = v42;
  v44 = v43 + v42;
  v45 = (_QWORD *)(v5 + 16);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v5 + 16), *(_QWORD *)(v5 + 40));
  v46 = sub_1DC40106C();
  v317 = sub_1DC1D60E4(v46, v47, 0);
  swift_bridgeObjectRelease();
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v5 + 16), *(_QWORD *)(v5 + 40));
  v312 = *(double *)&v26;
  v48 = *(int *)(v26 + 20);
  v49 = v5;
  v314 = a2;
  sub_1DC0FB1E8(*(_QWORD *)&a2 + v48);
  v316 = COERCE_DOUBLE(sub_1DC1D67D8());
  swift_bridgeObjectRelease();
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v5 + 16), *(_QWORD *)(v5 + 40));
  v305 = v23;
  sub_1DC4010D8();
  v315 = sub_1DC1D69AC();
  swift_bridgeObjectRelease();
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v5 + 16), *(_QWORD *)(v5 + 40));
  sub_1DC40133C();
  sub_1DC401324();
  if (qword_1EDB28E78 != -1)
    swift_once();
  v50 = v36 - v44;
  sub_1DC401318();
  swift_release();
  v51 = *(_QWORD *)&v318;
  v52 = *(_BYTE *)(*(_QWORD *)&v318 + 8);
  v319 = v44;
  v294 = v36;
  if ((v52 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    goto LABEL_23;
  }
  v53 = v335;
  v54 = **(double **)&v318;
  v55 = *(_QWORD *)&v301.size.width;
  sub_1DC0FC054(*(uint64_t *)&v318, *(uint64_t *)&v301.size.width);
  if ((v53 & 1) != 0)
  {
    v56 = v300;
    x = v301.origin.x;
    y = v301.origin.y;
    (*(void (**)(double, uint64_t, _QWORD))(*(_QWORD *)&v301.origin.x + 16))(COERCE_DOUBLE(*(_QWORD *)&v300), v55 + *(int *)(*(_QWORD *)&v299 + 40), *(_QWORD *)&v301.origin.y);
    v59 = (*(uint64_t (**)(double, CGFloat))(*(_QWORD *)&x + 88))(COERCE_DOUBLE(*(_QWORD *)&v56), COERCE_CGFLOAT(*(_QWORD *)&y));
    v60 = 2;
    if (v59 == *MEMORY[0x1E0DAF1E8]
      || v59 == *MEMORY[0x1E0DAF1F0]
      || v59 == *MEMORY[0x1E0DAF1C0]
      || v59 == *MEMORY[0x1E0DAF1D8]
      || v59 == *MEMORY[0x1E0DAF1C8]
      || v59 == *MEMORY[0x1E0DAF1E0])
    {
      goto LABEL_18;
    }
    if (v59 != *MEMORY[0x1E0DAF1D0])
    {
      if (v59 != *MEMORY[0x1E0DAF1B8])
        (*(void (**)(double, CGFloat))(*(_QWORD *)&x + 8))(COERCE_DOUBLE(*(_QWORD *)&v56), COERCE_CGFLOAT(*(_QWORD *)&y));
      v60 = 2;
      goto LABEL_18;
    }
  }
  v60 = 0;
LABEL_18:
  sub_1DC180A68(v55);
  if (qword_1EDB2D588 != -1)
    swift_once();
  sub_1DC0FC858(*(_QWORD *)(v51 + 48), *(_QWORD *)(v51 + 56), 5, 1, v60, v54);
  v62 = v61;
  v63 = *(_QWORD *)&v301.size.height;
  sub_1DC0FC054(v51, *(uint64_t *)&v301.size.height);
  if (!v62)
    swift_bridgeObjectRetain();
  sub_1DC180A68(v63);
LABEL_23:
  v64 = *(_QWORD *)(v51 + 16);
  v65 = *(_BYTE *)(v51 + 24);
  v66 = COERCE_DOUBLE(sub_1DC1D6B84());
  swift_bridgeObjectRelease();
  __swift_project_boxed_opaque_existential_1(v45, *(_QWORD *)(v49 + 40));
  v67 = sub_1DC0FC0DC(*(_QWORD *)&v314 + *(int *)(*(_QWORD *)&v312 + 32), 0);
  v69 = sub_1DC1D62CC(v67, v68, v64, v65);
  swift_bridgeObjectRelease();
  v70 = v315;
  objc_msgSend(v315, sel_boundingRectWithSize_options_context_, 32, 0, v50, 1.79769313e308);
  v72 = v71;
  v314 = v73;
  v75 = v74;
  v312 = v76;
  objc_msgSend(*(id *)&v66, sel_boundingRectWithSize_options_context_, 32, 0, v50, 1.79769313e308);
  v78 = v77;
  v80 = v79;
  v82 = v81;
  v84 = v83;
  objc_msgSend(v69, sel_boundingRectWithSize_options_context_, 32, 0, v50, 1.79769313e308);
  v301.size.width = v87;
  v301.size.height = v88;
  v301.origin.x = v85;
  v301.origin.y = v86;
  v299 = v78;
  v300 = v80;
  v297 = v84;
  v298 = v82;
  if ((LOBYTE(v313) & 1) != 0)
  {
    v295 = v50;
    objc_msgSend(v317, sel_boundingRectWithSize_options_context_, 1, 0, v50, 1.79769313e308);
    v296 = v143;
    v287 = v145;
    v288 = v144;
    v286 = v146;
    v147 = v316;
    objc_msgSend(*(id *)&v316, sel_size);
    v149 = v148;
    v313 = v150;
    v151 = (void *)sub_1DC4091A8();
    v152 = (void *)sub_1DC4091A8();
    objc_msgSend(v151, sel_ascender);
    v154 = v153;
    objc_msgSend(v152, sel_ascender);
    if (v154 > v155)
      v155 = v154;
    v156 = v155 + 14.0;
    objc_msgSend(v151, sel_ascender);
    v294 = v156;
    v158 = v156 - v157;
    v363.origin.x = v72;
    v159 = v314;
    v363.origin.y = v314;
    v363.size.width = v75;
    v160 = v72;
    v161 = v75;
    v162 = v312;
    v363.size.height = v312;
    Width = CGRectGetWidth(v363);
    v364.origin.x = v160;
    v364.origin.y = v159;
    v364.size.width = v161;
    v364.size.height = v162;
    Height = CGRectGetHeight(v364);
    v165 = v319;
    v365.origin.x = v319;
    v365.origin.y = v158;
    v365.size.width = Width;
    v365.size.height = Height;
    MaxX = CGRectGetMaxX(v365);
    v292 = Width;
    v293 = v158;
    v291 = Height;
    if (v149 + MaxX + 8.0 <= v295)
    {
      v369.origin.x = v165;
      v369.origin.y = v158;
      v369.size.width = Width;
      v369.size.height = Height;
      MinX = CGRectGetMinX(v369);
      v370.origin.y = v158;
      v183 = MinX;
      v370.origin.x = v165;
      v370.size.width = Width;
      v370.size.height = Height;
      v165 = v183 + CGRectGetWidth(v370) + 8.0;
      objc_msgSend(v152, sel_ascender);
      MaxY = v294 - v184;
      v179 = v318;
      v180 = v297;
      v181 = v298;
      v178 = v313;
    }
    else
    {
      objc_msgSend(*(id *)&v147, sel_boundingRectWithSize_options_context_, 1, 0, v295, 1.79769313e308);
      v167 = v158;
      v169 = v168;
      v171 = v170;
      v173 = v172;
      v175 = v174;
      v366.origin.x = v165;
      v366.origin.y = v167;
      v366.size.width = Width;
      v366.size.height = Height;
      MaxY = CGRectGetMaxY(v366);
      v367.origin.x = v169;
      v367.origin.y = v171;
      v367.size.width = v173;
      v367.size.height = v175;
      v177 = CGRectGetWidth(v367);
      v368.origin.x = v169;
      v368.origin.y = v171;
      v368.size.width = v173;
      v149 = v177;
      v368.size.height = v175;
      v178 = CGRectGetHeight(v368);
      v179 = v318;
      v180 = v297;
      v181 = v298;
    }
    v289 = v165;
    v290 = MaxY;
    v371.origin.x = v165;
    v371.origin.y = MaxY;
    v294 = v149;
    v371.size.width = v149;
    v313 = v178;
    v371.size.height = v178;
    v185 = CGRectGetMaxY(v371);
    v186 = v296;
    v372.origin.x = v296;
    v188 = v287;
    v187 = v288;
    v372.origin.y = v288;
    v372.size.width = v287;
    v189 = v286;
    v372.size.height = v286;
    v190 = CGRectGetWidth(v372);
    v373.origin.x = v186;
    v373.origin.y = v187;
    v373.size.width = v188;
    v373.size.height = v189;
    v374.size.height = CGRectGetHeight(v373);
    v374.origin.x = v319;
    v288 = v185;
    v374.origin.y = v185;
    v191 = v190;
    v192 = v319;
    v374.size.width = v191;
    v296 = v374.size.height;
    v193 = CGRectGetMaxY(v374);
    v195 = v299;
    v194 = v300;
    v375.origin.x = v299;
    v375.origin.y = v300;
    v375.size.width = v181;
    v375.size.height = v180;
    v196 = CGRectGetWidth(v375);
    v376.origin.x = v195;
    v376.origin.y = v194;
    v376.size.width = v181;
    v376.size.height = v180;
    v377.size.height = CGRectGetHeight(v376);
    v377.origin.x = v192;
    v318 = v193;
    v377.origin.y = v193;
    v314 = v196;
    v377.size.width = v196;
    v312 = v377.size.height;
    v197 = CGRectGetMaxX(v377) + 8.0;
    v198 = v301.origin.x;
    v199 = v301.origin.y;
    v200 = v301.size.width;
    v201 = v301.size.height;
    if (v295 >= v197 + CGRectGetWidth(v301))
    {
      v379.origin.x = v192;
      v379.origin.y = v318;
      v379.size.width = v314;
      v379.size.height = v312;
      v299 = CGRectGetMaxX(v379) + 8.0;
      v380.origin.x = v192;
      v203 = v288;
      v380.origin.y = v288;
      v380.size.width = v191;
      v380.size.height = v296;
      v300 = CGRectGetMaxY(v380);
      v381.origin.x = v198;
      v381.origin.y = v199;
      v381.size.width = v200;
      v381.size.height = v201;
      v205 = v191;
      v206 = CGRectGetWidth(v381);
      v382.origin.x = v198;
      v382.origin.y = v199;
      v382.size.width = v200;
      v382.size.height = v201;
      v201 = CGRectGetHeight(v382);
      v200 = v206;
      v204 = v205;
    }
    else
    {
      v378.origin.x = v192;
      v378.origin.y = v318;
      v378.size.width = v314;
      v378.size.height = v312;
      v202 = CGRectGetMaxY(v378);
      v299 = v192;
      v300 = v202;
      v203 = v288;
      v204 = v191;
    }
    v285 = v204;
    v207 = v192;
    v208 = v203;
    v209 = v296;
    v210 = v296;
    v211 = CGRectGetMaxY(*(CGRect *)(&v204 - 2)) + 14.0;
    v212 = v299;
    v383.origin.y = v300;
    v383.origin.x = v299;
    v383.size.width = v200;
    v383.size.height = v201;
    v213 = CGRectGetMaxY(v383) + 14.0;
    if (v211 <= v213)
      v211 = v213;
    v384.origin.x = 0.0;
    v384.origin.y = 0.0;
    v384.size.width = v302;
    v384.size.height = v211;
    v385 = CGRectIntegral(v384);
    v301.size.height = v385.origin.y;
    v302 = v385.origin.x;
    v214 = v385.size.width;
    v301.size.width = v385.size.height;
    v215 = sub_1DC405230();
    v216 = MEMORY[0x1E0C80A78](v215).n128_u64[0];
    *(&v282 - 30) = 0;
    *(&v282 - 29) = 0;
    *(&v282 - 28) = v216;
    *((double *)&v282 - 27) = v211;
    *((double *)&v282 - 26) = v211;
    *((CGFloat *)&v282 - 25) = v192;
    v217 = v292;
    *((CGFloat *)&v282 - 24) = v293;
    *((CGFloat *)&v282 - 23) = v217;
    *((CGFloat *)&v282 - 22) = v291;
    *((CGFloat *)&v282 - 21) = v192;
    v218 = v285;
    *((CGFloat *)&v282 - 20) = v203;
    *((CGFloat *)&v282 - 19) = v218;
    v219 = v289;
    *((CGFloat *)&v282 - 18) = v209;
    *((double *)&v282 - 17) = v219;
    v220 = v294;
    *((CGFloat *)&v282 - 16) = v290;
    *((double *)&v282 - 15) = v220;
    *((CGFloat *)&v282 - 14) = v313;
    *((CGFloat *)&v282 - 13) = v192;
    v221 = v314;
    *((CGFloat *)&v282 - 12) = v318;
    *((CGFloat *)&v282 - 11) = v221;
    *((CGFloat *)&v282 - 10) = v312;
    *((double *)&v282 - 9) = v212;
    *((double *)&v282 - 8) = v300;
    *((CGFloat *)&v282 - 7) = v200;
    v222 = v302;
    *((CGFloat *)&v282 - 6) = v201;
    *((CGFloat *)&v282 - 5) = v222;
    *(&v282 - 4) = *(_QWORD *)&v301.size.height;
    *((CGFloat *)&v282 - 3) = v214;
    *(&v282 - 2) = *(_QWORD *)&v301.size.width;
    sub_1DC4051C4();

    (*(void (**)(char *, uint64_t))(v309 + 8))(v308, v310);
    v223 = *(_QWORD *)&v179;
  }
  else
  {
    objc_msgSend(v317, sel_boundingRectWithSize_options_context_, 33, 0, v50 - CGRectGetWidth(*(CGRect *)&v85) + -10.0, 1.79769313e308);
    v286 = v90;
    v287 = v89;
    v284 = v92;
    v285 = v91;
    v350.origin.x = v72;
    v293 = v72;
    v350.origin.y = v314;
    v350.size.width = v75;
    v313 = v75;
    v93 = v312;
    v350.size.height = v312;
    v94 = v50 - CGRectGetWidth(v350) + -8.0;
    v351.origin.x = v78;
    v351.origin.y = v80;
    v351.size.width = v82;
    v95 = v84;
    v351.size.height = v84;
    objc_msgSend(*(id *)&v316, sel_boundingRectWithSize_options_context_, 1, 0, v94 - CGRectGetWidth(v351) + -10.0, 1.79769313e308);
    v290 = v97;
    v291 = v96;
    v283 = v98;
    v292 = v99;
    v100 = (void *)sub_1DC4091A8();
    v101 = (void *)sub_1DC4091A8();
    v288 = v66;
    v102 = (void *)sub_1DC4091A8();
    objc_msgSend(v100, sel_ascender);
    v104 = v103;
    objc_msgSend(v101, sel_ascender);
    v106 = v105;
    objc_msgSend(v102, sel_ascender);
    if (v104 > v106)
      v108 = v104;
    else
      v108 = v106;
    if (v108 > v107)
      v107 = v108;
    v109 = v107 + 14.0;
    v110 = (void *)sub_1DC4091A8();
    v111 = (void *)sub_1DC4091A8();
    objc_msgSend(v100, sel_ascender);
    v289 = v109;
    v113 = v109 - v112;
    v114 = v293;
    v352.origin.x = v293;
    v116 = v313;
    v115 = v314;
    v352.origin.y = v314;
    v352.size.width = v313;
    v352.size.height = v93;
    v117 = CGRectGetWidth(v352);
    v353.origin.x = v114;
    v353.origin.y = v115;
    v353.size.width = v116;
    v353.size.height = v93;
    v354.size.height = CGRectGetHeight(v353);
    v354.origin.x = v319;
    v313 = v117;
    v314 = v113;
    v354.origin.y = v113;
    v354.size.width = v117;
    v312 = v354.size.height;
    v118 = CGRectGetMaxX(v354) + 8.0;
    v355.origin.y = v290;
    v355.origin.x = v291;
    v119 = v283;
    v355.size.width = v283;
    v355.size.height = v292;
    v120 = v118 + CGRectGetWidth(v355);
    v121 = v299;
    v122 = v300;
    v356.origin.x = v299;
    v356.origin.y = v300;
    v123 = v298;
    v356.size.width = v298;
    v356.size.height = v95;
    v124 = v50;
    v125 = v50 < v120 + CGRectGetWidth(v356);
    v126 = v121;
    if (v125)
      goto LABEL_31;
    v357.origin.y = v290;
    v357.origin.x = v291;
    v357.size.width = v119;
    v357.size.height = v292;
    v127 = CGRectGetHeight(v357);
    v358.origin.x = v319;
    v358.size.width = v313;
    v358.origin.y = v314;
    v358.size.height = v312;
    if (CGRectGetHeight(v358) < v127)
    {
LABEL_31:
      v359.origin.x = v121;
      v359.origin.y = v122;
      v359.size.width = v123;
      v359.size.height = v95;
      v128 = CGRectGetWidth(v359);
      v129 = v316;
      objc_msgSend(*(id *)&v316, sel_boundingRectWithSize_options_context_, 1, 0, v124 + -8.0 - v128 - v296, 1.79769313e308);
      v131 = v130;
      v133 = v132;
      v134 = v121;
      v135 = v123;
      v137 = v136;
      v139 = v138;
      v140 = v319;
      v360.origin.x = v319;
      v360.size.width = v313;
      v360.origin.y = v314;
      v360.size.height = v312;
      v295 = CGRectGetMaxY(v360);
      v361.origin.x = v131;
      v361.origin.y = v133;
      v361.size.width = v137;
      v361.size.height = v139;
      v293 = CGRectGetWidth(v361);
      v362.origin.x = v131;
      v362.origin.y = v133;
      v362.size.width = v137;
      v123 = v135;
      v126 = v134;
      v362.size.height = v139;
      v141 = CGRectGetHeight(v362);
      v142 = v140;
    }
    else
    {
      v386.origin.x = v319;
      v386.size.width = v313;
      v386.origin.y = v314;
      v386.size.height = v312;
      v142 = CGRectGetMaxX(v386) + 8.0;
      objc_msgSend(v101, sel_ascender);
      v224 = v290;
      v295 = v289 - v225;
      v226 = v291;
      v387.size.height = v292;
      v387.origin.x = v291;
      v387.origin.y = v290;
      v387.size.width = v119;
      v293 = CGRectGetWidth(v387);
      v388.origin.x = v226;
      v388.origin.y = v224;
      v388.size.width = v119;
      v388.size.height = v292;
      v141 = CGRectGetHeight(v388);
      v129 = v316;
    }
    v290 = v142;
    v291 = v141;
    v227 = v142;
    v228 = v295;
    v229 = v293;
    v230 = CGRectGetMaxY(*(CGRect *)(&v141 - 3));
    v389.origin.x = v319;
    v389.size.width = v313;
    v389.origin.y = v314;
    v389.size.height = v312;
    v231 = CGRectGetMaxY(v389);
    if (v230 > v231)
      v232 = v230;
    else
      v232 = v231;
    objc_msgSend(v110, sel_ascender);
    v234 = v233;
    objc_msgSend(v111, sel_ascender);
    if (v234 > v235)
      v235 = v234;
    v236 = v232 + 2.0 + v235;
    objc_msgSend(v110, sel_ascender);
    v283 = v236 - v237;
    v239 = v286;
    v238 = v287;
    v390.origin.x = v287;
    v390.origin.y = v286;
    v240 = v284;
    v241 = v285;
    v390.size.width = v285;
    v390.size.height = v284;
    v316 = CGRectGetWidth(v390);
    v391.origin.x = v238;
    v391.origin.y = v239;
    v391.size.width = v241;
    v391.size.height = v240;
    v292 = CGRectGetHeight(v391);
    v392.origin.x = v126;
    v392.origin.y = v122;
    v392.size.width = v123;
    v242 = v297;
    v392.size.height = v297;
    v243 = CGRectGetWidth(v392);
    v244 = v294;
    v245 = v296;
    v287 = v296 + v294 - v243;
    objc_msgSend(v102, sel_ascender);
    v289 = v289 - v246;
    v393.origin.x = v126;
    v393.origin.y = v122;
    v393.size.width = v123;
    v393.size.height = v242;
    v286 = CGRectGetWidth(v393);
    v394.origin.x = v126;
    v394.origin.y = v122;
    v394.size.width = v123;
    v394.size.height = v242;
    v300 = CGRectGetHeight(v394);
    v248 = v301.origin.x;
    v247 = v301.origin.y;
    v250 = v301.size.width;
    v249 = v301.size.height;
    v251 = v245 + v244 - CGRectGetWidth(v301);
    v299 = v251;
    objc_msgSend(v111, sel_ascender);
    v253 = v236 - v252;
    v395.origin.x = v248;
    v395.origin.y = v247;
    v395.size.width = v250;
    v395.size.height = v249;
    v254 = CGRectGetWidth(v395);
    v298 = v254;
    v396.origin.x = v248;
    v396.origin.y = v247;
    v396.size.width = v250;
    v396.size.height = v249;
    v255 = CGRectGetHeight(v396);
    v256 = v319;
    v397.origin.x = v319;
    v257 = v283;
    v397.origin.y = v283;
    v397.size.width = v316;
    v397.size.height = v292;
    v258 = CGRectGetMaxY(v397) + 14.0;
    v398.origin.x = v251;
    v398.origin.y = v253;
    v398.size.width = v254;
    v398.size.height = v255;
    v259 = CGRectGetMaxY(v398) + 14.0;
    if (v258 > v259)
      v260 = v258;
    else
      v260 = v259;
    v399.origin.x = 0.0;
    v399.origin.y = 0.0;
    v399.size.width = v302;
    v399.size.height = v260;
    v400 = CGRectIntegral(v399);
    v261 = v400.origin.x;
    v302 = v400.origin.y;
    v262 = v400.size.width;
    v263 = v400.size.height;
    v264 = sub_1DC405230();
    v265 = MEMORY[0x1E0C80A78](v264).n128_u64[0];
    *(&v282 - 30) = 0;
    *(&v282 - 29) = 0;
    *(&v282 - 28) = v265;
    *((double *)&v282 - 27) = v260;
    *((double *)&v282 - 26) = v260;
    *((CGFloat *)&v282 - 25) = v256;
    v266 = v313;
    *((CGFloat *)&v282 - 24) = v314;
    *((CGFloat *)&v282 - 23) = v266;
    *((CGFloat *)&v282 - 22) = v312;
    *((CGFloat *)&v282 - 21) = v256;
    v267 = v316;
    *((CGFloat *)&v282 - 20) = v257;
    *((CGFloat *)&v282 - 19) = v267;
    v268 = v290;
    *((CGFloat *)&v282 - 18) = v292;
    *((CGFloat *)&v282 - 17) = v268;
    v269 = v293;
    *((CGFloat *)&v282 - 16) = v295;
    *((CGFloat *)&v282 - 15) = v269;
    v270 = v287;
    *((CGFloat *)&v282 - 14) = v291;
    *((CGFloat *)&v282 - 13) = v270;
    v271 = v286;
    *((double *)&v282 - 12) = v289;
    *((CGFloat *)&v282 - 11) = v271;
    v272 = v299;
    *((double *)&v282 - 10) = v300;
    *((double *)&v282 - 9) = v272;
    v273 = v298;
    *((double *)&v282 - 8) = v253;
    *((CGFloat *)&v282 - 7) = v273;
    *((CGFloat *)&v282 - 6) = v255;
    *((CGFloat *)&v282 - 5) = v261;
    *((CGFloat *)&v282 - 4) = v302;
    *((CGFloat *)&v282 - 3) = v262;
    *((CGFloat *)&v282 - 2) = v263;
    sub_1DC4051C4();

    (*(void (**)(char *, uint64_t))(v309 + 8))(v308, v310);
    v223 = *(_QWORD *)&v318;
  }
  sub_1DC180A68(v223);
  (*(void (**)(char *, uint64_t))(v306 + 8))(v305, v307);
  v347 = v332;
  v348 = v333;
  v349 = v334;
  v343 = v328;
  v344 = v329;
  v345 = v330;
  v346 = v331;
  v339 = v324;
  v340 = v325;
  v341 = v326;
  v342 = v327;
  v335 = v320;
  v336 = v321;
  v337 = v322;
  v338 = v323;
  v274 = v333;
  v275 = v311;
  *(_OWORD *)(v311 + 192) = v332;
  *(_OWORD *)(v275 + 208) = v274;
  *(_QWORD *)(v275 + 224) = v349;
  v276 = v344;
  *(_OWORD *)(v275 + 128) = v343;
  *(_OWORD *)(v275 + 144) = v276;
  v277 = v346;
  *(_OWORD *)(v275 + 160) = v345;
  *(_OWORD *)(v275 + 176) = v277;
  v278 = v340;
  *(_OWORD *)(v275 + 64) = v339;
  *(_OWORD *)(v275 + 80) = v278;
  v279 = v342;
  *(_OWORD *)(v275 + 96) = v341;
  *(_OWORD *)(v275 + 112) = v279;
  v280 = v336;
  *(_OWORD *)v275 = v335;
  *(_OWORD *)(v275 + 16) = v280;
  result = v338;
  *(_OWORD *)(v275 + 32) = v337;
  *(__n128 *)(v275 + 48) = result;
  return result;
}

double sub_1DC180630@<D0>(double *a1@<X8>, double a2@<D0>, double a3@<D1>, double a4@<D2>, double a5@<D3>, double a6@<D4>, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, double a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t, uint64_t, __n128);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  double v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  double result;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  double v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  double v94;
  double v95;
  double v96;
  double v97;
  double v98;

  v97 = a5;
  v98 = a6;
  v95 = a3;
  v96 = a4;
  v94 = a2;
  v93 = a25;
  v92 = a26;
  v91 = a27;
  v89 = a21;
  v88 = a22;
  v90 = a24;
  v87 = a23;
  v77 = a17;
  v76 = a18;
  v82 = a20;
  v75 = a19;
  v73 = a13;
  v72 = a14;
  v74 = a16;
  v71 = a15;
  v70 = a12;
  v28 = sub_1DC404210();
  v29 = *(_QWORD *)(v28 - 8);
  v30 = MEMORY[0x1E0C80A78](v28);
  v32 = (char *)&v69 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = *MEMORY[0x1E0DB6B40];
  v34 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v29 + 104);
  v34(v32, v33, v28, v30);
  sub_1DC404204();
  v85 = v36;
  v86 = v35;
  v83 = v38;
  v84 = v37;
  v39 = *(void (**)(char *, uint64_t))(v29 + 8);
  v39(v32, v28);
  ((void (*)(char *, uint64_t, uint64_t))v34)(v32, v33, v28);
  sub_1DC404204();
  v81 = v40;
  v80 = v41;
  v79 = v42;
  v78 = v43;
  v39(v32, v28);
  ((void (*)(char *, uint64_t, uint64_t))v34)(v32, v33, v28);
  sub_1DC404204();
  v73 = v44;
  v72 = v45;
  v71 = v46;
  v70 = v47;
  v39(v32, v28);
  ((void (*)(char *, uint64_t, uint64_t))v34)(v32, v33, v28);
  sub_1DC404204();
  v77 = v48;
  v76 = v49;
  v75 = v50;
  v74 = v51;
  v39(v32, v28);
  ((void (*)(char *, uint64_t, uint64_t))v34)(v32, v33, v28);
  sub_1DC404204();
  v53 = v52;
  v55 = v54;
  v57 = v56;
  v59 = v58;
  v39(v32, v28);
  ((void (*)(char *, uint64_t, uint64_t))v34)(v32, v33, v28);
  sub_1DC404204();
  v61 = v60;
  v63 = v62;
  v65 = v64;
  v67 = v66;
  v39(v32, v28);
  *a1 = v94;
  a1[1] = v95;
  a1[2] = v96;
  a1[3] = v97;
  a1[4] = v98;
  *((_QWORD *)a1 + 5) = v86;
  *((_QWORD *)a1 + 6) = v85;
  *((_QWORD *)a1 + 7) = v84;
  *((_QWORD *)a1 + 8) = v83;
  *((_QWORD *)a1 + 9) = v81;
  *((_QWORD *)a1 + 10) = v80;
  *((_QWORD *)a1 + 11) = v79;
  *((_QWORD *)a1 + 12) = v78;
  *((_QWORD *)a1 + 13) = v73;
  *((_QWORD *)a1 + 14) = v72;
  *((_QWORD *)a1 + 15) = v71;
  *((_QWORD *)a1 + 16) = v70;
  *((_QWORD *)a1 + 17) = v77;
  *((_QWORD *)a1 + 18) = v76;
  *((_QWORD *)a1 + 19) = v75;
  result = v74;
  a1[20] = v74;
  *((_QWORD *)a1 + 21) = v53;
  *((_QWORD *)a1 + 22) = v55;
  *((_QWORD *)a1 + 23) = v57;
  *((_QWORD *)a1 + 24) = v59;
  *((_QWORD *)a1 + 25) = v61;
  *((_QWORD *)a1 + 26) = v63;
  *((_QWORD *)a1 + 27) = v65;
  *((_QWORD *)a1 + 28) = v67;
  return result;
}

uint64_t sub_1DC180A68(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for PriceViewModel();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

double sub_1DC180AA4@<D0>(double *a1@<X8>)
{
  uint64_t v1;

  return sub_1DC180630(a1, *(double *)(v1 + 16), *(double *)(v1 + 24), *(double *)(v1 + 32), *(double *)(v1 + 40), *(double *)(v1 + 48), *(_QWORD *)(v1 + 80), *(_QWORD *)(v1 + 88), *(_QWORD *)(v1 + 96), *(_QWORD *)(v1 + 104), *(_QWORD *)(v1 + 112), *(_QWORD *)(v1 + 120), *(_QWORD *)(v1 + 128), *(_QWORD *)(v1 + 136), *(_QWORD *)(v1 + 144), *(double *)(v1 + 152), *(_QWORD *)(v1 + 160), *(_QWORD *)(v1 + 168), *(_QWORD *)(v1 + 176),
           *(_QWORD *)(v1 + 184),
           *(_QWORD *)(v1 + 192),
           *(_QWORD *)(v1 + 200),
           *(_QWORD *)(v1 + 208),
           *(_QWORD *)(v1 + 216),
           *(_QWORD *)(v1 + 224),
           *(_QWORD *)(v1 + 232),
           *(_QWORD *)(v1 + 240));
}

uint64_t *sub_1DC180B00(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  void (*v36)(char *, char *, uint64_t);
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  id v43;
  char *__dst;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v21 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1DC40070C();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1DC407714();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    *(uint64_t *)((char *)a1 + v12) = *(uint64_t *)((char *)a2 + v12);
    v15 = *(int *)(type metadata accessor for StockFeedConfig() + 20);
    __dst = &v13[v15];
    v16 = &v14[v15];
    v17 = sub_1DC3FFFEC();
    v18 = *(_QWORD *)(v17 - 8);
    v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
    swift_bridgeObjectRetain();
    if (v19(v16, 1, v17))
    {
      sub_1DC0BB2BC(0);
      memcpy(__dst, v16, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v18 + 16))(__dst, v16, v17);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(__dst, 0, 1, v17);
    }
    v22 = *(int *)(type metadata accessor for StockFeedContentConfig() + 20);
    v23 = &v13[v22];
    v24 = &v14[v22];
    sub_1DC12D9D0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v23, v24, v25);
    v26 = type metadata accessor for NewsStockFeedGroupKnobs();
    *(_QWORD *)&v23[*(int *)(v26 + 20)] = *(_QWORD *)&v24[*(int *)(v26 + 20)];
    v27 = type metadata accessor for StockFeedKnobsConfig();
    *(_QWORD *)&v23[*(int *)(v27 + 20)] = *(_QWORD *)&v24[*(int *)(v27 + 20)];
    v28 = a3[7];
    v29 = (uint64_t *)((char *)a1 + v28);
    v30 = (char *)a2 + v28;
    v31 = *(uint64_t *)((char *)a2 + v28 + 8);
    *v29 = *(uint64_t *)((char *)a2 + v28);
    v29[1] = v31;
    v32 = *(int *)(type metadata accessor for StockFeedServiceContext() + 20);
    v33 = (char *)v29 + v32;
    v34 = &v30[v32];
    v35 = sub_1DC4010E4();
    v36 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16);
    swift_retain();
    swift_bridgeObjectRetain();
    v36(v33, v34, v35);
    v37 = a3[8];
    v38 = a3[9];
    v39 = *(void **)((char *)a2 + v37);
    *(uint64_t *)((char *)a1 + v37) = (uint64_t)v39;
    *(uint64_t *)((char *)a1 + v38) = *(uint64_t *)((char *)a2 + v38);
    v40 = a3[10];
    v41 = (char *)a1 + v40;
    v42 = (char *)a2 + v40;
    v43 = v39;
    v36(v41, v42, v35);
  }
  return a1;
}

uint64_t sub_1DC180D60(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v17)(uint64_t, uint64_t);

  v4 = sub_1DC40070C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  v6 = sub_1DC407714();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  swift_bridgeObjectRelease();
  v8 = v7 + *(int *)(type metadata accessor for StockFeedConfig() + 20);
  v9 = sub_1DC3FFFEC();
  v10 = *(_QWORD *)(v9 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  v11 = v7 + *(int *)(type metadata accessor for StockFeedContentConfig() + 20);
  sub_1DC12D9D0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  type metadata accessor for NewsStockFeedGroupKnobs();
  swift_release();
  v13 = a1 + a2[7];
  swift_bridgeObjectRelease();
  v14 = v13 + *(int *)(type metadata accessor for StockFeedServiceContext() + 20);
  v15 = sub_1DC4010E4();
  v17 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8);
  v17(v14, v15);

  return ((uint64_t (*)(uint64_t, uint64_t))v17)(a1 + a2[10], v15);
}

uint64_t sub_1DC180ED4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  const void *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int (*v18)(const void *, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  id v41;
  void *__dst;

  v6 = sub_1DC40070C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1DC407714();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_QWORD *)(a1 + v11) = *(_QWORD *)(a2 + v11);
  v14 = *(int *)(type metadata accessor for StockFeedConfig() + 20);
  __dst = (void *)(v12 + v14);
  v15 = (const void *)(v13 + v14);
  v16 = sub_1DC3FFFEC();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v17 + 48);
  swift_bridgeObjectRetain();
  if (v18(v15, 1, v16))
  {
    sub_1DC0BB2BC(0);
    memcpy(__dst, v15, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v17 + 16))(__dst, v15, v16);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v17 + 56))(__dst, 0, 1, v16);
  }
  v20 = *(int *)(type metadata accessor for StockFeedContentConfig() + 20);
  v21 = v12 + v20;
  v22 = v13 + v20;
  sub_1DC12D9D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
  v24 = type metadata accessor for NewsStockFeedGroupKnobs();
  *(_QWORD *)(v21 + *(int *)(v24 + 20)) = *(_QWORD *)(v22 + *(int *)(v24 + 20));
  v25 = type metadata accessor for StockFeedKnobsConfig();
  *(_QWORD *)(v21 + *(int *)(v25 + 20)) = *(_QWORD *)(v22 + *(int *)(v25 + 20));
  v26 = a3[7];
  v27 = (_QWORD *)(a1 + v26);
  v28 = a2 + v26;
  v29 = *(_QWORD *)(a2 + v26 + 8);
  *v27 = *(_QWORD *)(a2 + v26);
  v27[1] = v29;
  v30 = *(int *)(type metadata accessor for StockFeedServiceContext() + 20);
  v31 = (char *)v27 + v30;
  v32 = v28 + v30;
  v33 = sub_1DC4010E4();
  v34 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 16);
  swift_retain();
  swift_bridgeObjectRetain();
  v34(v31, v32, v33);
  v35 = a3[8];
  v36 = a3[9];
  v37 = *(void **)(a2 + v35);
  *(_QWORD *)(a1 + v35) = v37;
  *(_QWORD *)(a1 + v36) = *(_QWORD *)(a2 + v36);
  v38 = a3[10];
  v39 = (char *)(a1 + v38);
  v40 = a2 + v38;
  v41 = v37;
  v34(v39, v40, v33);
  return a1;
}

uint64_t sub_1DC181108(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(void *, uint64_t, uint64_t);
  int v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t, uint64_t);
  uint64_t v37;
  void *v38;
  void *v39;
  id v40;
  int *v42;

  v6 = sub_1DC40070C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1DC407714();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v42 = a3;
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_QWORD *)(a1 + v11) = *(_QWORD *)(a2 + v11);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v14 = *(int *)(type metadata accessor for StockFeedConfig() + 20);
  v15 = (void *)(v12 + v14);
  v16 = (void *)(v13 + v14);
  v17 = sub_1DC3FFFEC();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v18 + 48);
  v20 = v19(v15, 1, v17);
  v21 = v19(v16, 1, v17);
  if (!v20)
  {
    if (!v21)
    {
      (*(void (**)(void *, void *, uint64_t))(v18 + 24))(v15, v16, v17);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v18 + 8))(v15, v17);
    goto LABEL_6;
  }
  if (v21)
  {
LABEL_6:
    sub_1DC0BB2BC(0);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v18 + 16))(v15, v16, v17);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
LABEL_7:
  v23 = *(int *)(type metadata accessor for StockFeedContentConfig() + 20);
  v24 = v12 + v23;
  v25 = v13 + v23;
  sub_1DC12D9D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
  v27 = type metadata accessor for NewsStockFeedGroupKnobs();
  *(_QWORD *)(v24 + *(int *)(v27 + 20)) = *(_QWORD *)(v25 + *(int *)(v27 + 20));
  swift_retain();
  swift_release();
  v28 = type metadata accessor for StockFeedKnobsConfig();
  *(_QWORD *)(v24 + *(int *)(v28 + 20)) = *(_QWORD *)(v25 + *(int *)(v28 + 20));
  v29 = v42[7];
  v30 = (_QWORD *)(a1 + v29);
  v31 = a2 + v29;
  *v30 = *(_QWORD *)(a2 + v29);
  v30[1] = *(_QWORD *)(a2 + v29 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v32 = *(int *)(type metadata accessor for StockFeedServiceContext() + 20);
  v33 = (char *)v30 + v32;
  v34 = v31 + v32;
  v35 = sub_1DC4010E4();
  v36 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 24);
  v36(v33, v34, v35);
  v37 = v42[8];
  v38 = *(void **)(a2 + v37);
  v39 = *(void **)(a1 + v37);
  *(_QWORD *)(a1 + v37) = v38;
  v40 = v38;

  *(_QWORD *)(a1 + v42[9]) = *(_QWORD *)(a2 + v42[9]);
  v36((char *)(a1 + v42[10]), a2 + v42[10], v35);
  return a1;
}

uint64_t sub_1DC1813A4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  const void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(uint64_t, uint64_t, uint64_t);
  uint64_t v34;

  v6 = sub_1DC40070C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1DC407714();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_QWORD *)(a1 + v11) = *(_QWORD *)(a2 + v11);
  v14 = *(int *)(type metadata accessor for StockFeedConfig() + 20);
  v15 = (void *)(v12 + v14);
  v16 = (const void *)(v13 + v14);
  v17 = sub_1DC3FFFEC();
  v18 = *(_QWORD *)(v17 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
  {
    sub_1DC0BB2BC(0);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v18 + 32))(v15, v16, v17);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  }
  v20 = *(int *)(type metadata accessor for StockFeedContentConfig() + 20);
  v21 = v12 + v20;
  v22 = v13 + v20;
  sub_1DC12D9D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v21, v22, v23);
  v24 = type metadata accessor for NewsStockFeedGroupKnobs();
  *(_QWORD *)(v21 + *(int *)(v24 + 20)) = *(_QWORD *)(v22 + *(int *)(v24 + 20));
  v25 = type metadata accessor for StockFeedKnobsConfig();
  *(_QWORD *)(v21 + *(int *)(v25 + 20)) = *(_QWORD *)(v22 + *(int *)(v25 + 20));
  v26 = a3[7];
  v27 = a1 + v26;
  v28 = a2 + v26;
  *(_OWORD *)(a1 + v26) = *(_OWORD *)(a2 + v26);
  v29 = *(int *)(type metadata accessor for StockFeedServiceContext() + 20);
  v30 = v27 + v29;
  v31 = v28 + v29;
  v32 = sub_1DC4010E4();
  v33 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 32);
  v33(v30, v31, v32);
  v34 = a3[9];
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  *(_QWORD *)(a1 + v34) = *(_QWORD *)(a2 + v34);
  v33(a1 + a3[10], a2 + a3[10], v32);
  return a1;
}

uint64_t sub_1DC1815A4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(void *, uint64_t, uint64_t);
  int v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t, uint64_t);
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v42;

  v6 = sub_1DC40070C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1DC407714();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_QWORD *)(a1 + v11) = *(_QWORD *)(a2 + v11);
  swift_bridgeObjectRelease();
  v14 = *(int *)(type metadata accessor for StockFeedConfig() + 20);
  v15 = (void *)(v12 + v14);
  v42 = v13;
  v16 = (void *)(v13 + v14);
  v17 = sub_1DC3FFFEC();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v18 + 48);
  v20 = v19(v15, 1, v17);
  v21 = v19(v16, 1, v17);
  if (!v20)
  {
    if (!v21)
    {
      (*(void (**)(void *, void *, uint64_t))(v18 + 40))(v15, v16, v17);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v18 + 8))(v15, v17);
    goto LABEL_6;
  }
  if (v21)
  {
LABEL_6:
    sub_1DC0BB2BC(0);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v18 + 32))(v15, v16, v17);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
LABEL_7:
  v23 = *(int *)(type metadata accessor for StockFeedContentConfig() + 20);
  v24 = v12 + v23;
  v25 = v42 + v23;
  sub_1DC12D9D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
  v27 = type metadata accessor for NewsStockFeedGroupKnobs();
  *(_QWORD *)(v24 + *(int *)(v27 + 20)) = *(_QWORD *)(v25 + *(int *)(v27 + 20));
  swift_release();
  v28 = type metadata accessor for StockFeedKnobsConfig();
  *(_QWORD *)(v24 + *(int *)(v28 + 20)) = *(_QWORD *)(v25 + *(int *)(v28 + 20));
  v29 = a3[7];
  v30 = (_QWORD *)(a1 + v29);
  v31 = a2 + v29;
  v32 = *(_QWORD *)(a2 + v29 + 8);
  *v30 = *(_QWORD *)(a2 + v29);
  v30[1] = v32;
  swift_bridgeObjectRelease();
  v33 = *(int *)(type metadata accessor for StockFeedServiceContext() + 20);
  v34 = (char *)v30 + v33;
  v35 = v31 + v33;
  v36 = sub_1DC4010E4();
  v37 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 40);
  v37(v34, v35, v36);
  v38 = a3[8];
  v39 = *(void **)(a1 + v38);
  *(_QWORD *)(a1 + v38) = *(_QWORD *)(a2 + v38);

  v40 = a3[10];
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  v37((char *)(a1 + v40), a2 + v40, v36);
  return a1;
}

uint64_t sub_1DC181818()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC181824(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;

  v6 = sub_1DC40070C();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_1DC407714();
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v13 = a3[5];
LABEL_14:
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = type metadata accessor for StockFeedContentConfig();
  v12 = *(_QWORD *)(v14 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v14;
    v13 = a3[6];
    goto LABEL_14;
  }
  v15 = type metadata accessor for StockFeedServiceContext();
  v12 = *(_QWORD *)(v15 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v15;
    v13 = a3[7];
    goto LABEL_14;
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v8 = sub_1DC4010E4();
    v12 = *(_QWORD *)(v8 - 8);
    v13 = a3[10];
    goto LABEL_14;
  }
  v16 = *(_QWORD *)(a1 + a3[8]);
  if (v16 >= 0xFFFFFFFF)
    LODWORD(v16) = -1;
  return (v16 + 1);
}

uint64_t sub_1DC181938()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC181944(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;

  v8 = sub_1DC40070C();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v13 = sub_1DC407714();
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      v16 = type metadata accessor for StockFeedContentConfig();
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        result = type metadata accessor for StockFeedServiceContext();
        v14 = *(_QWORD *)(result - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = result;
          v15 = a4[7];
        }
        else
        {
          if (a3 == 0x7FFFFFFF)
          {
            *(_QWORD *)(a1 + a4[8]) = (a2 - 1);
            return result;
          }
          v10 = sub_1DC4010E4();
          v14 = *(_QWORD *)(v10 - 8);
          v15 = a4[10];
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t sub_1DC181A54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  int *v19;
  void (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  void *v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  void (*v31)(char *, uint64_t, uint64_t, __n128);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;

  v3 = v2;
  v36 = a1;
  v34 = a2;
  v4 = sub_1DC4010E4();
  v39 = *(_QWORD *)(v4 - 8);
  v40 = v4;
  MEMORY[0x1E0C80A78](v4);
  v38 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = type metadata accessor for StockFeedServiceContext();
  MEMORY[0x1E0C80A78](v37);
  v33 = (uint64_t)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for StockFeedContentConfig();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1DC407714();
  v32 = *(_QWORD *)(v10 - 8);
  v11 = v32;
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1DC40070C();
  v35 = *(_QWORD *)(v14 - 8);
  v15 = MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v18 + 16);
  v31(v17, v3, v14, v15);
  v19 = (int *)type metadata accessor for StockFeedServiceConfig();
  v20 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  v20(v13, v3 + v19[5], v10);
  sub_1DC0990BC(v36, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedContentConfig);
  v21 = v33;
  sub_1DC0990BC(v3 + v19[7], v33, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedServiceContext);
  v22 = *(void **)(v3 + v19[8]);
  v23 = v34;
  ((void (*)(uint64_t, char *, uint64_t))v31)(v34, v17, v14);
  v20((char *)(v23 + v19[5]), (uint64_t)v13, v10);
  sub_1DC0990BC((uint64_t)v9, v23 + v19[6], (uint64_t (*)(_QWORD))type metadata accessor for StockFeedContentConfig);
  sub_1DC0990BC(v21, v23 + v19[7], (uint64_t (*)(_QWORD))type metadata accessor for StockFeedServiceContext);
  *(_QWORD *)(v23 + v19[8]) = v22;
  v24 = v22;
  sub_1DC4006DC();
  v26 = v25;
  sub_1DC0926D8((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedContentConfig);
  (*(void (**)(char *, uint64_t))(v32 + 8))(v13, v10);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v17, v14);
  *(_QWORD *)(v23 + v19[9]) = v26;
  v27 = v38;
  v29 = v39;
  v28 = v40;
  (*(void (**)(char *, uint64_t, uint64_t))(v39 + 16))(v38, v21 + *(int *)(v37 + 20), v40);
  sub_1DC0926D8(v21, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedServiceContext);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v29 + 32))(v23 + v19[10], v27, v28);
}

uint64_t sub_1DC181D40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1DC0990BC(v2 + *(int *)(a1 + 28), a2, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedServiceContext);
}

uint64_t sub_1DC181D6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1DC0990BC(v2 + *(int *)(a1 + 24), a2, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedContentConfig);
}

uint64_t sub_1DC181D94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 20);
  v5 = sub_1DC407714();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_1DC181DD4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + *(int *)(a1 + 28));
  swift_bridgeObjectRetain();
  return v2;
}

double sub_1DC181E10(uint64_t a1)
{
  uint64_t v1;

  return *(double *)(v1 + *(int *)(a1 + 36));
}

uint64_t sub_1DC181E24@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *MEMORY[0x1E0D5CAA8];
  v3 = sub_1DC407BF4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

uint64_t sub_1DC181E7C()
{
  return sub_1DC080808(&qword_1EDB33DB0, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedContentConfig, (uint64_t)&unk_1DC415CE8);
}

uint64_t sub_1DC181EA8()
{
  return sub_1DC080808(&qword_1EDB2D170, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedPool, (uint64_t)&unk_1DC42A100);
}

ValueMetadata *type metadata accessor for StockSearchOfflineModel()
{
  return &type metadata for StockSearchOfflineModel;
}

uint64_t sub_1DC181EE4()
{
  uint64_t v0;
  uint64_t ObjCClassFromMetadata;
  void *v2;
  id v3;
  id v4;

  v0 = sub_1DC407EAC();
  __swift_allocate_value_buffer(v0, qword_1F0368950);
  __swift_project_value_buffer(v0, (uint64_t)qword_1F0368950);
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v2 = (void *)objc_opt_self();
  v3 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1DC3FFC80();

  v4 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata, 0x80000001DC436700);
  sub_1DC3FFC80();

  return sub_1DC407E58();
}

uint64_t sub_1DC182088()
{
  uint64_t v0;
  uint64_t ObjCClassFromMetadata;
  void *v2;
  id v3;
  id v4;

  v0 = sub_1DC407EAC();
  __swift_allocate_value_buffer(v0, qword_1F0368968);
  __swift_project_value_buffer(v0, (uint64_t)qword_1F0368968);
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v2 = (void *)objc_opt_self();
  v3 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1DC3FFC80();

  v4 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata, 0x80000001DC4365E0);
  sub_1DC3FFC80();

  return sub_1DC407E58();
}

uint64_t sub_1DC182228()
{
  uint64_t v0;
  uint64_t ObjCClassFromMetadata;
  void *v2;
  id v3;
  id v4;

  v0 = sub_1DC407EAC();
  __swift_allocate_value_buffer(v0, qword_1F0368980);
  __swift_project_value_buffer(v0, (uint64_t)qword_1F0368980);
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v2 = (void *)objc_opt_self();
  v3 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1DC3FFC80();

  v4 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata, 0x80000001DC4364E0);
  sub_1DC3FFC80();

  return sub_1DC407E58();
}

uint64_t sub_1DC1823C8()
{
  uint64_t v0;
  uint64_t ObjCClassFromMetadata;
  void *v2;
  id v3;
  id v4;

  v0 = sub_1DC407EAC();
  __swift_allocate_value_buffer(v0, qword_1F0368998);
  __swift_project_value_buffer(v0, (uint64_t)qword_1F0368998);
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v2 = (void *)objc_opt_self();
  v3 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1DC3FFC80();

  v4 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata, 0x80000001DC4363E0);
  sub_1DC3FFC80();

  return sub_1DC407E58();
}

uint64_t sub_1DC182564@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC1825D8(&qword_1F034AE38, (uint64_t)qword_1F0368950, a1);
}

uint64_t sub_1DC182584@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC1825D8(&qword_1F034AE40, (uint64_t)qword_1F0368968, a1);
}

uint64_t sub_1DC1825A0@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC1825D8(&qword_1F034AE48, (uint64_t)qword_1F0368980, a1);
}

uint64_t sub_1DC1825BC@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC1825D8(qword_1F034AE50, (uint64_t)qword_1F0368998, a1);
}

uint64_t sub_1DC1825D8@<X0>(_QWORD *a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;

  if (*a1 != -1)
    swift_once();
  v5 = sub_1DC407EAC();
  v6 = __swift_project_value_buffer(v5, a2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a3, v6, v5);
}

char *sub_1DC182648(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v5;
  objc_class *ObjectType;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  id v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  Class v21;
  char *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  objc_super v27;

  v5 = v4;
  ObjectType = (objc_class *)swift_getObjectType();
  sub_1DC0835D8(0, &qword_1EDB2A928, MEMORY[0x1E0DBC320]);
  v12 = v11;
  v13 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v15 = (id *)((char *)&v27.receiver - v14);
  v16 = OBJC_IVAR____TtC8StocksUI18TextAndImageButton_label;
  v17 = objc_allocWithZone(MEMORY[0x1E0DC3990]);
  v18 = v5;
  *(_QWORD *)&v5[v16] = objc_msgSend(v17, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v19 = OBJC_IVAR____TtC8StocksUI18TextAndImageButton_imageView;
  *(_QWORD *)&v18[v19] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3890]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v20 = OBJC_IVAR____TtC8StocksUI18TextAndImageButton_onTap;
  sub_1DC0835D8(0, (unint64_t *)&qword_1EDB2A930, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DBC348]);
  *(_QWORD *)&v18[v20] = objc_msgSend(objc_allocWithZone(v21), sel_init);

  v27.receiver = v18;
  v27.super_class = ObjectType;
  v22 = (char *)objc_msgSendSuper2(&v27, sel_initWithFrame_, a1, a2, a3, a4);
  v23 = *(_QWORD *)&v22[OBJC_IVAR____TtC8StocksUI18TextAndImageButton_label];
  v24 = v22;
  objc_msgSend(v24, sel_addSubview_, v23);
  objc_msgSend(v24, sel_addSubview_, *(_QWORD *)&v24[OBJC_IVAR____TtC8StocksUI18TextAndImageButton_imageView]);
  *v15 = 1;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v13 + 104))(v15, *MEMORY[0x1E0DBC310], v12);
  v25 = v24;

  (*(void (**)(_QWORD *, uint64_t))(v13 + 8))(v15, v12);
  return v25;
}

uint64_t sub_1DC1829A8(void *a1, uint64_t a2, uint64_t a3, void *a4, SEL *a5)
{
  objc_class *ObjectType;
  id v9;
  char *v10;
  void *v11;
  objc_super v13;

  ObjectType = (objc_class *)swift_getObjectType();
  sub_1DC182B0C();
  sub_1DC182B48();
  sub_1DC408E54();
  v9 = a4;
  v10 = a1;
  v11 = (void *)sub_1DC408E48();
  v13.receiver = v10;
  v13.super_class = ObjectType;
  objc_msgSendSuper2(&v13, *a5, v11, v9);

  objc_msgSend(*(id *)&v10[OBJC_IVAR____TtC8StocksUI18TextAndImageButton_label], sel_setAlpha_, 1.0);
  objc_msgSend(*(id *)&v10[OBJC_IVAR____TtC8StocksUI18TextAndImageButton_imageView], sel_setAlpha_, 1.0);

  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for TextAndImageButton()
{
  return objc_opt_self();
}

unint64_t sub_1DC182B0C()
{
  unint64_t result;

  result = qword_1F034D000;
  if (!qword_1F034D000)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1F034D000);
  }
  return result;
}

unint64_t sub_1DC182B48()
{
  unint64_t result;
  unint64_t v1;

  result = qword_1F034D008;
  if (!qword_1F034D008)
  {
    v1 = sub_1DC182B0C();
    result = MEMORY[0x1DF0CAB8C](MEMORY[0x1E0DEFCF8], v1);
    atomic_store(result, (unint64_t *)&qword_1F034D008);
  }
  return result;
}

void sub_1DC182B90()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  Class v4;

  v1 = OBJC_IVAR____TtC8StocksUI18TextAndImageButton_label;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v2 = OBJC_IVAR____TtC8StocksUI18TextAndImageButton_imageView;
  *(_QWORD *)&v0[v2] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3890]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v3 = OBJC_IVAR____TtC8StocksUI18TextAndImageButton_onTap;
  sub_1DC0835D8(0, (unint64_t *)&qword_1EDB2A930, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DBC348]);
  *(_QWORD *)&v0[v3] = objc_msgSend(objc_allocWithZone(v4), sel_init);

  sub_1DC409838();
  __break(1u);
}

uint64_t CampaignRouteModel.init(routeTarget:postPurchaseBehavior:purchaseTraits:sourceChannelID:purchaseSessionID:paywallType:postPurchaseDestination:delegate:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;

  v16 = *a1;
  v17 = a1[1];
  v18 = type metadata accessor for CampaignRouteModel();
  v19 = (char *)a9 + *(int *)(v18 + 44);
  *((_QWORD *)v19 + 1) = 0;
  swift_unknownObjectWeakInit();
  *a9 = v16;
  a9[1] = v17;
  a9[2] = a2;
  a9[3] = a4;
  a9[4] = a5;
  a9[5] = a6;
  a9[6] = a7;
  a9[7] = a3;
  a9[8] = a8;
  sub_1DC182D68(a10, (uint64_t)a9 + *(int *)(v18 + 40));
  *((_QWORD *)v19 + 1) = a12;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

uint64_t sub_1DC182D68(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1DC13244C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t CampaignRouteModel.identifier.getter()
{
  unint64_t *v0;
  unint64_t v1;

  if (v0[1])
    v1 = *v0;
  else
    v1 = 0xD000000000000012;
  swift_bridgeObjectRetain();
  return v1;
}

unint64_t sub_1DC182DFC()
{
  unint64_t *v0;
  unint64_t v1;

  if (v0[1])
    v1 = *v0;
  else
    v1 = 0xD000000000000012;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t getEnumTagSinglePayload for CampaignRouteTarget(uint64_t a1, unsigned int a2)
{
  unint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) >= 2)
    return v3;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for CampaignRouteTarget(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

_QWORD *sub_1DC182EF0(_QWORD *result, int a2)
{
  if (a2 < 0)
  {
    *result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for CampaignRouteTarget()
{
  return &type metadata for CampaignRouteTarget;
}

_QWORD *initializeBufferWithCopyOfBuffer for CampaignRouteModel(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int (*v19)(const void *, uint64_t, uint64_t);
  void *__dst;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
    v8 = a2[5];
    *(_QWORD *)(a1 + 32) = a2[4];
    *(_QWORD *)(a1 + 40) = v8;
    v9 = a2[6];
    v10 = a2[8];
    *(_QWORD *)(a1 + 56) = a2[7];
    *(_QWORD *)(a1 + 64) = v10;
    v11 = *(int *)(a3 + 40);
    __dst = (void *)(a1 + v11);
    v12 = (char *)a2 + v11;
    *(_QWORD *)(a1 + 48) = v9;
    v13 = sub_1DC403DA8();
    v14 = *(_QWORD *)(v13 - 8);
    v19 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v19(v12, 1, v13))
    {
      sub_1DC13244C();
      memcpy(__dst, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v14 + 16))(__dst, v12, v13);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(__dst, 0, 1, v13);
    }
    v17 = (uint64_t)a2 + *(int *)(a3 + 44);
    *(_QWORD *)(swift_unknownObjectWeakCopyInit() + 8) = *(_QWORD *)(v17 + 8);
  }
  return v4;
}

uint64_t destroy for CampaignRouteModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 40);
  v5 = sub_1DC403DA8();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  return swift_unknownObjectWeakDestroy();
}

uint64_t initializeWithCopy for CampaignRouteModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(const void *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  void *__dst;

  v5 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v5;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  v7 = *(_QWORD *)(a2 + 48);
  v8 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v8;
  v9 = *(int *)(a3 + 40);
  __dst = (void *)(a1 + v9);
  v10 = (const void *)(a2 + v9);
  *(_QWORD *)(a1 + 48) = v7;
  v11 = sub_1DC403DA8();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v13(v10, 1, v11))
  {
    sub_1DC13244C();
    memcpy(__dst, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 16))(__dst, v10, v11);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
  }
  v15 = a2 + *(int *)(a3 + 44);
  *(_QWORD *)(swift_unknownObjectWeakCopyInit() + 8) = *(_QWORD *)(v15 + 8);
  return a1;
}

_QWORD *assignWithCopy for CampaignRouteModel(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  char *v15;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  v6 = *(int *)(a3 + 40);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1DC403DA8();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    sub_1DC13244C();
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  v15 = (char *)a2 + *(int *)(a3 + 44);
  *(_QWORD *)(swift_unknownObjectWeakCopyAssign() + 8) = *((_QWORD *)v15 + 1);
  return a1;
}

uint64_t initializeWithTake for CampaignRouteModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  v6 = *(int *)(a3 + 40);
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = sub_1DC403DA8();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    sub_1DC13244C();
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v12 = a2 + *(int *)(a3 + 44);
  *(_QWORD *)(swift_unknownObjectWeakTakeInit() + 8) = *(_QWORD *)(v12 + 8);
  return a1;
}

uint64_t assignWithTake for CampaignRouteModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(void *, uint64_t, uint64_t);
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v7;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  v8 = *(int *)(a3 + 40);
  v9 = (void *)(a1 + v8);
  v10 = (void *)(a2 + v8);
  v11 = sub_1DC403DA8();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 40))(v9, v10, v11);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v12 + 8))(v9, v11);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    sub_1DC13244C();
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v12 + 32))(v9, v10, v11);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
LABEL_7:
  v17 = a2 + *(int *)(a3 + 44);
  *(_QWORD *)(swift_unknownObjectWeakTakeAssign() + 8) = *(_QWORD *)(v17 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for CampaignRouteModel()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC1836A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 56);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    sub_1DC13244C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 40), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for CampaignRouteModel()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC183728(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 56) = (a2 - 1);
  }
  else
  {
    sub_1DC13244C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 40), a2, a2, v7);
  }
  return result;
}

void __swiftcall MainModule.createViewController()(UIViewController *__return_ptr retstr)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  char *v4;
  _QWORD *v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  void (**v10)(_QWORD, _QWORD, _QWORD);
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  char *v16;
  id v17;
  char *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  uint64_t **v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  char *v40;
  id v41;
  id v42;
  id v43;
  void *v44;
  uint64_t v45;
  id v46;
  char *v47;
  id v48;
  id v49;
  void *v50;
  void *v51;
  id v52;
  id v53;
  void *v54;
  uint64_t v55;
  id v56;
  char *v57;
  id v58;
  _QWORD *v59;
  uint64_t v60;
  char *v61;
  char *v62;
  char *v63;
  uint64_t v64;
  id v65;
  id v66;
  char *v67;
  void (**v68)(_QWORD, _QWORD, _QWORD);
  _QWORD *v69;
  uint64_t v70;
  _QWORD *v71;
  uint64_t v72;
  _QWORD v73[3];
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _BYTE v77[24];
  uint64_t v78;
  __int128 v79;
  uint64_t v80;
  __int128 v81;
  uint64_t v82;
  _QWORD v83[4];

  v2 = v1;
  v69 = (_QWORD *)sub_1DC403AC0();
  v68 = (void (**)(_QWORD, _QWORD, _QWORD))*(v69 - 1);
  MEMORY[0x1E0C80A78](v69);
  v4 = (char *)&v65 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = v1 + 2;
  __swift_project_boxed_opaque_existential_1(v1 + 2, v1[5]);
  sub_1DC096268(0, &qword_1EDB31390);
  swift_unownedRetainStrong();
  swift_unownedRetain();
  swift_unownedRetain();
  swift_release();
  *(_QWORD *)(swift_allocObject() + 16) = v1;
  sub_1DC4025F0();
  swift_unownedRelease();
  swift_release();
  if (!v82)
  {
    __break(1u);
    goto LABEL_17;
  }
  sub_1DC097DD0(&v81, (uint64_t)v83);
  __swift_project_boxed_opaque_existential_1(v83, v83[3]);
  v6 = (void *)sub_1DC099B10();
  v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3A40]), sel_initWithRootViewController_, v6);
  __swift_project_boxed_opaque_existential_1(v5, v1[5]);
  sub_1DC096268(0, &qword_1EDB2F470);
  swift_unownedRetainStrong();
  swift_unownedRetain();
  swift_unownedRetain();
  swift_release();
  *(_QWORD *)(swift_allocObject() + 16) = v1;
  sub_1DC4025F0();
  swift_unownedRelease();
  swift_release();
  if (!v80)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  sub_1DC097DD0(&v79, (uint64_t)&v81);
  v8 = v1[5];
  v71 = v1 + 2;
  __swift_project_boxed_opaque_existential_1(v5, v8);
  sub_1DC096268(0, (unint64_t *)&qword_1EDB29EE0);
  sub_1DC402608();
  v72 = v79;
  if (!(_QWORD)v79)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v70 = *((_QWORD *)&v79 + 1);
  v9 = *__swift_project_boxed_opaque_existential_1(&v81, v82);
  v10 = v68;
  v11 = v69;
  ((void (**)(char *, _QWORD, _QWORD *))v68)[13](v4, *MEMORY[0x1E0DADEE0], v69);
  v12 = sub_1DC4017EC();
  ((void (*)(char *, _QWORD *))v10[1])(v4, v11);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v9 + 16), *(_QWORD *)(v9 + 40));
  type metadata accessor for TickerCardContainerController();
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = v12;
  *(_QWORD *)(v13 + 24) = v7;
  swift_retain();
  v14 = v7;
  v15 = (void *)sub_1DC4025E4();
  swift_release();
  if (!v15)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  swift_release();
  sub_1DC081B48((unint64_t *)&unk_1EDB35258, 255, (uint64_t (*)(uint64_t))type metadata accessor for StockListViewController, (uint64_t)&unk_1DC426BF8);
  v16 = v15;
  v17 = v6;
  sub_1DC4056D4();

  *(_QWORD *)&v16[qword_1EDB39810 + 8] = &off_1EA462A00;
  swift_unknownObjectWeakAssign();
  v68 = (void (**)(_QWORD, _QWORD, _QWORD))sub_1DC405818();
  objc_allocWithZone((Class)v68);
  v18 = v16;
  swift_unknownObjectRetain();
  v69 = (_QWORD *)sub_1DC40580C();
  objc_msgSend(v69, sel_setToolbarHidden_, 0);
  v19 = v71;
  __swift_project_boxed_opaque_existential_1(v71, v2[5]);
  sub_1DC096268(0, &qword_1EDB2D3A0);
  sub_1DC402608();
  if (!v80)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  __swift_project_boxed_opaque_existential_1(v19, v2[5]);
  sub_1DC096268(0, &qword_1EDB39C68);
  sub_1DC402608();
  if (!v78)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  __swift_project_boxed_opaque_existential_1(v19, v2[5]);
  sub_1DC402608();
  if (!v76)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v65 = v17;
  v66 = v14;
  v20 = v2[7];
  v74 = sub_1DC4018AC();
  v75 = sub_1DC081B48((unint64_t *)&qword_1EDB29180, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8638], MEMORY[0x1E0D59B68]);
  v73[0] = v20;
  sub_1DC404870();
  swift_allocObject();
  swift_retain();
  v21 = sub_1DC404858();
  __swift_project_boxed_opaque_existential_1(v19, v2[5]);
  sub_1DC096268(0, &qword_1EDB30DA8);
  sub_1DC402608();
  if (!v74)
  {
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v22 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v79, v80);
  v23 = MEMORY[0x1E0C80A78](v22);
  v25 = (uint64_t *)((char *)&v65 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v26 + 16))(v25, v23);
  v27 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v77, v78);
  v28 = MEMORY[0x1E0C80A78](v27);
  v30 = (uint64_t *)((char *)&v65 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v31 + 16))(v30, v28);
  v32 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v73, v74);
  v33 = MEMORY[0x1E0C80A78](v32);
  v35 = (uint64_t **)((char *)&v65 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t **, __n128))(v36 + 16))(v35, v33);
  v37 = *v25;
  v38 = *v30;
  v39 = *v35;
  v67 = v18;
  v40 = sub_1DC11D238(v67, v37, v38, v21, v39);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v73);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v77);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v79);
  v41 = objc_msgSend(v40, sel_traitCollection);
  v42 = objc_msgSend(v41, sel_horizontalSizeClass);

  if (v42 == (id)1 && (__swift_project_boxed_opaque_existential_1(v2 + 13, v2[16]), (sub_1DC400C1C() & 1) != 0))
  {
    objc_msgSend(objc_allocWithZone((Class)type metadata accessor for HiddenCardViewController()), sel_init);
    v43 = objc_allocWithZone((Class)v68);
    swift_unknownObjectRetain();
    v44 = (void *)sub_1DC40580C();
    sub_1DC0E7820();
    v45 = swift_allocObject();
    *(_OWORD *)(v45 + 16) = xmmword_1DC40FA50;
    v46 = v69;
    *(_QWORD *)(v45 + 32) = v69;
    *(_QWORD *)(v45 + 40) = v44;
    *(_QWORD *)&v79 = v45;
    sub_1DC408CF8();
    sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3F8B0);
    v47 = v40;
    v48 = v46;
    v49 = v44;
    v50 = (void *)sub_1DC408CC8();
    swift_bridgeObjectRelease();
    objc_msgSend(v47, sel_setViewControllers_, v50);
  }
  else
  {
    sub_1DC09DB04(0, (uint64_t *)&v79);
    v51 = (void *)v79;
    v52 = objc_allocWithZone((Class)v68);
    swift_unknownObjectRetain();
    v53 = v51;
    v54 = (void *)sub_1DC40580C();
    sub_1DC0E7820();
    v55 = swift_allocObject();
    *(_OWORD *)(v55 + 16) = xmmword_1DC40FA50;
    v56 = v69;
    *(_QWORD *)(v55 + 32) = v69;
    *(_QWORD *)(v55 + 40) = v54;
    *(_QWORD *)&v79 = v55;
    sub_1DC408CF8();
    sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3F8B0);
    v57 = v40;
    v58 = v56;
    v49 = v54;
    v50 = (void *)sub_1DC408CC8();
    swift_bridgeObjectRelease();
    objc_msgSend(v57, sel_setViewControllers_, v50);

  }
  v59 = v71;

  objc_msgSend(v40, sel_setPreferredDisplayMode_, 2);
  __swift_project_boxed_opaque_existential_1(v59, v2[5]);
  type metadata accessor for Router();
  v60 = swift_allocObject();
  v61 = v67;
  *(_QWORD *)(v60 + 16) = v40;
  *(_QWORD *)(v60 + 24) = v61;
  v62 = v61;
  v63 = v40;
  v64 = sub_1DC4025E4();
  swift_release();
  if (!v64)
    goto LABEL_24;
  __swift_project_boxed_opaque_existential_1(v59, v2[5]);
  sub_1DC083C10();
  if (sub_1DC4025FC())
  {
    sub_1DC081B48(&qword_1EDB3F198, 255, (uint64_t (*)(uint64_t))type metadata accessor for Router, (uint64_t)&unk_1DC421264);
    sub_1DC404504();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v79);
    sub_1DC0866E0(v63);
    swift_unknownObjectRelease();

    swift_release();
    swift_release();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v81);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v83);
    return;
  }
LABEL_25:
  __break(1u);
}

uint64_t sub_1DC1842D4()
{
  swift_unownedRelease();
  return swift_deallocObject();
}

uint64_t sub_1DC1842F8(_QWORD *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  swift_unownedRetainStrong();
  swift_retain();
  swift_release();
  sub_1DC4018AC();
  sub_1DC40250C();
  return swift_release();
}

uint64_t sub_1DC184374(_QWORD *a1)
{
  swift_getObjectType();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC405710();
  sub_1DC402530();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  return sub_1DC402530();
}

uint64_t sub_1DC184420@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  sub_1DC089DA4(0, &qword_1EDB29DB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB7C18], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v12 - v6;
  v8 = swift_projectBox();
  sub_1DC185C34(v8, (uint64_t)v7);
  v9 = sub_1DC40481C();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v7, 1, v9) != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v10 + 32))(a1, v7, v9);
  sub_1DC185C90((uint64_t)v7);
  sub_1DC184584(a1);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v4, a1, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v4, 0, 1, v9);
  swift_beginAccess();
  return sub_1DC185CE4((uint64_t)v4, v8);
}

uint64_t sub_1DC184584@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD v20[3];
  char v21;

  v20[1] = a1;
  v20[0] = sub_1DC4047D4();
  v1 = *(_QWORD *)(v20[0] - 8);
  MEMORY[0x1E0C80A78](v20[0]);
  v3 = (char *)v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v20 - v5;
  v7 = sub_1DC4047E0();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)v20 - v13;
  if (qword_1EDB290A8 != -1)
    swift_once();
  sub_1DC081B48(&qword_1EDB2C740, v12, (uint64_t (*)(uint64_t))type metadata accessor for MainModule, (uint64_t)&protocol conformance descriptor for MainModule);
  sub_1DC4012D0();
  if (v21 == 1)
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v14, *MEMORY[0x1E0DB7BB8], v7);
    (*(void (**)(char *, _QWORD, _QWORD))(v1 + 104))(v6, *MEMORY[0x1E0DB7BA8], v20[0]);
  }
  else
  {
    sub_1DC089DA4(0, (unint64_t *)&qword_1EDB3FEE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB7BE8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v16 = sub_1DC4047EC();
    v17 = *(_QWORD *)(v16 - 8);
    v18 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
    v19 = swift_allocObject();
    *(_OWORD *)(v19 + 16) = xmmword_1DC40DC10;
    (*(void (**)(unint64_t, _QWORD, uint64_t))(v17 + 104))(v19 + v18, *MEMORY[0x1E0DB7BD8], v16);
    sub_1DC368398(v19);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E0DB7BC0], v7);
    (*(void (**)(char *, _QWORD, _QWORD))(v1 + 104))(v3, *MEMORY[0x1E0DB7BA8], v20[0]);
  }
  return sub_1DC404804();
}

double sub_1DC184890@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  id v5;
  id v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  double result;
  __int128 v16;
  _OWORD v17[2];
  uint64_t v18;
  uint64_t v19;

  if (qword_1EDB273D0 != -1)
    swift_once();
  v4 = sub_1DC403F64();
  __swift_project_value_buffer(v4, (uint64_t)qword_1EDB5DDD0);
  v5 = a1;
  v6 = a1;
  v7 = sub_1DC403F4C();
  v8 = sub_1DC408FC8();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = swift_slowAlloc();
    *(_QWORD *)&v17[0] = v10;
    *(_DWORD *)v9 = 136315138;
    v19 = (uint64_t)a1;
    v11 = a1;
    sub_1DC096268(0, (unint64_t *)&qword_1EDB400E0);
    v12 = sub_1DC408AA0();
    v19 = sub_1DC2A9C74(v12, v13, (uint64_t *)v17);
    sub_1DC4095B0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1DC07D000, v7, v8, "error fetching app config, error=%s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1DF0CAC88](v10, -1, -1);
    MEMORY[0x1DF0CAC88](v9, -1, -1);
  }
  else
  {

  }
  sub_1DC09DB04(v17, 1);
  v14 = v18;
  result = *(double *)v17;
  v16 = v17[1];
  *(_OWORD *)a2 = v17[0];
  *(_OWORD *)(a2 + 16) = v16;
  *(_QWORD *)(a2 + 32) = v14;
  return result;
}

uint64_t sub_1DC184AAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DC184D1C(a1, MEMORY[0x1E0DBA270], a2);
}

uint64_t sub_1DC184ABC()
{
  uint64_t v0;
  uint64_t result;
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  _BYTE v10[40];

  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 40));
  sub_1DC096268(0, &qword_1EDB366C0);
  result = sub_1DC402608();
  if (v9)
  {
    sub_1DC097DD0(&v8, (uint64_t)v10);
    sub_1DC089DA4(0, &qword_1EDB3F630, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF0D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1DC402E0C();
    swift_retain();
    v2 = (void *)sub_1DC402C80();
    sub_1DC185AFC();
    sub_1DC402CF8();
    swift_release();
    swift_release();

    swift_retain();
    v3 = (void *)sub_1DC402C80();
    sub_1DC402D04();
    swift_release();
    swift_release();

    sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3F8D0);
    v4 = (void *)sub_1DC409148();
    sub_1DC0824D4((uint64_t)v10, (uint64_t)&v8);
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v0;
    sub_1DC097DD0(&v8, v5 + 24);
    sub_1DC1859FC();
    swift_retain();
    sub_1DC402D04();
    swift_release();

    swift_release();
    v6 = (void *)sub_1DC409148();
    swift_retain();
    v7 = sub_1DC402D88();
    swift_release();

    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
    return v7;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC184D0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DC184D1C(a1, MEMORY[0x1E0DBA278], a2);
}

uint64_t sub_1DC184D1C@<X0>(uint64_t a1@<X0>, unsigned int *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;

  v6 = sub_1DC404BE8();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v7 + 16))(v10, a1, v6, v8);
  v11 = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v10, v6);
  if (v11 == *MEMORY[0x1E0DB8468])
  {
    v12 = *a2;
    v13 = sub_1DC4059F8();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(a3, v12, v13);
    v14 = (unsigned int *)MEMORY[0x1E0DBA230];
LABEL_5:
    v17 = *v14;
    v18 = sub_1DC4059C8();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(a3, v17, v18);
  }
  if (v11 == *MEMORY[0x1E0DB8460])
  {
    v15 = *MEMORY[0x1E0DBA1F8];
    v16 = sub_1DC4059B0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(a3, v15, v16);
    v14 = (unsigned int *)MEMORY[0x1E0DBA208];
    goto LABEL_5;
  }
  result = sub_1DC409838();
  __break(1u);
  return result;
}

uint64_t sub_1DC184EBC(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;

  v2 = *a1;
  __swift_project_boxed_opaque_existential_1((_QWORD *)(a2 + 184), *(_QWORD *)(a2 + 208));
  sub_1DC400D24();
  *(_QWORD *)(swift_allocObject() + 16) = v2;
  swift_bridgeObjectRetain();
  v3 = (void *)sub_1DC402C80();
  sub_1DC185AFC();
  v4 = sub_1DC402D04();
  swift_release();
  swift_release();

  return v4;
}

uint64_t sub_1DC184F84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  char *v7;
  uint64_t v8;

  sub_1DC185AFC();
  v7 = (char *)a3 + *(int *)(v6 + 48);
  *a3 = a2;
  v8 = sub_1DC400514();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v7, a1, v8);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1DC184FFC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t result;
  _QWORD v24[2];
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;

  v30 = a3;
  v5 = sub_1DC400970();
  v28 = *(_QWORD *)(v5 - 8);
  v29 = v5;
  MEMORY[0x1E0C80A78](v5);
  v26 = (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_1DC40124C();
  v25 = *(_QWORD *)(v27 - 8);
  MEMORY[0x1E0C80A78](v27);
  v8 = (char *)v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC185AFC();
  v10 = v9;
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1DC400514();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x1E0C80A78](v13);
  v17 = (char *)v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *(int *)(v10 + 48);
  v19 = &v12[v18];
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v14 + 16))(&v12[v18], a1 + v18, v13, v15);
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v17, v19, v13);
  v20 = a2[31];
  v24[1] = a2[32];
  v24[0] = __swift_project_boxed_opaque_existential_1(a2 + 28, v20);
  __swift_project_boxed_opaque_existential_1(a2 + 18, a2[21]);
  swift_bridgeObjectRetain();
  sub_1DC400A60();
  v21 = v26;
  sub_1DC401240();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v8, v27);
  v22 = sub_1DC400E08();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v21, v29);
  result = (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v17, v13);
  *v30 = v22;
  return result;
}

uint64_t sub_1DC185220@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, unint64_t, uint64_t, __n128);
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  unint64_t v24;
  void (*v25)(char *, uint64_t);
  uint8_t *v26;
  uint64_t v27;
  uint64_t result;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint8_t *v35;
  os_log_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41[7];

  v9 = sub_1DC4010E4();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v34 - v14;
  v17 = *a1;
  if (*(_QWORD *)(*a1 + 16))
  {
    v38 = *a1;
    v39 = a3;
    v18 = *(void (**)(char *, unint64_t, uint64_t, __n128))(v10 + 16);
    v18((char *)&v34 - v14, v17 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80)), v9, v15);
    if (qword_1EDB273D0 != -1)
      swift_once();
    v40 = v4;
    v19 = sub_1DC403F64();
    __swift_project_value_buffer(v19, (uint64_t)qword_1EDB5DDD0);
    ((void (*)(char *, char *, uint64_t))v18)(v12, v16, v9);
    v20 = sub_1DC403F4C();
    v21 = sub_1DC408FE0();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = (uint8_t *)swift_slowAlloc();
      v37 = swift_slowAlloc();
      v41[0] = v37;
      v35 = v22;
      v36 = v20;
      *(_DWORD *)v22 = 136315138;
      v23 = sub_1DC4010B4();
      v41[6] = sub_1DC2A9C74(v23, v24, v41);
      sub_1DC4095B0();
      swift_bridgeObjectRelease();
      v25 = *(void (**)(char *, uint64_t))(v10 + 8);
      v25(v12, v9);
      v26 = v35;
      v20 = v36;
      _os_log_impl(&dword_1DC07D000, v36, v21, "fetched first stock in active watchlist, symbol=%s", v35, 0xCu);
      v27 = v37;
      swift_arrayDestroy();
      MEMORY[0x1DF0CAC88](v27, -1, -1);
      MEMORY[0x1DF0CAC88](v26, -1, -1);
    }
    else
    {
      v25 = *(void (**)(char *, uint64_t))(v10 + 8);
      v25(v12, v9);
    }

    __swift_project_boxed_opaque_existential_1(v39, v39[3]);
    sub_1DC14FA9C((uint64_t)v16, v38, v41);
    v29 = v41[0];
    v30 = v41[1];
    v31 = v41[2];
    v32 = v41[3];
    v33 = v41[4];
    result = ((uint64_t (*)(char *, uint64_t))v25)(v16, v9);
    goto LABEL_10;
  }
  __swift_project_boxed_opaque_existential_1((_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 40));
  type metadata accessor for EmptyListViewController();
  result = sub_1DC4025FC();
  if (result)
  {
    v29 = result;
    v30 = sub_1DC081B48(&qword_1F034D018, 255, (uint64_t (*)(uint64_t))type metadata accessor for EmptyListViewController, (uint64_t)&unk_1DC42F638);
    v31 = sub_1DC081B48(&qword_1F034D020, 255, (uint64_t (*)(uint64_t))type metadata accessor for EmptyListViewController, (uint64_t)&unk_1DC42F5D8);
    v32 = sub_1DC081B48(&qword_1F034D028, 255, (uint64_t (*)(uint64_t))type metadata accessor for EmptyListViewController, (uint64_t)&unk_1DC42F5B0);
    result = sub_1DC081B48(&qword_1F034D030, 255, (uint64_t (*)(uint64_t))type metadata accessor for EmptyListViewController, (uint64_t)&unk_1DC42F588);
    v33 = result;
LABEL_10:
    *a4 = v29;
    a4[1] = v30;
    a4[2] = v31;
    a4[3] = v32;
    a4[4] = v33;
    return result;
  }
  __break(1u);
  return result;
}

uint64_t sub_1DC185580@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  id v7;
  id v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  if (qword_1EDB273D0 != -1)
    swift_once();
  v6 = sub_1DC403F64();
  __swift_project_value_buffer(v6, (uint64_t)qword_1EDB5DDD0);
  v7 = a1;
  v8 = a1;
  v9 = sub_1DC403F4C();
  v10 = sub_1DC408FC8();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc();
    v12 = swift_slowAlloc();
    v21 = v12;
    *(_DWORD *)v11 = 136315138;
    v13 = a1;
    sub_1DC096268(0, (unint64_t *)&qword_1EDB400E0);
    v14 = sub_1DC408AA0();
    sub_1DC2A9C74(v14, v15, &v21);
    sub_1DC4095B0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1DC07D000, v9, v10, "failed to fetch first stock in active watchlist, error=%s", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1DF0CAC88](v12, -1, -1);
    MEMORY[0x1DF0CAC88](v11, -1, -1);
  }
  else
  {

  }
  __swift_project_boxed_opaque_existential_1((_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 40));
  type metadata accessor for EmptyListViewController();
  result = sub_1DC4025FC();
  if (result)
  {
    v17 = result;
    v18 = sub_1DC081B48(&qword_1F034D018, 255, (uint64_t (*)(uint64_t))type metadata accessor for EmptyListViewController, (uint64_t)&unk_1DC42F638);
    v19 = sub_1DC081B48(&qword_1F034D020, 255, (uint64_t (*)(uint64_t))type metadata accessor for EmptyListViewController, (uint64_t)&unk_1DC42F5D8);
    v20 = sub_1DC081B48(&qword_1F034D028, 255, (uint64_t (*)(uint64_t))type metadata accessor for EmptyListViewController, (uint64_t)&unk_1DC42F5B0);
    result = sub_1DC081B48(&qword_1F034D030, 255, (uint64_t (*)(uint64_t))type metadata accessor for EmptyListViewController, (uint64_t)&unk_1DC42F588);
    *a3 = v17;
    a3[1] = v18;
    a3[2] = v19;
    a3[3] = v20;
    a3[4] = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t MainModule.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  __swift_destroy_boxed_opaque_existential_1(v0 + 104);
  __swift_destroy_boxed_opaque_existential_1(v0 + 144);
  __swift_destroy_boxed_opaque_existential_1(v0 + 184);
  __swift_destroy_boxed_opaque_existential_1(v0 + 224);
  __swift_destroy_boxed_opaque_existential_1(v0 + 264);
  return v0;
}

uint64_t MainModule.__deallocating_deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  __swift_destroy_boxed_opaque_existential_1(v0 + 104);
  __swift_destroy_boxed_opaque_existential_1(v0 + 144);
  __swift_destroy_boxed_opaque_existential_1(v0 + 184);
  __swift_destroy_boxed_opaque_existential_1(v0 + 224);
  __swift_destroy_boxed_opaque_existential_1(v0 + 264);
  return swift_deallocClassInstance();
}

uint64_t sub_1DC1858E8(_QWORD *a1)
{
  return sub_1DC1842F8(a1);
}

uint64_t sub_1DC185900()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1DC18592C()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1DC185958(_QWORD *a1)
{
  return sub_1DC184374(a1);
}

uint64_t method lookup function for MainModule()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1DC18596C()
{
  uint64_t v0;

  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 264), *(_QWORD *)(v0 + 288));
  return sub_1DC400DD8();
}

double sub_1DC1859B4@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v4;
  _OWORD v5[2];
  uint64_t v6;

  sub_1DC09DB04(v5, 1);
  v2 = v6;
  result = *(double *)v5;
  v4 = v5[1];
  *(_OWORD *)a1 = v5[0];
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = v2;
  return result;
}

unint64_t sub_1DC1859FC()
{
  unint64_t result;

  result = qword_1F034D010;
  if (!qword_1F034D010)
  {
    sub_1DC0821D4(255, (unint64_t *)&qword_1EDB3F8B0);
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1F034D010);
  }
  return result;
}

double sub_1DC185A84@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DC184890(a1, a2);
}

uint64_t sub_1DC185A9C()
{
  uint64_t v0;

  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 168));
  return sub_1DC400A24();
}

uint64_t sub_1DC185AE4(uint64_t *a1)
{
  uint64_t v1;

  return sub_1DC184EBC(a1, v1);
}

void sub_1DC185AFC()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EDB3F638)
  {
    sub_1DC089DA4(255, &qword_1EDB3F630, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF0D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1DC400514();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EDB3F638);
  }
}

uint64_t sub_1DC185B80@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  _QWORD *v2;

  return sub_1DC184FFC(a1, v2, a2);
}

uint64_t sub_1DC185B98()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  return swift_deallocObject();
}

uint64_t sub_1DC185BC4@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1DC185220(a1, *(_QWORD *)(v2 + 16), (_QWORD *)(v2 + 24), a2);
}

uint64_t sub_1DC185BE0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1DC185580(a1, v2, a2);
}

uint64_t sub_1DC185BF8()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1DC185C1C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_1DC184F84(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_1DC185C34(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1DC089DA4(0, &qword_1EDB29DB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB7C18], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC185C90(uint64_t a1)
{
  uint64_t v2;

  sub_1DC089DA4(0, &qword_1EDB29DB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB7C18], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DC185CE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1DC089DA4(0, &qword_1EDB29DB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB7C18], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC185D40()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1DC185D64()
{
  uint64_t v0;

  sub_1DC2041E0(v0);
}

ValueMetadata *type metadata accessor for TickerRelayoutBlueprintModifier()
{
  return &type metadata for TickerRelayoutBlueprintModifier;
}

uint64_t sub_1DC185D84()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1DC185FB8();
  v0 = sub_1DC405338();
  v1 = *(_QWORD *)(v0 - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1DC40DC10;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v1 + 104))(v3 + v2, *MEMORY[0x1E0DB9530], v0);
  v4 = sub_1DC368618(v3);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  return v4;
}

uint64_t sub_1DC185E48(uint64_t a1, void (*a2)(char *))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  sub_1DC0DDD18(0, &qword_1EDB2A270, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB9A28]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v15 - v7;
  sub_1DC12E8C4();
  v10 = &v8[*(int *)(v9 + 48)];
  sub_1DC0DDD18(0, (unint64_t *)&qword_1EDB2AAD8, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790]);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v8, a1, v11);
  v12 = *MEMORY[0x1E0DB7FB8];
  v13 = sub_1DC404984();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v10, v12, v13);
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0DB9A00], v5);
  a2(v8);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1DC185F70()
{
  unint64_t result;

  result = qword_1EDB40EC8;
  if (!qword_1EDB40EC8)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC411810, &type metadata for TickerRelayoutBlueprintModifier);
    atomic_store(result, (unint64_t *)&qword_1EDB40EC8);
  }
  return result;
}

void sub_1DC185FB8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB3FF48)
  {
    sub_1DC405338();
    v0 = sub_1DC4099C4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB3FF48);
  }
}

id StockChartRangeCalloutView.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id StockChartRangeCalloutView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), sel_initWithFrame_, a1, a2, a3, a4);
}

char *StockChartRangeCalloutView.init(frame:)(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  id v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  objc_super v18;

  v9 = OBJC_IVAR____TtC8StocksUI26StockChartRangeCalloutView_dateLabel;
  v10 = objc_allocWithZone(MEMORY[0x1E0DC3990]);
  v11 = v4;
  *(_QWORD *)&v4[v9] = objc_msgSend(v10, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v12 = OBJC_IVAR____TtC8StocksUI26StockChartRangeCalloutView_priceChangeLabel;
  *(_QWORD *)&v11[v12] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v13 = OBJC_IVAR____TtC8StocksUI26StockChartRangeCalloutView_percentageChangeLabel;
  *(_QWORD *)&v11[v13] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);

  v18.receiver = v11;
  v18.super_class = (Class)type metadata accessor for StockChartRangeCalloutView();
  v14 = (char *)objc_msgSendSuper2(&v18, sel_initWithFrame_, a1, a2, a3, a4);
  v15 = *(_QWORD *)&v14[OBJC_IVAR____TtC8StocksUI26StockChartRangeCalloutView_dateLabel];
  v16 = v14;
  objc_msgSend(v16, sel_addSubview_, v15);
  objc_msgSend(v16, sel_addSubview_, *(_QWORD *)&v16[OBJC_IVAR____TtC8StocksUI26StockChartRangeCalloutView_priceChangeLabel]);
  objc_msgSend(v16, sel_addSubview_, *(_QWORD *)&v16[OBJC_IVAR____TtC8StocksUI26StockChartRangeCalloutView_percentageChangeLabel]);

  return v16;
}

id StockChartRangeCalloutView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for StockChartRangeCalloutView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void _s8StocksUI26StockChartRangeCalloutViewC5coderACSgSo7NSCoderC_tcfc_0()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = OBJC_IVAR____TtC8StocksUI26StockChartRangeCalloutView_dateLabel;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v2 = OBJC_IVAR____TtC8StocksUI26StockChartRangeCalloutView_priceChangeLabel;
  *(_QWORD *)&v0[v2] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v3 = OBJC_IVAR____TtC8StocksUI26StockChartRangeCalloutView_percentageChangeLabel;
  *(_QWORD *)&v0[v3] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);

  sub_1DC409838();
  __break(1u);
}

uint64_t type metadata accessor for StockChartRangeCalloutView()
{
  return objc_opt_self();
}

uint64_t SymbolAutomation.init(stock:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;

  v4 = sub_1DC40103C();
  v6 = v5;
  v7 = sub_1DC4010B4();
  v9 = v8;
  v10 = sub_1DC4010CC();
  v12 = v11;
  v13 = sub_1DC4010E4();
  result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(a1, v13);
  *a2 = v4;
  a2[1] = v6;
  a2[2] = v7;
  a2[3] = v9;
  a2[4] = v10;
  a2[5] = v12;
  return result;
}

uint64_t SymbolAutomation.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SymbolAutomation.symbol.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SymbolAutomation.exchange.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SymbolAutomation.automationType.getter()
{
  return 0x6C6F626D7973;
}

uint64_t sub_1DC1864F4()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6C6F626D7973;
  if (*v0 != 1)
    v1 = 0x65676E6168637865;
  if (*v0)
    return v1;
  else
    return 0x696669746E656469;
}

uint64_t sub_1DC186550@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC186E14(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC186574()
{
  sub_1DC186734();
  return sub_1DC409B20();
}

uint64_t sub_1DC18659C()
{
  sub_1DC186734();
  return sub_1DC409B2C();
}

uint64_t SymbolAutomation.encode(to:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[6];
  char v13;
  char v14;
  char v15;

  sub_1DC1869BC(0, &qword_1F034D078, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v12 - v6;
  v8 = v1[2];
  v12[3] = v1[3];
  v12[4] = v8;
  v9 = v1[4];
  v12[1] = v1[5];
  v12[2] = v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC186734();
  sub_1DC409B14();
  v15 = 0;
  v10 = v12[5];
  sub_1DC409964();
  if (!v10)
  {
    v14 = 1;
    sub_1DC409964();
    v13 = 2;
    sub_1DC409964();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1DC186734()
{
  unint64_t result;

  result = qword_1F034D080;
  if (!qword_1F034D080)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC411A44, &type metadata for SymbolAutomation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F034D080);
  }
  return result;
}

uint64_t SymbolAutomation.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  char v28;

  sub_1DC1869BC(0, &qword_1F034D088, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v22 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC186734();
  sub_1DC409B08();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v28 = 0;
  v10 = sub_1DC4098F8();
  v12 = v11;
  v25 = v10;
  v27 = 1;
  swift_bridgeObjectRetain();
  v13 = sub_1DC4098F8();
  v15 = v14;
  v23 = v13;
  v26 = 2;
  swift_bridgeObjectRetain();
  v24 = v15;
  v16 = sub_1DC4098F8();
  v18 = v17;
  v19 = v16;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v20 = v24;
  *a2 = v25;
  a2[1] = v12;
  a2[2] = v23;
  a2[3] = v20;
  a2[4] = v19;
  a2[5] = v18;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_1DC1869BC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC186734();
    v7 = a3(a1, &type metadata for SymbolAutomation.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1DC186A18()
{
  return 0x6C6F626D7973;
}

uint64_t sub_1DC186A2C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return SymbolAutomation.init(from:)(a1, a2);
}

uint64_t sub_1DC186A40(_QWORD *a1)
{
  return SymbolAutomation.encode(to:)(a1);
}

uint64_t destroy for SymbolAutomation()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for SymbolAutomation(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for SymbolAutomation(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

_QWORD *assignWithTake for SymbolAutomation(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SymbolAutomation(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SymbolAutomation(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SymbolAutomation()
{
  return &type metadata for SymbolAutomation;
}

uint64_t storeEnumTagSinglePayload for SymbolAutomation.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1DC186CBC + 4 * byte_1DC4118C5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1DC186CF0 + 4 * byte_1DC4118C0[v4]))();
}

uint64_t sub_1DC186CF0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC186CF8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC186D00);
  return result;
}

uint64_t sub_1DC186D0C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC186D14);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1DC186D18(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC186D20(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SymbolAutomation.CodingKeys()
{
  return &type metadata for SymbolAutomation.CodingKeys;
}

unint64_t sub_1DC186D40()
{
  unint64_t result;

  result = qword_1F034D090;
  if (!qword_1F034D090)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC411A1C, &type metadata for SymbolAutomation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F034D090);
  }
  return result;
}

unint64_t sub_1DC186D88()
{
  unint64_t result;

  result = qword_1F034D098;
  if (!qword_1F034D098)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC41198C, &type metadata for SymbolAutomation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F034D098);
  }
  return result;
}

unint64_t sub_1DC186DD0()
{
  unint64_t result;

  result = qword_1F034D0A0;
  if (!qword_1F034D0A0)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC4119B4, &type metadata for SymbolAutomation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F034D0A0);
  }
  return result;
}

uint64_t sub_1DC186E14(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1DC4099E8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C6F626D7973 && a2 == 0xE600000000000000 || (sub_1DC4099E8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x65676E6168637865 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1DC4099E8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

void sub_1DC18704C(void *a1)
{
  void *v2;
  id v3;
  void *v4;
  __int128 v5;
  __int128 v6;

  v2 = (void *)sub_1DC408A1C();
  v3 = objc_msgSend(a1, sel_objectForKey_, v2);

  if (v3)
  {
    sub_1DC409634();
    swift_unknownObjectRelease();
    sub_1DC0FA0E4(&v5, &v6);
    type metadata accessor for StockFeedViewController();
    swift_dynamicCast();
    sub_1DC4055CC();
    sub_1DC405074();

    swift_release();
  }
  else
  {
    __break(1u);
  }
}

uint64_t *sub_1DC18713C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v15;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    v9 = *(int *)(a3 + 24);
    v15 = (char *)a1 + v9;
    v10 = (char *)a2 + v9;
    a1[4] = a2[4];
    v11 = sub_1DC40124C();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12(v15, v10, v11);
    *(uint64_t *)((char *)v4 + *(int *)(a3 + 28)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 28));
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1DC187234(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_1DC40124C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  return swift_bridgeObjectRelease();
}

_QWORD *sub_1DC1872A8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  char *v13;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  a1[4] = a2[4];
  v8 = *(int *)(a3 + 24);
  v13 = (char *)a1 + v8;
  v9 = (char *)a2 + v8;
  v10 = sub_1DC40124C();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11(v13, v9, v10);
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 28)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 28));
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_1DC187374(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 24);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1DC40124C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 28)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 28));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1DC18745C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v7 = *(int *)(a3 + 24);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1DC40124C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  *(_QWORD *)(a1 + *(int *)(a3 + 28)) = *(_QWORD *)(a2 + *(int *)(a3 + 28));
  return a1;
}

_QWORD *sub_1DC1874DC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 24);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1DC40124C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 28)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 28));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1DC187594()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC1875A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1DC40124C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t sub_1DC18761C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC187628(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_1DC40124C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for StockSearchResultsUpdateModifier()
{
  uint64_t result;

  result = qword_1F034D238;
  if (!qword_1F034D238)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1DC1876D8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1DC40124C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1DC187760(uint64_t a1, void (*a2)(char *), uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t updated;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  void (*v39)(char *);
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD v52[2];
  uint64_t v53;
  uint64_t v54;
  void (*v55)(char *);
  char *v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63[16];

  sub_1DC187FFC(0, (unint64_t *)&qword_1EDB41E18, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB9A28]);
  v7 = v6;
  v61 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v56 = (char *)v52 - v8;
  sub_1DC187F08();
  MEMORY[0x1E0C80A78](v9);
  v57 = (char *)v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC187FFC(0, (unint64_t *)&qword_1EDB2AB88, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790]);
  v59 = *(_QWORD *)(v11 - 8);
  v60 = v11;
  MEMORY[0x1E0C80A78](v11);
  v58 = (char *)v52 - v12;
  sub_1DC1880C8();
  MEMORY[0x1E0C80A78](v13);
  v14 = type metadata accessor for StockSearchSectionDescriptor();
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC187FFC(0, (unint64_t *)&qword_1EDB41DF0, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60]);
  v62 = v17;
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)v52 - v19;
  v21 = *(_QWORD *)(v3 + 32);
  if (*(_QWORD *)(v21 + 16))
  {
    v53 = v7;
    v54 = a3;
    v55 = a2;
    sub_1DC175964(0, (unint64_t *)&qword_1F034D280, (void (*)(uint64_t))MEMORY[0x1E0DAF270], (void (*)(uint64_t))sub_1DC18816C);
    v23 = v22;
    v24 = *(int *)(v22 + 48);
    updated = type metadata accessor for StockSearchResultsUpdateModifier();
    v26 = *(int *)(updated + 24);
    v52[1] = v14;
    v27 = v3 + v26;
    v28 = sub_1DC40124C();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v16, v27, v28);
    *(_QWORD *)&v16[v24] = *(_QWORD *)(v3 + *(int *)(updated + 28));
    v29 = (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v16, 0, 2, v23);
    MEMORY[0x1E0C80A78](v29);
    v52[-2] = v3;
    swift_bridgeObjectRetain();
    v30 = sub_1DC1551B0((void (*)(uint64_t))sub_1DC1881C0, (uint64_t)&v52[-4], v21, (uint64_t)v63);
    sub_1DC0D95F0(0);
    v32 = v31;
    v33 = sub_1DC080808(&qword_1EDB429D0, (uint64_t (*)(uint64_t))sub_1DC0D95F0, MEMORY[0x1E0DB6F08]);
    v34 = sub_1DC080808(&qword_1EDB42B00, (uint64_t (*)(uint64_t))sub_1DC0D95F0, MEMORY[0x1E0DB6EF8]);
    MEMORY[0x1DF0C311C](v30, v32, v33, v34);
    type metadata accessor for StockSearchModel();
    sub_1DC080808(&qword_1EDB389D0, (uint64_t (*)(uint64_t))type metadata accessor for StockSearchSectionDescriptor, (uint64_t)&unk_1DC41CD30);
    sub_1DC080808(&qword_1EDB2F300, (uint64_t (*)(uint64_t))type metadata accessor for StockSearchModel, (uint64_t)&unk_1DC42E184);
    sub_1DC4046F0();
    v35 = sub_1DC166888(0, 1, 1, MEMORY[0x1E0DEE9D8]);
    v37 = *(_QWORD *)(v35 + 16);
    v36 = *(_QWORD *)(v35 + 24);
    if (v37 >= v36 >> 1)
      v35 = sub_1DC166888(v36 > 1, v37 + 1, 1, v35);
    *(_QWORD *)(v35 + 16) = v37 + 1;
    v38 = v62;
    (*(void (**)(unint64_t, char *, uint64_t))(v18 + 32))(v35+ ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80))+ *(_QWORD *)(v18 + 72) * v37, v20, v62);
    v39 = v55;
    v7 = v53;
  }
  else
  {
    v35 = MEMORY[0x1E0DEE9D8];
    v38 = v62;
    v39 = a2;
  }
  v40 = sub_1DC187FAC((unint64_t *)&unk_1EDB41DE0, MEMORY[0x1E0DB7B88]);
  v41 = sub_1DC187FAC(&qword_1EDB41DD8, MEMORY[0x1E0DB7B80]);
  MEMORY[0x1DF0C311C](v35, v38, v40, v41);
  type metadata accessor for StockSearchModel();
  sub_1DC080808(&qword_1EDB389D0, (uint64_t (*)(uint64_t))type metadata accessor for StockSearchSectionDescriptor, (uint64_t)&unk_1DC41CD30);
  sub_1DC080808(&qword_1EDB2F300, (uint64_t (*)(uint64_t))type metadata accessor for StockSearchModel, (uint64_t)&unk_1DC42E184);
  v42 = v58;
  sub_1DC406D0C();
  sub_1DC1881DC();
  v44 = v56;
  v45 = &v56[*(int *)(v43 + 48)];
  v47 = v59;
  v46 = v60;
  (*(void (**)(char *, char *, uint64_t))(v59 + 16))(v56, v42, v60);
  v48 = *MEMORY[0x1E0DB7FB8];
  v49 = sub_1DC404984();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 104))(v45, v48, v49);
  v50 = v61;
  (*(void (**)(char *, _QWORD, uint64_t))(v61 + 104))(v44, *MEMORY[0x1E0DB9A00], v7);
  v39(v44);
  (*(void (**)(char *, uint64_t))(v50 + 8))(v44, v7);
  return (*(uint64_t (**)(char *, uint64_t))(v47 + 8))(v42, v46);
}

uint64_t sub_1DC187CDC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  int v18;
  uint64_t v20;

  v4 = type metadata accessor for StockSearchModel();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v20 - v8;
  v10 = a2 + *(int *)(type metadata accessor for StockSearchResultsUpdateModifier() + 24);
  v11 = (_QWORD *)sub_1DC401228();
  v12 = sub_1DC4010B4();
  v14 = sub_1DC213550(v12, v13, v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1DC175964(0, (unint64_t *)&qword_1F034D290, (void (*)(uint64_t))type metadata accessor for StockViewModel, (void (*)(uint64_t))MEMORY[0x1E0DAF270]);
  v16 = &v6[*(int *)(v15 + 48)];
  sub_1DC0FD5F4(a1, (uint64_t)v6);
  v17 = sub_1DC40124C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v16, v10, v17);
  swift_storeEnumTagMultiPayload();
  if ((v14 & 1) != 0)
    v18 = 0;
  else
    v18 = 2;
  sub_1DC3A7568(v18, v9);
  sub_1DC18825C((uint64_t)v6);
  sub_1DC080808(&qword_1EDB2F300, (uint64_t (*)(uint64_t))type metadata accessor for StockSearchModel, (uint64_t)&unk_1DC42E184);
  return sub_1DC404348();
}

uint64_t sub_1DC187E84()
{
  return sub_1DC080808(&qword_1F034D278, (uint64_t (*)(uint64_t))type metadata accessor for StockSearchResultsUpdateModifier, (uint64_t)&unk_1DC411B28);
}

uint64_t sub_1DC187EB0()
{
  return sub_1DC080808(&qword_1EDB389D0, (uint64_t (*)(uint64_t))type metadata accessor for StockSearchSectionDescriptor, (uint64_t)&unk_1DC41CD30);
}

uint64_t sub_1DC187EDC()
{
  return sub_1DC080808(&qword_1EDB2F300, (uint64_t (*)(uint64_t))type metadata accessor for StockSearchModel, (uint64_t)&unk_1DC42E184);
}

void sub_1DC187F08()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB41DC8)
  {
    sub_1DC187FFC(255, (unint64_t *)&qword_1EDB41DF0, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60]);
    sub_1DC187FAC((unint64_t *)&unk_1EDB41DE0, MEMORY[0x1E0DB7B88]);
    sub_1DC187FAC(&qword_1EDB41DD8, MEMORY[0x1E0DB7B80]);
    v0 = sub_1DC4028E4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB41DC8);
  }
}

uint64_t sub_1DC187FAC(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    sub_1DC187FFC(255, (unint64_t *)&qword_1EDB41DF0, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60]);
    result = MEMORY[0x1DF0CAB8C](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1DC187FFC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *))
{
  unint64_t v6;
  uint64_t v7;
  _QWORD v8[4];

  if (!*a2)
  {
    v8[0] = type metadata accessor for StockSearchSectionDescriptor();
    v8[1] = type metadata accessor for StockSearchModel();
    v8[2] = sub_1DC080808(&qword_1EDB389D0, (uint64_t (*)(uint64_t))type metadata accessor for StockSearchSectionDescriptor, (uint64_t)&unk_1DC41CD30);
    v8[3] = sub_1DC080808(&qword_1EDB2F300, (uint64_t (*)(uint64_t))type metadata accessor for StockSearchModel, (uint64_t)&unk_1DC42E184);
    v6 = a3(a1, v8);
    if (!v7)
      atomic_store(v6, a2);
  }
}

void sub_1DC1880C8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB42AF0)
  {
    sub_1DC0D95F0(255);
    sub_1DC080808(&qword_1EDB429D0, (uint64_t (*)(uint64_t))sub_1DC0D95F0, MEMORY[0x1E0DB6F08]);
    sub_1DC080808(&qword_1EDB42B00, (uint64_t (*)(uint64_t))sub_1DC0D95F0, MEMORY[0x1E0DB6EF8]);
    v0 = sub_1DC4028E4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB42AF0);
  }
}

void sub_1DC18816C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB42890)
  {
    sub_1DC40124C();
    v0 = sub_1DC408D70();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB42890);
  }
}

uint64_t sub_1DC1881C0(uint64_t a1)
{
  uint64_t v1;

  return sub_1DC187CDC(a1, *(_QWORD *)(v1 + 16));
}

void sub_1DC1881DC()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1F034D288)
  {
    sub_1DC187FFC(255, (unint64_t *)&qword_1EDB2AB88, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790]);
    sub_1DC404984();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1F034D288);
  }
}

uint64_t sub_1DC18825C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for StockSearchModel();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

ValueMetadata *type metadata accessor for MastheadModel()
{
  return &type metadata for MastheadModel;
}

uint64_t MailShareLinkTextProvider.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t MailShareLinkTextProvider.init()()
{
  uint64_t v0;

  return v0;
}

uint64_t MailShareLinkTextProvider.sharedFromName.getter()
{
  uint64_t ObjCClassFromMetadata;
  id v1;
  uint64_t v2;

  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v2 = sub_1DC3FFC80();

  return v2;
}

uint64_t MailShareLinkTextProvider.sharedFromURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  v2 = sub_1DC3FFDD0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(a1, 1, 1, v2);
}

uint64_t MailShareLinkTextProvider.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t MailShareLinkTextProvider.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1DC1883DC()
{
  uint64_t ObjCClassFromMetadata;
  id v1;
  uint64_t v2;

  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v2 = sub_1DC3FFC80();

  return v2;
}

uint64_t sub_1DC1884A0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  v2 = sub_1DC3FFDD0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(a1, 1, 1, v2);
}

uint64_t method lookup function for MailShareLinkTextProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MailShareLinkTextProvider.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t sub_1DC1884F0@<X0>(double a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(void *, uint64_t, uint64_t);
  void (*v15)(char *, uint64_t, uint64_t);
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  _QWORD *v25;
  double v26;
  double v27;
  _QWORD *v28;
  double v29;
  double v30;
  double v31;
  double v32;
  int v33;
  double v34;
  id v35;
  void *v36;
  void *v37;
  id v38;
  double v39;
  double v40;
  double v41;
  id v42;
  void *v43;
  void *v44;
  id v45;
  char *v46;
  double v47;
  double v48;
  double v49;
  double v50;
  double v51;
  double v52;
  double v53;
  double v54;
  double v55;
  CGFloat v56;
  double v57;
  CGFloat v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  __int128 v67;
  uint64_t v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  uint64_t v74;
  CGFloat x;
  double v76;
  uint64_t v77;
  char *v78;
  uint64_t *boxed_opaque_existential_1;
  double v80;
  uint64_t v81;
  uint64_t v82;
  CGFloat v83;
  CGFloat v84;
  CGFloat v85;
  CGFloat v86;
  CGFloat v87;
  CGFloat v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  uint64_t v99;
  uint64_t v100[5];
  CGRect v101;
  CGRect v102;
  CGRect v103;
  CGRect v104;

  v83 = a1;
  v77 = a3;
  v5 = sub_1DC4052FC();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v74 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = v3[5];
  v9 = v3[6];
  __swift_project_boxed_opaque_existential_1(v3 + 2, v10);
  v11 = (void *)sub_1DC405254();
  v12 = v9;
  v80 = *(double *)&v9;
  v13 = *(_QWORD *)(v9 + 8);
  v14 = *(void (**)(void *, uint64_t, uint64_t))(v13 + 8);
  v100[3] = v10;
  v100[4] = v12;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v100);
  v14(v11, v10, v13);

  v81 = v6;
  v15 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v78 = v8;
  v82 = v5;
  v15(v8, a2, v5);
  sub_1DC405230();
  v17 = v16;
  sub_1DC405224();
  v19 = v18;
  sub_1DC405224();
  v21 = v20;
  v22 = v17 - v19;
  *((_QWORD *)&v90 + 1) = sub_1DC405CB0();
  *(_QWORD *)&v91 = sub_1DC080808(&qword_1F034D340, (uint64_t (*)(uint64_t))MEMORY[0x1E0DBA958], MEMORY[0x1E0DBA948]);
  __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v89);
  sub_1DC405CA4();
  sub_1DC4052E4();
  v85 = v23;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v89);
  *((_QWORD *)&v90 + 1) = sub_1DC405CC8();
  *(_QWORD *)&v91 = sub_1DC080808((unint64_t *)&unk_1EDB2A488, (uint64_t (*)(uint64_t))MEMORY[0x1E0DBA970], MEMORY[0x1E0DBA960]);
  __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v89);
  sub_1DC405CBC();
  sub_1DC4052E4();
  v84 = v24;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v89);
  *((_QWORD *)&v90 + 1) = &type metadata for WatchlistSelectionIndicatorCellAccessory;
  *(_QWORD *)&v91 = sub_1DC188F9C();
  v25 = (_QWORD *)swift_allocObject();
  *(_QWORD *)&v89 = v25;
  v25[2] = 0xD00000000000001BLL;
  v25[3] = 0x80000001DC436C00;
  v25[4] = 0x656C63726963;
  v25[5] = 0xE600000000000000;
  sub_1DC4052E4();
  v87 = v26;
  v86 = v27;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v89);
  *((_QWORD *)&v90 + 1) = &type metadata for RenameWatchlistCellAccessory;
  *(_QWORD *)&v91 = sub_1DC188FE4();
  v28 = (_QWORD *)swift_allocObject();
  *(_QWORD *)&v89 = v28;
  v28[2] = 0xD000000000000015;
  v28[3] = 0x80000001DC436C20;
  v28[4] = 0x6C69636E6570;
  v28[5] = 0xE600000000000000;
  sub_1DC4052E4();
  v88 = v29;
  v31 = v30;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v89);
  if (v31 <= 44.0)
    v32 = v31;
  else
    v32 = 44.0;
  v33 = *(unsigned __int8 *)(*(_QWORD *)&v83 + 32);
  (*(void (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)&v80 + 16))(*(unsigned __int8 *)(*(_QWORD *)&v83 + 32), 1, v10);
  boxed_opaque_existential_1 = *(uint64_t **)&v22;
  v34 = v22 + -16.0;
  v35 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  v36 = (void *)sub_1DC408A1C();
  type metadata accessor for Key(0);
  sub_1DC080808((unint64_t *)&qword_1EDB3F988, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1DC40D90C);
  v37 = (void *)sub_1DC408980();
  v38 = objc_msgSend(v35, sel_initWithString_attributes_, v36, v37);

  sub_1DC4091B4();
  v40 = v39;

  v41 = v40 + v40;
  type metadata accessor for WatchlistCellViewModel(0);
  sub_1DC40121C();
  v42 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  v43 = (void *)sub_1DC408A1C();
  swift_bridgeObjectRelease();
  v44 = (void *)sub_1DC408980();
  swift_bridgeObjectRelease();
  v45 = objc_msgSend(v42, sel_initWithString_attributes_, v43, v44);

  v46 = v78;
  v76 = v34 + -16.0 - v21;
  sub_1DC4091B4();
  v48 = v47;

  if (v41 >= v48)
    v49 = v48;
  else
    v49 = v41;
  v50 = v49 + 16.0 + 16.0;
  v51 = v34 - v85;
  if (!v33)
    v51 = v51 - v84 + -16.0;
  v80 = v21;
  v52 = v51 - v21;
  sub_1DC405218();
  v54 = 1.0 / v53;
  v55 = v52 + -16.0;
  v101.origin.x = v52 + -16.0 - 1.0 / v53;
  v101.origin.y = 0.0;
  x = v101.origin.x;
  v101.size.width = v54;
  v101.size.height = v49 + 16.0 + 16.0;
  v84 = CGRectGetMinX(v101) - v88 + -16.0;
  v85 = v32;
  v83 = floor((v50 - v32) * 0.5);
  v56 = v86;
  v57 = floor((v50 - v86) * 0.5);
  v102.origin.x = 16.0;
  v102.origin.y = v57;
  v58 = v87;
  v102.size.width = v87;
  v102.size.height = v86;
  CGRectGetWidth(v102);
  v103.origin.x = 16.0;
  v103.origin.y = v57;
  v103.size.width = v58;
  v103.size.height = v56;
  CGRectGetMaxX(v103);
  if ((v33 & 1) == 0)
  {
    v104.origin.x = v84;
    v104.origin.y = v83;
    v104.size.width = v88;
    v104.size.height = v85;
    v55 = CGRectGetMinX(v104) + -16.0 + -16.0;
  }
  MEMORY[0x1E0C80A78](v59);
  *((double *)&v74 - 22) = v50;
  *(&v74 - 21) = v60;
  *(&v74 - 20) = 0x4030000000000000;
  *(&v74 - 19) = v61;
  *((double *)&v74 - 18) = v49;
  __asm { FMOV            V1.2D, #16.0 }
  *(_OWORD *)(&v74 - 17) = _Q1;
  *((double *)&v74 - 15) = v55;
  *((double *)&v74 - 14) = v49;
  *(&v74 - 13) = 0x4030000000000000;
  *(CGFloat *)&_Q1 = v87;
  *((double *)&v74 - 12) = v57;
  *(&v74 - 11) = _Q1;
  *(CGFloat *)&_Q1 = v84;
  *((CGFloat *)&v74 - 10) = v86;
  *(&v74 - 9) = _Q1;
  *(CGFloat *)&_Q1 = v88;
  *((CGFloat *)&v74 - 8) = v83;
  *(&v74 - 7) = _Q1;
  *(CGFloat *)&_Q1 = x;
  *((CGFloat *)&v74 - 6) = v85;
  *(&v74 - 5) = _Q1;
  *(&v74 - 4) = 0;
  *((double *)&v74 - 3) = v54;
  *((double *)&v74 - 2) = v50;
  sub_1DC4051C4();
  (*(void (**)(char *, uint64_t))(v81 + 8))(v46, v82);
  v67 = v98;
  v68 = v77;
  *(_OWORD *)(v77 + 128) = v97;
  *(_OWORD *)(v68 + 144) = v67;
  *(_QWORD *)(v68 + 160) = v99;
  v69 = v94;
  *(_OWORD *)(v68 + 64) = v93;
  *(_OWORD *)(v68 + 80) = v69;
  v70 = v96;
  *(_OWORD *)(v68 + 96) = v95;
  *(_OWORD *)(v68 + 112) = v70;
  v71 = v90;
  *(_OWORD *)v68 = v89;
  *(_OWORD *)(v68 + 16) = v71;
  v72 = v92;
  *(_OWORD *)(v68 + 32) = v91;
  *(_OWORD *)(v68 + 48) = v72;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v100);
}

double sub_1DC188C50@<D0>(double *a1@<X8>, double a2@<D0>, uint64_t a3, double a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t, __n128);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  double v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  double result;
  uint64_t v53;
  double v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  double v74;

  v74 = a2;
  v73 = a13;
  v72 = a14;
  v71 = a15;
  v69 = a9;
  v68 = a10;
  v70 = a12;
  v67 = a11;
  v57 = a5;
  v56 = a6;
  v62 = a8;
  v55 = a7;
  v54 = a4;
  v16 = sub_1DC404210();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v53 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = *MEMORY[0x1E0DB6B40];
  v22 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v17 + 104);
  v22(v20, v21, v16, v18);
  sub_1DC404204();
  v65 = v24;
  v66 = v23;
  v63 = v26;
  v64 = v25;
  v27 = *(void (**)(char *, uint64_t))(v17 + 8);
  v27(v20, v16);
  ((void (*)(char *, uint64_t, uint64_t))v22)(v20, v21, v16);
  sub_1DC404204();
  v60 = v29;
  v61 = v28;
  v59 = v30;
  v58 = v31;
  v27(v20, v16);
  ((void (*)(char *, uint64_t, uint64_t))v22)(v20, v21, v16);
  sub_1DC404204();
  v57 = v32;
  v56 = v33;
  v55 = v34;
  v54 = v35;
  v27(v20, v16);
  ((void (*)(char *, uint64_t, uint64_t))v22)(v20, v21, v16);
  sub_1DC404204();
  v37 = v36;
  v39 = v38;
  v41 = v40;
  v43 = v42;
  v27(v20, v16);
  ((void (*)(char *, uint64_t, uint64_t))v22)(v20, v21, v16);
  sub_1DC404204();
  v45 = v44;
  v47 = v46;
  v49 = v48;
  v51 = v50;
  v27(v20, v16);
  *a1 = v74;
  *((_QWORD *)a1 + 1) = v66;
  *((_QWORD *)a1 + 2) = v65;
  *((_QWORD *)a1 + 3) = v64;
  *((_QWORD *)a1 + 4) = v63;
  *((_QWORD *)a1 + 5) = v61;
  *((_QWORD *)a1 + 6) = v60;
  *((_QWORD *)a1 + 7) = v59;
  *((_QWORD *)a1 + 8) = v58;
  *((_QWORD *)a1 + 9) = v57;
  *((_QWORD *)a1 + 10) = v56;
  *((_QWORD *)a1 + 11) = v55;
  result = v54;
  a1[12] = v54;
  *((_QWORD *)a1 + 13) = v37;
  *((_QWORD *)a1 + 14) = v39;
  *((_QWORD *)a1 + 15) = v41;
  *((_QWORD *)a1 + 16) = v43;
  *((_QWORD *)a1 + 17) = v45;
  *((_QWORD *)a1 + 18) = v47;
  *((_QWORD *)a1 + 19) = v49;
  *((_QWORD *)a1 + 20) = v51;
  return result;
}

uint64_t type metadata accessor for WatchlistCellViewLayoutAttributesFactory()
{
  return objc_opt_self();
}

unint64_t sub_1DC188F9C()
{
  unint64_t result;

  result = qword_1F034D348;
  if (!qword_1F034D348)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC411DEC, &type metadata for WatchlistSelectionIndicatorCellAccessory);
    atomic_store(result, (unint64_t *)&qword_1F034D348);
  }
  return result;
}

unint64_t sub_1DC188FE4()
{
  unint64_t result;

  result = qword_1F034D350;
  if (!qword_1F034D350)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC411DBC, &type metadata for RenameWatchlistCellAccessory);
    atomic_store(result, (unint64_t *)&qword_1F034D350);
  }
  return result;
}

double sub_1DC18902C@<D0>(double *a1@<X8>)
{
  uint64_t v1;

  return sub_1DC188C50(a1, *(double *)(v1 + 16), *(_QWORD *)(v1 + 80), *(double *)(v1 + 88), *(_QWORD *)(v1 + 96), *(_QWORD *)(v1 + 104), *(_QWORD *)(v1 + 112), *(_QWORD *)(v1 + 120), *(_QWORD *)(v1 + 128), *(_QWORD *)(v1 + 136), *(_QWORD *)(v1 + 144), *(_QWORD *)(v1 + 152), *(_QWORD *)(v1 + 160), *(_QWORD *)(v1 + 168), *(_QWORD *)(v1 + 176));
}

ValueMetadata *type metadata accessor for RenameWatchlistCellAccessory()
{
  return &type metadata for RenameWatchlistCellAccessory;
}

uint64_t destroy for TodayModel()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for TodayModel(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for TodayModel(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for TodayModel(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TodayModel(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TodayModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for WatchlistSelectionIndicatorCellAccessory()
{
  return &type metadata for WatchlistSelectionIndicatorCellAccessory;
}

uint64_t sub_1DC189250()
{
  sub_1DC189384();
  return sub_1DC406664();
}

uint64_t sub_1DC18928C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1DC1892B8()
{
  sub_1DC1893C8();
  return sub_1DC406664();
}

unint64_t sub_1DC1892F8()
{
  unint64_t result;

  result = qword_1F034D358;
  if (!qword_1F034D358)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC411D5C, &type metadata for RenameWatchlistCellAccessory);
    atomic_store(result, (unint64_t *)&qword_1F034D358);
  }
  return result;
}

unint64_t sub_1DC189340()
{
  unint64_t result;

  result = qword_1F034D360;
  if (!qword_1F034D360)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC411CFC, &type metadata for WatchlistSelectionIndicatorCellAccessory);
    atomic_store(result, (unint64_t *)&qword_1F034D360);
  }
  return result;
}

unint64_t sub_1DC189384()
{
  unint64_t result;

  result = qword_1F034D368;
  if (!qword_1F034D368)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC411D24, &type metadata for WatchlistSelectionIndicatorCellAccessory);
    atomic_store(result, (unint64_t *)&qword_1F034D368);
  }
  return result;
}

unint64_t sub_1DC1893C8()
{
  unint64_t result;

  result = qword_1F034D370;
  if (!qword_1F034D370)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC411D84, &type metadata for RenameWatchlistCellAccessory);
    atomic_store(result, (unint64_t *)&qword_1F034D370);
  }
  return result;
}

uint64_t sub_1DC189414@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t (*v25)(uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  _QWORD *v37;
  void (*v38)(_QWORD);
  id v39;
  void (*v40)(char *, uint64_t, uint64_t);
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t ObjCClassFromMetadata;
  void *v46;
  id v47;
  uint64_t v48;
  void (*v49)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v50;
  void (*v51)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  void (*v55)(_QWORD *, uint64_t, _QWORD *);
  uint64_t v56;
  void (*v57)(char *, uint64_t, uint64_t);
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  void *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  id v71;
  id v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  uint64_t v77;
  _QWORD *v78;
  uint64_t v79;
  _QWORD *v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  char *v84;
  _QWORD *v85;
  unint64_t v86;
  unint64_t v87;
  void (*v88)(char *, uint64_t, uint64_t);
  uint64_t *boxed_opaque_existential_1;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  void (*v94)(char *, uint64_t, uint64_t);
  void (*v95)(_QWORD *, uint64_t, _QWORD *);
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  void *v99;
  _OWORD *v100;
  uint64_t v101;
  _QWORD *v102;
  void *v103;
  void *v104;
  void *v105;
  uint64_t v106;
  void *v107;
  uint64_t v108;
  id v109;
  id v110;
  id v111;
  id v112;
  uint64_t v113;
  id v114;
  char *v115;
  char *v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  void *v120;
  uint64_t v121;
  uint64_t v122;
  id v123;
  id v124;
  char *v125;
  _QWORD *v126;
  uint64_t v127;
  uint64_t v128;
  id v129;
  uint64_t v130;
  void *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  id v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  void *v139;
  id v140;
  uint64_t (*v141)(void);
  uint64_t v143;
  char *v144;
  char *v145;
  uint64_t v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t *v155;
  id v156;
  uint64_t v157;
  uint64_t v158;
  char *v159;
  id v160;
  char *v161;
  char *v162;
  uint64_t v163;
  uint64_t v164;
  __int128 v165;
  uint64_t v166;
  char *v167;
  uint64_t v168;
  char *v169;
  id v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  _QWORD *v176;
  _QWORD *v177;
  void (*v178)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v179;
  void (*v180)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  char *v184;
  uint64_t v185;
  char *v186;
  void (*v187)(_QWORD *, uint64_t, _QWORD *);
  _QWORD *v188;
  unsigned int v189;
  void (*v190)(char *, uint64_t, uint64_t);
  uint64_t v191;
  __int128 v192;
  __int128 v193;
  uint64_t v194;
  uint64_t v195;
  __int128 v196;
  uint64_t v197;
  _QWORD v198[6];

  v198[5] = *MEMORY[0x1E0C80C00];
  v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1DC089DA4(0, &qword_1EDB427D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB8560], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v5);
  v162 = (char *)&v143 - v6;
  v149 = sub_1DC40439C();
  v146 = *(_QWORD *)(v149 - 8);
  MEMORY[0x1E0C80A78](v149);
  v147 = (char *)&v143 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC112498(0, &qword_1EDB42928, (uint64_t (*)(void))sub_1DC12D598, MEMORY[0x1E0D5E388], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB8348]);
  MEMORY[0x1E0C80A78](v8);
  v145 = (char *)&v143 - v9;
  sub_1DC089DA4(0, &qword_1EDB42810, (uint64_t (*)(uint64_t))sub_1DC190DEC, v4);
  MEMORY[0x1E0C80A78](v10);
  v144 = (char *)&v143 - v11;
  v185 = sub_1DC406B8C();
  v148 = *(_QWORD *)(v185 - 8);
  MEMORY[0x1E0C80A78](v185);
  v161 = (char *)&v143 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v168 = sub_1DC406DF0();
  v13 = *(_QWORD *)(v168 - 8);
  MEMORY[0x1E0C80A78](v168);
  v167 = (char *)&v143 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC089DA4(0, (unint64_t *)&unk_1EDB29EF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB8200], v4);
  MEMORY[0x1E0C80A78](v15);
  v169 = (char *)&v143 - v16;
  sub_1DC089DA4(0, &qword_1EDB29B38, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB6A80], v4);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v143 - v18;
  v191 = sub_1DC406DB4();
  v20 = *(_QWORD *)(v191 - 8);
  MEMORY[0x1E0C80A78](v191);
  v184 = (char *)&v143 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v188 = (_QWORD *)sub_1DC406DE4();
  v22 = *(v188 - 1);
  MEMORY[0x1E0C80A78](v188);
  v24 = (uint64_t *)((char *)&v143 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, (unint64_t *)&unk_1EDB28C90);
  sub_1DC402608();
  if (!v197)
  {
    __break(1u);
    goto LABEL_17;
  }
  v186 = v19;
  sub_1DC097DD0(&v196, (uint64_t)v198);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB28C40);
  sub_1DC402608();
  if (!v194)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v176 = a1;
  v158 = a2;
  sub_1DC097DD0(&v193, (uint64_t)&v196);
  v25 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
  sub_1DC089DA4(0, &qword_1EDB42960, (uint64_t (*)(uint64_t))MEMORY[0x1E0DBC918], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v27 = v26;
  v28 = *(_QWORD *)(v13 + 72);
  v29 = *(unsigned __int8 *)(v13 + 80);
  v30 = (v29 + 32) & ~v29;
  v31 = v29 | 7;
  v174 = v30 + v28;
  v32 = swift_allocObject();
  v192 = xmmword_1DC40DC10;
  *(_OWORD *)(v32 + 16) = xmmword_1DC40DC10;
  v157 = v32;
  v164 = v32 + v30;
  v33 = (void *)*MEMORY[0x1E0DC5020];
  v154 = 2 * v28;
  v175 = v27;
  v156 = (id)(v30 + 2 * v28);
  v173 = v31;
  v34 = swift_allocObject();
  v165 = xmmword_1DC40C740;
  *(_OWORD *)(v34 + 16) = xmmword_1DC40C740;
  v183 = v30;
  v163 = v34;
  v35 = v34 + v30;
  v166 = v13;
  v36 = (void *)*MEMORY[0x1E0DC5010];
  v37 = v24;
  *v24 = *MEMORY[0x1E0DC5010];
  v38 = *(void (**)(_QWORD))(v22 + 104);
  LODWORD(v155) = *MEMORY[0x1E0DBC8E0];
  v187 = (void (*)(_QWORD *, uint64_t, _QWORD *))v38;
  v38(v24);
  v160 = v33;
  v39 = v36;
  sub_1DC18ABCC((void (*)(unint64_t, char *, uint64_t))v198);
  v40 = *(void (**)(char *, uint64_t, uint64_t))(v20 + 104);
  v41 = v184;
  v189 = *MEMORY[0x1E0DBC8B0];
  v190 = v40;
  ((void (*)(char *))v40)(v184);
  sub_1DC406DC0();
  v182 = v28;
  v159 = (char *)(v35 + v28);
  sub_1DC132688(0, (unint64_t *)&unk_1EDB42950, &qword_1EDB42920, MEMORY[0x1E0DB6FA8], v25);
  v172 = v42;
  v43 = swift_allocObject();
  *(_OWORD *)(v43 + 16) = v192;
  v44 = v169;
  if (qword_1EDB2AA38 != -1)
    swift_once();
  LOBYTE(v193) = 1;
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v46 = (void *)objc_opt_self();
  swift_retain();
  v170 = v46;
  v171 = ObjCClassFromMetadata;
  v47 = objc_msgSend(v46, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1DC3FFC80();

  v48 = sub_1DC4041D4();
  v49 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 56);
  v181 = v48;
  v180 = v49;
  ((void (*)(char *, uint64_t, uint64_t))v49)(v186, 1, 1);
  v50 = sub_1DC404B10();
  v51 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 56);
  v179 = v50;
  v178 = v51;
  ((void (*)(char *, uint64_t, uint64_t))v51)(v44, 1, 1);
  v52 = MEMORY[0x1E0DBC598];
  *(_QWORD *)(v43 + 56) = v185;
  *(_QWORD *)(v43 + 64) = v52;
  __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v43 + 32));
  sub_1DC406B50();
  v53 = *MEMORY[0x1E0DBC8F0];
  v54 = v188;
  v55 = v187;
  v187(v37, v53, v188);
  v56 = v189;
  v57 = v190;
  v58 = v191;
  v190(v41, v189, v191);
  sub_1DC406DC0();
  sub_1DC406DFC();
  LODWORD(v163) = v53;
  v55(v37, v53, v54);
  v57(v41, v56, v58);
  v59 = v167;
  sub_1DC406DC0();
  v60 = swift_allocObject();
  *(_OWORD *)(v60 + 16) = v192;
  v160 = (id)*MEMORY[0x1E0DC5060];
  sub_1DC089DA4(0, &qword_1EDB42968, (uint64_t (*)(uint64_t))type metadata accessor for Identifier, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v164 = v61;
  v62 = swift_allocObject();
  *(_OWORD *)(v62 + 16) = v165;
  v63 = (void *)*MEMORY[0x1E0DC50B0];
  v64 = (void *)*MEMORY[0x1E0DC5050];
  *(_QWORD *)(v62 + 32) = *MEMORY[0x1E0DC50B0];
  *(_QWORD *)(v62 + 40) = v64;
  v159 = (char *)v62;
  v65 = v183;
  v66 = swift_allocObject();
  *(_OWORD *)(v66 + 16) = xmmword_1DC411E20;
  v153 = v66;
  v177 = v37;
  v67 = v41;
  v68 = v66 + v65;
  (*(void (**)(uint64_t, char *, uint64_t))(v166 + 16))(v66 + v65, v59, v168);
  v69 = swift_allocObject();
  *(_OWORD *)(v69 + 16) = v192;
  __swift_project_boxed_opaque_existential_1(v176, v176[3]);
  v70 = type metadata accessor for ShareDynamicMenuItemProvider();
  v160 = v160;
  v71 = v63;
  v72 = v64;
  v73 = sub_1DC4025FC();
  if (!v73)
LABEL_18:
    __break(1u);
  v74 = v73;
  v152 = v60;
  v150 = v60 + v183;
  v151 = v68;
  v194 = v70;
  v195 = sub_1DC080808(&qword_1EDB42820, (uint64_t (*)(uint64_t))type metadata accessor for ShareDynamicMenuItemProvider, (uint64_t)&unk_1DC430A00);
  *(_QWORD *)&v193 = v74;
  v75 = v185;
  *(_QWORD *)(v69 + 56) = v185;
  *(_QWORD *)(v69 + 64) = MEMORY[0x1E0DBC598];
  __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v69 + 32));
  sub_1DC406B80();
  v76 = v177;
  v77 = v163;
  v78 = v188;
  v187(v177, v163, v188);
  v79 = v189;
  v190(v67, v189, v191);
  sub_1DC406DC0();
  __swift_project_boxed_opaque_existential_1(v198, v198[3]);
  v80 = v78;
  if ((sub_1DC400BEC() & 1) != 0)
  {
    v81 = v75;
    v82 = v67;
    sub_1DC406A6C();
    sub_1DC190DEC(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v83 - 8) + 56))(v144, 1, 1, v83);
    LOBYTE(v193) = 1;
    sub_1DC12D598();
    sub_1DC404B64();
    v84 = v186;
    sub_1DC4041BC();
    v180(v84, 0, 1, v181);
    v178(v169, 1, 1, v179);
    (*(void (**)(char *, _QWORD, uint64_t))(v146 + 104))(v147, *MEMORY[0x1E0DB6FB0], v149);
    sub_1DC406B68();
    v85 = sub_1DC1668B0(0, 1, 1, MEMORY[0x1E0DEE9D8]);
    v87 = v85[2];
    v86 = v85[3];
    if (v87 >= v86 >> 1)
      v85 = sub_1DC1668B0((_QWORD *)(v86 > 1), v87 + 1, 1, v85);
    v88 = v190;
    v149 = (uint64_t)v85;
    v194 = v81;
    v195 = MEMORY[0x1E0DBC598];
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v193);
    v90 = v148;
    v91 = v161;
    (*(void (**)(uint64_t *, char *, uint64_t))(v148 + 16))(boxed_opaque_existential_1, v161, v81);
    v85[2] = v87 + 1;
    sub_1DC097DD0(&v193, (uint64_t)&v85[5 * v87 + 4]);
    (*(void (**)(char *, uint64_t))(v90 + 8))(v91, v81);
    v92 = v189;
    v93 = v163;
    v76 = v177;
    v94 = v88;
  }
  else
  {
    v92 = v79;
    v93 = v77;
    v82 = v67;
    v149 = MEMORY[0x1E0DEE9D8];
    v94 = v190;
  }
  v95 = v187;
  v187(v76, v93, v80);
  v96 = v191;
  v94(v82, v92, v191);
  sub_1DC406DC0();
  sub_1DC18B984(v176);
  v95(v76, v93, v80);
  v94(v82, v92, v96);
  sub_1DC406DC0();
  sub_1DC406DFC();
  v97 = swift_allocObject();
  *(_OWORD *)(v97 + 16) = v192;
  v98 = v183;
  v163 = v97;
  v161 = (char *)(v97 + v183);
  v99 = (void *)*MEMORY[0x1E0DC5058];
  v100 = (_OWORD *)swift_allocObject();
  v100[1] = v192;
  v160 = v100;
  v159 = (char *)v100 + v98;
  v101 = swift_allocObject();
  v102 = v80;
  *(_OWORD *)(v101 + 16) = xmmword_1DC40FA70;
  v103 = (void *)*MEMORY[0x1E0DC5130];
  v104 = (void *)*MEMORY[0x1E0DC5170];
  *(_QWORD *)(v101 + 32) = *MEMORY[0x1E0DC5130];
  *(_QWORD *)(v101 + 40) = v104;
  v105 = (void *)*MEMORY[0x1E0DC5068];
  v154 = v101;
  *(_QWORD *)(v101 + 48) = v105;
  v106 = swift_allocObject();
  *(_OWORD *)(v106 + 16) = v165;
  *(_QWORD *)&v165 = v106;
  v153 = v106 + v98;
  v107 = (void *)*MEMORY[0x1E0DC5120];
  *v76 = *MEMORY[0x1E0DC5120];
  v95(v76, v155, v102);
  v108 = swift_allocObject();
  *(_OWORD *)(v108 + 16) = v192;
  v155 = (uint64_t *)(v108 + 32);
  sub_1DC406AE4();
  v156 = v99;
  v109 = v103;
  v110 = v104;
  v111 = v105;
  v112 = v107;
  sub_1DC406AD8();
  v113 = sub_1DC404C78();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v113 - 8) + 56))(v162, 1, 1, v113);
  v114 = objc_msgSend(v170, sel_bundleForClass_, v171);
  sub_1DC3FFC80();

  v115 = v186;
  sub_1DC4041BC();
  v180(v115, 0, 1, v181);
  v116 = v169;
  v178(v169, 1, 1, v179);
  v117 = v185;
  *(_QWORD *)(v108 + 56) = v185;
  *(_QWORD *)(v108 + 64) = MEMORY[0x1E0DBC598];
  __swift_allocate_boxed_opaque_existential_1(v155);
  v118 = v116;
  sub_1DC406B50();
  v119 = v191;
  v190(v184, v189, v191);
  sub_1DC406DC0();
  v120 = (void *)*MEMORY[0x1E0DC5108];
  *v76 = *MEMORY[0x1E0DC5108];
  v187(v76, *MEMORY[0x1E0DBC8F8], v188);
  v121 = swift_allocObject();
  *(_OWORD *)(v121 + 16) = v192;
  v122 = qword_1EDB2AA00;
  v123 = v120;
  if (v122 != -1)
    swift_once();
  LOBYTE(v193) = 1;
  swift_retain();
  v124 = objc_msgSend(v170, sel_bundleForClass_, v171);
  sub_1DC3FFC80();

  v125 = v186;
  sub_1DC4041BC();
  v180(v125, 0, 1, v181);
  v178(v118, 1, 1, v179);
  *(_QWORD *)(v121 + 56) = v117;
  *(_QWORD *)(v121 + 64) = MEMORY[0x1E0DBC598];
  __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v121 + 32));
  sub_1DC406B50();
  v190(v184, v189, v119);
  v126 = v177;
  sub_1DC406DC0();
  sub_1DC406DFC();
  sub_1DC406DFC();
  v127 = swift_allocObject();
  *(_OWORD *)(v127 + 16) = v192;
  v128 = v183;
  v182 = v127;
  v129 = (id)*MEMORY[0x1E0DC5180];
  sub_1DC18C130((uint64_t)v198, v176, &v196);
  sub_1DC406DFC();
  v130 = swift_allocObject();
  *(_OWORD *)(v130 + 16) = v192;
  v131 = (void *)*MEMORY[0x1E0DC5088];
  v132 = swift_allocObject();
  *(_OWORD *)(v132 + 16) = v192;
  v187(v126, *MEMORY[0x1E0DBC8E8], v188);
  v133 = swift_allocObject();
  *(_OWORD *)(v133 + 16) = v192;
  v134 = qword_1EDB2AA28;
  v188 = v131;
  if (v134 != -1)
    swift_once();
  v187 = (void (*)(_QWORD *, uint64_t, _QWORD *))(v132 + v128);
  LOBYTE(v193) = 1;
  swift_retain();
  v135 = objc_msgSend(v170, sel_bundleForClass_, v171);
  sub_1DC3FFC80();

  v180(v186, 1, 1, v181);
  v178(v118, 1, 1, v179);
  *(_QWORD *)(v133 + 56) = v185;
  *(_QWORD *)(v133 + 64) = MEMORY[0x1E0DBC598];
  __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v133 + 32));
  sub_1DC406B50();
  v190(v184, v189, v191);
  sub_1DC406DC0();
  v136 = MEMORY[0x1E0DEE9D8];
  sub_1DC406DFC();
  v137 = sub_1DC18ED80();
  v138 = swift_allocObject();
  *(_OWORD *)(v138 + 16) = v192;
  v139 = (void *)*MEMORY[0x1E0DC5078];
  *(_QWORD *)(v138 + 32) = *MEMORY[0x1E0DC5078];
  *(_QWORD *)&v193 = v157;
  v140 = v139;
  v141 = MEMORY[0x1E0DBC918];
  sub_1DC0CDBD4(v152, (uint64_t (*)(void))sub_1DC1668CC, (uint64_t (*)(_QWORD))MEMORY[0x1E0DBC918]);
  sub_1DC0CDBD4(v163, (uint64_t (*)(void))sub_1DC1668CC, (uint64_t (*)(_QWORD))v141);
  sub_1DC0CDBD4(v182, (uint64_t (*)(void))sub_1DC1668CC, (uint64_t (*)(_QWORD))v141);
  sub_1DC0CDBD4(v136, (uint64_t (*)(void))sub_1DC1668CC, (uint64_t (*)(_QWORD))v141);
  sub_1DC0CDBD4(v130, (uint64_t (*)(void))sub_1DC1668CC, (uint64_t (*)(_QWORD))v141);
  sub_1DC0CDBD4(v137, (uint64_t (*)(void))sub_1DC1668CC, (uint64_t (*)(_QWORD))v141);
  sub_1DC406754();
  (*(void (**)(char *, uint64_t))(v166 + 8))(v167, v168);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v196);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v198);
}

uint64_t sub_1DC18ABCC(void (*a1)(unint64_t, char *, uint64_t))
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t ObjCClassFromMetadata;
  void *v16;
  id v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  void (*v26)(unint64_t, char *, uint64_t);
  id v27;
  char *v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  void (*v33)(char *, uint64_t, uint64_t, uint64_t);
  void (*v34)(char *, uint64_t, uint64_t);
  uint64_t v35;
  id v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  void (*v43)(unint64_t, char *, uint64_t);
  uint64_t v44;
  uint64_t v45;
  char v46;
  char v47;

  v43 = a1;
  v42 = sub_1DC40439C();
  v40 = *(_QWORD *)(v42 - 8);
  MEMORY[0x1E0C80A78](v42);
  v41 = (char *)&v33 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1DC089DA4(0, (unint64_t *)&unk_1EDB29EF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB8200], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v33 - v4;
  sub_1DC112498(0, (unint64_t *)&qword_1F034F260, (uint64_t (*)(void))sub_1DC190E90, (uint64_t)&type metadata for FeatureControlState, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB8BA0]);
  MEMORY[0x1E0C80A78](v6);
  sub_1DC089DA4(0, &qword_1EDB29B38, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB6A80], v2);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v33 - v8;
  v44 = sub_1DC406B8C();
  v10 = *(_QWORD *)(v44 - 8);
  v11 = MEMORY[0x1E0C80A78](v44);
  v38 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v33 - v13;
  if (qword_1EDB2AA10 != -1)
    swift_once();
  v47 = 0;
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v16 = (void *)objc_opt_self();
  swift_retain();
  v36 = v16;
  v37 = ObjCClassFromMetadata;
  v17 = objc_msgSend(v16, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1DC3FFC80();

  v18 = sub_1DC4041D4();
  v34 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56);
  v35 = v18;
  v34(v9, 1, 1);
  v46 = 1;
  sub_1DC190E90();
  sub_1DC404EC4();
  v19 = v9;
  v20 = sub_1DC404B10();
  v33 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56);
  v33(v5, 1, 1, v20);
  (*(void (**)(char *, _QWORD, uint64_t))(v40 + 104))(v41, *MEMORY[0x1E0DB6FB0], v42);
  v42 = (uint64_t)v19;
  sub_1DC406B5C();
  v21 = sub_1DC16689C(0, 1, 1, MEMORY[0x1E0DEE9D8]);
  v23 = *(_QWORD *)(v21 + 16);
  v22 = *(_QWORD *)(v21 + 24);
  v39 = v5;
  if (v23 >= v22 >> 1)
    v21 = sub_1DC16689C(v22 > 1, v23 + 1, 1, v21);
  *(_QWORD *)(v21 + 16) = v23 + 1;
  v24 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v25 = *(_QWORD *)(v10 + 72);
  v26 = *(void (**)(unint64_t, char *, uint64_t))(v10 + 32);
  v26(v21 + v24 + v25 * v23, v14, v44);
  __swift_project_boxed_opaque_existential_1(v43, *((_QWORD *)v43 + 3));
  if ((sub_1DC400C1C() & 1) == 0)
  {
    v43 = v26;
    sub_1DC406A9C();
    v45 = 0;
    v27 = objc_msgSend(v36, sel_bundleForClass_, v37);
    sub_1DC3FFC80();

    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v34)(v42, 1, 1, v35);
    v33(v39, 1, 1, v20);
    v28 = v38;
    sub_1DC406B50();
    v30 = *(_QWORD *)(v21 + 16);
    v29 = *(_QWORD *)(v21 + 24);
    if (v30 >= v29 >> 1)
      v21 = sub_1DC16689C(v29 > 1, v30 + 1, 1, v21);
    *(_QWORD *)(v21 + 16) = v30 + 1;
    v43(v21 + v24 + v30 * v25, v28, v44);
  }
  v31 = sub_1DC18B178(v21);
  swift_bridgeObjectRelease();
  return v31;
}

uint64_t sub_1DC18B124@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>)
{
  int v3;
  uint64_t v4;
  unsigned int *v5;

  v3 = *a1;
  v4 = sub_1DC404C54();
  v5 = (unsigned int *)MEMORY[0x1E0DB8528];
  if (!v3)
    v5 = (unsigned int *)MEMORY[0x1E0DB8530];
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v4 - 8) + 104))(a2, *v5, v4);
}

uint64_t sub_1DC18B178(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t, uint64_t);
  unint64_t v11;
  unint64_t v12;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v14;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v2 = sub_1DC406B8C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = MEMORY[0x1E0DEE9D8];
  if (v6)
  {
    v19 = MEMORY[0x1E0DEE9D8];
    sub_1DC2AD56C(0, v6, 0);
    v7 = v19;
    v8 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v9 = *(_QWORD *)(v3 + 72);
    v10 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    do
    {
      v10(v5, v8, v2);
      v19 = v7;
      v12 = *(_QWORD *)(v7 + 16);
      v11 = *(_QWORD *)(v7 + 24);
      if (v12 >= v11 >> 1)
        sub_1DC2AD56C(v11 > 1, v12 + 1, 1);
      v17 = v2;
      v18 = MEMORY[0x1E0DBC598];
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v16);
      v10((char *)boxed_opaque_existential_1, (uint64_t)v5, v2);
      v14 = v19;
      *(_QWORD *)(v19 + 16) = v12 + 1;
      sub_1DC097DD0(&v16, v14 + 40 * v12 + 32);
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      v7 = v19;
      v8 += v9;
      --v6;
    }
    while (v6);
  }
  return v7;
}

uint64_t sub_1DC18B2E0(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t i;
  unint64_t v6;
  unint64_t v7;
  id *v8;
  id v9;
  unint64_t v10;
  unint64_t v11;
  _OWORD v12[2];
  uint64_t v13;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v2 = sub_1DC409850();
    swift_bridgeObjectRelease();
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v3 = MEMORY[0x1E0DEE9D8];
  if (!v2)
    return v3;
  v13 = MEMORY[0x1E0DEE9D8];
  result = sub_1DC2AD5F8(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v2; ++i)
      {
        MEMORY[0x1DF0C9FBC](i, a1);
        sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3F9D0);
        swift_dynamicCast();
        v3 = v13;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1DC2AD5F8(0, *(_QWORD *)(v3 + 16) + 1, 1);
          v3 = v13;
        }
        v7 = *(_QWORD *)(v3 + 16);
        v6 = *(_QWORD *)(v3 + 24);
        if (v7 >= v6 >> 1)
        {
          sub_1DC2AD5F8(v6 > 1, v7 + 1, 1);
          v3 = v13;
        }
        *(_QWORD *)(v3 + 16) = v7 + 1;
        sub_1DC0FA0E4(v12, (_OWORD *)(v3 + 32 * v7 + 32));
      }
    }
    else
    {
      v8 = (id *)(a1 + 32);
      sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3F9D0);
      do
      {
        v9 = *v8;
        swift_dynamicCast();
        v3 = v13;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1DC2AD5F8(0, *(_QWORD *)(v3 + 16) + 1, 1);
          v3 = v13;
        }
        v11 = *(_QWORD *)(v3 + 16);
        v10 = *(_QWORD *)(v3 + 24);
        if (v11 >= v10 >> 1)
        {
          sub_1DC2AD5F8(v10 > 1, v11 + 1, 1);
          v3 = v13;
        }
        *(_QWORD *)(v3 + 16) = v11 + 1;
        sub_1DC0FA0E4(v12, (_OWORD *)(v3 + 32 * v11 + 32));
        ++v8;
        --v2;
      }
      while (v2);
    }
    return v3;
  }
  __break(1u);
  return result;
}

uint64_t sub_1DC18B540(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v2 = sub_1DC409850();
    swift_bridgeObjectRelease();
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v3 = MEMORY[0x1E0DEE9D8];
  if (!v2)
    return v3;
  v18 = MEMORY[0x1E0DEE9D8];
  result = sub_1DC2AD698(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    v3 = v18;
    if ((a1 & 0xC000000000000001) != 0)
    {
      v5 = 0;
      v6 = MEMORY[0x1E0DB77B0];
      do
      {
        v7 = MEMORY[0x1DF0C9FBC](v5, a1);
        v18 = v3;
        v9 = *(_QWORD *)(v3 + 16);
        v8 = *(_QWORD *)(v3 + 24);
        if (v9 >= v8 >> 1)
        {
          sub_1DC2AD698(v8 > 1, v9 + 1, 1);
          v3 = v18;
        }
        ++v5;
        v16 = sub_1DC40463C();
        v17 = v6;
        *(_QWORD *)&v15 = v7;
        *(_QWORD *)(v3 + 16) = v9 + 1;
        sub_1DC097DD0(&v15, v3 + 40 * v9 + 32);
      }
      while (v2 != v5);
    }
    else
    {
      v10 = (uint64_t *)(a1 + 32);
      v11 = MEMORY[0x1E0DB77B0];
      do
      {
        v12 = *v10;
        v18 = v3;
        v13 = *(_QWORD *)(v3 + 16);
        v14 = *(_QWORD *)(v3 + 24);
        swift_retain();
        if (v13 >= v14 >> 1)
        {
          sub_1DC2AD698(v14 > 1, v13 + 1, 1);
          v3 = v18;
        }
        v16 = sub_1DC40463C();
        v17 = v11;
        *(_QWORD *)&v15 = v12;
        *(_QWORD *)(v3 + 16) = v13 + 1;
        sub_1DC097DD0(&v15, v3 + 40 * v13 + 32);
        ++v10;
        --v2;
      }
      while (v2);
    }
    return v3;
  }
  __break(1u);
  return result;
}

uint64_t sub_1DC18B708(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t);
  unint64_t v7;
  unint64_t v8;
  _BYTE v10[40];
  _BYTE v11[40];
  uint64_t v12;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v12 = MEMORY[0x1E0DEE9D8];
    sub_1DC1128CC(0, v1, 0);
    v4 = MEMORY[0x1E0DB8CD0];
    v5 = a1 + 32;
    v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
    do
    {
      sub_1DC0824D4(v5, (uint64_t)v10);
      sub_1DC096268(0, (unint64_t *)&qword_1EDB2A050);
      sub_1DC132688(0, &qword_1EDB2A060, (unint64_t *)&qword_1EDB2A050, v4, v6);
      swift_dynamicCast();
      v2 = v12;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1DC1128CC(0, *(_QWORD *)(v2 + 16) + 1, 1);
        v2 = v12;
      }
      v8 = *(_QWORD *)(v2 + 16);
      v7 = *(_QWORD *)(v2 + 24);
      if (v8 >= v7 >> 1)
      {
        sub_1DC1128CC(v7 > 1, v8 + 1, 1);
        v2 = v12;
      }
      *(_QWORD *)(v2 + 16) = v8 + 1;
      sub_1DC131530((uint64_t)v11, v2 + 40 * v8 + 32);
      v5 += 40;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1DC18B874(unint64_t a1)
{
  return sub_1DC112608(a1, (void (*)(_QWORD))MEMORY[0x1E0DB7CD0]);
}

uint64_t sub_1DC18B880()
{
  uint64_t ObjCClassFromMetadata;
  id v1;
  uint64_t v2;

  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v2 = sub_1DC3FFC80();

  return v2;
}

uint64_t sub_1DC18B984(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, _QWORD, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t ObjCClassFromMetadata;
  void *v31;
  id v32;
  char *v33;
  uint64_t v34;
  uint64_t result;
  uint64_t v36;
  uint64_t v37;
  _QWORD v38[2];
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  char *v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  v44 = a1;
  v1 = sub_1DC406DE4();
  v39 = *(_QWORD *)(v1 - 8);
  v40 = v1;
  MEMORY[0x1E0C80A78](v1);
  v41 = (char *)v38 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1DC089DA4(0, &qword_1EDB42808, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB8210], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v47 = (char *)v38 - v5;
  v6 = sub_1DC406DB4();
  v42 = *(_QWORD *)(v6 - 8);
  v43 = v6;
  MEMORY[0x1E0C80A78](v6);
  v46 = (char *)v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = sub_1DC40439C();
  v8 = *(_QWORD *)(v48 - 8);
  v9 = MEMORY[0x1E0C80A78](v48);
  v45 = (char *)v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v38 - v11;
  sub_1DC089DA4(0, (unint64_t *)&unk_1EDB29EF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB8200], v3);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)v38 - v14;
  sub_1DC089DA4(0, &qword_1EDB29B38, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB6A80], v3);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)v38 - v17;
  sub_1DC112498(0, &qword_1EDB41278, (uint64_t (*)(void))sub_1DC11EA24, (uint64_t)&type metadata for WatchlistCommandState, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB8348]);
  MEMORY[0x1E0C80A78](v19);
  sub_1DC089DA4(0, (unint64_t *)&qword_1EDB28DE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF0D0], v3);
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)v38 - v21;
  sub_1DC132688(0, (unint64_t *)&unk_1EDB42950, &qword_1EDB42920, MEMORY[0x1E0DB6FA8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_1DC40C740;
  if (qword_1EDB2AA88 != -1)
    swift_once();
  v24 = sub_1DC4010E4();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v22, 1, 1, v24);
  LOWORD(v49) = 1;
  v50 = 0;
  sub_1DC11EA24();
  swift_retain();
  sub_1DC404B64();
  sub_1DC4041BC();
  v25 = sub_1DC4041D4();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v18, 0, 1, v25);
  v26 = sub_1DC404B10();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v15, 1, 1, v26);
  v27 = *(void (**)(char *, _QWORD, uint64_t))(v8 + 104);
  v27(v12, *MEMORY[0x1E0DB6FB0], v48);
  v28 = sub_1DC406B8C();
  v29 = MEMORY[0x1E0DBC598];
  *(_QWORD *)(v23 + 56) = v28;
  *(_QWORD *)(v23 + 64) = v29;
  __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v23 + 32));
  sub_1DC406B68();
  if (qword_1EDB2AA40 != -1)
    swift_once();
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v31 = (void *)objc_opt_self();
  swift_retain();
  v32 = objc_msgSend(v31, sel_bundleForClass_, ObjCClassFromMetadata);
  v38[1] = sub_1DC3FFC80();

  (*(void (**)(char *, _QWORD, uint64_t))(v42 + 104))(v46, *MEMORY[0x1E0DBC8B8], v43);
  v27(v45, *MEMORY[0x1E0DB6FB8], v48);
  v33 = v47;
  sub_1DC404B1C();
  v34 = sub_1DC404B28();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v33, 0, 1, v34);
  __swift_project_boxed_opaque_existential_1(v44, v44[3]);
  type metadata accessor for WatchlistMembershipMenuGroupOptionProvider();
  result = sub_1DC4025FC();
  if (result)
  {
    v49 = result;
    (*(void (**)(char *, _QWORD, uint64_t))(v39 + 104))(v41, *MEMORY[0x1E0DBC8F0], v40);
    v36 = sub_1DC406DF0();
    v37 = MEMORY[0x1E0DBC910];
    *(_QWORD *)(v23 + 96) = v36;
    *(_QWORD *)(v23 + 104) = v37;
    __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v23 + 72));
    sub_1DC080808(&qword_1EDB42870, (uint64_t (*)(uint64_t))type metadata accessor for WatchlistMembershipMenuGroupOptionProvider, (uint64_t)&unk_1DC40F07C);
    sub_1DC406DD8();
    return v23;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC18BFB8()
{
  uint64_t ObjCClassFromMetadata;
  id v1;
  uint64_t v2;

  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v2 = sub_1DC3FFC80();

  return v2;
}

uint64_t sub_1DC18C130(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t (*v27)(uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(_QWORD *);
  uint64_t v35;
  uint64_t v36;
  uint64_t ObjCClassFromMetadata;
  void *v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  _QWORD *v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  id v51;
  id v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(char *, uint64_t, uint64_t);
  uint64_t v59;
  char *v60;
  char *v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t *v68;
  uint64_t v69;
  uint64_t v70;
  id v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  id v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t *v80;
  uint64_t v81;
  uint64_t result;
  uint64_t *v83;
  _QWORD *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  void (*v89)(char *);
  uint64_t v90;
  _QWORD *v91;
  uint64_t v92;
  void (*v93)(_QWORD *, uint64_t, uint64_t);
  char *v94;
  char *v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  void (*v103)(_QWORD *, uint64_t, uint64_t);
  uint64_t v104;
  void (*v105)(char *, uint64_t, uint64_t);
  uint64_t v106;
  id v107;
  char *v108;
  void (*v109)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v110;
  char *v111;
  id v112;
  uint64_t v113;
  id v114;
  uint64_t v115;
  id v116;
  uint64_t v117;
  id v118;
  uint64_t v119;
  id v120;
  char *v121;
  char *v122;
  _QWORD *v123;
  uint64_t v124;
  unint64_t v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  char *v130;
  unint64_t v131;
  unint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  void *v136;
  uint64_t v137;
  void *v138;
  id v139;
  id v140;
  char *v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  unint64_t v147;
  _QWORD *v148;
  id v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  __int128 v155;
  uint64_t *v156;
  uint64_t v157;
  _QWORD *v158;
  char *v159;
  char *v160;
  char *v161;
  _QWORD *v162;
  char *v163;
  uint64_t v164;
  unsigned int v165;
  __int128 v166;
  void (*v167)(char *);
  void (*v168)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  id v173;
  uint64_t v174;
  void (*v175)(_QWORD *);
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  void (*v179)(char *, uint64_t, uint64_t, uint64_t);
  __int128 v180;
  char v181;

  v148 = a3;
  v158 = a2;
  *(_QWORD *)&v155 = a1;
  v3 = sub_1DC406DF0();
  v4 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DBC918];
  v157 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  v6 = MEMORY[0x1E0C80A78](v3);
  v142 = (char *)&v141 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v141 = (char *)&v141 - v8;
  v9 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1DC089DA4(0, &qword_1EDB42808, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB8210], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v10);
  v156 = (uint64_t *)((char *)&v141 - v11);
  v154 = sub_1DC40439C();
  v153 = *(_QWORD *)(v154 - 8);
  MEMORY[0x1E0C80A78](v154);
  v161 = (char *)&v141 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC190E08();
  MEMORY[0x1E0C80A78](v13);
  v152 = (char *)&v141 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v176 = sub_1DC406DB4();
  v15 = *(_QWORD *)(v176 - 8);
  MEMORY[0x1E0C80A78](v176);
  v163 = (char *)&v141 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC089DA4(0, (unint64_t *)&unk_1EDB29EF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB8200], v9);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v141 - v18;
  sub_1DC089DA4(0, &qword_1EDB29B38, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB6A80], v9);
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v141 - v21;
  v23 = sub_1DC406DE4();
  v24 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  v26 = (char *)&v141 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
  sub_1DC089DA4(0, &qword_1EDB42960, v4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v28 = *(_QWORD *)(v5 + 72);
  v143 = v5;
  v29 = *(unsigned __int8 *)(v5 + 80);
  v30 = (v29 + 32) & ~v29;
  v171 = v28;
  v145 = v31;
  v144 = v29 | 7;
  v32 = swift_allocObject();
  *(_OWORD *)(v32 + 16) = xmmword_1DC411E30;
  v147 = v32;
  v146 = v30;
  v172 = v32 + v30;
  v33 = *MEMORY[0x1E0DBC900];
  v34 = *(void (**)(_QWORD *))(v24 + 104);
  v162 = v26;
  v170 = v23;
  v175 = v34;
  ((void (*)(char *, uint64_t, uint64_t))v34)(v26, v33, v23);
  sub_1DC132688(0, (unint64_t *)&unk_1EDB42950, &qword_1EDB42920, MEMORY[0x1E0DB6FA8], v27);
  v164 = v35;
  v36 = swift_allocObject();
  v166 = xmmword_1DC40DC10;
  *(_OWORD *)(v36 + 16) = xmmword_1DC40DC10;
  if (qword_1EDB2A9F8 != -1)
    swift_once();
  LOBYTE(v180) = 1;
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v174 = ObjCClassFromMetadata;
  v38 = (void *)objc_opt_self();
  v173 = v38;
  swift_retain();
  v39 = objc_msgSend(v38, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1DC3FFC80();

  sub_1DC4041BC();
  v40 = sub_1DC4041D4();
  v168 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56);
  v169 = v40;
  v168(v22, 0, 1, v40);
  v177 = sub_1DC404B10();
  v179 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v177 - 8) + 56);
  v179(v19, 1, 1, v177);
  v178 = sub_1DC406B8C();
  v41 = MEMORY[0x1E0DBC598];
  *(_QWORD *)(v36 + 56) = v178;
  *(_QWORD *)(v36 + 64) = v41;
  __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v36 + 32));
  v42 = v19;
  sub_1DC406B50();
  v165 = *MEMORY[0x1E0DBC8B0];
  v167 = *(void (**)(char *))(v15 + 104);
  v43 = v163;
  v167(v163);
  v44 = v172;
  v45 = v162;
  sub_1DC406DC0();
  v150 = v44 + v171;
  v46 = (void *)*MEMORY[0x1E0DC5168];
  *v45 = *MEMORY[0x1E0DC5168];
  LODWORD(v151) = *MEMORY[0x1E0DBC8F8];
  v175(v45);
  v47 = swift_allocObject();
  *(_OWORD *)(v47 + 16) = v166;
  v149 = v46;
  sub_1DC406ACC();
  LOBYTE(v180) = 1;
  v181 = 0;
  sub_1DC404B64();
  sub_1DC4041BC();
  v159 = v22;
  v168(v22, 0, 1, v169);
  v160 = v42;
  v179(v42, 1, 1, v177);
  (*(void (**)(char *, _QWORD, uint64_t))(v153 + 104))(v161, *MEMORY[0x1E0DB6FB0], v154);
  *(_QWORD *)(v47 + 56) = v178;
  *(_QWORD *)(v47 + 64) = MEMORY[0x1E0DBC598];
  __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v47 + 32));
  sub_1DC406B68();
  v48 = v165;
  ((void (*)(char *, _QWORD, uint64_t))v167)(v43, v165, v176);
  sub_1DC406DC0();
  v161 = (char *)(2 * v171);
  v154 = v172 + 2 * v171;
  v49 = v149;
  *v45 = v149;
  ((void (*)(_QWORD *, _QWORD, uint64_t))v175)(v45, v151, v170);
  v50 = swift_allocObject();
  *(_OWORD *)(v50 + 16) = v166;
  sub_1DC406AE4();
  v51 = v49;
  sub_1DC406994();
  LOBYTE(v180) = 1;
  v52 = objc_msgSend(v173, sel_bundleForClass_, v174);
  sub_1DC3FFC80();

  v53 = v159;
  sub_1DC4041BC();
  v168(v53, 0, 1, v169);
  v54 = v160;
  v179(v160, 1, 1, v177);
  *(_QWORD *)(v50 + 56) = v178;
  *(_QWORD *)(v50 + 64) = MEMORY[0x1E0DBC598];
  __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v50 + 32));
  sub_1DC406B50();
  v55 = v48;
  v56 = v48;
  v57 = v176;
  v58 = (void (*)(char *, uint64_t, uint64_t))v167;
  ((void (*)(char *, uint64_t, uint64_t))v167)(v43, v56, v176);
  sub_1DC406DC0();
  sub_1DC18DA84((_QWORD *)v155);
  LODWORD(v161) = *MEMORY[0x1E0DBC8F0];
  v175(v45);
  v58(v43, v55, v57);
  sub_1DC406DC0();
  v59 = swift_allocObject();
  v155 = xmmword_1DC40FA70;
  *(_OWORD *)(v59 + 16) = xmmword_1DC40FA70;
  v60 = v54;
  v61 = v53;
  if (qword_1EDB2AAA0 != -1)
    swift_once();
  v181 = 1;
  swift_retain();
  v62 = objc_msgSend(v173, sel_bundleForClass_, v174);
  v63 = sub_1DC3FFC80();
  v65 = v64;

  *(_QWORD *)&v180 = v63;
  *((_QWORD *)&v180 + 1) = v65;
  sub_1DC408BCC();
  sub_1DC408A4C();
  sub_1DC4041C8();
  v67 = v168;
  v66 = v169;
  v168(v61, 0, 1, v169);
  v179(v54, 1, 1, v177);
  *(_QWORD *)(v59 + 56) = v178;
  *(_QWORD *)(v59 + 64) = MEMORY[0x1E0DBC598];
  __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v59 + 32));
  sub_1DC406B50();
  v68 = (uint64_t *)(v59 + 72);
  v69 = v59;
  v70 = v66;
  if (qword_1EDB2AA48 != -1)
    swift_once();
  v181 = 1;
  swift_retain();
  v71 = objc_msgSend(v173, sel_bundleForClass_, v174);
  v72 = sub_1DC3FFC80();
  v74 = v73;

  *(_QWORD *)&v180 = v72;
  *((_QWORD *)&v180 + 1) = v74;
  sub_1DC408BCC();
  sub_1DC408A4C();
  sub_1DC4041C8();
  v67(v61, 0, 1, v70);
  v179(v60, 1, 1, v177);
  *(_QWORD *)(v69 + 96) = v178;
  v154 = v69;
  *(_QWORD *)(v69 + 104) = MEMORY[0x1E0DBC598];
  __swift_allocate_boxed_opaque_existential_1(v68);
  sub_1DC406B50();
  if (qword_1EDB2AA78 != -1)
    swift_once();
  v153 = qword_1EDB5DE38;
  swift_retain();
  v75 = objc_msgSend(v173, sel_bundleForClass_, v174);
  v76 = sub_1DC3FFC80();
  v78 = v77;

  *(_QWORD *)&v180 = v76;
  *((_QWORD *)&v180 + 1) = v78;
  v152 = (char *)sub_1DC408BCC();
  v151 = v79;
  v80 = v156;
  sub_1DC404B1C();
  v81 = sub_1DC404B28();
  (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v81 - 8) + 56))(v80, 0, 1, v81);
  __swift_project_boxed_opaque_existential_1(v158, v158[3]);
  type metadata accessor for GoToWatchlistMenuGroupOptionProvider();
  result = sub_1DC4025FC();
  if (result)
  {
    v150 = 4 * v171;
    v149 = (id)(v172 + 4 * v171);
    v83 = (uint64_t *)v154;
    *(_QWORD *)&v180 = result;
    v84 = v162;
    v85 = v161;
    v86 = v170;
    ((void (*)(_QWORD *, _QWORD, uint64_t))v175)(v162, v161, v170);
    v87 = v163;
    v88 = v176;
    v89 = v167;
    ((void (*)(char *, _QWORD, uint64_t))v167)(v163, v165, v176);
    v90 = MEMORY[0x1E0DBC910];
    v83[17] = v157;
    v83[18] = v90;
    __swift_allocate_boxed_opaque_existential_1(v83 + 14);
    sub_1DC080808(&qword_1EDB42828, (uint64_t (*)(uint64_t))type metadata accessor for GoToWatchlistMenuGroupOptionProvider, (uint64_t)&unk_1DC415798);
    v91 = v84;
    sub_1DC406DCC();
    v92 = v86;
    v93 = (void (*)(_QWORD *, uint64_t, uint64_t))v175;
    ((void (*)(_QWORD *, uint64_t, uint64_t))v175)(v84, v85, v86);
    v94 = v87;
    v95 = v87;
    v96 = v165;
    ((void (*)(char *, _QWORD, uint64_t))v89)(v95, v165, v88);
    v97 = v94;
    sub_1DC406DC0();
    v98 = v171;
    v99 = v172;
    v154 = v172 + v150 + v171;
    v156 = (uint64_t *)sub_1DC18DF64();
    v100 = v85;
    v101 = v85;
    v102 = v92;
    v93(v91, v100, v92);
    v103 = v93;
    v104 = v176;
    v105 = (void (*)(char *, uint64_t, uint64_t))v167;
    ((void (*)(char *, uint64_t, uint64_t))v167)(v97, v96, v176);
    sub_1DC406DC0();
    v156 = (uint64_t *)(v99 + 6 * v98);
    sub_1DC18E244(v158);
    v103(v91, v101, v102);
    v105(v97, v96, v104);
    sub_1DC406DC0();
    v172 = v172 - v98 + 8 * v98;
    v106 = swift_allocObject();
    *(_OWORD *)(v106 + 16) = v155;
    sub_1DC40694C();
    *(_QWORD *)&v180 = 0;
    v107 = objc_msgSend(v173, sel_bundleForClass_, v174);
    sub_1DC3FFC80();

    v108 = v159;
    sub_1DC4041BC();
    v109 = v168;
    v110 = v169;
    v168(v108, 0, 1, v169);
    v111 = v160;
    v179(v160, 1, 1, v177);
    *(_QWORD *)(v106 + 56) = v178;
    *(_QWORD *)(v106 + 64) = MEMORY[0x1E0DBC598];
    __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v106 + 32));
    sub_1DC406B50();
    v156 = (uint64_t *)(v106 + 72);
    v158 = (_QWORD *)sub_1DC406934();
    *(_QWORD *)&v180 = 0;
    v112 = v173;
    v113 = v174;
    v114 = objc_msgSend(v173, sel_bundleForClass_, v174);
    *(_QWORD *)&v155 = sub_1DC3FFC80();
    v154 = v115;

    sub_1DC4041BC();
    v109(v108, 0, 1, v110);
    sub_1DC40691C();
    v116 = objc_msgSend(v112, sel_bundleForClass_, v113);
    sub_1DC3FFC80();

    sub_1DC404B04();
    v117 = v177;
    v179(v111, 0, 1, v177);
    *(_QWORD *)(v106 + 96) = v178;
    *(_QWORD *)(v106 + 104) = MEMORY[0x1E0DBC598];
    __swift_allocate_boxed_opaque_existential_1(v156);
    sub_1DC406B50();
    v156 = (uint64_t *)(v106 + 112);
    v158 = (_QWORD *)sub_1DC406940();
    *(_QWORD *)&v180 = 0;
    v118 = objc_msgSend(v112, sel_bundleForClass_, v113);
    *(_QWORD *)&v155 = sub_1DC3FFC80();
    v154 = v119;

    sub_1DC4041BC();
    v168(v108, 0, 1, v169);
    sub_1DC406928();
    v120 = objc_msgSend(v112, sel_bundleForClass_, v113);
    sub_1DC3FFC80();

    v121 = v108;
    sub_1DC404B04();
    v179(v111, 0, 1, v117);
    *(_QWORD *)(v106 + 136) = v178;
    *(_QWORD *)(v106 + 144) = MEMORY[0x1E0DBC598];
    v122 = v163;
    __swift_allocate_boxed_opaque_existential_1(v156);
    sub_1DC406B50();
    ((void (*)(_QWORD *, _QWORD, uint64_t))v175)(v162, v161, v170);
    ((void (*)(char *, _QWORD, uint64_t))v167)(v122, v165, v176);
    sub_1DC406DC0();
    v123 = v148;
    __swift_project_boxed_opaque_existential_1(v148, v148[3]);
    if ((sub_1DC4009B8() & 1) != 0)
    {
      v124 = swift_allocObject();
      *(_OWORD *)(v124 + 16) = v166;
      v125 = v147;
      v126 = v146;
      if (qword_1EDB2A9F0 != -1)
        swift_once();
      v181 = 1;
      sub_1DC0824D4((uint64_t)v123, (uint64_t)&v180);
      v127 = swift_allocObject();
      sub_1DC097DD0(&v180, v127 + 16);
      v168(v121, 1, 1, v169);
      v179(v111, 1, 1, v177);
      *(_QWORD *)(v124 + 56) = v178;
      *(_QWORD *)(v124 + 64) = MEMORY[0x1E0DBC598];
      __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v124 + 32));
      swift_retain();
      sub_1DC406B44();
      ((void (*)(_QWORD *, _QWORD, uint64_t))v175)(v162, v161, v170);
      ((void (*)(char *, _QWORD, uint64_t))v167)(v163, v165, v176);
      v128 = v141;
      sub_1DC406DC0();
      v129 = v143;
      v130 = v142;
      (*(void (**)(char *, char *, uint64_t))(v143 + 16))(v142, v128, v157);
      v132 = *(_QWORD *)(v125 + 16);
      v131 = *(_QWORD *)(v125 + 24);
      if (v132 >= v131 >> 1)
        v125 = sub_1DC1668CC(v131 > 1, v132 + 1, 1, v125);
      v133 = v171;
      *(_QWORD *)(v125 + 16) = v132 + 1;
      v134 = v157;
      (*(void (**)(unint64_t, char *, uint64_t))(v129 + 32))(v125 + v126 + v132 * v133, v130, v157);
      (*(void (**)(char *, uint64_t))(v129 + 8))(v128, v134);
    }
    v135 = swift_allocObject();
    *(_OWORD *)(v135 + 16) = v166;
    v136 = (void *)*MEMORY[0x1E0DC5180];
    sub_1DC089DA4(0, &qword_1EDB42968, (uint64_t (*)(uint64_t))type metadata accessor for Identifier, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v137 = swift_allocObject();
    *(_OWORD *)(v137 + 16) = v166;
    v138 = (void *)*MEMORY[0x1E0DC50F8];
    *(_QWORD *)(v137 + 32) = *MEMORY[0x1E0DC50F8];
    v139 = v136;
    v140 = v138;
    sub_1DC406DFC();
    return v135;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC18D998()
{
  uint64_t ObjCClassFromMetadata;
  id v1;
  uint64_t v2;

  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v2 = sub_1DC3FFC80();

  return v2;
}

_QWORD *sub_1DC18DA84(_QWORD *a1)
{
  uint64_t (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  _QWORD *v16;
  uint64_t ObjCClassFromMetadata;
  id v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t *boxed_opaque_existential_1;
  id v24;
  char *v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t *v28;
  void (*v30)(char *, uint64_t);
  void (*v31)(uint64_t *, char *, uint64_t);
  void (*v32)(char *, uint64_t, uint64_t, uint64_t);
  void (*v33)(char *, _QWORD, uint64_t, uint64_t);
  id v34;
  uint64_t v35;
  char *v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;

  v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1DC089DA4(0, (unint64_t *)&unk_1EDB29EF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB8200], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v30 - v4;
  sub_1DC089DA4(0, &qword_1EDB29B38, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB6A80], v2);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v30 - v7;
  v9 = sub_1DC406B8C();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v30 - v14;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  if ((sub_1DC400C1C() & 1) != 0)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  v36 = v13;
  sub_1DC406AA8();
  LOBYTE(v37) = 2;
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v34 = (id)objc_opt_self();
  v35 = ObjCClassFromMetadata;
  v18 = objc_msgSend(v34, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1DC3FFC80();

  sub_1DC408A4C();
  sub_1DC4041C8();
  v19 = sub_1DC4041D4();
  v33 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56);
  v33(v8, 0, 1, v19);
  v20 = sub_1DC404B10();
  v32 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56);
  v32(v5, 1, 1, v20);
  sub_1DC406B50();
  v16 = sub_1DC1668B0(0, 1, 1, MEMORY[0x1E0DEE9D8]);
  v22 = v16[2];
  v21 = v16[3];
  if (v22 >= v21 >> 1)
    v16 = sub_1DC1668B0((_QWORD *)(v21 > 1), v22 + 1, 1, v16);
  v38 = v9;
  v39 = MEMORY[0x1E0DBC598];
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v37);
  v31 = *(void (**)(uint64_t *, char *, uint64_t))(v10 + 16);
  v31(boxed_opaque_existential_1, v15, v9);
  v16[2] = v22 + 1;
  sub_1DC097DD0(&v37, (uint64_t)&v16[5 * v22 + 4]);
  v30 = *(void (**)(char *, uint64_t))(v10 + 8);
  v30(v15, v9);
  sub_1DC406AB4();
  LOBYTE(v37) = 2;
  v24 = objc_msgSend(v34, sel_bundleForClass_, v35);
  sub_1DC3FFC80();

  sub_1DC408A4C();
  sub_1DC4041C8();
  v33(v8, 0, 1, v19);
  v32(v5, 1, 1, v20);
  v25 = v36;
  sub_1DC406B50();
  v27 = v16[2];
  v26 = v16[3];
  if (v27 >= v26 >> 1)
    v16 = sub_1DC1668B0((_QWORD *)(v26 > 1), v27 + 1, 1, v16);
  v38 = v9;
  v39 = MEMORY[0x1E0DBC598];
  v28 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v37);
  v31(v28, v25, v9);
  v16[2] = v27 + 1;
  sub_1DC097DD0(&v37, (uint64_t)&v16[5 * v27 + 4]);
  v30(v25, v9);
  return v16;
}

uint64_t sub_1DC18DF44()
{
  return sub_1DC40121C();
}

uint64_t sub_1DC18DF64()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t ObjCClassFromMetadata;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v20;
  char v21;

  v0 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1DC089DA4(0, (unint64_t *)&unk_1EDB29EF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB8200], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v20 - v2;
  sub_1DC089DA4(0, &qword_1EDB29B38, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB6A80], v0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v20 - v5;
  v7 = sub_1DC40439C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC132688(0, (unint64_t *)&unk_1EDB42950, &qword_1EDB42920, MEMORY[0x1E0DB6FA8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1DC40DC10;
  if (qword_1EDB2A9E0 != -1)
    swift_once();
  v20 = (uint64_t *)(v11 + 32);
  v21 = 1;
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v13 = (void *)objc_opt_self();
  swift_retain();
  v14 = objc_msgSend(v13, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1DC3FFC80();

  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E0DB6FB8], v7);
  v15 = sub_1DC4041D4();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v6, 1, 1, v15);
  v16 = sub_1DC404B10();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v3, 1, 1, v16);
  v17 = sub_1DC406B8C();
  v18 = MEMORY[0x1E0DBC598];
  *(_QWORD *)(v11 + 56) = v17;
  *(_QWORD *)(v11 + 64) = v18;
  __swift_allocate_boxed_opaque_existential_1(v20);
  sub_1DC406B74();
  return v11;
}

uint64_t sub_1DC18E244(_QWORD *a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t ObjCClassFromMetadata;
  id v29;
  uint64_t v30;
  unsigned int v31;
  void (*v32)(_QWORD);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t result;
  void (*v38)(_QWORD);
  uint64_t v39;
  _BYTE *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(uint64_t *, uint64_t, uint64_t);
  uint64_t v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  _BYTE *v52;
  _QWORD *v53;
  uint64_t v54;
  void (*v55)(uint64_t *, _QWORD, uint64_t);
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _BYTE v60[4];
  unsigned int v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  unsigned int v65;
  id v66;
  uint64_t v67;
  _BYTE *v68;
  uint64_t v69;
  uint64_t *v70;
  uint64_t v71;
  unsigned int v72;
  uint64_t v73;
  void (*v74)(_QWORD);
  uint64_t v75;
  _BYTE *v76;
  _BYTE *v77;
  _BYTE *v78;
  void (*v79)(uint64_t *, uint64_t, uint64_t, uint64_t);
  _BYTE *v80;
  void (*v81)(_BYTE *, uint64_t, uint64_t);
  uint64_t *v82;
  uint64_t v83;
  _BYTE *v84;
  uint64_t *v85;
  uint64_t v86;
  _QWORD *v87;
  void (*v88)(_BYTE *, uint64_t, _QWORD);
  __int128 v89;
  uint64_t v90;

  v87 = a1;
  v86 = sub_1DC406DE4();
  v74 = *(void (**)(_QWORD))(v86 - 8);
  MEMORY[0x1E0C80A78](v86);
  v2 = (uint64_t *)&v60[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1DC089DA4(0, &qword_1EDB42808, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB8210], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = (uint64_t *)&v60[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = MEMORY[0x1E0C80A78](v4);
  v82 = (uint64_t *)&v60[-v8];
  MEMORY[0x1E0C80A78](v7);
  v85 = (uint64_t *)&v60[-v9];
  v10 = sub_1DC40439C();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v77 = &v60[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = MEMORY[0x1E0C80A78](v12);
  v80 = &v60[-v15];
  MEMORY[0x1E0C80A78](v14);
  v84 = &v60[-v16];
  v17 = sub_1DC406DB4();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = MEMORY[0x1E0C80A78](v17);
  v76 = &v60[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v21 = MEMORY[0x1E0C80A78](v19);
  v78 = &v60[-v22];
  MEMORY[0x1E0C80A78](v21);
  v24 = &v60[-v23];
  sub_1DC132688(0, (unint64_t *)&unk_1EDB42950, &qword_1EDB42920, MEMORY[0x1E0DB6FA8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v26 = v25;
  v27 = swift_allocObject();
  v89 = xmmword_1DC40C740;
  v75 = v27;
  *(_OWORD *)(v27 + 16) = xmmword_1DC40C740;
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v66 = (id)objc_opt_self();
  v67 = ObjCClassFromMetadata;
  v29 = objc_msgSend(v66, sel_bundleForClass_, ObjCClassFromMetadata);
  v64 = sub_1DC3FFC80();
  v63 = v30;

  v31 = *MEMORY[0x1E0DBC8B8];
  v32 = *(void (**)(_QWORD))(v18 + 104);
  v68 = v24;
  v65 = v31;
  v88 = (void (*)(_BYTE *, uint64_t, _QWORD))v32;
  v32(v24);
  v69 = v26;
  v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = v89;
  if (qword_1EDB2AA68 != -1)
    swift_once();
  *(_QWORD *)&v89 = v17;
  v70 = v6;
  v34 = qword_1EDB5DF88;
  v35 = *MEMORY[0x1E0DB6FB8];
  v81 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v11 + 104);
  v81(v84, v35, v10);
  v36 = sub_1DC404B28();
  v79 = *(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56);
  v79(v85, 1, 1, v36);
  __swift_project_boxed_opaque_existential_1(v87, v87[3]);
  type metadata accessor for SortWatchlistMenuGroupOptionProvider();
  v83 = v10;
  v71 = v34;
  swift_retain();
  result = sub_1DC4025FC();
  if (!result)
  {
    __break(1u);
    goto LABEL_10;
  }
  v90 = result;
  v38 = (void (*)(_QWORD))*((_QWORD *)v74 + 13);
  v72 = *MEMORY[0x1E0DBC8F0];
  v74 = v38;
  v38(v2);
  v39 = *MEMORY[0x1E0DBC8B0];
  v40 = v78;
  v88(v78, v39, v89);
  v41 = sub_1DC406DF0();
  v42 = MEMORY[0x1E0DBC910];
  v73 = v41;
  *(_QWORD *)(v33 + 56) = v41;
  *(_QWORD *)(v33 + 64) = v42;
  __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v33 + 32));
  sub_1DC080808(&qword_1EDB42840, (uint64_t (*)(uint64_t))type metadata accessor for SortWatchlistMenuGroupOptionProvider, (uint64_t)&unk_1DC419108);
  sub_1DC406DD8();
  v43 = qword_1EDB5DF88;
  LODWORD(v85) = v35;
  v81(v80, v35, v83);
  v84 = (_BYTE *)v36;
  v79(v82, 1, 1, v36);
  __swift_project_boxed_opaque_existential_1(v87, v87[3]);
  type metadata accessor for OrderWatchlistMenuGroupOptionProvider();
  v71 = v43;
  swift_retain();
  result = sub_1DC4025FC();
  if (!result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v44 = v75;
  v62 = (uint64_t *)(v75 + 32);
  v90 = result;
  v45 = v72;
  v46 = v86;
  v47 = (void (*)(_BYTE *, uint64_t, uint64_t))v74;
  ((void (*)(uint64_t *, _QWORD, uint64_t))v74)(v2, v72, v86);
  v61 = v39;
  v88(v40, v39, v89);
  v48 = v73;
  *(_QWORD *)(v33 + 96) = v73;
  *(_QWORD *)(v33 + 104) = MEMORY[0x1E0DBC910];
  __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v33 + 72));
  sub_1DC080808(&qword_1EDB42858, (uint64_t (*)(uint64_t))type metadata accessor for OrderWatchlistMenuGroupOptionProvider, (uint64_t)&unk_1DC416F08);
  sub_1DC406DD8();
  v47(v2, v45, v46);
  *(_QWORD *)(v44 + 56) = v48;
  *(_QWORD *)(v44 + 64) = MEMORY[0x1E0DBC910];
  __swift_allocate_boxed_opaque_existential_1(v62);
  v82 = v2;
  sub_1DC406DC0();
  v49 = objc_msgSend(v66, sel_bundleForClass_, v67);
  v80 = (_BYTE *)sub_1DC3FFC80();
  v71 = v50;

  v88(v76, v65, v89);
  v51 = swift_allocObject();
  *(_OWORD *)(v51 + 16) = xmmword_1DC40DC10;
  v52 = v77;
  if (qword_1EDB2AA50 != -1)
    swift_once();
  v53 = (_QWORD *)qword_1EDB5DF78;
  v81(v52, v85, v83);
  v79(v70, 1, 1, (uint64_t)v84);
  __swift_project_boxed_opaque_existential_1(v87, v87[3]);
  type metadata accessor for ChangeWatchlistDisplayMenuGroupOptionProvider();
  v87 = v53;
  swift_retain();
  result = sub_1DC4025FC();
  if (result)
  {
    v55 = (void (*)(_BYTE *, _QWORD, uint64_t))v74;
    v54 = v75;
    v85 = (uint64_t *)(v75 + 72);
    v90 = result;
    v56 = v82;
    v57 = v45;
    v58 = v86;
    ((void (*)(uint64_t *, uint64_t, uint64_t))v74)(v82, v57, v86);
    v88(v78, v61, v89);
    v59 = v73;
    *(_QWORD *)(v51 + 56) = v73;
    *(_QWORD *)(v51 + 64) = MEMORY[0x1E0DBC910];
    __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v51 + 32));
    sub_1DC080808(&qword_1EDB42880, (uint64_t (*)(uint64_t))type metadata accessor for ChangeWatchlistDisplayMenuGroupOptionProvider, (uint64_t)&unk_1DC422220);
    sub_1DC406DD8();
    v55(v56, v72, v58);
    *(_QWORD *)(v54 + 96) = v59;
    *(_QWORD *)(v54 + 104) = MEMORY[0x1E0DBC910];
    __swift_allocate_boxed_opaque_existential_1(v85);
    sub_1DC406DC0();
    return v54;
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1DC18EB6C(uint64_t a1)
{
  return sub_1DC18EC3C(a1, (void (*)(_QWORD))type metadata accessor for SortWatchlistCommandContext, MEMORY[0x1E0DAE8C8]);
}

uint64_t sub_1DC18EB80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v6;

  v0 = sub_1DC400940();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for SortWatchlistCommandContext(0);
  sub_1DC40094C();
  v4 = sub_1DC40091C();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

uint64_t sub_1DC18EC28(uint64_t a1)
{
  return sub_1DC18EC3C(a1, (void (*)(_QWORD))type metadata accessor for ChangeWatchlistDisplayContext, MEMORY[0x1E0DAE870]);
}

uint64_t sub_1DC18EC3C(uint64_t a1, void (*a2)(_QWORD), uint64_t (*a3)(void))
{
  a2(0);
  return a3();
}

uint64_t sub_1DC18EC70(uint64_t a1, _QWORD *a2)
{
  uint64_t ObjCClassFromMetadata;
  id v3;
  uint64_t v4;

  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1DC4009A0();
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v3 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v4 = sub_1DC3FFC80();

  return v4;
}

uint64_t sub_1DC18ED80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t ObjCClassFromMetadata;
  void *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t *v34;
  uint64_t *v35;
  void (*v36)(char *, uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  char v43;

  v0 = sub_1DC406DB4();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v34 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1DC089DA4(0, (unint64_t *)&unk_1EDB29EF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB8200], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v34 - v6;
  sub_1DC089DA4(0, &qword_1EDB29B38, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB6A80], v4);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v34 - v9;
  v11 = sub_1DC406DE4();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!objc_msgSend((id)objc_opt_self(), sel_isInternalBuild))
    return MEMORY[0x1E0DEE9D8];
  v39 = v7;
  v40 = v1;
  v41 = v0;
  v15 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
  sub_1DC089DA4(0, &qword_1EDB42960, (uint64_t (*)(uint64_t))MEMORY[0x1E0DBC918], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v37 = sub_1DC406DF0();
  v16 = *(unsigned __int8 *)(*(_QWORD *)(v37 - 8) + 80);
  v17 = (v16 + 32) & ~v16;
  v18 = swift_allocObject();
  v42 = xmmword_1DC40DC10;
  *(_OWORD *)(v18 + 16) = xmmword_1DC40DC10;
  v38 = v18 + v17;
  sub_1DC132688(0, (unint64_t *)&unk_1EDB42950, &qword_1EDB42920, MEMORY[0x1E0DB6FA8], v15);
  v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = v42;
  v35 = (uint64_t *)(v19 + 32);
  v20 = *MEMORY[0x1E0DBC900];
  v36 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 104);
  v36(v14, v20, v11);
  v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = v42;
  v34 = (uint64_t *)(v21 + 32);
  *(_QWORD *)&v42 = v11;
  if (qword_1EDB2AA08 != -1)
    swift_once();
  v43 = 1;
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v23 = (void *)objc_opt_self();
  swift_retain();
  v24 = objc_msgSend(v23, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1DC3FFC80();

  sub_1DC4041BC();
  v25 = sub_1DC4041D4();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v10, 0, 1, v25);
  v26 = sub_1DC404B10();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v39, 1, 1, v26);
  v27 = sub_1DC406B8C();
  v28 = MEMORY[0x1E0DBC598];
  *(_QWORD *)(v21 + 56) = v27;
  *(_QWORD *)(v21 + 64) = v28;
  __swift_allocate_boxed_opaque_existential_1(v34);
  sub_1DC406B50();
  v29 = *MEMORY[0x1E0DBC8B0];
  v30 = v41;
  v31 = *(void (**)(char *, uint64_t, uint64_t))(v40 + 104);
  v31(v3, v29, v41);
  v32 = MEMORY[0x1E0DBC910];
  *(_QWORD *)(v19 + 56) = v37;
  *(_QWORD *)(v19 + 64) = v32;
  __swift_allocate_boxed_opaque_existential_1(v35);
  sub_1DC406DC0();
  v36(v14, *MEMORY[0x1E0DBC8F0], v42);
  v31(v3, v29, v30);
  sub_1DC406DC0();
  return v18;
}

uint64_t sub_1DC18F224@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t result;
  id v9;
  uint64_t v10;
  uint64_t v11;

  sub_1DC089DA4(0, &qword_1EDB427D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DBC168], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v11 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v7 = sub_1DC406760();
  sub_1DC4025D8();
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v6, 1, v7);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    v9 = objc_allocWithZone((Class)sub_1DC4041E0());
    result = sub_1DC4041EC();
    v10 = MEMORY[0x1E0DB6A88];
    *a2 = result;
    a2[1] = v10;
  }
  return result;
}

uint64_t sub_1DC18F328@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for ShareDynamicMenuItemProvider();
  result = sub_1DC4025FC();
  if (result)
  {
    v4 = result;
    v5 = type metadata accessor for ShareMenuItemManager();
    swift_allocObject();
    v6 = sub_1DC21FE38(v4);
    a2[3] = v5;
    result = sub_1DC080808(&qword_1EDB41350, (uint64_t (*)(uint64_t))type metadata accessor for ShareMenuItemManager, (uint64_t)&unk_1DC41A5B8);
    a2[4] = result;
    *a2 = v6;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC18F3D8(uint64_t a1, _QWORD *a2)
{
  __int128 v3;
  uint64_t v4;
  _QWORD v5[4];

  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1DC096268(0, (unint64_t *)&unk_1EDB295C0);
  sub_1DC402608();
  if (!v4)
    return sub_1DC190D90((uint64_t)&v3);
  sub_1DC097DD0(&v3, (uint64_t)v5);
  __swift_project_boxed_opaque_existential_1(v5, v5[3]);
  sub_1DC080808((unint64_t *)&unk_1EDB41358, (uint64_t (*)(uint64_t))type metadata accessor for ShareMenuItemManager, (uint64_t)&unk_1DC41A550);
  sub_1DC402B48();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v3);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
}

uint64_t sub_1DC18F4C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  void (*v5)(char *, uint64_t, uint64_t);
  void (*v6)(char *, uint64_t);
  uint64_t v8;

  v0 = sub_1DC402C50();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for WatchlistMembershipMenuGroupOptionProvider();
  sub_1DC402B30();
  v4 = *MEMORY[0x1E0DB4A18];
  v5 = *(void (**)(char *, uint64_t, uint64_t))(v1 + 104);
  v5(v3, v4, v0);
  sub_1DC4024A0();
  swift_release();
  swift_release();
  v6 = *(void (**)(char *, uint64_t))(v1 + 8);
  v6(v3, v0);
  type metadata accessor for GoToWatchlistMenuGroupOptionProvider();
  sub_1DC402B30();
  v5(v3, v4, v0);
  sub_1DC4024A0();
  swift_release();
  swift_release();
  v6(v3, v0);
  type metadata accessor for SortWatchlistMenuGroupOptionProvider();
  sub_1DC402B30();
  v5(v3, v4, v0);
  sub_1DC4024A0();
  swift_release();
  swift_release();
  v6(v3, v0);
  type metadata accessor for OrderWatchlistMenuGroupOptionProvider();
  sub_1DC402B30();
  v5(v3, v4, v0);
  sub_1DC4024A0();
  swift_release();
  swift_release();
  v6(v3, v0);
  type metadata accessor for ChangeWatchlistDisplayMenuGroupOptionProvider();
  sub_1DC402B30();
  v5(v3, v4, v0);
  sub_1DC4024A0();
  swift_release();
  swift_release();
  v6(v3, v0);
  type metadata accessor for ShareDynamicMenuItemProvider();
  sub_1DC402B30();
  v5(v3, v4, v0);
  sub_1DC4024A0();
  swift_release();
  swift_release();
  return ((uint64_t (*)(char *, uint64_t))v6)(v3, v0);
}

_QWORD *sub_1DC18F76C(_QWORD *a1)
{
  _QWORD *result;
  _QWORD v3[5];
  uint64_t v4;
  uint64_t v5;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, (unint64_t *)&qword_1EDB29EE0);
  result = (_QWORD *)sub_1DC402608();
  if (v4)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1DC096268(0, (unint64_t *)&unk_1EDB28C50);
    result = (_QWORD *)sub_1DC402608();
    if (v3[3])
    {
      type metadata accessor for WatchlistMembershipMenuGroupOptionProvider();
      swift_allocObject();
      return sub_1DC156C70(v4, v5, v3);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

_QWORD *sub_1DC18F868(_QWORD *a1)
{
  _QWORD *result;
  _QWORD v2[5];

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, (unint64_t *)&unk_1EDB28C50);
  result = (_QWORD *)sub_1DC402608();
  if (v2[3])
  {
    type metadata accessor for GoToWatchlistMenuGroupOptionProvider();
    swift_allocObject();
    return sub_1DC1CDADC(v2);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC18F8FC(_QWORD *a1)
{
  return sub_1DC18F924(a1, (void (*)(_QWORD))type metadata accessor for SortWatchlistMenuGroupOptionProvider, (uint64_t (*)(uint64_t, uint64_t, _BYTE *))sub_1DC20ED24);
}

uint64_t sub_1DC18F910(_QWORD *a1)
{
  return sub_1DC18F924(a1, (void (*)(_QWORD))type metadata accessor for OrderWatchlistMenuGroupOptionProvider, (uint64_t (*)(uint64_t, uint64_t, _BYTE *))sub_1DC1E9874);
}

uint64_t sub_1DC18F924(_QWORD *a1, void (*a2)(_QWORD), uint64_t (*a3)(uint64_t, uint64_t, _BYTE *))
{
  uint64_t result;
  uint64_t v7;
  _BYTE v8[24];
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, (unint64_t *)&qword_1EDB29EE0);
  result = sub_1DC402608();
  if (v10)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1DC096268(0, (unint64_t *)&unk_1EDB28C50);
    result = sub_1DC402608();
    if (v9)
    {
      a2(0);
      swift_allocObject();
      v7 = a3(v10, v11, v8);
      swift_unknownObjectRelease();
      return v7;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1DC18FA40(_QWORD *a1)
{
  return sub_1DC18F924(a1, (void (*)(_QWORD))type metadata accessor for ChangeWatchlistDisplayMenuGroupOptionProvider, (uint64_t (*)(uint64_t, uint64_t, _BYTE *))sub_1DC2AB244);
}

uint64_t sub_1DC18FA54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v0 = sub_1DC406B8C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EDB2AAB8 != -1)
    swift_once();
  v4 = __swift_project_value_buffer(v0, (uint64_t)qword_1EDB5DE48);
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v4, v0);
  type metadata accessor for ShareDynamicMenuItemProvider();
  v5 = swift_allocObject();
  (*(void (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5 + OBJC_IVAR____TtC8StocksUI28ShareDynamicMenuItemProvider_menuItem, v3, v0);
  return v5;
}

uint64_t sub_1DC18FB38(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_1DC0F0774(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = &v3[v8 + 4];
  if (a1 + 32 < (unint64_t)&v9[v2] && (unint64_t)v9 < a1 + 32 + 8 * v2)
    goto LABEL_24;
  memcpy(v9, (const void *)(a1 + 32), 8 * v2);
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_1DC40988C();
  __break(1u);
  return result;
}

uint64_t sub_1DC18FC7C(uint64_t a1)
{
  unint64_t *v1;
  unint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t);
  uint64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t *v24;
  _QWORD *v25;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(_QWORD *, _QWORD);
  char *v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  int64_t v48;
  int64_t v49;
  uint64_t v50;
  unint64_t v51;
  int64_t v52;
  uint64_t v53;
  int64_t v54;
  unint64_t v55;
  char *v56;
  unint64_t v57;
  uint64_t v58;
  void (*v59)(_QWORD *, _QWORD);
  char *v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  int v64;
  uint64_t v65;
  void (*v66)(unint64_t, char *, uint64_t);
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  void (*v72)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v73;
  void (*v74)(unint64_t, char *, uint64_t);
  int64_t v75;
  int64_t v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  void (*v80)(char *, uint64_t, uint64_t);
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD v89[5];

  v2 = v1;
  sub_1DC0F8190();
  v84 = v4;
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v82 = (char *)&v70 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC089DA4(0, &qword_1EDB29BF0, v7, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v8);
  v83 = (uint64_t)&v70 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v79 = (uint64_t)&v70 - v11;
  MEMORY[0x1E0C80A78](v12);
  v85 = (uint64_t)&v70 - v13;
  sub_1DC132790();
  v15 = v14;
  v16 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v86 = (char *)&v70 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC08CBF0(0, &qword_1F034D3B8, (uint64_t (*)(uint64_t))sub_1DC132790, sub_1DC190F28, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEC8F8]);
  v77 = v18;
  MEMORY[0x1E0C80A78](v18);
  v88 = (uint64_t)&v70 - v19;
  v20 = (void (*)(uint64_t, uint64_t))sub_1DC080808((unint64_t *)&unk_1F034D3C8, (uint64_t (*)(uint64_t))sub_1DC132790, MEMORY[0x1E0DB3DB8]);
  v21 = sub_1DC408C14();
  v22 = *v1;
  v23 = *(_QWORD *)(*v2 + 16);
  v24 = (unint64_t *)(v23 + v21);
  if (__OFADD__(v23, v21))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v25 = (_QWORD *)v21;
  v87 = v15;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v2 = v22;
  if (isUniquelyReferenced_nonNull_native && (v27 = *(_QWORD *)(v22 + 24) >> 1, v27 >= (uint64_t)v24))
  {
    v24 = v2;
  }
  else
  {
    if (v23 <= (uint64_t)v24)
      v28 = (int64_t)v24;
    else
      v28 = v23;
    v22 = sub_1DC1668E0(isUniquelyReferenced_nonNull_native, v28, 1, v22);
    v24 = v2;
    *v2 = v22;
    v27 = *(_QWORD *)(v22 + 24) >> 1;
  }
  v29 = *(_QWORD *)(v5 + 72);
  v30 = v27 - *(_QWORD *)(v22 + 16);
  v78 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v15 = v87;
  v80 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
  v81 = v29;
  v80(v86, a1, v87);
  v31 = sub_1DC408C08();
  v20 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
  v20(a1, v15);
  if (v31 < (uint64_t)v25)
    goto LABEL_16;
  if (v31 >= 1)
  {
    v32 = *(_QWORD *)(*v24 + 16);
    v33 = __OFADD__(v32, v31);
    v34 = v32 + v31;
    if (v33)
    {
      __break(1u);
      goto LABEL_20;
    }
    *(_QWORD *)(*v24 + 16) = v34;
  }
  if (v31 != v30)
    return sub_1DC190F44(v88);
LABEL_17:
  v76 = *(_QWORD *)(*v24 + 16);
  v30 = v88;
  v25 = (_QWORD *)(v88 + *(int *)(v77 + 36));
  v36 = *v25;
  v37 = sub_1DC190F28();
  sub_1DC408ED8();
  v73 = v37;
  if (v36 != v89[0])
  {
LABEL_20:
    v43 = (void (*)(_QWORD *, _QWORD))sub_1DC408EF0();
    v39 = v84;
    v40 = v85;
    (*(void (**)(uint64_t))(v5 + 16))(v85);
    v43(v89, 0);
    v44 = v86;
    v80(v86, v30, v15);
    sub_1DC408EE4();
    v20((uint64_t)v44, v15);
    v38 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56);
    v41 = v40;
    v42 = 0;
    goto LABEL_21;
  }
  v38 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56);
  v39 = v84;
  v40 = v85;
  v41 = v85;
  v42 = 1;
LABEL_21:
  v72 = v38;
  v38(v41, v42, 1, v39);
  v45 = v79;
  v46 = v83;
  sub_1DC190FA0(v40, v79);
  v77 = *(_QWORD *)(v5 + 48);
  v47 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v77)(v45, 1, v39);
  v48 = v76;
  if (v47 != 1)
  {
    v71 = v25;
    do
    {
      sub_1DC190FFC(v45);
      v50 = *v24;
      v51 = *(_QWORD *)(*v24 + 24);
      v52 = v51 >> 1;
      if ((uint64_t)(v51 >> 1) < v48 + 1)
      {
        v50 = sub_1DC1668E0(v51 > 1, v48 + 1, 1, *v24);
        *v24 = v50;
        v52 = *(_QWORD *)(v50 + 24) >> 1;
      }
      sub_1DC190FA0(v85, v46);
      if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v77)(v46, 1, v84) == 1)
      {
        v46 = v83;
        v53 = v84;
LABEL_30:
        sub_1DC190FFC(v46);
        v49 = v48;
      }
      else
      {
        if (v48 <= v52)
          v54 = v52;
        else
          v54 = v48;
        v74 = *(void (**)(unint64_t, char *, uint64_t))(v5 + 32);
        v75 = v54;
        v55 = v50 + v78;
        v56 = v82;
        v57 = v55 + v81 * v48;
        v46 = v83;
        v53 = v84;
        while (1)
        {
          v65 = v46;
          v66 = v74;
          v74((unint64_t)v56, (char *)v65, v53);
          if (v75 == v48)
            break;
          v76 = v48;
          v67 = v85;
          sub_1DC190FFC(v85);
          v66(v57, v56, v53);
          v68 = *v25;
          v61 = v25;
          v69 = v87;
          sub_1DC408ED8();
          if (v68 == v89[0])
          {
            v62 = v67;
            v63 = 1;
            v53 = v84;
          }
          else
          {
            v58 = v88;
            v59 = (void (*)(_QWORD *, _QWORD))sub_1DC408EF0();
            v53 = v84;
            (*(void (**)(uint64_t))(v5 + 16))(v67);
            v59(v89, 0);
            v60 = v86;
            v80(v86, v58, v69);
            v61 = v71;
            sub_1DC408EE4();
            v20((uint64_t)v60, v69);
            v62 = v67;
            v63 = 0;
          }
          v72(v62, v63, 1, v53);
          v25 = v61;
          v46 = v83;
          sub_1DC190FA0(v67, v83);
          v64 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v77)(v46, 1, v53);
          v56 = v82;
          v57 += v81;
          v48 = v76 + 1;
          v30 = v88;
          if (v64 == 1)
            goto LABEL_30;
        }
        (*(void (**)(char *, uint64_t))(v5 + 8))(v56, v53);
        v49 = v75;
        v48 = v75;
        v46 = v83;
      }
      *(_QWORD *)(*v24 + 16) = v49;
      v45 = v79;
      sub_1DC190FA0(v85, v79);
    }
    while (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v77)(v45, 1, v53) != 1);
  }
  sub_1DC190FFC(v85);
  sub_1DC190F44(v30);
  return sub_1DC190FFC(v45);
}

uint64_t sub_1DC19031C(unint64_t a1)
{
  return sub_1DC113494(a1, (uint64_t (*)(uint64_t, _QWORD, unint64_t))sub_1DC190B84);
}

uint64_t sub_1DC190328(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  int64_t v15;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    v8 = *(_QWORD *)(a1 + 16);
    if (v8)
      goto LABEL_5;
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
  if (v4 <= v5)
    v15 = v4 + v2;
  else
    v15 = v4;
  v3 = sub_1DC166CE8(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
    goto LABEL_18;
LABEL_5:
  v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v10 = (unint64_t)&v3[5 * v9 + 4];
  if (a1 + 32 < v10 + 40 * v8 && v10 < a1 + 32 + 40 * v8)
    goto LABEL_24;
  sub_1DC132688(0, &qword_1EDB2A060, (unint64_t *)&qword_1EDB2A050, MEMORY[0x1E0DB8CD0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v12 = v3[2];
  v13 = __OFADD__(v12, v8);
  v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_1DC40988C();
  __break(1u);
  return result;
}

uint64_t (*sub_1DC1904B8(void (**a1)(id *a1), unint64_t a2, uint64_t a3))()
{
  void (*v6)(id *);

  v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_1DC1905B8(v6, a2, a3);
  return sub_1DC19050C;
}

uint64_t (*sub_1DC190510(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  uint64_t (*v6)();

  v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_1DC19062C(v6, a2, a3);
  return sub_1DC19050C;
}

uint64_t (*sub_1DC190564(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  uint64_t (*v6)();

  v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_1DC1906A0(v6, a2, a3);
  return sub_1DC19050C;
}

void (*sub_1DC1905B8(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  void (*v3)(id *);
  id v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = (id)MEMORY[0x1DF0C9FBC](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(_QWORD *)v3 = v4;
    return destroy for StockChartModelFactoryProviderOptions;
  }
  __break(1u);
  return result;
}

void destroy for StockChartModelFactoryProviderOptions(id *a1)
{

}

uint64_t (*sub_1DC19062C(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t *v3;
  uint64_t v4;

  v3 = (uint64_t *)result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = MEMORY[0x1DF0C9FBC](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = swift_retain();
LABEL_5:
    *v3 = v4;
    return destroy for StockLocation;
  }
  __break(1u);
  return result;
}

uint64_t destroy for StockLocation()
{
  return swift_release();
}

uint64_t (*sub_1DC1906A0(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t (*v3)();
  id v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = (id)MEMORY[0x1DF0C9FBC](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(_QWORD *)v3 = v4;
    return j__s8StocksUI37StockChartModelFactoryProviderOptionsVwxx;
  }
  __break(1u);
  return result;
}

uint64_t sub_1DC19070C(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  uint64_t (*v12)();
  id *v13;
  id v14;
  uint64_t result;
  uint64_t (*v16[4])();

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_1DC409850();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v10 = sub_1DC409850();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1DC190ED4(0, &qword_1F034D3D8, (unint64_t *)&unk_1EDB3FAC0);
        sub_1DC191050(&qword_1F034D3E0, &qword_1F034D3D8, (unint64_t *)&unk_1EDB3FAC0);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          v12 = sub_1DC190564(v16, i, a3);
          v14 = *v13;
          ((void (*)(uint64_t (**)(), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1DC0821D4(0, (unint64_t *)&unk_1EDB3FAC0);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_1DC40988C();
  __break(1u);
  return result;
}

uint64_t sub_1DC190948(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  uint64_t (*v12)();
  id *v13;
  id v14;
  uint64_t result;
  uint64_t (*v16[4])();

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_1DC409850();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v10 = sub_1DC409850();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1DC190ED4(0, &qword_1F034D3A8, (unint64_t *)&qword_1EDB3F9D0);
        sub_1DC191050(&qword_1F034D3B0, &qword_1F034D3A8, (unint64_t *)&qword_1EDB3F9D0);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          v12 = sub_1DC190564(v16, i, a3);
          v14 = *v13;
          ((void (*)(uint64_t (**)(), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3F9D0);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_1DC40988C();
  __break(1u);
  return result;
}

uint64_t sub_1DC190B84(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  uint64_t (*v12)();
  uint64_t *v13;
  uint64_t v14;
  uint64_t result;
  uint64_t (*v16[4])();

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_1DC409850();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v10 = sub_1DC409850();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1DC089DA4(0, &qword_1F034D3E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB77B8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
        sub_1DC191090();
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          v12 = sub_1DC190510(v16, i, a3);
          v14 = *v13;
          swift_retain();
          ((void (*)(uint64_t (**)(), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1DC40463C();
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_1DC40988C();
  __break(1u);
  return result;
}

uint64_t sub_1DC190D90(uint64_t a1)
{
  uint64_t v2;

  sub_1DC132688(0, (unint64_t *)&unk_1F034D380, (unint64_t *)&unk_1EDB295C0, MEMORY[0x1E0DB43D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1DC190DEC(uint64_t a1)
{
  sub_1DC089DA4(a1, (unint64_t *)&unk_1EDB2B070, (uint64_t (*)(uint64_t))sub_1DC112C9C, MEMORY[0x1E0D5E360]);
}

void sub_1DC190E08()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB42930)
  {
    v0 = sub_1DC404B70();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB42930);
  }
}

uint64_t sub_1DC190E64()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocObject();
}

uint64_t sub_1DC190E88(uint64_t a1)
{
  uint64_t v1;

  return sub_1DC18EC70(a1, (_QWORD *)(v1 + 16));
}

unint64_t sub_1DC190E90()
{
  unint64_t result;

  result = qword_1EDB42220;
  if (!qword_1EDB42220)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC41A38C, &type metadata for FeatureControlState);
    atomic_store(result, (unint64_t *)&qword_1EDB42220);
  }
  return result;
}

void sub_1DC190ED4(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    sub_1DC0821D4(255, a3);
    v4 = sub_1DC408D70();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t sub_1DC190F28()
{
  return sub_1DC080808(&qword_1F034D3C0, (uint64_t (*)(uint64_t))sub_1DC132790, MEMORY[0x1E0DB3DC0]);
}

uint64_t sub_1DC190F44(uint64_t a1)
{
  uint64_t v2;

  sub_1DC08CBF0(0, &qword_1F034D3B8, (uint64_t (*)(uint64_t))sub_1DC132790, sub_1DC190F28, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEC8F8]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DC190FA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1DC089DA4(0, &qword_1EDB29BF0, (uint64_t (*)(uint64_t))sub_1DC0F8190, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC190FFC(uint64_t a1)
{
  uint64_t v2;

  sub_1DC089DA4(0, &qword_1EDB29BF0, (uint64_t (*)(uint64_t))sub_1DC0F8190, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DC191050(unint64_t *a1, unint64_t *a2, unint64_t *a3)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    sub_1DC190ED4(255, a2, a3);
    result = MEMORY[0x1DF0CAB8C](MEMORY[0x1E0DEAF50], v5);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1DC191090()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1F034D3F0;
  if (!qword_1F034D3F0)
  {
    sub_1DC089DA4(255, &qword_1F034D3E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB77B8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1DF0CAB8C](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1F034D3F0);
  }
  return result;
}

uint64_t *sub_1DC1910F8(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_1DC176BD8(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v7 = sub_1DC40124C();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t sub_1DC1911C8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = sub_1DC40124C();
  v3 = *(_QWORD *)(v2 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, 1, v2);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  return result;
}

void *sub_1DC191230(void *a1, const void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_1DC40124C();
  v5 = *(_QWORD *)(v4 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(a2, 1, v4))
  {
    sub_1DC176BD8(0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v5 + 16))(a1, a2, v4);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  }
  return a1;
}

void *sub_1DC1912D0(void *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void *, uint64_t, uint64_t);
  int v7;
  int v8;
  uint64_t v9;

  v4 = sub_1DC40124C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
  v7 = v6(a1, 1, v4);
  v8 = v6(a2, 1, v4);
  if (!v7)
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 24))(a1, a2, v4);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v5 + 8))(a1, v4);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    sub_1DC176BD8(0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v5 + 16))(a1, a2, v4);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  return a1;
}

void *sub_1DC1913BC(void *a1, const void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_1DC40124C();
  v5 = *(_QWORD *)(v4 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(a2, 1, v4))
  {
    sub_1DC176BD8(0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v5 + 32))(a1, a2, v4);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  }
  return a1;
}

void *sub_1DC19145C(void *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void *, uint64_t, uint64_t);
  int v7;
  int v8;
  uint64_t v9;

  v4 = sub_1DC40124C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
  v7 = v6(a1, 1, v4);
  v8 = v6(a2, 1, v4);
  if (!v7)
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 40))(a1, a2, v4);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v5 + 8))(a1, v4);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    sub_1DC176BD8(0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v5 + 32))(a1, a2, v4);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  return a1;
}

uint64_t sub_1DC191548()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC191554(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1DC176BD8(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_1DC191590()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC19159C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1DC176BD8(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for WatchlistRenameAlert()
{
  uint64_t result;

  result = qword_1F034D450;
  if (!qword_1F034D450)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1DC191618()
{
  unint64_t v0;

  sub_1DC176BD8(319);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_1DC191680()
{
  uint64_t ObjCClassFromMetadata;
  id v1;
  uint64_t v2;

  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v2 = sub_1DC3FFC80();

  return v2;
}

uint64_t sub_1DC191744()
{
  uint64_t ObjCClassFromMetadata;
  id v1;
  uint64_t v2;

  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v2 = sub_1DC3FFC80();

  return v2;
}

void sub_1DC191808(void *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t ObjCClassFromMetadata;
  void *v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18[2];

  sub_1DC176BD8(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v8 = (void *)objc_opt_self();
  v9 = objc_msgSend(v8, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1DC3FFC80();

  v10 = (void *)sub_1DC408A1C();
  swift_bridgeObjectRelease();
  objc_msgSend(a1, sel_setPlaceholder_, v10);

  v11 = objc_msgSend(v8, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1DC3FFC80();

  v12 = (void *)sub_1DC408A1C();
  swift_bridgeObjectRelease();
  objc_msgSend(a1, sel_setAccessibilityLabel_, v12);

  if (a2)
  {
    v13 = objc_msgSend(v8, sel_bundleForClass_, ObjCClassFromMetadata);
    sub_1DC3FFC80();

    v14 = (void *)sub_1DC408A1C();
    swift_bridgeObjectRelease();
    objc_msgSend(a2, sel_setText_, v14);

  }
  objc_msgSend(a1, sel_setEnablesReturnKeyAutomatically_, 1);
  objc_msgSend(a1, sel_setReturnKeyType_, 9);
  objc_msgSend(a1, sel_setAutocapitalizationType_, 1);
  sub_1DC191CF8(v18[1], (uint64_t)v6);
  v15 = sub_1DC40124C();
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v6, 1, v15) == 1)
  {
    sub_1DC191D3C((uint64_t)v6);
    v17 = 0;
  }
  else
  {
    sub_1DC40121C();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v6, v15);
    v17 = (void *)sub_1DC408A1C();
    swift_bridgeObjectRelease();
  }
  objc_msgSend(a1, sel_setText_, v17);

}

uint64_t sub_1DC191B60()
{
  return sub_1DC191680();
}

uint64_t sub_1DC191B74()
{
  return sub_1DC191744();
}

uint64_t sub_1DC191B88()
{
  uint64_t ObjCClassFromMetadata;
  id v1;
  uint64_t v2;

  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v2 = sub_1DC3FFC80();

  return v2;
}

uint64_t sub_1DC191C3C()
{
  uint64_t ObjCClassFromMetadata;
  id v1;
  uint64_t v2;

  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v2 = sub_1DC3FFC80();

  return v2;
}

uint64_t sub_1DC191CF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1DC176BD8(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC191D3C(uint64_t a1)
{
  uint64_t v2;

  sub_1DC176BD8(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1DC191D78(uint64_t a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1DC191DBC()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v7;

  v3 = qword_1F034AFE8;
  swift_retain();
  if (v3 != -1)
    swift_once();
  swift_retain();
  sub_1DC17769C(v2);
  sub_1DC1922C0();
  sub_1DC4012D0();
  swift_release();
  if (v7 != 1)
    return 0;
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 40));
  sub_1DC401C6C();
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = v2;
  *(_QWORD *)(v4 + 24) = v0;
  sub_1DC17766C(v2);
  swift_retain();
  v5 = sub_1DC4025E4();
  swift_release();
  if (!v5)
  {
    __break(1u);
    return 0;
  }
  return v5;
}

void sub_1DC191FA0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = sub_1DC401A8C();
  MEMORY[0x1E0C80A78](v3);
  __asm { BR              X10 }
}

uint64_t sub_1DC192020()
{
  unint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v7 = qword_1F034AFE8;
  swift_retain();
  if (v7 != -1)
    swift_once();
  swift_retain();
  sub_1DC17769C(v0);
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  sub_1DC132DB8();
  sub_1DC40250C();
  swift_release();
  if (v4)
  {
    __swift_project_boxed_opaque_existential_1(v1, v1[3]);
    sub_1DC4018AC();
    swift_retain();
    sub_1DC40250C();
    swift_release();
  }
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  *(_QWORD *)(v6 - 120) = v0;
  sub_1DC17766C(v0);
  sub_1DC177338((uint64_t *)(v6 - 120), v3);
  sub_1DC402518();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v2);
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  *(_QWORD *)(v6 - 128) = v0;
  sub_1DC365970((uint64_t *)(v6 - 120));
  sub_1DC192338();
  sub_1DC402518();
  __swift_destroy_boxed_opaque_existential_1(v6 - 120);
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  *(_QWORD *)(v6 - 120) = v0;
  return sub_1DC402518();
}

uint64_t type metadata accessor for TipsModule()
{
  return objc_opt_self();
}

unint64_t sub_1DC1922C0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1F034D488;
  if (!qword_1F034D488)
  {
    v1 = type metadata accessor for TipsModule();
    result = MEMORY[0x1DF0CAB8C](&unk_1DC411F14, v1);
    atomic_store(result, (unint64_t *)&qword_1F034D488);
  }
  return result;
}

uint64_t sub_1DC192304()
{
  uint64_t v0;

  sub_1DC17769C(*(_QWORD *)(v0 + 16));
  swift_release();
  return swift_deallocObject();
}

void sub_1DC192330(uint64_t a1)
{
  uint64_t v1;

  sub_1DC191FA0(a1, *(_QWORD *)(v1 + 16));
}

unint64_t sub_1DC192338()
{
  unint64_t result;

  result = qword_1EDB29320;
  if (!qword_1EDB29320)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EDB29320);
  }
  return result;
}

uint64_t sub_1DC19238C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  char *v7;
  int v8;
  unsigned int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  BOOL v13;
  BOOL v14;
  uint64_t v16;

  v3 = sub_1DC407E10();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v4 + 16))(v7, v1, v3, v5);
  v8 = (*(uint64_t (**)(char *, uint64_t))(v4 + 88))(v7, v3);
  if (v8 == *MEMORY[0x1E0D5D4B8] || v8 == *MEMORY[0x1E0D5D4C0])
    goto LABEL_3;
  if (v8 == *MEMORY[0x1E0D5D4B0])
  {
    v9 = (unsigned int *)MEMORY[0x1E0DAD800];
    goto LABEL_4;
  }
  v13 = v8 == *MEMORY[0x1E0D5D4D0] || v8 == *MEMORY[0x1E0D5D488];
  v14 = v13 || v8 == *MEMORY[0x1E0D5D4A0];
  if (v14 || v8 == *MEMORY[0x1E0D5D4A8])
    goto LABEL_3;
  if (v8 == *MEMORY[0x1E0D5D498])
  {
    v9 = (unsigned int *)MEMORY[0x1E0DAD7F8];
    goto LABEL_4;
  }
  if (v8 == *MEMORY[0x1E0D5D4C8])
  {
LABEL_3:
    v9 = (unsigned int *)MEMORY[0x1E0DAD808];
LABEL_4:
    v10 = *v9;
    v11 = sub_1DC40367C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(a1, v10, v11);
  }
  result = sub_1DC409838();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for StockChartGridFactory()
{
  return objc_opt_self();
}

unint64_t sub_1DC192578(uint64_t a1, uint64_t a2, double a3, double a4, double a5)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t, uint64_t);
  double v29;
  uint64_t v30;
  void (*v31)(double *, _QWORD, uint64_t);
  uint64_t v32;
  uint64_t *v33;
  void (*v34)(uint64_t *, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(uint64_t, uint64_t, double);
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  void (*v50)(unint64_t, _BYTE *, uint64_t);
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  _BYTE *v58;
  uint64_t v59;
  void (*v60)(_BYTE *, uint64_t);
  _BYTE v62[12];
  unsigned int v63;
  __int128 v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(uint64_t *, uint64_t, uint64_t);
  void (*v68)(_QWORD *, _QWORD, uint64_t);
  _BYTE *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t *boxed_opaque_existential_1;
  uint64_t *v75;
  _BYTE *v76;
  uint64_t v77;
  _BYTE *v78;
  uint64_t v79;
  uint64_t v80;
  _BYTE *v81;
  _QWORD v82[3];
  uint64_t v83;
  uint64_t v84;
  uint64_t v85[6];

  v6 = v5;
  v73 = a1;
  v11 = MEMORY[0x1E0DEB070];
  sub_1DC083594(0, &qword_1EDB3F570, MEMORY[0x1E0DEB070], MEMORY[0x1E0DB28B8]);
  v77 = v12;
  v70 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v75 = (uint64_t *)&v62[-v13];
  v14 = sub_1DC40892C();
  MEMORY[0x1E0C80A78](v14);
  v76 = &v62[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1DC083594(0, &qword_1EDB3F560, v11, MEMORY[0x1E0DB28A0]);
  v80 = v16;
  v72 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v18 = (double *)&v62[-v17];
  sub_1DC083594(0, &qword_1EDB3F540, v11, MEMORY[0x1E0DB2830]);
  v71 = v19;
  v79 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v69 = &v62[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v21);
  v78 = &v62[-v22];
  MEMORY[0x1E0C80A78](v23);
  v81 = &v62[-v24];
  v26 = v6[5];
  v25 = v6[6];
  __swift_project_boxed_opaque_existential_1(v6 + 2, v26);
  v27 = *(_QWORD *)(v25 + 8);
  v28 = *(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 8);
  v85[3] = v26;
  v85[4] = v25;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v85);
  v28(a2, v26, v27);
  v29 = a4 - a3;
  sub_1DC0824D4((uint64_t)(v6 + 7), (uint64_t)v82);
  __swift_project_boxed_opaque_existential_1(v82, v83);
  v30 = sub_1DC1D1098(v29 > 4.0, 2);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v82);
  *v18 = v29 * 0.25;
  v31 = *(void (**)(double *, _QWORD, uint64_t))(v72 + 104);
  v31(v18, *MEMORY[0x1E0DB2898], v80);
  (*(void (**)(uint64_t, uint64_t, double))(v25 + 80))(v26, v25, a5);
  sub_1DC083594(0, &qword_1EDB3F4A8, MEMORY[0x1E0DEB070], MEMORY[0x1E0DB2620]);
  v83 = type metadata accessor for StockChartPriceLabelFormatter();
  v84 = sub_1DC080808(qword_1EDB395A8, (uint64_t (*)(uint64_t))type metadata accessor for StockChartPriceLabelFormatter, (uint64_t)&unk_1DC427180);
  v82[0] = v30;
  v72 = v30;
  swift_retain();
  v32 = sub_1DC408728();
  v33 = v75;
  *v75 = v32;
  v34 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v70 + 104);
  v35 = v77;
  v34(v33, *MEMORY[0x1E0DB28B0], v77);
  v36 = MEMORY[0x1E0DEB070];
  sub_1DC4088C0();
  sub_1DC083594(0, &qword_1EDB40078, v36, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v65 = v37;
  v38 = swift_allocObject();
  v64 = xmmword_1DC40DC10;
  *(_OWORD *)(v38 + 16) = xmmword_1DC40DC10;
  *(double *)(v38 + 32) = a3;
  *(_QWORD *)v18 = v38;
  v63 = *MEMORY[0x1E0DB2890];
  v68 = (void (*)(_QWORD *, _QWORD, uint64_t))v31;
  ((void (*)(double *))v31)(v18);
  v39 = *(void (**)(uint64_t, uint64_t, double))(v25 + 96);
  v70 = v26;
  v66 = v25;
  v40 = v25;
  v41 = v18;
  v39(v26, v40, a5);
  v42 = *MEMORY[0x1E0DB28A8];
  v67 = v34;
  v34(v33, v42, v35);
  v43 = v78;
  sub_1DC4088C0();
  sub_1DC193168();
  v44 = *(_QWORD *)(v79 + 72);
  v45 = v79;
  v46 = (*(unsigned __int8 *)(v79 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v79 + 80);
  v47 = v46 + 2 * v44;
  v48 = swift_allocObject();
  *(_OWORD *)(v48 + 16) = xmmword_1DC40C740;
  v49 = v48 + v46;
  v50 = *(void (**)(unint64_t, _BYTE *, uint64_t))(v45 + 16);
  v51 = v71;
  v50(v49, v81, v71);
  v52 = v49 + v44;
  v53 = v51;
  v50(v52, v43, v51);
  v54 = sub_1DC400EE0();
  if ((v55 & 1) != 0)
  {
    v59 = v79;
  }
  else
  {
    v56 = v54;
    v57 = swift_allocObject();
    *(_OWORD *)(v57 + 16) = v64;
    *(_QWORD *)(v57 + 32) = v56;
    *v41 = v57;
    v68(v41, v63, v80);
    (*(void (**)(uint64_t, double))(v66 + 104))(v70, a5);
    v67(v75, v42, v77);
    v58 = v69;
    sub_1DC4088C0();
    v48 = sub_1DC1664C8(1, 3, 1, v48);
    *(_QWORD *)(v48 + 16) = 3;
    v59 = v79;
    (*(void (**)(unint64_t, _BYTE *, uint64_t))(v79 + 32))(v48 + v47, v58, v53);
  }
  swift_release();
  v60 = *(void (**)(_BYTE *, uint64_t))(v59 + 8);
  v60(v78, v53);
  v60(v81, v53);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v85);
  return v48;
}

unint64_t sub_1DC192B9C(char *a1, uint64_t a2, double a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t, uint64_t);
  uint64_t *boxed_opaque_existential_1;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t *v31;
  void (*v32)(_QWORD);
  void (*v33)(uint64_t, uint64_t, double);
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  void (*v43)(unint64_t, char *, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(uint64_t, uint64_t, double);
  char *v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v57;
  void (*v58)(uint64_t *, uint64_t, uint64_t);
  unsigned int v59;
  void (*v60)(uint64_t *, _QWORD, uint64_t);
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t *v65;
  char *v66;
  char *v67;
  unint64_t v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79[6];

  v4 = v3;
  v73 = a1;
  v7 = MEMORY[0x1E0DEA968];
  sub_1DC083594(0, &qword_1EDB3F568, MEMORY[0x1E0DEA968], MEMORY[0x1E0DB28B8]);
  v72 = v8;
  v69 = *(uint64_t **)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (uint64_t *)((char *)&v57 - v9);
  v11 = sub_1DC40892C();
  MEMORY[0x1E0C80A78](v11);
  v66 = (char *)&v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC083594(0, &qword_1EDB3F558, v7, MEMORY[0x1E0DB28A0]);
  v70 = *(_QWORD *)(v13 - 8);
  v71 = v13;
  MEMORY[0x1E0C80A78](v13);
  v65 = (uint64_t *)((char *)&v57 - v14);
  sub_1DC083594(0, &qword_1EDB3F538, v7, MEMORY[0x1E0DB2830]);
  v16 = v15;
  v75 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v64 = (char *)&v57 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v67 = (char *)&v57 - v19;
  MEMORY[0x1E0C80A78](v20);
  v74 = (char *)&v57 - v21;
  v22 = v4[5];
  v23 = v4[6];
  __swift_project_boxed_opaque_existential_1(v4 + 2, v22);
  v24 = *(_QWORD *)(v23 + 8);
  v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 8);
  v79[3] = v22;
  v79[4] = v23;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v79);
  v25(a2, v22, v24);
  v27 = v16;
  __swift_project_boxed_opaque_existential_1(v4 + 7, v4[10]);
  v28 = type metadata accessor for StockChartDescriptor();
  v29 = v73;
  v30 = sub_1DC1D1208((uint64_t)v73, (uint64_t)&v73[*(int *)(v28 + 24)]);
  v68 = v28;
  v31 = v65;
  *v65 = *(_QWORD *)&v29[*(int *)(v28 + 32)];
  v32 = *(void (**)(_QWORD))(v70 + 104);
  v59 = *MEMORY[0x1E0DB2890];
  v60 = (void (*)(uint64_t *, _QWORD, uint64_t))v32;
  v32(v31);
  v33 = *(void (**)(uint64_t, uint64_t, double))(v23 + 80);
  swift_bridgeObjectRetain();
  v61 = boxed_opaque_existential_1;
  v63 = v22;
  v62 = v23;
  v33(v22, v23, a3);
  sub_1DC083594(0, &qword_1EDB3F4A0, MEMORY[0x1E0DEA968], MEMORY[0x1E0DB2620]);
  v77 = type metadata accessor for StockChartCategoryLabelFormatter();
  v78 = sub_1DC080808(&qword_1EDB3AF80, (uint64_t (*)(uint64_t))type metadata accessor for StockChartCategoryLabelFormatter, (uint64_t)&unk_1DC4207D0);
  v76 = v30;
  v70 = v30;
  swift_retain();
  *v10 = sub_1DC40871C();
  v34 = *MEMORY[0x1E0DB28B0];
  v58 = (void (*)(uint64_t *, uint64_t, uint64_t))v69[13];
  v58(v10, v34, v72);
  v35 = v74;
  v69 = v10;
  v36 = v67;
  sub_1DC4088C0();
  v37 = v27;
  (*(void (**)(char *, char *, uint64_t))(v75 + 16))(v36, v35, v27);
  v38 = sub_1DC16672C(0, 1, 1, MEMORY[0x1E0DEE9D8]);
  v40 = *(_QWORD *)(v38 + 16);
  v39 = *(_QWORD *)(v38 + 24);
  if (v40 >= v39 >> 1)
    v38 = sub_1DC16672C(v39 > 1, v40 + 1, 1, v38);
  *(_QWORD *)(v38 + 16) = v40 + 1;
  v41 = (*(unsigned __int8 *)(v75 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v75 + 80);
  v42 = *(_QWORD *)(v75 + 72);
  v43 = *(void (**)(unint64_t, char *, uint64_t))(v75 + 32);
  v43(v38 + v41 + v42 * v40, v36, v37);
  v44 = *(_QWORD *)&v73[*(int *)(v68 + 28)];
  v45 = *(_QWORD *)(v44 + 16);
  if (v45)
  {
    v68 = v41;
    v73 = (char *)v43;
    v46 = v44 + 16 * v45;
    v48 = *(_QWORD *)(v46 + 16);
    v47 = *(_QWORD *)(v46 + 24);
    sub_1DC083594(0, (unint64_t *)&qword_1EDB40040, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v49 = swift_allocObject();
    *(_OWORD *)(v49 + 16) = xmmword_1DC40DC10;
    *(_QWORD *)(v49 + 32) = v48;
    *(_QWORD *)(v49 + 40) = v47;
    *v31 = v49;
    v60(v31, v59, v71);
    v50 = v62;
    v51 = *(void (**)(uint64_t, uint64_t, double))(v62 + 88);
    swift_bridgeObjectRetain();
    v51(v63, v50, a3);
    v58(v69, *MEMORY[0x1E0DB28A8], v72);
    v52 = v64;
    sub_1DC4088C0();
    v54 = *(_QWORD *)(v38 + 16);
    v53 = *(_QWORD *)(v38 + 24);
    if (v54 >= v53 >> 1)
      v38 = sub_1DC16672C(v53 > 1, v54 + 1, 1, v38);
    v55 = v68;
    *(_QWORD *)(v38 + 16) = v54 + 1;
    ((void (*)(unint64_t, char *, uint64_t))v73)(v38 + v55 + v54 * v42, v52, v37);
    swift_release();
    (*(void (**)(char *, uint64_t))(v75 + 8))(v74, v37);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v75 + 8))(v74, v37);
    swift_release();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v79);
  return v38;
}

void sub_1DC193168()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB40028)
  {
    sub_1DC083594(255, &qword_1EDB3F540, MEMORY[0x1E0DEB070], MEMORY[0x1E0DB2830]);
    v0 = sub_1DC4099C4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB40028);
  }
}

uint64_t sub_1DC1931D4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  int v17;
  unsigned int *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v2 = v1;
  sub_1DC193414();
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1DC402218();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v26 - v15;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v10 + 16))((char *)&v26 - v15, v2, v9, v14);
  v17 = (*(uint64_t (**)(char *, uint64_t))(v10 + 88))(v16, v9);
  if (v17 == *MEMORY[0x1E0D57CE8])
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v16, v9);
    v18 = (unsigned int *)MEMORY[0x1E0DADF78];
LABEL_5:
    v19 = *v18;
    v20 = sub_1DC403B14();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(a1, v19, v20);
  }
  if (v17 == *MEMORY[0x1E0D57CE0])
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v16, v9);
    v18 = (unsigned int *)MEMORY[0x1E0DADF68];
    goto LABEL_5;
  }
  if (v17 == *MEMORY[0x1E0D57CF0])
  {
    (*(void (**)(char *, uint64_t))(v10 + 96))(v16, v9);
    v22 = swift_projectBox();
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v22, v5);
    v23 = sub_1DC4075AC();
    sub_1DC1931D4(v23);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    return swift_release();
  }
  else
  {
    v24 = *MEMORY[0x1E0DADF70];
    v25 = sub_1DC403B14();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 104))(a1, v24, v25);
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v16, v9);
  }
}

void sub_1DC193414()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F034D490)
  {
    sub_1DC402218();
    sub_1DC193474();
    v0 = sub_1DC4075B8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1F034D490);
  }
}

unint64_t sub_1DC193474()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1F034D498;
  if (!qword_1F034D498)
  {
    v1 = sub_1DC402218();
    result = MEMORY[0x1DF0CAB8C](MEMORY[0x1E0D57D08], v1);
    atomic_store(result, (unint64_t *)&qword_1F034D498);
  }
  return result;
}

uint64_t sub_1DC1934BC(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  int v21;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  void *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unsigned int *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  _OWORD v39[2];
  uint64_t v40;
  _BYTE v41[48];

  v3 = v2;
  v6 = sub_1DC405D88();
  v37 = *(_QWORD *)(v6 - 8);
  v38 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (uint64_t *)((char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v9);
  v36 = (char *)&v35 - v10;
  sub_1DC092F50(0, (unint64_t *)&unk_1EDB29810, (void (*)(uint64_t))MEMORY[0x1E0DAD3C8]);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v35 - v12;
  sub_1DC092F50(0, (unint64_t *)&qword_1EDB2C5F0, (void (*)(uint64_t))type metadata accessor for StocksActivity);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v35 - v15;
  v17 = type metadata accessor for StocksActivity(0);
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v35 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = *a2;
  v41[0] = *a2;
  sub_1DC1938A8(a1, (uint64_t)v16);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
    return sub_1DC092F14((uint64_t)v16, (unint64_t *)&qword_1EDB2C5F0, (void (*)(uint64_t))type metadata accessor for StocksActivity);
  sub_1DC092ED0((uint64_t)v16, (uint64_t)v20, type metadata accessor for StocksActivity);
  v23 = (uint64_t)v20;
  if (v21)
  {
    v24 = (_QWORD *)(v3 + OBJC_IVAR____TtC8StocksUI15StockFeedRouter_sceneProvider);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v3 + OBJC_IVAR____TtC8StocksUI15StockFeedRouter_sceneProvider), *(_QWORD *)(v3 + OBJC_IVAR____TtC8StocksUI15StockFeedRouter_sceneProvider + 24));
    v25 = sub_1DC404B34();
    if (v25)
    {
      v26 = (void *)v25;
      __swift_project_boxed_opaque_existential_1(v24, v24[3]);
      v27 = v26;
      v28 = sub_1DC404B40();
      if (v21 == 1)
      {

        *v8 = v28;
        v32 = (unsigned int *)MEMORY[0x1E0DBAC78];
        v29 = v37;
        v33 = v38;
      }
      else
      {
        v29 = v37;
        if (v21 == 2)
        {

          *v8 = 0;
        }
        else
        {
          *v8 = (uint64_t)v26;
        }
        v8[1] = v28;
        v32 = (unsigned int *)MEMORY[0x1E0DBAC80];
        v33 = v38;
      }
      (*(void (**)(uint64_t *, _QWORD, uint64_t))(v29 + 104))(v8, *v32, v33);
      v34 = v36;
      (*(void (**)(char *, uint64_t *, uint64_t))(v29 + 32))(v36, v8, v33);
      sub_1DC404510();

      (*(void (**)(char *, uint64_t))(v29 + 8))(v34, v33);
    }
  }
  else
  {
    v30 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8StocksUI15StockFeedRouter_tracker);
    v31 = sub_1DC403340();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v13, 1, 1, v31);
    sub_1DC0824D4(v3 + OBJC_IVAR____TtC8StocksUI15StockFeedRouter_contextBuilder, (uint64_t)v41);
    v40 = 0;
    memset(v39, 0, sizeof(v39));
    swift_retain();
    sub_1DC22BAE0((uint64_t)v20, v30, (uint64_t)v13, (uint64_t)v41, 0, 0, (uint64_t)v39);
    swift_release();
    sub_1DC17C7C8((uint64_t)v39, &qword_1EDB29410, (unint64_t *)&unk_1EDB29400);
    sub_1DC17C7C8((uint64_t)v41, &qword_1EDB2ACD0, (unint64_t *)&qword_1EDB2ACC0);
    sub_1DC092F14((uint64_t)v13, (unint64_t *)&unk_1EDB29810, (void (*)(uint64_t))MEMORY[0x1E0DAD3C8]);
    swift_release();
  }
  return sub_1DC0926D8(v23, type metadata accessor for StocksActivity);
}

uint64_t sub_1DC1938A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  v4 = type metadata accessor for StocksActivity.Article(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for StockFeedRouteModel();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC194064(a1, (uint64_t)v9);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1DC1940A8();
    v11 = *(_QWORD *)&v9[*(int *)(v10 + 48)];
    sub_1DC17CCB0();
    v13 = *(int *)(v12 + 48);
    v14 = sub_1DC4010E4();
    v15 = *(_QWORD *)(v14 - 8);
    (*(void (**)(uint64_t, char *, uint64_t))(v15 + 32))(a2, v9, v14);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v15 + 56))(a2, 0, 1, v14);
    *(_QWORD *)(a2 + v13) = v11;
  }
  else
  {
    sub_1DC092ED0((uint64_t)v9, (uint64_t)v6, type metadata accessor for StocksActivity.Article);
    sub_1DC092ED0((uint64_t)v6, a2, type metadata accessor for StocksActivity.Article);
  }
  v16 = type metadata accessor for StocksActivity(0);
  swift_storeEnumTagMultiPayload();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(a2, 0, 1, v16);
}

uint64_t sub_1DC193A40(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE v24[40];
  _QWORD v25[5];
  _BYTE v26[40];

  v3 = type metadata accessor for StockFeedRouteModel();
  MEMORY[0x1E0C80A78](v3);
  v5 = &v24[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = type metadata accessor for StocksActivity(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = &v24[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  MEMORY[0x1E0C80A78](v9);
  v11 = &v24[-v10 - 8];
  sub_1DC194064(a1, (uint64_t)v5);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1DC1940A8();
    v13 = *(_QWORD *)&v5[*(int *)(v12 + 48)];
    sub_1DC17CCB0();
    v15 = *(int *)(v14 + 48);
    v16 = sub_1DC4010E4();
    v17 = *(_QWORD *)(v16 - 8);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v17 + 32))(v8, v5, v16);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v8, 0, 1, v16);
    *(_QWORD *)&v8[v15] = v13;
  }
  else
  {
    sub_1DC092ED0((uint64_t)v5, (uint64_t)v8, type metadata accessor for StocksActivity.Article);
  }
  swift_storeEnumTagMultiPayload();
  sub_1DC092ED0((uint64_t)v8, (uint64_t)v11, type metadata accessor for StocksActivity);
  v18 = *(_QWORD *)(v1 + 80);
  v19 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8StocksUI15StockFeedRouter_tracker);
  sub_1DC0824D4(v1 + OBJC_IVAR____TtC8StocksUI15StockFeedRouter_contextBuilder, (uint64_t)v26);
  v25[4] = v18;
  v25[3] = sub_1DC4018AC();
  v25[0] = v19;
  sub_1DC194128((uint64_t)v26, (uint64_t)v24);
  v20 = swift_allocObject();
  *(_QWORD *)(v20 + 16) = v19;
  sub_1DC1941B8((uint64_t)v24, v20 + 24);
  sub_1DC083C10();
  sub_1DC080808((unint64_t *)&qword_1EDB29CA0, (uint64_t (*)(uint64_t))sub_1DC083C10, MEMORY[0x1E0DB75C0]);
  swift_retain_n();
  swift_retain();
  v21 = sub_1DC406E08();
  swift_release();
  sub_1DC0926D8((uint64_t)v25, (uint64_t (*)(_QWORD))sub_1DC0D11C4);
  sub_1DC17C7C8((uint64_t)v26, &qword_1EDB2ACD0, (unint64_t *)&qword_1EDB2ACC0);
  swift_release();
  sub_1DC0926D8((uint64_t)v11, type metadata accessor for StocksActivity);
  return v21;
}

uint64_t sub_1DC193D10()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t ObjectType;
  void (*v4)(uint64_t, uint64_t);

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v1 = MEMORY[0x1DF0CAD78](result + 24);
    if (v1)
    {
      v2 = *(_QWORD *)(v1 + 40);
      ObjectType = swift_getObjectType();
      v4 = *(void (**)(uint64_t, uint64_t))(v2 + 112);
      swift_retain();
      v4(ObjectType, v2);
      swift_release_n();
      return swift_unknownObjectRelease();
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_1DC193DC0()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t ObjectType;
  void (*v4)(uint64_t, uint64_t);

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v1 = MEMORY[0x1DF0CAD78](result + 24);
    if (v1)
    {
      v2 = *(_QWORD *)(v1 + 40);
      ObjectType = swift_getObjectType();
      v4 = *(void (**)(uint64_t, uint64_t))(v2 + 120);
      swift_retain();
      v4(ObjectType, v2);
      swift_release_n();
      return swift_unknownObjectRelease();
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_1DC193E70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_unknownObjectWeakDestroy();
  sub_1DC148A20(v0 + 24);
  __swift_destroy_boxed_opaque_existential_1(v0 + 40);
  swift_release();
  v1 = v0 + OBJC_IVAR____TtC8StocksUI15StockFeedRouter_stock;
  v2 = sub_1DC4010E4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC8StocksUI15StockFeedRouter_contextBuilder);
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC8StocksUI15StockFeedRouter_baseStyler);
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC8StocksUI15StockFeedRouter_offlineAlertControllerFactory);
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC8StocksUI15StockFeedRouter_channelDataFactory);

  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC8StocksUI15StockFeedRouter_sceneProvider);
  return v0;
}

uint64_t sub_1DC193F44()
{
  sub_1DC193E70();
  return swift_deallocClassInstance();
}

uint64_t sub_1DC193F68()
{
  return type metadata accessor for StockFeedRouter();
}

uint64_t type metadata accessor for StockFeedRouter()
{
  uint64_t result;

  result = qword_1EDB2E4D8;
  if (!qword_1EDB2E4D8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1DC193FAC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1DC4010E4();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1DC194064(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for StockFeedRouteModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1DC1940A8()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1F034D4A0)
  {
    sub_1DC4010E4();
    sub_1DC092F50(255, qword_1F034E4C0, (void (*)(uint64_t))MEMORY[0x1E0DB96A0]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1F034D4A0);
  }
}

uint64_t sub_1DC194128(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1DC0A6204(0, &qword_1EDB2ACD0, (unint64_t *)&qword_1EDB2ACC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC194184()
{
  uint64_t v0;

  swift_release();
  if (*(_QWORD *)(v0 + 48))
    __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  return swift_deallocObject();
}

uint64_t sub_1DC1941B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1DC0A6204(0, &qword_1EDB2ACD0, (unint64_t *)&qword_1EDB2ACC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC194214(_QWORD *a1)
{
  return sub_1DC174FD4(a1);
}

uint64_t type metadata accessor for ArticleStocksFeedService()
{
  return objc_opt_self();
}

uint64_t sub_1DC194240(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DC194258(a1, a2, a3, MEMORY[0x1E0DAEF00]);
}

uint64_t sub_1DC19424C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DC194258(a1, a2, a3, MEMORY[0x1E0DAEEF8]);
}

uint64_t sub_1DC194258(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;

  v7 = *(_QWORD *)(*(_QWORD *)v4 + 40);
  v8 = *(_QWORD *)(*(_QWORD *)v4 + 48);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)v4 + 16), v7);
  return a4(a1, v7, v8);
}

uint64_t *sub_1DC1942B0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v11 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = *(int *)(a3 + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_1DC4010E4();
    v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t sub_1DC19434C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_1DC4010E4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *sub_1DC194394(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(a3 + 20);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_1DC4010E4();
  v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

_QWORD *sub_1DC194404(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1DC4010E4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_OWORD *sub_1DC194480(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_1DC4010E4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_QWORD *sub_1DC1944DC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1DC4010E4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_1DC194548()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC194554(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1DC4010E4();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t sub_1DC1945D0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC1945DC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_1DC4010E4();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t sub_1DC194654(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  int *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30[2];
  __int128 v31[2];
  __int128 v32[2];
  __int128 v33[3];

  v4 = v3;
  v8 = type metadata accessor for AttributionSource();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1DC4008EC();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (int *)type metadata accessor for StockListPrewarmBlueprintModifier();
  MEMORY[0x1E0C80A78](v15);
  v29 = (uint64_t)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v25 - v18;
  v28 = *a1;
  v27 = a1[1];
  v25 = a1[2];
  v26 = a1[3];
  sub_1DC0824D4(v4 + 16, (uint64_t)v33);
  sub_1DC0824D4(v4 + 56, (uint64_t)v32);
  sub_1DC0824D4(v4 + 96, (uint64_t)v31);
  sub_1DC0824D4(v4 + 136, (uint64_t)v30);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a2, v11);
  sub_1DC0990BC(a3, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for AttributionSource);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v4 + 176), *(_QWORD *)(v4 + 200));
  sub_1DC400DCC();
  sub_1DC0824D4(v4 + 216, (uint64_t)&v19[v15[12]]);
  *(_QWORD *)v19 = 0x6D726177657250;
  *((_QWORD *)v19 + 1) = 0xE700000000000000;
  sub_1DC097DD0(v33, (uint64_t)(v19 + 16));
  sub_1DC097DD0(v32, (uint64_t)(v19 + 56));
  sub_1DC097DD0(v31, (uint64_t)(v19 + 96));
  sub_1DC097DD0(v30, (uint64_t)(v19 + 136));
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(&v19[v15[9]], v14, v11);
  sub_1DC195824((uint64_t)v10, (uint64_t)&v19[v15[10]]);
  v20 = &v19[v15[13]];
  v21 = v27;
  *(_QWORD *)v20 = v28;
  *((_QWORD *)v20 + 1) = v21;
  v22 = v26;
  *((_QWORD *)v20 + 2) = v25;
  *((_QWORD *)v20 + 3) = v22;
  sub_1DC0990BC((uint64_t)v19, v29, (uint64_t (*)(_QWORD))type metadata accessor for StockListPrewarmBlueprintModifier);
  sub_1DC131EC8();
  swift_allocObject();
  sub_1DC080808(&qword_1EDB3C168, (uint64_t (*)(uint64_t))type metadata accessor for StockListPrewarmBlueprintModifier, (uint64_t)&unk_1DC412348);
  swift_bridgeObjectRetain();
  v23 = sub_1DC40499C();
  sub_1DC0926D8((uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for StockListPrewarmBlueprintModifier);
  return v23;
}

uint64_t sub_1DC194944(uint64_t a1)
{
  uint64_t v1;
  int *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v3 = (int *)type metadata accessor for StockListWatchlistChangeBlueprintModifier();
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (uint64_t *)((char *)&v14 - v7);
  v10 = (char *)&v14 + *(int *)(v9 + 20) - v7;
  v11 = sub_1DC4004C0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v10, a1, v11);
  sub_1DC0824D4(v1 + 16, (uint64_t)v8 + v3[6]);
  sub_1DC0824D4(v1 + 136, (uint64_t)v8 + v3[8]);
  sub_1DC0824D4(v1 + 56, (uint64_t)v8 + v3[7]);
  sub_1DC0824D4(v1 + 216, (uint64_t)v8 + v3[9]);
  *v8 = 0x73696C6863746157;
  v8[1] = 0xEF65676E61684374;
  sub_1DC0990BC((uint64_t)v8, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for StockListWatchlistChangeBlueprintModifier);
  sub_1DC131EC8();
  swift_allocObject();
  sub_1DC080808(&qword_1EDB42130, (uint64_t (*)(uint64_t))type metadata accessor for StockListWatchlistChangeBlueprintModifier, (uint64_t)&unk_1DC41F958);
  v12 = sub_1DC40499C();
  sub_1DC0926D8((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for StockListWatchlistChangeBlueprintModifier);
  return v12;
}

uint64_t sub_1DC194AC8(uint64_t a1)
{
  uint64_t v1;
  int *updated;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  updated = (int *)type metadata accessor for StockListPriceDataUpdateBlueprintModifier();
  MEMORY[0x1E0C80A78](updated);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (uint64_t *)((char *)&v13 - v7);
  sub_1DC0824D4(v1 + 96, (uint64_t)&v13 - v7 + 16);
  v9 = (char *)v8 + updated[6];
  v10 = sub_1DC400514();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v9, a1, v10);
  sub_1DC0824D4(v1 + 16, (uint64_t)v8 + updated[7]);
  sub_1DC0824D4(v1 + 136, (uint64_t)v8 + updated[8]);
  sub_1DC0824D4(v1 + 216, (uint64_t)v8 + updated[9]);
  *v8 = 0x7461446563697250;
  v8[1] = 0xEF65746164705561;
  sub_1DC0990BC((uint64_t)v8, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for StockListPriceDataUpdateBlueprintModifier);
  sub_1DC131EC8();
  swift_allocObject();
  sub_1DC080808(&qword_1EDB3E608, (uint64_t (*)(uint64_t))type metadata accessor for StockListPriceDataUpdateBlueprintModifier, (uint64_t)&unk_1DC4251F8);
  v11 = sub_1DC40499C();
  sub_1DC0926D8((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for StockListPriceDataUpdateBlueprintModifier);
  return v11;
}

uint64_t sub_1DC194C48(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v20;
  __int128 v21[2];
  __int128 v22[2];
  __int128 v23[2];
  __int128 v24[3];

  v3 = v2;
  v6 = type metadata accessor for AttributionSource();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1DC4008EC();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (int *)type metadata accessor for StockListChangeWatchlistBlueprintModifier();
  MEMORY[0x1E0C80A78](v13);
  v20 = (uint64_t)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v20 - v16;
  sub_1DC0824D4(v3 + 16, (uint64_t)v24);
  sub_1DC0824D4(v3 + 56, (uint64_t)v23);
  sub_1DC0824D4(v3 + 96, (uint64_t)v22);
  sub_1DC0824D4(v3 + 136, (uint64_t)v21);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a1, v9);
  sub_1DC0990BC(a2, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for AttributionSource);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v3 + 176), *(_QWORD *)(v3 + 200));
  sub_1DC400DCC();
  sub_1DC0824D4(v3 + 216, (uint64_t)&v17[v13[12]]);
  *(_QWORD *)v17 = 0x615765676E616843;
  *((_QWORD *)v17 + 1) = 0xEF7473696C686374;
  sub_1DC097DD0(v24, (uint64_t)(v17 + 16));
  sub_1DC097DD0(v23, (uint64_t)(v17 + 56));
  sub_1DC097DD0(v22, (uint64_t)(v17 + 96));
  sub_1DC097DD0(v21, (uint64_t)(v17 + 136));
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&v17[v13[9]], v12, v9);
  sub_1DC195824((uint64_t)v8, (uint64_t)&v17[v13[10]]);
  sub_1DC0990BC((uint64_t)v17, v20, (uint64_t (*)(_QWORD))type metadata accessor for StockListChangeWatchlistBlueprintModifier);
  sub_1DC131EC8();
  swift_allocObject();
  sub_1DC080808(&qword_1EDB3E548, (uint64_t (*)(uint64_t))type metadata accessor for StockListChangeWatchlistBlueprintModifier, (uint64_t)&unk_1DC414328);
  v18 = sub_1DC40499C();
  sub_1DC0926D8((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for StockListChangeWatchlistBlueprintModifier);
  return v18;
}

uint64_t sub_1DC194ED8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  int *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;

  v14 = a1;
  v15 = sub_1DC40124C();
  v2 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (int *)type metadata accessor for StockListEmptyWatchlistBlueprintModifier();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v14 - v9;
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 40));
  sub_1DC400A60();
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 40));
  v11 = sub_1DC400ACC();
  sub_1DC0990BC(v14, (uint64_t)&v10[v5[7]], (uint64_t (*)(_QWORD))type metadata accessor for AttributionSource);
  sub_1DC0824D4(v1 + 216, (uint64_t)&v10[v5[8]]);
  strcpy(v10, "EmptyWatchlist");
  v10[15] = -18;
  (*(void (**)(char *, char *, uint64_t))(v2 + 32))(&v10[v5[5]], v4, v15);
  *(_QWORD *)&v10[v5[6]] = v11;
  sub_1DC0990BC((uint64_t)v10, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for StockListEmptyWatchlistBlueprintModifier);
  sub_1DC131EC8();
  swift_allocObject();
  sub_1DC080808(&qword_1F034D528, (uint64_t (*)(uint64_t))type metadata accessor for StockListEmptyWatchlistBlueprintModifier, (uint64_t)&unk_1DC41F128);
  v12 = sub_1DC40499C();
  sub_1DC0926D8((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for StockListEmptyWatchlistBlueprintModifier);
  return v12;
}

uint64_t sub_1DC1950D0()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  __swift_destroy_boxed_opaque_existential_1(v0 + 136);
  __swift_destroy_boxed_opaque_existential_1(v0 + 176);
  __swift_destroy_boxed_opaque_existential_1(v0 + 216);
  return swift_deallocClassInstance();
}

uint64_t sub_1DC19511C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_1DC194654(a1, a2, a3);
}

uint64_t sub_1DC19513C()
{
  sub_1DC131EC8();
  swift_allocObject();
  sub_1DC1958E0();
  return sub_1DC40499C();
}

uint64_t sub_1DC1951A4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v3 = type metadata accessor for StockListPriceChangeDisplayBlueprintModifier();
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v15 - v7;
  v9 = *v1;
  v11 = (char *)&v15 + *(int *)(v10 + 20) - v7;
  v12 = sub_1DC4008EC();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v11, a1, v12);
  sub_1DC0824D4(v9 + 16, (uint64_t)&v8[*(int *)(v3 + 24)]);
  strcpy(v8, "ChangeDisplay");
  *((_WORD *)v8 + 7) = -4864;
  sub_1DC0990BC((uint64_t)v8, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for StockListPriceChangeDisplayBlueprintModifier);
  sub_1DC131EC8();
  swift_allocObject();
  sub_1DC080808(&qword_1EDB41A70, (uint64_t (*)(uint64_t))type metadata accessor for StockListPriceChangeDisplayBlueprintModifier, (uint64_t)&unk_1DC42F398);
  v13 = sub_1DC40499C();
  sub_1DC0926D8((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for StockListPriceChangeDisplayBlueprintModifier);
  return v13;
}

uint64_t sub_1DC1952FC(uint64_t a1)
{
  return sub_1DC194944(a1);
}

uint64_t sub_1DC19531C(uint64_t a1)
{
  return sub_1DC194AC8(a1);
}

uint64_t sub_1DC19533C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  _QWORD v7[2];
  _QWORD v8[6];
  uint64_t v9;

  v3 = *v1;
  sub_1DC0824D4(v3 + 16, (uint64_t)v8);
  sub_1DC0824D4(v3 + 216, (uint64_t)&v9);
  v7[0] = 0x745365766F6D6552;
  v7[1] = 0xEB000000006B636FLL;
  v8[5] = a1;
  sub_1DC168990((uint64_t)v7, (uint64_t)&v6);
  sub_1DC131EC8();
  swift_allocObject();
  sub_1DC195868();
  swift_retain();
  v4 = sub_1DC40499C();
  sub_1DC1958AC((uint64_t)v7);
  return v4;
}

uint64_t sub_1DC195404(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v15;

  v7 = (int *)type metadata accessor for StockListMoveStockBlueprintModifier();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (uint64_t *)((char *)&v15 - v11);
  sub_1DC0824D4(*v3 + 16, (uint64_t)&v15 - v11 + 16);
  sub_1DC0990BC(a1, (uint64_t)v12 + v7[6], (uint64_t (*)(_QWORD))type metadata accessor for StockViewModel);
  *v12 = 0x636F745365766F4DLL;
  v12[1] = 0xE90000000000006BLL;
  *(_QWORD *)((char *)v12 + v7[7]) = a2;
  *(_QWORD *)((char *)v12 + v7[8]) = a3;
  sub_1DC0990BC((uint64_t)v12, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for StockListMoveStockBlueprintModifier);
  sub_1DC131EC8();
  swift_allocObject();
  sub_1DC080808(&qword_1F034D540, (uint64_t (*)(uint64_t))type metadata accessor for StockListMoveStockBlueprintModifier, (uint64_t)&unk_1DC4192E0);
  swift_retain();
  v13 = sub_1DC40499C();
  sub_1DC0926D8((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for StockListMoveStockBlueprintModifier);
  return v13;
}

uint64_t sub_1DC195564(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v2 = type metadata accessor for StockListNewsAttributionBlueprintModifier();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (uint64_t *)((char *)&v11 - v6);
  sub_1DC0990BC(a1, (uint64_t)&v11 + *(int *)(v8 + 20) - v6, (uint64_t (*)(_QWORD))type metadata accessor for AttributionSource);
  *v7 = 0x72756F537377654ELL;
  v7[1] = 0xEA00000000006563;
  sub_1DC0990BC((uint64_t)v7, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for StockListNewsAttributionBlueprintModifier);
  sub_1DC131EC8();
  swift_allocObject();
  sub_1DC080808(&qword_1F034D538, (uint64_t (*)(uint64_t))type metadata accessor for StockListNewsAttributionBlueprintModifier, (uint64_t)&unk_1DC421D90);
  v9 = sub_1DC40499C();
  sub_1DC0926D8((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for StockListNewsAttributionBlueprintModifier);
  return v9;
}

uint64_t sub_1DC19568C(uint64_t a1, uint64_t a2)
{
  return sub_1DC194C48(a1, a2);
}

uint64_t sub_1DC1956AC(uint64_t a1, uint64_t a2)
{
  uint64_t updated;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  updated = type metadata accessor for StockListWatchlistPickerUpdateBlueprintModifier();
  MEMORY[0x1E0C80A78](updated);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (uint64_t *)((char *)&v15 - v8);
  v11 = (char *)&v15 + *(int *)(v10 + 20) - v8;
  v12 = sub_1DC40124C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v11, a1, v12);
  *v9 = 0xD000000000000015;
  v9[1] = 0x80000001DC437920;
  *(_QWORD *)((char *)v9 + *(int *)(updated + 24)) = a2;
  sub_1DC0990BC((uint64_t)v9, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for StockListWatchlistPickerUpdateBlueprintModifier);
  sub_1DC131EC8();
  swift_allocObject();
  sub_1DC080808(&qword_1F034D530, (uint64_t (*)(uint64_t))type metadata accessor for StockListWatchlistPickerUpdateBlueprintModifier, (uint64_t)&unk_1DC429570);
  swift_bridgeObjectRetain();
  v13 = sub_1DC40499C();
  sub_1DC0926D8((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for StockListWatchlistPickerUpdateBlueprintModifier);
  return v13;
}

uint64_t sub_1DC195804(uint64_t a1)
{
  return sub_1DC194ED8(a1);
}

uint64_t sub_1DC195824(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AttributionSource();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1DC195868()
{
  unint64_t result;

  result = qword_1F034D548;
  if (!qword_1F034D548)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC410050, &type metadata for StockListRemoveStockBlueprintModifier);
    atomic_store(result, (unint64_t *)&qword_1F034D548);
  }
  return result;
}

uint64_t sub_1DC1958AC(uint64_t a1)
{
  destroy for StockListRemoveStockBlueprintModifier(a1);
  return a1;
}

unint64_t sub_1DC1958E0()
{
  unint64_t result;

  result = qword_1EDB3CAC0;
  if (!qword_1EDB3CAC0)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC41B95C, &type metadata for StockListRelayoutBlueprintModifier);
    atomic_store(result, (unint64_t *)&qword_1EDB3CAC0);
  }
  return result;
}

uint64_t sub_1DC195924(uint64_t a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t *, uint64_t);
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  const void *v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int (*v27)(const void *, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(uint64_t, uint64_t, uint64_t);
  id v37;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *__dst;
  uint64_t v46;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v29 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v29 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    v8 = *(_OWORD *)(a2 + 5);
    *(_OWORD *)(a1 + 40) = v8;
    v9 = v8;
    v10 = **(void (***)(uint64_t, uint64_t *, uint64_t))(v8 - 8);
    swift_bridgeObjectRetain();
    v10(a1 + 16, a2 + 2, v9);
    v11 = *((_OWORD *)a2 + 5);
    *(_OWORD *)(a1 + 80) = v11;
    (**(void (***)(uint64_t, uint64_t))(v11 - 8))(a1 + 56, (uint64_t)(a2 + 7));
    v12 = *(_OWORD *)(a2 + 15);
    *(_OWORD *)(a1 + 120) = v12;
    (**(void (***)(uint64_t, uint64_t))(v12 - 8))(a1 + 96, (uint64_t)(a2 + 12));
    v13 = *((_OWORD *)a2 + 10);
    *(_OWORD *)(a1 + 160) = v13;
    (**(void (***)(uint64_t, uint64_t))(v13 - 8))(a1 + 136, (uint64_t)(a2 + 17));
    v14 = a3[9];
    v15 = a1 + v14;
    v16 = (uint64_t)a2 + v14;
    v17 = sub_1DC4008EC();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
    v18 = a3[10];
    v19 = (_QWORD *)(a1 + v18);
    v20 = (uint64_t)a2 + v18;
    v21 = *(uint64_t *)((char *)a2 + v18 + 8);
    *v19 = *(uint64_t *)((char *)a2 + v18);
    v19[1] = v21;
    v22 = type metadata accessor for AttributionSource();
    v23 = *(int *)(v22 + 20);
    __dst = (char *)v19 + v23;
    v46 = v22;
    v24 = (const void *)(v20 + v23);
    v25 = sub_1DC3FFDD0();
    v26 = *(_QWORD *)(v25 - 8);
    v27 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v26 + 48);
    swift_bridgeObjectRetain();
    if (v27(v24, 1, v25))
    {
      sub_1DC089DA4(0, (unint64_t *)&unk_1EDB28A70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(__dst, v24, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, const void *, uint64_t))(v26 + 16))(__dst, v24, v25);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(__dst, 0, 1, v25);
    }
    v30 = *(int *)(v46 + 24);
    v31 = *(void **)(v20 + v30);
    *(_QWORD *)((char *)v19 + v30) = v31;
    v32 = a3[11];
    v33 = a1 + v32;
    v34 = (uint64_t)a2 + v32;
    v35 = sub_1DC40070C();
    v36 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 16);
    v37 = v31;
    v36(v33, v34, v35);
    v38 = a3[12];
    v39 = *(_OWORD *)((char *)a2 + v38 + 24);
    *(_OWORD *)(a1 + v38 + 24) = v39;
    (**(void (***)(void))(v39 - 8))();
    v40 = a3[13];
    v41 = a1 + v40;
    v42 = (uint64_t)a2 + v40;
    v43 = *(_QWORD *)(v42 + 8);
    *(_QWORD *)v41 = *(_QWORD *)v42;
    *(_QWORD *)(v41 + 8) = v43;
    *(_OWORD *)(v41 + 16) = *(_OWORD *)(v42 + 16);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t *sub_1DC195BB0(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  char *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(char *, uint64_t, uint64_t);
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  id v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  char *v32;
  uint64_t v34;
  int *v35;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __swift_assign_boxed_opaque_existential_1(a1 + 2, a2 + 2);
  __swift_assign_boxed_opaque_existential_1(a1 + 7, a2 + 7);
  __swift_assign_boxed_opaque_existential_1(a1 + 12, a2 + 12);
  __swift_assign_boxed_opaque_existential_1(a1 + 17, a2 + 17);
  v6 = a3[9];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1DC4008EC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v35 = a3;
  v10 = a3[10];
  v11 = (uint64_t *)((char *)a1 + v10);
  v12 = (char *)a2 + v10;
  *v11 = *(uint64_t *)((char *)a2 + v10);
  v11[1] = *(uint64_t *)((char *)a2 + v10 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v34 = type metadata accessor for AttributionSource();
  v13 = *(int *)(v34 + 20);
  v14 = (char *)v11 + v13;
  v15 = &v12[v13];
  v16 = sub_1DC3FFDD0();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48);
  v19 = v18(v14, 1, v16);
  v20 = v18(v15, 1, v16);
  if (!v19)
  {
    if (!v20)
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 24))(v14, v15, v16);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v17 + 8))(v14, v16);
    goto LABEL_6;
  }
  if (v20)
  {
LABEL_6:
    sub_1DC089DA4(0, (unint64_t *)&unk_1EDB28A70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v14, v15, v16);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
LABEL_7:
  v22 = *(int *)(v34 + 24);
  v23 = *(void **)((char *)v11 + v22);
  v24 = *(void **)&v12[v22];
  *(_QWORD *)((char *)v11 + v22) = v24;
  v25 = v24;

  v26 = v35[11];
  v27 = (char *)a1 + v26;
  v28 = (char *)a2 + v26;
  v29 = sub_1DC40070C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 24))(v27, v28, v29);
  __swift_assign_boxed_opaque_existential_1((uint64_t *)((char *)a1 + v35[12]), (uint64_t *)((char *)a2 + v35[12]));
  v30 = v35[13];
  v31 = (uint64_t *)((char *)a1 + v30);
  v32 = (char *)a2 + v30;
  *v31 = *(uint64_t *)((char *)a2 + v30);
  v31[1] = *(uint64_t *)((char *)a2 + v30 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v31[2] = *((_QWORD *)v32 + 2);
  v31[3] = *((_QWORD *)v32 + 3);
  return a1;
}

uint64_t sub_1DC195E2C(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  const void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  _OWORD *v31;
  _OWORD *v32;
  __int128 v33;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  v7 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v7;
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  v8 = a3[9];
  v9 = a1 + v8;
  v10 = a2 + v8;
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  v11 = sub_1DC4008EC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  v12 = a3[10];
  v13 = a1 + v12;
  v14 = a2 + v12;
  *(_OWORD *)(a1 + v12) = *(_OWORD *)(a2 + v12);
  v15 = type metadata accessor for AttributionSource();
  v16 = *(int *)(v15 + 20);
  v17 = (void *)(v13 + v16);
  v18 = (const void *)(v14 + v16);
  v19 = sub_1DC3FFDD0();
  v20 = *(_QWORD *)(v19 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
  {
    sub_1DC089DA4(0, (unint64_t *)&unk_1EDB28A70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v20 + 32))(v17, v18, v19);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
  }
  *(_QWORD *)(v13 + *(int *)(v15 + 24)) = *(_QWORD *)(v14 + *(int *)(v15 + 24));
  v22 = a3[11];
  v23 = a1 + v22;
  v24 = a2 + v22;
  v25 = sub_1DC40070C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v23, v24, v25);
  v26 = a3[12];
  v27 = a3[13];
  v28 = a1 + v26;
  v29 = a2 + v26;
  v30 = *(_OWORD *)(v29 + 16);
  *(_OWORD *)v28 = *(_OWORD *)v29;
  *(_OWORD *)(v28 + 16) = v30;
  *(_QWORD *)(v28 + 32) = *(_QWORD *)(v29 + 32);
  v31 = (_OWORD *)(a1 + v27);
  v32 = (_OWORD *)(a2 + v27);
  v33 = v32[1];
  *v31 = *v32;
  v31[1] = v33;
  return a1;
}

uint64_t sub_1DC196014(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(char *, uint64_t, uint64_t);
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v41;
  int *v42;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 16);
  v7 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  __swift_destroy_boxed_opaque_existential_1(a1 + 56);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  __swift_destroy_boxed_opaque_existential_1(a1 + 96);
  v8 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v8;
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  __swift_destroy_boxed_opaque_existential_1(a1 + 136);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  v9 = a3[9];
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = sub_1DC4008EC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 40))(v10, v11, v12);
  v42 = a3;
  v13 = a3[10];
  v14 = (_QWORD *)(a1 + v13);
  v15 = a2 + v13;
  v16 = *(_QWORD *)(a2 + v13 + 8);
  *v14 = *(_QWORD *)(a2 + v13);
  v14[1] = v16;
  swift_bridgeObjectRelease();
  v41 = type metadata accessor for AttributionSource();
  v17 = *(int *)(v41 + 20);
  v18 = (char *)v14 + v17;
  v19 = (char *)(v15 + v17);
  v20 = sub_1DC3FFDD0();
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v21 + 48);
  v23 = v22(v18, 1, v20);
  v24 = v22(v19, 1, v20);
  if (!v23)
  {
    if (!v24)
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 40))(v18, v19, v20);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v21 + 8))(v18, v20);
    goto LABEL_6;
  }
  if (v24)
  {
LABEL_6:
    sub_1DC089DA4(0, (unint64_t *)&unk_1EDB28A70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v18, v19, v20);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
LABEL_7:
  v26 = *(int *)(v41 + 24);
  v27 = *(void **)((char *)v14 + v26);
  *(_QWORD *)((char *)v14 + v26) = *(_QWORD *)(v15 + v26);

  v28 = v42[11];
  v29 = a1 + v28;
  v30 = a2 + v28;
  v31 = sub_1DC40070C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 40))(v29, v30, v31);
  v32 = v42[12];
  v33 = a1 + v32;
  v34 = a2 + v32;
  __swift_destroy_boxed_opaque_existential_1(a1 + v32);
  v35 = *(_OWORD *)(v34 + 16);
  *(_OWORD *)v33 = *(_OWORD *)v34;
  *(_OWORD *)(v33 + 16) = v35;
  *(_QWORD *)(v33 + 32) = *(_QWORD *)(v34 + 32);
  v36 = v42[13];
  v37 = a1 + v36;
  v38 = a2 + v36;
  v39 = *(_QWORD *)(v38 + 8);
  *(_QWORD *)v37 = *(_QWORD *)v38;
  *(_QWORD *)(v37 + 8) = v39;
  swift_bridgeObjectRelease();
  *(_OWORD *)(v37 + 16) = *(_OWORD *)(v38 + 16);
  return a1;
}

uint64_t sub_1DC1962A8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC1962B4(uint64_t a1, uint64_t a2, int *a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1DC4008EC();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = a3[9];
    }
    else
    {
      v12 = type metadata accessor for AttributionSource();
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
      {
        v10 = v12;
        v11 = a3[10];
      }
      else
      {
        v10 = sub_1DC40070C();
        v9 = *(_QWORD *)(v10 - 8);
        v11 = a3[11];
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_1DC196378()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC196384(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = sub_1DC4008EC();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = a4[9];
    }
    else
    {
      v12 = type metadata accessor for AttributionSource();
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == a3)
      {
        v10 = v12;
        v11 = a4[10];
      }
      else
      {
        v10 = sub_1DC40070C();
        v9 = *(_QWORD *)(v10 - 8);
        v11 = a4[11];
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t sub_1DC196444(void *a1, void (*a2)(char *))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  uint64_t v11;

  sub_1DC0CC0A4(0, &qword_1EDB2A280, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB9A28]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v11 - v7;
  *(uint64_t *)((char *)&v11 - v7) = (uint64_t)a1;
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))((char *)&v11 - v7, *MEMORY[0x1E0DB99F0], v5);
  v9 = a1;
  a2(v8);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1DC196504()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = (int *)type metadata accessor for StockListPrewarmBlueprintModifier();
  v2 = v0
     + ((*(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80));
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v2 + 16);
  __swift_destroy_boxed_opaque_existential_1(v2 + 56);
  __swift_destroy_boxed_opaque_existential_1(v2 + 96);
  __swift_destroy_boxed_opaque_existential_1(v2 + 136);
  v3 = v2 + v1[9];
  v4 = sub_1DC4008EC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  v5 = v2 + v1[10];
  swift_bridgeObjectRelease();
  v6 = type metadata accessor for AttributionSource();
  v7 = v5 + *(int *)(v6 + 20);
  v8 = sub_1DC3FFDD0();
  v9 = *(_QWORD *)(v8 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);

  v10 = v2 + v1[11];
  v11 = sub_1DC40070C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  __swift_destroy_boxed_opaque_existential_1(v2 + v1[12]);
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DC196690()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DC1966B4(void *a1)
{
  uint64_t v1;

  return sub_1DC196444(a1, *(void (**)(char *))(v1 + 16));
}

uint64_t sub_1DC1966BC()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = (int *)type metadata accessor for StockListPrewarmBlueprintModifier();
  v2 = v0
     + ((*(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80));
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v2 + 16);
  __swift_destroy_boxed_opaque_existential_1(v2 + 56);
  __swift_destroy_boxed_opaque_existential_1(v2 + 96);
  __swift_destroy_boxed_opaque_existential_1(v2 + 136);
  v3 = v2 + v1[9];
  v4 = sub_1DC4008EC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  v5 = v2 + v1[10];
  swift_bridgeObjectRelease();
  v6 = type metadata accessor for AttributionSource();
  v7 = v5 + *(int *)(v6 + 20);
  v8 = sub_1DC3FFDD0();
  v9 = *(_QWORD *)(v8 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);

  v10 = v2 + v1[11];
  v11 = sub_1DC40070C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  __swift_destroy_boxed_opaque_existential_1(v2 + v1[12]);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

_QWORD *assignWithCopy for StockSearchResults(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for StockSearchResults(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for StockListPrewarmBlueprintModifier.Results()
{
  return &type metadata for StockListPrewarmBlueprintModifier.Results;
}

uint64_t destroy for StockListSectionHeaderViewModel()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for StockListSectionHeaderViewModel(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for StockListSectionHeaderViewModel(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for StockListSectionHeaderViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for StockListSectionHeaderViewModel()
{
  return &type metadata for StockListSectionHeaderViewModel;
}

uint64_t sub_1DC196A84(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  BOOL v9;

  v2 = a1[2];
  v4 = a1[3];
  v3 = a1[4];
  v5 = a2[2];
  v6 = a2[3];
  v7 = a2[4];
  v8 = *a1 == *a2 && a1[1] == a2[1];
  if ((v8 || (sub_1DC4099E8() & 1) != 0) && (v2 == v5 ? (v9 = v4 == v6) : (v9 = 0), v9 || (sub_1DC4099E8() & 1) != 0))
    return sub_1DC19E8CC(v3, v7);
  else
    return 0;
}

void sub_1DC196B2C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB3AF40)
  {
    v0 = sub_1DC4095A4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB3AF40);
  }
}

double sub_1DC196B80(uint64_t a1)
{
  double result;

  result = 0.0;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_BYTE *)(a1 + 128) = 1;
  return result;
}

uint64_t sub_1DC196BA0(uint64_t result)
{
  *(_BYTE *)(result + 128) = 0;
  return result;
}

char *sub_1DC196BB0(double a1, double a2, double a3, double a4)
{
  char *v4;
  objc_class *ObjectType;
  uint64_t v10;
  id v11;
  char *v12;
  uint64_t v13;
  Class v14;
  char *v15;
  void *v16;
  uint64_t v17;
  void *v18;
  char *v19;
  id v20;
  id v21;
  objc_super v23;

  ObjectType = (objc_class *)swift_getObjectType();
  v10 = OBJC_IVAR____TtC8StocksUI28StockSearchSectionHeaderView_watchlistSwitcherButton;
  v11 = objc_allocWithZone((Class)sub_1DC404240());
  v12 = v4;
  *(_QWORD *)&v4[v10] = objc_msgSend(v11, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v13 = OBJC_IVAR____TtC8StocksUI28StockSearchSectionHeaderView_onWatchlistSwitcherMenuPresentation;
  sub_1DC12F234();
  *(_QWORD *)&v12[v13] = objc_msgSend(objc_allocWithZone(v14), sel_init);

  v23.receiver = v12;
  v23.super_class = ObjectType;
  v15 = (char *)objc_msgSendSuper2(&v23, sel_initWithFrame_, a1, a2, a3, a4);
  v16 = *(void **)&v15[OBJC_IVAR____TtC8StocksUI28StockSearchSectionHeaderView_onWatchlistSwitcherMenuPresentation];
  v17 = OBJC_IVAR____TtC8StocksUI28StockSearchSectionHeaderView_watchlistSwitcherButton;
  v18 = *(void **)&v15[OBJC_IVAR____TtC8StocksUI28StockSearchSectionHeaderView_watchlistSwitcherButton];
  v19 = v15;
  v20 = v16;
  v21 = v18;
  sub_1DC406898();

  objc_msgSend(v19, sel_addSubview_, *(_QWORD *)&v15[v17]);
  return v19;
}

uint64_t type metadata accessor for StockSearchSectionHeaderView()
{
  return objc_opt_self();
}

void sub_1DC196E40()
{
  sub_1DC196E9C(&qword_1EDB28028, (uint64_t)&unk_1DC412518);
  JUMPOUT(0x1DF0C7418);
}

uint64_t sub_1DC196E78()
{
  return sub_1DC196E9C(&qword_1EDB28020, (uint64_t)&unk_1DC4124E0);
}

uint64_t sub_1DC196E9C(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for StockSearchSectionHeaderView();
    result = MEMORY[0x1DF0CAB8C](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DC196ED8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v3;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  __int128 v14;
  unsigned int v15;
  double v16;
  double v17;
  CGFloat v18;
  double v19;
  CGFloat v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  void *v27;
  void *v28;
  double v29;
  double v30;
  CGFloat v31;
  CGFloat v32;
  CGFloat v33;
  CGFloat MaxY;
  double v35;
  CGFloat v36;
  double v37;
  CGFloat v38;
  double v39;
  double v40;
  double v41;
  double v42;
  double v43;
  CGFloat v44;
  double v45;
  double v46;
  CGFloat v47;
  double v48;
  CGFloat v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t (*v52)(uint64_t, uint64_t, uint64_t, uint64_t);
  void *v53;
  double v54;
  CGFloat v55;
  CGFloat v56;
  uint64_t (*v57)(uint64_t, uint64_t, uint64_t, uint64_t);
  void *v58;
  double v59;
  CGFloat v60;
  double v61;
  double v62;
  double v63;
  double v64;
  double v65;
  CGFloat v66;
  CGFloat v67;
  double v68;
  CGFloat v69;
  uint64_t v70;
  uint64_t v71;
  void *v72;
  double v73;
  CGFloat v74;
  CGFloat v75;
  CGFloat v76;
  void *v77;
  double v78;
  CGFloat v79;
  double v80;
  double v81;
  double v82;
  CGFloat v83;
  double v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  double v89;
  CGFloat v90;
  void *v91;
  double v92;
  CGFloat v93;
  uint64_t v94;
  void *v95;
  double v96;
  CGFloat v97;
  double v98;
  double v99;
  double v100;
  double v101;
  CGFloat x;
  CGFloat y;
  CGFloat v104;
  CGFloat v105;
  CGFloat v106;
  CGFloat v107;
  CGFloat v108;
  double v109;
  double v110;
  double v111;
  double v112;
  void *v113;
  double v114;
  void *v115;
  double v116;
  double v117;
  double v118;
  double v119;
  double v120;
  double v121;
  double v122;
  double v123;
  id v124;
  CGFloat v125;
  double v126;
  double v127;
  double v128;
  double v129;
  double v130;
  void *v131;
  double v132;
  CGFloat v133;
  double v134;
  CGFloat v135;
  double v136;
  CGFloat v137;
  double v138;
  CGFloat v139;
  void *v140;
  double v141;
  double v142;
  double v143;
  CGFloat v145;
  void *v146;
  void *v147;
  unsigned int v148;
  void *v149;
  CGFloat v150;
  CGFloat v151;
  CGFloat v152;
  CGFloat v153;
  CGFloat v154;
  CGFloat v155;
  CGFloat v156;
  double v157;
  CGFloat v158;
  double v159;
  double v160;
  double v161;
  double v162;
  CGFloat v163;
  double v164;
  double v165;
  double v166;
  double v167;
  double v168;
  double v169;
  uint64_t v170;
  uint64_t v176;
  void *v177;
  void *v178;
  double v180;
  CGFloat height;
  CGFloat v182;
  CGFloat v183;
  CGFloat v184;
  CGFloat v185;
  CGFloat v186;
  double v187;
  CGFloat v188;
  double v189;
  double v190;
  double v191;
  uint64_t (*v192)(uint64_t, uint64_t, uint64_t, uint64_t);
  double v193;
  double v194;
  CGFloat v195;
  CGFloat v196;
  double v197;
  unsigned int v198;
  CGFloat v199;
  uint64_t *boxed_opaque_existential_1;
  CGFloat v201;
  CGFloat v202;
  double v203;
  CGFloat v204;
  CGFloat v205;
  CGFloat v206;
  CGFloat v207;
  CGFloat MinX;
  CGFloat v209;
  double v210;
  CGFloat v211;
  CGFloat v212;
  double v213;
  CGFloat v214;
  CGFloat v215;
  CGFloat v216;
  double v217;
  CGFloat v218;
  double Width;
  CGFloat v220;
  CGFloat v221;
  double v222;
  CGFloat v223;
  CGFloat v224;
  _QWORD v225[98];
  _QWORD v226[18];
  uint64_t v227[5];
  double v228[5];
  double v229;
  double v230;
  double v231;
  double v232;
  double v233;
  double rect;
  double v235;
  double v236;
  double v237;
  CGFloat v238;
  double v239;
  double v240;
  double v241;
  double v242;
  _BYTE v243[32];
  _OWORD v244[3];
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  CGRect v251;
  CGRect v252;
  CGRect v253;
  CGRect v254;
  CGRect v255;
  CGRect v256;
  CGRect v257;
  CGRect v258;
  CGRect v259;
  CGRect v260;
  CGRect v261;
  CGRect v262;
  CGRect v263;
  CGRect v264;
  CGRect v265;
  CGRect v266;
  CGRect v267;
  CGRect v268;
  CGRect v269;
  CGRect v270;
  CGRect v271;
  CGRect v272;
  CGRect v273;
  CGRect v274;
  CGRect v275;
  CGRect v276;
  CGRect v277;
  CGRect v278;
  CGRect v279;
  CGRect v280;
  CGRect v281;
  CGRect v282;
  CGRect v283;
  CGRect v284;
  CGRect v285;
  CGRect v286;
  CGRect v287;
  CGRect v288;
  CGRect v289;
  CGRect v290;

  v6 = __swift_project_boxed_opaque_existential_1((_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 40));
  v7 = *(unsigned __int8 *)(a2 + 56);
  v8 = 56;
  if (*(_BYTE *)(a2 + 56))
    v8 = 96;
  sub_1DC0824D4(*v6 + v8, (uint64_t)v225);
  v10 = v225[3];
  v9 = v225[4];
  __swift_project_boxed_opaque_existential_1(v225, v225[3]);
  v11 = *(_QWORD *)(a2 + 80);
  v12 = *(_QWORD *)(v9 + 8);
  v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 8);
  v227[3] = v10;
  v227[4] = v9;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v227);
  v13(v11, v10, v12);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v225);
  sub_1DC198B54(v7, (uint64_t)v228, *(double *)(a2 + 64));
  v14 = *(_OWORD *)(a2 + 16);
  v244[0] = *(_OWORD *)a2;
  v244[1] = v14;
  v244[2] = *(_OWORD *)(a2 + 32);
  v245 = *(_QWORD *)(a2 + 48);
  v15 = *(unsigned __int8 *)(a2 + 72);
  v16 = v228[1];
  v222 = v228[2];
  sub_1DC198D28((uint64_t)v244);
  sub_1DC4092C8();
  v18 = v17;
  v20 = v19;
  sub_1DC40928C();
  v216 = v21;
  v213 = -v16;
  v214 = v22;
  v201 = v23;
  v221 = v24;
  v251.origin.x = 0.0;
  v251.origin.y = -v16;
  v211 = v20;
  v212 = v18;
  v251.size.width = v18;
  v251.size.height = v20;
  Width = CGRectGetWidth(v251);
  v25 = v228[0];
  v26 = v228[3];
  v27 = (void *)(*(uint64_t (**)(_QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t))(v9 + 16))(a1[1], a1[2], a1[3], a1[4], v10, v9);
  v28 = (void *)sub_1DC4091A8();
  objc_msgSend(v28, sel_lineHeight);
  v30 = v29;

  v178 = v27;
  sub_1DC198D50(v27, (uint64_t)v225, v25, floor(v30 + v30));
  v177 = (void *)v225[0];
  v31 = *(double *)&v225[3];
  v32 = *(double *)&v225[4];
  v33 = (v25 - CGRectGetWidth(*(CGRect *)&v225[1])) * 0.5;
  v252.origin.y = 0.0;
  v252.origin.x = (v25 - v26) * 0.5;
  v252.size.width = v26;
  v252.size.height = v26;
  v253.origin.y = CGRectGetMaxY(v252) + v228[4];
  v253.origin.x = v33;
  v253.size.width = v31;
  v253.size.height = v32;
  MaxY = CGRectGetMaxY(v253);
  v198 = v15;
  v191 = v16;
  if (v15 <= 1)
    v35 = v16;
  else
    v35 = 0.0;
  v36 = v222 + v35;
  v224 = v25;
  v37 = Width * 0.5 - v25 * 0.5;
  v38 = v229;
  v39 = v25 - v229 - v232;
  v40 = v233;
  v203 = v233;
  v41 = rect;
  v223 = rect;
  v209 = v36;
  v210 = v39 - v233;
  v42 = v242;
  if (v15 > 1)
    v42 = 0.0;
  v217 = v42;
  v220 = v37;
  v43 = v232;
  v44 = v232;
  v45 = v229;
  v46 = v229;
  v47 = v40 + CGRectGetMaxX(*(CGRect *)(&v41 - 1));
  sub_1DC401900();
  v49 = v48;
  v50 = a1[7];
  v51 = a1[8];
  v52 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 24);
  v53 = (void *)v52(a1[5], a1[6], v10, v9);
  sub_1DC4091B4();
  v55 = v54;

  v254.origin.y = 0.0;
  v254.origin.x = v47;
  v254.size.width = v49;
  v254.size.height = v55;
  MinX = CGRectGetMinX(v254);
  v255.origin.y = 0.0;
  v255.origin.x = v47;
  v255.size.width = v49;
  v255.size.height = v55;
  v56 = CGRectGetMaxY(v255);
  v57 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 32);
  v58 = (void *)v57(v50, v51, v10, v9);
  sub_1DC4091B4();
  v60 = v59;

  v256.origin.x = v37;
  v256.origin.y = v209;
  v256.size.width = v224;
  v256.size.height = MaxY;
  v61 = CGRectGetMaxY(v256);
  v215 = v44;
  v257.origin.x = v44;
  v257.origin.y = v223;
  v257.size.width = v38;
  v257.size.height = v38;
  v62 = CGRectGetMaxY(v257);
  v258.origin.x = MinX;
  v258.origin.y = v56;
  v258.size.width = v210;
  v258.size.height = v60;
  v63 = CGRectGetMaxY(v258);
  if (v62 > v63)
    v64 = v62;
  else
    v64 = v63;
  v65 = v230;
  v206 = v217 + v61 + v230 + v231;
  v207 = v64;
  v259.origin.x = v44;
  v66 = v38;
  v259.origin.y = v223;
  v259.size.width = v38;
  v259.size.height = v38;
  v67 = v203 + CGRectGetMaxX(v259);
  sub_1DC401900();
  v69 = v68;
  v70 = a1[11];
  v71 = a1[12];
  v72 = (void *)v52(a1[9], a1[10], v10, v9);
  sub_1DC4091B4();
  v74 = v73;

  v260.origin.y = 0.0;
  v260.origin.x = v67;
  v260.size.width = v69;
  v260.size.height = v74;
  v75 = CGRectGetMinX(v260);
  v261.origin.y = 0.0;
  v261.origin.x = v67;
  v261.size.width = v69;
  v261.size.height = v74;
  v76 = CGRectGetMaxY(v261);
  v192 = v57;
  v77 = (void *)v57(v70, v71, v10, v9);
  sub_1DC4091B4();
  v79 = v78;

  v262.origin.x = v220;
  v262.origin.y = v206;
  v262.size.height = v207;
  v262.size.width = v224;
  v80 = CGRectGetMaxY(v262);
  v263.origin.x = v215;
  v263.origin.y = v223;
  v263.size.width = v66;
  v263.size.height = v66;
  v81 = CGRectGetMaxY(v263);
  v264.origin.x = v75;
  v264.origin.y = v76;
  v264.size.width = v210;
  v264.size.height = v79;
  v82 = CGRectGetMaxY(v264);
  if (v81 > v82)
    v83 = v81;
  else
    v83 = v82;
  v84 = v217 + v65 + v80;
  sub_1DC199104((uint64_t)(a1 + 13), (uint64_t)v243, &qword_1F034C978);
  sub_1DC199104((uint64_t)v243, (uint64_t)&v247, &qword_1F034C978);
  v85 = v248;
  if (v248)
  {
    v86 = v247;
    v87 = v249;
    v88 = v250;
    v265.origin.x = v215;
    v265.origin.y = v223;
    v265.size.width = v66;
    v265.size.height = v66;
    v189 = v203 + CGRectGetMaxX(v265);
    sub_1DC401900();
    v90 = v89;
    v91 = (void *)v52(v86, v85, v10, v9);
    sub_1DC4091B4();
    v93 = v92;
    v196 = v92;

    v266.origin.y = 0.0;
    v266.origin.x = v189;
    v266.size.width = v90;
    v266.size.height = v93;
    v204 = CGRectGetMinX(v266);
    v267.origin.y = 0.0;
    v267.origin.x = v189;
    v267.size.width = v90;
    v267.size.height = v93;
    v185 = CGRectGetMaxY(v267);
    v94 = v10;
    v95 = (void *)v192(v87, v88, v10, v9);
    sub_1DC4091B4();
    v97 = v96;
    v183 = v96;

    v268.origin.x = v220;
    v268.origin.y = v84;
    v268.size.width = v224;
    v268.size.height = v83;
    v98 = CGRectGetMaxY(v268);
    v269.origin.x = v215;
    v269.origin.y = v223;
    v269.size.width = v66;
    v269.size.height = v66;
    v99 = CGRectGetMaxY(v269);
    v270.origin.x = v204;
    v270.origin.y = v185;
    v270.size.width = v210;
    v270.size.height = v97;
    v100 = CGRectGetMaxY(v270);
    if (v99 > v100)
      v100 = v99;
    v193 = v100;
    v190 = v217 + v65 + v98;
    v101 = 1.0;
    if (v15 <= 1)
      v101 = 0.0;
    v187 = v101;
    v271.origin.x = v215;
    v271.origin.y = v223;
    v271.size.width = v66;
    v271.size.height = v66;
    v272 = CGRectIntegral(v271);
    x = v272.origin.x;
    y = v272.origin.y;
    v104 = v272.size.width;
    height = v272.size.height;
    v272.origin.y = 0.0;
    v272.size.width = v90;
    v272.origin.x = v189;
    v272.size.height = v196;
    v273 = CGRectIntegral(v272);
    v105 = v273.origin.x;
    v106 = v273.origin.y;
    v107 = v273.size.width;
    v108 = v273.size.height;
    v273.origin.x = v204;
    v273.size.height = v183;
    v273.origin.y = v185;
    v273.size.width = v210;
    v274 = CGRectIntegral(v273);
    *(CGFloat *)v225 = v220;
    *(double *)&v225[1] = v190;
    *(CGFloat *)&v225[2] = v224;
    *(double *)&v225[3] = v193;
    *(double *)&v225[4] = v187;
    *(CGFloat *)&v225[5] = x;
    *(CGFloat *)&v225[6] = y;
    *(CGFloat *)&v225[7] = v104;
    *(CGFloat *)&v225[8] = height;
    *(CGFloat *)&v225[9] = v105;
    *(CGFloat *)&v225[10] = v106;
    *(CGFloat *)&v225[11] = v107;
    *(CGFloat *)&v225[12] = v108;
    *(CGRect *)&v225[13] = v274;
    sub_1DC199490((uint64_t)v225);
    sub_1DC199104((uint64_t)v225, (uint64_t)v226, &qword_1F034C970);
    v109 = *(double *)v226;
    v110 = *(double *)&v226[1];
    v111 = *(double *)&v226[2];
    v112 = *(double *)&v226[3];
  }
  else
  {
    v94 = v10;
    sub_1DC1990E0((uint64_t)v225);
    sub_1DC199104((uint64_t)v225, (uint64_t)v226, &qword_1F034C970);
    v111 = v224;
    v112 = v83;
    v109 = v220;
    v110 = v84;
  }
  v113 = (void *)a1[20];
  objc_msgSend(v113, sel_size);
  v186 = v112;
  v188 = v111;
  v182 = v110;
  v184 = v109;
  if (v114 <= 0.0)
  {
    v123 = 0.0;
    v197 = 0.0;
    v122 = 0.0;
    v118 = 0.0;
  }
  else
  {
    sub_1DC0D0F34();
    objc_msgSend((id)objc_opt_self(), sel_systemFontSize);
    v176 = *MEMORY[0x1E0DC1440];
    v115 = (void *)sub_1DC4092F8();
    objc_msgSend(v115, sel_pointSize, v176);
    v117 = v116;

    if (v117 < 20.0)
      v118 = 24.0;
    else
      v118 = 28.0;
    objc_msgSend(v113, sel_size);
    v120 = v118 * v119;
    objc_msgSend(v113, sel_size);
    v122 = v120 / v121;
    v275.origin.x = v216;
    v275.origin.y = v214;
    v275.size.width = v201;
    v275.size.height = v221;
    v123 = CGRectGetWidth(v275) * 0.5 - v122 * 0.5;
    v197 = v235;
  }
  v124 = objc_msgSend((id)objc_opt_self(), sel_defaultMetrics);
  objc_msgSend(v124, sel_scaledValueForValue_, v236);

  v125 = sub_1DC199150((uint64_t)boxed_opaque_existential_1, (uint64_t)a1, v228, v94, v9, v216, v214, v201, v221, v123, v197, v122, v118);
  v194 = v126;
  v128 = v127;
  v130 = v129;
  v131 = (void *)(*(uint64_t (**)(_QWORD, _QWORD, uint64_t, uint64_t))(v9 + 40))(a1[17], a1[18], v94, v9);
  objc_msgSend(v131, sel_boundingRectWithSize_options_context_, 35, 0, 1.79769313e308, 1.79769313e308);
  v133 = v132;
  v135 = v134;
  v137 = v136;
  v139 = v138;

  sub_1DC0D0F34();
  objc_msgSend((id)objc_opt_self(), (SEL)&selRef_currentAttributedTitle + 4);
  v140 = (void *)sub_1DC4092F8();
  objc_msgSend(v140, (SEL)&selRef_traitCollectionWithTraits_ + 3);
  v142 = v141;

  v276.origin.x = v133;
  v276.origin.y = v135;
  v276.size.width = v137;
  v276.size.height = v139;
  v143 = CGRectGetHeight(v276) * v239;
  _NF = v142 < 20.0;
  v205 = v130;
  v145 = v128;
  if (_NF)
  {
    v152 = v194;
    v153 = v214;
    v147 = v178;
    v146 = a3;
    v148 = v198;
    v149 = v177;
    v150 = v201;
    v151 = v221;
    v195 = v143;
  }
  else
  {
    v152 = v194;
    v153 = v214;
    v154 = v133;
    v155 = v135;
    v156 = v137;
    v157 = v143;
    v158 = v139;
    v159 = CGRectGetHeight(*(CGRect *)&v154) + 25.0;
    if (v159 < v157)
      v157 = v159;
    v195 = v157;
    v147 = v178;
    v146 = a3;
    v148 = v198;
    v149 = v177;
    v150 = v201;
    v151 = v221;
  }
  v277.origin.x = v216;
  v277.origin.y = v153;
  v277.size.width = v150;
  v277.size.height = v151;
  v160 = CGRectGetWidth(v277);
  v278.origin.x = v125;
  v278.origin.y = v152;
  v278.size.width = v145;
  v278.size.height = v205;
  v161 = CGRectGetMaxY(v278) + v237;
  v202 = v238;
  v162 = v160 * 0.5;
  v163 = v238;
  v164 = v162 - v238 * 0.5;
  v199 = v164;
  v279.origin.x = v216;
  v279.origin.y = v153;
  v279.size.width = v150;
  v279.size.height = v151;
  v165 = CGRectGetHeight(v279);
  v166 = v191 + v217 * 4.0;
  if (v148 > 1)
    v166 = 0.0;
  v180 = v166 + v165;
  v280.origin.x = v216;
  v280.origin.y = v153;
  v280.size.width = v150;
  v280.size.height = v151;
  v218 = CGRectGetWidth(v280);
  v281.origin.x = v164;
  v281.origin.y = v161;
  v281.size.width = v163;
  v281.size.height = v195;
  v167 = CGRectGetMaxY(v281) + v240;
  v282.origin.x = 0.0;
  v282.origin.y = v213;
  v282.size.width = v212;
  v282.size.height = v211;
  v168 = CGRectGetHeight(v282);
  v283.origin.y = v182;
  v283.origin.x = v184;
  v283.size.height = v186;
  v283.size.width = v188;
  v169 = v168 - (CGRectGetMaxY(v283) + v241);
  if (v167 <= v169)
    v167 = v169;
  v284.origin.x = 0.0;
  v284.origin.y = v213;
  v284.size.width = v212;
  v284.size.height = v211;
  CGRectGetWidth(v284);
  v285.origin.x = v216;
  v285.origin.y = v153;
  v285.size.width = v150;
  v285.size.height = v221;
  CGRectGetHeight(v285);
  v286.origin.x = v216;
  v286.origin.y = v153;
  v286.size.width = v150;
  v286.size.height = v221;
  CGRectGetHeight(v286);
  v287.origin.x = 0.0;
  v287.origin.y = v180 - v167;
  v287.size.width = v218;
  v287.size.height = v167;
  CGRectGetHeight(v287);
  v288.origin.x = v199;
  v288.origin.y = v161;
  v288.size.width = v202;
  v288.size.height = v195;
  CGRectGetMaxY(v288);
  v289.origin.x = v199;
  v289.origin.y = v161;
  v289.size.width = v202;
  v289.size.height = v195;
  CGRectGetHeight(v289);
  v290.origin.x = v216;
  v290.origin.y = v214;
  v290.size.width = v150;
  v290.size.height = v221;
  CGRectGetHeight(v290);
  v170 = sub_1DC199104((uint64_t)v226, (uint64_t)&v246, &qword_1F034C970);
  MEMORY[0x1E0C80A78](v170);
  __asm { FMOV            V1.2D, #18.0 }
  sub_1DC4051C4();

  sub_1DC199468((uint64_t)v244);
  memcpy(v146, v225, 0x310uLL);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v227);
}

void *sub_1DC197E00@<X0>(int a1@<W1>, void *a2@<X2>, uint64_t a3@<X3>, void *a4@<X8>, CGFloat a5@<D0>, CGFloat a6@<D1>, CGFloat a7@<D2>, CGFloat a8@<D3>, double a9@<D4>, double a10@<D5>, double a11@<D6>, double a12@<D7>, CGFloat a13, CGFloat a14, CGFloat a15, CGFloat a16, CGFloat a17, CGFloat a18, CGFloat a19, CGFloat a20,double a21,double a22,double a23,double a24,double a25,double a26,double a27,double a28,double a29,double a30,double a31,double a32,double a33,double a34,double a35,double a36,double a37,double a38,double a39,double a40,double a41,double a42,double a43,double a44,double a45,double a46,double a47,double a48,double a49,double a50,double a51,double a52,double a53,double a54,double a55,double a56,double a57,double a58,double a59,double a60,CGFloat a61,CGFloat a62,CGFloat a63)
{
  CGFloat a64;
  CGFloat a65;
  CGFloat a66;
  CGFloat a67;
  CGFloat a68;
  CGFloat a69;
  CGFloat a70;
  CGFloat a71;
  CGFloat a72;
  CGFloat a73;
  CGFloat a74;
  CGFloat a75;
  CGFloat a76;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  void (*v83)(char *, uint64_t, uint64_t);
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  void (*v88)(char *, uint64_t);
  double v89;
  double v90;
  double v91;
  double v92;
  id v93;
  double v94;
  double v95;
  double v96;
  double v97;
  double v98;
  double v99;
  double v100;
  double v101;
  double v102;
  double v103;
  double v104;
  double v105;
  double v106;
  double v107;
  double v108;
  double v109;
  double v110;
  double v111;
  double v112;
  double v113;
  double v114;
  double v115;
  double v116;
  double v117;
  _BYTE *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  unsigned int v139;
  double v140;
  double v141;
  double v142;
  double v143;
  double v144;
  CGFloat v145;
  CGFloat v146;
  CGFloat v147;
  _QWORD v149[5];
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  __int128 v155;
  __int128 v156;
  CGFloat v157;
  CGFloat v158;
  CGFloat v159;
  CGFloat v160;
  CGFloat v161;
  CGFloat v162;
  CGFloat v163;
  CGFloat v164;
  CGFloat v165;
  CGFloat v166;
  CGFloat v167;
  CGFloat v168;
  CGFloat v169;
  CGFloat v170;
  CGFloat v171;
  CGFloat v172;
  CGFloat v173;
  CGFloat v174;
  CGFloat v175;
  CGFloat v176;
  CGFloat v177;
  CGFloat v178;
  CGFloat v179;
  CGFloat v180;
  CGFloat v181;
  CGFloat v182;
  CGFloat v183;
  CGFloat v184;
  CGFloat v185;
  CGFloat v186;
  CGFloat v187;
  CGFloat v188;
  CGFloat v189;
  CGFloat v190;
  CGFloat v191;
  CGFloat v192;
  CGFloat v193;
  CGFloat v194;
  CGFloat v195;
  CGFloat v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  CGFloat height;
  CGFloat width;
  CGFloat y;
  CGFloat x;
  CGRect v205;
  CGRect v206;
  CGFloat v207;
  CGRect v208;
  CGRect v209;
  CGRect v210;
  __int128 v211;
  __int128 v212;
  void *v213;
  _OWORD v214[49];
  _BYTE v215[144];
  _BYTE v216[144];
  _OWORD v217[2];
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  _BYTE v223[152];
  CGRect v224;
  CGRect v225;
  CGRect v226;
  CGRect v227;
  CGRect v228;
  CGRect v229;
  CGRect v230;
  CGRect v231;
  CGRect v232;
  CGRect v233;
  CGRect v234;
  CGRect v235;
  CGRect v236;
  CGRect v237;
  CGRect v238;
  CGRect v239;

  LODWORD(v207) = a1;
  *((double *)&v212 + 1) = a12;
  *(double *)&v212 = a11;
  *((double *)&v211 + 1) = a10;
  *(double *)&v211 = a9;
  v205.size.height = a8;
  v205.size.width = a7;
  v205.origin.x = a5;
  v205.origin.y = a6;
  v213 = a4;
  v210.size.height = a76;
  v210.size.width = a75;
  v210.origin.y = a74;
  v210.origin.x = a73;
  v209.size.height = a72;
  v209.size.width = a71;
  v209.origin.y = a70;
  v209.origin.x = a69;
  v208.size.height = a68;
  v208.size.width = a67;
  v208.origin.y = a66;
  v208.origin.x = a65;
  v206.size.height = a64;
  v206.size.width = a63;
  v206.origin.y = a62;
  v206.origin.x = a61;
  v180 = a57;
  v179 = a58;
  v178 = a59;
  v177 = a60;
  v172 = a53;
  v171 = a54;
  v170 = a55;
  v169 = a56;
  v160 = a49;
  v159 = a50;
  v158 = a51;
  v157 = a52;
  v164 = a45;
  v163 = a46;
  v162 = a47;
  v161 = a48;
  v168 = a41;
  v167 = a42;
  v166 = a43;
  v165 = a44;
  v176 = a37;
  v175 = a38;
  v174 = a39;
  v173 = a40;
  v184 = a33;
  v183 = a34;
  v182 = a35;
  v181 = a36;
  v188 = a29;
  v187 = a30;
  v186 = a31;
  v185 = a32;
  v192 = a25;
  v191 = a26;
  v190 = a27;
  v189 = a28;
  v196 = a21;
  v195 = a22;
  v194 = a23;
  v193 = a24;
  sub_1DC199104(a3, (uint64_t)v216, &qword_1F034C970);
  sub_1DC199104((uint64_t)v216, (uint64_t)v223, &qword_1F034C970);
  v78 = sub_1DC404210();
  v79 = *(_QWORD *)(v78 - 8);
  MEMORY[0x1E0C80A78](v78);
  v81 = (char *)v149 - ((v80 + 15) & 0xFFFFFFFFFFFFFFF0);
  v224 = CGRectIntegral(v205);
  v205.size.height = v224.origin.x;
  v205.size.width = v224.origin.y;
  v205.origin.x = v224.size.height;
  v205.origin.y = v224.size.width;
  v224.origin.x = a13;
  v224.origin.y = a14;
  v224.size.width = a15;
  v224.size.height = a16;
  v225 = CGRectIntegral(v224);
  y = v225.origin.y;
  x = v225.origin.x;
  height = v225.size.height;
  width = v225.size.width;
  v225.origin.x = a17;
  v225.origin.y = a18;
  v225.size.width = a19;
  v225.size.height = a20;
  CGRectIntegral(v225);
  v82 = *MEMORY[0x1E0DB6B40];
  v83 = *(void (**)(char *, uint64_t, uint64_t))(v79 + 104);
  v83(v81, v82, v78);
  sub_1DC404204();
  v199 = v85;
  v200 = v84;
  v197 = v87;
  v198 = v86;
  v88 = *(void (**)(char *, uint64_t))(v79 + 8);
  v88(v81, v78);
  v226.origin.y = v195;
  v226.origin.x = v196;
  v226.size.height = v193;
  v226.size.width = v194;
  CGRectIntegral(v226);
  v83(v81, v82, v78);
  sub_1DC404204();
  v195 = v90;
  v196 = v89;
  v193 = v92;
  v194 = v91;
  v88(v81, v78);
  v93 = a2;
  v227.origin.y = v191;
  v227.origin.x = v192;
  v227.size.height = v189;
  v227.size.width = v190;
  v228 = CGRectIntegral(v227);
  v191 = v228.origin.y;
  v192 = v228.origin.x;
  v189 = v228.size.height;
  v190 = v228.size.width;
  v228.origin.y = v187;
  v228.origin.x = v188;
  v228.size.height = v185;
  v228.size.width = v186;
  v229 = CGRectIntegral(v228);
  v187 = v229.origin.y;
  v188 = v229.origin.x;
  v185 = v229.size.height;
  v186 = v229.size.width;
  v229.origin.y = v183;
  v229.origin.x = v184;
  v229.size.height = v181;
  v229.size.width = v182;
  CGRectIntegral(v229);
  v83(v81, v82, v78);
  sub_1DC404204();
  v183 = v95;
  v184 = v94;
  v181 = v97;
  v182 = v96;
  v88(v81, v78);
  v230.origin.y = v175;
  v230.origin.x = v176;
  v230.size.height = v173;
  v230.size.width = v174;
  CGRectIntegral(v230);
  v83(v81, v82, v78);
  sub_1DC404204();
  v175 = v99;
  v176 = v98;
  v173 = v101;
  v174 = v100;
  v88(v81, v78);
  v231.origin.y = v167;
  v231.origin.x = v168;
  v231.size.height = v165;
  v231.size.width = v166;
  CGRectIntegral(v231);
  v83(v81, v82, v78);
  sub_1DC404204();
  v167 = v103;
  v168 = v102;
  v165 = v105;
  v166 = v104;
  v88(v81, v78);
  v232.origin.y = v163;
  v232.origin.x = v164;
  v232.size.height = v161;
  v232.size.width = v162;
  v233 = CGRectIntegral(v232);
  v163 = v233.origin.y;
  v164 = v233.origin.x;
  v161 = v233.size.height;
  v162 = v233.size.width;
  v233.origin.y = v159;
  v233.origin.x = v160;
  v233.size.height = v157;
  v233.size.width = v158;
  CGRectIntegral(v233);
  v83(v81, v82, v78);
  sub_1DC404204();
  v159 = v107;
  v160 = v106;
  v157 = v109;
  v158 = v108;
  v88(v81, v78);
  v234.origin.y = v171;
  v234.origin.x = v172;
  v234.size.height = v169;
  v234.size.width = v170;
  CGRectIntegral(v234);
  v83(v81, v82, v78);
  sub_1DC404204();
  v171 = v111;
  v172 = v110;
  v169 = v113;
  v170 = v112;
  v88(v81, v78);
  v235.origin.y = v179;
  v235.origin.x = v180;
  v235.size.height = v177;
  v235.size.width = v178;
  CGRectIntegral(v235);
  v83(v81, v82, v78);
  sub_1DC404204();
  v178 = v115;
  v179 = v114;
  v177 = v116;
  v180 = v117;
  v88(v81, v78);
  sub_1DC199104(a3, (uint64_t)v217, &qword_1F034C970);
  if (sub_1DC16EA44((uint64_t)v217) == 1)
  {
    v118 = v223;
  }
  else
  {
    v155 = v217[1];
    v156 = v217[0];
    v154 = v218;
    v149[3] = v220;
    v149[4] = v219;
    v149[1] = v222;
    v149[2] = v221;
    v83(v81, v82, v78);
    sub_1DC404204();
    v152 = v120;
    v153 = v119;
    v150 = v122;
    v151 = v121;
    v88(v81, v78);
    v83(v81, v82, v78);
    sub_1DC404204();
    v124 = v123;
    v126 = v125;
    v128 = v127;
    v130 = v129;
    v88(v81, v78);
    v83(v81, v82, v78);
    sub_1DC404204();
    v132 = v131;
    v134 = v133;
    v136 = v135;
    v138 = v137;
    v88(v81, v78);
    v214[0] = v156;
    v214[1] = v155;
    *(_QWORD *)&v214[2] = v154;
    *((_QWORD *)&v214[2] + 1) = v153;
    *(_QWORD *)&v214[3] = v152;
    *((_QWORD *)&v214[3] + 1) = v151;
    *(_QWORD *)&v214[4] = v150;
    *((_QWORD *)&v214[4] + 1) = v124;
    *(_QWORD *)&v214[5] = v126;
    *((_QWORD *)&v214[5] + 1) = v128;
    *(_QWORD *)&v214[6] = v130;
    *((_QWORD *)&v214[6] + 1) = v132;
    *(_QWORD *)&v214[7] = v134;
    *((_QWORD *)&v214[7] + 1) = v136;
    *(_QWORD *)&v214[8] = v138;
    sub_1DC199490((uint64_t)v214);
    v118 = v214;
  }
  sub_1DC199104((uint64_t)v118, (uint64_t)v215, &qword_1F034C970);
  v139 = LOBYTE(v207);
  v140 = 1.0;
  if (LOBYTE(v207))
    v141 = 1.0;
  else
    v141 = 0.0;
  if (LOBYTE(v207))
    v142 = 1.0;
  else
    v142 = 0.65;
  v236 = CGRectIntegral(v206);
  v207 = v236.origin.x;
  v206.size.height = v236.origin.y;
  v206.size.width = v236.size.width;
  v206.origin.y = v236.size.height;
  if (v139 >= 2)
    v143 = 0.0;
  else
    v143 = 1.0;
  if (v139 == 1)
    v144 = 1.0;
  else
    v144 = 0.0;
  if (v139 <= 1)
    v140 = 0.0;
  v237 = CGRectIntegral(v208);
  v208.size.height = v237.origin.x;
  v208.size.width = v237.origin.y;
  v208.origin.y = v237.size.width;
  v208.origin.x = v237.size.height;
  v238 = CGRectIntegral(v209);
  v209.size.height = v238.origin.x;
  v209.size.width = v238.origin.y;
  v209.origin.y = v238.size.width;
  v209.origin.x = v238.size.height;
  v239 = CGRectIntegral(v210);
  v145 = v239.origin.x;
  v210.size.height = v239.origin.y;
  v146 = v239.size.width;
  v147 = v239.size.height;
  *(CGFloat *)v214 = v205.size.height;
  *((_QWORD *)&v214[0] + 1) = *(_QWORD *)&v205.size.width;
  *(CGFloat *)&v214[1] = v205.origin.y;
  *((_QWORD *)&v214[1] + 1) = *(_QWORD *)&v205.origin.x;
  v214[2] = v211;
  v214[3] = v212;
  *(CGFloat *)&v214[4] = x;
  *((CGFloat *)&v214[4] + 1) = y;
  *(CGFloat *)&v214[5] = width;
  *((CGFloat *)&v214[5] + 1) = height;
  *(double *)&v214[6] = v141;
  *((double *)&v214[6] + 1) = v142;
  *(_QWORD *)&v214[7] = v200;
  *((_QWORD *)&v214[7] + 1) = v199;
  *(_QWORD *)&v214[8] = v198;
  *((_QWORD *)&v214[8] + 1) = v197;
  *(double *)&v214[9] = v143;
  *((CGFloat *)&v214[9] + 1) = v196;
  *(CGFloat *)&v214[10] = v195;
  *((CGFloat *)&v214[10] + 1) = v194;
  *(CGFloat *)&v214[11] = v193;
  *(CGFloat *)&v214[12] = v192;
  *((CGFloat *)&v214[12] + 1) = v191;
  *(CGFloat *)&v214[13] = v190;
  *((CGFloat *)&v214[13] + 1) = v189;
  *(double *)&v214[14] = v144;
  *((CGFloat *)&v214[14] + 1) = v188;
  *(CGFloat *)&v214[15] = v187;
  *((CGFloat *)&v214[15] + 1) = v186;
  *(CGFloat *)&v214[16] = v185;
  *((double *)&v214[16] + 1) = v140;
  *((_QWORD *)&v214[11] + 1) = v93;
  *(CGFloat *)&v214[17] = v184;
  *((CGFloat *)&v214[17] + 1) = v183;
  *(CGFloat *)&v214[18] = v182;
  *((CGFloat *)&v214[18] + 1) = v181;
  *(CGFloat *)&v214[19] = v176;
  *((CGFloat *)&v214[19] + 1) = v175;
  *(CGFloat *)&v214[20] = v174;
  *((CGFloat *)&v214[20] + 1) = v173;
  *(CGFloat *)&v214[21] = v168;
  *((CGFloat *)&v214[21] + 1) = v167;
  *(CGFloat *)&v214[22] = v166;
  *((CGFloat *)&v214[22] + 1) = v165;
  *(CGFloat *)&v214[23] = v164;
  *((CGFloat *)&v214[23] + 1) = v163;
  *(CGFloat *)&v214[24] = v162;
  *((CGFloat *)&v214[24] + 1) = v161;
  *(double *)&v214[25] = v140;
  *((CGFloat *)&v214[25] + 1) = v160;
  *(CGFloat *)&v214[26] = v159;
  *((CGFloat *)&v214[26] + 1) = v158;
  *(CGFloat *)&v214[27] = v157;
  *((CGFloat *)&v214[27] + 1) = v172;
  *(CGFloat *)&v214[28] = v171;
  *((CGFloat *)&v214[28] + 1) = v170;
  *(CGFloat *)&v214[29] = v169;
  *((CGFloat *)&v214[29] + 1) = v179;
  *(CGFloat *)&v214[30] = v178;
  *((CGFloat *)&v214[30] + 1) = v177;
  *(CGFloat *)&v214[31] = v180;
  sub_1DC199104((uint64_t)v215, (uint64_t)&v214[31] + 8, &qword_1F034C970);
  *((CGFloat *)&v214[40] + 1) = v207;
  *(CGFloat *)&v214[41] = v206.size.height;
  *((_QWORD *)&v214[41] + 1) = *(_QWORD *)&v206.size.width;
  *(CGFloat *)&v214[42] = v206.origin.y;
  *((double *)&v214[42] + 1) = v140;
  *(CGFloat *)&v214[43] = v208.size.height;
  *((_QWORD *)&v214[43] + 1) = *(_QWORD *)&v208.size.width;
  *(CGFloat *)&v214[44] = v208.origin.y;
  *((_QWORD *)&v214[44] + 1) = *(_QWORD *)&v208.origin.x;
  *(CGFloat *)&v214[45] = v209.size.height;
  *((_QWORD *)&v214[45] + 1) = *(_QWORD *)&v209.size.width;
  *(CGFloat *)&v214[46] = v209.origin.y;
  *((_QWORD *)&v214[46] + 1) = *(_QWORD *)&v209.origin.x;
  *(CGFloat *)&v214[47] = v145;
  *((_QWORD *)&v214[47] + 1) = *(_QWORD *)&v210.size.height;
  *(CGFloat *)&v214[48] = v146;
  *((CGFloat *)&v214[48] + 1) = v147;
  return memcpy(v213, v214, 0x310uLL);
}

void sub_1DC19894C(uint64_t a1, uint64_t a2, uint64_t a3, double a4, uint64_t a5, void *a6)
{
  uint64_t v10;
  double v11;
  double v12;
  id v13;
  id v14;
  void *v15;
  _BYTE v16[24];
  uint64_t v17;

  sub_1DC1994D8(a1, (uint64_t)v16);
  if (v17)
  {
    sub_1DC0D0F34();
    if ((swift_dynamicCast() & 1) != 0)
    {
      v10 = *MEMORY[0x1E0DC1138];
      objc_msgSend(a6, sel_removeAttribute_range_, *MEMORY[0x1E0DC1138], a2, a3);
      objc_msgSend(v15, sel_pointSize);
      v12 = round(v11 * a4 * 4.0) * 0.25;
      v13 = objc_msgSend(v15, sel_fontDescriptor);
      v14 = objc_msgSend((id)objc_opt_self(), sel_fontWithDescriptor_size_, v13, v12);

      objc_msgSend(a6, sel_addAttribute_value_range_, v10, v14, a2, a3);
    }
  }
  else
  {
    sub_1DC150744((uint64_t)v16);
  }
}

uint64_t sub_1DC198AAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void (*v9)(__int128 *, uint64_t, uint64_t, uint64_t);
  __int128 v11;
  __int128 v12;

  v9 = *(void (**)(__int128 *, uint64_t, uint64_t, uint64_t))(a1 + 32);
  if (a2)
  {
    *((_QWORD *)&v12 + 1) = swift_getObjectType();
    *(_QWORD *)&v11 = a2;
  }
  else
  {
    v11 = 0u;
    v12 = 0u;
  }
  swift_unknownObjectRetain();
  v9(&v11, a3, a4, a5);
  return sub_1DC150744((uint64_t)&v11);
}

uint64_t type metadata accessor for WelcomeViewLayoutAttributesFactory()
{
  return objc_opt_self();
}

uint64_t sub_1DC198B54@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  double v5;
  uint64_t v6;
  double v7;
  int64x2_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double v21;

  if ((result & 1) != 0)
  {
    v8 = vdupq_lane_s64(0x4054000000000000, 0);
    *(double *)v8.i64 = a3 * 98.0 + 105.0;
    __asm { FMOV            V5.2D, #-1.0 }
    *(double *)&_Q5 = a3 * 15.0 + 6.0;
    v5 = a3 * 58.0 + 172.0;
    v9 = xmmword_1DC412560;
    v10 = xmmword_1DC412570;
    v11 = xmmword_1DC412580;
    v12 = xmmword_1DC412590;
    v7 = 24.0;
    v14 = 0x4071200000000000;
    v15 = 0x4041800000000000;
    v6 = 0x404A000000000000;
    v16 = 0x4054800000000000;
  }
  else
  {
    v5 = a3 * -32.0 + 218.0;
    v21 = a3 * 14.0 + 125.0;
    result = sub_1DC401900();
    v7 = a3 * 26.0 + 22.0;
    v8 = vdupq_lane_s64(0x4061B00000000000, 0);
    *(double *)v8.i64 = v21;
    v9 = xmmword_1DC4125A0;
    v10 = xmmword_1DC4125B0;
    v11 = xmmword_1DC4125C0;
    v12 = xmmword_1DC4125D0;
    _Q5 = xmmword_1DC4125E0;
    v14 = 0x407EA00000000000;
    v15 = 0x4040800000000000;
    v16 = 0x4061600000000000;
  }
  *(_QWORD *)a2 = v14;
  *(double *)(a2 + 8) = v5;
  *(int64x2_t *)(a2 + 16) = v8;
  *(_QWORD *)(a2 + 32) = v15;
  *(_QWORD *)(a2 + 40) = v6;
  *(double *)(a2 + 48) = v7;
  *(_OWORD *)(a2 + 56) = _Q5;
  *(_OWORD *)(a2 + 72) = v12;
  *(_OWORD *)(a2 + 88) = v11;
  *(_OWORD *)(a2 + 104) = v10;
  *(_OWORD *)(a2 + 120) = v9;
  *(_QWORD *)(a2 + 136) = v16;
  *(_QWORD *)(a2 + 144) = 0x403E000000000000;
  return result;
}

uint64_t sub_1DC198D28(uint64_t a1)
{
  id v2;

  v2 = *(id *)(a1 + 16);
  return a1;
}

void sub_1DC198D50(void *a1@<X0>, uint64_t a2@<X8>, double a3@<D0>, CGFloat a4@<D1>)
{
  id v5;
  void *v6;
  double v7;
  uint64_t v8;
  double v9;
  id v10;
  double v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  double v22;
  double v23;
  double v24;
  double v25;
  CGFloat v27;
  CGFloat v28;
  CGFloat v29;
  CGFloat v30;
  uint64_t v33;
  _QWORD aBlock[7];
  CGRect v35;
  CGRect v36;
  CGRect v37;
  CGRect v38;
  CGRect v39;
  CGRect v40;
  CGRect v41;
  CGRect v42;
  CGRect v43;

  objc_msgSend(a1, sel_boundingRectWithSize_options_context_, 1, 0);
  v33 = *MEMORY[0x1E0DC1138];
  v5 = a1;
  v6 = 0;
  v7 = 1.0;
  v8 = 7;
  v9 = 0.75;
  v30 = 0.0;
  v28 = 0.0;
  v29 = 0.0;
  v27 = 0.0;
  v10 = v5;
  v11 = 0.5;
  do
  {
    v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3778]), sel_initWithAttributedString_, v5);
    v13 = objc_msgSend(v5, sel_length);
    v14 = swift_allocObject();
    *(_QWORD *)(v14 + 16) = v12;
    *(double *)(v14 + 24) = v9;
    v15 = swift_allocObject();
    *(_QWORD *)(v15 + 16) = sub_1DC1994BC;
    *(_QWORD *)(v15 + 24) = v14;
    aBlock[4] = sub_1DC080634;
    aBlock[5] = v15;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1DC198AAC;
    aBlock[3] = &block_descriptor_4;
    v16 = _Block_copy(aBlock);
    v17 = v12;
    swift_retain();
    swift_release();
    objc_msgSend(v5, sel_enumerateAttribute_inRange_options_usingBlock_, v33, 0, v13, 0, v16);
    _Block_release(v16);
    LOBYTE(v13) = swift_isEscapingClosureAtFileLocation();

    swift_release();
    swift_release();
    if ((v13 & 1) != 0)
    {
      __break(1u);
      return;
    }
    v10 = v17;
    objc_msgSend(v10, sel_boundingRectWithSize_options_context_, 1, 0, a3, 1.79769313e308);
    x = v35.origin.x;
    y = v35.origin.y;
    width = v35.size.width;
    height = v35.size.height;
    if (CGRectGetHeight(v35) <= a4)
    {

      v6 = v10;
      v29 = y;
      v30 = x;
      v27 = height;
      v28 = width;
      v11 = v9;
    }
    else
    {

      v7 = v9;
    }
    if (v7 - v11 < 0.001)
      break;
    v9 = v11 + (v7 - v11) * 0.5;
    --v8;
  }
  while (v8);
  if (v6)
  {
    v36.origin.x = v30;
    v36.origin.y = v29;
    v36.size.width = v28;
    v36.size.height = v27;
    v22 = floor(CGRectGetMinX(v36));
    v37.origin.x = v30;
    v37.origin.y = v29;
    v37.size.width = v28;
    v37.size.height = v27;
    v23 = floor(CGRectGetMinY(v37));
    v38.origin.x = v30;
    v38.origin.y = v29;
    v38.size.width = v28;
    v38.size.height = v27;
    v24 = ceil(CGRectGetWidth(v38));
    v39.origin.x = v30;
    v39.origin.y = v29;
    v39.size.width = v28;
    v39.size.height = v27;
    v25 = CGRectGetHeight(v39);

    v10 = v6;
  }
  else
  {
    v40.origin.x = x;
    v40.origin.y = y;
    v40.size.width = width;
    v40.size.height = height;
    v22 = floor(CGRectGetMinX(v40));
    v41.origin.x = x;
    v41.origin.y = y;
    v41.size.width = width;
    v41.size.height = height;
    v23 = floor(CGRectGetMinY(v41));
    v42.origin.x = x;
    v42.origin.y = y;
    v42.size.width = width;
    v42.size.height = height;
    v24 = ceil(CGRectGetWidth(v42));
    v43.origin.x = x;
    v43.origin.y = y;
    v43.size.width = width;
    v43.size.height = height;
    v25 = CGRectGetHeight(v43);
  }
  *(_QWORD *)a2 = v10;
  *(double *)(a2 + 8) = v22;
  *(double *)(a2 + 16) = v23;
  *(double *)(a2 + 24) = v24;
  *(double *)(a2 + 32) = ceil(v25);
}

double sub_1DC1990E0(uint64_t a1)
{
  double result;

  *(_QWORD *)(a1 + 128) = 0;
  result = 0.0;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_BYTE *)(a1 + 136) = 1;
  return result;
}

uint64_t sub_1DC199104(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  uint64_t v5;

  sub_1DC0D4B28(0, a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

CGFloat sub_1DC199150(uint64_t a1, uint64_t a2, double *a3, uint64_t a4, uint64_t a5, CGFloat a6, CGFloat a7, CGFloat a8, CGFloat a9, double a10, double a11, double a12, double a13)
{
  uint64_t *boxed_opaque_existential_1;
  void *v21;
  void *v22;
  double v23;
  double v24;
  double v25;
  double v26;
  CGFloat v27;
  double v28;
  CGFloat v29;
  double v30;
  CGFloat v31;
  double v32;
  CGFloat v33;
  CGFloat v34;
  _BYTE v37[32];
  uint64_t v38[3];
  uint64_t v39;
  uint64_t v40;
  CGRect v41;
  CGRect v42;

  *(double *)&v37[16] = a12;
  *(double *)&v37[24] = a13;
  *(double *)v37 = a10;
  *(double *)&v37[8] = a11;
  v39 = a4;
  v40 = a5;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v38);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 16))(boxed_opaque_existential_1, a1, a4);
  __swift_project_boxed_opaque_existential_1(v38, v39);
  v21 = (void *)sub_1DC357248(*(void **)(a2 + 152));
  sub_1DC0D0F34();
  objc_msgSend((id)objc_opt_self(), sel_systemFontSize);
  v22 = (void *)sub_1DC4092F8();
  objc_msgSend(v22, sel_pointSize);
  v24 = v23;

  if (v24 >= 20.0)
    v25 = *a3;
  else
    v25 = a3[14] + 10.0;
  objc_msgSend(v21, sel_boundingRectWithSize_options_context_, 3, 0, v25, 1.79769313e308);
  v27 = v26;
  v29 = v28;
  v31 = v30;
  v33 = v32;
  v41.origin.x = a6;
  v41.origin.y = a7;
  v41.size.width = a8;
  v41.size.height = a9;
  v34 = CGRectGetWidth(v41) * 0.5 - v25 * 0.5;
  CGRectGetMaxY(*(CGRect *)v37);
  v42.origin.x = v27;
  v42.origin.y = v29;
  v42.size.width = v31;
  v42.size.height = v33;
  CGRectGetHeight(v42);

  __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
  return v34;
}

void *sub_1DC19932C@<X0>(void *a1@<X8>)
{
  uint64_t v1;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;

  v18 = *(_OWORD *)(v1 + 464);
  v19 = *(_OWORD *)(v1 + 488);
  v16 = *(_OWORD *)(v1 + 432);
  v17 = *(_OWORD *)(v1 + 448);
  v14 = *(_OWORD *)(v1 + 400);
  v15 = *(_OWORD *)(v1 + 416);
  v12 = *(_OWORD *)(v1 + 368);
  v13 = *(_OWORD *)(v1 + 384);
  v10 = *(_OWORD *)(v1 + 336);
  v11 = *(_OWORD *)(v1 + 352);
  v8 = *(_OWORD *)(v1 + 304);
  v9 = *(_OWORD *)(v1 + 320);
  v6 = *(_OWORD *)(v1 + 272);
  v7 = *(_OWORD *)(v1 + 288);
  v4 = *(_OWORD *)(v1 + 240);
  v5 = *(_OWORD *)(v1 + 256);
  v3 = *(_OWORD *)(v1 + 208);
  return sub_1DC197E00(*(unsigned __int8 *)(v1 + 112), *(void **)(v1 + 184), *(_QWORD *)(v1 + 480), a1, *(CGFloat *)(v1 + 16), *(CGFloat *)(v1 + 24), *(CGFloat *)(v1 + 32), *(CGFloat *)(v1 + 40), *(double *)(v1 + 48), *(double *)(v1 + 56), *(double *)(v1 + 64), *(double *)(v1 + 72), *(CGFloat *)(v1 + 80), *(CGFloat *)(v1 + 88), *(CGFloat *)(v1 + 96), *(CGFloat *)(v1 + 104), *(CGFloat *)(v1 + 120), *(CGFloat *)(v1 + 128), *(CGFloat *)(v1 + 136),
           *(CGFloat *)(v1 + 144),
           *(double *)(v1 + 152),
           *(double *)(v1 + 160),
           *(double *)(v1 + 168),
           *(double *)(v1 + 176),
           *(double *)(v1 + 192),
           *(double *)(v1 + 200),
           *(double *)&v3,
           *((double *)&v3 + 1),
           *(double *)(v1 + 224),
           *(double *)(v1 + 232),
           *(double *)&v4,
           *((double *)&v4 + 1),
           *(double *)&v5,
           *((double *)&v5 + 1),
           *(double *)&v6,
           *((double *)&v6 + 1),
           *(double *)&v7,
           *((double *)&v7 + 1),
           *(double *)&v8,
           *((double *)&v8 + 1),
           *(double *)&v9,
           *((double *)&v9 + 1),
           *(double *)&v10,
           *((double *)&v10 + 1),
           *(double *)&v11,
           *((double *)&v11 + 1),
           *(double *)&v12,
           *((double *)&v12 + 1),
           *(double *)&v13,
           *((double *)&v13 + 1),
           *(double *)&v14,
           *((double *)&v14 + 1),
           *(double *)&v15,
           *((double *)&v15 + 1),
           *(double *)&v16,
           *((double *)&v16 + 1),
           *(double *)&v17,
           *((double *)&v17 + 1),
           *(double *)&v18,
           *((double *)&v18 + 1),
           *(CGFloat *)&v19,
           *((CGFloat *)&v19 + 1),
           *(CGFloat *)(v1 + 504));
}

uint64_t sub_1DC199468(uint64_t a1)
{

  return a1;
}

uint64_t sub_1DC199490(uint64_t result)
{
  *(_BYTE *)(result + 136) = 0;
  return result;
}

uint64_t sub_1DC199498()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1DC1994BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_1DC19894C(a1, a2, a3, *(double *)(v4 + 24), a4, *(void **)(v4 + 16));
}

uint64_t sub_1DC1994C8()
{
  return swift_deallocObject();
}

uint64_t sub_1DC1994D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1DC0D4B28(0, (unint64_t *)&qword_1EDB40100);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t *sub_1DC199530(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  char *v21;
  _QWORD *v22;
  char *v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  _QWORD *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  char *v47;
  uint64_t v48;
  char *v50;
  char *v51;
  char *v52;
  char *v53;
  void (*v54)(char *, char *, uint64_t);
  uint64_t v55;
  int *v56;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v31 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v31 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    v7 = *(int *)(a3 + 24);
    v8 = (uint64_t *)((char *)a1 + v7);
    v9 = (char *)a2 + v7;
    v10 = *(uint64_t *)((char *)a2 + v7 + 8);
    *v8 = *(uint64_t *)((char *)a2 + v7);
    v8[1] = v10;
    v56 = (int *)type metadata accessor for QuoteSummaryViewModel();
    v11 = v56[5];
    v12 = (char *)v8 + v11;
    v13 = &v9[v11];
    *(_QWORD *)v12 = *(_QWORD *)&v9[v11];
    v12[8] = v9[v11 + 8];
    *((_QWORD *)v12 + 2) = *(_QWORD *)&v9[v11 + 16];
    v12[24] = v9[v11 + 24];
    *((_QWORD *)v12 + 4) = *(_QWORD *)&v9[v11 + 32];
    v12[40] = v9[v11 + 40];
    v14 = *(_QWORD *)&v9[v11 + 56];
    *((_QWORD *)v12 + 6) = *(_QWORD *)&v9[v11 + 48];
    *((_QWORD *)v12 + 7) = v14;
    v15 = *(_QWORD *)&v9[v11 + 72];
    *((_QWORD *)v12 + 8) = *(_QWORD *)&v9[v11 + 64];
    *((_QWORD *)v12 + 9) = v15;
    v12[80] = v9[v11 + 80];
    v16 = type metadata accessor for PriceViewModel();
    v17 = *(int *)(v16 + 40);
    v50 = &v13[v17];
    v51 = &v12[v17];
    v18 = sub_1DC4011C8();
    v19 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v54 = v19;
    v55 = v18;
    v19(v51, v50, v18);
    v20 = *(int *)(v16 + 44);
    v21 = &v12[v20];
    v22 = v8;
    v23 = &v13[v20];
    v24 = sub_1DC400118();
    v25 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16);
    v25(v21, v23, v24);
    v26 = v56[6];
    v27 = (_QWORD *)((char *)v22 + v26);
    v28 = &v9[v26];
    v29 = *(_QWORD *)(v16 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(&v9[v26], 1, v16))
    {
      sub_1DC199830();
      memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    }
    else
    {
      *v27 = *(_QWORD *)v28;
      *((_BYTE *)v27 + 8) = v28[8];
      v27[2] = *((_QWORD *)v28 + 2);
      *((_BYTE *)v27 + 24) = v28[24];
      v27[4] = *((_QWORD *)v28 + 4);
      *((_BYTE *)v27 + 40) = v28[40];
      v32 = *((_QWORD *)v28 + 7);
      v27[6] = *((_QWORD *)v28 + 6);
      v27[7] = v32;
      v33 = *((_QWORD *)v28 + 9);
      v27[8] = *((_QWORD *)v28 + 8);
      v27[9] = v33;
      *((_BYTE *)v27 + 80) = v28[80];
      v34 = *(int *)(v16 + 40);
      v52 = (char *)v27 + v34;
      v53 = v9;
      v35 = &v28[v34];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v36 = v35;
      v9 = v53;
      v54(v52, v36, v55);
      v25((char *)v27 + *(int *)(v16 + 44), &v28[*(int *)(v16 + 44)], v24);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v27, 0, 1, v16);
    }
    v37 = v56[7];
    v38 = (char *)v22 + v37;
    v39 = &v9[v37];
    v40 = sub_1DC4008EC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 16))(v38, v39, v40);
    v41 = v56[8];
    v42 = (char *)v22 + v41;
    v43 = &v9[v41];
    v44 = sub_1DC4002BC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 16))(v42, v43, v44);
    v45 = v56[9];
    v46 = (_QWORD *)((char *)v22 + v45);
    v47 = &v9[v45];
    v48 = *((_QWORD *)v47 + 1);
    *v46 = *(_QWORD *)v47;
    v46[1] = v48;
    swift_bridgeObjectRetain();
  }
  return v3;
}

void sub_1DC199830()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB2D5E8)
  {
    type metadata accessor for PriceViewModel();
    v0 = sub_1DC4095A4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB2D5E8);
  }
}

_QWORD *sub_1DC199884(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  int *v19;
  uint64_t v20;
  char *v21;
  _QWORD *v22;
  char *v23;
  char *v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  _QWORD *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  char *v47;
  uint64_t v48;
  char *v50;
  char *v51;
  void (*v52)(char *, char *, uint64_t);
  uint64_t v53;
  uint64_t v55;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = *(int *)(a3 + 24);
  v6 = (_QWORD *)((char *)a1 + v5);
  v7 = (char *)a2 + v5;
  v8 = *(_QWORD *)((char *)a2 + v5 + 8);
  *v6 = *(_QWORD *)((char *)a2 + v5);
  v6[1] = v8;
  v55 = type metadata accessor for QuoteSummaryViewModel();
  v9 = *(int *)(v55 + 20);
  v10 = (char *)v6 + v9;
  v11 = &v7[v9];
  *(_QWORD *)v10 = *(_QWORD *)&v7[v9];
  v10[8] = v7[v9 + 8];
  *((_QWORD *)v10 + 2) = *(_QWORD *)&v7[v9 + 16];
  v10[24] = v7[v9 + 24];
  *((_QWORD *)v10 + 4) = *(_QWORD *)&v7[v9 + 32];
  v10[40] = v7[v9 + 40];
  v12 = *(_QWORD *)&v7[v9 + 56];
  *((_QWORD *)v10 + 6) = *(_QWORD *)&v7[v9 + 48];
  *((_QWORD *)v10 + 7) = v12;
  v13 = *(_QWORD *)&v7[v9 + 72];
  *((_QWORD *)v10 + 8) = *(_QWORD *)&v7[v9 + 64];
  *((_QWORD *)v10 + 9) = v13;
  v10[80] = v7[v9 + 80];
  v14 = type metadata accessor for PriceViewModel();
  v15 = *(int *)(v14 + 40);
  v16 = &v10[v15];
  v50 = &v11[v15];
  v17 = sub_1DC4011C8();
  v18 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v19 = (int *)v55;
  swift_bridgeObjectRetain();
  v52 = v18;
  v53 = v17;
  v18(v16, v50, v17);
  v20 = *(int *)(v14 + 44);
  v21 = &v10[v20];
  v22 = v6;
  v23 = &v11[v20];
  v24 = v7;
  v25 = sub_1DC400118();
  v26 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16);
  v26(v21, v23, v25);
  v27 = *(int *)(v55 + 24);
  v28 = (_QWORD *)((char *)v22 + v27);
  v29 = &v24[v27];
  v30 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(&v24[v27], 1, v14))
  {
    sub_1DC199830();
    memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
  }
  else
  {
    *v28 = *(_QWORD *)v29;
    *((_BYTE *)v28 + 8) = v29[8];
    v28[2] = *((_QWORD *)v29 + 2);
    *((_BYTE *)v28 + 24) = v29[24];
    v28[4] = *((_QWORD *)v29 + 4);
    *((_BYTE *)v28 + 40) = v29[40];
    v32 = *((_QWORD *)v29 + 7);
    v28[6] = *((_QWORD *)v29 + 6);
    v28[7] = v32;
    v33 = *((_QWORD *)v29 + 9);
    v28[8] = *((_QWORD *)v29 + 8);
    v28[9] = v33;
    *((_BYTE *)v28 + 80) = v29[80];
    v34 = *(int *)(v14 + 40);
    v51 = (char *)v28 + v34;
    v35 = &v29[v34];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v36 = v35;
    v19 = (int *)v55;
    v52(v51, v36, v53);
    v26((char *)v28 + *(int *)(v14 + 44), &v29[*(int *)(v14 + 44)], v25);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v28, 0, 1, v14);
  }
  v37 = v19[7];
  v38 = (char *)v22 + v37;
  v39 = &v24[v37];
  v40 = sub_1DC4008EC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 16))(v38, v39, v40);
  v41 = v19[8];
  v42 = (char *)v22 + v41;
  v43 = &v24[v41];
  v44 = sub_1DC4002BC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 16))(v42, v43, v44);
  v45 = v19[9];
  v46 = (_QWORD *)((char *)v22 + v45);
  v47 = &v24[v45];
  v48 = *((_QWORD *)v47 + 1);
  *v46 = *(_QWORD *)v47;
  v46[1] = v48;
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_1DC199B5C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, char *);
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  void (*v23)(char *, char *);
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t (*v27)(char *, uint64_t, uint64_t);
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  void (*v35)(uint64_t, char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  int *v57;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 24);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  *(_QWORD *)v7 = *(_QWORD *)((char *)a2 + v6);
  *((_QWORD *)v7 + 1) = *(_QWORD *)((char *)a2 + v6 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v9 = type metadata accessor for QuoteSummaryViewModel();
  v10 = *(int *)(v9 + 20);
  v11 = &v7[v10];
  v12 = &v8[v10];
  LOBYTE(v10) = v8[v10 + 8];
  *(_QWORD *)v11 = *(_QWORD *)v12;
  v11[8] = v10;
  LOBYTE(v10) = v12[24];
  *((_QWORD *)v11 + 2) = *((_QWORD *)v12 + 2);
  v11[24] = v10;
  LOBYTE(v10) = v12[40];
  *((_QWORD *)v11 + 4) = *((_QWORD *)v12 + 4);
  v11[40] = v10;
  *((_QWORD *)v11 + 6) = *((_QWORD *)v12 + 6);
  *((_QWORD *)v11 + 7) = *((_QWORD *)v12 + 7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)v11 + 8) = *((_QWORD *)v12 + 8);
  *((_QWORD *)v11 + 9) = *((_QWORD *)v12 + 9);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v11[80] = v12[80];
  v13 = type metadata accessor for PriceViewModel();
  v14 = *(int *)(v13 + 40);
  v15 = &v11[v14];
  v16 = &v12[v14];
  v17 = sub_1DC4011C8();
  v53 = *(_QWORD *)(v17 - 8);
  v18 = *(void (**)(char *, char *))(v53 + 24);
  v55 = v17;
  v18(v15, v16);
  v19 = *(int *)(v13 + 44);
  v20 = &v11[v19];
  v21 = &v12[v19];
  v22 = sub_1DC400118();
  v54 = *(_QWORD *)(v22 - 8);
  v23 = *(void (**)(char *, char *))(v54 + 24);
  v56 = v22;
  v23(v20, v21);
  v57 = (int *)v9;
  v24 = *(int *)(v9 + 24);
  v25 = (uint64_t)&v7[v24];
  v26 = &v8[v24];
  v52 = *(_QWORD *)(v13 - 8);
  v27 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v52 + 48);
  LODWORD(v9) = v27(&v7[v24], 1, v13);
  v28 = v27(v26, 1, v13);
  if (!(_DWORD)v9)
  {
    if (!v28)
    {
      v49 = *(_QWORD *)v26;
      *(_BYTE *)(v25 + 8) = v26[8];
      *(_QWORD *)v25 = v49;
      v50 = *((_QWORD *)v26 + 2);
      *(_BYTE *)(v25 + 24) = v26[24];
      *(_QWORD *)(v25 + 16) = v50;
      v51 = *((_QWORD *)v26 + 4);
      *(_BYTE *)(v25 + 40) = v26[40];
      *(_QWORD *)(v25 + 32) = v51;
      *(_QWORD *)(v25 + 48) = *((_QWORD *)v26 + 6);
      *(_QWORD *)(v25 + 56) = *((_QWORD *)v26 + 7);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v25 + 64) = *((_QWORD *)v26 + 8);
      *(_QWORD *)(v25 + 72) = *((_QWORD *)v26 + 9);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v25 + 80) = v26[80];
      ((void (*)(uint64_t, char *, uint64_t))v18)(v25 + *(int *)(v13 + 40), &v26[*(int *)(v13 + 40)], v55);
      ((void (*)(uint64_t, char *, uint64_t))v23)(v25 + *(int *)(v13 + 44), &v26[*(int *)(v13 + 44)], v56);
      goto LABEL_7;
    }
    sub_1DC0926D8(v25, (uint64_t (*)(_QWORD))type metadata accessor for PriceViewModel);
    goto LABEL_6;
  }
  if (v28)
  {
LABEL_6:
    sub_1DC199830();
    memcpy((void *)v25, v26, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
    goto LABEL_7;
  }
  v29 = *(_QWORD *)v26;
  *(_BYTE *)(v25 + 8) = v26[8];
  *(_QWORD *)v25 = v29;
  v30 = *((_QWORD *)v26 + 2);
  *(_BYTE *)(v25 + 24) = v26[24];
  *(_QWORD *)(v25 + 16) = v30;
  v31 = *((_QWORD *)v26 + 4);
  *(_BYTE *)(v25 + 40) = v26[40];
  *(_QWORD *)(v25 + 32) = v31;
  *(_QWORD *)(v25 + 48) = *((_QWORD *)v26 + 6);
  *(_QWORD *)(v25 + 56) = *((_QWORD *)v26 + 7);
  *(_QWORD *)(v25 + 64) = *((_QWORD *)v26 + 8);
  *(_QWORD *)(v25 + 72) = *((_QWORD *)v26 + 9);
  *(_BYTE *)(v25 + 80) = v26[80];
  v32 = *(int *)(v13 + 40);
  v33 = v25 + v32;
  v34 = &v26[v32];
  v35 = *(void (**)(uint64_t, char *, uint64_t))(v53 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v35(v33, v34, v55);
  (*(void (**)(uint64_t, char *, uint64_t))(v54 + 16))(v25 + *(int *)(v13 + 44), &v26[*(int *)(v13 + 44)], v56);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v52 + 56))(v25, 0, 1, v13);
LABEL_7:
  v37 = v57[7];
  v38 = &v7[v37];
  v39 = &v8[v37];
  v40 = sub_1DC4008EC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 24))(v38, v39, v40);
  v41 = v57[8];
  v42 = &v7[v41];
  v43 = &v8[v41];
  v44 = sub_1DC4002BC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 24))(v42, v43, v44);
  v45 = v57[9];
  v46 = &v7[v45];
  v47 = &v8[v45];
  *(_QWORD *)v46 = *(_QWORD *)v47;
  *((_QWORD *)v46 + 1) = *((_QWORD *)v47 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_1DC199F84(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v3;
  uint64_t v4;
  char *v5;
  char *v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  void (*v37)(char *, char *, uint64_t);

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = *(int *)(a3 + 24);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  *(_OWORD *)((char *)a1 + v4) = *(_OWORD *)((char *)a2 + v4);
  v7 = (int *)type metadata accessor for QuoteSummaryViewModel();
  v8 = v7[5];
  v9 = &v5[v8];
  v10 = &v6[v8];
  *(_QWORD *)v9 = *(_QWORD *)&v6[v8];
  v9[8] = v6[v8 + 8];
  *((_QWORD *)v9 + 2) = *(_QWORD *)&v6[v8 + 16];
  v9[24] = v6[v8 + 24];
  *((_QWORD *)v9 + 4) = *(_QWORD *)&v6[v8 + 32];
  v9[40] = v6[v8 + 40];
  v11 = *(_OWORD *)&v6[v8 + 64];
  *((_OWORD *)v9 + 3) = *(_OWORD *)&v6[v8 + 48];
  *((_OWORD *)v9 + 4) = v11;
  v9[80] = v6[v8 + 80];
  v12 = type metadata accessor for PriceViewModel();
  v13 = *(int *)(v12 + 40);
  v14 = &v9[v13];
  v15 = &v10[v13];
  v16 = sub_1DC4011C8();
  v37 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32);
  v37(v14, v15, v16);
  v17 = *(int *)(v12 + 44);
  v18 = &v9[v17];
  v19 = &v10[v17];
  v20 = sub_1DC400118();
  v21 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32);
  v21(v18, v19, v20);
  v22 = v7[6];
  v23 = &v5[v22];
  v24 = &v6[v22];
  v25 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(&v6[v22], 1, v12))
  {
    sub_1DC199830();
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
  }
  else
  {
    *(_QWORD *)v23 = *(_QWORD *)v24;
    v23[8] = v24[8];
    *((_QWORD *)v23 + 2) = *((_QWORD *)v24 + 2);
    v23[24] = v24[24];
    *((_QWORD *)v23 + 4) = *((_QWORD *)v24 + 4);
    v23[40] = v24[40];
    v27 = *((_OWORD *)v24 + 4);
    *((_OWORD *)v23 + 3) = *((_OWORD *)v24 + 3);
    *((_OWORD *)v23 + 4) = v27;
    v23[80] = v24[80];
    v37(&v23[*(int *)(v12 + 40)], &v24[*(int *)(v12 + 40)], v16);
    v21(&v23[*(int *)(v12 + 44)], &v24[*(int *)(v12 + 44)], v20);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v23, 0, 1, v12);
  }
  v28 = v7[7];
  v29 = &v5[v28];
  v30 = &v6[v28];
  v31 = sub_1DC4008EC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(v29, v30, v31);
  v32 = v7[8];
  v33 = &v5[v32];
  v34 = &v6[v32];
  v35 = sub_1DC4002BC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 32))(v33, v34, v35);
  *(_OWORD *)&v5[v7[9]] = *(_OWORD *)&v6[v7[9]];
  return a1;
}

_QWORD *sub_1DC19A1E0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  void (*v23)(char *, char *);
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  void (*v28)(char *, char *);
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t (*v33)(char *, uint64_t, uint64_t);
  int v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  int *v58;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = *(int *)(a3 + 24);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = *(_QWORD *)((char *)a2 + v8 + 8);
  *(_QWORD *)v9 = *(_QWORD *)((char *)a2 + v8);
  *((_QWORD *)v9 + 1) = v11;
  swift_bridgeObjectRelease();
  v12 = type metadata accessor for QuoteSummaryViewModel();
  v13 = *(int *)(v12 + 20);
  v14 = &v9[v13];
  v15 = &v10[v13];
  *(_QWORD *)v14 = *(_QWORD *)&v10[v13];
  v14[8] = v10[v13 + 8];
  *((_QWORD *)v14 + 2) = *(_QWORD *)&v10[v13 + 16];
  v14[24] = v10[v13 + 24];
  *((_QWORD *)v14 + 4) = *(_QWORD *)&v10[v13 + 32];
  v14[40] = v10[v13 + 40];
  v16 = *(_QWORD *)&v10[v13 + 56];
  *((_QWORD *)v14 + 6) = *(_QWORD *)&v10[v13 + 48];
  *((_QWORD *)v14 + 7) = v16;
  swift_bridgeObjectRelease();
  v17 = *((_QWORD *)v15 + 9);
  *((_QWORD *)v14 + 8) = *((_QWORD *)v15 + 8);
  *((_QWORD *)v14 + 9) = v17;
  swift_bridgeObjectRelease();
  v14[80] = v15[80];
  v18 = type metadata accessor for PriceViewModel();
  v19 = *(int *)(v18 + 40);
  v20 = &v14[v19];
  v21 = &v15[v19];
  v22 = sub_1DC4011C8();
  v54 = *(_QWORD *)(v22 - 8);
  v55 = v22;
  v23 = *(void (**)(char *, char *))(v54 + 40);
  v23(v20, v21);
  v24 = *(int *)(v18 + 44);
  v25 = &v14[v24];
  v26 = &v15[v24];
  v27 = sub_1DC400118();
  v53 = *(_QWORD *)(v27 - 8);
  v28 = *(void (**)(char *, char *))(v53 + 40);
  v56 = v27;
  v28(v25, v26);
  v57 = v10;
  v58 = (int *)v12;
  v29 = *(int *)(v12 + 24);
  v30 = (uint64_t)&v9[v29];
  v31 = &v10[v29];
  v32 = *(_QWORD *)(v18 - 8);
  v33 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v32 + 48);
  LODWORD(v10) = v33(&v9[v29], 1, v18);
  v34 = v33(v31, 1, v18);
  if (!(_DWORD)v10)
  {
    if (!v34)
    {
      *(_QWORD *)v30 = *(_QWORD *)v31;
      *(_BYTE *)(v30 + 8) = v31[8];
      *(_QWORD *)(v30 + 16) = *((_QWORD *)v31 + 2);
      *(_BYTE *)(v30 + 24) = v31[24];
      *(_QWORD *)(v30 + 32) = *((_QWORD *)v31 + 4);
      *(_BYTE *)(v30 + 40) = v31[40];
      v51 = *((_QWORD *)v31 + 7);
      *(_QWORD *)(v30 + 48) = *((_QWORD *)v31 + 6);
      *(_QWORD *)(v30 + 56) = v51;
      swift_bridgeObjectRelease();
      v52 = *((_QWORD *)v31 + 9);
      *(_QWORD *)(v30 + 64) = *((_QWORD *)v31 + 8);
      *(_QWORD *)(v30 + 72) = v52;
      swift_bridgeObjectRelease();
      *(_BYTE *)(v30 + 80) = v31[80];
      ((void (*)(uint64_t, char *, uint64_t))v23)(v30 + *(int *)(v18 + 40), &v31[*(int *)(v18 + 40)], v55);
      ((void (*)(uint64_t, char *, uint64_t))v28)(v30 + *(int *)(v18 + 44), &v31[*(int *)(v18 + 44)], v56);
      goto LABEL_7;
    }
    sub_1DC0926D8(v30, (uint64_t (*)(_QWORD))type metadata accessor for PriceViewModel);
    goto LABEL_6;
  }
  if (v34)
  {
LABEL_6:
    sub_1DC199830();
    memcpy((void *)v30, v31, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
    goto LABEL_7;
  }
  *(_QWORD *)v30 = *(_QWORD *)v31;
  *(_BYTE *)(v30 + 8) = v31[8];
  *(_QWORD *)(v30 + 16) = *((_QWORD *)v31 + 2);
  *(_BYTE *)(v30 + 24) = v31[24];
  *(_QWORD *)(v30 + 32) = *((_QWORD *)v31 + 4);
  *(_BYTE *)(v30 + 40) = v31[40];
  v35 = *((_OWORD *)v31 + 4);
  *(_OWORD *)(v30 + 48) = *((_OWORD *)v31 + 3);
  *(_OWORD *)(v30 + 64) = v35;
  *(_BYTE *)(v30 + 80) = v31[80];
  (*(void (**)(uint64_t, char *, uint64_t))(v54 + 32))(v30 + *(int *)(v18 + 40), &v31[*(int *)(v18 + 40)], v55);
  (*(void (**)(uint64_t, char *, uint64_t))(v53 + 32))(v30 + *(int *)(v18 + 44), &v31[*(int *)(v18 + 44)], v56);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v32 + 56))(v30, 0, 1, v18);
LABEL_7:
  v37 = v58[7];
  v38 = &v9[v37];
  v39 = &v57[v37];
  v40 = sub_1DC4008EC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 40))(v38, v39, v40);
  v41 = v58[8];
  v42 = &v9[v41];
  v43 = &v57[v41];
  v44 = sub_1DC4002BC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 40))(v42, v43, v44);
  v45 = v58[9];
  v46 = &v9[v45];
  v47 = &v57[v45];
  v49 = *(_QWORD *)v47;
  v48 = *((_QWORD *)v47 + 1);
  *(_QWORD *)v46 = v49;
  *((_QWORD *)v46 + 1) = v48;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1DC19A54C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC19A558(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for QuoteSummaryViewModel();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t sub_1DC19A5D4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC19A5E0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for QuoteSummaryViewModel();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

ValueMetadata *type metadata accessor for StockSearchRelayoutBlueprintModifier()
{
  return &type metadata for StockSearchRelayoutBlueprintModifier;
}

uint64_t sub_1DC19A664(uint64_t a1, void (*a2)(char *))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  sub_1DC187FFC(0, (unint64_t *)&qword_1EDB41E18, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB9A28]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v15 - v7;
  sub_1DC1881DC();
  v10 = &v8[*(int *)(v9 + 48)];
  sub_1DC187FFC(0, (unint64_t *)&qword_1EDB2AB88, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790]);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v8, a1, v11);
  v12 = *MEMORY[0x1E0DB7FB8];
  v13 = sub_1DC404984();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v10, v12, v13);
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0DB9A00], v5);
  a2(v8);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1DC19A78C()
{
  unint64_t result;

  result = qword_1F034D600;
  if (!qword_1F034D600)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC4126F8, &type metadata for StockSearchRelayoutBlueprintModifier);
    atomic_store(result, (unint64_t *)&qword_1F034D600);
  }
  return result;
}

uint64_t sub_1DC19A7D0()
{
  uint64_t v0;
  _BYTE v2[24];
  uint64_t v3;

  sub_1DC4078A0();
  sub_1DC407894();
  sub_1DC0C3BC0();
  sub_1DC406CF4();
  if (v3)
  {
    sub_1DC407420();
    swift_dynamicCast();
  }
  else
  {
    sub_1DC150744((uint64_t)v2);
  }
  type metadata accessor for ForYouFeedServiceConfig();
  sub_1DC080808(&qword_1EDB347D0, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedServiceConfig, (uint64_t)&unk_1DC431F70);
  v0 = sub_1DC407888();
  swift_release();
  swift_release();
  return v0;
}

unint64_t PreBuyFlowRouteModel.identifier.getter()
{
  id *v0;
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(*v0, sel_itemID);
  if (!v1)
    return 0xD000000000000014;
  v2 = v1;
  v3 = sub_1DC408A4C();

  return v3;
}

unint64_t sub_1DC19A938()
{
  id *v0;
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(*v0, sel_itemID);
  if (!v1)
    return 0xD000000000000014;
  v2 = v1;
  v3 = sub_1DC408A4C();

  return v3;
}

void **initializeBufferWithCopyOfBuffer for PreBuyFlowRouteModel(void **a1, void **a2, uint64_t a3)
{
  int v3;
  char *v4;
  void **v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  char *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = (char *)*a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (void **)&v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    v7 = a1;
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1DC403BD4();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    v13 = v4;
    v12(v9, v10, v11);
    v14 = *(int *)(a3 + 24);
    v15 = (char *)v7 + v14;
    v16 = (char *)a2 + v14;
    v17 = sub_1DC403CA0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
  }
  return v7;
}

uint64_t destroy for PreBuyFlowRouteModel(id *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;

  v4 = (char *)a1 + *(int *)(a2 + 20);
  v5 = sub_1DC403BD4();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = (char *)a1 + *(int *)(a2 + 24);
  v7 = sub_1DC403CA0();
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
}

void **initializeWithCopy for PreBuyFlowRouteModel(void **a1, void **a2, uint64_t a3)
{
  void *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  id v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;

  v6 = *a2;
  *a1 = *a2;
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1DC403BD4();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  v12 = v6;
  v11(v8, v9, v10);
  v13 = *(int *)(a3 + 24);
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = sub_1DC403CA0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
  return a1;
}

void **assignWithCopy for PreBuyFlowRouteModel(void **a1, void **a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;

  v6 = *a2;
  v7 = *a1;
  *a1 = *a2;
  v8 = v6;

  v9 = *(int *)(a3 + 20);
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = sub_1DC403BD4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 24))(v10, v11, v12);
  v13 = *(int *)(a3 + 24);
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = sub_1DC403CA0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 24))(v14, v15, v16);
  return a1;
}

_QWORD *initializeWithTake for PreBuyFlowRouteModel(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1DC403BD4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = *(int *)(a3 + 24);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_1DC403CA0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
  return a1;
}

void **assignWithTake for PreBuyFlowRouteModel(void **a1, void **a2, uint64_t a3)
{
  void *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;

  v6 = *a1;
  *a1 = *a2;

  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1DC403BD4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = sub_1DC403CA0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for PreBuyFlowRouteModel()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC19AD80(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1DC403BD4();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 20);
    }
    else
    {
      v10 = sub_1DC403CA0();
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 24);
    }
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(&a1[v11], a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for PreBuyFlowRouteModel()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_1DC19AE2C(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v8 = sub_1DC403BD4();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 20);
    }
    else
    {
      v10 = sub_1DC403CA0();
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 24);
    }
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(&v5[v11], a2, a2, v10);
  }
  return result;
}

void sub_1DC19AEC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  int *v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(_QWORD *, uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  int *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;

  v4 = v3;
  v57 = a2;
  v58 = a3;
  v5 = sub_1DC4024D0();
  v51 = *(_QWORD **)(v5 - 8);
  v52 = v5;
  MEMORY[0x1E0C80A78](v5);
  v50 = (uint64_t *)((char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = type metadata accessor for StockFeedPrewarmBlueprintModifier();
  v8 = *(_QWORD *)(v7 - 8);
  v60 = (int *)v7;
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x1E0C80A78](v7);
  v59 = (uint64_t)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (_QWORD *)(v3 + *(int *)(v10 + 20));
  v12 = v11[3];
  v56 = v11[4];
  __swift_project_boxed_opaque_existential_1(v11, v12);
  sub_1DC089DA4(0, (unint64_t *)&qword_1EDB3FE20, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF0D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v13 = sub_1DC4010E4();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1DC40DC10;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v14 + 16))(v16 + v15, v4, v13);
  sub_1DC400D24();
  swift_bridgeObjectRelease();
  v17 = v59;
  sub_1DC0990BC(v4, v59, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedPrewarmBlueprintModifier);
  v18 = *(unsigned __int8 *)(v8 + 80);
  v19 = (v18 + 16) & ~v18;
  v56 = v19;
  v54 = v19 + v9;
  v55 = v18 | 7;
  v20 = swift_allocObject();
  sub_1DC092ED0(v17, v20 + v19, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedPrewarmBlueprintModifier);
  v21 = (void *)sub_1DC402C80();
  sub_1DC0FED34(0);
  v53 = sub_1DC402D04();
  swift_release();
  swift_release();

  v22 = v60;
  v23 = v60[6];
  v46 = v4;
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v4 + v23), *(_QWORD *)(v4 + v23 + 24));
  sub_1DC4010B4();
  v48 = v4 + v22[9];
  sub_1DC400604();
  v25 = v50;
  v24 = v51;
  *v50 = v26;
  v27 = *MEMORY[0x1E0DB32B8];
  v47 = (void (*)(_QWORD *, uint64_t, uint64_t))v24[13];
  v28 = v52;
  v47(v25, v27, v52);
  v49 = sub_1DC400BB0();
  swift_bridgeObjectRelease();
  v51 = (_QWORD *)v24[1];
  ((void (*)(_QWORD *, uint64_t))v51)(v25, v28);
  v29 = v46;
  v45 = *(_QWORD *)(v46 + v60[14] + 8);
  swift_getObjectType();
  sub_1DC4010B4();
  sub_1DC4005BC();
  *v25 = v30;
  v47(v25, v27, v28);
  v31 = sub_1DC35ED14();
  swift_bridgeObjectRelease();
  ((void (*)(_QWORD *, uint64_t))v51)(v25, v28);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v29 + v60[7]), *(_QWORD *)(v29 + v60[7] + 24));
  sub_1DC400A54();
  v32 = (void *)sub_1DC402C80();
  sub_1DC1132D4(0);
  sub_1DC402CF8();
  swift_release();

  v33 = (void *)sub_1DC402C80();
  v34 = sub_1DC402D7C();
  swift_release();

  v61 = v53;
  v62 = v49;
  v63 = v31;
  v64 = v34;
  sub_1DC19DC90();
  sub_1DC402E0C();
  v35 = v59;
  sub_1DC0990BC(v29, v59, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedPrewarmBlueprintModifier);
  v36 = (v54 + 7) & 0xFFFFFFFFFFFFFFF8;
  v37 = swift_allocObject();
  sub_1DC092ED0(v35, v37 + v56, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedPrewarmBlueprintModifier);
  v38 = (_QWORD *)(v37 + v36);
  v40 = v57;
  v39 = v58;
  *v38 = v57;
  v38[1] = v39;
  v41 = swift_allocObject();
  *(_QWORD *)(v41 + 16) = sub_1DC19DF00;
  *(_QWORD *)(v41 + 24) = v37;
  swift_retain();
  v42 = (void *)sub_1DC402C80();
  sub_1DC402D04();
  swift_release();
  swift_release();

  v43 = swift_allocObject();
  *(_QWORD *)(v43 + 16) = v40;
  *(_QWORD *)(v43 + 24) = v39;
  swift_retain();
  v44 = (void *)sub_1DC402C80();
  sub_1DC402D34();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

}

uint64_t sub_1DC19B444@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2 = sub_1DC400508();
  v3 = sub_1DC4010B4();
  if (*(_QWORD *)(v2 + 16) && (v5 = sub_1DC0ED368(v3, v4), (v6 & 1) != 0))
  {
    v7 = v5;
    v8 = *(_QWORD *)(v2 + 56);
    v9 = sub_1DC401030();
    v10 = *(_QWORD *)(v9 - 8);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v10 + 16))(a1, v8 + *(_QWORD *)(v10 + 72) * v7, v9);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v10 + 56))(a1, 0, 1, v9);
  }
  else
  {
    v11 = sub_1DC401030();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(a1, 1, 1, v11);
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DC19B530(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(char *), uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(char *, uint64_t, void (*)(_QWORD, _QWORD));
  uint64_t v52;
  int64_t v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(_QWORD, _QWORD);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  int v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  int *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  void (*v83)(uint64_t, uint64_t, void (*)(_QWORD, _QWORD));
  void (*v84)(_QWORD, _QWORD);
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  int *v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  _QWORD *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  char *v110;
  char *v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  void (*v118)(char *, uint64_t);
  uint64_t v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  void (*v141)(char *);
  char *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  int *v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  char *v157;
  uint64_t v158;
  char *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  void (*v163)(char *, uint64_t, void (*)(_QWORD, _QWORD));
  void (*v164)(_QWORD, _QWORD);
  char *v165;
  _QWORD *v166;

  v140 = a7;
  v141 = a6;
  v158 = a5;
  v126 = a4;
  v162 = a3;
  v148 = a2;
  v156 = a1;
  sub_1DC165EEC(0, &qword_1EDB2A278, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB9A28]);
  v139 = v7;
  v138 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v137 = (char *)&v120 - v8;
  v136 = sub_1DC400010();
  v121 = *(_QWORD *)(v136 - 8);
  MEMORY[0x1E0C80A78](v136);
  v122 = (char *)&v120 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC19E000(0);
  MEMORY[0x1E0C80A78](v10);
  v130 = (uint64_t)&v120 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v129 = type metadata accessor for StockEarningsModel();
  v128 = *(_QWORD *)(v129 - 8);
  MEMORY[0x1E0C80A78](v129);
  v131 = (uint64_t)&v120 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for StockFeedModel();
  MEMORY[0x1E0C80A78](v13);
  v134 = (uint64_t)&v120 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC142200();
  v153 = v15;
  v127 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v142 = (char *)&v120 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC142434();
  MEMORY[0x1E0C80A78](v17);
  v157 = (char *)&v120 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v160 = type metadata accessor for StockFeedSectionDescriptor();
  MEMORY[0x1E0C80A78](v160);
  v165 = (char *)&v120 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC165EEC(0, (unint64_t *)&qword_1EDB29D60, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60]);
  v21 = v20;
  v151 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  v150 = (char *)&v120 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v23);
  v133 = (char *)&v120 - v24;
  MEMORY[0x1E0C80A78](v25);
  v149 = (char *)&v120 - v26;
  v124 = sub_1DC4008EC();
  v123 = *(_QWORD *)(v124 - 8);
  MEMORY[0x1E0C80A78](v124);
  v145 = (uint64_t)&v120 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC19DD20(0);
  MEMORY[0x1E0C80A78](v28);
  v144 = (uint64_t)&v120 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0FED34(0);
  MEMORY[0x1E0C80A78](v30);
  v143 = (uint64_t)&v120 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = sub_1DC4010E4();
  v33 = *(_QWORD *)(v32 - 8);
  MEMORY[0x1E0C80A78](v32);
  v35 = (char *)&v120 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v36);
  v38 = (char *)&v120 - v37;
  v39 = type metadata accessor for StockFeedMastheadModel();
  MEMORY[0x1E0C80A78](v39);
  v147 = (uint64_t)&v120 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC165DE8();
  MEMORY[0x1E0C80A78](v41);
  sub_1DC165EEC(0, (unint64_t *)&qword_1EDB2AB10, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790]);
  v152 = v42;
  v132 = *(_QWORD *)(v42 - 8);
  MEMORY[0x1E0C80A78](v42);
  v44 = (char *)&v120 - v43;
  v45 = sub_1DC19E01C(&qword_1EDB29D48, MEMORY[0x1E0DB7B88]);
  v46 = sub_1DC19E01C(&qword_1EDB29D40, MEMORY[0x1E0DB7B80]);
  v47 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v161 = v21;
  v159 = v44;
  MEMORY[0x1DF0C3110](MEMORY[0x1E0DEE9D8], v21, v45, v46);
  v48 = sub_1DC080808(&qword_1EDB36EE0, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedSectionDescriptor, (uint64_t)&unk_1DC4167B0);
  v49 = sub_1DC080808(&qword_1EDB2D770, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedModel, (uint64_t)&unk_1DC429058);
  v155 = v48;
  v135 = v13;
  v50 = v126;
  sub_1DC406D0C();
  v51 = *(void (**)(char *, uint64_t, void (*)(_QWORD, _QWORD)))(v33 + 16);
  v125 = v38;
  v52 = v158;
  v163 = v51;
  v164 = (void (*)(_QWORD, _QWORD))v32;
  v51(v38, v158, (void (*)(_QWORD, _QWORD))v32);
  sub_1DC0990BC(v156, v143, (uint64_t (*)(_QWORD))sub_1DC0FED34);
  sub_1DC0990BC(v162, v144, (uint64_t (*)(_QWORD))sub_1DC19DD20);
  v146 = (int *)type metadata accessor for StockFeedPrewarmBlueprintModifier();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v123 + 16))(v145, v52 + v146[8], v124);
  v53 = *(_QWORD *)(v50 + 16);
  v154 = v49;
  if (v53)
  {
    v166 = v47;
    sub_1DC0F0894(0, v53, 0);
    v54 = v50 + ((*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80));
    v162 = v33;
    v55 = *(_QWORD *)(v33 + 72);
    do
    {
      v56 = v164;
      v163(v35, v54, v164);
      v57 = sub_1DC4010B4();
      v59 = v58;
      (*(void (**)(char *, _QWORD))(v162 + 8))(v35, v56);
      v47 = v166;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1DC0F0894(0, v47[2] + 1, 1);
        v47 = v166;
      }
      v61 = v47[2];
      v60 = v47[3];
      if (v61 >= v60 >> 1)
      {
        sub_1DC0F0894(v60 > 1, v61 + 1, 1);
        v47 = v166;
      }
      v47[2] = v61 + 1;
      v62 = &v47[2 * v61];
      v62[4] = v57;
      v62[5] = v59;
      v54 += v55;
      --v53;
      v63 = (uint64_t)v165;
    }
    while (v53);
  }
  else
  {
    v63 = (uint64_t)v165;
  }
  v64 = v158;
  v65 = sub_1DC4010B4();
  v67 = sub_1DC213550(v65, v66, v47);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v67 & 1) != 0)
    v68 = 0;
  else
    v68 = 2;
  v69 = v147;
  sub_1DC2F2578((uint64_t)v125, v143, v144, v145, v68, v147);
  sub_1DC0990BC(v69, v63, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedMastheadModel);
  swift_storeEnumTagMultiPayload();
  v70 = sub_1DC080808((unint64_t *)&unk_1EDB29BB0, (uint64_t (*)(uint64_t))sub_1DC142200, MEMORY[0x1E0DB6F08]);
  v71 = sub_1DC080808(&qword_1EDB29BA8, (uint64_t (*)(uint64_t))sub_1DC142200, MEMORY[0x1E0DB6EF8]);
  v72 = v153;
  v145 = v70;
  v144 = v71;
  MEMORY[0x1DF0C3110](MEMORY[0x1E0DEE9D8], v153, v70);
  sub_1DC4046F0();
  v73 = v134;
  sub_1DC0990BC(v69, v134, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedMastheadModel);
  swift_storeEnumTagMultiPayload();
  v74 = v142;
  sub_1DC404348();
  sub_1DC404744();
  v162 = *(_QWORD *)(v127 + 8);
  ((void (*)(char *, uint64_t))v162)(v74, v72);
  sub_1DC406C94();
  v75 = v146;
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v64 + v146[16]), *(_QWORD *)(v64 + v146[16] + 24));
  v76 = v64 + v75[11];
  v77 = v64 + v75[12];
  v78 = v130;
  sub_1DC151DB0(v64, v156, v148, v76, v77, v130);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v128 + 48))(v78, 1, v129) == 1)
  {
    sub_1DC0926D8(v78, (uint64_t (*)(_QWORD))sub_1DC19E000);
  }
  else
  {
    v79 = v131;
    sub_1DC092ED0(v78, v131, (uint64_t (*)(_QWORD))type metadata accessor for StockEarningsModel);
    swift_storeEnumTagMultiPayload();
    MEMORY[0x1DF0C3110](MEMORY[0x1E0DEE9D8], v72, v145, v144);
    v80 = v133;
    sub_1DC4046F0();
    sub_1DC0990BC(v79, v73, (uint64_t (*)(_QWORD))type metadata accessor for StockEarningsModel);
    swift_storeEnumTagMultiPayload();
    sub_1DC404348();
    v81 = v161;
    sub_1DC404744();
    ((void (*)(char *, uint64_t))v162)(v74, v72);
    sub_1DC406C94();
    (*(void (**)(char *, uint64_t))(v151 + 8))(v80, v81);
    sub_1DC0926D8(v131, (uint64_t (*)(_QWORD))type metadata accessor for StockEarningsModel);
  }
  swift_storeEnumTagMultiPayload();
  MEMORY[0x1DF0C3110](MEMORY[0x1E0DEE9D8], v72, v145, v144);
  sub_1DC4046F0();
  v82 = v158;
  v83 = (void (*)(uint64_t, uint64_t, void (*)(_QWORD, _QWORD)))v163;
  v84 = v164;
  v163((char *)v73, v158, v164);
  swift_storeEnumTagMultiPayload();
  sub_1DC404348();
  sub_1DC404744();
  ((void (*)(char *, uint64_t))v162)(v74, v72);
  sub_1DC14227C();
  v86 = v73 + *(int *)(v85 + 48);
  v87 = v73 + *(int *)(v85 + 64);
  v83(v73, v82, v84);
  sub_1DC0990BC(v156, v86, (uint64_t (*)(_QWORD))sub_1DC0FED34);
  sub_1DC0990BC(v148, v87, (uint64_t (*)(_QWORD))sub_1DC133AB4);
  swift_storeEnumTagMultiPayload();
  v88 = v82;
  sub_1DC404348();
  v89 = v161;
  sub_1DC404744();
  ((void (*)(char *, uint64_t))v162)(v74, v153);
  v90 = v152;
  sub_1DC406C94();
  v91 = v146;
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v88 + v146[13]), *(_QWORD *)(v88 + v146[13] + 24));
  if ((sub_1DC400C1C() & 1) == 0)
  {
    sub_1DC142534();
    v93 = v88;
    v94 = v165;
    v95 = &v165[*(int *)(v92 + 64)];
    v96 = v153;
    v97 = (_QWORD *)v73;
    v98 = v122;
    sub_1DC400004();
    v99 = sub_1DC3FFFF8();
    v101 = v100;
    v164 = *(void (**)(_QWORD, _QWORD))(v121 + 8);
    v164(v98, v136);
    *(_QWORD *)v94 = v99;
    *((_QWORD *)v94 + 1) = v101;
    v94[16] = *(_BYTE *)(v93 + v91[10]);
    v102 = sub_1DC4073A8();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v102 - 8) + 56))(v95, 1, 1, v102);
    swift_storeEnumTagMultiPayload();
    MEMORY[0x1DF0C3110](MEMORY[0x1E0DEE9D8], v96, v145, v144);
    v103 = v133;
    sub_1DC4046F0();
    sub_1DC400004();
    v104 = sub_1DC3FFFF8();
    v106 = v105;
    v164(v98, v136);
    v90 = v152;
    v107 = v161;
    *v97 = v104;
    v97[1] = v106;
    v97[2] = 0;
    swift_storeEnumTagMultiPayload();
    v108 = v142;
    v89 = v107;
    sub_1DC404348();
    sub_1DC404744();
    ((void (*)(char *, uint64_t))v162)(v108, v96);
    sub_1DC406C94();
    (*(void (**)(char *, uint64_t))(v151 + 8))(v103, v107);
  }
  sub_1DC19E06C();
  v110 = v137;
  v111 = &v137[*(int *)(v109 + 48)];
  v112 = v132;
  v113 = v159;
  (*(void (**)(char *, char *, uint64_t))(v132 + 16))(v137, v159, v90);
  v114 = *MEMORY[0x1E0DB7FB8];
  v115 = sub_1DC404984();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v115 - 8) + 104))(v111, v114, v115);
  v116 = v138;
  v117 = v139;
  (*(void (**)(char *, _QWORD, uint64_t))(v138 + 104))(v110, *MEMORY[0x1E0DB9A00], v139);
  v141(v110);
  (*(void (**)(char *, uint64_t))(v116 + 8))(v110, v117);
  v118 = *(void (**)(char *, uint64_t))(v151 + 8);
  v118(v150, v89);
  v118(v149, v89);
  sub_1DC0926D8(v147, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedMastheadModel);
  return (*(uint64_t (**)(char *, uint64_t))(v112 + 8))(v113, v90);
}

uint64_t sub_1DC19C408(void *a1, void (*a2)(char *))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  id v10;
  uint64_t v12;

  sub_1DC165EEC(0, &qword_1EDB2A278, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB9A28]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  v7 = MEMORY[0x1E0C80A78](v4);
  v9 = (char *)&v12 - v8;
  *(uint64_t *)((char *)&v12 - v8) = (uint64_t)a1;
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v6 + 104))((char *)&v12 - v8, *MEMORY[0x1E0DB99F0], v5, v7);
  v10 = a1;
  a2(v9);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t sub_1DC19C4C4()
{
  sub_1DC089DA4(0, &qword_1EDB296D8, (uint64_t (*)(uint64_t))sub_1DC1132D4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  swift_bridgeObjectRetain();
  return sub_1DC402D58();
}

uint64_t sub_1DC19C538()
{
  sub_1DC089DA4(0, &qword_1EDB296D8, (uint64_t (*)(uint64_t))sub_1DC1132D4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  return sub_1DC402D58();
}

uint64_t sub_1DC19C5A8()
{
  sub_1DC4010D8();
  sub_1DC408B48();
  swift_bridgeObjectRelease();
  sub_1DC408B48();
  return 0x286D726177657250;
}

_QWORD *sub_1DC19C60C(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  void (*v40)(char *, char *, uint64_t);
  uint64_t v41;
  __int128 v42;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v29 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v29 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1DC4010E4();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = *(_OWORD *)((char *)a2 + v8 + 24);
    *(_OWORD *)((char *)a1 + v8 + 24) = v9;
    (**(void (***)(void))(v9 - 8))();
    v10 = a3[6];
    v11 = *(_OWORD *)((char *)a2 + v10 + 24);
    *(_OWORD *)((char *)a1 + v10 + 24) = v11;
    (**(void (***)(void))(v11 - 8))();
    v12 = a3[7];
    v13 = *(_OWORD *)((char *)a2 + v12 + 24);
    *(_OWORD *)((char *)a1 + v12 + 24) = v13;
    (**(void (***)(void))(v13 - 8))();
    v14 = a3[8];
    v15 = (char *)a1 + v14;
    v16 = (char *)a2 + v14;
    v17 = sub_1DC4008EC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
    v18 = a3[9];
    v19 = (char *)a1 + v18;
    v20 = (char *)a2 + v18;
    v21 = sub_1DC40070C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
    v22 = a3[11];
    *((_BYTE *)a1 + a3[10]) = *((_BYTE *)a2 + a3[10]);
    v23 = (char *)a1 + v22;
    v24 = (char *)a2 + v22;
    v25 = sub_1DC3FFFEC();
    v26 = *(_QWORD *)(v25 - 8);
    v27 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48);
    if (v27(v24, 1, v25))
    {
      sub_1DC089DA4(0, &qword_1EDB28AC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v23, v24, v25);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
    }
    v30 = a3[12];
    v31 = (char *)a1 + v30;
    v32 = (char *)a2 + v30;
    if (v27((char *)a2 + v30, 1, v25))
    {
      sub_1DC089DA4(0, &qword_1EDB28AC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v31, v32, v25);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v31, 0, 1, v25);
    }
    v34 = a3[13];
    v35 = *(_OWORD *)((char *)a2 + v34 + 24);
    *(_OWORD *)((char *)a1 + v34 + 24) = v35;
    (**(void (***)(void))(v35 - 8))();
    v36 = a3[15];
    *(_OWORD *)((char *)a1 + a3[14]) = *(_OWORD *)((char *)a2 + a3[14]);
    v37 = (char *)a1 + v36;
    v38 = (char *)a2 + v36;
    v39 = sub_1DC4002BC();
    v40 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16);
    swift_unknownObjectRetain();
    v40(v37, v38, v39);
    v41 = a3[16];
    v42 = *(_OWORD *)((char *)a2 + v41 + 24);
    *(_OWORD *)((char *)a1 + v41 + 24) = v42;
    (**(void (***)(void))(v42 - 8))();
  }
  return a1;
}

uint64_t sub_1DC19C918(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v4 = sub_1DC4010E4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  __swift_destroy_boxed_opaque_existential_1(a1 + a2[5]);
  __swift_destroy_boxed_opaque_existential_1(a1 + a2[6]);
  __swift_destroy_boxed_opaque_existential_1(a1 + a2[7]);
  v5 = a1 + a2[8];
  v6 = sub_1DC4008EC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[9];
  v8 = sub_1DC40070C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[11];
  v10 = sub_1DC3FFFEC();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
  if (!v12(v9, 1, v10))
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  v13 = a1 + a2[12];
  if (!v12(v13, 1, v10))
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v13, v10);
  __swift_destroy_boxed_opaque_existential_1(a1 + a2[13]);
  swift_unknownObjectRelease();
  v14 = a1 + a2[15];
  v15 = sub_1DC4002BC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14, v15);
  return __swift_destroy_boxed_opaque_existential_1(a1 + a2[16]);
}

uint64_t sub_1DC19CA80(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  const void *v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int (*v26)(const void *, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  void *v29;
  const void *v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t, uint64_t, uint64_t);
  uint64_t v39;
  __int128 v40;

  v6 = sub_1DC4010E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = *(_OWORD *)(a2 + v7 + 24);
  *(_OWORD *)(a1 + v7 + 24) = v8;
  (**(void (***)(void))(v8 - 8))();
  v9 = a3[6];
  v10 = *(_OWORD *)(a2 + v9 + 24);
  *(_OWORD *)(a1 + v9 + 24) = v10;
  (**(void (***)(void))(v10 - 8))();
  v11 = a3[7];
  v12 = *(_OWORD *)(a2 + v11 + 24);
  *(_OWORD *)(a1 + v11 + 24) = v12;
  (**(void (***)(void))(v12 - 8))();
  v13 = a3[8];
  v14 = a1 + v13;
  v15 = a2 + v13;
  v16 = sub_1DC4008EC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
  v17 = a3[9];
  v18 = a1 + v17;
  v19 = a2 + v17;
  v20 = sub_1DC40070C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
  v21 = a3[11];
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  v22 = (void *)(a1 + v21);
  v23 = (const void *)(a2 + v21);
  v24 = sub_1DC3FFFEC();
  v25 = *(_QWORD *)(v24 - 8);
  v26 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v25 + 48);
  if (v26(v23, 1, v24))
  {
    sub_1DC089DA4(0, &qword_1EDB28AC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v25 + 16))(v22, v23, v24);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
  }
  v28 = a3[12];
  v29 = (void *)(a1 + v28);
  v30 = (const void *)(a2 + v28);
  if (v26((const void *)(a2 + v28), 1, v24))
  {
    sub_1DC089DA4(0, &qword_1EDB28AC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v25 + 16))(v29, v30, v24);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v29, 0, 1, v24);
  }
  v32 = a3[13];
  v33 = *(_OWORD *)(a2 + v32 + 24);
  *(_OWORD *)(a1 + v32 + 24) = v33;
  (**(void (***)(void))(v33 - 8))();
  v34 = a3[15];
  *(_OWORD *)(a1 + a3[14]) = *(_OWORD *)(a2 + a3[14]);
  v35 = a1 + v34;
  v36 = a2 + v34;
  v37 = sub_1DC4002BC();
  v38 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 16);
  swift_unknownObjectRetain();
  v38(v35, v36, v37);
  v39 = a3[16];
  v40 = *(_OWORD *)(a2 + v39 + 24);
  *(_OWORD *)(a1 + v39 + 24) = v40;
  (**(void (***)(void))(v40 - 8))();
  return a1;
}

uint64_t sub_1DC19CD60(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(void *, uint64_t, uint64_t);
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void *v26;
  int v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v6 = sub_1DC4010E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + a3[5]), (uint64_t *)(a2 + a3[5]));
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + a3[6]), (uint64_t *)(a2 + a3[6]));
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + a3[7]), (uint64_t *)(a2 + a3[7]));
  v7 = a3[8];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1DC4008EC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[9];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = sub_1DC40070C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  v15 = a3[11];
  v16 = (void *)(a1 + v15);
  v17 = (void *)(a2 + v15);
  v18 = sub_1DC3FFFEC();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v19 + 48);
  v21 = v20(v16, 1, v18);
  v22 = v20(v17, 1, v18);
  if (v21)
  {
    if (!v22)
    {
      (*(void (**)(void *, void *, uint64_t))(v19 + 16))(v16, v17, v18);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v22)
  {
    (*(void (**)(void *, uint64_t))(v19 + 8))(v16, v18);
LABEL_6:
    sub_1DC089DA4(0, &qword_1EDB28AC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v19 + 24))(v16, v17, v18);
LABEL_7:
  v24 = a3[12];
  v25 = (void *)(a1 + v24);
  v26 = (void *)(a2 + v24);
  v27 = v20((void *)(a1 + v24), 1, v18);
  v28 = v20(v26, 1, v18);
  if (!v27)
  {
    if (!v28)
    {
      (*(void (**)(void *, void *, uint64_t))(v19 + 24))(v25, v26, v18);
      goto LABEL_13;
    }
    (*(void (**)(void *, uint64_t))(v19 + 8))(v25, v18);
    goto LABEL_12;
  }
  if (v28)
  {
LABEL_12:
    sub_1DC089DA4(0, &qword_1EDB28AC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v19 + 16))(v25, v26, v18);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v25, 0, 1, v18);
LABEL_13:
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + a3[13]), (uint64_t *)(a2 + a3[13]));
  v30 = a3[14];
  v31 = (_QWORD *)(a1 + v30);
  v32 = (_QWORD *)(a2 + v30);
  v33 = v32[1];
  *v31 = *v32;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  v31[1] = v33;
  v34 = a3[15];
  v35 = a1 + v34;
  v36 = a2 + v34;
  v37 = sub_1DC4002BC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 24))(v35, v36, v37);
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + a3[16]), (uint64_t *)(a2 + a3[16]));
  return a1;
}

uint64_t sub_1DC19D074(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 *v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  const void *v30;
  uint64_t v31;
  uint64_t v32;
  unsigned int (*v33)(const void *, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  void *v36;
  const void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __int128 v52;

  v6 = sub_1DC4010E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_QWORD *)(v9 + 32) = *(_QWORD *)(v10 + 32);
  v11 = *(_OWORD *)(v10 + 16);
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + 16) = v11;
  v12 = a1 + v8;
  v13 = a2 + v8;
  *(_QWORD *)(v12 + 32) = *(_QWORD *)(v13 + 32);
  v14 = *(_OWORD *)(v13 + 16);
  *(_OWORD *)v12 = *(_OWORD *)v13;
  *(_OWORD *)(v12 + 16) = v14;
  v15 = a3[7];
  v16 = a3[8];
  v17 = a1 + v15;
  v18 = (__int128 *)(a2 + v15);
  v19 = *v18;
  v20 = v18[1];
  *(_QWORD *)(v17 + 32) = *((_QWORD *)v18 + 4);
  v21 = a1 + v16;
  v22 = a2 + v16;
  *(_OWORD *)v17 = v19;
  *(_OWORD *)(v17 + 16) = v20;
  v23 = sub_1DC4008EC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v21, v22, v23);
  v24 = a3[9];
  v25 = a1 + v24;
  v26 = a2 + v24;
  v27 = sub_1DC40070C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v25, v26, v27);
  v28 = a3[11];
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  v29 = (void *)(a1 + v28);
  v30 = (const void *)(a2 + v28);
  v31 = sub_1DC3FFFEC();
  v32 = *(_QWORD *)(v31 - 8);
  v33 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v32 + 48);
  if (v33(v30, 1, v31))
  {
    sub_1DC089DA4(0, &qword_1EDB28AC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v32 + 32))(v29, v30, v31);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
  }
  v35 = a3[12];
  v36 = (void *)(a1 + v35);
  v37 = (const void *)(a2 + v35);
  if (v33((const void *)(a2 + v35), 1, v31))
  {
    sub_1DC089DA4(0, &qword_1EDB28AC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v32 + 32))(v36, v37, v31);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v36, 0, 1, v31);
  }
  v39 = a3[13];
  v40 = a3[14];
  v41 = a1 + v39;
  v42 = a2 + v39;
  v43 = *(_OWORD *)(v42 + 16);
  *(_OWORD *)v41 = *(_OWORD *)v42;
  *(_OWORD *)(v41 + 16) = v43;
  v44 = *(_OWORD *)(a2 + v40);
  *(_QWORD *)(v41 + 32) = *(_QWORD *)(v42 + 32);
  *(_OWORD *)(a1 + v40) = v44;
  v45 = a3[15];
  v46 = a1 + v45;
  v47 = a2 + v45;
  v48 = sub_1DC4002BC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 32))(v46, v47, v48);
  v49 = a3[16];
  v50 = a1 + v49;
  v51 = a2 + v49;
  v52 = *(_OWORD *)(v51 + 16);
  *(_OWORD *)v50 = *(_OWORD *)v51;
  *(_OWORD *)(v50 + 16) = v52;
  *(_QWORD *)(v50 + 32) = *(_QWORD *)(v51 + 32);
  return a1;
}

uint64_t sub_1DC19D308(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(void *, uint64_t, uint64_t);
  int v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  void *v38;
  int v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  uint64_t v46;
  _QWORD *v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __int128 v57;

  v6 = sub_1DC4010E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  __swift_destroy_boxed_opaque_existential_1(a1 + v7);
  v10 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + 16) = v10;
  *(_QWORD *)(v8 + 32) = *(_QWORD *)(v9 + 32);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  __swift_destroy_boxed_opaque_existential_1(a1 + v11);
  v14 = *(_OWORD *)(v13 + 16);
  *(_OWORD *)v12 = *(_OWORD *)v13;
  *(_OWORD *)(v12 + 16) = v14;
  *(_QWORD *)(v12 + 32) = *(_QWORD *)(v13 + 32);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  __swift_destroy_boxed_opaque_existential_1(a1 + v15);
  v18 = *(_OWORD *)(v17 + 16);
  *(_OWORD *)v16 = *(_OWORD *)v17;
  *(_OWORD *)(v16 + 16) = v18;
  *(_QWORD *)(v16 + 32) = *(_QWORD *)(v17 + 32);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  v22 = sub_1DC4008EC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  v26 = sub_1DC40070C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
  v27 = a3[11];
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  v28 = (void *)(a1 + v27);
  v29 = (void *)(a2 + v27);
  v30 = sub_1DC3FFFEC();
  v31 = *(_QWORD *)(v30 - 8);
  v32 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v31 + 48);
  v33 = v32(v28, 1, v30);
  v34 = v32(v29, 1, v30);
  if (v33)
  {
    if (!v34)
    {
      (*(void (**)(void *, void *, uint64_t))(v31 + 32))(v28, v29, v30);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v34)
  {
    (*(void (**)(void *, uint64_t))(v31 + 8))(v28, v30);
LABEL_6:
    sub_1DC089DA4(0, &qword_1EDB28AC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v31 + 40))(v28, v29, v30);
LABEL_7:
  v36 = a3[12];
  v37 = (void *)(a1 + v36);
  v38 = (void *)(a2 + v36);
  v39 = v32((void *)(a1 + v36), 1, v30);
  v40 = v32(v38, 1, v30);
  if (!v39)
  {
    if (!v40)
    {
      (*(void (**)(void *, void *, uint64_t))(v31 + 40))(v37, v38, v30);
      goto LABEL_13;
    }
    (*(void (**)(void *, uint64_t))(v31 + 8))(v37, v30);
    goto LABEL_12;
  }
  if (v40)
  {
LABEL_12:
    sub_1DC089DA4(0, &qword_1EDB28AC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v31 + 32))(v37, v38, v30);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v37, 0, 1, v30);
LABEL_13:
  v42 = a3[13];
  v43 = a1 + v42;
  v44 = a2 + v42;
  __swift_destroy_boxed_opaque_existential_1(a1 + v42);
  v45 = *(_OWORD *)(v44 + 16);
  *(_OWORD *)v43 = *(_OWORD *)v44;
  *(_OWORD *)(v43 + 16) = v45;
  *(_QWORD *)(v43 + 32) = *(_QWORD *)(v44 + 32);
  v46 = a3[14];
  v47 = (_QWORD *)(a1 + v46);
  v48 = (_QWORD *)(a2 + v46);
  v49 = v48[1];
  *v47 = *v48;
  swift_unknownObjectRelease();
  v47[1] = v49;
  v50 = a3[15];
  v51 = a1 + v50;
  v52 = a2 + v50;
  v53 = sub_1DC4002BC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 40))(v51, v52, v53);
  v54 = a3[16];
  v55 = a1 + v54;
  v56 = a2 + v54;
  __swift_destroy_boxed_opaque_existential_1(a1 + v54);
  v57 = *(_OWORD *)(v56 + 16);
  *(_OWORD *)v55 = *(_OWORD *)v56;
  *(_OWORD *)(v55 + 16) = v57;
  *(_QWORD *)(v55 + 32) = *(_QWORD *)(v56 + 32);
  return a1;
}

uint64_t sub_1DC19D674()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC19D680(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v6 = sub_1DC4010E4();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v13 = sub_1DC4008EC();
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == (_DWORD)a2)
    {
      v8 = v13;
      v15 = a3[8];
    }
    else
    {
      v16 = sub_1DC40070C();
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == (_DWORD)a2)
      {
        v8 = v16;
        v15 = a3[9];
      }
      else
      {
        sub_1DC089DA4(0, &qword_1EDB28AC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == (_DWORD)a2)
        {
          v8 = v17;
          v15 = a3[11];
        }
        else
        {
          v8 = sub_1DC4002BC();
          v14 = *(_QWORD *)(v8 - 8);
          v15 = a3[15];
        }
      }
    }
    v10 = a1 + v15;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + a3[5] + 24);
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t sub_1DC19D7B0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC19D7BC(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  result = sub_1DC4010E4();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + a4[5] + 24) = (a2 - 1);
      return result;
    }
    v13 = sub_1DC4008EC();
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[8];
    }
    else
    {
      v16 = sub_1DC40070C();
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[9];
      }
      else
      {
        sub_1DC089DA4(0, &qword_1EDB28AC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[11];
        }
        else
        {
          v10 = sub_1DC4002BC();
          v14 = *(_QWORD *)(v10 - 8);
          v15 = a4[15];
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for StockFeedPrewarmBlueprintModifier()
{
  uint64_t result;

  result = qword_1EDB3BFD8;
  if (!qword_1EDB3BFD8)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1DC19D924()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;

  sub_1DC4010E4();
  if (v0 <= 0x3F)
  {
    sub_1DC4008EC();
    if (v1 <= 0x3F)
    {
      sub_1DC40070C();
      if (v2 <= 0x3F)
      {
        sub_1DC089DA4(319, &qword_1EDB28AC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        if (v3 <= 0x3F)
        {
          sub_1DC4002BC();
          if (v4 <= 0x3F)
            swift_initStructMetadata();
        }
      }
    }
  }
}

uint64_t sub_1DC19DA34()
{
  return sub_1DC080808(&qword_1EDB3BFD0, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedPrewarmBlueprintModifier, (uint64_t)&unk_1DC4127D0);
}

uint64_t sub_1DC19DA60()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v1 = (int *)type metadata accessor for StockFeedPrewarmBlueprintModifier();
  v2 = *(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  v4 = sub_1DC4010E4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  __swift_destroy_boxed_opaque_existential_1(v3 + v1[5]);
  __swift_destroy_boxed_opaque_existential_1(v3 + v1[6]);
  __swift_destroy_boxed_opaque_existential_1(v3 + v1[7]);
  v5 = v3 + v1[8];
  v6 = sub_1DC4008EC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = v3 + v1[9];
  v8 = sub_1DC40070C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = v3 + v1[11];
  v10 = sub_1DC3FFFEC();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
  if (!v12(v9, 1, v10))
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  v13 = v3 + v1[12];
  if (!v12(v13, 1, v10))
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v13, v10);
  __swift_destroy_boxed_opaque_existential_1(v3 + v1[13]);
  swift_unknownObjectRelease();
  v14 = v3 + v1[15];
  v15 = sub_1DC4002BC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14, v15);
  __swift_destroy_boxed_opaque_existential_1(v3 + v1[16]);
  return swift_deallocObject();
}

uint64_t sub_1DC19DC0C@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for StockFeedPrewarmBlueprintModifier();
  return sub_1DC19B444(a1);
}

uint64_t sub_1DC19DC64()
{
  return sub_1DC402DD0();
}

void sub_1DC19DC90()
{
  unint64_t TupleTypeMetadata;
  uint64_t v1;

  if (!qword_1EDB28DC8)
  {
    sub_1DC0FED34(255);
    sub_1DC133AB4(255);
    sub_1DC19DD20(255);
    sub_1DC1132D4(255);
    TupleTypeMetadata = swift_getTupleTypeMetadata();
    if (!v1)
      atomic_store(TupleTypeMetadata, (unint64_t *)&qword_1EDB28DC8);
  }
}

void sub_1DC19DD20(uint64_t a1)
{
  sub_1DC089DA4(a1, (unint64_t *)&unk_1EDB28D90, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAEFA8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

uint64_t sub_1DC19DD3C()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1 = (int *)type metadata accessor for StockFeedPrewarmBlueprintModifier();
  v2 = v0
     + ((*(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80));
  v3 = sub_1DC4010E4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  __swift_destroy_boxed_opaque_existential_1(v2 + v1[5]);
  __swift_destroy_boxed_opaque_existential_1(v2 + v1[6]);
  __swift_destroy_boxed_opaque_existential_1(v2 + v1[7]);
  v4 = v2 + v1[8];
  v5 = sub_1DC4008EC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = v2 + v1[9];
  v7 = sub_1DC40070C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  v8 = v2 + v1[11];
  v9 = sub_1DC3FFFEC();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  if (!v11(v8, 1, v9))
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  v12 = v2 + v1[12];
  if (!v11(v12, 1, v9))
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v12, v9);
  __swift_destroy_boxed_opaque_existential_1(v2 + v1[13]);
  swift_unknownObjectRelease();
  v13 = v2 + v1[15];
  v14 = sub_1DC4002BC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  __swift_destroy_boxed_opaque_existential_1(v2 + v1[16]);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DC19DF00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;

  v9 = *(_QWORD *)(type metadata accessor for StockFeedPrewarmBlueprintModifier() - 8);
  v10 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v11 = v4 + ((*(_QWORD *)(v9 + 64) + v10 + 7) & 0xFFFFFFFFFFFFFFF8);
  return sub_1DC19B530(a1, a2, a3, a4, v4 + v10, *(void (**)(char *))v11, *(_QWORD *)(v11 + 8));
}

uint64_t sub_1DC19DF7C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DC19DFA0(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t, _QWORD);
  int *v4;

  v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, _QWORD))(v1 + 16);
  sub_1DC19DC90();
  return v3(a1, a1 + v4[12], a1 + v4[16], *(_QWORD *)(a1 + v4[20]));
}

uint64_t sub_1DC19DFF8(void *a1)
{
  uint64_t v1;

  return sub_1DC19C408(a1, *(void (**)(char *))(v1 + 16));
}

void sub_1DC19E000(uint64_t a1)
{
  sub_1DC089DA4(a1, qword_1EDB30828, (uint64_t (*)(uint64_t))type metadata accessor for StockEarningsModel, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

uint64_t sub_1DC19E01C(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    sub_1DC165EEC(255, (unint64_t *)&qword_1EDB29D60, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60]);
    result = MEMORY[0x1DF0CAB8C](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1DC19E06C()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EDB2AAE0)
  {
    sub_1DC165EEC(255, (unint64_t *)&qword_1EDB2AB10, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790]);
    sub_1DC404984();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EDB2AAE0);
  }
}

uint64_t SubscriptionStatusCheckBlocker.isCheckAllowed.getter()
{
  uint64_t v0;

  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t SubscriptionStatusCheckBlocker.isCheckAllowed.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *(_BYTE *)(v1 + 16) = a1;
  return result;
}

uint64_t (*SubscriptionStatusCheckBlocker.isCheckAllowed.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t SubscriptionStatusCheckBlocker.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t SubscriptionStatusCheckBlocker.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1DC19E1B0()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_beginAccess();
  return *(unsigned __int8 *)(v1 + 16);
}

uint64_t SubscriptionStatusCheckBlocker.handle(received:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  sub_1DC19E2A0();
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  *(_BYTE *)(v0 + 16) = 0;
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DBB1A0], v2);
  sub_1DC19E300();
  swift_allocObject();
  return sub_1DC402D58();
}

void sub_1DC19E2A0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F034D608)
  {
    type metadata accessor for StocksActivity(255);
    sub_1DC08CDA4();
    v0 = sub_1DC405F5C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1F034D608);
  }
}

void sub_1DC19E300()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F034D610)
  {
    sub_1DC19E2A0();
    v0 = sub_1DC402DAC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1F034D610);
  }
}

uint64_t sub_1DC19E354()
{
  return sub_1DC405D28();
}

uint64_t sub_1DC19E35C()
{
  return sub_1DC405D34();
}

uint64_t sub_1DC19E364()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  sub_1DC19E2A0();
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  *(_BYTE *)(v0 + 16) = 0;
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DBB1A0], v2);
  sub_1DC19E300();
  swift_allocObject();
  return sub_1DC402D58();
}

Swift::Void __swiftcall SubscriptionStatusCheckBlocker.sceneDidEnterBackground()()
{
  uint64_t v0;

  swift_beginAccess();
  *(_BYTE *)(v0 + 16) = 1;
}

uint64_t sub_1DC19E458()
{
  uint64_t v0;
  uint64_t result;

  result = swift_beginAccess();
  *(_BYTE *)(v0 + 16) = 1;
  return result;
}

uint64_t method lookup function for SubscriptionStatusCheckBlocker()
{
  return swift_lookUpClassMethod();
}

void sub_1DC19E4A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  _QWORD *v12;
  uint64_t v13;
  void *v14;
  void *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE v19[16];

  v1 = sub_1DC4059F8();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = &v19[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for StockViewModel();
  MEMORY[0x1E0C80A78](v5);
  v7 = &v19[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = type metadata accessor for TickerModel();
  MEMORY[0x1E0C80A78](v8);
  v11 = &v19[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_1F034B048 != -1)
    swift_once();
  sub_1DC081B48(qword_1F034D618, v9, (uint64_t (*)(uint64_t))type metadata accessor for TickerEventHandler, (uint64_t)&unk_1DC412A74);
  sub_1DC4012D0();
  if ((v19[15] & 1) != 0)
  {
    v12 = __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 72));
    v13 = MEMORY[0x1DF0CAD78](*v12 + OBJC_IVAR____TtC8StocksUI12TickerRouter_controller);
    if (v13)
    {
      v14 = (void *)v13;
      v15 = (void *)sub_1DC4090D0();

      if (v15)
      {
        v16 = sub_1DC4056B0();
        if (v16 >> 62)
          v17 = sub_1DC409850();
        else
          v17 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRelease();
        if (__OFSUB__(v17, 1))
        {
          __break(1u);
        }
        else
        {
          (*(void (**)(_BYTE *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E0DBA2A0], v1);
          sub_1DC40565C();

          (*(void (**)(_BYTE *, uint64_t))(v2 + 8))(v4, v1);
        }
      }
    }
  }
  else
  {
    sub_1DC0F6C50(0);
    sub_1DC404354();
    sub_1DC0F14E0();
    sub_1DC0F0F38((uint64_t)&v11[*(int *)(v18 + 48)], (uint64_t)v7);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 72));
    sub_1DC273E08((uint64_t)v7);
    sub_1DC0DD6D4((uint64_t)v7);
  }
}

uint64_t assignWithCopy for StockListSectionDescriptor(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 v14;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_BYTE *)(a2 + 40);
  sub_1DC10BD18(*(_QWORD *)a2, v4, v5, v6, v7, v8);
  v9 = *(_QWORD *)a1;
  v10 = *(_QWORD *)(a1 + 8);
  v11 = *(_QWORD *)(a1 + 16);
  v12 = *(_QWORD *)(a1 + 24);
  v13 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  v14 = *(_BYTE *)(a1 + 40);
  *(_BYTE *)(a1 + 40) = v8;
  sub_1DC10BD5C(v9, v10, v11, v12, v13, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for StockListSectionDescriptor(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 41))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 40);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for StockListSectionDescriptor(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 40) = 0;
    *(_QWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 41) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 41) = 0;
    if (a2)
      *(_BYTE *)(result + 40) = -(char)a2;
  }
  return result;
}

uint64_t sub_1DC19E834(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 40) <= 1u)
    return *(unsigned __int8 *)(a1 + 40);
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_1DC19E84C(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(_QWORD *)result = a2 - 2;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 40) = a2;
  return result;
}

uint64_t sub_1DC19E870@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  unsigned int *v3;
  uint64_t v4;
  uint64_t v5;

  if (*(_BYTE *)(v1 + 40))
    v3 = (unsigned int *)MEMORY[0x1E0DB6CE8];
  else
    v3 = (unsigned int *)MEMORY[0x1E0DB6CF8];
  v4 = *v3;
  v5 = sub_1DC4042D0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a1, v4, v5);
}

uint64_t sub_1DC19E8CC(uint64_t a1, uint64_t a2)
{
  return sub_1DC1132F0(a1, a2, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF270], &qword_1EDB28E38, MEMORY[0x1E0DAF280]);
}

uint64_t sub_1DC19E8E8(uint64_t a1, uint64_t a2)
{
  return sub_1DC1132F0(a1, a2, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF1A0], (unint64_t *)&unk_1EDB28E10, MEMORY[0x1E0DAF1B0]);
}

_QWORD *sub_1DC19E904(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v9 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_QWORD *)a1 = *a2;
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
    v5 = *(int *)(a3 + 24);
    v6 = a1 + v5;
    v7 = (uint64_t)a2 + v5;
    v8 = sub_1DC40952C();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t sub_1DC19E99C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1 + *(int *)(a2 + 24);
  v3 = sub_1DC40952C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

uint64_t sub_1DC19E9D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v4 = *(int *)(a3 + 24);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_1DC40952C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

_QWORD *sub_1DC19EA40(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  v4 = *(int *)(a3 + 24);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_1DC40952C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

uint64_t sub_1DC19EABC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v4 = *(int *)(a3 + 24);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_1DC40952C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t sub_1DC19EB28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v5 = *(int *)(a3 + 24);
  v6 = a1 + v5;
  v7 = a2 + v5;
  v8 = sub_1DC40952C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 40))(v6, v7, v8);
  return a1;
}

uint64_t sub_1DC19EB8C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC19EB98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a1 + *(int *)(a3 + 24);
  v5 = sub_1DC40952C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, a2, v5);
}

uint64_t sub_1DC19EBD8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC19EBE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;

  v5 = a1 + *(int *)(a4 + 24);
  v6 = sub_1DC40952C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, a2, a2, v6);
}

uint64_t type metadata accessor for CreateWatchlistViewLayoutAttributes()
{
  uint64_t result;

  result = qword_1F034D678;
  if (!qword_1F034D678)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1DC19EC64()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1DC40952C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

double sub_1DC19ECE4()
{
  uint64_t v0;

  return *(double *)v0;
}

uint64_t sub_1DC19ECEC()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v0 = sub_1DC4037A8();
  v1 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD9C8];
  v2 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC40379C();
  sub_1DC17D468();
  v5 = sub_1DC401618();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1DC40DC10;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v6 + 104))(v8 + v7, *MEMORY[0x1E0CF8168], v5);
  sub_1DC080808(&qword_1F034D758, v1, MEMORY[0x1E0DAD9B8]);
  sub_1DC4015C4();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v0);
}

uint64_t sub_1DC19EE40()
{
  _OWORD v1[2];

  sub_1DC4036F4();
  sub_1DC080808(&qword_1F034D760, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD8C0], MEMORY[0x1E0DAD8B8]);
  memset(v1, 0, sizeof(v1));
  sub_1DC4015DC();
  return sub_1DC150744((uint64_t)v1);
}

uint64_t sub_1DC19EEBC()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  void (*v11)(unint64_t, _QWORD, uint64_t);
  uint64_t v13;

  v0 = sub_1DC4037A8();
  v1 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD9C8];
  v2 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC40379C();
  sub_1DC17D468();
  v5 = sub_1DC401618();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 72);
  v8 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1DC40C740;
  v10 = v9 + v8;
  v11 = *(void (**)(unint64_t, _QWORD, uint64_t))(v6 + 104);
  v11(v10, *MEMORY[0x1E0CF8170], v5);
  v11(v10 + v7, *MEMORY[0x1E0CF8168], v5);
  sub_1DC080808(&qword_1F034D758, v1, MEMORY[0x1E0DAD9B8]);
  sub_1DC4015C4();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v0);
}

uint64_t type metadata accessor for WelcomeTracker()
{
  return objc_opt_self();
}

uint64_t sub_1DC19F04C()
{
  return swift_deallocClassInstance();
}

id sub_1DC19F05C@<X0>(_QWORD *a1@<X8>)
{
  unint64_t v2;
  uint64_t v3;
  id v5;

  if (qword_1EDB30F18 != -1)
    swift_once();
  v5 = (id)qword_1EDB30F08;
  v2 = sub_1DC19F0D0();
  v3 = MEMORY[0x1E0D609D0];
  a1[3] = v2;
  a1[4] = v3;
  *a1 = v5;
  return v5;
}

unint64_t sub_1DC19F0D0()
{
  unint64_t result;

  result = qword_1EDB3F978;
  if (!qword_1EDB3F978)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EDB3F978);
  }
  return result;
}

void destroy for StockChartCalloutLayoutAttributes(id *a1)
{

}

uint64_t initializeWithCopy for StockChartCalloutLayoutAttributes(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  __int128 v5;
  id v6;
  id v7;

  v3 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v4 = *(void **)(a2 + 40);
  *(_QWORD *)(a1 + 40) = v4;
  v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v5;
  v6 = v3;
  v7 = v4;
  return a1;
}

uint64_t assignWithCopy for StockChartCalloutLayoutAttributes(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v7 = *(void **)(a2 + 40);
  v8 = *(void **)(a1 + 40);
  *(_QWORD *)(a1 + 40) = v7;
  v9 = v7;

  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  return a1;
}

__n128 __swift_memcpy80_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

uint64_t assignWithTake for StockChartCalloutLayoutAttributes(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  __int128 v6;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v5 = *(void **)(a1 + 40);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);

  v6 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v6;
  return a1;
}

uint64_t getEnumTagSinglePayload for StockChartCalloutLayoutAttributes(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 80))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for StockChartCalloutLayoutAttributes(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 80) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for StockChartCalloutLayoutAttributes()
{
  return &type metadata for StockChartCalloutLayoutAttributes;
}

void sub_1DC19F33C()
{
  qword_1EDB5E128 = 0x4077700000000000;
}

double static MainMetrics.minimumWindowSize.getter()
{
  id v0;
  double v1;
  CGFloat v2;
  double v3;
  CGFloat v4;
  double v5;
  CGFloat v6;
  double v7;
  CGFloat v8;
  CGRect v10;

  v0 = objc_msgSend((id)objc_opt_self(), sel_mainScreen);
  objc_msgSend(v0, sel_bounds);
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = v7;

  v10.origin.x = v2;
  v10.origin.y = v4;
  v10.size.width = v6;
  v10.size.height = v8;
  CGRectGetHeight(v10);
  return 860.0;
}

void static MainMetrics.defaultWindowWindowSize.getter()
{
  void *v0;
  id v1;
  double v2;
  CGFloat v3;
  double v4;
  CGFloat v5;
  double v6;
  CGFloat v7;
  double v8;
  CGFloat v9;
  id v10;
  double v11;
  CGFloat v12;
  double v13;
  CGFloat v14;
  double v15;
  CGFloat v16;
  double v17;
  CGFloat v18;
  CGRect v19;
  CGRect v20;

  v0 = (void *)objc_opt_self();
  v1 = objc_msgSend(v0, sel_mainScreen);
  objc_msgSend(v1, sel_bounds);
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;

  v19.origin.x = v3;
  v19.origin.y = v5;
  v19.size.width = v7;
  v19.size.height = v9;
  CGRectGetWidth(v19);
  v10 = objc_msgSend(v0, sel_mainScreen);
  objc_msgSend(v10, sel_bounds);
  v12 = v11;
  v14 = v13;
  v16 = v15;
  v18 = v17;

  v20.origin.x = v12;
  v20.origin.y = v14;
  v20.size.width = v16;
  v20.size.height = v18;
  CGRectGetHeight(v20);
}

ValueMetadata *type metadata accessor for MainMetrics()
{
  return &type metadata for MainMetrics;
}

void sub_1DC19F618(CGFloat *a1@<X1>, CGRect *a2@<X8>)
{
  uint64_t v2;
  CGFloat v4;
  _QWORD *v5;
  uint64_t inited;
  void *v7;
  uint64_t v8;
  void *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, uint64_t);
  id v15;
  uint64_t v16;
  id v17;
  void *v18;
  void *v19;
  id v20;
  double v21;
  CGFloat v22;
  double v23;
  CGFloat v24;
  double v25;
  CGFloat v26;
  double v27;
  CGFloat v28;
  _QWORD *v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(uint64_t, uint64_t);
  id v36;
  uint64_t v37;
  id v38;
  void *v39;
  void *v40;
  id v41;
  double v42;
  CGFloat v43;
  double v44;
  CGFloat v45;
  double v46;
  CGFloat v47;
  double v48;
  CGFloat v49;
  _QWORD *v50;
  uint64_t v51;
  id v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t (*v57)(uint64_t, uint64_t);
  id v58;
  uint64_t v59;
  id v60;
  void *v61;
  void *v62;
  id v63;
  double v64;
  CGFloat v65;
  double v66;
  CGFloat v67;
  double v68;
  CGFloat v69;
  double v70;
  CGFloat v71;
  CGFloat v72;
  CGFloat v73;
  CGFloat v74;
  CGFloat v75;
  CGFloat v76;
  CGFloat v77;
  CGFloat v78;
  CGFloat v79;
  CGFloat v80;
  CGFloat v81;
  id v82;
  id v83;
  CGFloat Height;
  CGFloat Width;
  CGFloat v86;
  CGFloat v87;
  CGFloat v88;
  CGFloat v89;
  uint64_t v90;
  uint64_t v91;
  CGFloat v92;
  double rect;
  CGFloat recta;
  CGFloat v96;
  CGFloat v97;
  CGFloat v98;
  CGFloat y;
  CGFloat x;
  _QWORD *v101;
  CGFloat v102;
  double v103;
  CGFloat v104;
  CGRect v105;
  CGRect v106;
  CGRect v107;
  CGRect v108;
  CGRect v109;
  CGRect v110;
  CGRect v111;
  CGRect v112;
  CGRect v113;
  CGRect v114;
  CGRect v115;
  CGRect v116;
  CGRect v117;
  CGRect v118;
  CGRect v119;
  CGRect v120;
  CGRect v121;

  v103 = a1[3];
  v87 = *a1;
  v4 = *a1 - v103 - a1[5];
  v101 = (_QWORD *)(v2 + 16);
  v5 = (_QWORD *)*__swift_project_boxed_opaque_existential_1((_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 40));
  sub_1DC0FB194();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DC40C740;
  v7 = (void *)*MEMORY[0x1E0DC1138];
  *(_QWORD *)(inited + 32) = *MEMORY[0x1E0DC1138];
  v8 = sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FB00);
  swift_bridgeObjectRetain();
  v82 = v7;
  *(_QWORD *)(inited + 40) = sub_1DC4092F8();
  v9 = (void *)*MEMORY[0x1E0DC1140];
  *(_QWORD *)(inited + 64) = v8;
  *(_QWORD *)(inited + 72) = v9;
  v10 = v5 + 3;
  v12 = v5[6];
  v11 = v5[7];
  __swift_project_boxed_opaque_existential_1(v10, v12);
  v13 = *(_QWORD *)(v11 + 16);
  v14 = *(uint64_t (**)(uint64_t, uint64_t))(v13 + 48);
  v15 = v9;
  v16 = v14(v12, v13);
  v91 = sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FB30);
  *(_QWORD *)(inited + 104) = v91;
  *(_QWORD *)(inited + 80) = v16;
  sub_1DC0FA3C4(inited);
  v17 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  v18 = (void *)sub_1DC408A1C();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1DC0FB14C();
  v19 = (void *)sub_1DC408980();
  swift_bridgeObjectRelease();
  v20 = objc_msgSend(v17, sel_initWithString_attributes_, v18, v19);

  sub_1DC409190();
  v22 = v21;
  v24 = v23;
  v26 = v25;
  v28 = v27;

  v89 = v4 * 0.5;
  v105.origin.x = v22;
  v105.origin.y = v24;
  v105.size.width = v26;
  v105.size.height = v28;
  v97 = v103 + v4 * 0.5 - CGRectGetWidth(v105) * 0.5;
  rect = a1[6];
  v106.origin.x = v22;
  v106.origin.y = v24;
  v106.size.width = v26;
  v106.size.height = v28;
  Width = CGRectGetWidth(v106);
  v107.origin.x = v22;
  v107.origin.y = v24;
  v107.size.width = v26;
  v107.size.height = v28;
  Height = CGRectGetHeight(v107);
  v29 = (_QWORD *)*__swift_project_boxed_opaque_existential_1(v101, *(_QWORD *)(v90 + 40));
  v30 = swift_initStackObject();
  *(_OWORD *)(v30 + 16) = xmmword_1DC40C740;
  *(_QWORD *)(v30 + 32) = v82;
  swift_bridgeObjectRetain();
  v83 = v82;
  *(_QWORD *)(v30 + 40) = sub_1DC4092F8();
  *(_QWORD *)(v30 + 64) = v8;
  *(_QWORD *)(v30 + 72) = v15;
  v31 = v29 + 3;
  v33 = v29[6];
  v32 = v29[7];
  __swift_project_boxed_opaque_existential_1(v31, v33);
  v34 = *(_QWORD *)(v32 + 16);
  v35 = *(uint64_t (**)(uint64_t, uint64_t))(v34 + 104);
  v36 = v15;
  v37 = v35(v33, v34);
  *(_QWORD *)(v30 + 104) = v91;
  *(_QWORD *)(v30 + 80) = v37;
  sub_1DC0FA3C4(v30);
  v38 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  v39 = (void *)sub_1DC408A1C();
  swift_bridgeObjectRelease();
  v40 = (void *)sub_1DC408980();
  swift_bridgeObjectRelease();
  v41 = objc_msgSend(v38, sel_initWithString_attributes_, v39, v40);

  sub_1DC409190();
  v43 = v42;
  v45 = v44;
  v47 = v46;
  v49 = v48;

  v108.origin.x = v43;
  v108.origin.y = v45;
  v108.size.width = v47;
  v108.size.height = v49;
  v88 = v103 + v89 - CGRectGetWidth(v108) * 0.5;
  v109.origin.x = v97;
  v109.origin.y = rect;
  v109.size.width = Width;
  v109.size.height = Height;
  v81 = CGRectGetMaxY(v109) + a1[7];
  v110.origin.x = v43;
  v110.origin.y = v45;
  v110.size.width = v47;
  v110.size.height = v49;
  v86 = CGRectGetWidth(v110);
  v111.origin.x = v43;
  v111.origin.y = v45;
  v111.size.width = v47;
  v111.size.height = v49;
  v80 = CGRectGetHeight(v111);
  v50 = (_QWORD *)*__swift_project_boxed_opaque_existential_1(v101, *(_QWORD *)(v90 + 40));
  v51 = swift_initStackObject();
  *(_OWORD *)(v51 + 16) = xmmword_1DC40C740;
  *(_QWORD *)(v51 + 32) = v83;
  swift_bridgeObjectRetain();
  v52 = v83;
  *(_QWORD *)(v51 + 40) = sub_1DC4092F8();
  *(_QWORD *)(v51 + 64) = v8;
  *(_QWORD *)(v51 + 72) = v36;
  v53 = v50 + 3;
  v55 = v50[6];
  v54 = v50[7];
  __swift_project_boxed_opaque_existential_1(v53, v55);
  v56 = *(_QWORD *)(v54 + 16);
  v57 = *(uint64_t (**)(uint64_t, uint64_t))(v56 + 104);
  v58 = v36;
  v59 = v57(v55, v56);
  *(_QWORD *)(v51 + 104) = v91;
  *(_QWORD *)(v51 + 80) = v59;
  sub_1DC0FA3C4(v51);
  v60 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  v61 = (void *)sub_1DC408A1C();
  swift_bridgeObjectRelease();
  v62 = (void *)sub_1DC408980();
  swift_bridgeObjectRelease();
  v63 = objc_msgSend(v60, sel_initWithString_attributes_, v61, v62);

  sub_1DC409190();
  v65 = v64;
  v67 = v66;
  v69 = v68;
  v71 = v70;

  v112.origin.x = v65;
  v112.origin.y = v67;
  v112.size.width = v69;
  v112.size.height = v71;
  v104 = v103 + v89 - CGRectGetWidth(v112) * 0.5;
  v113.origin.x = v88;
  v113.origin.y = v81;
  v113.size.width = v86;
  v113.size.height = v80;
  v102 = CGRectGetMaxY(v113) + a1[8];
  v114.origin.x = v65;
  v114.origin.y = v67;
  v114.size.width = v69;
  v114.size.height = v71;
  v72 = CGRectGetWidth(v114);
  v115.origin.x = v65;
  v115.origin.y = v67;
  v115.size.width = v69;
  v115.size.height = v71;
  v73 = CGRectGetHeight(v115);
  v116.origin.x = v104;
  v116.origin.y = v102;
  v116.size.width = v72;
  v116.size.height = v73;
  v117.size.height = rect + CGRectGetMaxY(v116);
  v117.origin.x = 0.0;
  v117.origin.y = 0.0;
  v117.size.width = v87;
  v118 = CGRectIntegral(v117);
  x = v118.origin.x;
  y = v118.origin.y;
  v96 = v118.size.width;
  v92 = v118.size.height;
  v118.origin.x = v97;
  v118.origin.y = rect;
  v118.size.height = Height;
  v118.size.width = Width;
  v119 = CGRectIntegral(v118);
  v98 = v119.origin.x;
  recta = v119.origin.y;
  v74 = v119.size.width;
  v75 = v119.size.height;
  v119.origin.x = v88;
  v119.size.height = v80;
  v119.origin.y = v81;
  v119.size.width = v86;
  v120 = CGRectIntegral(v119);
  v76 = v120.origin.x;
  v77 = v120.origin.y;
  v78 = v120.size.width;
  v79 = v120.size.height;
  v120.origin.y = v102;
  v120.origin.x = v104;
  v120.size.width = v72;
  v120.size.height = v73;
  v121 = CGRectIntegral(v120);
  a2->origin.x = x;
  a2->origin.y = y;
  a2->size.width = v96;
  a2->size.height = v92;
  a2[1].origin.x = v98;
  a2[1].origin.y = recta;
  a2[1].size.width = v74;
  a2[1].size.height = v75;
  a2[2].origin.x = v76;
  a2[2].origin.y = v77;
  a2[2].size.width = v78;
  a2[2].size.height = v79;
  a2[3] = v121;
}

uint64_t type metadata accessor for BilingualFeedPromptViewLayoutAttributesFactory()
{
  return objc_opt_self();
}

uint64_t sub_1DC19FE94()
{
  return sub_1DC404CE4();
}

void sub_1DC19FEC0()
{
  char *v0;
  void *v1;
  id v2;
  void *v3;
  id v4;
  void *v5;
  id v6;
  objc_super v7;

  v7.receiver = v0;
  v7.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v7, sel_viewDidLoad);
  v1 = *(void **)&v0[OBJC_IVAR____TtC8StocksUI29StockFeedViewerViewController_blueprintPageViewController];
  objc_msgSend(v0, sel_addChildViewController_, v1);
  v2 = objc_msgSend(v0, sel_view);
  if (v2)
  {
    v3 = v2;
    v4 = objc_msgSend(v1, sel_view);
    if (v4)
    {
      v5 = v4;
      objc_msgSend(v3, sel_addSubview_, v4);

      objc_msgSend(v1, sel_didMoveToParentViewController_, v0);
      v6 = objc_msgSend(v0, sel_traitCollection);
      sub_1DC19FFBC((uint64_t)v6);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

id sub_1DC19FFBC(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  _QWORD *v9;
  id result;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  _QWORD *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[3];
  uint64_t v28;
  uint64_t v29;

  v2 = v1;
  v4 = (uint64_t)&v2[OBJC_IVAR____TtC8StocksUI29StockFeedViewerViewController_styler];
  swift_beginAccess();
  sub_1DC0824D4(v4, (uint64_t)v27);
  v5 = v28;
  v6 = v29;
  __swift_project_boxed_opaque_existential_1(v27, v28);
  v7 = *(_QWORD *)(v6 + 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 8);
  v25 = v5;
  v26 = v6;
  __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v24);
  v8(a1, v5, v7);
  swift_beginAccess();
  __swift_destroy_boxed_opaque_existential_1(v4);
  sub_1DC097DD0(&v24, v4);
  swift_endAccess();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
  sub_1DC0824D4(v4, (uint64_t)v27);
  v9 = __swift_project_boxed_opaque_existential_1(v27, v28);
  result = objc_msgSend(v2, sel_view);
  if (result)
  {
    v11 = result;
    v12 = *(_QWORD *)(*v9 + 40);
    v13 = *(_QWORD *)(*v9 + 48);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(*v9 + 16), v12);
    (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v13 + 72))(&v24, v12, v13);
    v14 = v25;
    v15 = v26;
    __swift_project_boxed_opaque_existential_1(&v24, v25);
    v16 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v15 + 72))(v14, v15);
    objc_msgSend(v11, sel_setBackgroundColor_, v16);

    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v24);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
    sub_1DC0824D4(v4, (uint64_t)v27);
    v17 = __swift_project_boxed_opaque_existential_1(v27, v28);
    result = objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC8StocksUI29StockFeedViewerViewController_blueprintPageViewController], sel_view);
    if (result)
    {
      v18 = result;
      v19 = *(_QWORD *)(*v17 + 40);
      v20 = *(_QWORD *)(*v17 + 48);
      __swift_project_boxed_opaque_existential_1((_QWORD *)(*v17 + 16), v19);
      (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v20 + 72))(&v24, v19, v20);
      v21 = v25;
      v22 = v26;
      __swift_project_boxed_opaque_existential_1(&v24, v25);
      v23 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v22 + 72))(v21, v22);
      objc_msgSend(v18, sel_setBackgroundColor_, v23);

      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v24);
      return (id)__swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1DC1A0348(char a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  objc_super v10;

  v2 = v1;
  v10.receiver = v2;
  v10.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v10, sel_viewWillAppear_, a1 & 1);
  swift_getObjectType();
  sub_1DC404D98();
  if (sub_1DC404CD8() && (sub_1DC0C70EC(), sub_1DC0A3390(0, &qword_1EDB37C28), (swift_dynamicCast() & 1) != 0))
  {
    v4 = *((_QWORD *)&v8 + 1);
    if (*((_QWORD *)&v8 + 1))
    {
      v5 = v9;
      __swift_project_boxed_opaque_existential_1(&v7, *((uint64_t *)&v8 + 1));
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v5);
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v7);
    }
  }
  else
  {
    v9 = 0;
    v7 = 0u;
    v8 = 0u;
  }
  return sub_1DC17C7C8((uint64_t)&v7, &qword_1F034D790, &qword_1EDB37C28);
}

uint64_t sub_1DC1A0580(char a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  objc_super v9;

  v9.receiver = v1;
  v9.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v9, sel_viewWillDisappear_, a1 & 1);
  if (sub_1DC404CD8() && (sub_1DC0C70EC(), sub_1DC0A3390(0, &qword_1EDB37C28), (swift_dynamicCast() & 1) != 0))
  {
    v3 = *((_QWORD *)&v7 + 1);
    if (*((_QWORD *)&v7 + 1))
    {
      v4 = v8;
      __swift_project_boxed_opaque_existential_1(&v6, *((uint64_t *)&v7 + 1));
      (*(void (**)(uint64_t, uint64_t))(v4 + 16))(v3, v4);
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v6);
    }
  }
  else
  {
    v8 = 0;
    v6 = 0u;
    v7 = 0u;
  }
  return sub_1DC17C7C8((uint64_t)&v6, &qword_1F034D790, &qword_1EDB37C28);
}

void sub_1DC1A0754(uint64_t a1)
{
  char *v1;
  id v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t i;
  id v7;
  void *v8;
  id v9;
  id v10;
  __int128 v11[2];
  uint64_t v12;
  id v13;
  _QWORD v14[5];
  objc_super v15;

  v15.receiver = v1;
  v15.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v15, sel_didMoveToParentViewController_, a1);
  v3 = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC8StocksUI29StockFeedViewerViewController_blueprintPageViewController], sel_childViewControllers);
  sub_1DC0C70EC();
  v4 = sub_1DC408CD4();

  if (!(v4 >> 62))
  {
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v5)
      goto LABEL_3;
LABEL_13:
    swift_bridgeObjectRelease();
    return;
  }
  swift_bridgeObjectRetain();
  v5 = sub_1DC409850();
  swift_bridgeObjectRelease();
  if (!v5)
    goto LABEL_13;
LABEL_3:
  if (v5 >= 1)
  {
    for (i = 0; i != v5; ++i)
    {
      if ((v4 & 0xC000000000000001) != 0)
        v7 = (id)MEMORY[0x1DF0C9FBC](i, v4);
      else
        v7 = *(id *)(v4 + 8 * i + 32);
      v8 = v7;
      v13 = v7;
      sub_1DC0A3390(0, &qword_1EDB351A0);
      v9 = v8;
      if ((swift_dynamicCast() & 1) != 0)
      {
        sub_1DC097DD0(v11, (uint64_t)v14);
        v10 = objc_msgSend((id)*__swift_project_boxed_opaque_existential_1(v14, v14[3]), sel_parentViewController);
        sub_1DC404048();

        __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
      }
      else
      {
        v12 = 0;
        memset(v11, 0, sizeof(v11));

        sub_1DC17C7C8((uint64_t)v11, &qword_1EDB351A8, &qword_1EDB351A0);
      }
    }
    goto LABEL_13;
  }
  __break(1u);
}

uint64_t sub_1DC1A09B0(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  void *v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;

  swift_getObjectType();
  v7 = type metadata accessor for StockFeedPage();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for StockFeedViewerPage();
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC081B48(&qword_1EDB397B8, v13, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedViewerViewController, (uint64_t)&unk_1DC412F20);
  sub_1DC4059E0();
  sub_1DC081B48(&qword_1EDB397C0, v14, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedViewerViewController, (uint64_t)&unk_1DC412F48);
  sub_1DC405C98();
  sub_1DC081B48(&qword_1EDB397D8, v15, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedViewerViewController, (uint64_t)&unk_1DC412EF0);
  sub_1DC403FF4();
  sub_1DC081B48(&qword_1EDB397C8, v16, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedViewerViewController, (uint64_t)&unk_1DC412ED4);
  sub_1DC406280();
  if (a4
    && (v24 = a4,
        sub_1DC0C70EC(),
        sub_1DC0A3390(0, &qword_1EDB37C28),
        v17 = a4,
        (swift_dynamicCast() & 1) != 0))
  {
    v18 = *((_QWORD *)&v26 + 1);
    if (*((_QWORD *)&v26 + 1))
    {
      v19 = v27;
      __swift_project_boxed_opaque_existential_1(&v25, *((uint64_t *)&v26 + 1));
      (*(void (**)(uint64_t, uint64_t))(v19 + 16))(v18, v19);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v25);
      goto LABEL_7;
    }
  }
  else
  {
    v27 = 0;
    v25 = 0u;
    v26 = 0u;
  }
  sub_1DC17C7C8((uint64_t)&v25, &qword_1F034D790, &qword_1EDB37C28);
LABEL_7:
  v24 = a3;
  sub_1DC0C70EC();
  sub_1DC0A3390(0, &qword_1EDB37C28);
  a3;
  if (swift_dynamicCast())
  {
    v20 = *((_QWORD *)&v26 + 1);
    v21 = v27;
    __swift_project_boxed_opaque_existential_1(&v25, *((uint64_t *)&v26 + 1));
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v21);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v25);
  }
  else
  {
    v27 = 0;
    v25 = 0u;
    v26 = 0u;
    sub_1DC17C7C8((uint64_t)&v25, &qword_1F034D790, &qword_1EDB37C28);
  }
  result = sub_1DC4090F4();
  if ((result & 1) == 0)
  {
    sub_1DC1A1B94(a2, (uint64_t)v12);
    sub_1DC1A1BD8((uint64_t)v12, (uint64_t)v9);
    type metadata accessor for StockFeedViewerInteractor();
    sub_1DC25D1D8((uint64_t)v9);
    return sub_1DC1A1C1C((uint64_t)v9);
  }
  return result;
}

uint64_t sub_1DC1A0CD0()
{
  swift_getObjectType();
  return sub_1DC405F38();
}

uint64_t sub_1DC1A0D3C()
{
  swift_getObjectType();
  return sub_1DC405EFC();
}

uint64_t sub_1DC1A0D80()
{
  swift_getObjectType();
  return sub_1DC405F14();
}

uint64_t sub_1DC1A0DE4()
{
  swift_getObjectType();
  return sub_1DC405F44();
}

uint64_t sub_1DC1A0E50()
{
  swift_getObjectType();
  return sub_1DC405EFC();
}

uint64_t sub_1DC1A0E94()
{
  swift_getObjectType();
  return sub_1DC405F08();
}

uint64_t sub_1DC1A0EF0()
{
  swift_getObjectType();
  return sub_1DC405EFC();
}

uint64_t sub_1DC1A0F34(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t result;
  uint64_t v17;

  v3 = sub_1DC4059F8();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1DC404CD8();
  if (v7)
  {
    v8 = (void *)v7;
    swift_getObjectType();
    if (swift_conformsToProtocol2())
      v9 = v8;
    else
      v9 = 0;
    if (v9)
    {
      swift_getObjectType();
      sub_1DC4064CC();
    }

  }
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a2, v3);
  result = (*(uint64_t (**)(char *, uint64_t))(v4 + 88))(v6, v3);
  if ((_DWORD)result == *MEMORY[0x1E0DBA260] || (_DWORD)result == *MEMORY[0x1E0DBA290])
    return sub_1DC404CF0();
  if ((_DWORD)result != *MEMORY[0x1E0DBA298]
    && (_DWORD)result != *MEMORY[0x1E0DBA288]
    && (_DWORD)result != *MEMORY[0x1E0DBA2A0]
    && (_DWORD)result != *MEMORY[0x1E0DBA280]
    && (_DWORD)result != *MEMORY[0x1E0DBA278]
    && (_DWORD)result != *MEMORY[0x1E0DBA270])
  {
    result = sub_1DC409838();
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC1A111C()
{
  swift_getObjectType();
  return sub_1DC4064F0();
}

uint64_t sub_1DC1A1160(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1DC1A1178(a1, a2, a3, a4, MEMORY[0x1E0DBBC60]);
}

uint64_t sub_1DC1A116C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1DC1A1178(a1, a2, a3, a4, MEMORY[0x1E0DBBC80]);
}

uint64_t sub_1DC1A1178(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t ObjectType;

  v8 = sub_1DC404CD8();
  if (v8)
  {
    v9 = (void *)v8;
    swift_getObjectType();
    v10 = swift_conformsToProtocol2();
    if (v10)
      v11 = v10;
    else
      v11 = 0;
    if (v10)
      v12 = v9;
    else
      v12 = 0;
    if (v12)
    {
      ObjectType = swift_getObjectType();
      a5(a1, a2, ObjectType, v11);
    }

  }
  return sub_1DC404CF0();
}

uint64_t sub_1DC1A1220()
{
  swift_getObjectType();
  return sub_1DC406544();
}

void sub_1DC1A126C()
{
  swift_getObjectType();
  JUMPOUT(0x1DF0C6DA0);
}

void sub_1DC1A12B0()
{
  swift_getObjectType();
  JUMPOUT(0x1DF0C6DACLL);
}

uint64_t sub_1DC1A1304@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;

  v4 = sub_1DC404BE8();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v5 + 16))(v8, a1, v4, v6);
  v9 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v8, v4);
  if (v9 == *MEMORY[0x1E0DB8468])
  {
    v10 = *MEMORY[0x1E0DBA290];
    v11 = sub_1DC4059F8();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(a2, v10, v11);
    v12 = (unsigned int *)MEMORY[0x1E0DBA230];
LABEL_5:
    v15 = *v12;
    v16 = sub_1DC4059C8();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(a2, v15, v16);
  }
  if (v9 == *MEMORY[0x1E0DB8460])
  {
    v13 = *MEMORY[0x1E0DBA1F8];
    v14 = sub_1DC4059B0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(a2, v13, v14);
    v12 = (unsigned int *)MEMORY[0x1E0DBA208];
    goto LABEL_5;
  }
  result = sub_1DC409838();
  __break(1u);
  return result;
}

uint64_t sub_1DC1A14A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DC1A1304(a1, a2);
}

uint64_t sub_1DC1A14B8()
{
  __int128 v1;
  __int128 v2;
  uint64_t v3;
  _QWORD v4[4];

  if (sub_1DC404CD8() && (sub_1DC0C70EC(), sub_1DC0A3390(0, &qword_1EDB2A480), (swift_dynamicCast() & 1) != 0))
  {
    if (*((_QWORD *)&v2 + 1))
    {
      sub_1DC097DD0(&v1, (uint64_t)v4);
      __swift_project_boxed_opaque_existential_1(v4, v4[3]);
      sub_1DC405C8C();
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
    }
  }
  else
  {
    v3 = 0;
    v1 = 0u;
    v2 = 0u;
  }
  sub_1DC17C7C8((uint64_t)&v1, &qword_1F034D798, &qword_1EDB2A480);
  return sub_1DC404C00();
}

uint64_t sub_1DC1A15B4()
{
  return sub_1DC1A14B8();
}

uint64_t sub_1DC1A15D4()
{
  __int128 v1;
  __int128 v2;
  uint64_t v3;
  _QWORD v4[4];

  if (sub_1DC404CD8()
    && (sub_1DC0C70EC(), sub_1DC0A3390(0, (unint64_t *)&unk_1EDB2A3B0), (swift_dynamicCast() & 1) != 0))
  {
    if (*((_QWORD *)&v2 + 1))
    {
      sub_1DC097DD0(&v1, (uint64_t)v4);
      __swift_project_boxed_opaque_existential_1(v4, v4[3]);
      sub_1DC4059D4();
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
    }
  }
  else
  {
    v3 = 0;
    v1 = 0u;
    v2 = 0u;
  }
  sub_1DC17C7C8((uint64_t)&v1, &qword_1EDB40AB8, (unint64_t *)&unk_1EDB2A3B0);
  return sub_1DC4047F8();
}

uint64_t sub_1DC1A16D0()
{
  return sub_1DC1A15D4();
}

id sub_1DC1A16F0()
{
  uint64_t v0;
  __int128 v2;
  __int128 v3;
  uint64_t v4;
  _QWORD v5[4];

  if (!sub_1DC404CD8() || (sub_1DC0C70EC(), sub_1DC0A3390(0, &qword_1EDB29B28), (swift_dynamicCast() & 1) == 0))
  {
    v4 = 0;
    v2 = 0u;
    v3 = 0u;
    goto LABEL_6;
  }
  if (!*((_QWORD *)&v3 + 1))
  {
LABEL_6:
    sub_1DC17C7C8((uint64_t)&v2, &qword_1F034D7A0, &qword_1EDB29B28);
    return objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  }
  sub_1DC097DD0(&v2, (uint64_t)v5);
  __swift_project_boxed_opaque_existential_1(v5, v5[3]);
  v0 = sub_1DC403FE8();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
  return (id)v0;
}

uint64_t sub_1DC1A1810()
{
  uint64_t v0;
  char v1;
  __int128 v3;
  __int128 v4;
  uint64_t v5;
  _QWORD v6[4];

  v0 = sub_1DC404CD8();
  if (!v0 || (v6[0] = v0, sub_1DC0C70EC(), sub_1DC0A3390(0, &qword_1EDB29B28), (swift_dynamicCast() & 1) == 0))
  {
    v5 = 0;
    v3 = 0u;
    v4 = 0u;
    goto LABEL_6;
  }
  if (!*((_QWORD *)&v4 + 1))
  {
LABEL_6:
    sub_1DC17C7C8((uint64_t)&v3, &qword_1F034D7A0, &qword_1EDB29B28);
    v1 = 0;
    return v1 & 1;
  }
  sub_1DC097DD0(&v3, (uint64_t)v6);
  __swift_project_boxed_opaque_existential_1(v6, v6[3]);
  v1 = sub_1DC403FDC();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
  return v1 & 1;
}

id sub_1DC1A1908()
{
  return sub_1DC1A16F0();
}

uint64_t sub_1DC1A1928()
{
  return sub_1DC1A1810() & 1;
}

id sub_1DC1A194C()
{
  id result;
  id v1;

  result = (id)sub_1DC404CD8();
  if (!result)
    return v1;
  return result;
}

void sub_1DC1A1998(uint64_t a1@<X8>)
{
  id *v1;
  id v3;
  id v4;
  uint64_t v5;
  char v6;

  v3 = objc_msgSend(*v1, sel_traitCollection);
  v4 = objc_msgSend(v3, sel_horizontalSizeClass);

  if (v4 == (id)1)
  {
    v6 = 0;
    v5 = 0x4030000000000000;
  }
  else
  {
    v5 = 0;
    v6 = 1;
  }
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  *(_BYTE *)(a1 + 32) = v6;
}

void sub_1DC1A1A1C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  void *v4;

  v3 = *MEMORY[0x1E0DEEDD8] & *v1;
  v4 = (void *)sub_1DC404F60();
  (*(void (**)(_QWORD, uint64_t))(a1 + 8))(*(_QWORD *)(v3 + *MEMORY[0x1E0DB8D50]), a1);

}

void sub_1DC1A1A8C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  void *v4;

  v3 = *MEMORY[0x1E0DEEDD8] & *v1;
  v4 = (void *)sub_1DC404F60();
  (*(void (**)(_QWORD, uint64_t))(a1 + 16))(*(_QWORD *)(v3 + *MEMORY[0x1E0DB8D50]), a1);

}

void sub_1DC1A1AFC(uint64_t a1, uint64_t a2)
{
  sub_1DC1A1A1C(*(_QWORD *)(a2 - 8));
}

void sub_1DC1A1B20(uint64_t a1, uint64_t a2)
{
  sub_1DC1A1A8C(*(_QWORD *)(a2 - 8));
}

uint64_t type metadata accessor for StockFeedViewerViewController()
{
  return objc_opt_self();
}

uint64_t sub_1DC1A1B64()
{
  return sub_1DC081B48(&qword_1EDB31248, 255, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedViewerPage, (uint64_t)&unk_1DC42DE94);
}

uint64_t sub_1DC1A1B94(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for StockFeedViewerPage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC1A1BD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for StockFeedPage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC1A1C1C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for StockFeedPage();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1DC1A1C58(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  _QWORD *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  sub_1DC0CFAFC(0, &qword_1F034D810);
  v2 = (_QWORD *)sub_1DC409874();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    v5 = *(v4 - 3);
    v6 = *(v4 - 2);
    v8 = *(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_1DC0ED368(v5, v6);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v2[6] + 16 * result);
    *v11 = v5;
    v11[1] = v6;
    v12 = (_QWORD *)(v2[7] + 16 * result);
    *v12 = v8;
    v12[1] = v7;
    v13 = v2[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1DC1A1D84(uint64_t a1)
{
  return sub_1DC1A1F24(a1, (unint64_t *)&qword_1EDB3FD28, (uint64_t)&unk_1EDB3F870, 0x1E0CB3578);
}

unint64_t sub_1DC1A1DA0(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  sub_1DC1A4934(0, (unint64_t *)&unk_1F034D7F8, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, &qword_1F034BCC0, (uint64_t)&unk_1DC40D990);
  v2 = sub_1DC409874();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1DC0FA2F4(v6, (uint64_t)&v13, (uint64_t)&unk_1F034D808, (uint64_t)type metadata accessor for OpenExternalURLOptionsKey, (uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_1DC1A49C0);
    v7 = v13;
    result = sub_1DC0FA0F4(v13);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_QWORD *)(v3[6] + 8 * result) = v7;
    result = (unint64_t)sub_1DC0FA0E4(&v14, (_OWORD *)(v3[7] + 32 * result));
    v10 = v3[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      goto LABEL_11;
    v3[2] = v12;
    v6 += 40;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1DC1A1F08(uint64_t a1)
{
  return sub_1DC1A1F24(a1, &qword_1F034D818, (uint64_t)&unk_1F034D820, 0x1E0D58B48);
}

unint64_t sub_1DC1A1F24(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  void **v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  unint64_t result;
  char v13;
  uint64_t *v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v5 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  sub_1DC1A4D5C(0, a2, a3, a4, (void (*)(uint64_t, uint64_t, uint64_t))sub_1DC0821D4);
  v5 = (_QWORD *)sub_1DC409874();
  v6 = *(_QWORD *)(a1 + 16);
  if (!v6)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v5;
  }
  swift_retain();
  v7 = (void **)(a1 + 48);
  while (1)
  {
    v8 = (uint64_t)*(v7 - 2);
    v9 = (uint64_t)*(v7 - 1);
    v10 = *v7;
    swift_bridgeObjectRetain();
    v11 = v10;
    result = sub_1DC0ED368(v8, v9);
    if ((v13 & 1) != 0)
      break;
    *(_QWORD *)((char *)v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v14 = (uint64_t *)(v5[6] + 16 * result);
    *v14 = v8;
    v14[1] = v9;
    *(_QWORD *)(v5[7] + 8 * result) = v11;
    v15 = v5[2];
    v16 = __OFADD__(v15, 1);
    v17 = v15 + 1;
    if (v16)
      goto LABEL_11;
    v5[2] = v17;
    v7 += 3;
    if (!--v6)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1DC1A2040(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  id v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  sub_1DC1A4A20();
  v2 = (_QWORD *)sub_1DC409874();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 40);
  while (1)
  {
    v5 = *v4;
    v6 = (id)*(v4 - 1);
    result = sub_1DC0FA0F4((uint64_t)v6);
    if ((v8 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v9 = 8 * result;
    *(_QWORD *)(v2[6] + v9) = v6;
    *(_QWORD *)(v2[7] + v9) = v5;
    v10 = v2[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      goto LABEL_11;
    v2[2] = v12;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1DC1A2144(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  sub_1DC1A4934(0, &qword_1EDB3FD68, (uint64_t (*)(uint64_t))type metadata accessor for AttributeName, (unint64_t *)&unk_1EDB3FA70, (uint64_t)&unk_1DC40D884);
  v2 = sub_1DC409874();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1DC0FA2F4(v6, (uint64_t)&v13, (uint64_t)&unk_1EDB3FA98, (uint64_t)type metadata accessor for AttributeName, (uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_1DC1A49C0);
    v7 = v13;
    result = sub_1DC0FA0F4(v13);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_QWORD *)(v3[6] + 8 * result) = v7;
    result = (unint64_t)sub_1DC0FA0E4(&v14, (_OWORD *)(v3[7] + 32 * result));
    v10 = v3[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      goto LABEL_11;
    v3[2] = v12;
    v6 += 40;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1DC1A22AC(uint64_t a1)
{
  return sub_1DC1A274C(a1, (unint64_t *)&unk_1F034D848, (uint64_t)&qword_1EDB3F920, (uint64_t)&protocolRef_FCHeadlineProviding);
}

unint64_t sub_1DC1A22C8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t result;
  char v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  _QWORD v23[2];

  sub_1DC1A4AA0();
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v8 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  sub_1DC1A4B0C();
  v7 = sub_1DC409874();
  v8 = (_QWORD *)v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  v10 = *(int *)(v3 + 48);
  v11 = v7 + 64;
  v12 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v23[1] = a1;
  v13 = a1 + v12;
  v14 = *(_QWORD *)(v4 + 72);
  swift_retain();
  while (1)
  {
    sub_1DC0990BC(v13, (uint64_t)v6, (uint64_t (*)(_QWORD))sub_1DC1A4AA0);
    result = sub_1DC1A3640((uint64_t)v6);
    if ((v16 & 1) != 0)
      break;
    v17 = result;
    *(_QWORD *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v18 = v8[6];
    v19 = sub_1DC400220();
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v18 + *(_QWORD *)(*(_QWORD *)(v19 - 8) + 72) * v17, v6, v19);
    *(_QWORD *)(v8[7] + 8 * v17) = *(_QWORD *)&v6[v10];
    v20 = v8[2];
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (v21)
      goto LABEL_11;
    v8[2] = v22;
    v13 += v14;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1DC1A2454(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  sub_1DC1A48B8();
  v2 = (_QWORD *)sub_1DC409874();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v5 = *(v4 - 2);
    v6 = *(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_1DC0ED368(v5, v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = (uint64_t *)(v2[6] + 16 * result);
    *v10 = v5;
    v10[1] = v6;
    *(_QWORD *)(v2[7] + 8 * result) = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1DC1A2568(uint64_t a1)
{
  return sub_1DC1A2584(a1, (unint64_t *)&qword_1EDB3F5F8, (void (*)(uint64_t))MEMORY[0x1E0DAF0D0], (unint64_t *)&qword_1EDB3FD00);
}

unint64_t sub_1DC1A2584(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), unint64_t *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t result;
  char v22;
  unint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  _QWORD v30[2];
  char *v31;
  unint64_t *v32;

  v32 = a2;
  sub_1DC1139E8(0, a2, a3);
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v11 = (_QWORD *)((char *)v30 - v10);
  if (!*(_QWORD *)(a1 + 16))
  {
    v13 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  sub_1DC0E93B8(0, a4, a3);
  v12 = sub_1DC409874();
  v13 = (_QWORD *)v12;
  v14 = *(_QWORD *)(a1 + 16);
  if (!v14)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v13;
  }
  v15 = (char *)v11 + *(int *)(v8 + 48);
  v30[1] = a1;
  v31 = v15;
  v16 = v12 + 64;
  v17 = a1 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
  v18 = *(_QWORD *)(v9 + 72);
  swift_retain();
  while (1)
  {
    sub_1DC0FA2F4(v17, (uint64_t)v11, (uint64_t)v32, (uint64_t)a3, (uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_1DC1139E8);
    v20 = *v11;
    v19 = v11[1];
    result = sub_1DC0ED368(*v11, v19);
    if ((v22 & 1) != 0)
      break;
    v23 = result;
    *(_QWORD *)(v16 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v24 = (uint64_t *)(v13[6] + 16 * result);
    *v24 = v20;
    v24[1] = v19;
    v25 = v13[7];
    v26 = ((uint64_t (*)(_QWORD))a3)(0);
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v25 + *(_QWORD *)(*(_QWORD *)(v26 - 8) + 72) * v23, v31, v26);
    v27 = v13[2];
    v28 = __OFADD__(v27, 1);
    v29 = v27 + 1;
    if (v28)
      goto LABEL_11;
    v13[2] = v29;
    v17 += v18;
    if (!--v14)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1DC1A2730(uint64_t a1)
{
  return sub_1DC1A274C(a1, &qword_1EDB3FD38, (uint64_t)&qword_1EDB3FB50, (uint64_t)&protocolRef_CAAction);
}

unint64_t sub_1DC1A274C(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t result;
  char v12;
  uint64_t *v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  if (!*(_QWORD *)(a1 + 16))
  {
    v5 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  sub_1DC1A4D5C(0, a2, a3, a4, (void (*)(uint64_t, uint64_t, uint64_t))sub_1DC0995E8);
  v5 = (_QWORD *)sub_1DC409874();
  v6 = *(_QWORD *)(a1 + 16);
  if (!v6)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v5;
  }
  swift_retain();
  v7 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v8 = *(v7 - 2);
    v9 = *(v7 - 1);
    v10 = *v7;
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    result = sub_1DC0ED368(v8, v9);
    if ((v12 & 1) != 0)
      break;
    *(_QWORD *)((char *)v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v13 = (uint64_t *)(v5[6] + 16 * result);
    *v13 = v8;
    v13[1] = v9;
    *(_QWORD *)(v5[7] + 8 * result) = v10;
    v14 = v5[2];
    v15 = __OFADD__(v14, 1);
    v16 = v14 + 1;
    if (v15)
      goto LABEL_11;
    v5[2] = v16;
    v7 += 3;
    if (!--v6)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1DC1A2868@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v4 = 0;
    v5 = (uint64_t *)(a1 + 32);
    do
    {
      v7 = *v5++;
      v6 = v7;
      if ((v7 & ~v4) == 0)
        v6 = 0;
      v4 |= v6;
      --v3;
    }
    while (v3);
  }
  else
  {
    v4 = 0;
  }
  result = swift_bridgeObjectRelease();
  *a2 = v4;
  return result;
}

id StocksAudioTrack.duration.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + *(int *)(type metadata accessor for StocksAudioTrack() + 24)), sel_duration);
}

_QWORD *sub_1DC1A28E4@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

void sub_1DC1A28F0(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

_QWORD *sub_1DC1A28F8@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 | *result;
  return result;
}

_QWORD *sub_1DC1A290C@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & *result;
  return result;
}

_QWORD *sub_1DC1A2920@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 ^ *result;
  return result;
}

BOOL sub_1DC1A2934(_QWORD *a1, uint64_t *a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = *v2 & *a2;
  if (v4 != *a2)
    *v2 |= v3;
  *a1 = v3;
  return v4 != v3;
}

_QWORD *sub_1DC1A2964@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v3;

  v3 = *v2 & *result;
  if (v3)
    *v2 &= ~*result;
  *(_QWORD *)a2 = v3;
  *(_BYTE *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t *sub_1DC1A2990@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *result;
  v4 = *v2;
  *v2 |= *result;
  v5 = v4 & v3;
  *(_QWORD *)a2 = v5;
  *(_BYTE *)(a2 + 8) = v5 == 0;
  return result;
}

_QWORD *sub_1DC1A29B4(_QWORD *result)
{
  _QWORD *v1;

  *v1 |= *result;
  return result;
}

_QWORD *sub_1DC1A29C8(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= *result;
  return result;
}

_QWORD *sub_1DC1A29DC(_QWORD *result)
{
  _QWORD *v1;

  *v1 ^= *result;
  return result;
}

_QWORD *sub_1DC1A29F0@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_1DC1A2A04(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & ~*a1) == 0;
}

BOOL sub_1DC1A2A18(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & *a1) == 0;
}

BOOL sub_1DC1A2A2C(_QWORD *a1)
{
  _QWORD *v1;

  return (*a1 & ~*v1) == 0;
}

BOOL sub_1DC1A2A40()
{
  _QWORD *v0;

  return *v0 == 0;
}

uint64_t sub_1DC1A2A50()
{
  return sub_1DC409640();
}

_QWORD *sub_1DC1A2A68(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= ~*result;
  return result;
}

uint64_t sub_1DC1A2A7C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = sub_1DC1A4E04(a1);
  result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

uint64_t StocksAudioTrack.headline.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t StocksAudioTrack.audioTrackKind.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for StocksAudioTrack();
  return sub_1DC0990BC(v1 + *(int *)(v3 + 48), a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0D56F40]);
}

void sub_1DC1A2AFC(void *a1@<X0>, __int16 a2@<W1>, void *a3@<X2>, void *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  char *v14;
  id v15;
  id v16;
  id v17;
  void *v18;
  id v19;
  uint64_t v20;
  id v21;

  v20 = a5;
  v9 = sub_1DC402188();
  MEMORY[0x1E0C80A78](v9);
  v10 = sub_1DC4020BC();
  v11 = *(_QWORD *)(v10 - 8);
  *(_QWORD *)&v12 = MEMORY[0x1E0C80A78](v10).n128_u64[0];
  v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = objc_msgSend(a1, sel_asset, v12, v20);
  v21 = objc_msgSend(v15, sel_asset);

  if ((a2 & 0x100) != 0 && a3 && a4)
  {
    v16 = a3;
    v17 = objc_msgSend(a4, sel_asset);
    if (v17)
    {
      v18 = v17;
      objc_msgSend(a1, sel_duration);
      objc_msgSend(a1, sel_embeddedUpsellStartTime);
      objc_msgSend(a1, sel_embeddedUpsellEndTime);
      v19 = v18;
      objc_msgSend(v16, sel_duration);
      objc_msgSend(v16, sel_playPosition);
      sub_1DC40922C();
      sub_1DC4020B0();
      sub_1DC401B10();

      (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
      return;
    }

  }
  sub_1DC401B04();

}

uint64_t sub_1DC1A2D20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1DC0990BC(v2 + *(int *)(a1 + 48), a2, (uint64_t (*)(_QWORD))MEMORY[0x1E0D56F40]);
}

id sub_1DC1A2D48(uint64_t a1)
{
  uint64_t v1;

  return objc_msgSend(*(id *)(v1 + *(int *)(a1 + 24)), sel_duration);
}

uint64_t StocksAudioTrack.identifier.getter()
{
  id *v0;
  id v1;
  uint64_t v2;

  v1 = objc_msgSend(*v0, sel_identifier);
  v2 = sub_1DC408A4C();

  return v2;
}

uint64_t StocksAudioTrack.hash(into:)()
{
  id *v0;
  id v1;

  v1 = objc_msgSend(*v0, sel_identifier);
  sub_1DC408A4C();

  sub_1DC408AF4();
  return swift_bridgeObjectRelease();
}

uint64_t StocksAudioTrack.hashValue.getter()
{
  id *v0;
  id v1;

  sub_1DC409AC0();
  v1 = objc_msgSend(*v0, sel_identifier);
  sub_1DC408A4C();

  sub_1DC408AF4();
  swift_bridgeObjectRelease();
  return sub_1DC409AF0();
}

uint64_t sub_1DC1A2E9C()
{
  id *v0;
  id v1;

  sub_1DC409AC0();
  v1 = objc_msgSend(*v0, sel_identifier);
  sub_1DC408A4C();

  sub_1DC408AF4();
  swift_bridgeObjectRelease();
  return sub_1DC409AF0();
}

uint64_t sub_1DC1A2F1C()
{
  id *v0;
  id v1;

  v1 = objc_msgSend(*v0, sel_identifier);
  sub_1DC408A4C();

  sub_1DC408AF4();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DC1A2F80()
{
  id *v0;
  id v1;

  sub_1DC409AC0();
  v1 = objc_msgSend(*v0, sel_identifier);
  sub_1DC408A4C();

  sub_1DC408AF4();
  swift_bridgeObjectRelease();
  return sub_1DC409AF0();
}

uint64_t StocksAudioTrack.effectiveTitle.getter()
{
  id *v0;
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t ObjCClassFromMetadata;
  id v5;
  unint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  unint64_t v11;

  if ((*((_BYTE *)v0 + *(int *)(type metadata accessor for StocksAudioTrack() + 32)) & 0x80) != 0)
  {
    type metadata accessor for Localized();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    v5 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
    v6 = 0xE000000000000000;
    sub_1DC3FFC80();

    sub_1DC089DA4(0, (unint64_t *)&qword_1EDB400C0, (uint64_t (*)(uint64_t))sub_1DC1542B8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_1DC40DC10;
    v8 = objc_msgSend(*v0, sel_title, 0x80000001DC437DF0);
    if (v8)
    {
      v9 = v8;
      v10 = sub_1DC408A4C();
      v6 = v11;

    }
    else
    {
      v10 = 0;
    }
    *(_QWORD *)(v7 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v7 + 64) = sub_1DC0E7FAC();
    *(_QWORD *)(v7 + 32) = v10;
    *(_QWORD *)(v7 + 40) = v6;
    v3 = sub_1DC408A70();
    swift_bridgeObjectRelease();
  }
  else
  {
    v1 = objc_msgSend(*v0, sel_title);
    if (v1)
    {
      v2 = v1;
      v3 = sub_1DC408A4C();

    }
    else
    {
      return 0;
    }
  }
  return v3;
}

uint64_t StocksAudioTrack.rawTitle.getter()
{
  id *v0;
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(*v0, sel_title);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = sub_1DC408A4C();

  return v3;
}

uint64_t StocksAudioTrack.publisherName.getter()
{
  id *v0;
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(*v0, sel_sourceName);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = sub_1DC408A4C();

  return v3;
}

double StocksAudioTrack.artworkOverride.getter@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)(a1 + 32) = 0;
  result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

id StocksAudioTrack.artworkFocalFrame.getter()
{
  id *v0;

  return objc_msgSend(*v0, sel_thumbnailFocalFrame);
}

uint64_t StocksAudioTrack.artworkGradient.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  v2 = sub_1DC404C84();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(a1, 1, 1, v2);
}

uint64_t sub_1DC1A32F4()
{
  id *v0;
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(*v0, sel_title);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = sub_1DC408A4C();

  return v3;
}

uint64_t sub_1DC1A3358()
{
  id *v0;
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(*v0, sel_sourceName);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = sub_1DC408A4C();

  return v3;
}

double sub_1DC1A33BC@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)(a1 + 32) = 0;
  result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

id sub_1DC1A33CC()
{
  id *v0;

  return objc_msgSend(*v0, sel_thumbnailFocalFrame);
}

uint64_t sub_1DC1A33DC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  v2 = sub_1DC404C84();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(a1, 1, 1, v2);
}

uint64_t sub_1DC1A3418()
{
  id *v0;
  id v1;
  uint64_t v2;

  v1 = objc_msgSend(*v0, sel_identifier);
  v2 = sub_1DC408A4C();

  return v2;
}

uint64_t StocksAudioTrack.shortDescription.getter@<X0>(uint64_t *a1@<X8>)
{
  void **v1;
  uint64_t inited;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;

  sub_1DC089DA4(0, &qword_1EDB40070, (uint64_t (*)(uint64_t))sub_1DC0CFB4C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DC40C740;
  *(_QWORD *)(inited + 32) = 0x696669746E656469;
  *(_QWORD *)(inited + 40) = 0xEA00000000007265;
  v4 = *v1;
  v5 = objc_msgSend(v4, sel_identifier);
  v6 = sub_1DC408A4C();
  v8 = v7;

  v9 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(inited + 48) = v6;
  *(_QWORD *)(inited + 56) = v8;
  *(_QWORD *)(inited + 72) = v9;
  *(_QWORD *)(inited + 80) = 0x656C746974;
  *(_QWORD *)(inited + 88) = 0xE500000000000000;
  v10 = objc_msgSend(v4, sel_title);
  if (v10)
  {
    v11 = v10;
    v12 = sub_1DC408A4C();
    v14 = v13;

  }
  else
  {
    v12 = 0;
    v14 = 0xE000000000000000;
  }
  *(_QWORD *)(inited + 120) = v9;
  *(_QWORD *)(inited + 96) = v12;
  *(_QWORD *)(inited + 104) = v14;
  sub_1DC0CF9B8(inited);
  sub_1DC089DA4(0, &qword_1F034D7A8, (uint64_t (*)(uint64_t))type metadata accessor for StocksAudioTrack, MEMORY[0x1E0DB3C70]);
  a1[3] = v15;
  a1[4] = sub_1DC1A3D08();
  __swift_allocate_boxed_opaque_existential_1(a1);
  type metadata accessor for StocksAudioTrack();
  return sub_1DC402878();
}

uint64_t sub_1DC1A35FC()
{
  sub_1DC080808(qword_1F034D858, (uint64_t (*)(uint64_t))type metadata accessor for StocksAudioTrack, (uint64_t)&protocol conformance descriptor for StocksAudioTrack);
  return sub_1DC40286C();
}

unint64_t sub_1DC1A3640(uint64_t a1)
{
  uint64_t v2;

  sub_1DC400220();
  sub_1DC080808(&qword_1EDB28B20, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1470], MEMORY[0x1E0CB1490]);
  v2 = sub_1DC4089B0();
  return sub_1DC1A3834(a1, v2);
}

unint64_t sub_1DC1A36AC(unsigned __int8 a1)
{
  uint64_t v2;

  sub_1DC409AC0();
  sub_1DC409ACC();
  v2 = sub_1DC409AF0();
  return sub_1DC1A3974(a1, v2);
}

unint64_t sub_1DC1A3704(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1DC4096D0();
  return sub_1DC1A3A14(a1, v2);
}

unint64_t sub_1DC1A3734(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1DC4093B8();
  return sub_1DC0FA6B8(a1, v2, (unint64_t *)&qword_1EDB284E0);
}

unint64_t sub_1DC1A3780(char a1)
{
  char v1;
  uint64_t v2;

  v1 = a1 & 1;
  sub_1DC409AC0();
  sub_1DC409ACC();
  v2 = sub_1DC409AF0();
  return sub_1DC1A3AD8(v1, v2);
}

unint64_t sub_1DC1A37DC(int a1)
{
  uint64_t v2;

  sub_1DC409AC0();
  sub_1DC409AD8();
  v2 = sub_1DC409AF0();
  return sub_1DC1A3B94(a1, v2);
}

unint64_t sub_1DC1A3834(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, unint64_t, uint64_t, __n128);
  char v15;
  _QWORD v17[2];

  v3 = v2;
  v17[1] = a1;
  v5 = sub_1DC400220();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = -1 << *(_BYTE *)(v3 + 32);
  v11 = a2 & ~v10;
  if (((*(_QWORD *)(v3 + 64 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0)
  {
    v12 = ~v10;
    v13 = *(_QWORD *)(v6 + 72);
    v14 = *(void (**)(char *, unint64_t, uint64_t, __n128))(v6 + 16);
    do
    {
      v14(v9, *(_QWORD *)(v3 + 48) + v13 * v11, v5, v7);
      sub_1DC080808(&qword_1EDB28B28, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1470], MEMORY[0x1E0CB1498]);
      v15 = sub_1DC4089F8();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
      if ((v15 & 1) != 0)
        break;
      v11 = (v11 + 1) & v12;
    }
    while (((*(_QWORD *)(v3 + 64 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  }
  return v11;
}

unint64_t sub_1DC1A3974(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(unsigned __int8 *)(v7 + result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(unsigned __int8 *)(v7 + result) == a1)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_1DC1A3A14(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  char v7;
  _BYTE v9[40];

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v6 = ~v3;
    do
    {
      sub_1DC1A4E3C(*(_QWORD *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      v7 = MEMORY[0x1DF0C9F50](v9, a1);
      sub_1DC1A4E78((uint64_t)v9);
      if ((v7 & 1) != 0)
        break;
      v4 = (v4 + 1) & v6;
    }
    while (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_1DC1A3AD8(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (((((a1 & 1) == 0) ^ *(unsigned __int8 *)(v7 + result)) & 1) == 0)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (((((a1 & 1) == 0) ^ *(_BYTE *)(v7 + result)) & 1) != 0)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_1DC1A3B94(int a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(_BYTE *)(v7 + result) != (a1 & 1))
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (((*(unsigned __int8 *)(v7 + result) ^ a1) & 1) == 0)
          break;
      }
    }
  }
  return result;
}

uint64_t _s8StocksUI0A10AudioTrackV2eeoiySbAC_ACtFZ_0(id *a1, id *a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v12;

  v3 = objc_msgSend(*a1, sel_identifier);
  v4 = sub_1DC408A4C();
  v6 = v5;

  v7 = objc_msgSend(*a2, sel_identifier);
  v8 = sub_1DC408A4C();
  v10 = v9;

  if (v4 == v8 && v6 == v10)
    v12 = 1;
  else
    v12 = sub_1DC4099E8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v12 & 1;
}

unint64_t sub_1DC1A3D08()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1F034D7B0;
  if (!qword_1F034D7B0)
  {
    sub_1DC089DA4(255, &qword_1F034D7A8, (uint64_t (*)(uint64_t))type metadata accessor for StocksAudioTrack, MEMORY[0x1E0DB3C70]);
    result = MEMORY[0x1DF0CAB8C](MEMORY[0x1E0DB3C80], v1);
    atomic_store(result, (unint64_t *)&qword_1F034D7B0);
  }
  return result;
}

uint64_t sub_1DC1A3D68()
{
  return sub_1DC080808(&qword_1F034D7C0, (uint64_t (*)(uint64_t))type metadata accessor for StocksAudioTrack, (uint64_t)&protocol conformance descriptor for StocksAudioTrack);
}

_QWORD *initializeBufferWithCopyOfBuffer for StocksAudioTrack(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v3;
  uint64_t v4;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  id v24;
  id v25;
  id v26;
  int EnumCaseMultiPayload;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  void (*v34)(char *, char *, uint64_t);

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (_QWORD *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v7 = a1;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1DC4011BC();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_unknownObjectRetain();
    v12(v9, v10, v11);
    v13 = a3[6];
    v14 = a3[7];
    v15 = *(void **)((char *)a2 + v13);
    *(_QWORD *)((char *)v7 + v13) = v15;
    *(_QWORD *)((char *)v7 + v14) = *(_QWORD *)((char *)a2 + v14);
    v16 = a3[9];
    *(_QWORD *)((char *)v7 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
    *((_BYTE *)v7 + v16) = *((_BYTE *)a2 + v16);
    v17 = a3[10];
    v18 = a3[11];
    v19 = *(void **)((char *)a2 + v17);
    *(_QWORD *)((char *)v7 + v17) = v19;
    v20 = *(void **)((char *)a2 + v18);
    *(_QWORD *)((char *)v7 + v18) = v20;
    v21 = a3[12];
    v22 = (_QWORD *)((char *)v7 + v21);
    v23 = (_QWORD *)((char *)a2 + v21);
    sub_1DC401B1C();
    v24 = v15;
    v25 = v19;
    v26 = v20;
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v28 = v23[1];
    *v22 = *v23;
    v22[1] = v28;
    if (EnumCaseMultiPayload == 1)
    {
      sub_1DC1A3F20();
      v30 = *(int *)(v29 + 48);
      v31 = (char *)v22 + v30;
      v32 = (char *)v23 + v30;
      v33 = sub_1DC4020BC();
      v34 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 16);
      swift_retain();
      v34(v31, v32, v33);
    }
    else
    {
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v7;
}

void sub_1DC1A3F20()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1F034D7C8)
  {
    sub_1DC16779C();
    sub_1DC4020BC();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1F034D7C8);
  }
}

uint64_t destroy for StocksAudioTrack(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  swift_unknownObjectRelease();
  v4 = a1 + a2[5];
  v5 = sub_1DC4011BC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);

  v6 = a1 + a2[12];
  sub_1DC401B1C();
  LODWORD(a1) = swift_getEnumCaseMultiPayload();
  result = swift_release();
  if ((_DWORD)a1 == 1)
  {
    sub_1DC1A3F20();
    v9 = v6 + *(int *)(v8 + 48);
    v10 = sub_1DC4020BC();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  }
  return result;
}

_QWORD *initializeWithCopy for StocksAudioTrack(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  id v22;
  id v23;
  id v24;
  int EnumCaseMultiPayload;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  void (*v32)(char *, char *, uint64_t);

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1DC4011BC();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  swift_unknownObjectRetain();
  v10(v7, v8, v9);
  v11 = a3[6];
  v12 = a3[7];
  v13 = *(void **)((char *)a2 + v11);
  *(_QWORD *)((char *)a1 + v11) = v13;
  *(_QWORD *)((char *)a1 + v12) = *(_QWORD *)((char *)a2 + v12);
  v14 = a3[9];
  *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
  *((_BYTE *)a1 + v14) = *((_BYTE *)a2 + v14);
  v15 = a3[10];
  v16 = a3[11];
  v17 = *(void **)((char *)a2 + v15);
  *(_QWORD *)((char *)a1 + v15) = v17;
  v18 = *(void **)((char *)a2 + v16);
  *(_QWORD *)((char *)a1 + v16) = v18;
  v19 = a3[12];
  v20 = (_QWORD *)((char *)a1 + v19);
  v21 = (_QWORD *)((char *)a2 + v19);
  sub_1DC401B1C();
  v22 = v13;
  v23 = v17;
  v24 = v18;
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v26 = v21[1];
  *v20 = *v21;
  v20[1] = v26;
  if (EnumCaseMultiPayload == 1)
  {
    sub_1DC1A3F20();
    v28 = *(int *)(v27 + 48);
    v29 = (char *)v20 + v28;
    v30 = (char *)v21 + v28;
    v31 = sub_1DC4020BC();
    v32 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16);
    swift_retain();
    v32(v29, v30, v31);
  }
  else
  {
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *assignWithCopy for StocksAudioTrack(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  id v13;
  uint64_t v14;
  void *v15;
  void *v16;
  id v17;
  uint64_t v18;
  void *v19;
  void *v20;
  id v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  int EnumCaseMultiPayload;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  void (*v32)(char *, char *, uint64_t);

  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1DC4011BC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = a3[6];
  v11 = *(void **)((char *)a2 + v10);
  v12 = *(void **)((char *)a1 + v10);
  *(_QWORD *)((char *)a1 + v10) = v11;
  v13 = v11;

  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
  *((_BYTE *)a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
  v14 = a3[10];
  v15 = *(void **)((char *)a1 + v14);
  v16 = *(void **)((char *)a2 + v14);
  *(_QWORD *)((char *)a1 + v14) = v16;
  v17 = v16;

  v18 = a3[11];
  v19 = *(void **)((char *)a1 + v18);
  v20 = *(void **)((char *)a2 + v18);
  *(_QWORD *)((char *)a1 + v18) = v20;
  v21 = v20;

  if (a1 != a2)
  {
    v22 = a3[12];
    v23 = (_QWORD *)((char *)a1 + v22);
    v24 = (_QWORD *)((char *)a2 + v22);
    sub_1DC1A4360((uint64_t)a1 + v22);
    sub_1DC401B1C();
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v26 = v24[1];
    *v23 = *v24;
    v23[1] = v26;
    if (EnumCaseMultiPayload == 1)
    {
      sub_1DC1A3F20();
      v28 = *(int *)(v27 + 48);
      v29 = (char *)v23 + v28;
      v30 = (char *)v24 + v28;
      v31 = sub_1DC4020BC();
      v32 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16);
      swift_retain();
      v32(v29, v30, v31);
    }
    else
    {
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1DC1A4360(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1DC401B1C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_QWORD *initializeWithTake for StocksAudioTrack(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _OWORD *v14;
  _OWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1DC4011BC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[7];
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  *(_QWORD *)((char *)a1 + v10) = *(_QWORD *)((char *)a2 + v10);
  v11 = a3[9];
  *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
  *((_BYTE *)a1 + v11) = *((_BYTE *)a2 + v11);
  v12 = a3[11];
  *(_QWORD *)((char *)a1 + a3[10]) = *(_QWORD *)((char *)a2 + a3[10]);
  *(_QWORD *)((char *)a1 + v12) = *(_QWORD *)((char *)a2 + v12);
  v13 = a3[12];
  v14 = (_OWORD *)((char *)a1 + v13);
  v15 = (_OWORD *)((char *)a2 + v13);
  v16 = sub_1DC401B1C();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *v14 = *v15;
    sub_1DC1A3F20();
    v18 = *(int *)(v17 + 48);
    v19 = (char *)v14 + v18;
    v20 = (char *)v15 + v18;
    v21 = sub_1DC4020BC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v19, v20, v21);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  return a1;
}

_QWORD *assignWithTake for StocksAudioTrack(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  _OWORD *v18;
  _OWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;

  *a1 = *a2;
  swift_unknownObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1DC4011BC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  v10 = a3[6];
  v11 = *(void **)((char *)a1 + v10);
  *(_QWORD *)((char *)a1 + v10) = *(_QWORD *)((char *)a2 + v10);

  v12 = a3[8];
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  *(_QWORD *)((char *)a1 + v12) = *(_QWORD *)((char *)a2 + v12);
  v13 = a3[10];
  *((_BYTE *)a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
  v14 = *(void **)((char *)a1 + v13);
  *(_QWORD *)((char *)a1 + v13) = *(_QWORD *)((char *)a2 + v13);

  v15 = a3[11];
  v16 = *(void **)((char *)a1 + v15);
  *(_QWORD *)((char *)a1 + v15) = *(_QWORD *)((char *)a2 + v15);

  if (a1 != a2)
  {
    v17 = a3[12];
    v18 = (_OWORD *)((char *)a1 + v17);
    v19 = (_OWORD *)((char *)a2 + v17);
    sub_1DC1A4360((uint64_t)a1 + v17);
    v20 = sub_1DC401B1C();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *v18 = *v19;
      sub_1DC1A3F20();
      v22 = *(int *)(v21 + 48);
      v23 = (char *)v18 + v22;
      v24 = (char *)v19 + v22;
      v25 = sub_1DC4020BC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v23, v24, v25);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for StocksAudioTrack()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC1A464C(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1DC4011BC();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 20);
    }
    else
    {
      v10 = sub_1DC401B1C();
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 48);
    }
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(&a1[v11], a2, v10);
  }
}

char *sub_1DC1A46EC(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v8 = sub_1DC4011BC();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 20);
    }
    else
    {
      v10 = sub_1DC401B1C();
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 48);
    }
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(&v5[v11], a2, a2, v10);
  }
  return result;
}

ValueMetadata *type metadata accessor for StocksAudioTrack.Flags()
{
  return &type metadata for StocksAudioTrack.Flags;
}

unint64_t sub_1DC1A479C()
{
  unint64_t result;

  result = qword_1F034D7D8;
  if (!qword_1F034D7D8)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC413330, &type metadata for StocksAudioTrack.Flags);
    atomic_store(result, (unint64_t *)&qword_1F034D7D8);
  }
  return result;
}

unint64_t sub_1DC1A47E4()
{
  unint64_t result;

  result = qword_1F034D7E0;
  if (!qword_1F034D7E0)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC413300, &type metadata for StocksAudioTrack.Flags);
    atomic_store(result, (unint64_t *)&qword_1F034D7E0);
  }
  return result;
}

unint64_t sub_1DC1A482C()
{
  unint64_t result;

  result = qword_1F034D7E8;
  if (!qword_1F034D7E8)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC413358, &type metadata for StocksAudioTrack.Flags);
    atomic_store(result, (unint64_t *)&qword_1F034D7E8);
  }
  return result;
}

unint64_t sub_1DC1A4874()
{
  unint64_t result;

  result = qword_1F034D7F0;
  if (!qword_1F034D7F0)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC413390, &type metadata for StocksAudioTrack.Flags);
    atomic_store(result, (unint64_t *)&qword_1F034D7F0);
  }
  return result;
}

void sub_1DC1A48B8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB3FD20)
  {
    sub_1DC089DA4(255, &qword_1EDB3F6A8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB3FE8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    v0 = sub_1DC409880();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB3FD20);
  }
}

void sub_1DC1A4934(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), unint64_t *a4, uint64_t a5)
{
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    a3(255);
    sub_1DC080808(a4, a3, a5);
    v9 = sub_1DC409880();
    if (!v10)
      atomic_store(v9, a2);
  }
}

void sub_1DC1A49C0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t TupleTypeMetadata2;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v5)
      atomic_store(TupleTypeMetadata2, a2);
  }
}

void sub_1DC1A4A20()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB42180)
  {
    type metadata accessor for TraitKey(255);
    sub_1DC080808((unint64_t *)&unk_1EDB3FA18, (uint64_t (*)(uint64_t))type metadata accessor for TraitKey, (uint64_t)&unk_1DC40D8C8);
    v0 = sub_1DC409880();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB42180);
  }
}

void sub_1DC1A4AA0()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EDB28B40)
  {
    sub_1DC400220();
    type metadata accessor for StockChartCalloutDateFormatter();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EDB28B40);
  }
}

void sub_1DC1A4B0C()
{
  uint64_t (*v0)(uint64_t);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1EDB3FCC8)
  {
    sub_1DC400220();
    v0 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1470];
    type metadata accessor for StockChartCalloutDateFormatter();
    sub_1DC080808(&qword_1EDB28B20, v0, MEMORY[0x1E0CB1490]);
    v1 = sub_1DC409880();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1EDB3FCC8);
  }
}

unint64_t sub_1DC1A4BA0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  unsigned __int8 v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  unint64_t result;
  char v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  _QWORD *v15;
  void *v16;
  id v17;
  char v18;
  id v19;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x1E0DEE9E0];
  sub_1DC1A4CB8();
  v3 = (_QWORD *)sub_1DC409874();
  v4 = *(_BYTE *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v6 = *(_QWORD *)(a1 + 48);
  v7 = *(void **)(a1 + 56);
  result = sub_1DC1A36AC(v4);
  if ((v9 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    v19 = v7;
    return (unint64_t)v3;
  }
  v10 = (_QWORD *)(a1 + 88);
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_BYTE *)(v3[6] + result) = v4;
    v11 = (_QWORD *)(v3[7] + 24 * result);
    *v11 = v5;
    v11[1] = v6;
    v11[2] = v7;
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      break;
    v3[2] = v14;
    if (!--v1)
      goto LABEL_8;
    v15 = v10 + 4;
    v4 = *((_BYTE *)v10 - 24);
    v5 = *(v10 - 2);
    v6 = *(v10 - 1);
    v16 = (void *)*v10;
    v17 = v7;
    result = sub_1DC1A36AC(v4);
    v10 = v15;
    v7 = v16;
    if ((v18 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

void sub_1DC1A4CB8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB3FCD8)
  {
    sub_1DC1A4D18();
    v0 = sub_1DC409880();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB3FCD8);
  }
}

unint64_t sub_1DC1A4D18()
{
  unint64_t result;

  result = qword_1EDB35A90;
  if (!qword_1EDB35A90)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC431CBC, &type metadata for QuoteDetailViewComponent);
    atomic_store(result, (unint64_t *)&qword_1EDB35A90);
  }
  return result;
}

void sub_1DC1A4D5C(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, uint64_t))
{
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    a5(255, a3, a4);
    v6 = sub_1DC409880();
    if (!v7)
      atomic_store(v6, a2);
  }
}

uint64_t sub_1DC1A4DC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CuratedForYouFeedGroupKnobs();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC1A4E04(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return 0;
  result = 0;
  v4 = (uint64_t *)(a1 + 32);
  do
  {
    v6 = *v4++;
    v5 = v6;
    if ((v6 & ~result) == 0)
      v5 = 0;
    result |= v5;
    --v1;
  }
  while (v1);
  return result;
}

uint64_t sub_1DC1A4E3C(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(MEMORY[0x1E0DEC198] - 8) + 16))(a2, a1);
  return a2;
}

uint64_t sub_1DC1A4E78(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x1E0DEC198] - 8) + 8))();
  return a1;
}

uint64_t sub_1DC1A4EB0(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  void *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int (*v29)(const void *, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v22 = a2[1];
      *(_QWORD *)a1 = *a2;
      *(_QWORD *)(a1 + 8) = v22;
      v23 = a2[3];
      *(_QWORD *)(a1 + 16) = a2[2];
      *(_QWORD *)(a1 + 24) = v23;
      v24 = *(int *)(type metadata accessor for CreateWatchlistViewModel() + 24);
      v25 = (void *)(a1 + v24);
      v26 = (char *)a2 + v24;
      v27 = sub_1DC4010E4();
      v28 = *(_QWORD *)(v27 - 8);
      v29 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v28 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v29(v26, 1, v27))
      {
        sub_1DC104530();
        memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v28 + 16))(v25, v26, v27);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
      }
      sub_1DC15BFD4();
      v43 = *(int *)(v42 + 48);
      v44 = a1 + v43;
      v45 = (uint64_t)a2 + v43;
      *(_QWORD *)v44 = *(uint64_t *)((char *)a2 + v43);
      *(_OWORD *)(v44 + 24) = *(_OWORD *)((char *)a2 + v43 + 24);
      *(_OWORD *)(v44 + 8) = *(_OWORD *)((char *)a2 + v43 + 8);
      v46 = *(int *)(type metadata accessor for CreateWatchlistViewLayoutAttributes() + 24);
      v47 = v44 + v46;
      v48 = v45 + v46;
      v49 = sub_1DC40952C();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 16))(v47, v48, v49);
      goto LABEL_16;
    }
    if (EnumCaseMultiPayload == 1)
    {
      v7 = a2[1];
      *(_QWORD *)a1 = *a2;
      *(_QWORD *)(a1 + 8) = v7;
      v8 = a2[3];
      *(_QWORD *)(a1 + 16) = a2[2];
      *(_QWORD *)(a1 + 24) = v8;
      *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
      v9 = type metadata accessor for WatchlistCellViewModel(0);
      v10 = *(int *)(v9 + 28);
      v11 = a1 + v10;
      v12 = (uint64_t)a2 + v10;
      v13 = sub_1DC40124C();
      v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v14(v11, v12, v13);
      v15 = *(int *)(v9 + 32);
      v16 = (void *)(a1 + v15);
      v17 = (char *)a2 + v15;
      sub_1DC15C2FC();
      v19 = v18;
      v20 = *(_QWORD *)(v18 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v17, 1, v18))
        goto LABEL_10;
    }
    else
    {
      v31 = a2[1];
      *(_QWORD *)a1 = *a2;
      *(_QWORD *)(a1 + 8) = v31;
      v32 = a2[3];
      *(_QWORD *)(a1 + 16) = a2[2];
      *(_QWORD *)(a1 + 24) = v32;
      *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
      v33 = type metadata accessor for WatchlistCellViewModel(0);
      v34 = *(int *)(v33 + 28);
      v35 = a1 + v34;
      v36 = (uint64_t)a2 + v34;
      v37 = sub_1DC40124C();
      v38 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v38(v35, v36, v37);
      v39 = *(int *)(v33 + 32);
      v16 = (void *)(a1 + v39);
      v17 = (char *)a2 + v39;
      sub_1DC15C2FC();
      v19 = v40;
      v20 = *(_QWORD *)(v40 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v17, 1, v40))
      {
LABEL_10:
        v41 = type metadata accessor for ManageWatchlistsContentMode(0);
        memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
LABEL_15:
        sub_1DC15C090();
        v52 = *(int *)(v51 + 48);
        v53 = a1 + v52;
        v54 = (uint64_t)a2 + v52;
        v55 = *(_OWORD *)(v54 + 144);
        *(_OWORD *)(v53 + 128) = *(_OWORD *)(v54 + 128);
        *(_OWORD *)(v53 + 144) = v55;
        *(_QWORD *)(v53 + 160) = *(_QWORD *)(v54 + 160);
        v56 = *(_OWORD *)(v54 + 80);
        *(_OWORD *)(v53 + 64) = *(_OWORD *)(v54 + 64);
        *(_OWORD *)(v53 + 80) = v56;
        v57 = *(_OWORD *)(v54 + 112);
        *(_OWORD *)(v53 + 96) = *(_OWORD *)(v54 + 96);
        *(_OWORD *)(v53 + 112) = v57;
        v58 = *(_OWORD *)(v54 + 16);
        *(_OWORD *)v53 = *(_OWORD *)v54;
        *(_OWORD *)(v53 + 16) = v58;
        v59 = *(_OWORD *)(v54 + 48);
        *(_OWORD *)(v53 + 32) = *(_OWORD *)(v54 + 32);
        *(_OWORD *)(v53 + 48) = v59;
LABEL_16:
        swift_storeEnumTagMultiPayload();
        return a1;
      }
    }
    v50 = sub_1DC4010E4();
    (*(void (**)(void *, char *, uint64_t))(*(_QWORD *)(v50 - 8) + 16))(v16, v17, v50);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v16, 0, 1, v19);
    goto LABEL_15;
  }
  v21 = *a2;
  *(_QWORD *)a1 = *a2;
  a1 = v21 + ((v5 + 16) & ~(unint64_t)v5);
  swift_retain();
  return a1;
}

uint64_t sub_1DC1A52E0(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v8 = a1 + *(int *)(type metadata accessor for CreateWatchlistViewModel() + 24);
    v9 = sub_1DC4010E4();
    v10 = *(_QWORD *)(v9 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
    sub_1DC15BFD4();
    v12 = a1 + *(int *)(v11 + 48);
    v6 = v12 + *(int *)(type metadata accessor for CreateWatchlistViewLayoutAttributes() + 24);
    v13 = sub_1DC40952C();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v6, v13);
  }
  if (result <= 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v3 = type metadata accessor for WatchlistCellViewModel(0);
    v4 = a1 + *(int *)(v3 + 28);
    v5 = sub_1DC40124C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
    v6 = a1 + *(int *)(v3 + 32);
    sub_1DC15C2FC();
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v6, 1, v7);
    if (!(_DWORD)result)
    {
      v13 = sub_1DC4010E4();
      return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v6, v13);
    }
  }
  return result;
}

uint64_t sub_1DC1A5434(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  void *v13;
  const void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  const void *v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int (*v26)(const void *, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  if (swift_getEnumCaseMultiPayload() == 2)
  {
    v19 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v19;
    v20 = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = v20;
    v21 = *(int *)(type metadata accessor for CreateWatchlistViewModel() + 24);
    v22 = (void *)(a1 + v21);
    v23 = (const void *)(a2 + v21);
    v24 = sub_1DC4010E4();
    v25 = *(_QWORD *)(v24 - 8);
    v26 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v25 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v26(v23, 1, v24))
    {
      sub_1DC104530();
      memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v25 + 16))(v22, v23, v24);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
    }
    sub_1DC15BFD4();
    v39 = *(int *)(v38 + 48);
    v40 = a1 + v39;
    v41 = a2 + v39;
    *(_QWORD *)v40 = *(_QWORD *)(a2 + v39);
    *(_OWORD *)(v40 + 24) = *(_OWORD *)(a2 + v39 + 24);
    *(_OWORD *)(v40 + 8) = *(_OWORD *)(a2 + v39 + 8);
    v42 = *(int *)(type metadata accessor for CreateWatchlistViewLayoutAttributes() + 24);
    v43 = v40 + v42;
    v44 = v41 + v42;
    v45 = sub_1DC40952C();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 16))(v43, v44, v45);
  }
  else
  {
    v4 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v4;
    v5 = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = v5;
    *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
    v6 = type metadata accessor for WatchlistCellViewModel(0);
    v7 = *(int *)(v6 + 28);
    v8 = a1 + v7;
    v9 = a2 + v7;
    v10 = sub_1DC40124C();
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
    v12 = *(int *)(v6 + 32);
    v13 = (void *)(a1 + v12);
    v14 = (const void *)(a2 + v12);
    sub_1DC15C2FC();
    v16 = v15;
    v17 = *(_QWORD *)(v15 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v17 + 48))(v14, 1, v15))
    {
      v18 = type metadata accessor for ManageWatchlistsContentMode(0);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      v28 = sub_1DC4010E4();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v13, v14, v28);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v13, 0, 1, v16);
    }
    sub_1DC15C090();
    v30 = *(int *)(v29 + 48);
    v31 = a1 + v30;
    v32 = a2 + v30;
    v33 = *(_OWORD *)(v32 + 144);
    *(_OWORD *)(v31 + 128) = *(_OWORD *)(v32 + 128);
    *(_OWORD *)(v31 + 144) = v33;
    *(_QWORD *)(v31 + 160) = *(_QWORD *)(v32 + 160);
    v34 = *(_OWORD *)(v32 + 80);
    *(_OWORD *)(v31 + 64) = *(_OWORD *)(v32 + 64);
    *(_OWORD *)(v31 + 80) = v34;
    v35 = *(_OWORD *)(v32 + 112);
    *(_OWORD *)(v31 + 96) = *(_OWORD *)(v32 + 96);
    *(_OWORD *)(v31 + 112) = v35;
    v36 = *(_OWORD *)(v32 + 16);
    *(_OWORD *)v31 = *(_OWORD *)v32;
    *(_OWORD *)(v31 + 16) = v36;
    v37 = *(_OWORD *)(v32 + 48);
    *(_OWORD *)(v31 + 32) = *(_OWORD *)(v32 + 32);
    *(_OWORD *)(v31 + 48) = v37;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_1DC1A56FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  void *v11;
  const void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  const void *v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int (*v22)(const void *, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  if (a1 != a2)
  {
    sub_1DC0926D8(a1, (uint64_t (*)(_QWORD))type metadata accessor for ManageWatchlistsLayoutModel);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      v17 = *(int *)(type metadata accessor for CreateWatchlistViewModel() + 24);
      v18 = (void *)(a1 + v17);
      v19 = (const void *)(a2 + v17);
      v20 = sub_1DC4010E4();
      v21 = *(_QWORD *)(v20 - 8);
      v22 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v21 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v22(v19, 1, v20))
      {
        sub_1DC104530();
        memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v21 + 16))(v18, v19, v20);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
      }
      sub_1DC15BFD4();
      v38 = *(int *)(v37 + 48);
      v39 = a1 + v38;
      v40 = a2 + v38;
      *(_QWORD *)v39 = *(_QWORD *)(a2 + v38);
      v41 = *(_OWORD *)(a2 + v38 + 8);
      *(_OWORD *)(v39 + 24) = *(_OWORD *)(a2 + v38 + 24);
      *(_OWORD *)(v39 + 8) = v41;
      v42 = *(int *)(type metadata accessor for CreateWatchlistViewLayoutAttributes() + 24);
      v43 = v39 + v42;
      v44 = v40 + v42;
      v45 = sub_1DC40952C();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 16))(v43, v44, v45);
    }
    else
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
      v4 = type metadata accessor for WatchlistCellViewModel(0);
      v5 = *(int *)(v4 + 28);
      v6 = a1 + v5;
      v7 = a2 + v5;
      v8 = sub_1DC40124C();
      v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v9(v6, v7, v8);
      v10 = *(int *)(v4 + 32);
      v11 = (void *)(a1 + v10);
      v12 = (const void *)(a2 + v10);
      sub_1DC15C2FC();
      v14 = v13;
      v15 = *(_QWORD *)(v13 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v15 + 48))(v12, 1, v13))
      {
        v16 = type metadata accessor for ManageWatchlistsContentMode(0);
        memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
      }
      else
      {
        v24 = sub_1DC4010E4();
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v11, v12, v24);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v11, 0, 1, v14);
      }
      sub_1DC15C090();
      v26 = *(int *)(v25 + 48);
      v27 = a1 + v26;
      v28 = a2 + v26;
      v29 = *(_OWORD *)(v28 + 112);
      v30 = *(_OWORD *)(v28 + 128);
      v31 = *(_OWORD *)(v28 + 144);
      *(_QWORD *)(v27 + 160) = *(_QWORD *)(v28 + 160);
      *(_OWORD *)(v27 + 128) = v30;
      *(_OWORD *)(v27 + 144) = v31;
      *(_OWORD *)(v27 + 112) = v29;
      v32 = *(_OWORD *)(v28 + 48);
      v33 = *(_OWORD *)(v28 + 64);
      v34 = *(_OWORD *)(v28 + 96);
      *(_OWORD *)(v27 + 80) = *(_OWORD *)(v28 + 80);
      *(_OWORD *)(v27 + 96) = v34;
      *(_OWORD *)(v27 + 48) = v32;
      *(_OWORD *)(v27 + 64) = v33;
      v36 = *(_OWORD *)(v28 + 16);
      v35 = *(_OWORD *)(v28 + 32);
      *(_OWORD *)v27 = *(_OWORD *)v28;
      *(_OWORD *)(v27 + 16) = v36;
      *(_OWORD *)(v27 + 32) = v35;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t type metadata accessor for ManageWatchlistsLayoutModel()
{
  uint64_t result;

  result = qword_1F034D8D0;
  if (!qword_1F034D8D0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1DC1A5A40(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  const void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  void *v19;
  const void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  if (swift_getEnumCaseMultiPayload() == 2)
  {
    v17 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v17;
    v18 = *(int *)(type metadata accessor for CreateWatchlistViewModel() + 24);
    v19 = (void *)(a1 + v18);
    v20 = (const void *)(a2 + v18);
    v21 = sub_1DC4010E4();
    v22 = *(_QWORD *)(v21 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
    {
      sub_1DC104530();
      memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v22 + 32))(v19, v20, v21);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
    }
    sub_1DC15BFD4();
    v35 = *(int *)(v34 + 48);
    v36 = a1 + v35;
    v37 = a2 + v35;
    *(_QWORD *)v36 = *(_QWORD *)(a2 + v35);
    *(_OWORD *)(v36 + 24) = *(_OWORD *)(a2 + v35 + 24);
    *(_OWORD *)(v36 + 8) = *(_OWORD *)(a2 + v35 + 8);
    v38 = *(int *)(type metadata accessor for CreateWatchlistViewLayoutAttributes() + 24);
    v39 = v36 + v38;
    v40 = v37 + v38;
    v41 = sub_1DC40952C();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 32))(v39, v40, v41);
  }
  else
  {
    v4 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v4;
    *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
    v5 = type metadata accessor for WatchlistCellViewModel(0);
    v6 = *(int *)(v5 + 28);
    v7 = a1 + v6;
    v8 = a2 + v6;
    v9 = sub_1DC40124C();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
    v10 = *(int *)(v5 + 32);
    v11 = (void *)(a1 + v10);
    v12 = (const void *)(a2 + v10);
    sub_1DC15C2FC();
    v14 = v13;
    v15 = *(_QWORD *)(v13 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v15 + 48))(v12, 1, v13))
    {
      v16 = type metadata accessor for ManageWatchlistsContentMode(0);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      v24 = sub_1DC4010E4();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v11, v12, v24);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v11, 0, 1, v14);
    }
    sub_1DC15C090();
    v26 = *(int *)(v25 + 48);
    v27 = a1 + v26;
    v28 = a2 + v26;
    v29 = *(_OWORD *)(v28 + 144);
    *(_OWORD *)(v27 + 128) = *(_OWORD *)(v28 + 128);
    *(_OWORD *)(v27 + 144) = v29;
    *(_QWORD *)(v27 + 160) = *(_QWORD *)(v28 + 160);
    v30 = *(_OWORD *)(v28 + 80);
    *(_OWORD *)(v27 + 64) = *(_OWORD *)(v28 + 64);
    *(_OWORD *)(v27 + 80) = v30;
    v31 = *(_OWORD *)(v28 + 112);
    *(_OWORD *)(v27 + 96) = *(_OWORD *)(v28 + 96);
    *(_OWORD *)(v27 + 112) = v31;
    v32 = *(_OWORD *)(v28 + 16);
    *(_OWORD *)v27 = *(_OWORD *)v28;
    *(_OWORD *)(v27 + 16) = v32;
    v33 = *(_OWORD *)(v28 + 48);
    *(_OWORD *)(v27 + 32) = *(_OWORD *)(v28 + 32);
    *(_OWORD *)(v27 + 48) = v33;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_1DC1A5CB8(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  const void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  void *v19;
  const void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  if (a1 != a2)
  {
    sub_1DC0926D8(a1, (uint64_t (*)(_QWORD))type metadata accessor for ManageWatchlistsLayoutModel);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      v17 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v17;
      v18 = *(int *)(type metadata accessor for CreateWatchlistViewModel() + 24);
      v19 = (void *)(a1 + v18);
      v20 = (const void *)(a2 + v18);
      v21 = sub_1DC4010E4();
      v22 = *(_QWORD *)(v21 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
      {
        sub_1DC104530();
        memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v22 + 32))(v19, v20, v21);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
      }
      sub_1DC15BFD4();
      v35 = *(int *)(v34 + 48);
      v36 = a1 + v35;
      v37 = a2 + v35;
      *(_QWORD *)v36 = *(_QWORD *)(a2 + v35);
      *(_OWORD *)(v36 + 24) = *(_OWORD *)(a2 + v35 + 24);
      *(_OWORD *)(v36 + 8) = *(_OWORD *)(a2 + v35 + 8);
      v38 = *(int *)(type metadata accessor for CreateWatchlistViewLayoutAttributes() + 24);
      v39 = v36 + v38;
      v40 = v37 + v38;
      v41 = sub_1DC40952C();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 32))(v39, v40, v41);
    }
    else
    {
      v4 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v4;
      *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
      v5 = type metadata accessor for WatchlistCellViewModel(0);
      v6 = *(int *)(v5 + 28);
      v7 = a1 + v6;
      v8 = a2 + v6;
      v9 = sub_1DC40124C();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
      v10 = *(int *)(v5 + 32);
      v11 = (void *)(a1 + v10);
      v12 = (const void *)(a2 + v10);
      sub_1DC15C2FC();
      v14 = v13;
      v15 = *(_QWORD *)(v13 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v15 + 48))(v12, 1, v13))
      {
        v16 = type metadata accessor for ManageWatchlistsContentMode(0);
        memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
      }
      else
      {
        v24 = sub_1DC4010E4();
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v11, v12, v24);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v11, 0, 1, v14);
      }
      sub_1DC15C090();
      v26 = *(int *)(v25 + 48);
      v27 = a1 + v26;
      v28 = a2 + v26;
      v29 = *(_OWORD *)(v28 + 144);
      *(_OWORD *)(v27 + 128) = *(_OWORD *)(v28 + 128);
      *(_OWORD *)(v27 + 144) = v29;
      *(_QWORD *)(v27 + 160) = *(_QWORD *)(v28 + 160);
      v30 = *(_OWORD *)(v28 + 80);
      *(_OWORD *)(v27 + 64) = *(_OWORD *)(v28 + 64);
      *(_OWORD *)(v27 + 80) = v30;
      v31 = *(_OWORD *)(v28 + 112);
      *(_OWORD *)(v27 + 96) = *(_OWORD *)(v28 + 96);
      *(_OWORD *)(v27 + 112) = v31;
      v32 = *(_OWORD *)(v28 + 16);
      *(_OWORD *)v27 = *(_OWORD *)v28;
      *(_OWORD *)(v27 + 16) = v32;
      v33 = *(_OWORD *)(v28 + 48);
      *(_OWORD *)(v27 + 32) = *(_OWORD *)(v28 + 32);
      *(_OWORD *)(v27 + 48) = v33;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1DC1A5F48()
{
  uint64_t WatchlistViewModel;
  unint64_t v1;
  unint64_t v2;
  uint64_t WatchlistViewLayoutAttributes;
  unint64_t v4;
  char v6;
  char v7;
  char v8;
  char *v9;
  char *v10;
  char *v11;

  WatchlistViewModel = type metadata accessor for WatchlistCellViewModel(319);
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    v9 = &v8;
    swift_getTupleTypeLayout2();
    v10 = &v7;
    WatchlistViewModel = type metadata accessor for CreateWatchlistViewModel();
    if (v2 <= 0x3F)
    {
      WatchlistViewLayoutAttributes = type metadata accessor for CreateWatchlistViewLayoutAttributes();
      if (v4 > 0x3F)
      {
        return WatchlistViewLayoutAttributes;
      }
      else
      {
        swift_getTupleTypeLayout2();
        v11 = &v6;
        swift_initEnumMetadataMultiPayload();
        return 0;
      }
    }
  }
  return WatchlistViewModel;
}

double sub_1DC1A6040()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t WatchlistViewLayoutAttributes;
  uint64_t v3;
  double *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  double v9;
  uint64_t (*v10)(_QWORD);
  uint64_t v11;
  uint64_t v13;

  v1 = v0;
  WatchlistViewLayoutAttributes = type metadata accessor for CreateWatchlistViewLayoutAttributes();
  MEMORY[0x1E0C80A78](WatchlistViewLayoutAttributes);
  v4 = (double *)((char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = type metadata accessor for ManageWatchlistsLayoutModel();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC1A61A4(v1, (uint64_t)v7);
  if (swift_getEnumCaseMultiPayload() > 1)
  {
    sub_1DC15BFD4();
    sub_1DC1A61E8((uint64_t)&v7[*(int *)(v11 + 48)], (uint64_t)v4);
    v9 = *v4;
    sub_1DC0926D8((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for CreateWatchlistViewLayoutAttributes);
    v10 = (uint64_t (*)(_QWORD))type metadata accessor for CreateWatchlistViewModel;
  }
  else
  {
    sub_1DC15C090();
    v9 = *(double *)&v7[*(int *)(v8 + 48)];
    v10 = type metadata accessor for WatchlistCellViewModel;
  }
  sub_1DC0926D8((uint64_t)v7, v10);
  return v9;
}

uint64_t sub_1DC1A6160@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *MEMORY[0x1E0DB89A8];
  v3 = sub_1DC404E70();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

uint64_t sub_1DC1A61A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ManageWatchlistsLayoutModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC1A61E8(uint64_t a1, uint64_t a2)
{
  uint64_t WatchlistViewLayoutAttributes;

  WatchlistViewLayoutAttributes = type metadata accessor for CreateWatchlistViewLayoutAttributes();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(WatchlistViewLayoutAttributes - 8) + 32))(a2, a1, WatchlistViewLayoutAttributes);
  return a2;
}

uint64_t sub_1DC1A622C(void *a1, void (*a2)(_QWORD, _QWORD), uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void *v16;
  _QWORD *v17;
  void (*v18)(_QWORD, _QWORD);
  id v19;
  void *v20;
  uint64_t v21;
  void *v22;
  id v23;
  uint64_t v24;
  char *v25;
  uint64_t v27;
  void (*v28)(_QWORD, _QWORD);
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD aBlock[6];

  v28 = a2;
  v31 = sub_1DC40724C();
  v34 = *(_QWORD *)(v31 - 8);
  MEMORY[0x1E0C80A78](v31);
  v30 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1DC407270();
  v32 = *(_QWORD *)(v6 - 8);
  v33 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1DC407294();
  v10 = *(_QWORD *)(v9 - 8);
  v29 = v9;
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v27 - v14;
  sub_1DC4055CC();
  v16 = (void *)sub_1DC405074();
  swift_release();
  v17 = (_QWORD *)swift_allocObject();
  v18 = v28;
  v17[2] = a1;
  v17[3] = v18;
  v17[4] = a3;
  sub_1DC0ACADC();
  v19 = a1;
  swift_retain();
  v20 = (void *)sub_1DC409148();
  sub_1DC407288();
  MEMORY[0x1DF0C7B14](v12, 1.0);
  v28 = *(void (**)(_QWORD, _QWORD))(v10 + 8);
  v28(v12, v9);
  v21 = swift_allocObject();
  *(_QWORD *)(v21 + 16) = v16;
  *(_QWORD *)(v21 + 24) = sub_1DC1A6B78;
  *(_QWORD *)(v21 + 32) = v17;
  *(_OWORD *)(v21 + 40) = xmmword_1DC413530;
  aBlock[4] = sub_1DC1A6B8C;
  aBlock[5] = v21;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1DC081B88;
  aBlock[3] = &block_descriptor_5;
  v22 = _Block_copy(aBlock);
  v23 = v16;
  swift_retain();
  swift_release();
  sub_1DC407264();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  sub_1DC080808(&qword_1EDB275A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  sub_1DC1130A0(0);
  sub_1DC080808((unint64_t *)&qword_1EDB3F720, (uint64_t (*)(uint64_t))sub_1DC1130A0, MEMORY[0x1E0DEAF38]);
  v25 = v30;
  v24 = v31;
  sub_1DC40964C();
  MEMORY[0x1DF0C9998](v15, v8, v25, v22);
  _Block_release(v22);

  (*(void (**)(char *, uint64_t))(v34 + 8))(v25, v24);
  (*(void (**)(char *, uint64_t))(v32 + 8))(v8, v33);
  v28(v15, v29);

  return swift_release();
}

uint64_t sub_1DC1A654C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v5;
  uint64_t v6;

  sub_1DC4055CC();
  v5 = (void *)sub_1DC405074();
  swift_release();
  objc_msgSend(v5, sel_setContentOffset_animated_, 0, 0.0, 0.0);

  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a2;
  *(_QWORD *)(v6 + 24) = a3;
  swift_retain();
  sub_1DC26C9A0((uint64_t)sub_1DC116D08, v6);
  return swift_release();
}

void sub_1DC1A6664(void *a1, void (**a2)(_QWORD, _QWORD))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  void *v15;
  unsigned __int8 v16;
  void *v17;
  id v18;
  id v19;
  void *v20;
  id v21;
  id v22;
  void *v23;
  double v24;
  CGFloat v25;
  double v26;
  CGFloat v27;
  double v28;
  CGFloat v29;
  double v30;
  CGFloat v31;
  uint64_t Height;
  void *v33;
  _QWORD *v34;
  id v35;
  uint64_t v36;
  id v37;
  void *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  id v42;
  __int128 v43;
  __int128 v44;
  _BYTE v45[24];
  uint64_t v46;
  CGRect v47;

  v4 = sub_1DC407294();
  v41 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v40 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1DC4059F8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a2;
  _Block_copy(a2);
  v11 = (void *)sub_1DC408A1C();
  v12 = objc_msgSend(a1, sel_objectForKey_, v11);

  if (v12)
  {
    sub_1DC409634();
    swift_unknownObjectRelease();
  }
  else
  {
    v43 = 0u;
    v44 = 0u;
  }
  sub_1DC0D1180((uint64_t)&v43, (uint64_t)v45);
  if (!v46)
  {
    sub_1DC150744((uint64_t)v45);
    goto LABEL_11;
  }
  type metadata accessor for ForYouFeedViewController();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_11:
    v19 = objc_allocWithZone(MEMORY[0x1E0DB59F0]);
    v20 = (void *)sub_1DC408A1C();
    v21 = objc_msgSend(v19, sel_initWithMessage_, v20);

    ((void (**)(_QWORD, id))a2)[2](a2, v21);
    swift_release();
LABEL_12:

    return;
  }
  v39 = v4;
  v13 = v42;
  v14 = objc_msgSend(v42, sel_splitViewController);
  if (!v14)
    goto LABEL_17;
  v15 = v14;
  v16 = objc_msgSend(v14, sel_isCollapsed);

  if ((v16 & 1) == 0)
    goto LABEL_17;
  v17 = (void *)sub_1DC408A1C();
  v18 = objc_msgSend(a1, sel_objectForKey_, v17);

  if (v18)
  {
    sub_1DC409634();
    swift_unknownObjectRelease();
  }
  else
  {
    v43 = 0u;
    v44 = 0u;
  }
  sub_1DC0D1180((uint64_t)&v43, (uint64_t)v45);
  if (!v46)
  {
    sub_1DC150744((uint64_t)v45);
    goto LABEL_19;
  }
  sub_1DC4056E0();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_19:
    v37 = objc_allocWithZone(MEMORY[0x1E0DB59F0]);
    v38 = (void *)sub_1DC408A1C();
    v21 = objc_msgSend(v37, sel_initWithMessage_, v38);

    ((void (**)(_QWORD, id))a2)[2](a2, v21);
    swift_release();

    goto LABEL_12;
  }
  v22 = v42;
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E0DBA290], v6);
  sub_1DC40565C();

  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
LABEL_17:
  sub_1DC4055CC();
  v23 = (void *)sub_1DC405074();
  swift_release();
  objc_msgSend(v23, sel_bounds);
  v25 = v24;
  v27 = v26;
  v29 = v28;
  v31 = v30;

  v47.origin.x = v25;
  v47.origin.y = v27;
  v47.size.width = v29;
  v47.size.height = v31;
  Height = CGRectGetHeight(v47);
  sub_1DC4055CC();
  v33 = (void *)sub_1DC405074();
  swift_release();
  v34 = (_QWORD *)swift_allocObject();
  v34[2] = v13;
  v34[3] = sub_1DC112E3C;
  v34[4] = v10;
  v35 = v13;
  swift_retain();
  v36 = (uint64_t)v40;
  sub_1DC40727C();
  sub_1DC26C4AC(Height, 0, v33, v36, (uint64_t)sub_1DC1A6B64, (uint64_t)v34, 1.0);

  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v36, v39);
  swift_release();
}

uint64_t sub_1DC1A6B38()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_1DC1A6B5C()
{
  return objectdestroy_3Tm();
}

uint64_t sub_1DC1A6B64()
{
  uint64_t v0;

  return sub_1DC1A622C(*(void **)(v0 + 16), *(void (**)(_QWORD, _QWORD))(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_1DC1A6B70()
{
  return objectdestroy_3Tm();
}

uint64_t sub_1DC1A6B78()
{
  uint64_t *v0;

  return sub_1DC1A654C(v0[2], v0[3], v0[4]);
}

uint64_t sub_1DC1A6B84()
{
  return objectdestroy_3Tm();
}

uint64_t sub_1DC1A6B8C()
{
  uint64_t v0;

  return sub_1DC26BC24(*(void **)(v0 + 16), *(uint64_t (**)(id))(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
}

uint64_t sub_1DC1A6B9C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DC1A6BC0()
{
  uint64_t v0;

  swift_release();

  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1DC1A6BFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1DC1A6C24(a3, a4);
}

uint64_t sub_1DC1A6C24(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  int v49;
  unsigned int *v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  char v54;
  _QWORD *v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  int v63;
  unsigned int *v64;
  char *v65;
  char v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  int v75;
  unsigned int *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  int v80;
  unsigned int *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD *v86;
  uint64_t result;
  char v88;
  uint64_t v89;
  uint64_t v90;
  _QWORD *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  char *v102;
  char *v103;
  char *v104;
  char *v105;
  char *v106;
  _QWORD *v107;
  uint64_t v108;
  char *v109;
  char *v110;
  char *v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  _QWORD *v124;
  uint64_t v125;
  _QWORD *v126;
  uint64_t v127;

  v123 = a2;
  sub_1DC12D0E0(0, &qword_1EDB2B7F0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v104 = (char *)&v99 - v3;
  v4 = sub_1DC40328C();
  v116 = *(_QWORD *)(v4 - 8);
  v117 = v4;
  MEMORY[0x1E0C80A78](v4);
  v115 = (char *)&v99 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1DC407F54();
  v113 = *(_QWORD *)(v6 - 8);
  v114 = v6;
  MEMORY[0x1E0C80A78](v6);
  v111 = (char *)&v99 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v112 = (char *)&v99 - v9;
  v10 = sub_1DC403280();
  v121 = *(_QWORD *)(v10 - 8);
  v122 = v10;
  MEMORY[0x1E0C80A78](v10);
  v103 = (char *)&v99 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v107 = (uint64_t *)((char *)&v99 - v13);
  MEMORY[0x1E0C80A78](v14);
  v124 = (uint64_t *)((char *)&v99 - v15);
  v118 = sub_1DC40814C();
  v125 = *(_QWORD *)(v118 - 8);
  MEMORY[0x1E0C80A78](v118);
  v101 = (char *)&v99 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v102 = (char *)&v99 - v18;
  MEMORY[0x1E0C80A78](v19);
  v105 = (char *)&v99 - v20;
  MEMORY[0x1E0C80A78](v21);
  v106 = (char *)&v99 - v22;
  MEMORY[0x1E0C80A78](v23);
  v109 = (char *)&v99 - v24;
  MEMORY[0x1E0C80A78](v25);
  v27 = (char *)&v99 - v26;
  v28 = sub_1DC40367C();
  v119 = *(_QWORD *)(v28 - 8);
  v120 = v28;
  MEMORY[0x1E0C80A78](v28);
  v108 = (uint64_t)&v99 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v30);
  v110 = (char *)&v99 - v31;
  MEMORY[0x1E0C80A78](v32);
  v34 = (char *)&v99 - v33;
  v35 = sub_1DC407E10();
  v36 = *(_QWORD *)(v35 - 8);
  MEMORY[0x1E0C80A78](v35);
  v100 = (char *)&v99 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v38);
  v40 = (char *)&v99 - v39;
  MEMORY[0x1E0C80A78](v41);
  v43 = (char *)&v99 - v42;
  sub_1DC406AE4();
  sub_1DC406A48();
  v44 = sub_1DC406964();
  swift_release();
  if ((v44 & 1) != 0)
  {
    v45 = v126[7];
    v108 = v126[8];
    v107 = __swift_project_boxed_opaque_existential_1(v126 + 4, v45);
    sub_1DC1A76B0();
    sub_1DC4080B0();
    v110 = v34;
    sub_1DC19238C((uint64_t)v34);
    (*(void (**)(char *, uint64_t))(v36 + 8))(v43, v35);
    sub_1DC4080BC();
    v46 = v125;
    v47 = v109;
    v48 = v118;
    (*(void (**)(char *, char *, uint64_t))(v125 + 16))(v109, v27, v118);
    v49 = (*(uint64_t (**)(char *, uint64_t))(v46 + 88))(v47, v48);
    if (v49 == *MEMORY[0x1E0D5E7A8])
    {
      v50 = (unsigned int *)MEMORY[0x1E0DAD290];
      v52 = v121;
      v51 = v122;
LABEL_9:
      v65 = v112;
LABEL_18:
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(v52 + 104))(v124, *v50, v51);
      (*(void (**)(char *, uint64_t))(v46 + 8))(v27, v48);
      sub_1DC4080A4();
      v78 = v113;
      v77 = v114;
      v79 = v111;
      (*(void (**)(char *, char *, uint64_t))(v113 + 16))(v111, v65, v114);
      v80 = (*(uint64_t (**)(char *, uint64_t))(v78 + 88))(v79, v77);
      if (v80 == *MEMORY[0x1E0D5DBC8])
      {
        v81 = (unsigned int *)MEMORY[0x1E0DAD2B8];
LABEL_22:
        v83 = v115;
        v82 = v116;
        v84 = v117;
        (*(void (**)(char *, _QWORD, uint64_t))(v116 + 104))(v115, *v81, v117);
        (*(void (**)(char *, uint64_t))(v78 + 8))(v65, v77);
        v85 = (uint64_t)v110;
        v86 = v124;
        (*(void (**)(char *, _QWORD *, char *, uint64_t))(v108 + 24))(v110, v124, v83, v45);
        (*(void (**)(char *, uint64_t))(v82 + 8))(v83, v84);
        (*(void (**)(_QWORD *, uint64_t))(v52 + 8))(v86, v51);
        (*(void (**)(uint64_t, uint64_t))(v119 + 8))(v85, v120);
        return sub_1DC401FB4();
      }
      if (v80 == *MEMORY[0x1E0D5DBC0])
      {
        v81 = (unsigned int *)MEMORY[0x1E0DAD2C8];
        goto LABEL_22;
      }
      goto LABEL_34;
    }
    v52 = v121;
    v51 = v122;
    if (v49 == *MEMORY[0x1E0D5E7B8])
    {
      v50 = (unsigned int *)MEMORY[0x1E0DAD2A0];
      goto LABEL_9;
    }
    v65 = v112;
    if (v49 == *MEMORY[0x1E0D5E7B0])
    {
      v50 = (unsigned int *)MEMORY[0x1E0DAD298];
      goto LABEL_18;
    }
LABEL_34:
    result = sub_1DC409838();
    __break(1u);
    return result;
  }
  v53 = v126;
  sub_1DC406A3C();
  v54 = sub_1DC406964();
  swift_release();
  if ((v54 & 1) != 0)
  {
    v55 = v53;
    v56 = v53 + 4;
    v57 = v53[7];
    v58 = v55[8];
    v124 = __swift_project_boxed_opaque_existential_1(v56, v57);
    sub_1DC1A76B0();
    sub_1DC4080B0();
    sub_1DC19238C((uint64_t)v110);
    (*(void (**)(char *, uint64_t))(v36 + 8))(v40, v35);
    v59 = v106;
    sub_1DC4080BC();
    v60 = v125;
    v61 = v105;
    v62 = v118;
    (*(void (**)(char *, char *, uint64_t))(v125 + 16))(v105, v59, v118);
    v63 = (*(uint64_t (**)(char *, uint64_t))(v60 + 88))(v61, v62);
    if (v63 == *MEMORY[0x1E0D5E7A8])
    {
      v64 = (unsigned int *)MEMORY[0x1E0DAD290];
    }
    else if (v63 == *MEMORY[0x1E0D5E7B8])
    {
      v64 = (unsigned int *)MEMORY[0x1E0DAD2A0];
    }
    else
    {
      if (v63 != *MEMORY[0x1E0D5E7B0])
        goto LABEL_34;
      v64 = (unsigned int *)MEMORY[0x1E0DAD298];
    }
    v90 = v121;
    v89 = v122;
    v91 = v107;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v121 + 104))(v107, *v64, v122);
    (*(void (**)(char *, uint64_t))(v125 + 8))(v59, v62);
    v92 = (uint64_t)v110;
    (*(void (**)(char *, _QWORD *, uint64_t, uint64_t))(v58 + 16))(v110, v91, v57, v58);
    (*(void (**)(_QWORD *, uint64_t))(v90 + 8))(v91, v89);
    (*(void (**)(uint64_t, uint64_t))(v119 + 8))(v92, v120);
    return sub_1DC401FCC();
  }
  sub_1DC4069E8();
  v66 = sub_1DC406964();
  swift_release();
  if ((v66 & 1) != 0 || (sub_1DC406A30(), v67 = sub_1DC406964(), swift_release(), (v67 & 1) != 0))
  {
    v68 = v53[7];
    v69 = v53[8];
    v124 = __swift_project_boxed_opaque_existential_1(v53 + 4, v68);
    sub_1DC1A76B0();
    v70 = v100;
    sub_1DC4080B0();
    sub_1DC19238C(v108);
    (*(void (**)(char *, uint64_t))(v36 + 8))(v70, v35);
    v71 = v102;
    sub_1DC4080BC();
    v72 = v125;
    v73 = v101;
    v74 = v118;
    (*(void (**)(char *, char *, uint64_t))(v125 + 16))(v101, v71, v118);
    v75 = (*(uint64_t (**)(char *, uint64_t))(v72 + 88))(v73, v74);
    if (v75 == *MEMORY[0x1E0D5E7A8])
    {
      v76 = (unsigned int *)MEMORY[0x1E0DAD290];
    }
    else if (v75 == *MEMORY[0x1E0D5E7B8])
    {
      v76 = (unsigned int *)MEMORY[0x1E0DAD2A0];
    }
    else
    {
      if (v75 != *MEMORY[0x1E0D5E7B0])
        goto LABEL_34;
      v76 = (unsigned int *)MEMORY[0x1E0DAD298];
    }
    v94 = v121;
    v93 = v122;
    v95 = v103;
    (*(void (**)(char *, _QWORD, uint64_t))(v121 + 104))(v103, *v76, v122);
    (*(void (**)(char *, uint64_t))(v125 + 8))(v71, v74);
    v96 = v108;
    (*(void (**)(uint64_t, char *, uint64_t, uint64_t))(v69 + 40))(v108, v95, v68, v69);
    (*(void (**)(char *, uint64_t))(v94 + 8))(v95, v93);
    (*(void (**)(uint64_t, uint64_t))(v119 + 8))(v96, v120);
    sub_1DC401FC0();
    v97 = type metadata accessor for StocksAudioTrack();
    v98 = (uint64_t)v104;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v97 - 8) + 56))(v104, 1, 1, v97);
    sub_1DC1A779C((unint64_t *)&unk_1F0353660, &qword_1EDB2B7F0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940], MEMORY[0x1E0DEE998]);
    sub_1DC402764();
    sub_1DC1A7750(v98);
    v127 = MEMORY[0x1E0DEE9D8];
    sub_1DC1A779C(&qword_1F034D908, &qword_1EDB3F740, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8], MEMORY[0x1E0DEAF30]);
    return sub_1DC402764();
  }
  else
  {
    sub_1DC406A0C();
    v88 = sub_1DC406964();
    result = swift_release();
    if ((v88 & 1) != 0)
      return sub_1DC401F6C();
  }
  return result;
}

void sub_1DC1A76B0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB2B0A0)
  {
    v0 = sub_1DC4080D4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB2B0A0);
  }
}

unint64_t sub_1DC1A7708()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EDB2B788;
  if (!qword_1EDB2B788)
  {
    v1 = type metadata accessor for StocksAudioTrack();
    result = MEMORY[0x1DF0CAB8C](&protocol conformance descriptor for StocksAudioTrack, v1);
    atomic_store(result, (unint64_t *)&qword_1EDB2B788);
  }
  return result;
}

uint64_t sub_1DC1A7750(uint64_t a1)
{
  uint64_t v2;

  sub_1DC12D0E0(0, &qword_1EDB2B7F0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DC1A779C(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  result = *a1;
  if (!result)
  {
    sub_1DC12D0E0(255, a2, a3);
    v8 = v7;
    v9 = sub_1DC1A7708();
    result = MEMORY[0x1DF0CAB8C](a4, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DC1A77FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;

  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10 = sub_1DC1A7894(a1, a2, a3, a4, a5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1DC1A7894(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  int64_t v16;
  int isUniquelyReferenced_nonNull_native;
  int64_t v18;
  int64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;

  v5 = *(_QWORD *)(a1 + 16);
  v6 = MEMORY[0x1E0DEE9D8];
  if (!v5)
    return v6;
  if (a4)
    v8 = a4;
  else
    v8 = MEMORY[0x1E0DEE9D8];
  sub_1DC1A7CB4();
  v9 = *(_QWORD *)(sub_1DC402A40() - 8);
  v31 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v29 = 4 * *(_QWORD *)(v9 + 72);
  v32 = *(_QWORD *)(v9 + 72);
  swift_bridgeObjectRetain();
  v10 = (uint64_t *)(a1 + 40);
  while (1)
  {
    v30 = v5;
    v12 = *(v10 - 1);
    v11 = *v10;
    v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_1DC411E20;
    v14 = v13 + v31;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    MEMORY[0x1DF0C3290](1886680168, 0xE400000000000000, 0xD000000000000010, 0x80000001DC437F70, v12, v11, a2, a3, v8, a5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    MEMORY[0x1DF0C3290](0x7370747468, 0xE500000000000000, 0xD000000000000010, 0x80000001DC437F70, v12, v11, a2, a3, v8, a5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    MEMORY[0x1DF0C3290](0x736B636F7473, 0xE600000000000000, 0xD000000000000010, 0x80000001DC437F70, v12, v11, a2, a3, v8, a5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    MEMORY[0x1DF0C3290](0x736B636F7473, 0xE600000000000000, 0, 0, v12, v11, a2, a3, v8, a5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v15 = *(_QWORD *)(v6 + 16);
    v16 = v15 + 4;
    if (__OFADD__(v15, 4))
    {
      __break(1u);
LABEL_21:
      __break(1u);
LABEL_22:
      __break(1u);
    }
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    if (!isUniquelyReferenced_nonNull_native || (v18 = *(_QWORD *)(v6 + 24) >> 1, v18 < v16))
    {
      if (v15 <= v16)
        v19 = v15 + 4;
      else
        v19 = v15;
      v6 = sub_1DC166B44(isUniquelyReferenced_nonNull_native, v19, 1, v6);
      v18 = *(_QWORD *)(v6 + 24) >> 1;
    }
    v20 = *(_QWORD *)(v6 + 16);
    if (v18 - v20 < 4)
      goto LABEL_21;
    v21 = v6 + v31 + v20 * v32;
    if (v14 < v21 + v29 && v21 < v14 + v29)
      break;
    swift_arrayInitWithCopy();
    v22 = *(_QWORD *)(v6 + 16);
    v23 = __OFADD__(v22, 4);
    v24 = v22 + 4;
    if (v23)
      goto LABEL_22;
    v10 += 2;
    *(_QWORD *)(v6 + 16) = v24;
    swift_bridgeObjectRelease();
    --v5;
    if (v30 == 1)
    {
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = sub_1DC40988C();
  __break(1u);
  return result;
}

void sub_1DC1A7CB4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB3FE80)
  {
    sub_1DC402A40();
    v0 = sub_1DC4099C4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB3FE80);
  }
}

void sub_1DC1A7E18()
{
  sub_1DC119B0C(&qword_1EDB37040, (uint64_t)&unk_1DC413634);
  JUMPOUT(0x1DF0C7418);
}

uint64_t type metadata accessor for CreateWatchlistViewStyler()
{
  return objc_opt_self();
}

_QWORD *sub_1DC1A7E70(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v21 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    v8 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v8;
    v9 = *(int *)(a3 + 28);
    v10 = a1 + v9;
    v11 = (uint64_t)a2 + v9;
    *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
    v12 = sub_1DC40124C();
    v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13(v10, v11, v12);
    v14 = *(int *)(a3 + 32);
    v15 = (char *)v4 + v14;
    v16 = (char *)a2 + v14;
    sub_1DC15C2FC();
    v18 = v17;
    v19 = *(_QWORD *)(v17 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v16, 1, v17))
    {
      v20 = type metadata accessor for ManageWatchlistsContentMode(0);
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      v22 = sub_1DC4010E4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v15, v16, v22);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v15, 0, 1, v18);
    }
  }
  return v4;
}

uint64_t type metadata accessor for ManageWatchlistsContentMode(uint64_t a1)
{
  return sub_1DC08CD5C(a1, (uint64_t *)&unk_1F034DAD0);
}

uint64_t sub_1DC1A7FDC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 28);
  v5 = sub_1DC40124C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = a1 + *(int *)(a2 + 32);
  sub_1DC15C2FC();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v6, 1, v7);
  if (!(_DWORD)result)
  {
    v9 = sub_1DC4010E4();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v6, v9);
  }
  return result;
}

uint64_t sub_1DC1A808C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  void *v14;
  const void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v8 = *(int *)(a3 + 28);
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_1DC40124C();
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12(v9, v10, v11);
  v13 = *(int *)(a3 + 32);
  v14 = (void *)(a1 + v13);
  v15 = (const void *)(a2 + v13);
  sub_1DC15C2FC();
  v17 = v16;
  v18 = *(_QWORD *)(v16 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v18 + 48))(v15, 1, v16))
  {
    v19 = type metadata accessor for ManageWatchlistsContentMode(0);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    v20 = sub_1DC4010E4();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v14, v15, v20);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v14, 0, 1, v17);
  }
  return a1;
}

uint64_t sub_1DC1A81B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(void *, uint64_t, uint64_t);
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v6 = *(int *)(a3 + 28);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_1DC40124C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = *(int *)(a3 + 32);
  v11 = (void *)(a1 + v10);
  v12 = (void *)(a2 + v10);
  sub_1DC15C2FC();
  v14 = v13;
  v15 = *(_QWORD *)(v13 - 8);
  v16 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v15 + 48);
  LODWORD(v8) = v16(v11, 1, v13);
  v17 = v16(v12, 1, v14);
  if (!(_DWORD)v8)
  {
    if (!v17)
    {
      v21 = sub_1DC4010E4();
      (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v21 - 8) + 24))(v11, v12, v21);
      return a1;
    }
    sub_1DC0926D8((uint64_t)v11, (uint64_t (*)(_QWORD))sub_1DC15C2FC);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    v19 = type metadata accessor for ManageWatchlistsContentMode(0);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    return a1;
  }
  v18 = sub_1DC4010E4();
  (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v11, v12, v18);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v11, 0, 1, v14);
  return a1;
}

uint64_t sub_1DC1A8348(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  const void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v7 = *(int *)(a3 + 28);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1DC40124C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = *(int *)(a3 + 32);
  v12 = (void *)(a1 + v11);
  v13 = (const void *)(a2 + v11);
  sub_1DC15C2FC();
  v15 = v14;
  v16 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v16 + 48))(v13, 1, v14))
  {
    v17 = type metadata accessor for ManageWatchlistsContentMode(0);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    v18 = sub_1DC4010E4();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v12, v13, v18);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v12, 0, 1, v15);
  }
  return a1;
}

uint64_t sub_1DC1A8448(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(void *, uint64_t, uint64_t);
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v8 = *(int *)(a3 + 28);
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_1DC40124C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  v12 = *(int *)(a3 + 32);
  v13 = (void *)(a1 + v12);
  v14 = (void *)(a2 + v12);
  sub_1DC15C2FC();
  v16 = v15;
  v17 = *(_QWORD *)(v15 - 8);
  v18 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v17 + 48);
  LODWORD(v10) = v18(v13, 1, v15);
  v19 = v18(v14, 1, v16);
  if (!(_DWORD)v10)
  {
    if (!v19)
    {
      v23 = sub_1DC4010E4();
      (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v23 - 8) + 40))(v13, v14, v23);
      return a1;
    }
    sub_1DC0926D8((uint64_t)v13, (uint64_t (*)(_QWORD))sub_1DC15C2FC);
    goto LABEL_6;
  }
  if (v19)
  {
LABEL_6:
    v21 = type metadata accessor for ManageWatchlistsContentMode(0);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    return a1;
  }
  v20 = sub_1DC4010E4();
  (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v13, v14, v20);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v13, 0, 1, v16);
  return a1;
}

uint64_t sub_1DC1A85B8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC1A85C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1DC40124C();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 28);
    }
    else
    {
      v10 = type metadata accessor for ManageWatchlistsContentMode(0);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 32);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_1DC1A8664()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC1A8670(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = sub_1DC40124C();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 28);
    }
    else
    {
      v10 = type metadata accessor for ManageWatchlistsContentMode(0);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 32);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t type metadata accessor for WatchlistCellViewModel(uint64_t a1)
{
  return sub_1DC08CD5C(a1, qword_1F034DA18);
}

uint64_t sub_1DC1A8720()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1DC40124C();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for ManageWatchlistsContentMode(319);
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_1DC1A87BC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    sub_1DC15C2FC();
    v8 = v7;
    v9 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v9 + 48))(a2, 1, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v11 = sub_1DC4010E4();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
    }
  }
  return a1;
}

uint64_t sub_1DC1A8890(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;

  sub_1DC15C2FC();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 1, v2);
  if (!(_DWORD)result)
  {
    v4 = sub_1DC4010E4();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  }
  return result;
}

void *sub_1DC1A88F4(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_1DC15C2FC();
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v9 = sub_1DC4010E4();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
  }
  return a1;
}

void *sub_1DC1A89A4(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(void *, uint64_t, uint64_t);
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v14;

  sub_1DC15C2FC();
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  v9 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v8 + 48);
  v10 = v9(a1, 1, v6);
  v11 = v9(a2, 1, v7);
  if (!v10)
  {
    if (!v11)
    {
      v14 = sub_1DC4010E4();
      (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(a1, a2, v14);
      return a1;
    }
    sub_1DC0926D8((uint64_t)a1, (uint64_t (*)(_QWORD))sub_1DC15C2FC);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  v12 = sub_1DC4010E4();
  (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(a1, a2, v12);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
  return a1;
}

void *sub_1DC1A8AAC(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_1DC15C2FC();
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v9 = sub_1DC4010E4();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
  }
  return a1;
}

void *sub_1DC1A8B5C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(void *, uint64_t, uint64_t);
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v14;

  sub_1DC15C2FC();
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  v9 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v8 + 48);
  v10 = v9(a1, 1, v6);
  v11 = v9(a2, 1, v7);
  if (!v10)
  {
    if (!v11)
    {
      v14 = sub_1DC4010E4();
      (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(a1, a2, v14);
      return a1;
    }
    sub_1DC0926D8((uint64_t)a1, (uint64_t (*)(_QWORD))sub_1DC15C2FC);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  v12 = sub_1DC4010E4();
  (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(a1, a2, v12);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
  return a1;
}

uint64_t sub_1DC1A8C64()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC1A8C70(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  sub_1DC15C2FC();
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 2)
    return v5 - 1;
  else
    return 0;
}

uint64_t sub_1DC1A8CBC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC1A8CC8(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 1);
  else
    v5 = 0;
  sub_1DC15C2FC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, v5, a3, v6);
}

uint64_t sub_1DC1A8D18(uint64_t a1)
{
  uint64_t v2;

  sub_1DC15C2FC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 1, v2);
}

uint64_t sub_1DC1A8D50(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1DC15C2FC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, 1, v4);
}

uint64_t sub_1DC1A8D90()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1DC4010E4();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t sub_1DC1A8DEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int (*v18)(uint64_t, uint64_t, uint64_t);
  char v19;
  uint64_t (*v20)(_QWORD);
  void (*v21)(char *, uint64_t);
  uint64_t v23;

  v4 = sub_1DC4010E4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ManageWatchlistsContentMode(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC1A9090();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (uint64_t)&v13[*(int *)(v14 + 48)];
  sub_1DC173D68(a1, (uint64_t)v13);
  sub_1DC173D68(a2, v15);
  sub_1DC15C2FC();
  v17 = v16;
  v18 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48);
  if (v18((uint64_t)v13, 1, v16) == 1)
  {
    v19 = 1;
    if (v18(v15, 1, v17) == 1)
      goto LABEL_8;
  }
  else
  {
    sub_1DC173D68((uint64_t)v13, (uint64_t)v10);
    if (v18(v15, 1, v17) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v7, v15, v4);
      v19 = MEMORY[0x1DF0C18C8](v10, v7);
      v21 = *(void (**)(char *, uint64_t))(v5 + 8);
      v21(v7, v4);
      v21(v10, v4);
LABEL_8:
      v20 = type metadata accessor for ManageWatchlistsContentMode;
      goto LABEL_9;
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  }
  v19 = 0;
  v20 = (uint64_t (*)(_QWORD))sub_1DC1A9090;
LABEL_9:
  sub_1DC0926D8((uint64_t)v13, v20);
  return v19 & 1;
}

uint64_t sub_1DC1A8FD4(uint64_t a1, uint64_t a2)
{
  BOOL v4;
  BOOL v5;
  uint64_t v6;

  v4 = *(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8);
  if ((v4 || (sub_1DC4099E8() & 1) != 0)
    && (*(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16) ? (v5 = *(_QWORD *)(a1 + 24) == *(_QWORD *)(a2 + 24)) : (v5 = 0),
        (v5 || (sub_1DC4099E8() & 1) != 0)
     && *(unsigned __int8 *)(a1 + 32) == *(unsigned __int8 *)(a2 + 32)
     && (v6 = type metadata accessor for WatchlistCellViewModel(0),
         (MEMORY[0x1DF0C1A78](a1 + *(int *)(v6 + 28), a2 + *(int *)(v6 + 28)) & 1) != 0)))
  {
    return sub_1DC1A8DEC(a1 + *(int *)(v6 + 32), a2 + *(int *)(v6 + 32));
  }
  else
  {
    return 0;
  }
}

void sub_1DC1A9090()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1F034DAE0)
  {
    type metadata accessor for ManageWatchlistsContentMode(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1F034DAE0);
  }
}

void sub_1DC1A90F0(uint64_t a1, double *a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v5;
  uint64_t inited;
  void *v7;
  uint64_t v8;
  void *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, uint64_t);
  id v15;
  uint64_t v16;
  id v17;
  void *v18;
  void *v19;
  id v20;
  void *v21;
  _QWORD *v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(uint64_t, uint64_t);
  uint64_t v29;
  id v30;
  void *v31;
  void *v32;
  id v33;
  void *v34;
  _QWORD *v35;
  uint64_t v36;
  id v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t (*v42)(uint64_t, uint64_t);
  id v43;
  uint64_t v44;
  id v45;
  void *v46;
  void *v47;
  id v48;
  uint64_t v49;
  id v50;
  id v51;
  id v52;
  id v53;
  _QWORD *v54;
  uint64_t v55;

  v52 = *(id *)(a3 + OBJC_IVAR____TtC8StocksUI23BilingualFeedPromptView_messageLabel);
  objc_msgSend(v52, sel_setFrame_, a2[4], a2[5], a2[6], a2[7]);
  v54 = (_QWORD *)(v3 + 16);
  swift_beginAccess();
  v5 = (_QWORD *)*__swift_project_boxed_opaque_existential_1((_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 40));
  sub_1DC0FB194();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DC40C740;
  v7 = (void *)*MEMORY[0x1E0DC1138];
  *(_QWORD *)(inited + 32) = *MEMORY[0x1E0DC1138];
  v8 = sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FB00);
  swift_bridgeObjectRetain();
  v50 = v7;
  *(_QWORD *)(inited + 40) = sub_1DC4092F8();
  v9 = (void *)*MEMORY[0x1E0DC1140];
  *(_QWORD *)(inited + 64) = v8;
  *(_QWORD *)(inited + 72) = v9;
  v10 = v5 + 3;
  v12 = v5[6];
  v11 = v5[7];
  __swift_project_boxed_opaque_existential_1(v10, v12);
  v13 = *(_QWORD *)(v11 + 16);
  v14 = *(uint64_t (**)(uint64_t, uint64_t))(v13 + 48);
  v15 = v9;
  v16 = v14(v12, v13);
  v49 = sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FB30);
  *(_QWORD *)(inited + 104) = v49;
  *(_QWORD *)(inited + 80) = v16;
  sub_1DC0FA3C4(inited);
  v17 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  v18 = (void *)sub_1DC408A1C();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1DC081B48((unint64_t *)&qword_1EDB3F988, 255, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1DC40D90C);
  v19 = (void *)sub_1DC408980();
  swift_bridgeObjectRelease();
  v20 = objc_msgSend(v17, sel_initWithString_attributes_, v18, v19);

  objc_msgSend(v52, sel_setAttributedText_, v20);
  v21 = *(void **)(a3 + OBJC_IVAR____TtC8StocksUI23BilingualFeedPromptView_enableBilingualFeedButton);
  objc_msgSend(v21, sel_setFrame_, a2[8], a2[9], a2[10], a2[11]);
  v22 = (_QWORD *)*__swift_project_boxed_opaque_existential_1(v54, *(_QWORD *)(v55 + 40));
  v23 = swift_initStackObject();
  *(_OWORD *)(v23 + 16) = xmmword_1DC40C740;
  *(_QWORD *)(v23 + 32) = v50;
  swift_bridgeObjectRetain();
  v53 = v50;
  *(_QWORD *)(v23 + 40) = sub_1DC4092F8();
  *(_QWORD *)(v23 + 64) = v8;
  *(_QWORD *)(v23 + 72) = v15;
  v24 = v22 + 3;
  v26 = v22[6];
  v25 = v22[7];
  __swift_project_boxed_opaque_existential_1(v24, v26);
  v27 = *(_QWORD *)(v25 + 16);
  v28 = *(uint64_t (**)(uint64_t, uint64_t))(v27 + 104);
  v51 = v15;
  v29 = v28(v26, v27);
  *(_QWORD *)(v23 + 104) = v49;
  *(_QWORD *)(v23 + 80) = v29;
  sub_1DC0FA3C4(v23);
  v30 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  v31 = (void *)sub_1DC408A1C();
  swift_bridgeObjectRelease();
  v32 = (void *)sub_1DC408980();
  swift_bridgeObjectRelease();
  v33 = objc_msgSend(v30, sel_initWithString_attributes_, v31, v32);

  objc_msgSend(v21, sel_setAttributedTitle_forState_, v33, 0);
  v34 = *(void **)(a3 + OBJC_IVAR____TtC8StocksUI23BilingualFeedPromptView_neverShowBilingualFeedPromptsButton);
  objc_msgSend(v34, sel_setFrame_, a2[12], a2[13], a2[14], a2[15]);
  v35 = (_QWORD *)*__swift_project_boxed_opaque_existential_1(v54, *(_QWORD *)(v55 + 40));
  v36 = swift_initStackObject();
  *(_OWORD *)(v36 + 16) = xmmword_1DC40C740;
  *(_QWORD *)(v36 + 32) = v53;
  swift_bridgeObjectRetain();
  v37 = v53;
  *(_QWORD *)(v36 + 40) = sub_1DC4092F8();
  *(_QWORD *)(v36 + 64) = v8;
  *(_QWORD *)(v36 + 72) = v51;
  v38 = v35 + 3;
  v39 = v35[6];
  v40 = v35[7];
  __swift_project_boxed_opaque_existential_1(v38, v39);
  v41 = *(_QWORD *)(v40 + 16);
  v42 = *(uint64_t (**)(uint64_t, uint64_t))(v41 + 104);
  v43 = v51;
  v44 = v42(v39, v41);
  *(_QWORD *)(v36 + 104) = v49;
  *(_QWORD *)(v36 + 80) = v44;
  sub_1DC0FA3C4(v36);
  v45 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  v46 = (void *)sub_1DC408A1C();
  swift_bridgeObjectRelease();
  v47 = (void *)sub_1DC408980();
  swift_bridgeObjectRelease();
  v48 = objc_msgSend(v45, sel_initWithString_attributes_, v46, v47);

  objc_msgSend(v34, sel_setAttributedTitle_forState_, v48, 0);
}

uint64_t type metadata accessor for BilingualFeedPromptViewRenderer()
{
  return objc_opt_self();
}

uint64_t sub_1DC1A9674(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = sub_1DC081B48(&qword_1EDB3A380, a2, (uint64_t (*)(uint64_t))type metadata accessor for BilingualFeedPromptViewRenderer, (uint64_t)&unk_1DC4137F0);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

_QWORD *sub_1DC1A96B0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(_QWORD *, _QWORD *, uint64_t);
  int *v40;
  uint64_t v41;
  char *v42;
  char *v43;
  int *v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  __int128 v55;
  __int128 v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  int *v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  void (*v89)(char *, char *, uint64_t);
  char *v90;
  uint64_t v91;
  char *v92;
  _QWORD *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  _QWORD *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  _QWORD *v102;
  char *v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  char *v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  void (*v114)(char *, char *, uint64_t);
  char *v115;
  char *v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  _QWORD *v128;
  _QWORD *v129;
  uint64_t v130;
  void *v131;
  uint64_t v132;
  void *v133;
  uint64_t v134;
  void *v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  char *v139;
  __int128 v140;
  __int128 v141;
  uint64_t v142;
  __int128 v143;
  __int128 v144;
  __int128 v145;
  __int128 v146;
  id v147;
  id v148;
  id v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  char *v158;
  char *v159;
  uint64_t v160;
  uint64_t v161;
  _QWORD *v162;
  char *v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  char *v167;
  char *v168;
  uint64_t v169;
  void (*v170)(char *, char *, uint64_t);
  int *v171;
  uint64_t v172;
  char *v173;
  char *v174;
  __int128 v175;
  uint64_t v176;
  char *v177;
  char *v178;
  __int128 v179;
  uint64_t v180;
  char *v181;
  char *v182;
  __int128 v183;
  uint64_t v184;
  char *v185;
  char *v186;
  __int128 v187;
  uint64_t v188;
  char *v189;
  char *v190;
  __int128 v191;
  uint64_t v192;
  char *v193;
  char *v194;
  __int128 v195;
  uint64_t v196;
  char *v197;
  char *v198;
  __int128 v199;
  uint64_t v200;
  char *v201;
  char *v202;
  __int128 v203;
  uint64_t v204;
  char *v205;
  char *v206;
  __int128 v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  char *v211;
  uint64_t v212;
  char *v213;
  char *v214;
  uint64_t v215;
  uint64_t v216;
  char *v217;
  char *v218;
  uint64_t v219;
  uint64_t v220;
  char *v221;
  char *v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  char *v226;
  char *v227;
  uint64_t v228;
  uint64_t v229;
  char *v230;
  char *v231;
  uint64_t v232;
  uint64_t v233;
  _QWORD *v234;
  _QWORD *v235;
  uint64_t v236;
  uint64_t v237;
  _QWORD *v238;
  _QWORD *v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  _OWORD *v243;
  _OWORD *v244;
  __int128 v245;
  __int128 v246;
  __int128 v247;
  __int128 v248;
  char *v249;
  char *v250;
  void (*v251)(char *, char *, uint64_t);
  char *v252;
  char *v253;
  void (*v254)(char *, char *, uint64_t);
  char *v255;
  void (*v256)(char *, char *, uint64_t);
  char *v257;
  void (*v258)(char *, char *, uint64_t);
  char *v259;
  uint64_t v260;
  uint64_t v261;
  char *v262;
  char *v263;
  char *v264;
  void (*v265)(char *, char *, uint64_t);
  int *v266;
  int *v267;
  unsigned int (*v268)(char *, uint64_t, uint64_t);
  int *v269;
  int *v270;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v15 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v15 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v7 = sub_1DC4010E4();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
        v8 = (int *)type metadata accessor for StockFeedMastheadModel();
        v9 = v8[5];
        v10 = (char *)a1 + v9;
        v11 = (char *)a2 + v9;
        v12 = sub_1DC401030();
        v13 = *(_QWORD *)(v12 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
        {
          sub_1DC092F50(0, &qword_1EDB28DC0, (void (*)(uint64_t))MEMORY[0x1E0DAF040]);
          memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
        }
        v58 = v8[6];
        v59 = (char *)a1 + v58;
        v60 = (char *)a2 + v58;
        v61 = sub_1DC400F7C();
        v62 = *(_QWORD *)(v61 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v62 + 48))(v60, 1, v61))
        {
          sub_1DC092F50(0, (unint64_t *)&unk_1EDB28D90, (void (*)(uint64_t))MEMORY[0x1E0DAEFA8]);
          memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v62 + 16))(v59, v60, v61);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v62 + 56))(v59, 0, 1, v61);
        }
        v266 = v8;
        v77 = v8[7];
        v78 = (_QWORD *)((char *)a1 + v77);
        v79 = *(_QWORD *)((char *)a2 + v77 + 8);
        v263 = (char *)a2 + v77;
        v80 = (char *)a2 + v77;
        *v78 = *(_QWORD *)((char *)a2 + v77);
        v78[1] = v79;
        v269 = (int *)type metadata accessor for QuoteSummaryViewModel();
        v81 = v269[5];
        v82 = (char *)v78 + v81;
        v83 = &v80[v81];
        *(_QWORD *)v82 = *(_QWORD *)&v80[v81];
        v82[8] = v80[v81 + 8];
        *((_QWORD *)v82 + 2) = *(_QWORD *)&v80[v81 + 16];
        v82[24] = v80[v81 + 24];
        *((_QWORD *)v82 + 4) = *(_QWORD *)&v80[v81 + 32];
        v82[40] = v80[v81 + 40];
        v84 = *(_QWORD *)&v80[v81 + 56];
        *((_QWORD *)v82 + 6) = *(_QWORD *)&v80[v81 + 48];
        *((_QWORD *)v82 + 7) = v84;
        v85 = *(_QWORD *)&v80[v81 + 72];
        *((_QWORD *)v82 + 8) = *(_QWORD *)&v80[v81 + 64];
        *((_QWORD *)v82 + 9) = v85;
        v82[80] = v80[v81 + 80];
        v86 = type metadata accessor for PriceViewModel();
        v87 = *(int *)(v86 + 40);
        v253 = &v83[v87];
        v257 = &v82[v87];
        v88 = sub_1DC4011C8();
        v89 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v88 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v90 = v257;
        v258 = v89;
        v261 = v88;
        v89(v90, v253, v88);
        v91 = *(int *)(v86 + 44);
        v92 = &v82[v91];
        v93 = v78;
        v94 = &v83[v91];
        v95 = sub_1DC400118();
        v254 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v95 - 8) + 16);
        v254(v92, v94, v95);
        v96 = v269[6];
        v97 = (_QWORD *)((char *)v78 + v96);
        v98 = &v263[v96];
        v99 = *(_QWORD *)(v86 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v99 + 48))(&v263[v96], 1, v86))
        {
          sub_1DC092F50(0, (unint64_t *)&qword_1EDB2D5E8, (void (*)(uint64_t))type metadata accessor for PriceViewModel);
          memcpy(v97, v98, *(_QWORD *)(*(_QWORD *)(v100 - 8) + 64));
        }
        else
        {
          *v97 = *(_QWORD *)v98;
          *((_BYTE *)v97 + 8) = v98[8];
          v97[2] = *((_QWORD *)v98 + 2);
          *((_BYTE *)v97 + 24) = v98[24];
          v97[4] = *((_QWORD *)v98 + 4);
          *((_BYTE *)v97 + 40) = v98[40];
          v150 = *((_QWORD *)v98 + 7);
          v97[6] = *((_QWORD *)v98 + 6);
          v97[7] = v150;
          v151 = *((_QWORD *)v98 + 9);
          v97[8] = *((_QWORD *)v98 + 8);
          v97[9] = v151;
          *((_BYTE *)v97 + 80) = v98[80];
          v152 = *(int *)(v86 + 40);
          v249 = &v98[v152];
          v252 = (char *)v97 + v152;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v258(v252, v249, v261);
          v254((char *)v97 + *(int *)(v86 + 44), &v98[*(int *)(v86 + 44)], v95);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v99 + 56))(v97, 0, 1, v86);
        }
        v153 = v269[7];
        v154 = (char *)v93 + v153;
        v155 = &v263[v153];
        v156 = sub_1DC4008EC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v156 - 8) + 16))(v154, v155, v156);
        v157 = v269[8];
        v158 = (char *)v93 + v157;
        v159 = &v263[v157];
        v160 = sub_1DC4002BC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v160 - 8) + 16))(v158, v159, v160);
        v161 = v269[9];
        v162 = (_QWORD *)((char *)v93 + v161);
        v163 = &v263[v161];
        v164 = *((_QWORD *)v163 + 1);
        *v162 = *(_QWORD *)v163;
        v162[1] = v164;
        *((_BYTE *)a1 + v266[8]) = *((_BYTE *)a2 + v266[8]);
        sub_1DC1426A0();
        v166 = *(int *)(v165 + 48);
        v167 = (char *)a1 + v166;
        v168 = (char *)a2 + v166;
        v169 = sub_1DC406040();
        v170 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v169 - 8) + 16);
        swift_bridgeObjectRetain();
        v170(v167, v168, v169);
        v171 = (int *)type metadata accessor for StockFeedMastheadViewLayoutAttributes();
        v172 = v171[5];
        v173 = &v167[v172];
        v174 = &v168[v172];
        v175 = *((_OWORD *)v174 + 1);
        *(_OWORD *)v173 = *(_OWORD *)v174;
        *((_OWORD *)v173 + 1) = v175;
        v176 = v171[6];
        v177 = &v167[v176];
        v178 = &v168[v176];
        v179 = *((_OWORD *)v178 + 1);
        *(_OWORD *)v177 = *(_OWORD *)v178;
        *((_OWORD *)v177 + 1) = v179;
        v180 = v171[7];
        v181 = &v167[v180];
        v182 = &v168[v180];
        v183 = *((_OWORD *)v182 + 1);
        *(_OWORD *)v181 = *(_OWORD *)v182;
        *((_OWORD *)v181 + 1) = v183;
        v184 = v171[8];
        v185 = &v167[v184];
        v186 = &v168[v184];
        v187 = *((_OWORD *)v186 + 1);
        *(_OWORD *)v185 = *(_OWORD *)v186;
        *((_OWORD *)v185 + 1) = v187;
        v188 = v171[9];
        v189 = &v167[v188];
        v190 = &v168[v188];
        v191 = *((_OWORD *)v190 + 1);
        *(_OWORD *)v189 = *(_OWORD *)v190;
        *((_OWORD *)v189 + 1) = v191;
        v192 = v171[10];
        v193 = &v167[v192];
        v194 = &v168[v192];
        v195 = *((_OWORD *)v194 + 1);
        *(_OWORD *)v193 = *(_OWORD *)v194;
        *((_OWORD *)v193 + 1) = v195;
        v196 = v171[11];
        v197 = &v167[v196];
        v198 = &v168[v196];
        v199 = *((_OWORD *)v198 + 1);
        *(_OWORD *)v197 = *(_OWORD *)v198;
        *((_OWORD *)v197 + 1) = v199;
        memcpy(&v167[v171[12]], &v168[v171[12]], 0x111uLL);
        v200 = v171[13];
        v201 = &v167[v200];
        v202 = &v168[v200];
        v203 = *((_OWORD *)v202 + 1);
        *(_OWORD *)v201 = *(_OWORD *)v202;
        *((_OWORD *)v201 + 1) = v203;
        v204 = v171[14];
        v205 = &v167[v204];
        v206 = &v168[v204];
        v207 = *((_OWORD *)v206 + 1);
        *(_OWORD *)v205 = *(_OWORD *)v206;
        *((_OWORD *)v205 + 1) = v207;
        v167[v171[15]] = v168[v171[15]];
        *(_QWORD *)&v167[v171[16]] = *(_QWORD *)&v168[v171[16]];
        swift_storeEnumTagMultiPayload();
        break;
      case 1u:
        v17 = sub_1DC4010E4();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(a1, a2, v17);
        v18 = (int *)type metadata accessor for StockFeedMastheadModel();
        v19 = v18[5];
        v20 = (char *)a1 + v19;
        v21 = (char *)a2 + v19;
        v22 = sub_1DC401030();
        v23 = *(_QWORD *)(v22 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
        {
          sub_1DC092F50(0, &qword_1EDB28DC0, (void (*)(uint64_t))MEMORY[0x1E0DAF040]);
          memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v20, v21, v22);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
        }
        v64 = v18[6];
        v65 = (char *)a1 + v64;
        v66 = (char *)a2 + v64;
        v67 = sub_1DC400F7C();
        v68 = *(_QWORD *)(v67 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v68 + 48))(v66, 1, v67))
        {
          sub_1DC092F50(0, (unint64_t *)&unk_1EDB28D90, (void (*)(uint64_t))MEMORY[0x1E0DAEFA8]);
          memcpy(v65, v66, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v68 + 16))(v65, v66, v67);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v68 + 56))(v65, 0, 1, v67);
        }
        v101 = v18[7];
        v102 = (_QWORD *)((char *)a1 + v101);
        v103 = (char *)a2 + v101;
        v104 = *(_QWORD *)((char *)a2 + v101 + 8);
        v267 = v18;
        *v102 = *(_QWORD *)((char *)a2 + v101);
        v102[1] = v104;
        v105 = (char *)a1 + v101;
        v262 = (char *)a1 + v101;
        v270 = (int *)type metadata accessor for QuoteSummaryViewModel();
        v106 = v270[5];
        v107 = &v105[v106];
        v108 = &v103[v106];
        *(_QWORD *)v107 = *(_QWORD *)&v103[v106];
        v107[8] = v103[v106 + 8];
        *((_QWORD *)v107 + 2) = *(_QWORD *)&v103[v106 + 16];
        v107[24] = v103[v106 + 24];
        *((_QWORD *)v107 + 4) = *(_QWORD *)&v103[v106 + 32];
        v107[40] = v103[v106 + 40];
        v109 = *(_QWORD *)&v103[v106 + 56];
        *((_QWORD *)v107 + 6) = *(_QWORD *)&v103[v106 + 48];
        *((_QWORD *)v107 + 7) = v109;
        v110 = *(_QWORD *)&v103[v106 + 72];
        *((_QWORD *)v107 + 8) = *(_QWORD *)&v103[v106 + 64];
        *((_QWORD *)v107 + 9) = v110;
        v107[80] = v103[v106 + 80];
        v111 = type metadata accessor for PriceViewModel();
        v112 = *(int *)(v111 + 40);
        v255 = &v108[v112];
        v259 = &v107[v112];
        v113 = sub_1DC4011C8();
        v114 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v113 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v116 = v255;
        v115 = v259;
        v256 = v114;
        v260 = v113;
        v114(v115, v116, v113);
        v117 = *(int *)(v111 + 44);
        v118 = &v107[v117];
        v119 = v111;
        v120 = &v108[v117];
        v121 = sub_1DC400118();
        v251 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v121 - 8) + 16);
        v251(v118, v120, v121);
        v122 = v270[6];
        v123 = &v262[v122];
        v264 = v103;
        v124 = &v103[v122];
        v125 = *(_QWORD *)(v119 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v125 + 48))(&v103[v122], 1, v119))
        {
          sub_1DC092F50(0, (unint64_t *)&qword_1EDB2D5E8, (void (*)(uint64_t))type metadata accessor for PriceViewModel);
          memcpy(v123, v124, *(_QWORD *)(*(_QWORD *)(v126 - 8) + 64));
        }
        else
        {
          *(_QWORD *)v123 = *(_QWORD *)v124;
          v123[8] = v124[8];
          *((_QWORD *)v123 + 2) = *((_QWORD *)v124 + 2);
          v123[24] = v124[24];
          *((_QWORD *)v123 + 4) = *((_QWORD *)v124 + 4);
          v123[40] = v124[40];
          v208 = *((_QWORD *)v124 + 7);
          *((_QWORD *)v123 + 6) = *((_QWORD *)v124 + 6);
          *((_QWORD *)v123 + 7) = v208;
          v209 = *((_QWORD *)v124 + 9);
          *((_QWORD *)v123 + 8) = *((_QWORD *)v124 + 8);
          *((_QWORD *)v123 + 9) = v209;
          v123[80] = v124[80];
          v210 = *(int *)(v119 + 40);
          v211 = &v123[v210];
          v250 = &v124[v210];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v256(v211, v250, v260);
          v251(&v123[*(int *)(v119 + 44)], &v124[*(int *)(v119 + 44)], v121);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v125 + 56))(v123, 0, 1, v119);
        }
        v212 = v270[7];
        v213 = &v262[v212];
        v214 = &v264[v212];
        v215 = sub_1DC4008EC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v215 - 8) + 16))(v213, v214, v215);
        v216 = v270[8];
        v217 = &v262[v216];
        v218 = &v264[v216];
        v219 = sub_1DC4002BC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v219 - 8) + 16))(v217, v218, v219);
        v220 = v270[9];
        v221 = &v262[v220];
        v222 = &v264[v220];
        v223 = *((_QWORD *)v222 + 1);
        *(_QWORD *)v221 = *(_QWORD *)v222;
        *((_QWORD *)v221 + 1) = v223;
        *((_BYTE *)a1 + v267[8]) = *((_BYTE *)a2 + v267[8]);
        sub_1DC1AA6E8(0, &qword_1EDB33E50, (void (*)(uint64_t))type metadata accessor for StockFeedMastheadModel);
        memcpy((char *)a1 + *(int *)(v224 + 48), (char *)a2 + *(int *)(v224 + 48), 0x178uLL);
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 2u:
        v25 = sub_1DC4010E4();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(a1, a2, v25);
        sub_1DC1AA6E8(0, &qword_1EDB2E2B8, (void (*)(uint64_t))type metadata accessor for StockChartModel);
        v27 = *(int *)(v26 + 48);
        v28 = (char *)a1 + v27;
        v29 = (char *)a2 + v27;
        v30 = *((_OWORD *)v29 + 1);
        *(_OWORD *)v28 = *(_OWORD *)v29;
        *((_OWORD *)v28 + 1) = v30;
        v31 = *((_OWORD *)v29 + 3);
        *((_OWORD *)v28 + 2) = *((_OWORD *)v29 + 2);
        *((_OWORD *)v28 + 3) = v31;
        v32 = *((_OWORD *)v29 + 5);
        *((_OWORD *)v28 + 4) = *((_OWORD *)v29 + 4);
        *((_OWORD *)v28 + 5) = v32;
        v33 = *((_OWORD *)v29 + 7);
        *((_OWORD *)v28 + 6) = *((_OWORD *)v29 + 6);
        *((_OWORD *)v28 + 7) = v33;
        v34 = *((_OWORD *)v29 + 9);
        *((_OWORD *)v28 + 8) = *((_OWORD *)v29 + 8);
        *((_OWORD *)v28 + 9) = v34;
        *((_QWORD *)v28 + 20) = *((_QWORD *)v29 + 20);
        *(_OWORD *)(v28 + 184) = *(_OWORD *)(v29 + 184);
        *(_OWORD *)(v28 + 168) = *(_OWORD *)(v29 + 168);
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
        v35 = sub_1DC401030();
        v36 = *(_QWORD *)(v35 - 8);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v36 + 48))(a2, 1, v35))
        {
          sub_1DC092F50(0, &qword_1EDB28DC0, (void (*)(uint64_t))MEMORY[0x1E0DAF040]);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
        }
        else
        {
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v36 + 16))(a1, a2, v35);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v36 + 56))(a1, 0, 1, v35);
        }
        v70 = (int *)type metadata accessor for QuoteDetailViewModel();
        v71 = v70[5];
        v72 = (char *)a1 + v71;
        v73 = (char *)a2 + v71;
        v74 = sub_1DC400370();
        v75 = *(_QWORD *)(v74 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v75 + 48))(v73, 1, v74))
        {
          sub_1DC092F50(0, &qword_1EDB28BA0, (void (*)(uint64_t))MEMORY[0x1E0DAE188]);
          memcpy(v72, v73, *(_QWORD *)(*(_QWORD *)(v76 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v75 + 16))(v72, v73, v74);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v75 + 56))(v72, 0, 1, v74);
        }
        v127 = v70[6];
        v128 = (_QWORD *)((char *)a1 + v127);
        v129 = (_QWORD *)((char *)a2 + v127);
        v130 = v129[1];
        *v128 = *v129;
        v128[1] = v130;
        v131 = (void *)v129[2];
        v128[2] = v131;
        *(_QWORD *)((char *)a1 + v70[7]) = *(_QWORD *)((char *)a2 + v70[7]);
        *(_QWORD *)((char *)a1 + v70[8]) = *(_QWORD *)((char *)a2 + v70[8]);
        v132 = v70[9];
        v133 = *(void **)((char *)a2 + v132);
        *(_QWORD *)((char *)a1 + v132) = v133;
        v134 = v70[10];
        v135 = *(void **)((char *)a2 + v134);
        *(_QWORD *)((char *)a1 + v134) = v135;
        sub_1DC1AA6E8(0, &qword_1EDB31B10, (void (*)(uint64_t))type metadata accessor for QuoteDetailViewModel);
        v137 = *(int *)(v136 + 48);
        v138 = (char *)a1 + v137;
        v139 = (char *)a2 + v137;
        v140 = *((_OWORD *)v139 + 1);
        *(_OWORD *)v138 = *(_OWORD *)v139;
        *((_OWORD *)v138 + 1) = v140;
        v141 = *((_OWORD *)v139 + 3);
        *((_OWORD *)v138 + 2) = *((_OWORD *)v139 + 2);
        *((_OWORD *)v138 + 3) = v141;
        v138[64] = v139[64];
        v142 = *((_QWORD *)v139 + 10);
        *((_QWORD *)v138 + 9) = *((_QWORD *)v139 + 9);
        *((_QWORD *)v138 + 10) = v142;
        *((_QWORD *)v138 + 11) = *((_QWORD *)v139 + 11);
        v143 = *((_OWORD *)v139 + 11);
        *((_OWORD *)v138 + 10) = *((_OWORD *)v139 + 10);
        *((_OWORD *)v138 + 11) = v143;
        v138[192] = v139[192];
        v144 = *((_OWORD *)v139 + 7);
        *((_OWORD *)v138 + 6) = *((_OWORD *)v139 + 6);
        *((_OWORD *)v138 + 7) = v144;
        v145 = *((_OWORD *)v139 + 9);
        *((_OWORD *)v138 + 8) = *((_OWORD *)v139 + 8);
        *((_OWORD *)v138 + 9) = v145;
        *(_OWORD *)(v138 + 200) = *(_OWORD *)(v139 + 200);
        v146 = *(_OWORD *)(v139 + 216);
        *(_OWORD *)(v138 + 232) = *(_OWORD *)(v139 + 232);
        *(_OWORD *)(v138 + 216) = v146;
        *(_OWORD *)(v138 + 248) = *(_OWORD *)(v139 + 248);
        v138[264] = v139[264];
        swift_bridgeObjectRetain();
        v147 = v131;
        swift_retain();
        swift_retain();
        v148 = v133;
        v149 = v135;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 4u:
        v38 = sub_1DC4010E4();
        v39 = *(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v38 - 8) + 16);
        v39(a1, a2, v38);
        v40 = (int *)type metadata accessor for StockFeedEarningsViewModel();
        v41 = v40[5];
        v42 = (char *)a1 + v41;
        v43 = (char *)a2 + v41;
        v39((_QWORD *)((char *)a1 + v41), (_QWORD *)((char *)a2 + v41), v38);
        v44 = (int *)type metadata accessor for StockEarningsModel();
        v45 = v44[5];
        v46 = &v42[v45];
        v47 = &v43[v45];
        v48 = sub_1DC3FFFEC();
        v49 = *(_QWORD *)(v48 - 8);
        v265 = *(void (**)(char *, char *, uint64_t))(v49 + 16);
        v265(v46, v47, v48);
        v50 = v44[6];
        v51 = &v42[v50];
        v52 = &v43[v50];
        v268 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48);
        if (v268(&v43[v50], 1, v48))
        {
          sub_1DC092F50(0, &qword_1EDB28AC0, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
          memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
        }
        else
        {
          v265(v51, v52, v48);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v49 + 56))(v51, 0, 1, v48);
        }
        v225 = v44[7];
        v226 = &v42[v225];
        v227 = &v43[v225];
        v228 = sub_1DC400220();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v228 - 8) + 16))(v226, v227, v228);
        v42[v44[8]] = v43[v44[8]];
        v42[v44[9]] = v43[v44[9]];
        v265((char *)a1 + v40[6], (char *)a2 + v40[6], v48);
        v229 = v40[7];
        v230 = (char *)a1 + v229;
        v231 = (char *)a2 + v229;
        if (v268((char *)a2 + v229, 1, v48))
        {
          sub_1DC092F50(0, &qword_1EDB28AC0, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
          memcpy(v230, v231, *(_QWORD *)(*(_QWORD *)(v232 - 8) + 64));
        }
        else
        {
          v265(v230, v231, v48);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v49 + 56))(v230, 0, 1, v48);
        }
        v233 = v40[8];
        v234 = (_QWORD *)((char *)a1 + v233);
        v235 = (_QWORD *)((char *)a2 + v233);
        v236 = v235[1];
        *v234 = *v235;
        v234[1] = v236;
        *((_BYTE *)a1 + v40[9]) = *((_BYTE *)a2 + v40[9]);
        v237 = v40[10];
        v238 = (_QWORD *)((char *)a1 + v237);
        v239 = (_QWORD *)((char *)a2 + v237);
        v240 = v239[1];
        *v238 = *v239;
        v238[1] = v240;
        *((_BYTE *)a1 + v40[11]) = *((_BYTE *)a2 + v40[11]);
        *(_QWORD *)((char *)a1 + v40[12]) = *(_QWORD *)((char *)a2 + v40[12]);
        sub_1DC1AA6E8(0, &qword_1EDB36D58, (void (*)(uint64_t))type metadata accessor for StockFeedEarningsViewModel);
        v242 = *(int *)(v241 + 48);
        v243 = (_OWORD *)((char *)a1 + v242);
        v244 = (_OWORD *)((char *)a2 + v242);
        v245 = v244[5];
        v243[4] = v244[4];
        v243[5] = v245;
        v246 = v244[7];
        v243[6] = v244[6];
        v243[7] = v246;
        v247 = v244[1];
        *v243 = *v244;
        v243[1] = v247;
        v248 = v244[3];
        v243[2] = v244[2];
        v243[3] = v248;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 5u:
        v54 = a2[1];
        *a1 = *a2;
        a1[1] = v54;
        v55 = *((_OWORD *)a2 + 2);
        *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
        *((_OWORD *)a1 + 2) = v55;
        v56 = *((_OWORD *)a2 + 4);
        *((_OWORD *)a1 + 3) = *((_OWORD *)a2 + 3);
        *((_OWORD *)a1 + 4) = v56;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 7u:
        v57 = sub_1DC407B04();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v57 - 8) + 16))(a1, a2, v57);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
        break;
    }
  }
  return a1;
}

void sub_1DC1AA6E8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t TupleTypeMetadata2;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v5)
      atomic_store(TupleTypeMetadata2, a2);
  }
}

uint64_t sub_1DC1AA750(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  void (*v45)(uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  int *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(uint64_t, uint64_t);
  int *v61;
  uint64_t v62;
  int *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(uint64_t, uint64_t);
  uint64_t v68;
  unsigned int (*v69)(uint64_t, uint64_t, uint64_t);
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      v3 = sub_1DC4010E4();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
      v4 = (int *)type metadata accessor for StockFeedMastheadModel();
      v5 = a1 + v4[5];
      v6 = sub_1DC401030();
      v7 = *(_QWORD *)(v6 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6))
        (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
      v8 = a1 + v4[6];
      v9 = sub_1DC400F7C();
      v10 = *(_QWORD *)(v9 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
        (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
      v11 = a1 + v4[7];
      swift_bridgeObjectRelease();
      v12 = (int *)type metadata accessor for QuoteSummaryViewModel();
      v13 = v11 + v12[5];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v14 = type metadata accessor for PriceViewModel();
      v15 = v13 + *(int *)(v14 + 40);
      v16 = sub_1DC4011C8();
      v17 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8);
      v17(v15, v16);
      v18 = v13 + *(int *)(v14 + 44);
      v19 = sub_1DC400118();
      v20 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 8);
      v20(v18, v19);
      v21 = v11 + v12[6];
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v21, 1, v14))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v17(v21 + *(int *)(v14 + 40), v16);
        v20(v21 + *(int *)(v14 + 44), v19);
      }
      v22 = v11 + v12[7];
      v23 = sub_1DC4008EC();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 8))(v22, v23);
      v24 = v11 + v12[8];
      v25 = sub_1DC4002BC();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 8))(v24, v25);
      swift_bridgeObjectRelease();
      sub_1DC1426A0();
      a1 += *(int *)(v26 + 48);
      v27 = sub_1DC406040();
      goto LABEL_29;
    case 1:
      v28 = sub_1DC4010E4();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 8))(a1, v28);
      v29 = (int *)type metadata accessor for StockFeedMastheadModel();
      v30 = a1 + v29[5];
      v31 = sub_1DC401030();
      v32 = *(_QWORD *)(v31 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31))
        (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v30, v31);
      v33 = a1 + v29[6];
      v34 = sub_1DC400F7C();
      v35 = *(_QWORD *)(v34 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34))
        (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v33, v34);
      v36 = a1 + v29[7];
      swift_bridgeObjectRelease();
      v37 = (int *)type metadata accessor for QuoteSummaryViewModel();
      v38 = v36 + v37[5];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v39 = type metadata accessor for PriceViewModel();
      v40 = v38 + *(int *)(v39 + 40);
      v41 = sub_1DC4011C8();
      v42 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 8);
      v42(v40, v41);
      v43 = v38 + *(int *)(v39 + 44);
      v44 = sub_1DC400118();
      v45 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 8);
      v45(v43, v44);
      v46 = v36 + v37[6];
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 48))(v46, 1, v39))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v42(v46 + *(int *)(v39 + 40), v41);
        v45(v46 + *(int *)(v39 + 44), v44);
      }
      v47 = v36 + v37[7];
      v48 = sub_1DC4008EC();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 8))(v47, v48);
      v49 = v36 + v37[8];
      v50 = sub_1DC4002BC();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 8))(v49, v50);
      goto LABEL_27;
    case 2:
      v51 = sub_1DC4010E4();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 8))(a1, v51);
      sub_1DC1AA6E8(0, &qword_1EDB2E2B8, (void (*)(uint64_t))type metadata accessor for StockChartModel);
      goto LABEL_27;
    case 3:
      v52 = sub_1DC401030();
      v53 = *(_QWORD *)(v52 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v53 + 48))(a1, 1, v52))
        (*(void (**)(uint64_t, uint64_t))(v53 + 8))(a1, v52);
      v54 = (int *)type metadata accessor for QuoteDetailViewModel();
      v55 = a1 + v54[5];
      v56 = sub_1DC400370();
      v57 = *(_QWORD *)(v56 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v57 + 48))(v55, 1, v56))
        (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v55, v56);
      v58 = a1 + v54[6];
      swift_bridgeObjectRelease();

      swift_release();
      swift_release();

      sub_1DC1AA6E8(0, &qword_1EDB31B10, (void (*)(uint64_t))type metadata accessor for QuoteDetailViewModel);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_27;
    case 4:
      v59 = sub_1DC4010E4();
      v60 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 8);
      v60(a1, v59);
      v61 = (int *)type metadata accessor for StockFeedEarningsViewModel();
      v62 = a1 + v61[5];
      v60(v62, v59);
      v63 = (int *)type metadata accessor for StockEarningsModel();
      v64 = v62 + v63[5];
      v65 = sub_1DC3FFFEC();
      v66 = *(_QWORD *)(v65 - 8);
      v67 = *(void (**)(uint64_t, uint64_t))(v66 + 8);
      v67(v64, v65);
      v68 = v62 + v63[6];
      v69 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v66 + 48);
      if (!v69(v68, 1, v65))
        v67(v68, v65);
      v70 = v62 + v63[7];
      v71 = sub_1DC400220();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v71 - 8) + 8))(v70, v71);
      v67(a1 + v61[6], v65);
      v72 = a1 + v61[7];
      if (!v69(v72, 1, v65))
        v67(v72, v65);
      swift_bridgeObjectRelease();
      goto LABEL_27;
    case 5:
LABEL_27:
      result = swift_bridgeObjectRelease();
      break;
    case 7:
      v27 = sub_1DC407B04();
LABEL_29:
      result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 8))(a1, v27);
      break;
    default:
      return result;
  }
  return result;
}

_QWORD *sub_1DC1AAE5C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(_QWORD *, _QWORD *, uint64_t);
  uint64_t v37;
  char *v38;
  char *v39;
  int *v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  void (*v47)(char *, char *, uint64_t);
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  __int128 v53;
  __int128 v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  int *v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void (*v75)(char *, char *, uint64_t);
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  void (*v96)(char *, char *, uint64_t);
  char *v97;
  char *v98;
  uint64_t v99;
  char *v100;
  _QWORD *v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  _QWORD *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  _QWORD *v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  void (*v121)(char *, char *, uint64_t);
  char *v122;
  uint64_t v123;
  char *v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  _QWORD *v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  _QWORD *v134;
  _QWORD *v135;
  uint64_t v136;
  void *v137;
  uint64_t v138;
  void *v139;
  uint64_t v140;
  void *v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  char *v145;
  __int128 v146;
  __int128 v147;
  uint64_t v148;
  __int128 v149;
  __int128 v150;
  __int128 v151;
  __int128 v152;
  id v153;
  id v154;
  id v155;
  uint64_t v156;
  _QWORD *v157;
  _QWORD *v158;
  uint64_t v159;
  uint64_t v160;
  _QWORD *v161;
  _QWORD *v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  _OWORD *v166;
  _OWORD *v167;
  __int128 v168;
  __int128 v169;
  __int128 v170;
  __int128 v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  char *v176;
  char *v177;
  uint64_t v178;
  uint64_t v179;
  char *v180;
  char *v181;
  uint64_t v182;
  uint64_t v183;
  _QWORD *v184;
  char *v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  char *v189;
  char *v190;
  uint64_t v191;
  void (*v192)(char *, char *, uint64_t);
  int *v193;
  uint64_t v194;
  char *v195;
  char *v196;
  __int128 v197;
  uint64_t v198;
  char *v199;
  char *v200;
  __int128 v201;
  uint64_t v202;
  char *v203;
  char *v204;
  __int128 v205;
  uint64_t v206;
  char *v207;
  char *v208;
  __int128 v209;
  uint64_t v210;
  char *v211;
  char *v212;
  __int128 v213;
  uint64_t v214;
  char *v215;
  char *v216;
  __int128 v217;
  uint64_t v218;
  char *v219;
  char *v220;
  __int128 v221;
  uint64_t v222;
  char *v223;
  char *v224;
  __int128 v225;
  uint64_t v226;
  char *v227;
  char *v228;
  __int128 v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  char *v234;
  char *v235;
  uint64_t v236;
  uint64_t v237;
  char *v238;
  char *v239;
  uint64_t v240;
  uint64_t v241;
  _QWORD *v242;
  char *v243;
  uint64_t v244;
  uint64_t v245;
  char *v247;
  char *v248;
  char *v249;
  void (*v250)(char *, char *, uint64_t);
  char *v251;
  char *v252;
  void (*v253)(char *, char *, uint64_t);
  char *v254;
  void (*v255)(char *, char *, uint64_t);
  char *v256;
  uint64_t v257;
  char *v258;
  void (*v259)(char *, char *, uint64_t);
  uint64_t v260;
  int *v261;
  int *v262;
  unsigned int (*v263)(char *, uint64_t, uint64_t);
  _QWORD *v264;
  _QWORD *v265;
  int *v266;
  int *v267;
  int *v268;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v6 = sub_1DC4010E4();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
      v7 = (int *)type metadata accessor for StockFeedMastheadModel();
      v8 = v7[5];
      v9 = (char *)a1 + v8;
      v10 = (char *)a2 + v8;
      v11 = sub_1DC401030();
      v12 = *(_QWORD *)(v11 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
      {
        sub_1DC092F50(0, &qword_1EDB28DC0, (void (*)(uint64_t))MEMORY[0x1E0DAF040]);
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      }
      v56 = v7[6];
      v57 = (char *)a1 + v56;
      v58 = (char *)a2 + v56;
      v59 = sub_1DC400F7C();
      v60 = *(_QWORD *)(v59 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v60 + 48))(v58, 1, v59))
      {
        sub_1DC092F50(0, (unint64_t *)&unk_1EDB28D90, (void (*)(uint64_t))MEMORY[0x1E0DAEFA8]);
        memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v57, v58, v59);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v60 + 56))(v57, 0, 1, v59);
      }
      v264 = a2;
      v267 = v7;
      v84 = v7[7];
      v85 = (_QWORD *)((char *)a1 + v84);
      v86 = (char *)a2 + v84;
      v87 = *(_QWORD *)((char *)a2 + v84 + 8);
      *v85 = *(_QWORD *)((char *)a2 + v84);
      v85[1] = v87;
      v261 = (int *)type metadata accessor for QuoteSummaryViewModel();
      v88 = v261[5];
      v89 = (char *)v85 + v88;
      v90 = &v86[v88];
      *(_QWORD *)v89 = *(_QWORD *)&v86[v88];
      v89[8] = v86[v88 + 8];
      *((_QWORD *)v89 + 2) = *(_QWORD *)&v86[v88 + 16];
      v89[24] = v86[v88 + 24];
      *((_QWORD *)v89 + 4) = *(_QWORD *)&v86[v88 + 32];
      v89[40] = v86[v88 + 40];
      v91 = *(_QWORD *)&v86[v88 + 56];
      *((_QWORD *)v89 + 6) = *(_QWORD *)&v86[v88 + 48];
      *((_QWORD *)v89 + 7) = v91;
      v92 = *(_QWORD *)&v86[v88 + 72];
      *((_QWORD *)v89 + 8) = *(_QWORD *)&v86[v88 + 64];
      *((_QWORD *)v89 + 9) = v92;
      v89[80] = v86[v88 + 80];
      v93 = type metadata accessor for PriceViewModel();
      v94 = *(int *)(v93 + 40);
      v252 = &v90[v94];
      v256 = &v89[v94];
      v95 = sub_1DC4011C8();
      v96 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v95 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v98 = v252;
      v97 = v256;
      v253 = v96;
      v257 = v95;
      v96(v97, v98, v95);
      v99 = *(int *)(v93 + 44);
      v100 = &v89[v99];
      v101 = v85;
      v102 = &v90[v99];
      v103 = sub_1DC400118();
      v250 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v103 - 8) + 16);
      v250(v100, v102, v103);
      v104 = v261[6];
      v105 = (_QWORD *)((char *)v85 + v104);
      v106 = &v86[v104];
      v107 = *(_QWORD *)(v93 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v107 + 48))(&v86[v104], 1, v93))
      {
        sub_1DC092F50(0, (unint64_t *)&qword_1EDB2D5E8, (void (*)(uint64_t))type metadata accessor for PriceViewModel);
        memcpy(v105, v106, *(_QWORD *)(*(_QWORD *)(v108 - 8) + 64));
      }
      else
      {
        *v105 = *(_QWORD *)v106;
        *((_BYTE *)v105 + 8) = v106[8];
        v105[2] = *((_QWORD *)v106 + 2);
        *((_BYTE *)v105 + 24) = v106[24];
        v105[4] = *((_QWORD *)v106 + 4);
        *((_BYTE *)v105 + 40) = v106[40];
        v172 = *((_QWORD *)v106 + 7);
        v105[6] = *((_QWORD *)v106 + 6);
        v105[7] = v172;
        v173 = *((_QWORD *)v106 + 9);
        v105[8] = *((_QWORD *)v106 + 8);
        v105[9] = v173;
        *((_BYTE *)v105 + 80) = v106[80];
        v174 = *(int *)(v93 + 40);
        v247 = &v106[v174];
        v248 = (char *)v105 + v174;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v253(v248, v247, v257);
        v250((char *)v105 + *(int *)(v93 + 44), &v106[*(int *)(v93 + 44)], v103);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v107 + 56))(v105, 0, 1, v93);
      }
      v175 = v261[7];
      v176 = (char *)v101 + v175;
      v177 = &v86[v175];
      v178 = sub_1DC4008EC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v178 - 8) + 16))(v176, v177, v178);
      v179 = v261[8];
      v180 = (char *)v101 + v179;
      v181 = &v86[v179];
      v182 = sub_1DC4002BC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v182 - 8) + 16))(v180, v181, v182);
      v183 = v261[9];
      v184 = (_QWORD *)((char *)v101 + v183);
      v185 = &v86[v183];
      v186 = *((_QWORD *)v185 + 1);
      *v184 = *(_QWORD *)v185;
      v184[1] = v186;
      *((_BYTE *)a1 + v267[8]) = *((_BYTE *)v264 + v267[8]);
      sub_1DC1426A0();
      v188 = *(int *)(v187 + 48);
      v189 = (char *)a1 + v188;
      v190 = (char *)v264 + v188;
      v191 = sub_1DC406040();
      v192 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v191 - 8) + 16);
      swift_bridgeObjectRetain();
      v192(v189, v190, v191);
      v193 = (int *)type metadata accessor for StockFeedMastheadViewLayoutAttributes();
      v194 = v193[5];
      v195 = &v189[v194];
      v196 = &v190[v194];
      v197 = *((_OWORD *)v196 + 1);
      *(_OWORD *)v195 = *(_OWORD *)v196;
      *((_OWORD *)v195 + 1) = v197;
      v198 = v193[6];
      v199 = &v189[v198];
      v200 = &v190[v198];
      v201 = *((_OWORD *)v200 + 1);
      *(_OWORD *)v199 = *(_OWORD *)v200;
      *((_OWORD *)v199 + 1) = v201;
      v202 = v193[7];
      v203 = &v189[v202];
      v204 = &v190[v202];
      v205 = *((_OWORD *)v204 + 1);
      *(_OWORD *)v203 = *(_OWORD *)v204;
      *((_OWORD *)v203 + 1) = v205;
      v206 = v193[8];
      v207 = &v189[v206];
      v208 = &v190[v206];
      v209 = *((_OWORD *)v208 + 1);
      *(_OWORD *)v207 = *(_OWORD *)v208;
      *((_OWORD *)v207 + 1) = v209;
      v210 = v193[9];
      v211 = &v189[v210];
      v212 = &v190[v210];
      v213 = *((_OWORD *)v212 + 1);
      *(_OWORD *)v211 = *(_OWORD *)v212;
      *((_OWORD *)v211 + 1) = v213;
      v214 = v193[10];
      v215 = &v189[v214];
      v216 = &v190[v214];
      v217 = *((_OWORD *)v216 + 1);
      *(_OWORD *)v215 = *(_OWORD *)v216;
      *((_OWORD *)v215 + 1) = v217;
      v218 = v193[11];
      v219 = &v189[v218];
      v220 = &v190[v218];
      v221 = *((_OWORD *)v220 + 1);
      *(_OWORD *)v219 = *(_OWORD *)v220;
      *((_OWORD *)v219 + 1) = v221;
      memcpy(&v189[v193[12]], &v190[v193[12]], 0x111uLL);
      v222 = v193[13];
      v223 = &v189[v222];
      v224 = &v190[v222];
      v225 = *((_OWORD *)v224 + 1);
      *(_OWORD *)v223 = *(_OWORD *)v224;
      *((_OWORD *)v223 + 1) = v225;
      v226 = v193[14];
      v227 = &v189[v226];
      v228 = &v190[v226];
      v229 = *((_OWORD *)v228 + 1);
      *(_OWORD *)v227 = *(_OWORD *)v228;
      *((_OWORD *)v227 + 1) = v229;
      v189[v193[15]] = v190[v193[15]];
      *(_QWORD *)&v189[v193[16]] = *(_QWORD *)&v190[v193[16]];
      goto LABEL_40;
    case 1u:
      v14 = sub_1DC4010E4();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(a1, a2, v14);
      v15 = (int *)type metadata accessor for StockFeedMastheadModel();
      v16 = v15[5];
      v17 = (char *)a1 + v16;
      v18 = (char *)a2 + v16;
      v19 = sub_1DC401030();
      v20 = *(_QWORD *)(v19 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
      {
        sub_1DC092F50(0, &qword_1EDB28DC0, (void (*)(uint64_t))MEMORY[0x1E0DAF040]);
        memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v17, v18, v19);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
      }
      v62 = v15[6];
      v63 = (char *)a1 + v62;
      v64 = (char *)a2 + v62;
      v65 = sub_1DC400F7C();
      v66 = *(_QWORD *)(v65 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v66 + 48))(v64, 1, v65))
      {
        sub_1DC092F50(0, (unint64_t *)&unk_1EDB28D90, (void (*)(uint64_t))MEMORY[0x1E0DAEFA8]);
        memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v66 + 16))(v63, v64, v65);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v66 + 56))(v63, 0, 1, v65);
      }
      v265 = a1;
      v268 = v15;
      v109 = v15[7];
      v110 = (_QWORD *)((char *)a1 + v109);
      v111 = (char *)a2 + v109;
      v112 = *(_QWORD *)((char *)a2 + v109 + 8);
      *v110 = *(_QWORD *)((char *)a2 + v109);
      v110[1] = v112;
      v262 = (int *)type metadata accessor for QuoteSummaryViewModel();
      v113 = v262[5];
      v114 = (char *)v110 + v113;
      v115 = &v111[v113];
      *(_QWORD *)v114 = *(_QWORD *)&v111[v113];
      v114[8] = v111[v113 + 8];
      *((_QWORD *)v114 + 2) = *(_QWORD *)&v111[v113 + 16];
      v114[24] = v111[v113 + 24];
      *((_QWORD *)v114 + 4) = *(_QWORD *)&v111[v113 + 32];
      v114[40] = v111[v113 + 40];
      v116 = *(_QWORD *)&v111[v113 + 56];
      *((_QWORD *)v114 + 6) = *(_QWORD *)&v111[v113 + 48];
      *((_QWORD *)v114 + 7) = v116;
      v117 = *(_QWORD *)&v111[v113 + 72];
      *((_QWORD *)v114 + 8) = *(_QWORD *)&v111[v113 + 64];
      *((_QWORD *)v114 + 9) = v117;
      v114[80] = v111[v113 + 80];
      v118 = type metadata accessor for PriceViewModel();
      v119 = *(int *)(v118 + 40);
      v254 = &v115[v119];
      v258 = &v114[v119];
      v120 = sub_1DC4011C8();
      v121 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v120 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v122 = v258;
      v259 = v121;
      v260 = v120;
      v121(v122, v254, v120);
      v123 = *(int *)(v118 + 44);
      v124 = &v114[v123];
      v125 = &v115[v123];
      v126 = v118;
      v127 = sub_1DC400118();
      v255 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v127 - 8) + 16);
      v255(v124, v125, v127);
      v128 = v262[6];
      v129 = (_QWORD *)((char *)v110 + v128);
      v130 = &v111[v128];
      v131 = *(_QWORD *)(v126 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v131 + 48))(&v111[v128], 1, v126))
      {
        sub_1DC092F50(0, (unint64_t *)&qword_1EDB2D5E8, (void (*)(uint64_t))type metadata accessor for PriceViewModel);
        memcpy(v129, v130, *(_QWORD *)(*(_QWORD *)(v132 - 8) + 64));
      }
      else
      {
        *v129 = *(_QWORD *)v130;
        *((_BYTE *)v129 + 8) = v130[8];
        v129[2] = *((_QWORD *)v130 + 2);
        *((_BYTE *)v129 + 24) = v130[24];
        v129[4] = *((_QWORD *)v130 + 4);
        *((_BYTE *)v129 + 40) = v130[40];
        v230 = *((_QWORD *)v130 + 7);
        v129[6] = *((_QWORD *)v130 + 6);
        v129[7] = v230;
        v231 = *((_QWORD *)v130 + 9);
        v129[8] = *((_QWORD *)v130 + 8);
        v129[9] = v231;
        *((_BYTE *)v129 + 80) = v130[80];
        v232 = *(int *)(v126 + 40);
        v249 = &v130[v232];
        v251 = (char *)v129 + v232;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v259(v251, v249, v260);
        v255((char *)v129 + *(int *)(v126 + 44), &v130[*(int *)(v126 + 44)], v127);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v131 + 56))(v129, 0, 1, v126);
      }
      v233 = v262[7];
      v234 = (char *)v110 + v233;
      v235 = &v111[v233];
      v236 = sub_1DC4008EC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v236 - 8) + 16))(v234, v235, v236);
      v237 = v262[8];
      v238 = (char *)v110 + v237;
      v239 = &v111[v237];
      v240 = sub_1DC4002BC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v240 - 8) + 16))(v238, v239, v240);
      v241 = v262[9];
      v242 = (_QWORD *)((char *)v110 + v241);
      v243 = &v111[v241];
      v244 = *((_QWORD *)v243 + 1);
      *v242 = *(_QWORD *)v243;
      v242[1] = v244;
      a1 = v265;
      *((_BYTE *)v265 + v268[8]) = *((_BYTE *)a2 + v268[8]);
      sub_1DC1AA6E8(0, &qword_1EDB33E50, (void (*)(uint64_t))type metadata accessor for StockFeedMastheadModel);
      memcpy((char *)v265 + *(int *)(v245 + 48), (char *)a2 + *(int *)(v245 + 48), 0x178uLL);
      swift_bridgeObjectRetain();
      goto LABEL_40;
    case 2u:
      v22 = sub_1DC4010E4();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(a1, a2, v22);
      sub_1DC1AA6E8(0, &qword_1EDB2E2B8, (void (*)(uint64_t))type metadata accessor for StockChartModel);
      v24 = *(int *)(v23 + 48);
      v25 = (char *)a1 + v24;
      v26 = (char *)a2 + v24;
      v27 = *((_OWORD *)v26 + 1);
      *(_OWORD *)v25 = *(_OWORD *)v26;
      *((_OWORD *)v25 + 1) = v27;
      v28 = *((_OWORD *)v26 + 3);
      *((_OWORD *)v25 + 2) = *((_OWORD *)v26 + 2);
      *((_OWORD *)v25 + 3) = v28;
      v29 = *((_OWORD *)v26 + 5);
      *((_OWORD *)v25 + 4) = *((_OWORD *)v26 + 4);
      *((_OWORD *)v25 + 5) = v29;
      v30 = *((_OWORD *)v26 + 7);
      *((_OWORD *)v25 + 6) = *((_OWORD *)v26 + 6);
      *((_OWORD *)v25 + 7) = v30;
      v31 = *((_OWORD *)v26 + 9);
      *((_OWORD *)v25 + 8) = *((_OWORD *)v26 + 8);
      *((_OWORD *)v25 + 9) = v31;
      *((_QWORD *)v25 + 20) = *((_QWORD *)v26 + 20);
      *(_OWORD *)(v25 + 184) = *(_OWORD *)(v26 + 184);
      *(_OWORD *)(v25 + 168) = *(_OWORD *)(v26 + 168);
      swift_bridgeObjectRetain();
      goto LABEL_40;
    case 3u:
      v32 = sub_1DC401030();
      v33 = *(_QWORD *)(v32 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v33 + 48))(a2, 1, v32))
      {
        sub_1DC092F50(0, &qword_1EDB28DC0, (void (*)(uint64_t))MEMORY[0x1E0DAF040]);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v33 + 16))(a1, a2, v32);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v33 + 56))(a1, 0, 1, v32);
      }
      v68 = (int *)type metadata accessor for QuoteDetailViewModel();
      v69 = v68[5];
      v70 = (char *)a1 + v69;
      v71 = (char *)a2 + v69;
      v72 = sub_1DC400370();
      v73 = *(_QWORD *)(v72 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v73 + 48))(v71, 1, v72))
      {
        sub_1DC092F50(0, &qword_1EDB28BA0, (void (*)(uint64_t))MEMORY[0x1E0DAE188]);
        memcpy(v70, v71, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v73 + 16))(v70, v71, v72);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v73 + 56))(v70, 0, 1, v72);
      }
      v133 = v68[6];
      v134 = (_QWORD *)((char *)a1 + v133);
      v135 = (_QWORD *)((char *)a2 + v133);
      v136 = v135[1];
      *v134 = *v135;
      v134[1] = v136;
      v137 = (void *)v135[2];
      v134[2] = v137;
      *(_QWORD *)((char *)a1 + v68[7]) = *(_QWORD *)((char *)a2 + v68[7]);
      *(_QWORD *)((char *)a1 + v68[8]) = *(_QWORD *)((char *)a2 + v68[8]);
      v138 = v68[9];
      v139 = *(void **)((char *)a2 + v138);
      *(_QWORD *)((char *)a1 + v138) = v139;
      v140 = v68[10];
      v141 = *(void **)((char *)a2 + v140);
      *(_QWORD *)((char *)a1 + v140) = v141;
      sub_1DC1AA6E8(0, &qword_1EDB31B10, (void (*)(uint64_t))type metadata accessor for QuoteDetailViewModel);
      v143 = *(int *)(v142 + 48);
      v144 = (char *)a1 + v143;
      v145 = (char *)a2 + v143;
      v146 = *((_OWORD *)v145 + 1);
      *(_OWORD *)v144 = *(_OWORD *)v145;
      *((_OWORD *)v144 + 1) = v146;
      v147 = *((_OWORD *)v145 + 3);
      *((_OWORD *)v144 + 2) = *((_OWORD *)v145 + 2);
      *((_OWORD *)v144 + 3) = v147;
      v144[64] = v145[64];
      v148 = *((_QWORD *)v145 + 10);
      *((_QWORD *)v144 + 9) = *((_QWORD *)v145 + 9);
      *((_QWORD *)v144 + 10) = v148;
      *((_QWORD *)v144 + 11) = *((_QWORD *)v145 + 11);
      v149 = *((_OWORD *)v145 + 11);
      *((_OWORD *)v144 + 10) = *((_OWORD *)v145 + 10);
      *((_OWORD *)v144 + 11) = v149;
      v144[192] = v145[192];
      v150 = *((_OWORD *)v145 + 7);
      *((_OWORD *)v144 + 6) = *((_OWORD *)v145 + 6);
      *((_OWORD *)v144 + 7) = v150;
      v151 = *((_OWORD *)v145 + 9);
      *((_OWORD *)v144 + 8) = *((_OWORD *)v145 + 8);
      *((_OWORD *)v144 + 9) = v151;
      *(_OWORD *)(v144 + 200) = *(_OWORD *)(v145 + 200);
      v152 = *(_OWORD *)(v145 + 216);
      *(_OWORD *)(v144 + 232) = *(_OWORD *)(v145 + 232);
      *(_OWORD *)(v144 + 216) = v152;
      *(_OWORD *)(v144 + 248) = *(_OWORD *)(v145 + 248);
      v144[264] = v145[264];
      swift_bridgeObjectRetain();
      v153 = v137;
      swift_retain();
      swift_retain();
      v154 = v139;
      v155 = v141;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_40;
    case 4u:
      v35 = sub_1DC4010E4();
      v36 = *(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v35 - 8) + 16);
      v36(a1, a2, v35);
      v266 = (int *)type metadata accessor for StockFeedEarningsViewModel();
      v37 = v266[5];
      v38 = (char *)a1 + v37;
      v39 = (char *)a2 + v37;
      v36((_QWORD *)((char *)a1 + v37), (_QWORD *)((char *)a2 + v37), v35);
      v40 = (int *)type metadata accessor for StockEarningsModel();
      v41 = v40[5];
      v42 = &v38[v41];
      v43 = &v39[v41];
      v44 = sub_1DC3FFFEC();
      v45 = *(_QWORD *)(v44 - 8);
      v46 = v42;
      v47 = *(void (**)(char *, char *, uint64_t))(v45 + 16);
      v47(v46, v43, v44);
      v48 = v40[6];
      v49 = &v38[v48];
      v50 = &v39[v48];
      v263 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48);
      if (v263(&v39[v48], 1, v44))
      {
        sub_1DC092F50(0, &qword_1EDB28AC0, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
        memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
      }
      else
      {
        v47(v49, v50, v44);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v45 + 56))(v49, 0, 1, v44);
      }
      v75 = v47;
      v76 = v40[7];
      v77 = &v38[v76];
      v78 = &v39[v76];
      v79 = sub_1DC400220();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v79 - 8) + 16))(v77, v78, v79);
      v38[v40[8]] = v39[v40[8]];
      v38[v40[9]] = v39[v40[9]];
      v75((char *)a1 + v266[6], (char *)a2 + v266[6], v44);
      v80 = v266[7];
      v81 = (char *)a1 + v80;
      v82 = (char *)a2 + v80;
      if (v263((char *)a2 + v80, 1, v44))
      {
        sub_1DC092F50(0, &qword_1EDB28AC0, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
        memcpy(v81, v82, *(_QWORD *)(*(_QWORD *)(v83 - 8) + 64));
      }
      else
      {
        v75(v81, v82, v44);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v45 + 56))(v81, 0, 1, v44);
      }
      v156 = v266[8];
      v157 = (_QWORD *)((char *)a1 + v156);
      v158 = (_QWORD *)((char *)a2 + v156);
      v159 = v158[1];
      *v157 = *v158;
      v157[1] = v159;
      *((_BYTE *)a1 + v266[9]) = *((_BYTE *)a2 + v266[9]);
      v160 = v266[10];
      v161 = (_QWORD *)((char *)a1 + v160);
      v162 = (_QWORD *)((char *)a2 + v160);
      v163 = v162[1];
      *v161 = *v162;
      v161[1] = v163;
      *((_BYTE *)a1 + v266[11]) = *((_BYTE *)a2 + v266[11]);
      *(_QWORD *)((char *)a1 + v266[12]) = *(_QWORD *)((char *)a2 + v266[12]);
      sub_1DC1AA6E8(0, &qword_1EDB36D58, (void (*)(uint64_t))type metadata accessor for StockFeedEarningsViewModel);
      v165 = *(int *)(v164 + 48);
      v166 = (_OWORD *)((char *)a1 + v165);
      v167 = (_OWORD *)((char *)a2 + v165);
      v168 = v167[5];
      v166[4] = v167[4];
      v166[5] = v168;
      v169 = v167[7];
      v166[6] = v167[6];
      v166[7] = v169;
      v170 = v167[1];
      *v166 = *v167;
      v166[1] = v170;
      v171 = v167[3];
      v166[2] = v167[2];
      v166[3] = v171;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_40;
    case 5u:
      v52 = a2[1];
      *a1 = *a2;
      a1[1] = v52;
      v53 = *((_OWORD *)a2 + 2);
      *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
      *((_OWORD *)a1 + 2) = v53;
      v54 = *((_OWORD *)a2 + 4);
      *((_OWORD *)a1 + 3) = *((_OWORD *)a2 + 3);
      *((_OWORD *)a1 + 4) = v54;
      swift_bridgeObjectRetain();
      goto LABEL_40;
    case 7u:
      v55 = sub_1DC407B04();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v55 - 8) + 16))(a1, a2, v55);
LABEL_40:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

_QWORD *sub_1DC1ABE2C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(_QWORD *, _QWORD *, uint64_t);
  uint64_t v37;
  char *v38;
  char *v39;
  int *v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  void (*v47)(char *, char *, uint64_t);
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  int *v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void (*v75)(char *, char *, uint64_t);
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  char *v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  void (*v93)(char *, char *, uint64_t);
  char *v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  _QWORD *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  _QWORD *v105;
  char *v106;
  char *v107;
  uint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  void (*v114)(char *, char *, uint64_t);
  char *v115;
  char *v116;
  uint64_t v117;
  char *v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  _QWORD *v127;
  _QWORD *v128;
  void *v129;
  uint64_t v130;
  void *v131;
  uint64_t v132;
  void *v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  char *v137;
  __int128 v138;
  __int128 v139;
  __int128 v140;
  __int128 v141;
  __int128 v142;
  __int128 v143;
  __int128 v144;
  __int128 v145;
  id v146;
  id v147;
  id v148;
  uint64_t v149;
  _QWORD *v150;
  _QWORD *v151;
  uint64_t v152;
  _QWORD *v153;
  _QWORD *v154;
  uint64_t v155;
  uint64_t v156;
  _OWORD *v157;
  _OWORD *v158;
  __int128 v159;
  __int128 v160;
  __int128 v161;
  __int128 v162;
  __int128 v163;
  __int128 v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  char *v170;
  char *v171;
  uint64_t v172;
  uint64_t v173;
  char *v174;
  char *v175;
  uint64_t v176;
  uint64_t v177;
  _QWORD *v178;
  char *v179;
  uint64_t v180;
  uint64_t v181;
  char *v182;
  char *v183;
  uint64_t v184;
  void (*v185)(char *, char *, uint64_t);
  int *v186;
  uint64_t v187;
  char *v188;
  char *v189;
  __int128 v190;
  uint64_t v191;
  char *v192;
  char *v193;
  __int128 v194;
  uint64_t v195;
  char *v196;
  char *v197;
  __int128 v198;
  uint64_t v199;
  char *v200;
  char *v201;
  __int128 v202;
  uint64_t v203;
  char *v204;
  char *v205;
  __int128 v206;
  uint64_t v207;
  char *v208;
  char *v209;
  __int128 v210;
  uint64_t v211;
  char *v212;
  char *v213;
  __int128 v214;
  uint64_t v215;
  char *v216;
  char *v217;
  __int128 v218;
  uint64_t v219;
  char *v220;
  char *v221;
  __int128 v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  char *v228;
  char *v229;
  uint64_t v230;
  uint64_t v231;
  char *v232;
  char *v233;
  uint64_t v234;
  uint64_t v235;
  char *v236;
  char *v237;
  uint64_t v238;
  char *v240;
  char *v241;
  char *v242;
  void (*v243)(char *, char *, uint64_t);
  char *v244;
  void (*v245)(char *, char *, uint64_t);
  void (*v246)(char *, char *, uint64_t);
  char *v247;
  uint64_t v248;
  char *v249;
  void (*v250)(char *, char *, uint64_t);
  char *v251;
  char *v252;
  uint64_t v253;
  char *v254;
  int *v255;
  int *v256;
  unsigned int (*v257)(char *, uint64_t, uint64_t);
  _QWORD *v258;
  int *v259;
  int *v260;
  int *v261;
  char *v262;

  if (a1 != a2)
  {
    sub_1DC0926D8((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedLayoutModel);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v6 = sub_1DC4010E4();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
        v7 = (int *)type metadata accessor for StockFeedMastheadModel();
        v8 = v7[5];
        v9 = (char *)a1 + v8;
        v10 = (char *)a2 + v8;
        v11 = sub_1DC401030();
        v12 = *(_QWORD *)(v11 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
        {
          sub_1DC092F50(0, &qword_1EDB28DC0, (void (*)(uint64_t))MEMORY[0x1E0DAF040]);
          memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
        }
        v56 = v7[6];
        v57 = (char *)a1 + v56;
        v58 = (char *)a2 + v56;
        v59 = sub_1DC400F7C();
        v60 = *(_QWORD *)(v59 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v60 + 48))(v58, 1, v59))
        {
          sub_1DC092F50(0, (unint64_t *)&unk_1EDB28D90, (void (*)(uint64_t))MEMORY[0x1E0DAEFA8]);
          memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v57, v58, v59);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v60 + 56))(v57, 0, 1, v59);
        }
        v84 = v7[7];
        v85 = (_QWORD *)((char *)a1 + v84);
        *v85 = *(_QWORD *)((char *)a2 + v84);
        v261 = v7;
        v86 = (char *)a2 + v84;
        v254 = (char *)a2 + v84;
        v85[1] = *(_QWORD *)((char *)a2 + v84 + 8);
        v255 = (int *)type metadata accessor for QuoteSummaryViewModel();
        v87 = v255[5];
        v88 = (char *)v85 + v87;
        v89 = &v86[v87];
        LOBYTE(v87) = v86[v87 + 8];
        *(_QWORD *)v88 = *(_QWORD *)v89;
        v88[8] = v87;
        LOBYTE(v87) = v89[24];
        *((_QWORD *)v88 + 2) = *((_QWORD *)v89 + 2);
        v88[24] = v87;
        LOBYTE(v87) = v89[40];
        *((_QWORD *)v88 + 4) = *((_QWORD *)v89 + 4);
        v88[40] = v87;
        *((_QWORD *)v88 + 6) = *((_QWORD *)v89 + 6);
        *((_QWORD *)v88 + 7) = *((_QWORD *)v89 + 7);
        *((_QWORD *)v88 + 8) = *((_QWORD *)v89 + 8);
        *((_QWORD *)v88 + 9) = *((_QWORD *)v89 + 9);
        v88[80] = v89[80];
        v90 = type metadata accessor for PriceViewModel();
        v91 = *(int *)(v90 + 40);
        v247 = &v89[v91];
        v251 = &v88[v91];
        v92 = sub_1DC4011C8();
        v93 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v92 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v94 = v247;
        v245 = v93;
        v248 = v92;
        v93(v251, v94, v92);
        v95 = *(int *)(v90 + 44);
        v96 = &v88[v95];
        v97 = &v89[v95];
        v98 = sub_1DC400118();
        v243 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v98 - 8) + 16);
        v243(v96, v97, v98);
        v99 = v255[6];
        v258 = v85;
        v100 = (_QWORD *)((char *)v85 + v99);
        v101 = &v254[v99];
        v102 = *(_QWORD *)(v90 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v102 + 48))(&v254[v99], 1, v90))
        {
          sub_1DC092F50(0, (unint64_t *)&qword_1EDB2D5E8, (void (*)(uint64_t))type metadata accessor for PriceViewModel);
          memcpy(v100, v101, *(_QWORD *)(*(_QWORD *)(v103 - 8) + 64));
        }
        else
        {
          v165 = *(_QWORD *)v101;
          *((_BYTE *)v100 + 8) = v101[8];
          *v100 = v165;
          v166 = *((_QWORD *)v101 + 2);
          *((_BYTE *)v100 + 24) = v101[24];
          v100[2] = v166;
          v167 = *((_QWORD *)v101 + 4);
          *((_BYTE *)v100 + 40) = v101[40];
          v100[4] = v167;
          v100[6] = *((_QWORD *)v101 + 6);
          v100[7] = *((_QWORD *)v101 + 7);
          v100[8] = *((_QWORD *)v101 + 8);
          v100[9] = *((_QWORD *)v101 + 9);
          *((_BYTE *)v100 + 80) = v101[80];
          v168 = *(int *)(v90 + 40);
          v240 = &v101[v168];
          v241 = (char *)v100 + v168;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v245(v241, v240, v248);
          v243((char *)v100 + *(int *)(v90 + 44), &v101[*(int *)(v90 + 44)], v98);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v102 + 56))(v100, 0, 1, v90);
        }
        v169 = v255[7];
        v170 = (char *)v258 + v169;
        v171 = &v254[v169];
        v172 = sub_1DC4008EC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v172 - 8) + 16))(v170, v171, v172);
        v173 = v255[8];
        v174 = (char *)v258 + v173;
        v175 = &v254[v173];
        v176 = sub_1DC4002BC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v176 - 8) + 16))(v174, v175, v176);
        v177 = v255[9];
        v178 = (_QWORD *)((char *)v258 + v177);
        v179 = &v254[v177];
        *v178 = *(_QWORD *)v179;
        v178[1] = *((_QWORD *)v179 + 1);
        *((_BYTE *)a1 + v261[8]) = *((_BYTE *)a2 + v261[8]);
        sub_1DC1426A0();
        v181 = *(int *)(v180 + 48);
        v182 = (char *)a1 + v181;
        v183 = (char *)a2 + v181;
        v184 = sub_1DC406040();
        v185 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v184 - 8) + 16);
        swift_bridgeObjectRetain();
        v185(v182, v183, v184);
        v186 = (int *)type metadata accessor for StockFeedMastheadViewLayoutAttributes();
        v187 = v186[5];
        v188 = &v182[v187];
        v189 = &v183[v187];
        v190 = *((_OWORD *)v189 + 1);
        *(_OWORD *)v188 = *(_OWORD *)v189;
        *((_OWORD *)v188 + 1) = v190;
        v191 = v186[6];
        v192 = &v182[v191];
        v193 = &v183[v191];
        v194 = *((_OWORD *)v193 + 1);
        *(_OWORD *)v192 = *(_OWORD *)v193;
        *((_OWORD *)v192 + 1) = v194;
        v195 = v186[7];
        v196 = &v182[v195];
        v197 = &v183[v195];
        v198 = *((_OWORD *)v197 + 1);
        *(_OWORD *)v196 = *(_OWORD *)v197;
        *((_OWORD *)v196 + 1) = v198;
        v199 = v186[8];
        v200 = &v182[v199];
        v201 = &v183[v199];
        v202 = *((_OWORD *)v201 + 1);
        *(_OWORD *)v200 = *(_OWORD *)v201;
        *((_OWORD *)v200 + 1) = v202;
        v203 = v186[9];
        v204 = &v182[v203];
        v205 = &v183[v203];
        v206 = *((_OWORD *)v205 + 1);
        *(_OWORD *)v204 = *(_OWORD *)v205;
        *((_OWORD *)v204 + 1) = v206;
        v207 = v186[10];
        v208 = &v182[v207];
        v209 = &v183[v207];
        v210 = *((_OWORD *)v209 + 1);
        *(_OWORD *)v208 = *(_OWORD *)v209;
        *((_OWORD *)v208 + 1) = v210;
        v211 = v186[11];
        v212 = &v182[v211];
        v213 = &v183[v211];
        v214 = *((_OWORD *)v213 + 1);
        *(_OWORD *)v212 = *(_OWORD *)v213;
        *((_OWORD *)v212 + 1) = v214;
        memcpy(&v182[v186[12]], &v183[v186[12]], 0x111uLL);
        v215 = v186[13];
        v216 = &v182[v215];
        v217 = &v183[v215];
        v218 = *((_OWORD *)v217 + 1);
        *(_OWORD *)v216 = *(_OWORD *)v217;
        *((_OWORD *)v216 + 1) = v218;
        v219 = v186[14];
        v220 = &v182[v219];
        v221 = &v183[v219];
        v222 = *((_OWORD *)v221 + 1);
        *(_OWORD *)v220 = *(_OWORD *)v221;
        *((_OWORD *)v220 + 1) = v222;
        v182[v186[15]] = v183[v186[15]];
        *(_QWORD *)&v182[v186[16]] = *(_QWORD *)&v183[v186[16]];
        goto LABEL_41;
      case 1u:
        v14 = sub_1DC4010E4();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(a1, a2, v14);
        v15 = (int *)type metadata accessor for StockFeedMastheadModel();
        v16 = v15[5];
        v17 = (char *)a1 + v16;
        v18 = (char *)a2 + v16;
        v19 = sub_1DC401030();
        v20 = *(_QWORD *)(v19 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
        {
          sub_1DC092F50(0, &qword_1EDB28DC0, (void (*)(uint64_t))MEMORY[0x1E0DAF040]);
          memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v17, v18, v19);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
        }
        v62 = v15[6];
        v63 = (char *)a1 + v62;
        v64 = (char *)a2 + v62;
        v65 = sub_1DC400F7C();
        v66 = *(_QWORD *)(v65 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v66 + 48))(v64, 1, v65))
        {
          sub_1DC092F50(0, (unint64_t *)&unk_1EDB28D90, (void (*)(uint64_t))MEMORY[0x1E0DAEFA8]);
          memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v66 + 16))(v63, v64, v65);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v66 + 56))(v63, 0, 1, v65);
        }
        v104 = v15[7];
        v105 = (_QWORD *)((char *)a1 + v104);
        v106 = (char *)a2 + v104;
        *v105 = *(_QWORD *)((char *)a2 + v104);
        v105[1] = *(_QWORD *)((char *)a2 + v104 + 8);
        v107 = (char *)a1 + v104;
        v259 = v15;
        v262 = (char *)a1 + v104;
        v256 = (int *)type metadata accessor for QuoteSummaryViewModel();
        v108 = v256[5];
        v109 = &v107[v108];
        v110 = &v106[v108];
        LOBYTE(v108) = v106[v108 + 8];
        *(_QWORD *)v109 = *(_QWORD *)v110;
        v109[8] = v108;
        LOBYTE(v108) = v110[24];
        *((_QWORD *)v109 + 2) = *((_QWORD *)v110 + 2);
        v109[24] = v108;
        LOBYTE(v108) = v110[40];
        *((_QWORD *)v109 + 4) = *((_QWORD *)v110 + 4);
        v109[40] = v108;
        *((_QWORD *)v109 + 6) = *((_QWORD *)v110 + 6);
        *((_QWORD *)v109 + 7) = *((_QWORD *)v110 + 7);
        *((_QWORD *)v109 + 8) = *((_QWORD *)v110 + 8);
        *((_QWORD *)v109 + 9) = *((_QWORD *)v110 + 9);
        v109[80] = v110[80];
        v111 = type metadata accessor for PriceViewModel();
        v112 = *(int *)(v111 + 40);
        v249 = &v110[v112];
        v252 = &v109[v112];
        v113 = sub_1DC4011C8();
        v114 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v113 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v116 = v249;
        v115 = v252;
        v250 = v114;
        v253 = v113;
        v114(v115, v116, v113);
        v117 = *(int *)(v111 + 44);
        v118 = &v109[v117];
        v119 = &v110[v117];
        v120 = sub_1DC400118();
        v246 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v120 - 8) + 16);
        v246(v118, v119, v120);
        v121 = v256[6];
        v122 = &v262[v121];
        v123 = &v106[v121];
        v124 = *(_QWORD *)(v111 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v124 + 48))(&v106[v121], 1, v111))
        {
          sub_1DC092F50(0, (unint64_t *)&qword_1EDB2D5E8, (void (*)(uint64_t))type metadata accessor for PriceViewModel);
          memcpy(v122, v123, *(_QWORD *)(*(_QWORD *)(v125 - 8) + 64));
        }
        else
        {
          v223 = *(_QWORD *)v123;
          v122[8] = v123[8];
          *(_QWORD *)v122 = v223;
          v224 = *((_QWORD *)v123 + 2);
          v122[24] = v123[24];
          *((_QWORD *)v122 + 2) = v224;
          v225 = *((_QWORD *)v123 + 4);
          v122[40] = v123[40];
          *((_QWORD *)v122 + 4) = v225;
          *((_QWORD *)v122 + 6) = *((_QWORD *)v123 + 6);
          *((_QWORD *)v122 + 7) = *((_QWORD *)v123 + 7);
          *((_QWORD *)v122 + 8) = *((_QWORD *)v123 + 8);
          *((_QWORD *)v122 + 9) = *((_QWORD *)v123 + 9);
          v122[80] = v123[80];
          v226 = *(int *)(v111 + 40);
          v242 = &v123[v226];
          v244 = &v122[v226];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v250(v244, v242, v253);
          v246(&v122[*(int *)(v111 + 44)], &v123[*(int *)(v111 + 44)], v120);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v124 + 56))(v122, 0, 1, v111);
        }
        v227 = v256[7];
        v228 = &v262[v227];
        v229 = &v106[v227];
        v230 = sub_1DC4008EC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v230 - 8) + 16))(v228, v229, v230);
        v231 = v256[8];
        v232 = &v262[v231];
        v233 = &v106[v231];
        v234 = sub_1DC4002BC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v234 - 8) + 16))(v232, v233, v234);
        v235 = v256[9];
        v236 = &v262[v235];
        v237 = &v106[v235];
        *(_QWORD *)v236 = *(_QWORD *)v237;
        *((_QWORD *)v236 + 1) = *((_QWORD *)v237 + 1);
        *((_BYTE *)a1 + v259[8]) = *((_BYTE *)a2 + v259[8]);
        sub_1DC1AA6E8(0, &qword_1EDB33E50, (void (*)(uint64_t))type metadata accessor for StockFeedMastheadModel);
        memcpy((char *)a1 + *(int *)(v238 + 48), (char *)a2 + *(int *)(v238 + 48), 0x178uLL);
        swift_bridgeObjectRetain();
        goto LABEL_41;
      case 2u:
        v22 = sub_1DC4010E4();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(a1, a2, v22);
        sub_1DC1AA6E8(0, &qword_1EDB2E2B8, (void (*)(uint64_t))type metadata accessor for StockChartModel);
        v24 = *(int *)(v23 + 48);
        v25 = (char *)a1 + v24;
        v26 = (char *)a2 + v24;
        v27 = *((_OWORD *)v26 + 1);
        *(_OWORD *)v25 = *(_OWORD *)v26;
        *((_OWORD *)v25 + 1) = v27;
        v28 = *((_OWORD *)v26 + 3);
        *((_OWORD *)v25 + 2) = *((_OWORD *)v26 + 2);
        *((_OWORD *)v25 + 3) = v28;
        v29 = *((_OWORD *)v26 + 5);
        *((_OWORD *)v25 + 4) = *((_OWORD *)v26 + 4);
        *((_OWORD *)v25 + 5) = v29;
        v30 = *((_OWORD *)v26 + 7);
        *((_OWORD *)v25 + 6) = *((_OWORD *)v26 + 6);
        *((_OWORD *)v25 + 7) = v30;
        *((_OWORD *)v25 + 8) = *((_OWORD *)v26 + 8);
        *((_OWORD *)v25 + 9) = *((_OWORD *)v26 + 9);
        *((_QWORD *)v25 + 20) = *((_QWORD *)v26 + 20);
        v31 = *(_OWORD *)(v26 + 168);
        *(_OWORD *)(v25 + 184) = *(_OWORD *)(v26 + 184);
        *(_OWORD *)(v25 + 168) = v31;
        swift_bridgeObjectRetain();
        goto LABEL_41;
      case 3u:
        v32 = sub_1DC401030();
        v33 = *(_QWORD *)(v32 - 8);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v33 + 48))(a2, 1, v32))
        {
          sub_1DC092F50(0, &qword_1EDB28DC0, (void (*)(uint64_t))MEMORY[0x1E0DAF040]);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
        }
        else
        {
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v33 + 16))(a1, a2, v32);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v33 + 56))(a1, 0, 1, v32);
        }
        v68 = (int *)type metadata accessor for QuoteDetailViewModel();
        v69 = v68[5];
        v70 = (char *)a1 + v69;
        v71 = (char *)a2 + v69;
        v72 = sub_1DC400370();
        v73 = *(_QWORD *)(v72 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v73 + 48))(v71, 1, v72))
        {
          sub_1DC092F50(0, &qword_1EDB28BA0, (void (*)(uint64_t))MEMORY[0x1E0DAE188]);
          memcpy(v70, v71, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v73 + 16))(v70, v71, v72);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v73 + 56))(v70, 0, 1, v72);
        }
        v126 = v68[6];
        v127 = (_QWORD *)((char *)a1 + v126);
        v128 = (_QWORD *)((char *)a2 + v126);
        *v127 = *v128;
        v127[1] = v128[1];
        v129 = (void *)v128[2];
        v127[2] = v129;
        *(_QWORD *)((char *)a1 + v68[7]) = *(_QWORD *)((char *)a2 + v68[7]);
        *(_QWORD *)((char *)a1 + v68[8]) = *(_QWORD *)((char *)a2 + v68[8]);
        v130 = v68[9];
        v131 = *(void **)((char *)a2 + v130);
        *(_QWORD *)((char *)a1 + v130) = v131;
        v132 = v68[10];
        v133 = *(void **)((char *)a2 + v132);
        *(_QWORD *)((char *)a1 + v132) = v133;
        sub_1DC1AA6E8(0, &qword_1EDB31B10, (void (*)(uint64_t))type metadata accessor for QuoteDetailViewModel);
        v135 = *(int *)(v134 + 48);
        v136 = (char *)a1 + v135;
        v137 = (char *)a2 + v135;
        v138 = *((_OWORD *)v137 + 1);
        *(_OWORD *)v136 = *(_OWORD *)v137;
        *((_OWORD *)v136 + 1) = v138;
        v139 = *((_OWORD *)v137 + 3);
        *((_OWORD *)v136 + 2) = *((_OWORD *)v137 + 2);
        *((_OWORD *)v136 + 3) = v139;
        v136[64] = v137[64];
        *((_QWORD *)v136 + 9) = *((_QWORD *)v137 + 9);
        *((_QWORD *)v136 + 10) = *((_QWORD *)v137 + 10);
        *((_QWORD *)v136 + 11) = *((_QWORD *)v137 + 11);
        v140 = *((_OWORD *)v137 + 9);
        v141 = *((_OWORD *)v137 + 10);
        v142 = *((_OWORD *)v137 + 11);
        v136[192] = v137[192];
        *((_OWORD *)v136 + 10) = v141;
        *((_OWORD *)v136 + 11) = v142;
        *((_OWORD *)v136 + 9) = v140;
        v143 = *((_OWORD *)v137 + 6);
        v144 = *((_OWORD *)v137 + 8);
        *((_OWORD *)v136 + 7) = *((_OWORD *)v137 + 7);
        *((_OWORD *)v136 + 8) = v144;
        *((_OWORD *)v136 + 6) = v143;
        *(_OWORD *)(v136 + 200) = *(_OWORD *)(v137 + 200);
        v145 = *(_OWORD *)(v137 + 232);
        *(_OWORD *)(v136 + 216) = *(_OWORD *)(v137 + 216);
        *(_OWORD *)(v136 + 232) = v145;
        *(_OWORD *)(v136 + 248) = *(_OWORD *)(v137 + 248);
        v136[264] = v137[264];
        swift_bridgeObjectRetain();
        v146 = v129;
        swift_retain();
        swift_retain();
        v147 = v131;
        v148 = v133;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_41;
      case 4u:
        v35 = sub_1DC4010E4();
        v36 = *(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v35 - 8) + 16);
        v36(a1, a2, v35);
        v260 = (int *)type metadata accessor for StockFeedEarningsViewModel();
        v37 = v260[5];
        v38 = (char *)a1 + v37;
        v39 = (char *)a2 + v37;
        v36((_QWORD *)((char *)a1 + v37), (_QWORD *)((char *)a2 + v37), v35);
        v40 = (int *)type metadata accessor for StockEarningsModel();
        v41 = v40[5];
        v42 = &v38[v41];
        v43 = &v39[v41];
        v44 = sub_1DC3FFFEC();
        v45 = *(_QWORD *)(v44 - 8);
        v46 = v42;
        v47 = *(void (**)(char *, char *, uint64_t))(v45 + 16);
        v47(v46, v43, v44);
        v48 = v40[6];
        v49 = &v38[v48];
        v50 = &v39[v48];
        v257 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48);
        if (v257(&v39[v48], 1, v44))
        {
          sub_1DC092F50(0, &qword_1EDB28AC0, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
          memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
        }
        else
        {
          v47(v49, v50, v44);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v45 + 56))(v49, 0, 1, v44);
        }
        v75 = v47;
        v76 = v40[7];
        v77 = &v38[v76];
        v78 = &v39[v76];
        v79 = sub_1DC400220();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v79 - 8) + 16))(v77, v78, v79);
        v38[v40[8]] = v39[v40[8]];
        v38[v40[9]] = v39[v40[9]];
        v75((char *)a1 + v260[6], (char *)a2 + v260[6], v44);
        v80 = v260[7];
        v81 = (char *)a1 + v80;
        v82 = (char *)a2 + v80;
        if (v257((char *)a2 + v80, 1, v44))
        {
          sub_1DC092F50(0, &qword_1EDB28AC0, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
          memcpy(v81, v82, *(_QWORD *)(*(_QWORD *)(v83 - 8) + 64));
        }
        else
        {
          v75(v81, v82, v44);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v45 + 56))(v81, 0, 1, v44);
        }
        v149 = v260[8];
        v150 = (_QWORD *)((char *)a1 + v149);
        v151 = (_QWORD *)((char *)a2 + v149);
        *v150 = *v151;
        v150[1] = v151[1];
        *((_BYTE *)a1 + v260[9]) = *((_BYTE *)a2 + v260[9]);
        v152 = v260[10];
        v153 = (_QWORD *)((char *)a1 + v152);
        v154 = (_QWORD *)((char *)a2 + v152);
        *v153 = *v154;
        v153[1] = v154[1];
        *((_BYTE *)a1 + v260[11]) = *((_BYTE *)a2 + v260[11]);
        *(_QWORD *)((char *)a1 + v260[12]) = *(_QWORD *)((char *)a2 + v260[12]);
        sub_1DC1AA6E8(0, &qword_1EDB36D58, (void (*)(uint64_t))type metadata accessor for StockFeedEarningsViewModel);
        v156 = *(int *)(v155 + 48);
        v157 = (_OWORD *)((char *)a1 + v156);
        v158 = (_OWORD *)((char *)a2 + v156);
        v160 = v158[6];
        v159 = v158[7];
        v161 = v158[5];
        v157[4] = v158[4];
        v157[5] = v161;
        v157[6] = v160;
        v157[7] = v159;
        v163 = v158[2];
        v162 = v158[3];
        v164 = v158[1];
        *v157 = *v158;
        v157[1] = v164;
        v157[2] = v163;
        v157[3] = v162;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_41;
      case 5u:
        *a1 = *a2;
        a1[1] = a2[1];
        v52 = *((_OWORD *)a2 + 1);
        v53 = *((_OWORD *)a2 + 2);
        v54 = *((_OWORD *)a2 + 4);
        *((_OWORD *)a1 + 3) = *((_OWORD *)a2 + 3);
        *((_OWORD *)a1 + 4) = v54;
        *((_OWORD *)a1 + 1) = v52;
        *((_OWORD *)a1 + 2) = v53;
        swift_bridgeObjectRetain();
        goto LABEL_41;
      case 7u:
        v55 = sub_1DC407B04();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v55 - 8) + 16))(a1, a2, v55);
LABEL_41:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t type metadata accessor for StockFeedLayoutModel()
{
  uint64_t result;

  result = qword_1EDB32180;
  if (!qword_1EDB32180)
    return swift_getSingletonMetadata();
  return result;
}

_BYTE *sub_1DC1ACEF8(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(_BYTE *, _BYTE *, uint64_t);
  int *v38;
  uint64_t v39;
  char *v40;
  char *v41;
  int *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  int *v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  int *v83;
  uint64_t v84;
  char *v85;
  char *v86;
  __int128 v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  char *v104;
  int *v105;
  uint64_t v106;
  char *v107;
  char *v108;
  __int128 v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  _OWORD *v130;
  _OWORD *v131;
  __int128 v132;
  __int128 v133;
  __int128 v134;
  __int128 v135;
  __int128 v136;
  uint64_t v137;
  char *v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  char *v148;
  uint64_t v149;
  int *v150;
  uint64_t v151;
  char *v152;
  char *v153;
  __int128 v154;
  uint64_t v155;
  char *v156;
  char *v157;
  __int128 v158;
  uint64_t v159;
  char *v160;
  char *v161;
  __int128 v162;
  uint64_t v163;
  char *v164;
  char *v165;
  __int128 v166;
  uint64_t v167;
  char *v168;
  char *v169;
  __int128 v170;
  uint64_t v171;
  char *v172;
  char *v173;
  __int128 v174;
  uint64_t v175;
  char *v176;
  char *v177;
  __int128 v178;
  uint64_t v179;
  char *v180;
  char *v181;
  __int128 v182;
  uint64_t v183;
  char *v184;
  char *v185;
  __int128 v186;
  __int128 v187;
  uint64_t v188;
  char *v189;
  char *v190;
  uint64_t v191;
  uint64_t v192;
  char *v193;
  char *v194;
  uint64_t v195;
  uint64_t v196;
  void (*v198)(char *, char *, uint64_t);
  void (*v199)(char *, char *, uint64_t);
  void (*v200)(char *, char *);
  void (*v201)(char *, char *);
  uint64_t v202;
  uint64_t v203;
  unsigned int (*v204)(char *, uint64_t, uint64_t);
  void (*v205)(char *, char *, uint64_t);
  int *v206;
  int *v207;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v6 = sub_1DC4010E4();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      v7 = (int *)type metadata accessor for StockFeedMastheadModel();
      v8 = v7[5];
      v9 = &a1[v8];
      v10 = &a2[v8];
      v11 = sub_1DC401030();
      v12 = *(_QWORD *)(v11 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
      {
        sub_1DC092F50(0, &qword_1EDB28DC0, (void (*)(uint64_t))MEMORY[0x1E0DAF040]);
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      }
      v53 = v7[6];
      v54 = &a1[v53];
      v55 = &a2[v53];
      v56 = sub_1DC400F7C();
      v57 = *(_QWORD *)(v56 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v57 + 48))(v55, 1, v56))
      {
        sub_1DC092F50(0, (unint64_t *)&unk_1EDB28D90, (void (*)(uint64_t))MEMORY[0x1E0DAEFA8]);
        memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v57 + 32))(v54, v55, v56);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v57 + 56))(v54, 0, 1, v56);
      }
      v206 = v7;
      v80 = v7[7];
      v81 = &a1[v80];
      v82 = &a2[v80];
      *(_OWORD *)&a1[v80] = *(_OWORD *)&a2[v80];
      v83 = (int *)type metadata accessor for QuoteSummaryViewModel();
      v84 = v83[5];
      v85 = &v81[v84];
      v86 = &v82[v84];
      *(_QWORD *)v85 = *(_QWORD *)&v82[v84];
      v85[8] = v82[v84 + 8];
      *((_QWORD *)v85 + 2) = *(_QWORD *)&v82[v84 + 16];
      v85[24] = v82[v84 + 24];
      *((_QWORD *)v85 + 4) = *(_QWORD *)&v82[v84 + 32];
      v85[40] = v82[v84 + 40];
      v87 = *(_OWORD *)&v82[v84 + 64];
      *((_OWORD *)v85 + 3) = *(_OWORD *)&v82[v84 + 48];
      *((_OWORD *)v85 + 4) = v87;
      v85[80] = v82[v84 + 80];
      v88 = type metadata accessor for PriceViewModel();
      v89 = *(int *)(v88 + 40);
      v90 = &v85[v89];
      v91 = &v86[v89];
      v92 = sub_1DC4011C8();
      v200 = *(void (**)(char *, char *))(*(_QWORD *)(v92 - 8) + 32);
      v202 = v92;
      v200(v90, v91);
      v93 = *(int *)(v88 + 44);
      v94 = &v85[v93];
      v95 = &v86[v93];
      v96 = sub_1DC400118();
      v198 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v96 - 8) + 32);
      v198(v94, v95, v96);
      v97 = v83[6];
      v98 = &v81[v97];
      v99 = &v82[v97];
      v100 = *(_QWORD *)(v88 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v100 + 48))(&v82[v97], 1, v88))
      {
        sub_1DC092F50(0, (unint64_t *)&qword_1EDB2D5E8, (void (*)(uint64_t))type metadata accessor for PriceViewModel);
        memcpy(v98, v99, *(_QWORD *)(*(_QWORD *)(v101 - 8) + 64));
      }
      else
      {
        *(_QWORD *)v98 = *(_QWORD *)v99;
        v98[8] = v99[8];
        *((_QWORD *)v98 + 2) = *((_QWORD *)v99 + 2);
        v98[24] = v99[24];
        *((_QWORD *)v98 + 4) = *((_QWORD *)v99 + 4);
        v98[40] = v99[40];
        v136 = *((_OWORD *)v99 + 4);
        *((_OWORD *)v98 + 3) = *((_OWORD *)v99 + 3);
        *((_OWORD *)v98 + 4) = v136;
        v98[80] = v99[80];
        ((void (*)(char *, char *, uint64_t))v200)(&v98[*(int *)(v88 + 40)], &v99[*(int *)(v88 + 40)], v202);
        v198(&v98[*(int *)(v88 + 44)], &v99[*(int *)(v88 + 44)], v96);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v100 + 56))(v98, 0, 1, v88);
      }
      v137 = v83[7];
      v138 = &v81[v137];
      v139 = &v82[v137];
      v140 = sub_1DC4008EC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v140 - 8) + 32))(v138, v139, v140);
      v141 = v83[8];
      v142 = &v81[v141];
      v143 = &v82[v141];
      v144 = sub_1DC4002BC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v144 - 8) + 32))(v142, v143, v144);
      *(_OWORD *)&v81[v83[9]] = *(_OWORD *)&v82[v83[9]];
      a1[v206[8]] = a2[v206[8]];
      sub_1DC1426A0();
      v146 = *(int *)(v145 + 48);
      v147 = &a1[v146];
      v148 = &a2[v146];
      v149 = sub_1DC406040();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v149 - 8) + 32))(v147, v148, v149);
      v150 = (int *)type metadata accessor for StockFeedMastheadViewLayoutAttributes();
      v151 = v150[5];
      v152 = &v147[v151];
      v153 = &v148[v151];
      v154 = *((_OWORD *)v153 + 1);
      *(_OWORD *)v152 = *(_OWORD *)v153;
      *((_OWORD *)v152 + 1) = v154;
      v155 = v150[6];
      v156 = &v147[v155];
      v157 = &v148[v155];
      v158 = *((_OWORD *)v157 + 1);
      *(_OWORD *)v156 = *(_OWORD *)v157;
      *((_OWORD *)v156 + 1) = v158;
      v159 = v150[7];
      v160 = &v147[v159];
      v161 = &v148[v159];
      v162 = *((_OWORD *)v161 + 1);
      *(_OWORD *)v160 = *(_OWORD *)v161;
      *((_OWORD *)v160 + 1) = v162;
      v163 = v150[8];
      v164 = &v147[v163];
      v165 = &v148[v163];
      v166 = *((_OWORD *)v165 + 1);
      *(_OWORD *)v164 = *(_OWORD *)v165;
      *((_OWORD *)v164 + 1) = v166;
      v167 = v150[9];
      v168 = &v147[v167];
      v169 = &v148[v167];
      v170 = *((_OWORD *)v169 + 1);
      *(_OWORD *)v168 = *(_OWORD *)v169;
      *((_OWORD *)v168 + 1) = v170;
      v171 = v150[10];
      v172 = &v147[v171];
      v173 = &v148[v171];
      v174 = *((_OWORD *)v173 + 1);
      *(_OWORD *)v172 = *(_OWORD *)v173;
      *((_OWORD *)v172 + 1) = v174;
      v175 = v150[11];
      v176 = &v147[v175];
      v177 = &v148[v175];
      v178 = *((_OWORD *)v177 + 1);
      *(_OWORD *)v176 = *(_OWORD *)v177;
      *((_OWORD *)v176 + 1) = v178;
      memcpy(&v147[v150[12]], &v148[v150[12]], 0x111uLL);
      v179 = v150[13];
      v180 = &v147[v179];
      v181 = &v148[v179];
      v182 = *((_OWORD *)v181 + 1);
      *(_OWORD *)v180 = *(_OWORD *)v181;
      *((_OWORD *)v180 + 1) = v182;
      v183 = v150[14];
      v184 = &v147[v183];
      v185 = &v148[v183];
      v186 = *((_OWORD *)v185 + 1);
      *(_OWORD *)v184 = *(_OWORD *)v185;
      *((_OWORD *)v184 + 1) = v186;
      v147[v150[15]] = v148[v150[15]];
      *(_QWORD *)&v147[v150[16]] = *(_QWORD *)&v148[v150[16]];
      goto LABEL_39;
    case 1u:
      v14 = sub_1DC4010E4();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(a1, a2, v14);
      v15 = (int *)type metadata accessor for StockFeedMastheadModel();
      v16 = v15[5];
      v17 = &a1[v16];
      v18 = &a2[v16];
      v19 = sub_1DC401030();
      v20 = *(_QWORD *)(v19 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
      {
        sub_1DC092F50(0, &qword_1EDB28DC0, (void (*)(uint64_t))MEMORY[0x1E0DAF040]);
        memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v17, v18, v19);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
      }
      v59 = v15[6];
      v60 = &a1[v59];
      v61 = &a2[v59];
      v62 = sub_1DC400F7C();
      v63 = *(_QWORD *)(v62 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v63 + 48))(v61, 1, v62))
      {
        sub_1DC092F50(0, (unint64_t *)&unk_1EDB28D90, (void (*)(uint64_t))MEMORY[0x1E0DAEFA8]);
        memcpy(v60, v61, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v63 + 32))(v60, v61, v62);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v63 + 56))(v60, 0, 1, v62);
      }
      v207 = v15;
      v102 = v15[7];
      v103 = &a1[v102];
      v104 = &a2[v102];
      *(_OWORD *)&a1[v102] = *(_OWORD *)&a2[v102];
      v105 = (int *)type metadata accessor for QuoteSummaryViewModel();
      v106 = v105[5];
      v107 = &v103[v106];
      v108 = &v104[v106];
      *(_QWORD *)v107 = *(_QWORD *)&v104[v106];
      v107[8] = v104[v106 + 8];
      *((_QWORD *)v107 + 2) = *(_QWORD *)&v104[v106 + 16];
      v107[24] = v104[v106 + 24];
      *((_QWORD *)v107 + 4) = *(_QWORD *)&v104[v106 + 32];
      v107[40] = v104[v106 + 40];
      v109 = *(_OWORD *)&v104[v106 + 64];
      *((_OWORD *)v107 + 3) = *(_OWORD *)&v104[v106 + 48];
      *((_OWORD *)v107 + 4) = v109;
      v107[80] = v104[v106 + 80];
      v110 = type metadata accessor for PriceViewModel();
      v111 = *(int *)(v110 + 40);
      v112 = &v107[v111];
      v113 = &v108[v111];
      v114 = sub_1DC4011C8();
      v201 = *(void (**)(char *, char *))(*(_QWORD *)(v114 - 8) + 32);
      v203 = v114;
      v201(v112, v113);
      v115 = *(int *)(v110 + 44);
      v116 = &v107[v115];
      v117 = &v108[v115];
      v118 = sub_1DC400118();
      v199 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v118 - 8) + 32);
      v199(v116, v117, v118);
      v119 = v105[6];
      v120 = &v103[v119];
      v121 = &v104[v119];
      v122 = *(_QWORD *)(v110 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v122 + 48))(&v104[v119], 1, v110))
      {
        sub_1DC092F50(0, (unint64_t *)&qword_1EDB2D5E8, (void (*)(uint64_t))type metadata accessor for PriceViewModel);
        memcpy(v120, v121, *(_QWORD *)(*(_QWORD *)(v123 - 8) + 64));
      }
      else
      {
        *(_QWORD *)v120 = *(_QWORD *)v121;
        v120[8] = v121[8];
        *((_QWORD *)v120 + 2) = *((_QWORD *)v121 + 2);
        v120[24] = v121[24];
        *((_QWORD *)v120 + 4) = *((_QWORD *)v121 + 4);
        v120[40] = v121[40];
        v187 = *((_OWORD *)v121 + 4);
        *((_OWORD *)v120 + 3) = *((_OWORD *)v121 + 3);
        *((_OWORD *)v120 + 4) = v187;
        v120[80] = v121[80];
        ((void (*)(char *, char *, uint64_t))v201)(&v120[*(int *)(v110 + 40)], &v121[*(int *)(v110 + 40)], v203);
        v199(&v120[*(int *)(v110 + 44)], &v121[*(int *)(v110 + 44)], v118);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v122 + 56))(v120, 0, 1, v110);
      }
      v188 = v105[7];
      v189 = &v103[v188];
      v190 = &v104[v188];
      v191 = sub_1DC4008EC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v191 - 8) + 32))(v189, v190, v191);
      v192 = v105[8];
      v193 = &v103[v192];
      v194 = &v104[v192];
      v195 = sub_1DC4002BC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v195 - 8) + 32))(v193, v194, v195);
      *(_OWORD *)&v103[v105[9]] = *(_OWORD *)&v104[v105[9]];
      a1[v207[8]] = a2[v207[8]];
      sub_1DC1AA6E8(0, &qword_1EDB33E50, (void (*)(uint64_t))type metadata accessor for StockFeedMastheadModel);
      memcpy(&a1[*(int *)(v196 + 48)], &a2[*(int *)(v196 + 48)], 0x178uLL);
      goto LABEL_39;
    case 2u:
      v22 = sub_1DC4010E4();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(a1, a2, v22);
      sub_1DC1AA6E8(0, &qword_1EDB2E2B8, (void (*)(uint64_t))type metadata accessor for StockChartModel);
      v24 = *(int *)(v23 + 48);
      v25 = &a1[v24];
      v26 = &a2[v24];
      v27 = *((_OWORD *)v26 + 11);
      *((_OWORD *)v25 + 10) = *((_OWORD *)v26 + 10);
      *((_OWORD *)v25 + 11) = v27;
      *((_QWORD *)v25 + 24) = *((_QWORD *)v26 + 24);
      v28 = *((_OWORD *)v26 + 7);
      *((_OWORD *)v25 + 6) = *((_OWORD *)v26 + 6);
      *((_OWORD *)v25 + 7) = v28;
      v29 = *((_OWORD *)v26 + 9);
      *((_OWORD *)v25 + 8) = *((_OWORD *)v26 + 8);
      *((_OWORD *)v25 + 9) = v29;
      v30 = *((_OWORD *)v26 + 3);
      *((_OWORD *)v25 + 2) = *((_OWORD *)v26 + 2);
      *((_OWORD *)v25 + 3) = v30;
      v31 = *((_OWORD *)v26 + 5);
      *((_OWORD *)v25 + 4) = *((_OWORD *)v26 + 4);
      *((_OWORD *)v25 + 5) = v31;
      v32 = *((_OWORD *)v26 + 1);
      *(_OWORD *)v25 = *(_OWORD *)v26;
      *((_OWORD *)v25 + 1) = v32;
      goto LABEL_39;
    case 3u:
      v33 = sub_1DC401030();
      v34 = *(_QWORD *)(v33 - 8);
      if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v34 + 48))(a2, 1, v33))
      {
        sub_1DC092F50(0, &qword_1EDB28DC0, (void (*)(uint64_t))MEMORY[0x1E0DAF040]);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
      }
      else
      {
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v34 + 32))(a1, a2, v33);
        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v34 + 56))(a1, 0, 1, v33);
      }
      v65 = (int *)type metadata accessor for QuoteDetailViewModel();
      v66 = v65[5];
      v67 = &a1[v66];
      v68 = &a2[v66];
      v69 = sub_1DC400370();
      v70 = *(_QWORD *)(v69 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v70 + 48))(v68, 1, v69))
      {
        sub_1DC092F50(0, &qword_1EDB28BA0, (void (*)(uint64_t))MEMORY[0x1E0DAE188]);
        memcpy(v67, v68, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v70 + 32))(v67, v68, v69);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v70 + 56))(v67, 0, 1, v69);
      }
      v124 = v65[6];
      v125 = &a1[v124];
      v126 = &a2[v124];
      *(_OWORD *)v125 = *(_OWORD *)v126;
      *((_QWORD *)v125 + 2) = *((_QWORD *)v126 + 2);
      *(_QWORD *)&a1[v65[7]] = *(_QWORD *)&a2[v65[7]];
      *(_QWORD *)&a1[v65[8]] = *(_QWORD *)&a2[v65[8]];
      *(_QWORD *)&a1[v65[9]] = *(_QWORD *)&a2[v65[9]];
      *(_QWORD *)&a1[v65[10]] = *(_QWORD *)&a2[v65[10]];
      sub_1DC1AA6E8(0, &qword_1EDB31B10, (void (*)(uint64_t))type metadata accessor for QuoteDetailViewModel);
      memcpy(&a1[*(int *)(v127 + 48)], &a2[*(int *)(v127 + 48)], 0x109uLL);
      goto LABEL_39;
    case 4u:
      v36 = sub_1DC4010E4();
      v37 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v36 - 8) + 32);
      v37(a1, a2, v36);
      v38 = (int *)type metadata accessor for StockFeedEarningsViewModel();
      v39 = v38[5];
      v40 = &a1[v39];
      v41 = &a2[v39];
      v37(&a1[v39], &a2[v39], v36);
      v42 = (int *)type metadata accessor for StockEarningsModel();
      v43 = v42[5];
      v44 = &v40[v43];
      v45 = &v41[v43];
      v46 = sub_1DC3FFFEC();
      v47 = *(_QWORD *)(v46 - 8);
      v205 = *(void (**)(char *, char *, uint64_t))(v47 + 32);
      v205(v44, v45, v46);
      v48 = v42[6];
      v49 = &v40[v48];
      v50 = &v41[v48];
      v204 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48);
      if (v204(&v41[v48], 1, v46))
      {
        sub_1DC092F50(0, &qword_1EDB28AC0, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
        memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
      }
      else
      {
        v205(v49, v50, v46);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v49, 0, 1, v46);
      }
      v72 = v42[7];
      v73 = &v40[v72];
      v74 = &v41[v72];
      v75 = sub_1DC400220();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v75 - 8) + 32))(v73, v74, v75);
      v40[v42[8]] = v41[v42[8]];
      v40[v42[9]] = v41[v42[9]];
      v205(&a1[v38[6]], &a2[v38[6]], v46);
      v76 = v38[7];
      v77 = &a1[v76];
      v78 = &a2[v76];
      if (v204(&a2[v76], 1, v46))
      {
        sub_1DC092F50(0, &qword_1EDB28AC0, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
        memcpy(v77, v78, *(_QWORD *)(*(_QWORD *)(v79 - 8) + 64));
      }
      else
      {
        v205(v77, v78, v46);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v77, 0, 1, v46);
      }
      *(_OWORD *)&a1[v38[8]] = *(_OWORD *)&a2[v38[8]];
      a1[v38[9]] = a2[v38[9]];
      *(_OWORD *)&a1[v38[10]] = *(_OWORD *)&a2[v38[10]];
      a1[v38[11]] = a2[v38[11]];
      *(_QWORD *)&a1[v38[12]] = *(_QWORD *)&a2[v38[12]];
      sub_1DC1AA6E8(0, &qword_1EDB36D58, (void (*)(uint64_t))type metadata accessor for StockFeedEarningsViewModel);
      v129 = *(int *)(v128 + 48);
      v130 = &a1[v129];
      v131 = &a2[v129];
      v132 = v131[5];
      v130[4] = v131[4];
      v130[5] = v132;
      v133 = v131[7];
      v130[6] = v131[6];
      v130[7] = v133;
      v134 = v131[1];
      *v130 = *v131;
      v130[1] = v134;
      v135 = v131[3];
      v130[2] = v131[2];
      v130[3] = v135;
      goto LABEL_39;
    case 7u:
      v52 = sub_1DC407B04();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v52 - 8) + 32))(a1, a2, v52);
LABEL_39:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

_BYTE *sub_1DC1ADD28(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(_BYTE *, _BYTE *, uint64_t);
  int *v38;
  uint64_t v39;
  char *v40;
  char *v41;
  int *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  int *v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  int *v83;
  uint64_t v84;
  char *v85;
  char *v86;
  __int128 v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  char *v104;
  int *v105;
  uint64_t v106;
  char *v107;
  char *v108;
  __int128 v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  _OWORD *v130;
  _OWORD *v131;
  __int128 v132;
  __int128 v133;
  __int128 v134;
  __int128 v135;
  __int128 v136;
  uint64_t v137;
  char *v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  char *v148;
  uint64_t v149;
  int *v150;
  uint64_t v151;
  char *v152;
  char *v153;
  __int128 v154;
  uint64_t v155;
  char *v156;
  char *v157;
  __int128 v158;
  uint64_t v159;
  char *v160;
  char *v161;
  __int128 v162;
  uint64_t v163;
  char *v164;
  char *v165;
  __int128 v166;
  uint64_t v167;
  char *v168;
  char *v169;
  __int128 v170;
  uint64_t v171;
  char *v172;
  char *v173;
  __int128 v174;
  uint64_t v175;
  char *v176;
  char *v177;
  __int128 v178;
  uint64_t v179;
  char *v180;
  char *v181;
  __int128 v182;
  uint64_t v183;
  char *v184;
  char *v185;
  __int128 v186;
  __int128 v187;
  uint64_t v188;
  char *v189;
  char *v190;
  uint64_t v191;
  uint64_t v192;
  char *v193;
  char *v194;
  uint64_t v195;
  uint64_t v196;
  void (*v198)(char *, char *, uint64_t);
  void (*v199)(char *, char *, uint64_t);
  void (*v200)(char *, char *);
  void (*v201)(char *, char *);
  uint64_t v202;
  uint64_t v203;
  unsigned int (*v204)(char *, uint64_t, uint64_t);
  void (*v205)(char *, char *, uint64_t);
  int *v206;
  int *v207;

  if (a1 != a2)
  {
    sub_1DC0926D8((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedLayoutModel);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v6 = sub_1DC4010E4();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
        v7 = (int *)type metadata accessor for StockFeedMastheadModel();
        v8 = v7[5];
        v9 = &a1[v8];
        v10 = &a2[v8];
        v11 = sub_1DC401030();
        v12 = *(_QWORD *)(v11 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
        {
          sub_1DC092F50(0, &qword_1EDB28DC0, (void (*)(uint64_t))MEMORY[0x1E0DAF040]);
          memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
        }
        v53 = v7[6];
        v54 = &a1[v53];
        v55 = &a2[v53];
        v56 = sub_1DC400F7C();
        v57 = *(_QWORD *)(v56 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v57 + 48))(v55, 1, v56))
        {
          sub_1DC092F50(0, (unint64_t *)&unk_1EDB28D90, (void (*)(uint64_t))MEMORY[0x1E0DAEFA8]);
          memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v57 + 32))(v54, v55, v56);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v57 + 56))(v54, 0, 1, v56);
        }
        v206 = v7;
        v80 = v7[7];
        v81 = &a1[v80];
        v82 = &a2[v80];
        *(_OWORD *)&a1[v80] = *(_OWORD *)&a2[v80];
        v83 = (int *)type metadata accessor for QuoteSummaryViewModel();
        v84 = v83[5];
        v85 = &v81[v84];
        v86 = &v82[v84];
        *(_QWORD *)v85 = *(_QWORD *)&v82[v84];
        v85[8] = v82[v84 + 8];
        *((_QWORD *)v85 + 2) = *(_QWORD *)&v82[v84 + 16];
        v85[24] = v82[v84 + 24];
        *((_QWORD *)v85 + 4) = *(_QWORD *)&v82[v84 + 32];
        v85[40] = v82[v84 + 40];
        v87 = *(_OWORD *)&v82[v84 + 64];
        *((_OWORD *)v85 + 3) = *(_OWORD *)&v82[v84 + 48];
        *((_OWORD *)v85 + 4) = v87;
        v85[80] = v82[v84 + 80];
        v88 = type metadata accessor for PriceViewModel();
        v89 = *(int *)(v88 + 40);
        v90 = &v85[v89];
        v91 = &v86[v89];
        v92 = sub_1DC4011C8();
        v200 = *(void (**)(char *, char *))(*(_QWORD *)(v92 - 8) + 32);
        v202 = v92;
        v200(v90, v91);
        v93 = *(int *)(v88 + 44);
        v94 = &v85[v93];
        v95 = &v86[v93];
        v96 = sub_1DC400118();
        v198 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v96 - 8) + 32);
        v198(v94, v95, v96);
        v97 = v83[6];
        v98 = &v81[v97];
        v99 = &v82[v97];
        v100 = *(_QWORD *)(v88 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v100 + 48))(&v82[v97], 1, v88))
        {
          sub_1DC092F50(0, (unint64_t *)&qword_1EDB2D5E8, (void (*)(uint64_t))type metadata accessor for PriceViewModel);
          memcpy(v98, v99, *(_QWORD *)(*(_QWORD *)(v101 - 8) + 64));
        }
        else
        {
          *(_QWORD *)v98 = *(_QWORD *)v99;
          v98[8] = v99[8];
          *((_QWORD *)v98 + 2) = *((_QWORD *)v99 + 2);
          v98[24] = v99[24];
          *((_QWORD *)v98 + 4) = *((_QWORD *)v99 + 4);
          v98[40] = v99[40];
          v136 = *((_OWORD *)v99 + 4);
          *((_OWORD *)v98 + 3) = *((_OWORD *)v99 + 3);
          *((_OWORD *)v98 + 4) = v136;
          v98[80] = v99[80];
          ((void (*)(char *, char *, uint64_t))v200)(&v98[*(int *)(v88 + 40)], &v99[*(int *)(v88 + 40)], v202);
          v198(&v98[*(int *)(v88 + 44)], &v99[*(int *)(v88 + 44)], v96);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v100 + 56))(v98, 0, 1, v88);
        }
        v137 = v83[7];
        v138 = &v81[v137];
        v139 = &v82[v137];
        v140 = sub_1DC4008EC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v140 - 8) + 32))(v138, v139, v140);
        v141 = v83[8];
        v142 = &v81[v141];
        v143 = &v82[v141];
        v144 = sub_1DC4002BC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v144 - 8) + 32))(v142, v143, v144);
        *(_OWORD *)&v81[v83[9]] = *(_OWORD *)&v82[v83[9]];
        a1[v206[8]] = a2[v206[8]];
        sub_1DC1426A0();
        v146 = *(int *)(v145 + 48);
        v147 = &a1[v146];
        v148 = &a2[v146];
        v149 = sub_1DC406040();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v149 - 8) + 32))(v147, v148, v149);
        v150 = (int *)type metadata accessor for StockFeedMastheadViewLayoutAttributes();
        v151 = v150[5];
        v152 = &v147[v151];
        v153 = &v148[v151];
        v154 = *((_OWORD *)v153 + 1);
        *(_OWORD *)v152 = *(_OWORD *)v153;
        *((_OWORD *)v152 + 1) = v154;
        v155 = v150[6];
        v156 = &v147[v155];
        v157 = &v148[v155];
        v158 = *((_OWORD *)v157 + 1);
        *(_OWORD *)v156 = *(_OWORD *)v157;
        *((_OWORD *)v156 + 1) = v158;
        v159 = v150[7];
        v160 = &v147[v159];
        v161 = &v148[v159];
        v162 = *((_OWORD *)v161 + 1);
        *(_OWORD *)v160 = *(_OWORD *)v161;
        *((_OWORD *)v160 + 1) = v162;
        v163 = v150[8];
        v164 = &v147[v163];
        v165 = &v148[v163];
        v166 = *((_OWORD *)v165 + 1);
        *(_OWORD *)v164 = *(_OWORD *)v165;
        *((_OWORD *)v164 + 1) = v166;
        v167 = v150[9];
        v168 = &v147[v167];
        v169 = &v148[v167];
        v170 = *((_OWORD *)v169 + 1);
        *(_OWORD *)v168 = *(_OWORD *)v169;
        *((_OWORD *)v168 + 1) = v170;
        v171 = v150[10];
        v172 = &v147[v171];
        v173 = &v148[v171];
        v174 = *((_OWORD *)v173 + 1);
        *(_OWORD *)v172 = *(_OWORD *)v173;
        *((_OWORD *)v172 + 1) = v174;
        v175 = v150[11];
        v176 = &v147[v175];
        v177 = &v148[v175];
        v178 = *((_OWORD *)v177 + 1);
        *(_OWORD *)v176 = *(_OWORD *)v177;
        *((_OWORD *)v176 + 1) = v178;
        memcpy(&v147[v150[12]], &v148[v150[12]], 0x111uLL);
        v179 = v150[13];
        v180 = &v147[v179];
        v181 = &v148[v179];
        v182 = *((_OWORD *)v181 + 1);
        *(_OWORD *)v180 = *(_OWORD *)v181;
        *((_OWORD *)v180 + 1) = v182;
        v183 = v150[14];
        v184 = &v147[v183];
        v185 = &v148[v183];
        v186 = *((_OWORD *)v185 + 1);
        *(_OWORD *)v184 = *(_OWORD *)v185;
        *((_OWORD *)v184 + 1) = v186;
        v147[v150[15]] = v148[v150[15]];
        *(_QWORD *)&v147[v150[16]] = *(_QWORD *)&v148[v150[16]];
        goto LABEL_40;
      case 1u:
        v14 = sub_1DC4010E4();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(a1, a2, v14);
        v15 = (int *)type metadata accessor for StockFeedMastheadModel();
        v16 = v15[5];
        v17 = &a1[v16];
        v18 = &a2[v16];
        v19 = sub_1DC401030();
        v20 = *(_QWORD *)(v19 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
        {
          sub_1DC092F50(0, &qword_1EDB28DC0, (void (*)(uint64_t))MEMORY[0x1E0DAF040]);
          memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v17, v18, v19);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
        }
        v59 = v15[6];
        v60 = &a1[v59];
        v61 = &a2[v59];
        v62 = sub_1DC400F7C();
        v63 = *(_QWORD *)(v62 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v63 + 48))(v61, 1, v62))
        {
          sub_1DC092F50(0, (unint64_t *)&unk_1EDB28D90, (void (*)(uint64_t))MEMORY[0x1E0DAEFA8]);
          memcpy(v60, v61, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v63 + 32))(v60, v61, v62);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v63 + 56))(v60, 0, 1, v62);
        }
        v207 = v15;
        v102 = v15[7];
        v103 = &a1[v102];
        v104 = &a2[v102];
        *(_OWORD *)&a1[v102] = *(_OWORD *)&a2[v102];
        v105 = (int *)type metadata accessor for QuoteSummaryViewModel();
        v106 = v105[5];
        v107 = &v103[v106];
        v108 = &v104[v106];
        *(_QWORD *)v107 = *(_QWORD *)&v104[v106];
        v107[8] = v104[v106 + 8];
        *((_QWORD *)v107 + 2) = *(_QWORD *)&v104[v106 + 16];
        v107[24] = v104[v106 + 24];
        *((_QWORD *)v107 + 4) = *(_QWORD *)&v104[v106 + 32];
        v107[40] = v104[v106 + 40];
        v109 = *(_OWORD *)&v104[v106 + 64];
        *((_OWORD *)v107 + 3) = *(_OWORD *)&v104[v106 + 48];
        *((_OWORD *)v107 + 4) = v109;
        v107[80] = v104[v106 + 80];
        v110 = type metadata accessor for PriceViewModel();
        v111 = *(int *)(v110 + 40);
        v112 = &v107[v111];
        v113 = &v108[v111];
        v114 = sub_1DC4011C8();
        v201 = *(void (**)(char *, char *))(*(_QWORD *)(v114 - 8) + 32);
        v203 = v114;
        v201(v112, v113);
        v115 = *(int *)(v110 + 44);
        v116 = &v107[v115];
        v117 = &v108[v115];
        v118 = sub_1DC400118();
        v199 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v118 - 8) + 32);
        v199(v116, v117, v118);
        v119 = v105[6];
        v120 = &v103[v119];
        v121 = &v104[v119];
        v122 = *(_QWORD *)(v110 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v122 + 48))(&v104[v119], 1, v110))
        {
          sub_1DC092F50(0, (unint64_t *)&qword_1EDB2D5E8, (void (*)(uint64_t))type metadata accessor for PriceViewModel);
          memcpy(v120, v121, *(_QWORD *)(*(_QWORD *)(v123 - 8) + 64));
        }
        else
        {
          *(_QWORD *)v120 = *(_QWORD *)v121;
          v120[8] = v121[8];
          *((_QWORD *)v120 + 2) = *((_QWORD *)v121 + 2);
          v120[24] = v121[24];
          *((_QWORD *)v120 + 4) = *((_QWORD *)v121 + 4);
          v120[40] = v121[40];
          v187 = *((_OWORD *)v121 + 4);
          *((_OWORD *)v120 + 3) = *((_OWORD *)v121 + 3);
          *((_OWORD *)v120 + 4) = v187;
          v120[80] = v121[80];
          ((void (*)(char *, char *, uint64_t))v201)(&v120[*(int *)(v110 + 40)], &v121[*(int *)(v110 + 40)], v203);
          v199(&v120[*(int *)(v110 + 44)], &v121[*(int *)(v110 + 44)], v118);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v122 + 56))(v120, 0, 1, v110);
        }
        v188 = v105[7];
        v189 = &v103[v188];
        v190 = &v104[v188];
        v191 = sub_1DC4008EC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v191 - 8) + 32))(v189, v190, v191);
        v192 = v105[8];
        v193 = &v103[v192];
        v194 = &v104[v192];
        v195 = sub_1DC4002BC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v195 - 8) + 32))(v193, v194, v195);
        *(_OWORD *)&v103[v105[9]] = *(_OWORD *)&v104[v105[9]];
        a1[v207[8]] = a2[v207[8]];
        sub_1DC1AA6E8(0, &qword_1EDB33E50, (void (*)(uint64_t))type metadata accessor for StockFeedMastheadModel);
        memcpy(&a1[*(int *)(v196 + 48)], &a2[*(int *)(v196 + 48)], 0x178uLL);
        goto LABEL_40;
      case 2u:
        v22 = sub_1DC4010E4();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(a1, a2, v22);
        sub_1DC1AA6E8(0, &qword_1EDB2E2B8, (void (*)(uint64_t))type metadata accessor for StockChartModel);
        v24 = *(int *)(v23 + 48);
        v25 = &a1[v24];
        v26 = &a2[v24];
        v27 = *((_OWORD *)v26 + 11);
        *((_OWORD *)v25 + 10) = *((_OWORD *)v26 + 10);
        *((_OWORD *)v25 + 11) = v27;
        *((_QWORD *)v25 + 24) = *((_QWORD *)v26 + 24);
        v28 = *((_OWORD *)v26 + 7);
        *((_OWORD *)v25 + 6) = *((_OWORD *)v26 + 6);
        *((_OWORD *)v25 + 7) = v28;
        v29 = *((_OWORD *)v26 + 9);
        *((_OWORD *)v25 + 8) = *((_OWORD *)v26 + 8);
        *((_OWORD *)v25 + 9) = v29;
        v30 = *((_OWORD *)v26 + 3);
        *((_OWORD *)v25 + 2) = *((_OWORD *)v26 + 2);
        *((_OWORD *)v25 + 3) = v30;
        v31 = *((_OWORD *)v26 + 5);
        *((_OWORD *)v25 + 4) = *((_OWORD *)v26 + 4);
        *((_OWORD *)v25 + 5) = v31;
        v32 = *((_OWORD *)v26 + 1);
        *(_OWORD *)v25 = *(_OWORD *)v26;
        *((_OWORD *)v25 + 1) = v32;
        goto LABEL_40;
      case 3u:
        v33 = sub_1DC401030();
        v34 = *(_QWORD *)(v33 - 8);
        if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v34 + 48))(a2, 1, v33))
        {
          sub_1DC092F50(0, &qword_1EDB28DC0, (void (*)(uint64_t))MEMORY[0x1E0DAF040]);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
        }
        else
        {
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v34 + 32))(a1, a2, v33);
          (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v34 + 56))(a1, 0, 1, v33);
        }
        v65 = (int *)type metadata accessor for QuoteDetailViewModel();
        v66 = v65[5];
        v67 = &a1[v66];
        v68 = &a2[v66];
        v69 = sub_1DC400370();
        v70 = *(_QWORD *)(v69 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v70 + 48))(v68, 1, v69))
        {
          sub_1DC092F50(0, &qword_1EDB28BA0, (void (*)(uint64_t))MEMORY[0x1E0DAE188]);
          memcpy(v67, v68, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v70 + 32))(v67, v68, v69);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v70 + 56))(v67, 0, 1, v69);
        }
        v124 = v65[6];
        v125 = &a1[v124];
        v126 = &a2[v124];
        *(_OWORD *)v125 = *(_OWORD *)v126;
        *((_QWORD *)v125 + 2) = *((_QWORD *)v126 + 2);
        *(_QWORD *)&a1[v65[7]] = *(_QWORD *)&a2[v65[7]];
        *(_QWORD *)&a1[v65[8]] = *(_QWORD *)&a2[v65[8]];
        *(_QWORD *)&a1[v65[9]] = *(_QWORD *)&a2[v65[9]];
        *(_QWORD *)&a1[v65[10]] = *(_QWORD *)&a2[v65[10]];
        sub_1DC1AA6E8(0, &qword_1EDB31B10, (void (*)(uint64_t))type metadata accessor for QuoteDetailViewModel);
        memcpy(&a1[*(int *)(v127 + 48)], &a2[*(int *)(v127 + 48)], 0x109uLL);
        goto LABEL_40;
      case 4u:
        v36 = sub_1DC4010E4();
        v37 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v36 - 8) + 32);
        v37(a1, a2, v36);
        v38 = (int *)type metadata accessor for StockFeedEarningsViewModel();
        v39 = v38[5];
        v40 = &a1[v39];
        v41 = &a2[v39];
        v37(&a1[v39], &a2[v39], v36);
        v42 = (int *)type metadata accessor for StockEarningsModel();
        v43 = v42[5];
        v44 = &v40[v43];
        v45 = &v41[v43];
        v46 = sub_1DC3FFFEC();
        v47 = *(_QWORD *)(v46 - 8);
        v205 = *(void (**)(char *, char *, uint64_t))(v47 + 32);
        v205(v44, v45, v46);
        v48 = v42[6];
        v49 = &v40[v48];
        v50 = &v41[v48];
        v204 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48);
        if (v204(&v41[v48], 1, v46))
        {
          sub_1DC092F50(0, &qword_1EDB28AC0, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
          memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
        }
        else
        {
          v205(v49, v50, v46);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v49, 0, 1, v46);
        }
        v72 = v42[7];
        v73 = &v40[v72];
        v74 = &v41[v72];
        v75 = sub_1DC400220();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v75 - 8) + 32))(v73, v74, v75);
        v40[v42[8]] = v41[v42[8]];
        v40[v42[9]] = v41[v42[9]];
        v205(&a1[v38[6]], &a2[v38[6]], v46);
        v76 = v38[7];
        v77 = &a1[v76];
        v78 = &a2[v76];
        if (v204(&a2[v76], 1, v46))
        {
          sub_1DC092F50(0, &qword_1EDB28AC0, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
          memcpy(v77, v78, *(_QWORD *)(*(_QWORD *)(v79 - 8) + 64));
        }
        else
        {
          v205(v77, v78, v46);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v77, 0, 1, v46);
        }
        *(_OWORD *)&a1[v38[8]] = *(_OWORD *)&a2[v38[8]];
        a1[v38[9]] = a2[v38[9]];
        *(_OWORD *)&a1[v38[10]] = *(_OWORD *)&a2[v38[10]];
        a1[v38[11]] = a2[v38[11]];
        *(_QWORD *)&a1[v38[12]] = *(_QWORD *)&a2[v38[12]];
        sub_1DC1AA6E8(0, &qword_1EDB36D58, (void (*)(uint64_t))type metadata accessor for StockFeedEarningsViewModel);
        v129 = *(int *)(v128 + 48);
        v130 = &a1[v129];
        v131 = &a2[v129];
        v132 = v131[5];
        v130[4] = v131[4];
        v130[5] = v132;
        v133 = v131[7];
        v130[6] = v131[6];
        v130[7] = v133;
        v134 = v131[1];
        *v130 = *v131;
        v130[1] = v134;
        v135 = v131[3];
        v130[2] = v131[2];
        v130[3] = v135;
        goto LABEL_40;
      case 7u:
        v52 = sub_1DC407B04();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v52 - 8) + 32))(a1, a2, v52);
LABEL_40:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_1DC1AEB70()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v10;
  char v11;
  char v12;
  char v13;
  char v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  uint64_t *v19;
  void *v20;
  void *v21;
  uint64_t v22;

  v0 = type metadata accessor for StockFeedMastheadModel();
  if (v1 <= 0x3F)
  {
    v2 = type metadata accessor for StockFeedMastheadViewLayoutAttributes();
    if (v3 > 0x3F)
    {
      return v2;
    }
    else
    {
      swift_getTupleTypeLayout2();
      v15 = &v14;
      swift_getTupleTypeLayout2();
      v16 = &v13;
      v0 = sub_1DC4010E4();
      if (v4 <= 0x3F)
      {
        swift_getTupleTypeLayout2();
        v17 = &v12;
        v0 = type metadata accessor for QuoteDetailViewModel();
        if (v5 <= 0x3F)
        {
          swift_getTupleTypeLayout2();
          v18 = &v11;
          v0 = type metadata accessor for StockFeedEarningsViewModel();
          if (v6 <= 0x3F)
          {
            swift_getTupleTypeLayout2();
            v19 = &v10;
            v20 = &unk_1DC413938;
            v21 = &unk_1DC413920;
            v7 = sub_1DC407B04();
            v0 = v7;
            if (v8 <= 0x3F)
            {
              v22 = *(_QWORD *)(v7 - 8) + 64;
              swift_initEnumMetadataMultiPayload();
              return 0;
            }
          }
        }
      }
    }
  }
  return v0;
}

void sub_1DC1AED00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;

  v1 = sub_1DC407B04();
  MEMORY[0x1E0C80A78](v1);
  v2 = type metadata accessor for StockFeedMastheadViewLayoutAttributes();
  MEMORY[0x1E0C80A78](v2);
  v3 = type metadata accessor for StockFeedLayoutModel();
  MEMORY[0x1E0C80A78](v3);
  sub_1DC1B07C8(v0, (uint64_t)&v6 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = (char *)sub_1DC1AEE04 + 4 * byte_1DC413878[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1DC1AEE04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _OWORD *v5;
  __int128 v6;

  sub_1DC1426A0();
  sub_1DC1B08F0(v1 + *(int *)(v4 + 48), v3);
  v5 = (_OWORD *)(v3 + *(int *)(v2 + 20));
  v6 = v5[1];
  *(_OWORD *)(v0 + 32) = *v5;
  *(_OWORD *)(v0 + 48) = v6;
  sub_1DC0926D8(v3, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedMastheadViewLayoutAttributes);
  return sub_1DC0926D8(v1, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedMastheadModel);
}

void sub_1DC1AEFA0()
{
  uint64_t v0;
  uint64_t v1;
  __int128 v2;

  v2 = *(_OWORD *)(v1 + 32);
  *(_OWORD *)(v0 + 32) = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v0 + 48) = v2;
  swift_bridgeObjectRelease();
  JUMPOUT(0x1DC1AEF74);
}

void sub_1DC1AEFB8()
{
  JUMPOUT(0x1DC1AEF78);
}

void sub_1DC1AEFC0()
{
  _OWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v3, v1, v2);
  sub_1DC407AEC();
  v0[1] = v6;
  v0[2] = v5;
  v0[3] = v7;
  *v0 = v8;
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v2);
  JUMPOUT(0x1DC1AEF78);
}

uint64_t sub_1DC1AF014()
{
  sub_1DC120454(&qword_1EDB32168, (uint64_t)&unk_1DC413988);
  return sub_1DC40625C();
}

uint64_t sub_1DC1AF04C()
{
  return sub_1DC120454(&qword_1EDB32160, (uint64_t)&unk_1DC413950);
}

void sub_1DC1AF070()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;

  v1 = sub_1DC407B04();
  MEMORY[0x1E0C80A78](v1);
  v2 = type metadata accessor for StockFeedLayoutModel();
  MEMORY[0x1E0C80A78](v2);
  sub_1DC1B07C8(v0, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = (char *)sub_1DC1AF150 + 4 * byte_1DC413880[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1DC1AF150()
{
  uint64_t v0;
  uint64_t v1;

  sub_1DC1426A0();
  sub_1DC0926D8(v0 + *(int *)(v1 + 48), (uint64_t (*)(_QWORD))type metadata accessor for StockFeedMastheadViewLayoutAttributes);
  sub_1DC0926D8(v0, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedMastheadModel);
  return 0x646165687473616DLL;
}

void sub_1DC1AF35C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;

  v1 = sub_1DC407B04();
  MEMORY[0x1E0C80A78](v1);
  v2 = type metadata accessor for StockFeedLayoutModel();
  MEMORY[0x1E0C80A78](v2);
  sub_1DC1B07C8(v0, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = (char *)sub_1DC1AF42C + 4 * byte_1DC413888[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1DC1AF42C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1DC1426A0();
  sub_1DC0926D8(v1 + *(int *)(v2 + 48), (uint64_t (*)(_QWORD))type metadata accessor for StockFeedMastheadViewLayoutAttributes);
  sub_1DC0926D8(v1, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedMastheadModel);
  v3 = *MEMORY[0x1E0DB6978];
  v4 = sub_1DC4040FC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 104))(v0, v3, v4);
}

void sub_1DC1AF578()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v2, v0, v1);
  sub_1DC407ABC();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v1);
  JUMPOUT(0x1DC1AF558);
}

void sub_1DC1AF5B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;

  v1 = sub_1DC407B04();
  MEMORY[0x1E0C80A78](v1);
  v2 = type metadata accessor for StockFeedLayoutModel();
  MEMORY[0x1E0C80A78](v2);
  sub_1DC1B07C8(v0, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = (char *)sub_1DC1AF680 + 4 * byte_1DC413890[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1DC1AF680()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1DC1426A0();
  sub_1DC0926D8(v0 + *(int *)(v2 + 48), (uint64_t (*)(_QWORD))type metadata accessor for StockFeedMastheadViewLayoutAttributes);
  sub_1DC0926D8(v0, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedMastheadModel);
  return v1;
}

void sub_1DC1AF7DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v7 = sub_1DC408044();
  MEMORY[0x1E0C80A78](v7);
  v1 = sub_1DC407B04();
  MEMORY[0x1E0C80A78](v1);
  MEMORY[0x1E0C80A78](v2);
  v3 = type metadata accessor for StockFeedLayoutModel();
  MEMORY[0x1E0C80A78](v3);
  sub_1DC1B07C8(v0, (uint64_t)&v6 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = (char *)sub_1DC1AF900 + 4 * byte_1DC413898[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1DC1AF900()
{
  uint64_t v0;
  uint64_t v1;

  sub_1DC1426A0();
  sub_1DC0926D8(v0 + *(int *)(v1 + 48), (uint64_t (*)(_QWORD))type metadata accessor for StockFeedMastheadViewLayoutAttributes);
  sub_1DC0926D8(v0, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedMastheadModel);
  return 0;
}

uint64_t sub_1DC1AFB48@<X0>(uint64_t a1@<X8>)
{
  uint64_t v7;
  uint64_t v8;

  __asm { FMOV            V0.2D, #-8.0 }
  *(_OWORD *)a1 = _Q0;
  *(_OWORD *)(a1 + 16) = _Q0;
  *(_QWORD *)(a1 + 32) = 0x4018000000000000;
  v7 = *MEMORY[0x1E0DB8998];
  v8 = sub_1DC404E70();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(a1, v7, v8);
}

void sub_1DC1AFB9C()
{
  sub_1DC1AFBB8();
}

void sub_1DC1AFBB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;

  v1 = sub_1DC407B04();
  MEMORY[0x1E0C80A78](v1);
  v2 = type metadata accessor for StockFeedLayoutModel();
  MEMORY[0x1E0C80A78](v2);
  sub_1DC1B07C8(v0, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = (char *)sub_1DC1AFC90 + 4 * byte_1DC4138A0[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1DC1AFC90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  sub_1DC1426A0();
  sub_1DC0926D8(v1 + *(int *)(v2 + 48), (uint64_t (*)(_QWORD))type metadata accessor for StockFeedMastheadViewLayoutAttributes);
  result = sub_1DC0926D8(v1, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedMastheadModel);
  *(_QWORD *)(v0 + 32) = 0;
  *(_OWORD *)v0 = 0u;
  *(_OWORD *)(v0 + 16) = 0u;
  return result;
}

void sub_1DC1AFDBC()
{
  uint64_t v0;
  void (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v4, v0, v2);
  v1(v3);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v2);
  JUMPOUT(0x1DC1AFD9CLL);
}

void sub_1DC1AFDF4()
{
  sub_1DC1AFBB8();
}

uint64_t sub_1DC1AFE10@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t result;
  _QWORD v17[5];
  char v18;

  v2 = v1;
  v4 = sub_1DC407B04();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC1B07C8(v2, (uint64_t)v10);
  if (swift_getEnumCaseMultiPayload() == 7)
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
    sub_1DC407AF8();
    v11 = v17[1];
    v12 = v17[2];
    v13 = v17[3];
    v14 = v17[4];
    v15 = v18;
    result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  else
  {
    result = sub_1DC0926D8((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedLayoutModel);
    v11 = 0;
    v12 = 0;
    v13 = 0;
    v14 = 0;
    v15 = 1;
  }
  *(_QWORD *)a1 = v11;
  *(_QWORD *)(a1 + 8) = v12;
  *(_QWORD *)(a1 + 16) = v13;
  *(_QWORD *)(a1 + 24) = v14;
  *(_BYTE *)(a1 + 32) = v15;
  return result;
}

uint64_t sub_1DC1AFF4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  v1 = v0;
  v2 = sub_1DC407B04();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC1B07C8(v1, (uint64_t)v8);
  if (swift_getEnumCaseMultiPayload() == 7)
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    v9 = sub_1DC407AC8();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  else
  {
    sub_1DC0926D8((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedLayoutModel);
    return MEMORY[0x1E0DEE9D8];
  }
  return v9;
}

void sub_1DC1B0050()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;

  v1 = sub_1DC407B04();
  MEMORY[0x1E0C80A78](v1);
  v2 = type metadata accessor for StockFeedLayoutModel();
  MEMORY[0x1E0C80A78](v2);
  sub_1DC1B07C8(v0, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = (char *)sub_1DC1B011C + 4 * byte_1DC4138A8[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1DC1B011C()
{
  uint64_t v0;
  char v1;
  uint64_t v2;

  sub_1DC1426A0();
  sub_1DC0926D8(v0 + *(int *)(v2 + 48), (uint64_t (*)(_QWORD))type metadata accessor for StockFeedMastheadViewLayoutAttributes);
  sub_1DC0926D8(v0, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedMastheadModel);
  return v1 & 1;
}

void sub_1DC1B023C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v2, v0, v1);
  sub_1DC407AE0();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v1);
  JUMPOUT(0x1DC1B021CLL);
}

void sub_1DC1B0274()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;

  v1 = sub_1DC407B04();
  MEMORY[0x1E0C80A78](v1);
  v2 = type metadata accessor for StockFeedLayoutModel();
  MEMORY[0x1E0C80A78](v2);
  sub_1DC1B07C8(v0, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = (char *)sub_1DC1B0340 + 4 * byte_1DC4138B0[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1DC1B0340()
{
  uint64_t v0;
  uint64_t v1;

  sub_1DC1426A0();
  sub_1DC0926D8(v0 + *(int *)(v1 + 48), (uint64_t (*)(_QWORD))type metadata accessor for StockFeedMastheadViewLayoutAttributes);
  sub_1DC0926D8(v0, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedMastheadModel);
  return 0;
}

void sub_1DC1B0464()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v2, v0, v1);
  sub_1DC407AB0();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v1);
  JUMPOUT(0x1DC1B0444);
}

void sub_1DC1B049C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;

  v1 = sub_1DC407B04();
  MEMORY[0x1E0C80A78](v1);
  v2 = type metadata accessor for StockFeedLayoutModel();
  MEMORY[0x1E0C80A78](v2);
  sub_1DC1B07C8(v0, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = (char *)sub_1DC1B0568 + 4 * byte_1DC4138B8[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1DC1B0568()
{
  uint64_t v0;
  uint64_t v1;

  sub_1DC1426A0();
  sub_1DC0926D8(v0 + *(int *)(v1 + 48), (uint64_t (*)(_QWORD))type metadata accessor for StockFeedMastheadViewLayoutAttributes);
  sub_1DC0926D8(v0, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedMastheadModel);
  return 0;
}

void sub_1DC1B068C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v2, v0, v1);
  sub_1DC407A8C();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v1);
  JUMPOUT(0x1DC1B066CLL);
}

uint64_t sub_1DC1B06C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  v1 = v0;
  v2 = sub_1DC407B04();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC1B07C8(v1, (uint64_t)v8);
  if (swift_getEnumCaseMultiPayload() == 7)
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    v9 = sub_1DC407A80();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  else
  {
    sub_1DC0926D8((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedLayoutModel);
    return MEMORY[0x1E0DEE9E8];
  }
  return v9;
}

uint64_t sub_1DC1B07C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for StockFeedLayoutModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC1B080C(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1DC1B0850(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

void sub_1DC1B0878()
{
  unint64_t TupleTypeMetadata3;
  uint64_t v1;

  if (!qword_1F034DAE8)
  {
    sub_1DC408044();
    sub_1DC40802C();
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1)
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_1F034DAE8);
  }
}

uint64_t sub_1DC1B08F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for StockFeedMastheadViewLayoutAttributes();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1DC1B0934(void *a1, char a2)
{
  id v4;
  objc_class *v5;
  Class v6;
  objc_class *v7;
  UIColor v8;
  objc_class *v9;
  Class v10;
  char v11;
  Class v12;
  Class v13;
  Class v14;
  Class isa;
  id v16;

  v4 = objc_msgSend(a1, sel_titleLabel);
  if (v4)
  {
    v16 = v4;
    v5 = (objc_class *)objc_msgSend(v4, sel_font);
    if (v5)
    {
      v6 = v5;
      v7 = (objc_class *)objc_msgSend(v16, sel_color);
      if (v7)
      {
        v8.super.isa = v7;
        v9 = (objc_class *)objc_msgSend(a1, sel_currentAttributedTitle);
        if (v9)
        {
          v10 = v9;
          if ((a2 & 1) != 0)
            v11 = sub_1DC4099E8();
          else
            v11 = 1;
          swift_bridgeObjectRelease();
          isa = NSAttributedString.appendingAccessibilityDWCPriceChangeArrow(pointingUpward:withFont:withColor:)(v11 & 1, (UIFont)v6, v8).super.isa;
          objc_msgSend(a1, sel_setAttributedTitle_forState_, isa, 0);

          v14 = v8.super.isa;
          v8.super.isa = isa;
        }
        else
        {
          v10 = v6;
          v14 = (Class)v16;
        }

        v13 = v10;
        v6 = v8.super.isa;
      }
      else
      {
        v13 = (Class)v16;
      }

      v12 = v6;
    }
    else
    {
      v12 = (Class)v16;
    }

  }
}

void sub_1DC1B0AA8(uint64_t a1, double *a2, char *a3)
{
  uint64_t v3;
  uint64_t v4;
  id v8;
  id v9;
  BOOL v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t inited;
  void *v17;
  void *v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(uint64_t, uint64_t);
  id v25;
  id v26;
  id v27;
  uint64_t v28;
  id v29;
  void *v30;
  void *v31;
  id v32;
  id v33;
  id v34;
  _QWORD v35[5];
  double __dst[36];

  v4 = v3;
  objc_msgSend(a3, sel_setHidden_, 0);
  v8 = objc_msgSend(a3, sel_traitCollection);
  v9 = objc_msgSend(v8, sel_horizontalSizeClass);

  if (v9)
    v10 = v9 == (id)2;
  else
    v10 = 1;
  if (v10)
  {
    objc_msgSend(a3, sel_setFrame_, 0.0, 0.0, 0.0, 0.0);
    objc_msgSend(a3, sel_setHidden_, 1);
  }
  else if (v9 == (id)1)
  {
    objc_msgSend(a3, sel_setFrame_, *a2, a2[1], a2[2], a2[3]);
    v11 = *(void **)&a3[OBJC_IVAR____TtC8StocksUI18StockFeedPriceView_quoteSummaryView];
    objc_msgSend(v11, (SEL)&selRef_initWithUnsignedInteger_, a2[4], a2[5], a2[6], a2[7]);
    v12 = type metadata accessor for StockFeedMastheadModel();
    v13 = a1 + *(int *)(v12 + 28);
    memcpy(__dst, a2 + 8, 0x111uLL);
    sub_1DC2CAD1C(v13, __dst, (char *)v11);
    v34 = *(id *)&a3[OBJC_IVAR____TtC8StocksUI18StockFeedPriceView_exchangeLabel];
    swift_beginAccess();
    sub_1DC0824D4(v4 + 16, (uint64_t)v35);
    v14 = __swift_project_boxed_opaque_existential_1(v35, v35[3]);
    sub_1DC0FB1E8(a1 + *(int *)(v12 + 20));
    v15 = (_QWORD *)*v14;
    sub_1DC0FB194();
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1DC40C740;
    v17 = (void *)*MEMORY[0x1E0DC1138];
    *(_QWORD *)(inited + 32) = *MEMORY[0x1E0DC1138];
    v18 = (void *)v15[2];
    v19 = sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FB00);
    *(_QWORD *)(inited + 40) = v18;
    v20 = (void *)*MEMORY[0x1E0DC1140];
    *(_QWORD *)(inited + 64) = v19;
    *(_QWORD *)(inited + 72) = v20;
    v21 = v15[6];
    v22 = v15[7];
    __swift_project_boxed_opaque_existential_1(v15 + 3, v21);
    v23 = *(_QWORD *)(v22 + 16);
    v24 = *(uint64_t (**)(uint64_t, uint64_t))(v23 + 200);
    swift_bridgeObjectRetain();
    v25 = v17;
    v26 = v18;
    v27 = v20;
    v28 = v24(v21, v23);
    *(_QWORD *)(inited + 104) = sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FB30);
    *(_QWORD *)(inited + 80) = v28;
    sub_1DC0FA3C4(inited);
    v29 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
    v30 = (void *)sub_1DC408A1C();
    swift_bridgeObjectRelease();
    type metadata accessor for Key(0);
    sub_1DC081B48((unint64_t *)&qword_1EDB3F988, 255, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1DC40D90C);
    v31 = (void *)sub_1DC408980();
    swift_bridgeObjectRelease();
    v32 = objc_msgSend(v29, sel_initWithString_attributes_, v30, v31);
    swift_bridgeObjectRelease();

    objc_msgSend(v34, sel_setAttributedText_, v32);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
    objc_msgSend(v34, sel_setFrame_, a2[43], a2[44], a2[45], a2[46]);
    v33 = objc_msgSend((id)objc_opt_self(), sel_clearColor);
    objc_msgSend(a3, sel_setBackgroundColor_, v33);

  }
  else
  {
    sub_1DC409838();
    __break(1u);
  }
}

uint64_t sub_1DC1B0EB4()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for StockFeedPriceViewRenderer()
{
  return objc_opt_self();
}

uint64_t sub_1DC1B0F00(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = sub_1DC081B48(&qword_1EDB36E10, a2, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedPriceViewRenderer, (uint64_t)&unk_1DC413C7C);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t SceneStateManagerBridge.__allocating_init(activityReceiver:)(uint64_t a1)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  return result;
}

uint64_t SceneStateManagerBridge.deinit()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  return v0;
}

uint64_t SceneStateManagerBridge.__deallocating_deinit()
{
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

Swift::Void __swiftcall SceneStateManagerBridge.sceneDidBecomeActive()()
{
  uint64_t v0;

  objc_msgSend(*(id *)(v0 + 16), sel_sceneDidBecomeActive);
}

Swift::Void __swiftcall SceneStateManagerBridge.sceneWillEnterForeground()()
{
  uint64_t v0;

  objc_msgSend(*(id *)(v0 + 16), sel_sceneWillEnterForeground);
}

Swift::Void __swiftcall SceneStateManagerBridge.sceneDidEnterBackground()()
{
  uint64_t v0;

  objc_msgSend(*(id *)(v0 + 16), sel_sceneDidEnterBackground);
}

Swift::Void __swiftcall SceneStateManagerBridge.sceneDidEnterBackground(with:)(Swift::String with)
{
  sub_1DC1B1008(with._countAndFlagsBits, (uint64_t)with._object, (SEL *)&selRef_sceneDidEnterBackgroundWithSceneID_);
}

id SceneStateManagerBridge.sceneWillConnectToSession(withOptions:)()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), sel_sceneWillConnect);
}

Swift::Void __swiftcall SceneStateManagerBridge.sceneWillResignActive(with:)(Swift::String with)
{
  sub_1DC1B1008(with._countAndFlagsBits, (uint64_t)with._object, (SEL *)&selRef_sceneWillResignActiveWithSceneID_);
}

void sub_1DC1B1008(uint64_t a1, uint64_t a2, SEL *a3)
{
  uint64_t v3;
  void *v5;
  id v6;

  v5 = *(void **)(v3 + 16);
  swift_unknownObjectRetain();
  v6 = (id)sub_1DC408A1C();
  objc_msgSend(v5, *a3, v6);
  swift_unknownObjectRelease();

}

void sub_1DC1B1074(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1DC1B109C(a1, a2, a3, a4, (SEL *)&selRef_sceneWillResignActiveWithSceneID_);
}

id sub_1DC1B1080()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), sel_sceneDidEnterBackground);
}

void sub_1DC1B1090(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1DC1B109C(a1, a2, a3, a4, (SEL *)&selRef_sceneDidEnterBackgroundWithSceneID_);
}

void sub_1DC1B109C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, SEL *a5)
{
  uint64_t v5;
  void *v7;
  id v8;

  v7 = *(void **)(v5 + 16);
  swift_unknownObjectRetain();
  v8 = (id)sub_1DC408A1C();
  objc_msgSend(v7, *a5, v8);
  swift_unknownObjectRelease();

}

uint64_t method lookup function for SceneStateManagerBridge()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SceneStateManagerBridge.__allocating_init(activityReceiver:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t sub_1DC1B1124(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1DC4011BC();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t sub_1DC1B1160(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1DC4011BC();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t sub_1DC1B1194(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1DC4011BC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_1DC1B11D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1DC4011BC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_1DC1B121C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1DC4011BC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_1DC1B1260(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1DC4011BC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_1DC1B12A4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC1B12B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1DC4011BC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_1DC1B12EC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC1B12F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1DC4011BC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for HeadlineViewModel()
{
  uint64_t result;

  result = qword_1F034DB48;
  if (!qword_1F034DB48)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1DC1B1374()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1DC4011BC();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t dispatch thunk of StockPriceDataRefreshManagerType.refreshWatchlistPriceData()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of StockPriceDataRefreshManagerType.pushSidecarStock(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of StockPriceDataRefreshManagerType.popSidecarStock(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

void sub_1DC1B13F4()
{
  id v0;
  void *v1;
  id v2;

  if (qword_1EDB2EC90 != -1)
    swift_once();
  v0 = (id)qword_1EDB2EC80;
  sub_1DC408FE0();
  sub_1DC403F28();

  sub_1DC400514();
  sub_1DC402E0C();
  sub_1DC402CBC();
  swift_release();
  v1 = (void *)sub_1DC402C80();
  sub_1DC402D88();
  swift_release();

  sub_1DC0ACADC();
  v2 = (id)sub_1DC409148();
  sub_1DC402D1C();
  swift_release();
  swift_release();

}

uint64_t sub_1DC1B1540@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  v2 = sub_1DC400514();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(a1, 1, 1, v2);
}

uint64_t sub_1DC1B1588()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_1DC1B15D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v5;
  uint64_t v6;
  uint64_t result;
  double v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;

  if (qword_1EDB2EC90 != -1)
    swift_once();
  v5 = (id)qword_1EDB2EC80;
  sub_1DC408FC8();
  sub_1DC0E7FF0();
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1DC40FA70;
  result = sub_1DC408E00();
  if ((~*(_QWORD *)&v8 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (v8 <= -9.22337204e18)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (v8 < 9.22337204e18)
  {
    v9 = sub_1DC4099B8();
    v11 = v10;
    v12 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v6 + 56) = MEMORY[0x1E0DEA968];
    v13 = sub_1DC0E7FAC();
    *(_QWORD *)(v6 + 32) = v9;
    *(_QWORD *)(v6 + 40) = v11;
    *(_QWORD *)(v6 + 96) = v12;
    *(_QWORD *)(v6 + 104) = v13;
    *(_QWORD *)(v6 + 64) = v13;
    *(_QWORD *)(v6 + 72) = a2;
    *(_QWORD *)(v6 + 80) = a3;
    sub_1DC0A3390(0, (unint64_t *)&qword_1EDB400E0);
    swift_bridgeObjectRetain();
    sub_1DC409808();
    *(_QWORD *)(v6 + 136) = v12;
    *(_QWORD *)(v6 + 144) = v13;
    *(_QWORD *)(v6 + 112) = 0;
    *(_QWORD *)(v6 + 120) = 0xE000000000000000;
    sub_1DC403F28();

    return swift_bridgeObjectRelease();
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_1DC1B17B4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  void *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v3 = sub_1DC4010E4();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x1E0C80A78](v3);
  sub_1DC089DA4(0, &qword_1EDB3F630, v6, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1DC402E0C();
  sub_1DC0ACADC();
  v7 = (void *)sub_1DC409148();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v3);
  v8 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v9 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v9 + v8, (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
  type metadata accessor for StockPriceDataRefreshManager();
  sub_1DC402D1C();
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t sub_1DC1B1910(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  void (*v27)(char *, uint64_t);
  void (*v28)(uint64_t, uint64_t, uint64_t);
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(uint64_t, uint64_t, uint64_t);
  char *v35;
  unint64_t v36;
  uint64_t v37;
  void *v38;
  char *v39;
  uint64_t (*v40)(uint64_t);
  char *v41;
  uint64_t v42;
  void *v43;
  uint64_t result;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  unint64_t v51;
  void (*v52)(char *, uint64_t);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(_QWORD, _QWORD, _QWORD, __n128);
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD aBlock[9];

  v4 = v3;
  v68 = a2;
  v7 = sub_1DC40724C();
  v66 = *(_QWORD *)(v7 - 8);
  v67 = v7;
  MEMORY[0x1E0C80A78](v7);
  v65 = (char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1DC407270();
  v63 = *(_QWORD *)(v9 - 8);
  v64 = v9;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1DC407258();
  v60 = *(_QWORD *)(v12 - 8);
  v61 = v12;
  MEMORY[0x1E0C80A78](v12);
  v58 = (char *)&v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1DC4010E4();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v59 = v16;
  v20 = MEMORY[0x1E0C80A78](v17);
  v21 = (char *)&v51 - v18;
  v22 = *a1;
  v23 = *(_QWORD *)(*a1 + 16);
  v62 = v11;
  v69 = a3;
  if (!v23)
  {
    v28 = *(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16);
    v55 = v3;
LABEL_7:
    v29 = v69;
    v30 = *(void **)(v68 + 144);
    v31 = v19;
    v28(v19, v69, v14);
    objc_msgSend(v30, sel_addObject_, sub_1DC409A24());
    swift_unknownObjectRelease();
    sub_1DC0ACADC();
    v32 = v60;
    v33 = v61;
    v34 = v28;
    v35 = v58;
    (*(void (**)(char *, _QWORD, uint64_t))(v60 + 104))(v58, *MEMORY[0x1E0DEF540], v61);
    v57 = (void (*)(_QWORD, _QWORD, _QWORD, __n128))sub_1DC40916C();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v35, v33);
    v34(v31, v29, v14);
    v36 = (*(unsigned __int8 *)(v15 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
    v37 = swift_allocObject();
    *(_QWORD *)(v37 + 16) = v68;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v15 + 32))(v37 + v36, v31, v14);
    aBlock[4] = sub_1DC1B2618;
    aBlock[5] = v37;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1DC081B88;
    aBlock[3] = &block_descriptor_6;
    v38 = _Block_copy(aBlock);
    swift_retain();
    v39 = v62;
    sub_1DC407264();
    aBlock[8] = MEMORY[0x1E0DEE9D8];
    v40 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
    sub_1DC081B48(&qword_1EDB275A0, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    sub_1DC089DA4(0, (unint64_t *)&unk_1EDB3F710, v40, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1DC0B23DC((unint64_t *)&qword_1EDB3F720, (unint64_t *)&unk_1EDB3F710, v40);
    v41 = v65;
    v42 = v67;
    sub_1DC40964C();
    v43 = v57;
    MEMORY[0x1DF0C99C8](0, v39, v41, v38);
    _Block_release(v38);

    (*(void (**)(char *, uint64_t))(v66 + 8))(v41, v42);
    (*(void (**)(char *, uint64_t))(v63 + 8))(v39, v64);
    return swift_release();
  }
  v54 = v19;
  v51 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  v24 = v22 + v51;
  v57 = *(void (**)(_QWORD, _QWORD, _QWORD, __n128))(v15 + 16);
  v57((char *)&v51 - v18, v22 + v51, v14, v20);
  v25 = sub_1DC081B48((unint64_t *)&qword_1EDB28DD8, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF0D0], MEMORY[0x1E0DAF0E8]);
  swift_bridgeObjectRetain();
  v56 = v25;
  v26 = sub_1DC4089F8();
  v27 = *(void (**)(char *, uint64_t))(v15 + 8);
  v27(v21, v14);
  if ((v26 & 1) != 0)
    return swift_bridgeObjectRelease();
  if (v23 == 1)
  {
    v55 = v4;
LABEL_5:
    swift_bridgeObjectRelease();
    v19 = v54;
    v28 = (void (*)(uint64_t, uint64_t, uint64_t))v57;
    goto LABEL_7;
  }
  v53 = *(_QWORD *)(v15 + 72);
  v45 = v24 + v53;
  v28 = (void (*)(uint64_t, uint64_t, uint64_t))v57;
  ((void (*)(char *, uint64_t, uint64_t))v57)(v21, v45, v14);
  v46 = sub_1DC4089F8();
  v27(v21, v14);
  if ((v46 & 1) != 0)
    return swift_bridgeObjectRelease();
  v55 = v4;
  if (v23 == 2)
  {
    swift_bridgeObjectRelease();
    v19 = v54;
    goto LABEL_7;
  }
  v52 = v27;
  v47 = v22 + v51 + 2 * v53;
  v48 = 2;
  while (1)
  {
    result = ((uint64_t (*)(char *, uint64_t, uint64_t))v57)(v21, v47, v14);
    v49 = v48 + 1;
    if (__OFADD__(v48, 1))
      break;
    v50 = sub_1DC4089F8();
    v52(v21, v14);
    if ((v50 & 1) != 0)
      return swift_bridgeObjectRelease();
    ++v48;
    v47 += v53;
    if (v49 == v23)
      goto LABEL_5;
  }
  __break(1u);
  return result;
}

uint64_t sub_1DC1B1E88(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t, uint64_t);
  void (*v13)(char *, uint64_t);
  uint64_t v15;

  v2 = sub_1DC4024D0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v15 - v7;
  __swift_project_boxed_opaque_existential_1((_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 80));
  sub_1DC11200C();
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1DC40DC10;
  *(_QWORD *)(v9 + 32) = sub_1DC4010B4();
  *(_QWORD *)(v9 + 40) = v10;
  v11 = *MEMORY[0x1E0DB32A8];
  v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 104);
  v12(v8, v11, v2);
  v12(v5, v11, v2);
  sub_1DC400CF4();
  swift_release();
  swift_bridgeObjectRelease();
  v13 = *(void (**)(char *, uint64_t))(v3 + 8);
  v13(v5, v2);
  return ((uint64_t (*)(char *, uint64_t))v13)(v8, v2);
}

uint64_t sub_1DC1B1FD4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v3 = sub_1DC4010E4();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x1E0C80A78](v3);
  sub_1DC402698();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3);
  v6 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = v1;
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v7 + v6, (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
  swift_retain();
  sub_1DC40268C();
  return swift_release();
}

uint64_t sub_1DC1B20C4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v9;

  v3 = sub_1DC4010E4();
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = *(void **)(v1 + 144);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v7 + 16))((char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3, v4);
  objc_msgSend(v6, sel_removeObject_, sub_1DC409A24());
  return swift_unknownObjectRelease();
}

void sub_1DC1B2168()
{
  uint64_t v0;
  id v1;
  void *v2;

  if (qword_1EDB2EC90 != -1)
    swift_once();
  v1 = (id)qword_1EDB2EC80;
  sub_1DC408FE0();
  sub_1DC403F28();

  *(_BYTE *)(v0 + 152) = 0;
  v2 = *(void **)(v0 + 160);
  if (v2)
  {
    objc_msgSend(v2, sel_invalidate);
    v2 = *(void **)(v0 + 160);
  }
  *(_QWORD *)(v0 + 160) = 0;

}

uint64_t sub_1DC1B2210()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  id v4;
  void *v5;
  uint64_t v6;
  id v7;
  _QWORD v9[2];

  v0 = sub_1DC402AF4();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((sub_1DC400640() & 1) != 0)
  {
    if (qword_1EDB2EC90 != -1)
      swift_once();
    v4 = (id)qword_1EDB2EC80;
    sub_1DC408FE0();
    sub_1DC403F28();

    v9[0] = 0x68736572666572;
    v9[1] = 0xE700000000000000;
    sub_1DC4026BC();
    swift_bridgeObjectRelease();
    v5 = (void *)sub_1DC402C80();
    v6 = sub_1DC402D04();
    swift_release();

  }
  else
  {
    if (qword_1EDB2EC90 != -1)
      swift_once();
    v7 = (id)qword_1EDB2EC80;
    sub_1DC408FE0();
    sub_1DC403F28();

    (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB42A8], v0);
    sub_1DC089DA4(0, qword_1F034DB80, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB42B8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    return sub_1DC402D58();
  }
  return v6;
}

uint64_t sub_1DC1B2428@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *MEMORY[0x1E0DB42B0];
  v3 = sub_1DC402AF4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

uint64_t sub_1DC1B2480()
{
  return sub_1DC402B0C();
}

uint64_t sub_1DC1B2488()
{
  return sub_1DC402B00();
}

uint64_t sub_1DC1B2490()
{
  void *v0;
  uint64_t v1;

  sub_1DC40070C();
  sub_1DC402E0C();
  swift_retain();
  v0 = (void *)sub_1DC402C80();
  sub_1DC402AF4();
  v1 = sub_1DC402CF8();
  swift_release();
  swift_release();

  return v1;
}

uint64_t sub_1DC1B2520()
{
  return sub_1DC402B18();
}

uint64_t sub_1DC1B252C()
{
  return sub_1DC1B2624(sub_1DC1B17B4);
}

uint64_t sub_1DC1B2538()
{
  return sub_1DC10C4A4((uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DAEA10]);
}

uint64_t sub_1DC1B2554()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_1DC4010E4();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_1DC1B25B4(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(sub_1DC4010E4() - 8) + 80);
  return sub_1DC1B1910(a1, a2, v2 + ((v5 + 16) & ~v5));
}

uint64_t sub_1DC1B2618()
{
  return sub_1DC1B2624((uint64_t (*)(_QWORD, uint64_t))sub_1DC1B1E88);
}

uint64_t sub_1DC1B2624(uint64_t (*a1)(_QWORD, uint64_t))
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(sub_1DC4010E4() - 8) + 80);
  return a1(*(_QWORD *)(v1 + 16), v1 + ((v2 + 24) & ~v2));
}

uint64_t sub_1DC1B2664()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1DC1B2690()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1DC1B26B4(uint64_t a1)
{
  uint64_t v1;

  return sub_1DC1B15D4(a1, *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_1DC1B26C0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

void sub_1DC1B26FC()
{
  sub_1DC1B13F4();
}

uint64_t sub_1DC1B2704()
{
  uint64_t v0;

  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 120));
  return sub_1DC400DD8();
}

uint64_t sub_1DC1B274C()
{
  return sub_1DC1B2210();
}

uint64_t sub_1DC1B2770()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC1B277C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1DC4052FC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_1DC1B27B8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC1B27C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1DC4052FC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_1DC1B2804(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v24;
  void *v25;
  uint64_t inited;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t *v34;
  char *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  _OWORD v43[2];
  uint64_t v44;
  _OWORD v45[2];
  uint64_t v46;

  v40 = a3;
  v42 = a2;
  v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1DC089DA4(0, (unint64_t *)&unk_1EDB29810, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD3C8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v5);
  v41 = (char *)&v34 - v6;
  v39 = type metadata accessor for StocksActivity(0);
  MEMORY[0x1E0C80A78](v39);
  v8 = (unint64_t *)((char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = sub_1DC4080F8();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1DC4080EC();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC089DA4(0, (unint64_t *)&unk_1F034DBB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5F770], v4);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v34 - v17;
  v19 = sub_1DC408380();
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v22 = (char *)&v34 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC1B312C(a1, (uint64_t)v18);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19) == 1)
    return sub_1DC0A6180((uint64_t)v18, (uint64_t)&unk_1F034DBB0, (uint64_t)MEMORY[0x1E0D5F770], (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD))sub_1DC089DA4);
  v35 = v15;
  v36 = v13;
  v37 = v11;
  v38 = v12;
  v34 = v8;
  (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v22, v18, v19);
  v24 = v42;
  if (v42)
  {
    swift_retain();
    v25 = (void *)sub_1DC408368();
    sub_1DC089DA4(0, &qword_1F034DC28, (uint64_t (*)(uint64_t))type metadata accessor for ActivityType, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1DC40DC10;
    *(_QWORD *)(inited + 32) = sub_1DC408FF8();
    v27 = sub_1DC368898(inited);
    swift_setDeallocating();
    type metadata accessor for ActivityType(0);
    swift_arrayDestroy();
    LOBYTE(inited) = sub_1DC151890((uint64_t)v25, v27);

    swift_bridgeObjectRelease();
    if ((inited & 1) == 0
      || (v28 = v24,
          v29 = v35,
          sub_1DC408374(),
          sub_1DC4080E0(),
          (*(void (**)(char *, uint64_t))(v36 + 8))(v29, v38),
          v30 = sub_1DC408020(),
          v30 == 2))
    {
      (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
      return swift_release();
    }
    v31 = (uint64_t)v34;
    *v34 = v28 | ((unint64_t)(v30 & 1) << 61);
    swift_storeEnumTagMultiPayload();
    v32 = sub_1DC403340();
    v33 = (uint64_t)v41;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v41, 1, 1, v32);
    v46 = 0;
    memset(v45, 0, sizeof(v45));
    v44 = 0;
    memset(v43, 0, sizeof(v43));
    swift_retain();
    sub_1DC22BAE0(v31, 0, v33, (uint64_t)v45, 0, 0, (uint64_t)v43);
    swift_release();
    swift_release();
    sub_1DC0A6180((uint64_t)v43, (uint64_t)&qword_1EDB29410, (uint64_t)&unk_1EDB29400, MEMORY[0x1E0DB35B0], (uint64_t (*)(_QWORD))sub_1DC0A6204);
    sub_1DC0A6180((uint64_t)v45, (uint64_t)&qword_1EDB2ACD0, (uint64_t)&qword_1EDB2ACC0, MEMORY[0x1E0D53040], (uint64_t (*)(_QWORD))sub_1DC0A6204);
    sub_1DC0A6180(v33, (uint64_t)&unk_1EDB29810, (uint64_t)MEMORY[0x1E0DAD3C8], (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD))sub_1DC089DA4);
    sub_1DC1B3F14(v31);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v22, v19);
}

uint64_t sub_1DC1B2CD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void *v18;
  char v19;
  int v20;
  id v21;
  uint64_t v22;
  char *v23;
  void *v24;
  _QWORD *v25;
  id v26;
  uint64_t v27;
  unint64_t *v28;
  unint64_t *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v6 = sub_1DC4080EC();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (id *)((char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1DC089DA4(0, (unint64_t *)&unk_1F034DBB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5F770], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v33 - v11;
  v13 = sub_1DC408380();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC1B312C(a1, (uint64_t)v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
    return sub_1DC0A6180((uint64_t)v12, (uint64_t)&unk_1F034DBB0, (uint64_t)MEMORY[0x1E0D5F770], (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD))sub_1DC089DA4);
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v12, v13);
  if (!a2)
    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  sub_1DC405410();
  sub_1DC0A3390(0, (unint64_t *)&qword_1EDB29C40);
  sub_1DC4018AC();
  if ((swift_dynamicCast() & 1) == 0)
    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  v34 = a3;
  v18 = (void *)sub_1DC408368();
  v19 = sub_1DC1B3188();

  if ((v19 & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    return swift_release();
  }
  sub_1DC408374();
  v20 = (*(uint64_t (**)(id *, uint64_t))(v7 + 88))(v9, v6);
  if (v20 == *MEMORY[0x1E0D5E458])
  {
    (*(void (**)(id *, uint64_t))(v7 + 96))(v9, v6);
    v21 = *v9;
    swift_bridgeObjectRelease();
    sub_1DC1B3654();
    v23 = (char *)v9 + *(int *)(v22 + 64);
    swift_bridgeObjectRelease();
    v24 = (void *)sub_1DC408368();
    v25 = (_QWORD *)swift_allocObject();
    v25[2] = v21;
    v25[3] = a2;
    v25[4] = v34;
    v25[5] = v24;
    swift_unknownObjectRetain();
    swift_retain();
    swift_retain();
    v26 = v24;
    sub_1DC401828();
    swift_release();
    swift_unknownObjectRelease();

    swift_release();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    v27 = sub_1DC4080F8();
    return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v27 - 8) + 8))(v23, v27);
  }
  if (v20 == *MEMORY[0x1E0D5E448])
  {
    (*(void (**)(id *, uint64_t))(v7 + 96))(v9, v6);

    v28 = (unint64_t *)&unk_1F034DBC0;
    v29 = (unint64_t *)&unk_1F034DBC8;
LABEL_15:
    sub_1DC1B355C(0, v28, v29);
    goto LABEL_16;
  }
  if (v20 != *MEMORY[0x1E0D5E438])
  {
    if (v20 != *MEMORY[0x1E0D5E440])
    {
      swift_release();
      (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
      return (*(uint64_t (**)(id *, uint64_t))(v7 + 8))(v9, v6);
    }
    (*(void (**)(id *, uint64_t))(v7 + 96))(v9, v6);

    v28 = (unint64_t *)&unk_1F034DBD0;
    v29 = (unint64_t *)&unk_1F034DBD8;
    goto LABEL_15;
  }
  (*(void (**)(id *, uint64_t))(v7 + 96))(v9, v6);
  swift_unknownObjectRelease();
  sub_1DC1B35D4();
LABEL_16:
  v31 = (char *)v9 + *(int *)(v30 + 48);
  v32 = sub_1DC4080F8();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v32 - 8) + 8))(v31, v32);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
}

uint64_t sub_1DC1B312C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1DC089DA4(0, (unint64_t *)&unk_1F034DBB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5F770], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC1B3188()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;

  v0 = (void *)sub_1DC409034();
  v1 = sub_1DC408A4C();
  v3 = v2;
  if (v1 == sub_1DC408A4C() && v3 == v4)
    goto LABEL_3;
  v6 = sub_1DC4099E8();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5 = 0;
  if ((v6 & 1) != 0)
    return v5 & 1;
  v0 = (void *)sub_1DC409028();
  v8 = sub_1DC408A4C();
  v10 = v9;
  if (v8 == sub_1DC408A4C() && v10 == v11)
    goto LABEL_3;
  v12 = sub_1DC4099E8();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5 = 0;
  if ((v12 & 1) != 0)
    return v5 & 1;
  v0 = (void *)sub_1DC408FEC();
  v13 = sub_1DC408A4C();
  v15 = v14;
  if (v13 == sub_1DC408A4C() && v15 == v16)
    goto LABEL_3;
  v17 = sub_1DC4099E8();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5 = 0;
  if ((v17 & 1) != 0)
    return v5 & 1;
  v0 = (void *)sub_1DC409010();
  v18 = sub_1DC408A4C();
  v20 = v19;
  if (v18 == sub_1DC408A4C() && v20 == v21)
    goto LABEL_3;
  v22 = sub_1DC4099E8();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5 = 0;
  if ((v22 & 1) != 0)
    return v5 & 1;
  v0 = (void *)sub_1DC408FF8();
  v23 = sub_1DC408A4C();
  v25 = v24;
  if (v23 == sub_1DC408A4C() && v25 == v26)
    goto LABEL_3;
  v27 = sub_1DC4099E8();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5 = 0;
  if ((v27 & 1) != 0)
    return v5 & 1;
  v0 = (void *)sub_1DC409004();
  v28 = sub_1DC408A4C();
  v30 = v29;
  if (v28 == sub_1DC408A4C() && v30 == v31)
    goto LABEL_3;
  v32 = sub_1DC4099E8();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5 = 0;
  if ((v32 & 1) != 0)
    return v5 & 1;
  v0 = (void *)sub_1DC40901C();
  v33 = sub_1DC408A4C();
  v35 = v34;
  if (v33 == sub_1DC408A4C() && v35 == v36)
  {
LABEL_3:

    swift_bridgeObjectRelease_n();
    v5 = 0;
  }
  else
  {
    v37 = sub_1DC4099E8();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v5 = 0;
    if ((v37 & 1) == 0)
    {
      v38 = (void *)sub_1DC408A1C();
      v39 = sub_1DC408A4C();
      v41 = v40;
      if (v39 == sub_1DC408A4C() && v41 == v42)
      {
        swift_bridgeObjectRelease_n();
        v5 = 0;
      }
      else
      {
        v43 = sub_1DC4099E8();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v5 = v43 ^ 1;
      }

    }
  }
  return v5 & 1;
}

void sub_1DC1B355C(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  unint64_t TupleTypeMetadata2;
  uint64_t v5;

  if (!*a2)
  {
    sub_1DC0821D4(255, a3);
    sub_1DC4080F8();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v5)
      atomic_store(TupleTypeMetadata2, a2);
  }
}

void sub_1DC1B35D4()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1F034DBE0)
  {
    sub_1DC0995E8(255, &qword_1F034DBE8);
    sub_1DC4080F8();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1F034DBE0);
  }
}

void sub_1DC1B3654()
{
  unint64_t TupleTypeMetadata;
  uint64_t v1;

  if (!qword_1F034DBF0)
  {
    MEMORY[0x1E0C80A78](0);
    sub_1DC0995E8(255, (unint64_t *)&qword_1EDB3F920);
    sub_1DC0D4B28(255, (unint64_t *)&qword_1EDB284B0);
    sub_1DC4080F8();
    TupleTypeMetadata = swift_getTupleTypeMetadata();
    if (!v1)
      atomic_store(TupleTypeMetadata, (unint64_t *)&qword_1F034DBF0);
  }
}

uint64_t sub_1DC1B377C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(_QWORD);
  void (*v29)(uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(uint64_t, uint64_t, uint64_t);
  uint64_t v42;
  void (*v43)(uint64_t, uint64_t, uint64_t);
  uint64_t v44;
  void (*v45)(uint64_t, uint64_t, uint64_t);
  id v46;
  void *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(uint64_t, uint64_t, uint64_t);
  unint64_t v59;
  uint64_t ObjectType;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unsigned int v73;
  uint64_t v74;
  uint64_t v75;
  id v76;
  uint64_t v77;
  uint64_t v78;
  __int128 v79;
  uint64_t v80;
  _OWORD v81[2];

  v67 = a5;
  v72 = a4;
  v62 = a3;
  v80 = a1;
  v6 = sub_1DC4033D0();
  v69 = *(_QWORD *)(v6 - 8);
  v70 = v6;
  MEMORY[0x1E0C80A78](v6);
  v68 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = sub_1DC402FB0();
  v56 = *(_QWORD *)(v57 - 8);
  MEMORY[0x1E0C80A78](v57);
  v55 = (char *)&v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = sub_1DC403760();
  v65 = *(_QWORD *)(v66 - 8);
  MEMORY[0x1E0C80A78](v66);
  v64 = (char *)&v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC089DA4(0, &qword_1F034E5E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB9F30], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v55 - v11;
  v13 = sub_1DC403040();
  MEMORY[0x1E0C80A78](v13);
  v71 = sub_1DC402EA8();
  v61 = *(_QWORD *)(v71 - 8);
  MEMORY[0x1E0C80A78](v71);
  v15 = (char *)&v55 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1DC4032BC();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v55 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  ObjectType = swift_getObjectType();
  v76 = a2;
  sub_1DC29A9A8((uint64_t)v19);
  sub_1DC089DA4(0, (unint64_t *)&qword_1EDB3FE40, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8178], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v21 = v20;
  v22 = sub_1DC401618();
  v23 = *(_QWORD *)(v22 - 8);
  v24 = *(unsigned __int8 *)(v23 + 80);
  v25 = (v24 + 32) & ~v24;
  v26 = v25 + *(_QWORD *)(v23 + 72);
  v77 = v21;
  v63 = v26;
  v74 = v24 | 7;
  v27 = swift_allocObject();
  v79 = xmmword_1DC40DC10;
  *(_OWORD *)(v27 + 16) = xmmword_1DC40DC10;
  v75 = v25;
  v28 = *(void (**)(_QWORD))(v23 + 104);
  v73 = *MEMORY[0x1E0CF8170];
  v78 = v22;
  v29 = (void (*)(_QWORD, _QWORD, _QWORD))v28;
  v28(v27 + v25);
  sub_1DC080808((unint64_t *)&unk_1EDB297F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD350], MEMORY[0x1E0DAD338]);
  v59 = (unint64_t)"xt feedItemIdentifier ";
  sub_1DC4015C4();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  if (v62)
  {
    sub_1DC405428();
    v30 = sub_1DC405848();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v12, 0, 1, v30);
  }
  else
  {
    v31 = sub_1DC405848();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v12, 1, 1, v31);
  }
  sub_1DC40304C();
  sub_1DC402E9C();
  v32 = swift_allocObject();
  *(_OWORD *)(v32 + 16) = v79;
  v33 = v78;
  v58 = v29;
  v29(v32 + v75, v73, v78);
  sub_1DC080808((unint64_t *)&unk_1F034DC00, (uint64_t (*)(uint64_t))MEMORY[0x1E0DACCC0], MEMORY[0x1E0DACCB0]);
  v34 = v59 | 0x8000000000000000;
  v35 = v71;
  sub_1DC4015C4();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v61 + 8))(v15, v35);
  v36 = v64;
  sub_1DC29B00C(*(void **)(v72 + 80));
  v37 = swift_allocObject();
  *(_OWORD *)(v37 + 16) = v79;
  v38 = v75;
  v39 = v73;
  v40 = v33;
  v41 = v58;
  v58(v37 + v75, v73, v40);
  sub_1DC080808((unint64_t *)&unk_1EDB298F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD978], MEMORY[0x1E0DAD968]);
  v71 = v34;
  v42 = v66;
  sub_1DC4015C4();
  swift_bridgeObjectRelease();
  v43 = v41;
  v44 = v38;
  (*(void (**)(char *, uint64_t))(v65 + 8))(v36, v42);
  v45 = v43;
  v46 = objc_msgSend(v76, sel_sourceChannel);
  if (v46)
  {
    v47 = v46;
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v72 + 40), *(_QWORD *)(v72 + 64));
    v48 = v55;
    sub_1DC292AD8(v47);
    v49 = swift_allocObject();
    *(_OWORD *)(v49 + 16) = v79;
    v45(v49 + v38, v39, v78);
    sub_1DC080808((unint64_t *)&unk_1EDB29750, (uint64_t (*)(uint64_t))MEMORY[0x1E0DACE70], MEMORY[0x1E0DACE60]);
    v50 = v57;
    sub_1DC4015C4();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v56 + 8))(v48, v50);
  }
  sub_1DC408A4C();
  v51 = v68;
  sub_1DC4033C4();
  v52 = swift_allocObject();
  *(_OWORD *)(v52 + 16) = v79;
  v45(v52 + v44, v39, v78);
  sub_1DC080808(&qword_1F034DC10, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD470], MEMORY[0x1E0DAD460]);
  v53 = v70;
  sub_1DC4015C4();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v69 + 8))(v51, v53);
  sub_1DC402F20();
  sub_1DC080808((unint64_t *)&unk_1F034DC18, (uint64_t (*)(uint64_t))MEMORY[0x1E0DACD50], MEMORY[0x1E0DACD48]);
  memset(v81, 0, sizeof(v81));
  sub_1DC4015DC();
  return sub_1DC150744((uint64_t)v81);
}

uint64_t sub_1DC1B3ECC()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1DC1B3F08(uint64_t a1)
{
  uint64_t v1;

  return sub_1DC1B377C(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_1DC1B3F14(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for StocksActivity(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DC1B3F50(uint64_t a1)
{
  uint64_t v1;

  if ((*(_BYTE *)(v1 + *(int *)(a1 + 24)) & 1) != 0)
    return MEMORY[0x1E0DEE9D8];
  else
    return sub_1DC408CE0();
}

unint64_t sub_1DC1B3F74(uint64_t a1)
{
  uint64_t v1;

  if ((*(_BYTE *)(v1 + *(int *)(a1 + 24)) & 1) != 0)
    return sub_1DC1A1F08(MEMORY[0x1E0DEE9D8]);
  else
    return sub_1DC408CEC();
}

double sub_1DC1B3F98(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t (*v6)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  double v9;
  double v10;
  uint64_t v12;

  sub_1DC0FEF78(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0990BC(v1 + *(int *)(a1 + 28), (uint64_t)v5, v6);
  v7 = sub_1DC4073A8();
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v7) == 1)
  {
    sub_1DC0926D8((uint64_t)v5, (uint64_t (*)(_QWORD))sub_1DC0FEF78);
    return 1.0;
  }
  else
  {
    sub_1DC407354();
    v9 = v10;
    (*(void (**)(char *, uint64_t))(v8 + 8))(v5, v7);
  }
  return v9;
}

uint64_t sub_1DC1B4078()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  v0 = sub_1DC106868();
  v2 = v1;
  if (v0 == sub_1DC106868() && v2 == v3)
    v4 = 1;
  else
    v4 = sub_1DC4099E8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4 & 1;
}

uint64_t sub_1DC1B4108()
{
  sub_1DC1B41C8(&qword_1F034DC48, (uint64_t)&unk_1DC414028);
  return sub_1DC407DE0();
}

uint64_t sub_1DC1B4140()
{
  return 0x6B636F7453;
}

uint64_t sub_1DC1B415C()
{
  return sub_1DC1B41C8(&qword_1F034DC30, (uint64_t)&unk_1DC413F90);
}

uint64_t sub_1DC1B4180()
{
  return sub_1DC1B41C8(&qword_1F034DC38, (uint64_t)&unk_1DC414000);
}

uint64_t sub_1DC1B41A4()
{
  return sub_1DC1B41C8(&qword_1F034DC40, (uint64_t)&unk_1DC413FD8);
}

uint64_t sub_1DC1B41C8(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for StockForYouFeedGroup();
    result = MEMORY[0x1DF0CAB8C](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

_QWORD *sub_1DC1B4208(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1DC4010E4();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[6];
    *(_QWORD *)((char *)a1 + a3[5]) = *(_QWORD *)((char *)a2 + a3[5]);
    *((_BYTE *)a1 + v8) = *((_BYTE *)a2 + v8);
    v9 = a3[7];
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_1DC4073A8();
    v13 = *(_QWORD *)(v12 - 8);
    v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
    swift_bridgeObjectRetain();
    if (v14(v11, 1, v12))
    {
      sub_1DC0FEF78(0);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
  }
  return a1;
}

uint64_t sub_1DC1B4330(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;

  v6 = sub_1DC4010E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  v7 = a3[7];
  v8 = (void *)(a1 + v7);
  v9 = (void *)(a2 + v7);
  v10 = sub_1DC4073A8();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 24))(v8, v9, v10);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    sub_1DC0FEF78(0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v8, v9, v10);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  return a1;
}

uint64_t sub_1DC1B447C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = sub_1DC4010E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_BYTE *)(a1 + v7) = *(_BYTE *)(a2 + v7);
  v8 = a3[7];
  v9 = (void *)(a1 + v8);
  v10 = (const void *)(a2 + v8);
  v11 = sub_1DC4073A8();
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    sub_1DC0FEF78(0);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 32))(v9, v10, v11);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  return a1;
}

uint64_t sub_1DC1B4568(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;

  v6 = sub_1DC4010E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  swift_bridgeObjectRelease();
  v7 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  v8 = (void *)(a1 + v7);
  v9 = (void *)(a2 + v7);
  v10 = sub_1DC4073A8();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v8, v9, v10);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    sub_1DC0FEF78(0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  return a1;
}

uint64_t sub_1DC1B46A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;
  uint64_t v14;

  v6 = sub_1DC4010E4();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    sub_1DC0FEF78(0);
    v8 = v13;
    v14 = *(_QWORD *)(v13 - 8);
    v10 = a1 + *(int *)(a3 + 28);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t sub_1DC1B4750(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  result = sub_1DC4010E4();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
      return result;
    }
    sub_1DC0FEF78(0);
    v10 = v13;
    v14 = *(_QWORD *)(v13 - 8);
    v12 = a1 + *(int *)(a4 + 28);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t sub_1DC1B480C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  int v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(uint64_t);
  uint64_t v32;
  uint64_t v33;
  BOOL v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t result;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v46 = a5;
  v47 = a1;
  v42 = a2;
  v43 = a4;
  v5 = type metadata accessor for ForYouFeedLayoutSectionDescriptor.Footer(0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v41 = (uint64_t)&v40 - v10;
  v11 = sub_1DC407B64();
  v44 = *(_QWORD *)(v11 - 8);
  v45 = v11;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for ForYouFeedLayoutSectionDescriptor.Header(0);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v40 - v19;
  v21 = sub_1DC406040();
  v22 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  v24 = (char *)&v40 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC405ECC();
  v25 = (*(uint64_t (**)(char *, uint64_t))(v22 + 88))(v24, v21);
  if (v25 == *MEMORY[0x1E0DBB2B8])
  {
    v26 = sub_1DC405ED8();
    if ((v26 & 0x8000000000000000) == 0)
    {
      if (v26 < *(_QWORD *)(v47 + 16))
      {
        sub_1DC0990BC(v47+ ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80))+ *(_QWORD *)(v15 + 72) * v26, (uint64_t)v20, type metadata accessor for ForYouFeedLayoutSectionDescriptor.Header);
        sub_1DC0990BC((uint64_t)v20, (uint64_t)v17, type metadata accessor for ForYouFeedLayoutSectionDescriptor.Header);
        v28 = v44;
        v27 = v45;
        (*(void (**)(char *, char *, uint64_t))(v44 + 32))(v13, v17, v45);
        __swift_project_boxed_opaque_existential_1((_QWORD *)(v43 + 96), *(_QWORD *)(v43 + 120));
        v29 = sub_1DC407B7C();
        (*(void (**)(char *, uint64_t))(v28 + 8))(v13, v27);
        v30 = (uint64_t)v20;
        v31 = type metadata accessor for ForYouFeedLayoutSectionDescriptor.Header;
LABEL_10:
        sub_1DC0926D8(v30, v31);
        return v29;
      }
      goto LABEL_13;
    }
    __break(1u);
LABEL_12:
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (v25 == *MEMORY[0x1E0DBB2B0])
  {
    v32 = sub_1DC405ED8();
    v33 = *(_QWORD *)(v47 + 16);
    v34 = __OFSUB__(v32, v33);
    v35 = v32 - v33;
    if (!v34)
    {
      if ((v35 & 0x8000000000000000) == 0)
      {
        if (v35 < *(_QWORD *)(v42 + 16))
        {
          v36 = v41;
          sub_1DC0990BC(v42+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v35, v41, type metadata accessor for ForYouFeedLayoutSectionDescriptor.Footer);
          sub_1DC0990BC(v36, (uint64_t)v8, type metadata accessor for ForYouFeedLayoutSectionDescriptor.Footer);
          v38 = v44;
          v37 = v45;
          (*(void (**)(char *, char *, uint64_t))(v44 + 32))(v13, v8, v45);
          __swift_project_boxed_opaque_existential_1((_QWORD *)(v43 + 96), *(_QWORD *)(v43 + 120));
          v29 = sub_1DC407B7C();
          (*(void (**)(char *, uint64_t))(v38 + 8))(v13, v37);
          v30 = v36;
          v31 = type metadata accessor for ForYouFeedLayoutSectionDescriptor.Footer;
          goto LABEL_10;
        }
        goto LABEL_15;
      }
LABEL_14:
      __break(1u);
LABEL_15:
      __break(1u);
      goto LABEL_16;
    }
    goto LABEL_12;
  }
LABEL_16:
  result = sub_1DC409838();
  __break(1u);
  return result;
}

uint64_t sub_1DC1B4BC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;

  v4 = sub_1DC4010E4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_unownedRetainStrong();
  v8 = MEMORY[0x1DF0CAD78](a1 + 16);
  result = swift_release();
  if (v8)
  {
    swift_unownedRetainStrong();
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)(v8 + OBJC_IVAR____TtC8StocksUI24ForYouFeedViewController_eventHandler) + 48), *(_QWORD *)(*(_QWORD *)(v8 + OBJC_IVAR____TtC8StocksUI24ForYouFeedViewController_eventHandler) + 72));
    sub_1DC352AE8((uint64_t)v7);
    swift_unknownObjectRelease();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  return result;
}

uint64_t sub_1DC1B4CB0()
{
  uint64_t v0;

  sub_1DC148A20(v0 + 16);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  __swift_destroy_boxed_opaque_existential_1(v0 + 136);
  return swift_deallocClassInstance();
}

uint64_t sub_1DC1B4D04()
{
  return sub_1DC080808(&qword_1EDB3BAD0, type metadata accessor for ForYouFeedLayoutSectionDescriptor, (uint64_t)&unk_1DC42E4F8);
}

uint64_t sub_1DC1B4D30()
{
  return sub_1DC080808((unint64_t *)&unk_1EDB32A60, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedLayoutModel, (uint64_t)&unk_1DC430440);
}

uint64_t sub_1DC1B4D5C()
{
  return sub_1DC080808(&qword_1EDB341E8, (uint64_t (*)(uint64_t))type metadata accessor for StockSectionFooterView, (uint64_t)&unk_1DC42BBB0);
}

uint64_t sub_1DC1B4D78()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v1 = *(_QWORD *)(type metadata accessor for StockSectionFooterViewModel() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  swift_unownedRelease();
  v3 = v0 + v2;
  v4 = sub_1DC4010E4();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v0 + v2, v4);
  v5 = (int *)type metadata accessor for StockViewModel();
  v6 = v0 + v2 + v5[5];
  v7 = sub_1DC401030();
  v8 = *(_QWORD *)(v7 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
    (*(void (**)(unint64_t, uint64_t))(v8 + 8))(v6, v7);
  v9 = v3 + v5[6];
  v10 = type metadata accessor for StockSparklineViewModel(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v9, 1, v10))
  {
    v11 = sub_1DC408614();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v9, v11);
    v12 = v9 + *(int *)(v10 + 32);
    v13 = sub_1DC400F7C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
  }
  v14 = v3 + v5[7];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v15 = type metadata accessor for PriceViewModel();
  v16 = v14 + *(int *)(v15 + 40);
  v17 = sub_1DC4011C8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v16, v17);
  v18 = v14 + *(int *)(v15 + 44);
  v19 = sub_1DC400118();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v18, v19);
  v20 = v3 + v5[8];
  v21 = sub_1DC4008EC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 8))(v20, v21);
  return swift_deallocObject();
}

uint64_t sub_1DC1B4F54()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for StockSectionFooterViewModel() - 8) + 80);
  return sub_1DC1B4BC4(*(_QWORD *)(v0 + 16), v0 + ((v1 + 24) & ~v1));
}

uint64_t sub_1DC1B4F94(uint64_t a1)
{

  return a1;
}

void sub_1DC1B4FBC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    a3(255);
    a4();
    v6 = sub_1DC40535C();
    if (!v7)
      atomic_store(v6, a2);
  }
}

uint64_t sub_1DC1B5020()
{
  return sub_1DC080808(&qword_1EDB2B180, MEMORY[0x1E0D60720], MEMORY[0x1E0D60718]);
}

uint64_t sub_1DC1B503C()
{
  return sub_1DC080808(&qword_1EDB2D938, (uint64_t (*)(uint64_t))type metadata accessor for StockTitleView, (uint64_t)&unk_1DC42BC28);
}

void sub_1DC1B5058(uint64_t a1)
{
  sub_1DC089DA4(a1, &qword_1EDB42788, (uint64_t (*)(uint64_t))MEMORY[0x1E0C90498], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
}

uint64_t sub_1DC1B5074()
{
  return sub_1DC080808(&qword_1EDB2F878, (uint64_t (*)(uint64_t))type metadata accessor for SectionHeaderView, (uint64_t)&unk_1DC40E6EC);
}

uint64_t sub_1DC1B5090()
{
  return sub_1DC080808(&qword_1EDB2E160, (uint64_t (*)(uint64_t))type metadata accessor for ForYouTitleView, (uint64_t)&unk_1DC431808);
}

uint64_t sub_1DC1B50AC(void *a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v6;

  v1 = objc_msgSend(a1, sel_activityType);
  v2 = sub_1DC408A4C();
  v4 = v3;

  if (v2 == 0xD000000000000016 && v4 == 0x80000001DC438940)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1DC4099E8();
    swift_bridgeObjectRelease();
    return v6 & 1;
  }
}

uint64_t sub_1DC1B5158(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  id v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  unint64_t v17;
  void *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  _QWORD *v30;
  void *v31;
  uint64_t (*v32)(uint64_t);
  void *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  id v44;
  uint64_t aBlock;
  uint64_t v46;
  uint64_t (*v47)(uint64_t);
  void *v48;
  uint64_t (*v49)();
  _QWORD *v50;
  uint64_t v51;
  unint64_t v52;
  __int128 v53;
  __int128 v54;

  v44 = a1;
  v43 = sub_1DC40724C();
  v41 = *(_QWORD *)(v43 - 8);
  MEMORY[0x1E0C80A78](v43);
  v42 = (char *)&v35 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1DC407270();
  v4 = *(void **)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1DC407258();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + OBJC_IVAR____TtC8StocksUI27StocksV1UserActivityHandler_featureAvailability), *(_QWORD *)(v1 + OBJC_IVAR____TtC8StocksUI27StocksV1UserActivityHandler_featureAvailability + 24));
  if ((sub_1DC408260() & 1) == 0)
    return 0;
  v35 = v10;
  v36 = v8;
  v38 = v7;
  v39 = v1;
  v40 = v6;
  v37 = v3;
  v12 = v42;
  v11 = v43;
  v13 = objc_msgSend(v44, sel_userInfo);
  v14 = MEMORY[0x1E0DEE9B8];
  if (v13)
  {
    v15 = v13;
    v16 = sub_1DC40898C();

    v51 = 0x6B636F7453;
    v52 = 0xE500000000000000;
    sub_1DC4096E8();
    if (*(_QWORD *)(v16 + 16))
    {
      v17 = sub_1DC1A3704((uint64_t)&aBlock);
      v18 = v4;
      v20 = v39;
      v19 = v40;
      v21 = v38;
      if ((v22 & 1) != 0)
      {
        sub_1DC1B26C0(*(_QWORD *)(v16 + 56) + 32 * v17, (uint64_t)&v53);
      }
      else
      {
        v53 = 0u;
        v54 = 0u;
      }
    }
    else
    {
      v53 = 0u;
      v54 = 0u;
      v18 = v4;
      v20 = v39;
      v19 = v40;
      v21 = v38;
    }
    sub_1DC1A4E78((uint64_t)&aBlock);
    swift_bridgeObjectRelease();
    if (*((_QWORD *)&v54 + 1))
    {
      if ((swift_dynamicCast() & 1) != 0)
      {
        v44 = v18;
        v23 = aBlock;
        v24 = v46;
        sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3F8D0);
        v25 = v36;
        v26 = v35;
        (*(void (**)(char *, _QWORD, uint64_t))(v36 + 104))(v35, *MEMORY[0x1E0DEF530], v21);
        v27 = sub_1DC40916C();
        v28 = v21;
        v29 = (void *)v27;
        (*(void (**)(char *, uint64_t))(v25 + 8))(v26, v28);
        v30 = (_QWORD *)swift_allocObject();
        v30[2] = v20;
        v30[3] = v23;
        v30[4] = v24;
        v49 = sub_1DC1B5D8C;
        v50 = v30;
        aBlock = MEMORY[0x1E0C809B0];
        v46 = 1107296256;
        v47 = sub_1DC081B88;
        v48 = &block_descriptor_7;
        v31 = _Block_copy(&aBlock);
        swift_retain();
        sub_1DC407264();
        *(_QWORD *)&v53 = MEMORY[0x1E0DEE9D8];
        v32 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
        sub_1DC080808(&qword_1EDB275A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
        sub_1DC089DA4(0, (unint64_t *)&unk_1EDB3F710, v32, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
        sub_1DC1B5D98();
        sub_1DC40964C();
        MEMORY[0x1DF0C99C8](0, v19, v12, v31);
        _Block_release(v31);

        (*(void (**)(char *, uint64_t))(v41 + 8))(v12, v11);
        (*((void (**)(char *, uint64_t))v44 + 1))(v19, v37);
        swift_release();
        return 1;
      }
      goto LABEL_13;
    }
  }
  else
  {
    v53 = 0u;
    v54 = 0u;
  }
  sub_1DC0A61BC((uint64_t)&v53, (uint64_t)&qword_1EDB40100, v14 + 8, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1DC083594);
LABEL_13:
  sub_1DC408FC8();
  sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FC00);
  v34 = (void *)sub_1DC409580();
  sub_1DC403F28();

  return 0;
}

uint64_t sub_1DC1B55DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void *v11;
  _QWORD *v12;
  uint64_t v14;

  v6 = sub_1DC4024D0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(a1 + OBJC_IVAR____TtC8StocksUI27StocksV1UserActivityHandler_stockMetadataManager), *(_QWORD *)(a1 + OBJC_IVAR____TtC8StocksUI27StocksV1UserActivityHandler_stockMetadataManager + 24));
  sub_1DC083594(0, (unint64_t *)&qword_1EDB40040, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1DC40DC10;
  *(_QWORD *)(v10 + 32) = a2;
  *(_QWORD *)(v10 + 40) = a3;
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E0DB32A8], v6);
  swift_bridgeObjectRetain();
  sub_1DC400CAC();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3F8D0);
  v11 = (void *)sub_1DC409148();
  v12 = (_QWORD *)swift_allocObject();
  v12[2] = a2;
  v12[3] = a3;
  v12[4] = a1;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1DC402D04();
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t sub_1DC1B57A0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  __int128 v35;
  void *v36;
  uint64_t v37;
  char *v38;
  _OWORD v39[2];
  uint64_t v40;
  _OWORD v41[2];
  uint64_t v42;
  void *v43;

  v37 = a4;
  v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1DC089DA4(0, (unint64_t *)&unk_1EDB29810, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD3C8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v8);
  v38 = (char *)&v37 - v9;
  v10 = type metadata accessor for StocksActivity(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC089DA4(0, (unint64_t *)&qword_1EDB28DE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF0D0], v7);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v37 - v14;
  v16 = sub_1DC4010E4();
  v17 = *(_QWORD *)(v16 - 8);
  v19 = MEMORY[0x1E0C80A78](v16);
  v21 = (char *)&v37 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = *a1;
  if (!*(_QWORD *)(*a1 + 16))
  {
    (*(void (**)(char *, uint64_t, uint64_t, __n128))(v17 + 56))(v15, 1, 1, v19);
    return sub_1DC0A61BC((uint64_t)v15, (uint64_t)&qword_1EDB28DE0, (uint64_t)MEMORY[0x1E0DAF0D0], (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1DC089DA4);
  }
  v23 = v18;
  swift_bridgeObjectRetain();
  v24 = sub_1DC0ED368(a2, a3);
  if ((v25 & 1) != 0)
  {
    v26 = v23;
    (*(void (**)(char *, unint64_t, uint64_t))(v17 + 16))(v15, *(_QWORD *)(v22 + 56) + *(_QWORD *)(v17 + 72) * v24, v23);
    v27 = 0;
  }
  else
  {
    v27 = 1;
    v26 = v23;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v15, v27, 1, v26);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v26) == 1)
    return sub_1DC0A61BC((uint64_t)v15, (uint64_t)&qword_1EDB28DE0, (uint64_t)MEMORY[0x1E0DAF0D0], (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1DC089DA4);
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v21, v15, v26);
  sub_1DC1B5E40();
  v30 = *(int *)(v29 + 48);
  (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v12, v21, v26);
  *(_QWORD *)&v12[v30] = 0;
  type metadata accessor for StocksActivity.StockFeed(0);
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  v31 = sub_1DC403340();
  v32 = (uint64_t)v38;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v38, 1, 1, v31);
  v42 = 0;
  memset(v41, 0, sizeof(v41));
  v40 = 0;
  memset(v39, 0, sizeof(v39));
  v33 = v43;
  sub_1DC22B720((uint64_t)v12, 0, v32, (uint64_t)v41, 0, 0, (uint64_t)v39);
  if (v33)
  {
    sub_1DC1B5EA8((uint64_t)v39, &qword_1EDB29410, (unint64_t *)&unk_1EDB29400, MEMORY[0x1E0DB35B0]);
    sub_1DC1B5EA8((uint64_t)v41, &qword_1EDB2ACD0, (unint64_t *)&qword_1EDB2ACC0, MEMORY[0x1E0D53040]);
    sub_1DC0A61BC(v32, (uint64_t)&unk_1EDB29810, (uint64_t)MEMORY[0x1E0DAD3C8], (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1DC089DA4);
    sub_1DC1B3F14((uint64_t)v12);
    sub_1DC408FC8();
    sub_1DC0FDC18(0, (unint64_t *)&qword_1EDB400C0, (unint64_t *)&qword_1EDB400F0, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v34 = swift_allocObject();
    *(_OWORD *)(v34 + 16) = xmmword_1DC40DC10;
    *(_QWORD *)&v41[0] = 0;
    *((_QWORD *)&v41[0] + 1) = 0xE000000000000000;
    *(_QWORD *)&v39[0] = v33;
    sub_1DC0A3390(0, (unint64_t *)&qword_1EDB400E0);
    sub_1DC409808();
    v35 = v41[0];
    *(_QWORD *)(v34 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v34 + 64) = sub_1DC0E7FAC();
    *(_OWORD *)(v34 + 32) = v35;
    sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FC00);
    v36 = (void *)sub_1DC409580();
    sub_1DC403F28();
    swift_bridgeObjectRelease();

  }
  else
  {
    swift_release();
    sub_1DC1B5EA8((uint64_t)v39, &qword_1EDB29410, (unint64_t *)&unk_1EDB29400, MEMORY[0x1E0DB35B0]);
    sub_1DC1B5EA8((uint64_t)v41, &qword_1EDB2ACD0, (unint64_t *)&qword_1EDB2ACC0, MEMORY[0x1E0D53040]);
    sub_1DC0A61BC(v32, (uint64_t)&unk_1EDB29810, (uint64_t)MEMORY[0x1E0DAD3C8], (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1DC089DA4);
    sub_1DC1B3F14((uint64_t)v12);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v21, v26);
}

uint64_t sub_1DC1B5CB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  v1 = v0 + OBJC_IVAR____TtC8StocksUI27StocksV1UserActivityHandler_navigator;
  sub_1DC132300();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC8StocksUI27StocksV1UserActivityHandler_featureAvailability);
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC8StocksUI27StocksV1UserActivityHandler_stockMetadataManager);
  return swift_deallocClassInstance();
}

uint64_t sub_1DC1B5D30()
{
  return type metadata accessor for StocksV1UserActivityHandler();
}

uint64_t sub_1DC1B5D38(void *a1)
{
  return sub_1DC1B5158(a1) & 1;
}

uint64_t sub_1DC1B5D60()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1DC1B5D8C()
{
  uint64_t *v0;

  return sub_1DC1B55DC(v0[2], v0[3], v0[4]);
}

unint64_t sub_1DC1B5D98()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EDB3F720;
  if (!qword_1EDB3F720)
  {
    sub_1DC089DA4(255, (unint64_t *)&unk_1EDB3F710, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1DF0CAB8C](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1EDB3F720);
  }
  return result;
}

uint64_t sub_1DC1B5DF8()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DC1B5E24(uint64_t *a1)
{
  uint64_t *v1;

  return sub_1DC1B57A0(a1, v1[2], v1[3], v1[4]);
}

void sub_1DC1B5E40()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EDB28DF0)
  {
    sub_1DC4010E4();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EDB28DF0);
  }
}

uint64_t sub_1DC1B5EA8(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4)
{
  uint64_t v5;

  sub_1DC0FDC18(0, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

uint64_t sub_1DC1B5EEC(uint64_t a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t *, uint64_t);
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  const void *v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int (*v27)(const void *, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(uint64_t, uint64_t, uint64_t);
  id v37;
  uint64_t v38;
  __int128 v39;
  char *__dst;
  uint64_t v42;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v29 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v29 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    v8 = *(_OWORD *)(a2 + 5);
    *(_OWORD *)(a1 + 40) = v8;
    v9 = v8;
    v10 = **(void (***)(uint64_t, uint64_t *, uint64_t))(v8 - 8);
    swift_bridgeObjectRetain();
    v10(a1 + 16, a2 + 2, v9);
    v11 = *((_OWORD *)a2 + 5);
    *(_OWORD *)(a1 + 80) = v11;
    (**(void (***)(uint64_t, uint64_t))(v11 - 8))(a1 + 56, (uint64_t)(a2 + 7));
    v12 = *(_OWORD *)(a2 + 15);
    *(_OWORD *)(a1 + 120) = v12;
    (**(void (***)(uint64_t, uint64_t))(v12 - 8))(a1 + 96, (uint64_t)(a2 + 12));
    v13 = *((_OWORD *)a2 + 10);
    *(_OWORD *)(a1 + 160) = v13;
    (**(void (***)(uint64_t, uint64_t))(v13 - 8))(a1 + 136, (uint64_t)(a2 + 17));
    v14 = a3[9];
    v15 = a1 + v14;
    v16 = (uint64_t)a2 + v14;
    v17 = sub_1DC4008EC();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
    v18 = a3[10];
    v19 = (_QWORD *)(a1 + v18);
    v20 = (uint64_t)a2 + v18;
    v21 = *(uint64_t *)((char *)a2 + v18 + 8);
    *v19 = *(uint64_t *)((char *)a2 + v18);
    v19[1] = v21;
    v22 = type metadata accessor for AttributionSource();
    v23 = *(int *)(v22 + 20);
    __dst = (char *)v19 + v23;
    v42 = v22;
    v24 = (const void *)(v20 + v23);
    v25 = sub_1DC3FFDD0();
    v26 = *(_QWORD *)(v25 - 8);
    v27 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v26 + 48);
    swift_bridgeObjectRetain();
    if (v27(v24, 1, v25))
    {
      sub_1DC089DA4(0, (unint64_t *)&unk_1EDB28A70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(__dst, v24, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, const void *, uint64_t))(v26 + 16))(__dst, v24, v25);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(__dst, 0, 1, v25);
    }
    v30 = *(int *)(v42 + 24);
    v31 = *(void **)(v20 + v30);
    *(_QWORD *)((char *)v19 + v30) = v31;
    v32 = a3[11];
    v33 = a1 + v32;
    v34 = (uint64_t)a2 + v32;
    v35 = sub_1DC40070C();
    v36 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 16);
    v37 = v31;
    v36(v33, v34, v35);
    v38 = a3[12];
    v39 = *(_OWORD *)((char *)a2 + v38 + 24);
    *(_OWORD *)(a1 + v38 + 24) = v39;
    (**(void (***)(void))(v39 - 8))();
  }
  return a1;
}

uint64_t *sub_1DC1B6158(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  char *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(char *, uint64_t, uint64_t);
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  id v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __swift_assign_boxed_opaque_existential_1(a1 + 2, a2 + 2);
  __swift_assign_boxed_opaque_existential_1(a1 + 7, a2 + 7);
  __swift_assign_boxed_opaque_existential_1(a1 + 12, a2 + 12);
  __swift_assign_boxed_opaque_existential_1(a1 + 17, a2 + 17);
  v6 = *(int *)(a3 + 36);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1DC4008EC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v32 = a3;
  v10 = *(int *)(a3 + 40);
  v11 = (uint64_t *)((char *)a1 + v10);
  v12 = (char *)a2 + v10;
  *v11 = *(uint64_t *)((char *)a2 + v10);
  v11[1] = *(uint64_t *)((char *)a2 + v10 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v31 = type metadata accessor for AttributionSource();
  v13 = *(int *)(v31 + 20);
  v14 = (char *)v11 + v13;
  v15 = &v12[v13];
  v16 = sub_1DC3FFDD0();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48);
  v19 = v18(v14, 1, v16);
  v20 = v18(v15, 1, v16);
  if (!v19)
  {
    if (!v20)
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 24))(v14, v15, v16);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v17 + 8))(v14, v16);
    goto LABEL_6;
  }
  if (v20)
  {
LABEL_6:
    sub_1DC089DA4(0, (unint64_t *)&unk_1EDB28A70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v14, v15, v16);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
LABEL_7:
  v22 = *(int *)(v31 + 24);
  v23 = *(void **)((char *)v11 + v22);
  v24 = *(void **)&v12[v22];
  *(_QWORD *)((char *)v11 + v22) = v24;
  v25 = v24;

  v26 = *(int *)(v32 + 44);
  v27 = (char *)a1 + v26;
  v28 = (char *)a2 + v26;
  v29 = sub_1DC40070C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 24))(v27, v28, v29);
  __swift_assign_boxed_opaque_existential_1((uint64_t *)((char *)a1 + *(int *)(v32 + 48)), (uint64_t *)((char *)a2 + *(int *)(v32 + 48)));
  return a1;
}

uint64_t sub_1DC1B6398(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  const void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  v7 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v7;
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  v8 = a3[9];
  v9 = a1 + v8;
  v10 = a2 + v8;
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  v11 = sub_1DC4008EC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  v12 = a3[10];
  v13 = a1 + v12;
  v14 = a2 + v12;
  *(_OWORD *)(a1 + v12) = *(_OWORD *)(a2 + v12);
  v15 = type metadata accessor for AttributionSource();
  v16 = *(int *)(v15 + 20);
  v17 = (void *)(v13 + v16);
  v18 = (const void *)(v14 + v16);
  v19 = sub_1DC3FFDD0();
  v20 = *(_QWORD *)(v19 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
  {
    sub_1DC089DA4(0, (unint64_t *)&unk_1EDB28A70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v20 + 32))(v17, v18, v19);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
  }
  *(_QWORD *)(v13 + *(int *)(v15 + 24)) = *(_QWORD *)(v14 + *(int *)(v15 + 24));
  v22 = a3[11];
  v23 = a1 + v22;
  v24 = a2 + v22;
  v25 = sub_1DC40070C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v23, v24, v25);
  v26 = a3[12];
  v27 = a1 + v26;
  v28 = a2 + v26;
  v29 = *(_OWORD *)(v28 + 16);
  *(_OWORD *)v27 = *(_OWORD *)v28;
  *(_OWORD *)(v27 + 16) = v29;
  *(_QWORD *)(v27 + 32) = *(_QWORD *)(v28 + 32);
  return a1;
}

uint64_t sub_1DC1B6570(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(char *, uint64_t, uint64_t);
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v37;
  uint64_t v38;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 16);
  v7 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  __swift_destroy_boxed_opaque_existential_1(a1 + 56);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  __swift_destroy_boxed_opaque_existential_1(a1 + 96);
  v8 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v8;
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  __swift_destroy_boxed_opaque_existential_1(a1 + 136);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  v9 = *(int *)(a3 + 36);
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = sub_1DC4008EC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 40))(v10, v11, v12);
  v38 = a3;
  v13 = *(int *)(a3 + 40);
  v14 = (_QWORD *)(a1 + v13);
  v15 = a2 + v13;
  v16 = *(_QWORD *)(a2 + v13 + 8);
  *v14 = *(_QWORD *)(a2 + v13);
  v14[1] = v16;
  swift_bridgeObjectRelease();
  v37 = type metadata accessor for AttributionSource();
  v17 = *(int *)(v37 + 20);
  v18 = (char *)v14 + v17;
  v19 = (char *)(v15 + v17);
  v20 = sub_1DC3FFDD0();
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v21 + 48);
  v23 = v22(v18, 1, v20);
  v24 = v22(v19, 1, v20);
  if (!v23)
  {
    if (!v24)
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 40))(v18, v19, v20);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v21 + 8))(v18, v20);
    goto LABEL_6;
  }
  if (v24)
  {
LABEL_6:
    sub_1DC089DA4(0, (unint64_t *)&unk_1EDB28A70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v18, v19, v20);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
LABEL_7:
  v26 = *(int *)(v37 + 24);
  v27 = *(void **)((char *)v14 + v26);
  *(_QWORD *)((char *)v14 + v26) = *(_QWORD *)(v15 + v26);

  v28 = *(int *)(v38 + 44);
  v29 = a1 + v28;
  v30 = a2 + v28;
  v31 = sub_1DC40070C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 40))(v29, v30, v31);
  v32 = *(int *)(v38 + 48);
  v33 = a1 + v32;
  v34 = a2 + v32;
  __swift_destroy_boxed_opaque_existential_1(a1 + v32);
  v35 = *(_OWORD *)(v34 + 16);
  *(_OWORD *)v33 = *(_OWORD *)v34;
  *(_OWORD *)(v33 + 16) = v35;
  *(_QWORD *)(v33 + 32) = *(_QWORD *)(v34 + 32);
  return a1;
}

uint64_t sub_1DC1B67E0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC1B67EC(uint64_t a1, uint64_t a2, int *a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1DC4008EC();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = a3[9];
    }
    else
    {
      v12 = type metadata accessor for AttributionSource();
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
      {
        v10 = v12;
        v11 = a3[10];
      }
      else
      {
        v10 = sub_1DC40070C();
        v9 = *(_QWORD *)(v10 - 8);
        v11 = a3[11];
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_1DC1B68B0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC1B68BC(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = sub_1DC4008EC();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = a4[9];
    }
    else
    {
      v12 = type metadata accessor for AttributionSource();
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == a3)
      {
        v10 = v12;
        v11 = a4[10];
      }
      else
      {
        v10 = sub_1DC40070C();
        v9 = *(_QWORD *)(v10 - 8);
        v11 = a4[11];
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t sub_1DC1B697C()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = (int *)type metadata accessor for StockListChangeWatchlistBlueprintModifier();
  v2 = v0
     + ((*(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80));
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v2 + 16);
  __swift_destroy_boxed_opaque_existential_1(v2 + 56);
  __swift_destroy_boxed_opaque_existential_1(v2 + 96);
  __swift_destroy_boxed_opaque_existential_1(v2 + 136);
  v3 = v2 + v1[9];
  v4 = sub_1DC4008EC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  v5 = v2 + v1[10];
  swift_bridgeObjectRelease();
  v6 = type metadata accessor for AttributionSource();
  v7 = v5 + *(int *)(v6 + 20);
  v8 = sub_1DC3FFDD0();
  v9 = *(_QWORD *)(v8 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);

  v10 = v2 + v1[11];
  v11 = sub_1DC40070C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  __swift_destroy_boxed_opaque_existential_1(v2 + v1[12]);
  return swift_deallocObject();
}

uint64_t sub_1DC1B6AE0()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v1 = (int *)type metadata accessor for StockListChangeWatchlistBlueprintModifier();
  v2 = *((_QWORD *)v1 - 1);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v18 = *(_QWORD *)(v2 + 64);
  sub_1DC0CC0A4(0, (unint64_t *)&qword_1EDB2AB40, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790]);
  v5 = *(unsigned __int8 *)(*(_QWORD *)(v4 - 8) + 80);
  v19 = *(_QWORD *)(v4 - 8);
  v20 = v4;
  v21 = v0;
  v6 = v0 + v3;
  v7 = v3;
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v6 + 16);
  __swift_destroy_boxed_opaque_existential_1(v6 + 56);
  __swift_destroy_boxed_opaque_existential_1(v6 + 96);
  __swift_destroy_boxed_opaque_existential_1(v6 + 136);
  v8 = v6 + v1[9];
  v9 = sub_1DC4008EC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  v10 = v6 + v1[10];
  swift_bridgeObjectRelease();
  v11 = type metadata accessor for AttributionSource();
  v12 = v10 + *(int *)(v11 + 20);
  v13 = sub_1DC3FFDD0();
  v14 = *(_QWORD *)(v13 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);

  v15 = v6 + v1[11];
  v16 = sub_1DC40070C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
  __swift_destroy_boxed_opaque_existential_1(v6 + v1[12]);
  (*(void (**)(unint64_t, uint64_t))(v19 + 8))(v21 + ((v7 + v18 + v5) & ~v5), v20);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DC1B6CB8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DC1B6CDC()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = (int *)type metadata accessor for StockListChangeWatchlistBlueprintModifier();
  v2 = v0
     + ((*(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80));
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v2 + 16);
  __swift_destroy_boxed_opaque_existential_1(v2 + 56);
  __swift_destroy_boxed_opaque_existential_1(v2 + 96);
  __swift_destroy_boxed_opaque_existential_1(v2 + 136);
  v3 = v2 + v1[9];
  v4 = sub_1DC4008EC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  v5 = v2 + v1[10];
  swift_bridgeObjectRelease();
  v6 = type metadata accessor for AttributionSource();
  v7 = v5 + *(int *)(v6 + 20);
  v8 = sub_1DC3FFDD0();
  v9 = *(_QWORD *)(v8 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);

  v10 = v2 + v1[11];
  v11 = sub_1DC40070C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  __swift_destroy_boxed_opaque_existential_1(v2 + v1[12]);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

ValueMetadata *type metadata accessor for StockListChangeWatchlistBlueprintModifier.Results()
{
  return &type metadata for StockListChangeWatchlistBlueprintModifier.Results;
}

uint64_t ChartRange.supportsAfterHours.getter()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  char *v4;
  char v5;
  _QWORD v7[4];

  v0 = sub_1DC4002BC();
  v1 = *(_QWORD *)(v0 - 8);
  v2 = MEMORY[0x1E0C80A78](v0);
  v4 = (char *)v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v1 + 104))(v4, *MEMORY[0x1E0DAE0B0], v0, v2);
  sub_1DC1B6F70();
  sub_1DC408C80();
  sub_1DC408C80();
  if (v7[2] == v7[0] && v7[3] == v7[1])
    v5 = 1;
  else
    v5 = sub_1DC4099E8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  return v5 & 1;
}

unint64_t sub_1DC1B6F70()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EDB28B78;
  if (!qword_1EDB28B78)
  {
    v1 = sub_1DC4002BC();
    result = MEMORY[0x1DF0CAB8C](MEMORY[0x1E0DAE110], v1);
    atomic_store(result, (unint64_t *)&qword_1EDB28B78);
  }
  return result;
}

uint64_t ChartRange.longLabel.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int v6;
  uint64_t ObjCClassFromMetadata;
  id v8;
  uint64_t v9;
  uint64_t v11;

  v1 = v0;
  v2 = sub_1DC4002BC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1, v2);
  v6 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  if (v6 == *MEMORY[0x1E0DAE0B0]
    || v6 == *MEMORY[0x1E0DAE0B8]
    || v6 == *MEMORY[0x1E0DAE0C8]
    || v6 == *MEMORY[0x1E0DAE0A0]
    || v6 == *MEMORY[0x1E0DAE0F0]
    || v6 == *MEMORY[0x1E0DAE090]
    || v6 == *MEMORY[0x1E0DAE0C0]
    || v6 == *MEMORY[0x1E0DAE0E0]
    || v6 == *MEMORY[0x1E0DAE0E8]
    || v6 == *MEMORY[0x1E0DAE0D8]
    || v6 == *MEMORY[0x1E0DAE0A8])
  {
    type metadata accessor for Localized();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    v8 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
    v9 = sub_1DC3FFC80();

  }
  else
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return 0;
  }
  return v9;
}

void sub_1DC1B7648(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;

  v3 = a3;
  sub_1DC1B7960();
}

void sub_1DC1B766C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v4;

  v4 = a4;
  sub_1DC1B79E8();
}

void sub_1DC1B76A8(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_1(a1 + qword_1EDB3B6A0);
  __swift_destroy_boxed_opaque_existential_1(a1 + qword_1EDB3B698);
  swift_release();

}

void sub_1DC1B7700()
{
  void *v0;

  sub_1DC402BC0();
  if (v0)
  {
    sub_1DC4064E4();

  }
}

void sub_1DC1B778C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1DC10CF18(a1, a2, *(_QWORD *)(a4 - 8), MEMORY[0x1E0DBBC78]);
}

void sub_1DC1B77AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1DC10CF18(a1, a2, *(_QWORD *)(a4 - 8), MEMORY[0x1E0DBBC60]);
}

void sub_1DC1B77CC()
{
  sub_1DC1B7700();
}

id sub_1DC1B77D4()
{
  uint64_t v0;
  id v2;
  void *v3;

  sub_1DC402BC0();
  if (!v3)
    return v2;
  v0 = sub_1DC404D08();

  return (id)v0;
}

id sub_1DC1B7864()
{
  return sub_1DC1B77D4();
}

uint64_t sub_1DC1B786C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = (_QWORD *)(v1 + qword_1EDB3B6A0);
  swift_beginAccess();
  v4 = __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  v6 = *(_QWORD *)(*v4 + 40);
  v5 = *(_QWORD *)(*v4 + 48);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(*v4 + 16), v6);
  *a1 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v5 + 16) + 72))(v6);
  v7 = *MEMORY[0x1E0DBB098];
  v8 = sub_1DC405EF0();
  return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(a1, v7, v8);
}

uint64_t sub_1DC1B791C@<X0>(_QWORD *a1@<X8>)
{
  return sub_1DC1B786C(a1);
}

uint64_t sub_1DC1B793C()
{
  return 0x6F43756F59726F46;
}

void sub_1DC1B7960()
{
  char *v0;
  uint64_t v1;

  v1 = qword_1EDB3B688;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3438]), sel_initWithActivityIndicatorStyle_, 100);

  sub_1DC409838();
  __break(1u);
}

void sub_1DC1B79E8()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1DC1B7A14()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1DC1B7A38()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DC1B7A5C()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DC1B7A88()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1DC1B7AB4()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_1DC1B7AD8()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(*(_QWORD *)(v0 + 16) + qword_1EDB3B688);
  objc_msgSend(v1, sel_stopAnimating);
  return objc_msgSend(v1, sel_removeFromSuperview);
}

id sub_1DC1B7B64()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AdIgnorableView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1DC1B7B94(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t result;
  char v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD v19[2];
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v23 = a1;
  v2 = sub_1DC401E34();
  v21 = *(_QWORD *)(v2 - 8);
  v22 = v2;
  MEMORY[0x1E0C80A78](v2);
  v19[1] = v3;
  v20 = (char *)v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1DC407054();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1DC40721C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 48));
  result = sub_1DC403838();
  if ((result & 1) != 0)
  {
    sub_1DC401E04();
    sub_1DC407204();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    v13 = sub_1DC40703C();
    result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    if ((v13 & 1) != 0)
    {
      v15 = v20;
      v14 = v21;
      v16 = v22;
      (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v20, v23, v22);
      v17 = (*(unsigned __int8 *)(v14 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
      v18 = swift_allocObject();
      (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(v18 + v17, v15, v16);
      sub_1DC401828();
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_1DC1B7D64(uint64_t a1, char *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  void (*v21)(char *, uint64_t);
  char *v22;
  uint64_t result;
  char *v24;
  uint64_t v25;
  double v26;
  double v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(uint64_t, uint64_t, uint64_t);
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t (*v44)(uint64_t);
  char *v45;
  void (*v46)(char *, uint64_t);
  uint64_t v47;
  unint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  char *v62;
  void (*v63)(char *, uint64_t);
  __int128 v64;
  char *v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;

  v69 = a1;
  v61 = sub_1DC3FFFEC();
  v59 = *(_QWORD *)(v61 - 8);
  MEMORY[0x1E0C80A78](v61);
  v60 = (char *)&v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC089DA4(0, &qword_1EDB42940, MEMORY[0x1E0D528C8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v54 = (char *)&v48 - v5;
  v6 = sub_1DC403064();
  v57 = *(_QWORD *)(v6 - 8);
  v58 = v6;
  MEMORY[0x1E0C80A78](v6);
  v56 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = sub_1DC402ED8();
  v50 = *(_QWORD *)(v51 - 8);
  MEMORY[0x1E0C80A78](v51);
  v49 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1DC4031C0();
  v63 = *(void (**)(char *, uint64_t))(v9 - 8);
  *(_QWORD *)&v64 = v9;
  MEMORY[0x1E0C80A78](v9);
  v62 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1DC407054();
  MEMORY[0x1E0C80A78](v11);
  v12 = sub_1DC403A00();
  MEMORY[0x1E0C80A78](v12);
  v68 = sub_1DC402F8C();
  v55 = *(_QWORD *)(v68 - 8);
  MEMORY[0x1E0C80A78](v68);
  v14 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1DC40721C();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v48 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = sub_1DC403244();
  v53 = *(_QWORD *)(v66 - 8);
  MEMORY[0x1E0C80A78](v66);
  v20 = (char *)&v48 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC401E04();
  sub_1DC4071F8();
  v21 = *(void (**)(char *, uint64_t))(v16 + 8);
  v21(v18, v15);
  v65 = v20;
  sub_1DC403238();
  sub_1DC401E04();
  sub_1DC407204();
  v52 = v15;
  v21(v18, v15);
  sub_1DC4039F4();
  v67 = v14;
  v22 = a2;
  sub_1DC402F80();
  result = sub_1DC401E10();
  if (result < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_11;
  }
  if (result > 0x7FFFFFFF)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v24 = v62;
  sub_1DC4031B4();
  sub_1DC080808((unint64_t *)&unk_1EDB41080, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD1C0], MEMORY[0x1E0DAD1B0]);
  v25 = v64;
  sub_1DC4015C4();
  (*((void (**)(char *, uint64_t))v63 + 1))(v24, v25);
  result = sub_1DC401E1C();
  if ((~*(_QWORD *)&v26 & 0x7FF0000000000000) == 0)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (v26 <= -2147483650.0)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (v26 >= 2147483650.0)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  result = sub_1DC401E1C();
  if ((~*(_QWORD *)&v27 & 0x7FF0000000000000) == 0)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (v27 <= -2147483650.0)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (v27 < 2147483650.0)
  {
    v28 = v49;
    sub_1DC402ECC();
    sub_1DC080808((unint64_t *)&unk_1EDB41070, (uint64_t (*)(uint64_t))MEMORY[0x1E0DACCF0], MEMORY[0x1E0DACCE0]);
    v29 = v51;
    sub_1DC4015C4();
    (*(void (**)(char *, uint64_t))(v50 + 8))(v28, v29);
    sub_1DC089DA4(0, (unint64_t *)&qword_1EDB3FE40, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8178], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v31 = v30;
    v32 = sub_1DC401618();
    v33 = *(_QWORD *)(v32 - 8);
    v34 = *(_QWORD *)(v33 + 72);
    v35 = *(unsigned __int8 *)(v33 + 80);
    v63 = v21;
    v36 = (v35 + 32) & ~v35;
    v49 = (char *)(v35 | 7);
    v51 = v31;
    v50 = v36 + v34;
    v37 = swift_allocObject();
    v64 = xmmword_1DC40DC10;
    *(_OWORD *)(v37 + 16) = xmmword_1DC40DC10;
    v62 = v22;
    v38 = *MEMORY[0x1E0CF8170];
    v39 = *(void (**)(uint64_t, uint64_t, uint64_t))(v33 + 104);
    v39(v37 + v36, v38, v32);
    sub_1DC080808(&qword_1EDB297E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD260], MEMORY[0x1E0DAD250]);
    v48 = 0x80000001DC438EC0;
    sub_1DC4015C4();
    swift_bridgeObjectRelease();
    v40 = swift_allocObject();
    *(_OWORD *)(v40 + 16) = v64;
    v39(v40 + v36, v38, v32);
    sub_1DC080808((unint64_t *)&unk_1EDB428F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DACE40], MEMORY[0x1E0DACE30]);
    sub_1DC4015C4();
    swift_bridgeObjectRelease();
    sub_1DC401E04();
    sub_1DC407210();
    v63(v18, v52);
    v41 = v56;
    sub_1DC403058();
    v42 = swift_allocObject();
    *(_OWORD *)(v42 + 16) = v64;
    v39(v42 + v36, v38, v32);
    sub_1DC080808((unint64_t *)&unk_1EDB42900, (uint64_t (*)(uint64_t))MEMORY[0x1E0DACF50], MEMORY[0x1E0DACF40]);
    v43 = v58;
    sub_1DC4015C4();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v57 + 8))(v41, v43);
    sub_1DC403790();
    v44 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD9B0];
    sub_1DC401E28();
    v45 = v60;
    sub_1DC3FFF74();
    sub_1DC080808((unint64_t *)&unk_1EDB42910, v44, MEMORY[0x1E0DAD9A8]);
    sub_1DC401594();
    v46 = *(void (**)(char *, uint64_t))(v59 + 8);
    v47 = v61;
    v46(v45, v61);
    sub_1DC3FFFE0();
    sub_1DC4015A0();
    v46(v45, v47);
    (*(void (**)(char *, uint64_t))(v55 + 8))(v67, v68);
    return (*(uint64_t (**)(char *, uint64_t))(v53 + 8))(v65, v66);
  }
LABEL_17:
  __break(1u);
  return result;
}

uint64_t sub_1DC1B857C()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AdComponentTracker()
{
  return objc_opt_self();
}

uint64_t sub_1DC1B85C8(uint64_t a1)
{
  return sub_1DC1B7B94(a1);
}

uint64_t sub_1DC1B85E8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_1DC401E34();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_1DC1B8648(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(sub_1DC401E34() - 8) + 80);
  return sub_1DC1B7D64(a1, (char *)(v1 + ((v3 + 16) & ~v3)));
}

unint64_t sub_1DC1B8684()
{
  return sub_1DC1A1F08(MEMORY[0x1E0DEE9D8]);
}

double sub_1DC1B8690()
{
  return 1.0;
}

uint64_t sub_1DC1B8698()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  sub_1DC1B8858();
  v0 = sub_1DC40742C();
  v2 = v1;
  if (v0 == sub_1DC40742C() && v2 == v3)
    v4 = 1;
  else
    v4 = sub_1DC4099E8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4 & 1;
}

uint64_t sub_1DC1B873C()
{
  sub_1DC1B8858();
  return sub_1DC40742C();
}

uint64_t sub_1DC1B8754()
{
  sub_1DC1B8944(&qword_1F034DC68, (uint64_t)&unk_1DC414728);
  return sub_1DC407DE0();
}

uint64_t sub_1DC1B878C()
{
  return 0x616C50207377654ELL;
}

uint64_t sub_1DC1B87B0()
{
  return sub_1DC1B8944(&qword_1F034DC50, (uint64_t)&unk_1DC414690);
}

uint64_t type metadata accessor for NewsPlacardStockFeedGroup()
{
  uint64_t result;

  result = qword_1EDB36310;
  if (!qword_1EDB36310)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1DC1B8810()
{
  return sub_1DC1B8944(&qword_1F034DC58, (uint64_t)&unk_1DC414700);
}

uint64_t sub_1DC1B8834()
{
  return sub_1DC1B8944(&qword_1F034DC60, (uint64_t)&unk_1DC4146D8);
}

void sub_1DC1B8858()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB2ADB8)
  {
    sub_1DC1B88BC();
    sub_1DC1B8900();
    v0 = sub_1DC407480();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB2ADB8);
  }
}

unint64_t sub_1DC1B88BC()
{
  unint64_t result;

  result = qword_1EDB3CF70;
  if (!qword_1EDB3CF70)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC429D5C, &type metadata for NewsPlacardStockFeedGroupConfigData);
    atomic_store(result, (unint64_t *)&qword_1EDB3CF70);
  }
  return result;
}

unint64_t sub_1DC1B8900()
{
  unint64_t result;

  result = qword_1EDB3CF68;
  if (!qword_1EDB3CF68)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC429D34, &type metadata for NewsPlacardStockFeedGroupConfigData);
    atomic_store(result, (unint64_t *)&qword_1EDB3CF68);
  }
  return result;
}

uint64_t sub_1DC1B8944(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for NewsPlacardStockFeedGroup();
    result = MEMORY[0x1DF0CAB8C](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

_QWORD *sub_1DC1B8984(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1DC1B8858();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t sub_1DC1B8A0C(uint64_t a1)
{
  uint64_t v2;

  sub_1DC1B8858();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t sub_1DC1B8A40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  sub_1DC1B8858();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1DC1B8A9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  sub_1DC1B8858();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1DC1B8AF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  sub_1DC1B8858();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1DC1B8B54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  sub_1DC1B8858();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1DC1B8BB0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC1B8BBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;

  sub_1DC1B8858();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 2)
    return ((v9 + 2147483646) & 0x7FFFFFFF) + 1;
  else
    return 0;
}

uint64_t sub_1DC1B8C48()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1DC1B8C54(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;

  sub_1DC1B8858();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, v8);
  else
    *(_BYTE *)(a1 + *(int *)(a4 + 20)) = a2 + 1;
}

void sub_1DC1B8CCC()
{
  unint64_t v0;

  sub_1DC1B8858();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_1DC1B8D3C()
{
  qword_1EDB5DE00 = 0x4059000000000000;
}

id sub_1DC1B8D60(void *a1, uint64_t a2)
{
  double v3;
  double v4;
  double v5;
  double v6;
  double Width;
  id v8;
  double v9;
  CGFloat v10;
  double v11;
  CGFloat v12;
  double v13;
  CGFloat v14;
  double v15;
  CGFloat v16;
  double Height;
  double v18;
  _QWORD v20[4];
  char v21;
  CGRect v22;
  CGRect v23;

  sub_1DC0E71D0(a2, (uint64_t)v20);
  if ((v21 & 1) != 0)
  {
    objc_msgSend(a1, sel_contentOffset);
    v4 = v3;
    objc_msgSend(a1, sel_adjustedContentInset);
    v6 = v4 + v5;
    objc_msgSend(a1, sel_bounds);
    Width = CGRectGetWidth(v22);
    v8 = sub_1DC16A074();
    objc_msgSend(v8, sel_frame);
    v10 = v9;
    v12 = v11;
    v14 = v13;
    v16 = v15;

    v23.origin.x = v10;
    v23.origin.y = v12;
    v23.size.width = v14;
    v23.size.height = v16;
    Height = CGRectGetHeight(v23);
    v18 = 0.0;
  }
  else
  {
    v18 = *(double *)v20;
    v6 = *(double *)&v20[1];
    Width = *(double *)&v20[2];
    Height = *(double *)&v20[3];
  }
  return objc_msgSend(a1, sel_resizableSnapshotViewFromRect_afterScreenUpdates_withCapInsets_, 1, v18, v6, Width, Height, *MEMORY[0x1E0DC49E8], *(double *)(MEMORY[0x1E0DC49E8] + 8), *(double *)(MEMORY[0x1E0DC49E8] + 16), *(double *)(MEMORY[0x1E0DC49E8] + 24));
}

void sub_1DC1B8E78(uint64_t a1)
{
  id v2;
  char *v3;
  uint64_t v4;
  uint64_t ObjectType;
  void *v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, id, uint64_t, uint64_t, uint64_t);
  id v9;
  char *v10;

  v2 = sub_1DC0D32F8();
  objc_msgSend(v2, sel_setAlpha_, 1.0);

  v3 = *(char **)(a1 + 48);
  if (v3)
  {
    v4 = *(_QWORD *)&v3[OBJC_IVAR____TtC8StocksUI19ForYouFeedTitleView_animator + 8];
    ObjectType = swift_getObjectType();
    v6 = *(void **)&v3[OBJC_IVAR____TtC8StocksUI19ForYouFeedTitleView_contentView];
    v7 = *(_QWORD *)&v3[OBJC_IVAR____TtC8StocksUI19ForYouFeedTitleView_titleView];
    v8 = *(uint64_t (**)(uint64_t, id, uint64_t, uint64_t, uint64_t))(v4 + 16);
    v10 = v3;
    swift_unknownObjectRetain();
    v9 = v6;
    LOBYTE(v4) = v8(1, v9, v7, ObjectType, v4);

    swift_unknownObjectRelease();
    v10[OBJC_IVAR____TtC8StocksUI19ForYouFeedTitleView_state] = v4;

  }
}

void sub_1DC1B8F84(uint64_t a1)
{
  id v2;
  char *v3;
  uint64_t v4;
  uint64_t ObjectType;
  void *v6;
  uint64_t v7;
  uint64_t (*v8)(_QWORD, id, uint64_t, uint64_t, uint64_t);
  id v9;
  char *v10;

  v2 = sub_1DC0D32F8();
  objc_msgSend(v2, sel_setAlpha_, 0.0);

  v3 = *(char **)(a1 + 48);
  if (v3)
  {
    v4 = *(_QWORD *)&v3[OBJC_IVAR____TtC8StocksUI19ForYouFeedTitleView_animator + 8];
    ObjectType = swift_getObjectType();
    v6 = *(void **)&v3[OBJC_IVAR____TtC8StocksUI19ForYouFeedTitleView_contentView];
    v7 = *(_QWORD *)&v3[OBJC_IVAR____TtC8StocksUI19ForYouFeedTitleView_titleView];
    v8 = *(uint64_t (**)(_QWORD, id, uint64_t, uint64_t, uint64_t))(v4 + 16);
    v10 = v3;
    swift_unknownObjectRetain();
    v9 = v6;
    LOBYTE(v4) = v8(0, v9, v7, ObjectType, v4);

    swift_unknownObjectRelease();
    v10[OBJC_IVAR____TtC8StocksUI19ForYouFeedTitleView_state] = v4;

  }
}

void sub_1DC1B9090(void *a1, double a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  double v14;
  double v15;
  double v16;
  double v17;
  void *v18;
  id v19;
  char *v20;
  uint64_t v21;
  uint64_t ObjectType;
  void *v23;
  uint64_t v24;
  void (*v25)(uint64_t, id, uint64_t, uint64_t, uint64_t, double);
  uint64_t v26;
  char *v27;
  id v28;
  uint64_t v29;

  v3 = v2;
  v6 = sub_1DC4059F8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1DC4050B0();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC405D7C();
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E0DBA298], v6);
  objc_msgSend(a1, sel_bounds);
  objc_msgSend(a1, sel_layoutMargins);
  sub_1DC40508C();
  v15 = v14;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  if (qword_1EDB28A00 != -1)
    swift_once();
  v16 = a2 - (v15 - *(double *)&qword_1EDB5DE00);
  if (v16 < 0.0)
    v16 = 0.0;
  v17 = fmin(v16 / *(double *)&qword_1EDB5DE00, 1.0);
  if (v17 > 0.0)
  {
    v18 = *(void **)(v2 + 48);
    if (v18)
      objc_msgSend(v18, sel_setHidden_, 0);
  }
  v19 = sub_1DC0D32F8();
  objc_msgSend(v19, sel_setAlpha_, v17);

  v20 = *(char **)(v3 + 48);
  if (v20)
  {
    v21 = *(_QWORD *)&v20[OBJC_IVAR____TtC8StocksUI19ForYouFeedTitleView_animator + 8];
    ObjectType = swift_getObjectType();
    v23 = *(void **)&v20[OBJC_IVAR____TtC8StocksUI19ForYouFeedTitleView_contentView];
    v24 = *(_QWORD *)&v20[OBJC_IVAR____TtC8StocksUI19ForYouFeedTitleView_titleView];
    v25 = *(void (**)(uint64_t, id, uint64_t, uint64_t, uint64_t, double))(v21 + 8);
    v26 = v20[OBJC_IVAR____TtC8StocksUI19ForYouFeedTitleView_state];
    v27 = v20;
    swift_unknownObjectRetain();
    v28 = v23;
    v25(v26, v28, v24, ObjectType, v21, v17);

    swift_unknownObjectRelease();
  }
}

uint64_t sub_1DC1B9330()
{
  id *v0;

  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t storeEnumTagSinglePayload for ForYouFeedViewCollapsingAnimator.State(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1DC1B93B8 + 4 * byte_1DC4147D5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1DC1B93EC + 4 * byte_1DC4147D0[v4]))();
}

uint64_t sub_1DC1B93EC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC1B93F4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC1B93FCLL);
  return result;
}

uint64_t sub_1DC1B9408(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC1B9410);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1DC1B9414(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC1B941C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ForYouFeedViewCollapsingAnimator.State()
{
  return &type metadata for ForYouFeedViewCollapsingAnimator.State;
}

unint64_t sub_1DC1B943C()
{
  unint64_t result;

  result = qword_1F034DC70;
  if (!qword_1F034DC70)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC414878, &type metadata for ForYouFeedViewCollapsingAnimator.State);
    atomic_store(result, (unint64_t *)&qword_1F034DC70);
  }
  return result;
}

void sub_1DC1B9480()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  void *v3;
  char *v4;
  uint64_t v5;
  uint64_t ObjectType;
  void *v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, id, uint64_t, uint64_t, uint64_t);
  char *v10;
  id v11;
  id v12;
  id v13;

  v1 = v0;
  v2 = sub_1DC0D32F8();
  objc_msgSend(v2, sel_setAlpha_, 1.0);

  v3 = *(void **)(v1 + 48);
  if (v3)
  {
    objc_msgSend(v3, sel_setHidden_, 0);
    v4 = *(char **)(v1 + 48);
    if (v4)
    {
      v5 = *(_QWORD *)&v4[OBJC_IVAR____TtC8StocksUI19ForYouFeedTitleView_animator + 8];
      ObjectType = swift_getObjectType();
      v7 = *(void **)&v4[OBJC_IVAR____TtC8StocksUI19ForYouFeedTitleView_contentView];
      v8 = *(_QWORD *)&v4[OBJC_IVAR____TtC8StocksUI19ForYouFeedTitleView_titleView];
      v9 = *(uint64_t (**)(uint64_t, id, uint64_t, uint64_t, uint64_t))(v5 + 16);
      v10 = v4;
      swift_unknownObjectRetain();
      v11 = v7;
      LOBYTE(v5) = v9(1, v11, v8, ObjectType, v5);

      swift_unknownObjectRelease();
      v10[OBJC_IVAR____TtC8StocksUI19ForYouFeedTitleView_state] = v5;

    }
  }
  v12 = sub_1DC10959C();
  objc_msgSend(v12, sel_setAccessibilityElementsHidden_, 0);

  v13 = sub_1DC10959C();
  objc_msgSend(v13, sel_setAccessibilityViewIsModal_, 1);

  *(_BYTE *)(v1 + 56) = 1;
}

void sub_1DC1B95C8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB3FAE0[0])
  {
    type metadata accessor for CGRect(255);
    v0 = sub_1DC4095A4();
    if (!v1)
      atomic_store(v0, qword_1EDB3FAE0);
  }
}

_QWORD *sub_1DC1B961C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  char *v20;
  char *v21;
  int *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  void (*v47)(char *, char *, uint64_t);
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  __int128 v60;
  __int128 v61;
  void *v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  char v69;
  __int128 v70;
  void *v71;
  id v72;
  id v73;
  void *v74;
  id v75;
  char *v77;
  int *v78;

  if (a1 != a2)
  {
    sub_1DC0926D8((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for StockListLayoutModel);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      a1[3] = a2[3];
      v15 = *((_OWORD *)a2 + 3);
      *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
      *((_OWORD *)a1 + 3) = v15;
      v16 = *((_OWORD *)a2 + 4);
      v17 = *((_OWORD *)a2 + 5);
      v18 = *((_OWORD *)a2 + 7);
      *((_OWORD *)a1 + 6) = *((_OWORD *)a2 + 6);
      *((_OWORD *)a1 + 7) = v18;
      *((_OWORD *)a1 + 4) = v16;
      *((_OWORD *)a1 + 5) = v17;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_15:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    if (!EnumCaseMultiPayload)
    {
      v7 = sub_1DC4010E4();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = (int *)type metadata accessor for StockViewModel();
      v9 = v8[5];
      v10 = (char *)a1 + v9;
      v11 = (char *)a2 + v9;
      v12 = sub_1DC401030();
      v13 = *(_QWORD *)(v12 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
      {
        sub_1DC092F50(0, &qword_1EDB28DC0, (void (*)(uint64_t))MEMORY[0x1E0DAF040]);
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      }
      v19 = v8[6];
      v20 = (char *)a1 + v19;
      v21 = (char *)a2 + v19;
      v22 = (int *)type metadata accessor for StockSparklineViewModel(0);
      v23 = *((_QWORD *)v22 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v23 + 48))(v21, 1, v22))
      {
        sub_1DC092F50(0, &qword_1EDB353E0, (void (*)(uint64_t))type metadata accessor for StockSparklineViewModel);
        memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
      }
      else
      {
        v25 = sub_1DC408614();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v20, v21, v25);
        v26 = v22[5];
        v27 = &v20[v26];
        v28 = &v21[v26];
        v29 = *(_QWORD *)v28;
        v27[8] = v28[8];
        *(_QWORD *)v27 = v29;
        v30 = v22[6];
        v31 = &v20[v30];
        v32 = &v21[v30];
        LOBYTE(v29) = v32[8];
        *(_QWORD *)v31 = *(_QWORD *)v32;
        v31[8] = v29;
        v20[v22[7]] = v21[v22[7]];
        v33 = v22[8];
        v34 = &v20[v33];
        v35 = &v21[v33];
        v36 = sub_1DC400F7C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 16))(v34, v35, v36);
        (*(void (**)(char *, _QWORD, uint64_t, int *))(v23 + 56))(v20, 0, 1, v22);
      }
      v37 = v8[7];
      v78 = v8;
      v38 = (char *)a1 + v37;
      v39 = (char *)a2 + v37;
      v40 = *(_QWORD *)((char *)a2 + v37);
      v38[8] = v39[8];
      *(_QWORD *)v38 = v40;
      v41 = *((_QWORD *)v39 + 2);
      v38[24] = v39[24];
      *((_QWORD *)v38 + 2) = v41;
      v42 = *((_QWORD *)v39 + 4);
      v38[40] = v39[40];
      *((_QWORD *)v38 + 4) = v42;
      *((_QWORD *)v38 + 6) = *((_QWORD *)v39 + 6);
      *((_QWORD *)v38 + 7) = *((_QWORD *)v39 + 7);
      *((_QWORD *)v38 + 8) = *((_QWORD *)v39 + 8);
      *((_QWORD *)v38 + 9) = *((_QWORD *)v39 + 9);
      v38[80] = v39[80];
      v43 = type metadata accessor for PriceViewModel();
      v44 = *(int *)(v43 + 40);
      v77 = &v38[v44];
      v45 = &v39[v44];
      v46 = sub_1DC4011C8();
      v47 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v47(v77, v45, v46);
      v48 = *(int *)(v43 + 44);
      v49 = &v38[v48];
      v50 = &v39[v48];
      v51 = sub_1DC400118();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 16))(v49, v50, v51);
      v52 = v78[8];
      v53 = (char *)a1 + v52;
      v54 = (char *)a2 + v52;
      v55 = sub_1DC4008EC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 16))(v53, v54, v55);
      *((_BYTE *)a1 + v78[9]) = *((_BYTE *)a2 + v78[9]);
      sub_1DC0F78E4();
      v57 = *(int *)(v56 + 48);
      v58 = (char *)a1 + v57;
      v59 = (char *)a2 + v57;
      v60 = *((_OWORD *)v59 + 1);
      *(_OWORD *)v58 = *(_OWORD *)v59;
      *((_OWORD *)v58 + 1) = v60;
      LOBYTE(v57) = v59[40];
      *((_QWORD *)v58 + 4) = *((_QWORD *)v59 + 4);
      v58[40] = v57;
      v61 = *((_OWORD *)v59 + 4);
      *((_OWORD *)v58 + 3) = *((_OWORD *)v59 + 3);
      *((_OWORD *)v58 + 4) = v61;
      v62 = (void *)*((_QWORD *)v59 + 10);
      *((_QWORD *)v58 + 10) = v62;
      v63 = *(_OWORD *)(v59 + 88);
      *(_OWORD *)(v58 + 104) = *(_OWORD *)(v59 + 104);
      *(_OWORD *)(v58 + 88) = v63;
      v64 = *(_OWORD *)(v59 + 136);
      *(_OWORD *)(v58 + 120) = *(_OWORD *)(v59 + 120);
      *(_OWORD *)(v58 + 136) = v64;
      v65 = *(_OWORD *)(v59 + 168);
      *(_OWORD *)(v58 + 152) = *(_OWORD *)(v59 + 152);
      *(_OWORD *)(v58 + 168) = v65;
      v66 = *(_OWORD *)(v59 + 200);
      *(_OWORD *)(v58 + 184) = *(_OWORD *)(v59 + 184);
      *(_OWORD *)(v58 + 200) = v66;
      v67 = *(_OWORD *)(v59 + 232);
      *(_OWORD *)(v58 + 216) = *(_OWORD *)(v59 + 216);
      *(_OWORD *)(v58 + 232) = v67;
      v68 = *(_OWORD *)(v59 + 264);
      *(_OWORD *)(v58 + 248) = *(_OWORD *)(v59 + 248);
      *(_OWORD *)(v58 + 264) = v68;
      v69 = v59[312];
      v70 = *(_OWORD *)(v59 + 296);
      *(_OWORD *)(v58 + 280) = *(_OWORD *)(v59 + 280);
      *(_OWORD *)(v58 + 296) = v70;
      v58[312] = v69;
      v71 = (void *)*((_QWORD *)v59 + 40);
      v72 = v62;
      if (v71 != (void *)1)
        v73 = v71;
      *((_QWORD *)v58 + 40) = v71;
      v74 = (void *)*((_QWORD *)v59 + 41);
      *((_QWORD *)v58 + 41) = v74;
      v75 = v74;
      goto LABEL_15;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

char *sub_1DC1B9AE4(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  int *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;

  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v6 = sub_1DC4010E4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    v7 = (int *)type metadata accessor for StockViewModel();
    v8 = v7[5];
    v9 = &a1[v8];
    v10 = &a2[v8];
    v11 = sub_1DC401030();
    v12 = *(_QWORD *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    {
      sub_1DC092F50(0, &qword_1EDB28DC0, (void (*)(uint64_t))MEMORY[0x1E0DAF040]);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    v14 = v7[6];
    v15 = &a1[v14];
    v16 = &a2[v14];
    v17 = (int *)type metadata accessor for StockSparklineViewModel(0);
    v18 = *((_QWORD *)v17 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v18 + 48))(v16, 1, v17))
    {
      sub_1DC092F50(0, &qword_1EDB353E0, (void (*)(uint64_t))type metadata accessor for StockSparklineViewModel);
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      v20 = sub_1DC408614();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v15, v16, v20);
      v21 = v17[5];
      v22 = &v15[v21];
      v23 = &v16[v21];
      *(_QWORD *)v22 = *(_QWORD *)v23;
      v22[8] = v23[8];
      v24 = v17[6];
      v25 = &v15[v24];
      v26 = &v16[v24];
      *(_QWORD *)v25 = *(_QWORD *)v26;
      v25[8] = v26[8];
      v15[v17[7]] = v16[v17[7]];
      v27 = v17[8];
      v28 = &v15[v27];
      v29 = &v16[v27];
      v30 = sub_1DC400F7C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v18 + 56))(v15, 0, 1, v17);
    }
    v31 = v7[7];
    v32 = &a1[v31];
    v33 = &a2[v31];
    *(_QWORD *)v32 = *(_QWORD *)&a2[v31];
    v32[8] = a2[v31 + 8];
    *((_QWORD *)v32 + 2) = *(_QWORD *)&a2[v31 + 16];
    v32[24] = a2[v31 + 24];
    *((_QWORD *)v32 + 4) = *(_QWORD *)&a2[v31 + 32];
    v32[40] = a2[v31 + 40];
    v34 = *(_OWORD *)&a2[v31 + 64];
    *((_OWORD *)v32 + 3) = *(_OWORD *)&a2[v31 + 48];
    *((_OWORD *)v32 + 4) = v34;
    v32[80] = a2[v31 + 80];
    v35 = type metadata accessor for PriceViewModel();
    v36 = *(int *)(v35 + 40);
    v37 = &v32[v36];
    v38 = &v33[v36];
    v39 = sub_1DC4011C8();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 32))(v37, v38, v39);
    v40 = *(int *)(v35 + 44);
    v41 = &v32[v40];
    v42 = &v33[v40];
    v43 = sub_1DC400118();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 32))(v41, v42, v43);
    v44 = v7[8];
    v45 = &a1[v44];
    v46 = &a2[v44];
    v47 = sub_1DC4008EC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 32))(v45, v46, v47);
    a1[v7[9]] = a2[v7[9]];
    sub_1DC0F78E4();
    memcpy(&a1[*(int *)(v48 + 48)], &a2[*(int *)(v48 + 48)], 0x150uLL);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *sub_1DC1B9E30(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  int *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;

  if (a1 != a2)
  {
    sub_1DC0926D8((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for StockListLayoutModel);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v6 = sub_1DC4010E4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      v7 = (int *)type metadata accessor for StockViewModel();
      v8 = v7[5];
      v9 = &a1[v8];
      v10 = &a2[v8];
      v11 = sub_1DC401030();
      v12 = *(_QWORD *)(v11 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
      {
        sub_1DC092F50(0, &qword_1EDB28DC0, (void (*)(uint64_t))MEMORY[0x1E0DAF040]);
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      }
      v14 = v7[6];
      v15 = &a1[v14];
      v16 = &a2[v14];
      v17 = (int *)type metadata accessor for StockSparklineViewModel(0);
      v18 = *((_QWORD *)v17 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v18 + 48))(v16, 1, v17))
      {
        sub_1DC092F50(0, &qword_1EDB353E0, (void (*)(uint64_t))type metadata accessor for StockSparklineViewModel);
        memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
      }
      else
      {
        v20 = sub_1DC408614();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v15, v16, v20);
        v21 = v17[5];
        v22 = &v15[v21];
        v23 = &v16[v21];
        *(_QWORD *)v22 = *(_QWORD *)v23;
        v22[8] = v23[8];
        v24 = v17[6];
        v25 = &v15[v24];
        v26 = &v16[v24];
        *(_QWORD *)v25 = *(_QWORD *)v26;
        v25[8] = v26[8];
        v15[v17[7]] = v16[v17[7]];
        v27 = v17[8];
        v28 = &v15[v27];
        v29 = &v16[v27];
        v30 = sub_1DC400F7C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
        (*(void (**)(char *, _QWORD, uint64_t, int *))(v18 + 56))(v15, 0, 1, v17);
      }
      v31 = v7[7];
      v32 = &a1[v31];
      v33 = &a2[v31];
      *(_QWORD *)v32 = *(_QWORD *)&a2[v31];
      v32[8] = a2[v31 + 8];
      *((_QWORD *)v32 + 2) = *(_QWORD *)&a2[v31 + 16];
      v32[24] = a2[v31 + 24];
      *((_QWORD *)v32 + 4) = *(_QWORD *)&a2[v31 + 32];
      v32[40] = a2[v31 + 40];
      v34 = *(_OWORD *)&a2[v31 + 64];
      *((_OWORD *)v32 + 3) = *(_OWORD *)&a2[v31 + 48];
      *((_OWORD *)v32 + 4) = v34;
      v32[80] = a2[v31 + 80];
      v35 = type metadata accessor for PriceViewModel();
      v36 = *(int *)(v35 + 40);
      v37 = &v32[v36];
      v38 = &v33[v36];
      v39 = sub_1DC4011C8();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 32))(v37, v38, v39);
      v40 = *(int *)(v35 + 44);
      v41 = &v32[v40];
      v42 = &v33[v40];
      v43 = sub_1DC400118();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 32))(v41, v42, v43);
      v44 = v7[8];
      v45 = &a1[v44];
      v46 = &a2[v44];
      v47 = sub_1DC4008EC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 32))(v45, v46, v47);
      a1[v7[9]] = a2[v7[9]];
      sub_1DC0F78E4();
      memcpy(&a1[*(int *)(v48 + 48)], &a2[*(int *)(v48 + 48)], 0x150uLL);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_1DC1BA194()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[42];

  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)v8 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0F7210(v3, (uint64_t)v2);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
      sub_1DC0926D8((uint64_t)v2, (uint64_t (*)(_QWORD))type metadata accessor for StockListLayoutModel);
    return 0;
  }
  else
  {
    sub_1DC0F78E4();
    memcpy(v8, &v2[*(int *)(v6 + 48)], sizeof(v8));
    sub_1DC0F825C((uint64_t)v8);
    v5 = v8[4];
    sub_1DC0926D8((uint64_t)v2, (uint64_t (*)(_QWORD))type metadata accessor for StockViewModel);
  }
  return v5;
}

id sub_1DC1BA27C()
{
  return objc_msgSend((id)objc_opt_self(), sel_clearColor);
}

uint64_t sub_1DC1BA2AC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  int EnumCaseMultiPayload;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v16[336];

  v2 = v1;
  v4 = type metadata accessor for StockViewModel();
  MEMORY[0x1E0C80A78](v4);
  v6 = &v16[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for StockListLayoutModel();
  MEMORY[0x1E0C80A78](v7);
  v9 = &v16[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1DC0F7210(v2, (uint64_t)v9);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
      sub_1DC0926D8((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for StockListLayoutModel);
    v11 = sub_1DC4010E4();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(a1, 1, 1, v11);
  }
  else
  {
    sub_1DC0F78E4();
    memcpy(v16, &v9[*(int *)(v13 + 48)], sizeof(v16));
    sub_1DC0F825C((uint64_t)v16);
    sub_1DC0F0F38((uint64_t)v9, (uint64_t)v6);
    v14 = sub_1DC4010E4();
    v15 = *(_QWORD *)(v14 - 8);
    (*(void (**)(uint64_t, _BYTE *, uint64_t))(v15 + 16))(a1, v6, v14);
    sub_1DC0926D8((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for StockViewModel);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v15 + 56))(a1, 0, 1, v14);
  }
}

uint64_t sub_1DC1BA434(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  objc_class *v15;
  unint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  id v24;
  uint64_t ObjCClassFromMetadata;
  id v26;
  void *v27;
  id v28;
  uint64_t v29;
  id v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  objc_super v35;

  v3 = type metadata accessor for ManageWatchlistsContentMode(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x1E0C80A78](v3);
  v34 = (uint64_t)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v33 - v7;
  v9 = sub_1DC403AC0();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v10 + 104))(v13, *MEMORY[0x1E0DADEC0], v9, v11);
  v14 = sub_1DC4017EC();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 40));
  v15 = (objc_class *)type metadata accessor for ManageWatchlistsViewController();
  sub_1DC173D68(a1, (uint64_t)v8);
  v16 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v17 = swift_allocObject();
  sub_1DC173658((uint64_t)v8, v17 + v16);
  *(_QWORD *)(v17 + ((v5 + v16 + 7) & 0xFFFFFFFFFFFFFFF8)) = v14;
  swift_retain();
  v18 = (void *)sub_1DC4025E4();
  result = swift_release();
  if (v18)
  {
    v20 = v34;
    sub_1DC173D68(a1, v34);
    sub_1DC15C2FC();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 48))(v20, 1, v21) == 1)
    {
      v35.receiver = v18;
      v35.super_class = v15;
      objc_msgSendSuper2(&v35, sel_setEditing_animated_, 1, 0);
      sub_1DC4055C0();
      sub_1DC4055CC();
      v22 = (void *)sub_1DC405074();
      swift_release();
      objc_msgSend(v22, sel_setDragInteractionEnabled_, 0);

      sub_1DC4055CC();
      v23 = (void *)sub_1DC405074();
      swift_release();
      objc_msgSend(v23, sel_setAllowsMultipleSelection_, 0);

      v24 = objc_msgSend(v18, sel_navigationItem);
      type metadata accessor for Localized();
      ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
      v26 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
      sub_1DC3FFC80();

      v27 = (void *)sub_1DC408A1C();
      swift_bridgeObjectRelease();
      objc_msgSend(v24, sel_setTitle_, v27);

      swift_release();
    }
    else
    {
      v28 = objc_msgSend(v18, sel_navigationItem);
      type metadata accessor for Localized();
      v29 = swift_getObjCClassFromMetadata();
      v30 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, v29);
      sub_1DC3FFC80();

      v31 = (void *)sub_1DC408A1C();
      swift_bridgeObjectRelease();
      objc_msgSend(v28, sel_setTitle_, v31);

      swift_release();
      v32 = sub_1DC4010E4();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 8))(v20, v32);
    }
    return (uint64_t)v18;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC1BA8CC(_QWORD *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for ManageWatchlistsContentMode(0);
  sub_1DC402518();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4018AC();
  return sub_1DC40250C();
}

uint64_t type metadata accessor for ManageWatchlistsModule()
{
  return objc_opt_self();
}

uint64_t sub_1DC1BA988()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(type metadata accessor for ManageWatchlistsContentMode(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  sub_1DC15C2FC();
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 48))(v0 + v2, 1, v3))
  {
    v4 = sub_1DC4010E4();
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v0 + v2, v4);
  }
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DC1BAA38(_QWORD *a1)
{
  type metadata accessor for ManageWatchlistsContentMode(0);
  return sub_1DC1BA8CC(a1);
}

void sub_1DC1BAA88()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  swift_checkMetadataState();
  if (v0 <= 0x3F)
  {
    sub_1DC4010E4();
    if (v1 <= 0x3F)
    {
      sub_1DC1BB44C(319);
      if (v2 <= 0x3F)
        swift_initClassMetadata2();
    }
  }
}

uint64_t sub_1DC1BAB98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v4;

  v4 = 0;
  return (*(uint64_t (**)(uint64_t, _QWORD, char *, uint64_t, uint64_t))(a3 + 88))(a1, 0, &v4, a2, a3);
}

uint64_t sub_1DC1BABCC@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v14[24];

  sub_1DC1BB44C(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = &v14[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v6);
  v8 = &v14[-v7];
  v9 = (uint64_t)v1 + *(_QWORD *)(*v1 + 224);
  swift_beginAccess();
  sub_1DC0990BC(v9, (uint64_t)v8, (uint64_t (*)(_QWORD))sub_1DC1BB44C);
  sub_1DC0BB2BC(0);
  v11 = v10;
  v12 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v12 + 48))(v8, 1, v10) != 1)
    return sub_1DC092ED0((uint64_t)v8, a1, (uint64_t (*)(_QWORD))sub_1DC0BB2BC);
  sub_1DC0926D8((uint64_t)v8, (uint64_t (*)(_QWORD))sub_1DC1BB44C);
  sub_1DC1BAEEC(v1, &qword_1F034B178, (uint64_t)&qword_1F03528A8, (uint64_t)sub_1DC372290, a1);
  sub_1DC0990BC(a1, (uint64_t)v5, (uint64_t (*)(_QWORD))sub_1DC0BB2BC);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v5, 0, 1, v11);
  swift_beginAccess();
  sub_1DC1C06C0((uint64_t)v5, v9);
  return swift_endAccess();
}

uint64_t sub_1DC1BAD5C@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v14[24];

  sub_1DC1BB44C(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = &v14[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v6);
  v8 = &v14[-v7];
  v9 = (uint64_t)v1 + *(_QWORD *)(*v1 + 232);
  swift_beginAccess();
  sub_1DC0990BC(v9, (uint64_t)v8, (uint64_t (*)(_QWORD))sub_1DC1BB44C);
  sub_1DC0BB2BC(0);
  v11 = v10;
  v12 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v12 + 48))(v8, 1, v10) != 1)
    return sub_1DC092ED0((uint64_t)v8, a1, (uint64_t (*)(_QWORD))sub_1DC0BB2BC);
  sub_1DC0926D8((uint64_t)v8, (uint64_t (*)(_QWORD))sub_1DC1BB44C);
  sub_1DC1BAEEC(v1, &qword_1F034B180, (uint64_t)&unk_1F03528B0, (uint64_t)sub_1DC3722D0, a1);
  sub_1DC0990BC(a1, (uint64_t)v5, (uint64_t (*)(_QWORD))sub_1DC0BB2BC);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v5, 0, 1, v11);
  swift_beginAccess();
  sub_1DC1C06C0((uint64_t)v5, v9);
  return swift_endAccess();
}

uint64_t sub_1DC1BAEEC@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void (*v10)(uint64_t);
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v27[2];
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v27[1] = a4;
  v33 = a5;
  v6 = *a1;
  v29 = a3;
  v30 = v6;
  v34 = sub_1DC3FFFEC();
  v32 = *(_QWORD *)(v34 - 8);
  MEMORY[0x1E0C80A78](v34);
  v8 = (char *)v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1DC4001CC();
  v10 = (void (*)(uint64_t))MEMORY[0x1E0CB11F0];
  v31 = v9;
  v28 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC092F50(0, (unint64_t *)&unk_1EDB28B30, (void (*)(uint64_t))MEMORY[0x1E0CB1470]);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)v27 - v14;
  sub_1DC092F50(0, (unint64_t *)&unk_1EDB28B10, v10);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)v27 - v17;
  v19 = sub_1DC3FFBE4();
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v22 = (char *)v27 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EDB28FE8 != -1)
    swift_once();
  if ((sub_1DC401300() & 1) == 0)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v32 + 56))(v33, 1, 1, v34);
  v27[0] = v19;
  if (*a2 != -1)
    swift_once();
  MEMORY[0x1DF0CAB8C](&unk_1DC414CB0, v30);
  sub_1DC4012D0();
  v23 = v28;
  v24 = v31;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v28 + 56))(v18, 1, 1, v31);
  v25 = sub_1DC400220();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v15, 1, 1, v25);
  sub_1DC3FFBD8();
  sub_1DC3FFB9C();
  sub_1DC40019C();
  sub_1DC3FFFE0();
  sub_1DC400184();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v8, v34);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v12, v24);
  return (*(uint64_t (**)(char *, _QWORD))(v20 + 8))(v22, v27[0]);
}

uint64_t *sub_1DC1BB274()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = v0;
  v2 = *v0;
  v3 = (uint64_t *)((char *)v0 + *(_QWORD *)(*v0 + 128));
  v4 = v3[3];
  v5 = v3[4];
  __swift_project_boxed_opaque_existential_1(v3, v4);
  (*(void (**)(uint64_t *, _UNKNOWN **, uint64_t, uint64_t))(v5 + 24))(v0, &off_1EA453DA0, v4, v5);
  sub_1DC148A20((uint64_t)(v0 + 2));
  swift_release();
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v2 + 80) - 8) + 8))((uint64_t)v1 + *(_QWORD *)(*v1 + 112));
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
  swift_release();
  swift_release();
  v6 = (uint64_t)v1 + *(_QWORD *)(*v1 + 152);
  v7 = sub_1DC4010E4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);

  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v1 + *(_QWORD *)(*v1 + 192));
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  sub_1DC0926D8((uint64_t)v1 + *(_QWORD *)(*v1 + 224), (uint64_t (*)(_QWORD))sub_1DC1BB44C);
  sub_1DC0926D8((uint64_t)v1 + *(_QWORD *)(*v1 + 232), (uint64_t (*)(_QWORD))sub_1DC1BB44C);
  return v1;
}

uint64_t sub_1DC1BB41C()
{
  sub_1DC1BB274();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for StockFeedInteractor(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for StockFeedInteractor);
}

void sub_1DC1BB44C(uint64_t a1)
{
  sub_1DC092F50(a1, &qword_1EDB42630, sub_1DC0BB2BC);
}

uint64_t sub_1DC1BB460()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t (*v23)(void);
  uint64_t v24;
  uint64_t (*v25)(uint64_t);
  uint64_t (**v26)(uint64_t);
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37[4];

  v1 = v0;
  v2 = *v0;
  sub_1DC0BB2BC(0);
  MEMORY[0x1E0C80A78](v3);
  v33 = (uint64_t)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v29 - v6;
  v8 = sub_1DC40124C();
  v31 = *(_QWORD *)(v8 - 8);
  v32 = v8;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1DC4008EC();
  v34 = *(_QWORD *)(v11 - 8);
  v35 = v11;
  MEMORY[0x1E0C80A78](v11);
  v36 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC405008();
  v13 = *(_QWORD *)((char *)v1 + *(_QWORD *)(*v1 + 120));
  sub_1DC1EA934(v37);
  __swift_project_boxed_opaque_existential_1(v37, v37[3]);
  v14 = swift_allocObject();
  swift_weakInit();
  v15 = (_QWORD *)swift_allocObject();
  v30 = *(_QWORD *)(v2 + 80);
  v15[2] = v30;
  v16 = *(_QWORD *)(v2 + 88);
  v15[3] = v16;
  v15[4] = v14;
  sub_1DC406FC4();
  swift_release();
  swift_beginAccess();
  sub_1DC406F70();
  swift_endAccess();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v13 + OBJC_IVAR____TtC8StocksUI20StockFeedDataManager_watchlistManager), *(_QWORD *)(v13 + OBJC_IVAR____TtC8StocksUI20StockFeedDataManager_watchlistManager + 24));
  sub_1DC400A60();
  v17 = v36;
  sub_1DC4011EC();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v10, v32);
  sub_1DC1BABCC((uint64_t)v7);
  v18 = v33;
  sub_1DC1BAD5C(v33);
  v19 = v30;
  v20 = (*(uint64_t (**)(char *, char *, uint64_t, uint64_t, uint64_t))(v16 + 40))(v17, v7, v18, v30, v16);
  sub_1DC0926D8(v18, (uint64_t (*)(_QWORD))sub_1DC0BB2BC);
  sub_1DC0926D8((uint64_t)v7, (uint64_t (*)(_QWORD))sub_1DC0BB2BC);
  v37[0] = v20;
  v21 = swift_allocObject();
  swift_weakInit();
  v22 = (_QWORD *)swift_allocObject();
  v22[2] = v19;
  v22[3] = v16;
  v22[4] = v21;
  v23 = MEMORY[0x1E0DB8020];
  sub_1DC165EEC(0, (unint64_t *)&qword_1EDB29E00, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB8020]);
  sub_1DC165EAC(&qword_1EDB29DF8, (unint64_t *)&qword_1EDB29E00, (uint64_t (*)(uint64_t, _QWORD *))v23, MEMORY[0x1E0DB8030]);
  swift_retain();
  sub_1DC4049E4();
  swift_release();
  swift_release();
  v24 = *(_QWORD *)((char *)v1 + *(_QWORD *)(*v1 + 160));
  swift_unownedRetainStrong();
  swift_unownedRetain();
  swift_release();
  v25 = (uint64_t (*)(uint64_t))swift_allocObject();
  *((_QWORD *)v25 + 2) = v19;
  *((_QWORD *)v25 + 3) = v16;
  *((_QWORD *)v25 + 4) = v1;
  v26 = (uint64_t (**)(uint64_t))(v24 + qword_1F034E060);
  v27 = *(_QWORD *)(v24 + qword_1F034E060);
  *v26 = sub_1DC1C04FC;
  v26[1] = v25;
  sub_1DC0E81D0(v27);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v36, v35);
}

