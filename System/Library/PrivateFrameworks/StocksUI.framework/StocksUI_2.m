void sub_1DC1BB854(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t Strong;
  uint64_t v11;
  void *v12;
  unint64_t v13;
  char *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v7 = sub_1DC4008EC();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x1E0C80A78](v7);
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v11 = Strong;
    v19 = a4;
    sub_1DC1BBA54(a1);
    sub_1DC400514();
    sub_1DC402E0C();
    swift_retain();
    v18 = a3;
    v12 = (void *)sub_1DC402C80();
    sub_1DC092F50(0, &qword_1EDB28DC0, (void (*)(uint64_t))MEMORY[0x1E0DAF040]);
    sub_1DC402D04();
    swift_release();
    swift_release();

    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v7);
    v13 = (*(unsigned __int8 *)(v8 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    v14 = (char *)swift_allocObject();
    v15 = v19;
    *((_QWORD *)v14 + 2) = v18;
    *((_QWORD *)v14 + 3) = v15;
    *((_QWORD *)v14 + 4) = v11;
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(&v14[v13], (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
    swift_retain();
    v16 = (void *)sub_1DC402C80();
    sub_1DC1C0804();
    sub_1DC402D04();
    swift_release();
    swift_release();
    swift_release();
    swift_release();

  }
}

uint64_t sub_1DC1BBA54(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(void);

  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(*(_QWORD *)v1 + 88) + 72))(a1, *(_QWORD *)(*(_QWORD *)v1 + 80));
  v2 = MEMORY[0x1E0DB8020];
  sub_1DC165EEC(0, (unint64_t *)&qword_1EDB29E00, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB8020]);
  sub_1DC165EAC(&qword_1EDB29DF8, (unint64_t *)&qword_1EDB29E00, (uint64_t (*)(uint64_t, _QWORD *))v2, MEMORY[0x1E0DB8030]);
  sub_1DC4049E4();
  return swift_release();
}

uint64_t sub_1DC1BBB0C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, BOOL *a4@<X8>)
{
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  v7 = *a2;
  result = MEMORY[0x1DF0CAD78](a2 + 2);
  v10 = result;
  if (result)
  {
    type metadata accessor for StockFeedInteractor(0, *(_QWORD *)(v7 + 80), *(_QWORD *)(v7 + 88), v9);
    sub_1DC3BEE04(a1, a3, v10);
    result = swift_unknownObjectRelease();
  }
  *a4 = v10 == 0;
  return result;
}

void sub_1DC1BBB98(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void **v10;
  uint64_t Strong;
  uint64_t v12;
  uint64_t v13;
  uint64_t ObjectType;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t);
  int v17;
  void *v18;
  id v19;
  uint64_t (*v20)(void);
  char *v21;
  uint64_t (*v22)(void);
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  sub_1DC165EEC(0, (unint64_t *)&qword_1EDB2AB10, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v24 - v5;
  v7 = sub_1DC405578();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (void **)((char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v25 = v6;
    v26 = v4;
    v27 = v3;
    v28 = a1;
    v12 = *(_QWORD *)(Strong + *(_QWORD *)(*(_QWORD *)Strong + 120));
    v13 = *(_QWORD *)(v12 + OBJC_IVAR____TtC8StocksUI20StockFeedDataManager_priceDataRefreshManager + 8);
    ObjectType = swift_getObjectType();
    v15 = v12 + OBJC_IVAR____TtC8StocksUI20StockFeedDataManager_stock;
    v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 32);
    swift_unknownObjectRetain();
    v16(v15, ObjectType, v13);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v12 + OBJC_IVAR____TtC8StocksUI20StockFeedDataManager_priceDataManager), *(_QWORD *)(v12 + OBJC_IVAR____TtC8StocksUI20StockFeedDataManager_priceDataManager + 24));
    sub_1DC080808(&qword_1EDB27AD8, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedDataManager, (uint64_t)&unk_1DC417030);
    sub_1DC400D0C();
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v12 + OBJC_IVAR____TtC8StocksUI20StockFeedDataManager_watchlistManager), *(_QWORD *)(v12 + OBJC_IVAR____TtC8StocksUI20StockFeedDataManager_watchlistManager + 24));
    sub_1DC080808(&qword_1EDB31ED0, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedDataManager, (uint64_t)&unk_1DC417000);
    sub_1DC400AB4();
    swift_unknownObjectRelease();
    (*(void (**)(void **, uint64_t, uint64_t))(v8 + 16))(v10, v28, v7);
    v17 = (*(uint64_t (**)(void **, uint64_t))(v8 + 88))(v10, v7);
    if (v17 == *MEMORY[0x1E0DB9A48])
    {
      (*(void (**)(void **, uint64_t))(v8 + 96))(v10, v7);
      v18 = *v10;
      swift_retain();
      v19 = v18;
      sub_1DC405008();
      swift_release();
      swift_release();

    }
    else if (v17 == *MEMORY[0x1E0DB9A40])
    {
      swift_retain();
      sub_1DC4049CC();
      v29 = v30;
      v20 = MEMORY[0x1E0DB80B8];
      sub_1DC165EEC(0, (unint64_t *)&qword_1EDB29E80, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB80B8]);
      sub_1DC165EAC((unint64_t *)&qword_1EDB29E70, (unint64_t *)&qword_1EDB29E80, (uint64_t (*)(uint64_t, _QWORD *))v20, MEMORY[0x1E0DB80D0]);
      v21 = v25;
      sub_1DC405050();
      swift_release();
      type metadata accessor for StockFeedSectionDescriptor();
      type metadata accessor for StockFeedModel();
      sub_1DC080808(&qword_1EDB36EE0, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedSectionDescriptor, (uint64_t)&unk_1DC4167B0);
      sub_1DC080808(&qword_1EDB2D770, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedModel, (uint64_t)&unk_1DC429058);
      sub_1DC404FE4();
      (*(void (**)(char *, uint64_t))(v26 + 8))(v21, v27);
      sub_1DC405008();
      swift_release();
      swift_release();
    }
    else if (v17 == *MEMORY[0x1E0DB9A50])
    {
      swift_retain();
      sub_1DC4049CC();
      v29 = v30;
      v22 = MEMORY[0x1E0DB80B8];
      sub_1DC165EEC(0, (unint64_t *)&qword_1EDB29E80, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB80B8]);
      sub_1DC165EAC((unint64_t *)&qword_1EDB29E70, (unint64_t *)&qword_1EDB29E80, (uint64_t (*)(uint64_t, _QWORD *))v22, MEMORY[0x1E0DB80D0]);
      v23 = v25;
      sub_1DC405050();
      swift_release();
      type metadata accessor for StockFeedSectionDescriptor();
      type metadata accessor for StockFeedModel();
      sub_1DC080808(&qword_1EDB36EE0, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedSectionDescriptor, (uint64_t)&unk_1DC4167B0);
      sub_1DC080808(&qword_1EDB2D770, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedModel, (uint64_t)&unk_1DC429058);
      sub_1DC404FE4();
      (*(void (**)(char *, uint64_t))(v26 + 8))(v23, v27);
      sub_1DC405008();
      swift_release();
      sub_1DC1BC0B4(0);
      swift_release();
    }
    else
    {
      swift_release();
      (*(void (**)(void **, uint64_t))(v8 + 8))(v10, v7);
    }
  }
}

uint64_t sub_1DC1BC0B4(char a1)
{
  void *v2;

  type metadata accessor for StockFeedQuoteData();
  sub_1DC402E0C();
  sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3F8D0);
  v2 = (void *)sub_1DC409148();
  *(_BYTE *)(swift_allocObject() + 16) = a1;
  sub_1DC402D1C();
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t sub_1DC1BC190(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t (*v14)(_QWORD);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(void);
  char *v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  _QWORD v23[2];

  v8 = *(_QWORD *)(a3 - 8);
  MEMORY[0x1E0C80A78](a1);
  v10 = (char *)v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1DC1C0508();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0990BC(a1, (uint64_t)v13, v14);
  sub_1DC1C0608();
  v16 = v15;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v13, 1, v15) == 1)
  {
    swift_unownedRetainStrong();
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a2 + *(_QWORD *)(*(_QWORD *)a2 + 112), a3);
    swift_release();
    v17 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 80))(a3, a4);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, a3);
    swift_unownedRetainStrong();
    swift_retain();
    swift_release();
    v23[1] = v17;
    v18 = MEMORY[0x1E0DB8020];
    sub_1DC165EEC(0, (unint64_t *)&qword_1EDB29E00, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB8020]);
    sub_1DC165EAC(&qword_1EDB29DF8, (unint64_t *)&qword_1EDB29E00, (uint64_t (*)(uint64_t, _QWORD *))v18, MEMORY[0x1E0DB8030]);
    sub_1DC4049E4();
    swift_release();
    return swift_release();
  }
  else
  {
    v20 = &v13[*(int *)(v16 + 48)];
    v21 = sub_1DC407EAC();
    v22 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v21 - 8) + 8);
    v22(v20, v21);
    return ((uint64_t (*)(char *, uint64_t))v22)(v13, v21);
  }
}

uint64_t sub_1DC1BC388()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t (*v11)(void);

  v1 = *v0;
  v2 = MEMORY[0x1DF0CAD78](v0 + 2);
  if (v2)
  {
    v3 = MEMORY[0x1DF0CAD78](v2 + 16);
    if (v3)
    {
      v4 = (void *)v3;
      *(_QWORD *)(swift_allocObject() + 16) = v3;
      v5 = v4;
      sub_1DC402E3C();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      swift_release();
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
  v8 = v1 + 80;
  v7 = *(_QWORD *)(v1 + 80);
  v6 = *(_QWORD *)(v8 + 8);
  (*(void (**)(uint64_t, uint64_t))(v6 + 48))(v7, v6);
  v9 = swift_allocObject();
  swift_weakInit();
  v10 = (_QWORD *)swift_allocObject();
  v10[2] = v7;
  v10[3] = v6;
  v10[4] = v9;
  v11 = MEMORY[0x1E0DB8020];
  sub_1DC165EEC(0, (unint64_t *)&qword_1EDB29E00, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB8020]);
  sub_1DC165EAC(&qword_1EDB29DF8, (unint64_t *)&qword_1EDB29E00, (uint64_t (*)(uint64_t, _QWORD *))v11, MEMORY[0x1E0DB8030]);
  swift_retain();
  sub_1DC4049E4();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1DC1BC530()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v1 = MEMORY[0x1DF0CAD78](result + 16);
    if (v1)
    {
      v2 = MEMORY[0x1DF0CAD78](v1 + 16);
      if (v2)
      {
        *(_QWORD *)(swift_allocObject() + 16) = v2;
        swift_retain();
        swift_unknownObjectRetain();
        sub_1DC402E3C();
        swift_release_n();
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        return swift_release();
      }
      else
      {
        swift_release();
        return swift_unknownObjectRelease();
      }
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_1DC1BC620(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(void);

  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(*(_QWORD *)v1 + 88) + 112))(a1, *(_QWORD *)(*(_QWORD *)v1 + 80));
  v2 = MEMORY[0x1E0DB8020];
  sub_1DC165EEC(0, (unint64_t *)&qword_1EDB29E00, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB8020]);
  sub_1DC165EAC(&qword_1EDB29DF8, (unint64_t *)&qword_1EDB29E00, (uint64_t (*)(uint64_t, _QWORD *))v2, MEMORY[0x1E0DB8030]);
  sub_1DC4049E4();
  return swift_release();
}

uint64_t sub_1DC1BC6D8(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t (*v15)(void);
  int EnumCaseMultiPayload;
  _QWORD v18[3];
  _QWORD *v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v18[2] = *v1;
  v22 = type metadata accessor for StockFeedModel();
  MEMORY[0x1E0C80A78](v22);
  v21 = (char *)v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC092F50(0, &qword_1EDB29BC8, (void (*)(uint64_t))sub_1DC142200);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v18 - v5;
  sub_1DC142200();
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v20 = (char *)v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC165EEC(0, (unint64_t *)&qword_1EDB2AB10, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790]);
  v12 = v11;
  v23 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)v18 - v13;
  v19 = v1;
  sub_1DC4049CC();
  v25 = v24;
  v15 = MEMORY[0x1E0DB80B8];
  sub_1DC165EEC(0, (unint64_t *)&qword_1EDB29E80, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB80B8]);
  sub_1DC165EAC((unint64_t *)&qword_1EDB29E70, (unint64_t *)&qword_1EDB29E80, (uint64_t (*)(uint64_t, _QWORD *))v15, MEMORY[0x1E0DB80D0]);
  sub_1DC405050();
  swift_release();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4025A8();
  sub_1DC406C7C();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v20, v6, v8);
    sub_1DC404354();
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v22 = (uint64_t)v14;
    __asm { BR              X10 }
  }
  (*(void (**)(char *, uint64_t))(v23 + 8))(v14, v12);
  return sub_1DC092F14((uint64_t)v6, &qword_1EDB29BC8, (void (*)(uint64_t))sub_1DC142200);
}

uint64_t sub_1DC1BCC48(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  v4 = sub_1DC4025A8();
  v6 = sub_1DC1EC650(v4, v5, a3);
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1DC1BCCC8(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t (*v9)(void);
  __int128 v11[2];
  uint64_t v12;

  v6 = *a1;
  v5 = a1[1];
  v7 = a1[2];
  v12 = (*(uint64_t (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(*(_QWORD *)a2 + 88) + 64))(*a1, v5, v7, *(_QWORD *)(*(_QWORD *)a2 + 80));
  sub_1DC0824D4(a3, (uint64_t)v11);
  v8 = (_QWORD *)swift_allocObject();
  v8[2] = v6;
  v8[3] = v5;
  v8[4] = v7;
  v8[5] = a2;
  sub_1DC097DD0(v11, (uint64_t)(v8 + 6));
  v9 = MEMORY[0x1E0DB8020];
  sub_1DC165EEC(0, (unint64_t *)&qword_1EDB29E00, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB8020]);
  sub_1DC165EAC(&qword_1EDB29DF8, (unint64_t *)&qword_1EDB29E00, (uint64_t (*)(uint64_t, _QWORD *))v9, MEMORY[0x1E0DB8030]);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_1DC4049E4();
  swift_release();
  return swift_release();
}

uint64_t sub_1DC1BCE14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6)
{
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;

  v9 = sub_1DC405578();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v10 + 16))(v13, a1, v9, v11);
  v14 = (*(uint64_t (**)(char *, uint64_t))(v10 + 88))(v13, v9);
  if (v14 == *MEMORY[0x1E0DB9A48])
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
LABEL_4:
    v15 = a6[3];
    v16 = a6[4];
    __swift_project_boxed_opaque_existential_1(a6, v15);
    v17 = 0;
    return MEMORY[0x1DF0C6A94](v17, v15, v16);
  }
  if (v14 == *MEMORY[0x1E0DB9A40])
    goto LABEL_4;
  if (v14 == *MEMORY[0x1E0DB9A50])
  {
    type metadata accessor for StockFeedServiceConfig();
    sub_1DC080808(&qword_1EDB33F10, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedServiceConfig, (uint64_t)&unk_1DC411510);
    if ((sub_1DC407924() & 1) != 0 && (sub_1DC1BD020() & 1) == 0)
    {
      v18 = MEMORY[0x1DF0CAD78](a5 + 16);
      if (v18)
      {
        __swift_project_boxed_opaque_existential_1((_QWORD *)(v18 + 88), *(_QWORD *)(v18 + 112));
        type metadata accessor for StockFeedTracker();
        sub_1DC2D8A10();
        swift_unknownObjectRelease();
      }
    }
    v15 = a6[3];
    v16 = a6[4];
    __swift_project_boxed_opaque_existential_1(a6, v15);
    v17 = 1;
    return MEMORY[0x1DF0C6A94](v17, v15, v16);
  }
  result = sub_1DC409838();
  __break(1u);
  return result;
}

uint64_t sub_1DC1BD020()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t (*v19)(void);
  char *v20;
  uint64_t v21;
  char *v22;
  void (*v23)(_QWORD *, _QWORD);
  uint64_t v24;
  char *v25;
  void (*v26)(char *, uint64_t);
  void (*v27)(char *, char *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  char *v34;
  char *v35;
  void (*v36)(char *, char *, uint64_t);
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD v42[5];

  v39 = type metadata accessor for StockFeedSectionDescriptor();
  MEMORY[0x1E0C80A78](v39);
  v1 = (char *)&v33 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC165EEC(0, (unint64_t *)&qword_1EDB29D60, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60]);
  v3 = v2;
  v41 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v38 = (char *)&v33 - v7;
  sub_1DC1421C8(0);
  v33 = v8;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC165EEC(0, (unint64_t *)&qword_1EDB2AB10, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790]);
  v12 = v11;
  v40 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v33 - v16;
  sub_1DC4049CC();
  v42[0] = v42[4];
  sub_1DC165EEC(0, (unint64_t *)&qword_1EDB29E80, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB80B8]);
  sub_1DC165EAC((unint64_t *)&qword_1EDB29E70, (unint64_t *)&qword_1EDB29E80, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB80B8], MEMORY[0x1E0DB80D0]);
  sub_1DC405050();
  swift_release();
  v18 = *(void (**)(char *, char *, uint64_t))(v40 + 16);
  v34 = v17;
  v36 = v18;
  v18(v14, v17, v12);
  v19 = MEMORY[0x1E0DBC790];
  sub_1DC165EAC((unint64_t *)&unk_1EDB2AAF0, (unint64_t *)&qword_1EDB2AB10, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790], MEMORY[0x1E0DBC7C0]);
  v37 = v14;
  sub_1DC408BF0();
  v20 = &v10[*(int *)(v33 + 36)];
  sub_1DC165EAC((unint64_t *)&unk_1EDB2AB00, (unint64_t *)&qword_1EDB2AB10, (uint64_t (*)(uint64_t, _QWORD *))v19, MEMORY[0x1E0DBC7C8]);
  v21 = *(_QWORD *)v20;
  sub_1DC408ED8();
  if (v21 == v42[0])
  {
LABEL_5:
    sub_1DC0926D8((uint64_t)v10, (uint64_t (*)(_QWORD))sub_1DC1421C8);
    v30 = 0;
    (*(void (**)(char *, uint64_t))(v40 + 8))(v34, v12);
  }
  else
  {
    v35 = v1;
    v22 = v38;
    while (1)
    {
      v23 = (void (*)(_QWORD *, _QWORD))sub_1DC408EF0();
      v24 = v41;
      (*(void (**)(char *))(v41 + 16))(v22);
      v23(v42, 0);
      v25 = v37;
      v36(v37, v10, v12);
      sub_1DC408EE4();
      v26 = *(void (**)(char *, uint64_t))(v40 + 8);
      v26(v25, v12);
      v27 = *(void (**)(char *, char *, uint64_t))(v24 + 32);
      v28 = (uint64_t)v35;
      v27(v5, v22, v3);
      sub_1DC4046FC();
      if (swift_getEnumCaseMultiPayload() == 1)
        break;
      sub_1DC0926D8(v28, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedSectionDescriptor);
      (*(void (**)(char *, uint64_t))(v41 + 8))(v5, v3);
      v29 = *(_QWORD *)v20;
      sub_1DC408ED8();
      if (v29 == v42[0])
        goto LABEL_5;
    }
    swift_bridgeObjectRelease();
    sub_1DC142534();
    sub_1DC092F14(v28 + *(int *)(v31 + 64), &qword_1EDB2AD80, (void (*)(uint64_t))MEMORY[0x1E0D5A418]);
    (*(void (**)(char *, uint64_t))(v41 + 8))(v5, v3);
    sub_1DC0926D8((uint64_t)v10, (uint64_t (*)(_QWORD))sub_1DC1421C8);
    v30 = 1;
    v26(v34, v12);
  }
  return v30;
}

uint64_t sub_1DC1BD44C(_QWORD *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t (*v13)(void);
  uint64_t v14;
  __int128 v16[2];
  uint64_t v17;

  v5 = *v2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v6 = sub_1DC4025A8();
  v8 = v7;
  v10 = *(_QWORD *)(v5 + 80);
  v9 = *(_QWORD *)(v5 + 88);
  v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 96);
  swift_retain();
  v17 = v11(v6, v8, a2, v10, v9);
  sub_1DC0824D4((uint64_t)a1, (uint64_t)v16);
  v12 = swift_allocObject();
  sub_1DC097DD0(v16, v12 + 16);
  v13 = MEMORY[0x1E0DB8020];
  sub_1DC165EEC(0, (unint64_t *)&qword_1EDB29E00, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB8020]);
  sub_1DC165EAC(&qword_1EDB29DF8, (unint64_t *)&qword_1EDB29E00, (uint64_t (*)(uint64_t, _QWORD *))v13, MEMORY[0x1E0DB8030]);
  sub_1DC4049E4();
  swift_release();
  v14 = MEMORY[0x1DF0CAD78](v2 + 2);
  if (v14)
  {
    sub_1DC3A4B90(v14);
    swift_bridgeObjectRelease();
    swift_release();
    swift_unknownObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_release();
  }
  return swift_release();
}

uint64_t sub_1DC1BD5E8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v1 = type metadata accessor for StocksActivity(0);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = (uint64_t *)((char *)v0 + *(_QWORD *)(*v0 + 128));
  v5 = v4[3];
  v6 = v4[4];
  __swift_project_boxed_opaque_existential_1(v4, v5);
  (*(void (**)(uint64_t *, _UNKNOWN **, uint64_t, uint64_t))(v6 + 16))(v0, &off_1EA453DA0, v5, v6);
  v7 = *v0;
  sub_1DC142984(0, (unint64_t *)&qword_1EDB28DF0, (void (*)(uint64_t))MEMORY[0x1E0DAF0D0]);
  v9 = *(int *)(v8 + 48);
  v10 = (uint64_t)v0 + *(_QWORD *)(v7 + 152);
  v11 = sub_1DC4010E4();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v3, v10, v11);
  *(_QWORD *)&v3[v9] = 0;
  type metadata accessor for StocksActivity.StockFeed(0);
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  sub_1DC404F00();
  return sub_1DC0926D8((uint64_t)v3, type metadata accessor for StocksActivity);
}

uint64_t sub_1DC1BD738()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v1 = type metadata accessor for StocksActivity(0);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = (uint64_t *)((char *)v0 + *(_QWORD *)(*v0 + 128));
  v5 = v4[3];
  v6 = v4[4];
  __swift_project_boxed_opaque_existential_1(v4, v5);
  (*(void (**)(uint64_t *, _UNKNOWN **, uint64_t, uint64_t))(v6 + 24))(v0, &off_1EA453DA0, v5, v6);
  v7 = *v0;
  sub_1DC142984(0, (unint64_t *)&qword_1EDB28DF0, (void (*)(uint64_t))MEMORY[0x1E0DAF0D0]);
  v9 = *(int *)(v8 + 48);
  v10 = (uint64_t)v0 + *(_QWORD *)(v7 + 152);
  v11 = sub_1DC4010E4();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v3, v10, v11);
  *(_QWORD *)&v3[v9] = 0;
  type metadata accessor for StocksActivity.StockFeed(0);
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  sub_1DC404EF4();
  return sub_1DC0926D8((uint64_t)v3, type metadata accessor for StocksActivity);
}

uint64_t sub_1DC1BD888(uint64_t a1, int a2, unsigned __int8 *a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  unsigned __int8 v14;
  _QWORD *v16;
  _BYTE v17[14];
  unsigned __int8 v18;
  unsigned __int8 v19;

  sub_1DC092F50(0, (unint64_t *)&unk_1EDB42E90, (void (*)(uint64_t))type metadata accessor for StockFeedRouteModel);
  MEMORY[0x1E0C80A78](v7);
  v9 = &v17[-v8];
  v10 = type metadata accessor for StockFeedRouteModel();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = &v17[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = *a3;
  v19 = v14;
  sub_1DC1BDA00(a1, a2, &v19, (uint64_t)v9);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
    return sub_1DC092F14((uint64_t)v9, (unint64_t *)&unk_1EDB42E90, (void (*)(uint64_t))type metadata accessor for StockFeedRouteModel);
  sub_1DC092ED0((uint64_t)v9, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedRouteModel);
  v16 = (_QWORD *)MEMORY[0x1DF0CAD78](v3 + 16);
  if (v16)
  {
    v18 = v14;
    sub_1DC3BEE60((uint64_t)v13, &v18, v16);
    swift_unknownObjectRelease();
  }
  return sub_1DC0926D8((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedRouteModel);
}

uint64_t sub_1DC1BDA00@<X0>(uint64_t a1@<X0>, int a2@<W1>, unsigned __int8 *a3@<X2>, uint64_t a4@<X8>)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  id *v50;
  uint64_t v51;
  int v52;
  id v53;
  id v54;
  void *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  void (*v61)(uint64_t, uint64_t, uint64_t, uint64_t);
  void (*v62)(uint64_t);
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t result;
  id *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  unsigned int *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t (*v86)(void);
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  _QWORD *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  id *v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  char *v105;
  char *v106;
  int v107;
  char *v108;
  uint64_t v109;
  int v110;
  char *v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  _QWORD *v118;
  uint64_t v119;
  uint64_t v120;
  id *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;

  v5 = v4;
  v107 = a2;
  v122 = *v5;
  v9 = sub_1DC40202C();
  v113 = *(_QWORD *)(v9 - 8);
  v114 = v9;
  MEMORY[0x1E0C80A78](v9);
  v108 = (char *)&v95 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v101 = (char *)&v95 - v12;
  v103 = sub_1DC402434();
  v102 = *(_QWORD *)(v103 - 8);
  MEMORY[0x1E0C80A78](v103);
  v111 = (char *)&v95 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v117 = sub_1DC3FFDD0();
  v115 = *(_QWORD *)(v117 - 8);
  MEMORY[0x1E0C80A78](v117);
  v104 = (char *)&v95 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC092F50(0, (unint64_t *)&unk_1EDB28A70, v15);
  MEMORY[0x1E0C80A78](v16);
  v100 = (char *)&v95 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v116 = (char *)&v95 - v19;
  v20 = sub_1DC401BB8();
  MEMORY[0x1E0C80A78](v20);
  v112 = (char *)&v95 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_1DC4011BC();
  v23 = *(_QWORD *)(v22 - 8);
  v119 = v22;
  v120 = v23;
  MEMORY[0x1E0C80A78](v22);
  v106 = (char *)&v95 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v25);
  v105 = (char *)&v95 - v26;
  MEMORY[0x1E0C80A78](v27);
  v121 = (id *)((char *)&v95 - v28);
  sub_1DC1449E0();
  MEMORY[0x1E0C80A78](v29);
  v31 = (char *)&v95 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0F4CCC();
  v33 = v32;
  v34 = *(_QWORD *)(v32 - 8);
  MEMORY[0x1E0C80A78](v32);
  v36 = (char *)&v95 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = type metadata accessor for StockFeedModel();
  MEMORY[0x1E0C80A78](v37);
  v39 = (char *)&v95 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v110 = *a3;
  sub_1DC142200();
  v109 = v40;
  v41 = a1;
  sub_1DC404354();
  if (swift_getEnumCaseMultiPayload() != 6)
  {
    v70 = type metadata accessor for StockFeedRouteModel();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v70 - 8) + 56))(a4, 1, 1, v70);
    return sub_1DC0926D8((uint64_t)v39, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedModel);
  }
  v99 = (id *)a4;
  v98 = v34;
  (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v36, v39, v33);
  v118 = v5;
  v42 = MEMORY[0x1DF0CAD78](v5 + 2);
  v43 = v122;
  v44 = v33;
  v45 = v36;
  if (v42)
  {
    sub_1DC3BE608(v42);
    swift_unknownObjectRelease();
  }
  sub_1DC407F3C();
  v46 = sub_1DC407EAC();
  v47 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 48))(v31, 1, v46);
  sub_1DC0926D8((uint64_t)v31, (uint64_t (*)(_QWORD))sub_1DC1449E0);
  v48 = v119;
  if (v47 != 1)
  {
    v49 = MEMORY[0x1DF0CAD78](v5 + 2);
    if (v49)
    {
      sub_1DC3BE7A0(v41, v49);
      swift_unknownObjectRelease();
    }
  }
  v50 = v121;
  sub_1DC407C18();
  v51 = v120;
  v52 = (*(uint64_t (**)(id *, uint64_t))(v120 + 88))(v50, v48);
  if (v52 != *MEMORY[0x1E0DAF188])
  {
    v72 = v99;
    if (v52 == *MEMORY[0x1E0DAF140])
    {
      (*(void (**)(char *, uint64_t))(v98 + 8))(v45, v44);
      (*(void (**)(id *, uint64_t))(v51 + 96))(v50, v48);
      *v72 = *v50;
      type metadata accessor for StocksActivity.Article(0);
      swift_storeEnumTagMultiPayload();
      v73 = type metadata accessor for StockFeedRouteModel();
      swift_storeEnumTagMultiPayload();
      return (*(uint64_t (**)(id *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v73 - 8) + 56))(v72, 0, 1, v73);
    }
    goto LABEL_22;
  }
  v97 = v44;
  (*(void (**)(id *, uint64_t))(v51 + 96))(v50, v48);
  v53 = *v50;
  v54 = objc_msgSend(*v50, sel_routeURL);
  v96 = v45;
  if (!v54)
  {
    v57 = (uint64_t)v116;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v115 + 56))(v116, 1, 1, v117);
    goto LABEL_15;
  }
  v55 = v54;
  v56 = v104;
  sub_1DC3FFD94();

  v58 = v115;
  v57 = (uint64_t)v116;
  v59 = v56;
  v60 = v117;
  (*(void (**)(char *, char *, uint64_t))(v115 + 32))(v116, v59, v117);
  v61 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v58 + 56);
  v61(v57, 0, 1, v60);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v58 + 48))(v57, 1, v60) == 1)
  {
LABEL_15:
    v117 = (uint64_t)v53;
    sub_1DC092F14(v57, (unint64_t *)&unk_1EDB28A70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    sub_1DC4021DC();
    swift_allocObject();
    v74 = sub_1DC4021D0();
    v69 = v118;
    v75 = *(_QWORD *)(*v118 + 184);
    *(_QWORD *)((char *)v118 + v75) = v74;
    swift_release();
    v76 = *(_QWORD *)((char *)v69 + *(_QWORD *)(*v69 + 136));
    swift_retain();
    sub_1DC404324();
    if (*(_QWORD *)((char *)v69 + v75))
    {
      v123 = v76;
      sub_1DC1C0138();
      v78 = v77;
      swift_allocObject();
      swift_retain();
      v79 = sub_1DC401930();
      sub_1DC404324();
      swift_unknownObjectRetain();
      v80 = v105;
      sub_1DC407C18();
      v81 = v120;
      (*(void (**)(char *, char *, uint64_t))(v120 + 16))(v106, v80, v48);
      sub_1DC409A24();
      (*(void (**)(char *, uint64_t))(v81 + 8))(v80, v48);
      sub_1DC4023F8();
      v124 = v78;
      v125 = sub_1DC080808((unint64_t *)&unk_1EDB429F8, (uint64_t (*)(uint64_t))sub_1DC1C0138, MEMORY[0x1E0D56BE0]);
      v123 = v79;
      v43 = v122;
      MEMORY[0x1DF0CAB8C](&unk_1DC414C18, v122);
      sub_1DC4021AC();
      swift_allocObject();
      swift_retain();
      swift_retain();
      sub_1DC4021A0();
      v82 = (unsigned int *)MEMORY[0x1E0D57858];
      v84 = v113;
      v83 = v114;
      if ((v107 & 1) == 0)
        v82 = (unsigned int *)MEMORY[0x1E0D57870];
      v85 = v108;
      (*(void (**)(char *, _QWORD, uint64_t))(v113 + 104))(v108, *v82, v114);
      v68 = (uint64_t)v112;
      sub_1DC401BAC();
      swift_release();
      swift_release();
      (*(void (**)(char *, uint64_t))(v84 + 8))(v85, v83);
      v50 = v121;
      goto LABEL_19;
    }
    __break(1u);
LABEL_22:
    result = sub_1DC4099DC();
    __break(1u);
    return result;
  }
  v62 = (void (*)(uint64_t))MEMORY[0x1E0CAFFF8];
  sub_1DC092F14(v57, (unint64_t *)&unk_1EDB28A70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  swift_unknownObjectRetain();
  v63 = v111;
  sub_1DC402410();
  v64 = (uint64_t)v100;
  v61((uint64_t)v100, 1, 1, v60);
  v66 = v113;
  v65 = v114;
  v67 = v101;
  (*(void (**)(char *, _QWORD, uint64_t))(v113 + 104))(v101, *MEMORY[0x1E0D57870], v114);
  v68 = (uint64_t)v112;
  sub_1DC401B88();
  (*(void (**)(char *, uint64_t))(v66 + 8))(v67, v65);
  sub_1DC092F14(v64, (unint64_t *)&unk_1EDB28A70, v62);
  (*(void (**)(char *, uint64_t))(v102 + 8))(v63, v103);
  v69 = v118;
LABEL_19:
  v86 = MEMORY[0x1E0D570B0];
  v87 = (uint64_t)v99;
  sub_1DC0990BC(v68, (uint64_t)v99, (uint64_t (*)(_QWORD))MEMORY[0x1E0D570B0]);
  v88 = 2 * (v110 != 0);
  sub_1DC0B9454();
  v90 = (char *)v50 + *(int *)(v89 + 48);
  sub_1DC1446B4();
  v92 = (_QWORD *)(v87 + *(int *)(v91 + 64));
  *(_QWORD *)(v87 + *(int *)(v91 + 48)) = v88;
  v92[3] = v43;
  v92[4] = &off_1EA453DC8;
  swift_retain();
  swift_unknownObjectRelease();
  *v92 = v69;
  sub_1DC0926D8(v68, (uint64_t (*)(_QWORD))v86);
  (*(void (**)(char *, uint64_t))(v98 + 8))(v96, v97);
  type metadata accessor for StocksActivity.Article(0);
  swift_storeEnumTagMultiPayload();
  v93 = type metadata accessor for StockFeedRouteModel();
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v93 - 8) + 56))(v87, 0, 1, v93);
  v94 = sub_1DC400898();
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v94 - 8) + 8))(v90, v94);
}

void sub_1DC1BE470(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  void *v18;
  uint64_t v19;
  id v20;
  _QWORD aBlock[6];

  v3 = *v1;
  v4 = type metadata accessor for StockEarningsModel();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x1E0C80A78](v4);
  v7 = sub_1DC403628();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CAA078]), sel_init);
  v11 = (char *)objc_msgSend((id)objc_opt_self(), sel_authorizationStatusForEntityType_, 0);
  if ((unint64_t)(v11 - 1) < 2)
  {
    v14 = MEMORY[0x1DF0CAD78](v1 + 2);
    if (v14)
    {
      v15 = v14;
      (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E0DAD770], v7);
      sub_1DC3BF2B0((uint64_t)v10, a1, v15);
      swift_unknownObjectRelease();

      goto LABEL_7;
    }
    goto LABEL_11;
  }
  if ((unint64_t)(v11 - 3) < 2)
  {
    v12 = MEMORY[0x1DF0CAD78](v1 + 2);
    if (v12)
    {
      v13 = v12;
      (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E0DAD778], v7);
      sub_1DC3BF2B0((uint64_t)v10, a1, v13);

      swift_unknownObjectRelease();
LABEL_7:
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      return;
    }
    goto LABEL_11;
  }
  if (v11)
  {
LABEL_11:

    return;
  }
  sub_1DC0990BC(a1, (uint64_t)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for StockEarningsModel);
  v16 = (*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v17 = (_QWORD *)swift_allocObject();
  v17[2] = *(_QWORD *)(v3 + 80);
  v17[3] = *(_QWORD *)(v3 + 88);
  v17[4] = v1;
  sub_1DC092ED0((uint64_t)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t)v17 + v16, (uint64_t (*)(_QWORD))type metadata accessor for StockEarningsModel);
  aBlock[4] = sub_1DC1C0084;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1DC1BE960;
  aBlock[3] = &block_descriptor_9;
  v18 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v20, sel_requestWriteOnlyAccessToEventsWithCompletion_, v18);

  _Block_release(v18);
}

uint64_t sub_1DC1BE738(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(_QWORD);
  unint64_t v11;
  _QWORD *v12;
  uint64_t v14;

  v6 = *a3;
  v7 = type metadata accessor for StockEarningsModel();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x1E0C80A78](v7);
  sub_1DC0990BC(a4, (uint64_t)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v10);
  v11 = (*(unsigned __int8 *)(v8 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v12 = (_QWORD *)swift_allocObject();
  v12[2] = *(_QWORD *)(v6 + 80);
  v12[3] = *(_QWORD *)(v6 + 88);
  v12[4] = a3;
  sub_1DC092ED0((uint64_t)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t)v12 + v11, (uint64_t (*)(_QWORD))type metadata accessor for StockEarningsModel);
  swift_retain();
  sub_1DC402E3C();
  return swift_release();
}

uint64_t sub_1DC1BE880(uint64_t *a1, uint64_t a2, unsigned int *a3)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v5 = a1 + 2;
  v6 = *a1;
  v7 = sub_1DC403628();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x1DF0CAD78](v5, v9);
  if (result)
  {
    v13 = result;
    (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v11, *a3, v7);
    type metadata accessor for StockFeedInteractor(0, *(_QWORD *)(v6 + 80), *(_QWORD *)(v6 + 88), v14);
    sub_1DC3BF2B0((uint64_t)v11, a2, v13);
    swift_unknownObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  }
  return result;
}

void sub_1DC1BE960(uint64_t a1, uint64_t a2, void *a3)
{
  void (*v5)(uint64_t, void *);
  id v6;

  v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  swift_retain();
  v6 = a3;
  v5(a2, a3);
  swift_release();

}

uint64_t sub_1DC1BE9C0()
{
  uint64_t v0;

  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 192)), *(_QWORD *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 192) + 24));
  return sub_1DC4009AC();
}

uint64_t sub_1DC1BEA10()
{
  uint64_t v0;

  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 192)), *(_QWORD *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 192) + 24));
  return sub_1DC4009C4();
}

void sub_1DC1BEA58()
{
  uint64_t v0;
  char v1;
  id v2;

  *(_QWORD *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 184)) = 0;
  swift_release();
  sub_1DC1BC0B4(0);
  v1 = sub_1DC1ECFDC();
  sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FC00);
  v2 = (id)sub_1DC409580();
  sub_1DC408FE0();
  sub_1DC403F28();

  if ((v1 & 1) != 0)
    sub_1DC1BEB54();
}

void sub_1DC1BEB54()
{
  void *v0;
  id v1;

  sub_1DC402E0C();
  sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3F8D0);
  v0 = (void *)sub_1DC409148();
  sub_1DC402D1C();
  swift_release();

  v1 = (id)sub_1DC409148();
  sub_1DC402D40();
  swift_release();
  swift_release();

}

uint64_t sub_1DC1BEC48(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(void);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v2 = v1;
  v4 = *v1;
  sub_1DC0BB2BC(0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v33 - v9;
  v41 = type metadata accessor for StockFeedQuoteData();
  MEMORY[0x1E0C80A78](v41);
  v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = sub_1DC40124C();
  v38 = *(_QWORD *)(v40 - 8);
  MEMORY[0x1E0C80A78](v40);
  v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1DC4008EC();
  v39 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v37 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC092F50(0, &qword_1EDB28DC0, (void (*)(uint64_t))MEMORY[0x1E0DAF040]);
  v18 = MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v33 - v19;
  v21 = MEMORY[0x1DF0CAD78](v1 + 2, v18);
  if (v21)
  {
    v35 = v21;
    v22 = sub_1DC401030();
    v36 = v4;
    v23 = *(_QWORD *)(v22 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))(v20, a1, v22);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
    v24 = (_QWORD *)(*(_QWORD *)((char *)v2 + *(_QWORD *)(*v2 + 120))
                   + OBJC_IVAR____TtC8StocksUI20StockFeedDataManager_watchlistManager);
    v34 = v15;
    __swift_project_boxed_opaque_existential_1(v24, v24[3]);
    v4 = v36;
    sub_1DC400A60();
    v25 = (uint64_t)v37;
    sub_1DC4011EC();
    (*(void (**)(char *, uint64_t))(v38 + 8))(v14, v40);
    sub_1DC3BEE04((uint64_t)v20, v25, v35);
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v25, v34);
    sub_1DC092F14((uint64_t)v20, &qword_1EDB28DC0, (void (*)(uint64_t))MEMORY[0x1E0DAF040]);
  }
  v26 = sub_1DC401030();
  v27 = *(_QWORD *)(v26 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v27 + 16))(v12, a1, v26);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v12, 0, 1, v26);
  v28 = &v12[*(int *)(v41 + 20)];
  v29 = sub_1DC400370();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v28, 1, 1, v29);
  sub_1DC1BABCC((uint64_t)v10);
  sub_1DC1BAD5C((uint64_t)v7);
  v30 = (*(uint64_t (**)(char *, _QWORD, char *, char *, _QWORD))(*(_QWORD *)(v4 + 88) + 88))(v12, 0, v10, v7, *(_QWORD *)(v4 + 80));
  sub_1DC0926D8((uint64_t)v7, (uint64_t (*)(_QWORD))sub_1DC0BB2BC);
  sub_1DC0926D8((uint64_t)v10, (uint64_t (*)(_QWORD))sub_1DC0BB2BC);
  sub_1DC0926D8((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedQuoteData);
  v42 = v30;
  v31 = MEMORY[0x1E0DB8020];
  sub_1DC165EEC(0, (unint64_t *)&qword_1EDB29E00, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB8020]);
  sub_1DC165EAC(&qword_1EDB29DF8, (unint64_t *)&qword_1EDB29E00, (uint64_t (*)(uint64_t, _QWORD *))v31, MEMORY[0x1E0DB8030]);
  sub_1DC4049E4();
  return swift_release();
}

uint64_t sub_1DC1BF054(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t (*v13)(void);
  _QWORD v15[4];

  v5 = *a2;
  sub_1DC0BB2BC(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v15 - v10;
  sub_1DC1BABCC((uint64_t)v15 - v10);
  sub_1DC1BAD5C((uint64_t)v8);
  v12 = (*(uint64_t (**)(uint64_t, uint64_t, char *, char *, _QWORD))(*(_QWORD *)(v5 + 88) + 88))(a1, a3, v11, v8, *(_QWORD *)(v5 + 80));
  sub_1DC0926D8((uint64_t)v8, (uint64_t (*)(_QWORD))sub_1DC0BB2BC);
  sub_1DC0926D8((uint64_t)v11, (uint64_t (*)(_QWORD))sub_1DC0BB2BC);
  v15[3] = v12;
  v13 = MEMORY[0x1E0DB8020];
  sub_1DC165EEC(0, (unint64_t *)&qword_1EDB29E00, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB8020]);
  sub_1DC165EAC(&qword_1EDB29DF8, (unint64_t *)&qword_1EDB29E00, (uint64_t (*)(uint64_t, _QWORD *))v13, MEMORY[0x1E0DB8030]);
  sub_1DC4049E4();
  return swift_release();
}

uint64_t sub_1DC1BF1C4(_QWORD *a1, uint64_t a2)
{
  uint64_t (*v2)(void);

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(*(_QWORD *)a2 + 88) + 56))(*a1, *(_QWORD *)(*(_QWORD *)a2 + 80));
  v2 = MEMORY[0x1E0DB8020];
  sub_1DC165EEC(0, (unint64_t *)&qword_1EDB29E00, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB8020]);
  sub_1DC165EAC(&qword_1EDB29DF8, (unint64_t *)&qword_1EDB29E00, (uint64_t (*)(uint64_t, _QWORD *))v2, MEMORY[0x1E0DB8030]);
  sub_1DC4049E4();
  return swift_release();
}

void sub_1DC1BF288()
{
  uint64_t v0;
  void *v1;

  sub_1DC408FC8();
  sub_1DC0FDC18(0, (unint64_t *)&qword_1EDB400C0, (unint64_t *)&qword_1EDB400F0, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1DC40DC10;
  sub_1DC0A3390(0, (unint64_t *)&qword_1EDB400E0);
  sub_1DC409808();
  *(_QWORD *)(v0 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v0 + 64) = sub_1DC0E7FAC();
  *(_QWORD *)(v0 + 32) = 0;
  *(_QWORD *)(v0 + 40) = 0xE000000000000000;
  sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FC00);
  v1 = (void *)sub_1DC409580();
  sub_1DC403F28();
  swift_bridgeObjectRelease();

}

uint64_t sub_1DC1BF3B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(void);

  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(*(_QWORD *)v1 + 88) + 104))(a1, *(_QWORD *)(*(_QWORD *)v1 + 80));
  v2 = MEMORY[0x1E0DB8020];
  sub_1DC165EEC(0, (unint64_t *)&qword_1EDB29E00, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB8020]);
  sub_1DC165EAC(&qword_1EDB29DF8, (unint64_t *)&qword_1EDB29E00, (uint64_t (*)(uint64_t, _QWORD *))v2, MEMORY[0x1E0DB8030]);
  sub_1DC4049E4();
  sub_1DC1C0908();
  swift_retain();
  sub_1DC402764();
  swift_release();
  return swift_release();
}

uint64_t sub_1DC1BF4B4()
{
  return swift_retain();
}

uint64_t sub_1DC1BF4F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t (*v26)(void);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t *v30;
  void (*v31)();
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t result;
  void (*v37)(char *, char *, uint64_t);
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t (*v43)(char *, uint64_t);
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  _QWORD v76[3];
  uint64_t v77;
  uint64_t v78;

  v56 = a3;
  v62 = a2;
  v75 = a1;
  v58 = *v3;
  sub_1DC092F50(0, (unint64_t *)&unk_1EDB42A08, (void (*)(uint64_t))MEMORY[0x1E0D52BF8]);
  MEMORY[0x1E0C80A78](v4);
  v63 = (char *)&v53 - v5;
  v6 = sub_1DC407078();
  v64 = *(_QWORD *)(v6 - 8);
  v65 = v6;
  MEMORY[0x1E0C80A78](v6);
  v57 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = sub_1DC4033A0();
  v60 = *(_QWORD *)(v61 - 8);
  MEMORY[0x1E0C80A78](v61);
  v59 = (char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC092F50(0, &qword_1EDB28B50, (void (*)(uint64_t))MEMORY[0x1E0CB1658]);
  MEMORY[0x1E0C80A78](v9);
  v72 = (char *)&v53 - v10;
  v71 = sub_1DC400280();
  v73 = *(_QWORD *)(v71 - 8);
  MEMORY[0x1E0C80A78](v71);
  v70 = (char *)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC092F50(0, &qword_1EDB29BC8, (void (*)(uint64_t))sub_1DC142200);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v53 - v13;
  sub_1DC142200();
  v16 = v15;
  v17 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v74 = (char *)&v53 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC165EEC(0, (unint64_t *)&qword_1EDB2AB10, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790]);
  v20 = v19;
  v21 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v69 = (char *)&v53 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)&v53 - v24;
  v66 = v3;
  v68 = v3[4];
  sub_1DC4049CC();
  v78 = v76[0];
  v26 = MEMORY[0x1E0DB80B8];
  sub_1DC165EEC(0, (unint64_t *)&qword_1EDB29E80, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB80B8]);
  v28 = v27;
  sub_1DC165EAC((unint64_t *)&qword_1EDB29E70, (unint64_t *)&qword_1EDB29E80, (uint64_t (*)(uint64_t, _QWORD *))v26, MEMORY[0x1E0DB80D0]);
  v67 = v28;
  sub_1DC405050();
  swift_release();
  sub_1DC402404();
  sub_1DC406C7C();
  v29 = v16;
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v14, 1, v16) == 1)
  {
    (*(void (**)(char *, uint64_t))(v21 + 8))(v25, v20);
    v30 = &qword_1EDB29BC8;
    v31 = sub_1DC142200;
    v32 = (uint64_t)v14;
    return sub_1DC092F14(v32, v30, (void (*)(uint64_t))v31);
  }
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v74, v14, v16);
  v33 = v72;
  sub_1DC406D24();
  v34 = v73;
  v35 = v71;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v73 + 48))(v33, 1, v71) == 1)
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v74, v29);
    (*(void (**)(char *, uint64_t))(v21 + 8))(v25, v20);
    v30 = &qword_1EDB28B50;
    v31 = (void (*)())MEMORY[0x1E0CB1658];
    v32 = (uint64_t)v33;
    return sub_1DC092F14(v32, v30, (void (*)(uint64_t))v31);
  }
  v55 = v25;
  v53 = v17;
  v54 = v29;
  v37 = *(void (**)(char *, char *, uint64_t))(v34 + 32);
  v38 = (uint64_t)v70;
  v37(v70, v33, v35);
  sub_1DC4049CC();
  v75 = v20;
  v78 = v76[0];
  v39 = v69;
  sub_1DC405050();
  v40 = v75;
  swift_release();
  sub_1DC080808(&qword_1EDB2D760, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedModel, (uint64_t)&unk_1DC429208);
  v41 = v74;
  v42 = sub_1DC406D30();
  v43 = *(uint64_t (**)(char *, uint64_t))(v21 + 8);
  result = v43(v39, v40);
  if (v42 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_18;
  }
  if (v42 > 0x7FFFFFFF)
  {
LABEL_18:
    __break(1u);
    return result;
  }
  v44 = v59;
  sub_1DC403394();
  sub_1DC080808(&qword_1EDB29820, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD438], MEMORY[0x1E0DAD428]);
  v45 = v61;
  sub_1DC401870();
  (*(void (**)(char *, uint64_t))(v60 + 8))(v44, v45);
  sub_1DC080808(&qword_1EDB42A18, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedSectionDescriptor, (uint64_t)&unk_1DC4167D8);
  v46 = (uint64_t)v63;
  sub_1DC406CDC();
  v48 = v64;
  v47 = v65;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v64 + 48))(v46, 1, v65) == 1)
  {
    sub_1DC092F14(v46, (unint64_t *)&unk_1EDB42A08, (void (*)(uint64_t))MEMORY[0x1E0D52BF8]);
  }
  else
  {
    v49 = v57;
    (*(void (**)(char *, uint64_t, uint64_t))(v48 + 32))(v57, v46, v47);
    sub_1DC194128(v56, (uint64_t)v76);
    if (v77)
    {
      __swift_project_boxed_opaque_existential_1(v76, v77);
      sub_1DC080808(&qword_1EDB42A20, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52BF8], MEMORY[0x1E0D52BF0]);
      sub_1DC4070FC();
      (*(void (**)(char *, uint64_t))(v48 + 8))(v49, v47);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v76);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v48 + 8))(v49, v47);
      sub_1DC1C08A4((uint64_t)v76);
    }
  }
  v50 = MEMORY[0x1DF0CAD78](v66 + 2);
  v51 = v73;
  v52 = v54;
  if (v50)
  {
    sub_1DC3BF6B8(v38, v50);
    swift_unknownObjectRelease();
  }
  (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v38, v35);
  (*(void (**)(char *, uint64_t))(v53 + 8))(v41, v52);
  return v43(v55, v75);
}

uint64_t sub_1DC1BFC08()
{
  return sub_1DC402140();
}

uint64_t sub_1DC1BFC14()
{
  return sub_1DC407858();
}

uint64_t sub_1DC1BFC40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t (*v19)(void);
  uint64_t v20;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v38 = a1;
  v40 = a2;
  v2 = sub_1DC4011BC();
  v34 = *(_QWORD *)(v2 - 8);
  v35 = v2;
  MEMORY[0x1E0C80A78](v2);
  v33 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0F4CCC();
  v31 = *(_QWORD *)(v4 - 8);
  v32 = v4;
  MEMORY[0x1E0C80A78](v4);
  v30 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = type metadata accessor for StockFeedModel();
  MEMORY[0x1E0C80A78](v36);
  v37 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC092F50(0, &qword_1EDB29BC8, (void (*)(uint64_t))sub_1DC142200);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v29 - v8;
  sub_1DC142200();
  v11 = v10;
  v12 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v39 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC165EEC(0, (unint64_t *)&qword_1EDB2AB10, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790]);
  v15 = v14;
  v16 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v29 - v17;
  sub_1DC4049CC();
  v41 = v42;
  v19 = MEMORY[0x1E0DB80B8];
  sub_1DC165EEC(0, (unint64_t *)&qword_1EDB29E80, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB80B8]);
  sub_1DC165EAC((unint64_t *)&qword_1EDB29E70, (unint64_t *)&qword_1EDB29E80, (uint64_t (*)(uint64_t, _QWORD *))v19, MEMORY[0x1E0DB80D0]);
  sub_1DC405050();
  swift_release();
  sub_1DC402404();
  sub_1DC406C7C();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v9, 1, v11) == 1)
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
    sub_1DC092F14((uint64_t)v9, &qword_1EDB29BC8, (void (*)(uint64_t))sub_1DC142200);
    v20 = sub_1DC4034F0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v40, 1, 1, v20);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v39, v9, v11);
    v22 = (uint64_t)v37;
    sub_1DC404354();
    if (swift_getEnumCaseMultiPayload() == 6)
    {
      v23 = v30;
      v24 = v31;
      v25 = v32;
      (*(void (**)(char *, uint64_t, uint64_t))(v31 + 32))(v30, v22, v32);
      v26 = v33;
      sub_1DC407C18();
      sub_1DC15CA64();
      (*(void (**)(char *, uint64_t))(v34 + 8))(v26, v35);
      (*(void (**)(char *, uint64_t))(v24 + 8))(v23, v25);
      (*(void (**)(char *, uint64_t))(v12 + 8))(v39, v11);
      (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
      v27 = sub_1DC4034F0();
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v40, 0, 1, v27);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v12 + 8))(v39, v11);
      (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
      v28 = sub_1DC4034F0();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v40, 1, 1, v28);
      return sub_1DC0926D8(v22, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedModel);
    }
  }
}

uint64_t sub_1DC1C0028@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DC1BFC40(a1, a2);
}

uint64_t sub_1DC1C0048(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DC1C0900(a3);
}

uint64_t sub_1DC1C0050(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DC1C0904(a3);
}

void sub_1DC1C0058()
{
  sub_1DC1BC0B4(1);
  sub_1DC1BEB54();
}

uint64_t sub_1DC1C0078(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DC1C0950(a3);
}

uint64_t sub_1DC1C0084(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for StockEarningsModel() - 8) + 80);
  return sub_1DC1BE738(a1, a2, *(uint64_t **)(v2 + 32), v2 + ((v5 + 40) & ~v5));
}

uint64_t sub_1DC1C00D8()
{
  return sub_1DC1C00F4(MEMORY[0x1E0DAD770]);
}

uint64_t sub_1DC1C00E8()
{
  return sub_1DC1C00F4(MEMORY[0x1E0DAD778]);
}

uint64_t sub_1DC1C00F4(unsigned int *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for StockEarningsModel() - 8) + 80);
  return sub_1DC1BE880(*(uint64_t **)(v1 + 32), v1 + ((v3 + 40) & ~v3), a1);
}

void sub_1DC1C0138()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB429D8)
  {
    sub_1DC1C022C();
    sub_1DC080808((unint64_t *)&qword_1EDB2A248, (uint64_t (*)(uint64_t))sub_1DC1C022C, MEMORY[0x1E0DB9998]);
    sub_1DC080808((unint64_t *)&unk_1EDB429E0, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedLayoutModel, (uint64_t)&unk_1DC413B28);
    sub_1DC080808(&qword_1EDB32178, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedLayoutModel, (uint64_t)&unk_1DC413B78);
    sub_1DC080808(&qword_1EDB429F0, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedLayoutModel, (uint64_t)&unk_1DC413B50);
    v0 = sub_1DC40193C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB429D8);
  }
}

void sub_1DC1C022C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB2A250)
  {
    type metadata accessor for StockFeedLayoutSectionDescriptor(255);
    type metadata accessor for StockFeedLayoutModel();
    sub_1DC080808(&qword_1EDB3B308, type metadata accessor for StockFeedLayoutSectionDescriptor, (uint64_t)&unk_1DC41ECF0);
    sub_1DC080808(&qword_1EDB32160, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedLayoutModel, (uint64_t)&unk_1DC413950);
    v0 = sub_1DC405524();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB2A250);
  }
}

uint64_t sub_1DC1C02F4()
{
  uint64_t v0;

  return sub_1DC1BCC48(*(_QWORD *)(v0 + 16), *(_QWORD **)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_1DC1C0310(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1DC1BCCC8(a1, a2, v2 + 16);
}

uint64_t sub_1DC1C0328()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DC1C0354()
{
  uint64_t v0;

  return sub_1DC1BD44C((_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 56));
}

uint64_t sub_1DC1C0380()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocObject();
}

uint64_t sub_1DC1C03A4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[5];
  v2 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v1);
  return MEMORY[0x1DF0C6A94](0, v1, v2);
}

uint64_t sub_1DC1C03E8()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 48);
  return swift_deallocObject();
}

uint64_t sub_1DC1C0428(uint64_t a1)
{
  uint64_t *v1;

  return sub_1DC1BCE14(a1, v1[2], v1[3], v1[4], v1[5], v1 + 6);
}

uint64_t sub_1DC1C0438()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1DC1C045C()
{
  return sub_1DC208558();
}

uint64_t sub_1DC1C0464()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1DC1C0488()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DC1C04AC()
{
  return sub_1DC1BC530();
}

uint64_t sub_1DC1C04B8()
{
  return sub_1DC208768();
}

void sub_1DC1C04C0(uint64_t a1)
{
  uint64_t *v1;

  sub_1DC1BB854(a1, v1[4], v1[2], v1[3]);
}

void sub_1DC1C04CC(uint64_t a1)
{
  sub_1DC1BBB98(a1);
}

uint64_t sub_1DC1C04D8()
{
  swift_unownedRelease();
  return swift_deallocObject();
}

uint64_t sub_1DC1C04FC(uint64_t a1)
{
  uint64_t *v1;

  return sub_1DC1BC190(a1, v1[4], v1[2], v1[3]);
}

uint64_t sub_1DC1C0508()
{
  uint64_t result;

  result = qword_1EDB41338;
  if (!qword_1EDB41338)
  {
    sub_1DC1C0580();
    sub_1DC1C05C4();
    type metadata accessor for DualOfflineManager.State();
  }
  return result;
}

unint64_t sub_1DC1C0580()
{
  unint64_t result;

  result = qword_1EDB33160;
  if (!qword_1EDB33160)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC423150, &type metadata for StockFeedOfflineModel.Loading);
    atomic_store(result, (unint64_t *)&qword_1EDB33160);
  }
  return result;
}

unint64_t sub_1DC1C05C4()
{
  unint64_t result;

  result = qword_1EDB33168;
  if (!qword_1EDB33168)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC4231A0, &type metadata for StockFeedOfflineModel.Expanding);
    atomic_store(result, (unint64_t *)&qword_1EDB33168);
  }
  return result;
}

void sub_1DC1C0608()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EDB41290)
  {
    sub_1DC407EAC();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EDB41290);
  }
}

uint64_t sub_1DC1C0668()
{
  return sub_1DC1EAF98();
}

uint64_t sub_1DC1C0698()
{
  return swift_deallocObject();
}

uint64_t sub_1DC1C06A8(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  return sub_1DC1BF054(a1, a2, *(unsigned __int8 *)(v2 + 16));
}

uint64_t sub_1DC1C06C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1DC1BB44C(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC1C0704()
{
  uint64_t v0;

  return sub_1DC1ED2E0(v0);
}

uint64_t sub_1DC1C071C@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC1ED3E4(a1);
}

uint64_t sub_1DC1C0734()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1DC4008EC();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1DC1C07A8@<X0>(uint64_t a1@<X0>, BOOL *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(sub_1DC4008EC() - 8) + 80);
  return sub_1DC1BBB0C(a1, *(uint64_t **)(v2 + 32), v2 + ((v5 + 40) & ~v5), a2);
}

void sub_1DC1C0804()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB41D28)
  {
    v0 = sub_1DC4095A4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB41D28);
  }
}

uint64_t sub_1DC1C085C()
{
  return sub_1DC1EBE94();
}

uint64_t sub_1DC1C088C(_QWORD *a1, uint64_t a2)
{
  return sub_1DC1BF1C4(a1, a2);
}

uint64_t sub_1DC1C08A4(uint64_t a1)
{
  uint64_t v2;

  sub_1DC0FDC18(0, &qword_1EDB2ACD0, (unint64_t *)&qword_1EDB2ACC0, MEMORY[0x1E0D53040], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1DC1C0908()
{
  unint64_t result;

  result = qword_1F034DD28;
  if (!qword_1F034DD28)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC41E5F4, &type metadata for WatchState);
    atomic_store(result, (unint64_t *)&qword_1F034DD28);
  }
  return result;
}

uint64_t sub_1DC1C0950(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t (*v18)(void);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v2 = v1;
  v4 = *(_QWORD **)v2;
  v21 = sub_1DC40124C();
  v5 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_1DC4008EC();
  v8 = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v22);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC092F50(0, (unint64_t *)&unk_1EDB28D90, (void (*)(uint64_t))MEMORY[0x1E0DAEFA8]);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v20 - v12;
  v20 = v2 + v4[14];
  v14 = sub_1DC400F7C();
  v15 = *(_QWORD *)(v14 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v13, a1, v14);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v13, 0, 1, v14);
  v16 = (_QWORD *)(*(_QWORD *)(v2 + *(_QWORD *)(*(_QWORD *)v2 + 120))
                 + OBJC_IVAR____TtC8StocksUI20StockFeedDataManager_watchlistManager);
  __swift_project_boxed_opaque_existential_1(v16, v16[3]);
  sub_1DC400A60();
  sub_1DC4011EC();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v21);
  v17 = (*(uint64_t (**)(char *, char *, _QWORD))(v4[11] + 120))(v13, v10, v4[10]);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v22);
  sub_1DC092F14((uint64_t)v13, (unint64_t *)&unk_1EDB28D90, (void (*)(uint64_t))MEMORY[0x1E0DAEFA8]);
  v23 = v17;
  v18 = MEMORY[0x1E0DB8020];
  sub_1DC165EEC(0, (unint64_t *)&qword_1EDB29E00, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB8020]);
  sub_1DC165EAC(&qword_1EDB29DF8, (unint64_t *)&qword_1EDB29E00, (uint64_t (*)(uint64_t, _QWORD *))v18, MEMORY[0x1E0DB8030]);
  sub_1DC4049E4();
  return swift_release();
}

uint64_t dispatch thunk of ChartCategoryProviderType.categories(for:dateRange:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t sub_1DC1C0BAC(double a1, double a2, double a3)
{
  uint64_t v6;
  uint64_t result;
  char v8;
  uint64_t v9;
  double v10;
  BOOL v11;
  double v12;
  BOOL v13;
  unint64_t v14;
  unint64_t v15;
  _BOOL4 v16;
  double v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v6 = sub_1DC1C0D90(a1, a2, a3);
  v20 = MEMORY[0x1E0DEE9D8];
  result = sub_1DC0F0A2C(0, v6 & ~(v6 >> 63), 0);
  if (v6 < 0)
    goto LABEL_30;
  result = v20;
  v8 = 0;
  v9 = 0;
  if (!v6)
  {
    v12 = a1;
    goto LABEL_16;
  }
  v10 = a1;
  do
  {
    v11 = v10 <= a2;
    if (a3 > 0.0)
      v11 = v10 >= a2;
    if (v11)
    {
      if (v8 & 1 | (v10 != a2))
        goto LABEL_28;
      v8 = 1;
      v12 = v10;
    }
    else
    {
      v13 = __OFADD__(v9++, 1);
      if (v13)
        goto LABEL_29;
      v12 = a1 + (double)v9 * a3;
    }
    v21 = result;
    v15 = *(_QWORD *)(result + 16);
    v14 = *(_QWORD *)(result + 24);
    if (v15 >= v14 >> 1)
    {
      sub_1DC0F0A2C(v14 > 1, v15 + 1, 1);
      result = v21;
    }
    *(_QWORD *)(result + 16) = v15 + 1;
    *(double *)(result + 8 * v15 + 32) = v10;
    v10 = v12;
    --v6;
  }
  while (v6);
  while (1)
  {
LABEL_16:
    v16 = v12 <= a2;
    if (a3 > 0.0)
      v16 = v12 >= a2;
    if (!v16)
      break;
    if ((v12 != a2) | v8 & 1)
      return result;
    v8 = 1;
    v17 = v12;
LABEL_23:
    v22 = result;
    v19 = *(_QWORD *)(result + 16);
    v18 = *(_QWORD *)(result + 24);
    if (v19 >= v18 >> 1)
    {
      sub_1DC0F0A2C(v18 > 1, v19 + 1, 1);
      result = v22;
    }
    *(_QWORD *)(result + 16) = v19 + 1;
    *(double *)(result + 8 * v19 + 32) = v12;
    v12 = v17;
  }
  v13 = __OFADD__(v9++, 1);
  if (!v13)
  {
    v17 = a1 + (double)v9 * a3;
    goto LABEL_23;
  }
  __break(1u);
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1DC1C0D90(double a1, double a2, double a3)
{
  uint64_t result;
  char v4;
  uint64_t v5;
  double v6;
  BOOL v7;
  _BOOL4 v8;

  result = 0;
  v4 = 0;
  v5 = 0;
  v6 = a1;
  do
  {
    v8 = v6 <= a2;
    if (a3 > 0.0)
      v8 = v6 >= a2;
    if (v8)
    {
      if ((v6 != a2) | v4 & 1)
        return result;
      v4 = 1;
    }
    else
    {
      v7 = __OFADD__(v5++, 1);
      if (v7)
        goto LABEL_12;
      v6 = a1 + (double)v5 * a3;
    }
    v7 = __OFADD__(result++, 1);
  }
  while (!v7);
  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

BOOL static ShareLinkContext.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t ShareLinkContext.hash(into:)()
{
  return sub_1DC409ACC();
}

uint64_t ShareLinkContext.hashValue.getter()
{
  sub_1DC409AC0();
  sub_1DC409ACC();
  return sub_1DC409AF0();
}

uint64_t ShareLinkProvider.shareLink(for:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v14;

  v2 = v1;
  sub_1DC092F50(0, (unint64_t *)&unk_1EDB28A70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v14 - v5;
  v7 = sub_1DC3FFDD0();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getObjectType();
  sub_1DC4091D8();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_1DC092F14((uint64_t)v6, (unint64_t *)&unk_1EDB28A70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    v11 = 1;
  }
  else
  {
    v12 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
    v12(v10, v6, v7);
    if ((*(_BYTE *)(v2 + 16) & 1) != 0)
    {
      sub_1DC1C0FF4((uint64_t)v10, a1);
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    }
    else
    {
      v12((char *)a1, v10, v7);
    }
    v11 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(a1, v11, 1, v7);
}

uint64_t sub_1DC1C0FF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;

  v4 = sub_1DC3FFDD0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC092F50(0, (unint64_t *)&unk_1EDB28A70, v8);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v20 - v10;
  sub_1DC092F50(0, &qword_1EDB28A50, (void (*)(uint64_t))MEMORY[0x1E0CAE890]);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v20 - v13;
  v15 = sub_1DC3FFB84();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v20 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC3FFB18();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    sub_1DC092F14((uint64_t)v14, &qword_1EDB28A50, (void (*)(uint64_t))MEMORY[0x1E0CAE890]);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(a2, a1, v4);
  }
  else
  {
    v21 = a2;
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v18, v14, v15);
    sub_1DC3FFB3C();
    v22 = 0x79616C50776F6E2FLL;
    v23 = 0xEB00000000676E69;
    sub_1DC408B48();
    swift_bridgeObjectRelease();
    sub_1DC3FFB48();
    sub_1DC3FFB24();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v11, 1, v4) == 1)
    {
      (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v21, v7, v4);
      return sub_1DC092F14((uint64_t)v11, (unint64_t *)&unk_1EDB28A70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v5 + 32))(v21, v11, v4);
    }
  }
}

uint64_t ShareLinkProvider.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t ShareLinkProvider.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

unint64_t sub_1DC1C1298()
{
  unint64_t result;

  result = qword_1F034DD30;
  if (!qword_1F034DD30)
  {
    result = MEMORY[0x1DF0CAB8C](&protocol conformance descriptor for ShareLinkContext, &type metadata for ShareLinkContext);
    atomic_store(result, (unint64_t *)&qword_1F034DD30);
  }
  return result;
}

uint64_t sub_1DC1C12DC@<X0>(uint64_t a1@<X8>)
{
  return ShareLinkProvider.shareLink(for:)(a1);
}

uint64_t storeEnumTagSinglePayload for ShareLinkContext(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1DC1C1348 + 4 * byte_1DC414D55[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1DC1C137C + 4 * byte_1DC414D50[v4]))();
}

uint64_t sub_1DC1C137C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC1C1384(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC1C138CLL);
  return result;
}

uint64_t sub_1DC1C1398(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC1C13A0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1DC1C13A4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC1C13AC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ShareLinkContext()
{
  return &type metadata for ShareLinkContext;
}

uint64_t method lookup function for ShareLinkProvider()
{
  return swift_lookUpClassMethod();
}

ValueMetadata *type metadata accessor for StockChartRangeCalloutViewOptions()
{
  return &type metadata for StockChartRangeCalloutViewOptions;
}

uint64_t dispatch thunk of StockChartRangeCalloutViewProviderType.view(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of StockChartRangeCalloutViewProviderType.present(_:on:options:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

uint64_t sub_1DC1C13F4(uint64_t a1, void *a2, __int128 *a3)
{
  uint64_t v3;
  int *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  id v23;
  char *v24;
  uint64_t v25;
  __int128 v27;
  uint64_t v28[15];
  _OWORD v29[7];
  uint64_t v30;
  _OWORD v31[7];
  uint64_t v32;

  v7 = (int *)type metadata accessor for StockChartCalloutLayoutOptions();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v28[-2] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = *a3;
  v10 = *((_QWORD *)a3 + 2);
  v11 = *((_QWORD *)a3 + 3);
  objc_msgSend(a2, sel_bounds);
  v13 = v12;
  v15 = v14;
  v16 = (int *)type metadata accessor for StockChartRangeCalloutViewModel(0);
  v17 = a1 + v16[6];
  v18 = &v9[v7[5]];
  v19 = sub_1DC4002BC();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v18, v17, v19);
  v20 = a1 + v16[7];
  v21 = &v9[v7[6]];
  v22 = sub_1DC400220();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v21, v20, v22);
  v23 = objc_msgSend(a2, sel_traitCollection);
  *(_QWORD *)v9 = v13;
  *((_QWORD *)v9 + 1) = v15;
  *(_QWORD *)&v9[v7[7]] = v23;
  v24 = &v9[v7[8]];
  *(_OWORD *)v24 = v27;
  *((_QWORD *)v24 + 2) = v10;
  *((_QWORD *)v24 + 3) = v11;
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 40));
  v25 = a1 + v16[5];
  sub_1DC28D440(a1, *(double *)&v25, (double *)v9, v28);
  sub_1DC1C1658((uint64_t)v28, (uint64_t)v29);
  if (*(_QWORD *)&v29[0])
  {
    v31[4] = v29[4];
    v31[5] = v29[5];
    v31[6] = v29[6];
    v31[0] = v29[0];
    v31[1] = v29[1];
    v32 = v30;
    v31[2] = v29[2];
    v31[3] = v29[3];
    sub_1DC2A69AC((uint64_t)a2, a1, v25, (uint64_t)v31);
    sub_1DC1C172C((uint64_t)v28);
  }
  return sub_1DC1C16F0((uint64_t)v9);
}

uint64_t type metadata accessor for StockChartRangeCalloutViewProvider()
{
  return objc_opt_self();
}

id sub_1DC1C1604()
{
  return objc_msgSend(objc_allocWithZone((Class)type metadata accessor for StockChartRangeCalloutView()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
}

uint64_t sub_1DC1C1638(uint64_t a1, void *a2, __int128 *a3)
{
  return sub_1DC1C13F4(a1, a2, a3);
}

uint64_t sub_1DC1C1658(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1DC1C169C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1DC1C169C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F034DD38)
  {
    v0 = sub_1DC4095A4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1F034DD38);
  }
}

uint64_t sub_1DC1C16F0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for StockChartCalloutLayoutOptions();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DC1C172C(uint64_t a1)
{
  sub_1DC1C1784(*(void **)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(void **)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(void **)(a1 + 80));
  return a1;
}

void sub_1DC1C1784(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  if (a1)
  {

  }
}

uint64_t sub_1DC1C17C4@<X0>(uint64_t (*a1)(char *)@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(void);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  void (*v25)(uint64_t *, _QWORD);
  char *v26;
  void (*v27)(char *, char *, uint64_t);
  uint64_t v28;
  char v29;
  uint64_t v30;
  char *v31;
  uint64_t v33;
  char *v34;
  char *v35;
  void (*v36)(char *, uint64_t, uint64_t, __n128);
  char *v37;
  uint64_t v38;
  uint64_t (*v39)(char *);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45[4];
  uint64_t v46;

  v39 = a1;
  v40 = a2;
  v34 = a3;
  sub_1DC0CC0A4(0, (unint64_t *)&qword_1EDB29D98, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60]);
  v41 = *(_QWORD *)(v4 - 8);
  v42 = v4;
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v44 = (char *)&v33 - v8;
  v9 = MEMORY[0x1E0DBC790];
  sub_1DC0CC0A4(0, (unint64_t *)&qword_1EDB2AB40, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790]);
  v11 = v10;
  v12 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v33 - v13;
  sub_1DC11258C();
  v16 = v15;
  v17 = MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v33 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = v12;
  v36 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v12 + 16);
  v36(v14, v3, v11, v17);
  sub_1DC0D4244((unint64_t *)&unk_1EDB2AB20, (unint64_t *)&qword_1EDB2AB40, (uint64_t (*)(uint64_t, _QWORD *))v9, MEMORY[0x1E0DBC7C0]);
  v37 = v14;
  sub_1DC408BF0();
  v20 = &v19[*(int *)(v16 + 36)];
  sub_1DC0D4244((unint64_t *)&unk_1EDB2AB30, (unint64_t *)&qword_1EDB2AB40, (uint64_t (*)(uint64_t, _QWORD *))v9, MEMORY[0x1E0DBC7C8]);
  v21 = *(_QWORD *)v20;
  sub_1DC408ED8();
  if (v21 == v45[0])
  {
    v22 = v41;
    v23 = v42;
LABEL_7:
    sub_1DC0926D8((uint64_t)v19, (uint64_t (*)(_QWORD))sub_1DC11258C);
    v30 = 1;
    v31 = v34;
  }
  else
  {
    v24 = v20;
    v22 = v41;
    v23 = v42;
    v35 = v19;
    while (1)
    {
      v25 = (void (*)(uint64_t *, _QWORD))sub_1DC408EF0();
      (*(void (**)(char *))(v22 + 16))(v44);
      v25(v45, 0);
      v26 = v37;
      ((void (*)(char *, char *, uint64_t))v36)(v37, v19, v11);
      sub_1DC408EE4();
      (*(void (**)(char *, uint64_t))(v38 + 8))(v26, v11);
      v27 = *(void (**)(char *, char *, uint64_t))(v22 + 32);
      v27(v6, v44, v23);
      v28 = v46;
      v29 = v39(v6);
      if (v28)
      {
        (*(void (**)(char *, uint64_t))(v41 + 8))(v6, v42);
        return sub_1DC0926D8((uint64_t)v35, (uint64_t (*)(_QWORD))sub_1DC11258C);
      }
      v46 = 0;
      if ((v29 & 1) != 0)
        break;
      v22 = v41;
      v23 = v42;
      (*(void (**)(char *, uint64_t))(v41 + 8))(v6, v42);
      v43 = *(_QWORD *)v24;
      v19 = v35;
      sub_1DC408ED8();
      if (v43 == v45[0])
        goto LABEL_7;
    }
    sub_1DC0926D8((uint64_t)v35, (uint64_t (*)(_QWORD))sub_1DC11258C);
    v31 = v34;
    v23 = v42;
    v27(v34, v6, v42);
    v30 = 0;
    v22 = v41;
  }
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 56))(v31, v30, 1, v23);
}

uint64_t sub_1DC1C1B34@<X0>(uint64_t (*a1)(char *)@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(void);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  void (*v25)(uint64_t *, _QWORD);
  char *v26;
  void (*v27)(char *, char *, uint64_t);
  uint64_t v28;
  char v29;
  uint64_t v30;
  char *v31;
  uint64_t v33;
  char *v34;
  char *v35;
  void (*v36)(char *, uint64_t, uint64_t, __n128);
  char *v37;
  uint64_t v38;
  uint64_t (*v39)(char *);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45[4];
  uint64_t v46;

  v39 = a1;
  v40 = a2;
  v34 = a3;
  sub_1DC0F8190();
  v41 = *(_QWORD *)(v4 - 8);
  v42 = v4;
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v44 = (char *)&v33 - v8;
  v9 = MEMORY[0x1E0DB7B60];
  sub_1DC0CC0A4(0, (unint64_t *)&qword_1EDB29D98, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60]);
  v11 = v10;
  v12 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v33 - v13;
  sub_1DC108DCC();
  v16 = v15;
  v17 = MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v33 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = v12;
  v36 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v12 + 16);
  v36(v14, v3, v11, v17);
  sub_1DC0D4244((unint64_t *)&unk_1EDB29D80, (unint64_t *)&qword_1EDB29D98, (uint64_t (*)(uint64_t, _QWORD *))v9, MEMORY[0x1E0DB7B90]);
  v37 = v14;
  sub_1DC408BF0();
  v20 = &v19[*(int *)(v16 + 36)];
  sub_1DC0D4244(&qword_1EDB29D90, (unint64_t *)&qword_1EDB29D98, (uint64_t (*)(uint64_t, _QWORD *))v9, MEMORY[0x1E0DB7B98]);
  v21 = *(_QWORD *)v20;
  sub_1DC408ED8();
  if (v21 == v45[0])
  {
    v22 = v41;
    v23 = v42;
LABEL_7:
    sub_1DC0926D8((uint64_t)v19, (uint64_t (*)(_QWORD))sub_1DC108DCC);
    v30 = 1;
    v31 = v34;
  }
  else
  {
    v24 = v20;
    v22 = v41;
    v23 = v42;
    v35 = v19;
    while (1)
    {
      v25 = (void (*)(uint64_t *, _QWORD))sub_1DC408EF0();
      (*(void (**)(char *))(v22 + 16))(v44);
      v25(v45, 0);
      v26 = v37;
      ((void (*)(char *, char *, uint64_t))v36)(v37, v19, v11);
      sub_1DC408EE4();
      (*(void (**)(char *, uint64_t))(v38 + 8))(v26, v11);
      v27 = *(void (**)(char *, char *, uint64_t))(v22 + 32);
      v27(v6, v44, v23);
      v28 = v46;
      v29 = v39(v6);
      if (v28)
      {
        (*(void (**)(char *, uint64_t))(v41 + 8))(v6, v42);
        return sub_1DC0926D8((uint64_t)v35, (uint64_t (*)(_QWORD))sub_1DC108DCC);
      }
      v46 = 0;
      if ((v29 & 1) != 0)
        break;
      v22 = v41;
      v23 = v42;
      (*(void (**)(char *, uint64_t))(v41 + 8))(v6, v42);
      v43 = *(_QWORD *)v24;
      v19 = v35;
      sub_1DC408ED8();
      if (v43 == v45[0])
        goto LABEL_7;
    }
    sub_1DC0926D8((uint64_t)v35, (uint64_t (*)(_QWORD))sub_1DC108DCC);
    v31 = v34;
    v23 = v42;
    v27(v34, v6, v42);
    v30 = 0;
    v22 = v41;
  }
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 56))(v31, v30, 1, v23);
}

uint64_t sub_1DC1C1E94@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  double v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(uint64_t, char *, uint64_t);
  uint64_t (*v36)(void);
  char *v37;
  uint64_t v38;
  char *v39;
  void (*v40)(__int128 *, _QWORD);
  uint64_t v41;
  void (*v42)(char *, char *, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t result;
  char *v48;
  char *v49;
  char *v50;
  void (*v51)(uint64_t, char *, uint64_t);
  char *v52;
  uint64_t v53;
  unint64_t v54;
  char v55;
  double v56;
  double v57;
  int64_t v58;
  unint64_t v59;
  uint64_t v60;
  void (*v61)(_QWORD, unint64_t, uint64_t);
  unint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;
  double v70;
  double v71;
  double v72;
  char v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  __int128 v86;
  __int128 v87;
  char *v88;
  __int128 v89;
  char *v90;
  char *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  __int128 v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  _QWORD *v101;
  void (*v102)(uint64_t, char *, uint64_t);
  char *v103;
  uint64_t v104;
  uint64_t v105;
  char v106[16];
  uint64_t v107;
  uint64_t v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;
  uint64_t v113;
  char v114;
  _OWORD v115[4];
  uint64_t v116;
  _OWORD v117[2];
  uint64_t v118;

  v5 = v3;
  v100 = a2;
  v93 = a3;
  v95 = sub_1DC4052FC();
  v94 = *(_QWORD *)(v95 - 8);
  MEMORY[0x1E0C80A78](v95);
  v92 = (char *)&v82 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC089DA4(0, &qword_1EDB284F8, (uint64_t (*)(uint64_t))sub_1DC104584, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEC628]);
  MEMORY[0x1E0C80A78](v8);
  v84 = (char *)&v82 - v9;
  v85 = type metadata accessor for StockListSectionHeaderViewLayoutOptions();
  MEMORY[0x1E0C80A78](v85);
  v88 = (char *)&v82 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC104584();
  v98 = v11;
  v99 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  *(_QWORD *)&v87 = (char *)&v82 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  *(_QWORD *)&v97 = (char *)&v82 - v14;
  sub_1DC0CC0A4(0, (unint64_t *)&qword_1EDB2AB40, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790]);
  v16 = v15;
  v17 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v82 - v18;
  sub_1DC11258C();
  v21 = v20;
  MEMORY[0x1E0C80A78](v20);
  v23 = (char *)&v82 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0CC0A4(0, (unint64_t *)&qword_1EDB29D98, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60]);
  v25 = v24;
  v26 = *(_QWORD *)(v24 - 8);
  MEMORY[0x1E0C80A78](v24);
  v28 = (char *)&v82 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v29);
  v103 = (char *)&v82 - v30;
  MEMORY[0x1E0C80A78](v31);
  v90 = (char *)&v82 - v32;
  MEMORY[0x1E0C80A78](v33);
  v91 = (char *)&v82 - v34;
  *(_QWORD *)&v86 = v5;
  v107 = v5;
  v108 = v100;
  v96 = sub_1DC096970((void (*)(char *))sub_1DC1C3C8C, (uint64_t)v106);
  v101 = 0;
  v105 = v17;
  v35 = *(void (**)(uint64_t, char *, uint64_t))(v17 + 16);
  *(_QWORD *)&v89 = a1;
  v102 = v35;
  v35((uint64_t)v19, a1, v16);
  v36 = MEMORY[0x1E0DBC790];
  sub_1DC0D4244((unint64_t *)&unk_1EDB2AB20, (unint64_t *)&qword_1EDB2AB40, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790], MEMORY[0x1E0DBC7C0]);
  v104 = (uint64_t)v19;
  sub_1DC408BF0();
  v37 = &v23[*(int *)(v21 + 36)];
  sub_1DC0D4244((unint64_t *)&unk_1EDB2AB30, (unint64_t *)&qword_1EDB2AB40, (uint64_t (*)(uint64_t, _QWORD *))v36, MEMORY[0x1E0DBC7C8]);
  v38 = *(_QWORD *)v37;
  sub_1DC408ED8();
  if (v38 == (_QWORD)v109)
  {
LABEL_5:
    sub_1DC0926D8((uint64_t)v23, (uint64_t (*)(_QWORD))sub_1DC11258C);
LABEL_6:
    v44 = v100;
    v45 = v95;
    v46 = v94;
LABEL_7:
    (*(void (**)(char *, uint64_t, uint64_t))(v46 + 16))(v92, v44, v45);
    type metadata accessor for StockListLayoutModel();
    sub_1DC108E64();
    sub_1DC080808(&qword_1EDB32480, (uint64_t (*)(uint64_t))type metadata accessor for StockListLayoutModel, (uint64_t)&unk_1DC414930);
    return sub_1DC404540();
  }
  v39 = v103;
  while (1)
  {
    v40 = (void (*)(__int128 *, _QWORD))sub_1DC408EF0();
    (*(void (**)(char *))(v26 + 16))(v39);
    v40(&v109, 0);
    v41 = v104;
    v102(v104, v23, v16);
    sub_1DC408EE4();
    (*(void (**)(uint64_t, uint64_t))(v105 + 8))(v41, v16);
    v42 = *(void (**)(char *, char *, uint64_t))(v26 + 32);
    v42(v28, v39, v25);
    sub_1DC4046FC();
    LODWORD(v41) = BYTE8(v111);
    sub_1DC10BD5C(v109, *((uint64_t *)&v109 + 1), v110, *((uint64_t *)&v110 + 1), v111, BYTE8(v111));
    if ((_DWORD)v41 == 1)
      break;
    (*(void (**)(char *, uint64_t))(v26 + 8))(v28, v25);
    v43 = *(_QWORD *)v37;
    sub_1DC408ED8();
    if (v43 == (_QWORD)v109)
      goto LABEL_5;
  }
  v105 = v26;
  sub_1DC0926D8((uint64_t)v23, (uint64_t (*)(_QWORD))sub_1DC11258C);
  v48 = v90;
  v42(v90, v28, v25);
  v49 = v91;
  v42(v91, v48, v25);
  sub_1DC4046FC();
  v50 = (char *)*((_QWORD *)&v109 + 1);
  v51 = (void (*)(uint64_t, char *, uint64_t))*((_QWORD *)&v110 + 1);
  v52 = (char *)v111;
  v53 = v25;
  if (BYTE8(v111) != 1)
  {
    sub_1DC10BD5C(v109, *((uint64_t *)&v109 + 1), v110, *((uint64_t *)&v110 + 1), v111, BYTE8(v111));
    (*(void (**)(char *, uint64_t))(v105 + 8))(v49, v25);
    goto LABEL_6;
  }
  v117[0] = v109;
  v117[1] = v110;
  v118 = v111;
  v104 = sub_1DC27AACC();
  v44 = v100;
  v45 = v95;
  v46 = v94;
  v54 = v96;
  if ((v55 & 1) != 0)
  {
    (*(void (**)(char *, uint64_t))(v105 + 8))(v49, v53);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  v90 = v52;
  sub_1DC4052A8();
  v57 = v56;
  v58 = *(_QWORD *)(v54 + 16);
  v83 = v53;
  v103 = v50;
  v102 = v51;
  if (v58)
  {
    *(_QWORD *)&v109 = MEMORY[0x1E0DEE9D8];
    sub_1DC2AD2E0(0, v58, 0);
    v59 = v54 + ((*(unsigned __int8 *)(v99 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v99 + 80));
    v60 = *(_QWORD *)(v99 + 72);
    v61 = *(void (**)(_QWORD, unint64_t, uint64_t))(v99 + 16);
    while (1)
    {
      v62 = v97;
      v63 = v98;
      v61(v97, v59, v98);
      v64 = v101;
      sub_1DC1C375C(v62, (double *)v115);
      if (v64)
        break;
      (*(void (**)(unint64_t, uint64_t))(v99 + 8))(v62, v63);
      v4 = *(double *)v115;
      v63 = v109;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v101 = 0;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1DC2AD2E0(0, *(_QWORD *)(v63 + 16) + 1, 1);
        v63 = v109;
      }
      v67 = *(_QWORD *)(v63 + 16);
      v66 = *(_QWORD *)(v63 + 24);
      v62 = v67 + 1;
      if (v67 >= v66 >> 1)
      {
        sub_1DC2AD2E0(v66 > 1, v67 + 1, 1);
        v63 = v109;
      }
      *(_QWORD *)(v63 + 16) = v62;
      *(double *)(v63 + 8 * v67 + 32) = v4;
      v59 += v60;
      if (!--v58)
        goto LABEL_22;
    }
    (*(void (**)(unint64_t, uint64_t))(v99 + 8))(v62, v63);
    swift_release();
    __break(1u);
  }
  else
  {
    v63 = MEMORY[0x1E0DEE9D8];
    v62 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
    if (!v62)
    {
      v4 = 0.0;
      v61 = (void (*)(_QWORD, unint64_t, uint64_t))v87;
      v64 = (_QWORD *)v86;
      v60 = v85;
      goto LABEL_31;
    }
LABEL_22:
    v61 = (void (*)(_QWORD, unint64_t, uint64_t))v87;
    v64 = (_QWORD *)v86;
    v60 = v85;
    if (v62 >= 2)
    {
      v69 = 0;
      v68 = v62 & 0xFFFFFFFFFFFFFFFELL;
      v4 = 0.0;
      do
      {
        v4 = v4 + *(double *)(v63 + 8 * v69 + 32) + *(double *)(v63 + 8 * v69 + 40);
        v69 += 2;
      }
      while (v68 != v69);
      goto LABEL_30;
    }
    v68 = 0;
    v4 = 0.0;
  }
  do
  {
    v70 = *(double *)(v63 + 8 * v68++ + 32);
    v4 = v4 + v70;
LABEL_30:
    ;
  }
  while (v62 != v68);
LABEL_31:
  swift_bridgeObjectRelease();
  sub_1DC40523C();
  sub_1DC408F80();
  v72 = v57 - v4 - v71;
  __swift_project_boxed_opaque_existential_1(v64 + 12, v64[15]);
  __swift_project_boxed_opaque_existential_1(v64 + 27, v64[30]);
  v73 = sub_1DC400C1C();
  v74 = (uint64_t)v88;
  (*(void (**)(char *, uint64_t, uint64_t))(v46 + 16))(v88, v44, v45);
  *(_BYTE *)(v74 + *(int *)(v60 + 20)) = (v73 & 1) == 0;
  sub_1DC096410((uint64_t)v117, v74, (uint64_t)v115);
  v97 = v115[0];
  v89 = v115[1];
  v87 = v115[2];
  v86 = v115[3];
  v75 = v116;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v76 = sub_1DC0926D8(v74, (uint64_t (*)(_QWORD))type metadata accessor for StockListSectionHeaderViewLayoutOptions);
  v109 = v97;
  v110 = v89;
  v111 = v87;
  v112 = v86;
  v113 = v75;
  v114 = 1;
  MEMORY[0x1E0C80A78](v76);
  *(&v82 - 4) = (uint64_t)v64;
  *(&v82 - 3) = v44;
  *((double *)&v82 - 2) = v72;
  sub_1DC114564((uint64_t)v115);
  v77 = v91;
  sub_1DC155208((void (*)(char *))sub_1DC1C3CA4, (uint64_t)(&v82 - 6));
  type metadata accessor for StockListLayoutModel();
  sub_1DC108E64();
  sub_1DC080808(&qword_1EDB32480, (uint64_t (*)(uint64_t))type metadata accessor for StockListLayoutModel, (uint64_t)&unk_1DC414930);
  result = sub_1DC405308();
  *(_QWORD *)&v109 = v96;
  v78 = v104;
  if (*(_QWORD *)(v96 + 16) < v104)
  {
    __break(1u);
  }
  else
  {
    v79 = v98;
    if ((v104 & 0x8000000000000000) == 0)
    {
      v80 = v99;
      v81 = (uint64_t)v84;
      (*(void (**)(char *, _QWORD, uint64_t))(v99 + 16))(v84, v61, v98);
      sub_1DC220D44(v78, v78, v81);
      sub_1DC11453C((uint64_t)v115);
      (*(void (**)(void (*)(_QWORD, unint64_t, uint64_t), uint64_t))(v80 + 8))(v61, v79);
      (*(void (**)(char *, uint64_t))(v105 + 8))(v77, v83);
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1DC1C2A40@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE *v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE *v34;
  uint64_t v35;
  void (*v37)(_BYTE *, uint64_t, uint64_t);
  uint64_t (*v38)(void);
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  void (*v53)(__int128 *, _QWORD);
  uint64_t v54;
  _BYTE *v55;
  _BYTE *v56;
  uint64_t v57;
  uint64_t v58;
  _BYTE *v59;
  int EnumCaseMultiPayload;
  uint64_t v61;
  uint64_t v62;
  _BYTE *v63;
  _BYTE *v64;
  _BYTE *v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  double v69;
  _BYTE *v70;
  uint64_t v71;
  uint64_t v72;
  _BYTE *v73;
  int v74;
  uint64_t v75;
  char v76;
  _BYTE *v77;
  uint64_t v78;
  _QWORD *v79;
  unint64_t v80;
  unint64_t v81;
  _QWORD *v82;
  _QWORD *v83;
  uint64_t v84;
  _QWORD *v85;
  uint64_t *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  _BYTE v98[12];
  int v99;
  int v100;
  int v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  int v106;
  int v107;
  int v108;
  int v109;
  int v110;
  uint64_t v111;
  _BYTE *v112;
  _QWORD *v113;
  uint64_t v114;
  uint64_t v115;
  _BYTE *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  _BYTE *v120;
  _BYTE *v121;
  _BYTE *v122;
  _BYTE *v123;
  void (*v124)(_BYTE *, uint64_t, uint64_t);
  _BYTE *v125;
  uint64_t v126;
  _BYTE *v127;
  uint64_t v128;
  uint64_t *v129;
  _BYTE *v130;
  _BYTE *v131;
  uint64_t v132;
  _BYTE *v133;
  __int128 v134;
  __int128 v135;
  __int128 v136;
  __int128 v137;
  __int128 v138;
  __int128 v139;
  __int128 v140;
  __int128 v141;
  uint64_t v142;
  char v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  char v149;
  _OWORD v150[4];
  uint64_t v151;
  _QWORD v152[6];

  v115 = a3;
  v113 = a2;
  v117 = a4;
  v111 = type metadata accessor for StockListSectionHeaderViewLayoutOptions();
  MEMORY[0x1E0C80A78](v111);
  v112 = &v98[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = sub_1DC4011C8();
  v118 = *(_QWORD *)(v6 - 8);
  v119 = v6;
  MEMORY[0x1E0C80A78](v6);
  v116 = &v98[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v114 = type metadata accessor for PriceViewModel();
  MEMORY[0x1E0C80A78](v114);
  v120 = &v98[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v9);
  v122 = &v98[-v10];
  MEMORY[0x1E0C80A78](v11);
  v133 = &v98[-v12];
  v13 = type metadata accessor for StockListStockModel(0);
  MEMORY[0x1E0C80A78](v13);
  v121 = &v98[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v132 = type metadata accessor for StockListModel(0);
  MEMORY[0x1E0C80A78](v132);
  v131 = &v98[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v16);
  *(_QWORD *)&v137 = &v98[-v17];
  sub_1DC10B384(0);
  MEMORY[0x1E0C80A78](v18);
  v20 = &v98[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1DC0F8190();
  v22 = v21;
  *(_QWORD *)&v136 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  *(_QWORD *)&v135 = &v98[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v24);
  v26 = &v98[-v25];
  sub_1DC0CC0A4(0, (unint64_t *)&qword_1EDB29D98, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60]);
  v28 = v27;
  v29 = *(_QWORD *)(v27 - 8);
  MEMORY[0x1E0C80A78](v27);
  v31 = &v98[-v30];
  sub_1DC108DCC();
  *(_QWORD *)&v134 = v32;
  MEMORY[0x1E0C80A78](v32);
  v34 = &v98[-((v33 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1DC4046FC();
  if (v149)
  {
    if (v149 == 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1DC104584();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v117, 1, 1, v35);
    }
    else
    {
      v142 = 0;
      v140 = 0u;
      v141 = 0u;
      v138 = 0u;
      v139 = 0u;
      v143 = 2;
      MEMORY[0x1E0C80A78](v145);
      v48 = v115;
      *(_QWORD *)&v98[-16] = v113;
      *(_QWORD *)&v98[-8] = v48;
      sub_1DC155208((void (*)(char *))sub_1DC1C3EDC, (uint64_t)&v98[-32]);
      type metadata accessor for StockListLayoutModel();
      sub_1DC108E64();
      sub_1DC080808(&qword_1EDB32480, (uint64_t (*)(uint64_t))type metadata accessor for StockListLayoutModel, (uint64_t)&unk_1DC414930);
      v49 = v117;
      sub_1DC405308();
      sub_1DC104584();
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 56))(v49, 0, 1, v50);
    }
  }
  v126 = v29;
  v127 = v26;
  v152[0] = v144;
  v152[1] = v145;
  v103 = v147;
  v104 = v145;
  v152[2] = v146;
  v152[3] = v147;
  v102 = v148;
  v152[4] = v148;
  v37 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v29 + 16);
  v105 = a1;
  v124 = v37;
  v37(v31, a1, v28);
  v38 = MEMORY[0x1E0DB7B60];
  sub_1DC0D4244((unint64_t *)&unk_1EDB29D80, (unint64_t *)&qword_1EDB29D98, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60], MEMORY[0x1E0DB7B90]);
  v125 = v31;
  sub_1DC408BF0();
  v39 = (uint64_t *)&v34[*(int *)(v134 + 36)];
  v40 = sub_1DC0D4244(&qword_1EDB29D90, (unint64_t *)&qword_1EDB29D98, (uint64_t (*)(uint64_t, _QWORD *))v38, MEMORY[0x1E0DB7B98]);
  v129 = v39;
  v130 = v34;
  v41 = *v39;
  v128 = v40;
  sub_1DC408ED8();
  if (v41 != (_QWORD)v138)
  {
    v123 = v20;
    v110 = *MEMORY[0x1E0DAF1E8];
    v109 = *MEMORY[0x1E0DAF1F0];
    v108 = *MEMORY[0x1E0DAF1C0];
    v107 = *MEMORY[0x1E0DAF1D8];
    v106 = *MEMORY[0x1E0DAF1C8];
    v101 = *MEMORY[0x1E0DAF1E0];
    v100 = *MEMORY[0x1E0DAF1D0];
    v99 = *MEMORY[0x1E0DAF1B8];
    *(_QWORD *)&v134 = MEMORY[0x1E0DEE9D8];
    v42 = (uint64_t)v130;
    while (1)
    {
      v53 = (void (*)(__int128 *, _QWORD))sub_1DC408EF0();
      v54 = v136;
      v55 = v127;
      (*(void (**)(_BYTE *))(v136 + 16))(v127);
      v53(&v138, 0);
      v56 = v125;
      v124(v125, v42, v28);
      sub_1DC408EE4();
      (*(void (**)(_BYTE *, uint64_t))(v126 + 8))(v56, v28);
      (*(void (**)(_QWORD, _BYTE *, uint64_t))(v54 + 32))(v135, v55, v22);
      v57 = v137;
      sub_1DC404354();
      v58 = v57;
      v59 = v131;
      sub_1DC0990BC(v58, (uint64_t)v131, type metadata accessor for StockListModel);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload)
      {
        v61 = (uint64_t)v123;
        if (EnumCaseMultiPayload == 1)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        v62 = type metadata accessor for StockViewModel();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 56))(v61, 1, 1, v62);
      }
      else
      {
        v63 = v121;
        sub_1DC0F25C8((uint64_t)v59, (uint64_t)v121);
        v61 = (uint64_t)v123;
        sub_1DC0990BC((uint64_t)v63, (uint64_t)v123, (uint64_t (*)(_QWORD))type metadata accessor for StockViewModel);
        sub_1DC0926D8((uint64_t)v63, type metadata accessor for StockListStockModel);
        v62 = type metadata accessor for StockViewModel();
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 56))(v61, 0, 1, v62);
      }
      sub_1DC0926D8(v137, type metadata accessor for StockListModel);
      type metadata accessor for StockViewModel();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 48))(v61, 1, v62) != 1)
        break;
      sub_1DC0926D8(v61, (uint64_t (*)(_QWORD))sub_1DC10B384);
      (*(void (**)(_QWORD, uint64_t))(v136 + 8))(v135, v22);
      v51 = v129;
LABEL_12:
      v52 = *v51;
      v42 = (uint64_t)v130;
      sub_1DC408ED8();
      if (v52 == (_QWORD)v138)
        goto LABEL_6;
    }
    v64 = v133;
    sub_1DC0990BC(v61 + *(int *)(v62 + 28), (uint64_t)v133, (uint64_t (*)(_QWORD))type metadata accessor for PriceViewModel);
    sub_1DC0926D8(v61, (uint64_t (*)(_QWORD))type metadata accessor for StockViewModel);
    sub_1DC40133C();
    sub_1DC401324();
    if (qword_1EDB28E78 != -1)
      swift_once();
    sub_1DC401318();
    swift_release();
    v65 = v64;
    if ((v64[8] & 1) != 0)
    {
      v66 = *((_QWORD *)v64 + 8);
      v67 = *((_QWORD *)v64 + 9);
      swift_bridgeObjectRetain();
LABEL_41:
      sub_1DC0926D8((uint64_t)v65, (uint64_t (*)(_QWORD))type metadata accessor for PriceViewModel);
      (*(void (**)(_QWORD, uint64_t))(v136 + 8))(v135, v22);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
        v79 = (_QWORD *)v134;
      else
        v79 = sub_1DC108BBC(0, *(_QWORD *)(v134 + 16) + 1, 1, (_QWORD *)v134);
      v81 = v79[2];
      v80 = v79[3];
      v51 = v129;
      if (v81 >= v80 >> 1)
      {
        v83 = sub_1DC108BBC((_QWORD *)(v80 > 1), v81 + 1, 1, v79);
        v51 = v129;
        v79 = v83;
      }
      v79[2] = v81 + 1;
      *(_QWORD *)&v134 = v79;
      v82 = &v79[2 * v81];
      v82[4] = v66;
      v82[5] = v67;
      goto LABEL_12;
    }
    v68 = v138;
    v69 = *(double *)v64;
    v70 = v122;
    sub_1DC0990BC((uint64_t)v64, (uint64_t)v122, (uint64_t (*)(_QWORD))type metadata accessor for PriceViewModel);
    if ((v68 & 1) == 0)
    {
      v76 = 0;
      v75 = (uint64_t)v120;
      goto LABEL_36;
    }
    v72 = v118;
    v71 = v119;
    v73 = v116;
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v118 + 16))(v116, &v70[*(int *)(v114 + 40)], v119);
    v74 = (*(uint64_t (**)(_BYTE *, uint64_t))(v72 + 88))(v73, v71);
    if (v74 == v110 || v74 == v109)
    {
      v76 = 2;
      v75 = (uint64_t)v120;
      goto LABEL_36;
    }
    v75 = (uint64_t)v120;
    if (v74 != v108 && v74 != v107 && v74 != v106)
    {
      v76 = 2;
      if (v74 == v101)
      {
LABEL_36:
        sub_1DC0926D8((uint64_t)v122, (uint64_t (*)(_QWORD))type metadata accessor for PriceViewModel);
        if (qword_1EDB2D588 != -1)
          swift_once();
        v77 = v133;
        v66 = sub_1DC0FC858(*((_QWORD *)v133 + 6), *((_QWORD *)v133 + 7), 5, 1, v76, v69);
        v67 = v78;
        sub_1DC0990BC((uint64_t)v77, v75, (uint64_t (*)(_QWORD))type metadata accessor for PriceViewModel);
        if (!v67)
        {
          v66 = *(_QWORD *)(v75 + 64);
          v67 = *(_QWORD *)(v75 + 72);
          swift_bridgeObjectRetain();
        }
        sub_1DC0926D8(v75, (uint64_t (*)(_QWORD))type metadata accessor for PriceViewModel);
        v65 = v133;
        goto LABEL_41;
      }
      if (v74 == v100)
      {
        v76 = 0;
        goto LABEL_36;
      }
      if (v74 != v99)
        (*(void (**)(_BYTE *, uint64_t))(v118 + 8))(v116, v119);
    }
    v76 = 2;
    goto LABEL_36;
  }
  *(_QWORD *)&v134 = MEMORY[0x1E0DEE9D8];
  v42 = (uint64_t)v130;
LABEL_6:
  sub_1DC0926D8(v42, (uint64_t (*)(_QWORD))sub_1DC108DCC);
  v43 = v134;
  v44 = *(_QWORD *)(v134 + 16);
  if (v44)
  {
    v46 = *(_QWORD *)(v134 + 32);
    v45 = *(_QWORD *)(v134 + 40);
    v47 = v44 - 1;
    if (v44 == 1)
    {
      swift_bridgeObjectRetain();
    }
    else
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v86 = (uint64_t *)(v43 + 56);
      v87 = v45;
      do
      {
        v88 = *(v86 - 1);
        v89 = *v86;
        swift_bridgeObjectRetain();
        v86 += 2;
        v90 = sub_1DC408B18();
        if (v90 < sub_1DC408B18())
        {
          v46 = v88;
          v87 = v89;
        }
        swift_bridgeObjectRelease();
        --v47;
      }
      while (v47);
      swift_bridgeObjectRelease();
      v45 = v87;
    }
    v84 = v117;
    v85 = v113;
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v46 = 0;
    v45 = 0;
    v84 = v117;
    v85 = v113;
  }
  __swift_project_boxed_opaque_existential_1(v85 + 12, v85[15]);
  __swift_project_boxed_opaque_existential_1(v85 + 27, v85[30]);
  v91 = sub_1DC400C1C();
  v92 = sub_1DC4052FC();
  v93 = (uint64_t)v112;
  v94 = v115;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v92 - 8) + 16))(v112, v115, v92);
  *(_BYTE *)(v93 + *(int *)(v111 + 20)) = (v91 & 1) == 0;
  sub_1DC096410((uint64_t)v152, v93, (uint64_t)v150);
  v136 = v150[1];
  v137 = v150[0];
  v134 = v150[3];
  v135 = v150[2];
  v95 = v151;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v96 = sub_1DC0926D8(v93, (uint64_t (*)(_QWORD))type metadata accessor for StockListSectionHeaderViewLayoutOptions);
  v138 = v137;
  v139 = v136;
  v140 = v135;
  v141 = v134;
  v142 = v95;
  v143 = 0;
  MEMORY[0x1E0C80A78](v96);
  *(_QWORD *)&v98[-32] = v85;
  *(_QWORD *)&v98[-24] = v94;
  *(_QWORD *)&v98[-16] = v46;
  *(_QWORD *)&v98[-8] = v45;
  sub_1DC114564((uint64_t)v150);
  sub_1DC155208((void (*)(char *))sub_1DC1C3EA4, (uint64_t)&v98[-48]);
  swift_bridgeObjectRelease();
  type metadata accessor for StockListLayoutModel();
  sub_1DC108E64();
  sub_1DC080808(&qword_1EDB32480, (uint64_t (*)(uint64_t))type metadata accessor for StockListLayoutModel, (uint64_t)&unk_1DC414930);
  sub_1DC405308();
  sub_1DC11453C((uint64_t)v150);
  sub_1DC104584();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v97 - 8) + 56))(v84, 0, 1, v97);
}

uint64_t sub_1DC1C375C@<X0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  void (*v15)(_OWORD *, _QWORD);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  double *v24;
  uint64_t v25;
  uint64_t v26;
  double *v27;
  double v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  double *v36;
  uint64_t v37;
  double v38;
  double *v39;
  uint64_t v40;
  uint64_t v41;
  double *v42;
  double v43;
  _BYTE v44[8];
  double *v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  _OWORD v50[4];
  uint64_t v51;
  char v52;
  uint64_t v53;

  v45 = a2;
  *(_QWORD *)&v49 = type metadata accessor for StockListLayoutModel();
  MEMORY[0x1E0C80A78](v49);
  v4 = &v44[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1DC107DE4();
  v6 = v5;
  *(_QWORD *)&v48 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v44[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1DC104584();
  v10 = v9;
  sub_1DC080808(&qword_1F034DD40, (uint64_t (*)(uint64_t))sub_1DC104584, MEMORY[0x1E0DB9528]);
  v11 = sub_1DC408EC0();
  v12 = MEMORY[0x1E0DEE9D8];
  if (!v11)
    goto LABEL_9;
  v13 = v11;
  v53 = MEMORY[0x1E0DEE9D8];
  sub_1DC2AD2E0(0, v11 & ~(v11 >> 63), 0);
  result = sub_1DC408E90();
  if ((v13 & 0x8000000000000000) == 0)
  {
    *(_QWORD *)&v47 = a1;
    *(_QWORD *)&v46 = v10;
    do
    {
      v15 = (void (*)(_OWORD *, _QWORD))sub_1DC408EF0();
      v16 = v48;
      (*(void (**)(_BYTE *))(v48 + 16))(v8);
      v15(v50, 0);
      sub_1DC404DE0();
      sub_1DC080808(&qword_1EDB32488, (uint64_t (*)(uint64_t))type metadata accessor for StockListLayoutModel, (uint64_t)&unk_1DC414968);
      sub_1DC40625C();
      v18 = v17;
      sub_1DC0926D8((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for StockListLayoutModel);
      (*(void (**)(_BYTE *, uint64_t))(v16 + 8))(v8, v6);
      v12 = v53;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1DC2AD2E0(0, *(_QWORD *)(v12 + 16) + 1, 1);
        v12 = v53;
      }
      v20 = *(_QWORD *)(v12 + 16);
      v19 = *(_QWORD *)(v12 + 24);
      if (v20 >= v19 >> 1)
      {
        sub_1DC2AD2E0(v19 > 1, v20 + 1, 1);
        v12 = v53;
      }
      *(_QWORD *)(v12 + 16) = v20 + 1;
      *(_QWORD *)(v12 + 8 * v20 + 32) = v18;
      sub_1DC408EE4();
      --v13;
    }
    while (v13);
LABEL_9:
    v21 = *(_QWORD *)(v12 + 16);
    if (!v21)
    {
      v23 = 0.0;
      goto LABEL_18;
    }
    if (v21 == 1)
    {
      v22 = 0;
      v23 = 0.0;
    }
    else
    {
      v22 = v21 & 0x7FFFFFFFFFFFFFFELL;
      v24 = (double *)(v12 + 40);
      v23 = 0.0;
      v25 = v21 & 0x7FFFFFFFFFFFFFFELL;
      do
      {
        v23 = v23 + *(v24 - 1) + *v24;
        v24 += 2;
        v25 -= 2;
      }
      while (v25);
      if (v21 == v22)
      {
LABEL_18:
        swift_bridgeObjectRelease();
        result = sub_1DC405314();
        v29 = v51;
        if (!v52 || v52 == 1)
        {
          v46 = v50[3];
          v47 = v50[2];
          v48 = v50[1];
          v49 = v50[0];
          sub_1DC089DA4(0, (unint64_t *)&qword_1EDB3FF78, (uint64_t (*)(uint64_t))sub_1DC12F5A8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
          v30 = swift_allocObject();
          *(_OWORD *)(v30 + 16) = xmmword_1DC40DC10;
          *(_QWORD *)(v30 + 56) = &type metadata for StockListSectionHeaderViewLayoutAttributes;
          *(_QWORD *)(v30 + 64) = sub_1DC114614();
          v31 = swift_allocObject();
          *(_QWORD *)(v30 + 32) = v31;
          v32 = v48;
          *(_OWORD *)(v31 + 16) = v49;
          *(_OWORD *)(v31 + 32) = v32;
          v33 = v46;
          *(_OWORD *)(v31 + 48) = v47;
          *(_OWORD *)(v31 + 64) = v33;
          *(_QWORD *)(v31 + 80) = v29;
          v34 = sub_1DC13E3D4(v30);
          swift_bridgeObjectRelease();
          v35 = *(_QWORD *)(v34 + 16);
          if (v35)
          {
            v36 = v45;
            if (v35 == 1)
            {
              v37 = 0;
              v38 = 0.0;
            }
            else
            {
              v37 = v35 & 0x7FFFFFFFFFFFFFFELL;
              v39 = (double *)(v34 + 40);
              v38 = 0.0;
              v40 = v35 & 0x7FFFFFFFFFFFFFFELL;
              do
              {
                v38 = v38 + *(v39 - 1) + *v39;
                v39 += 2;
                v40 -= 2;
              }
              while (v40);
              if (v35 == v37)
                goto LABEL_30;
            }
            v41 = v35 - v37;
            v42 = (double *)(v34 + 8 * v37 + 32);
            do
            {
              v43 = *v42++;
              v38 = v38 + v43;
              --v41;
            }
            while (v41);
LABEL_30:
            result = swift_bridgeObjectRelease();
            goto LABEL_31;
          }
          result = swift_bridgeObjectRelease();
        }
        v38 = 0.0;
        v36 = v45;
LABEL_31:
        *v36 = v23 + v38;
        return result;
      }
    }
    v26 = v21 - v22;
    v27 = (double *)(v12 + 8 * v22 + 32);
    do
    {
      v28 = *v27++;
      v23 = v23 + v28;
      --v26;
    }
    while (v26);
    goto LABEL_18;
  }
  __break(1u);
  return result;
}

uint64_t sub_1DC1C3C6C@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1DC1C1E94(a1, a2, a3);
}

uint64_t sub_1DC1C3C8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1DC1C2A40(a1, *(_QWORD **)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_1DC1C3CA4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1DC0F6C9C(*(_QWORD *)(v1 + 24), 0, 0, *(_QWORD *)(v1 + 32), 0, a1);
}

double sub_1DC1C3CE0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  CGFloat v13;
  void *v14;
  id v15;
  uint64_t v16;
  double v17;
  double v18;
  double v19;
  double v20;
  void *v21;
  __int128 v22;
  __int128 v23;
  double result;
  __int128 v25;
  uint64_t v26;
  _OWORD v27[2];
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  char v33;

  v4 = sub_1DC405290();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC4052F0();
  v9 = v8;
  sub_1DC405224();
  v11 = v9 - (v10 + v10);
  sub_1DC4052F0();
  v13 = v12;
  v14 = (void *)sub_1DC405284();
  v15 = objc_msgSend(v14, sel_horizontalSizeClass);

  if (v15 == (id)2)
  {
    v16 = a1 + *(int *)(type metadata accessor for EmptyListViewLayoutOptions() + 20);
    if (!*(_BYTE *)(v16 + 8))
      v11 = *(double *)v16;
  }
  sub_1DC405224();
  v18 = v17;
  v20 = v19;
  v21 = (void *)sub_1DC405254();
  sub_1DC405278();
  sub_1DC220694(v21, (uint64_t)v7, 1, (uint64_t)v27, 0.0, 0.0, v13, v11, v18, v20);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v22 = v31;
  *(_OWORD *)(a2 + 64) = v30;
  *(_OWORD *)(a2 + 80) = v22;
  *(_OWORD *)(a2 + 96) = v32;
  *(_BYTE *)(a2 + 112) = v33;
  v23 = v27[1];
  *(_OWORD *)a2 = v27[0];
  *(_OWORD *)(a2 + 16) = v23;
  result = *(double *)&v28;
  v25 = v29;
  *(_OWORD *)(a2 + 32) = v28;
  *(_OWORD *)(a2 + 48) = v25;
  return result;
}

uint64_t sub_1DC1C3E80()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1DC1C3EA4@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_1DC0F6C9C(v1[3], v1[4], v1[5], 0, 1, a1);
}

uint64_t sub_1DC1C3EDC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1DC0F6C9C(*(_QWORD *)(v1 + 24), 0, 0, 0, 1, a1);
}

uint64_t type metadata accessor for WebViewControllerStyler()
{
  return objc_opt_self();
}

uint64_t sub_1DC1C3F38()
{
  return sub_1DC407CB4();
}

uint64_t sub_1DC1C3F5C()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  id v4;
  id v5;
  char v6;
  void *v7;
  id v8;
  id v9;
  uint64_t v10;

  v1 = *(void **)(v0 + 56);
  if (v1)
  {
    v2 = *(id *)(v0 + 56);
  }
  else
  {
    v2 = (id)*MEMORY[0x1E0DC4920];
    v1 = 0;
  }
  v3 = (void *)*MEMORY[0x1E0DC4900];
  v4 = v1;
  v5 = v3;
  v6 = sub_1DC4091E4();
  if ((v6 & 1) != 0)
    v7 = v2;
  else
    v7 = v5;
  if ((v6 & 1) != 0)
    v2 = v5;

  v8 = objc_msgSend((id)objc_opt_self(), sel_traitCollectionWithPreferredContentSizeCategory_, v2);
  sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FB00);
  v9 = v8;
  v10 = sub_1DC4092E0();

  return v10;
}

id sub_1DC1C4070()
{
  _QWORD *v0;
  uint64_t inited;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t);
  id v11;
  uint64_t v12;
  id v13;
  void *v14;
  void *v15;
  id v16;

  sub_1DC0FB194();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DC40C740;
  v2 = (void *)*MEMORY[0x1E0DC1138];
  *(_QWORD *)(inited + 32) = *MEMORY[0x1E0DC1138];
  swift_bridgeObjectRetain();
  v3 = v2;
  v4 = sub_1DC1C3F5C();
  v5 = sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FB00);
  *(_QWORD *)(inited + 40) = v4;
  v6 = (void *)*MEMORY[0x1E0DC1140];
  *(_QWORD *)(inited + 64) = v5;
  *(_QWORD *)(inited + 72) = v6;
  v7 = v0[5];
  v8 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v7);
  v9 = *(_QWORD *)(v8 + 16);
  v10 = *(uint64_t (**)(uint64_t, uint64_t))(v9 + 240);
  v11 = v6;
  v12 = v10(v7, v9);
  *(_QWORD *)(inited + 104) = sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FB30);
  *(_QWORD *)(inited + 80) = v12;
  sub_1DC0FA3C4(inited);
  v13 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  v14 = (void *)sub_1DC408A1C();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1DC0FB14C();
  v15 = (void *)sub_1DC408980();
  swift_bridgeObjectRelease();
  v16 = objc_msgSend(v13, sel_initWithString_attributes_, v14, v15);

  return v16;
}

id sub_1DC1C4204()
{
  _QWORD *v0;
  uint64_t inited;
  void *v2;
  void *v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  char v9;
  void *v10;
  id v11;
  id v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t, uint64_t);
  id v19;
  uint64_t v20;
  id v21;
  void *v22;
  void *v23;
  id v24;

  sub_1DC0FB194();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DC40C740;
  v2 = (void *)*MEMORY[0x1E0DC1138];
  *(_QWORD *)(inited + 32) = *MEMORY[0x1E0DC1138];
  v3 = (void *)v0[7];
  if (v3)
    v4 = (id)v0[7];
  else
    v4 = (id)*MEMORY[0x1E0DC4920];
  v5 = (void *)*MEMORY[0x1E0DC48C8];
  swift_bridgeObjectRetain();
  v6 = v2;
  v7 = v3;
  v8 = v5;
  v9 = sub_1DC4091E4();
  if ((v9 & 1) != 0)
    v10 = v4;
  else
    v10 = v8;
  if ((v9 & 1) != 0)
    v4 = v8;

  v11 = objc_msgSend((id)objc_opt_self(), sel_traitCollectionWithPreferredContentSizeCategory_, v4);
  v12 = objc_msgSend((id)objc_opt_self(), sel_preferredFontForTextStyle_compatibleWithTraitCollection_, *MEMORY[0x1E0DC4A88], v11);

  v13 = sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FB00);
  *(_QWORD *)(inited + 40) = v12;
  v14 = (void *)*MEMORY[0x1E0DC1140];
  *(_QWORD *)(inited + 64) = v13;
  *(_QWORD *)(inited + 72) = v14;
  v15 = v0[5];
  v16 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v15);
  v17 = *(_QWORD *)(v16 + 16);
  v18 = *(uint64_t (**)(uint64_t, uint64_t))(v17 + 248);
  v19 = v14;
  v20 = v18(v15, v17);
  *(_QWORD *)(inited + 104) = sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FB30);
  *(_QWORD *)(inited + 80) = v20;
  sub_1DC0FA3C4(inited);
  v21 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  v22 = (void *)sub_1DC408A1C();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1DC0FB14C();
  v23 = (void *)sub_1DC408980();
  swift_bridgeObjectRelease();
  v24 = objc_msgSend(v21, sel_initWithString_attributes_, v22, v23);

  return v24;
}

void sub_1DC1C4448(void *a1)
{
  uint64_t v1;
  id v3;
  void *v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  char v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  id v15;

  v3 = objc_msgSend(a1, sel_titleLabel);
  if (v3)
  {
    v4 = v3;
    v5 = *(void **)(v1 + 56);
    if (v5)
    {
      v6 = *(id *)(v1 + 56);
    }
    else
    {
      v6 = (id)*MEMORY[0x1E0DC4920];
      v5 = 0;
    }
    v7 = (void *)*MEMORY[0x1E0DC48C8];
    v8 = v5;
    v9 = v7;
    v10 = sub_1DC4091E4();
    if ((v10 & 1) != 0)
      v11 = v6;
    else
      v11 = v9;
    if ((v10 & 1) != 0)
      v6 = v9;

    v12 = objc_msgSend((id)objc_opt_self(), sel_traitCollectionWithPreferredContentSizeCategory_, v6);
    v13 = objc_msgSend((id)objc_opt_self(), sel_preferredFontForTextStyle_compatibleWithTraitCollection_, *MEMORY[0x1E0DC4A88], v12);

    objc_msgSend(v4, sel_setFont_, v13);
  }
  v14 = objc_msgSend(a1, sel_titleLabel);
  if (v14)
  {
    v15 = v14;
    objc_msgSend(v14, sel_setTextAlignment_, 1);

  }
}

id sub_1DC1C45B8()
{
  return sub_1DC1C4070();
}

id sub_1DC1C45D8()
{
  return sub_1DC1C4204();
}

uint64_t sub_1DC1C45F8(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  char *v23;
  void (*v24)(char *, uint64_t, uint64_t, __n128);
  int v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  char *v42;
  char *v43;
  char *v44;
  _QWORD v45[3];
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t ObjectType;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  char *v56;
  _OWORD v57[2];
  uint64_t v58;

  v3 = v2;
  v6 = sub_1DC401FFC();
  v7 = *(_QWORD *)(v6 - 8);
  v49 = v6;
  ObjectType = v7;
  MEMORY[0x1E0C80A78](v6);
  v48 = (char *)v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1DC4020E0();
  v51 = *(_QWORD *)(v9 - 8);
  v52 = v9;
  MEMORY[0x1E0C80A78](v9);
  v47 = (char *)v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC092F50(0, (unint64_t *)&unk_1EDB293C8, (void (*)(uint64_t))MEMORY[0x1E0D580A8]);
  MEMORY[0x1E0C80A78](v11);
  v56 = (char *)v45 - v12;
  v13 = sub_1DC402434();
  v55 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v54 = (char *)v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1DC401924();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)v45 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_1DC401C00();
  v20 = *(_QWORD *)(v19 - 8);
  v21 = MEMORY[0x1E0C80A78](v19);
  v23 = (char *)v45 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v20 + 16);
  v53 = a1;
  v24(v23, a1, v19, v21);
  v25 = (*(uint64_t (**)(char *, uint64_t))(v20 + 88))(v23, v19);
  if (v25 == *MEMORY[0x1E0D57118])
  {
    LODWORD(v52) = a2;
    (*(void (**)(char *, uint64_t))(v20 + 96))(v23, v19);
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v18, v23, v15);
    v26 = MEMORY[0x1DF0CAD78](v3 + 32);
    v27 = v55;
    if (v26)
    {
      v51 = *(_QWORD *)(v3 + 40);
      ObjectType = swift_getObjectType();
      v28 = v54;
      sub_1DC401918();
      sub_1DC401BF4();
      sub_1DC40190C();
      sub_1DC402134();
      swift_unknownObjectRelease();
      swift_release();
      sub_1DC092F14((uint64_t)v57, &qword_1EDB2ACD0, (void (*)(uint64_t))sub_1DC12E0E0);
      (*(void (**)(char *, uint64_t))(v27 + 8))(v28, v13);
    }
    v29 = v56;
    sub_1DC401918();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v29, 0, 1, v13);
    v30 = v3 + OBJC_IVAR____TtC8StocksUI24ArticleViewerCoordinator_currentArticle;
    swift_beginAccess();
    v31 = (uint64_t)v29;
LABEL_5:
    sub_1DC1C4DD0(v31, v30);
    return swift_endAccess();
  }
  if (v25 != *MEMORY[0x1E0D570F8] && v25 != *MEMORY[0x1E0D57108] && v25 == *MEMORY[0x1E0D57100])
  {
    (*(void (**)(char *, uint64_t))(v20 + 96))(v23, v19);
    v33 = v47;
    (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v47, v23, v52);
    v34 = v3;
    v35 = MEMORY[0x1DF0CAD78](v3 + 32);
    v36 = v13;
    v37 = v55;
    v38 = v49;
    v39 = ObjectType;
    v40 = v48;
    if (v35)
    {
      v45[2] = *(_QWORD *)(v34 + 40);
      v45[1] = swift_getObjectType();
      sub_1DC4020D4();
      v46 = v36;
      v41 = v54;
      sub_1DC401FF0();
      (*(void (**)(char *, uint64_t))(v39 + 8))(v40, v38);
      sub_1DC401BF4();
      v58 = 0;
      memset(v57, 0, sizeof(v57));
      sub_1DC402134();
      swift_unknownObjectRelease();
      v39 = ObjectType;
      swift_release();
      sub_1DC092F14((uint64_t)v57, &qword_1EDB2ACD0, (void (*)(uint64_t))sub_1DC12E0E0);
      v42 = v41;
      v36 = v46;
      (*(void (**)(char *, uint64_t))(v37 + 8))(v42, v46);
    }
    sub_1DC4020D4();
    v43 = v33;
    v44 = v56;
    sub_1DC401FF0();
    (*(void (**)(char *, uint64_t))(v39 + 8))(v40, v38);
    (*(void (**)(char *, uint64_t))(v51 + 8))(v43, v52);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v44, 0, 1, v36);
    v30 = v34 + OBJC_IVAR____TtC8StocksUI24ArticleViewerCoordinator_currentArticle;
    swift_beginAccess();
    v31 = (uint64_t)v44;
    goto LABEL_5;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v23, v19);
}

uint64_t sub_1DC1C4B08()
{
  uint64_t v0;

  sub_1DC148A20(v0 + 16);
  sub_1DC148A20(v0 + 32);
  sub_1DC092F14(v0 + OBJC_IVAR____TtC8StocksUI24ArticleViewerCoordinator_currentArticle, (unint64_t *)&unk_1EDB293C8, (void (*)(uint64_t))MEMORY[0x1E0D580A8]);
  return swift_deallocClassInstance();
}

uint64_t sub_1DC1C4B58()
{
  return type metadata accessor for ArticleViewerCoordinator();
}

uint64_t type metadata accessor for ArticleViewerCoordinator()
{
  uint64_t result;

  result = qword_1EDB27EF8;
  if (!qword_1EDB27EF8)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1DC1C4B9C()
{
  unint64_t v0;

  sub_1DC092F50(319, (unint64_t *)&unk_1EDB293C8, (void (*)(uint64_t))MEMORY[0x1E0D580A8]);
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t sub_1DC1C4C24()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_beginAccess();
  return MEMORY[0x1DF0CAD78](v1 + 16);
}

uint64_t sub_1DC1C4C6C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  swift_beginAccess();
  *(_QWORD *)(v4 + 24) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*sub_1DC1C4CD0(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = *v1;
  v3[5] = v4;
  swift_beginAccess();
  v5 = MEMORY[0x1DF0CAD78](v4 + 16);
  v6 = *(_QWORD *)(v4 + 24);
  v3[3] = v5;
  v3[4] = v6;
  return sub_1DC1C4D40;
}

void sub_1DC1C4D40(uint64_t a1, char a2)
{
  void *v3;

  v3 = *(void **)a1;
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)a1 + 40) + 24) = *(_QWORD *)(*(_QWORD *)a1 + 32);
  swift_unknownObjectWeakAssign();
  if ((a2 & 1) != 0)
  {
    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_unknownObjectRelease();
  }
  free(v3);
}

uint64_t sub_1DC1C4DB0(uint64_t a1, int a2)
{
  return sub_1DC1C45F8(a1, a2);
}

uint64_t sub_1DC1C4DD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1DC092F50(0, (unint64_t *)&unk_1EDB293C8, (void (*)(uint64_t))MEMORY[0x1E0D580A8]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC1C4E24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int v8;
  unsigned int *v9;
  uint64_t result;
  uint64_t v11;

  v0 = sub_1DC403AB4();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1DC401E64();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC401AE0();
  v8 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v7, v4);
  if (v8 == *MEMORY[0x1E0D57528])
  {
    v9 = (unsigned int *)MEMORY[0x1E0DADE98];
LABEL_8:
    (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *v9, v0);
    return sub_1DC403028();
  }
  if (v8 == *MEMORY[0x1E0D57520])
    goto LABEL_7;
  if (v8 == *MEMORY[0x1E0D57510])
  {
    v9 = (unsigned int *)MEMORY[0x1E0DADE88];
    goto LABEL_8;
  }
  if (v8 == *MEMORY[0x1E0D57518])
  {
LABEL_7:
    v9 = (unsigned int *)MEMORY[0x1E0DADE90];
    goto LABEL_8;
  }
  result = sub_1DC409838();
  __break(1u);
  return result;
}

uint64_t sub_1DC1C4FC8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  void *v47;
  uint64_t result;
  id v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  __int128 v71;
  uint64_t v72;
  _QWORD v73[6];

  v54 = a1;
  v1 = sub_1DC4010E4();
  v66 = *(_QWORD *)(v1 - 8);
  v67 = v1;
  v68 = *(_QWORD *)(v66 + 64);
  MEMORY[0x1E0C80A78](v1);
  v65 = (char *)&v50 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1DC406FDC();
  v4 = *(_QWORD *)(v3 - 8);
  v63 = v3;
  v64 = v4;
  MEMORY[0x1E0C80A78](v3);
  v62 = (char *)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1DC402F50();
  MEMORY[0x1E0C80A78](v6);
  v58 = (uint64_t)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = sub_1DC4011C8();
  v57 = *(_QWORD *)(v59 - 8);
  MEMORY[0x1E0C80A78](v59);
  v55 = (char *)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1DC402F44();
  v10 = *(_QWORD *)(v9 - 8);
  v60 = v9;
  v61 = v10;
  MEMORY[0x1E0C80A78](v9);
  v56 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = sub_1DC402EC0();
  v53 = *(_QWORD *)(v52 - 8);
  MEMORY[0x1E0C80A78](v52);
  v13 = (char *)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1DC403A60();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v50 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_1DC403A54();
  v51 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v50 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_1DC403AC0();
  v22 = *(_QWORD *)(v21 - 8);
  v23 = MEMORY[0x1E0C80A78](v21);
  v25 = (char *)&v50 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v22 + 104))(v25, *MEMORY[0x1E0DADEB0], v21, v23);
  v69 = sub_1DC4017EC();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v25, v21);
  v26 = *MEMORY[0x1E0DADDF0];
  v27 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 104);
  v27(v17, v26, v14);
  v28 = v54;
  sub_1DC4010B4();
  sub_1DC403A3C();
  sub_1DC080808((unint64_t *)&qword_1EDB29950, (uint64_t (*)(uint64_t))MEMORY[0x1E0DADDD0], MEMORY[0x1E0DADDB0]);
  sub_1DC401870();
  (*(void (**)(char *, uint64_t))(v51 + 8))(v20, v18);
  v27(v17, v26, v14);
  sub_1DC402EB4();
  sub_1DC080808(&qword_1EDB29730, (uint64_t (*)(uint64_t))MEMORY[0x1E0DACCD8], MEMORY[0x1E0DACCC8]);
  v29 = v52;
  sub_1DC401870();
  (*(void (**)(char *, uint64_t))(v53 + 8))(v13, v29);
  v30 = v28;
  sub_1DC4010B4();
  v31 = v55;
  v32 = v30;
  sub_1DC401078();
  sub_1DC23A0A0(v58);
  (*(void (**)(char *, uint64_t))(v57 + 8))(v31, v59);
  sub_1DC4010CC();
  v33 = v56;
  sub_1DC402F2C();
  sub_1DC080808(&qword_1EDB29738, (uint64_t (*)(uint64_t))MEMORY[0x1E0DACD70], MEMORY[0x1E0DACD58]);
  v34 = v60;
  sub_1DC401870();
  (*(void (**)(char *, uint64_t))(v61 + 8))(v33, v34);
  v35 = v70;
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v70 + 64), *(_QWORD *)(v70 + 88));
  sub_1DC4070F0();
  __swift_project_boxed_opaque_existential_1(&v71, v72);
  v73[0] = 0x2D52454B434954;
  v73[1] = 0xE700000000000000;
  sub_1DC4010B4();
  sub_1DC408B48();
  swift_bridgeObjectRelease();
  v36 = v62;
  sub_1DC406FD0();
  sub_1DC080808(&qword_1EDB2AC78, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52540], MEMORY[0x1E0D52538]);
  v37 = v63;
  sub_1DC4070FC();
  (*(void (**)(char *, uint64_t))(v64 + 8))(v36, v37);
  sub_1DC097DD0(&v71, (uint64_t)v73);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v35 + 16), *(_QWORD *)(v35 + 40));
  type metadata accessor for StockFeedViewController();
  sub_1DC0824D4((uint64_t)v73, (uint64_t)&v71);
  v39 = v65;
  v38 = v66;
  v40 = v67;
  (*(void (**)(char *, uint64_t, uint64_t))(v66 + 16))(v65, v32, v67);
  v41 = v38;
  v42 = (*(unsigned __int8 *)(v38 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80);
  v43 = (v68 + v42 + 7) & 0xFFFFFFFFFFFFFFF8;
  v44 = swift_allocObject();
  sub_1DC097DD0(&v71, v44 + 16);
  v45 = v44 + v42;
  v46 = v69;
  (*(void (**)(unint64_t, char *, uint64_t))(v41 + 32))(v45, v39, v40);
  *(_QWORD *)(v44 + v43) = v46;
  swift_retain();
  v47 = (void *)sub_1DC4025E4();
  result = swift_release();
  if (v47)
  {
    v49 = v47;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v73);

    swift_release();
    return (uint64_t)v49;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC1C56DC(_QWORD *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC12E0E0();
  sub_1DC402518();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4010E4();
  sub_1DC402518();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4018AC();
  return sub_1DC40250C();
}

uint64_t type metadata accessor for StockFeedModule()
{
  return objc_opt_self();
}

uint64_t sub_1DC1C57D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1DC4010E4();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DC1C5868(_QWORD *a1)
{
  sub_1DC4010E4();
  return sub_1DC1C56DC(a1);
}

uint64_t sub_1DC1C58BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  __n128 v32;
  uint64_t v33;
  char *v34;
  uint64_t (*v35)(void);
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v41;
  void (*v42)(_QWORD *, _QWORD);
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t (*v46)(void);
  uint64_t (*v47)(void);
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(_QWORD *, _QWORD);
  uint64_t v56;
  char *v57;
  char *v58;
  char *v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  void (*v68)(char *, uint64_t, uint64_t);
  char *v69;
  unint64_t v70;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v72;
  unint64_t v73;
  char *v74;
  unint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  void (*v79)(char *, unint64_t, uint64_t, __n128);
  char *v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  char *v85;
  uint64_t v86;
  char *v87;
  char *v88;
  char *v89;
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  char *v94;
  void (*v95)(char *);
  uint64_t v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  _QWORD v102[4];
  uint64_t v103;

  v90 = type metadata accessor for StockSearchModel();
  MEMORY[0x1E0C80A78](v90);
  v89 = (char *)&v76 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  v1 = type metadata accessor for StockViewModel();
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v76 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC104530();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v76 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1DC4010E4();
  v98 = *(_QWORD *)(v7 - 8);
  v99 = v7;
  MEMORY[0x1E0C80A78](v7);
  v92 = (char *)&v76 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v85 = (char *)&v76 - v10;
  sub_1DC0D95F0(0);
  v86 = v11;
  v101 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v100 = (char *)&v76 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v91 = (char *)&v76 - v14;
  sub_1DC1C613C();
  v82 = v15;
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v76 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC187FFC(0, (unint64_t *)&qword_1EDB41DF0, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60]);
  v19 = v18;
  v96 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v94 = (char *)&v76 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v84 = (char *)&v76 - v22;
  MEMORY[0x1E0C80A78](v23);
  v83 = (char *)&v76 - v24;
  sub_1DC187FFC(0, (unint64_t *)&qword_1EDB2AB88, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790]);
  v26 = v25;
  v27 = *(_QWORD *)(v25 - 8);
  MEMORY[0x1E0C80A78](v25);
  v29 = (char *)&v76 - v28;
  sub_1DC1C6214();
  v31 = v30;
  v32 = MEMORY[0x1E0C80A78](v30);
  v34 = (char *)&v76 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103 = MEMORY[0x1E0DEE9D8];
  v81 = v27;
  v79 = *(void (**)(char *, unint64_t, uint64_t, __n128))(v27 + 16);
  v79(v29, v97, v26, v32);
  v35 = MEMORY[0x1E0DBC790];
  sub_1DC1C61D4(&qword_1EDB42A30, (unint64_t *)&qword_1EDB2AB88, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790], MEMORY[0x1E0DBC7C0]);
  v80 = v29;
  sub_1DC408BF0();
  v36 = &v34[*(int *)(v31 + 36)];
  v37 = sub_1DC1C61D4(&qword_1EDB41E20, (unint64_t *)&qword_1EDB2AB88, (uint64_t (*)(uint64_t, _QWORD *))v35, MEMORY[0x1E0DBC7C8]);
  v38 = *(_QWORD *)v36;
  v39 = v37;
  sub_1DC408ED8();
  if (v38 != v102[0])
  {
    v88 = v17;
    v78 = v26;
    v87 = v34;
    v77 = v36;
    v76 = v39;
    do
    {
      v42 = (void (*)(_QWORD *, _QWORD))sub_1DC408EF0();
      v43 = v96;
      v95 = *(void (**)(char *))(v96 + 16);
      v95(v83);
      v42(v102, 0);
      v44 = v80;
      ((void (*)(char *, char *, uint64_t))v79)(v80, v34, v26);
      sub_1DC408EE4();
      (*(void (**)(char *, uint64_t))(v81 + 8))(v44, v26);
      v45 = v84;
      (*(void (**)(char *, char *, uint64_t))(v43 + 32))(v84, v83, v19);
      ((void (*)(char *, char *, uint64_t))v95)(v94, v45, v19);
      v46 = MEMORY[0x1E0DB7B60];
      sub_1DC1C61D4(&qword_1F034DDF0, (unint64_t *)&qword_1EDB41DF0, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60], MEMORY[0x1E0DB7B90]);
      sub_1DC408BF0();
      v47 = v46;
      v48 = &v17[*(int *)(v82 + 36)];
      v49 = sub_1DC1C61D4(&qword_1F034C448, (unint64_t *)&qword_1EDB41DF0, (uint64_t (*)(uint64_t, _QWORD *))v47, MEMORY[0x1E0DB7B98]);
      v50 = *(_QWORD *)v48;
      sub_1DC408ED8();
      v97 = MEMORY[0x1E0DEE9D8];
      v51 = v86;
      if (v50 != v102[0])
      {
        v97 = MEMORY[0x1E0DEE9D8];
        v93 = v49;
        do
        {
          v53 = (uint64_t)v6;
          v54 = (uint64_t)v3;
          v55 = (void (*)(_QWORD *, _QWORD))sub_1DC408EF0();
          v56 = v101;
          v57 = v91;
          (*(void (**)(char *))(v101 + 16))(v91);
          v55(v102, 0);
          v58 = v94;
          ((void (*)(char *, char *, uint64_t))v95)(v94, v17, v19);
          sub_1DC408EE4();
          (*(void (**)(char *, uint64_t))(v96 + 8))(v58, v19);
          (*(void (**)(char *, char *, uint64_t))(v56 + 32))(v100, v57, v51);
          v59 = v89;
          sub_1DC404354();
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            sub_1DC1C62AC();
            v61 = &v59[*(int *)(v60 + 48)];
            v62 = (uint64_t)v59;
            v3 = (char *)v54;
            sub_1DC0F0F38(v62, v54);
            v63 = sub_1DC40124C();
            (*(void (**)(char *, uint64_t))(*(_QWORD *)(v63 - 8) + 8))(v61, v63);
          }
          else
          {
            v64 = (uint64_t)v59;
            v3 = (char *)v54;
            sub_1DC0F0F38(v64, v54);
          }
          v66 = v98;
          v65 = v99;
          v6 = (char *)v53;
          (*(void (**)(uint64_t, char *, uint64_t))(v98 + 16))(v53, v3, v99);
          sub_1DC0926D8((uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for StockViewModel);
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v66 + 56))(v53, 0, 1, v65);
          (*(void (**)(char *, uint64_t))(v101 + 8))(v100, v51);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v66 + 48))(v53, 1, v65) == 1)
          {
            sub_1DC0926D8(v53, (uint64_t (*)(_QWORD))sub_1DC104530);
            v34 = v87;
            v17 = v88;
          }
          else
          {
            v67 = v3;
            v68 = *(void (**)(char *, uint64_t, uint64_t))(v66 + 32);
            v69 = v85;
            v68(v85, v53, v65);
            v68(v92, (uint64_t)v69, v65);
            v70 = v97;
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            v34 = v87;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
              v70 = sub_1DC0BA930(0, *(_QWORD *)(v70 + 16) + 1, 1, v70);
            v73 = *(_QWORD *)(v70 + 16);
            v72 = *(_QWORD *)(v70 + 24);
            if (v73 >= v72 >> 1)
              v70 = sub_1DC0BA930(v72 > 1, v73 + 1, 1, v70);
            v74 = v92;
            *(_QWORD *)(v70 + 16) = v73 + 1;
            v75 = (*(unsigned __int8 *)(v98 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v98 + 80);
            v97 = v70;
            v68((char *)(v70 + v75 + *(_QWORD *)(v98 + 72) * v73), (uint64_t)v74, v99);
            v3 = v67;
            v51 = v86;
            v17 = v88;
          }
          v52 = *(_QWORD *)v48;
          sub_1DC408ED8();
        }
        while (v52 != v102[0]);
      }
      sub_1DC0926D8((uint64_t)v17, (uint64_t (*)(_QWORD))sub_1DC1C613C);
      (*(void (**)(char *, uint64_t))(v96 + 8))(v84, v19);
      sub_1DC0CE1D4(v97);
      v41 = *(_QWORD *)v77;
      v26 = v78;
      sub_1DC408ED8();
    }
    while (v41 != v102[0]);
  }
  sub_1DC0926D8((uint64_t)v34, (uint64_t (*)(_QWORD))sub_1DC1C6214);
  return v103;
}

void sub_1DC1C613C()
{
  uint64_t (*v0)(void);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1F034DDE8)
  {
    v0 = MEMORY[0x1E0DB7B60];
    sub_1DC187FFC(255, (unint64_t *)&qword_1EDB41DF0, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60]);
    sub_1DC1C61D4(&qword_1F034C448, (unint64_t *)&qword_1EDB41DF0, (uint64_t (*)(uint64_t, _QWORD *))v0, MEMORY[0x1E0DB7B98]);
    v1 = sub_1DC409814();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1F034DDE8);
  }
}

uint64_t sub_1DC1C61D4(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_1DC187FFC(255, a2, a3);
    result = MEMORY[0x1DF0CAB8C](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1DC1C6214()
{
  uint64_t (*v0)(void);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1EDB42A28)
  {
    v0 = MEMORY[0x1E0DBC790];
    sub_1DC187FFC(255, (unint64_t *)&qword_1EDB2AB88, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790]);
    sub_1DC1C61D4(&qword_1EDB41E20, (unint64_t *)&qword_1EDB2AB88, (uint64_t (*)(uint64_t, _QWORD *))v0, MEMORY[0x1E0DBC7C8]);
    v1 = sub_1DC409814();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1EDB42A28);
  }
}

void sub_1DC1C62AC()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1F034D290)
  {
    type metadata accessor for StockViewModel();
    sub_1DC40124C();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1F034D290);
  }
}

uint64_t dispatch thunk of DataRefreshManagerType.refresh()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of DataRefreshManagerType.add(refreshHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of DataRefreshManagerType.remove(refreshHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t dispatch thunk of RefreshHandler.refreshData()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_1DC1C633C()
{
  uint64_t v0;
  unint64_t *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t i;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t j;
  uint64_t v12;
  uint64_t v13;
  uint64_t ObjectType;
  unint64_t v15;

  v1 = (unint64_t *)(v0 + 16);
  swift_beginAccess();
  v2 = *(_QWORD *)(v0 + 16);
  v15 = MEMORY[0x1E0DEE9D8];
  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    result = sub_1DC409850();
    v3 = result;
    if (result)
      goto LABEL_3;
LABEL_14:
    swift_bridgeObjectRelease();
    v8 = MEMORY[0x1E0DEE9D8];
    goto LABEL_15;
  }
  v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = swift_bridgeObjectRetain();
  if (!v3)
    goto LABEL_14;
LABEL_3:
  if (v3 < 1)
  {
    __break(1u);
    goto LABEL_29;
  }
  for (i = 0; i != v3; ++i)
  {
    if ((v2 & 0xC000000000000001) != 0)
    {
      v6 = MEMORY[0x1DF0C9FBC](i, v2);
    }
    else
    {
      v6 = *(_QWORD *)(v2 + 8 * i + 32);
      swift_retain();
    }
    v7 = MEMORY[0x1DF0CAD78](v6 + 16);
    swift_unknownObjectRelease();
    if (v7)
    {
      sub_1DC40979C();
      sub_1DC4097C0();
      sub_1DC4097CC();
      sub_1DC4097A8();
    }
    else
    {
      swift_release();
    }
  }
  swift_bridgeObjectRelease();
  v8 = v15;
LABEL_15:
  *v1 = v8;
  swift_bridgeObjectRelease();
  v9 = *v1;
  if (!(v9 >> 62))
  {
    v10 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain_n();
    if (v10)
      goto LABEL_17;
    return swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRetain_n();
  result = sub_1DC409850();
  v10 = result;
  if (!result)
    return swift_bridgeObjectRelease_n();
LABEL_17:
  if (v10 >= 1)
  {
    for (j = 0; j != v10; ++j)
    {
      if ((v9 & 0xC000000000000001) != 0)
      {
        v12 = MEMORY[0x1DF0C9FBC](j, v9);
      }
      else
      {
        v12 = *(_QWORD *)(v9 + 8 * j + 32);
        swift_retain();
      }
      if (MEMORY[0x1DF0CAD78](v12 + 16))
      {
        v13 = *(_QWORD *)(v12 + 24);
        ObjectType = swift_getObjectType();
        (*(void (**)(uint64_t, uint64_t))(v13 + 8))(ObjectType, v13);
        swift_release();
        swift_unknownObjectRelease();
      }
      else
      {
        swift_release();
      }
    }
    return swift_bridgeObjectRelease_n();
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_1DC1C658C()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1DC1C65B0()
{
  return sub_1DC1C633C();
}

uint64_t sub_1DC1C65D0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  v3 = *v1;
  swift_beginAccess();
  swift_unknownObjectRetain();
  v4 = swift_bridgeObjectRetain();
  v5 = sub_1DC1C6688(v4, a1);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  *(_QWORD *)(v3 + 16) = v5;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DC1C6664()
{
  uint64_t v0;

  sub_1DC148A20(v0 + 16);
  return swift_deallocClassInstance();
}

uint64_t sub_1DC1C6688(unint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t i;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v11;

  v11 = MEMORY[0x1E0DEE9D8];
  if (a1 >> 62)
  {
LABEL_17:
    v3 = sub_1DC409850();
    if (v3)
      goto LABEL_3;
  }
  else
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v3)
    {
LABEL_3:
      for (i = 0; ; ++i)
      {
        if ((a1 & 0xC000000000000001) != 0)
        {
          v5 = MEMORY[0x1DF0C9FBC](i, a1);
          v6 = i + 1;
          if (__OFADD__(i, 1))
          {
LABEL_14:
            __break(1u);
            return v11;
          }
        }
        else
        {
          if (i >= *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            goto LABEL_17;
          }
          v5 = *(_QWORD *)(a1 + 8 * i + 32);
          swift_retain();
          v6 = i + 1;
          if (__OFADD__(i, 1))
            goto LABEL_14;
        }
        v7 = MEMORY[0x1DF0CAD78](v5 + 16);
        if (v7 && (v8 = v7, swift_unknownObjectRelease(), v8 == a2))
        {
          swift_release();
        }
        else
        {
          sub_1DC40979C();
          sub_1DC4097C0();
          sub_1DC4097CC();
          sub_1DC4097A8();
        }
        if (v6 == v3)
          return v11;
      }
    }
  }
  return MEMORY[0x1E0DEE9D8];
}

uint64_t sub_1DC1C67E8()
{
  swift_getObjectType();
  sub_1DC4077B0();
  sub_1DC1C8DB0();
  sub_1DC4090C4();
  sub_1DC1C8D38();
  sub_1DC4090C4();
  sub_1DC1C8CE4();
  sub_1DC4090C4();
  sub_1DC1C8ACC();
  sub_1DC4090C4();
  sub_1DC1C88A4();
  sub_1DC4090C4();
  sub_1DC1317D8();
  sub_1DC4090C4();
  sub_1DC1C85AC();
  return sub_1DC4090C4();
}

void sub_1DC1C68D8(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  void (*v38)(id, uint64_t, uint64_t);
  char *v39;
  _QWORD v40[2];
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  char *v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t *boxed_opaque_existential_1;
  void *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79[5];
  _QWORD v80[3];
  uint64_t v81;
  uint64_t v82;

  v78 = a4;
  v76 = a2;
  v65 = a1;
  v41 = sub_1DC404B58();
  v43 = *(_QWORD *)(v41 - 8);
  MEMORY[0x1E0C80A78](v41);
  v40[1] = (char *)v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v42 = (char *)v40 - v8;
  v46 = sub_1DC4054C4();
  v44 = *(_QWORD *)(v46 - 8);
  MEMORY[0x1E0C80A78](v46);
  v45 = (char *)v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = sub_1DC400280();
  v57 = *(_QWORD *)(v64 - 8);
  MEMORY[0x1E0C80A78](v64);
  v54 = v10;
  v72 = (char *)v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC142200();
  v63 = v11;
  v53 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v51 = v12;
  v62 = (char *)v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1DC40790C();
  v67 = *(_QWORD *)(v13 - 8);
  v68 = v13;
  MEMORY[0x1E0C80A78](v13);
  v60 = (char *)v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v66 = (char *)v40 - v16;
  v17 = sub_1DC407B04();
  v70 = *(_QWORD *)(v17 - 8);
  v71 = v17;
  MEMORY[0x1E0C80A78](v17);
  v73 = (char *)v40 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for StockFeedEarningsViewModel();
  v55 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v58 = (char *)v40 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = v20;
  MEMORY[0x1E0C80A78](v21);
  v59 = (char *)v40 - v22;
  v23 = type metadata accessor for QuoteDetailViewModel();
  v49 = *(_QWORD *)(v23 - 8);
  v24 = *(_QWORD *)(v49 + 64);
  MEMORY[0x1E0C80A78](v23);
  v50 = (char *)v40 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v25);
  v52 = (char *)v40 - v26;
  v27 = type metadata accessor for StockChartModel();
  MEMORY[0x1E0C80A78](v27);
  v48 = (char *)v40 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = type metadata accessor for StockFeedMastheadViewLayoutAttributes();
  MEMORY[0x1E0C80A78](v29);
  v47 = (char *)v40 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = type metadata accessor for StockFeedMastheadModel();
  MEMORY[0x1E0C80A78](v31);
  v69 = (char *)v40 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = type metadata accessor for StockFeedLayoutModel();
  MEMORY[0x1E0C80A78](v33);
  v77 = v4;
  swift_beginAccess();
  v61 = v4 + 32;
  sub_1DC0824D4(v4 + 32, (uint64_t)v80);
  v34 = v81;
  v35 = v82;
  __swift_project_boxed_opaque_existential_1(v80, v81);
  v75 = a3;
  v36 = objc_msgSend(a3, sel_traitCollection);
  v37 = *(_QWORD *)(v35 + 8);
  v38 = *(void (**)(id, uint64_t, uint64_t))(v37 + 8);
  v79[3] = v34;
  v79[4] = v35;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v79);
  v38(v36, v34, v37);

  __swift_destroy_boxed_opaque_existential_1((uint64_t)v80);
  sub_1DC142304();
  sub_1DC404DE0();
  v39 = (char *)&loc_1DC1C6D34 + *((int *)qword_1DC1C7F10 + swift_getEnumCaseMultiPayload());
  __asm { BR              X10 }
}

id sub_1DC1C6D44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t);
  id v11;
  void *v12;
  char *v13;

  sub_1DC1426A0();
  v5 = v1 + *(int *)(v4 + 48);
  v6 = *(_QWORD *)(v0 + 240);
  sub_1DC092ED0(v1, v6, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedMastheadModel);
  v7 = *(_QWORD *)(v0 + 64);
  sub_1DC092ED0(v5, v7, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedMastheadViewLayoutAttributes);
  sub_1DC1C8DB0();
  v8 = (void *)sub_1DC4090AC();
  v9 = *(_QWORD *)(v3 + 16);
  v10 = *(uint64_t (**)(uint64_t, uint64_t))(v9 + 72);
  v11 = v8;
  v12 = (void *)v10(v2, v9);
  objc_msgSend(v11, sel_setBackgroundColor_, v12);

  v13 = (char *)sub_1DC404C30();
  sub_1DC237694(v6, v7, v13);

  sub_1DC0926D8(v7, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedMastheadViewLayoutAttributes);
  sub_1DC0926D8(v6, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedMastheadModel);
  __swift_destroy_boxed_opaque_existential_1(v0 + 440);
  return v11;
}

uint64_t sub_1DC1C7F30(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    if (MEMORY[0x1DF0CAD78](result + 16))
    {
      v4 = type metadata accessor for QuoteDetailViewModel();
      sub_1DC20C148(a2 + *(int *)(v4 + 20));
      swift_release();
      return swift_unknownObjectRelease();
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_1DC1C7FC4(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    if (MEMORY[0x1DF0CAD78](result + 16))
    {
      v4 = type metadata accessor for StockFeedEarningsViewModel();
      sub_1DC20C3D0(a2 + *(int *)(v4 + 20), *(_QWORD *)(a2 + *(int *)(v4 + 32)), *(_QWORD *)(a2 + *(int *)(v4 + 32) + 8));
      swift_release();
      return swift_unknownObjectRelease();
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_1DC1C8068(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;

  v6 = sub_1DC407C60();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC4074BC();
  if ((*(unsigned int (**)(char *, uint64_t))(v7 + 88))(v9, v6) != *MEMORY[0x1E0D5CD08])
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  (*(void (**)(char *, uint64_t))(v7 + 96))(v9, v6);
  v10 = sub_1DC407E1C();
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t))(v11 + 88))(v9, v10) != *MEMORY[0x1E0D5D5B0])
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v9, v10);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    if (MEMORY[0x1DF0CAD78](result + 16))
    {
      sub_1DC20C728(a3, a4);
      swift_release();
      return swift_unknownObjectRelease();
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_1DC1C81DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    if (MEMORY[0x1DF0CAD78](result + 16))
    {
      sub_1DC20C728(a2, a3);
      swift_release();
      return swift_unknownObjectRelease();
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_1DC1C8270(uint64_t a1, void (*a2)(void))
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    if (MEMORY[0x1DF0CAD78](result + 16))
    {
      a2();
      swift_release();
      return swift_unknownObjectRelease();
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_1DC1C82F4()
{
  uint64_t v0;

  sub_1DC148A20(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 168);
  swift_unknownObjectRelease();

  __swift_destroy_boxed_opaque_existential_1(v0 + 232);
  return v0;
}

uint64_t sub_1DC1C8368()
{
  sub_1DC1C82F4();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for StockFeedBlueprintViewCellProvider()
{
  return objc_opt_self();
}

uint64_t sub_1DC1C83A8()
{
  return sub_1DC1C67E8();
}

void sub_1DC1C83CC(uint64_t a1@<X0>, uint64_t a2@<X1>, void **a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v6;

  sub_1DC1C68D8(a1, a2, *a3, a4);
  *a5 = v6;
}

uint64_t sub_1DC1C83F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v12[3];
  uint64_t v13;
  uint64_t v14;

  swift_beginAccess();
  sub_1DC0824D4(v2 + 32, (uint64_t)v12);
  v4 = v13;
  v5 = v14;
  __swift_project_boxed_opaque_existential_1(v12, v13);
  v6 = *(_QWORD *)(v5 + 8);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 8);
  v10 = v4;
  v11 = v5;
  __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v9);
  v7(a2, v4, v6);
  swift_beginAccess();
  __swift_destroy_boxed_opaque_existential_1(v2 + 32);
  sub_1DC097DD0(&v9, v2 + 32);
  swift_endAccess();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  swift_getObjectType();
  sub_1DC405DF4();
  swift_getObjectType();
  sub_1DC405DF4();
  swift_getObjectType();
  sub_1DC405DF4();
  swift_getObjectType();
  sub_1DC405DF4();
  swift_getObjectType();
  return sub_1DC405DF4();
}

uint64_t sub_1DC1C8580()
{
  return sub_1DC080808(&qword_1EDB32160, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedLayoutModel, (uint64_t)&unk_1DC413950);
}

void sub_1DC1C85AC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB29F90)
  {
    type metadata accessor for BilingualFeedPromptView();
    sub_1DC080808(&qword_1EDB34468, (uint64_t (*)(uint64_t))type metadata accessor for BilingualFeedPromptView, (uint64_t)&unk_1DC418260);
    v0 = sub_1DC404C3C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB29F90);
  }
}

uint64_t sub_1DC1C8624()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1DC1C8648()
{
  uint64_t v0;

  return sub_1DC1C8270(v0, (void (*)(void))sub_1DC20C8D0);
}

uint64_t sub_1DC1C8668()
{
  uint64_t v0;

  return sub_1DC1C8270(v0, (void (*)(void))sub_1DC20C8EC);
}

uint64_t sub_1DC1C868C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_1DC142200();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v4 + 64);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(sub_1DC400280() - 8) + 80);
  return sub_1DC1C8068(a1, *(_QWORD *)(v1 + 16), v1 + v5, v1 + ((v5 + v6 + v7) & ~v7));
}

uint64_t sub_1DC1C86F8()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocObject();
}

void sub_1DC1C871C()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EDB41E08)
  {
    sub_1DC404B58();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EDB41E08);
  }
}

uint64_t objectdestroy_4Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;

  sub_1DC142200();
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v3 + 64);
  v6 = sub_1DC400280();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = (v4 + v5 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v0 + v4, v2);
  (*(void (**)(unint64_t, uint64_t))(v7 + 8))(v0 + v8, v6);
  return swift_deallocObject();
}

uint64_t sub_1DC1C8840()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1DC142200();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = *(unsigned __int8 *)(*(_QWORD *)(sub_1DC400280() - 8) + 80);
  return sub_1DC1C81DC(*(_QWORD *)(v0 + 16), v0 + v3, v0 + ((v3 + v4 + v5) & ~v5));
}

void sub_1DC1C88A4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB29F80)
  {
    type metadata accessor for StockFeedEarningsView();
    sub_1DC080808((unint64_t *)&unk_1EDB33100, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedEarningsView, (uint64_t)&unk_1DC426F5C);
    v0 = sub_1DC404C3C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB29F80);
  }
}

uint64_t sub_1DC1C891C()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  unsigned int (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v1 = (int *)type metadata accessor for StockFeedEarningsViewModel();
  v2 = *(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80);
  swift_release();
  v3 = v0 + ((v2 + 24) & ~v2);
  v4 = sub_1DC4010E4();
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(v3, v4);
  v6 = v3 + v1[5];
  v5(v6, v4);
  v7 = (int *)type metadata accessor for StockEarningsModel();
  v8 = v6 + v7[5];
  v9 = sub_1DC3FFFEC();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
  v11(v8, v9);
  v12 = v6 + v7[6];
  v13 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  if (!v13(v12, 1, v9))
    v11(v12, v9);
  v14 = v6 + v7[7];
  v15 = sub_1DC400220();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14, v15);
  v11(v3 + v1[6], v9);
  v16 = v3 + v1[7];
  if (!v13(v16, 1, v9))
    v11(v16, v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1DC1C8AB8()
{
  return sub_1DC1C8C90((uint64_t (*)(_QWORD))type metadata accessor for StockFeedEarningsViewModel, sub_1DC1C7FC4);
}

void sub_1DC1C8ACC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB29F70)
  {
    type metadata accessor for QuoteDetailView();
    sub_1DC080808(&qword_1EDB2E210, (uint64_t (*)(uint64_t))type metadata accessor for QuoteDetailView, (uint64_t)&unk_1DC425424);
    v0 = sub_1DC404C3C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB29F70);
  }
}

uint64_t sub_1DC1C8B44()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = (int *)type metadata accessor for QuoteDetailViewModel();
  v2 = *(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80);
  v3 = (v2 + 24) & ~v2;
  swift_release();
  v4 = v0 + v3;
  v5 = sub_1DC401030();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v0 + v3, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v3, v5);
  v7 = v4 + v1[5];
  v8 = sub_1DC400370();
  v9 = *(_QWORD *)(v8 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  v10 = v4 + v1[6];
  swift_bridgeObjectRelease();

  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1DC1C8C7C()
{
  return sub_1DC1C8C90((uint64_t (*)(_QWORD))type metadata accessor for QuoteDetailViewModel, sub_1DC1C7F30);
}

uint64_t sub_1DC1C8C90(uint64_t (*a1)(_QWORD), uint64_t (*a2)(_QWORD, uint64_t))
{
  uint64_t v2;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(a1(0) - 8) + 80);
  return a2(*(_QWORD *)(v2 + 16), v2 + ((v3 + 24) & ~v3));
}

void sub_1DC1C8CE4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB29B30)
  {
    type metadata accessor for StockChartViewController(255);
    v0 = sub_1DC404078();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB29B30);
  }
}

void sub_1DC1C8D38()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB29F78)
  {
    type metadata accessor for StockFeedPriceView();
    sub_1DC080808(qword_1EDB30890, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedPriceView, (uint64_t)&unk_1DC41772C);
    v0 = sub_1DC404C3C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB29F78);
  }
}

void sub_1DC1C8DB0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB29F88)
  {
    type metadata accessor for StockFeedMastheadView();
    sub_1DC080808(&qword_1EDB33158, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedMastheadView, (uint64_t)&unk_1DC4181BC);
    v0 = sub_1DC404C3C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB29F88);
  }
}

id StockActivityItemsConfiguration.__allocating_init(stock:quote:)(char *a1, uint64_t a2)
{
  objc_class *v2;
  objc_class *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t);
  objc_class *v15;
  char *v16;
  id v17;
  void (*v18)(char *, uint64_t);
  void *v19;
  id v20;
  id v22[2];
  objc_super v23;

  v3 = v2;
  sub_1DC089DA4(0, &qword_1EDB28DC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF040], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v22 - v7;
  v9 = sub_1DC4010E4();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22[0] = objc_allocWithZone(v3);
  sub_1DC0E7820();
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1DC40FA60;
  v14 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v14(v12, (uint64_t)a1, v9);
  sub_1DC0F01B0(a2, (uint64_t)v8);
  v15 = (objc_class *)type metadata accessor for StockShareActivityItemSource();
  v16 = (char *)objc_allocWithZone(v15);
  v14(&v16[OBJC_IVAR____TtC8StocksUI28StockShareActivityItemSource_stock], (uint64_t)v12, v9);
  sub_1DC0F01B0((uint64_t)v8, (uint64_t)&v16[OBJC_IVAR____TtC8StocksUI28StockShareActivityItemSource_quote]);
  v23.receiver = v16;
  v23.super_class = v15;
  v17 = objc_msgSendSuper2(&v23, sel_init);
  sub_1DC1C9068((uint64_t)v8);
  v18 = *(void (**)(char *, uint64_t))(v10 + 8);
  v18(v12, v9);
  *(_QWORD *)(v13 + 32) = v17;
  v22[1] = (id)v13;
  sub_1DC408CF8();
  sub_1DC0995E8(0, &qword_1EDB41D00);
  v19 = (void *)sub_1DC408CC8();
  swift_bridgeObjectRelease();
  v20 = objc_msgSend(v22[0], sel_initNAWithActivityItemSources_, v19);

  sub_1DC1C9068(a2);
  v18(a1, v9);
  return v20;
}

uint64_t type metadata accessor for StockShareActivityItemSource()
{
  uint64_t result;

  result = qword_1EDB41538;
  if (!qword_1EDB41538)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1DC1C9068(uint64_t a1)
{
  uint64_t v2;

  sub_1DC089DA4(0, &qword_1EDB28DC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF040], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id StockActivityItemsConfiguration.__allocating_init(objects:)()
{
  objc_class *v0;
  id v1;
  void *v2;
  id v3;

  v1 = objc_allocWithZone(v0);
  sub_1DC0995E8(0, &qword_1F034DDF8);
  v2 = (void *)sub_1DC408CC8();
  swift_bridgeObjectRelease();
  v3 = objc_msgSend(v1, sel_initWithObjects_, v2);

  return v3;
}

id StockActivityItemsConfiguration.init(objects:)()
{
  void *v0;
  objc_class *ObjectType;
  void *v2;
  id v3;
  objc_super v5;

  ObjectType = (objc_class *)swift_getObjectType();
  sub_1DC0995E8(0, &qword_1F034DDF8);
  v2 = (void *)sub_1DC408CC8();
  swift_bridgeObjectRelease();
  v5.receiver = v0;
  v5.super_class = ObjectType;
  v3 = objc_msgSendSuper2(&v5, sel_initWithObjects_, v2);

  return v3;
}

id StockActivityItemsConfiguration.__allocating_init(itemProviders:)()
{
  objc_class *v0;
  id v1;
  void *v2;
  id v3;

  v1 = objc_allocWithZone(v0);
  sub_1DC1C92D4();
  v2 = (void *)sub_1DC408CC8();
  swift_bridgeObjectRelease();
  v3 = objc_msgSend(v1, sel_initWithItemProviders_, v2);

  return v3;
}

unint64_t sub_1DC1C92D4()
{
  unint64_t result;

  result = qword_1F034DE00;
  if (!qword_1F034DE00)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1F034DE00);
  }
  return result;
}

id StockActivityItemsConfiguration.init(itemProviders:)()
{
  void *v0;
  objc_class *ObjectType;
  void *v2;
  id v3;
  objc_super v5;

  ObjectType = (objc_class *)swift_getObjectType();
  sub_1DC1C92D4();
  v2 = (void *)sub_1DC408CC8();
  swift_bridgeObjectRelease();
  v5.receiver = v0;
  v5.super_class = ObjectType;
  v3 = objc_msgSendSuper2(&v5, sel_initWithItemProviders_, v2);

  return v3;
}

uint64_t type metadata accessor for StockActivityItemsConfiguration()
{
  return objc_opt_self();
}

uint64_t sub_1DC1C943C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  char **p_name;
  char *v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  double v60;
  uint64_t *v61;
  id v62;
  id v63;
  id v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  char *v69;
  char *v70;
  char *v71;
  char *v72;
  uint64_t v73;
  char *v74;
  char *v75;
  char *v76;
  char *v77;
  void (*v78)(char *, uint64_t);
  char *v79;
  char *v80;
  void (*v81)(char *, uint64_t);
  uint64_t v82;
  char *v83;
  uint64_t v84;
  char *v85;
  char *v86;
  char *v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  id v92;
  uint64_t v93;
  id v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  uint64_t v99;
  uint64_t v100;
  void (*v101)(char *, _QWORD, uint64_t);
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  void (*v107)(uint64_t, uint64_t);
  uint64_t v108;
  uint64_t v109;
  uint64_t result;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t ObjCClassFromMetadata;
  void *v115;
  id v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  id v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  void (*v127)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v128;
  void (*v129)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v130;
  _QWORD *v131;
  char *v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  char *v137;
  char *v138;
  char *v139;
  char *v140;
  char *v141;
  char *v142;
  char *v143;
  char *v144;
  uint64_t v145;
  char *v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  char *v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  char *v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  char *v170;
  char *v171;
  uint64_t v172;
  uint64_t v173;
  char *v174;
  char v175[8];
  uint64_t v176[2];
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;

  v168 = sub_1DC3FFDD0();
  v167 = *(_QWORD *)(v168 - 8);
  MEMORY[0x1E0C80A78](v168);
  v166 = (char *)&v123 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v163 = sub_1DC4008EC();
  v161 = *(_QWORD *)(v163 - 8);
  MEMORY[0x1E0C80A78](v163);
  v162 = (char *)&v123 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v160 = sub_1DC3FFEF0();
  v159 = *(_QWORD *)(v160 - 8);
  MEMORY[0x1E0C80A78](v160);
  v156 = (char *)&v123 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v158 = sub_1DC3FFEFC();
  v157 = *(_QWORD *)(v158 - 8);
  MEMORY[0x1E0C80A78](v158);
  v155 = (char *)&v123 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v154 = sub_1DC3FFED8();
  v153 = *(_QWORD *)(v154 - 8);
  MEMORY[0x1E0C80A78](v154);
  v152 = (char *)&v123 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v151 = sub_1DC3FFE90();
  v150 = *(_QWORD *)(v151 - 8);
  MEMORY[0x1E0C80A78](v151);
  v147 = (char *)&v123 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v149 = sub_1DC3FFE9C();
  v148 = *(_QWORD *)(v149 - 8);
  MEMORY[0x1E0C80A78](v149);
  v146 = (char *)&v123 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1DC400220();
  MEMORY[0x1E0C80A78](v12);
  v144 = (char *)&v123 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1DC4001CC();
  MEMORY[0x1E0C80A78](v14);
  v143 = (char *)&v123 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1DC400118();
  MEMORY[0x1E0C80A78](v16);
  v141 = (char *)&v123 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_1DC3FFD40();
  MEMORY[0x1E0C80A78](v18);
  v140 = (char *)&v123 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1DC089DA4(0, &qword_1EDB28A80, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB03F8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v21);
  v138 = (char *)&v123 - v22;
  sub_1DC089DA4(0, &qword_1EDB28A88, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0428], v20);
  MEMORY[0x1E0C80A78](v23);
  v136 = (char *)&v123 - v24;
  v145 = sub_1DC3FFF20();
  v135 = *(_QWORD *)(v145 - 8);
  MEMORY[0x1E0C80A78](v145);
  v137 = (char *)&v123 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v26);
  v139 = (char *)&v123 - v27;
  MEMORY[0x1E0C80A78](v28);
  v142 = (char *)&v123 - v29;
  MEMORY[0x1E0C80A78](v30);
  v170 = (char *)&v123 - v31;
  v172 = sub_1DC3FFFEC();
  v134 = *(_QWORD *)(v172 - 8);
  MEMORY[0x1E0C80A78](v172);
  v171 = (char *)&v123 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = sub_1DC4011C8();
  MEMORY[0x1E0C80A78](v33);
  v133 = (char *)&v123 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = type metadata accessor for PriceViewModel();
  MEMORY[0x1E0C80A78](v35);
  v131 = (uint64_t *)((char *)&v123 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v37);
  v173 = (uint64_t)&v123 - v38;
  sub_1DC089DA4(0, &qword_1EDB28DC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF040], v20);
  MEMORY[0x1E0C80A78](v39);
  v132 = (char *)&v123 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v41);
  v43 = (char *)&v123 - v42;
  v44 = sub_1DC401030();
  v45 = *(_QWORD *)(v44 - 8);
  MEMORY[0x1E0C80A78](v44);
  v174 = (char *)&v123 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  v187 = a1;
  v188 = a2;
  __swift_allocate_boxed_opaque_existential_1(&v186);
  sub_1DC4051B8();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v186, v187);
  sub_1DC405188();
  v184 = a1;
  v185 = a2;
  __swift_allocate_boxed_opaque_existential_1(&v183);
  v164 = a1;
  v169 = a2;
  sub_1DC4051B8();
  v47 = v2 + OBJC_IVAR____TtC8StocksUI28StockShareActivityItemSource_stock;
  v179 = sub_1DC4010D8();
  v180 = v48;
  swift_bridgeObjectRetain();
  sub_1DC408B48();
  swift_bridgeObjectRelease();
  v49 = v179;
  v50 = v180;
  sub_1DC40106C();
  v179 = v49;
  v180 = v50;
  v51 = v44;
  swift_bridgeObjectRetain();
  sub_1DC408B48();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v183, v184);
  sub_1DC405194();
  swift_bridgeObjectRelease();
  sub_1DC0F01B0(v2 + OBJC_IVAR____TtC8StocksUI28StockShareActivityItemSource_quote, (uint64_t)v43);
  v52 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v45 + 48))(v43, 1, v44);
  p_name = (char **)(&stru_1EA492FF8 + 8);
  v165 = v47;
  if (v52 == 1)
  {
    sub_1DC1C9068((uint64_t)v43);
LABEL_25:
    sub_1DC0824D4((uint64_t)&v183, (uint64_t)&v179);
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v186, v187);
    sub_1DC4051A0();
    sub_1DC1CB098((uint64_t)&v179);
    v112 = v164;
    v113 = v169;
    v181 = v164;
    v182 = v169;
    __swift_allocate_boxed_opaque_existential_1(&v179);
    sub_1DC4051B8();
    type metadata accessor for Localized();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    v115 = (void *)objc_opt_self();
    v116 = objc_msgSend(v115, p_name[462], ObjCClassFromMetadata);
    v117 = sub_1DC3FFC80();
    v119 = v118;

    v176[0] = v117;
    v176[1] = v119;
    swift_bridgeObjectRetain();
    sub_1DC408B48();
    swift_bridgeObjectRelease();
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v179, v181);
    sub_1DC40517C();
    swift_bridgeObjectRelease();
    v120 = v166;
    sub_1DC401048();
    sub_1DC3FFD7C();
    (*(void (**)(char *, uint64_t))(v167 + 8))(v120, v168);
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v179, v181);
    sub_1DC405170();
    swift_bridgeObjectRelease();
    sub_1DC0824D4((uint64_t)&v179, (uint64_t)v176);
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v186, v187);
    sub_1DC4051A0();
    sub_1DC1CB098((uint64_t)v176);
    v177 = v112;
    v178 = v113;
    __swift_allocate_boxed_opaque_existential_1(v176);
    sub_1DC4051B8();
    v121 = objc_msgSend(v115, p_name[462], ObjCClassFromMetadata);
    sub_1DC3FFC80();

    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v176, v177);
    sub_1DC40517C();
    swift_bridgeObjectRelease();
    sub_1DC0824D4((uint64_t)v176, (uint64_t)v175);
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v186, v187);
    sub_1DC4051A0();
    sub_1DC1CB098((uint64_t)v175);
    __swift_project_boxed_opaque_existential_1(&v186, v187);
    v122 = sub_1DC4051AC();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v176);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v179);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v183);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v186);
    return v122;
  }
  v54 = v174;
  (*(void (**)(char *, char *, uint64_t))(v45 + 32))(v174, v43, v44);
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v183, v184);
  sub_1DC405188();
  v55 = (uint64_t)v132;
  (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v132, v54, v44);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v45 + 56))(v55, 0, 1, v44);
  v56 = v133;
  sub_1DC401078();
  v57 = v173;
  sub_1DC0FE8A4(v55, v56, 9666786, 0xA300000000000000, v173);
  v58 = *(_BYTE *)(v57 + 8);
  v126 = v51;
  v125 = v45;
  if ((v58 & 1) != 0)
  {
    v59 = *(_QWORD *)(v57 + 72);
    v124 = *(_QWORD *)(v57 + 64);
    v123 = v59;
    swift_bridgeObjectRetain();
    goto LABEL_21;
  }
  v60 = *(double *)v57;
  if (qword_1EDB2D588 == -1)
  {
    if (v60 == 0.0)
      goto LABEL_12;
  }
  else
  {
    swift_once();
    if (v60 == 0.0)
      goto LABEL_12;
  }
  if (fabs(v60) < 5.0)
  {
    if (qword_1F034B0B0 != -1)
      swift_once();
    v61 = &qword_1F0368B38;
    goto LABEL_15;
  }
LABEL_12:
  if (qword_1EDB2D4C8 != -1)
    swift_once();
  v61 = &qword_1EDB5DEA8;
LABEL_15:
  v62 = (id)*v61;
  objc_msgSend(v62, sel_setNumberStyle_, 1);
  v63 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithDouble_, v60);
  v64 = objc_msgSend(v62, sel_stringFromNumber_, v63);

  if (!v64)
  {

    v68 = v131;
    sub_1DC0FC054(v57, (uint64_t)v131);
LABEL_19:
    v65 = v68[8];
    v67 = v68[9];
    swift_bridgeObjectRetain();
    goto LABEL_20;
  }
  v65 = sub_1DC408A4C();
  v67 = v66;

  v68 = v131;
  sub_1DC0FC054(v57, (uint64_t)v131);
  if (!v67)
    goto LABEL_19;
LABEL_20:
  v124 = v65;
  v123 = v67;
  sub_1DC180A68((uint64_t)v68);
LABEL_21:
  v69 = v171;
  sub_1DC400FE8();
  v70 = v136;
  sub_1DC3FFE18();
  v130 = sub_1DC3FFE24();
  v129 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v130 - 8) + 56);
  v129(v70, 0, 1, v130);
  v128 = sub_1DC3FFE0C();
  v127 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v128 - 8) + 56);
  v71 = v138;
  v127(v138, 1, 1, v128);
  sub_1DC3FFD28();
  sub_1DC4000B8();
  sub_1DC400160();
  sub_1DC4001FC();
  v72 = v170;
  sub_1DC3FFE3C();
  v133 = (char *)sub_1DC1CB0F4();
  v73 = v145;
  sub_1DC3FFFD4();
  v131 = *(_QWORD **)(v135 + 8);
  ((void (*)(char *, uint64_t))v131)(v72, v73);
  v132 = *(char **)(v134 + 8);
  ((void (*)(char *, uint64_t))v132)(v69, v172);
  v135 = v179;
  v134 = v180;
  sub_1DC400FE8();
  v129(v70, 1, 1, v130);
  v127(v71, 1, 1, v128);
  sub_1DC3FFD28();
  sub_1DC4000B8();
  sub_1DC400160();
  sub_1DC4001FC();
  v74 = v137;
  sub_1DC3FFE3C();
  v75 = v147;
  sub_1DC3FFE84();
  v76 = v146;
  sub_1DC3FFE78();
  (*(void (**)(char *, uint64_t))(v150 + 8))(v75, v151);
  v77 = v139;
  sub_1DC3FFE48();
  (*(void (**)(char *, uint64_t))(v148 + 8))(v76, v149);
  v78 = (void (*)(char *, uint64_t))v131;
  ((void (*)(char *, uint64_t))v131)(v74, v73);
  v79 = v152;
  sub_1DC3FFECC();
  v80 = v142;
  sub_1DC3FFF08();
  (*(void (**)(char *, uint64_t))(v153 + 8))(v79, v154);
  v78(v77, v73);
  v81 = v78;
  v82 = v159;
  v83 = v156;
  v84 = v160;
  (*(void (**)(char *, _QWORD, uint64_t))(v159 + 104))(v156, *MEMORY[0x1E0CB0518], v160);
  v85 = v155;
  sub_1DC3FFEE4();
  (*(void (**)(char *, uint64_t))(v82 + 8))(v83, v84);
  v86 = v170;
  sub_1DC3FFF14();
  (*(void (**)(char *, uint64_t))(v157 + 8))(v85, v158);
  v78(v80, v73);
  v87 = v171;
  sub_1DC3FFFD4();
  v81(v86, v73);
  v88 = v172;
  v89 = v132;
  ((void (*)(char *, uint64_t))v132)(v87, v172);
  v90 = v179;
  v91 = v180;
  sub_1DC400FE8();
  v92 = sub_1DC3BA48C();
  ((void (*)(char *, uint64_t))v89)(v87, v88);
  type metadata accessor for Localized();
  v93 = swift_getObjCClassFromMetadata();
  v94 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, v93);
  sub_1DC3FFC80();

  sub_1DC0FDC18(0, (unint64_t *)&qword_1EDB400C0, (unint64_t *)&qword_1EDB400F0, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v95 = swift_allocObject();
  *(_OWORD *)(v95 + 16) = xmmword_1DC40FA70;
  v96 = MEMORY[0x1E0DEB490];
  *(_QWORD *)(v95 + 56) = MEMORY[0x1E0DEB418];
  *(_QWORD *)(v95 + 64) = v96;
  *(_QWORD *)(v95 + 32) = v92;
  v97 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v95 + 96) = MEMORY[0x1E0DEA968];
  v98 = sub_1DC0E7FAC();
  v99 = v134;
  *(_QWORD *)(v95 + 72) = v135;
  *(_QWORD *)(v95 + 80) = v99;
  *(_QWORD *)(v95 + 136) = v97;
  *(_QWORD *)(v95 + 144) = v98;
  *(_QWORD *)(v95 + 104) = v98;
  *(_QWORD *)(v95 + 112) = v90;
  *(_QWORD *)(v95 + 120) = v91;
  sub_1DC408A70();
  swift_bridgeObjectRelease();
  v100 = v161;
  v101 = *(void (**)(char *, _QWORD, uint64_t))(v161 + 104);
  v102 = (uint64_t)v162;
  v103 = v163;
  v101(v162, *MEMORY[0x1E0DAE888], v163);
  v104 = sub_1DC0FC0DC(v102, 0);
  v106 = v105;
  v107 = *(void (**)(uint64_t, uint64_t))(v100 + 8);
  v107(v102, v103);
  v101((char *)v102, *MEMORY[0x1E0DAE868], v103);
  v172 = sub_1DC0FC0DC(v102, 0);
  v107(v102, v103);
  sub_1DC400FA0();
  v109 = v108;
  swift_bridgeObjectRelease();
  if (!v109)
  {
LABEL_24:
    v179 = v124;
    v180 = v123;
    swift_bridgeObjectRetain();
    sub_1DC408B48();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_1DC408B48();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_1DC408B48();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v183, v184);
    sub_1DC40517C();
    swift_bridgeObjectRelease();
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v183, v184);
    sub_1DC405188();
    v179 = v104;
    v180 = v106;
    swift_bridgeObjectRetain();
    sub_1DC408B48();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_1DC408B48();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v183, v184);
    sub_1DC40517C();
    swift_bridgeObjectRelease();
    sub_1DC180A68(v173);
    (*(void (**)(char *, uint64_t))(v125 + 8))(v174, v126);
    p_name = &stru_1EA492FF8.name;
    goto LABEL_25;
  }
  result = sub_1DC400FA0();
  if (v111)
  {
    v179 = result;
    v180 = v111;
    swift_bridgeObjectRetain();
    sub_1DC408B48();
    swift_bridgeObjectRelease();
    goto LABEL_24;
  }
  __break(1u);
  return result;
}

uint64_t sub_1DC1CAA2C()
{
  return type metadata accessor for StockShareActivityItemSource();
}

void sub_1DC1CAA34()
{
  unint64_t v0;
  unint64_t v1;

  sub_1DC4010E4();
  if (v0 <= 0x3F)
  {
    sub_1DC089DA4(319, &qword_1EDB28DC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF040], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

double sub_1DC1CABC8@<D0>(void *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v9;
  double result;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;

  if (a1)
  {
    v4 = sub_1DC408A4C();
    v6 = v5;
    if (v4 == sub_1DC408A4C() && v6 == v7)
    {
      v11 = a1;
      swift_bridgeObjectRelease_n();
    }
    else
    {
      v9 = sub_1DC4099E8();
      v17 = a1;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v9 & 1) == 0)
      {
        *(_QWORD *)(a2 + 24) = sub_1DC3FFDD0();
        __swift_allocate_boxed_opaque_existential_1((uint64_t *)a2);
        sub_1DC401048();

        return result;
      }
    }
    v12 = sub_1DC404D14();
    v13 = sub_1DC1C943C(v12, MEMORY[0x1E0DB8758]);
    if (v14)
    {
      v15 = v13;
      v16 = v14;
      *(_QWORD *)(a2 + 24) = MEMORY[0x1E0DEA968];

      *(_QWORD *)a2 = v15;
      *(_QWORD *)(a2 + 8) = v16;
    }
    else
    {

      result = 0.0;
      *(_OWORD *)a2 = 0u;
      *(_OWORD *)(a2 + 16) = 0u;
    }
  }
  else
  {
    *(_QWORD *)(a2 + 24) = sub_1DC3FFDD0();
    __swift_allocate_boxed_opaque_existential_1((uint64_t *)a2);
    sub_1DC401048();
  }
  return result;
}

uint64_t sub_1DC1CAF28()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;

  sub_1DC0E7820();
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1DC40FA60;
  *(_QWORD *)(v1 + 32) = v0;
  sub_1DC408CF8();
  sub_1DC089DA4(0, &qword_1F034DC28, (uint64_t (*)(uint64_t))type metadata accessor for ActivityType, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1DC4153C0;
  v3 = (void *)*MEMORY[0x1E0D96D80];
  v4 = (void *)*MEMORY[0x1E0D96E00];
  *(_QWORD *)(v2 + 32) = *MEMORY[0x1E0D96D80];
  *(_QWORD *)(v2 + 40) = v4;
  v5 = (void *)*MEMORY[0x1E0D96D90];
  v6 = (void *)*MEMORY[0x1E0D96E08];
  *(_QWORD *)(v2 + 48) = *MEMORY[0x1E0D96D90];
  *(_QWORD *)(v2 + 56) = v6;
  v7 = (void *)*MEMORY[0x1E0D96DD8];
  v8 = (void *)*MEMORY[0x1E0D96DF0];
  *(_QWORD *)(v2 + 64) = *MEMORY[0x1E0D96DD8];
  *(_QWORD *)(v2 + 72) = v8;
  v9 = (void *)*MEMORY[0x1E0D96DA0];
  *(_QWORD *)(v2 + 80) = *MEMORY[0x1E0D96DA0];
  objc_allocWithZone((Class)sub_1DC40574C());
  v10 = v0;
  v11 = v3;
  v12 = v4;
  v13 = v5;
  v14 = v6;
  v15 = v7;
  v16 = v8;
  v17 = v9;
  return sub_1DC405740();
}

uint64_t sub_1DC1CB098(uint64_t a1)
{
  uint64_t v2;

  sub_1DC0FDC18(0, &qword_1F034DE10, &qword_1F034DE18, MEMORY[0x1E0DB9318], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1DC1CB0F4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EDB28A90;
  if (!qword_1EDB28A90)
  {
    v1 = sub_1DC3FFF20();
    result = MEMORY[0x1DF0CAB8C](MEMORY[0x1E0CB0560], v1);
    atomic_store(result, (unint64_t *)&qword_1EDB28A90);
  }
  return result;
}

uint64_t sub_1DC1CB13C()
{
  sub_1DC409AC0();
  sub_1DC408AF4();
  swift_bridgeObjectRelease();
  return sub_1DC409AF0();
}

uint64_t sub_1DC1CB1D0()
{
  sub_1DC408AF4();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DC1CB240()
{
  sub_1DC409AC0();
  sub_1DC408AF4();
  swift_bridgeObjectRelease();
  return sub_1DC409AF0();
}

uint64_t sub_1DC1CB2D0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1DC1CB4F0();
  *a1 = result;
  return result;
}

void sub_1DC1CB2FC(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE400000000000000;
  v4 = 0xEB00000000647261;
  v5 = 0x63616C507377656ELL;
  if (v2 != 1)
  {
    v5 = 25697;
    v4 = 0xE200000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 1937204590;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

unint64_t sub_1DC1CB354()
{
  unint64_t result;

  result = qword_1EDB41E70;
  if (!qword_1EDB41E70)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC4154B4, &type metadata for StockFeedGroupKind);
    atomic_store(result, (unint64_t *)&qword_1EDB41E70);
  }
  return result;
}

uint64_t sub_1DC1CB398(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1DC1591D8(*a1, *a2);
}

uint64_t sub_1DC1CB3A4()
{
  sub_1DC1CB44C();
  return sub_1DC408CA4();
}

uint64_t sub_1DC1CB400()
{
  sub_1DC1CB44C();
  return sub_1DC408C8C();
}

unint64_t sub_1DC1CB44C()
{
  unint64_t result;

  result = qword_1EDB27928;
  if (!qword_1EDB27928)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC41543C, &type metadata for StockFeedGroupKind);
    atomic_store(result, (unint64_t *)&qword_1EDB27928);
  }
  return result;
}

void sub_1DC1CB490(_QWORD *a1@<X8>)
{
  *a1 = &unk_1EA44D168;
}

uint64_t sub_1DC1CB4A0()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x616C50207377654ELL;
  if (*v0 != 1)
    v1 = 25665;
  if (*v0)
    return v1;
  else
    return 1937204558;
}

uint64_t sub_1DC1CB4F0()
{
  unint64_t v0;

  v0 = sub_1DC4098A4();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

uint64_t storeEnumTagSinglePayload for StockFeedGroupKind(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1DC1CB584 + 4 * byte_1DC415435[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1DC1CB5B8 + 4 * asc_1DC415430[v4]))();
}

uint64_t sub_1DC1CB5B8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC1CB5C0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC1CB5C8);
  return result;
}

uint64_t sub_1DC1CB5D4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC1CB5DCLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1DC1CB5E0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC1CB5E8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StockFeedGroupKind()
{
  return &type metadata for StockFeedGroupKind;
}

unint64_t sub_1DC1CB608()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1F034DE20;
  if (!qword_1F034DE20)
  {
    sub_1DC1CB650();
    result = MEMORY[0x1DF0CAB8C](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1F034DE20);
  }
  return result;
}

void sub_1DC1CB650()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F034DE28)
  {
    v0 = sub_1DC408D70();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1F034DE28);
  }
}

_QWORD *sub_1DC1CB6A4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v2 = v1;
  v4 = type metadata accessor for WatchlistCreationRouteModel();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for TextInputAlert();
  v8 = (_QWORD *)swift_allocObject();
  v8[5] = &type metadata for WatchlistCreationAlert;
  v8[6] = &off_1EA462860;
  v8[9] = 0;
  v8[10] = 0;
  v8[12] = 0;
  v8[13] = 0;
  v8[11] = sub_1DC080520;
  sub_1DC1CBAD4(a1, (uint64_t)v7);
  v9 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v2;
  sub_1DC1CBB1C((uint64_t)v7, v10 + v9);
  v8[7] = sub_1DC1CBB60;
  v8[8] = v10;
  swift_retain();
  sub_1DC0E81D0(0);
  v11 = (uint64_t *)(a1 + *(int *)(v4 + 20));
  v12 = *v11;
  if (*v11)
  {
    v13 = v11[1];
    v14 = swift_allocObject();
    *(_QWORD *)(v14 + 16) = v12;
    *(_QWORD *)(v14 + 24) = v13;
    v8[9] = sub_1DC080634;
    v8[10] = v14;
    swift_retain();
    sub_1DC0E81D0(0);
  }
  v8[11] = sub_1DC1CBA64;
  v8[12] = 0;
  return v8;
}

uint64_t sub_1DC1CB814(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  uint64_t v19;
  uint64_t v21[8];

  v4 = v3;
  v21[0] = a3;
  v8 = type metadata accessor for WatchlistCreationRouteModel();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21[4] = v4;
  v21[5] = a1;
  v21[6] = a2;
  type metadata accessor for WatchlistCreationResult();
  sub_1DC402E0C();
  v21[1] = sub_1DC0ACADC();
  v12 = (void *)sub_1DC409148();
  sub_1DC1CBAD4(a3, (uint64_t)v11);
  v13 = (*(unsigned __int8 *)(v9 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = v4;
  sub_1DC1CBB1C((uint64_t)v11, v14 + v13);
  sub_1DC40124C();
  swift_retain();
  sub_1DC402CF8();
  swift_release();

  swift_release();
  v15 = v21[0];
  sub_1DC1CBAD4(v21[0], (uint64_t)v11);
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = v4;
  sub_1DC1CBB1C((uint64_t)v11, v16 + v13);
  swift_retain();
  v17 = (void *)sub_1DC402C80();
  sub_1DC402CF8();
  swift_release();
  swift_release();

  v18 = (void *)sub_1DC409148();
  sub_1DC1CBAD4(v15, (uint64_t)v11);
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = v4;
  sub_1DC1CBB1C((uint64_t)v11, v19 + v13);
  swift_retain();
  sub_1DC402D04();
  swift_release();
  swift_release();

  return swift_release();
}

BOOL sub_1DC1CBA64(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  return v2 != 0;
}

uint64_t sub_1DC1CBA80()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for WatchlistCreationAlertFactory()
{
  return objc_opt_self();
}

uint64_t sub_1DC1CBAD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WatchlistCreationRouteModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC1CBB1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WatchlistCreationRouteModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC1CBB60(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for WatchlistCreationRouteModel() - 8) + 80);
  return sub_1DC1CB814(a1, a2, v2 + ((v5 + 24) & ~v5));
}

uint64_t sub_1DC1CBBB8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DC1CBBDC(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  _QWORD v17[2];

  v6 = type metadata accessor for WatchlistCreationResult();
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0)
    v10 = a2 & 0xFFFFFFFFFFFFLL;
  if (v10)
  {
    MEMORY[0x1E0C80A78](v7);
    v17[-4] = a1;
    v17[-3] = a2;
    v17[-2] = a3;
    sub_1DC40124C();
    sub_1DC402E0C();
    v11 = (void *)sub_1DC402C80();
    sub_1DC402CF8();
    swift_release();

    v12 = (void *)sub_1DC402C80();
    v13 = sub_1DC402D7C();
    swift_release();

  }
  else
  {
    v14 = &v9[*(int *)(v6 + 20)];
    v15 = sub_1DC40124C();
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
    *v9 = 1;
    sub_1DC089DA4(0, &qword_1F034DF00, (uint64_t (*)(uint64_t))type metadata accessor for WatchlistCreationResult, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    return sub_1DC402D58();
  }
  return v13;
}

uint64_t sub_1DC1CBD90()
{
  uint64_t v0;

  return sub_1DC1CBBDC(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t type metadata accessor for WatchlistCreationResult()
{
  uint64_t result;

  result = qword_1F034DF68;
  if (!qword_1F034DF68)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1DC1CBDE8(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  int v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t);
  _BYTE *v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v22;

  sub_1DC089DA4(0, &qword_1EDB28E40, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF270], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v22 - v6;
  v8 = sub_1DC40124C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v22 - v13;
  v15 = *a1;
  if (v15 == 3)
  {
    v16 = type metadata accessor for WatchlistCreationResult();
    sub_1DC0EDD64((uint64_t)&a1[*(int *)(v16 + 20)], (uint64_t)v7, &qword_1EDB28E40, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF270]);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    {
      v17 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF270];
      sub_1DC0A6180((uint64_t)v7, (uint64_t)&qword_1EDB28E40, (uint64_t)MEMORY[0x1E0DAF270], (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD))sub_1DC089DA4);
      sub_1DC1CC0D4(2, a3);
      sub_1DC1CD1EC();
      swift_allocError();
      *v18 = 2;
      sub_1DC089DA4(0, &qword_1F034DEE0, v17, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
      swift_allocObject();
      return sub_1DC402D4C();
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v14, v7, v8);
      (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v11, v14, v8);
      sub_1DC089DA4(0, &qword_1F034DEE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF270], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
      swift_allocObject();
      v19 = sub_1DC402D58();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
    }
    return v19;
  }
  else
  {
    sub_1DC1CC0D4(*a1, a3);
    sub_1DC1CD1EC();
    swift_allocError();
    *v20 = v15;
    sub_1DC089DA4(0, &qword_1F034DEE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF270], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    return sub_1DC402D4C();
  }
}

uint64_t sub_1DC1CC0B8(uint64_t a1)
{
  return sub_1DC1CC6EC(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_1DC1CBDE8);
}

uint64_t sub_1DC1CC0D4(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE v20[16];
  _OWORD v21[2];
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  unint64_t v25;

  v3 = v2;
  sub_1DC089DA4(0, (unint64_t *)&unk_1EDB29810, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD3C8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v6);
  v8 = &v20[-v7];
  v9 = type metadata accessor for StocksActivity(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = &v20[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = type metadata accessor for WatchlistCreationRouteModel();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  MEMORY[0x1E0C80A78](v12);
  *((_QWORD *)&v24 + 1) = &type metadata for WatchlistCreationErrorAlert;
  v25 = sub_1DC1CD230();
  LOBYTE(v23) = a1;
  sub_1DC406808();
  swift_allocObject();
  v15 = sub_1DC4067CC();
  sub_1DC1CBAD4(a2, (uint64_t)&v20[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)]);
  v16 = (*(unsigned __int8 *)(v13 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v3;
  sub_1DC1CBB1C((uint64_t)&v20[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)], v17 + v16);
  swift_retain();
  sub_1DC4067F0();
  swift_release();
  swift_release();
  *(_QWORD *)v11 = v15;
  v11[40] = 0;
  swift_storeEnumTagMultiPayload();
  v18 = sub_1DC403340();
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v8, 1, 1, v18);
  v25 = 0;
  v23 = 0u;
  v24 = 0u;
  v22 = 0;
  memset(v21, 0, sizeof(v21));
  swift_retain();
  swift_retain();
  sub_1DC22BAE0((uint64_t)v11, 0, (uint64_t)v8, (uint64_t)&v23, 0, 0, (uint64_t)v21);
  swift_release();
  swift_release();
  sub_1DC0A6180((uint64_t)v21, (uint64_t)&qword_1EDB29410, (uint64_t)&unk_1EDB29400, MEMORY[0x1E0DB35B0], (uint64_t (*)(_QWORD))sub_1DC0A6204);
  sub_1DC0A6180((uint64_t)&v23, (uint64_t)&qword_1EDB2ACD0, (uint64_t)&qword_1EDB2ACC0, MEMORY[0x1E0D53040], (uint64_t (*)(_QWORD))sub_1DC0A6204);
  sub_1DC0A6180((uint64_t)v8, (uint64_t)&unk_1EDB29810, (uint64_t)MEMORY[0x1E0DAD3C8], (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD))sub_1DC089DA4);
  sub_1DC1B3F14((uint64_t)v11);
  return swift_release();
}

uint64_t sub_1DC1CC3B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v22[3];
  uint64_t v23;

  v21 = a3;
  v5 = sub_1DC40124C();
  v19 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC089DA4(0, (unint64_t *)&qword_1EDB28DE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF0D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v17 - v9;
  v11 = sub_1DC4010E4();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = a2;
  sub_1DC404864();
  if (v23)
  {
    sub_1DC0A3390(0, (unint64_t *)&qword_1EDB29C40);
    sub_1DC4018AC();
    if ((swift_dynamicCast() & 1) != 0)
    {
      sub_1DC403634();
      v18 = v7;
      sub_1DC1CD1A4();
      v7 = v18;
      sub_1DC4018A0();
      swift_release();
    }
  }
  else
  {
    sub_1DC0A6180((uint64_t)v22, (uint64_t)&unk_1EDB29C50, (uint64_t)&qword_1EDB29C40, MEMORY[0x1E0DB73D0], (uint64_t (*)(_QWORD))sub_1DC0A6204);
  }
  sub_1DC0EDD64(v21, (uint64_t)v10, (unint64_t *)&qword_1EDB28DE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF0D0]);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_1DC0A6180((uint64_t)v10, (uint64_t)&qword_1EDB28DE0, (uint64_t)MEMORY[0x1E0DAF0D0], (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD))sub_1DC089DA4);
    (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v7, a1, v5);
    sub_1DC089DA4(0, &qword_1F034DEE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF270], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    return sub_1DC402D58();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
    sub_1DC0824D4(v20 + 16, (uint64_t)v22);
    __swift_project_boxed_opaque_existential_1(v22, v23);
    v15 = sub_1DC400AFC();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
  }
  return v15;
}

uint64_t sub_1DC1CC6D0(uint64_t a1)
{
  return sub_1DC1CC6EC(a1, sub_1DC1CC3B4);
}

uint64_t sub_1DC1CC6EC(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, uint64_t))
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for WatchlistCreationRouteModel() - 8) + 80);
  return a2(a1, *(_QWORD *)(v2 + 16), v2 + ((v5 + 24) & ~v5));
}

uint64_t sub_1DC1CC744(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  char *v17;
  void (*v18)(char *, uint64_t);
  uint64_t v19;
  uint64_t (*v20)(void);
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;

  v27 = a3;
  v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1DC089DA4(0, &qword_1EDB28E40, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF270], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v26 - v7;
  sub_1DC089DA4(0, (unint64_t *)&qword_1EDB28DE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF0D0], v5);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v26 - v10;
  v12 = *(_QWORD *)(a2 + 40);
  v13 = __swift_project_boxed_opaque_existential_1((_QWORD *)(a2 + 16), v12);
  v14 = *(_QWORD *)(v12 - 8);
  v15 = MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, __n128))(v14 + 16))(v17, v15);
  sub_1DC400A6C();
  v18 = *(void (**)(char *, uint64_t))(v14 + 8);
  v19 = a1;
  v18(v17, v12);
  sub_1DC406F7C();
  swift_release();
  v20 = MEMORY[0x1E0DAF0D0];
  sub_1DC0EDD64(v27, (uint64_t)v11, (unint64_t *)&qword_1EDB28DE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF0D0]);
  v21 = sub_1DC4010E4();
  LODWORD(v5) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 48))(v11, 1, v21);
  result = sub_1DC0A6180((uint64_t)v11, (uint64_t)&qword_1EDB28DE0, (uint64_t)v20, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD))sub_1DC089DA4);
  if ((_DWORD)v5 == 1)
  {
    sub_1DC404840();
    swift_getObjectType();
    if (qword_1EDB2AA18 != -1)
      swift_once();
    v23 = sub_1DC40124C();
    v24 = *(_QWORD *)(v23 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v24 + 16))(v8, v19, v23);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v8, 0, 1, v23);
    v25 = v28;
    sub_1DC404AD4();
    if (v25)
    {
      swift_unknownObjectRelease();

      return sub_1DC0A6180((uint64_t)v8, (uint64_t)&qword_1EDB28E40, (uint64_t)MEMORY[0x1E0DAF270], (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD))sub_1DC089DA4);
    }
    else
    {
      sub_1DC0A6180((uint64_t)v8, (uint64_t)&qword_1EDB28E40, (uint64_t)MEMORY[0x1E0DAF270], (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD))sub_1DC089DA4);
      return swift_unknownObjectRelease();
    }
  }
  return result;
}

uint64_t sub_1DC1CCA3C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for WatchlistCreationRouteModel() - 8) + 80);
  return sub_1DC1CC744(a1, *(_QWORD *)(v1 + 16), v1 + ((v3 + 24) & ~v3));
}

uint64_t sub_1DC1CCA98(uint64_t a1)
{
  uint64_t v1;
  _QWORD v3[4];

  sub_1DC0824D4(a1 + 16, (uint64_t)v3);
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  v1 = sub_1DC400A3C();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
  return v1;
}

uint64_t sub_1DC1CCB20(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v2 = type metadata accessor for WatchlistCreationResult();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = &v4[*(int *)(v5 + 20)];
  v7 = sub_1DC40124C();
  v8 = *(_QWORD *)(v7 - 8);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v8 + 16))(v6, a1, v7);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
  *v4 = 3;
  sub_1DC089DA4(0, &qword_1F034DF00, (uint64_t (*)(uint64_t))type metadata accessor for WatchlistCreationResult, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  return sub_1DC402D58();
}

uint64_t sub_1DC1CCC1C(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  char v16;
  void (*v17)(char *, uint64_t, uint64_t, uint64_t);
  int v18;
  _BYTE *v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  uint64_t v25;
  _BYTE *v26;
  uint64_t v27;
  void (*v29)(char *, uint64_t);
  _QWORD v30[2];

  v2 = type metadata accessor for WatchlistCreationResult();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC089DA4(0, &qword_1F034DF08, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAE480], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v30 - v6;
  v8 = sub_1DC400520();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v30 - v13;
  v30[1] = a1;
  v15 = a1;
  sub_1DC0A3390(0, (unint64_t *)&qword_1EDB400E0);
  v16 = swift_dynamicCast();
  v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
  if ((v16 & 1) != 0)
  {
    v17(v7, 0, 1, v8);
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v14, v7, v8);
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v11, v14, v8);
    v18 = (*(uint64_t (**)(char *, uint64_t))(v9 + 88))(v11, v8);
    if (v18 == *MEMORY[0x1E0DAE478])
    {
      v19 = &v4[*(int *)(v2 + 20)];
      v20 = sub_1DC40124C();
      (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v19, 1, 1, v20);
      *v4 = 0;
LABEL_10:
      sub_1DC089DA4(0, &qword_1F034DF00, (uint64_t (*)(uint64_t))type metadata accessor for WatchlistCreationResult, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
      swift_allocObject();
      v23 = sub_1DC402D58();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
      return v23;
    }
    if (v18 == *MEMORY[0x1E0DAE470])
    {
      v24 = &v4[*(int *)(v2 + 20)];
      v25 = sub_1DC40124C();
      (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v24, 1, 1, v25);
      *v4 = 1;
      goto LABEL_10;
    }
    if (v18 == *MEMORY[0x1E0DAE468])
    {
      v26 = &v4[*(int *)(v2 + 20)];
      v27 = sub_1DC40124C();
      (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v26, 1, 1, v27);
      *v4 = 2;
      goto LABEL_10;
    }
    v29 = *(void (**)(char *, uint64_t))(v9 + 8);
    v29(v14, v8);
    v29(v11, v8);
  }
  else
  {
    v17(v7, 1, 1, v8);
    sub_1DC0A6180((uint64_t)v7, (uint64_t)&qword_1F034DF08, (uint64_t)MEMORY[0x1E0DAE480], (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD))sub_1DC089DA4);
  }
  v21 = &v4[*(int *)(v2 + 20)];
  v22 = sub_1DC40124C();
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v21, 1, 1, v22);
  *v4 = 2;
  sub_1DC089DA4(0, &qword_1F034DF00, (uint64_t (*)(uint64_t))type metadata accessor for WatchlistCreationResult, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  return sub_1DC402D58();
}

uint64_t sub_1DC1CCFCC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE v11[16];
  _OWORD v12[2];
  uint64_t v13;
  _OWORD v14[2];
  uint64_t v15;

  sub_1DC089DA4(0, (unint64_t *)&unk_1EDB29810, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD3C8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v5 = &v11[-v4];
  v6 = type metadata accessor for StocksActivity(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1DC1CBAD4(a2, (uint64_t)v8);
  swift_storeEnumTagMultiPayload();
  v9 = sub_1DC403340();
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v5, 1, 1, v9);
  v15 = 0;
  memset(v14, 0, sizeof(v14));
  v13 = 0;
  memset(v12, 0, sizeof(v12));
  swift_retain();
  sub_1DC22BAE0((uint64_t)v8, 0, (uint64_t)v5, (uint64_t)v14, 0, 0, (uint64_t)v12);
  swift_release();
  sub_1DC0A6180((uint64_t)v12, (uint64_t)&qword_1EDB29410, (uint64_t)&unk_1EDB29400, MEMORY[0x1E0DB35B0], (uint64_t (*)(_QWORD))sub_1DC0A6204);
  sub_1DC0A6180((uint64_t)v14, (uint64_t)&qword_1EDB2ACD0, (uint64_t)&qword_1EDB2ACC0, MEMORY[0x1E0D53040], (uint64_t (*)(_QWORD))sub_1DC0A6204);
  sub_1DC0A6180((uint64_t)v5, (uint64_t)&unk_1EDB29810, (uint64_t)MEMORY[0x1E0DAD3C8], (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD))sub_1DC089DA4);
  sub_1DC1B3F14((uint64_t)v8);
  return swift_release();
}

unint64_t sub_1DC1CD1A4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1F034DEE8;
  if (!qword_1F034DEE8)
  {
    v1 = sub_1DC403634();
    result = MEMORY[0x1DF0CAB8C](MEMORY[0x1E0DAD790], v1);
    atomic_store(result, (unint64_t *)&qword_1F034DEE8);
  }
  return result;
}

unint64_t sub_1DC1CD1EC()
{
  unint64_t result;

  result = qword_1F034DEF0;
  if (!qword_1F034DEF0)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC4156E8, &type metadata for WatchlistCreationError);
    atomic_store(result, (unint64_t *)&qword_1F034DEF0);
  }
  return result;
}

unint64_t sub_1DC1CD230()
{
  unint64_t result;

  result = qword_1F034DEF8;
  if (!qword_1F034DEF8)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC40EA1C, &type metadata for WatchlistCreationErrorAlert);
    atomic_store(result, (unint64_t *)&qword_1F034DEF8);
  }
  return result;
}

uint64_t sub_1DC1CD278()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for WatchlistCreationRouteModel() - 8) + 80);
  return sub_1DC1CCFCC(*(_QWORD *)(v0 + 16), v0 + ((v1 + 24) & ~v1));
}

uint64_t sub_1DC1CD2A8()
{
  uint64_t v0;

  return sub_1DC1CCA98(*(_QWORD *)(v0 + 16));
}

uint64_t storeEnumTagSinglePayload for WatchlistCreationError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1DC1CD310 + 4 * byte_1DC4155B5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1DC1CD344 + 4 * byte_1DC4155B0[v4]))();
}

uint64_t sub_1DC1CD344(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC1CD34C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC1CD354);
  return result;
}

uint64_t sub_1DC1CD360(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC1CD368);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1DC1CD36C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC1CD374(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WatchlistCreationError()
{
  return &type metadata for WatchlistCreationError;
}

uint64_t *sub_1DC1CD390(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  _BYTE *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v11 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    v5 = *(int *)(a3 + 20);
    v6 = (char *)a1 + v5;
    v7 = (char *)a2 + v5;
    v8 = sub_1DC40124C();
    v9 = *(_QWORD *)(v8 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
    {
      sub_1DC089DA4(0, &qword_1EDB28E40, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF270], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, char *, uint64_t))(v9 + 16))(v6, v7, v8);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
    }
  }
  return v3;
}

uint64_t sub_1DC1CD48C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v2 = a1 + *(int *)(a2 + 20);
  v3 = sub_1DC40124C();
  v4 = *(_QWORD *)(v3 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  return result;
}

_BYTE *sub_1DC1CD4F8(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = &a1[v4];
  v6 = &a2[v4];
  v7 = sub_1DC40124C();
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    sub_1DC089DA4(0, &qword_1EDB28E40, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF270], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v8 + 16))(v5, v6, v7);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

_BYTE *sub_1DC1CD5C8(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(_BYTE *, uint64_t, uint64_t);
  int v10;
  int v11;
  uint64_t v12;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = &a1[v4];
  v6 = &a2[v4];
  v7 = sub_1DC40124C();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v8 + 48);
  v10 = v9(v5, 1, v7);
  v11 = v9(v6, 1, v7);
  if (!v10)
  {
    if (!v11)
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v8 + 24))(v5, v6, v7);
      return a1;
    }
    (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v5, v7);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    sub_1DC089DA4(0, &qword_1EDB28E40, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF270], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    return a1;
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v8 + 16))(v5, v6, v7);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  return a1;
}

_BYTE *sub_1DC1CD6E4(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = &a1[v4];
  v6 = &a2[v4];
  v7 = sub_1DC40124C();
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    sub_1DC089DA4(0, &qword_1EDB28E40, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF270], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

_BYTE *sub_1DC1CD7B4(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(_BYTE *, uint64_t, uint64_t);
  int v10;
  int v11;
  uint64_t v12;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = &a1[v4];
  v6 = &a2[v4];
  v7 = sub_1DC40124C();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v8 + 48);
  v10 = v9(v5, 1, v7);
  v11 = v9(v6, 1, v7);
  if (!v10)
  {
    if (!v11)
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v8 + 40))(v5, v6, v7);
      return a1;
    }
    (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v5, v7);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    sub_1DC089DA4(0, &qword_1EDB28E40, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF270], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    return a1;
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v8 + 32))(v5, v6, v7);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  return a1;
}

uint64_t sub_1DC1CD8D0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC1CD8DC(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  int v4;
  unsigned int v5;
  uint64_t v9;

  if ((_DWORD)a2 == 252)
  {
    if (*a1 <= 3u)
      v4 = 3;
    else
      v4 = *a1;
    v5 = v4 - 3;
    if (*a1 >= 3u)
      return v5;
    else
      return 0;
  }
  else
  {
    sub_1DC089DA4(0, &qword_1EDB28E40, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF270], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    return (*(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v9);
  }
}

uint64_t sub_1DC1CD974()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

_BYTE *sub_1DC1CD980(_BYTE *result, uint64_t a2, int a3, uint64_t a4)
{
  _BYTE *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 252)
  {
    *result = a2 + 3;
  }
  else
  {
    sub_1DC089DA4(0, &qword_1EDB28E40, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF270], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    return (_BYTE *)(*(uint64_t (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

void sub_1DC1CDA08()
{
  unint64_t v0;

  sub_1DC089DA4(319, &qword_1EDB28E40, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF270], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

unint64_t sub_1DC1CDA98()
{
  unint64_t result;

  result = qword_1F034DFA0;
  if (!qword_1F034DFA0)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC4156C0, &type metadata for WatchlistCreationError);
    atomic_store(result, (unint64_t *)&qword_1F034DFA0);
  }
  return result;
}

_QWORD *sub_1DC1CDADC(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void *v15;
  void (*v16)(char *, uint64_t);
  void *v17;
  char *v18;
  uint64_t v19;
  uint64_t v21;
  _QWORD *v22;
  char *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD aBlock[5];
  _QWORD *v30;

  v25 = sub_1DC40724C();
  v28 = *(_QWORD *)(v25 - 8);
  MEMORY[0x1E0C80A78](v25);
  v23 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1DC407270();
  v26 = *(_QWORD *)(v4 - 8);
  v27 = v4;
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1DC407294();
  v8 = *(_QWORD *)(v7 - 8);
  v21 = v7;
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v21 - v12;
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  sub_1DC089DA4(0, &qword_1EDB427E0, (uint64_t (*)(uint64_t))sub_1DC18816C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB3938]);
  swift_allocObject();
  v1[2] = sub_1DC402734();
  v22 = v1 + 3;
  v24 = a1;
  sub_1DC0824D4((uint64_t)a1, (uint64_t)(v1 + 3));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC081B48((unint64_t *)&unk_1EDB42830, v14, (uint64_t (*)(uint64_t))type metadata accessor for GoToWatchlistMenuGroupOptionProvider, (uint64_t)&unk_1DC415768);
  swift_retain();
  sub_1DC400AB4();
  swift_release();
  sub_1DC0ACADC();
  v15 = (void *)sub_1DC409148();
  sub_1DC407288();
  MEMORY[0x1DF0C7B14](v11, 1.0);
  v16 = *(void (**)(char *, uint64_t))(v8 + 8);
  v16(v11, v7);
  aBlock[4] = sub_1DC1CDFAC;
  v30 = v1;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1DC081B88;
  aBlock[3] = &block_descriptor_11;
  v17 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  sub_1DC407264();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  sub_1DC081B48(&qword_1EDB275A0, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  sub_1DC1130A0(0);
  sub_1DC081B48((unint64_t *)&qword_1EDB3F720, 255, (uint64_t (*)(uint64_t))sub_1DC1130A0, MEMORY[0x1E0DEAF38]);
  v18 = v23;
  v19 = v25;
  sub_1DC40964C();
  MEMORY[0x1DF0C9998](v13, v6, v18, v17);
  _Block_release(v17);

  (*(void (**)(char *, uint64_t))(v28 + 8))(v18, v19);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v6, v27);
  v16(v13, v21);
  __swift_project_boxed_opaque_existential_1(v22, v1[6]);
  swift_retain();
  aBlock[0] = sub_1DC400ACC();
  sub_1DC1CDFB4();
  sub_1DC402764();
  swift_bridgeObjectRelease();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
  return v1;
}

uint64_t sub_1DC1CDE80(uint64_t a1)
{
  __swift_project_boxed_opaque_existential_1((_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 48));
  swift_retain();
  sub_1DC400ACC();
  sub_1DC1CDFB4();
  sub_1DC402764();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t type metadata accessor for GoToWatchlistMenuGroupOptionProvider()
{
  return objc_opt_self();
}

uint64_t sub_1DC1CDF28()
{
  uint64_t v0;

  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 48));
  swift_retain();
  sub_1DC400ACC();
  sub_1DC1CDFB4();
  sub_1DC402764();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_1DC1CDFAC()
{
  uint64_t v0;

  return sub_1DC1CDE80(v0);
}

unint64_t sub_1DC1CDFB4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_1EDB42898;
  if (!qword_1EDB42898)
  {
    sub_1DC18816C();
    v2 = v1;
    v3 = sub_1DC081B48(&qword_1EDB28E38, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF270], MEMORY[0x1E0DAF280]);
    result = MEMORY[0x1DF0CAB8C](MEMORY[0x1E0DEAF30], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1EDB42898);
  }
  return result;
}

uint64_t *sub_1DC1CE030(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v7 = sub_1DC4010E4();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 2, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 2, v7);
    }
  }
  return a1;
}

void *sub_1DC1CE0F8(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;

  v6 = sub_1DC4010E4();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 2, v6);
  v10 = v8(a2, 2, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 24))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  return a1;
}

void *sub_1DC1CE1E8(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1DC4010E4();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 2, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  }
  return a1;
}

void *sub_1DC1CE28C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;

  v6 = sub_1DC4010E4();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 2, v6);
  v10 = v8(a2, 2, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 40))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  return a1;
}

uint64_t sub_1DC1CE37C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC1CE388(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  v4 = sub_1DC4010E4();
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 3)
    return v5 - 2;
  else
    return 0;
}

uint64_t sub_1DC1CE3D4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC1CE3E0(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 2);
  else
    v5 = 0;
  v6 = sub_1DC4010E4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, v5, a3, v6);
}

uint64_t sub_1DC1CE434(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1DC4010E4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 2, v2);
}

uint64_t sub_1DC1CE46C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1DC4010E4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, 2, v4);
}

uint64_t sub_1DC1CE4B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int v9;
  uint64_t v10;
  uint64_t v12;

  v1 = v0;
  v2 = sub_1DC4010E4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC1CE5D0(v1, (uint64_t)v8);
  v9 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 2, v2);
  if (v9)
  {
    if (v9 == 1)
      return 0x7961646F74;
    else
      return 1701736302;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    v10 = sub_1DC40103C();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return v10;
}

uint64_t sub_1DC1CE5D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for StockListSelectionModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC1CE614(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(char *, uint64_t, uint64_t);
  int v17;
  char v18;
  uint64_t (*v19)(_QWORD);
  void (*v20)(char *, uint64_t);
  uint64_t v22;

  v4 = sub_1DC4010E4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for StockListSelectionModel();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC1CE804();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (uint64_t)&v13[*(int *)(v14 + 48)];
  sub_1DC1CE5D0(a1, (uint64_t)v13);
  sub_1DC1CE5D0(a2, v15);
  v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48);
  v17 = v16(v13, 2, v4);
  if (v17)
  {
    if (v17 == 1)
    {
      if (v16((char *)v15, 2, v4) != 1)
        goto LABEL_9;
      goto LABEL_8;
    }
    if (v16((char *)v15, 2, v4) == 2)
    {
LABEL_8:
      v18 = 1;
LABEL_11:
      v19 = (uint64_t (*)(_QWORD))type metadata accessor for StockListSelectionModel;
      goto LABEL_12;
    }
  }
  else
  {
    sub_1DC1CE5D0((uint64_t)v13, (uint64_t)v10);
    if (!v16((char *)v15, 2, v4))
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v7, v15, v4);
      v18 = MEMORY[0x1DF0C18C8](v10, v7);
      v20 = *(void (**)(char *, uint64_t))(v5 + 8);
      v20(v7, v4);
      v20(v10, v4);
      goto LABEL_11;
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  }
LABEL_9:
  v18 = 0;
  v19 = (uint64_t (*)(_QWORD))sub_1DC1CE804;
LABEL_12:
  sub_1DC0926D8((uint64_t)v13, v19);
  return v18 & 1;
}

void sub_1DC1CE804()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EDB35248)
  {
    type metadata accessor for StockListSelectionModel();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EDB35248);
  }
}

uint64_t destroy for StockFeedNewsExpandDataBlueprintModifier(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return __swift_destroy_boxed_opaque_existential_1(a1 + 40);
}

uint64_t initializeWithCopy for StockFeedNewsExpandDataBlueprintModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v5 = a2 + 40;
  v6 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 64) = v6;
  v7 = v6;
  v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  v8(a1 + 40, v5, v7);
  return a1;
}

_QWORD *assignWithCopy for StockFeedNewsExpandDataBlueprintModifier(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_retain();
  swift_release();
  __swift_assign_boxed_opaque_existential_1(a1 + 5, a2 + 5);
  return a1;
}

uint64_t assignWithTake for StockFeedNewsExpandDataBlueprintModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a1 + 40);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  return a1;
}

uint64_t getEnumTagSinglePayload for StockFeedNewsExpandDataBlueprintModifier(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 80))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for StockFeedNewsExpandDataBlueprintModifier(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 80) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for StockFeedNewsExpandDataBlueprintModifier()
{
  return &type metadata for StockFeedNewsExpandDataBlueprintModifier;
}

uint64_t sub_1DC1CEAF0(uint64_t a1, void (*a2)(uint64_t *), uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char v78;
  char *v79;
  uint64_t v80;
  uint64_t *v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD v84[3];
  uint64_t v85;
  uint64_t *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  char *v91;
  char *v92;
  char *v93;
  char *v94;
  char *v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  char *v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  char *v107;
  char *v108;
  char *v109;
  char *v110;
  char *v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  void (*v115)(uint64_t *);
  char *v116;
  char *v117;
  char *v118;
  char *v119;
  char *v120;
  char *v121;
  uint64_t v122;
  char *v123;
  char *v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;

  v114 = a3;
  v115 = a2;
  v99 = sub_1DC404984();
  v98 = *(_QWORD *)(v99 - 8);
  MEMORY[0x1E0C80A78](v99);
  v97 = (char *)v84 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC1D0DEC(0, &qword_1EDB2A278, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB9A28]);
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v10 = (_QWORD *)((char *)v84 - v9);
  v113 = sub_1DC407300();
  v122 = *(_QWORD *)(v113 - 8);
  MEMORY[0x1E0C80A78](v113);
  v118 = (char *)v84 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v96 = type metadata accessor for NewsStockFeedGroup();
  MEMORY[0x1E0C80A78](v96);
  v111 = (char *)v84 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v95 = (char *)v84 - v14;
  MEMORY[0x1E0C80A78](v15);
  v110 = (char *)v84 - v16;
  v139 = type metadata accessor for StockFeedModel();
  MEMORY[0x1E0C80A78](v139);
  v140 = (char *)v84 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC08CBF0(0, (unint64_t *)&qword_1EDB29BC0, v18, sub_1DC157A1C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6EE8]);
  v136 = v19;
  v125 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v112 = (char *)v84 - v20;
  sub_1DC142434();
  MEMORY[0x1E0C80A78](v21);
  v130 = (char *)v84 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v138 = type metadata accessor for StockFeedSectionDescriptor();
  MEMORY[0x1E0C80A78](v138);
  v101 = (char *)v84 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v24);
  v100 = (char *)v84 - v25;
  MEMORY[0x1E0C80A78](v26);
  v129 = (char *)v84 - v27;
  v105 = type metadata accessor for NewsPlacardStockFeedGroup();
  MEMORY[0x1E0C80A78](v105);
  v93 = (char *)v84 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v29);
  v103 = (char *)v84 - v30;
  MEMORY[0x1E0C80A78](v31);
  v109 = (char *)v84 - v32;
  MEMORY[0x1E0C80A78](v33);
  v92 = (char *)v84 - v34;
  MEMORY[0x1E0C80A78](v35);
  v102 = (char *)v84 - v36;
  MEMORY[0x1E0C80A78](v37);
  v108 = (char *)v84 - v38;
  v39 = sub_1DC407C84();
  v131 = *(_QWORD *)(v39 - 8);
  v132 = v39;
  MEMORY[0x1E0C80A78](v39);
  v121 = (char *)v84 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v41);
  v126 = (char *)v84 - v42;
  MEMORY[0x1E0C80A78](v43);
  v91 = (char *)v84 - v44;
  v137 = type metadata accessor for StockFeedGroup();
  v88 = *(_QWORD *)(v137 - 8);
  MEMORY[0x1E0C80A78](v137);
  v107 = (char *)v84 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v46);
  v117 = (char *)v84 - v47;
  MEMORY[0x1E0C80A78](v48);
  v120 = (char *)v84 - v49;
  MEMORY[0x1E0C80A78](v50);
  v106 = (char *)v84 - v51;
  MEMORY[0x1E0C80A78](v52);
  v116 = (char *)v84 - v53;
  MEMORY[0x1E0C80A78](v54);
  v119 = (char *)v84 - v55;
  MEMORY[0x1E0C80A78](v56);
  v90 = (char *)v84 - v57;
  MEMORY[0x1E0C80A78](v58);
  v89 = (char *)v84 - v59;
  sub_1DC1D0DEC(0, (unint64_t *)&qword_1EDB2AB10, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790]);
  v61 = v60;
  v104 = *(_QWORD *)(v60 - 8);
  MEMORY[0x1E0C80A78](v60);
  v135 = (char *)v84 - v62;
  sub_1DC142D3C();
  MEMORY[0x1E0C80A78](v63);
  v65 = (char *)v84 - ((v64 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC1D0DEC(0, (unint64_t *)&qword_1EDB29D60, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60]);
  v67 = v66;
  v68 = *(_QWORD *)(v66 - 8);
  MEMORY[0x1E0C80A78](v66);
  v124 = (char *)v84 - ((v69 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v70);
  v123 = (char *)v84 - v71;
  MEMORY[0x1E0C80A78](v72);
  v94 = (char *)v84 - v73;
  MEMORY[0x1E0C80A78](v74);
  v76 = (char *)v84 - v75;
  v133 = v3;
  v134 = v61;
  sub_1DC406CC4();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v68 + 48))(v65, 1, v67) == 1)
  {
    sub_1DC0926D8((uint64_t)v65, (uint64_t (*)(_QWORD))sub_1DC142D3C);
    sub_1DC1D0E94();
    *v10 = swift_allocError();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E0DB99F0], v7);
    v115(v10);
    return (*(uint64_t (**)(uint64_t *, uint64_t))(v8 + 8))(v10, v7);
  }
  else
  {
    v86 = v10;
    v85 = v8;
    v87 = v7;
    (*(void (**)(char *, char *, uint64_t))(v68 + 32))(v76, v65, v67);
    sub_1DC27ACDC((uint64_t)v76);
    if ((v78 & 1) == 0)
    {
      v84[2] = v76;
      (*(void (**)(char *, uint64_t, uint64_t))(v104 + 16))(v135, a1, v134);
      v79 = (char *)&loc_1DC1CF30C + *((int *)qword_1DC1D0D28 + (*(_QWORD *)(v133 + 32) >> 61));
      v127 = v67;
      v128 = v68;
      v84[1] = a1;
      __asm { BR              X10 }
    }
    sub_1DC1D0E94();
    v80 = swift_allocError();
    v81 = v86;
    *v86 = v80;
    v82 = v85;
    v83 = v87;
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(v85 + 104))(v81, *MEMORY[0x1E0DB99F0], v87);
    v115(v81);
    (*(void (**)(uint64_t *, uint64_t))(v82 + 8))(v81, v83);
    return (*(uint64_t (**)(char *, uint64_t))(v68 + 8))(v76, v67);
  }
}

unint64_t sub_1DC1D0D44()
{
  unint64_t result;

  result = qword_1EDB3E360;
  if (!qword_1EDB3E360)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC41587C, &type metadata for StockFeedNewsExpandDataBlueprintModifier);
    atomic_store(result, (unint64_t *)&qword_1EDB3E360);
  }
  return result;
}

uint64_t sub_1DC1D0D8C(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    sub_1DC08CBF0(255, (unint64_t *)&qword_1EDB29BC0, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedModel, sub_1DC157A1C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6EE8]);
    result = MEMORY[0x1DF0CAB8C](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1DC1D0DEC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *))
{
  unint64_t v6;
  uint64_t v7;
  _QWORD v8[4];

  if (!*a2)
  {
    v8[0] = type metadata accessor for StockFeedSectionDescriptor();
    v8[1] = type metadata accessor for StockFeedModel();
    v8[2] = sub_1DC080808(&qword_1EDB36EE0, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedSectionDescriptor, (uint64_t)&unk_1DC4167B0);
    v8[3] = sub_1DC157A1C();
    v6 = a3(a1, v8);
    if (!v7)
      atomic_store(v6, a2);
  }
}

unint64_t sub_1DC1D0E94()
{
  unint64_t result;

  result = qword_1F034DFA8;
  if (!qword_1F034DFA8)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC415974, &type metadata for StockFeedNewsExpandDataBlueprintModifier.ModifierError);
    atomic_store(result, (unint64_t *)&qword_1F034DFA8);
  }
  return result;
}

uint64_t sub_1DC1D0ED8()
{
  return sub_1DC080808(&qword_1EDB33F10, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedServiceConfig, (uint64_t)&unk_1DC411510);
}

uint64_t sub_1DC1D0EF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1DC2C5598(a1, *(_BYTE **)(v2 + 16), *(uint64_t **)(v2 + 24), *(_QWORD **)(v2 + 32), a2);
}

void sub_1DC1D0F14()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1F034DFB0)
  {
    type metadata accessor for StockFeedGroup();
    sub_1DC08CBF0(255, &qword_1EDB41E40, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedServiceConfig, sub_1DC1D0ED8, MEMORY[0x1E0D5B0D8]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1F034DFB0);
  }
}

uint64_t storeEnumTagSinglePayload for StockFeedNewsExpandDataBlueprintModifier.ModifierError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1DC1D0FE0 + 4 * byte_1DC415840[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1DC1D1000 + 4 * byte_1DC415845[v4]))();
}

_BYTE *sub_1DC1D0FE0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1DC1D1000(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC1D1008(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC1D1010(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC1D1018(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC1D1020(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for StockFeedNewsExpandDataBlueprintModifier.ModifierError()
{
  return &type metadata for StockFeedNewsExpandDataBlueprintModifier.ModifierError;
}

unint64_t sub_1DC1D1040()
{
  unint64_t result;

  result = qword_1F034DFB8;
  if (!qword_1F034DFB8)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC41594C, &type metadata for StockFeedNewsExpandDataBlueprintModifier.ModifierError);
    atomic_store(result, (unint64_t *)&qword_1F034DFB8);
  }
  return result;
}

uint64_t sub_1DC1D1084@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DC1D0EF4(a1, a2);
}

uint64_t sub_1DC1D1098(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v21[5];
  _BYTE v22[24];
  uint64_t v23;

  sub_1DC0824D4(v2 + 16, (uint64_t)v22);
  v5 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v22, v23);
  v6 = MEMORY[0x1E0C80A78](v5);
  v8 = (_QWORD *)((char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v9 + 16))(v8, v6);
  v10 = *v8;
  v11 = type metadata accessor for StockChartStyler();
  v21[3] = v11;
  v21[4] = &off_1EA450010;
  v21[0] = v10;
  type metadata accessor for StockChartPriceLabelFormatter();
  v12 = swift_allocObject();
  v13 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v21, v11);
  v14 = MEMORY[0x1E0C80A78](v13);
  v16 = (_QWORD *)((char *)v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v17 + 16))(v16, v14);
  v18 = *v16;
  *(_QWORD *)(v12 + 40) = v11;
  *(_QWORD *)(v12 + 48) = &off_1EA450010;
  *(_QWORD *)(v12 + 16) = v18;
  type metadata accessor for PriceFormatter();
  v19 = swift_allocObject();
  sub_1DC4000B8();
  *(_QWORD *)(v12 + 72) = v19;
  *(_QWORD *)(v12 + 56) = a1;
  *(_BYTE *)(v12 + 64) = a2;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
  return v12;
}

uint64_t sub_1DC1D1208(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v28[5];
  _BYTE v29[24];
  uint64_t v30;

  v5 = sub_1DC4002BC();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1DC400F7C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0824D4(v2 + 16, (uint64_t)v29);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a1, v9);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a2, v5);
  v13 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v29, v30);
  v14 = MEMORY[0x1E0C80A78](v13);
  v16 = (_QWORD *)((char *)v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v17 + 16))(v16, v14);
  v18 = *v16;
  v19 = type metadata accessor for StockChartStyler();
  v28[3] = v19;
  v28[4] = &off_1EA450010;
  v28[0] = v18;
  type metadata accessor for StockChartCategoryLabelFormatter();
  v20 = swift_allocObject();
  v21 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v28, v19);
  v22 = MEMORY[0x1E0C80A78](v21);
  v24 = (_QWORD *)((char *)v28 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v25 + 16))(v24, v22);
  v26 = sub_1DC1D1414(*v24, (uint64_t)v12, (uint64_t)v8, v20);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
  return v26;
}

uint64_t type metadata accessor for StockChartLabelFormatterFactory()
{
  return objc_opt_self();
}

uint64_t sub_1DC1D1414(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  _UNKNOWN **v23;

  v8 = sub_1DC4001CC();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for StockChartStyler();
  v23 = &off_1EA450010;
  *(_QWORD *)&v21 = a1;
  v12 = a4 + OBJC_IVAR____TtC8StocksUI32StockChartCategoryLabelFormatter_calendar;
  v13 = objc_msgSend((id)objc_opt_self(), sel_currentCalendar);
  sub_1DC40016C();

  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v12, v11, v8);
  v14 = OBJC_IVAR____TtC8StocksUI32StockChartCategoryLabelFormatter_dateFormatters;
  *(_QWORD *)(a4 + v14) = sub_1DC1A1D84(MEMORY[0x1E0DEE9D8]);
  sub_1DC097DD0(&v21, a4 + 16);
  v15 = a4 + OBJC_IVAR____TtC8StocksUI32StockChartCategoryLabelFormatter_chart;
  v16 = sub_1DC400F7C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v15, a2, v16);
  v17 = a4 + OBJC_IVAR____TtC8StocksUI32StockChartCategoryLabelFormatter_chartRange;
  v18 = sub_1DC4002BC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v17, a3, v18);
  return a4;
}

uint64_t destroy for DateRangePickerLayoutAttributes()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for DateRangePickerLayoutAttributes(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for DateRangePickerLayoutAttributes(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for DateRangePickerLayoutAttributes(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DateRangePickerLayoutAttributes(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DateRangePickerLayoutAttributes(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 32) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DateRangePickerLayoutAttributes()
{
  return &type metadata for DateRangePickerLayoutAttributes;
}

uint64_t sub_1DC1D16E8()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocObject();
}

uint64_t sub_1DC1D170C()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);

  return swift_deallocObject();
}

_QWORD *sub_1DC1D1738(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t ObjectType;
  void (*v10)(uint64_t, _UNKNOWN **, uint64_t, uint64_t);
  uint64_t v11;
  _QWORD v13[5];

  v13[3] = type metadata accessor for TickerRouter();
  v13[4] = &off_1EA45CE10;
  v13[0] = a3;
  a4[3] = 0;
  swift_unknownObjectWeakInit();
  a4[4] = a1;
  a4[5] = a2;
  sub_1DC0824D4((uint64_t)v13, (uint64_t)(a4 + 6));
  v8 = a4[5];
  ObjectType = swift_getObjectType();
  v10 = *(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v8 + 16);
  swift_unknownObjectRetain();
  v11 = swift_retain();
  v10(v11, &off_1EA452728, ObjectType, v8);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
  return a4;
}

_QWORD *sub_1DC1D17F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  _QWORD *v5;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;

  v5[3] = 0;
  swift_unknownObjectWeakInit();
  v11 = MEMORY[0x1E0DEE9E8];
  v5[4] = a3;
  v5[5] = a4;
  v5[8] = a5;
  v5[9] = v11;
  v5[6] = a1;
  v5[7] = a2;
  *(_QWORD *)(a1 + 24) = &off_1EA45CBB8;
  swift_unknownObjectWeakAssign();
  v12 = (void *)objc_opt_self();
  swift_retain();
  swift_retain();
  v13 = a5;
  swift_unknownObjectRetain();
  v14 = objc_msgSend(v12, sel_defaultCenter);
  objc_msgSend(v14, sel_addObserver_selector_name_object_, v5, sel_handleAccessibilitySettingsChangedWithNotification_, *MEMORY[0x1E0DC46F0], 0);

  return v5;
}

id sub_1DC1D18EC()
{
  return sub_1DC1D192C(0, type metadata accessor for StockSparklineView.NonAnimatingDelegate);
}

id sub_1DC1D1920(uint64_t a1)
{
  return sub_1DC1D192C(a1, type metadata accessor for StockSparklineView);
}

id sub_1DC1D192C(uint64_t a1, uint64_t (*a2)(void))
{
  void *v2;
  objc_super v4;

  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return objc_msgSendSuper2(&v4, sel_dealloc);
}

void sub_1DC1D19A4()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = OBJC_IVAR____TtC8StocksUI18StockSparklineView_sparklineView;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone((Class)sub_1DC408590()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v2 = OBJC_IVAR____TtC8StocksUI18StockSparklineView_baselineIndicatorLayer;
  *(_QWORD *)&v0[v2] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CD2840]), sel_init);
  v3 = OBJC_IVAR____TtC8StocksUI18StockSparklineView_nonAnimatingDelegate;
  *(_QWORD *)&v0[v3] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for StockSparklineView.NonAnimatingDelegate()), sel_init);

  sub_1DC409838();
  __break(1u);
}

uint64_t sub_1DC1D1A80(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  _BYTE v9[41];

  v3 = a2[3];
  v4 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v3);
  v5 = *(_QWORD *)(v4 + 8);
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 8);
  *(_QWORD *)&v9[25] = v3;
  *(_QWORD *)&v9[33] = v4;
  __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v9[1]);
  v6(a1, v3, v5);
  sub_1DC1D1B88();
  v7 = *(_QWORD *)(v4 + 16);
  (*(void (**)(uint64_t, uint64_t))(v7 + 56))(v3, v7);
  (*(void (**)(_BYTE *__return_ptr, uint64_t, uint64_t))(v7 + 32))(v9, v3, v7);
  sub_1DC406298();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v9[1]);
}

uint64_t sub_1DC1D1B5C()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocObject();
}

uint64_t sub_1DC1D1B80(uint64_t a1)
{
  uint64_t v1;

  return sub_1DC1D1A80(a1, (_QWORD *)(v1 + 16));
}

unint64_t sub_1DC1D1B88()
{
  unint64_t result;

  result = qword_1F034E040;
  if (!qword_1F034E040)
  {
    result = MEMORY[0x1DF0CAB8C](&protocol conformance descriptor for Settings.Welcome.Animations.DismissFade, &type metadata for Settings.Welcome.Animations.DismissFade);
    atomic_store(result, (unint64_t *)&qword_1F034E040);
  }
  return result;
}

uint64_t *sub_1DC1D1BCC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1DC401030();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      sub_1DC092F50(0, &qword_1EDB28DC0, (void (*)(uint64_t))MEMORY[0x1E0DAF040]);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v11 = *(int *)(a3 + 20);
    v12 = (char *)a1 + v11;
    v13 = (char *)a2 + v11;
    v14 = sub_1DC400370();
    v15 = *(_QWORD *)(v14 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
    {
      sub_1DC092F50(0, &qword_1EDB28BA0, (void (*)(uint64_t))MEMORY[0x1E0DAE188]);
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v12, v13, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    }
  }
  return a1;
}

uint64_t sub_1DC1D1D44(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  v4 = sub_1DC401030();
  v5 = *(_QWORD *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  v6 = a1 + *(int *)(a2 + 20);
  v7 = sub_1DC400370();
  v8 = *(_QWORD *)(v7 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  return result;
}

char *sub_1DC1D1DF0(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = sub_1DC401030();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    sub_1DC092F50(0, &qword_1EDB28DC0, (void (*)(uint64_t))MEMORY[0x1E0DAF040]);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = *(int *)(a3 + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = sub_1DC400370();
  v13 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
  {
    sub_1DC092F50(0, &qword_1EDB28BA0, (void (*)(uint64_t))MEMORY[0x1E0DAE188]);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  return a1;
}

char *sub_1DC1D1F3C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(char *, uint64_t, uint64_t);
  int v18;
  int v19;
  uint64_t v20;

  v6 = sub_1DC401030();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    sub_1DC092F50(0, &qword_1EDB28DC0, (void (*)(uint64_t))MEMORY[0x1E0DAF040]);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
LABEL_7:
  v12 = *(int *)(a3 + 20);
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = sub_1DC400370();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  v18 = v17(v13, 1, v15);
  v19 = v17(v14, 1, v15);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 24))(v13, v14, v15);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v16 + 8))(v13, v15);
    goto LABEL_12;
  }
  if (v19)
  {
LABEL_12:
    sub_1DC092F50(0, &qword_1EDB28BA0, (void (*)(uint64_t))MEMORY[0x1E0DAE188]);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  return a1;
}

char *sub_1DC1D2118(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = sub_1DC401030();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    sub_1DC092F50(0, &qword_1EDB28DC0, (void (*)(uint64_t))MEMORY[0x1E0DAF040]);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = *(int *)(a3 + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = sub_1DC400370();
  v13 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
  {
    sub_1DC092F50(0, &qword_1EDB28BA0, (void (*)(uint64_t))MEMORY[0x1E0DAE188]);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  return a1;
}

char *sub_1DC1D2264(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(char *, uint64_t, uint64_t);
  int v18;
  int v19;
  uint64_t v20;

  v6 = sub_1DC401030();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    sub_1DC092F50(0, &qword_1EDB28DC0, (void (*)(uint64_t))MEMORY[0x1E0DAF040]);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
LABEL_7:
  v12 = *(int *)(a3 + 20);
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = sub_1DC400370();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  v18 = v17(v13, 1, v15);
  v19 = v17(v14, 1, v15);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 40))(v13, v14, v15);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v16 + 8))(v13, v15);
    goto LABEL_12;
  }
  if (v19)
  {
LABEL_12:
    sub_1DC092F50(0, &qword_1EDB28BA0, (void (*)(uint64_t))MEMORY[0x1E0DAE188]);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v13, v14, v15);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  return a1;
}

uint64_t sub_1DC1D2440()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC1D244C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_1DC092F50(0, &qword_1EDB28DC0, (void (*)(uint64_t))MEMORY[0x1E0DAF040]);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1DC092F50(0, &qword_1EDB28BA0, (void (*)(uint64_t))MEMORY[0x1E0DAE188]);
    v8 = v11;
    v12 = *(_QWORD *)(v11 - 8);
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t sub_1DC1D24E0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC1D24EC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1DC092F50(0, &qword_1EDB28DC0, (void (*)(uint64_t))MEMORY[0x1E0DAF040]);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1DC092F50(0, &qword_1EDB28BA0, (void (*)(uint64_t))MEMORY[0x1E0DAE188]);
    v10 = v13;
    v14 = *(_QWORD *)(v13 - 8);
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for StockFeedQuoteData()
{
  uint64_t result;

  result = qword_1EDB27930;
  if (!qword_1EDB27930)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1DC1D25C4()
{
  unint64_t v0;
  unint64_t v1;

  sub_1DC092F50(319, &qword_1EDB28DC0, (void (*)(uint64_t))MEMORY[0x1E0DAF040]);
  if (v0 <= 0x3F)
  {
    sub_1DC092F50(319, &qword_1EDB28BA0, (void (*)(uint64_t))MEMORY[0x1E0DAE188]);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

id sub_1DC1D2668()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  void *v8;
  id v9;
  id result;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t ObjCClassFromMetadata;
  id v16;
  void *v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char *v24;
  char v25;
  void (*v26)(char *, uint64_t);
  id v27;
  void *v28;
  void *v29;
  id v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  id v38;
  id v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(char *, unint64_t, uint64_t);
  char *v45;
  char *v46;
  _QWORD aBlock[6];

  v1 = v0;
  v2 = sub_1DC407E94();
  v43 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v46 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v37 - v5;
  _s8StocksUI16OfflineAlertableV5titleSSSgvg_0();
  _s8StocksUI16OfflineAlertableV7messageSSSgvg_0();
  v7 = (void *)sub_1DC408A1C();
  swift_bridgeObjectRelease();
  v8 = (void *)sub_1DC408A1C();
  swift_bridgeObjectRelease();
  v9 = objc_msgSend((id)objc_opt_self(), sel_alertControllerWithTitle_message_preferredStyle_, v7, v8, 1);

  result = objc_msgSend(v9, sel_view);
  if (result)
  {
    v11 = result;
    v13 = v1[5];
    v12 = v1[6];
    __swift_project_boxed_opaque_existential_1(v1 + 2, v13);
    v14 = (void *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)(v12 + 16) + 112))(v13);
    objc_msgSend(v11, sel_setTintColor_, v14);

    type metadata accessor for Localized();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    v40 = (id)objc_opt_self();
    v41 = ObjCClassFromMetadata;
    v16 = objc_msgSend(v40, sel_bundleForClass_, ObjCClassFromMetadata);
    sub_1DC3FFC80();

    v17 = (void *)sub_1DC408A1C();
    swift_bridgeObjectRelease();
    v18 = (void *)objc_opt_self();
    v19 = objc_msgSend(v18, sel_actionWithTitle_style_handler_, v17, 0, 0);

    objc_msgSend(v9, sel_addAction_, v19);
    v20 = sub_1DC407EA0();
    v21 = v43;
    (*(void (**)(char *, _QWORD, uint64_t))(v43 + 104))(v6, *MEMORY[0x1E0D5D6C8], v2);
    v22 = *(_QWORD *)(v20 + 16);
    if (v22)
    {
      v38 = v18;
      v39 = v9;
      v23 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
      v42 = v20;
      v24 = v46;
      v44 = *(void (**)(char *, unint64_t, uint64_t))(v21 + 16);
      v44(v46, v20 + v23, v2);
      sub_1DC080808((unint64_t *)&qword_1F034E050, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5D6D0], MEMORY[0x1E0D5D6D8]);
      v45 = v6;
      v25 = sub_1DC4089F8();
      v26 = *(void (**)(char *, uint64_t))(v21 + 8);
      v26(v24, v2);
      if ((v25 & 1) != 0)
      {
LABEL_4:
        v26(v45, v2);
        swift_bridgeObjectRelease();
        v27 = objc_msgSend(v40, sel_bundleForClass_, v41);
        sub_1DC3FFC80();

        v28 = (void *)sub_1DC408A1C();
        swift_bridgeObjectRelease();
        aBlock[4] = sub_1DC1D2B98;
        aBlock[5] = 0;
        aBlock[0] = MEMORY[0x1E0C809B0];
        aBlock[1] = 1107296256;
        aBlock[2] = sub_1DC149854;
        aBlock[3] = &block_descriptor_12;
        v29 = _Block_copy(aBlock);
        swift_release();
        v30 = objc_msgSend(v38, sel_actionWithTitle_style_handler_, v28, 0, v29);
        _Block_release(v29);

        v9 = v39;
        objc_msgSend(v39, sel_addAction_, v30);

        return v9;
      }
      if (v22 != 1)
      {
        v31 = *(_QWORD *)(v21 + 72);
        v32 = v42 + v31 + v23;
        v33 = 1;
        v34 = v46;
        while (1)
        {
          result = (id)((uint64_t (*)(char *, unint64_t, uint64_t))v44)(v34, v32, v2);
          v35 = v33 + 1;
          if (__OFADD__(v33, 1))
            break;
          v36 = sub_1DC4089F8();
          v26(v34, v2);
          if ((v36 & 1) != 0)
            goto LABEL_4;
          ++v33;
          v32 += v31;
          if (v35 == v22)
            goto LABEL_11;
        }
        __break(1u);
        goto LABEL_15;
      }
LABEL_11:
      v9 = v39;
      v26(v45, v2);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v21 + 8))(v6, v2);
    }
    swift_bridgeObjectRelease();
    return v9;
  }
LABEL_15:
  __break(1u);
  return result;
}

id sub_1DC1D2B98()
{
  return objc_msgSend((id)objc_opt_self(), sel_launchSettings);
}

id sub_1DC1D2BBC()
{
  return sub_1DC1D2668();
}

uint64_t sub_1DC1D2BE0(uint64_t a1)
{
  uint64_t *boxed_opaque_existential_1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6[5];

  v6[3] = type metadata accessor for OfflineAlertable();
  v6[4] = sub_1DC080808(&qword_1F034E048, (uint64_t (*)(uint64_t))type metadata accessor for OfflineAlertable, (uint64_t)&protocol conformance descriptor for OfflineAlertable);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v6);
  v3 = sub_1DC407EAC();
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(boxed_opaque_existential_1, a1, v3);
  sub_1DC406808();
  swift_allocObject();
  v4 = sub_1DC4067CC();
  sub_1DC4067FC();
  swift_release();
  return v4;
}

uint64_t sub_1DC1D2C9C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;

  __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + qword_1F034E068), *(_QWORD *)(v1 + qword_1F034E068 + 24));
  switch(sub_1DC4077C8())
  {
    case 0:
      sub_1DC1C0608();
      v11 = v13;
      v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56);
      v9 = a1;
      v10 = 1;
      goto LABEL_7;
    case 1:
      sub_1DC1C0608();
      v4 = v7;
      sub_1DC4081F4();
      sub_1DC4081F4();
      goto LABEL_6;
    case 3:
      sub_1DC408FC8();
      sub_1DC09BDF8();
      v5 = (void *)sub_1DC409580();
      sub_1DC403F28();

      goto LABEL_4;
    case 4:
    case 5:
      sub_1DC1C0608();
      v4 = v3;
      sub_1DC408200();
      sub_1DC408200();
      goto LABEL_6;
    case 6:
LABEL_4:
      sub_1DC1C0608();
      v4 = v6;
      sub_1DC40820C();
      sub_1DC40820C();
LABEL_6:
      v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56);
      v9 = a1;
      v10 = 0;
      v11 = v4;
LABEL_7:
      result = v8(v9, v10, 1, v11);
      break;
    default:
      result = sub_1DC409838();
      __break(1u);
      break;
  }
  return result;
}

void sub_1DC1D2EBC(void *a1)
{
  swift_unknownObjectRetain();
  a1;
  sub_1DC1D36C8();
}

void sub_1DC1D2EEC()
{
  void *v0;

  swift_unknownObjectRelease();

}

void sub_1DC1D2F08()
{
  sub_1DC1D379C();
}

uint64_t sub_1DC1D2F28(uint64_t a1)
{
  sub_1DC0E81D0(*(_QWORD *)(a1 + qword_1F034E060));
  return __swift_destroy_boxed_opaque_existential_1(a1 + qword_1F034E068);
}

uint64_t sub_1DC1D2F64()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_1DC1D2F6C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1DC407EAC();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t *sub_1DC1D2FD8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t *, uint64_t *, uint64_t);

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    sub_1DC1C0608();
    v8 = v7;
    v9 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v9 + 48))(a2, 1, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v11 = sub_1DC407EAC();
      v12 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
      v12(a1, a2, v11);
      v12((uint64_t *)((char *)a1 + *(int *)(v8 + 48)), (uint64_t *)((char *)a2 + *(int *)(v8 + 48)), v11);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
    }
  }
  return a1;
}

uint64_t sub_1DC1D30C4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);

  sub_1DC1C0608();
  v3 = v2;
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 1, v2);
  if (!(_DWORD)result)
  {
    v5 = sub_1DC407EAC();
    v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
    v6(a1, v5);
    return ((uint64_t (*)(uint64_t, uint64_t))v6)(a1 + *(int *)(v3 + 48), v5);
  }
  return result;
}

char *sub_1DC1D3164(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);

  sub_1DC1C0608();
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v9 = sub_1DC407EAC();
    v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
    v10(a1, a2, v9);
    v10(&a1[*(int *)(v7 + 48)], &a2[*(int *)(v7 + 48)], v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
  }
  return a1;
}

char *sub_1DC1D322C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(char *, uint64_t, uint64_t);
  int v10;
  int v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);

  sub_1DC1C0608();
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48);
  v10 = v9(a1, 1, v6);
  v11 = v9(a2, 1, v7);
  if (!v10)
  {
    if (!v11)
    {
      v15 = sub_1DC407EAC();
      v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 24);
      v16(a1, a2, v15);
      v16(&a1[*(int *)(v7 + 48)], &a2[*(int *)(v7 + 48)], v15);
      return a1;
    }
    sub_1DC1D335C((uint64_t)a1);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  v12 = sub_1DC407EAC();
  v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
  v13(a1, a2, v12);
  v13(&a1[*(int *)(v7 + 48)], &a2[*(int *)(v7 + 48)], v12);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
  return a1;
}

uint64_t sub_1DC1D335C(uint64_t a1)
{
  uint64_t v2;

  sub_1DC1C0608();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

char *sub_1DC1D3398(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);

  sub_1DC1C0608();
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v9 = sub_1DC407EAC();
    v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32);
    v10(a1, a2, v9);
    v10(&a1[*(int *)(v7 + 48)], &a2[*(int *)(v7 + 48)], v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
  }
  return a1;
}

char *sub_1DC1D3460(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(char *, uint64_t, uint64_t);
  int v10;
  int v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);

  sub_1DC1C0608();
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48);
  v10 = v9(a1, 1, v6);
  v11 = v9(a2, 1, v7);
  if (!v10)
  {
    if (!v11)
    {
      v15 = sub_1DC407EAC();
      v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 40);
      v16(a1, a2, v15);
      v16(&a1[*(int *)(v7 + 48)], &a2[*(int *)(v7 + 48)], v15);
      return a1;
    }
    sub_1DC1D335C((uint64_t)a1);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  v12 = sub_1DC407EAC();
  v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32);
  v13(a1, a2, v12);
  v13(&a1[*(int *)(v7 + 48)], &a2[*(int *)(v7 + 48)], v12);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
  return a1;
}

uint64_t sub_1DC1D3590()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC1D359C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  sub_1DC1C0608();
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 2)
    return v5 - 1;
  else
    return 0;
}

uint64_t sub_1DC1D35E8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC1D35F4(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 1);
  else
    v5 = 0;
  sub_1DC1C0608();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, v5, a3, v6);
}

uint64_t sub_1DC1D3644(uint64_t a1)
{
  uint64_t v2;

  sub_1DC1C0608();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 1, v2);
}

uint64_t sub_1DC1D367C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1DC1C0608();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, 1, v4);
}

void type metadata accessor for DualOfflineManager.State()
{
  JUMPOUT(0x1DF0CAAE4);
}

void sub_1DC1D36C8()
{
  type metadata accessor for DualOfflineManager.State();
}

void sub_1DC1D3708(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void (*v6)(char *);
  uint64_t v7;

  v3 = *(_QWORD *)(a1 - 8);
  MEMORY[0x1E0C80A78](a1);
  v5 = (char *)&v7 - v4;
  v6 = *(void (**)(char *))(v1 + qword_1F034E060);
  if (v6)
  {
    swift_retain();
    sub_1DC1D2C9C((uint64_t)v5);
    v6(v5);
    sub_1DC0E81D0((uint64_t)v6);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, a1);
  }
}

void sub_1DC1D379C()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t type metadata accessor for AttributionButton()
{
  return objc_opt_self();
}

uint64_t sub_1DC1D3954@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_1DC4005EC();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t type metadata accessor for ArticleRecirculationConfigurationService()
{
  return objc_opt_self();
}

uint64_t sub_1DC1D39AC()
{
  void *v0;
  uint64_t v1;

  sub_1DC40070C();
  sub_1DC402E0C();
  v0 = (void *)sub_1DC402C80();
  v1 = sub_1DC402D04();
  swift_release();

  return v1;
}

uint64_t sub_1DC1D3A24()
{
  uint64_t v0;

  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 40));
  return sub_1DC400DD8();
}

uint64_t *sub_1DC1D3A6C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
  }
  else
  {
    v7 = a1;
    v8 = *(int *)(type metadata accessor for StockFeedConfig() + 20);
    v9 = (char *)v7 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1DC3FFFEC();
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      sub_1DC092F50(0, &qword_1EDB28AC0, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    v15 = *(int *)(a3 + 20);
    v16 = (char *)v7 + v15;
    v17 = (char *)a2 + v15;
    sub_1DC12D9D0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
    v19 = type metadata accessor for NewsStockFeedGroupKnobs();
    *(_QWORD *)&v16[*(int *)(v19 + 20)] = *(_QWORD *)&v17[*(int *)(v19 + 20)];
    v20 = type metadata accessor for StockFeedKnobsConfig();
    *(_QWORD *)&v16[*(int *)(v20 + 20)] = *(_QWORD *)&v17[*(int *)(v20 + 20)];
  }
  swift_retain();
  return v7;
}

uint64_t sub_1DC1D3BD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(type metadata accessor for StockFeedConfig() + 20);
  v5 = sub_1DC3FFFEC();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  v7 = a1 + *(int *)(a2 + 20);
  sub_1DC12D9D0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  type metadata accessor for NewsStockFeedGroupKnobs();
  return swift_release();
}

_QWORD *sub_1DC1D3C8C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(char *, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  *a1 = *a2;
  v6 = *(int *)(type metadata accessor for StockFeedConfig() + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1DC3FFFEC();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  swift_bridgeObjectRetain();
  if (v11(v8, 1, v9))
  {
    sub_1DC092F50(0, &qword_1EDB28AC0, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v13 = *(int *)(a3 + 20);
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  sub_1DC12D9D0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
  v17 = type metadata accessor for NewsStockFeedGroupKnobs();
  *(_QWORD *)&v14[*(int *)(v17 + 20)] = *(_QWORD *)&v15[*(int *)(v17 + 20)];
  v18 = type metadata accessor for StockFeedKnobsConfig();
  *(_QWORD *)&v14[*(int *)(v18 + 20)] = *(_QWORD *)&v15[*(int *)(v18 + 20)];
  swift_retain();
  return a1;
}

_QWORD *sub_1DC1D3DD8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(type metadata accessor for StockFeedConfig() + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1DC3FFFEC();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    sub_1DC092F50(0, &qword_1EDB28AC0, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  v15 = *(int *)(a3 + 20);
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  sub_1DC12D9D0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = type metadata accessor for NewsStockFeedGroupKnobs();
  *(_QWORD *)&v16[*(int *)(v19 + 20)] = *(_QWORD *)&v17[*(int *)(v19 + 20)];
  swift_retain();
  swift_release();
  v20 = type metadata accessor for StockFeedKnobsConfig();
  *(_QWORD *)&v16[*(int *)(v20 + 20)] = *(_QWORD *)&v17[*(int *)(v20 + 20)];
  return a1;
}

_QWORD *sub_1DC1D3F78(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  *a1 = *a2;
  v6 = *(int *)(type metadata accessor for StockFeedConfig() + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1DC3FFFEC();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    sub_1DC092F50(0, &qword_1EDB28AC0, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v12 = *(int *)(a3 + 20);
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  sub_1DC12D9D0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
  v16 = type metadata accessor for NewsStockFeedGroupKnobs();
  *(_QWORD *)&v13[*(int *)(v16 + 20)] = *(_QWORD *)&v14[*(int *)(v16 + 20)];
  v17 = type metadata accessor for StockFeedKnobsConfig();
  *(_QWORD *)&v13[*(int *)(v17 + 20)] = *(_QWORD *)&v14[*(int *)(v17 + 20)];
  return a1;
}

_QWORD *sub_1DC1D40AC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v6 = *(int *)(type metadata accessor for StockFeedConfig() + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1DC3FFFEC();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    sub_1DC092F50(0, &qword_1EDB28AC0, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  v15 = *(int *)(a3 + 20);
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  sub_1DC12D9D0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = type metadata accessor for NewsStockFeedGroupKnobs();
  *(_QWORD *)&v16[*(int *)(v19 + 20)] = *(_QWORD *)&v17[*(int *)(v19 + 20)];
  swift_release();
  v20 = type metadata accessor for StockFeedKnobsConfig();
  *(_QWORD *)&v16[*(int *)(v20 + 20)] = *(_QWORD *)&v17[*(int *)(v20 + 20)];
  return a1;
}

uint64_t sub_1DC1D423C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC1D4248(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  v6 = type metadata accessor for StockFeedConfig();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v8 = type metadata accessor for StockFeedKnobsConfig();
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t sub_1DC1D42BC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC1D42C8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v8 = type metadata accessor for StockFeedConfig();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v10 = type metadata accessor for StockFeedKnobsConfig();
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t sub_1DC1D4344()
{
  return sub_1DC080808(&qword_1EDB2E340, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedConfig, (uint64_t)&unk_1DC4202A4);
}

uint64_t sub_1DC1D4370()
{
  return sub_1DC080808(&qword_1EDB320B0, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedKnobsConfig, (uint64_t)&unk_1DC424128);
}

uint64_t sub_1DC1D439C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;

  v73 = a2;
  v74 = a3;
  sub_1DC092F50(0, (unint64_t *)&qword_1EDB2AE68, (void (*)(uint64_t))sub_1DC12D9D0);
  MEMORY[0x1E0C80A78](v4);
  v59 = (char *)&v59 - v5;
  v6 = type metadata accessor for NewsStockFeedGroupKnobs();
  v60 = *(_QWORD *)(v6 - 8);
  v61 = v6;
  MEMORY[0x1E0C80A78](v6);
  v63 = (char *)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC092F50(0, qword_1EDB34B70, v8);
  MEMORY[0x1E0C80A78](v9);
  v72 = (char *)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v62 = (char *)&v59 - v12;
  v13 = type metadata accessor for StockFeedGroupKnobs();
  v66 = *(_QWORD *)(v13 - 8);
  v67 = v13;
  MEMORY[0x1E0C80A78](v13);
  v65 = (uint64_t)&v59 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC092F50(0, qword_1EDB31120, v15);
  MEMORY[0x1E0C80A78](v16);
  v69 = (uint64_t)&v59 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v68 = (uint64_t)&v59 - v19;
  sub_1DC092F50(0, qword_1EDB320F8, (void (*)(uint64_t))type metadata accessor for StockFeedKnobsConfig);
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v59 - v21;
  v23 = type metadata accessor for StockFeedKnobsConfig();
  v24 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  v64 = (uint64_t)&v59 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v26);
  v70 = (uint64_t)&v59 - v27;
  sub_1DC092F50(0, qword_1EDB2E388, (void (*)(uint64_t))type metadata accessor for StockFeedConfig);
  MEMORY[0x1E0C80A78](v28);
  v30 = (char *)&v59 - v29;
  v31 = type metadata accessor for StockFeedConfig();
  v32 = *(_QWORD *)(v31 - 8);
  MEMORY[0x1E0C80A78](v31);
  v34 = (char **)((char *)&v59 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0));
  v71 = a1;
  sub_1DC092F9C(a1, (uint64_t)v30, qword_1EDB2E388, (void (*)(uint64_t))type metadata accessor for StockFeedConfig);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31) == 1)
  {
    v35 = (char *)v34 + *(int *)(v31 + 20);
    sub_1DC3FFFE0();
    v36 = sub_1DC3FFFEC();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v35, 0, 1, v36);
    *v34 = MEMORY[0x1E0DEE9D8];
    sub_1DC092F14((uint64_t)v30, qword_1EDB2E388, (void (*)(uint64_t))type metadata accessor for StockFeedConfig);
  }
  else
  {
    sub_1DC092ED0((uint64_t)v30, (uint64_t)v34, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedConfig);
  }
  v38 = v73;
  v37 = v74;
  v39 = (uint64_t)v72;
  v40 = v23;
  sub_1DC092ED0((uint64_t)v34, v74, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedConfig);
  sub_1DC092F9C(v38, (uint64_t)v22, qword_1EDB320F8, (void (*)(uint64_t))type metadata accessor for StockFeedKnobsConfig);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23) == 1)
  {
    v42 = v66;
    v41 = v67;
    v43 = v68;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v66 + 56))(v68, 1, 1, v67);
    v44 = v69;
    sub_1DC092F9C(v43, v69, qword_1EDB31120, (void (*)(uint64_t))type metadata accessor for StockFeedGroupKnobs);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v42 + 48))(v44, 1, v41) == 1)
    {
      v46 = v60;
      v45 = v61;
      v47 = (uint64_t)v62;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v60 + 56))(v62, 1, 1, v61);
      sub_1DC092F9C(v47, v39, qword_1EDB34B70, (void (*)(uint64_t))type metadata accessor for NewsStockFeedGroupKnobs);
      v48 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v46 + 48))(v39, 1, v45);
      v50 = v70;
      v49 = v71;
      v51 = v63;
      if (v48 == 1)
      {
        sub_1DC12D9D0();
        v53 = (uint64_t)v59;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 56))(v59, 1, 1, v52);
        sub_1DC3DD3A8(v53, 0, v51);
        sub_1DC092F14(v47, qword_1EDB34B70, (void (*)(uint64_t))type metadata accessor for NewsStockFeedGroupKnobs);
        sub_1DC092F14(v39, qword_1EDB34B70, (void (*)(uint64_t))type metadata accessor for NewsStockFeedGroupKnobs);
      }
      else
      {
        sub_1DC092F14(v47, qword_1EDB34B70, (void (*)(uint64_t))type metadata accessor for NewsStockFeedGroupKnobs);
        sub_1DC092ED0(v39, (uint64_t)v51, (uint64_t (*)(_QWORD))type metadata accessor for NewsStockFeedGroupKnobs);
      }
      v55 = (uint64_t)v51;
      v54 = v65;
      sub_1DC092ED0(v55, v65, (uint64_t (*)(_QWORD))type metadata accessor for NewsStockFeedGroupKnobs);
      sub_1DC092F14(v68, qword_1EDB31120, (void (*)(uint64_t))type metadata accessor for StockFeedGroupKnobs);
      sub_1DC092F14(v69, qword_1EDB31120, (void (*)(uint64_t))type metadata accessor for StockFeedGroupKnobs);
    }
    else
    {
      sub_1DC092F14(v43, qword_1EDB31120, (void (*)(uint64_t))type metadata accessor for StockFeedGroupKnobs);
      v54 = v65;
      sub_1DC092ED0(v44, v65, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedGroupKnobs);
      v50 = v70;
      v49 = v71;
    }
    v56 = v64;
    sub_1DC092ED0(v54, v64, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedGroupKnobs);
    *(_QWORD *)(v56 + *(int *)(v40 + 20)) = 0x7FFFFFFFFFFFFFFFLL;
    sub_1DC092ED0(v56, v50, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedKnobsConfig);
    sub_1DC092F14(v38, qword_1EDB320F8, (void (*)(uint64_t))type metadata accessor for StockFeedKnobsConfig);
    sub_1DC092F14(v49, qword_1EDB2E388, (void (*)(uint64_t))type metadata accessor for StockFeedConfig);
    sub_1DC092F14((uint64_t)v22, qword_1EDB320F8, (void (*)(uint64_t))type metadata accessor for StockFeedKnobsConfig);
  }
  else
  {
    sub_1DC092F14(v38, qword_1EDB320F8, (void (*)(uint64_t))type metadata accessor for StockFeedKnobsConfig);
    sub_1DC092F14(v71, qword_1EDB2E388, (void (*)(uint64_t))type metadata accessor for StockFeedConfig);
    v50 = v70;
    sub_1DC092ED0((uint64_t)v22, v70, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedKnobsConfig);
  }
  v57 = type metadata accessor for StockFeedContentConfig();
  return sub_1DC092ED0(v50, v37 + *(int *)(v57 + 20), (uint64_t (*)(_QWORD))type metadata accessor for StockFeedKnobsConfig);
}

uint64_t sub_1DC1D4A44@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v16;
  uint64_t v17;
  char v18;
  char v19;

  v17 = a2;
  sub_1DC092F50(0, qword_1EDB320F8, (void (*)(uint64_t))type metadata accessor for StockFeedKnobsConfig);
  MEMORY[0x1E0C80A78](v4);
  v16 = (char *)&v16 - v5;
  sub_1DC092F50(0, qword_1EDB2E388, (void (*)(uint64_t))type metadata accessor for StockFeedConfig);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v16 - v7;
  sub_1DC1D5128();
  v10 = v9;
  v11 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC1D5180();
  sub_1DC409B08();
  if (!v2)
  {
    type metadata accessor for StockFeedConfig();
    v19 = 0;
    sub_1DC080808(&qword_1EDB2E348, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedConfig, (uint64_t)&unk_1DC420304);
    sub_1DC4098B0();
    type metadata accessor for StockFeedKnobsConfig();
    v18 = 1;
    sub_1DC080808(&qword_1EDB320B8, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedKnobsConfig, (uint64_t)&unk_1DC424168);
    v14 = (uint64_t)v16;
    sub_1DC4098B0();
    sub_1DC1D439C((uint64_t)v8, v14, v17);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1DC1D4C5C(char *a1, char *a2)
{
  return sub_1DC158C04(*a1, *a2);
}

uint64_t sub_1DC1D4C68()
{
  sub_1DC409AC0();
  sub_1DC408AF4();
  swift_bridgeObjectRelease();
  return sub_1DC409AF0();
}

uint64_t sub_1DC1D4CF4()
{
  sub_1DC408AF4();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DC1D4D5C()
{
  sub_1DC409AC0();
  sub_1DC408AF4();
  swift_bridgeObjectRelease();
  return sub_1DC409AF0();
}

uint64_t sub_1DC1D4DE4@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1DC4098A4();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

void sub_1DC1D4E40(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x666E6F4364656566;
  if (*v1)
    v2 = 0x6E6F4373626F6E6BLL;
  v3 = 0xEA00000000006769;
  if (*v1)
    v3 = 0xEB00000000676966;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1DC1D4E8C()
{
  _BYTE *v0;

  if (*v0)
    return 0x6E6F4373626F6E6BLL;
  else
    return 0x666E6F4364656566;
}

uint64_t sub_1DC1D4ED4@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1DC4098A4();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

uint64_t sub_1DC1D4F34()
{
  sub_1DC1D5180();
  return sub_1DC409B20();
}

uint64_t sub_1DC1D4F5C()
{
  sub_1DC1D5180();
  return sub_1DC409B2C();
}

uint64_t sub_1DC1D4F84@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DC1D4A44(a1, a2);
}

uint64_t sub_1DC1D4F98@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1DC0990BC(v1, a1, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedConfig);
}

uint64_t sub_1DC1D4FBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1DC0990BC(v2 + *(int *)(a1 + 20), a2, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedKnobsConfig);
}

uint64_t sub_1DC1D4FE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  sub_1DC092F50(0, qword_1EDB320F8, (void (*)(uint64_t))type metadata accessor for StockFeedKnobsConfig);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v16 - v8;
  sub_1DC092F50(0, qword_1EDB2E388, (void (*)(uint64_t))type metadata accessor for StockFeedConfig);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v16 - v11;
  sub_1DC0990BC(a1, (uint64_t)&v16 - v11, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedConfig);
  v13 = type metadata accessor for StockFeedConfig();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 0, 1, v13);
  sub_1DC0990BC(v3 + *(int *)(a2 + 20), (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedKnobsConfig);
  v14 = type metadata accessor for StockFeedKnobsConfig();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v9, 0, 1, v14);
  return sub_1DC1D439C((uint64_t)v12, (uint64_t)v9, a3);
}

void sub_1DC1D5128()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB3FDA0)
  {
    sub_1DC1D5180();
    v0 = sub_1DC409928();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB3FDA0);
  }
}

unint64_t sub_1DC1D5180()
{
  unint64_t result;

  result = qword_1EDB33D98;
  if (!qword_1EDB33D98)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC415E64, &type metadata for StockFeedContentConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB33D98);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for StockFeedContentConfig.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1DC1D5210 + 4 * byte_1DC415CC5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1DC1D5244 + 4 * byte_1DC415CC0[v4]))();
}

uint64_t sub_1DC1D5244(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC1D524C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC1D5254);
  return result;
}

uint64_t sub_1DC1D5260(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC1D5268);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1DC1D526C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC1D5274(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StockFeedContentConfig.CodingKeys()
{
  return &type metadata for StockFeedContentConfig.CodingKeys;
}

unint64_t sub_1DC1D5294()
{
  unint64_t result;

  result = qword_1F034E0D8;
  if (!qword_1F034E0D8)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC415E3C, &type metadata for StockFeedContentConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F034E0D8);
  }
  return result;
}

unint64_t sub_1DC1D52DC()
{
  unint64_t result;

  result = qword_1EDB33DA8;
  if (!qword_1EDB33DA8)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC415D74, &type metadata for StockFeedContentConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB33DA8);
  }
  return result;
}

unint64_t sub_1DC1D5324()
{
  unint64_t result;

  result = qword_1EDB33DA0;
  if (!qword_1EDB33DA0)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC415D9C, &type metadata for StockFeedContentConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB33DA0);
  }
  return result;
}

void sub_1DC1D5368(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v27 = a2;
  v28 = a3;
  v4 = sub_1DC403130();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC1D55E4();
  v9 = v8;
  v10 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1DC401564();
  v14 = MEMORY[0x1E0C80A78](v13);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v15 + 16))((char *)&v25 - v16, a1, v13, v14);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v26 = v4;
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    v17 = (void *)sub_1DC40154C();
    v18 = v29;
    v19 = sub_1DC4017B0();
    v21 = v20;

    if (!v18)
    {
      sub_1DC080808((unint64_t *)&unk_1EDB297A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD050], MEMORY[0x1E0DAD060]);
      sub_1DC402458();
      sub_1DC1D565C(v19, v21);
      v22 = v28;
      (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v28, v7, v26);
      v23 = type metadata accessor for EngagementEvent();
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v22, 0, 1, v23);
    }
  }
  else
  {
    v24 = type metadata accessor for EngagementEvent();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v28, 1, 1, v24);
  }
}

uint64_t type metadata accessor for FeedViewEventTranslator()
{
  return objc_opt_self();
}

void sub_1DC1D55D0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_1DC1D5368(a1, a2, a3);
}

void sub_1DC1D55E4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB29148)
  {
    sub_1DC40313C();
    sub_1DC080808((unint64_t *)&unk_1EDB297B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD068], MEMORY[0x1E0DAD038]);
    v0 = sub_1DC401564();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB29148);
  }
}

uint64_t sub_1DC1D565C(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release();
  }
  return swift_release();
}

uint64_t sub_1DC1D56A0(void (*a1)(void))
{
  uint64_t v1;
  uint64_t result;
  void *v4;

  __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 40));
  sub_1DC4058F0();
  result = sub_1DC4025FC();
  if (result)
  {
    v4 = (void *)result;
    if ((sub_1DC4058D8() & 1) != 0)
    {
      sub_1DC113F04((uint64_t)a1);
      sub_1DC4058C0();
    }
    else
    {
      if (a1)
        a1();

      return 0;
    }
    return (uint64_t)v4;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for OnboardingModule()
{
  return objc_opt_self();
}

id sub_1DC1D576C(id result, void *a2, id a3, double a4)
{
  if (result != 2)
  {
    objc_msgSend(a3, sel_setAlpha_);
    return objc_msgSend(a2, sel_setAlpha_, 1.0 - a4);
  }
  return result;
}

uint64_t sub_1DC1D57D0(char a1, void *a2, void *a3)
{
  return sub_1DC1D57E0(a1 & 1, a2, a3);
}

id sub_1DC1D57D8(char a1, void *a2, void *a3)
{
  return sub_1DC1D58DC(a1 & 1, a2, a3);
}

uint64_t sub_1DC1D57E0(char a1, id a2, void *a3)
{
  double v6;
  uint64_t v7;
  double v8;

  objc_msgSend(a2, sel_frame);
  v6 = 0.0;
  sub_1DC40928C();
  objc_msgSend(a2, sel_setFrame_);
  objc_msgSend(a3, sel_frame);
  sub_1DC40928C();
  objc_msgSend(a3, sel_setFrame_);
  v7 = a1 & 1;
  if ((_DWORD)v7)
    v8 = 1.0;
  else
    v8 = 0.0;
  if (!(_DWORD)v7)
    v6 = 1.0;
  objc_msgSend(a3, sel_setAlpha_, v8);
  objc_msgSend(a2, sel_setAlpha_, v6);
  return v7;
}

id sub_1DC1D58DC(char a1, id a2, void *a3)
{
  double v6;
  double v7;

  objc_msgSend(a2, sel_frame);
  v6 = 0.0;
  sub_1DC40928C();
  objc_msgSend(a2, sel_setFrame_);
  if ((a1 & 1) != 0)
    v7 = 0.0;
  else
    v7 = 1.0;
  if ((a1 & 1) != 0)
    v6 = 1.0;
  objc_msgSend(a2, sel_setAlpha_, v7);
  return objc_msgSend(a3, sel_setAlpha_, v6);
}

ValueMetadata *type metadata accessor for StockSearchPrewarmBlueprintModifier()
{
  return &type metadata for StockSearchPrewarmBlueprintModifier;
}

uint64_t sub_1DC1D5998(uint64_t a1, void (*a2)(char *))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  sub_1DC1D5A80();
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  v6 = MEMORY[0x1E0C80A78](v3);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v5 + 104))(v8, *MEMORY[0x1E0DB9A20], v4, v6);
  a2(v8);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

unint64_t sub_1DC1D5A3C()
{
  unint64_t result;

  result = qword_1EDB42AD8;
  if (!qword_1EDB42AD8)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC415FA4, &type metadata for StockSearchPrewarmBlueprintModifier);
    atomic_store(result, (unint64_t *)&qword_1EDB42AD8);
  }
  return result;
}

void sub_1DC1D5A80()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB41E18)
  {
    type metadata accessor for StockSearchSectionDescriptor();
    type metadata accessor for StockSearchModel();
    sub_1DC080808(&qword_1EDB389D0, (uint64_t (*)(uint64_t))type metadata accessor for StockSearchSectionDescriptor, (uint64_t)&unk_1DC41CD30);
    sub_1DC080808(&qword_1EDB2F300, (uint64_t (*)(uint64_t))type metadata accessor for StockSearchModel, (uint64_t)&unk_1DC42E184);
    v0 = sub_1DC405560();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB41E18);
  }
}

uint64_t type metadata accessor for EmptyListOverlayViewStyler()
{
  return objc_opt_self();
}

uint64_t sub_1DC1D5B68@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  char *v15;
  int v16;
  unsigned int *v17;
  int v18;
  uint64_t v20;
  int v22;
  int v23;
  _QWORD v25[2];

  v2 = v1;
  sub_1DC1D5D6C();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1DC407BC4();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1DC403AA8();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x1E0C80A78](v11);
  v15 = (char *)v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v8 + 16))(v10, v2, v7, v13);
  v16 = (*(uint64_t (**)(char *, uint64_t))(v8 + 88))(v10, v7);
  if (v16 == *MEMORY[0x1E0D5C968])
  {
    v17 = (unsigned int *)MEMORY[0x1E0DADE78];
LABEL_9:
    (*(void (**)(char *, _QWORD, uint64_t))(v12 + 104))(v15, *v17, v11);
    goto LABEL_10;
  }
  v18 = v16;
  if (v16 == *MEMORY[0x1E0D5C978] || v16 == *MEMORY[0x1E0D5C960])
  {
    v17 = (unsigned int *)MEMORY[0x1E0DADE60];
    goto LABEL_9;
  }
  v22 = *MEMORY[0x1E0D5C970];
  v25[1] = a1;
  v23 = *MEMORY[0x1E0D5C950];
  (*(void (**)(char *, _QWORD, uint64_t))(v12 + 104))(v15, *MEMORY[0x1E0DADE78], v11);
  if (v18 != v22 && v18 != v23)
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
LABEL_10:
  v20 = sub_1DC403B68();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v6, 1, 1, v20);
  return sub_1DC403A90();
}

void sub_1DC1D5D6C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB299A0)
  {
    sub_1DC403B68();
    v0 = sub_1DC4095A4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB299A0);
  }
}

uint64_t type metadata accessor for WelcomeStyler()
{
  return objc_opt_self();
}

uint64_t sub_1DC1D5DFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a2;
  swift_retain();
  sub_1DC4024C4();
  return swift_release();
}

uint64_t sub_1DC1D5EE0()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

void sub_1DC1D5F04(void *a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  id v7;
  void *v8;
  void *v9;
  double v10;
  double v11;
  uint64_t v12;
  void *v13;
  __int128 aBlock;
  uint64_t (*v15)(uint64_t);
  void *v16;
  uint64_t (*v17)();
  uint64_t v18;
  void *v19;
  __int128 v20;

  v6 = (void *)sub_1DC408A1C();
  v7 = objc_msgSend(a1, sel_objectForKey_, v6);

  if (v7)
  {
    sub_1DC409634();
    swift_unknownObjectRelease();
    sub_1DC0FA0E4(&v20, &aBlock);
    type metadata accessor for ForYouFeedViewController();
    swift_dynamicCast();
    v8 = v19;
    sub_1DC4055CC();
    v9 = (void *)sub_1DC405074();
    swift_release();
    objc_msgSend(v9, sel_contentSize);
    v11 = v10;
    v12 = swift_allocObject();
    *(_QWORD *)(v12 + 16) = a2;
    *(_QWORD *)(v12 + 24) = a3;
    v17 = sub_1DC1D60D8;
    v18 = v12;
    *(_QWORD *)&aBlock = MEMORY[0x1E0C809B0];
    *((_QWORD *)&aBlock + 1) = 1107296256;
    v15 = sub_1DC081B88;
    v16 = &block_descriptor_13;
    v13 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v9, sel_su_performScrollTestWithLength_completion_, v13, v11);
    _Block_release(v13);

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1DC1D60B4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DC1D60D8()
{
  uint64_t v0;

  return sub_1DC1D5DFC(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

id sub_1DC1D60E4(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t inited;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t, uint64_t);
  id v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  id v24;
  void *v25;
  void *v26;
  id v27;

  v4 = v3;
  v6 = *v3;
  sub_1DC0FB194();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DC40FA70;
  v8 = (void *)*MEMORY[0x1E0DC1138];
  *(_QWORD *)(inited + 32) = *MEMORY[0x1E0DC1138];
  v9 = v8;
  v10 = sub_1DC0E9E1C(v6, (uint64_t)&off_1EA4552D0);
  v11 = sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FB00);
  *(_QWORD *)(inited + 40) = v10;
  v12 = (void *)*MEMORY[0x1E0DC1140];
  *(_QWORD *)(inited + 64) = v11;
  *(_QWORD *)(inited + 72) = v12;
  v13 = v4 + 2;
  v15 = v4[5];
  v14 = v4[6];
  __swift_project_boxed_opaque_existential_1(v13, v15);
  v16 = *(_QWORD *)(v14 + 16);
  v17 = 248;
  if ((a3 & 1) != 0)
    v17 = 96;
  v18 = *(uint64_t (**)(uint64_t, uint64_t))(v16 + v17);
  v19 = v12;
  v20 = v18(v15, v16);
  v21 = sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FB30);
  *(_QWORD *)(inited + 80) = v20;
  v22 = (void *)*MEMORY[0x1E0DC1238];
  *(_QWORD *)(inited + 104) = v21;
  *(_QWORD *)(inited + 112) = v22;
  *(_QWORD *)(inited + 144) = MEMORY[0x1E0DEB070];
  *(_QWORD *)(inited + 120) = 0xBFC999999999999ALL;
  v23 = v22;
  sub_1DC0FA3C4(inited);
  v24 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  swift_bridgeObjectRetain();
  v25 = (void *)sub_1DC408A1C();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1DC0FB14C();
  v26 = (void *)sub_1DC408980();
  swift_bridgeObjectRelease();
  v27 = objc_msgSend(v24, sel_initWithString_attributes_, v25, v26);

  return v27;
}

id sub_1DC1D62CC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v8;
  uint64_t inited;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  double v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t, _QWORD *);
  _QWORD *v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  id v24;
  void *v25;
  void *v26;
  id v27;

  v5 = v4;
  v8 = *v4;
  sub_1DC0FB194();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DC40C740;
  v10 = (void *)*MEMORY[0x1E0DC1138];
  *(_QWORD *)(inited + 32) = *MEMORY[0x1E0DC1138];
  swift_bridgeObjectRetain();
  v11 = v10;
  v12 = sub_1DC3FAC98(v8, (uint64_t)&off_1EA4552D0);
  v13 = sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FB00);
  *(_QWORD *)(inited + 40) = v12;
  v14 = (void *)*MEMORY[0x1E0DC1140];
  *(_QWORD *)(inited + 64) = v13;
  *(_QWORD *)(inited + 72) = v14;
  if ((a4 & 1) != 0)
  {
    v20 = v5 + 2;
    v18 = v5[5];
    v21 = v5[6];
    __swift_project_boxed_opaque_existential_1(v20, v18);
    v17 = *(_QWORD **)(v21 + 16);
    v19 = (uint64_t (*)(uint64_t, _QWORD *))v17[6];
  }
  else
  {
    v15 = *(double *)&a3;
    v16 = v5 + 2;
    v18 = v5[5];
    v17 = (_QWORD *)v5[6];
    __swift_project_boxed_opaque_existential_1(v16, v18);
    if (v15 >= 0.0)
      v19 = (uint64_t (*)(uint64_t, _QWORD *))v17[3];
    else
      v19 = (uint64_t (*)(uint64_t, _QWORD *))v17[4];
  }
  v22 = v14;
  v23 = v19(v18, v17);
  *(_QWORD *)(inited + 104) = sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FB30);
  *(_QWORD *)(inited + 80) = v23;
  sub_1DC0FA3C4(inited);
  v24 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  v25 = (void *)sub_1DC408A1C();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1DC0FB14C();
  v26 = (void *)sub_1DC408980();
  swift_bridgeObjectRelease();
  v27 = objc_msgSend(v24, sel_initWithString_attributes_, v25, v26);

  return v27;
}

id sub_1DC1D64B8(char a1)
{
  _QWORD *v1;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  id v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  id v18;

  sub_1DC0E7820();
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1DC40FA50;
  if ((a1 & 1) != 0)
  {
    *(_QWORD *)(v3 + 32) = objc_msgSend((id)objc_opt_self(), sel_whiteColor);
    v4 = v1 + 2;
    v6 = v1[5];
    v5 = v1[6];
    __swift_project_boxed_opaque_existential_1(v4, v6);
    *(_QWORD *)(v3 + 40) = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v5 + 16) + 104))(v6);
    sub_1DC408CF8();
    sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FB30);
    v7 = (void *)sub_1DC408CC8();
    swift_bridgeObjectRelease();
    v8 = (void *)objc_opt_self();
    v9 = objc_msgSend(v8, sel_configurationWithPaletteColors_, v7);

    if (qword_1F034AE20 != -1)
      swift_once();
    v10 = objc_msgSend((id)qword_1F0368940, sel_imageWithConfiguration_, v9);
    v11 = objc_msgSend(v8, sel_configurationWithTextStyle_, *MEMORY[0x1E0DC4A88]);
    v12 = objc_msgSend(v10, sel_imageByApplyingSymbolConfiguration_, v11);
  }
  else
  {
    v13 = v1 + 2;
    v15 = v1[5];
    v14 = v1[6];
    __swift_project_boxed_opaque_existential_1(v13, v15);
    *(_QWORD *)(v3 + 32) = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v14 + 16) + 104))(v15);
    *(_QWORD *)(v3 + 40) = objc_msgSend((id)objc_opt_self(), sel_secondarySystemFillColor);
    sub_1DC408CF8();
    sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FB30);
    v16 = (void *)sub_1DC408CC8();
    swift_bridgeObjectRelease();
    v17 = (void *)objc_opt_self();
    v9 = objc_msgSend(v17, sel_configurationWithPaletteColors_, v16);

    if (qword_1F034AE28 != -1)
      swift_once();
    v10 = objc_msgSend((id)qword_1F0368948, sel_imageWithConfiguration_, v9);
    v11 = objc_msgSend(v17, sel_configurationWithTextStyle_, *MEMORY[0x1E0DC4A88]);
    v12 = objc_msgSend(v10, sel_imageByApplyingSymbolConfiguration_, v11);
  }
  v18 = v12;

  if (!v18)
    v18 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3870]), sel_init);

  return v18;
}

id sub_1DC1D67D8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t inited;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t);
  id v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  id v19;
  void *v20;
  void *v21;
  id v22;

  v1 = v0;
  v2 = *v0;
  sub_1DC0FB194();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DC40FA70;
  v4 = (void *)*MEMORY[0x1E0DC1138];
  *(_QWORD *)(inited + 32) = *MEMORY[0x1E0DC1138];
  swift_bridgeObjectRetain();
  v5 = v4;
  v6 = sub_1DC3FACB8(v2, (uint64_t)&off_1EA4552D0);
  v7 = sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FB00);
  *(_QWORD *)(inited + 40) = v6;
  v8 = (void *)*MEMORY[0x1E0DC1140];
  *(_QWORD *)(inited + 64) = v7;
  *(_QWORD *)(inited + 72) = v8;
  v9 = v1 + 2;
  v11 = v1[5];
  v10 = v1[6];
  __swift_project_boxed_opaque_existential_1(v9, v11);
  v12 = *(_QWORD *)(v10 + 16);
  v13 = *(uint64_t (**)(uint64_t, uint64_t))(v12 + 256);
  v14 = v8;
  v15 = v13(v11, v12);
  v16 = sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FB30);
  *(_QWORD *)(inited + 80) = v15;
  v17 = (void *)*MEMORY[0x1E0DC1238];
  *(_QWORD *)(inited + 104) = v16;
  *(_QWORD *)(inited + 112) = v17;
  *(_QWORD *)(inited + 144) = MEMORY[0x1E0DEB070];
  *(_QWORD *)(inited + 120) = 0xBFC999999999999ALL;
  v18 = v17;
  sub_1DC0FA3C4(inited);
  v19 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  v20 = (void *)sub_1DC408A1C();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1DC0FB14C();
  v21 = (void *)sub_1DC408980();
  swift_bridgeObjectRelease();
  v22 = objc_msgSend(v19, sel_initWithString_attributes_, v20, v21);

  return v22;
}

id sub_1DC1D69AC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t inited;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t);
  id v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  id v19;
  void *v20;
  void *v21;
  id v22;

  v1 = v0;
  v2 = *v0;
  sub_1DC0FB194();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DC40FA70;
  v4 = (void *)*MEMORY[0x1E0DC1138];
  *(_QWORD *)(inited + 32) = *MEMORY[0x1E0DC1138];
  swift_bridgeObjectRetain();
  v5 = v4;
  v6 = sub_1DC0E9F40(v2, (uint64_t)&off_1EA4552D0);
  v7 = sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FB00);
  *(_QWORD *)(inited + 40) = v6;
  v8 = (void *)*MEMORY[0x1E0DC1140];
  *(_QWORD *)(inited + 64) = v7;
  *(_QWORD *)(inited + 72) = v8;
  v9 = v1 + 2;
  v11 = v1[5];
  v10 = v1[6];
  __swift_project_boxed_opaque_existential_1(v9, v11);
  v12 = *(_QWORD *)(v10 + 16);
  v13 = *(uint64_t (**)(uint64_t, uint64_t))(v12 + 48);
  v14 = v8;
  v15 = v13(v11, v12);
  v16 = sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FB30);
  *(_QWORD *)(inited + 80) = v15;
  v17 = (void *)*MEMORY[0x1E0DC1238];
  *(_QWORD *)(inited + 104) = v16;
  *(_QWORD *)(inited + 112) = v17;
  *(_QWORD *)(inited + 144) = MEMORY[0x1E0DEB070];
  *(_QWORD *)(inited + 120) = 0xBFDB851EB851EB85;
  v18 = v17;
  sub_1DC0FA3C4(inited);
  v19 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  v20 = (void *)sub_1DC408A1C();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1DC0FB14C();
  v21 = (void *)sub_1DC408980();
  swift_bridgeObjectRelease();
  v22 = objc_msgSend(v19, sel_initWithString_attributes_, v20, v21);

  return v22;
}

id sub_1DC1D6B84()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t inited;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t);
  id v14;
  uint64_t v15;
  id v16;
  void *v17;
  void *v18;
  id v19;

  v1 = v0;
  v2 = *v0;
  sub_1DC0FB194();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DC40C740;
  v4 = (void *)*MEMORY[0x1E0DC1138];
  *(_QWORD *)(inited + 32) = *MEMORY[0x1E0DC1138];
  swift_bridgeObjectRetain();
  v5 = v4;
  v6 = sub_1DC3FAC98(v2, (uint64_t)&off_1EA4552D0);
  v7 = sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FB00);
  *(_QWORD *)(inited + 40) = v6;
  v8 = (void *)*MEMORY[0x1E0DC1140];
  *(_QWORD *)(inited + 64) = v7;
  *(_QWORD *)(inited + 72) = v8;
  v9 = v1 + 2;
  v11 = v1[5];
  v10 = v1[6];
  __swift_project_boxed_opaque_existential_1(v9, v11);
  v12 = *(_QWORD *)(v10 + 16);
  v13 = *(uint64_t (**)(uint64_t, uint64_t))(v12 + 48);
  v14 = v8;
  v15 = v13(v11, v12);
  *(_QWORD *)(inited + 104) = sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FB30);
  *(_QWORD *)(inited + 80) = v15;
  sub_1DC0FA3C4(inited);
  v16 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  v17 = (void *)sub_1DC408A1C();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1DC0FB14C();
  v18 = (void *)sub_1DC408980();
  swift_bridgeObjectRelease();
  v19 = objc_msgSend(v16, sel_initWithString_attributes_, v17, v18);

  return v19;
}

uint64_t sub_1DC1D6D2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  void (*v31)(uint64_t);
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  int v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  int v70;
  _QWORD *v71;
  unint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void (*v79)(char *, uint64_t, uint64_t);
  char *v80;
  uint64_t v81;
  uint64_t *v82;
  uint64_t v83;
  unint64_t v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t *v95;
  uint64_t v96;
  unint64_t v97;
  unint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t *v106;
  unint64_t v107;
  unint64_t v108;
  uint64_t result;
  uint64_t v110;
  uint64_t *v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  _QWORD *v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  char *v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  uint64_t *v124;
  char *v125;
  uint64_t *v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;

  sub_1DC092F50(0, &qword_1EDB274F8, (void (*)(uint64_t))MEMORY[0x1E0DAD1E8]);
  MEMORY[0x1E0C80A78](v1);
  v129 = (uint64_t)&v110 - v2;
  v131 = sub_1DC4031E4();
  v130 = *(_QWORD *)(v131 - 8);
  MEMORY[0x1E0C80A78](v131);
  v120 = (char *)&v110 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC092F50(0, &qword_1EDB29780, (void (*)(uint64_t))MEMORY[0x1E0DACF80]);
  MEMORY[0x1E0C80A78](v4);
  v137 = (char *)&v110 - v5;
  v6 = sub_1DC4030A0();
  v135 = *(_QWORD *)(v6 - 8);
  v136 = v6;
  MEMORY[0x1E0C80A78](v6);
  v127 = (char *)&v110 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC092F50(0, &qword_1EDB29800, (void (*)(uint64_t))MEMORY[0x1E0DAD350]);
  MEMORY[0x1E0C80A78](v8);
  v125 = (char *)&v110 - v9;
  v134 = sub_1DC4032BC();
  v133 = *(_QWORD *)(v134 - 8);
  MEMORY[0x1E0C80A78](v134);
  v119 = (char *)&v110 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v118 = sub_1DC403B14();
  v117 = *(_QWORD *)(v118 - 8);
  MEMORY[0x1E0C80A78](v118);
  v115 = (char *)&v110 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC092F50(0, &qword_1EDB29988, (void (*)(uint64_t))MEMORY[0x1E0DADF38]);
  MEMORY[0x1E0C80A78](v12);
  v121 = (uint64_t)&v110 - v13;
  v123 = sub_1DC403B08();
  v132 = *(_QWORD *)(v123 - 8);
  MEMORY[0x1E0C80A78](v123);
  v122 = (char *)&v110 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v114 = sub_1DC403A60();
  v113 = *(_QWORD *)(v114 - 8);
  MEMORY[0x1E0C80A78](v114);
  v112 = (char *)&v110 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v110 - v17;
  v19 = sub_1DC403BEC();
  v20 = *(_QWORD *)(v19 - 8);
  v138 = v19;
  v139 = v20;
  MEMORY[0x1E0C80A78](v19);
  v111 = (uint64_t *)((char *)&v110 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v22);
  v126 = (uint64_t *)((char *)&v110 - v23);
  MEMORY[0x1E0C80A78](v24);
  v124 = (uint64_t *)((char *)&v110 - v25);
  MEMORY[0x1E0C80A78](v26);
  v116 = (uint64_t *)((char *)&v110 - v27);
  MEMORY[0x1E0C80A78](v28);
  v30 = (uint64_t *)((char *)&v110 - v29);
  v31 = (void (*)(uint64_t))MEMORY[0x1E0DADDD0];
  sub_1DC092F50(0, &qword_1EDB29960, (void (*)(uint64_t))MEMORY[0x1E0DADDD0]);
  MEMORY[0x1E0C80A78](v32);
  v34 = (char *)&v110 - v33;
  v35 = sub_1DC403A54();
  v36 = *(_QWORD *)(v35 - 8);
  MEMORY[0x1E0C80A78](v35);
  v38 = (char *)&v110 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v128 = v0;
  v39 = v0 + OBJC_IVAR____TtC8StocksUI14PaywallTracker_feedData;
  swift_beginAccess();
  sub_1DC092F9C(v39, (uint64_t)v34, &qword_1EDB29960, v31);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35) == 1)
  {
    sub_1DC092F14((uint64_t)v34, &qword_1EDB29960, (void (*)(uint64_t))MEMORY[0x1E0DADDD0]);
    v40 = MEMORY[0x1E0DEE9D8];
    v41 = (uint64_t)v137;
    v42 = v138;
    v43 = v123;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v38, v34, v35);
    sub_1DC403A48();
    v44 = v113;
    v45 = v112;
    v46 = v114;
    (*(void (**)(char *, char *, uint64_t))(v113 + 16))(v112, v18, v114);
    v47 = (*(uint64_t (**)(char *, uint64_t))(v44 + 88))(v45, v46);
    v42 = v138;
    v43 = v123;
    v48 = v35;
    v49 = v18;
    if (v47 == *MEMORY[0x1E0DADDF8])
    {
      v50 = v36;
      v51 = 0;
    }
    else if (v47 == *MEMORY[0x1E0DADDF0])
    {
      v50 = v36;
      v51 = 20;
    }
    else if (v47 == *MEMORY[0x1E0DADDE8])
    {
      v50 = v36;
      v51 = 1;
    }
    else
    {
      if (v47 != *MEMORY[0x1E0DADDE0])
      {
        result = sub_1DC4099DC();
        __break(1u);
        return result;
      }
      v50 = v36;
      v51 = 16;
    }
    (*(void (**)(char *, uint64_t))(v44 + 8))(v49, v46);
    v52 = sub_1DC403A30();
    *v30 = v51;
    v30[1] = v52;
    v30[3] = 0;
    v30[4] = 0;
    v30[2] = v53;
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(v139 + 104))(v30, *MEMORY[0x1E0D617F8], v42);
    v40 = sub_1DC166B58(0, 1, 1, MEMORY[0x1E0DEE9D8]);
    v55 = *(_QWORD *)(v40 + 16);
    v54 = *(_QWORD *)(v40 + 24);
    if (v55 >= v54 >> 1)
      v40 = sub_1DC166B58(v54 > 1, v55 + 1, 1, v40);
    v41 = (uint64_t)v137;
    *(_QWORD *)(v40 + 16) = v55 + 1;
    (*(void (**)(unint64_t, uint64_t *, uint64_t))(v139 + 32))(v40+ ((*(unsigned __int8 *)(v139 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v139 + 80))+ *(_QWORD *)(v139 + 72) * v55, v30, v42);
    (*(void (**)(char *, uint64_t))(v50 + 8))(v38, v48);
  }
  v56 = v128;
  v57 = v128 + OBJC_IVAR____TtC8StocksUI14PaywallTracker_groupData;
  swift_beginAccess();
  v58 = v121;
  sub_1DC092F9C(v57, v121, &qword_1EDB29988, (void (*)(uint64_t))MEMORY[0x1E0DADF38]);
  v59 = v132;
  v60 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v132 + 48))(v58, 1, v43);
  v61 = (uint64_t)v125;
  if (v60 == 1)
  {
    sub_1DC092F14(v58, &qword_1EDB29988, (void (*)(uint64_t))MEMORY[0x1E0DADF38]);
    v62 = v139;
    v63 = v135;
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v59 + 32))(v122, v58, v43);
    v64 = v115;
    sub_1DC403AFC();
    v65 = sub_1DC2B5348();
    (*(void (**)(char *, uint64_t))(v117 + 8))(v64, v118);
    v66 = sub_1DC403AE4();
    v68 = v67;
    v69 = (int)sub_1DC403AD8();
    v70 = sub_1DC403ACC();
    v71 = v116;
    *v116 = 0x6E776F6E6B6E75;
    v71[1] = 0xE700000000000000;
    v71[2] = v65;
    v71[3] = v66;
    v71[4] = v68;
    v71[5] = v69;
    v42 = v138;
    v62 = v139;
    v71[6] = v70;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v62 + 104))(v71, *MEMORY[0x1E0D61800], v42);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v40 = sub_1DC166B58(0, *(_QWORD *)(v40 + 16) + 1, 1, v40);
    v73 = *(_QWORD *)(v40 + 16);
    v72 = *(_QWORD *)(v40 + 24);
    v63 = v135;
    if (v73 >= v72 >> 1)
      v40 = sub_1DC166B58(v72 > 1, v73 + 1, 1, v40);
    *(_QWORD *)(v40 + 16) = v73 + 1;
    (*(void (**)(unint64_t, _QWORD *, uint64_t))(v62 + 32))(v40+ ((*(unsigned __int8 *)(v62 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v62 + 80))+ *(_QWORD *)(v62 + 72) * v73, v71, v42);
    (*(void (**)(char *, uint64_t))(v132 + 8))(v122, v43);
    v41 = (uint64_t)v137;
  }
  v74 = v56 + OBJC_IVAR____TtC8StocksUI14PaywallTracker_articleData;
  swift_beginAccess();
  sub_1DC092F9C(v74, v61, &qword_1EDB29800, (void (*)(uint64_t))MEMORY[0x1E0DAD350]);
  v75 = v133;
  v76 = v134;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v133 + 48))(v61, 1, v134) == 1)
  {
    sub_1DC092F14(v61, &qword_1EDB29800, (void (*)(uint64_t))MEMORY[0x1E0DAD350]);
    v77 = v131;
    v78 = v130;
  }
  else
  {
    v79 = *(void (**)(char *, uint64_t, uint64_t))(v75 + 32);
    v80 = v119;
    v79(v119, v61, v76);
    v81 = sub_1DC4032B0();
    v82 = v124;
    *v124 = v81;
    v82[1] = v83;
    *((_OWORD *)v82 + 1) = 0u;
    *((_OWORD *)v82 + 2) = 0u;
    *((_OWORD *)v82 + 3) = 0u;
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(v62 + 104))(v82, *MEMORY[0x1E0D61810], v42);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v40 = sub_1DC166B58(0, *(_QWORD *)(v40 + 16) + 1, 1, v40);
    v77 = v131;
    v85 = *(_QWORD *)(v40 + 16);
    v84 = *(_QWORD *)(v40 + 24);
    v78 = v130;
    if (v85 >= v84 >> 1)
      v40 = sub_1DC166B58(v84 > 1, v85 + 1, 1, v40);
    *(_QWORD *)(v40 + 16) = v85 + 1;
    (*(void (**)(unint64_t, uint64_t *, uint64_t))(v62 + 32))(v40+ ((*(unsigned __int8 *)(v62 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v62 + 80))+ *(_QWORD *)(v62 + 72) * v85, v124, v42);
    (*(void (**)(char *, uint64_t))(v133 + 8))(v80, v134);
    v41 = (uint64_t)v137;
  }
  v86 = v56 + OBJC_IVAR____TtC8StocksUI14PaywallTracker_campaignData;
  swift_beginAccess();
  sub_1DC092F9C(v86, v41, &qword_1EDB29780, (void (*)(uint64_t))MEMORY[0x1E0DACF80]);
  v87 = v136;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v63 + 48))(v41, 1, v136) == 1)
  {
    sub_1DC092F14(v41, &qword_1EDB29780, (void (*)(uint64_t))MEMORY[0x1E0DACF80]);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v63 + 32))(v127, v41, v87);
    v88 = sub_1DC40307C();
    v90 = v89;
    v91 = sub_1DC403094();
    v93 = v92;
    v94 = sub_1DC403088();
    v95 = v126;
    *v126 = v88;
    v95[1] = v90;
    v95[2] = v91;
    v95[3] = v93;
    v42 = v138;
    v62 = v139;
    v95[4] = v94;
    v95[5] = v96;
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(v62 + 104))(v95, *MEMORY[0x1E0D61820], v42);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v40 = sub_1DC166B58(0, *(_QWORD *)(v40 + 16) + 1, 1, v40);
    v98 = *(_QWORD *)(v40 + 16);
    v97 = *(_QWORD *)(v40 + 24);
    v99 = v135;
    if (v98 >= v97 >> 1)
      v40 = sub_1DC166B58(v97 > 1, v98 + 1, 1, v40);
    *(_QWORD *)(v40 + 16) = v98 + 1;
    (*(void (**)(unint64_t, uint64_t *, uint64_t))(v62 + 32))(v40+ ((*(unsigned __int8 *)(v62 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v62 + 80))+ *(_QWORD *)(v62 + 72) * v98, v126, v42);
    (*(void (**)(char *, uint64_t))(v99 + 8))(v127, v136);
  }
  v100 = v56 + OBJC_IVAR____TtC8StocksUI14PaywallTracker_adReferralData;
  swift_beginAccess();
  v101 = v100;
  v102 = v129;
  sub_1DC092F9C(v101, v129, &qword_1EDB274F8, (void (*)(uint64_t))MEMORY[0x1E0DAD1E8]);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v78 + 48))(v102, 1, v77) == 1)
  {
    sub_1DC092F14(v102, &qword_1EDB274F8, (void (*)(uint64_t))MEMORY[0x1E0DAD1E8]);
  }
  else
  {
    v103 = v120;
    (*(void (**)(char *, uint64_t, uint64_t))(v78 + 32))(v120, v102, v77);
    v104 = sub_1DC4031D8();
    if (v105)
    {
      v106 = v111;
      *v111 = v104;
      v106[1] = v105;
      *((_BYTE *)v106 + 16) = 1;
      (*(void (**)(uint64_t *, _QWORD, uint64_t))(v62 + 104))(v106, *MEMORY[0x1E0D617F0], v42);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v40 = sub_1DC166B58(0, *(_QWORD *)(v40 + 16) + 1, 1, v40);
      v108 = *(_QWORD *)(v40 + 16);
      v107 = *(_QWORD *)(v40 + 24);
      if (v108 >= v107 >> 1)
        v40 = sub_1DC166B58(v107 > 1, v108 + 1, 1, v40);
      *(_QWORD *)(v40 + 16) = v108 + 1;
      (*(void (**)(unint64_t, uint64_t *, uint64_t))(v62 + 32))(v40+ ((*(unsigned __int8 *)(v62 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v62 + 80))+ *(_QWORD *)(v62 + 72) * v108, v106, v42);
    }
    (*(void (**)(char *, uint64_t))(v78 + 8))(v103, v77);
  }
  return v40;
}

uint64_t sub_1DC1D7AA8(char *a1, _QWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t (*v31)(uint64_t);
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t (*v35)(uint64_t);
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(uint64_t);
  uint64_t v42;
  uint64_t v43;
  char *v44;
  void (*v45)(uint64_t);
  uint64_t v46;
  void (*v47)(uint64_t);
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  int v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  unsigned int *v62;
  char *v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;

  v87 = a5;
  v88 = a6;
  v82 = a4;
  v92 = a3;
  v8 = sub_1DC4035C8();
  v90 = *(_QWORD *)(v8 - 8);
  v91 = v8;
  MEMORY[0x1E0C80A78](v8);
  v89 = (char *)&v69 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = sub_1DC403CDC();
  v70 = *(_QWORD *)(v71 - 8);
  MEMORY[0x1E0C80A78](v71);
  v69 = (char *)&v69 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1DC402FEC();
  v85 = *(_QWORD *)(v11 - 8);
  v86 = v11;
  MEMORY[0x1E0C80A78](v11);
  v84 = (char *)&v69 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = sub_1DC403E38();
  v77 = *(_QWORD *)(v78 - 8);
  MEMORY[0x1E0C80A78](v78);
  v73 = (char *)&v69 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1DC402FF8();
  v80 = *(_QWORD *)(v14 - 8);
  v81 = v14;
  MEMORY[0x1E0C80A78](v14);
  v83 = (char *)&v69 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v79 = (char *)&v69 - v17;
  v75 = sub_1DC4030E8();
  v76 = *(_QWORD *)(v75 - 8);
  MEMORY[0x1E0C80A78](v75);
  v74 = (char *)&v69 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_1DC4030F4();
  v95 = *(_QWORD *)(v19 - 8);
  v96 = v19;
  MEMORY[0x1E0C80A78](v19);
  v93 = (char *)&v69 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v94 = (uint64_t)&v69 - v22;
  sub_1DC092F50(0, &qword_1EDB274F8, (void (*)(uint64_t))MEMORY[0x1E0DAD1E8]);
  MEMORY[0x1E0C80A78](v23);
  v72 = (char *)&v69 - v24;
  sub_1DC092F50(0, &qword_1EDB29780, (void (*)(uint64_t))MEMORY[0x1E0DACF80]);
  MEMORY[0x1E0C80A78](v25);
  v27 = (char *)&v69 - v26;
  sub_1DC092F50(0, &qword_1EDB29800, (void (*)(uint64_t))MEMORY[0x1E0DAD350]);
  MEMORY[0x1E0C80A78](v28);
  v30 = (char *)&v69 - v29;
  v31 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DADF38];
  sub_1DC092F50(0, &qword_1EDB29988, (void (*)(uint64_t))MEMORY[0x1E0DADF38]);
  MEMORY[0x1E0C80A78](v32);
  v34 = (char *)&v69 - v33;
  v35 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DADDD0];
  sub_1DC092F50(0, &qword_1EDB29960, (void (*)(uint64_t))MEMORY[0x1E0DADDD0]);
  MEMORY[0x1E0C80A78](v36);
  v38 = (char *)&v69 - v37;
  sub_1DC403A54();
  sub_1DC080808((unint64_t *)&qword_1EDB29950, v35, MEMORY[0x1E0DADDB0]);
  sub_1DC4015B8();
  v39 = (uint64_t)a2 + OBJC_IVAR____TtC8StocksUI14PaywallTracker_feedData;
  swift_beginAccess();
  sub_1DC1D9C08((uint64_t)v38, v39, &qword_1EDB29960, (void (*)(uint64_t))v35);
  swift_endAccess();
  sub_1DC403B08();
  sub_1DC080808(&qword_1EDB27520, v31, MEMORY[0x1E0DADF08]);
  sub_1DC4015B8();
  v40 = (uint64_t)a2 + OBJC_IVAR____TtC8StocksUI14PaywallTracker_groupData;
  swift_beginAccess();
  sub_1DC1D9C08((uint64_t)v34, v40, &qword_1EDB29988, (void (*)(uint64_t))v31);
  swift_endAccess();
  sub_1DC4032BC();
  v41 = (void (*)(uint64_t))MEMORY[0x1E0DAD350];
  sub_1DC080808((unint64_t *)&unk_1EDB297F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD350], MEMORY[0x1E0DAD338]);
  sub_1DC4015B8();
  v42 = (uint64_t)a2 + OBJC_IVAR____TtC8StocksUI14PaywallTracker_articleData;
  swift_beginAccess();
  v43 = (uint64_t)v30;
  v44 = v73;
  sub_1DC1D9C08(v43, v42, &qword_1EDB29800, v41);
  swift_endAccess();
  sub_1DC4030A0();
  v45 = (void (*)(uint64_t))MEMORY[0x1E0DACF80];
  sub_1DC080808((unint64_t *)&unk_1EDB29770, (uint64_t (*)(uint64_t))MEMORY[0x1E0DACF80], MEMORY[0x1E0DACF58]);
  sub_1DC4015B8();
  v46 = (uint64_t)a2 + OBJC_IVAR____TtC8StocksUI14PaywallTracker_campaignData;
  swift_beginAccess();
  sub_1DC1D9C08((uint64_t)v27, v46, &qword_1EDB29780, v45);
  swift_endAccess();
  sub_1DC4031E4();
  v47 = (void (*)(uint64_t))MEMORY[0x1E0DAD1E8];
  sub_1DC080808(&qword_1EDB297D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD1E8], MEMORY[0x1E0DAD1D0]);
  v48 = (uint64_t)v72;
  sub_1DC4015B8();
  v49 = (uint64_t)a2 + OBJC_IVAR____TtC8StocksUI14PaywallTracker_adReferralData;
  swift_beginAccess();
  sub_1DC1D9C08(v48, v49, &qword_1EDB274F8, v47);
  swift_endAccess();
  v50 = sub_1DC403BB0();
  v51 = v94;
  sub_1DC232614(a2[5], a2[6], v50, v94);
  sub_1DC403B98();
  v52 = v51;
  v53 = v77;
  (*(void (**)(char *, uint64_t, uint64_t))(v95 + 16))(v93, v52, v96);
  v54 = v74;
  sub_1DC4030DC();
  sub_1DC080808(&qword_1EDB29790, (uint64_t (*)(uint64_t))MEMORY[0x1E0DACFD0], MEMORY[0x1E0DACFC0]);
  v55 = v54;
  v56 = v75;
  v93 = a1;
  sub_1DC4015C4();
  v57 = v78;
  (*(void (**)(char *, uint64_t))(v76 + 8))(v55, v56);
  (*(void (**)(char *, uint64_t, uint64_t))(v53 + 16))(v44, v82, v57);
  v58 = (*(uint64_t (**)(char *, uint64_t))(v53 + 88))(v44, v57);
  if (v58 == *MEMORY[0x1E0D620A0])
  {
    v59 = v79;
    v60 = v80;
    v61 = v81;
    (*(void (**)(char *, _QWORD, uint64_t))(v80 + 104))(v79, *MEMORY[0x1E0DACEE0], v81);
    goto LABEL_10;
  }
  v59 = v79;
  v60 = v80;
  v61 = v81;
  if (v58 == *MEMORY[0x1E0D62060])
  {
    v62 = (unsigned int *)MEMORY[0x1E0DACED8];
LABEL_9:
    (*(void (**)(char *, _QWORD, uint64_t))(v80 + 104))(v79, *v62, v81);
    goto LABEL_10;
  }
  if (v58 == *MEMORY[0x1E0D62068])
    goto LABEL_6;
  if (v58 == *MEMORY[0x1E0D62040])
  {
    v62 = (unsigned int *)MEMORY[0x1E0DACED0];
    goto LABEL_9;
  }
  if (v58 == *MEMORY[0x1E0D62078]
    || v58 == *MEMORY[0x1E0D62048]
    || v58 == *MEMORY[0x1E0D620A8]
    || v58 == *MEMORY[0x1E0D62090]
    || v58 == *MEMORY[0x1E0D62088]
    || v58 == *MEMORY[0x1E0D62050]
    || v58 == *MEMORY[0x1E0D62058]
    || v58 == *MEMORY[0x1E0D62080]
    || v58 == *MEMORY[0x1E0D620B8]
    || v58 == *MEMORY[0x1E0D620B0])
  {
LABEL_6:
    v62 = (unsigned int *)MEMORY[0x1E0DACEE0];
    goto LABEL_9;
  }
  (*(void (**)(char *, _QWORD, uint64_t))(v80 + 104))(v79, *MEMORY[0x1E0DACEE0], v81);
  (*(void (**)(char *, uint64_t))(v53 + 8))(v44, v57);
LABEL_10:
  (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v83, v59, v61);
  v63 = v84;
  sub_1DC402FE0();
  sub_1DC080808(&qword_1EDB274F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DACEC8], MEMORY[0x1E0DACEB8]);
  v64 = v86;
  sub_1DC4015C4();
  (*(void (**)(char *, uint64_t))(v85 + 8))(v63, v64);
  if (a2[3])
  {
    swift_getObjectType();
    v65 = v69;
    sub_1DC403BA4();
    sub_1DC403E2C();
    (*(void (**)(char *, uint64_t))(v70 + 8))(v65, v71);
  }
  swift_bridgeObjectRetain();
  v66 = v89;
  sub_1DC4035BC();
  sub_1DC080808(&qword_1EDB29890, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD700], MEMORY[0x1E0DAD6F0]);
  v67 = v91;
  sub_1DC4015C4();
  (*(void (**)(char *, uint64_t))(v90 + 8))(v66, v67);
  sub_1DC403658();
  sub_1DC080808((unint64_t *)&unk_1EDB298C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD7D8], MEMORY[0x1E0DAD7D0]);
  sub_1DC4015D0();
  (*(void (**)(char *, uint64_t))(v60 + 8))(v59, v61);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v95 + 8))(v94, v96);
}

uint64_t sub_1DC1D8574()
{
  sub_1DC403658();
  sub_1DC080808((unint64_t *)&unk_1EDB298C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD7D8], MEMORY[0x1E0DAD7D0]);
  sub_1DC401594();
  return sub_1DC4015A0();
}

uint64_t sub_1DC1D8604(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  _BYTE *v14;
  int v15;
  void (*v16)(char *, _QWORD, uint64_t);
  uint64_t v18;
  uint64_t v19;
  _OWORD v20[2];

  v3 = sub_1DC402EFC();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1DC402EF0();
  v19 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1DC403DD8();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, __n128))(v11 + 16))(v14, a2, v10, v12);
  v15 = (*(uint64_t (**)(_BYTE *, uint64_t))(v11 + 88))(v14, v10);
  if (v15 == *MEMORY[0x1E0D61E78])
  {
    (*(void (**)(_BYTE *, uint64_t))(v11 + 96))(v14, v10);
    v16 = *(void (**)(char *, _QWORD, uint64_t))(v4 + 104);
    if (*v14 == 1)
      v16(v6, *MEMORY[0x1E0DACD20], v3);
    else
      v16(v6, *MEMORY[0x1E0DACD18], v3);
    sub_1DC402EE4();
    sub_1DC080808(&qword_1F034E2D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DACD10], MEMORY[0x1E0DACD00]);
  }
  else
  {
    if (v15 != *MEMORY[0x1E0D61E70])
    {
      (*(void (**)(_BYTE *, uint64_t))(v11 + 8))(v14, v10);
      goto LABEL_10;
    }
    (*(void (**)(_BYTE *, uint64_t))(v11 + 96))(v14, v10);
    (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E0DACD18], v3);
    sub_1DC402EE4();
    sub_1DC080808(&qword_1F034E2D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DACD10], MEMORY[0x1E0DACD00]);
  }
  sub_1DC4015C4();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v9, v7);
LABEL_10:
  sub_1DC4039D0();
  sub_1DC080808(&qword_1F034E2C8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DADD20], MEMORY[0x1E0DADD18]);
  memset(v20, 0, sizeof(v20));
  sub_1DC4015DC();
  return sub_1DC150744((uint64_t)v20);
}

uint64_t sub_1DC1D8964(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  int v28;
  unsigned int *v29;
  char *v30;
  char *v31;
  int v32;
  unsigned int *v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  int v43;
  int v44;
  void (*v45)(char *, uint64_t);
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  _OWORD v58[2];

  v47 = a3;
  v48 = a1;
  v3 = sub_1DC4038A4();
  v53 = *(_QWORD *)(v3 - 8);
  v54 = v3;
  MEMORY[0x1E0C80A78](v3);
  v52 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC092F50(0, &qword_1F034E2C0, (void (*)(uint64_t))MEMORY[0x1E0D61F70]);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v46 - v6;
  v8 = sub_1DC403DFC();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v46 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v46 - v12;
  v14 = sub_1DC403874();
  v50 = *(_QWORD *)(v14 - 8);
  v51 = v14;
  MEMORY[0x1E0C80A78](v14);
  v49 = (char *)&v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v55 = (char *)&v46 - v17;
  v18 = sub_1DC403BF8();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v21 = (char *)&v46 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_1DC4037F0();
  v56 = *(_QWORD *)(v22 - 8);
  v57 = v22;
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)&v46 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v25);
  v27 = (char *)&v46 - v26;
  sub_1DC403BBC();
  v28 = (*(uint64_t (**)(char *, uint64_t))(v19 + 88))(v21, v18);
  if (v28 == *MEMORY[0x1E0D61888])
  {
    (*(void (**)(char *, uint64_t))(v19 + 96))(v21, v18);
    swift_unknownObjectRelease();
    goto LABEL_3;
  }
  if (v28 == *MEMORY[0x1E0D618A8])
  {
    v29 = (unsigned int *)MEMORY[0x1E0DADA28];
    goto LABEL_6;
  }
  if (v28 == *MEMORY[0x1E0D618B0]
    || v28 == *MEMORY[0x1E0D61890]
    || v28 == *MEMORY[0x1E0D618B8]
    || v28 == *MEMORY[0x1E0D618A0]
    || v28 == *MEMORY[0x1E0D61898])
  {
LABEL_3:
    v29 = (unsigned int *)MEMORY[0x1E0DADA30];
LABEL_6:
    (*(void (**)(char *, _QWORD, uint64_t))(v56 + 104))(v27, *v29, v57);
    goto LABEL_7;
  }
  (*(void (**)(char *, _QWORD, uint64_t))(v56 + 104))(v27, *MEMORY[0x1E0DADA30], v57);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
LABEL_7:
  v30 = v55;
  sub_1DC092F9C(v47, (uint64_t)v7, &qword_1F034E2C0, (void (*)(uint64_t))MEMORY[0x1E0D61F70]);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_1DC092F14((uint64_t)v7, &qword_1F034E2C0, (void (*)(uint64_t))MEMORY[0x1E0D61F70]);
LABEL_11:
    v33 = (unsigned int *)MEMORY[0x1E0DADB10];
LABEL_12:
    v34 = *v33;
    v35 = v50;
    v36 = *(void (**)(char *, uint64_t, uint64_t))(v50 + 104);
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v13, v7, v8);
  v31 = v46;
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v46, v13, v8);
  v32 = (*(uint64_t (**)(char *, uint64_t))(v9 + 88))(v31, v8);
  if (v32 == *MEMORY[0x1E0D61F60])
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v13, v8);
    goto LABEL_11;
  }
  v43 = v32;
  if (v32 == *MEMORY[0x1E0D61F58])
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v13, v8);
    v33 = (unsigned int *)MEMORY[0x1E0DADB00];
    goto LABEL_12;
  }
  if (v32 == *MEMORY[0x1E0D61F68])
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v13, v8);
    v33 = (unsigned int *)MEMORY[0x1E0DADB08];
    goto LABEL_12;
  }
  v44 = *MEMORY[0x1E0D61F50];
  v45 = *(void (**)(char *, uint64_t))(v9 + 8);
  v45(v13, v8);
  v35 = v50;
  v36 = *(void (**)(char *, uint64_t, uint64_t))(v50 + 104);
  if (v43 != v44)
  {
    v30 = v55;
    v37 = v51;
    v36(v55, *MEMORY[0x1E0DADB10], v51);
    v45(v46, v8);
    goto LABEL_14;
  }
  v34 = *MEMORY[0x1E0DADAF8];
  v30 = v55;
LABEL_13:
  v37 = v51;
  v36(v30, v34, v51);
LABEL_14:
  v39 = v56;
  v38 = v57;
  (*(void (**)(char *, char *, uint64_t))(v56 + 16))(v24, v27, v57);
  (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v49, v30, v37);
  v40 = v52;
  sub_1DC403898();
  sub_1DC080808(&qword_1F034CE90, (uint64_t (*)(uint64_t))MEMORY[0x1E0DADB70], MEMORY[0x1E0DADB60]);
  v41 = v54;
  sub_1DC4015C4();
  (*(void (**)(char *, uint64_t))(v53 + 8))(v40, v41);
  sub_1DC4037FC();
  sub_1DC080808(&qword_1F034CE98, (uint64_t (*)(uint64_t))MEMORY[0x1E0DADA48], MEMORY[0x1E0DADA40]);
  memset(v58, 0, sizeof(v58));
  sub_1DC4015DC();
  sub_1DC150744((uint64_t)v58);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v30, v37);
  return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v27, v38);
}

uint64_t sub_1DC1D8F50()
{
  uint64_t v0;

  swift_release();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  sub_1DC092F14(v0 + OBJC_IVAR____TtC8StocksUI14PaywallTracker_feedData, &qword_1EDB29960, (void (*)(uint64_t))MEMORY[0x1E0DADDD0]);
  sub_1DC092F14(v0 + OBJC_IVAR____TtC8StocksUI14PaywallTracker_groupData, &qword_1EDB29988, (void (*)(uint64_t))MEMORY[0x1E0DADF38]);
  sub_1DC092F14(v0 + OBJC_IVAR____TtC8StocksUI14PaywallTracker_articleData, &qword_1EDB29800, (void (*)(uint64_t))MEMORY[0x1E0DAD350]);
  sub_1DC092F14(v0 + OBJC_IVAR____TtC8StocksUI14PaywallTracker_campaignData, &qword_1EDB29780, (void (*)(uint64_t))MEMORY[0x1E0DACF80]);
  sub_1DC092F14(v0 + OBJC_IVAR____TtC8StocksUI14PaywallTracker_adReferralData, &qword_1EDB274F8, (void (*)(uint64_t))MEMORY[0x1E0DAD1E8]);
  return swift_deallocClassInstance();
}

uint64_t sub_1DC1D9028()
{
  return type metadata accessor for PaywallTracker();
}

uint64_t type metadata accessor for PaywallTracker()
{
  uint64_t result;

  result = qword_1EDB276F8;
  if (!qword_1EDB276F8)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1DC1D906C()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;

  sub_1DC092F50(319, &qword_1EDB29960, (void (*)(uint64_t))MEMORY[0x1E0DADDD0]);
  if (v0 <= 0x3F)
  {
    sub_1DC092F50(319, &qword_1EDB29988, (void (*)(uint64_t))MEMORY[0x1E0DADF38]);
    if (v1 <= 0x3F)
    {
      sub_1DC092F50(319, &qword_1EDB29800, (void (*)(uint64_t))MEMORY[0x1E0DAD350]);
      if (v2 <= 0x3F)
      {
        sub_1DC092F50(319, &qword_1EDB29780, (void (*)(uint64_t))MEMORY[0x1E0DACF80]);
        if (v3 <= 0x3F)
        {
          sub_1DC092F50(319, &qword_1EDB274F8, (void (*)(uint64_t))MEMORY[0x1E0DAD1E8]);
          if (v4 <= 0x3F)
            swift_updateClassMetadata2();
        }
      }
    }
  }
}

uint64_t sub_1DC1D91B8()
{
  return sub_1DC1D6D2C();
}

uint64_t sub_1DC1D91DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  char *v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v5 = v4;
  v22 = a4;
  v23 = a3;
  v25 = a1;
  v26 = a2;
  v6 = sub_1DC403E38();
  v7 = *(_QWORD *)(v6 - 8);
  v21 = v6;
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](v6);
  v9 = sub_1DC403BC8();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  v12 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *v5;
  v24 = *(_QWORD *)(*v5 + 16);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v10 + 16))(v13, v22, v9, v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v23, v6);
  v15 = (*(unsigned __int8 *)(v10 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v16 = (v11 + *(unsigned __int8 *)(v7 + 80) + v15) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v14;
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v17 + v15, v13, v9);
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v17 + v16, (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v21);
  v18 = (_QWORD *)(v17 + ((v8 + v16 + 7) & 0xFFFFFFFFFFFFFFF8));
  v19 = v26;
  *v18 = v25;
  v18[1] = v19;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1DC401828();
  return swift_release();
}

uint64_t sub_1DC1D9378()
{
  sub_1DC403658();
  sub_1DC080808((unint64_t *)&unk_1EDB298C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD7D8], MEMORY[0x1E0DAD7D0]);
  return sub_1DC4018A0();
}

uint64_t sub_1DC1D93DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  void (*v12)(char *, uint64_t, uint64_t, __n128);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, char *, uint64_t);
  uint64_t v20;

  v4 = sub_1DC3FFFEC();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v20 - v10;
  v12 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v5 + 16);
  v12((char *)&v20 - v10, a1, v4, v9);
  ((void (*)(char *, uint64_t, uint64_t))v12)(v7, a2, v4);
  v13 = *(unsigned __int8 *)(v5 + 80);
  v14 = (v13 + 16) & ~v13;
  v15 = (v6 + v13 + v14) & ~v13;
  v16 = swift_allocObject();
  v17 = v16 + v14;
  v18 = *(void (**)(uint64_t, char *, uint64_t))(v5 + 32);
  v18(v17, v11, v4);
  v18(v16 + v15, v7, v4);
  sub_1DC401828();
  return swift_release();
}

uint64_t sub_1DC1D950C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v2 = sub_1DC403DD8();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  v5 = MEMORY[0x1E0C80A78](v2);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v3 + 16))((char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2, v5);
  v6 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v7 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v7 + v6, (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
  sub_1DC401828();
  return swift_release();
}

uint64_t sub_1DC1D95EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;

  v17 = a1;
  v18 = a2;
  v2 = sub_1DC403BC8();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC092F50(0, &qword_1F034E2C0, (void (*)(uint64_t))MEMORY[0x1E0D61F70]);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v17 - v11;
  sub_1DC403D54();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v18, v2);
  sub_1DC092F9C((uint64_t)v12, (uint64_t)v9, &qword_1F034E2C0, (void (*)(uint64_t))MEMORY[0x1E0D61F70]);
  v13 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v14 = (v4 + v13 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v15 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v15 + v13, v5, v2);
  sub_1DC1D9874((uint64_t)v9, v15 + v14);
  sub_1DC401828();
  swift_release();
  return sub_1DC092F14((uint64_t)v12, &qword_1F034E2C0, (void (*)(uint64_t))MEMORY[0x1E0D61F70]);
}

uint64_t sub_1DC1D9798()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = sub_1DC403BC8();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = v3 + *(_QWORD *)(v2 + 64);
  sub_1DC092F50(0, &qword_1F034E2C0, (void (*)(uint64_t))MEMORY[0x1E0D61F70]);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80);
  v7 = (v4 + v6) & ~v6;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  v8 = sub_1DC403DFC();
  v9 = *(_QWORD *)(v8 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v9 + 48))(v0 + v7, 1, v8))
    (*(void (**)(unint64_t, uint64_t))(v9 + 8))(v0 + v7, v8);
  return swift_deallocObject();
}

uint64_t sub_1DC1D9874(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1DC092F50(0, &qword_1F034E2C0, (void (*)(uint64_t))MEMORY[0x1E0D61F70]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC1D98C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *(_QWORD *)(sub_1DC403BC8() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = v4 + *(_QWORD *)(v3 + 64);
  sub_1DC092F50(0, &qword_1F034E2C0, (void (*)(uint64_t))MEMORY[0x1E0D61F70]);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80);
  return sub_1DC1D8964(a1, v1 + v4, v1 + ((v5 + v7) & ~v7));
}

uint64_t sub_1DC1D9940()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_1DC403DD8();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_1DC1D99A0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(sub_1DC403DD8() - 8) + 80);
  return sub_1DC1D8604(a1, v1 + ((v3 + 16) & ~v3));
}

uint64_t sub_1DC1D99DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);

  v1 = sub_1DC3FFFEC();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = (*(_QWORD *)(v2 + 64) + v3 + v4) & ~v3;
  v6 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v6(v0 + v4, v1);
  v6(v0 + v5, v1);
  return swift_deallocObject();
}

uint64_t sub_1DC1D9A60()
{
  sub_1DC3FFFEC();
  return sub_1DC1D8574();
}

uint64_t sub_1DC1D9AB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v1 = sub_1DC403BC8();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = sub_1DC403E38();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (v3 + v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1DC1D9B84(char *a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t *v8;

  v3 = *(_QWORD *)(sub_1DC403BC8() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v3 + 64);
  v6 = *(_QWORD *)(sub_1DC403E38() - 8);
  v7 = (v4 + v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = (uint64_t *)(v1 + ((*(_QWORD *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8));
  return sub_1DC1D7AA8(a1, *(_QWORD **)(v1 + 16), v1 + v4, v1 + v7, *v8, v8[1]);
}

uint64_t sub_1DC1D9C08(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  uint64_t v6;

  sub_1DC092F50(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a2, a1, v6);
  return a2;
}

uint64_t sub_1DC1D9C54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  _BYTE v9[16];

  v0 = sub_1DC401354();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = &v9[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = sub_1DC401348();
  v5 = MEMORY[0x1E0C80A78](v4);
  (*(void (**)(_BYTE *, _QWORD, __n128))(v7 + 104))(&v9[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)], *MEMORY[0x1E0DB57E8], v5);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB5800], v0);
  v9[15] = 1;
  sub_1DC132DB8();
  swift_allocObject();
  result = sub_1DC4013A8();
  qword_1EDB28E60 = result;
  return result;
}

uint64_t static Settings.ChartOptions.showYTD.getter()
{
  if (qword_1EDB28E68 != -1)
    swift_once();
  return swift_retain();
}

ValueMetadata *type metadata accessor for Settings.ChartOptions()
{
  return &type metadata for Settings.ChartOptions;
}

void sub_1DC1D9DC0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v27 = a2;
  v28 = a3;
  v4 = sub_1DC403610();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC1DA03C();
  v9 = v8;
  v10 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1DC401564();
  v14 = MEMORY[0x1E0C80A78](v13);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v15 + 16))((char *)&v25 - v16, a1, v13, v14);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v26 = v4;
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    v17 = (void *)sub_1DC40154C();
    v18 = v29;
    v19 = sub_1DC4017B0();
    v21 = v20;

    if (!v18)
    {
      sub_1DC080808(&qword_1EDB298A8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD750], MEMORY[0x1E0DAD760]);
      sub_1DC402458();
      sub_1DC1D565C(v19, v21);
      v22 = v28;
      (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v28, v7, v26);
      v23 = type metadata accessor for EngagementEvent();
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v22, 0, 1, v23);
    }
  }
  else
  {
    v24 = type metadata accessor for EngagementEvent();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v28, 1, 1, v24);
  }
}

uint64_t type metadata accessor for AppSessionStartEventTranslator()
{
  return objc_opt_self();
}

void sub_1DC1DA028(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_1DC1D9DC0(a1, a2, a3);
}

void sub_1DC1DA03C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB29150)
  {
    sub_1DC40361C();
    sub_1DC080808(&qword_1EDB298B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD768], MEMORY[0x1E0DAD740]);
    v0 = sub_1DC401564();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB29150);
  }
}

void sub_1DC1DA0B4(uint64_t a1, uint64_t a2)
{
  uint64_t Strong;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  uint64_t v11;
  uint64_t ObjectType;

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v4 = Strong;
    swift_beginAccess();
    v5 = MEMORY[0x1DF0CAD78](a2 + 16);
    if (v5)
    {
      v6 = (void *)v5;
      v7 = MEMORY[0x1DF0CAD78](v4 + 16);
      if (v7)
      {
        v8 = v7;
        v9 = (char *)sub_1DC4053B0();
        v10 = *(id *)&v9[OBJC_IVAR____TtC8StocksUI9StockView_priceChangeButton];

        v11 = *(_QWORD *)(*(_QWORD *)(v8 + OBJC_IVAR____TtC8StocksUI23StockListViewController_eventHandler) + 40);
        ObjectType = swift_getObjectType();
        (*(void (**)(uint64_t, uint64_t))(v11 + 56))(ObjectType, v11);

        swift_release();
        swift_unknownObjectRelease();
      }
      else
      {
        swift_release();

      }
    }
    else
    {
      swift_release();
    }
  }
}

uint64_t sub_1DC1DA1C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t Strong;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t ObjCClassFromMetadata;
  id v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  id v32;
  void *v33;
  void *v34;
  id v35;
  id v36;
  int v37;
  uint64_t v38;
  char **v39;
  char *v40;
  char *v41;
  int v42;
  id v43;
  void *v44;
  void (*v45)(char *, char *, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  char *v53;
  id v54;
  id v55;
  void (*v56)(char *, uint64_t);
  BOOL v57;
  id v58;
  uint64_t v59;
  id v60;
  void (*v61)(char *, uint64_t);
  void *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  id v69;
  void *v70;
  id v71;
  id v72;
  id v73;
  id v74;
  void *v75;
  void *v76;
  id v77;
  id v78;
  id v80[3];
  id v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  id v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  id v94;
  char *v95;
  int v96;
  char *v97;
  char *v98;
  id v99;
  int v100;
  uint64_t aBlock;
  uint64_t v102;
  uint64_t (*v103)(uint64_t, void *);
  void *v104;
  void *v105;
  uint64_t v106;
  uint64_t v107;

  v93 = a4;
  sub_1DC08CBF0(0, (unint64_t *)&qword_1EDB29BE0, type metadata accessor for StockListModel, sub_1DC157B24, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6EE8]);
  v92 = v6;
  v91 = *(_QWORD *)(v6 - 8);
  v90 = *(_QWORD *)(v91 + 64);
  MEMORY[0x1E0C80A78](v6);
  v89 = (char *)v80 - v7;
  sub_1DC0D8B60(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v80 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1DC400280();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x1E0C80A78](v11);
  v97 = (char *)v80 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x1E0C80A78](v13);
  v17 = (char *)v80 - v16;
  v18 = MEMORY[0x1E0C80A78](v15);
  v98 = (char *)v80 - v19;
  MEMORY[0x1E0C80A78](v18);
  v21 = (char *)v80 - v20;
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  v23 = MEMORY[0x1E0DEE9D8];
  if (Strong)
  {
    v24 = Strong;
    swift_beginAccess();
    v25 = MEMORY[0x1DF0CAD78](a2 + 16);
    if (!v25)
    {
      swift_release();
      return v23;
    }
    v26 = (void *)v25;
    swift_beginAccess();
    v99 = (id)MEMORY[0x1DF0CAD78](a3 + 16);
    if (!v99)
    {
      swift_release();

      return v23;
    }
    v95 = v21;
    v85 = v17;
    v107 = v23;
    type metadata accessor for Localized();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    v81 = (id)objc_opt_self();
    v82 = ObjCClassFromMetadata;
    v28 = objc_msgSend(v81, sel_bundleForClass_, ObjCClassFromMetadata);
    sub_1DC3FFC80();

    v29 = swift_allocObject();
    v84 = v24;
    swift_weakInit();
    v30 = swift_allocObject();
    *(_QWORD *)(v30 + 16) = v29;
    *(_QWORD *)(v30 + 24) = v26;
    v31 = objc_allocWithZone(MEMORY[0x1E0DC33F0]);
    swift_retain();
    v32 = v26;
    v33 = (void *)sub_1DC408A1C();
    swift_bridgeObjectRelease();
    v105 = sub_1DC1DB6D4;
    v106 = v30;
    aBlock = MEMORY[0x1E0C809B0];
    v102 = 1107296256;
    v103 = sub_1DC1DB22C;
    v104 = &block_descriptor_14;
    v34 = _Block_copy(&aBlock);
    v35 = objc_msgSend(v31, sel_initWithName_actionHandler_, v33, v34);

    _Block_release(v34);
    swift_release();
    swift_release();
    v36 = v35;
    MEMORY[0x1DF0C9530]();
    if (*(_QWORD *)((v107 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v107 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
LABEL_28:
      sub_1DC408D4C();
    v80[0] = v36;
    sub_1DC408D64();
    sub_1DC408CF8();
    v37 = 0;
    v38 = 0;
    v39 = &selRef_scrollViewDidScroll_;
    v80[2] = (id)0x80000001DC43A410;
    v80[1] = (id)0x80000001DC43A3D0;
    v83 = v12;
    v40 = v85;
    v41 = v98;
    v94 = v32;
    while (1)
    {
      v100 = v37;
      v42 = *((unsigned __int8 *)&unk_1EA44D1E0 + v38 + 32);
      v43 = objc_msgSend(v99, v39[368], v32);
      if (!v43)
        break;
      v44 = v43;
      sub_1DC400238();

      v45 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
      v45(v10, v41, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v10, 0, 1, v11);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
        goto LABEL_7;
      v36 = v95;
      v45(v95, v10, v11);
      v46 = sub_1DC400250();
      v47 = -1;
      if (!v42)
        v47 = 1;
      v48 = v46 + v47;
      if (__OFADD__(v46, v47))
      {
        __break(1u);
        goto LABEL_28;
      }
      v49 = sub_1DC400274();
      MEMORY[0x1DF0C0AB8](v48, v49);
      v50 = sub_1DC400250();
      v51 = v97;
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v97, v40, v11);
      if (v50 < 0)
      {
        v61 = *(void (**)(char *, uint64_t))(v12 + 8);
        v61(v51, v11);
        v61(v40, v11);
        v61((char *)v36, v11);
      }
      else
      {
        v96 = v42;
        v52 = sub_1DC400250();
        v53 = v10;
        v54 = v32;
        v55 = objc_msgSend(v99, sel_numberOfItemsInSection_, sub_1DC400274());
        v56 = *(void (**)(char *, uint64_t))(v12 + 8);
        v56(v51, v11);
        v56(v40, v11);
        v56((char *)v36, v11);
        v41 = v98;
        v57 = v52 < (uint64_t)v55;
        v32 = v54;
        v10 = v53;
        v39 = &selRef_scrollViewDidScroll_;
        if (!v57)
          goto LABEL_8;
        v58 = objc_msgSend(v81, sel_bundleForClass_, v82);
        v86 = sub_1DC3FFC80();
        v87 = v59;

        v60 = objc_msgSend((id)objc_opt_self(), sel_configurationWithPointSize_, 30.0);
        v62 = (void *)sub_1DC408A1C();
        v88 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_withConfiguration_, v62, v60);

        v63 = swift_allocObject();
        swift_weakInit();
        v64 = v91;
        v65 = v89;
        v66 = v92;
        (*(void (**)(char *, uint64_t, uint64_t))(v91 + 16))(v89, v93, v92);
        v67 = (*(unsigned __int8 *)(v64 + 80) + 41) & ~(unint64_t)*(unsigned __int8 *)(v64 + 80);
        v68 = swift_allocObject();
        v69 = v99;
        *(_QWORD *)(v68 + 16) = v63;
        *(_QWORD *)(v68 + 24) = v69;
        v70 = v94;
        *(_QWORD *)(v68 + 32) = v94;
        *(_BYTE *)(v68 + 40) = v96;
        (*(void (**)(unint64_t, char *, uint64_t))(v64 + 32))(v68 + v67, v65, v66);
        v71 = objc_allocWithZone(MEMORY[0x1E0DC33F0]);
        v72 = v70;
        v73 = v88;
        swift_retain();
        v74 = v69;
        v75 = (void *)sub_1DC408A1C();
        swift_bridgeObjectRelease();
        v105 = sub_1DC1DB780;
        v106 = v68;
        aBlock = MEMORY[0x1E0C809B0];
        v102 = 1107296256;
        v103 = sub_1DC1DB22C;
        v104 = &block_descriptor_68;
        v76 = _Block_copy(&aBlock);
        v77 = objc_msgSend(v71, sel_initWithName_image_actionHandler_, v75, v73, v76);

        _Block_release(v76);
        swift_release();
        swift_release();
        v78 = v77;
        MEMORY[0x1DF0C9530]();
        if (*(_QWORD *)((v107 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v107 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1DC408D4C();
        sub_1DC408D64();
        sub_1DC408CF8();

        v12 = v83;
        v40 = v85;
        v41 = v98;
        v32 = v94;
      }
      v39 = &selRef_scrollViewDidScroll_;
LABEL_8:
      v37 = 1;
      v38 = 1u;
      if ((v100 & 1) != 0)
      {

        swift_release();
        return v107;
      }
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, 1, 1, v11);
LABEL_7:
    sub_1DC0926D8((uint64_t)v10, (uint64_t (*)(_QWORD))sub_1DC0D8B60);
    goto LABEL_8;
  }
  return v23;
}

uint64_t sub_1DC1DAC34()
{
  uint64_t result;
  uint64_t v1;
  char *v2;
  id v3;
  uint64_t v4;
  uint64_t ObjectType;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v1 = MEMORY[0x1DF0CAD78](result + 16);
    swift_release();
    if (v1)
    {
      swift_beginAccess();
      if (swift_weakLoadStrong())
      {
        v2 = (char *)sub_1DC4053B0();
        v3 = *(id *)&v2[OBJC_IVAR____TtC8StocksUI9StockView_priceChangeButton];

        v4 = *(_QWORD *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC8StocksUI23StockListViewController_eventHandler) + 40);
        ObjectType = swift_getObjectType();
        (*(void (**)(uint64_t, uint64_t))(v4 + 56))(ObjectType, v4);

        swift_unknownObjectRelease();
        swift_release();
        return 1;
      }
      swift_unknownObjectRelease();
    }
    return 0;
  }
  return result;
}

uint64_t sub_1DC1DAD3C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, int a5, uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t result;
  uint64_t v22;
  id v23;
  void *v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;

  v32 = a5;
  v33 = a4;
  sub_1DC0D8B60(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1DC400280();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x1E0C80A78](v13);
  v18 = (char *)&v30 - v17;
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v30 - v19;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (!result)
    return result;
  v31 = a6;
  v22 = MEMORY[0x1DF0CAD78](result + 16);
  swift_release();
  if (!v22)
    return 0;
  swift_beginAccess();
  if (!swift_weakLoadStrong())
  {
    swift_unknownObjectRelease();
    return 0;
  }
  v23 = objc_msgSend(a3, sel_indexPathForCell_, v33);
  if (!v23)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, 1, 1, v11);
    goto LABEL_12;
  }
  v24 = v23;
  sub_1DC400238();

  v25 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
  v25(v10, v18, v11);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v10, 0, 1, v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
LABEL_12:
    swift_unknownObjectRelease();
    swift_release();
    sub_1DC0926D8((uint64_t)v10, (uint64_t (*)(_QWORD))sub_1DC0D8B60);
    return 0;
  }
  v25(v20, v10, v11);
  result = sub_1DC400250();
  v26 = -1;
  if ((v32 & 1) == 0)
    v26 = 1;
  v27 = result + v26;
  if (__OFADD__(result, v26))
  {
    __break(1u);
  }
  else
  {
    v28 = sub_1DC400274();
    MEMORY[0x1DF0C0AB8](v27, v28);
    sub_1DC302B54(v31, (uint64_t)v20, (uint64_t)v15);
    swift_unknownObjectRelease();
    swift_release();
    v29 = *(void (**)(char *, uint64_t))(v12 + 8);
    v29(v15, v11);
    v29(v20, v11);
    return 1;
  }
  return result;
}

uint64_t sub_1DC1DAFF0()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t result;
  uint64_t v8;

  sub_1DC176BD8(0);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v8 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1DC40124C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    __swift_project_boxed_opaque_existential_1((_QWORD *)(result + 160), *(_QWORD *)(result + 184));
    sub_1DC400A60();
    swift_getObjectType();
    if (qword_1EDB2AA18 != -1)
      swift_once();
    (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v2, v6, v3);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v4 + 56))(v2, 0, 1, v3);
    sub_1DC404AD4();
    sub_1DC0926D8((uint64_t)v2, (uint64_t (*)(_QWORD))sub_1DC176BD8);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    return swift_release();
  }
  return result;
}

uint64_t sub_1DC1DB1A4()
{
  uint64_t v0;

  sub_1DC148A20(v0 + 16);
  swift_release();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 104);
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 160);
  __swift_destroy_boxed_opaque_existential_1(v0 + 200);
  return v0;
}

uint64_t sub_1DC1DB208()
{
  sub_1DC1DB1A4();
  return swift_deallocClassInstance();
}

uint64_t sub_1DC1DB22C(uint64_t a1, void *a2)
{
  uint64_t (*v3)(void);
  id v4;

  v3 = *(uint64_t (**)(void))(a1 + 32);
  swift_retain();
  v4 = a2;
  LOBYTE(v3) = v3();
  swift_release();

  return v3 & 1;
}

uint64_t sub_1DC1DB27C()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1DC1DB2A0()
{
  return sub_1DC1DAFF0();
}

uint64_t sub_1DC1DB2A8()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1DC1DB2E4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DC1DB308()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1DC1DB32C()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1DC1DB358()
{
  uint64_t v0;

  sub_1DC1DA0B4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1DC1DB360()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  sub_1DC08CBF0(0, (unint64_t *)&qword_1EDB29BE0, type metadata accessor for StockListModel, sub_1DC157B24, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6EE8]);
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v0 + v4, v2);
  return swift_deallocObject();
}

uint64_t sub_1DC1DB404()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  sub_1DC08CBF0(0, (unint64_t *)&qword_1EDB29BE0, type metadata accessor for StockListModel, sub_1DC157B24, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6EE8]);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  return sub_1DC1DA1C8(v0[2], v0[3], v0[4], (uint64_t)v0 + ((v2 + 40) & ~v2));
}

uint64_t sub_1DC1DB458()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;

  v1 = (int *)type metadata accessor for StockViewModel();
  v2 = *((_QWORD *)v1 - 1);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64) + v3 + 7;
  swift_release();
  swift_release();
  v5 = v0 + v3;
  v6 = sub_1DC4010E4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = v5 + v1[5];
  v8 = sub_1DC401030();
  v9 = *(_QWORD *)(v8 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  v10 = v4 & 0xFFFFFFFFFFFFFFF8;
  v11 = v5 + v1[6];
  v12 = type metadata accessor for StockSparklineViewModel(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 1, v12))
  {
    v13 = sub_1DC408614();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v11, v13);
    v14 = v11 + *(int *)(v12 + 32);
    v15 = sub_1DC400F7C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14, v15);
  }
  v16 = v5 + v1[7];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v17 = type metadata accessor for PriceViewModel();
  v18 = v16 + *(int *)(v17 + 40);
  v19 = sub_1DC4011C8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v18, v19);
  v20 = v16 + *(int *)(v17 + 44);
  v21 = sub_1DC400118();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 8))(v20, v21);
  v22 = v5 + v1[8];
  v23 = sub_1DC4008EC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 8))(v22, v23);

  v24 = *(void **)(v0 + v10 + 320);
  if (v24 != (void *)1)

  return swift_deallocObject();
}

uint64_t sub_1DC1DB65C()
{
  uint64_t v0;
  void *v1;

  swift_release();
  swift_release();

  v1 = *(void **)(v0 + 352);
  if (v1 != (void *)1)

  return swift_deallocObject();
}

uint64_t sub_1DC1DB6A8()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1DC1DB6D4()
{
  return sub_1DC1DAC34();
}

uint64_t sub_1DC1DB6DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  sub_1DC08CBF0(0, (unint64_t *)&qword_1EDB29BE0, type metadata accessor for StockListModel, sub_1DC157B24, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6EE8]);
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 41) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  swift_release();

  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v0 + v4, v2);
  return swift_deallocObject();
}

uint64_t sub_1DC1DB780(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  sub_1DC08CBF0(0, (unint64_t *)&qword_1EDB29BE0, type metadata accessor for StockListModel, sub_1DC157B24, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6EE8]);
  v4 = *(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80);
  return sub_1DC1DAD3C(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24), *(_QWORD *)(v1 + 32), *(unsigned __int8 *)(v1 + 40), v1 + ((v4 + 41) & ~v4));
}

uint64_t sub_1DC1DB7E8()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocObject();
}

uint64_t sub_1DC1DB834(_QWORD *a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC083C10();
  result = sub_1DC4025FC();
  if (result)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    type metadata accessor for StocksV2UserActivityDeserializer();
    result = sub_1DC4025FC();
    if (result)
    {
      v3 = result;
      type metadata accessor for StocksShortcutItemHandler();
      v4 = swift_allocObject();
      sub_1DC1DBA5C();
      sub_1DC405C20();
      v5 = swift_allocObject();
      *(_OWORD *)(v5 + 16) = xmmword_1DC40DC10;
      sub_1DC405C14();
      *(_QWORD *)(v4 + 16) = v5;
      type metadata accessor for StocksActivity(0);
      sub_1DC080808((unint64_t *)&qword_1EDB29CA0, (uint64_t (*)(uint64_t))sub_1DC083C10, MEMORY[0x1E0DB75C0]);
      sub_1DC40424C();
      *(_QWORD *)(v4 + OBJC_IVAR____TtC8StocksUI25StocksShortcutItemHandler_userActivityDeserializer) = v3;
      return v4;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1DC1DB9B0(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  _QWORD v5[5];

  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  v2 = type metadata accessor for StocksShortcutItemHandler();
  result = sub_1DC4025FC();
  if (result)
  {
    v4 = result;
    v5[3] = v2;
    v5[4] = sub_1DC080808(&qword_1F034E2D8, (uint64_t (*)(uint64_t))type metadata accessor for StocksShortcutItemHandler, (uint64_t)&unk_1DC41921C);
    v5[0] = v4;
    sub_1DC405BFC();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1DC1DBA5C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F034E2E0)
  {
    sub_1DC405C20();
    v0 = sub_1DC4099C4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1F034E2E0);
  }
}

void *sub_1DC1DBAB0(void *a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  void *v5;
  unint64_t v6;
  char v7;
  id v8;
  void *v10;

  if ((a2 & 0xC000000000000001) == 0)
  {
    if (*(_QWORD *)(a2 + 16))
    {
      v6 = sub_1DC1A3734((uint64_t)a1);
      if ((v7 & 1) != 0)
      {
        v5 = *(void **)(*(_QWORD *)(a2 + 56) + 8 * v6);
        v8 = v5;
        return v5;
      }
    }
    return 0;
  }
  v3 = a1;
  v4 = sub_1DC409820();

  if (!v4)
    return 0;
  sub_1DC0821D4(0, &qword_1F034E2E8);
  swift_unknownObjectRetain();
  swift_dynamicCast();
  v5 = v10;
  swift_unknownObjectRelease();
  return v5;
}

uint64_t sub_1DC1DBB84(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t (*v11)(uint64_t);
  uint64_t (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v35 = a8;
  v33 = a6;
  v34 = a7;
  v31 = a4;
  v32 = a5;
  v29 = a2;
  v30 = a3;
  v11 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8];
  v12 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1DC089DA4(0, (unint64_t *)&unk_1EDB28A70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v29 - v14;
  v16 = sub_1DC3FFDD0();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v29 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC089DA4(0, (unint64_t *)&qword_1EDB299F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D61E10], v12);
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v29 - v21;
  sub_1DC0EDD64(a10, (uint64_t)v15, (unint64_t *)&unk_1EDB28A70, v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    sub_1DC0A6180((uint64_t)v15, (uint64_t)&unk_1EDB28A70, (uint64_t)MEMORY[0x1E0CAFFF8], (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD))sub_1DC089DA4);
    v23 = sub_1DC403DA8();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v22, 1, 1, v23);
  }
  else
  {
    v24 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
    v24(v19, v15, v16);
    v24(v22, v19, v16);
    v25 = *MEMORY[0x1E0D61E08];
    v26 = sub_1DC403DA8();
    v27 = *(_QWORD *)(v26 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v27 + 104))(v22, v25, v26);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v22, 0, 1, v26);
  }
  sub_1DC1DBDDC(a1, v29, v30, v31, v32, v33, v34, v35, a9, (uint64_t)v22);
  return sub_1DC0A6180((uint64_t)v22, (uint64_t)&qword_1EDB299F0, (uint64_t)MEMORY[0x1E0D61E10], (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD))sub_1DC089DA4);
}

void sub_1DC1DBDDC(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  double v25;
  uint64_t v26;
  char *v27;
  id v28;
  void *v29;
  id v30;
  void *v31;
  uint64_t v32;
  id v33;
  id v34;
  id v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  uint64_t v56;
  char *v57;
  char *v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  id v70;
  _OWORD v71[2];
  uint64_t v72;
  _OWORD v73[2];
  uint64_t v74;

  v64 = a7;
  v65 = a8;
  v67 = a6;
  v60 = a5;
  v66 = a4;
  v62 = a1;
  v63 = a3;
  v68 = a2;
  v61 = a10;
  v69 = a9;
  v11 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1DC089DA4(0, (unint64_t *)&unk_1EDB29810, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD3C8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v54 - v13;
  v15 = type metadata accessor for StocksActivity(0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v54 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC089DA4(0, (unint64_t *)&qword_1EDB299F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D61E10], v11);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v54 - v19;
  v21 = type metadata accessor for CampaignRouteModel();
  MEMORY[0x1E0C80A78](v21);
  v23 = (uint64_t *)((char *)&v54 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  *(_QWORD *)&v25 = MEMORY[0x1E0C80A78](v24).n128_u64[0];
  v27 = (char *)&v54 - v26;
  v28 = objc_msgSend(*(id *)(v10 + 64), sel_configuration, v25);
  if (v28)
  {
    v29 = v28;
    if ((objc_msgSend(v28, sel_respondsToSelector_, sel_paidBundleConfig) & 1) != 0)
    {
      v70 = objc_msgSend(v29, sel_paidBundleConfig);
      swift_unknownObjectRelease();
      v30 = objc_msgSend(v70, sel_paywallConfigurationsByType);
      if (!v30)
        goto LABEL_9;
      v31 = v30;
      v58 = v17;
      v57 = v14;
      sub_1DC0821D4(0, (unint64_t *)&qword_1EDB284E0);
      sub_1DC0821D4(0, &qword_1F034E2E8);
      sub_1DC1DC728();
      v32 = sub_1DC40898C();

      v33 = objc_allocWithZone(MEMORY[0x1E0CB37E8]);
      v34 = objc_msgSend(v33, sel_initWithUnsignedInteger_, v69);
      v59 = sub_1DC1DBAB0(v34, v32);

      swift_bridgeObjectRelease();
      if (v59)
      {
        v35 = objc_msgSend(v59, sel_subscriptionButtonConfig);
        if (v35)
        {
          v55 = v35;
          v56 = objc_msgSend(v35, sel_shouldDismissLandingPagePostPurchase);
          if (v67)
          {
            sub_1DC089DA4(0, &qword_1F034C748, (uint64_t (*)(uint64_t))MEMORY[0x1E0D61828], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
            v36 = *(_QWORD *)(sub_1DC403BEC() - 8);
            v37 = (*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
            v38 = v67;
            v39 = swift_allocObject();
            *(_OWORD *)(v39 + 16) = xmmword_1DC40DC10;
            v54 = v39;
            v40 = v39 + v37;
            *(_QWORD *)v40 = v60;
            *(_QWORD *)(v40 + 8) = v38;
            *(_OWORD *)(v40 + 32) = 0u;
            *(_OWORD *)(v40 + 48) = 0u;
            *(_OWORD *)(v40 + 16) = 0u;
            (*(void (**)(void))(v36 + 104))();
          }
          else
          {
            v54 = MEMORY[0x1E0DEE9D8];
          }
          v41 = v61;
          v42 = HIBYTE(v68) & 0xF;
          v43 = v62;
          if ((v68 & 0x2000000000000000) == 0)
            v42 = v62 & 0xFFFFFFFFFFFFLL;
          if (v42)
          {
            swift_bridgeObjectRetain();
          }
          else
          {
            v43 = 0;
            v68 = 0;
          }
          v44 = v65;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v45 = sub_1DC408FA4();
          sub_1DC0EDD64(v41, (uint64_t)v20, (unint64_t *)&qword_1EDB299F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D61E10]);
          v46 = (char *)v23 + *(int *)(v21 + 44);
          *((_QWORD *)v46 + 1) = 0;
          swift_unknownObjectWeakInit();
          v47 = v68;
          *v23 = v43;
          v23[1] = v47;
          v48 = v63;
          v23[2] = v56;
          v23[3] = v48;
          v49 = v64;
          v23[4] = v66;
          v23[5] = v49;
          v50 = v54;
          v23[6] = v44;
          v23[7] = v50;
          v23[8] = v45;
          sub_1DC182D68((uint64_t)v20, (uint64_t)v23 + *(int *)(v21 + 40));
          *((_QWORD *)v46 + 1) = 0;
          swift_unknownObjectWeakAssign();
          sub_1DC1DC780((uint64_t)v23, (uint64_t)v27);
          v51 = (uint64_t)v58;
          sub_1DC1DC7C4((uint64_t)v27, (uint64_t)v58);
          swift_storeEnumTagMultiPayload();
          v52 = sub_1DC403340();
          v53 = (uint64_t)v57;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 56))(v57, 1, 1, v52);
          v74 = 0;
          memset(v73, 0, sizeof(v73));
          v72 = 0;
          memset(v71, 0, sizeof(v71));
          swift_bridgeObjectRetain();
          swift_retain();
          sub_1DC22BAE0(v51, 0, v53, (uint64_t)v73, 0, 0, (uint64_t)v71);
          swift_release();

          sub_1DC0A6180((uint64_t)v71, (uint64_t)&qword_1EDB29410, (uint64_t)&unk_1EDB29400, MEMORY[0x1E0DB35B0], (uint64_t (*)(_QWORD))sub_1DC0A6204);
          sub_1DC0A6180((uint64_t)v73, (uint64_t)&qword_1EDB2ACD0, (uint64_t)&qword_1EDB2ACC0, MEMORY[0x1E0D53040], (uint64_t (*)(_QWORD))sub_1DC0A6204);
          sub_1DC0A6180(v53, (uint64_t)&unk_1EDB29810, (uint64_t)MEMORY[0x1E0DAD3C8], (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD))sub_1DC089DA4);
          sub_1DC0926D8((uint64_t)v58, type metadata accessor for StocksActivity);
          swift_release();
          sub_1DC0926D8((uint64_t)v27, (uint64_t (*)(_QWORD))type metadata accessor for CampaignRouteModel);
        }
        else
        {

        }
      }
      else
      {
LABEL_9:

      }
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1DC1DC460(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE v11[16];
  _OWORD v12[2];
  uint64_t v13;
  _OWORD v14[2];
  uint64_t v15;

  sub_1DC089DA4(0, (unint64_t *)&unk_1EDB29810, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD3C8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v4 = &v11[-v3];
  v5 = type metadata accessor for StocksActivity(0);
  MEMORY[0x1E0C80A78](v5);
  v7 = &v11[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = sub_1DC3FFDD0();
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v7, a1, v8);
  swift_storeEnumTagMultiPayload();
  v9 = sub_1DC403340();
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v4, 1, 1, v9);
  v15 = 0;
  memset(v14, 0, sizeof(v14));
  v13 = 0;
  memset(v12, 0, sizeof(v12));
  swift_retain();
  sub_1DC22BAE0((uint64_t)v7, 0, (uint64_t)v4, (uint64_t)v14, 0, 0, (uint64_t)v12);
  swift_release();
  sub_1DC0A6180((uint64_t)v12, (uint64_t)&qword_1EDB29410, (uint64_t)&unk_1EDB29400, MEMORY[0x1E0DB35B0], (uint64_t (*)(_QWORD))sub_1DC0A6204);
  sub_1DC0A6180((uint64_t)v14, (uint64_t)&qword_1EDB2ACD0, (uint64_t)&qword_1EDB2ACC0, MEMORY[0x1E0D53040], (uint64_t (*)(_QWORD))sub_1DC0A6204);
  sub_1DC0A6180((uint64_t)v4, (uint64_t)&unk_1EDB29810, (uint64_t)MEMORY[0x1E0DAD3C8], (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD))sub_1DC089DA4);
  sub_1DC0926D8((uint64_t)v7, type metadata accessor for StocksActivity);
  return swift_release();
}

uint64_t sub_1DC1DC650()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for PaywallRouter()
{
  return objc_opt_self();
}

uint64_t sub_1DC1DC6A4(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return sub_1DC1DBB84(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
}

void sub_1DC1DC6D4(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_1DC1DBDDC(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
}

uint64_t sub_1DC1DC704(uint64_t a1)
{
  return sub_1DC1DC460(a1);
}

unint64_t sub_1DC1DC728()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1F034E2F0;
  if (!qword_1F034E2F0)
  {
    v1 = sub_1DC0821D4(255, (unint64_t *)&qword_1EDB284E0);
    result = MEMORY[0x1DF0CAB8C](MEMORY[0x1E0DEFCF8], v1);
    atomic_store(result, (unint64_t *)&qword_1F034E2F0);
  }
  return result;
}

uint64_t sub_1DC1DC780(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CampaignRouteModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC1DC7C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CampaignRouteModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t *sub_1DC1DC808(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v20 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1DC40124C();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v13 = *(int *)(a3 + 24);
    v14 = (char *)v4 + v13;
    v15 = (char *)a2 + v13;
    sub_1DC15C2FC();
    v17 = v16;
    v18 = *(_QWORD *)(v16 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v15, 1, v16))
    {
      v19 = type metadata accessor for ManageWatchlistsContentMode(0);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      v21 = sub_1DC4010E4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v14, v15, v21);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v14, 0, 1, v17);
    }
  }
  return v4;
}

uint64_t sub_1DC1DC940(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_1DC40124C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = a1 + *(int *)(a2 + 24);
  sub_1DC15C2FC();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v6, 1, v7);
  if (!(_DWORD)result)
  {
    v9 = sub_1DC4010E4();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v6, v9);
  }
  return result;
}

_QWORD *sub_1DC1DC9E8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1DC40124C();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  v12 = *(int *)(a3 + 24);
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  sub_1DC15C2FC();
  v16 = v15;
  v17 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v14, 1, v15))
  {
    v18 = type metadata accessor for ManageWatchlistsContentMode(0);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    v19 = sub_1DC4010E4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v13, v14, v19);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v13, 0, 1, v16);
  }
  return a1;
}

_QWORD *sub_1DC1DCAF4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(char *, uint64_t, uint64_t);
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1DC40124C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = *(int *)(a3 + 24);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  sub_1DC15C2FC();
  v14 = v13;
  v15 = *(_QWORD *)(v13 - 8);
  v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48);
  LODWORD(v8) = v16(v11, 1, v13);
  v17 = v16(v12, 1, v14);
  if (!(_DWORD)v8)
  {
    if (!v17)
    {
      v21 = sub_1DC4010E4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 24))(v11, v12, v21);
      return a1;
    }
    sub_1DC0926D8((uint64_t)v11, (uint64_t (*)(_QWORD))sub_1DC15C2FC);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    v19 = type metadata accessor for ManageWatchlistsContentMode(0);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    return a1;
  }
  v18 = sub_1DC4010E4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v11, v12, v18);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v11, 0, 1, v14);
  return a1;
}

_OWORD *sub_1DC1DCC5C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1DC40124C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = *(int *)(a3 + 24);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  sub_1DC15C2FC();
  v14 = v13;
  v15 = *(_QWORD *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v12, 1, v13))
  {
    v16 = type metadata accessor for ManageWatchlistsContentMode(0);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    v17 = sub_1DC4010E4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v11, v12, v17);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v11, 0, 1, v14);
  }
  return a1;
}

_QWORD *sub_1DC1DCD54(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(char *, uint64_t, uint64_t);
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1DC40124C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  sub_1DC15C2FC();
  v15 = v14;
  v16 = *(_QWORD *)(v14 - 8);
  v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  LODWORD(v9) = v17(v12, 1, v14);
  v18 = v17(v13, 1, v15);
  if (!(_DWORD)v9)
  {
    if (!v18)
    {
      v22 = sub_1DC4010E4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v12, v13, v22);
      return a1;
    }
    sub_1DC0926D8((uint64_t)v12, (uint64_t (*)(_QWORD))sub_1DC15C2FC);
    goto LABEL_6;
  }
  if (v18)
  {
LABEL_6:
    v20 = type metadata accessor for ManageWatchlistsContentMode(0);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    return a1;
  }
  v19 = sub_1DC4010E4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v12, v13, v19);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v12, 0, 1, v15);
  return a1;
}

uint64_t sub_1DC1DCEAC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC1DCEB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1DC40124C();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 20);
    }
    else
    {
      v10 = type metadata accessor for ManageWatchlistsContentMode(0);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 24);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_1DC1DCF58()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC1DCF64(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = sub_1DC40124C();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 20);
    }
    else
    {
      v10 = type metadata accessor for ManageWatchlistsContentMode(0);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 24);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t type metadata accessor for ManageWatchlistsRenameWatchlistBlueprintModifier()
{
  uint64_t result;

  result = qword_1F034E350;
  if (!qword_1F034E350)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1DC1DD03C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1DC40124C();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for ManageWatchlistsContentMode(319);
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_1DC1DD0CC(uint64_t a1, void (*a2)(uint64_t *), uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t *v52;
  char *v53;
  void (*v54)(char *, uint64_t);
  char *v55;
  uint64_t v56;
  void (*v57)(char *, uint64_t);
  uint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void (*v79)(uint64_t *);
  uint64_t v80;
  char *v81;

  v78 = a3;
  v79 = a2;
  v73 = a1;
  v4 = sub_1DC404984();
  v67 = *(_QWORD *)(v4 - 8);
  v68 = v4;
  MEMORY[0x1E0C80A78](v4);
  v66 = (char *)&v59 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC1736C8(0, &qword_1F034E398, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB9A28]);
  v76 = *(_QWORD *)(v6 - 8);
  v77 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (uint64_t *)((char *)&v59 - v7);
  v65 = type metadata accessor for ManageWatchlistsModel();
  MEMORY[0x1E0C80A78](v65);
  v62 = (char *)&v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC1736C8(0, (unint64_t *)&qword_1F0350F40, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790]);
  v11 = v10;
  v71 = *((_QWORD *)v10 - 1);
  MEMORY[0x1E0C80A78](v10);
  v70 = (char *)&v59 - v12;
  sub_1DC1DD764();
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v59 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC142B5C();
  v74 = *(_QWORD *)(v16 - 8);
  v75 = v16;
  MEMORY[0x1E0C80A78](v16);
  v64 = (char *)&v59 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v72 = (char *)&v59 - v19;
  sub_1DC1DD7B8();
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v59 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC1736C8(0, (unint64_t *)&qword_1F034C028, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60]);
  v24 = v23;
  v25 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  v69 = (char *)&v59 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v27);
  v81 = (char *)&v59 - v28;
  v61 = type metadata accessor for ManageWatchlistsRenameWatchlistBlueprintModifier();
  v29 = *(int *)(v61 + 20);
  v63 = v3;
  v30 = v3 + v29;
  sub_1DC4011E0();
  v31 = v11;
  v32 = v73;
  sub_1DC406CC4();
  swift_bridgeObjectRelease();
  v80 = v25;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v22, 1, v24) == 1)
  {
    sub_1DC0926D8((uint64_t)v22, (uint64_t (*)(_QWORD))sub_1DC1DD7B8);
    sub_1DC1DD81C();
    *v8 = swift_allocError();
    v34 = v76;
    v33 = v77;
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(v76 + 104))(v8, *MEMORY[0x1E0DB99F0], v77);
    v79(v8);
    return (*(uint64_t (**)(uint64_t *, uint64_t))(v34 + 8))(v8, v33);
  }
  else
  {
    v60 = v8;
    (*(void (**)(char *, char *, uint64_t))(v80 + 32))(v81, v22, v24);
    sub_1DC4011E0();
    sub_1DC406C7C();
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v74 + 48))(v15, 1, v75) == 1)
    {
      sub_1DC0926D8((uint64_t)v15, (uint64_t (*)(_QWORD))sub_1DC1DD764);
      sub_1DC1DD81C();
      v36 = swift_allocError();
      v37 = v60;
      *v60 = v36;
      v39 = v76;
      v38 = v77;
      (*(void (**)(uint64_t *, _QWORD, uint64_t))(v76 + 104))(v37, *MEMORY[0x1E0DB99F0], v77);
      v79(v37);
      (*(void (**)(uint64_t *, uint64_t))(v39 + 8))(v37, v38);
      return (*(uint64_t (**)(char *, uint64_t))(v80 + 8))(v81, v24);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v74 + 32))(v72, v15, v75);
      (*(void (**)(char *, uint64_t, char *))(v71 + 16))(v70, v32, v31);
      (*(void (**)(char *, char *, uint64_t))(v80 + 16))(v69, v81, v24);
      v40 = type metadata accessor for WatchlistCellViewModel(0);
      v41 = v62;
      v42 = &v62[*(int *)(v40 + 28)];
      v43 = sub_1DC40124C();
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v42, v30, v43);
      sub_1DC173D68(v63 + *(int *)(v61 + 24), (uint64_t)&v41[*(int *)(v40 + 32)]);
      *(_QWORD *)v41 = sub_1DC4011E0();
      *((_QWORD *)v41 + 1) = v44;
      *((_QWORD *)v41 + 2) = sub_1DC40121C();
      *((_QWORD *)v41 + 3) = v45;
      v41[32] = 0;
      swift_storeEnumTagMultiPayload();
      sub_1DC080808((unint64_t *)&unk_1F0350F30, (uint64_t (*)(uint64_t))type metadata accessor for ManageWatchlistsModel, (uint64_t)&unk_1DC423338);
      v46 = v64;
      sub_1DC404348();
      sub_1DC404768();
      v47 = v70;
      sub_1DC406CB8();
      v48 = *MEMORY[0x1E0DB7FB8];
      v63 = v24;
      v50 = v66;
      v49 = v67;
      v51 = v68;
      (*(void (**)(char *, uint64_t, uint64_t))(v67 + 104))(v66, v48, v68);
      sub_1DC142C7C();
      sub_1DC1DD860();
      v52 = v60;
      v62 = v31;
      v53 = v47;
      sub_1DC405554();
      (*(void (**)(char *, uint64_t))(v49 + 8))(v50, v51);
      v79(v52);
      (*(void (**)(uint64_t *, uint64_t))(v76 + 8))(v52, v77);
      v54 = *(void (**)(char *, uint64_t))(v74 + 8);
      v55 = v46;
      v56 = v75;
      v54(v55, v75);
      v57 = *(void (**)(char *, uint64_t))(v80 + 8);
      v58 = v63;
      v57(v69, v63);
      (*(void (**)(char *, char *))(v71 + 8))(v53, v62);
      v54(v72, v56);
      return ((uint64_t (*)(char *, uint64_t))v57)(v81, v58);
    }
  }
}

uint64_t sub_1DC1DD738()
{
  return sub_1DC080808(&qword_1F034E390, (uint64_t (*)(uint64_t))type metadata accessor for ManageWatchlistsRenameWatchlistBlueprintModifier, (uint64_t)&unk_1DC416520);
}

void sub_1DC1DD764()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F034E3A0)
  {
    sub_1DC142B5C();
    v0 = sub_1DC4095A4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1F034E3A0);
  }
}

void sub_1DC1DD7B8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F034E3A8)
  {
    sub_1DC1736C8(255, (unint64_t *)&qword_1F034C028, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60]);
    v0 = sub_1DC4095A4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1F034E3A8);
  }
}

unint64_t sub_1DC1DD81C()
{
  unint64_t result;

  result = qword_1F034E3B0;
  if (!qword_1F034E3B0)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC416610, &type metadata for ManageWatchlistsRenameWatchlistBlueprintModifier.Errors);
    atomic_store(result, (unint64_t *)&qword_1F034E3B0);
  }
  return result;
}

unint64_t sub_1DC1DD860()
{
  unint64_t result;

  result = qword_1F034E3B8;
  if (!qword_1F034E3B8)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC42DCE4, &type metadata for ManageWatchlistsSectionDescriptor);
    atomic_store(result, (unint64_t *)&qword_1F034E3B8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ManageWatchlistsRenameWatchlistBlueprintModifier.Errors(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1DC1DD8E4 + 4 * byte_1DC4164C0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1DC1DD904 + 4 * byte_1DC4164C5[v4]))();
}

_BYTE *sub_1DC1DD8E4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1DC1DD904(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC1DD90C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC1DD914(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC1DD91C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC1DD924(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ManageWatchlistsRenameWatchlistBlueprintModifier.Errors()
{
  return &type metadata for ManageWatchlistsRenameWatchlistBlueprintModifier.Errors;
}

unint64_t sub_1DC1DD944()
{
  unint64_t result;

  result = qword_1F034E3C0;
  if (!qword_1F034E3C0)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC4165E8, &type metadata for ManageWatchlistsRenameWatchlistBlueprintModifier.Errors);
    atomic_store(result, (unint64_t *)&qword_1F034E3C0);
  }
  return result;
}

id sub_1DC1DD988(uint64_t a1, char *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  char *v9;
  void *v10;
  id v11;
  double v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  void *v18;
  void *v19;
  void *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v29[3];
  uint64_t v30;

  v5 = sub_1DC3FFFEC();
  v6 = *(_QWORD *)(v5 - 8);
  *(_QWORD *)&v7 = MEMORY[0x1E0C80A78](v5).n128_u64[0];
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(void **)(a1 + 80);
  v11 = objc_msgSend(v10, sel_horizontalSizeClass, v7);
  if ((unint64_t)v11 >= 2)
  {
    if (v11 == (id)2)
      objc_msgSend(a2, sel_setHidden_, 1);
    return objc_msgSend(a2, sel_setFrame_, 0.0, 0.0, 0.0, 0.0);
  }
  else
  {
    v28 = v5;
    objc_msgSend(a2, sel_setHidden_, 0);
    v12 = *(double *)(a1 + 8);
    objc_msgSend(a2, sel_setFrame_, 0.0, 0.0, *(double *)a1, v12);
    objc_msgSend(a2, sel_setHeight_, v12);
    v13 = *(void **)&a2[OBJC_IVAR____TtC8StocksUI12MastheadView_appNameLabel];
    objc_msgSend(v13, sel_setFrame_, *(double *)(a1 + 16), *(double *)(a1 + 24), *(double *)(a1 + 32), *(double *)(a1 + 40));
    v14 = v2 + 16;
    swift_beginAccess();
    sub_1DC0824D4(v2 + 16, (uint64_t)v29);
    __swift_project_boxed_opaque_existential_1(v29, v30);
    if (qword_1EDB276F0 != -1)
      swift_once();
    v15 = qword_1EDB276E0;
    v16 = *(_QWORD *)algn_1EDB276E8;
    swift_bridgeObjectRetain();
    v17 = sub_1DC103D30(v15, v16, v10);
    swift_bridgeObjectRelease();
    objc_msgSend(v13, sel_setAttributedText_, v17);

    __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
    v18 = *(void **)&a2[OBJC_IVAR____TtC8StocksUI12MastheadView_dateLabel];
    objc_msgSend(v18, sel_setFrame_, *(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64), *(double *)(a1 + 72));
    sub_1DC0824D4(v14, (uint64_t)v29);
    __swift_project_boxed_opaque_existential_1(v29, v30);
    if (qword_1EDB276D8 != -1)
      swift_once();
    v19 = (void *)qword_1EDB276C8;
    if (qword_1EDB276C8)
    {
      sub_1DC3FFFE0();
      v20 = (void *)sub_1DC3FFF50();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v28);
      v21 = objc_msgSend(v19, sel_stringFromDate_, v20);

      v19 = (void *)sub_1DC408A4C();
      v23 = v22;

    }
    else
    {
      v23 = 0xE000000000000000;
    }
    v25 = sub_1DC104158((uint64_t)v19, v23, v10);
    swift_bridgeObjectRelease();
    objc_msgSend(v18, sel_setAttributedText_, v25);

    __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
    v26 = objc_msgSend((id)objc_opt_self(), sel_clearColor);
    objc_msgSend(a2, sel_setBackgroundColor_, v26);

    return objc_msgSend(v18, sel_setNumberOfLines_, 0);
  }
}

_QWORD *sub_1DC1DDD0C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int (*v26)(char *, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(char *, char *, uint64_t);
  char *v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  char *v73;
  char *v74;
  char *v75;
  void (*v76)(char *, char *, uint64_t);
  char *v77;
  void (*v78)(char *, char *, uint64_t);
  uint64_t v79;
  char *v80;
  int *v81;
  int *v82;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v16 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v16 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v18 = sub_1DC407300();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(a1, a2, v18);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v19 = a2[1];
      *a1 = *a2;
      a1[1] = v19;
      *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
      sub_1DC142534();
      v21 = *(int *)(v20 + 64);
      v22 = (char *)a1 + v21;
      v23 = (char *)a2 + v21;
      v24 = sub_1DC4073A8();
      v25 = *(_QWORD *)(v24 - 8);
      v26 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48);
      swift_bridgeObjectRetain();
      if (v26(v23, 1, v24))
      {
        sub_1DC089DA4(0, &qword_1EDB2AD80, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5A418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v22, v23, v24);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
      }
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v8 = sub_1DC4010E4();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      v9 = (int *)type metadata accessor for StockFeedMastheadModel();
      v10 = v9[5];
      v11 = (char *)a1 + v10;
      v12 = (char *)a2 + v10;
      v13 = sub_1DC401030();
      v14 = *(_QWORD *)(v13 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
      {
        sub_1DC089DA4(0, &qword_1EDB28DC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF040], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      }
      v28 = v9[6];
      v29 = (char *)a1 + v28;
      v30 = (char *)a2 + v28;
      v31 = sub_1DC400F7C();
      v32 = *(_QWORD *)(v31 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31))
      {
        sub_1DC089DA4(0, (unint64_t *)&unk_1EDB28D90, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAEFA8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v29, v30, v31);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
      }
      v34 = v9[7];
      v35 = (_QWORD *)((char *)a1 + v34);
      v36 = (char *)a2 + v34;
      v37 = *(_QWORD *)((char *)a2 + v34 + 8);
      *v35 = *(_QWORD *)((char *)a2 + v34);
      v35[1] = v37;
      v38 = (char *)a1 + v34;
      v80 = (char *)a1 + v34;
      v81 = v9;
      v82 = (int *)type metadata accessor for QuoteSummaryViewModel();
      v39 = v82[5];
      v40 = &v38[v39];
      v41 = &v36[v39];
      *(_QWORD *)v40 = *(_QWORD *)&v36[v39];
      v40[8] = v36[v39 + 8];
      *((_QWORD *)v40 + 2) = *(_QWORD *)&v36[v39 + 16];
      v40[24] = v36[v39 + 24];
      *((_QWORD *)v40 + 4) = *(_QWORD *)&v36[v39 + 32];
      v40[40] = v36[v39 + 40];
      v42 = *(_QWORD *)&v36[v39 + 56];
      *((_QWORD *)v40 + 6) = *(_QWORD *)&v36[v39 + 48];
      *((_QWORD *)v40 + 7) = v42;
      v43 = *(_QWORD *)&v36[v39 + 72];
      *((_QWORD *)v40 + 8) = *(_QWORD *)&v36[v39 + 64];
      *((_QWORD *)v40 + 9) = v43;
      v40[80] = v36[v39 + 80];
      v44 = type metadata accessor for PriceViewModel();
      v45 = *(int *)(v44 + 40);
      v75 = &v41[v45];
      v77 = &v40[v45];
      v46 = sub_1DC4011C8();
      v47 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v48 = v77;
      v78 = v47;
      v79 = v46;
      v47(v48, v75, v46);
      v49 = *(int *)(v44 + 44);
      v50 = &v40[v49];
      v51 = &v41[v49];
      v52 = sub_1DC400118();
      v76 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 16);
      v76(v50, v51, v52);
      v53 = v82[6];
      v54 = &v80[v53];
      v55 = &v36[v53];
      v56 = *(_QWORD *)(v44 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v56 + 48))(&v36[v53], 1, v44))
      {
        sub_1DC089DA4(0, (unint64_t *)&qword_1EDB2D5E8, (uint64_t (*)(uint64_t))type metadata accessor for PriceViewModel, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
      }
      else
      {
        *(_QWORD *)v54 = *(_QWORD *)v55;
        v54[8] = v55[8];
        *((_QWORD *)v54 + 2) = *((_QWORD *)v55 + 2);
        v54[24] = v55[24];
        *((_QWORD *)v54 + 4) = *((_QWORD *)v55 + 4);
        v54[40] = v55[40];
        v58 = *((_QWORD *)v55 + 7);
        *((_QWORD *)v54 + 6) = *((_QWORD *)v55 + 6);
        *((_QWORD *)v54 + 7) = v58;
        v59 = *((_QWORD *)v55 + 9);
        *((_QWORD *)v54 + 8) = *((_QWORD *)v55 + 8);
        *((_QWORD *)v54 + 9) = v59;
        v54[80] = v55[80];
        v60 = *(int *)(v44 + 40);
        v73 = &v55[v60];
        v74 = &v54[v60];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v78(v74, v73, v79);
        v76(&v54[*(int *)(v44 + 44)], &v55[*(int *)(v44 + 44)], v52);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v56 + 56))(v54, 0, 1, v44);
      }
      v61 = v82[7];
      v62 = &v80[v61];
      v63 = &v36[v61];
      v64 = sub_1DC4008EC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v64 - 8) + 16))(v62, v63, v64);
      v65 = v82[8];
      v66 = &v80[v65];
      v67 = &v36[v65];
      v68 = sub_1DC4002BC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v68 - 8) + 16))(v66, v67, v68);
      v69 = v82[9];
      v70 = &v80[v69];
      v71 = &v36[v69];
      v72 = *((_QWORD *)v71 + 1);
      *(_QWORD *)v70 = *(_QWORD *)v71;
      *((_QWORD *)v70 + 1) = v72;
      *((_BYTE *)a1 + v81[8]) = *((_BYTE *)a2 + v81[8]);
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_1DC1DE2C4(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  result = swift_getEnumCaseMultiPayload();
  switch((_DWORD)result)
  {
    case 2:
      v26 = sub_1DC407300();
      v27 = *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 8);
      v28 = a1;
      return v27(v28, v26);
    case 1:
      swift_bridgeObjectRelease();
      sub_1DC142534();
      v30 = a1 + *(int *)(v29 + 64);
      v31 = sub_1DC4073A8();
      v32 = *(_QWORD *)(v31 - 8);
      result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31);
      if ((_DWORD)result)
        return result;
      v27 = *(uint64_t (**)(uint64_t, uint64_t))(v32 + 8);
      v28 = v30;
      v26 = v31;
      return v27(v28, v26);
    case 0:
      v3 = sub_1DC4010E4();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
      v4 = (int *)type metadata accessor for StockFeedMastheadModel();
      v5 = a1 + v4[5];
      v6 = sub_1DC401030();
      v7 = *(_QWORD *)(v6 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6))
        (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
      v8 = a1 + v4[6];
      v9 = sub_1DC400F7C();
      v10 = *(_QWORD *)(v9 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
        (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
      v11 = a1 + v4[7];
      swift_bridgeObjectRelease();
      v12 = (int *)type metadata accessor for QuoteSummaryViewModel();
      v13 = v11 + v12[5];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v14 = type metadata accessor for PriceViewModel();
      v15 = v13 + *(int *)(v14 + 40);
      v16 = sub_1DC4011C8();
      v17 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8);
      v17(v15, v16);
      v18 = v13 + *(int *)(v14 + 44);
      v19 = sub_1DC400118();
      v20 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 8);
      v20(v18, v19);
      v21 = v11 + v12[6];
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v21, 1, v14))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v17(v21 + *(int *)(v14 + 40), v16);
        v20(v21 + *(int *)(v14 + 44), v19);
      }
      v22 = v11 + v12[7];
      v23 = sub_1DC4008EC();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 8))(v22, v23);
      v24 = v11 + v12[8];
      v25 = sub_1DC4002BC();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 8))(v24, v25);
      return swift_bridgeObjectRelease();
  }
  return result;
}

_QWORD *sub_1DC1DE588(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int (*v23)(char *, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  void (*v44)(char *, char *, uint64_t);
  uint64_t v45;
  uint64_t v46;
  void (*v47)(char *, char *, uint64_t);
  uint64_t v48;
  char *v49;
  _QWORD *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  char *v71;
  uint64_t v72;
  char *v74;
  char *v75;
  char *v76;
  void (*v77)(char *, char *, uint64_t);
  uint64_t v78;
  int *v79;
  _QWORD *v80;
  _QWORD *v81;
  int *v82;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      v15 = sub_1DC407300();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(a1, a2, v15);
LABEL_20:
      swift_storeEnumTagMultiPayload();
      return a1;
    case 1:
      v16 = a2[1];
      *a1 = *a2;
      a1[1] = v16;
      *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
      sub_1DC142534();
      v18 = *(int *)(v17 + 64);
      v19 = (char *)a1 + v18;
      v20 = (char *)a2 + v18;
      v21 = sub_1DC4073A8();
      v22 = *(_QWORD *)(v21 - 8);
      v23 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48);
      swift_bridgeObjectRetain();
      if (v23(v20, 1, v21))
      {
        sub_1DC089DA4(0, &qword_1EDB2AD80, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5A418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v19, v20, v21);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
      }
      goto LABEL_20;
    case 0:
      v7 = sub_1DC4010E4();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = (int *)type metadata accessor for StockFeedMastheadModel();
      v9 = v8[5];
      v10 = (char *)a1 + v9;
      v11 = (char *)a2 + v9;
      v12 = sub_1DC401030();
      v13 = *(_QWORD *)(v12 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
      {
        sub_1DC089DA4(0, &qword_1EDB28DC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF040], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      }
      v25 = v8[6];
      v26 = (char *)a1 + v25;
      v27 = (char *)a2 + v25;
      v28 = sub_1DC400F7C();
      v29 = *(_QWORD *)(v28 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
      {
        sub_1DC089DA4(0, (unint64_t *)&unk_1EDB28D90, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAEFA8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v26, v27, v28);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
      }
      v81 = a1;
      v82 = v8;
      v31 = v8[7];
      v32 = (_QWORD *)((char *)a1 + v31);
      v80 = a2;
      v33 = (char *)a2 + v31;
      v34 = *(_QWORD *)((char *)a2 + v31 + 8);
      *v32 = *(_QWORD *)((char *)a2 + v31);
      v32[1] = v34;
      v79 = (int *)type metadata accessor for QuoteSummaryViewModel();
      v35 = v79[5];
      v36 = (char *)v32 + v35;
      v37 = &v33[v35];
      *(_QWORD *)v36 = *(_QWORD *)&v33[v35];
      v36[8] = v33[v35 + 8];
      *((_QWORD *)v36 + 2) = *(_QWORD *)&v33[v35 + 16];
      v36[24] = v33[v35 + 24];
      *((_QWORD *)v36 + 4) = *(_QWORD *)&v33[v35 + 32];
      v36[40] = v33[v35 + 40];
      v38 = *(_QWORD *)&v33[v35 + 56];
      *((_QWORD *)v36 + 6) = *(_QWORD *)&v33[v35 + 48];
      *((_QWORD *)v36 + 7) = v38;
      v39 = *(_QWORD *)&v33[v35 + 72];
      *((_QWORD *)v36 + 8) = *(_QWORD *)&v33[v35 + 64];
      *((_QWORD *)v36 + 9) = v39;
      v36[80] = v33[v35 + 80];
      v40 = type metadata accessor for PriceViewModel();
      v41 = *(int *)(v40 + 40);
      v42 = &v36[v41];
      v76 = &v37[v41];
      v43 = sub_1DC4011C8();
      v44 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v78 = v43;
      v45 = v43;
      v46 = v40;
      v47 = v44;
      v44(v42, v76, v45);
      v48 = *(int *)(v46 + 44);
      v49 = &v36[v48];
      v50 = v32;
      v51 = &v37[v48];
      v52 = sub_1DC400118();
      v77 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 16);
      v77(v49, v51, v52);
      v53 = v79[6];
      v54 = (_QWORD *)((char *)v32 + v53);
      v55 = &v33[v53];
      v56 = *(_QWORD *)(v46 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v56 + 48))(&v33[v53], 1, v46))
      {
        sub_1DC089DA4(0, (unint64_t *)&qword_1EDB2D5E8, (uint64_t (*)(uint64_t))type metadata accessor for PriceViewModel, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
      }
      else
      {
        *v54 = *(_QWORD *)v55;
        *((_BYTE *)v54 + 8) = v55[8];
        v54[2] = *((_QWORD *)v55 + 2);
        *((_BYTE *)v54 + 24) = v55[24];
        v54[4] = *((_QWORD *)v55 + 4);
        *((_BYTE *)v54 + 40) = v55[40];
        v58 = *((_QWORD *)v55 + 7);
        v54[6] = *((_QWORD *)v55 + 6);
        v54[7] = v58;
        v59 = *((_QWORD *)v55 + 9);
        v54[8] = *((_QWORD *)v55 + 8);
        v54[9] = v59;
        *((_BYTE *)v54 + 80) = v55[80];
        v60 = *(int *)(v46 + 40);
        v74 = &v55[v60];
        v75 = (char *)v54 + v60;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v47(v75, v74, v78);
        v77((char *)v54 + *(int *)(v46 + 44), &v55[*(int *)(v46 + 44)], v52);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v56 + 56))(v54, 0, 1, v46);
      }
      v61 = v79[7];
      v62 = (char *)v50 + v61;
      v63 = &v33[v61];
      v64 = sub_1DC4008EC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v64 - 8) + 16))(v62, v63, v64);
      v65 = v79[8];
      v66 = (char *)v50 + v65;
      v67 = &v33[v65];
      v68 = sub_1DC4002BC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v68 - 8) + 16))(v66, v67, v68);
      v69 = v79[9];
      v70 = (_QWORD *)((char *)v50 + v69);
      v71 = &v33[v69];
      v72 = *((_QWORD *)v71 + 1);
      *v70 = *(_QWORD *)v71;
      v70[1] = v72;
      a1 = v81;
      *((_BYTE *)v81 + v82[8]) = *((_BYTE *)v80 + v82[8]);
      swift_bridgeObjectRetain();
      goto LABEL_20;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

_QWORD *sub_1DC1DEB1C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  char *v32;
  char *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, char *, uint64_t);
  char *v41;
  char *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  char *v70;
  void (*v71)(char *, char *, uint64_t);
  int *v72;
  char *v73;
  void (*v74)(char *, char *, uint64_t);
  char *v75;
  uint64_t v76;
  char *v77;
  char *v78;
  int *v79;

  if (a1 == a2)
    return a1;
  sub_1DC0926D8((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedSectionDescriptor);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      v15 = sub_1DC407300();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(a1, a2, v15);
LABEL_21:
      swift_storeEnumTagMultiPayload();
      return a1;
    case 1:
      *a1 = *a2;
      a1[1] = a2[1];
      *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
      sub_1DC142534();
      v17 = *(int *)(v16 + 64);
      v18 = (char *)a1 + v17;
      v19 = (char *)a2 + v17;
      v20 = sub_1DC4073A8();
      v21 = *(_QWORD *)(v20 - 8);
      v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
      swift_bridgeObjectRetain();
      if (v22(v19, 1, v20))
      {
        sub_1DC089DA4(0, &qword_1EDB2AD80, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5A418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v18, v19, v20);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
      }
      goto LABEL_21;
    case 0:
      v7 = sub_1DC4010E4();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = (int *)type metadata accessor for StockFeedMastheadModel();
      v9 = v8[5];
      v10 = (char *)a1 + v9;
      v11 = (char *)a2 + v9;
      v12 = sub_1DC401030();
      v13 = *(_QWORD *)(v12 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
      {
        sub_1DC089DA4(0, &qword_1EDB28DC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF040], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      }
      v24 = v8[6];
      v25 = (char *)a1 + v24;
      v26 = (char *)a2 + v24;
      v27 = sub_1DC400F7C();
      v28 = *(_QWORD *)(v27 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
      {
        sub_1DC089DA4(0, (unint64_t *)&unk_1EDB28D90, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAEFA8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v25, v26, v27);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
      }
      v72 = v8;
      v30 = v8[7];
      v31 = (_QWORD *)((char *)a1 + v30);
      v32 = (char *)a2 + v30;
      *v31 = *(_QWORD *)((char *)a2 + v30);
      v78 = (char *)a1 + v30;
      v31[1] = *(_QWORD *)((char *)a2 + v30 + 8);
      v33 = (char *)a1 + v30;
      v79 = (int *)type metadata accessor for QuoteSummaryViewModel();
      v34 = v79[5];
      v35 = &v33[v34];
      v36 = &v32[v34];
      LOBYTE(v34) = v32[v34 + 8];
      *(_QWORD *)v35 = *(_QWORD *)v36;
      v35[8] = v34;
      LOBYTE(v34) = v36[24];
      *((_QWORD *)v35 + 2) = *((_QWORD *)v36 + 2);
      v35[24] = v34;
      LOBYTE(v34) = v36[40];
      *((_QWORD *)v35 + 4) = *((_QWORD *)v36 + 4);
      v35[40] = v34;
      *((_QWORD *)v35 + 6) = *((_QWORD *)v36 + 6);
      *((_QWORD *)v35 + 7) = *((_QWORD *)v36 + 7);
      *((_QWORD *)v35 + 8) = *((_QWORD *)v36 + 8);
      *((_QWORD *)v35 + 9) = *((_QWORD *)v36 + 9);
      v35[80] = v36[80];
      v37 = type metadata accessor for PriceViewModel();
      v38 = *(int *)(v37 + 40);
      v73 = &v36[v38];
      v75 = &v35[v38];
      v39 = sub_1DC4011C8();
      v40 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v42 = v73;
      v41 = v75;
      v74 = v40;
      v76 = v39;
      v40(v41, v42, v39);
      v43 = *(int *)(v37 + 44);
      v44 = &v35[v43];
      v45 = v37;
      v46 = &v36[v43];
      v47 = sub_1DC400118();
      v71 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 16);
      v71(v44, v46, v47);
      v48 = v79[6];
      v49 = &v78[v48];
      v77 = v32;
      v50 = &v32[v48];
      v51 = *(_QWORD *)(v45 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48))(&v32[v48], 1, v45))
      {
        sub_1DC089DA4(0, (unint64_t *)&qword_1EDB2D5E8, (uint64_t (*)(uint64_t))type metadata accessor for PriceViewModel, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
      }
      else
      {
        v53 = *(_QWORD *)v50;
        v49[8] = v50[8];
        *(_QWORD *)v49 = v53;
        v54 = *((_QWORD *)v50 + 2);
        v49[24] = v50[24];
        *((_QWORD *)v49 + 2) = v54;
        v55 = *((_QWORD *)v50 + 4);
        v49[40] = v50[40];
        *((_QWORD *)v49 + 4) = v55;
        *((_QWORD *)v49 + 6) = *((_QWORD *)v50 + 6);
        *((_QWORD *)v49 + 7) = *((_QWORD *)v50 + 7);
        *((_QWORD *)v49 + 8) = *((_QWORD *)v50 + 8);
        *((_QWORD *)v49 + 9) = *((_QWORD *)v50 + 9);
        v49[80] = v50[80];
        v56 = *(int *)(v45 + 40);
        v57 = &v49[v56];
        v70 = &v50[v56];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v74(v57, v70, v76);
        v71(&v49[*(int *)(v45 + 44)], &v50[*(int *)(v45 + 44)], v47);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v49, 0, 1, v45);
      }
      v58 = v79[7];
      v59 = &v78[v58];
      v60 = &v77[v58];
      v61 = sub_1DC4008EC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v61 - 8) + 16))(v59, v60, v61);
      v62 = v79[8];
      v63 = &v78[v62];
      v64 = &v77[v62];
      v65 = sub_1DC4002BC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v65 - 8) + 16))(v63, v64, v65);
      v66 = v79[9];
      v67 = &v78[v66];
      v68 = &v77[v66];
      *(_QWORD *)v67 = *(_QWORD *)v68;
      *((_QWORD *)v67 + 1) = *((_QWORD *)v68 + 1);
      *((_BYTE *)a1 + v72[8]) = *((_BYTE *)a2 + v72[8]);
      swift_bridgeObjectRetain();
      goto LABEL_21;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

char *sub_1DC1DF104(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  int *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  __int128 v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  void (*v61)(char *, char *, uint64_t);
  void (*v62)(char *, char *);
  uint64_t v63;
  int *v64;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      v15 = sub_1DC407300();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(a1, a2, v15);
LABEL_20:
      swift_storeEnumTagMultiPayload();
      return a1;
    case 1:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      a1[16] = a2[16];
      sub_1DC142534();
      v17 = *(int *)(v16 + 64);
      v18 = &a1[v17];
      v19 = &a2[v17];
      v20 = sub_1DC4073A8();
      v21 = *(_QWORD *)(v20 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
      {
        sub_1DC089DA4(0, &qword_1EDB2AD80, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5A418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v18, v19, v20);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
      }
      goto LABEL_20;
    case 0:
      v7 = sub_1DC4010E4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      v8 = (int *)type metadata accessor for StockFeedMastheadModel();
      v9 = v8[5];
      v10 = &a1[v9];
      v11 = &a2[v9];
      v12 = sub_1DC401030();
      v13 = *(_QWORD *)(v12 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
      {
        sub_1DC089DA4(0, &qword_1EDB28DC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF040], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      }
      v23 = v8[6];
      v24 = &a1[v23];
      v25 = &a2[v23];
      v26 = sub_1DC400F7C();
      v27 = *(_QWORD *)(v26 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
      {
        sub_1DC089DA4(0, (unint64_t *)&unk_1EDB28D90, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAEFA8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v24, v25, v26);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
      }
      v64 = v8;
      v29 = v8[7];
      v30 = &a1[v29];
      v31 = &a2[v29];
      *(_OWORD *)&a1[v29] = *(_OWORD *)&a2[v29];
      v32 = (int *)type metadata accessor for QuoteSummaryViewModel();
      v33 = v32[5];
      v34 = &v30[v33];
      v35 = &v31[v33];
      *(_QWORD *)v34 = *(_QWORD *)&v31[v33];
      v34[8] = v31[v33 + 8];
      *((_QWORD *)v34 + 2) = *(_QWORD *)&v31[v33 + 16];
      v34[24] = v31[v33 + 24];
      *((_QWORD *)v34 + 4) = *(_QWORD *)&v31[v33 + 32];
      v34[40] = v31[v33 + 40];
      v36 = *(_OWORD *)&v31[v33 + 64];
      *((_OWORD *)v34 + 3) = *(_OWORD *)&v31[v33 + 48];
      *((_OWORD *)v34 + 4) = v36;
      v34[80] = v31[v33 + 80];
      v37 = type metadata accessor for PriceViewModel();
      v38 = *(int *)(v37 + 40);
      v39 = &v34[v38];
      v40 = &v35[v38];
      v41 = sub_1DC4011C8();
      v62 = *(void (**)(char *, char *))(*(_QWORD *)(v41 - 8) + 32);
      v63 = v41;
      v62(v39, v40);
      v42 = *(int *)(v37 + 44);
      v43 = &v34[v42];
      v44 = &v35[v42];
      v45 = sub_1DC400118();
      v61 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 32);
      v61(v43, v44, v45);
      v46 = v32[6];
      v47 = &v30[v46];
      v48 = &v31[v46];
      v49 = *(_QWORD *)(v37 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48))(&v31[v46], 1, v37))
      {
        sub_1DC089DA4(0, (unint64_t *)&qword_1EDB2D5E8, (uint64_t (*)(uint64_t))type metadata accessor for PriceViewModel, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
      }
      else
      {
        *(_QWORD *)v47 = *(_QWORD *)v48;
        v47[8] = v48[8];
        *((_QWORD *)v47 + 2) = *((_QWORD *)v48 + 2);
        v47[24] = v48[24];
        *((_QWORD *)v47 + 4) = *((_QWORD *)v48 + 4);
        v47[40] = v48[40];
        v51 = *((_OWORD *)v48 + 4);
        *((_OWORD *)v47 + 3) = *((_OWORD *)v48 + 3);
        *((_OWORD *)v47 + 4) = v51;
        v47[80] = v48[80];
        ((void (*)(char *, char *, uint64_t))v62)(&v47[*(int *)(v37 + 40)], &v48[*(int *)(v37 + 40)], v63);
        v61(&v47[*(int *)(v37 + 44)], &v48[*(int *)(v37 + 44)], v45);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v49 + 56))(v47, 0, 1, v37);
      }
      v52 = v32[7];
      v53 = &v30[v52];
      v54 = &v31[v52];
      v55 = sub_1DC4008EC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 32))(v53, v54, v55);
      v56 = v32[8];
      v57 = &v30[v56];
      v58 = &v31[v56];
      v59 = sub_1DC4002BC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 32))(v57, v58, v59);
      *(_OWORD *)&v30[v32[9]] = *(_OWORD *)&v31[v32[9]];
      a1[v64[8]] = a2[v64[8]];
      goto LABEL_20;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

char *sub_1DC1DF630(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  int *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  __int128 v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  void (*v61)(char *, char *, uint64_t);
  void (*v62)(char *, char *);
  uint64_t v63;
  int *v64;

  if (a1 == a2)
    return a1;
  sub_1DC0926D8((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedSectionDescriptor);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      v15 = sub_1DC407300();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(a1, a2, v15);
LABEL_21:
      swift_storeEnumTagMultiPayload();
      return a1;
    case 1:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      a1[16] = a2[16];
      sub_1DC142534();
      v17 = *(int *)(v16 + 64);
      v18 = &a1[v17];
      v19 = &a2[v17];
      v20 = sub_1DC4073A8();
      v21 = *(_QWORD *)(v20 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
      {
        sub_1DC089DA4(0, &qword_1EDB2AD80, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5A418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v18, v19, v20);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
      }
      goto LABEL_21;
    case 0:
      v7 = sub_1DC4010E4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      v8 = (int *)type metadata accessor for StockFeedMastheadModel();
      v9 = v8[5];
      v10 = &a1[v9];
      v11 = &a2[v9];
      v12 = sub_1DC401030();
      v13 = *(_QWORD *)(v12 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
      {
        sub_1DC089DA4(0, &qword_1EDB28DC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF040], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      }
      v23 = v8[6];
      v24 = &a1[v23];
      v25 = &a2[v23];
      v26 = sub_1DC400F7C();
      v27 = *(_QWORD *)(v26 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
      {
        sub_1DC089DA4(0, (unint64_t *)&unk_1EDB28D90, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAEFA8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v24, v25, v26);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
      }
      v64 = v8;
      v29 = v8[7];
      v30 = &a1[v29];
      v31 = &a2[v29];
      *(_OWORD *)&a1[v29] = *(_OWORD *)&a2[v29];
      v32 = (int *)type metadata accessor for QuoteSummaryViewModel();
      v33 = v32[5];
      v34 = &v30[v33];
      v35 = &v31[v33];
      *(_QWORD *)v34 = *(_QWORD *)&v31[v33];
      v34[8] = v31[v33 + 8];
      *((_QWORD *)v34 + 2) = *(_QWORD *)&v31[v33 + 16];
      v34[24] = v31[v33 + 24];
      *((_QWORD *)v34 + 4) = *(_QWORD *)&v31[v33 + 32];
      v34[40] = v31[v33 + 40];
      v36 = *(_OWORD *)&v31[v33 + 64];
      *((_OWORD *)v34 + 3) = *(_OWORD *)&v31[v33 + 48];
      *((_OWORD *)v34 + 4) = v36;
      v34[80] = v31[v33 + 80];
      v37 = type metadata accessor for PriceViewModel();
      v38 = *(int *)(v37 + 40);
      v39 = &v34[v38];
      v40 = &v35[v38];
      v41 = sub_1DC4011C8();
      v62 = *(void (**)(char *, char *))(*(_QWORD *)(v41 - 8) + 32);
      v63 = v41;
      v62(v39, v40);
      v42 = *(int *)(v37 + 44);
      v43 = &v34[v42];
      v44 = &v35[v42];
      v45 = sub_1DC400118();
      v61 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 32);
      v61(v43, v44, v45);
      v46 = v32[6];
      v47 = &v30[v46];
      v48 = &v31[v46];
      v49 = *(_QWORD *)(v37 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48))(&v31[v46], 1, v37))
      {
        sub_1DC089DA4(0, (unint64_t *)&qword_1EDB2D5E8, (uint64_t (*)(uint64_t))type metadata accessor for PriceViewModel, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
      }
      else
      {
        *(_QWORD *)v47 = *(_QWORD *)v48;
        v47[8] = v48[8];
        *((_QWORD *)v47 + 2) = *((_QWORD *)v48 + 2);
        v47[24] = v48[24];
        *((_QWORD *)v47 + 4) = *((_QWORD *)v48 + 4);
        v47[40] = v48[40];
        v51 = *((_OWORD *)v48 + 4);
        *((_OWORD *)v47 + 3) = *((_OWORD *)v48 + 3);
        *((_OWORD *)v47 + 4) = v51;
        v47[80] = v48[80];
        ((void (*)(char *, char *, uint64_t))v62)(&v47[*(int *)(v37 + 40)], &v48[*(int *)(v37 + 40)], v63);
        v61(&v47[*(int *)(v37 + 44)], &v48[*(int *)(v37 + 44)], v45);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v49 + 56))(v47, 0, 1, v37);
      }
      v52 = v32[7];
      v53 = &v30[v52];
      v54 = &v31[v52];
      v55 = sub_1DC4008EC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 32))(v53, v54, v55);
      v56 = v32[8];
      v57 = &v30[v56];
      v58 = &v31[v56];
      v59 = sub_1DC4002BC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 32))(v57, v58, v59);
      *(_OWORD *)&v30[v32[9]] = *(_OWORD *)&v31[v32[9]];
      a1[v64[8]] = a2[v64[8]];
      goto LABEL_21;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

void sub_1DC1DFB78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;

  v1 = sub_1DC407300();
  MEMORY[0x1E0C80A78](v1);
  v2 = type metadata accessor for StockFeedSectionDescriptor();
  MEMORY[0x1E0C80A78](v2);
  sub_1DC1E094C(v0, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = (char *)sub_1DC1DFC40 + 4 * byte_1DC416720[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1DC1DFC40()
{
  uint64_t v0;

  sub_1DC0926D8(v0, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedMastheadModel);
  return 0x646165687473616DLL;
}

void sub_1DC1DFD3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;

  v1 = type metadata accessor for StockFeedSectionDescriptor();
  MEMORY[0x1E0C80A78](v1);
  sub_1DC1E094C(v0, (uint64_t)&v4 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v3 = (char *)sub_1DC1DFDC0 + 4 * byte_1DC416728[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1DC1DFDC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *MEMORY[0x1E0D5D278];
  v2 = sub_1DC407D98();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 104))(v0, v1, v2);
}

uint64_t sub_1DC1DFE00()
{
  uint64_t v0;

  sub_1DC0926D8(v0, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedMastheadModel);
  return sub_1DC1DFDC0();
}

void sub_1DC1DFE14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  sub_1DC142534();
  v3 = v1 + *(int *)(v2 + 64);
  v4 = *MEMORY[0x1E0D5D250];
  v5 = sub_1DC407D98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(v0, v4, v5);
  sub_1DC106B50(v3);
  JUMPOUT(0x1DC1DFDECLL);
}

void sub_1DC1DFE64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *MEMORY[0x1E0D5D270];
  v3 = sub_1DC407D98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(v0, v2, v3);
  sub_1DC0926D8(v1, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedSectionDescriptor);
  JUMPOUT(0x1DC1DFDECLL);
}

void sub_1DC1DFEA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;

  sub_1DC089DA4(0, &qword_1EDB2AD80, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5A418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v1);
  MEMORY[0x1E0C80A78](v2);
  v3 = type metadata accessor for StockFeedSectionDescriptor();
  MEMORY[0x1E0C80A78](v3);
  sub_1DC1E094C(v0, (uint64_t)&v6 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = (char *)sub_1DC1DFF94 + 4 * byte_1DC416730[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

void sub_1DC1DFF94()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 32) = 0;
  *(_OWORD *)v0 = 0u;
  *(_OWORD *)(v0 + 16) = 0u;
}

void sub_1DC1DFFB8()
{
  uint64_t v0;

  sub_1DC0926D8(v0, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedMastheadModel);
  sub_1DC1DFF94();
}

void sub_1DC1DFFCC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *boxed_opaque_existential_1;

  v2 = sub_1DC407300();
  v3 = MEMORY[0x1E0D5A280];
  v0[3] = v2;
  v0[4] = v3;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v0);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 32))(boxed_opaque_existential_1, v1, v2);
  JUMPOUT(0x1DC1DFFA0);
}

void sub_1DC1E0004()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *boxed_opaque_existential_1;

  swift_bridgeObjectRelease();
  sub_1DC142534();
  sub_1DC0F1D44(v3 + *(int *)(v4 + 64), v2);
  sub_1DC106BA4(v2, v1);
  v5 = sub_1DC4073A8();
  v6 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v1, 1, v5) == 1)
  {
    sub_1DC106B50(v2);
    sub_1DC106B50(v1);
    *(_OWORD *)v0 = 0u;
    *(_OWORD *)(v0 + 16) = 0u;
    *(_QWORD *)(v0 + 32) = 0;
  }
  else
  {
    v7 = MEMORY[0x1E0D5A410];
    *(_QWORD *)(v0 + 24) = v5;
    *(_QWORD *)(v0 + 32) = v7;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)v0);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v6 + 32))(boxed_opaque_existential_1, v1, v5);
    sub_1DC106B50(v2);
  }
  JUMPOUT(0x1DC1DFFA0);
}

void sub_1DC1E00AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;

  MEMORY[0x1E0C80A78](v0);
  sub_1DC1E094C(v2, (uint64_t)&v4 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  v3 = (char *)sub_1DC1E0124 + 4 * byte_1DC416738[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1DC1E0124()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1DC0926D8(v1, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedMastheadModel);
  v2 = *MEMORY[0x1E0D5A808];
  v3 = sub_1DC4074A4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(v0, v2, v3);
}

void sub_1DC1E01B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;

  v1 = type metadata accessor for StockFeedSectionDescriptor();
  MEMORY[0x1E0C80A78](v1);
  sub_1DC1E094C(v0, (uint64_t)&v4 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v3 = (char *)sub_1DC1E0234 + 4 * byte_1DC416740[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1DC1E0234()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *MEMORY[0x1E0D52B38];
  v2 = sub_1DC40706C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 104))(v0, v1, v2);
}

uint64_t sub_1DC1E0274()
{
  uint64_t v0;

  sub_1DC0926D8(v0, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedMastheadModel);
  return sub_1DC1E0234();
}

void sub_1DC1E0288()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  sub_1DC142534();
  v3 = v1 + *(int *)(v2 + 64);
  v4 = *MEMORY[0x1E0D52B40];
  v5 = sub_1DC40706C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(v0, v4, v5);
  sub_1DC106B50(v3);
  JUMPOUT(0x1DC1E0260);
}

void sub_1DC1E02D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *MEMORY[0x1E0D52B30];
  v3 = sub_1DC40706C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(v0, v2, v3);
  sub_1DC0926D8(v1, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedSectionDescriptor);
  JUMPOUT(0x1DC1E0260);
}

void sub_1DC1E0318()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;

  v1 = type metadata accessor for StockFeedSectionDescriptor();
  MEMORY[0x1E0C80A78](v1);
  sub_1DC1E094C(v0, (uint64_t)&v4 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v3 = (char *)sub_1DC1E03B0 + 4 * byte_1DC416748[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1DC1E03B0()
{
  uint64_t v0;

  sub_1DC0926D8(v0, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedMastheadModel);
  return sub_1DC407738();
}

void sub_1DC1E03E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;

  swift_bridgeObjectRelease();
  sub_1DC142534();
  v3 = v0 + *(int *)(v2 + 64);
  v4 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D5B408];
  sub_1DC089DA4(0, &qword_1EDB3FF88, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5B408], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  sub_1DC40775C();
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1DC40C740;
  sub_1DC407744();
  sub_1DC407750();
  *(_QWORD *)(v1 - 72) = v5;
  sub_1DC1E09D4();
  sub_1DC089DA4(0, &qword_1EDB3F728, v4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1DC0C7880();
  sub_1DC40964C();
  sub_1DC106B50(v3);
  JUMPOUT(0x1DC1E03CCLL);
}

uint64_t sub_1DC1E04E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  char *v31;
  char *v32;
  char v33;
  void (*v34)(char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t (*v41)(_QWORD);
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;

  v4 = sub_1DC407300();
  v45 = *(_QWORD *)(v4 - 8);
  v46 = v4;
  MEMORY[0x1E0C80A78](v4);
  v44 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v43 = (char *)&v43 - v7;
  v8 = type metadata accessor for StockFeedMastheadModel();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v43 - v12;
  v14 = type metadata accessor for StockFeedSectionDescriptor();
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v19 = (uint64_t *)((char *)&v43 - v18);
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v43 - v21;
  sub_1DC1E08EC();
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)&v43 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = &v25[*(int *)(v26 + 48)];
  sub_1DC1E094C(a1, (uint64_t)v25);
  sub_1DC1E094C(a2, (uint64_t)v27);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      sub_1DC1E094C((uint64_t)v25, (uint64_t)v22);
      if (swift_getEnumCaseMultiPayload())
      {
        sub_1DC0926D8((uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedMastheadModel);
        goto LABEL_20;
      }
      sub_1DC1E0990((uint64_t)v22, (uint64_t)v13);
      sub_1DC1E0990((uint64_t)v27, (uint64_t)v10);
      v33 = sub_1DC2F2900(v13, v10);
      sub_1DC0926D8((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedMastheadModel);
      sub_1DC0926D8((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedMastheadModel);
      goto LABEL_24;
    case 1u:
      sub_1DC1E094C((uint64_t)v25, (uint64_t)v19);
      v36 = *v19;
      v35 = v19[1];
      sub_1DC142534();
      v38 = v37;
      v39 = (uint64_t)v19 + *(int *)(v37 + 64);
      if (swift_getEnumCaseMultiPayload() != 1)
      {
        sub_1DC106B50(v39);
        swift_bridgeObjectRelease();
        goto LABEL_20;
      }
      if (v36 == *(_QWORD *)v27 && v35 == *((_QWORD *)v27 + 1))
        v33 = 1;
      else
        v33 = sub_1DC4099E8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1DC106B50((uint64_t)&v27[*(int *)(v38 + 64)]);
      sub_1DC106B50(v39);
      goto LABEL_24;
    case 2u:
      sub_1DC1E094C((uint64_t)v25, (uint64_t)v16);
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        v29 = v45;
        v28 = v46;
        v30 = *(void (**)(char *, char *, uint64_t))(v45 + 32);
        v31 = v43;
        v30(v43, v16, v46);
        v32 = v44;
        v30(v44, v27, v28);
        v33 = sub_1DC4072E8();
        v34 = *(void (**)(char *, uint64_t))(v29 + 8);
        v34(v32, v28);
        v34(v31, v28);
LABEL_24:
        v41 = (uint64_t (*)(_QWORD))type metadata accessor for StockFeedSectionDescriptor;
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v45 + 8))(v16, v46);
LABEL_20:
        v33 = 0;
        v41 = (uint64_t (*)(_QWORD))sub_1DC1E08EC;
      }
      sub_1DC0926D8((uint64_t)v25, v41);
      return v33 & 1;
    case 3u:
      if (swift_getEnumCaseMultiPayload() != 3)
        goto LABEL_20;
      goto LABEL_17;
    case 4u:
      if (swift_getEnumCaseMultiPayload() == 4)
        goto LABEL_17;
      goto LABEL_20;
    case 6u:
      if (swift_getEnumCaseMultiPayload() != 6)
        goto LABEL_20;
LABEL_17:
      v33 = 1;
      goto LABEL_24;
    default:
      goto LABEL_20;
  }
}

void sub_1DC1E08EC()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EDB36F98)
  {
    type metadata accessor for StockFeedSectionDescriptor();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EDB36F98);
  }
}

uint64_t sub_1DC1E094C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for StockFeedSectionDescriptor();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC1E0990(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for StockFeedMastheadModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1DC1E09D4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EDB2AEA0;
  if (!qword_1EDB2AEA0)
  {
    v1 = sub_1DC40775C();
    result = MEMORY[0x1DF0CAB8C](MEMORY[0x1E0D5B410], v1);
    atomic_store(result, (unint64_t *)&qword_1EDB2AEA0);
  }
  return result;
}

uint64_t NeverShowBilingualFeedPromptAlert.title.getter()
{
  uint64_t ObjCClassFromMetadata;
  id v1;
  uint64_t v2;

  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1DC3FFC80();

  v2 = sub_1DC408A70();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t NeverShowBilingualFeedPromptAlert.message.getter()
{
  uint64_t ObjCClassFromMetadata;
  id v1;
  uint64_t v2;

  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1DC3FFC80();

  v2 = sub_1DC408A70();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t NeverShowBilingualFeedPromptAlert.preferredActionButton.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *MEMORY[0x1E0DB9130];
  v3 = sub_1DC4050F8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

uint64_t NeverShowBilingualFeedPromptAlert.acceptButton.getter()
{
  uint64_t ObjCClassFromMetadata;
  id v1;
  uint64_t v2;

  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v2 = sub_1DC3FFC80();

  return v2;
}

uint64_t NeverShowBilingualFeedPromptAlert.rejectButton.getter()
{
  uint64_t ObjCClassFromMetadata;
  id v1;
  uint64_t v2;

  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v2 = sub_1DC3FFC80();

  return v2;
}

uint64_t sub_1DC1E0D9C()
{
  return NeverShowBilingualFeedPromptAlert.title.getter();
}

uint64_t sub_1DC1E0DB0()
{
  return NeverShowBilingualFeedPromptAlert.message.getter();
}

uint64_t sub_1DC1E0DC4()
{
  uint64_t ObjCClassFromMetadata;
  id v1;
  uint64_t v2;

  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v2 = sub_1DC3FFC80();

  return v2;
}

uint64_t sub_1DC1E0E78()
{
  uint64_t ObjCClassFromMetadata;
  id v1;
  uint64_t v2;

  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v2 = sub_1DC3FFC80();

  return v2;
}

ValueMetadata *type metadata accessor for NeverShowBilingualFeedPromptAlert()
{
  return &type metadata for NeverShowBilingualFeedPromptAlert;
}

uint64_t sub_1DC1E0F44@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4018AC();
  result = sub_1DC4025FC();
  if (result)
  {
    v5 = result;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1DC096268(0, &qword_1EDB29A28);
    sub_1DC402608();
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1DC096268(0, &qword_1EDB299B8);
    result = sub_1DC402608();
    if (v18)
    {
      v6 = type metadata accessor for PaywallTracker();
      v7 = (_QWORD *)swift_allocObject();
      v8 = (char *)v7 + OBJC_IVAR____TtC8StocksUI14PaywallTracker_feedData;
      v9 = sub_1DC403A54();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
      v10 = (char *)v7 + OBJC_IVAR____TtC8StocksUI14PaywallTracker_groupData;
      v11 = sub_1DC403B08();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
      v12 = (char *)v7 + OBJC_IVAR____TtC8StocksUI14PaywallTracker_articleData;
      v13 = sub_1DC4032BC();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
      v14 = (char *)v7 + OBJC_IVAR____TtC8StocksUI14PaywallTracker_campaignData;
      v15 = sub_1DC4030A0();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
      v16 = (char *)v7 + OBJC_IVAR____TtC8StocksUI14PaywallTracker_adReferralData;
      v17 = sub_1DC4031E4();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v16, 1, 1, v17);
      v7[2] = v5;
      v7[3] = v20;
      v7[4] = v21;
      v7[5] = v18;
      v7[6] = v19;
      a2[3] = v6;
      result = sub_1DC080808(&qword_1EDB2D3D0, (uint64_t (*)(uint64_t))type metadata accessor for PaywallTracker, (uint64_t)&unk_1DC4161D8);
      a2[4] = result;
      *a2 = v7;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1DC1E11A0@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10[2];

  sub_1DC0824D4((uint64_t)a1, (uint64_t)v10);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC083C10();
  result = sub_1DC4025FC();
  if (result)
  {
    v5 = result;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1DC096268(0, (unint64_t *)&unk_1EDB28D30);
    result = sub_1DC402608();
    if (v8)
    {
      v6 = type metadata accessor for PaywallRouter();
      v7 = (_QWORD *)swift_allocObject();
      sub_1DC097DD0(v10, (uint64_t)(v7 + 2));
      v7[7] = v5;
      v7[8] = v8;
      v7[9] = v9;
      a2[3] = v6;
      result = sub_1DC080808(&qword_1EDB2D050, (uint64_t (*)(uint64_t))type metadata accessor for PaywallRouter, (uint64_t)&unk_1DC416460);
      a2[4] = result;
      *a2 = v7;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for ManageWatchlistsBlueprintLayoutBuilder()
{
  return objc_opt_self();
}

uint64_t sub_1DC1E12F0()
{
  return sub_1DC080808(&qword_1F034C430, (uint64_t (*)(uint64_t))type metadata accessor for ManageWatchlistsLayoutSectionDescriptor, (uint64_t)&unk_1DC421E88);
}

uint64_t sub_1DC1E131C()
{
  return sub_1DC080808(&qword_1F034C018, (uint64_t (*)(uint64_t))type metadata accessor for ManageWatchlistsLayoutModel, (uint64_t)&unk_1DC4134C8);
}

uint64_t sub_1DC1E1348@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char v11;
  uint64_t v12;
  void (*v13)(char *);
  uint64_t v15;
  uint64_t v16;
  char v17;

  v15 = a3;
  v16 = type metadata accessor for ManageWatchlistsLayoutSectionDescriptor();
  MEMORY[0x1E0C80A78](v16);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1DC405458();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC142BD8();
  sub_1DC4046FC();
  v11 = v17;
  sub_1DC40544C();
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v6, v10, v7);
  v12 = swift_storeEnumTagMultiPayload();
  MEMORY[0x1E0C80A78](v12);
  *(&v15 - 2) = a1;
  *(&v15 - 1) = a2;
  if ((v11 & 1) != 0)
    v13 = (void (*)(char *))sub_1DC1E1CC0;
  else
    v13 = (void (*)(char *))sub_1DC1E1CD8;
  sub_1DC13CF98(v13, (uint64_t)(&v15 - 4));
  type metadata accessor for ManageWatchlistsLayoutModel();
  sub_1DC080808(&qword_1F034C430, (uint64_t (*)(uint64_t))type metadata accessor for ManageWatchlistsLayoutSectionDescriptor, (uint64_t)&unk_1DC421E88);
  sub_1DC080808(&qword_1F034C018, (uint64_t (*)(uint64_t))type metadata accessor for ManageWatchlistsLayoutModel, (uint64_t)&unk_1DC4134C8);
  sub_1DC405308();
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_1DC1E1550@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _OWORD v31[10];
  uint64_t v32;

  v30 = a3;
  v5 = type metadata accessor for WatchlistCellViewLayoutOptions();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ManageWatchlistsLayoutModel();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for WatchlistCellViewModel(0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for ManageWatchlistsModel();
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC142B5C();
  sub_1DC404354();
  if (swift_getEnumCaseMultiPayload() > 1)
  {
    sub_1DC142AE0();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v30, 1, 1, v28);
    return sub_1DC0926D8((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for ManageWatchlistsModel);
  }
  else
  {
    sub_1DC092ED0((uint64_t)v16, (uint64_t)v13, type metadata accessor for WatchlistCellViewModel);
    sub_1DC15C090();
    v18 = &v10[*(int *)(v17 + 48)];
    sub_1DC0990BC((uint64_t)v13, (uint64_t)v10, type metadata accessor for WatchlistCellViewModel);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 40));
    v19 = sub_1DC4052FC();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v7, a2, v19);
    sub_1DC1884F0(*(double *)&v13, (uint64_t)v7, (uint64_t)v31);
    sub_1DC0926D8((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for WatchlistCellViewLayoutOptions);
    v20 = v31[9];
    *((_OWORD *)v18 + 8) = v31[8];
    *((_OWORD *)v18 + 9) = v20;
    *((_QWORD *)v18 + 20) = v32;
    v21 = v31[5];
    *((_OWORD *)v18 + 4) = v31[4];
    *((_OWORD *)v18 + 5) = v21;
    v22 = v31[7];
    *((_OWORD *)v18 + 6) = v31[6];
    *((_OWORD *)v18 + 7) = v22;
    v23 = v31[1];
    *(_OWORD *)v18 = v31[0];
    *((_OWORD *)v18 + 1) = v23;
    v24 = v31[3];
    *((_OWORD *)v18 + 2) = v31[2];
    *((_OWORD *)v18 + 3) = v24;
    swift_storeEnumTagMultiPayload();
    sub_1DC080808(&qword_1F034C018, (uint64_t (*)(uint64_t))type metadata accessor for ManageWatchlistsLayoutModel, (uint64_t)&unk_1DC4134C8);
    v25 = v30;
    sub_1DC404DD4();
    sub_1DC0926D8((uint64_t)v13, type metadata accessor for WatchlistCellViewModel);
    sub_1DC142AE0();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v25, 0, 1, v26);
  }
}

uint64_t sub_1DC1E18EC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t WatchlistViewLayoutOptions;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t WatchlistViewModel;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v24 = a2;
  WatchlistViewLayoutOptions = type metadata accessor for CreateWatchlistViewLayoutOptions();
  MEMORY[0x1E0C80A78](WatchlistViewLayoutOptions);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ManageWatchlistsLayoutModel();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  WatchlistViewModel = type metadata accessor for CreateWatchlistViewModel();
  MEMORY[0x1E0C80A78](WatchlistViewModel);
  v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for ManageWatchlistsModel();
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC142B5C();
  sub_1DC404354();
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    sub_1DC092ED0((uint64_t)v16, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for CreateWatchlistViewModel);
    sub_1DC15BFD4();
    v18 = (uint64_t)&v10[*(int *)(v17 + 48)];
    sub_1DC0990BC((uint64_t)v13, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for CreateWatchlistViewModel);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 80));
    v19 = sub_1DC4052FC();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v7, v24, v19);
    sub_1DC31EF7C((uint64_t)v7, v18);
    sub_1DC0926D8((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for CreateWatchlistViewLayoutOptions);
    swift_storeEnumTagMultiPayload();
    sub_1DC080808(&qword_1F034C018, (uint64_t (*)(uint64_t))type metadata accessor for ManageWatchlistsLayoutModel, (uint64_t)&unk_1DC4134C8);
    sub_1DC404DD4();
    sub_1DC0926D8((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for CreateWatchlistViewModel);
    sub_1DC142AE0();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(a3, 0, 1, v20);
  }
  else
  {
    sub_1DC142AE0();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(a3, 1, 1, v22);
    return sub_1DC0926D8((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for ManageWatchlistsModel);
  }
}

uint64_t sub_1DC1E1B74(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE v10[16];
  uint64_t v11;
  uint64_t v12;

  v4 = sub_1DC4052FC();
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = *v2;
  (*(void (**)(_BYTE *, uint64_t, __n128))(v8 + 16))(&v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)], a2, v5);
  v11 = v7;
  v12 = a2;
  sub_1DC1554C8((void (*)(char *))sub_1DC1E1CA4, (uint64_t)v10);
  type metadata accessor for ManageWatchlistsLayoutSectionDescriptor();
  type metadata accessor for ManageWatchlistsLayoutModel();
  sub_1DC080808(&qword_1F034C430, (uint64_t (*)(uint64_t))type metadata accessor for ManageWatchlistsLayoutSectionDescriptor, (uint64_t)&unk_1DC421E88);
  sub_1DC080808(&qword_1F034C018, (uint64_t (*)(uint64_t))type metadata accessor for ManageWatchlistsLayoutModel, (uint64_t)&unk_1DC4134C8);
  return sub_1DC404540();
}

uint64_t sub_1DC1E1CA4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1DC1E1348(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_1DC1E1CC0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1DC1E18EC(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_1DC1E1CD8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1DC1E1550(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_1DC1E1CF0@<X0>(uint64_t *a1@<X8>)
{
  return sub_1DC1E1D2C((uint64_t (*)(_QWORD))type metadata accessor for NoopAudioSessionManager, (uint64_t)&off_1EA464A88, a1);
}

uint64_t sub_1DC1E1D04@<X0>(uint64_t *a1@<X8>)
{
  return sub_1DC1E1D2C((uint64_t (*)(_QWORD))type metadata accessor for NoopAudioSessionManager, (uint64_t)&off_1EA464A78, a1);
}

uint64_t sub_1DC1E1D18@<X0>(uint64_t *a1@<X8>)
{
  return sub_1DC1E1D2C((uint64_t (*)(_QWORD))type metadata accessor for DisabledAudioTrackFactory, (uint64_t)&off_1EA45B5C8, a1);
}

uint64_t sub_1DC1E1D2C@<X0>(uint64_t (*a1)(_QWORD)@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v5;
  uint64_t result;

  v5 = a1(0);
  result = swift_allocObject();
  a3[3] = v5;
  a3[4] = a2;
  *a3 = result;
  return result;
}

uint64_t sub_1DC1E1D74@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;

  v2 = sub_1DC4021F4();
  swift_allocObject();
  result = sub_1DC4021E8();
  v4 = MEMORY[0x1E0D57BC8];
  a1[3] = v2;
  a1[4] = v4;
  *a1 = result;
  return result;
}

uint64_t type metadata accessor for NoopAudioAssembly()
{
  return objc_opt_self();
}

uint64_t sub_1DC1E1DEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v5;

  v0 = sub_1DC402C50();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC4026D4();
  sub_1DC0A3390(0, (unint64_t *)&unk_1EDB357E0);
  sub_1DC402B3C();
  swift_release();
  swift_release();
  sub_1DC4026D4();
  sub_1DC0A3390(0, (unint64_t *)&unk_1EDB357D0);
  sub_1DC402B3C();
  swift_release();
  swift_release();
  sub_1DC4026D4();
  sub_1DC0A3390(0, &qword_1EDB32680);
  sub_1DC402B3C();
  swift_release();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB4A18], v0);
  sub_1DC4024A0();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_1DC4026D4();
  sub_1DC0A3390(0, &qword_1EDB29270);
  sub_1DC402B3C();
  swift_release();
  return swift_release();
}

uint64_t sub_1DC1E1FC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1DC4010E4();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t sub_1DC1E2004(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1DC4010E4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t sub_1DC1E2038(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1DC4010E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_1DC1E207C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1DC4010E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_1DC1E20C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1DC4010E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_1DC1E2104(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1DC4010E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_1DC1E2148()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC1E2154(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1DC4010E4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_1DC1E2190()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC1E219C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1DC4010E4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for StockChartModel()
{
  uint64_t result;

  result = qword_1EDB2E2C0;
  if (!qword_1EDB2E2C0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1DC1E2218()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1DC4010E4();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1DC1E2280()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  void (*v14)(unint64_t, _QWORD, uint64_t);
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  void (*v22)(unint64_t, _QWORD, uint64_t);
  unint64_t v23;
  unint64_t v24;
  void (*v25)(unint64_t, _QWORD, uint64_t);
  unint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unsigned __int8 v31;
  unsigned __int8 v32;

  v0 = sub_1DC4011C8();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v28 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC401078();
  if ((*(unsigned int (**)(char *, uint64_t))(v1 + 88))(v3, v0) == *MEMORY[0x1E0DAF1B8])
  {
    sub_1DC40133C();
    sub_1DC401324();
    if (qword_1EDB28E68 != -1)
      swift_once();
    sub_1DC401318();
    swift_release();
    v4 = v31;
    sub_1DC1E2930();
    v5 = sub_1DC4002BC();
    v6 = *(_QWORD *)(v5 - 8);
    v7 = *(_QWORD *)(v6 + 72);
    v8 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    v9 = 2 * v7;
    v10 = 3 * v7;
    v11 = 4 * v7;
    v12 = swift_allocObject();
    if (v4 == 1)
    {
      *(_OWORD *)(v12 + 16) = xmmword_1DC416A90;
      v13 = v12 + v8;
      v14 = *(void (**)(unint64_t, _QWORD, uint64_t))(v6 + 104);
      v14(v13, *MEMORY[0x1E0DAE0B8], v5);
      v14(v13 + v7, *MEMORY[0x1E0DAE0C8], v5);
      v14(v13 + v9, *MEMORY[0x1E0DAE0A0], v5);
      v14(v13 + v10, *MEMORY[0x1E0DAE0F0], v5);
      v14(v13 + v11, *MEMORY[0x1E0DAE090], v5);
      v14(v13 + 5 * v7, *MEMORY[0x1E0DAE0C0], v5);
      v14(v13 + 6 * v7, *MEMORY[0x1E0DAE0E0], v5);
      v14(v13 + 7 * v7, *MEMORY[0x1E0DAE0E8], v5);
      v14(v13 + 8 * v7, *MEMORY[0x1E0DAE0D8], v5);
      v14(v13 + 9 * v7, *MEMORY[0x1E0DAE0A8], v5);
    }
    else
    {
      *(_OWORD *)(v12 + 16) = xmmword_1DC416AB0;
      v24 = v12 + v8;
      v25 = *(void (**)(unint64_t, _QWORD, uint64_t))(v6 + 104);
      v25(v24, *MEMORY[0x1E0DAE0B8], v5);
      v25(v24 + v7, *MEMORY[0x1E0DAE0C8], v5);
      v25(v24 + v9, *MEMORY[0x1E0DAE0A0], v5);
      v25(v24 + v10, *MEMORY[0x1E0DAE0F0], v5);
      v25(v24 + v11, *MEMORY[0x1E0DAE0C0], v5);
      v25(v24 + 5 * v7, *MEMORY[0x1E0DAE0E0], v5);
      v25(v24 + 6 * v7, *MEMORY[0x1E0DAE0E8], v5);
      v25(v24 + 7 * v7, *MEMORY[0x1E0DAE0D8], v5);
      v25(v24 + 8 * v7, *MEMORY[0x1E0DAE0A8], v5);
    }
  }
  else
  {
    sub_1DC40133C();
    sub_1DC401324();
    if (qword_1EDB28E68 != -1)
      swift_once();
    sub_1DC401318();
    swift_release();
    v15 = v32;
    sub_1DC1E2930();
    v16 = sub_1DC4002BC();
    v17 = *(_QWORD *)(v16 - 8);
    v18 = *(_QWORD *)(v17 + 72);
    v19 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
    v20 = 2 * v18;
    v29 = 3 * v18;
    v30 = 4 * v18;
    v12 = swift_allocObject();
    if (v15 == 1)
    {
      *(_OWORD *)(v12 + 16) = xmmword_1DC416AA0;
      v21 = v12 + v19;
      v22 = *(void (**)(unint64_t, _QWORD, uint64_t))(v17 + 104);
      v22(v21, *MEMORY[0x1E0DAE0B0], v16);
      v22(v21 + v18, *MEMORY[0x1E0DAE0B8], v16);
      v22(v21 + v20, *MEMORY[0x1E0DAE0C8], v16);
      v22(v21 + v29, *MEMORY[0x1E0DAE0A0], v16);
      v22(v21 + v30, *MEMORY[0x1E0DAE0F0], v16);
      v22(v21 + 5 * v18, *MEMORY[0x1E0DAE090], v16);
      v22(v21 + 6 * v18, *MEMORY[0x1E0DAE0C0], v16);
      v22(v21 + 7 * v18, *MEMORY[0x1E0DAE0E0], v16);
      v22(v21 + 8 * v18, *MEMORY[0x1E0DAE0E8], v16);
      v22(v21 + 9 * v18, *MEMORY[0x1E0DAE0D8], v16);
      v23 = v21 + 10 * v18;
    }
    else
    {
      *(_OWORD *)(v12 + 16) = xmmword_1DC416A90;
      v26 = v12 + v19;
      v22 = *(void (**)(unint64_t, _QWORD, uint64_t))(v17 + 104);
      v22(v26, *MEMORY[0x1E0DAE0B0], v16);
      v22(v26 + v18, *MEMORY[0x1E0DAE0B8], v16);
      v22(v26 + v20, *MEMORY[0x1E0DAE0C8], v16);
      v22(v26 + v29, *MEMORY[0x1E0DAE0A0], v16);
      v22(v26 + v30, *MEMORY[0x1E0DAE0F0], v16);
      v22(v26 + 5 * v18, *MEMORY[0x1E0DAE0C0], v16);
      v22(v26 + 6 * v18, *MEMORY[0x1E0DAE0E0], v16);
      v22(v26 + 7 * v18, *MEMORY[0x1E0DAE0E8], v16);
      v22(v26 + 8 * v18, *MEMORY[0x1E0DAE0D8], v16);
      v23 = v26 + 9 * v18;
    }
    v22(v23, *MEMORY[0x1E0DAE0A8], v16);
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  }
  return v12;
}

void sub_1DC1E2930()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB3FDF8)
  {
    sub_1DC4002BC();
    v0 = sub_1DC4099C4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB3FDF8);
  }
}

uint64_t sub_1DC1E2984(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  char *v4;
  void (*v5)(char *);
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  _QWORD v9[5];

  __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 40));
  sub_1DC0A3390(0, (unint64_t *)&unk_1EDB38BB0);
  result = sub_1DC402608();
  if (*((_QWORD *)&v7 + 1))
  {
    sub_1DC097DD0(&v6, (uint64_t)v9);
    __swift_project_boxed_opaque_existential_1(v9, v9[3]);
    v8 = 0;
    v6 = 0u;
    v7 = 0u;
    v4 = sub_1DC222604(a1, (uint64_t)&v6);
    sub_1DC1E2A80((uint64_t)&v6);
    if (v4)
    {
      sub_1DC143F58();
      v5 = (void (*)(char *))sub_1DC406820();
      v5(v4);
      swift_release();
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
    return (uint64_t)v4;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC1E2A80(uint64_t a1)
{
  uint64_t v2;

  sub_1DC1E2ABC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1DC1E2ABC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F034C050)
  {
    sub_1DC0A3390(255, &qword_1F034F350);
    v0 = sub_1DC4095A4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1F034C050);
  }
}

uint64_t type metadata accessor for StockFeedViewerPageViewControllerProvider()
{
  return objc_opt_self();
}

uint64_t sub_1DC1E2B40()
{
  return sub_1DC080808(&qword_1EDB31248, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedViewerPage, (uint64_t)&unk_1DC42DE94);
}

uint64_t sub_1DC1E2B70(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v3 = type metadata accessor for StockFeedPage();
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for StockFeedViewerPage();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v1;
  sub_1DC1A1B94(a1, (uint64_t)v8);
  sub_1DC1A1BD8((uint64_t)v8, (uint64_t)v5);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v9 + 16), *(_QWORD *)(v9 + 40));
  v10 = sub_1DC1C4FC8((uint64_t)v5);
  sub_1DC1A1C1C((uint64_t)v5);
  sub_1DC080808((unint64_t *)&unk_1EDB350E0, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedViewController, (uint64_t)&unk_1DC418AD4);
  return v10;
}

uint64_t sub_1DC1E2C64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _BYTE v8[40];
  __int128 v9;
  __int128 v10;

  if (a2)
  {
    *((_QWORD *)&v10 + 1) = sub_1DC4018AC();
    *(_QWORD *)&v9 = a2;
  }
  else
  {
    v9 = 0u;
    v10 = 0u;
  }
  sub_1DC194128(a3, (uint64_t)v8);
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = a2;
  sub_1DC1941B8((uint64_t)v8, v5 + 24);
  sub_1DC083C10();
  sub_1DC080808((unint64_t *)&qword_1EDB29CA0, (uint64_t (*)(uint64_t))sub_1DC083C10, MEMORY[0x1E0DB75C0]);
  swift_retain_n();
  v6 = sub_1DC406E08();
  swift_release();
  sub_1DC0926D8((uint64_t)&v9, (uint64_t (*)(_QWORD))sub_1DC0D11C4);
  return v6;
}

uint64_t sub_1DC1E2DA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  void (*v21)(uint64_t);
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t *v40;
  uint64_t (*v41)();
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  void (*v48)(uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t (*v53)(uint64_t);
  uint64_t v54;
  uint64_t v55;
  char *v57;
  id v58;
  void *v59;
  uint64_t v60;
  void *v61;
  char *v62;
  uint64_t v63;
  char *v64;
  int v65;
  int v66;
  void (*v67)(char *, uint64_t);
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  char *v90;
  _OWORD v91[2];
  uint64_t v92;
  _BYTE v93[56];

  v74 = a3;
  v81 = a2;
  v5 = sub_1DC3FFDD0();
  v86 = *(_QWORD *)(v5 - 8);
  v87 = v5;
  MEMORY[0x1E0C80A78](v5);
  v82 = (char *)&v71 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC092F50(0, (unint64_t *)&unk_1EDB28A70, v7);
  MEMORY[0x1E0C80A78](v8);
  v85 = (uint64_t)&v71 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v90 = (char *)&v71 - v11;
  sub_1DC092F50(0, (unint64_t *)&unk_1EDB29810, (void (*)(uint64_t))MEMORY[0x1E0DAD3C8]);
  MEMORY[0x1E0C80A78](v12);
  v75 = (char *)&v71 - v13;
  v79 = sub_1DC405974();
  v77 = *(_QWORD *)(v79 - 8);
  MEMORY[0x1E0C80A78](v79);
  v78 = (char *)&v71 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = sub_1DC405D88();
  v76 = *(_QWORD *)(v89 - 8);
  MEMORY[0x1E0C80A78](v89);
  v80 = (char *)&v71 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v88 = (char *)&v71 - v17;
  v18 = type metadata accessor for StocksActivity(0);
  v83 = *(_QWORD *)(v18 - 8);
  v84 = v18;
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v71 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC092F50(0, (unint64_t *)&qword_1EDB2C5F0, v21);
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)&v71 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v25);
  v27 = (char *)&v71 - v26;
  sub_1DC092F50(0, (unint64_t *)&unk_1F034E4A0, (void (*)(uint64_t))type metadata accessor for StocksNewsArticlesRouter.ArticleRoute);
  MEMORY[0x1E0C80A78](v28);
  v30 = (char *)&v71 - v29;
  v31 = type metadata accessor for StocksNewsArticlesRouter.ArticleRoute();
  v32 = *(_QWORD *)(v31 - 8);
  MEMORY[0x1E0C80A78](v31);
  v34 = (char *)&v71 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v35);
  v37 = (char *)&v71 - v36;
  v38 = a1;
  v39 = v3;
  sub_1DC1E35A8(v38, (uint64_t)v30);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31) == 1)
  {
    v40 = (unint64_t *)&unk_1F034E4A0;
    v41 = type metadata accessor for StocksNewsArticlesRouter.ArticleRoute;
    v42 = (uint64_t)v30;
    return sub_1DC092F14(v42, v40, (void (*)(uint64_t))v41);
  }
  v43 = (uint64_t)v90;
  v72 = v39;
  v44 = v88;
  v73 = v27;
  v45 = v89;
  sub_1DC092ED0((uint64_t)v30, (uint64_t)v37, (uint64_t (*)(_QWORD))type metadata accessor for StocksNewsArticlesRouter.ArticleRoute);
  sub_1DC0990BC((uint64_t)v37, (uint64_t)v34, (uint64_t (*)(_QWORD))type metadata accessor for StocksNewsArticlesRouter.ArticleRoute);
  v46 = (uint64_t)v37;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v47 = (uint64_t *)&unk_1EDB28A70;
    v48 = (void (*)(uint64_t))MEMORY[0x1E0CAFFF8];
    v49 = v43;
    sub_1DC1E4070((uint64_t)v34, v43, (unint64_t *)&unk_1EDB28A70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    v50 = v85;
    sub_1DC092F9C(v43, v85, (unint64_t *)&unk_1EDB28A70, v48);
    v52 = v86;
    v51 = v87;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v86 + 48))(v50, 1, v87) != 1)
    {
      v57 = v82;
      (*(void (**)(char *, uint64_t, uint64_t))(v52 + 32))(v82, v50, v51);
      v58 = objc_msgSend((id)objc_opt_self(), sel_sharedApplication);
      v59 = (void *)sub_1DC3FFD88();
      sub_1DC1A1DA0(MEMORY[0x1E0DEE9D8]);
      type metadata accessor for OpenExternalURLOptionsKey(0);
      v60 = v46;
      sub_1DC080808(&qword_1F034BCC0, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_1DC40D990);
      v61 = (void *)sub_1DC408980();
      swift_bridgeObjectRelease();
      objc_msgSend(v58, sel_openURL_options_completionHandler_, v59, v61, 0);

      (*(void (**)(char *, uint64_t))(v52 + 8))(v57, v51);
      sub_1DC092F14(v49, (unint64_t *)&unk_1EDB28A70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
      return sub_1DC0926D8(v60, (uint64_t (*)(_QWORD))type metadata accessor for StocksNewsArticlesRouter.ArticleRoute);
    }
    v53 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8];
    sub_1DC092F14(v49, (unint64_t *)&unk_1EDB28A70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    sub_1DC0926D8(v46, (uint64_t (*)(_QWORD))type metadata accessor for StocksNewsArticlesRouter.ArticleRoute);
    v42 = v50;
    goto LABEL_8;
  }
  v47 = &qword_1EDB2C5F0;
  v54 = (uint64_t)v34;
  v55 = (uint64_t)v73;
  sub_1DC1E4070(v54, (uint64_t)v73, (unint64_t *)&qword_1EDB2C5F0, (void (*)(uint64_t))type metadata accessor for StocksActivity);
  sub_1DC092F9C(v55, (uint64_t)v24, (unint64_t *)&qword_1EDB2C5F0, (void (*)(uint64_t))type metadata accessor for StocksActivity);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v83 + 48))(v24, 1, v84) == 1)
  {
    v53 = type metadata accessor for StocksActivity;
    sub_1DC092F14(v55, (unint64_t *)&qword_1EDB2C5F0, (void (*)(uint64_t))type metadata accessor for StocksActivity);
    sub_1DC0926D8((uint64_t)v37, (uint64_t (*)(_QWORD))type metadata accessor for StocksNewsArticlesRouter.ArticleRoute);
    v42 = (uint64_t)v24;
LABEL_8:
    v40 = (unint64_t *)v47;
    v41 = (uint64_t (*)())v53;
    return sub_1DC092F14(v42, v40, (void (*)(uint64_t))v41);
  }
  v90 = v37;
  sub_1DC092ED0((uint64_t)v24, (uint64_t)v20, type metadata accessor for StocksActivity);
  (*(void (**)(char *, uint64_t, uint64_t))(v77 + 16))(v78, v81, v79);
  v62 = v44;
  sub_1DC405D94();
  v63 = v76;
  v64 = v80;
  (*(void (**)(char *, char *, uint64_t))(v76 + 16))(v80, v62, v45);
  v65 = (*(uint64_t (**)(char *, uint64_t))(v63 + 88))(v64, v45);
  v66 = *MEMORY[0x1E0DBAC88];
  v67 = *(void (**)(char *, uint64_t))(v63 + 8);
  v67(v64, v45);
  v68 = v72;
  if (v65 == v66)
  {
    v69 = sub_1DC403340();
    v70 = (uint64_t)v75;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v69 - 8) + 56))(v75, 1, 1, v69);
    sub_1DC0824D4(v68 + 64, (uint64_t)v93);
    v92 = 0;
    memset(v91, 0, sizeof(v91));
    swift_retain();
    sub_1DC22BAE0((uint64_t)v20, v74, v70, (uint64_t)v93, 0, 0, (uint64_t)v91);
    swift_release();
    sub_1DC1E40BC((uint64_t)v91, &qword_1EDB29410, (unint64_t *)&unk_1EDB29400);
    sub_1DC1E40BC((uint64_t)v93, &qword_1EDB2ACD0, (unint64_t *)&qword_1EDB2ACC0);
    sub_1DC092F14(v70, (unint64_t *)&unk_1EDB29810, (void (*)(uint64_t))MEMORY[0x1E0DAD3C8]);
    swift_release();
  }
  else
  {
    sub_1DC404510();
  }
  v67(v62, v45);
  sub_1DC0926D8((uint64_t)v20, type metadata accessor for StocksActivity);
  sub_1DC092F14((uint64_t)v73, (unint64_t *)&qword_1EDB2C5F0, (void (*)(uint64_t))type metadata accessor for StocksActivity);
  return sub_1DC0926D8((uint64_t)v90, (uint64_t (*)(_QWORD))type metadata accessor for StocksNewsArticlesRouter.ArticleRoute);
}

uint64_t sub_1DC1E35A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  void **v16;
  int v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  __int128 *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(void);
  uint64_t (*v27)(void);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  _BYTE v35[40];
  unint64_t v36;
  unint64_t v37;

  v4 = sub_1DC402434();
  MEMORY[0x1E0C80A78](v4);
  v5 = sub_1DC401BB8();
  MEMORY[0x1E0C80A78](v5);
  v7 = &v35[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = sub_1DC40202C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = &v35[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = sub_1DC401990();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x1E0C80A78](v12);
  v16 = (void **)&v35[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(void **, uint64_t, uint64_t, __n128))(v13 + 16))(v16, a1, v12, v14);
  v17 = (*(uint64_t (**)(void **, uint64_t))(v13 + 88))(v16, v12);
  if (v17 == *MEMORY[0x1E0D56CB0])
  {
    (*(void (**)(void **, uint64_t))(v13 + 96))(v16, v12);
    v18 = *v16;
    v36 = 0;
    v37 = 0xE000000000000000;
    sub_1DC409730();
    swift_bridgeObjectRelease();
    v36 = 0xD000000000000013;
    v37 = 0x80000001DC43A910;
    v19 = objc_msgSend(v18, sel_identifier);
    sub_1DC408A4C();

    sub_1DC408B48();
    swift_bridgeObjectRelease();
    sub_1DC3FFDC4();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    v20 = type metadata accessor for StocksNewsArticlesRouter.ArticleRoute();
LABEL_8:
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(a2, 0, 1, v20);
  }
  if (v17 == *MEMORY[0x1E0D56CA8])
  {
    (*(void (**)(void **, uint64_t))(v13 + 96))(v16, v12);
    sub_1DC1E3F44();
    v22 = (__int128 *)((char *)v16 + *(int *)(v21 + 64));
    (*(void (**)(_BYTE *, char *, uint64_t))(v9 + 32))(v11, (char *)v16 + *(int *)(v21 + 48), v8);
    sub_1DC097DD0(v22, (uint64_t)&v36);
    swift_unknownObjectRetain();
    sub_1DC402410();
    sub_1DC0824D4((uint64_t)&v36, (uint64_t)v35);
    sub_1DC4021AC();
    swift_allocObject();
    swift_unknownObjectRetain();
    sub_1DC4021A0();
    sub_1DC401BAC();
    swift_release();
    sub_1DC1446B4();
    v24 = *(int *)(v23 + 48);
    v25 = a2 + *(int *)(v23 + 64);
    v26 = MEMORY[0x1E0D570B0];
    sub_1DC0990BC((uint64_t)v7, a2, (uint64_t (*)(_QWORD))MEMORY[0x1E0D570B0]);
    *(_OWORD *)v25 = 0u;
    *(_OWORD *)(v25 + 16) = 0u;
    *(_QWORD *)(v25 + 32) = 0;
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    *(_QWORD *)(a2 + v24) = 0;
    sub_1DC0926D8((uint64_t)v7, (uint64_t (*)(_QWORD))v26);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v36);
    (*(void (**)(_BYTE *, uint64_t))(v9 + 8))(v11, v8);
LABEL_7:
    type metadata accessor for StocksActivity.Article(0);
    swift_storeEnumTagMultiPayload();
    v31 = type metadata accessor for StocksActivity(0);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(a2, 0, 1, v31);
    v20 = type metadata accessor for StocksNewsArticlesRouter.ArticleRoute();
    goto LABEL_8;
  }
  if (v17 == *MEMORY[0x1E0D56C90])
  {
    (*(void (**)(void **, uint64_t))(v13 + 96))(v16, v12);
    v27 = MEMORY[0x1E0D570B0];
    sub_1DC092ED0((uint64_t)v16, (uint64_t)v7, (uint64_t (*)(_QWORD))MEMORY[0x1E0D570B0]);
    sub_1DC1446B4();
    v29 = *(int *)(v28 + 48);
    v30 = a2 + *(int *)(v28 + 64);
    sub_1DC0990BC((uint64_t)v7, a2, (uint64_t (*)(_QWORD))v27);
    *(_OWORD *)v30 = 0u;
    *(_OWORD *)(v30 + 16) = 0u;
    *(_QWORD *)(v30 + 32) = 0;
    *(_QWORD *)(a2 + v29) = 0;
    sub_1DC0926D8((uint64_t)v7, (uint64_t (*)(_QWORD))v27);
    goto LABEL_7;
  }
  if (v17 == *MEMORY[0x1E0D56C98])
  {
    (*(void (**)(void **, uint64_t))(v13 + 96))(v16, v12);
    swift_bridgeObjectRelease();
    v33 = type metadata accessor for StocksNewsArticlesRouter.ArticleRoute();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(a2, 1, 1, v33);
  }
  else
  {
    v34 = type metadata accessor for StocksNewsArticlesRouter.ArticleRoute();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(a2, 1, 1, v34);
    return (*(uint64_t (**)(void **, uint64_t))(v13 + 8))(v16, v12);
  }
}

uint64_t sub_1DC1E3AA0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  unint64_t *v23;
  void (*v24)(uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE v34[40];

  v31 = a2;
  v4 = type metadata accessor for StocksActivity(0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v32 = (uint64_t)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC092F50(0, (unint64_t *)&qword_1EDB2C5F0, v7);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v33 = (uint64_t)&v30 - v12;
  sub_1DC092F50(0, (unint64_t *)&unk_1F034E4A0, (void (*)(uint64_t))type metadata accessor for StocksNewsArticlesRouter.ArticleRoute);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v30 - v14;
  v16 = type metadata accessor for StocksNewsArticlesRouter.ArticleRoute();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v30 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v30 - v21;
  sub_1DC1E35A8(a1, (uint64_t)v15);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    v23 = (unint64_t *)&unk_1F034E4A0;
    v24 = (void (*)(uint64_t))type metadata accessor for StocksNewsArticlesRouter.ArticleRoute;
    v25 = (uint64_t)v15;
  }
  else
  {
    sub_1DC092ED0((uint64_t)v15, (uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for StocksNewsArticlesRouter.ArticleRoute);
    sub_1DC0990BC((uint64_t)v22, (uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for StocksNewsArticlesRouter.ArticleRoute);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_1DC0926D8((uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for StocksNewsArticlesRouter.ArticleRoute);
      sub_1DC0926D8((uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for StocksNewsArticlesRouter.ArticleRoute);
      return 0;
    }
    v28 = v33;
    sub_1DC1E4070((uint64_t)v19, v33, (unint64_t *)&qword_1EDB2C5F0, (void (*)(uint64_t))type metadata accessor for StocksActivity);
    sub_1DC092F9C(v28, (uint64_t)v10, (unint64_t *)&qword_1EDB2C5F0, (void (*)(uint64_t))type metadata accessor for StocksActivity);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) != 1)
    {
      v29 = v32;
      sub_1DC092ED0((uint64_t)v10, v32, type metadata accessor for StocksActivity);
      sub_1DC0824D4(v2 + 64, (uint64_t)v34);
      swift_retain();
      v26 = sub_1DC1E2C64(v29, v31, (uint64_t)v34);
      sub_1DC1E40BC((uint64_t)v34, &qword_1EDB2ACD0, (unint64_t *)&qword_1EDB2ACC0);
      swift_release();
      sub_1DC0926D8(v29, type metadata accessor for StocksActivity);
      sub_1DC092F14(v28, (unint64_t *)&qword_1EDB2C5F0, (void (*)(uint64_t))type metadata accessor for StocksActivity);
      sub_1DC0926D8((uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for StocksNewsArticlesRouter.ArticleRoute);
      return v26;
    }
    sub_1DC092F14(v28, (unint64_t *)&qword_1EDB2C5F0, (void (*)(uint64_t))type metadata accessor for StocksActivity);
    sub_1DC0926D8((uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for StocksNewsArticlesRouter.ArticleRoute);
    v25 = (uint64_t)v10;
    v23 = (unint64_t *)&qword_1EDB2C5F0;
    v24 = (void (*)(uint64_t))type metadata accessor for StocksActivity;
  }
  sub_1DC092F14(v25, v23, v24);
  return 0;
}

uint64_t sub_1DC1E3E28()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  __swift_destroy_boxed_opaque_existential_1(v0 + 104);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for StocksNewsArticlesRouter()
{
  return objc_opt_self();
}

uint64_t sub_1DC1E3E88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DC1E2DA4(a1, a2, a3);
}

uint64_t sub_1DC1E3EB0(uint64_t a1, uint64_t a2)
{
  return sub_1DC1E3AA0(a1, a2);
}

uint64_t type metadata accessor for StocksNewsArticlesRouter.ArticleRoute()
{
  uint64_t result;

  result = qword_1F034E538;
  if (!qword_1F034E538)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1DC1E3F10()
{
  uint64_t v0;

  swift_release();
  if (*(_QWORD *)(v0 + 48))
    __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  return swift_deallocObject();
}

void sub_1DC1E3F44()
{
  unint64_t TupleTypeMetadata;
  uint64_t v1;

  if (!qword_1F034E4B0)
  {
    MEMORY[0x1E0C80A78](0);
    sub_1DC112C9C();
    sub_1DC40202C();
    sub_1DC096268(255, &qword_1EDB29380);
    sub_1DC096268(255, &qword_1EDB292E8);
    TupleTypeMetadata = swift_getTupleTypeMetadata();
    if (!v1)
      atomic_store(TupleTypeMetadata, (unint64_t *)&qword_1F034E4B0);
  }
}

uint64_t sub_1DC1E4070(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  uint64_t v6;

  sub_1DC092F50(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_1DC1E40BC(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  uint64_t v4;

  sub_1DC14465C(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

unint64_t *sub_1DC1E40F8(unint64_t *a1, unint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  int EnumCaseMultiPayload;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  void (*v45)(char *, char *, uint64_t);
  id v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  _QWORD *v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(char *, char *, uint64_t);
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  __int128 v76;
  unint64_t *result;
  uint64_t v78;
  char *__dst;
  uint64_t v80;
  char *v81;
  char *v82;
  unsigned int (*v83)(char *, uint64_t, uint64_t);
  char *v84;
  char *v85;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = (char *)*a2;
    *a1 = *a2;
    a1 = (unint64_t *)&v9[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_1DC3FFDD0();
      v7 = *(_QWORD *)(v6 - 8);
      if ((*(unsigned int (**)(unint64_t *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
      {
        sub_1DC092F50(0, (unint64_t *)&unk_1EDB28A70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
      }
      else
      {
        (*(void (**)(unint64_t *, unint64_t *, uint64_t))(v7 + 16))(a1, a2, v6);
        (*(void (**)(unint64_t *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      }
    }
    else
    {
      v10 = type metadata accessor for StocksActivity(0);
      v11 = *(_QWORD *)(v10 - 8);
      if ((*(unsigned int (**)(unint64_t *, uint64_t, uint64_t))(v11 + 48))(a2, 1, v10))
      {
        sub_1DC092F50(0, (unint64_t *)&qword_1EDB2C5F0, (void (*)(uint64_t))type metadata accessor for StocksActivity);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            v13 = a2[1];
            *a1 = *a2;
            a1[1] = v13;
            *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
            v14 = a2[4];
            v15 = a2[5];
            a1[4] = v14;
            a1[5] = v15;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            goto LABEL_54;
          case 1u:
            v16 = type metadata accessor for ForYouSectionDescriptor();
            EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
            if (EnumCaseMultiPayload == 2)
            {
              v59 = sub_1DC407300();
              (*(void (**)(unint64_t *, unint64_t *, uint64_t))(*(_QWORD *)(v59 - 8) + 16))(a1, a2, v59);
              swift_storeEnumTagMultiPayload();
            }
            else if (EnumCaseMultiPayload == 1)
            {
              v60 = a2[1];
              *a1 = *a2;
              a1[1] = v60;
              swift_bridgeObjectRetain();
              swift_storeEnumTagMultiPayload();
            }
            else if (EnumCaseMultiPayload)
            {
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
            }
            else
            {
              v18 = sub_1DC4010E4();
              (*(void (**)(unint64_t *, unint64_t *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(a1, a2, v18);
              swift_storeEnumTagMultiPayload();
            }
            sub_1DC175964(0, (unint64_t *)&qword_1EDB34880, (void (*)(uint64_t))type metadata accessor for ForYouSectionDescriptor, (void (*)(uint64_t))MEMORY[0x1E0DBA2A8]);
            v62 = *(int *)(v61 + 48);
            v63 = (char *)a1 + v62;
            v64 = (char *)a2 + v62;
            v65 = sub_1DC4059F8();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v65 - 8) + 16))(v63, v64, v65);
            goto LABEL_54;
          case 2u:
            type metadata accessor for StocksActivity.StockFeed(0);
            v19 = swift_getEnumCaseMultiPayload();
            v20 = sub_1DC4010E4();
            (*(void (**)(unint64_t *, unint64_t *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(a1, a2, v20);
            if (v19 == 1)
            {
              v21 = type metadata accessor for StocksActivity.StockFeed.Series(0);
              *(unint64_t *)((char *)a1 + *(int *)(v21 + 20)) = *(unint64_t *)((char *)a2
                                                                                           + *(int *)(v21 + 20));
              sub_1DC1E4ABC(0, (unint64_t *)&qword_1EDB275E0, (void (*)(uint64_t))type metadata accessor for StocksActivity.StockFeed.Series);
              *(unint64_t *)((char *)a1 + *(int *)(v22 + 48)) = *(unint64_t *)((char *)a2
                                                                                           + *(int *)(v22 + 48));
              swift_bridgeObjectRetain();
            }
            else
            {
              sub_1DC1E4ABC(0, (unint64_t *)&qword_1EDB28DF0, (void (*)(uint64_t))MEMORY[0x1E0DAF0D0]);
              *(unint64_t *)((char *)a1 + *(int *)(v51 + 48)) = *(unint64_t *)((char *)a2
                                                                                           + *(int *)(v51 + 48));
            }
            goto LABEL_53;
          case 3u:
            v23 = a2[1];
            *a1 = *a2;
            a1[1] = v23;
            swift_bridgeObjectRetain();
            goto LABEL_54;
          case 4u:
            type metadata accessor for StocksActivity.Article(0);
            if (swift_getEnumCaseMultiPayload() == 1)
            {
              *a1 = *a2;
              swift_unknownObjectRetain();
            }
            else
            {
              sub_1DC401BB8();
              v52 = swift_getEnumCaseMultiPayload();
              *a1 = *a2;
              if (v52 == 1)
              {
                swift_retain();
              }
              else
              {
                sub_1DC175964(0, (unint64_t *)&qword_1EDB42670, (void (*)(uint64_t))MEMORY[0x1E0D57E30], (void (*)(uint64_t))MEMORY[0x1E0D57888]);
                v67 = *(int *)(v66 + 48);
                v82 = (char *)a2 + v67;
                v85 = (char *)a1 + v67;
                v68 = sub_1DC40202C();
                v69 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v68 - 8) + 16);
                swift_retain();
                v69(v85, v82, v68);
              }
              swift_storeEnumTagMultiPayload();
              sub_1DC1446B4();
              *(unint64_t *)((char *)a1 + *(int *)(v70 + 48)) = *(unint64_t *)((char *)a2
                                                                                           + *(int *)(v70 + 48));
              v71 = *(int *)(v70 + 64);
              v72 = (char *)a1 + v71;
              v73 = (char *)a2 + v71;
              v74 = *(unint64_t *)((char *)a2 + v71 + 24);
              if (v74)
              {
                v75 = *((_QWORD *)v73 + 4);
                *((_QWORD *)v72 + 3) = v74;
                *((_QWORD *)v72 + 4) = v75;
                (**(void (***)(void))(v74 - 8))();
              }
              else
              {
                v76 = *((_OWORD *)v73 + 1);
                *(_OWORD *)v72 = *(_OWORD *)v73;
                *((_OWORD *)v72 + 1) = v76;
                *((_QWORD *)v72 + 4) = *((_QWORD *)v73 + 4);
              }
            }
LABEL_53:
            swift_storeEnumTagMultiPayload();
            goto LABEL_54;
          case 5u:
            v24 = sub_1DC3FFDD0();
            (*(void (**)(unint64_t *, unint64_t *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(a1, a2, v24);
            goto LABEL_54;
          case 6u:
            __asm { BR              X10 }
            return result;
          case 7u:
            v25 = a2[1];
            *a1 = *a2;
            a1[1] = v25;
            *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
            v26 = a2[5];
            a1[4] = a2[4];
            a1[5] = v26;
            v27 = a2[7];
            a1[6] = a2[6];
            a1[7] = v27;
            a1[8] = a2[8];
            v28 = type metadata accessor for CampaignRouteModel();
            v29 = *(int *)(v28 + 40);
            __dst = (char *)a1 + v29;
            v80 = v28;
            v81 = (char *)a2 + v29;
            v30 = sub_1DC403DA8();
            v78 = *(_QWORD *)(v30 - 8);
            v83 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v78 + 48);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v83(v81, 1, v30))
            {
              sub_1DC092F50(0, (unint64_t *)&qword_1EDB299F0, (void (*)(uint64_t))MEMORY[0x1E0D61E10]);
              memcpy(__dst, v81, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v78 + 16))(__dst, v81, v30);
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v78 + 56))(__dst, 0, 1, v30);
            }
            v54 = (char *)a2 + *(int *)(v80 + 44);
            *(_QWORD *)(swift_unknownObjectWeakCopyInit() + 8) = *((_QWORD *)v54 + 1);
            goto LABEL_54;
          case 8u:
            v32 = *a2;
            sub_1DC17766C(v32);
            *a1 = v32;
            goto LABEL_54;
          case 9u:
            if (*a2)
            {
              v33 = a2[1];
              *a1 = *a2;
              a1[1] = v33;
              swift_retain();
            }
            else
            {
              *(_OWORD *)a1 = *(_OWORD *)a2;
            }
            goto LABEL_54;
          case 0xAu:
            v34 = sub_1DC4010E4();
            v35 = *(_QWORD *)(v34 - 8);
            if ((*(unsigned int (**)(unint64_t *, uint64_t, uint64_t))(v35 + 48))(a2, 1, v34))
            {
              sub_1DC092F50(0, (unint64_t *)&qword_1EDB28DE0, (void (*)(uint64_t))MEMORY[0x1E0DAF0D0]);
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
            }
            else
            {
              (*(void (**)(unint64_t *, unint64_t *, uint64_t))(v35 + 16))(a1, a2, v34);
              (*(void (**)(unint64_t *, _QWORD, uint64_t, uint64_t))(v35 + 56))(a1, 0, 1, v34);
            }
            v55 = *(int *)(type metadata accessor for WatchlistCreationRouteModel() + 20);
            v56 = (unint64_t *)((char *)a1 + v55);
            v57 = (unint64_t *)((char *)a2 + v55);
            if (*v57)
            {
              v58 = v57[1];
              *v56 = *v57;
              v56[1] = v58;
              swift_retain();
            }
            else
            {
              *(_OWORD *)v56 = *(_OWORD *)v57;
            }
            goto LABEL_54;
          case 0xBu:
            v37 = sub_1DC4010E4();
            v38 = *(_QWORD *)(v37 - 8);
            if ((*(unsigned int (**)(unint64_t *, uint64_t, uint64_t))(v38 + 48))(a2, 1, v37))
            {
              sub_1DC092F50(0, (unint64_t *)&qword_1EDB28DE0, (void (*)(uint64_t))MEMORY[0x1E0DAF0D0]);
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
            }
            else
            {
              (*(void (**)(unint64_t *, unint64_t *, uint64_t))(v38 + 16))(a1, a2, v37);
              (*(void (**)(unint64_t *, _QWORD, uint64_t, uint64_t))(v38 + 56))(a1, 0, 1, v37);
            }
            sub_1DC17CCB0();
            *(unint64_t *)((char *)a1 + *(int *)(v53 + 48)) = *(unint64_t *)((char *)a2
                                                                                         + *(int *)(v53 + 48));
            swift_retain();
            goto LABEL_54;
          case 0xCu:
            v40 = (void *)*a2;
            *a1 = *a2;
            v41 = type metadata accessor for PreBuyFlowRouteModel();
            v42 = *(int *)(v41 + 20);
            v84 = (char *)a1 + v42;
            v43 = (char *)a2 + v42;
            v44 = sub_1DC403BD4();
            v45 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 16);
            v46 = v40;
            v45(v84, v43, v44);
            v47 = *(int *)(v41 + 24);
            v48 = (char *)a1 + v47;
            v49 = (char *)a2 + v47;
            v50 = sub_1DC403CA0();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v50 - 8) + 16))(v48, v49, v50);
LABEL_54:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(a1, a2, *(_QWORD *)(v11 + 64));
            break;
        }
        (*(void (**)(unint64_t *, _QWORD, uint64_t, uint64_t))(v11 + 56))(a1, 0, 1, v10);
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void sub_1DC1E4ABC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t TupleTypeMetadata2;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v5)
      atomic_store(TupleTypeMetadata2, a2);
  }
}

void sub_1DC1E4B1C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int EnumCaseMultiPayload;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v2 = sub_1DC3FFDD0();
    v3 = *(_QWORD *)(v2 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, 1, v2))
    {
      v4 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
      v5 = a1;
      v6 = v2;
LABEL_4:
      v4(v5, v6);
    }
  }
  else
  {
    v7 = type metadata accessor for StocksActivity(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(a1, 1, v7))
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          swift_bridgeObjectRelease();
          goto LABEL_11;
        case 1u:
          type metadata accessor for ForYouSectionDescriptor();
          EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          if (EnumCaseMultiPayload == 2)
          {
            v20 = sub_1DC407300();
          }
          else
          {
            if (EnumCaseMultiPayload == 1)
            {
              swift_bridgeObjectRelease();
              goto LABEL_41;
            }
            if (EnumCaseMultiPayload)
              goto LABEL_41;
            v20 = sub_1DC4010E4();
          }
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(a1, v20);
LABEL_41:
          sub_1DC175964(0, (unint64_t *)&qword_1EDB34880, (void (*)(uint64_t))type metadata accessor for ForYouSectionDescriptor, (void (*)(uint64_t))MEMORY[0x1E0DBA2A8]);
          a1 += *(int *)(v29 + 48);
          v18 = sub_1DC4059F8();
LABEL_42:
          v6 = v18;
          v4 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8);
          v5 = a1;
          break;
        case 2u:
          type metadata accessor for StocksActivity.StockFeed(0);
          v8 = swift_getEnumCaseMultiPayload();
          v9 = sub_1DC4010E4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(a1, v9);
          if (v8 != 1)
            return;
          type metadata accessor for StocksActivity.StockFeed.Series(0);
LABEL_11:
          swift_bridgeObjectRelease();
          return;
        case 3u:
          goto LABEL_11;
        case 4u:
          type metadata accessor for StocksActivity.Article(0);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            swift_unknownObjectRelease();
          }
          else
          {
            sub_1DC401BB8();
            v23 = swift_getEnumCaseMultiPayload();
            swift_release();
            if (v23 != 1)
            {
              sub_1DC175964(0, (unint64_t *)&qword_1EDB42670, (void (*)(uint64_t))MEMORY[0x1E0D57E30], (void (*)(uint64_t))MEMORY[0x1E0D57888]);
              v25 = a1 + *(int *)(v24 + 48);
              v26 = sub_1DC40202C();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 8))(v25, v26);
            }
            sub_1DC1446B4();
            v28 = a1 + *(int *)(v27 + 64);
            if (*(_QWORD *)(v28 + 24))
LABEL_44:
              __swift_destroy_boxed_opaque_existential_1(v28);
          }
          return;
        case 5u:
          v18 = sub_1DC3FFDD0();
          goto LABEL_42;
        case 6u:
          switch(*(_BYTE *)(a1 + 40))
          {
            case 0:
            case 3:
              goto LABEL_33;
            case 1:
              v28 = a1;
              goto LABEL_44;
            case 2:

              break;
            default:
              return;
          }
          return;
        case 7u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v10 = a1 + *(int *)(type metadata accessor for CampaignRouteModel() + 40);
          v11 = sub_1DC403DA8();
          v12 = *(_QWORD *)(v11 - 8);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
            (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
          swift_unknownObjectWeakDestroy();
          return;
        case 8u:
          sub_1DC17769C(*(_QWORD *)a1);
          return;
        case 9u:
          if (*(_QWORD *)a1)
            goto LABEL_33;
          return;
        case 0xAu:
          v21 = sub_1DC4010E4();
          v22 = *(_QWORD *)(v21 - 8);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(a1, 1, v21))
            (*(void (**)(uint64_t, uint64_t))(v22 + 8))(a1, v21);
          if (*(_QWORD *)(a1 + *(int *)(type metadata accessor for WatchlistCreationRouteModel() + 20)))
            goto LABEL_33;
          return;
        case 0xBu:
          v13 = sub_1DC4010E4();
          v14 = *(_QWORD *)(v13 - 8);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(a1, 1, v13))
            (*(void (**)(uint64_t, uint64_t))(v14 + 8))(a1, v13);
          sub_1DC17CCB0();
LABEL_33:
          swift_release();
          return;
        case 0xCu:

          v15 = type metadata accessor for PreBuyFlowRouteModel();
          v16 = a1 + *(int *)(v15 + 20);
          v17 = sub_1DC403BD4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v16, v17);
          a1 += *(int *)(v15 + 24);
          v18 = sub_1DC403CA0();
          goto LABEL_42;
        default:
          return;
      }
      goto LABEL_4;
    }
  }
}

unint64_t *sub_1DC1E4FF0(unint64_t *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  int EnumCaseMultiPayload;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  void (*v42)(char *, char *, uint64_t);
  id v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  _QWORD *v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void (*v66)(char *, char *, uint64_t);
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  __int128 v73;
  unint64_t *result;
  uint64_t v75;
  char *__dst;
  uint64_t v77;
  char *v78;
  char *v79;
  unsigned int (*v80)(char *, uint64_t, uint64_t);
  char *v81;
  char *v82;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = sub_1DC3FFDD0();
    v5 = *(_QWORD *)(v4 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v5 + 48))(a2, 1, v4))
    {
      sub_1DC092F50(0, (unint64_t *)&unk_1EDB28A70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
    else
    {
      (*(void (**)(unint64_t *, _QWORD *, uint64_t))(v5 + 16))(a1, a2, v4);
      (*(void (**)(unint64_t *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
    }
  }
  else
  {
    v7 = type metadata accessor for StocksActivity(0);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      sub_1DC092F50(0, (unint64_t *)&qword_1EDB2C5F0, (void (*)(uint64_t))type metadata accessor for StocksActivity);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          v10 = a2[1];
          *a1 = *a2;
          a1[1] = v10;
          *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
          v11 = a2[4];
          v12 = a2[5];
          a1[4] = v11;
          a1[5] = v12;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_52;
        case 1u:
          v13 = type metadata accessor for ForYouSectionDescriptor();
          EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          if (EnumCaseMultiPayload == 2)
          {
            v56 = sub_1DC407300();
            (*(void (**)(unint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v56 - 8) + 16))(a1, a2, v56);
            swift_storeEnumTagMultiPayload();
          }
          else if (EnumCaseMultiPayload == 1)
          {
            v57 = a2[1];
            *a1 = *a2;
            a1[1] = v57;
            swift_bridgeObjectRetain();
            swift_storeEnumTagMultiPayload();
          }
          else if (EnumCaseMultiPayload)
          {
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
          }
          else
          {
            v15 = sub_1DC4010E4();
            (*(void (**)(unint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(a1, a2, v15);
            swift_storeEnumTagMultiPayload();
          }
          sub_1DC175964(0, (unint64_t *)&qword_1EDB34880, (void (*)(uint64_t))type metadata accessor for ForYouSectionDescriptor, (void (*)(uint64_t))MEMORY[0x1E0DBA2A8]);
          v59 = *(int *)(v58 + 48);
          v60 = (char *)a1 + v59;
          v61 = (char *)a2 + v59;
          v62 = sub_1DC4059F8();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v62 - 8) + 16))(v60, v61, v62);
          goto LABEL_52;
        case 2u:
          type metadata accessor for StocksActivity.StockFeed(0);
          v16 = swift_getEnumCaseMultiPayload();
          v17 = sub_1DC4010E4();
          (*(void (**)(unint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(a1, a2, v17);
          if (v16 == 1)
          {
            v18 = type metadata accessor for StocksActivity.StockFeed.Series(0);
            *(unint64_t *)((char *)a1 + *(int *)(v18 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v18 + 20));
            sub_1DC1E4ABC(0, (unint64_t *)&qword_1EDB275E0, (void (*)(uint64_t))type metadata accessor for StocksActivity.StockFeed.Series);
            *(unint64_t *)((char *)a1 + *(int *)(v19 + 48)) = *(_QWORD *)((char *)a2 + *(int *)(v19 + 48));
            swift_bridgeObjectRetain();
          }
          else
          {
            sub_1DC1E4ABC(0, (unint64_t *)&qword_1EDB28DF0, (void (*)(uint64_t))MEMORY[0x1E0DAF0D0]);
            *(unint64_t *)((char *)a1 + *(int *)(v48 + 48)) = *(_QWORD *)((char *)a2 + *(int *)(v48 + 48));
          }
          goto LABEL_51;
        case 3u:
          v20 = a2[1];
          *a1 = *a2;
          a1[1] = v20;
          swift_bridgeObjectRetain();
          goto LABEL_52;
        case 4u:
          type metadata accessor for StocksActivity.Article(0);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            *a1 = *a2;
            swift_unknownObjectRetain();
          }
          else
          {
            sub_1DC401BB8();
            v49 = swift_getEnumCaseMultiPayload();
            *a1 = *a2;
            if (v49 == 1)
            {
              swift_retain();
            }
            else
            {
              sub_1DC175964(0, (unint64_t *)&qword_1EDB42670, (void (*)(uint64_t))MEMORY[0x1E0D57E30], (void (*)(uint64_t))MEMORY[0x1E0D57888]);
              v64 = *(int *)(v63 + 48);
              v79 = (char *)a2 + v64;
              v82 = (char *)a1 + v64;
              v65 = sub_1DC40202C();
              v66 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v65 - 8) + 16);
              swift_retain();
              v66(v82, v79, v65);
            }
            swift_storeEnumTagMultiPayload();
            sub_1DC1446B4();
            *(unint64_t *)((char *)a1 + *(int *)(v67 + 48)) = *(_QWORD *)((char *)a2 + *(int *)(v67 + 48));
            v68 = *(int *)(v67 + 64);
            v69 = (char *)a1 + v68;
            v70 = (char *)a2 + v68;
            v71 = *(_QWORD *)((char *)a2 + v68 + 24);
            if (v71)
            {
              v72 = *((_QWORD *)v70 + 4);
              *((_QWORD *)v69 + 3) = v71;
              *((_QWORD *)v69 + 4) = v72;
              (**(void (***)(void))(v71 - 8))();
            }
            else
            {
              v73 = *((_OWORD *)v70 + 1);
              *(_OWORD *)v69 = *(_OWORD *)v70;
              *((_OWORD *)v69 + 1) = v73;
              *((_QWORD *)v69 + 4) = *((_QWORD *)v70 + 4);
            }
          }
LABEL_51:
          swift_storeEnumTagMultiPayload();
          goto LABEL_52;
        case 5u:
          v21 = sub_1DC3FFDD0();
          (*(void (**)(unint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(a1, a2, v21);
          goto LABEL_52;
        case 6u:
          __asm { BR              X10 }
          return result;
        case 7u:
          v22 = a2[1];
          *a1 = *a2;
          a1[1] = v22;
          *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
          v23 = a2[5];
          a1[4] = a2[4];
          a1[5] = v23;
          v24 = a2[7];
          a1[6] = a2[6];
          a1[7] = v24;
          a1[8] = a2[8];
          v25 = type metadata accessor for CampaignRouteModel();
          v26 = *(int *)(v25 + 40);
          __dst = (char *)a1 + v26;
          v77 = v25;
          v78 = (char *)a2 + v26;
          v27 = sub_1DC403DA8();
          v75 = *(_QWORD *)(v27 - 8);
          v80 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v75 + 48);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v80(v78, 1, v27))
          {
            sub_1DC092F50(0, (unint64_t *)&qword_1EDB299F0, (void (*)(uint64_t))MEMORY[0x1E0D61E10]);
            memcpy(__dst, v78, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v75 + 16))(__dst, v78, v27);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v75 + 56))(__dst, 0, 1, v27);
          }
          v51 = (char *)a2 + *(int *)(v77 + 44);
          *(_QWORD *)(swift_unknownObjectWeakCopyInit() + 8) = *((_QWORD *)v51 + 1);
          goto LABEL_52;
        case 8u:
          v29 = *a2;
          sub_1DC17766C(v29);
          *a1 = v29;
          goto LABEL_52;
        case 9u:
          if (*a2)
          {
            v30 = a2[1];
            *a1 = *a2;
            a1[1] = v30;
            swift_retain();
          }
          else
          {
            *(_OWORD *)a1 = *(_OWORD *)a2;
          }
          goto LABEL_52;
        case 0xAu:
          v31 = sub_1DC4010E4();
          v32 = *(_QWORD *)(v31 - 8);
          if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v32 + 48))(a2, 1, v31))
          {
            sub_1DC092F50(0, (unint64_t *)&qword_1EDB28DE0, (void (*)(uint64_t))MEMORY[0x1E0DAF0D0]);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
          }
          else
          {
            (*(void (**)(unint64_t *, _QWORD *, uint64_t))(v32 + 16))(a1, a2, v31);
            (*(void (**)(unint64_t *, _QWORD, uint64_t, uint64_t))(v32 + 56))(a1, 0, 1, v31);
          }
          v52 = *(int *)(type metadata accessor for WatchlistCreationRouteModel() + 20);
          v53 = (unint64_t *)((char *)a1 + v52);
          v54 = (_QWORD *)((char *)a2 + v52);
          if (*v54)
          {
            v55 = v54[1];
            *v53 = *v54;
            v53[1] = v55;
            swift_retain();
          }
          else
          {
            *(_OWORD *)v53 = *(_OWORD *)v54;
          }
          goto LABEL_52;
        case 0xBu:
          v34 = sub_1DC4010E4();
          v35 = *(_QWORD *)(v34 - 8);
          if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v35 + 48))(a2, 1, v34))
          {
            sub_1DC092F50(0, (unint64_t *)&qword_1EDB28DE0, (void (*)(uint64_t))MEMORY[0x1E0DAF0D0]);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
          }
          else
          {
            (*(void (**)(unint64_t *, _QWORD *, uint64_t))(v35 + 16))(a1, a2, v34);
            (*(void (**)(unint64_t *, _QWORD, uint64_t, uint64_t))(v35 + 56))(a1, 0, 1, v34);
          }
          sub_1DC17CCB0();
          *(unint64_t *)((char *)a1 + *(int *)(v50 + 48)) = *(_QWORD *)((char *)a2 + *(int *)(v50 + 48));
          swift_retain();
          goto LABEL_52;
        case 0xCu:
          v37 = (void *)*a2;
          *a1 = *a2;
          v38 = type metadata accessor for PreBuyFlowRouteModel();
          v39 = *(int *)(v38 + 20);
          v81 = (char *)a1 + v39;
          v40 = (char *)a2 + v39;
          v41 = sub_1DC403BD4();
          v42 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 16);
          v43 = v37;
          v42(v81, v40, v41);
          v44 = *(int *)(v38 + 24);
          v45 = (char *)a1 + v44;
          v46 = (char *)a2 + v44;
          v47 = sub_1DC403CA0();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(v45, v46, v47);
LABEL_52:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(v8 + 64));
          break;
      }
      (*(void (**)(unint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

unint64_t *sub_1DC1E5988(unint64_t *a1, unint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int EnumCaseMultiPayload;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  void (*v35)(char *, char *, uint64_t);
  id v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(char *, char *, uint64_t);
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  __int128 v64;
  __int128 v65;
  unint64_t *result;
  uint64_t v67;
  char *__dst;
  uint64_t v69;
  char *v70;
  char *v71;
  unsigned int (*v72)(char *, uint64_t, uint64_t);
  char *v73;
  char *v74;

  if (a1 != a2)
  {
    sub_1DC0926D8((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for StocksNewsArticlesRouter.ArticleRoute);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v4 = sub_1DC3FFDD0();
      v5 = *(_QWORD *)(v4 - 8);
      if ((*(unsigned int (**)(unint64_t *, uint64_t, uint64_t))(v5 + 48))(a2, 1, v4))
      {
        sub_1DC092F50(0, (unint64_t *)&unk_1EDB28A70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
      }
      else
      {
        (*(void (**)(unint64_t *, unint64_t *, uint64_t))(v5 + 16))(a1, a2, v4);
        (*(void (**)(unint64_t *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
      }
    }
    else
    {
      v7 = type metadata accessor for StocksActivity(0);
      v8 = *(_QWORD *)(v7 - 8);
      if ((*(unsigned int (**)(unint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
      {
        sub_1DC092F50(0, (unint64_t *)&qword_1EDB2C5F0, (void (*)(uint64_t))type metadata accessor for StocksActivity);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            *a1 = *a2;
            a1[1] = a2[1];
            *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
            a1[4] = a2[4];
            a1[5] = a2[5];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            goto LABEL_53;
          case 1u:
            v10 = type metadata accessor for ForYouSectionDescriptor();
            EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
            if (EnumCaseMultiPayload == 2)
            {
              v49 = sub_1DC407300();
              (*(void (**)(unint64_t *, unint64_t *, uint64_t))(*(_QWORD *)(v49 - 8) + 16))(a1, a2, v49);
              swift_storeEnumTagMultiPayload();
            }
            else if (EnumCaseMultiPayload == 1)
            {
              *a1 = *a2;
              a1[1] = a2[1];
              swift_bridgeObjectRetain();
              swift_storeEnumTagMultiPayload();
            }
            else if (EnumCaseMultiPayload)
            {
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
            }
            else
            {
              v12 = sub_1DC4010E4();
              (*(void (**)(unint64_t *, unint64_t *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(a1, a2, v12);
              swift_storeEnumTagMultiPayload();
            }
            sub_1DC175964(0, (unint64_t *)&qword_1EDB34880, (void (*)(uint64_t))type metadata accessor for ForYouSectionDescriptor, (void (*)(uint64_t))MEMORY[0x1E0DBA2A8]);
            v51 = *(int *)(v50 + 48);
            v52 = (char *)a1 + v51;
            v53 = (char *)a2 + v51;
            v54 = sub_1DC4059F8();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v54 - 8) + 16))(v52, v53, v54);
            goto LABEL_53;
          case 2u:
            type metadata accessor for StocksActivity.StockFeed(0);
            v13 = swift_getEnumCaseMultiPayload();
            v14 = sub_1DC4010E4();
            (*(void (**)(unint64_t *, unint64_t *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(a1, a2, v14);
            if (v13 == 1)
            {
              v15 = type metadata accessor for StocksActivity.StockFeed.Series(0);
              *(unint64_t *)((char *)a1 + *(int *)(v15 + 20)) = *(unint64_t *)((char *)a2
                                                                                           + *(int *)(v15 + 20));
              sub_1DC1E4ABC(0, (unint64_t *)&qword_1EDB275E0, (void (*)(uint64_t))type metadata accessor for StocksActivity.StockFeed.Series);
              *(unint64_t *)((char *)a1 + *(int *)(v16 + 48)) = *(unint64_t *)((char *)a2
                                                                                           + *(int *)(v16 + 48));
              swift_bridgeObjectRetain();
            }
            else
            {
              sub_1DC1E4ABC(0, (unint64_t *)&qword_1EDB28DF0, (void (*)(uint64_t))MEMORY[0x1E0DAF0D0]);
              *(unint64_t *)((char *)a1 + *(int *)(v41 + 48)) = *(unint64_t *)((char *)a2
                                                                                           + *(int *)(v41 + 48));
            }
            goto LABEL_52;
          case 3u:
            *a1 = *a2;
            a1[1] = a2[1];
            swift_bridgeObjectRetain();
            goto LABEL_53;
          case 4u:
            type metadata accessor for StocksActivity.Article(0);
            if (swift_getEnumCaseMultiPayload() == 1)
            {
              *a1 = *a2;
              swift_unknownObjectRetain();
            }
            else
            {
              sub_1DC401BB8();
              v42 = swift_getEnumCaseMultiPayload();
              *a1 = *a2;
              if (v42 == 1)
              {
                swift_retain();
              }
              else
              {
                sub_1DC175964(0, (unint64_t *)&qword_1EDB42670, (void (*)(uint64_t))MEMORY[0x1E0D57E30], (void (*)(uint64_t))MEMORY[0x1E0D57888]);
                v56 = *(int *)(v55 + 48);
                v71 = (char *)a2 + v56;
                v74 = (char *)a1 + v56;
                v57 = sub_1DC40202C();
                v58 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v57 - 8) + 16);
                swift_retain();
                v58(v74, v71, v57);
              }
              swift_storeEnumTagMultiPayload();
              sub_1DC1446B4();
              *(unint64_t *)((char *)a1 + *(int *)(v59 + 48)) = *(unint64_t *)((char *)a2
                                                                                           + *(int *)(v59 + 48));
              v60 = *(int *)(v59 + 64);
              v61 = (char *)a1 + v60;
              v62 = (char *)a2 + v60;
              v63 = *(unint64_t *)((char *)a2 + v60 + 24);
              if (v63)
              {
                *((_QWORD *)v61 + 3) = v63;
                *((_QWORD *)v61 + 4) = *((_QWORD *)v62 + 4);
                (**(void (***)(void))(v63 - 8))();
              }
              else
              {
                v64 = *(_OWORD *)v62;
                v65 = *((_OWORD *)v62 + 1);
                *((_QWORD *)v61 + 4) = *((_QWORD *)v62 + 4);
                *(_OWORD *)v61 = v64;
                *((_OWORD *)v61 + 1) = v65;
              }
            }
LABEL_52:
            swift_storeEnumTagMultiPayload();
            goto LABEL_53;
          case 5u:
            v17 = sub_1DC3FFDD0();
            (*(void (**)(unint64_t *, unint64_t *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(a1, a2, v17);
            goto LABEL_53;
          case 6u:
            __asm { BR              X10 }
            return result;
          case 7u:
            *a1 = *a2;
            a1[1] = a2[1];
            a1[2] = a2[2];
            a1[3] = a2[3];
            a1[4] = a2[4];
            a1[5] = a2[5];
            a1[6] = a2[6];
            a1[7] = a2[7];
            a1[8] = a2[8];
            v18 = type metadata accessor for CampaignRouteModel();
            v19 = *(int *)(v18 + 40);
            __dst = (char *)a1 + v19;
            v69 = v18;
            v70 = (char *)a2 + v19;
            v20 = sub_1DC403DA8();
            v67 = *(_QWORD *)(v20 - 8);
            v72 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v67 + 48);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v72(v70, 1, v20))
            {
              sub_1DC092F50(0, (unint64_t *)&qword_1EDB299F0, (void (*)(uint64_t))MEMORY[0x1E0D61E10]);
              memcpy(__dst, v70, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v67 + 16))(__dst, v70, v20);
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v67 + 56))(__dst, 0, 1, v20);
            }
            v44 = (char *)a2 + *(int *)(v69 + 44);
            *(_QWORD *)(swift_unknownObjectWeakCopyInit() + 8) = *((_QWORD *)v44 + 1);
            goto LABEL_53;
          case 8u:
            v22 = *a2;
            sub_1DC17766C(v22);
            *a1 = v22;
            goto LABEL_53;
          case 9u:
            if (*a2)
            {
              v23 = a2[1];
              *a1 = *a2;
              a1[1] = v23;
              swift_retain();
            }
            else
            {
              *(_OWORD *)a1 = *(_OWORD *)a2;
            }
            goto LABEL_53;
          case 0xAu:
            v24 = sub_1DC4010E4();
            v25 = *(_QWORD *)(v24 - 8);
            if ((*(unsigned int (**)(unint64_t *, uint64_t, uint64_t))(v25 + 48))(a2, 1, v24))
            {
              sub_1DC092F50(0, (unint64_t *)&qword_1EDB28DE0, (void (*)(uint64_t))MEMORY[0x1E0DAF0D0]);
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
            }
            else
            {
              (*(void (**)(unint64_t *, unint64_t *, uint64_t))(v25 + 16))(a1, a2, v24);
              (*(void (**)(unint64_t *, _QWORD, uint64_t, uint64_t))(v25 + 56))(a1, 0, 1, v24);
            }
            v45 = *(int *)(type metadata accessor for WatchlistCreationRouteModel() + 20);
            v46 = (unint64_t *)((char *)a1 + v45);
            v47 = (unint64_t *)((char *)a2 + v45);
            if (*v47)
            {
              v48 = v47[1];
              *v46 = *v47;
              v46[1] = v48;
              swift_retain();
            }
            else
            {
              *(_OWORD *)v46 = *(_OWORD *)v47;
            }
            goto LABEL_53;
          case 0xBu:
            v27 = sub_1DC4010E4();
            v28 = *(_QWORD *)(v27 - 8);
            if ((*(unsigned int (**)(unint64_t *, uint64_t, uint64_t))(v28 + 48))(a2, 1, v27))
            {
              sub_1DC092F50(0, (unint64_t *)&qword_1EDB28DE0, (void (*)(uint64_t))MEMORY[0x1E0DAF0D0]);
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
            }
            else
            {
              (*(void (**)(unint64_t *, unint64_t *, uint64_t))(v28 + 16))(a1, a2, v27);
              (*(void (**)(unint64_t *, _QWORD, uint64_t, uint64_t))(v28 + 56))(a1, 0, 1, v27);
            }
            sub_1DC17CCB0();
            *(unint64_t *)((char *)a1 + *(int *)(v43 + 48)) = *(unint64_t *)((char *)a2
                                                                                         + *(int *)(v43 + 48));
            swift_retain();
            goto LABEL_53;
          case 0xCu:
            v30 = (void *)*a2;
            *a1 = *a2;
            v31 = type metadata accessor for PreBuyFlowRouteModel();
            v32 = *(int *)(v31 + 20);
            v73 = (char *)a1 + v32;
            v33 = (char *)a2 + v32;
            v34 = sub_1DC403BD4();
            v35 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 16);
            v36 = v30;
            v35(v73, v33, v34);
            v37 = *(int *)(v31 + 24);
            v38 = (char *)a1 + v37;
            v39 = (char *)a2 + v37;
            v40 = sub_1DC403CA0();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 16))(v38, v39, v40);
LABEL_53:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(a1, a2, *(_QWORD *)(v8 + 64));
            break;
        }
        (*(void (**)(unint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_QWORD *sub_1DC1E6380(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int EnumCaseMultiPayload;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  __int128 v64;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = sub_1DC3FFDD0();
    v5 = *(_QWORD *)(v4 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v5 + 48))(a2, 1, v4))
    {
      sub_1DC092F50(0, (unint64_t *)&unk_1EDB28A70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v5 + 32))(a1, a2, v4);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
    }
  }
  else
  {
    v7 = type metadata accessor for StocksActivity(0);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      sub_1DC092F50(0, (unint64_t *)&qword_1EDB2C5F0, (void (*)(uint64_t))type metadata accessor for StocksActivity);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          v10 = type metadata accessor for ForYouSectionDescriptor();
          EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          if (EnumCaseMultiPayload == 2)
          {
            v49 = sub_1DC407300();
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v49 - 8) + 32))(a1, a2, v49);
            swift_storeEnumTagMultiPayload();
          }
          else if (EnumCaseMultiPayload)
          {
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
          }
          else
          {
            v12 = sub_1DC4010E4();
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(a1, a2, v12);
            swift_storeEnumTagMultiPayload();
          }
          sub_1DC175964(0, (unint64_t *)&qword_1EDB34880, (void (*)(uint64_t))type metadata accessor for ForYouSectionDescriptor, (void (*)(uint64_t))MEMORY[0x1E0DBA2A8]);
          v51 = *(int *)(v50 + 48);
          v52 = (char *)a1 + v51;
          v53 = (char *)a2 + v51;
          v54 = sub_1DC4059F8();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v54 - 8) + 32))(v52, v53, v54);
          goto LABEL_42;
        case 2u:
          type metadata accessor for StocksActivity.StockFeed(0);
          v13 = swift_getEnumCaseMultiPayload();
          v14 = sub_1DC4010E4();
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(a1, a2, v14);
          if (v13 == 1)
          {
            v15 = type metadata accessor for StocksActivity.StockFeed.Series(0);
            *(_QWORD *)((char *)a1 + *(int *)(v15 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v15 + 20));
            sub_1DC1E4ABC(0, (unint64_t *)&qword_1EDB275E0, (void (*)(uint64_t))type metadata accessor for StocksActivity.StockFeed.Series);
          }
          else
          {
            sub_1DC1E4ABC(0, (unint64_t *)&qword_1EDB28DF0, (void (*)(uint64_t))MEMORY[0x1E0DAF0D0]);
          }
          *(_QWORD *)((char *)a1 + *(int *)(v16 + 48)) = *(_QWORD *)((char *)a2 + *(int *)(v16 + 48));
          swift_storeEnumTagMultiPayload();
          goto LABEL_42;
        case 4u:
          v17 = type metadata accessor for StocksActivity.Article(0);
          if (swift_getEnumCaseMultiPayload())
          {
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
          }
          else
          {
            v41 = sub_1DC401BB8();
            if (swift_getEnumCaseMultiPayload())
            {
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
            }
            else
            {
              *a1 = *a2;
              sub_1DC175964(0, (unint64_t *)&qword_1EDB42670, (void (*)(uint64_t))MEMORY[0x1E0D57E30], (void (*)(uint64_t))MEMORY[0x1E0D57888]);
              v56 = *(int *)(v55 + 48);
              v57 = (char *)a1 + v56;
              v58 = (char *)a2 + v56;
              v59 = sub_1DC40202C();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 32))(v57, v58, v59);
              swift_storeEnumTagMultiPayload();
            }
            sub_1DC1446B4();
            *(_QWORD *)((char *)a1 + *(int *)(v60 + 48)) = *(_QWORD *)((char *)a2 + *(int *)(v60 + 48));
            v61 = *(int *)(v60 + 64);
            v62 = (char *)a1 + v61;
            v63 = (char *)a2 + v61;
            *((_QWORD *)v62 + 4) = *((_QWORD *)v63 + 4);
            v64 = *((_OWORD *)v63 + 1);
            *(_OWORD *)v62 = *(_OWORD *)v63;
            *((_OWORD *)v62 + 1) = v64;
            swift_storeEnumTagMultiPayload();
          }
          goto LABEL_42;
        case 5u:
          v18 = sub_1DC3FFDD0();
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(a1, a2, v18);
          goto LABEL_42;
        case 7u:
          *(_OWORD *)a1 = *(_OWORD *)a2;
          a1[2] = a2[2];
          *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 3);
          *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
          *(_OWORD *)(a1 + 7) = *(_OWORD *)(a2 + 7);
          v19 = type metadata accessor for CampaignRouteModel();
          v20 = *(int *)(v19 + 40);
          v21 = (char *)a1 + v20;
          v22 = (char *)a2 + v20;
          v23 = sub_1DC403DA8();
          v24 = *(_QWORD *)(v23 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
          {
            sub_1DC092F50(0, (unint64_t *)&qword_1EDB299F0, (void (*)(uint64_t))MEMORY[0x1E0D61E10]);
            memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v21, v22, v23);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
          }
          v42 = (char *)a2 + *(int *)(v19 + 44);
          *(_QWORD *)(swift_unknownObjectWeakTakeInit() + 8) = *((_QWORD *)v42 + 1);
          goto LABEL_42;
        case 0xAu:
          v26 = sub_1DC4010E4();
          v27 = *(_QWORD *)(v26 - 8);
          if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v27 + 48))(a2, 1, v26))
          {
            sub_1DC092F50(0, (unint64_t *)&qword_1EDB28DE0, (void (*)(uint64_t))MEMORY[0x1E0DAF0D0]);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
          }
          else
          {
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v27 + 32))(a1, a2, v26);
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v27 + 56))(a1, 0, 1, v26);
          }
          v43 = *(int *)(type metadata accessor for WatchlistCreationRouteModel() + 20);
          v44 = (_QWORD *)((char *)a1 + v43);
          v45 = (_QWORD *)((char *)a2 + v43);
          v46 = *v45;
          if (*v45)
          {
            v47 = v45[1];
            *v44 = v46;
            v44[1] = v47;
          }
          else
          {
            *(_OWORD *)v44 = *(_OWORD *)v45;
          }
          goto LABEL_42;
        case 0xBu:
          v29 = sub_1DC4010E4();
          v30 = *(_QWORD *)(v29 - 8);
          if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v30 + 48))(a2, 1, v29))
          {
            sub_1DC092F50(0, (unint64_t *)&qword_1EDB28DE0, (void (*)(uint64_t))MEMORY[0x1E0DAF0D0]);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
          }
          else
          {
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v30 + 32))(a1, a2, v29);
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v30 + 56))(a1, 0, 1, v29);
          }
          sub_1DC17CCB0();
          *(_QWORD *)((char *)a1 + *(int *)(v48 + 48)) = *(_QWORD *)((char *)a2 + *(int *)(v48 + 48));
          goto LABEL_42;
        case 0xCu:
          *a1 = *a2;
          v32 = type metadata accessor for PreBuyFlowRouteModel();
          v33 = *(int *)(v32 + 20);
          v34 = (char *)a1 + v33;
          v35 = (char *)a2 + v33;
          v36 = sub_1DC403BD4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 32))(v34, v35, v36);
          v37 = *(int *)(v32 + 24);
          v38 = (char *)a1 + v37;
          v39 = (char *)a2 + v37;
          v40 = sub_1DC403CA0();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 32))(v38, v39, v40);
LABEL_42:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(v8 + 64));
          break;
      }
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *sub_1DC1E6B20(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int EnumCaseMultiPayload;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  __int128 v64;

  if (a1 != a2)
  {
    sub_1DC0926D8((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for StocksNewsArticlesRouter.ArticleRoute);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v4 = sub_1DC3FFDD0();
      v5 = *(_QWORD *)(v4 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v5 + 48))(a2, 1, v4))
      {
        sub_1DC092F50(0, (unint64_t *)&unk_1EDB28A70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v5 + 32))(a1, a2, v4);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
      }
    }
    else
    {
      v7 = type metadata accessor for StocksActivity(0);
      v8 = *(_QWORD *)(v7 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
      {
        sub_1DC092F50(0, (unint64_t *)&qword_1EDB2C5F0, (void (*)(uint64_t))type metadata accessor for StocksActivity);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            v10 = type metadata accessor for ForYouSectionDescriptor();
            EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
            if (EnumCaseMultiPayload == 2)
            {
              v49 = sub_1DC407300();
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v49 - 8) + 32))(a1, a2, v49);
              swift_storeEnumTagMultiPayload();
            }
            else if (EnumCaseMultiPayload)
            {
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
            }
            else
            {
              v12 = sub_1DC4010E4();
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(a1, a2, v12);
              swift_storeEnumTagMultiPayload();
            }
            sub_1DC175964(0, (unint64_t *)&qword_1EDB34880, (void (*)(uint64_t))type metadata accessor for ForYouSectionDescriptor, (void (*)(uint64_t))MEMORY[0x1E0DBA2A8]);
            v51 = *(int *)(v50 + 48);
            v52 = (char *)a1 + v51;
            v53 = (char *)a2 + v51;
            v54 = sub_1DC4059F8();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v54 - 8) + 32))(v52, v53, v54);
            goto LABEL_43;
          case 2u:
            type metadata accessor for StocksActivity.StockFeed(0);
            v13 = swift_getEnumCaseMultiPayload();
            v14 = sub_1DC4010E4();
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(a1, a2, v14);
            if (v13 == 1)
            {
              v15 = type metadata accessor for StocksActivity.StockFeed.Series(0);
              *(_QWORD *)((char *)a1 + *(int *)(v15 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v15 + 20));
              sub_1DC1E4ABC(0, (unint64_t *)&qword_1EDB275E0, (void (*)(uint64_t))type metadata accessor for StocksActivity.StockFeed.Series);
            }
            else
            {
              sub_1DC1E4ABC(0, (unint64_t *)&qword_1EDB28DF0, (void (*)(uint64_t))MEMORY[0x1E0DAF0D0]);
            }
            *(_QWORD *)((char *)a1 + *(int *)(v16 + 48)) = *(_QWORD *)((char *)a2 + *(int *)(v16 + 48));
            swift_storeEnumTagMultiPayload();
            goto LABEL_43;
          case 4u:
            v17 = type metadata accessor for StocksActivity.Article(0);
            if (swift_getEnumCaseMultiPayload())
            {
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
            }
            else
            {
              v41 = sub_1DC401BB8();
              if (swift_getEnumCaseMultiPayload())
              {
                memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
              }
              else
              {
                *a1 = *a2;
                sub_1DC175964(0, (unint64_t *)&qword_1EDB42670, (void (*)(uint64_t))MEMORY[0x1E0D57E30], (void (*)(uint64_t))MEMORY[0x1E0D57888]);
                v56 = *(int *)(v55 + 48);
                v57 = (char *)a1 + v56;
                v58 = (char *)a2 + v56;
                v59 = sub_1DC40202C();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 32))(v57, v58, v59);
                swift_storeEnumTagMultiPayload();
              }
              sub_1DC1446B4();
              *(_QWORD *)((char *)a1 + *(int *)(v60 + 48)) = *(_QWORD *)((char *)a2 + *(int *)(v60 + 48));
              v61 = *(int *)(v60 + 64);
              v62 = (char *)a1 + v61;
              v63 = (char *)a2 + v61;
              *((_QWORD *)v62 + 4) = *((_QWORD *)v63 + 4);
              v64 = *((_OWORD *)v63 + 1);
              *(_OWORD *)v62 = *(_OWORD *)v63;
              *((_OWORD *)v62 + 1) = v64;
              swift_storeEnumTagMultiPayload();
            }
            goto LABEL_43;
          case 5u:
            v18 = sub_1DC3FFDD0();
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(a1, a2, v18);
            goto LABEL_43;
          case 7u:
            *(_OWORD *)a1 = *(_OWORD *)a2;
            a1[2] = a2[2];
            *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 3);
            *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
            *(_OWORD *)(a1 + 7) = *(_OWORD *)(a2 + 7);
            v19 = type metadata accessor for CampaignRouteModel();
            v20 = *(int *)(v19 + 40);
            v21 = (char *)a1 + v20;
            v22 = (char *)a2 + v20;
            v23 = sub_1DC403DA8();
            v24 = *(_QWORD *)(v23 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
            {
              sub_1DC092F50(0, (unint64_t *)&qword_1EDB299F0, (void (*)(uint64_t))MEMORY[0x1E0D61E10]);
              memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v21, v22, v23);
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
            }
            v42 = (char *)a2 + *(int *)(v19 + 44);
            *(_QWORD *)(swift_unknownObjectWeakTakeInit() + 8) = *((_QWORD *)v42 + 1);
            goto LABEL_43;
          case 0xAu:
            v26 = sub_1DC4010E4();
            v27 = *(_QWORD *)(v26 - 8);
            if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v27 + 48))(a2, 1, v26))
            {
              sub_1DC092F50(0, (unint64_t *)&qword_1EDB28DE0, (void (*)(uint64_t))MEMORY[0x1E0DAF0D0]);
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
            }
            else
            {
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v27 + 32))(a1, a2, v26);
              (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v27 + 56))(a1, 0, 1, v26);
            }
            v43 = *(int *)(type metadata accessor for WatchlistCreationRouteModel() + 20);
            v44 = (_QWORD *)((char *)a1 + v43);
            v45 = (_QWORD *)((char *)a2 + v43);
            v46 = *v45;
            if (*v45)
            {
              v47 = v45[1];
              *v44 = v46;
              v44[1] = v47;
            }
            else
            {
              *(_OWORD *)v44 = *(_OWORD *)v45;
            }
            goto LABEL_43;
          case 0xBu:
            v29 = sub_1DC4010E4();
            v30 = *(_QWORD *)(v29 - 8);
            if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v30 + 48))(a2, 1, v29))
            {
              sub_1DC092F50(0, (unint64_t *)&qword_1EDB28DE0, (void (*)(uint64_t))MEMORY[0x1E0DAF0D0]);
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
            }
            else
            {
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v30 + 32))(a1, a2, v29);
              (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v30 + 56))(a1, 0, 1, v29);
            }
            sub_1DC17CCB0();
            *(_QWORD *)((char *)a1 + *(int *)(v48 + 48)) = *(_QWORD *)((char *)a2 + *(int *)(v48 + 48));
            goto LABEL_43;
          case 0xCu:
            *a1 = *a2;
            v32 = type metadata accessor for PreBuyFlowRouteModel();
            v33 = *(int *)(v32 + 20);
            v34 = (char *)a1 + v33;
            v35 = (char *)a2 + v33;
            v36 = sub_1DC403BD4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 32))(v34, v35, v36);
            v37 = *(int *)(v32 + 24);
            v38 = (char *)a1 + v37;
            v39 = (char *)a2 + v37;
            v40 = sub_1DC403CA0();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 32))(v38, v39, v40);
LABEL_43:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(a1, a2, *(_QWORD *)(v8 + 64));
            break;
        }
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void sub_1DC1E72D8()
{
  unint64_t v0;
  unint64_t v1;

  sub_1DC092F50(319, (unint64_t *)&qword_1EDB2C5F0, (void (*)(uint64_t))type metadata accessor for StocksActivity);
  if (v0 <= 0x3F)
  {
    sub_1DC092F50(319, (unint64_t *)&unk_1EDB28A70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    if (v1 <= 0x3F)
      swift_initEnumMetadataMultiPayload();
  }
}

uint64_t sub_1DC1E7378(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;

  sub_1DC0D4B28(0, &qword_1EDB2D390);
  sub_1DC402E0C();
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = a1;
  *(_QWORD *)(v3 + 24) = v1;
  swift_retain();
  swift_retain();
  v4 = (void *)sub_1DC402C80();
  sub_1DC408104();
  sub_1DC402CF8();
  swift_release();
  swift_release();

  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v1;
  *(_QWORD *)(v5 + 24) = a1;
  swift_retain();
  swift_retain();
  v6 = (void *)sub_1DC402C80();
  sub_1DC0D019C(0);
  sub_1DC402CF8();
  swift_release();
  swift_release();

  swift_retain();
  v7 = (void *)sub_1DC402C80();
  v8 = sub_1DC402D88();
  swift_release();
  swift_release();

  return v8;
}

uint64_t sub_1DC1E74F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *boxed_opaque_existential_1;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  char *v64;
  char *v65;
  char *v66;
  uint64_t v67;
  char *v69;
  char *v70;
  char *v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102[5];
  char *v103;

  v79 = a3;
  v76 = a2;
  v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1DC089DA4(0, (unint64_t *)&unk_1EDB2B0B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5E5A8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v72 = (char *)&v69 - v5;
  sub_1DC089DA4(0, &qword_1EDB2B0F8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5F240], v3);
  MEMORY[0x1E0C80A78](v6);
  v91 = (char *)&v69 - v7;
  sub_1DC089DA4(0, (unint64_t *)&qword_1EDB2AE90, (uint64_t (*)(uint64_t))sub_1DC102724, v3);
  MEMORY[0x1E0C80A78](v8);
  v86 = (char *)&v69 - v9;
  v10 = sub_1DC408164();
  v93 = *(_QWORD *)(v10 - 8);
  v94 = v10;
  MEMORY[0x1E0C80A78](v10);
  v92 = (char *)&v69 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1DC407EF4();
  v99 = *(_QWORD *)(v12 - 8);
  v100 = v12;
  MEMORY[0x1E0C80A78](v12);
  v98 = (char *)&v69 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v95 = type metadata accessor for CuratedForYouFeedGroupConfigData();
  MEMORY[0x1E0C80A78](v95);
  v90 = (char *)&v69 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v87 = (char *)&v69 - v16;
  MEMORY[0x1E0C80A78](v17);
  v84 = (char *)&v69 - v18;
  MEMORY[0x1E0C80A78](v19);
  v81 = (char *)&v69 - v20;
  v80 = sub_1DC4079A8();
  v78 = *(_QWORD *)(v80 - 8);
  MEMORY[0x1E0C80A78](v80);
  v77 = (char **)((char *)&v69 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  v75 = sub_1DC407B10();
  v74 = *(_QWORD *)(v75 - 8);
  MEMORY[0x1E0C80A78](v75);
  v73 = (char *)&v69 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC089DA4(0, &qword_1EDB2AF78, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5C730], v3);
  MEMORY[0x1E0C80A78](v23);
  v71 = (char *)&v69 - v24;
  v25 = sub_1DC407C84();
  MEMORY[0x1E0C80A78](v25);
  v69 = (char *)&v69 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC089DA4(0, &qword_1EDB2B0D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5E848], v3);
  MEMORY[0x1E0C80A78](v27);
  v70 = (char *)&v69 - v28;
  v82 = sub_1DC40811C();
  v83 = *(_QWORD *)(v82 - 8);
  MEMORY[0x1E0C80A78](v82);
  v103 = (char *)&v69 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = sub_1DC407414();
  MEMORY[0x1E0C80A78](v30);
  v31 = sub_1DC408320();
  v96 = *(_QWORD *)(v31 - 8);
  v97 = v31;
  MEMORY[0x1E0C80A78](v31);
  v101 = (char *)&v69 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC089DA4(0, &qword_1EDB273E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52E40], v3);
  MEMORY[0x1E0C80A78](v33);
  v35 = (char *)&v69 - v34;
  v36 = sub_1DC407FCC();
  v88 = *(_QWORD *)(v36 - 8);
  v89 = v36;
  MEMORY[0x1E0C80A78](v36);
  v38 = (char *)&v69 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = sub_1DC40709C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v35, 1, 1, v39);
  v40 = MEMORY[0x1E0DEE9D8];
  sub_1DC1E8D18(MEMORY[0x1E0DEE9D8]);
  sub_1DC1E8D18(v40);
  sub_1DC1E8E54(v40, sub_1DC1E91F0);
  sub_1DC1E8E54(v40, sub_1DC1E91B8);
  sub_1DC1E8E54(v40, sub_1DC1E9180);
  sub_1DC1E8F74(v40);
  v85 = v38;
  sub_1DC407FC0();
  sub_1DC4078B8();
  sub_1DC40832C();
  sub_1DC4078E8();
  v41 = v79;
  v42 = v79 + OBJC_IVAR____TtC8StocksUI29CuratedForYouFeedGroupEmitter_knobs;
  v102[3] = type metadata accessor for CuratedForYouFeedGroupKnobs();
  v102[4] = sub_1DC080808((unint64_t *)&unk_1EDB37470, (uint64_t (*)(uint64_t))type metadata accessor for CuratedForYouFeedGroupKnobs, (uint64_t)&unk_1DC4177DC);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v102);
  sub_1DC0990BC(v42, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(_QWORD))type metadata accessor for CuratedForYouFeedGroupKnobs);
  v44 = v70;
  sub_1DC408170();
  v45 = sub_1DC40817C();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56))(v44, 0, 1, v45);
  sub_1DC089DA4(0, &qword_1EDB28518, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5F470], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v46 = sub_1DC408344();
  v47 = *(_QWORD *)(v46 - 8);
  v48 = (*(unsigned __int8 *)(v47 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80);
  v49 = swift_allocObject();
  *(_OWORD *)(v49 + 16) = xmmword_1DC40DC10;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v47 + 104))(v49 + v48, *MEMORY[0x1E0D5F460], v46);
  sub_1DC368AE0(v49);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v50 = sub_1DC407B94();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 56))(v71, 1, 1, v50);
  (*(void (**)(char *, _QWORD, uint64_t))(v74 + 104))(v73, *MEMORY[0x1E0D5C318], v75);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v78 + 104))(v77, *MEMORY[0x1E0D5BD78], v80);
  sub_1DC408110();
  v51 = *(_QWORD *)(v41 + OBJC_IVAR____TtC8StocksUI29CuratedForYouFeedGroupEmitter_formatService + 24);
  v78 = *(_QWORD *)(v41 + OBJC_IVAR____TtC8StocksUI29CuratedForYouFeedGroupEmitter_formatService + 32);
  v80 = v51;
  v77 = __swift_project_boxed_opaque_existential_1((_QWORD *)(v41 + OBJC_IVAR____TtC8StocksUI29CuratedForYouFeedGroupEmitter_formatService), v51);
  sub_1DC0C9CBC();
  v52 = (uint64_t)v81;
  sub_1DC407444();
  (*(void (**)(char *, uint64_t, uint64_t))(v99 + 16))(v98, v52 + *(int *)(v95 + 20), v100);
  sub_1DC0926D8(v52, (uint64_t (*)(_QWORD))type metadata accessor for CuratedForYouFeedGroupConfigData);
  sub_1DC102724(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 56))(v86, 1, 1, v53);
  swift_retain();
  v54 = (uint64_t)v84;
  sub_1DC407444();
  swift_bridgeObjectRetain();
  sub_1DC0926D8(v54, (uint64_t (*)(_QWORD))type metadata accessor for CuratedForYouFeedGroupConfigData);
  v56 = v96;
  v55 = v97;
  v57 = v91;
  (*(void (**)(char *, char *, uint64_t))(v96 + 16))(v91, v101, v97);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v56 + 56))(v57, 0, 1, v55);
  LOBYTE(v102[0]) = 2;
  sub_1DC08CBF0(0, &qword_1EDB2B110, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedServiceConfig, sub_1DC106C20, MEMORY[0x1E0D5F438]);
  swift_allocObject();
  v58 = v82;
  sub_1DC408338();
  v59 = (uint64_t)v87;
  sub_1DC407444();
  sub_1DC37C930();
  sub_1DC0926D8(v59, (uint64_t (*)(_QWORD))type metadata accessor for CuratedForYouFeedGroupConfigData);
  v60 = (uint64_t)v90;
  sub_1DC407444();
  v61 = v83;
  sub_1DC0926D8(v60, (uint64_t (*)(_QWORD))type metadata accessor for CuratedForYouFeedGroupConfigData);
  v62 = v72;
  (*(void (**)(char *, char *, uint64_t))(v61 + 16))(v72, v103, v58);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v61 + 56))(v62, 0, 1, v58);
  v63 = qword_1EDB2D2E8;
  (id)*MEMORY[0x1E0D58690];
  if (v63 != -1)
    swift_once();
  (id)qword_1EDB2D2E0;
  v64 = v92;
  sub_1DC408158();
  v65 = v98;
  v66 = v85;
  v67 = sub_1DC408008();
  (*(void (**)(char *, uint64_t))(v93 + 8))(v64, v94);
  (*(void (**)(char *, uint64_t))(v99 + 8))(v65, v100);
  (*(void (**)(char *, uint64_t))(v61 + 8))(v103, v58);
  (*(void (**)(char *, uint64_t))(v96 + 8))(v101, v97);
  (*(void (**)(char *, uint64_t))(v88 + 8))(v66, v89);
  return v67;
}

uint64_t sub_1DC1E8050(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v33 = a3;
  sub_1DC0D019C(0);
  v37 = v3;
  MEMORY[0x1E0C80A78](v3);
  v36 = (uint64_t)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for CuratedForYouFeedGroupConfigData();
  MEMORY[0x1E0C80A78](v5);
  v32 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = type metadata accessor for CuratedForYouFeedGroup();
  MEMORY[0x1E0C80A78](v35);
  v34 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC089DA4(0, &qword_1EDB275B8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5AE10], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v29 - v9;
  v11 = sub_1DC40799C();
  MEMORY[0x1E0C80A78](v11);
  MEMORY[0x1E0C80A78](v12);
  v13 = sub_1DC4073A8();
  v30 = *(_QWORD *)(v13 - 8);
  v31 = v13;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v29 = (char *)&v29 - v17;
  sub_1DC0C9CBC();
  swift_retain();
  sub_1DC407438();
  sub_1DC407438();
  sub_1DC102724(0);
  sub_1DC4076CC();
  v18 = sub_1DC4075C4();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v10, 1, 1, v18);
  v19 = v29;
  sub_1DC407384();
  v21 = v30;
  v20 = v31;
  (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v15, v19, v31);
  v22 = (uint64_t *)v32;
  sub_1DC407444();
  v24 = *v22;
  v23 = v22[1];
  swift_bridgeObjectRetain();
  sub_1DC0926D8((uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for CuratedForYouFeedGroupConfigData);
  v25 = (uint64_t)v34;
  (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v34, v15, v20);
  v26 = (_QWORD *)(v25 + *(int *)(v35 + 20));
  *v26 = v24;
  v26[1] = v23;
  sub_1DC0990BC(v25, v36, (uint64_t (*)(_QWORD))type metadata accessor for CuratedForYouFeedGroup);
  type metadata accessor for ForYouFeedGroup();
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  sub_1DC089DA4(0, (unint64_t *)&qword_1EDB29678, (uint64_t (*)(uint64_t))sub_1DC0D019C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  v27 = sub_1DC402D58();
  sub_1DC0926D8(v25, (uint64_t (*)(_QWORD))type metadata accessor for CuratedForYouFeedGroup);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v19, v20);
  return v27;
}

void sub_1DC1E8448()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  void *v3;
  id v4;
  _QWORD v5[2];

  v0 = type metadata accessor for CuratedForYouFeedGroupConfigData();
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)v5 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5[0] = 0x2064657461727543;
  v5[1] = 0xE900000000000028;
  sub_1DC0C9CBC();
  sub_1DC407444();
  swift_bridgeObjectRetain();
  sub_1DC0926D8((uint64_t)v2, (uint64_t (*)(_QWORD))type metadata accessor for CuratedForYouFeedGroupConfigData);
  sub_1DC408B48();
  swift_bridgeObjectRelease();
  sub_1DC408B48();
  if (qword_1EDB2D2E8 != -1)
    swift_once();
  v3 = (void *)qword_1EDB2D2E0;
  type metadata accessor for ForYouFeedGroup();
  sub_1DC12802C();
  v4 = v3;
  sub_1DC4078F4();
  swift_bridgeObjectRelease();

}

uint64_t sub_1DC1E85C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC8StocksUI29CuratedForYouFeedGroupEmitter_config;
  sub_1DC0C9CBC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_1DC0926D8(v0 + OBJC_IVAR____TtC8StocksUI29CuratedForYouFeedGroupEmitter_knobs, (uint64_t (*)(_QWORD))type metadata accessor for CuratedForYouFeedGroupKnobs);
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC8StocksUI29CuratedForYouFeedGroupEmitter_formatService);
  return swift_deallocClassInstance();
}

uint64_t sub_1DC1E8640()
{
  return type metadata accessor for CuratedForYouFeedGroupEmitter();
}

uint64_t type metadata accessor for CuratedForYouFeedGroupEmitter()
{
  uint64_t result;

  result = qword_1EDB38F10;
  if (!qword_1EDB38F10)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1DC1E8684()
{
  unint64_t v0;
  unint64_t v1;

  sub_1DC0C9CBC();
  if (v0 <= 0x3F)
  {
    type metadata accessor for CuratedForYouFeedGroupKnobs();
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

uint64_t sub_1DC1E8714()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  _QWORD v4[2];

  v0 = type metadata accessor for CuratedForYouFeedGroupConfigData();
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)v4 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4[0] = 0x2064657461727543;
  v4[1] = 0xE900000000000028;
  sub_1DC0C9CBC();
  sub_1DC407444();
  swift_bridgeObjectRetain();
  sub_1DC0926D8((uint64_t)v2, (uint64_t (*)(_QWORD))type metadata accessor for CuratedForYouFeedGroupConfigData);
  sub_1DC408B48();
  swift_bridgeObjectRelease();
  sub_1DC408B48();
  return v4[0];
}

uint64_t sub_1DC1E87FC@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + OBJC_IVAR____TtC8StocksUI29CuratedForYouFeedGroupEmitter_config;
  sub_1DC0C9CBC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
  type metadata accessor for ForYouFeedGroupConfig();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1DC1E885C@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t *boxed_opaque_existential_1;

  v3 = *v1 + OBJC_IVAR____TtC8StocksUI29CuratedForYouFeedGroupEmitter_knobs;
  a1[3] = type metadata accessor for CuratedForYouFeedGroupKnobs();
  a1[4] = sub_1DC080808(&qword_1EDB37480, (uint64_t (*)(uint64_t))type metadata accessor for CuratedForYouFeedGroupKnobs, (uint64_t)&unk_1DC41786C);
  a1[5] = sub_1DC080808(&qword_1F034E5D8, (uint64_t (*)(uint64_t))type metadata accessor for CuratedForYouFeedGroupKnobs, (uint64_t)&unk_1DC417844);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a1);
  return sub_1DC0990BC(v3, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(_QWORD))type metadata accessor for CuratedForYouFeedGroupKnobs);
}

uint64_t sub_1DC1E8900()
{
  sub_1DC1E9298();
  swift_allocObject();
  return sub_1DC402D58();
}

uint64_t sub_1DC1E894C()
{
  sub_1DC102724(0);
  return sub_1DC4076B4();
}

uint64_t sub_1DC1E89A0(uint64_t a1)
{
  return sub_1DC1E7378(a1);
}

uint64_t sub_1DC1E89C0()
{
  sub_1DC0C9CBC();
  return sub_1DC40742C();
}

uint64_t sub_1DC1E89F4@<X0>(uint64_t *a1@<X8>)
{
  return sub_1DC1E8A14(a1);
}

uint64_t sub_1DC1E8A14@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t inited;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE v10[80];
  uint64_t v11;
  unint64_t v12;

  v2 = type metadata accessor for CuratedForYouFeedGroupConfigData();
  MEMORY[0x1E0C80A78](v2);
  v4 = &v10[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = 0x2064657461727543;
  v12 = 0xE900000000000028;
  sub_1DC0C9CBC();
  sub_1DC407444();
  swift_bridgeObjectRetain();
  sub_1DC0926D8((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for CuratedForYouFeedGroupConfigData);
  sub_1DC408B48();
  swift_bridgeObjectRelease();
  sub_1DC408B48();
  sub_1DC089DA4(0, &qword_1EDB40070, (uint64_t (*)(uint64_t))sub_1DC0CFB4C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DC40DC10;
  *(_QWORD *)(inited + 32) = 0x696669746E656469;
  *(_QWORD *)(inited + 40) = 0xEA00000000007265;
  v6 = sub_1DC40742C();
  *(_QWORD *)(inited + 72) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(inited + 48) = v6;
  *(_QWORD *)(inited + 56) = v7;
  sub_1DC0CF9B8(inited);
  sub_1DC089DA4(0, &qword_1EDB294C0, (uint64_t (*)(uint64_t))type metadata accessor for CuratedForYouFeedGroupEmitter, MEMORY[0x1E0DB3C70]);
  a1[3] = v8;
  a1[4] = sub_1DC1E9300();
  __swift_allocate_boxed_opaque_existential_1(a1);
  return sub_1DC402878();
}

uint64_t sub_1DC1E8BE0()
{
  sub_1DC080808((unint64_t *)&unk_1EDB38EF0, (uint64_t (*)(uint64_t))type metadata accessor for CuratedForYouFeedGroupEmitter, (uint64_t)&unk_1DC416D10);
  return sub_1DC40286C();
}

uint64_t sub_1DC1E8C20()
{
  return sub_1DC080808((unint64_t *)&unk_1EDB38F00, (uint64_t (*)(uint64_t))type metadata accessor for CuratedForYouFeedGroupEmitter, (uint64_t)&unk_1DC416CE8);
}

uint64_t sub_1DC1E8C4C()
{
  return sub_1DC080808(&qword_1EDB38EE8, (uint64_t (*)(uint64_t))type metadata accessor for CuratedForYouFeedGroupEmitter, (uint64_t)&unk_1DC416D40);
}

uint64_t sub_1DC1E8C78()
{
  return sub_1DC080808((unint64_t *)&unk_1EDB38EF0, (uint64_t (*)(uint64_t))type metadata accessor for CuratedForYouFeedGroupEmitter, (uint64_t)&unk_1DC416D10);
}

uint64_t sub_1DC1E8CA4()
{
  return sub_1DC4078DC();
}

uint64_t sub_1DC1E8CCC(uint64_t a1)
{
  uint64_t v1;

  return sub_1DC1E74F0(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1DC1E8CE8(uint64_t a1)
{
  uint64_t v1;

  return sub_1DC1E8050(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

void sub_1DC1E8D00()
{
  sub_1DC1E8448();
}

unint64_t sub_1DC1E8D18(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  sub_1DC0E93B8(0, (unint64_t *)&unk_1F034E5C8, sub_1DC1E927C);
  v2 = (_QWORD *)sub_1DC409874();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v5 = *(v4 - 2);
    v6 = *(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_1DC2733F4(v5, v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = (uint64_t *)(v2[6] + 16 * result);
    *v10 = v5;
    v10[1] = v6;
    *(_QWORD *)(v2[7] + 8 * result) = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1DC1E8E3C(uint64_t a1)
{
  return sub_1DC1E8E54(a1, sub_1DC1E91F0);
}

unint64_t sub_1DC1E8E48(uint64_t a1)
{
  return sub_1DC1E8E54(a1, sub_1DC1E91B8);
}

unint64_t sub_1DC1E8E54(uint64_t a1, void (*a2)(_QWORD))
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  a2(0);
  v3 = (_QWORD *)sub_1DC409874();
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  swift_retain();
  v5 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v6 = *(v5 - 2);
    v7 = *(v5 - 1);
    v8 = *v5;
    swift_bridgeObjectRetain();
    swift_retain();
    result = sub_1DC2733F4(v6, v7);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v6;
    v11[1] = v7;
    *(_QWORD *)(v3[7] + 8 * result) = v8;
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v5 += 3;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1DC1E8F68(uint64_t a1)
{
  return sub_1DC1E8E54(a1, sub_1DC1E9180);
}

unint64_t sub_1DC1E8F74(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t result;
  char v18;
  unint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  _QWORD v26[2];

  sub_1DC1E911C();
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (_QWORD *)((char *)v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!*(_QWORD *)(a1 + 16))
  {
    v8 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  sub_1DC0E93B8(0, &qword_1F034E570, (void (*)(uint64_t))MEMORY[0x1E0D60380]);
  v7 = sub_1DC409874();
  v8 = (_QWORD *)v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  v10 = (char *)v6 + *(int *)(v3 + 48);
  v11 = v7 + 64;
  v12 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v26[1] = a1;
  v13 = a1 + v12;
  v14 = *(_QWORD *)(v4 + 72);
  swift_retain();
  while (1)
  {
    sub_1DC0990BC(v13, (uint64_t)v6, (uint64_t (*)(_QWORD))sub_1DC1E911C);
    v15 = *v6;
    v16 = v6[1];
    result = sub_1DC2733F4(*v6, v16);
    if ((v18 & 1) != 0)
      break;
    v19 = result;
    *(_QWORD *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v20 = (uint64_t *)(v8[6] + 16 * result);
    *v20 = v15;
    v20[1] = v16;
    v21 = v8[7];
    v22 = sub_1DC408470();
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v21 + *(_QWORD *)(*(_QWORD *)(v22 - 8) + 72) * v19, v10, v22);
    v23 = v8[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (v24)
      goto LABEL_11;
    v8[2] = v25;
    v13 += v14;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

void sub_1DC1E911C()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EDB284B8)
  {
    sub_1DC408470();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EDB284B8);
  }
}

void sub_1DC1E9180(uint64_t a1)
{
  sub_1DC1E920C(a1, &qword_1F034E578, &qword_1F034E580, (uint64_t (*)(uint64_t))sub_1DC1E919C);
}

void sub_1DC1E919C(uint64_t a1)
{
  sub_1DC089DA4(a1, &qword_1F034E588, MEMORY[0x1E0D5EAD8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

void sub_1DC1E91B8(uint64_t a1)
{
  sub_1DC1E920C(a1, &qword_1F034E590, &qword_1F034E598, (uint64_t (*)(uint64_t))sub_1DC1E91D4);
}

void sub_1DC1E91D4(uint64_t a1)
{
  sub_1DC089DA4(a1, &qword_1F034E5A0, MEMORY[0x1E0D5F2A8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

void sub_1DC1E91F0(uint64_t a1)
{
  sub_1DC1E920C(a1, &qword_1F034E5A8, &qword_1F034E5B0, (uint64_t (*)(uint64_t))sub_1DC1E927C);
}

void sub_1DC1E920C(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    sub_1DC089DA4(255, a3, a4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
    v5 = sub_1DC409880();
    if (!v6)
      atomic_store(v5, a2);
  }
}

void sub_1DC1E927C(uint64_t a1)
{
  sub_1DC089DA4(a1, (unint64_t *)&unk_1F034E5B8, (uint64_t (*)(uint64_t))sub_1DC112C9C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
}

void sub_1DC1E9298()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB29700)
  {
    sub_1DC0D4B28(255, (unint64_t *)&qword_1EDB40100);
    v0 = sub_1DC402DAC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB29700);
  }
}

unint64_t sub_1DC1E9300()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EDB294B8;
  if (!qword_1EDB294B8)
  {
    sub_1DC089DA4(255, &qword_1EDB294C0, (uint64_t (*)(uint64_t))type metadata accessor for CuratedForYouFeedGroupEmitter, MEMORY[0x1E0DB3C70]);
    result = MEMORY[0x1DF0CAB8C](MEMORY[0x1E0DB3C80], v1);
    atomic_store(result, (unint64_t *)&qword_1EDB294B8);
  }
  return result;
}

uint64_t sub_1DC1E9360()
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1DC1E93B4();
    return swift_release();
  }
  return result;
}

uint64_t sub_1DC1E93B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int v10;
  uint64_t v11;
  unsigned int *v12;
  char *v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  char v17;
  char v18;
  char v19;
  char v20;
  uint64_t v21;
  char v22;

  v1 = v0;
  v2 = sub_1DC400970();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1DC40124C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 64));
  sub_1DC400A60();
  sub_1DC401240();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v10 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  if (v10 == *MEMORY[0x1E0DAE8C0])
  {
    v11 = sub_1DC400928();
    swift_retain();
    v12 = (unsigned int *)MEMORY[0x1E0DAE8C0];
    v13 = &v17;
LABEL_11:
    v14 = sub_1DC1E966C(v11, v1, (uint64_t)v13, v12);
    swift_bridgeObjectRelease();
    swift_release();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
LABEL_12:
    v21 = v14;
    swift_retain();
    sub_1DC402728();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  if (v10 == *MEMORY[0x1E0DAE8D0])
  {
    v11 = sub_1DC400928();
    swift_retain();
    v12 = (unsigned int *)MEMORY[0x1E0DAE8D0];
    v13 = &v18;
    goto LABEL_11;
  }
  if (v10 == *MEMORY[0x1E0DAE948])
  {
    v11 = sub_1DC400928();
    swift_retain();
    v12 = (unsigned int *)MEMORY[0x1E0DAE948];
    v13 = &v19;
    goto LABEL_11;
  }
  if (v10 == *MEMORY[0x1E0DAE930])
  {
    v11 = sub_1DC400928();
    swift_retain();
    v12 = (unsigned int *)MEMORY[0x1E0DAE930];
    v13 = &v20;
    goto LABEL_11;
  }
  if (v10 == *MEMORY[0x1E0DAE8E0])
  {
    v11 = sub_1DC400928();
    swift_retain();
    v12 = (unsigned int *)MEMORY[0x1E0DAE8E0];
    v13 = &v22;
    goto LABEL_11;
  }
  if (v10 == *MEMORY[0x1E0DAE928])
  {
    v14 = MEMORY[0x1E0DEE9D8];
    goto LABEL_12;
  }
  result = sub_1DC4099DC();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for OrderWatchlistMenuGroupOptionProvider()
{
  return objc_opt_self();
}

uint64_t sub_1DC1E966C(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int *a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v20;
  unint64_t v21;
  _QWORD v23[2];
  unsigned int v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v8 = type metadata accessor for SortWatchlistCommandContext(0);
  v29 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(a1 + 16);
  v12 = MEMORY[0x1E0DEE9D8];
  if (v11)
  {
    v23[1] = v4;
    v30 = MEMORY[0x1E0DEE9D8];
    sub_1DC2AD5A0(0, v11, 0);
    v12 = v30;
    v13 = sub_1DC400940();
    v14 = *(_QWORD *)(v13 - 8);
    v15 = a1 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
    v27 = v14;
    v28 = v13;
    v25 = *(_QWORD *)(v14 + 72);
    v26 = (_QWORD *)(a2 + 40);
    v24 = *a4;
    do
    {
      v16 = a2;
      __swift_project_boxed_opaque_existential_1(v26, *(_QWORD *)(a2 + 64));
      sub_1DC400A60();
      v17 = &v10[*(int *)(v8 + 20)];
      (*(void (**)(char *, uint64_t, uint64_t))(v27 + 16))(v17, v15, v28);
      v18 = sub_1DC400970();
      (*(void (**)(char *, _QWORD, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v17, v24, v18);
      v10[*(int *)(v8 + 24)] = 1;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v30 = v12;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1DC2AD5A0(0, *(_QWORD *)(v12 + 16) + 1, 1);
        v12 = v30;
      }
      v21 = *(_QWORD *)(v12 + 16);
      v20 = *(_QWORD *)(v12 + 24);
      if (v21 >= v20 >> 1)
      {
        sub_1DC2AD5A0(v20 > 1, v21 + 1, 1);
        v12 = v30;
      }
      *(_QWORD *)(v12 + 16) = v21 + 1;
      sub_1DC1E9BD4((uint64_t)v10, v12+ ((*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80))+ *(_QWORD *)(v29 + 72) * v21);
      v15 += v25;
      --v11;
      a2 = v16;
    }
    while (v11);
  }
  return v12;
}

_QWORD *sub_1DC1E9874(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  _QWORD v10[5];

  v4 = v3;
  v10[0] = MEMORY[0x1E0DEE9D8];
  sub_1DC089DA4(0, &qword_1EDB427E8, (uint64_t (*)(uint64_t))sub_1DC1E9B30, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB3938]);
  swift_allocObject();
  v3[2] = sub_1DC402734();
  v3[3] = a1;
  v3[4] = a2;
  sub_1DC0824D4((uint64_t)a3, (uint64_t)(v3 + 5));
  swift_getObjectType();
  v8 = qword_1EDB2AA78;
  swift_unknownObjectRetain();
  if (v8 != -1)
    swift_once();
  swift_allocObject();
  swift_weakInit();
  sub_1DC40124C();
  sub_1DC404A5C();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  if (qword_1EDB2AA48 != -1)
    swift_once();
  swift_allocObject();
  swift_weakInit();
  sub_1DC404A5C();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  if (qword_1EDB2AAA0 != -1)
    swift_once();
  swift_allocObject();
  swift_weakInit();
  sub_1DC404A5C();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  __swift_project_boxed_opaque_existential_1(a3, a3[3]);
  sub_1DC1E9B90();
  swift_retain();
  sub_1DC400AB4();
  swift_release();
  sub_1DC1E93B4();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a3);
  return v4;
}

void sub_1DC1E9B30(uint64_t a1)
{
  sub_1DC089DA4(a1, &qword_1EDB428A0, type metadata accessor for SortWatchlistCommandContext, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
}

uint64_t sub_1DC1E9B4C()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1DC1E9B70()
{
  return sub_1DC1E9360();
}

uint64_t sub_1DC1E9B78()
{
  return sub_1DC1E9360();
}

unint64_t sub_1DC1E9B90()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EDB42860;
  if (!qword_1EDB42860)
  {
    v1 = type metadata accessor for OrderWatchlistMenuGroupOptionProvider();
    result = MEMORY[0x1DF0CAB8C](&unk_1DC416ED8, v1);
    atomic_store(result, (unint64_t *)&qword_1EDB42860);
  }
  return result;
}

uint64_t sub_1DC1E9BD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SortWatchlistCommandContext(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC1E9C18(uint64_t a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  int v21;
  char v23;
  char v24;
  uint64_t v25;
  _QWORD v26[2];
  _OWORD v27[2];
  uint64_t v28;
  _OWORD v29[2];
  uint64_t v30;

  v26[0] = a4;
  sub_1DC1EA918(0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for StocksActivity(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (_QWORD *)((char *)v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1DC1EA188(0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC190DEC(0);
  v17 = v16;
  v18 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)v26 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = *a2;
  sub_1DC1EA1A4(a1, (uint64_t)v15);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v15, 1, v17) == 1)
    return sub_1DC0926D8((uint64_t)v15, (uint64_t (*)(_QWORD))sub_1DC1EA188);
  (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v20, v15, v17);
  if (v21 != 2 && a3)
  {
    swift_retain();
    v23 = sub_1DC408074();
    if (v23 == 2 || (v24 = v23, (sub_1DC408080() & 1) == 0))
    {
      (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
      return swift_release();
    }
    *v12 = a3 | ((unint64_t)(v24 & 1) << 61);
    swift_storeEnumTagMultiPayload();
    v25 = sub_1DC403340();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v9, 1, 1, v25);
    v30 = 0;
    memset(v29, 0, sizeof(v29));
    v28 = 0;
    memset(v27, 0, sizeof(v27));
    swift_retain();
    sub_1DC22BAE0((uint64_t)v12, 0, (uint64_t)v9, (uint64_t)v29, 0, 0, (uint64_t)v27);
    swift_release();
    swift_release();
    sub_1DC17C7C8((uint64_t)v27, &qword_1EDB29410, (unint64_t *)&unk_1EDB29400);
    sub_1DC17C7C8((uint64_t)v29, &qword_1EDB2ACD0, (unint64_t *)&qword_1EDB2ACC0);
    sub_1DC0926D8((uint64_t)v9, (uint64_t (*)(_QWORD))sub_1DC1EA918);
    sub_1DC0926D8((uint64_t)v12, type metadata accessor for StocksActivity);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v20, v17);
}

uint64_t sub_1DC1E9F08(uint64_t a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  int v18;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v28 = a4;
  sub_1DC1EA188(0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC190DEC(0);
  v11 = v10;
  v12 = *(_QWORD *)(v10 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v25 - v16;
  v18 = *a2;
  sub_1DC1EA1A4(a1, (uint64_t)v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v9, 1, v11) == 1)
    return sub_1DC0926D8((uint64_t)v9, (uint64_t (*)(_QWORD))sub_1DC1EA188);
  v20 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
  v20(v17, v9, v11);
  if (a3)
  {
    sub_1DC405410();
    sub_1DC0A3390(0, (unint64_t *)&qword_1EDB29C40);
    sub_1DC4018AC();
    if ((swift_dynamicCast() & 1) != 0)
    {
      if (v18 == 2)
      {
        (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v11);
        return swift_release();
      }
      v26 = v18 & 1;
      v27 = v29;
      sub_1DC408068();
      v21 = v30;
      v25 = v30;
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v14, v17, v11);
      v22 = (*(unsigned __int8 *)(v12 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
      v23 = v22 + v13;
      v24 = (char *)swift_allocObject();
      *((_QWORD *)v24 + 2) = v21;
      *((_QWORD *)v24 + 3) = a3;
      *((_QWORD *)v24 + 4) = v28;
      v20(&v24[v22], v14, v11);
      v24[v23] = v26;
      swift_unknownObjectRetain();
      swift_retain();
      swift_retain();
      sub_1DC401828();
      swift_unknownObjectRelease();
      swift_release();
      swift_release();
    }
  }
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v17, v11);
}

void sub_1DC1EA188(uint64_t a1)
{
  sub_1DC089DA4(a1, &qword_1EDB42810, (uint64_t (*)(uint64_t))sub_1DC190DEC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

uint64_t sub_1DC1EA1A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1DC1EA188(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC1EA1E8(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(uint64_t, uint64_t, uint64_t);
  uint64_t v42;
  id v43;
  uint64_t result;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t ObjectType;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void (*v66)(uint64_t, uint64_t, uint64_t);
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  __int128 v70;
  _OWORD v71[3];

  v62 = a6;
  v60 = a5;
  v61 = a4;
  v53 = a3;
  v69 = a1;
  v51 = sub_1DC402FB0();
  v50 = *(_QWORD *)(v51 - 8);
  MEMORY[0x1E0C80A78](v51);
  v49 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1DC403760();
  v58 = *(_QWORD *)(v8 - 8);
  v59 = v8;
  MEMORY[0x1E0C80A78](v8);
  v57 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC089DA4(0, &qword_1F034E5E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB9F30], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v48 - v11;
  v13 = sub_1DC403040();
  MEMORY[0x1E0C80A78](v13);
  v55 = sub_1DC402EA8();
  v54 = *(_QWORD *)(v55 - 8);
  MEMORY[0x1E0C80A78](v55);
  v15 = (char *)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1DC4032BC();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v48 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  ObjectType = swift_getObjectType();
  v56 = a2;
  sub_1DC29A9A8((uint64_t)v19);
  sub_1DC089DA4(0, (unint64_t *)&qword_1EDB3FE40, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8178], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v21 = v20;
  v22 = sub_1DC401618();
  v23 = *(_QWORD *)(v22 - 8);
  v24 = *(unsigned __int8 *)(v23 + 80);
  v25 = (v24 + 32) & ~v24;
  v64 = v25 + *(_QWORD *)(v23 + 72);
  v65 = v21;
  v67 = v24 | 7;
  v26 = swift_allocObject();
  v70 = xmmword_1DC40DC10;
  *(_OWORD *)(v26 + 16) = xmmword_1DC40DC10;
  v63 = v25;
  v27 = v26 + v25;
  v28 = *MEMORY[0x1E0CF8170];
  v29 = *(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 104);
  v68 = v22;
  v66 = v29;
  v29(v27, v28, v22);
  sub_1DC080808((unint64_t *)&unk_1EDB297F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD350], MEMORY[0x1E0DAD338]);
  sub_1DC4015C4();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  if (v53)
  {
    sub_1DC405428();
    v30 = sub_1DC405848();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v12, 0, 1, v30);
  }
  else
  {
    v31 = sub_1DC405848();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v12, 1, 1, v31);
  }
  sub_1DC40304C();
  sub_1DC402E9C();
  v32 = v15;
  v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = v70;
  v34 = v63;
  v66(v33 + v63, v28, v68);
  sub_1DC080808((unint64_t *)&unk_1F034DC00, (uint64_t (*)(uint64_t))MEMORY[0x1E0DACCC0], MEMORY[0x1E0DACCB0]);
  v35 = v55;
  sub_1DC4015C4();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v54 + 8))(v32, v35);
  v36 = v61;
  v37 = v57;
  sub_1DC29B00C(*(void **)(v61 + 80));
  v38 = v68;
  v39 = swift_allocObject();
  *(_OWORD *)(v39 + 16) = v70;
  v40 = v39 + v34;
  v41 = v66;
  LODWORD(v55) = v28;
  v66(v40, v28, v38);
  sub_1DC080808((unint64_t *)&unk_1EDB298F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD978], MEMORY[0x1E0DAD968]);
  v56 = 0x80000001DC43AA60;
  v42 = v59;
  sub_1DC4015C4();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v58 + 8))(v37, v42);
  sub_1DC190DEC(0);
  sub_1DC408068();
  v43 = objc_msgSend(*(id *)&v71[0], sel_sourceChannel);
  result = swift_unknownObjectRelease();
  if (v43)
  {
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v36 + 40), *(_QWORD *)(v36 + 64));
    v45 = v49;
    sub_1DC292AD8(v43);
    v46 = swift_allocObject();
    *(_OWORD *)(v46 + 16) = v70;
    v41(v46 + v63, v55, v38);
    sub_1DC080808((unint64_t *)&unk_1EDB29750, (uint64_t (*)(uint64_t))MEMORY[0x1E0DACE70], MEMORY[0x1E0DACE60]);
    v47 = v51;
    sub_1DC4015C4();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    result = (*(uint64_t (**)(char *, uint64_t))(v50 + 8))(v45, v47);
  }
  if ((v62 & 1) == 0)
  {
    sub_1DC403B5C();
    sub_1DC080808(&qword_1F034E5E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DADFF8], MEMORY[0x1E0DADFF0]);
    memset(v71, 0, 32);
    sub_1DC4015DC();
    return sub_1DC0926D8((uint64_t)v71, (uint64_t (*)(_QWORD))sub_1DC0D11C4);
  }
  return result;
}

uint64_t sub_1DC1EA840()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  sub_1DC190DEC(0);
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v0 + v4, v2);
  return swift_deallocObject();
}

uint64_t sub_1DC1EA8C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  sub_1DC190DEC(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  return sub_1DC1EA1E8(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), v1 + v5, *(unsigned __int8 *)(v1 + v5 + *(_QWORD *)(v4 + 64)));
}

void sub_1DC1EA918(uint64_t a1)
{
  sub_1DC089DA4(a1, (unint64_t *)&unk_1EDB29810, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD3C8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

uint64_t sub_1DC1EA934@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t (*v15)(uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  char *v25;
  uint64_t v26;
  uint64_t *v27;
  id v28;

  v27 = a1;
  sub_1DC089DA4(0, (unint64_t *)&qword_1EDB3F8C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF868], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v25 = (char *)&v25 - v3;
  v4 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0C958D0];
  sub_1DC08CBF0(0, (unint64_t *)&unk_1EDB2AC00, (uint64_t (*)(uint64_t))sub_1DC12E42C, sub_1DC12E450, MEMORY[0x1E0C958D0]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v25 - v8;
  sub_1DC12E538();
  v11 = v10;
  v12 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC08CBF0(0, &qword_1EDB2ABE8, v15, sub_1DC12E5B0, v4);
  v17 = v16;
  v26 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v25 - v18;
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + OBJC_IVAR____TtC8StocksUI20StockFeedDataManager_watchlistManager), *(_QWORD *)(v1 + OBJC_IVAR____TtC8StocksUI20StockFeedDataManager_watchlistManager + 24));
  sub_1DC400B08();
  swift_getKeyPath();
  sub_1DC1EDC5C((unint64_t *)&unk_1EDB2ABF0, (unint64_t *)&unk_1EDB2AC00, (uint64_t (*)(uint64_t))sub_1DC12E42C, sub_1DC12E450);
  sub_1DC406F94();
  swift_release();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_1DC12E5B0();
  sub_1DC080808(&qword_1EDB28C08, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAE890], MEMORY[0x1E0DAE8A0]);
  sub_1DC406FB8();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  sub_1DC0ACADC();
  v28 = (id)sub_1DC409148();
  v20 = sub_1DC409130();
  v21 = (uint64_t)v25;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v25, 1, 1, v20);
  sub_1DC12E2D0();
  v22 = v27;
  v27[3] = v23;
  v22[4] = sub_1DC080808(&qword_1EDB2AC30, (uint64_t (*)(uint64_t))sub_1DC12E2D0, MEMORY[0x1E0C95CB8]);
  __swift_allocate_boxed_opaque_existential_1(v22);
  sub_1DC1EDC5C(&qword_1EDB2ABE0, &qword_1EDB2ABE8, (uint64_t (*)(uint64_t))sub_1DC12E538, sub_1DC12E5B0);
  sub_1DC080808(&qword_1EDB3F8C8, (uint64_t (*)(uint64_t))sub_1DC0ACADC, MEMORY[0x1E0DEF7F8]);
  sub_1DC406FA0();
  sub_1DC0B091C(v21, (unint64_t *)&qword_1EDB3F8C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF868]);

  return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v19, v17);
}

uint64_t sub_1DC1EACA0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t ObjectType;
  uint64_t v5;
  uint64_t v6;

  v1 = v0 + OBJC_IVAR____TtC8StocksUI20StockFeedDataManager_priceDataManager;
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + OBJC_IVAR____TtC8StocksUI20StockFeedDataManager_priceDataManager), *(_QWORD *)(v0 + OBJC_IVAR____TtC8StocksUI20StockFeedDataManager_priceDataManager + 24));
  sub_1DC080808(&qword_1EDB27AD8, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedDataManager, (uint64_t)&unk_1DC417030);
  sub_1DC400D18();
  v2 = (_QWORD *)(v0 + OBJC_IVAR____TtC8StocksUI20StockFeedDataManager_watchlistManager);
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  sub_1DC080808(&qword_1EDB31ED0, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedDataManager, (uint64_t)&unk_1DC417000);
  sub_1DC400AD8();
  v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8StocksUI20StockFeedDataManager_priceDataRefreshManager + 8);
  ObjectType = swift_getObjectType();
  v5 = v0 + OBJC_IVAR____TtC8StocksUI20StockFeedDataManager_stock;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 40))(v0 + OBJC_IVAR____TtC8StocksUI20StockFeedDataManager_stock, ObjectType, v3);
  sub_1DC148A20(v0 + 16);
  v6 = sub_1DC4010E4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v2);
  __swift_destroy_boxed_opaque_existential_1(v1);
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC8StocksUI20StockFeedDataManager_quoteDetailManager);
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC8StocksUI20StockFeedDataManager_feedService);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC8StocksUI20StockFeedDataManager_appConfigurationManager);

  sub_1DC0926D8(v0 + OBJC_IVAR____TtC8StocksUI20StockFeedDataManager_lastNewsRefreshDate, (uint64_t (*)(_QWORD))sub_1DC0BB2BC);
  return v0;
}

uint64_t sub_1DC1EAE64()
{
  sub_1DC1EACA0();
  return swift_deallocClassInstance();
}

uint64_t sub_1DC1EAE88()
{
  return type metadata accessor for StockFeedDataManager();
}

uint64_t type metadata accessor for StockFeedDataManager()
{
  uint64_t result;

  result = qword_1EDB31ED8;
  if (!qword_1EDB31ED8)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1DC1EAECC()
{
  unint64_t v0;
  unint64_t v1;

  sub_1DC4010E4();
  if (v0 <= 0x3F)
  {
    sub_1DC0BB2BC(319);
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

uint64_t sub_1DC1EAF98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  CFTimeInterval v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  CFTimeInterval *v16;
  void *v17;
  CFTimeInterval *v18;
  void *v19;
  uint64_t v20;
  uint64_t v22;

  v0 = sub_1DC400010();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = CACurrentMediaTime();
  sub_1DC400004();
  v5 = sub_1DC3FFFF8();
  v7 = v6;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  if (qword_1EDB2DB60 != -1)
    swift_once();
  v8 = (void *)qword_1EDB2DB58;
  sub_1DC0E7FF0();
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1DC40C740;
  v10 = v8;
  v11 = sub_1DC4010B4();
  v13 = v12;
  v14 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v9 + 56) = MEMORY[0x1E0DEA968];
  v15 = sub_1DC0E7FAC();
  *(_QWORD *)(v9 + 32) = v11;
  *(_QWORD *)(v9 + 40) = v13;
  *(_QWORD *)(v9 + 96) = v14;
  *(_QWORD *)(v9 + 104) = v15;
  *(_QWORD *)(v9 + 64) = v15;
  *(_QWORD *)(v9 + 72) = v5;
  *(_QWORD *)(v9 + 80) = v7;
  swift_bridgeObjectRetain();
  sub_1DC408FE0();
  sub_1DC403F28();

  swift_bridgeObjectRelease();
  sub_1DC133AB4(0);
  sub_1DC402E00();
  v16 = (CFTimeInterval *)swift_allocObject();
  v16[2] = v4;
  *((_QWORD *)v16 + 3) = v5;
  *((_QWORD *)v16 + 4) = v7;
  swift_bridgeObjectRetain();
  v17 = (void *)sub_1DC402C80();
  type metadata accessor for StockFeedQuoteData();
  sub_1DC402D10();
  swift_release();
  swift_release();

  v18 = (CFTimeInterval *)swift_allocObject();
  v18[2] = v4;
  *((_QWORD *)v18 + 3) = v5;
  *((_QWORD *)v18 + 4) = v7;
  v19 = (void *)sub_1DC402C80();
  v20 = sub_1DC402D40();
  swift_release();
  swift_release();

  return v20;
}

uint64_t sub_1DC1EB224(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v8;

  v2 = sub_1DC4024D0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (uint64_t *)((char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1((_QWORD *)(a1 + OBJC_IVAR____TtC8StocksUI20StockFeedDataManager_quoteDetailManager), *(_QWORD *)(a1 + OBJC_IVAR____TtC8StocksUI20StockFeedDataManager_quoteDetailManager + 24));
  sub_1DC4010B4();
  *v5 = 0x4014000000000000;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DB32C8], v2);
  v6 = sub_1DC400BB0();
  swift_bridgeObjectRelease();
  (*(void (**)(_QWORD *, uint64_t))(v3 + 8))(v5, v2);
  return v6;
}

uint64_t sub_1DC1EB338(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;

  v27 = a3;
  v6 = type metadata accessor for StockFeedQuoteData();
  MEMORY[0x1E0C80A78](v6);
  v28 = (uint64_t)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v26 - v9;
  v11 = sub_1DC401030();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  sub_1DC0990BC(a1, (uint64_t)&v10[*(int *)(v6 + 20)], (uint64_t (*)(_QWORD))sub_1DC133AB4);
  if (qword_1EDB2DB60 != -1)
    swift_once();
  v12 = (void *)qword_1EDB2DB58;
  sub_1DC0E7FF0();
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1DC411E20;
  v14 = v12;
  v15 = sub_1DC4010B4();
  v17 = v16;
  v18 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v13 + 56) = MEMORY[0x1E0DEA968];
  v19 = sub_1DC0E7FAC();
  *(_QWORD *)(v13 + 64) = v19;
  *(_QWORD *)(v13 + 32) = v15;
  *(_QWORD *)(v13 + 40) = v17;
  sub_1DC408E00();
  v20 = MEMORY[0x1E0DEB100];
  *(_QWORD *)(v13 + 96) = MEMORY[0x1E0DEB070];
  *(_QWORD *)(v13 + 104) = v20;
  *(_QWORD *)(v13 + 72) = v21;
  *(_QWORD *)(v13 + 136) = v18;
  *(_QWORD *)(v13 + 144) = v19;
  *(_QWORD *)(v13 + 112) = v27;
  *(_QWORD *)(v13 + 120) = a4;
  v29 = 0;
  v30 = 0xE000000000000000;
  swift_bridgeObjectRetain();
  sub_1DC409808();
  v22 = v29;
  v23 = v30;
  *(_QWORD *)(v13 + 176) = v18;
  *(_QWORD *)(v13 + 184) = v19;
  *(_QWORD *)(v13 + 152) = v22;
  *(_QWORD *)(v13 + 160) = v23;
  sub_1DC408FE0();
  sub_1DC403F28();

  swift_bridgeObjectRelease();
  sub_1DC0990BC((uint64_t)v10, v28, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedQuoteData);
  sub_1DC089DA4(0, &qword_1EDB274E8, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedQuoteData, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  v24 = sub_1DC402D58();
  sub_1DC0926D8((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedQuoteData);
  return v24;
}

uint64_t sub_1DC1EB5C4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  CFTimeInterval v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  CFTimeInterval *v23;
  uint64_t v24;
  void *v25;
  CFTimeInterval *v26;
  void *v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v30 = a1;
  v32 = *v1;
  v31 = sub_1DC4002BC();
  v2 = *(_QWORD *)(v31 - 8);
  v3 = *(_QWORD *)(v2 + 64);
  MEMORY[0x1E0C80A78](v31);
  v4 = sub_1DC400010();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = CACurrentMediaTime();
  sub_1DC400004();
  v33 = sub_1DC3FFFF8();
  v10 = v9;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if (qword_1EDB2DB60 != -1)
    swift_once();
  v11 = (void *)qword_1EDB2DB58;
  sub_1DC0E7FF0();
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1DC40C740;
  v13 = v11;
  v14 = sub_1DC4010B4();
  v16 = v15;
  v17 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v12 + 56) = MEMORY[0x1E0DEA968];
  v18 = sub_1DC0E7FAC();
  *(_QWORD *)(v12 + 32) = v14;
  *(_QWORD *)(v12 + 40) = v16;
  *(_QWORD *)(v12 + 96) = v17;
  *(_QWORD *)(v12 + 104) = v18;
  v19 = v33;
  *(_QWORD *)(v12 + 64) = v18;
  *(_QWORD *)(v12 + 72) = v19;
  *(_QWORD *)(v12 + 80) = v10;
  swift_bridgeObjectRetain();
  sub_1DC408FE0();
  sub_1DC403F28();

  swift_bridgeObjectRelease();
  v20 = v31;
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))((char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v30, v31);
  v21 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v22 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(v22 + v21, (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v20);
  sub_1DC400F7C();
  sub_1DC402E00();
  swift_release();
  v23 = (CFTimeInterval *)swift_allocObject();
  v23[2] = v8;
  v24 = v33;
  *((_QWORD *)v23 + 3) = v33;
  *((_QWORD *)v23 + 4) = v10;
  swift_bridgeObjectRetain();
  v25 = (void *)sub_1DC402C80();
  sub_1DC402D10();
  swift_release();
  swift_release();

  v26 = (CFTimeInterval *)swift_allocObject();
  v26[2] = v8;
  *((_QWORD *)v26 + 3) = v24;
  *((_QWORD *)v26 + 4) = v10;
  v27 = (void *)sub_1DC402C80();
  v28 = sub_1DC402D40();
  swift_release();
  swift_release();

  return v28;
}

uint64_t sub_1DC1EB8EC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  void (*v10)(char *, _QWORD, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[2];
  uint64_t v16;
  uint64_t v17;

  v17 = a2;
  v16 = sub_1DC4025B4();
  v3 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v5 = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1DC4024D0();
  v7 = *(_QWORD *)(v6 - 8);
  v15[0] = v6;
  MEMORY[0x1E0C80A78](v6);
  v9 = (_QWORD *)((char *)v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15[1] = *(_QWORD *)(a1 + OBJC_IVAR____TtC8StocksUI20StockFeedDataManager_chartManager + 8);
  swift_getObjectType();
  sub_1DC4010B4();
  *v9 = 0x404E000000000000;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E0DB32C8], v6);
  v10 = *(void (**)(char *, _QWORD, uint64_t))(v3 + 104);
  v11 = v3;
  v12 = v16;
  v10(v5, *MEMORY[0x1E0DB3560], v16);
  v13 = sub_1DC400730();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v5, v12);
  (*(void (**)(_QWORD *, _QWORD))(v7 + 8))(v9, v15[0]);
  return v13;
}

uint64_t sub_1DC1EBA88@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *MEMORY[0x1E0DB3560];
  v3 = sub_1DC4025B4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

uint64_t sub_1DC1EBACC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;

  v24 = a1;
  v22 = a3;
  v5 = sub_1DC400F7C();
  v23 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EDB2DB60 != -1)
    swift_once();
  v8 = (void *)qword_1EDB2DB58;
  sub_1DC0E7FF0();
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1DC411E20;
  v10 = v8;
  v11 = sub_1DC4010B4();
  v13 = v12;
  v14 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v9 + 56) = MEMORY[0x1E0DEA968];
  v15 = sub_1DC0E7FAC();
  *(_QWORD *)(v9 + 64) = v15;
  *(_QWORD *)(v9 + 32) = v11;
  *(_QWORD *)(v9 + 40) = v13;
  sub_1DC408E00();
  v16 = MEMORY[0x1E0DEB100];
  *(_QWORD *)(v9 + 96) = MEMORY[0x1E0DEB070];
  *(_QWORD *)(v9 + 104) = v16;
  *(_QWORD *)(v9 + 72) = v17;
  *(_QWORD *)(v9 + 136) = v14;
  *(_QWORD *)(v9 + 144) = v15;
  *(_QWORD *)(v9 + 112) = v22;
  *(_QWORD *)(v9 + 120) = a4;
  v25 = 0;
  v26 = 0xE000000000000000;
  swift_bridgeObjectRetain();
  v18 = v24;
  sub_1DC409808();
  v19 = v25;
  v20 = v26;
  *(_QWORD *)(v9 + 176) = v14;
  *(_QWORD *)(v9 + 184) = v15;
  *(_QWORD *)(v9 + 152) = v19;
  *(_QWORD *)(v9 + 160) = v20;
  sub_1DC408FE0();
  sub_1DC403F28();

  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))(v7, v18, v5);
  sub_1DC089DA4(0, &qword_1EDB41068, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAEFA8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  return sub_1DC402D58();
}

uint64_t sub_1DC1EBCEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;

  if (qword_1EDB2DB60 != -1)
    swift_once();
  v6 = (void *)qword_1EDB2DB58;
  sub_1DC0E7FF0();
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1DC411E20;
  v8 = v6;
  v9 = sub_1DC4010B4();
  v11 = v10;
  v12 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v7 + 56) = MEMORY[0x1E0DEA968];
  v13 = sub_1DC0E7FAC();
  *(_QWORD *)(v7 + 64) = v13;
  *(_QWORD *)(v7 + 32) = v9;
  *(_QWORD *)(v7 + 40) = v11;
  sub_1DC408E00();
  v14 = MEMORY[0x1E0DEB100];
  *(_QWORD *)(v7 + 96) = MEMORY[0x1E0DEB070];
  *(_QWORD *)(v7 + 104) = v14;
  *(_QWORD *)(v7 + 72) = v15;
  *(_QWORD *)(v7 + 136) = v12;
  *(_QWORD *)(v7 + 144) = v13;
  *(_QWORD *)(v7 + 112) = a3;
  *(_QWORD *)(v7 + 120) = a4;
  sub_1DC0A3390(0, (unint64_t *)&qword_1EDB400E0);
  swift_bridgeObjectRetain();
  sub_1DC409808();
  *(_QWORD *)(v7 + 176) = v12;
  *(_QWORD *)(v7 + 184) = v13;
  *(_QWORD *)(v7 + 152) = 0;
  *(_QWORD *)(v7 + 160) = 0xE000000000000000;
  sub_1DC408FE0();
  sub_1DC403F28();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1DC1EBE94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  CFTimeInterval v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  CFTimeInterval *v16;
  void *v17;
  CFTimeInterval *v18;
  void *v19;
  uint64_t v20;
  uint64_t v22;

  v0 = sub_1DC400010();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = CACurrentMediaTime();
  sub_1DC400004();
  v5 = sub_1DC3FFFF8();
  v7 = v6;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  if (qword_1EDB2CE08 != -1)
    swift_once();
  v8 = (void *)qword_1EDB2CE00;
  sub_1DC0E7FF0();
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1DC40C740;
  v10 = v8;
  v11 = sub_1DC4010B4();
  v13 = v12;
  v14 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v9 + 56) = MEMORY[0x1E0DEA968];
  v15 = sub_1DC0E7FAC();
  *(_QWORD *)(v9 + 32) = v11;
  *(_QWORD *)(v9 + 40) = v13;
  *(_QWORD *)(v9 + 96) = v14;
  *(_QWORD *)(v9 + 104) = v15;
  *(_QWORD *)(v9 + 64) = v15;
  *(_QWORD *)(v9 + 72) = v5;
  *(_QWORD *)(v9 + 80) = v7;
  swift_bridgeObjectRetain();
  sub_1DC408FE0();
  sub_1DC403F28();

  swift_bridgeObjectRelease();
  type metadata accessor for StockFeedServiceConfig();
  sub_1DC402E0C();
  sub_1DC08CBF0(0, &qword_1EDB2AEE0, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedServiceConfig, sub_1DC1D0ED8, MEMORY[0x1E0D5BBD8]);
  sub_1DC402D10();
  swift_release();
  v16 = (CFTimeInterval *)swift_allocObject();
  v16[2] = v4;
  *((_QWORD *)v16 + 3) = v5;
  *((_QWORD *)v16 + 4) = v7;
  swift_bridgeObjectRetain();
  v17 = (void *)sub_1DC402C80();
  sub_1DC402D10();
  swift_release();
  swift_release();

  v18 = (CFTimeInterval *)swift_allocObject();
  v18[2] = v4;
  *((_QWORD *)v18 + 3) = v5;
  *((_QWORD *)v18 + 4) = v7;
  v19 = (void *)sub_1DC402C80();
  v20 = sub_1DC402D40();
  swift_release();
  swift_release();

  return v20;
}

uint64_t sub_1DC1EC168(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;

  v19 = sub_1DC400010();
  v2 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1DC4010E4();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for StockFeedServiceContext();
  v10 = MEMORY[0x1E0C80A78](v9);
  v12 = (uint64_t *)((char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v18 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8StocksUI20StockFeedDataManager_feedServiceConfigFetcher);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v6 + 16))(v8, a1 + OBJC_IVAR____TtC8StocksUI20StockFeedDataManager_stock, v5, v10);
  sub_1DC400004();
  v13 = sub_1DC3FFFF8();
  v15 = v14;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v19);
  *v12 = v13;
  v12[1] = v15;
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))((char *)v12 + *(int *)(v9 + 20), v8, v5);
  v16 = sub_1DC40730C();
  sub_1DC0926D8((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedServiceContext);
  return v16;
}

uint64_t sub_1DC1EC2EC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  sub_1DC1EDB48(0);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0BB2BC(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC3FFFE0();
  v11 = sub_1DC3FFFEC();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 0, 1, v11);
  v12 = a2 + OBJC_IVAR____TtC8StocksUI20StockFeedDataManager_lastNewsRefreshDate;
  swift_beginAccess();
  sub_1DC0BB2D8((uint64_t)v10, v12);
  swift_endAccess();
  __swift_project_boxed_opaque_existential_1((_QWORD *)(a2 + OBJC_IVAR____TtC8StocksUI20StockFeedDataManager_feedService), *(_QWORD *)(a2 + OBJC_IVAR____TtC8StocksUI20StockFeedDataManager_feedService + 24));
  type metadata accessor for StockFeedServiceConfig();
  sub_1DC1D0ED8();
  sub_1DC407D5C();
  type metadata accessor for StockFeedServiceProxy();
  v13 = sub_1DC1C3F38();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v13;
}

uint64_t sub_1DC1EC47C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  void *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = qword_1EDB2CE08;
  swift_retain();
  if (v6 != -1)
    swift_once();
  v7 = (void *)qword_1EDB2CE00;
  sub_1DC0E7FF0();
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1DC411E20;
  v9 = v7;
  v10 = sub_1DC4010B4();
  v12 = v11;
  v13 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v8 + 56) = MEMORY[0x1E0DEA968];
  v14 = sub_1DC0E7FAC();
  *(_QWORD *)(v8 + 64) = v14;
  *(_QWORD *)(v8 + 32) = v10;
  *(_QWORD *)(v8 + 40) = v12;
  sub_1DC408E00();
  v15 = MEMORY[0x1E0DEB100];
  *(_QWORD *)(v8 + 96) = MEMORY[0x1E0DEB070];
  *(_QWORD *)(v8 + 104) = v15;
  *(_QWORD *)(v8 + 72) = v16;
  *(_QWORD *)(v8 + 136) = v13;
  *(_QWORD *)(v8 + 144) = v14;
  *(_QWORD *)(v8 + 112) = a3;
  *(_QWORD *)(v8 + 120) = a4;
  swift_bridgeObjectRetain();
  sub_1DC409808();
  *(_QWORD *)(v8 + 176) = v13;
  *(_QWORD *)(v8 + 184) = v14;
  *(_QWORD *)(v8 + 152) = 0;
  *(_QWORD *)(v8 + 160) = 0xE000000000000000;
  sub_1DC408FE0();
  sub_1DC403F28();

  swift_bridgeObjectRelease();
  sub_1DC0A0764(0, &qword_1F034E5F0);
  swift_allocObject();
  return sub_1DC402D58();
}

uint64_t sub_1DC1EC650(uint64_t a1, uint64_t a2, uint64_t a3)
{
  CFTimeInterval v6;
  void *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  CFTimeInterval *v15;
  CFTimeInterval *v16;
  void *v17;
  uint64_t v18;

  v6 = CACurrentMediaTime();
  if (qword_1EDB2DB60 != -1)
    swift_once();
  v7 = (void *)qword_1EDB2DB58;
  sub_1DC0E7FF0();
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1DC40C740;
  v9 = v7;
  v10 = sub_1DC4010B4();
  v12 = v11;
  v13 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v8 + 56) = MEMORY[0x1E0DEA968];
  v14 = sub_1DC0E7FAC();
  *(_QWORD *)(v8 + 32) = v10;
  *(_QWORD *)(v8 + 40) = v12;
  *(_QWORD *)(v8 + 96) = v13;
  *(_QWORD *)(v8 + 104) = v14;
  *(_QWORD *)(v8 + 64) = v14;
  *(_QWORD *)(v8 + 72) = a1;
  *(_QWORD *)(v8 + 80) = a2;
  swift_bridgeObjectRetain();
  sub_1DC408FE0();
  sub_1DC403F28();

  swift_bridgeObjectRelease();
  *(_QWORD *)(swift_allocObject() + 16) = a3;
  sub_1DC1EDB48(0);
  swift_retain();
  sub_1DC402E00();
  swift_release();
  sub_1DC08CBF0(0, &qword_1EDB2AEE0, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedServiceConfig, sub_1DC1D0ED8, MEMORY[0x1E0D5BBD8]);
  sub_1DC402D10();
  swift_release();
  v15 = (CFTimeInterval *)swift_allocObject();
  *((_QWORD *)v15 + 2) = a1;
  *((_QWORD *)v15 + 3) = a2;
  v15[4] = v6;
  swift_bridgeObjectRetain();
  sub_1DC402D10();
  swift_release();
  swift_release();
  v16 = (CFTimeInterval *)swift_allocObject();
  v16[2] = v6;
  *((_QWORD *)v16 + 3) = a1;
  *((_QWORD *)v16 + 4) = a2;
  swift_bridgeObjectRetain();
  v17 = (void *)sub_1DC402C80();
  v18 = sub_1DC402D40();
  swift_release();
  swift_release();

  return v18;
}

uint64_t sub_1DC1EC908(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v27 = a1;
  sub_1DC1EDB48(0);
  v28 = v3;
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (uint64_t *)((char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = sub_1DC400010();
  v25 = *(_QWORD *)(v7 - 8);
  v26 = v7;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1DC4010E4();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for StockFeedServiceContext();
  v15 = MEMORY[0x1E0C80A78](v14);
  v17 = (uint64_t *)((char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (a2)
  {
    v18 = swift_allocObject();
    *(_QWORD *)(v18 + 16) = a2;
    *v6 = v18;
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E0D5D100], v28);
    sub_1DC089DA4(0, &qword_1EDB274D8, (uint64_t (*)(uint64_t))sub_1DC1EDB48, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    swift_retain();
    return sub_1DC402D58();
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, __n128))(v11 + 16))(v13, v27 + OBJC_IVAR____TtC8StocksUI20StockFeedDataManager_stock, v10, v15);
    sub_1DC400004();
    v20 = sub_1DC3FFFF8();
    v22 = v21;
    (*(void (**)(char *, uint64_t))(v25 + 8))(v9, v26);
    *v17 = v20;
    v17[1] = v22;
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))((char *)v17 + *(int *)(v14 + 20), v13, v10);
    sub_1DC40730C();
    sub_1DC0926D8((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedServiceContext);
    v23 = (void *)sub_1DC402C80();
    v19 = sub_1DC402D04();
    swift_release();

  }
  return v19;
}

uint64_t sub_1DC1ECB80()
{
  type metadata accessor for StockFeedServiceConfig();
  sub_1DC1D0ED8();
  return sub_1DC407D5C();
}

uint64_t sub_1DC1ECBD4(uint64_t a1, uint64_t a2)
{
  __swift_project_boxed_opaque_existential_1((_QWORD *)(a2 + OBJC_IVAR____TtC8StocksUI20StockFeedDataManager_feedService), *(_QWORD *)(a2 + OBJC_IVAR____TtC8StocksUI20StockFeedDataManager_feedService + 24));
  type metadata accessor for StockFeedServiceProxy();
  return sub_1DC1C3F38();
}

uint64_t sub_1DC1ECC48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  void *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = qword_1EDB2CE08;
  swift_bridgeObjectRetain();
  swift_retain();
  if (v6 != -1)
    swift_once();
  v7 = (void *)qword_1EDB2CE00;
  sub_1DC0E7FF0();
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1DC411E20;
  v9 = v7;
  v10 = sub_1DC4010B4();
  v12 = v11;
  v13 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v8 + 56) = MEMORY[0x1E0DEA968];
  v14 = sub_1DC0E7FAC();
  *(_QWORD *)(v8 + 64) = v14;
  *(_QWORD *)(v8 + 32) = v10;
  *(_QWORD *)(v8 + 40) = v12;
  sub_1DC408E00();
  v15 = MEMORY[0x1E0DEB100];
  *(_QWORD *)(v8 + 96) = MEMORY[0x1E0DEB070];
  *(_QWORD *)(v8 + 104) = v15;
  *(_QWORD *)(v8 + 72) = v16;
  *(_QWORD *)(v8 + 136) = v13;
  *(_QWORD *)(v8 + 144) = v14;
  *(_QWORD *)(v8 + 112) = a3;
  *(_QWORD *)(v8 + 120) = a4;
  swift_bridgeObjectRetain();
  sub_1DC409808();
  *(_QWORD *)(v8 + 176) = v13;
  *(_QWORD *)(v8 + 184) = v14;
  *(_QWORD *)(v8 + 152) = 0;
  *(_QWORD *)(v8 + 160) = 0xE000000000000000;
  sub_1DC408FE0();
  sub_1DC403F28();

  swift_bridgeObjectRelease();
  sub_1DC0A0764(0, &qword_1EDB296C0);
  swift_allocObject();
  return sub_1DC402D58();
}

uint64_t sub_1DC1ECE30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;

  if (qword_1EDB2CE08 != -1)
    swift_once();
  v6 = (void *)qword_1EDB2CE00;
  sub_1DC0E7FF0();
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1DC411E20;
  v8 = v6;
  v9 = sub_1DC4010B4();
  v11 = v10;
  v12 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v7 + 56) = MEMORY[0x1E0DEA968];
  v13 = sub_1DC0E7FAC();
  *(_QWORD *)(v7 + 64) = v13;
  *(_QWORD *)(v7 + 32) = v9;
  *(_QWORD *)(v7 + 40) = v11;
  sub_1DC408E00();
  v14 = MEMORY[0x1E0DEB100];
  *(_QWORD *)(v7 + 96) = MEMORY[0x1E0DEB070];
  *(_QWORD *)(v7 + 104) = v14;
  *(_QWORD *)(v7 + 72) = v15;
  *(_QWORD *)(v7 + 136) = v12;
  *(_QWORD *)(v7 + 144) = v13;
  *(_QWORD *)(v7 + 112) = a3;
  *(_QWORD *)(v7 + 120) = a4;
  sub_1DC0A3390(0, (unint64_t *)&qword_1EDB400E0);
  swift_bridgeObjectRetain();
  sub_1DC409808();
  *(_QWORD *)(v7 + 176) = v12;
  *(_QWORD *)(v7 + 184) = v13;
  *(_QWORD *)(v7 + 152) = 0;
  *(_QWORD *)(v7 + 160) = 0xE000000000000000;
  sub_1DC408FE0();
  sub_1DC403F28();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1DC1ECFDC()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  double v21;
  double v22;
  void (*v23)(char *, uint64_t);
  double v24;
  double v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v0 = sub_1DC40070C();
  v26 = *(_QWORD *)(v0 - 8);
  v27 = v0;
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v26 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0BB2BC(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1DC3FFFEC();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v26 - v11;
  v13 = sub_1DC40793C();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC40133C();
  sub_1DC401324();
  if (qword_1EDB29050 != -1)
    swift_once();
  sub_1DC401318();
  swift_release();
  v17 = (*(uint64_t (**)(char *, uint64_t))(v14 + 88))(v16, v13);
  if (v17 == *MEMORY[0x1E0D5BC50])
  {
    v18 = v28;
    v19 = v28 + OBJC_IVAR____TtC8StocksUI20StockFeedDataManager_lastNewsRefreshDate;
    swift_beginAccess();
    sub_1DC0990BC(v19, (uint64_t)v5, (uint64_t (*)(_QWORD))sub_1DC0BB2BC);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
    {
      sub_1DC0926D8((uint64_t)v5, (uint64_t (*)(_QWORD))sub_1DC0BB2BC);
      return 0;
    }
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v12, v5, v6);
    sub_1DC3FFFE0();
    sub_1DC3FFF38();
    v22 = v21;
    v23 = *(void (**)(char *, uint64_t))(v7 + 8);
    v23(v9, v6);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v18 + OBJC_IVAR____TtC8StocksUI20StockFeedDataManager_appConfigurationManager), *(_QWORD *)(v18 + OBJC_IVAR____TtC8StocksUI20StockFeedDataManager_appConfigurationManager + 24));
    sub_1DC400DCC();
    sub_1DC4006DC();
    v25 = v24;
    (*(void (**)(char *, uint64_t))(v26 + 8))(v2, v27);
    v23(v12, v6);
    return v25 < v22;
  }
  else
  {
    if (v17 == *MEMORY[0x1E0D5BC58])
      return 0;
    if (v17 == *MEMORY[0x1E0D5BC48])
    {
      return 1;
    }
    else
    {
      result = sub_1DC4099DC();
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_1DC1ED2E0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;

  __swift_project_boxed_opaque_existential_1((_QWORD *)(a1 + OBJC_IVAR____TtC8StocksUI20StockFeedDataManager_priceDataManager), *(_QWORD *)(a1 + OBJC_IVAR____TtC8StocksUI20StockFeedDataManager_priceDataManager + 24));
  sub_1DC089DA4(0, (unint64_t *)&qword_1EDB3FE20, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF0D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v2 = sub_1DC4010E4();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1DC40DC10;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 16))(v5 + v4, a1 + OBJC_IVAR____TtC8StocksUI20StockFeedDataManager_stock, v2);
  v6 = sub_1DC400D24();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1DC1ED3E4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2 = sub_1DC400508();
  v3 = sub_1DC4010B4();
  if (*(_QWORD *)(v2 + 16) && (v5 = sub_1DC0ED368(v3, v4), (v6 & 1) != 0))
  {
    v7 = v5;
    v8 = *(_QWORD *)(v2 + 56);
    v9 = sub_1DC401030();
    v10 = *(_QWORD *)(v9 - 8);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v10 + 16))(a1, v8 + *(_QWORD *)(v10 + 72) * v7, v9);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v10 + 56))(a1, 0, 1, v9);
  }
  else
  {
    v11 = sub_1DC401030();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(a1, 1, 1, v11);
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DC1ED4D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t ObjectType;
  uint64_t v17;

  sub_1DC089DA4(0, &qword_1EDB28DC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF040], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v17 - v2;
  v4 = sub_1DC401030();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1DC400508();
  v9 = sub_1DC4010B4();
  if (*(_QWORD *)(v8 + 16) && (v11 = sub_1DC0ED368(v9, v10), (v12 & 1) != 0))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v5 + 16))(v3, *(_QWORD *)(v8 + 56) + *(_QWORD *)(v5 + 72) * v11, v4);
    v13 = 0;
  }
  else
  {
    v13 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, v13, 1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
    return sub_1DC0B091C((uint64_t)v3, &qword_1EDB28DC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF040]);
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v3, v4);
  if (MEMORY[0x1DF0CAD78](v0 + 16))
  {
    v15 = *(_QWORD *)(v0 + 24);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, _UNKNOWN **, char *, uint64_t, uint64_t))(v15 + 8))(v0, &off_1EA455DB0, v7, ObjectType, v15);
    swift_unknownObjectRelease();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1DC1ED6B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t ObjectType;
  void (*v23)(uint64_t, _UNKNOWN **, uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t, _UNKNOWN **, uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t result;
  _QWORD v33[2];
  char *v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  void (*v41)(char *, unint64_t, uint64_t);
  uint64_t v42;
  int v43;

  v1 = sub_1DC4010E4();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v33 - v6;
  sub_1DC08CBF0(0, (unint64_t *)&unk_1EDB42AE0, v8, sub_1DC1EDD04, MEMORY[0x1E0DB3B58]);
  v10 = v9;
  v11 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)v33 - v12;
  v14 = sub_1DC4004B4();
  v15 = *(_QWORD *)(v14 + 16);
  if (!v15)
    return swift_bridgeObjectRelease();
  v40 = v0 + OBJC_IVAR____TtC8StocksUI20StockFeedDataManager_stock;
  v36 = v0;
  v38 = v0 + 16;
  v16 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v33[1] = v14;
  v17 = v14 + v16;
  v43 = *MEMORY[0x1E0DB3B48];
  v39 = *MEMORY[0x1E0DB3B50];
  v37 = *MEMORY[0x1E0DB3B40];
  v18 = *(_QWORD *)(v11 + 72);
  v41 = *(void (**)(char *, unint64_t, uint64_t))(v11 + 16);
  v42 = v18;
  v34 = v4;
  v35 = v2;
  v41(v13, v14 + v16, v10);
  while (1)
  {
    v19 = (*(uint64_t (**)(char *, uint64_t))(v11 + 88))(v13, v10);
    if (v19 == v43)
    {
      (*(void (**)(char *, uint64_t))(v11 + 96))(v13, v10);
      (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v7, v13, v1);
      if ((MEMORY[0x1DF0C18C8](v7, v40) & 1) != 0)
      {
        if (MEMORY[0x1DF0CAD78](v38))
        {
          v20 = v36;
          v21 = *(_QWORD *)(v36 + 24);
          ObjectType = swift_getObjectType();
          v23 = *(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(v21 + 16);
          v24 = v20;
          v25 = v21;
          v4 = v34;
          v2 = v35;
          v23(v24, &off_1EA455DB0, 1, ObjectType, v25);
          swift_unknownObjectRelease();
        }
      }
      goto LABEL_3;
    }
    if (v19 != v39)
      break;
    (*(void (**)(char *, uint64_t))(v11 + 96))(v13, v10);
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v13, v1);
    if ((MEMORY[0x1DF0C18C8](v4, v40) & 1) != 0 && MEMORY[0x1DF0CAD78](v38))
    {
      v26 = v36;
      v27 = *(_QWORD *)(v36 + 24);
      v28 = swift_getObjectType();
      v29 = *(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(v27 + 16);
      v30 = v26;
      v31 = v27;
      v4 = v34;
      v2 = v35;
      v29(v30, &off_1EA455DB0, 2, v28, v31);
      swift_unknownObjectRelease();
    }
LABEL_3:
    (*(void (**)(void))(v2 + 8))();
    v17 += v42;
    if (!--v15)
      return swift_bridgeObjectRelease();
    v41(v13, v17, v10);
  }
  if (v19 == v37)
  {
    (*(void (**)(char *, uint64_t))(v11 + 96))(v13, v10);
    goto LABEL_3;
  }
  result = sub_1DC409838();
  __break(1u);
  return result;
}

uint64_t sub_1DC1EDA48()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_1DC4002BC();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_1DC1EDAA8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(sub_1DC4002BC() - 8) + 80);
  return sub_1DC1EB8EC(a1, v1 + ((v3 + 16) & ~v3));
}

uint64_t sub_1DC1EDAF0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1DC1EBACC(a1, a2, *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32));
}

uint64_t sub_1DC1EDB0C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1DC1EBCEC(a1, a2, *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32));
}

uint64_t sub_1DC1EDB30(uint64_t a1)
{
  uint64_t v1;

  return sub_1DC1EC908(a1, *(_QWORD *)(v1 + 16));
}

void sub_1DC1EDB48(uint64_t a1)
{
  sub_1DC08CBF0(a1, (unint64_t *)&unk_1EDB2AFD8, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedServiceConfig, sub_1DC1D0ED8, MEMORY[0x1E0D5D108]);
}

uint64_t sub_1DC1EDB6C()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1DC1EDB90(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1DC1ECC48(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_1DC1EDBAC()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1DC1EDBD0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1DC1ECE30(a1, a2, *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32));
}

uint64_t sub_1DC1EDBF8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DC1EDC1C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1DC1EB338(a1, a2, *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32));
}

uint64_t sub_1DC1EDC38(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1DC1EBCEC(a1, a2, *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32));
}

uint64_t sub_1DC1EDC5C(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void))
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    sub_1DC08CBF0(255, a2, a3, a4, MEMORY[0x1E0C958D0]);
    result = MEMORY[0x1DF0CAB8C](MEMORY[0x1E0C958E0], v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DC1EDCA8()
{
  uint64_t v0;

  return sub_1DC1EC168(v0);
}

uint64_t sub_1DC1EDCC0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1DC1EC47C(a1, a2, *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32));
}

uint64_t sub_1DC1EDCDC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1DC1ECE30(a1, a2, *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32));
}

uint64_t sub_1DC1EDD04()
{
  return sub_1DC080808(&qword_1EDB41DB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF0D0], MEMORY[0x1E0DAF060]);
}

id sub_1DC1EDD3C(char a1)
{
  void *v2;
  uint64_t *v3;
  void *v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  id v9;

  v2 = (void *)sub_1DC1EDEBC(a1);
  if ((a1 & 1) != 0)
  {
    if (qword_1F034ADA8 != -1)
      swift_once();
    v3 = &qword_1F03688E0;
  }
  else
  {
    if (qword_1EDB42140 != -1)
      swift_once();
    v3 = &qword_1EDB5E1D0;
  }
  v4 = (void *)*v3;
  sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FB00);
  v5 = v4;
  v6 = (void *)sub_1DC4092F8();
  v7 = objc_msgSend((id)objc_opt_self(), sel_configurationWithFont_scale_, v6, 1);

  v8 = objc_msgSend(v5, sel_imageWithConfiguration_, v7);
  v9 = objc_msgSend(v8, sel_imageWithTintColor_, v2);

  return v9;
}

uint64_t sub_1DC1EDEBC(char a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[3];
  uint64_t v11;
  uint64_t v12;

  v3 = v1[3];
  v4 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v3);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v4 + 72))(v10, v3, v4);
  v5 = v11;
  v6 = v12;
  __swift_project_boxed_opaque_existential_1(v10, v11);
  if ((a1 & 1) != 0)
    v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 120))(v5, v6);
  else
    v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 128))(v5, v6);
  v8 = v7;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  return v8;
}

uint64_t sub_1DC1EDF78(void *a1, char a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t *v20;
  void *v21;
  id v22;
  void *v23;
  void *v24;
  id v25;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  id v33;
  id v34;
  void *v35;
  id v36;
  id v37;
  void (*v38)(_QWORD *, _QWORD);
  void (*v39)(_QWORD *, _QWORD);
  void (*v40)(_QWORD *, _QWORD);
  uint64_t v41;
  uint64_t v42;
  char *v43;
  id v45;
  id v46;
  uint64_t v47;
  _QWORD *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  id v58;
  _QWORD v59[3];
  uint64_t v60;
  uint64_t v61;

  v3 = v2;
  v58 = a1;
  sub_1DC089DA4(0, (unint64_t *)&qword_1EDB3FBF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC3228], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v5);
  v57 = (char *)&v45 - v6;
  v7 = sub_1DC409478();
  v53 = *(_QWORD *)(v7 - 8);
  v54 = v7;
  MEMORY[0x1E0C80A78](v7);
  v52 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = sub_1DC4094E4();
  v50 = *(_QWORD *)(v51 - 8);
  MEMORY[0x1E0C80A78](v51);
  v49 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = (_QWORD *)sub_1DC409424();
  v47 = *(v48 - 1);
  MEMORY[0x1E0C80A78](v48);
  v11 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1DC40952C();
  v55 = *(_QWORD *)(v12 - 8);
  v56 = v12;
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
  {
    v46 = objc_msgSend((id)objc_opt_self(), sel_clearColor);
  }
  else
  {
    v15 = v2[3];
    v16 = v2[4];
    __swift_project_boxed_opaque_existential_1(v2, v15);
    (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v16 + 72))(v59, v15, v16);
    v17 = v60;
    v18 = v61;
    __swift_project_boxed_opaque_existential_1(v59, v60);
    v46 = (id)(*(uint64_t (**)(uint64_t, uint64_t))(v18 + 120))(v17, v18);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v59);
  }
  v45 = (id)sub_1DC1EDEBC(a2 & 1);
  v19 = (void *)sub_1DC1EDEBC(a2 & 1);
  if ((a2 & 1) != 0)
  {
    if (qword_1F034ADA8 != -1)
      swift_once();
    v20 = &qword_1F03688E0;
  }
  else
  {
    if (qword_1EDB42140 != -1)
      swift_once();
    v20 = &qword_1EDB5E1D0;
  }
  v21 = (void *)*v20;
  sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FB00);
  v22 = v21;
  v23 = (void *)sub_1DC4092F8();
  v24 = (void *)objc_opt_self();
  v25 = objc_msgSend(v24, sel_configurationWithFont_scale_, v23, 1);

  v26 = objc_msgSend(v22, sel_imageWithConfiguration_, v25);
  v27 = objc_msgSend(v26, sel_imageWithTintColor_, v19);

  v28 = v3[3];
  v29 = v3[4];
  __swift_project_boxed_opaque_existential_1(v3, v28);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v29 + 72))(v59, v28, v29);
  v30 = v60;
  v31 = v61;
  __swift_project_boxed_opaque_existential_1(v59, v60);
  v32 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v31 + 120))(v30, v31);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v59);
  objc_msgSend(v58, sel_setPreferredBehavioralStyle_, 1);
  sub_1DC409520();
  sub_1DC40946C();
  (*(void (**)(char *, _QWORD, _QWORD *))(v47 + 104))(v11, *MEMORY[0x1E0DC3068], v48);
  sub_1DC409430();
  v48 = v46;
  sub_1DC4094B4();
  v33 = v45;
  sub_1DC4094C0();
  (*(void (**)(char *, _QWORD, uint64_t))(v50 + 104))(v49, *MEMORY[0x1E0DC3190], v51);
  sub_1DC409418();
  (*(void (**)(char *, _QWORD, uint64_t))(v53 + 104))(v52, *MEMORY[0x1E0DC30D0], v54);
  sub_1DC409490();
  v34 = v27;
  sub_1DC409508();
  sub_1DC409484();
  v35 = (void *)sub_1DC4092F8();
  v36 = objc_msgSend(v24, sel_configurationWithFont_scale_, v35, 1);

  sub_1DC409400();
  v37 = v32;
  v38 = (void (*)(_QWORD *, _QWORD))sub_1DC40940C();
  sub_1DC406EB0();
  v38(v59, 0);
  v39 = (void (*)(_QWORD *, _QWORD))sub_1DC40940C();
  sub_1DC406EBC();
  v39(v59, 0);
  v40 = (void (*)(_QWORD *, _QWORD))sub_1DC40940C();
  sub_1DC406EC8();
  v40(v59, 0);
  v42 = v55;
  v41 = v56;
  v43 = v57;
  (*(void (**)(char *, char *, uint64_t))(v55 + 16))(v57, v14, v56);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v43, 0, 1, v41);
  sub_1DC409544();

  return (*(uint64_t (**)(char *, uint64_t))(v42 + 8))(v14, v41);
}

id sub_1DC1EE5EC(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t inited;
  void *v5;
  uint64_t v6;
  id v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  void *v15;
  void *v16;
  id v17;

  sub_1DC089DA4(0, (unint64_t *)&qword_1EDB40090, (uint64_t (*)(uint64_t))sub_1DC112C08, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DC40FA70;
  v5 = (void *)*MEMORY[0x1E0DC1138];
  *(_QWORD *)(inited + 32) = *MEMORY[0x1E0DC1138];
  v6 = sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FB00);
  swift_bridgeObjectRetain();
  v7 = v5;
  *(_QWORD *)(inited + 40) = sub_1DC4092F8();
  v8 = (void *)*MEMORY[0x1E0DC1140];
  *(_QWORD *)(inited + 64) = v6;
  *(_QWORD *)(inited + 72) = v8;
  v9 = v8;
  v10 = sub_1DC1EDEBC(a3);
  v11 = sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FB30);
  *(_QWORD *)(inited + 80) = v10;
  v12 = (void *)*MEMORY[0x1E0DC1150];
  *(_QWORD *)(inited + 104) = v11;
  *(_QWORD *)(inited + 112) = v12;
  *(_QWORD *)(inited + 144) = MEMORY[0x1E0DEB070];
  *(_QWORD *)(inited + 120) = 0xBFD51EB851EB851FLL;
  v13 = v12;
  sub_1DC0FA3C4(inited);
  v14 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  v15 = (void *)sub_1DC408A1C();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1DC0FB14C();
  v16 = (void *)sub_1DC408980();
  swift_bridgeObjectRelease();
  v17 = objc_msgSend(v14, sel_initWithString_attributes_, v15, v16);

  return v17;
}

double sub_1DC1EE7F4()
{
  return 5.0;
}

double sub_1DC1EE808()
{
  return 72.0;
}

uint64_t sub_1DC1EE81C(void *a1, char a2)
{
  return sub_1DC1EDF78(a1, a2);
}

ValueMetadata *type metadata accessor for AddButtonStyler()
{
  return &type metadata for AddButtonStyler;
}

void sub_1DC1EE844(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v27 = a2;
  v28 = a3;
  v4 = sub_1DC4034C0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC1EEAC0();
  v9 = v8;
  v10 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1DC401564();
  v14 = MEMORY[0x1E0C80A78](v13);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v15 + 16))((char *)&v25 - v16, a1, v13, v14);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v26 = v4;
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    v17 = (void *)sub_1DC40154C();
    v18 = v29;
    v19 = sub_1DC4017B0();
    v21 = v20;

    if (!v18)
    {
      sub_1DC080808(&qword_1EDB29840, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD5B0], MEMORY[0x1E0DAD5C0]);
      sub_1DC402458();
      sub_1DC1D565C(v19, v21);
      v22 = v28;
      (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v28, v7, v26);
      v23 = type metadata accessor for EngagementEvent();
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v22, 0, 1, v23);
    }
  }
  else
  {
    v24 = type metadata accessor for EngagementEvent();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v28, 1, 1, v24);
  }
}

uint64_t type metadata accessor for AppSessionEndEventTranslator()
{
  return objc_opt_self();
}

void sub_1DC1EEAAC(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_1DC1EE844(a1, a2, a3);
}

void sub_1DC1EEAC0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB274A8)
  {
    sub_1DC4034CC();
    sub_1DC080808(&qword_1EDB29848, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD5C8], MEMORY[0x1E0DAD5A0]);
    v0 = sub_1DC401564();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB274A8);
  }
}

uint64_t sub_1DC1EEB38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t ObjCClassFromMetadata;
  id v16;
  void *v17;
  id v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  __int128 v24;
  __int128 v25;

  v0 = sub_1DC404C54();
  v21 = *(_QWORD *)(v0 - 8);
  v22 = v0;
  MEMORY[0x1E0C80A78](v0);
  v23 = (char *)&v20 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_1DC407E10();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1DC407F54();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1DC40814C();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC1A76B0();
  MEMORY[0x1E0C80A78](v14);
  v20 = sub_1DC4069E8();
  (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v13, *MEMORY[0x1E0D5E7A8], v10);
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E0D5DBC8], v6);
  v24 = 0u;
  v25 = 0u;
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0D5D4B8], v2);
  sub_1DC40808C();
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v16 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1DC3FFC80();

  if (qword_1F034AE08 != -1)
    swift_once();
  v17 = (void *)qword_1F0368930;
  (*(void (**)(char *, _QWORD, uint64_t))(v21 + 104))(v23, *MEMORY[0x1E0DB8530], v22);
  sub_1DC40463C();
  swift_allocObject();
  v18 = v17;
  return sub_1DC4045E8();
}

uint64_t sub_1DC1EEE40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t ObjCClassFromMetadata;
  id v16;
  void *v17;
  uint64_t v18;
  id v19;
  _QWORD v21[2];

  v6 = sub_1DC404C54();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC1EF064();
  v11 = v10;
  v12 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21[1] = sub_1DC406A60();
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a1, v11);
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v16 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1DC3FFC80();

  if (qword_1F034AE00 != -1)
    swift_once();
  v17 = (void *)qword_1F0368928;
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = a2;
  *(_QWORD *)(v18 + 24) = a3;
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E0DB8530], v6);
  sub_1DC40463C();
  swift_allocObject();
  v19 = v17;
  sub_1DC113F04(a2);
  return sub_1DC4045E8();
}

void sub_1DC1EF064()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB2B090)
  {
    sub_1DC112C9C();
    v0 = sub_1DC4080D4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB2B090);
  }
}

uint64_t sub_1DC1EF0B8()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DC1EF0E4()
{
  uint64_t v0;
  uint64_t (*v1)(_QWORD);
  uint64_t result;

  v1 = *(uint64_t (**)(_QWORD))(v0 + 16);
  if (v1)
    return v1(0);
  return result;
}

uint64_t sub_1DC1EF114(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for StockFeedWatchStateChangeBlueprintModifier(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for StockFeedWatchStateChangeBlueprintModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for StockFeedWatchStateChangeBlueprintModifier(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 17))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for StockFeedWatchStateChangeBlueprintModifier(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 17) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for StockFeedWatchStateChangeBlueprintModifier()
{
  return &type metadata for StockFeedWatchStateChangeBlueprintModifier;
}

uint64_t sub_1DC1EF284(uint64_t a1, void (*a2)(char *), uint64_t a3)
{
  uint64_t v3;

  return sub_1DC1F0750(a1, a2, a3, *(unsigned __int8 *)(v3 + 16));
}

unint64_t sub_1DC1EF290()
{
  unint64_t result;

  result = qword_1F034E5F8;
  if (!qword_1F034E5F8)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC41713C, &type metadata for StockFeedWatchStateChangeBlueprintModifier);
    atomic_store(result, (unint64_t *)&qword_1F034E5F8);
  }
  return result;
}

uint64_t sub_1DC1EF2D4(uint64_t a1, int a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(void);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, _QWORD);
  char *v41;
  _QWORD v43[7];
  uint64_t v44;
  char *v45;
  int v46;
  char *v47;
  char *v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  char *v53;
  char *v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  char v65[24];
  uint64_t v66;

  v46 = a2;
  v3 = sub_1DC4002BC();
  MEMORY[0x1E0C80A78](v3);
  v45 = (char *)v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = type metadata accessor for QuoteSummaryViewModel();
  MEMORY[0x1E0C80A78](v44);
  v43[6] = (char *)v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = sub_1DC4008EC();
  v59 = *(_QWORD *)(v52 - 8);
  MEMORY[0x1E0C80A78](v52);
  v43[5] = (char *)v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v54 = (char *)v43 - v8;
  sub_1DC092F50(0, (unint64_t *)&unk_1EDB28D90, (void (*)(uint64_t))MEMORY[0x1E0DAEFA8]);
  MEMORY[0x1E0C80A78](v9);
  v43[4] = (char *)v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v53 = (char *)v43 - v12;
  sub_1DC092F50(0, &qword_1EDB28DC0, (void (*)(uint64_t))MEMORY[0x1E0DAF040]);
  MEMORY[0x1E0C80A78](v13);
  v51 = (char *)v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v56 = (char *)v43 - v16;
  v17 = sub_1DC4010E4();
  v18 = *(_QWORD *)(v17 - 8);
  v61 = v17;
  v62 = v18;
  MEMORY[0x1E0C80A78](v17);
  v50 = (char *)v43 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v55 = (char *)v43 - v21;
  v49 = type metadata accessor for StockFeedMastheadModel();
  MEMORY[0x1E0C80A78](v49);
  v48 = (char *)v43 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v23);
  v47 = (char *)v43 - v24;
  v60 = type metadata accessor for StockFeedModel();
  MEMORY[0x1E0C80A78](v60);
  v43[3] = (char *)v43 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v26);
  v28 = (char *)v43 - v27;
  sub_1DC142200();
  v30 = *(_QWORD *)(v29 - 8);
  MEMORY[0x1E0C80A78](v29);
  v32 = (char *)v43 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v33);
  v63 = (char *)v43 - v34;
  v35 = MEMORY[0x1E0DB7B60];
  sub_1DC165EEC(0, (unint64_t *)&qword_1EDB29D60, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60]);
  v37 = v36;
  v64 = sub_1DC165EAC((unint64_t *)&unk_1EDB29D50, (unint64_t *)&qword_1EDB29D60, (uint64_t (*)(uint64_t, _QWORD *))v35, MEMORY[0x1E0DB7B98]);
  v38 = sub_1DC408EC0();
  if (v38)
  {
    v39 = v38;
    v66 = MEMORY[0x1E0DEE9D8];
    sub_1DC2AD2FC(0, v38 & ~(v38 >> 63), 0);
    sub_1DC408E90();
    if ((v39 & 0x8000000000000000) == 0)
    {
      v57 = v37;
      v58 = a1;
      v43[2] = v28;
      v40 = (void (*)(char *, _QWORD))sub_1DC408EF0();
      (*(void (**)(char *))(v30 + 16))(v32);
      v40(v65, 0);
      sub_1DC404354();
      v41 = (char *)&loc_1DC1EF740 + dword_1DC1EFC3C[swift_getEnumCaseMultiPayload()];
      __asm { BR              X9 }
    }
    __break(1u);
    JUMPOUT(0x1DC1EFC3CLL);
  }
  return MEMORY[0x1E0DEE9D8];
}

uint64_t sub_1DC1EFC68(uint64_t a1, int a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(void);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(_BYTE *, _QWORD);
  char *v40;
  _QWORD v42[3];
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  char *v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  char *v61;
  uint64_t v62;
  char *v63;
  int v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _BYTE v70[8];
  uint64_t v71;

  v64 = a2;
  sub_1DC142434();
  MEMORY[0x1E0C80A78](v3);
  v63 = (char *)v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1DC4002BC();
  MEMORY[0x1E0C80A78](v5);
  v44 = (char *)v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = type metadata accessor for QuoteSummaryViewModel();
  MEMORY[0x1E0C80A78](v43);
  v42[2] = (char *)v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = sub_1DC4008EC();
  v8 = *(_QWORD *)(v62 - 8);
  MEMORY[0x1E0C80A78](v62);
  v42[1] = (char *)v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v61 = (char *)v42 - v11;
  sub_1DC092F50(0, (unint64_t *)&unk_1EDB28D90, (void (*)(uint64_t))MEMORY[0x1E0DAEFA8]);
  MEMORY[0x1E0C80A78](v12);
  v42[0] = (char *)v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v52 = (char *)v42 - v15;
  sub_1DC092F50(0, &qword_1EDB28DC0, (void (*)(uint64_t))MEMORY[0x1E0DAF040]);
  MEMORY[0x1E0C80A78](v16);
  v51 = (char *)v42 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v55 = (char *)v42 - v19;
  v54 = sub_1DC4010E4();
  v50 = *(_QWORD *)(v54 - 8);
  MEMORY[0x1E0C80A78](v54);
  v49 = (char *)v42 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v53 = (char *)v42 - v22;
  v48 = type metadata accessor for StockFeedMastheadModel();
  MEMORY[0x1E0C80A78](v48);
  v47 = (char *)v42 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v24);
  v46 = (char *)v42 - v25;
  v69 = type metadata accessor for StockFeedSectionDescriptor();
  MEMORY[0x1E0C80A78](v69);
  v60 = (char *)v42 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v27);
  v65 = (char *)v42 - v28;
  MEMORY[0x1E0C80A78](v29);
  sub_1DC165EEC(0, (unint64_t *)&qword_1EDB29D60, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60]);
  v31 = *(_QWORD *)(v30 - 8);
  MEMORY[0x1E0C80A78](v30);
  v59 = (char *)v42 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v33);
  v66 = (char *)v42 - v34;
  v35 = MEMORY[0x1E0DBC790];
  sub_1DC165EEC(0, (unint64_t *)&qword_1EDB2AB10, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790]);
  v37 = v36;
  v68 = sub_1DC165EAC((unint64_t *)&unk_1EDB2AB00, (unint64_t *)&qword_1EDB2AB10, (uint64_t (*)(uint64_t, _QWORD *))v35, MEMORY[0x1E0DBC7C8]);
  v38 = sub_1DC408EC0();
  if (v38)
  {
    v71 = MEMORY[0x1E0DEE9D8];
    v67 = v38;
    sub_1DC2AD4E8(0, v38 & ~(v38 >> 63), 0);
    sub_1DC408E90();
    if ((v67 & 0x8000000000000000) == 0)
    {
      v58 = a1;
      v45 = v8;
      v56 = v37;
      v57 = v31;
      if (v67)
      {
        v39 = (void (*)(_BYTE *, _QWORD))sub_1DC408EF0();
        (*(void (**)(char *))(v31 + 16))(v59);
        v39(v70, 0);
        sub_1DC4046FC();
        v40 = (char *)&loc_1DC1F0160 + *((int *)qword_1DC1F0730 + swift_getEnumCaseMultiPayload());
        __asm { BR              X9 }
      }
      __break(1u);
    }
    __break(1u);
    JUMPOUT(0x1DC1F0730);
  }
  return MEMORY[0x1E0DEE9D8];
}

uint64_t sub_1DC1F0750(uint64_t a1, void (*a2)(char *), uint64_t a3, int a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(void);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD v32[3];
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *);
  __int128 v38;
  __int128 v39;

  v36 = a3;
  v37 = a2;
  sub_1DC165EEC(0, &qword_1EDB2A278, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB9A28]);
  v34 = *(_QWORD *)(v6 - 8);
  v35 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v32 - v7;
  sub_1DC165DE8();
  MEMORY[0x1E0C80A78](v9);
  sub_1DC165EEC(0, (unint64_t *)&qword_1EDB2AB10, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790]);
  v11 = v10;
  v33 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v32 - v12;
  v14 = sub_1DC406C70();
  v32[1] = v15;
  v32[2] = v14;
  v16 = sub_1DC1EFC68(a1, a4);
  v17 = MEMORY[0x1E0DB7B60];
  sub_1DC165EEC(0, (unint64_t *)&qword_1EDB29D60, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60]);
  v19 = v18;
  v20 = sub_1DC165EAC(&qword_1EDB29D48, (unint64_t *)&qword_1EDB29D60, (uint64_t (*)(uint64_t, _QWORD *))v17, MEMORY[0x1E0DB7B88]);
  v21 = sub_1DC165EAC(&qword_1EDB29D40, (unint64_t *)&qword_1EDB29D60, (uint64_t (*)(uint64_t, _QWORD *))v17, MEMORY[0x1E0DB7B80]);
  MEMORY[0x1DF0C311C](v16, v19, v20, v21);
  type metadata accessor for StockFeedSectionDescriptor();
  type metadata accessor for StockFeedModel();
  sub_1DC080808(&qword_1EDB36EE0, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedSectionDescriptor, (uint64_t)&unk_1DC4167B0);
  sub_1DC080808(&qword_1EDB2D770, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedModel, (uint64_t)&unk_1DC429058);
  sub_1DC406C64();
  v22 = sub_1DC1581D0();
  sub_1DC4078A0();
  sub_1DC407894();
  type metadata accessor for StockFeedServiceConfig();
  sub_1DC080808(&qword_1EDB33F10, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedServiceConfig, (uint64_t)&unk_1DC411510);
  v23 = sub_1DC40787C();
  swift_release();
  if (v23)
  {
    *((_QWORD *)&v39 + 1) = sub_1DC407420();
    *(_QWORD *)&v38 = v23;
  }
  else
  {
    v38 = 0u;
    v39 = 0u;
  }
  sub_1DC406D00();
  sub_1DC1F0AAC(v22);
  sub_1DC19E06C();
  v25 = &v8[*(int *)(v24 + 48)];
  v26 = v33;
  (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v8, v13, v11);
  v27 = *MEMORY[0x1E0DB7FB8];
  v28 = sub_1DC404984();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 104))(v25, v27, v28);
  v30 = v34;
  v29 = v35;
  (*(void (**)(char *, _QWORD, uint64_t))(v34 + 104))(v8, *MEMORY[0x1E0DB9A00], v35);
  v37(v8);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v8, v29);
  return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v13, v11);
}

uint64_t sub_1DC1F0AAC(uint64_t result)
{
  if ((~result & 0xF000000000000007) != 0)
    return swift_release();
  return result;
}

uint64_t sub_1DC1F0AC4(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  void *v3;
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  void *v8;

  v1 = a1 + 16;
  swift_beginAccess();
  result = MEMORY[0x1DF0CAD78](v1);
  if (result)
  {
    v3 = (void *)result;
    v4 = (void *)MEMORY[0x1DF0CAD78](result + OBJC_IVAR____TtC8StocksUI25StockSearchViewController_searchBar);
    v5 = v4;
    if (v4)
    {
      v6 = objc_msgSend(v4, sel_text);

      if (v6)
      {
        v7 = sub_1DC408A4C();
        v5 = v8;

      }
      else
      {
        v7 = 0;
        v5 = 0;
      }
    }
    else
    {
      v7 = 0;
    }
    sub_1DC1F0B90(v7, (uint64_t)v5);

    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1DC1F0B90(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  void (*v20)(char *, unint64_t, uint64_t);
  void (*v21)(char *, uint64_t, uint64_t, uint64_t);
  void *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t ObjectType;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v5 = type metadata accessor for StockSearchMode(0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1DC400280();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0D8B60(0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = v2;
  v36 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8StocksUI25StockSearchViewController_blueprintViewController);
  sub_1DC4055CC();
  v15 = (void *)sub_1DC405074();
  swift_release();
  v16 = objc_msgSend(v15, sel_indexPathsForSelectedItems);

  v33 = a1;
  if (v16)
  {
    v17 = sub_1DC408CD4();

  }
  else
  {
    v17 = MEMORY[0x1E0DEE9D8];
  }
  v18 = *(_QWORD *)(v17 + 16);
  v34 = a2;
  v32 = v7;
  v30 = v17;
  if (v18)
  {
    v19 = v17 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    v35 = *(_QWORD *)(v9 + 72);
    v20 = *(void (**)(char *, unint64_t, uint64_t))(v9 + 16);
    while (1)
    {
      v20(v14, v19, v8);
      v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      v21(v14, 0, 1, v8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v14, 1, v8) == 1)
        break;
      (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v14, v8);
      sub_1DC4055CC();
      v22 = (void *)sub_1DC405074();
      swift_release();
      v23 = (void *)sub_1DC40022C();
      objc_msgSend(v22, sel_deselectItemAtIndexPath_animated_, v23, 0, v30);

      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      v19 += v35;
      if (!--v18)
        goto LABEL_10;
    }
  }
  else
  {
    v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
LABEL_10:
    v21(v14, 1, 1, v8);
  }
  swift_bridgeObjectRelease();
  v24 = *(_QWORD *)(v31 + OBJC_IVAR____TtC8StocksUI25StockSearchViewController_eventHandler);
  v25 = v31 + OBJC_IVAR____TtC8StocksUI25StockSearchViewController_stockSearchMode;
  swift_beginAccess();
  v26 = (uint64_t)v32;
  sub_1DC0990BC(v25, (uint64_t)v32, type metadata accessor for StockSearchMode);
  v27 = *(_QWORD *)(v24 + 40);
  ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v27 + 72))(v33, v34, v26, ObjectType, v27);
  return sub_1DC0926D8(v26, type metadata accessor for StockSearchMode);
}

uint64_t sub_1DC1F1074()
{
  return type metadata accessor for StockSearchViewController(0);
}

id sub_1DC1F107C()
{
  char *v0;
  char *v1;
  void *v2;
  id result;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  void *v16;
  id v17;
  uint64_t v18;
  void *v19;
  uint64_t ObjCClassFromMetadata;
  id v21;
  void *v22;
  char v23[40];
  objc_super v24;

  v1 = v0;
  v24.receiver = v0;
  v24.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v24, sel_viewDidLoad);
  v2 = *(void **)&v0[OBJC_IVAR____TtC8StocksUI25StockSearchViewController_blueprintViewController];
  objc_msgSend(v0, sel_addChildViewController_, v2);
  result = objc_msgSend(v0, sel_view);
  if (!result)
  {
    __break(1u);
    goto LABEL_9;
  }
  v4 = result;
  result = objc_msgSend(v2, sel_view);
  if (!result)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v5 = result;
  objc_msgSend(v4, sel_addSubview_, result);

  objc_msgSend(v2, sel_didMoveToParentViewController_, v1);
  result = objc_msgSend(v2, sel_view);
  if (!result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v6 = result;
  result = objc_msgSend(v1, sel_view);
  if (!result)
  {
LABEL_11:
    __break(1u);
    return result;
  }
  v7 = result;
  objc_msgSend(result, sel_bounds);
  v9 = v8;
  v11 = v10;
  v13 = v12;
  v15 = v14;

  objc_msgSend(v6, sel_setFrame_, v9, v11, v13, v15);
  sub_1DC4055CC();
  v16 = (void *)sub_1DC405074();
  swift_release();
  objc_msgSend(v16, sel_setSelectionFollowsFocus_, 1);

  v17 = objc_msgSend(v1, sel_traitCollection);
  sub_1DC1F1398((uint64_t)v17);

  v18 = MEMORY[0x1DF0CAD78](&v1[OBJC_IVAR____TtC8StocksUI25StockSearchViewController_searchBar]);
  if (v18)
  {
    v19 = (void *)v18;
    type metadata accessor for Localized();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    v21 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
    sub_1DC3FFC80();

    v22 = (void *)sub_1DC408A1C();
    swift_bridgeObjectRelease();
    objc_msgSend(v19, sel_setCancelButtonText_, v22, 0x80000001DC43B2E0);

  }
  sub_1DC4055E4();
  sub_1DC404A08();
  swift_release();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1DC40274C();
  swift_release();
  swift_release();
  return (id)__swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
}

id sub_1DC1F1398(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  _QWORD *v9;
  id result;
  void *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[3];
  uint64_t v21;
  uint64_t v22;

  v2 = v1;
  v4 = (uint64_t)v2 + OBJC_IVAR____TtC8StocksUI25StockSearchViewController_styler;
  swift_beginAccess();
  sub_1DC0824D4(v4, (uint64_t)v20);
  v5 = v21;
  v6 = v22;
  __swift_project_boxed_opaque_existential_1(v20, v21);
  v7 = *(_QWORD *)(v6 + 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 8);
  v18 = v5;
  v19 = v6;
  __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v17);
  v8(a1, v5, v7);
  swift_beginAccess();
  __swift_destroy_boxed_opaque_existential_1(v4);
  sub_1DC097DD0(&v17, v4);
  swift_endAccess();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  sub_1DC0824D4(v4, (uint64_t)v20);
  v9 = __swift_project_boxed_opaque_existential_1(v20, v21);
  result = objc_msgSend(v2, sel_view);
  if (result)
  {
    v11 = result;
    v12 = (_QWORD *)(*v9 + 16);
    v14 = *(_QWORD *)(*v9 + 40);
    v13 = *(_QWORD *)(*v9 + 48);
    __swift_project_boxed_opaque_existential_1(v12, v14);
    v15 = (void *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)(v13 + 16) + 64))(v14);
    objc_msgSend(v11, sel_setBackgroundColor_, v15);

    __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
    sub_1DC0824D4(v4, (uint64_t)v20);
    __swift_project_boxed_opaque_existential_1(v20, v21);
    sub_1DC4055CC();
    v16 = (void *)sub_1DC405074();
    swift_release();
    sub_1DC289040(v16);

    return (id)__swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC1F1564(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;

  v2 = a2 + 16;
  swift_beginAccess();
  result = MEMORY[0x1DF0CAD78](v2);
  if (result)
  {
    v4 = (void *)result;
    v5 = *(_QWORD *)(result + OBJC_IVAR____TtC8StocksUI25StockSearchViewController_eventHandler);
    swift_unknownObjectRetain();

    v6 = *(_QWORD *)(v5 + 40);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v6 + 88))(ObjectType, v6);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1DC1F17A0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t ObjectType;
  uint64_t v16;

  v3 = type metadata accessor for StockSearchMode(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = v1 + OBJC_IVAR____TtC8StocksUI25StockSearchViewController_stockSearchMode;
  swift_beginAccess();
  sub_1DC1F386C(a1, v6);
  swift_endAccess();
  v7 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8StocksUI25StockSearchViewController_eventHandler);
  v8 = (void *)MEMORY[0x1DF0CAD78](v1 + OBJC_IVAR____TtC8StocksUI25StockSearchViewController_searchBar);
  v9 = v8;
  if (v8)
  {
    v10 = objc_msgSend(v8, sel_text);

    if (v10)
    {
      v11 = sub_1DC408A4C();
      v9 = v12;

    }
    else
    {
      v11 = 0;
      v9 = 0;
    }
  }
  else
  {
    v11 = 0;
  }
  sub_1DC0990BC(v6, (uint64_t)v5, type metadata accessor for StockSearchMode);
  v13 = *(_QWORD *)(v7 + 40);
  ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, void *, char *, uint64_t, uint64_t))(v13 + 72))(v11, v9, v5, ObjectType, v13);
  swift_bridgeObjectRelease();
  return sub_1DC0926D8((uint64_t)v5, type metadata accessor for StockSearchMode);
}

uint64_t sub_1DC1F1908(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t *v10;
  char *v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v20[2];
  uint64_t v21;

  v21 = sub_1DC406D78();
  v2 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  v4 = (char *)v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1DC406D84();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20[1] = sub_1DC4055B4();
  sub_1DC1F3790();
  v10 = (uint64_t *)&v8[*(int *)(v9 + 48)];
  v11 = &v8[*(int *)(v9 + 64)];
  sub_1DC407E4C();
  v12 = (_QWORD *)(a1 + OBJC_IVAR____TtC8StocksUI25StockSearchViewController_styler);
  swift_beginAccess();
  v13 = __swift_project_boxed_opaque_existential_1(v12, v12[3]);
  v14 = *(_QWORD *)(*v13 + 40);
  v15 = *(_QWORD *)(*v13 + 48);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(*v13 + 16), v14);
  sub_1DC3A5558(v14, v15, v10);
  v16 = *MEMORY[0x1E0DB6F70];
  v17 = sub_1DC404390();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v11, v16, v17);
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0DBC800], v5);
  v18 = v21;
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E0DBC808], v21);
  sub_1DC4048E8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v18);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1DC1F1AF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v22;

  v4 = sub_1DC406D78();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1DC406D84();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC4055B4();
  sub_1DC1F3790();
  v13 = (uint64_t *)&v11[*(int *)(v12 + 48)];
  v22 = &v11[*(int *)(v12 + 64)];
  v14 = sub_1DC4040D8();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v11, a2, v14);
  v15 = (_QWORD *)(a1 + OBJC_IVAR____TtC8StocksUI25StockSearchViewController_styler);
  swift_beginAccess();
  v16 = __swift_project_boxed_opaque_existential_1(v15, v15[3]);
  v17 = *(_QWORD *)(*v16 + 40);
  v18 = *(_QWORD *)(*v16 + 48);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(*v16 + 16), v17);
  sub_1DC3A5558(v17, v18, v13);
  v19 = *MEMORY[0x1E0DB6F70];
  v20 = sub_1DC404390();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v22, v19, v20);
  (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E0DBC800], v8);
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DBC808], v4);
  sub_1DC4048E8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_1DC1F1CFC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v10;
  uint64_t result;
  uint64_t v12;

  v2 = sub_1DC406D78();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1DC406D84();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC4055B4();
  v10 = sub_1DC4048DC();
  swift_release();
  if ((v10 & 1) != 0)
  {
    sub_1DC4055B4();
    (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E0DBC7E8], v6);
    (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DBC808], v2);
    sub_1DC4048E8();
    swift_release();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  result = MEMORY[0x1DF0CAD78](a1 + OBJC_IVAR____TtC8StocksUI25StockSearchViewController_delegate);
  if (result)
  {
    sub_1DC304CD8(a1);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1DC1F1E80(uint64_t a1)
{
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t ObjectType;
  uint64_t v16;

  v2 = type metadata accessor for StockSearchMode(0);
  v3 = MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8StocksUI25StockSearchViewController_eventHandler);
  v7 = (void *)MEMORY[0x1DF0CAD78](a1 + OBJC_IVAR____TtC8StocksUI25StockSearchViewController_searchBar, v3);
  v8 = v7;
  if (v7)
  {
    v9 = objc_msgSend(v7, sel_text);

    if (v9)
    {
      v10 = sub_1DC408A4C();
      v8 = v11;

    }
    else
    {
      v10 = 0;
      v8 = 0;
    }
  }
  else
  {
    v10 = 0;
  }
  v12 = a1 + OBJC_IVAR____TtC8StocksUI25StockSearchViewController_stockSearchMode;
  swift_beginAccess();
  sub_1DC0990BC(v12, (uint64_t)v5, type metadata accessor for StockSearchMode);
  v13 = *(_QWORD *)(v6 + 40);
  ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, void *, char *, uint64_t, uint64_t))(v13 + 72))(v10, v8, v5, ObjectType, v13);
  swift_bridgeObjectRelease();
  return sub_1DC0926D8((uint64_t)v5, type metadata accessor for StockSearchMode);
}

uint64_t sub_1DC1F1FCC()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v5;

  v0 = type metadata accessor for StockSearchMode(0);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v5 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1DC40124C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  sub_1DC1F17A0((uint64_t)v2);
  return sub_1DC0926D8((uint64_t)v2, type metadata accessor for StockSearchMode);
}

void sub_1DC1F2068(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  uint64_t v8;

  sub_1DC0D8B60(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getObjectType();
  sub_1DC0990BC(a3, (uint64_t)v6, (uint64_t (*)(_QWORD))sub_1DC0D8B60);
  sub_1DC4065C8();
  sub_1DC4055CC();
  v7 = (void *)sub_1DC405074();
  swift_release();
  sub_1DC40907C();

}

uint64_t sub_1DC1F2158(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  void *v26;
  uint64_t v27;
  void *v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD aBlock[6];

  v33 = a2;
  v2 = sub_1DC40724C();
  v38 = *(_QWORD *)(v2 - 8);
  v39 = v2;
  MEMORY[0x1E0C80A78](v2);
  v37 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1DC407270();
  v35 = *(_QWORD *)(v4 - 8);
  v36 = v4;
  MEMORY[0x1E0C80A78](v4);
  v34 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0D95F0(0);
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC1880C8();
  v12 = v11;
  v13 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC1F36F0();
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v33 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC187FFC(0, (unint64_t *)&qword_1EDB2AB88, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790]);
  sub_1DC406CD0();
  sub_1DC187FFC(0, (unint64_t *)&qword_1EDB41DF0, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60]);
  v20 = v19;
  v21 = *(_QWORD *)(v19 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v18, 1, v19) == 1)
  {
    sub_1DC0926D8((uint64_t)v18, (uint64_t (*)(_QWORD))sub_1DC1F36F0);
    v22 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
    v23 = v33;
    v22(v10, v33, v7);
LABEL_4:
    sub_1DC089DA4(0, (unint64_t *)&unk_1F034E6B0, (uint64_t (*)(uint64_t))sub_1DC0D95F0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v25 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    v24 = swift_allocObject();
    *(_OWORD *)(v24 + 16) = xmmword_1DC40DC10;
    v22((char *)(v24 + v25), (uint64_t)v10, v7);
    goto LABEL_5;
  }
  sub_1DC404738();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v18, v20);
  v24 = sub_1DC4028B4();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  v22 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v23 = v33;
  v22(v10, v33, v7);
  if (!v24)
    goto LABEL_4;
LABEL_5:
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  sub_1DC2BE1CC(v23, v24);
  swift_bridgeObjectRelease();
  sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3F8D0);
  v26 = (void *)sub_1DC409148();
  v27 = swift_allocObject();
  swift_unknownObjectWeakInit();
  aBlock[4] = sub_1DC1F3778;
  aBlock[5] = v27;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1DC081B88;
  aBlock[3] = &block_descriptor_15;
  v28 = _Block_copy(aBlock);
  swift_release();
  v29 = v34;
  sub_1DC407264();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  sub_1DC080808(&qword_1EDB275A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  sub_1DC1130A0(0);
  sub_1DC080808((unint64_t *)&qword_1EDB3F720, (uint64_t (*)(uint64_t))sub_1DC1130A0, MEMORY[0x1E0DEAF38]);
  v30 = v37;
  v31 = v39;
  sub_1DC40964C();
  MEMORY[0x1DF0C99C8](0, v29, v30, v28);
  _Block_release(v28);

  (*(void (**)(char *, uint64_t))(v38 + 8))(v30, v31);
  return (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v29, v36);
}

void sub_1DC1F25A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  int v10;
  uint64_t v11;
  uint64_t ObjectType;
  uint64_t v13;
  uint64_t v14;
  void *v16;
  uint64_t v17;

  v5 = sub_1DC406334();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v6 + 16))(v9, a3, v5, v7);
  v10 = (*(uint64_t (**)(char *, uint64_t))(v6 + 88))(v9, v5);
  if (v10 == *MEMORY[0x1E0DBB9D0])
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
LABEL_3:
    v11 = *(_QWORD *)(*(_QWORD *)(v3 + OBJC_IVAR____TtC8StocksUI25StockSearchViewController_eventHandler) + 40);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v11 + 40))(ObjectType, v11);
    return;
  }
  if (v10 == *MEMORY[0x1E0DBB9A8])
  {
    v13 = *(_QWORD *)(*(_QWORD *)(v3 + OBJC_IVAR____TtC8StocksUI25StockSearchViewController_eventHandler) + 40);
    v14 = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v13 + 32))(v14, v13);
  }
  else
  {
    if (v10 == *MEMORY[0x1E0DBB9C8] || v10 == *MEMORY[0x1E0DBB9B0])
      goto LABEL_3;
    if (v10 != *MEMORY[0x1E0DBB9D8])
    {
      if (v10 == *MEMORY[0x1E0DBB9F0])
      {
        sub_1DC4055CC();
        v16 = (void *)sub_1DC405074();
        swift_release();
        sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3F8A0);
        sub_1DC404A38();

      }
      else
      {
        sub_1DC409838();
        __break(1u);
      }
    }
  }
}

void sub_1DC1F27AC()
{
  void *v0;
  id v1;
  void *v2;
  id v3;

  v1 = objc_msgSend(v0, sel_navigationController);
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend(v1, sel_navigationBar);

    sub_1DC409340();
  }
}

uint64_t sub_1DC1F2840()
{
  swift_getObjectType();
  return sub_1DC406478();
}

uint64_t sub_1DC1F289C()
{
  swift_getObjectType();
  return sub_1DC4063E8();
}

uint64_t sub_1DC1F28F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t ObjectType;

  v4 = *(_QWORD *)(*(_QWORD *)(v2 + OBJC_IVAR____TtC8StocksUI25StockSearchViewController_eventHandler) + 40);
  ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 80))(a2, ObjectType, v4);
}

uint64_t sub_1DC1F2940()
{
  return sub_1DC2BE6D8();
}

uint64_t sub_1DC1F2974()
{
  swift_getObjectType();
  return sub_1DC4063E8();
}

uint64_t sub_1DC1F29C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t ObjectType;

  v4 = *(_QWORD *)(*(_QWORD *)(v2 + OBJC_IVAR____TtC8StocksUI25StockSearchViewController_eventHandler) + 40);
  ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 56))(a2, ObjectType, v4);
}

uint64_t sub_1DC1F2A18()
{
  swift_getObjectType();
  return sub_1DC4063F4();
}

uint64_t sub_1DC1F2A5C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t ObjectType;

  v4 = *(_QWORD *)(*(_QWORD *)(v2 + OBJC_IVAR____TtC8StocksUI25StockSearchViewController_eventHandler) + 40);
  ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(a2, ObjectType, v4);
}

uint64_t sub_1DC1F2AAC()
{
  swift_getObjectType();
  return sub_1DC4063F4();
}

uint64_t sub_1DC1F2AF0()
{
  swift_getObjectType();
  return sub_1DC4063F4();
}

uint64_t sub_1DC1F2B38()
{
  swift_getObjectType();
  return sub_1DC406454();
}

uint64_t sub_1DC1F2B7C()
{
  swift_getObjectType();
  return sub_1DC4063E8();
}

uint64_t sub_1DC1F2BD0()
{
  swift_getObjectType();
  return sub_1DC406400();
}

uint64_t sub_1DC1F2C24()
{
  swift_getObjectType();
  return sub_1DC40637C();
}

uint64_t sub_1DC1F2C60()
{
  swift_getObjectType();
  return sub_1DC40637C();
}

uint64_t sub_1DC1F2C9C()
{
  swift_getObjectType();
  return sub_1DC4063C4();
}

uint64_t sub_1DC1F2CD8()
{
  swift_getObjectType();
  return sub_1DC40637C();
}

uint64_t sub_1DC1F2D14()
{
  swift_getObjectType();
  return sub_1DC40637C();
}

uint64_t sub_1DC1F2D50()
{
  swift_getObjectType();
  return sub_1DC4063DC();
}

uint64_t sub_1DC1F2D94()
{
  swift_getObjectType();
  return sub_1DC4063A0();
}

uint64_t sub_1DC1F2DD8()
{
  swift_getObjectType();
  return sub_1DC4063A0();
}

uint64_t sub_1DC1F2E80()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  uint64_t ObjectType;

  v1 = *v0;
  result = sub_1DC405614();
  if ((result & 1) != 0)
  {
    v3 = *(_QWORD *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC8StocksUI25StockSearchViewController_eventHandler) + 40);
    ObjectType = swift_getObjectType();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 40))(ObjectType, v3);
  }
  return result;
}

uint64_t sub_1DC1F2ED8()
{
  return sub_1DC405638();
}

void sub_1DC1F30C4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  id v7;

  v1 = a1 + 16;
  swift_beginAccess();
  v2 = MEMORY[0x1DF0CAD78](v1);
  if (v2)
  {
    v3 = (void *)v2;
    v4 = (void *)MEMORY[0x1DF0CAD78](v2 + OBJC_IVAR____TtC8StocksUI25StockSearchViewController_searchBar);

    if (v4)
    {
      objc_msgSend(v4, sel_resignFirstResponder);

    }
  }
  swift_beginAccess();
  v5 = MEMORY[0x1DF0CAD78](v1);
  if (v5)
  {
    v6 = (void *)v5;
    v7 = *(id *)(v5 + OBJC_IVAR____TtC8StocksUI25StockSearchViewController_blueprintViewController);

    sub_1DC4055FC();
  }
}

uint64_t *sub_1DC1F31D4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v7 = sub_1DC40124C();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
  }
  return a1;
}

void *sub_1DC1F329C(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1DC40124C();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

void *sub_1DC1F3340(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;

  v6 = sub_1DC40124C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 24))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

void *sub_1DC1F3430(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1DC40124C();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

void *sub_1DC1F34D4(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;

  v6 = sub_1DC40124C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 40))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

uint64_t sub_1DC1F35C4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC1F35D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  v4 = sub_1DC40124C();
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 2)
    return v5 - 1;
  else
    return 0;
}

uint64_t sub_1DC1F361C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC1F3628(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 1);
  else
    v5 = 0;
  v6 = sub_1DC40124C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, v5, a3, v6);
}

uint64_t sub_1DC1F3678(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1DC40124C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 1, v2);
}

uint64_t sub_1DC1F36B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1DC40124C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, 1, v4);
}

void sub_1DC1F36F0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F034E6A8)
  {
    sub_1DC187FFC(255, (unint64_t *)&qword_1EDB41DF0, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60]);
    v0 = sub_1DC4095A4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1F034E6A8);
  }
}

uint64_t sub_1DC1F3754()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1DC1F3778()
{
  uint64_t v0;

  sub_1DC1F30C4(v0);
}

void sub_1DC1F3790()
{
  unint64_t TupleTypeMetadata3;
  uint64_t v1;

  if (!qword_1EDB41260)
  {
    sub_1DC4040D8();
    sub_1DC1F3818();
    sub_1DC404390();
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1)
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_1EDB41260);
  }
}

unint64_t sub_1DC1F3818()
{
  unint64_t result;

  result = qword_1EDB41270;
  if (!qword_1EDB41270)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EDB41270);
  }
  return result;
}

uint64_t sub_1DC1F386C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for StockSearchMode(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC1F38B0()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t ObjectType;
  uint64_t v15;

  v1 = type metadata accessor for StockSearchMode(0);
  v2 = MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8StocksUI25StockSearchViewController_eventHandler);
  v6 = (void *)MEMORY[0x1DF0CAD78](v0 + OBJC_IVAR____TtC8StocksUI25StockSearchViewController_searchBar, v2);
  v7 = v6;
  if (v6)
  {
    v8 = objc_msgSend(v6, sel_text);

    if (v8)
    {
      v9 = sub_1DC408A4C();
      v7 = v10;

    }
    else
    {
      v9 = 0;
      v7 = 0;
    }
  }
  else
  {
    v9 = 0;
  }
  v11 = v0 + OBJC_IVAR____TtC8StocksUI25StockSearchViewController_stockSearchMode;
  swift_beginAccess();
  sub_1DC0990BC(v11, (uint64_t)v4, type metadata accessor for StockSearchMode);
  v12 = *(_QWORD *)(v5 + 40);
  ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, void *, char *, uint64_t, uint64_t))(v12 + 72))(v9, v7, v4, ObjectType, v12);
  swift_bridgeObjectRelease();
  return sub_1DC0926D8((uint64_t)v4, type metadata accessor for StockSearchMode);
}

uint64_t sub_1DC1F39F8()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  _QWORD aBlock[6];

  v0 = sub_1DC40724C();
  v1 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  v2 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v4 = (char *)aBlock - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1DC407270();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3F8D0);
  v9 = (void *)sub_1DC409148();
  v10 = swift_allocObject();
  swift_unknownObjectWeakInit();
  aBlock[4] = sub_1DC1F3778;
  aBlock[5] = v10;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1DC081B88;
  aBlock[3] = &block_descriptor_4;
  v11 = _Block_copy(aBlock);
  swift_release();
  sub_1DC407264();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  sub_1DC080808(&qword_1EDB275A0, v1, MEMORY[0x1E0DEF510]);
  sub_1DC1130A0(0);
  sub_1DC080808((unint64_t *)&qword_1EDB3F720, (uint64_t (*)(uint64_t))sub_1DC1130A0, MEMORY[0x1E0DEAF38]);
  sub_1DC40964C();
  MEMORY[0x1DF0C99C8](0, v8, v4, v11);
  _Block_release(v11);

  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v0);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1DC1F3C04(uint64_t a1)
{
  uint64_t v1;

  return sub_1DC1F1564(a1, v1);
}

uint64_t sub_1DC1F3C14@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v11[3];
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[3];
  uint64_t v15;
  uint64_t v16;
  uint64_t v17[5];

  v17[3] = sub_1DC400118();
  v17[4] = sub_1DC1F3E74();
  __swift_allocate_boxed_opaque_existential_1(v17);
  sub_1DC4000DC();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC0A3390(0, qword_1EDB2D2F0);
  result = sub_1DC402608();
  v5 = v15;
  if (v15)
  {
    v6 = v16;
    __swift_project_boxed_opaque_existential_1(v14, v15);
    (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v6 + 72))(v11, v5, v6);
    v7 = v12;
    v8 = v13;
    __swift_project_boxed_opaque_existential_1(v11, v12);
    (*(void (**)(uint64_t, uint64_t))(v8 + 104))(v7, v8);
    v9 = sub_1DC401978();
    v10 = MEMORY[0x1E0D56C30];
    a2[3] = v9;
    a2[4] = v10;
    __swift_allocate_boxed_opaque_existential_1(a2);
    sub_1DC40196C();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC1F3D40@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v14[24];
  uint64_t v15;
  uint64_t v16;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC0A3390(0, qword_1EDB2D2F0);
  result = sub_1DC402608();
  v4 = v15;
  if (v15)
  {
    v5 = type metadata accessor for WebViewControllerStyler();
    v6 = v16;
    v7 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v14, v15);
    v8 = MEMORY[0x1E0C80A78](v7);
    v10 = &v14[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
    (*(void (**)(_BYTE *, __n128))(v11 + 16))(v10, v8);
    v12 = sub_1DC0A3134((uint64_t)v10, v5, v4, v6);
    result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
    a2[3] = v5;
    a2[4] = (uint64_t)&off_1EA454418;
    *a2 = v12;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC1F3E50()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocObject();
}

unint64_t sub_1DC1F3E74()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EDB28AE0;
  if (!qword_1EDB28AE0)
  {
    v1 = sub_1DC400118();
    result = MEMORY[0x1DF0CAB8C](MEMORY[0x1E0DB6580], v1);
    atomic_store(result, (unint64_t *)&qword_1EDB28AE0);
  }
  return result;
}

uint64_t sub_1DC1F3EBC()
{
  id *v0;

  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 2));

  return swift_deallocObject();
}

uint64_t sub_1DC1F4028()
{
  id *v0;

  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 2));

  return swift_deallocObject();
}

uint64_t sub_1DC1F4198(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t);
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t ObjectType;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v55;
  char *v56;
  char *v57;
  char *v58;
  char *v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  __int128 v72;
  __int128 v73;
  uint64_t v74;

  v70 = a1;
  v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1DC089DA4(0, &qword_1F034E780, (uint64_t (*)(uint64_t))MEMORY[0x1E0DBC4A0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v56 = (char *)&v55 - v4;
  sub_1DC089DA4(0, &qword_1F0352F10, (uint64_t (*)(uint64_t))sub_1DC1EF064, v2);
  MEMORY[0x1E0C80A78](v5);
  v59 = (char *)&v55 - v6;
  v7 = sub_1DC407E10();
  MEMORY[0x1E0C80A78](v7);
  v58 = (char *)&v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1DC407F54();
  MEMORY[0x1E0C80A78](v9);
  v57 = (char *)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1DC40814C();
  MEMORY[0x1E0C80A78](v11);
  v55 = (char *)&v55 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC1EF064();
  v62 = *(_QWORD *)(v13 - 8);
  v63 = v13;
  MEMORY[0x1E0C80A78](v13);
  v61 = (char *)&v55 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1DC405D88();
  v67 = *(_QWORD *)(v15 - 8);
  v68 = v15;
  MEMORY[0x1E0C80A78](v15);
  v69 = (char *)&v55 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1DC40202C();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v55 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC089DA4(0, (unint64_t *)&unk_1EDB28A70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], v2);
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v55 - v22;
  v24 = sub_1DC402434();
  v25 = *(_QWORD *)(v24 - 8);
  MEMORY[0x1E0C80A78](v24);
  v27 = (char *)&v55 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = type metadata accessor for StocksActivity(0);
  MEMORY[0x1E0C80A78](v28);
  v30 = (char *)&v55 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = v1;
  v66 = *(_QWORD *)(v1 + 16);
  sub_1DC1446B4();
  v32 = *(int *)(v31 + 48);
  v64 = &v30[*(int *)(v31 + 64)];
  v65 = v32;
  sub_1DC402260();
  sub_1DC402410();
  v33 = sub_1DC3FFDD0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v23, 1, 1, v33);
  (*(void (**)(char *, _QWORD, uint64_t))(v18 + 104))(v20, *MEMORY[0x1E0D57870], v17);
  sub_1DC401B88();
  v34 = *(void (**)(char *, uint64_t))(v18 + 8);
  v35 = v20;
  v37 = v67;
  v36 = v68;
  v34(v35, v17);
  sub_1DC0B091C((uint64_t)v23, (unint64_t *)&unk_1EDB28A70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v27, v24);
  v74 = 0;
  v72 = 0u;
  v73 = 0u;
  sub_1DC144788((uint64_t)&v72, (uint64_t)v64);
  *(_QWORD *)&v30[v65] = 0;
  type metadata accessor for StocksActivity.Article(0);
  swift_storeEnumTagMultiPayload();
  v38 = v69;
  swift_storeEnumTagMultiPayload();
  (*(void (**)(char *, _QWORD, uint64_t))(v37 + 104))(v38, *MEMORY[0x1E0DBAC88], v36);
  sub_1DC404510();
  (*(void (**)(char *, uint64_t))(v37 + 8))(v38, v36);
  sub_1DC1B3F14((uint64_t)v30);
  LODWORD(v23) = sub_1DC1F496C();
  v71 = sub_1DC402260();
  sub_1DC402248();
  sub_1DC402230();
  sub_1DC40223C();
  sub_1DC112C9C();
  v72 = 0u;
  v73 = 0u;
  v39 = v61;
  sub_1DC40808C();
  ObjectType = swift_getObjectType();
  sub_1DC406A60();
  v41 = v62;
  v42 = (uint64_t)v59;
  v43 = v39;
  v44 = v63;
  (*(void (**)(char *, char *, uint64_t))(v62 + 16))(v59, v43, v63);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v41 + 56))(v42, 0, 1, v44);
  v68 = ObjectType;
  sub_1DC404AD4();
  sub_1DC0B091C(v42, &qword_1F0352F10, (uint64_t (*)(uint64_t))sub_1DC1EF064);
  swift_release();
  v45 = sub_1DC402224();
  LODWORD(v69) = (_DWORD)v23;
  if ((v45 & 1) != 0)
    sub_1DC40697C();
  else
    sub_1DC406970();
  v46 = *MEMORY[0x1E0DBC498];
  v47 = sub_1DC406988();
  v48 = *(_QWORD *)(v47 - 8);
  v49 = (uint64_t)v56;
  (*(void (**)(char *, uint64_t, uint64_t))(v48 + 104))(v56, v46, v47);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v48 + 56))(v49, 0, 1, v47);
  sub_1DC404AD4();
  sub_1DC0B091C(v49, &qword_1F034E780, (uint64_t (*)(uint64_t))MEMORY[0x1E0DBC4A0]);
  if ((v69 & 1) != 0 && (v50 = sub_1DC402254(), v52 = v62, v51 = v63, v53 = v61, (v50 & 1) == 0))
  {
    sub_1DC401FCC();
    swift_release();
    (*(void (**)(char *, uint64_t))(v52 + 8))(v53, v51);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v62 + 8))(v61, v63);
    swift_release();
  }
  return 1;
}

uint64_t sub_1DC1F496C()
{
  void *v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;

  v0 = (void *)sub_1DC401F90();
  v1 = objc_msgSend(v0, sel_value);

  if (v1 && (v2 = sub_1DC401D50(), v4 = v3, v1, v4))
  {
    v5 = objc_msgSend((id)sub_1DC402260(), sel_articleID);
    swift_unknownObjectRelease();
    v6 = sub_1DC408A4C();
    v8 = v7;

    if (v2 == v6 && v4 == v8)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v9 = 0;
    }
    else
    {
      v10 = sub_1DC4099E8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v9 = v10 ^ 1;
    }
  }
  else
  {
    v9 = 1;
  }
  return v9 & 1;
}

uint64_t sub_1DC1F4A7C()
{
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for NowPlayingPresenter()
{
  return objc_opt_self();
}

uint64_t sub_1DC1F4AD0(uint64_t a1)
{
  return sub_1DC1F4198(a1) & 1;
}

uint64_t sub_1DC1F4AF4(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  _QWORD v28[6];
  __int128 v29;
  __int128 v30;
  char v31;

  v3 = v2;
  v5 = sub_1DC4080F8();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1DC405848();
  v10 = MEMORY[0x1E0C80A78](v9);
  (*(void (**)(char *, _QWORD, __n128))(v12 + 104))((char *)v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E0DB9ED8], v10);
  v13 = *(_QWORD *)(v3 + 32);
  v28[4] = sub_1DC4018AC();
  v28[5] = sub_1DC0CF3A8();
  v28[1] = v13;
  v29 = 0u;
  v30 = 0u;
  v31 = 1;
  sub_1DC405434();
  swift_allocObject();
  swift_retain();
  v14 = a2;
  sub_1DC40541C();
  sub_1DC089DA4(0, (unint64_t *)&qword_1EDB3FF10, (uint64_t (*)(uint64_t))sub_1DC1F4E1C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1DC411E20;
  v16 = sub_1DC40463C();
  v17 = sub_1DC404618();
  v18 = MEMORY[0x1E0DB77B0];
  *(_QWORD *)(v15 + 56) = v16;
  *(_QWORD *)(v15 + 64) = v18;
  *(_QWORD *)(v15 + 32) = v17;
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0D5E480], v5);
  v19 = sub_1DC404630();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  if (v19)
  {
    v20 = MEMORY[0x1E0DB77B0];
    v21 = v16;
  }
  else
  {
    v21 = 0;
    v20 = 0;
    *(_QWORD *)(v15 + 80) = 0;
    *(_QWORD *)(v15 + 88) = 0;
  }
  *(_QWORD *)(v15 + 72) = v19;
  *(_QWORD *)(v15 + 96) = v21;
  *(_QWORD *)(v15 + 104) = v20;
  v22 = sub_1DC1F4E38();
  if (v22)
  {
    v23 = MEMORY[0x1E0DB77B0];
    v24 = v16;
  }
  else
  {
    v24 = 0;
    v23 = 0;
    *(_QWORD *)(v15 + 120) = 0;
    *(_QWORD *)(v15 + 128) = 0;
  }
  *(_QWORD *)(v15 + 112) = v22;
  *(_QWORD *)(v15 + 136) = v24;
  *(_QWORD *)(v15 + 144) = v23;
  sub_1DC404180();
  v25 = sub_1DC1EEB38();
  *(_QWORD *)(v15 + 176) = v16;
  *(_QWORD *)(v15 + 184) = v18;
  *(_QWORD *)(v15 + 152) = v25;
  result = sub_1DC404150();
  if (result)
  {
    sub_1DC1F4FAC();
    sub_1DC404114();
    v27 = sub_1DC40931C();
    swift_release();
    swift_release();
    return v27;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC1F4DB0()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for NowPlayingMenuFactory()
{
  return objc_opt_self();
}

uint64_t sub_1DC1F4DFC(uint64_t a1, void *a2)
{
  return sub_1DC1F4AF4(a1, a2);
}

void sub_1DC1F4E1C(uint64_t a1)
{
  sub_1DC089DA4(a1, &qword_1EDB2A060, (uint64_t (*)(uint64_t))sub_1DC131594, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

uint64_t sub_1DC1F4E38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t ObjCClassFromMetadata;
  id v5;
  uint64_t v7;

  v0 = sub_1DC404C54();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC406A90();
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v5 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1DC3FFC80();

  sub_1DC4084F4();
  sub_1DC4084E8();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB8530], v0);
  sub_1DC40463C();
  swift_allocObject();
  return sub_1DC4045DC();
}

unint64_t sub_1DC1F4FAC()
{
  unint64_t result;

  result = qword_1EDB3FB10;
  if (!qword_1EDB3FB10)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EDB3FB10);
  }
  return result;
}

uint64_t sub_1DC1F4FE8(uint64_t a1)
{
  uint64_t v1;

  if ((*(_BYTE *)(v1 + *(int *)(a1 + 28)) & 1) != 0)
    return MEMORY[0x1E0DEE9D8];
  else
    return sub_1DC408CE0();
}

unint64_t sub_1DC1F5008(uint64_t a1)
{
  uint64_t v1;

  if ((*(_BYTE *)(v1 + *(int *)(a1 + 28)) & 1) != 0)
    return sub_1DC1A1F08(MEMORY[0x1E0DEE9D8]);
  else
    return sub_1DC408CEC();
}

double sub_1DC1F5028(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  double v9;
  uint64_t v11;

  sub_1DC0FEF78(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC106BA4(v1 + *(int *)(a1 + 32), (uint64_t)v5);
  v6 = sub_1DC4073A8();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_1DC106B50((uint64_t)v5);
    return 1.0;
  }
  else
  {
    sub_1DC407354();
    v8 = v9;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v5, v6);
  }
  return v8;
}

uint64_t sub_1DC1F50F8()
{
  sub_1DC1F520C(&qword_1F034E848, (uint64_t)&unk_1DC417628);
  return sub_1DC407DE0();
}

uint64_t sub_1DC1F5130()
{
  return 1937204558;
}

uint64_t sub_1DC1F5140()
{
  return sub_1DC4010B4();
}

uint64_t sub_1DC1F5164()
{
  return sub_1DC1F520C(&qword_1F034E830, (uint64_t)&unk_1DC417590);
}

uint64_t type metadata accessor for NewsStockFeedGroup()
{
  uint64_t result;

  result = qword_1EDB30600;
  if (!qword_1EDB30600)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1DC1F51C4()
{
  return sub_1DC1F520C(&qword_1F034E838, (uint64_t)&unk_1DC417600);
}

uint64_t sub_1DC1F51E8()
{
  return sub_1DC1F520C(&qword_1F034E840, (uint64_t)&unk_1DC4175D8);
}

uint64_t sub_1DC1F520C(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for NewsStockFeedGroup();
    result = MEMORY[0x1DF0CAB8C](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

_QWORD *sub_1DC1F524C(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v19 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    a1[2] = a2[2];
    v8 = a3[6];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1DC4010E4();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v13 = a3[8];
    *((_BYTE *)v4 + a3[7]) = *((_BYTE *)a2 + a3[7]);
    v14 = (char *)v4 + v13;
    v15 = (char *)a2 + v13;
    v16 = sub_1DC4073A8();
    v17 = *(_QWORD *)(v16 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
    {
      sub_1DC0FEF78(0);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v14, v15, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    }
  }
  return v4;
}

uint64_t sub_1DC1F5398(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_1DC4010E4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = a1 + *(int *)(a2 + 32);
  v7 = sub_1DC4073A8();
  v8 = *(_QWORD *)(v7 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  return result;
}

_QWORD *sub_1DC1F5440(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  v7 = a3[6];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1DC4010E4();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  v12 = a3[8];
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = sub_1DC4073A8();
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    sub_1DC0FEF78(0);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  return a1;
}

_QWORD *sub_1DC1F5560(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(char *, uint64_t, uint64_t);
  int v16;
  uint64_t v17;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[6];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1DC4010E4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  v10 = a3[8];
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_1DC4073A8();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  LODWORD(v8) = v15(v11, 1, v13);
  v16 = v15(v12, 1, v13);
  if (!(_DWORD)v8)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 24))(v11, v12, v13);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v14 + 8))(v11, v13);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    sub_1DC0FEF78(0);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  return a1;
}

uint64_t sub_1DC1F56D4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  const void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v6 = a3[6];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_1DC4010E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  v11 = (void *)(a1 + v10);
  v12 = (const void *)(a2 + v10);
  v13 = sub_1DC4073A8();
  v14 = *(_QWORD *)(v13 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
  {
    sub_1DC0FEF78(0);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v14 + 32))(v11, v12, v13);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  return a1;
}

_QWORD *sub_1DC1F57D0(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(char *, uint64_t, uint64_t);
  int v17;
  uint64_t v18;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  v7 = a3[6];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1DC4010E4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[8];
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = sub_1DC4073A8();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48);
  LODWORD(v9) = v16(v12, 1, v14);
  v17 = v16(v13, 1, v14);
  if (!(_DWORD)v9)
  {
    if (!v17)
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 40))(v12, v13, v14);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v15 + 8))(v12, v14);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    sub_1DC0FEF78(0);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v12, v13, v14);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  return a1;
}

uint64_t sub_1DC1F5928()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC1F5934(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1DC4010E4();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 24);
    }
    else
    {
      sub_1DC0FEF78(0);
      v10 = v12;
      v9 = *(_QWORD *)(v12 - 8);
      v11 = *(int *)(a3 + 32);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_1DC1F59D4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC1F59E0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = sub_1DC4010E4();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 24);
    }
    else
    {
      sub_1DC0FEF78(0);
      v10 = v12;
      v9 = *(_QWORD *)(v12 - 8);
      v11 = *(int *)(a4 + 32);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_1DC1F5A7C()
{
  unint64_t v0;
  unint64_t v1;

  sub_1DC4010E4();
  if (v0 <= 0x3F)
  {
    sub_1DC0FEF78(319);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

char *sub_1DC1F5B20(double a1, double a2, double a3, double a4)
{
  char *v4;
  objc_class *ObjectType;
  uint64_t v10;
  id v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  objc_super v18;

  ObjectType = (objc_class *)swift_getObjectType();
  v10 = OBJC_IVAR____TtC8StocksUI18StockFeedPriceView_quoteSummaryView;
  v11 = objc_allocWithZone((Class)type metadata accessor for QuoteSummaryView());
  v12 = v4;
  *(_QWORD *)&v4[v10] = objc_msgSend(v11, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v13 = OBJC_IVAR____TtC8StocksUI18StockFeedPriceView_exchangeLabel;
  *(_QWORD *)&v12[v13] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);

  v18.receiver = v12;
  v18.super_class = ObjectType;
  v14 = (char *)objc_msgSendSuper2(&v18, sel_initWithFrame_, a1, a2, a3, a4);
  v15 = *(_QWORD *)&v14[OBJC_IVAR____TtC8StocksUI18StockFeedPriceView_quoteSummaryView];
  v16 = v14;
  objc_msgSend(v16, sel_addSubview_, v15);
  objc_msgSend(v16, sel_addSubview_, *(_QWORD *)&v16[OBJC_IVAR____TtC8StocksUI18StockFeedPriceView_exchangeLabel]);

  return v16;
}

uint64_t type metadata accessor for StockFeedPriceView()
{
  return objc_opt_self();
}

void sub_1DC1F5DAC()
{
  sub_1DC1F5E08(qword_1EDB30890, (uint64_t)&unk_1DC41772C);
  JUMPOUT(0x1DF0C7418);
}

uint64_t sub_1DC1F5DE4()
{
  return sub_1DC1F5E08(&qword_1EDB30888, (uint64_t)&unk_1DC4176F4);
}

uint64_t sub_1DC1F5E08(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for StockFeedPriceView();
    result = MEMORY[0x1DF0CAB8C](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t OnboardingViewController.cardSplitViewPresentation(for:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  int v9;
  unsigned int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;

  v4 = sub_1DC404BE8();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v5 + 16))(v8, a1, v4, v6);
  v9 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v8, v4);
  if (v9 == *MEMORY[0x1E0DB8468])
  {
    v10 = (unsigned int *)MEMORY[0x1E0DBA218];
LABEL_5:
    v11 = *v10;
    v12 = sub_1DC4059BC();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(a2, v11, v12);
    v13 = *MEMORY[0x1E0DBA210];
    v14 = sub_1DC4059C8();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(a2, v13, v14);
  }
  if (v9 == *MEMORY[0x1E0DB8460])
  {
    v10 = (unsigned int *)MEMORY[0x1E0DBA220];
    goto LABEL_5;
  }
  result = sub_1DC409838();
  __break(1u);
  return result;
}

uint64_t sub_1DC1F5FB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return OnboardingViewController.cardSplitViewPresentation(for:)(a1, a2);
}

_QWORD *destroy for OnboardingRouteModel(_QWORD *result)
{
  if (*result)
    return (_QWORD *)swift_release();
  return result;
}

_QWORD *_s8StocksUI20OnboardingRouteModelVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  if (*a2)
  {
    v3 = a2[1];
    *a1 = *a2;
    a1[1] = v3;
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  return a1;
}

_QWORD *assignWithCopy for OnboardingRouteModel(_QWORD *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *a2;
  if (!*a1)
  {
    if (v4)
    {
      v6 = a2[1];
      *a1 = v4;
      a1[1] = v6;
      swift_retain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (!v4)
  {
    swift_release();
    goto LABEL_7;
  }
  v5 = a2[1];
  *a1 = v4;
  a1[1] = v5;
  swift_retain();
  swift_release();
  return a1;
}

_QWORD *assignWithTake for OnboardingRouteModel(_QWORD *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *a2;
  if (!*a1)
  {
    if (v4)
    {
      v6 = a2[1];
      *a1 = v4;
      a1[1] = v6;
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (!v4)
  {
    swift_release();
    goto LABEL_7;
  }
  v5 = a2[1];
  *a1 = v4;
  a1[1] = v5;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for OnboardingRouteModel(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 16))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for OnboardingRouteModel(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for OnboardingRouteModel()
{
  return &type metadata for OnboardingRouteModel;
}

uint64_t *sub_1DC1F61BC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    v4 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    sub_1DC102724(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v4, a2, v7);
    v8 = *(int *)(a3 + 24);
    *(uint64_t *)((char *)v4 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    *(uint64_t *)((char *)v4 + v8) = *(uint64_t *)((char *)a2 + v8);
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_1DC1F6254(uint64_t a1)
{
  uint64_t v2;

  sub_1DC102724(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_release();
  return swift_release();
}

uint64_t sub_1DC1F62A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  sub_1DC102724(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_1DC1F6314(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  sub_1DC102724(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1DC1F639C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  sub_1DC102724(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  return a1;
}

uint64_t sub_1DC1F6400(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  sub_1DC102724(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_release();
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  swift_release();
  return a1;
}

uint64_t sub_1DC1F6478()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC1F6484(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  sub_1DC102724(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_1DC1F6500()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1DC1F650C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;

  sub_1DC102724(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, v8);
  else
    *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
}

uint64_t sub_1DC1F6584@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;

  sub_1DC12D96C();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC102724(0);
  v12 = v11;
  v13 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC12D928(a1, (uint64_t)v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12) == 1)
  {
    type metadata accessor for ForYouFeedServiceConfig();
    sub_1DC080808(&qword_1EDB347D0, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedServiceConfig, (uint64_t)&unk_1DC431F70);
    sub_1DC4076C0();
    sub_1DC12D8EC((uint64_t)v10);
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(a4, v15, v12);
  }
  else
  {
    v16 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
    v16(v15, v10, v12);
    v16(a4, v15, v12);
  }
  if (!a2)
  {
    v20 = 1;
    sub_1DC12D780();
    swift_allocObject();
    a2 = sub_1DC407984();
  }
  v17 = type metadata accessor for CuratedForYouFeedGroupKnobs();
  *(_QWORD *)&a4[*(int *)(v17 + 20)] = a2;
  if (!a3)
  {
    v20 = 0x7FFFFFFFFFFFFFFFLL;
    sub_1DC12D780();
    swift_allocObject();
    a3 = sub_1DC407984();
  }
  result = sub_1DC12D8EC(a1);
  *(_QWORD *)&a4[*(int *)(v17 + 24)] = a3;
  return result;
}

uint64_t sub_1DC1F67A8@<X0>(_QWORD *a1@<X0>, char *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;

  sub_1DC12D96C();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC1F6D94(0, &qword_1EDB3FDB0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v9 = v8;
  v14 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v13 - v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC1F6D50();
  sub_1DC409B08();
  if (!v2)
  {
    sub_1DC102724(0);
    LOBYTE(v17) = 0;
    sub_1DC080808((unint64_t *)&unk_1EDB2AE70, (uint64_t (*)(uint64_t))sub_1DC102724, MEMORY[0x1E0D5B228]);
    sub_1DC4098B0();
    sub_1DC12D780();
    LOBYTE(v16) = 1;
    sub_1DC080808(&qword_1EDB2AF38, (uint64_t (*)(uint64_t))sub_1DC12D780, MEMORY[0x1E0D5BD20]);
    sub_1DC4098B0();
    v13 = v17;
    v15 = 2;
    sub_1DC4098B0();
    sub_1DC1F6584((uint64_t)v7, v13, v16, a2);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v11, v9);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1DC1F69B0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;
  char v13;
  uint64_t v14;

  v3 = v1;
  sub_1DC1F6D94(0, &qword_1F034E860, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC1F6D50();
  sub_1DC409B14();
  LOBYTE(v14) = 0;
  sub_1DC102724(0);
  sub_1DC080808(&qword_1F034E868, (uint64_t (*)(uint64_t))sub_1DC102724, MEMORY[0x1E0D5B220]);
  sub_1DC409988();
  if (!v2)
  {
    v10 = type metadata accessor for CuratedForYouFeedGroupKnobs();
    v14 = *(_QWORD *)(v3 + *(int *)(v10 + 20));
    v13 = 1;
    sub_1DC12D780();
    sub_1DC080808(&qword_1F034E870, (uint64_t (*)(uint64_t))sub_1DC12D780, MEMORY[0x1E0D5BD10]);
    sub_1DC409988();
    v14 = *(_QWORD *)(v3 + *(int *)(v10 + 24));
    v13 = 2;
    sub_1DC409988();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1DC1F6B8C()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000010;
  else
    return 0x73656C7572;
}

uint64_t sub_1DC1F6BEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC1F6F94(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC1F6C10()
{
  sub_1DC1F6D50();
  return sub_1DC409B20();
}

uint64_t sub_1DC1F6C38()
{
  sub_1DC1F6D50();
  return sub_1DC409B2C();
}

uint64_t sub_1DC1F6C60@<X0>(_QWORD *a1@<X0>, char *a2@<X8>)
{
  return sub_1DC1F67A8(a1, a2);
}

uint64_t sub_1DC1F6C74(_QWORD *a1)
{
  return sub_1DC1F69B0(a1);
}

uint64_t sub_1DC1F6C88()
{
  type metadata accessor for ForYouFeedServiceConfig();
  sub_1DC080808(&qword_1EDB347D0, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedServiceConfig, (uint64_t)&unk_1DC431F70);
  if ((sub_1DC4076D8() & 1) != 0 && (sub_1DC12D780(), (sub_1DC40796C() & 1) != 0))
    return sub_1DC40796C() & 1;
  else
    return 0;
}

uint64_t sub_1DC1F6D30()
{
  return swift_retain();
}

uint64_t sub_1DC1F6D3C()
{
  return swift_retain();
}

unint64_t sub_1DC1F6D50()
{
  unint64_t result;

  result = qword_1EDB37458;
  if (!qword_1EDB37458)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC417958, &type metadata for CuratedForYouFeedGroupKnobs.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB37458);
  }
  return result;
}

void sub_1DC1F6D94(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC1F6D50();
    v7 = a3(a1, &type metadata for CuratedForYouFeedGroupKnobs.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t storeEnumTagSinglePayload for CuratedForYouFeedGroupKnobs.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1DC1F6E3C + 4 * byte_1DC4177B5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1DC1F6E70 + 4 * asc_1DC4177B0[v4]))();
}

uint64_t sub_1DC1F6E70(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC1F6E78(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC1F6E80);
  return result;
}

uint64_t sub_1DC1F6E8C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC1F6E94);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1DC1F6E98(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC1F6EA0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CuratedForYouFeedGroupKnobs.CodingKeys()
{
  return &type metadata for CuratedForYouFeedGroupKnobs.CodingKeys;
}

unint64_t sub_1DC1F6EC0()
{
  unint64_t result;

  result = qword_1F034E878;
  if (!qword_1F034E878)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC417930, &type metadata for CuratedForYouFeedGroupKnobs.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F034E878);
  }
  return result;
}

unint64_t sub_1DC1F6F08()
{
  unint64_t result;

  result = qword_1EDB37468;
  if (!qword_1EDB37468)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC4178A0, &type metadata for CuratedForYouFeedGroupKnobs.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB37468);
  }
  return result;
}

unint64_t sub_1DC1F6F50()
{
  unint64_t result;

  result = qword_1EDB37460;
  if (!qword_1EDB37460)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC4178C8, &type metadata for CuratedForYouFeedGroupKnobs.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB37460);
  }
  return result;
}

uint64_t sub_1DC1F6F94(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x73656C7572 && a2 == 0xE500000000000000;
  if (v2 || (sub_1DC4099E8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001DC43B510 || (sub_1DC4099E8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001DC43B530)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1DC4099E8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1DC1F70D4(void *a1)
{
  id v1;
  BOOL v2;
  uint64_t result;
  uint64_t v4;

  if (!a1
    || ((v1 = objc_msgSend(a1, sel_horizontalSizeClass)) != 0 ? (v2 = v1 == (id)2) : (v2 = 1), v2 || v1 == (id)1))
  {
    sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FB00);
    sub_1DC4073B4();
    return v4;
  }
  else
  {
    result = sub_1DC409838();
    __break(1u);
  }
  return result;
}

void sub_1DC1F71CC(uint64_t *a1@<X8>)
{
  sub_1DC1F722C(a1);
}

uint64_t sub_1DC1F71EC@<X0>(uint64_t *a1@<X8>)
{
  return sub_1DC1F72D0(a1);
}

void sub_1DC1F720C(uint64_t *a1@<X8>)
{
  sub_1DC1F722C(a1);
}

void sub_1DC1F722C(uint64_t *a1@<X8>)
{
  void *v2;
  uint64_t v3;

  sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FB00);
  v2 = (void *)sub_1DC4092F8();
  v3 = sub_1DC409310();

  *a1 = v3;
}

uint64_t sub_1DC1F72D0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FB00);
  result = sub_1DC4092F8();
  *a1 = result;
  return result;
}

uint64_t sub_1DC1F7348(void *a1)
{
  id v1;
  BOOL v2;
  uint64_t result;
  uint64_t v4;

  if (!a1
    || ((v1 = objc_msgSend(a1, sel_horizontalSizeClass)) != 0 ? (v2 = v1 == (id)2) : (v2 = 1), v2 || v1 == (id)1))
  {
    sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FB00);
    sub_1DC4073B4();
    return v4;
  }
  else
  {
    result = sub_1DC409838();
    __break(1u);
  }
  return result;
}

void sub_1DC1F7440(uint64_t *a1@<X8>)
{
  sub_1DC1F722C(a1);
}

uint64_t sub_1DC1F7460@<X0>(uint64_t *a1@<X8>)
{
  return sub_1DC1F72D0(a1);
}

void sub_1DC1F7480(uint64_t *a1@<X8>)
{
  sub_1DC1F722C(a1);
}

uint64_t sub_1DC1F74A0(void *a1)
{
  id v1;
  BOOL v2;
  uint64_t result;
  uint64_t v4;

  if (!a1
    || ((v1 = objc_msgSend(a1, sel_horizontalSizeClass)) != 0 ? (v2 = v1 == (id)2) : (v2 = 1), v2 || v1 == (id)1))
  {
    sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FB00);
    sub_1DC4073B4();
    return v4;
  }
  else
  {
    result = sub_1DC409838();
    __break(1u);
  }
  return result;
}

void sub_1DC1F7598(uint64_t *a1@<X8>)
{
  sub_1DC1F722C(a1);
}

uint64_t sub_1DC1F75B4@<X0>(uint64_t *a1@<X8>)
{
  return sub_1DC1F72D0(a1);
}

void sub_1DC1F75D0(uint64_t *a1@<X8>)
{
  sub_1DC1F722C(a1);
}

uint64_t sub_1DC1F75EC(void *a1)
{
  id v1;
  BOOL v2;
  uint64_t result;
  uint64_t v4;

  if (!a1
    || ((v1 = objc_msgSend(a1, sel_horizontalSizeClass)) != 0 ? (v2 = v1 == (id)2) : (v2 = 1), v2 || v1 == (id)1))
  {
    sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FB00);
    sub_1DC4073B4();
    return v4;
  }
  else
  {
    result = sub_1DC409838();
    __break(1u);
  }
  return result;
}

void sub_1DC1F76E4(uint64_t *a1@<X8>)
{
  sub_1DC1F722C(a1);
}

uint64_t sub_1DC1F7700@<X0>(uint64_t *a1@<X8>)
{
  return sub_1DC1F72D0(a1);
}

void sub_1DC1F771C(uint64_t *a1@<X8>)
{
  sub_1DC1F722C(a1);
}

id sub_1DC1F7738@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(v2 + 8);
  v4 = *(_QWORD *)(v2 + 32);
  *(_QWORD *)a2 = a1;
  *(_QWORD *)(a2 + 8) = v3;
  *(_OWORD *)(a2 + 16) = *(_OWORD *)(v2 + 16);
  *(_QWORD *)(a2 + 32) = v4;
  swift_retain();
  swift_retain();
  return a1;
}

id sub_1DC1F7788()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t inited;
  void **v3;
  void *v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  id v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t, uint64_t);
  id v16;
  uint64_t v17;
  id v18;
  void *v19;
  void *v20;
  id v21;

  v1 = v0;
  sub_1DC0FB194();
  inited = swift_initStackObject();
  v3 = (void **)MEMORY[0x1E0DC1138];
  *(_OWORD *)(inited + 16) = xmmword_1DC40C740;
  v4 = *v3;
  *(_QWORD *)(inited + 32) = *v3;
  v5 = v0[12];
  v6 = (uint64_t (*)(uint64_t))v0[13];
  swift_bridgeObjectRetain();
  v7 = v4;
  v8 = v6(v5);
  v9 = sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FB00);
  *(_QWORD *)(inited + 40) = v8;
  v10 = (void *)*MEMORY[0x1E0DC1140];
  *(_QWORD *)(inited + 64) = v9;
  *(_QWORD *)(inited + 72) = v10;
  v11 = v1 + 2;
  v13 = v1[5];
  v12 = v1[6];
  __swift_project_boxed_opaque_existential_1(v11, v13);
  v14 = *(_QWORD *)(v12 + 16);
  v15 = *(uint64_t (**)(uint64_t, uint64_t))(v14 + 240);
  v16 = v10;
  v17 = v15(v13, v14);
  *(_QWORD *)(inited + 104) = sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FB30);
  *(_QWORD *)(inited + 80) = v17;
  sub_1DC0FA3C4(inited);
  v18 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  v19 = (void *)sub_1DC408A1C();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1DC0FB14C();
  v20 = (void *)sub_1DC408980();
  swift_bridgeObjectRelease();
  v21 = objc_msgSend(v18, sel_initWithString_attributes_, v19, v20);

  return v21;
}

uint64_t assignWithCopy for ForYouTitleViewFontBook(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(void **)a1;
  v5 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v5;

  v7 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v7;
  swift_retain();
  swift_release();
  v8 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v8;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for ForYouTitleViewFontBook(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  v4 = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = v4;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for ForYouTitleViewFontBook()
{
  return &type metadata for ForYouTitleViewFontBook;
}

id sub_1DC1F7A00()
{
  return sub_1DC1F7788();
}

id sub_1DC1F7A20(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_1DC103530(a1, a2, a3);
}

StocksUI::Theme_optional __swiftcall Theme.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  StocksUI::Theme_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1DC4098A4();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t Theme.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x746867696CLL;
  if (*v0 != 1)
    v1 = 1802658148;
  if (*v0)
    return v1;
  else
    return 0x746C7561666564;
}

uint64_t sub_1DC1F7AE8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1DC158930(*a1, *a2);
}

unint64_t sub_1DC1F7AF8()
{
  unint64_t result;

  result = qword_1F034E880;
  if (!qword_1F034E880)
  {
    result = MEMORY[0x1DF0CAB8C](&protocol conformance descriptor for Theme, &type metadata for Theme);
    atomic_store(result, (unint64_t *)&qword_1F034E880);
  }
  return result;
}

uint64_t sub_1DC1F7B3C()
{
  sub_1DC409AC0();
  sub_1DC408AF4();
  swift_bridgeObjectRelease();
  return sub_1DC409AF0();
}

uint64_t sub_1DC1F7BD0()
{
  sub_1DC408AF4();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DC1F7C40()
{
  sub_1DC409AC0();
  sub_1DC408AF4();
  swift_bridgeObjectRelease();
  return sub_1DC409AF0();
}

StocksUI::Theme_optional sub_1DC1F7CD0(Swift::String *a1)
{
  return Theme.init(rawValue:)(*a1);
}

void sub_1DC1F7CDC(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE700000000000000;
  v4 = 0xE500000000000000;
  v5 = 0x746867696CLL;
  if (v2 != 1)
  {
    v5 = 1802658148;
    v4 = 0xE400000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x746C7561666564;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1DC1F7D30()
{
  sub_1DC1F819C();
  return sub_1DC408C74();
}

uint64_t sub_1DC1F7D70()
{
  sub_1DC1F819C();
  return sub_1DC408C68();
}

uint64_t sub_1DC1F7DB8()
{
  sub_1DC1F819C();
  return sub_1DC408C5C();
}

uint64_t storeEnumTagSinglePayload for Theme(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1DC1F7E44 + 4 * byte_1DC417A5D[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1DC1F7E78 + 4 * byte_1DC417A58[v4]))();
}

uint64_t sub_1DC1F7E78(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC1F7E80(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC1F7E88);
  return result;
}

uint64_t sub_1DC1F7E94(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC1F7E9CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1DC1F7EA0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC1F7EA8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Theme()
{
  return &type metadata for Theme;
}

uint64_t sub_1DC1F7EC4()
{
  id *v0;

  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 2));

  return swift_deallocObject();
}

uint64_t sub_1DC1F8030()
{
  id *v0;

  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 2));

  return swift_deallocObject();
}

unint64_t sub_1DC1F819C()
{
  unint64_t result;

  result = qword_1F034E888;
  if (!qword_1F034E888)
  {
    result = MEMORY[0x1DF0CAB8C](&protocol conformance descriptor for Theme, &type metadata for Theme);
    atomic_store(result, (unint64_t *)&qword_1F034E888);
  }
  return result;
}

uint64_t sub_1DC1F81E0(_QWORD *a1, void (*a2)(_QWORD), uint64_t (*a3)(_QWORD), uint64_t (*a4)(uint64_t, char *, uint64_t, uint64_t, uint64_t))
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *boxed_opaque_existential_1;
  void (*v15)(char *, uint64_t *, uint64_t, __n128);
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21[5];
  _QWORD v22[3];
  uint64_t v23;
  uint64_t v24;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  a2(0);
  result = sub_1DC4025FC();
  if (result)
  {
    v9 = result;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1DC096268(0, (unint64_t *)&unk_1EDB28C90);
    result = sub_1DC402608();
    v10 = v23;
    if (v23)
    {
      v11 = a3(0);
      v12 = v24;
      v13 = __swift_project_boxed_opaque_existential_1(v22, v23);
      v21[3] = v10;
      v21[4] = v12;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v21);
      v15 = *(void (**)(char *, uint64_t *, uint64_t, __n128))(*(_QWORD *)(v10 - 8) + 16);
      v16 = ((uint64_t (*)(uint64_t *, _QWORD *, uint64_t))v15)(boxed_opaque_existential_1, v13, v10);
      v17 = MEMORY[0x1E0C80A78](v16);
      v19 = (char *)v21 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
      v15(v19, boxed_opaque_existential_1, v10, v17);
      v20 = a4(v9, v19, v11, v10, v12);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
      return v20;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1DC1F836C(_QWORD *a1)
{
  uint64_t result;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC083C10();
  result = sub_1DC4025FC();
  if (result)
  {
    sub_1DC13080C(0);
    swift_allocObject();
    return sub_1DC405E24();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC1F83F8(_QWORD *a1)
{
  uint64_t result;
  uint64_t v3;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC083C10();
  result = sub_1DC4025FC();
  if (result)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1DC096268(0, &qword_1EDB29F00);
    result = sub_1DC402608();
    if (v3)
    {
      sub_1DC1F89D8(0);
      swift_allocObject();
      return sub_1DC405BF0();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1DC1F84D4(_QWORD *a1)
{
  return sub_1DC083BA0(a1, (void (*)(_QWORD))type metadata accessor for OpenMainWindowCommandHandler);
}

uint64_t sub_1DC1F84E0(uint64_t a1)
{
  return sub_1DC1F8530(a1, (void (*)(_QWORD, __n128))type metadata accessor for HeadlineOpenInNewWindowCommandHandler);
}

uint64_t sub_1DC1F84F4(_QWORD *a1)
{
  return sub_1DC1F8614(a1, (void (*)(_QWORD))type metadata accessor for HeadlineOpenInNewWindowCommandHandler);
}

void sub_1DC1F8500(uint64_t a1, _QWORD *a2)
{
  sub_1DC1F8724(a1, a2, (void (*)(_QWORD))type metadata accessor for HeadlineOpenInNewWindowCommandHandler, MEMORY[0x1E0D59F78], (void (*)(void))sub_1DC1F8924);
}

uint64_t sub_1DC1F851C(uint64_t a1)
{
  return sub_1DC1F8530(a1, (void (*)(_QWORD, __n128))type metadata accessor for HeadlineOpenInNewTabCommandHandler);
}

uint64_t sub_1DC1F8530(uint64_t a1, void (*a2)(_QWORD, __n128))
{
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;

  v3 = sub_1DC402C50();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2(0, v5);
  sub_1DC402B30();
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v7, *MEMORY[0x1E0DB4A00], v3);
  sub_1DC4024A0();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t sub_1DC1F8608(_QWORD *a1)
{
  return sub_1DC1F8614(a1, (void (*)(_QWORD))type metadata accessor for HeadlineOpenInNewTabCommandHandler);
}

uint64_t sub_1DC1F8614(_QWORD *a1, void (*a2)(_QWORD))
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  _BYTE v9[40];

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC083C10();
  result = sub_1DC4025FC();
  if (result)
  {
    v5 = result;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1DC096268(0, &qword_1EDB29F00);
    result = sub_1DC402608();
    if (v8)
    {
      sub_1DC097DD0(&v7, (uint64_t)v9);
      a2(0);
      v6 = swift_allocObject();
      *(_QWORD *)(v6 + 16) = v5;
      sub_1DC1F8878((uint64_t)v9, v6 + 24);
      return v6;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_1DC1F8708(uint64_t a1, _QWORD *a2)
{
  sub_1DC1F8724(a1, a2, (void (*)(_QWORD))type metadata accessor for HeadlineOpenInNewTabCommandHandler, MEMORY[0x1E0D59F58], (void (*)(void))sub_1DC1F885C);
}

void sub_1DC1F8724(uint64_t a1, _QWORD *a2, void (*a3)(_QWORD), void (*a4)(void), void (*a5)(void))
{
  id v9;
  unsigned int v10;

  v9 = objc_msgSend((id)objc_opt_self(), sel_sharedApplication);
  v10 = objc_msgSend(v9, sel_supportsMultipleScenes);

  if (v10)
  {
    __swift_project_boxed_opaque_existential_1(a2, a2[3]);
    a3(0);
    if (sub_1DC4025FC())
    {
      swift_getObjectType();
      sub_1DC406AE4();
      a4();
      sub_1DC408050();
      a5();
      sub_1DC404A8C();
      swift_release();
      swift_release();
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_1DC1F885C()
{
  return sub_1DC080808((unint64_t *)&unk_1F034E898, (uint64_t (*)(uint64_t))type metadata accessor for HeadlineOpenInNewTabCommandHandler, (uint64_t)&unk_1DC41E8F4);
}

uint64_t sub_1DC1F8878(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1DC1F88BC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1DC1F88BC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F034E8A8)
  {
    sub_1DC096268(255, &qword_1EDB29F00);
    v0 = sub_1DC4095A4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1F034E8A8);
  }
}

uint64_t sub_1DC1F8924()
{
  return sub_1DC080808(&qword_1F034E8B0, (uint64_t (*)(uint64_t))type metadata accessor for HeadlineOpenInNewWindowCommandHandler, (uint64_t)&unk_1DC41E888);
}

uint64_t sub_1DC1F8940(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1DC37EA90(a1, a2, v2);
}

void sub_1DC1F8948(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC0995E8(255, (unint64_t *)&qword_1EDB3F920);
    v7 = a3(a1, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1DC1F89B0(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1DC1E9C18(a1, a2, a3, v3);
}

uint64_t sub_1DC1F89B8(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1DC1E9F08(a1, a2, a3, v3);
}

uint64_t sub_1DC1F89C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1DC1B2804(a1, a2, v2);
}

uint64_t sub_1DC1F89C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1DC1B2CD8(a1, a2, v2);
}

uint64_t sub_1DC1F89D0(uint64_t a1, uint64_t a2)
{
  return sub_1DC3DB5E0(a1, a2);
}

void sub_1DC1F89D8(uint64_t a1)
{
  sub_1DC08CBF0(a1, &qword_1EDB2A478, type metadata accessor for StocksActivity, sub_1DC08CDA4, MEMORY[0x1E0DBA810]);
}

uint64_t sub_1DC1F89FC()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1DC1F8A20(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1DC294BC8(a1, a2, v2);
}

uint64_t storeEnumTagSinglePayload for TickerLayoutSectionDescriptor(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1DC1F8A68 + 4 * byte_1DC417BC0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1DC1F8A88 + 4 * byte_1DC417BC5[v4]))();
}

_BYTE *sub_1DC1F8A68(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1DC1F8A88(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC1F8A90(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC1F8A98(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC1F8AA0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC1F8AA8(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for TickerLayoutSectionDescriptor()
{
  return &type metadata for TickerLayoutSectionDescriptor;
}

uint64_t sub_1DC1F8AC4()
{
  sub_1DC1F8B5C();
  return sub_1DC40673C();
}

uint64_t sub_1DC1F8AEC()
{
  sub_1DC118258();
  return sub_1DC40625C();
}

unint64_t sub_1DC1F8B18()
{
  unint64_t result;

  result = qword_1F034E8B8;
  if (!qword_1F034E8B8)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC417CE8, &type metadata for TickerLayoutSectionDescriptor);
    atomic_store(result, (unint64_t *)&qword_1F034E8B8);
  }
  return result;
}

unint64_t sub_1DC1F8B5C()
{
  unint64_t result;

  result = qword_1F034E8C0;
  if (!qword_1F034E8C0)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC417C78, &type metadata for TickerLayoutSectionDescriptor);
    atomic_store(result, (unint64_t *)&qword_1F034E8C0);
  }
  return result;
}

uint64_t sub_1DC1F8BA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 40);
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)v0 + 16), v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2);
}

uint64_t sub_1DC1F8BE8(uint64_t a1, uint64_t a2)
{
  return sub_1DC091ACC(a1, a2, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DAEBD8]);
}

uint64_t sub_1DC1F8C14(uint64_t a1, uint64_t a2)
{
  return sub_1DC091ACC(a1, a2, MEMORY[0x1E0DAEC18]);
}

uint64_t sub_1DC1F8C24(uint64_t a1, uint64_t a2)
{
  return sub_1DC1F8C3C(a1, a2, MEMORY[0x1E0D59A68]);
}

uint64_t sub_1DC1F8C30(uint64_t a1, uint64_t a2)
{
  return sub_1DC1F8C3C(a1, a2, MEMORY[0x1E0D59A60]);
}

uint64_t sub_1DC1F8C3C(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  char v4;

  sub_1DC40133C();
  sub_1DC401324();
  a3();
  v4 = sub_1DC401330();
  swift_release();
  swift_release();
  return v4 & 1;
}

uint64_t sub_1DC1F8CA0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t);
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  int *v26;
  char *v27;
  id v28;
  unsigned __int8 v29;
  uint64_t v30;
  _QWORD *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  __int128 v46[2];
  __int128 v47[2];
  __int128 v48[3];

  v38 = a1;
  sub_1DC1339B0(0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = sub_1DC400970();
  v35 = *(_QWORD *)(v36 - 8);
  MEMORY[0x1E0C80A78](v36);
  v44 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = sub_1DC4008EC();
  v41 = *(_QWORD *)(v43 - 8);
  MEMORY[0x1E0C80A78](v43);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1DC40124C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v33 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v32 - v12;
  v39 = type metadata accessor for TickerWatchlistChangeBlueprintModifier();
  MEMORY[0x1E0C80A78](v39);
  v42 = (uint64_t)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v32 - v16;
  sub_1DC0824D4(v1 + 56, (uint64_t)v48);
  sub_1DC0824D4(v1 + 96, (uint64_t)v47);
  sub_1DC0824D4(v1 + 136, (uint64_t)v46);
  v18 = *(_QWORD *)(v1 + 40);
  v32 = (_QWORD *)(v1 + 16);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + 16), v18);
  v19 = v35;
  sub_1DC400A60();
  v40 = v7;
  sub_1DC4011EC();
  v20 = *(void (**)(char *, uint64_t))(v9 + 8);
  v21 = v13;
  v22 = v36;
  v34 = v8;
  v20(v21, v8);
  v45 = sub_1DC400478();
  sub_1DC089DA4(0, &qword_1EDB296D8, (uint64_t (*)(uint64_t))sub_1DC1132D4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  v37 = sub_1DC402D58();
  sub_1DC40049C();
  v23 = (uint64_t)v4;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v4, 1, v22) == 1)
  {
    __swift_project_boxed_opaque_existential_1(v32, *(_QWORD *)(v1 + 40));
    v24 = v33;
    sub_1DC400A60();
    v25 = v44;
    sub_1DC401240();
    v20(v24, v34);
    sub_1DC0926D8(v23, (uint64_t (*)(_QWORD))sub_1DC1339B0);
  }
  else
  {
    v25 = v44;
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v44, v4, v22);
  }
  *(_QWORD *)v17 = 0x73696C6863746157;
  *((_QWORD *)v17 + 1) = 0xEF65676E61684374;
  v26 = (int *)v39;
  v27 = &v17[*(int *)(v39 + 44)];
  v28 = objc_msgSend((id)objc_opt_self(), sel_sharedApplication);
  v29 = objc_msgSend(v28, sel_isRunningPerformanceTest);

  *(_QWORD *)v27 = 0x4008000000000000;
  *((_QWORD *)v27 + 1) = 4;
  v27[16] = v29;
  sub_1DC097DD0(v48, (uint64_t)(v17 + 16));
  sub_1DC097DD0(v47, (uint64_t)(v17 + 56));
  sub_1DC097DD0(v46, (uint64_t)(v17 + 96));
  (*(void (**)(char *, char *, uint64_t))(v41 + 32))(&v17[v26[8]], v40, v43);
  *(_QWORD *)&v17[v26[9]] = v37;
  (*(void (**)(char *, char *, uint64_t))(v19 + 32))(&v17[v26[10]], v25, v22);
  sub_1DC0990BC((uint64_t)v17, v42, (uint64_t (*)(_QWORD))type metadata accessor for TickerWatchlistChangeBlueprintModifier);
  sub_1DC131F68();
  swift_allocObject();
  sub_1DC080808(&qword_1EDB3DC68, (uint64_t (*)(uint64_t))type metadata accessor for TickerWatchlistChangeBlueprintModifier, (uint64_t)&unk_1DC432778);
  v30 = sub_1DC40499C();
  sub_1DC0926D8((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for TickerWatchlistChangeBlueprintModifier);
  return v30;
}

uint64_t sub_1DC1F9138()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void (*v16)(char *, uint64_t);
  uint64_t v17;
  char *v18;
  int *v19;
  char *v20;
  id v21;
  unsigned __int8 v22;
  uint64_t v23;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  __int128 v33[2];
  __int128 v34[2];
  __int128 v35[3];

  v1 = sub_1DC400970();
  v30 = *(_QWORD *)(v1 - 8);
  v31 = v1;
  MEMORY[0x1E0C80A78](v1);
  v26 = (char *)&v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1DC4008EC();
  v28 = *(_QWORD *)(v3 - 8);
  v29 = v3;
  MEMORY[0x1E0C80A78](v3);
  v32 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1DC40124C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v25 - v10;
  v25 = type metadata accessor for TickerWatchlistChangeBlueprintModifier();
  MEMORY[0x1E0C80A78](v25);
  v27 = (uint64_t)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v25 - v14;
  sub_1DC0824D4(v0 + 56, (uint64_t)v35);
  sub_1DC0824D4(v0 + 96, (uint64_t)v34);
  sub_1DC0824D4(v0 + 136, (uint64_t)v33);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 40));
  sub_1DC400A60();
  sub_1DC4011EC();
  v16 = *(void (**)(char *, uint64_t))(v6 + 8);
  v16(v11, v5);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 40));
  v17 = sub_1DC400A24();
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 40));
  sub_1DC400A60();
  v18 = v26;
  sub_1DC401240();
  v16(v8, v5);
  *(_QWORD *)v15 = 0x73696C6863746157;
  *((_QWORD *)v15 + 1) = 0xEF65676E61684374;
  v19 = (int *)v25;
  v20 = &v15[*(int *)(v25 + 44)];
  v21 = objc_msgSend((id)objc_opt_self(), sel_sharedApplication);
  v22 = objc_msgSend(v21, sel_isRunningPerformanceTest);

  *(_QWORD *)v20 = 0x4008000000000000;
  *((_QWORD *)v20 + 1) = 4;
  v20[16] = v22;
  sub_1DC097DD0(v35, (uint64_t)(v15 + 16));
  sub_1DC097DD0(v34, (uint64_t)(v15 + 56));
  sub_1DC097DD0(v33, (uint64_t)(v15 + 96));
  (*(void (**)(char *, char *, uint64_t))(v28 + 32))(&v15[v19[8]], v32, v29);
  *(_QWORD *)&v15[v19[9]] = v17;
  (*(void (**)(char *, char *, uint64_t))(v30 + 32))(&v15[v19[10]], v18, v31);
  sub_1DC0990BC((uint64_t)v15, v27, (uint64_t (*)(_QWORD))type metadata accessor for TickerWatchlistChangeBlueprintModifier);
  sub_1DC131F68();
  swift_allocObject();
  sub_1DC080808(&qword_1EDB3DC68, (uint64_t (*)(uint64_t))type metadata accessor for TickerWatchlistChangeBlueprintModifier, (uint64_t)&unk_1DC432778);
  v23 = sub_1DC40499C();
  sub_1DC0926D8((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for TickerWatchlistChangeBlueprintModifier);
  return v23;
}

uint64_t sub_1DC1F94C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  __swift_destroy_boxed_opaque_existential_1(v0 + 136);
  v1 = v0 + OBJC_IVAR____TtC8StocksUI30TickerBlueprintModifierFactory_appConfiguration;
  v2 = sub_1DC40070C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_1DC1F9530()
{
  return type metadata accessor for TickerBlueprintModifierFactory();
}

uint64_t sub_1DC1F9538()
{
  sub_1DC131F68();
  swift_allocObject();
  sub_1DC1F9870();
  return sub_1DC40499C();
}

uint64_t sub_1DC1F95A0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v2 = type metadata accessor for TickerPriceChangeDisplayBlueprintModifier();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v13 - v6;
  v9 = (char *)&v13 + *(int *)(v8 + 20) - v6;
  v10 = sub_1DC4008EC();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v9, a1, v10);
  strcpy(v7, "ChangeDisplay");
  *((_WORD *)v7 + 7) = -4864;
  sub_1DC0990BC((uint64_t)v7, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for TickerPriceChangeDisplayBlueprintModifier);
  sub_1DC131F68();
  swift_allocObject();
  sub_1DC080808(&qword_1EDB41888, (uint64_t (*)(uint64_t))type metadata accessor for TickerPriceChangeDisplayBlueprintModifier, (uint64_t)&unk_1DC418330);
  v11 = sub_1DC40499C();
  sub_1DC0926D8((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for TickerPriceChangeDisplayBlueprintModifier);
  return v11;
}

uint64_t sub_1DC1F96E0(uint64_t a1)
{
  return sub_1DC1F8CA0(a1);
}

uint64_t sub_1DC1F9700()
{
  return sub_1DC1F9138();
}

uint64_t sub_1DC1F9720(uint64_t a1)
{
  uint64_t *v1;
  uint64_t refreshed;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  refreshed = type metadata accessor for TickerRefreshPriceDataBlueprintModifier();
  MEMORY[0x1E0C80A78](refreshed);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (uint64_t *)((char *)&v15 - v7);
  v9 = *v1;
  v11 = (char *)&v15 + *(int *)(v10 + 20) - v7;
  v12 = sub_1DC400514();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v11, a1, v12);
  sub_1DC0824D4(v9 + 96, (uint64_t)v8 + *(int *)(refreshed + 24));
  *v8 = 0xD000000000000010;
  v8[1] = 0x80000001DC43B6B0;
  sub_1DC0990BC((uint64_t)v8, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for TickerRefreshPriceDataBlueprintModifier);
  sub_1DC131F68();
  swift_allocObject();
  sub_1DC080808(&qword_1EDB3DEA0, (uint64_t (*)(uint64_t))type metadata accessor for TickerRefreshPriceDataBlueprintModifier, (uint64_t)&unk_1DC4112B0);
  v13 = sub_1DC40499C();
  sub_1DC0926D8((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for TickerRefreshPriceDataBlueprintModifier);
  return v13;
}

unint64_t sub_1DC1F9870()
{
  unint64_t result;

  result = qword_1EDB40EC0;
  if (!qword_1EDB40EC0)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC411838, &type metadata for TickerRelayoutBlueprintModifier);
    atomic_store(result, (unint64_t *)&qword_1EDB40EC0);
  }
  return result;
}

char *sub_1DC1F98B4(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v5;
  objc_class *ObjectType;
  uint64_t v11;
  Class v12;
  id v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  void *v22;
  uint64_t ObjCClassFromMetadata;
  void *v24;
  id v25;
  id v26;
  void *v27;
  void *v28;
  id v29;
  id v30;
  objc_super v32;

  v5 = v4;
  ObjectType = (objc_class *)swift_getObjectType();
  v11 = OBJC_IVAR____TtC8StocksUI13EmptyListView_onTap;
  sub_1DC12F234();
  v13 = objc_allocWithZone(v12);
  v14 = v4;
  *(_QWORD *)&v5[v11] = objc_msgSend(v13, sel_init);
  v15 = OBJC_IVAR____TtC8StocksUI13EmptyListView_titleLabel;
  *(_QWORD *)&v14[v15] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v16 = OBJC_IVAR____TtC8StocksUI13EmptyListView_descriptionLabel;
  *(_QWORD *)&v14[v16] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v17 = OBJC_IVAR____TtC8StocksUI13EmptyListView_button;
  *(_QWORD *)&v14[v17] = objc_msgSend((id)objc_opt_self(), sel_buttonWithType_, 1);

  v32.receiver = v14;
  v32.super_class = ObjectType;
  v18 = (char *)objc_msgSendSuper2(&v32, sel_initWithFrame_, a1, a2, a3, a4);
  v19 = *(_QWORD *)&v18[OBJC_IVAR____TtC8StocksUI13EmptyListView_titleLabel];
  v20 = v18;
  objc_msgSend(v20, sel_addSubview_, v19);
  objc_msgSend(v20, sel_addSubview_, *(_QWORD *)&v20[OBJC_IVAR____TtC8StocksUI13EmptyListView_descriptionLabel]);
  v21 = OBJC_IVAR____TtC8StocksUI13EmptyListView_button;
  v22 = *(void **)&v20[OBJC_IVAR____TtC8StocksUI13EmptyListView_button];
  objc_msgSend(v20, sel_addSubview_, v22);
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v24 = (void *)objc_opt_self();
  v25 = v22;
  v26 = objc_msgSend(v24, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1DC3FFC80();

  v27 = (void *)sub_1DC408A1C();
  swift_bridgeObjectRelease();
  objc_msgSend(v25, sel_setAccessibilityHint_, v27, 0x80000001DC43B760);

  v28 = *(void **)&v20[v21];
  v29 = *(id *)&v20[OBJC_IVAR____TtC8StocksUI13EmptyListView_onTap];
  v30 = v28;
  sub_1DC406898();

  return v20;
}

void sub_1DC1F9BF8()
{

}

void sub_1DC1F9C24()
{
  sub_1DC12B830(&qword_1EDB2CF98, (uint64_t)&unk_1DC41801C);
  JUMPOUT(0x1DF0C7418);
}

void sub_1DC1F9C5C()
{
  char *v0;
  uint64_t v1;
  Class v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = OBJC_IVAR____TtC8StocksUI13EmptyListView_onTap;
  sub_1DC12F234();
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone(v2), sel_init);
  v3 = OBJC_IVAR____TtC8StocksUI13EmptyListView_titleLabel;
  *(_QWORD *)&v0[v3] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v4 = OBJC_IVAR____TtC8StocksUI13EmptyListView_descriptionLabel;
  *(_QWORD *)&v0[v4] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v5 = OBJC_IVAR____TtC8StocksUI13EmptyListView_button;
  *(_QWORD *)&v0[v5] = objc_msgSend((id)objc_opt_self(), sel_buttonWithType_, 1);

  sub_1DC409838();
  __break(1u);
}

uint64_t sub_1DC1F9D74(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t result;
  char v14;
  int v15;
  unsigned int *v16;
  uint64_t v17;
  void (*v18)(_BYTE *, uint64_t, uint64_t);
  uint64_t v19;
  _BYTE v20[16];

  v2 = sub_1DC403B50();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = &v20[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = sub_1DC401CD8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = &v20[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v10);
  v12 = &v20[-v11];
  *(double *)&result = COERCE_DOUBLE(sub_1DC401CC0());
  if ((v14 & 1) != 0)
  {
LABEL_5:
    sub_1DC401CB4();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v7 + 16))(v9, v12, v6);
    v15 = (*(uint64_t (**)(_BYTE *, uint64_t))(v7 + 88))(v9, v6);
    if (v15 == *MEMORY[0x1E0D57268])
    {
      v16 = (unsigned int *)MEMORY[0x1E0DADFE0];
    }
    else if (v15 == *MEMORY[0x1E0D57258])
    {
      v16 = (unsigned int *)MEMORY[0x1E0DADFD0];
    }
    else if (v15 == *MEMORY[0x1E0D57250])
    {
      v16 = (unsigned int *)MEMORY[0x1E0DADFC8];
    }
    else if (v15 == *MEMORY[0x1E0D57260])
    {
      v16 = (unsigned int *)MEMORY[0x1E0DADFD8];
    }
    else
    {
      if (v15 != *MEMORY[0x1E0D57248])
      {
        v18 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v3 + 104);
        if (v15 != *MEMORY[0x1E0D57240])
        {
          v18(v5, *MEMORY[0x1E0DADFE0], v2);
          (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
          goto LABEL_17;
        }
        v17 = *MEMORY[0x1E0DADFB8];
LABEL_16:
        v18(v5, v17, v2);
LABEL_17:
        (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v12, v6);
        sub_1DC401CA8();
        v20[12] = 0;
        sub_1DC403B38();
        v19 = sub_1DC401CCC();
        *(double *)&result = COERCE_DOUBLE((*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(a1, v19));
        return result;
      }
      v16 = (unsigned int *)MEMORY[0x1E0DADFC0];
    }
    v17 = *v16;
    v18 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v3 + 104);
    goto LABEL_16;
  }
  if ((~result & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  if (*(double *)&result <= -2147483650.0)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if (*(double *)&result < 2147483650.0)
    goto LABEL_5;
LABEL_23:
  __break(1u);
  return result;
}

uint64_t sub_1DC1FA020()
{
  uint64_t v0;

  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 176) - 8) + 8))(v0 + *(_QWORD *)(*(_QWORD *)v0 + 192));
}

uint64_t sub_1DC1FA03C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = sub_1DC1638C0();
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v1 + 176) - 8) + 8))(v2 + *(_QWORD *)(*(_QWORD *)v2 + 192));
  return swift_deallocClassInstance();
}

__n128 __swift_memcpy168_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __n128 result;
  __int128 v8;
  __int128 v9;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  v4 = a2[3];
  v5 = a2[4];
  v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  result = (__n128)a2[7];
  v8 = a2[8];
  v9 = a2[9];
  *(_QWORD *)(a1 + 160) = *((_QWORD *)a2 + 20);
  *(_OWORD *)(a1 + 128) = v8;
  *(_OWORD *)(a1 + 144) = v9;
  *(__n128 *)(a1 + 112) = result;
  return result;
}

uint64_t getEnumTagSinglePayload for WatchlistCellViewLayoutAttributes(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 168))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for WatchlistCellViewLayoutAttributes(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 168) = v3;
  return result;
}

ValueMetadata *type metadata accessor for WatchlistCellViewLayoutAttributes()
{
  return &type metadata for WatchlistCellViewLayoutAttributes;
}

id sub_1DC1FA154()
{
  id v0;
  void *v1;
  id v2;
  void *v3;
  id v4;
  uint64_t ObjCClassFromMetadata;
  void *v6;
  id v7;
  id v8;
  void *v9;
  id v10;

  v0 = objc_msgSend((id)objc_opt_self(), sel_buttonWithType_, 7);
  objc_msgSend(v0, sel_setShowsMenuAsPrimaryAction_, 1);
  sub_1DC1F4FAC();
  v1 = (void *)sub_1DC40931C();
  objc_msgSend(v0, sel_setMenu_, v1);

  objc_msgSend(v0, sel_setShowsLargeContentViewer_, 1);
  v2 = v0;
  v3 = (void *)sub_1DC408A1C();
  v4 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v3);

  objc_msgSend(v2, sel_setLargeContentImage_, v4);
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v6 = (void *)objc_opt_self();
  v7 = v2;
  v8 = objc_msgSend(v6, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1DC3FFC80();

  v9 = (void *)sub_1DC408A1C();
  swift_bridgeObjectRelease();
  objc_msgSend(v7, sel_setLargeContentTitle_, v9, 0x80000001DC43B8A0);

  v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3998]), sel_init);
  objc_msgSend(v7, sel_addInteraction_, v10);

  return v7;
}

char *sub_1DC1FA368(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v5;
  objc_class *ObjectType;
  uint64_t v11;
  id v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  objc_class *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  void *v23;
  char *v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  objc_super v29;

  v5 = v4;
  ObjectType = (objc_class *)swift_getObjectType();
  v11 = OBJC_IVAR____TtC8StocksUI21StockFeedMastheadView_symbolLabel;
  v12 = objc_allocWithZone(MEMORY[0x1E0DC3990]);
  v13 = v4;
  *(_QWORD *)&v5[v11] = objc_msgSend(v12, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v14 = OBJC_IVAR____TtC8StocksUI21StockFeedMastheadView_nameLabel;
  *(_QWORD *)&v13[v14] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v15 = OBJC_IVAR____TtC8StocksUI21StockFeedMastheadView_moreOptionsButton;
  *(_QWORD *)&v13[v15] = sub_1DC1FA154();
  v16 = OBJC_IVAR____TtC8StocksUI21StockFeedMastheadView_shareButton;
  v17 = (objc_class *)type metadata accessor for StockFeedMastheadView.CloseStyleButton();
  *(_QWORD *)&v13[v16] = objc_msgSend(objc_allocWithZone(v17), sel_init);
  v18 = OBJC_IVAR____TtC8StocksUI21StockFeedMastheadView_watchStockButton;
  *(_QWORD *)&v13[v18] = objc_msgSend(objc_allocWithZone(v17), sel_init);
  v19 = OBJC_IVAR____TtC8StocksUI21StockFeedMastheadView_quoteSummaryView;
  *(_QWORD *)&v13[v19] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for QuoteSummaryView()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v20 = OBJC_IVAR____TtC8StocksUI21StockFeedMastheadView_separatorView;
  *(_QWORD *)&v13[v20] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v21 = OBJC_IVAR____TtC8StocksUI21StockFeedMastheadView_exchangeLabel;
  *(_QWORD *)&v13[v21] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);

  v29.receiver = v13;
  v29.super_class = ObjectType;
  v22 = (char *)objc_msgSendSuper2(&v29, sel_initWithFrame_, a1, a2, a3, a4);
  v23 = *(void **)&v22[OBJC_IVAR____TtC8StocksUI21StockFeedMastheadView_symbolLabel];
  v24 = v22;
  objc_msgSend(v24, sel_addSubview_, v23);
  objc_msgSend(v24, sel_addSubview_, *(_QWORD *)&v24[OBJC_IVAR____TtC8StocksUI21StockFeedMastheadView_nameLabel]);
  objc_msgSend(v24, sel_addSubview_, *(_QWORD *)&v24[OBJC_IVAR____TtC8StocksUI21StockFeedMastheadView_moreOptionsButton]);
  objc_msgSend(v24, sel_addSubview_, *(_QWORD *)&v24[OBJC_IVAR____TtC8StocksUI21StockFeedMastheadView_shareButton]);
  objc_msgSend(v24, sel_addSubview_, *(_QWORD *)&v24[OBJC_IVAR____TtC8StocksUI21StockFeedMastheadView_watchStockButton]);
  objc_msgSend(v24, sel_addSubview_, *(_QWORD *)&v24[OBJC_IVAR____TtC8StocksUI21StockFeedMastheadView_quoteSummaryView]);
  objc_msgSend(v24, sel_addSubview_, *(_QWORD *)&v24[OBJC_IVAR____TtC8StocksUI21StockFeedMastheadView_separatorView]);
  objc_msgSend(v24, sel_addSubview_, *(_QWORD *)&v24[OBJC_IVAR____TtC8StocksUI21StockFeedMastheadView_exchangeLabel]);
  v25 = (unint64_t)objc_msgSend(v23, sel_accessibilityTraits);
  v26 = v25;
  v27 = *MEMORY[0x1E0DC4670];
  if (v25)
  {
    if ((v27 & ~v25) == 0)
      goto LABEL_7;
  }
  else if (!v27)
  {
    v26 = 0;
    goto LABEL_7;
  }
  v26 = v27 | v25;
LABEL_7:
  objc_msgSend(v23, sel_setAccessibilityTraits_, v26);

  return v24;
}

char *sub_1DC1FA6A0()
{
  char *v0;
  void *v1;
  char *v2;
  id v3;
  id v4;
  char *v5;
  id v6;

  v0 = (char *)objc_msgSend((id)swift_getObjCClassFromObject(), sel_buttonWithType_, 7);
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  v1 = *(void **)&v0[qword_1EDB33138];
  v2 = v0;
  v3 = v1;
  sub_1DC406898();

  objc_msgSend(v2, sel_setShowsLargeContentViewer_, 1);
  v4 = objc_allocWithZone(MEMORY[0x1E0DC3998]);
  v5 = v2;
  v6 = objc_msgSend(v4, sel_init);
  objc_msgSend(v5, sel_addInteraction_, v6);

  return v5;
}

char *sub_1DC1FA788()
{
  return sub_1DC1FA6A0();
}

id sub_1DC1FA7A8(char *a1, double a2, double a3, double a4, double a5)
{
  uint64_t v10;
  Class v11;
  id v12;
  char *v13;
  objc_super v15;

  v10 = qword_1EDB33138;
  sub_1DC12F234();
  v12 = objc_allocWithZone(v11);
  v13 = a1;
  *(_QWORD *)&a1[v10] = objc_msgSend(v12, sel_init);

  v15.receiver = v13;
  v15.super_class = (Class)type metadata accessor for StockFeedMastheadView.CloseStyleButton();
  return objc_msgSendSuper2(&v15, sel_initWithFrame_, a2, a3, a4, a5);
}

id sub_1DC1FA858(char *a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  Class v6;
  id v7;
  id v8;
  char *v9;
  id v10;
  objc_super v12;

  v5 = qword_1EDB33138;
  sub_1DC12F234();
  v7 = objc_allocWithZone(v6);
  v8 = a3;
  v9 = a1;
  *(_QWORD *)&a1[v5] = objc_msgSend(v7, sel_init);

  v12.receiver = v9;
  v12.super_class = (Class)type metadata accessor for StockFeedMastheadView.CloseStyleButton();
  v10 = objc_msgSendSuper2(&v12, sel_initWithCoder_, v8);

  return v10;
}

void sub_1DC1FA8FC()
{
  uint64_t v0;

}

id sub_1DC1FA90C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for StockFeedMastheadView.CloseStyleButton();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1DC1FA940(uint64_t a1)
{

}

uint64_t type metadata accessor for StockFeedMastheadView()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for StockFeedMastheadView.CloseStyleButton()
{
  uint64_t result;

  result = qword_1EDB33140;
  if (!qword_1EDB33140)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1DC1FAA44()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1DC1FAA90()
{
  return type metadata accessor for StockFeedMastheadView.CloseStyleButton();
}

void sub_1DC1FAA98()
{
  uint64_t *v0;
  uint64_t v1;
  id v2;
  id v3;

  v1 = *v0;
  v2 = objc_retain(*(id *)(*(_QWORD *)(*v0 + OBJC_IVAR____TtC8StocksUI21StockFeedMastheadView_shareButton)
                         + qword_1EDB33138));

  v3 = objc_retain(*(id *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC8StocksUI21StockFeedMastheadView_watchStockButton)
                         + qword_1EDB33138));

}

void sub_1DC1FAB1C()
{
  sub_1DC1FAB80(&qword_1EDB33158, (uint64_t)&unk_1DC4181BC);
  JUMPOUT(0x1DF0C7418);
}

uint64_t sub_1DC1FAB5C()
{
  return sub_1DC1FAB80(&qword_1EDB33150, (uint64_t)&unk_1DC418184);
}

uint64_t sub_1DC1FAB80(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for StockFeedMastheadView();
    result = MEMORY[0x1DF0CAB8C](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1DC1FABBC()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  objc_class *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = OBJC_IVAR____TtC8StocksUI21StockFeedMastheadView_symbolLabel;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v2 = OBJC_IVAR____TtC8StocksUI21StockFeedMastheadView_nameLabel;
  *(_QWORD *)&v0[v2] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v3 = OBJC_IVAR____TtC8StocksUI21StockFeedMastheadView_moreOptionsButton;
  *(_QWORD *)&v0[v3] = sub_1DC1FA154();
  v4 = OBJC_IVAR____TtC8StocksUI21StockFeedMastheadView_shareButton;
  v5 = (objc_class *)type metadata accessor for StockFeedMastheadView.CloseStyleButton();
  *(_QWORD *)&v0[v4] = objc_msgSend(objc_allocWithZone(v5), sel_init);
  v6 = OBJC_IVAR____TtC8StocksUI21StockFeedMastheadView_watchStockButton;
  *(_QWORD *)&v0[v6] = objc_msgSend(objc_allocWithZone(v5), sel_init);
  v7 = OBJC_IVAR____TtC8StocksUI21StockFeedMastheadView_quoteSummaryView;
  *(_QWORD *)&v0[v7] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for QuoteSummaryView()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v8 = OBJC_IVAR____TtC8StocksUI21StockFeedMastheadView_separatorView;
  *(_QWORD *)&v0[v8] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v9 = OBJC_IVAR____TtC8StocksUI21StockFeedMastheadView_exchangeLabel;
  *(_QWORD *)&v0[v9] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);

  sub_1DC409838();
  __break(1u);
}

char *sub_1DC1FAD64(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v5;
  objc_class *ObjectType;
  uint64_t v11;
  id v12;
  char *v13;
  uint64_t v14;
  objc_class *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  objc_super v21;

  v5 = v4;
  ObjectType = (objc_class *)swift_getObjectType();
  v11 = OBJC_IVAR____TtC8StocksUI23BilingualFeedPromptView_messageLabel;
  v12 = objc_allocWithZone(MEMORY[0x1E0DC3990]);
  v13 = v4;
  *(_QWORD *)&v5[v11] = objc_msgSend(v12, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v14 = OBJC_IVAR____TtC8StocksUI23BilingualFeedPromptView_enableBilingualFeedButton;
  v15 = (objc_class *)type metadata accessor for BilingualFeedPromptView.FeedPreferenceButton();
  *(_QWORD *)&v13[v14] = objc_msgSend(objc_allocWithZone(v15), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v16 = OBJC_IVAR____TtC8StocksUI23BilingualFeedPromptView_neverShowBilingualFeedPromptsButton;
  *(_QWORD *)&v13[v16] = objc_msgSend(objc_allocWithZone(v15), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);

  v21.receiver = v13;
  v21.super_class = ObjectType;
  v17 = (char *)objc_msgSendSuper2(&v21, sel_initWithFrame_, a1, a2, a3, a4);
  v18 = *(_QWORD *)&v17[OBJC_IVAR____TtC8StocksUI23BilingualFeedPromptView_messageLabel];
  v19 = v17;
  objc_msgSend(v19, sel_addSubview_, v18);
  objc_msgSend(v19, sel_addSubview_, *(_QWORD *)&v19[OBJC_IVAR____TtC8StocksUI23BilingualFeedPromptView_enableBilingualFeedButton]);
  objc_msgSend(v19, sel_addSubview_, *(_QWORD *)&v19[OBJC_IVAR____TtC8StocksUI23BilingualFeedPromptView_neverShowBilingualFeedPromptsButton]);

  return v19;
}

char *sub_1DC1FAF28(char *a1, double a2, double a3, double a4, double a5)
{
  uint64_t v10;
  Class v11;
  id v12;
  char *v13;
  char *v14;
  void *v15;
  char *v16;
  id v17;
  objc_super v19;

  v10 = qword_1F034EA30;
  sub_1DC12F234();
  v12 = objc_allocWithZone(v11);
  v13 = a1;
  *(_QWORD *)&a1[v10] = objc_msgSend(v12, sel_init);

  v19.receiver = v13;
  v19.super_class = (Class)type metadata accessor for BilingualFeedPromptView.FeedPreferenceButton();
  v14 = (char *)objc_msgSendSuper2(&v19, sel_initWithFrame_, a2, a3, a4, a5);
  v15 = *(void **)&v14[qword_1F034EA30];
  v16 = v14;
  v17 = v15;
  sub_1DC406898();

  return v16;
}

void sub_1DC1FB010(char *a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  Class v6;
  id v7;
  id v8;

  v5 = qword_1F034EA30;
  sub_1DC12F234();
  v7 = objc_allocWithZone(v6);
  v8 = a3;
  *(_QWORD *)&a1[v5] = objc_msgSend(v7, sel_init);

  sub_1DC409838();
  __break(1u);
}

void sub_1DC1FB0AC()
{
  uint64_t v0;

}

id sub_1DC1FB0BC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BilingualFeedPromptView.FeedPreferenceButton();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1DC1FB0F0(uint64_t a1)
{

}

uint64_t type metadata accessor for BilingualFeedPromptView()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for BilingualFeedPromptView.FeedPreferenceButton()
{
  uint64_t result;

  result = qword_1F034EA38;
  if (!qword_1F034EA38)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1DC1FB1A4()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1DC1FB1F0()
{
  return type metadata accessor for BilingualFeedPromptView.FeedPreferenceButton();
}

void sub_1DC1FB1F8()
{
  uint64_t *v0;
  uint64_t v1;
  id v2;
  id v3;

  v1 = *v0;
  v2 = objc_retain(*(id *)(*(_QWORD *)(*v0 + OBJC_IVAR____TtC8StocksUI23BilingualFeedPromptView_enableBilingualFeedButton)
                         + qword_1F034EA30));

  v3 = objc_retain(*(id *)(*(_QWORD *)(v1
                                     + OBJC_IVAR____TtC8StocksUI23BilingualFeedPromptView_neverShowBilingualFeedPromptsButton)
                         + qword_1F034EA30));

}

void sub_1DC1FB27C()
{
  sub_1DC1FB2D8(&qword_1EDB34468, (uint64_t)&unk_1DC418260);
  JUMPOUT(0x1DF0C7418);
}

uint64_t sub_1DC1FB2B4()
{
  return sub_1DC1FB2D8(&qword_1EDB34460, (uint64_t)&unk_1DC418228);
}

uint64_t sub_1DC1FB2D8(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for BilingualFeedPromptView();
    result = MEMORY[0x1DF0CAB8C](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1DC1FB314()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  objc_class *v3;
  uint64_t v4;

  v1 = OBJC_IVAR____TtC8StocksUI23BilingualFeedPromptView_messageLabel;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v2 = OBJC_IVAR____TtC8StocksUI23BilingualFeedPromptView_enableBilingualFeedButton;
  v3 = (objc_class *)type metadata accessor for BilingualFeedPromptView.FeedPreferenceButton();
  *(_QWORD *)&v0[v2] = objc_msgSend(objc_allocWithZone(v3), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v4 = OBJC_IVAR____TtC8StocksUI23BilingualFeedPromptView_neverShowBilingualFeedPromptsButton;
  *(_QWORD *)&v0[v4] = objc_msgSend(objc_allocWithZone(v3), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);

  sub_1DC409838();
  __break(1u);
}

uint64_t sub_1DC1FB40C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t ObjCClassFromMetadata;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  void *v11;
  id v12;
  uint64_t v13;
  _QWORD v14[2];

  sub_1DC1FB6C4();
  MEMORY[0x1E0C80A78](v0);
  sub_1DC1FB720();
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC1FB7D8();
  MEMORY[0x1E0C80A78](v4);
  if (qword_1EDB2A9E0 != -1)
    swift_once();
  swift_retain();
  sub_1DC4068EC();
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v6 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v7 = sub_1DC3FFC80();
  v9 = v8;

  v14[0] = v7;
  v14[1] = v9;
  result = sub_1DC405914();
  if (qword_1EDB41230 != -1)
    result = swift_once();
  v11 = (void *)qword_1EDB5E1C8;
  if (qword_1EDB5E1C8)
  {
    v14[0] = qword_1EDB5E1C8;
    sub_1DC15E978();
    v12 = v11;
    sub_1DC404B88();
    sub_1DC1FB774();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v3, 0, 1, v13);
    sub_1DC404ED0();
    sub_1DC40463C();
    swift_allocObject();
    return sub_1DC4045A0();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1DC1FB6C4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F034EA88)
  {
    v0 = sub_1DC404EE8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1F034EA88);
  }
}

void sub_1DC1FB720()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F034EA90)
  {
    sub_1DC1FB774();
    v0 = sub_1DC4095A4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1F034EA90);
  }
}

void sub_1DC1FB774()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F034EA98)
  {
    sub_1DC15E978();
    v0 = sub_1DC404B94();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1F034EA98);
  }
}

void sub_1DC1FB7D8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F034EAA0)
  {
    v0 = sub_1DC405920();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1F034EAA0);
  }
}

uint64_t *sub_1DC1FB850(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  void *v26;
  id v27;
  id v28;
  id v29;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1DC401030();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      sub_1DC092F50(0, &qword_1EDB28DC0, (void (*)(uint64_t))MEMORY[0x1E0DAF040]);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v11 = a3[5];
    v12 = (char *)a1 + v11;
    v13 = (char *)a2 + v11;
    v14 = sub_1DC400370();
    v15 = *(_QWORD *)(v14 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
    {
      sub_1DC092F50(0, &qword_1EDB28BA0, (void (*)(uint64_t))MEMORY[0x1E0DAE188]);
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v12, v13, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    }
    v17 = a3[6];
    v18 = a3[7];
    v19 = (uint64_t *)((char *)a1 + v17);
    v20 = (uint64_t *)((char *)a2 + v17);
    v21 = v20[1];
    *v19 = *v20;
    v19[1] = v21;
    v22 = (void *)v20[2];
    v19[2] = v22;
    *(uint64_t *)((char *)a1 + v18) = *(uint64_t *)((char *)a2 + v18);
    v23 = a3[9];
    *(uint64_t *)((char *)a1 + a3[8]) = *(uint64_t *)((char *)a2 + a3[8]);
    v24 = *(void **)((char *)a2 + v23);
    *(uint64_t *)((char *)a1 + v23) = (uint64_t)v24;
    v25 = a3[10];
    v26 = *(void **)((char *)a2 + v25);
    *(uint64_t *)((char *)a1 + v25) = (uint64_t)v26;
    swift_bridgeObjectRetain();
    v27 = v22;
    swift_retain();
    swift_retain();
    v28 = v24;
    v29 = v26;
  }
  return a1;
}

void sub_1DC1FBA34(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = sub_1DC401030();
  v5 = *(_QWORD *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  v6 = a1 + a2[5];
  v7 = sub_1DC400370();
  v8 = *(_QWORD *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  v9 = a1 + a2[6];
  swift_bridgeObjectRelease();

  swift_release();
  swift_release();

}

char *sub_1DC1FBB20(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  void *v24;
  id v25;
  id v26;
  id v27;

  v6 = sub_1DC401030();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    sub_1DC092F50(0, &qword_1EDB28DC0, (void (*)(uint64_t))MEMORY[0x1E0DAF040]);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = a3[5];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = sub_1DC400370();
  v13 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
  {
    sub_1DC092F50(0, &qword_1EDB28BA0, (void (*)(uint64_t))MEMORY[0x1E0DAE188]);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  v15 = a3[6];
  v16 = a3[7];
  v17 = &a1[v15];
  v18 = &a2[v15];
  v19 = *((_QWORD *)v18 + 1);
  *(_QWORD *)v17 = *(_QWORD *)v18;
  *((_QWORD *)v17 + 1) = v19;
  v20 = (void *)*((_QWORD *)v18 + 2);
  *((_QWORD *)v17 + 2) = v20;
  *(_QWORD *)&a1[v16] = *(_QWORD *)&a2[v16];
  v21 = a3[9];
  *(_QWORD *)&a1[a3[8]] = *(_QWORD *)&a2[a3[8]];
  v22 = *(void **)&a2[v21];
  *(_QWORD *)&a1[v21] = v22;
  v23 = a3[10];
  v24 = *(void **)&a2[v23];
  *(_QWORD *)&a1[v23] = v24;
  swift_bridgeObjectRetain();
  v25 = v20;
  swift_retain();
  swift_retain();
  v26 = v22;
  v27 = v24;
  return a1;
}

char *sub_1DC1FBCD8(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(char *, uint64_t, uint64_t);
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  void *v24;
  void *v25;
  id v26;
  uint64_t v27;
  void *v28;
  void *v29;
  id v30;
  uint64_t v31;
  void *v32;
  void *v33;
  id v34;

  v6 = sub_1DC401030();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    sub_1DC092F50(0, &qword_1EDB28DC0, (void (*)(uint64_t))MEMORY[0x1E0DAF040]);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
LABEL_7:
  v12 = a3[5];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = sub_1DC400370();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  v18 = v17(v13, 1, v15);
  v19 = v17(v14, 1, v15);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 24))(v13, v14, v15);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v16 + 8))(v13, v15);
    goto LABEL_12;
  }
  if (v19)
  {
LABEL_12:
    sub_1DC092F50(0, &qword_1EDB28BA0, (void (*)(uint64_t))MEMORY[0x1E0DAE188]);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
LABEL_13:
  v21 = a3[6];
  v22 = &a1[v21];
  v23 = &a2[v21];
  *(_QWORD *)v22 = *(_QWORD *)&a2[v21];
  *((_QWORD *)v22 + 1) = *(_QWORD *)&a2[v21 + 8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v24 = (void *)*((_QWORD *)v22 + 2);
  v25 = (void *)*((_QWORD *)v23 + 2);
  *((_QWORD *)v22 + 2) = v25;
  v26 = v25;

  *(_QWORD *)&a1[a3[7]] = *(_QWORD *)&a2[a3[7]];
  swift_retain();
  swift_release();
  *(_QWORD *)&a1[a3[8]] = *(_QWORD *)&a2[a3[8]];
  swift_retain();
  swift_release();
  v27 = a3[9];
  v28 = *(void **)&a2[v27];
  v29 = *(void **)&a1[v27];
  *(_QWORD *)&a1[v27] = v28;
  v30 = v28;

  v31 = a3[10];
  v32 = *(void **)&a2[v31];
  v33 = *(void **)&a1[v31];
  *(_QWORD *)&a1[v31] = v32;
  v34 = v32;

  return a1;
}

char *sub_1DC1FBF64(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;

  v6 = sub_1DC401030();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    sub_1DC092F50(0, &qword_1EDB28DC0, (void (*)(uint64_t))MEMORY[0x1E0DAF040]);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = a3[5];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = sub_1DC400370();
  v13 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
  {
    sub_1DC092F50(0, &qword_1EDB28BA0, (void (*)(uint64_t))MEMORY[0x1E0DAE188]);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  v15 = a3[6];
  v16 = a3[7];
  v17 = &a1[v15];
  v18 = &a2[v15];
  *(_OWORD *)v17 = *(_OWORD *)v18;
  *((_QWORD *)v17 + 2) = *((_QWORD *)v18 + 2);
  *(_QWORD *)&a1[v16] = *(_QWORD *)&a2[v16];
  v19 = a3[9];
  *(_QWORD *)&a1[a3[8]] = *(_QWORD *)&a2[a3[8]];
  *(_QWORD *)&a1[v19] = *(_QWORD *)&a2[v19];
  *(_QWORD *)&a1[a3[10]] = *(_QWORD *)&a2[a3[10]];
  return a1;
}

char *sub_1DC1FC0FC(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(char *, uint64_t, uint64_t);
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  void *v29;

  v6 = sub_1DC401030();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    sub_1DC092F50(0, &qword_1EDB28DC0, (void (*)(uint64_t))MEMORY[0x1E0DAF040]);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
LABEL_7:
  v12 = a3[5];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = sub_1DC400370();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  v18 = v17(v13, 1, v15);
  v19 = v17(v14, 1, v15);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 40))(v13, v14, v15);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v16 + 8))(v13, v15);
    goto LABEL_12;
  }
  if (v19)
  {
LABEL_12:
    sub_1DC092F50(0, &qword_1EDB28BA0, (void (*)(uint64_t))MEMORY[0x1E0DAE188]);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v13, v14, v15);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
LABEL_13:
  v21 = a3[6];
  v22 = &a1[v21];
  v23 = &a2[v21];
  v24 = *(_QWORD *)&a2[v21 + 8];
  *(_QWORD *)v22 = *(_QWORD *)&a2[v21];
  *((_QWORD *)v22 + 1) = v24;
  swift_bridgeObjectRelease();
  v25 = (void *)*((_QWORD *)v22 + 2);
  *((_QWORD *)v22 + 2) = *((_QWORD *)v23 + 2);

  *(_QWORD *)&a1[a3[7]] = *(_QWORD *)&a2[a3[7]];
  swift_release();
  *(_QWORD *)&a1[a3[8]] = *(_QWORD *)&a2[a3[8]];
  swift_release();
  v26 = a3[9];
  v27 = *(void **)&a1[v26];
  *(_QWORD *)&a1[v26] = *(_QWORD *)&a2[v26];

  v28 = a3[10];
  v29 = *(void **)&a1[v28];
  *(_QWORD *)&a1[v28] = *(_QWORD *)&a2[v28];

  return a1;
}

uint64_t sub_1DC1FC35C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC1FC368(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  sub_1DC092F50(0, &qword_1EDB28DC0, (void (*)(uint64_t))MEMORY[0x1E0DAF040]);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  sub_1DC092F50(0, &qword_1EDB28BA0, (void (*)(uint64_t))MEMORY[0x1E0DAE188]);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t sub_1DC1FC434()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1DC1FC440(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1DC092F50(0, &qword_1EDB28DC0, (void (*)(uint64_t))MEMORY[0x1E0DAF040]);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
LABEL_5:
    v11(v12, a2, a2, v10);
    return;
  }
  sub_1DC092F50(0, &qword_1EDB28BA0, (void (*)(uint64_t))MEMORY[0x1E0DAE188]);
  v14 = *(_QWORD *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = v13;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_5;
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
}

uint64_t type metadata accessor for QuoteDetailViewModel()
{
  uint64_t result;

  result = qword_1EDB31B18;
  if (!qword_1EDB31B18)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1DC1FC544()
{
  unint64_t v0;
  unint64_t v1;

  sub_1DC092F50(319, &qword_1EDB28DC0, (void (*)(uint64_t))MEMORY[0x1E0DAF040]);
  if (v0 <= 0x3F)
  {
    sub_1DC092F50(319, &qword_1EDB28BA0, (void (*)(uint64_t))MEMORY[0x1E0DAE188]);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t sub_1DC1FC610@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  uint64_t v26;
  uint64_t v27;

  v26 = a2;
  v27 = a1;
  sub_1DC092F50(0, (unint64_t *)&unk_1EDB28978, (void (*)(uint64_t))type metadata accessor for AttributionSource);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v26 - v9;
  v11 = (int *)type metadata accessor for QuoteDetailViewModel();
  v12 = v11[7];
  type metadata accessor for PriceFormatter();
  v13 = swift_allocObject();
  sub_1DC4000B8();
  *(_QWORD *)(a4 + v12) = v13;
  v14 = v11[8];
  type metadata accessor for UnitNumberFormatter();
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DAF2D8]), sel_init);
  *(_QWORD *)(a4 + v14) = v15;
  sub_1DC092F9C(a1, a4, &qword_1EDB28DC0, (void (*)(uint64_t))MEMORY[0x1E0DAF040]);
  sub_1DC092F9C(a2, a4 + v11[5], &qword_1EDB28BA0, (void (*)(uint64_t))MEMORY[0x1E0DAE188]);
  sub_1DC092F9C(a3, (uint64_t)v10, (unint64_t *)&unk_1EDB28978, (void (*)(uint64_t))type metadata accessor for AttributionSource);
  v16 = sub_1DC3BC47C((uint64_t)v10);
  v17 = (uint64_t *)(a4 + v11[6]);
  *v17 = v16;
  v17[1] = v18;
  v17[2] = v19;
  v20 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37F0]), sel_init);
  *(_QWORD *)(a4 + v11[9]) = v20;
  v21 = v20;
  objc_msgSend(v21, sel_setNumberStyle_, 3);
  sub_1DC0E7878();
  v22 = (void *)sub_1DC4093A0();
  objc_msgSend(v21, sel_setMultiplier_, v22);

  objc_msgSend(v21, sel_setMinimumFractionDigits_, 2);
  objc_msgSend(v21, sel_setMaximumFractionDigits_, 2);

  v23 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37F0]), sel_init);
  *(_QWORD *)(a4 + v11[10]) = v23;
  v24 = v23;
  objc_msgSend(v24, sel_setNumberStyle_, 1);
  objc_msgSend(v24, sel_setMinimumFractionDigits_, 2);
  objc_msgSend(v24, sel_setMaximumFractionDigits_, 2);

  sub_1DC092F14(a3, (unint64_t *)&unk_1EDB28978, (void (*)(uint64_t))type metadata accessor for AttributionSource);
  sub_1DC092F14(v26, &qword_1EDB28BA0, (void (*)(uint64_t))MEMORY[0x1E0DAE188]);
  return sub_1DC092F14(v27, &qword_1EDB28DC0, (void (*)(uint64_t))MEMORY[0x1E0DAF040]);
}

void sub_1DC1FC8BC(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1DC1FC8F4()
{
  uint64_t ObjCClassFromMetadata;
  void *v1;
  id v2;
  uint64_t v3;
  id v4;

  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = (void *)objc_opt_self();
  v2 = objc_msgSend(v1, sel_bundleForClass_, ObjCClassFromMetadata);
  v3 = sub_1DC3FFC80();

  v4 = objc_msgSend(v1, sel_bundleForClass_, ObjCClassFromMetadata, 0x80000001DC43C090);
  sub_1DC3FFC80();

  return v3;
}

void sub_1DC1FD438(uint64_t a1, int a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t ObjCClassFromMetadata;
  id v22;
  _DWORD v23[2];
  char *v24;
  char *v25;
  char *v26;
  char *v27;
  char *v28;
  char *v29;
  uint64_t v30;

  v30 = a1;
  sub_1DC092F50(0, &qword_1EDB28DC0, (void (*)(uint64_t))MEMORY[0x1E0DAF040]);
  MEMORY[0x1E0C80A78](v3);
  v29 = (char *)v23 - v4;
  sub_1DC092F50(0, &qword_1EDB28BA0, (void (*)(uint64_t))MEMORY[0x1E0DAE188]);
  MEMORY[0x1E0C80A78](v5);
  v28 = (char *)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v27 = (char *)v23 - v8;
  MEMORY[0x1E0C80A78](v9);
  v26 = (char *)v23 - v10;
  MEMORY[0x1E0C80A78](v11);
  v25 = (char *)v23 - v12;
  MEMORY[0x1E0C80A78](v13);
  v24 = (char *)v23 - v14;
  MEMORY[0x1E0C80A78](v15);
  MEMORY[0x1E0C80A78](v16);
  MEMORY[0x1E0C80A78](v17);
  MEMORY[0x1E0C80A78](v18);
  MEMORY[0x1E0C80A78](v19);
  MEMORY[0x1E0C80A78](v20);
  v23[1] = a2;
  if ((a2 & 1) != 0)
  {
    type metadata accessor for Localized();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    v22 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
    sub_1DC3FFC80();

  }
  __asm { BR              X10 }
}

uint64_t sub_1DC1FD6F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  char v8;
  char v9;
  id v10;
  id v11;
  id v12;

  v3 = type metadata accessor for QuoteDetailViewModel();
  sub_1DC092F9C(v2 + *(int *)(v3 + 20), v0, &qword_1EDB28BA0, (void (*)(uint64_t))MEMORY[0x1E0DAE188]);
  v4 = sub_1DC400370();
  v5 = *(_QWORD *)(v4 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v0, 1, v4) == 1)
  {
    sub_1DC092F14(v0, &qword_1EDB28BA0, (void (*)(uint64_t))MEMORY[0x1E0DAE188]);
  }
  else
  {
    v7 = sub_1DC4002EC();
    v9 = v8;
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v0, v4);
    if ((v9 & 1) == 0)
    {
      v10 = (id)sub_1DC0FD03C(0, 5, 1, *(double *)&v7);
      objc_msgSend(v10, sel_setNumberStyle_, 1);
      v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithDouble_, *(double *)&v7);
      v12 = objc_msgSend(v10, sel_stringFromNumber_, v11);

      if (v12)
      {
        v1 = sub_1DC408A4C();
        swift_bridgeObjectRelease();

      }
    }
  }
  return v1;
}

void sub_1DC1FE150(double a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v13;
  void *v14;
  void *v15;
  id v16;
  _QWORD v17[2];

  v8 = sub_1DC400118();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 <= -9.22337204e18 || a1 >= 9.22337204e18)
  {
    swift_bridgeObjectRetain();
    return;
  }
  if ((~*(_QWORD *)&a1 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_13;
  }
  if (a1 <= -9.22337204e18)
  {
LABEL_13:
    __break(1u);
    return;
  }
  v13 = type metadata accessor for QuoteDetailViewModel();
  if ((uint64_t)a1 >= 1
    && (v14 = *(void **)(*(_QWORD *)(a4 + *(int *)(v13 + 32)) + 16),
        sub_1DC4000DC(),
        v15 = (void *)sub_1DC4000AC(),
        (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8),
        v16 = objc_msgSend(v14, sel_formattedCount_withLocale_longform_compactDisplay_, (uint64_t)a1, v15, a5 & 1, 0),
        v15,
        v16))
  {
    sub_1DC408A4C();

  }
  else
  {
    v17[1] = (uint64_t)a1;
    sub_1DC4099B8();
  }
}

uint64_t *sub_1DC1FE2EC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v11 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = *(int *)(a3 + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_1DC4008EC();
    v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t sub_1DC1FE388(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_1DC4008EC();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *sub_1DC1FE3D0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(a3 + 20);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_1DC4008EC();
  v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

_QWORD *sub_1DC1FE440(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1DC4008EC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_OWORD *sub_1DC1FE4BC(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_1DC4008EC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_QWORD *sub_1DC1FE518(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1DC4008EC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_1DC1FE584()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC1FE590(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1DC4008EC();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t sub_1DC1FE60C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC1FE618(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_1DC4008EC();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for TickerPriceChangeDisplayBlueprintModifier()
{
  uint64_t result;

  result = qword_1EDB41208;
  if (!qword_1EDB41208)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1DC1FE6C8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1DC4008EC();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1DC1FE73C(uint64_t a1, void (*a2)(char *), uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v21[2];
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *);
  _BYTE v28[16];
  uint64_t v29;
  _BYTE v30[16];

  v26 = a3;
  v27 = a2;
  v21[1] = a1;
  v4 = sub_1DC404984();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0AE268(0, &qword_1EDB2A270, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB9A28]);
  v24 = *(_QWORD *)(v8 - 8);
  v25 = v8;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v21 - v9;
  sub_1DC0DBB7C();
  MEMORY[0x1E0C80A78](v11);
  sub_1DC0AE268(0, (unint64_t *)&qword_1EDB2AAD8, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790]);
  v22 = *(_QWORD *)(v12 - 8);
  v23 = v12;
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v21 - v13;
  v29 = v3;
  v15 = sub_1DC155148((void (*)(char *))sub_1DC1FF098, (uint64_t)v28, (uint64_t)v30);
  sub_1DC0AE268(0, (unint64_t *)&qword_1EDB29D30, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60]);
  v17 = v16;
  v18 = sub_1DC0DDDA0(&qword_1EDB29D20, MEMORY[0x1E0DB7B88]);
  v19 = sub_1DC0DDDA0(&qword_1EDB29D18, MEMORY[0x1E0DB7B80]);
  MEMORY[0x1DF0C311C](v15, v17, v18, v19);
  type metadata accessor for TickerModel();
  sub_1DC0DDCD4();
  sub_1DC080808(&qword_1EDB2CA50, (uint64_t (*)(uint64_t))type metadata accessor for TickerModel, (uint64_t)&unk_1DC4278A0);
  sub_1DC406D0C();
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DB7FB8], v4);
  sub_1DC17F300();
  sub_1DC405554();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v27(v10);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v10, v25);
  return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v14, v23);
}

uint64_t sub_1DC1FE9F0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE v10[16];
  uint64_t v11;
  _BYTE v12[8];
  uint64_t v13;
  uint64_t v14;

  sub_1DC10D848();
  MEMORY[0x1E0C80A78](v3);
  sub_1DC0AE268(0, (unint64_t *)&qword_1EDB29D30, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60]);
  sub_1DC4046FC();
  v13 = v14;
  v11 = a2;
  v4 = sub_1DC15517C((void (*)(char *))sub_1DC1FF0B4, (uint64_t)v10, (uint64_t)v12);
  sub_1DC0F6C50(0);
  v6 = v5;
  v7 = sub_1DC080808(&qword_1EDB29B90, (uint64_t (*)(uint64_t))sub_1DC0F6C50, MEMORY[0x1E0DB6F08]);
  v8 = sub_1DC080808(&qword_1EDB29B88, (uint64_t (*)(uint64_t))sub_1DC0F6C50, MEMORY[0x1E0DB6EF8]);
  MEMORY[0x1DF0C311C](v4, v6, v7, v8);
  type metadata accessor for TickerModel();
  sub_1DC0DDCD4();
  sub_1DC080808(&qword_1EDB2CA50, (uint64_t (*)(uint64_t))type metadata accessor for TickerModel, (uint64_t)&unk_1DC4278A0);
  return sub_1DC4046F0();
}

uint64_t sub_1DC1FEB74@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  int *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t, uint64_t);
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  _QWORD *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  v60 = a2;
  v57 = a1;
  v2 = sub_1DC4011C8();
  MEMORY[0x1E0C80A78](v2);
  v59 = (char *)&v45 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for PriceViewModel();
  MEMORY[0x1E0C80A78](v4);
  v58 = (uint64_t)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = sub_1DC4008EC();
  v62 = *(_QWORD *)(v55 - 8);
  MEMORY[0x1E0C80A78](v55);
  v53 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC092F50(0, &qword_1EDB353E0, (void (*)(uint64_t))type metadata accessor for StockSparklineViewModel);
  MEMORY[0x1E0C80A78](v7);
  v61 = (uint64_t)&v45 - v8;
  sub_1DC092F50(0, &qword_1EDB28DC0, (void (*)(uint64_t))MEMORY[0x1E0DAF040]);
  MEMORY[0x1E0C80A78](v9);
  v54 = (uint64_t)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v45 - v12;
  v45 = (uint64_t)&v45 - v12;
  v14 = sub_1DC4010E4();
  v48 = *(_QWORD *)(v14 - 8);
  v15 = v48;
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = (int *)type metadata accessor for StockViewModel();
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v45 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v45 - v22;
  v56 = type metadata accessor for TickerModel();
  MEMORY[0x1E0C80A78](v56);
  v52 = (uint64_t *)((char *)&v45 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v25);
  v27 = (uint64_t *)((char *)&v45 - v26);
  sub_1DC0F6C50(0);
  sub_1DC404354();
  v51 = *v27;
  sub_1DC0F14E0();
  v49 = v28;
  sub_1DC092ED0((uint64_t)v27 + *(int *)(v28 + 48), (uint64_t)v23, (uint64_t (*)(_QWORD))type metadata accessor for StockViewModel);
  v29 = *(void (**)(char *, char *, uint64_t))(v15 + 16);
  v30 = v17;
  v46 = v17;
  v47 = v14;
  v29(v17, v23, v14);
  v31 = (uint64_t)&v23[v18[5]];
  v50 = v23;
  sub_1DC092F9C(v31, (uint64_t)v13, &qword_1EDB28DC0, (void (*)(uint64_t))MEMORY[0x1E0DAF040]);
  v32 = (uint64_t)&v23[v18[6]];
  v33 = v61;
  sub_1DC092F9C(v32, v61, &qword_1EDB353E0, (void (*)(uint64_t))type metadata accessor for StockSparklineViewModel);
  v34 = type metadata accessor for TickerPriceChangeDisplayBlueprintModifier();
  v35 = *(void (**)(char *, uint64_t, uint64_t))(v62 + 16);
  v36 = v53;
  v37 = v55;
  v35(v53, v57 + *(int *)(v34 + 20), v55);
  v29(v20, v30, v14);
  v38 = v45;
  sub_1DC092F9C(v45, (uint64_t)&v20[v18[5]], &qword_1EDB28DC0, (void (*)(uint64_t))MEMORY[0x1E0DAF040]);
  sub_1DC092F9C(v33, (uint64_t)&v20[v18[6]], &qword_1EDB353E0, (void (*)(uint64_t))type metadata accessor for StockSparklineViewModel);
  v35(&v20[v18[8]], (uint64_t)v36, v37);
  v20[v18[9]] = 0;
  v39 = v54;
  sub_1DC092F9C(v38, v54, &qword_1EDB28DC0, (void (*)(uint64_t))MEMORY[0x1E0DAF040]);
  v40 = v59;
  v41 = v46;
  sub_1DC401078();
  v42 = v58;
  sub_1DC0FE8A4(v39, v40, 9666786, 0xA300000000000000, v58);
  (*(void (**)(char *, uint64_t))(v62 + 8))(v36, v37);
  sub_1DC092F14(v61, &qword_1EDB353E0, (void (*)(uint64_t))type metadata accessor for StockSparklineViewModel);
  sub_1DC092F14(v38, &qword_1EDB28DC0, (void (*)(uint64_t))MEMORY[0x1E0DAF040]);
  (*(void (**)(char *, uint64_t))(v48 + 8))(v41, v47);
  sub_1DC092ED0(v42, (uint64_t)&v20[v18[7]], (uint64_t (*)(_QWORD))type metadata accessor for PriceViewModel);
  v43 = (uint64_t)v52 + *(int *)(v49 + 48);
  *v52 = v51;
  sub_1DC0FD5F4((uint64_t)v20, v43);
  sub_1DC080808(&qword_1EDB2CA50, (uint64_t (*)(uint64_t))type metadata accessor for TickerModel, (uint64_t)&unk_1DC4278A0);
  sub_1DC404348();
  sub_1DC0DD6D4((uint64_t)v20);
  return sub_1DC0DD6D4((uint64_t)v50);
}

uint64_t sub_1DC1FF06C()
{
  return sub_1DC080808(qword_1EDB41890, (uint64_t (*)(uint64_t))type metadata accessor for TickerPriceChangeDisplayBlueprintModifier, (uint64_t)&unk_1DC418308);
}

uint64_t sub_1DC1FF098(uint64_t a1)
{
  uint64_t v1;

  return sub_1DC1FE9F0(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1DC1FF0B4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1DC1FEB74(*(_QWORD *)(v1 + 16), a1);
}

uint64_t dispatch thunk of BaseStylerType.positiveColor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of BaseStylerType.negativeColor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of BaseStylerType.positiveColorAgainstWhite.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of BaseStylerType.negativeColorAgainstWhite.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of BaseStylerType.positiveColorAgainstBlack.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of BaseStylerType.negativeColorAgainstBlack.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of BaseStylerType.style(sidebarSearchBar:traitCollection:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 88))();
}

uint64_t dispatch thunk of BaseStylerType.style(toolbarItem:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 96))();
}

uint64_t sub_1DC1FF110()
{
  return type metadata accessor for BaseStyler();
}

uint64_t sub_1DC1FF118()
{
  uint64_t *v0;
  uint64_t v1;
  char v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *v0;
  v2 = sub_1DC400028();
  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC8StocksUI10BaseStyler_theme);
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8StocksUI10BaseStyler_theme + 24);
  v5 = v3[4];
  __swift_project_boxed_opaque_existential_1(v3, v4);
  v6 = 224;
  if ((v2 & 1) != 0)
    v6 = 232;
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + v6))(v4, v5);
}

uint64_t sub_1DC1FF18C()
{
  uint64_t *v0;
  uint64_t v1;
  char v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *v0;
  v2 = sub_1DC400028();
  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC8StocksUI10BaseStyler_theme);
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8StocksUI10BaseStyler_theme + 24);
  v5 = v3[4];
  __swift_project_boxed_opaque_existential_1(v3, v4);
  v6 = 232;
  if ((v2 & 1) != 0)
    v6 = 224;
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + v6))(v4, v5);
}

void sub_1DC1FF200(void *a1)
{
  uint64_t *v1;
  uint64_t v2;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;

  v2 = *v1;
  v3 = objc_msgSend(a1, sel_customView);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8StocksUI10BaseStyler_theme + 24);
    v6 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8StocksUI10BaseStyler_theme + 32);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v2 + OBJC_IVAR____TtC8StocksUI10BaseStyler_theme), v5);
    v7 = (id)(*(uint64_t (**)(uint64_t, uint64_t))(v6 + 104))(v5, v6);
    objc_msgSend(v4, sel_setTintColor_, v7);

  }
}

uint64_t sub_1DC1FF2A8()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (_QWORD *)(*v0 + OBJC_IVAR____TtC8StocksUI10BaseStyler_theme);
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 96))(v2, v3);
}

uint64_t sub_1DC1FF2F8()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (_QWORD *)(*v0 + OBJC_IVAR____TtC8StocksUI10BaseStyler_theme);
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 112))(v2, v3);
}

uint64_t sub_1DC1FF348()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (_QWORD *)(*v0 + OBJC_IVAR____TtC8StocksUI10BaseStyler_theme);
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 120))(v2, v3);
}

uint64_t sub_1DC1FF398()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (_QWORD *)(*v0 + OBJC_IVAR____TtC8StocksUI10BaseStyler_theme);
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 128))(v2, v3);
}

uint64_t sub_1DC1FF3E8()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (_QWORD *)(*v0 + OBJC_IVAR____TtC8StocksUI10BaseStyler_theme);
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 144))(v2, v3);
}

uint64_t sub_1DC1FF438()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (_QWORD *)(*v0 + OBJC_IVAR____TtC8StocksUI10BaseStyler_theme);
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 168))(v2, v3);
}

uint64_t sub_1DC1FF488()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (_QWORD *)(*v0 + OBJC_IVAR____TtC8StocksUI10BaseStyler_theme);
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 176))(v2, v3);
}

uint64_t sub_1DC1FF4D8()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (_QWORD *)(*v0 + OBJC_IVAR____TtC8StocksUI10BaseStyler_theme);
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 184))(v2, v3);
}

uint64_t sub_1DC1FF528()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (_QWORD *)(*v0 + OBJC_IVAR____TtC8StocksUI10BaseStyler_theme);
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 192))(v2, v3);
}

uint64_t sub_1DC1FF578()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (_QWORD *)(*v0 + OBJC_IVAR____TtC8StocksUI10BaseStyler_theme);
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 208))(v2, v3);
}

uint64_t sub_1DC1FF5C8()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (_QWORD *)(*v0 + OBJC_IVAR____TtC8StocksUI10BaseStyler_theme);
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 216))(v2, v3);
}

uint64_t sub_1DC1FF618()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (_QWORD *)(*v0 + OBJC_IVAR____TtC8StocksUI10BaseStyler_theme);
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 256))(v2, v3);
}

uint64_t sub_1DC1FF668()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (_QWORD *)(*v0 + OBJC_IVAR____TtC8StocksUI10BaseStyler_theme);
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 264))(v2, v3);
}

uint64_t sub_1DC1FF6B8()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (_QWORD *)(*v0 + OBJC_IVAR____TtC8StocksUI10BaseStyler_theme);
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 272))(v2, v3);
}

uint64_t sub_1DC1FF708()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (_QWORD *)(*v0 + OBJC_IVAR____TtC8StocksUI10BaseStyler_theme);
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 280))(v2, v3);
}

uint64_t sub_1DC1FF758()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (_QWORD *)(*v0 + OBJC_IVAR____TtC8StocksUI10BaseStyler_theme);
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 288))(v2, v3);
}

uint64_t sub_1DC1FF7A8()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (_QWORD *)(*v0 + OBJC_IVAR____TtC8StocksUI10BaseStyler_theme);
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 296))(v2, v3);
}

uint64_t sub_1DC1FF7F8()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (_QWORD *)(*v0 + OBJC_IVAR____TtC8StocksUI10BaseStyler_theme);
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 304))(v2, v3);
}

uint64_t sub_1DC1FF848()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (_QWORD *)(*v0 + OBJC_IVAR____TtC8StocksUI10BaseStyler_theme);
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 312))(v2, v3);
}

uint64_t sub_1DC1FF898()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (_QWORD *)(*v0 + OBJC_IVAR____TtC8StocksUI10BaseStyler_theme);
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 320))(v2, v3);
}

uint64_t sub_1DC1FF8E8()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (_QWORD *)(*v0 + OBJC_IVAR____TtC8StocksUI10BaseStyler_theme);
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 328))(v2, v3);
}

uint64_t sub_1DC1FF938()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (_QWORD *)(*v0 + OBJC_IVAR____TtC8StocksUI10BaseStyler_theme);
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 336))(v2, v3);
}

uint64_t sub_1DC1FF988()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (_QWORD *)(*v0 + OBJC_IVAR____TtC8StocksUI10BaseStyler_theme);
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 344))(v2, v3);
}

uint64_t sub_1DC1FF9D8()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (_QWORD *)(*v0 + OBJC_IVAR____TtC8StocksUI10BaseStyler_theme);
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 352))(v2, v3);
}

uint64_t sub_1DC1FFA28()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (_QWORD *)(*v0 + OBJC_IVAR____TtC8StocksUI10BaseStyler_theme);
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 360))(v2, v3);
}

uint64_t sub_1DC1FFA78()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (_QWORD *)(*v0 + OBJC_IVAR____TtC8StocksUI10BaseStyler_theme);
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 368))(v2, v3);
}

uint64_t sub_1DC1FFAD0()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (_QWORD *)(*v0 + OBJC_IVAR____TtC8StocksUI10BaseStyler_theme);
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 376))(v2, v3);
}

uint64_t sub_1DC1FFB20()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (_QWORD *)(*v0 + OBJC_IVAR____TtC8StocksUI10BaseStyler_theme);
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 384))(v2, v3);
}

uint64_t sub_1DC1FFB70()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (_QWORD *)(*v0 + OBJC_IVAR____TtC8StocksUI10BaseStyler_theme);
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 392))(v2, v3);
}

uint64_t sub_1DC1FFBC0()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (_QWORD *)(*v0 + OBJC_IVAR____TtC8StocksUI10BaseStyler_theme);
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 400))(v2, v3);
}

uint64_t sub_1DC1FFC10()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (_QWORD *)(*v0 + OBJC_IVAR____TtC8StocksUI10BaseStyler_theme);
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 408))(v2, v3);
}

uint64_t sub_1DC1FFC60()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (_QWORD *)(*v0 + OBJC_IVAR____TtC8StocksUI10BaseStyler_theme);
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 416))(v2, v3);
}

uint64_t sub_1DC1FFCB0()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (_QWORD *)(*v0 + OBJC_IVAR____TtC8StocksUI10BaseStyler_theme);
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 424))(v2, v3);
}

uint64_t sub_1DC1FFD00()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (_QWORD *)(*v0 + OBJC_IVAR____TtC8StocksUI10BaseStyler_theme);
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 432))(v2, v3);
}

uint64_t sub_1DC1FFD50()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (_QWORD *)(*v0 + OBJC_IVAR____TtC8StocksUI10BaseStyler_theme);
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 440))(v2, v3);
}

uint64_t sub_1DC1FFDA0()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (_QWORD *)(*v0 + OBJC_IVAR____TtC8StocksUI10BaseStyler_theme);
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 456))(v2, v3);
}

uint64_t sub_1DC1FFDF0()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (_QWORD *)(*v0 + OBJC_IVAR____TtC8StocksUI10BaseStyler_theme);
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 464))(v2, v3);
}

uint64_t sub_1DC1FFE40()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (_QWORD *)(*v0 + OBJC_IVAR____TtC8StocksUI10BaseStyler_theme);
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 472))(v2, v3);
}

uint64_t sub_1DC1FFE90()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (_QWORD *)(*v0 + OBJC_IVAR____TtC8StocksUI10BaseStyler_theme);
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 480))(v2, v3);
}

uint64_t sub_1DC1FFEE0()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (_QWORD *)(*v0 + OBJC_IVAR____TtC8StocksUI10BaseStyler_theme);
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 496))(v2, v3);
}

uint64_t sub_1DC1FFF30()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (_QWORD *)(*v0 + OBJC_IVAR____TtC8StocksUI10BaseStyler_theme);
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 504))(v2, v3);
}

uint64_t sub_1DC1FFF80()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (_QWORD *)(*v0 + OBJC_IVAR____TtC8StocksUI10BaseStyler_theme);
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 512))(v2, v3);
}

uint64_t sub_1DC1FFFD0()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (_QWORD *)(*v0 + OBJC_IVAR____TtC8StocksUI10BaseStyler_theme);
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 520))(v2, v3);
}

uint64_t sub_1DC200020()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (_QWORD *)(*v0 + OBJC_IVAR____TtC8StocksUI10BaseStyler_theme);
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v3 + 8) + 8))(v2);
}

unint64_t sub_1DC200068()
{
  unint64_t result;

  result = qword_1F034EAA8;
  if (!qword_1F034EAA8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1F034EAA8);
  }
  return result;
}

uint64_t sub_1DC2000A4()
{
  id *v0;

  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 2));

  return swift_deallocObject();
}

uint64_t sub_1DC200210()
{
  id *v0;

  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 2));

  return swift_deallocObject();
}

Swift::Double __swiftcall Double.percentChange(with:)(Swift::Double with)
{
  double v1;
  double v2;
  Swift::Double result;

  v2 = v1 - with;
  result = with / v2;
  if (v2 <= 0.0)
    return 0.0;
  return result;
}

void destroy for StockFeedNewsFailedBlueprintModifier(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a1 + 40);

}

uint64_t initializeWithCopy for StockFeedNewsFailedBlueprintModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  void *v10;
  id v11;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v6 = a2 + 40;
  v7 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 64) = v7;
  v8 = v7;
  v9 = **(void (***)(uint64_t, uint64_t, uint64_t))(v7 - 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  v9(a1 + 40, v6, v8);
  v10 = *(void **)(a2 + 80);
  *(_QWORD *)(a1 + 80) = v10;
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  v11 = v10;
  return a1;
}

uint64_t assignWithCopy for StockFeedNewsFailedBlueprintModifier(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_retain();
  swift_release();
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 40), (uint64_t *)(a2 + 40));
  v4 = *(void **)(a2 + 80);
  v5 = *(void **)(a1 + 80);
  *(_QWORD *)(a1 + 80) = v4;
  v6 = v4;

  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  return a1;
}

__n128 __swift_memcpy89_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 73) = *(_OWORD *)(a2 + 73);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for StockFeedNewsFailedBlueprintModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a1 + 40);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  v6 = *(_QWORD *)(a2 + 80);
  v7 = *(void **)(a1 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v6;

  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  return a1;
}

uint64_t getEnumTagSinglePayload for StockFeedNewsFailedBlueprintModifier(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 89))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for StockFeedNewsFailedBlueprintModifier(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 88) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 89) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 89) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for StockFeedNewsFailedBlueprintModifier()
{
  return &type metadata for StockFeedNewsFailedBlueprintModifier;
}

uint64_t sub_1DC200680(uint64_t a1, void (*a2)(uint64_t *), uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  void (*v88)(char *, uint64_t);
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  void (*v104)(uint64_t *);
  uint64_t v105;
  uint64_t *v106;

  v103 = a3;
  v104 = a2;
  v105 = a1;
  v86 = sub_1DC404984();
  v85 = *(_QWORD *)(v86 - 8);
  MEMORY[0x1E0C80A78](v86);
  v84 = (char *)&v74 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC165EEC(0, &qword_1EDB2A278, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB9A28]);
  v101 = *(_QWORD *)(v5 - 8);
  v102 = v5;
  MEMORY[0x1E0C80A78](v5);
  v106 = (uint64_t *)((char *)&v74 - v6);
  sub_1DC142434();
  MEMORY[0x1E0C80A78](v7);
  v81 = (char *)&v74 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = type metadata accessor for StockFeedModel();
  MEMORY[0x1E0C80A78](v83);
  v80 = (char *)&v74 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = type metadata accessor for StockFeedSectionDescriptor();
  MEMORY[0x1E0C80A78](v82);
  v88 = (void (*)(char *, uint64_t))((char *)&v74 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = sub_1DC407EAC();
  v92 = *(_QWORD *)(v11 - 8);
  v93 = v11;
  MEMORY[0x1E0C80A78](v11);
  v97 = (uint64_t)&v74 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC165EEC(0, (unint64_t *)&qword_1EDB2AB10, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790]);
  v14 = v13;
  v91 = *((_QWORD *)v13 - 1);
  MEMORY[0x1E0C80A78](v13);
  v90 = (char *)&v74 - v15;
  v16 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1DC089DA4(0, &qword_1EDB28B50, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1658], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v17);
  v87 = (char *)&v74 - v18;
  v19 = sub_1DC400280();
  v94 = *(_QWORD *)(v19 - 8);
  v95 = v19;
  MEMORY[0x1E0C80A78](v19);
  v89 = (char *)&v74 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC089DA4(0, &qword_1EDB29BC8, (uint64_t (*)(uint64_t))sub_1DC142200, v16);
  MEMORY[0x1E0C80A78](v21);
  v98 = (char *)&v74 - v22;
  sub_1DC142200();
  v99 = *(_QWORD *)(v23 - 8);
  v100 = v23;
  MEMORY[0x1E0C80A78](v23);
  v96 = (char *)&v74 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC142D3C();
  MEMORY[0x1E0C80A78](v25);
  v27 = (char *)&v74 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC165EEC(0, (unint64_t *)&qword_1EDB29D60, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60]);
  v29 = v28;
  v30 = *(_QWORD *)(v28 - 8);
  MEMORY[0x1E0C80A78](v28);
  v78 = (char *)&v74 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v32);
  v34 = (char *)&v74 - v33;
  v79 = v3;
  v35 = v105;
  sub_1DC406CC4();
  v36 = v30;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v27, 1, v29) == 1)
  {
    sub_1DC201274((uint64_t)v27);
    sub_1DC2012B0();
    v37 = swift_allocError();
    v38 = v106;
    *v106 = v37;
    v40 = v101;
    v39 = v102;
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(v101 + 104))(v38, *MEMORY[0x1E0DB99F0], v102);
    v104(v38);
    return (*(uint64_t (**)(uint64_t *, uint64_t))(v40 + 8))(v38, v39);
  }
  else
  {
    v42 = v106;
    (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v34, v27, v29);
    v43 = (uint64_t)v98;
    v44 = v14;
    v45 = v36;
    v46 = v35;
    sub_1DC406C7C();
    v48 = v99;
    v47 = v100;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v99 + 48))(v43, 1, v100) == 1)
    {
      sub_1DC0B091C(v43, &qword_1EDB29BC8, (uint64_t (*)(uint64_t))sub_1DC142200);
      sub_1DC2012B0();
      v49 = v42;
      *v42 = swift_allocError();
      v51 = v101;
      v50 = v102;
      (*(void (**)(uint64_t *, _QWORD, uint64_t))(v101 + 104))(v49, *MEMORY[0x1E0DB99F0], v102);
      v104(v49);
      (*(void (**)(uint64_t *, uint64_t))(v51 + 8))(v49, v50);
      return (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v34, v29);
    }
    else
    {
      v75 = v29;
      v76 = v45;
      v77 = v34;
      v52 = v96;
      (*(void (**)(char *, uint64_t, uint64_t))(v48 + 32))(v96, v43, v47);
      v53 = (uint64_t)v87;
      sub_1DC406D24();
      v54 = v94;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v94 + 48))(v53, 1, v95) == 1)
      {
        v55 = v42;
        sub_1DC0B091C(v53, &qword_1EDB28B50, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1658]);
        sub_1DC2012B0();
        *v42 = swift_allocError();
        v57 = v101;
        v56 = v102;
        (*(void (**)(uint64_t *, _QWORD, uint64_t))(v101 + 104))(v55, *MEMORY[0x1E0DB99F0], v102);
        v104(v55);
        (*(void (**)(uint64_t *, uint64_t))(v57 + 8))(v55, v56);
        (*(void (**)(char *, uint64_t))(v48 + 8))(v52, v47);
        return (*(uint64_t (**)(char *, uint64_t))(v76 + 8))(v77, v75);
      }
      else
      {
        (*(void (**)(void))(v54 + 32))();
        (*(void (**)(char *, uint64_t, char *))(v91 + 16))(v90, v46, v44);
        v58 = v79;
        sub_1DC201020(v97);
        v59 = *(_QWORD *)(v58 + 32);
        swift_storeEnumTagMultiPayload();
        sub_1DC089DA4(0, (unint64_t *)&qword_1EDB3FEA0, (uint64_t (*)(uint64_t))sub_1DC142200, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
        v98 = v44;
        v60 = swift_allocObject();
        *(_OWORD *)(v60 + 16) = xmmword_1DC40DC10;
        sub_1DC165FB8();
        v62 = *(int *)(v61 + 48);
        v63 = v80;
        (*(void (**)(char *, uint64_t, uint64_t))(v92 + 16))(v80, v97, v93);
        *(_QWORD *)&v63[v62] = v59;
        swift_storeEnumTagMultiPayload();
        sub_1DC080808(&qword_1EDB2D770, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedModel, (uint64_t)&unk_1DC429058);
        swift_retain();
        sub_1DC404348();
        v64 = sub_1DC080808((unint64_t *)&unk_1EDB29BB0, (uint64_t (*)(uint64_t))sub_1DC142200, MEMORY[0x1E0DB6F08]);
        v65 = sub_1DC080808(&qword_1EDB29BA8, (uint64_t (*)(uint64_t))sub_1DC142200, MEMORY[0x1E0DB6EF8]);
        MEMORY[0x1DF0C3110](v60, v47, v64, v65);
        sub_1DC080808(&qword_1EDB36EE0, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedSectionDescriptor, (uint64_t)&unk_1DC4167B0);
        v66 = v78;
        sub_1DC4046F0();
        v67 = v98;
        v68 = v90;
        sub_1DC406CB8();
        v88 = *(void (**)(char *, uint64_t))(v76 + 8);
        v69 = v75;
        v88(v66, v75);
        v70 = v85;
        v71 = v84;
        v72 = v86;
        (*(void (**)(char *, _QWORD, uint64_t))(v85 + 104))(v84, *MEMORY[0x1E0DB7FB8], v86);
        sub_1DC080808(&qword_1EDB36EE8, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedSectionDescriptor, (uint64_t)&unk_1DC416860);
        v73 = v106;
        sub_1DC405554();
        (*(void (**)(char *, uint64_t))(v70 + 8))(v71, v72);
        v104(v73);
        (*(void (**)(uint64_t *, uint64_t))(v101 + 8))(v73, v102);
        (*(void (**)(uint64_t, uint64_t))(v92 + 8))(v97, v93);
        (*(void (**)(char *, char *))(v91 + 8))(v68, v67);
        (*(void (**)(char *, uint64_t))(v94 + 8))(v89, v95);
        (*(void (**)(char *, uint64_t))(v99 + 8))(v96, v100);
        return ((uint64_t (*)(char *, uint64_t))v88)(v77, v69);
      }
    }
  }
}

uint64_t sub_1DC201020@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  char *v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  void (*v18)(char *, uint64_t);
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v23;

  v2 = sub_1DC407EAC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v23 - v7;
  v9 = sub_1DC1C0508();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC2B57E8((uint64_t)v11);
  sub_1DC1C0608();
  v13 = v12;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 1, v12) == 1)
  {
    if (sub_1DC400268())
    {
      if (qword_1F034B0E0 != -1)
        swift_once();
      v14 = qword_1F0368B90;
    }
    else
    {
      if (qword_1F034B0C0 != -1)
        swift_once();
      v14 = qword_1F0368B48;
    }
    v21 = __swift_project_value_buffer(v2, (uint64_t)v14);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(a1, v21, v2);
  }
  else
  {
    v15 = &v11[*(int *)(v13 + 48)];
    v16 = *(void (**)(char *, char *, uint64_t))(v3 + 32);
    v16(v8, v11, v2);
    v16(v5, v15, v2);
    v17 = sub_1DC400268();
    v18 = *(void (**)(char *, uint64_t))(v3 + 8);
    if (v17)
    {
      v18(v8, v2);
      v19 = a1;
      v20 = v5;
    }
    else
    {
      v18(v5, v2);
      v19 = a1;
      v20 = v8;
    }
    return ((uint64_t (*)(uint64_t, char *, uint64_t))v16)(v19, v20, v2);
  }
}

unint64_t sub_1DC201230()
{
  unint64_t result;

  result = qword_1EDB41740;
  if (!qword_1EDB41740)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC418478, &type metadata for StockFeedNewsFailedBlueprintModifier);
    atomic_store(result, (unint64_t *)&qword_1EDB41740);
  }
  return result;
}

uint64_t sub_1DC201274(uint64_t a1)
{
  uint64_t v2;

  sub_1DC142D3C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1DC2012B0()
{
  unint64_t result;

  result = qword_1F034EAB0;
  if (!qword_1F034EAB0)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC418570, &type metadata for StockFeedNewsFailedBlueprintModifier.ModifierError);
    atomic_store(result, (unint64_t *)&qword_1F034EAB0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for StockFeedNewsFailedBlueprintModifier.ModifierError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1DC201334 + 4 * byte_1DC418440[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1DC201354 + 4 * byte_1DC418445[v4]))();
}

_BYTE *sub_1DC201334(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1DC201354(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC20135C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC201364(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC20136C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC201374(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for StockFeedNewsFailedBlueprintModifier.ModifierError()
{
  return &type metadata for StockFeedNewsFailedBlueprintModifier.ModifierError;
}

unint64_t sub_1DC201394()
{
  unint64_t result;

  result = qword_1F034EAB8;
  if (!qword_1F034EAB8)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC418548, &type metadata for StockFeedNewsFailedBlueprintModifier.ModifierError);
    atomic_store(result, (unint64_t *)&qword_1F034EAB8);
  }
  return result;
}

uint64_t sub_1DC2013D8()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DemoArticleRecirculationConfigurationService()
{
  return objc_opt_self();
}

uint64_t sub_1DC20141C()
{
  sub_1DC201470();
  swift_allocObject();
  swift_bridgeObjectRetain();
  return sub_1DC402D58();
}

void sub_1DC201470()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F034EB60)
  {
    v0 = sub_1DC402DAC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1F034EB60);
  }
}

ValueMetadata *type metadata accessor for Settings.AppLaunch()
{
  return &type metadata for Settings.AppLaunch;
}

uint64_t sub_1DC2014D4(uint64_t a1)
{
  return sub_1DC2014F8(a1, 0xD00000000000001DLL, 0x80000001DC43C220, &qword_1EDB5E270);
}

uint64_t sub_1DC2014F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  _QWORD v14[2];

  v5 = sub_1DC401348();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1DC401354();
  v10 = MEMORY[0x1E0C80A78](v9);
  (*(void (**)(char *, _QWORD, __n128))(v12 + 104))((char *)v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E0DB5800], v10);
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0DB57E0], v5);
  v14[0] = 0;
  v14[1] = 0xE000000000000000;
  sub_1DC08A0F4(0, &qword_1EDB29108);
  swift_allocObject();
  result = sub_1DC4013A8();
  *a4 = result;
  return result;
}

uint64_t sub_1DC201638(uint64_t a1)
{
  return sub_1DC2014F8(a1, 0xD000000000000029, 0x80000001DC43C1F0, &qword_1EDB5E278);
}

uint64_t ForYouSection.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ForYouSection.headlines.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ForYouSection.descriptor.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for ForYouSection();
  return sub_1DC0990BC(v1 + *(int *)(v3 + 24), a1, (uint64_t (*)(_QWORD))type metadata accessor for ForYouSectionDescriptor);
}

uint64_t type metadata accessor for ForYouSection()
{
  uint64_t result;

  result = qword_1F034EC20;
  if (!qword_1F034EC20)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t ForYouSection.init(identifier:headlines:descriptor:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v6;

  *a5 = a1;
  a5[1] = a2;
  a5[2] = a3;
  v6 = (uint64_t)a5 + *(int *)(type metadata accessor for ForYouSection() + 24);
  return sub_1DC201744(a4, v6);
}

uint64_t sub_1DC201744(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ForYouSectionDescriptor();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t ForYouSection.startIndex.getter()
{
  return 0;
}

uint64_t ForYouSection.endIndex.getter()
{
  uint64_t v0;

  return *(_QWORD *)(*(_QWORD *)(v0 + 16) + 16);
}

uint64_t ForYouSection.subscript.getter@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v3 = v2;
  v6 = type metadata accessor for ForYouSection();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0990BC(v3, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for ForYouSection);
  v9 = *(_QWORD *)(*((_QWORD *)v8 + 2) + 16);
  result = sub_1DC0926D8((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for ForYouSection);
  if ((a1 & 0x8000000000000000) != 0 || v9 <= (uint64_t)a1)
  {
    __break(1u);
  }
  else
  {
    v11 = *(_QWORD *)(v3 + 16);
    if (*(_QWORD *)(v11 + 16) > a1)
    {
      v12 = sub_1DC4011BC();
      return (*(uint64_t (**)(uint64_t, unint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(a2, v11+ ((*(unsigned __int8 *)(*(_QWORD *)(v12 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v12 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v12 - 8) + 72) * a1, v12);
    }
  }
  __break(1u);
  return result;
}

Swift::Int __swiftcall ForYouSection.index(after:)(Swift::Int after)
{
  BOOL v1;
  Swift::Int result;

  v1 = __OFADD__(after, 1);
  result = after + 1;
  if (v1)
    __break(1u);
  return result;
}

uint64_t ForYouSection.makeIterator()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = swift_allocObject();
  *(_QWORD *)(v1 + 16) = *(_QWORD *)(v0 + 16);
  *(_QWORD *)(v1 + 24) = 0;
  sub_1DC2020E4();
  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = sub_1DC2020DC;
  *(_QWORD *)(v2 + 24) = v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1DC201914@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  result = swift_beginAccess();
  v6 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  v7 = *(_QWORD *)(v6 + 16);
  if (v5 == v7)
  {
    v8 = sub_1DC4011BC();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(a2, 1, 1, v8);
  }
  else if (v5 >= v7)
  {
    __break(1u);
  }
  else
  {
    v9 = sub_1DC4011BC();
    v10 = *(_QWORD *)(v9 - 8);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v10 + 16))(a2, v6+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(_QWORD *)(v10 + 72) * v5, v9);
    *(_QWORD *)(a1 + 24) = v5 + 1;
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v10 + 56))(a2, 0, 1, v9);
  }
  return result;
}

void sub_1DC2019F4(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(*(_QWORD *)(v1 + 16) + 16);
}

void (*sub_1DC201A04(uint64_t *a1, unint64_t *a2))(_QWORD *a1)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;

  v4 = sub_1DC4011BC();
  *a1 = v4;
  v5 = *(_QWORD *)(v4 - 8);
  a1[1] = v5;
  v6 = malloc(*(_QWORD *)(v5 + 64));
  a1[2] = (uint64_t)v6;
  ForYouSection.subscript.getter(*a2, (uint64_t)v6);
  return sub_1DC201A68;
}

void sub_1DC201A68(_QWORD *a1)
{
  void *v1;

  v1 = (void *)a1[2];
  (*(void (**)(void *, _QWORD))(a1[1] + 8))(v1, *a1);
  free(v1);
}

uint64_t *sub_1DC201A98@<X0>(uint64_t *result@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;

  v3 = *result;
  if (*result < 0 || (v5 = result[1], *(_QWORD *)(*(_QWORD *)(v2 + 16) + 16) < v5))
  {
    __break(1u);
  }
  else
  {
    sub_1DC202298(0, &qword_1F034EBB0, MEMORY[0x1E0DEDE10]);
    result = (uint64_t *)sub_1DC0990BC(v2, (uint64_t)a2 + *(int *)(v6 + 40), (uint64_t (*)(_QWORD))type metadata accessor for ForYouSection);
    *a2 = v3;
    a2[1] = v5;
  }
  return result;
}

void sub_1DC201B10(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  sub_1DC0990BC(v1, a1, (uint64_t (*)(_QWORD))type metadata accessor for ForYouSection);
  sub_1DC202298(0, &qword_1F034EB98, MEMORY[0x1E0DEA200]);
  *(_QWORD *)(a1 + *(int *)(v3 + 36)) = 0;
  *(_QWORD *)(a1 + *(int *)(v3 + 40)) = *(_QWORD *)(*(_QWORD *)(v1 + 16) + 16);
}

BOOL sub_1DC201B70()
{
  uint64_t v0;

  return *(_QWORD *)(*(_QWORD *)(v0 + 16) + 16) == 0;
}

void sub_1DC201B84(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_WORD *)(a1 + 8) = 256;
}

uint64_t *sub_1DC201B94@<X0>(uint64_t *result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;

  if ((a2 & 0x8000000000000000) == 0)
  {
    v3 = *result;
    if (!a2)
    {
LABEL_6:
      *a3 = v3;
      return result;
    }
    v4 = v3 ^ 0x7FFFFFFFFFFFFFFFLL;
    v5 = a2 - 1;
    while (v4 > v5)
    {
      ++v3;
      if (!--a2)
        goto LABEL_6;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1DC201BCC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t result;
  char v6;

  result = sub_1DC201C00(*a1, a2, *a3);
  *(_QWORD *)a4 = result;
  *(_BYTE *)(a4 + 8) = v6 & 1;
  return result;
}

uint64_t sub_1DC201C00(uint64_t result, uint64_t a2, uint64_t a3)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int64x2_t v8;
  int64x2_t v9;
  int64x2_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  if (a2 < 0)
  {
LABEL_21:
    __break(1u);
    return result;
  }
  if (a2)
  {
    v3 = a3 - result;
    if (a3 - result >= (unint64_t)(a2 - 1))
      v3 = a2 - 1;
    if (v3 >= (result ^ 0x7FFFFFFFFFFFFFFFuLL))
      v3 = result ^ 0x7FFFFFFFFFFFFFFFLL;
    v4 = v3 + 1;
    if (v4 >= 5)
    {
      v7 = v4 & 3;
      if ((v4 & 3) == 0)
        v7 = 4;
      v5 = v4 - v7;
      v8 = 0uLL;
      v9 = (int64x2_t)(unint64_t)result;
      v10 = vdupq_n_s64(1uLL);
      v11 = v5;
      do
      {
        v9 = vaddq_s64(v9, v10);
        v8 = vaddq_s64(v8, v10);
        v11 -= 4;
      }
      while (v11);
      v6 = vaddvq_s64(vaddq_s64(v8, v9));
    }
    else
    {
      v5 = 0;
      v6 = result;
    }
    v12 = v5 + result - 0x7FFFFFFFFFFFFFFFLL;
    v13 = v5 + result - a3;
    v14 = a2 - v5;
    result = v6;
    while (1)
    {
      if (!v13)
        return 0;
      if (!v12)
        break;
      ++result;
      ++v12;
      ++v13;
      if (!--v14)
        return result;
    }
    __break(1u);
    goto LABEL_21;
  }
  return result;
}

uint64_t *sub_1DC201CD0(uint64_t *result, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  unint64_t v5;

  v2 = *result;
  v3 = *a2;
  if (*a2 < *result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (*a2 == *result)
    return 0;
  v4 = (uint64_t *)(v3 - v2);
  if (v3 > v2)
  {
    result = 0;
    v5 = v3 + ~v2;
    while (v5 <= 0x7FFFFFFFFFFFFFFELL)
    {
      result = (uint64_t *)((char *)result + 1);
      if (v4 == result)
        return result;
    }
    __break(1u);
    goto LABEL_10;
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t *sub_1DC201D28(uint64_t *result, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  BOOL v4;
  BOOL v5;

  v2 = *result;
  v3 = a2[1];
  if (*result >= *a2)
  {
    v5 = __OFSUB__(v2, v3);
    v4 = v2 - v3 < 0;
  }
  else
  {
    v5 = 0;
    v4 = 0;
  }
  if (v4 == v5)
    __break(1u);
  return result;
}

_QWORD *sub_1DC201D44(_QWORD *result, _QWORD *a2)
{
  if (*result < *a2 || a2[1] < *result)
    __break(1u);
  return result;
}

_QWORD *sub_1DC201D60(_QWORD *result, _QWORD *a2)
{
  if (*result < *a2 || a2[1] < result[1])
    __break(1u);
  return result;
}

_QWORD *sub_1DC201D7C@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  if (__OFADD__(*result, 1))
    __break(1u);
  else
    *a2 = *result + 1;
  return result;
}

_QWORD *sub_1DC201D94(_QWORD *result)
{
  if (__OFADD__(*result, 1))
    __break(1u);
  else
    ++*result;
  return result;
}

uint64_t sub_1DC201DAC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(v3 + 24) = 0;
  sub_1DC2020E4();
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = sub_1DC2020DC;
  *(_QWORD *)(v4 + 24) = v3;
  swift_bridgeObjectRetain();
  result = sub_1DC0926D8(v1, (uint64_t (*)(_QWORD))type metadata accessor for ForYouSection);
  *a1 = v4;
  return result;
}

uint64_t sub_1DC201E38()
{
  uint64_t v0;

  return *(_QWORD *)(*(_QWORD *)(v0 + 16) + 16);
}

uint64_t sub_1DC201E44()
{
  return 2;
}

size_t sub_1DC201E4C()
{
  uint64_t v0;
  size_t v1;

  v1 = sub_1DC32B64C(v0);
  sub_1DC0926D8(v0, (uint64_t (*)(_QWORD))type metadata accessor for ForYouSection);
  return v1;
}

uint64_t sub_1DC201E88()
{
  return sub_1DC408C44();
}

uint64_t ForYouSection.description.getter()
{
  sub_1DC409730();
  type metadata accessor for ForYouSection();
  sub_1DC20217C();
  sub_1DC408AA0();
  sub_1DC408B48();
  swift_bridgeObjectRelease();
  sub_1DC408B48();
  swift_bridgeObjectRetain();
  sub_1DC408B48();
  swift_bridgeObjectRelease();
  sub_1DC408B48();
  sub_1DC4099B8();
  sub_1DC408B48();
  swift_bridgeObjectRelease();
  sub_1DC408B48();
  type metadata accessor for ForYouSectionDescriptor();
  sub_1DC409808();
  sub_1DC408B48();
  return 0;
}

void _s8StocksUI13ForYouSectionV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  BOOL v4;
  uint64_t v5;

  v4 = *a1 == *a2 && a1[1] == a2[1];
  if ((v4 || (sub_1DC4099E8() & 1) != 0) && (sub_1DC19E8E8(a1[2], a2[2]) & 1) != 0)
  {
    v5 = *(int *)(type metadata accessor for ForYouSection() + 24);
    _s8StocksUI23ForYouSectionDescriptorO2eeoiySbAC_ACtFZ_0((uint64_t)a1 + v5, (uint64_t)a2 + v5);
  }
}

uint64_t sub_1DC2020B8()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1DC2020DC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1DC201914(v1, a1);
}

void sub_1DC2020E4()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1F034EB68)
  {
    v0 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DECEC8];
    sub_1DC2023B4(255, &qword_1F034EB70, MEMORY[0x1E0DECEC8]);
    sub_1DC202374(&qword_1F034EB78, &qword_1F034EB70, v0, MEMORY[0x1E0DECED8]);
    v1 = sub_1DC409760();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1F034EB68);
  }
}

unint64_t sub_1DC20217C()
{
  unint64_t result;

  result = qword_1F034EB80;
  if (!qword_1F034EB80)
  {
    type metadata accessor for ForYouSection();
    result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1F034EB80);
  }
  return result;
}

uint64_t sub_1DC2021B4()
{
  return sub_1DC2021D8(&qword_1F034EB88, (uint64_t)&protocol conformance descriptor for ForYouSection);
}

uint64_t sub_1DC2021D8(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for ForYouSection();
    result = MEMORY[0x1DF0CAB8C](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DC202218()
{
  return MEMORY[0x1E0DEB430];
}

uint64_t sub_1DC202224()
{
  return sub_1DC202258(&qword_1F034EB90, &qword_1F034EB98, MEMORY[0x1E0DEA200], MEMORY[0x1E0DEA228]);
}

uint64_t sub_1DC202258(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_1DC202298(255, a2, a3);
    result = MEMORY[0x1DF0CAB8C](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1DC202298(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    v6 = type metadata accessor for ForYouSection();
    v7 = sub_1DC2021D8(&qword_1F034EBA0, (uint64_t)&protocol conformance descriptor for ForYouSection);
    v8 = a3(a1, v6, v7);
    if (!v9)
      atomic_store(v8, a2);
  }
}

uint64_t sub_1DC20230C()
{
  return sub_1DC202258(&qword_1F034EBA8, &qword_1F034EBB0, MEMORY[0x1E0DEDE10], MEMORY[0x1E0DEDE48]);
}

uint64_t sub_1DC202340()
{
  return sub_1DC202374(&qword_1F034EBB8, &qword_1F034EBC0, MEMORY[0x1E0DEC1C0], MEMORY[0x1E0DEC1E8]);
}

uint64_t sub_1DC202374(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_1DC2023B4(255, a2, a3);
    result = MEMORY[0x1DF0CAB8C](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1DC2023B4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC4011BC();
    v7 = a3(a1, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for ForYouSection(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  int EnumCaseMultiPayload;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v12 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v12 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    a1[2] = a2[2];
    v6 = *(int *)(a3 + 24);
    v7 = (uint64_t *)((char *)a1 + v6);
    v8 = (uint64_t *)((char *)a2 + v6);
    v9 = type metadata accessor for ForYouSectionDescriptor();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v13 = sub_1DC407300();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v7, v8, v13);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v14 = v8[1];
      *v7 = *v8;
      v7[1] = v14;
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      v11 = sub_1DC4010E4();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v7, v8, v11);
      swift_storeEnumTagMultiPayload();
    }
  }
  return v3;
}

uint64_t destroy for ForYouSection(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  type metadata accessor for ForYouSectionDescriptor();
  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 2)
  {
    v6 = sub_1DC407300();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
  }
  if ((_DWORD)result != 1)
  {
    if ((_DWORD)result)
      return result;
    v6 = sub_1DC4010E4();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
  }
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for ForYouSection(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  int EnumCaseMultiPayload;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  v5 = *(int *)(a3 + 24);
  v6 = (_QWORD *)((char *)a1 + v5);
  v7 = (_QWORD *)((char *)a2 + v5);
  v8 = type metadata accessor for ForYouSectionDescriptor();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    v11 = sub_1DC407300();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v6, v7, v11);
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload == 1)
  {
    v12 = v7[1];
    *v6 = *v7;
    v6[1] = v12;
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    v10 = sub_1DC4010E4();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v6, v7, v10);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_QWORD *assignWithCopy for ForYouSection(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  int EnumCaseMultiPayload;
  uint64_t v11;
  uint64_t v12;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    v6 = *(int *)(a3 + 24);
    v7 = (_QWORD *)((char *)a1 + v6);
    v8 = (_QWORD *)((char *)a2 + v6);
    sub_1DC0926D8((uint64_t)a1 + v6, (uint64_t (*)(_QWORD))type metadata accessor for ForYouSectionDescriptor);
    v9 = type metadata accessor for ForYouSectionDescriptor();
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v12 = sub_1DC407300();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v7, v8, v12);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      *v7 = *v8;
      v7[1] = v8[1];
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      v11 = sub_1DC4010E4();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v7, v8, v11);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t initializeWithTake for ForYouSection(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  void *v5;
  const void *v6;
  uint64_t v7;
  int EnumCaseMultiPayload;
  uint64_t v9;
  uint64_t v10;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v4 = *(int *)(a3 + 24);
  v5 = (void *)(a1 + v4);
  v6 = (const void *)(a2 + v4);
  v7 = type metadata accessor for ForYouSectionDescriptor();
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    v10 = sub_1DC407300();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v5, v6, v10);
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    v9 = sub_1DC4010E4();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v5, v6, v9);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_QWORD *assignWithTake for ForYouSection(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  int EnumCaseMultiPayload;
  uint64_t v12;
  uint64_t v13;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    v7 = *(int *)(a3 + 24);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    sub_1DC0926D8((uint64_t)a1 + v7, (uint64_t (*)(_QWORD))type metadata accessor for ForYouSectionDescriptor);
    v10 = type metadata accessor for ForYouSectionDescriptor();
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v13 = sub_1DC407300();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v8, v9, v13);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
    else
    {
      v12 = sub_1DC4010E4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v8, v9, v12);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for ForYouSection()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC202A80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for ForYouSectionDescriptor();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for ForYouSection()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC202B08(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for ForYouSectionDescriptor();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t sub_1DC202B7C()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for ForYouSectionDescriptor();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1DC202C04@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  __int128 v10[2];

  sub_1DC0824D4((uint64_t)a1, (uint64_t)v10);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4018AC();
  result = sub_1DC4025FC();
  if (result)
  {
    v5 = result;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1DC096268(0, (unint64_t *)&qword_1EDB2ACC0);
    result = sub_1DC402608();
    if (v9)
    {
      v6 = type metadata accessor for StockFeedViewerModule();
      v7 = swift_allocObject();
      sub_1DC097DD0(v10, v7 + 16);
      *(_QWORD *)(v7 + 56) = v5;
      result = sub_1DC097DD0(&v8, v7 + 64);
      a2[3] = v6;
      a2[4] = (uint64_t)&off_1EA44F4F0;
      *a2 = v7;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1DC202D14()
{
  type metadata accessor for StockFeedViewerViewController();
  sub_1DC402B30();
  swift_release();
  sub_1DC096268(0, &qword_1EDB366D0);
  sub_1DC402B3C();
  swift_release();
  sub_1DC096268(0, &qword_1EDB366C8);
  sub_1DC402B3C();
  type metadata accessor for StockFeedViewerRouter();
  sub_1DC402488();
  swift_release();
  swift_release();
  sub_1DC096268(0, &qword_1EDB3A8A0);
  sub_1DC402B3C();
  swift_release();
  sub_1DC096268(0, &qword_1EDB397B0);
  sub_1DC402B3C();
  swift_release();
  sub_1DC096268(0, &qword_1EDB39F28);
  sub_1DC402B3C();
  swift_release();
  type metadata accessor for StockFeedViewerPageViewControllerProvider();
  sub_1DC402B30();
  return swift_release();
}

uint64_t sub_1DC202ED8(_QWORD *a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  char *v18;
  _QWORD v19[3];
  uint64_t v20;
  _UNKNOWN **v21;
  _BYTE v22[24];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE v28[24];
  uint64_t v29;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB366D0);
  result = sub_1DC402608();
  if (!v29)
  {
    __break(1u);
    goto LABEL_8;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB3A8A0);
  result = sub_1DC402608();
  v3 = v26;
  if (!v26)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v4 = v27;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC1502F0();
  result = sub_1DC4025FC();
  if (!result)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v5 = (void *)result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, (unint64_t *)&unk_1EDB29FB0);
  result = sub_1DC402608();
  v6 = v24;
  if (!v24)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v7 = v25;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB2A360);
  result = sub_1DC402608();
  if (v23)
  {
    v8 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v28, v29);
    MEMORY[0x1E0C80A78](v8);
    v10 = (_QWORD *)((char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v11 + 16))(v10);
    v12 = *v10;
    v20 = type metadata accessor for StockFeedViewerStyler();
    v21 = &off_1EA461CC8;
    v19[0] = v12;
    v13 = (char *)objc_allocWithZone((Class)type metadata accessor for StockFeedViewerViewController());
    v14 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v19, v20);
    MEMORY[0x1E0C80A78](v14);
    v16 = (_QWORD *)((char *)v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v17 + 16))(v16);
    v18 = sub_1DC2038E0(*v16, v3, v4, v5, v6, v7, (uint64_t)v22, v13);
    swift_unknownObjectRelease();

    swift_unknownObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
    return (uint64_t)v18;
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1DC2031C4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[24];
  uint64_t v14;
  uint64_t v15;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, qword_1EDB2D2F0);
  result = sub_1DC402608();
  v4 = v14;
  if (v14)
  {
    v5 = type metadata accessor for StockFeedViewerStyler();
    v6 = v15;
    v7 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v13, v14);
    MEMORY[0x1E0C80A78](v7);
    v9 = &v13[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
    (*(void (**)(_BYTE *))(v10 + 16))(v9);
    v11 = sub_1DC0A3134((uint64_t)v9, v5, v4, v6);
    result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
    a2[3] = v5;
    a2[4] = (uint64_t)&off_1EA461CC8;
    *a2 = v11;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC2032D8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  __int128 v6[2];

  sub_1DC0824D4(a1, (uint64_t)v6);
  v3 = type metadata accessor for StockFeedViewerRouter();
  v4 = swift_allocObject();
  swift_unknownObjectWeakInit();
  result = sub_1DC097DD0(v6, v4 + 24);
  a2[3] = v3;
  a2[4] = (uint64_t)&off_1EA46C8B8;
  *a2 = v4;
  return result;
}

void sub_1DC203350(uint64_t a1, _QWORD *a2)
{
  id v2;

  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for StockFeedViewerViewController();
  v2 = (id)sub_1DC4025FC();
  swift_unknownObjectWeakAssign();

}

uint64_t sub_1DC2033BC@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t **v9;
  uint64_t v10;
  _QWORD *v11;
  _BYTE v13[24];
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB397B0);
  result = sub_1DC402608();
  v5 = v15;
  if (v15)
  {
    v6 = v16;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1DC096268(0, &qword_1EDB366C8);
    result = sub_1DC402608();
    if (v14)
    {
      v7 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v13, v14);
      MEMORY[0x1E0C80A78](v7);
      v9 = (uint64_t **)&v13[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
      (*(void (**)(uint64_t **))(v10 + 16))(v9);
      v11 = sub_1DC2037D4(v5, v6, *v9);
      result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
      *a2 = v11;
      a2[1] = &off_1EA44ECA8;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1DC203518@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB39F28);
  result = sub_1DC402608();
  if (v7)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1DC132A10();
    result = sub_1DC4025FC();
    if (result)
    {
      v5 = result;
      type metadata accessor for StockFeedViewerInteractor();
      v6 = (_QWORD *)swift_allocObject();
      v6[3] = 0;
      result = swift_unknownObjectWeakInit();
      v6[4] = v7;
      v6[5] = v8;
      v6[6] = v5;
      *a2 = v6;
      a2[1] = &off_1EA45BBD0;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1DC20361C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for StockFeedViewerDataManager();
  result = swift_allocObject();
  *a1 = result;
  a1[1] = (uint64_t)&off_1EA459160;
  return result;
}

uint64_t sub_1DC203658(_QWORD *a1)
{
  uint64_t result;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[5];
  _BYTE v15[24];
  uint64_t v16;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, (unint64_t *)&qword_1EDB31230);
  result = sub_1DC402608();
  if (v16)
  {
    v2 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v15, v16);
    MEMORY[0x1E0C80A78](v2);
    v4 = (_QWORD *)((char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v5 + 16))(v4);
    v6 = *v4;
    v7 = type metadata accessor for StockFeedModule();
    v14[3] = v7;
    v14[4] = &off_1EA4544C8;
    v14[0] = v6;
    type metadata accessor for StockFeedViewerPageViewControllerProvider();
    v8 = (_QWORD *)swift_allocObject();
    v9 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v14, v7);
    MEMORY[0x1E0C80A78](v9);
    v11 = (_QWORD *)((char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v12 + 16))(v11);
    v13 = *v11;
    v8[5] = v7;
    v8[6] = &off_1EA4544C8;
    v8[2] = v13;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
    return (uint64_t)v8;
  }
  else
  {
    __break(1u);
  }
  return result;
}

_QWORD *sub_1DC2037D4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[5];
  _QWORD v14[3];
  uint64_t v15;
  _UNKNOWN **v16;

  v15 = *a3;
  v5 = v15;
  v16 = &off_1EA46C8B8;
  v14[0] = a3;
  type metadata accessor for StockFeedViewerEventHandler();
  v6 = (_QWORD *)swift_allocObject();
  v7 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v14, v15);
  MEMORY[0x1E0C80A78](v7);
  v9 = (_QWORD *)((char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v10 + 16))(v9);
  v11 = *v9;
  v13[3] = v5;
  v13[4] = &off_1EA46C8B8;
  v13[0] = v11;
  v6[3] = 0;
  swift_unknownObjectWeakInit();
  v6[4] = a1;
  v6[5] = a2;
  sub_1DC0824D4((uint64_t)v13, (uint64_t)(v6 + 6));
  *(_QWORD *)(v6[4] + 24) = &off_1EA44ECA0;
  swift_unknownObjectWeakAssign();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
  return v6;
}

char *sub_1DC2038E0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, char *a8)
{
  objc_class *ObjectType;
  char *v17;
  char *v18;
  id v19;
  char *v20;
  char *v21;
  objc_super v23;
  _QWORD v24[5];

  ObjectType = (objc_class *)swift_getObjectType();
  v24[3] = type metadata accessor for StockFeedViewerStyler();
  v24[4] = &off_1EA461CC8;
  v24[0] = a1;
  sub_1DC0824D4((uint64_t)v24, (uint64_t)&a8[OBJC_IVAR____TtC8StocksUI29StockFeedViewerViewController_styler]);
  v17 = &a8[OBJC_IVAR____TtC8StocksUI29StockFeedViewerViewController_eventHandler];
  *(_QWORD *)v17 = a2;
  *((_QWORD *)v17 + 1) = a3;
  *(_QWORD *)&a8[OBJC_IVAR____TtC8StocksUI29StockFeedViewerViewController_blueprintPageViewController] = a4;
  v18 = &a8[OBJC_IVAR____TtC8StocksUI29StockFeedViewerViewController_toolbarManager];
  *(_QWORD *)v18 = a5;
  *((_QWORD *)v18 + 1) = a6;
  sub_1DC0824D4(a7, (uint64_t)&a8[OBJC_IVAR____TtC8StocksUI29StockFeedViewerViewController_shareMenuItemManager]);
  v23.receiver = a8;
  v23.super_class = ObjectType;
  swift_unknownObjectRetain();
  v19 = a4;
  swift_unknownObjectRetain();
  v20 = (char *)objc_msgSendSuper2(&v23, sel_initWithNibName_bundle_, 0, 0);
  *(_QWORD *)(*(_QWORD *)&v20[OBJC_IVAR____TtC8StocksUI29StockFeedViewerViewController_eventHandler] + 24) = &off_1EA4529B0;
  swift_unknownObjectWeakAssign();
  v21 = v20;
  sub_1DC404CFC();

  __swift_destroy_boxed_opaque_existential_1(a7);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
  return v21;
}

uint64_t sub_1DC203A44()
{
  uint64_t result;
  uint64_t v1;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v1 = *(_QWORD *)(result + 16);
    swift_retain();
    swift_release();
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 40));
    sub_1DC400CD0();
    swift_allocObject();
    swift_weakInit();
    swift_retain();
    sub_1DC4014C8();
    swift_release_n();
    sub_1DC401834();
    return swift_release();
  }
  return result;
}

void sub_1DC203B30()
{
  sub_1DC203B50();
}

void sub_1DC203B50()
{
  uint64_t v0;
  uint64_t ObjCClassFromMetadata;
  id v2;
  void *v3;
  id v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  id v12;
  uint64_t v13;
  void *v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  id v19;
  _QWORD aBlock[6];

  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 48));
  sub_1DC400C1C();
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v2 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1DC3FFC80();

  v3 = (void *)objc_opt_self();
  v4 = objc_msgSend(v3, sel_bundleForClass_, ObjCClassFromMetadata, 0x80000001DC43C480);
  sub_1DC3FFC80();

  v5 = (void *)sub_1DC408A1C();
  swift_bridgeObjectRelease();
  v6 = (void *)sub_1DC408A1C();
  swift_bridgeObjectRelease();
  v7 = objc_msgSend((id)objc_opt_self(), sel_alertControllerWithTitle_message_preferredStyle_, v5, v6, 1, 0x80000001DC43C4E0);

  v8 = objc_msgSend(v3, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1DC3FFC80();

  v9 = (void *)sub_1DC408A1C();
  swift_bridgeObjectRelease();
  v10 = (void *)objc_opt_self();
  v11 = objc_msgSend(v10, sel_actionWithTitle_style_handler_, v9, 1, 0, 0x80000001DC43C510);

  objc_msgSend(v7, sel_addAction_, v11);
  v12 = objc_msgSend(v3, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1DC3FFC80();

  v13 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  v14 = (void *)sub_1DC408A1C();
  swift_bridgeObjectRelease();
  aBlock[4] = sub_1DC204024;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1DC149854;
  aBlock[3] = &block_descriptor_16;
  v15 = _Block_copy(aBlock);
  swift_release();
  v16 = objc_msgSend(v10, sel_actionWithTitle_style_handler_, v14, 0, v15, 0x80000001DC43C550);
  _Block_release(v15);
  swift_release();

  objc_msgSend(v7, sel_addAction_, v16);
  v17 = objc_msgSend((id)objc_opt_self(), sel_sharedApplication);
  v18 = objc_msgSend(v17, sel_key_window);

  if (v18)
  {
    v19 = objc_msgSend(v18, sel_rootViewController);

    if (v19)
    {
      objc_msgSend(v19, sel_presentViewController_animated_completion_, v7, 1, 0);

    }
  }

}

uint64_t sub_1DC204000()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1DC204024()
{
  return sub_1DC203A44();
}

uint64_t sub_1DC20402C()
{
  return sub_1DC29DF3C();
}

uint64_t sub_1DC204038(_BYTE *a1, id a2)
{
  id v3;
  uint64_t v4;

  if (a1[8] != 1)
    return *(_QWORD *)a1;
  v3 = objc_msgSend(a2, sel_viewControllers);
  sub_1DC0C70EC();
  sub_1DC408CD4();

  v4 = sub_1DC408D04();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  *(_QWORD *)a1 = v4;
  a1[8] = 0;
  return v4;
}

BOOL sub_1DC2040FC(void **a1)
{
  void *v1;
  uint64_t v2;
  void *v3;
  id v4;
  id v5;
  unint64_t v6;
  uint64_t v7;

  v1 = *a1;
  objc_opt_self();
  v2 = swift_dynamicCastObjCClass();
  if (!v2)
    return 1;
  v3 = (void *)v2;
  v4 = v1;
  v5 = objc_msgSend(v3, sel_viewControllers);
  sub_1DC0C70EC();
  v6 = sub_1DC408CD4();

  if (v6 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_1DC409850();

    swift_bridgeObjectRelease_n();
  }
  else
  {
    v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRelease();

  }
  return v7 != 0;
}

void sub_1DC2041E0(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  void *v3;
  id v4;
  unint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  id v9;

  v1 = a1 + 16;
  swift_beginAccess();
  v2 = (void *)MEMORY[0x1DF0CAD78](v1);
  if (v2)
  {
    v3 = v2;
    v4 = objc_msgSend(v2, sel_viewControllers);
    sub_1DC0C70EC();
    v5 = sub_1DC408CD4();

    if (v5 >> 62)
    {
      swift_bridgeObjectRetain();
      v6 = sub_1DC409850();
      swift_bridgeObjectRelease();
    }
    else
    {
      v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    if (v6 < 2)
    {

    }
    else
    {
      v7 = objc_msgSend(v3, sel_viewControllers);
      v8 = sub_1DC408CD4();

      if ((v8 & 0xC000000000000001) != 0)
      {
        MEMORY[0x1DF0C9FBC](1, v8);
        goto LABEL_8;
      }
      if (*(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10) >= 2uLL)
      {
        v9 = *(id *)(v8 + 40);
LABEL_8:
        swift_bridgeObjectRelease();

        return;
      }
      __break(1u);
    }
  }
}

void sub_1DC204338(char *a1, uint64_t a2, void *a3)
{
  id v4;

  *(_QWORD *)&a1[qword_1EDB34B18] = 0;
  v4 = a3;

  sub_1DC409838();
  __break(1u);
}

id sub_1DC2043AC(void *a1, double a2, double a3, uint64_t a4, uint64_t a5)
{
  char *v8;
  id result;
  objc_super v10;

  v10.receiver = a1;
  v10.super_class = (Class)swift_getObjectType();
  swift_unknownObjectRetain();
  v8 = (char *)v10.receiver;
  objc_msgSendSuper2(&v10, sel_viewWillTransitionToSize_withTransitionCoordinator_, a5, a2, a3);
  result = sub_1DC0AB6F0(a2, a3);
  if (*(_QWORD *)&v8[qword_1EDB34B18])
  {
    swift_retain();
    sub_1DC406100();
    swift_unknownObjectRelease();

    return (id)swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1DC204468(void *a1)
{
  return objc_msgSend(a1, sel_setNeedsStatusBarAppearanceUpdate);
}

void sub_1DC204474()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1DC2044A0()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + qword_1EDB34B20);
  __swift_destroy_boxed_opaque_existential_1(v0 + qword_1EDB34B10);
  swift_release();
  return __swift_destroy_boxed_opaque_existential_1(v0 + qword_1EDB34B08);
}

uint64_t sub_1DC2044EC(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_1(a1 + qword_1EDB34B20);
  __swift_destroy_boxed_opaque_existential_1(a1 + qword_1EDB34B10);
  swift_release();
  return __swift_destroy_boxed_opaque_existential_1(a1 + qword_1EDB34B08);
}

uint64_t sub_1DC204544()
{
  return type metadata accessor for MainSplitViewController();
}

id sub_1DC20454C()
{
  void *v0;
  id result;
  void *v2;
  uint64_t v3;

  result = objc_msgSend(v0, sel_ts_parentVC);
  if (result)
  {
    v2 = result;
    type metadata accessor for MainSplitViewController();
    result = (id)swift_dynamicCastClass();
    if (!result)
    {
      v3 = sub_1DC20454C();

      return (id)v3;
    }
  }
  return result;
}

double sub_1DC2045AC@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  uint64_t v11;
  char **v12;
  char v13;
  _QWORD *v14;
  uint64_t ObjCClassFromMetadata;
  id v16;
  uint64_t inited;
  void *v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(uint64_t, uint64_t);
  id v25;
  uint64_t v26;
  id v27;
  void *v28;
  void *v29;
  id v30;
  void *v31;
  uint64_t v32;
  void *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t (*v38)(uint64_t, uint64_t);
  id v39;
  uint64_t v40;
  id v41;
  void *v42;
  void *v43;
  CGFloat v44;
  CGFloat v45;
  CGFloat v46;
  CGFloat v47;
  double v48;
  double v49;
  double v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  uint64_t v54;
  id v55;
  void *v56;
  void *v57;
  id v58;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  double v63;
  double v64;
  double v65;
  double v66;
  double v67;
  double v68;
  double v69;
  CGFloat v70;
  double v71;
  CGFloat v72;
  double v73;
  CGFloat v74;
  CGFloat v75;
  CGFloat v76;
  uint64_t v77;
  double result;
  double v79;
  double v80;
  CGFloat v82;
  id v83;
  void *v84;
  uint64_t v85;
  double v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  CGRect v95;
  CGRect v96;
  CGRect v97;
  CGRect v98;
  CGRect v99;
  CGRect v100;
  CGRect v101;
  CGRect v102;
  CGRect v103;
  CGRect v104;
  CGRect v105;

  v3 = v2;
  sub_1DC405224();
  v6 = v5;
  v8 = v7;
  sub_1DC4052F0();
  v10 = v9 - v6 - v8;
  v11 = type metadata accessor for StockFeedEarningsViewModel();
  v12 = &selRef_scrollViewDidScroll_;
  if (*(_QWORD *)(a1 + *(int *)(v11 + 32) + 8))
  {
    v85 = v2;
    v13 = *(_BYTE *)(a1 + *(int *)(v11 + 36));
    v14 = (_QWORD *)*__swift_project_boxed_opaque_existential_1((_QWORD *)(v2 + 56), *(_QWORD *)(v2 + 80));
    type metadata accessor for Localized();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    v16 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
    sub_1DC3FFC80();

    sub_1DC0FB194();
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1DC40C740;
    if ((v13 & 1) != 0)
    {
      v18 = (void *)*MEMORY[0x1E0DC1138];
      *(_QWORD *)(inited + 32) = *MEMORY[0x1E0DC1138];
      v19 = sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FB00);
      v83 = v18;
      *(_QWORD *)(inited + 40) = sub_1DC4092F8();
      v20 = (void *)*MEMORY[0x1E0DC1140];
      *(_QWORD *)(inited + 64) = v19;
      *(_QWORD *)(inited + 72) = v20;
      v22 = v14[5];
      v21 = v14[6];
      __swift_project_boxed_opaque_existential_1(v14 + 2, v22);
      v23 = *(_QWORD *)(v21 + 16);
      v24 = *(uint64_t (**)(uint64_t, uint64_t))(v23 + 104);
      v25 = v20;
      v26 = v24(v22, v23);
      *(_QWORD *)(inited + 104) = sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FB30);
      *(_QWORD *)(inited + 80) = v26;
      sub_1DC0FA3C4(inited);
      v27 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
      v28 = (void *)sub_1DC408A1C();
      swift_bridgeObjectRelease();
      type metadata accessor for Key(0);
      sub_1DC0FB14C();
      v29 = (void *)sub_1DC408980();
      swift_bridgeObjectRelease();
      v12 = &selRef_scrollViewDidScroll_;
      v30 = objc_msgSend(v27, sel_initWithString_attributes_, v28, v29);

    }
    else
    {
      v31 = (void *)*MEMORY[0x1E0DC1138];
      *(_QWORD *)(inited + 32) = *MEMORY[0x1E0DC1138];
      v32 = sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FB00);
      v83 = v31;
      *(_QWORD *)(inited + 40) = sub_1DC4092F8();
      v33 = (void *)*MEMORY[0x1E0DC1140];
      *(_QWORD *)(inited + 64) = v32;
      *(_QWORD *)(inited + 72) = v33;
      v34 = v14 + 2;
      v35 = v14[5];
      v36 = v14[6];
      __swift_project_boxed_opaque_existential_1(v34, v35);
      v37 = *(_QWORD *)(v36 + 16);
      v38 = *(uint64_t (**)(uint64_t, uint64_t))(v37 + 104);
      v39 = v33;
      v40 = v38(v35, v37);
      *(_QWORD *)(inited + 104) = sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FB30);
      *(_QWORD *)(inited + 80) = v40;
      sub_1DC0FA3C4(inited);
      v41 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
      v42 = (void *)sub_1DC408A1C();
      swift_bridgeObjectRelease();
      type metadata accessor for Key(0);
      sub_1DC0FB14C();
      v43 = (void *)sub_1DC408980();
      swift_bridgeObjectRelease();
      v12 = &selRef_scrollViewDidScroll_;
      v30 = objc_msgSend(v41, sel_initWithString_attributes_, v42, v43);

    }
    v3 = v85;
  }
  else
  {
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v2 + 56), *(_QWORD *)(v2 + 80));
    v30 = sub_1DC148A44();
    v83 = (id)*MEMORY[0x1E0DC1138];
  }
  v84 = v30;
  objc_msgSend(v30, sel_boundingRectWithSize_options_context_, 1, 0, v10, 1.79769313e308);
  sub_1DC204ED0(a1, v3, v44, v45, v46, v47);
  v49 = v48;
  v86 = v50;
  sub_1DC0FB194();
  v51 = swift_initStackObject();
  *(_OWORD *)(v51 + 16) = xmmword_1DC40DC10;
  *(_QWORD *)(v51 + 32) = v83;
  v52 = sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FB00);
  swift_bridgeObjectRetain();
  v53 = v83;
  v54 = sub_1DC4092F8();
  *(_QWORD *)(v51 + 64) = v52;
  *(_QWORD *)(v51 + 40) = v54;
  sub_1DC0FA3C4(v51);
  v55 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  v56 = (void *)sub_1DC408A1C();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1DC0FB14C();
  v57 = (void *)sub_1DC408980();
  swift_bridgeObjectRelease();
  v58 = objc_msgSend(v55, v12[82], v56, v57);

  objc_msgSend(v58, sel_boundingRectWithSize_options_context_, 1, 0, v10, 1.79769313e308);
  x = v95.origin.x;
  y = v95.origin.y;
  width = v95.size.width;
  height = v95.size.height;
  v82 = v49;
  if (v49 + CGRectGetWidth(v95) >= v10)
  {
    objc_msgSend(v58, sel_boundingRectWithSize_options_context_, 1, 0, v10, 1.79769313e308);
    x = v98.origin.x;
    y = v98.origin.y;
    width = v98.size.width;
    height = v98.size.height;
    v80 = v86 + CGRectGetHeight(v98) + 12.5 + 5.0 + 12.0;
    v99.origin.x = x;
    v99.origin.y = y;
    v99.size.width = width;
    v99.size.height = height;
    v70 = CGRectGetHeight(v99) + 12.5 + 5.0;
    v100.origin.x = x;
    v100.origin.y = y;
    v100.size.width = width;
    v100.size.height = height;
    v65 = v70 - CGRectGetHeight(v100);
    v79 = v70 + 5.0;
    sub_1DC405224();
    v69 = v71;
  }
  else
  {
    v96.origin.x = x;
    v96.origin.y = y;
    v96.size.width = width;
    v96.size.height = height;
    v63 = CGRectGetHeight(v96);
    if (v86 > v63)
      v63 = v86;
    v64 = v63 + 12.5 + 12.0;
    v97.origin.x = x;
    v97.origin.y = y;
    v97.size.width = width;
    v97.size.height = height;
    v65 = v64 - CGRectGetHeight(v97);
    v79 = (v64 - v86) * 0.5;
    v80 = v64;
    sub_1DC4052F0();
    v67 = v66;
    sub_1DC405224();
    v69 = v67 - v68 - v49;
  }
  v72 = v65 * 0.5;
  sub_1DC405224();
  sub_1DC4052F0();
  sub_1DC405224();
  sub_1DC405224();
  sub_1DC405224();
  v74 = v73;
  v101.origin.x = x;
  v101.origin.y = y;
  v101.size.width = width;
  v101.size.height = height;
  v75 = CGRectGetWidth(v101);
  v102.origin.x = x;
  v102.origin.y = y;
  v102.size.width = width;
  v102.size.height = height;
  v103.size.height = CGRectGetHeight(v102);
  v103.origin.x = v74;
  v103.origin.y = v72;
  v103.size.width = v75;
  CGRectIntegral(v103);
  v104.origin.x = v69;
  v104.origin.y = v79;
  v104.size.width = v82;
  v104.size.height = v86;
  CGRectIntegral(v104);
  sub_1DC4052F0();
  v105.size.width = v76;
  v105.origin.x = 0.0;
  v105.origin.y = 0.0;
  v105.size.height = v80;
  CGRectIntegral(v105);
  MEMORY[0x1E0C80A78](v77);
  sub_1DC4051D0();

  a2[4] = v91;
  a2[5] = v92;
  a2[6] = v93;
  a2[7] = v94;
  *a2 = v87;
  a2[1] = v88;
  result = *(double *)&v89;
  a2[2] = v89;
  a2[3] = v90;
  return result;
}

void sub_1DC204ED0(uint64_t a1, uint64_t a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6)
{
  int *v12;
  _QWORD *v13;
  void *v14;
  void *v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  _QWORD *v22;
  void *v23;
  id v24;
  void *v25;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  CGRect v30;
  CGRect v31;
  CGRect v32;
  CGRect v33;

  v12 = (int *)type metadata accessor for StockFeedEarningsViewModel();
  if (*(_BYTE *)(a1 + v12[9]) == 1)
  {
    v30.origin.x = a3;
    v30.origin.y = a4;
    v30.size.width = a5;
    v30.size.height = a6;
    CGRectGetWidth(v30);
    v13 = (_QWORD *)*__swift_project_boxed_opaque_existential_1((_QWORD *)(a2 + 56), *(_QWORD *)(a2 + 80));
    if (qword_1F034ADA8 != -1)
      swift_once();
    v14 = (void *)qword_1F03688E0;
    sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FB00);
    v15 = (void *)sub_1DC4092F8();
    v16 = objc_msgSend((id)objc_opt_self(), sel_configurationWithFont_scale_, v15, 1);

    v17 = objc_msgSend(v14, sel_imageWithConfiguration_, v16);
    v19 = v13[5];
    v18 = v13[6];
    __swift_project_boxed_opaque_existential_1(v13 + 2, v19);
    v20 = (void *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)(v18 + 16) + 104))(v19);
    v21 = objc_msgSend(v17, sel_imageWithTintColor_renderingMode_, v20, 1);

LABEL_8:
    objc_msgSend(v21, sel_size);

LABEL_9:
    v32.origin.x = a3;
    v32.origin.y = a4;
    v32.size.width = a5;
    v32.size.height = a6;
    CGRectGetHeight(v32);
    return;
  }
  if (*(_QWORD *)(a1 + v12[8] + 8))
  {
    v31.origin.x = a3;
    v31.origin.y = a4;
    v31.size.width = a5;
    v31.size.height = a6;
    CGRectGetWidth(v31);
    v22 = (_QWORD *)*__swift_project_boxed_opaque_existential_1((_QWORD *)(a2 + 56), *(_QWORD *)(a2 + 80));
    v23 = (void *)sub_1DC408A1C();
    v24 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v23);

    if (!v24)
    {
      __break(1u);
      return;
    }
    sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FB00);
    v25 = (void *)sub_1DC4092F8();
    v26 = objc_msgSend((id)objc_opt_self(), sel_configurationWithFont_scale_, v25, 1);

    v27 = objc_msgSend(v24, sel_imageWithConfiguration_, v26);
    v29 = v22[5];
    v28 = v22[6];
    __swift_project_boxed_opaque_existential_1(v22 + 2, v29);
    v20 = (void *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)(v28 + 16) + 104))(v29);
    v21 = objc_msgSend(v27, sel_imageWithTintColor_renderingMode_, v20, 1);

    goto LABEL_8;
  }
  if ((*(_BYTE *)(a1 + v12[11]) & 1) == 0)
  {
    v33.origin.x = a3;
    v33.origin.y = a4;
    v33.size.width = a5;
    v33.size.height = a6;
    CGRectGetWidth(v33);
    goto LABEL_9;
  }
}

double sub_1DC2052B4@<D0>(double *a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t, __n128);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  double v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  double result;
  double v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  v58 = a6;
  v57 = a7;
  v56 = a8;
  v55 = a9;
  v50 = a2;
  v49 = a3;
  v48 = a4;
  v47 = a5;
  v10 = sub_1DC404210();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *MEMORY[0x1E0DB6B40];
  v16 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v11 + 104);
  v16(v14, v15, v10, v12);
  sub_1DC404204();
  v53 = v18;
  v54 = v17;
  v51 = v20;
  v52 = v19;
  v21 = *(void (**)(char *, uint64_t))(v11 + 8);
  v21(v14, v10);
  ((void (*)(char *, uint64_t, uint64_t))v16)(v14, v15, v10);
  sub_1DC404204();
  v45 = v23;
  v46 = v22;
  v43 = v25;
  v44 = v24;
  v21(v14, v10);
  ((void (*)(char *, uint64_t, uint64_t))v16)(v14, v15, v10);
  sub_1DC404204();
  v27 = v26;
  v29 = v28;
  v31 = v30;
  v33 = v32;
  v21(v14, v10);
  ((void (*)(char *, uint64_t, uint64_t))v16)(v14, v15, v10);
  sub_1DC404204();
  v35 = v34;
  v37 = v36;
  v39 = v38;
  v41 = v40;
  v21(v14, v10);
  *(_QWORD *)a1 = v54;
  *((_QWORD *)a1 + 1) = v53;
  *((_QWORD *)a1 + 2) = v52;
  *((_QWORD *)a1 + 3) = v51;
  *((_QWORD *)a1 + 4) = v46;
  *((_QWORD *)a1 + 5) = v45;
  *((_QWORD *)a1 + 6) = v44;
  result = v43;
  a1[7] = v43;
  *((_QWORD *)a1 + 8) = v27;
  *((_QWORD *)a1 + 9) = v29;
  *((_QWORD *)a1 + 10) = v31;
  *((_QWORD *)a1 + 11) = v33;
  *((_QWORD *)a1 + 12) = v35;
  *((_QWORD *)a1 + 13) = v37;
  *((_QWORD *)a1 + 14) = v39;
  *((_QWORD *)a1 + 15) = v41;
  return result;
}

uint64_t sub_1DC205500()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for StockFeedEarningsViewLayoutAttributesFactory()
{
  return objc_opt_self();
}

double sub_1DC205544@<D0>(double *a1@<X8>)
{
  uint64_t *v1;

  return sub_1DC2052B4(a1, v1[10], v1[11], v1[12], v1[13], v1[14], v1[15], v1[16], v1[17]);
}

uint64_t sub_1DC205780()
{
  return type metadata accessor for StockFeedViewController();
}

uint64_t type metadata accessor for StockFeedViewController()
{
  uint64_t result;

  result = qword_1EDB350F0;
  if (!qword_1EDB350F0)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1DC2057C4()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_1DC4010E4();
  if (v0 <= 0x3F)
  {
    sub_1DC0FED34(319);
    if (v1 <= 0x3F)
    {
      sub_1DC19E000(319);
      if (v2 <= 0x3F)
        swift_updateClassMetadata2();
    }
  }
}

id sub_1DC2058DC()
{
  char *v0;
  char *v1;
  void *v2;
  void *v3;
  void *v4;
  id result;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  void *v18;
  void *v19;
  id v20;
  void *v21;
  uint64_t v22;
  void *v23;
  id v24;
  uint64_t v25;
  uint64_t (**v26)(uint64_t, double, double);
  uint64_t v27;
  objc_super v28;

  v1 = v0;
  v28.receiver = v0;
  v28.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v28, sel_viewDidLoad);
  v2 = *(void **)&v0[OBJC_IVAR____TtC8StocksUI23StockFeedViewController_blueprintViewController];
  sub_1DC4055CC();
  v3 = (void *)sub_1DC405074();
  swift_release();
  sub_1DC40106C();
  v4 = (void *)sub_1DC408A1C();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setAccessibilityLabel_, v4);

  objc_msgSend(v0, sel_addChildViewController_, v2);
  result = objc_msgSend(v0, sel_view);
  if (!result)
  {
    __break(1u);
    goto LABEL_10;
  }
  v6 = result;
  result = objc_msgSend(v2, sel_view);
  if (!result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v7 = result;
  objc_msgSend(v6, sel_addSubview_, result);

  objc_msgSend(v2, sel_didMoveToParentViewController_, v1);
  result = objc_msgSend(v2, sel_view);
  if (!result)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v8 = result;
  result = objc_msgSend(v1, sel_view);
  if (!result)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v9 = result;
  objc_msgSend(result, sel_bounds);
  v11 = v10;
  v13 = v12;
  v15 = v14;
  v17 = v16;

  objc_msgSend(v8, sel_setFrame_, v11, v13, v15, v17);
  result = objc_msgSend(v2, sel_view);
  if (!result)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v18 = result;
  objc_msgSend(result, sel_setPreservesSuperviewLayoutMargins_, 1);

  result = objc_msgSend(v1, sel_view);
  if (!result)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v19 = result;
  objc_msgSend(result, sel_addSubview_, *(_QWORD *)&v1[OBJC_IVAR____TtC8StocksUI23StockFeedViewController_statusBarView]);

  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1DC080808((unint64_t *)&unk_1EDB350C8, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedViewController, (uint64_t)&unk_1DC418A80);
  sub_1DC080808(&qword_1EDB350D8, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedViewController, (uint64_t)&unk_1DC418DA4);
  swift_retain();
  sub_1DC4076FC();
  swift_release_n();
  v20 = objc_msgSend(v1, sel_traitCollection);
  sub_1DC205D68((uint64_t)v20);

  result = objc_msgSend(v1, sel_view);
  if (result)
  {
    v21 = result;
    v22 = *(_QWORD *)&v1[OBJC_IVAR____TtC8StocksUI23StockFeedViewController_overlayView];
    objc_msgSend(result, sel_addSubview_, v22);

    v23 = *(void **)(v22 + OBJC_IVAR____TtC8StocksUI24StockFeedViewOverlayView_onTap);
    swift_allocObject();
    swift_unknownObjectUnownedInit();
    v24 = v23;

    swift_release();
    v25 = swift_allocObject();
    swift_unknownObjectUnownedInit();
    v26 = (uint64_t (**)(uint64_t, double, double))(v22
                                                           + OBJC_IVAR____TtC8StocksUI24StockFeedViewOverlayView_onHitTest);
    v27 = *(_QWORD *)(v22 + OBJC_IVAR____TtC8StocksUI24StockFeedViewOverlayView_onHitTest);
    *v26 = sub_1DC20D204;
    v26[1] = (uint64_t (*)(uint64_t, double, double))v25;
    sub_1DC0E81D0(v27);
    return sub_1DC2069B0();
  }
LABEL_15:
  __break(1u);
  return result;
}

void sub_1DC205CD4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  void *v5;

  v1 = a1 + 16;
  swift_beginAccess();
  v2 = MEMORY[0x1DF0CAD78](v1);
  if (v2)
  {
    v3 = (void *)v2;
    v4 = *(id *)(v2 + OBJC_IVAR____TtC8StocksUI23StockFeedViewController_blueprintViewController);

    sub_1DC4055CC();
    v5 = (void *)sub_1DC405074();
    swift_release();
    objc_msgSend(v5, sel_reloadData);

  }
}

void sub_1DC205D68(uint64_t a1)
{
  char *v1;
  char *v2;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  _QWORD *v9;
  id v10;
  void *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  _QWORD *v16;
  void *v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  double v25;
  _QWORD *v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  _QWORD *v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD v39[3];
  uint64_t v40;
  uint64_t v41;

  v2 = v1;
  v4 = &v2[OBJC_IVAR____TtC8StocksUI23StockFeedViewController_styler];
  swift_beginAccess();
  sub_1DC0824D4((uint64_t)v4, (uint64_t)v39);
  v5 = v40;
  v6 = v41;
  __swift_project_boxed_opaque_existential_1(v39, v40);
  v7 = *(_QWORD *)(v6 + 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 8);
  v37 = v5;
  v38 = v6;
  __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v36);
  v8(a1, v5, v7);
  swift_beginAccess();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
  sub_1DC097DD0(&v36, (uint64_t)v4);
  swift_endAccess();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v39);
  sub_1DC0824D4((uint64_t)v4, (uint64_t)v39);
  v9 = __swift_project_boxed_opaque_existential_1(v39, v40);
  v10 = objc_msgSend(v2, sel_view);
  if (v10)
  {
    v11 = v10;
    v12 = (_QWORD *)(*v9 + 16);
    v14 = *(_QWORD *)(*v9 + 40);
    v13 = *(_QWORD *)(*v9 + 48);
    __swift_project_boxed_opaque_existential_1(v12, v14);
    v15 = (void *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)(v13 + 16) + 72))(v14);
    objc_msgSend(v11, sel_setBackgroundColor_, v15);

    __swift_destroy_boxed_opaque_existential_1((uint64_t)v39);
    sub_1DC0824D4((uint64_t)v4, (uint64_t)v39);
    v16 = __swift_project_boxed_opaque_existential_1(v39, v40);
    sub_1DC4055CC();
    v17 = (void *)sub_1DC405074();
    swift_release();
    v18 = *v16;
    v19 = (_QWORD *)(*v16 + 16);
    v21 = *(_QWORD *)(v18 + 40);
    v20 = *(_QWORD *)(v18 + 48);
    __swift_project_boxed_opaque_existential_1(v19, v21);
    v22 = (void *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)(v20 + 16) + 72))(v21);
    objc_msgSend(v17, sel_setBackgroundColor_, v22);

    v24 = *(_QWORD *)(v18 + 40);
    v23 = *(_QWORD *)(v18 + 48);
    __swift_project_boxed_opaque_existential_1(v19, v24);
    objc_msgSend(v17, sel_setIndicatorStyle_, (*(uint64_t (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v23 + 16) + 16) + 8))(v24));
    objc_msgSend(v17, sel_setAlwaysBounceVertical_, 1);
    objc_msgSend(v17, sel_layoutMargins);
    objc_msgSend(v17, sel_setContentInset_, 0.0, 0.0, v25, 0.0);

    __swift_destroy_boxed_opaque_existential_1((uint64_t)v39);
    v26 = (_QWORD *)*__swift_project_boxed_opaque_existential_1(v4, *((_QWORD *)v4 + 3));
    v27 = (void *)sub_1DC403FC4();
    v29 = v26[5];
    v28 = v26[6];
    __swift_project_boxed_opaque_existential_1(v26 + 2, v29);
    v30 = (void *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)(v28 + 16) + 72))(v29);
    sub_1DC1531CC(v30);

    v31 = __swift_project_boxed_opaque_existential_1(v4, *((_QWORD *)v4 + 3));
    v32 = *(void **)&v2[OBJC_IVAR____TtC8StocksUI23StockFeedViewController_statusBarView];
    v34 = *(_QWORD *)(*v31 + 40);
    v33 = *(_QWORD *)(*v31 + 48);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(*v31 + 16), v34);
    v35 = (void *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)(v33 + 16) + 72))(v34);
    objc_msgSend(v32, sel_setBackgroundColor_, v35);

  }
  else
  {
    __break(1u);
  }
}

void sub_1DC2060A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  void *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id Strong;

  v0 = sub_1DC4059F8();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  Strong = (id)swift_unknownObjectUnownedLoadStrong();
  v4 = sub_1DC4090D0();
  if (v4)
  {
    v5 = (void *)v4;
    v6 = sub_1DC4056B0();
    if (v6 >> 62)
      v7 = sub_1DC409850();
    else
      v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRelease();
    if (__OFSUB__(v7, 1))
    {
      __break(1u);
    }
    else
    {
      (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DBA290], v0);
      sub_1DC40565C();

      (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    }
  }
  else
  {

  }
}

uint64_t sub_1DC2061D8(uint64_t a1, double a2, double a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  void *v26;
  int v27;
  void *v30;
  uint64_t v31;
  void *v32;
  double v33;
  double v34;
  double v35;
  double v36;
  void *v37;
  id v38;
  uint64_t v39;
  void (*v40)(char *, char *, uint64_t);
  char *v41;
  uint64_t v42;
  char *v43;
  _QWORD v44[4];
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v44[2] = a1;
  v46 = type metadata accessor for StockFeedModel();
  MEMORY[0x1E0C80A78](v46);
  v50 = (char *)v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC1D0DEC(0, (unint64_t *)&qword_1EDB2AB10, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790]);
  v8 = v7;
  v45 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v44 - v9;
  sub_1DC142200();
  v49 = v11;
  v44[3] = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v47 = (char *)v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC089DA4(0, &qword_1EDB28B50, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1658], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)v44 - v14;
  v16 = sub_1DC400280();
  v51 = *(_QWORD *)(v16 - 8);
  v52 = v16;
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v48 = (char *)v44 - v20;
  v21 = sub_1DC4059F8();
  v22 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  v24 = (char *)v44 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_1DC4090D0();
  if (!v25)
    return 0;
  v26 = (void *)v25;
  sub_1DC405668();
  v27 = (*(uint64_t (**)(char *, uint64_t))(v22 + 88))(v24, v21);
  if (v27 != *MEMORY[0x1E0DBA260] && v27 != *MEMORY[0x1E0DBA290] && v27 != *MEMORY[0x1E0DBA298])
  {
    if (v27 == *MEMORY[0x1E0DBA288])
    {
      v30 = *(void **)(v3 + OBJC_IVAR____TtC8StocksUI23StockFeedViewController_overlayView);
      v31 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8StocksUI23StockFeedViewController_blueprintViewController);
      sub_1DC4055CC();
      v32 = (void *)sub_1DC405074();
      swift_release();
      objc_msgSend(v30, sel_convertPoint_toCoordinateSpace_, v32, a2, a3);
      v34 = v33;
      v36 = v35;

      sub_1DC4055CC();
      v37 = (void *)sub_1DC405074();
      swift_release();
      v38 = objc_msgSend(v37, sel_indexPathForItemAtPoint_, v34, v36);

      if (v38)
      {
        sub_1DC400238();

        v39 = v51;
        v40 = *(void (**)(char *, char *, uint64_t))(v51 + 32);
        v41 = v18;
        v42 = v52;
        v40(v15, v41, v52);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v15, 0, 1, v42);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v15, 1, v42) != 1)
        {
          v40(v48, v15, v42);
          v44[1] = v31;
          sub_1DC4055E4();
          v53 = v54;
          sub_1DC1D0DEC(0, (unint64_t *)&qword_1EDB29E80, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB80B8]);
          sub_1DC20CC04();
          sub_1DC405050();
          swift_release();
          sub_1DC406D54();
          (*(void (**)(char *, uint64_t))(v45 + 8))(v10, v8);
          sub_1DC404354();
          v43 = (char *)&loc_1DC20661C + dword_1DC206984[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
        }
        goto LABEL_18;
      }
    }
    else
    {
      if (v27 == *MEMORY[0x1E0DBA2A0]
        || v27 == *MEMORY[0x1E0DBA280]
        || v27 == *MEMORY[0x1E0DBA278]
        || v27 == *MEMORY[0x1E0DBA270])
      {
        goto LABEL_5;
      }
      sub_1DC409838();
      __break(1u);
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v51 + 56))(v15, 1, 1, v52);
LABEL_18:

    sub_1DC0B091C((uint64_t)v15, &qword_1EDB28B50, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1658]);
    return 1;
  }
LABEL_5:

  return 0;
}

void sub_1DC206740()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  double v9;
  uint64_t v10;
  void *v11;
  id v12;

  sub_1DC0926D8(v1, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedMastheadModel);
  sub_1DC4055CC();
  v10 = v0;
  v11 = (void *)sub_1DC405074();
  swift_release();
  v12 = objc_msgSend(v11, sel_hitTest_withEvent_, *(_QWORD *)(v7 - 208), v9, v8);

  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 200) + 8))(v10, v3);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v2);
  if (v12)
  {
    objc_opt_self();
    swift_dynamicCastObjCClass();

    JUMPOUT(0x1DC206418);
  }
  JUMPOUT(0x1DC206738);
}

void sub_1DC2067F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;

  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 200) + 8))(v0, v2);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v1);
  JUMPOUT(0x1DC206820);
}

void sub_1DC20682C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 200) + 8))(v0, v3);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v2);
  sub_1DC165FB8();
  swift_release();
  v8 = sub_1DC407EAC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v1, v8);
  JUMPOUT(0x1DC206738);
}

void sub_1DC20691C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;

  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 200) + 8))(v0, v2);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v1);
  JUMPOUT(0x1DC206738);
}

void sub_1DC206948()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;

  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 200) + 8))(v0, v3);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v2);
  sub_1DC0926D8(v1, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedModel);
  JUMPOUT(0x1DC206414);
}

id sub_1DC2069B0()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  id result;
  void *v15;
  id v16;
  void *v17;
  uint64_t v18;

  v1 = sub_1DC3FF9A4();
  MEMORY[0x1E0C80A78](v1);
  v2 = sub_1DC4010E4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1DC4003B8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v18 - v12;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v3 + 16))(v5, (uint64_t)v0 + OBJC_IVAR____TtC8StocksUI23StockFeedViewController_stock, v2, v11);
  sub_1DC4003AC();
  result = objc_msgSend(v0, sel_view);
  if (result)
  {
    v15 = result;
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v9, v13, v6);
    sub_1DC3FF98C();
    v16 = objc_allocWithZone((Class)sub_1DC403EC8());
    sub_1DC080808(&qword_1EDB273A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAE320], MEMORY[0x1E0DAE308]);
    v17 = (void *)sub_1DC403EBC();
    sub_1DC409334();

    return (id)(*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v13, v6);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC206BCC(char a1)
{
  char *v1;
  char *v2;
  objc_class *ObjectType;
  uint64_t v5;
  double v6;
  uint64_t v7;
  _BYTE *v8;
  void *v9;
  uint64_t result;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v14[16];
  objc_super v15;

  v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  v5 = type metadata accessor for StockListSelectionModel();
  *(_QWORD *)&v6 = MEMORY[0x1E0C80A78](v5).n128_u64[0];
  v8 = &v14[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15.receiver = v2;
  v15.super_class = ObjectType;
  objc_msgSendSuper2(&v15, sel_viewWillAppear_, a1 & 1, v6);
  sub_1DC4055D8();
  sub_1DC402740();
  swift_release();
  if ((v14[15] & 1) == 0)
  {
    sub_1DC4055CC();
    v9 = (void *)sub_1DC405074();
    swift_release();
    objc_msgSend(v9, sel_selectItemAtIndexPath_animated_scrollPosition_, 0, 1, 0);

  }
  result = sub_1DC4090F4();
  if ((result & 1) == 0)
  {
    v11 = &v2[OBJC_IVAR____TtC8StocksUI23StockFeedViewController_stock];
    v12 = sub_1DC4010E4();
    v13 = *(_QWORD *)(v12 - 8);
    (*(void (**)(_BYTE *, char *, uint64_t))(v13 + 16))(v8, v11, v12);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v8, 0, 2, v12);
    sub_1DC080808((unint64_t *)&qword_1EDB351C0, (uint64_t (*)(uint64_t))type metadata accessor for StockListSelectionModel, (uint64_t)&unk_1DC4157E8);
    sub_1DC402764();
    return sub_1DC0926D8((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for StockListSelectionModel);
  }
  return result;
}

void sub_1DC206DA4(char a1)
{
  void *v1;
  id v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  objc_super v8;

  v8.receiver = v1;
  v8.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v8, sel_viewDidAppear_, a1 & 1);
  v3 = objc_msgSend(v1, sel_view);
  if (v3)
  {
    v4 = v3;
    v5 = objc_msgSend(v3, sel_window);

    if (v5)
    {
      v6 = objc_msgSend(v5, sel_windowScene);

      if (v6)
      {
        v7 = objc_msgSend(v1, sel_title);
        objc_msgSend(v6, sel_setTitle_, v7);

      }
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1DC206ED0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;

  v1 = (void *)sub_1DC4090DC();
  objc_opt_self();
  v2 = swift_dynamicCastObjCClass();

  if (v2 || (v3 = (void *)sub_1DC4090DC(), sub_1DC401C6C(), v4 = swift_dynamicCastClass(), v3, v4))
  {
    v5 = (void *)sub_1DC4090DC();
    objc_msgSend(v5, sel_dismissViewControllerAnimated_completion_, 0, 0);

  }
  v6 = OBJC_IVAR____TtC8StocksUI23StockFeedViewController_delayedTipPresentation;
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC8StocksUI23StockFeedViewController_delayedTipPresentation))
  {
    swift_retain();
    sub_1DC408DC4();
    swift_release();
  }
  *(_QWORD *)(v0 + v6) = 0;
  return swift_release();
}

id sub_1DC207014()
{
  char *v0;
  id result;
  void *v2;
  void *v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  void *v12;
  void *v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  objc_super v22;

  v22.receiver = v0;
  v22.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v22, sel_viewWillLayoutSubviews);
  result = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC8StocksUI23StockFeedViewController_blueprintViewController], sel_view);
  if (!result)
  {
    __break(1u);
    goto LABEL_6;
  }
  v2 = result;
  result = objc_msgSend(v0, sel_view);
  if (!result)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v3 = result;
  objc_msgSend(result, sel_bounds);
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v11 = v10;

  objc_msgSend(v2, sel_setFrame_, v5, v7, v9, v11);
  v12 = *(void **)&v0[OBJC_IVAR____TtC8StocksUI23StockFeedViewController_overlayView];
  result = objc_msgSend(v0, sel_view);
  if (result)
  {
    v13 = result;
    objc_msgSend(result, sel_bounds);
    v15 = v14;
    v17 = v16;
    v19 = v18;
    v21 = v20;

    return objc_msgSend(v12, sel_setFrame_, v15, v17, v19, v21);
  }
LABEL_7:
  __break(1u);
  return result;
}

void sub_1DC207198(uint64_t a1)
{
  char *v1;
  id v3;
  void *v4;
  id v5;
  uint64_t ObjCClassFromMetadata;
  id v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  id v16;
  objc_super v17;

  v17.receiver = v1;
  v17.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v17, sel_traitCollectionDidChange_, a1);
  v3 = objc_msgSend(v1, sel_traitCollection);
  sub_1DC205D68((uint64_t)v3);

  v4 = (void *)sub_1DC4090D0();
  if (v4)
  {
    if (qword_1EDB2CE08 != -1)
      swift_once();
    v5 = (id)qword_1EDB2CE00;
    sub_1DC408FE0();
    sub_1DC403F28();

    objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC8StocksUI23StockFeedViewController_statusBarView], sel_setHidden_, 1);
    sub_1DC080808(&qword_1EDB350B8, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedViewController, (uint64_t)&unk_1DC418BA4);
    sub_1DC405C98();
    type metadata accessor for Localized();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    v7 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
    sub_1DC3FFC80();

    v8 = objc_msgSend(v1, sel_view, 0x80000001DC43CCB0);
    if (v8)
    {
      v9 = v8;
      sub_1DC0FDC18(0, (unint64_t *)&qword_1EDB400C0, (unint64_t *)&qword_1EDB400F0, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v10 = swift_allocObject();
      *(_OWORD *)(v10 + 16) = xmmword_1DC40DC10;
      v11 = sub_1DC4010D8();
      v13 = v12;
      *(_QWORD *)(v10 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v10 + 64) = sub_1DC0E7FAC();
      *(_QWORD *)(v10 + 32) = v11;
      *(_QWORD *)(v10 + 40) = v13;
      sub_1DC408A28();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v14 = (void *)sub_1DC408A1C();
      swift_bridgeObjectRelease();
      objc_msgSend(v9, sel_setAccessibilityLabel_, v14);

LABEL_8:
      return;
    }
    __break(1u);
  }
  else
  {
    v15 = *(void **)&v1[OBJC_IVAR____TtC8StocksUI23StockFeedViewController_statusBarView];
    objc_msgSend(v15, sel_setHidden_, 0);
    objc_msgSend(v15, sel_setNeedsLayout);
    objc_msgSend(v15, sel_layoutIfNeeded);
    v16 = objc_msgSend(v1, sel_view);
    if (v16)
    {
      v14 = v16;
      objc_msgSend(v16, sel_setAccessibilityLabel_, 0);
      goto LABEL_8;
    }
  }
  __break(1u);
}

void sub_1DC207688()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t (*v19)(uint64_t);
  uint64_t v20;
  uint64_t v21;
  char *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  void (*v33)(uint64_t);
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t);
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  void *v46;
  id v47;
  uint64_t v48;
  id v49;
  char *v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  void *v55;
  id v56;
  id v57;
  uint64_t v58;
  _QWORD v59[2];
  id v60;
  id v61;
  uint64_t v62;
  unsigned int v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  void *v70;
  uint64_t v71;
  id v72;
  char *v73;
  char *v74;
  uint64_t v75;
  void (*v76)(char *, uint64_t, uint64_t, uint64_t);
  void (*v77)(char *, unint64_t, uint64_t);
  uint64_t v78;
  char *v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  __int128 v95;
  __int128 v96;
  char v97;

  v1 = v0;
  v2 = sub_1DC405848();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v59 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = type metadata accessor for StockFeedModel();
  MEMORY[0x1E0C80A78](v80);
  v79 = (char *)v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC142200();
  v8 = *(_QWORD *)(v7 - 8);
  v88 = v7;
  v89 = v8;
  MEMORY[0x1E0C80A78](v7);
  v81 = (char *)v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC1D0DEC(0, (unint64_t *)&qword_1EDB2AB10, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790]);
  v84 = v10;
  v87 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v86 = (char *)v59 - v11;
  sub_1DC142DA0(0);
  MEMORY[0x1E0C80A78](v12);
  v85 = (char *)v59 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v90 = (uint64_t)v59 - v15;
  v16 = sub_1DC400280();
  v83 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)v59 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC089DA4(0, &qword_1EDB28B50, v19, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)v59 - v21;
  if ((sub_1DC4090F4() & 1) == 0)
  {
    v23 = (void *)sub_1DC4090DC();
    sub_1DC401C6C();
    v24 = swift_dynamicCastClass();

    if (!v24)
    {
      swift_getObjectType();
      sub_1DC400EB0();
      v26 = v25;
      swift_bridgeObjectRelease();
      if (!v26)
      {
        v69 = v5;
        v78 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8StocksUI23StockFeedViewController_blueprintViewController);
        sub_1DC4055CC();
        v27 = (void *)sub_1DC405074();
        swift_release();
        v72 = v27;
        v28 = objc_msgSend(v27, sel_indexPathsForVisibleItems);
        v29 = sub_1DC408CD4();

        v30 = *(_QWORD *)(v29 + 16);
        v71 = v29;
        if (v30)
        {
          v66 = v3;
          v67 = v2;
          v70 = 0;
          v65 = OBJC_IVAR____TtC8StocksUI23StockFeedViewController_commandTracker;
          v68 = v1;
          v64 = v1 + OBJC_IVAR____TtC8StocksUI23StockFeedViewController_commandCenter;
          v31 = v83;
          v32 = v29 + ((*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80));
          v75 = *(_QWORD *)(v83 + 72);
          v77 = *(void (**)(char *, unint64_t, uint64_t))(v83 + 16);
          v63 = *MEMORY[0x1E0DB9F08];
          v33 = sub_1DC142DA0;
          v62 = MEMORY[0x1E0DEE9C0] + 8;
          v73 = v18;
          v74 = v22;
          while (1)
          {
            v77(v22, v32, v16);
            v76 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v31 + 56);
            v76(v22, 0, 1, v16);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v22, 1, v16) == 1)
              goto LABEL_29;
            v82 = v30;
            (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v18, v22, v16);
            v34 = v31;
            sub_1DC4055E4();
            v94 = v91;
            sub_1DC1D0DEC(0, (unint64_t *)&qword_1EDB29E80, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB80B8]);
            sub_1DC20CC04();
            v35 = v86;
            v36 = v90;
            sub_1DC405050();
            v37 = v88;
            swift_release();
            v38 = v33;
            v39 = v84;
            sub_1DC406C88();
            v40 = v89;
            v41 = v35;
            v42 = (uint64_t)v85;
            v43 = v39;
            v33 = v38;
            (*(void (**)(char *, uint64_t))(v87 + 8))(v41, v43);
            sub_1DC0990BC(v36, v42, (uint64_t (*)(_QWORD))v38);
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v40 + 48))(v42, 1, v37) == 1)
            {
              sub_1DC0926D8(v36, (uint64_t (*)(_QWORD))v38);
              (*(void (**)(char *, uint64_t))(v34 + 8))(v18, v16);
              sub_1DC0926D8(v42, (uint64_t (*)(_QWORD))v38);
              v31 = v34;
            }
            else
            {
              v44 = v81;
              (*(void (**)(char *, uint64_t, uint64_t))(v40 + 32))(v81, v42, v37);
              v45 = (uint64_t)v79;
              sub_1DC404354();
              if (swift_getEnumCaseMultiPayload() == 4)
              {
                sub_1DC0926D8(v45, (uint64_t (*)(_QWORD))type metadata accessor for StockEarningsModel);
                v46 = (void *)sub_1DC40022C();
                v47 = objc_msgSend(v72, sel_cellForItemAtIndexPath_, v46);

                v48 = v90;
                v22 = v74;
                if (v47)
                {
                  sub_1DC08CBF0(0, (unint64_t *)&qword_1EDB29F80, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedEarningsView, sub_1DC20CC5C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB84F0]);
                  if (swift_dynamicCastClass())
                  {
                    v49 = v47;
                    v50 = (char *)sub_1DC404C30();
                    v51 = *(void **)&v50[OBJC_IVAR____TtC8StocksUI21StockFeedEarningsView_addCalendarButton];
                    if (!objc_msgSend(v51, sel_isHidden))
                    {
                      v60 = v50;
                      v61 = v49;
                      (*(void (**)(char *, _QWORD, uint64_t))(v66 + 104))(v69, v63, v67);
                      v53 = *(_QWORD *)(v68 + v65);
                      v92 = sub_1DC4018AC();
                      v93 = sub_1DC080808((unint64_t *)&qword_1EDB29180, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8638], MEMORY[0x1E0D59B68]);
                      v91 = v53;
                      v95 = 0u;
                      v96 = 0u;
                      v97 = 1;
                      sub_1DC405434();
                      swift_allocObject();
                      swift_retain();
                      v54 = v51;
                      sub_1DC40541C();
                      v59[1] = *(_QWORD *)(v64 + 8);
                      swift_getObjectType();
                      v18 = v73;
                      if (qword_1EDB2AA30 != -1)
                        swift_once();
                      LOBYTE(v91) = 0;
                      swift_retain();
                      v55 = v70;
                      sub_1DC404A80();
                      if (v55)
                      {

                        swift_release_n();
                        v56 = v61;

                        v70 = 0;
                      }
                      else
                      {
                        v70 = 0;

                        swift_release_n();
                        v57 = v61;

                      }
                      v58 = v90;
                      v52 = v82;
                      (*(void (**)(char *, uint64_t))(v89 + 8))(v81, v88);
                      sub_1DC0926D8(v58, (uint64_t (*)(_QWORD))v33);
                      v31 = v83;
                      (*(void (**)(char *, uint64_t))(v83 + 8))(v18, v16);
                      goto LABEL_20;
                    }

                    (*(void (**)(char *, uint64_t))(v89 + 8))(v44, v88);
                    goto LABEL_18;
                  }

                  v37 = v88;
                }
                (*(void (**)(char *, uint64_t))(v89 + 8))(v44, v37);
LABEL_18:
                sub_1DC0926D8(v48, (uint64_t (*)(_QWORD))v33);
                v31 = v83;
                v18 = v73;
                (*(void (**)(char *, uint64_t))(v83 + 8))(v73, v16);
                goto LABEL_19;
              }
              (*(void (**)(char *, uint64_t))(v40 + 8))(v44, v37);
              sub_1DC0926D8(v90, (uint64_t (*)(_QWORD))v33);
              v31 = v83;
              v18 = v73;
              (*(void (**)(char *, uint64_t))(v83 + 8))(v73, v16);
              sub_1DC0926D8(v45, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedModel);
            }
            v22 = v74;
LABEL_19:
            v52 = v82;
LABEL_20:
            v32 += v75;
            v30 = v52 - 1;
            if (!v30)
            {
              v76(v22, 1, 1, v16);
              goto LABEL_29;
            }
          }
        }
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v83 + 56))(v22, 1, 1, v16);
LABEL_29:

        swift_bridgeObjectRelease();
      }
    }
  }
}

uint64_t sub_1DC207FFC()
{
  uint64_t v0;

  swift_getObjectType();
  sub_1DC404234();
  sub_1DC40421C();
  v0 = swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1DC406574();
  swift_allocObject();
  MEMORY[0x1DF0C6DF4](sub_1DC20BB70, v0);
  sub_1DC404960();
  sub_1DC080808((unint64_t *)&unk_1EDB29DC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB7E90], MEMORY[0x1E0DB7E80]);
  sub_1DC404D74();
  swift_release();
  return swift_release();
}

uint64_t sub_1DC208114(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void *v10;
  void (*v11)(char *, uint64_t, uint64_t);
  uint64_t v12;
  objc_class *v13;
  char *v14;
  id v15;
  void *v16;
  uint64_t v17;
  objc_super v19;

  sub_1DC0FED34(0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1DC4010E4();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v9 = MEMORY[0x1DF0CAD78](a1 + 16);
  if (!v9)
    return 0;
  v10 = (void *)v9;
  v11 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v11(v8, v9 + OBJC_IVAR____TtC8StocksUI23StockFeedViewController_stock, v5);
  v12 = (uint64_t)v10 + OBJC_IVAR____TtC8StocksUI23StockFeedViewController_latestQuote;
  swift_beginAccess();
  sub_1DC0990BC(v12, (uint64_t)v4, (uint64_t (*)(_QWORD))sub_1DC0FED34);
  v13 = (objc_class *)type metadata accessor for StockShareActivityItemSource();
  v14 = (char *)objc_allocWithZone(v13);
  v11(&v14[OBJC_IVAR____TtC8StocksUI28StockShareActivityItemSource_stock], (uint64_t)v8, v5);
  sub_1DC0990BC((uint64_t)v4, (uint64_t)&v14[OBJC_IVAR____TtC8StocksUI28StockShareActivityItemSource_quote], (uint64_t (*)(_QWORD))sub_1DC0FED34);
  v19.receiver = v14;
  v19.super_class = v13;
  v15 = objc_msgSendSuper2(&v19, sel_init);
  sub_1DC0926D8((uint64_t)v4, (uint64_t (*)(_QWORD))sub_1DC0FED34);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v16 = (void *)sub_1DC1CAF28();
  sub_1DC40574C();
  v17 = sub_1DC405D1C();

  return v17;
}

void sub_1DC2082EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v16[3];
  uint64_t v17;
  uint64_t v18;

  v1 = type metadata accessor for CommandShareContent(0);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v16[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EDB2AA88 != -1)
    swift_once();
  v4 = v0 + OBJC_IVAR____TtC8StocksUI23StockFeedViewController_stock;
  v5 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8StocksUI23StockFeedViewController_commandTracker);
  v6 = sub_1DC4018AC();
  v17 = v6;
  v7 = sub_1DC080808((unint64_t *)&qword_1EDB29180, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8638], MEMORY[0x1E0D59B68]);
  v18 = v7;
  v16[0] = v5;
  swift_retain();
  sub_1DC404828();
  sub_1DC1B5EA8((uint64_t)v16, (unint64_t *)&unk_1EDB29C50, (unint64_t *)&qword_1EDB29C40, MEMORY[0x1E0DB73D0]);
  v8 = objc_msgSend((id)objc_opt_self(), sel_currentDevice);
  v9 = objc_msgSend(v8, sel_userInterfaceIdiom);

  if (v9 == (id)5)
  {
    if (qword_1EDB2A9D8 != -1)
      swift_once();
    sub_1DC20BAD4();
    v11 = &v3[*(int *)(v10 + 48)];
    v12 = *(int *)(v10 + 64);
    v13 = sub_1DC4010E4();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v3, v4, v13);
    v14 = sub_1DC401030();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v11, 1, 1, v14);
    v3[v12] = 3;
    v17 = v6;
    v18 = v7;
    v16[0] = v5;
    swift_retain();
    sub_1DC404828();
    sub_1DC0926D8((uint64_t)v3, type metadata accessor for CommandShareContent);
    sub_1DC1B5EA8((uint64_t)v16, (unint64_t *)&unk_1EDB29C50, (unint64_t *)&qword_1EDB29C40, MEMORY[0x1E0DB73D0]);
  }
}

uint64_t sub_1DC208558()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjCClassFromMetadata;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  v0 = sub_1DC406D78();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1DC406D84();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (uint64_t *)((char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1DC4055B4();
  v8 = sub_1DC405D4C();
  v9 = sub_1DC405D40();
  v10 = MEMORY[0x1E0DBAB20];
  v7[3] = v8;
  v7[4] = v10;
  *v7 = v9;
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v12 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1DC3FFC80();

  v13 = sub_1DC408AC4();
  v15 = v14;
  swift_bridgeObjectRelease();
  v7[5] = v13;
  v7[6] = v15;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DBC7E0], v4);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DBC808], v0);
  sub_1DC4048E8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1DC208768()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;

  v0 = sub_1DC406D78();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1DC406D84();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC4055B4();
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DBC7E8], v4);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DBC808], v0);
  sub_1DC4048E8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

id sub_1DC208898()
{
  return objc_msgSend((id)objc_opt_self(), sel_openStocksSettings);
}

void sub_1DC2088BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  void *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t ObjectType;
  __int128 v13;
  uint64_t v14;
  _QWORD v15[4];

  v4 = sub_1DC404BDC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v2 + OBJC_IVAR____TtC8StocksUI23StockFeedViewController_keyboardInputMonitor), *(_QWORD *)(v2 + OBJC_IVAR____TtC8StocksUI23StockFeedViewController_keyboardInputMonitor + 24));
  sub_1DC40586C();
  sub_1DC40910C();
  if (v14)
  {
    sub_1DC097DD0(&v13, (uint64_t)v15);
    __swift_project_boxed_opaque_existential_1(v15, v15[3]);
    (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DB8450], v4);
    sub_1DC405344();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
  }
  else
  {
    sub_1DC1B5EA8((uint64_t)&v13, (unint64_t *)&unk_1F034ED90, &qword_1EDB41E10, MEMORY[0x1E0DB9590]);
  }
  sub_1DC4055CC();
  v8 = (void *)sub_1DC405074();
  swift_release();
  v9 = (void *)sub_1DC409088();

  v10 = *(_QWORD **)(v2 + OBJC_IVAR____TtC8StocksUI23StockFeedViewController_eventHandler);
  v11 = v10[5];
  ObjectType = swift_getObjectType();
  LOBYTE(v15[0]) = 0;
  (*(void (**)(uint64_t, _QWORD, _QWORD *, uint64_t, uint64_t))(v11 + 80))(a2, 0, v15, ObjectType, v11);
  __swift_project_boxed_opaque_existential_1(v10 + 11, v10[14]);
  sub_1DC39EC70(a2);

}

void sub_1DC208A90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  int v17;
  uint64_t v18;
  uint64_t ObjectType;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  void *v23;
  uint64_t v24;
  void *v25;
  char *v26;
  uint64_t (*v27)(uint64_t);
  void *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD aBlock[6];

  v5 = sub_1DC40724C();
  v30 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1DC407270();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1DC406334();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v13 + 16))(v16, a3, v12, v14);
  v17 = (*(uint64_t (**)(char *, uint64_t))(v13 + 88))(v16, v12);
  if (v17 == *MEMORY[0x1E0DBB9D0])
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
LABEL_3:
    v18 = *(_QWORD *)(*(_QWORD *)&v3[OBJC_IVAR____TtC8StocksUI23StockFeedViewController_eventHandler] + 40);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v18 + 48))(ObjectType, v18);
    return;
  }
  if (v17 == *MEMORY[0x1E0DBB9A8])
  {
    v20 = *(_QWORD *)(*(_QWORD *)&v3[OBJC_IVAR____TtC8StocksUI23StockFeedViewController_eventHandler] + 40);
    v21 = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v20 + 40))(v21, v20);
  }
  else if (v17 == *MEMORY[0x1E0DBB9C8])
  {
    *(_QWORD *)(swift_allocObject() + 16) = v3;
    v22 = v3;
    sub_1DC402E3C();
    swift_release();
    sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3F8D0);
    v23 = (void *)sub_1DC409148();
    v24 = swift_allocObject();
    *(_QWORD *)(v24 + 16) = v22;
    aBlock[4] = sub_1DC20CAD8;
    aBlock[5] = v24;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1DC081B88;
    aBlock[3] = &block_descriptor_17;
    v25 = _Block_copy(aBlock);
    v26 = v22;
    swift_release();
    sub_1DC407264();
    aBlock[0] = MEMORY[0x1E0DEE9D8];
    v27 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
    sub_1DC080808(&qword_1EDB275A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    sub_1DC089DA4(0, (unint64_t *)&unk_1EDB3F710, v27, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1DC1B5D98();
    sub_1DC40964C();
    MEMORY[0x1DF0C99C8](0, v11, v7, v25);
    _Block_release(v25);

    (*(void (**)(char *, uint64_t))(v30 + 8))(v7, v5);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  else
  {
    if (v17 == *MEMORY[0x1E0DBB9B0])
      goto LABEL_3;
    if (v17 != *MEMORY[0x1E0DBB9D8])
    {
      if (v17 == *MEMORY[0x1E0DBB9F0])
      {
        sub_1DC4055CC();
        v28 = (void *)sub_1DC405074();
        swift_release();
        sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3F8A0);
        sub_1DC404A38();

      }
      else
      {
        sub_1DC409838();
        __break(1u);
      }
    }
  }
}

void sub_1DC208EBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;

  v0 = sub_1DC4011BC();
  MEMORY[0x1E0C80A78](v0);
  sub_1DC0F4CCC();
  MEMORY[0x1E0C80A78](v1);
  v2 = type metadata accessor for StockFeedModel();
  MEMORY[0x1E0C80A78](v2);
  sub_1DC142200();
  sub_1DC404354();
  v3 = (char *)sub_1DC208FC4 + 4 * byte_1DC4189B0[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1DC208FC4()
{
  uint64_t v0;

  sub_1DC0926D8(v0, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedMastheadModel);
  return 0;
}

void sub_1DC209124()
{
  swift_bridgeObjectRelease();
  swift_release();
  JUMPOUT(0x1DC2090FCLL);
}

uint64_t sub_1DC20913C()
{
  swift_getObjectType();
  return sub_1DC4063D0();
}

uint64_t sub_1DC209180(uint64_t a1, uint64_t a2)
{
  return sub_1DC3BD76C(a2);
}

uint64_t sub_1DC2091AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1DC209294(a1, a2, a3, a4, (uint64_t (*)(uint64_t))sub_1DC39C710);
}

uint64_t sub_1DC2091B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t ObjectType;

  v4 = *(_QWORD **)(v2 + OBJC_IVAR____TtC8StocksUI23StockFeedViewController_eventHandler);
  v5 = v4[5];
  ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 72))(a2, ObjectType, v5);
  __swift_project_boxed_opaque_existential_1(v4 + 11, v4[14]);
  return sub_1DC39B5B8(a2);
}

uint64_t sub_1DC209220(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t ObjectType;

  v4 = *(_QWORD **)(v2 + OBJC_IVAR____TtC8StocksUI23StockFeedViewController_eventHandler);
  v5 = v4[5];
  ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 64))(a2, ObjectType, v5);
  __swift_project_boxed_opaque_existential_1(v4 + 11, v4[14]);
  return sub_1DC39B080(a2);
}

uint64_t sub_1DC209288(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1DC209294(a1, a2, a3, a4, (uint64_t (*)(uint64_t))sub_1DC39C3C4);
}

uint64_t sub_1DC209294(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t))
{
  uint64_t v5;

  __swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)(v5 + OBJC_IVAR____TtC8StocksUI23StockFeedViewController_eventHandler) + 88), *(_QWORD *)(*(_QWORD *)(v5 + OBJC_IVAR____TtC8StocksUI23StockFeedViewController_eventHandler) + 112));
  return a5(a2);
}

uint64_t sub_1DC2092E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t ObjectType;

  v4 = *(_QWORD *)(*(_QWORD *)(v2 + OBJC_IVAR____TtC8StocksUI23StockFeedViewController_eventHandler) + 40);
  ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 56))(a2, ObjectType, v4);
}

uint64_t sub_1DC209338()
{
  swift_getObjectType();
  return sub_1DC406460();
}

void sub_1DC20938C(void *a1)
{
  void *v1;
  void *v2;
  double v4;
  double v5;
  void *v6;
  double v7;
  double v8;
  void *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t);
  void *v18;
  void (*v19)();
  uint64_t v20;

  v2 = v1;
  sub_1DC40403C();
  sub_1DC209530();
  objc_msgSend(a1, sel_contentOffset);
  v5 = v4;
  v6 = (void *)sub_1DC403FB8();
  objc_msgSend(v6, sel_alpha);
  v8 = v7;

  if (v5 <= 0.0)
  {
    if (v8 == 0.0)
      return;
    v9 = (void *)objc_opt_self();
    v12 = swift_allocObject();
    *(_QWORD *)(v12 + 16) = v2;
    v19 = sub_1DC20D168;
    v20 = v12;
    v15 = MEMORY[0x1E0C809B0];
    v16 = 1107296256;
    v11 = &block_descriptor_35;
  }
  else
  {
    if (v8 == 1.0)
      return;
    v9 = (void *)objc_opt_self();
    v10 = swift_allocObject();
    *(_QWORD *)(v10 + 16) = v2;
    v19 = sub_1DC20D170;
    v20 = v10;
    v15 = MEMORY[0x1E0C809B0];
    v16 = 1107296256;
    v11 = &block_descriptor_41;
  }
  v17 = sub_1DC081B88;
  v18 = v11;
  v13 = _Block_copy(&v15);
  v14 = v2;
  swift_release();
  objc_msgSend(v9, sel_animateWithDuration_animations_, v13, 0.25, v15, v16);
  _Block_release(v13);
}

void sub_1DC209530()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  void *v5;
  double v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[2];

  v1 = sub_1DC4050D4();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (_QWORD *)((char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1DC4055CC();
  v5 = (void *)sub_1DC405074();
  swift_release();
  objc_msgSend(v5, sel_contentOffset);
  v7 = v6;

  v8 = OBJC_IVAR____TtC8StocksUI23StockFeedViewController_toolbarTitleIsHidden;
  if (v7 <= 0.0 != *(_BYTE *)(v0 + OBJC_IVAR____TtC8StocksUI23StockFeedViewController_toolbarTitleIsHidden))
  {
    swift_getObjectType();
    sub_1DC404234();
    v10[1] = sub_1DC404228();
    if (v7 > 0.0)
    {
      *v4 = sub_1DC4010D8();
      v4[1] = v9;
      (*(void (**)(uint64_t *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E0DB9070], v1);
      sub_1DC4050E0();
      sub_1DC080808(&qword_1EDB2A0E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB90A8], MEMORY[0x1E0DB9098]);
      sub_1DC404D74();
      (*(void (**)(uint64_t *, uint64_t))(v2 + 8))(v4, v1);
    }
    else
    {
      sub_1DC4050E0();
      sub_1DC080808(&qword_1EDB2A0E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB90A8], MEMORY[0x1E0DB9098]);
      sub_1DC404D80();
    }
    swift_release();
    *(_BYTE *)(v0 + v8) = v7 <= 0.0;
  }
}

id sub_1DC2097D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void (*v12)(char *, uint64_t, uint64_t);
  uint64_t (*v13)(char *, uint64_t);
  int v14;
  int v15;
  int v16;
  int v17;
  uint64_t v20;
  int v24;
  BOOL v26;
  BOOL v27;
  id result;
  uint64_t v29;

  v3 = v2;
  v5 = sub_1DC4059F8();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v29 - v10;
  swift_unknownObjectRetain();
  sub_1DC404054();
  sub_1DC40400C();
  v12 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v12(v11, a2, v5);
  v13 = *(uint64_t (**)(char *, uint64_t))(v6 + 88);
  v14 = v13(v11, v5);
  v15 = *MEMORY[0x1E0DBA260];
  v16 = *MEMORY[0x1E0DBA290];
  v17 = *MEMORY[0x1E0DBA298];
  if (v14 == *MEMORY[0x1E0DBA260] || v14 == v16 || v14 == v17)
  {
LABEL_21:
    v20 = 1;
    goto LABEL_22;
  }
  if (v14 != *MEMORY[0x1E0DBA288])
  {
    if (v14 != *MEMORY[0x1E0DBA2A0]
      && v14 != *MEMORY[0x1E0DBA280]
      && v14 != *MEMORY[0x1E0DBA278]
      && v14 != *MEMORY[0x1E0DBA270])
    {
      goto LABEL_41;
    }
    goto LABEL_21;
  }
  v20 = 0;
LABEL_22:
  objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC8StocksUI23StockFeedViewController_overlayView), sel_setHidden_, v20);
  v12(v8, a2, v5);
  v24 = v13(v8, v5);
  if (v24 == v15 || v24 == v16)
    return sub_1DC2069B0();
  v26 = v24 == v17 || v24 == *MEMORY[0x1E0DBA288];
  v27 = v26 || v24 == *MEMORY[0x1E0DBA2A0];
  if (v27 || v24 == *MEMORY[0x1E0DBA280] || v24 == *MEMORY[0x1E0DBA278] || v24 == *MEMORY[0x1E0DBA270])
    return sub_1DC2069B0();
  sub_1DC4099DC();
  __break(1u);
LABEL_41:
  result = (id)sub_1DC409838();
  __break(1u);
  return result;
}

void sub_1DC209A7C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  uint64_t v8;

  v3 = sub_1DC405824();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC404000();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a2, v3);
  if ((*(unsigned int (**)(char *, uint64_t))(v4 + 88))(v6, v3) == *MEMORY[0x1E0DB9E70])
  {
    sub_1DC4055CC();
    v7 = (void *)sub_1DC405074();
    swift_release();
    objc_msgSend(v7, sel_setShowsVerticalScrollIndicator_, 0);

  }
  else
  {
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
}

id sub_1DC209B84(uint64_t a1, uint64_t a2)
{
  return sub_1DC20BE1C(a2);
}

uint64_t sub_1DC209B90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;

  v4 = sub_1DC404BE8();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v5 + 16))(v8, a1, v4, v6);
  v9 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v8, v4);
  if (v9 == *MEMORY[0x1E0DB8468])
  {
    v10 = *MEMORY[0x1E0DBA290];
    v11 = sub_1DC4059F8();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(a2, v10, v11);
    v12 = (unsigned int *)MEMORY[0x1E0DBA230];
LABEL_5:
    v15 = *v12;
    v16 = sub_1DC4059C8();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(a2, v15, v16);
  }
  if (v9 == *MEMORY[0x1E0DB8460])
  {
    v13 = *MEMORY[0x1E0DBA1F8];
    v14 = sub_1DC4059B0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(a2, v13, v14);
    v12 = (unsigned int *)MEMORY[0x1E0DBA208];
    goto LABEL_5;
  }
  result = sub_1DC409838();
  __break(1u);
  return result;
}

uint64_t sub_1DC209D2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DC209B90(a1, a2);
}

uint64_t sub_1DC209D40()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v1 = (_QWORD *)(*v0 + OBJC_IVAR____TtC8StocksUI23StockFeedViewController_styler);
  swift_beginAccess();
  v2 = __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  v4 = *(_QWORD *)(*v2 + 40);
  v3 = *(_QWORD *)(*v2 + 48);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(*v2 + 16), v4);
  (*(void (**)(uint64_t))(*(_QWORD *)(v3 + 16) + 448))(v4);
  return sub_1DC404BF4();
}

uint64_t sub_1DC209DCC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD v19[3];
  char v20;

  v19[1] = a1;
  swift_getObjectType();
  v19[0] = sub_1DC4047D4();
  v1 = *(_QWORD *)(v19[0] - 8);
  MEMORY[0x1E0C80A78](v19[0]);
  v3 = (char *)v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v19 - v5;
  v7 = sub_1DC4047E0();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v19 - v12;
  if (qword_1EDB290A8 != -1)
    swift_once();
  sub_1DC080808(&qword_1EDB350D8, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedViewController, (uint64_t)&unk_1DC418DA4);
  sub_1DC4012D0();
  if (v20 == 1)
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v13, *MEMORY[0x1E0DB7BB8], v7);
    (*(void (**)(char *, _QWORD, _QWORD))(v1 + 104))(v6, *MEMORY[0x1E0DB7BA8], v19[0]);
  }
  else
  {
    sub_1DC089DA4(0, (unint64_t *)&qword_1EDB3FEE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB7BE8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v15 = sub_1DC4047EC();
    v16 = *(_QWORD *)(v15 - 8);
    v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
    v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_1DC40DC10;
    (*(void (**)(unint64_t, _QWORD, uint64_t))(v16 + 104))(v18 + v17, *MEMORY[0x1E0DB7BD8], v15);
    sub_1DC368398(v18);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E0DB7BC0], v7);
    (*(void (**)(char *, _QWORD, _QWORD))(v1 + 104))(v3, *MEMORY[0x1E0DB7BA8], v19[0]);
  }
  return sub_1DC404804();
}

uint64_t sub_1DC20A0DC@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC209DCC(a1);
}

id sub_1DC20A0FC()
{
  _QWORD *v0;

  return *(id *)(*v0 + OBJC_IVAR____TtC8StocksUI23StockFeedViewController_stockFeedTitleView);
}

uint64_t sub_1DC20A110()
{
  unsigned __int8 v1;

  if (qword_1EDB290A8 != -1)
    swift_once();
  sub_1DC080808(&qword_1EDB350D8, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedViewController, (uint64_t)&unk_1DC418DA4);
  sub_1DC4012D0();
  return v1;
}

uint64_t sub_1DC20A1A4()
{
  return sub_1DC405638();
}

uint64_t sub_1DC20A1CC@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = (_QWORD *)(*v1 + OBJC_IVAR____TtC8StocksUI23StockFeedViewController_styler);
  swift_beginAccess();
  v4 = __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  v6 = *(_QWORD *)(*v4 + 40);
  v5 = *(_QWORD *)(*v4 + 48);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(*v4 + 16), v6);
  *a1 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v5 + 16) + 72))(v6);
  v7 = *MEMORY[0x1E0DBB098];
  v8 = sub_1DC405EF0();
  return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(a1, v7, v8);
}

uint64_t sub_1DC20A280()
{
  return sub_1DC40103C();
}

uint64_t sub_1DC20A2AC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  int v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int *v22;
  void *v23;
  void *v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;

  v2 = sub_1DC405B54();
  v26 = *(_QWORD *)(v2 - 8);
  v27 = v2;
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC089DA4(0, &qword_1EDB28B50, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1658], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v26 - v6;
  v8 = sub_1DC400280();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1DC404BDC();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v13 + 16))(v16, a1, v12, v14);
  v17 = (*(uint64_t (**)(char *, uint64_t))(v13 + 88))(v16, v12);
  if (v17 == *MEMORY[0x1E0DB8448])
  {
    sub_1DC4055CC();
    v18 = (void *)sub_1DC405074();
    swift_release();
    v19 = objc_msgSend(v18, sel_indexPathsForSelectedItems);

    if (v19)
    {
      v20 = sub_1DC408CD4();

      if (*(_QWORD *)(v20 + 16))
      {
        (*(void (**)(char *, unint64_t, uint64_t))(v9 + 16))(v7, v20 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80)), v8);
        v21 = 0;
      }
      else
      {
        v21 = 1;
      }
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, v21, 1, v8);
      swift_bridgeObjectRelease();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) != 1)
      {
        (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
        sub_1DC4055CC();
        v23 = (void *)sub_1DC405074();
        swift_release();
        v24 = (void *)sub_1DC40022C();
        objc_msgSend(v23, sel_deselectItemAtIndexPath_animated_, v24, 1);

        (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
        goto LABEL_12;
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
    }
    sub_1DC0B091C((uint64_t)v7, &qword_1EDB28B50, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1658]);
LABEL_12:
    v22 = (unsigned int *)MEMORY[0x1E0DBA6B8];
    goto LABEL_13;
  }
  if (v17 == *MEMORY[0x1E0DB8450])
  {
    v22 = (unsigned int *)MEMORY[0x1E0DBA6B0];
LABEL_13:
    (*(void (**)(char *, _QWORD, uint64_t))(v26 + 104))(v4, *v22, v27);
    return sub_1DC4055F0();
  }
  result = sub_1DC409838();
  __break(1u);
  return result;
}

uint64_t sub_1DC20A634(uint64_t a1)
{
  return sub_1DC20A2AC(a1);
}

void sub_1DC20A654()
{
  uint64_t v0;
  uint64_t v1;
  id v2;

  swift_getObjectType();
  sub_1DC404D98();
  sub_1DC209530();
  sub_1DC207FFC();
  sub_1DC2082EC();
  swift_retain();
  sub_1DC404FF0();
  swift_release();
  v0 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v1 = swift_allocObject();
  *(_QWORD *)(v1 + 16) = sub_1DC20CB18;
  *(_QWORD *)(v1 + 24) = v0;
  v2 = (id)sub_1DC402C80();
  sub_1DC402D04();
  swift_release();
  swift_release();
  swift_release();

}

uint64_t sub_1DC20A764(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t result;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  _BYTE v15[24];

  sub_1DC089DA4(0, (unint64_t *)&unk_1EDB3F7C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF0750], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v4 = &v15[-v3];
  v5 = a1 + 16;
  swift_beginAccess();
  result = MEMORY[0x1DF0CAD78](v5);
  if (result)
  {
    v7 = (char *)result;
    v8 = OBJC_IVAR____TtC8StocksUI23StockFeedViewController_delayedTipPresentation;
    if (*(_QWORD *)(result + OBJC_IVAR____TtC8StocksUI23StockFeedViewController_delayedTipPresentation))
    {
      swift_retain();
      sub_1DC408DC4();
      swift_release();
    }
    v9 = sub_1DC408DB8();
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v4, 1, 1, v9);
    v10 = swift_allocObject();
    swift_beginAccess();
    v11 = (void *)MEMORY[0x1DF0CAD78](v5);
    swift_unknownObjectWeakInit();

    sub_1DC408DA0();
    swift_retain();
    v12 = sub_1DC408D94();
    v13 = (_QWORD *)swift_allocObject();
    v14 = MEMORY[0x1E0DF06E8];
    v13[2] = v12;
    v13[3] = v14;
    v13[4] = v10;
    swift_release();
    *(_QWORD *)&v7[v8] = sub_1DC23D0A4((uint64_t)v4, (uint64_t)&unk_1F034EDA8, (uint64_t)v13);

    return swift_release();
  }
  return result;
}

uint64_t sub_1DC20A92C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4[17] = a4;
  v5 = sub_1DC4097F0();
  v4[18] = v5;
  v4[19] = *(_QWORD *)(v5 - 8);
  v4[20] = swift_task_alloc();
  v6 = sub_1DC4010E4();
  v4[21] = v6;
  v4[22] = *(_QWORD *)(v6 - 8);
  v4[23] = swift_task_alloc();
  sub_1DC408DA0();
  v4[24] = sub_1DC408D94();
  v4[25] = sub_1DC408D88();
  v4[26] = v7;
  return swift_task_switch();
}

uint64_t sub_1DC20A9E8()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  unint64_t v11;
  unint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t *v24;
  _QWORD *v25;
  uint64_t (*v27)(uint64_t, uint64_t, uint64_t, uint64_t, char);

  if (qword_1EDB2CE08 != -1)
    swift_once();
  v1 = v0[17] + 16;
  v2 = (void *)qword_1EDB2CE00;
  sub_1DC0FDC18(0, (unint64_t *)&qword_1EDB400C0, (unint64_t *)&qword_1EDB400F0, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v0[27] = v3;
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1DC40C740;
  swift_beginAccess();
  v5 = MEMORY[0x1DF0CAD78](v1);
  v6 = (void *)v5;
  if (v5)
  {
    v8 = v0[22];
    v7 = v0[23];
    v9 = v0[21];
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v7, v5 + OBJC_IVAR____TtC8StocksUI23StockFeedViewController_stock, v9);
    v10 = v2;

    v6 = (void *)sub_1DC4010B4();
    v12 = v11;
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  }
  else
  {
    v13 = v2;
    v12 = 0;
  }
  v14 = v0[17] + 16;
  v15 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v4 + 56) = MEMORY[0x1E0DEA968];
  v16 = sub_1DC0E7FAC();
  v0[28] = v16;
  *(_QWORD *)(v4 + 64) = v16;
  if (v12)
    v17 = (uint64_t)v6;
  else
    v17 = 0x44455341454C4552;
  v18 = 0xE800000000000000;
  if (v12)
    v18 = v12;
  *(_QWORD *)(v4 + 32) = v17;
  *(_QWORD *)(v4 + 40) = v18;
  swift_beginAccess();
  v19 = MEMORY[0x1DF0CAD78](v14);
  if (!v19)
  {
    v24 = (uint64_t *)(v4 + 72);
    *(_QWORD *)(v4 + 96) = v15;
    *(_QWORD *)(v4 + 104) = v16;
    goto LABEL_15;
  }
  v20 = (void *)v19;
  v21 = sub_1DC40103C();
  v23 = v22;

  v24 = (uint64_t *)(v4 + 72);
  *(_QWORD *)(v4 + 96) = v15;
  *(_QWORD *)(v4 + 104) = v16;
  if (!v23)
  {
LABEL_15:
    *v24 = 0x44455341454C4552;
    v23 = 0xE800000000000000;
    goto LABEL_16;
  }
  *v24 = v21;
LABEL_16:
  *(_QWORD *)(v4 + 80) = v23;
  sub_1DC408FE0();
  sub_1DC403F28();
  swift_bridgeObjectRelease();

  sub_1DC4097E4();
  v27 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_1F034EDB8 + dword_1F034EDB8);
  v25 = (_QWORD *)swift_task_alloc();
  v0[29] = v25;
  *v25 = v0;
  v25[1] = sub_1DC20AC90;
  return v27(500000000000000000, 0, 0, 0, 1);
}

uint64_t sub_1DC20AC90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 152);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 160);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 144);
  *(_QWORD *)(*(_QWORD *)v1 + 240) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return swift_task_switch();
}

uint64_t sub_1DC20AD18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = *(_QWORD *)(v0 + 136);
  swift_release();
  swift_beginAccess();
  v2 = MEMORY[0x1DF0CAD78](v1 + 16);
  if (v2)
  {
    v3 = (void *)v2;
    v4 = *(_QWORD *)(v0 + 224);
    v5 = (void *)qword_1EDB2CE00;
    v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_1DC40C740;
    v7 = v5;
    v8 = sub_1DC4010B4();
    v9 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v6 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v6 + 64) = v4;
    *(_QWORD *)(v6 + 32) = v8;
    *(_QWORD *)(v6 + 40) = v10;
    v11 = sub_1DC40103C();
    *(_QWORD *)(v6 + 96) = v9;
    *(_QWORD *)(v6 + 104) = v4;
    *(_QWORD *)(v6 + 72) = v11;
    *(_QWORD *)(v6 + 80) = v12;
    sub_1DC408FE0();
    sub_1DC403F28();
    swift_bridgeObjectRelease();

    sub_1DC207688();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DC20AE3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  void (*v17)(uint64_t, uint64_t);
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  void *v26;

  v1 = 0x44455341454C4552;
  v2 = *(_QWORD *)(v0 + 136);
  swift_release();
  v3 = v2 + 16;
  v4 = (void *)qword_1EDB2CE00;
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1DC40C740;
  swift_beginAccess();
  v6 = MEMORY[0x1DF0CAD78](v3);
  v7 = *(_QWORD *)(v0 + 224);
  v8 = MEMORY[0x1E0DEA968];
  if (v6)
  {
    v9 = (void *)v6;
    v11 = *(_QWORD *)(v0 + 176);
    v10 = *(_QWORD *)(v0 + 184);
    v12 = *(_QWORD *)(v0 + 168);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v10, v6 + OBJC_IVAR____TtC8StocksUI23StockFeedViewController_stock, v12);
    v13 = v4;

    v14 = sub_1DC4010B4();
    v16 = v15;
    v17 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
    v8 = MEMORY[0x1E0DEA968];
    v17(v10, v12);
    *(_QWORD *)(v5 + 56) = v8;
    *(_QWORD *)(v5 + 64) = v7;
    if (!v16)
    {
      v16 = 0xE800000000000000;
      v14 = 0x44455341454C4552;
    }
    v1 = 0x44455341454C4552;
  }
  else
  {
    *(_QWORD *)(v5 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v5 + 64) = v7;
    v18 = v4;
    v16 = 0xE800000000000000;
    v14 = 0x44455341454C4552;
  }
  v19 = *(_QWORD *)(v0 + 136) + 16;
  *(_QWORD *)(v5 + 32) = v14;
  *(_QWORD *)(v5 + 40) = v16;
  swift_beginAccess();
  v20 = MEMORY[0x1DF0CAD78](v19);
  v21 = *(_QWORD *)(v0 + 224);
  if (!v20)
  {
    *(_QWORD *)(v5 + 96) = v8;
    *(_QWORD *)(v5 + 104) = v21;
    goto LABEL_10;
  }
  v22 = (void *)v20;
  v23 = sub_1DC40103C();
  v25 = v24;

  *(_QWORD *)(v5 + 96) = v8;
  *(_QWORD *)(v5 + 104) = v21;
  if (!v25)
  {
LABEL_10:
    v25 = 0xE800000000000000;
    goto LABEL_11;
  }
  v1 = v23;
LABEL_11:
  v26 = *(void **)(v0 + 240);
  *(_QWORD *)(v5 + 72) = v1;
  *(_QWORD *)(v5 + 80) = v25;
  sub_1DC408FE0();
  sub_1DC403F28();
  swift_bridgeObjectRelease();

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DC20B06C(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

void sub_1DC20B094()
{
  sub_1DC20A654();
}

uint64_t sub_1DC20B0B4()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_getObjectType();
  sub_1DC404D8C();
  *(_BYTE *)(v1 + OBJC_IVAR____TtC8StocksUI23StockFeedViewController_toolbarTitleIsHidden) = 1;
  sub_1DC40484C();
  return sub_1DC206ED0();
}

uint64_t sub_1DC20B128(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  int *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t (*v21)(_QWORD);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t ObjectType;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  id v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  char *v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  void (*v75)(char *, uint64_t);
  uint64_t ObjCClassFromMetadata;
  id v77;
  void *v78;
  BOOL v79;
  uint64_t v80;
  id v81;
  char *v82;
  uint64_t v83;
  void *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  _QWORD v98[2];
  void *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  char *v113;
  char *v114;
  char *v115;
  id v116;

  v3 = v2;
  v116 = a1;
  v110 = sub_1DC403520();
  v106 = *(_QWORD *)(v110 - 8);
  v5 = *(_QWORD *)(v106 + 64);
  MEMORY[0x1E0C80A78](v110);
  v108 = (char *)v98 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v115 = (char *)v98 - v7;
  v111 = sub_1DC403628();
  v109 = *(_QWORD *)(v111 - 8);
  v8 = *(_QWORD *)(v109 + 64);
  MEMORY[0x1E0C80A78](v111);
  v107 = (char *)v98 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v114 = (char *)v98 - v10;
  sub_1DC19E000(0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v98 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = (int *)type metadata accessor for StockEarningsModel();
  v15 = *((_QWORD *)v14 - 1);
  MEMORY[0x1E0C80A78](v14);
  v113 = (char *)v98 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)v98 - v18;
  v20 = v3 + OBJC_IVAR____TtC8StocksUI23StockFeedViewController_earnings;
  swift_beginAccess();
  sub_1DC0990BC(v20, (uint64_t)v13, (uint64_t (*)(_QWORD))sub_1DC19E000);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v15 + 48))(v13, 1, v14) != 1)
  {
    sub_1DC20CC78((uint64_t)v13, (uint64_t)v19);
    v23 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8StocksUI23StockFeedViewController_earningsCalendarManager);
    v24 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8StocksUI23StockFeedViewController_earningsCalendarManager + 8);
    ObjectType = swift_getObjectType();
    v26 = v3 + OBJC_IVAR____TtC8StocksUI23StockFeedViewController_stock;
    v104 = ObjectType;
    v105 = v23;
    v27 = sub_1DC400EB0();
    v29 = v28;
    swift_bridgeObjectRelease();
    v112 = v19;
    if (a2 == 2)
    {
      sub_1DC400EA4();
      v34 = sub_1DC4010E4();
      v35 = v26;
      v36 = (uint64_t)v113;
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v113, v35, v34);
      v37 = v14[5];
      v38 = v112;
      v39 = &v112[v37];
      v40 = v36 + v37;
      v41 = sub_1DC3FFFEC();
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 16))(v40, v39, v41);
      sub_1DC0990BC((uint64_t)&v38[v14[6]], v36 + v14[6], (uint64_t (*)(_QWORD))sub_1DC0BB2BC);
      v42 = v14[7];
      v43 = &v38[v42];
      v44 = v36 + v42;
      v45 = sub_1DC400220();
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 16))(v44, v43, v45);
      *(_BYTE *)(v36 + v14[8]) = 0;
      *(_BYTE *)(v36 + v14[9]) = 2;
      v46 = *(_QWORD *)(*(_QWORD *)(v3 + OBJC_IVAR____TtC8StocksUI23StockFeedViewController_eventHandler) + 40);
      v47 = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v46 + 128))(v36, v47, v46);
      sub_1DC0926D8(v36, (uint64_t (*)(_QWORD))type metadata accessor for StockEarningsModel);
      v30 = v116;
    }
    else
    {
      v103 = v24;
      v30 = v116;
      if (a2 == 1)
      {
        v31 = objc_msgSend(v116, sel_event);
        if (v31)
        {
          v32 = v31;
          v100 = v27;
          v33 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8StocksUI23StockFeedViewController_eventHandler);
          v101 = v33;
          v102 = v26;
          if (v29)
          {
            __swift_project_boxed_opaque_existential_1((_QWORD *)(v33 + 88), *(_QWORD *)(v33 + 112));
            sub_1DC403490();
            sub_1DC080808(&qword_1F034EDC8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD580], MEMORY[0x1E0DAD578]);
            sub_1DC4018A0();
          }
          else
          {
            v61 = v114;
            (*(void (**)(char *, _QWORD, uint64_t))(v109 + 104))(v114, *MEMORY[0x1E0DAD778], v111);
            v62 = *MEMORY[0x1E0DAD628];
            v99 = v32;
            v63 = v106;
            v64 = v115;
            (*(void (**)(char *, uint64_t, uint64_t))(v106 + 104))(v115, v62, v110);
            v98[1] = *(_QWORD *)(*__swift_project_boxed_opaque_existential_1((_QWORD *)(v33 + 88), *(_QWORD *)(v33 + 112))+ 16);
            v65 = v109;
            (*(void (**)(char *, char *, uint64_t))(v109 + 16))(v107, v61, v111);
            v66 = v64;
            v67 = v110;
            (*(void (**)(char *, char *, uint64_t))(v63 + 16))(v108, v66, v110);
            v68 = *(unsigned __int8 *)(v65 + 80);
            v98[0] = v3;
            v69 = (v68 + 16) & ~v68;
            v70 = (v8 + *(unsigned __int8 *)(v63 + 80) + v69) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80);
            v71 = swift_allocObject();
            v72 = v71 + v69;
            v73 = v111;
            (*(void (**)(uint64_t, char *, uint64_t))(v65 + 32))(v72, v107, v111);
            v74 = v71 + v70;
            v29 = 0;
            (*(void (**)(unint64_t, char *, uint64_t))(v63 + 32))(v74, v108, v67);
            sub_1DC401828();
            swift_release();
            v75 = *(void (**)(char *, uint64_t))(v63 + 8);
            v32 = v99;
            v75(v115, v67);
            (*(void (**)(char *, uint64_t))(v65 + 8))(v114, v73);
            type metadata accessor for Localized();
            ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
            v77 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
            sub_1DC3FFC80();

            v78 = (void *)sub_1DC408A1C();
            v3 = v98[0];
            swift_bridgeObjectRelease();
            MEMORY[0x1DF0CA4D8](v78);

          }
          v79 = v29 == 0;
          v80 = OBJC_IVAR____TtC8StocksUI23StockFeedViewController_newlyAddedEventToCalendar;
          *(_BYTE *)(v3 + OBJC_IVAR____TtC8StocksUI23StockFeedViewController_newlyAddedEventToCalendar) = (*(_BYTE *)(v3 + OBJC_IVAR____TtC8StocksUI23StockFeedViewController_newlyAddedEventToCalendar) | v79) & 1;
          v81 = objc_msgSend(v32, sel_eventIdentifier);
          v82 = v112;
          v83 = v102;
          if (v81)
          {
            v84 = v81;
            sub_1DC408A4C();

            sub_1DC400E98();
            swift_bridgeObjectRelease();
          }
          v85 = sub_1DC4010E4();
          v86 = (uint64_t)v113;
          (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v85 - 8) + 16))(v113, v83, v85);
          v87 = v14[5];
          v88 = &v82[v87];
          v89 = v86 + v87;
          v90 = sub_1DC3FFFEC();
          (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v90 - 8) + 16))(v89, v88, v90);
          sub_1DC0990BC((uint64_t)&v82[v14[6]], v86 + v14[6], (uint64_t (*)(_QWORD))sub_1DC0BB2BC);
          v91 = v14[7];
          v92 = &v82[v91];
          v93 = v86 + v91;
          v94 = sub_1DC400220();
          (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v94 - 8) + 16))(v93, v92, v94);
          *(_BYTE *)(v86 + v14[8]) = *(_BYTE *)(v3 + v80);
          *(_BYTE *)(v86 + v14[9]) = 1;
          v95 = *(_QWORD *)(v101 + 40);
          v96 = swift_getObjectType();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v95 + 128))(v86, v96, v95);

          sub_1DC0926D8(v86, (uint64_t (*)(_QWORD))type metadata accessor for StockEarningsModel);
          goto LABEL_16;
        }
      }
    }
    v48 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8StocksUI23StockFeedViewController_eventHandler);
    if (v29)
    {
      __swift_project_boxed_opaque_existential_1((_QWORD *)(v48 + 88), *(_QWORD *)(v48 + 112));
      sub_1DC403490();
      sub_1DC080808(&qword_1F034EDC8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD580], MEMORY[0x1E0DAD578]);
      sub_1DC4018A0();
    }
    else
    {
      v49 = v109;
      v50 = v114;
      v51 = v111;
      (*(void (**)(char *, _QWORD, uint64_t))(v109 + 104))(v114, *MEMORY[0x1E0DAD778], v111);
      v52 = v106;
      v53 = v115;
      v54 = v110;
      (*(void (**)(char *, _QWORD, uint64_t))(v106 + 104))(v115, *MEMORY[0x1E0DAD620], v110);
      v113 = *(char **)(*__swift_project_boxed_opaque_existential_1((_QWORD *)(v48 + 88), *(_QWORD *)(v48 + 112)) + 16);
      v55 = v107;
      v56 = v51;
      (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v107, v50, v51);
      v57 = v108;
      (*(void (**)(char *, char *, uint64_t))(v52 + 16))(v108, v53, v54);
      v58 = (*(unsigned __int8 *)(v49 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80);
      v59 = (v8 + *(unsigned __int8 *)(v52 + 80) + v58) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80);
      v60 = swift_allocObject();
      (*(void (**)(unint64_t, char *, uint64_t))(v49 + 32))(v60 + v58, v55, v56);
      (*(void (**)(unint64_t, char *, uint64_t))(v52 + 32))(v60 + v59, v57, v54);
      sub_1DC401828();
      swift_release();
      v30 = v116;
      (*(void (**)(char *, uint64_t))(v52 + 8))(v115, v54);
      (*(void (**)(char *, uint64_t))(v49 + 8))(v114, v56);
    }
LABEL_16:
    objc_msgSend(v30, sel_dismissViewControllerAnimated_completion_, 1, 0);
    v21 = (uint64_t (*)(_QWORD))type metadata accessor for StockEarningsModel;
    v22 = (uint64_t)v112;
    return sub_1DC0926D8(v22, v21);
  }
  v21 = (uint64_t (*)(_QWORD))sub_1DC19E000;
  v22 = (uint64_t)v13;
  return sub_1DC0926D8(v22, v21);
}

void sub_1DC20BAD4()
{
  unint64_t TupleTypeMetadata3;
  uint64_t v1;

  if (!qword_1EDB28DF8)
  {
    sub_1DC4010E4();
    sub_1DC0FED34(255);
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1)
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_1EDB28DF8);
  }
}

uint64_t sub_1DC20BB4C()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1DC20BB70()
{
  uint64_t v0;

  return sub_1DC208114(v0);
}

uint64_t sub_1DC20BB78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v12;

  *(_QWORD *)(v6 + 56) = v5;
  v12 = sub_1DC4097D8();
  *(_QWORD *)(v6 + 64) = v12;
  *(_QWORD *)(v6 + 72) = *(_QWORD *)(v12 - 8);
  *(_QWORD *)(v6 + 80) = swift_task_alloc();
  *(_QWORD *)(v6 + 88) = swift_task_alloc();
  *(_QWORD *)(v6 + 40) = a1;
  *(_QWORD *)(v6 + 48) = a2;
  *(_QWORD *)(v6 + 16) = a3;
  *(_QWORD *)(v6 + 24) = a4;
  *(_BYTE *)(v6 + 32) = a5 & 1;
  return swift_task_switch();
}

uint64_t sub_1DC20BC1C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t);
  _QWORD *v5;

  v1 = v0[10];
  v2 = v0[8];
  v3 = v0[9];
  sub_1DC4097F0();
  sub_1DC080808(&qword_1EDB3FC60, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF0BA0], MEMORY[0x1E0DF0BB0]);
  sub_1DC409A48();
  sub_1DC080808(&qword_1EDB3FC58, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF0B60], MEMORY[0x1E0DF0B90]);
  sub_1DC4097FC();
  v4 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v0[12] = v4;
  v4(v1, v2);
  v5 = (_QWORD *)swift_task_alloc();
  v0[13] = v5;
  *v5 = v0;
  v5[1] = sub_1DC20BD34;
  return sub_1DC409A54();
}

uint64_t sub_1DC20BD34()
{
  uint64_t v0;
  uint64_t *v1;
  void (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(void (**)(uint64_t, uint64_t))(*v1 + 96);
  v3 = *(_QWORD *)(*v1 + 88);
  v4 = *(_QWORD *)(*v1 + 64);
  v5 = *v1;
  *(_QWORD *)(v5 + 112) = v0;
  swift_task_dealloc();
  v2(v3, v4);
  if (v0)
    return swift_task_switch();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v5 + 8))();
}

uint64_t sub_1DC20BDE0()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_1DC20BE1C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void (*v11)(char *, uint64_t, uint64_t);
  uint64_t (*v12)(char *, uint64_t);
  int v13;
  int v14;
  int v15;
  BOOL v16;
  void *v17;
  int v18;
  void *v22;
  int v23;
  uint64_t v26;
  uint64_t v27;
  id result;
  uint64_t v29;
  uint64_t v30;

  v2 = v1;
  v4 = sub_1DC4059F8();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v29 - v9;
  sub_1DC404018();
  v11 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v11(v10, a1, v4);
  v12 = *(uint64_t (**)(char *, uint64_t))(v5 + 88);
  v13 = v12(v10, v4);
  v14 = *MEMORY[0x1E0DBA260];
  v15 = *MEMORY[0x1E0DBA290];
  v16 = v13 == *MEMORY[0x1E0DBA260] || v13 == v15;
  v30 = v2;
  if (v16)
  {
    sub_1DC4055CC();
    v17 = (void *)sub_1DC405074();
    swift_release();
    objc_msgSend(v17, sel_setShowsVerticalScrollIndicator_, 1);

    v18 = *MEMORY[0x1E0DBA298];
  }
  else
  {
    v18 = *MEMORY[0x1E0DBA298];
    if (v13 != *MEMORY[0x1E0DBA298] && v13 != *MEMORY[0x1E0DBA288])
    {
      if (v13 == *MEMORY[0x1E0DBA2A0] || v13 == *MEMORY[0x1E0DBA280] || v13 == *MEMORY[0x1E0DBA278])
        goto LABEL_20;
      if (v13 != *MEMORY[0x1E0DBA270])
        goto LABEL_36;
    }
    sub_1DC4055CC();
    v22 = (void *)sub_1DC405074();
    swift_release();
    objc_msgSend(v22, sel_setShowsVerticalScrollIndicator_, 0);

  }
LABEL_20:
  v11(v7, a1, v4);
  v23 = v12(v7, v4);
  if (v23 == v14 || v23 == v15 || v23 == v18)
  {
    v26 = 1;
    v27 = v30;
    return objc_msgSend(*(id *)(v27 + OBJC_IVAR____TtC8StocksUI23StockFeedViewController_overlayView), sel_setHidden_, v26);
  }
  v27 = v30;
  if (v23 == *MEMORY[0x1E0DBA288])
  {
    v26 = 0;
    return objc_msgSend(*(id *)(v27 + OBJC_IVAR____TtC8StocksUI23StockFeedViewController_overlayView), sel_setHidden_, v26);
  }
  v26 = 1;
  if (v23 == *MEMORY[0x1E0DBA2A0]
    || v23 == *MEMORY[0x1E0DBA280]
    || v23 == *MEMORY[0x1E0DBA278]
    || v23 == *MEMORY[0x1E0DBA270])
  {
    return objc_msgSend(*(id *)(v27 + OBJC_IVAR____TtC8StocksUI23StockFeedViewController_overlayView), sel_setHidden_, v26);
  }
LABEL_36:
  result = (id)sub_1DC409838();
  __break(1u);
  return result;
}

uint64_t sub_1DC20C148(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  id v15;
  void *v16;
  void *v17;
  uint64_t v18;

  sub_1DC133AB4(0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC089DA4(0, (unint64_t *)&unk_1EDB28A70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v18 - v6;
  v8 = sub_1DC3FFDD0();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0990BC(a1, (uint64_t)v4, (uint64_t (*)(_QWORD))sub_1DC133AB4);
  v12 = sub_1DC400370();
  v13 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v4, 1, v12) == 1)
  {
    sub_1DC0926D8((uint64_t)v4, (uint64_t (*)(_QWORD))sub_1DC133AB4);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
    return sub_1DC0B091C((uint64_t)v7, (unint64_t *)&unk_1EDB28A70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  }
  sub_1DC4002C8();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v4, v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_1DC0B091C((uint64_t)v7, (unint64_t *)&unk_1EDB28A70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
  v15 = objc_msgSend((id)objc_opt_self(), sel_sharedApplication);
  v16 = (void *)sub_1DC3FFD88();
  sub_1DC1A1DA0(MEMORY[0x1E0DEE9D8]);
  type metadata accessor for OpenExternalURLOptionsKey(0);
  sub_1DC080808(&qword_1F034BCC0, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_1DC40D990);
  v17 = (void *)sub_1DC408980();
  swift_bridgeObjectRelease();
  objc_msgSend(v15, sel_openURL_options_completionHandler_, v16, v17, 0);

  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_1DC20C3D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t ObjectType;
  id v21;
  void *v22;
  void *v23;
  _QWORD v24[4];

  sub_1DC089DA4(0, (unint64_t *)&unk_1EDB28A70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v24 - v7;
  v9 = sub_1DC3FFDD0();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC19E000(0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0990BC(a1, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for StockEarningsModel);
  v16 = type metadata accessor for StockEarningsModel();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 0, 1, v16);
  v17 = v3 + OBJC_IVAR____TtC8StocksUI23StockFeedViewController_earnings;
  swift_beginAccess();
  sub_1DC20C6E4((uint64_t)v15, v17);
  swift_endAccess();
  if (a3)
  {
    v24[1] = 0;
    v24[2] = 0xE000000000000000;
    sub_1DC408B48();
    sub_1DC3FFE00();
    sub_1DC408DF4();
    sub_1DC3FFDC4();
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    {
      return sub_1DC0B091C((uint64_t)v8, (unint64_t *)&unk_1EDB28A70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
      v21 = objc_msgSend((id)objc_opt_self(), sel_sharedApplication);
      v22 = (void *)sub_1DC3FFD88();
      sub_1DC1A1DA0(MEMORY[0x1E0DEE9D8]);
      type metadata accessor for OpenExternalURLOptionsKey(0);
      sub_1DC080808(&qword_1F034BCC0, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_1DC40D990);
      v23 = (void *)sub_1DC408980();
      swift_bridgeObjectRelease();
      objc_msgSend(v21, sel_openURL_options_completionHandler_, v22, v23, 0);

      return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    }
  }
  else
  {
    v19 = *(_QWORD *)(*(_QWORD *)(v3 + OBJC_IVAR____TtC8StocksUI23StockFeedViewController_eventHandler) + 40);
    ObjectType = swift_getObjectType();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v19 + 104))(a1, ObjectType, v19);
  }
}

uint64_t sub_1DC20C6E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1DC19E000(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_1DC20C728(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t ObjectType;
  uint64_t v18;
  char v19;

  v3 = v2;
  v6 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1658];
  sub_1DC089DA4(0, &qword_1EDB28B50, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1658], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v18 - v8;
  sub_1DC4055CC();
  v10 = (void *)sub_1DC405074();
  swift_release();
  v11 = (void *)sub_1DC409088();

  sub_1DC4055CC();
  v12 = (void *)sub_1DC405074();
  swift_release();
  v13 = sub_1DC400280();
  v14 = *(_QWORD *)(v13 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v9, a2, v13);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v9, 0, 1, v13);
  sub_1DC40907C();

  sub_1DC0B091C((uint64_t)v9, &qword_1EDB28B50, v6);
  v15 = *(_QWORD **)(v3 + OBJC_IVAR____TtC8StocksUI23StockFeedViewController_eventHandler);
  v16 = v15[5];
  ObjectType = swift_getObjectType();
  v19 = 0;
  (*(void (**)(uint64_t, uint64_t, char *, uint64_t, uint64_t))(v16 + 80))(a1, 1, &v19, ObjectType, v16);
  __swift_project_boxed_opaque_existential_1(v15 + 11, v15[14]);
  sub_1DC39EC70(a1);

}

uint64_t sub_1DC20C8D0()
{
  return sub_1DC20C908((uint64_t)&type metadata for BilingualFeedAlert, (void (*)(void))sub_1DC20CA8C);
}

uint64_t sub_1DC20C8EC()
{
  return sub_1DC20C908((uint64_t)&type metadata for NeverShowBilingualFeedPromptAlert, (void (*)(void))sub_1DC20CA1C);
}

uint64_t sub_1DC20C908(uint64_t a1, void (*a2)(void))
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t result;
  void *v6;

  v4 = __swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)(v2 + OBJC_IVAR____TtC8StocksUI23StockFeedViewController_eventHandler) + 48), *(_QWORD *)(*(_QWORD *)(v2 + OBJC_IVAR____TtC8StocksUI23StockFeedViewController_eventHandler) + 72));
  result = MEMORY[0x1DF0CAD78](*v4 + 16);
  if (result)
  {
    v6 = (void *)result;
    a2();
    sub_1DC406808();
    swift_allocObject();
    sub_1DC4067CC();
    swift_allocObject();
    swift_weakInit();
    swift_retain();
    sub_1DC4067F0();
    swift_release();
    swift_release_n();
    sub_1DC4067D8();

    return swift_release();
  }
  return result;
}

unint64_t sub_1DC20CA1C()
{
  unint64_t result;

  result = qword_1F034ED78;
  if (!qword_1F034ED78)
  {
    result = MEMORY[0x1DF0CAB8C](&protocol conformance descriptor for NeverShowBilingualFeedPromptAlert, &type metadata for NeverShowBilingualFeedPromptAlert);
    atomic_store(result, (unint64_t *)&qword_1F034ED78);
  }
  return result;
}

uint64_t sub_1DC20CA60()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1DC20CA84()
{
  return sub_1DC193DC0();
}

unint64_t sub_1DC20CA8C()
{
  unint64_t result;

  result = qword_1F034ED80;
  if (!qword_1F034ED80)
  {
    result = MEMORY[0x1DF0CAB8C](&protocol conformance descriptor for BilingualFeedAlert, &type metadata for BilingualFeedAlert);
    atomic_store(result, (unint64_t *)&qword_1F034ED80);
  }
  return result;
}

uint64_t sub_1DC20CAD0()
{
  return sub_1DC193D10();
}

uint64_t sub_1DC20CAD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t ObjectType;

  v1 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC8StocksUI23StockFeedViewController_eventHandler)
                 + 40);
  ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 48))(ObjectType, v1);
}

uint64_t sub_1DC20CB18()
{
  uint64_t v0;

  return sub_1DC20A764(v0);
}

uint64_t sub_1DC20CB20()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DC20CB44()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1DC20CB6C()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DC20CB98(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1DC17C744;
  return sub_1DC20A92C(a1, v4, v5, v6);
}

unint64_t sub_1DC20CC04()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EDB29E70;
  if (!qword_1EDB29E70)
  {
    sub_1DC1D0DEC(255, (unint64_t *)&qword_1EDB29E80, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB80B8]);
    result = MEMORY[0x1DF0CAB8C](MEMORY[0x1E0DB80D0], v1);
    atomic_store(result, (unint64_t *)&qword_1EDB29E70);
  }
  return result;
}

uint64_t sub_1DC20CC5C()
{
  return sub_1DC080808((unint64_t *)&unk_1EDB33100, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedEarningsView, (uint64_t)&unk_1DC426F5C);
}

uint64_t sub_1DC20CC78(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for StockEarningsModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t objectdestroy_24Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v1 = sub_1DC403628();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = sub_1DC403520();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (v3 + v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);
  return swift_deallocObject();
}

uint64_t sub_1DC20CD7C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(sub_1DC403628() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v3 + 64);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(sub_1DC403520() - 8) + 80);
  return sub_1DC39F01C(a1, v1 + v4, v1 + ((v4 + v5 + v6) & ~v6));
}

void sub_1DC20CDE4()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;

  v1 = OBJC_IVAR____TtC8StocksUI23StockFeedViewController_statusBarView;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone((Class)sub_1DC404444()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v2 = OBJC_IVAR____TtC8StocksUI23StockFeedViewController_stockFeedTitleView;
  *(_QWORD *)&v0[v2] = objc_msgSend(objc_allocWithZone((Class)sub_1DC403FD0()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v3 = OBJC_IVAR____TtC8StocksUI23StockFeedViewController_overlayView;
  *(_QWORD *)&v0[v3] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for StockFeedViewOverlayView()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v0[OBJC_IVAR____TtC8StocksUI23StockFeedViewController_toolbarTitleIsHidden] = 1;
  v0[OBJC_IVAR____TtC8StocksUI23StockFeedViewController_watchState] = 2;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8StocksUI23StockFeedViewController_delayedTipPresentation] = 0;
  v4 = &v0[OBJC_IVAR____TtC8StocksUI23StockFeedViewController_latestQuote];
  v5 = sub_1DC401030();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  v0[OBJC_IVAR____TtC8StocksUI23StockFeedViewController_newlyAddedEventToCalendar] = 0;
  v6 = &v0[OBJC_IVAR____TtC8StocksUI23StockFeedViewController_earnings];
  v7 = type metadata accessor for StockEarningsModel();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);

  sub_1DC409838();
  __break(1u);
}

uint64_t sub_1DC20CF74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  int v8;
  uint64_t result;
  uint64_t v10;

  v0 = sub_1DC4059F8();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1DC4090D0();
  if (!v4)
    return 1;
  v5 = (void *)v4;
  v6 = sub_1DC405674();
  if (!v6)
    goto LABEL_9;
  v7 = (void *)v6;
  if ((sub_1DC4090E8() & 1) == 0)
  {

LABEL_9:
    return 0;
  }
  sub_1DC405668();
  v8 = (*(uint64_t (**)(char *, uint64_t))(v1 + 88))(v3, v0);
  if (v8 == *MEMORY[0x1E0DBA260] || v8 == *MEMORY[0x1E0DBA290])
  {

    return 1;
  }
  if (v8 != *MEMORY[0x1E0DBA298]
    && v8 != *MEMORY[0x1E0DBA288]
    && v8 != *MEMORY[0x1E0DBA2A0]
    && v8 != *MEMORY[0x1E0DBA280]
    && v8 != *MEMORY[0x1E0DBA278]
    && v8 != *MEMORY[0x1E0DBA270])
  {
    result = sub_1DC409838();
    __break(1u);
    return result;
  }

  return 0;
}

uint64_t sub_1DC20D144()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1DC20D168()
{
  sub_1DC20D178(0.0);
}

void sub_1DC20D170()
{
  sub_1DC20D178(1.0);
}

void sub_1DC20D178(double a1)
{
  id v2;

  v2 = (id)sub_1DC403FB8();
  objc_msgSend(v2, sel_setAlpha_, a1);

}

void sub_1DC20D1D0()
{
  uint64_t v0;

  sub_1DC205CD4(v0);
}

uint64_t sub_1DC20D1D8()
{
  swift_unknownObjectUnownedDestroy();
  return swift_deallocObject();
}

void sub_1DC20D1FC()
{
  sub_1DC2060A0();
}

uint64_t sub_1DC20D204(uint64_t a1, double a2, double a3)
{
  void *Strong;

  Strong = (void *)swift_unknownObjectUnownedLoadStrong();
  LOBYTE(a1) = sub_1DC2061D8(a1, a2, a3);

  return a1 & 1;
}

uint64_t Settings.PPT.ExtendedLaunchTarget.init(rawValue:)@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1DC4098A4();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

uint64_t Settings.PPT.ExtendedLaunchTarget.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x756F59726F66;
  else
    return 0x73694C6B636F7473;
}

uint64_t sub_1DC20D310(char *a1, char *a2)
{
  return sub_1DC159960(*a1, *a2);
}

uint64_t sub_1DC20D31C()
{
  sub_1DC409AC0();
  sub_1DC408AF4();
  swift_bridgeObjectRelease();
  return sub_1DC409AF0();
}

uint64_t sub_1DC20D39C()
{
  sub_1DC408AF4();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DC20D3F8()
{
  sub_1DC409AC0();
  sub_1DC408AF4();
  swift_bridgeObjectRelease();
  return sub_1DC409AF0();
}

uint64_t sub_1DC20D474@<X0>(char *a1@<X8>)
{
  return Settings.PPT.ExtendedLaunchTarget.init(rawValue:)(a1);
}

uint64_t sub_1DC20D480()
{
  sub_1DC133604();
  return sub_1DC408C74();
}

uint64_t sub_1DC20D4C0()
{
  sub_1DC133604();
  return sub_1DC408C68();
}

uint64_t static Settings.PPT.extendedLaunchTarget.getter()
{
  if (qword_1F034AE60 != -1)
    swift_once();
  return swift_retain();
}

ValueMetadata *type metadata accessor for Settings.PPT()
{
  return &type metadata for Settings.PPT;
}

ValueMetadata *type metadata accessor for Settings.PPT.ExtendedLaunchTarget()
{
  return &type metadata for Settings.PPT.ExtendedLaunchTarget;
}

uint64_t sub_1DC20D5DC(uint64_t a1, uint64_t a2, void *a3)
{
  _QWORD *v3;
  uint64_t inited;
  void *v6;
  id v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t);
  id v14;
  uint64_t v15;
  id v16;
  void *v17;
  void *v18;
  id v19;
  uint64_t result;
  uint64_t v21;

  sub_1DC0FB194();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DC40C740;
  v6 = (void *)*MEMORY[0x1E0DC1138];
  *(_QWORD *)(inited + 32) = *MEMORY[0x1E0DC1138];
  swift_bridgeObjectRetain();
  v7 = v6;
  if ((unint64_t)objc_msgSend(a3, sel_horizontalSizeClass) <= 2)
  {
    v8 = sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FB00);
    sub_1DC4073B4();
    sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FB00);
    *(_QWORD *)(inited + 40) = v21;
    v9 = (void *)*MEMORY[0x1E0DC1140];
    *(_QWORD *)(inited + 64) = v8;
    *(_QWORD *)(inited + 72) = v9;
    v10 = v3[5];
    v11 = v3[6];
    __swift_project_boxed_opaque_existential_1(v3 + 2, v10);
    v12 = *(_QWORD *)(v11 + 16);
    v13 = *(uint64_t (**)(uint64_t, uint64_t))(v12 + 48);
    v14 = v9;
    v15 = v13(v10, v12);
    *(_QWORD *)(inited + 104) = sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FB30);
    *(_QWORD *)(inited + 80) = v15;
    sub_1DC0FA3C4(inited);
    v16 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
    v17 = (void *)sub_1DC408A1C();
    swift_bridgeObjectRelease();
    type metadata accessor for Key(0);
    sub_1DC0FB14C();
    v18 = (void *)sub_1DC408980();
    swift_bridgeObjectRelease();
    v19 = objc_msgSend(v16, sel_initWithString_attributes_, v17, v18);

    return (uint64_t)v19;
  }
  else
  {
    result = sub_1DC409838();
    __break(1u);
  }
  return result;
}

void sub_1DC20D848(uint64_t *a1@<X8>)
{
  sub_1DC20D950(a1);
}

id sub_1DC20D850@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void *v6;
  double v7;
  double v8;
  id result;
  uint64_t v10;

  v2 = sub_1DC40145C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (void *)objc_opt_self();
  sub_1DC407CA8();
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DB6098], v2);
  sub_1DC407C9C();
  v8 = v7;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  result = objc_msgSend(v6, sel_systemFontOfSize_weight_, v8, *MEMORY[0x1E0DC1418]);
  *a1 = result;
  return result;
}

void sub_1DC20D948(uint64_t *a1@<X8>)
{
  sub_1DC20D950(a1);
}

void sub_1DC20D950(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;

  v2 = sub_1DC40145C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FB00);
  sub_1DC407CA8();
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DB6098], v2);
  sub_1DC407C9C();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v6 = (void *)sub_1DC4092F8();
  v7 = sub_1DC409310();

  *a1 = v7;
}

uint64_t sub_1DC20DA88@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FB00);
  result = sub_1DC4092F8();
  *a1 = result;
  return result;
}

uint64_t sub_1DC20DAF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  _BYTE v12[16];
  _OWORD v13[2];
  uint64_t v14;
  _OWORD v15[2];
  uint64_t v16;

  sub_1DC089DA4(0, (unint64_t *)&unk_1EDB29810, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD3C8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v6 = &v12[-v5];
  v7 = type metadata accessor for StocksActivity(0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (uint64_t *)&v12[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  *v9 = a1;
  v9[1] = a2;
  swift_storeEnumTagMultiPayload();
  v10 = sub_1DC403340();
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v6, 1, 1, v10);
  v16 = 0;
  memset(v15, 0, sizeof(v15));
  v14 = 0;
  memset(v13, 0, sizeof(v13));
  sub_1DC113F04(a1);
  swift_retain();
  sub_1DC22BAE0((uint64_t)v9, 0, (uint64_t)v6, (uint64_t)v15, 0, 0, (uint64_t)v13);
  swift_release();
  sub_1DC0A6180((uint64_t)v13, (uint64_t)&qword_1EDB29410, (uint64_t)&unk_1EDB29400, MEMORY[0x1E0DB35B0], (uint64_t (*)(_QWORD))sub_1DC0A6204);
  sub_1DC0A6180((uint64_t)v15, (uint64_t)&qword_1EDB2ACD0, (uint64_t)&qword_1EDB2ACC0, MEMORY[0x1E0D53040], (uint64_t (*)(_QWORD))sub_1DC0A6204);
  sub_1DC0A6180((uint64_t)v6, (uint64_t)&unk_1EDB29810, (uint64_t)MEMORY[0x1E0DAD3C8], (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD))sub_1DC089DA4);
  sub_1DC0926D8((uint64_t)v9, type metadata accessor for StocksActivity);
  return swift_release();
}

uint64_t sub_1DC20DCD0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE v10[16];
  _OWORD v11[2];
  uint64_t v12;
  _OWORD v13[2];
  uint64_t v14;

  sub_1DC089DA4(0, (unint64_t *)&unk_1EDB29810, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD3C8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v4 = &v10[-v3];
  v5 = type metadata accessor for StocksActivity(0);
  MEMORY[0x1E0C80A78](v5);
  v7 = &v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  *(_QWORD *)v7 = a1;
  v7[40] = 0;
  swift_storeEnumTagMultiPayload();
  v8 = sub_1DC403340();
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v4, 1, 1, v8);
  v14 = 0;
  memset(v13, 0, sizeof(v13));
  v12 = 0;
  memset(v11, 0, sizeof(v11));
  swift_retain();
  swift_retain();
  sub_1DC22BAE0((uint64_t)v7, 0, (uint64_t)v4, (uint64_t)v13, 0, 0, (uint64_t)v11);
  swift_release();
  sub_1DC0A6180((uint64_t)v11, (uint64_t)&qword_1EDB29410, (uint64_t)&unk_1EDB29400, MEMORY[0x1E0DB35B0], (uint64_t (*)(_QWORD))sub_1DC0A6204);
  sub_1DC0A6180((uint64_t)v13, (uint64_t)&qword_1EDB2ACD0, (uint64_t)&qword_1EDB2ACC0, MEMORY[0x1E0D53040], (uint64_t (*)(_QWORD))sub_1DC0A6204);
  sub_1DC0A6180((uint64_t)v4, (uint64_t)&unk_1EDB29810, (uint64_t)MEMORY[0x1E0DAD3C8], (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD))sub_1DC089DA4);
  sub_1DC0926D8((uint64_t)v7, type metadata accessor for StocksActivity);
  return swift_release();
}

uint64_t sub_1DC20DEA4(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  _QWORD *v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  char *v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  __int128 v62;
  __int128 v63;
  uint64_t v64;
  __int128 v65;
  __int128 v66;
  uint64_t v67;

  v4 = v3;
  v53 = a3;
  v52 = a2;
  v51 = type metadata accessor for PreBuyFlowRouteModel();
  MEMORY[0x1E0C80A78](v51);
  v59 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1DC089DA4(0, (unint64_t *)&unk_1EDB29810, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD3C8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v8);
  v58 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v49 = (char *)&v47 - v11;
  v60 = type metadata accessor for StocksActivity(0);
  MEMORY[0x1E0C80A78](v60);
  v57 = (char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v48 = (char *)&v47 - v14;
  sub_1DC089DA4(0, (unint64_t *)&unk_1EDB28A70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], v7);
  MEMORY[0x1E0C80A78](v15);
  v50 = (char *)&v47 - v16;
  v17 = sub_1DC3FFDD0();
  v54 = *(_QWORD *)(v17 - 8);
  v55 = v17;
  MEMORY[0x1E0C80A78](v17);
  v47 = (char *)&v47 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_1DC400C40();
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v22 = (char *)&v47 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_1DC40070C();
  v24 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  v26 = (char *)&v47 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = a1;
  LOBYTE(a1) = sub_1DC409058();
  v61 = v4;
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v4 + 24), *(_QWORD *)(v4 + 48));
  sub_1DC400DCC();
  sub_1DC400598();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v26, v23);
  v27 = sub_1DC400C34();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
  if ((a1 & 1) != 0 && (v27 & 1) != 0)
  {
    v28 = (uint64_t)v50;
    sub_1DC3FFDC4();
    v30 = v54;
    v29 = v55;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v54 + 48))(v28, 1, v55) == 1)
    {
      return sub_1DC0A6180(v28, (uint64_t)&unk_1EDB28A70, (uint64_t)MEMORY[0x1E0CAFFF8], (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD))sub_1DC089DA4);
    }
    else
    {
      v43 = v47;
      (*(void (**)(char *, uint64_t, uint64_t))(v30 + 32))(v47, v28, v29);
      v44 = (uint64_t)v48;
      (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v48, v43, v29);
      swift_storeEnumTagMultiPayload();
      v45 = sub_1DC403340();
      v46 = (uint64_t)v49;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56))(v49, 1, 1, v45);
      v67 = 0;
      v65 = 0u;
      v66 = 0u;
      v64 = 0;
      v62 = 0u;
      v63 = 0u;
      swift_retain();
      sub_1DC22BAE0(v44, 0, v46, (uint64_t)&v65, 0, 0, (uint64_t)&v62);
      swift_release();
      sub_1DC0A6180((uint64_t)&v62, (uint64_t)&qword_1EDB29410, (uint64_t)&unk_1EDB29400, MEMORY[0x1E0DB35B0], (uint64_t (*)(_QWORD))sub_1DC0A6204);
      sub_1DC0A6180((uint64_t)&v65, (uint64_t)&qword_1EDB2ACD0, (uint64_t)&qword_1EDB2ACC0, MEMORY[0x1E0D53040], (uint64_t (*)(_QWORD))sub_1DC0A6204);
      sub_1DC0A6180(v46, (uint64_t)&unk_1EDB29810, (uint64_t)MEMORY[0x1E0DAD3C8], (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD))sub_1DC089DA4);
      sub_1DC0926D8(v44, type metadata accessor for StocksActivity);
      swift_release();
      return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v43, v29);
    }
  }
  else
  {
    v32 = v51;
    v33 = v59;
    v34 = &v59[*(int *)(v51 + 20)];
    v35 = sub_1DC403BD4();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v34, v52, v35);
    v36 = (char *)v33 + *(int *)(v32 + 24);
    v37 = sub_1DC403CA0();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 16))(v36, v53, v37);
    v38 = v56;
    v39 = (uint64_t)v57;
    *v33 = v56;
    sub_1DC0990BC((uint64_t)v33, v39, (uint64_t (*)(_QWORD))type metadata accessor for PreBuyFlowRouteModel);
    swift_storeEnumTagMultiPayload();
    v40 = sub_1DC403340();
    v41 = (uint64_t)v58;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v58, 1, 1, v40);
    v67 = 0;
    v65 = 0u;
    v66 = 0u;
    v64 = 0;
    v62 = 0u;
    v63 = 0u;
    v42 = v38;
    swift_retain();
    sub_1DC22BAE0(v39, 0, v41, (uint64_t)&v65, 0, 0, (uint64_t)&v62);
    swift_release();
    sub_1DC0A6180((uint64_t)&v62, (uint64_t)&qword_1EDB29410, (uint64_t)&unk_1EDB29400, MEMORY[0x1E0DB35B0], (uint64_t (*)(_QWORD))sub_1DC0A6204);
    sub_1DC0A6180((uint64_t)&v65, (uint64_t)&qword_1EDB2ACD0, (uint64_t)&qword_1EDB2ACC0, MEMORY[0x1E0D53040], (uint64_t (*)(_QWORD))sub_1DC0A6204);
    sub_1DC0A6180(v41, (uint64_t)&unk_1EDB29810, (uint64_t)MEMORY[0x1E0DAD3C8], (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD))sub_1DC089DA4);
    sub_1DC0926D8(v39, type metadata accessor for StocksActivity);
    swift_release();
    return sub_1DC0926D8((uint64_t)v33, (uint64_t (*)(_QWORD))type metadata accessor for PreBuyFlowRouteModel);
  }
}

uint64_t sub_1DC20E520(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_1DC20E5AC(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_1DC20E540(uint64_t a1, uint64_t a2)
{
  return sub_1DC20DAF0(a1, a2);
}

uint64_t sub_1DC20E568(uint64_t a1)
{
  return sub_1DC20DCD0(a1);
}

uint64_t sub_1DC20E588(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1DC20DEA4(a1, a2, a3);
}

uint64_t sub_1DC20E5AC(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  void (*v28)(void);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  _OWORD v46[2];
  uint64_t v47;
  _OWORD v48[2];
  uint64_t v49;

  v42 = a4;
  v40 = a3;
  v10 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1DC089DA4(0, (unint64_t *)&unk_1EDB29810, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD3C8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v11);
  v44 = (char *)&v38 - v12;
  v41 = type metadata accessor for StocksActivity(0);
  MEMORY[0x1E0C80A78](v41);
  v39 = (uint64_t)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC089DA4(0, (unint64_t *)&qword_1EDB299F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D61E10], v10);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v38 - v15;
  v17 = type metadata accessor for CampaignRouteModel();
  MEMORY[0x1E0C80A78](v17);
  v19 = (uint64_t *)((char *)&v38 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v20);
  v43 = (char *)&v38 - v21;
  v45 = a6;
  if (a6)
  {
    sub_1DC089DA4(0, &qword_1F034C748, (uint64_t (*)(uint64_t))MEMORY[0x1E0D61828], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v22 = a1;
    v23 = *(_QWORD *)(sub_1DC403BEC() - 8);
    v24 = (*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
    v25 = swift_allocObject();
    *(_OWORD *)(v25 + 16) = xmmword_1DC40DC10;
    v26 = v25 + v24;
    v27 = v45;
    *(_QWORD *)v26 = a5;
    *(_QWORD *)(v26 + 8) = v27;
    *(_OWORD *)(v26 + 32) = 0u;
    *(_OWORD *)(v26 + 48) = 0u;
    *(_OWORD *)(v26 + 16) = 0u;
    v28 = *(void (**)(void))(v23 + 104);
    a1 = v22;
    v28();
  }
  else
  {
    v25 = MEMORY[0x1E0DEE9D8];
  }
  v29 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v29 = a1 & 0xFFFFFFFFFFFFLL;
  if (v29)
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    a1 = 0;
    a2 = 0;
  }
  v30 = (uint64_t)v43;
  v31 = (uint64_t)v44;
  v32 = sub_1DC403DA8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v16, 1, 1, v32);
  v33 = (char *)v19 + *(int *)(v17 + 44);
  *((_QWORD *)v33 + 1) = 0;
  swift_unknownObjectWeakInit();
  *v19 = a1;
  v19[1] = a2;
  v34 = v40;
  v19[2] = 0;
  v19[3] = v34;
  v19[4] = v42;
  v19[5] = 0;
  v19[6] = 0;
  v19[7] = v25;
  v19[8] = 0;
  sub_1DC182D68((uint64_t)v16, (uint64_t)v19 + *(int *)(v17 + 40));
  *((_QWORD *)v33 + 1) = 0;
  swift_unknownObjectWeakAssign();
  sub_1DC1DC780((uint64_t)v19, v30);
  v35 = v39;
  sub_1DC0990BC(v30, v39, (uint64_t (*)(_QWORD))type metadata accessor for CampaignRouteModel);
  swift_storeEnumTagMultiPayload();
  v36 = sub_1DC403340();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v31, 1, 1, v36);
  v49 = 0;
  memset(v48, 0, sizeof(v48));
  v47 = 0;
  memset(v46, 0, sizeof(v46));
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1DC22BAE0(v35, 0, v31, (uint64_t)v48, 0, 0, (uint64_t)v46);
  swift_release();
  sub_1DC0A6180((uint64_t)v46, (uint64_t)&qword_1EDB29410, (uint64_t)&unk_1EDB29400, MEMORY[0x1E0DB35B0], (uint64_t (*)(_QWORD))sub_1DC0A6204);
  sub_1DC0A6180((uint64_t)v48, (uint64_t)&qword_1EDB2ACD0, (uint64_t)&qword_1EDB2ACC0, MEMORY[0x1E0D53040], (uint64_t (*)(_QWORD))sub_1DC0A6204);
  sub_1DC0A6180(v31, (uint64_t)&unk_1EDB29810, (uint64_t)MEMORY[0x1E0DAD3C8], (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD))sub_1DC089DA4);
  sub_1DC0926D8(v35, type metadata accessor for StocksActivity);
  swift_release();
  return sub_1DC0926D8(v30, (uint64_t (*)(_QWORD))type metadata accessor for CampaignRouteModel);
}

uint64_t sub_1DC20E9E4()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v1 = result;
    v2 = sub_1DC400958();
    swift_retain();
    sub_1DC20EB4C(v2, v1);
    swift_bridgeObjectRelease();
    swift_release();
    swift_retain();
    sub_1DC402728();
    swift_release();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t type metadata accessor for SortWatchlistMenuGroupOptionProvider()
{
  return objc_opt_self();
}

uint64_t sub_1DC20EAC0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_1DC400958();
  swift_retain();
  sub_1DC20EB4C(v1, v0);
  swift_bridgeObjectRelease();
  swift_release();
  swift_retain();
  sub_1DC402728();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_1DC20EB4C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v16;
  unint64_t v17;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v5 = type metadata accessor for SortWatchlistCommandContext(0);
  v24 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(a1 + 16);
  v9 = MEMORY[0x1E0DEE9D8];
  if (v8)
  {
    v19 = v2;
    v25 = MEMORY[0x1E0DEE9D8];
    sub_1DC2AD5A0(0, v8, 0);
    v9 = v25;
    v10 = sub_1DC400970();
    v11 = *(_QWORD *)(v10 - 8);
    v12 = a1 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
    v22 = v11;
    v23 = v10;
    v20 = *(_QWORD *)(v11 + 72);
    v21 = (_QWORD *)(a2 + 40);
    v13 = a2;
    do
    {
      v14 = v13;
      __swift_project_boxed_opaque_existential_1(v21, *(_QWORD *)(v13 + 64));
      sub_1DC400A60();
      (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(&v7[*(int *)(v5 + 20)], v12, v23);
      v7[*(int *)(v5 + 24)] = 0;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v25 = v9;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1DC2AD5A0(0, *(_QWORD *)(v9 + 16) + 1, 1);
        v9 = v25;
      }
      v17 = *(_QWORD *)(v9 + 16);
      v16 = *(_QWORD *)(v9 + 24);
      if (v17 >= v16 >> 1)
      {
        sub_1DC2AD5A0(v16 > 1, v17 + 1, 1);
        v9 = v25;
      }
      *(_QWORD *)(v9 + 16) = v17 + 1;
      sub_1DC1E9BD4((uint64_t)v7, v9+ ((*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80))+ *(_QWORD *)(v24 + 72) * v17);
      v12 += v20;
      --v8;
      v13 = v14;
    }
    while (v8);
  }
  return v9;
}

uint64_t sub_1DC20ED24(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[5];

  v4 = (uint64_t)v3;
  v12[0] = MEMORY[0x1E0DEE9D8];
  sub_1DC089DA4(0, &qword_1EDB427E8, (uint64_t (*)(uint64_t))sub_1DC1E9B30, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB3938]);
  swift_allocObject();
  v3[2] = sub_1DC402734();
  v3[3] = a1;
  v3[4] = a2;
  sub_1DC0824D4((uint64_t)a3, (uint64_t)(v3 + 5));
  swift_getObjectType();
  v8 = qword_1EDB2AA78;
  swift_unknownObjectRetain();
  if (v8 != -1)
    swift_once();
  swift_allocObject();
  swift_weakInit();
  sub_1DC40124C();
  sub_1DC404A5C();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  if (qword_1EDB2AA48 != -1)
    swift_once();
  swift_allocObject();
  swift_weakInit();
  sub_1DC404A5C();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  if (qword_1EDB2AAA0 != -1)
    swift_once();
  swift_allocObject();
  swift_weakInit();
  sub_1DC404A5C();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  __swift_project_boxed_opaque_existential_1(a3, a3[3]);
  sub_1DC20F080();
  swift_retain();
  sub_1DC400AB4();
  swift_release();
  v9 = sub_1DC400958();
  swift_retain();
  v10 = sub_1DC20EB4C(v9, v4);
  swift_bridgeObjectRelease();
  swift_release();
  v12[0] = v10;
  swift_retain();
  sub_1DC402728();
  swift_bridgeObjectRelease();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a3);
  return v4;
}

uint64_t sub_1DC20F03C()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1DC20F060()
{
  return sub_1DC20E9E4();
}

uint64_t sub_1DC20F068()
{
  return sub_1DC20E9E4();
}

unint64_t sub_1DC20F080()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EDB42848;
  if (!qword_1EDB42848)
  {
    v1 = type metadata accessor for SortWatchlistMenuGroupOptionProvider();
    result = MEMORY[0x1DF0CAB8C](&unk_1DC4190D8, v1);
    atomic_store(result, (unint64_t *)&qword_1EDB42848);
  }
  return result;
}

uint64_t sub_1DC20F0C4()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, uint64_t, uint64_t, uint64_t);
  unsigned int (*v12)(char *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  void (*v17)(char *, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double v22;
  char v23;
  char v24;
  uint64_t v25;
  char v26;
  double v27;
  uint64_t v28;

  sub_1DC20F2E4();
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v28 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v28 - v4;
  v6 = sub_1DC400F58();
  v7 = *(_QWORD *)(v6 + 16);
  v8 = sub_1DC400F34();
  v9 = *(_QWORD *)(v8 - 8);
  if (v7)
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v9 + 16))(v5, v6 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80)), v8);
    v10 = 0;
  }
  else
  {
    v10 = 1;
  }
  v11 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
  v11(v5, v10, 1, v8);
  swift_bridgeObjectRelease();
  sub_1DC400F34();
  v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
  if (v12(v5, 1, v8) == 1)
  {
    v13 = (uint64_t)v5;
LABEL_12:
    sub_1DC20F338(v13);
    return 2;
  }
  v14 = sub_1DC400F1C();
  v16 = v15;
  v17 = *(void (**)(char *, uint64_t))(v9 + 8);
  v17(v5, v8);
  if ((v16 & 1) != 0)
    return 2;
  v18 = sub_1DC400F58();
  v19 = *(_QWORD *)(v18 + 16);
  if (v19)
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v9 + 16))(v2, v18+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(_QWORD *)(v9 + 72) * (v19 - 1), v8);
    v20 = 0;
  }
  else
  {
    v20 = 1;
  }
  v11(v2, v20, 1, v8);
  swift_bridgeObjectRelease();
  if (v12(v2, 1, v8) == 1)
  {
    v13 = (uint64_t)v2;
    goto LABEL_12;
  }
  v22 = COERCE_DOUBLE(sub_1DC400F1C());
  v24 = v23;
  v17(v2, v8);
  if ((v24 & 1) != 0)
    return 2;
  v25 = sub_1DC400EE0();
  if ((v26 & 1) != 0)
    v27 = *(double *)&v14;
  else
    v27 = *(double *)&v25;
  return v22 - v27 < 0.0;
}

void sub_1DC20F2E4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB28D70)
  {
    sub_1DC400F34();
    v0 = sub_1DC4095A4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB28D70);
  }
}

uint64_t sub_1DC20F338(uint64_t a1)
{
  uint64_t v2;

  sub_1DC20F2E4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t *sub_1DC20F374(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  _OWORD *v10;
  __int128 v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1DC4052FC();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (_OWORD *)((char *)a1 + v8);
    v10 = (_OWORD *)((char *)a2 + v8);
    v11 = v10[1];
    *v9 = *v10;
    v9[1] = v11;
  }
  return a1;
}

uint64_t sub_1DC20F404(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  __int128 v10;

  v6 = sub_1DC4052FC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_OWORD *)(a1 + v7);
  v9 = (_OWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  return a1;
}

uint64_t sub_1DC20F468(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;

  v6 = sub_1DC4052FC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  v8[2] = v9[2];
  v8[3] = v9[3];
  return a1;
}

uint64_t sub_1DC20F4E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  __int128 v10;

  v6 = sub_1DC4052FC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_OWORD *)(a1 + v7);
  v9 = (_OWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  return a1;
}

uint64_t sub_1DC20F548(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  __int128 v10;

  v6 = sub_1DC4052FC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_OWORD *)(a1 + v7);
  v9 = (_OWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  return a1;
}

uint64_t sub_1DC20F5AC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC20F5B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1DC4052FC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_1DC20F5F4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC20F600(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1DC4052FC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for BrandingTitleViewLayoutOptions()
{
  uint64_t result;

  result = qword_1EDB39B30;
  if (!qword_1EDB39B30)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1DC20F67C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1DC4052FC();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1DC20F6EC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t result;
  unint64_t v12;
  uint64_t v13;

  v3 = sub_1DC40124C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 40));
  v7 = sub_1DC400ACC();
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 40));
  sub_1DC400A60();
  v8 = sub_1DC27AD00((uint64_t)v6, v7);
  v10 = v9;
  result = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  if ((v10 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56))(a1, 1, 1, v3);
  }
  else
  {
    v12 = v8 - 1;
    if (v8 < 1)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56))(a1, 1, 1, v3);
      return swift_bridgeObjectRelease();
    }
    else if (v12 >= *(_QWORD *)(v7 + 16))
    {
      __break(1u);
    }
    else
    {
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v4 + 16))(a1, v7+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(_QWORD *)(v4 + 72) * v12, v3);
      swift_bridgeObjectRelease();
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v4 + 56))(a1, 0, 1, v3);
    }
  }
  return result;
}

uint64_t sub_1DC20F878@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t result;
  unint64_t v12;
  uint64_t v13;

  v3 = sub_1DC40124C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 40));
  v7 = sub_1DC400ACC();
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 40));
  sub_1DC400A60();
  v8 = sub_1DC27AD00((uint64_t)v6, v7);
  v10 = v9;
  result = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  if ((v10 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56))(a1, 1, 1, v3);
  }
  else
  {
    v12 = *(_QWORD *)(v7 + 16);
    if (v8 >= (uint64_t)(v12 - 1))
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56))(a1, 1, 1, v3);
      return swift_bridgeObjectRelease();
    }
    else if (v8 + 1 >= v12)
    {
      __break(1u);
    }
    else
    {
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v4 + 16))(a1, v7+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(_QWORD *)(v4 + 72) * (v8 + 1), v3);
      swift_bridgeObjectRelease();
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v4 + 56))(a1, 0, 1, v3);
    }
  }
  return result;
}

uint64_t sub_1DC20FA0C()
{
  return sub_1DC20FA58();
}

BOOL sub_1DC20FA30()
{
  return sub_1DC20FCD8();
}

uint64_t sub_1DC20FA58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t result;
  uint64_t v15;

  sub_1DC176BD8(0);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v15 - v5;
  v7 = sub_1DC40124C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v15 - v12;
  sub_1DC406AE4();
  if (qword_1EDB2AA48 != -1)
    swift_once();
  if ((sub_1DC406964() & 1) != 0)
  {
    sub_1DC20F6EC((uint64_t)v6);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
    {
      return sub_1DC191D3C((uint64_t)v6);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v13, v6, v7);
      __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 40));
      sub_1DC400A6C();
      sub_1DC406F7C();
      swift_release();
      return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v13, v7);
    }
  }
  else
  {
    if (qword_1EDB2AAA0 != -1)
      swift_once();
    result = sub_1DC406964();
    if ((result & 1) != 0)
    {
      sub_1DC20F878((uint64_t)v3);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v3, 1, v7) == 1)
      {
        return sub_1DC191D3C((uint64_t)v3);
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v3, v7);
        __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 40));
        sub_1DC400A6C();
        sub_1DC406F7C();
        swift_release();
        return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      }
    }
  }
  return result;
}

BOOL sub_1DC20FCD8()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  _BOOL8 v9;
  uint64_t v11;

  sub_1DC176BD8(0);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v11 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v11 - v4;
  sub_1DC406AE4();
  if (qword_1EDB2AA48 != -1)
    swift_once();
  if ((sub_1DC406964() & 1) != 0)
  {
    sub_1DC20F6EC((uint64_t)v5);
    v6 = sub_1DC40124C();
    v7 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v5, 1, v6);
  }
  else
  {
    if (qword_1EDB2AAA0 != -1)
      swift_once();
    if ((sub_1DC406964() & 1) == 0)
      return 0;
    sub_1DC20F878((uint64_t)v2);
    v8 = sub_1DC40124C();
    v7 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v2, 1, v8);
    v5 = v2;
  }
  v9 = v7 != 1;
  sub_1DC191D3C((uint64_t)v5);
  return v9;
}

uint64_t sub_1DC20FE5C(void *a1)
{
  id v1;

  v1 = objc_msgSend(a1, sel_type);
  sub_1DC408A4C();

  sub_1DC210430();
  sub_1DC210474();
  LOBYTE(v1) = sub_1DC4089C8();
  swift_bridgeObjectRelease();
  return v1 & 1;
}

uint64_t sub_1DC20FF08(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  char *v8;
  id v9;
  void *v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  _OWORD v25[2];
  uint64_t v26;
  _OWORD v27[2];
  uint64_t v28;

  sub_1DC1EA918(0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for StocksActivity(0);
  *(_QWORD *)&v6 = MEMORY[0x1E0C80A78](v5).n128_u64[0];
  v8 = (char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = objc_msgSend(a1, sel_userInfo, v6);
  if (v9)
  {
    v10 = v9;
    sub_1DC2104B8();
    v11 = sub_1DC40898C();

    v12 = objc_msgSend(a1, sel_type);
    v13 = sub_1DC408A4C();
    v15 = v14;

    v16 = sub_1DC3F37C4(v11);
    swift_bridgeObjectRelease();
    sub_1DC25FC94(v13, v15, v16, (uint64_t)v8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v23 = sub_1DC403340();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v4, 1, 1, v23);
    v28 = 0;
    memset(v27, 0, sizeof(v27));
    v26 = 0;
    memset(v25, 0, sizeof(v25));
    sub_1DC22B720((uint64_t)v8, 0, (uint64_t)v4, (uint64_t)v27, 0, 0, (uint64_t)v25);
    swift_release();
    sub_1DC1B5EA8((uint64_t)v25, &qword_1EDB29410, (unint64_t *)&unk_1EDB29400, MEMORY[0x1E0DB35B0]);
    sub_1DC1B5EA8((uint64_t)v27, &qword_1EDB2ACD0, (unint64_t *)&qword_1EDB2ACC0, MEMORY[0x1E0D53040]);
    sub_1DC0926D8((uint64_t)v4, (uint64_t (*)(_QWORD))sub_1DC1EA918);
    sub_1DC0926D8((uint64_t)v8, type metadata accessor for StocksActivity);
    return 1;
  }
  else
  {
    sub_1DC408FC8();
    sub_1DC0FDC18(0, (unint64_t *)&qword_1EDB400C0, (unint64_t *)&qword_1EDB400F0, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_1DC40DC10;
    v18 = objc_msgSend(a1, sel_type);
    v19 = sub_1DC408A4C();
    v21 = v20;

    *(_QWORD *)(v17 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v17 + 64) = sub_1DC0E7FAC();
    *(_QWORD *)(v17 + 32) = v19;
    *(_QWORD *)(v17 + 40) = v21;
    sub_1DC09BDF8();
    v22 = (void *)sub_1DC409580();
    sub_1DC403F28();
    swift_bridgeObjectRelease();

    return 0;
  }
}

uint64_t sub_1DC21039C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  v1 = v0 + OBJC_IVAR____TtC8StocksUI25StocksShortcutItemHandler_navigator;
  sub_1DC132300();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1DC210404()
{
  return type metadata accessor for StocksShortcutItemHandler();
}

uint64_t sub_1DC21040C(void *a1)
{
  return sub_1DC20FF08(a1) & 1;
}

unint64_t sub_1DC210430()
{
  unint64_t result;

  result = qword_1F034EEB8;
  if (!qword_1F034EEB8)
  {
    result = MEMORY[0x1DF0CAB8C](MEMORY[0x1E0DEA980], MEMORY[0x1E0DEA968]);
    atomic_store(result, (unint64_t *)&qword_1F034EEB8);
  }
  return result;
}

unint64_t sub_1DC210474()
{
  unint64_t result;

  result = qword_1F034EEC0;
  if (!qword_1F034EEC0)
  {
    result = MEMORY[0x1DF0CAB8C](MEMORY[0x1E0DEFF48], MEMORY[0x1E0DEA968]);
    atomic_store(result, (unint64_t *)&qword_1F034EEC0);
  }
  return result;
}

unint64_t sub_1DC2104B8()
{
  unint64_t result;

  result = qword_1F034EED0;
  if (!qword_1F034EED0)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1F034EED0);
  }
  return result;
}

uint64_t sub_1DC21050C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t *, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  void *v17;
  const void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  int *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int *v50;
  uint64_t v51;
  void (*v52)(uint64_t, uint64_t, uint64_t);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t *v67;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v22 = *a2;
    *(_QWORD *)a1 = *a2;
    v23 = v22 + ((v5 + 16) & ~(unint64_t)v5);
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    v8 = *(_OWORD *)(a2 + 5);
    *(_OWORD *)(a1 + 40) = v8;
    v9 = v8;
    v10 = **(void (***)(uint64_t, uint64_t *, uint64_t))(v8 - 8);
    swift_bridgeObjectRetain();
    v10(a1 + 16, a2 + 2, v9);
    v66 = a3;
    v11 = *(int *)(a3 + 24);
    v12 = a1 + v11;
    v13 = (uint64_t)a2 + v11;
    v14 = sub_1DC4010E4();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
    v15 = (int *)type metadata accessor for StockViewModel();
    v16 = v15[5];
    v17 = (void *)(v12 + v16);
    v18 = (const void *)(v13 + v16);
    v19 = sub_1DC401030();
    v20 = *(_QWORD *)(v19 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
    {
      sub_1DC089DA4(0, &qword_1EDB28DC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF040], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v20 + 16))(v17, v18, v19);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
    }
    v24 = v15[6];
    v25 = (char *)(v12 + v24);
    v26 = (char *)(v13 + v24);
    v27 = (int *)type metadata accessor for StockSparklineViewModel(0);
    v28 = *((_QWORD *)v27 - 1);
    v67 = a2;
    v65 = a1;
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v28 + 48))(v26, 1, v27))
    {
      sub_1DC089DA4(0, &qword_1EDB353E0, type metadata accessor for StockSparklineViewModel, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    }
    else
    {
      v30 = sub_1DC408614();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v25, v26, v30);
      v31 = v27[5];
      v32 = &v25[v31];
      v33 = &v26[v31];
      *(_QWORD *)v32 = *(_QWORD *)v33;
      v32[8] = v33[8];
      v34 = v27[6];
      v35 = &v25[v34];
      v36 = &v26[v34];
      *(_QWORD *)v35 = *(_QWORD *)v36;
      v35[8] = v36[8];
      v25[v27[7]] = v26[v27[7]];
      v37 = v27[8];
      v38 = &v25[v37];
      v39 = &v26[v37];
      v40 = sub_1DC400F7C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 16))(v38, v39, v40);
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v28 + 56))(v25, 0, 1, v27);
    }
    v41 = v15[7];
    v63 = v13;
    v64 = v12;
    v42 = v12 + v41;
    v43 = v13 + v41;
    *(_QWORD *)v42 = *(_QWORD *)v43;
    *(_BYTE *)(v42 + 8) = *(_BYTE *)(v43 + 8);
    *(_QWORD *)(v42 + 16) = *(_QWORD *)(v43 + 16);
    *(_BYTE *)(v42 + 24) = *(_BYTE *)(v43 + 24);
    *(_QWORD *)(v42 + 32) = *(_QWORD *)(v43 + 32);
    *(_BYTE *)(v42 + 40) = *(_BYTE *)(v43 + 40);
    v44 = *(_QWORD *)(v43 + 56);
    *(_QWORD *)(v42 + 48) = *(_QWORD *)(v43 + 48);
    *(_QWORD *)(v42 + 56) = v44;
    v45 = *(_QWORD *)(v43 + 72);
    *(_QWORD *)(v42 + 64) = *(_QWORD *)(v43 + 64);
    *(_QWORD *)(v42 + 72) = v45;
    *(_BYTE *)(v42 + 80) = *(_BYTE *)(v43 + 80);
    v46 = type metadata accessor for PriceViewModel();
    v47 = *(int *)(v46 + 40);
    v48 = v42 + v47;
    v49 = v43 + v47;
    v50 = v15;
    v51 = sub_1DC4011C8();
    v52 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v52(v48, v49, v51);
    v53 = *(int *)(v46 + 44);
    v54 = v42 + v53;
    v55 = v43 + v53;
    v56 = sub_1DC400118();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 16))(v54, v55, v56);
    v57 = v50[8];
    v58 = v64 + v57;
    v59 = v63 + v57;
    v60 = sub_1DC4008EC();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v60 - 8) + 16))(v58, v59, v60);
    *(_BYTE *)(v64 + v50[9]) = *(_BYTE *)(v63 + v50[9]);
    v61 = *(int *)(v66 + 32);
    v23 = v65;
    *(_QWORD *)(v65 + *(int *)(v66 + 28)) = *(uint64_t *)((char *)v67 + *(int *)(v66 + 28));
    *(_QWORD *)(v65 + v61) = *(uint64_t *)((char *)v67 + v61);
  }
  swift_retain();
  return v23;
}

uint64_t sub_1DC2108DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 16);
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_1DC4010E4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = (int *)type metadata accessor for StockViewModel();
  v7 = v4 + v6[5];
  v8 = sub_1DC401030();
  v9 = *(_QWORD *)(v8 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  v10 = v4 + v6[6];
  v11 = type metadata accessor for StockSparklineViewModel(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v10, 1, v11))
  {
    v12 = sub_1DC408614();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v10, v12);
    v13 = v10 + *(int *)(v11 + 32);
    v14 = sub_1DC400F7C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  }
  v15 = v4 + v6[7];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v16 = type metadata accessor for PriceViewModel();
  v17 = v15 + *(int *)(v16 + 40);
  v18 = sub_1DC4011C8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
  v19 = v15 + *(int *)(v16 + 44);
  v20 = sub_1DC400118();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
  v21 = v4 + v6[8];
  v22 = sub_1DC4008EC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v21, v22);
  return swift_release();
}

uint64_t sub_1DC210A9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  void *v17;
  const void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  int *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(uint64_t, uint64_t, uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  v7 = a2 + 16;
  v8 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 40) = v8;
  v9 = v8;
  v10 = **(void (***)(uint64_t, uint64_t, uint64_t))(v8 - 8);
  swift_bridgeObjectRetain();
  v10(a1 + 16, v7, v9);
  v62 = a1;
  v63 = a3;
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v64 = a2;
  v13 = a2 + v11;
  v14 = sub_1DC4010E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = (int *)type metadata accessor for StockViewModel();
  v16 = v15[5];
  v17 = (void *)(v12 + v16);
  v18 = (const void *)(v13 + v16);
  v19 = sub_1DC401030();
  v20 = *(_QWORD *)(v19 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
  {
    sub_1DC089DA4(0, &qword_1EDB28DC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF040], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v20 + 16))(v17, v18, v19);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
  }
  v22 = v15[6];
  v23 = (char *)(v12 + v22);
  v24 = (char *)(v13 + v22);
  v25 = (int *)type metadata accessor for StockSparklineViewModel(0);
  v26 = *((_QWORD *)v25 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v26 + 48))(v24, 1, v25))
  {
    sub_1DC089DA4(0, &qword_1EDB353E0, type metadata accessor for StockSparklineViewModel, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
  }
  else
  {
    v28 = sub_1DC408614();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v23, v24, v28);
    v29 = v25[5];
    v30 = &v23[v29];
    v31 = &v24[v29];
    *(_QWORD *)v30 = *(_QWORD *)v31;
    v30[8] = v31[8];
    v32 = v25[6];
    v33 = &v23[v32];
    v34 = &v24[v32];
    *(_QWORD *)v33 = *(_QWORD *)v34;
    v33[8] = v34[8];
    v23[v25[7]] = v24[v25[7]];
    v35 = v25[8];
    v36 = &v23[v35];
    v37 = &v24[v35];
    v38 = sub_1DC400F7C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v36, v37, v38);
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v26 + 56))(v23, 0, 1, v25);
  }
  v39 = v15[7];
  v61 = v12;
  v40 = v12 + v39;
  v41 = v13 + v39;
  *(_QWORD *)v40 = *(_QWORD *)(v13 + v39);
  *(_BYTE *)(v40 + 8) = *(_BYTE *)(v13 + v39 + 8);
  *(_QWORD *)(v40 + 16) = *(_QWORD *)(v13 + v39 + 16);
  *(_BYTE *)(v40 + 24) = *(_BYTE *)(v13 + v39 + 24);
  *(_QWORD *)(v40 + 32) = *(_QWORD *)(v13 + v39 + 32);
  *(_BYTE *)(v40 + 40) = *(_BYTE *)(v13 + v39 + 40);
  v42 = *(_QWORD *)(v13 + v39 + 56);
  *(_QWORD *)(v40 + 48) = *(_QWORD *)(v13 + v39 + 48);
  *(_QWORD *)(v40 + 56) = v42;
  v43 = *(_QWORD *)(v13 + v39 + 72);
  *(_QWORD *)(v40 + 64) = *(_QWORD *)(v13 + v39 + 64);
  *(_QWORD *)(v40 + 72) = v43;
  *(_BYTE *)(v40 + 80) = *(_BYTE *)(v13 + v39 + 80);
  v44 = type metadata accessor for PriceViewModel();
  v45 = *(int *)(v44 + 40);
  v46 = v40 + v45;
  v47 = v41 + v45;
  v48 = sub_1DC4011C8();
  v60 = v13;
  v49 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v49(v46, v47, v48);
  v50 = *(int *)(v44 + 44);
  v51 = v40 + v50;
  v52 = v41 + v50;
  v53 = sub_1DC400118();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 16))(v51, v52, v53);
  v54 = v15[8];
  v55 = v61 + v54;
  v56 = v60 + v54;
  v57 = sub_1DC4008EC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 16))(v55, v56, v57);
  *(_BYTE *)(v61 + v15[9]) = *(_BYTE *)(v60 + v15[9]);
  v58 = *(int *)(v63 + 32);
  *(_QWORD *)(v62 + *(int *)(v63 + 28)) = *(_QWORD *)(v64 + *(int *)(v63 + 28));
  *(_QWORD *)(v62 + v58) = *(_QWORD *)(v64 + v58);
  swift_retain();
  return v62;
}

_QWORD *sub_1DC210E40(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(char *, uint64_t, uint64_t);
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  int *v22;
  uint64_t v23;
  uint64_t (*v24)(char *, uint64_t, int *);
  int v25;
  int v26;
  uint64_t (*v27)(uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v73;
  int *v74;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __swift_assign_boxed_opaque_existential_1(a1 + 2, a2 + 2);
  v73 = a3;
  v6 = *(int *)(a3 + 24);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1DC4010E4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v74 = (int *)type metadata accessor for StockViewModel();
  v10 = v74[5];
  v11 = &v7[v10];
  v12 = &v8[v10];
  v13 = sub_1DC401030();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  v16 = v15(v11, 1, v13);
  v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v11, v13);
LABEL_6:
    sub_1DC089DA4(0, &qword_1EDB28DC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF040], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 24))(v11, v12, v13);
LABEL_7:
  v19 = v74[6];
  v20 = &v7[v19];
  v21 = &v8[v19];
  v22 = (int *)type metadata accessor for StockSparklineViewModel(0);
  v23 = *((_QWORD *)v22 - 1);
  v24 = *(uint64_t (**)(char *, uint64_t, int *))(v23 + 48);
  v25 = v24(v20, 1, v22);
  v26 = v24(v21, 1, v22);
  if (v25)
  {
    if (!v26)
    {
      v29 = sub_1DC408614();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v20, v21, v29);
      v30 = v22[5];
      v31 = &v20[v30];
      v32 = &v21[v30];
      v33 = *(_QWORD *)v32;
      v31[8] = v32[8];
      *(_QWORD *)v31 = v33;
      v34 = v22[6];
      v35 = &v20[v34];
      v36 = &v21[v34];
      LOBYTE(v33) = v36[8];
      *(_QWORD *)v35 = *(_QWORD *)v36;
      v35[8] = v33;
      v20[v22[7]] = v21[v22[7]];
      v37 = v22[8];
      v38 = &v20[v37];
      v39 = &v21[v37];
      v40 = sub_1DC400F7C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 16))(v38, v39, v40);
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v23 + 56))(v20, 0, 1, v22);
      goto LABEL_16;
    }
    v27 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  }
  else
  {
    if (!v26)
    {
      v41 = sub_1DC408614();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 24))(v20, v21, v41);
      v42 = v22[5];
      v43 = &v20[v42];
      v44 = &v21[v42];
      v45 = *(_QWORD *)v44;
      v43[8] = v44[8];
      *(_QWORD *)v43 = v45;
      v46 = v22[6];
      v47 = &v20[v46];
      v48 = &v21[v46];
      LOBYTE(v45) = v48[8];
      *(_QWORD *)v47 = *(_QWORD *)v48;
      v47[8] = v45;
      v20[v22[7]] = v21[v22[7]];
      v49 = v22[8];
      v50 = &v20[v49];
      v51 = &v21[v49];
      v52 = sub_1DC400F7C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 24))(v50, v51, v52);
      goto LABEL_16;
    }
    sub_1DC0926D8((uint64_t)v20, type metadata accessor for StockSparklineViewModel);
    v27 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  }
  sub_1DC089DA4(0, &qword_1EDB353E0, type metadata accessor for StockSparklineViewModel, v27);
  memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
LABEL_16:
  v53 = v74[7];
  v54 = &v7[v53];
  v55 = &v8[v53];
  v56 = *(_QWORD *)&v8[v53];
  v54[8] = v55[8];
  *(_QWORD *)v54 = v56;
  v57 = *((_QWORD *)v55 + 2);
  v54[24] = v55[24];
  *((_QWORD *)v54 + 2) = v57;
  v58 = *((_QWORD *)v55 + 4);
  v54[40] = v55[40];
  *((_QWORD *)v54 + 4) = v58;
  *((_QWORD *)v54 + 6) = *((_QWORD *)v55 + 6);
  *((_QWORD *)v54 + 7) = *((_QWORD *)v55 + 7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)v54 + 8) = *((_QWORD *)v55 + 8);
  *((_QWORD *)v54 + 9) = *((_QWORD *)v55 + 9);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v54[80] = v55[80];
  v59 = type metadata accessor for PriceViewModel();
  v60 = *(int *)(v59 + 40);
  v61 = &v54[v60];
  v62 = &v55[v60];
  v63 = sub_1DC4011C8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v63 - 8) + 24))(v61, v62, v63);
  v64 = *(int *)(v59 + 44);
  v65 = &v54[v64];
  v66 = &v55[v64];
  v67 = sub_1DC400118();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v67 - 8) + 24))(v65, v66, v67);
  v68 = v74[8];
  v69 = &v7[v68];
  v70 = &v8[v68];
  v71 = sub_1DC4008EC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v71 - 8) + 24))(v69, v70, v71);
  v7[v74[9]] = v8[v74[9]];
  *(_QWORD *)((char *)a1 + *(int *)(v73 + 28)) = *(_QWORD *)((char *)a2 + *(int *)(v73 + 28));
  *(_QWORD *)((char *)a1 + *(int *)(v73 + 32)) = *(_QWORD *)((char *)a2 + *(int *)(v73 + 32));
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1DC21131C(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  void *v12;
  const void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v5;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v6 = a3[6];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_1DC4010E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = (int *)type metadata accessor for StockViewModel();
  v11 = v10[5];
  v12 = (void *)(v7 + v11);
  v13 = (const void *)(v8 + v11);
  v14 = sub_1DC401030();
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    sub_1DC089DA4(0, &qword_1EDB28DC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF040], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v15 + 32))(v12, v13, v14);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  v17 = v10[6];
  v18 = (char *)(v7 + v17);
  v19 = (char *)(v8 + v17);
  v20 = (int *)type metadata accessor for StockSparklineViewModel(0);
  v21 = *((_QWORD *)v20 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v21 + 48))(v19, 1, v20))
  {
    sub_1DC089DA4(0, &qword_1EDB353E0, type metadata accessor for StockSparklineViewModel, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    v23 = sub_1DC408614();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v18, v19, v23);
    v24 = v20[5];
    v25 = &v18[v24];
    v26 = &v19[v24];
    *(_QWORD *)v25 = *(_QWORD *)v26;
    v25[8] = v26[8];
    v27 = v20[6];
    v28 = &v18[v27];
    v29 = &v19[v27];
    *(_QWORD *)v28 = *(_QWORD *)v29;
    v28[8] = v29[8];
    v18[v20[7]] = v19[v20[7]];
    v30 = v20[8];
    v31 = &v18[v30];
    v32 = &v19[v30];
    v33 = sub_1DC400F7C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 32))(v31, v32, v33);
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v21 + 56))(v18, 0, 1, v20);
  }
  v34 = v10[7];
  v35 = v7 + v34;
  v36 = v8 + v34;
  *(_QWORD *)v35 = *(_QWORD *)(v8 + v34);
  *(_BYTE *)(v35 + 8) = *(_BYTE *)(v8 + v34 + 8);
  *(_QWORD *)(v35 + 16) = *(_QWORD *)(v8 + v34 + 16);
  *(_BYTE *)(v35 + 24) = *(_BYTE *)(v8 + v34 + 24);
  *(_QWORD *)(v35 + 32) = *(_QWORD *)(v8 + v34 + 32);
  *(_BYTE *)(v35 + 40) = *(_BYTE *)(v8 + v34 + 40);
  v37 = *(_OWORD *)(v8 + v34 + 64);
  *(_OWORD *)(v35 + 48) = *(_OWORD *)(v8 + v34 + 48);
  *(_OWORD *)(v35 + 64) = v37;
  *(_BYTE *)(v35 + 80) = *(_BYTE *)(v8 + v34 + 80);
  v38 = type metadata accessor for PriceViewModel();
  v39 = *(int *)(v38 + 40);
  v40 = v35 + v39;
  v41 = v36 + v39;
  v42 = sub_1DC4011C8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 32))(v40, v41, v42);
  v43 = *(int *)(v38 + 44);
  v44 = v35 + v43;
  v45 = v36 + v43;
  v46 = sub_1DC400118();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 32))(v44, v45, v46);
  v47 = v10[8];
  v48 = v7 + v47;
  v49 = v8 + v47;
  v50 = sub_1DC4008EC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 32))(v48, v49, v50);
  *(_BYTE *)(v7 + v10[9]) = *(_BYTE *)(v8 + v10[9]);
  v51 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v51) = *(_QWORD *)(a2 + v51);
  return a1;
}

uint64_t sub_1DC211668(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(void *, uint64_t, uint64_t);
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  _BYTE *v23;
  int *v24;
  uint64_t v25;
  uint64_t (*v26)(_BYTE *, uint64_t, int *);
  int v27;
  int v28;
  uint64_t (*v29)(uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v73;
  int *v74;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 16);
  v7 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v73 = a3;
  v8 = *(int *)(a3 + 24);
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_1DC4010E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  v74 = (int *)type metadata accessor for StockViewModel();
  v12 = v74[5];
  v13 = (void *)(v9 + v12);
  v14 = (void *)(v10 + v12);
  v15 = sub_1DC401030();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v16 + 48);
  v18 = v17(v13, 1, v15);
  v19 = v17(v14, 1, v15);
  if (v18)
  {
    if (!v19)
    {
      (*(void (**)(void *, void *, uint64_t))(v16 + 32))(v13, v14, v15);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v19)
  {
    (*(void (**)(void *, uint64_t))(v16 + 8))(v13, v15);
LABEL_6:
    sub_1DC089DA4(0, &qword_1EDB28DC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF040], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v16 + 40))(v13, v14, v15);
LABEL_7:
  v21 = v74[6];
  v22 = (_BYTE *)(v9 + v21);
  v23 = (_BYTE *)(v10 + v21);
  v24 = (int *)type metadata accessor for StockSparklineViewModel(0);
  v25 = *((_QWORD *)v24 - 1);
  v26 = *(uint64_t (**)(_BYTE *, uint64_t, int *))(v25 + 48);
  v27 = v26(v22, 1, v24);
  v28 = v26(v23, 1, v24);
  if (v27)
  {
    if (!v28)
    {
      v31 = sub_1DC408614();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(v22, v23, v31);
      v32 = v24[5];
      v33 = &v22[v32];
      v34 = &v23[v32];
      *(_QWORD *)v33 = *(_QWORD *)v34;
      v33[8] = v34[8];
      v35 = v24[6];
      v36 = &v22[v35];
      v37 = &v23[v35];
      *(_QWORD *)v36 = *(_QWORD *)v37;
      v36[8] = v37[8];
      v22[v24[7]] = v23[v24[7]];
      v38 = v24[8];
      v39 = &v22[v38];
      v40 = &v23[v38];
      v41 = sub_1DC400F7C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 32))(v39, v40, v41);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v25 + 56))(v22, 0, 1, v24);
      goto LABEL_16;
    }
    v29 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  }
  else
  {
    if (!v28)
    {
      v42 = sub_1DC408614();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v42 - 8) + 40))(v22, v23, v42);
      v43 = v24[5];
      v44 = &v22[v43];
      v45 = &v23[v43];
      *(_QWORD *)v44 = *(_QWORD *)v45;
      v44[8] = v45[8];
      v46 = v24[6];
      v47 = &v22[v46];
      v48 = &v23[v46];
      *(_QWORD *)v47 = *(_QWORD *)v48;
      v47[8] = v48[8];
      v22[v24[7]] = v23[v24[7]];
      v49 = v24[8];
      v50 = &v22[v49];
      v51 = &v23[v49];
      v52 = sub_1DC400F7C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 40))(v50, v51, v52);
      goto LABEL_16;
    }
    sub_1DC0926D8((uint64_t)v22, type metadata accessor for StockSparklineViewModel);
    v29 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  }
  sub_1DC089DA4(0, &qword_1EDB353E0, type metadata accessor for StockSparklineViewModel, v29);
  memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
LABEL_16:
  v53 = v74[7];
  v54 = v9 + v53;
  v55 = v10 + v53;
  *(_QWORD *)v54 = *(_QWORD *)(v10 + v53);
  *(_BYTE *)(v54 + 8) = *(_BYTE *)(v10 + v53 + 8);
  *(_QWORD *)(v54 + 16) = *(_QWORD *)(v10 + v53 + 16);
  *(_BYTE *)(v54 + 24) = *(_BYTE *)(v10 + v53 + 24);
  *(_QWORD *)(v54 + 32) = *(_QWORD *)(v10 + v53 + 32);
  *(_BYTE *)(v54 + 40) = *(_BYTE *)(v10 + v53 + 40);
  v56 = *(_QWORD *)(v10 + v53 + 56);
  *(_QWORD *)(v54 + 48) = *(_QWORD *)(v10 + v53 + 48);
  *(_QWORD *)(v54 + 56) = v56;
  swift_bridgeObjectRelease();
  v57 = *(_QWORD *)(v55 + 72);
  *(_QWORD *)(v54 + 64) = *(_QWORD *)(v55 + 64);
  *(_QWORD *)(v54 + 72) = v57;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v54 + 80) = *(_BYTE *)(v55 + 80);
  v58 = type metadata accessor for PriceViewModel();
  v59 = *(int *)(v58 + 40);
  v60 = v54 + v59;
  v61 = v55 + v59;
  v62 = sub_1DC4011C8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 40))(v60, v61, v62);
  v63 = *(int *)(v58 + 44);
  v64 = v54 + v63;
  v65 = v55 + v63;
  v66 = sub_1DC400118();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 40))(v64, v65, v66);
  v67 = v74[8];
  v68 = v9 + v67;
  v69 = v10 + v67;
  v70 = sub_1DC4008EC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v70 - 8) + 40))(v68, v69, v70);
  *(_BYTE *)(v9 + v74[9]) = *(_BYTE *)(v10 + v74[9]);
  v71 = *(int *)(v73 + 32);
  *(_QWORD *)(a1 + *(int *)(v73 + 28)) = *(_QWORD *)(a2 + *(int *)(v73 + 28));
  *(_QWORD *)(a1 + v71) = *(_QWORD *)(a2 + v71);
  swift_release();
  return a1;
}

uint64_t sub_1DC211B14()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC211B20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for StockViewModel();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t sub_1DC211B9C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC211BA8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for StockViewModel();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for StockListMoveStockBlueprintModifier()
{
  uint64_t result;

  result = qword_1F034EF30;
  if (!qword_1F034EF30)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1DC211C58()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for StockViewModel();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1DC211CF0(uint64_t a1, void (*a2)(uint64_t *), uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  int64_t v48;
  unint64_t v49;
  unint64_t v50;
  void (*v51)(char *, unint64_t, void (*)(_QWORD, _QWORD));
  char *v52;
  void (*v53)(_QWORD, _QWORD);
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t v60;
  char *v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  void (*v72)(char *, uint64_t);
  uint64_t *v73;
  char *v74;
  uint64_t *v75;
  char *v76;
  void (*v77)(char *, uint64_t);
  uint64_t v78;
  _QWORD v79[2];
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  _QWORD *v100;
  uint64_t v101;
  uint64_t *v102;
  uint64_t v103;
  void (*v104)(uint64_t *);
  uint64_t v105;
  uint64_t v106;
  char *v107;
  void (*v108)(_QWORD, _QWORD);
  uint64_t v109;
  uint64_t v110;

  v101 = a3;
  v104 = a2;
  sub_1DC0CC0A4(0, &qword_1EDB2A280, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB9A28]);
  v105 = v4;
  v103 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v102 = (_QWORD *)((char *)v79 - v5);
  v6 = sub_1DC4010E4();
  v7 = *(_QWORD *)(v6 - 8);
  v108 = (void (*)(_QWORD, _QWORD))v6;
  v109 = v7;
  MEMORY[0x1E0C80A78](v6);
  v107 = (char *)v79 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1DC404E34();
  v93 = *(_QWORD *)(v9 - 8);
  v94 = v9;
  MEMORY[0x1E0C80A78](v9);
  v92 = (char *)v79 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v91 = (char *)v79 - v12;
  v96 = sub_1DC405C68();
  v90 = *(_QWORD *)(v96 - 8);
  MEMORY[0x1E0C80A78](v96);
  v95 = (char *)v79 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = sub_1DC40124C();
  v88 = *(_QWORD *)(v89 - 8);
  MEMORY[0x1E0C80A78](v89);
  v87 = (char *)v79 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0CC0A4(0, (unint64_t *)&qword_1EDB2AB40, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790]);
  v16 = v15;
  v98 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v97 = (char *)v79 - v17;
  sub_1DC089DA4(0, &qword_1EDB29BF0, (uint64_t (*)(uint64_t))sub_1DC0F8190, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v18);
  v106 = (uint64_t)v79 - v19;
  sub_1DC0F8190();
  v99 = v20;
  v21 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  v23 = (char *)v79 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0DA430();
  MEMORY[0x1E0C80A78](v24);
  v26 = (char *)v79 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0CC0A4(0, (unint64_t *)&qword_1EDB29D98, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60]);
  v28 = v27;
  v29 = *(_QWORD *)(v27 - 8);
  MEMORY[0x1E0C80A78](v27);
  v31 = (char *)v79 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v32);
  v34 = (char *)v79 - v33;
  sub_1DC406D60();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v26, 1, v28) == 1)
  {
    sub_1DC0926D8((uint64_t)v26, (uint64_t (*)(_QWORD))sub_1DC0DA430);
    sub_1DC2127B8();
    v35 = swift_allocError();
    v37 = v102;
    v36 = v103;
    *v102 = v35;
    v38 = v105;
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(v36 + 104))(v37, *MEMORY[0x1E0DB99F0], v105);
    v104(v37);
    return (*(uint64_t (**)(uint64_t *, uint64_t))(v36 + 8))(v37, v38);
  }
  else
  {
    v84 = v31;
    v85 = v23;
    v86 = v16;
    (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v34, v26, v28);
    v40 = type metadata accessor for StockListMoveStockBlueprintModifier();
    sub_1DC40103C();
    v41 = v106;
    sub_1DC4047BC();
    swift_bridgeObjectRelease();
    v42 = v99;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48))(v41, 1, v99) == 1)
    {
      sub_1DC190FFC(v41);
      sub_1DC2127B8();
      v43 = swift_allocError();
      v45 = v102;
      v44 = v103;
      *v102 = v43;
      v46 = v105;
      (*(void (**)(uint64_t *, _QWORD, uint64_t))(v44 + 104))(v45, *MEMORY[0x1E0DB99F0], v105);
      v104(v45);
      (*(void (**)(uint64_t *, uint64_t))(v44 + 8))(v45, v46);
      return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v34, v28);
    }
    else
    {
      v81 = v21;
      (*(void (**)(char *, uint64_t, uint64_t))(v21 + 32))(v85, v41, v42);
      v80 = v29;
      (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v84, v34, v28);
      v79[1] = v40;
      v83 = v28;
      sub_1DC40472C();
      (*(void (**)(char *, uint64_t, uint64_t))(v98 + 16))(v97, a1, v86);
      v82 = v34;
      sub_1DC406CB8();
      v47 = sub_1DC3AF5D8();
      v48 = *(_QWORD *)(v47 + 16);
      if (v48)
      {
        v110 = MEMORY[0x1E0DEE9D8];
        sub_1DC0F0894(0, v48, 0);
        v49 = (*(unsigned __int8 *)(v109 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v109 + 80);
        v79[0] = v47;
        v50 = v47 + v49;
        v106 = *(_QWORD *)(v109 + 72);
        v51 = *(void (**)(char *, unint64_t, void (*)(_QWORD, _QWORD)))(v109 + 16);
        do
        {
          v52 = v107;
          v53 = v108;
          v51(v107, v50, v108);
          v54 = sub_1DC4010B4();
          v56 = v55;
          (*(void (**)(char *, _QWORD))(v109 + 8))(v52, v53);
          v57 = v110;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1DC0F0894(0, *(_QWORD *)(v57 + 16) + 1, 1);
            v57 = v110;
          }
          v59 = *(_QWORD *)(v57 + 16);
          v58 = *(_QWORD *)(v57 + 24);
          if (v59 >= v58 >> 1)
          {
            sub_1DC0F0894(v58 > 1, v59 + 1, 1);
            v57 = v110;
          }
          *(_QWORD *)(v57 + 16) = v59 + 1;
          v60 = v57 + 16 * v59;
          *(_QWORD *)(v60 + 32) = v54;
          *(_QWORD *)(v60 + 40) = v56;
          v50 += v106;
          --v48;
        }
        while (v48);
      }
      swift_bridgeObjectRelease();
      v61 = v87;
      v62 = v100;
      v63 = v100[5];
      v109 = v100[6];
      __swift_project_boxed_opaque_existential_1(v100 + 2, v63);
      __swift_project_boxed_opaque_existential_1(v62 + 2, v62[5]);
      sub_1DC400A60();
      sub_1DC400AF0();
      swift_bridgeObjectRelease();
      swift_release();
      (*(void (**)(char *, uint64_t))(v88 + 8))(v61, v89);
      v64 = *MEMORY[0x1E0DBA8E8];
      v65 = v90;
      v66 = v95;
      v67 = v96;
      v109 = *(_QWORD *)(v90 + 104);
      ((void (*)(char *, uint64_t, uint64_t))v109)(v95, v64, v96);
      sub_1DC405B90();
      v108 = *(void (**)(_QWORD, _QWORD))(v65 + 8);
      v108(v66, v67);
      v68 = v91;
      sub_1DC405BCC();
      v70 = v92;
      v69 = v93;
      v71 = v94;
      (*(void (**)(char *, _QWORD, uint64_t))(v93 + 104))(v92, *MEMORY[0x1E0DB8910], v94);
      LOBYTE(v61) = sub_1DC404E28();
      v72 = *(void (**)(char *, uint64_t))(v69 + 8);
      v72(v70, v71);
      v72(v68, v71);
      type metadata accessor for StockListModel(0);
      sub_1DC0D75BC();
      sub_1DC080808(&qword_1EDB2D860, type metadata accessor for StockListModel, (uint64_t)&unk_1DC41C258);
      if ((v61 & 1) != 0)
      {
        v73 = v102;
        v74 = v97;
        sub_1DC405530();
        v104(v73);
        swift_release();
        (*(void (**)(uint64_t *, uint64_t))(v103 + 8))(v73, v105);
        (*(void (**)(char *, uint64_t))(v98 + 8))(v74, v86);
      }
      else
      {
        v75 = v102;
        v76 = v97;
        sub_1DC40553C();
        v104(v75);
        (*(void (**)(uint64_t *, uint64_t))(v103 + 8))(v75, v105);
        ((void (*)(char *, uint64_t, uint64_t))v109)(v66, v64, v67);
        sub_1DC405C74();
        swift_release();
        v108(v66, v67);
        (*(void (**)(char *, uint64_t))(v98 + 8))(v76, v86);
      }
      v77 = *(void (**)(char *, uint64_t))(v80 + 8);
      v78 = v83;
      v77(v84, v83);
      (*(void (**)(char *, uint64_t))(v81 + 8))(v85, v99);
      return ((uint64_t (*)(char *, uint64_t))v77)(v82, v78);
    }
  }
}

uint64_t sub_1DC2126AC()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1DC089DA4(0, (unint64_t *)&qword_1EDB3FF48, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB9558], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v0 = sub_1DC405338();
  v1 = *(_QWORD *)(v0 - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1DC40DC10;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v1 + 104))(v3 + v2, *MEMORY[0x1E0DB9540], v0);
  v4 = sub_1DC368618(v3);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  return v4;
}

uint64_t sub_1DC21278C()
{
  return sub_1DC080808(&qword_1F034EF78, (uint64_t (*)(uint64_t))type metadata accessor for StockListMoveStockBlueprintModifier, (uint64_t)&unk_1DC4192B8);
}

unint64_t sub_1DC2127B8()
{
  unint64_t result;

  result = qword_1F034EF80;
  if (!qword_1F034EF80)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC4193A8, &type metadata for StockListMoveStockBlueprintModifier.Errors);
    atomic_store(result, (unint64_t *)&qword_1F034EF80);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for StockListMoveStockBlueprintModifier.Errors(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1DC21283C + 4 * byte_1DC419250[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1DC21285C + 4 * byte_1DC419255[v4]))();
}

_BYTE *sub_1DC21283C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1DC21285C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC212864(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC21286C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC212874(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC21287C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for StockListMoveStockBlueprintModifier.Errors()
{
  return &type metadata for StockListMoveStockBlueprintModifier.Errors;
}

unint64_t sub_1DC21289C()
{
  unint64_t result;

  result = qword_1F034EF88;
  if (!qword_1F034EF88)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC419380, &type metadata for StockListMoveStockBlueprintModifier.Errors);
    atomic_store(result, (unint64_t *)&qword_1F034EF88);
  }
  return result;
}

uint64_t CopyLinkCommandHandler.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t CopyLink2CommandHandler.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t CopyLink2CommandHandler.init()()
{
  uint64_t v0;

  return v0;
}

uint64_t CopyLink2CommandHandler.handle(commandCenter:command:with:source:)()
{
  return sub_1DC212A74();
}

BOOL CopyLink2CommandHandler.canHandle(commandCenter:command:with:source:)()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  _BOOL8 v4;
  uint64_t v6;

  sub_1DC133BB0(0);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC404C60();
  v3 = sub_1DC3FFDD0();
  v4 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 48))(v2, 1, v3) != 1;
  sub_1DC212C0C((uint64_t)v2);
  return v4;
}

uint64_t CopyLink2CommandHandler.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1DC2129A8()
{
  return sub_1DC212A74();
}

BOOL sub_1DC2129B0()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  _BOOL8 v4;
  uint64_t v6;

  sub_1DC133BB0(0);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC404C60();
  v3 = sub_1DC3FFDD0();
  v4 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 48))(v2, 1, v3) != 1;
  sub_1DC212C0C((uint64_t)v2);
  return v4;
}

uint64_t CopyLinkCommandHandler.init()()
{
  uint64_t v0;

  return v0;
}

uint64_t CopyLinkCommandHandler.handle(commandCenter:command:with:source:)()
{
  return sub_1DC212C48();
}

uint64_t CopyLinkCommandHandler.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t CopyLinkCommandHandler.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1DC212A6C()
{
  return sub_1DC212C48();
}

uint64_t sub_1DC212A74()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  uint64_t v13;

  sub_1DC133BB0(0);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v13 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1DC3FFDD0();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC404C60();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
    return sub_1DC212C0C((uint64_t)v2);
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v2, v3);
  v8 = (void *)objc_opt_self();
  v9 = objc_msgSend(v8, sel_generalPasteboard);
  v10 = (void *)sub_1DC3FFD88();
  objc_msgSend(v9, sel_setURL_, v10);

  v11 = objc_msgSend(v8, sel_generalPasteboard);
  sub_1DC3FFD7C();
  v12 = (void *)sub_1DC408A1C();
  swift_bridgeObjectRelease();
  objc_msgSend(v11, sel_setString_, v12);

  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1DC212C0C(uint64_t a1)
{
  uint64_t v2;

  sub_1DC133BB0(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DC212C48()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  uint64_t v13;

  sub_1DC133BB0(0);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v13 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1DC3FFDD0();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC3FFDC4();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
    return sub_1DC212C0C((uint64_t)v2);
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v2, v3);
  v8 = (void *)objc_opt_self();
  v9 = objc_msgSend(v8, sel_generalPasteboard);
  v10 = (void *)sub_1DC3FFD88();
  objc_msgSend(v9, sel_setURL_, v10);

  v11 = objc_msgSend(v8, sel_generalPasteboard);
  sub_1DC3FFD7C();
  v12 = (void *)sub_1DC408A1C();
  swift_bridgeObjectRelease();
  objc_msgSend(v11, sel_setString_, v12);

  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t method lookup function for CopyLink2CommandHandler()
{
  return swift_lookUpClassMethod();
}

uint64_t method lookup function for CopyLinkCommandHandler()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CopyLinkCommandHandler.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t sub_1DC212EC8()
{
  return type metadata accessor for ForYouFeedMastheadViewProvider();
}

uint64_t type metadata accessor for ForYouFeedMastheadViewProvider()
{
  uint64_t result;

  result = qword_1EDB40E08;
  if (!qword_1EDB40E08)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1DC212F0C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1DC4051E8();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

id sub_1DC212FA4()
{
  _QWORD *v0;

  return *(id *)(*v0 + OBJC_IVAR____TtC8StocksUI30ForYouFeedMastheadViewProvider_mastheadView);
}

id sub_1DC212FB8()
{
  return sub_1DC212FD8();
}

id sub_1DC212FD8()
{
  uint64_t v0;
  _QWORD *v1;
  void *v2;
  double v3;
  double v4;
  double v5;
  double v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  void *v12;
  id v13;

  v1 = __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + OBJC_IVAR____TtC8StocksUI30ForYouFeedMastheadViewProvider_renderer), *(_QWORD *)(v0 + OBJC_IVAR____TtC8StocksUI30ForYouFeedMastheadViewProvider_renderer + 24));
  v2 = *(void **)(v0 + OBJC_IVAR____TtC8StocksUI30ForYouFeedMastheadViewProvider_mastheadView);
  swift_bridgeObjectRetain();
  objc_msgSend(v2, sel_bounds);
  v4 = v3;
  v6 = v5;
  v7 = __swift_project_boxed_opaque_existential_1((_QWORD *)(*v1 + 16), *(_QWORD *)(*v1 + 40));
  v9 = *(_QWORD *)(*v7 + 40);
  v8 = *(_QWORD *)(*v7 + 48);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(*v7 + 16), v9);
  v10 = (void *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)(v8 + 16) + 48))(v9);
  v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D62978]), sel_initWithTextColor_, v10);

  v12 = (void *)sub_1DC408A1C();
  v13 = objc_msgSend(v11, sel_styleTitleText_styleType_boundingSize_, v12, 0, v4, v6);
  swift_bridgeObjectRelease();

  return v13;
}

void sub_1DC213104()
{
  sub_1DC213124();
}

void sub_1DC213124()
{
  uint64_t v0;
  uint64_t v1;
  CGFloat Width;
  uint64_t v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  void *v15;
  void *v16;
  uint64_t v17;
  void *v18;
  double v19[22];
  double v20[8];
  CGRect v21;

  v1 = v0;
  sub_1DC405A64();
  Width = CGRectGetWidth(v21);
  v3 = OBJC_IVAR____TtC8StocksUI30ForYouFeedMastheadViewProvider_model;
  swift_retain();
  sub_1DC4073B4();
  sub_1DC405A58();
  v5 = v4;
  swift_release();
  v6 = v19[0] + v5;
  sub_1DC405A40();
  sub_1DC405A64();
  sub_1DC4051DC();
  v8 = v7;
  v10 = v9;
  v12 = v11;
  v14 = v13;
  v15 = (void *)sub_1DC405A4C();
  v16 = (void *)sub_1DC405A34();
  v20[0] = Width;
  v20[1] = v6;
  v20[2] = v8;
  v20[3] = v10;
  v20[4] = v12;
  v20[5] = v14;
  *(_QWORD *)&v20[6] = v15;
  *(_QWORD *)&v20[7] = v16;
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + OBJC_IVAR____TtC8StocksUI30ForYouFeedMastheadViewProvider_layoutAttributesFactory), *(_QWORD *)(v1 + OBJC_IVAR____TtC8StocksUI30ForYouFeedMastheadViewProvider_layoutAttributesFactory + 24));
  swift_retain();
  sub_1DC31660C(v20, (uint64_t)v19);
  swift_release();
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + OBJC_IVAR____TtC8StocksUI30ForYouFeedMastheadViewProvider_renderer), *(_QWORD *)(v1 + OBJC_IVAR____TtC8StocksUI30ForYouFeedMastheadViewProvider_renderer + 24));
  v17 = *(_QWORD *)(v0 + v3);
  swift_retain();
  v18 = (void *)sub_1DC405A4C();
  sub_1DC1359B0(v17, v19, v18, *(char **)(v0 + OBJC_IVAR____TtC8StocksUI30ForYouFeedMastheadViewProvider_mastheadView));

  swift_release();
}

double sub_1DC213308()
{
  _QWORD *v0;
  double v1;

  __swift_project_boxed_opaque_existential_1((_QWORD *)(*v0 + OBJC_IVAR____TtC8StocksUI30ForYouFeedMastheadViewProvider_layoutAttributesFactory), *(_QWORD *)(*v0 + OBJC_IVAR____TtC8StocksUI30ForYouFeedMastheadViewProvider_layoutAttributesFactory + 24));
  type metadata accessor for ForYouFeedMastheadViewLayoutAttributesFactory();
  swift_retain();
  v1 = sub_1DC317474();
  swift_release();
  return v1;
}

uint64_t sub_1DC2133A8()
{
  return sub_1DC2133C8();
}

uint64_t sub_1DC2133C8()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t result;
  char v4;

  swift_retain();
  if ((sub_1DC397AB0() & 1) == 0)
    return swift_release();
  if (qword_1EDB42978 != -1)
    swift_once();
  type metadata accessor for ForYouMastheadModel();
  sub_1DC080808(&qword_1F034BA40, (uint64_t (*)(uint64_t))type metadata accessor for ForYouMastheadModel, (uint64_t)&unk_1DC42D554);
  sub_1DC4012D0();
  if ((v4 & 1) == 0)
    return swift_release();
  v1 = OBJC_IVAR____TtC8StocksUI30ForYouFeedMastheadViewProvider_animationManager;
  v2 = objc_retain(*(id *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC8StocksUI30ForYouFeedMastheadViewProvider_mastheadView)
                         + qword_1F0350C00));
  sub_1DC403C04();

  result = swift_release();
  *(_BYTE *)(*(_QWORD *)(v0 + v1) + 16) = 0;
  return result;
}

uint64_t sub_1DC213514(uint64_t a1)
{
  uint64_t result;

  result = sub_1DC080808(&qword_1EDB40DF8, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedMastheadViewProvider, (uint64_t)&unk_1DC419528);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1DC213550(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t result;
  _QWORD *v9;
  uint64_t i;
  uint64_t v11;
  BOOL v12;

  v3 = a3[2];
  if (!v3)
    return 0;
  if (a3[4] == a1 && a3[5] == a2)
    return 1;
  result = sub_1DC4099E8();
  if ((result & 1) != 0)
    return 1;
  if (v3 == 1)
    return 0;
  v9 = a3 + 7;
  for (i = 1; ; ++i)
  {
    v11 = i + 1;
    if (__OFADD__(i, 1))
      break;
    v12 = *(v9 - 1) == a1 && *v9 == a2;
    if (v12 || (sub_1DC4099E8() & 1) != 0)
      return 1;
    result = 0;
    v9 += 2;
    if (v11 == v3)
      return result;
  }
  __break(1u);
  return result;
}

uint64_t sub_1DC213614()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1DC21364C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 *a5, uint64_t a6)
{
  __int16 v6;
  int v7;
  uint64_t v8;
  __int16 v9;

  v6 = *a5;
  v7 = a5[1];
  v8 = *((_QWORD *)a5 + 1);
  if (v7)
    v9 = 256;
  else
    v9 = 0;
  return sub_1DC2136C8(a1, a2, a4, v9 | v6, v8, a6);
}

uint64_t sub_1DC21368C@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = sub_1DC213BE0(a1);
  *(_BYTE *)a2 = result & 1;
  *(_BYTE *)(a2 + 1) = BYTE1(result) & 1;
  *(_QWORD *)(a2 + 8) = v4;
  return result;
}

uint64_t sub_1DC2136C8(uint64_t a1, uint64_t a2, uint64_t a3, __int16 a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  char v28;
  void *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD v39[3];
  void *v40;
  uint64_t v41;
  uint64_t v42;
  _OWORD v43[2];
  uint64_t v44;
  _OWORD v45[2];
  uint64_t v46;

  v7 = v6;
  v41 = a3;
  v42 = a6;
  v40 = 0;
  sub_1DC092F50(0, (unint64_t *)&unk_1EDB29810, (void (*)(uint64_t))MEMORY[0x1E0DAD3C8]);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v39 - v11;
  v13 = type metadata accessor for StocksActivity(0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC092F50(0, &qword_1F034C568, (void (*)(uint64_t))type metadata accessor for WatchlistMembershipCommandContext);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)v39 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)v39 - v20;
  if ((a4 & 0x100) != 0)
  {
    if ((a4 & 1) != 0)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v28 = sub_1DC4099E8();
      swift_bridgeObjectRelease();
      if ((v28 & 1) == 0)
      {
        v29 = v40;
LABEL_16:
        sub_1DC17CCB0();
        v35 = *(int *)(v34 + 48);
        v36 = sub_1DC4010E4();
        v37 = *(_QWORD *)(v36 - 8);
        (*(void (**)(char *, uint64_t, uint64_t))(v37 + 16))(v15, v41, v36);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v15, 0, 1, v36);
        *(_QWORD *)&v15[v35] = v42;
        swift_storeEnumTagMultiPayload();
        v38 = sub_1DC403340();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v12, 1, 1, v38);
        v46 = 0;
        memset(v45, 0, sizeof(v45));
        v44 = 0;
        memset(v43, 0, sizeof(v43));
        swift_retain();
        swift_retain();
        sub_1DC22BAE0((uint64_t)v15, 0, (uint64_t)v12, (uint64_t)v45, 0, 0, (uint64_t)v43);
        if (v29)

        else
          swift_release();
        sub_1DC17C7C8((uint64_t)v43, &qword_1EDB29410, (unint64_t *)&unk_1EDB29400);
        sub_1DC17C7C8((uint64_t)v45, &qword_1EDB2ACD0, (unint64_t *)&qword_1EDB2ACC0);
        sub_1DC092F14((uint64_t)v12, (unint64_t *)&unk_1EDB29810, (void (*)(uint64_t))MEMORY[0x1E0DAD3C8]);
        sub_1DC1B3F14((uint64_t)v15);
        return swift_release();
      }
    }
    v39[2] = a2;
    v39[1] = swift_getObjectType();
    if (qword_1EDB2AA40 != -1)
      swift_once();
    v39[0] = qword_1EDB5DF68;
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v7 + 16), *(_QWORD *)(v7 + 40));
    sub_1DC400A60();
    v30 = type metadata accessor for WatchlistMembershipCommandContext(0);
    v31 = &v21[*(int *)(v30 + 20)];
    v32 = sub_1DC4010E4();
    v33 = *(_QWORD *)(v32 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v33 + 16))(v31, v41, v32);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v31, 0, 1, v32);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v21, 0, 1, v30);
    v29 = v40;
    sub_1DC404A80();
    if (v29)
    {

      v29 = 0;
    }
    sub_1DC092F14((uint64_t)v21, &qword_1F034C568, (void (*)(uint64_t))type metadata accessor for WatchlistMembershipCommandContext);
    goto LABEL_16;
  }
  swift_getObjectType();
  if (qword_1EDB2AA40 != -1)
    swift_once();
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v7 + 16), *(_QWORD *)(v7 + 40));
  sub_1DC400A60();
  v22 = type metadata accessor for WatchlistMembershipCommandContext(0);
  v23 = &v18[*(int *)(v22 + 20)];
  v24 = sub_1DC4010E4();
  v25 = *(_QWORD *)(v24 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 16))(v23, v41, v24);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v23, 0, 1, v24);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v18, 0, 1, v22);
  v26 = v40;
  sub_1DC404A80();
  if (v26)

  return sub_1DC092F14((uint64_t)v18, &qword_1F034C568, (void (*)(uint64_t))type metadata accessor for WatchlistMembershipCommandContext);
}

uint64_t sub_1DC213BE0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char *v27;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  BOOL v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  int v40;
  int v41;
  uint64_t v42;
  int v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v2 = v1;
  v51 = a1;
  v3 = sub_1DC40124C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v47 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (_QWORD *)(v1 + 16);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 40));
  v7 = sub_1DC400ACC();
  v8 = *(_QWORD *)(v7 + 16);
  v45 = v1;
  v46 = v3;
  v50 = v4;
  v44 = (_QWORD *)(v1 + 16);
  if (v8)
  {
    v9 = 0;
    v10 = v7 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v48 = *(_QWORD *)(v4 + 72);
    v49 = v10;
    while (1)
    {
      v11 = (_QWORD *)sub_1DC401228();
      v12 = sub_1DC4010B4();
      v14 = v13;
      v15 = v11[2];
      if (!v15)
      {
LABEL_10:
        swift_bridgeObjectRelease();
        goto LABEL_11;
      }
      v16 = v12;
      if (v11[4] == v12 && v11[5] == v13)
        break;
      result = sub_1DC4099E8();
      if ((result & 1) != 0)
        break;
      if (v15 == 1)
        goto LABEL_10;
      v19 = v8;
      v20 = v11 + 7;
      v21 = 1;
      do
      {
        v22 = v21 + 1;
        if (__OFADD__(v21, 1))
        {
LABEL_65:
          __break(1u);
LABEL_66:
          __break(1u);
          return result;
        }
        if (*(v20 - 1) == v16 && *v20 == v14)
          goto LABEL_22;
        result = sub_1DC4099E8();
        if ((result & 1) != 0)
          goto LABEL_22;
        v20 += 2;
        ++v21;
      }
      while (v22 != v15);
      swift_bridgeObjectRelease();
      v8 = v19;
LABEL_11:
      ++v9;
      swift_bridgeObjectRelease();
      if (v9 == v8)
      {
        swift_bridgeObjectRelease();
        v43 = 0;
        goto LABEL_23;
      }
    }
LABEL_22:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v43 = 1;
LABEL_23:
    v6 = v44;
    v2 = v45;
    v3 = v46;
    v4 = v50;
  }
  else
  {
    swift_bridgeObjectRelease();
    v43 = 0;
  }
  __swift_project_boxed_opaque_existential_1(v6, *(_QWORD *)(v2 + 40));
  result = sub_1DC400ACC();
  v24 = result;
  v49 = *(_QWORD *)(result + 16);
  if (v49)
  {
    v25 = 0;
    v26 = 0;
    v48 = result + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v27 = v47;
    while (1)
    {
      if (v26 >= *(_QWORD *)(v24 + 16))
      {
        __break(1u);
LABEL_64:
        __break(1u);
        goto LABEL_65;
      }
      (*(void (**)(char *, unint64_t, uint64_t))(v4 + 16))(v27, v48 + *(_QWORD *)(v4 + 72) * v26, v3);
      v29 = (_QWORD *)sub_1DC401228();
      v30 = sub_1DC4010B4();
      v32 = v31;
      v33 = v29[2];
      if (v33)
      {
        v34 = v30;
        v35 = v29[4] == v30 && v29[5] == v31;
        if (v35 || (sub_1DC4099E8() & 1) != 0)
        {
LABEL_27:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v4 = v50;
          v3 = v46;
          v27 = v47;
          result = (*(uint64_t (**)(char *, uint64_t))(v50 + 8))(v47, v46);
          if (__OFADD__(v25++, 1))
            goto LABEL_64;
          goto LABEL_28;
        }
        if (v33 != 1)
        {
          if (v29[6] == v34 && v29[7] == v32)
            goto LABEL_27;
          result = sub_1DC4099E8();
          if ((result & 1) != 0)
            goto LABEL_27;
          if (v33 != 2)
          {
            v36 = v29 + 9;
            v37 = 2;
            do
            {
              v38 = v37 + 1;
              if (__OFADD__(v37, 1))
                goto LABEL_66;
              if (*(v36 - 1) == v34 && *v36 == v32)
                goto LABEL_27;
              result = sub_1DC4099E8();
              if ((result & 1) != 0)
                goto LABEL_27;
              v36 += 2;
              ++v37;
            }
            while (v38 != v33);
          }
        }
        swift_bridgeObjectRelease();
        v3 = v46;
        v27 = v47;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      v4 = v50;
      swift_bridgeObjectRelease();
      result = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v27, v3);
LABEL_28:
      if (++v26 == v49)
      {
        swift_bridgeObjectRelease();
        if ((v43 & 1) != 0)
        {
          v40 = 0;
          v6 = v44;
          v2 = v45;
          goto LABEL_59;
        }
        v6 = v44;
        v2 = v45;
LABEL_58:
        v40 = 1;
        goto LABEL_59;
      }
    }
  }
  swift_bridgeObjectRelease();
  if ((v43 & 1) == 0)
    goto LABEL_58;
  v40 = 0;
LABEL_59:
  __swift_project_boxed_opaque_existential_1(v6, *(_QWORD *)(v2 + 40));
  if ((sub_1DC400B14() & 1) != 0)
    v41 = 256;
  else
    v41 = 0;
  return v41 | v40;
}

uint64_t sub_1DC214018@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v16[40];
  uint64_t v17;

  v17 = a2;
  sub_1DC145CD4();
  v14 = *(_QWORD *)(v4 - 8);
  v15 = v4;
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC214AA8();
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC214B00();
  sub_1DC409B08();
  if (!v2)
  {
    sub_1DC214B44();
    sub_1DC409910();
    sub_1DC0824D4((uint64_t)a1, (uint64_t)v16);
    type metadata accessor for NewsStockFeedGroupConfigData();
    sub_1DC080808(&qword_1EDB38570, (uint64_t (*)(uint64_t))type metadata accessor for NewsStockFeedGroupConfigData, (uint64_t)&unk_1DC40DE08);
    sub_1DC080808(&qword_1EDB38568, (uint64_t (*)(uint64_t))type metadata accessor for NewsStockFeedGroupConfigData, (uint64_t)&unk_1DC40DDE0);
    sub_1DC407450();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    (*(void (**)(uint64_t, char *, uint64_t))(v14 + 32))(v17, v6, v15);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1DC214204()
{
  return sub_1DC214328();
}

uint64_t sub_1DC214214()
{
  return sub_1DC408AF4();
}

uint64_t sub_1DC214224()
{
  return sub_1DC2143B4();
}

uint64_t sub_1DC214234@<X0>(BOOL *a1@<X8>)
{
  return sub_1DC214408(a1);
}

void sub_1DC214240(_QWORD *a1@<X8>)
{
  *a1 = 1701869940;
  a1[1] = 0xE400000000000000;
}

uint64_t sub_1DC214254()
{
  return 1701869940;
}

uint64_t sub_1DC214264@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1DC4098A4();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_1DC2142B8()
{
  sub_1DC214B00();
  return sub_1DC409B20();
}

uint64_t sub_1DC2142E0()
{
  sub_1DC214B00();
  return sub_1DC409B2C();
}

uint64_t sub_1DC214308()
{
  return sub_1DC214328();
}

uint64_t sub_1DC214328()
{
  sub_1DC409AC0();
  sub_1DC408AF4();
  return sub_1DC409AF0();
}

uint64_t sub_1DC214374()
{
  return sub_1DC408AF4();
}

uint64_t sub_1DC214394()
{
  return sub_1DC2143B4();
}

uint64_t sub_1DC2143B4()
{
  sub_1DC409AC0();
  sub_1DC408AF4();
  return sub_1DC409AF0();
}

uint64_t sub_1DC2143FC@<X0>(BOOL *a1@<X8>)
{
  return sub_1DC214408(a1);
}

uint64_t sub_1DC214408@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1DC4098A4();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_1DC214454(_QWORD *a1@<X8>)
{
  *a1 = 0x4C656C6369747261;
  a1[1] = 0xEB00000000747369;
}

uint64_t sub_1DC214478()
{
  sub_1DC214FF4();
  return sub_1DC408CA4();
}

uint64_t sub_1DC2144D4()
{
  sub_1DC214FF4();
  return sub_1DC408C8C();
}

uint64_t sub_1DC214520@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DC214018(a1, a2);
}

uint64_t sub_1DC214534()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD v11[2];

  v1 = v0;
  sub_1DC145CD4();
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC214A64(v1, (uint64_t)v9);
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v9, v3);
  sub_1DC407474();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1DC214624()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  sub_1DC145CD4();
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC214A64(v0, (uint64_t)v8);
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
  v9 = sub_1DC40742C();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v9;
}

uint64_t sub_1DC214704(uint64_t a1, uint64_t a2)
{
  return sub_1DC214840(a1, a2, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5A780]);
}

uint64_t sub_1DC214714(uint64_t a1, uint64_t a2)
{
  return sub_1DC21472C(a1, a2, MEMORY[0x1E0D5A720]);
}

uint64_t sub_1DC214720(uint64_t a1, uint64_t a2)
{
  return sub_1DC21472C(a1, a2, MEMORY[0x1E0D5A718]);
}

uint64_t sub_1DC21472C(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v14;

  sub_1DC145CD4();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC214A64(v3, (uint64_t)v12);
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v12, v6);
  a3(v6);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1DC214810(uint64_t a1, uint64_t a2)
{
  return sub_1DC214840(a1, a2, MEMORY[0x1E0D5A750]);
}

uint64_t sub_1DC21481C(uint64_t a1, uint64_t a2)
{
  return sub_1DC214840(a1, a2, MEMORY[0x1E0D5A758]);
}

uint64_t sub_1DC214828(uint64_t a1, uint64_t a2)
{
  return sub_1DC214840(a1, a2, MEMORY[0x1E0D5A740]);
}

uint64_t sub_1DC214834(uint64_t a1, uint64_t a2)
{
  return sub_1DC214840(a1, a2, MEMORY[0x1E0D5A748]);
}

uint64_t sub_1DC214840(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;

  sub_1DC145CD4();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC214A64(v3, (uint64_t)v12);
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v12, v6);
  v13 = a3(v6);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return v13;
}

uint64_t sub_1DC214920()
{
  sub_1DC080808(&qword_1EDB32008, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedGroupConfig, (uint64_t)&unk_1DC419674);
  return sub_1DC40763C();
}

uint64_t sub_1DC214978()
{
  return sub_1DC080808(&qword_1EDB32028, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedGroupConfig, (uint64_t)&unk_1DC41972C);
}

uint64_t type metadata accessor for StockFeedGroupConfig()
{
  uint64_t result;

  result = qword_1EDB32030;
  if (!qword_1EDB32030)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1DC2149E0()
{
  return sub_1DC080808(&qword_1EDB32018, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedGroupConfig, (uint64_t)&unk_1DC419704);
}

uint64_t sub_1DC214A0C()
{
  return sub_1DC080808(&qword_1EDB32020, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedGroupConfig, (uint64_t)&unk_1DC41964C);
}

uint64_t sub_1DC214A38()
{
  return sub_1DC080808(&qword_1EDB32010, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedGroupConfig, (uint64_t)&unk_1DC419754);
}

uint64_t sub_1DC214A64(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for StockFeedGroupConfig();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1DC214AA8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB3FD88)
  {
    sub_1DC214B00();
    v0 = sub_1DC409928();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB3FD88);
  }
}

unint64_t sub_1DC214B00()
{
  unint64_t result;

  result = qword_1EDB31FE0;
  if (!qword_1EDB31FE0)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC419998, &type metadata for StockFeedGroupConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB31FE0);
  }
  return result;
}

unint64_t sub_1DC214B44()
{
  unint64_t result;

  result = qword_1EDB32000;
  if (!qword_1EDB32000)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC419970, &type metadata for StockFeedGroupConfig.CodingType);
    atomic_store(result, (unint64_t *)&qword_1EDB32000);
  }
  return result;
}

ValueMetadata *type metadata accessor for StockFeedGroupConfig.CodingType()
{
  return &type metadata for StockFeedGroupConfig.CodingType;
}

uint64_t _s8StocksUI20StockFeedGroupConfigO10CodingTypeOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1DC214BE0 + 4 * byte_1DC419640[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1DC214C00 + 4 * byte_1DC419645[v4]))();
}

_BYTE *sub_1DC214BE0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1DC214C00(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC214C08(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC214C10(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC214C18(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC214C20(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for StockFeedGroupConfig.CodingKeys()
{
  return &type metadata for StockFeedGroupConfig.CodingKeys;
}

uint64_t *sub_1DC214C3C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1DC145CD4();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  }
  return a1;
}

uint64_t sub_1DC214CAC(uint64_t a1)
{
  uint64_t v2;

  sub_1DC145CD4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t sub_1DC214CE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1DC145CD4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_1DC214D24(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1DC145CD4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_1DC214D68(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1DC145CD4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_1DC214DAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1DC145CD4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_1DC214DF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1DC145CD4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_1DC214E2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  sub_1DC145CD4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, a2, a3, v6);
}

void sub_1DC214E78(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  sub_1DC145CD4();
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(v2 - 8);
    swift_initEnumMetadataSingleCase();
    *(_DWORD *)(*(_QWORD *)(a1 - 8) + 84) = *(_DWORD *)(v4 + 84);
  }
}

unint64_t sub_1DC214ED8()
{
  unint64_t result;

  result = qword_1F034EFA8;
  if (!qword_1F034EFA8)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC419880, &type metadata for StockFeedGroupConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F034EFA8);
  }
  return result;
}

unint64_t sub_1DC214F20()
{
  unint64_t result;

  result = qword_1F034EFB0;
  if (!qword_1F034EFB0)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC419948, &type metadata for StockFeedGroupConfig.CodingType);
    atomic_store(result, (unint64_t *)&qword_1F034EFB0);
  }
  return result;
}

unint64_t sub_1DC214F68()
{
  unint64_t result;

  result = qword_1EDB31FF0;
  if (!qword_1EDB31FF0)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC4197B8, &type metadata for StockFeedGroupConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB31FF0);
  }
  return result;
}

unint64_t sub_1DC214FB0()
{
  unint64_t result;

  result = qword_1EDB31FE8;
  if (!qword_1EDB31FE8)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC4197E0, &type metadata for StockFeedGroupConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB31FE8);
  }
  return result;
}

unint64_t sub_1DC214FF4()
{
  unint64_t result;

  result = qword_1EDB31FF8;
  if (!qword_1EDB31FF8)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC4198D0, &type metadata for StockFeedGroupConfig.CodingType);
    atomic_store(result, (unint64_t *)&qword_1EDB31FF8);
  }
  return result;
}

void sub_1DC215038(void *a1, char a2, uint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  void *v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  id v31;
  os_log_type_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  id v39;
  os_log_type_t v40;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;

  sub_1DC089DA4(0, &qword_1F034EFC8, type metadata accessor for CommandStocksShareContentComplete, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v48 - v10;
  v12 = type metadata accessor for CommandShareContent(0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v48 - v16;
  if (a4)
  {
    v18 = a4;
    sub_1DC408FC8();
    sub_1DC0E7FF0();
    v19 = swift_allocObject();
    *(_OWORD *)(v19 + 16) = xmmword_1DC40C740;
    v20 = sub_1DC307460();
    v22 = v21;
    v23 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v19 + 56) = MEMORY[0x1E0DEA968];
    v24 = sub_1DC0E7FAC();
    *(_QWORD *)(v19 + 64) = v24;
    *(_QWORD *)(v19 + 32) = v20;
    *(_QWORD *)(v19 + 40) = v22;
    v48 = 0;
    v49 = 0xE000000000000000;
    v50 = (uint64_t)a4;
    sub_1DC0A3390(0, (unint64_t *)&qword_1EDB400E0);
    sub_1DC409808();
    v25 = v48;
    v26 = v49;
    *(_QWORD *)(v19 + 96) = v23;
    *(_QWORD *)(v19 + 104) = v24;
    *(_QWORD *)(v19 + 72) = v25;
    *(_QWORD *)(v19 + 80) = v26;
    sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FC00);
    v27 = (void *)sub_1DC409580();
    sub_1DC403F28();
    swift_bridgeObjectRelease();

    return;
  }
  if (!a1)
  {
    v32 = sub_1DC408FC8();
    sub_1DC216164(a5, (uint64_t)v17);
    sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FC00);
    v33 = sub_1DC409580();
    v34 = v32;
    if (os_log_type_enabled(v33, v32))
    {
      v35 = (uint8_t *)swift_slowAlloc();
      v36 = swift_slowAlloc();
      v48 = v36;
      *(_DWORD *)v35 = 136315138;
      v37 = sub_1DC307460();
      v50 = sub_1DC2A9C74(v37, v38, &v48);
      sub_1DC4095B0();
      swift_bridgeObjectRelease();
      sub_1DC2163B8((uint64_t)v17);
      _os_log_impl(&dword_1DC07D000, v33, v34, "Sharing did not return an activity type; skipping completion for %s",
        v35,
        0xCu);
      swift_arrayDestroy();
      MEMORY[0x1DF0CAC88](v36, -1, -1);
      MEMORY[0x1DF0CAC88](v35, -1, -1);

      return;
    }

    v47 = (uint64_t)v17;
LABEL_14:
    sub_1DC2163B8(v47);
    return;
  }
  if ((a2 & 1) == 0)
  {
    v39 = a1;
    v40 = sub_1DC408FC8();
    sub_1DC216164(a5, (uint64_t)v14);
    sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FC00);
    v41 = sub_1DC409580();
    v42 = v40;
    if (os_log_type_enabled(v41, v40))
    {
      v43 = (uint8_t *)swift_slowAlloc();
      v44 = swift_slowAlloc();
      v48 = v44;
      *(_DWORD *)v43 = 136315138;
      v45 = sub_1DC307460();
      v50 = sub_1DC2A9C74(v45, v46, &v48);
      sub_1DC4095B0();
      swift_bridgeObjectRelease();
      sub_1DC2163B8((uint64_t)v14);
      _os_log_impl(&dword_1DC07D000, v41, v42, "Sharing did not complete; skipping completion for %s", v43, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1DF0CAC88](v44, -1, -1);
      MEMORY[0x1DF0CAC88](v43, -1, -1);

      return;
    }

    v47 = (uint64_t)v14;
    goto LABEL_14;
  }
  swift_getObjectType();
  v28 = qword_1EDB2A9D0;
  v29 = a1;
  if (v28 != -1)
    swift_once();
  sub_1DC216164(a5, (uint64_t)v11);
  v30 = type metadata accessor for CommandStocksShareContentComplete(0);
  *(_QWORD *)&v11[*(int *)(v30 + 20)] = v29;
  *(_QWORD *)&v11[*(int *)(v30 + 24)] = 0;
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v11, 0, 1, v30);
  v31 = v29;
  sub_1DC404A80();
  sub_1DC0B091C((uint64_t)v11, &qword_1F034EFC8, type metadata accessor for CommandStocksShareContentComplete);

}

uint64_t sub_1DC2155C0(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  void (*v8)(void *, uint64_t, uint64_t, void *);
  uint64_t v9;
  id v10;
  id v11;

  v8 = *(void (**)(void *, uint64_t, uint64_t, void *))(a1 + 32);
  if (a4)
    v9 = sub_1DC408CD4();
  else
    v9 = 0;
  swift_retain();
  v10 = a2;
  v11 = a5;
  v8(a2, a3, v9, a5);
  swift_release();

  return swift_bridgeObjectRelease();
}

void sub_1DC215664(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_1DC215E84(a1, a2, a4, a5);
}

id sub_1DC215670(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  id v30;
  void *v31;
  id v32;
  id v33;
  void *v34;
  void *v35;
  void *v36;
  id v37;
  id v38;
  _QWORD *v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  void (*v43)(char *, char *, uint64_t);
  char *v44;
  uint64_t v45;
  objc_class *v46;
  char *v47;
  id v48;
  void (*v49)(char *, uint64_t);
  unint64_t v50;
  unint64_t v51;
  id v52;
  id v53;
  void *v54;
  void *v55;
  id v56;
  uint64_t v57;
  void *v58;
  void *v59;
  void *v60;
  void *v61;
  void *v62;
  void *v63;
  void *v64;
  id v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  void *v72;
  uint64_t v73;
  unint64_t v74;
  unint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  uint64_t v78;
  void *v79;
  _QWORD v81[2];
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  __int128 aBlock;
  uint64_t (*v97)(uint64_t, void *, uint64_t, uint64_t, void *);
  void *v98;
  void (*v99)(void *, char, uint64_t, void *);
  uint64_t v100;
  objc_super v101;
  uint64_t v102;

  sub_1DC089DA4(0, &qword_1EDB28DC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF040], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v8);
  v84 = (uint64_t)v81 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v81 - v11;
  v13 = sub_1DC4010E4();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v82 = (char *)v81 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)v81 - v17;
  v19 = type metadata accessor for CommandShareContent(0);
  v85 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v86 = v20;
  v87 = (uint64_t)v81 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)v81 - v22;
  v24 = sub_1DC3FFDD0();
  v88 = *(_QWORD *)(v24 - 8);
  v89 = v24;
  MEMORY[0x1E0C80A78](v24);
  v26 = (char *)v81 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v102 = MEMORY[0x1E0DEE9D8];
  v90 = a3;
  sub_1DC216164(a3, (uint64_t)v23);
  sub_1DC20BAD4();
  v28 = (uint64_t)&v23[*(int *)(v27 + 48)];
  v83 = v14;
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v18, v23, v13);
  v91 = v12;
  sub_1DC2161A8(v28, (uint64_t)v12, &qword_1EDB28DC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF040]);
  v81[0] = sub_1DC4010D8();
  v81[1] = sub_1DC40106C();
  v92 = v26;
  sub_1DC401048();
  sub_1DC31B1EC((uint64_t)v18);
  v93 = a2;
  v94 = a1;
  v95 = a4;
  v29 = (void *)sub_1DC40469C();
  swift_release();
  if (v29)
  {
    v30 = v29;
    MEMORY[0x1DF0C9530]();
    if (*(_QWORD *)((v102 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v102 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1DC408D4C();
    sub_1DC408D64();
    sub_1DC408CF8();

  }
  sub_1DC370430((uint64_t)v18);
  v31 = (void *)sub_1DC40469C();
  swift_release();
  if (v31)
  {
    v32 = v31;
    MEMORY[0x1DF0C9530]();
    if (*(_QWORD *)((v102 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v102 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1DC408D4C();
    sub_1DC408D64();
    sub_1DC408CF8();

  }
  v33 = objc_allocWithZone((Class)SUStockLinkPresentationSource);
  v34 = (void *)sub_1DC408A1C();
  swift_bridgeObjectRelease();
  v35 = (void *)sub_1DC408A1C();
  swift_bridgeObjectRelease();
  v36 = (void *)sub_1DC3FFD88();
  v37 = objc_msgSend(v33, sel_initWithStockSymbol_name_url_, v34, v35, v36);

  v98 = (void *)sub_1DC0821D4(0, &qword_1F034EFB8);
  *(_QWORD *)&aBlock = v37;
  v38 = v37;
  v39 = sub_1DC166B80(0, 1, 1, MEMORY[0x1E0DEE9D8]);
  v41 = v39[2];
  v40 = v39[3];
  if (v41 >= v40 >> 1)
    v39 = sub_1DC166B80((_QWORD *)(v40 > 1), v41 + 1, 1, v39);
  v39[2] = v41 + 1;
  sub_1DC0FA0E4(&aBlock, &v39[4 * v41 + 4]);
  v42 = v83;
  v43 = *(void (**)(char *, char *, uint64_t))(v83 + 16);
  v44 = v82;
  v43(v82, v18, v13);
  v45 = v84;
  sub_1DC0F01B0((uint64_t)v91, v84);
  v46 = (objc_class *)type metadata accessor for StockShareActivityItemSource();
  v47 = (char *)objc_allocWithZone(v46);
  v43(&v47[OBJC_IVAR____TtC8StocksUI28StockShareActivityItemSource_stock], v44, v13);
  sub_1DC0F01B0(v45, (uint64_t)&v47[OBJC_IVAR____TtC8StocksUI28StockShareActivityItemSource_quote]);
  v101.receiver = v47;
  v101.super_class = v46;
  v48 = objc_msgSendSuper2(&v101, sel_init);
  sub_1DC0B091C(v45, &qword_1EDB28DC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF040]);
  v49 = *(void (**)(char *, uint64_t))(v42 + 8);
  v49(v44, v13);
  v98 = v46;
  *(_QWORD *)&aBlock = v48;
  v50 = v39[2];
  v51 = v39[3];
  v52 = v48;
  if (v50 >= v51 >> 1)
    v39 = sub_1DC166B80((_QWORD *)(v51 > 1), v50 + 1, 1, v39);
  v39[2] = v50 + 1;
  sub_1DC0FA0E4(&aBlock, &v39[4 * v50 + 4]);

  sub_1DC0B091C((uint64_t)v91, &qword_1EDB28DC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF040]);
  v49(v18, v13);
  v53 = objc_allocWithZone(MEMORY[0x1E0D96D28]);
  v54 = (void *)sub_1DC408CC8();
  swift_bridgeObjectRelease();
  sub_1DC0821D4(0, &qword_1F034EFC0);
  v55 = (void *)sub_1DC408CC8();
  swift_bridgeObjectRelease();
  v56 = objc_msgSend(v53, sel_initWithActivityItems_applicationActivities_, v54, v55);

  objc_msgSend(v56, sel_setModalPresentationStyle_, 7);
  sub_1DC089DA4(0, &qword_1F034DC28, (uint64_t (*)(uint64_t))type metadata accessor for ActivityType, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v57 = swift_allocObject();
  *(_OWORD *)(v57 + 16) = xmmword_1DC4153C0;
  v58 = (void *)*MEMORY[0x1E0D96D80];
  v59 = (void *)*MEMORY[0x1E0D96E00];
  *(_QWORD *)(v57 + 32) = *MEMORY[0x1E0D96D80];
  *(_QWORD *)(v57 + 40) = v59;
  v60 = (void *)*MEMORY[0x1E0D96D90];
  v61 = (void *)*MEMORY[0x1E0D96E08];
  *(_QWORD *)(v57 + 48) = *MEMORY[0x1E0D96D90];
  *(_QWORD *)(v57 + 56) = v61;
  v62 = (void *)*MEMORY[0x1E0D96DD8];
  v63 = (void *)*MEMORY[0x1E0D96DF0];
  *(_QWORD *)(v57 + 64) = *MEMORY[0x1E0D96DD8];
  *(_QWORD *)(v57 + 72) = v63;
  v64 = (void *)*MEMORY[0x1E0D96DA0];
  *(_QWORD *)(v57 + 80) = *MEMORY[0x1E0D96DA0];
  type metadata accessor for ActivityType(0);
  v65 = v58;
  v66 = v59;
  v67 = v60;
  v68 = v61;
  v69 = v62;
  v70 = v63;
  v71 = v64;
  v72 = (void *)sub_1DC408CC8();
  swift_bridgeObjectRelease();
  objc_msgSend(v56, sel_setExcludedActivityTypes_, v72);

  v73 = v87;
  sub_1DC216164(v90, v87);
  v74 = (*(unsigned __int8 *)(v85 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v85 + 80);
  v75 = (v86 + v74 + 7) & 0xFFFFFFFFFFFFFFF8;
  v76 = swift_allocObject();
  sub_1DC2162EC(v73, v76 + v74);
  v77 = (_QWORD *)(v76 + v75);
  v78 = v93;
  *v77 = v94;
  v77[1] = v78;
  *(_QWORD *)(v76 + ((v75 + 23) & 0xFFFFFFFFFFFFFFF8)) = v95;
  v99 = sub_1DC216330;
  v100 = v76;
  *(_QWORD *)&aBlock = MEMORY[0x1E0C809B0];
  *((_QWORD *)&aBlock + 1) = 1107296256;
  v97 = sub_1DC2155C0;
  v98 = &block_descriptor_18;
  v79 = _Block_copy(&aBlock);
  swift_unknownObjectRetain();
  swift_retain();
  swift_release();
  objc_msgSend(v56, sel_setCompletionWithItemsHandler_, v79);
  _Block_release(v79);
  (*(void (**)(char *, uint64_t))(v88 + 8))(v92, v89);
  return v56;
}

void sub_1DC215E84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  void *v13;
  id v14;
  void *v15;
  id v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  id v31;
  void *v32;
  id v33;
  id v34;
  id v35;
  _BYTE v36[16];
  double v37;
  double v38;
  _BYTE v39[40];
  _QWORD v40[4];
  char v41;
  _BYTE v42[40];

  if (!a4)
    return;
  swift_retain();
  v8 = (void *)sub_1DC405404();
  if (!v8)
  {
    swift_release();
    return;
  }
  v34 = v8;
  v9 = objc_msgSend(v8, sel_nextResponder);
  if (!v9)
  {
LABEL_6:
    swift_release();
    v12 = v34;
LABEL_7:

    return;
  }
  while (1)
  {
    v35 = v9;
    objc_opt_self();
    v10 = (void *)swift_dynamicCastObjCClass();
    if (v10)
      break;
    v11 = objc_msgSend(v35, sel_nextResponder);

    v9 = v11;
    if (!v11)
      goto LABEL_6;
  }
  v13 = v10;
  v14 = objc_msgSend(v10, sel_view);
  if (!v14)
  {
    swift_release();

    v12 = v35;
    goto LABEL_7;
  }
  v15 = v14;
  v16 = sub_1DC215670(a1, a2, a3, a4);
  sub_1DC4053F8();
  v18 = v37;
  v17 = v38;
  sub_1DC2161A8((uint64_t)v36, (uint64_t)v42, qword_1EDB3FAE0, (uint64_t (*)(uint64_t))type metadata accessor for CGRect);
  if ((v42[32] & 1) != 0 || v18 == 0.0 && v17 == 0.0)
  {
    objc_msgSend(v34, sel_bounds);
  }
  else
  {
    sub_1DC4053F8();
    sub_1DC2161A8((uint64_t)v39, (uint64_t)v40, qword_1EDB3FAE0, (uint64_t (*)(uint64_t))type metadata accessor for CGRect);
    if ((v41 & 1) != 0)
    {
      __break(1u);
      return;
    }
    v19 = *(double *)v40;
    v20 = *(double *)&v40[1];
    v21 = *(double *)&v40[2];
    v22 = *(double *)&v40[3];
  }
  objc_msgSend(v15, sel_convertRect_fromCoordinateSpace_, v34, v19, v20, v21, v22);
  v24 = v23;
  v26 = v25;
  v28 = v27;
  v30 = v29;
  v31 = objc_msgSend(v16, sel_popoverPresentationController);
  if (v31)
  {
    v32 = v31;
    objc_msgSend(v31, sel_setSourceView_, v15);

  }
  v33 = objc_msgSend(v16, sel_popoverPresentationController);
  objc_msgSend(v33, sel_setSourceRect_, v24, v26, v28, v30);

  objc_msgSend(v13, sel_presentViewController_animated_completion_, v16, 1, 0);
  swift_release();

}

uint64_t sub_1DC216164(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CommandShareContent(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC2161A8(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v6;

  sub_1DC089DA4(0, a3, a4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_1DC216200()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(type metadata accessor for CommandShareContent(0) - 8);
  v2 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
  v3 = sub_1DC4010E4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  sub_1DC20BAD4();
  v5 = v2 + *(int *)(v4 + 48);
  v6 = sub_1DC401030();
  v7 = *(_QWORD *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6))
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DC2162EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CommandShareContent(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1DC216330(void *a1, char a2, uint64_t a3, void *a4)
{
  uint64_t v4;
  uint64_t v9;

  v9 = type metadata accessor for CommandShareContent(0);
  sub_1DC215038(a1, a2, a3, a4, v4+ ((*(unsigned __int8 *)(*(_QWORD *)(v9 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v9 - 8) + 80)));
}

uint64_t sub_1DC2163B8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for CommandShareContent(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id StockChartCalloutView.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void StockChartCalloutView.init(coder:)()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = OBJC_IVAR____TtC8StocksUI21StockChartCalloutView_dateLabel;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v2 = OBJC_IVAR____TtC8StocksUI21StockChartCalloutView_priceLabel;
  *(_QWORD *)&v0[v2] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);

  sub_1DC409838();
  __break(1u);
}

id StockChartCalloutView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), sel_initWithFrame_, a1, a2, a3, a4);
}

char *StockChartCalloutView.init(frame:)(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  id v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  objc_super v17;

  v9 = OBJC_IVAR____TtC8StocksUI21StockChartCalloutView_dateLabel;
  v10 = objc_allocWithZone(MEMORY[0x1E0DC3990]);
  v11 = v4;
  *(_QWORD *)&v4[v9] = objc_msgSend(v10, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v12 = OBJC_IVAR____TtC8StocksUI21StockChartCalloutView_priceLabel;
  *(_QWORD *)&v11[v12] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);

  v17.receiver = v11;
  v17.super_class = (Class)type metadata accessor for StockChartCalloutView();
  v13 = (char *)objc_msgSendSuper2(&v17, sel_initWithFrame_, a1, a2, a3, a4);
  v14 = *(_QWORD *)&v13[OBJC_IVAR____TtC8StocksUI21StockChartCalloutView_dateLabel];
  v15 = v13;
  objc_msgSend(v15, sel_addSubview_, v14);
  objc_msgSend(v15, sel_addSubview_, *(_QWORD *)&v15[OBJC_IVAR____TtC8StocksUI21StockChartCalloutView_priceLabel]);

  return v15;
}

uint64_t type metadata accessor for StockChartCalloutView()
{
  return objc_opt_self();
}

id StockChartCalloutView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for StockChartCalloutView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

ValueMetadata *type metadata accessor for LegacyTopStoriesForYouFeedGroupKnobs()
{
  return &type metadata for LegacyTopStoriesForYouFeedGroupKnobs;
}

uint64_t sub_1DC216808()
{
  return 0;
}

uint64_t sub_1DC216814@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

uint64_t sub_1DC216840()
{
  sub_1DC2169CC();
  return sub_1DC409B20();
}

uint64_t sub_1DC216868()
{
  sub_1DC2169CC();
  return sub_1DC409B2C();
}

uint64_t sub_1DC216890(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_1(a1);
}

uint64_t sub_1DC2168B4(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1DC216974();
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC2169CC();
  sub_1DC409B14();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

void sub_1DC216974()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F034F008)
  {
    sub_1DC2169CC();
    v0 = sub_1DC409994();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1F034F008);
  }
}

unint64_t sub_1DC2169CC()
{
  unint64_t result;

  result = qword_1F034F010;
  if (!qword_1F034F010)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC419B64, &type metadata for LegacyTopStoriesForYouFeedGroupKnobs.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F034F010);
  }
  return result;
}

ValueMetadata *type metadata accessor for LegacyTopStoriesForYouFeedGroupKnobs.CodingKeys()
{
  return &type metadata for LegacyTopStoriesForYouFeedGroupKnobs.CodingKeys;
}

unint64_t sub_1DC216A24()
{
  unint64_t result;

  result = qword_1F034F018;
  if (!qword_1F034F018)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC419B14, &type metadata for LegacyTopStoriesForYouFeedGroupKnobs.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F034F018);
  }
  return result;
}

unint64_t sub_1DC216A6C()
{
  unint64_t result;

  result = qword_1F034F020;
  if (!qword_1F034F020)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC419B3C, &type metadata for LegacyTopStoriesForYouFeedGroupKnobs.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F034F020);
  }
  return result;
}

_QWORD *sub_1DC216AB0(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  char *v16;
  char *v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  uint64_t v45;
  char *v47;
  char *v48;
  char *v49;
  void (*v50)(char *, char *, uint64_t);
  char *v51;
  uint64_t v52;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v30 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v30 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    v7 = a3[5];
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v8[8] = *((_BYTE *)a2 + v7 + 8);
    *(_QWORD *)v8 = *(_QWORD *)((char *)a2 + v7);
    v8[24] = *((_BYTE *)a2 + v7 + 24);
    *((_QWORD *)v8 + 2) = *(_QWORD *)((char *)a2 + v7 + 16);
    v8[40] = *((_BYTE *)a2 + v7 + 40);
    *((_QWORD *)v8 + 4) = *(_QWORD *)((char *)a2 + v7 + 32);
    v10 = *(_QWORD *)((char *)a2 + v7 + 56);
    *((_QWORD *)v8 + 6) = *(_QWORD *)((char *)a2 + v7 + 48);
    *((_QWORD *)v8 + 7) = v10;
    v11 = *(_QWORD *)((char *)a2 + v7 + 72);
    *((_QWORD *)v8 + 8) = *(_QWORD *)((char *)a2 + v7 + 64);
    *((_QWORD *)v8 + 9) = v11;
    v8[80] = *((_BYTE *)a2 + v7 + 80);
    v12 = type metadata accessor for PriceViewModel();
    v13 = *(int *)(v12 + 40);
    v49 = &v9[v13];
    v51 = &v8[v13];
    v14 = sub_1DC4011C8();
    v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v17 = v49;
    v16 = v51;
    v50 = v15;
    v52 = v14;
    v18 = v14;
    v19 = a2;
    v15(v16, v17, v18);
    v20 = *(int *)(v12 + 44);
    v21 = &v8[v20];
    v22 = &v9[v20];
    v23 = sub_1DC400118();
    v24 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16);
    v24(v21, v22, v23);
    v25 = a3[6];
    v26 = (_QWORD *)((char *)v4 + v25);
    v27 = (_QWORD *)((char *)a2 + v25);
    v28 = *(_QWORD *)(v12 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))((char *)a2 + v25, 1, v12))
    {
      sub_1DC092F50(0, (unint64_t *)&qword_1EDB2D5E8, (void (*)(uint64_t))type metadata accessor for PriceViewModel);
      memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    }
    else
    {
      *v26 = *v27;
      *((_BYTE *)v26 + 8) = *((_BYTE *)v27 + 8);
      v26[2] = v27[2];
      *((_BYTE *)v26 + 24) = *((_BYTE *)v27 + 24);
      v26[4] = v27[4];
      *((_BYTE *)v26 + 40) = *((_BYTE *)v27 + 40);
      v31 = v27[7];
      v26[6] = v27[6];
      v26[7] = v31;
      v32 = v27[9];
      v26[8] = v27[8];
      v26[9] = v32;
      *((_BYTE *)v26 + 80) = *((_BYTE *)v27 + 80);
      v33 = *(int *)(v12 + 40);
      v47 = (char *)v27 + v33;
      v48 = (char *)v26 + v33;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v50(v48, v47, v52);
      v24((char *)v26 + *(int *)(v12 + 44), (char *)v27 + *(int *)(v12 + 44), v23);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v26, 0, 1, v12);
    }
    v34 = a3[7];
    v35 = (char *)v4 + v34;
    v36 = (char *)v19 + v34;
    v37 = sub_1DC4008EC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 16))(v35, v36, v37);
    v38 = a3[8];
    v39 = (char *)v4 + v38;
    v40 = (char *)v19 + v38;
    v41 = sub_1DC4002BC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 16))(v39, v40, v41);
    v42 = a3[9];
    v43 = (_QWORD *)((char *)v4 + v42);
    v44 = (_QWORD *)((char *)v19 + v42);
    v45 = v44[1];
    *v43 = *v44;
    v43[1] = v45;
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1DC216D7C(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  swift_bridgeObjectRelease();
  v4 = a1 + a2[5];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5 = type metadata accessor for PriceViewModel();
  v6 = v4 + *(int *)(v5 + 40);
  v7 = sub_1DC4011C8();
  v8 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8);
  v8(v6, v7);
  v9 = v4 + *(int *)(v5 + 44);
  v10 = sub_1DC400118();
  v11 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8);
  v11(v9, v10);
  v12 = a1 + a2[6];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v12, 1, v5))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v8(v12 + *(int *)(v5 + 40), v7);
    v11(v12 + *(int *)(v5 + 44), v10);
  }
  v13 = a1 + a2[7];
  v14 = sub_1DC4008EC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  v15 = a1 + a2[8];
  v16 = sub_1DC4002BC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
  return swift_bridgeObjectRelease();
}

_QWORD *sub_1DC216ED8(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  char *v15;
  char *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;
  char *v46;
  char *v47;
  char *v48;
  void (*v49)(char *, char *, uint64_t);
  char *v50;
  uint64_t v51;

  v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v7[8] = *((_BYTE *)a2 + v6 + 8);
  *(_QWORD *)v7 = *(_QWORD *)((char *)a2 + v6);
  v7[24] = *((_BYTE *)a2 + v6 + 24);
  *((_QWORD *)v7 + 2) = *(_QWORD *)((char *)a2 + v6 + 16);
  v7[40] = *((_BYTE *)a2 + v6 + 40);
  *((_QWORD *)v7 + 4) = *(_QWORD *)((char *)a2 + v6 + 32);
  v9 = *(_QWORD *)((char *)a2 + v6 + 56);
  *((_QWORD *)v7 + 6) = *(_QWORD *)((char *)a2 + v6 + 48);
  *((_QWORD *)v7 + 7) = v9;
  v10 = *(_QWORD *)((char *)a2 + v6 + 72);
  *((_QWORD *)v7 + 8) = *(_QWORD *)((char *)a2 + v6 + 64);
  *((_QWORD *)v7 + 9) = v10;
  v7[80] = *((_BYTE *)a2 + v6 + 80);
  v11 = type metadata accessor for PriceViewModel();
  v12 = *(int *)(v11 + 40);
  v48 = &v8[v12];
  v50 = &v7[v12];
  v13 = sub_1DC4011C8();
  v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v16 = v48;
  v15 = v50;
  v49 = v14;
  v51 = v13;
  v17 = v13;
  v18 = a1;
  v19 = v11;
  v14(v15, v16, v17);
  v20 = *(int *)(v11 + 44);
  v21 = &v7[v20];
  v22 = &v8[v20];
  v23 = sub_1DC400118();
  v24 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16);
  v24(v21, v22, v23);
  v25 = a3[6];
  v26 = (_QWORD *)((char *)v18 + v25);
  v27 = (_QWORD *)((char *)a2 + v25);
  v28 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))((char *)a2 + v25, 1, v11))
  {
    sub_1DC092F50(0, (unint64_t *)&qword_1EDB2D5E8, (void (*)(uint64_t))type metadata accessor for PriceViewModel);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
  }
  else
  {
    *v26 = *v27;
    *((_BYTE *)v26 + 8) = *((_BYTE *)v27 + 8);
    v26[2] = v27[2];
    *((_BYTE *)v26 + 24) = *((_BYTE *)v27 + 24);
    v26[4] = v27[4];
    *((_BYTE *)v26 + 40) = *((_BYTE *)v27 + 40);
    v30 = v27[7];
    v26[6] = v27[6];
    v26[7] = v30;
    v31 = v27[9];
    v26[8] = v27[8];
    v26[9] = v31;
    *((_BYTE *)v26 + 80) = *((_BYTE *)v27 + 80);
    v32 = *(int *)(v19 + 40);
    v46 = (char *)v27 + v32;
    v47 = (char *)v26 + v32;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v49(v47, v46, v51);
    v24((char *)v26 + *(int *)(v19 + 44), (char *)v27 + *(int *)(v19 + 44), v23);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v26, 0, 1, v19);
  }
  v33 = a3[7];
  v34 = (char *)v18 + v33;
  v35 = (char *)a2 + v33;
  v36 = sub_1DC4008EC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 16))(v34, v35, v36);
  v37 = a3[8];
  v38 = (char *)v18 + v37;
  v39 = (char *)a2 + v37;
  v40 = sub_1DC4002BC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 16))(v38, v39, v40);
  v41 = a3[9];
  v42 = (_QWORD *)((char *)v18 + v41);
  v43 = (_QWORD *)((char *)a2 + v41);
  v44 = v43[1];
  *v42 = *v43;
  v42[1] = v44;
  swift_bridgeObjectRetain();
  return v18;
}

char *sub_1DC21717C(char *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, char *);
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  void (*v22)(char *, char *);
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t (*v27)(char *, uint64_t, uint64_t);
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  void (*v36)(char *, char *, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  _QWORD *v50;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int *v56;

  *(_QWORD *)a1 = *a2;
  *((_QWORD *)a1 + 1) = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = (char *)a2 + v6;
  v9 = *(_QWORD *)((char *)a2 + v6);
  v7[8] = v8[8];
  *(_QWORD *)v7 = v9;
  v10 = *((_QWORD *)v8 + 2);
  v7[24] = v8[24];
  *((_QWORD *)v7 + 2) = v10;
  v11 = *((_QWORD *)v8 + 4);
  v7[40] = v8[40];
  *((_QWORD *)v7 + 4) = v11;
  *((_QWORD *)v7 + 6) = *((_QWORD *)v8 + 6);
  *((_QWORD *)v7 + 7) = *((_QWORD *)v8 + 7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)v7 + 8) = *((_QWORD *)v8 + 8);
  *((_QWORD *)v7 + 9) = *((_QWORD *)v8 + 9);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7[80] = v8[80];
  v12 = type metadata accessor for PriceViewModel();
  v13 = *(int *)(v12 + 40);
  v14 = &v7[v13];
  v15 = &v8[v13];
  v16 = sub_1DC4011C8();
  v52 = *(_QWORD *)(v16 - 8);
  v17 = *(void (**)(char *, char *))(v52 + 24);
  v54 = v16;
  v17(v14, v15);
  v18 = *(int *)(v12 + 44);
  v19 = &v7[v18];
  v20 = &v8[v18];
  v21 = sub_1DC400118();
  v53 = *(_QWORD *)(v21 - 8);
  v22 = *(void (**)(char *, char *))(v53 + 24);
  v55 = v21;
  v22(v19, v20);
  v56 = a3;
  v23 = a3[6];
  v24 = &a1[v23];
  v25 = (char *)a2 + v23;
  v26 = *(_QWORD *)(v12 - 8);
  v27 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v26 + 48);
  LODWORD(v8) = v27(&a1[v23], 1, v12);
  v28 = v27(v25, 1, v12);
  if ((_DWORD)v8)
  {
    if (!v28)
    {
      v30 = *(_QWORD *)v25;
      v24[8] = v25[8];
      *(_QWORD *)v24 = v30;
      v31 = *((_QWORD *)v25 + 2);
      v24[24] = v25[24];
      *((_QWORD *)v24 + 2) = v31;
      v32 = *((_QWORD *)v25 + 4);
      v24[40] = v25[40];
      *((_QWORD *)v24 + 4) = v32;
      *((_QWORD *)v24 + 6) = *((_QWORD *)v25 + 6);
      *((_QWORD *)v24 + 7) = *((_QWORD *)v25 + 7);
      *((_QWORD *)v24 + 8) = *((_QWORD *)v25 + 8);
      *((_QWORD *)v24 + 9) = *((_QWORD *)v25 + 9);
      v24[80] = v25[80];
      v33 = *(int *)(v12 + 40);
      v34 = &v24[v33];
      v35 = &v25[v33];
      v36 = *(void (**)(char *, char *, uint64_t))(v52 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v36(v34, v35, v54);
      (*(void (**)(char *, char *, uint64_t))(v53 + 16))(&v24[*(int *)(v12 + 44)], &v25[*(int *)(v12 + 44)], v55);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v24, 0, 1, v12);
      goto LABEL_9;
    }
  }
  else
  {
    if (!v28)
    {
      v37 = *(_QWORD *)v25;
      v24[8] = v25[8];
      *(_QWORD *)v24 = v37;
      v38 = *((_QWORD *)v25 + 2);
      v24[24] = v25[24];
      *((_QWORD *)v24 + 2) = v38;
      v39 = *((_QWORD *)v25 + 4);
      v24[40] = v25[40];
      *((_QWORD *)v24 + 4) = v39;
      *((_QWORD *)v24 + 6) = *((_QWORD *)v25 + 6);
      *((_QWORD *)v24 + 7) = *((_QWORD *)v25 + 7);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((_QWORD *)v24 + 8) = *((_QWORD *)v25 + 8);
      *((_QWORD *)v24 + 9) = *((_QWORD *)v25 + 9);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v24[80] = v25[80];
      ((void (*)(char *, char *, uint64_t))v17)(&v24[*(int *)(v12 + 40)], &v25[*(int *)(v12 + 40)], v54);
      ((void (*)(char *, char *, uint64_t))v22)(&v24[*(int *)(v12 + 44)], &v25[*(int *)(v12 + 44)], v55);
      goto LABEL_9;
    }
    sub_1DC0926D8((uint64_t)v24, (uint64_t (*)(_QWORD))type metadata accessor for PriceViewModel);
  }
  sub_1DC092F50(0, (unint64_t *)&qword_1EDB2D5E8, (void (*)(uint64_t))type metadata accessor for PriceViewModel);
  memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
LABEL_9:
  v40 = v56[7];
  v41 = &a1[v40];
  v42 = (char *)a2 + v40;
  v43 = sub_1DC4008EC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 24))(v41, v42, v43);
  v44 = v56[8];
  v45 = &a1[v44];
  v46 = (char *)a2 + v44;
  v47 = sub_1DC4002BC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 24))(v45, v46, v47);
  v48 = v56[9];
  v49 = &a1[v48];
  v50 = (_QWORD *)((char *)a2 + v48);
  *(_QWORD *)v49 = *v50;
  *((_QWORD *)v49 + 1) = v50[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_1DC21756C(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  void (*v35)(char *, char *, uint64_t);

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v7[8] = *((_BYTE *)a2 + v6 + 8);
  *(_QWORD *)v7 = *(_QWORD *)((char *)a2 + v6);
  v7[24] = *((_BYTE *)a2 + v6 + 24);
  *((_QWORD *)v7 + 2) = *(_QWORD *)((char *)a2 + v6 + 16);
  v7[40] = *((_BYTE *)a2 + v6 + 40);
  *((_QWORD *)v7 + 4) = *(_QWORD *)((char *)a2 + v6 + 32);
  v9 = *(_OWORD *)((char *)a2 + v6 + 64);
  *((_OWORD *)v7 + 3) = *(_OWORD *)((char *)a2 + v6 + 48);
  *((_OWORD *)v7 + 4) = v9;
  v7[80] = *((_BYTE *)a2 + v6 + 80);
  v10 = type metadata accessor for PriceViewModel();
  v11 = *(int *)(v10 + 40);
  v12 = &v7[v11];
  v13 = &v8[v11];
  v14 = sub_1DC4011C8();
  v35 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32);
  v35(v12, v13, v14);
  v15 = *(int *)(v10 + 44);
  v16 = &v7[v15];
  v17 = &v8[v15];
  v18 = sub_1DC400118();
  v19 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32);
  v19(v16, v17, v18);
  v20 = a3[6];
  v21 = (_QWORD *)((char *)a1 + v20);
  v22 = (_QWORD *)((char *)a2 + v20);
  v23 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))((char *)a2 + v20, 1, v10))
  {
    sub_1DC092F50(0, (unint64_t *)&qword_1EDB2D5E8, (void (*)(uint64_t))type metadata accessor for PriceViewModel);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  }
  else
  {
    *v21 = *v22;
    *((_BYTE *)v21 + 8) = *((_BYTE *)v22 + 8);
    v21[2] = v22[2];
    *((_BYTE *)v21 + 24) = *((_BYTE *)v22 + 24);
    v21[4] = v22[4];
    *((_BYTE *)v21 + 40) = *((_BYTE *)v22 + 40);
    v25 = *((_OWORD *)v22 + 4);
    *((_OWORD *)v21 + 3) = *((_OWORD *)v22 + 3);
    *((_OWORD *)v21 + 4) = v25;
    *((_BYTE *)v21 + 80) = *((_BYTE *)v22 + 80);
    v35((char *)v21 + *(int *)(v10 + 40), (char *)v22 + *(int *)(v10 + 40), v14);
    v19((char *)v21 + *(int *)(v10 + 44), (char *)v22 + *(int *)(v10 + 44), v18);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v21, 0, 1, v10);
  }
  v26 = a3[7];
  v27 = (char *)a1 + v26;
  v28 = (char *)a2 + v26;
  v29 = sub_1DC4008EC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(v27, v28, v29);
  v30 = a3[8];
  v31 = (char *)a1 + v30;
  v32 = (char *)a2 + v30;
  v33 = sub_1DC4002BC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 32))(v31, v32, v33);
  *(_OWORD *)((char *)a1 + a3[9]) = *(_OWORD *)((char *)a2 + a3[9]);
  return a1;
}

char *sub_1DC2177C0(char *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, char *);
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  void (*v22)(char *, char *);
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t (*v27)(char *, uint64_t, uint64_t);
  int v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int *v51;

  v6 = a2[1];
  *(_QWORD *)a1 = *a2;
  *((_QWORD *)a1 + 1) = v6;
  swift_bridgeObjectRelease();
  v7 = a3[5];
  v8 = &a1[v7];
  v9 = (char *)a2 + v7;
  *(_QWORD *)v8 = *(_QWORD *)((char *)a2 + v7);
  v8[8] = *((_BYTE *)a2 + v7 + 8);
  *((_QWORD *)v8 + 2) = *(_QWORD *)((char *)a2 + v7 + 16);
  v8[24] = *((_BYTE *)a2 + v7 + 24);
  *((_QWORD *)v8 + 4) = *(_QWORD *)((char *)a2 + v7 + 32);
  v8[40] = *((_BYTE *)a2 + v7 + 40);
  v10 = *(_QWORD *)((char *)a2 + v7 + 56);
  *((_QWORD *)v8 + 6) = *(_QWORD *)((char *)a2 + v7 + 48);
  *((_QWORD *)v8 + 7) = v10;
  swift_bridgeObjectRelease();
  v11 = *((_QWORD *)v9 + 9);
  *((_QWORD *)v8 + 8) = *((_QWORD *)v9 + 8);
  *((_QWORD *)v8 + 9) = v11;
  swift_bridgeObjectRelease();
  v8[80] = v9[80];
  v12 = type metadata accessor for PriceViewModel();
  v13 = *(int *)(v12 + 40);
  v14 = &v8[v13];
  v15 = &v9[v13];
  v16 = sub_1DC4011C8();
  v48 = *(_QWORD *)(v16 - 8);
  v49 = v16;
  v17 = *(void (**)(char *, char *))(v48 + 40);
  v17(v14, v15);
  v18 = *(int *)(v12 + 44);
  v19 = &v8[v18];
  v20 = &v9[v18];
  v21 = sub_1DC400118();
  v47 = *(_QWORD *)(v21 - 8);
  v22 = *(void (**)(char *, char *))(v47 + 40);
  v50 = v21;
  v22(v19, v20);
  v51 = a3;
  v23 = a3[6];
  v24 = &a1[v23];
  v25 = (char *)a2 + v23;
  v26 = *(_QWORD *)(v12 - 8);
  v27 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v26 + 48);
  LODWORD(a3) = v27(&a1[v23], 1, v12);
  v28 = v27(v25, 1, v12);
  if ((_DWORD)a3)
  {
    if (!v28)
    {
      *(_QWORD *)v24 = *(_QWORD *)v25;
      v24[8] = v25[8];
      *((_QWORD *)v24 + 2) = *((_QWORD *)v25 + 2);
      v24[24] = v25[24];
      *((_QWORD *)v24 + 4) = *((_QWORD *)v25 + 4);
      v24[40] = v25[40];
      v30 = *((_OWORD *)v25 + 4);
      *((_OWORD *)v24 + 3) = *((_OWORD *)v25 + 3);
      *((_OWORD *)v24 + 4) = v30;
      v24[80] = v25[80];
      (*(void (**)(char *, char *, uint64_t))(v48 + 32))(&v24[*(int *)(v12 + 40)], &v25[*(int *)(v12 + 40)], v49);
      (*(void (**)(char *, char *, uint64_t))(v47 + 32))(&v24[*(int *)(v12 + 44)], &v25[*(int *)(v12 + 44)], v50);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v24, 0, 1, v12);
      goto LABEL_9;
    }
  }
  else
  {
    if (!v28)
    {
      *(_QWORD *)v24 = *(_QWORD *)v25;
      v24[8] = v25[8];
      *((_QWORD *)v24 + 2) = *((_QWORD *)v25 + 2);
      v24[24] = v25[24];
      *((_QWORD *)v24 + 4) = *((_QWORD *)v25 + 4);
      v24[40] = v25[40];
      v31 = *((_QWORD *)v25 + 7);
      *((_QWORD *)v24 + 6) = *((_QWORD *)v25 + 6);
      *((_QWORD *)v24 + 7) = v31;
      swift_bridgeObjectRelease();
      v32 = *((_QWORD *)v25 + 9);
      *((_QWORD *)v24 + 8) = *((_QWORD *)v25 + 8);
      *((_QWORD *)v24 + 9) = v32;
      swift_bridgeObjectRelease();
      v24[80] = v25[80];
      ((void (*)(char *, char *, uint64_t))v17)(&v24[*(int *)(v12 + 40)], &v25[*(int *)(v12 + 40)], v49);
      ((void (*)(char *, char *, uint64_t))v22)(&v24[*(int *)(v12 + 44)], &v25[*(int *)(v12 + 44)], v50);
      goto LABEL_9;
    }
    sub_1DC0926D8((uint64_t)v24, (uint64_t (*)(_QWORD))type metadata accessor for PriceViewModel);
  }
  sub_1DC092F50(0, (unint64_t *)&qword_1EDB2D5E8, (void (*)(uint64_t))type metadata accessor for PriceViewModel);
  memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
LABEL_9:
  v33 = v51[7];
  v34 = &a1[v33];
  v35 = (char *)a2 + v33;
  v36 = sub_1DC4008EC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 40))(v34, v35, v36);
  v37 = v51[8];
  v38 = &a1[v37];
  v39 = (char *)a2 + v37;
  v40 = sub_1DC4002BC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 40))(v38, v39, v40);
  v41 = v51[9];
  v42 = &a1[v41];
  v43 = (_QWORD *)((char *)a2 + v41);
  v45 = *v43;
  v44 = v43[1];
  *(_QWORD *)v42 = v45;
  *((_QWORD *)v42 + 1) = v44;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1DC217B1C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC217B28(uint64_t a1, uint64_t a2, int *a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for PriceViewModel();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = a3[5];
    }
    else
    {
      sub_1DC092F50(0, (unint64_t *)&qword_1EDB2D5E8, (void (*)(uint64_t))type metadata accessor for PriceViewModel);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
      {
        v10 = v12;
        v11 = a3[6];
      }
      else
      {
        v13 = sub_1DC4008EC();
        v9 = *(_QWORD *)(v13 - 8);
        if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
        {
          v10 = v13;
          v11 = a3[7];
        }
        else
        {
          v10 = sub_1DC4002BC();
          v9 = *(_QWORD *)(v10 - 8);
          v11 = a3[8];
        }
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_1DC217C20()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC217C2C(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = type metadata accessor for PriceViewModel();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = a4[5];
    }
    else
    {
      sub_1DC092F50(0, (unint64_t *)&qword_1EDB2D5E8, (void (*)(uint64_t))type metadata accessor for PriceViewModel);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == a3)
      {
        v10 = v12;
        v11 = a4[6];
      }
      else
      {
        v13 = sub_1DC4008EC();
        v9 = *(_QWORD *)(v13 - 8);
        if (*(_DWORD *)(v9 + 84) == a3)
        {
          v10 = v13;
          v11 = a4[7];
        }
        else
        {
          v10 = sub_1DC4002BC();
          v9 = *(_QWORD *)(v10 - 8);
          v11 = a4[8];
        }
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t sub_1DC217D20()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  char *v4;
  char v5;
  uint64_t ObjCClassFromMetadata;
  id v7;
  uint64_t v8;
  _QWORD v10[4];

  v0 = sub_1DC4002BC();
  v1 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DAE0F8];
  v2 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for QuoteSummaryViewModel();
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E0DAE0B0], v0);
  sub_1DC080808((unint64_t *)&qword_1EDB28B78, v1, MEMORY[0x1E0DAE110]);
  sub_1DC408C80();
  sub_1DC408C80();
  if (v10[2] == v10[0] && v10[3] == v10[1])
  {
    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v0);
  }
  else
  {
    v5 = sub_1DC4099E8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v0);
    if ((v5 & 1) == 0)
      return ChartRange.longLabel.getter();
  }
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v7 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v8 = sub_1DC3FFC80();

  return v8;
}

uint64_t sub_1DC217F24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, _QWORD *a7@<X8>)
{
  int *v12;
  uint64_t *v13;
  uint64_t ObjCClassFromMetadata;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;

  v12 = (int *)type metadata accessor for QuoteSummaryViewModel();
  v13 = (_QWORD *)((char *)a7 + v12[9]);
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v15 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v16 = sub_1DC3FFC80();
  v18 = v17;

  *v13 = v16;
  v13[1] = v18;
  *a7 = a1;
  a7[1] = a2;
  sub_1DC0FF10C(a3, (uint64_t)a7 + v12[5]);
  sub_1DC21974C(a4, (uint64_t)a7 + v12[6]);
  v19 = (char *)a7 + v12[7];
  v20 = sub_1DC4008EC();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v19, a5, v20);
  v21 = (char *)a7 + v12[8];
  v22 = sub_1DC4002BC();
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v21, a6, v22);
}

uint64_t sub_1DC21809C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t);
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unsigned int (*v41)(char *, uint64_t, uint64_t);
  char v42;
  uint64_t v43;
  char v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v71;
  int v72;
  uint64_t v73;
  int v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  _QWORD *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;

  v94 = a4;
  v90 = a6;
  v10 = sub_1DC4002BC();
  v91 = *(_QWORD *)(v10 - 8);
  v92 = v10;
  MEMORY[0x1E0C80A78](v10);
  v87 = (char *)&v71 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1DC4008EC();
  v88 = *(_QWORD *)(v12 - 8);
  v89 = v12;
  MEMORY[0x1E0C80A78](v12);
  v86 = (char *)&v71 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1DC400118();
  v84 = *(_QWORD *)(v14 - 8);
  v85 = v14;
  MEMORY[0x1E0C80A78](v14);
  v80 = (char *)&v71 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1DC4011C8();
  v82 = *(_QWORD *)(v16 - 8);
  v83 = v16;
  MEMORY[0x1E0C80A78](v16);
  v76 = (char *)&v71 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = (void (*)(uint64_t))MEMORY[0x1E0DAF040];
  sub_1DC092F50(0, &qword_1EDB28DC0, (void (*)(uint64_t))MEMORY[0x1E0DAF040]);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v71 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)&v71 - v23;
  MEMORY[0x1E0C80A78](v25);
  v27 = (char *)&v71 - v26;
  v71 = type metadata accessor for PriceViewModel();
  MEMORY[0x1E0C80A78](v71);
  v29 = (char *)&v71 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v30);
  v81 = (uint64_t)&v71 - v31;
  sub_1DC092F50(0, (unint64_t *)&qword_1EDB2D5E8, v32);
  MEMORY[0x1E0C80A78](v33);
  v79 = (uint64_t)&v71 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v35);
  v96 = (uint64_t)&v71 - v36;
  sub_1DC218770(a2, a5, a1, (uint64_t)&v71 - v36);
  v93 = a5;
  v95 = a3;
  v75 = sub_1DC218C98(a5, a2, a3);
  v74 = v37;
  v97 = a1;
  v78 = sub_1DC4010D8();
  v77 = v38;
  v98 = a2;
  sub_1DC092F9C(a2, (uint64_t)v27, &qword_1EDB28DC0, v18);
  v39 = sub_1DC401030();
  v40 = *(_QWORD *)(v39 - 8);
  v41 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48);
  if (v41(v27, 1, v39) == 1)
  {
    sub_1DC092F14((uint64_t)v27, &qword_1EDB28DC0, (void (*)(uint64_t))MEMORY[0x1E0DAF040]);
    v73 = 0;
    v72 = 1;
  }
  else
  {
    v73 = sub_1DC401024();
    v72 = v42 & 1;
    (*(void (**)(char *, uint64_t))(v40 + 8))(v27, v39);
  }
  sub_1DC092F9C(v98, (uint64_t)v24, &qword_1EDB28DC0, (void (*)(uint64_t))MEMORY[0x1E0DAF040]);
  if (v41(v24, 1, v39) == 1)
  {
    sub_1DC092F14((uint64_t)v24, &qword_1EDB28DC0, (void (*)(uint64_t))MEMORY[0x1E0DAF040]);
    v43 = 0;
    v44 = 1;
  }
  else
  {
    v43 = sub_1DC401000();
    v44 = v45 & 1;
    (*(void (**)(char *, uint64_t))(v40 + 8))(v24, v39);
  }
  sub_1DC092F9C(v98, (uint64_t)v21, &qword_1EDB28DC0, (void (*)(uint64_t))MEMORY[0x1E0DAF040]);
  if (v41(v21, 1, v39) == 1)
  {
    sub_1DC092F14((uint64_t)v21, &qword_1EDB28DC0, (void (*)(uint64_t))MEMORY[0x1E0DAF040]);
    v46 = 0;
    v47 = 0;
  }
  else
  {
    v46 = sub_1DC400FA0();
    v47 = v48;
    (*(void (**)(char *, uint64_t))(v40 + 8))(v21, v39);
  }
  v49 = v76;
  sub_1DC401078();
  v50 = v80;
  sub_1DC4000B8();
  *(_QWORD *)v29 = v73;
  v29[8] = v72;
  *((_QWORD *)v29 + 2) = v75;
  v29[24] = v74 & 1;
  *((_QWORD *)v29 + 4) = v43;
  v29[40] = v44;
  *((_QWORD *)v29 + 6) = v46;
  *((_QWORD *)v29 + 7) = v47;
  v51 = v71;
  v53 = v82;
  v52 = v83;
  (*(void (**)(char *, char *, uint64_t))(v82 + 16))(&v29[*(int *)(v71 + 40)], v49, v83);
  *((_QWORD *)v29 + 8) = 9666786;
  *((_QWORD *)v29 + 9) = 0xA300000000000000;
  v29[80] = 0;
  v54 = &v29[*(int *)(v51 + 44)];
  v56 = v84;
  v55 = v85;
  (*(void (**)(char *, char *, uint64_t))(v84 + 16))(v54, v50, v85);
  if (qword_1EDB2D588 != -1)
    swift_once();
  v57 = qword_1EDB5DFD0;
  (*(void (**)(char *, uint64_t))(v53 + 8))(v49, v52);
  v58 = v57 + OBJC_IVAR____TtC8StocksUI14PriceFormatter_locale;
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v56 + 40))(v58, v50, v55);
  swift_endAccess();
  v59 = v81;
  sub_1DC0FF10C((uint64_t)v29, v81);
  v60 = v79;
  sub_1DC092F9C(v96, v79, (unint64_t *)&qword_1EDB2D5E8, (void (*)(uint64_t))type metadata accessor for PriceViewModel);
  v62 = v88;
  v61 = v89;
  v63 = (uint64_t)v86;
  v64 = v94;
  (*(void (**)(char *, uint64_t, uint64_t))(v88 + 16))(v86, v94, v89);
  v66 = v91;
  v65 = v92;
  v67 = (uint64_t)v87;
  v68 = v93;
  (*(void (**)(char *, uint64_t, uint64_t))(v91 + 16))(v87, v93, v92);
  sub_1DC217F24(v78, v77, v59, v60, v63, v67, v90);
  (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v68, v65);
  (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v64, v61);
  sub_1DC092F14(v95, (unint64_t *)&unk_1EDB28D90, (void (*)(uint64_t))MEMORY[0x1E0DAEFA8]);
  sub_1DC092F14(v98, &qword_1EDB28DC0, (void (*)(uint64_t))MEMORY[0x1E0DAF040]);
  v69 = sub_1DC4010E4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v69 - 8) + 8))(v97, v69);
  return sub_1DC092F14(v96, (unint64_t *)&qword_1EDB2D5E8, (void (*)(uint64_t))type metadata accessor for PriceViewModel);
}

uint64_t sub_1DC218770@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t (*v18)(void);
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t);
  uint64_t v29;
  uint64_t v30;
  char v31;
  char *v32;
  uint64_t v33;
  char v34;
  char v35;
  char v36;
  char v37;
  uint64_t v38;
  char v39;
  char v40;
  uint64_t v41;
  char v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t *v48;
  char v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD v62[2];
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;

  v62[1] = a3;
  v70 = a2;
  v74 = a4;
  v5 = type metadata accessor for PriceViewModel();
  v72 = *(_QWORD *)(v5 - 8);
  v73 = v5;
  MEMORY[0x1E0C80A78](v5);
  v68 = (_QWORD *)((char *)v62 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = sub_1DC400118();
  v66 = *(_QWORD *)(v7 - 8);
  v67 = v7;
  MEMORY[0x1E0C80A78](v7);
  v65 = (char *)v62 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1DC4011C8();
  v63 = *(_QWORD *)(v9 - 8);
  v64 = v9;
  MEMORY[0x1E0C80A78](v9);
  v71 = (char *)v62 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1DC4002BC();
  v69 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v62 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1DC4004E4();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)v62 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x1E0DAF040];
  sub_1DC092F50(0, &qword_1EDB28DC0, (void (*)(uint64_t))MEMORY[0x1E0DAF040]);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)v62 - v20;
  v22 = sub_1DC401030();
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)v62 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = a1;
  v27 = v26;
  v28 = (void (*)(uint64_t))v18;
  v30 = v29;
  sub_1DC092F9C(v25, (uint64_t)v21, &qword_1EDB28DC0, v28);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v21, 1, v30) == 1)
  {
    sub_1DC092F14((uint64_t)v21, &qword_1EDB28DC0, (void (*)(uint64_t))MEMORY[0x1E0DAF040]);
LABEL_13:
    v60 = 1;
    v52 = v73;
    v59 = v74;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v72 + 56))(v59, v60, 1, v52);
  }
  v62[0] = v27;
  (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v24, v21, v30);
  sub_1DC400FAC();
  v31 = sub_1DC4004CC();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  v32 = v71;
  if ((v31 & 1) == 0)
    goto LABEL_12;
  v33 = v69;
  (*(void (**)(char *, _QWORD, uint64_t))(v69 + 104))(v13, *MEMORY[0x1E0DAE0B0], v11);
  sub_1DC080808((unint64_t *)&qword_1EDB28B78, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAE0F8], MEMORY[0x1E0DAE110]);
  sub_1DC408C80();
  sub_1DC408C80();
  if (v75 == v77 && v76 == v78)
  {
    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v13, v11);
    goto LABEL_8;
  }
  v34 = sub_1DC4099E8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v13, v11);
  if ((v34 & 1) == 0)
  {
LABEL_12:
    (*(void (**)(char *, uint64_t))(v62[0] + 8))(v24, v30);
    goto LABEL_13;
  }
LABEL_8:
  sub_1DC400FC4();
  if ((v35 & 1) != 0)
    goto LABEL_12;
  v70 = v30;
  v69 = sub_1DC400FC4();
  v37 = v36;
  v38 = sub_1DC40100C();
  v40 = v39;
  v41 = sub_1DC401000();
  v43 = v42;
  v44 = sub_1DC400FA0();
  v46 = v45;
  sub_1DC401078();
  v47 = v65;
  sub_1DC4000B8();
  v48 = v68;
  *v68 = v69;
  v49 = v37 & 1;
  v50 = (uint64_t)v48;
  *((_BYTE *)v48 + 8) = v49;
  v48[2] = v38;
  *((_BYTE *)v48 + 24) = v40 & 1;
  v48[4] = v41;
  v51 = v47;
  *((_BYTE *)v48 + 40) = v43 & 1;
  v48[6] = v44;
  v48[7] = v46;
  v52 = v73;
  v54 = v63;
  v53 = v64;
  (*(void (**)(char *, char *, uint64_t))(v63 + 16))((char *)v48 + *(int *)(v73 + 40), v32, v64);
  *(_QWORD *)(v50 + 64) = 0;
  *(_QWORD *)(v50 + 72) = 0xE000000000000000;
  *(_BYTE *)(v50 + 80) = 1;
  v56 = v66;
  v55 = v67;
  (*(void (**)(uint64_t, char *, uint64_t))(v66 + 16))(v50 + *(int *)(v52 + 44), v51, v67);
  if (qword_1EDB2D588 != -1)
    swift_once();
  v57 = qword_1EDB5DFD0;
  (*(void (**)(char *, uint64_t))(v54 + 8))(v32, v53);
  v58 = v57 + OBJC_IVAR____TtC8StocksUI14PriceFormatter_locale;
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v56 + 40))(v58, v51, v55);
  swift_endAccess();
  v59 = v74;
  sub_1DC0FF10C(v50, v74);
  (*(void (**)(char *, uint64_t))(v62[0] + 8))(v24, v70);
  v60 = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v72 + 56))(v59, v60, 1, v52);
}

uint64_t sub_1DC218C98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(uint64_t);
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  char *v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  double v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  double v34;
  uint64_t v35;
  char v36;
  char *v37;
  double v38;
  char v39;
  char v40;
  void (*v41)(char *, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(char *, uint64_t);
  char v49;
  int v50;
  uint64_t v51;
  void (*v52)(char *, uint64_t);
  uint64_t v54;
  char *v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;

  v58 = a3;
  v59 = a2;
  sub_1DC092F50(0, (unint64_t *)&qword_1EDB28D70, (void (*)(uint64_t))MEMORY[0x1E0DAEF60]);
  MEMORY[0x1E0C80A78](v3);
  v55 = (char *)&v54 - v4;
  sub_1DC092F50(0, &qword_1EDB28DC0, (void (*)(uint64_t))MEMORY[0x1E0DAF040]);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v54 - v9;
  sub_1DC092F50(0, (unint64_t *)&unk_1EDB28D90, (void (*)(uint64_t))MEMORY[0x1E0DAEFA8]);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v54 - v12;
  v14 = sub_1DC400F7C();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v56 = (char *)&v54 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v57 = (char *)&v54 - v18;
  v19 = sub_1DC4002BC();
  v20 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DAE0F8];
  v21 = *(_QWORD *)(v19 - 8);
  v22 = MEMORY[0x1E0C80A78](v19);
  v24 = (char *)&v54 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v21 + 104))(v24, *MEMORY[0x1E0DAE0B0], v19, v22);
  sub_1DC080808(&qword_1EDB28B70, v20, MEMORY[0x1E0DAE108]);
  v25 = sub_1DC4089F8();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v24, v19);
  if ((v25 & 1) == 0)
  {
    v28 = v59;
    sub_1DC092F9C(v58, (uint64_t)v13, (unint64_t *)&unk_1EDB28D90, (void (*)(uint64_t))MEMORY[0x1E0DAEFA8]);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) != 1)
    {
      v30 = v57;
      (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v57, v13, v14);
      sub_1DC092F9C(v28, (uint64_t)v10, &qword_1EDB28DC0, (void (*)(uint64_t))MEMORY[0x1E0DAF040]);
      v31 = sub_1DC401030();
      v32 = *(_QWORD *)(v31 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v10, 1, v31) == 1)
      {
        sub_1DC092F14((uint64_t)v10, &qword_1EDB28DC0, (void (*)(uint64_t))MEMORY[0x1E0DAF040]);
        v33 = 1;
        v34 = 0.0;
      }
      else
      {
        v35 = sub_1DC401024();
        v33 = v36 & 1;
        (*(void (**)(char *, uint64_t))(v32 + 8))(v10, v31);
        v34 = *(double *)&v35;
      }
      v37 = v56;
      v38 = COERCE_DOUBLE(sub_1DC400EE0());
      v40 = v39;
      (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v37, v30, v14);
      if ((v40 & 1) != 0)
      {
        v42 = sub_1DC400F58();
        v43 = *(_QWORD *)(v42 + 16);
        v44 = sub_1DC400F34();
        v45 = *(_QWORD *)(v44 - 8);
        if (v43)
        {
          v46 = (uint64_t)v55;
          (*(void (**)(char *, unint64_t, uint64_t))(v45 + 16))(v55, v42 + ((*(unsigned __int8 *)(v45 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80)), v44);
          v47 = 0;
        }
        else
        {
          v47 = 1;
          v46 = (uint64_t)v55;
        }
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v45 + 56))(v46, v47, 1, v44);
        swift_bridgeObjectRelease();
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v45 + 48))(v46, 1, v44) == 1)
        {
          v48 = *(void (**)(char *, uint64_t))(v15 + 8);
          v48(v37, v14);
          v48(v57, v14);
          sub_1DC092F14(v46, (unint64_t *)&qword_1EDB28D70, (void (*)(uint64_t))MEMORY[0x1E0DAEF60]);
          goto LABEL_19;
        }
        v38 = COERCE_DOUBLE(sub_1DC400F1C());
        v50 = v49 & 1;
        v51 = v46;
        v52 = *(void (**)(char *, uint64_t))(v15 + 8);
        v52(v37, v14);
        v52(v57, v14);
        (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v51, v44);
        if (((v33 | v50) & 1) != 0)
          goto LABEL_19;
      }
      else
      {
        v41 = *(void (**)(char *, uint64_t))(v15 + 8);
        v41(v37, v14);
        v41(v30, v14);
        if ((v33 & 1) != 0)
          goto LABEL_19;
      }
      v29 = v34 - v38;
      return *(_QWORD *)&v29;
    }
    sub_1DC092F14((uint64_t)v13, (unint64_t *)&unk_1EDB28D90, (void (*)(uint64_t))MEMORY[0x1E0DAEFA8]);
LABEL_19:
    v29 = 0.0;
    return *(_QWORD *)&v29;
  }
  sub_1DC092F9C(v59, (uint64_t)v7, &qword_1EDB28DC0, (void (*)(uint64_t))MEMORY[0x1E0DAF040]);
  v26 = sub_1DC401030();
  v27 = *(_QWORD *)(v26 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v7, 1, v26) == 1)
  {
    sub_1DC092F14((uint64_t)v7, &qword_1EDB28DC0, (void (*)(uint64_t))MEMORY[0x1E0DAF040]);
    goto LABEL_19;
  }
  v29 = COERCE_DOUBLE(sub_1DC400F88());
  (*(void (**)(char *, uint64_t))(v27 + 8))(v7, v26);
  return *(_QWORD *)&v29;
}

uint64_t sub_1DC2191E4(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int (*v25)(uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  char v28;
  _QWORD *v29;
  _QWORD *v30;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  char *v38;
  _QWORD *v39;
  uint64_t v40;
  _QWORD *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v4 = type metadata accessor for PriceViewModel();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC2196DC();
  v9 = v8;
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC092F50(0, (unint64_t *)&qword_1EDB2D5E8, (void (*)(uint64_t))type metadata accessor for PriceViewModel);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v37 - v16;
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v37 - v19;
  if (*a1 != *a2 || a1[1] != a2[1])
  {
    v21 = sub_1DC4099E8();
    v22 = 0;
    if ((v21 & 1) == 0)
      return v22 & 1;
  }
  v42 = v14;
  v23 = type metadata accessor for QuoteSummaryViewModel();
  if ((sub_1DC0FDE6C((uint64_t)a1 + *(int *)(v23 + 20), (uint64_t)a2 + *(int *)(v23 + 20)) & 1) == 0)
    goto LABEL_16;
  v38 = v7;
  v39 = a1;
  sub_1DC092F9C((uint64_t)a1 + *(int *)(v23 + 24), (uint64_t)v20, (unint64_t *)&qword_1EDB2D5E8, (void (*)(uint64_t))type metadata accessor for PriceViewModel);
  v40 = v23;
  v41 = a2;
  sub_1DC092F9C((uint64_t)a2 + *(int *)(v23 + 24), (uint64_t)v17, (unint64_t *)&qword_1EDB2D5E8, (void (*)(uint64_t))type metadata accessor for PriceViewModel);
  v24 = (uint64_t)&v11[*(int *)(v9 + 48)];
  sub_1DC092F9C((uint64_t)v20, (uint64_t)v11, (unint64_t *)&qword_1EDB2D5E8, (void (*)(uint64_t))type metadata accessor for PriceViewModel);
  sub_1DC092F9C((uint64_t)v17, v24, (unint64_t *)&qword_1EDB2D5E8, (void (*)(uint64_t))type metadata accessor for PriceViewModel);
  v25 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v25((uint64_t)v11, 1, v4) == 1)
  {
    sub_1DC092F14((uint64_t)v17, (unint64_t *)&qword_1EDB2D5E8, (void (*)(uint64_t))type metadata accessor for PriceViewModel);
    sub_1DC092F14((uint64_t)v20, (unint64_t *)&qword_1EDB2D5E8, (void (*)(uint64_t))type metadata accessor for PriceViewModel);
    if (v25(v24, 1, v4) == 1)
    {
      sub_1DC092F14((uint64_t)v11, (unint64_t *)&qword_1EDB2D5E8, (void (*)(uint64_t))type metadata accessor for PriceViewModel);
      goto LABEL_12;
    }
LABEL_10:
    sub_1DC0926D8((uint64_t)v11, (uint64_t (*)(_QWORD))sub_1DC2196DC);
    v22 = 0;
    return v22 & 1;
  }
  v26 = (uint64_t)v42;
  sub_1DC092F9C((uint64_t)v11, (uint64_t)v42, (unint64_t *)&qword_1EDB2D5E8, (void (*)(uint64_t))type metadata accessor for PriceViewModel);
  if (v25(v24, 1, v4) == 1)
  {
    sub_1DC092F14((uint64_t)v17, (unint64_t *)&qword_1EDB2D5E8, (void (*)(uint64_t))type metadata accessor for PriceViewModel);
    sub_1DC092F14((uint64_t)v20, (unint64_t *)&qword_1EDB2D5E8, (void (*)(uint64_t))type metadata accessor for PriceViewModel);
    sub_1DC0926D8(v26, (uint64_t (*)(_QWORD))type metadata accessor for PriceViewModel);
    goto LABEL_10;
  }
  v27 = (uint64_t)v38;
  sub_1DC0FF10C(v24, (uint64_t)v38);
  v28 = sub_1DC0FDE6C(v26, v27);
  sub_1DC0926D8(v27, (uint64_t (*)(_QWORD))type metadata accessor for PriceViewModel);
  sub_1DC092F14((uint64_t)v17, (unint64_t *)&qword_1EDB2D5E8, (void (*)(uint64_t))type metadata accessor for PriceViewModel);
  sub_1DC092F14((uint64_t)v20, (unint64_t *)&qword_1EDB2D5E8, (void (*)(uint64_t))type metadata accessor for PriceViewModel);
  sub_1DC0926D8(v26, (uint64_t (*)(_QWORD))type metadata accessor for PriceViewModel);
  sub_1DC092F14((uint64_t)v11, (unint64_t *)&qword_1EDB2D5E8, (void (*)(uint64_t))type metadata accessor for PriceViewModel);
  if ((v28 & 1) == 0)
  {
LABEL_16:
    v22 = 0;
    return v22 & 1;
  }
LABEL_12:
  v29 = v39;
  sub_1DC4008EC();
  sub_1DC080808(&qword_1EDB28C10, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAE890], MEMORY[0x1E0DAE8A8]);
  sub_1DC408C80();
  sub_1DC408C80();
  if (v45 != v43)
    goto LABEL_16;
  sub_1DC4002BC();
  sub_1DC080808((unint64_t *)&qword_1EDB28B78, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAE0F8], MEMORY[0x1E0DAE110]);
  sub_1DC408C80();
  sub_1DC408C80();
  if (v45 == v43 && v46 == v44)
  {
    swift_bridgeObjectRelease_n();
    v30 = v41;
  }
  else
  {
    v32 = sub_1DC4099E8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v22 = 0;
    v30 = v41;
    if ((v32 & 1) == 0)
      return v22 & 1;
  }
  v33 = *(int *)(v40 + 36);
  v34 = *(_QWORD *)((char *)v29 + v33);
  v35 = *(_QWORD *)((char *)v29 + v33 + 8);
  v36 = (_QWORD *)((char *)v30 + v33);
  if (v34 == *v36 && v35 == v36[1])
    v22 = 1;
  else
    v22 = sub_1DC4099E8();
  return v22 & 1;
}

void sub_1DC2196DC()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EDB2D5F0)
  {
    sub_1DC092F50(255, (unint64_t *)&qword_1EDB2D5E8, (void (*)(uint64_t))type metadata accessor for PriceViewModel);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EDB2D5F0);
  }
}

uint64_t sub_1DC21974C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1DC092F50(0, (unint64_t *)&qword_1EDB2D5E8, (void (*)(uint64_t))type metadata accessor for PriceViewModel);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for SlideForYouFeedTitleViewAnimator()
{
  return objc_opt_self();
}

uint64_t sub_1DC2197C4(char a1, void *a2, void *a3)
{
  return sub_1DC2197D4(a1 & 1, a2, a3);
}

id sub_1DC2197CC(char a1, void *a2, void *a3)
{
  return sub_1DC2199B0(a1 & 1, a2, a3);
}

uint64_t sub_1DC2197D4(char a1, void *a2, id a3)
{
  double v6;
  uint64_t v7;
  double Height;
  CGRect v10;
  CGRect v11;
  CGRect v12;
  CGRect v13;

  objc_msgSend(a3, sel_frame);
  if ((a1 & 1) != 0)
  {
    sub_1DC40928C();
    objc_msgSend(a3, sel_setFrame_);
    objc_msgSend(a3, sel_setAlpha_, 1.0);
    objc_msgSend(a2, sel_frame);
    objc_msgSend(a3, sel_frame);
    CGRectGetHeight(v11);
    sub_1DC40928C();
    objc_msgSend(a2, sel_setFrame_);
    objc_msgSend(a2, sel_frame);
    Height = CGRectGetHeight(v12);
    objc_msgSend(a3, sel_frame);
    if (Height - CGRectGetHeight(v13) <= 0.0)
      v6 = 1.0;
    else
      v6 = 0.0;
    v7 = 1;
  }
  else
  {
    objc_msgSend(a3, sel_frame);
    CGRectGetHeight(v10);
    sub_1DC40928C();
    objc_msgSend(a3, sel_setFrame_);
    v6 = 1.0;
    objc_msgSend(a3, sel_setAlpha_, 1.0);
    objc_msgSend(a2, sel_frame);
    sub_1DC40928C();
    objc_msgSend(a2, sel_setFrame_);
    v7 = 0;
  }
  objc_msgSend(a2, sel_setAlpha_, v6);
  return v7;
}

id sub_1DC2199B0(char a1, id a2, void *a3)
{
  double v6;
  double Height;
  BOOL v8;
  CGRect v10;
  CGRect v11;
  CGRect v12;

  objc_msgSend(a2, sel_frame);
  if ((a1 & 1) != 0)
  {
    objc_msgSend(a3, sel_frame);
    CGRectGetHeight(v10);
    sub_1DC40928C();
    objc_msgSend(a2, sel_setFrame_);
    objc_msgSend(a2, sel_frame);
    Height = CGRectGetHeight(v11);
    objc_msgSend(a3, sel_frame);
    v8 = Height - CGRectGetHeight(v12) <= 0.0;
    v6 = 1.0;
    if (!v8)
      v6 = 0.0;
  }
  else
  {
    sub_1DC40928C();
    objc_msgSend(a2, sel_setFrame_);
    v6 = 1.0;
  }
  objc_msgSend(a2, sel_setAlpha_, v6);
  return objc_msgSend(a3, sel_setAlpha_, 1.0);
}

void sub_1DC219AC8(unsigned __int8 a1, id a2, void *a3, double a4)
{
  int v7;
  double Height;
  double v9;
  double v10;
  double v11;
  CGRect v12;
  CGRect v13;
  CGRect v14;
  CGRect v15;
  CGRect v16;

  v7 = a1;
  objc_msgSend(a2, sel_frame);
  Height = CGRectGetHeight(v12);
  objc_msgSend(a3, sel_frame);
  v9 = CGRectGetHeight(v13);
  if (v7 != 2)
  {
    v10 = Height - v9;
    objc_msgSend(a3, sel_frame);
    objc_msgSend(a3, sel_frame);
    CGRectGetHeight(v14);
    objc_msgSend(a3, sel_frame);
    CGRectGetHeight(v15);
    sub_1DC40928C();
    objc_msgSend(a3, sel_setFrame_);
    objc_msgSend(a3, sel_setAlpha_, 1.0);
    objc_msgSend(a2, sel_frame);
    objc_msgSend(a3, sel_frame);
    CGRectGetHeight(v16);
    sub_1DC40928C();
    objc_msgSend(a2, sel_setFrame_);
    v11 = 1.0;
    if (v10 > 0.0)
      v11 = 1.0 - a4;
    objc_msgSend(a2, sel_setAlpha_, v11);
  }
}

uint64_t AttributionSource.name.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AttributionSource.homeURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for AttributionSource();
  return sub_1DC0990BC(v1 + *(int *)(v3 + 20), a1, (uint64_t (*)(_QWORD))sub_1DC133BB0);
}

uint64_t type metadata accessor for AttributionSource()
{
  uint64_t result;

  result = qword_1EDB28968;
  if (!qword_1EDB28968)
    return swift_getSingletonMetadata();
  return result;
}

void *AttributionSource.logoImage.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + *(int *)(type metadata accessor for AttributionSource() + 24));
  v2 = v1;
  return v1;
}

uint64_t AttributionSource.init(name:homeURL:logoImage:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v8;
  uint64_t result;

  *a5 = a1;
  a5[1] = a2;
  v8 = type metadata accessor for AttributionSource();
  result = sub_1DC219D98(a3, (uint64_t)a5 + *(int *)(v8 + 20));
  *(_QWORD *)((char *)a5 + *(int *)(v8 + 24)) = a4;
  return result;
}

uint64_t sub_1DC219D98(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1DC133BB0(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t _s8StocksUI17AttributionSourceV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int (*v26)(uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(_QWORD);
  uint64_t v31;
  char *v33;
  uint64_t v34;
  char v35;
  void (*v36)(char *, uint64_t);
  uint64_t v37;
  void *v38;
  id v39;
  void *v40;
  id v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v4 = sub_1DC3FFDD0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v43 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC133BB0(0);
  MEMORY[0x1E0C80A78](v7);
  v44 = (uint64_t)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC21A9FC();
  v10 = v9;
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = type metadata accessor for AttributionSource();
  MEMORY[0x1E0C80A78](v47);
  v46 = (uint64_t)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v45 = (uint64_t)&v42 - v15;
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v42 - v17;
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v42 - v20;
  if (*a1 == *a2 && a1[1] == a2[1])
  {
    sub_1DC0990BC((uint64_t)a1, (uint64_t)&v42 - v20, (uint64_t (*)(_QWORD))type metadata accessor for AttributionSource);
    sub_1DC0990BC((uint64_t)a2, (uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for AttributionSource);
  }
  else
  {
    v22 = sub_1DC4099E8();
    sub_1DC0990BC((uint64_t)a1, (uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for AttributionSource);
    sub_1DC0990BC((uint64_t)a2, (uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for AttributionSource);
    if ((v22 & 1) == 0)
    {
      sub_1DC0926D8((uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for AttributionSource);
      v31 = (uint64_t)v21;
      v30 = (uint64_t (*)(_QWORD))type metadata accessor for AttributionSource;
      goto LABEL_12;
    }
  }
  v23 = *(int *)(v47 + 20);
  v24 = (uint64_t)&v18[v23];
  v25 = (uint64_t)&v12[*(int *)(v10 + 48)];
  sub_1DC0990BC((uint64_t)&v21[v23], (uint64_t)v12, (uint64_t (*)(_QWORD))sub_1DC133BB0);
  sub_1DC0990BC(v24, v25, (uint64_t (*)(_QWORD))sub_1DC133BB0);
  v26 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v26((uint64_t)v12, 1, v4) != 1)
  {
    v29 = v44;
    sub_1DC0990BC((uint64_t)v12, v44, (uint64_t (*)(_QWORD))sub_1DC133BB0);
    if (v26(v25, 1, v4) != 1)
    {
      v33 = v43;
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v43, v25, v4);
      sub_1DC21AA5C();
      v34 = v29;
      v35 = sub_1DC4089F8();
      v36 = *(void (**)(char *, uint64_t))(v5 + 8);
      v36(v33, v4);
      sub_1DC0926D8((uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for AttributionSource);
      sub_1DC0926D8((uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for AttributionSource);
      v36((char *)v34, v4);
      sub_1DC0926D8((uint64_t)v12, (uint64_t (*)(_QWORD))sub_1DC133BB0);
      v27 = v45;
      sub_1DC0990BC((uint64_t)a1, v45, (uint64_t (*)(_QWORD))type metadata accessor for AttributionSource);
      v28 = v46;
      sub_1DC0990BC((uint64_t)a2, v46, (uint64_t (*)(_QWORD))type metadata accessor for AttributionSource);
      if ((v35 & 1) != 0)
        goto LABEL_15;
LABEL_13:
      sub_1DC0926D8(v28, (uint64_t (*)(_QWORD))type metadata accessor for AttributionSource);
      sub_1DC0926D8(v27, (uint64_t (*)(_QWORD))type metadata accessor for AttributionSource);
      return 0;
    }
    sub_1DC0926D8((uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for AttributionSource);
    sub_1DC0926D8((uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for AttributionSource);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v29, v4);
    goto LABEL_10;
  }
  sub_1DC0926D8((uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for AttributionSource);
  sub_1DC0926D8((uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for AttributionSource);
  if (v26(v25, 1, v4) != 1)
  {
LABEL_10:
    v30 = (uint64_t (*)(_QWORD))sub_1DC21A9FC;
    v31 = (uint64_t)v12;
LABEL_12:
    sub_1DC0926D8(v31, v30);
    v27 = v45;
    v28 = v46;
    sub_1DC0990BC((uint64_t)a1, v45, (uint64_t (*)(_QWORD))type metadata accessor for AttributionSource);
    sub_1DC0990BC((uint64_t)a2, v28, (uint64_t (*)(_QWORD))type metadata accessor for AttributionSource);
    goto LABEL_13;
  }
  sub_1DC0926D8((uint64_t)v12, (uint64_t (*)(_QWORD))sub_1DC133BB0);
  v27 = v45;
  sub_1DC0990BC((uint64_t)a1, v45, (uint64_t (*)(_QWORD))type metadata accessor for AttributionSource);
  v28 = v46;
  sub_1DC0990BC((uint64_t)a2, v46, (uint64_t (*)(_QWORD))type metadata accessor for AttributionSource);
LABEL_15:
  v37 = v47;
  v38 = *(void **)(v27 + *(int *)(v47 + 24));
  v39 = v38;
  sub_1DC0926D8(v27, (uint64_t (*)(_QWORD))type metadata accessor for AttributionSource);

  v40 = *(void **)(v28 + *(int *)(v37 + 24));
  v41 = v40;
  sub_1DC0926D8(v28, (uint64_t (*)(_QWORD))type metadata accessor for AttributionSource);

  return (v38 == 0) ^ (v40 != 0);
}

uint64_t *initializeBufferWithCopyOfBuffer for AttributionSource(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1DC3FFDD0();
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      sub_1DC133BB0(0);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    v16 = *(int *)(a3 + 24);
    v17 = *(void **)((char *)a2 + v16);
    *(uint64_t *)((char *)v4 + v16) = (uint64_t)v17;
    v18 = v17;
  }
  return v4;
}

void destroy for AttributionSource(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_1DC3FFDD0();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);

}

_QWORD *initializeWithCopy for AttributionSource(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(char *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1DC3FFDD0();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    sub_1DC133BB0(0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v14 = *(int *)(a3 + 24);
  v15 = *(void **)((char *)a2 + v14);
  *(_QWORD *)((char *)a1 + v14) = v15;
  v16 = v15;
  return a1;
}

_QWORD *assignWithCopy for AttributionSource(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  id v18;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1DC3FFDD0();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    sub_1DC133BB0(0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  v15 = *(int *)(a3 + 24);
  v16 = *(void **)((char *)a1 + v15);
  v17 = *(void **)((char *)a2 + v15);
  *(_QWORD *)((char *)a1 + v15) = v17;
  v18 = v17;

  return a1;
}

_OWORD *initializeWithTake for AttributionSource(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1DC3FFDD0();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    sub_1DC133BB0(0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

_QWORD *assignWithTake for AttributionSource(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(char *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1DC3FFDD0();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    sub_1DC133BB0(0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
  v16 = *(int *)(a3 + 24);
  v17 = *(void **)((char *)a1 + v16);
  *(_QWORD *)((char *)a1 + v16) = *(_QWORD *)((char *)a2 + v16);

  return a1;
}

uint64_t getEnumTagSinglePayload for AttributionSource()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC21A884(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    sub_1DC133BB0(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for AttributionSource()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC21A90C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_1DC133BB0(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

void sub_1DC21A980()
{
  unint64_t v0;

  sub_1DC133BB0(319);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_1DC21A9FC()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EDB28870)
  {
    sub_1DC133BB0(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EDB28870);
  }
}

unint64_t sub_1DC21AA5C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EDB28868;
  if (!qword_1EDB28868)
  {
    v1 = sub_1DC3FFDD0();
    result = MEMORY[0x1DF0CAB8C](MEMORY[0x1E0CB0028], v1);
    atomic_store(result, (unint64_t *)&qword_1EDB28868);
  }
  return result;
}

void destroy for TickerViewLayoutAttributes(uint64_t a1)
{
  void *v1;

  v1 = *(void **)(a1 + 160);
  if (v1 != (void *)1)

}

uint64_t initializeWithCopy for TickerViewLayoutAttributes(uint64_t a1, uint64_t a2)
{
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  void *v8;
  id v9;

  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  v6 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v6;
  v7 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v7;
  v8 = *(void **)(a2 + 160);
  if (v8 != (void *)1)
    v9 = v8;
  *(_QWORD *)(a1 + 160) = v8;
  return a1;
}

_QWORD *assignWithCopy for TickerViewLayoutAttributes(_QWORD *a1, _QWORD *a2)
{
  _QWORD *v3;
  void *v4;
  void *v5;
  id v6;
  id v8;

  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  a1[7] = a2[7];
  a1[8] = a2[8];
  a1[9] = a2[9];
  a1[10] = a2[10];
  a1[11] = a2[11];
  a1[12] = a2[12];
  a1[13] = a2[13];
  a1[14] = a2[14];
  a1[15] = a2[15];
  a1[16] = a2[16];
  a1[17] = a2[17];
  a1[18] = a2[18];
  a1[19] = a2[19];
  v3 = a1 + 20;
  v4 = (void *)a1[20];
  v5 = (void *)a2[20];
  if (v4 != (void *)1)
  {
    if (v5 != (void *)1)
    {
      *v3 = v5;
      v8 = v5;

      return a1;
    }
    sub_1DC21AC30((id *)a1 + 20);
    v5 = (void *)a2[20];
    goto LABEL_6;
  }
  if (v5 == (void *)1)
  {
LABEL_6:
    *v3 = v5;
    return a1;
  }
  *v3 = v5;
  v6 = v5;
  return a1;
}

id *sub_1DC21AC30(id *a1)
{
  destroy for StockChartModelFactoryProviderOptions(a1);
  return a1;
}

uint64_t assignWithTake for TickerViewLayoutAttributes(uint64_t a1, uint64_t a2)
{
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  void *v8;
  _QWORD *v9;
  uint64_t v10;

  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  v6 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v6;
  v7 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  v9 = (_QWORD *)(a1 + 160);
  v8 = *(void **)(a1 + 160);
  *(_OWORD *)(a1 + 144) = v7;
  v10 = *(_QWORD *)(a2 + 160);
  if (v8 != (void *)1)
  {
    if (v10 != 1)
    {
      *v9 = v10;

      return a1;
    }
    sub_1DC21AC30((id *)(a1 + 160));
    goto LABEL_6;
  }
  if (v10 == 1)
  {
LABEL_6:
    *v9 = 1;
    return a1;
  }
  *v9 = v10;
  return a1;
}

uint64_t getEnumTagSinglePayload for TickerViewLayoutAttributes(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;
  BOOL v5;
  int v6;

  if (!a2)
    return 0;
  if (a2 > 0x7FFFFFFD && *(_BYTE *)(a1 + 168))
    return (*(_DWORD *)a1 + 2147483646);
  v3 = *(_QWORD *)(a1 + 160);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  v5 = __OFSUB__(v4, 1);
  v6 = v4 - 1;
  if (v6 < 0 != v5)
    v6 = -1;
  return (v6 + 1);
}

uint64_t storeEnumTagSinglePayload for TickerViewLayoutAttributes(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 2147483646;
    if (a3 > 0x7FFFFFFD)
      *(_BYTE *)(result + 168) = 1;
  }
  else
  {
    if (a3 > 0x7FFFFFFD)
      *(_BYTE *)(result + 168) = 0;
    if (a2)
      *(_QWORD *)(result + 160) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for TickerViewLayoutAttributes()
{
  return &type metadata for TickerViewLayoutAttributes;
}

uint64_t sub_1DC21ADE4()
{
  sub_1DC21AE54();
  return sub_1DC40625C();
}

unint64_t sub_1DC21AE10()
{
  unint64_t result;

  result = qword_1F034F028;
  if (!qword_1F034F028)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC419D0C, &type metadata for TickerViewLayoutAttributes);
    atomic_store(result, (unint64_t *)&qword_1F034F028);
  }
  return result;
}

unint64_t sub_1DC21AE54()
{
  unint64_t result;

  result = qword_1F034F030;
  if (!qword_1F034F030)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC419D44, &type metadata for TickerViewLayoutAttributes);
    atomic_store(result, (unint64_t *)&qword_1F034F030);
  }
  return result;
}

_QWORD *sub_1DC21AE98(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  char *v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    v7 = a2[3];
    swift_bridgeObjectRetain();
    if (v7)
    {
      a1[2] = a2[2];
      a1[3] = v7;
      v8 = a2[5];
      a1[4] = a2[4];
      a1[5] = v8;
      a1[6] = a2[6];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v10 = *((_OWORD *)a2 + 2);
      *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
      *((_OWORD *)a1 + 2) = v10;
      a1[6] = a2[6];
    }
    sub_1DC21AFC4();
    v12 = *(int *)(v11 + 48);
    v13 = (_OWORD *)((char *)a1 + v12);
    v14 = (char *)a2 + v12;
    v15 = *(_OWORD *)((char *)a2 + v12 + 16);
    *v13 = *(_OWORD *)((char *)a2 + v12);
    v13[1] = v15;
    v16 = *(_OWORD *)((char *)a2 + v12 + 48);
    v13[2] = *(_OWORD *)((char *)a2 + v12 + 32);
    v13[3] = v16;
    v17 = type metadata accessor for StockSearchSectionHeaderViewLayoutAttributes();
    v18 = *(int *)(v17 + 24);
    v19 = (char *)v13 + v18;
    v20 = &v14[v18];
    v21 = sub_1DC4061C0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
    v22 = *(int *)(v17 + 28);
    v23 = *(void **)&v14[v22];
    *(_QWORD *)((char *)v13 + v22) = v23;
    v24 = v23;
  }
  return a1;
}

void sub_1DC21AFC4()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1F034F038)
  {
    type metadata accessor for StockSearchSectionHeaderViewLayoutAttributes();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1F034F038);
  }
}

void sub_1DC21B02C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 24))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_1DC21AFC4();
  v3 = a1 + *(int *)(v2 + 48);
  v4 = type metadata accessor for StockSearchSectionHeaderViewLayoutAttributes();
  v5 = v3 + *(int *)(v4 + 24);
  v6 = sub_1DC4061C0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);

}

_QWORD *sub_1DC21B0BC(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  _OWORD *v10;
  char *v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  swift_bridgeObjectRetain();
  if (v5)
  {
    a1[2] = a2[2];
    a1[3] = v5;
    v6 = a2[5];
    a1[4] = a2[4];
    a1[5] = v6;
    a1[6] = a2[6];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v7 = *((_OWORD *)a2 + 2);
    *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
    *((_OWORD *)a1 + 2) = v7;
    a1[6] = a2[6];
  }
  sub_1DC21AFC4();
  v9 = *(int *)(v8 + 48);
  v10 = (_OWORD *)((char *)a1 + v9);
  v11 = (char *)a2 + v9;
  v12 = *(_OWORD *)((char *)a2 + v9 + 16);
  *v10 = *(_OWORD *)((char *)a2 + v9);
  v10[1] = v12;
  v13 = *(_OWORD *)((char *)a2 + v9 + 48);
  v10[2] = *(_OWORD *)((char *)a2 + v9 + 32);
  v10[3] = v13;
  v14 = type metadata accessor for StockSearchSectionHeaderViewLayoutAttributes();
  v15 = *(int *)(v14 + 24);
  v16 = (char *)v10 + v15;
  v17 = &v11[v15];
  v18 = sub_1DC4061C0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = *(int *)(v14 + 28);
  v20 = *(void **)&v11[v19];
  *(_QWORD *)((char *)v10 + v19) = v20;
  v21 = v20;
  return a1;
}

_QWORD *sub_1DC21B1BC(_QWORD *a1, _QWORD *a2)
{
  _OWORD *v4;
  _OWORD *v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  id v23;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = a1 + 2;
  v5 = a2 + 2;
  v6 = a2[3];
  if (a1[3])
  {
    if (v6)
    {
      a1[2] = a2[2];
      a1[3] = a2[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[4] = a2[4];
      a1[5] = a2[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[6] = a2[6];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1DC21B394((uint64_t)(a1 + 2));
      v7 = a2[6];
      v8 = *((_OWORD *)a2 + 2);
      *v4 = *v5;
      *((_OWORD *)a1 + 2) = v8;
      a1[6] = v7;
    }
  }
  else if (v6)
  {
    a1[2] = a2[2];
    a1[3] = a2[3];
    a1[4] = a2[4];
    a1[5] = a2[5];
    a1[6] = a2[6];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v9 = *v5;
    v10 = *((_OWORD *)a2 + 2);
    a1[6] = a2[6];
    *v4 = v9;
    *((_OWORD *)a1 + 2) = v10;
  }
  sub_1DC21AFC4();
  v12 = *(int *)(v11 + 48);
  v13 = (_QWORD *)((char *)a1 + v12);
  v14 = (char *)a2 + v12;
  *v13 = *(_QWORD *)((char *)a2 + v12);
  v13[1] = *(_QWORD *)((char *)a2 + v12 + 8);
  v13[2] = *(_QWORD *)((char *)a2 + v12 + 16);
  v13[3] = *(_QWORD *)((char *)a2 + v12 + 24);
  v13[4] = *(_QWORD *)((char *)a2 + v12 + 32);
  v13[5] = *(_QWORD *)((char *)a2 + v12 + 40);
  v13[6] = *(_QWORD *)((char *)a2 + v12 + 48);
  v13[7] = *(_QWORD *)((char *)a2 + v12 + 56);
  v15 = type metadata accessor for StockSearchSectionHeaderViewLayoutAttributes();
  v16 = *(int *)(v15 + 24);
  v17 = (char *)v13 + v16;
  v18 = &v14[v16];
  v19 = sub_1DC4061C0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 24))(v17, v18, v19);
  v20 = *(int *)(v15 + 28);
  v21 = *(void **)&v14[v20];
  v22 = *(void **)((char *)v13 + v20);
  *(_QWORD *)((char *)v13 + v20) = v21;
  v23 = v21;

  return a1;
}

uint64_t sub_1DC21B394(uint64_t a1)
{
  destroy for StockListSectionHeaderViewModel();
  return a1;
}

uint64_t sub_1DC21B3C8(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  sub_1DC21AFC4();
  v6 = *(int *)(v5 + 48);
  v7 = (_OWORD *)(a1 + v6);
  v8 = a2 + v6;
  v9 = *(_OWORD *)(a2 + v6 + 16);
  *v7 = *(_OWORD *)(a2 + v6);
  v7[1] = v9;
  v10 = *(_OWORD *)(a2 + v6 + 48);
  v7[2] = *(_OWORD *)(a2 + v6 + 32);
  v7[3] = v10;
  v11 = type metadata accessor for StockSearchSectionHeaderViewLayoutAttributes();
  v12 = *(int *)(v11 + 24);
  v13 = (char *)v7 + v12;
  v14 = v8 + v12;
  v15 = sub_1DC4061C0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
  *(_QWORD *)((char *)v7 + *(int *)(v11 + 28)) = *(_QWORD *)(v8 + *(int *)(v11 + 28));
  return a1;
}

uint64_t sub_1DC21B47C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  _OWORD *v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(a1 + 24))
    goto LABEL_5;
  v5 = *(_QWORD *)(a2 + 24);
  if (!v5)
  {
    sub_1DC21B394(a1 + 16);
LABEL_5:
    v7 = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(a1 + 32) = v7;
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    goto LABEL_6;
  }
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
LABEL_6:
  sub_1DC21AFC4();
  v9 = *(int *)(v8 + 48);
  v10 = (_OWORD *)(a1 + v9);
  v11 = a2 + v9;
  v12 = *(_OWORD *)(a2 + v9 + 16);
  *v10 = *(_OWORD *)(a2 + v9);
  v10[1] = v12;
  v13 = *(_OWORD *)(a2 + v9 + 48);
  v10[2] = *(_OWORD *)(a2 + v9 + 32);
  v10[3] = v13;
  v14 = type metadata accessor for StockSearchSectionHeaderViewLayoutAttributes();
  v15 = *(int *)(v14 + 24);
  v16 = (char *)v10 + v15;
  v17 = v11 + v15;
  v18 = sub_1DC4061C0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = *(int *)(v14 + 28);
  v20 = *(void **)((char *)v10 + v19);
  *(_QWORD *)((char *)v10 + v19) = *(_QWORD *)(v11 + v19);

  return a1;
}

uint64_t sub_1DC21B590(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1DC21AFC4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_1DC21B5CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  sub_1DC21AFC4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, a2, a3, v6);
}

uint64_t sub_1DC21B618()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v13;

  v1 = type metadata accessor for StockSearchSectionHeaderViewLayoutAttributes();
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC21B918(v0, (uint64_t)v6);
  v7 = *((_QWORD *)v6 + 2);
  v8 = *((_QWORD *)v6 + 3);
  swift_bridgeObjectRelease();
  sub_1DC21B95C(v7, v8);
  sub_1DC21AFC4();
  sub_1DC21B998((uint64_t)&v6[*(int *)(v9 + 48)], (uint64_t)v3);
  sub_1DC112060();
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1DC40DC10;
  *(_QWORD *)(v10 + 56) = v1;
  *(_QWORD *)(v10 + 64) = sub_1DC080808(&qword_1F034F040, (uint64_t (*)(uint64_t))type metadata accessor for StockSearchSectionHeaderViewLayoutAttributes, (uint64_t)&unk_1DC40E5F0);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v10 + 32));
  sub_1DC21B998((uint64_t)v3, (uint64_t)boxed_opaque_existential_1);
  return v10;
}

uint64_t sub_1DC21B774()
{
  sub_1DC080808(&qword_1F034F048, (uint64_t (*)(uint64_t))type metadata accessor for StockSearchLayoutSectionDescriptor, (uint64_t)&unk_1DC419E68);
  return sub_1DC40673C();
}

double sub_1DC21B7B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  double v12;
  uint64_t v14;

  v1 = v0;
  v2 = type metadata accessor for StockSearchSectionHeaderViewLayoutAttributes();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC21B918(v1, (uint64_t)v7);
  v8 = *((_QWORD *)v7 + 2);
  v9 = *((_QWORD *)v7 + 3);
  swift_bridgeObjectRelease();
  sub_1DC21B95C(v8, v9);
  sub_1DC21AFC4();
  sub_1DC21B998((uint64_t)&v7[*(int *)(v10 + 48)], (uint64_t)v4);
  sub_1DC080808(&qword_1F034C340, (uint64_t (*)(uint64_t))type metadata accessor for StockSearchSectionHeaderViewLayoutAttributes, (uint64_t)&unk_1DC40E5A0);
  sub_1DC40625C();
  v12 = v11;
  sub_1DC21B9DC((uint64_t)v4);
  return v12;
}

uint64_t sub_1DC21B8EC()
{
  return sub_1DC080808(&qword_1EDB3CB88, (uint64_t (*)(uint64_t))type metadata accessor for StockSearchLayoutSectionDescriptor, (uint64_t)&unk_1DC419E18);
}

uint64_t sub_1DC21B918(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for StockSearchLayoutSectionDescriptor();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC21B95C(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1DC21B998(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for StockSearchSectionHeaderViewLayoutAttributes();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC21B9DC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for StockSearchSectionHeaderViewLayoutAttributes();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t static Settings.Welcome.Version.effectiveLatestCompleted.getter()
{
  uint64_t result;
  uint64_t v1;

  sub_1DC40133C();
  sub_1DC401324();
  if (qword_1EDB27490 != -1)
    swift_once();
  sub_1DC401318();
  swift_release();
  result = v1;
  if (v1 < 0)
  {
    sub_1DC401324();
    if (qword_1EDB28F98 != -1)
      swift_once();
    sub_1DC401318();
    swift_release();
    return v1;
  }
  return result;
}

uint64_t static Settings.Welcome.Version.minimumCompletedForTracking.getter()
{
  return 1;
}

uint64_t sub_1DC21BAF0(uint64_t a1)
{
  return sub_1DC133150(a1, 0, 0xD000000000000027, 0x80000001DC43DCE0, &qword_1EDB28F90);
}

uint64_t static Settings.Welcome.Version.latestCompleted.getter()
{
  return sub_1DC10D910(&qword_1EDB28F98);
}

uint64_t sub_1DC21BB38(uint64_t a1)
{
  return sub_1DC21BBAC(1.6, a1, 0xD000000000000035, 0x80000001DC43DC60, &qword_1F034F050);
}

uint64_t static Settings.Welcome.minimumDelayOnPage1.getter()
{
  return sub_1DC10D910(&qword_1F034AE68);
}

uint64_t sub_1DC21BB80(uint64_t a1)
{
  return sub_1DC21BBAC(0.65, a1, 0xD00000000000003ELL, 0x80000001DC43DCA0, &qword_1F034F058);
}

uint64_t sub_1DC21BBAC(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  _QWORD v16[2];

  v7 = sub_1DC401348();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1DC401354();
  v12 = MEMORY[0x1E0C80A78](v11);
  (*(void (**)(char *, _QWORD, __n128))(v14 + 104))((char *)v16 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E0DB5800], v12);
  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E0DB57E0], v7);
  *(double *)&v16[1] = a1;
  sub_1DC08A0F4(0, (unint64_t *)&unk_1F034F208);
  swift_allocObject();
  result = sub_1DC4013A8();
  *a5 = result;
  return result;
}

uint64_t static Settings.Welcome.Animations.WelcomeToStocksScaleUp.initialScale.getter()
{
  return sub_1DC10D910(&qword_1F034AE70);
}

uint64_t sub_1DC21BD10(uint64_t a1)
{
  return sub_1DC21BBAC(1.0, a1, 0xD000000000000035, 0x80000001DC43DC60, &qword_1F034F060);
}

uint64_t static Settings.Welcome.Animations.WelcomeToStocksScaleUp.mass.getter()
{
  return sub_1DC10D910(&qword_1F034AE78);
}

uint64_t sub_1DC21BD54(uint64_t a1)
{
  return sub_1DC21BBAC(50.0, a1, 0xD00000000000003ALL, 0x80000001DC43DC20, &qword_1F034F068);
}

uint64_t static Settings.Welcome.Animations.WelcomeToStocksScaleUp.stiffness.getter()
{
  return sub_1DC10D910(&qword_1F034AE80);
}

uint64_t sub_1DC21BD9C(uint64_t a1)
{
  return sub_1DC21BBAC(14.0, a1, 0xD000000000000038, 0x80000001DC43DBE0, &qword_1F034F070);
}

uint64_t static Settings.Welcome.Animations.WelcomeToStocksScaleUp.damping.getter()
{
  return sub_1DC10D910(&qword_1F034AE88);
}

uint64_t sub_1DC21BDE0(uint64_t a1, uint64_t a2)
{
  return sub_1DC21CD80(a1, a2, &qword_1F034AE78);
}

uint64_t sub_1DC21BDFC(uint64_t a1, uint64_t a2)
{
  return sub_1DC21CD80(a1, a2, &qword_1F034AE80);
}

uint64_t sub_1DC21BE18(uint64_t a1, uint64_t a2)
{
  return sub_1DC21CD80(a1, a2, &qword_1F034AE88);
}

void sub_1DC21BE34()
{
  sub_1DC21D36C();
  JUMPOUT(0x1DF0C5810);
}

uint64_t sub_1DC21BE5C()
{
  sub_1DC21D36C();
  return sub_1DC404FA8();
}

uint64_t sub_1DC21BE84(uint64_t a1)
{
  return sub_1DC21BBAC(0.5, a1, 0xD00000000000003CLL, 0x80000001DC43DBA0, &qword_1F034F078);
}

uint64_t static Settings.Welcome.Animations.WelcomeToStocksFadeIn.duration.getter()
{
  return sub_1DC10D910(&qword_1F034AE90);
}

uint64_t sub_1DC21BEC8(uint64_t a1)
{
  return sub_1DC21BBAC(0.25, a1, 0xD000000000000041, 0x80000001DC43DB50, &qword_1F034F080);
}

uint64_t static Settings.Welcome.Animations.WelcomeToStocksFadeIn.controlOneX.getter()
{
  return sub_1DC10D910(&qword_1F034AE98);
}

uint64_t sub_1DC21BF0C(uint64_t a1)
{
  return sub_1DC21BBAC(0.1, a1, 0xD000000000000041, 0x80000001DC43DB00, &qword_1F034F088);
}

uint64_t static Settings.Welcome.Animations.WelcomeToStocksFadeIn.controlOneY.getter()
{
  return sub_1DC10D910(&qword_1F034AEA0);
}

uint64_t sub_1DC21BF54(uint64_t a1)
{
  return sub_1DC21BBAC(0.75, a1, 0xD000000000000041, 0x80000001DC43DAB0, &qword_1F034F090);
}

uint64_t static Settings.Welcome.Animations.WelcomeToStocksFadeIn.controlTwoX.getter()
{
  return sub_1DC10D910(&qword_1F034AEA8);
}

uint64_t sub_1DC21BF98(uint64_t a1)
{
  return sub_1DC21BBAC(1.0, a1, 0xD000000000000041, 0x80000001DC43DA60, &qword_1F034F098);
}

uint64_t static Settings.Welcome.Animations.WelcomeToStocksFadeIn.controlTwoY.getter()
{
  return sub_1DC10D910(&qword_1F034AEB0);
}

uint64_t sub_1DC21BFDC(uint64_t a1, uint64_t a2)
{
  return sub_1DC21CD80(a1, a2, &qword_1F034AE90);
}

uint64_t sub_1DC21BFF8(uint64_t a1, uint64_t a2)
{
  return sub_1DC21CD80(a1, a2, &qword_1F034AE98);
}

uint64_t sub_1DC21C014(uint64_t a1, uint64_t a2)
{
  return sub_1DC21CD80(a1, a2, &qword_1F034AEA0);
}

uint64_t sub_1DC21C030(uint64_t a1, uint64_t a2)
{
  return sub_1DC21CD80(a1, a2, &qword_1F034AEA8);
}

uint64_t sub_1DC21C04C(uint64_t a1, uint64_t a2)
{
  return sub_1DC21CD80(a1, a2, &qword_1F034AEB0);
}

uint64_t sub_1DC21C068()
{
  sub_1DC21D328();
  return sub_1DC404E58();
}

uint64_t sub_1DC21C090()
{
  sub_1DC21D328();
  return sub_1DC404E64();
}

uint64_t sub_1DC21C0B8(uint64_t a1)
{
  return sub_1DC21BBAC(0.5, a1, 0xD00000000000003ALL, 0x80000001DC43DA20, &qword_1F034F0A0);
}

uint64_t static Settings.Welcome.Animations.ActivityIndicatorFadeIn.delay.getter()
{
  return sub_1DC10D910(&qword_1F034AEB8);
}

uint64_t sub_1DC21C0FC(uint64_t a1)
{
  return sub_1DC21BBAC(0.25, a1, 0xD00000000000003DLL, 0x80000001DC43D9E0, &qword_1F034F0A8);
}

uint64_t static Settings.Welcome.Animations.ActivityIndicatorFadeIn.duration.getter()
{
  return sub_1DC10D910(&qword_1F034AEC0);
}

uint64_t sub_1DC21C140(uint64_t a1)
{
  return sub_1DC21BBAC(0.25, a1, 0xD000000000000042, 0x80000001DC43D990, &qword_1F034F0B0);
}

uint64_t static Settings.Welcome.Animations.ActivityIndicatorFadeIn.controlOneX.getter()
{
  return sub_1DC10D910(&qword_1F034AEC8);
}

uint64_t sub_1DC21C184(uint64_t a1)
{
  return sub_1DC21BBAC(0.1, a1, 0xD000000000000042, 0x80000001DC43D940, &qword_1F034F0B8);
}

uint64_t static Settings.Welcome.Animations.ActivityIndicatorFadeIn.controlOneY.getter()
{
  return sub_1DC10D910(&qword_1F034AED0);
}

uint64_t sub_1DC21C1CC(uint64_t a1)
{
  return sub_1DC21BBAC(0.75, a1, 0xD000000000000042, 0x80000001DC43D8F0, &qword_1F034F0C0);
}

uint64_t static Settings.Welcome.Animations.ActivityIndicatorFadeIn.controlTwoX.getter()
{
  return sub_1DC10D910(&qword_1F034AED8);
}

uint64_t sub_1DC21C210(uint64_t a1)
{
  return sub_1DC21BBAC(1.0, a1, 0xD000000000000042, 0x80000001DC43D8A0, &qword_1F034F0C8);
}

uint64_t static Settings.Welcome.Animations.ActivityIndicatorFadeIn.controlTwoY.getter()
{
  return sub_1DC10D910(&qword_1F034AEE0);
}

uint64_t sub_1DC21C254(uint64_t a1, uint64_t a2)
{
  return sub_1DC21CD80(a1, a2, &qword_1F034AEC0);
}

uint64_t sub_1DC21C270(uint64_t a1, uint64_t a2)
{
  return sub_1DC21CD80(a1, a2, &qword_1F034AEC8);
}

uint64_t sub_1DC21C28C(uint64_t a1, uint64_t a2)
{
  return sub_1DC21CD80(a1, a2, &qword_1F034AED0);
}

uint64_t sub_1DC21C2A8(uint64_t a1, uint64_t a2)
{
  return sub_1DC21CD80(a1, a2, &qword_1F034AED8);
}

uint64_t sub_1DC21C2C4(uint64_t a1, uint64_t a2)
{
  return sub_1DC21CD80(a1, a2, &qword_1F034AEE0);
}

uint64_t sub_1DC21C2E0()
{
  sub_1DC21D2E4();
  return sub_1DC404E58();
}

uint64_t sub_1DC21C308()
{
  sub_1DC21D2E4();
  return sub_1DC404E64();
}

uint64_t sub_1DC21C330(uint64_t a1)
{
  return sub_1DC21BBAC(0.08, a1, 0xD000000000000033, 0x80000001DC43D860, &qword_1F034F0D0);
}

uint64_t static Settings.Welcome.Animations.SpinnerFadeOut.duration.getter()
{
  return sub_1DC10D910(&qword_1F034AEE8);
}

uint64_t sub_1DC21C378(uint64_t a1)
{
  return sub_1DC21BBAC(0.25, a1, 0xD000000000000038, 0x80000001DC43D820, &qword_1F034F0D8);
}

uint64_t static Settings.Welcome.Animations.SpinnerFadeOut.controlOneX.getter()
{
  return sub_1DC10D910(&qword_1F034AEF0);
}

uint64_t sub_1DC21C3BC(uint64_t a1)
{
  return sub_1DC21BBAC(0.1, a1, 0xD000000000000038, 0x80000001DC43D7E0, &qword_1F034F0E0);
}

uint64_t static Settings.Welcome.Animations.SpinnerFadeOut.controlOneY.getter()
{
  return sub_1DC10D910(&qword_1F034AEF8);
}

uint64_t sub_1DC21C404(uint64_t a1)
{
  return sub_1DC21BBAC(0.75, a1, 0xD000000000000038, 0x80000001DC43D7A0, &qword_1F034F0E8);
}

uint64_t static Settings.Welcome.Animations.SpinnerFadeOut.controlTwoX.getter()
{
  return sub_1DC10D910(&qword_1F034AF00);
}

uint64_t sub_1DC21C448(uint64_t a1)
{
  return sub_1DC21BBAC(1.0, a1, 0xD000000000000038, 0x80000001DC43D760, &qword_1F034F0F0);
}

uint64_t static Settings.Welcome.Animations.SpinnerFadeOut.controlTwoY.getter()
{
  return sub_1DC10D910(&qword_1F034AF08);
}

uint64_t sub_1DC21C48C(uint64_t a1, uint64_t a2)
{
  return sub_1DC21CD80(a1, a2, &qword_1F034AEE8);
}

uint64_t sub_1DC21C4A8(uint64_t a1, uint64_t a2)
{
  return sub_1DC21CD80(a1, a2, &qword_1F034AEF0);
}

uint64_t sub_1DC21C4C4(uint64_t a1, uint64_t a2)
{
  return sub_1DC21CD80(a1, a2, &qword_1F034AEF8);
}

uint64_t sub_1DC21C4E0(uint64_t a1, uint64_t a2)
{
  return sub_1DC21CD80(a1, a2, &qword_1F034AF00);
}

uint64_t sub_1DC21C4FC(uint64_t a1, uint64_t a2)
{
  return sub_1DC21CD80(a1, a2, &qword_1F034AF08);
}

uint64_t sub_1DC21C518()
{
  sub_1DC21D2A0();
  return sub_1DC404E58();
}

uint64_t sub_1DC21C540()
{
  sub_1DC21D2A0();
  return sub_1DC404E64();
}

uint64_t sub_1DC21C568(uint64_t a1)
{
  return sub_1DC21BBAC(0.2, a1, 0xD000000000000034, 0x80000001DC43D720, &qword_1F034F0F8);
}

uint64_t static Settings.Welcome.Animations.AppIconFadeOut.duration.getter()
{
  return sub_1DC10D910(&qword_1F034AF10);
}

uint64_t sub_1DC21C5B0(uint64_t a1)
{
  return sub_1DC21BBAC(0.25, a1, 0xD000000000000039, 0x80000001DC43D6E0, &qword_1F034F100);
}

uint64_t static Settings.Welcome.Animations.AppIconFadeOut.controlOneX.getter()
{
  return sub_1DC10D910(&qword_1F034AF18);
}

uint64_t sub_1DC21C5F4(uint64_t a1)
{
  return sub_1DC21BBAC(0.1, a1, 0xD000000000000039, 0x80000001DC43D6A0, &qword_1F034F108);
}

uint64_t static Settings.Welcome.Animations.AppIconFadeOut.controlOneY.getter()
{
  return sub_1DC10D910(&qword_1F034AF20);
}

uint64_t sub_1DC21C63C(uint64_t a1)
{
  return sub_1DC21BBAC(0.75, a1, 0xD000000000000039, 0x80000001DC43D660, &qword_1F034F110);
}

uint64_t static Settings.Welcome.Animations.AppIconFadeOut.controlTwoX.getter()
{
  return sub_1DC10D910(&qword_1F034AF28);
}

uint64_t sub_1DC21C680(uint64_t a1)
{
  return sub_1DC21BBAC(1.0, a1, 0xD000000000000039, 0x80000001DC43D620, &qword_1F034F118);
}

uint64_t static Settings.Welcome.Animations.AppIconFadeOut.controlTwoY.getter()
{
  return sub_1DC10D910(&qword_1F034AF30);
}

uint64_t sub_1DC21C6C4(uint64_t a1, uint64_t a2)
{
  return sub_1DC21CD80(a1, a2, &qword_1F034AF10);
}

uint64_t sub_1DC21C6E0(uint64_t a1, uint64_t a2)
{
  return sub_1DC21CD80(a1, a2, &qword_1F034AF18);
}

uint64_t sub_1DC21C6FC(uint64_t a1, uint64_t a2)
{
  return sub_1DC21CD80(a1, a2, &qword_1F034AF20);
}

uint64_t sub_1DC21C718(uint64_t a1, uint64_t a2)
{
  return sub_1DC21CD80(a1, a2, &qword_1F034AF28);
}

uint64_t sub_1DC21C734(uint64_t a1, uint64_t a2)
{
  return sub_1DC21CD80(a1, a2, &qword_1F034AF30);
}

uint64_t sub_1DC21C750()
{
  sub_1DC21D25C();
  return sub_1DC404E58();
}

uint64_t sub_1DC21C778()
{
  sub_1DC21D25C();
  return sub_1DC404E64();
}

uint64_t sub_1DC21C7A0(uint64_t a1)
{
  return sub_1DC21BBAC(0.04, a1, 0xD00000000000002CLL, 0x80000001DC43D5F0, &qword_1F034F120);
}

uint64_t static Settings.Welcome.Animations.Page2Moves.delay.getter()
{
  return sub_1DC10D910(&qword_1F034AF38);
}

uint64_t sub_1DC21C7E8(uint64_t a1)
{
  return sub_1DC21BBAC(1.0, a1, 0xD00000000000002BLL, 0x80000001DC43D5C0, &qword_1F034F128);
}

uint64_t static Settings.Welcome.Animations.Page2Moves.mass.getter()
{
  return sub_1DC10D910(&qword_1F034AF40);
}

uint64_t sub_1DC21C82C(uint64_t a1)
{
  return sub_1DC21BBAC(90.0, a1, 0xD000000000000030, 0x80000001DC43D580, &qword_1F034F130);
}

uint64_t static Settings.Welcome.Animations.Page2Moves.stiffness.getter()
{
  return sub_1DC10D910(&qword_1F034AF48);
}

uint64_t sub_1DC21C878(uint64_t a1)
{
  return sub_1DC21BBAC(18.0, a1, 0xD00000000000002ELL, 0x80000001DC43D550, &qword_1F034F138);
}

uint64_t static Settings.Welcome.Animations.Page2Moves.damping.getter()
{
  return sub_1DC10D910(&qword_1F034AF50);
}

uint64_t sub_1DC21C8BC(uint64_t a1, uint64_t a2)
{
  return sub_1DC21CD80(a1, a2, &qword_1F034AF40);
}

uint64_t sub_1DC21C8D8(uint64_t a1, uint64_t a2)
{
  return sub_1DC21CD80(a1, a2, &qword_1F034AF48);
}

uint64_t sub_1DC21C8F4(uint64_t a1, uint64_t a2)
{
  return sub_1DC21CD80(a1, a2, &qword_1F034AF50);
}

void sub_1DC21C910()
{
  sub_1DC21D218();
  JUMPOUT(0x1DF0C5810);
}

uint64_t sub_1DC21C938()
{
  sub_1DC21D218();
  return sub_1DC404FA8();
}

uint64_t sub_1DC21C960(uint64_t a1)
{
  return sub_1DC21BBAC(0.16, a1, 0xD000000000000032, 0x80000001DC43D510, &qword_1F034F140);
}

uint64_t static Settings.Welcome.Animations.Page2FadeIns.duration.getter()
{
  return sub_1DC10D910(&qword_1F034AF58);
}

uint64_t sub_1DC21C9A8(uint64_t a1)
{
  return sub_1DC21BBAC(0.25, a1, 0xD000000000000037, 0x80000001DC43D4D0, &qword_1F034F148);
}

uint64_t static Settings.Welcome.Animations.Page2FadeIns.controlOneX.getter()
{
  return sub_1DC10D910(&qword_1F034AF60);
}

uint64_t sub_1DC21C9EC(uint64_t a1)
{
  return sub_1DC21BBAC(0.1, a1, 0xD000000000000037, 0x80000001DC43D490, &qword_1F034F150);
}

uint64_t static Settings.Welcome.Animations.Page2FadeIns.controlOneY.getter()
{
  return sub_1DC10D910(&qword_1F034AF68);
}

uint64_t sub_1DC21CA34(uint64_t a1)
{
  return sub_1DC21BBAC(0.75, a1, 0xD000000000000037, 0x80000001DC43D450, &qword_1F034F158);
}

uint64_t static Settings.Welcome.Animations.Page2FadeIns.controlTwoX.getter()
{
  return sub_1DC10D910(&qword_1F034AF70);
}

uint64_t sub_1DC21CA78(uint64_t a1)
{
  return sub_1DC21BBAC(1.0, a1, 0xD000000000000037, 0x80000001DC43D410, &qword_1F034F160);
}

uint64_t static Settings.Welcome.Animations.Page2FadeIns.controlTwoY.getter()
{
  return sub_1DC10D910(&qword_1F034AF78);
}

uint64_t sub_1DC21CABC(uint64_t a1, uint64_t a2)
{
  return sub_1DC21CD80(a1, a2, &qword_1F034AF58);
}

uint64_t sub_1DC21CAD8(uint64_t a1, uint64_t a2)
{
  return sub_1DC21CD80(a1, a2, &qword_1F034AF60);
}

uint64_t sub_1DC21CAF4(uint64_t a1, uint64_t a2)
{
  return sub_1DC21CD80(a1, a2, &qword_1F034AF68);
}

uint64_t sub_1DC21CB10(uint64_t a1, uint64_t a2)
{
  return sub_1DC21CD80(a1, a2, &qword_1F034AF70);
}

uint64_t sub_1DC21CB2C(uint64_t a1, uint64_t a2)
{
  return sub_1DC21CD80(a1, a2, &qword_1F034AF78);
}

uint64_t sub_1DC21CB48()
{
  sub_1DC21D1D4();
  return sub_1DC404E58();
}

uint64_t sub_1DC21CB70()
{
  sub_1DC21D1D4();
  return sub_1DC404E64();
}

uint64_t sub_1DC21CB98(uint64_t a1)
{
  return sub_1DC21BBAC(0.2, a1, 0xD00000000000002FLL, 0x80000001DC43D3E0, &qword_1F034F168);
}

uint64_t static Settings.Welcome.Animations.DismissFade.duration.getter()
{
  return sub_1DC10D910(&qword_1F034AF80);
}

uint64_t sub_1DC21CBE0(uint64_t a1)
{
  return sub_1DC21BBAC(0.25, a1, 0xD000000000000034, 0x80000001DC43D3A0, &qword_1F034F170);
}

uint64_t static Settings.Welcome.Animations.DismissFade.controlOneX.getter()
{
  return sub_1DC10D910(&qword_1F034AF88);
}

uint64_t sub_1DC21CC24(uint64_t a1)
{
  return sub_1DC21BBAC(0.1, a1, 0xD000000000000034, 0x80000001DC43D360, &qword_1F034F178);
}

uint64_t static Settings.Welcome.Animations.DismissFade.controlOneY.getter()
{
  return sub_1DC10D910(&qword_1F034AF90);
}

uint64_t sub_1DC21CC6C(uint64_t a1)
{
  return sub_1DC21BBAC(0.75, a1, 0xD000000000000034, 0x80000001DC43D320, &qword_1F034F180);
}

uint64_t static Settings.Welcome.Animations.DismissFade.controlTwoX.getter()
{
  return sub_1DC10D910(&qword_1F034AF98);
}

uint64_t sub_1DC21CCB0(uint64_t a1)
{
  return sub_1DC21BBAC(1.0, a1, 0xD000000000000034, 0x80000001DC43D2E0, &qword_1F034F188);
}

uint64_t static Settings.Welcome.Animations.DismissFade.controlTwoY.getter()
{
  return sub_1DC10D910(&qword_1F034AFA0);
}

uint64_t sub_1DC21CCF4(uint64_t a1, uint64_t a2)
{
  return sub_1DC21CD80(a1, a2, &qword_1F034AF80);
}

uint64_t sub_1DC21CD10(uint64_t a1, uint64_t a2)
{
  return sub_1DC21CD80(a1, a2, &qword_1F034AF88);
}

uint64_t sub_1DC21CD2C(uint64_t a1, uint64_t a2)
{
  return sub_1DC21CD80(a1, a2, &qword_1F034AF90);
}

uint64_t sub_1DC21CD48(uint64_t a1, uint64_t a2)
{
  return sub_1DC21CD80(a1, a2, &qword_1F034AF98);
}

uint64_t sub_1DC21CD64(uint64_t a1, uint64_t a2)
{
  return sub_1DC21CD80(a1, a2, &qword_1F034AFA0);
}

uint64_t sub_1DC21CD80(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  if (*a3 != -1)
    swift_once();
  return swift_retain();
}

uint64_t sub_1DC21CDBC()
{
  sub_1DC21D190();
  return sub_1DC404E58();
}

uint64_t sub_1DC21CDE4()
{
  sub_1DC21D190();
  return sub_1DC404E64();
}

BOOL _s11TeaSettings0B0C8StocksUIE7WelcomeV7VersionV14isBrandNewUserSbvgZ_0()
{
  uint64_t v0;
  uint64_t v2;

  sub_1DC40133C();
  sub_1DC401324();
  if (qword_1EDB27490 != -1)
    swift_once();
  sub_1DC401318();
  swift_release();
  v0 = v2;
  if (v2 < 0)
  {
    sub_1DC401324();
    if (qword_1EDB28F98 != -1)
      swift_once();
    sub_1DC401318();
    swift_release();
    v0 = v2;
  }
  return v0 == 0;
}

unint64_t sub_1DC21CEE8()
{
  unint64_t result;

  result = qword_1F034F190;
  if (!qword_1F034F190)
  {
    result = MEMORY[0x1DF0CAB8C](&protocol conformance descriptor for Settings.Welcome.Animations.WelcomeToStocksScaleUp, &type metadata for Settings.Welcome.Animations.WelcomeToStocksScaleUp);
    atomic_store(result, (unint64_t *)&qword_1F034F190);
  }
  return result;
}

unint64_t sub_1DC21CF30()
{
  unint64_t result;

  result = qword_1F034F198;
  if (!qword_1F034F198)
  {
    result = MEMORY[0x1DF0CAB8C](&protocol conformance descriptor for Settings.Welcome.Animations.WelcomeToStocksFadeIn, &type metadata for Settings.Welcome.Animations.WelcomeToStocksFadeIn);
    atomic_store(result, (unint64_t *)&qword_1F034F198);
  }
  return result;
}

unint64_t sub_1DC21CF78()
{
  unint64_t result;

  result = qword_1F034F1A0;
  if (!qword_1F034F1A0)
  {
    result = MEMORY[0x1DF0CAB8C](&protocol conformance descriptor for Settings.Welcome.Animations.ActivityIndicatorFadeIn, &type metadata for Settings.Welcome.Animations.ActivityIndicatorFadeIn);
    atomic_store(result, (unint64_t *)&qword_1F034F1A0);
  }
  return result;
}

unint64_t sub_1DC21CFC0()
{
  unint64_t result;

  result = qword_1F034F1A8;
  if (!qword_1F034F1A8)
  {
    result = MEMORY[0x1DF0CAB8C](&protocol conformance descriptor for Settings.Welcome.Animations.SpinnerFadeOut, &type metadata for Settings.Welcome.Animations.SpinnerFadeOut);
    atomic_store(result, (unint64_t *)&qword_1F034F1A8);
  }
  return result;
}

unint64_t sub_1DC21D008()
{
  unint64_t result;

  result = qword_1F034F1B0;
  if (!qword_1F034F1B0)
  {
    result = MEMORY[0x1DF0CAB8C](&protocol conformance descriptor for Settings.Welcome.Animations.AppIconFadeOut, &type metadata for Settings.Welcome.Animations.AppIconFadeOut);
    atomic_store(result, (unint64_t *)&qword_1F034F1B0);
  }
  return result;
}

unint64_t sub_1DC21D050()
{
  unint64_t result;

  result = qword_1F034F1B8;
  if (!qword_1F034F1B8)
  {
    result = MEMORY[0x1DF0CAB8C](&protocol conformance descriptor for Settings.Welcome.Animations.Page2Moves, &type metadata for Settings.Welcome.Animations.Page2Moves);
    atomic_store(result, (unint64_t *)&qword_1F034F1B8);
  }
  return result;
}

unint64_t sub_1DC21D098()
{
  unint64_t result;

  result = qword_1F034F1C0;
  if (!qword_1F034F1C0)
  {
    result = MEMORY[0x1DF0CAB8C](&protocol conformance descriptor for Settings.Welcome.Animations.Page2FadeIns, &type metadata for Settings.Welcome.Animations.Page2FadeIns);
    atomic_store(result, (unint64_t *)&qword_1F034F1C0);
  }
  return result;
}

ValueMetadata *type metadata accessor for Settings.Welcome()
{
  return &type metadata for Settings.Welcome;
}

ValueMetadata *type metadata accessor for Settings.Welcome.Version()
{
  return &type metadata for Settings.Welcome.Version;
}

ValueMetadata *type metadata accessor for Settings.Welcome.Animations()
{
  return &type metadata for Settings.Welcome.Animations;
}

ValueMetadata *type metadata accessor for Settings.Welcome.Animations.WelcomeToStocksScaleUp()
{
  return &type metadata for Settings.Welcome.Animations.WelcomeToStocksScaleUp;
}

ValueMetadata *type metadata accessor for Settings.Welcome.Animations.WelcomeToStocksFadeIn()
{
  return &type metadata for Settings.Welcome.Animations.WelcomeToStocksFadeIn;
}

ValueMetadata *type metadata accessor for Settings.Welcome.Animations.ActivityIndicatorFadeIn()
{
  return &type metadata for Settings.Welcome.Animations.ActivityIndicatorFadeIn;
}

ValueMetadata *type metadata accessor for Settings.Welcome.Animations.SpinnerFadeOut()
{
  return &type metadata for Settings.Welcome.Animations.SpinnerFadeOut;
}

ValueMetadata *type metadata accessor for Settings.Welcome.Animations.AppIconFadeOut()
{
  return &type metadata for Settings.Welcome.Animations.AppIconFadeOut;
}

ValueMetadata *type metadata accessor for Settings.Welcome.Animations.Page2Moves()
{
  return &type metadata for Settings.Welcome.Animations.Page2Moves;
}

ValueMetadata *type metadata accessor for Settings.Welcome.Animations.Page2FadeIns()
{
  return &type metadata for Settings.Welcome.Animations.Page2FadeIns;
}

ValueMetadata *type metadata accessor for Settings.Welcome.Animations.DismissFade()
{
  return &type metadata for Settings.Welcome.Animations.DismissFade;
}

unint64_t sub_1DC21D190()
{
  unint64_t result;

  result = qword_1F034F1C8;
  if (!qword_1F034F1C8)
  {
    result = MEMORY[0x1DF0CAB8C](&protocol conformance descriptor for Settings.Welcome.Animations.DismissFade, &type metadata for Settings.Welcome.Animations.DismissFade);
    atomic_store(result, (unint64_t *)&qword_1F034F1C8);
  }
  return result;
}

unint64_t sub_1DC21D1D4()
{
  unint64_t result;

  result = qword_1F034F1D0;
  if (!qword_1F034F1D0)
  {
    result = MEMORY[0x1DF0CAB8C](&protocol conformance descriptor for Settings.Welcome.Animations.Page2FadeIns, &type metadata for Settings.Welcome.Animations.Page2FadeIns);
    atomic_store(result, (unint64_t *)&qword_1F034F1D0);
  }
  return result;
}

unint64_t sub_1DC21D218()
{
  unint64_t result;

  result = qword_1F034F1D8;
  if (!qword_1F034F1D8)
  {
    result = MEMORY[0x1DF0CAB8C](&protocol conformance descriptor for Settings.Welcome.Animations.Page2Moves, &type metadata for Settings.Welcome.Animations.Page2Moves);
    atomic_store(result, (unint64_t *)&qword_1F034F1D8);
  }
  return result;
}

unint64_t sub_1DC21D25C()
{
  unint64_t result;

  result = qword_1F034F1E0;
  if (!qword_1F034F1E0)
  {
    result = MEMORY[0x1DF0CAB8C](&protocol conformance descriptor for Settings.Welcome.Animations.AppIconFadeOut, &type metadata for Settings.Welcome.Animations.AppIconFadeOut);
    atomic_store(result, (unint64_t *)&qword_1F034F1E0);
  }
  return result;
}

unint64_t sub_1DC21D2A0()
{
  unint64_t result;

  result = qword_1F034F1E8;
  if (!qword_1F034F1E8)
  {
    result = MEMORY[0x1DF0CAB8C](&protocol conformance descriptor for Settings.Welcome.Animations.SpinnerFadeOut, &type metadata for Settings.Welcome.Animations.SpinnerFadeOut);
    atomic_store(result, (unint64_t *)&qword_1F034F1E8);
  }
  return result;
}

unint64_t sub_1DC21D2E4()
{
  unint64_t result;

  result = qword_1F034F1F0;
  if (!qword_1F034F1F0)
  {
    result = MEMORY[0x1DF0CAB8C](&protocol conformance descriptor for Settings.Welcome.Animations.ActivityIndicatorFadeIn, &type metadata for Settings.Welcome.Animations.ActivityIndicatorFadeIn);
    atomic_store(result, (unint64_t *)&qword_1F034F1F0);
  }
  return result;
}

unint64_t sub_1DC21D328()
{
  unint64_t result;

  result = qword_1F034F1F8;
  if (!qword_1F034F1F8)
  {
    result = MEMORY[0x1DF0CAB8C](&protocol conformance descriptor for Settings.Welcome.Animations.WelcomeToStocksFadeIn, &type metadata for Settings.Welcome.Animations.WelcomeToStocksFadeIn);
    atomic_store(result, (unint64_t *)&qword_1F034F1F8);
  }
  return result;
}

unint64_t sub_1DC21D36C()
{
  unint64_t result;

  result = qword_1F034F200;
  if (!qword_1F034F200)
  {
    result = MEMORY[0x1DF0CAB8C](&protocol conformance descriptor for Settings.Welcome.Animations.WelcomeToStocksScaleUp, &type metadata for Settings.Welcome.Animations.WelcomeToStocksScaleUp);
    atomic_store(result, (unint64_t *)&qword_1F034F200);
  }
  return result;
}

uint64_t sub_1DC21D3B4(uint64_t a1)
{
  return sub_1DC21D3D8(a1, 0xD000000000000023, 0x80000001DC43DE90, &qword_1EDB5E168);
}

uint64_t sub_1DC21D3D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t result;
  uint64_t v11;

  sub_1DC089DA4(0, &qword_1EDB410B0, type metadata accessor for StocksActivity, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DBC400]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v11 - v8;
  sub_1DC089DA4(0, (unint64_t *)&unk_1EDB410B8, type metadata accessor for StocksActivity, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DBC428]);
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E0DBC3F8], v6);
  result = sub_1DC406904();
  *a4 = result;
  return result;
}

uint64_t sub_1DC21D4BC(uint64_t a1)
{
  return sub_1DC21D3D8(a1, 0xD000000000000020, 0x80000001DC43DFB0, &qword_1EDB5E158);
}

uint64_t sub_1DC21D4E0(uint64_t a1)
{
  return sub_1DC0834AC(a1, 0xD000000000000021, 0x80000001DC43DE60, &qword_1EDB5E160);
}

uint64_t sub_1DC21D504(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unint64_t a9, uint64_t a10)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t);
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  id v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t (*v41)(void);
  uint64_t v42;
  uint64_t v43;
  uint64_t ObjCClassFromMetadata;
  void *v45;
  id v46;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  _QWORD *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;

  v64 = a7;
  v65 = a8;
  v62 = a3;
  v68 = a1;
  v58 = sub_1DC404C54();
  v57 = *(_QWORD *)(v58 - 8);
  MEMORY[0x1E0C80A78](v58);
  v59 = (char *)&v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for StocksActivity(0);
  v66 = *(_QWORD *)(v14 - 8);
  v67 = v14;
  MEMORY[0x1E0C80A78](v14);
  v55 = (uint64_t)&v50 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v56 = (uint64_t)&v50 - v17;
  sub_1DC089DA4(0, (unint64_t *)&qword_1EDB2C5F0, v18, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v50 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v22);
  v24 = (uint64_t *)((char *)&v50 - v23);
  v69 = a5;
  v70 = a6;
  v63 = a9;
  v71 = a9;
  v72 = a10;
  v61 = a10;
  v25 = sub_1DC404570();
  v60 = *(_QWORD *)(v25 - 8);
  MEMORY[0x1E0C80A78](v25);
  v27 = (char *)&v50 - v26;
  v28 = objc_msgSend((id)objc_opt_self(), sel_currentDevice);
  v29 = objc_msgSend(v28, sel_userInterfaceIdiom);

  if (!v29)
    return 0;
  v30 = v62;
  v69 = v62;
  v70 = a4;
  v71 = a5;
  v72 = a6;
  v51 = a5;
  v53 = v24;
  v54 = v21;
  v31 = a6;
  v32 = v61;
  v34 = v64;
  v33 = v65;
  v73 = v64;
  v74 = v65;
  v35 = v63;
  v75 = v63;
  v76 = v61;
  sub_1DC403FAC();
  v36 = sub_1DC403F7C();
  v52 = &v50;
  MEMORY[0x1E0C80A78](v36);
  *(&v50 - 8) = v30;
  *(&v50 - 7) = a4;
  *(&v50 - 6) = v51;
  *(&v50 - 5) = v31;
  v37 = (uint64_t)v54;
  *(&v50 - 4) = v34;
  *(&v50 - 3) = v33;
  v48 = v35;
  v49 = v32;
  v38 = MEMORY[0x1E0DEA968];
  sub_1DC083594(0, (unint64_t *)&qword_1EDB3F770, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  MEMORY[0x1DF0CAB8C](MEMORY[0x1E0DB7708], v25);
  sub_1DC21F76C(&qword_1EDB3F790, (uint64_t)&qword_1EDB3F770, v38, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))sub_1DC083594);
  v39 = sub_1DC408C50();
  (*(void (**)(char *, uint64_t))(v60 + 8))(v27, v25);
  v40 = v53;
  sub_1DC21DE58(v68, v39, 2, v53);
  swift_bridgeObjectRelease();
  sub_1DC21F804((uint64_t)v40, v37);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v66 + 48))(v37, 1, v67) == 1)
  {
    v41 = MEMORY[0x1E0DEB940];
    sub_1DC0A6180((uint64_t)v40, (uint64_t)&qword_1EDB2C5F0, (uint64_t)type metadata accessor for StocksActivity, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD))sub_1DC089DA4);
    sub_1DC0A6180(v37, (uint64_t)&qword_1EDB2C5F0, (uint64_t)type metadata accessor for StocksActivity, (uint64_t)v41, (uint64_t (*)(_QWORD))sub_1DC089DA4);
    return 0;
  }
  v43 = v56;
  sub_1DC17C804(v37, v56);
  if (qword_1EDB410E0 != -1)
    swift_once();
  sub_1DC0990BC(v43, v55, type metadata accessor for StocksActivity);
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v45 = (void *)objc_opt_self();
  swift_retain();
  v46 = objc_msgSend(v45, sel_bundleForClass_, ObjCClassFromMetadata);
  v48 = 0x80000001DC43DEE0;
  sub_1DC3FFC80();

  sub_1DC4068D4();
  sub_1DC4068C8();
  (*(void (**)(char *, _QWORD, uint64_t))(v57 + 104))(v59, *MEMORY[0x1E0DB8530], v58);
  swift_allocObject();
  v42 = sub_1DC4045E8();
  sub_1DC0926D8(v43, type metadata accessor for StocksActivity);
  sub_1DC0A6180((uint64_t)v40, (uint64_t)&qword_1EDB2C5F0, (uint64_t)type metadata accessor for StocksActivity, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD))sub_1DC089DA4);
  return v42;
}

uint64_t sub_1DC21DAA8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = sub_1DC40532C();
  v3 = MEMORY[0x1E0DEA968];
  sub_1DC083594(0, (unint64_t *)&qword_1EDB3F770, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  MEMORY[0x1DF0CAB8C](MEMORY[0x1E0DB9520], v2);
  sub_1DC21F76C(&qword_1EDB3F790, (uint64_t)&qword_1EDB3F770, v3, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))sub_1DC083594);
  result = sub_1DC408C50();
  *a1 = result;
  return result;
}

uint64_t sub_1DC21DBA8@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t result;
  _QWORD v20[2];
  _QWORD *v21;
  uint64_t v22;
  void (*v23)(char *, unint64_t, uint64_t);
  uint64_t v24;
  __int128 v25[2];
  uint64_t v26;
  _QWORD v27[4];
  uint64_t v28;

  v3 = sub_1DC402434();
  v28 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  sub_1DC404DEC();
  sub_1DC404DE0();
  sub_1DC0A3390(0, &qword_1F034F250);
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_1DC097DD0(v25, (uint64_t)v27);
    __swift_project_boxed_opaque_existential_1(v27, v27[3]);
    v7 = sub_1DC401DC8();
    v8 = *(_QWORD *)(v7 + 16);
    if (v8)
    {
      v21 = a1;
      v22 = v1;
      *(_QWORD *)&v25[0] = MEMORY[0x1E0DEE9D8];
      sub_1DC0F0894(0, v8, 0);
      v9 = (*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
      v20[1] = v7;
      v10 = v7 + v9;
      v11 = *(_QWORD *)(v28 + 72);
      v23 = *(void (**)(char *, unint64_t, uint64_t))(v28 + 16);
      v24 = v11;
      do
      {
        v23(v5, v10, v3);
        v12 = sub_1DC402404();
        v14 = v13;
        (*(void (**)(char *, uint64_t))(v28 + 8))(v5, v3);
        v15 = *(_QWORD *)&v25[0];
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1DC0F0894(0, *(_QWORD *)(v15 + 16) + 1, 1);
          v15 = *(_QWORD *)&v25[0];
        }
        v17 = *(_QWORD *)(v15 + 16);
        v16 = *(_QWORD *)(v15 + 24);
        if (v17 >= v16 >> 1)
        {
          sub_1DC0F0894(v16 > 1, v17 + 1, 1);
          v15 = *(_QWORD *)&v25[0];
        }
        *(_QWORD *)(v15 + 16) = v17 + 1;
        v18 = v15 + 16 * v17;
        *(_QWORD *)(v18 + 32) = v12;
        *(_QWORD *)(v18 + 40) = v14;
        v10 += v24;
        --v8;
      }
      while (v8);
      swift_bridgeObjectRelease();
      a1 = v21;
    }
    else
    {
      swift_bridgeObjectRelease();
      v15 = MEMORY[0x1E0DEE9D8];
    }
    *a1 = v15;
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
  }
  else
  {
    v26 = 0;
    memset(v25, 0, sizeof(v25));
    result = sub_1DC0A6180((uint64_t)v25, (uint64_t)&unk_1F034F258, (uint64_t)&qword_1F034F250, MEMORY[0x1E0D573F0], (uint64_t (*)(_QWORD))sub_1DC0A6204);
    *a1 = MEMORY[0x1E0DEE9D8];
  }
  return result;
}

uint64_t sub_1DC21DE58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t (*v10)(uint64_t);
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  void **v21;
  int v22;
  void *v23;
  uint64_t v24;
  char *v25;
  id v26;
  void *v27;
  void (*v28)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t result;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t inited;
  id v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD v52[4];
  char *v53;
  uint64_t v54;
  uint64_t v55;

  v54 = a2;
  v55 = a3;
  v6 = sub_1DC3FFDD0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC089DA4(0, (unint64_t *)&unk_1EDB28A70, v10, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)v52 - v15;
  v17 = sub_1DC4011BC();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = MEMORY[0x1E0C80A78](v17);
  v21 = (void **)((char *)v52 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(void **, uint64_t, uint64_t, __n128))(v18 + 16))(v21, a1, v17, v19);
  v22 = (*(uint64_t (**)(void **, uint64_t))(v18 + 88))(v21, v17);
  if (v22 == *MEMORY[0x1E0DAF188])
  {
    (*(void (**)(void **, uint64_t))(v18 + 96))(v21, v17);
    v23 = *v21;
    sub_1DC0B9454();
    v25 = (char *)v21 + *(int *)(v24 + 48);
    v26 = objc_msgSend(v23, sel_routeURL);
    if (v26)
    {
      v27 = v26;
      sub_1DC3FFD94();

      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v16, v9, v6);
      v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
      v28(v16, 0, 1, v6);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v16, 1, v6) != 1)
      {
        swift_unknownObjectRelease();
        sub_1DC0A6180((uint64_t)v16, (uint64_t)&unk_1EDB28A70, (uint64_t)MEMORY[0x1E0CAFFF8], (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD))sub_1DC089DA4);
        v29 = type metadata accessor for StocksActivity(0);
        (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(a4, 1, 1, v29);
        v30 = sub_1DC400898();
        return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v30 - 8) + 8))(v25, v30);
      }
    }
    else
    {
      v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
      v28(v16, 1, 1, v6);
    }
    sub_1DC0A6180((uint64_t)v16, (uint64_t)&unk_1EDB28A70, (uint64_t)MEMORY[0x1E0CAFFF8], (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD))sub_1DC089DA4);
    v52[3] = sub_1DC4022F0();
    v33 = objc_msgSend(v23, sel_identifier);
    v34 = sub_1DC408A4C();
    v52[1] = v35;
    v52[2] = v34;

    sub_1DC089DA4(0, &qword_1F034F238, (uint64_t (*)(uint64_t))sub_1DC21F860, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1DC40DC10;
    swift_bridgeObjectRetain();
    v37 = objc_msgSend(v23, sel_identifier);
    v53 = v25;
    v38 = v37;
    v39 = sub_1DC408A4C();
    v41 = v40;

    *(_QWORD *)(inited + 32) = v39;
    *(_QWORD *)(inited + 40) = v41;
    *(_QWORD *)(inited + 48) = v23;
    swift_unknownObjectRetain();
    sub_1DC1A22AC(inited);
    v28(v13, 1, 1, v6);
    v42 = sub_1DC4022C0();
    swift_unknownObjectRelease();
    sub_1DC1446B4();
    v44 = *(int *)(v43 + 48);
    v45 = (char *)a4 + *(int *)(v43 + 64);
    sub_1DC1447E4();
    v47 = (char *)a4 + *(int *)(v46 + 48);
    *a4 = v42;
    v48 = *MEMORY[0x1E0D57870];
    v49 = sub_1DC40202C();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 104))(v47, v48, v49);
    sub_1DC401BB8();
    swift_storeEnumTagMultiPayload();
    *(_QWORD *)((char *)a4 + v44) = v55;
    type metadata accessor for StocksActivity.Article(0);
    *(_OWORD *)v45 = 0u;
    *((_OWORD *)v45 + 1) = 0u;
    *((_QWORD *)v45 + 4) = 0;
    swift_storeEnumTagMultiPayload();
    v50 = type metadata accessor for StocksActivity(0);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 56))(a4, 0, 1, v50);
    v51 = sub_1DC400898();
    return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v51 - 8) + 8))(v53, v51);
  }
  else if (v22 == *MEMORY[0x1E0DAF140])
  {
    (*(void (**)(void **, uint64_t))(v18 + 96))(v21, v17);
    *a4 = *v21;
    type metadata accessor for StocksActivity.Article(0);
    swift_storeEnumTagMultiPayload();
    v32 = type metadata accessor for StocksActivity(0);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(a4, 0, 1, v32);
  }
  else
  {
    result = sub_1DC4099DC();
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC21E370(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unint64_t a9, uint64_t a10)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(void);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t ObjCClassFromMetadata;
  void *v38;
  id v39;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  char *v55;
  unint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;

  v47 = a7;
  v48 = a8;
  v45 = a2;
  v49 = a1;
  v54 = sub_1DC404C54();
  v52 = *(_QWORD *)(v54 - 8);
  MEMORY[0x1E0C80A78](v54);
  v55 = (char *)&v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = type metadata accessor for StocksActivity(0);
  MEMORY[0x1E0C80A78](v50);
  v51 = (uint64_t)&v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v53 = (char *)&v43 - v17;
  v56 = a5;
  v57 = a6;
  v58 = a9;
  v59 = a10;
  v18 = sub_1DC404570();
  v46 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v43 - v19;
  v21 = objc_msgSend((id)objc_opt_self(), sel_currentDevice);
  v22 = objc_msgSend(v21, sel_userInterfaceIdiom);

  if (!v22)
    return 0;
  v56 = a3;
  v57 = a4;
  v58 = a5;
  v59 = a6;
  v44 = a6;
  v23 = a4;
  v25 = v47;
  v24 = v48;
  v60 = v47;
  v61 = v48;
  v62 = a9;
  v63 = a10;
  sub_1DC403FAC();
  v26 = sub_1DC403F7C();
  v45 = &v43;
  MEMORY[0x1E0C80A78](v26);
  *(&v43 - 8) = a3;
  *(&v43 - 7) = v23;
  v27 = v44;
  *(&v43 - 6) = a5;
  *(&v43 - 5) = v27;
  *(&v43 - 4) = v25;
  *(&v43 - 3) = v24;
  v41 = a9;
  v42 = a10;
  v28 = MEMORY[0x1E0DAF0D0];
  sub_1DC089DA4(0, &qword_1EDB3F630, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF0D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  MEMORY[0x1DF0CAB8C](MEMORY[0x1E0DB7708], v18);
  sub_1DC21F76C(&qword_1F034F218, (uint64_t)&qword_1EDB3F630, (uint64_t)v28, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))sub_1DC089DA4);
  v29 = sub_1DC408C50();
  (*(void (**)(char *, uint64_t))(v46 + 8))(v20, v18);
  if (*(_QWORD *)(v29 + 16))
  {
    v30 = sub_1DC4010E4();
    v31 = (uint64_t)v53;
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v53, v49, v30);
    *(_QWORD *)(v31 + *(int *)(type metadata accessor for StocksActivity.StockFeed.Series(0) + 20)) = v29;
    sub_1DC1E4ABC(0, (unint64_t *)&qword_1EDB275E0, (void (*)(uint64_t))type metadata accessor for StocksActivity.StockFeed.Series);
    *(_QWORD *)(v31 + *(int *)(v32 + 48)) = 2;
    type metadata accessor for StocksActivity.StockFeed(0);
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
  }
  else
  {
    sub_1DC1E4ABC(0, (unint64_t *)&qword_1EDB28DF0, (void (*)(uint64_t))MEMORY[0x1E0DAF0D0]);
    v35 = *(int *)(v34 + 48);
    v36 = sub_1DC4010E4();
    v31 = (uint64_t)v53;
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 16))(v53, v49, v36);
    *(_QWORD *)(v31 + v35) = 2;
    type metadata accessor for StocksActivity.StockFeed(0);
    swift_storeEnumTagMultiPayload();
  }
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRelease();
  if (qword_1EDB410E0 != -1)
    swift_once();
  sub_1DC0990BC(v31, v51, type metadata accessor for StocksActivity);
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v38 = (void *)objc_opt_self();
  swift_retain();
  v39 = objc_msgSend(v38, sel_bundleForClass_, ObjCClassFromMetadata);
  v41 = 0x80000001DC43DEE0;
  sub_1DC3FFC80();

  sub_1DC4068D4();
  sub_1DC4068C8();
  (*(void (**)(char *, _QWORD, uint64_t))(v52 + 104))(v55, *MEMORY[0x1E0DB8530], v54);
  swift_allocObject();
  v33 = sub_1DC4045E8();
  sub_1DC0926D8(v31, type metadata accessor for StocksActivity);
  return v33;
}

uint64_t sub_1DC21E888@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1DC40532C();
  sub_1DC4010E4();
  MEMORY[0x1DF0CAB8C](MEMORY[0x1E0DB9520], v2);
  result = sub_1DC408C38();
  *a1 = result;
  return result;
}

uint64_t sub_1DC21E930@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  __int128 v5[2];
  uint64_t v6;
  _QWORD v7[4];

  MEMORY[0x1E0C80A78](a1);
  sub_1DC404DEC();
  sub_1DC404DE0();
  sub_1DC0A3390(0, &qword_1F034F220);
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_1DC097DD0(v5, (uint64_t)v7);
    __swift_project_boxed_opaque_existential_1(v7, v7[3]);
    sub_1DC4008F8();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
  }
  else
  {
    v6 = 0;
    memset(v5, 0, sizeof(v5));
    sub_1DC0A6180((uint64_t)v5, (uint64_t)&unk_1F034F228, (uint64_t)&qword_1F034F220, MEMORY[0x1E0DAE8B0], (uint64_t (*)(_QWORD))sub_1DC0A6204);
    v4 = sub_1DC4010E4();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a2, 1, 1, v4);
  }
}

uint64_t static ContextMenuItem.openInNewTab(headline:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t ObjCClassFromMetadata;
  void *v25;
  id v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;

  v0 = sub_1DC404C54();
  v31 = *(_QWORD *)(v0 - 8);
  v32 = v0;
  MEMORY[0x1E0C80A78](v0);
  v33 = (char *)&v29 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = type metadata accessor for StocksActivity(0);
  MEMORY[0x1E0C80A78](v29);
  v30 = (uint64_t)&v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v29 - v4;
  v6 = sub_1DC40202C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC089DA4(0, (unint64_t *)&unk_1EDB28A70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v29 - v11;
  v13 = sub_1DC402434();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1DC401BB8();
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v29 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_unknownObjectRetain();
  sub_1DC402410();
  v20 = sub_1DC3FFDD0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v12, 1, 1, v20);
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E0D57870], v6);
  sub_1DC401B88();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_1DC0A6180((uint64_t)v12, (uint64_t)&unk_1EDB28A70, (uint64_t)MEMORY[0x1E0CAFFF8], (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD))sub_1DC089DA4);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  sub_1DC1446B4();
  v22 = *(int *)(v21 + 48);
  v23 = &v5[*(int *)(v21 + 64)];
  sub_1DC0990BC((uint64_t)v19, (uint64_t)v5, (uint64_t (*)(_QWORD))MEMORY[0x1E0D570B0]);
  *(_QWORD *)&v5[v22] = 2;
  type metadata accessor for StocksActivity.Article(0);
  *(_OWORD *)v23 = 0u;
  *((_OWORD *)v23 + 1) = 0u;
  *((_QWORD *)v23 + 4) = 0;
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  if (qword_1EDB410C8 != -1)
    swift_once();
  sub_1DC0990BC((uint64_t)v5, v30, type metadata accessor for StocksActivity);
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v25 = (void *)objc_opt_self();
  swift_retain();
  v26 = objc_msgSend(v25, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1DC3FFC80();

  sub_1DC4068D4();
  sub_1DC4068BC();
  (*(void (**)(char *, _QWORD, uint64_t))(v31 + 104))(v33, *MEMORY[0x1E0DB8530], v32);
  swift_allocObject();
  v27 = sub_1DC4045E8();
  sub_1DC0926D8((uint64_t)v5, type metadata accessor for StocksActivity);
  sub_1DC0926D8((uint64_t)v19, (uint64_t (*)(_QWORD))MEMORY[0x1E0D570B0]);
  return v27;
}

void sub_1DC21EEEC(uint64_t *a1@<X8>)
{
  uint64_t ObjCClassFromMetadata;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v3 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v4 = sub_1DC3FFC80();
  v6 = v5;

  *a1 = v4;
  a1[1] = v6;
}

void sub_1DC21EFB4(_QWORD *a1@<X8>)
{
  void *v2;
  id v3;

  v2 = (void *)sub_1DC408A1C();
  v3 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v2);

  if (v3)
    *a1 = v3;
  else
    __break(1u);
}

uint64_t _s5TeaUI15ContextMenuItemC06StocksB0E15openInNewWindow8headlineACSgSo19FCHeadlineProviding_p_tFZ_0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  id v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(void);
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t ObjCClassFromMetadata;
  void *v28;
  id v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;

  v33 = a1;
  v37 = sub_1DC404C54();
  v35 = *(_QWORD *)(v37 - 8);
  MEMORY[0x1E0C80A78](v37);
  v38 = (char *)&v31 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = type metadata accessor for StocksActivity(0);
  MEMORY[0x1E0C80A78](v34);
  v36 = (uint64_t)&v31 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v31 - v4;
  v6 = sub_1DC40202C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC089DA4(0, (unint64_t *)&unk_1EDB28A70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v31 - v11;
  v32 = sub_1DC402434();
  v13 = *(_QWORD *)(v32 - 8);
  MEMORY[0x1E0C80A78](v32);
  v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1DC401BB8();
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v31 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = objc_msgSend((id)objc_opt_self(), sel_sharedApplication);
  v20 = objc_msgSend(v19, sel_supportsMultipleScenes);

  v21 = 0;
  if (v20)
  {
    swift_unknownObjectRetain();
    sub_1DC402410();
    v22 = sub_1DC3FFDD0();
    v23 = MEMORY[0x1E0CAFFF8];
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v12, 1, 1, v22);
    (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E0D57870], v6);
    sub_1DC401B88();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    sub_1DC0A6180((uint64_t)v12, (uint64_t)&unk_1EDB28A70, (uint64_t)v23, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD))sub_1DC089DA4);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v32);
    sub_1DC1446B4();
    v25 = *(int *)(v24 + 48);
    v26 = &v5[*(int *)(v24 + 64)];
    sub_1DC0990BC((uint64_t)v18, (uint64_t)v5, (uint64_t (*)(_QWORD))MEMORY[0x1E0D570B0]);
    *(_QWORD *)&v5[v25] = 2;
    type metadata accessor for StocksActivity.Article(0);
    *(_OWORD *)v26 = 0u;
    *((_OWORD *)v26 + 1) = 0u;
    *((_QWORD *)v26 + 4) = 0;
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
    if (qword_1EDB410E0 != -1)
      swift_once();
    sub_1DC0990BC((uint64_t)v5, v36, type metadata accessor for StocksActivity);
    type metadata accessor for Localized();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    v28 = (void *)objc_opt_self();
    swift_retain();
    v29 = objc_msgSend(v28, sel_bundleForClass_, ObjCClassFromMetadata);
    sub_1DC3FFC80();

    sub_1DC4068D4();
    sub_1DC4068C8();
    (*(void (**)(char *, _QWORD, uint64_t))(v35 + 104))(v38, *MEMORY[0x1E0DB8530], v37);
    sub_1DC40463C();
    swift_allocObject();
    v21 = sub_1DC4045E8();
    sub_1DC0926D8((uint64_t)v5, type metadata accessor for StocksActivity);
    sub_1DC0926D8((uint64_t)v18, (uint64_t (*)(_QWORD))MEMORY[0x1E0D570B0]);
  }
  return v21;
}

uint64_t _s5TeaUI15ContextMenuItemC06StocksB0E15provideFeedbackACyFZ_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE v7[16];

  sub_1DC21F914();
  MEMORY[0x1E0C80A78](v0);
  sub_1DC089DA4(0, &qword_1F034F268, (uint64_t (*)(uint64_t))sub_1DC21F96C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v1);
  v3 = &v7[-v2];
  sub_1DC21F9D4();
  MEMORY[0x1E0C80A78](v4);
  if (qword_1EDB2AA10 != -1)
    swift_once();
  v7[15] = 1;
  sub_1DC190E90();
  swift_retain();
  sub_1DC405908();
  v7[14] = 1;
  sub_1DC15E978();
  sub_1DC404B7C();
  sub_1DC21F96C();
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v3, 0, 1, v5);
  v7[13] = 1;
  sub_1DC404EC4();
  sub_1DC40463C();
  swift_allocObject();
  return sub_1DC4045B8();
}

void sub_1DC21F6EC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB426C0)
  {
    sub_1DC190E90();
    v0 = sub_1DC4042F4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB426C0);
  }
}

uint64_t sub_1DC21F750(uint64_t a1)
{
  return sub_1DC21F8E0(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1DC21E888);
}

uint64_t sub_1DC21F76C(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t, _QWORD))
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a4(255, a2, a3, MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1DF0CAB8C](MEMORY[0x1E0DEAF38], v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DC21F7B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DC21E930(a1, a2);
}

uint64_t sub_1DC21F7E8(uint64_t a1)
{
  return sub_1DC21F8E0(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1DC21DAA8);
}

uint64_t sub_1DC21F804(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1DC089DA4(0, (unint64_t *)&qword_1EDB2C5F0, type metadata accessor for StocksActivity, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1DC21F860()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1F034F240)
  {
    sub_1DC112C9C();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1F034F240);
  }
}

uint64_t sub_1DC21F8C4(uint64_t a1)
{
  return sub_1DC21F8E0(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1DC21DBA8);
}

uint64_t sub_1DC21F8E0(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v2;

  return a2(a1, v2[2], v2[3], v2[4], v2[5], v2[6], v2[7], v2[8], v2[9]);
}

void sub_1DC21F914()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F034F260)
  {
    sub_1DC190E90();
    v0 = sub_1DC404EE8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1F034F260);
  }
}

void sub_1DC21F96C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F034F270)
  {
    sub_1DC15E978();
    sub_1DC190E90();
    v0 = sub_1DC404B94();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1F034F270);
  }
}

void sub_1DC21F9D4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F034F280)
  {
    sub_1DC190E90();
    v0 = sub_1DC405920();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1F034F280);
  }
}

uint64_t storeEnumTagSinglePayload for FeatureControlState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1DC21FA9C + 4 * byte_1DC41A385[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1DC21FAD0 + 4 * asc_1DC41A380[v4]))();
}

uint64_t sub_1DC21FAD0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC21FAD8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC21FAE0);
  return result;
}

uint64_t sub_1DC21FAEC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC21FAF4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1DC21FAF8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC21FB00(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FeatureControlState()
{
  return &type metadata for FeatureControlState;
}

unint64_t sub_1DC21FB20()
{
  unint64_t result;

  result = qword_1F034F288;
  if (!qword_1F034F288)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC41A3D4, &type metadata for FeatureControlState);
    atomic_store(result, (unint64_t *)&qword_1F034F288);
  }
  return result;
}

void sub_1DC21FB64(_QWORD *a1@<X8>)
{
  *a1 = 0x403C000000000000;
}

double sub_1DC21FB70@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(a1 + 64);
  *a2 = result;
  return result;
}

double sub_1DC21FB7C@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(a1 + 56);
  *a2 = result;
  return result;
}

void sub_1DC21FB88(void *a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  double v9;
  double v10;
  id v11;
  uint64_t v12;
  uint64_t v13;

  v4 = sub_1DC40145C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_msgSend(a1, sel_horizontalSizeClass);
  sub_1DC4073B4();
  v8 = (void *)objc_opt_self();
  sub_1DC407CA8();
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DB6098], v4);
  sub_1DC407C9C();
  v10 = v9;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v11 = objc_msgSend(v8, sel_systemFontOfSize_weight_, v10, *MEMORY[0x1E0DC1420]);
  v12 = sub_1DC409310();

  *a2 = v12;
}

id sub_1DC21FD0C@<X0>(id a1@<X1>, _QWORD *a2@<X8>)
{
  id result;
  double v4;

  objc_msgSend(a1, sel_horizontalSizeClass);
  sub_1DC4073B4();
  result = objc_msgSend((id)objc_opt_self(), sel_systemFontOfSize_weight_, v4, *MEMORY[0x1E0DC1428]);
  *a2 = result;
  return result;
}

uint64_t sub_1DC21FDCC()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocClassInstance();
}

void sub_1DC21FDF0(uint64_t *a1@<X8>)
{
  uint64_t v1;

  sub_1DC21FB88(*(void **)(v1 + 24), a1);
}

id sub_1DC21FDF8@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_1DC21FD0C(*(id *)(v1 + 24), a1);
}

double sub_1DC21FE00@<D0>(double *a1@<X8>)
{
  uint64_t v1;
  double result;

  result = *(double *)(v1 + 56);
  *a1 = result;
  return result;
}

double sub_1DC21FE0C@<D0>(double *a1@<X8>)
{
  uint64_t v1;
  double result;

  result = *(double *)(v1 + 64);
  *a1 = result;
  return result;
}

ValueMetadata *type metadata accessor for EmptyListViewModel()
{
  return &type metadata for EmptyListViewModel;
}

uint64_t sub_1DC21FE38(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  void *v8;

  v2 = v1;
  swift_unknownObjectWeakInit();
  v4 = v1 + OBJC_IVAR____TtC8StocksUI20ShareMenuItemManager_currentItem;
  v5 = sub_1DC406B8C();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  *(_QWORD *)(v2 + 16) = a1;
  v6 = (void *)objc_opt_self();
  swift_retain();
  v7 = objc_msgSend(v6, sel_defaultCenter);
  sub_1DC220380();
  swift_retain();
  v8 = (void *)sub_1DC40955C();
  objc_msgSend(v7, sel_addObserver_selector_name_object_, v2, sel_didBecomeKeyWindowScene_, v8, 0);

  swift_release();
  swift_release();
  return v2;
}

void sub_1DC21FF3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  void *v9;
  void *v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  id v18;
  _BYTE v19[24];

  sub_1DC12E944();
  MEMORY[0x1E0C80A78](v1);
  v3 = &v19[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = sub_1DC406B8C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = &v19[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = v0 + OBJC_IVAR____TtC8StocksUI20ShareMenuItemManager_currentItem;
  swift_beginAccess();
  sub_1DC220400(v8, (uint64_t)v3);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    sub_1DC220444((uint64_t)v3);
    return;
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v5 + 32))(v7, v3, v4);
  v9 = (void *)MEMORY[0x1DF0CAD78](v0 + 24);
  if (v9)
  {
    v10 = v9;
    v11 = objc_msgSend(v9, sel_view);

    if (!v11)
    {
      __break(1u);
      return;
    }
    v12 = objc_msgSend(v11, sel_window);

    if (v12)
    {
      v13 = (void *)objc_opt_self();
      v14 = v12;
      v15 = objc_msgSend(v13, sel_sharedApplication);
      v16 = objc_msgSend(v15, sel_key_window);

      if (!v16 || (v16, v14 != v16))
      {
        (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);

        return;
      }
      v17 = *(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC8StocksUI28ShareDynamicMenuItemProvider_menuItem;
      swift_beginAccess();
      (*(void (**)(uint64_t, _BYTE *, uint64_t))(v5 + 24))(v17, v7, v4);
      swift_endAccess();
      v18 = objc_msgSend((id)objc_opt_self(), sel_mainSystem);
      objc_msgSend(v18, sel_setNeedsRebuild);

    }
  }
  (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1DC220244()
{
  uint64_t v0;

  swift_release();
  swift_unknownObjectWeakDestroy();
  sub_1DC220444(v0 + OBJC_IVAR____TtC8StocksUI20ShareMenuItemManager_currentItem);
  return swift_deallocClassInstance();
}

uint64_t sub_1DC220284()
{
  return type metadata accessor for ShareMenuItemManager();
}

void sub_1DC22028C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_1DC12E944();
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *v1;
  v7 = sub_1DC406B8C();
  v8 = *(_QWORD *)(v7 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v5, a1, v7);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  v9 = v6 + OBJC_IVAR____TtC8StocksUI20ShareMenuItemManager_currentItem;
  swift_beginAccess();
  sub_1DC2203BC((uint64_t)v5, v9);
  swift_endAccess();
  swift_unknownObjectWeakAssign();
  sub_1DC21FF3C();
}

unint64_t sub_1DC220380()
{
  unint64_t result;

  result = qword_1EDB41D10;
  if (!qword_1EDB41D10)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EDB41D10);
  }
  return result;
}

uint64_t sub_1DC2203BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1DC12E944();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC220400(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1DC12E944();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC220444(uint64_t a1)
{
  uint64_t v2;

  sub_1DC12E944();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DC220480(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  _QWORD *v8;
  id v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  sub_1DC220B28();
  v5 = v4;
  *(_QWORD *)&v6 = MEMORY[0x1E0C80A78](v4).n128_u64[0];
  v8 = (uint64_t *)((char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = objc_msgSend(a1, sel_horizontalSizeClass, v6);
  v10 = (char *)v8 + *(int *)(v5 + 48);
  *v8 = v9;
  v11 = sub_1DC405290();
  v12 = *(_QWORD *)(v11 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v10, a2, v11);
  if (!v9)
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v10, v11);
  if (v9 != (id)2)
  {
    if (v9 != (id)1)
    {
      result = sub_1DC409838();
      __break(1u);
      return result;
    }
    result = (*(uint64_t (**)(char *, uint64_t))(v12 + 88))(v10, v11);
    if ((_DWORD)result == *MEMORY[0x1E0DB9450])
      return result;
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v10, v11);
  }
  result = (*(uint64_t (**)(char *, uint64_t))(v12 + 88))(v10, v11);
  if ((_DWORD)result != *MEMORY[0x1E0DB9450])
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v10, v11);
  return result;
}

double sub_1DC220694@<D0>(void *a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>, CGFloat a5@<D0>, CGFloat a6@<D1>, CGFloat a7@<D2>, CGFloat a8@<D3>, double a9@<D5>, double a10@<D7>)
{
  _QWORD *v10;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(void *, uint64_t, uint64_t);
  CGFloat v24;
  double v25;
  double v26;
  uint64_t ObjCClassFromMetadata;
  void *v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  double v39;
  double v40;
  double v41;
  CGFloat v42;
  double v43;
  double v44;
  CGFloat v45;
  double v46;
  double v47;
  double v48;
  CGFloat v49;
  double v50;
  double v51;
  double Height;
  double v53;
  double v54;
  CGFloat Width;
  CGFloat v56;
  double v57;
  double v58;
  double v59;
  double result;
  CGFloat v61;
  CGFloat v62;
  double v63;
  double v64;
  CGFloat v65;
  double v66;
  CGFloat v67;
  double v68;
  CGFloat v69;
  CGFloat v70;
  CGFloat v72;
  CGFloat rect;
  double v74;
  uint64_t v77[6];
  CGRect v78;
  CGRect v79;
  CGRect v80;
  CGRect v81;
  CGRect v82;
  CGRect v83;
  CGRect v84;
  CGRect v85;
  CGRect v86;
  CGRect v87;
  CGRect v88;

  v20 = v10[5];
  v21 = v10[6];
  __swift_project_boxed_opaque_existential_1(v10 + 2, v20);
  v22 = *(_QWORD *)(v21 + 8);
  v23 = *(void (**)(void *, uint64_t, uint64_t))(v22 + 8);
  v77[3] = v20;
  v77[4] = v21;
  __swift_allocate_boxed_opaque_existential_1(v77);
  v23(a1, v20, v22);
  v78.origin.x = a5;
  v78.origin.y = a6;
  v78.size.width = a7;
  v78.size.height = a8;
  v24 = CGRectGetWidth(v78) - a10 - a9;
  sub_1DC220480(a1, a2);
  v26 = v25 * v24;
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v28 = (void *)objc_opt_self();
  v29 = objc_msgSend(v28, sel_bundleForClass_, ObjCClassFromMetadata);
  v30 = sub_1DC3FFC80();
  v32 = v31;

  v33 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v21 + 16))(v30, v32, v20, v21);
  swift_bridgeObjectRelease();
  v34 = objc_msgSend(v28, sel_bundleForClass_, ObjCClassFromMetadata, 0x80000001DC43E100);
  v35 = sub_1DC3FFC80();
  v37 = v36;

  v38 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v21 + 24))(v35, v37, v20, v21);
  swift_bridgeObjectRelease();
  sub_1DC4092BC();
  objc_msgSend(v33, sel_boundingRectWithSize_options_context_, 1, 0, 0x80000001DC43E1C0);
  v67 = v40;
  v69 = v39;
  v42 = v41;
  v65 = v43;
  v63 = v26;
  sub_1DC4092BC();
  objc_msgSend(v38, sel_boundingRectWithSize_options_context_, 1, 0);
  v45 = v44;
  v61 = v46;
  v62 = v44;
  rect = v47;
  v49 = v48;
  v79.origin.x = a5;
  v79.origin.y = a6;
  v72 = a7;
  v79.size.width = a7;
  v79.size.height = a8;
  v74 = (CGRectGetWidth(v79) - v26) * 0.5;
  sub_1DC409280();
  v51 = v50;
  v80.origin.x = v69;
  v80.origin.y = v42;
  v80.size.width = v67;
  v80.size.height = v65;
  Height = CGRectGetHeight(v80);
  v81.origin.x = v45;
  v81.origin.y = v61;
  v81.size.width = rect;
  v81.size.height = v49;
  v53 = v51 - (Height + CGRectGetHeight(v81)) * 0.5;
  if (v53 > 0.0)
    v54 = v53;
  else
    v54 = 0.0;
  v82.origin.x = v69;
  v82.origin.y = v42;
  v82.size.width = v67;
  v82.size.height = v65;
  v70 = ceil(CGRectGetHeight(v82));
  v83.origin.x = a5;
  v83.size.height = a8;
  v83.origin.y = a6;
  v83.size.width = v72;
  Width = CGRectGetWidth(v83);
  v84.size.width = v63;
  v56 = (Width - v63) * 0.5;
  v68 = v56;
  v84.origin.x = v74;
  v84.origin.y = v54;
  v84.size.height = v70;
  v66 = CGRectGetMaxY(v84) + 4.0;
  v85.origin.x = v62;
  v85.origin.y = v61;
  v85.size.width = rect;
  v85.size.height = v49;
  v86.size.height = ceil(CGRectGetHeight(v85));
  v64 = v86.size.height;
  v86.origin.x = v56;
  v86.origin.y = v66;
  v86.size.width = v63;
  v57 = CGRectGetMaxY(v86) + 8.0;
  v87.origin.x = v62;
  v87.origin.y = v61;
  v87.size.width = rect;
  v87.size.height = v49;
  v58 = CGRectGetHeight(v87);
  v88.origin.x = a5;
  v88.size.height = a8;
  v88.origin.y = a6;
  v88.size.width = v72;
  v59 = CGRectGetHeight(v88);

  if (v59 <= v57 + v58)
    v59 = v57 + v58;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v77);
  *(CGFloat *)a4 = a5;
  *(CGFloat *)(a4 + 8) = a6;
  *(CGFloat *)(a4 + 16) = v72;
  *(double *)(a4 + 24) = v59;
  *(double *)(a4 + 32) = v57;
  *(double *)(a4 + 40) = v58;
  *(double *)(a4 + 48) = v74;
  *(double *)(a4 + 56) = v54;
  *(double *)(a4 + 64) = v63;
  *(CGFloat *)(a4 + 72) = v70;
  *(double *)(a4 + 80) = v68;
  *(double *)(a4 + 88) = v66;
  result = v64;
  *(double *)(a4 + 96) = v63;
  *(double *)(a4 + 104) = v64;
  *(_BYTE *)(a4 + 112) = a3;
  return result;
}

void sub_1DC220B28()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EDB40FE0)
  {
    type metadata accessor for UIUserInterfaceSizeClass(255);
    sub_1DC405290();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EDB40FE0);
  }
}

uint64_t EndOfArticleModel.contextMenu(contextMenu:model:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  _BYTE *v8;
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v17[40];
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v4 = sub_1DC401C48();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  (*(void (**)(_BYTE *, uint64_t, uint64_t, __n128))(v5 + 16))(v8, a2, v4, v6);
  v9 = (*(uint64_t (**)(_BYTE *, uint64_t))(v5 + 88))(v8, v4);
  v10 = *MEMORY[0x1E0D57180];
  (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v8, v4);
  if (v9 == v10 && (v11 = sub_1DC401C3C()) != 0)
  {
    v12 = v11;
    v21 = sub_1DC40415C();
    v13 = _s5TeaUI15ContextMenuItemC06StocksB0E15openInNewWindow8headlineACSgSo19FCHeadlineProviding_p_tFZ_0(v12);
    if (v13)
    {
      v14 = v13;
      v19 = sub_1DC40463C();
      v20 = MEMORY[0x1E0DB77B0];
      *(_QWORD *)&v18 = v14;
      sub_1DC097DD0(&v18, (uint64_t)v17);
      sub_1DC220F40(0, 0, (uint64_t)v17);
    }
    sub_1DC404180();
    swift_allocObject();
    swift_retain();
    a1 = sub_1DC404120();
    swift_unknownObjectRelease();
  }
  else
  {
    swift_retain();
  }
  return a1;
}

uint64_t sub_1DC220D14(uint64_t a1, uint64_t a2)
{
  return EndOfArticleModel.contextMenu(contextMenu:model:)(a1, a2);
}

uint64_t sub_1DC220D28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DC220D60(a1, a2, a3, (uint64_t (*)(void))sub_1DC16636C, (void (*)(uint64_t))sub_1DC141E14, &qword_1EDB3FC50);
}

uint64_t sub_1DC220D44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DC220D60(a1, a2, a3, (uint64_t (*)(void))sub_1DC096E18, (void (*)(uint64_t))sub_1DC104584, &qword_1EDB284F8);
}

uint64_t sub_1DC220D60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), void (*a5)(uint64_t), unint64_t *a6)
{
  uint64_t *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t result;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_26;
  }
  v8 = *v6;
  v9 = *(_QWORD *)(*v6 + 16);
  if (v9 < a2)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v11 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v12 = 1 - v11;
  if (__OFSUB__(1, v11))
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  if (__OFADD__(v9, v12))
  {
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v6 = v8;
  if (!isUniquelyReferenced_nonNull_native || v9 + v12 > *(_QWORD *)(v8 + 24) >> 1)
  {
    v8 = a4();
    *v6 = v8;
  }
  v16 = ((uint64_t (*)(_QWORD))a5)(0);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = v8 + ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80));
  v19 = *(_QWORD *)(v17 + 72);
  v20 = v18 + v19 * a1;
  swift_arrayDestroy();
  if (!v12)
    goto LABEL_22;
  v21 = *(_QWORD *)(v8 + 16);
  v22 = v21 - a2;
  if (__OFSUB__(v21, a2))
    goto LABEL_30;
  if (v22 < 0)
  {
LABEL_32:
    result = sub_1DC40988C();
    __break(1u);
    return result;
  }
  v23 = v20 + v19;
  v24 = v18 + v19 * a2;
  if (v20 + v19 < v24 || v23 >= v24 + v22 * v19)
  {
    swift_arrayInitWithTakeFrontToBack();
  }
  else if (v23 != v24)
  {
    swift_arrayInitWithTakeBackToFront();
  }
  v26 = *(_QWORD *)(v8 + 16);
  v27 = __OFADD__(v26, v12);
  v28 = v26 + v12;
  if (v27)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  *(_QWORD *)(v8 + 16) = v28;
LABEL_22:
  if (v19 >= 1)
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v17 + 16))(v20, a3, v16);
  return sub_1DC22129C(a3, a6, a5);
}

uint64_t sub_1DC220F40(uint64_t a1, int64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v5;
  int64_t v6;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  v5 = *(_QWORD **)v3;
  v6 = *(_QWORD *)(*(_QWORD *)v3 + 16);
  if (v6 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v8 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v9 = 1 - v8;
  if (__OFSUB__(1, v8))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v10 = v6 + v9;
  if (__OFADD__(v6, v9))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)v3 = v5;
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || v10 > v5[3] >> 1)
  {
    if (v6 <= v10)
      v13 = v6 + v9;
    else
      v13 = v6;
    v5 = sub_1DC166CA4(isUniquelyReferenced_nonNull_native, v13, 1, v5);
    *(_QWORD *)v3 = v5;
  }
  v14 = (uint64_t)&v5[5 * a1 + 4];
  sub_1DC131594();
  swift_arrayDestroy();
  if (!v9)
    goto LABEL_20;
  v15 = v5[2];
  v16 = __OFSUB__(v15, a2);
  v17 = v15 - a2;
  if (v16)
    goto LABEL_26;
  if ((v17 & 0x8000000000000000) == 0)
  {
    v18 = (char *)(v14 + 40);
    v19 = (char *)&v5[5 * a2 + 4];
    if ((char *)(v14 + 40) != v19 || v18 >= &v19[40 * v17])
      memmove(v18, v19, 40 * v17);
    v20 = v5[2];
    v16 = __OFADD__(v20, v9);
    v21 = v20 + v9;
    if (!v16)
    {
      v5[2] = v21;
LABEL_20:
      sub_1DC0824D4(a3, v14);
      return sub_1DC22129C(a3, &qword_1F034F290, (void (*)(uint64_t))sub_1DC131594);
    }
    goto LABEL_27;
  }
LABEL_28:
  result = sub_1DC40988C();
  __break(1u);
  return result;
}

uint64_t sub_1DC2210F0(uint64_t a1, int64_t a2)
{
  unint64_t *v2;
  unint64_t v4;
  int64_t v5;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  int isUniquelyReferenced_nonNull_native;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_27;
  }
  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 16);
  if (v5 < a2)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v9 > *(_QWORD *)(v4 + 24) >> 1)
  {
    if (v5 <= v9)
      v11 = v5 + v8;
    else
      v11 = v5;
    v4 = sub_1DC1664B4(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  v12 = *(_QWORD *)(sub_1DC3FFFEC() - 8);
  v13 = v4 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
  v14 = *(_QWORD *)(v12 + 72);
  v15 = v14 * a1;
  v16 = v13 + v14 * a1;
  result = swift_arrayDestroy();
  if (!v7)
    goto LABEL_25;
  v18 = *(_QWORD *)(v4 + 16);
  v19 = v18 - a2;
  if (__OFSUB__(v18, a2))
    goto LABEL_31;
  if ((v19 & 0x8000000000000000) == 0)
  {
    if (v15 < v14 * a2 || v16 >= v13 + v14 * a2 + v19 * v14)
    {
      result = swift_arrayInitWithTakeFrontToBack();
    }
    else if (v15 != v14 * a2)
    {
      result = swift_arrayInitWithTakeBackToFront();
    }
    v21 = *(_QWORD *)(v4 + 16);
    v22 = __OFADD__(v21, v8);
    v23 = v21 - v7;
    if (!v22)
    {
      *(_QWORD *)(v4 + 16) = v23;
LABEL_25:
      *v2 = v4;
      return result;
    }
    goto LABEL_32;
  }
LABEL_33:
  result = sub_1DC40988C();
  __break(1u);
  return result;
}

uint64_t sub_1DC22129C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t v4;

  sub_1DC2212D8(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void sub_1DC2212D8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_1DC409790();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t getEnumTagSinglePayload for TickerCollectionModel(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 16);
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for TickerCollectionModel(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for TickerCollectionModel()
{
  return &type metadata for TickerCollectionModel;
}

uint64_t type metadata accessor for ManageWatchlistsBlueprintViewHeaderFooterProvider()
{
  return objc_opt_self();
}

_QWORD *initializeBufferWithCopyOfBuffer for StockFeedNewsRefreshData(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  return a1;
}

uint64_t destroy for StockFeedNewsRefreshData()
{
  return swift_release();
}

_QWORD *assignWithCopy for StockFeedNewsRefreshData(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  return a1;
}

_QWORD *assignWithTake for StockFeedNewsRefreshData(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for StocksActivity.Tip(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7C && *(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 124);
  v3 = (((*(_QWORD *)a1 >> 57) >> 4) | (8 * ((*(_QWORD *)a1 >> 57) & 8 | *(_QWORD *)a1 & 7))) ^ 0x7F;
  if (v3 >= 0x7B)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for StocksActivity.Tip(uint64_t result, unsigned int a2, unsigned int a3)
{
  uint64_t v3;

  if (a2 > 0x7B)
  {
    *(_QWORD *)result = a2 - 124;
    if (a3 >= 0x7C)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7C)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
    {
      v3 = (-a2 >> 3) & 0xF | (16 * (-a2 & 0x7F));
      *(_QWORD *)result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StockFeedNewsRefreshData()
{
  return &type metadata for StockFeedNewsRefreshData;
}

_QWORD *assignWithCopy for StockFeedNewsExpandData(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  return a1;
}

_QWORD *assignWithTake for StockFeedNewsExpandData(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for StockFeedNewsExpandData()
{
  return &type metadata for StockFeedNewsExpandData;
}

uint64_t destroy for StockFeedNewsFailedData()
{
  swift_bridgeObjectRelease();
  return swift_release();
}

_QWORD *_s8StocksUI23StockFeedNewsFailedDataVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for StockFeedNewsFailedData(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for StockFeedNewsFailedData(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for StockFeedNewsFailedData()
{
  return &type metadata for StockFeedNewsFailedData;
}

uint64_t sub_1DC22174C(uint64_t a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v22 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v22 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    v8 = *(_OWORD *)(a2 + 5);
    *(_OWORD *)(a1 + 40) = v8;
    v9 = v8;
    v10 = **(void (***)(uint64_t, uint64_t, uint64_t))(v8 - 8);
    swift_bridgeObjectRetain();
    v10(a1 + 16, (uint64_t)(a2 + 2), v9);
    v11 = *((_OWORD *)a2 + 5);
    *(_OWORD *)(a1 + 80) = v11;
    (**(void (***)(uint64_t, uint64_t))(v11 - 8))(a1 + 56, (uint64_t)(a2 + 7));
    v12 = *(_OWORD *)(a2 + 15);
    *(_OWORD *)(a1 + 120) = v12;
    (**(void (***)(uint64_t, uint64_t))(v12 - 8))(a1 + 96, (uint64_t)(a2 + 12));
    v13 = a3[8];
    v14 = a1 + v13;
    v15 = (uint64_t)a2 + v13;
    v16 = sub_1DC4008EC();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
    v17 = a3[9];
    v18 = *(_OWORD *)((char *)a2 + v17 + 24);
    *(_OWORD *)(a1 + v17 + 24) = v18;
    (**(void (***)(void))(v18 - 8))();
    v19 = a3[10];
    v20 = a1 + v19;
    v21 = (uint64_t)a2 + v19;
    *(_OWORD *)v20 = *(_OWORD *)v21;
    *(_BYTE *)(v20 + 16) = *(_BYTE *)(v21 + 16);
  }
  return a1;
}

uint64_t *sub_1DC22189C(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __swift_assign_boxed_opaque_existential_1(a1 + 2, a2 + 2);
  __swift_assign_boxed_opaque_existential_1(a1 + 7, a2 + 7);
  __swift_assign_boxed_opaque_existential_1(a1 + 12, a2 + 12);
  v6 = a3[8];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1DC4008EC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  __swift_assign_boxed_opaque_existential_1((uint64_t *)((char *)a1 + a3[9]), (uint64_t *)((char *)a2 + a3[9]));
  v10 = a3[10];
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  *(_QWORD *)v11 = *(_QWORD *)v12;
  *((_QWORD *)v11 + 1) = *((_QWORD *)v12 + 1);
  v11[16] = v12[16];
  return a1;
}

uint64_t sub_1DC221978(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  v7 = *(_OWORD *)(a2 + 112);
  v8 = a3[8];
  v9 = a1 + v8;
  v10 = a2 + v8;
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v7;
  v11 = sub_1DC4008EC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  v12 = a3[9];
  v13 = a3[10];
  v14 = a1 + v12;
  v15 = a2 + v12;
  v16 = *(_OWORD *)(v15 + 16);
  *(_OWORD *)v14 = *(_OWORD *)v15;
  *(_OWORD *)(v14 + 16) = v16;
  *(_QWORD *)(v14 + 32) = *(_QWORD *)(v15 + 32);
  v17 = a1 + v13;
  v18 = a2 + v13;
  *(_OWORD *)v17 = *(_OWORD *)v18;
  *(_BYTE *)(v17 + 16) = *(_BYTE *)(v18 + 16);
  return a1;
}

uint64_t sub_1DC221A50(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 16);
  v7 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  __swift_destroy_boxed_opaque_existential_1(a1 + 56);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  __swift_destroy_boxed_opaque_existential_1(a1 + 96);
  v8 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v8;
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  v9 = a3[8];
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = sub_1DC4008EC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 40))(v10, v11, v12);
  v13 = a3[9];
  v14 = a1 + v13;
  v15 = a2 + v13;
  __swift_destroy_boxed_opaque_existential_1(a1 + v13);
  v16 = *(_OWORD *)(v15 + 16);
  *(_OWORD *)v14 = *(_OWORD *)v15;
  *(_OWORD *)(v14 + 16) = v16;
  *(_QWORD *)(v14 + 32) = *(_QWORD *)(v15 + 32);
  v17 = a3[10];
  v18 = a1 + v17;
  v19 = a2 + v17;
  *(_QWORD *)v18 = *(_QWORD *)v19;
  *(_QWORD *)(v18 + 8) = *(_QWORD *)(v19 + 8);
  *(_BYTE *)(v18 + 16) = *(_BYTE *)(v19 + 16);
  return a1;
}

uint64_t sub_1DC221B5C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC221B68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1DC4008EC();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 32), a2, v8);
  }
}

uint64_t sub_1DC221BE4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC221BF0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_1DC4008EC();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 32), a2, a2, v7);
  }
  return result;
}

uint64_t sub_1DC221C64(void *a1, void (*a2)(char *))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  id v10;
  uint64_t v12;

  sub_1DC0AE268(0, &qword_1EDB2A270, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB9A28]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  v7 = MEMORY[0x1E0C80A78](v4);
  v9 = (char *)&v12 - v8;
  *(uint64_t *)((char *)&v12 - v8) = (uint64_t)a1;
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v6 + 104))((char *)&v12 - v8, *MEMORY[0x1E0DB99F0], v5, v7);
  v10 = a1;
  a2(v9);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t sub_1DC221D20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = type metadata accessor for TickerPrewarmBlueprintModifier();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v3 + 16);
  __swift_destroy_boxed_opaque_existential_1(v3 + 56);
  __swift_destroy_boxed_opaque_existential_1(v3 + 96);
  v4 = v3 + *(int *)(v1 + 32);
  v5 = sub_1DC4008EC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  __swift_destroy_boxed_opaque_existential_1(v3 + *(int *)(v1 + 36));
  return swift_deallocObject();
}

uint64_t sub_1DC221DD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for TickerPrewarmBlueprintModifier();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = (v2 + 32) & ~v2;
  swift_release();
  v4 = v0 + v3;
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + v3 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + v3 + 56);
  __swift_destroy_boxed_opaque_existential_1(v0 + v3 + 96);
  v5 = v0 + v3 + *(int *)(v1 + 32);
  v6 = sub_1DC4008EC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  __swift_destroy_boxed_opaque_existential_1(v4 + *(int *)(v1 + 36));
  return swift_deallocObject();
}

uint64_t sub_1DC221E88()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DC221EAC(void *a1)
{
  uint64_t v1;

  return sub_1DC221C64(a1, *(void (**)(char *))(v1 + 16));
}

uint64_t sub_1DC221EB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = type metadata accessor for TickerPrewarmBlueprintModifier();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v3 + 16);
  __swift_destroy_boxed_opaque_existential_1(v3 + 56);
  __swift_destroy_boxed_opaque_existential_1(v3 + 96);
  v4 = v3 + *(int *)(v1 + 32);
  v5 = sub_1DC4008EC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  __swift_destroy_boxed_opaque_existential_1(v3 + *(int *)(v1 + 36));
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

ValueMetadata *type metadata accessor for TickerPrewarmBlueprintModifier.Results()
{
  return &type metadata for TickerPrewarmBlueprintModifier.Results;
}

uint64_t StockChartLoadingState.$state.getter()
{
  uint64_t v0;

  swift_retain();
  v0 = sub_1DC402A7C();
  swift_release();
  return v0;
}

uint64_t StockChartLoadingState.state.getter()
{
  uint64_t v1;

  swift_retain();
  sub_1DC402A64();
  swift_release();
  return v1;
}

uint64_t sub_1DC222008@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  swift_retain();
  sub_1DC402A64();
  result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1DC222054(id *a1)
{
  sub_1DC2220F4(*a1);
  swift_retain();
  sub_1DC402A70();
  return swift_release();
}

uint64_t StockChartLoadingState.state.setter(void *a1)
{
  swift_retain();
  sub_1DC2220F4(a1);
  sub_1DC402A70();
  sub_1DC222104(a1);
  return swift_release();
}

id sub_1DC2220F4(id result)
{
  if ((unint64_t)result >= 3)
    return result;
  return result;
}

void sub_1DC222104(id a1)
{
  if ((unint64_t)a1 >= 3)

}

void (*StockChartLoadingState.state.modify(_QWORD *a1))(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[4] = *(_QWORD *)(v1 + 16);
  swift_retain();
  v3[5] = sub_1DC402A58();
  return sub_1DC22216C;
}

void sub_1DC22216C(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD, _QWORD))(*a1 + 40))(*a1, 0);
  swift_release();
  free(v1);
}

uint64_t StockChartLoadingState.__allocating_init()()
{
  uint64_t v0;

  v0 = swift_allocObject();
  sub_1DC222254();
  swift_allocObject();
  *(_QWORD *)(v0 + 16) = sub_1DC402A4C();
  return v0;
}

uint64_t StockChartLoadingState.init()()
{
  uint64_t v0;

  sub_1DC222254();
  swift_allocObject();
  *(_QWORD *)(v0 + 16) = sub_1DC402A4C();
  return v0;
}

void sub_1DC222254()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB295A8)
  {
    v0 = sub_1DC402A94();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB295A8);
  }
}

uint64_t StockChartLoadingState.deinit()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t StockChartLoadingState.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t StockChartLoadingState.description.getter()
{
  unsigned int v1;
  void *v2;

  swift_retain();
  sub_1DC402A64();
  swift_release();
  if (!v2)
  {
    v1 = 1953063287;
    return v1 | 0x676E6900000000;
  }
  if (v2 == (void *)1)
  {
    v1 = 1684107116;
    return v1 | 0x676E6900000000;
  }
  if (v2 == (void *)2)
    return 0x64656873696E6966;
  sub_1DC222104(v2);
  return 0x64656C696166;
}

uint64_t sub_1DC222390()
{
  return StockChartLoadingState.description.getter();
}

uint64_t method lookup function for StockChartLoadingState()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of StockChartLoadingState.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

_QWORD *initializeBufferWithCopyOfBuffer for StockChartLoadingState.State(_QWORD *a1, void **a2)
{
  void *v3;
  id v4;

  v3 = *a2;
  if ((unint64_t)*a2 >= 0xFFFFFFFF)
    v4 = v3;
  *a1 = v3;
  return a1;
}

void destroy for StockChartLoadingState.State(void **a1)
{
  void *v1;

  v1 = *a1;
  if ((unint64_t)v1 >= 0xFFFFFFFF)

}

void **assignWithCopy for StockChartLoadingState.State(void **a1, void **a2)
{
  void *v3;
  void *v4;
  id v5;
  void *v6;
  id v7;

  v3 = *a1;
  v4 = *a2;
  if ((unint64_t)v3 < 0xFFFFFFFF)
  {
    if ((unint64_t)v4 >= 0xFFFFFFFF)
      v7 = v4;
    *a1 = v4;
  }
  else if ((unint64_t)v4 < 0xFFFFFFFF)
  {

    *a1 = *a2;
  }
  else
  {
    v5 = v4;
    v6 = *a1;
    *a1 = v4;

  }
  return a1;
}

void **assignWithTake for StockChartLoadingState.State(void **a1, unint64_t *a2)
{
  void *v3;
  unint64_t v4;

  v3 = *a1;
  v4 = *a2;
  if ((unint64_t)v3 < 0xFFFFFFFF)
    goto LABEL_6;
  if (v4 < 0xFFFFFFFF)
  {

LABEL_6:
    *a1 = (void *)v4;
    return a1;
  }
  *a1 = (void *)v4;

  return a1;
}

uint64_t getEnumTagSinglePayload for StockChartLoadingState.State(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFD && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 2147483645);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 2;
  if (v4 >= 4)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for StockChartLoadingState.State(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFD)
  {
    *(_QWORD *)result = 0;
    *(_DWORD *)result = a2 - 2147483645;
    if (a3 >= 0x7FFFFFFD)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFD)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2 + 2;
  }
  return result;
}

uint64_t sub_1DC2225B8(uint64_t *a1)
{
  uint64_t v1;

  v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

_QWORD *sub_1DC2225D0(_QWORD *result, int a2)
{
  unsigned int v2;

  if (a2 < 0)
  {
    v2 = a2 ^ 0x80000000;
  }
  else
  {
    if (!a2)
      return result;
    v2 = a2 - 1;
  }
  *result = v2;
  return result;
}

ValueMetadata *type metadata accessor for StockChartLoadingState.State()
{
  return &type metadata for StockChartLoadingState.State;
}

char *sub_1DC222604(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *result;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  char *v26;
  _QWORD v28[3];
  uint64_t v29;
  _UNKNOWN **v30;
  __int128 v31;
  uint64_t v32;
  _BYTE v33[40];

  v3 = v2;
  v6 = sub_1DC3FFDD0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v28[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v2 + OBJC_IVAR____TtC8StocksUI24WebViewControllerFactory_resolver), *(_QWORD *)(v2 + OBJC_IVAR____TtC8StocksUI24WebViewControllerFactory_resolver + 24));
  sub_1DC0A3390(0, &qword_1EDB381D0);
  result = (char *)sub_1DC402608();
  if (v32)
  {
    sub_1DC097DD0(&v31, (uint64_t)v33);
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
    sub_1DC0824D4((uint64_t)v33, (uint64_t)&v31);
    v11 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v31, v32);
    v12 = MEMORY[0x1E0C80A78](v11);
    v14 = (_QWORD *)((char *)&v28[-1] - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v15 + 16))(v14, v12);
    v16 = *v14;
    v29 = type metadata accessor for WebViewControllerStyler();
    v30 = &off_1EA454418;
    v28[0] = v16;
    v17 = (char *)objc_allocWithZone((Class)type metadata accessor for WebViewController());
    v18 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v28, v29);
    v19 = MEMORY[0x1E0C80A78](v18);
    v21 = (_QWORD *)((char *)&v28[-1] - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v22 + 16))(v21, v19);
    v23 = (char *)sub_1DC222A34((uint64_t)v9, *v21, v17);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v31);
    result = (char *)objc_msgSend(v23, sel_view);
    if (result)
    {
      v24 = result;
      objc_msgSend(result, sel_setAutoresizingMask_, 18);

      v25 = (uint64_t)&v23[OBJC_IVAR____TtC8StocksUI17WebViewController_webViewCoordinator];
      swift_beginAccess();
      sub_1DC222B78(a2, v25);
      swift_endAccess();
      *(_QWORD *)&v23[OBJC_IVAR____TtC8StocksUI17WebViewController_navigator] = *(_QWORD *)(v3
                                                                                          + OBJC_IVAR____TtC8StocksUI24WebViewControllerFactory_navigator);
      swift_retain();
      swift_release();
      __swift_project_boxed_opaque_existential_1((_QWORD *)(v3 + OBJC_IVAR____TtC8StocksUI24WebViewControllerFactory_sceneStateManager), *(_QWORD *)(v3 + OBJC_IVAR____TtC8StocksUI24WebViewControllerFactory_sceneStateManager + 24));
      sub_1DC222BBC();
      v26 = v23;
      sub_1DC402B48();

      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v31);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
      return v26;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

id sub_1DC222A34(uint64_t a1, uint64_t a2, char *a3)
{
  objc_class *ObjectType;
  char *v7;
  char *v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;
  uint64_t v13;
  objc_super v15;
  _QWORD v16[5];

  ObjectType = (objc_class *)swift_getObjectType();
  v16[3] = type metadata accessor for WebViewControllerStyler();
  v16[4] = &off_1EA454418;
  v16[0] = a2;
  v7 = &a3[OBJC_IVAR____TtC8StocksUI17WebViewController_webViewCoordinator];
  *(_OWORD *)v7 = 0u;
  *((_OWORD *)v7 + 1) = 0u;
  *((_QWORD *)v7 + 4) = 0;
  *(_QWORD *)&a3[OBJC_IVAR____TtC8StocksUI17WebViewController_navigator] = 0;
  v8 = &a3[OBJC_IVAR____TtC8StocksUI17WebViewController_session];
  v9 = type metadata accessor for WebViewSession();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  sub_1DC0824D4((uint64_t)v16, (uint64_t)&a3[OBJC_IVAR____TtC8StocksUI17WebViewController_styler]);
  v10 = (void *)sub_1DC3FFD88();
  v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CD5608]), sel_init);
  v15.receiver = a3;
  v15.super_class = ObjectType;
  v12 = objc_msgSendSuper2(&v15, sel_initWithURL_configuration_, v10, v11);

  __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
  v13 = sub_1DC3FFDD0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(a1, v13);
  return v12;
}

uint64_t sub_1DC222B78(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1DC1E2ABC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

unint64_t sub_1DC222BBC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1F034F358;
  if (!qword_1F034F358)
  {
    v1 = type metadata accessor for WebViewController();
    result = MEMORY[0x1DF0CAB8C](&unk_1DC424E80, v1);
    atomic_store(result, (unint64_t *)&qword_1F034F358);
  }
  return result;
}

void sub_1DC222C04()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1DC409AC0();
  __asm { BR              X9 }
}

uint64_t sub_1DC222C54()
{
  sub_1DC408AF4();
  swift_bridgeObjectRelease();
  return sub_1DC409AF0();
}

void sub_1DC222CB4()
{
  __asm { BR              X10 }
}

uint64_t sub_1DC222CF4()
{
  sub_1DC408AF4();
  return swift_bridgeObjectRelease();
}

void sub_1DC222D40()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1DC409AC0();
  __asm { BR              X9 }
}

uint64_t sub_1DC222D8C()
{
  sub_1DC408AF4();
  swift_bridgeObjectRelease();
  return sub_1DC409AF0();
}

uint64_t sub_1DC222DEC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1DC222FE0();
  *a1 = result;
  return result;
}

uint64_t sub_1DC222E18()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1DC222E4C + 4 * byte_1DC41AACC[*v0]))();
}

void sub_1DC222E4C(_QWORD *a1@<X8>)
{
  *a1 = 0x6B636F7473;
  a1[1] = 0xE500000000000000;
}

void sub_1DC222E64(_QWORD *a1@<X8>)
{
  *a1 = 0x64657461727563;
  a1[1] = 0xE700000000000000;
}

void sub_1DC222E80(_QWORD *a1@<X8>)
{
  *a1 = 25697;
  a1[1] = 0xE200000000000000;
}

unint64_t sub_1DC222E94()
{
  unint64_t result;

  result = qword_1EDB30EE8;
  if (!qword_1EDB30EE8)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC41AB58, &type metadata for ForYouFeedGroupKind);
    atomic_store(result, (unint64_t *)&qword_1EDB30EE8);
  }
  return result;
}

void sub_1DC222ED8(char *a1)
{
  sub_1DC159094(*a1);
}

uint64_t sub_1DC222EE4()
{
  sub_1DC222F8C();
  return sub_1DC408CA4();
}

uint64_t sub_1DC222F40()
{
  sub_1DC222F8C();
  return sub_1DC408C8C();
}

unint64_t sub_1DC222F8C()
{
  unint64_t result;

  result = qword_1EDB30EF0;
  if (!qword_1EDB30EF0)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC41AAE0, &type metadata for ForYouFeedGroupKind);
    atomic_store(result, (unint64_t *)&qword_1EDB30EF0);
  }
  return result;
}

void sub_1DC222FD0(_QWORD *a1@<X8>)
{
  *a1 = &unk_1EA44D4C8;
}

uint64_t sub_1DC222FE0()
{
  unint64_t v0;

  v0 = sub_1DC4098A4();
  swift_bridgeObjectRelease();
  if (v0 >= 4)
    return 4;
  else
    return v0;
}

uint64_t storeEnumTagSinglePayload for ForYouFeedGroupKind(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1DC223074 + 4 * byte_1DC41AAD9[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1DC2230A8 + 4 * byte_1DC41AAD4[v4]))();
}

uint64_t sub_1DC2230A8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC2230B0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC2230B8);
  return result;
}

uint64_t sub_1DC2230C4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC2230CCLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1DC2230D0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC2230D8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

unint64_t sub_1DC2230E8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1F034F360;
  if (!qword_1F034F360)
  {
    sub_1DC223130();
    result = MEMORY[0x1DF0CAB8C](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1F034F360);
  }
  return result;
}

void sub_1DC223130()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F034F368)
  {
    v0 = sub_1DC408D70();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1F034F368);
  }
}

uint64_t sub_1DC223184(unint64_t a1, uint64_t a2, _QWORD *a3)
{
  double v3;
  double v4;
  void *v8;
  double v9;
  double v10;
  uint64_t v11;
  double *v12;
  char v13;
  double v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  objc_class *v18;
  uint64_t v19;
  id v20;
  id v21;
  void *v22;
  id v23;
  uint64_t v24;
  double v25;
  double v26;
  unint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  void *v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  id v36;
  void *v37;
  id v38;
  uint64_t v39;
  id v40;
  id v41;
  void *v42;
  id v43;
  double v44;
  double v45;
  double v46;
  double v47;
  double v48;
  double v49;
  double v50;
  double v51;
  unint64_t v52;
  void *v53;
  void *v54;
  id v55;
  double Height;
  double v57;
  _QWORD *v58;
  uint64_t v59;
  void *v60;
  uint64_t v61;
  id v62;
  void *v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t (*v68)(uint64_t, uint64_t);
  id v69;
  uint64_t v70;
  id v71;
  void *v72;
  void *v73;
  id v74;
  double v75;
  uint64_t v76;
  uint64_t v77;
  id v78;
  void *v79;
  id v81;
  void *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  _QWORD *v88;
  _QWORD *v89;
  void *v90;
  void *v91;
  unint64_t v92;
  void *v93;
  uint64_t result;
  uint64_t v95;
  _QWORD v96[2];
  double v97;
  uint64_t *v98;
  unint64_t v99;
  double v100;
  uint64_t v101;
  double v102;
  double v103;
  _QWORD *v104;
  unint64_t v105;
  id v106;
  void *v107;
  uint64_t v108[4];
  unint64_t v109;
  uint64_t v110;
  objc_super v111;
  double v112;
  _BYTE v113[104];
  _QWORD v114[12];
  char v115;
  CGRect v116;

  v4 = v3;
  v8 = *(void **)((char *)a3 + OBJC_IVAR____TtC8StocksUI15QuoteDetailView_scrollView);
  objc_msgSend(v8, sel_setFrame_, *(double *)(a2 + 32), *(double *)(a2 + 40), *(double *)(a2 + 48), *(double *)(a2 + 56));
  v9 = *(double *)(a2 + 200);
  v10 = *(double *)(a2 + 208);
  objc_msgSend(v8, sel_setContentSize_, v9, v10);
  objc_msgSend(v8, sel_setContentInset_, *(double *)(a2 + 216), *(double *)(a2 + 224), *(double *)(a2 + 232), *(double *)(a2 + 240));
  if ((*(_BYTE *)(a2 + 264) & 1) != 0)
  {
    v11 = *(_QWORD *)&v4 + OBJC_IVAR____TtC8StocksUI23QuoteDetailViewRenderer_lastKnownContentOffset;
    *(_QWORD *)v11 = 0;
    *(_QWORD *)(v11 + 8) = 0;
    *(_BYTE *)(v11 + 16) = 1;
  }
  v12 = (double *)(*(_QWORD *)&v4 + OBJC_IVAR____TtC8StocksUI23QuoteDetailViewRenderer_lastKnownContentOffset);
  v13 = *(_BYTE *)(*(_QWORD *)&v4 + OBJC_IVAR____TtC8StocksUI23QuoteDetailViewRenderer_lastKnownContentOffset + 16);
  v104 = a3;
  v105 = a1;
  if ((v13 & 1) != 0)
  {
    objc_msgSend(v8, sel_contentOffset);
    sub_1DC409364();
  }
  else
  {
    v14 = *v12;
    v15 = v12[1];
  }
  objc_msgSend(v8, sel_setContentOffset_, v14, v15);
  v102 = v4;
  objc_msgSend(v8, sel_setDelegate_, *(_QWORD *)&v4);
  v16 = *(unsigned __int8 *)(a2 + 64);
  v106 = v8;
  objc_msgSend(v8, sel_setScrollEnabled_, v16);
  v103 = *(double *)&a2;
  v101 = *(_QWORD *)(a2 + 88);
  v17 = *(_QWORD *)(v101 + 16);
  v112 = MEMORY[0x1E0DEE9D8];
  v18 = (objc_class *)type metadata accessor for QuoteDetailColumnAccessibilityElement();
  v19 = v17 + 1;
  do
  {
    v20 = objc_msgSend(objc_allocWithZone(v18), sel_initWithAccessibilityContainer_, v106);
    objc_msgSend(v20, sel_setIsAccessibilityElement_, 0);
    objc_msgSend(v20, sel_setShouldGroupAccessibilityChildren_, 1);
    v21 = v20;
    objc_msgSend(v106, sel_bounds);
    objc_msgSend(v21, sel_setAccessibilityFrameInContainerSpace_);

    v22 = (void *)sub_1DC408CC8();
    v111.receiver = v21;
    v111.super_class = v18;
    objc_msgSendSuper2(&v111, sel_setAccessibilityElements_, v22);

    v23 = v21;
    MEMORY[0x1DF0C9530]();
    if (*(_QWORD *)((*(_QWORD *)&v112 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)&v112 & 0xFFFFFFFFFFFFFF8)
                                                                                   + 0x18) >> 1)
      sub_1DC408D4C();
    sub_1DC408D64();
    sub_1DC408CF8();

    --v19;
  }
  while (v19);
  v110 = MEMORY[0x1E0DEE9E0];
  MEMORY[0x1E0C80A78](v24);
  v25 = v102;
  v26 = v103;
  *(double *)v96 = v103;
  v96[1] = &v112;
  v28 = v104;
  v27 = v105;
  v97 = v102;
  v98 = v104;
  v99 = v105;
  v100 = COERCE_DOUBLE(&v110);
  sub_1DC2E333C((void (*)(uint64_t, id))sub_1DC2254D0, (uint64_t)&v95);
  MEMORY[0x1E0C80A78](v29);
  v97 = v26;
  v98 = &v110;
  v99 = v27;
  v100 = v25;
  sub_1DC2E3348((void (*)(uint64_t, id))sub_1DC2254E0, (uint64_t)v96);
  v30 = *(void **)((char *)v28 + OBJC_IVAR____TtC8StocksUI15QuoteDetailView_separatorsView);
  objc_msgSend(v30, sel_setFrame_, 0.0, 0.0, v9, v10);
  v31 = (_QWORD *)(*(_QWORD *)&v25 + OBJC_IVAR____TtC8StocksUI23QuoteDetailViewRenderer_styler);
  swift_beginAccess();
  v32 = __swift_project_boxed_opaque_existential_1(v31, v31[3]);
  v34 = *(_QWORD *)(*v32 + 40);
  v33 = *(_QWORD *)(*v32 + 48);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(*v32 + 16), v34);
  v35 = (void *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)(v33 + 16) + 152))(v34);
  v36 = objc_msgSend(v30, sel_layer);
  objc_opt_self();
  v37 = (void *)swift_dynamicCastObjCClassUnconditional();
  v38 = objc_msgSend(v35, sel_CGColor);
  objc_msgSend(v37, sel_setFillColor_, v38);

  sub_1DC0821D4(0, (unint64_t *)&unk_1EDB3F830);
  v39 = swift_bridgeObjectRetain();
  v40 = sub_1DC2245E8(v39);
  v41 = objc_msgSend(v30, sel_layer);
  objc_opt_self();
  v42 = (void *)swift_dynamicCastObjCClassUnconditional();
  v43 = objc_msgSend(v40, sel_CGPath);
  objc_msgSend(v42, sel_setPath_, v43);

  sub_1DC2254EC(*(_QWORD *)&v26 + 96, (uint64_t)v113);
  sub_1DC2254EC((uint64_t)v113, (uint64_t)v114);
  if ((v115 & 1) != 0)
  {
    objc_msgSend(*(id *)((char *)v28 + OBJC_IVAR____TtC8StocksUI15QuoteDetailView_attributionButton), sel_setHidden_, 1);
  }
  else
  {
    v44 = *(double *)v114;
    v45 = *(double *)&v114[1];
    v46 = *(double *)&v114[2];
    v47 = *(double *)&v114[3];
    v48 = *(double *)&v114[4];
    v49 = *(double *)&v114[5];
    v50 = *(double *)&v114[6];
    v51 = *(double *)&v114[7];
    v102 = *(double *)&v114[9];
    v103 = *(double *)&v114[11];
    v52 = v105 + *(int *)(type metadata accessor for QuoteDetailViewModel() + 24);
    objc_msgSend(*(id *)((char *)v28 + OBJC_IVAR____TtC8StocksUI15QuoteDetailView_attributionButtonContainerView), sel_setFrame_, v48, v49, v50, v51);
    v53 = *(void **)((char *)v28 + OBJC_IVAR____TtC8StocksUI15QuoteDetailView_attributionButton);
    objc_msgSend(v53, sel_setFrame_, v44, v45, v46, v47);
    v54 = *(void **)(v52 + 16);
    if (v54)
    {
      v55 = v54;
      objc_msgSend(v53, sel_setImage_forState_, v55, 0);
      v116.origin.x = v44;
      v116.origin.y = v45;
      v116.size.width = v46;
      v116.size.height = v47;
      Height = CGRectGetHeight(v116);
      objc_msgSend(v55, sel_size);
      objc_msgSend(v53, sel_setImageEdgeInsets_, (Height - v57) * 0.5, v102, (Height - v57) * 0.5, v103);
      objc_msgSend(v53, sel_setSemanticContentAttribute_, 4);

    }
    sub_1DC3B8604(v53);
    v58 = (_QWORD *)*__swift_project_boxed_opaque_existential_1(v31, v31[3]);
    sub_1DC0FB194();
    v59 = swift_allocObject();
    *(_OWORD *)(v59 + 16) = xmmword_1DC40C740;
    v60 = (void *)*MEMORY[0x1E0DC1138];
    *(_QWORD *)(v59 + 32) = *MEMORY[0x1E0DC1138];
    v61 = sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FB00);
    swift_bridgeObjectRetain();
    v62 = v60;
    *(_QWORD *)(v59 + 40) = sub_1DC4092F8();
    v63 = (void *)*MEMORY[0x1E0DC1140];
    *(_QWORD *)(v59 + 64) = v61;
    *(_QWORD *)(v59 + 72) = v63;
    v64 = v58 + 2;
    v65 = v58[5];
    v66 = v58[6];
    __swift_project_boxed_opaque_existential_1(v64, v65);
    v67 = *(_QWORD *)(v66 + 16);
    v68 = *(uint64_t (**)(uint64_t, uint64_t))(v67 + 104);
    v69 = v63;
    v70 = v68(v65, v67);
    *(_QWORD *)(v59 + 104) = sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FB30);
    *(_QWORD *)(v59 + 80) = v70;
    sub_1DC0FA3C4(v59);
    v71 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
    v72 = (void *)sub_1DC408A1C();
    swift_bridgeObjectRelease();
    type metadata accessor for Key(0);
    sub_1DC081B48((unint64_t *)&qword_1EDB3F988, 255, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1DC40D90C);
    v73 = (void *)sub_1DC408980();
    swift_bridgeObjectRelease();
    v74 = objc_msgSend(v71, sel_initWithString_attributes_, v72, v73);

    objc_msgSend(v53, sel_setAttributedTitle_forState_, v74, 0);
    objc_msgSend(v53, sel_setHidden_, 0);
  }
  v75 = v112;
  if (*(_QWORD *)&v112 >> 62)
  {
LABEL_37:
    swift_bridgeObjectRetain_n();
    v76 = sub_1DC409850();
    swift_bridgeObjectRelease();
    if (v76)
      goto LABEL_17;
LABEL_38:
    swift_bridgeObjectRelease_n();
    v92 = swift_bridgeObjectRetain();
    sub_1DC18B2E0(v92);
    swift_bridgeObjectRelease();
    v93 = (void *)sub_1DC408CC8();
    swift_bridgeObjectRelease();
    objc_msgSend(v106, sel_setAccessibilityElements_, v93);

    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  v76 = *(_QWORD *)((*(_QWORD *)&v112 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n();
  if (!v76)
    goto LABEL_38;
LABEL_17:
  v77 = 0;
  v104 = 0;
  v105 = *(_QWORD *)&v75 & 0xC000000000000001;
  v101 = *(_QWORD *)&v75 + 32;
  v102 = v75;
  *(_QWORD *)&v103 = MEMORY[0x1E0DEE9B8] + 8;
  while (1)
  {
    while (1)
    {
      if (v105)
        v78 = (id)MEMORY[0x1DF0C9FBC](v77, *(_QWORD *)&v75);
      else
        v78 = *(id *)(v101 + 8 * v77);
      v79 = v78;
      if (__OFADD__(v77++, 1))
      {
        __break(1u);
        goto LABEL_37;
      }
      v81 = objc_msgSend(v78, sel_accessibilityElements);
      if (v81)
        break;

LABEL_19:
      if (v77 == v76)
        goto LABEL_38;
    }
    v82 = v81;
    v83 = v76;
    v84 = sub_1DC408CD4();

    v109 = MEMORY[0x1E0DEE9D8];
    sub_1DC4097B4();
    v85 = *(_QWORD *)(v84 + 16);
    if (v85)
    {
      v86 = v84 + 32;
      while (1)
      {
        sub_1DC1B26C0(v86, (uint64_t)v108);
        sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3F9D0);
        if (!swift_dynamicCast())
          break;
        sub_1DC40979C();
        sub_1DC4097C0();
        sub_1DC4097CC();
        sub_1DC4097A8();
        v86 += 32;
        if (!--v85)
          goto LABEL_29;
      }
      v107 = 0;
      swift_release();
      v91 = v107;

      swift_bridgeObjectRelease();
      v75 = v102;
      v76 = v83;
      goto LABEL_19;
    }
LABEL_29:
    v87 = v109;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    v76 = v83;
    if ((v87 & 0x8000000000000000) != 0 || (v88 = (_QWORD *)v87, (v87 & 0x4000000000000000) != 0))
    {
      v88 = sub_1DC32B794(v87);
      swift_release();
    }
    v108[0] = (uint64_t)v88;
    v89 = v104;
    sub_1DC2248D4(v108);
    v104 = v89;
    if (v89)
      break;
    swift_release();
    sub_1DC18B2E0(v108[0]);
    swift_release();
    v90 = (void *)sub_1DC408CC8();
    swift_bridgeObjectRelease();
    objc_msgSend(v79, sel_setAccessibilityElements_, v90);

    v75 = v102;
    if (v77 == v76)
      goto LABEL_38;
  }
  result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_1DC223CC0(unsigned __int8 a1, void *a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6, uint64_t a7, _QWORD *a8)
{
  void *v8;
  id v9;
  _QWORD *v10;
  uint64_t v11;
  unsigned __int8 v12;
  unint64_t v13;
  unint64_t v15;
  char v16;
  uint64_t v17;
  double v18;
  double v19;
  double v20;
  double v21;
  uint64_t v22;
  id v23;
  void *v24;
  objc_class *v25;
  char *v26;
  char *v27;
  void *v28;
  char *v29;
  char isUniquelyReferenced_nonNull_native;
  id v31;
  void *v32;
  char *v33;
  unint64_t v34;
  unint64_t v35;
  void *v36;
  uint64_t v37;
  _QWORD *v38;
  id v39;
  _QWORD *v40;
  uint64_t inited;
  void *v42;
  void *v43;
  uint64_t v44;
  id v45;
  void *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t (*v51)(uint64_t, uint64_t);
  id v52;
  uint64_t v53;
  id v54;
  void *v55;
  void *v56;
  id v57;
  char *v59;
  id v60;
  __int128 v61;
  objc_class *v62;

  v13 = *(_QWORD *)(a3 + 72);
  if (!*(_QWORD *)(v13 + 16))
  {
    __break(1u);
    goto LABEL_15;
  }
  v10 = a8;
  v11 = a5;
  v8 = a2;
  v12 = a1;
  v15 = sub_1DC1A36AC(a1);
  if ((v16 & 1) == 0)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v17 = *(_QWORD *)(v13 + 56) + 48 * v15;
  v18 = *(double *)v17;
  v19 = *(double *)(v17 + 8);
  v20 = *(double *)(v17 + 16);
  v21 = *(double *)(v17 + 24);
  v13 = *(_QWORD *)(v17 + 40);
  v9 = *(id *)(v17 + 32);
  objc_msgSend(v8, sel_setFrame_, v18, v19, v20, v21);
  objc_msgSend(v8, sel_setIsAccessibilityElement_, 0);
  v22 = *a4;
  if ((*a4 & 0xC000000000000001) == 0)
  {
    if ((v13 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v13 < *(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v23 = *(id *)(v22 + 8 * v13 + 32);
      goto LABEL_7;
    }
    __break(1u);
LABEL_19:
    v13 = (unint64_t)sub_1DC166B80(0, *(_QWORD *)(v13 + 16) + 1, 1, (_QWORD *)v13);
    goto LABEL_9;
  }
LABEL_16:
  v23 = (id)MEMORY[0x1DF0C9FBC](v13);
LABEL_7:
  v24 = v23;
  v25 = (objc_class *)type metadata accessor for QuoteDetailViewLabelAccessibilityElement();
  v26 = (char *)objc_msgSend(objc_allocWithZone(v25), sel_initWithAccessibilityContainer_, v24);
  *(_QWORD *)&v26[OBJC_IVAR____TtC8StocksUI40QuoteDetailViewLabelAccessibilityElement_delegate + 8] = &off_1EA459040;
  swift_unknownObjectWeakAssign();
  swift_unknownObjectWeakAssign();
  swift_unknownObjectWeakAssign();
  v27 = v26;
  sub_1DC1FC8BC(v12);
  swift_bridgeObjectRelease();
  v28 = (void *)sub_1DC408A1C();
  swift_bridgeObjectRelease();
  objc_msgSend(v27, sel_setAccessibilityLabel_, v28);

  v29 = v27;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)&v61 = *v10;
  *v10 = 0x8000000000000000;
  sub_1DC35A794((uint64_t)v29, v12, isUniquelyReferenced_nonNull_native);
  *v10 = v61;
  swift_bridgeObjectRelease();
  v10 = v24;
  v31 = objc_msgSend(v10, sel_accessibilityElements);
  v59 = v29;
  v60 = v8;
  if (!v31)
  {
    objc_msgSend(v10, sel_setAccessibilityElements_, 0);

    goto LABEL_13;
  }
  v32 = v31;
  v13 = sub_1DC408CD4();

  v62 = v25;
  *(_QWORD *)&v61 = v29;
  v33 = v29;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    goto LABEL_19;
LABEL_9:
  v35 = *(_QWORD *)(v13 + 16);
  v34 = *(_QWORD *)(v13 + 24);
  if (v35 >= v34 >> 1)
    v13 = (unint64_t)sub_1DC166B80((_QWORD *)(v34 > 1), v35 + 1, 1, (_QWORD *)v13);
  *(_QWORD *)(v13 + 16) = v35 + 1;
  sub_1DC0FA0E4(&v61, (_OWORD *)(v13 + 32 * v35 + 32));
  v36 = (void *)sub_1DC408CC8();
  swift_bridgeObjectRelease();
  objc_msgSend(v10, sel_setAccessibilityElements_, v36);

LABEL_13:
  v37 = v11 + OBJC_IVAR____TtC8StocksUI23QuoteDetailViewRenderer_styler;
  swift_beginAccess();
  sub_1DC0824D4(v37, (uint64_t)&v61);
  v38 = __swift_project_boxed_opaque_existential_1(&v61, (uint64_t)v62);
  v39 = objc_msgSend(v9, sel_string);
  sub_1DC408A4C();

  v40 = (_QWORD *)*v38;
  sub_1DC0FB194();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DC40C740;
  v42 = v9;
  v43 = (void *)*MEMORY[0x1E0DC1138];
  *(_QWORD *)(inited + 32) = *MEMORY[0x1E0DC1138];
  v44 = sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FB00);
  swift_bridgeObjectRetain();
  v45 = v43;
  *(_QWORD *)(inited + 40) = sub_1DC4092F8();
  v46 = (void *)*MEMORY[0x1E0DC1140];
  *(_QWORD *)(inited + 64) = v44;
  *(_QWORD *)(inited + 72) = v46;
  v47 = v40 + 2;
  v48 = v40[5];
  v49 = v40[6];
  __swift_project_boxed_opaque_existential_1(v47, v48);
  v50 = *(_QWORD *)(v49 + 16);
  v51 = *(uint64_t (**)(uint64_t, uint64_t))(v50 + 200);
  v52 = v46;
  v53 = v51(v48, v50);
  *(_QWORD *)(inited + 104) = sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FB30);
  *(_QWORD *)(inited + 80) = v53;
  sub_1DC0FA3C4(inited);
  v54 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  v55 = (void *)sub_1DC408A1C();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1DC081B48((unint64_t *)&qword_1EDB3F988, 255, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1DC40D90C);
  v56 = (void *)sub_1DC408980();
  swift_bridgeObjectRelease();
  v57 = objc_msgSend(v54, sel_initWithString_attributes_, v55, v56);
  swift_bridgeObjectRelease();

  objc_msgSend(v60, sel_setAttributedText_, v57);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v61);
}

unint64_t sub_1DC224254(unint64_t result, void *a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  char v11;
  uint64_t v12;
  double v13;
  double v14;
  double v15;
  double v16;
  id v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  void *v21;
  id v22;
  void *v23;
  uint64_t v24;
  _QWORD *v25;
  id v26;
  _QWORD *v27;
  uint64_t inited;
  void *v29;
  uint64_t v30;
  id v31;
  void *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t (*v37)(uint64_t, uint64_t);
  id v38;
  uint64_t v39;
  id v40;
  void *v41;
  void *v42;
  id v43;
  _QWORD v44[5];

  v6 = *(_QWORD *)(a3 + 80);
  if (!*(_QWORD *)(v6 + 16))
  {
    __break(1u);
    goto LABEL_8;
  }
  v10 = result;
  result = sub_1DC1A36AC(result);
  if ((v11 & 1) == 0)
  {
LABEL_8:
    __break(1u);
    return result;
  }
  v12 = *(_QWORD *)(v6 + 56) + 48 * result;
  v13 = *(double *)v12;
  v14 = *(double *)(v12 + 8);
  v15 = *(double *)(v12 + 16);
  v16 = *(double *)(v12 + 24);
  v17 = *(id *)(v12 + 32);
  objc_msgSend(a2, sel_setFrame_, v13, v14, v15, v16);
  objc_msgSend(a2, sel_setIsAccessibilityElement_, 0);
  v18 = *a4;
  if (*(_QWORD *)(*a4 + 16))
  {
    v19 = sub_1DC1A36AC(v10);
    if ((v20 & 1) != 0)
    {
      v21 = *(void **)(*(_QWORD *)(v18 + 56) + 8 * v19);
      swift_unknownObjectWeakAssign();
      v22 = v21;
      sub_1DC1FD438(v10, 1);
      v23 = (void *)sub_1DC408A1C();
      swift_bridgeObjectRelease();
      objc_msgSend(v22, sel_setAccessibilityValue_, v23);

    }
  }
  v24 = a6 + OBJC_IVAR____TtC8StocksUI23QuoteDetailViewRenderer_styler;
  swift_beginAccess();
  sub_1DC0824D4(v24, (uint64_t)v44);
  v25 = __swift_project_boxed_opaque_existential_1(v44, v44[3]);
  v26 = objc_msgSend(v17, sel_string);
  sub_1DC408A4C();

  v27 = (_QWORD *)*v25;
  sub_1DC0FB194();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DC40C740;
  v29 = (void *)*MEMORY[0x1E0DC1138];
  *(_QWORD *)(inited + 32) = *MEMORY[0x1E0DC1138];
  v30 = sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FB00);
  swift_bridgeObjectRetain();
  v31 = v29;
  *(_QWORD *)(inited + 40) = sub_1DC409304();
  v32 = (void *)*MEMORY[0x1E0DC1140];
  *(_QWORD *)(inited + 64) = v30;
  *(_QWORD *)(inited + 72) = v32;
  v33 = v27 + 2;
  v34 = v27[5];
  v35 = v27[6];
  __swift_project_boxed_opaque_existential_1(v33, v34);
  v36 = *(_QWORD *)(v35 + 16);
  v37 = *(uint64_t (**)(uint64_t, uint64_t))(v36 + 48);
  v38 = v32;
  v39 = v37(v34, v36);
  *(_QWORD *)(inited + 104) = sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FB30);
  *(_QWORD *)(inited + 80) = v39;
  sub_1DC0FA3C4(inited);
  v40 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  v41 = (void *)sub_1DC408A1C();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1DC081B48((unint64_t *)&qword_1EDB3F988, 255, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1DC40D90C);
  v42 = (void *)sub_1DC408980();
  swift_bridgeObjectRelease();
  v43 = objc_msgSend(v40, sel_initWithString_attributes_, v41, v42);
  swift_bridgeObjectRelease();

  objc_msgSend(a2, sel_setAttributedText_, v43);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v44);
}

id sub_1DC2245E8(uint64_t a1)
{
  id v2;
  uint64_t v3;
  void *v4;
  double *v5;
  id v6;
  void *ObjCClassFromMetadata;
  id v8;
  id v9;

  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3508]), sel_init);
  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v4 = (void *)objc_opt_self();
    v5 = (double *)(a1 + 56);
    do
    {
      v6 = objc_msgSend(v4, sel_bezierPathWithRect_, *(v5 - 3), *(v5 - 2), *(v5 - 1), *v5);
      objc_msgSend(v2, sel_appendPath_, v6);

      v5 += 4;
      --v3;
    }
    while (v3);
  }
  swift_bridgeObjectRelease();
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  v8 = objc_msgSend(v2, sel_CGPath);
  v9 = objc_msgSend(ObjCClassFromMetadata, sel_bezierPathWithCGPath_, v8);

  return v9;
}

uint64_t type metadata accessor for QuoteDetailViewRenderer()
{
  return objc_opt_self();
}

uint64_t sub_1DC224758(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[3];
  uint64_t v14;
  uint64_t v15;

  v4 = v2 + OBJC_IVAR____TtC8StocksUI23QuoteDetailViewRenderer_styler;
  swift_beginAccess();
  sub_1DC0824D4(v4, (uint64_t)v13);
  v5 = v14;
  v6 = v15;
  __swift_project_boxed_opaque_existential_1(v13, v14);
  v7 = *(_QWORD *)(v6 + 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 8);
  v11 = v5;
  v12 = v6;
  __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v10);
  v8(a2, v5, v7);
  swift_beginAccess();
  __swift_destroy_boxed_opaque_existential_1(v4);
  sub_1DC097DD0(&v10, v4);
  swift_endAccess();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
}

uint64_t sub_1DC224898(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = sub_1DC081B48(&qword_1EDB34BD8, a2, (uint64_t (*)(uint64_t))type metadata accessor for QuoteDetailViewRenderer, (uint64_t)&unk_1DC41ACC8);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1DC2248D4(uint64_t *a1)
{
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v4;
  uint64_t v6[2];

  v2 = *a1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    sub_1DC109E08();
  v4 = *(_QWORD *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  sub_1DC22494C(v6);
  return sub_1DC4097A8();
}

void sub_1DC22494C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  id v17;
  double v18;
  double v19;
  double v20;
  double v21;
  id *v22;
  void *v23;
  id v24;
  id v25;
  double v26;
  double v27;
  double v28;
  double v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  id v41;
  id v42;
  double v43;
  double v44;
  double v45;
  double v46;
  void *v47;
  unint64_t v48;
  unint64_t v49;
  char *v50;
  char *v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  BOOL v63;
  unint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  BOOL v73;
  uint64_t v74;
  char v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  BOOL v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;
  char *v96;
  unint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  char *v102;
  uint64_t v103;
  unint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  unint64_t v109;
  uint64_t *v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  void **v118;
  uint64_t v119;

  v2 = v1;
  v4 = a1[1];
  v5 = sub_1DC4099AC();
  if (v5 >= v4)
  {
    if (v4 < 0)
      goto LABEL_132;
    if (v4)
      sub_1DC2250B4(0, v4, 1, a1);
    return;
  }
  if (v4 >= 0)
    v6 = v4;
  else
    v6 = v4 + 1;
  if (v4 < -1)
    goto LABEL_140;
  v7 = v5;
  v110 = a1;
  if (v4 < 2)
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
    v119 = MEMORY[0x1E0DEE9D8];
    v118 = (void **)((MEMORY[0x1E0DEE9D8] & 0xFFFFFFFFFFFFFF8) + 32);
    if (v4 != 1)
    {
      v13 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
LABEL_98:
      v102 = v10;
      if (v13 >= 2)
      {
        v103 = *v110;
        do
        {
          v104 = v13 - 2;
          if (v13 < 2)
            goto LABEL_127;
          if (!v103)
            goto LABEL_139;
          v105 = v102;
          v106 = *(_QWORD *)&v102[16 * v104 + 32];
          v107 = *(_QWORD *)&v102[16 * v13 + 24];
          sub_1DC2251A8((void **)(v103 + 8 * v106), (id *)(v103 + 8 * *(_QWORD *)&v102[16 * v13 + 16]), v103 + 8 * v107, v118);
          if (v2)
            break;
          if (v107 < v106)
            goto LABEL_128;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v105 = sub_1DC35DBF8((uint64_t)v105);
          if (v104 >= *((_QWORD *)v105 + 2))
            goto LABEL_129;
          v108 = &v105[16 * v104 + 32];
          *(_QWORD *)v108 = v106;
          *((_QWORD *)v108 + 1) = v107;
          v109 = *((_QWORD *)v105 + 2);
          if (v13 > v109)
            goto LABEL_130;
          memmove(&v105[16 * v13 + 16], &v105[16 * v13 + 32], 16 * (v109 - v13));
          v102 = v105;
          *((_QWORD *)v105 + 2) = v109 - 1;
          v13 = v109 - 1;
        }
        while (v109 > 2);
      }
LABEL_95:
      swift_bridgeObjectRelease();
      *(_QWORD *)((v119 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
      sub_1DC408CF8();
      swift_bridgeObjectRelease();
      return;
    }
  }
  else
  {
    v8 = v6 >> 1;
    sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3F9D0);
    v9 = sub_1DC408D58();
    *(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10) = v8;
    v118 = (void **)((v9 & 0xFFFFFFFFFFFFFF8) + 32);
    v119 = v9;
  }
  v114 = v7;
  v11 = 0;
  v12 = *a1;
  v111 = *a1 - 8;
  v112 = *a1 + 16;
  v10 = (char *)MEMORY[0x1E0DEE9D8];
  v115 = v4;
  while (1)
  {
    v14 = v11++;
    v116 = v14;
    if (v11 < v4)
    {
      v15 = *(void **)(v12 + 8 * v14);
      v16 = *(id *)(v12 + 8 * v11);
      v17 = v15;
      objc_msgSend(v16, sel_accessibilityFrameInContainerSpace);
      v19 = v18;
      objc_msgSend(v17, sel_accessibilityFrameInContainerSpace);
      v21 = v20;

      v11 = v14 + 2;
      if (v14 + 2 < v4)
      {
        v22 = (id *)(v112 + 8 * v14);
        while (1)
        {
          v23 = *(v22 - 1);
          v24 = *v22;
          v25 = v23;
          objc_msgSend(v24, sel_accessibilityFrameInContainerSpace);
          v27 = v26;
          objc_msgSend(v25, sel_accessibilityFrameInContainerSpace);
          v29 = v28;

          if (v19 < v21 == v27 >= v29)
            break;
          ++v11;
          ++v22;
          if (v4 == v11)
          {
            v11 = v4;
            break;
          }
        }
        v14 = v116;
      }
      if (v19 < v21)
      {
        if (v11 < v14)
          goto LABEL_133;
        if (v14 < v11)
        {
          v30 = (uint64_t *)(v111 + 8 * v11);
          v31 = v11;
          v32 = v14;
          v33 = (uint64_t *)(v12 + 8 * v14);
          do
          {
            if (v32 != --v31)
            {
              if (!v12)
                goto LABEL_138;
              v34 = *v33;
              *v33 = *v30;
              *v30 = v34;
            }
            ++v32;
            --v30;
            ++v33;
          }
          while (v32 < v31);
        }
      }
    }
    if (v11 >= v4)
      goto LABEL_47;
    if (__OFSUB__(v11, v14))
      goto LABEL_131;
    if (v11 - v14 >= v114)
      goto LABEL_47;
    if (__OFADD__(v14, v114))
      goto LABEL_134;
    v35 = v14 + v114 >= v4 ? v4 : v14 + v114;
    if (v35 < v14)
      break;
    if (v11 != v35)
    {
      v113 = v10;
      v36 = v111 + 8 * v11;
      do
      {
        v37 = *(void **)(v12 + 8 * v11);
        v38 = v14;
        v39 = v36;
        do
        {
          v40 = *(void **)v39;
          v41 = v37;
          v42 = v40;
          objc_msgSend(v41, sel_accessibilityFrameInContainerSpace);
          v44 = v43;
          objc_msgSend(v42, sel_accessibilityFrameInContainerSpace);
          v46 = v45;

          if (v44 >= v46)
            break;
          if (!v12)
            goto LABEL_136;
          v47 = *(void **)v39;
          v37 = *(void **)(v39 + 8);
          *(_QWORD *)v39 = v37;
          *(_QWORD *)(v39 + 8) = v47;
          v39 -= 8;
          ++v38;
        }
        while (v11 != v38);
        ++v11;
        v36 += 8;
        v14 = v116;
      }
      while (v11 != v35);
      v11 = v35;
      v10 = v113;
    }
LABEL_47:
    if (v11 < v14)
      goto LABEL_126;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v10 = sub_1DC35D898(0, *((_QWORD *)v10 + 2) + 1, 1, v10);
    v49 = *((_QWORD *)v10 + 2);
    v48 = *((_QWORD *)v10 + 3);
    v13 = v49 + 1;
    if (v49 >= v48 >> 1)
      v10 = sub_1DC35D898((char *)(v48 > 1), v49 + 1, 1, v10);
    *((_QWORD *)v10 + 2) = v13;
    v50 = v10 + 32;
    v51 = &v10[16 * v49 + 32];
    *(_QWORD *)v51 = v14;
    *((_QWORD *)v51 + 1) = v11;
    if (v49)
    {
      v117 = v11;
      while (1)
      {
        v52 = v13 - 1;
        if (v13 >= 4)
        {
          v57 = &v50[16 * v13];
          v58 = *((_QWORD *)v57 - 8);
          v59 = *((_QWORD *)v57 - 7);
          v63 = __OFSUB__(v59, v58);
          v60 = v59 - v58;
          if (v63)
            goto LABEL_115;
          v62 = *((_QWORD *)v57 - 6);
          v61 = *((_QWORD *)v57 - 5);
          v63 = __OFSUB__(v61, v62);
          v55 = v61 - v62;
          v56 = v63;
          if (v63)
            goto LABEL_116;
          v64 = v13 - 2;
          v65 = &v50[16 * v13 - 32];
          v67 = *(_QWORD *)v65;
          v66 = *((_QWORD *)v65 + 1);
          v63 = __OFSUB__(v66, v67);
          v68 = v66 - v67;
          if (v63)
            goto LABEL_118;
          v63 = __OFADD__(v55, v68);
          v69 = v55 + v68;
          if (v63)
            goto LABEL_121;
          if (v69 >= v60)
          {
            v87 = &v50[16 * v52];
            v89 = *(_QWORD *)v87;
            v88 = *((_QWORD *)v87 + 1);
            v63 = __OFSUB__(v88, v89);
            v90 = v88 - v89;
            if (v63)
              goto LABEL_125;
            v80 = v55 < v90;
            goto LABEL_85;
          }
        }
        else
        {
          if (v13 != 3)
          {
            v81 = *((_QWORD *)v10 + 4);
            v82 = *((_QWORD *)v10 + 5);
            v63 = __OFSUB__(v82, v81);
            v74 = v82 - v81;
            v75 = v63;
            goto LABEL_79;
          }
          v54 = *((_QWORD *)v10 + 4);
          v53 = *((_QWORD *)v10 + 5);
          v63 = __OFSUB__(v53, v54);
          v55 = v53 - v54;
          v56 = v63;
        }
        if ((v56 & 1) != 0)
          goto LABEL_117;
        v64 = v13 - 2;
        v70 = &v50[16 * v13 - 32];
        v72 = *(_QWORD *)v70;
        v71 = *((_QWORD *)v70 + 1);
        v73 = __OFSUB__(v71, v72);
        v74 = v71 - v72;
        v75 = v73;
        if (v73)
          goto LABEL_120;
        v76 = &v50[16 * v52];
        v78 = *(_QWORD *)v76;
        v77 = *((_QWORD *)v76 + 1);
        v63 = __OFSUB__(v77, v78);
        v79 = v77 - v78;
        if (v63)
          goto LABEL_123;
        if (__OFADD__(v74, v79))
          goto LABEL_124;
        if (v74 + v79 >= v55)
        {
          v80 = v55 < v79;
LABEL_85:
          if (v80)
            v52 = v64;
          goto LABEL_87;
        }
LABEL_79:
        if ((v75 & 1) != 0)
          goto LABEL_119;
        v83 = &v50[16 * v52];
        v85 = *(_QWORD *)v83;
        v84 = *((_QWORD *)v83 + 1);
        v63 = __OFSUB__(v84, v85);
        v86 = v84 - v85;
        if (v63)
          goto LABEL_122;
        if (v86 < v74)
          goto LABEL_14;
LABEL_87:
        v91 = v52 - 1;
        if (v52 - 1 >= v13)
        {
          __break(1u);
LABEL_112:
          __break(1u);
LABEL_113:
          __break(1u);
LABEL_114:
          __break(1u);
LABEL_115:
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
          goto LABEL_135;
        }
        v92 = v12;
        if (!v12)
          goto LABEL_137;
        v93 = v10;
        v94 = &v50[16 * v91];
        v95 = *(_QWORD *)v94;
        v96 = v50;
        v97 = v52;
        v98 = &v50[16 * v52];
        v99 = *((_QWORD *)v98 + 1);
        v100 = v92;
        sub_1DC2251A8((void **)(v92 + 8 * *(_QWORD *)v94), (id *)(v92 + 8 * *(_QWORD *)v98), v92 + 8 * v99, v118);
        if (v1)
          goto LABEL_95;
        if (v99 < v95)
          goto LABEL_112;
        if (v97 > *((_QWORD *)v93 + 2))
          goto LABEL_113;
        *(_QWORD *)v94 = v95;
        *(_QWORD *)&v96[16 * v91 + 8] = v99;
        v101 = *((_QWORD *)v93 + 2);
        if (v97 >= v101)
          goto LABEL_114;
        v10 = v93;
        v13 = v101 - 1;
        memmove(v98, v98 + 16, 16 * (v101 - 1 - v97));
        v50 = v96;
        *((_QWORD *)v93 + 2) = v101 - 1;
        v12 = v100;
        v11 = v117;
        if (v101 <= 2)
          goto LABEL_14;
      }
    }
    v13 = 1;
LABEL_14:
    v4 = v115;
    if (v11 >= v115)
    {
      v2 = v1;
      goto LABEL_98;
    }
  }
LABEL_135:
  __break(1u);
LABEL_136:
  __break(1u);
LABEL_137:
  __break(1u);
LABEL_138:
  __break(1u);
LABEL_139:
  __break(1u);
LABEL_140:
  sub_1DC40982C();
  __break(1u);
}

void sub_1DC2250B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  id v13;
  double v14;
  double v15;
  double v16;
  double v17;
  void *v18;

  if (a3 != a2)
  {
    v4 = a3;
    v6 = *a4;
    v7 = *a4 + 8 * a3 - 8;
LABEL_5:
    v8 = *(void **)(v6 + 8 * v4);
    v9 = a1;
    v10 = v7;
    while (1)
    {
      v11 = *(void **)v10;
      v12 = v8;
      v13 = v11;
      objc_msgSend(v12, sel_accessibilityFrameInContainerSpace);
      v15 = v14;
      objc_msgSend(v13, sel_accessibilityFrameInContainerSpace);
      v17 = v16;

      if (v15 >= v17)
      {
LABEL_4:
        ++v4;
        v7 += 8;
        if (v4 == a2)
          return;
        goto LABEL_5;
      }
      if (!v6)
        break;
      v18 = *(void **)v10;
      v8 = *(void **)(v10 + 8);
      *(_QWORD *)v10 = v8;
      *(_QWORD *)(v10 + 8) = v18;
      v10 -= 8;
      if (v4 == ++v9)
        goto LABEL_4;
    }
    __break(1u);
  }
}

uint64_t sub_1DC2251A8(void **__src, id *a2, unint64_t a3, void **a4)
{
  id *v5;
  void **v6;
  int64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void **v13;
  void **v14;
  void *v15;
  id v16;
  id v17;
  double v18;
  double v19;
  double v20;
  double v21;
  id *v22;
  id *v23;
  id *v24;
  void **v25;
  id *v26;
  id *v27;
  void *v28;
  id v29;
  id v30;
  double v31;
  double v32;
  double v33;
  double v34;
  uint64_t result;
  char *v37;
  void **v38;
  id *v39;

  v5 = a2;
  v6 = __src;
  v7 = (char *)a2 - (char *)__src;
  v8 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0)
    v8 = (char *)a2 - (char *)__src;
  v9 = v8 >> 3;
  v10 = a3 - (_QWORD)a2;
  v11 = a3 - (_QWORD)a2 + 7;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v11 = a3 - (_QWORD)a2;
  v12 = v11 >> 3;
  v39 = __src;
  v38 = a4;
  if (v9 >= v11 >> 3)
  {
    if (v10 < -7)
      goto LABEL_46;
    if (a4 != a2 || &a2[v12] <= a4)
      memmove(a4, a2, 8 * v12);
    v23 = &a4[v12];
    v37 = (char *)v23;
    v39 = v5;
    if (v6 >= v5 || v10 < 8)
      goto LABEL_45;
    v24 = (id *)(a3 - 8);
    v25 = v5;
    while (1)
    {
      v26 = v24 + 1;
      v27 = v23 - 1;
      v28 = *--v25;
      v29 = *(v23 - 1);
      v30 = v28;
      objc_msgSend(v29, sel_accessibilityFrameInContainerSpace);
      v32 = v31;
      objc_msgSend(v30, sel_accessibilityFrameInContainerSpace);
      v34 = v33;

      if (v32 < v34)
        break;
      v37 = (char *)(v23 - 1);
      if (v26 < v23 || v24 >= v23)
      {
        *v24 = *v27;
        v25 = v5;
        --v23;
        goto LABEL_43;
      }
      if (v26 != v23)
        *v24 = *v27;
      v25 = v5;
      --v23;
      if (v5 <= v6)
        goto LABEL_45;
LABEL_44:
      --v24;
      v5 = v25;
      if (v23 <= a4)
        goto LABEL_45;
    }
    if (v26 != v5 || v24 >= v5)
      *v24 = *v25;
    v39 = v25;
LABEL_43:
    if (v25 <= v6)
      goto LABEL_45;
    goto LABEL_44;
  }
  if (v7 >= -7)
  {
    if (a4 != __src || &__src[v9] <= a4)
      memmove(a4, __src, 8 * v9);
    v13 = &a4[v9];
    v37 = (char *)v13;
    if ((unint64_t)v5 < a3 && v7 >= 8)
    {
      v14 = a4;
      do
      {
        v15 = *v14;
        v16 = *v5;
        v17 = v15;
        objc_msgSend(v16, sel_accessibilityFrameInContainerSpace);
        v19 = v18;
        objc_msgSend(v17, sel_accessibilityFrameInContainerSpace);
        v21 = v20;

        if (v19 >= v21)
        {
          if (v6 != v14)
            *v6 = *v14;
          v38 = ++v14;
          v22 = v5;
        }
        else
        {
          v22 = v5 + 1;
          if (v6 < v5 || v6 >= v22 || v6 != v5)
            *v6 = *v5;
        }
        ++v6;
        if (v14 >= v13)
          break;
        v5 = v22;
      }
      while ((unint64_t)v22 < a3);
      v39 = v6;
    }
LABEL_45:
    sub_1DC35D98C(&v39, &v38, &v37);
    return 1;
  }
LABEL_46:
  result = sub_1DC40988C();
  __break(1u);
  return result;
}

uint64_t sub_1DC2254D0(unsigned __int8 a1, void *a2)
{
  uint64_t v2;

  return sub_1DC223CC0(a1, a2, *(_QWORD *)(v2 + 16), *(uint64_t **)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD **)(v2 + 56));
}

unint64_t sub_1DC2254E0(unint64_t a1, void *a2)
{
  uint64_t v2;

  return sub_1DC224254(a1, a2, *(_QWORD *)(v2 + 16), *(uint64_t **)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40));
}

uint64_t sub_1DC2254EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1DC225530();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1DC225530()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB3A648)
  {
    v0 = sub_1DC4095A4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB3A648);
  }
}

void sub_1DC225584(char *a1)
{
  objc_class *ObjectType;
  char *v3;
  uint64_t v4;
  void *v5;
  double v6;
  CGFloat v7;
  double v8;
  CGFloat v9;
  double v10;
  CGFloat v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  void *v17;
  double v18;
  CGFloat v19;
  double v20;
  CGFloat v21;
  double v22;
  CGFloat v23;
  double v24;
  CGFloat v25;
  CGFloat v26;
  CGFloat v27;
  CGFloat v28;
  CGFloat v29;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  double v34;
  double v35;
  double v36;
  double v37;
  double MinX;
  double MinY;
  double v40;
  uint64_t rect;
  CGFloat recta;
  id v43;
  objc_super v44;
  CGRect v45;
  CGRect v46;
  CGRect v47;
  CGRect v48;
  CGRect v49;
  CGRect v50;
  CGRect v51;

  ObjectType = (objc_class *)swift_getObjectType();
  v43 = (id)MEMORY[0x1DF0CAD78](&a1[OBJC_IVAR____TtC8StocksUI40QuoteDetailViewLabelAccessibilityElement_scrollView]);
  if (v43)
  {
    v3 = &a1[OBJC_IVAR____TtC8StocksUI40QuoteDetailViewLabelAccessibilityElement_nameLabel];
    v4 = MEMORY[0x1DF0CAD78](&a1[OBJC_IVAR____TtC8StocksUI40QuoteDetailViewLabelAccessibilityElement_nameLabel]);
    if (!v4)
    {

      return;
    }
    v5 = (void *)v4;
    sub_1DC408F98();
    v7 = v6;
    v9 = v8;
    v11 = v10;
    v13 = v12;
    v14 = MEMORY[0x1DF0CAD78](v3);
    rect = v13;
    if (v14)
    {
      v15 = (void *)v14;
      v16 = MEMORY[0x1DF0CAD78](&a1[OBJC_IVAR____TtC8StocksUI40QuoteDetailViewLabelAccessibilityElement_valueLabel]);
      if (v16)
      {
        v17 = (void *)v16;
        objc_msgSend(v15, sel_accessibilityFrame);
        v19 = v18;
        v21 = v20;
        v23 = v22;
        v25 = v24;
        objc_msgSend(v17, sel_accessibilityFrame);
        v51.origin.x = v26;
        v51.origin.y = v27;
        v51.size.width = v28;
        v51.size.height = v29;
        v45.origin.x = v19;
        v45.origin.y = v21;
        v45.size.width = v23;
        v45.size.height = v25;
        v46 = CGRectUnion(v45, v51);
        x = v46.origin.x;
        y = v46.origin.y;
        width = v46.size.width;
        height = v46.size.height;

LABEL_9:
        objc_msgSend(v5, sel_frame, rect);
        MinX = CGRectGetMinX(v47);
        v48.origin.x = v7;
        v48.origin.y = v9;
        v48.size.width = v11;
        v48.size.height = recta;
        MinY = CGRectGetMinY(v48);
        v49.origin.x = x;
        v49.origin.y = y;
        v49.size.width = width;
        v49.size.height = height;
        v40 = CGRectGetWidth(v49);
        v50.origin.x = x;
        v50.origin.y = y;
        v50.size.width = width;
        v50.size.height = height;
        objc_msgSend(v43, sel_scrollRectToVisible_animated_, 0, MinX, MinY, v40, CGRectGetHeight(v50));

        return;
      }

    }
    v44.receiver = a1;
    v44.super_class = ObjectType;
    objc_msgSendSuper2(&v44, sel_accessibilityFrame, v13);
    x = v34;
    y = v35;
    width = v36;
    height = v37;
    goto LABEL_9;
  }
}

id sub_1DC2257B0(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  char **v11;
  void *v12;
  double v13;
  double v14;
  double v15;
  id v16;

  if (a2 == 1)
  {
    v12 = (void *)MEMORY[0x1DF0CAD78](a1 + OBJC_IVAR____TtC8StocksUI40QuoteDetailViewLabelAccessibilityElement_scrollView);
    if (v12)
    {
      v3 = v12;
      objc_msgSend(v12, sel_contentOffset);
      v14 = v13;
      objc_msgSend(v3, sel_contentInset);
      if (v14 != -v15)
      {
        v11 = &selRef_accessibilityScrollRightPage;
        goto LABEL_11;
      }
LABEL_8:
      v16 = 0;
LABEL_12:

      return v16;
    }
  }
  else if (a2 == 2)
  {
    v2 = (void *)MEMORY[0x1DF0CAD78](a1 + OBJC_IVAR____TtC8StocksUI40QuoteDetailViewLabelAccessibilityElement_scrollView);
    if (v2)
    {
      v3 = v2;
      objc_msgSend(v2, sel_contentOffset);
      v5 = v4;
      objc_msgSend(v3, sel_visibleSize);
      v7 = v5 + v6;
      objc_msgSend(v3, sel_contentInset);
      v9 = v7 - v8;
      objc_msgSend(v3, sel_contentSize);
      if (v9 != v10)
      {
        v11 = &selRef_accessibilityScrollLeftPage;
LABEL_11:
        v16 = objc_msgSend(v3, *v11);
        goto LABEL_12;
      }
      goto LABEL_8;
    }
  }
  return 0;
}

ValueMetadata *type metadata accessor for Settings.AppState()
{
  return &type metadata for Settings.AppState;
}

uint64_t sub_1DC2258E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;

  v0 = sub_1DC401348();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1DC401354();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1DC3FFFEC();
  MEMORY[0x1E0C80A78](v8);
  sub_1DC3FFF2C();
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DB5800], v4);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB57E0], v0);
  sub_1DC225A44();
  swift_allocObject();
  result = sub_1DC4013A8();
  qword_1F03689C0 = result;
  return result;
}

void sub_1DC225A44()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB290E8)
  {
    sub_1DC3FFFEC();
    sub_1DC225AA4();
    v0 = sub_1DC40139C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB290E8);
  }
}

unint64_t sub_1DC225AA4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EDB28A98;
  if (!qword_1EDB28A98)
  {
    v1 = sub_1DC3FFFEC();
    result = MEMORY[0x1DF0CAB8C](MEMORY[0x1E0DB5470], v1);
    atomic_store(result, (unint64_t *)&qword_1EDB28A98);
  }
  return result;
}

uint64_t type metadata accessor for StockChartViewRenderer()
{
  return objc_opt_self();
}

unint64_t sub_1DC225B0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  double v6;
  uint64_t v7;
  void *v8;
  unint64_t result;
  void *v10;
  void *v11;
  char **v12;
  void *v13;
  void *v14;
  void *v15;
  CGFloat v16;
  CGFloat v17;
  CGFloat v18;
  CGFloat v19;
  void *v20;
  SEL *v21;
  double v22;
  CGFloat v23;
  double v24;
  CGFloat v25;
  double v26;
  CGFloat v27;
  double v28;
  CGFloat v29;
  double Width;
  char *v31;
  id v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  double v37;
  SEL *v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char *v42;
  SEL *v43;
  unint64_t v44;
  void *v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  double *v50;
  id v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  unint64_t v56;
  double MinY;
  SEL **v58;
  uint64_t v59;
  double MinX;
  CGRect v61;
  CGRect v62;
  CGRect v63;
  CGRect v64;

  sub_1DC22609C();
  v59 = v5;
  *(_QWORD *)&v6 = MEMORY[0x1E0C80A78](v5).n128_u64[0];
  v58 = (SEL **)((char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = *(void **)(a3 + OBJC_IVAR____TtC8StocksUI24StockChartViewController_lineChartViewController);
  result = (unint64_t)objc_msgSend(v8, sel_view, v6);
  if (!result)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  v10 = (void *)result;
  objc_msgSend((id)result, sel_setAutoresizingMask_, 0);

  result = (unint64_t)objc_msgSend(v8, sel_view);
  if (!result)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  v11 = (void *)result;
  v12 = &selRef_scrollViewDidScroll_;
  objc_msgSend((id)result, sel_setFrame_, *(double *)(a2 + 32), *(double *)(a2 + 40), *(double *)(a2 + 48), *(double *)(a2 + 56));

  v13 = *(void **)(a3 + OBJC_IVAR____TtC8StocksUI24StockChartViewController_columnChartViewController);
  result = (unint64_t)objc_msgSend(v13, sel_view);
  if (!result)
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  v14 = (void *)result;
  objc_msgSend((id)result, sel_setAutoresizingMask_, 0);

  result = (unint64_t)objc_msgSend(v13, sel_view);
  if (!result)
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  v15 = (void *)result;
  v16 = *(double *)(a2 + 64);
  v17 = *(double *)(a2 + 72);
  v18 = *(double *)(a2 + 80);
  v19 = *(double *)(a2 + 88);
  v61.origin.x = v16;
  v61.origin.y = v17;
  v61.size.width = v18;
  v61.size.height = v19;
  MinX = CGRectGetMinX(v61);
  v62.origin.x = v16;
  v62.origin.y = v17;
  v62.size.width = v18;
  v62.size.height = v19;
  MinY = CGRectGetMinY(v62);
  result = (unint64_t)objc_msgSend(v13, sel_view);
  if (result)
  {
    v20 = (void *)result;
    v21 = (SEL *)&selRef_scrollViewDidScroll_;
    objc_msgSend((id)result, sel_frame);
    v23 = v22;
    v25 = v24;
    v27 = v26;
    v29 = v28;

    v63.origin.x = v23;
    v63.origin.y = v25;
    v63.size.width = v27;
    v63.size.height = v29;
    Width = CGRectGetWidth(v63);
    v64.origin.x = v16;
    v64.origin.y = v17;
    v64.size.width = v18;
    v64.size.height = v19;
    objc_msgSend(v15, sel_setFrame_, MinX, MinY, Width, CGRectGetHeight(v64));

    objc_msgSend(*(id *)(a3 + OBJC_IVAR____TtC8StocksUI24StockChartViewController_topDateRangePickerSeparator), sel_setFrame_, *(double *)(a2 + 168), *(double *)(a2 + 176), *(double *)(a2 + 184), *(double *)(a2 + 192));
    objc_msgSend(*(id *)(a3 + OBJC_IVAR____TtC8StocksUI24StockChartViewController_interactionDisplayView), sel_setFrame_, *(double *)(a2 + 96), *(double *)(a2 + 104), *(double *)(a2 + 112), *(double *)(a2 + 120));
    v31 = *(char **)(a3 + OBJC_IVAR____TtC8StocksUI24StockChartViewController_dateRangePicker);
    objc_msgSend(v31, sel_setContentSize_, *(double *)(a2 + 128), *(double *)(a2 + 136));
    objc_msgSend(v31, sel_setContentOffset_, *(double *)(a2 + 144), *(double *)(a2 + 152));
    MinX = *(double *)&v31;
    v32 = *(id *)&v31[OBJC_IVAR____TtC8StocksUI19DateRangePickerView_segmentedControl];
    sub_1DC1E2280();
    sub_1DC404954();
    v33 = sub_1DC404930();
    v55 = v32;
    v34 = sub_1DC404948();
    if (v33 >> 62)
      goto LABEL_19;
    v35 = *(_QWORD *)((v33 & 0xFFFFFFFFFFFFF8) + 0x10);
    while (v35)
    {
      v54 = a2;
      v36 = 0;
      v37 = *(double *)(v34 + 16);
      v56 = v33 & 0xC000000000000001;
      MinY = v37;
      while (1)
      {
        if (v56)
          v38 = (SEL *)MEMORY[0x1DF0C9FBC](v36, v33);
        else
          v38 = (SEL *)*(id *)(v33 + 8 * v36 + 32);
        v21 = v38;
        if (*(_QWORD *)&MinY == v36)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          goto LABEL_17;
        }
        if (v36 >= *(_QWORD *)(v34 + 16))
          break;
        v39 = v36 + 1;
        v12 = (char **)sub_1DC4002BC();
        v40 = (uint64_t)*(v12 - 1);
        v41 = v34
            + ((*(unsigned __int8 *)(v40 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80))
            + *(_QWORD *)(v40 + 72) * v36;
        v42 = (char *)v58 + *(int *)(v59 + 48);
        *v58 = v21;
        (*(void (**)(char *, unint64_t, char **))(v40 + 16))(v42, v41, v12);
        v43 = v21;
        ChartRange.accessibilityLabel.getter();
        a2 = v35;
        v44 = v33;
        v45 = (void *)sub_1DC408A1C();
        swift_bridgeObjectRelease();
        -[SEL setAccessibilityLabel:](v43, sel_setAccessibilityLabel_, v45);

        v33 = v44;
        v35 = a2;
        (*(void (**)(char *, char **))(v40 + 8))(v42, v12);
        v36 = v39;
        if (a2 == v39)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_17:
          v12 = &selRef_scrollViewDidScroll_;
          a2 = v54;
          v21 = (SEL *)&selRef_scrollViewDidScroll_;
          goto LABEL_21;
        }
      }
      __break(1u);
LABEL_19:
      swift_bridgeObjectRetain();
      v35 = sub_1DC409850();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_21:
    result = sub_1DC404930();
    v46 = result;
    if (result >> 62)
    {
      result = sub_1DC409850();
      v47 = result;
      if (result)
        goto LABEL_23;
    }
    else
    {
      v47 = *(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v47)
      {
LABEL_23:
        if (v47 < 1)
        {
          __break(1u);
        }
        else
        {
          v48 = *(_QWORD *)(a2 + 160);
          if ((unint64_t)(v47 - 1) < *(_QWORD *)(v48 + 16))
          {
            v49 = 0;
            v50 = (double *)(v48 + 56);
            do
            {
              if ((v46 & 0xC000000000000001) != 0)
                v51 = (id)MEMORY[0x1DF0C9FBC](v49, v46);
              else
                v51 = *(id *)(v46 + 8 * v49 + 32);
              v52 = v51;
              objc_msgSend(v51, v12[80], *(v50 - 3), *(v50 - 2), *(v50 - 1), *v50);
              if (objc_msgSend(v52, sel_isSelected))
              {
                objc_msgSend(v52, v21[84]);
                objc_msgSend(*(id *)&MinX, sel_scrollRectToVisible_animated_, 0);
              }
              ++v49;

              v50 += 4;
            }
            while (v47 != v49);
            goto LABEL_33;
          }
        }
        __break(1u);
        goto LABEL_36;
      }
    }
LABEL_33:

    return swift_bridgeObjectRelease();
  }
LABEL_40:
  __break(1u);
  return result;
}

void sub_1DC22609C()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EDB2A1E8)
  {
    sub_1DC4054A0();
    sub_1DC4002BC();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EDB2A1E8);
  }
}

uint64_t sub_1DC226108(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v25;
  char *v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v30[4];

  v2 = v1;
  v29 = type metadata accessor for StockFeedPool();
  MEMORY[0x1E0C80A78](v29);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1DC4010E4();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](v6);
  v26 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v25 - v10;
  if (qword_1EDB2CE08 != -1)
    swift_once();
  v12 = (id)qword_1EDB2CE00;
  sub_1DC408FE0();
  sub_1DC403F28();

  v13 = type metadata accessor for StockFeedServiceConfig();
  v14 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v14(v11, a1 + *(int *)(v13 + 40), v6);
  sub_1DC0824D4(v2 + 56, (uint64_t)v30);
  v28 = v7;
  __swift_project_boxed_opaque_existential_1(v30, v30[3]);
  v27 = sub_1DC400BE0() ^ 1;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v2 + 56), *(_QWORD *)(v2 + 80));
  v15 = sub_1DC400C1C();
  if ((v15 & 1) != 0)
  {
    v14(v5, (uint64_t)v11, v6);
    v16 = v29;
    *(_QWORD *)&v5[*(int *)(v29 + 20)] = MEMORY[0x1E0DEE9D8];
    v5[*(int *)(v16 + 24)] = v27 & 1;
    v5[*(int *)(v16 + 28)] = 0;
    sub_1DC089DA4(0, &qword_1EDB274E0, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedPool, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    v17 = sub_1DC402D58();
    v18 = v28;
  }
  else
  {
    MEMORY[0x1E0C80A78](v15);
    *(&v25 - 2) = v2;
    *(&v25 - 1) = (uint64_t)v11;
    sub_1DC2266E4();
    sub_1DC402E0C();
    v19 = v26;
    v14(v26, (uint64_t)v11, v6);
    v20 = v28;
    v21 = (*(unsigned __int8 *)(v28 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
    v22 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v20 + 32))(v22 + v21, v19, v6);
    *(_BYTE *)(v22 + v21 + v8) = v27 & 1;
    v23 = (void *)sub_1DC402C80();
    v17 = sub_1DC402CF8();
    swift_release();
    swift_release();

    v18 = v20;
  }
  (*(void (**)(char *, uint64_t))(v18 + 8))(v11, v6);
  return v17;
}

uint64_t sub_1DC22644C(uint64_t *a1, uint64_t a2, char a3)
{
  int *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v19;

  v6 = (int *)type metadata accessor for StockFeedPool();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *a1;
  v10 = *((_BYTE *)a1 + 8);
  v11 = qword_1EDB2CE08;
  swift_bridgeObjectRetain();
  if (v11 != -1)
    swift_once();
  v12 = (void *)qword_1EDB2CE00;
  sub_1DC089DA4(0, (unint64_t *)&qword_1EDB400C0, (uint64_t (*)(uint64_t))sub_1DC1542B8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1DC40DC10;
  v14 = *(_QWORD *)(v9 + 16);
  v15 = MEMORY[0x1E0DEB490];
  *(_QWORD *)(v13 + 56) = MEMORY[0x1E0DEB418];
  *(_QWORD *)(v13 + 64) = v15;
  *(_QWORD *)(v13 + 32) = v14;
  v16 = v12;
  sub_1DC408FE0();
  sub_1DC403F28();

  swift_bridgeObjectRelease();
  v17 = sub_1DC4010E4();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v8, a2, v17);
  *(_QWORD *)&v8[v6[5]] = v9;
  v8[v6[6]] = a3 & 1;
  v8[v6[7]] = v10;
  sub_1DC089DA4(0, &qword_1EDB274E0, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedPool, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  return sub_1DC402D58();
}

id sub_1DC226628()
{
  if (qword_1EDB2CE08 != -1)
    swift_once();
  return (id)qword_1EDB2CE00;
}

uint64_t sub_1DC226668(uint64_t a1)
{
  return sub_1DC226108(a1);
}

uint64_t sub_1DC226690()
{
  uint64_t v0;

  __swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)(v0 + 16) + 16), *(_QWORD *)(*(_QWORD *)(v0 + 16) + 40));
  return sub_1DC400A0C();
}

void sub_1DC2266E4()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EDB3F640)
  {
    sub_1DC089DA4(255, &qword_1EDB3F648, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF1A0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EDB3F640);
  }
}

uint64_t sub_1DC226764()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_1DC4010E4();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_1DC2267C8(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(sub_1DC4010E4() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  return sub_1DC22644C(a1, v1 + v4, *(_BYTE *)(v1 + v4 + *(_QWORD *)(v3 + 64)));
}

uint64_t isMastheadEnabled.getter()
{
  id v0;
  id v1;
  char v2;
  uint64_t result;

  v0 = objc_msgSend((id)objc_opt_self(), sel_currentDevice);
  v1 = objc_msgSend(v0, sel_userInterfaceIdiom);

  v2 = (_BYTE)v1 + 1;
  if ((unint64_t)v1 + 1 < 7 && ((0x5Fu >> v2) & 1) != 0)
    return (0x64u >> v2) & 1;
  result = sub_1DC409838();
  __break(1u);
  return result;
}

uint64_t static Settings.ForYouFeedMasthead.mastheadEnabled.getter()
{
  return sub_1DC10D910(&qword_1EDB28EA0);
}

uint64_t sub_1DC226900()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  _BYTE v8[16];

  v0 = sub_1DC401354();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = &v8[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = sub_1DC401348();
  MEMORY[0x1E0C80A78](v4);
  (*(void (**)(_BYTE *, _QWORD))(v6 + 104))(&v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)], *MEMORY[0x1E0DB57E0]);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB5800], v0);
  v8[15] = 1;
  sub_1DC132DB8();
  swift_allocObject();
  result = sub_1DC4013A8();
  qword_1EDB42B08 = result;
  return result;
}

uint64_t static Settings.ForYouFeedMasthead.premiumSealEnabled.getter()
{
  return sub_1DC10D910(&qword_1EDB42978);
}

ValueMetadata *type metadata accessor for Settings.ForYouFeedMasthead()
{
  return &type metadata for Settings.ForYouFeedMasthead;
}

uint64_t type metadata accessor for StockFeedViewerDataManager()
{
  return objc_opt_self();
}

uint64_t sub_1DC226A68@<X0>(__int128 *a1@<X0>, uint64_t a2@<X8>)
{
  void *v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;

  *(_BYTE *)(a2 + 40) = 0;
  *(_OWORD *)(a2 + 48) = xmmword_1DC41AEF0;
  *(_QWORD *)(a2 + 64) = 0;
  v3 = (void *)objc_opt_self();
  *(_QWORD *)(a2 + 72) = objc_msgSend(v3, sel_blackColor);
  *(_QWORD *)(a2 + 80) = objc_msgSend(v3, sel_whiteColor);
  sub_1DC112BA4();
  *(_QWORD *)(a2 + 88) = sub_1DC409388();
  *(_QWORD *)(a2 + 96) = objc_msgSend(v3, sel_systemWhiteColor);
  *(_QWORD *)(a2 + 104) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, 0.490196078, 0.498039216, 0.498039216, 1.0);
  *(_QWORD *)(a2 + 112) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, 0.8, 0.8, 0.8, 1.0);
  *(_QWORD *)(a2 + 120) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, 0.882352941, 0.960784314, 0.905882353, 1.0);
  *(_QWORD *)(a2 + 128) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, 0.0, 0.490196078, 0.105882353, 1.0);
  *(_QWORD *)(a2 + 136) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, 0.203921569, 0.780392157, 0.349019608, 1.0);
  *(_QWORD *)(a2 + 144) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, 0.247058824, 0.941176471, 0.419607843, 1.0);
  *(_QWORD *)(a2 + 152) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, 0.870588235, 0.0274509804, 0.109803922, 1.0);
  *(_QWORD *)(a2 + 160) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, 1.0, 0.231372549, 0.188235294, 1.0);
  *(_QWORD *)(a2 + 168) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, 0.231372549, 0.588235294, 0.97254902, 1.0);
  *(_QWORD *)(a2 + 176) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, 0.501960784, 0.501960784, 0.501960784, 1.0);
  *(_QWORD *)(a2 + 184) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, 0.329411765, 0.329411765, 0.329411765, 1.0);
  *(_QWORD *)(a2 + 192) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, 0.556862745, 0.556862745, 0.576470588, 1.0);
  *(_QWORD *)(a2 + 200) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, 0.556862745, 0.556862745, 0.576470588, 0.12);
  *(_QWORD *)(a2 + 208) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, 0.298039216, 0.850980392, 0.392156863, 1.0);
  *(_QWORD *)(a2 + 216) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, 0.352941176, 0.784313725, 0.980392157, 1.0);
  *(_QWORD *)(a2 + 224) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, 0.0, 0.592156863, 1.0, 1.0);
  *(_QWORD *)(a2 + 232) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, 0.552941176, 0.294117647, 1.0, 1.0);
  *(_QWORD *)(a2 + 240) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, 0.407843137, 0.0, 1.0, 1.0);
  *(_BYTE *)(a2 + 248) = 1;
  *(_QWORD *)(a2 + 256) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithWhite_alpha_, 0.670588235, 1.0);
  v4 = objc_msgSend(v3, sel_blackColor);
  v5 = objc_msgSend(v4, sel_colorWithAlphaComponent_, 0.25);

  *(_QWORD *)(a2 + 264) = v5;
  v6 = objc_msgSend(v3, sel_blackColor);
  v7 = objc_msgSend(v6, sel_colorWithAlphaComponent_, 0.25);

  *(_QWORD *)(a2 + 272) = v7;
  v8 = objc_msgSend(v3, sel_blackColor);
  v9 = objc_msgSend(v8, sel_colorWithAlphaComponent_, 0.6);

  *(_QWORD *)(a2 + 280) = v9;
  v10 = objc_msgSend(v3, sel_grayColor);
  v11 = objc_msgSend(v10, sel_colorWithAlphaComponent_, 0.3);

  *(_QWORD *)(a2 + 288) = v11;
  *(_QWORD *)(a2 + 296) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, 0.365, 0.365, 0.365, 1.0);
  *(_QWORD *)(a2 + 304) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, 0.556862745, 0.556862745, 0.576470588, 1.0);
  *(_QWORD *)(a2 + 312) = objc_msgSend(v3, sel_whiteColor);
  *(_QWORD *)(a2 + 320) = sub_1DC409388();
  *(_QWORD *)(a2 + 328) = objc_msgSend(v3, sel_secondaryLabelColor);
  v12 = objc_msgSend(v3, sel_whiteColor);
  v13 = objc_msgSend(v3, sel_secondarySystemBackgroundColor);
  v14 = objc_msgSend(v3, sel_ts_dynamicColor_withDarkStyleVariant_, v12, v13);

  *(_QWORD *)(a2 + 336) = v14;
  *(_QWORD *)(a2 + 344) = objc_msgSend(v3, sel_secondaryLabelColor);
  *(_QWORD *)(a2 + 352) = objc_msgSend(v3, sel_labelColor);
  *(_QWORD *)(a2 + 360) = objc_msgSend(v3, sel_systemBackgroundColor);
  *(_QWORD *)(a2 + 368) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, 0.933333333, 0.933333333, 0.937254902, 1.0);
  *(_QWORD *)(a2 + 376) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, 0.556862745, 0.556862745, 0.576470588, 1.0);
  *(_QWORD *)(a2 + 384) = objc_msgSend(v3, sel_separatorColor);
  *(_QWORD *)(a2 + 392) = objc_msgSend(v3, sel_secondaryLabelColor);
  *(_QWORD *)(a2 + 400) = objc_msgSend(v3, sel_labelColor);
  return sub_1DC097DD0(a1, a2);
}

void destroy for LightTheme(id *a1)
{
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);

}

uint64_t initializeWithCopy for LightTheme(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  void *v66;
  void *v67;
  void *v68;
  void *v69;
  void *v70;
  void *v71;
  void *v72;
  void *v73;
  void *v74;
  void *v75;
  void *v76;
  void *v77;
  void *v78;
  void *v79;
  void *v80;
  void *v81;
  void *v82;
  void *v83;
  void *v84;
  void *v85;
  void *v86;
  void *v87;
  void *v88;
  void *v89;
  void *v90;
  void *v91;
  void *v92;
  void *v93;
  void *v94;
  void *v95;
  void *v96;

  v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  v5 = *(void **)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v5;
  v7 = *(void **)(a2 + 80);
  v6 = *(void **)(a2 + 88);
  *(_QWORD *)(a1 + 80) = v7;
  *(_QWORD *)(a1 + 88) = v6;
  v9 = *(void **)(a2 + 96);
  v8 = *(void **)(a2 + 104);
  *(_QWORD *)(a1 + 96) = v9;
  *(_QWORD *)(a1 + 104) = v8;
  v11 = *(void **)(a2 + 112);
  v10 = *(void **)(a2 + 120);
  *(_QWORD *)(a1 + 112) = v11;
  *(_QWORD *)(a1 + 120) = v10;
  v12 = *(void **)(a2 + 128);
  v13 = *(void **)(a2 + 136);
  *(_QWORD *)(a1 + 128) = v12;
  *(_QWORD *)(a1 + 136) = v13;
  v66 = *(void **)(a2 + 144);
  v67 = *(void **)(a2 + 152);
  *(_QWORD *)(a1 + 144) = v66;
  *(_QWORD *)(a1 + 152) = v67;
  v68 = *(void **)(a2 + 160);
  v69 = *(void **)(a2 + 168);
  *(_QWORD *)(a1 + 160) = v68;
  *(_QWORD *)(a1 + 168) = v69;
  v70 = *(void **)(a2 + 176);
  v71 = *(void **)(a2 + 184);
  *(_QWORD *)(a1 + 176) = v70;
  *(_QWORD *)(a1 + 184) = v71;
  v72 = *(void **)(a2 + 192);
  v73 = *(void **)(a2 + 200);
  *(_QWORD *)(a1 + 192) = v72;
  *(_QWORD *)(a1 + 200) = v73;
  v74 = *(void **)(a2 + 208);
  v75 = *(void **)(a2 + 216);
  *(_QWORD *)(a1 + 208) = v74;
  *(_QWORD *)(a1 + 216) = v75;
  v76 = *(void **)(a2 + 224);
  v77 = *(void **)(a2 + 232);
  *(_QWORD *)(a1 + 224) = v76;
  *(_QWORD *)(a1 + 232) = v77;
  v79 = *(void **)(a2 + 240);
  *(_QWORD *)(a1 + 240) = v79;
  *(_BYTE *)(a1 + 248) = *(_BYTE *)(a2 + 248);
  v14 = *(void **)(a2 + 264);
  v78 = *(void **)(a2 + 256);
  *(_QWORD *)(a1 + 256) = v78;
  *(_QWORD *)(a1 + 264) = v14;
  v80 = v14;
  v81 = *(void **)(a2 + 272);
  v15 = *(void **)(a2 + 280);
  *(_QWORD *)(a1 + 272) = v81;
  *(_QWORD *)(a1 + 280) = v15;
  v82 = v15;
  v83 = *(void **)(a2 + 288);
  v16 = *(void **)(a2 + 296);
  *(_QWORD *)(a1 + 288) = v83;
  *(_QWORD *)(a1 + 296) = v16;
  v84 = v16;
  v85 = *(void **)(a2 + 304);
  v17 = *(void **)(a2 + 312);
  *(_QWORD *)(a1 + 304) = v85;
  *(_QWORD *)(a1 + 312) = v17;
  v86 = v17;
  v87 = *(void **)(a2 + 320);
  v18 = *(void **)(a2 + 328);
  *(_QWORD *)(a1 + 320) = v87;
  *(_QWORD *)(a1 + 328) = v18;
  v88 = v18;
  v89 = *(void **)(a2 + 336);
  v19 = *(void **)(a2 + 344);
  *(_QWORD *)(a1 + 336) = v89;
  *(_QWORD *)(a1 + 344) = v19;
  v90 = v19;
  v91 = *(void **)(a2 + 352);
  v20 = *(void **)(a2 + 360);
  *(_QWORD *)(a1 + 352) = v91;
  *(_QWORD *)(a1 + 360) = v20;
  v92 = v20;
  v93 = *(void **)(a2 + 368);
  v21 = *(void **)(a2 + 376);
  *(_QWORD *)(a1 + 368) = v93;
  *(_QWORD *)(a1 + 376) = v21;
  v94 = v21;
  v95 = *(void **)(a2 + 384);
  v22 = *(void **)(a2 + 392);
  v23 = *(void **)(a2 + 400);
  v96 = v22;
  *(_QWORD *)(a1 + 384) = v95;
  *(_QWORD *)(a1 + 392) = v22;
  *(_QWORD *)(a1 + 400) = v23;
  v24 = v5;
  v25 = v7;
  v26 = v6;
  v27 = v9;
  v28 = v8;
  v29 = v11;
  v30 = v10;
  v31 = v12;
  v32 = v13;
  v33 = v66;
  v34 = v67;
  v35 = v68;
  v36 = v69;
  v37 = v70;
  v38 = v71;
  v39 = v72;
  v40 = v73;
  v41 = v74;
  v42 = v75;
  v43 = v76;
  v44 = v77;
  v45 = v79;
  v46 = v78;
  v47 = v80;
  v48 = v81;
  v49 = v82;
  v50 = v83;
  v51 = v84;
  v52 = v85;
  v53 = v86;
  v54 = v87;
  v55 = v88;
  v56 = v89;
  v57 = v90;
  v58 = v91;
  v59 = v92;
  v60 = v93;
  v61 = v94;
  v62 = v95;
  v63 = v96;
  v64 = v23;
  return a1;
}

uint64_t assignWithCopy for LightTheme(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  id v15;
  void *v16;
  void *v17;
  id v18;
  void *v19;
  void *v20;
  id v21;
  void *v22;
  void *v23;
  id v24;
  void *v25;
  void *v26;
  id v27;
  void *v28;
  void *v29;
  id v30;
  void *v31;
  void *v32;
  id v33;
  void *v34;
  void *v35;
  id v36;
  void *v37;
  void *v38;
  id v39;
  void *v40;
  void *v41;
  id v42;
  void *v43;
  void *v44;
  id v45;
  void *v46;
  void *v47;
  id v48;
  void *v49;
  void *v50;
  id v51;
  void *v52;
  void *v53;
  id v54;
  void *v55;
  void *v56;
  id v57;
  void *v58;
  void *v59;
  id v60;
  void *v61;
  void *v62;
  id v63;
  void *v64;
  void *v65;
  id v66;
  void *v67;
  void *v68;
  id v69;
  void *v70;
  void *v71;
  id v72;
  void *v73;
  void *v74;
  id v75;
  void *v76;
  void *v77;
  id v78;
  void *v79;
  void *v80;
  id v81;
  void *v82;
  void *v83;
  id v84;
  void *v85;
  void *v86;
  id v87;
  void *v88;
  void *v89;
  id v90;
  void *v91;
  void *v92;
  id v93;
  void *v94;
  void *v95;
  id v96;
  void *v97;
  void *v98;
  id v99;
  void *v100;
  void *v101;
  id v102;
  void *v103;
  void *v104;
  id v105;
  void *v106;
  void *v107;
  id v108;
  void *v109;
  void *v110;
  id v111;
  void *v112;
  void *v113;
  id v114;
  void *v115;
  void *v116;
  id v117;
  void *v118;
  void *v119;
  id v120;
  void *v121;
  void *v122;
  id v123;
  void *v124;
  void *v125;
  id v126;

  __swift_assign_boxed_opaque_existential_1((uint64_t *)a1, (uint64_t *)a2);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  v4 = *(void **)(a2 + 72);
  v5 = *(void **)(a1 + 72);
  *(_QWORD *)(a1 + 72) = v4;
  v6 = v4;

  v7 = *(void **)(a2 + 80);
  v8 = *(void **)(a1 + 80);
  *(_QWORD *)(a1 + 80) = v7;
  v9 = v7;

  v10 = *(void **)(a2 + 88);
  v11 = *(void **)(a1 + 88);
  *(_QWORD *)(a1 + 88) = v10;
  v12 = v10;

  v13 = *(void **)(a2 + 96);
  v14 = *(void **)(a1 + 96);
  *(_QWORD *)(a1 + 96) = v13;
  v15 = v13;

  v16 = *(void **)(a2 + 104);
  v17 = *(void **)(a1 + 104);
  *(_QWORD *)(a1 + 104) = v16;
  v18 = v16;

  v19 = *(void **)(a2 + 112);
  v20 = *(void **)(a1 + 112);
  *(_QWORD *)(a1 + 112) = v19;
  v21 = v19;

  v22 = *(void **)(a2 + 120);
  v23 = *(void **)(a1 + 120);
  *(_QWORD *)(a1 + 120) = v22;
  v24 = v22;

  v25 = *(void **)(a2 + 128);
  v26 = *(void **)(a1 + 128);
  *(_QWORD *)(a1 + 128) = v25;
  v27 = v25;

  v28 = *(void **)(a2 + 136);
  v29 = *(void **)(a1 + 136);
  *(_QWORD *)(a1 + 136) = v28;
  v30 = v28;

  v31 = *(void **)(a2 + 144);
  v32 = *(void **)(a1 + 144);
  *(_QWORD *)(a1 + 144) = v31;
  v33 = v31;

  v34 = *(void **)(a2 + 152);
  v35 = *(void **)(a1 + 152);
  *(_QWORD *)(a1 + 152) = v34;
  v36 = v34;

  v37 = *(void **)(a2 + 160);
  v38 = *(void **)(a1 + 160);
  *(_QWORD *)(a1 + 160) = v37;
  v39 = v37;

  v40 = *(void **)(a2 + 168);
  v41 = *(void **)(a1 + 168);
  *(_QWORD *)(a1 + 168) = v40;
  v42 = v40;

  v43 = *(void **)(a2 + 176);
  v44 = *(void **)(a1 + 176);
  *(_QWORD *)(a1 + 176) = v43;
  v45 = v43;

  v46 = *(void **)(a2 + 184);
  v47 = *(void **)(a1 + 184);
  *(_QWORD *)(a1 + 184) = v46;
  v48 = v46;

  v49 = *(void **)(a2 + 192);
  v50 = *(void **)(a1 + 192);
  *(_QWORD *)(a1 + 192) = v49;
  v51 = v49;

  v52 = *(void **)(a2 + 200);
  v53 = *(void **)(a1 + 200);
  *(_QWORD *)(a1 + 200) = v52;
  v54 = v52;

  v55 = *(void **)(a2 + 208);
  v56 = *(void **)(a1 + 208);
  *(_QWORD *)(a1 + 208) = v55;
  v57 = v55;

  v58 = *(void **)(a2 + 216);
  v59 = *(void **)(a1 + 216);
  *(_QWORD *)(a1 + 216) = v58;
  v60 = v58;

  v61 = *(void **)(a2 + 224);
  v62 = *(void **)(a1 + 224);
  *(_QWORD *)(a1 + 224) = v61;
  v63 = v61;

  v64 = *(void **)(a2 + 232);
  v65 = *(void **)(a1 + 232);
  *(_QWORD *)(a1 + 232) = v64;
  v66 = v64;

  v67 = *(void **)(a2 + 240);
  v68 = *(void **)(a1 + 240);
  *(_QWORD *)(a1 + 240) = v67;
  v69 = v67;

  *(_BYTE *)(a1 + 248) = *(_BYTE *)(a2 + 248);
  v70 = *(void **)(a2 + 256);
  v71 = *(void **)(a1 + 256);
  *(_QWORD *)(a1 + 256) = v70;
  v72 = v70;

  v73 = *(void **)(a2 + 264);
  v74 = *(void **)(a1 + 264);
  *(_QWORD *)(a1 + 264) = v73;
  v75 = v73;

  v76 = *(void **)(a2 + 272);
  v77 = *(void **)(a1 + 272);
  *(_QWORD *)(a1 + 272) = v76;
  v78 = v76;

  v79 = *(void **)(a2 + 280);
  v80 = *(void **)(a1 + 280);
  *(_QWORD *)(a1 + 280) = v79;
  v81 = v79;

  v82 = *(void **)(a2 + 288);
  v83 = *(void **)(a1 + 288);
  *(_QWORD *)(a1 + 288) = v82;
  v84 = v82;

  v85 = *(void **)(a2 + 296);
  v86 = *(void **)(a1 + 296);
  *(_QWORD *)(a1 + 296) = v85;
  v87 = v85;

  v88 = *(void **)(a2 + 304);
  v89 = *(void **)(a1 + 304);
  *(_QWORD *)(a1 + 304) = v88;
  v90 = v88;

  v91 = *(void **)(a2 + 312);
  v92 = *(void **)(a1 + 312);
  *(_QWORD *)(a1 + 312) = v91;
  v93 = v91;

  v94 = *(void **)(a2 + 320);
  v95 = *(void **)(a1 + 320);
  *(_QWORD *)(a1 + 320) = v94;
  v96 = v94;

  v97 = *(void **)(a2 + 328);
  v98 = *(void **)(a1 + 328);
  *(_QWORD *)(a1 + 328) = v97;
  v99 = v97;

  v100 = *(void **)(a2 + 336);
  v101 = *(void **)(a1 + 336);
  *(_QWORD *)(a1 + 336) = v100;
  v102 = v100;

  v103 = *(void **)(a2 + 344);
  v104 = *(void **)(a1 + 344);
  *(_QWORD *)(a1 + 344) = v103;
  v105 = v103;

  v106 = *(void **)(a2 + 352);
  v107 = *(void **)(a1 + 352);
  *(_QWORD *)(a1 + 352) = v106;
  v108 = v106;

  v109 = *(void **)(a2 + 360);
  v110 = *(void **)(a1 + 360);
  *(_QWORD *)(a1 + 360) = v109;
  v111 = v109;

  v112 = *(void **)(a2 + 368);
  v113 = *(void **)(a1 + 368);
  *(_QWORD *)(a1 + 368) = v112;
  v114 = v112;

  v115 = *(void **)(a2 + 376);
  v116 = *(void **)(a1 + 376);
  *(_QWORD *)(a1 + 376) = v115;
  v117 = v115;

  v118 = *(void **)(a2 + 384);
  v119 = *(void **)(a1 + 384);
  *(_QWORD *)(a1 + 384) = v118;
  v120 = v118;

  v121 = *(void **)(a2 + 392);
  v122 = *(void **)(a1 + 392);
  *(_QWORD *)(a1 + 392) = v121;
  v123 = v121;

  v124 = *(void **)(a2 + 400);
  v125 = *(void **)(a1 + 400);
  *(_QWORD *)(a1 + 400) = v124;
  v126 = v124;

  return a1;
}

void *__swift_memcpy408_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x198uLL);
}

uint64_t assignWithTake for LightTheme(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  void *v43;
  void *v44;
  void *v45;
  void *v46;

  __swift_destroy_boxed_opaque_existential_1(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  v5 = *(_QWORD *)(a2 + 72);
  v6 = *(void **)(a1 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v5;

  v7 = *(void **)(a1 + 80);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);

  v8 = *(void **)(a1 + 88);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);

  v9 = *(void **)(a1 + 96);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);

  v10 = *(void **)(a1 + 104);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);

  v11 = *(void **)(a1 + 112);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);

  v12 = *(void **)(a1 + 120);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);

  v13 = *(void **)(a1 + 128);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);

  v14 = *(void **)(a1 + 136);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);

  v15 = *(void **)(a1 + 144);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);

  v16 = *(void **)(a1 + 152);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);

  v17 = *(void **)(a1 + 160);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);

  v18 = *(void **)(a1 + 168);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);

  v19 = *(void **)(a1 + 176);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);

  v20 = *(void **)(a1 + 184);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);

  v21 = *(void **)(a1 + 192);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);

  v22 = *(void **)(a1 + 200);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);

  v23 = *(void **)(a1 + 208);
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);

  v24 = *(void **)(a1 + 216);
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);

  v25 = *(void **)(a1 + 224);
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);

  v26 = *(void **)(a1 + 232);
  *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);

  v27 = *(void **)(a1 + 240);
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);

  *(_BYTE *)(a1 + 248) = *(_BYTE *)(a2 + 248);
  v28 = *(void **)(a1 + 256);
  *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);

  v29 = *(void **)(a1 + 264);
  *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);

  v30 = *(void **)(a1 + 272);
  *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);

  v31 = *(void **)(a1 + 280);
  *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);

  v32 = *(void **)(a1 + 288);
  *(_QWORD *)(a1 + 288) = *(_QWORD *)(a2 + 288);

  v33 = *(void **)(a1 + 296);
  *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);

  v34 = *(void **)(a1 + 304);
  *(_QWORD *)(a1 + 304) = *(_QWORD *)(a2 + 304);

  v35 = *(void **)(a1 + 312);
  *(_QWORD *)(a1 + 312) = *(_QWORD *)(a2 + 312);

  v36 = *(void **)(a1 + 320);
  *(_QWORD *)(a1 + 320) = *(_QWORD *)(a2 + 320);

  v37 = *(void **)(a1 + 328);
  *(_QWORD *)(a1 + 328) = *(_QWORD *)(a2 + 328);

  v38 = *(void **)(a1 + 336);
  *(_QWORD *)(a1 + 336) = *(_QWORD *)(a2 + 336);

  v39 = *(void **)(a1 + 344);
  *(_QWORD *)(a1 + 344) = *(_QWORD *)(a2 + 344);

  v40 = *(void **)(a1 + 352);
  *(_QWORD *)(a1 + 352) = *(_QWORD *)(a2 + 352);

  v41 = *(void **)(a1 + 360);
  *(_QWORD *)(a1 + 360) = *(_QWORD *)(a2 + 360);

  v42 = *(void **)(a1 + 368);
  *(_QWORD *)(a1 + 368) = *(_QWORD *)(a2 + 368);

  v43 = *(void **)(a1 + 376);
  *(_QWORD *)(a1 + 376) = *(_QWORD *)(a2 + 376);

  v44 = *(void **)(a1 + 384);
  *(_QWORD *)(a1 + 384) = *(_QWORD *)(a2 + 384);

  v45 = *(void **)(a1 + 392);
  *(_QWORD *)(a1 + 392) = *(_QWORD *)(a2 + 392);

  v46 = *(void **)(a1 + 400);
  *(_QWORD *)(a1 + 400) = *(_QWORD *)(a2 + 400);

  return a1;
}

uint64_t getEnumTagSinglePayload for LightTheme(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 408))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LightTheme(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 408) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 408) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for LightTheme()
{
  return &type metadata for LightTheme;
}

uint64_t sub_1DC227D0C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  sub_1DC112BA4();
  result = sub_1DC409388();
  *a1 = result;
  return result;
}

void sub_1DC227D3C(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 40);
}

id sub_1DC227D48(uint64_t a1, uint64_t a2)
{
  return sub_1DC227D60(a1, a2, (SEL *)&selRef_systemGroupedBackgroundColor);
}

id sub_1DC227D54(uint64_t a1, uint64_t a2)
{
  return sub_1DC227D60(a1, a2, (SEL *)&selRef_whiteColor);
}

id sub_1DC227D60(uint64_t a1, uint64_t a2, SEL *a3)
{
  return objc_msgSend((id)objc_opt_self(), *a3);
}

id sub_1DC227D94()
{
  uint64_t v0;
  _BOOL4 v1;
  uint64_t v2;

  v1 = UIAccessibilityDarkerSystemColorsEnabled();
  v2 = 136;
  if (v1)
    v2 = 128;
  return *(id *)(v0 + v2);
}

id sub_1DC227DBC()
{
  uint64_t v0;

  return *(id *)(v0 + 120);
}

id sub_1DC227DC4()
{
  uint64_t v0;

  return *(id *)(v0 + 168);
}

id sub_1DC227DCC()
{
  id *v0;
  id *v1;
  BOOL v2;

  if (UIAccessibilityDarkerSystemColorsEnabled())
  {
    v1 = v0 + 18;
  }
  else
  {
    v2 = UIAccessibilityDarkerSystemColorsEnabled();
    v1 = v0 + 16;
    if (!v2)
      v1 = v0 + 17;
  }
  return *v1;
}

id sub_1DC227E04()
{
  uint64_t v0;

  return *(id *)(v0 + 184);
}

id sub_1DC227E0C()
{
  uint64_t v0;

  return *(id *)(v0 + 192);
}

id sub_1DC227E14()
{
  uint64_t v0;

  return *(id *)(v0 + 200);
}

id sub_1DC227E1C()
{
  uint64_t v0;

  return *(id *)(v0 + 360);
}

id sub_1DC227E24()
{
  uint64_t v0;

  return *(id *)(v0 + 368);
}

id sub_1DC227E30()
{
  id *v0;
  BOOL v1;
  id *v2;

  if (UIAccessibilityDarkerSystemColorsEnabled())
  {
    v1 = UIAccessibilityDarkerSystemColorsEnabled();
    v2 = v0 + 16;
    if (!v1)
      v2 = v0 + 17;
  }
  else
  {
    v2 = v0 + 26;
  }
  return *v2;
}

id sub_1DC227E68()
{
  uint64_t v0;

  return *(id *)(v0 + 216);
}

id sub_1DC227E70()
{
  uint64_t v0;

  return *(id *)(v0 + 224);
}

id sub_1DC227E78()
{
  uint64_t v0;

  return *(id *)(v0 + 232);
}

id sub_1DC227E80()
{
  uint64_t v0;

  return *(id *)(v0 + 240);
}

id sub_1DC227E88()
{
  uint64_t v0;

  return *(id *)(v0 + 256);
}

void sub_1DC227E90(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 248);
}

id sub_1DC227E9C()
{
  uint64_t v0;

  return *(id *)(v0 + 264);
}

id sub_1DC227EA4()
{
  uint64_t v0;

  return *(id *)(v0 + 272);
}

id sub_1DC227EAC()
{
  uint64_t v0;

  return *(id *)(v0 + 280);
}

id sub_1DC227EB4()
{
  uint64_t v0;

  return *(id *)(v0 + 288);
}

id sub_1DC227EBC()
{
  uint64_t v0;

  return *(id *)(v0 + 296);
}

id sub_1DC227EC4()
{
  uint64_t v0;

  return *(id *)(v0 + 304);
}

id sub_1DC227ECC()
{
  uint64_t v0;

  return *(id *)(v0 + 312);
}

id sub_1DC227ED4()
{
  uint64_t v0;

  return *(id *)(v0 + 320);
}

id sub_1DC227EDC()
{
  uint64_t v0;

  return *(id *)(v0 + 328);
}

id sub_1DC227EE4()
{
  uint64_t v0;

  return *(id *)(v0 + 336);
}

id sub_1DC227EEC()
{
  uint64_t v0;

  return *(id *)(v0 + 344);
}

id sub_1DC227EF4()
{
  uint64_t v0;

  return *(id *)(v0 + 352);
}

uint64_t sub_1DC227EFC()
{
  uint64_t v1;

  sub_1DC112BA4();
  sub_1DC4073B4();
  return v1;
}

id sub_1DC227F48()
{
  uint64_t v0;

  return *(id *)(v0 + 376);
}

id sub_1DC227F50()
{
  uint64_t v0;

  return *(id *)(v0 + 384);
}

id sub_1DC227F58()
{
  uint64_t v0;

  return *(id *)(v0 + 392);
}

id sub_1DC227F60()
{
  uint64_t v0;

  return *(id *)(v0 + 400);
}

uint64_t sub_1DC227F68()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 48);
}

id sub_1DC227F70@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(*(_QWORD *)(v1 + 16) + 80);
  *a1 = v2;
  return v2;
}

char *sub_1DC227F88(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v5;
  objc_class *ObjectType;
  uint64_t v11;
  void *v12;
  char *v13;
  uint64_t v14;
  id v15;
  id v16;
  char *v17;
  id v18;
  uint64_t v19;
  void *v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  double v27;
  id v28;
  objc_super v30;

  v5 = v4;
  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v4[OBJC_IVAR____TtC8StocksUI10ReaderView_contentMaxWidth] = 0x408EF00000000000;
  v11 = OBJC_IVAR____TtC8StocksUI10ReaderView_contentBackgroundColor;
  v12 = (void *)objc_opt_self();
  v13 = v5;
  *(_QWORD *)&v5[v11] = objc_msgSend(v12, sel_whiteColor);
  v14 = OBJC_IVAR____TtC8StocksUI10ReaderView_contentView;
  *(_QWORD *)&v13[v14] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);

  v30.receiver = v13;
  v30.super_class = ObjectType;
  v15 = objc_msgSendSuper2(&v30, sel_initWithFrame_, a1, a2, a3, a4);
  objc_msgSend(v15, sel_setPreservesSuperviewLayoutMargins_, 1);
  v16 = objc_allocWithZone(MEMORY[0x1E0DC3658]);
  v17 = (char *)v15;
  v18 = objc_msgSend(v16, sel_initWithWhite_alpha_, 0.929411765, 1.0);
  objc_msgSend(v17, sel_setBackgroundColor_, v18);

  v19 = OBJC_IVAR____TtC8StocksUI10ReaderView_contentView;
  v20 = *(void **)&v17[OBJC_IVAR____TtC8StocksUI10ReaderView_contentView];
  objc_msgSend(v17, sel_addSubview_, v20);
  objc_msgSend(v20, sel_setBackgroundColor_, *(_QWORD *)&v17[OBJC_IVAR____TtC8StocksUI10ReaderView_contentBackgroundColor]);
  v21 = objc_msgSend(v20, sel_layer);
  v22 = objc_msgSend(v12, sel_blackColor);
  v23 = objc_msgSend(v22, sel_colorWithAlphaComponent_, 0.27);

  v24 = objc_msgSend(v23, sel_CGColor);
  objc_msgSend(v21, sel_setShadowColor_, v24);

  v25 = objc_msgSend(*(id *)&v17[v19], sel_layer);
  objc_msgSend(v25, sel_setShadowOffset_, 0.0, -2.0);

  v26 = objc_msgSend(*(id *)&v17[v19], sel_layer);
  LODWORD(v27) = 1049247089;
  objc_msgSend(v26, sel_setShadowOpacity_, v27);

  v28 = objc_msgSend(*(id *)&v17[v19], sel_layer);
  objc_msgSend(v28, sel_setShadowRadius_, 4.0);

  return v17;
}

void sub_1DC2282A4()
{
  char *v0;
  void *v1;
  double Width;
  uint64_t v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  id v14;
  id v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  id v24;
  id v25;
  objc_super v26;
  CGRect v27;
  CGRect v28;
  CGRect v29;

  v26.receiver = v0;
  v26.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v26, sel_layoutSubviews);
  v1 = *(void **)&v0[OBJC_IVAR____TtC8StocksUI10ReaderView_contentView];
  objc_msgSend(v0, sel_bounds);
  Width = CGRectGetWidth(v27);
  v3 = OBJC_IVAR____TtC8StocksUI10ReaderView_contentMaxWidth;
  v4 = *(double *)&v0[OBJC_IVAR____TtC8StocksUI10ReaderView_contentMaxWidth];
  objc_msgSend(v0, sel_layoutMargins);
  v6 = v4 + v5;
  objc_msgSend(v0, sel_layoutMargins);
  if ((Width - (v6 + v7)) * 0.5 < 0.0)
    v8 = 0.0;
  else
    v8 = (Width - (v6 + v7)) * 0.5;
  objc_msgSend(v0, sel_bounds);
  v9 = CGRectGetWidth(v28);
  v10 = *(double *)&v0[v3];
  objc_msgSend(v0, sel_layoutMargins);
  v12 = v10 + v11;
  objc_msgSend(v0, sel_layoutMargins);
  if (v12 + v13 < v9)
    v9 = v12 + v13;
  objc_msgSend(v0, sel_bounds);
  objc_msgSend(v1, sel_setFrame_, v8, 0.0, v9, CGRectGetHeight(v29));
  v14 = objc_msgSend(v1, sel_layer);
  v15 = objc_msgSend(v1, sel_layer);
  objc_msgSend(v15, sel_bounds);
  v17 = v16;
  v19 = v18;
  v21 = v20;
  v23 = v22;

  v24 = objc_msgSend((id)objc_opt_self(), sel_bezierPathWithRect_, v17, v19, v21, v23);
  v25 = objc_msgSend(v24, sel_CGPath);

  objc_msgSend(v14, sel_setShadowPath_, v25);
}

uint64_t type metadata accessor for ReaderView()
{
  return objc_opt_self();
}

void sub_1DC228524()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)&v0[OBJC_IVAR____TtC8StocksUI10ReaderView_contentMaxWidth] = 0x408EF00000000000;
  v1 = OBJC_IVAR____TtC8StocksUI10ReaderView_contentBackgroundColor;
  *(_QWORD *)&v0[v1] = objc_msgSend((id)objc_opt_self(), sel_whiteColor);
  v2 = OBJC_IVAR____TtC8StocksUI10ReaderView_contentView;
  *(_QWORD *)&v0[v2] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);

  sub_1DC409838();
  __break(1u);
}

uint64_t sub_1DC2285F8()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1DC228624(uint64_t a1, uint64_t a2, uint64_t a3, void **a4)
{
  return sub_1DC228654(*a4);
}

uint64_t sub_1DC22862C(uint64_t a1, uint64_t a2, uint64_t a3, void **a4)
{
  return sub_1DC228908(*a4) & 1;
}

uint64_t sub_1DC228654(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  void *v16;
  void (*v17)(char *, char *, uint64_t);
  void (*v18)(char *, _QWORD, uint64_t, uint64_t);
  unsigned int (*v19)(char *, uint64_t, uint64_t);
  void *v21;
  id v22;
  void *v23;
  id v24;
  void *v25;
  uint64_t v26;

  sub_1DC133BB0(0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v26 - v6;
  v8 = sub_1DC3FFDD0();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v26 - v13;
  swift_getObjectType();
  v15 = objc_msgSend(a1, sel_routeURL);
  if (v15)
  {
    v16 = v15;
    sub_1DC3FFD94();

    v17 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
    v17(v4, v11, v8);
    v18 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56);
    v18(v4, 0, 1, v8);
    v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
    if (v19(v4, 1, v8) != 1)
    {
      v17(v7, v4, v8);
      v18(v7, 0, 1, v8);
      goto LABEL_6;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v4, 1, 1, v8);
  }
  sub_1DC4091D8();
  sub_1DC0926D8((uint64_t)v4, (uint64_t (*)(_QWORD))sub_1DC133BB0);
  v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
LABEL_6:
  if (v19(v7, 1, v8) == 1)
    return sub_1DC0926D8((uint64_t)v7, (uint64_t (*)(_QWORD))sub_1DC133BB0);
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v14, v7, v8);
  v21 = (void *)objc_opt_self();
  v22 = objc_msgSend(v21, sel_generalPasteboard);
  v23 = (void *)sub_1DC3FFD88();
  objc_msgSend(v22, sel_setURL_, v23);

  v24 = objc_msgSend(v21, sel_generalPasteboard);
  sub_1DC3FFD7C();
  v25 = (void *)sub_1DC408A1C();
  swift_bridgeObjectRelease();
  objc_msgSend(v24, sel_setString_, v25);

  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v14, v8);
}

uint64_t sub_1DC228908(void *a1)
{
  uint64_t v1;
  uint64_t result;
  void *v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  char *v14;
  void *v15;
  id v16;
  unint64_t v17;
  id v18;
  unsigned int v19;
  id v20;
  id v21;
  unsigned int v22;
  unsigned int v23;
  id v24;
  __int128 v25;
  __int128 v26;
  _BYTE v27[24];
  uint64_t v28;

  result = (uint64_t)objc_msgSend(a1, sel_sourceChannel);
  if (result)
  {
    v4 = (void *)result;
    v5 = *(void **)(v1 + 24);
    swift_unknownObjectRetain();
    v6 = objc_msgSend(v5, sel_purchaseProvider);
    if (objc_msgSend((id)swift_unknownObjectRetain(), sel_tagType) == (id)3)
    {
      v7 = objc_msgSend(v4, sel_asSection);
      if (!v7
        || (v8 = objc_msgSend(v7, sel_parentID), swift_unknownObjectRelease(), !v8))
      {
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        goto LABEL_9;
      }
    }
    else
    {
      v8 = objc_msgSend(v4, sel_identifier);
    }
    v9 = sub_1DC408A4C();
    v11 = v10;

    v12 = objc_msgSend(v6, sel_purchasedTagIDs);
    v13 = sub_1DC408E54();

    LOBYTE(v9) = sub_1DC151630(v9, v11, v13);
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v9 & 1) != 0)
    {
      swift_unknownObjectRelease_n();
      return 1;
    }
LABEL_9:
    v14 = (char *)objc_msgSend(objc_msgSend(v5, sel_bundleSubscriptionProvider), sel_bundleSubscription);
    swift_unknownObjectRelease();
    if (objc_getAssociatedObject(v14, v14 + 1))
    {
      sub_1DC409634();
      swift_unknownObjectRelease();
    }
    else
    {
      v25 = 0u;
      v26 = 0u;
    }
    sub_1DC0D1180((uint64_t)&v25, (uint64_t)v27);
    if (v28)
    {
      sub_1DC0E7878();
      if ((swift_dynamicCast() & 1) != 0)
      {
        v15 = v24;
        v16 = objc_msgSend(v24, sel_integerValue);
        if (v16 == (id)-1)
        {

          goto LABEL_29;
        }
        v17 = (unint64_t)v16;
LABEL_18:
        if (objc_getAssociatedObject(v14, (const void *)~v17))
        {
          sub_1DC409634();
          swift_unknownObjectRelease();
        }
        else
        {
          v25 = 0u;
          v26 = 0u;
        }
        sub_1DC0D1180((uint64_t)&v25, (uint64_t)v27);
        if (v28)
        {
          sub_1DC0E7878();
          if ((swift_dynamicCast() & 1) != 0)
          {
            v18 = v24;
            v19 = objc_msgSend(v18, sel_integerValue);

            if ((((v19 + 1) ^ ((_DWORD)v17 + 1)) & 1) != 0)
            {
LABEL_29:
              v20 = objc_msgSend(objc_msgSend(v5, sel_bundleSubscriptionProvider), sel_bundleSubscription);
              swift_unknownObjectRelease();
              v21 = objc_msgSend(v4, sel_identifier);
              if (!v21)
              {
                sub_1DC408A4C();
                v21 = (id)sub_1DC408A1C();
                swift_bridgeObjectRelease();
              }
              v22 = objc_msgSend(v20, sel_containsTagID_, v21);
              swift_unknownObjectRelease();

              if (v22)
              {
                swift_unknownObjectRelease();
                return 1;
              }
              goto LABEL_34;
            }
LABEL_27:
            swift_unknownObjectRelease();
LABEL_34:
            v23 = objc_msgSend(a1, sel_isPaid);
            swift_unknownObjectRelease();
            return v23 ^ 1;
          }
        }
        else
        {
          sub_1DC0926D8((uint64_t)v27, (uint64_t (*)(_QWORD))sub_1DC0D11C4);
        }

        if ((v17 & 1) != 0)
          goto LABEL_29;
        goto LABEL_27;
      }
    }
    else
    {
      sub_1DC0926D8((uint64_t)v27, (uint64_t (*)(_QWORD))sub_1DC0D11C4);
    }
    v15 = 0;
    v17 = 0;
    goto LABEL_18;
  }
  return result;
}

uint64_t sub_1DC228D48()
{
  uint64_t v0;

  sub_1DC148A20(v0 + 16);
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 48);
  __swift_destroy_boxed_opaque_existential_1(v0 + 88);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ManageWatchlistsEventHandler()
{
  return objc_opt_self();
}

uint64_t sub_1DC228DA4(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = MEMORY[0x1DF0CAD78](a2 + 16);
  if (result)
  {
    sub_1DC228E48();
    sub_1DC406808();
    swift_allocObject();
    sub_1DC4067CC();
    sub_1DC4067D8();
    swift_unknownObjectRelease();
    return swift_release();
  }
  return result;
}

unint64_t sub_1DC228E48()
{
  unint64_t result;

  result = qword_1F034F478;
  if (!qword_1F034F478)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC4289AC, &type metadata for WatchlistRenameErrorAlert);
    atomic_store(result, (unint64_t *)&qword_1F034F478);
  }
  return result;
}

void *sub_1DC228E8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>, double a4@<D0>, double a5@<D1>)
{
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  double v21;
  double v22;
  double v23;
  void *v24;
  id v25;
  double v26;
  double v27;
  id v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  double v42;
  double v43;
  double v44;
  double v45;
  double v46;
  double v47;
  double v48;
  double v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  double v53;
  double v54;
  double v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  char v62;
  double v63;
  uint64_t v64;
  CGFloat v65;
  CGFloat v66;
  double v67;
  int v68;
  char v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  uint64_t inited;
  void *v75;
  id v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  _QWORD *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t (*v84)(uint64_t, uint64_t);
  id v85;
  uint64_t v86;
  id v87;
  void *v88;
  void *v89;
  id v90;
  CGFloat v91;
  CGFloat v92;
  uint64_t *v93;
  double v94;
  char v95;
  id v96;
  double v97;
  uint64_t v98;
  double v99;
  BOOL v100;
  double v101;
  void *v102;
  double v103;
  double v104;
  void *v105;
  double v106;
  double v107;
  CGFloat v108;
  double v109;
  void *v110;
  double v111;
  double v112;
  double v113;
  void *v114;
  double v115;
  double v116;
  CGFloat v117;
  CGFloat MaxY;
  CGFloat v119;
  CGFloat v120;
  void *v121;
  uint64_t v122;
  void *v123;
  uint64_t v124;
  double *v125;
  double v126;
  double v127;
  double v128;
  char *v129;
  double v130;
  double v131;
  double v132;
  CGFloat v133;
  CGFloat v134;
  CGFloat v135;
  CGFloat v136;
  CGFloat v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  _QWORD *v142;
  unint64_t v143;
  CGFloat *v144;
  double v145;
  CGFloat v146;
  uint64_t v147;
  double v148;
  void *v149;
  CGFloat v150;
  double v151;
  CGFloat v152;
  CGFloat v153;
  CGFloat v154;
  CGFloat v155;
  uint64_t v156;
  double v157;
  uint64_t v158;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t *v163;
  uint64_t v164;
  CGFloat MinY;
  CGFloat v166;
  double v167;
  double v168;
  CGFloat height;
  CGFloat width;
  CGFloat y;
  CGFloat x;
  CGFloat v173;
  uint64_t v174;
  uint64_t v175;
  double v176;
  CGFloat v177;
  id v178;
  id v179;
  double v180;
  uint64_t v181;
  uint64_t v182;
  double v183;
  uint64_t v184;
  uint64_t v185;
  char *v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  void *v190;
  double v191;
  double v192;
  CGFloat v193;
  CGFloat v194;
  double v195;
  double v196;
  double v197;
  CGFloat v198;
  _BYTE v199[336];
  CGRect v200;
  CGRect v201;
  CGRect v202;
  CGRect v203;
  CGRect v204;
  CGRect v205;
  CGRect v206;
  CGRect v207;

  v6 = v5;
  v192 = a5;
  v190 = a3;
  sub_1DC089DA4(0, &qword_1EDB353E0, type metadata accessor for StockSparklineViewModel, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v10);
  v185 = (uint64_t)&v160 - v11;
  v12 = type metadata accessor for StockSparklineViewModel(0);
  v181 = *(_QWORD *)(v12 - 8);
  v182 = v12;
  MEMORY[0x1E0C80A78](v12);
  v161 = (uint64_t)&v160 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1DC406328();
  v188 = *(_QWORD *)(v14 - 8);
  v189 = v14;
  MEMORY[0x1E0C80A78](v14);
  v186 = (char *)&v160 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v191 = COERCE_DOUBLE(sub_1DC4011C8());
  y = *(double *)(*(_QWORD *)&v191 - 8);
  MEMORY[0x1E0C80A78](*(_QWORD *)&v191);
  *(_QWORD *)&width = (char *)&v160 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  height = COERCE_DOUBLE(type metadata accessor for PriceViewModel());
  MEMORY[0x1E0C80A78](*(_QWORD *)&height);
  *(_QWORD *)&v194 = (char *)&v160 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  *(_QWORD *)&v193 = (char *)&v160 - v19;
  sub_1DC405224();
  v21 = v20;
  v23 = v22;
  v24 = (void *)sub_1DC405284();
  v25 = objc_msgSend(v24, sel_horizontalSizeClass);

  if (v25 == (id)2)
    v26 = 16.0;
  else
    v26 = v21;
  if (v25 == (id)2)
    v27 = 12.0;
  else
    v27 = v23;
  __swift_project_boxed_opaque_existential_1(v6 + 2, v6[5]);
  sub_1DC4010D8();
  v28 = sub_1DC0FAF80();
  swift_bridgeObjectRelease();
  sub_1DC405230();
  if (v29 > 320.0)
    v30 = 68.0;
  else
    v30 = 44.0;
  v31 = a4 - v30;
  v177 = COERCE_DOUBLE(type metadata accessor for StockViewLayoutOptions());
  v32 = *(double *)(a2 + *(int *)(*(_QWORD *)&v177 + 28));
  sub_1DC408F74();
  v34 = v31 - v32 - v33;
  v35 = v192;
  objc_msgSend(v28, sel_boundingRectWithSize_options_context_, 1, 0, v34, v192);
  v197 = v37;
  v198 = v36;

  v38 = sub_1DC229B94(a1);
  v40 = v39;
  __swift_project_boxed_opaque_existential_1(v6 + 2, v6[5]);
  v41 = sub_1DC0FAAAC(v38, v40, 0);
  swift_bridgeObjectRelease();
  v187 = a2;
  sub_1DC405230();
  if (v42 > 320.0)
    v43 = 68.0;
  else
    v43 = 44.0;
  v44 = a4 - v43 - v32;
  sub_1DC408F74();
  objc_msgSend(v41, sel_boundingRectWithSize_options_context_, 1, 0, v44 - v45, v35);
  v195 = v47;
  v196 = v46;
  sub_1DC408F74();
  sub_1DC4092BC();
  v179 = v41;
  objc_msgSend(v41, sel_boundingRectWithSize_options_context_, 1, 0);
  x = v49;
  v173 = v48;
  __swift_project_boxed_opaque_existential_1(v6 + 2, v6[5]);
  v50 = sub_1DC4010CC();
  v52 = sub_1DC0FACE0(v50, v51, 0);
  swift_bridgeObjectRelease();
  v180 = v27;
  sub_1DC408F74();
  sub_1DC4092BC();
  v178 = v52;
  v55 = sub_1DC0FA52C(v52, 1, v53, v54);
  v175 = v56;
  v176 = v55;
  v57 = v6[5];
  *(_QWORD *)&v183 = v6 + 2;
  v58 = __swift_project_boxed_opaque_existential_1(v6 + 2, v57);
  v174 = type metadata accessor for StockViewModel();
  v59 = *(int *)(v174 + 28);
  v184 = a1;
  v60 = a1 + v59;
  sub_1DC40133C();
  sub_1DC401324();
  if (qword_1EDB28E78 != -1)
    swift_once();
  sub_1DC401318();
  swift_release();
  v61 = *(_BYTE *)(v60 + 8);
  v163 = v6;
  if ((v61 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    goto LABEL_31;
  }
  v62 = v199[0];
  v63 = *(double *)v60;
  v64 = *(_QWORD *)&v193;
  sub_1DC0990BC(v60, *(uint64_t *)&v193, (uint64_t (*)(_QWORD))type metadata accessor for PriceViewModel);
  if ((v62 & 1) != 0)
  {
    v65 = width;
    v66 = y;
    v67 = v191;
    (*(void (**)(CGFloat, uint64_t, double))(*(_QWORD *)&y + 16))(COERCE_CGFLOAT(*(_QWORD *)&width), v64 + *(int *)(*(_QWORD *)&height + 40), COERCE_DOUBLE(*(_QWORD *)&v191));
    v68 = (*(uint64_t (**)(CGFloat, double))(*(_QWORD *)&v66 + 88))(COERCE_CGFLOAT(*(_QWORD *)&v65), COERCE_DOUBLE(*(_QWORD *)&v67));
    v69 = 2;
    if (v68 == *MEMORY[0x1E0DAF1E8]
      || v68 == *MEMORY[0x1E0DAF1F0]
      || v68 == *MEMORY[0x1E0DAF1C0]
      || v68 == *MEMORY[0x1E0DAF1D8]
      || v68 == *MEMORY[0x1E0DAF1C8]
      || v68 == *MEMORY[0x1E0DAF1E0])
    {
      goto LABEL_26;
    }
    if (v68 != *MEMORY[0x1E0DAF1D0])
    {
      if (v68 != *MEMORY[0x1E0DAF1B8])
        (*(void (**)(CGFloat, double))(*(_QWORD *)&v66 + 8))(COERCE_CGFLOAT(*(_QWORD *)&v65), COERCE_DOUBLE(*(_QWORD *)&v67));
      v69 = 2;
      goto LABEL_26;
    }
  }
  v69 = 0;
LABEL_26:
  sub_1DC0926D8(v64, (uint64_t (*)(_QWORD))type metadata accessor for PriceViewModel);
  if (qword_1EDB2D588 != -1)
    swift_once();
  sub_1DC0FC858(*(_QWORD *)(v60 + 48), *(_QWORD *)(v60 + 56), 5, 1, v69, v63);
  v71 = v70;
  v72 = *(_QWORD *)&v194;
  sub_1DC0990BC(v60, *(uint64_t *)&v194, (uint64_t (*)(_QWORD))type metadata accessor for PriceViewModel);
  if (!v71)
    swift_bridgeObjectRetain();
  sub_1DC0926D8(v72, (uint64_t (*)(_QWORD))type metadata accessor for PriceViewModel);
LABEL_31:
  v73 = (_QWORD *)*v58;
  sub_1DC089DA4(0, (unint64_t *)&qword_1EDB40090, (uint64_t (*)(uint64_t))sub_1DC112C08, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DC40C740;
  v75 = (void *)*MEMORY[0x1E0DC1138];
  *(_QWORD *)(inited + 32) = *MEMORY[0x1E0DC1138];
  swift_bridgeObjectRetain();
  v76 = v75;
  v77 = sub_1DC404090();
  v78 = sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FB00);
  *(_QWORD *)(inited + 40) = v77;
  v79 = (void *)*MEMORY[0x1E0DC1140];
  *(_QWORD *)(inited + 64) = v78;
  *(_QWORD *)(inited + 72) = v79;
  v80 = v73 + 8;
  v82 = v73[11];
  v81 = v73[12];
  __swift_project_boxed_opaque_existential_1(v80, v82);
  v83 = *(_QWORD *)(v81 + 16);
  v84 = *(uint64_t (**)(uint64_t, uint64_t))(v83 + 48);
  v85 = v79;
  v86 = v84(v82, v83);
  *(_QWORD *)(inited + 104) = sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FB30);
  *(_QWORD *)(inited + 80) = v86;
  sub_1DC0FA3C4(inited);
  v87 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  v88 = (void *)sub_1DC408A1C();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1DC080808((unint64_t *)&qword_1EDB3F988, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1DC40D90C);
  v89 = (void *)sub_1DC408980();
  swift_bridgeObjectRelease();
  v90 = objc_msgSend(v87, sel_initWithString_attributes_, v88, v89);
  swift_bridgeObjectRelease();

  objc_msgSend(v90, sel_boundingRectWithSize_options_context_, 1, 0, a4, v35);
  v193 = v92;
  v194 = v91;

  v93 = v163;
  v94 = v183;
  __swift_project_boxed_opaque_existential_1(*(_QWORD **)&v183, v163[5]);
  if (*(_BYTE *)(v60 + 24))
    v95 = 2;
  else
    v95 = *(double *)(v60 + 16) < 0.0;
  v96 = sub_1DC0FA8D8(0x4D30302E303030, 0xE700000000000000, v95);
  v167 = sub_1DC0FA52C(v96, 1, a4, v35);
  v168 = v97;
  v98 = v187;
  sub_1DC405230();
  v100 = v99 > 320.0;
  v101 = 68.0;
  if (!v100)
    v101 = 44.0;
  v192 = v101;
  __swift_project_boxed_opaque_existential_1(*(_QWORD **)&v94, v93[5]);
  v102 = (void *)sub_1DC404090();
  objc_msgSend(v102, sel_ascender);
  v104 = v103;

  __swift_project_boxed_opaque_existential_1(*(_QWORD **)&v94, v93[5]);
  v105 = (void *)sub_1DC404090();
  objc_msgSend(v105, sel_capHeight);
  v107 = v106;

  v108 = v197;
  v109 = v197 - (v104 - v107);
  __swift_project_boxed_opaque_existential_1(*(_QWORD **)&v94, v93[5]);
  v110 = (void *)sub_1DC404090();
  objc_msgSend(v110, sel_lineHeight);
  v112 = v111;

  v113 = v109 + v112;
  __swift_project_boxed_opaque_existential_1(*(_QWORD **)&v94, v93[5]);
  v114 = (void *)sub_1DC404090();
  objc_msgSend(v114, sel_descender);
  v116 = v115;

  v191 = v113 - fabs(v116);
  v200.origin.y = 11.0;
  v200.origin.x = v26;
  v117 = v198;
  v200.size.width = v198;
  v200.size.height = v108;
  MaxY = CGRectGetMaxY(v200);
  v119 = v195;
  v120 = v196;
  sub_1DC409250();
  y = v201.origin.y;
  x = v201.origin.x;
  height = v201.size.height;
  width = v201.size.width;
  v166 = CGRectGetMaxY(v201);
  v202.origin.y = 11.0;
  v202.origin.x = v26;
  v202.size.width = v117;
  v202.size.height = v108;
  MinY = CGRectGetMinY(v202);
  __swift_project_boxed_opaque_existential_1(*(_QWORD **)&v94, v93[5]);
  v121 = (void *)sub_1DC404090();
  objc_msgSend(v121, sel_ascender);
  v164 = v122;

  __swift_project_boxed_opaque_existential_1(*(_QWORD **)&v94, v93[5]);
  v123 = (void *)sub_1DC404090();
  objc_msgSend(v123, sel_capHeight);
  v162 = v124;

  v203.origin.x = v26;
  v173 = MaxY;
  v203.origin.y = MaxY;
  v203.size.width = v120;
  v203.size.height = v119;
  v204.origin.y = CGRectGetMaxY(v203) + 11.0;
  v125 = (double *)(v98 + *(int *)(*(_QWORD *)&v177 + 32));
  v126 = v167 + v125[1] + v125[3];
  v127 = v168 + *v125 + v125[2];
  v204.origin.x = v26;
  v177 = v204.origin.y;
  v204.size.height = v193;
  v204.size.width = v194;
  v128 = CGRectGetMaxY(v204) + 11.0;
  v129 = v186;
  sub_1DC405200();
  sub_1DC406304();
  v131 = v130;
  sub_1DC406304();
  v133 = a4 - (v131 + v132);
  v183 = v26;
  v205.origin.x = v26;
  v205.origin.y = v128;
  v205.size.width = v126;
  v205.size.height = v127;
  v206.size.height = CGRectGetMaxY(v205) + 11.0;
  v206.origin.x = 0.0;
  v206.origin.y = 0.0;
  v206.size.width = v133;
  v207 = CGRectIntegral(v206);
  v134 = v207.origin.x;
  v135 = v207.origin.y;
  v136 = v207.size.width;
  v137 = v207.size.height;
  v138 = v185;
  sub_1DC0EDD64(v184 + *(int *)(v174 + 24), v185, &qword_1EDB353E0, type metadata accessor for StockSparklineViewModel);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v181 + 48))(v138, 1, v182) == 1)
  {
    v139 = sub_1DC0B091C(v138, &qword_1EDB353E0, type metadata accessor for StockSparklineViewModel);
    v140 = 1;
  }
  else
  {
    v141 = v161;
    sub_1DC0FC098(v138, v161);
    sub_1DC405218();
    v142 = __swift_project_boxed_opaque_existential_1(v93 + 7, v93[10]);
    v140 = (uint64_t)sub_1DC0EDEF4(v141, (_QWORD *)*v142, v192, v191);
    v139 = sub_1DC0926D8(v141, type metadata accessor for StockSparklineViewModel);
  }
  v143 = MEMORY[0x1E0C80A78](v139).n128_u64[0];
  v144 = (CGFloat *)(&v160 - 38);
  v144[2] = v134;
  v144[3] = v135;
  v144[4] = v136;
  v144[5] = v137;
  v145 = v183;
  v146 = v166;
  *((double *)&v160 - 32) = v183;
  *((CGFloat *)&v160 - 31) = v146;
  v147 = v175;
  *((double *)&v160 - 30) = v176;
  *(&v160 - 29) = v147;
  *(&v160 - 28) = v98;
  *((double *)&v160 - 27) = v145;
  *(&v160 - 26) = 0x4026000000000000;
  v148 = v197;
  *((CGFloat *)&v160 - 25) = v198;
  *((double *)&v160 - 24) = v148;
  v149 = v179;
  *(&v160 - 23) = (uint64_t)v179;
  v150 = v173;
  *((double *)&v160 - 22) = v145;
  *((CGFloat *)&v160 - 21) = v150;
  v151 = v195;
  *((double *)&v160 - 20) = v196;
  *((double *)&v160 - 19) = v151;
  v152 = y;
  *((CGFloat *)&v160 - 18) = x;
  *((CGFloat *)&v160 - 17) = v152;
  v153 = height;
  *((CGFloat *)&v160 - 16) = width;
  *((CGFloat *)&v160 - 15) = v153;
  v154 = v177;
  *((double *)&v160 - 14) = v145;
  *((CGFloat *)&v160 - 13) = v154;
  v155 = v193;
  *((CGFloat *)&v160 - 12) = v194;
  *((CGFloat *)&v160 - 11) = v155;
  *((double *)&v160 - 10) = v145;
  *((double *)&v160 - 9) = v128;
  *((double *)&v160 - 8) = v126;
  *((double *)&v160 - 7) = v127;
  *(&v160 - 6) = v143;
  *(&v160 - 5) = v156;
  v157 = v191;
  *(&v160 - 4) = v158;
  *((double *)&v160 - 3) = v157;
  *(&v160 - 2) = v140;
  sub_1DC4051D0();

  (*(void (**)(char *, uint64_t))(v188 + 8))(v129, v189);
  sub_1DC0F7A68((id)v140);
  return memcpy(v190, v199, 0x150uLL);
}

uint64_t sub_1DC229B94(uint64_t a1)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[2];

  v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF040];
  sub_1DC089DA4(0, &qword_1EDB28DC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF040], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v13 - v4;
  v6 = type metadata accessor for StockViewModel();
  sub_1DC0EDD64(a1 + *(int *)(v6 + 20), (uint64_t)v5, &qword_1EDB28DC0, v2);
  v7 = sub_1DC401030();
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v7) == 1)
  {
    sub_1DC0B091C((uint64_t)v5, &qword_1EDB28DC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF040]);
  }
  else
  {
    sub_1DC400FA0();
    v10 = v9;
    (*(void (**)(char *, uint64_t))(v8 + 8))(v5, v7);
    if (v10)
    {
      sub_1DC40133C();
      sub_1DC401324();
      if (qword_1EDB28E78 != -1)
        swift_once();
      sub_1DC401318();
      swift_release();
      if (LOBYTE(v13[0]) == 1)
      {
        v13[0] = sub_1DC40106C();
        v13[1] = v11;
        swift_bridgeObjectRetain();
        sub_1DC408B48();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        sub_1DC408B48();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return v13[0];
      }
      swift_bridgeObjectRelease();
    }
  }
  return sub_1DC40106C();
}

double sub_1DC229D78@<D0>(uint64_t a1@<X1>, void *a2@<X2>, void *a3@<X3>, uint64_t a4@<X8>, double a5@<D0>, double a6@<D1>, double a7@<D2>, double a8@<D3>, CGFloat a9@<D4>, CGFloat a10@<D5>, CGFloat a11@<D6>, CGFloat a12@<D7>, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,double a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  void (*v49)(char *, uint64_t, uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(char *, uint64_t);
  id v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  double result;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  double v109[3];
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  double v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  double v121;
  double v122;
  double v123;
  double v124;
  _BYTE v125[7];
  char v126;
  _BYTE v127[7];
  CGRect v128;

  v123 = a7;
  v124 = a8;
  v121 = a5;
  v122 = a6;
  v120 = a33;
  v119 = a34;
  v118 = a35;
  v117 = a36;
  v111 = a29;
  v110 = a30;
  v109[0] = a31;
  v108 = a32;
  v103 = a25;
  v102 = a26;
  v101 = a27;
  v100 = a28;
  v99 = a21;
  v98 = a22;
  v97 = a23;
  v96 = a24;
  v107 = a17;
  v106 = a18;
  v105 = a19;
  v104 = a20;
  v44 = sub_1DC404210();
  v45 = *(_QWORD *)(v44 - 8);
  MEMORY[0x1E0C80A78](v44);
  v47 = (char *)&v91 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  v128.origin.x = a9;
  v128.origin.y = a10;
  v128.size.width = a11;
  v128.size.height = a12;
  v116 = CGRectGetMaxY(v128) + 11.0;
  v48 = *MEMORY[0x1E0DB6B40];
  v49 = *(void (**)(char *, uint64_t, uint64_t))(v45 + 104);
  v49(v47, v48, v44);
  sub_1DC404204();
  v115 = v50;
  v114 = v51;
  v113 = v52;
  v112 = v53;
  v54 = *(void (**)(char *, uint64_t))(v45 + 8);
  v54(v47, v44);
  v49(v47, v48, v44);
  v55 = a2;
  sub_1DC404204();
  v107 = v56;
  v106 = v57;
  v105 = v58;
  v104 = v59;
  v54(v47, v44);
  v49(v47, v48, v44);
  sub_1DC404204();
  v99 = v60;
  v98 = v61;
  v97 = v62;
  v96 = v63;
  v54(v47, v44);
  v49(v47, v48, v44);
  sub_1DC404204();
  v95 = v64;
  v94 = v65;
  v93 = v66;
  v92 = v67;
  v54(v47, v44);
  v49(v47, v48, v44);
  sub_1DC404204();
  v103 = v68;
  v102 = v69;
  v101 = v70;
  v100 = v71;
  v54(v47, v44);
  v49(v47, v48, v44);
  sub_1DC404204();
  v111 = v72;
  v110 = v73;
  v75 = v74;
  v77 = v76;
  v54(v47, v44);
  v78 = a1 + *(int *)(type metadata accessor for StockViewLayoutOptions() + 32);
  *(_OWORD *)v109 = *(_OWORD *)v78;
  v79 = *(_QWORD *)(v78 + 16);
  v80 = *(_QWORD *)(v78 + 24);
  v49(v47, v48, v44);
  sub_1DC404204();
  v82 = v81;
  v84 = v83;
  v86 = v85;
  v88 = v87;
  v54(v47, v44);
  sub_1DC0F824C(a3);
  v89 = sub_1DC405284();
  *(double *)a4 = v121;
  *(double *)(a4 + 8) = v122;
  *(double *)(a4 + 16) = v123;
  *(double *)(a4 + 24) = v124;
  v126 = 0;
  *(double *)(a4 + 32) = v116;
  *(_BYTE *)(a4 + 40) = 0;
  *(_DWORD *)(a4 + 41) = *(_DWORD *)v127;
  *(_DWORD *)(a4 + 44) = *(_DWORD *)&v127[3];
  *(_QWORD *)(a4 + 48) = v115;
  *(_QWORD *)(a4 + 56) = v114;
  *(_QWORD *)(a4 + 64) = v113;
  *(_QWORD *)(a4 + 72) = v112;
  *(_QWORD *)(a4 + 80) = v55;
  *(_QWORD *)(a4 + 88) = v107;
  *(_QWORD *)(a4 + 96) = v106;
  *(_QWORD *)(a4 + 104) = v105;
  *(_QWORD *)(a4 + 112) = v104;
  *(_QWORD *)(a4 + 120) = v99;
  *(_QWORD *)(a4 + 128) = v98;
  *(_QWORD *)(a4 + 136) = v97;
  *(_QWORD *)(a4 + 144) = v96;
  *(_QWORD *)(a4 + 152) = v95;
  *(_QWORD *)(a4 + 160) = v94;
  *(_QWORD *)(a4 + 168) = v93;
  *(_QWORD *)(a4 + 176) = v92;
  *(_QWORD *)(a4 + 184) = v103;
  *(_QWORD *)(a4 + 192) = v102;
  *(_QWORD *)(a4 + 200) = v101;
  *(_QWORD *)(a4 + 208) = v100;
  *(_QWORD *)(a4 + 216) = v111;
  *(_QWORD *)(a4 + 224) = v110;
  *(_QWORD *)(a4 + 232) = v75;
  *(_QWORD *)(a4 + 240) = v77;
  result = v109[0];
  *(_OWORD *)(a4 + 248) = *(_OWORD *)v109;
  *(_QWORD *)(a4 + 264) = v79;
  *(_QWORD *)(a4 + 272) = v80;
  *(_QWORD *)(a4 + 280) = v82;
  *(_QWORD *)(a4 + 288) = v84;
  *(_QWORD *)(a4 + 296) = v86;
  *(_QWORD *)(a4 + 304) = v88;
  *(_BYTE *)(a4 + 312) = v126;
  *(_DWORD *)(a4 + 313) = *(_DWORD *)v125;
  *(_DWORD *)(a4 + 316) = *(_DWORD *)&v125[3];
  *(_QWORD *)(a4 + 320) = a3;
  *(_QWORD *)(a4 + 328) = v89;
  return result;
}

double sub_1DC22A380@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  __int128 v3;

  v3 = *(_OWORD *)(v1 + 240);
  return sub_1DC229D78(*(_QWORD *)(v1 + 80), *(void **)(v1 + 120), *(void **)(v1 + 288), a1, *(double *)(v1 + 16), *(double *)(v1 + 24), *(double *)(v1 + 32), *(double *)(v1 + 40), *(CGFloat *)(v1 + 48), *(CGFloat *)(v1 + 56), *(CGFloat *)(v1 + 64), *(CGFloat *)(v1 + 72), *(_QWORD *)(v1 + 88), *(_QWORD *)(v1 + 96), *(_QWORD *)(v1 + 104), *(_QWORD *)(v1 + 112), *(_QWORD *)(v1 + 128), *(_QWORD *)(v1 + 136), *(_QWORD *)(v1 + 144),
           *(_QWORD *)(v1 + 152),
           *(_QWORD *)(v1 + 160),
           *(_QWORD *)(v1 + 168),
           *(_QWORD *)(v1 + 176),
           *(_QWORD *)(v1 + 184),
           *(_QWORD *)(v1 + 192),
           *(_QWORD *)(v1 + 200),
           *(_QWORD *)(v1 + 208),
           *(_QWORD *)(v1 + 216),
           *(_QWORD *)(v1 + 224),
           *(_QWORD *)(v1 + 232),
           *(double *)&v3,
           *((uint64_t *)&v3 + 1),
           *(_QWORD *)(v1 + 256),
           *(_QWORD *)(v1 + 264),
           *(_QWORD *)(v1 + 272),
           *(_QWORD *)(v1 + 280));
}

void sub_1DC22A598()
{
  sub_1DC12C258(&qword_1EDB2CA38, (uint64_t)&unk_1DC41B24C);
  JUMPOUT(0x1DF0C7418);
}

uint64_t sub_1DC22A774()
{
  return type metadata accessor for HiddenCardViewController();
}

uint64_t type metadata accessor for HiddenCardViewController()
{
  uint64_t result;

  result = qword_1F034F4B0;
  if (!qword_1F034F4B0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1DC22A7B8()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1DC404C0C();
  if (v1 <= 0x3F)
  {
    result = sub_1DC40481C();
    if (v2 <= 0x3F)
    {
      result = swift_updateClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t sub_1DC22A840@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *MEMORY[0x1E0DBA270];
  v3 = sub_1DC4059F8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = *MEMORY[0x1E0DBA230];
  v5 = sub_1DC4059C8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a1, v4, v5);
}

uint64_t sub_1DC22A8B0()
{
  swift_getObjectType();
  return sub_1DC4064F0();
}

uint64_t sub_1DC22A8F4@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC22A91C(&OBJC_IVAR____TtC8StocksUI24HiddenCardViewController_cardViewAppearance, (uint64_t (*)(_QWORD))MEMORY[0x1E0DB8488], a1);
}

uint64_t sub_1DC22A908@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC22A91C(&OBJC_IVAR____TtC8StocksUI24HiddenCardViewController_cardViewBehavior, (uint64_t (*)(_QWORD))MEMORY[0x1E0DB7C18], a1);
}

uint64_t sub_1DC22A91C@<X0>(_QWORD *a1@<X2>, uint64_t (*a2)(_QWORD)@<X3>, uint64_t a3@<X8>)
{
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;

  v5 = *v3 + *a1;
  v6 = a2(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a3, v5, v6);
}

BOOL static ThemingStyle.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t ThemingStyle.hash(into:)()
{
  return sub_1DC409ACC();
}

uint64_t ThemingStyle.hashValue.getter()
{
  sub_1DC409AC0();
  sub_1DC409ACC();
  return sub_1DC409AF0();
}

unint64_t sub_1DC22A9E8()
{
  unint64_t result;

  result = qword_1F034F4C0;
  if (!qword_1F034F4C0)
  {
    result = MEMORY[0x1DF0CAB8C](&protocol conformance descriptor for ThemingStyle, &type metadata for ThemingStyle);
    atomic_store(result, (unint64_t *)&qword_1F034F4C0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ThemingStyle(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1DC22AA78 + 4 * byte_1DC41B385[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1DC22AAAC + 4 * byte_1DC41B380[v4]))();
}

uint64_t sub_1DC22AAAC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC22AAB4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC22AABCLL);
  return result;
}

uint64_t sub_1DC22AAC8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC22AAD0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1DC22AAD4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC22AADC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t dispatch thunk of Theming.sidebarAppearance.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of Theming.foregroundColor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of Theming.backgroundColor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of Theming.sidebarBackgroundColor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of Theming.detailBackgroundColor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of Theming.cellSelectionColor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of Theming.cellSelectionKeyColor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t dispatch thunk of Theming.cellSelectionSecondaryTextColor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 96))();
}

uint64_t dispatch thunk of Theming.keyColor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 104))();
}

uint64_t dispatch thunk of Theming.darkenedKeyColor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 112))();
}

uint64_t dispatch thunk of Theming.addButtonColor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 120))();
}

uint64_t dispatch thunk of Theming.addButtonTitleColor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 128))();
}

uint64_t dispatch thunk of Theming.offlineTextColor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 136))();
}

uint64_t dispatch thunk of Theming.afterHoursTextColor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 144))();
}

uint64_t dispatch thunk of Theming.separatorBarColor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 152))();
}

uint64_t dispatch thunk of Theming.sidebarSeparatorBarColor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 160))();
}

uint64_t dispatch thunk of Theming.paletteGreen.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 168))();
}

uint64_t dispatch thunk of Theming.paletteLightGreen.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 176))();
}

uint64_t dispatch thunk of Theming.paletteRed.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 184))();
}

uint64_t dispatch thunk of Theming.paletteBlue.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 192))();
}

uint64_t dispatch thunk of Theming.paletteLightGray.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 200))();
}

uint64_t dispatch thunk of Theming.paletteGreenForContrastAgainstLightColors.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 208))();
}

uint64_t dispatch thunk of Theming.paletteRedForContrastAgainstLightColors.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 216))();
}

uint64_t dispatch thunk of Theming.paletteGreenForContrastAgainstDarkColors.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 224))();
}

uint64_t dispatch thunk of Theming.paletteRedForContrastAgainstDarkColors.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 232))();
}

uint64_t dispatch thunk of Theming.labelColor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 240))();
}

uint64_t dispatch thunk of Theming.secondaryLabelColor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 248))();
}

uint64_t dispatch thunk of Theming.tertiaryLabelColor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 256))();
}

uint64_t dispatch thunk of Theming.toolbarLabelColor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 264))();
}

uint64_t dispatch thunk of Theming.searchBarBackgroundColor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 272))();
}

uint64_t dispatch thunk of Theming.addToCalendarButtonColor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 280))();
}

uint64_t dispatch thunk of Theming.addToCalendarButtonHighlightColor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 288))();
}

uint64_t dispatch thunk of Theming.greenChartStrokeColor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 296))();
}

uint64_t dispatch thunk of Theming.greenChartFillColor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 304))();
}

uint64_t dispatch thunk of Theming.redChartStrokeColor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 312))();
}

uint64_t dispatch thunk of Theming.redChartFillColor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 320))();
}

uint64_t dispatch thunk of Theming.neutralChartStrokeColor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 328))();
}

uint64_t dispatch thunk of Theming.neutralChartFillColor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 336))();
}

uint64_t dispatch thunk of Theming.afterHoursChartStrokeColor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 344))();
}

uint64_t dispatch thunk of Theming.afterHoursChartFillColor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 352))();
}

uint64_t dispatch thunk of Theming.previousCloseStrokeColor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 360))();
}

uint64_t dispatch thunk of Theming.chartHighlightStyle.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 368))();
}

uint64_t dispatch thunk of Theming.volumeColumnColor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 376))();
}

uint64_t dispatch thunk of Theming.labelGridColor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 384))();
}

uint64_t dispatch thunk of Theming.minorGridColor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 392))();
}

uint64_t dispatch thunk of Theming.majorGridColor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 400))();
}

uint64_t dispatch thunk of Theming.dateRangeSelectedColor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 408))();
}

uint64_t dispatch thunk of Theming.baselineSparklineColor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 416))();
}

uint64_t dispatch thunk of Theming.placeholderSparklineColor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 424))();
}

uint64_t dispatch thunk of Theming.noChangeFillColor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 432))();
}

uint64_t dispatch thunk of Theming.noChangeTextColor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 440))();
}

uint64_t dispatch thunk of Theming.cardBarTintColor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 448))();
}

uint64_t dispatch thunk of Theming.tipAccessoryColor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 456))();
}

uint64_t dispatch thunk of Theming.tipBackgroundColor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 464))();
}

uint64_t dispatch thunk of Theming.tipMessageColor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 472))();
}

uint64_t dispatch thunk of Theming.tipTitleColor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 480))();
}

uint64_t dispatch thunk of Theming.statusBarColor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 488))();
}

uint64_t dispatch thunk of Theming.mastheadSubheadingColor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 496))();
}

uint64_t dispatch thunk of Theming.separatorColor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 504))();
}

uint64_t dispatch thunk of Theming.premiumSealInnerTintColor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 512))();
}

uint64_t dispatch thunk of Theming.premiumSealOuterTintColor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 520))();
}

uint64_t dispatch thunk of SystemTheming.tableCellDefaultSelectionTintColor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of SystemTheming.darkTealColor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of SystemTheming.keyBlue.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of SystemTheming.systemGray.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

void sub_1DC22ACFC(uint64_t a1, uint64_t a2, _BYTE *a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  double *v18;
  double *v19;
  double *v20;
  double *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  id (**v33)(uint64_t, char);
  uint64_t v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  char *v41;
  void *v42;
  id v43;
  id v44;
  void *v45;
  id v46;
  uint64_t v47;
  void *v48;
  _QWORD *v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD v60[3];
  uint64_t v61;

  sub_1DC15E910();
  v58 = *(_QWORD *)(v7 - 8);
  v59 = v7;
  MEMORY[0x1E0C80A78](v7);
  v57 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for WatchlistCellViewModel(0);
  v10 = *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64);
  v53 = *(_QWORD *)(v9 - 8);
  v54 = v10;
  MEMORY[0x1E0C80A78](v9);
  v52 = (uint64_t)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = v3 + 16;
  swift_beginAccess();
  sub_1DC0824D4(v3 + 16, (uint64_t)v60);
  v49 = __swift_project_boxed_opaque_existential_1(v60, v61);
  v50 = *(id *)&a3[OBJC_IVAR____TtC8StocksUI17WatchlistCellView_titleLabel];
  v12 = v50;
  v51 = a1;
  v14 = *(_QWORD *)(a1 + 16);
  v13 = *(_QWORD *)(a1 + 24);
  v15 = OBJC_IVAR____TtC8StocksUI17WatchlistCellView_isEditing;
  v16 = a3[OBJC_IVAR____TtC8StocksUI17WatchlistCellView_isEditing];
  v17 = *(_BYTE *)(a1 + 32);
  type metadata accessor for WatchlistCellViewStyler();
  sub_1DC28EFA8(v12, v14, v13, v16, v17);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v60);
  v18 = (double *)(a2 + 8);
  v19 = (double *)(a2 + 16);
  v20 = (double *)(a2 + 24);
  v21 = (double *)(a2 + 32);
  if (a3[v15] == 1)
  {
    v18 = (double *)(a2 + 40);
    v19 = (double *)(a2 + 48);
    v20 = (double *)(a2 + 56);
    v21 = (double *)(a2 + 64);
  }
  objc_msgSend(v50, sel_setFrame_, *v18, *v19, *v20, *v21);
  v23 = v51;
  v22 = v52;
  sub_1DC22B4C8(v51, v52);
  v24 = (*(unsigned __int8 *)(v53 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80);
  v25 = (v54 + v24 + 7) & 0xFFFFFFFFFFFFFFF8;
  v26 = swift_allocObject();
  *(_QWORD *)(v26 + 16) = v55;
  sub_1DC22B5FC(v22, v26 + v24);
  v27 = v26 + v25;
  v28 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(v27 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(v27 + 144) = v28;
  *(_QWORD *)(v27 + 160) = *(_QWORD *)(a2 + 160);
  v29 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(v27 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(v27 + 80) = v29;
  v30 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(v27 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(v27 + 112) = v30;
  v31 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)v27 = *(_OWORD *)a2;
  *(_OWORD *)(v27 + 16) = v31;
  v32 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(v27 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(v27 + 48) = v32;
  v33 = (id (**)(uint64_t, char))&a3[OBJC_IVAR____TtC8StocksUI17WatchlistCellView_onEditing];
  v34 = *(_QWORD *)&a3[OBJC_IVAR____TtC8StocksUI17WatchlistCellView_onEditing];
  *v33 = sub_1DC22B640;
  v33[1] = (id (*)(uint64_t, char))v26;
  swift_retain();
  sub_1DC0E81D0(v34);
  v35 = OBJC_IVAR____TtC8StocksUI17WatchlistCellView_selectionButton;
  objc_msgSend(*(id *)&a3[OBJC_IVAR____TtC8StocksUI17WatchlistCellView_selectionButton], sel_setFrame_, *(double *)(a2 + 72), *(double *)(a2 + 80), *(double *)(a2 + 88), *(double *)(a2 + 96));
  v36 = *(void **)&a3[v35];
  LOBYTE(v60[0]) = 0;
  v37 = swift_allocObject();
  swift_weakInit();
  v38 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v39 = swift_allocObject();
  *(_QWORD *)(v39 + 16) = v37;
  *(_QWORD *)(v39 + 24) = v38;
  sub_1DC15E978();
  sub_1DC12A1B8();
  v40 = v36;
  v41 = v57;
  sub_1DC404B7C();
  sub_1DC404D44();

  (*(void (**)(char *, uint64_t))(v58 + 8))(v41, v59);
  sub_1DC0824D4(v56, (uint64_t)v60);
  __swift_project_boxed_opaque_existential_1(v60, v61);
  v42 = *(void **)&a3[OBJC_IVAR____TtC8StocksUI17WatchlistCellView_editNameButton];
  v43 = objc_msgSend(a3, sel_traitCollection);
  v44 = objc_msgSend(v43, sel_preferredContentSizeCategory);

  sub_1DC28E8EC();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v60);
  objc_msgSend(v42, sel_setFrame_, *(double *)(a2 + 104), *(double *)(a2 + 112), *(double *)(a2 + 120), *(double *)(a2 + 128));
  v45 = *(void **)&a3[OBJC_IVAR____TtC8StocksUI17WatchlistCellView_hairlineView];
  objc_msgSend(v45, sel_setFrame_, *(double *)(a2 + 136), *(double *)(a2 + 144), *(double *)(a2 + 152), *(double *)(a2 + 160));
  v46 = objc_msgSend((id)objc_opt_self(), sel_secondarySystemFillColor);
  objc_msgSend(v45, sel_setBackgroundColor_, v46);

  v47 = *(unsigned __int8 *)(v23 + 32);
  objc_msgSend(v42, sel_setHidden_, v47);
  objc_msgSend(v45, sel_setHidden_, v47);
  v48 = (void *)sub_1DC408A1C();
  objc_msgSend(a3, sel_setAccessibilityLabel_, v48);

}

id sub_1DC22B1BC(uint64_t a1, char a2, uint64_t a3, uint64_t a4, double *a5)
{
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  double *v13;
  double *v14;
  double *v15;
  double v16;
  double *v17;
  _QWORD v19[5];

  v9 = a3 + 16;
  swift_beginAccess();
  sub_1DC0824D4(v9, (uint64_t)v19);
  __swift_project_boxed_opaque_existential_1(v19, v19[3]);
  v10 = *(void **)(a1 + OBJC_IVAR____TtC8StocksUI17WatchlistCellView_titleLabel);
  v11 = *(_QWORD *)(a4 + 16);
  v12 = *(_QWORD *)(a4 + 24);
  LOBYTE(a4) = *(_BYTE *)(a4 + 32);
  type metadata accessor for WatchlistCellViewStyler();
  sub_1DC28EFA8(v10, v11, v12, a2, a4);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
  v13 = a5 + 1;
  v14 = a5 + 2;
  v15 = a5 + 3;
  if ((a2 & 1) != 0)
  {
    v13 = a5 + 5;
    v14 = a5 + 6;
    v15 = a5 + 7;
  }
  v16 = *v13;
  v17 = a5 + 8;
  if ((a2 & 1) == 0)
    v17 = a5 + 4;
  return objc_msgSend(v10, sel_setFrame_, v16, *v14, *v15, *v17);
}

void sub_1DC22B2EC(char *a1@<X0>, uint64_t a2@<X2>, _QWORD *a3@<X8>)
{
  char v5;
  uint64_t Strong;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  id v12;

  v5 = *a1;
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (!Strong)
    goto LABEL_5;
  v7 = Strong;
  swift_beginAccess();
  v8 = (void *)MEMORY[0x1DF0CAD78](a2 + 16);
  if (!v8)
  {
    swift_release();
LABEL_5:
    v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3870]), sel_init);
    goto LABEL_6;
  }
  v9 = v8;
  v10 = objc_msgSend(v8, sel_traitCollection);
  v11 = objc_msgSend(v10, sel_preferredContentSizeCategory);

  swift_beginAccess();
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v7 + 16), *(_QWORD *)(v7 + 40));
  v12 = sub_1DC28EBD4((v5 & 1) == 0);
  swift_release();

LABEL_6:
  *a3 = v12;
}

uint64_t type metadata accessor for WatchlistCellViewRenderer()
{
  return objc_opt_self();
}

unint64_t sub_1DC22B460(uint64_t a1)
{
  unint64_t result;

  result = sub_1DC22B484();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1DC22B484()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1F034F568;
  if (!qword_1F034F568)
  {
    v1 = type metadata accessor for WatchlistCellViewRenderer();
    result = MEMORY[0x1DF0CAB8C](&unk_1DC41B4CC, v1);
    atomic_store(result, (unint64_t *)&qword_1F034F568);
  }
  return result;
}

uint64_t sub_1DC22B4C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WatchlistCellViewModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC22B50C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = type metadata accessor for WatchlistCellViewModel(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  swift_release();
  v3 = v0 + ((v2 + 24) & ~v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = v3 + *(int *)(v1 + 28);
  v5 = sub_1DC40124C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = v3 + *(int *)(v1 + 32);
  sub_1DC15C2FC();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v6, 1, v7))
  {
    v8 = sub_1DC4010E4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v6, v8);
  }
  return swift_deallocObject();
}

uint64_t sub_1DC22B5FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WatchlistCellViewModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

id sub_1DC22B640(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;

  v5 = *(_QWORD *)(type metadata accessor for WatchlistCellViewModel(0) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  return sub_1DC22B1BC(a1, a2, *(_QWORD *)(v2 + 16), v2 + v6, (double *)(v2 + ((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_1DC22B6A4()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1DC22B6C8()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1DC22B6EC()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1DC22B718(char *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  sub_1DC22B2EC(a1, *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_1DC22B720(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(uint64_t, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  _QWORD v41[7];

  v38 = a6;
  v36 = a5;
  sub_1DC092F50(0, (unint64_t *)&unk_1EDB29810, (void (*)(uint64_t))MEMORY[0x1E0DAD3C8]);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v32 - v15;
  sub_1DC22C4DC(a7, (uint64_t)&v39, &qword_1EDB29410, (unint64_t *)&unk_1EDB29400);
  v34 = a1;
  if (*((_QWORD *)&v40 + 1))
  {
    sub_1DC097DD0(&v39, (uint64_t)v41);
    v17 = sub_1DC174A18(v41);
    v19 = v18;
    v35 = v20;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
  }
  else
  {
    sub_1DC0A6180((uint64_t)&v39, (uint64_t)&qword_1EDB29410, (uint64_t)&unk_1EDB29400, MEMORY[0x1E0DB35B0], (uint64_t (*)(_QWORD))sub_1DC0A6204);
    if (qword_1EDB27920 != -1)
      swift_once();
    v17 = qword_1EDB305E8;
    v19 = qword_1EDB305F0;
    v21 = qword_1EDB305F8;
    swift_retain();
    v35 = v21;
    sub_1DC113F04(v19);
  }
  v37 = v19;
  v33 = v17;
  if (a2)
  {
    *((_QWORD *)&v40 + 1) = sub_1DC4018AC();
    *(_QWORD *)&v39 = a2;
  }
  else
  {
    v39 = 0u;
    v40 = 0u;
  }
  sub_1DC22C488(a3, (uint64_t)v16);
  sub_1DC22C4DC(a4, (uint64_t)v41, &qword_1EDB2ACD0, (unint64_t *)&qword_1EDB2ACC0);
  v22 = (*(unsigned __int8 *)(v13 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v23 = (v14 + v22 + 7) & 0xFFFFFFFFFFFFFFF8;
  v24 = swift_allocObject();
  *(_QWORD *)(v24 + 16) = a2;
  sub_1DC22C530((uint64_t)v16, v24 + v22);
  sub_1DC22C584((uint64_t)v41, v24 + v23, &qword_1EDB2ACD0, (unint64_t *)&qword_1EDB2ACC0);
  v25 = (uint64_t *)(v24 + ((v23 + 47) & 0xFFFFFFFFFFFFFFF8));
  v26 = v33;
  v27 = v37;
  *v25 = v33;
  v25[1] = v27;
  v25[2] = v35;
  swift_retain_n();
  swift_retain();
  sub_1DC113F04(v27);
  v28 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6C48];
  sub_1DC22C5D8(0, (unint64_t *)&qword_1EDB29B50, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6C48]);
  sub_1DC22C6B8((unint64_t *)&unk_1EDB29B40, (unint64_t *)&qword_1EDB29B50, v28, MEMORY[0x1E0DB6C58]);
  v29 = v41[6];
  sub_1DC406E14();
  swift_release();
  sub_1DC0A6180((uint64_t)&v39, (uint64_t)&qword_1EDB40100, MEMORY[0x1E0DEE9B8] + 8, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD))sub_1DC083594);
  if (v29)
  {
    sub_1DC083594(0, (unint64_t *)&qword_1EDB296E8, MEMORY[0x1E0DEAFA0], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    v30 = sub_1DC402D4C();
    swift_release();
    sub_1DC0E81D0(v27);
    return v30;
  }
  else
  {
    sub_1DC0E81D0(v27);
  }
  return v26;
}

uint64_t sub_1DC22BAE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  __int128 v42;
  _QWORD v43[5];
  uint64_t v44;

  v39 = a6;
  v38 = a5;
  v33 = a4;
  sub_1DC092F50(0, (unint64_t *)&unk_1EDB29810, (void (*)(uint64_t))MEMORY[0x1E0DAD3C8]);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v33 - v15;
  v44 = v7;
  sub_1DC22C4DC(a7, (uint64_t)&v41, &qword_1EDB29410, (unint64_t *)&unk_1EDB29400);
  v35 = a1;
  if (*((_QWORD *)&v42 + 1))
  {
    sub_1DC097DD0(&v41, (uint64_t)v43);
    v17 = sub_1DC174A18(v43);
    v19 = v18;
    v21 = v20;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v43);
  }
  else
  {
    sub_1DC0A6180((uint64_t)&v41, (uint64_t)&qword_1EDB29410, (uint64_t)&unk_1EDB29400, MEMORY[0x1E0DB35B0], (uint64_t (*)(_QWORD))sub_1DC0A6204);
    if (qword_1EDB27920 != -1)
      swift_once();
    v17 = qword_1EDB305E8;
    v19 = qword_1EDB305F0;
    v21 = qword_1EDB305F8;
    swift_retain();
    sub_1DC113F04(v19);
  }
  v36 = v21;
  v37 = v19;
  v34 = v17;
  if (a2)
  {
    *((_QWORD *)&v42 + 1) = sub_1DC4018AC();
    *(_QWORD *)&v41 = a2;
  }
  else
  {
    v41 = 0u;
    v42 = 0u;
  }
  sub_1DC22C488(a3, (uint64_t)v16);
  sub_1DC22C4DC(v33, (uint64_t)v43, &qword_1EDB2ACD0, (unint64_t *)&qword_1EDB2ACC0);
  v22 = (*(unsigned __int8 *)(v13 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v23 = (v14 + v22 + 7) & 0xFFFFFFFFFFFFFFF8;
  v24 = swift_allocObject();
  *(_QWORD *)(v24 + 16) = a2;
  sub_1DC22C530((uint64_t)v16, v24 + v22);
  sub_1DC22C584((uint64_t)v43, v24 + v23, &qword_1EDB2ACD0, (unint64_t *)&qword_1EDB2ACC0);
  v25 = (uint64_t *)(v24 + ((v23 + 47) & 0xFFFFFFFFFFFFFFF8));
  v26 = v34;
  v28 = v36;
  v27 = v37;
  *v25 = v34;
  v25[1] = v27;
  v25[2] = v28;
  swift_retain_n();
  swift_retain();
  sub_1DC113F04(v27);
  v29 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB75B0];
  sub_1DC22C5D8(0, (unint64_t *)&qword_1EDB29CB0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB75B0]);
  sub_1DC22C6B8((unint64_t *)&qword_1EDB29CA0, (unint64_t *)&qword_1EDB29CB0, v29, MEMORY[0x1E0DB75C0]);
  v30 = v40;
  sub_1DC406E14();
  swift_release();
  sub_1DC0A6180((uint64_t)&v41, (uint64_t)&qword_1EDB40100, MEMORY[0x1E0DEE9B8] + 8, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD))sub_1DC083594);
  if (v30)
  {
    sub_1DC083594(0, (unint64_t *)&qword_1EDB296E8, MEMORY[0x1E0DEAFA0], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    v31 = sub_1DC402D4C();
    swift_release();
    sub_1DC0E81D0(v27);
    return v31;
  }
  else
  {
    sub_1DC0E81D0(v27);
  }
  return v26;
}

uint64_t sub_1DC22BE9C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t, uint64_t);
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  _OWORD v35[2];
  uint64_t v36;
  _OWORD v37[2];
  uint64_t v38;
  _OWORD v39[2];
  uint64_t v40;
  uint64_t v41;

  v30 = a2;
  v32 = a1;
  sub_1DC092F50(0, (unint64_t *)&unk_1EDB29810, (void (*)(uint64_t))MEMORY[0x1E0DAD3C8]);
  MEMORY[0x1E0C80A78](v3);
  v33 = (char *)&v25 - v4;
  v5 = sub_1DC40202C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC092F50(0, (unint64_t *)&unk_1EDB28A70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v25 - v10;
  v29 = sub_1DC401A2C();
  v28 = *(_QWORD *)(v29 - 8);
  MEMORY[0x1E0C80A78](v29);
  v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = type metadata accessor for StocksActivity(0);
  MEMORY[0x1E0C80A78](v31);
  v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = v2 + OBJC_IVAR____TtC8StocksUI26OpenArticleIntentNavigator_navigator;
  sub_1DC1446B4();
  v27 = *(int *)(v16 + 48);
  v26 = &v15[*(int *)(v16 + 64)];
  v17 = sub_1DC3FFDD0();
  v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56);
  v18(v11, 1, 1, v17);
  swift_bridgeObjectRetain();
  sub_1DC401A20();
  v18(v11, 1, 1, v17);
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0D57870], v5);
  sub_1DC401B64();
  v19 = v8;
  v20 = (uint64_t)v33;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v19, v5);
  sub_1DC092F14((uint64_t)v11, (unint64_t *)&unk_1EDB28A70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v13, v29);
  v40 = 0;
  memset(v39, 0, sizeof(v39));
  sub_1DC22C584((uint64_t)v39, (uint64_t)v26, (unint64_t *)&qword_1EDB39A70, (unint64_t *)&unk_1EDB39A60);
  *(_QWORD *)&v15[v27] = 0;
  type metadata accessor for StocksActivity.Article(0);
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  v21 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8StocksUI26OpenArticleIntentNavigator_tracker);
  v22 = sub_1DC403340();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v20, 1, 1, v22);
  v38 = 0;
  memset(v37, 0, sizeof(v37));
  v36 = 0;
  memset(v35, 0, sizeof(v35));
  v23 = v41;
  sub_1DC22B720((uint64_t)v15, v21, v20, (uint64_t)v37, 0, 0, (uint64_t)v35);
  if (!v23)
    swift_release();
  sub_1DC0A6180((uint64_t)v35, (uint64_t)&qword_1EDB29410, (uint64_t)&unk_1EDB29400, MEMORY[0x1E0DB35B0], (uint64_t (*)(_QWORD))sub_1DC0A6204);
  sub_1DC0A6180((uint64_t)v37, (uint64_t)&qword_1EDB2ACD0, (uint64_t)&qword_1EDB2ACC0, MEMORY[0x1E0D53040], (uint64_t (*)(_QWORD))sub_1DC0A6204);
  sub_1DC092F14(v20, (unint64_t *)&unk_1EDB29810, (void (*)(uint64_t))MEMORY[0x1E0DAD3C8]);
  return sub_1DC1B3F14((uint64_t)v15);
}

uint64_t OpenArticleIntentNavigator.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC8StocksUI26OpenArticleIntentNavigator_navigator;
  sub_1DC22C5D8(0, (unint64_t *)&qword_1EDB29B50, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6C48]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t OpenArticleIntentNavigator.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC8StocksUI26OpenArticleIntentNavigator_navigator;
  sub_1DC22C5D8(0, (unint64_t *)&qword_1EDB29B50, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6C48]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t OpenArticleIntentNavigator.unownedExecutor.getter()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1DC22C368(uint64_t a1, uint64_t a2)
{
  return sub_1DC22BE9C(a1, a2);
}

uint64_t sub_1DC22C388()
{
  return type metadata accessor for OpenArticleIntentNavigator();
}

uint64_t type metadata accessor for OpenArticleIntentNavigator()
{
  uint64_t result;

  result = qword_1F034F5A8;
  if (!qword_1F034F5A8)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1DC22C3CC()
{
  unint64_t v0;

  sub_1DC22C5D8(319, (unint64_t *)&qword_1EDB29B50, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6C48]);
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t method lookup function for OpenArticleIntentNavigator()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of OpenArticleIntentNavigator.navigate(to:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t sub_1DC22C488(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1DC092F50(0, (unint64_t *)&unk_1EDB29810, (void (*)(uint64_t))MEMORY[0x1E0DAD3C8]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC22C4DC(uint64_t a1, uint64_t a2, unint64_t *a3, unint64_t *a4)
{
  uint64_t v6;

  sub_1DC0A6204(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_1DC22C530(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1DC092F50(0, (unint64_t *)&unk_1EDB29810, (void (*)(uint64_t))MEMORY[0x1E0DAD3C8]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC22C584(uint64_t a1, uint64_t a2, unint64_t *a3, unint64_t *a4)
{
  uint64_t v6;

  sub_1DC0A6204(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

void sub_1DC22C5D8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    v6 = type metadata accessor for StocksActivity(255);
    v7 = sub_1DC08CDA4();
    v8 = a3(a1, v6, v7);
    if (!v9)
      atomic_store(v8, a2);
  }
}

uint64_t sub_1DC22C640(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;

  sub_1DC092F50(0, (unint64_t *)&unk_1EDB29810, (void (*)(uint64_t))MEMORY[0x1E0DAD3C8]);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1DC174EC4(a1, *(_QWORD *)(v1 + 16), v1 + v5, v1 + v6, *(_QWORD *)(v1 + ((v6 + 47) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v1 + ((v6 + 47) & 0xFFFFFFFFFFFFFFF8) + 8), *(_QWORD *)(v1 + ((v6 + 47) & 0xFFFFFFFFFFFFFFF8) + 16));
}

uint64_t sub_1DC22C6B8(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_1DC22C5D8(255, a2, a3);
    result = MEMORY[0x1DF0CAB8C](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

_QWORD *sub_1DC22C6F8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  v3 = *(_QWORD *)(sub_1DC400754() - 8);
  v4 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  v5 = *(_QWORD *)(v3 + 72);
  swift_bridgeObjectRetain();
  v6 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  do
  {
    v8 = sub_1DC400748();
    if (v9)
    {
      v10 = v8;
      v11 = v9;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v6 = sub_1DC108BBC(0, v6[2] + 1, 1, v6);
      v13 = v6[2];
      v12 = v6[3];
      if (v13 >= v12 >> 1)
        v6 = sub_1DC108BBC((_QWORD *)(v12 > 1), v13 + 1, 1, v6);
      v6[2] = v13 + 1;
      v7 = &v6[2 * v13];
      v7[4] = v10;
      v7[5] = v11;
    }
    v4 += v5;
    --v1;
  }
  while (v1);
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1DC22C814@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t);
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v25;
  char *v26;
  uint64_t (*v27)(uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  _QWORD *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v40 = a1;
  sub_1DC089DA4(0, &qword_1F034F648, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAE6C8], MEMORY[0x1E0CAF2F8]);
  v34 = *(_QWORD *)(v1 - 8);
  v35 = v1;
  MEMORY[0x1E0C80A78](v1);
  v33 = (char *)&v33 - v2;
  v3 = sub_1DC40076C();
  v36 = *(_QWORD *)(v3 - 8);
  v37 = v3;
  MEMORY[0x1E0C80A78](v3);
  v38 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1DC089DA4(0, (unint64_t *)&unk_1EDB293C8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D580A8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v33 - v7;
  v9 = sub_1DC401C00();
  v10 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D57128];
  v11 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1DC402434();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC089DA4(0, &qword_1EDB29218, v10, v5);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v33 - v19;
  sub_1DC401EC4();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v20, 0, 1, v9);
  v21 = v39 + OBJC_IVAR____TtC8StocksUI36ArticleSymbolsToolbarFeatureProvider_activePage;
  swift_beginAccess();
  sub_1DC22CF24((uint64_t)v20, v21);
  swift_endAccess();
  sub_1DC401EC4();
  sub_1DC401BE8();
  v22 = v13;
  v23 = v15;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v22, v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v8, 1, v14) == 1)
  {
    sub_1DC0B091C((uint64_t)v8, (unint64_t *)&unk_1EDB293C8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D580A8]);
    return sub_1DC401D5C();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v17, v8, v14);
    sub_1DC40241C();
    swift_getObjectType();
    v25 = v38;
    sub_1DC4091CC();
    swift_unknownObjectRelease();
    v41 = sub_1DC400760();
    swift_getKeyPath();
    v26 = v33;
    sub_1DC3FFC74();
    v27 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8];
    sub_1DC089DA4(0, &qword_1F034F650, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAE6C8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1DC22CFA8(&qword_1F034F658, &qword_1F034F650, v27, MEMORY[0x1E0DEAF38]);
    sub_1DC22CFA8(qword_1F034F660, &qword_1F034F648, MEMORY[0x1E0CAF2F8], MEMORY[0x1E0CAF320]);
    v28 = v35;
    v29 = sub_1DC408BE4();
    (*(void (**)(char *, uint64_t))(v34 + 8))(v26, v28);
    swift_bridgeObjectRelease();
    v30 = sub_1DC22C6F8(v29);
    swift_bridgeObjectRelease();
    v31 = v30[2];
    if (v31)
    {
      v39 = v23;
      v41 = MEMORY[0x1E0DEE9D8];
      sub_1DC4097B4();
      sub_1DC22CFF4();
      v32 = v30 + 5;
      do
      {
        swift_bridgeObjectRetain();
        sub_1DC40904C();
        sub_1DC40979C();
        sub_1DC4097C0();
        sub_1DC4097CC();
        sub_1DC4097A8();
        v32 += 2;
        --v31;
      }
      while (v31);
      swift_bridgeObjectRelease();
      v25 = v38;
      v23 = v39;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    sub_1DC401D5C();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v25, v37);
    return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v17, v14);
  }
}

uint64_t sub_1DC22CCDC(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v19;
  uint64_t result;
  uint64_t (*v21)(uint64_t);

  v21 = a3;
  v4 = sub_1DC401C00();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v21 - v9;
  v11 = v3 + OBJC_IVAR____TtC8StocksUI36ArticleSymbolsToolbarFeatureProvider_activePage;
  swift_beginAccess();
  v12 = 0;
  v13 = 0;
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v11, 1, v4))
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v10, v11, v4);
    v12 = sub_1DC401BDC();
    v13 = v14;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  }
  sub_1DC401EC4();
  v15 = sub_1DC401BDC();
  v17 = v16;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if (!v13)
  {
    result = swift_bridgeObjectRelease();
    return v21(result);
  }
  if (v12 == v15 && v13 == v17)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  v19 = sub_1DC4099E8();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if ((v19 & 1) == 0)
    return v21(result);
  return result;
}

uint64_t sub_1DC22CE88()
{
  uint64_t v0;

  sub_1DC0B091C(v0 + OBJC_IVAR____TtC8StocksUI36ArticleSymbolsToolbarFeatureProvider_activePage, &qword_1EDB29218, (uint64_t (*)(uint64_t))MEMORY[0x1E0D57128]);
  return swift_deallocClassInstance();
}

uint64_t sub_1DC22CEC8()
{
  return type metadata accessor for ArticleSymbolsToolbarFeatureProvider();
}

uint64_t sub_1DC22CED0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *MEMORY[0x1E0D57208];
  v3 = sub_1DC401C9C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

uint64_t sub_1DC22CF1C()
{
  return sub_1DC402398();
}

uint64_t sub_1DC22CF24(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1DC089DA4(0, &qword_1EDB29218, (uint64_t (*)(uint64_t))MEMORY[0x1E0D57128], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC22CF80@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_1DC40073C();
  *a1 = v3;
  return result;
}

uint64_t sub_1DC22CFA8(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_1DC089DA4(255, a2, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAE6C8], a3);
    result = MEMORY[0x1DF0CAB8C](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1DC22CFF4()
{
  unint64_t result;

  result = qword_1EDB3F880;
  if (!qword_1EDB3F880)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EDB3F880);
  }
  return result;
}

uint64_t sub_1DC22D030()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC22D03C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1DC4010E4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_1DC22D078()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC22D084(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1DC4010E4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for StockFeedPage()
{
  uint64_t result;

  result = qword_1EDB2D108;
  if (!qword_1EDB2D108)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1DC22D100()
{
  sub_1DC409838();
  __break(1u);
}

uint64_t sub_1DC22D158@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_1DC406B98();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1DC22D180()
{
  sub_1DC409AC0();
  sub_1DC4089BC();
  return sub_1DC409AF0();
}

uint64_t sub_1DC22D1D4()
{
  sub_1DC22D300(&qword_1F034F6A8, (uint64_t)&unk_1DC41B704);
  return sub_1DC402E18();
}

uint64_t sub_1DC22D21C()
{
  sub_1DC409AC0();
  sub_1DC4089BC();
  return sub_1DC409AF0();
}

uint64_t sub_1DC22D270()
{
  return sub_1DC22D300(&qword_1F034F690, (uint64_t)&unk_1DC41B674);
}

uint64_t sub_1DC22D294()
{
  return sub_1DC22D300(&qword_1F034F698, (uint64_t)&unk_1DC41B69C);
}

uint64_t sub_1DC22D2B8()
{
  return sub_1DC22D300(&qword_1F034F6A0, (uint64_t)&unk_1DC41B6DC);
}

uint64_t sub_1DC22D2DC()
{
  return sub_1DC22D300(&qword_1F034F6A8, (uint64_t)&unk_1DC41B704);
}

uint64_t sub_1DC22D300(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for StockFeedPage();
    result = MEMORY[0x1DF0CAB8C](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DC22D340()
{
  return MEMORY[0x1E0DEA990];
}

uint64_t URL.Param.init(rawValue:)@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1DC4098A4();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

uint64_t URL.Param.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x657370616C6C6F63;
  else
    return 0xD000000000000010;
}

uint64_t sub_1DC22D3F8(char *a1, char *a2)
{
  return sub_1DC159A04(*a1, *a2);
}

unint64_t sub_1DC22D408()
{
  unint64_t result;

  result = qword_1F034F6B0;
  if (!qword_1F034F6B0)
  {
    result = MEMORY[0x1DF0CAB8C](&protocol conformance descriptor for URL.Param, &type metadata for URL.Param);
    atomic_store(result, (unint64_t *)&qword_1F034F6B0);
  }
  return result;
}

uint64_t sub_1DC22D44C()
{
  sub_1DC409AC0();
  sub_1DC408AF4();
  swift_bridgeObjectRelease();
  return sub_1DC409AF0();
}

uint64_t sub_1DC22D4DC()
{
  sub_1DC408AF4();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DC22D548()
{
  sub_1DC409AC0();
  sub_1DC408AF4();
  swift_bridgeObjectRelease();
  return sub_1DC409AF0();
}

uint64_t sub_1DC22D5D4@<X0>(char *a1@<X8>)
{
  return URL.Param.init(rawValue:)(a1);
}

void sub_1DC22D5E0(unint64_t *a1@<X8>)
{
  _BYTE *v1;
  unint64_t v2;
  unint64_t v3;

  v2 = 0xD000000000000010;
  if (*v1)
    v2 = 0x657370616C6C6F63;
  v3 = 0x80000001DC432DB0;
  if (*v1)
    v3 = 0xEF72616265646953;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t _s5ParamOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1DC22D67C + 4 * byte_1DC41B781[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1DC22D6B0 + 4 * byte_1DC41B77C[v4]))();
}

uint64_t sub_1DC22D6B0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC22D6B8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC22D6C0);
  return result;
}

uint64_t sub_1DC22D6CC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC22D6D4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1DC22D6D8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC22D6E0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for URL.Param()
{
  return &type metadata for URL.Param;
}

ValueMetadata *type metadata accessor for WelcomeOfflineModel()
{
  return &type metadata for WelcomeOfflineModel;
}

uint64_t sub_1DC22D70C()
{
  uint64_t v0;
  uint64_t ObjCClassFromMetadata;
  void *v2;
  id v3;
  id v4;

  v0 = sub_1DC407EAC();
  __swift_allocate_value_buffer(v0, qword_1F03689D8);
  __swift_project_value_buffer(v0, (uint64_t)qword_1F03689D8);
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v2 = (void *)objc_opt_self();
  v3 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1DC3FFC80();

  v4 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata, 0x80000001DC43ED20);
  sub_1DC3FFC80();

  return sub_1DC407E58();
}

uint64_t sub_1DC22D8AC()
{
  uint64_t v0;
  uint64_t ObjCClassFromMetadata;
  void *v2;
  id v3;
  id v4;

  v0 = sub_1DC407EAC();
  __swift_allocate_value_buffer(v0, qword_1F03689F0);
  __swift_project_value_buffer(v0, (uint64_t)qword_1F03689F0);
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v2 = (void *)objc_opt_self();
  v3 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1DC3FFC80();

  v4 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata, 0x80000001DC43EA80);
  sub_1DC3FFC80();

  return sub_1DC407E58();
}

uint64_t sub_1DC22DA4C()
{
  uint64_t v0;
  uint64_t ObjCClassFromMetadata;
  void *v2;
  id v3;
  id v4;

  v0 = sub_1DC407EAC();
  __swift_allocate_value_buffer(v0, qword_1F0368A08);
  __swift_project_value_buffer(v0, (uint64_t)qword_1F0368A08);
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v2 = (void *)objc_opt_self();
  v3 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1DC3FFC80();

  v4 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata, 0x80000001DC43EC40);
  sub_1DC3FFC80();

  return sub_1DC407E58();
}

uint64_t sub_1DC22DBEC()
{
  uint64_t v0;
  uint64_t ObjCClassFromMetadata;
  void *v2;
  id v3;
  id v4;

  v0 = sub_1DC407EAC();
  __swift_allocate_value_buffer(v0, qword_1F0368A20);
  __swift_project_value_buffer(v0, (uint64_t)qword_1F0368A20);
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v2 = (void *)objc_opt_self();
  v3 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1DC3FFC80();

  v4 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata, 0x80000001DC43EB80);
  sub_1DC3FFC80();

  return sub_1DC407E58();
}

uint64_t sub_1DC22DD88@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC1825D8(&qword_1F034AFB0, (uint64_t)qword_1F03689D8, a1);
}

uint64_t sub_1DC22DDA8@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC1825D8(&qword_1F034AFB8, (uint64_t)qword_1F03689F0, a1);
}

uint64_t sub_1DC22DDC4@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC1825D8(&qword_1F034AFC0, (uint64_t)qword_1F0368A08, a1);
}

uint64_t sub_1DC22DDE0@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC1825D8(&qword_1F034AFC8, (uint64_t)qword_1F0368A20, a1);
}

uint64_t sub_1DC22DE00(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x1E0DEE9D8];
  if (v2)
  {
    v7 = MEMORY[0x1E0DEE9D8];
    sub_1DC4097B4();
    v4 = *(_QWORD *)(sub_1DC4011BC() - 8);
    v5 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v6 = *(_QWORD *)(v4 + 72);
    do
    {
      sub_1DC401144();
      sub_1DC40979C();
      sub_1DC4097C0();
      sub_1DC4097CC();
      sub_1DC4097A8();
      v5 += v6;
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

uint64_t ArticleTopStoriesOptionsProvider.results()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[4] = v0;
  sub_1DC22E2CC();
  v1[5] = swift_task_alloc();
  v2 = sub_1DC401AB0();
  v1[6] = v2;
  v1[7] = *(_QWORD *)(v2 - 8);
  v1[8] = swift_task_alloc();
  v1[9] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1DC22DF5C()
{
  uint64_t v0;
  _QWORD *v1;

  __swift_project_boxed_opaque_existential_1(*(_QWORD **)(v0 + 32), *(_QWORD *)(*(_QWORD *)(v0 + 32) + 24));
  *(_QWORD *)(v0 + 80) = sub_1DC400B80();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 88) = v1;
  *v1 = v0;
  v1[1] = sub_1DC22DFE0;
  return sub_1DC402CC8();
}

uint64_t sub_1DC22DFE0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 96) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_release();
  return swift_task_switch();
}

uint64_t sub_1DC22E04C()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  void (*v14)(unint64_t, unint64_t, uint64_t);
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v1 = sub_1DC22DE00(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease();
  if (!(v1 >> 62))
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v2)
      goto LABEL_3;
LABEL_17:
    v7 = MEMORY[0x1E0DEE9D8];
LABEL_18:
    swift_bridgeObjectRelease_n();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(unint64_t))(v0 + 8))(v7);
  }
  swift_bridgeObjectRetain();
  result = sub_1DC409850();
  v2 = result;
  if (!result)
    goto LABEL_17;
LABEL_3:
  if (v2 >= 1)
  {
    v4 = 0;
    v5 = *(_QWORD *)(v0 + 56);
    v6 = v1 & 0xC000000000000001;
    v7 = MEMORY[0x1E0DEE9D8];
    v19 = v2;
    do
    {
      if (v6)
        MEMORY[0x1DF0C9FBC](v4, v1);
      else
        swift_unknownObjectRetain();
      v9 = *(_QWORD *)(v0 + 40);
      v8 = *(_QWORD *)(v0 + 48);
      sub_1DC401AA4();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v9, 1, v8) == 1)
      {
        sub_1DC22E320(*(_QWORD *)(v0 + 40));
      }
      else
      {
        v10 = v1;
        v12 = *(_QWORD *)(v0 + 64);
        v11 = *(_QWORD *)(v0 + 72);
        v13 = *(_QWORD *)(v0 + 48);
        v14 = *(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 32);
        v14(v11, *(_QWORD *)(v0 + 40), v13);
        v14(v12, v11, v13);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v7 = sub_1DC166CC0(0, *(_QWORD *)(v7 + 16) + 1, 1, v7);
        v16 = *(_QWORD *)(v7 + 16);
        v15 = *(_QWORD *)(v7 + 24);
        if (v16 >= v15 >> 1)
          v7 = sub_1DC166CC0(v15 > 1, v16 + 1, 1, v7);
        v17 = *(_QWORD *)(v0 + 64);
        v18 = *(_QWORD *)(v0 + 48);
        *(_QWORD *)(v7 + 16) = v16 + 1;
        v14(v7+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v16, v17, v18);
        v1 = v10;
        v2 = v19;
      }
      ++v4;
    }
    while (v2 != v4);
    goto LABEL_18;
  }
  __break(1u);
  return result;
}

uint64_t sub_1DC22E270()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1DC22E2CC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB42668)
  {
    sub_1DC401AB0();
    v0 = sub_1DC4095A4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB42668);
  }
}

uint64_t sub_1DC22E320(uint64_t a1)
{
  uint64_t v2;

  sub_1DC22E2CC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DC22E35C()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1DC22E3A0;
  return ArticleTopStoriesOptionsProvider.results()();
}

uint64_t sub_1DC22E3A0(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  v5 = swift_task_dealloc();
  if (!v1)
    v5 = a1;
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(v5);
}

ValueMetadata *type metadata accessor for ArticleTopStoriesOptionsProvider()
{
  return &type metadata for ArticleTopStoriesOptionsProvider;
}

ValueMetadata *type metadata accessor for StockListRelayoutBlueprintModifier()
{
  return &type metadata for StockListRelayoutBlueprintModifier;
}

uint64_t sub_1DC22E414(uint64_t a1, void (*a2)(char *))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  sub_1DC0CC01C(0, &qword_1EDB2A280, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB9A28]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v15 - v7;
  sub_1DC12E7A0();
  v10 = &v8[*(int *)(v9 + 48)];
  sub_1DC0CC01C(0, (unint64_t *)&qword_1EDB2AB40, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790]);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v8, a1, v11);
  v12 = *MEMORY[0x1E0DB7FB8];
  v13 = sub_1DC404984();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v10, v12, v13);
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0DB99B0], v5);
  a2(v8);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1DC22E53C()
{
  unint64_t result;

  result = qword_1EDB3CAC8;
  if (!qword_1EDB3CAC8)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC41B934, &type metadata for StockListRelayoutBlueprintModifier);
    atomic_store(result, (unint64_t *)&qword_1EDB3CAC8);
  }
  return result;
}

uint64_t destroy for StockSearchReplaceQuotesBlueprintModifier()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *_s8StocksUI41StockSearchReplaceQuotesBlueprintModifierVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for StockSearchReplaceQuotesBlueprintModifier(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for StockSearchReplaceQuotesBlueprintModifier(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for StockSearchReplaceQuotesBlueprintModifier()
{
  return &type metadata for StockSearchReplaceQuotesBlueprintModifier;
}

uint64_t sub_1DC22E6A0@<X0>(char *a1@<X0>, _QWORD *a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  unint64_t v63;
  char v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  _QWORD *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  unint64_t v74;
  uint64_t v75;
  char v76;
  uint64_t v77;
  _QWORD *v78;
  _QWORD *v79;
  char *v80;
  uint64_t v81;
  unsigned int (*v82)(char *, uint64_t, uint64_t);
  uint64_t v83;
  void (*v84)(char *, char *, uint64_t);
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  void (*v91)(uint64_t);
  uint64_t v92;
  unsigned int (*v93)(char *, uint64_t, uint64_t);
  void (*v94)(char *, char *, uint64_t);
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  void (*v100)(uint64_t);
  unsigned int v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  char *v105;
  void (*v106)(uint64_t);
  char v107;
  void (*v108)(char *, uint64_t);
  uint64_t v109;
  char *v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  int *v116;
  void (*v117)(char *, uint64_t, uint64_t);
  char *v118;
  uint64_t v119;
  uint64_t v120;
  void (*v121)(uint64_t);
  uint64_t v122;
  uint64_t v123;
  char *v124;
  char *v125;
  uint64_t v126;
  void (*v127)(uint64_t);
  uint64_t v128;
  char *v129;
  uint64_t v130;
  uint64_t *v131;
  char *v132;
  uint64_t v133;
  void (*v134)(uint64_t);
  char v135;
  char *v136;
  void (*v137)(char *, uint64_t);
  uint64_t v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  int *v144;
  uint64_t v145;
  uint64_t v146;
  void (*v147)(char *, uint64_t, uint64_t);
  char *v148;
  uint64_t v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  char *v155;
  uint64_t v156;
  void (*v157)(uint64_t);
  uint64_t v158;
  char *v159;
  uint64_t v160;
  char *v161;
  uint64_t v162;
  char *v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  char *v167;
  uint64_t v168;
  char *v169;
  uint64_t v170;
  char *v171;
  uint64_t v172;
  uint64_t v173;
  char *v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  char *v181;
  char *v182;
  uint64_t v183;
  char *v184;
  char *v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  _QWORD *v191;
  uint64_t v192;

  v189 = a3;
  v191 = a2;
  v4 = sub_1DC40124C();
  v186 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v185 = (char *)&v158 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1DC4011C8();
  MEMORY[0x1E0C80A78](v6);
  v171 = (char *)&v158 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for PriceViewModel();
  MEMORY[0x1E0C80A78](v8);
  v172 = (uint64_t)&v158 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v170 = sub_1DC4008EC();
  v179 = *(_QWORD *)(v170 - 8);
  MEMORY[0x1E0C80A78](v170);
  v169 = (char *)&v158 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC092F50(0, &qword_1EDB353E0, (void (*)(uint64_t))type metadata accessor for StockSparklineViewModel);
  MEMORY[0x1E0C80A78](v11);
  v177 = (uint64_t)&v158 - v12;
  v180 = sub_1DC4010E4();
  v178 = *(_QWORD *)(v180 - 8);
  MEMORY[0x1E0C80A78](v180);
  v174 = (char *)&v158 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0CD95C();
  v175 = v14;
  MEMORY[0x1E0C80A78](v14);
  v165 = (uint64_t)&v158 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v164 = (uint64_t)&v158 - v17;
  sub_1DC092F50(0, &qword_1EDB28DC0, (void (*)(uint64_t))MEMORY[0x1E0DAF040]);
  MEMORY[0x1E0C80A78](v18);
  v162 = (uint64_t)&v158 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v173 = (uint64_t)&v158 - v21;
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)&v158 - v23;
  MEMORY[0x1E0C80A78](v25);
  v166 = (uint64_t)&v158 - v26;
  MEMORY[0x1E0C80A78](v27);
  v188 = (uint64_t)&v158 - v28;
  MEMORY[0x1E0C80A78](v29);
  v176 = (uint64_t)&v158 - v30;
  MEMORY[0x1E0C80A78](v31);
  v161 = (char *)&v158 - v32;
  MEMORY[0x1E0C80A78](v33);
  v35 = (char *)&v158 - v34;
  MEMORY[0x1E0C80A78](v36);
  v38 = (char *)&v158 - v37;
  v190 = sub_1DC401030();
  v192 = *(_QWORD *)(v190 - 8);
  MEMORY[0x1E0C80A78](v190);
  v182 = (char *)&v158 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v40);
  v163 = (char *)&v158 - v41;
  MEMORY[0x1E0C80A78](v42);
  v181 = (char *)&v158 - v43;
  v187 = type metadata accessor for StockViewModel();
  MEMORY[0x1E0C80A78](v187);
  v45 = (char *)&v158 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v46);
  v48 = (char *)&v158 - v47;
  v49 = type metadata accessor for StockSearchModel();
  MEMORY[0x1E0C80A78](v49);
  v167 = (char *)&v158 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v51);
  v53 = (char *)&v158 - v52;
  sub_1DC0D95F0(0);
  v183 = v54;
  v184 = a1;
  sub_1DC404354();
  v168 = v49;
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_1DC092ED0((uint64_t)v53, (uint64_t)v48, (uint64_t (*)(_QWORD))type metadata accessor for StockViewModel);
    v71 = sub_1DC4010B4();
    if (v191[2])
    {
      v73 = v191;
      v74 = sub_1DC0ED368(v71, v72);
      v75 = v190;
      if ((v76 & 1) != 0)
      {
        v77 = v73[7];
        v78 = (_QWORD *)v192;
        (*(void (**)(char *, unint64_t, uint64_t))(v192 + 16))(v38, v77 + *(_QWORD *)(v192 + 72) * v74, v190);
        v79 = (_QWORD *)v78[7];
        v80 = v38;
        v81 = 0;
      }
      else
      {
        v78 = (_QWORD *)v192;
        v79 = *(_QWORD **)(v192 + 56);
        v80 = v38;
        v81 = 1;
      }
    }
    else
    {
      v78 = (_QWORD *)v192;
      v79 = *(_QWORD **)(v192 + 56);
      v80 = v38;
      v81 = 1;
      v75 = v190;
    }
    v191 = v79;
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v79)(v80, v81, 1, v75);
    swift_bridgeObjectRelease();
    v93 = (unsigned int (*)(char *, uint64_t, uint64_t))v78[6];
    if (v93(v38, 1, v75) == 1)
    {
      sub_1DC0926D8((uint64_t)v48, (uint64_t (*)(_QWORD))type metadata accessor for StockViewModel);
      sub_1DC092F14((uint64_t)v38, &qword_1EDB28DC0, (void (*)(uint64_t))MEMORY[0x1E0DAF040]);
      return (*(uint64_t (**)(uint64_t, char *))(*(_QWORD *)(v183 - 8) + 16))(v189, v184);
    }
    v94 = (void (*)(char *, char *, uint64_t))v78[4];
    v95 = v181;
    v94(v181, v38, v75);
    v186 = v78[2];
    ((void (*)(char *, char *, uint64_t))v186)(v35, v95, v75);
    ((void (*)(char *, _QWORD, uint64_t, uint64_t))v191)(v35, 0, 1, v75);
    v96 = *(int *)(v187 + 20);
    v159 = v48;
    v97 = (uint64_t)&v48[v96];
    v98 = v164;
    v99 = v164 + *(int *)(v175 + 48);
    v100 = (void (*)(uint64_t))MEMORY[0x1E0DAF040];
    sub_1DC092F9C((uint64_t)v35, v164, &qword_1EDB28DC0, (void (*)(uint64_t))MEMORY[0x1E0DAF040]);
    sub_1DC092F9C(v97, v99, &qword_1EDB28DC0, v100);
    if (v93((char *)v98, 1, v75) == 1)
    {
      sub_1DC092F14((uint64_t)v35, &qword_1EDB28DC0, (void (*)(uint64_t))MEMORY[0x1E0DAF040]);
      v101 = v93((char *)v99, 1, v75);
      v102 = (uint64_t)v159;
      if (v101 == 1)
      {
        sub_1DC092F14(v98, &qword_1EDB28DC0, (void (*)(uint64_t))MEMORY[0x1E0DAF040]);
        (*(void (**)(char *, uint64_t))(v192 + 8))(v181, v75);
LABEL_33:
        v109 = v102;
        goto LABEL_34;
      }
    }
    else
    {
      v104 = v161;
      sub_1DC092F9C(v98, (uint64_t)v161, &qword_1EDB28DC0, (void (*)(uint64_t))MEMORY[0x1E0DAF040]);
      if (v93((char *)v99, 1, v75) != 1)
      {
        v132 = v163;
        v94(v163, (char *)v99, v75);
        v133 = v98;
        v134 = (void (*)(uint64_t))MEMORY[0x1E0DAF040];
        sub_1DC080808((unint64_t *)&unk_1EDB28DB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF040], MEMORY[0x1E0DAF050]);
        v135 = sub_1DC4089F8();
        v136 = v104;
        v137 = *(void (**)(char *, uint64_t))(v192 + 8);
        v137(v132, v75);
        sub_1DC092F14((uint64_t)v35, &qword_1EDB28DC0, v134);
        v137(v136, v75);
        sub_1DC092F14(v133, &qword_1EDB28DC0, v134);
        v102 = (uint64_t)v159;
        if ((v135 & 1) != 0)
        {
          v137(v181, v75);
          goto LABEL_33;
        }
LABEL_36:
        v139 = v176;
        ((void (*)(uint64_t, char *, uint64_t))v186)(v176, v181, v75);
        ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v191)(v139, 0, 1, v75);
        v191 = *(_QWORD **)(v178 + 16);
        v140 = v174;
        v141 = v180;
        ((void (*)(char *, uint64_t, uint64_t))v191)(v174, v102, v180);
        sub_1DC092F9C(v139, v188, &qword_1EDB28DC0, (void (*)(uint64_t))MEMORY[0x1E0DAF040]);
        v142 = type metadata accessor for StockSparklineViewModel(0);
        v143 = v177;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v142 - 8) + 56))(v177, 1, 1, v142);
        v144 = (int *)v187;
        v145 = v102;
        v146 = v102 + *(int *)(v187 + 32);
        v147 = *(void (**)(char *, uint64_t, uint64_t))(v179 + 16);
        v148 = v169;
        v149 = v170;
        v147(v169, v146, v170);
        LODWORD(v186) = *(unsigned __int8 *)(v145 + v144[9]);
        v150 = v167;
        ((void (*)(char *, char *, uint64_t))v191)(v167, v140, v141);
        v151 = v188;
        sub_1DC092F9C(v188, (uint64_t)&v150[v144[5]], &qword_1EDB28DC0, (void (*)(uint64_t))MEMORY[0x1E0DAF040]);
        sub_1DC092F9C(v143, (uint64_t)&v150[v144[6]], &qword_1EDB353E0, (void (*)(uint64_t))type metadata accessor for StockSparklineViewModel);
        v147(&v150[v144[8]], (uint64_t)v148, v149);
        v150[v144[9]] = v186;
        v152 = v151;
        v153 = v166;
        sub_1DC092F9C(v152, v166, &qword_1EDB28DC0, (void (*)(uint64_t))MEMORY[0x1E0DAF040]);
        v154 = v171;
        v155 = v140;
        sub_1DC401078();
        v156 = v172;
        sub_1DC0FE8A4(v153, v154, 9666786, 0xA300000000000000, v172);
        (*(void (**)(char *, uint64_t))(v179 + 8))(v148, v149);
        sub_1DC092F14(v177, &qword_1EDB353E0, (void (*)(uint64_t))type metadata accessor for StockSparklineViewModel);
        v157 = (void (*)(uint64_t))MEMORY[0x1E0DAF040];
        sub_1DC092F14(v188, &qword_1EDB28DC0, (void (*)(uint64_t))MEMORY[0x1E0DAF040]);
        (*(void (**)(char *, uint64_t))(v178 + 8))(v155, v180);
        sub_1DC092ED0(v156, (uint64_t)&v150[v144[7]], (uint64_t (*)(_QWORD))type metadata accessor for PriceViewModel);
        sub_1DC092F14(v176, &qword_1EDB28DC0, v157);
        swift_storeEnumTagMultiPayload();
        sub_1DC080808(&qword_1EDB2F300, (uint64_t (*)(uint64_t))type metadata accessor for StockSearchModel, (uint64_t)&unk_1DC42E184);
        sub_1DC404348();
        (*(void (**)(char *, uint64_t))(v192 + 8))(v181, v75);
        v131 = &v190;
        return sub_1DC0926D8(*(v131 - 32), (uint64_t (*)(_QWORD))type metadata accessor for StockViewModel);
      }
      sub_1DC092F14((uint64_t)v35, &qword_1EDB28DC0, (void (*)(uint64_t))MEMORY[0x1E0DAF040]);
      (*(void (**)(char *, uint64_t))(v192 + 8))(v104, v75);
      v102 = (uint64_t)v159;
    }
    sub_1DC0926D8(v98, (uint64_t (*)(_QWORD))sub_1DC0CD95C);
    goto LABEL_36;
  }
  sub_1DC1C62AC();
  v181 = v55;
  v56 = &v53[*((int *)v55 + 12)];
  sub_1DC092ED0((uint64_t)v53, (uint64_t)v45, (uint64_t (*)(_QWORD))type metadata accessor for StockViewModel);
  v58 = v185;
  v57 = v186;
  (*(void (**)(char *, char *, uint64_t))(v186 + 32))(v185, v56, v4);
  v59 = sub_1DC4010B4();
  v61 = v191;
  v62 = (uint64_t)v45;
  if (v191[2] && (v63 = sub_1DC0ED368(v59, v60), (v64 & 1) != 0))
  {
    v65 = v61[7];
    v66 = (_QWORD *)v192;
    v67 = v190;
    (*(void (**)(char *, unint64_t, uint64_t))(v192 + 16))(v24, v65 + *(_QWORD *)(v192 + 72) * v63, v190);
    v68 = (_QWORD *)v66[7];
    v69 = v24;
    v70 = 0;
  }
  else
  {
    v66 = (_QWORD *)v192;
    v68 = *(_QWORD **)(v192 + 56);
    v69 = v24;
    v70 = 1;
    v67 = v190;
  }
  v191 = v68;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v68)(v69, v70, 1, v67);
  swift_bridgeObjectRelease();
  v82 = (unsigned int (*)(char *, uint64_t, uint64_t))v66[6];
  if (v82(v24, 1, v67) == 1)
  {
    (*(void (**)(char *, uint64_t))(v57 + 8))(v58, v4);
    sub_1DC0926D8(v62, (uint64_t (*)(_QWORD))type metadata accessor for StockViewModel);
    sub_1DC092F14((uint64_t)v24, &qword_1EDB28DC0, (void (*)(uint64_t))MEMORY[0x1E0DAF040]);
    return (*(uint64_t (**)(uint64_t, char *))(*(_QWORD *)(v183 - 8) + 16))(v189, v184);
  }
  v164 = v4;
  v83 = v62;
  v84 = (void (*)(char *, char *, uint64_t))v66[4];
  v85 = v182;
  v84(v182, v24, v67);
  v86 = v173;
  v161 = (char *)v66[2];
  ((void (*)(uint64_t, char *, uint64_t))v161)(v173, v85, v67);
  ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v191)(v86, 0, 1, v67);
  v87 = *(int *)(v187 + 20);
  v160 = v83;
  v88 = v83 + v87;
  v89 = v165;
  v90 = v165 + *(int *)(v175 + 48);
  v91 = (void (*)(uint64_t))MEMORY[0x1E0DAF040];
  sub_1DC092F9C(v86, v165, &qword_1EDB28DC0, (void (*)(uint64_t))MEMORY[0x1E0DAF040]);
  sub_1DC092F9C(v88, v90, &qword_1EDB28DC0, v91);
  if (v82((char *)v89, 1, v67) == 1)
  {
    sub_1DC092F14(v86, &qword_1EDB28DC0, (void (*)(uint64_t))MEMORY[0x1E0DAF040]);
    if (v82((char *)v90, 1, v67) == 1)
    {
      sub_1DC092F14(v89, &qword_1EDB28DC0, (void (*)(uint64_t))MEMORY[0x1E0DAF040]);
      v92 = v160;
      (*(void (**)(char *, uint64_t))(v192 + 8))(v182, v67);
LABEL_29:
      (*(void (**)(char *, uint64_t))(v186 + 8))(v185, v164);
      v109 = v92;
LABEL_34:
      sub_1DC0926D8(v109, (uint64_t (*)(_QWORD))type metadata accessor for StockViewModel);
      return (*(uint64_t (**)(uint64_t, char *))(*(_QWORD *)(v183 - 8) + 16))(v189, v184);
    }
  }
  else
  {
    v103 = v162;
    sub_1DC092F9C(v89, v162, &qword_1EDB28DC0, (void (*)(uint64_t))MEMORY[0x1E0DAF040]);
    if (v82((char *)v90, 1, v67) != 1)
    {
      v105 = v163;
      v84(v163, (char *)v90, v67);
      v106 = (void (*)(uint64_t))MEMORY[0x1E0DAF040];
      sub_1DC080808((unint64_t *)&unk_1EDB28DB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF040], MEMORY[0x1E0DAF050]);
      v107 = sub_1DC4089F8();
      v108 = *(void (**)(char *, uint64_t))(v192 + 8);
      v108(v105, v67);
      sub_1DC092F14(v173, &qword_1EDB28DC0, v106);
      v108((char *)v103, v67);
      sub_1DC092F14(v89, &qword_1EDB28DC0, v106);
      v92 = v160;
      if ((v107 & 1) != 0)
      {
        v108(v182, v67);
        goto LABEL_29;
      }
      goto LABEL_30;
    }
    sub_1DC092F14(v173, &qword_1EDB28DC0, (void (*)(uint64_t))MEMORY[0x1E0DAF040]);
    (*(void (**)(uint64_t, uint64_t))(v192 + 8))(v103, v67);
  }
  sub_1DC0926D8(v89, (uint64_t (*)(_QWORD))sub_1DC0CD95C);
  v92 = v160;
LABEL_30:
  v110 = v167;
  v184 = &v167[*((int *)v181 + 12)];
  v111 = v176;
  ((void (*)(uint64_t, char *, uint64_t))v161)(v176, v182, v67);
  ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v191)(v111, 0, 1, v67);
  v191 = *(_QWORD **)(v178 + 16);
  v112 = v174;
  v113 = v180;
  ((void (*)(char *, uint64_t, uint64_t))v191)(v174, v92, v180);
  sub_1DC092F9C(v111, v188, &qword_1EDB28DC0, (void (*)(uint64_t))MEMORY[0x1E0DAF040]);
  v114 = type metadata accessor for StockSparklineViewModel(0);
  v115 = v177;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v114 - 8) + 56))(v177, 1, 1, v114);
  v116 = (int *)v187;
  v117 = *(void (**)(char *, uint64_t, uint64_t))(v179 + 16);
  v118 = v169;
  v119 = v170;
  v117(v169, v92 + *(int *)(v187 + 32), v170);
  LODWORD(v183) = *(unsigned __int8 *)(v92 + v116[9]);
  ((void (*)(char *, char *, uint64_t))v191)(v110, v112, v113);
  v120 = v188;
  v121 = (void (*)(uint64_t))MEMORY[0x1E0DAF040];
  sub_1DC092F9C(v188, (uint64_t)&v110[v116[5]], &qword_1EDB28DC0, (void (*)(uint64_t))MEMORY[0x1E0DAF040]);
  sub_1DC092F9C(v115, (uint64_t)&v110[v116[6]], &qword_1EDB353E0, (void (*)(uint64_t))type metadata accessor for StockSparklineViewModel);
  v117(&v110[v116[8]], (uint64_t)v118, v119);
  v110[v116[9]] = v183;
  v122 = v120;
  v123 = v166;
  sub_1DC092F9C(v122, v166, &qword_1EDB28DC0, v121);
  v124 = v171;
  v125 = v174;
  sub_1DC401078();
  v126 = v172;
  sub_1DC0FE8A4(v123, v124, 9666786, 0xA300000000000000, v172);
  (*(void (**)(char *, uint64_t))(v179 + 8))(v118, v119);
  sub_1DC092F14(v177, &qword_1EDB353E0, (void (*)(uint64_t))type metadata accessor for StockSparklineViewModel);
  v127 = (void (*)(uint64_t))MEMORY[0x1E0DAF040];
  sub_1DC092F14(v188, &qword_1EDB28DC0, (void (*)(uint64_t))MEMORY[0x1E0DAF040]);
  (*(void (**)(char *, uint64_t))(v178 + 8))(v125, v180);
  sub_1DC092ED0(v126, (uint64_t)&v110[v116[7]], (uint64_t (*)(_QWORD))type metadata accessor for PriceViewModel);
  sub_1DC092F14(v176, &qword_1EDB28DC0, v127);
  v129 = v185;
  v128 = v186;
  v130 = v164;
  (*(void (**)(char *, char *, uint64_t))(v186 + 16))(v184, v185, v164);
  swift_storeEnumTagMultiPayload();
  sub_1DC080808(&qword_1EDB2F300, (uint64_t (*)(uint64_t))type metadata accessor for StockSearchModel, (uint64_t)&unk_1DC42E184);
  sub_1DC404348();
  (*(void (**)(char *, uint64_t))(v192 + 8))(v182, v190);
  (*(void (**)(char *, uint64_t))(v128 + 8))(v129, v130);
  v131 = (uint64_t *)&v191;
  return sub_1DC0926D8(*(v131 - 32), (uint64_t (*)(_QWORD))type metadata accessor for StockViewModel);
}

uint64_t sub_1DC22F834(uint64_t a1, void (*a2)(char *), uint64_t a3)
{
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t (*v18)(void);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *);

  v26 = a3;
  v27 = a2;
  sub_1DC187FFC(0, (unint64_t *)&qword_1EDB41E18, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB9A28]);
  v24 = *(_QWORD *)(v5 - 8);
  v25 = v5;
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v24 - v6;
  sub_1DC187F08();
  MEMORY[0x1E0C80A78](v8);
  sub_1DC187FFC(0, (unint64_t *)&qword_1EDB2AB88, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790]);
  v10 = v9;
  v11 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v24 - v12;
  v15 = *v3;
  v14 = v3[1];
  v16 = (_QWORD *)v3[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v17 = sub_1DC22FDA0(a1, v15, v14, v16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v18 = MEMORY[0x1E0DB7B60];
  sub_1DC187FFC(0, (unint64_t *)&qword_1EDB41DF0, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60]);
  v20 = v19;
  v21 = sub_1DC1C61D4((unint64_t *)&unk_1EDB41DE0, (unint64_t *)&qword_1EDB41DF0, (uint64_t (*)(uint64_t, _QWORD *))v18, MEMORY[0x1E0DB7B88]);
  v22 = sub_1DC1C61D4(&qword_1EDB41DD8, (unint64_t *)&qword_1EDB41DF0, (uint64_t (*)(uint64_t, _QWORD *))v18, MEMORY[0x1E0DB7B80]);
  MEMORY[0x1DF0C311C](v17, v20, v21, v22);
  type metadata accessor for StockSearchSectionDescriptor();
  type metadata accessor for StockSearchModel();
  sub_1DC080808(&qword_1EDB389D0, (uint64_t (*)(uint64_t))type metadata accessor for StockSearchSectionDescriptor, (uint64_t)&unk_1DC41CD30);
  sub_1DC080808(&qword_1EDB2F300, (uint64_t (*)(uint64_t))type metadata accessor for StockSearchModel, (uint64_t)&unk_1DC42E184);
  sub_1DC406D0C();
  sub_1DC405548();
  v27(v7);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v7, v25);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
}

unint64_t sub_1DC22FAD4()
{
  unint64_t result;

  result = qword_1EDB42B10;
  if (!qword_1EDB42B10)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC41B9EC, &type metadata for StockSearchReplaceQuotesBlueprintModifier);
    atomic_store(result, (unint64_t *)&qword_1EDB42B10);
  }
  return result;
}

uint64_t sub_1DC22FB18(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(void);
  uint64_t (*v15)(void);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  void (*v22)(_BYTE *, _QWORD);
  unint64_t v23;
  unint64_t v24;
  _QWORD v25[4];
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE v29[32];
  uint64_t v30;

  v5 = v4;
  v25[3] = a3;
  v26 = a4;
  v25[2] = a2;
  sub_1DC0D95F0(0);
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v27 = (uint64_t)v25 - v13;
  v14 = MEMORY[0x1E0DB7B60];
  sub_1DC187FFC(0, (unint64_t *)&qword_1EDB41DF0, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60]);
  v15 = v14;
  v17 = v16;
  v28 = sub_1DC1C61D4(&qword_1F034C448, (unint64_t *)&qword_1EDB41DF0, (uint64_t (*)(uint64_t, _QWORD *))v15, MEMORY[0x1E0DB7B98]);
  v18 = sub_1DC408EC0();
  v19 = MEMORY[0x1E0DEE9D8];
  if (!v18)
    return v19;
  v20 = v18;
  v30 = MEMORY[0x1E0DEE9D8];
  sub_1DC2AD540(0, v18 & ~(v18 >> 63), 0);
  result = sub_1DC408E90();
  if ((v20 & 0x8000000000000000) == 0)
  {
    v25[0] = v17;
    v25[1] = a1;
    while (1)
    {
      v22 = (void (*)(_BYTE *, _QWORD))sub_1DC408EF0();
      (*(void (**)(char *))(v9 + 16))(v11);
      v22(v29, 0);
      sub_1DC22E6A0(v11, v26, v27);
      if (v5)
        break;
      v5 = 0;
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      v19 = v30;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1DC2AD540(0, *(_QWORD *)(v19 + 16) + 1, 1);
        v19 = v30;
      }
      v24 = *(_QWORD *)(v19 + 16);
      v23 = *(_QWORD *)(v19 + 24);
      if (v24 >= v23 >> 1)
      {
        sub_1DC2AD540(v23 > 1, v24 + 1, 1);
        v19 = v30;
      }
      *(_QWORD *)(v19 + 16) = v24 + 1;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v9 + 32))(v19+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(_QWORD *)(v9 + 72) * v24, v27, v8);
      v30 = v19;
      sub_1DC408EE4();
      if (!--v20)
        return v19;
    }
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    swift_release();
    return v19;
  }
  __break(1u);
  return result;
}

uint64_t sub_1DC22FDA0(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(void);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  void (*v23)(char *, _QWORD);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  _QWORD v38[3];
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  char *v49;
  char v50[32];
  uint64_t v51;

  v5 = v4;
  v46 = a3;
  v47 = a4;
  v45 = a2;
  sub_1DC1880C8();
  MEMORY[0x1E0C80A78](v7);
  v44 = (char *)v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = type metadata accessor for StockSearchSectionDescriptor();
  MEMORY[0x1E0C80A78](v43);
  v42 = (char *)v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC187FFC(0, (unint64_t *)&qword_1EDB41DF0, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60]);
  v48 = v10;
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v41 = (char *)v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v49 = (char *)v38 - v14;
  v15 = MEMORY[0x1E0DBC790];
  sub_1DC187FFC(0, (unint64_t *)&qword_1EDB2AB88, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790]);
  v17 = v16;
  v18 = sub_1DC1C61D4(&qword_1EDB41E20, (unint64_t *)&qword_1EDB2AB88, (uint64_t (*)(uint64_t, _QWORD *))v15, MEMORY[0x1E0DBC7C8]);
  v19 = sub_1DC408EC0();
  v20 = MEMORY[0x1E0DEE9D8];
  if (!v19)
    return v20;
  v21 = v19;
  v51 = MEMORY[0x1E0DEE9D8];
  sub_1DC2AD66C(0, v19 & ~(v19 >> 63), 0);
  result = sub_1DC408E90();
  if ((v21 & 0x8000000000000000) == 0)
  {
    v39 = v11;
    v40 = a1;
    v38[1] = v18;
    v38[2] = v17;
    do
    {
      v23 = (void (*)(char *, _QWORD))sub_1DC408EF0();
      v24 = (uint64_t)v41;
      v25 = v48;
      (*(void (**)(char *))(v11 + 16))(v41);
      v23(v50, 0);
      v26 = v25;
      sub_1DC4046FC();
      v27 = v46;
      swift_bridgeObjectRetain();
      v28 = v47;
      swift_bridgeObjectRetain();
      v29 = sub_1DC22FB18(v24, v45, v27, v28);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1DC0D95F0(0);
      v31 = v30;
      v32 = sub_1DC080808(&qword_1EDB429D0, (uint64_t (*)(uint64_t))sub_1DC0D95F0, MEMORY[0x1E0DB6F08]);
      v33 = sub_1DC080808(&qword_1EDB42B00, (uint64_t (*)(uint64_t))sub_1DC0D95F0, MEMORY[0x1E0DB6EF8]);
      MEMORY[0x1DF0C311C](v29, v31, v32, v33);
      type metadata accessor for StockSearchModel();
      sub_1DC080808(&qword_1EDB389D0, (uint64_t (*)(uint64_t))type metadata accessor for StockSearchSectionDescriptor, (uint64_t)&unk_1DC41CD30);
      sub_1DC080808(&qword_1EDB2F300, (uint64_t (*)(uint64_t))type metadata accessor for StockSearchModel, (uint64_t)&unk_1DC42E184);
      v34 = v26;
      v11 = v39;
      sub_1DC4046F0();
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v24, v34);
      v20 = v51;
      v35 = v5;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1DC2AD66C(0, *(_QWORD *)(v20 + 16) + 1, 1);
        v20 = v51;
      }
      v37 = *(_QWORD *)(v20 + 16);
      v36 = *(_QWORD *)(v20 + 24);
      if (v37 >= v36 >> 1)
      {
        sub_1DC2AD66C(v36 > 1, v37 + 1, 1);
        v20 = v51;
      }
      *(_QWORD *)(v20 + 16) = v37 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v20+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ *(_QWORD *)(v11 + 72) * v37, v49, v48);
      v51 = v20;
      sub_1DC408EE4();
      --v21;
      v5 = v35;
    }
    while (v21);
    return v20;
  }
  __break(1u);
  return result;
}

__n128 __swift_memcpy113_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  result = (__n128)a2[4];
  v6 = a2[5];
  v7 = a2[6];
  *(_BYTE *)(a1 + 112) = *((_BYTE *)a2 + 112);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

uint64_t getEnumTagSinglePayload for EmptyListViewLayoutAttributes(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 113))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 112);
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for EmptyListViewLayoutAttributes(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 112) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 113) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 113) = 0;
    if (a2)
      *(_BYTE *)(result + 112) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for EmptyListViewLayoutAttributes()
{
  return &type metadata for EmptyListViewLayoutAttributes;
}

uint64_t sub_1DC2302B8()
{
  sub_1DC230328();
  return sub_1DC40625C();
}

unint64_t sub_1DC2302E4()
{
  unint64_t result;

  result = qword_1F034F6C8;
  if (!qword_1F034F6C8)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC41BA90, &type metadata for EmptyListViewLayoutAttributes);
    atomic_store(result, (unint64_t *)&qword_1F034F6C8);
  }
  return result;
}

unint64_t sub_1DC230328()
{
  unint64_t result;

  result = qword_1F034F6D0;
  if (!qword_1F034F6D0)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC41BAC8, &type metadata for EmptyListViewLayoutAttributes);
    atomic_store(result, (unint64_t *)&qword_1F034F6D0);
  }
  return result;
}

uint64_t sub_1DC23036C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE v20[16];
  _OWORD v21[2];
  uint64_t v22;
  _OWORD v23[2];
  uint64_t v24;

  sub_1DC1EA918(0);
  MEMORY[0x1E0C80A78](v5);
  v7 = &v20[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = type metadata accessor for StocksActivity(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = &v20[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = type metadata accessor for StocksActivity.StockFeed.Series(0);
  MEMORY[0x1E0C80A78](v11);
  v13 = &v20[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = sub_1DC4010E4();
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v13, a1, v14);
  *(_QWORD *)&v13[*(int *)(v11 + 20)] = a2;
  sub_1DC2308A4();
  v16 = *(int *)(v15 + 48);
  sub_1DC23090C((uint64_t)v13, (uint64_t)v10);
  *(_QWORD *)&v10[v16] = 0;
  type metadata accessor for StocksActivity.StockFeed(0);
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  v17 = *(_QWORD *)(v2 + 72);
  v18 = sub_1DC403340();
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v7, 1, 1, v18);
  v24 = 0;
  memset(v23, 0, sizeof(v23));
  v22 = 0;
  memset(v21, 0, sizeof(v21));
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1DC22BAE0((uint64_t)v10, v17, (uint64_t)v7, (uint64_t)v23, 0, 0, (uint64_t)v21);
  swift_release();
  sub_1DC17C7C8((uint64_t)v21, &qword_1EDB29410, (unint64_t *)&unk_1EDB29400);
  sub_1DC17C7C8((uint64_t)v23, &qword_1EDB2ACD0, (unint64_t *)&qword_1EDB2ACC0);
  sub_1DC0926D8((uint64_t)v7, (uint64_t (*)(_QWORD))sub_1DC1EA918);
  sub_1DC0926D8((uint64_t)v10, type metadata accessor for StocksActivity);
  swift_release();
  return sub_1DC0926D8((uint64_t)v13, type metadata accessor for StocksActivity.StockFeed.Series);
}

uint64_t sub_1DC2305C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v19[16];
  _BYTE v20[40];
  _QWORD v21[5];
  _OWORD v22[2];
  uint64_t v23;

  v5 = type metadata accessor for StocksActivity(0);
  MEMORY[0x1E0C80A78](v5);
  v7 = &v19[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = type metadata accessor for StocksActivity.StockFeed.Series(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = &v19[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = sub_1DC4010E4();
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v10, a1, v11);
  *(_QWORD *)&v10[*(int *)(v8 + 20)] = a2;
  v12 = *(_QWORD *)(v2 + 64);
  sub_1DC2308A4();
  v14 = *(int *)(v13 + 48);
  sub_1DC23090C((uint64_t)v10, (uint64_t)v7);
  *(_QWORD *)&v7[v14] = 0;
  type metadata accessor for StocksActivity.StockFeed(0);
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  v15 = *(_QWORD *)(v2 + 72);
  v23 = 0;
  memset(v22, 0, sizeof(v22));
  v21[4] = v12;
  v21[3] = sub_1DC4018AC();
  v21[0] = v15;
  sub_1DC194128((uint64_t)v22, (uint64_t)v20);
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = v15;
  sub_1DC1941B8((uint64_t)v20, v16 + 24);
  sub_1DC083C10();
  sub_1DC080808((unint64_t *)&qword_1EDB29CA0, (uint64_t (*)(uint64_t))sub_1DC083C10, MEMORY[0x1E0DB75C0]);
  swift_retain_n();
  swift_bridgeObjectRetain();
  swift_retain();
  v17 = sub_1DC406E08();
  swift_release();
  sub_1DC0926D8((uint64_t)v21, (uint64_t (*)(_QWORD))sub_1DC0D11C4);
  sub_1DC17C7C8((uint64_t)v22, &qword_1EDB2ACD0, (unint64_t *)&qword_1EDB2ACC0);
  sub_1DC0926D8((uint64_t)v7, type metadata accessor for StocksActivity);
  swift_release();
  sub_1DC0926D8((uint64_t)v10, type metadata accessor for StocksActivity.StockFeed.Series);
  return v17;
}

uint64_t sub_1DC230828()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1DC230864(uint64_t a1, uint64_t a2)
{
  return sub_1DC23036C(a1, a2);
}

uint64_t sub_1DC230884(uint64_t a1, uint64_t a2)
{
  return sub_1DC2305C0(a1, a2);
}

void sub_1DC2308A4()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EDB275E0)
  {
    type metadata accessor for StocksActivity.StockFeed.Series(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EDB275E0);
  }
}

uint64_t sub_1DC23090C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for StocksActivity.StockFeed.Series(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC230950()
{
  uint64_t v0;

  swift_release();
  if (*(_QWORD *)(v0 + 48))
    __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  return swift_deallocObject();
}

uint64_t sub_1DC230A5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(char *))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  v5 = sub_1DC3FFDD0();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC3FFD94();
  LOBYTE(a4) = a4(v8);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return a4 & 1;
}

uint64_t type metadata accessor for LinkActionURLQualifier()
{
  return objc_opt_self();
}

uint64_t sub_1DC230B50(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  char v17;
  uint64_t v18;
  void *v19;
  unsigned int v20;
  uint64_t v22;

  v2 = sub_1DC3FFDD0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1DC3FFDB8();
  if (!v7)
    goto LABEL_11;
  v8 = v7;
  if (v6 == sub_1DC3FFD64() && v8 == v9)
    v10 = 1;
  else
    v10 = sub_1DC4099E8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v11 = sub_1DC3FFDAC();
  v13 = v12;
  v14 = sub_1DC3FFD58();
  if (!v13)
  {
    swift_bridgeObjectRelease();
    if ((v10 & 1) != 0)
      goto LABEL_13;
LABEL_11:
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
LABEL_15:
    v19 = (void *)sub_1DC3FFD88();
    v20 = objc_msgSend(v19, sel_fc_isNewsArticleURL);

    v18 = v20 ^ 1;
    goto LABEL_16;
  }
  if (v11 == v14 && v13 == v15)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  v16 = sub_1DC4099E8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (((v10 | v16) & 1) == 0)
    goto LABEL_11;
LABEL_13:
  v17 = sub_1DC3FFD70();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  if ((v17 & 1) == 0)
    goto LABEL_15;
  v18 = 0;
LABEL_16:
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v18;
}

id sub_1DC230D10(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  char v17;
  void *v18;
  unsigned int v19;
  id v20;
  id v21;
  uint64_t v23;

  v2 = sub_1DC3FFDD0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1DC3FFDB8();
  if (!v7)
    goto LABEL_11;
  v8 = v7;
  if (v6 == sub_1DC3FFD64() && v8 == v9)
    v10 = 1;
  else
    v10 = sub_1DC4099E8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v11 = sub_1DC3FFDAC();
  v13 = v12;
  v14 = sub_1DC3FFD58();
  if (!v13)
  {
    swift_bridgeObjectRelease();
    if ((v10 & 1) != 0)
      goto LABEL_13;
LABEL_11:
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
    goto LABEL_15;
  }
  if (v11 == v14 && v13 == v15)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  v16 = sub_1DC4099E8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (((v10 | v16) & 1) == 0)
    goto LABEL_11;
LABEL_13:
  v17 = sub_1DC3FFD70();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  if ((v17 & 1) != 0)
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    goto LABEL_16;
  }
LABEL_15:
  v18 = (void *)sub_1DC3FFD88();
  v19 = objc_msgSend(v18, sel_fc_isNewsArticleURL);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if (!v19)
    return 0;
LABEL_16:
  v20 = objc_msgSend((id)objc_opt_self(), sel_sharedApplication);
  v21 = objc_msgSend(v20, sel_supportsMultipleScenes);

  return v21;
}

uint64_t sub_1DC230F1C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  _OWORD v21[4];
  uint64_t v22;
  _OWORD v23[4];
  uint64_t v24;

  sub_1DC0D019C(0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (uint64_t *)((char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = sub_1DC400010();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC2317C8(a1, (uint64_t)v21);
  if (*(_QWORD *)&v21[0])
  {
    v23[0] = v21[0];
    v23[1] = v21[1];
    v23[2] = v21[2];
    v23[3] = v21[3];
    v9 = *(_QWORD *)&v21[0];
    v24 = v22;
    if (*(_QWORD *)(*(_QWORD *)&v21[0] + 16))
    {
      swift_bridgeObjectRetain();
      sub_1DC400004();
      v10 = sub_1DC3FFFF8();
      v12 = v11;
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      *v4 = v10;
      v4[1] = v12;
      v4[2] = v9;
      type metadata accessor for ForYouFeedGroup();
      swift_storeEnumTagMultiPayload();
      swift_storeEnumTagMultiPayload();
      sub_1DC0CF4F0(0, (unint64_t *)&qword_1EDB29678, 255, (uint64_t (*)(uint64_t))sub_1DC0D019C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
      swift_allocObject();
      v13 = sub_1DC402D58();
    }
    else
    {
      v17 = sub_1DC4077D4();
      sub_1DC081B48(&qword_1EDB2AEB0, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5B740], MEMORY[0x1E0D5B748]);
      swift_allocError();
      (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v18, *MEMORY[0x1E0D5B6D0], v17);
      sub_1DC0CF4F0(0, (unint64_t *)&qword_1EDB29678, 255, (uint64_t (*)(uint64_t))sub_1DC0D019C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
      swift_allocObject();
      v13 = sub_1DC402D4C();
    }
    v16 = v13;
    sub_1DC231868((uint64_t)v23);
  }
  else
  {
    sub_1DC23181C((uint64_t)v21);
    v14 = sub_1DC4077D4();
    sub_1DC081B48(&qword_1EDB2AEB0, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5B740], MEMORY[0x1E0D5B748]);
    swift_allocError();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v15, *MEMORY[0x1E0D5B728], v14);
    sub_1DC0CF4F0(0, (unint64_t *)&qword_1EDB29678, 255, (uint64_t (*)(uint64_t))sub_1DC0D019C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    return sub_1DC402D4C();
  }
  return v16;
}

uint64_t sub_1DC231210(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  id v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;

  sub_1DC0D019C(0);
  v11 = v2;
  MEMORY[0x1E0C80A78](v2);
  v4 = (uint64_t *)((char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_1EDB2D2E8 != -1)
    swift_once();
  v5 = (id)qword_1EDB2D2E0;
  sub_1DC408FC8();
  sub_1DC0E7FF0();
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1DC40DC10;
  v12 = 0;
  v13 = 0xE000000000000000;
  v14 = a1;
  sub_1DC0A3390(0, (unint64_t *)&qword_1EDB400E0);
  sub_1DC409808();
  v8 = v12;
  v7 = v13;
  *(_QWORD *)(v6 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v6 + 64) = sub_1DC0E7FAC();
  *(_QWORD *)(v6 + 32) = v8;
  *(_QWORD *)(v6 + 40) = v7;
  sub_1DC403F28();

  swift_bridgeObjectRelease();
  v12 = 0;
  v13 = 0xE000000000000000;
  sub_1DC409730();
  sub_1DC408B48();
  v14 = a1;
  sub_1DC409808();
  v9 = v13;
  *v4 = v12;
  v4[1] = v9;
  swift_storeEnumTagMultiPayload();
  sub_1DC0CF4F0(0, (unint64_t *)&qword_1EDB29678, 255, (uint64_t (*)(uint64_t))sub_1DC0D019C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  return sub_1DC402D58();
}

uint64_t sub_1DC23143C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for LegacyTopStoriesForYouFeedGroupEmitter()
{
  return objc_opt_self();
}

uint64_t sub_1DC23149C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

unint64_t sub_1DC2314CC@<X0>(_QWORD *a1@<X8>)
{
  unint64_t result;

  a1[3] = &type metadata for LegacyTopStoriesForYouFeedGroupKnobs;
  a1[4] = sub_1DC23189C();
  result = sub_1DC2318E0();
  a1[5] = result;
  return result;
}

uint64_t sub_1DC23150C()
{
  void *v0;
  void *v1;
  uint64_t v2;

  sub_1DC0D4B28(0, &qword_1EDB2D390);
  sub_1DC402E0C();
  v0 = (void *)sub_1DC402C80();
  sub_1DC0D019C(0);
  sub_1DC402D10();
  swift_release();

  v1 = (void *)sub_1DC402C80();
  v2 = sub_1DC402D7C();
  swift_release();

  return v2;
}

uint64_t sub_1DC2315D8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1DC231608@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t inited;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = *v1;
  sub_1DC0CF4F0(0, &qword_1EDB40070, 255, (uint64_t (*)(uint64_t))sub_1DC0CFB4C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DC40DC10;
  *(_QWORD *)(inited + 32) = 0x696669746E656469;
  *(_QWORD *)(inited + 40) = 0xEA00000000007265;
  v6 = *(_QWORD *)(v3 + 24);
  v5 = *(_QWORD *)(v3 + 32);
  *(_QWORD *)(inited + 72) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(inited + 48) = v6;
  *(_QWORD *)(inited + 56) = v5;
  swift_bridgeObjectRetain();
  sub_1DC0CF9B8(inited);
  sub_1DC0CF4F0(0, &qword_1EDB41DC0, v7, (uint64_t (*)(uint64_t))type metadata accessor for LegacyTopStoriesForYouFeedGroupEmitter, MEMORY[0x1E0DB3C70]);
  a1[3] = v8;
  a1[4] = sub_1DC231924(v8, v9, v10);
  __swift_allocate_boxed_opaque_existential_1(a1);
  return sub_1DC402878();
}

uint64_t sub_1DC231704(uint64_t a1, uint64_t a2)
{
  sub_1DC081B48(&qword_1EDB42058, a2, (uint64_t (*)(uint64_t))type metadata accessor for LegacyTopStoriesForYouFeedGroupEmitter, (uint64_t)&unk_1DC41BC20);
  return sub_1DC40286C();
}

uint64_t sub_1DC231744(uint64_t a1, uint64_t a2)
{
  return sub_1DC081B48(&qword_1EDB42060, a2, (uint64_t (*)(uint64_t))type metadata accessor for LegacyTopStoriesForYouFeedGroupEmitter, (uint64_t)&unk_1DC41BBF8);
}

uint64_t sub_1DC231770(uint64_t a1, uint64_t a2)
{
  return sub_1DC081B48(&qword_1EDB42050, a2, (uint64_t (*)(uint64_t))type metadata accessor for LegacyTopStoriesForYouFeedGroupEmitter, (uint64_t)&unk_1DC41BC50);
}

uint64_t sub_1DC23179C(uint64_t a1, uint64_t a2)
{
  return sub_1DC081B48(&qword_1EDB42058, a2, (uint64_t (*)(uint64_t))type metadata accessor for LegacyTopStoriesForYouFeedGroupEmitter, (uint64_t)&unk_1DC41BC20);
}

uint64_t sub_1DC2317C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1DC0D4B28(0, &qword_1EDB2D390);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC23181C(uint64_t a1)
{
  uint64_t v2;

  sub_1DC0D4B28(0, &qword_1EDB2D390);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DC231868(uint64_t a1)
{
  destroy for ForYouFeedPool(a1);
  return a1;
}

unint64_t sub_1DC23189C()
{
  unint64_t result;

  result = qword_1EDB3D330;
  if (!qword_1EDB3D330)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC419AE0, &type metadata for LegacyTopStoriesForYouFeedGroupKnobs);
    atomic_store(result, (unint64_t *)&qword_1EDB3D330);
  }
  return result;
}

unint64_t sub_1DC2318E0()
{
  unint64_t result;

  result = qword_1F034F6D8;
  if (!qword_1F034F6D8)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC419AB8, &type metadata for LegacyTopStoriesForYouFeedGroupKnobs);
    atomic_store(result, (unint64_t *)&qword_1F034F6D8);
  }
  return result;
}

unint64_t sub_1DC231924(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t result;
  uint64_t v4;

  result = qword_1EDB41DB8;
  if (!qword_1EDB41DB8)
  {
    sub_1DC0CF4F0(255, &qword_1EDB41DC0, a3, (uint64_t (*)(uint64_t))type metadata accessor for LegacyTopStoriesForYouFeedGroupEmitter, MEMORY[0x1E0DB3C70]);
    result = MEMORY[0x1DF0CAB8C](MEMORY[0x1E0DB3C80], v4);
    atomic_store(result, (unint64_t *)&qword_1EDB41DB8);
  }
  return result;
}

uint64_t sub_1DC231984(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t result;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  _QWORD v14[5];

  v3 = type metadata accessor for StockListSelectionModel();
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(v1 + 10, v1[13]);
  result = sub_1DC400C1C();
  if ((result & 1) == 0)
  {
    v7 = (void *)v1[7];
    if ((objc_msgSend(v7, sel_isCollapsed) & 1) != 0)
    {
LABEL_8:
      sub_1DC231BCC(a1);
      v11 = sub_1DC4010E4();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v5, 1, 2, v11);
      sub_1DC080808((unint64_t *)&qword_1EDB351C0, (uint64_t (*)(uint64_t))type metadata accessor for StockListSelectionModel, (uint64_t)&unk_1DC4157E8);
      sub_1DC402764();
      return sub_1DC0926D8((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for StockListSelectionModel);
    }
    __swift_project_boxed_opaque_existential_1(v1 + 2, v1[5]);
    sub_1DC0A3390(0, (unint64_t *)&unk_1EDB31840);
    result = sub_1DC402608();
    if (v13)
    {
      sub_1DC097DD0(&v12, (uint64_t)v14);
      __swift_project_boxed_opaque_existential_1(v14, v14[3]);
      sub_1DC126DB4(&v12);
      v8 = (void *)v12;
      v9 = objc_msgSend((id)v12, sel_parentViewController);

      if (!v9)
      {
LABEL_7:
        objc_msgSend(v7, sel_showViewController_sender_, v8, 0);

        __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
        goto LABEL_8;
      }
      objc_msgSend(v8, sel_willMoveToParentViewController_, 0);
      result = (uint64_t)objc_msgSend(v8, sel_view);
      if (result)
      {
        v10 = (void *)result;
        objc_msgSend((id)result, sel_removeFromSuperview);

        objc_msgSend(v8, sel_removeFromParentViewController);
        objc_msgSend(v8, sel_didMoveToParentViewController_, 0);
        goto LABEL_7;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
  return result;
}

void sub_1DC231BCC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;

  v2 = v1;
  v4 = sub_1DC4059F8();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x1E0C80A78](v4);
  v7 = *(_QWORD *)(v1 + 64);
  v8 = sub_1DC405674();
  if (v8)
  {
    v9 = (void *)v8;
    sub_1DC0B5AE4(0);
    if (swift_dynamicCastClass()
      || (sub_1DC23249C(0), swift_dynamicCastClass())
      || (type metadata accessor for ForYouFeedViewController(), sub_1DC409100(), v14, v14))
    {
      v10 = qword_1EDB397F8;
      *(_BYTE *)(v7 + qword_1EDB397F8) = 1;
      sub_1DC40565C();

      *(_BYTE *)(v7 + v10) = 0;
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
      v11 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
      v12 = swift_allocObject();
      *(_QWORD *)(v12 + 16) = v2;
      (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v12 + v11, (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
      swift_retain();
      sub_1DC405650();
      swift_release();

    }
  }
}

uint64_t sub_1DC231D68(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  unint64_t v19;
  uint64_t v20;
  uint64_t v22;

  v4 = type metadata accessor for StocksActivity.StockFeed.Series(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for StocksActivity.StockFeed(0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1DC4010E4();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v22 - v15;
  sub_1DC231F64(a1, (uint64_t)v9);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1DC231FA8((uint64_t)v9, (uint64_t)v6);
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v16, v6, v10);
    v17 = *(_QWORD *)&v6[*(int *)(v4 + 20)];
  }
  else
  {
    v18 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
    v18(v13, v9, v10);
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v16, v13, v10);
    sub_1DC1044DC();
    v19 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
    v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_1DC40DC10;
    v18((char *)(v17 + v19), v13, v10);
  }
  v20 = sub_1DC231FEC((uint64_t)v16, v17, a2);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
  return v20;
}

uint64_t sub_1DC231F64(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for StocksActivity.StockFeed(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC231FA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for StocksActivity.StockFeed.Series(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC231FEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  _QWORD v17[5];

  v13 = a1;
  v14 = a2;
  sub_1DC143F58();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](v5);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 40));
  sub_1DC0A3390(0, &qword_1EDB366C0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a3, v6);
  v9 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v10 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v10 + v9, (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  sub_1DC4025F0();
  result = swift_release();
  if (v16)
  {
    sub_1DC097DD0(&v15, (uint64_t)v17);
    __swift_project_boxed_opaque_existential_1(v17, v17[3]);
    sub_1DC14FA9C(v13, v14, (uint64_t *)&v15);
    v12 = v15;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
    return v12;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC232158(_QWORD *a1)
{
  void (*v2)(_QWORD *);
  _BYTE v4[24];
  uint64_t v5;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC143F58();
  sub_1DC406844();
  if (v5)
  {
    sub_1DC4018AC();
    swift_dynamicCast();
  }
  else
  {
    sub_1DC0926D8((uint64_t)v4, (uint64_t (*)(_QWORD))sub_1DC0D11C4);
  }
  sub_1DC4018AC();
  sub_1DC4024DC();
  swift_release();
  v2 = (void (*)(_QWORD *))sub_1DC40682C();
  v2(a1);
  return swift_release();
}

uint64_t sub_1DC232264()
{
  uint64_t v0;
  uint64_t v1;

  sub_1DC143F58();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_1DC2322C4(_QWORD *a1)
{
  sub_1DC143F58();
  return sub_1DC232158(a1);
}

void sub_1DC232300(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;

  v5 = sub_1DC4059F8();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x1E0C80A78](v5);
  v8 = *(_QWORD *)(a2 + 64);
  v9 = sub_1DC405674();
  if (v9)
  {
    v10 = (void *)v9;
    sub_1DC0B5AE4(0);
    if (swift_dynamicCastClass()
      || (sub_1DC23249C(0), swift_dynamicCastClass())
      || (type metadata accessor for ForYouFeedViewController(), sub_1DC409100(), v15, v15))
    {
      v11 = qword_1EDB397F8;
      *(_BYTE *)(v8 + qword_1EDB397F8) = 1;
      sub_1DC40565C();

      *(_BYTE *)(v8 + v11) = 0;
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a3, v5);
      v12 = (*(unsigned __int8 *)(v6 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
      v13 = swift_allocObject();
      *(_QWORD *)(v13 + 16) = a2;
      (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v13 + v12, (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
      swift_retain();
      sub_1DC405650();
      swift_release();

    }
  }
}

void sub_1DC23249C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1EDB3B6A8)
  {
    sub_1DC130E1C();
    v3 = v2;
    v4 = sub_1DC2324FC();
    v6 = type metadata accessor for ForYouFeedContainerViewController(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1EDB3B6A8);
  }
}

unint64_t sub_1DC2324FC()
{
  unint64_t result;
  uint64_t v1;
  _UNKNOWN **v2;

  result = qword_1EDB2A1C0;
  if (!qword_1EDB2A1C0)
  {
    sub_1DC130E1C();
    v2 = &off_1EA467FC8;
    result = MEMORY[0x1DF0CAB8C](&unk_1DC41F028, v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EDB2A1C0);
  }
  return result;
}

uint64_t objectdestroy_2Tm_1()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1DC4059F8();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

void sub_1DC2325D4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(sub_1DC4059F8() - 8) + 80);
  sub_1DC232300(a1, *(_QWORD *)(v1 + 16), v1 + ((v3 + 24) & ~v3));
}

uint64_t sub_1DC232614@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  char *v18;
  char v19;
  unsigned int *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v24[2];

  v24[1] = a2;
  v7 = sub_1DC403BD4();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC232864();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1DC403EB0();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x1E0C80A78](v14);
  v18 = (char *)v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    swift_getObjectType();
    v24[0] = a3;
    (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E0D61768], v7);
    a3 = v24[0];
    sub_1DC403CB8();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v18, v13, v14);
      v19 = sub_1DC403E8C();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
      if ((v19 & 1) != 0)
      {
LABEL_9:
        v20 = (unsigned int *)MEMORY[0x1E0DACFD8];
        goto LABEL_13;
      }
      goto LABEL_4;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v15 + 56))(v13, 1, 1, v14, v16);
  }
  sub_1DC2328B8((uint64_t)v13);
  if (a3 > 4)
  {
LABEL_8:
    v20 = (unsigned int *)MEMORY[0x1E0DACFF0];
    goto LABEL_13;
  }
LABEL_4:
  switch(a3)
  {
    case 0uLL:
      v20 = (unsigned int *)MEMORY[0x1E0DACFF8];
      break;
    case 1uLL:
      v20 = (unsigned int *)MEMORY[0x1E0DACFE0];
      break;
    case 2uLL:
      v20 = (unsigned int *)MEMORY[0x1E0DACFE8];
      break;
    case 3uLL:
      goto LABEL_9;
    case 4uLL:
      v20 = (unsigned int *)MEMORY[0x1E0DAD000];
      break;
    default:
      goto LABEL_8;
  }
LABEL_13:
  v21 = *v20;
  v22 = sub_1DC4030F4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(a4, v21, v22);
}

void sub_1DC232864()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB29AA0)
  {
    sub_1DC403EB0();
    v0 = sub_1DC4095A4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB29AA0);
  }
}

uint64_t sub_1DC2328B8(uint64_t a1)
{
  uint64_t v2;

  sub_1DC232864();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1DC2328F8()
{
  unint64_t result;

  result = qword_1F034F6E0;
  if (!qword_1F034F6E0)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC41BDAC, &type metadata for DecreaseTextSizeIntent);
    atomic_store(result, (unint64_t *)&qword_1F034F6E0);
  }
  return result;
}

unint64_t sub_1DC232940()
{
  unint64_t result;

  result = qword_1F034F6E8;
  if (!qword_1F034F6E8)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC41BDD4, &type metadata for DecreaseTextSizeIntent);
    atomic_store(result, (unint64_t *)&qword_1F034F6E8);
  }
  return result;
}

uint64_t sub_1DC232984()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1DC232994()
{
  sub_1DC2329D4();
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1DC2329D4()
{
  unint64_t result;

  result = qword_1F034F6F0;
  if (!qword_1F034F6F0)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC41BD1C, &type metadata for DecreaseTextSizeIntent);
    atomic_store(result, (unint64_t *)&qword_1F034F6F0);
  }
  return result;
}

uint64_t sub_1DC232A18()
{
  return sub_1DC3FFCF8();
}

uint64_t sub_1DC232A34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v0 = sub_1DC3FFD04();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1DC400118();
  MEMORY[0x1E0C80A78](v4);
  v5 = sub_1DC408A10();
  MEMORY[0x1E0C80A78](v5);
  v6 = sub_1DC3FFD10();
  __swift_allocate_value_buffer(v6, qword_1F0368A38);
  __swift_project_value_buffer(v6, (uint64_t)qword_1F0368A38);
  sub_1DC408A04();
  sub_1DC4000DC();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0CAF9B8], v0);
  return sub_1DC3FFD1C();
}

uint64_t sub_1DC232BA8()
{
  char v0;

  sub_1DC406928();
  sub_1DC3FF92C();
  swift_getObjectType();
  v0 = sub_1DC404AB0();
  swift_unknownObjectRelease();
  if ((v0 & 1) != 0)
  {
    sub_1DC3FF92C();
    swift_getObjectType();
    sub_1DC404AE0();
    swift_release();
    return swift_unknownObjectRelease();
  }
  else
  {
    sub_1DC2330CC();
    swift_allocError();
    swift_willThrow();
    return swift_release();
  }
}

uint64_t sub_1DC232C9C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1F034AFD0 != -1)
    swift_once();
  v2 = sub_1DC3FFD10();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1F0368A38);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_1DC232D18(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *v1;
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v3;
  return swift_task_switch();
}

uint64_t sub_1DC232D34()
{
  uint64_t v0;

  sub_1DC408DA0();
  *(_QWORD *)(v0 + 32) = sub_1DC408D94();
  sub_1DC408D88();
  return swift_task_switch();
}

uint64_t sub_1DC232D9C()
{
  swift_release();
  sub_1DC232BA8();
  return swift_task_switch();
}

uint64_t sub_1DC232E0C()
{
  uint64_t v0;

  sub_1DC3FF9E0();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DC232E40@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  sub_1DC233028();
  sub_1DC3FF980();
  sub_1DC3FF974();
  result = sub_1DC3FF938();
  *a1 = result;
  return result;
}

uint64_t sub_1DC232EA8()
{
  sub_1DC2329D4();
  return sub_1DC3FF9D4();
}

ValueMetadata *type metadata accessor for DecreaseTextSizeIntent()
{
  return &type metadata for DecreaseTextSizeIntent;
}

unint64_t sub_1DC232EE4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1F034F700;
  if (!qword_1F034F700)
  {
    sub_1DC232F2C();
    result = MEMORY[0x1DF0CAB8C](MEMORY[0x1E0C91590], v1);
    atomic_store(result, (unint64_t *)&qword_1F034F700);
  }
  return result;
}

void sub_1DC232F2C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F034F708)
  {
    sub_1DC232FA0();
    sub_1DC232FE4();
    v0 = sub_1DC3FF9EC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1F034F708);
  }
}

unint64_t sub_1DC232FA0()
{
  unint64_t result;

  result = qword_1F034F710;
  if (!qword_1F034F710)
  {
    result = MEMORY[0x1DF0CAB8C](MEMORY[0x1E0C91D70], MEMORY[0x1E0DEDCE8]);
    atomic_store(result, (unint64_t *)&qword_1F034F710);
  }
  return result;
}

unint64_t sub_1DC232FE4()
{
  unint64_t result;

  result = qword_1F034F718;
  if (!qword_1F034F718)
  {
    result = MEMORY[0x1DF0CAB8C](MEMORY[0x1E0C91D60], MEMORY[0x1E0DEDCE8]);
    atomic_store(result, (unint64_t *)&qword_1F034F718);
  }
  return result;
}

void sub_1DC233028()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F034F720)
  {
    sub_1DC23307C();
    v0 = sub_1DC3FF944();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1F034F720);
  }
}

unint64_t sub_1DC23307C()
{
  unint64_t result;

  result = qword_1EDB29EE0;
  if (!qword_1EDB29EE0)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EDB29EE0);
  }
  return result;
}

unint64_t sub_1DC2330CC()
{
  unint64_t result;

  result = qword_1F034F728;
  if (!qword_1F034F728)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC41BEA0, &type metadata for DecreaseTextSizeIntent.Error);
    atomic_store(result, (unint64_t *)&qword_1F034F728);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for DecreaseTextSizeIntent.Error(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1DC233150 + 4 * byte_1DC41BD10[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1DC233170 + 4 * byte_1DC41BD15[v4]))();
}

_BYTE *sub_1DC233150(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1DC233170(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC233178(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC233180(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC233188(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC233190(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for DecreaseTextSizeIntent.Error()
{
  return &type metadata for DecreaseTextSizeIntent.Error;
}

unint64_t sub_1DC2331B0()
{
  unint64_t result;

  result = qword_1F034F730;
  if (!qword_1F034F730)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC41BE78, &type metadata for DecreaseTextSizeIntent.Error);
    atomic_store(result, (unint64_t *)&qword_1F034F730);
  }
  return result;
}

_QWORD *sub_1DC2331F4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  int *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(char *, char *, uint64_t);
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  _QWORD *v57;
  uint64_t v58;
  char *v60;
  char *v61;
  int *v62;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v16 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v16 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v17 = a2[1];
      *a1 = *a2;
      a1[1] = v17;
      v18 = a2[2];
      v19 = a2[3];
      a1[2] = v18;
      a1[3] = v19;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_14:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    if (!EnumCaseMultiPayload)
    {
      v8 = sub_1DC4010E4();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      v9 = (int *)type metadata accessor for StockViewModel();
      v10 = v9[5];
      v11 = (char *)a1 + v10;
      v12 = (char *)a2 + v10;
      v13 = sub_1DC401030();
      v14 = *(_QWORD *)(v13 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
      {
        sub_1DC0FED34(0);
        memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      }
      v20 = v9[6];
      v21 = (char *)a1 + v20;
      v22 = (char *)a2 + v20;
      v23 = (int *)type metadata accessor for StockSparklineViewModel(0);
      v24 = *((_QWORD *)v23 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v24 + 48))(v22, 1, v23))
      {
        sub_1DC089DA4(0, &qword_1EDB353E0, type metadata accessor for StockSparklineViewModel, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
      }
      else
      {
        v26 = sub_1DC408614();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v21, v22, v26);
        v27 = v23[5];
        v28 = &v21[v27];
        v29 = &v22[v27];
        *(_QWORD *)v28 = *(_QWORD *)v29;
        v28[8] = v29[8];
        v30 = v23[6];
        v31 = &v21[v30];
        v32 = &v22[v30];
        *(_QWORD *)v31 = *(_QWORD *)v32;
        v31[8] = v32[8];
        v21[v23[7]] = v22[v23[7]];
        v33 = v23[8];
        v34 = &v21[v33];
        v35 = &v22[v33];
        v36 = sub_1DC400F7C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 16))(v34, v35, v36);
        (*(void (**)(char *, _QWORD, uint64_t, int *))(v24 + 56))(v21, 0, 1, v23);
      }
      v37 = v9[7];
      v62 = v9;
      v38 = (char *)a1 + v37;
      v39 = (char *)a2 + v37;
      *(_QWORD *)v38 = *(_QWORD *)((char *)a2 + v37);
      v38[8] = *((_BYTE *)a2 + v37 + 8);
      *((_QWORD *)v38 + 2) = *(_QWORD *)((char *)a2 + v37 + 16);
      v38[24] = *((_BYTE *)a2 + v37 + 24);
      *((_QWORD *)v38 + 4) = *(_QWORD *)((char *)a2 + v37 + 32);
      v38[40] = *((_BYTE *)a2 + v37 + 40);
      v40 = *(_QWORD *)((char *)a2 + v37 + 56);
      *((_QWORD *)v38 + 6) = *(_QWORD *)((char *)a2 + v37 + 48);
      *((_QWORD *)v38 + 7) = v40;
      v41 = *(_QWORD *)((char *)a2 + v37 + 72);
      *((_QWORD *)v38 + 8) = *(_QWORD *)((char *)a2 + v37 + 64);
      *((_QWORD *)v38 + 9) = v41;
      v38[80] = *((_BYTE *)a2 + v37 + 80);
      v42 = type metadata accessor for PriceViewModel();
      v43 = *(int *)(v42 + 40);
      v60 = &v39[v43];
      v61 = &v38[v43];
      v44 = sub_1DC4011C8();
      v45 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v45(v61, v60, v44);
      v46 = *(int *)(v42 + 44);
      v47 = &v38[v46];
      v48 = &v39[v46];
      v49 = sub_1DC400118();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 16))(v47, v48, v49);
      v50 = v62[8];
      v51 = (char *)a1 + v50;
      v52 = (char *)a2 + v50;
      v53 = sub_1DC4008EC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v53 - 8) + 16))(v51, v52, v53);
      *((_BYTE *)a1 + v62[9]) = *((_BYTE *)a2 + v62[9]);
      v54 = type metadata accessor for StockListStockModel(0);
      *((_BYTE *)a1 + *(int *)(v54 + 20)) = *((_BYTE *)a2 + *(int *)(v54 + 20));
      v55 = *(int *)(v54 + 24);
      v56 = (_QWORD *)((char *)a1 + v55);
      v57 = (_QWORD *)((char *)a2 + v55);
      v58 = v57[1];
      *v56 = *v57;
      v56[1] = v58;
      swift_bridgeObjectRetain();
      goto LABEL_14;
    }
    memcpy(a1, a2, *(_QWORD *)(v5 + 64));
  }
  return a1;
}

_QWORD *sub_1DC2335D0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  int *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  void (*v43)(char *, char *, uint64_t);
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  _QWORD *v55;
  char *v57;
  int *v58;

  if (a1 != a2)
  {
    sub_1DC0926D8((uint64_t)a1, type metadata accessor for StockListModel);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      a1[3] = a2[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_13:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    if (!EnumCaseMultiPayload)
    {
      v7 = sub_1DC4010E4();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = (int *)type metadata accessor for StockViewModel();
      v9 = v8[5];
      v10 = (char *)a1 + v9;
      v11 = (char *)a2 + v9;
      v12 = sub_1DC401030();
      v13 = *(_QWORD *)(v12 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
      {
        sub_1DC0FED34(0);
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      }
      v15 = v8[6];
      v16 = (char *)a1 + v15;
      v17 = (char *)a2 + v15;
      v18 = (int *)type metadata accessor for StockSparklineViewModel(0);
      v19 = *((_QWORD *)v18 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v19 + 48))(v17, 1, v18))
      {
        sub_1DC089DA4(0, &qword_1EDB353E0, type metadata accessor for StockSparklineViewModel, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
      }
      else
      {
        v21 = sub_1DC408614();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v16, v17, v21);
        v22 = v18[5];
        v23 = &v16[v22];
        v24 = &v17[v22];
        v25 = *(_QWORD *)v24;
        v23[8] = v24[8];
        *(_QWORD *)v23 = v25;
        v26 = v18[6];
        v27 = &v16[v26];
        v28 = &v17[v26];
        LOBYTE(v25) = v28[8];
        *(_QWORD *)v27 = *(_QWORD *)v28;
        v27[8] = v25;
        v16[v18[7]] = v17[v18[7]];
        v29 = v18[8];
        v30 = &v16[v29];
        v31 = &v17[v29];
        v32 = sub_1DC400F7C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v30, v31, v32);
        (*(void (**)(char *, _QWORD, uint64_t, int *))(v19 + 56))(v16, 0, 1, v18);
      }
      v33 = v8[7];
      v58 = v8;
      v34 = (char *)a1 + v33;
      v35 = (char *)a2 + v33;
      v36 = *(_QWORD *)((char *)a2 + v33);
      v34[8] = v35[8];
      *(_QWORD *)v34 = v36;
      v37 = *((_QWORD *)v35 + 2);
      v34[24] = v35[24];
      *((_QWORD *)v34 + 2) = v37;
      v38 = *((_QWORD *)v35 + 4);
      v34[40] = v35[40];
      *((_QWORD *)v34 + 4) = v38;
      *((_QWORD *)v34 + 6) = *((_QWORD *)v35 + 6);
      *((_QWORD *)v34 + 7) = *((_QWORD *)v35 + 7);
      *((_QWORD *)v34 + 8) = *((_QWORD *)v35 + 8);
      *((_QWORD *)v34 + 9) = *((_QWORD *)v35 + 9);
      v34[80] = v35[80];
      v39 = type metadata accessor for PriceViewModel();
      v40 = *(int *)(v39 + 40);
      v57 = &v34[v40];
      v41 = &v35[v40];
      v42 = sub_1DC4011C8();
      v43 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v42 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v43(v57, v41, v42);
      v44 = *(int *)(v39 + 44);
      v45 = &v34[v44];
      v46 = &v35[v44];
      v47 = sub_1DC400118();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(v45, v46, v47);
      v48 = v58[8];
      v49 = (char *)a1 + v48;
      v50 = (char *)a2 + v48;
      v51 = sub_1DC4008EC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 16))(v49, v50, v51);
      *((_BYTE *)a1 + v58[9]) = *((_BYTE *)a2 + v58[9]);
      v52 = type metadata accessor for StockListStockModel(0);
      *((_BYTE *)a1 + *(int *)(v52 + 20)) = *((_BYTE *)a2 + *(int *)(v52 + 20));
      v53 = *(int *)(v52 + 24);
      v54 = (_QWORD *)((char *)a1 + v53);
      v55 = (_QWORD *)((char *)a2 + v53);
      *v54 = *v55;
      v54[1] = v55[1];
      swift_bridgeObjectRetain();
      goto LABEL_13;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

char *sub_1DC2339CC(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  int *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;

  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v6 = sub_1DC4010E4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    v7 = (int *)type metadata accessor for StockViewModel();
    v8 = v7[5];
    v9 = &a1[v8];
    v10 = &a2[v8];
    v11 = sub_1DC401030();
    v12 = *(_QWORD *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    {
      sub_1DC0FED34(0);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    v14 = v7[6];
    v15 = &a1[v14];
    v16 = &a2[v14];
    v17 = (int *)type metadata accessor for StockSparklineViewModel(0);
    v18 = *((_QWORD *)v17 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v18 + 48))(v16, 1, v17))
    {
      sub_1DC089DA4(0, &qword_1EDB353E0, type metadata accessor for StockSparklineViewModel, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      v20 = sub_1DC408614();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v15, v16, v20);
      v21 = v17[5];
      v22 = &v15[v21];
      v23 = &v16[v21];
      *(_QWORD *)v22 = *(_QWORD *)v23;
      v22[8] = v23[8];
      v24 = v17[6];
      v25 = &v15[v24];
      v26 = &v16[v24];
      *(_QWORD *)v25 = *(_QWORD *)v26;
      v25[8] = v26[8];
      v15[v17[7]] = v16[v17[7]];
      v27 = v17[8];
      v28 = &v15[v27];
      v29 = &v16[v27];
      v30 = sub_1DC400F7C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v18 + 56))(v15, 0, 1, v17);
    }
    v31 = v7[7];
    v32 = &a1[v31];
    v33 = &a2[v31];
    *(_QWORD *)v32 = *(_QWORD *)&a2[v31];
    v32[8] = a2[v31 + 8];
    *((_QWORD *)v32 + 2) = *(_QWORD *)&a2[v31 + 16];
    v32[24] = a2[v31 + 24];
    *((_QWORD *)v32 + 4) = *(_QWORD *)&a2[v31 + 32];
    v32[40] = a2[v31 + 40];
    v34 = *(_OWORD *)&a2[v31 + 64];
    *((_OWORD *)v32 + 3) = *(_OWORD *)&a2[v31 + 48];
    *((_OWORD *)v32 + 4) = v34;
    v32[80] = a2[v31 + 80];
    v35 = type metadata accessor for PriceViewModel();
    v36 = *(int *)(v35 + 40);
    v37 = &v32[v36];
    v38 = &v33[v36];
    v39 = sub_1DC4011C8();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 32))(v37, v38, v39);
    v40 = *(int *)(v35 + 44);
    v41 = &v32[v40];
    v42 = &v33[v40];
    v43 = sub_1DC400118();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 32))(v41, v42, v43);
    v44 = v7[8];
    v45 = &a1[v44];
    v46 = &a2[v44];
    v47 = sub_1DC4008EC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 32))(v45, v46, v47);
    a1[v7[9]] = a2[v7[9]];
    v48 = type metadata accessor for StockListStockModel(0);
    a1[*(int *)(v48 + 20)] = a2[*(int *)(v48 + 20)];
    *(_OWORD *)&a1[*(int *)(v48 + 24)] = *(_OWORD *)&a2[*(int *)(v48 + 24)];
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_QWORD *sub_1DC233D14(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  int *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  void (*v42)(char *, char *, uint64_t);
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  _QWORD *v53;
  uint64_t v54;
  char *v56;
  int *v57;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    v15 = (_QWORD *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = sub_1DC4010E4();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    v7 = (int *)type metadata accessor for StockViewModel();
    v8 = v7[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1DC401030();
    v12 = *(_QWORD *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    {
      sub_1DC0FED34(0);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    v16 = v7[6];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    v19 = (int *)type metadata accessor for StockSparklineViewModel(0);
    v20 = *((_QWORD *)v19 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v20 + 48))(v18, 1, v19))
    {
      sub_1DC089DA4(0, &qword_1EDB353E0, type metadata accessor for StockSparklineViewModel, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      v22 = sub_1DC408614();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v17, v18, v22);
      v23 = v19[5];
      v24 = &v17[v23];
      v25 = &v18[v23];
      *(_QWORD *)v24 = *(_QWORD *)v25;
      v24[8] = v25[8];
      v26 = v19[6];
      v27 = &v17[v26];
      v28 = &v18[v26];
      *(_QWORD *)v27 = *(_QWORD *)v28;
      v27[8] = v28[8];
      v17[v19[7]] = v18[v19[7]];
      v29 = v19[8];
      v30 = &v17[v29];
      v31 = &v18[v29];
      v32 = sub_1DC400F7C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v30, v31, v32);
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v20 + 56))(v17, 0, 1, v19);
    }
    v33 = v7[7];
    v57 = v7;
    v34 = (char *)a1 + v33;
    v35 = (char *)a2 + v33;
    *(_QWORD *)v34 = *(_QWORD *)((char *)a2 + v33);
    v34[8] = *((_BYTE *)a2 + v33 + 8);
    *((_QWORD *)v34 + 2) = *(_QWORD *)((char *)a2 + v33 + 16);
    v34[24] = *((_BYTE *)a2 + v33 + 24);
    *((_QWORD *)v34 + 4) = *(_QWORD *)((char *)a2 + v33 + 32);
    v34[40] = *((_BYTE *)a2 + v33 + 40);
    v36 = *(_QWORD *)((char *)a2 + v33 + 56);
    *((_QWORD *)v34 + 6) = *(_QWORD *)((char *)a2 + v33 + 48);
    *((_QWORD *)v34 + 7) = v36;
    v37 = *(_QWORD *)((char *)a2 + v33 + 72);
    *((_QWORD *)v34 + 8) = *(_QWORD *)((char *)a2 + v33 + 64);
    *((_QWORD *)v34 + 9) = v37;
    v34[80] = *((_BYTE *)a2 + v33 + 80);
    v38 = type metadata accessor for PriceViewModel();
    v39 = *(int *)(v38 + 40);
    v56 = &v34[v39];
    v40 = &v35[v39];
    v41 = sub_1DC4011C8();
    v15 = a1;
    v42 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v42(v56, v40, v41);
    v43 = *(int *)(v38 + 44);
    v44 = &v34[v43];
    v45 = &v35[v43];
    v46 = sub_1DC400118();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 16))(v44, v45, v46);
    v47 = v57[8];
    v48 = (char *)v15 + v47;
    v49 = (char *)a2 + v47;
    v50 = sub_1DC4008EC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v50 - 8) + 16))(v48, v49, v50);
    *((_BYTE *)v15 + v57[9]) = *((_BYTE *)a2 + v57[9]);
    v51 = *(int *)(a3 + 24);
    *((_BYTE *)v15 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
    v52 = (_QWORD *)((char *)v15 + v51);
    v53 = (_QWORD *)((char *)a2 + v51);
    v54 = v53[1];
    *v52 = *v53;
    v52[1] = v54;
    swift_bridgeObjectRetain();
  }
  return v15;
}

uint64_t sub_1DC234088(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(void *, uint64_t, uint64_t);
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  _BYTE *v19;
  int *v20;
  uint64_t v21;
  uint64_t (*v22)(_BYTE *, uint64_t, int *);
  int v23;
  int v24;
  uint64_t (*v25)(uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  _QWORD *v72;

  v6 = sub_1DC4010E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = (int *)type metadata accessor for StockViewModel();
  v8 = v7[5];
  v9 = (void *)(a1 + v8);
  v10 = (void *)(a2 + v8);
  v11 = sub_1DC401030();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v15)
  {
    (*(void (**)(void *, uint64_t))(v12 + 8))(v9, v11);
LABEL_6:
    sub_1DC0FED34(0);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v12 + 24))(v9, v10, v11);
LABEL_7:
  v17 = v7[6];
  v18 = (_BYTE *)(a1 + v17);
  v19 = (_BYTE *)(a2 + v17);
  v20 = (int *)type metadata accessor for StockSparklineViewModel(0);
  v21 = *((_QWORD *)v20 - 1);
  v22 = *(uint64_t (**)(_BYTE *, uint64_t, int *))(v21 + 48);
  v23 = v22(v18, 1, v20);
  v24 = v22(v19, 1, v20);
  if (v23)
  {
    if (!v24)
    {
      v27 = sub_1DC408614();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v18, v19, v27);
      v28 = v20[5];
      v29 = &v18[v28];
      v30 = &v19[v28];
      v31 = *(_QWORD *)v30;
      v29[8] = v30[8];
      *(_QWORD *)v29 = v31;
      v32 = v20[6];
      v33 = &v18[v32];
      v34 = &v19[v32];
      LOBYTE(v31) = v34[8];
      *(_QWORD *)v33 = *(_QWORD *)v34;
      v33[8] = v31;
      v18[v20[7]] = v19[v20[7]];
      v35 = v20[8];
      v36 = &v18[v35];
      v37 = &v19[v35];
      v38 = sub_1DC400F7C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v36, v37, v38);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v21 + 56))(v18, 0, 1, v20);
      goto LABEL_16;
    }
    v25 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  }
  else
  {
    if (!v24)
    {
      v39 = sub_1DC408614();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v39 - 8) + 24))(v18, v19, v39);
      v40 = v20[5];
      v41 = &v18[v40];
      v42 = &v19[v40];
      v43 = *(_QWORD *)v42;
      v41[8] = v42[8];
      *(_QWORD *)v41 = v43;
      v44 = v20[6];
      v45 = &v18[v44];
      v46 = &v19[v44];
      LOBYTE(v43) = v46[8];
      *(_QWORD *)v45 = *(_QWORD *)v46;
      v45[8] = v43;
      v18[v20[7]] = v19[v20[7]];
      v47 = v20[8];
      v48 = &v18[v47];
      v49 = &v19[v47];
      v50 = sub_1DC400F7C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v50 - 8) + 24))(v48, v49, v50);
      goto LABEL_16;
    }
    sub_1DC0926D8((uint64_t)v18, type metadata accessor for StockSparklineViewModel);
    v25 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  }
  sub_1DC089DA4(0, &qword_1EDB353E0, type metadata accessor for StockSparklineViewModel, v25);
  memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
LABEL_16:
  v51 = v7[7];
  v52 = a1 + v51;
  v53 = a2 + v51;
  v54 = *(_QWORD *)(a2 + v51);
  *(_BYTE *)(v52 + 8) = *(_BYTE *)(v53 + 8);
  *(_QWORD *)v52 = v54;
  v55 = *(_QWORD *)(v53 + 16);
  *(_BYTE *)(v52 + 24) = *(_BYTE *)(v53 + 24);
  *(_QWORD *)(v52 + 16) = v55;
  v56 = *(_QWORD *)(v53 + 32);
  *(_BYTE *)(v52 + 40) = *(_BYTE *)(v53 + 40);
  *(_QWORD *)(v52 + 32) = v56;
  *(_QWORD *)(v52 + 48) = *(_QWORD *)(v53 + 48);
  *(_QWORD *)(v52 + 56) = *(_QWORD *)(v53 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v52 + 64) = *(_QWORD *)(v53 + 64);
  *(_QWORD *)(v52 + 72) = *(_QWORD *)(v53 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v52 + 80) = *(_BYTE *)(v53 + 80);
  v57 = type metadata accessor for PriceViewModel();
  v58 = *(int *)(v57 + 40);
  v59 = v52 + v58;
  v60 = v53 + v58;
  v61 = sub_1DC4011C8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 24))(v59, v60, v61);
  v62 = *(int *)(v57 + 44);
  v63 = v52 + v62;
  v64 = v53 + v62;
  v65 = sub_1DC400118();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v65 - 8) + 24))(v63, v64, v65);
  v66 = v7[8];
  v67 = a1 + v66;
  v68 = a2 + v66;
  v69 = sub_1DC4008EC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v69 - 8) + 24))(v67, v68, v69);
  *(_BYTE *)(a1 + v7[9]) = *(_BYTE *)(a2 + v7[9]);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  v70 = *(int *)(a3 + 24);
  v71 = (_QWORD *)(a1 + v70);
  v72 = (_QWORD *)(a2 + v70);
  *v71 = *v72;
  v71[1] = v72[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1DC23450C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  int *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v6 = sub_1DC4010E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = (int *)type metadata accessor for StockViewModel();
  v8 = v7[5];
  v9 = (void *)(a1 + v8);
  v10 = (const void *)(a2 + v8);
  v11 = sub_1DC401030();
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    sub_1DC0FED34(0);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 32))(v9, v10, v11);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  v14 = v7[6];
  v15 = (char *)(a1 + v14);
  v16 = (char *)(a2 + v14);
  v17 = (int *)type metadata accessor for StockSparklineViewModel(0);
  v18 = *((_QWORD *)v17 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v18 + 48))(v16, 1, v17))
  {
    sub_1DC089DA4(0, &qword_1EDB353E0, type metadata accessor for StockSparklineViewModel, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    v20 = sub_1DC408614();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v15, v16, v20);
    v21 = v17[5];
    v22 = &v15[v21];
    v23 = &v16[v21];
    *(_QWORD *)v22 = *(_QWORD *)v23;
    v22[8] = v23[8];
    v24 = v17[6];
    v25 = &v15[v24];
    v26 = &v16[v24];
    *(_QWORD *)v25 = *(_QWORD *)v26;
    v25[8] = v26[8];
    v15[v17[7]] = v16[v17[7]];
    v27 = v17[8];
    v28 = &v15[v27];
    v29 = &v16[v27];
    v30 = sub_1DC400F7C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v18 + 56))(v15, 0, 1, v17);
  }
  v31 = v7[7];
  v32 = a1 + v31;
  v33 = a2 + v31;
  *(_QWORD *)v32 = *(_QWORD *)(a2 + v31);
  *(_BYTE *)(v32 + 8) = *(_BYTE *)(a2 + v31 + 8);
  *(_QWORD *)(v32 + 16) = *(_QWORD *)(a2 + v31 + 16);
  *(_BYTE *)(v32 + 24) = *(_BYTE *)(a2 + v31 + 24);
  *(_QWORD *)(v32 + 32) = *(_QWORD *)(a2 + v31 + 32);
  *(_BYTE *)(v32 + 40) = *(_BYTE *)(a2 + v31 + 40);
  v34 = *(_OWORD *)(a2 + v31 + 64);
  *(_OWORD *)(v32 + 48) = *(_OWORD *)(a2 + v31 + 48);
  *(_OWORD *)(v32 + 64) = v34;
  *(_BYTE *)(v32 + 80) = *(_BYTE *)(a2 + v31 + 80);
  v35 = type metadata accessor for PriceViewModel();
  v36 = *(int *)(v35 + 40);
  v37 = v32 + v36;
  v38 = v33 + v36;
  v39 = sub_1DC4011C8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 32))(v37, v38, v39);
  v40 = *(int *)(v35 + 44);
  v41 = v32 + v40;
  v42 = v33 + v40;
  v43 = sub_1DC400118();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 32))(v41, v42, v43);
  v44 = v7[8];
  v45 = a1 + v44;
  v46 = a2 + v44;
  v47 = sub_1DC4008EC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 32))(v45, v46, v47);
  *(_BYTE *)(a1 + v7[9]) = *(_BYTE *)(a2 + v7[9]);
  v48 = *(int *)(a3 + 24);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  *(_OWORD *)(a1 + v48) = *(_OWORD *)(a2 + v48);
  return a1;
}

uint64_t sub_1DC234810(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(void *, uint64_t, uint64_t);
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  _BYTE *v19;
  int *v20;
  uint64_t v21;
  uint64_t (*v22)(_BYTE *, uint64_t, int *);
  int v23;
  int v24;
  uint64_t (*v25)(uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t v71;

  v6 = sub_1DC4010E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = (int *)type metadata accessor for StockViewModel();
  v8 = v7[5];
  v9 = (void *)(a1 + v8);
  v10 = (void *)(a2 + v8);
  v11 = sub_1DC401030();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 32))(v9, v10, v11);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v15)
  {
    (*(void (**)(void *, uint64_t))(v12 + 8))(v9, v11);
LABEL_6:
    sub_1DC0FED34(0);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v12 + 40))(v9, v10, v11);
LABEL_7:
  v17 = v7[6];
  v18 = (_BYTE *)(a1 + v17);
  v19 = (_BYTE *)(a2 + v17);
  v20 = (int *)type metadata accessor for StockSparklineViewModel(0);
  v21 = *((_QWORD *)v20 - 1);
  v22 = *(uint64_t (**)(_BYTE *, uint64_t, int *))(v21 + 48);
  v23 = v22(v18, 1, v20);
  v24 = v22(v19, 1, v20);
  if (v23)
  {
    if (!v24)
    {
      v27 = sub_1DC408614();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v18, v19, v27);
      v28 = v20[5];
      v29 = &v18[v28];
      v30 = &v19[v28];
      *(_QWORD *)v29 = *(_QWORD *)v30;
      v29[8] = v30[8];
      v31 = v20[6];
      v32 = &v18[v31];
      v33 = &v19[v31];
      *(_QWORD *)v32 = *(_QWORD *)v33;
      v32[8] = v33[8];
      v18[v20[7]] = v19[v20[7]];
      v34 = v20[8];
      v35 = &v18[v34];
      v36 = &v19[v34];
      v37 = sub_1DC400F7C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 32))(v35, v36, v37);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v21 + 56))(v18, 0, 1, v20);
      goto LABEL_16;
    }
    v25 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  }
  else
  {
    if (!v24)
    {
      v38 = sub_1DC408614();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v38 - 8) + 40))(v18, v19, v38);
      v39 = v20[5];
      v40 = &v18[v39];
      v41 = &v19[v39];
      *(_QWORD *)v40 = *(_QWORD *)v41;
      v40[8] = v41[8];
      v42 = v20[6];
      v43 = &v18[v42];
      v44 = &v19[v42];
      *(_QWORD *)v43 = *(_QWORD *)v44;
      v43[8] = v44[8];
      v18[v20[7]] = v19[v20[7]];
      v45 = v20[8];
      v46 = &v18[v45];
      v47 = &v19[v45];
      v48 = sub_1DC400F7C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 40))(v46, v47, v48);
      goto LABEL_16;
    }
    sub_1DC0926D8((uint64_t)v18, type metadata accessor for StockSparklineViewModel);
    v25 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  }
  sub_1DC089DA4(0, &qword_1EDB353E0, type metadata accessor for StockSparklineViewModel, v25);
  memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
LABEL_16:
  v49 = v7[7];
  v50 = a1 + v49;
  v51 = a2 + v49;
  *(_QWORD *)v50 = *(_QWORD *)(a2 + v49);
  *(_BYTE *)(v50 + 8) = *(_BYTE *)(a2 + v49 + 8);
  *(_QWORD *)(v50 + 16) = *(_QWORD *)(a2 + v49 + 16);
  *(_BYTE *)(v50 + 24) = *(_BYTE *)(a2 + v49 + 24);
  *(_QWORD *)(v50 + 32) = *(_QWORD *)(a2 + v49 + 32);
  *(_BYTE *)(v50 + 40) = *(_BYTE *)(a2 + v49 + 40);
  v52 = *(_QWORD *)(a2 + v49 + 56);
  *(_QWORD *)(v50 + 48) = *(_QWORD *)(a2 + v49 + 48);
  *(_QWORD *)(v50 + 56) = v52;
  swift_bridgeObjectRelease();
  v53 = *(_QWORD *)(v51 + 72);
  *(_QWORD *)(v50 + 64) = *(_QWORD *)(v51 + 64);
  *(_QWORD *)(v50 + 72) = v53;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v50 + 80) = *(_BYTE *)(v51 + 80);
  v54 = type metadata accessor for PriceViewModel();
  v55 = *(int *)(v54 + 40);
  v56 = v50 + v55;
  v57 = v51 + v55;
  v58 = sub_1DC4011C8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 40))(v56, v57, v58);
  v59 = *(int *)(v54 + 44);
  v60 = v50 + v59;
  v61 = v51 + v59;
  v62 = sub_1DC400118();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 40))(v60, v61, v62);
  v63 = v7[8];
  v64 = a1 + v63;
  v65 = a2 + v63;
  v66 = sub_1DC4008EC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 40))(v64, v65, v66);
  *(_BYTE *)(a1 + v7[9]) = *(_BYTE *)(a2 + v7[9]);
  v67 = *(int *)(a3 + 24);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  v68 = (_QWORD *)(a1 + v67);
  v69 = (uint64_t *)(a2 + v67);
  v71 = *v69;
  v70 = v69[1];
  *v68 = v71;
  v68[1] = v70;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1DC234C60()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC234C6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for StockViewModel();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_1DC234CEC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC234CF8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for StockViewModel();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1DC234D74()
{
  sub_1DC080808(&qword_1EDB2D870, type metadata accessor for StockListModel, (uint64_t)&unk_1DC41C038);
  return sub_1DC402E18();
}

uint64_t sub_1DC234DC8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t (*v14)(_QWORD);
  uint64_t result;
  uint64_t v16;
  uint64_t (*v17)(uint64_t);
  uint64_t v18;

  v2 = v1;
  v4 = sub_1DC4010E4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for StockListStockModel(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for StockListModel(0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0990BC(v2, (uint64_t)v13, v14);
  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result)
  {
    if ((_DWORD)result == 1)
    {
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
    }
    *(_QWORD *)(a1 + 32) = 0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  else
  {
    sub_1DC0F25C8((uint64_t)v13, (uint64_t)v10);
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v7, v10, v4);
    v16 = sub_1DC4003B8();
    v17 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DAE320];
    *(_QWORD *)(a1 + 24) = v16;
    *(_QWORD *)(a1 + 32) = sub_1DC080808(&qword_1EDB273A0, v17, MEMORY[0x1E0DAE308]);
    __swift_allocate_boxed_opaque_existential_1((uint64_t *)a1);
    sub_1DC4003AC();
    return sub_1DC0926D8((uint64_t)v10, type metadata accessor for StockListStockModel);
  }
  return result;
}

uint64_t sub_1DC234F6C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t (*v14)(_QWORD);
  int EnumCaseMultiPayload;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;

  v2 = v1;
  v4 = sub_1DC3FFDD0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for StockListStockModel(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for StockListModel(0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0990BC(v2, (uint64_t)v13, v14);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    v16 = sub_1DC406AFC();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(a1, 1, 1, v16);
  }
  else
  {
    sub_1DC0F25C8((uint64_t)v13, (uint64_t)v10);
    sub_1DC401048();
    sub_1DC3FFD88();
    sub_1DC40106C();
    sub_1DC406AF0();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    sub_1DC0926D8((uint64_t)v10, type metadata accessor for StockListStockModel);
    v18 = sub_1DC406AFC();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(a1, 0, 1, v18);
  }
}

uint64_t sub_1DC235148@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC235180(MEMORY[0x1E0DB7520], MEMORY[0x1E0DB7528], MEMORY[0x1E0DB7518], a1);
}

uint64_t sub_1DC235164@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC235180(MEMORY[0x1E0DB7428], MEMORY[0x1E0DB7430], MEMORY[0x1E0DB7420], a1);
}

uint64_t sub_1DC235180@<X0>(unsigned int *a1@<X2>, uint64_t (*a2)(_QWORD)@<X3>, unsigned int *a3@<X4>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  int EnumCaseMultiPayload;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;

  MEMORY[0x1E0C80A78](v4);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0990BC(v11, (uint64_t)v10, type metadata accessor for StockListModel);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_1DC0926D8((uint64_t)v10, type metadata accessor for StockListModel);
      v13 = *a1;
    }
    else
    {
      v13 = *a3;
    }
    v17 = a2(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(a4, v13, v17);
  }
  else
  {
    v14 = *a1;
    v15 = a2(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(a4, v14, v15);
    return sub_1DC0926D8((uint64_t)v10, type metadata accessor for StockListStockModel);
  }
}

unint64_t sub_1DC23528C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t (*v12)(_QWORD);
  int EnumCaseMultiPayload;
  unint64_t v14;
  uint64_t (*v15)(uint64_t, uint64_t);
  unint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t ObjCClassFromMetadata;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(_QWORD);
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  char *v44;
  uint64_t *v45;
  _QWORD *v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  void *v53;
  uint64_t v54;
  void (*v55)(_QWORD *, _QWORD, uint64_t);
  uint64_t *v56;
  char *v57;
  uint64_t v58;
  id v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t *v64;
  uint64_t v65;
  _QWORD *v66;
  _QWORD *v67;
  void *v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  id v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  id v77;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  unsigned int v82;
  id v83;
  unsigned int v84;
  void (*v85)(uint64_t *, uint64_t, uint64_t);
  unint64_t v86;
  uint64_t v87;
  uint64_t *v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  void (*v95)(char *, uint64_t, uint64_t);
  uint64_t v96;
  id v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  __int128 v101;

  v1 = v0;
  v2 = sub_1DC404E4C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v79 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for StockListStockModel(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v79 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for StockListModel(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v79 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0990BC(v1, (uint64_t)v11, v12);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    v14 = 0;
    if (EnumCaseMultiPayload == 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  else
  {
    v87 = v6;
    v88 = (uint64_t *)v5;
    sub_1DC0F25C8((uint64_t)v11, (uint64_t)v8);
    v15 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
    sub_1DC089DA4(0, &qword_1EDB42990, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB8970], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v89 = *(_QWORD *)(v3 + 72);
    v16 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
    v17 = swift_allocObject();
    v101 = xmmword_1DC40C740;
    *(_OWORD *)(v17 + 16) = xmmword_1DC40C740;
    v80 = v16;
    v86 = v17;
    v18 = (uint64_t *)(v17 + v16);
    sub_1DC235E1C();
    v20 = (char *)v18 + *(int *)(v19 + 48);
    v21 = *(int *)(v19 + 64);
    v99 = v19;
    v100 = v21;
    type metadata accessor for Localized();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    v98 = ObjCClassFromMetadata;
    v97 = (id)objc_opt_self();
    v23 = objc_msgSend(v97, sel_bundleForClass_, ObjCClassFromMetadata);
    v24 = sub_1DC3FFC80();
    v26 = v25;

    *v18 = v24;
    v18[1] = v26;
    v27 = *MEMORY[0x1E0DB88D8];
    v28 = sub_1DC404E1C();
    v95 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 104);
    v96 = v28;
    v95(v20, v27, v28);
    sub_1DC089DA4(0, qword_1EDB42B28, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB8968], v15);
    v94 = v29;
    v30 = sub_1DC404E40();
    v31 = v3;
    v90 = v8;
    v32 = v2;
    v33 = *(_QWORD *)(v30 - 8);
    v34 = *(_QWORD *)(v33 + 72);
    v35 = *(unsigned __int8 *)(v33 + 80);
    v92 = ((v35 + 32) & ~v35) + 2 * v34;
    v93 = (v35 + 32) & ~v35;
    v36 = v93;
    v91 = v35 | 7;
    v37 = swift_allocObject();
    *(_OWORD *)(v37 + 16) = v101;
    v38 = v37 + v36;
    v39 = *(void (**)(_QWORD))(v33 + 104);
    ((void (*)(uint64_t, _QWORD, uint64_t))v39)(v38, *MEMORY[0x1E0DB8948], v30);
    sub_1DC4068D4();
    *(_QWORD *)(v38 + v34) = sub_1DC4068B0();
    v40 = *MEMORY[0x1E0DB8960];
    ((void (*)(uint64_t, uint64_t, uint64_t))v39)(v38 + v34, v40, v30);
    *(uint64_t *)((char *)v18 + v100) = v37;
    v41 = *MEMORY[0x1E0DB88F8];
    v81 = v31;
    v42 = *(char **)(v31 + 104);
    v100 = v32;
    v43 = v32;
    v44 = v42;
    ((void (*)(uint64_t *, uint64_t, uint64_t))v42)(v18, v41, v43);
    v45 = (uint64_t *)((char *)v18 + v89);
    v46 = (uint64_t *)((char *)v18 + v89 + *(int *)(v99 + 48));
    v85 = (void (*)(uint64_t *, uint64_t, uint64_t))*(int *)(v99 + 64);
    v47 = objc_msgSend(v97, sel_bundleForClass_, v98);
    v48 = sub_1DC3FFC80();
    v50 = v49;

    *v45 = v48;
    v45[1] = v50;
    *v46 = 0x6D79536572616853;
    v46[1] = 0xEB000000006C6F62;
    v84 = *MEMORY[0x1E0DB88D0];
    ((void (*)(_QWORD *))v95)(v46);
    v51 = swift_allocObject();
    *(_OWORD *)(v51 + 16) = v101;
    v52 = (_QWORD *)(v51 + v93);
    v83 = (id)objc_opt_self();
    *v52 = objc_msgSend(v83, sel_systemOrangeColor);
    v82 = *MEMORY[0x1E0DB8958];
    v39(v52);
    if (qword_1EDB3F190 != -1)
      swift_once();
    v53 = (void *)qword_1EDB5E120;
    *(_QWORD *)((char *)v52 + v34) = qword_1EDB5E120;
    ((void (*)(char *, uint64_t, uint64_t))v39)((char *)v52 + v34, v40, v30);
    *(_QWORD *)((char *)v85 + (_QWORD)v45) = v51;
    v54 = *MEMORY[0x1E0DB8940];
    ((void (*)(uint64_t *, uint64_t, uint64_t))v44)(v45, v54, v100);
    if (v90[*(int *)(v87 + 20)] == 1)
    {
      v85 = (void (*)(uint64_t *, uint64_t, uint64_t))v44;
      LODWORD(v87) = v40;
      v55 = (void (*)(_QWORD *, _QWORD, uint64_t))v39;
      v56 = v88;
      v57 = (char *)v88 + *(int *)(v99 + 48);
      v58 = *(int *)(v99 + 64);
      v59 = v53;
      v60 = objc_msgSend(v97, sel_bundleForClass_, v98);
      v61 = sub_1DC3FFC80();
      v63 = v62;

      *v56 = v61;
      v56[1] = v63;
      v64 = v56;
      *(_QWORD *)v57 = 0x61576567616E614DLL;
      *((_QWORD *)v57 + 1) = 0xEF7473696C686374;
      v95(v57, v84, v96);
      v65 = swift_allocObject();
      *(_OWORD *)(v65 + 16) = v101;
      v66 = (_QWORD *)(v65 + v93);
      *v66 = objc_msgSend(v83, sel_systemBlueColor);
      v55(v66, v82, v30);
      v67 = (_QWORD *)((char *)v66 + v34);
      v14 = v86;
      if (qword_1F034AE18 != -1)
        swift_once();
      v68 = (void *)qword_1F0368938;
      *v67 = qword_1F0368938;
      v55(v67, v87, v30);
      *(uint64_t *)((char *)v64 + v58) = v65;
      v69 = v100;
      v85(v64, v54, v100);
      v70 = *(_QWORD *)(v14 + 16);
      v71 = *(_QWORD *)(v14 + 24);
      v72 = v68;
      if (v70 >= v71 >> 1)
        v14 = sub_1DC166CD4(v71 > 1, v70 + 1, 1, v14);
      v73 = v81;
      v74 = v89;
      v75 = (uint64_t)v90;
      v76 = v80;
      *(_QWORD *)(v14 + 16) = v70 + 1;
      (*(void (**)(unint64_t, uint64_t *, uint64_t))(v73 + 32))(v14 + v76 + v70 * v74, v88, v69);
    }
    else
    {
      v75 = (uint64_t)v90;
      v77 = v53;
      v14 = v86;
    }
    sub_1DC0926D8(v75, type metadata accessor for StockListStockModel);
  }
  return v14;
}

uint64_t sub_1DC2359FC(uint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t (*v22)(_QWORD);
  int EnumCaseMultiPayload;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v43 = a8;
  v44 = a4;
  v46 = a6;
  v47 = a7;
  v45 = a5;
  v13 = type metadata accessor for StockListStockModel(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(_QWORD *)(v14 + 64);
  MEMORY[0x1E0C80A78](v13);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v42 - v17;
  v19 = type metadata accessor for StockListModel(0);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v42 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0990BC(v9, (uint64_t)v21, v22);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    v24 = 0;
    if (EnumCaseMultiPayload == 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  else
  {
    v42 = v14;
    sub_1DC0F25C8((uint64_t)v21, (uint64_t)v18);
    v25 = sub_1DC40463C();
    v26 = sub_1DC21E370((uint64_t)v18, a1, a2, a3, v44, v45, v46, v47, v43, a9);
    sub_1DC089DA4(0, (unint64_t *)&qword_1EDB3FF10, (uint64_t (*)(uint64_t))sub_1DC1F4E1C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v27 = swift_allocObject();
    v28 = (_QWORD *)v27;
    *(_OWORD *)(v27 + 16) = xmmword_1DC411E20;
    if (v26)
    {
      v29 = MEMORY[0x1E0DB77B0];
      v30 = v25;
    }
    else
    {
      v30 = 0;
      v29 = 0;
      *(_QWORD *)(v27 + 40) = 0;
      *(_QWORD *)(v27 + 48) = 0;
    }
    v31 = (char *)&v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
    v32 = v42;
    v33 = MEMORY[0x1E0DB77B0];
    *(_QWORD *)(v27 + 32) = v26;
    *(_QWORD *)(v27 + 56) = v30;
    *(_QWORD *)(v27 + 64) = v29;
    swift_retain();
    v34 = sub_1DC30788C((uint64_t)v18, 0);
    if (v34)
    {
      v35 = MEMORY[0x1E0DB77B0];
      v36 = v25;
    }
    else
    {
      v36 = 0;
      v35 = 0;
      v28[10] = 0;
      v28[11] = 0;
    }
    v28[9] = v34;
    v28[12] = v36;
    v28[13] = v35;
    v37 = _s5TeaUI15ContextMenuItemC06StocksB0E8copyLink5stockAC0F4Core5StockV_tFZ_0((uint64_t)v18);
    v28[17] = v25;
    v28[18] = v33;
    v28[14] = v37;
    v38 = sub_1DC370634((uint64_t)v18);
    v28[22] = v25;
    v28[23] = v33;
    v28[19] = v38;
    sub_1DC0990BC((uint64_t)v18, (uint64_t)v31, type metadata accessor for StockListStockModel);
    v39 = (*(unsigned __int8 *)(v32 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
    v40 = swift_allocObject();
    sub_1DC0F25C8((uint64_t)v31, v40 + v39);
    sub_1DC404180();
    swift_allocObject();
    v24 = sub_1DC404138();
    swift_release();
    sub_1DC0926D8((uint64_t)v18, type metadata accessor for StockListStockModel);
  }
  return v24;
}

id sub_1DC235CE4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  sub_1DC0FED34(0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1DC4010E4();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for StockActivityItemsConfiguration();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a1, v5);
  v9 = type metadata accessor for StockViewModel();
  sub_1DC0990BC(a1 + *(int *)(v9 + 20), (uint64_t)v4, (uint64_t (*)(_QWORD))sub_1DC0FED34);
  return StockActivityItemsConfiguration.__allocating_init(stock:quote:)(v8, (uint64_t)v4);
}

uint64_t sub_1DC235DE0(uint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8, uint64_t a9)
{
  return sub_1DC2359FC(a1, a2, a3, a4, a5, a6, a7, a8, a9);
}

uint64_t sub_1DC235DEC()
{
  return sub_1DC404F3C();
}

void sub_1DC235E1C()
{
  unint64_t TupleTypeMetadata3;
  uint64_t v1;

  if (!qword_1EDB42B18)
  {
    sub_1DC404E1C();
    sub_1DC089DA4(255, &qword_1EDB42B20, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB8968], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1)
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_1EDB42B18);
  }
}

uint64_t sub_1DC235EAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  if ((sub_1DC0ED4C8(a1, a2) & 1) == 0)
    return 0;
  v4 = type metadata accessor for StockListStockModel(0);
  if (*(unsigned __int8 *)(a1 + *(int *)(v4 + 20)) != *(unsigned __int8 *)(a2 + *(int *)(v4 + 20)))
    return 0;
  v6 = *(int *)(v4 + 24);
  v7 = *(_QWORD *)(a1 + v6);
  v8 = *(_QWORD *)(a1 + v6 + 8);
  v9 = (_QWORD *)(a2 + v6);
  if (v7 == *v9 && v8 == v9[1])
    return 1;
  else
    return sub_1DC4099E8();
}

uint64_t sub_1DC235F2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v1 = *(_QWORD *)(type metadata accessor for StockListStockModel(0) - 8);
  v2 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
  v3 = sub_1DC4010E4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  v4 = (int *)type metadata accessor for StockViewModel();
  v5 = v2 + v4[5];
  v6 = sub_1DC401030();
  v7 = *(_QWORD *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6))
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  v8 = v2 + v4[6];
  v9 = type metadata accessor for StockSparklineViewModel(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v8, 1, v9))
  {
    v10 = sub_1DC408614();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v8, v10);
    v11 = v8 + *(int *)(v9 + 32);
    v12 = sub_1DC400F7C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  }
  v13 = v2 + v4[7];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v14 = type metadata accessor for PriceViewModel();
  v15 = v13 + *(int *)(v14 + 40);
  v16 = sub_1DC4011C8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
  v17 = v13 + *(int *)(v14 + 44);
  v18 = sub_1DC400118();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
  v19 = v2 + v4[8];
  v20 = sub_1DC4008EC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

id sub_1DC236114()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for StockListStockModel(0) - 8) + 80);
  return sub_1DC235CE4(v0 + ((v1 + 16) & ~v1));
}

uint64_t type metadata accessor for StockChartEventHandler()
{
  return objc_opt_self();
}

uint64_t StocksActivity.Tip.tipType.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  unsigned int *v5;

  v3 = *v1;
  v4 = sub_1DC403A24();
  v5 = (unsigned int *)MEMORY[0x1E0DADDA0];
  if (v3 < 0)
    v5 = (unsigned int *)MEMORY[0x1E0DADD98];
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v4 - 8) + 104))(a1, *v5, v4);
}

_QWORD *sub_1DC2361B4(_QWORD *a1, char *a2)
{
  uint64_t v4;
  int v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;

  v4 = type metadata accessor for StockEarningsModel();
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *(_QWORD *)a2;
    *a1 = *(_QWORD *)a2;
    a1 = (_QWORD *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = (int *)v4;
    v7 = sub_1DC4010E4();
    (*(void (**)(_QWORD *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = v6[5];
    v9 = (char *)a1 + v8;
    v10 = &a2[v8];
    v11 = sub_1DC3FFFEC();
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
    v13(v9, v10, v11);
    v14 = v6[6];
    v15 = (char *)a1 + v14;
    v16 = &a2[v14];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(&a2[v14], 1, v11))
    {
      sub_1DC0BB2BC(0);
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      v13(v15, v16, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v15, 0, 1, v11);
    }
    v19 = v6[7];
    v20 = (char *)a1 + v19;
    v21 = &a2[v19];
    v22 = sub_1DC400220();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
    *((_BYTE *)a1 + v6[8]) = a2[v6[8]];
    *((_BYTE *)a1 + v6[9]) = a2[v6[9]];
  }
  return a1;
}

uint64_t sub_1DC236328(uint64_t a1)
{
  uint64_t v2;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = sub_1DC4010E4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  v3 = (int *)type metadata accessor for StockEarningsModel();
  v4 = a1 + v3[5];
  v5 = sub_1DC3FFFEC();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v7(v4, v5);
  v8 = a1 + v3[6];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v8, 1, v5))
    v7(v8, v5);
  v9 = a1 + v3[7];
  v10 = sub_1DC400220();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
}

uint64_t sub_1DC2363F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void *, const void *, uint64_t);
  uint64_t v12;
  void *v13;
  const void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v4 = sub_1DC4010E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  v5 = (int *)type metadata accessor for StockEarningsModel();
  v6 = v5[5];
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = sub_1DC3FFFEC();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(void (**)(void *, const void *, uint64_t))(v10 + 16);
  v11(v7, v8, v9);
  v12 = v5[6];
  v13 = (void *)(a1 + v12);
  v14 = (const void *)(a2 + v12);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a2 + v12, 1, v9))
  {
    sub_1DC0BB2BC(0);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    v11(v13, v14, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v13, 0, 1, v9);
  }
  v16 = v5[7];
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = sub_1DC400220();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
  *(_BYTE *)(a1 + v5[8]) = *(_BYTE *)(a2 + v5[8]);
  *(_BYTE *)(a1 + v5[9]) = *(_BYTE *)(a2 + v5[9]);
  return a1;
}

uint64_t sub_1DC236538(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void *, const void *, uint64_t);
  uint64_t v12;
  void *v13;
  const void *v14;
  uint64_t (*v15)(const void *, uint64_t, uint64_t);
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v4 = sub_1DC4010E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  v5 = (int *)type metadata accessor for StockEarningsModel();
  v6 = v5[5];
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = sub_1DC3FFFEC();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(void (**)(void *, const void *, uint64_t))(v10 + 24);
  v11(v7, v8, v9);
  v12 = v5[6];
  v13 = (void *)(a1 + v12);
  v14 = (const void *)(a2 + v12);
  v15 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v10 + 48);
  v16 = v15((const void *)(a1 + v12), 1, v9);
  v17 = v15(v14, 1, v9);
  if (!v16)
  {
    if (!v17)
    {
      v11(v13, v14, v9);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v13, v9);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    sub_1DC0BB2BC(0);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v13, v14, v9);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v13, 0, 1, v9);
LABEL_7:
  v19 = v5[7];
  v20 = a1 + v19;
  v21 = a2 + v19;
  v22 = sub_1DC400220();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  *(_BYTE *)(a1 + v5[8]) = *(_BYTE *)(a2 + v5[8]);
  *(_BYTE *)(a1 + v5[9]) = *(_BYTE *)(a2 + v5[9]);
  return a1;
}

uint64_t sub_1DC2366CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void *, const void *, uint64_t);
  uint64_t v12;
  void *v13;
  const void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v4 = sub_1DC4010E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  v5 = (int *)type metadata accessor for StockEarningsModel();
  v6 = v5[5];
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = sub_1DC3FFFEC();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(void (**)(void *, const void *, uint64_t))(v10 + 32);
  v11(v7, v8, v9);
  v12 = v5[6];
  v13 = (void *)(a1 + v12);
  v14 = (const void *)(a2 + v12);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a2 + v12, 1, v9))
  {
    sub_1DC0BB2BC(0);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    v11(v13, v14, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v13, 0, 1, v9);
  }
  v16 = v5[7];
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = sub_1DC400220();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
  *(_BYTE *)(a1 + v5[8]) = *(_BYTE *)(a2 + v5[8]);
  *(_BYTE *)(a1 + v5[9]) = *(_BYTE *)(a2 + v5[9]);
  return a1;
}

uint64_t sub_1DC236814(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void *, const void *, uint64_t);
  uint64_t v12;
  void *v13;
  const void *v14;
  uint64_t (*v15)(const void *, uint64_t, uint64_t);
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v4 = sub_1DC4010E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  v5 = (int *)type metadata accessor for StockEarningsModel();
  v6 = v5[5];
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = sub_1DC3FFFEC();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(void (**)(void *, const void *, uint64_t))(v10 + 40);
  v11(v7, v8, v9);
  v12 = v5[6];
  v13 = (void *)(a1 + v12);
  v14 = (const void *)(a2 + v12);
  v15 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v10 + 48);
  v16 = v15((const void *)(a1 + v12), 1, v9);
  v17 = v15(v14, 1, v9);
  if (!v16)
  {
    if (!v17)
    {
      v11(v13, v14, v9);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v13, v9);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    sub_1DC0BB2BC(0);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v13, v14, v9);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v13, 0, 1, v9);
LABEL_7:
  v19 = v5[7];
  v20 = a1 + v19;
  v21 = a2 + v19;
  v22 = sub_1DC400220();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  *(_BYTE *)(a1 + v5[8]) = *(_BYTE *)(a2 + v5[8]);
  *(_BYTE *)(a1 + v5[9]) = *(_BYTE *)(a2 + v5[9]);
  return a1;
}

uint64_t sub_1DC2369A8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC2369B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for StockEarningsModel();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_1DC2369F0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC2369FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for StockEarningsModel();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for StockFeedEarningsRefreshBlueprintModifier()
{
  uint64_t result;

  result = qword_1F034F790;
  if (!qword_1F034F790)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1DC236A78()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for StockEarningsModel();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1DC236AE0(uint64_t a1, void (*a2)(uint64_t *), uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t *v46;
  void (*v47)(char *, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  char *v54;
  char *v55;
  char *v56;
  char *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void (*v71)(uint64_t *);
  __int128 v72;
  __int128 v73;

  v70 = a3;
  v71 = a2;
  v4 = sub_1DC404984();
  v66 = *(_QWORD *)(v4 - 8);
  v67 = v4;
  MEMORY[0x1E0C80A78](v4);
  v65 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC165EEC(0, &qword_1EDB2A278, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB9A28]);
  v68 = *(_QWORD *)(v6 - 8);
  v69 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (uint64_t *)((char *)&v48 - v7);
  v63 = type metadata accessor for StockFeedModel();
  MEMORY[0x1E0C80A78](v63);
  v60 = (uint64_t)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC142200();
  v58 = v10;
  v61 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v59 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC142434();
  MEMORY[0x1E0C80A78](v12);
  v55 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = type metadata accessor for StockFeedSectionDescriptor();
  MEMORY[0x1E0C80A78](v62);
  v54 = (char *)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC165EEC(0, (unint64_t *)&qword_1EDB2AB10, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790]);
  v16 = v15;
  v17 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v48 - v18;
  sub_1DC142D3C();
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v48 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC165EEC(0, (unint64_t *)&qword_1EDB29D60, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60]);
  v24 = v23;
  v25 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  v56 = (char *)&v48 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v27);
  v29 = (char *)&v48 - v28;
  v30 = a1;
  sub_1DC406CC4();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v22, 1, v24) == 1)
  {
    sub_1DC201274((uint64_t)v22);
    sub_1DC2371FC();
    *v8 = swift_allocError();
    v32 = v68;
    v31 = v69;
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(v68 + 104))(v8, *MEMORY[0x1E0DB99F0], v69);
    v71(v8);
    return (*(uint64_t (**)(uint64_t *, uint64_t))(v32 + 8))(v8, v31);
  }
  else
  {
    v52 = v8;
    v49 = v25;
    (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v29, v22, v24);
    (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v19, a1, v16);
    v34 = sub_1DC1581D0();
    sub_1DC4078A0();
    sub_1DC407894();
    type metadata accessor for StockFeedServiceConfig();
    sub_1DC080808(&qword_1EDB33F10, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedServiceConfig, (uint64_t)&unk_1DC411510);
    v35 = sub_1DC40787C();
    swift_release();
    v51 = v30;
    v50 = v17;
    v48 = v24;
    v57 = v29;
    if (v35)
    {
      *((_QWORD *)&v73 + 1) = sub_1DC407420();
      *(_QWORD *)&v72 = v35;
    }
    else
    {
      v72 = 0u;
      v73 = 0u;
    }
    sub_1DC406D00();
    sub_1DC1F0AAC(v34);
    swift_storeEnumTagMultiPayload();
    v36 = sub_1DC080808((unint64_t *)&unk_1EDB29BB0, (uint64_t (*)(uint64_t))sub_1DC142200, MEMORY[0x1E0DB6F08]);
    v37 = sub_1DC080808(&qword_1EDB29BA8, (uint64_t (*)(uint64_t))sub_1DC142200, MEMORY[0x1E0DB6EF8]);
    v53 = v16;
    v38 = v58;
    MEMORY[0x1DF0C3110](MEMORY[0x1E0DEE9D8], v58, v36, v37);
    sub_1DC080808(&qword_1EDB36EE0, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedSectionDescriptor, (uint64_t)&unk_1DC4167B0);
    sub_1DC080808(&qword_1EDB2D770, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedModel, (uint64_t)&unk_1DC429058);
    v39 = v19;
    v40 = v56;
    sub_1DC4046F0();
    sub_1DC237240(v64, v60);
    swift_storeEnumTagMultiPayload();
    v41 = v59;
    sub_1DC404348();
    v42 = v48;
    sub_1DC404744();
    (*(void (**)(char *, uint64_t))(v61 + 8))(v41, v38);
    sub_1DC406CB8();
    v44 = v65;
    v43 = v66;
    v45 = v67;
    (*(void (**)(char *, _QWORD, uint64_t))(v66 + 104))(v65, *MEMORY[0x1E0DB7FB8], v67);
    sub_1DC080808(&qword_1EDB36EE8, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedSectionDescriptor, (uint64_t)&unk_1DC416860);
    v46 = v52;
    sub_1DC405554();
    (*(void (**)(char *, uint64_t))(v43 + 8))(v44, v45);
    v71(v46);
    (*(void (**)(uint64_t *, uint64_t))(v68 + 8))(v46, v69);
    v47 = *(void (**)(char *, uint64_t))(v49 + 8);
    v47(v40, v42);
    (*(void (**)(char *, uint64_t))(v50 + 8))(v39, v53);
    return ((uint64_t (*)(char *, uint64_t))v47)(v57, v42);
  }
}

uint64_t sub_1DC237190()
{
  sub_1DC080808(&qword_1F034F7D8, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedEarningsRefreshBlueprintModifier, (uint64_t)&unk_1DC41C394);
  return sub_1DC404FC0();
}

uint64_t sub_1DC2371D0()
{
  return sub_1DC080808(&qword_1F034F7C8, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedEarningsRefreshBlueprintModifier, (uint64_t)&unk_1DC41C36C);
}

unint64_t sub_1DC2371FC()
{
  unint64_t result;

  result = qword_1F034F7D0;
  if (!qword_1F034F7D0)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC41C45C, &type metadata for StockFeedEarningsRefreshBlueprintModifier.Errors);
    atomic_store(result, (unint64_t *)&qword_1F034F7D0);
  }
  return result;
}

uint64_t sub_1DC237240(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for StockEarningsModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t storeEnumTagSinglePayload for StockFeedEarningsRefreshBlueprintModifier.Errors(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1DC2372C4 + 4 * byte_1DC41C330[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1DC2372E4 + 4 * byte_1DC41C335[v4]))();
}

_BYTE *sub_1DC2372C4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1DC2372E4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC2372EC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC2372F4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC2372FC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC237304(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for StockFeedEarningsRefreshBlueprintModifier.Errors()
{
  return &type metadata for StockFeedEarningsRefreshBlueprintModifier.Errors;
}

unint64_t sub_1DC237324()
{
  unint64_t result;

  result = qword_1F034F7E0;
  if (!qword_1F034F7E0)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC41C434, &type metadata for StockFeedEarningsRefreshBlueprintModifier.Errors);
    atomic_store(result, (unint64_t *)&qword_1F034F7E0);
  }
  return result;
}

void sub_1DC237370(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void *v6;
  double v7;
  double v8;
  id v9;
  uint64_t v10;
  uint64_t v11;

  v2 = sub_1DC40145C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (void *)objc_opt_self();
  sub_1DC407CA8();
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DB6098], v2);
  sub_1DC407C9C();
  v8 = v7;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v9 = objc_msgSend(v6, sel_systemFontOfSize_weight_, v8, *MEMORY[0x1E0DC1420]);
  v10 = sub_1DC409310();

  *a1 = v10;
}

id sub_1DC237494()
{
  _QWORD *v0;
  uint64_t inited;
  void *v2;
  uint64_t v3;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t);
  id v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  id v15;
  void *v16;
  void *v17;
  id v18;
  uint64_t v20;

  sub_1DC0FB194();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DC40FA70;
  v2 = (void *)*MEMORY[0x1E0DC1138];
  *(_QWORD *)(inited + 32) = *MEMORY[0x1E0DC1138];
  v3 = sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FB00);
  swift_bridgeObjectRetain();
  v4 = v2;
  sub_1DC4073B4();
  *(_QWORD *)(inited + 40) = v20;
  v5 = (void *)*MEMORY[0x1E0DC1140];
  *(_QWORD *)(inited + 64) = v3;
  *(_QWORD *)(inited + 72) = v5;
  v6 = v0[5];
  v7 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v6);
  v8 = *(_QWORD *)(v7 + 16);
  v9 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 496);
  v10 = v5;
  v11 = v9(v6, v8);
  v12 = sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FB30);
  *(_QWORD *)(inited + 80) = v11;
  v13 = (void *)*MEMORY[0x1E0DC1150];
  *(_QWORD *)(inited + 104) = v12;
  *(_QWORD *)(inited + 112) = v13;
  *(_QWORD *)(inited + 144) = MEMORY[0x1E0DEB070];
  *(_QWORD *)(inited + 120) = 0xBFD3333333333333;
  v14 = v13;
  sub_1DC0FA3C4(inited);
  v15 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  v16 = (void *)sub_1DC408A1C();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1DC0FB14C();
  v17 = (void *)sub_1DC408980();
  swift_bridgeObjectRelease();
  v18 = objc_msgSend(v15, sel_initWithString_attributes_, v16, v17);

  return v18;
}

uint64_t type metadata accessor for ForYouFeedMastheadViewStyler()
{
  return objc_opt_self();
}

void sub_1DC237694(uint64_t a1, uint64_t a2, char *a3)
{
  uint64_t v3;
  int *v6;
  _QWORD *v7;
  _QWORD *v8;
  void *v9;
  void *v10;
  uint64_t inited;
  void **v12;
  void *v13;
  void *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t, uint64_t);
  id v20;
  id v21;
  uint64_t v22;
  id v23;
  void *v24;
  void *v25;
  id v26;
  id v27;
  _QWORD *v28;
  _QWORD *v29;
  void *v30;
  uint64_t v31;
  void *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t (*v37)(uint64_t, uint64_t);
  id v38;
  id v39;
  uint64_t v40;
  id v41;
  void *v42;
  void *v43;
  id v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v47;
  id v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t (*v53)(uint64_t, uint64_t);
  id v54;
  uint64_t v55;
  id v56;
  void *v57;
  void *v58;
  id v59;
  void *v60;
  double *v61;
  double v62;
  double v63;
  double v64;
  double v65;
  uint64_t ObjCClassFromMetadata;
  void *v67;
  id v68;
  void *v69;
  void *v70;
  double *v71;
  double v72;
  double v73;
  double v74;
  double v75;
  id v76;
  void *v77;
  void *v78;
  double *v79;
  double v80;
  double v81;
  double v82;
  double v83;
  id v84;
  void *v85;
  _QWORD *v86;
  id v87;
  id v88;
  uint64_t v89;
  _QWORD *v90;
  uint64_t v91;
  uint64_t v92;
  void *v93;
  uint64_t v94;
  id v95;
  id v96;
  int *v97;
  id v98;
  uint64_t v99;
  id v100;
  id v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  id v106;
  id v107;
  uint64_t v108;
  uint64_t v109;
  int *v111;
  double __dst[36];
  CGRect v113;
  CGRect v114;
  CGRect v115;

  v100 = *(id *)&a3[OBJC_IVAR____TtC8StocksUI21StockFeedMastheadView_separatorView];
  objc_msgSend(v100, sel_setHidden_, 0);
  v98 = *(id *)&a3[OBJC_IVAR____TtC8StocksUI21StockFeedMastheadView_quoteSummaryView];
  objc_msgSend(v98, (SEL)&selRef_setNegativePrefix_, 0);
  v101 = *(id *)&a3[OBJC_IVAR____TtC8StocksUI21StockFeedMastheadView_exchangeLabel];
  v105 = a3;
  objc_msgSend(v101, (SEL)&selRef_setNegativePrefix_, 0);
  v6 = (int *)type metadata accessor for StockFeedMastheadViewLayoutAttributes();
  objc_msgSend(a3, sel_setFrame_, *(double *)(a2 + v6[5]), *(double *)(a2 + v6[5] + 8), *(double *)(a2 + v6[5] + 16), *(double *)(a2 + v6[5] + 24));
  v107 = *(id *)&a3[OBJC_IVAR____TtC8StocksUI21StockFeedMastheadView_symbolLabel];
  v111 = v6;
  v103 = a2;
  objc_msgSend(v107, (SEL)&selRef_initWithUnsignedInteger_, *(double *)(a2 + v6[6]), *(double *)(a2 + v6[6] + 8), *(double *)(a2 + v6[6] + 16), *(double *)(a2 + v6[6] + 24));
  v99 = v3;
  v109 = v3 + 16;
  swift_beginAccess();
  sub_1DC0824D4(v3 + 16, (uint64_t)__dst);
  v7 = __swift_project_boxed_opaque_existential_1(__dst, *(uint64_t *)&__dst[3]);
  sub_1DC4010D8();
  v108 = v6[15];
  v8 = (_QWORD *)*v7;
  v102 = sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FB00);
  v9 = (void *)sub_1DC4092F8();
  v10 = (void *)sub_1DC409310();

  sub_1DC0FB194();
  inited = swift_initStackObject();
  v12 = (void **)MEMORY[0x1E0DC1138];
  *(_OWORD *)(inited + 16) = xmmword_1DC40C740;
  v13 = *v12;
  *(_QWORD *)(inited + 32) = *v12;
  *(_QWORD *)(inited + 40) = v10;
  v14 = (void *)*MEMORY[0x1E0DC1140];
  *(_QWORD *)(inited + 64) = v102;
  *(_QWORD *)(inited + 72) = v14;
  v15 = v8 + 2;
  v17 = v8[5];
  v16 = v8[6];
  __swift_project_boxed_opaque_existential_1(v15, v17);
  v18 = *(_QWORD *)(v16 + 16);
  v19 = *(uint64_t (**)(uint64_t, uint64_t))(v18 + 48);
  swift_bridgeObjectRetain();
  v96 = v13;
  v20 = v10;
  v21 = v14;
  v22 = v19(v17, v18);
  v104 = sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FB30);
  *(_QWORD *)(inited + 104) = v104;
  *(_QWORD *)(inited + 80) = v22;
  sub_1DC0FA3C4(inited);
  v23 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  v24 = (void *)sub_1DC408A1C();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1DC081B48((unint64_t *)&qword_1EDB3F988, 255, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1DC40D90C);
  v25 = (void *)sub_1DC408980();
  swift_bridgeObjectRelease();
  v26 = objc_msgSend(v23, sel_initWithString_attributes_, v24, v25);
  swift_bridgeObjectRelease();

  objc_msgSend(v107, sel_setAttributedText_, v26);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)__dst);
  v27 = Stock.accessibleSymbol.getter();
  objc_msgSend(v107, sel_setAccessibilityAttributedLabel_, v27);

  v106 = *(id *)&v105[OBJC_IVAR____TtC8StocksUI21StockFeedMastheadView_nameLabel];
  objc_msgSend(v106, sel_setFrame_, *(double *)(v103 + v111[7]), *(double *)(v103 + v111[7] + 8), *(double *)(v103 + v111[7] + 16), *(double *)(v103 + v111[7] + 24));
  sub_1DC0824D4(v109, (uint64_t)__dst);
  v28 = __swift_project_boxed_opaque_existential_1(__dst, *(uint64_t *)&__dst[3]);
  sub_1DC40106C();
  v29 = (_QWORD *)*v28;
  v30 = (void *)sub_1DC4092F8();
  v31 = swift_initStackObject();
  *(_OWORD *)(v31 + 16) = xmmword_1DC40C740;
  *(_QWORD *)(v31 + 32) = v96;
  *(_QWORD *)(v31 + 40) = v30;
  *(_QWORD *)(v31 + 64) = v102;
  *(_QWORD *)(v31 + 72) = v21;
  v32 = v21;
  v33 = v29 + 2;
  v35 = v29[5];
  v34 = v29[6];
  __swift_project_boxed_opaque_existential_1(v33, v35);
  v36 = *(_QWORD *)(v34 + 16);
  v37 = *(uint64_t (**)(uint64_t, uint64_t))(v36 + 200);
  swift_bridgeObjectRetain();
  v38 = v96;
  v39 = v30;
  v95 = v32;
  v40 = v37(v35, v36);
  *(_QWORD *)(v31 + 104) = v104;
  *(_QWORD *)(v31 + 80) = v40;
  sub_1DC0FA3C4(v31);
  v41 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  v42 = (void *)sub_1DC408A1C();
  swift_bridgeObjectRelease();
  v43 = (void *)sub_1DC408980();
  swift_bridgeObjectRelease();
  v44 = objc_msgSend(v41, sel_initWithString_attributes_, v42, v43);
  swift_bridgeObjectRelease();

  objc_msgSend(v106, sel_setAttributedText_, v44);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)__dst);
  objc_msgSend(v101, sel_setFrame_, *(double *)(v103 + v111[14]), *(double *)(v103 + v111[14] + 8), *(double *)(v103 + v111[14] + 16), *(double *)(v103 + v111[14] + 24));
  sub_1DC0824D4(v109, (uint64_t)__dst);
  v45 = __swift_project_boxed_opaque_existential_1(__dst, *(uint64_t *)&__dst[3]);
  v97 = (int *)type metadata accessor for StockFeedMastheadModel();
  sub_1DC0FB1E8(a1 + v97[5]);
  v46 = (_QWORD *)*v45;
  v47 = swift_initStackObject();
  *(_OWORD *)(v47 + 16) = xmmword_1DC40C740;
  *(_QWORD *)(v47 + 32) = v38;
  swift_bridgeObjectRetain();
  v48 = v38;
  *(_QWORD *)(v47 + 40) = sub_1DC4092F8();
  *(_QWORD *)(v47 + 64) = v102;
  *(_QWORD *)(v47 + 72) = v95;
  v49 = v46 + 2;
  v51 = v46[5];
  v50 = v46[6];
  __swift_project_boxed_opaque_existential_1(v49, v51);
  v52 = *(_QWORD *)(v50 + 16);
  v53 = *(uint64_t (**)(uint64_t, uint64_t))(v52 + 200);
  v54 = v95;
  v55 = v53(v51, v52);
  *(_QWORD *)(v47 + 104) = v104;
  *(_QWORD *)(v47 + 80) = v55;
  sub_1DC0FA3C4(v47);
  v56 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  v57 = (void *)sub_1DC408A1C();
  swift_bridgeObjectRelease();
  v58 = (void *)sub_1DC408980();
  swift_bridgeObjectRelease();
  v59 = objc_msgSend(v56, sel_initWithString_attributes_, v57, v58);
  swift_bridgeObjectRelease();

  objc_msgSend(v101, sel_setAttributedText_, v59);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)__dst);
  v60 = *(void **)&v105[OBJC_IVAR____TtC8StocksUI21StockFeedMastheadView_moreOptionsButton];
  v61 = (double *)(v103 + v111[8]);
  v62 = *v61;
  v63 = v61[1];
  v64 = v61[2];
  v65 = v61[3];
  v113.origin.x = *v61;
  v113.origin.y = v63;
  v113.size.width = v64;
  v113.size.height = v65;
  objc_msgSend(v60, sel_setHidden_, CGRectIsEmpty(v113));
  objc_msgSend(v60, sel_setFrame_, v62, v63, v64, v65);
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v67 = (void *)objc_opt_self();
  v68 = objc_msgSend(v67, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1DC3FFC80();

  v69 = (void *)sub_1DC408A1C();
  swift_bridgeObjectRelease();
  objc_msgSend(v60, sel_setAccessibilityLabel_, v69, 0x80000001DC43F140);

  v70 = *(void **)&v105[OBJC_IVAR____TtC8StocksUI21StockFeedMastheadView_shareButton];
  v71 = (double *)(v103 + v111[9]);
  v72 = *v71;
  v73 = v71[1];
  v74 = v71[2];
  v75 = v71[3];
  v114.origin.x = *v71;
  v114.origin.y = v73;
  v114.size.width = v74;
  v114.size.height = v75;
  objc_msgSend(v70, sel_setHidden_, CGRectIsEmpty(v114));
  objc_msgSend(v70, sel_setFrame_, v72, v73, v74, v75);
  v76 = objc_msgSend(v67, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1DC3FFC80();

  v77 = (void *)sub_1DC408A1C();
  swift_bridgeObjectRelease();
  objc_msgSend(v70, sel_setAccessibilityLabel_, v77, 0x80000001DC43F190);

  v78 = *(void **)&v105[OBJC_IVAR____TtC8StocksUI21StockFeedMastheadView_watchStockButton];
  v79 = (double *)(v103 + v111[10]);
  v80 = *v79;
  v81 = v79[1];
  v82 = v79[2];
  v83 = v79[3];
  v115.origin.x = *v79;
  v115.origin.y = v81;
  v115.size.width = v82;
  v115.size.height = v83;
  objc_msgSend(v78, (SEL)&selRef_setNegativePrefix_, CGRectIsEmpty(v115));
  objc_msgSend(v78, sel_setFrame_, v80, v81, v82, v83);
  v84 = objc_msgSend(v105, sel_nextResponder);
  if (v84)
  {
    v85 = v84;
    v86 = (_QWORD *)v109;
    while (1)
    {
      objc_opt_self();
      if (swift_dynamicCastObjCClass())
        break;
      v87 = objc_msgSend(v85, sel_nextResponder);

      v85 = v87;
      if (!v87)
        goto LABEL_8;
    }
    LOBYTE(v87) = sub_1DC4090F4();

  }
  else
  {
    LOBYTE(v87) = 0;
    v86 = (_QWORD *)v109;
  }
LABEL_8:
  objc_msgSend(v60, sel_setHidden_, v87 & 1);
  v88 = objc_msgSend((id)objc_opt_self(), sel_clearColor);
  objc_msgSend(v105, sel_setBackgroundColor_, v88);

  objc_msgSend(v107, sel_setNumberOfLines_, 0);
  objc_msgSend(v106, sel_setNumberOfLines_, 0);
  __swift_project_boxed_opaque_existential_1(v86, *(_QWORD *)(v99 + 40));
  sub_1DC3BCAB4(v70);
  __swift_project_boxed_opaque_existential_1(v86, *(_QWORD *)(v99 + 40));
  sub_1DC3BCD20(v78, *(_BYTE *)(a1 + v97[8]) != 2);
  __swift_project_boxed_opaque_existential_1(v86, *(_QWORD *)(v99 + 40));
  sub_1DC3BD020(v60, *(_BYTE *)(v103 + v108));
  v89 = *(_QWORD *)(v103 + v111[16]);
  if (v89 == 2)
    goto LABEL_12;
  if (v89 == 1)
  {
    objc_msgSend(v98, sel_setHidden_, 1);
    objc_msgSend(v101, sel_setHidden_, 1);
    objc_msgSend(v100, sel_setFrame_, *(double *)(v103 + v111[13]), *(double *)(v103 + v111[13] + 8), *(double *)(v103 + v111[13] + 16), *(double *)(v103 + v111[13] + 24));
    v90 = __swift_project_boxed_opaque_existential_1(v86, *(_QWORD *)(v99 + 40));
    v91 = *(_QWORD *)(*v90 + 40);
    v92 = *(_QWORD *)(*v90 + 48);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(*v90 + 16), v91);
    v93 = (void *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)(v92 + 16) + 152))(v91);
    objc_msgSend(v100, sel_setBackgroundColor_, v93);

    return;
  }
  if (v89)
  {
    sub_1DC409838();
    __break(1u);
  }
  else
  {
LABEL_12:
    objc_msgSend(v100, sel_setHidden_, 1);
    objc_msgSend(v98, sel_setFrame_, *(double *)(v103 + v111[11]), *(double *)(v103 + v111[11] + 8), *(double *)(v103 + v111[11] + 16), *(double *)(v103 + v111[11] + 24));
    v94 = a1 + v97[7];
    memcpy(__dst, (const void *)(v103 + v111[12]), 0x111uLL);
    sub_1DC2CAD1C(v94, __dst, (char *)v98);
  }
}

uint64_t sub_1DC238378()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 72);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for StockFeedMastheadViewRenderer()
{
  return objc_opt_self();
}

uint64_t sub_1DC2383CC(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = sub_1DC081B48(&qword_1EDB396F0, a2, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedMastheadViewRenderer, (uint64_t)&unk_1DC41C560);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

id sub_1DC238408(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  void *v8;
  uint64_t inited;
  void *v10;
  id v11;
  uint64_t v12;
  void *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t, uint64_t);
  id v19;
  uint64_t v20;
  id v21;
  void *v22;
  void *v23;
  id v24;
  _QWORD v26[16];

  v2 = v1;
  v26[0] = a1;
  v3 = sub_1DC40145C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FB00);
  sub_1DC4073B4();
  v8 = (void *)v26[15];
  sub_1DC0FB194();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DC40C740;
  v10 = (void *)*MEMORY[0x1E0DC1138];
  *(_QWORD *)(inited + 32) = *MEMORY[0x1E0DC1138];
  sub_1DC407CA8();
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E0DB6098], v3);
  swift_bridgeObjectRetain();
  v11 = v10;
  v12 = sub_1DC407C90();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FB00);
  *(_QWORD *)(inited + 40) = v12;
  v13 = (void *)*MEMORY[0x1E0DC1140];
  *(_QWORD *)(inited + 64) = v7;
  *(_QWORD *)(inited + 72) = v13;
  v14 = v2 + 2;
  v16 = v2[5];
  v15 = v2[6];
  __swift_project_boxed_opaque_existential_1(v14, v16);
  v17 = *(_QWORD *)(v15 + 16);
  v18 = *(uint64_t (**)(uint64_t, uint64_t))(v17 + 48);
  v19 = v13;
  v20 = v18(v16, v17);
  *(_QWORD *)(inited + 104) = sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FB30);
  *(_QWORD *)(inited + 80) = v20;
  sub_1DC0FA3C4(inited);
  v21 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  v22 = (void *)sub_1DC408A1C();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1DC0FB14C();
  v23 = (void *)sub_1DC408980();
  swift_bridgeObjectRelease();
  v24 = objc_msgSend(v21, sel_initWithString_attributes_, v22, v23, v26[0]);

  return v24;
}

uint64_t sub_1DC238698@<X0>(uint64_t *a1@<X8>)
{
  return sub_1DC238800(a1);
}

void sub_1DC2386B4(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;

  v2 = sub_1DC40145C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FB00);
  sub_1DC407CA8();
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DB6098], v2);
  sub_1DC407C9C();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v6 = (void *)sub_1DC4092F8();
  v7 = sub_1DC409310();

  *a1 = v7;
}

uint64_t sub_1DC2387E8@<X0>(uint64_t *a1@<X8>)
{
  return sub_1DC238800(a1);
}

uint64_t sub_1DC238800@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FB00);
  result = sub_1DC4092F8();
  *a1 = result;
  return result;
}

uint64_t sub_1DC238878(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  int *v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  char *v24;
  void (*v25)(char *, char *, uint64_t, __n128);
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t);
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v33;
  char *v34;
  __int128 v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47[2];
  __int128 v48[2];
  __int128 v49[2];
  __int128 v50;

  v4 = v3;
  v42 = a3;
  v41 = a2;
  v40 = a1;
  v36 = *(char **)v3;
  sub_1DC092F50(0, &qword_1EDB28AC0, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
  MEMORY[0x1E0C80A78](v5);
  v39 = (uint64_t)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v33 - v8;
  v10 = sub_1DC4008EC();
  v46 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = sub_1DC4002BC();
  v43 = *(_QWORD *)(v44 - 8);
  MEMORY[0x1E0C80A78](v44);
  v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1DC4010E4();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v33 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = (int *)type metadata accessor for StockFeedPrewarmBlueprintModifier();
  MEMORY[0x1E0C80A78](v19);
  v45 = (uint64_t)&v33 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x1E0C80A78](v21);
  v24 = (char *)&v33 - v23;
  v37 = v16;
  v25 = *(void (**)(char *, char *, uint64_t, __n128))(v16 + 16);
  v38 = v15;
  v25(v18, &v4[OBJC_IVAR____TtC8StocksUI33StockFeedBlueprintModifierFactory_stock], v15, v22);
  sub_1DC0824D4((uint64_t)&v4[OBJC_IVAR____TtC8StocksUI33StockFeedBlueprintModifierFactory_priceDataManager], (uint64_t)&v50);
  sub_1DC0824D4((uint64_t)&v4[OBJC_IVAR____TtC8StocksUI33StockFeedBlueprintModifierFactory_quoteDetailManager], (uint64_t)v49);
  sub_1DC0824D4((uint64_t)&v4[OBJC_IVAR____TtC8StocksUI33StockFeedBlueprintModifierFactory_watchlistManager], (uint64_t)v48);
  v26 = qword_1EDB28E90;
  v35 = *(_OWORD *)&v4[OBJC_IVAR____TtC8StocksUI33StockFeedBlueprintModifierFactory_chartManager];
  swift_unknownObjectRetain();
  if (v26 != -1)
    swift_once();
  sub_1DC080808(&qword_1EDB3BE08, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedBlueprintModifierFactory, (uint64_t)&unk_1DC41C6E0);
  sub_1DC4012D0();
  sub_1DC0824D4((uint64_t)&v4[OBJC_IVAR____TtC8StocksUI33StockFeedBlueprintModifierFactory_stockEarningsModelFactory], (uint64_t)v47);
  v36 = v14;
  v27 = v46;
  (*(void (**)(char *, uint64_t, uint64_t))(v46 + 16))(v12, v40, v10);
  v40 = v10;
  v28 = (void (*)(uint64_t))MEMORY[0x1E0CB0870];
  v34 = v9;
  sub_1DC092F9C(v41, (uint64_t)v9, &qword_1EDB28AC0, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
  v29 = v39;
  sub_1DC092F9C(v42, v39, &qword_1EDB28AC0, v28);
  __swift_project_boxed_opaque_existential_1(&v4[OBJC_IVAR____TtC8StocksUI33StockFeedBlueprintModifierFactory_appConfigurationManager], *(_QWORD *)&v4[OBJC_IVAR____TtC8StocksUI33StockFeedBlueprintModifierFactory_appConfigurationManager + 24]);
  sub_1DC400DCC();
  v30 = v4[OBJC_IVAR____TtC8StocksUI33StockFeedBlueprintModifierFactory_newsSource];
  sub_1DC0824D4((uint64_t)&v4[OBJC_IVAR____TtC8StocksUI33StockFeedBlueprintModifierFactory_featureAvailability], (uint64_t)&v24[v19[13]]);
  (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v24, v18, v38);
  sub_1DC097DD0(&v50, (uint64_t)&v24[v19[5]]);
  sub_1DC097DD0(v49, (uint64_t)&v24[v19[6]]);
  sub_1DC097DD0(v48, (uint64_t)&v24[v19[7]]);
  *(_OWORD *)&v24[v19[14]] = v35;
  (*(void (**)(char *, char *, uint64_t))(v43 + 32))(&v24[v19[15]], v36, v44);
  sub_1DC097DD0(v47, (uint64_t)&v24[v19[16]]);
  (*(void (**)(char *, char *, uint64_t))(v27 + 32))(&v24[v19[8]], v12, v40);
  sub_1DC153170((uint64_t)v34, (uint64_t)&v24[v19[11]]);
  sub_1DC153170(v29, (uint64_t)&v24[v19[12]]);
  v24[v19[10]] = v30;
  sub_1DC0990BC((uint64_t)v24, v45, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedPrewarmBlueprintModifier);
  sub_1DC239CF0();
  swift_allocObject();
  sub_1DC080808(&qword_1EDB3BFC8, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedPrewarmBlueprintModifier, (uint64_t)&unk_1DC412870);
  v31 = sub_1DC40499C();
  sub_1DC0926D8((uint64_t)v24, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedPrewarmBlueprintModifier);
  return v31;
}

uint64_t sub_1DC238D88(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  int *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  void (*v16)(uint64_t);
  uint64_t v17;
  uint64_t v19;

  v9 = (int *)type metadata accessor for StockFeedReplaceQuoteDataBlueprintModifier();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (uint64_t *)((char *)&v19 - v13);
  sub_1DC0990BC(a1, (uint64_t)&v19 + *(int *)(v15 + 20) - v13, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedQuoteData);
  v16 = (void (*)(uint64_t))MEMORY[0x1E0CB0870];
  sub_1DC092F9C(a3, (uint64_t)v14 + v9[7], &qword_1EDB28AC0, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
  sub_1DC092F9C(a4, (uint64_t)v14 + v9[8], &qword_1EDB28AC0, v16);
  sub_1DC0824D4(v4 + OBJC_IVAR____TtC8StocksUI33StockFeedBlueprintModifierFactory_stockEarningsModelFactory, (uint64_t)v14 + v9[9]);
  sub_1DC0824D4(v4 + OBJC_IVAR____TtC8StocksUI33StockFeedBlueprintModifierFactory_featureAvailability, (uint64_t)v14 + v9[10]);
  *v14 = 0xD000000000000010;
  v14[1] = 0x80000001DC43F2E0;
  *((_BYTE *)v14 + v9[6]) = a2;
  sub_1DC0990BC((uint64_t)v14, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedReplaceQuoteDataBlueprintModifier);
  sub_1DC239CF0();
  swift_allocObject();
  sub_1DC080808(&qword_1EDB3E790, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedReplaceQuoteDataBlueprintModifier, (uint64_t)&unk_1DC4244F0);
  v17 = sub_1DC40499C();
  sub_1DC0926D8((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedReplaceQuoteDataBlueprintModifier);
  return v17;
}

uint64_t sub_1DC238F40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  void *v7;
  char v8;
  id v9;
  uint64_t v10;
  uint64_t v12;
  _QWORD v13[5];
  _QWORD v14[6];
  char v15;

  sub_1DC0824D4(v3 + OBJC_IVAR____TtC8StocksUI33StockFeedBlueprintModifierFactory_sectionFactory, (uint64_t)v14);
  v7 = *(void **)(v3 + OBJC_IVAR____TtC8StocksUI33StockFeedBlueprintModifierFactory_offlineManager);
  v8 = *(_BYTE *)(v3 + OBJC_IVAR____TtC8StocksUI33StockFeedBlueprintModifierFactory_newsSource);
  v13[0] = 0x6C6961467377654ELL;
  v13[1] = 0xEA00000000006465;
  v13[2] = a1;
  v13[3] = a2;
  v13[4] = a3;
  v14[5] = v7;
  v15 = v8;
  sub_1DC239DFC((uint64_t)v13, (uint64_t)&v12);
  sub_1DC239CF0();
  swift_allocObject();
  sub_1DC239E38();
  swift_bridgeObjectRetain();
  swift_retain();
  v9 = v7;
  v10 = sub_1DC40499C();
  sub_1DC239E7C((uint64_t)v13);
  return v10;
}

uint64_t sub_1DC23903C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC8StocksUI33StockFeedBlueprintModifierFactory_stock;
  v2 = sub_1DC4010E4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC8StocksUI33StockFeedBlueprintModifierFactory_priceDataManager);
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC8StocksUI33StockFeedBlueprintModifierFactory_quoteDetailManager);
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC8StocksUI33StockFeedBlueprintModifierFactory_watchlistManager);
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC8StocksUI33StockFeedBlueprintModifierFactory_appConfigurationManager);

  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC8StocksUI33StockFeedBlueprintModifierFactory_sectionFactory);
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC8StocksUI33StockFeedBlueprintModifierFactory_stockEarningsModelFactory);
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC8StocksUI33StockFeedBlueprintModifierFactory_featureAvailability);
  swift_unknownObjectRelease();
  return v0;
}

uint64_t sub_1DC239110()
{
  sub_1DC23903C();
  return swift_deallocClassInstance();
}

uint64_t sub_1DC239134()
{
  return type metadata accessor for StockFeedBlueprintModifierFactory();
}

uint64_t type metadata accessor for StockFeedBlueprintModifierFactory()
{
  uint64_t result;

  result = qword_1EDB3BE18;
  if (!qword_1EDB3BE18)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1DC239178()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1DC4010E4();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1DC23921C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DC238878(a1, a2, a3);
}

uint64_t sub_1DC23923C()
{
  sub_1DC239CF0();
  swift_allocObject();
  sub_1DC23A05C();
  return sub_1DC40499C();
}

uint64_t sub_1DC2392A4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v7;
  _QWORD v8[3];
  _BYTE v9[48];

  v3 = *v1;
  sub_1DC0824D4(v3 + OBJC_IVAR____TtC8StocksUI33StockFeedBlueprintModifierFactory_sectionFactory, (uint64_t)v9);
  v4 = *(_BYTE *)(v3 + OBJC_IVAR____TtC8StocksUI33StockFeedBlueprintModifierFactory_newsSource);
  v8[0] = 0x4468736572666552;
  v8[1] = 0xEB00000000617461;
  v8[2] = a1;
  v9[40] = v4;
  sub_1DC239FA8((uint64_t)v8, (uint64_t)&v7);
  sub_1DC239CF0();
  swift_allocObject();
  sub_1DC239FE4();
  swift_retain();
  v5 = sub_1DC40499C();
  sub_1DC23A028((uint64_t)v8);
  return v5;
}

uint64_t sub_1DC23937C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v7;
  uint64_t v9;
  char v10[16];
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1DC0824D4(*v3 + OBJC_IVAR____TtC8StocksUI33StockFeedBlueprintModifierFactory_sectionFactory, (uint64_t)&v14);
  strcpy(v10, "NewsExpandData");
  v10[15] = -18;
  v11 = a1;
  v12 = a2;
  v13 = a3;
  sub_1DC239EF4((uint64_t)v10, (uint64_t)&v9);
  sub_1DC239CF0();
  swift_allocObject();
  sub_1DC239F30();
  swift_bridgeObjectRetain();
  swift_retain();
  v7 = sub_1DC40499C();
  sub_1DC239F74((uint64_t)v10);
  return v7;
}

uint64_t sub_1DC23945C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v3 = type metadata accessor for StockFeedPriceChangeDisplayBlueprintModifier();
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (uint64_t *)((char *)&v15 - v7);
  v9 = *v1;
  v11 = (char *)&v15 + *(int *)(v10 + 20) - v7;
  v12 = sub_1DC4008EC();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v11, a1, v12);
  sub_1DC0824D4(v9 + OBJC_IVAR____TtC8StocksUI33StockFeedBlueprintModifierFactory_featureAvailability, (uint64_t)v8 + *(int *)(v3 + 24));
  *v8 = 0xD000000000000012;
  v8[1] = 0x80000001DC4338C0;
  sub_1DC0990BC((uint64_t)v8, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedPriceChangeDisplayBlueprintModifier);
  sub_1DC239CF0();
  swift_allocObject();
  sub_1DC080808(&qword_1EDB419C8, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedPriceChangeDisplayBlueprintModifier, (uint64_t)&unk_1DC422AE8);
  v13 = sub_1DC40499C();
  sub_1DC0926D8((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedPriceChangeDisplayBlueprintModifier);
  return v13;
}

uint64_t sub_1DC2395B4()
{
  sub_1DC239CF0();
  swift_allocObject();
  sub_1DC239EB0();
  return sub_1DC40499C();
}

uint64_t sub_1DC239618(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  return sub_1DC238D88(a1, a2, a3, a4);
}

uint64_t sub_1DC239638(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DC238F40(a1, a2, a3);
}

uint64_t sub_1DC239658()
{
  sub_1DC239CF0();
  swift_allocObject();
  sub_1DC239DB8();
  return sub_1DC40499C();
}

uint64_t sub_1DC2396C8(uint64_t a1)
{
  uint64_t refreshed;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  refreshed = type metadata accessor for StockFeedEarningsRefreshBlueprintModifier();
  MEMORY[0x1E0C80A78](refreshed);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v10 - v6;
  sub_1DC0990BC(a1, (uint64_t)&v10 - v6, (uint64_t (*)(_QWORD))type metadata accessor for StockEarningsModel);
  sub_1DC0990BC((uint64_t)v7, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedEarningsRefreshBlueprintModifier);
  sub_1DC239CF0();
  swift_allocObject();
  sub_1DC080808(&qword_1F034F7D8, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedEarningsRefreshBlueprintModifier, (uint64_t)&unk_1DC41C394);
  v8 = sub_1DC40499C();
  sub_1DC0926D8((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedEarningsRefreshBlueprintModifier);
  return v8;
}

uint64_t sub_1DC2397D0(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t updated;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  updated = type metadata accessor for StockFeedChartUpdateBlueprintModifier();
  MEMORY[0x1E0C80A78](updated);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (uint64_t *)((char *)&v17 - v9);
  v11 = *v2;
  sub_1DC092F9C(a1, (uint64_t)&v17 + *(int *)(v12 + 20) - v9, (unint64_t *)&unk_1EDB28D90, (void (*)(uint64_t))MEMORY[0x1E0DAEFA8]);
  v13 = (char *)v10 + *(int *)(updated + 24);
  v14 = sub_1DC4008EC();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v13, a2, v14);
  sub_1DC0824D4(v11 + OBJC_IVAR____TtC8StocksUI33StockFeedBlueprintModifierFactory_featureAvailability, (uint64_t)v10 + *(int *)(updated + 28));
  *v10 = 0x6470557472616843;
  v10[1] = 0xEB00000000657461;
  sub_1DC0990BC((uint64_t)v10, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedChartUpdateBlueprintModifier);
  sub_1DC239CF0();
  swift_allocObject();
  sub_1DC080808(&qword_1EDB3D6F0, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedChartUpdateBlueprintModifier, (uint64_t)&unk_1DC4219F0);
  v15 = sub_1DC40499C();
  sub_1DC0926D8((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedChartUpdateBlueprintModifier);
  return v15;
}

uint64_t sub_1DC239950(uint64_t a1, __int128 *a2, __int128 *a3, __int128 *a4, uint64_t a5, uint64_t a6, __int128 *a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  uint64_t *v20;
  uint64_t *boxed_opaque_existential_1;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;

  v20 = (uint64_t *)(a13 + OBJC_IVAR____TtC8StocksUI33StockFeedBlueprintModifierFactory_featureAvailability);
  v20[3] = a14;
  v20[4] = a15;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v20);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a14 - 8) + 32))(boxed_opaque_existential_1, a12, a14);
  v22 = (_QWORD *)(a13 + OBJC_IVAR____TtC8StocksUI33StockFeedBlueprintModifierFactory_sectionFactory);
  v22[3] = type metadata accessor for StockFeedSectionFactory();
  v22[4] = &off_1EA461078;
  *v22 = a9;
  v23 = (_QWORD *)(a13 + OBJC_IVAR____TtC8StocksUI33StockFeedBlueprintModifierFactory_stockEarningsModelFactory);
  v23[3] = type metadata accessor for StockEarningsModelFactory();
  v23[4] = &off_1EA44F538;
  *v23 = a11;
  v24 = a13 + OBJC_IVAR____TtC8StocksUI33StockFeedBlueprintModifierFactory_stock;
  v25 = sub_1DC4010E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v24, a1, v25);
  sub_1DC097DD0(a2, a13 + OBJC_IVAR____TtC8StocksUI33StockFeedBlueprintModifierFactory_priceDataManager);
  sub_1DC097DD0(a3, a13 + OBJC_IVAR____TtC8StocksUI33StockFeedBlueprintModifierFactory_quoteDetailManager);
  sub_1DC097DD0(a4, a13 + OBJC_IVAR____TtC8StocksUI33StockFeedBlueprintModifierFactory_watchlistManager);
  v26 = (_QWORD *)(a13 + OBJC_IVAR____TtC8StocksUI33StockFeedBlueprintModifierFactory_chartManager);
  *v26 = a5;
  v26[1] = a6;
  sub_1DC097DD0(a7, a13 + OBJC_IVAR____TtC8StocksUI33StockFeedBlueprintModifierFactory_appConfigurationManager);
  *(_QWORD *)(a13 + OBJC_IVAR____TtC8StocksUI33StockFeedBlueprintModifierFactory_offlineManager) = a8;
  *(_BYTE *)(a13 + OBJC_IVAR____TtC8StocksUI33StockFeedBlueprintModifierFactory_newsSource) = a10 & 1;
  return a13;
}

uint64_t sub_1DC239AEC(uint64_t a1, __int128 *a2, __int128 *a3, __int128 *a4, uint64_t a5, uint64_t a6, __int128 *a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t *boxed_opaque_existential_1;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _BYTE v38[12];
  int v39;
  uint64_t v40;
  uint64_t v41;
  __int128 *v42;
  __int128 *v43;
  __int128 *v44;
  uint64_t v45;
  uint64_t v46;
  __int128 *v47;
  uint64_t v48;
  uint64_t v49[3];
  uint64_t v50;
  uint64_t v51;
  uint64_t v52[3];
  uint64_t v53;
  uint64_t v54;

  v47 = a7;
  v48 = a8;
  v45 = a5;
  v46 = a6;
  v43 = a3;
  v44 = a4;
  v41 = a1;
  v42 = a2;
  v40 = a19;
  v39 = a10 & 1;
  v19 = *(_QWORD *)(a16 - 8);
  MEMORY[0x1E0C80A78](a1);
  v21 = &v38[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v53 = a14;
  v54 = v22;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v52);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a14 - 8) + 32))(boxed_opaque_existential_1, a9, a14);
  v50 = a15;
  v51 = a18;
  v24 = __swift_allocate_boxed_opaque_existential_1(v49);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a15 - 8) + 32))(v24, a11, a15);
  v25 = swift_allocObject();
  v26 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v52, v53);
  MEMORY[0x1E0C80A78](v26);
  v28 = (uint64_t *)&v38[-((v27 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(uint64_t *))(v29 + 16))(v28);
  v30 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v49, v50);
  MEMORY[0x1E0C80A78](v30);
  v32 = (uint64_t *)&v38[-((v31 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(uint64_t *))(v33 + 16))(v32);
  v34 = *v28;
  v35 = *v32;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v19 + 16))(v21, a12, a16);
  v36 = sub_1DC239950(v41, v42, v43, v44, v45, v46, v47, v48, v34, v39, v35, (uint64_t)v21, v25, a16, v40);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v49);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v52);
  return v36;
}

void sub_1DC239CF0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB29E00)
  {
    type metadata accessor for StockFeedSectionDescriptor();
    type metadata accessor for StockFeedModel();
    sub_1DC080808(&qword_1EDB36EE0, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedSectionDescriptor, (uint64_t)&unk_1DC4167B0);
    sub_1DC080808(&qword_1EDB2D770, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedModel, (uint64_t)&unk_1DC429058);
    v0 = sub_1DC4049A8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB29E00);
  }
}

unint64_t sub_1DC239DB8()
{
  unint64_t result;

  result = qword_1F034F868;
  if (!qword_1F034F868)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC417164, &type metadata for StockFeedWatchStateChangeBlueprintModifier);
    atomic_store(result, (unint64_t *)&qword_1F034F868);
  }
  return result;
}

uint64_t sub_1DC239DFC(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for StockFeedNewsFailedBlueprintModifier(a2, a1);
  return a2;
}

unint64_t sub_1DC239E38()
{
  unint64_t result;

  result = qword_1EDB41738;
  if (!qword_1EDB41738)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC4184A0, &type metadata for StockFeedNewsFailedBlueprintModifier);
    atomic_store(result, (unint64_t *)&qword_1EDB41738);
  }
  return result;
}

uint64_t sub_1DC239E7C(uint64_t a1)
{
  destroy for StockFeedNewsFailedBlueprintModifier(a1);
  return a1;
}

unint64_t sub_1DC239EB0()
{
  unint64_t result;

  result = qword_1F034F870;
  if (!qword_1F034F870)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC40FEAC, &type metadata for StockFeedOnlineBlueprintModifier);
    atomic_store(result, (unint64_t *)&qword_1F034F870);
  }
  return result;
}

uint64_t sub_1DC239EF4(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for StockFeedNewsExpandDataBlueprintModifier(a2, a1);
  return a2;
}

unint64_t sub_1DC239F30()
{
  unint64_t result;

  result = qword_1EDB3E358;
  if (!qword_1EDB3E358)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC4158A4, &type metadata for StockFeedNewsExpandDataBlueprintModifier);
    atomic_store(result, (unint64_t *)&qword_1EDB3E358);
  }
  return result;
}

uint64_t sub_1DC239F74(uint64_t a1)
{
  destroy for StockFeedNewsExpandDataBlueprintModifier(a1);
  return a1;
}

uint64_t sub_1DC239FA8(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for StockFeedNewsRefreshDataBlueprintModifier(a2, a1);
  return a2;
}

unint64_t sub_1DC239FE4()
{
  unint64_t result;

  result = qword_1F034F878[0];
  if (!qword_1F034F878[0])
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC426334, &type metadata for StockFeedNewsRefreshDataBlueprintModifier);
    atomic_store(result, qword_1F034F878);
  }
  return result;
}

uint64_t sub_1DC23A028(uint64_t a1)
{
  destroy for StockFeedNewsRefreshDataBlueprintModifier(a1);
  return a1;
}

unint64_t sub_1DC23A05C()
{
  unint64_t result;

  result = qword_1EDB40F08;
  if (!qword_1EDB40F08)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC428DAC, &type metadata for StockFeedRelayoutBlueprintModifier);
    atomic_store(result, (unint64_t *)&qword_1EDB40F08);
  }
  return result;
}

uint64_t sub_1DC23A0A0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  int v9;
  unsigned int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v2 = v1;
  v4 = sub_1DC4011C8();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v5 + 16))(v8, v2, v4, v6);
  v9 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v8, v4);
  if (v9 == *MEMORY[0x1E0DAF1E8])
  {
    v10 = (unsigned int *)MEMORY[0x1E0DACDA0];
LABEL_17:
    v11 = *v10;
    v12 = sub_1DC402F50();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(a1, v11, v12);
  }
  if (v9 == *MEMORY[0x1E0DAF1F0])
  {
    v10 = (unsigned int *)MEMORY[0x1E0DACDA8];
    goto LABEL_17;
  }
  if (v9 == *MEMORY[0x1E0DAF1C0])
  {
    v10 = (unsigned int *)MEMORY[0x1E0DACD80];
    goto LABEL_17;
  }
  if (v9 == *MEMORY[0x1E0DAF1D8])
  {
    v10 = (unsigned int *)MEMORY[0x1E0DACD90];
    goto LABEL_17;
  }
  if (v9 == *MEMORY[0x1E0DAF1C8])
  {
    v10 = (unsigned int *)MEMORY[0x1E0DACD88];
    goto LABEL_17;
  }
  if (v9 == *MEMORY[0x1E0DAF1E0])
  {
    v10 = (unsigned int *)MEMORY[0x1E0DACD98];
    goto LABEL_17;
  }
  if (v9 == *MEMORY[0x1E0DAF1D0])
  {
    v10 = (unsigned int *)MEMORY[0x1E0DACDB0];
    goto LABEL_17;
  }
  if (v9 == *MEMORY[0x1E0DAF1B8])
  {
    v10 = (unsigned int *)MEMORY[0x1E0DACD78];
    goto LABEL_17;
  }
  result = sub_1DC4099DC();
  __break(1u);
  return result;
}

uint64_t *sub_1DC23A260(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int EnumCaseMultiPayload;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_1DC4010E4();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
      sub_1DC1940A8();
      *(uint64_t *)((char *)a1 + *(int *)(v7 + 48)) = *(uint64_t *)((char *)a2 + *(int *)(v7 + 48));
      swift_retain();
    }
    else
    {
      type metadata accessor for StocksActivity.Article(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *a1 = *a2;
        swift_unknownObjectRetain();
      }
      else
      {
        sub_1DC401BB8();
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        *a1 = *a2;
        if (EnumCaseMultiPayload == 1)
        {
          swift_retain();
        }
        else
        {
          sub_1DC1447E4();
          v11 = *(int *)(v10 + 48);
          v12 = (char *)a1 + v11;
          v13 = (char *)a2 + v11;
          v14 = sub_1DC40202C();
          v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
          swift_retain();
          v15(v12, v13, v14);
        }
        swift_storeEnumTagMultiPayload();
        sub_1DC1446B4();
        *(uint64_t *)((char *)a1 + *(int *)(v16 + 48)) = *(uint64_t *)((char *)a2 + *(int *)(v16 + 48));
        v17 = *(int *)(v16 + 64);
        v18 = (char *)a1 + v17;
        v19 = (char *)a2 + v17;
        v20 = *(uint64_t *)((char *)a2 + v17 + 24);
        if (v20)
        {
          v21 = *((_QWORD *)v19 + 4);
          *((_QWORD *)v18 + 3) = v20;
          *((_QWORD *)v18 + 4) = v21;
          (**(void (***)(void))(v20 - 8))();
        }
        else
        {
          v22 = *((_OWORD *)v19 + 1);
          *(_OWORD *)v18 = *(_OWORD *)v19;
          *((_OWORD *)v18 + 1) = v22;
          *((_QWORD *)v18 + 4) = *((_QWORD *)v19 + 4);
        }
      }
      swift_storeEnumTagMultiPayload();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1DC23A45C(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v2 = sub_1DC4010E4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
    sub_1DC1940A8();
    return swift_release();
  }
  else
  {
    type metadata accessor for StocksActivity.Article(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      return swift_unknownObjectRelease();
    }
    else
    {
      sub_1DC401BB8();
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      swift_release();
      if (EnumCaseMultiPayload != 1)
      {
        sub_1DC1447E4();
        v6 = a1 + *(int *)(v5 + 48);
        v7 = sub_1DC40202C();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
      }
      sub_1DC1446B4();
      result = a1 + *(int *)(v8 + 64);
      if (*(_QWORD *)(result + 24))
        return __swift_destroy_boxed_opaque_existential_1(result);
    }
  }
  return result;
}

_QWORD *sub_1DC23A560(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = sub_1DC4010E4();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
    sub_1DC1940A8();
    *(_QWORD *)((char *)a1 + *(int *)(v5 + 48)) = *(_QWORD *)((char *)a2 + *(int *)(v5 + 48));
    swift_retain();
  }
  else
  {
    type metadata accessor for StocksActivity.Article(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      swift_unknownObjectRetain();
    }
    else
    {
      sub_1DC401BB8();
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      *a1 = *a2;
      if (EnumCaseMultiPayload == 1)
      {
        swift_retain();
      }
      else
      {
        sub_1DC1447E4();
        v8 = *(int *)(v7 + 48);
        v9 = (char *)a1 + v8;
        v10 = (char *)a2 + v8;
        v11 = sub_1DC40202C();
        v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
        swift_retain();
        v12(v9, v10, v11);
      }
      swift_storeEnumTagMultiPayload();
      sub_1DC1446B4();
      *(_QWORD *)((char *)a1 + *(int *)(v13 + 48)) = *(_QWORD *)((char *)a2 + *(int *)(v13 + 48));
      v14 = *(int *)(v13 + 64);
      v15 = (char *)a1 + v14;
      v16 = (char *)a2 + v14;
      v17 = *(_QWORD *)((char *)a2 + v14 + 24);
      if (v17)
      {
        v18 = *((_QWORD *)v16 + 4);
        *((_QWORD *)v15 + 3) = v17;
        *((_QWORD *)v15 + 4) = v18;
        (**(void (***)(void))(v17 - 8))();
      }
      else
      {
        v19 = *((_OWORD *)v16 + 1);
        *(_OWORD *)v15 = *(_OWORD *)v16;
        *((_OWORD *)v15 + 1) = v19;
        *((_QWORD *)v15 + 4) = *((_QWORD *)v16 + 4);
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *sub_1DC23A730(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;

  if (a1 != a2)
  {
    sub_1DC23A914((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v4 = sub_1DC4010E4();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
      sub_1DC1940A8();
      *(_QWORD *)((char *)a1 + *(int *)(v5 + 48)) = *(_QWORD *)((char *)a2 + *(int *)(v5 + 48));
      swift_retain();
    }
    else
    {
      type metadata accessor for StocksActivity.Article(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *a1 = *a2;
        swift_unknownObjectRetain();
      }
      else
      {
        sub_1DC401BB8();
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        *a1 = *a2;
        if (EnumCaseMultiPayload == 1)
        {
          swift_retain();
        }
        else
        {
          sub_1DC1447E4();
          v8 = *(int *)(v7 + 48);
          v9 = (char *)a1 + v8;
          v10 = (char *)a2 + v8;
          v11 = sub_1DC40202C();
          v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
          swift_retain();
          v12(v9, v10, v11);
        }
        swift_storeEnumTagMultiPayload();
        sub_1DC1446B4();
        *(_QWORD *)((char *)a1 + *(int *)(v13 + 48)) = *(_QWORD *)((char *)a2 + *(int *)(v13 + 48));
        v14 = *(int *)(v13 + 64);
        v15 = (char *)a1 + v14;
        v16 = (char *)a2 + v14;
        v17 = *(_QWORD *)((char *)a2 + v14 + 24);
        if (v17)
        {
          *((_QWORD *)v15 + 3) = v17;
          *((_QWORD *)v15 + 4) = *((_QWORD *)v16 + 4);
          (**(void (***)(void))(v17 - 8))();
        }
        else
        {
          v18 = *(_OWORD *)v16;
          v19 = *((_OWORD *)v16 + 1);
          *((_QWORD *)v15 + 4) = *((_QWORD *)v16 + 4);
          *(_OWORD *)v15 = v18;
          *((_OWORD *)v15 + 1) = v19;
        }
      }
      swift_storeEnumTagMultiPayload();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1DC23A914(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for StockFeedRouteModel();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for StockFeedRouteModel()
{
  uint64_t result;

  result = qword_1EDB42BA0;
  if (!qword_1EDB42BA0)
    return swift_getSingletonMetadata();
  return result;
}

_QWORD *sub_1DC23A98C(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  __int128 v17;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = sub_1DC4010E4();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
    sub_1DC1940A8();
    *(_QWORD *)((char *)a1 + *(int *)(v5 + 48)) = *(_QWORD *)((char *)a2 + *(int *)(v5 + 48));
  }
  else
  {
    v6 = type metadata accessor for StocksActivity.Article(0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
    else
    {
      v7 = sub_1DC401BB8();
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
      }
      else
      {
        *a1 = *a2;
        sub_1DC1447E4();
        v9 = *(int *)(v8 + 48);
        v10 = (char *)a1 + v9;
        v11 = (char *)a2 + v9;
        v12 = sub_1DC40202C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
        swift_storeEnumTagMultiPayload();
      }
      sub_1DC1446B4();
      *(_QWORD *)((char *)a1 + *(int *)(v13 + 48)) = *(_QWORD *)((char *)a2 + *(int *)(v13 + 48));
      v14 = *(int *)(v13 + 64);
      v15 = (char *)a1 + v14;
      v16 = (char *)a2 + v14;
      *((_QWORD *)v15 + 4) = *((_QWORD *)v16 + 4);
      v17 = *((_OWORD *)v16 + 1);
      *(_OWORD *)v15 = *(_OWORD *)v16;
      *((_OWORD *)v15 + 1) = v17;
      swift_storeEnumTagMultiPayload();
    }
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *sub_1DC23AB20(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  __int128 v17;

  if (a1 != a2)
  {
    sub_1DC23A914((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v4 = sub_1DC4010E4();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
      sub_1DC1940A8();
      *(_QWORD *)((char *)a1 + *(int *)(v5 + 48)) = *(_QWORD *)((char *)a2 + *(int *)(v5 + 48));
    }
    else
    {
      v6 = type metadata accessor for StocksActivity.Article(0);
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
      }
      else
      {
        v7 = sub_1DC401BB8();
        if (swift_getEnumCaseMultiPayload())
        {
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
        }
        else
        {
          *a1 = *a2;
          sub_1DC1447E4();
          v9 = *(int *)(v8 + 48);
          v10 = (char *)a1 + v9;
          v11 = (char *)a2 + v9;
          v12 = sub_1DC40202C();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
          swift_storeEnumTagMultiPayload();
        }
        sub_1DC1446B4();
        *(_QWORD *)((char *)a1 + *(int *)(v13 + 48)) = *(_QWORD *)((char *)a2 + *(int *)(v13 + 48));
        v14 = *(int *)(v13 + 64);
        v15 = (char *)a1 + v14;
        v16 = (char *)a2 + v14;
        *((_QWORD *)v15 + 4) = *((_QWORD *)v16 + 4);
        v17 = *((_OWORD *)v16 + 1);
        *(_OWORD *)v15 = *(_OWORD *)v16;
        *((_OWORD *)v15 + 1) = v17;
        swift_storeEnumTagMultiPayload();
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1DC23ACC4()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  _QWORD v3[6];

  result = type metadata accessor for StocksActivity.Article(319);
  if (v1 <= 0x3F)
  {
    v3[4] = *(_QWORD *)(result - 8) + 64;
    result = sub_1DC4010E4();
    if (v2 <= 0x3F)
    {
      swift_getTupleTypeLayout2();
      v3[5] = v3;
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t sub_1DC23AD58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;

  v0 = sub_1DC408A88();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EDB42650 != -1)
    swift_once();
  sub_1DC0A0728(&qword_1EDB3D5A0, (uint64_t)&unk_1DC41C7D8);
  sub_1DC4012D0();
  v4 = HIBYTE(v12) & 0xF;
  if ((v12 & 0x2000000000000000) == 0)
    v4 = v11 & 0xFFFFFFFFFFFFLL;
  if (!v4)
  {
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  sub_1DC408A7C();
  v5 = sub_1DC408A58();
  v7 = v6;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  if (v7 >> 60 == 15)
  {
LABEL_9:
    v11 = MEMORY[0x1E0DEE9E0];
    sub_1DC089DA4(0, &qword_1EDB296D0, (uint64_t (*)(uint64_t))sub_1DC113A94, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    return sub_1DC402D58();
  }
  sub_1DC402470();
  swift_allocObject();
  sub_1DC402464();
  sub_1DC113A94();
  sub_1DC23B838();
  sub_1DC402458();
  swift_release();
  sub_1DC089DA4(0, &qword_1EDB296D0, (uint64_t (*)(uint64_t))sub_1DC113A94, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  v9 = sub_1DC402D58();
  sub_1DC23B824(v5, v7);
  return v9;
}

uint64_t sub_1DC23B030()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;

  v0 = sub_1DC408A88();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EDB42658 != -1)
    swift_once();
  sub_1DC0A0728(&qword_1EDB3D5A0, (uint64_t)&unk_1DC41C7D8);
  sub_1DC4012D0();
  v4 = HIBYTE(v12) & 0xF;
  if ((v12 & 0x2000000000000000) == 0)
    v4 = v11 & 0xFFFFFFFFFFFFLL;
  if (!v4)
  {
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  sub_1DC408A7C();
  v5 = sub_1DC408A58();
  v7 = v6;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  if (v7 >> 60 == 15)
  {
LABEL_9:
    v11 = MEMORY[0x1E0DEE9E8];
    sub_1DC089DA4(0, &qword_1EDB42680, (uint64_t (*)(uint64_t))sub_1DC23B770, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    return sub_1DC402D58();
  }
  sub_1DC402470();
  swift_allocObject();
  sub_1DC402464();
  sub_1DC23B770();
  sub_1DC23B7CC();
  sub_1DC402458();
  swift_release();
  sub_1DC089DA4(0, &qword_1EDB42680, (uint64_t (*)(uint64_t))sub_1DC23B770, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  v9 = sub_1DC402D58();
  sub_1DC23B824(v5, v7);
  return v9;
}

uint64_t sub_1DC23B308()
{
  uint64_t v0;

  if (qword_1EDB42658 != -1)
    swift_once();
  v0 = swift_bridgeObjectRetain();
  sub_1DC32B8B8(v0);
  swift_bridgeObjectRelease();
  sub_1DC408D10();
  swift_release();
  sub_1DC0A0728(&qword_1EDB3D5A8, (uint64_t)&unk_1DC41C818);
  sub_1DC4013B4();
  swift_bridgeObjectRelease();
  sub_1DC0A0764(0, (unint64_t *)&qword_1EDB29708);
  swift_allocObject();
  return sub_1DC402D58();
}

uint64_t sub_1DC23B420(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DC23B478(a1, a2, a3, &qword_1EDB29028);
}

uint64_t sub_1DC23B43C()
{
  return sub_1DC23AD58();
}

uint64_t sub_1DC23B45C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DC23B478(a1, a2, a3, &qword_1EDB42650);
}

uint64_t sub_1DC23B478(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  if (*a4 != -1)
    swift_once();
  sub_1DC408998();
  sub_1DC0A0728(&qword_1EDB3D5A8, (uint64_t)&unk_1DC41C818);
  sub_1DC4013B4();
  swift_bridgeObjectRelease();
  sub_1DC0A0764(0, (unint64_t *)&qword_1EDB29708);
  swift_allocObject();
  return sub_1DC402D58();
}

uint64_t sub_1DC23B568()
{
  return sub_1DC23B030();
}

uint64_t sub_1DC23B588()
{
  return sub_1DC23B308();
}

uint64_t sub_1DC23B5A8()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v5;

  sub_1DC0BB2BC(0);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v5 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1F034AFA8 != -1)
    swift_once();
  sub_1DC0A0728(&qword_1EDB3D5A0, (uint64_t)&unk_1DC41C7D8);
  sub_1DC4012D0();
  v3 = sub_1DC3FFFEC();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 0, 1, v3);
  sub_1DC089DA4(0, &qword_1F034F8A8, (uint64_t (*)(uint64_t))sub_1DC0BB2BC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  return sub_1DC402D58();
}

uint64_t sub_1DC23B6BC()
{
  if (qword_1F034AFA8 != -1)
    swift_once();
  sub_1DC0A0728(&qword_1EDB3D5A8, (uint64_t)&unk_1DC41C818);
  sub_1DC4013B4();
  sub_1DC0A0764(0, (unint64_t *)&qword_1EDB29708);
  swift_allocObject();
  return sub_1DC402D58();
}

void sub_1DC23B770()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB427A0)
  {
    v0 = sub_1DC408E78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB427A0);
  }
}

unint64_t sub_1DC23B7CC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EDB427A8;
  if (!qword_1EDB427A8)
  {
    sub_1DC23B770();
    v2 = MEMORY[0x1E0DEA9A0];
    result = MEMORY[0x1DF0CAB8C](MEMORY[0x1E0DEB3D8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EDB427A8);
  }
  return result;
}

uint64_t sub_1DC23B824(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_1DC1D565C(a1, a2);
  return a1;
}

unint64_t sub_1DC23B838()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EDB27440;
  if (!qword_1EDB27440)
  {
    sub_1DC113A94();
    v2[0] = MEMORY[0x1E0DEA9A0];
    v2[1] = MEMORY[0x1E0DEB448];
    result = MEMORY[0x1DF0CAB8C](MEMORY[0x1E0DEA0D8], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EDB27440);
  }
  return result;
}

uint64_t sub_1DC23B898@<X0>(uint64_t a1@<X8>)
{
  id *v1;
  id v3;
  void *v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  char v9;
  unsigned int *v10;
  uint64_t v11;
  uint64_t v12;

  v3 = *v1;
  if (objc_msgSend(*v1, sel_isFullTrackAvailableToAll))
    goto LABEL_7;
  v4 = *(id *)((char *)v1 + *(int *)(type metadata accessor for StocksAudioTrack() + 24));
  if ((objc_msgSend(v3, sel_respondsToSelector_, sel_narrativeTrackSample) & 1) == 0)
    goto LABEL_7;
  v5 = v4;
  v6 = objc_msgSend(v3, sel_narrativeTrackSample);
  if (!v6)
  {

    goto LABEL_7;
  }
  v7 = v6;
  sub_1DC23B994();
  v8 = v5;
  v9 = sub_1DC4093C4();

  if ((v9 & 1) == 0)
  {
LABEL_7:
    v10 = (unsigned int *)MEMORY[0x1E0DAD020];
    goto LABEL_8;
  }
  v10 = (unsigned int *)MEMORY[0x1E0DAD028];
LABEL_8:
  v11 = *v10;
  v12 = sub_1DC40310C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(a1, v11, v12);
}

unint64_t sub_1DC23B994()
{
  unint64_t result;

  result = qword_1F034FFD0;
  if (!qword_1F034FFD0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1F034FFD0);
  }
  return result;
}

uint64_t sub_1DC23B9D0(uint64_t a1)
{
  return sub_1DC23BA34(a1, 0xD000000000000033, 0x80000001DC43F640, &qword_1F034F8B0);
}

uint64_t static Settings.Tips.audioQueuedViaArticleViewer.getter()
{
  return sub_1DC10D910(&qword_1F034AFD8);
}

uint64_t sub_1DC23BA10(uint64_t a1)
{
  return sub_1DC23BA34(a1, 0xD00000000000002ALL, 0x80000001DC43F610, &qword_1F034F8B8);
}

uint64_t sub_1DC23BA34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  _BYTE v14[16];

  v5 = sub_1DC401354();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v14[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = sub_1DC401348();
  v10 = MEMORY[0x1E0C80A78](v9);
  (*(void (**)(_BYTE *, _QWORD, __n128))(v12 + 104))(&v14[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)], *MEMORY[0x1E0DB57E0], v10);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0DB5800], v5);
  v14[15] = 0;
  sub_1DC08A0F4(0, (unint64_t *)&qword_1EDB29110);
  swift_allocObject();
  result = sub_1DC4013A8();
  *a4 = result;
  return result;
}

uint64_t static Settings.Tips.audioQueuedViaFeed.getter()
{
  return sub_1DC10D910(&qword_1F034AFE0);
}

uint64_t sub_1DC23BB8C(uint64_t a1)
{
  return sub_1DC23BA34(a1, 0xD00000000000002DLL, 0x80000001DC43F5E0, &qword_1F034F8C0);
}

uint64_t static Settings.Tips.savedViaArticleViewer.getter()
{
  return sub_1DC10D910(&qword_1F034AFE8);
}

uint64_t sub_1DC23BBCC(uint64_t a1)
{
  return sub_1DC23BA34(a1, 0xD000000000000024, 0x80000001DC43F5B0, &qword_1F034F8C8);
}

uint64_t static Settings.Tips.savedViaFeed.getter()
{
  return sub_1DC10D910(&qword_1F034AFF0);
}

uint64_t sub_1DC23BC0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;

  v0 = sub_1DC401354();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1DC401348();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1DC3FFFEC();
  MEMORY[0x1E0C80A78](v8);
  sub_1DC3FFF2C();
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DB57E0], v4);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB5800], v0);
  sub_1DC225A44();
  swift_allocObject();
  result = sub_1DC4013A8();
  qword_1EDB28EA8 = result;
  return result;
}

uint64_t static Settings.Tips.Earnings.lastShownDate.getter()
{
  return sub_1DC10D910(&qword_1EDB28EB8);
}

uint64_t sub_1DC23BD8C(uint64_t a1)
{
  return sub_1DC23BE00(a1, MEMORY[0x1E0DB57E0], 0xD000000000000025, 0x80000001DC43F550, &qword_1EDB28EC0);
}

uint64_t static Settings.Tips.Earnings.presentedCount.getter()
{
  return sub_1DC10D910(&qword_1EDB28ED0);
}

uint64_t sub_1DC23BDD4(uint64_t a1)
{
  return sub_1DC23BE00(a1, MEMORY[0x1E0DB57E8], 0xD000000000000029, 0x80000001DC43F520, &qword_1F034F8D0);
}

uint64_t sub_1DC23BE00(uint64_t a1, unsigned int *a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  _QWORD v16[2];

  v7 = sub_1DC401354();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1DC401348();
  v12 = MEMORY[0x1E0C80A78](v11);
  (*(void (**)(char *, _QWORD, __n128))(v14 + 104))((char *)v16 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), *a2, v12);
  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E0DB5800], v7);
  v16[1] = 0;
  sub_1DC08A0F4(0, (unint64_t *)&qword_1EDB29118);
  swift_allocObject();
  result = sub_1DC4013A8();
  *a5 = result;
  return result;
}

uint64_t static Settings.Tips.Earnings.ConfigOverrides.tipMaxPresentedCount.getter()
{
  return sub_1DC10D910(&qword_1F034AFF8);
}

uint64_t sub_1DC23BF54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];
  unint64_t v11;
  unint64_t v12;

  v0 = sub_1DC401354();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1DC401348();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC08A0F4(0, (unint64_t *)&unk_1F034F208);
  v10[1] = v8;
  v12 = 0xBFF0000000000000;
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DB57E8], v4);
  sub_1DC23C6A4();
  sub_1DC23C6F8();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1DC411E30;
  v11 = 0xBFF0000000000000;
  sub_1DC401360();
  v11 = 0x404E000000000000;
  sub_1DC401360();
  v11 = 0x4066800000000000;
  sub_1DC401360();
  v11 = 0x4072C00000000000;
  sub_1DC401360();
  v11 = 0x4082C00000000000;
  sub_1DC401360();
  v11 = 0x408C200000000000;
  sub_1DC401360();
  v11 = 0x4092C00000000000;
  sub_1DC401360();
  v11 = 0x409C200000000000;
  sub_1DC401360();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB5800], v0);
  result = sub_1DC401378();
  qword_1F034F8D8 = result;
  return result;
}

uint64_t static Settings.Tips.Earnings.ConfigOverrides.tipFrequencyInterval.getter()
{
  return sub_1DC10D910(&qword_1F034B000);
}

uint64_t Settings.Tips.Earnings.ConfigOverrides.__allocating_init(key:defaultValue:access:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  v5 = sub_1DC401348();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a4, v5);
  v9 = sub_1DC4012F4();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a4, v5);
  return v9;
}

uint64_t Settings.Tips.Earnings.ConfigOverrides.init(key:defaultValue:access:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v5 = sub_1DC401348();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v6 + 16))((char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a4, v5, v7);
  v9 = sub_1DC4012F4();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a4, v5);
  return v9;
}

uint64_t Settings.Tips.Earnings.ConfigOverrides.__deallocating_deinit()
{
  _s11TeaSettings0B0C8StocksUIE4TipsV8EarningsV15ConfigOverridesCfd_0();
  return swift_deallocClassInstance();
}

uint64_t sub_1DC23C4DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;

  v0 = sub_1DC401348();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v10 - v6;
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v1 + 104))((char *)&v10 - v6, *MEMORY[0x1E0DB57E8], v0, v5);
  type metadata accessor for Settings.Tips.Earnings.ConfigOverrides();
  swift_allocObject();
  (*(void (**)(char *, char *, uint64_t))(v1 + 16))(v3, v7, v0);
  v8 = sub_1DC4012F4();
  result = (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v7, v0);
  qword_1EDB28F10 = v8;
  return result;
}

uint64_t static Settings.Tips.Earnings.configOverrides.getter()
{
  return sub_1DC10D910(&qword_1EDB28F18);
}

ValueMetadata *type metadata accessor for Settings.Tips()
{
  return &type metadata for Settings.Tips;
}

ValueMetadata *type metadata accessor for Settings.Tips.Earnings()
{
  return &type metadata for Settings.Tips.Earnings;
}

uint64_t type metadata accessor for Settings.Tips.Earnings.ConfigOverrides()
{
  uint64_t result;

  result = qword_1EDB28ED8;
  if (!qword_1EDB28ED8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1DC23C660()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1DC23C69C()
{
  return type metadata accessor for Settings.Tips.Earnings.ConfigOverrides();
}

void sub_1DC23C6A4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F034F8F8)
  {
    sub_1DC23C6F8();
    v0 = sub_1DC4099C4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1F034F8F8);
  }
}

void sub_1DC23C6F8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F034F900)
  {
    v0 = sub_1DC40136C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1F034F900);
  }
}

char *sub_1DC23C74C(double a1, double a2, double a3, double a4)
{
  char *v4;
  objc_class *ObjectType;
  uint64_t v10;
  Class v11;
  id v12;
  char *v13;
  uint64_t v14;
  char *v15;
  void *v16;
  char *v17;
  id v18;
  id v19;
  uint64_t v20;
  char *v21;
  unint64_t v22;
  uint64_t v23;
  objc_super v25;

  ObjectType = (objc_class *)swift_getObjectType();
  v10 = OBJC_IVAR____TtC8StocksUI19CreateWatchlistView_onTap;
  sub_1DC12F234();
  v12 = objc_allocWithZone(v11);
  v13 = v4;
  *(_QWORD *)&v4[v10] = objc_msgSend(v12, sel_init);
  v14 = OBJC_IVAR____TtC8StocksUI19CreateWatchlistView_newWatchlistButton;
  *(_QWORD *)&v13[v14] = objc_msgSend((id)objc_opt_self(), sel_buttonWithType_, 1);

  v25.receiver = v13;
  v25.super_class = ObjectType;
  v15 = (char *)objc_msgSendSuper2(&v25, sel_initWithFrame_, a1, a2, a3, a4);
  v16 = *(void **)&v15[OBJC_IVAR____TtC8StocksUI19CreateWatchlistView_newWatchlistButton];
  v17 = v15;
  objc_msgSend(v17, sel_addSubview_, v16);
  v18 = *(id *)&v17[OBJC_IVAR____TtC8StocksUI19CreateWatchlistView_onTap];
  v19 = v16;
  sub_1DC406898();

  objc_msgSend(v17, sel_setIsAccessibilityElement_, 1);
  v20 = *MEMORY[0x1E0DC4660];
  v21 = v17;
  v22 = (unint64_t)objc_msgSend(v21, sel_accessibilityTraits);
  if ((v20 & ~v22) != 0)
    v23 = v20;
  else
    v23 = 0;
  objc_msgSend(v21, sel_setAccessibilityTraits_, v23 | v22);

  return v21;
}

uint64_t type metadata accessor for CreateWatchlistView()
{
  return objc_opt_self();
}

void sub_1DC23CA1C()
{

}

void sub_1DC23CA48()
{
  sub_1DC23CAA4(&qword_1F034C580, (uint64_t)&unk_1DC41C94C);
  JUMPOUT(0x1DF0C7418);
}

uint64_t sub_1DC23CA80()
{
  return sub_1DC23CAA4(&qword_1F034F940, (uint64_t)&unk_1DC41C914);
}

uint64_t sub_1DC23CAA4(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t WatchlistView;

  result = *a1;
  if (!result)
  {
    WatchlistView = type metadata accessor for CreateWatchlistView();
    result = MEMORY[0x1DF0CAB8C](a2, WatchlistView);
    atomic_store(result, a1);
  }
  return result;
}

id sub_1DC23CAE0()
{
  id result;

  result = sub_1DC23CB58();
  qword_1F0368A50 = (uint64_t)result;
  return result;
}

id sub_1DC23CB08()
{
  id result;

  result = sub_1DC23CB58();
  qword_1F0368A58 = (uint64_t)result;
  return result;
}

id sub_1DC23CB30()
{
  id result;

  result = sub_1DC23CB58();
  qword_1F0368A60 = (uint64_t)result;
  return result;
}

id sub_1DC23CB58()
{
  id v0;
  void *v1;
  void *v2;
  void *v3;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37F0]), sel_init);
  objc_msgSend(v0, sel_setNumberStyle_, 3);
  sub_1DC0E7878();
  v1 = (void *)sub_1DC4093A0();
  objc_msgSend(v0, sel_setMultiplier_, v1);

  objc_msgSend(v0, sel_setMinimumFractionDigits_, 2);
  objc_msgSend(v0, sel_setMaximumFractionDigits_, 2);
  v2 = (void *)sub_1DC408A1C();
  objc_msgSend(v0, sel_setPositivePrefix_, v2);

  v3 = (void *)sub_1DC408A1C();
  objc_msgSend(v0, sel_setNegativePrefix_, v3);

  return v0;
}

uint64_t type metadata accessor for PercentChangeFormatter()
{
  return objc_opt_self();
}

uint64_t sub_1DC23CC88(char a1, double a2, double a3)
{
  double v3;
  double v4;
  double v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  uint64_t v11;

  v3 = a2 - a3;
  v4 = a3 / v3;
  if (v3 <= 0.0)
    v5 = 0.0;
  else
    v5 = v4;
  if ((a1 & 1) != 0)
  {
    if (qword_1F034B018 != -1)
      swift_once();
    v6 = (void *)qword_1F0368A58;
    v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithDouble_, v5);
    v8 = objc_msgSend(v6, sel_stringFromNumber_, v7);
  }
  else
  {
    if (qword_1F034B010 != -1)
      swift_once();
    v9 = (void *)qword_1F0368A50;
    v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithDouble_, v5);
    v8 = objc_msgSend(v9, sel_stringFromNumber_, v7);
  }
  v10 = v8;

  if (!v10)
    return 0;
  v11 = sub_1DC408A4C();

  return v11;
}

uint64_t sub_1DC23CDD4(double a1, double a2)
{
  double v3;
  double v4;
  double v5;
  uint64_t ObjCClassFromMetadata;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v23;

  v3 = a1 - a2;
  v4 = a2 / v3;
  if (v3 <= 0.0)
    v5 = 0.0;
  else
    v5 = v4;
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v7 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  if (a2 >= 0.0)
    v23 = 0x80000001DC43F7A0;
  else
    v23 = 0x80000001DC43F730;
  v8 = sub_1DC3FFC80();
  v10 = v9;

  if (qword_1F034B020 != -1)
    swift_once();
  v11 = (void *)qword_1F0368A60;
  v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithDouble_, v5, v23);
  v13 = objc_msgSend(v11, sel_stringFromNumber_, v12);

  if (v13)
  {
    v14 = sub_1DC408A4C();
    v16 = v15;

    v17 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
    sub_1DC3FFC80();

    sub_1DC0E7FF0();
    v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_1DC40C740;
    v19 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v18 + 56) = MEMORY[0x1E0DEA968];
    v20 = sub_1DC0E7FAC();
    *(_QWORD *)(v18 + 32) = v8;
    *(_QWORD *)(v18 + 40) = v10;
    *(_QWORD *)(v18 + 96) = v19;
    *(_QWORD *)(v18 + 104) = v20;
    *(_QWORD *)(v18 + 64) = v20;
    *(_QWORD *)(v18 + 72) = v14;
    *(_QWORD *)(v18 + 80) = v16;
    v21 = sub_1DC408A28();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v21;
}

uint64_t AttributionProviderType.source.getter(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(a2 + 8))();
  sub_1DC402788();
  return swift_release();
}

uint64_t dispatch thunk of AttributionProviderType.observableSource.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_1DC23D0A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_1DC408DB8();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_1DC408DAC();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_1DC0B091C(a1, (unint64_t *)&unk_1EDB3F7C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF0750]);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1DC408D88();
    swift_unknownObjectRelease();
  }
LABEL_5:
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_1DC23D1F8(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void *v16;
  uint64_t v19[5];

  v3 = v2;
  v6 = type metadata accessor for AttributionSource();
  MEMORY[0x1E0C80A78](v6);
  v8 = (uint64_t *)((char *)&v19[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = sub_1DC402AC4();
  v10 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4198];
  MEMORY[0x1E0C80A78](v9);
  v11 = v2 + OBJC_IVAR____TtC8StocksUI19AttributionProvider_currentSource;
  v12 = sub_1DC400A00();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC8StocksUI19AttributionProvider_currentDownloadTask) = 0;
  v13 = OBJC_IVAR____TtC8StocksUI19AttributionProvider_imageFetchDeduper;
  v19[0] = MEMORY[0x1E0DEE9D8];
  sub_1DC080808((unint64_t *)&unk_1EDB295B0, v10, MEMORY[0x1E0DB41A8]);
  sub_1DC089DA4(0, (unint64_t *)&qword_1EDB3F6B0, v10, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1DC23FB9C();
  sub_1DC40964C();
  sub_1DC23FBFC();
  swift_allocObject();
  *(_QWORD *)(v2 + v13) = sub_1DC4026B0();
  sub_1DC0824D4((uint64_t)a1, v2 + OBJC_IVAR____TtC8StocksUI19AttributionProvider_attributionProvider);
  sub_1DC0824D4(a2, v2 + OBJC_IVAR____TtC8StocksUI19AttributionProvider_attributionAssetManager);
  v14 = (char *)v8 + *(int *)(v6 + 20);
  v15 = sub_1DC3FFDD0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
  *v8 = 0;
  v8[1] = 0xE000000000000000;
  *(_QWORD *)((char *)v8 + *(int *)(v6 + 24)) = 0;
  sub_1DC089DA4(0, (unint64_t *)&unk_1EDB28908, (uint64_t (*)(uint64_t))type metadata accessor for AttributionSource, MEMORY[0x1E0DB39E0]);
  swift_allocObject();
  *(_QWORD *)(v3 + 16) = sub_1DC40277C();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC400D90();
  swift_allocObject();
  swift_weakInit();
  v16 = (void *)sub_1DC402C80();
  sub_1DC402794();
  swift_release();
  swift_release();

  __swift_destroy_boxed_opaque_existential_1(a2);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v3;
}

uint64_t sub_1DC23D4C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v4 = sub_1DC400A00();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = MEMORY[0x1E0C80A78](v4);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v5 + 16))((char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4, v7);
  v8 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = a2;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v9 + v8, (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  swift_retain();
  sub_1DC402E3C();
  return swift_release();
}

uint64_t sub_1DC23D5A8(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1DC23D604(a2);
    return swift_release();
  }
  return result;
}

uint64_t sub_1DC23D604(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t);
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  __n128 v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t (*v44)(uint64_t);
  unsigned int (*v45)(uint64_t, uint64_t, uint64_t);
  uint64_t v46;
  uint64_t result;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  char *v51;
  char v52;
  void (*v53)(char *, uint64_t);
  uint64_t (*v54)(uint64_t);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t *v61;
  uint64_t v62;
  char *v63;
  void (*v64)(char *, char *, uint64_t);
  char *v65;
  char *v66;
  char *v67;
  char *v68;
  void (*v69)(char *, uint64_t);
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t *v73;
  uint64_t v74;
  void *v75;
  id v76;
  char *v77;
  int v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  void *v84;
  id v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  _QWORD *v94;
  unint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t *v103;
  uint64_t v104;
  uint64_t v105;
  _QWORD v106[2];
  char *v107;
  char *v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  char *v117;
  char *v118;
  char *v119;
  char *v120;
  _QWORD *v121;
  void (*v122)(char *, _QWORD, uint64_t, uint64_t);
  void (*v123)(char *, char *, uint64_t);
  uint64_t v124;
  uint64_t v125;
  uint64_t *v126;
  char *v127;
  uint64_t v128;
  void (*v129)(char *, uint64_t, uint64_t, __n128);
  uint64_t v130;
  uint64_t v131;

  v112 = sub_1DC400C88();
  v111 = *(_QWORD *)(v112 - 8);
  MEMORY[0x1E0C80A78](v112);
  v108 = (char *)v106 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1DC089DA4(0, (unint64_t *)&unk_1EDB3F7C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF0750], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v5);
  v114 = (uint64_t)v106 - v6;
  sub_1DC089DA4(0, (unint64_t *)&unk_1EDB28A70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], v4);
  MEMORY[0x1E0C80A78](v7);
  v107 = (char *)v106 - v8;
  v113 = sub_1DC400C4C();
  v116 = *(_QWORD *)(v113 - 8);
  MEMORY[0x1E0C80A78](v113);
  v110 = (char *)v106 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v109 = v9;
  MEMORY[0x1E0C80A78](v10);
  v115 = (char *)v106 - v11;
  v125 = type metadata accessor for AttributionSource();
  MEMORY[0x1E0C80A78](v125);
  v106[0] = (char *)v106 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v126 = (_QWORD *)((char *)v106 - v14);
  sub_1DC089DA4(0, &qword_1EDB288C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAEC78], v4);
  MEMORY[0x1E0C80A78](v15);
  v123 = (void (*)(char *, char *, uint64_t))((char *)v106 - v16);
  v131 = sub_1DC400C94();
  v124 = *(_QWORD *)(v131 - 8);
  MEMORY[0x1E0C80A78](v131);
  v118 = (char *)v106 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v117 = (char *)v106 - v19;
  MEMORY[0x1E0C80A78](v20);
  v120 = (char *)v106 - v21;
  MEMORY[0x1E0C80A78](v22);
  v127 = (char *)v106 - v23;
  v24 = sub_1DC400A00();
  v25 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DAE9C8];
  v26 = *(_QWORD **)(v24 - 8);
  MEMORY[0x1E0C80A78](v24);
  v106[1] = v27;
  v119 = (char *)v106 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC23FD60();
  v29 = v28;
  MEMORY[0x1E0C80A78](v28);
  v31 = (char *)v106 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC089DA4(0, &qword_1EDB288A0, v25, v4);
  MEMORY[0x1E0C80A78](v32);
  v34 = (char *)v106 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v35);
  v37 = (char *)v106 - v36;
  v39 = MEMORY[0x1E0C80A78](v38);
  v41 = (char *)v106 - v40;
  v129 = (void (*)(char *, uint64_t, uint64_t, __n128))v26[2];
  v130 = a1;
  v129((char *)v106 - v40, a1, v24, v39);
  v122 = (void (*)(char *, _QWORD, uint64_t, uint64_t))v26[7];
  v122(v41, 0, 1, v24);
  v128 = v1;
  v42 = v1 + OBJC_IVAR____TtC8StocksUI19AttributionProvider_currentSource;
  swift_beginAccess();
  v43 = (uint64_t)&v31[*(int *)(v29 + 48)];
  v44 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DAE9C8];
  sub_1DC0EDD64((uint64_t)v41, (uint64_t)v31, &qword_1EDB288A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAE9C8]);
  sub_1DC0EDD64(v42, v43, &qword_1EDB288A0, v44);
  v121 = v26;
  v45 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v26[6];
  v46 = v24;
  if (v45((uint64_t)v31, 1, v24) == 1)
  {
    sub_1DC0B091C((uint64_t)v41, &qword_1EDB288A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAE9C8]);
    if (v45(v43, 1, v24) == 1)
      return sub_1DC0B091C((uint64_t)v31, &qword_1EDB288A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAE9C8]);
  }
  else
  {
    sub_1DC0EDD64((uint64_t)v31, (uint64_t)v37, &qword_1EDB288A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAE9C8]);
    if (v45(v43, 1, v24) != 1)
    {
      v50 = v121;
      v51 = v119;
      ((void (*)(char *, uint64_t, uint64_t))v121[4])(v119, v43, v46);
      sub_1DC080808((unint64_t *)&unk_1EDB28890, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAE9C8], MEMORY[0x1E0DAE9D8]);
      v52 = sub_1DC4089F8();
      v53 = (void (*)(char *, uint64_t))v50[1];
      v53(v51, v46);
      v54 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DAE9C8];
      sub_1DC0B091C((uint64_t)v41, &qword_1EDB288A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAE9C8]);
      v53(v37, v46);
      result = sub_1DC0B091C((uint64_t)v31, &qword_1EDB288A0, v54);
      if ((v52 & 1) != 0)
        return result;
      goto LABEL_7;
    }
    sub_1DC0B091C((uint64_t)v41, &qword_1EDB288A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAE9C8]);
    ((void (*)(char *, uint64_t))v121[1])(v37, v24);
  }
  sub_1DC0926D8((uint64_t)v31, (uint64_t (*)(_QWORD))sub_1DC23FD60);
LABEL_7:
  ((void (*)(char *, uint64_t, uint64_t))v129)(v34, v130, v46);
  v122(v34, 0, 1, v46);
  swift_beginAccess();
  sub_1DC23FDD8((uint64_t)v34, v42);
  swift_endAccess();
  v48 = OBJC_IVAR____TtC8StocksUI19AttributionProvider_currentDownloadTask;
  v49 = v128;
  if (*(_QWORD *)(v128 + OBJC_IVAR____TtC8StocksUI19AttributionProvider_currentDownloadTask))
  {
    swift_retain();
    sub_1DC408DC4();
    swift_release();
  }
  v55 = v131;
  v56 = v124;
  *(_QWORD *)(v49 + v48) = 0;
  swift_release();
  v57 = (uint64_t)v123;
  sub_1DC4009DC();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v56 + 48))(v57, 1, v55) == 1)
  {
    sub_1DC0B091C(v57, &qword_1EDB288C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAEC78]);
    v58 = sub_1DC4009E8();
    v60 = v59;
    v62 = v125;
    v61 = v126;
    sub_1DC4009F4();
    *v61 = v58;
    v61[1] = v60;
    *(uint64_t *)((char *)v61 + *(int *)(v62 + 24)) = 0;
    sub_1DC080808(&qword_1EDB28960, (uint64_t (*)(uint64_t))type metadata accessor for AttributionSource, (uint64_t)&protocol conformance descriptor for AttributionSource);
    sub_1DC4027A0();
    return sub_1DC0926D8((uint64_t)v61, (uint64_t (*)(_QWORD))type metadata accessor for AttributionSource);
  }
  v124 = v48;
  v63 = v127;
  (*(void (**)(char *, uint64_t, uint64_t))(v56 + 32))(v127, v57, v55);
  v64 = *(void (**)(char *, char *, uint64_t))(v56 + 16);
  v65 = v120;
  v64(v120, v63, v55);
  v66 = v117;
  v64(v117, v65, v55);
  v67 = v118;
  sub_1DC400C58();
  sub_1DC080808(&qword_1EDB42648, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAEC78], MEMORY[0x1E0DAEC80]);
  LOBYTE(v64) = sub_1DC4089F8();
  v68 = v67;
  v69 = *(void (**)(char *, uint64_t))(v56 + 8);
  v69(v68, v55);
  v69(v66, v55);
  if ((v64 & 1) != 0)
  {
    v70 = sub_1DC4009E8();
    v72 = v71;
    v74 = v125;
    v73 = v126;
    sub_1DC4009F4();
    if (qword_1EDB427B8 != -1)
      swift_once();
    v75 = (void *)qword_1EDB5E268;
    *v73 = v70;
    v73[1] = v72;
    *(uint64_t *)((char *)v73 + *(int *)(v74 + 24)) = (uint64_t)v75;
    sub_1DC080808(&qword_1EDB28960, (uint64_t (*)(uint64_t))type metadata accessor for AttributionSource, (uint64_t)&protocol conformance descriptor for AttributionSource);
    v76 = v75;
    sub_1DC4027A0();
    sub_1DC0926D8((uint64_t)v73, (uint64_t (*)(_QWORD))type metadata accessor for AttributionSource);
    v69(v127, v55);
    v77 = v120;
    return ((uint64_t (*)(char *, uint64_t))v69)(v77, v55);
  }
  v78 = (*(uint64_t (**)(char *, uint64_t))(v56 + 88))(v65, v55);
  if (v78 == *MEMORY[0x1E0DAEC40])
  {
    (*(void (**)(char *, uint64_t))(v56 + 96))(v65, v55);
    v123 = *(void (**)(char *, char *, uint64_t))(v116 + 32);
    v123(v115, v65, v113);
    v122 = (void (*)(char *, _QWORD, uint64_t, uint64_t))sub_1DC4009E8();
    v80 = v79;
    v81 = (uint64_t)v107;
    sub_1DC4009F4();
    v82 = v106[0];
    sub_1DC402788();
    v83 = v125;
    v84 = *(void **)(v82 + *(int *)(v125 + 24));
    v85 = v84;
    sub_1DC0926D8(v82, (uint64_t (*)(_QWORD))type metadata accessor for AttributionSource);
    v86 = (uint64_t)v126;
    *v126 = (uint64_t)v122;
    *(_QWORD *)(v86 + 8) = v80;
    sub_1DC219D98(v81, v86 + *(int *)(v83 + 20));
    *(_QWORD *)(v86 + *(int *)(v83 + 24)) = v84;
    sub_1DC080808(&qword_1EDB28960, (uint64_t (*)(uint64_t))type metadata accessor for AttributionSource, (uint64_t)&protocol conformance descriptor for AttributionSource);
    sub_1DC4027A0();
    sub_1DC0926D8(v86, (uint64_t (*)(_QWORD))type metadata accessor for AttributionSource);
    v87 = sub_1DC408DB8();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v87 - 8) + 56))(v114, 1, 1, v87);
    v88 = swift_allocObject();
    swift_weakInit();
    v89 = v116;
    v90 = v110;
    v91 = v113;
    (*(void (**)(char *, char *, uint64_t))(v116 + 16))(v110, v115, v113);
    ((void (*)(char *, uint64_t, uint64_t))v129)(v119, v130, v46);
    sub_1DC408DA0();
    swift_retain();
    v92 = sub_1DC408D94();
    v93 = (*(unsigned __int8 *)(v89 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v89 + 80);
    v130 = v46;
    v94 = v121;
    v95 = (v109 + *((unsigned __int8 *)v121 + 80) + v93) & ~(unint64_t)*((unsigned __int8 *)v121 + 80);
    v96 = (char *)swift_allocObject();
    v97 = MEMORY[0x1E0DF06E8];
    *((_QWORD *)v96 + 2) = v92;
    *((_QWORD *)v96 + 3) = v97;
    *((_QWORD *)v96 + 4) = v88;
    v123(&v96[v93], v90, v91);
    ((void (*)(char *, char *, uint64_t))v94[4])(&v96[v95], v119, v130);
    swift_release();
    v98 = sub_1DC23D0A4(v114, (uint64_t)&unk_1F034F9E8, (uint64_t)v96);
    (*(void (**)(char *, uint64_t))(v116 + 8))(v115, v91);
    v69(v127, v131);
    *(_QWORD *)(v49 + v124) = v98;
    return swift_release();
  }
  if (v78 == *MEMORY[0x1E0DAEC70])
  {
    (*(void (**)(char *, uint64_t))(v56 + 96))(v65, v55);
    v99 = v108;
    (*(void (**)(char *, char *, uint64_t))(v111 + 32))(v108, v65, v112);
    v100 = sub_1DC4009E8();
    v102 = v101;
    v104 = v125;
    v103 = v126;
    sub_1DC4009F4();
    v105 = sub_1DC23F6D0();
    *v103 = v100;
    v103[1] = v102;
    *(uint64_t *)((char *)v103 + *(int *)(v104 + 24)) = v105;
    sub_1DC080808(&qword_1EDB28960, (uint64_t (*)(uint64_t))type metadata accessor for AttributionSource, (uint64_t)&protocol conformance descriptor for AttributionSource);
    sub_1DC4027A0();
    sub_1DC0926D8((uint64_t)v103, (uint64_t (*)(_QWORD))type metadata accessor for AttributionSource);
    (*(void (**)(char *, uint64_t))(v111 + 8))(v99, v112);
    v77 = v127;
    return ((uint64_t (*)(char *, uint64_t))v69)(v77, v55);
  }
  result = sub_1DC409838();
  __break(1u);
  return result;
}

uint64_t sub_1DC23E2CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;

  v6[17] = a5;
  v6[18] = a6;
  v6[16] = a4;
  v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1DC089DA4(0, (unint64_t *)&unk_1EDB28A70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v6[19] = swift_task_alloc();
  v6[20] = type metadata accessor for AttributionSource();
  v6[21] = swift_task_alloc();
  v6[22] = swift_task_alloc();
  v6[23] = swift_task_alloc();
  v8 = sub_1DC400A00();
  v9 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DAE9C8];
  v6[24] = v8;
  v6[25] = *(_QWORD *)(v8 - 8);
  v6[26] = swift_task_alloc();
  sub_1DC23FD60();
  v6[27] = v10;
  v6[28] = swift_task_alloc();
  sub_1DC089DA4(0, &qword_1EDB288A0, v9, v7);
  v6[29] = swift_task_alloc();
  v6[30] = swift_task_alloc();
  v6[31] = swift_task_alloc();
  sub_1DC089DA4(0, &qword_1EDB288B8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAEC68], v7);
  v6[32] = swift_task_alloc();
  v6[33] = swift_task_alloc();
  sub_1DC408DA0();
  v6[34] = sub_1DC408D94();
  v6[35] = sub_1DC408D88();
  v6[36] = v11;
  return swift_task_switch();
}

uint64_t sub_1DC23E49C()
{
  uint64_t v0;
  uint64_t Strong;
  id v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t);
  uint64_t v17;
  unsigned int (*v18)(uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t);
  uint64_t v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(uint64_t);
  uint64_t v30;
  uint64_t (*v31)(uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(uint64_t);
  char v37;
  void (*v38)(uint64_t, uint64_t);
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    sub_1DC0824D4(Strong + OBJC_IVAR____TtC8StocksUI19AttributionProvider_attributionAssetManager, v0 + 16);
    swift_release();
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 40));
    v2 = objc_msgSend((id)objc_opt_self(), sel_mainScreen);
    objc_msgSend(v2, sel_scale);

    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 296) = v3;
    *v3 = v0;
    v3[1] = sub_1DC23EB30;
    return sub_1DC400EC8();
  }
  v5 = *(_QWORD *)(v0 + 264);
  swift_release();
  v6 = sub_1DC400C88();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
  swift_beginAccess();
  v8 = swift_weakLoadStrong();
  if (v8)
  {
    v9 = v8;
    v55 = v7;
    v56 = v6;
    v11 = *(_QWORD *)(v0 + 240);
    v10 = *(_QWORD *)(v0 + 248);
    v12 = *(_QWORD *)(v0 + 224);
    v57 = *(_QWORD *)(v0 + 216);
    v14 = *(_QWORD *)(v0 + 192);
    v13 = *(_QWORD *)(v0 + 200);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v13 + 16))(v10, *(_QWORD *)(v0 + 144), v14);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v14);
    v15 = v9 + OBJC_IVAR____TtC8StocksUI19AttributionProvider_currentSource;
    swift_beginAccess();
    v16 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DAE9C8];
    sub_1DC0EDD64(v15, v11, &qword_1EDB288A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAE9C8]);
    v17 = v12 + *(int *)(v57 + 48);
    sub_1DC0EDD64(v10, v12, &qword_1EDB288A0, v16);
    sub_1DC0EDD64(v11, v17, &qword_1EDB288A0, v16);
    v18 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48);
    if (v18(v12, 1, v14) == 1)
    {
      v19 = *(_QWORD *)(v0 + 248);
      v20 = *(_QWORD *)(v0 + 192);
      v21 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DAE9C8];
      sub_1DC0B091C(*(_QWORD *)(v0 + 240), &qword_1EDB288A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAE9C8]);
      sub_1DC0B091C(v19, &qword_1EDB288A0, v21);
      if (v18(v17, 1, v20) == 1)
      {
        sub_1DC0B091C(*(_QWORD *)(v0 + 224), &qword_1EDB288A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAE9C8]);
LABEL_13:
        v39 = sub_1DC408DD0();
        v40 = *(_QWORD *)(v0 + 264);
        if ((v39 & 1) == 0)
        {
          v41 = *(_QWORD *)(v0 + 256);
          v43 = *(_QWORD *)(v0 + 168);
          v42 = *(uint64_t **)(v0 + 176);
          v45 = *(_QWORD *)(v0 + 152);
          v44 = *(_QWORD *)(v0 + 160);
          sub_1DC402788();
          v53 = *v42;
          v54 = v42[1];
          swift_bridgeObjectRetain();
          sub_1DC0926D8((uint64_t)v42, (uint64_t (*)(_QWORD))type metadata accessor for AttributionSource);
          sub_1DC402788();
          sub_1DC0EDD64(v43 + *(int *)(v44 + 20), v45, (unint64_t *)&unk_1EDB28A70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
          sub_1DC0926D8(v43, (uint64_t (*)(_QWORD))type metadata accessor for AttributionSource);
          sub_1DC0EDD64(v40, v41, &qword_1EDB288B8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAEC68]);
          v46 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v55 + 48))(v41, 1, v56);
          v47 = *(_QWORD *)(v0 + 256);
          if (v46 == 1)
          {
            sub_1DC0B091C(*(_QWORD *)(v0 + 256), &qword_1EDB288B8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAEC68]);
            v48 = 0;
          }
          else
          {
            v48 = sub_1DC23F6D0();
            (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v47, v56);
          }
          v49 = *(_QWORD *)(v0 + 264);
          v50 = *(_QWORD **)(v0 + 184);
          v51 = *(_QWORD *)(v0 + 152);
          v52 = *(_QWORD *)(v0 + 160);
          *v50 = v53;
          v50[1] = v54;
          sub_1DC219D98(v51, (uint64_t)v50 + *(int *)(v44 + 20));
          *(_QWORD *)((char *)v50 + *(int *)(v52 + 24)) = v48;
          sub_1DC080808(&qword_1EDB28960, (uint64_t (*)(uint64_t))type metadata accessor for AttributionSource, (uint64_t)&protocol conformance descriptor for AttributionSource);
          sub_1DC4027A0();
          sub_1DC0926D8((uint64_t)v50, (uint64_t (*)(_QWORD))type metadata accessor for AttributionSource);
          sub_1DC0B091C(v49, &qword_1EDB288B8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAEC68]);
          goto LABEL_16;
        }
        v31 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DAEC68];
        v30 = *(_QWORD *)(v0 + 264);
LABEL_15:
        sub_1DC0B091C(v30, &qword_1EDB288B8, v31);
LABEL_16:
        swift_release();
        goto LABEL_17;
      }
    }
    else
    {
      v22 = *(_QWORD *)(v0 + 192);
      sub_1DC0EDD64(*(_QWORD *)(v0 + 224), *(_QWORD *)(v0 + 232), &qword_1EDB288A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAE9C8]);
      v23 = v18(v17, 1, v22);
      v25 = *(_QWORD *)(v0 + 240);
      v24 = *(_QWORD *)(v0 + 248);
      v26 = *(_QWORD *)(v0 + 232);
      if (v23 != 1)
      {
        v32 = *(_QWORD *)(v0 + 224);
        v33 = *(_QWORD *)(v0 + 200);
        v34 = *(_QWORD *)(v0 + 208);
        v35 = *(_QWORD *)(v0 + 192);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v33 + 32))(v34, v17, v35);
        v36 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DAE9C8];
        sub_1DC080808((unint64_t *)&unk_1EDB28890, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAE9C8], MEMORY[0x1E0DAE9D8]);
        v37 = sub_1DC4089F8();
        v38 = *(void (**)(uint64_t, uint64_t))(v33 + 8);
        v38(v34, v35);
        sub_1DC0B091C(v25, &qword_1EDB288A0, v36);
        sub_1DC0B091C(v24, &qword_1EDB288A0, v36);
        v38(v26, v35);
        sub_1DC0B091C(v32, &qword_1EDB288A0, v36);
        if ((v37 & 1) != 0)
          goto LABEL_13;
LABEL_11:
        v30 = *(_QWORD *)(v0 + 264);
        v31 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DAEC68];
        goto LABEL_15;
      }
      v27 = *(_QWORD *)(v0 + 192);
      v28 = *(_QWORD *)(v0 + 200);
      v29 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DAE9C8];
      sub_1DC0B091C(*(_QWORD *)(v0 + 240), &qword_1EDB288A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAE9C8]);
      sub_1DC0B091C(v24, &qword_1EDB288A0, v29);
      (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v26, v27);
    }
    sub_1DC0926D8(*(_QWORD *)(v0 + 224), (uint64_t (*)(_QWORD))sub_1DC23FD60);
    goto LABEL_11;
  }
  sub_1DC0B091C(*(_QWORD *)(v0 + 264), &qword_1EDB288B8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAEC68]);
LABEL_17:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DC23EB30()
{
  void *v0;

  swift_task_dealloc();
  if (v0)

  return swift_task_switch();
}

uint64_t sub_1DC23EB98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t Strong;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;
  unsigned int (*v14)(uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t);
  uint64_t v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t);
  uint64_t v26;
  uint64_t (*v27)(uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(uint64_t);
  char v33;
  void (*v34)(uint64_t, uint64_t);
  char v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v1 = *(_QWORD *)(v0 + 264);
  swift_release();
  v2 = sub_1DC400C88();
  v3 = *(_QWORD *)(v2 - 8);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v3 + 56))(v1, 0, 1, v2);
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v5 = Strong;
    v52 = v3;
    v53 = v2;
    v7 = *(_QWORD *)(v0 + 240);
    v6 = *(_QWORD *)(v0 + 248);
    v8 = *(_QWORD *)(v0 + 224);
    v54 = *(_QWORD *)(v0 + 216);
    v10 = *(_QWORD *)(v0 + 192);
    v9 = *(_QWORD *)(v0 + 200);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v9 + 16))(v6, *(_QWORD *)(v0 + 144), v10);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v10);
    v11 = v5 + OBJC_IVAR____TtC8StocksUI19AttributionProvider_currentSource;
    swift_beginAccess();
    v12 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DAE9C8];
    sub_1DC0EDD64(v11, v7, &qword_1EDB288A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAE9C8]);
    v13 = v8 + *(int *)(v54 + 48);
    sub_1DC0EDD64(v6, v8, &qword_1EDB288A0, v12);
    sub_1DC0EDD64(v7, v13, &qword_1EDB288A0, v12);
    v14 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
    if (v14(v8, 1, v10) == 1)
    {
      v15 = *(_QWORD *)(v0 + 248);
      v16 = *(_QWORD *)(v0 + 192);
      v17 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DAE9C8];
      sub_1DC0B091C(*(_QWORD *)(v0 + 240), &qword_1EDB288A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAE9C8]);
      sub_1DC0B091C(v15, &qword_1EDB288A0, v17);
      if (v14(v13, 1, v16) == 1)
      {
        sub_1DC0B091C(*(_QWORD *)(v0 + 224), &qword_1EDB288A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAE9C8]);
LABEL_11:
        v35 = sub_1DC408DD0();
        v36 = *(_QWORD *)(v0 + 264);
        if ((v35 & 1) == 0)
        {
          v38 = *(_QWORD *)(v0 + 256);
          v40 = *(_QWORD *)(v0 + 168);
          v39 = *(uint64_t **)(v0 + 176);
          v42 = *(_QWORD *)(v0 + 152);
          v41 = *(_QWORD *)(v0 + 160);
          sub_1DC402788();
          v50 = *v39;
          v51 = v39[1];
          swift_bridgeObjectRetain();
          sub_1DC0926D8((uint64_t)v39, (uint64_t (*)(_QWORD))type metadata accessor for AttributionSource);
          sub_1DC402788();
          sub_1DC0EDD64(v40 + *(int *)(v41 + 20), v42, (unint64_t *)&unk_1EDB28A70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
          sub_1DC0926D8(v40, (uint64_t (*)(_QWORD))type metadata accessor for AttributionSource);
          sub_1DC0EDD64(v36, v38, &qword_1EDB288B8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAEC68]);
          v43 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v52 + 48))(v38, 1, v53);
          v44 = *(_QWORD *)(v0 + 256);
          if (v43 == 1)
          {
            sub_1DC0B091C(*(_QWORD *)(v0 + 256), &qword_1EDB288B8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAEC68]);
            v45 = 0;
          }
          else
          {
            v45 = sub_1DC23F6D0();
            (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v44, v53);
          }
          v46 = *(_QWORD *)(v0 + 264);
          v47 = *(_QWORD **)(v0 + 184);
          v48 = *(_QWORD *)(v0 + 152);
          v49 = *(_QWORD *)(v0 + 160);
          *v47 = v50;
          v47[1] = v51;
          sub_1DC219D98(v48, (uint64_t)v47 + *(int *)(v41 + 20));
          *(_QWORD *)((char *)v47 + *(int *)(v49 + 24)) = v45;
          sub_1DC080808(&qword_1EDB28960, (uint64_t (*)(uint64_t))type metadata accessor for AttributionSource, (uint64_t)&protocol conformance descriptor for AttributionSource);
          sub_1DC4027A0();
          sub_1DC0926D8((uint64_t)v47, (uint64_t (*)(_QWORD))type metadata accessor for AttributionSource);
          sub_1DC0B091C(v46, &qword_1EDB288B8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAEC68]);
          goto LABEL_14;
        }
        v27 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DAEC68];
        v26 = *(_QWORD *)(v0 + 264);
LABEL_13:
        sub_1DC0B091C(v26, &qword_1EDB288B8, v27);
LABEL_14:
        swift_release();
        goto LABEL_15;
      }
    }
    else
    {
      v18 = *(_QWORD *)(v0 + 192);
      sub_1DC0EDD64(*(_QWORD *)(v0 + 224), *(_QWORD *)(v0 + 232), &qword_1EDB288A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAE9C8]);
      v19 = v14(v13, 1, v18);
      v21 = *(_QWORD *)(v0 + 240);
      v20 = *(_QWORD *)(v0 + 248);
      v22 = *(_QWORD *)(v0 + 232);
      if (v19 != 1)
      {
        v28 = *(_QWORD *)(v0 + 224);
        v29 = *(_QWORD *)(v0 + 200);
        v30 = *(_QWORD *)(v0 + 208);
        v31 = *(_QWORD *)(v0 + 192);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 32))(v30, v13, v31);
        v32 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DAE9C8];
        sub_1DC080808((unint64_t *)&unk_1EDB28890, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAE9C8], MEMORY[0x1E0DAE9D8]);
        v33 = sub_1DC4089F8();
        v34 = *(void (**)(uint64_t, uint64_t))(v29 + 8);
        v34(v30, v31);
        sub_1DC0B091C(v21, &qword_1EDB288A0, v32);
        sub_1DC0B091C(v20, &qword_1EDB288A0, v32);
        v34(v22, v31);
        sub_1DC0B091C(v28, &qword_1EDB288A0, v32);
        if ((v33 & 1) != 0)
          goto LABEL_11;
LABEL_9:
        v26 = *(_QWORD *)(v0 + 264);
        v27 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DAEC68];
        goto LABEL_13;
      }
      v23 = *(_QWORD *)(v0 + 192);
      v24 = *(_QWORD *)(v0 + 200);
      v25 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DAE9C8];
      sub_1DC0B091C(*(_QWORD *)(v0 + 240), &qword_1EDB288A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAE9C8]);
      sub_1DC0B091C(v20, &qword_1EDB288A0, v25);
      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v22, v23);
    }
    sub_1DC0926D8(*(_QWORD *)(v0 + 224), (uint64_t (*)(_QWORD))sub_1DC23FD60);
    goto LABEL_9;
  }
  sub_1DC0B091C(*(_QWORD *)(v0 + 264), &qword_1EDB288B8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAEC68]);
LABEL_15:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DC23F134()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t Strong;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;
  unsigned int (*v14)(uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t);
  uint64_t v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t);
  uint64_t v26;
  uint64_t (*v27)(uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(uint64_t);
  char v33;
  void (*v34)(uint64_t, uint64_t);
  char v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v1 = *(_QWORD *)(v0 + 264);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  v2 = sub_1DC400C88();
  v3 = *(_QWORD *)(v2 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56))(v1, 1, 1, v2);
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v5 = Strong;
    v52 = v3;
    v53 = v2;
    v7 = *(_QWORD *)(v0 + 240);
    v6 = *(_QWORD *)(v0 + 248);
    v8 = *(_QWORD *)(v0 + 224);
    v54 = *(_QWORD *)(v0 + 216);
    v10 = *(_QWORD *)(v0 + 192);
    v9 = *(_QWORD *)(v0 + 200);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v9 + 16))(v6, *(_QWORD *)(v0 + 144), v10);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v10);
    v11 = v5 + OBJC_IVAR____TtC8StocksUI19AttributionProvider_currentSource;
    swift_beginAccess();
    v12 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DAE9C8];
    sub_1DC0EDD64(v11, v7, &qword_1EDB288A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAE9C8]);
    v13 = v8 + *(int *)(v54 + 48);
    sub_1DC0EDD64(v6, v8, &qword_1EDB288A0, v12);
    sub_1DC0EDD64(v7, v13, &qword_1EDB288A0, v12);
    v14 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
    if (v14(v8, 1, v10) == 1)
    {
      v15 = *(_QWORD *)(v0 + 248);
      v16 = *(_QWORD *)(v0 + 192);
      v17 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DAE9C8];
      sub_1DC0B091C(*(_QWORD *)(v0 + 240), &qword_1EDB288A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAE9C8]);
      sub_1DC0B091C(v15, &qword_1EDB288A0, v17);
      if (v14(v13, 1, v16) == 1)
      {
        sub_1DC0B091C(*(_QWORD *)(v0 + 224), &qword_1EDB288A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAE9C8]);
LABEL_11:
        v35 = sub_1DC408DD0();
        v36 = *(_QWORD *)(v0 + 264);
        if ((v35 & 1) == 0)
        {
          v38 = *(_QWORD *)(v0 + 256);
          v40 = *(_QWORD *)(v0 + 168);
          v39 = *(uint64_t **)(v0 + 176);
          v42 = *(_QWORD *)(v0 + 152);
          v41 = *(_QWORD *)(v0 + 160);
          sub_1DC402788();
          v50 = *v39;
          v51 = v39[1];
          swift_bridgeObjectRetain();
          sub_1DC0926D8((uint64_t)v39, (uint64_t (*)(_QWORD))type metadata accessor for AttributionSource);
          sub_1DC402788();
          sub_1DC0EDD64(v40 + *(int *)(v41 + 20), v42, (unint64_t *)&unk_1EDB28A70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
          sub_1DC0926D8(v40, (uint64_t (*)(_QWORD))type metadata accessor for AttributionSource);
          sub_1DC0EDD64(v36, v38, &qword_1EDB288B8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAEC68]);
          v43 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v52 + 48))(v38, 1, v53);
          v44 = *(_QWORD *)(v0 + 256);
          if (v43 == 1)
          {
            sub_1DC0B091C(*(_QWORD *)(v0 + 256), &qword_1EDB288B8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAEC68]);
            v45 = 0;
          }
          else
          {
            v45 = sub_1DC23F6D0();
            (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v44, v53);
          }
          v46 = *(_QWORD *)(v0 + 264);
          v47 = *(_QWORD **)(v0 + 184);
          v48 = *(_QWORD *)(v0 + 152);
          v49 = *(_QWORD *)(v0 + 160);
          *v47 = v50;
          v47[1] = v51;
          sub_1DC219D98(v48, (uint64_t)v47 + *(int *)(v41 + 20));
          *(_QWORD *)((char *)v47 + *(int *)(v49 + 24)) = v45;
          sub_1DC080808(&qword_1EDB28960, (uint64_t (*)(uint64_t))type metadata accessor for AttributionSource, (uint64_t)&protocol conformance descriptor for AttributionSource);
          sub_1DC4027A0();
          sub_1DC0926D8((uint64_t)v47, (uint64_t (*)(_QWORD))type metadata accessor for AttributionSource);
          sub_1DC0B091C(v46, &qword_1EDB288B8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAEC68]);
          goto LABEL_14;
        }
        v27 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DAEC68];
        v26 = *(_QWORD *)(v0 + 264);
LABEL_13:
        sub_1DC0B091C(v26, &qword_1EDB288B8, v27);
LABEL_14:
        swift_release();
        goto LABEL_15;
      }
    }
    else
    {
      v18 = *(_QWORD *)(v0 + 192);
      sub_1DC0EDD64(*(_QWORD *)(v0 + 224), *(_QWORD *)(v0 + 232), &qword_1EDB288A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAE9C8]);
      v19 = v14(v13, 1, v18);
      v21 = *(_QWORD *)(v0 + 240);
      v20 = *(_QWORD *)(v0 + 248);
      v22 = *(_QWORD *)(v0 + 232);
      if (v19 != 1)
      {
        v28 = *(_QWORD *)(v0 + 224);
        v29 = *(_QWORD *)(v0 + 200);
        v30 = *(_QWORD *)(v0 + 208);
        v31 = *(_QWORD *)(v0 + 192);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 32))(v30, v13, v31);
        v32 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DAE9C8];
        sub_1DC080808((unint64_t *)&unk_1EDB28890, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAE9C8], MEMORY[0x1E0DAE9D8]);
        v33 = sub_1DC4089F8();
        v34 = *(void (**)(uint64_t, uint64_t))(v29 + 8);
        v34(v30, v31);
        sub_1DC0B091C(v21, &qword_1EDB288A0, v32);
        sub_1DC0B091C(v20, &qword_1EDB288A0, v32);
        v34(v22, v31);
        sub_1DC0B091C(v28, &qword_1EDB288A0, v32);
        if ((v33 & 1) != 0)
          goto LABEL_11;
LABEL_9:
        v26 = *(_QWORD *)(v0 + 264);
        v27 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DAEC68];
        goto LABEL_13;
      }
      v23 = *(_QWORD *)(v0 + 192);
      v24 = *(_QWORD *)(v0 + 200);
      v25 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DAE9C8];
      sub_1DC0B091C(*(_QWORD *)(v0 + 240), &qword_1EDB288A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAE9C8]);
      sub_1DC0B091C(v20, &qword_1EDB288A0, v25);
      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v22, v23);
    }
    sub_1DC0926D8(*(_QWORD *)(v0 + 224), (uint64_t (*)(_QWORD))sub_1DC23FD60);
    goto LABEL_9;
  }
  sub_1DC0B091C(*(_QWORD *)(v0 + 264), &qword_1EDB288B8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAEC68]);
LABEL_15:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DC23F6D0()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  double v4;
  double v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  double v14;
  double v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  void *v20;
  uint64_t v21;
  void *v22;
  void *v23;
  id v24;
  uint64_t result;
  id v26;
  id v27;
  id v28;
  _QWORD v29[4];
  _QWORD aBlock[6];

  v1 = sub_1DC400C70();
  v3 = v2;
  sub_1DC400C7C();
  v5 = v4;
  v6 = objc_allocWithZone(MEMORY[0x1E0DC3870]);
  v7 = (void *)sub_1DC3FFDE8();
  v8 = objc_msgSend(v6, sel_initWithData_scale_, v7, v5);
  sub_1DC1D565C(v1, v3);

  if (!v8)
    return 0;
  v9 = v8;
  v10 = sub_1DC400C64();
  if (v11 >> 60 == 15)
  {
LABEL_11:
    v27 = objc_msgSend(v9, sel_imageWithRenderingMode_, 2);
    v28 = objc_msgSend((id)objc_opt_self(), sel_whiteColor);
    v26 = objc_msgSend(v27, sel_imageWithTintColor_, v28);

    return (uint64_t)v26;
  }
  v12 = v10;
  v13 = v11;
  sub_1DC400C7C();
  v15 = v14;
  v16 = objc_allocWithZone(MEMORY[0x1E0DC3870]);
  v17 = (void *)sub_1DC3FFDE8();
  v18 = objc_msgSend(v16, sel_initWithData_scale_, v17, v15);

  if (!v18)
  {
    sub_1DC23B824(v12, v13);
    goto LABEL_11;
  }
  v19 = objc_msgSend(v9, sel_imageAsset);
  if (!v19)
  {
    sub_1DC23B824(v12, v13);
    goto LABEL_10;
  }
  v20 = v19;
  MEMORY[0x1E0C80A78](v19);
  v29[2] = v0;
  v21 = swift_allocObject();
  *(_QWORD *)(v21 + 16) = sub_1DC240134;
  *(_QWORD *)(v21 + 24) = v29;
  aBlock[4] = sub_1DC080634;
  aBlock[5] = v21;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1DC23FFB4;
  aBlock[3] = &block_descriptor_19;
  v22 = _Block_copy(aBlock);
  v23 = (void *)objc_opt_self();
  swift_retain();
  v24 = objc_msgSend(v23, sel_traitCollectionWithTraits_, v22);
  _Block_release(v22);
  swift_release();
  LOBYTE(v22) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v22 & 1) == 0)
  {
    objc_msgSend(v20, sel_registerImage_withTraitCollection_, v18, v24);
    sub_1DC23B824(v12, v13);

LABEL_10:
    goto LABEL_11;
  }
  __break(1u);
  return result;
}

uint64_t sub_1DC23F9DC()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC8StocksUI19AttributionProvider_currentDownloadTask))
  {
    swift_retain();
    sub_1DC408DC4();
    swift_release();
  }
  swift_release();
  sub_1DC0B091C(v0 + OBJC_IVAR____TtC8StocksUI19AttributionProvider_currentSource, &qword_1EDB288A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAE9C8]);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC8StocksUI19AttributionProvider_attributionProvider);
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC8StocksUI19AttributionProvider_attributionAssetManager);
  return swift_deallocClassInstance();
}

uint64_t sub_1DC23FAAC()
{
  return type metadata accessor for AttributionProvider();
}

uint64_t type metadata accessor for AttributionProvider()
{
  uint64_t result;

  result = qword_1EDB27430;
  if (!qword_1EDB27430)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1DC23FAF0()
{
  unint64_t v0;

  sub_1DC089DA4(319, &qword_1EDB288A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAE9C8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

unint64_t sub_1DC23FB9C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EDB3F6B8;
  if (!qword_1EDB3F6B8)
  {
    sub_1DC089DA4(255, (unint64_t *)&qword_1EDB3F6B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4198], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1DF0CAB8C](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1EDB3F6B8);
  }
  return result;
}

void sub_1DC23FBFC()
{
  uint64_t (*v0)(uint64_t);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1EDB28900)
  {
    sub_1DC3FFDD0();
    v0 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8];
    sub_1DC15E978();
    sub_1DC080808(&qword_1EDB28860, v0, MEMORY[0x1E0CB0018]);
    v1 = sub_1DC4026C8();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1EDB28900);
  }
}

uint64_t sub_1DC23FC90()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1DC23FCB4(uint64_t a1)
{
  uint64_t v1;

  return sub_1DC23D4C4(a1, v1);
}

uint64_t sub_1DC23FCBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1DC400A00();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1DC23FD30()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(sub_1DC400A00() - 8) + 80);
  return sub_1DC23D5A8(*(_QWORD *)(v0 + 16), v0 + ((v1 + 24) & ~v1));
}

void sub_1DC23FD60()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EDB288A8)
  {
    sub_1DC089DA4(255, &qword_1EDB288A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAE9C8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EDB288A8);
  }
}

uint64_t sub_1DC23FDD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1DC089DA4(0, &qword_1EDB288A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAE9C8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC23FE34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v1 = sub_1DC400C4C();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = sub_1DC400A00();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (v3 + v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);
  return swift_deallocObject();
}

uint64_t sub_1DC23FEF8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v4 = *(_QWORD *)(sub_1DC400C4C() - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v4 + 64);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(sub_1DC400A00() - 8) + 80);
  v8 = v5 + v6 + v7;
  v9 = v1[2];
  v10 = v1[3];
  v11 = v1[4];
  v12 = (uint64_t)v1 + v5;
  v13 = (uint64_t)v1 + (v8 & ~v7);
  v14 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v14;
  *v14 = v2;
  v14[1] = sub_1DC17C744;
  return sub_1DC23E2CC(a1, v9, v10, v11, v12, v13);
}

uint64_t sub_1DC23FFB4(uint64_t a1, uint64_t a2)
{
  void (*v3)(uint64_t);

  v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_unknownObjectRetain();
  v3(a2);
  return swift_unknownObjectRelease();
}

uint64_t sub_1DC23FFF0(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_1DC240054;
  return v6(a1);
}

uint64_t sub_1DC240054()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1DC2400A0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DC2400C4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1DC17C744;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1F034F9F8 + dword_1F034F9F8))(a1, v4);
}

id sub_1DC240134(void *a1)
{
  sub_1DC400C7C();
  objc_msgSend(a1, sel_setDisplayScale_);
  return objc_msgSend(a1, sel_setUserInterfaceStyle_, 2);
}

uint64_t sub_1DC240178()
{
  return swift_deallocObject();
}

uint64_t *sub_1DC240188(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = type metadata accessor for NewsStockFeedGroupKnobs();
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v6 = v4;
    sub_1DC12D9D0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    *(uint64_t *)((char *)a1 + *(int *)(v6 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v6 + 20));
  }
  swift_retain();
  return a1;
}

uint64_t sub_1DC240218(uint64_t a1)
{
  uint64_t v2;

  sub_1DC12D9D0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  type metadata accessor for NewsStockFeedGroupKnobs();
  return swift_release();
}

uint64_t sub_1DC240260(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  sub_1DC12D9D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  v5 = type metadata accessor for NewsStockFeedGroupKnobs();
  *(_QWORD *)(a1 + *(int *)(v5 + 20)) = *(_QWORD *)(a2 + *(int *)(v5 + 20));
  swift_retain();
  return a1;
}

uint64_t sub_1DC2402BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  sub_1DC12D9D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  v5 = type metadata accessor for NewsStockFeedGroupKnobs();
  *(_QWORD *)(a1 + *(int *)(v5 + 20)) = *(_QWORD *)(a2 + *(int *)(v5 + 20));
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1DC240324(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  sub_1DC12D9D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  v5 = type metadata accessor for NewsStockFeedGroupKnobs();
  *(_QWORD *)(a1 + *(int *)(v5 + 20)) = *(_QWORD *)(a2 + *(int *)(v5 + 20));
  return a1;
}

uint64_t sub_1DC24037C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  sub_1DC12D9D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  v5 = type metadata accessor for NewsStockFeedGroupKnobs();
  *(_QWORD *)(a1 + *(int *)(v5 + 20)) = *(_QWORD *)(a2 + *(int *)(v5 + 20));
  swift_release();
  return a1;
}

uint64_t sub_1DC2403DC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC2403E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for NewsStockFeedGroupKnobs();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_1DC240424()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC240430(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for NewsStockFeedGroupKnobs();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for StockFeedGroupKnobs()
{
  uint64_t result;

  result = qword_1EDB31110;
  if (!qword_1EDB31110)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1DC2404AC()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for NewsStockFeedGroupKnobs();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1DC240514@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  _QWORD *v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;

  v34 = a2;
  sub_1DC092F50(0, (unint64_t *)&qword_1EDB2AE68, (void (*)(uint64_t))sub_1DC12D9D0);
  MEMORY[0x1E0C80A78](v4);
  v37 = (char *)&v30 - v5;
  v42 = type metadata accessor for NewsStockFeedGroupKnobs();
  v35 = *(_QWORD *)(v42 - 8);
  MEMORY[0x1E0C80A78](v42);
  v33 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC092F50(0, qword_1EDB34B70, v7);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v36 = (char *)&v30 - v12;
  sub_1DC240B00();
  v14 = v13;
  v15 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC240B58();
  sub_1DC409B08();
  if (v2)
  {
    v18 = (uint64_t)a1;
  }
  else
  {
    v19 = v35;
    v30 = v15;
    v31 = a1;
    v32 = v10;
    v20 = (uint64_t)v37;
    v38 = 0x626F6E4B7377656ELL;
    v39 = 0xE900000000000073;
    v40 = 0;
    v41 = 1;
    sub_1DC080808(&qword_1F034FAA8, (uint64_t (*)(uint64_t))type metadata accessor for NewsStockFeedGroupKnobs, (uint64_t)&unk_1DC431250);
    v21 = (uint64_t)v36;
    v22 = v42;
    sub_1DC4098EC();
    v23 = v22;
    v24 = (uint64_t)v32;
    sub_1DC240B9C(v21, (uint64_t)v32);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v24, 1, v23) == 1)
    {
      sub_1DC12D9D0();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v20, 1, 1, v25);
      v26 = v33;
      sub_1DC3DD3A8(v20, 0, v33);
      sub_1DC240BF0(v21);
      sub_1DC240BF0(v24);
    }
    else
    {
      sub_1DC240BF0(v21);
      v26 = v33;
      sub_1DC15461C(v24, (uint64_t)v33);
    }
    v28 = v30;
    v27 = (uint64_t)v31;
    sub_1DC15461C((uint64_t)v26, v34);
    (*(void (**)(char *, uint64_t))(v28 + 8))(v17, v14);
    v18 = v27;
  }
  return __swift_destroy_boxed_opaque_existential_1(v18);
}

uint64_t sub_1DC24083C@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(_QWORD *)a3 = result;
  *(_QWORD *)(a3 + 8) = a2;
  *(_QWORD *)(a3 + 16) = 0;
  *(_BYTE *)(a3 + 24) = 1;
  return result;
}

uint64_t sub_1DC240850()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

void sub_1DC24085C(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 16) = 0;
}

uint64_t sub_1DC24086C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char v3;
  uint64_t v4;
  int v5;
  BOOL v6;
  char v7;
  uint64_t result;
  char v9;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_BYTE *)(a1 + 24);
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(unsigned __int8 *)(a2 + 24);
  v6 = *(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8);
  if (v6 || (v7 = sub_1DC4099E8(), result = 0, (v7 & 1) != 0))
  {
    if ((v3 & 1) != 0)
    {
      if (v5)
        return 1;
    }
    else
    {
      if (v2 == v4)
        v9 = v5;
      else
        v9 = 1;
      if ((v9 & 1) == 0)
        return 1;
    }
    return 0;
  }
  return result;
}

uint64_t sub_1DC2408EC()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + 24);
  sub_1DC409AC0();
  swift_bridgeObjectRetain();
  sub_1DC408AF4();
  swift_bridgeObjectRelease();
  sub_1DC409AD8();
  if (v1 != 1)
    sub_1DC409ACC();
  return sub_1DC409AF0();
}

uint64_t sub_1DC240984()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + 24);
  swift_bridgeObjectRetain();
  sub_1DC408AF4();
  swift_bridgeObjectRelease();
  if (v1 == 1)
    return sub_1DC409AD8();
  sub_1DC409AD8();
  return sub_1DC409ACC();
}

uint64_t sub_1DC240A08()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + 24);
  sub_1DC409AC0();
  swift_bridgeObjectRetain();
  sub_1DC408AF4();
  swift_bridgeObjectRelease();
  sub_1DC409AD8();
  if (v1 != 1)
    sub_1DC409ACC();
  return sub_1DC409AF0();
}

uint64_t sub_1DC240A9C()
{
  sub_1DC240B58();
  return sub_1DC409B20();
}

uint64_t sub_1DC240AC4()
{
  sub_1DC240B58();
  return sub_1DC409B2C();
}

uint64_t sub_1DC240AEC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DC240514(a1, a2);
}

void sub_1DC240B00()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F034FA98)
  {
    sub_1DC240B58();
    v0 = sub_1DC409928();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1F034FA98);
  }
}

unint64_t sub_1DC240B58()
{
  unint64_t result;

  result = qword_1F034FAA0;
  if (!qword_1F034FAA0)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC41CB30, &type metadata for StockFeedGroupKnobs.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F034FAA0);
  }
  return result;
}

uint64_t sub_1DC240B9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1DC092F50(0, qword_1EDB34B70, (void (*)(uint64_t))type metadata accessor for NewsStockFeedGroupKnobs);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC240BF0(uint64_t a1)
{
  uint64_t v2;

  sub_1DC092F50(0, qword_1EDB34B70, (void (*)(uint64_t))type metadata accessor for NewsStockFeedGroupKnobs);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t initializeWithCopy for StockFeedGroupKnobs.CodingKeys(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for StockFeedGroupKnobs.CodingKeys(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v4;
  return a1;
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for StockFeedGroupKnobs.CodingKeys(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for StockFeedGroupKnobs.CodingKeys(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 25))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for StockFeedGroupKnobs.CodingKeys(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 25) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for StockFeedGroupKnobs.CodingKeys()
{
  return &type metadata for StockFeedGroupKnobs.CodingKeys;
}

unint64_t sub_1DC240DCC()
{
  unint64_t result;

  result = qword_1F034FAB0;
  if (!qword_1F034FAB0)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC41CB08, &type metadata for StockFeedGroupKnobs.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F034FAB0);
  }
  return result;
}

unint64_t sub_1DC240E14()
{
  unint64_t result;

  result = qword_1F034FAB8;
  if (!qword_1F034FAB8)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC41CA78, &type metadata for StockFeedGroupKnobs.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F034FAB8);
  }
  return result;
}

unint64_t sub_1DC240E5C()
{
  unint64_t result;

  result = qword_1F034FAC0;
  if (!qword_1F034FAC0)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC41CAA0, &type metadata for StockFeedGroupKnobs.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F034FAC0);
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for StockLocation(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for StockLocation(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  return a1;
}

_QWORD *assignWithTake for StockLocation(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for StockLocation(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) >= 2)
    return v3;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for StockLocation(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = 0;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for StockLocation()
{
  return &type metadata for StockLocation;
}

uint64_t sub_1DC240FEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unint64_t a9, uint64_t a10)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  BOOL v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  unsigned int *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t inited;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(char *, uint64_t);
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  void (*v91)(uint64_t *, char *, uint64_t);
  uint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  unint64_t v113;
  uint64_t v114;
  uint64_t v115;

  v104 = a8;
  v103 = a7;
  v101 = a6;
  v97 = a5;
  v99 = a4;
  v98 = a3;
  v105 = a2;
  v102 = a10;
  v100 = a9;
  v115 = *MEMORY[0x1E0C80C00];
  sub_1DC133BB0(0);
  MEMORY[0x1E0C80A78](v11);
  v86 = (char *)&v83 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v85 = sub_1DC4080F8();
  v84 = *(_QWORD *)(v85 - 8);
  MEMORY[0x1E0C80A78](v85);
  v83 = (char *)&v83 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC2419DC(0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v83 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = sub_1DC407D50();
  v87 = *(_QWORD *)(v88 - 8);
  MEMORY[0x1E0C80A78](v88);
  v18 = (char *)&v83 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v90 = sub_1DC404174();
  v89 = *(_QWORD *)(v90 - 8);
  MEMORY[0x1E0C80A78](v90);
  v20 = (uint64_t *)((char *)&v83 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  v21 = sub_1DC4011BC();
  v22 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  v93 = (char *)&v83 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v24);
  v26 = (uint64_t *)((char *)&v83 - v25);
  v92 = v27;
  MEMORY[0x1E0C80A78](v28);
  v30 = (char *)&v83 - v29;
  sub_1DC0F4CCC();
  v32 = v31;
  sub_1DC407C18();
  v106 = MEMORY[0x1E0DEE9D8];
  v91 = *(void (**)(uint64_t *, char *, uint64_t))(v22 + 16);
  v91(v26, v30, v21);
  v33 = (*(uint64_t (**)(uint64_t *, uint64_t))(v22 + 88))(v26, v21);
  v34 = v33 == *MEMORY[0x1E0DAF188];
  v96 = v21;
  v95 = v22;
  v94 = v30;
  if (v34)
  {
    (*(void (**)(uint64_t *, uint64_t))(v22 + 96))(v26, v21);
    swift_unknownObjectRelease();
    sub_1DC407C30();
    v107 = v98;
    v108 = v99;
    v109 = v97;
    v110 = v101;
    v111 = v103;
    v112 = v104;
    v113 = v100;
    v114 = v102;
    sub_1DC403FAC();
    v86 = (char *)sub_1DC403F94();
    sub_1DC0F5BE8((uint64_t)v18);
    sub_1DC407D08();
    (*(void (**)(char *, uint64_t))(v87 + 8))(v18, v88);
    v35 = sub_1DC4075A0();
    v36 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 48))(v16, 1, v35);
    sub_1DC0926D8((uint64_t)v16, (uint64_t (*)(_QWORD))sub_1DC2419DC);
    v37 = sub_1DC401144();
    v38 = sub_1DC407C00();
    *v20 = v37;
    v40 = v32;
    if (v36 == 1)
    {
      v20[1] = 0;
      v20[2] = 0;
      v20[3] = v38;
      v41 = v20 + 4;
      v42 = (unsigned int *)MEMORY[0x1E0D59C78];
    }
    else
    {
      v20[1] = v38;
      v41 = v20 + 2;
      v42 = (unsigned int *)MEMORY[0x1E0D59C48];
    }
    *v41 = v39;
    v55 = v89;
    v56 = v90;
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(v89 + 104))(v20, *v42, v90);
    sub_1DC0B9454();
    v58 = (char *)v26 + *(int *)(v57 + 48);
    v88 = a1;
    sub_1DC407C30();
    LODWORD(v87) = v107;
    v59 = MEMORY[0x1DF0C49DC](v20, v86);
    swift_bridgeObjectRelease();
    sub_1DC190328(v59);
    (*(void (**)(uint64_t *, uint64_t))(v55 + 8))(v20, v56);
    v60 = sub_1DC400898();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v60 - 8) + 8))(v58, v60);
    v61 = v97;
    v62 = v40;
  }
  else
  {
    v90 = v32;
    v43 = v97;
    if (v33 != *MEMORY[0x1E0DAF140])
    {
      v107 = v98;
      v108 = v99;
      v109 = v97;
      v110 = v101;
      v111 = v103;
      v112 = v104;
      v113 = v100;
      v114 = v102;
      v63 = sub_1DC403FAC();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v63 - 8) + 8))(v105, v63);
      (*(void (**)(uint64_t))(*(_QWORD *)(v90 - 8) + 8))(a1);
      v64 = *(void (**)(char *, uint64_t))(v95 + 8);
      v65 = v96;
      v64(v94, v96);
      v64((char *)v26, v65);
      return 0;
    }
    (*(void (**)(uint64_t *, uint64_t))(v95 + 96))(v26, v96);
    v89 = *v26;
    v44 = sub_1DC40463C();
    v45 = sub_1DC21D504((uint64_t)v94, v105, v98, v99, v43, v101, v103, v104, v100, v102);
    sub_1DC401144();
    v46 = v84;
    v47 = v83;
    v48 = v85;
    (*(void (**)(char *, _QWORD, uint64_t))(v84 + 104))(v83, *MEMORY[0x1E0D5E488], v85);
    v49 = sub_1DC404630();
    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v46 + 8))(v47, v48);
    sub_1DC089DA4(0, (unint64_t *)&qword_1EDB3FF10, (uint64_t (*)(uint64_t))sub_1DC1F4E1C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    inited = swift_initStackObject();
    v51 = (_QWORD *)inited;
    *(_OWORD *)(inited + 16) = xmmword_1DC40FA70;
    if (v45)
    {
      v52 = MEMORY[0x1E0DB77B0];
      v53 = v45;
      v54 = v44;
    }
    else
    {
      v53 = 0;
      v54 = 0;
      v52 = 0;
      *(_QWORD *)(inited + 40) = 0;
      *(_QWORD *)(inited + 48) = 0;
    }
    *(_QWORD *)(inited + 32) = v53;
    *(_QWORD *)(inited + 56) = v54;
    *(_QWORD *)(inited + 64) = v52;
    v67 = v43;
    v68 = a1;
    if (v49)
    {
      v69 = MEMORY[0x1E0DB77B0];
      v70 = v44;
    }
    else
    {
      v70 = 0;
      v69 = 0;
      *(_QWORD *)(inited + 80) = 0;
      *(_QWORD *)(inited + 88) = 0;
    }
    *(_QWORD *)(inited + 72) = v49;
    *(_QWORD *)(inited + 96) = v70;
    *(_QWORD *)(inited + 104) = v69;
    swift_getObjectType();
    swift_retain();
    swift_retain();
    v71 = (uint64_t)v86;
    sub_1DC4091D8();
    v72 = sub_1DC4045C4();
    sub_1DC0926D8(v71, (uint64_t (*)(_QWORD))sub_1DC133BB0);
    if (v72)
    {
      v73 = MEMORY[0x1E0DB77B0];
    }
    else
    {
      v44 = 0;
      v73 = 0;
      v51[15] = 0;
      v51[16] = 0;
    }
    v51[14] = v72;
    v51[17] = v44;
    v51[18] = v73;
    sub_1DC190328((uint64_t)v51);
    swift_unknownObjectRelease();
    swift_release();
    swift_release();
    LODWORD(v87) = 1;
    v62 = v90;
    v88 = v68;
    v61 = v67;
  }
  v74 = v93;
  v75 = (uint64_t)v94;
  v76 = v96;
  v91((uint64_t *)v93, v94, v96);
  v77 = v95;
  v78 = (*(unsigned __int8 *)(v95 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v95 + 80);
  v79 = v78 + v92;
  v80 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v77 + 32))(v80 + v78, v74, v76);
  *(_BYTE *)(v80 + v79) = v87;
  v66 = sub_1DC40412C();
  swift_retain();
  v107 = v98;
  v108 = v99;
  v109 = v61;
  v110 = v101;
  v111 = v103;
  v112 = v104;
  v113 = v100;
  v114 = v102;
  v81 = sub_1DC403FAC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v81 - 8) + 8))(v105, v81);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 8))(v88, v62);
  (*(void (**)(uint64_t, uint64_t))(v77 + 8))(v75, v76);
  if (v66)
    swift_release();
  return v66;
}

void sub_1DC2419DC(uint64_t a1)
{
  sub_1DC089DA4(a1, &qword_1EDB2AE48, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5ACA0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

uint64_t sub_1DC2419F8()
{
  sub_1DC40844C();
  sub_1DC401144();
  type metadata accessor for ShareLinkProvider();
  *(_BYTE *)(swift_allocObject() + 16) = 0;
  sub_1DC080808(&qword_1EDB2F880, (uint64_t (*)(uint64_t))type metadata accessor for ShareLinkProvider, (uint64_t)&protocol conformance descriptor for ShareLinkProvider);
  type metadata accessor for MailShareLinkTextProvider();
  swift_allocObject();
  sub_1DC080808(&qword_1EDB36270, (uint64_t (*)(uint64_t))type metadata accessor for MailShareLinkTextProvider, (uint64_t)&protocol conformance descriptor for MailShareLinkTextProvider);
  return sub_1DC408440();
}

uint64_t sub_1DC241AF0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_1DC4011BC();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_1DC241B54()
{
  sub_1DC4011BC();
  return sub_1DC2419F8();
}

uint64_t sub_1DC241B8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  unint64_t inited;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_1DC089DA4(0, (unint64_t *)&qword_1EDB3FF10, (uint64_t (*)(uint64_t))sub_1DC1F4E1C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1DC40C740;
  sub_1DC0E7820();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DC40FA60;
  *(_QWORD *)(inited + 32) = sub_1DC1EEE40(a2, a3, a4);
  sub_1DC408CF8();
  v9 = sub_1DC18B540(inited);
  swift_bridgeObjectRelease();
  v10 = sub_1DC4048B8();
  sub_1DC18B708(v9);
  swift_bridgeObjectRelease();
  sub_1DC4048A0();
  swift_bridgeObjectRelease();
  v11 = sub_1DC4048AC();
  v12 = MEMORY[0x1E0DB7CC8];
  *(_QWORD *)(v7 + 96) = v10;
  *(_QWORD *)(v7 + 104) = v12;
  *(_QWORD *)(v7 + 72) = v11;
  return v7;
}

void sub_1DC241CC0(uint64_t (*a1)(_QWORD), uint64_t a2, uint64_t a3)
{
  sub_1DC241CE4(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x1E0DAF1A0], (void (*)(BOOL, uint64_t, uint64_t))sub_1DC2AD4BC);
}

void sub_1DC241CE4(uint64_t (*a1)(_QWORD), uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD), void (*a5)(BOOL, uint64_t, uint64_t))
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  void (*v22)(BOOL, uint64_t, uint64_t);
  uint64_t (*v23)(_QWORD);
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;

  v22 = a5;
  v29 = a4(0);
  v9 = *(_QWORD *)(v29 - 8);
  MEMORY[0x1E0C80A78](v29);
  v28 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v22 - v13;
  v30 = MEMORY[0x1E0DEE9D8];
  v27 = *(_QWORD *)(a3 + 16);
  if (v27)
  {
    v15 = 0;
    v24 = a2;
    v25 = a3;
    v23 = a1;
    while (v15 < *(_QWORD *)(a3 + 16))
    {
      v16 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
      v17 = *(_QWORD *)(v9 + 72);
      (*(void (**)(char *, unint64_t, uint64_t, __n128))(v9 + 16))(v14, a3 + v16 + v17 * v15, v29, v12);
      v18 = a1(v14);
      if (v5)
      {
        (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v29);
        swift_bridgeObjectRelease();
        swift_release();
        return;
      }
      if ((v18 & 1) != 0)
      {
        v26 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
        v26(v28, v14, v29);
        v19 = v30;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          v22(0, *(_QWORD *)(v19 + 16) + 1, 1);
          v19 = v30;
        }
        v21 = *(_QWORD *)(v19 + 16);
        v20 = *(_QWORD *)(v19 + 24);
        if (v21 >= v20 >> 1)
        {
          v22(v20 > 1, v21 + 1, 1);
          v19 = v30;
        }
        *(_QWORD *)(v19 + 16) = v21 + 1;
        v26((char *)(v19 + v16 + v21 * v17), v28, v29);
        v30 = v19;
        a3 = v25;
        a1 = v23;
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v29);
      }
      if (v27 == ++v15)
        goto LABEL_14;
    }
    __break(1u);
  }
  else
  {
LABEL_14:
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1DC241F00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  char *v6;
  char *v7;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(void);
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  void *v44;
  char *v45;
  uint64_t v46;
  void *v47;
  char *v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  _QWORD *v70;
  uint64_t v71;
  void *v72;
  char *v73;
  char *v74;
  char *v75;
  uint64_t v76;
  void *v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  void (*v81)(uint64_t, char *, uint64_t);
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  void (*v87)(void);
  void (*v88)(void);
  void (*v89)(char *, uint64_t);
  uint64_t v90;
  char *v91;
  void (*v92)(char *, uint64_t, uint64_t);
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  void (*v96)(char *, char *, uint64_t);
  uint64_t v97;
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;

  v7 = v6;
  v93 = a2;
  v94 = a6;
  v95 = a1;
  v10 = *(_QWORD *)v7;
  v97 = a3;
  v98 = v10;
  v103 = sub_1DC40124C();
  v101 = *(_QWORD *)(v103 - 8);
  v11 = *(_QWORD *)(v101 + 64);
  MEMORY[0x1E0C80A78](v103);
  v100 = (char *)&v78 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v102 = (char *)&v78 - v13;
  sub_1DC089DA4(0, (unint64_t *)&qword_1EDB28DE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF0D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v78 - v15;
  v17 = sub_1DC4010E4();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(_QWORD *)(v18 + 64);
  MEMORY[0x1E0C80A78](v17);
  v99 = (char *)&v78 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v78 - v21;
  v23 = type metadata accessor for WatchlistMembershipCommandContext(0);
  sub_1DC1338B8(a4 + *(int *)(v23 + 20), (uint64_t)v16);
  v24 = v18;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
    return sub_1DC0B091C((uint64_t)v16, (unint64_t *)&qword_1EDB28DE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF0D0]);
  v96 = *(void (**)(char *, char *, uint64_t))(v18 + 32);
  v96(v22, v16, v17);
  v92 = *(void (**)(char *, uint64_t, uint64_t))(v101 + 16);
  v92(v102, a4, v103);
  __swift_project_boxed_opaque_existential_1((_QWORD *)v7 + 2, *((_QWORD *)v7 + 5));
  v90 = v18;
  v91 = v22;
  if ((a5 & 1) != 0)
  {
    v48 = v100;
    sub_1DC400A30();
    v49 = (_QWORD *)sub_1DC401228();
    v89 = *(void (**)(char *, uint64_t))(v101 + 8);
    v89(v48, v103);
    v50 = sub_1DC4010B4();
    LODWORD(v86) = sub_1DC213550(v50, v51, v49);
    swift_bridgeObjectRelease();
    v52 = swift_bridgeObjectRelease();
    MEMORY[0x1E0C80A78](v52);
    *(&v78 - 4) = (uint64_t)v7;
    *(&v78 - 3) = (uint64_t)v22;
    v54 = v102;
    v53 = v103;
    *(&v78 - 2) = (uint64_t)v102;
    v88 = (void (*)(void))sub_1DC402E0C();
    sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3F8D0);
    v84 = sub_1DC409148();
    v87 = *(void (**)(void))(v24 + 16);
    v80 = v17;
    v55 = v99;
    v87();
    v92(v48, (uint64_t)v54, v53);
    v56 = *(unsigned __int8 *)(v24 + 80);
    v57 = (v56 + 16) & ~v56;
    v58 = v101;
    v59 = *(unsigned __int8 *)(v101 + 80);
    v82 = (char *)v57;
    v60 = (v19 + v59 + v57) & ~v59;
    v85 = v60 + v11;
    v83 = v60;
    v81 = (void (*)(uint64_t, char *, uint64_t))(v56 | v59 | 7);
    v61 = (v60 + v11 + 7) & 0xFFFFFFFFFFFFFFF8;
    v79 = (v61 + 15) & 0xFFFFFFFFFFFFFFF8;
    v62 = (v61 + 31) & 0xFFFFFFFFFFFFFFF8;
    v63 = swift_allocObject();
    v64 = v55;
    v65 = v80;
    v96((char *)(v63 + v57), v64, v80);
    v66 = v63 + v60;
    v101 = *(_QWORD *)(v58 + 32);
    v67 = v103;
    ((void (*)(uint64_t, char *, uint64_t))v101)(v66, v48, v103);
    v68 = v95;
    *(_QWORD *)(v63 + v61) = v94;
    v69 = v63 + v79;
    *(_QWORD *)v69 = v7;
    *(_BYTE *)(v69 + 8) = v86 & 1;
    v70 = (_QWORD *)(v63 + v62);
    v71 = v93;
    *v70 = v68;
    v70[1] = v71;
    *(_QWORD *)(v63 + ((v62 + 23) & 0xFFFFFFFFFFFFFFF8)) = v97;
    swift_retain();
    swift_retain();
    swift_unknownObjectRetain();
    swift_retain();
    v72 = (void *)v84;
    sub_1DC402D1C();
    swift_release();

    swift_release();
    v73 = v99;
    v74 = v91;
    ((void (*)(char *, char *, uint64_t))v87)(v99, v91, v65);
    v75 = v102;
    v92(v48, (uint64_t)v102, v67);
    v76 = swift_allocObject();
    v96(&v82[v76], v73, v65);
    ((void (*)(uint64_t, char *, uint64_t))v101)(v76 + v83, v48, v67);
    v77 = (void *)sub_1DC402C80();
    sub_1DC402D34();
    swift_release();
    swift_release();
    swift_release();

    v89(v75, v67);
    return (*(uint64_t (**)(char *, uint64_t))(v90 + 8))(v74, v65);
  }
  else
  {
    v26 = sub_1DC400ACC();
    MEMORY[0x1E0C80A78](v26);
    *(&v78 - 2) = (uint64_t)v22;
    sub_1DC241CE4(sub_1DC2451E8, (uint64_t)(&v78 - 4), v27, (uint64_t (*)(_QWORD))MEMORY[0x1E0DAF270], (void (*)(BOOL, uint64_t, uint64_t))sub_1DC2AD6CC);
    v87 = v28;
    MEMORY[0x1E0C80A78](v28);
    *(&v78 - 4) = (uint64_t)v7;
    *(&v78 - 3) = (uint64_t)v22;
    v29 = v102;
    *(&v78 - 2) = (uint64_t)v102;
    v89 = (void (*)(char *, uint64_t))sub_1DC402E0C();
    sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3F8D0);
    v85 = sub_1DC409148();
    v88 = *(void (**)(void))(v18 + 16);
    v82 = v7;
    v30 = v99;
    v88();
    v92(v100, (uint64_t)v29, v103);
    v31 = *(unsigned __int8 *)(v18 + 80);
    v32 = (v31 + 16) & ~v31;
    v33 = v101;
    v34 = *(unsigned __int8 *)(v101 + 80);
    v84 = v32;
    v35 = (v19 + v34 + v32) & ~v34;
    v86 = v35 + v11;
    v83 = v31 | v34 | 7;
    v36 = (v35 + v11 + 7) & 0xFFFFFFFFFFFFFFF8;
    v37 = (v36 + 15) & 0xFFFFFFFFFFFFFFF8;
    v38 = (v37 + 15) & 0xFFFFFFFFFFFFFFF8;
    v39 = swift_allocObject();
    v96((char *)(v39 + v32), v30, v17);
    v81 = *(void (**)(uint64_t, char *, uint64_t))(v33 + 32);
    v40 = v100;
    v41 = v103;
    v81(v39 + v35, v100, v103);
    v42 = v93;
    *(_QWORD *)(v39 + v36) = v94;
    *(_QWORD *)(v39 + v37) = v87;
    v43 = (_QWORD *)(v39 + v38);
    *v43 = v95;
    v43[1] = v42;
    *(_QWORD *)(v39 + ((v38 + 23) & 0xFFFFFFFFFFFFFFF8)) = v97;
    swift_retain();
    swift_unknownObjectRetain();
    swift_retain();
    v44 = (void *)v85;
    sub_1DC402D1C();
    swift_release();

    swift_release();
    ((void (*)(char *, char *, uint64_t))v88)(v30, v91, v17);
    v45 = v102;
    v92(v40, (uint64_t)v102, v41);
    v46 = swift_allocObject();
    v96((char *)(v46 + v84), v30, v17);
    v81(v46 + v35, v40, v41);
    v47 = (void *)sub_1DC402C80();
    sub_1DC402D34();
    swift_release();
    swift_release();
    swift_release();

    (*(void (**)(char *, uint64_t))(v101 + 8))(v45, v41);
    return (*(uint64_t (**)(char *, uint64_t))(v90 + 8))(v91, v17);
  }
}

uint64_t sub_1DC242738(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t);
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(unint64_t, char *, uint64_t);
  _QWORD v39[3];
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  char *v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v52 = a8;
  v46 = a7;
  v39[2] = a6;
  v41 = a1;
  v50 = a10;
  v51 = a9;
  v13 = sub_1DC40124C();
  v44 = *(_QWORD *)(v13 - 8);
  v45 = v13;
  v14 = *(_QWORD *)(v44 + 64);
  MEMORY[0x1E0C80A78](v13);
  v49 = (char *)v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v48 = (char *)v39 - v16;
  v53 = sub_1DC4010E4();
  v42 = *(_QWORD *)(v53 - 8);
  v17 = *(_QWORD *)(v42 + 64);
  MEMORY[0x1E0C80A78](v53);
  v47 = (char *)v39 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0E7FF0();
  v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_1DC40C740;
  v40 = a3;
  v19 = sub_1DC4010B4();
  v21 = v20;
  v22 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v18 + 56) = MEMORY[0x1E0DEA968];
  v23 = sub_1DC0E7FAC();
  *(_QWORD *)(v18 + 64) = v23;
  *(_QWORD *)(v18 + 32) = v19;
  *(_QWORD *)(v18 + 40) = v21;
  v43 = a4;
  v24 = sub_1DC40121C();
  *(_QWORD *)(v18 + 96) = v22;
  *(_QWORD *)(v18 + 104) = v23;
  *(_QWORD *)(v18 + 72) = v24;
  *(_QWORD *)(v18 + 80) = v25;
  sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FC00);
  v26 = (void *)sub_1DC409580();
  sub_1DC408FE0();
  sub_1DC403F28();
  swift_bridgeObjectRelease();

  if (a5)
  {
    sub_1DC405410();
    sub_1DC0A3390(0, (unint64_t *)&qword_1EDB29C40);
    sub_1DC4018AC();
    if ((swift_dynamicCast() & 1) != 0)
    {
      v39[1] = v54;
      v39[0] = swift_allocObject();
      swift_weakInit();
      v27 = v42;
      (*(void (**)(char *, uint64_t, uint64_t))(v42 + 16))(v47, v40, v53);
      v28 = v44;
      v29 = v45;
      v30 = *(void (**)(char *, uint64_t, uint64_t))(v44 + 16);
      v30(v48, v41, v45);
      v30(v49, v43, v29);
      v31 = (*(unsigned __int8 *)(v27 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
      v32 = *(unsigned __int8 *)(v28 + 80);
      v33 = (v17 + v32 + v31) & ~v32;
      v34 = (v14 + v32 + v33) & ~v32;
      v35 = v34 + v14;
      v36 = swift_allocObject();
      *(_QWORD *)(v36 + 16) = v39[0];
      (*(void (**)(unint64_t, char *, uint64_t))(v27 + 32))(v36 + v31, v47, v53);
      v37 = *(void (**)(unint64_t, char *, uint64_t))(v28 + 32);
      v37(v36 + v33, v48, v29);
      v37(v36 + v34, v49, v29);
      *(_BYTE *)(v36 + v35) = v46 & 1;
      swift_retain();
      sub_1DC401828();
      swift_release();
      swift_release();
      swift_release();
    }
  }
  swift_getObjectType();
  if (qword_1EDB2AA88 != -1)
    swift_once();
  sub_1DC404A44();
  type metadata accessor for WatchlistMembershipCommandContext(0);
  return sub_1DC404A44();
}

uint64_t sub_1DC242B08(uint64_t a1, uint64_t a2, _QWORD *a3, unint64_t a4, void (*a5)(char *, uint64_t), int a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t result;
  void (*v34)(char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(char *, uint64_t);
  uint64_t v45;
  char *v46;
  uint64_t v47;
  char v48;
  unsigned int *v49;
  uint64_t v50;
  void (*v51)(char *, uint64_t, uint64_t);
  uint64_t v52;
  char *v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(uint64_t, uint64_t, uint64_t);
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(char *, uint64_t);
  uint64_t v66;
  char v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char v76;
  unsigned int *v77;
  char *v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  void (*v83)(char *, uint64_t);
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  void (*v91)(char *, uint64_t);
  void (*v92)(char *, char *, uint64_t);
  uint64_t v93;
  void (*v94)(char *, _QWORD, uint64_t);
  void (*v95)(char *, uint64_t);
  char *v96;
  uint64_t v97;
  char *v98;
  char *v99;
  char *v100;
  char *v101;
  char *v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  int v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  char *v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  void (*v118)(char *, uint64_t);
  unsigned int v119;
  void (*v120)(uint64_t, uint64_t, uint64_t);
  uint64_t v121;
  char *v122;
  _QWORD *v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  unint64_t v127;
  unint64_t v128;
  uint64_t v129;
  __int128 v130;
  uint64_t v131;
  uint64_t v132;
  __int128 v133;
  __int128 v134;

  v106 = a6;
  v118 = a5;
  v128 = a4;
  v123 = a3;
  v132 = a1;
  v6 = sub_1DC4036C4();
  v117 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v122 = (char *)&v90 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v125 = sub_1DC403184();
  v116 = *(_QWORD *)(v125 - 8);
  MEMORY[0x1E0C80A78](v125);
  v103 = (char *)&v90 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v124 = (char *)&v90 - v10;
  MEMORY[0x1E0C80A78](v11);
  v114 = (char *)&v90 - v12;
  v126 = sub_1DC40124C();
  v112 = *(_QWORD *)(v126 - 8);
  MEMORY[0x1E0C80A78](v126);
  v14 = (char *)&v90 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v101 = (char *)&v90 - v16;
  MEMORY[0x1E0C80A78](v17);
  v111 = (char *)&v90 - v18;
  v129 = sub_1DC403178();
  v115 = *(_QWORD *)(v129 - 8);
  MEMORY[0x1E0C80A78](v129);
  v102 = (char *)&v90 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v113 = (char *)&v90 - v21;
  v22 = sub_1DC402F50();
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)&v90 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_1DC4011C8();
  v26 = *(_QWORD *)(v25 - 8);
  MEMORY[0x1E0C80A78](v25);
  v28 = (char *)&v90 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = sub_1DC402F44();
  v30 = *(_QWORD *)(v29 - 8);
  MEMORY[0x1E0C80A78](v29);
  v32 = (char *)&v90 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v105 = result;
    v100 = v14;
    v104 = v30;
    sub_1DC4010B4();
    v107 = v6;
    sub_1DC401078();
    sub_1DC23A0A0((uint64_t)v24);
    v34 = *(void (**)(char *, uint64_t))(v26 + 8);
    v96 = v28;
    v97 = v25;
    v95 = v34;
    v34(v28, v25);
    sub_1DC4010CC();
    v98 = v24;
    sub_1DC402F2C();
    sub_1DC089DA4(0, (unint64_t *)&qword_1EDB3FE40, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8178], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v110 = v35;
    v36 = sub_1DC401618();
    v37 = *(_QWORD *)(v36 - 8);
    v108 = v36;
    v38 = *(unsigned __int8 *)(v37 + 80);
    v109 = ((v38 + 32) & ~v38) + *(_QWORD *)(v37 + 72);
    v39 = (v38 + 32) & ~v38;
    v131 = v39;
    v121 = v38 | 7;
    v40 = swift_allocObject();
    v130 = xmmword_1DC40DC10;
    *(_OWORD *)(v40 + 16) = xmmword_1DC40DC10;
    v41 = v40 + v39;
    v42 = *MEMORY[0x1E0CF8170];
    v120 = *(void (**)(uint64_t, uint64_t, uint64_t))(v37 + 104);
    v119 = v42;
    v120(v41, v42, v36);
    v43 = sub_1DC080808(&qword_1EDB29738, (uint64_t (*)(uint64_t))MEMORY[0x1E0DACD70], MEMORY[0x1E0DACD58]);
    v90 = (unint64_t)" %{public}@ using command";
    v127 = 0x80000001DC43FA80;
    v93 = v43;
    sub_1DC4015C4();
    swift_bridgeObjectRelease();
    v44 = *(void (**)(char *, uint64_t))(v104 + 8);
    v99 = v32;
    v104 = v29;
    v91 = v44;
    v44(v32, v29);
    v45 = v112;
    v46 = v111;
    v47 = v126;
    (*(void (**)(char *, unint64_t, uint64_t))(v112 + 16))(v111, v128, v126);
    v48 = sub_1DC4011D4();
    v49 = (unsigned int *)MEMORY[0x1E0DAD158];
    v50 = v116;
    v51 = *(void (**)(char *, uint64_t, uint64_t))(v116 + 104);
    if ((v48 & 1) == 0)
      v49 = (unsigned int *)MEMORY[0x1E0DAD150];
    v52 = *v49;
    v53 = v114;
    v54 = v125;
    v94 = *(void (**)(char *, _QWORD, uint64_t))(v116 + 104);
    v51(v114, v52, v125);
    v92 = *(void (**)(char *, char *, uint64_t))(v50 + 16);
    v92(v124, v53, v54);
    v55 = v113;
    sub_1DC40316C();
    v112 = *(_QWORD *)(v45 + 8);
    ((void (*)(char *, uint64_t))v112)(v46, v47);
    v116 = *(_QWORD *)(v50 + 8);
    ((void (*)(char *, uint64_t))v116)(v53, v54);
    v56 = swift_allocObject();
    *(_OWORD *)(v56 + 16) = v130;
    v57 = v108;
    v58 = v120;
    v120(v56 + v131, v42, v108);
    v59 = sub_1DC080808(&qword_1EDB297C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD148], MEMORY[0x1E0DAD138]);
    v60 = v129;
    v114 = (char *)v59;
    sub_1DC4015C4();
    swift_bridgeObjectRelease();
    v115 = *(_QWORD *)(v115 + 8);
    ((void (*)(char *, uint64_t))v115)(v55, v60);
    sub_1DC401228();
    v61 = v122;
    sub_1DC4036B8();
    v62 = swift_allocObject();
    *(_OWORD *)(v62 + 16) = v130;
    v58(v62 + v131, v119, v57);
    v63 = sub_1DC080808(&qword_1F034FAC8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD880], MEMORY[0x1E0DAD870]);
    v64 = v107;
    sub_1DC4015C4();
    swift_bridgeObjectRelease();
    v65 = *(void (**)(char *, uint64_t))(v117 + 8);
    v65(v61, v64);
    sub_1DC403430();
    v66 = sub_1DC080808(&qword_1EDB29830, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD510], MEMORY[0x1E0DAD4E0]);
    v133 = 0u;
    v134 = 0u;
    sub_1DC4015DC();
    sub_1DC150744((uint64_t)&v133);
    v67 = sub_1DC4011D4();
    v68 = v129;
    if ((v67 & 1) != 0 || (v106 & 1) != 0)
    {
      return swift_release();
    }
    else
    {
      v127 = v66;
      sub_1DC4010B4();
      v118 = v65;
      v117 = v63;
      v69 = v96;
      sub_1DC401078();
      sub_1DC23A0A0((uint64_t)v98);
      v95(v69, v97);
      sub_1DC4010CC();
      v70 = v99;
      sub_1DC402F2C();
      v71 = swift_allocObject();
      *(_OWORD *)(v71 + 16) = v130;
      v120(v71 + v131, v119, v108);
      v128 = v90 | 0x8000000000000000;
      v72 = v104;
      sub_1DC4015C4();
      swift_bridgeObjectRelease();
      v91(v70, v72);
      v73 = v68;
      v74 = v105;
      v123 = (_QWORD *)(v105 + 16);
      __swift_project_boxed_opaque_existential_1((_QWORD *)(v105 + 16), *(_QWORD *)(v105 + 40));
      v75 = v101;
      sub_1DC400A30();
      v76 = sub_1DC4011D4();
      v77 = (unsigned int *)MEMORY[0x1E0DAD158];
      if ((v76 & 1) == 0)
        v77 = (unsigned int *)MEMORY[0x1E0DAD150];
      v78 = v103;
      v79 = v125;
      v94(v103, *v77, v125);
      v92(v124, v78, v79);
      v80 = v102;
      sub_1DC40316C();
      v81 = v75;
      v82 = v126;
      v83 = (void (*)(char *, uint64_t))v112;
      ((void (*)(char *, uint64_t))v112)(v81, v126);
      ((void (*)(char *, uint64_t))v116)(v78, v79);
      v84 = swift_allocObject();
      *(_OWORD *)(v84 + 16) = v130;
      v85 = v108;
      v120(v84 + v131, v119, v108);
      sub_1DC4015C4();
      swift_bridgeObjectRelease();
      ((void (*)(char *, uint64_t))v115)(v80, v73);
      __swift_project_boxed_opaque_existential_1(v123, *(_QWORD *)(v74 + 40));
      v86 = v100;
      sub_1DC400A30();
      sub_1DC401228();
      v83(v86, v82);
      v87 = v122;
      sub_1DC4036B8();
      v88 = swift_allocObject();
      *(_OWORD *)(v88 + 16) = v130;
      v120(v88 + v131, v119, v85);
      v89 = v107;
      sub_1DC4015C4();
      swift_bridgeObjectRelease();
      v118(v87, v89);
      v133 = 0u;
      v134 = 0u;
      sub_1DC4015DC();
      swift_release();
      return sub_1DC150744((uint64_t)&v133);
    }
  }
  return result;
}

uint64_t sub_1DC243694(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char v12;
  char v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  v4 = sub_1DC4010E4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1DC40124C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1DC4011D4();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
  if ((v12 & 1) != 0)
  {
    v13 = 0;
  }
  else
  {
    v14 = (_QWORD *)sub_1DC401228();
    v15 = sub_1DC4010B4();
    v13 = sub_1DC213550(v15, v16, v14);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return v13 & 1;
}

uint64_t sub_1DC2437E4(uint64_t a1)
{
  uint64_t v1;

  __swift_project_boxed_opaque_existential_1((_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 40));
  sub_1DC4010B4();
  v1 = sub_1DC400AC0();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1DC243868(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v44 = a8;
  v39 = a6;
  v42 = a9;
  v43 = a7;
  v12 = sub_1DC40124C();
  v37 = *(_QWORD *)(v12 - 8);
  v38 = v12;
  v13 = *(_QWORD *)(v37 + 64);
  MEMORY[0x1E0C80A78](v12);
  v41 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = sub_1DC4010E4();
  v36 = *(_QWORD *)(v45 - 8);
  v14 = *(_QWORD *)(v36 + 64);
  MEMORY[0x1E0C80A78](v45);
  v40 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0E7FF0();
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1DC40C740;
  v35 = a3;
  v16 = sub_1DC4010B4();
  v18 = v17;
  v19 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v15 + 56) = MEMORY[0x1E0DEA968];
  v20 = sub_1DC0E7FAC();
  *(_QWORD *)(v15 + 64) = v20;
  *(_QWORD *)(v15 + 32) = v16;
  *(_QWORD *)(v15 + 40) = v18;
  v21 = a4;
  v22 = sub_1DC40121C();
  *(_QWORD *)(v15 + 96) = v19;
  *(_QWORD *)(v15 + 104) = v20;
  *(_QWORD *)(v15 + 72) = v22;
  *(_QWORD *)(v15 + 80) = v23;
  sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FC00);
  v24 = (void *)sub_1DC409580();
  sub_1DC408FE0();
  sub_1DC403F28();
  swift_bridgeObjectRelease();

  if (a5)
  {
    sub_1DC405410();
    sub_1DC0A3390(0, (unint64_t *)&qword_1EDB29C40);
    sub_1DC4018AC();
    if ((swift_dynamicCast() & 1) != 0)
    {
      v34 = v46;
      v25 = v36;
      v26 = v45;
      (*(void (**)(char *, uint64_t, uint64_t))(v36 + 16))(v40, v35, v45);
      v27 = v37;
      v28 = v38;
      (*(void (**)(char *, uint64_t, uint64_t))(v37 + 16))(v41, v21, v38);
      v29 = (*(unsigned __int8 *)(v25 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
      v30 = (v14 + *(unsigned __int8 *)(v27 + 80) + v29) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
      v31 = (v13 + v30 + 7) & 0xFFFFFFFFFFFFFFF8;
      v32 = swift_allocObject();
      (*(void (**)(unint64_t, char *, uint64_t))(v25 + 32))(v32 + v29, v40, v26);
      (*(void (**)(unint64_t, char *, uint64_t))(v27 + 32))(v32 + v30, v41, v28);
      *(_QWORD *)(v32 + v31) = v39;
      swift_bridgeObjectRetain();
      sub_1DC401828();
      swift_release();
      swift_release();
    }
  }
  swift_getObjectType();
  if (qword_1EDB2AA88 != -1)
    swift_once();
  sub_1DC404A44();
  type metadata accessor for WatchlistMembershipCommandContext(0);
  return sub_1DC404A44();
}

uint64_t sub_1DC243B98(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  void (*v36)(char *, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(char *, uint64_t);
  uint64_t v48;
  char *v49;
  char v50;
  unsigned int *v51;
  uint64_t v52;
  void (*v53)(char *, uint64_t, uint64_t);
  uint64_t v54;
  char *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t result;
  unint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  char *v73;
  void (*v74)(char *, uint64_t, uint64_t);
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  void (*v88)(uint64_t, uint64_t, uint64_t);
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  char *v96;
  int v97;
  int v98;
  int v99;
  int v100;
  int v101;
  int v102;
  int v103;
  int v104;
  int v105;
  unint64_t v106;
  int v107;
  int v108;
  uint64_t v109;
  int v110;
  int v111;
  int v112;
  int v113;
  uint64_t v114;
  unsigned int v115;
  unsigned int v116;
  int v117;
  int v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  char *v124;
  uint64_t v125;
  void (*v126)(char *, char *, uint64_t);
  void (*v127)(char *, uint64_t, uint64_t);
  void (*v128)(char *, uint64_t);
  uint64_t v129;
  uint64_t v130;
  void (*v131)(char *, uint64_t);
  char *v132;
  uint64_t v133;
  char *v134;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  char *v140;
  char *v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  uint64_t v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  unint64_t v150;
  unint64_t v151;
  char *v152;
  uint64_t v153;
  char *v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  void (*v160)(uint64_t);
  unsigned int v161;
  uint64_t v162;
  __int128 v163;
  uint64_t v164;
  __int128 v165;
  __int128 v166;

  v109 = a4;
  v151 = a3;
  v164 = a1;
  v148 = sub_1DC4036C4();
  v121 = *(_QWORD *)(v148 - 8);
  MEMORY[0x1E0C80A78](v148);
  v147 = (char *)&v98 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v146 = sub_1DC403184();
  v125 = *(_QWORD *)(v146 - 8);
  MEMORY[0x1E0C80A78](v146);
  v141 = (char *)&v98 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v145 = (char *)&v98 - v8;
  MEMORY[0x1E0C80A78](v9);
  v124 = (char *)&v98 - v10;
  v156 = sub_1DC40124C();
  v149 = *(_QWORD *)(v156 - 8);
  MEMORY[0x1E0C80A78](v156);
  v140 = (char *)&v98 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v154 = (char *)&v98 - v13;
  MEMORY[0x1E0C80A78](v14);
  v152 = (char *)&v98 - v15;
  v144 = sub_1DC403178();
  v130 = *(_QWORD *)(v144 - 8);
  MEMORY[0x1E0C80A78](v144);
  v139 = (char *)&v98 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v123 = (char *)&v98 - v18;
  v138 = sub_1DC402F50();
  v137 = *(_QWORD *)(v138 - 8);
  MEMORY[0x1E0C80A78](v138);
  v136 = (char *)&v98 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v98 - v21;
  v23 = sub_1DC4011C8();
  v24 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  v134 = (char *)&v98 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v26);
  v142 = (char *)&v98 - v27;
  MEMORY[0x1E0C80A78](v28);
  v30 = (char *)&v98 - v29;
  v31 = sub_1DC402F44();
  v153 = *(_QWORD *)(v31 - 8);
  MEMORY[0x1E0C80A78](v31);
  v132 = (char *)&v98 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v33);
  v35 = (char *)&v98 - v34;
  sub_1DC4010B4();
  sub_1DC401078();
  sub_1DC23A0A0((uint64_t)v22);
  v135 = v24;
  v36 = *(void (**)(char *, uint64_t))(v24 + 8);
  v143 = v23;
  v131 = v36;
  v36(v30, v23);
  v155 = a2;
  sub_1DC4010CC();
  v37 = v156;
  sub_1DC402F2C();
  sub_1DC089DA4(0, (unint64_t *)&qword_1EDB3FE40, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8178], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v39 = v38;
  v40 = sub_1DC401618();
  v41 = *(_QWORD *)(v40 - 8);
  v162 = v40;
  v42 = *(unsigned __int8 *)(v41 + 80);
  v158 = ((v42 + 32) & ~v42) + *(_QWORD *)(v41 + 72);
  v159 = (v42 + 32) & ~v42;
  v43 = v159;
  v157 = v42 | 7;
  v44 = v39;
  v45 = swift_allocObject();
  v163 = xmmword_1DC40DC10;
  *(_OWORD *)(v45 + 16) = xmmword_1DC40DC10;
  v161 = *MEMORY[0x1E0CF8170];
  v160 = *(void (**)(uint64_t))(v41 + 104);
  v160(v45 + v43);
  v46 = sub_1DC080808(&qword_1EDB29738, (uint64_t (*)(uint64_t))MEMORY[0x1E0DACD70], MEMORY[0x1E0DACD58]);
  v106 = (unint64_t)" %{public}@ using command";
  v150 = 0x80000001DC43FA80;
  v129 = v46;
  sub_1DC4015C4();
  swift_bridgeObjectRelease();
  v47 = *(void (**)(char *, uint64_t))(v153 + 8);
  v133 = v31;
  v128 = v47;
  v47(v35, v31);
  v48 = v149;
  v49 = v152;
  v153 = *(_QWORD *)(v149 + 16);
  ((void (*)(char *, unint64_t, uint64_t))v153)(v152, v151, v37);
  v50 = sub_1DC4011D4();
  v51 = (unsigned int *)MEMORY[0x1E0DAD158];
  v52 = v125;
  v53 = *(void (**)(char *, uint64_t, uint64_t))(v125 + 104);
  if ((v50 & 1) == 0)
    v51 = (unsigned int *)MEMORY[0x1E0DAD150];
  v54 = *v51;
  v55 = v124;
  v56 = v146;
  v127 = *(void (**)(char *, uint64_t, uint64_t))(v125 + 104);
  v53(v124, v54, v146);
  v126 = *(void (**)(char *, char *, uint64_t))(v52 + 16);
  v126(v145, v55, v56);
  v57 = v123;
  sub_1DC40316C();
  v152 = *(char **)(v48 + 8);
  ((void (*)(char *, uint64_t))v152)(v49, v37);
  v125 = *(_QWORD *)(v52 + 8);
  ((void (*)(char *, uint64_t))v125)(v55, v56);
  v58 = swift_allocObject();
  *(_OWORD *)(v58 + 16) = v163;
  v59 = v159;
  ((void (*)(uint64_t, _QWORD, uint64_t))v160)(v58 + v159, v161, v162);
  v60 = sub_1DC080808(&qword_1EDB297C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD148], MEMORY[0x1E0DAD138]);
  v61 = v144;
  v124 = (char *)v60;
  sub_1DC4015C4();
  swift_bridgeObjectRelease();
  v123 = *(char **)(v130 + 8);
  ((void (*)(char *, uint64_t))v123)(v57, v61);
  sub_1DC401228();
  v62 = v147;
  sub_1DC4036B8();
  v130 = v44;
  v63 = swift_allocObject();
  *(_OWORD *)(v63 + 16) = v163;
  ((void (*)(uint64_t, _QWORD, uint64_t))v160)(v63 + v59, v161, v162);
  v64 = sub_1DC080808(&qword_1F034FAC8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD880], MEMORY[0x1E0DAD870]);
  v65 = v148;
  v122 = v64;
  sub_1DC4015C4();
  swift_bridgeObjectRelease();
  v121 = *(_QWORD *)(v121 + 8);
  ((void (*)(char *, uint64_t))v121)(v62, v65);
  v66 = sub_1DC403550();
  v67 = sub_1DC080808(&qword_1F034FAD0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD680], MEMORY[0x1E0DAD678]);
  v165 = 0u;
  v166 = 0u;
  v120 = v66;
  v119 = v67;
  sub_1DC4015DC();
  sub_1DC150744((uint64_t)&v165);
  result = sub_1DC4011D4();
  if ((result & 1) != 0)
  {
    v69 = *(_QWORD *)(v109 + 16);
    if (v69)
    {
      v70 = v109 + ((*(unsigned __int8 *)(v149 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v149 + 80));
      v118 = *MEMORY[0x1E0DAF1E8];
      v113 = *MEMORY[0x1E0DAF1F0];
      v111 = *MEMORY[0x1E0DAF1C0];
      v108 = *MEMORY[0x1E0DAF1D8];
      v105 = *MEMORY[0x1E0DAF1C8];
      v103 = *MEMORY[0x1E0DAF1E0];
      v101 = *MEMORY[0x1E0DAF1D0];
      v99 = *MEMORY[0x1E0DAF1B8];
      v98 = *MEMORY[0x1E0DACD78];
      v100 = *MEMORY[0x1E0DACDB0];
      v102 = *MEMORY[0x1E0DACD98];
      v104 = *MEMORY[0x1E0DACD88];
      v107 = *MEMORY[0x1E0DACD90];
      v110 = *MEMORY[0x1E0DACD80];
      v112 = *MEMORY[0x1E0DACDA8];
      v117 = *MEMORY[0x1E0DACDA0];
      v116 = *MEMORY[0x1E0DAD150];
      v115 = *MEMORY[0x1E0DAD158];
      v114 = *(_QWORD *)(v149 + 72);
      swift_bridgeObjectRetain();
      v151 = v106 | 0x8000000000000000;
      v71 = v154;
      v72 = v143;
      v73 = v142;
      v74 = (void (*)(char *, uint64_t, uint64_t))v153;
      while (1)
      {
        v150 = v69;
        v149 = v70;
        v74(v71, v70, v37);
        sub_1DC4010B4();
        sub_1DC401078();
        v95 = v135;
        v96 = v134;
        (*(void (**)(char *, char *, uint64_t))(v135 + 16))(v134, v73, v72);
        v97 = (*(uint64_t (**)(char *, uint64_t))(v95 + 88))(v96, v72);
        if (v97 != v118
          && v97 != v113
          && v97 != v111
          && v97 != v108
          && v97 != v105
          && v97 != v103
          && v97 != v101
          && v97 != v99)
        {
          break;
        }
        (*(void (**)(char *))(v137 + 104))(v136);
        v131(v73, v72);
        sub_1DC4010CC();
        v75 = v132;
        sub_1DC402F2C();
        v76 = swift_allocObject();
        *(_OWORD *)(v76 + 16) = v163;
        v77 = v159;
        ((void (*)(uint64_t, _QWORD, uint64_t))v160)(v76 + v159, v161, v162);
        v78 = v133;
        sub_1DC4015C4();
        swift_bridgeObjectRelease();
        v128(v75, v78);
        v79 = v140;
        ((void (*)(char *, char *, uint64_t))v153)(v140, v71, v37);
        if ((sub_1DC4011D4() & 1) != 0)
          v80 = v115;
        else
          v80 = v116;
        v81 = v141;
        v82 = v146;
        v127(v141, v80, v146);
        v126(v145, v81, v82);
        v83 = v139;
        sub_1DC40316C();
        ((void (*)(char *, uint64_t))v152)(v79, v156);
        ((void (*)(char *, uint64_t))v125)(v81, v82);
        v84 = swift_allocObject();
        *(_OWORD *)(v84 + 16) = v163;
        v85 = v84 + v77;
        v86 = v161;
        v87 = v162;
        v88 = (void (*)(uint64_t, uint64_t, uint64_t))v160;
        ((void (*)(uint64_t, _QWORD, uint64_t))v160)(v85, v161, v162);
        v89 = v144;
        sub_1DC4015C4();
        swift_bridgeObjectRelease();
        v90 = v83;
        v72 = v143;
        ((void (*)(char *, uint64_t))v123)(v90, v89);
        sub_1DC401228();
        v91 = v147;
        sub_1DC4036B8();
        v92 = swift_allocObject();
        *(_OWORD *)(v92 + 16) = v163;
        v88(v92 + v159, v86, v87);
        v73 = v142;
        v93 = v148;
        sub_1DC4015C4();
        swift_bridgeObjectRelease();
        v94 = v91;
        v71 = v154;
        v37 = v156;
        ((void (*)(char *, uint64_t))v121)(v94, v93);
        v165 = 0u;
        v166 = 0u;
        sub_1DC4015DC();
        sub_1DC150744((uint64_t)&v165);
        ((void (*)(char *, uint64_t))v152)(v71, v37);
        v70 = v149 + v114;
        v74 = (void (*)(char *, uint64_t, uint64_t))v153;
        v69 = v150 - 1;
        if (v150 == 1)
          return swift_bridgeObjectRelease();
      }
      sub_1DC4099DC();
      __break(1u);
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

void sub_1DC244A10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;

  sub_1DC0E7FF0();
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1DC40FA70;
  v1 = sub_1DC4010B4();
  v3 = v2;
  v4 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v0 + 56) = MEMORY[0x1E0DEA968];
  v5 = sub_1DC0E7FAC();
  *(_QWORD *)(v0 + 64) = v5;
  *(_QWORD *)(v0 + 32) = v1;
  *(_QWORD *)(v0 + 40) = v3;
  v6 = sub_1DC40121C();
  *(_QWORD *)(v0 + 96) = v4;
  *(_QWORD *)(v0 + 104) = v5;
  *(_QWORD *)(v0 + 72) = v6;
  *(_QWORD *)(v0 + 80) = v7;
  sub_1DC0A3390(0, (unint64_t *)&qword_1EDB400E0);
  sub_1DC409808();
  *(_QWORD *)(v0 + 136) = v4;
  *(_QWORD *)(v0 + 144) = v5;
  *(_QWORD *)(v0 + 112) = 0;
  *(_QWORD *)(v0 + 120) = 0xE000000000000000;
  sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FC00);
  v8 = (void *)sub_1DC409580();
  sub_1DC408FE0();
  sub_1DC403F28();
  swift_bridgeObjectRelease();

}

uint64_t sub_1DC244B68()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  sub_1DC148A20(v0 + 56);
  return swift_deallocClassInstance();
}

uint64_t sub_1DC244B94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char *a5, uint64_t a6)
{
  return sub_1DC241F00(a1, a2, a3, a4, *a5, a6);
}

uint64_t sub_1DC244BB8@<X0>(uint64_t a1@<X3>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = sub_1DC244DDC(a1);
  *a2 = result & 1;
  return result;
}

BOOL sub_1DC244BE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _BOOL8 v11;
  uint64_t v13;

  v5 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF0D0];
  sub_1DC089DA4(0, (unint64_t *)&qword_1EDB28DE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF0D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v13 - v7;
  v9 = type metadata accessor for WatchlistMembershipCommandContext(0);
  sub_1DC1338B8(a4 + *(int *)(v9 + 20), (uint64_t)v8);
  v10 = sub_1DC4010E4();
  v11 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v8, 1, v10) != 1;
  sub_1DC0B091C((uint64_t)v8, (unint64_t *)&qword_1EDB28DE0, v5);
  return v11;
}

uint64_t sub_1DC244CB4()
{
  uint64_t v0;
  uint64_t result;

  if (MEMORY[0x1DF0CAD78](v0 + 56))
  {
    swift_getObjectType();
    if (qword_1EDB2AA88 != -1)
      swift_once();
    sub_1DC4010E4();
    sub_1DC404A44();
    swift_unknownObjectRelease();
  }
  result = MEMORY[0x1DF0CAD78](v0 + 56);
  if (result)
  {
    swift_getObjectType();
    if (qword_1EDB2AA40 != -1)
      swift_once();
    type metadata accessor for WatchlistMembershipCommandContext(0);
    sub_1DC404A44();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1DC244DDC(uint64_t a1)
{
  uint64_t (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  unint64_t *v21;
  uint64_t (*v22)(uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  void (*v28)(char *, unint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  char v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  _QWORD v44[2];
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;

  v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1DC089DA4(0, &qword_1EDB28E40, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF270], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v44 - v4;
  v6 = sub_1DC40124C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v44 - v11;
  sub_1DC089DA4(0, (unint64_t *)&qword_1EDB28DE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF0D0], v2);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)v44 - v14;
  v16 = sub_1DC4010E4();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)v44 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for WatchlistMembershipCommandContext(0);
  sub_1DC1338B8(a1 + *(int *)(v20 + 20), (uint64_t)v15);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    v21 = (unint64_t *)&qword_1EDB28DE0;
    v22 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF0D0];
    v23 = (uint64_t)v15;
  }
  else
  {
    v47 = v16;
    v48 = v12;
    v50 = v7;
    v45 = v19;
    v46 = v17;
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v19, v15, v16);
    __swift_project_boxed_opaque_existential_1((_QWORD *)v49 + 2, *((_QWORD *)v49 + 5));
    v24 = sub_1DC400ACC();
    v25 = *(_QWORD *)(v24 + 16);
    if (v25)
    {
      v49 = v5;
      v26 = v24 + ((*(unsigned __int8 *)(v50 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80));
      v27 = *(_QWORD *)(v50 + 72);
      v28 = *(void (**)(char *, unint64_t, uint64_t))(v50 + 16);
      v44[1] = v24;
      swift_bridgeObjectRetain();
      while (1)
      {
        v28(v9, v26, v6);
        v29 = sub_1DC4011E0();
        v31 = v30;
        if (v29 == sub_1DC4011E0() && v31 == v32)
          break;
        v33 = sub_1DC4099E8();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v33 & 1) != 0)
          goto LABEL_12;
        v34 = v50;
        (*(void (**)(char *, uint64_t))(v50 + 8))(v9, v6);
        v26 += v27;
        if (!--v25)
        {
          swift_bridgeObjectRelease();
          v35 = 1;
          v5 = v49;
          goto LABEL_13;
        }
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_12:
      swift_bridgeObjectRelease();
      v5 = v49;
      v34 = v50;
      (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v49, v9, v6);
      v35 = 0;
LABEL_13:
      v37 = v48;
      v36 = v45;
    }
    else
    {
      v35 = 1;
      v36 = v45;
      v34 = v50;
      v37 = v48;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v34 + 56))(v5, v35, 1, v6);
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v5, 1, v6) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v37, v5, v6);
      v39 = (_QWORD *)sub_1DC401228();
      v40 = sub_1DC4010B4();
      v42 = sub_1DC213550(v40, v41, v39);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v34 + 8))(v37, v6);
      (*(void (**)(char *, uint64_t))(v46 + 8))(v36, v47);
      v38 = v42 ^ 1;
      return v38 & 1;
    }
    (*(void (**)(char *, uint64_t))(v46 + 8))(v36, v47);
    v21 = &qword_1EDB28E40;
    v22 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF270];
    v23 = (uint64_t)v5;
  }
  sub_1DC0B091C(v23, v21, v22);
  v38 = 1;
  return v38 & 1;
}

uint64_t sub_1DC2451E8(uint64_t a1)
{
  uint64_t v1;

  return sub_1DC243694(a1, *(_QWORD *)(v1 + 16)) & 1;
}

uint64_t sub_1DC245204()
{
  uint64_t v0;

  return sub_1DC2437E4(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1DC245220()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v8;

  v8 = sub_1DC4010E4();
  v1 = *(_QWORD *)(v8 - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);
  v4 = sub_1DC40124C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = (v2 + v3 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  (*(void (**)(unint64_t, uint64_t))(v1 + 8))(v0 + v2, v8);
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + v6, v4);
  swift_release();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DC245320(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;

  v5 = *(_QWORD *)(sub_1DC4010E4() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = *(_QWORD *)(sub_1DC40124C() - 8);
  v9 = (v6 + v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v10 = (*(_QWORD *)(v8 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1DC243868(a1, a2, v2 + v6, v2 + v9, *(_QWORD *)(v2 + v10), *(_QWORD *)(v2 + ((v10 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v2 + ((((v10 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v2 + ((((v10 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8), *(_QWORD *)(v2+ ((((((v10 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFF8)));
}

void sub_1DC2453F8()
{
  sub_1DC245718();
}

uint64_t sub_1DC245408()
{
  uint64_t v0;

  __swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)(v0 + 16) + 16), *(_QWORD *)(*(_QWORD *)(v0 + 16) + 40));
  return sub_1DC400AFC();
}

uint64_t sub_1DC24546C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v1 = sub_1DC4010E4();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = sub_1DC40124C();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (v3 + v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DC245574(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;

  v5 = *(_QWORD *)(sub_1DC4010E4() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = *(_QWORD *)(sub_1DC40124C() - 8);
  v9 = (v6 + v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v10 = (*(_QWORD *)(v8 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1DC242738(a1, a2, v2 + v6, v2 + v9, *(_QWORD *)(v2 + v10), *(_QWORD *)(v2 + ((v10 + 15) & 0xFFFFFFFFFFFFFFF8)), *(unsigned __int8 *)(v2 + ((v10 + 15) & 0xFFFFFFFFFFFFFFF8) + 8), *(_QWORD *)(v2 + ((v10 + 31) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v2 + ((v10 + 31) & 0xFFFFFFFFFFFFFFF8) + 8), *(_QWORD *)(v2 + ((((v10 + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFF8)));
}

uint64_t objectdestroy_2Tm_2()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v1 = sub_1DC4010E4();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = sub_1DC40124C();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (v3 + v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);
  return swift_deallocObject();
}

void sub_1DC245708()
{
  sub_1DC245718();
}

void sub_1DC245718()
{
  sub_1DC4010E4();
  sub_1DC40124C();
  sub_1DC244A10();
}

uint64_t sub_1DC24579C()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1DC2457C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  void (*v10)(unint64_t, uint64_t);

  v1 = sub_1DC4010E4();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = sub_1DC40124C();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = (v3 + v4 + v7) & ~v7;
  v9 = (*(_QWORD *)(v6 + 64) + v7 + v8) & ~v7;
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  v10 = *(void (**)(unint64_t, uint64_t))(v6 + 8);
  v10(v0 + v8, v5);
  v10(v0 + v9, v5);
  return swift_deallocObject();
}

uint64_t sub_1DC245898(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *(_QWORD *)(sub_1DC4010E4() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v3 + 64);
  v6 = *(_QWORD *)(sub_1DC40124C() - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  return sub_1DC242B08(a1, *(_QWORD *)(v1 + 16), (_QWORD *)(v1 + v4), v1 + ((v4 + v5 + v7) & ~v7), (void (*)(char *, uint64_t))(v1 + ((*(_QWORD *)(v6 + 64) + v7 + ((v4 + v5 + v7) & ~v7)) & ~v7)), *(unsigned __int8 *)(v1 + ((*(_QWORD *)(v6 + 64) + v7 + ((v4 + v5 + v7) & ~v7)) & ~v7) + *(_QWORD *)(v6 + 64)));
}

uint64_t sub_1DC245920()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v1 = sub_1DC4010E4();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = sub_1DC40124C();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (v3 + v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1DC2459E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v3 = *(_QWORD *)(sub_1DC4010E4() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v3 + 64);
  v6 = *(_QWORD *)(sub_1DC40124C() - 8);
  v7 = (v4 + v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  return sub_1DC243B98(a1, v1 + v4, v1 + v7, *(_QWORD *)(v1 + ((*(_QWORD *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t *sub_1DC245A64(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t *, _QWORD, uint64_t, uint64_t);

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    sub_1DC245B48();
    v8 = v7;
    v9 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v9 + 48))(a2, 2, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v11 = sub_1DC40124C();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
      *(uint64_t *)((char *)a1 + *(int *)(v8 + 48)) = *(uint64_t *)((char *)a2 + *(int *)(v8 + 48));
      v12 = *(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v9 + 56);
      swift_bridgeObjectRetain();
      v12(a1, 0, 2, v8);
    }
  }
  return a1;
}

void sub_1DC245B48()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1F034D280)
  {
    sub_1DC40124C();
    sub_1DC18816C();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1F034D280);
  }
}

uint64_t sub_1DC245BB8(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;

  sub_1DC245B48();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 2, v2);
  if (!(_DWORD)result)
  {
    v4 = sub_1DC40124C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
    return swift_bridgeObjectRelease();
  }
  return result;
}

char *sub_1DC245C2C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(char *, _QWORD, uint64_t, uint64_t);

  sub_1DC245B48();
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(a2, 2, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v9 = sub_1DC40124C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
    *(_QWORD *)&a1[*(int *)(v7 + 48)] = *(_QWORD *)&a2[*(int *)(v7 + 48)];
    v10 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56);
    swift_bridgeObjectRetain();
    v10(a1, 0, 2, v7);
  }
  return a1;
}

char *sub_1DC245CEC(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(char *, uint64_t, uint64_t);
  int v10;
  int v11;
  uint64_t v12;
  void (*v13)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v15;

  sub_1DC245B48();
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48);
  v10 = v9(a1, 2, v6);
  v11 = v9(a2, 2, v7);
  if (!v10)
  {
    if (!v11)
    {
      v15 = sub_1DC40124C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 24))(a1, a2, v15);
      *(_QWORD *)&a1[*(int *)(v7 + 48)] = *(_QWORD *)&a2[*(int *)(v7 + 48)];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1DC245E18((uint64_t)a1);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  v12 = sub_1DC40124C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(a1, a2, v12);
  *(_QWORD *)&a1[*(int *)(v7 + 48)] = *(_QWORD *)&a2[*(int *)(v7 + 48)];
  v13 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56);
  swift_bridgeObjectRetain();
  v13(a1, 0, 2, v7);
  return a1;
}

uint64_t sub_1DC245E18(uint64_t a1)
{
  uint64_t v2;

  sub_1DC245B48();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

char *sub_1DC245E54(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_1DC245B48();
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(a2, 2, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v9 = sub_1DC40124C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
    *(_QWORD *)&a1[*(int *)(v7 + 48)] = *(_QWORD *)&a2[*(int *)(v7 + 48)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 2, v7);
  }
  return a1;
}

char *sub_1DC245F10(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(char *, uint64_t, uint64_t);
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v14;

  sub_1DC245B48();
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48);
  v10 = v9(a1, 2, v6);
  v11 = v9(a2, 2, v7);
  if (!v10)
  {
    if (!v11)
    {
      v14 = sub_1DC40124C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(a1, a2, v14);
      *(_QWORD *)&a1[*(int *)(v7 + 48)] = *(_QWORD *)&a2[*(int *)(v7 + 48)];
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1DC245E18((uint64_t)a1);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  v12 = sub_1DC40124C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(a1, a2, v12);
  *(_QWORD *)&a1[*(int *)(v7 + 48)] = *(_QWORD *)&a2[*(int *)(v7 + 48)];
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 2, v7);
  return a1;
}

uint64_t sub_1DC246030()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC24603C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  sub_1DC245B48();
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 3)
    return v5 - 2;
  else
    return 0;
}

uint64_t sub_1DC246088()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC246094(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 2);
  else
    v5 = 0;
  sub_1DC245B48();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, v5, a3, v6);
}

uint64_t sub_1DC2460E8(uint64_t a1)
{
  uint64_t v2;

  sub_1DC245B48();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 2, v2);
}

uint64_t sub_1DC246120(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1DC245B48();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, 2, v4);
}

BOOL sub_1DC246160(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(char *, uint64_t, uint64_t);
  int v13;
  unint64_t v14;
  uint64_t v15;
  int v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v4 = type metadata accessor for StockSearchSectionDescriptor();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v20 - v8;
  sub_1DC246C88(a1, (uint64_t)&v20 - v8);
  sub_1DC245B48();
  v11 = v10;
  v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48);
  v13 = v12(v9, 2, v10);
  if (v13)
  {
    v14 = v13 != 1;
  }
  else
  {
    swift_bridgeObjectRelease();
    v15 = sub_1DC40124C();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v9, v15);
    v14 = 2;
  }
  sub_1DC246C88(a2, (uint64_t)v6);
  v16 = v12(v6, 2, v11);
  if (v16)
  {
    v17 = v16 != 1;
  }
  else
  {
    swift_bridgeObjectRelease();
    v18 = sub_1DC40124C();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v6, v18);
    v17 = 2;
  }
  return v14 >= v17;
}

double sub_1DC2462C0()
{
  uint64_t ObjCClassFromMetadata;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double result;

  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v2 = sub_1DC3FFC80();
  v4 = v3;

  qword_1F034FAD8 = v2;
  unk_1F034FAE0 = v4;
  result = 0.0;
  xmmword_1F034FAE8 = 0u;
  *(_OWORD *)&qword_1F034FAF8 = 0u;
  qword_1F034FB08 = 0;
  return result;
}

double sub_1DC246390()
{
  uint64_t ObjCClassFromMetadata;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double result;

  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v2 = sub_1DC3FFC80();
  v4 = v3;

  qword_1F034FB10 = v2;
  *(_QWORD *)algn_1F034FB18 = v4;
  result = 0.0;
  xmmword_1F034FB20 = 0u;
  *(_OWORD *)&qword_1F034FB30 = 0u;
  qword_1F034FB40 = 0;
  return result;
}

uint64_t sub_1DC24645C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v2 = v1;
  v4 = sub_1DC40124C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for StockSearchSectionDescriptor();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC246C88(v2, (uint64_t)v10);
  sub_1DC245B48();
  v12 = v11;
  v13 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v10, 2, v11);
  if (v13)
  {
    if (v13 == 1)
    {
      if (qword_1F034B028 != -1)
        swift_once();
      v14 = &qword_1F034FAD8;
    }
    else
    {
      if (qword_1F034B030 != -1)
        swift_once();
      v14 = &qword_1F034FB10;
    }
    v16 = *v14;
    v18 = v14[1];
    v23 = v14[2];
    v24 = v14[3];
    v19 = v14[4];
    v21 = v14[5];
    v15 = v14[6];
    swift_bridgeObjectRetain();
    result = sub_1DC246E2C(v23, v24);
  }
  else
  {
    v15 = *(_QWORD *)&v10[*(int *)(v12 + 48)];
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
    v16 = sub_1DC40121C();
    v18 = v17;
    swift_bridgeObjectRetain();
    v19 = sub_1DC4011E0();
    v21 = v20;
    result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    v23 = v16;
    v24 = v18;
  }
  *a1 = v16;
  a1[1] = v18;
  a1[2] = v23;
  a1[3] = v24;
  a1[4] = v19;
  a1[5] = v21;
  a1[6] = v15;
  return result;
}

uint64_t sub_1DC246648(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  int v5;
  uint64_t v7;
  uint64_t v8;

  MEMORY[0x1E0C80A78](a1);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC246C88(v1, (uint64_t)v3);
  sub_1DC245B48();
  v5 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(v3, 2, v4);
  if (v5)
  {
    if (v5 == 1)
      return 0x73696C6863746177;
    else
      return 0x736C6F626D7973;
  }
  else
  {
    swift_bridgeObjectRelease();
    v7 = sub_1DC40124C();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v3, v7);
    return 0x7461576F54646461;
  }
}

unint64_t sub_1DC24674C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EDB41520;
  if (!qword_1EDB41520)
  {
    v1 = type metadata accessor for StockSearchSectionDescriptor();
    result = MEMORY[0x1DF0CAB8C](&unk_1DC41CDA0, v1);
    atomic_store(result, (unint64_t *)&qword_1EDB41520);
  }
  return result;
}

BOOL sub_1DC2467A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(char *, uint64_t, uint64_t);
  int v13;
  unint64_t v14;
  uint64_t v15;
  int v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v4 = type metadata accessor for StockSearchSectionDescriptor();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v20 - v8;
  sub_1DC246C88(a2, (uint64_t)&v20 - v8);
  sub_1DC245B48();
  v11 = v10;
  v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48);
  v13 = v12(v9, 2, v10);
  if (v13)
  {
    v14 = v13 != 1;
  }
  else
  {
    swift_bridgeObjectRelease();
    v15 = sub_1DC40124C();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v9, v15);
    v14 = 2;
  }
  sub_1DC246C88(a1, (uint64_t)v6);
  v16 = v12(v6, 2, v11);
  if (v16)
  {
    v17 = v16 != 1;
  }
  else
  {
    swift_bridgeObjectRelease();
    v18 = sub_1DC40124C();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v6, v18);
    v17 = 2;
  }
  return v14 >= v17;
}

BOOL sub_1DC246908(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(char *, uint64_t, uint64_t);
  int v13;
  unint64_t v14;
  uint64_t v15;
  int v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v4 = type metadata accessor for StockSearchSectionDescriptor();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v20 - v8;
  sub_1DC246C88(a2, (uint64_t)&v20 - v8);
  sub_1DC245B48();
  v11 = v10;
  v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48);
  v13 = v12(v9, 2, v10);
  if (v13)
  {
    v14 = v13 != 1;
  }
  else
  {
    swift_bridgeObjectRelease();
    v15 = sub_1DC40124C();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v9, v15);
    v14 = 2;
  }
  sub_1DC246C88(a1, (uint64_t)v6);
  v16 = v12(v6, 2, v11);
  if (v16)
  {
    v17 = v16 != 1;
  }
  else
  {
    swift_bridgeObjectRelease();
    v18 = sub_1DC40124C();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v6, v18);
    v17 = 2;
  }
  return v14 < v17;
}

uint64_t sub_1DC246A68(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(char *, uint64_t, uint64_t);
  int v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  char v21;
  uint64_t v23;

  v4 = 0xE900000000000074;
  v5 = 0x73696C6863746177;
  v6 = type metadata accessor for StockSearchSectionDescriptor();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v23 - v10;
  sub_1DC246C88(a1, (uint64_t)&v23 - v10);
  sub_1DC245B48();
  v13 = v12;
  v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48);
  v15 = v14(v11, 2, v12);
  if (v15)
  {
    if (v15 == 1)
      v16 = 0x73696C6863746177;
    else
      v16 = 0x736C6F626D7973;
    if (v15 == 1)
      v17 = 0xE900000000000074;
    else
      v17 = 0xE700000000000000;
  }
  else
  {
    v16 = 0x7461576F54646461;
    swift_bridgeObjectRelease();
    v18 = sub_1DC40124C();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v11, v18);
    v17 = 0xEE007473696C6863;
  }
  sub_1DC246C88(a2, (uint64_t)v8);
  v19 = v14(v8, 2, v13);
  if (v19)
  {
    if (v19 != 1)
    {
      v4 = 0xE700000000000000;
      v5 = 0x736C6F626D7973;
    }
    if (v16 != v5)
      goto LABEL_17;
  }
  else
  {
    swift_bridgeObjectRelease();
    v20 = sub_1DC40124C();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v8, v20);
    v4 = 0xEE007473696C6863;
    if (v16 != 0x7461576F54646461)
    {
LABEL_17:
      v21 = sub_1DC4099E8();
      goto LABEL_18;
    }
  }
  if (v17 != v4)
    goto LABEL_17;
  v21 = 1;
LABEL_18:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v21 & 1;
}

uint64_t sub_1DC246C88(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for StockSearchSectionDescriptor();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

BOOL sub_1DC246CCC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(char *, uint64_t, uint64_t);
  int v13;
  unint64_t v14;
  uint64_t v15;
  int v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v4 = type metadata accessor for StockSearchSectionDescriptor();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v20 - v8;
  sub_1DC246C88(a1, (uint64_t)&v20 - v8);
  sub_1DC245B48();
  v11 = v10;
  v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48);
  v13 = v12(v9, 2, v10);
  if (v13)
  {
    v14 = v13 != 1;
  }
  else
  {
    swift_bridgeObjectRelease();
    v15 = sub_1DC40124C();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v9, v15);
    v14 = 2;
  }
  sub_1DC246C88(a2, (uint64_t)v6);
  v16 = v12(v6, 2, v11);
  if (v16)
  {
    v17 = v16 != 1;
  }
  else
  {
    swift_bridgeObjectRelease();
    v18 = sub_1DC40124C();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v6, v18);
    v17 = 2;
  }
  return v14 < v17;
}

uint64_t sub_1DC246E2C(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1DC246E68()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for ManageWatchlistsContentMode(319);
    if (v2 <= 0x3F)
    {
      result = swift_initClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t sub_1DC246F24()
{
  uint64_t v0;
  uint64_t (*v1)(void);

  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(*(_QWORD *)v0 + 88) + 40))(v0 + *(_QWORD *)(*(_QWORD *)v0 + 152), *(_QWORD *)(*(_QWORD *)v0 + 80));
  v1 = MEMORY[0x1E0DB8020];
  sub_1DC1736C8(0, (unint64_t *)&qword_1F034CA70, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB8020]);
  sub_1DC24955C(&qword_1F034FBC8, (unint64_t *)&qword_1F034CA70, (uint64_t (*)(uint64_t, _QWORD *))v1, MEMORY[0x1E0DB8030]);
  sub_1DC4049E4();
  return swift_release();
}

uint64_t sub_1DC246FE4()
{
  return sub_1DC4049F0();
}

uint64_t sub_1DC24700C(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t);
  uint64_t v16;

  v4 = sub_1DC400280();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1DC404E1C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC405BB4();
  v12 = (*(uint64_t (**)(char *, uint64_t))(v9 + 88))(v11, v8);
  if (v12 == *MEMORY[0x1E0DB88C8])
  {
    (*(void (**)(char *, uint64_t))(v9 + 96))(v11, v8);
    sub_1DC2492CC();
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, &v11[*(int *)(v13 + 48)], v4);
    sub_1DC2474BC(a1, (uint64_t)v7);
    v14 = *(void (**)(char *, uint64_t))(v5 + 8);
    v14(v7, v4);
    return ((uint64_t (*)(char *, uint64_t))v14)(v11, v4);
  }
  if (v12 == *MEMORY[0x1E0DB88D0])
  {
    (*(void (**)(char *, uint64_t))(v9 + 96))(v11, v8);
    swift_bridgeObjectRelease();
  }
  else
  {
    if (v12 == *MEMORY[0x1E0DB88D8])
      return sub_1DC2471D8(a1, a2 & 1);
    if (v12 != *MEMORY[0x1E0DB88E0])
    {
      sub_1DC405BC0();
      return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    }
  }
  return sub_1DC405BC0();
}

uint64_t sub_1DC2471D8(uint64_t a1, int a2)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  void *v25;
  _QWORD v26[2];
  int v27;
  uint64_t v28;

  v27 = a2;
  v26[1] = *v2;
  sub_1DC176BD8(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ManageWatchlistsModel();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC249330(0, (unint64_t *)&qword_1F034C020, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6EE8]);
  v11 = v10;
  v12 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)v26 - v13;
  v15 = sub_1DC40124C();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)v26 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC405BA8();
  sub_1DC404354();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  sub_1DC2BB68C((uint64_t)v6);
  sub_1DC0926D8((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for ManageWatchlistsModel);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v6, 1, v15) == 1)
  {
    sub_1DC0926D8((uint64_t)v6, (uint64_t (*)(_QWORD))sub_1DC176BD8);
    return sub_1DC405BC0();
  }
  else
  {
    v20 = (*(uint64_t (**)(char *, char *, uint64_t))(v16 + 32))(v18, v6, v15);
    if ((v27 & 1) != 0)
    {
      MEMORY[0x1E0C80A78](v20);
      v21 = v28;
      v26[-2] = v28;
      v26[-1] = v18;
      sub_1DC402E0C();
      v22 = swift_allocObject();
      *(_QWORD *)(v22 + 16) = a1;
      *(_QWORD *)(v22 + 24) = v21;
      swift_retain();
      swift_retain();
      v23 = (void *)sub_1DC402C80();
      sub_1DC402D1C();
      swift_release();
      swift_release();
      swift_release();

    }
    else
    {
      v24 = MEMORY[0x1DF0CAD78](v28 + 16);
      if (v24)
      {
        v25 = (void *)MEMORY[0x1DF0CAD78](v24 + 16);
        if (v25)
        {
          sub_1DC2490BC((uint64_t)v18, a1, v25);
          swift_unknownObjectRelease();
        }
        swift_unknownObjectRelease();
      }
    }
    return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  }
}

uint64_t sub_1DC2474BC(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  void (*v32)(char *, uint64_t);
  unsigned int (*v33)(char *, uint64_t, uint64_t);
  void (*v35)(char *, char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t (*v39)(uint64_t, uint64_t, uint64_t);
  uint64_t (*v40)(void);
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  uint64_t (*v69)(void);
  void (*v70)(char *, uint64_t, uint64_t);
  char *v71;
  void (*v72)(uint64_t, uint64_t);
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;

  v83 = a2;
  v85 = a1;
  v82 = *v2;
  sub_1DC1736C8(0, (unint64_t *)&qword_1F0350F40, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790]);
  v79 = *(_QWORD *)(v3 - 8);
  v80 = v3;
  MEMORY[0x1E0C80A78](v3);
  v78 = (char *)&v70 - v4;
  sub_1DC1DD764();
  MEMORY[0x1E0C80A78](v5);
  v81 = (char *)&v70 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC176BD8(0);
  MEMORY[0x1E0C80A78](v7);
  v76 = (char *)&v70 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v77 = (uint64_t)&v70 - v10;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v70 - v12;
  v14 = type metadata accessor for ManageWatchlistsModel();
  MEMORY[0x1E0C80A78](v14);
  v75 = (char *)&v70 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v70 - v17;
  sub_1DC249330(0, (unint64_t *)&qword_1F034C020, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6EE8]);
  v20 = v19;
  v21 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v23 = (char *)&v70 - v22;
  v24 = sub_1DC40124C();
  v25 = *(_QWORD *)(v24 - 8);
  MEMORY[0x1E0C80A78](v24);
  v27 = (char *)&v70 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v28);
  v30 = (char *)&v70 - v29;
  sub_1DC405BA8();
  sub_1DC404354();
  v31 = v23;
  v32 = *(void (**)(char *, uint64_t))(v21 + 8);
  v32(v31, v20);
  sub_1DC2BB68C((uint64_t)v13);
  sub_1DC0926D8((uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for ManageWatchlistsModel);
  v33 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48);
  if (v33(v13, 1, v24) == 1)
  {
    sub_1DC0926D8((uint64_t)v13, (uint64_t (*)(_QWORD))sub_1DC176BD8);
    return sub_1DC405BC0();
  }
  v72 = (void (*)(uint64_t, uint64_t))v32;
  v73 = v21;
  v71 = v27;
  v35 = *(void (**)(char *, char *, uint64_t))(v25 + 32);
  v35(v30, v13, v24);
  v36 = sub_1DC400268();
  v37 = v24;
  v38 = v30;
  v74 = v37;
  if (v36)
  {
    v70 = (void (*)(char *, uint64_t, uint64_t))v35;
    v39 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v33;
    sub_1DC4049CC();
    v86 = v87;
    v40 = MEMORY[0x1E0DB80B8];
    sub_1DC1736C8(0, &qword_1F034CAC8, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB80B8]);
    sub_1DC24955C(&qword_1F034CAF0, &qword_1F034CAC8, (uint64_t (*)(uint64_t, _QWORD *))v40, MEMORY[0x1E0DB80D0]);
    v41 = v78;
    sub_1DC405050();
    swift_release();
    v43 = v80;
    v42 = (uint64_t)v81;
    sub_1DC406C88();
    (*(void (**)(char *, uint64_t))(v79 + 8))(v41, v43);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v73 + 48))(v42, 1, v20) == 1)
    {
      sub_1DC0926D8(v42, (uint64_t (*)(_QWORD))sub_1DC1DD764);
      v44 = v77;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v25 + 56))(v77, 1, 1, v37);
      v45 = v85;
LABEL_8:
      sub_1DC0926D8(v44, (uint64_t (*)(_QWORD))sub_1DC176BD8);
      v48 = v82;
      v38 = v30;
      goto LABEL_16;
    }
    v49 = (uint64_t)v75;
    sub_1DC404354();
    v72(v42, v20);
    v44 = v77;
    sub_1DC2BB68C(v77);
    sub_1DC0926D8(v49, (uint64_t (*)(_QWORD))type metadata accessor for ManageWatchlistsModel);
    v50 = v39(v44, 1, v37);
    v45 = v85;
    if (v50 == 1)
      goto LABEL_8;
    v51 = v71;
    v70(v71, v44, v37);
    v52 = v30;
    v53 = sub_1DC4011E0();
    v55 = v54;
    v56 = sub_1DC4011E0();
    v58 = v84;
    if (v53 == v56 && v55 == v57)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      v59 = sub_1DC4099E8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v59 & 1) == 0)
      {
        v60 = (_QWORD *)(v58 + *(_QWORD *)(*(_QWORD *)v58 + 128));
        v61 = v60[3];
        v81 = (char *)v60[4];
        __swift_project_boxed_opaque_existential_1(v60, v61);
        v62 = (uint64_t)v76;
        v63 = v74;
        (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v76, v51, v74);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v25 + 56))(v62, 0, 1, v63);
        sub_1DC400AA8();
        swift_release();
        sub_1DC0926D8(v62, (uint64_t (*)(_QWORD))sub_1DC176BD8);
        (*(void (**)(char *, uint64_t))(v25 + 8))(v51, v63);
        goto LABEL_15;
      }
    }
    (*(void (**)(char *, uint64_t))(v25 + 8))(v51, v74);
LABEL_15:
    v48 = v82;
    v38 = v52;
    goto LABEL_16;
  }
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v84 + *(_QWORD *)(*(_QWORD *)v84 + 128)), *(_QWORD *)(v84 + *(_QWORD *)(*(_QWORD *)v84 + 128) + 24));
  v46 = v37;
  v47 = (uint64_t)v76;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v25 + 56))(v76, 1, 1, v46);
  sub_1DC400AA8();
  swift_release();
  sub_1DC0926D8(v47, (uint64_t (*)(_QWORD))sub_1DC176BD8);
  v45 = v85;
  v48 = v82;
LABEL_16:
  v64 = sub_1DC400268();
  v66 = *(_QWORD *)(v48 + 80);
  v65 = *(_QWORD *)(v48 + 88);
  v87 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t, uint64_t))(v65 + 64))(v38, v64, v45, v66, v65);
  v67 = swift_allocObject();
  swift_weakInit();
  v68 = (_QWORD *)swift_allocObject();
  v68[2] = v66;
  v68[3] = v65;
  v68[4] = v67;
  v68[5] = v45;
  v69 = MEMORY[0x1E0DB8020];
  sub_1DC1736C8(0, (unint64_t *)&qword_1F034CA70, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB8020]);
  sub_1DC24955C(&qword_1F034FBC8, (unint64_t *)&qword_1F034CA70, (uint64_t (*)(uint64_t, _QWORD *))v69, MEMORY[0x1E0DB8030]);
  swift_retain();
  swift_retain();
  sub_1DC4049E4();
  swift_release();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v38, v74);
  swift_release();
  return swift_release();
}

uint64_t sub_1DC247BE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  _QWORD v27[4];
  uint64_t v28;
  char *v29;
  uint64_t v30;

  v1 = v0;
  sub_1DC2492B0(0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ManageWatchlistsContentMode(0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = sub_1DC4010E4();
  v30 = *(_QWORD *)(v28 - 8);
  MEMORY[0x1E0C80A78](v28);
  v29 = (char *)v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC176BD8(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ManageWatchlistsModel();
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1DC40124C();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)v27 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC249330(0, (unint64_t *)&qword_1F034C020, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6EE8]);
  sub_1DC404354();
  sub_1DC2BB68C((uint64_t)v11);
  sub_1DC0926D8((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for ManageWatchlistsModel);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v11, 1, v15) == 1)
    return sub_1DC0926D8((uint64_t)v11, (uint64_t (*)(_QWORD))sub_1DC176BD8);
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v18, v11, v15);
  sub_1DC173D68(v0 + *(_QWORD *)(*(_QWORD *)v0 + 152), (uint64_t)v7);
  sub_1DC15C2FC();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 48))(v7, 1, v20) == 1)
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
    return sub_1DC0926D8((uint64_t)v7, type metadata accessor for ManageWatchlistsContentMode);
  }
  else
  {
    v21 = v29;
    v22 = v30;
    v23 = v7;
    v24 = v28;
    (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v29, v23, v28);
    v27[3] = *(_QWORD *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 136) + 8);
    v27[2] = swift_getObjectType();
    if (qword_1EDB2AA40 != -1)
      swift_once();
    v27[1] = qword_1EDB5DF68;
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v4, v18, v15);
    v25 = type metadata accessor for WatchlistMembershipCommandContext(0);
    v26 = &v4[*(int *)(v25 + 20)];
    (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v26, v21, v24);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v26, 0, 1, v24);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v4, 0, 1, v25);
    sub_1DC404AD4();
    sub_1DC0926D8((uint64_t)v4, (uint64_t (*)(_QWORD))sub_1DC2492B0);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v29, v24);
    return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  }
}

uint64_t sub_1DC247F90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t);
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v26 = a3;
  v25 = a2;
  v4 = sub_1DC404E34();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1DC404E1C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC249330(0, (unint64_t *)&qword_1F034C020, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6EE8]);
  v13 = MEMORY[0x1E0C80A78](v12);
  (*(void (**)(char *, uint64_t, __n128))(v14 + 16))((char *)&v24 - v15, a1, v13);
  sub_1DC2492CC();
  v17 = &v11[*(int *)(v16 + 48)];
  v18 = sub_1DC400280();
  v19 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
  v19(v11, v25, v18);
  v20 = v17;
  v21 = v26;
  v19(v20, v26, v18);
  (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E0DB88C8], v8);
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DB8910], v4);
  sub_1DC249330(0, &qword_1F034FBE0, MEMORY[0x1E0DBA748]);
  swift_allocObject();
  v22 = sub_1DC405B9C();
  sub_1DC2474BC(v22, v21);
  return swift_release();
}

uint64_t sub_1DC248184(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v17;
  void *v18;
  void *v19;
  _QWORD v20[2];

  v20[1] = *v3;
  sub_1DC176BD8(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ManageWatchlistsModel();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1DC40124C();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC249330(0, (unint64_t *)&qword_1F034C020, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6EE8]);
  sub_1DC404354();
  sub_1DC2BB68C((uint64_t)v8);
  sub_1DC0926D8((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for ManageWatchlistsModel);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v8, 1, v12) == 1)
    return sub_1DC0926D8((uint64_t)v8, (uint64_t (*)(_QWORD))sub_1DC176BD8);
  v17 = (*(uint64_t (**)(char *, char *, uint64_t))(v13 + 32))(v15, v8, v12);
  MEMORY[0x1E0C80A78](v17);
  v20[-4] = v3;
  v20[-3] = v15;
  v20[-2] = a2;
  v20[-1] = a3;
  sub_1DC402E0C();
  swift_retain();
  v18 = (void *)sub_1DC402C80();
  sub_1DC402D1C();
  swift_release();
  swift_release();

  swift_retain();
  v19 = (void *)sub_1DC402C80();
  sub_1DC402D34();
  swift_release();
  swift_release();
  swift_release();

  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

uint64_t sub_1DC2483D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v6)(void);

  v3 = *(_QWORD *)(*(_QWORD *)a2 + 80);
  v2 = *(_QWORD *)(*(_QWORD *)a2 + 88);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 72))(a1, a2 + *(_QWORD *)(*(_QWORD *)a2 + 152), v3, v2);
  v4 = swift_allocObject();
  swift_weakInit();
  v5 = (_QWORD *)swift_allocObject();
  v5[2] = v3;
  v5[3] = v2;
  v5[4] = v4;
  v6 = MEMORY[0x1E0DB8020];
  sub_1DC1736C8(0, (unint64_t *)&qword_1F034CA70, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB8020]);
  sub_1DC24955C(&qword_1F034FBC8, (unint64_t *)&qword_1F034CA70, (uint64_t (*)(uint64_t, _QWORD *))v6, MEMORY[0x1E0DB8030]);
  swift_retain();
  sub_1DC4049E4();
  swift_release();
  swift_release();
  return swift_release();
}

void sub_1DC248518(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  id *v6;
  int v7;
  uint64_t v8;

  v2 = sub_1DC405578();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (id *)((char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(id *, uint64_t, uint64_t, __n128))(v3 + 16))(v6, a1, v2, v4);
  v7 = (*(uint64_t (**)(id *, uint64_t))(v3 + 88))(v6, v2);
  if (v7 == *MEMORY[0x1E0DB9A48])
  {
    (*(void (**)(id *, uint64_t))(v3 + 96))(v6, v2);

  }
  else if (v7 != *MEMORY[0x1E0DB9A40])
  {
    if (v7 == *MEMORY[0x1E0DB9A50])
    {
      swift_beginAccess();
      if (swift_weakLoadStrong())
      {
        swift_retain();
        swift_release();
        sub_1DC403700();
        sub_1DC080808(&qword_1F034FBD0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD8D0], MEMORY[0x1E0DAD8C8]);
        sub_1DC4018A0();
        swift_release();
      }
    }
    else
    {
      (*(void (**)(id *, uint64_t))(v3 + 8))(v6, v2);
    }
  }
}

uint64_t sub_1DC2486A8(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  id v14;
  char v15;
  void (*v16)(char *, uint64_t, uint64_t, uint64_t);
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  int v22;
  uint64_t v23;
  int v24;
  uint64_t (*v25)(char *, uint64_t);
  _QWORD v26[2];

  sub_1DC2490A0(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1DC400520();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v26 - v12;
  v26[1] = a1;
  v14 = a1;
  sub_1DC16BD54();
  v15 = swift_dynamicCast();
  v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
  if ((v15 & 1) == 0)
  {
    v16(v6, 1, 1, v7);
    return sub_1DC0926D8((uint64_t)v6, (uint64_t (*)(_QWORD))sub_1DC2490A0);
  }
  v16(v6, 0, 1, v7);
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v13, v6, v7);
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v10, v13, v7);
  v17 = (*(uint64_t (**)(char *, uint64_t))(v8 + 88))(v10, v7);
  if (v17 == *MEMORY[0x1E0DAE478])
  {
    v18 = MEMORY[0x1DF0CAD78](a2 + 16);
    if (v18)
    {
      v19 = v18;
      v20 = 0;
LABEL_9:
      sub_1DC228DA4(v20, v19);
      swift_unknownObjectRelease();
      return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v13, v7);
    }
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v13, v7);
  }
  v22 = v17;
  if (v17 == *MEMORY[0x1E0DAE470])
  {
    v23 = MEMORY[0x1DF0CAD78](a2 + 16);
    if (v23)
    {
      v19 = v23;
      v20 = 1;
      goto LABEL_9;
    }
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v13, v7);
  }
  v24 = *MEMORY[0x1E0DAE468];
  v25 = *(uint64_t (**)(char *, uint64_t))(v8 + 8);
  result = v25(v13, v7);
  if (v22 != v24)
    return v25(v10, v7);
  return result;
}

uint64_t sub_1DC2488DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t (*v8)(void);

  v5 = *(_QWORD *)(*(_QWORD *)a2 + 80);
  v4 = *(_QWORD *)(*(_QWORD *)a2 + 88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(a3, v5, v4);
  v6 = swift_allocObject();
  swift_weakInit();
  v7 = (_QWORD *)swift_allocObject();
  v7[2] = v5;
  v7[3] = v4;
  v7[4] = v6;
  v7[5] = a3;
  v8 = MEMORY[0x1E0DB8020];
  sub_1DC1736C8(0, (unint64_t *)&qword_1F034CA70, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB8020]);
  sub_1DC24955C(&qword_1F034FBC8, (unint64_t *)&qword_1F034CA70, (uint64_t (*)(uint64_t, _QWORD *))v8, MEMORY[0x1E0DB8030]);
  swift_retain();
  swift_retain();
  sub_1DC4049E4();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1DC248A24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(_QWORD), void (*a7)(void))
{
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  id *v14;
  uint64_t result;
  uint64_t v16;

  v10 = sub_1DC405578();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (id *)((char *)&v16 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(id *, uint64_t, uint64_t, __n128))(v11 + 16))(v14, a1, v10, v12);
  result = (*(uint64_t (**)(id *, uint64_t))(v11 + 88))(v14, v10);
  if ((_DWORD)result == *MEMORY[0x1E0DB9A48])
  {
    (*(void (**)(id *, uint64_t))(v11 + 96))(v14, v10);

    return sub_1DC405BC0();
  }
  else if ((_DWORD)result != *MEMORY[0x1E0DB9A40])
  {
    if ((_DWORD)result == *MEMORY[0x1E0DB9A50])
    {
      swift_beginAccess();
      result = swift_weakLoadStrong();
      if (result)
      {
        swift_retain();
        swift_release();
        a6(0);
        a7();
        sub_1DC4018A0();
        return swift_release();
      }
    }
    else
    {
      return (*(uint64_t (**)(id *, uint64_t))(v11 + 8))(v14, v10);
    }
  }
  return result;
}

uint64_t *sub_1DC248BBC()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1DC148A20((uint64_t)(v0 + 2));
  swift_release();
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v1 + 80) - 8) + 8))((uint64_t)v0 + *(_QWORD *)(*v0 + 112));
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v0 + *(_QWORD *)(*v0 + 128));
  swift_unknownObjectRelease();
  swift_release();
  sub_1DC0926D8((uint64_t)v0 + *(_QWORD *)(*v0 + 152), type metadata accessor for ManageWatchlistsContentMode);
  return v0;
}

uint64_t sub_1DC248C60()
{
  sub_1DC248BBC();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ManageWatchlistsInteractor(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ManageWatchlistsInteractor);
}

uint64_t sub_1DC248CA0()
{
  return sub_1DC247BE8();
}

uint64_t sub_1DC248CB8(_QWORD *a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(void);
  uint64_t v15;
  uint64_t v16;
  void (*v18)(char *, char *, uint64_t);
  char *v19;
  uint64_t v20;
  uint64_t (*v21)(void);
  _QWORD v22[2];
  char *v23;
  uint64_t v24;
  _QWORD *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;

  v24 = *(_QWORD *)v1;
  v25 = a1;
  sub_1DC1DD7B8();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC1736C8(0, (unint64_t *)&qword_1F0350F40, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v22 - v8;
  sub_1DC1736C8(0, (unint64_t *)&qword_1F034C028, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60]);
  v11 = v10;
  v12 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v26 = (char *)v22 - v13;
  v23 = v1;
  v22[1] = *((_QWORD *)v1 + 4);
  sub_1DC4049CC();
  v27 = v28;
  v14 = MEMORY[0x1E0DB80B8];
  sub_1DC1736C8(0, &qword_1F034CAC8, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB80B8]);
  sub_1DC24955C(&qword_1F034CAF0, &qword_1F034CAC8, (uint64_t (*)(uint64_t, _QWORD *))v14, MEMORY[0x1E0DB80D0]);
  sub_1DC405050();
  swift_release();
  sub_1DC406D60();
  v15 = v6;
  v16 = v12;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v15);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v4, 1, v11) == 1)
    return sub_1DC0926D8((uint64_t)v4, (uint64_t (*)(_QWORD))sub_1DC1DD7B8);
  v18 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
  v19 = v26;
  v18(v26, v4, v11);
  __swift_project_boxed_opaque_existential_1(v25, v25[3]);
  v20 = *(_QWORD *)(sub_1DC400ACC() + 16);
  swift_bridgeObjectRelease();
  sub_1DC24955C(&qword_1F034C040, (unint64_t *)&qword_1F034C028, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60], MEMORY[0x1E0DB7B98]);
  sub_1DC408E90();
  sub_1DC408ED8();
  if (v20 == sub_1DC408ECC())
    return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v19, v11);
  v28 = (*(uint64_t (**)(char *, _QWORD))(*(_QWORD *)(v24 + 88) + 40))(&v23[*(_QWORD *)(*(_QWORD *)v23 + 152)], *(_QWORD *)(v24 + 80));
  v21 = MEMORY[0x1E0DB8020];
  sub_1DC1736C8(0, (unint64_t *)&qword_1F034CA70, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB8020]);
  sub_1DC24955C(&qword_1F034FBC8, (unint64_t *)&qword_1F034CA70, (uint64_t (*)(uint64_t, _QWORD *))v21, MEMORY[0x1E0DB8030]);
  sub_1DC4049E4();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v19, v11);
  return swift_release();
}

uint64_t sub_1DC249004()
{
  return sub_1DC400CB8();
}

uint64_t sub_1DC249010()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)(*(_QWORD *)(v0 + 16) + *(_QWORD *)(**(_QWORD **)(v0 + 16) + 128));
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  return sub_1DC400A84();
}

uint64_t sub_1DC249080(uint64_t a1, uint64_t a2)
{
  return sub_1DC2483D8(a1, a2);
}

uint64_t sub_1DC249098(void *a1)
{
  uint64_t v1;

  return sub_1DC2486A8(a1, v1);
}

void sub_1DC2490A0(uint64_t a1)
{
  sub_1DC089DA4(a1, &qword_1F034DF08, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAE480], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

uint64_t sub_1DC2490BC(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_1DC089DA4(0, &qword_1F034FBF8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF270], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v6 = sub_1DC40124C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1DC40DC10;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v7 + 16))(v9 + v8, a1, v6);
  objc_msgSend(a3, sel_traitCollection);
  sub_1DC2494E8();
  sub_1DC406808();
  swift_allocObject();
  sub_1DC4067CC();
  v10 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = a2;
  swift_retain();
  swift_retain();
  sub_1DC4067F0();
  swift_release();
  swift_release();
  swift_release();
  sub_1DC4067D8();
  return swift_release();
}

uint64_t sub_1DC24925C()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1DC249280()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1DC2492A4(uint64_t a1)
{
  sub_1DC248518(a1);
}

void sub_1DC2492B0(uint64_t a1)
{
  sub_1DC089DA4(a1, &qword_1F034C568, type metadata accessor for WatchlistMembershipCommandContext, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

void sub_1DC2492CC()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1F034FBD8)
  {
    sub_1DC400280();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1F034FBD8);
  }
}

void sub_1DC249330(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    v6 = type metadata accessor for ManageWatchlistsModel();
    v7 = sub_1DC080808((unint64_t *)&unk_1F0350F30, (uint64_t (*)(uint64_t))type metadata accessor for ManageWatchlistsModel, (uint64_t)&unk_1DC423338);
    v8 = a3(a1, v6, v7);
    if (!v9)
      atomic_store(v8, a2);
  }
}

uint64_t sub_1DC2493B0(uint64_t a1)
{
  uint64_t *v1;

  return sub_1DC248A24(a1, v1[4], v1[5], v1[2], v1[3], MEMORY[0x1E0DAD850], (void (*)(void))sub_1DC2493DC);
}

uint64_t sub_1DC2493DC()
{
  return sub_1DC080808(&qword_1F034FBE8, MEMORY[0x1E0DAD850], MEMORY[0x1E0DAD848]);
}

uint64_t sub_1DC2493F8()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)(*(_QWORD *)(v0 + 16) + *(_QWORD *)(**(_QWORD **)(v0 + 16) + 128));
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  return sub_1DC400A78();
}

uint64_t sub_1DC249458(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1DC2488DC(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t objectdestroy_6Tm()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DC2494A0(uint64_t a1)
{
  uint64_t *v1;

  return sub_1DC248A24(a1, v1[4], v1[5], v1[2], v1[3], MEMORY[0x1E0DAD7A8], (void (*)(void))sub_1DC2494CC);
}

uint64_t sub_1DC2494CC()
{
  return sub_1DC080808(&qword_1F034FBF0, MEMORY[0x1E0DAD7A8], MEMORY[0x1E0DAD7A0]);
}

unint64_t sub_1DC2494E8()
{
  unint64_t result;

  result = qword_1F034FC00;
  if (!qword_1F034FC00)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC40F0C8, &type metadata for WatchlistDeletionAlert);
    atomic_store(result, (unint64_t *)&qword_1F034FC00);
  }
  return result;
}

uint64_t sub_1DC24952C()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1DC249554()
{
  uint64_t v0;

  return sub_1DC2B0F30(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1DC24955C(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_1DC1736C8(255, a2, a3);
    result = MEMORY[0x1DF0CAB8C](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *sub_1DC24959C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v7 = sub_1DC3FFDD0();
    v8 = *(_QWORD *)(v7 - 8);
    v9 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7);
    if (EnumCaseMultiPayload == 1)
    {
      if (v9)
        goto LABEL_7;
    }
    else if (v9)
    {
LABEL_7:
      sub_1DC133BB0(0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
LABEL_9:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
    (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    goto LABEL_9;
  }
  v10 = *a2;
  *a1 = *a2;
  a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
  swift_retain();
  return a1;
}

uint64_t sub_1DC2496FC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = sub_1DC3FFDD0();
  v3 = *(_QWORD *)(v2 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, 1, v2);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  return result;
}

void *sub_1DC249764(void *a1, const void *a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v5 = sub_1DC3FFDD0();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (*(uint64_t (**)(const void *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5);
  if (EnumCaseMultiPayload != 1)
  {
    if (v7)
      goto LABEL_3;
LABEL_5:
    (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(a1, a2, v5);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
    goto LABEL_6;
  }
  if (!v7)
    goto LABEL_5;
LABEL_3:
  sub_1DC133BB0(0);
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
LABEL_6:
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_1DC249898(void *a1, const void *a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;

  if (a1 != a2)
  {
    sub_1DC2499DC((uint64_t)a1);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v5 = sub_1DC3FFDD0();
    v6 = *(_QWORD *)(v5 - 8);
    v7 = (*(uint64_t (**)(const void *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5);
    if (EnumCaseMultiPayload == 1)
    {
      if (v7)
      {
LABEL_4:
        sub_1DC133BB0(0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
LABEL_7:
        swift_storeEnumTagMultiPayload();
        return a1;
      }
    }
    else if (v7)
    {
      goto LABEL_4;
    }
    (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(a1, a2, v5);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
    goto LABEL_7;
  }
  return a1;
}

uint64_t sub_1DC2499DC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for StockListRouteModel();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for StockListRouteModel()
{
  uint64_t result;

  result = qword_1F034FC78;
  if (!qword_1F034FC78)
    return swift_getSingletonMetadata();
  return result;
}

void *sub_1DC249A54(void *a1, const void *a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v5 = sub_1DC3FFDD0();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (*(uint64_t (**)(const void *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5);
  if (EnumCaseMultiPayload != 1)
  {
    if (v7)
      goto LABEL_3;
LABEL_5:
    (*(void (**)(void *, const void *, uint64_t))(v6 + 32))(a1, a2, v5);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
    goto LABEL_6;
  }
  if (!v7)
    goto LABEL_5;
LABEL_3:
  sub_1DC133BB0(0);
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
LABEL_6:
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_1DC249B88(void *a1, const void *a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;

  if (a1 != a2)
  {
    sub_1DC2499DC((uint64_t)a1);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v5 = sub_1DC3FFDD0();
    v6 = *(_QWORD *)(v5 - 8);
    v7 = (*(uint64_t (**)(const void *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5);
    if (EnumCaseMultiPayload == 1)
    {
      if (v7)
      {
LABEL_4:
        sub_1DC133BB0(0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
LABEL_7:
        swift_storeEnumTagMultiPayload();
        return a1;
      }
    }
    else if (v7)
    {
      goto LABEL_4;
    }
    (*(void (**)(void *, const void *, uint64_t))(v6 + 32))(a1, a2, v5);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
    goto LABEL_7;
  }
  return a1;
}

void sub_1DC249CCC()
{
  unint64_t v0;

  sub_1DC133BB0(319);
  if (v0 <= 0x3F)
    swift_initEnumMetadataMultiPayload();
}

id static NSTimer.repeatingTimer(withTimeInterval:tolerance:block:)(uint64_t a1, uint64_t a2, double a3, double a4)
{
  void *v8;
  void *v9;
  id v10;
  _QWORD v12[6];

  v8 = (void *)objc_opt_self();
  v12[4] = a1;
  v12[5] = a2;
  v12[0] = MEMORY[0x1E0C809B0];
  v12[1] = 1107296256;
  v12[2] = sub_1DC149854;
  v12[3] = &block_descriptor_20;
  v9 = _Block_copy(v12);
  swift_retain();
  swift_release();
  v10 = objc_msgSend(v8, sel_scheduledTimerWithTimeInterval_repeats_block_, 1, v9, a3);
  _Block_release(v9);
  objc_msgSend(v10, sel_setTolerance_, a4);
  return v10;
}

double sub_1DC249E18(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  double v4;
  void *v6;

  v3 = *MEMORY[0x1E0DEEDD8] & *v1;
  v6 = (void *)sub_1DC405350();
  v4 = (*(double (**)(_QWORD, uint64_t))(a1 + 8))(*(_QWORD *)(v3 + *MEMORY[0x1E0DB95D8]), a1);

  return v4;
}

double sub_1DC249E98(uint64_t a1, uint64_t a2)
{
  return sub_1DC249E18(*(_QWORD *)(a2 - 8));
}

uint64_t sub_1DC249EBC@<X0>(uint64_t a1@<X8>, double a2@<D0>, double a3@<D1>, double a4@<D2>, double a5@<D3>)
{
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;

  v10 = sub_1DC404210();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v11 + 104))(v14, *MEMORY[0x1E0DB6B40], v10, v12);
  sub_1DC404204();
  v16 = v15;
  v18 = v17;
  v20 = v19;
  v22 = v21;
  result = (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  *(double *)a1 = a2;
  *(double *)(a1 + 8) = a3;
  *(double *)(a1 + 16) = a4;
  *(double *)(a1 + 24) = a5;
  *(_QWORD *)(a1 + 32) = v16;
  *(_QWORD *)(a1 + 40) = v18;
  *(_QWORD *)(a1 + 48) = v20;
  *(_QWORD *)(a1 + 56) = v22;
  return result;
}

uint64_t type metadata accessor for BrandingTitleViewLayoutAttributesFactory()
{
  return objc_opt_self();
}

StocksUI::MarketOpenState_optional __swiftcall MarketOpenState.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  StocksUI::MarketOpenState_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1DC4098A4();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1)
    v5 = 1;
  else
    v5 = 2;
  if (!v3)
    v5 = 0;
  *v2 = v5;
  return result;
}

uint64_t MarketOpenState.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x6465736F6C63;
  else
    return 1852141679;
}

uint64_t sub_1DC24A07C(char *a1, char *a2)
{
  return sub_1DC1596B0(*a1, *a2);
}

uint64_t sub_1DC24A088()
{
  sub_1DC409AC0();
  sub_1DC408AF4();
  swift_bridgeObjectRelease();
  return sub_1DC409AF0();
}

uint64_t sub_1DC24A0FC()
{
  sub_1DC408AF4();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DC24A14C()
{
  sub_1DC409AC0();
  sub_1DC408AF4();
  swift_bridgeObjectRelease();
  return sub_1DC409AF0();
}

StocksUI::MarketOpenState_optional sub_1DC24A1BC(Swift::String *a1)
{
  return MarketOpenState.init(rawValue:)(*a1);
}

void sub_1DC24A1C8(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 1852141679;
  if (*v1)
    v2 = 0x6465736F6C63;
  v3 = 0xE400000000000000;
  if (*v1)
    v3 = 0xE600000000000000;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1DC24A1FC()
{
  sub_1DC24B494();
  return sub_1DC408CA4();
}

uint64_t sub_1DC24A258()
{
  sub_1DC24B494();
  return sub_1DC408C8C();
}

uint64_t sub_1DC24A2A4()
{
  uint64_t result;

  type metadata accessor for PercentChangeFormatter();
  result = swift_initStaticObject();
  qword_1F0368A68 = result;
  return result;
}

id sub_1DC24A2D0()
{
  uint64_t v0;
  id result;

  type metadata accessor for UnitNumberFormatter();
  v0 = swift_allocObject();
  result = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DAF2D8]), sel_init);
  *(_QWORD *)(v0 + 16) = result;
  qword_1F0368A70 = v0;
  return result;
}

uint64_t StockType.shouldShowCurrencySymbol.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  char *v6;
  int v7;
  uint64_t v14;

  v1 = v0;
  v2 = sub_1DC4011C8();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v3 + 16))(v6, v1, v2, v4);
  v7 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v6, v2);
  if (v7 != *MEMORY[0x1E0DAF1E8]
    && v7 != *MEMORY[0x1E0DAF1F0]
    && v7 != *MEMORY[0x1E0DAF1C0]
    && v7 != *MEMORY[0x1E0DAF1D8]
    && v7 != *MEMORY[0x1E0DAF1C8]
    && v7 != *MEMORY[0x1E0DAF1E0])
  {
    if (v7 == *MEMORY[0x1E0DAF1D0])
      return 0;
    if (v7 != *MEMORY[0x1E0DAF1B8])
      (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
  return 1;
}

unint64_t sub_1DC24A454()
{
  unint64_t result;

  result = qword_1F034FCB0;
  if (!qword_1F034FCB0)
  {
    result = MEMORY[0x1DF0CAB8C](&protocol conformance descriptor for MarketOpenState, &type metadata for MarketOpenState);
    atomic_store(result, (unint64_t *)&qword_1F034FCB0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for MarketOpenState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1DC24A4E4 + 4 * byte_1DC41D0E5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1DC24A518 + 4 * byte_1DC41D0E0[v4]))();
}

uint64_t sub_1DC24A518(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC24A520(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC24A528);
  return result;
}

uint64_t sub_1DC24A534(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC24A53CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1DC24A540(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC24A548(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MarketOpenState()
{
  return &type metadata for MarketOpenState;
}

_QWORD *sub_1DC24A564(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v19 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_QWORD *)a1 = *a2;
    *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
    *(_QWORD *)(a1 + 32) = a2[4];
    *(_BYTE *)(a1 + 40) = *((_BYTE *)a2 + 40);
    v7 = a2[7];
    *(_QWORD *)(a1 + 48) = a2[6];
    *(_QWORD *)(a1 + 56) = v7;
    v8 = a2[8];
    v9 = a2[9];
    *(_BYTE *)(a1 + 80) = *((_BYTE *)a2 + 80);
    v10 = *(int *)(a3 + 40);
    v11 = a1 + v10;
    v12 = (uint64_t)a2 + v10;
    *(_QWORD *)(a1 + 64) = v8;
    *(_QWORD *)(a1 + 72) = v9;
    v13 = sub_1DC4011C8();
    v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14(v11, v12, v13);
    v15 = *(int *)(a3 + 44);
    v16 = (char *)v4 + v15;
    v17 = (uint64_t)a2 + v15;
    v18 = sub_1DC400118();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  }
  return v4;
}

uint64_t sub_1DC24A68C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = v6;
  v7 = a2[2];
  *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
  *(_QWORD *)(a1 + 16) = v7;
  v8 = a2[4];
  *(_BYTE *)(a1 + 40) = *((_BYTE *)a2 + 40);
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 48) = a2[6];
  *(_QWORD *)(a1 + 56) = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = a2[8];
  *(_QWORD *)(a1 + 72) = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 80) = *((_BYTE *)a2 + 80);
  v9 = *(int *)(a3 + 40);
  v10 = a1 + v9;
  v11 = (uint64_t)a2 + v9;
  v12 = sub_1DC4011C8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 24))(v10, v11, v12);
  v13 = *(int *)(a3 + 44);
  v14 = a1 + v13;
  v15 = (uint64_t)a2 + v13;
  v16 = sub_1DC400118();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 24))(v14, v15, v16);
  return a1;
}

uint64_t sub_1DC24A794(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v6 = *(_OWORD *)(a2 + 48);
  v7 = *(_OWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  v8 = *(int *)(a3 + 40);
  v9 = a1 + v8;
  v10 = a2 + v8;
  *(_OWORD *)(a1 + 48) = v6;
  *(_OWORD *)(a1 + 64) = v7;
  v11 = sub_1DC4011C8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  v12 = *(int *)(a3 + 44);
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = sub_1DC400118();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
  return a1;
}

uint64_t sub_1DC24A864(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v6 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v7;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  v8 = *(int *)(a3 + 40);
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_1DC4011C8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  v12 = *(int *)(a3 + 44);
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = sub_1DC400118();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 40))(v13, v14, v15);
  return a1;
}

uint64_t sub_1DC24A94C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 72);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1DC4011C8();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 40);
    }
    else
    {
      v10 = sub_1DC400118();
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 44);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_1DC24A9EC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 72) = (a2 - 1);
  }
  else
  {
    v8 = sub_1DC4011C8();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 40);
    }
    else
    {
      v10 = sub_1DC400118();
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 44);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t sub_1DC24AA88(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1DC24AAB8 + 4 * byte_1DC41D0EA[a1]))(0x6563697270, 0xE500000000000000);
}

uint64_t sub_1DC24AAB8()
{
  return 0x6168436563697270;
}

unint64_t sub_1DC24AAD8()
{
  return 0xD000000000000014;
}

uint64_t sub_1DC24AAF4()
{
  return 0x79636E6572727563;
}

uint64_t sub_1DC24AB14()
{
  return 0x6B6361626C6C6166;
}

uint64_t sub_1DC24AB34()
{
  return 0x704F74656B72616DLL;
}

uint64_t sub_1DC24AB58()
{
  return 0x7079546B636F7473;
}

uint64_t sub_1DC24AB74()
{
  return 0x656C61636F6CLL;
}

uint64_t sub_1DC24AB88(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  _BYTE v11[16];

  v3 = v1;
  sub_1DC24B3F4(0, &qword_1F034FCE0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = &v11[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC24B36C();
  sub_1DC409B14();
  v11[15] = 0;
  sub_1DC409940();
  if (!v2)
  {
    v11[14] = 1;
    sub_1DC409940();
    v11[13] = 2;
    sub_1DC409940();
    v11[12] = 3;
    sub_1DC409934();
    v11[11] = 4;
    sub_1DC409964();
    v11[10] = *(_BYTE *)(v3 + 80);
    v11[9] = 5;
    sub_1DC24B450();
    sub_1DC409988();
    type metadata accessor for PriceViewModel();
    v11[8] = 6;
    sub_1DC4011C8();
    sub_1DC080808(&qword_1F034FCF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF1F8], MEMORY[0x1E0DAF208]);
    sub_1DC409988();
    v11[7] = 7;
    sub_1DC400118();
    sub_1DC080808(&qword_1F034FCF8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0E38], MEMORY[0x1E0CB0E50]);
    sub_1DC409988();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1DC24AE34@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  char v43;
  char v44;
  char v45;
  char v46;
  char v47;
  char v48;
  char v49;
  char v50;
  char v51;

  v35 = a2;
  v36 = sub_1DC400118();
  v34 = *(_QWORD *)(v36 - 8);
  MEMORY[0x1E0C80A78](v36);
  v37 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = sub_1DC4011C8();
  v4 = *(_QWORD *)(v38 - 8);
  MEMORY[0x1E0C80A78](v38);
  v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC24B3F4(0, &qword_1F034FCB8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v40 = v7;
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v32 - v9;
  v11 = type metadata accessor for PriceViewModel();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = a1[3];
  v41 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v14);
  sub_1DC24B36C();
  v39 = v10;
  v15 = v42;
  sub_1DC409B08();
  if (v15)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
  v16 = v6;
  v42 = v11;
  v17 = v8;
  v18 = v38;
  v51 = 0;
  v19 = (uint64_t)v13;
  *(_QWORD *)v13 = sub_1DC4098D4();
  v13[8] = v20 & 1;
  v50 = 1;
  *((_QWORD *)v13 + 2) = sub_1DC4098D4();
  v13[24] = v21 & 1;
  v49 = 2;
  *((_QWORD *)v13 + 4) = sub_1DC4098D4();
  v13[40] = v22 & 1;
  v48 = 3;
  *((_QWORD *)v13 + 6) = sub_1DC4098C8();
  *((_QWORD *)v13 + 7) = v23;
  v47 = 4;
  *((_QWORD *)v13 + 8) = sub_1DC4098F8();
  *((_QWORD *)v13 + 9) = v24;
  v45 = 5;
  sub_1DC24B3B0();
  v33 = 0;
  sub_1DC409910();
  v13[80] = v46;
  v44 = 6;
  sub_1DC080808(&qword_1F034FCD0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF1F8], MEMORY[0x1E0DAF218]);
  sub_1DC409910();
  v25 = v16;
  v26 = v42;
  v27 = &v13[*(int *)(v42 + 40)];
  v33 = v4;
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v27, v25, v18);
  v43 = 7;
  sub_1DC080808(&qword_1F034FCD8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0E38], MEMORY[0x1E0CB0E68]);
  v28 = v37;
  v29 = v36;
  sub_1DC409910();
  v30 = (uint64_t)v41;
  (*(void (**)(char *, uint64_t))(v17 + 8))(v39, v40);
  (*(void (**)(uint64_t, char *, uint64_t))(v34 + 32))(v19 + *(int *)(v26 + 44), v28, v29);
  sub_1DC0990BC(v19, v35, (uint64_t (*)(_QWORD))type metadata accessor for PriceViewModel);
  __swift_destroy_boxed_opaque_existential_1(v30);
  return sub_1DC0926D8(v19, (uint64_t (*)(_QWORD))type metadata accessor for PriceViewModel);
}

uint64_t sub_1DC24B2B8()
{
  unsigned __int8 *v0;

  return sub_1DC24AA88(*v0);
}

uint64_t sub_1DC24B2C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC24B70C(a1, a2);
  *a3 = result;
  return result;
}

void sub_1DC24B2E4(_BYTE *a1@<X8>)
{
  *a1 = 8;
}

uint64_t sub_1DC24B2F0()
{
  sub_1DC24B36C();
  return sub_1DC409B20();
}

uint64_t sub_1DC24B318()
{
  sub_1DC24B36C();
  return sub_1DC409B2C();
}

uint64_t sub_1DC24B340@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DC24AE34(a1, a2);
}

uint64_t sub_1DC24B354(_QWORD *a1)
{
  return sub_1DC24AB88(a1);
}

unint64_t sub_1DC24B36C()
{
  unint64_t result;

  result = qword_1F034FCC0;
  if (!qword_1F034FCC0)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC41D3BC, &type metadata for PriceViewModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F034FCC0);
  }
  return result;
}

unint64_t sub_1DC24B3B0()
{
  unint64_t result;

  result = qword_1F034FCC8;
  if (!qword_1F034FCC8)
  {
    result = MEMORY[0x1DF0CAB8C](&protocol conformance descriptor for MarketOpenState, &type metadata for MarketOpenState);
    atomic_store(result, (unint64_t *)&qword_1F034FCC8);
  }
  return result;
}

void sub_1DC24B3F4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC24B36C();
    v7 = a3(a1, &type metadata for PriceViewModel.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1DC24B450()
{
  unint64_t result;

  result = qword_1F034FCE8;
  if (!qword_1F034FCE8)
  {
    result = MEMORY[0x1DF0CAB8C](&protocol conformance descriptor for MarketOpenState, &type metadata for MarketOpenState);
    atomic_store(result, (unint64_t *)&qword_1F034FCE8);
  }
  return result;
}

unint64_t sub_1DC24B494()
{
  unint64_t result;

  result = qword_1F034FD00;
  if (!qword_1F034FD00)
  {
    result = MEMORY[0x1DF0CAB8C](&protocol conformance descriptor for MarketOpenState, &type metadata for MarketOpenState);
    atomic_store(result, (unint64_t *)&qword_1F034FD00);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for PriceViewModel.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF9)
    goto LABEL_17;
  if (a2 + 7 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 7) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 7;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 7;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 7;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 8;
  v8 = v6 - 8;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for PriceViewModel.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_1DC24B5B4 + 4 * byte_1DC41D0F7[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_1DC24B5E8 + 4 * byte_1DC41D0F2[v4]))();
}

uint64_t sub_1DC24B5E8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC24B5F0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC24B5F8);
  return result;
}

uint64_t sub_1DC24B604(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC24B60CLL);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_1DC24B610(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC24B618(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PriceViewModel.CodingKeys()
{
  return &type metadata for PriceViewModel.CodingKeys;
}

unint64_t sub_1DC24B638()
{
  unint64_t result;

  result = qword_1F034FD08;
  if (!qword_1F034FD08)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC41D394, &type metadata for PriceViewModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F034FD08);
  }
  return result;
}

unint64_t sub_1DC24B680()
{
  unint64_t result;

  result = qword_1F034FD10;
  if (!qword_1F034FD10)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC41D304, &type metadata for PriceViewModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F034FD10);
  }
  return result;
}

unint64_t sub_1DC24B6C8()
{
  unint64_t result;

  result = qword_1F034FD18;
  if (!qword_1F034FD18)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC41D32C, &type metadata for PriceViewModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F034FD18);
  }
  return result;
}

uint64_t sub_1DC24B70C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6563697270 && a2 == 0xE500000000000000;
  if (v2 || (sub_1DC4099E8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6168436563697270 && a2 == 0xEB0000000065676ELL || (sub_1DC4099E8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001DC43FD50 || (sub_1DC4099E8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x79636E6572727563 && a2 == 0xEC00000065646F43 || (sub_1DC4099E8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6B6361626C6C6166 && a2 == 0xEC00000074786554 || (sub_1DC4099E8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x704F74656B72616DLL && a2 == 0xEF65746174536E65 || (sub_1DC4099E8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x7079546B636F7473 && a2 == 0xE900000000000065 || (sub_1DC4099E8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x656C61636F6CLL && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    v6 = sub_1DC4099E8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 7;
    else
      return 8;
  }
}

uint64_t sub_1DC24BAB4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char *v24;
  char v25;
  unsigned int *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  char *v43;
  char *v44;
  __int128 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v3 = sub_1DC40160C();
  v49 = *(_QWORD *)(v3 - 8);
  v50 = v3;
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1DC402F5C();
  v52 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v43 - v10;
  v51 = sub_1DC403A84();
  v12 = *(_QWORD *)(v51 - 8);
  MEMORY[0x1E0C80A78](v51);
  v14 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1DC403A78();
  v53 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for WebViewSession();
  v19 = *(_QWORD *)(v1 + 16);
  if ((*(_BYTE *)(a1 + *(int *)(v18 + 24)) & 1) != 0)
  {
    sub_1DC40184C();
    sub_1DC10B31C(0, &qword_1EDB3FE58, (void (*)(uint64_t))MEMORY[0x1E0CF8518]);
    v48 = v6;
    v20 = sub_1DC4017BC();
    v46 = v15;
    v47 = v19;
    v43 = v8;
    v44 = v17;
    v21 = *(_QWORD *)(v20 - 8);
    v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
    v23 = swift_allocObject();
    v45 = xmmword_1DC40DC10;
    *(_OWORD *)(v23 + 16) = xmmword_1DC40DC10;
    v24 = (char *)(v23 + v22);
    strcpy(v24, "widgetHeadline");
    v24[15] = -18;
    (*(void (**)(void))(v21 + 104))();
    v25 = sub_1DC401600();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v49 + 8))(v5, v50);
    v26 = (unsigned int *)MEMORY[0x1E0DACDE0];
    v27 = v52;
    if ((v25 & 1) == 0)
      v26 = (unsigned int *)MEMORY[0x1E0DACE00];
    v28 = v43;
    v29 = v48;
    (*(void (**)(char *, _QWORD, uint64_t))(v52 + 104))(v43, *v26, v48);
    (*(void (**)(char *, _QWORD, uint64_t))(v12 + 104))(v14, *MEMORY[0x1E0DADE38], v51);
    v30 = v28;
    (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v11, v28, v29);
    swift_bridgeObjectRetain();
    v31 = v44;
    sub_1DC403A6C();
    sub_1DC10B31C(0, (unint64_t *)&qword_1EDB3FE40, (void (*)(uint64_t))MEMORY[0x1E0CF8178]);
    v32 = sub_1DC401618();
    v33 = *(_QWORD *)(v32 - 8);
    v34 = (*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
    v35 = swift_allocObject();
    *(_OWORD *)(v35 + 16) = v45;
    (*(void (**)(unint64_t, _QWORD, uint64_t))(v33 + 104))(v35 + v34, *MEMORY[0x1E0CF8168], v32);
    sub_1DC080808((unint64_t *)&unk_1EDB29970, (uint64_t (*)(uint64_t))MEMORY[0x1E0DADE28], MEMORY[0x1E0DADE18]);
    v36 = v46;
    sub_1DC401870();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v53 + 8))(v31, v36);
    (*(void (**)(char *, uint64_t))(v27 + 8))(v30, v48);
  }
  else
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v12 + 104))(v14, *MEMORY[0x1E0DADE38], v51);
    (*(void (**)(char *, _QWORD, uint64_t))(v52 + 104))(v11, *MEMORY[0x1E0DACDC0], v6);
    swift_bridgeObjectRetain();
    sub_1DC403A6C();
    sub_1DC10B31C(0, (unint64_t *)&qword_1EDB3FE40, (void (*)(uint64_t))MEMORY[0x1E0CF8178]);
    v37 = v17;
    v38 = sub_1DC401618();
    v39 = *(_QWORD *)(v38 - 8);
    v40 = (*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80);
    v41 = swift_allocObject();
    *(_OWORD *)(v41 + 16) = xmmword_1DC40DC10;
    (*(void (**)(unint64_t, _QWORD, uint64_t))(v39 + 104))(v41 + v40, *MEMORY[0x1E0CF8168], v38);
    sub_1DC080808((unint64_t *)&unk_1EDB29970, (uint64_t (*)(uint64_t))MEMORY[0x1E0DADE28], MEMORY[0x1E0DADE18]);
    sub_1DC401870();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v53 + 8))(v37, v15);
  }
  sub_1DC4037D8();
  sub_1DC080808(&qword_1F034FDE8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DADA08], MEMORY[0x1E0DADA00]);
  return sub_1DC401888();
}

uint64_t sub_1DC24BFF8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char v17;
  unsigned int *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _OWORD v29[2];

  v28 = a1;
  v3 = sub_1DC403184();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v25 - v8;
  v25 = sub_1DC40124C();
  v10 = *(_QWORD *)(v25 - 8);
  MEMORY[0x1E0C80A78](v25);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1DC403178();
  v14 = *(_QWORD *)(v13 - 8);
  v26 = v13;
  v27 = v14;
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(a2 + 32), *(_QWORD *)(a2 + 56));
  sub_1DC400A60();
  v17 = sub_1DC4011D4();
  v18 = (unsigned int *)MEMORY[0x1E0DAD158];
  if ((v17 & 1) == 0)
    v18 = (unsigned int *)MEMORY[0x1E0DAD150];
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v9, *v18, v3);
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v6, v9, v3);
  sub_1DC40316C();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v25);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
  sub_1DC10B31C(0, (unint64_t *)&qword_1EDB3FE40, (void (*)(uint64_t))MEMORY[0x1E0CF8178]);
  v19 = sub_1DC401618();
  v20 = *(_QWORD *)(v19 - 8);
  v21 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_1DC40DC10;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v20 + 104))(v22 + v21, *MEMORY[0x1E0CF8170], v19);
  sub_1DC080808(&qword_1EDB297C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD148], MEMORY[0x1E0DAD138]);
  v23 = v26;
  sub_1DC4015C4();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v16, v23);
  sub_1DC4037D8();
  sub_1DC080808(&qword_1F034FDE8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DADA08], MEMORY[0x1E0DADA00]);
  memset(v29, 0, sizeof(v29));
  sub_1DC4015DC();
  return sub_1DC150744((uint64_t)v29);
}

uint64_t sub_1DC24C2DC()
{
  uint64_t v0;

  swift_release();
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for WebViewCoordinator()
{
  return objc_opt_self();
}

uint64_t sub_1DC24C330(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DC24C368(a1, a2, a3, MEMORY[0x1E0DADC50], &qword_1F034FDE0, MEMORY[0x1E0DADC48]);
}

uint64_t sub_1DC24C34C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DC24C368(a1, a2, a3, MEMORY[0x1E0DADC60], &qword_1F034FDD8, MEMORY[0x1E0DADC58]);
}

uint64_t sub_1DC24C368(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t), unint64_t *a5, uint64_t a6)
{
  a4(0);
  sub_1DC080808(a5, a4, a6);
  return sub_1DC4018A0();
}

uint64_t sub_1DC24C3DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v18;

  v4 = v3;
  v7 = sub_1DC403544();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1DC403AC0();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v12 + 104))(v15, *MEMORY[0x1E0DADEE8], v11, v13);
  v16 = sub_1DC4017EC();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  *(_QWORD *)(v4 + 16) = v16;
  *(_QWORD *)(v4 + 24) = a2;
  sub_1DC0824D4(a3, v4 + 32);
  swift_getObjectType();
  swift_unknownObjectRetain();
  sub_1DC29B210();
  sub_1DC080808(&qword_1F034FDD0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD670], MEMORY[0x1E0DAD660]);
  sub_1DC401870();
  __swift_destroy_boxed_opaque_existential_1(a3);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return v4;
}

uint64_t sub_1DC24C578(void (*a1)(void), uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v15[16];

  v5 = sub_1DC4048C4();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1DC404180();
  sub_1DC089DA4(0, &qword_1EDB3FF08, (uint64_t (*)(uint64_t))sub_1DC131594, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1DC40DC10;
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0DB7CE0], v5);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 40));
  v10 = sub_1DC400ACC();
  swift_retain();
  sub_1DC24C7A8(v10, a3);
  swift_bridgeObjectRelease();
  swift_release();
  v11 = sub_1DC4048B8();
  swift_allocObject();
  v12 = sub_1DC404894();
  v13 = MEMORY[0x1E0DB7CC8];
  *(_QWORD *)(v9 + 56) = v11;
  *(_QWORD *)(v9 + 64) = v13;
  *(_QWORD *)(v9 + 32) = v12;
  sub_1DC404144();
  sub_1DC404114();
  a1();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DC24C740()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1DC24C774()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DC24C7A0(void (*a1)(void), uint64_t a2)
{
  uint64_t v2;

  return sub_1DC24C578(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_1DC24C7A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v26;
  unint64_t v27;
  _QWORD v29[2];
  unsigned int v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v5 = sub_1DC404C54();
  v32 = *(_QWORD *)(v5 - 8);
  v33 = v5;
  MEMORY[0x1E0C80A78](v5);
  v31 = (char *)v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC1FB6C4();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC089DA4(0, (unint64_t *)&qword_1F034EA90, (uint64_t (*)(uint64_t))sub_1DC1FB774, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v10);
  v42 = (char *)v29 - v11;
  sub_1DC24CBBC();
  MEMORY[0x1E0C80A78](v12);
  v41 = (char *)v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = sub_1DC40124C();
  v14 = *(_QWORD *)(v39 - 8);
  MEMORY[0x1E0C80A78](v39);
  v40 = (char *)v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(_QWORD *)(a1 + 16);
  v17 = MEMORY[0x1E0DEE9D8];
  if (v16)
  {
    v29[1] = v2;
    v47 = MEMORY[0x1E0DEE9D8];
    sub_1DC1128CC(0, v16, 0);
    v17 = v47;
    v18 = a1 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
    v34 = *(_QWORD *)(v14 + 72);
    v35 = (_QWORD *)(a2 + 16);
    v30 = *MEMORY[0x1E0DB8538];
    v37 = v9;
    v38 = a2;
    v36 = v14;
    do
    {
      __swift_project_boxed_opaque_existential_1(v35, *(_QWORD *)(a2 + 40));
      v19 = *(_QWORD *)(sub_1DC400ACC() + 16);
      swift_bridgeObjectRelease();
      if (qword_1EDB2AA78 != -1)
        swift_once();
      (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v40, v18, v39);
      swift_retain();
      v43 = sub_1DC4068EC();
      v44 = v20;
      sub_1DC408B48();
      sub_1DC4011E0();
      sub_1DC408B48();
      swift_bridgeObjectRelease();
      v43 = sub_1DC4011F8();
      v44 = v21;
      sub_1DC405914();
      sub_1DC1FB774();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v42, 1, 1, v22);
      if (v19 < 2)
      {
        (*(void (**)(char *, _QWORD, uint64_t))(v32 + 104))(v31, v30, v33);
        sub_1DC404EDC();
      }
      else
      {
        sub_1DC404ED0();
      }
      v23 = sub_1DC40463C();
      swift_allocObject();
      v24 = sub_1DC4045A0();
      v45 = v23;
      v46 = MEMORY[0x1E0DB77B0];
      v43 = v24;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v47 = v17;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1DC1128CC(0, *(_QWORD *)(v17 + 16) + 1, 1);
        v17 = v47;
      }
      v14 = v36;
      v27 = *(_QWORD *)(v17 + 16);
      v26 = *(_QWORD *)(v17 + 24);
      if (v27 >= v26 >> 1)
      {
        sub_1DC1128CC(v26 > 1, v27 + 1, 1);
        v17 = v47;
      }
      *(_QWORD *)(v17 + 16) = v27 + 1;
      sub_1DC131530((uint64_t)&v43, v17 + 40 * v27 + 32);
      v18 += v34;
      --v16;
      a2 = v38;
    }
    while (v16);
  }
  return v17;
}

void sub_1DC24CBBC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F034FDF0)
  {
    sub_1DC40124C();
    v0 = sub_1DC405920();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1F034FDF0);
  }
}

char *sub_1DC24CC38(double a1, double a2, double a3, double a4)
{
  char *v4;
  objc_class *ObjectType;
  uint64_t v10;
  id v11;
  char *v12;
  char *v13;
  void *v14;
  char *v15;
  id v16;
  objc_super v18;

  ObjectType = (objc_class *)swift_getObjectType();
  v10 = OBJC_IVAR____TtC8StocksUI17BrandingTitleView_titleLabel;
  v11 = objc_allocWithZone(MEMORY[0x1E0DC3990]);
  v12 = v4;
  *(_QWORD *)&v4[v10] = objc_msgSend(v11, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);

  v18.receiver = v12;
  v18.super_class = ObjectType;
  v13 = (char *)objc_msgSendSuper2(&v18, sel_initWithFrame_, a1, a2, a3, a4);
  v14 = *(void **)&v13[OBJC_IVAR____TtC8StocksUI17BrandingTitleView_titleLabel];
  v15 = v13;
  objc_msgSend(v15, sel_addSubview_, v14);
  v16 = v14;
  objc_msgSend(v16, sel_setNumberOfLines_, 0);

  return v15;
}

uint64_t type metadata accessor for BrandingTitleView()
{
  return objc_opt_self();
}

void sub_1DC24CE44()
{
  sub_1DC24CEA0((unint64_t *)&unk_1EDB2F690, (uint64_t)&unk_1DC41D52C);
  JUMPOUT(0x1DF0C7418);
}

uint64_t sub_1DC24CE7C()
{
  return sub_1DC24CEA0(&qword_1EDB2F688, (uint64_t)&unk_1DC41D4F4);
}

uint64_t sub_1DC24CEA0(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for BrandingTitleView();
    result = MEMORY[0x1DF0CAB8C](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for NowPlayingBackgroundView()
{
  return objc_opt_self();
}

uint64_t sub_1DC24D08C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[5];
  _BYTE v20[24];
  uint64_t v21;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB3E778);
  result = sub_1DC402608();
  if (v21)
  {
    v4 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v20, v21);
    v5 = MEMORY[0x1E0C80A78](v4);
    v7 = (_QWORD *)((char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v8 + 16))(v7, v5);
    v9 = *v7;
    v10 = type metadata accessor for DateRangePickerLayoutAttributesFactory();
    v19[3] = v10;
    v19[4] = &off_1EA469018;
    v19[0] = v9;
    v11 = type metadata accessor for StockChartViewLayoutAttributesFactory();
    v12 = (_QWORD *)swift_allocObject();
    v13 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v19, v10);
    v14 = MEMORY[0x1E0C80A78](v13);
    v16 = (_QWORD *)((char *)v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v17 + 16))(v16, v14);
    v18 = *v16;
    v12[5] = v10;
    v12[6] = &off_1EA469018;
    v12[2] = v18;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
    result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
    a2[3] = v11;
    a2[4] = &off_1EA461928;
    *a2 = v12;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC24D224@<X0>(uint64_t *a1@<X8>)
{
  return sub_1DC1E1D2C((uint64_t (*)(_QWORD))type metadata accessor for StockChartViewRenderer, (uint64_t)&off_1EA4590A8, a1);
}

uint64_t sub_1DC24D238(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t result;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  _QWORD v29[2];
  uint64_t v30;
  void *v31;
  char *v32;
  _QWORD v33[3];
  uint64_t v34;
  _UNKNOWN **v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE v38[24];
  uint64_t v39;
  char v40[24];
  uint64_t v41;
  char v42[24];
  uint64_t v43;

  sub_1DC089DA4(0, (unint64_t *)&qword_1EDB28DE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF0D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v29 - v3;
  sub_1DC402644();
  swift_allocObject();
  sub_1DC402638();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v5 = sub_1DC4010E4();
  sub_1DC402608();
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5);
  if ((_DWORD)result == 1)
  {
    __break(1u);
    goto LABEL_13;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC2519CC();
  swift_retain();
  v7 = (void *)sub_1DC4025E4();
  result = swift_release();
  if (!v7)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC251D60();
  swift_retain();
  v8 = (void *)sub_1DC4025E4();
  result = swift_release();
  if (!v8)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for StockChartInteractionHandler();
  result = sub_1DC4025FC();
  if (!result)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v9 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB3BDB0);
  result = sub_1DC402608();
  if (!v43)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB3DC50);
  result = sub_1DC402608();
  if (!v41)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB31E68);
  result = sub_1DC402608();
  if (!v39)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v32 = v4;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB36D48);
  result = sub_1DC402608();
  v10 = v36;
  if (!v36)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v31 = v7;
  v30 = v37;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for DateRangePickerView();
  result = sub_1DC4025FC();
  if (!result)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v11 = (void *)result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for StockChartLoadingState();
  result = sub_1DC4025FC();
  if (result)
  {
    v12 = result;
    v13 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v38, v39);
    v29[1] = v29;
    v14 = MEMORY[0x1E0C80A78](v13);
    v16 = (_QWORD *)((char *)v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v17 + 16))(v16, v14);
    v18 = *v16;
    v34 = type metadata accessor for StockChartStyler();
    v35 = &off_1EA450010;
    v33[0] = v18;
    v19 = (char *)objc_allocWithZone((Class)type metadata accessor for StockChartViewController(0));
    v20 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v33, v34);
    v21 = MEMORY[0x1E0C80A78](v20);
    v23 = (_QWORD *)((char *)v29 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v24 + 16))(v23, v21);
    v28 = v19;
    v25 = v31;
    sub_1DC2510D0((uint64_t)v32, v31, v8, v9, (uint64_t)v42, (uint64_t)v40, *v23, v10, v30, v11, v12, v28);
    v27 = v26;

    swift_release();
    swift_unknownObjectRelease();

    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
    swift_release();
    return v27;
  }
LABEL_21:
  __break(1u);
  return result;
}

uint64_t sub_1DC24D784(_QWORD *a1, uint64_t *a2)
{
  uint64_t v3;
  _QWORD v5[5];

  v3 = *a2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v5[3] = v3;
  v5[4] = MEMORY[0x1E0DB3668];
  v5[0] = a2;
  sub_1DC096268(0, &qword_1EDB29538);
  swift_retain();
  sub_1DC402500();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
}

uint64_t sub_1DC24D844(_QWORD *a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[5];
  _BYTE v19[24];
  uint64_t v20;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC408854();
  result = sub_1DC4025FC();
  if (result)
  {
    v3 = result;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1DC096268(0, &qword_1EDB378C8);
    result = sub_1DC402608();
    if (v20)
    {
      v4 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v19, v20);
      v5 = MEMORY[0x1E0C80A78](v4);
      v7 = (_QWORD *)((char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, __n128))(v8 + 16))(v7, v5);
      v9 = *v7;
      v10 = type metadata accessor for StockChartCalloutStyler();
      v18[3] = v10;
      v18[4] = &off_1EA469210;
      v18[0] = v9;
      type metadata accessor for StockChartInteractionHandler();
      v11 = swift_allocObject();
      v12 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v18, v10);
      v13 = MEMORY[0x1E0C80A78](v12);
      v15 = (_QWORD *)((char *)v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, __n128))(v16 + 16))(v15, v13);
      v17 = sub_1DC250BFC(v3, *v15, v11);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
      return v17;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_1DC24DA04(uint64_t a1, _QWORD *a2)
{
  id v2;

  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1DC2519CC();
  v2 = (id)sub_1DC4025FC();
  swift_unknownObjectWeakAssign();

}

uint64_t sub_1DC24DA70()
{
  uint64_t v0;

  type metadata accessor for StockChartLoadingState();
  v0 = swift_allocObject();
  sub_1DC222254();
  swift_allocObject();
  *(_QWORD *)(v0 + 16) = sub_1DC402A4C();
  return v0;
}

uint64_t sub_1DC24DAD4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1DC089DA4(0, (unint64_t *)&qword_1EDB28DE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF0D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v14 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v7 = sub_1DC4010E4();
  sub_1DC402608();
  v8 = *(_QWORD *)(v7 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7);
  if ((_DWORD)result == 1)
  {
    __break(1u);
    goto LABEL_6;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB28BF0);
  result = sub_1DC402608();
  v10 = v17;
  if (!v17)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v11 = v18;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB28CC0);
  result = sub_1DC402608();
  if (v16)
  {
    type metadata accessor for StockChartDataManager();
    v12 = swift_allocObject();
    (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v12 + OBJC_IVAR____TtC8StocksUI21StockChartDataManager_stock, v6, v7);
    v13 = (_QWORD *)(v12 + OBJC_IVAR____TtC8StocksUI21StockChartDataManager_chartManager);
    *v13 = v10;
    v13[1] = v11;
    result = sub_1DC097DD0(&v15, v12 + OBJC_IVAR____TtC8StocksUI21StockChartDataManager_priceDataManager);
    *a2 = v12;
    a2[1] = (uint64_t)&off_1EA45C828;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1DC24DCC8(uint64_t a1, _QWORD *a2)
{
  uint64_t result;

  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for StockChartInteractionHandler();
  result = sub_1DC4025FC();
  if (result)
  {
    sub_1DC080808(&qword_1EDB38730, (uint64_t (*)(uint64_t))type metadata accessor for StockChartInteractionHandler, (uint64_t)&unk_1DC424A18);
    sub_1DC408734();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC24DD64()
{
  sub_1DC096268(0, &qword_1EDB31E68);
  sub_1DC402B3C();
  swift_release();
  sub_1DC096268(0, &qword_1EDB31E60);
  sub_1DC402B3C();
  type metadata accessor for StockChartRouter();
  sub_1DC402488();
  swift_release();
  swift_release();
  sub_1DC096268(0, &qword_1EDB36D48);
  sub_1DC402B3C();
  swift_release();
  sub_1DC096268(0, &qword_1EDB35BF8);
  sub_1DC402B3C();
  type metadata accessor for StockChartInteractor();
  sub_1DC402488();
  swift_release();
  swift_release();
  sub_1DC096268(0, &qword_1EDB3A650);
  sub_1DC402B3C();
  swift_release();
  sub_1DC096268(0, &qword_1EDB3C738);
  sub_1DC402B3C();
  swift_release();
  sub_1DC096268(0, &qword_1EDB3E778);
  sub_1DC402B3C();
  swift_release();
  type metadata accessor for DateRangePickerView();
  sub_1DC402B30();
  swift_release();
  sub_1DC096268(0, &qword_1EDB36180);
  sub_1DC402B3C();
  swift_release();
  sub_1DC096268(0, &qword_1EDB3BDB0);
  sub_1DC402B3C();
  swift_release();
  sub_1DC096268(0, &qword_1EDB394F8);
  sub_1DC402B3C();
  swift_release();
  sub_1DC096268(0, &qword_1EDB3BCF0);
  sub_1DC402B3C();
  swift_release();
  sub_1DC096268(0, &qword_1EDB3EA68);
  sub_1DC402B3C();
  swift_release();
  type metadata accessor for StockChartCalloutLayoutAttributesFactory();
  sub_1DC402B30();
  swift_release();
  sub_1DC096268(0, &qword_1EDB3DC50);
  sub_1DC402B3C();
  swift_release();
  sub_1DC096268(0, &qword_1EDB3C740);
  sub_1DC402B3C();
  swift_release();
  sub_1DC096268(0, &qword_1EDB3EF78);
  sub_1DC402B3C();
  swift_release();
  sub_1DC096268(0, &qword_1EDB378C8);
  sub_1DC402B3C();
  swift_release();
  sub_1DC096268(0, &qword_1EDB36600);
  sub_1DC402B3C();
  swift_release();
  sub_1DC096268(0, &qword_1EDB3CF78);
  sub_1DC402B3C();
  swift_release();
  sub_1DC096268(0, &qword_1EDB36D40);
  sub_1DC402B3C();
  swift_release();
  sub_1DC096268(0, &qword_1EDB3D648);
  sub_1DC402B3C();
  swift_release();
  sub_1DC250FCC();
  sub_1DC402B30();
  return swift_release();
}

uint64_t sub_1DC24E300@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE v24[24];
  uint64_t v25;
  _BYTE v26[24];
  uint64_t v27;
  uint64_t v28;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, qword_1EDB2D2F0);
  result = sub_1DC402608();
  if (v27)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1DC096268(0, &qword_1EDB36180);
    result = sub_1DC402608();
    if (v25)
    {
      v5 = type metadata accessor for StockChartStyler();
      v22 = sub_1DC400118();
      v23 = sub_1DC080808((unint64_t *)&qword_1EDB28AE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0E38], MEMORY[0x1E0DB6580]);
      __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v21);
      sub_1DC4000DC();
      v7 = v27;
      v6 = v28;
      v8 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v26, v27);
      v9 = MEMORY[0x1E0C80A78](v8);
      v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, __n128))(v12 + 16))(v11, v9);
      v13 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v24, v25);
      v14 = MEMORY[0x1E0C80A78](v13);
      v16 = (char *)&v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, __n128))(v17 + 16))(v16, v14);
      v18 = type metadata accessor for DateRangePickerStyler();
      v19 = sub_1DC1627AC(&v21, (uint64_t)v11, (uint64_t)v16, v5, v7, v18, v6, (uint64_t)&off_1EA44EDF8);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
      result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
      a2[3] = v5;
      a2[4] = &off_1EA450010;
      *a2 = v19;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1DC24E530@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = type metadata accessor for StockChartRouter();
  v3 = swift_allocObject();
  result = swift_unknownObjectWeakInit();
  a1[3] = v2;
  a1[4] = (uint64_t)&off_1EA46D980;
  *a1 = v3;
  return result;
}

void sub_1DC24E58C(uint64_t a1, _QWORD *a2)
{
  id v2;

  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for StockChartViewController(0);
  v2 = (id)sub_1DC4025FC();
  swift_unknownObjectWeakAssign();

}

uint64_t sub_1DC24E5F8@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t **v10;
  uint64_t v11;
  _QWORD *v12;
  _BYTE v14[24];
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB35BF8);
  result = sub_1DC402608();
  v5 = v16;
  if (v16)
  {
    v6 = v17;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1DC096268(0, &qword_1EDB31E60);
    result = sub_1DC402608();
    if (v15)
    {
      v7 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v14, v15);
      v8 = MEMORY[0x1E0C80A78](v7);
      v10 = (uint64_t **)&v14[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
      (*(void (**)(uint64_t **, __n128))(v11 + 16))(v10, v8);
      v12 = sub_1DC250CF4(v5, v6, *v10);
      result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
      *a2 = v12;
      a2[1] = &off_1EA45A2E8;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1DC24E754@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  _QWORD v29[5];
  _BYTE v30[24];
  uint64_t v31;
  _BYTE v32[24];
  uint64_t v33;
  _BYTE v34[24];
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB365F8);
  result = sub_1DC402608();
  v5 = v36;
  if (!v36)
  {
    __break(1u);
    goto LABEL_11;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4018AC();
  result = sub_1DC4025FC();
  if (!result)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v6 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB3A650);
  result = sub_1DC402608();
  if (!v35)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB3C738);
  result = sub_1DC402608();
  if (!v33)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB3D648);
  result = sub_1DC402608();
  if (!v31)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for StockChartInteractionHandler();
  result = sub_1DC4025FC();
  if (!result)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v7 = result;
  v28 = v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC250FCC();
  result = sub_1DC4025FC();
  if (!result)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v8 = (void *)result;
  v26 = v37;
  v27 = a2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB28BF8);
  result = sub_1DC402608();
  if (v29[3])
  {
    v9 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v34, v35);
    v10 = MEMORY[0x1E0C80A78](v9);
    v12 = (uint64_t *)((char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v13 + 16))(v12, v10);
    v14 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v32, v33);
    v15 = MEMORY[0x1E0C80A78](v14);
    v17 = (uint64_t *)((char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v18 + 16))(v17, v15);
    v19 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v30, v31);
    v20 = MEMORY[0x1E0C80A78](v19);
    v22 = (uint64_t *)((char *)&v26 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v23 + 16))(v22, v20);
    v24 = sub_1DC2517A0(v5, v26, v28, *v12, *v17, *v22, v7, v8, v29);
    swift_unknownObjectRelease();
    swift_release();
    swift_release();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);
    result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
    v25 = v27;
    *v27 = v24;
    v25[1] = &off_1EA44EE88;
    return result;
  }
LABEL_17:
  __break(1u);
  return result;
}

uint64_t sub_1DC24EB84(uint64_t a1, _QWORD *a2)
{
  uint64_t result;
  __int128 v3;
  uint64_t v4;
  _QWORD v5[4];

  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1DC096268(0, (unint64_t *)&unk_1EDB295C0);
  result = sub_1DC402608();
  if (v4)
  {
    sub_1DC097DD0(&v3, (uint64_t)v5);
    __swift_project_boxed_opaque_existential_1(v5, v5[3]);
    sub_1DC080808(&qword_1EDB31D50, (uint64_t (*)(uint64_t))type metadata accessor for StockChartInteractor, (uint64_t)&unk_1DC40E868);
    sub_1DC402B48();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v3);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC24EC64@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  _QWORD v27[5];
  _BYTE v28[24];
  uint64_t v29;
  __int128 v30;
  uint64_t v31;

  sub_1DC089DA4(0, (unint64_t *)&qword_1EDB28DE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF0D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v27[-1] - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB36020);
  result = sub_1DC402608();
  if (!v31)
  {
    __break(1u);
    goto LABEL_6;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB36D40);
  result = sub_1DC402608();
  if (!v29)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v26 = a2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v8 = sub_1DC4010E4();
  sub_1DC402608();
  v9 = *(_QWORD *)(v8 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8);
  if ((_DWORD)result != 1)
  {
    v10 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v28, v29);
    v11 = MEMORY[0x1E0C80A78](v10);
    v13 = (_QWORD *)((char *)&v27[-1] - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v14 + 16))(v13, v11);
    v15 = *v13;
    v16 = type metadata accessor for StockChartDateAnalyzer();
    v27[3] = v16;
    v27[4] = &off_1EA46E258;
    v27[0] = v15;
    v17 = type metadata accessor for StockChartDescriptorFactory();
    v18 = (_QWORD *)swift_allocObject();
    v19 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v27, v16);
    v20 = MEMORY[0x1E0C80A78](v19);
    v22 = (_QWORD *)((char *)&v27[-1] - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v23 + 16))(v22, v20);
    v24 = *v22;
    v18[10] = v16;
    v18[11] = &off_1EA46E258;
    v18[7] = v24;
    sub_1DC097DD0(&v30, (uint64_t)(v18 + 2));
    (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))((uint64_t)v18 + OBJC_IVAR____TtC8StocksUI27StockChartDescriptorFactory_stock, v6, v8);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
    result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
    v25 = v26;
    v26[3] = v17;
    v25[4] = &off_1EA462100;
    *v25 = v18;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1DC24EF30@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD v33[3];
  _QWORD v34[3];
  uint64_t v35;
  _UNKNOWN **v36;
  _QWORD v37[5];
  _BYTE v38[24];
  uint64_t v39;
  _BYTE v40[24];
  uint64_t v41;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB31E68);
  result = sub_1DC402608();
  if (v41)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1DC096268(0, &qword_1EDB36600);
    result = sub_1DC402608();
    if (v39)
    {
      v5 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v40, v41);
      v33[2] = v33;
      v6 = MEMORY[0x1E0C80A78](v5);
      v8 = (_QWORD *)((char *)v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, __n128))(v9 + 16))(v8, v6);
      v10 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v38, v39);
      v33[1] = v33;
      v11 = MEMORY[0x1E0C80A78](v10);
      v13 = (_QWORD *)((char *)v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, __n128))(v14 + 16))(v13, v11);
      v15 = *v8;
      v16 = *v13;
      v17 = type metadata accessor for StockChartStyler();
      v37[3] = v17;
      v37[4] = &off_1EA450010;
      v37[0] = v15;
      v18 = type metadata accessor for StockChartGridFactory();
      v35 = v18;
      v36 = &off_1EA452060;
      v34[0] = v16;
      v19 = type metadata accessor for StockChartModelFactoryProvider();
      v20 = (_QWORD *)swift_allocObject();
      v21 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v37, v17);
      v22 = MEMORY[0x1E0C80A78](v21);
      v24 = (_QWORD *)((char *)v33 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, __n128))(v25 + 16))(v24, v22);
      v26 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v34, v35);
      v27 = MEMORY[0x1E0C80A78](v26);
      v29 = (_QWORD *)((char *)v33 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, __n128))(v30 + 16))(v29, v27);
      v31 = *v24;
      v32 = *v29;
      v20[5] = v17;
      v20[6] = &off_1EA450010;
      v20[2] = v31;
      v20[10] = v18;
      v20[11] = &off_1EA452060;
      v20[7] = v32;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
      result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
      a2[3] = v19;
      a2[4] = &off_1EA45B828;
      *a2 = v20;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1DC24F244@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD v33[3];
  _QWORD v34[3];
  uint64_t v35;
  _UNKNOWN **v36;
  _QWORD v37[5];
  _BYTE v38[24];
  uint64_t v39;
  _BYTE v40[24];
  uint64_t v41;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB36180);
  result = sub_1DC402608();
  if (v41)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1DC096268(0, &qword_1EDB3BCF0);
    result = sub_1DC402608();
    if (v39)
    {
      v5 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v40, v41);
      v33[2] = v33;
      v6 = MEMORY[0x1E0C80A78](v5);
      v8 = (_QWORD *)((char *)v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, __n128))(v9 + 16))(v8, v6);
      v10 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v38, v39);
      v33[1] = v33;
      v11 = MEMORY[0x1E0C80A78](v10);
      v13 = (_QWORD *)((char *)v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, __n128))(v14 + 16))(v13, v11);
      v15 = *v8;
      v16 = *v13;
      v17 = type metadata accessor for DateRangePickerStyler();
      v37[3] = v17;
      v37[4] = &off_1EA44EDF8;
      v37[0] = v15;
      v18 = type metadata accessor for StockChartCalloutLayoutAttributesFactory();
      v35 = v18;
      v36 = &off_1EA461090;
      v34[0] = v16;
      v19 = type metadata accessor for DateRangePickerLayoutAttributesFactory();
      v20 = (_QWORD *)swift_allocObject();
      v21 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v37, v17);
      v22 = MEMORY[0x1E0C80A78](v21);
      v24 = (_QWORD *)((char *)v33 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, __n128))(v25 + 16))(v24, v22);
      v26 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v34, v35);
      v27 = MEMORY[0x1E0C80A78](v26);
      v29 = (_QWORD *)((char *)v33 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, __n128))(v30 + 16))(v29, v27);
      v31 = *v24;
      v32 = *v29;
      v20[5] = v17;
      v20[6] = &off_1EA44EDF8;
      v20[2] = v31;
      v20[10] = v18;
      v20[11] = &off_1EA461090;
      v20[7] = v32;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
      result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
      a2[3] = v19;
      a2[4] = &off_1EA469018;
      *a2 = v20;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1DC24F558(_QWORD *a1)
{
  uint64_t result;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  char *v14;
  _QWORD v15[3];
  uint64_t v16;
  _UNKNOWN **v17;
  _BYTE v18[24];
  uint64_t v19;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB36180);
  result = sub_1DC402608();
  if (v19)
  {
    v2 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v18, v19);
    v3 = MEMORY[0x1E0C80A78](v2);
    v5 = (_QWORD *)((char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v6 + 16))(v5, v3);
    v7 = *v5;
    v16 = type metadata accessor for DateRangePickerStyler();
    v17 = &off_1EA44EDF8;
    v15[0] = v7;
    v8 = (char *)objc_allocWithZone((Class)type metadata accessor for DateRangePickerView());
    v9 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v15, v16);
    v10 = MEMORY[0x1E0C80A78](v9);
    v12 = (_QWORD *)((char *)v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v13 + 16))(v12, v10);
    v14 = sub_1DC250E00(*v12, v8);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
    return (uint64_t)v14;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC24F6D0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v14[24];
  uint64_t v15;
  uint64_t v16;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, qword_1EDB2D2F0);
  result = sub_1DC402608();
  v4 = v15;
  if (v15)
  {
    v5 = type metadata accessor for DateRangePickerStyler();
    v6 = v16;
    v7 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v14, v15);
    v8 = MEMORY[0x1E0C80A78](v7);
    v10 = &v14[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
    (*(void (**)(_BYTE *, __n128))(v11 + 16))(v10, v8);
    v12 = sub_1DC0A3134((uint64_t)v10, v5, v4, v6);
    result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
    a2[3] = v5;
    a2[4] = (uint64_t)&off_1EA44EDF8;
    *a2 = v12;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC24F7E4@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD v33[3];
  _QWORD v34[3];
  uint64_t v35;
  _UNKNOWN **v36;
  _QWORD v37[5];
  _BYTE v38[24];
  uint64_t v39;
  _BYTE v40[24];
  uint64_t v41;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB394F8);
  result = sub_1DC402608();
  if (v41)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1DC096268(0, &qword_1EDB3EA68);
    result = sub_1DC402608();
    if (v39)
    {
      v5 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v40, v41);
      v33[2] = v33;
      v6 = MEMORY[0x1E0C80A78](v5);
      v8 = (_QWORD *)((char *)v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, __n128))(v9 + 16))(v8, v6);
      v10 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v38, v39);
      v33[1] = v33;
      v11 = MEMORY[0x1E0C80A78](v10);
      v13 = (_QWORD *)((char *)v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, __n128))(v14 + 16))(v13, v11);
      v15 = *v8;
      v16 = *v13;
      v17 = type metadata accessor for StockChartCalloutRenderer();
      v37[3] = v17;
      v37[4] = &off_1EA46C918;
      v37[0] = v15;
      v18 = type metadata accessor for StockChartCalloutLayoutAttributesFactory();
      v35 = v18;
      v36 = &off_1EA4610A0;
      v34[0] = v16;
      v19 = type metadata accessor for StockChartCalloutViewProvider();
      v20 = (_QWORD *)swift_allocObject();
      v21 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v37, v17);
      v22 = MEMORY[0x1E0C80A78](v21);
      v24 = (_QWORD *)((char *)v33 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, __n128))(v25 + 16))(v24, v22);
      v26 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v34, v35);
      v27 = MEMORY[0x1E0C80A78](v26);
      v29 = (_QWORD *)((char *)v33 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, __n128))(v30 + 16))(v29, v27);
      v31 = *v24;
      v32 = *v29;
      v20[10] = v17;
      v20[11] = &off_1EA46C918;
      v20[7] = v31;
      v20[5] = v18;
      v20[6] = &off_1EA4610A0;
      v20[2] = v32;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
      result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
      a2[3] = v19;
      a2[4] = &off_1EA46CB90;
      *a2 = v20;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1DC24FAF8@<X0>(uint64_t *a1@<X8>)
{
  return sub_1DC1E1D2C((uint64_t (*)(_QWORD))type metadata accessor for StockChartCalloutRenderer, (uint64_t)&off_1EA46C918, a1);
}

uint64_t sub_1DC24FB0C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1DC24FB24(a1, (uint64_t)&off_1EA461090, a2);
}

uint64_t sub_1DC24FB18@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1DC24FB24(a1, (uint64_t)&off_1EA4610A0, a2);
}

uint64_t sub_1DC24FB24@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5;
  uint64_t result;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v5 = type metadata accessor for StockChartCalloutLayoutAttributesFactory();
  result = sub_1DC4025FC();
  if (result)
  {
    a3[3] = v5;
    a3[4] = a2;
    *a3 = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC24FB90(_QWORD *a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[5];
  _BYTE v20[24];
  uint64_t v21;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC408854();
  result = sub_1DC4025FC();
  if (result)
  {
    v3 = result;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1DC096268(0, &qword_1EDB378C8);
    result = sub_1DC402608();
    if (v21)
    {
      v4 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v20, v21);
      v5 = MEMORY[0x1E0C80A78](v4);
      v7 = (_QWORD *)((char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, __n128))(v8 + 16))(v7, v5);
      v9 = *v7;
      v10 = type metadata accessor for StockChartCalloutStyler();
      v19[3] = v10;
      v19[4] = &off_1EA469210;
      v19[0] = v9;
      type metadata accessor for StockChartCalloutLayoutAttributesFactory();
      v11 = (_QWORD *)swift_allocObject();
      v12 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v19, v10);
      v13 = MEMORY[0x1E0C80A78](v12);
      v15 = (_QWORD *)((char *)v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, __n128))(v16 + 16))(v15, v13);
      v17 = *v15;
      v11[6] = v10;
      v11[7] = &off_1EA469210;
      v11[3] = v17;
      v11[8] = sub_1DC1A22C8(MEMORY[0x1E0DEE9D8]);
      type metadata accessor for PriceFormatter();
      v18 = swift_allocObject();
      sub_1DC4000B8();
      v11[9] = v18;
      v11[2] = v3;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
      return (uint64_t)v11;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1DC24FD94@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD v33[3];
  _QWORD v34[3];
  uint64_t v35;
  _UNKNOWN **v36;
  _QWORD v37[5];
  _BYTE v38[24];
  uint64_t v39;
  _BYTE v40[24];
  uint64_t v41;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB3C740);
  result = sub_1DC402608();
  if (v41)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1DC096268(0, &qword_1EDB3EF78);
    result = sub_1DC402608();
    if (v39)
    {
      v5 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v40, v41);
      v33[2] = v33;
      v6 = MEMORY[0x1E0C80A78](v5);
      v8 = (_QWORD *)((char *)v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, __n128))(v9 + 16))(v8, v6);
      v10 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v38, v39);
      v33[1] = v33;
      v11 = MEMORY[0x1E0C80A78](v10);
      v13 = (_QWORD *)((char *)v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, __n128))(v14 + 16))(v13, v11);
      v15 = *v8;
      v16 = *v13;
      v17 = type metadata accessor for StockChartRangeCalloutRenderer();
      v37[3] = v17;
      v37[4] = &off_1EA45F150;
      v37[0] = v15;
      v18 = type metadata accessor for StockChartRangeCalloutLayoutAttributesFactory();
      v35 = v18;
      v36 = &off_1EA45DD88;
      v34[0] = v16;
      v19 = type metadata accessor for StockChartRangeCalloutViewProvider();
      v20 = (_QWORD *)swift_allocObject();
      v21 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v37, v17);
      v22 = MEMORY[0x1E0C80A78](v21);
      v24 = (_QWORD *)((char *)v33 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, __n128))(v25 + 16))(v24, v22);
      v26 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v34, v35);
      v27 = MEMORY[0x1E0C80A78](v26);
      v29 = (_QWORD *)((char *)v33 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, __n128))(v30 + 16))(v29, v27);
      v31 = *v24;
      v32 = *v29;
      v20[10] = v17;
      v20[11] = &off_1EA45F150;
      v20[7] = v31;
      v20[5] = v18;
      v20[6] = &off_1EA45DD88;
      v20[2] = v32;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
      result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
      a2[3] = v19;
      a2[4] = &off_1EA454350;
      *a2 = v20;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1DC2500A8@<X0>(uint64_t *a1@<X8>)
{
  return sub_1DC1E1D2C((uint64_t (*)(_QWORD))type metadata accessor for StockChartRangeCalloutRenderer, (uint64_t)&off_1EA45F150, a1);
}

uint64_t sub_1DC2500BC@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v21[5];
  _BYTE v22[24];
  uint64_t v23;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC408854();
  result = sub_1DC4025FC();
  if (result)
  {
    v5 = result;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1DC096268(0, &qword_1EDB378C8);
    result = sub_1DC402608();
    if (v23)
    {
      v6 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v22, v23);
      v7 = MEMORY[0x1E0C80A78](v6);
      v9 = (_QWORD *)((char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, __n128))(v10 + 16))(v9, v7);
      v11 = *v9;
      v12 = type metadata accessor for StockChartCalloutStyler();
      v21[3] = v12;
      v21[4] = &off_1EA469210;
      v21[0] = v11;
      v13 = type metadata accessor for StockChartRangeCalloutLayoutAttributesFactory();
      v14 = (_QWORD *)swift_allocObject();
      v15 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v21, v12);
      v16 = MEMORY[0x1E0C80A78](v15);
      v18 = (_QWORD *)((char *)v21 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, __n128))(v19 + 16))(v18, v16);
      v20 = *v18;
      v14[6] = v12;
      v14[7] = &off_1EA469210;
      v14[3] = v20;
      v14[8] = sub_1DC1A22C8(MEMORY[0x1E0DEE9D8]);
      v14[2] = v5;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
      result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
      a2[3] = v13;
      a2[4] = &off_1EA45DD88;
      *a2 = v14;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1DC2502AC@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _BYTE v20[24];
  uint64_t v21;
  _BYTE v22[24];
  uint64_t v23;
  uint64_t v24;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, qword_1EDB2D2F0);
  result = sub_1DC402608();
  if (v23)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1DC096268(0, &qword_1EDB31E68);
    result = sub_1DC402608();
    if (v21)
    {
      v5 = type metadata accessor for StockChartCalloutStyler();
      v7 = v23;
      v6 = v24;
      v8 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v22, v23);
      v9 = MEMORY[0x1E0C80A78](v8);
      v11 = &v20[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
      (*(void (**)(_BYTE *, __n128))(v12 + 16))(v11, v9);
      v13 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v20, v21);
      v14 = MEMORY[0x1E0C80A78](v13);
      v16 = &v20[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
      (*(void (**)(_BYTE *, __n128))(v17 + 16))(v16, v14);
      v18 = type metadata accessor for StockChartStyler();
      v19 = sub_1DC399110((uint64_t)v11, (uint64_t)v16, v5, v7, v18, v6, (uint64_t)&off_1EA450010);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
      result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
      a2[3] = v5;
      a2[4] = &off_1EA469210;
      *a2 = v19;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1DC25049C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD v33[3];
  _QWORD v34[3];
  uint64_t v35;
  _UNKNOWN **v36;
  _QWORD v37[5];
  _BYTE v38[24];
  uint64_t v39;
  _BYTE v40[24];
  uint64_t v41;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB31E68);
  result = sub_1DC402608();
  if (v41)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1DC096268(0, &qword_1EDB3CF78);
    result = sub_1DC402608();
    if (v39)
    {
      v5 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v40, v41);
      v33[2] = v33;
      v6 = MEMORY[0x1E0C80A78](v5);
      v8 = (_QWORD *)((char *)v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, __n128))(v9 + 16))(v8, v6);
      v10 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v38, v39);
      v33[1] = v33;
      v11 = MEMORY[0x1E0C80A78](v10);
      v13 = (_QWORD *)((char *)v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, __n128))(v14 + 16))(v13, v11);
      v15 = *v8;
      v16 = *v13;
      v17 = type metadata accessor for StockChartStyler();
      v37[3] = v17;
      v37[4] = &off_1EA450010;
      v37[0] = v15;
      v18 = type metadata accessor for StockChartLabelFormatterFactory();
      v35 = v18;
      v36 = &off_1EA454C20;
      v34[0] = v16;
      v19 = type metadata accessor for StockChartGridFactory();
      v20 = (_QWORD *)swift_allocObject();
      v21 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v37, v17);
      v22 = MEMORY[0x1E0C80A78](v21);
      v24 = (_QWORD *)((char *)v33 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, __n128))(v25 + 16))(v24, v22);
      v26 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v34, v35);
      v27 = MEMORY[0x1E0C80A78](v26);
      v29 = (_QWORD *)((char *)v33 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, __n128))(v30 + 16))(v29, v27);
      v31 = *v24;
      v32 = *v29;
      v20[5] = v17;
      v20[6] = &off_1EA450010;
      v20[2] = v31;
      v20[10] = v18;
      v20[11] = &off_1EA454C20;
      v20[7] = v32;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
      result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
      a2[3] = v19;
      a2[4] = &off_1EA452060;
      *a2 = v20;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1DC2507B0@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[5];
  _BYTE v20[24];
  uint64_t v21;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB31E68);
  result = sub_1DC402608();
  if (v21)
  {
    v4 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v20, v21);
    v5 = MEMORY[0x1E0C80A78](v4);
    v7 = (_QWORD *)((char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v8 + 16))(v7, v5);
    v9 = *v7;
    v10 = type metadata accessor for StockChartStyler();
    v19[3] = v10;
    v19[4] = &off_1EA450010;
    v19[0] = v9;
    v11 = type metadata accessor for StockChartLabelFormatterFactory();
    v12 = (_QWORD *)swift_allocObject();
    v13 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v19, v10);
    v14 = MEMORY[0x1E0C80A78](v13);
    v16 = (_QWORD *)((char *)v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v17 + 16))(v16, v14);
    v18 = *v16;
    v12[5] = v10;
    v12[6] = &off_1EA450010;
    v12[2] = v18;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
    result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
    a2[3] = v11;
    a2[4] = &off_1EA454C20;
    *a2 = v12;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC250948@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;

  sub_1DC089DA4(0, (unint64_t *)&unk_1EDB28B30, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1470], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v14 - v3;
  v5 = sub_1DC4001CC();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for StockChartDateAnalyzer();
  v10 = swift_allocObject();
  sub_1DC40019C();
  sub_1DC4001E4();
  v11 = sub_1DC400220();
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v4, 1, v11);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    sub_1DC4001A8();
    sub_1DC251024();
    v13 = swift_allocObject();
    *(_DWORD *)(v13 + ((*(unsigned int *)(*(_QWORD *)v13 + 48) + 3) & 0x1FFFFFFFCLL)) = 0;
    (*(void (**)(uint64_t, char *, uint64_t))(v6 + 16))(v13 + *(_QWORD *)(*MEMORY[0x1E0DEC528] + *(_QWORD *)v13 + 16), v8, v5);
    result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *(_QWORD *)(v10 + 16) = v13;
    a1[3] = v9;
    a1[4] = (uint64_t)&off_1EA46E258;
    *a1 = v10;
  }
  return result;
}

uint64_t sub_1DC250AF0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v2 = type metadata accessor for StockChartCalloutViewModelFactory();
  v3 = swift_allocObject();
  v4 = v3 + OBJC_IVAR____TtC8StocksUI33StockChartCalloutViewModelFactory_chart;
  v5 = sub_1DC400F7C();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  a1[3] = v2;
  a1[4] = (uint64_t)&off_1EA461908;
  *a1 = v3;
  return result;
}

uint64_t sub_1DC250B70(_QWORD *a1)
{
  uint64_t result;
  Class v2;
  id v3;
  uint64_t v4;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB2B060);
  result = sub_1DC402608();
  if (v4)
  {
    sub_1DC250FCC();
    v3 = objc_allocWithZone(v2);
    return sub_1DC407F24();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC250BFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  objc_class *v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v10;
  uint64_t v11;
  _UNKNOWN **v12;

  v11 = type metadata accessor for StockChartCalloutStyler();
  v12 = &off_1EA469210;
  *(_QWORD *)&v10 = a2;
  swift_unknownObjectWeakInit();
  *(_BYTE *)(a3 + 72) = 0;
  v6 = (objc_class *)type metadata accessor for StockChartCalloutHandleLayer();
  *(_QWORD *)(a3 + 80) = objc_msgSend(objc_allocWithZone(v6), sel_init);
  *(_QWORD *)(a3 + 88) = objc_msgSend(objc_allocWithZone(v6), sel_init);
  *(_QWORD *)(a3 + 104) = 0;
  swift_unknownObjectWeakInit();
  v7 = a3 + OBJC_IVAR____TtC8StocksUI28StockChartInteractionHandler_chartModel;
  v8 = sub_1DC4085CC();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  *(_BYTE *)(a3 + OBJC_IVAR____TtC8StocksUI28StockChartInteractionHandler_trend) = 2;
  *(_QWORD *)(a3 + 16) = a1;
  sub_1DC097DD0(&v10, a3 + 32);
  return a3;
}

_QWORD *sub_1DC250CF4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v14[5];
  _QWORD v15[3];
  uint64_t v16;
  _UNKNOWN **v17;

  v16 = *a3;
  v5 = v16;
  v17 = &off_1EA46D980;
  v15[0] = a3;
  type metadata accessor for StockChartEventHandler();
  v6 = (_QWORD *)swift_allocObject();
  v7 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v15, v16);
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (_QWORD *)((char *)v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v11 + 16))(v10, v8);
  v12 = *v10;
  v14[3] = v5;
  v14[4] = &off_1EA46D980;
  v14[0] = v12;
  v6[3] = 0;
  swift_unknownObjectWeakInit();
  v6[4] = a1;
  v6[5] = a2;
  sub_1DC0824D4((uint64_t)v14, (uint64_t)(v6 + 6));
  *(_QWORD *)(v6[4] + 24) = &off_1EA45A2A0;
  swift_unknownObjectWeakAssign();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
  return v6;
}

char *sub_1DC250E00(uint64_t a1, char *a2)
{
  char *v4;
  Class v5;
  id v6;
  char *v7;
  id v8;
  char *v9;
  uint64_t v10;
  void *v11;
  char *v12;
  id v13;
  objc_super v15;
  _QWORD v16[5];

  v16[3] = type metadata accessor for DateRangePickerStyler();
  v16[4] = &off_1EA44EDF8;
  v16[0] = a1;
  v4 = &a2[OBJC_IVAR____TtC8StocksUI19DateRangePickerView_onChange];
  sub_1DC08CBF0(0, &qword_1EDB29DB8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAE0F8], sub_1DC251088, MEMORY[0x1E0DB7E68]);
  *(_QWORD *)v4 = 0;
  *((_QWORD *)v4 + 1) = 0;
  v6 = objc_allocWithZone(v5);
  v7 = a2;
  v8 = objc_msgSend(v6, sel_init);
  *(_QWORD *)&v7[OBJC_IVAR____TtC8StocksUI19DateRangePickerView_segmentedControl] = v8;
  sub_1DC0824D4((uint64_t)v16, (uint64_t)&v7[OBJC_IVAR____TtC8StocksUI19DateRangePickerView_styler]);

  v15.receiver = v7;
  v15.super_class = (Class)type metadata accessor for DateRangePickerView();
  v9 = (char *)objc_msgSendSuper2(&v15, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v10 = OBJC_IVAR____TtC8StocksUI19DateRangePickerView_segmentedControl;
  v11 = *(void **)&v9[OBJC_IVAR____TtC8StocksUI19DateRangePickerView_segmentedControl];
  swift_allocObject();
  swift_unknownObjectWeakInit();
  v12 = v9;
  v13 = v11;
  sub_1DC40493C();

  objc_msgSend(v12, sel_addSubview_, *(_QWORD *)&v9[v10]);
  objc_msgSend(v12, sel_setAlwaysBounceVertical_, 0);
  objc_msgSend(v12, sel_setShowsVerticalScrollIndicator_, 0);
  objc_msgSend(v12, sel_setShowsHorizontalScrollIndicator_, 0);
  objc_msgSend(v12, sel_setDirectionalLockEnabled_, 1);

  __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
  return v12;
}

void sub_1DC250FCC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB2B020)
  {
    sub_1DC14D5D8();
    v0 = sub_1DC407F48();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB2B020);
  }
}

void sub_1DC251024()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB27460)
  {
    sub_1DC4001CC();
    type metadata accessor for os_unfair_lock_s(255);
    v0 = sub_1DC40976C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB27460);
  }
}

uint64_t sub_1DC251088()
{
  return sub_1DC080808(&qword_1EDB28B68, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAE0F8], (uint64_t)&protocol conformance descriptor for ChartRange);
}

uint64_t sub_1DC2510A4()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1DC2510C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1DC27B204(a1, a2, v2);
}

void sub_1DC2510D0(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, char *a12)
{
  uint64_t v18;
  id v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t ObjCClassFromMetadata;
  void *v28;
  id v29;
  id v30;
  id v31;
  id v32;
  void *v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  void *v39;
  id v40;
  id v41;
  char *v42;
  id v43;
  uint64_t v44;
  void *v45;
  void *v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  objc_class *ObjectType;
  objc_super v53;
  _QWORD v54[5];

  ObjectType = (objc_class *)swift_getObjectType();
  v54[3] = type metadata accessor for StockChartStyler();
  v54[4] = &off_1EA450010;
  v54[0] = a7;
  v18 = OBJC_IVAR____TtC8StocksUI24StockChartViewController_topDateRangePickerSeparator;
  v19 = objc_allocWithZone(MEMORY[0x1E0DC3F10]);
  v20 = a12;
  *(_QWORD *)&a12[v18] = objc_msgSend(v19, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v21 = OBJC_IVAR____TtC8StocksUI24StockChartViewController_activityIndicator;
  *(_QWORD *)&v20[v21] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3438]), sel_initWithActivityIndicatorStyle_, 100);
  *(_QWORD *)&v20[OBJC_IVAR____TtC8StocksUI24StockChartViewController_activeCallout] = 0xF000000000000007;
  *(_QWORD *)&v20[OBJC_IVAR____TtC8StocksUI24StockChartViewController_stateMachine] = 0;
  *(_QWORD *)&v20[OBJC_IVAR____TtC8StocksUI24StockChartViewController_errorView] = 0;
  v22 = &v20[OBJC_IVAR____TtC8StocksUI24StockChartViewController_stock];
  v23 = sub_1DC4010E4();
  v48 = *(_QWORD *)(v23 - 8);
  v49 = a1;
  v24 = a1;
  v25 = a5;
  (*(void (**)(char *, uint64_t, uint64_t))(v48 + 16))(v22, v24, v23);
  *(_QWORD *)&v20[OBJC_IVAR____TtC8StocksUI24StockChartViewController_lineChartViewController] = a2;
  *(_QWORD *)&v20[OBJC_IVAR____TtC8StocksUI24StockChartViewController_columnChartViewController] = a3;
  sub_1DC0824D4((uint64_t)v54, (uint64_t)&v20[OBJC_IVAR____TtC8StocksUI24StockChartViewController_styler]);
  v26 = &v20[OBJC_IVAR____TtC8StocksUI24StockChartViewController_eventHandler];
  *(_QWORD *)v26 = a8;
  *((_QWORD *)v26 + 1) = a9;
  *(_QWORD *)&v20[OBJC_IVAR____TtC8StocksUI24StockChartViewController_dateRangePicker] = a10;
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v28 = (void *)objc_opt_self();
  v29 = a10;
  v30 = a2;
  v31 = a3;
  swift_unknownObjectRetain();
  v32 = objc_msgSend(v28, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1DC3FFC80();

  v33 = (void *)sub_1DC408A1C();
  swift_bridgeObjectRelease();
  objc_msgSend(v29, sel_setAccessibilityLabel_, v33, 0x80000001DC43FFD0);

  *(_QWORD *)&v20[OBJC_IVAR____TtC8StocksUI24StockChartViewController_loadingState] = a11;
  *(_QWORD *)&v20[OBJC_IVAR____TtC8StocksUI24StockChartViewController_interactionHandler] = a4;
  sub_1DC0824D4(v25, (uint64_t)&v20[OBJC_IVAR____TtC8StocksUI24StockChartViewController_calloutViewProvider]);
  sub_1DC0824D4(a6, (uint64_t)&v20[OBJC_IVAR____TtC8StocksUI24StockChartViewController_rangeCalloutViewProvider]);
  v34 = objc_allocWithZone((Class)sub_1DC404474());
  v35 = v29;
  swift_retain();
  swift_retain();
  *(_QWORD *)&v20[OBJC_IVAR____TtC8StocksUI24StockChartViewController_interactionDisplayView] = sub_1DC404450();

  v53.receiver = v20;
  v53.super_class = ObjectType;
  v36 = objc_msgSendSuper2(&v53, sel_initWithNibName_bundle_, 0, 0);
  v37 = objc_allocWithZone(MEMORY[0x1E0D60B10]);
  v38 = v36;
  v39 = (void *)sub_1DC408A1C();
  v40 = objc_msgSend(v37, sel_initWithName_, v39);

  v41 = objc_allocWithZone(MEMORY[0x1E0D60B00]);
  v42 = (char *)v38;
  v43 = objc_msgSend(v41, sel_initWithState_withOwner_, v40, v42);

  v44 = OBJC_IVAR____TtC8StocksUI24StockChartViewController_stateMachine;
  v45 = *(void **)&v42[OBJC_IVAR____TtC8StocksUI24StockChartViewController_stateMachine];
  *(_QWORD *)&v42[OBJC_IVAR____TtC8StocksUI24StockChartViewController_stateMachine] = v43;

  v46 = *(void **)&v42[v44];
  if (v46)
  {
    v47 = v46;
    sub_1DC383468(v47);

    *(_QWORD *)(*(_QWORD *)&v42[OBJC_IVAR____TtC8StocksUI24StockChartViewController_eventHandler] + 24) = &off_1EA4684D8;
    swift_unknownObjectWeakAssign();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)v54);
    __swift_destroy_boxed_opaque_existential_1(a6);
    __swift_destroy_boxed_opaque_existential_1(v25);
    (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v49, v23);
  }
  else
  {
    __break(1u);
  }
}

_QWORD *sub_1DC25154C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8, _QWORD *a9, _QWORD *a10)
{
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  _QWORD v23[5];
  _QWORD v24[5];
  _QWORD v25[5];

  v25[3] = type metadata accessor for StockChartDescriptorFactory();
  v25[4] = &off_1EA462100;
  v25[0] = a4;
  v24[3] = type metadata accessor for StockChartModelFactoryProvider();
  v24[4] = &off_1EA45B828;
  v24[0] = a5;
  v23[3] = type metadata accessor for StockChartCalloutViewModelFactory();
  v23[4] = &off_1EA461908;
  v23[0] = a6;
  a10[3] = 0;
  swift_unknownObjectWeakInit();
  a10[24] = 0;
  a10[25] = 0;
  v18 = (char *)a10 + OBJC_IVAR____TtC8StocksUI20StockChartInteractor_activeChartRange;
  v19 = sub_1DC4002BC();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v18, 1, 1, v19);
  v20 = (char *)a10 + OBJC_IVAR____TtC8StocksUI20StockChartInteractor_lastKnownQoute;
  v21 = sub_1DC401030();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v20, 1, 1, v21);
  *((_BYTE *)a10 + OBJC_IVAR____TtC8StocksUI20StockChartInteractor_needRefresh) = 0;
  a10[4] = a1;
  a10[5] = a2;
  a10[6] = a3;
  sub_1DC0824D4((uint64_t)v25, (uint64_t)(a10 + 7));
  sub_1DC0824D4((uint64_t)v24, (uint64_t)(a10 + 12));
  sub_1DC0824D4((uint64_t)v23, (uint64_t)(a10 + 17));
  a10[22] = a7;
  a10[23] = a8;
  __swift_project_boxed_opaque_existential_1(a9, a9[3]);
  sub_1DC080808(&qword_1EDB31D40, (uint64_t (*)(uint64_t))type metadata accessor for StockChartInteractor, (uint64_t)&unk_1DC40E840);
  swift_unknownObjectRetain();
  swift_retain();
  swift_retain();
  a8;
  swift_retain();
  sub_1DC400778();
  swift_release();
  *(_QWORD *)(a7 + 104) = &off_1EA44EE68;
  swift_unknownObjectWeakAssign();
  swift_allocObject();
  swift_weakInit();

  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a9);
  return a10;
}

_QWORD *sub_1DC2517A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8, _QWORD *a9)
{
  _QWORD *v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  _QWORD *v32;
  void *v34;
  _QWORD v35[3];
  uint64_t v36;
  _UNKNOWN **v37;
  _QWORD v38[3];
  uint64_t v39;
  _UNKNOWN **v40;
  _QWORD v41[3];
  uint64_t v42;
  _UNKNOWN **v43;

  v34 = a8;
  v42 = type metadata accessor for StockChartDescriptorFactory();
  v43 = &off_1EA462100;
  v41[0] = a4;
  v39 = type metadata accessor for StockChartModelFactoryProvider();
  v40 = &off_1EA45B828;
  v38[0] = a5;
  v36 = type metadata accessor for StockChartCalloutViewModelFactory();
  v37 = &off_1EA461908;
  v35[0] = a6;
  type metadata accessor for StockChartInteractor();
  v16 = (_QWORD *)swift_allocObject();
  v17 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v41, v42);
  v18 = MEMORY[0x1E0C80A78](v17);
  v20 = (_QWORD *)((char *)&v35[-1] - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v21 + 16))(v20, v18);
  v22 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v38, v39);
  v23 = MEMORY[0x1E0C80A78](v22);
  v25 = (_QWORD *)((char *)&v35[-1] - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v26 + 16))(v25, v23);
  v27 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v35, v36);
  v28 = MEMORY[0x1E0C80A78](v27);
  v30 = (_QWORD *)((char *)&v35[-1] - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v31 + 16))(v30, v28);
  v32 = sub_1DC25154C(a1, a2, a3, *v20, *v25, *v30, a7, v34, a9, v16);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
  return v32;
}

uint64_t sub_1DC2519A0()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1DC2519C4(uint64_t a1)
{
  return sub_1DC14A434(a1);
}

void sub_1DC2519CC()
{
  uint64_t (*v0)(uint64_t);
  uint64_t (*v1)(uint64_t);
  uint64_t (*v2)(uint64_t);
  unint64_t v3;
  uint64_t v4;

  if (!qword_1EDB3F4D0)
  {
    sub_1DC08CBF0(255, &qword_1EDB3F478, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB2498], sub_1DC251B94, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB25A0]);
    sub_1DC4087D0();
    v0 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB2700];
    sub_1DC408854();
    v1 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB2798];
    v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB24B0];
    sub_1DC089DA4(255, &qword_1EDB3F418, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB24B0], MEMORY[0x1E0DB2438]);
    sub_1DC251BB0();
    sub_1DC08CBF0(255, &qword_1EDB3F4B8, MEMORY[0x1E0DB2690], sub_1DC113F14, MEMORY[0x1E0DB2630]);
    sub_1DC251C30();
    sub_1DC080808(&qword_1EDB3F4F0, v0, MEMORY[0x1E0DB26F0]);
    sub_1DC080808(&qword_1EDB3F520, v1, MEMORY[0x1E0DB2790]);
    sub_1DC251C98(&qword_1EDB3F410, &qword_1EDB3F418, v2);
    sub_1DC080808(&qword_1EDB3F500, (uint64_t (*)(uint64_t))sub_1DC251BB0, MEMORY[0x1E0DB2720]);
    sub_1DC251CE0();
    v3 = sub_1DC408788();
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1EDB3F4D0);
  }
}

uint64_t sub_1DC251B94()
{
  return sub_1DC080808(&qword_1EDB3F420, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB2498], MEMORY[0x1E0DB2490]);
}

void sub_1DC251BB0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB3F508)
  {
    sub_1DC4088A8();
    sub_1DC40889C();
    v0 = sub_1DC4087DC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB3F508);
  }
}

unint64_t sub_1DC251C30()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EDB3F470;
  if (!qword_1EDB3F470)
  {
    sub_1DC08CBF0(255, &qword_1EDB3F478, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB2498], sub_1DC251B94, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB25A0]);
    result = MEMORY[0x1DF0CAB8C](MEMORY[0x1E0DB25B8], v1);
    atomic_store(result, (unint64_t *)&qword_1EDB3F470);
  }
  return result;
}

uint64_t sub_1DC251C98(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    sub_1DC089DA4(255, a2, a3, MEMORY[0x1E0DB2438]);
    result = MEMORY[0x1DF0CAB8C](MEMORY[0x1E0DB2448], v5);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1DC251CE0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EDB3F4B0;
  if (!qword_1EDB3F4B0)
  {
    sub_1DC08CBF0(255, &qword_1EDB3F4B8, MEMORY[0x1E0DB2690], sub_1DC113F14, MEMORY[0x1E0DB2630]);
    result = MEMORY[0x1DF0CAB8C](MEMORY[0x1E0DB2640], v1);
    atomic_store(result, (unint64_t *)&qword_1EDB3F4B0);
  }
  return result;
}

uint64_t sub_1DC251D48(_QWORD *a1)
{
  uint64_t *v1;

  return sub_1DC24D784(a1, v1);
}

void sub_1DC251D60()
{
  uint64_t (*v0)(uint64_t);
  uint64_t (*v1)(uint64_t);
  uint64_t (*v2)(uint64_t);
  unint64_t v3;
  uint64_t v4;

  if (!qword_1EDB3F4D8)
  {
    sub_1DC08CBF0(255, &qword_1EDB3F488, MEMORY[0x1E0DB2538], sub_1DC251F28, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB25A0]);
    sub_1DC4087E8();
    v0 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB2730];
    sub_1DC408884();
    v1 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB27D0];
    v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB2550];
    sub_1DC089DA4(255, &qword_1EDB3F408, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB2550], MEMORY[0x1E0DB2438]);
    sub_1DC251BB0();
    sub_1DC08CBF0(255, &qword_1EDB3F4C8, MEMORY[0x1E0DB26E0], sub_1DC251F44, MEMORY[0x1E0DB2630]);
    sub_1DC251F60();
    sub_1DC080808(&qword_1EDB3F510, v0, MEMORY[0x1E0DB2728]);
    sub_1DC080808(&qword_1EDB3F528, v1, MEMORY[0x1E0DB27C8]);
    sub_1DC251C98(&qword_1EDB3F400, &qword_1EDB3F408, v2);
    sub_1DC080808(&qword_1EDB3F500, (uint64_t (*)(uint64_t))sub_1DC251BB0, MEMORY[0x1E0DB2720]);
    sub_1DC251FC8();
    v3 = sub_1DC408788();
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1EDB3F4D8);
  }
}

uint64_t sub_1DC251F28()
{
  return sub_1DC080808(&qword_1EDB3F448, MEMORY[0x1E0DB2538], MEMORY[0x1E0DB2530]);
}

uint64_t sub_1DC251F44()
{
  return sub_1DC080808(&qword_1EDB3F4E8, MEMORY[0x1E0DB26E0], MEMORY[0x1E0DB26D8]);
}

unint64_t sub_1DC251F60()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EDB3F480;
  if (!qword_1EDB3F480)
  {
    sub_1DC08CBF0(255, &qword_1EDB3F488, MEMORY[0x1E0DB2538], sub_1DC251F28, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB25A0]);
    result = MEMORY[0x1DF0CAB8C](MEMORY[0x1E0DB25B8], v1);
    atomic_store(result, (unint64_t *)&qword_1EDB3F480);
  }
  return result;
}

unint64_t sub_1DC251FC8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EDB3F4C0;
  if (!qword_1EDB3F4C0)
  {
    sub_1DC08CBF0(255, &qword_1EDB3F4C8, MEMORY[0x1E0DB26E0], sub_1DC251F44, MEMORY[0x1E0DB2630]);
    result = MEMORY[0x1DF0CAB8C](MEMORY[0x1E0DB2640], v1);
    atomic_store(result, (unint64_t *)&qword_1EDB3F4C0);
  }
  return result;
}

id sub_1DC25208C()
{
  void *v0;
  id result;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  objc_super v5;

  v5.receiver = v0;
  v5.super_class = (Class)swift_getObjectType();
  result = objc_msgSendSuper2(&v5, sel_accessibilityElements);
  if (result)
  {
    v2 = result;
    v3 = sub_1DC408CD4();

    v4 = v3;
    swift_bridgeObjectRetain();
    sub_1DC2522C8(&v4);
    swift_bridgeObjectRelease();
    return (id)v4;
  }
  return result;
}

uint64_t type metadata accessor for QuoteDetailColumnAccessibilityElement()
{
  return objc_opt_self();
}

uint64_t sub_1DC2522C8(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1DC35DDC0(v2);
  v3 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  result = sub_1DC252330(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_1DC252330(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char **v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  double v17;
  double v18;
  id v19;
  double v20;
  double v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  double v26;
  double v27;
  id v28;
  double v29;
  double v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _OWORD *v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  double v42;
  double v43;
  id v44;
  double v45;
  double v46;
  uint64_t v47;
  _OWORD *v48;
  __int128 v49;
  unint64_t v50;
  unint64_t v51;
  char *v52;
  char *v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  BOOL v65;
  unint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  BOOL v75;
  uint64_t v76;
  char v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  BOOL v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t *v96;
  char *v97;
  uint64_t v98;
  char *v99;
  unint64_t v100;
  char *v101;
  uint64_t v102;
  unint64_t v103;
  char *v104;
  uint64_t v105;
  unint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  unint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *__dst;
  uint64_t v122;
  _BYTE v123[32];
  _BYTE v124[32];
  _OWORD v125[2];
  id v126;

  v2 = v1;
  v3 = a1;
  v4 = a1[1];
  result = sub_1DC4099AC();
  if (result >= v4)
  {
    if (v4 < 0)
      goto LABEL_152;
    if (v4)
      return sub_1DC252C84(0, v4, 1, v3);
    return result;
  }
  if (v4 >= 0)
    v6 = v4;
  else
    v6 = v4 + 1;
  if (v4 < -1)
    goto LABEL_160;
  v114 = result;
  if (v4 < 2)
  {
    v9 = MEMORY[0x1E0DEE9D8];
    __dst = (char *)(MEMORY[0x1E0DEE9D8] + 32);
    if (v4 != 1)
    {
      v13 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
      v11 = (char *)MEMORY[0x1E0DEE9D8];
LABEL_118:
      v104 = v11;
      if (v13 >= 2)
      {
        v105 = *v3;
        do
        {
          v106 = v13 - 2;
          if (v13 < 2)
            goto LABEL_147;
          if (!v105)
            goto LABEL_159;
          v107 = v104;
          v108 = *(_QWORD *)&v104[16 * v106 + 32];
          v109 = *(_QWORD *)&v104[16 * v13 + 24];
          sub_1DC252E3C((char *)(v105 + 32 * v108), (char *)(v105 + 32 * *(_QWORD *)&v104[16 * v13 + 16]), v105 + 32 * v109, __dst);
          if (v2)
            break;
          if (v109 < v108)
            goto LABEL_148;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v107 = sub_1DC35DBF8((uint64_t)v107);
          if (v106 >= *((_QWORD *)v107 + 2))
            goto LABEL_149;
          v110 = &v107[16 * v106 + 32];
          *(_QWORD *)v110 = v108;
          *((_QWORD *)v110 + 1) = v109;
          v111 = *((_QWORD *)v107 + 2);
          if (v13 > v111)
            goto LABEL_150;
          memmove(&v107[16 * v13 + 16], &v107[16 * v13 + 32], 16 * (v111 - v13));
          v104 = v107;
          *((_QWORD *)v107 + 2) = v111 - 1;
          v13 = v111 - 1;
        }
        while (v111 > 2);
      }
LABEL_115:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v9 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v112 = MEMORY[0x1E0DEE9D8];
    v122 = v1;
  }
  else
  {
    v122 = v1;
    v7 = v6 >> 1;
    v8 = sub_1DC408D58();
    *(_QWORD *)(v8 + 16) = v7;
    v112 = v8;
    __dst = (char *)(v8 + 32);
  }
  v10 = 0;
  v11 = (char *)MEMORY[0x1E0DEE9D8];
  v12 = &selRef_scrollViewDidScroll_;
  while (1)
  {
    v115 = v4;
    v116 = v11;
    v14 = v10 + 1;
    v120 = v10;
    if (v10 + 1 < v4)
    {
      v15 = *v3;
      sub_1DC1B26C0(*v3 + 32 * v14, (uint64_t)v125);
      v113 = v15;
      sub_1DC1B26C0(v15 + 32 * v10, (uint64_t)v124);
      sub_1DC1B26C0((uint64_t)v125, (uint64_t)v123);
      sub_1DC253284();
      if (swift_dynamicCast())
      {
        v16 = v126;
        objc_msgSend(v126, v12[480]);
        v18 = v17;

      }
      else
      {
        v18 = 0.0;
      }
      v14 = v115;
      sub_1DC1B26C0((uint64_t)v124, (uint64_t)v123);
      if (swift_dynamicCast())
      {
        v19 = v126;
        objc_msgSend(v126, v12[480]);
        v21 = v20;

      }
      else
      {
        v21 = 0.0;
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v124);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v125);
      v22 = v10;
      v23 = v10 + 2;
      if (v23 < v115)
      {
        v24 = v15 + 32 * v22 + 32;
        while (1)
        {
          sub_1DC1B26C0(v24 + 32, (uint64_t)v125);
          sub_1DC1B26C0(v24, (uint64_t)v124);
          sub_1DC1B26C0((uint64_t)v125, (uint64_t)v123);
          if (swift_dynamicCast())
          {
            v25 = v126;
            objc_msgSend(v126, v12[480]);
            v27 = v26;

          }
          else
          {
            v27 = 0.0;
          }
          sub_1DC1B26C0((uint64_t)v124, (uint64_t)v123);
          if (swift_dynamicCast())
          {
            v28 = v126;
            objc_msgSend(v126, v12[480]);
            v30 = v29;

          }
          else
          {
            v30 = 0.0;
          }
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v124);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v125);
          if (v18 < v21 == v27 >= v30)
            break;
          v24 += 32;
          if (v115 == ++v23)
            goto LABEL_35;
        }
      }
      v14 = v23;
LABEL_35:
      v10 = v120;
      if (v18 < v21)
      {
        if (v14 < v120)
          goto LABEL_153;
        if (v120 < v14)
        {
          v31 = 32 * v14 - 32;
          v32 = 32 * v120;
          v117 = v14;
          v33 = v14;
          v34 = v120;
          do
          {
            if (v34 != --v33)
            {
              if (!v113)
                goto LABEL_158;
              v35 = (_OWORD *)(v113 + v32);
              sub_1DC0FA0E4((_OWORD *)(v113 + v32), v125);
              v36 = *(_OWORD *)(v113 + v31 + 16);
              *v35 = *(_OWORD *)(v113 + v31);
              v35[1] = v36;
              sub_1DC0FA0E4(v125, (_OWORD *)(v113 + v31));
            }
            ++v34;
            v31 -= 32;
            v32 += 32;
          }
          while (v34 < v33);
          v12 = &selRef_scrollViewDidScroll_;
          v14 = v117;
          v10 = v120;
        }
      }
    }
    if (v14 >= v115)
      goto LABEL_66;
    if (__OFSUB__(v14, v10))
      goto LABEL_151;
    if (v14 - v10 >= v114)
      goto LABEL_66;
    if (__OFADD__(v10, v114))
      goto LABEL_154;
    v37 = v115;
    if (v10 + v114 < v115)
      v37 = v10 + v114;
    if (v37 < v10)
      break;
    if (v14 != v37)
    {
      v38 = 32 * v14 - 32;
      v118 = v37;
      do
      {
        v39 = v38;
        do
        {
          v40 = *v3 + v39;
          sub_1DC1B26C0(v40 + 32, (uint64_t)v125);
          sub_1DC1B26C0(v40, (uint64_t)v124);
          sub_1DC1B26C0((uint64_t)v125, (uint64_t)v123);
          sub_1DC253284();
          if (swift_dynamicCast())
          {
            v41 = v126;
            objc_msgSend(v126, v12[480]);
            v43 = v42;

          }
          else
          {
            v43 = 0.0;
          }
          sub_1DC1B26C0((uint64_t)v124, (uint64_t)v123);
          if (swift_dynamicCast())
          {
            v44 = v126;
            objc_msgSend(v126, v12[480]);
            v46 = v45;

          }
          else
          {
            v46 = 0.0;
          }
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v124);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v125);
          if (v43 >= v46)
            break;
          v47 = *v3;
          if (!*v3)
            goto LABEL_156;
          v48 = (_OWORD *)(v47 + v39);
          sub_1DC0FA0E4((_OWORD *)(v47 + v39 + 32), v125);
          v49 = v48[1];
          v48[2] = *v48;
          v48[3] = v49;
          sub_1DC0FA0E4(v125, v48);
          v39 -= 32;
          ++v10;
        }
        while (v14 != v10);
        ++v14;
        v38 += 32;
        v10 = v120;
      }
      while (v14 != v118);
      v14 = v118;
    }
LABEL_66:
    if (v14 < v10)
      goto LABEL_146;
    v119 = v14;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
      v11 = v116;
    else
      v11 = sub_1DC35D898(0, *((_QWORD *)v116 + 2) + 1, 1, v116);
    v51 = *((_QWORD *)v11 + 2);
    v50 = *((_QWORD *)v11 + 3);
    v13 = v51 + 1;
    if (v51 >= v50 >> 1)
      v11 = sub_1DC35D898((char *)(v50 > 1), v51 + 1, 1, v11);
    *((_QWORD *)v11 + 2) = v13;
    v52 = v11 + 32;
    v53 = &v11[16 * v51 + 32];
    *(_QWORD *)v53 = v10;
    *((_QWORD *)v53 + 1) = v119;
    if (v51)
    {
      while (1)
      {
        v54 = v13 - 1;
        if (v13 >= 4)
        {
          v59 = &v52[16 * v13];
          v60 = *((_QWORD *)v59 - 8);
          v61 = *((_QWORD *)v59 - 7);
          v65 = __OFSUB__(v61, v60);
          v62 = v61 - v60;
          if (v65)
            goto LABEL_135;
          v64 = *((_QWORD *)v59 - 6);
          v63 = *((_QWORD *)v59 - 5);
          v65 = __OFSUB__(v63, v64);
          v57 = v63 - v64;
          v58 = v65;
          if (v65)
            goto LABEL_136;
          v66 = v13 - 2;
          v67 = &v52[16 * v13 - 32];
          v69 = *(_QWORD *)v67;
          v68 = *((_QWORD *)v67 + 1);
          v65 = __OFSUB__(v68, v69);
          v70 = v68 - v69;
          if (v65)
            goto LABEL_138;
          v65 = __OFADD__(v57, v70);
          v71 = v57 + v70;
          if (v65)
            goto LABEL_141;
          if (v71 >= v62)
          {
            v89 = &v52[16 * v54];
            v91 = *(_QWORD *)v89;
            v90 = *((_QWORD *)v89 + 1);
            v65 = __OFSUB__(v90, v91);
            v92 = v90 - v91;
            if (v65)
              goto LABEL_145;
            v82 = v57 < v92;
            goto LABEL_103;
          }
        }
        else
        {
          if (v13 != 3)
          {
            v83 = *((_QWORD *)v11 + 4);
            v84 = *((_QWORD *)v11 + 5);
            v65 = __OFSUB__(v84, v83);
            v76 = v84 - v83;
            v77 = v65;
            goto LABEL_97;
          }
          v56 = *((_QWORD *)v11 + 4);
          v55 = *((_QWORD *)v11 + 5);
          v65 = __OFSUB__(v55, v56);
          v57 = v55 - v56;
          v58 = v65;
        }
        if ((v58 & 1) != 0)
          goto LABEL_137;
        v66 = v13 - 2;
        v72 = &v52[16 * v13 - 32];
        v74 = *(_QWORD *)v72;
        v73 = *((_QWORD *)v72 + 1);
        v75 = __OFSUB__(v73, v74);
        v76 = v73 - v74;
        v77 = v75;
        if (v75)
          goto LABEL_140;
        v78 = &v52[16 * v54];
        v80 = *(_QWORD *)v78;
        v79 = *((_QWORD *)v78 + 1);
        v65 = __OFSUB__(v79, v80);
        v81 = v79 - v80;
        if (v65)
          goto LABEL_143;
        if (__OFADD__(v76, v81))
          goto LABEL_144;
        if (v76 + v81 >= v57)
        {
          v82 = v57 < v81;
LABEL_103:
          if (v82)
            v54 = v66;
          goto LABEL_105;
        }
LABEL_97:
        if ((v77 & 1) != 0)
          goto LABEL_139;
        v85 = &v52[16 * v54];
        v87 = *(_QWORD *)v85;
        v86 = *((_QWORD *)v85 + 1);
        v65 = __OFSUB__(v86, v87);
        v88 = v86 - v87;
        if (v65)
          goto LABEL_142;
        if (v88 < v76)
          goto LABEL_15;
LABEL_105:
        v93 = v54 - 1;
        if (v54 - 1 >= v13)
        {
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
LABEL_154:
          __break(1u);
          goto LABEL_155;
        }
        v94 = *v3;
        if (!*v3)
          goto LABEL_157;
        v95 = v11;
        v96 = v3;
        v97 = &v52[16 * v93];
        v98 = *(_QWORD *)v97;
        v99 = v52;
        v100 = v54;
        v101 = &v52[16 * v54];
        v102 = *((_QWORD *)v101 + 1);
        sub_1DC252E3C((char *)(v94 + 32 * *(_QWORD *)v97), (char *)(v94 + 32 * *(_QWORD *)v101), v94 + 32 * v102, __dst);
        if (v122)
        {
          v9 = v112;
          goto LABEL_115;
        }
        if (v102 < v98)
          goto LABEL_132;
        if (v100 > *((_QWORD *)v95 + 2))
          goto LABEL_133;
        *(_QWORD *)v97 = v98;
        *(_QWORD *)&v99[16 * v93 + 8] = v102;
        v103 = *((_QWORD *)v95 + 2);
        if (v100 >= v103)
          goto LABEL_134;
        v11 = v95;
        v13 = v103 - 1;
        memmove(v101, v101 + 16, 16 * (v103 - 1 - v100));
        v52 = v99;
        *((_QWORD *)v95 + 2) = v103 - 1;
        v3 = v96;
        v12 = &selRef_scrollViewDidScroll_;
        if (v103 <= 2)
          goto LABEL_15;
      }
    }
    v13 = 1;
LABEL_15:
    v4 = v3[1];
    v10 = v119;
    if (v119 >= v4)
    {
      v2 = v122;
      v9 = v112;
      goto LABEL_118;
    }
  }
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  result = sub_1DC40982C();
  __break(1u);
  return result;
}

uint64_t sub_1DC252C84(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  double v10;
  double v11;
  id v12;
  double v13;
  double v14;
  uint64_t v15;
  _OWORD *v16;
  __int128 v17;
  uint64_t v19;
  uint64_t v20;
  _BYTE v21[32];
  _BYTE v22[32];
  _OWORD v23[2];
  id v24;

  v19 = result;
  if (a3 != a2)
  {
    v5 = a3;
    v6 = 32 * a3 - 32;
LABEL_5:
    v7 = v19;
    v20 = v6;
    while (1)
    {
      v8 = *a4 + v6;
      sub_1DC1B26C0(v8 + 32, (uint64_t)v23);
      sub_1DC1B26C0(v8, (uint64_t)v22);
      sub_1DC1B26C0((uint64_t)v23, (uint64_t)v21);
      sub_1DC253284();
      if (swift_dynamicCast())
      {
        v9 = v24;
        objc_msgSend(v24, sel_accessibilityFrame);
        v11 = v10;

      }
      else
      {
        v11 = 0.0;
      }
      sub_1DC1B26C0((uint64_t)v22, (uint64_t)v21);
      if (swift_dynamicCast())
      {
        v12 = v24;
        objc_msgSend(v24, sel_accessibilityFrame);
        v14 = v13;

      }
      else
      {
        v14 = 0.0;
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
      result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
      if (v11 >= v14)
      {
LABEL_4:
        ++v5;
        v6 = v20 + 32;
        if (v5 == a2)
          return result;
        goto LABEL_5;
      }
      v15 = *a4;
      if (!*a4)
        break;
      v16 = (_OWORD *)(v15 + v6);
      sub_1DC0FA0E4((_OWORD *)(v15 + v6 + 32), v23);
      v17 = v16[1];
      v16[2] = *v16;
      v16[3] = v17;
      result = (uint64_t)sub_1DC0FA0E4(v23, v16);
      v6 -= 32;
      if (v5 == ++v7)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC252E3C(char *__src, char *a2, unint64_t a3, char *__dst)
{
  char *v4;
  char *v6;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  double v15;
  double v16;
  double v17;
  double v18;
  char *v19;
  unint64_t v20;
  __int128 v21;
  char *v22;
  __int128 v23;
  char *v24;
  char *v25;
  __int128 v26;
  char *v27;
  double v28;
  double v29;
  double v30;
  double v31;
  char *v32;
  unint64_t v33;
  __int128 v34;
  uint64_t result;
  id v36;
  _BYTE v37[32];
  _BYTE v38[32];
  _BYTE v39[32];
  char *v40;
  char *v41;
  char *v42;

  v4 = __dst;
  v6 = a2;
  v8 = a2 - __src;
  v9 = a2 - __src + 31;
  if (a2 - __src >= 0)
    v9 = a2 - __src;
  v10 = v9 >> 5;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 31;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 5;
  v42 = __src;
  v41 = __dst;
  if (v10 >= v12 >> 5)
  {
    if (v11 >= -31)
    {
      if (__dst != a2 || &a2[32 * v13] <= __dst)
        memmove(__dst, a2, 32 * v13);
      v24 = &v4[32 * v13];
      v40 = v24;
      v42 = v6;
      if (__src < v6 && v11 >= 32)
      {
        v25 = (char *)(a3 - 32);
        while (1)
        {
          sub_1DC1B26C0((uint64_t)(v24 - 32), (uint64_t)v39);
          v27 = v6 - 32;
          sub_1DC1B26C0((uint64_t)(v6 - 32), (uint64_t)v38);
          sub_1DC1B26C0((uint64_t)v39, (uint64_t)v37);
          sub_1DC253284();
          if (swift_dynamicCast())
          {
            objc_msgSend(v36, sel_accessibilityFrame);
            v29 = v28;

          }
          else
          {
            v29 = 0.0;
          }
          sub_1DC1B26C0((uint64_t)v38, (uint64_t)v37);
          if (swift_dynamicCast())
          {
            objc_msgSend(v36, sel_accessibilityFrame);
            v31 = v30;

          }
          else
          {
            v31 = 0.0;
          }
          v32 = v25 + 32;
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v39);
          if (v29 >= v31)
          {
            v33 = (unint64_t)v40;
            v24 = v40 - 32;
            v40 -= 32;
            if ((unint64_t)v32 < v33 || (unint64_t)v25 >= v33 || v32 != (char *)v33)
            {
              v34 = *(_OWORD *)(v33 - 16);
              *(_OWORD *)v25 = *(_OWORD *)v24;
              *((_OWORD *)v25 + 1) = v34;
            }
            v27 = v6;
            if (v24 <= v4)
              goto LABEL_56;
          }
          else
          {
            if (v32 != v6 || v25 >= v6)
            {
              v26 = *((_OWORD *)v6 - 1);
              *(_OWORD *)v25 = *(_OWORD *)v27;
              *((_OWORD *)v25 + 1) = v26;
            }
            v42 -= 32;
            v24 = v40;
            if (v40 <= v4)
              goto LABEL_56;
          }
          v25 -= 32;
          v6 = v27;
          if (v27 <= __src)
            goto LABEL_56;
        }
      }
      goto LABEL_56;
    }
  }
  else if (v8 >= -31)
  {
    if (__dst != __src || &__src[32 * v10] <= __dst)
      memmove(__dst, __src, 32 * v10);
    v14 = (unint64_t)&v4[32 * v10];
    v40 = (char *)v14;
    if ((unint64_t)v6 < a3 && v8 >= 32)
    {
      do
      {
        sub_1DC1B26C0((uint64_t)v6, (uint64_t)v39);
        sub_1DC1B26C0((uint64_t)v4, (uint64_t)v38);
        sub_1DC1B26C0((uint64_t)v39, (uint64_t)v37);
        sub_1DC253284();
        if (swift_dynamicCast())
        {
          objc_msgSend(v36, sel_accessibilityFrame);
          v16 = v15;

        }
        else
        {
          v16 = 0.0;
        }
        sub_1DC1B26C0((uint64_t)v38, (uint64_t)v37);
        if (swift_dynamicCast())
        {
          objc_msgSend(v36, sel_accessibilityFrame);
          v18 = v17;

        }
        else
        {
          v18 = 0.0;
        }
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v39);
        v19 = v42;
        if (v16 >= v18)
        {
          v22 = v41 + 32;
          if (v42 != v41 || v42 >= v22)
          {
            v23 = *((_OWORD *)v41 + 1);
            *(_OWORD *)v42 = *(_OWORD *)v41;
            *((_OWORD *)v19 + 1) = v23;
          }
          v41 = v22;
          v20 = (unint64_t)v6;
        }
        else
        {
          v20 = (unint64_t)(v6 + 32);
          if (v42 >= v6 && (unint64_t)v42 < v20 && v42 == v6)
          {
            v19 = v6;
          }
          else
          {
            v21 = *((_OWORD *)v6 + 1);
            *(_OWORD *)v42 = *(_OWORD *)v6;
            *((_OWORD *)v19 + 1) = v21;
          }
        }
        v42 = v19 + 32;
        v4 = v41;
        if ((unint64_t)v41 >= v14)
          break;
        v6 = (char *)v20;
      }
      while (v20 < a3);
    }
LABEL_56:
    sub_1DC35DA38((void **)&v42, (const void **)&v41, &v40);
    return 1;
  }
  result = sub_1DC40988C();
  __break(1u);
  return result;
}

unint64_t sub_1DC253284()
{
  unint64_t result;

  result = qword_1EDB3F9D0;
  if (!qword_1EDB3F9D0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EDB3F9D0);
  }
  return result;
}

uint64_t sub_1DC2532C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  char *v12;
  id v13;
  unsigned int v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  const char *v19;
  uint64_t v20;
  char *v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  char *v28;

  v1 = sub_1DC403BD4();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC089DA4(0, (unint64_t *)&qword_1EDB29AA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D62448], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v27 - v6;
  v8 = sub_1DC403EB0();
  v9 = *(_QWORD *)(v8 - 8);
  *(_QWORD *)&v10 = MEMORY[0x1E0C80A78](v8).n128_u64[0];
  v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = objc_msgSend(*(id *)(v0 + 56), sel_cachedSubscription, v10);
  v14 = objc_msgSend(v13, sel_isPaidBundleViaOfferActivated);

  if (v14)
  {
    if (qword_1F034B128 != -1)
      swift_once();
    v15 = sub_1DC403F64();
    __swift_project_value_buffer(v15, (uint64_t)qword_1F0368BF0);
    v16 = sub_1DC403F4C();
    v17 = sub_1DC408FE0();
    if (!os_log_type_enabled(v16, v17))
      goto LABEL_12;
    v18 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v18 = 0;
    v19 = "isPaidBundleViaOfferEligible: isPaidBundleViaOfferActivated = true. Not eligible.";
LABEL_11:
    _os_log_impl(&dword_1DC07D000, v16, v17, v19, v18, 2u);
    MEMORY[0x1DF0CAC88](v18, -1, -1);
LABEL_12:

    return 0;
  }
  v28 = v12;
  swift_getObjectType();
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E0D61768], v1);
  sub_1DC403CB8();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_1DC2328B8((uint64_t)v7);
    if (qword_1F034B128 != -1)
      swift_once();
    v20 = sub_1DC403F64();
    __swift_project_value_buffer(v20, (uint64_t)qword_1F0368BF0);
    v16 = sub_1DC403F4C();
    v17 = sub_1DC408FE0();
    if (!os_log_type_enabled(v16, v17))
      goto LABEL_12;
    v18 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v18 = 0;
    v19 = "isPaidBundleViaOfferEligible: no cached best offer found. Not eligible.";
    goto LABEL_11;
  }
  v22 = v28;
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v28, v7, v8);
  if ((sub_1DC403E74() & 1) == 0)
  {
    if (qword_1F034B128 != -1)
      swift_once();
    v23 = sub_1DC403F64();
    __swift_project_value_buffer(v23, (uint64_t)qword_1F0368BF0);
    v24 = sub_1DC403F4C();
    v25 = sub_1DC408FE0();
    if (os_log_type_enabled(v24, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v26 = 0;
      _os_log_impl(&dword_1DC07D000, v24, v25, "isPaidBundleViaOfferEligible: isPaidBundleViaOffer = false. Not eligible.", v26, 2u);
      MEMORY[0x1DF0CAC88](v26, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v9 + 8))(v22, v8);
    return 0;
  }
  (*(void (**)(char *, uint64_t))(v9 + 8))(v22, v8);
  return 1;
}

uint64_t sub_1DC25369C()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;

  if (objc_msgSend(*(id *)(v0 + 56), sel_validatedCachedSubscription))
  {
    sub_1DC089DA4(0, (unint64_t *)&unk_1F034FE80, (uint64_t (*)(uint64_t))sub_1DC253F10, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    sub_1DC402D58();
  }
  else
  {
    sub_1DC089DA4(0, (unint64_t *)&unk_1F034FE80, (uint64_t (*)(uint64_t))sub_1DC253F10, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    sub_1DC402DA0();
  }
  swift_getObjectType();
  sub_1DC403CC4();
  v1 = (void *)sub_1DC402C80();
  sub_1DC402D04();
  swift_release();

  v2 = (void *)sub_1DC402C80();
  sub_1DC402D88();
  swift_release();

  sub_1DC402DE8();
  swift_release();
  swift_release();
  v3 = (void *)sub_1DC402C80();
  v4 = sub_1DC402D1C();
  swift_release();

  return v4;
}

uint64_t sub_1DC25384C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1DC403E74();
  *a1 = result & 1;
  return result;
}

void sub_1DC253888(void *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v4;
  id v5;
  id v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;

  if (qword_1F034B128 != -1)
    swift_once();
  v4 = sub_1DC403F64();
  __swift_project_value_buffer(v4, (uint64_t)qword_1F0368BF0);
  v5 = a1;
  v6 = a1;
  v7 = sub_1DC403F4C();
  v8 = sub_1DC408FC8();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = swift_slowAlloc();
    v13 = v10;
    *(_DWORD *)v9 = 136315138;
    swift_getErrorValue();
    v11 = sub_1DC409A78();
    sub_1DC2A9C74(v11, v12, &v13);
    sub_1DC4095B0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1DC07D000, v7, v8, "offerManager refresh() failed: %s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1DF0CAC88](v10, -1, -1);
    MEMORY[0x1DF0CAC88](v9, -1, -1);
  }
  else
  {

  }
  *a2 = 0;
}

void sub_1DC253A68(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  int v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  char v11;
  unsigned __int8 v12;

  v3 = *(unsigned __int8 *)(a1 + 8);
  v4 = qword_1F034B128;
  v5 = *(id *)a1;
  if (v4 != -1)
    swift_once();
  v6 = sub_1DC403F64();
  __swift_project_value_buffer(v6, (uint64_t)qword_1F0368BF0);
  v7 = v5;
  v8 = sub_1DC403F4C();
  v9 = sub_1DC408FE0();
  if (!os_log_type_enabled(v8, v9))
  {

    if (!v3)
      goto LABEL_5;
LABEL_7:
    v12 = objc_msgSend(v7, sel_isPaidBundleViaOfferActivated);

    v11 = v12 ^ 1;
    goto LABEL_8;
  }
  v10 = swift_slowAlloc();
  *(_DWORD *)v10 = 67109376;
  sub_1DC4095B0();
  *(_WORD *)(v10 + 8) = 1024;
  objc_msgSend(v7, sel_isPaidBundleViaOfferActivated);
  sub_1DC4095B0();

  _os_log_impl(&dword_1DC07D000, v8, v9, "isPaidBundleViaOfferPromise: isPaidBundleViaOffer %{BOOL}d isPaidBundleViaOfferActivated %{BOOL}d", (uint8_t *)v10, 0xEu);
  MEMORY[0x1DF0CAC88](v10, -1, -1);

  if (v3)
    goto LABEL_7;
LABEL_5:

  v11 = 0;
LABEL_8:
  *a2 = v11;
}

uint64_t sub_1DC253C08()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  if (objc_msgSend(*(id *)(v0 + 56), sel_validatedCachedSubscription))
  {
    sub_1DC089DA4(0, (unint64_t *)&unk_1F034FE80, (uint64_t (*)(uint64_t))sub_1DC253F10, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    sub_1DC402D58();
  }
  else
  {
    sub_1DC089DA4(0, (unint64_t *)&unk_1F034FE80, (uint64_t (*)(uint64_t))sub_1DC253F10, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    sub_1DC402DA0();
  }
  v1 = (void *)sub_1DC402C80();
  v2 = sub_1DC402D04();
  swift_release();

  return v2;
}

id sub_1DC253D04@<X0>(id *a1@<X0>, _BYTE *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_isPaidBundleViaOfferActivated);
  *a2 = (_BYTE)result;
  return result;
}

void sub_1DC253D3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  _QWORD v12[6];

  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a1;
  *(_QWORD *)(v8 + 24) = a2;
  v9 = *(void **)(a5 + 56);
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = sub_1DC253F70;
  *(_QWORD *)(v10 + 24) = v8;
  v12[4] = sub_1DC080634;
  v12[5] = v10;
  v12[0] = MEMORY[0x1E0C809B0];
  v12[1] = 1107296256;
  v12[2] = sub_1DC149854;
  v12[3] = &block_descriptor_22;
  v11 = _Block_copy(v12);
  swift_retain();
  swift_release();
  objc_msgSend(v9, sel_refreshBundleSubscriptionWithCachePolicy_completion_, 1, v11);
  _Block_release(v11);
}

uint64_t sub_1DC253E28()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1DC253E5C()
{
  uint64_t v0;

  __swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)v0 + 16), *(_QWORD *)(*(_QWORD *)v0 + 40));
  return sub_1DC400C28() & 1;
}

uint64_t sub_1DC253EA4()
{
  return sub_1DC2532C0() & 1;
}

uint64_t sub_1DC253EC8()
{
  return sub_1DC25369C();
}

uint64_t sub_1DC253EE8()
{
  return sub_1DC253C08();
}

void sub_1DC253F08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_1DC253D3C(a1, a2, a3, a4, v4);
}

unint64_t sub_1DC253F10()
{
  unint64_t result;

  result = qword_1EDB41CF8;
  if (!qword_1EDB41CF8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EDB41CF8);
  }
  return result;
}

uint64_t sub_1DC253F4C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DC253F70(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t *);
  uint64_t v4;

  v2 = *(uint64_t (**)(uint64_t *))(v1 + 16);
  v4 = a1;
  return v2(&v4);
}

BOOL sub_1DC253FA4()
{
  objc_opt_self();
  return swift_dynamicCastObjCClass() != 0;
}

uint64_t sub_1DC253FE0(uint64_t a1, void *a2)
{
  uint64_t (*v2)(void);
  id v3;
  char v4;

  v2 = *(uint64_t (**)(void))(a1 + 32);
  v3 = a2;
  v4 = v2();

  return v4 & 1;
}

uint64_t sub_1DC25401C(void *a1, void *a2)
{
  id v4;
  id v5;
  _QWORD *v6;
  uint64_t v7;
  id v8;
  id v10;

  sub_1DC0821D4(0, &qword_1F034FED8);
  v10 = a1;
  v4 = a1;
  sub_1DC16BD54();
  if (swift_dynamicCast())
  {
    swift_bridgeObjectRelease();
    sub_1DC409730();
    sub_1DC408B48();
    sub_1DC409B38();
    sub_1DC408B48();
    swift_bridgeObjectRelease();
    sub_1DC408B48();
    v5 = objc_msgSend(a2, sel_description);
    sub_1DC408A4C();

    sub_1DC408B48();
    swift_bridgeObjectRelease();
    sub_1DC254D5C();
    swift_allocError();
    *v6 = 0;
    v6[1] = 0xE000000000000000;
    sub_1DC254D08(0, &qword_1F034FEE8, &qword_1F034FED8);
    swift_allocObject();
    v7 = sub_1DC402D4C();

  }
  else
  {

    sub_1DC254D08(0, &qword_1F034FEE8, &qword_1F034FED8);
    swift_allocObject();
    v8 = a1;
    return sub_1DC402D4C();
  }
  return v7;
}

void sub_1DC25425C(void *a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  void *v7;
  id v8;
  uint64_t v9;
  id v10;
  void *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void *v15;
  void *v16;
  __int128 v17;
  __int128 v18;

  v7 = (void *)sub_1DC408A1C();
  v8 = objc_msgSend(a1, sel_objectForKey_, v7);

  if (v8)
  {
    sub_1DC409634();
    swift_unknownObjectRelease();
    sub_1DC0FA0E4(&v17, &v18);
    sub_1DC0821D4(0, &qword_1F034FED0);
    v9 = swift_dynamicCast();
    MEMORY[0x1E0C80A78](v9);
    sub_1DC0821D4(0, &qword_1F034FED8);
    sub_1DC402E0C();
    *(_QWORD *)(swift_allocObject() + 16) = v3;
    v10 = v3;
    v11 = (void *)sub_1DC402C80();
    sub_1DC402CF8();
    swift_release();
    swift_release();

    v12 = swift_allocObject();
    *(_QWORD *)(v12 + 16) = a2;
    *(_QWORD *)(v12 + 24) = a3;
    swift_retain();
    v13 = (void *)sub_1DC402C80();
    sub_1DC402D04();
    swift_release();
    swift_release();

    v14 = swift_allocObject();
    *(_QWORD *)(v14 + 16) = a2;
    *(_QWORD *)(v14 + 24) = a3;
    swift_retain();
    v15 = (void *)sub_1DC402C80();
    sub_1DC402D34();

    swift_release();
    swift_release();
    swift_release();

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1DC2544C0(void *a1)
{
  void *v2;
  id v3;
  id v4;
  void *v5;
  uint64_t v6;

  sub_1DC254D08(0, &qword_1F034FEE0, (unint64_t *)&qword_1EDB3F8B0);
  sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3F8D0);
  v2 = (void *)sub_1DC409148();
  *(_QWORD *)(swift_allocObject() + 16) = a1;
  sub_1DC0821D4(0, &qword_1F034FED8);
  v3 = a1;
  sub_1DC402D28();

  swift_release();
  *(_QWORD *)(swift_allocObject() + 16) = v3;
  v4 = v3;
  v5 = (void *)sub_1DC402C80();
  v6 = sub_1DC402D7C();
  swift_release();
  swift_release();

  return v6;
}

uint64_t sub_1DC254604(void **a1, void *a2)
{
  void *v3;
  _QWORD *v4;
  uint64_t v5;
  id v6;
  id v7;
  void *v8;
  uint64_t v9;

  v3 = *a1;
  sub_1DC402E0C();
  v4 = (_QWORD *)swift_allocObject();
  v4[2] = a2;
  v4[3] = v3;
  v4[4] = 20;
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = sub_1DC254BBC;
  *(_QWORD *)(v5 + 24) = v4;
  v6 = a2;
  v7 = v3;
  v8 = (void *)sub_1DC402C80();
  v9 = sub_1DC402CF8();
  swift_release();
  swift_release();

  return v9;
}

uint64_t sub_1DC254700(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = a2;
  *(_QWORD *)(v5 + 24) = a3;
  swift_retain();
  sub_1DC4024C4();
  return swift_release();
}

uint64_t sub_1DC2547F0()
{
  void *v0;
  uint64_t v1;

  sub_1DC402E0C();
  v0 = (void *)sub_1DC402C80();
  v1 = sub_1DC402CF8();
  swift_release();

  return v1;
}

uint64_t sub_1DC25487C(uint64_t result, void *a2, uint64_t a3)
{
  uint64_t v3;
  void *v5;
  _QWORD *v6;
  uint64_t v7;
  id v8;
  id v9;
  void *v10;
  uint64_t v11;

  v3 = a3 - 1;
  if (__OFSUB__(a3, 1))
  {
    __break(1u);
  }
  else if (a3 == 1)
  {
    sub_1DC132504();
    swift_allocObject();
    return sub_1DC402D58();
  }
  else
  {
    v5 = (void *)result;
    MEMORY[0x1E0C80A78](result);
    sub_1DC402E0C();
    v6 = (_QWORD *)swift_allocObject();
    v6[2] = v5;
    v6[3] = a2;
    v6[4] = v3;
    v7 = swift_allocObject();
    *(_QWORD *)(v7 + 16) = sub_1DC254DCC;
    *(_QWORD *)(v7 + 24) = v6;
    v8 = v5;
    v9 = a2;
    v10 = (void *)sub_1DC402C80();
    v11 = sub_1DC402CF8();
    swift_release();
    swift_release();

    return v11;
  }
  return result;
}

uint64_t sub_1DC2549B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void (*v7)(char *, uint64_t);
  uint64_t v8;
  _QWORD v10[2];

  v0 = sub_1DC407294();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v10 - v5;
  sub_1DC407288();
  MEMORY[0x1DF0C7B14](v3, 5.0);
  v7 = *(void (**)(char *, uint64_t))(v1 + 8);
  v7(v3, v0);
  v8 = sub_1DC402C5C();
  v7(v6, v0);
  return v8;
}

uint64_t sub_1DC254A7C(void *a1)
{
  objc_msgSend(a1, sel_keyboardOrActionSwitchToNextViewController);
  sub_1DC132504();
  swift_allocObject();
  return sub_1DC402D58();
}

uint64_t sub_1DC254AC4()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_1DC254AE8()
{
  uint64_t v0;

  return sub_1DC2544C0(*(void **)(v0 + 16));
}

uint64_t sub_1DC254B00()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1DC254B24(void **a1)
{
  uint64_t v1;

  return sub_1DC254604(a1, *(void **)(v1 + 16));
}

uint64_t sub_1DC254B3C(uint64_t a1)
{
  uint64_t v1;

  return sub_1DC254700(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1DC254B54()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DC254B78()
{
  return sub_1DC2547F0();
}

uint64_t sub_1DC254B90()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1DC254BBC()
{
  uint64_t v0;

  return sub_1DC25487C(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_1DC254BC8(uint64_t a1)
{
  uint64_t v1;

  return sub_1DC20B06C(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_1DC254BE0()
{
  uint64_t v0;

  return sub_1DC254A7C(*(void **)(v0 + 16));
}

uint64_t sub_1DC254BF8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  void *v4;
  id v5;
  uint64_t result;
  _QWORD v7[6];

  v7[4] = sub_1DC253FA4;
  v7[5] = 0;
  v7[0] = MEMORY[0x1E0C809B0];
  v7[1] = 1107296256;
  v7[2] = sub_1DC253FE0;
  v7[3] = &block_descriptor_23;
  v4 = _Block_copy(v7);
  swift_release();
  v5 = SUFirstViewControllerPassing(a1, 1, v4);
  _Block_release(v4);
  result = swift_isEscapingClosureAtFileLocation();
  if ((result & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    objc_opt_self();
    result = swift_dynamicCastObjCClass();
    if (!result)
    {

      result = 0;
    }
    *a2 = result;
  }
  return result;
}

uint64_t sub_1DC254CE8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1DC254BF8(*(void **)(v1 + 16), a1);
}

uint64_t sub_1DC254CF0(void *a1)
{
  uint64_t v1;

  return sub_1DC25401C(a1, *(void **)(v1 + 16));
}

void sub_1DC254D08(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    sub_1DC0821D4(255, a3);
    v4 = sub_1DC402DAC();
    if (!v5)
      atomic_store(v4, a2);
  }
}

unint64_t sub_1DC254D5C()
{
  unint64_t result;

  result = qword_1F034FEF0;
  if (!qword_1F034FEF0)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC40EB88, &_s12PromiseErrorON);
    atomic_store(result, (unint64_t *)&qword_1F034FEF0);
  }
  return result;
}

uint64_t sub_1DC254DB8(uint64_t a1)
{
  return sub_1DC254BC8(a1);
}

uint64_t sub_1DC254DD4()
{
  return sub_1DC254B78();
}

uint64_t sub_1DC254DE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  double *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  id v24;
  void *v25;
  char *v26;
  id v27;
  char *v28;
  id v29;
  char *v30;
  id v31;
  uint64_t ObjCClassFromMetadata;
  id v33;
  void *v34;
  uint64_t v36;
  uint64_t v37;
  _OWORD v38[3];
  uint64_t v39;

  v36 = a4;
  v37 = a3;
  v5 = sub_1DC400280();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1DC406040();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for StockSearchSectionHeaderViewLayoutAttributes();
  MEMORY[0x1E0C80A78](v13);
  v15 = (double *)((char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = type metadata accessor for StockSearchLayoutSectionDescriptor();
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC157D60();
  sub_1DC405314();
  v19 = *((_OWORD *)v18 + 1);
  v38[0] = *(_OWORD *)v18;
  v38[1] = v19;
  v38[2] = *((_OWORD *)v18 + 2);
  v39 = *((_QWORD *)v18 + 6);
  sub_1DC21AFC4();
  sub_1DC21B998((uint64_t)&v18[*(int *)(v20 + 48)], (uint64_t)v15);
  sub_1DC2552E8();
  (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x1E0DBB2B8], v9);
  sub_1DC405EE4();
  v21 = sub_1DC4090A0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  v22 = (char *)sub_1DC405E00();
  sub_1DC32A4B8((uint64_t)v38, v15, v22);
  sub_1DC255360((uint64_t)v38);

  __swift_project_boxed_opaque_existential_1((_QWORD *)(v4 + 72), *(_QWORD *)(v4 + 96));
  v23 = (char *)sub_1DC405E00();
  v24 = *(id *)&v23[OBJC_IVAR____TtC8StocksUI28StockSearchSectionHeaderView_watchlistSwitcherButton];

  v25 = (void *)sub_1DC0B5E1C(v24, 1);
  v26 = (char *)sub_1DC405E00();
  v27 = *(id *)&v26[OBJC_IVAR____TtC8StocksUI28StockSearchSectionHeaderView_watchlistSwitcherButton];

  objc_msgSend(v27, sel_setShowsMenuAsPrimaryAction_, 1, v36, v37);
  v28 = (char *)sub_1DC405E00();
  v29 = *(id *)&v28[OBJC_IVAR____TtC8StocksUI28StockSearchSectionHeaderView_watchlistSwitcherButton];

  objc_msgSend(v29, sel_setMenu_, v25);
  v30 = (char *)sub_1DC405E00();
  v31 = *(id *)&v30[OBJC_IVAR____TtC8StocksUI28StockSearchSectionHeaderView_watchlistSwitcherButton];

  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v33 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1DC3FFC80();

  v34 = (void *)sub_1DC408A1C();
  swift_bridgeObjectRelease();
  objc_msgSend(v31, sel_setAccessibilityHint_, v34);

  sub_1DC21B9DC((uint64_t)v15);
  return v21;
}

uint64_t sub_1DC2551B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v5;

  v0 = sub_1DC406040();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC2552E8();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DBB2B8], v0);
  sub_1DC4090B8();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_1DC25526C(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  return sub_1DC254DE8(a1, a2, *a3, a4);
}

uint64_t sub_1DC255290()
{
  return sub_1DC080808(&qword_1EDB3CB80, (uint64_t (*)(uint64_t))type metadata accessor for StockSearchLayoutSectionDescriptor, (uint64_t)&unk_1DC419DE0);
}

uint64_t sub_1DC2552BC()
{
  return sub_1DC080808(&qword_1EDB340B0, (uint64_t (*)(uint64_t))type metadata accessor for StockSearchLayoutModel, (uint64_t)&unk_1DC422B70);
}

void sub_1DC2552E8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB2A4C8)
  {
    type metadata accessor for StockSearchSectionHeaderView();
    sub_1DC080808(&qword_1EDB28028, (uint64_t (*)(uint64_t))type metadata accessor for StockSearchSectionHeaderView, (uint64_t)&unk_1DC412518);
    v0 = sub_1DC405E18();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB2A4C8);
  }
}

uint64_t sub_1DC255360(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  swift_bridgeObjectRelease();
  sub_1DC21B95C(v2, v3);
  return a1;
}

__n128 __swift_memcpy64_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for PlacardViewLayoutAttributes(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 64))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for PlacardViewLayoutAttributes(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 64) = v3;
  return result;
}

ValueMetadata *type metadata accessor for PlacardViewLayoutAttributes()
{
  return &type metadata for PlacardViewLayoutAttributes;
}

uint64_t sub_1DC25543C()
{
  sub_1DC2554AC();
  return sub_1DC40625C();
}

unint64_t sub_1DC255468()
{
  unint64_t result;

  result = qword_1F034FF00;
  if (!qword_1F034FF00)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC41D84C, &type metadata for PlacardViewLayoutAttributes);
    atomic_store(result, (unint64_t *)&qword_1F034FF00);
  }
  return result;
}

unint64_t sub_1DC2554AC()
{
  unint64_t result;

  result = qword_1F034FF08;
  if (!qword_1F034FF08)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC41D884, &type metadata for PlacardViewLayoutAttributes);
    atomic_store(result, (unint64_t *)&qword_1F034FF08);
  }
  return result;
}

uint64_t sub_1DC2554F0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _OWORD v33[2];
  uint64_t v34;
  _OWORD v35[2];
  uint64_t v36;

  v30 = a1;
  sub_1DC089DA4(0, (unint64_t *)&unk_1EDB29810, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD3C8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v28 - v3;
  v29 = sub_1DC402830();
  v5 = *(_QWORD *)(v29 - 8);
  MEMORY[0x1E0C80A78](v29);
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1DC402860();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for StocksActivity(0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (uint64_t *)((char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1DC132300();
  v16 = MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v28 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = v20;
  v32 = v19;
  (*(void (**)(char *, uint64_t, __n128))(v20 + 16))(v18, v1 + OBJC_IVAR____TtC8StocksUI22StocksSearchURLHandler_navigator, v16);
  sub_1DC089DA4(0, &qword_1EDB29598, MEMORY[0x1E0DB6EB0], MEMORY[0x1E0DB3F28]);
  sub_1DC402980();
  sub_1DC402848();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  v21 = sub_1DC402824();
  v23 = v22;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v29);
  if (v23)
    v24 = v21;
  else
    v24 = 0;
  if (v23)
    v25 = v23;
  else
    v25 = 0xE000000000000000;
  *v14 = v24;
  v14[1] = v25;
  swift_storeEnumTagMultiPayload();
  v26 = sub_1DC403340();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v4, 1, 1, v26);
  v36 = 0;
  memset(v35, 0, sizeof(v35));
  v34 = 0;
  memset(v33, 0, sizeof(v33));
  sub_1DC22B720((uint64_t)v14, 0, (uint64_t)v4, (uint64_t)v35, 0, 0, (uint64_t)v33);
  swift_release();
  sub_1DC1B5EA8((uint64_t)v33, &qword_1EDB29410, (unint64_t *)&unk_1EDB29400, MEMORY[0x1E0DB35B0]);
  sub_1DC1B5EA8((uint64_t)v35, &qword_1EDB2ACD0, (unint64_t *)&qword_1EDB2ACC0, MEMORY[0x1E0D53040]);
  sub_1DC2559F4((uint64_t)v4);
  sub_1DC1B3F14((uint64_t)v14);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v18, v32);
  return 1;
}

uint64_t sub_1DC255944()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  v1 = v0 + OBJC_IVAR____TtC8StocksUI22StocksSearchURLHandler_navigator;
  sub_1DC132300();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_1DC25599C()
{
  return type metadata accessor for StocksSearchURLHandler();
}

uint64_t sub_1DC2559A4(uint64_t a1)
{
  return sub_1DC2554F0(a1) & 1;
}

uint64_t sub_1DC2559C8()
{
  return sub_1DC080808(&qword_1EDB2B948, (uint64_t (*)(uint64_t))type metadata accessor for StocksSearchURLHandler, (uint64_t)&unk_1DC41D908);
}

uint64_t sub_1DC2559F4(uint64_t a1)
{
  uint64_t v2;

  sub_1DC089DA4(0, (unint64_t *)&unk_1EDB29810, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD3C8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_QWORD *sub_1DC255A48(_OWORD *a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  __int128 v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = *((_OWORD *)a2 + 1);
    *a1 = *(_OWORD *)a2;
    a1[1] = v7;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (uint64_t)a2 + v8;
    v11 = sub_1DC4052FC();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = a3[7];
    v14 = (char *)v4 + v12;
    v15 = (uint64_t)a2 + v12;
    *(_QWORD *)v14 = *(_QWORD *)v15;
    v14[8] = *(_BYTE *)(v15 + 8);
    *(_QWORD *)((char *)v4 + v13) = *(uint64_t *)((char *)a2 + v13);
  }
  return v4;
}

_OWORD *sub_1DC255B04(_OWORD *a1, _OWORD *a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1DC4052FC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a3[7];
  v13 = (char *)a1 + v11;
  v14 = (char *)a2 + v11;
  *(_QWORD *)v13 = *(_QWORD *)v14;
  v13[8] = v14[8];
  *(_QWORD *)((char *)a1 + v12) = *(_QWORD *)((char *)a2 + v12);
  return a1;
}

_QWORD *sub_1DC255B94(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  char v13;

  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1DC4052FC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = a3[6];
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = v12[8];
  *(_QWORD *)v11 = *(_QWORD *)v12;
  v11[8] = v13;
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  return a1;
}

_OWORD *sub_1DC255C40(_OWORD *a1, _OWORD *a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1DC4052FC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a3[7];
  v13 = (char *)a1 + v11;
  v14 = (char *)a2 + v11;
  *(_QWORD *)v13 = *(_QWORD *)v14;
  v13[8] = v14[8];
  *(_QWORD *)((char *)a1 + v12) = *(_QWORD *)((char *)a2 + v12);
  return a1;
}

_OWORD *sub_1DC255CD0(_OWORD *a1, _OWORD *a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1DC4052FC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a3[7];
  v13 = (char *)a1 + v11;
  v14 = (char *)a2 + v11;
  *(_QWORD *)v13 = *(_QWORD *)v14;
  v13[8] = v14[8];
  *(_QWORD *)((char *)a1 + v12) = *(_QWORD *)((char *)a2 + v12);
  return a1;
}

uint64_t sub_1DC255D60()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC255D6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a1 + *(int *)(a3 + 20);
  v5 = sub_1DC4052FC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, a2, v5);
}

uint64_t sub_1DC255DAC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC255DB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;

  v5 = a1 + *(int *)(a4 + 20);
  v6 = sub_1DC4052FC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, a2, a2, v6);
}

void ArticleViewerViewController.navigateStack(toward:)()
{
  uint64_t v0;
  char *v1;

  v0 = type metadata accessor for StocksActivity(0);
  MEMORY[0x1E0C80A78](v0);
  sub_1DC143F58();
  sub_1DC406838();
  v1 = (char *)&loc_1DC255E7C + dword_1DC256014[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1DC255E8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1DC0926D8(v1, type metadata accessor for StocksActivity);
  v2 = *MEMORY[0x1E0DBA4F8];
  v3 = sub_1DC405AA0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(v0, v2, v3);
}

void sub_1DC255FDC()
{
  unint64_t *v0;

  sub_1DC17769C(*v0);
  JUMPOUT(0x1DC255E9CLL);
}

void sub_1DC255FE8()
{
  uint64_t *v0;

  sub_1DC0E81D0(*v0);
  JUMPOUT(0x1DC255E9CLL);
}

void sub_1DC255FF4()
{
  uint64_t v0;

  sub_1DC17CCB0();
  swift_release();
  sub_1DC133864(v0);
  JUMPOUT(0x1DC255E9CLL);
}

void sub_1DC25604C()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EDB34880)
  {
    type metadata accessor for ForYouSectionDescriptor();
    sub_1DC4059F8();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EDB34880);
  }
}

uint64_t ArticleViewerViewController.preview(for:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *MEMORY[0x1E0DB98B0];
  v3 = sub_1DC4054DC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

uint64_t sub_1DC256100(uint64_t a1)
{
  uint64_t result;

  result = sub_1DC080808(&qword_1EDB29330, (uint64_t (*)(uint64_t))MEMORY[0x1E0D57BA0], (uint64_t)&protocol conformance descriptor for ArticleViewerViewController);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1DC25613C()
{
  return sub_1DC080808((unint64_t *)&unk_1EDB2C5A0, type metadata accessor for StocksActivity, (uint64_t)&protocol conformance descriptor for StocksActivity);
}

uint64_t sub_1DC25616C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *MEMORY[0x1E0DB98B0];
  v3 = sub_1DC4054DC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

uint64_t type metadata accessor for DisabledAudioTrackFactory()
{
  return objc_opt_self();
}

uint64_t sub_1DC2561D0()
{
  sub_1DC2576F8();
  swift_allocError();
  return swift_willThrow();
}

uint64_t sub_1DC256214()
{
  uint64_t v0;
  char *v1;
  void *v2;
  unint64_t v3;
  id v4;
  unsigned int v5;
  int v6;
  id v8;
  __int128 v9;
  __int128 v10;
  _BYTE v11[24];
  uint64_t v12;

  v1 = (char *)objc_msgSend(*(id *)(v0 + 16), sel_cachedSubscription);
  if (objc_getAssociatedObject(v1, v1 + 1))
  {
    sub_1DC409634();
    swift_unknownObjectRelease();
  }
  else
  {
    v9 = 0u;
    v10 = 0u;
  }
  sub_1DC092ED0((uint64_t)&v9, (uint64_t)v11, (uint64_t (*)(_QWORD))sub_1DC0D11C4);
  if (!v12)
  {
    sub_1DC150744((uint64_t)v11);
    goto LABEL_9;
  }
  sub_1DC0821D4(0, (unint64_t *)&qword_1EDB284E0);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_9:
    v2 = 0;
    v3 = 0;
    goto LABEL_10;
  }
  v2 = v8;
  v3 = (unint64_t)objc_msgSend(v8, sel_integerValue);
  if (v3 == -1)
    goto LABEL_17;
LABEL_10:
  if (objc_getAssociatedObject(v1, (const void *)~v3))
  {
    sub_1DC409634();
    swift_unknownObjectRelease();
  }
  else
  {
    v9 = 0u;
    v10 = 0u;
  }
  sub_1DC092ED0((uint64_t)&v9, (uint64_t)v11, (uint64_t (*)(_QWORD))sub_1DC0D11C4);
  if (!v12)
  {
    sub_1DC150744((uint64_t)v11);
    goto LABEL_17;
  }
  sub_1DC0821D4(0, (unint64_t *)&qword_1EDB284E0);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_17:

    v6 = -60;
    return (v6 ^ v3) & 1;
  }
  v4 = v8;
  v5 = objc_msgSend(v4, sel_integerValue);

  v6 = v5 - 60;
  return (v6 ^ v3) & 1;
}

void sub_1DC2563F8(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void (*v18)(char *, uint64_t, uint64_t);
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char *v28;
  void (*v29)(char *, uint64_t);
  unsigned int v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  char *v34;
  unsigned int v35;
  unsigned __int8 v36;
  id v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  id v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  char *v47;
  void *v48;
  id v49;
  id v50;
  unint64_t v51;
  void *v52;
  id v53;
  unsigned int v54;
  id v55;
  id v56;
  id v57;
  int *v58;
  uint64_t *v59;
  char *v60;
  void *v61;
  __int16 v62;
  id v63;
  id v64;
  uint64_t v65;
  id v66;
  id v67;
  void *v68;
  unsigned __int8 v69;
  uint64_t v70;
  void *v71;
  uint64_t v72;
  uint64_t v73;
  void (*v74)(char *, uint64_t);
  uint64_t v75;
  char *v76;
  uint64_t v77;
  id v78;
  uint64_t v79;
  char *v80;
  uint64_t *v81;
  uint64_t v82;
  void *v83;
  uint64_t v84;
  id v85;
  __int128 v86;
  __int128 v87;
  _BYTE v88[24];
  uint64_t v89;

  v81 = a2;
  v3 = sub_1DC401B1C();
  MEMORY[0x1E0C80A78](v3);
  v82 = (uint64_t)&v70 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1DC4011BC();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v80 = (char *)&v70 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v70 - v9;
  sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FC00);
  v11 = (void *)sub_1DC409598();
  sub_1DC408FBC();
  sub_1DC089DA4(0, (unint64_t *)&qword_1EDB400C0, (uint64_t (*)(uint64_t))sub_1DC1542B8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1DC40DC10;
  v13 = sub_1DC401150();
  v15 = v14;
  *(_QWORD *)(v12 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v12 + 64) = sub_1DC0E7FAC();
  *(_QWORD *)(v12 + 32) = v13;
  *(_QWORD *)(v12 + 40) = v15;
  sub_1DC403F28();

  v16 = v5;
  swift_bridgeObjectRelease();
  v17 = sub_1DC256CDC();
  v18 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v18(v10, a1, v16);
  v19 = (void *)sub_1DC401144();
  v20 = v83;
  sub_1DC256EC4(v19);
  if (v20)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v10, v16);
    swift_unknownObjectRelease();

    return;
  }
  v83 = v21;
  swift_unknownObjectRelease();
  v22 = (void *)sub_1DC401144();
  sub_1DC25773C(v22);
  v24 = v23;
  v78 = v17;
  v75 = 0;
  v76 = v10;
  swift_unknownObjectRelease();
  v25 = v16;
  if ((sub_1DC256214() & 1) != 0)
    v26 = 3;
  else
    v26 = 0;
  v27 = sub_1DC256214();
  v28 = v80;
  v77 = a1;
  v18(v80, a1, v25);
  v79 = v25;
  if ((v27 & 1) != 0)
  {
    v29 = *(void (**)(char *, uint64_t))(v6 + 8);
    v29(v28, v25);
  }
  else
  {
    v30 = objc_msgSend((id)sub_1DC401144(), sel_isFullTrackAvailableToAll);
    swift_unknownObjectRelease();
    v29 = *(void (**)(char *, uint64_t))(v6 + 8);
    v29(v28, v25);
    if (!v30)
      v26 |= 0x80uLL;
  }
  v31 = v84;
  if (sub_1DC256214() & 1 | (v78 == 0))
    v32 = v26;
  else
    v32 = v26 | 0x100;
  v33 = *(void **)(v31 + 64);
  v34 = (char *)sub_1DC401144();
  v35 = objc_msgSend(v34, sel_isPaid);
  if ((objc_msgSend(v34, sel_respondsToSelector_, sel_isBundlePaid) & 1) != 0)
    v36 = objc_msgSend(v34, sel_isBundlePaid);
  else
    v36 = 0;
  v80 = v34;
  v37 = objc_msgSend(v34, sel_sourceChannel);
  v38 = (uint64_t)v37;
  if (v37)
  {
    v39 = objc_msgSend(v37, sel_identifier);
    swift_unknownObjectRelease();
    v72 = sub_1DC408A4C();
    v38 = v40;

  }
  else
  {
    v72 = 0;
  }
  v74 = v29;
  v73 = v32;
  if (v35)
  {
    v41 = objc_msgSend(v33, sel_purchaseProvider);
    v71 = v33;
    if (v38)
    {
      v42 = objc_msgSend(v41, sel_purchasedTagIDs);
      v43 = sub_1DC408E54();

      v44 = v38;
      LOBYTE(v42) = sub_1DC151630(v72, v38, v43);
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      if ((v42 & 1) != 0)
        goto LABEL_24;
    }
    else
    {
      v44 = 0;
      swift_unknownObjectRelease();
    }
    v38 = v44;
    v33 = v71;
    if ((v36 & 1) == 0)
      goto LABEL_48;
LABEL_27:
    if (!v38)
    {
      swift_unknownObjectRelease();
LABEL_49:
      v46 = v77;
LABEL_50:
      v45 = 0;
      goto LABEL_51;
    }
    v47 = (char *)objc_msgSend(objc_msgSend(v33, sel_bundleSubscriptionProvider, v38), sel_bundleSubscription);
    swift_unknownObjectRelease();
    v48 = v47;
    if (objc_getAssociatedObject(v47, v47 + 1))
    {
      sub_1DC409634();
      swift_unknownObjectRelease();
    }
    else
    {
      v86 = 0u;
      v87 = 0u;
    }
    sub_1DC092ED0((uint64_t)&v86, (uint64_t)v88, (uint64_t (*)(_QWORD))sub_1DC0D11C4);
    if (v89)
    {
      sub_1DC0821D4(0, (unint64_t *)&qword_1EDB284E0);
      if ((swift_dynamicCast() & 1) != 0)
      {
        v49 = v85;
        v50 = objc_msgSend(v85, sel_integerValue);
        if (v50 == (id)-1)
        {

          goto LABEL_53;
        }
        v51 = (unint64_t)v50;
        goto LABEL_39;
      }
    }
    else
    {
      sub_1DC150744((uint64_t)v88);
    }
    v49 = 0;
    v51 = 0;
LABEL_39:
    if (objc_getAssociatedObject(v48, (const void *)~v51))
    {
      sub_1DC409634();
      swift_unknownObjectRelease();
    }
    else
    {
      v86 = 0u;
      v87 = 0u;
    }
    sub_1DC092ED0((uint64_t)&v86, (uint64_t)v88, (uint64_t (*)(_QWORD))sub_1DC0D11C4);
    if (v89)
    {
      sub_1DC0821D4(0, (unint64_t *)&qword_1EDB284E0);
      if ((swift_dynamicCast() & 1) != 0)
      {
        v52 = v49;
        v53 = v85;
        v54 = objc_msgSend(v53, sel_integerValue);

        if ((((v54 + 1) ^ ((_DWORD)v51 + 1)) & 1) != 0)
        {
LABEL_53:
          v66 = objc_msgSend(objc_msgSend(v33, sel_bundleSubscriptionProvider), sel_bundleSubscription);
          swift_unknownObjectRelease();
          v67 = objc_msgSend(v66, sel_bundleChannelIDs);

          v68 = (void *)sub_1DC408A1C();
          v69 = objc_msgSend(v67, sel_containsObject_, v68);
          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();

          v46 = v77;
          if ((v69 & 1) != 0)
          {
            v45 = 1;
            goto LABEL_51;
          }
          goto LABEL_50;
        }
        goto LABEL_48;
      }
    }
    else
    {
      sub_1DC150744((uint64_t)v88);
    }

    if ((v51 & 1) != 0)
      goto LABEL_53;
LABEL_48:
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_49;
  }
  if ((v36 & 1) != 0)
    goto LABEL_27;
LABEL_24:
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  v45 = 1;
  v46 = v77;
LABEL_51:
  v55 = v78;
  v56 = v78;
  v57 = sub_1DC25737C(v46, v55);
  v58 = (int *)type metadata accessor for StocksAudioTrack();
  v59 = v81;
  v60 = v76;
  v18((char *)v81 + v58[5], (uint64_t)v76, v79);
  *v59 = sub_1DC401144();
  v61 = v83;
  *(uint64_t *)((char *)v59 + v58[6]) = (uint64_t)v83;
  *(uint64_t *)((char *)v59 + v58[7]) = v24;
  v62 = v73;
  *(uint64_t *)((char *)v59 + v58[8]) = v73;
  *((_BYTE *)v59 + v58[9]) = v45;
  *(uint64_t *)((char *)v59 + v58[10]) = (uint64_t)v55;
  *(uint64_t *)((char *)v59 + v58[11]) = (uint64_t)v57;
  v80 = (char *)v57;
  v63 = v56;
  v64 = v61;
  v65 = v82;
  sub_1DC1A2AFC(v64, v62, v55, v57, v82);

  v74(v60, v79);
  sub_1DC092ED0(v65, (uint64_t)v59 + v58[12], (uint64_t (*)(_QWORD))MEMORY[0x1E0D56F40]);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v84 + 80), *(_QWORD *)(v84 + 104));
  sub_1DC26D888();

}

void *sub_1DC256CDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  void *v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  if ((sub_1DC256214() & 1) != 0)
    return 0;
  v1 = sub_1DC401180();
  if (!v2)
  {
    sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FC00);
    v12 = (void *)sub_1DC409598();
    sub_1DC408FC8();
    sub_1DC089DA4(0, (unint64_t *)&qword_1EDB400C0, (uint64_t (*)(uint64_t))sub_1DC1542B8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_1DC40DC10;
    v14 = sub_1DC401150();
    v16 = v15;
    *(_QWORD *)(v13 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v13 + 64) = sub_1DC0E7FAC();
    *(_QWORD *)(v13 + 32) = v14;
    *(_QWORD *)(v13 + 40) = v16;
    sub_1DC403F28();

    goto LABEL_9;
  }
  v3 = v1;
  v4 = v2;
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 48));
  v5 = (void *)sub_1DC4083A4();
  v6 = objc_msgSend(v5, sel_audioUpsellConfigurationsByID);

  if (!v6)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return 0;
  }
  sub_1DC0821D4(0, &qword_1F034FFE0);
  v7 = sub_1DC40898C();

  if (!*(_QWORD *)(v7 + 16) || (v8 = sub_1DC0ED368(v3, v4), (v9 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  v10 = *(void **)(*(_QWORD *)(v7 + 56) + 8 * v8);
  v11 = v10;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v10;
}

void sub_1DC256EC4(void *a1)
{
  id v2;
  void *v3;
  void *v4;
  uint64_t v5;
  id v6;
  _BYTE *v7;
  id v8;
  void *v9;
  void *v10;
  uint64_t v11;
  _BYTE *v12;
  void *v13;
  uint64_t v14;
  _BYTE *v15;

  if ((sub_1DC256214() & 1) != 0)
  {
    if ((objc_msgSend(a1, sel_respondsToSelector_, sel_narrativeTrack) & 1) == 0
      || !objc_msgSend(a1, sel_narrativeTrack))
    {
      if ((objc_msgSend(a1, sel_respondsToSelector_, sel_narrativeTrackSample) & 1) != 0)
      {
        v2 = objc_msgSend(a1, sel_narrativeTrackSample);
        if (v2)
        {
          v3 = v2;
          sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FC00);
          v4 = (void *)sub_1DC409598();
          sub_1DC408FC8();
          sub_1DC089DA4(0, (unint64_t *)&qword_1EDB400C0, (uint64_t (*)(uint64_t))sub_1DC1542B8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
          v5 = swift_allocObject();
          *(_OWORD *)(v5 + 16) = xmmword_1DC40C740;
          sub_1DC409808();
          *(_QWORD *)(v5 + 56) = MEMORY[0x1E0DEA968];
          *(_QWORD *)(v5 + 64) = sub_1DC0E7FAC();
          *(_QWORD *)(v5 + 32) = 0;
          *(_QWORD *)(v5 + 40) = 0xE000000000000000;
          *(_QWORD *)(v5 + 96) = sub_1DC0821D4(0, (unint64_t *)&qword_1F034FFD0);
          *(_QWORD *)(v5 + 104) = sub_1DC257A58();
          *(_QWORD *)(v5 + 72) = v3;
          v6 = v3;
          sub_1DC403F28();

          swift_bridgeObjectRelease();
          sub_1DC257A14();
          swift_allocError();
          *v7 = 1;
LABEL_12:
          swift_willThrow();

          return;
        }
      }
LABEL_13:
      sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FC00);
      v13 = (void *)sub_1DC409598();
      sub_1DC408FC8();
      sub_1DC089DA4(0, (unint64_t *)&qword_1EDB400C0, (uint64_t (*)(uint64_t))sub_1DC1542B8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v14 = swift_allocObject();
      *(_OWORD *)(v14 + 16) = xmmword_1DC40DC10;
      sub_1DC112C9C();
      sub_1DC409808();
      *(_QWORD *)(v14 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v14 + 64) = sub_1DC0E7FAC();
      *(_QWORD *)(v14 + 32) = 0;
      *(_QWORD *)(v14 + 40) = 0xE000000000000000;
      sub_1DC403F28();

      swift_bridgeObjectRelease();
      sub_1DC257A14();
      swift_allocError();
      *v15 = 0;
      swift_willThrow();
    }
  }
  else if ((objc_msgSend(a1, sel_respondsToSelector_, sel_narrativeTrackSample) & 1) == 0
         || !objc_msgSend(a1, sel_narrativeTrackSample))
  {
    if ((objc_msgSend(a1, sel_respondsToSelector_, sel_narrativeTrack) & 1) != 0)
    {
      v8 = objc_msgSend(a1, sel_narrativeTrack);
      if (v8)
      {
        v9 = v8;
        sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FC00);
        v10 = (void *)sub_1DC409598();
        sub_1DC408FC8();
        sub_1DC089DA4(0, (unint64_t *)&qword_1EDB400C0, (uint64_t (*)(uint64_t))sub_1DC1542B8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
        v11 = swift_allocObject();
        *(_OWORD *)(v11 + 16) = xmmword_1DC40C740;
        sub_1DC409808();
        *(_QWORD *)(v11 + 56) = MEMORY[0x1E0DEA968];
        *(_QWORD *)(v11 + 64) = sub_1DC0E7FAC();
        *(_QWORD *)(v11 + 32) = 0;
        *(_QWORD *)(v11 + 40) = 0xE000000000000000;
        *(_QWORD *)(v11 + 96) = sub_1DC0821D4(0, (unint64_t *)&qword_1F034FFD0);
        *(_QWORD *)(v11 + 104) = sub_1DC257A58();
        *(_QWORD *)(v11 + 72) = v9;
        v6 = v9;
        sub_1DC403F28();

        swift_bridgeObjectRelease();
        sub_1DC257A14();
        swift_allocError();
        *v12 = 2;
        goto LABEL_12;
      }
    }
    goto LABEL_13;
  }
}

id sub_1DC25737C(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  id v16;
  id v17;
  void *v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  void *v27;
  void *v28;
  uint64_t v30;
  id v31;
  uint64_t (*v32)();
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;

  v3 = v2;
  sub_1DC089DA4(0, (unint64_t *)&unk_1EDB28A70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v30 - v6;
  v8 = sub_1DC3FFDD0();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v30 - v13;
  v15 = 0;
  if ((sub_1DC256214() & 1) == 0 && a2)
  {
    v16 = a2;
    v17 = objc_msgSend(v16, "URL");
    v31 = v16;
    if (v17)
    {
      v18 = v17;
      sub_1DC3FFD94();

      v19 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
      v19(v7, v11, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v7, 0, 1, v8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) != 1)
      {
        v19(v14, v7, v8);
        v34 = 0;
        v35 = 0xE000000000000000;
        sub_1DC409730();
        v20 = sub_1DC401150();
        v22 = v21;
        swift_bridgeObjectRelease();
        v34 = v20;
        v35 = v22;
        sub_1DC408B48();
        (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v11, v14, v8);
        v23 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
        v24 = swift_allocObject();
        v19((char *)(v24 + v23), v11, v8);
        v25 = swift_allocObject();
        *(_QWORD *)(v25 + 16) = sub_1DC25794C;
        *(_QWORD *)(v25 + 24) = v24;
        v32 = sub_1DC080634;
        v33 = v25;
        sub_1DC2579B0();
        sub_1DC408AA0();
        sub_1DC408B48();
        swift_bridgeObjectRelease();
        v26 = *(void **)(v3 + 72);
        v27 = (void *)sub_1DC408A1C();
        swift_bridgeObjectRelease();
        v28 = (void *)sub_1DC3FFD88();
        v15 = objc_msgSend(v26, sel_assetWithIdentifier_remoteURL_overrideMIMEType_, v27, v28, 0);

        (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
        return v15;
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
    }

    sub_1DC212C0C((uint64_t)v7);
    return 0;
  }
  return v15;
}

uint64_t sub_1DC257694()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 80);
  return swift_deallocClassInstance();
}

void sub_1DC2576D8(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1DC2563F8(a1, a2);
}

unint64_t sub_1DC2576F8()
{
  unint64_t result;

  result = qword_1F034FFA8;
  if (!qword_1F034FFA8)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC41DC1C, &type metadata for DisabledAudioTrackFactory.Errors);
    atomic_store(result, (unint64_t *)&qword_1F034FFA8);
  }
  return result;
}

void sub_1DC25773C(void *a1)
{
  id v2;
  void *v3;
  void *v4;
  uint64_t v5;
  _BYTE *v6;

  if ((objc_msgSend(a1, sel_respondsToSelector_, sel_narrativeTrack) & 1) != 0
    && (v2 = objc_msgSend(a1, sel_narrativeTrack)) != 0)
  {
    v3 = v2;
    objc_msgSend(v2, sel_duration);

  }
  else
  {
    sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FC00);
    v4 = (void *)sub_1DC409598();
    sub_1DC408FC8();
    sub_1DC089DA4(0, (unint64_t *)&qword_1EDB400C0, (uint64_t (*)(uint64_t))sub_1DC1542B8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_1DC40DC10;
    sub_1DC112C9C();
    sub_1DC409808();
    *(_QWORD *)(v5 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v5 + 64) = sub_1DC0E7FAC();
    *(_QWORD *)(v5 + 32) = 0;
    *(_QWORD *)(v5 + 40) = 0xE000000000000000;
    sub_1DC403F28();

    swift_bridgeObjectRelease();
    sub_1DC257A14();
    swift_allocError();
    *v6 = 1;
    swift_willThrow();
  }
}

uint64_t sub_1DC2578EC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_1DC3FFDD0();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_1DC25794C()
{
  sub_1DC3FFDD0();
  return sub_1DC3FFDA0();
}

uint64_t sub_1DC25798C()
{
  swift_release();
  return swift_deallocObject();
}

unint64_t sub_1DC2579B0()
{
  unint64_t result;

  result = qword_1F034FFB8;
  if (!qword_1F034FFB8)
  {
    result = swift_getFunctionTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1F034FFB8);
  }
  return result;
}

unint64_t sub_1DC257A14()
{
  unint64_t result;

  result = qword_1F034FFC8;
  if (!qword_1F034FFC8)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC41DBDC, &type metadata for AudioTrackFactory.Errors);
    atomic_store(result, (unint64_t *)&qword_1F034FFC8);
  }
  return result;
}

unint64_t sub_1DC257A58()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1F034FFD8;
  if (!qword_1F034FFD8)
  {
    v1 = sub_1DC0821D4(255, (unint64_t *)&qword_1F034FFD0);
    result = MEMORY[0x1DF0CAB8C](MEMORY[0x1E0DEFD08], v1);
    atomic_store(result, (unint64_t *)&qword_1F034FFD8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for AudioTrackFactory.Errors(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1DC257AFC + 4 * byte_1DC41DA25[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1DC257B30 + 4 * byte_1DC41DA20[v4]))();
}

uint64_t sub_1DC257B30(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC257B38(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC257B40);
  return result;
}

uint64_t sub_1DC257B4C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC257B54);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1DC257B58(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC257B60(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AudioTrackFactory.Errors()
{
  return &type metadata for AudioTrackFactory.Errors;
}

uint64_t storeEnumTagSinglePayload for DisabledAudioTrackFactory.Errors(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1DC257BBC + 4 * byte_1DC41DA2A[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1DC257BDC + 4 * byte_1DC41DA2F[v4]))();
}

_BYTE *sub_1DC257BBC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1DC257BDC(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC257BE4(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC257BEC(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC257BF4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC257BFC(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for DisabledAudioTrackFactory.Errors()
{
  return &type metadata for DisabledAudioTrackFactory.Errors;
}

unint64_t sub_1DC257C1C()
{
  unint64_t result;

  result = qword_1F034FFE8;
  if (!qword_1F034FFE8)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC41DB4C, &type metadata for DisabledAudioTrackFactory.Errors);
    atomic_store(result, (unint64_t *)&qword_1F034FFE8);
  }
  return result;
}

unint64_t sub_1DC257C64()
{
  unint64_t result;

  result = qword_1F034FFF0;
  if (!qword_1F034FFF0)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC41DBB4, &type metadata for AudioTrackFactory.Errors);
    atomic_store(result, (unint64_t *)&qword_1F034FFF0);
  }
  return result;
}

uint64_t sub_1DC257CA8(char *a1, void *a2, double a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(id, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  char v33;
  char *v34;
  uint64_t v35;
  void (*v36)(char *, char *, uint64_t);
  char *v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  char *v43;
  void *v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(char *, uint64_t, uint64_t);
  uint64_t v50;
  double v51;
  double v52;
  double v53;
  double v54;
  void (*v55)(char *, uint64_t);
  char *v56;
  double v57;
  char v58;
  double v59;
  _QWORD *v60;
  uint64_t result;
  char v62;
  double v63;
  double v64;
  double v65;
  double v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  _QWORD *v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t v74;
  unint64_t v75;
  uint64_t v76;
  _QWORD v77[2];
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  id v85;
  char *v86;
  char *v87;
  char *v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  void (*v92)(char *, uint64_t, _QWORD *);
  uint64_t v93;
  unint64_t v94;
  unint64_t v95;
  _QWORD *v96;
  __int128 v97;
  uint64_t v98;
  uint64_t v99;
  _QWORD v100[3];
  uint64_t v101;
  uint64_t v102;

  v85 = a2;
  v86 = a1;
  v93 = type metadata accessor for StockChartDescriptor();
  v79 = *(_QWORD *)(v93 - 8);
  MEMORY[0x1E0C80A78](v93);
  v80 = v5;
  v84 = (uint64_t)v77 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v90 = sub_1DC3FFFEC();
  v89 = *(_QWORD *)(v90 - 8);
  MEMORY[0x1E0C80A78](v90);
  v88 = (char *)v77 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC089DA4(0, &qword_1EDB3F468, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB2578], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v77 - v8;
  v10 = sub_1DC4086A4();
  v91 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v82 = (char *)v77 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v83 = (char *)v77 - v13;
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)v77 - v15;
  MEMORY[0x1E0C80A78](v17);
  v94 = (unint64_t)v77 - v18;
  v78 = v19;
  MEMORY[0x1E0C80A78](v20);
  v87 = (char *)v77 - v21;
  v96 = (_QWORD *)sub_1DC400F34();
  v95 = *(v96 - 1);
  MEMORY[0x1E0C80A78](v96);
  v23 = (char *)v77 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = v3;
  swift_beginAccess();
  sub_1DC0824D4(v3 + 16, (uint64_t)v100);
  v24 = v101;
  v25 = v102;
  __swift_project_boxed_opaque_existential_1(v100, v101);
  v26 = *(_QWORD *)(v25 + 8);
  v27 = *(void (**)(id, uint64_t, uint64_t))(v26 + 8);
  v98 = v24;
  v99 = v25;
  __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v97);
  v27(v85, v24, v26);
  swift_beginAccess();
  __swift_destroy_boxed_opaque_existential_1(v3 + 16);
  sub_1DC097DD0(&v97, v3 + 16);
  swift_endAccess();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v100);
  v28 = *(_QWORD *)&v86[*(int *)(v93 + 20)];
  v29 = *(_QWORD *)(v28 + 16);
  if (v29)
  {
    v30 = v28 + ((*(unsigned __int8 *)(v95 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v95 + 80));
    v93 = *(_QWORD *)(v95 + 72);
    v92 = *(void (**)(char *, uint64_t, _QWORD *))(v95 + 16);
    v77[1] = v28;
    swift_bridgeObjectRetain();
    v31 = MEMORY[0x1E0DEE9D8];
    v32 = v91;
    do
    {
      v92(v23, v30, v96);
      sub_1DC400F1C();
      if ((v33 & 1) != 0)
      {
        v35 = 1;
      }
      else
      {
        v34 = v88;
        sub_1DC400F04();
        sub_1DC3FFF98();
        (*(void (**)(char *, unint64_t))(v89 + 8))(v34, v90);
        sub_1DC408DE8();
        sub_1DC40868C();
        v35 = 0;
      }
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v32 + 56))(v9, v35, 1, v10);
      (*(void (**)(char *, _QWORD *))(v95 + 8))(v23, v96);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v9, 1, v10) == 1)
      {
        sub_1DC2598DC((uint64_t)v9);
      }
      else
      {
        v36 = *(void (**)(char *, char *, uint64_t))(v32 + 32);
        v37 = v87;
        v36(v87, v9, v10);
        v36((char *)v94, v37, v10);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
          v38 = v31;
        else
          v38 = sub_1DC0EF78C(0, *(_QWORD *)(v31 + 16) + 1, 1, v31);
        v40 = *(_QWORD *)(v38 + 16);
        v39 = *(_QWORD *)(v38 + 24);
        if (v40 >= v39 >> 1)
          v38 = sub_1DC0EF78C(v39 > 1, v40 + 1, 1, v38);
        *(_QWORD *)(v38 + 16) = v40 + 1;
        v31 = v38;
        v41 = v38
            + ((*(unsigned __int8 *)(v91 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v91 + 80))
            + *(_QWORD *)(v91 + 72) * v40;
        v32 = v91;
        v36((char *)v41, (char *)v94, v10);
      }
      v30 += v93;
      --v29;
    }
    while (v29);
    swift_bridgeObjectRelease();
    v42 = v31;
  }
  else
  {
    v42 = MEMORY[0x1E0DEE9D8];
    v32 = v91;
  }
  v43 = *(char **)(v42 + 16);
  if ((unint64_t)v43 < 2)
  {
    swift_bridgeObjectRelease();
    sub_1DC09BDF8();
    v44 = (void *)sub_1DC409580();
    sub_1DC408FE0();
    sub_1DC403F28();

    return 0;
  }
  v46 = *(unsigned __int8 *)(v32 + 80);
  v94 = ~v46;
  v95 = v46;
  v47 = v42 + ((v46 + 32) & ~v46);
  v48 = *(_QWORD *)(v32 + 72);
  v49 = *(void (**)(char *, uint64_t, uint64_t))(v32 + 16);
  v50 = v42;
  swift_bridgeObjectRetain();
  v51 = 0.0;
  v52 = 1.79769313e308;
  v93 = v47;
  v96 = v43;
  do
  {
    v49(v16, v47, v10);
    sub_1DC408680();
    if (v52 >= v53)
      v52 = v53;
    sub_1DC408680();
    if (v54 > v51)
      v51 = v54;
    v55 = *(void (**)(char *, uint64_t))(v32 + 8);
    v55(v16, v10);
    v47 += v48;
    --v43;
  }
  while (v43);
  swift_bridgeObjectRelease();
  v56 = v86;
  v57 = COERCE_DOUBLE(sub_1DC400EE0());
  if ((v58 & 1) != 0)
  {
    v60 = v96;
  }
  else
  {
    v59 = v57;
    if (v52 < v57)
      v59 = v52;
    v52 = 0.0;
    v60 = v96;
    if (v59 > 0.0)
      v52 = v59;
  }
  *(double *)&result = COERCE_DOUBLE(sub_1DC400EE0());
  if ((v62 & 1) == 0 && v51 < *(double *)&result)
    v51 = *(double *)&result;
  if ((unint64_t)v60 <= *(_QWORD *)(v50 + 16))
  {
    v63 = (v51 - v52) * 0.02;
    v64 = v51 + v63;
    v65 = v52 - v63;
    if (v65 > 0.0)
      v66 = v65;
    else
      v66 = 0.0;
    v67 = v93 + v48 * ((_QWORD)v60 - 1);
    v68 = v83;
    v93 = v50;
    v49(v83, v67, v10);
    v69 = v81;
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v81 + 56), *(_QWORD *)(v81 + 80));
    v70 = v85;
    v96 = v70;
    v92 = (void (*)(char *, uint64_t, _QWORD *))sub_1DC192578((uint64_t)v56, (uint64_t)v70, v66, v64, a3);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v69 + 56), *(_QWORD *)(v69 + 80));
    v90 = sub_1DC192B9C(v56, (uint64_t)v70, a3);
    sub_1DC259930((uint64_t)v56, v84);
    v49(v82, (uint64_t)v68, v10);
    v71 = (*(unsigned __int8 *)(v79 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v79 + 80);
    v72 = (v80 + v95 + v71) & v94;
    v95 = (v78 + v72 + 7) & 0xFFFFFFFFFFFFFFF8;
    v73 = (v95 + 15) & 0xFFFFFFFFFFFFFFF8;
    v74 = (v73 + 15) & 0xFFFFFFFFFFFFFFF8;
    v75 = (v74 + 15) & 0xFFFFFFFFFFFFFFF8;
    v76 = swift_allocObject();
    *(_QWORD *)(v76 + 16) = v69;
    sub_1DC259AA4(v84, v76 + v71);
    (*(void (**)(unint64_t, char *, uint64_t))(v91 + 32))(v76 + v72, v82, v10);
    *(_QWORD *)(v76 + v95) = v93;
    *(_QWORD *)(v76 + v73) = v90;
    *(double *)(v76 + v74) = v66;
    *(double *)(v76 + v75) = v64;
    *(_QWORD *)(v76 + ((v75 + 15) & 0xFFFFFFFFFFFFFFF8)) = v92;
    sub_1DC25A648(0, &qword_1EDB3F478, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB2498], &qword_1EDB3F420, MEMORY[0x1E0DB2490]);
    swift_allocObject();
    swift_retain();
    v45 = sub_1DC4086BC();

    v55(v83, v10);
    return v45;
  }
  __break(1u);
  return result;
}

uint64_t sub_1DC2585B0@<X0>(uint64_t a1@<X2>, uint64_t a2@<X6>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t (*v24)(uint64_t);
  uint64_t ObjCClassFromMetadata;
  void *v26;
  id v27;
  id v28;
  _QWORD v29[3];
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v29[1] = a2;
  v33 = a3;
  v8 = sub_1DC400220();
  MEMORY[0x1E0C80A78](v8);
  v29[2] = (char *)v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29[0] = sub_1DC40895C();
  MEMORY[0x1E0C80A78](v29[0]);
  sub_1DC0F0D38();
  MEMORY[0x1E0C80A78](v10);
  v11 = sub_1DC408548();
  MEMORY[0x1E0C80A78](v11);
  sub_1DC0EF854();
  v32 = v12;
  v34 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v30 = (char *)v29 - v16;
  v31 = a1;
  v17 = (_QWORD *)sub_1DC25A094(a1);
  swift_bridgeObjectRetain();
  v18 = swift_bridgeObjectRetain();
  sub_1DC259E04(v18, v17);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  MEMORY[0x1DF0C311C](v17, MEMORY[0x1E0DEA968], MEMORY[0x1E0DEA990], MEMORY[0x1E0DB5150]);
  swift_bridgeObjectRetain();
  result = sub_1DC40853C();
  if (a4 > a5)
  {
    __break(1u);
  }
  else
  {
    v20 = sub_1DC408830();
    swift_allocObject();
    swift_bridgeObjectRetain();
    v21 = sub_1DC408824();
    v36 = v20;
    v37 = MEMORY[0x1E0DB2768];
    v35 = v21;
    sub_1DC408950();
    v22 = v30;
    sub_1DC408638();
    v23 = v32;
    (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v14, v22, v32);
    sub_1DC089DA4(0, &qword_1EDB40030, (uint64_t (*)(uint64_t))sub_1DC0EF8D4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    sub_1DC0EF8D4();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1DC40DC10;
    sub_1DC4086A4();
    v24 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB2578];
    sub_1DC080808(&qword_1EDB3F460, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB2578], MEMORY[0x1E0DB2598]);
    sub_1DC080808(&qword_1EDB3F450, v24, MEMORY[0x1E0DB2588]);
    sub_1DC080808(&qword_1EDB3F458, v24, MEMORY[0x1E0DB2590]);
    sub_1DC4088F0();
    sub_1DC400EEC();
    sub_1DC40859C();
    type metadata accessor for Localized();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    v26 = (void *)objc_opt_self();
    v27 = objc_msgSend(v26, sel_bundleForClass_, ObjCClassFromMetadata);
    sub_1DC3FFC80();

    sub_1DC4085A8();
    v28 = objc_msgSend(v26, sel_bundleForClass_, ObjCClassFromMetadata);
    sub_1DC3FFC80();

    sub_1DC4085B4();
    return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v22, v23);
  }
  return result;
}

uint64_t sub_1DC258AC0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  unint64_t v31;
  char *v32;
  char v33;
  char *v34;
  void (*v35)(char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  char v41;
  char *v42;
  uint64_t v43;
  void (*v44)(char *, uint64_t, uint64_t);
  char *v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t result;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  char *v55;
  void (*v56)(char *, uint64_t);
  char *v57;
  char v58;
  char *v59;
  unint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  void (*v64)(char *, char *, uint64_t);
  double v65;
  double v66;
  unint64_t v67;
  double v68;
  double v69;
  char *v70;
  uint64_t v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  void (*v90)(uint64_t, uint64_t, uint64_t);
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  char *v97;
  char *v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  __int128 v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;

  v91 = a2;
  v87 = a1;
  v83 = type metadata accessor for StockChartDescriptor();
  v79 = *(_QWORD *)(v83 - 8);
  MEMORY[0x1E0C80A78](v83);
  v80 = v3;
  v81 = (uint64_t)&v77 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v95 = sub_1DC3FFFEC();
  v94 = *(_QWORD *)(v95 - 8);
  MEMORY[0x1E0C80A78](v95);
  v93 = (char *)&v77 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC089DA4(0, &qword_1EDB3F468, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB2578], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v5);
  v96 = (char *)&v77 - v6;
  v7 = sub_1DC4086A4();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v85 = (char *)&v77 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v77 - v11;
  MEMORY[0x1E0C80A78](v13);
  v99 = (char *)&v77 - v14;
  v78 = v15;
  MEMORY[0x1E0C80A78](v16);
  v92 = (char *)&v77 - v17;
  v18 = sub_1DC400F34();
  v100 = *(_QWORD *)(v18 - 8);
  v101 = v18;
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v77 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_1DC400F4C();
  v86 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  v97 = (char *)&v77 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v23);
  v98 = (char *)&v77 - v24;
  v82 = v2;
  swift_beginAccess();
  sub_1DC0824D4(v2 + 16, (uint64_t)&v105);
  v26 = v106;
  v25 = v107;
  __swift_project_boxed_opaque_existential_1(&v105, v106);
  v27 = *(_QWORD *)(v25 + 8);
  v90 = *(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 8);
  v103 = v26;
  v104 = v25;
  v28 = v86;
  __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v102);
  v90(v91, v26, v27);
  swift_beginAccess();
  __swift_destroy_boxed_opaque_existential_1(v2 + 16);
  v29 = v98;
  sub_1DC097DD0(&v102, v2 + 16);
  swift_endAccess();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v105);
  v30 = sub_1DC400F64();
  (*(void (**)(char *, _QWORD, uint64_t))(v28 + 104))(v29, *MEMORY[0x1E0DAEF78], v21);
  v91 = *(_QWORD *)(v30 + 16);
  if (!v91)
  {
    (*(void (**)(char *, uint64_t))(v28 + 8))(v29, v21);
    goto LABEL_23;
  }
  v31 = (*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
  v84 = v30;
  v32 = v97;
  v90 = *(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 16);
  v90((uint64_t)v97, v30 + v31, v21);
  v89 = sub_1DC080808(&qword_1EDB28D78, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAEF80], MEMORY[0x1E0DAEF88]);
  v33 = sub_1DC4089F8();
  v34 = v32;
  v35 = *(void (**)(char *, uint64_t))(v28 + 8);
  v35(v34, v21);
  if ((v33 & 1) == 0)
  {
    if (v91 != 1)
    {
      v86 = *(_QWORD *)(v28 + 72);
      v48 = v84 + v86 + v31;
      v49 = 1;
      v88 = v7;
      while (1)
      {
        v50 = v97;
        result = ((uint64_t (*)(char *, unint64_t, uint64_t))v90)(v97, v48, v21);
        v52 = v49 + 1;
        if (__OFADD__(v49, 1))
          break;
        v53 = v20;
        v54 = v8;
        v55 = v12;
        v56 = v35;
        v57 = v50;
        v58 = sub_1DC4089F8();
        v59 = v57;
        v35 = v56;
        v12 = v55;
        v8 = v54;
        v20 = v53;
        v7 = v88;
        v35(v59, v21);
        if ((v58 & 1) != 0)
          goto LABEL_3;
        ++v49;
        v48 += v86;
        if (v52 == v91)
          goto LABEL_22;
      }
      __break(1u);
      goto LABEL_36;
    }
LABEL_22:
    v35(v98, v21);
    goto LABEL_23;
  }
LABEL_3:
  v35(v98, v21);
  swift_bridgeObjectRelease();
  v36 = *(_QWORD *)(v87 + *(int *)(v83 + 20));
  v37 = *(_QWORD *)(v36 + 16);
  if (!v37)
  {
    v39 = MEMORY[0x1E0DEE9D8];
    v60 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
    if (v60)
      goto LABEL_25;
LABEL_23:
    swift_bridgeObjectRelease();
    return 0;
  }
  v38 = v36 + ((*(unsigned __int8 *)(v100 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v100 + 80));
  v98 = *(char **)(v100 + 72);
  v97 = *(char **)(v100 + 16);
  v91 = v36;
  swift_bridgeObjectRetain();
  v39 = MEMORY[0x1E0DEE9D8];
  v40 = (uint64_t)v96;
  do
  {
    ((void (*)(char *, uint64_t, uint64_t))v97)(v20, v38, v101);
    sub_1DC400F28();
    if ((v41 & 1) != 0)
    {
      v43 = 1;
    }
    else
    {
      v42 = v93;
      sub_1DC400F04();
      sub_1DC3FFF98();
      (*(void (**)(char *, uint64_t))(v94 + 8))(v42, v95);
      sub_1DC408DE8();
      sub_1DC40868C();
      v43 = 0;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(v40, v43, 1, v7);
    (*(void (**)(char *, uint64_t))(v100 + 8))(v20, v101);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v40, 1, v7) == 1)
    {
      sub_1DC2598DC(v40);
    }
    else
    {
      v44 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 32);
      v45 = v92;
      v44(v92, v40, v7);
      v44(v99, (uint64_t)v45, v7);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v39 = sub_1DC0EF78C(0, *(_QWORD *)(v39 + 16) + 1, 1, v39);
      v47 = *(_QWORD *)(v39 + 16);
      v46 = *(_QWORD *)(v39 + 24);
      if (v47 >= v46 >> 1)
        v39 = sub_1DC0EF78C(v46 > 1, v47 + 1, 1, v39);
      *(_QWORD *)(v39 + 16) = v47 + 1;
      v44((char *)(v39+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(_QWORD *)(v8 + 72) * v47), (uint64_t)v99, v7);
      v40 = (uint64_t)v96;
    }
    v38 += (uint64_t)v98;
    --v37;
  }
  while (v37);
  swift_bridgeObjectRelease();
  v60 = *(_QWORD *)(v39 + 16);
  if (!v60)
    goto LABEL_23;
LABEL_25:
  v61 = *(unsigned __int8 *)(v8 + 80);
  v100 = ~v61;
  v101 = v61;
  v62 = (char *)(v39 + ((v61 + 32) & ~v61));
  v63 = *(_QWORD *)(v8 + 72);
  v64 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
  swift_bridgeObjectRetain();
  v65 = 0.0;
  v66 = 1.79769313e308;
  v99 = v62;
  v67 = v60;
  do
  {
    v64(v12, v62, v7);
    sub_1DC408680();
    if (v66 >= v68)
      v66 = v68;
    sub_1DC408680();
    if (v69 > v65)
      v65 = v69;
    (*(void (**)(char *, uint64_t))(v8 + 8))(v12, v7);
    v62 += v63;
    --v67;
  }
  while (v67);
  result = swift_bridgeObjectRelease();
  if (v60 <= *(_QWORD *)(v39 + 16))
  {
    v70 = &v99[v63 * (v60 - 1)];
    v71 = v81;
    sub_1DC259930(v87, v81);
    v64(v85, v70, v7);
    v72 = (*(unsigned __int8 *)(v79 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v79 + 80);
    v73 = (v80 + v101 + v72) & v100;
    v74 = (v78 + v73 + 7) & 0xFFFFFFFFFFFFFFF8;
    v75 = swift_allocObject();
    *(_QWORD *)(v75 + 16) = v82;
    sub_1DC259AA4(v71, v75 + v72);
    (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v75 + v73, v85, v7);
    *(_QWORD *)(v75 + v74) = v39;
    v76 = v75 + ((v74 + 15) & 0xFFFFFFFFFFFFFFF8);
    *(_OWORD *)v76 = xmmword_1DC41DC60;
    *(double *)(v76 + 16) = v66;
    *(double *)(v76 + 24) = v65;
    sub_1DC25A648(0, &qword_1EDB3F488, MEMORY[0x1E0DB2538], &qword_1EDB3F448, MEMORY[0x1E0DB2530]);
    swift_allocObject();
    swift_retain();
    return sub_1DC4086BC();
  }
LABEL_36:
  __break(1u);
  return result;
}

