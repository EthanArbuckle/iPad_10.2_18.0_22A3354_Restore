uint64_t sub_1DC25941C@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>, double a3@<D2>, double a4@<D3>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(uint64_t);
  _QWORD v21[10];

  v21[3] = a2;
  v7 = sub_1DC408578();
  MEMORY[0x1E0C80A78](v7);
  v21[2] = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1DC408710();
  MEMORY[0x1E0C80A78](v9);
  v21[1] = (char *)v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1DC40895C();
  MEMORY[0x1E0C80A78](v11);
  sub_1DC0F0D38();
  MEMORY[0x1E0C80A78](v12);
  v13 = sub_1DC408548();
  MEMORY[0x1E0C80A78](v13);
  sub_1DC0EF854();
  MEMORY[0x1E0C80A78](v14);
  v15 = (_QWORD *)sub_1DC25A094(a1);
  swift_bridgeObjectRetain();
  v16 = swift_bridgeObjectRetain();
  sub_1DC259E04(v16, v15);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  MEMORY[0x1DF0C311C](v15, MEMORY[0x1E0DEA968], MEMORY[0x1E0DEA990], MEMORY[0x1E0DB5150]);
  result = sub_1DC40853C();
  if (a3 > a4)
  {
    __break(1u);
  }
  else
  {
    v18 = sub_1DC408830();
    swift_allocObject();
    v19 = sub_1DC408824();
    v21[7] = v18;
    v21[8] = MEMORY[0x1E0DB2768];
    v21[4] = v19;
    sub_1DC408950();
    sub_1DC408638();
    sub_1DC089DA4(0, &qword_1EDB40030, (uint64_t (*)(uint64_t))sub_1DC0EF8D4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    sub_1DC0EF8D4();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1DC40DC10;
    sub_1DC4086A4();
    v20 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB2578];
    sub_1DC080808(&qword_1EDB3F460, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB2578], MEMORY[0x1E0DB2598]);
    sub_1DC080808(&qword_1EDB3F450, v20, MEMORY[0x1E0DB2588]);
    sub_1DC080808(&qword_1EDB3F458, v20, MEMORY[0x1E0DB2590]);
    sub_1DC4088F0();
    sub_1DC40856C();
    sub_1DC408704();
    return sub_1DC40865C();
  }
  return result;
}

uint64_t type metadata accessor for StockChartModelFactoryProvider()
{
  return objc_opt_self();
}

_QWORD *initializeBufferWithCopyOfBuffer for StockChartModelFactoryProviderOptions(_QWORD *a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  id v5;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = v3;
  return a1;
}

uint64_t assignWithCopy for StockChartModelFactoryProviderOptions(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  return a1;
}

uint64_t assignWithTake for StockChartModelFactoryProviderOptions(uint64_t a1, _QWORD *a2)
{
  void *v4;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *a2;

  *(_QWORD *)(a1 + 8) = a2[1];
  return a1;
}

ValueMetadata *type metadata accessor for StockChartModelFactoryProviderOptions()
{
  return &type metadata for StockChartModelFactoryProviderOptions;
}

uint64_t sub_1DC2598DC(uint64_t a1)
{
  uint64_t v2;

  sub_1DC089DA4(0, &qword_1EDB3F468, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB2578], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DC259930(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for StockChartDescriptor();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC259974()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = type metadata accessor for StockChartDescriptor();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = sub_1DC4086A4();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (v3 + v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  swift_release();
  v8 = v0 + v3;
  v9 = sub_1DC400F7C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  swift_bridgeObjectRelease();
  v10 = v8 + *(int *)(v1 + 24);
  v11 = sub_1DC4002BC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1DC259AA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for StockChartDescriptor();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC259AE8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v3 = *(_QWORD *)(type metadata accessor for StockChartDescriptor() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v3 + 64);
  v6 = sub_1DC4086A4();
  v7 = (((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64)
        + ((v4 + v5 + *(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80))
        + 7) & 0xFFFFFFFFFFFFFFF8)
      + 15) & 0xFFFFFFFFFFFFFFF8;
  return sub_1DC25941C(v1 + v4, a1, *(double *)(v1 + v7 + 16), *(double *)(v1 + v7 + 24));
}

uint64_t sub_1DC259B8C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11;
  _BOOL4 v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  int v16;
  int v17;

  if (!a4)
  {
    __break(1u);
    goto LABEL_16;
  }
  v11 = result;
  if (result)
  {
    if (result != 0x8000000000000000 || a4 != -1)
    {
      v12 = *(_QWORD *)(*(_QWORD *)a5 + 16) - 1 == result;
      goto LABEL_7;
    }
LABEL_16:
    __break(1u);
    return result;
  }
  v12 = 1;
LABEL_7:
  if (sub_1DC408698() == a2 && v13 == a3)
    v14 = 1;
  else
    v14 = sub_1DC4099E8();
  swift_bridgeObjectRelease();
  v15 = type metadata accessor for StockChartDescriptor();
  v16 = sub_1DC213550(a2, a3, *(_QWORD **)(a7 + *(int *)(v15 + 32)));
  if (v11 % a4)
    v17 = 1;
  else
    v17 = v12;
  return (v17 | v14 | v16) & 1;
}

uint64_t sub_1DC259C94(uint64_t result, uint64_t (*a2)(unint64_t, uint64_t, uint64_t))
{
  unint64_t v2;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t *v8;
  unint64_t i;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  uint64_t v15;

  v2 = *(_QWORD *)(result + 16);
  if (!v2)
    return MEMORY[0x1E0DEE9D8];
  v4 = 0;
  v5 = result + 40;
  v6 = MEMORY[0x1E0DEE9D8];
  v15 = result + 40;
  do
  {
    if (v4 <= v2)
      v7 = v2;
    else
      v7 = v4;
    v8 = (uint64_t *)(v5 + 16 * v4);
    for (i = v4; ; ++i)
    {
      if (v7 == i)
      {
        __break(1u);
        return result;
      }
      v11 = *(v8 - 1);
      v10 = *v8;
      v4 = i + 1;
      swift_bridgeObjectRetain();
      if ((a2(i, v11, v10) & 1) != 0)
        break;
      result = swift_bridgeObjectRelease();
      v8 += 2;
      if (v2 == v4)
        return v6;
    }
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
      result = sub_1DC2AD6F8(0, *(_QWORD *)(v6 + 16) + 1, 1);
    v13 = *(_QWORD *)(v6 + 16);
    v12 = *(_QWORD *)(v6 + 24);
    if (v13 >= v12 >> 1)
      result = sub_1DC2AD6F8(v12 > 1, v13 + 1, 1);
    *(_QWORD *)(v6 + 16) = v13 + 1;
    v14 = (_QWORD *)(v6 + 24 * v13);
    v14[4] = i;
    v14[5] = v11;
    v14[6] = v10;
    v5 = v15;
  }
  while (v2 - 1 != i);
  return v6;
}

uint64_t sub_1DC259E04(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  _QWORD *v31;
  unint64_t v32;
  void (*v33)(char *, uint64_t, uint64_t, __n128);
  uint64_t v34;
  uint64_t v35;
  char *v36;
  _QWORD *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;

  v5 = sub_1DC4086A4();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v36 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v8);
  v39 = (char *)&v30 - v10;
  result = MEMORY[0x1E0DEE9D8];
  v40 = MEMORY[0x1E0DEE9D8];
  v35 = *(_QWORD *)(a1 + 16);
  if (!v35)
    return result;
  v30 = v2;
  v12 = 0;
  v13 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v14 = *(_QWORD *)(v6 + 72);
  v37 = a2;
  v38 = v14;
  v32 = v13;
  v34 = a1 + v13;
  v33 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v6 + 16);
  v31 = a2 + 7;
  while (1)
  {
    v15 = v5;
    v33(v39, v34 + v38 * v12, v5, v9);
    v16 = sub_1DC408698();
    v18 = v17;
    v19 = a2[2];
    if (v19)
    {
      v20 = v16;
      v21 = a2[4] == v16 && a2[5] == v17;
      if (v21 || (result = sub_1DC4099E8(), (result & 1) != 0))
      {
LABEL_11:
        swift_bridgeObjectRelease();
        v22 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
        v5 = v15;
        v22(v36, v39, v15);
        v23 = v40;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1DC2AD714(0, *(_QWORD *)(v23 + 16) + 1, 1);
          v23 = v40;
        }
        v25 = *(_QWORD *)(v23 + 16);
        v24 = *(_QWORD *)(v23 + 24);
        if (v25 >= v24 >> 1)
        {
          sub_1DC2AD714(v24 > 1, v25 + 1, 1);
          v23 = v40;
        }
        *(_QWORD *)(v23 + 16) = v25 + 1;
        v22((char *)(v23 + v32 + v25 * v38), v36, v15);
        v40 = v23;
        a2 = v37;
        goto LABEL_4;
      }
      a2 = v37;
      if (v19 != 1)
        break;
    }
LABEL_3:
    swift_bridgeObjectRelease();
    v5 = v15;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v39, v15);
LABEL_4:
    if (++v12 == v35)
      return v40;
  }
  v26 = v31;
  v27 = 1;
  while (1)
  {
    v28 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (*(v26 - 1) == v20 && *v26 == v18)
      goto LABEL_11;
    result = sub_1DC4099E8();
    if ((result & 1) != 0)
      goto LABEL_11;
    v26 += 2;
    ++v27;
    v21 = v28 == v19;
    a2 = v37;
    if (v21)
      goto LABEL_3;
  }
  __break(1u);
  return result;
}

uint64_t sub_1DC25A094(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  double v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  float v10;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v2 = type metadata accessor for StockChartDescriptor();
  v3 = *(_QWORD *)(a1 + *(int *)(v2 + 28));
  v28 = v3;
  swift_bridgeObjectRetain();
  result = sub_1DC4086F8();
  v6 = v5 / 3.0;
  if ((~*(_QWORD *)&v6 & 0x7FF0000000000000) == 0)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  if (v6 <= -9.22337204e18)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  if (v6 >= 9.22337204e18)
  {
LABEL_33:
    __break(1u);
    return result;
  }
  v7 = (uint64_t)v6;
  v8 = *(_QWORD *)(v3 + 16);
  if (v8 > (uint64_t)v6)
  {
    v25 = a1;
    v26 = *(int *)(v2 + 32);
    v24 = (uint64_t)v6;
    while (1)
    {
      v9 = *(_QWORD *)(*(_QWORD *)(a1 + v26) + 16);
      if (v9 > 3)
      {
        if (v9 >= v8)
          goto LABEL_24;
      }
      else if ((unint64_t)v8 <= 4)
      {
        goto LABEL_24;
      }
      if (__OFSUB__(v8, v7))
        break;
      v10 = floorf((float)v8 / (float)(v8 - v7));
      if ((~LODWORD(v10) & 0x7F800000) == 0)
        goto LABEL_27;
      if (v10 <= -9.2234e18)
        goto LABEL_28;
      if (v10 >= 9.2234e18)
        goto LABEL_29;
      if (__OFADD__((uint64_t)v10, 1))
        goto LABEL_30;
      MEMORY[0x1E0C80A78](result);
      v11 = swift_bridgeObjectRetain();
      v12 = sub_1DC259C94(v11, (uint64_t (*)(unint64_t, uint64_t, uint64_t))sub_1DC25A41C);
      swift_bridgeObjectRelease();
      v13 = *(_QWORD *)(v12 + 16);
      if (v13)
      {
        v27 = MEMORY[0x1E0DEE9D8];
        sub_1DC0F0894(0, v13, 0);
        v14 = (uint64_t *)(v12 + 48);
        do
        {
          v15 = *(v14 - 1);
          v16 = *v14;
          v18 = *(_QWORD *)(v27 + 16);
          v17 = *(_QWORD *)(v27 + 24);
          swift_bridgeObjectRetain();
          if (v18 >= v17 >> 1)
            sub_1DC0F0894(v17 > 1, v18 + 1, 1);
          *(_QWORD *)(v27 + 16) = v18 + 1;
          v19 = v27 + 16 * v18;
          *(_QWORD *)(v19 + 32) = v15;
          *(_QWORD *)(v19 + 40) = v16;
          v14 += 3;
          --v13;
        }
        while (v13);
        swift_bridgeObjectRelease();
        v7 = v24;
        a1 = v25;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      sub_1DC0F0CA0();
      sub_1DC080808(&qword_1EDB3F790, (uint64_t (*)(uint64_t))sub_1DC0F0CA0, MEMORY[0x1E0DEAF38]);
      v20 = sub_1DC408BFC();
      swift_bridgeObjectRelease();
      v21 = *(_QWORD *)(v20 + 16);
      v22 = *(_QWORD *)(v28 + 16);
      result = swift_bridgeObjectRelease();
      if (v21 == v22)
        return v20;
      v28 = v20;
      v8 = *(_QWORD *)(v20 + 16);
      if (v8 <= v7)
        goto LABEL_24;
    }
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
LABEL_24:
  sub_1DC0F0CA0();
  sub_1DC080808(&qword_1EDB3F790, (uint64_t (*)(uint64_t))sub_1DC0F0CA0, MEMORY[0x1E0DEAF38]);
  swift_bridgeObjectRetain();
  v23 = sub_1DC408BFC();
  swift_bridgeObjectRelease_n();
  return v23;
}

uint64_t sub_1DC25A41C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;

  return sub_1DC259B8C(a1, a2, a3, v3[2], v3[3], v3[4], v3[5]);
}

uint64_t sub_1DC25A428()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = type metadata accessor for StockChartDescriptor();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = sub_1DC4086A4();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (v3 + v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  swift_release();
  v8 = v0 + v3;
  v9 = sub_1DC400F7C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  swift_bridgeObjectRelease();
  v10 = v8 + *(int *)(v1 + 24);
  v11 = sub_1DC4002BC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1DC25A588@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v3 = *(_QWORD *)(type metadata accessor for StockChartDescriptor() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v3 + 64);
  v6 = sub_1DC4086A4();
  v7 = (((((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64)
          + ((v4 + v5 + *(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80))
          + 7) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 15) & 0xFFFFFFFFFFFFFFF8;
  return sub_1DC2585B0(v1 + v4, *(_QWORD *)(v1 + ((((v7 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFF8)), a1, *(double *)(v1 + v7), *(double *)(v1 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8)));
}

void sub_1DC25A648(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), unint64_t *a4, uint64_t a5)
{
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    a3(255);
    sub_1DC080808(a4, a3, a5);
    v9 = sub_1DC4086B0();
    if (!v10)
      atomic_store(v9, a2);
  }
}

ValueMetadata *type metadata accessor for StockChartModelFactoryProvider.Axis()
{
  return &type metadata for StockChartModelFactoryProvider.Axis;
}

uint64_t sub_1DC25A6D8@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1DC0DA4E0(a1, a2);
}

uint64_t sub_1DC25A6F0(uint64_t a1)
{
  return sub_1DC133248(a1, 0xD000000000000024, 0x80000001DC440870, &qword_1F0350000);
}

uint64_t static Settings.ForYou.Ticker.tapToDismiss.getter()
{
  return sub_1DC10D910(&qword_1F034B048);
}

uint64_t sub_1DC25A730()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  _QWORD v9[2];

  v0 = sub_1DC401354();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1DC401348();
  v5 = MEMORY[0x1E0C80A78](v4);
  (*(void (**)(char *, _QWORD, __n128))(v7 + 104))((char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E0DB57E8], v5);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB5800], v0);
  v9[0] = 0xD00000000000003ELL;
  v9[1] = 0x80000001DC440830;
  sub_1DC08A0F4(0, &qword_1EDB29108);
  swift_allocObject();
  result = sub_1DC4013A8();
  qword_1F0350008 = result;
  return result;
}

uint64_t static Settings.ForYou.ConfigOverrides.url.getter()
{
  if (qword_1F034B050 != -1)
    swift_once();
  return swift_retain();
}

uint64_t Settings.ForYou.ConfigOverrides.__allocating_init(key:defaultValue:access:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  v5 = sub_1DC401348();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a4, v5);
  v9 = sub_1DC4012F4();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a4, v5);
  return v9;
}

uint64_t Settings.ForYou.ConfigOverrides.init(key:defaultValue:access:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v5 = sub_1DC401348();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v6 + 16))((char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a4, v5, v7);
  v9 = sub_1DC4012F4();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a4, v5);
  return v9;
}

uint64_t Settings.ForYou.ConfigOverrides.__deallocating_deinit()
{
  _s11TeaSettings0B0C8StocksUIE4TipsV8EarningsV15ConfigOverridesCfd_0();
  return swift_deallocClassInstance();
}

uint64_t sub_1DC25AA70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;

  v0 = sub_1DC401348();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v10 - v6;
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v1 + 104))((char *)&v10 - v6, *MEMORY[0x1E0DB57E8], v0, v5);
  type metadata accessor for Settings.ForYou.ConfigOverrides();
  swift_allocObject();
  (*(void (**)(char *, char *, uint64_t))(v1 + 16))(v3, v7, v0);
  v8 = sub_1DC4012F4();
  result = (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v7, v0);
  qword_1EDB28F58 = v8;
  return result;
}

uint64_t static Settings.ForYou.configOverrides.getter()
{
  return sub_1DC10D910(&qword_1EDB28F68);
}

uint64_t static Settings.ForYou.Card.systemDetents.getter()
{
  return sub_1DC10D910(&qword_1EDB28F80);
}

uint64_t sub_1DC25ABB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t);
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;

  v0 = sub_1DC401348();
  v20 = *(_QWORD *)(v0 - 8);
  v21 = v0;
  MEMORY[0x1E0C80A78](v0);
  v19 = (char *)&v16 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_1DC401354();
  v17 = *(_QWORD *)(v2 - 8);
  v18 = v2;
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1DC40793C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v16 - v10;
  sub_1DC25AF84();
  v16 = v12;
  v13 = *MEMORY[0x1E0D5BC50];
  v14 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 104);
  v14(v11, v13, v5);
  sub_1DC089DA4(0, &qword_1EDB28500, (uint64_t (*)(uint64_t))sub_1DC25AFF4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  sub_1DC25AFF4(0);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1DC40FA70;
  v14(v8, v13, v5);
  sub_1DC401360();
  v14(v8, *MEMORY[0x1E0D5BC58], v5);
  sub_1DC401360();
  v14(v8, *MEMORY[0x1E0D5BC48], v5);
  sub_1DC401360();
  (*(void (**)(char *, _QWORD, uint64_t))(v17 + 104))(v4, *MEMORY[0x1E0DB5800], v18);
  (*(void (**)(char *, _QWORD, uint64_t))(v20 + 104))(v19, *MEMORY[0x1E0DB57E0], v21);
  sub_1DC25B010(&qword_1EDB2AF08, MEMORY[0x1E0D5BC38]);
  result = sub_1DC401378();
  qword_1EDB28F88 = result;
  return result;
}

uint64_t static Settings.ForYou.Feed.autoRefreshStrategy.getter()
{
  return sub_1DC10D910(&qword_1EDB27488);
}

ValueMetadata *type metadata accessor for Settings.ForYou()
{
  return &type metadata for Settings.ForYou;
}

ValueMetadata *type metadata accessor for Settings.ForYou.Ticker()
{
  return &type metadata for Settings.ForYou.Ticker;
}

uint64_t type metadata accessor for Settings.ForYou.ConfigOverrides()
{
  uint64_t result;

  result = qword_1EDB28F20;
  if (!qword_1EDB28F20)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1DC25AF20()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1DC25AF5C()
{
  return type metadata accessor for Settings.ForYou.ConfigOverrides();
}

ValueMetadata *type metadata accessor for Settings.ForYou.Card()
{
  return &type metadata for Settings.ForYou.Card;
}

ValueMetadata *type metadata accessor for Settings.ForYou.Feed()
{
  return &type metadata for Settings.ForYou.Feed;
}

void sub_1DC25AF84()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB290F8)
  {
    sub_1DC40793C();
    sub_1DC25B010(&qword_1EDB275C0, MEMORY[0x1E0D5BC40]);
    v0 = sub_1DC40139C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB290F8);
  }
}

void sub_1DC25AFF4(uint64_t a1)
{
  sub_1DC089DA4(a1, &qword_1EDB290E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5BC60], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB5820]);
}

uint64_t sub_1DC25B010(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_1DC40793C();
    result = MEMORY[0x1DF0CAB8C](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DC25B050()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  void (*v6)(char *, uint64_t, uint64_t);
  void (*v7)(char *, uint64_t);
  uint64_t v9;

  v1 = sub_1DC406040();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 128));
  sub_1DC407B88();
  sub_1DC25CD9C();
  v5 = *MEMORY[0x1E0DBB2B8];
  v6 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 104);
  v6(v4, v5, v1);
  sub_1DC4090B8();
  v7 = *(void (**)(char *, uint64_t))(v2 + 8);
  v7(v4, v1);
  sub_1DC25CD00(0, &qword_1EDB2A160, (uint64_t (*)(uint64_t))type metadata accessor for BrandingTitleView, (unint64_t *)&unk_1EDB2F690, (uint64_t)&unk_1DC41D52C);
  v6(v4, v5, v1);
  sub_1DC4090B8();
  v7(v4, v1);
  sub_1DC25CD00(0, &qword_1EDB2A170, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedMastheadView, &qword_1EDB33158, (uint64_t)&unk_1DC4181BC);
  v6(v4, v5, v1);
  sub_1DC4090B8();
  return ((uint64_t (*)(char *, uint64_t))v7)(v4, v1);
}

uint64_t sub_1DC25B204(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  void (*v35)(id, uint64_t, uint64_t);
  uint64_t v36;
  int EnumCaseMultiPayload;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  void *v44;
  uint64_t v45;
  uint64_t (*v46)(uint64_t, uint64_t);
  id v47;
  void *v48;
  char *v49;
  void (*v50)(char *, uint64_t, uint64_t);
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(char *, uint64_t, uint64_t);
  char *v59;
  uint64_t v60;
  uint64_t v61;
  int *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  id v68;
  char *v69;
  char *v70;
  id v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  id v80;
  char *v81;
  char *v82;
  id v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  id v90;
  void *v91;
  id v92;
  void *v93;
  uint64_t v94;
  id v95;
  void *v96;
  uint64_t v97;
  id v98;
  char *v99;
  id v100;
  void *v101;
  uint64_t (*v102)(_QWORD);
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t *v107;
  uint64_t v108;
  char *v109;
  void *v110;
  double v111;
  double v112;
  double v113;
  double v114;
  void *v115;
  uint64_t v116;
  uint64_t (*v117)(uint64_t, uint64_t);
  void *v118;
  uint64_t v119;
  char *v120;
  void *v121;
  uint64_t v122;
  id v123;
  uint64_t result;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  char *v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  void *v146;
  double v147;
  id v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161[5];
  __int128 v162;
  __int128 v163;
  char v164;

  v148 = a4;
  v147 = *(double *)&a2;
  *(double *)&v139 = COERCE_DOUBLE(sub_1DC405848());
  v138 = *(_QWORD *)(v139 - 8);
  MEMORY[0x1E0C80A78](v139);
  v140 = (char *)&v125 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1DC4011C8();
  MEMORY[0x1E0C80A78](v7);
  v133 = (char *)&v125 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for PriceViewModel();
  MEMORY[0x1E0C80A78](v9);
  v136 = (uint64_t)&v125 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v132 = sub_1DC4008EC();
  v152 = *(_QWORD *)(v132 - 8);
  MEMORY[0x1E0C80A78](v132);
  v131 = (char *)&v125 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0FF558(0);
  MEMORY[0x1E0C80A78](v12);
  v130 = (char *)&v125 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0FED34(0);
  MEMORY[0x1E0C80A78](v14);
  v129 = (uint64_t)&v125 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v151 = (uint64_t)&v125 - v17;
  *(double *)&v150 = COERCE_DOUBLE(sub_1DC4010E4());
  v149 = *(_QWORD *)(v150 - 8);
  MEMORY[0x1E0C80A78](v150);
  v127 = (char *)&v125 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v128 = type metadata accessor for StockViewModel();
  v134 = *(_QWORD *)(v128 - 8);
  MEMORY[0x1E0C80A78](v128);
  v137 = (char *)&v125 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v135 = v19;
  MEMORY[0x1E0C80A78](v20);
  v153 = (char *)&v125 - v21;
  v22 = type metadata accessor for StockFeedMastheadViewLayoutAttributes();
  MEMORY[0x1E0C80A78](v22);
  v155 = (uint64_t)&v125 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v126 = type metadata accessor for StockFeedMastheadModel();
  MEMORY[0x1E0C80A78](v126);
  v154 = (uint64_t)&v125 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v142 = sub_1DC400280();
  v144 = *(_QWORD *)(v142 - 8);
  MEMORY[0x1E0C80A78](v142);
  v141 = (char *)&v125 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v145 = sub_1DC406040();
  v143 = *(_QWORD *)(v145 - 8);
  MEMORY[0x1E0C80A78](v145);
  v27 = (char *)&v125 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = type metadata accessor for StockFeedLayoutSectionDescriptor(0);
  MEMORY[0x1E0C80A78](v28);
  v30 = (char *)&v125 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v156 = v4;
  swift_beginAccess();
  sub_1DC0824D4(v4 + 64, (uint64_t)&v158);
  v32 = v159;
  v31 = v160;
  __swift_project_boxed_opaque_existential_1(&v158, v159);
  v146 = a3;
  v33 = objc_msgSend(a3, sel_traitCollection);
  v34 = *(_QWORD *)(v31 + 8);
  v35 = *(void (**)(id, uint64_t, uint64_t))(v34 + 8);
  v161[3] = v32;
  v161[4] = v31;
  __swift_allocate_boxed_opaque_existential_1(v161);
  v35(v33, v32, v34);

  v36 = (uint64_t)v30;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v158);
  sub_1DC141E14();
  sub_1DC405314();
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    sub_1DC142614();
    v39 = (uint64_t)&v30[*(int *)(v38 + 48)];
    v40 = (uint64_t)v30;
    v41 = v154;
    sub_1DC092ED0(v40, v154, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedMastheadModel);
    v42 = v155;
    sub_1DC092ED0(v39, v155, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedMastheadViewLayoutAttributes);
    sub_1DC25CD00(0, &qword_1EDB2A170, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedMastheadView, &qword_1EDB33158, (uint64_t)&unk_1DC4181BC);
    sub_1DC405ECC();
    v43 = v141;
    sub_1DC405EE4();
    v44 = (void *)sub_1DC4090A0();
    (*(void (**)(char *, uint64_t))(v144 + 8))(v43, v142);
    (*(void (**)(char *, uint64_t))(v143 + 8))(v27, v145);
    v45 = *(_QWORD *)(v31 + 16);
    v46 = *(uint64_t (**)(uint64_t, uint64_t))(v45 + 72);
    v47 = v44;
    v48 = (void *)v46(v32, v45);
    v148 = v47;
    objc_msgSend(v47, sel_setBackgroundColor_, v48);

    v49 = (char *)sub_1DC405350();
    sub_1DC237694(v41, v42, v49);

    v50 = *(void (**)(char *, uint64_t, uint64_t))(v149 + 16);
    v51 = v127;
    v52 = v150;
    v50(v127, v41, v150);
    v53 = v126;
    sub_1DC0990BC(v41 + *(int *)(v126 + 20), v151, (uint64_t (*)(_QWORD))sub_1DC0FED34);
    v54 = type metadata accessor for StockSparklineViewModel(0);
    v55 = (uint64_t)v130;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 56))(v130, 1, 1, v54);
    v56 = *(int *)(v53 + 28);
    v57 = type metadata accessor for QuoteSummaryViewModel();
    v58 = *(void (**)(char *, uint64_t, uint64_t))(v152 + 16);
    v59 = v131;
    v60 = v132;
    v58(v131, v41 + v56 + *(int *)(v57 + 28), v132);
    LOBYTE(v53) = *(_BYTE *)(v41 + *(int *)(v53 + 32));
    v61 = (uint64_t)v153;
    v50(v153, (uint64_t)v51, v52);
    v62 = (int *)v128;
    v63 = v151;
    sub_1DC0990BC(v151, v61 + *(int *)(v128 + 20), (uint64_t (*)(_QWORD))sub_1DC0FED34);
    sub_1DC0990BC(v55, v61 + v62[6], (uint64_t (*)(_QWORD))sub_1DC0FF558);
    v58((char *)(v61 + v62[8]), (uint64_t)v59, v60);
    *(_BYTE *)(v61 + v62[9]) = v53;
    v64 = v129;
    sub_1DC0990BC(v63, v129, (uint64_t (*)(_QWORD))sub_1DC0FED34);
    v65 = v133;
    sub_1DC401078();
    v66 = v136;
    sub_1DC0FE8A4(v64, v65, 9666786, 0xA300000000000000, v136);
    (*(void (**)(char *, uint64_t))(v152 + 8))(v59, v60);
    sub_1DC0926D8(v55, (uint64_t (*)(_QWORD))sub_1DC0FF558);
    sub_1DC0926D8(v63, (uint64_t (*)(_QWORD))sub_1DC0FED34);
    (*(void (**)(char *, uint64_t))(v149 + 8))(v51, v150);
    v67 = v61;
    sub_1DC092ED0(v66, v61 + v62[7], (uint64_t (*)(_QWORD))type metadata accessor for PriceViewModel);
    v68 = v148;
    v69 = (char *)sub_1DC405350();
    v70 = (char *)*(id *)&v69[OBJC_IVAR____TtC8StocksUI21StockFeedMastheadView_watchStockButton];

    v71 = *(id *)&v70[qword_1EDB33138];
    v72 = swift_allocObject();
    v73 = v156;
    swift_weakInit();
    v74 = swift_allocObject();
    v75 = v68;
    swift_unknownObjectWeakInit();
    v76 = (uint64_t)v137;
    sub_1DC0990BC(v67, (uint64_t)v137, (uint64_t (*)(_QWORD))type metadata accessor for StockViewModel);
    v77 = *(unsigned __int8 *)(v134 + 80);
    v78 = (v77 + 32) & ~v77;
    v152 = v77 | 7;
    v79 = swift_allocObject();
    *(_QWORD *)(v79 + 16) = v72;
    *(_QWORD *)(v79 + 24) = v74;
    sub_1DC092ED0(v76, v79 + v78, (uint64_t (*)(_QWORD))type metadata accessor for StockViewModel);

    v80 = v75;
    swift_release();
    v81 = (char *)sub_1DC405350();
    v82 = (char *)*(id *)&v81[OBJC_IVAR____TtC8StocksUI21StockFeedMastheadView_shareButton];

    v83 = *(id *)&v82[qword_1EDB33138];
    v84 = swift_allocObject();
    swift_weakInit();
    v85 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v86 = (uint64_t)v153;
    sub_1DC0990BC((uint64_t)v153, v76, (uint64_t (*)(_QWORD))type metadata accessor for StockViewModel);
    v87 = swift_allocObject();
    *(_QWORD *)(v87 + 16) = v84;
    *(_QWORD *)(v87 + 24) = v85;
    sub_1DC092ED0(v76, v87 + v78, (uint64_t (*)(_QWORD))type metadata accessor for StockViewModel);

    swift_release();
    v157 = MEMORY[0x1E0DEE9D8];
    (*(void (**)(char *, _QWORD, uint64_t))(v138 + 104))(v140, *MEMORY[0x1E0DB9ED8], v139);
    v88 = *(_QWORD *)(v73 + 160);
    v159 = sub_1DC4018AC();
    v160 = sub_1DC080808((unint64_t *)&qword_1EDB29180, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8638], MEMORY[0x1E0D59B68]);
    v158 = v88;
    swift_retain();
    v89 = (char *)sub_1DC405350();
    v90 = *(id *)&v89[OBJC_IVAR____TtC8StocksUI21StockFeedMastheadView_moreOptionsButton];

    v162 = 0u;
    v163 = 0u;
    v164 = 1;
    sub_1DC405434();
    swift_allocObject();
    sub_1DC40541C();
    if (sub_1DC30788C(v86, 1))
    {
      v91 = (void *)sub_1DC4045D0();
      swift_release();
      if (v91)
      {
        v92 = v91;
        MEMORY[0x1DF0C9530]();
        if (*(_QWORD *)((v157 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v157 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1DC408D4C();
        sub_1DC408D64();
        sub_1DC408CF8();

      }
    }
    _s5TeaUI15ContextMenuItemC06StocksB0E8copyLink5stockAC0F4Core5StockV_tFZ_0(v86);
    v93 = (void *)sub_1DC4045D0();
    swift_release();
    v94 = v154;
    if (v93)
    {
      v95 = v93;
      MEMORY[0x1DF0C9530]();
      if (*(_QWORD *)((v157 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v157 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_1DC408D4C();
      sub_1DC408D64();
      sub_1DC408CF8();

    }
    sub_1DC370634(v86);
    v96 = (void *)sub_1DC4045D0();
    swift_release();
    v97 = v155;
    if (v96)
    {
      v98 = v96;
      MEMORY[0x1DF0C9530]();
      if (*(_QWORD *)((v157 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v157 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_1DC408D4C();
      sub_1DC408D64();
      sub_1DC408CF8();

    }
    v99 = (char *)sub_1DC405350();
    v100 = *(id *)&v99[OBJC_IVAR____TtC8StocksUI21StockFeedMastheadView_moreOptionsButton];

    sub_1DC1F4FAC();
    v101 = (void *)sub_1DC40931C();
    objc_msgSend(v100, sel_setMenu_, v101);
    swift_release();

    sub_1DC0926D8(v86, (uint64_t (*)(_QWORD))type metadata accessor for StockViewModel);
    sub_1DC0926D8(v97, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedMastheadViewLayoutAttributes);
    v102 = (uint64_t (*)(_QWORD))type metadata accessor for StockFeedMastheadModel;
    v103 = v94;
    goto LABEL_19;
  }
  v155 = v32;
  v104 = v141;
  v105 = v142;
  if (EnumCaseMultiPayload == 1)
  {
    sub_1DC25CC9C();
    v107 = (uint64_t *)(v36 + *(int *)(v106 + 48));
    v154 = v36;
    v108 = v107[1];
    if (v108)
    {
      v109 = *((char **)v107 + 9);
      v139 = v107[10];
      v140 = v109;
      v147 = *((double *)v107 + 8);
      v150 = v107[7];
      v153 = (char *)v107[6];
      v152 = v107[5];
      v151 = v107[4];
      v110 = (void *)v107[2];
      v149 = v107[3];
      v138 = *v107;
      v111 = *(double *)&v150;
      v112 = v147;
      v113 = *(double *)&v109;
      v114 = *(double *)&v139;
      sub_1DC25CD00(0, &qword_1EDB2A160, (uint64_t (*)(uint64_t))type metadata accessor for BrandingTitleView, (unint64_t *)&unk_1EDB2F690, (uint64_t)&unk_1DC41D52C);
      v137 = v110;
      swift_bridgeObjectRetain();
      sub_1DC405ECC();
      sub_1DC405EE4();
      v115 = (void *)sub_1DC4090A0();
      (*(void (**)(char *, uint64_t))(v144 + 8))(v104, v105);
      (*(void (**)(char *, uint64_t))(v143 + 8))(v27, v145);
      v116 = *(_QWORD *)(v31 + 16);
      v117 = *(uint64_t (**)(uint64_t, uint64_t))(v116 + 72);
      v80 = v115;
      v118 = (void *)v117(v155, v116);
      objc_msgSend(v80, sel_setBackgroundColor_, v118);

      v119 = *(_QWORD *)(v156 + 32);
      v120 = (char *)sub_1DC405350();
      v121 = *(void **)&v120[OBJC_IVAR____TtC8StocksUI17BrandingTitleView_titleLabel];
      objc_msgSend(v121, sel_setFrame_, v111, v112, v113, v114);
      swift_beginAccess();
      __swift_project_boxed_opaque_existential_1((_QWORD *)(v119 + 16), *(_QWORD *)(v119 + 40));
      v122 = v138;
      v123 = sub_1DC2E9DE0(v138, v108, v110);
      objc_msgSend(v121, sel_setAttributedText_, v123);

      swift_bridgeObjectRelease();
      sub_1DC1425A4(v122, v108, v110);

      v102 = (uint64_t (*)(_QWORD))sub_1DC1427BC;
      v103 = v154;
LABEL_19:
      sub_1DC0926D8(v103, v102);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v161);
      return (uint64_t)v80;
    }
  }
  result = sub_1DC409838();
  __break(1u);
  return result;
}

uint64_t sub_1DC25C310(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  char *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[9];
  __int128 v21;
  __int128 v22;
  char v23;

  sub_1DC104530();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1DC405848();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v13 = result;
    (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E0DB9F18], v8);
    v14 = *(_QWORD *)(v13 + 160);
    v20[7] = sub_1DC4018AC();
    v20[8] = sub_1DC080808((unint64_t *)&qword_1EDB29180, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8638], MEMORY[0x1E0D59B68]);
    v20[4] = v14;
    swift_beginAccess();
    v15 = (void *)MEMORY[0x1DF0CAD78](a2 + 16);
    swift_retain();
    if (v15)
    {
      v16 = (char *)sub_1DC405350();

      v17 = *(id *)&v16[OBJC_IVAR____TtC8StocksUI21StockFeedMastheadView_watchStockButton];
    }
    v21 = 0u;
    v22 = 0u;
    v23 = 1;
    sub_1DC405434();
    swift_allocObject();
    sub_1DC40541C();
    swift_getObjectType();
    if (qword_1EDB2AA88 != -1)
      swift_once();
    v18 = sub_1DC4010E4();
    v19 = *(_QWORD *)(v18 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v7, a3, v18);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v7, 0, 1, v18);
    swift_retain();
    sub_1DC404A80();
    sub_1DC0926D8((uint64_t)v7, (uint64_t (*)(_QWORD))sub_1DC104530);
    swift_release();
    return swift_release_n();
  }
  return result;
}

uint64_t sub_1DC25C5E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  char *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[9];
  __int128 v25;
  __int128 v26;
  char v27;

  sub_1DC25CD80(0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1DC405848();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v13 = result;
    (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E0DB9F18], v8);
    v14 = *(_QWORD *)(v13 + 160);
    v24[7] = sub_1DC4018AC();
    v24[8] = sub_1DC080808((unint64_t *)&qword_1EDB29180, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8638], MEMORY[0x1E0D59B68]);
    v24[4] = v14;
    swift_beginAccess();
    v15 = (void *)MEMORY[0x1DF0CAD78](a2 + 16);
    swift_retain();
    if (v15)
    {
      v16 = (char *)sub_1DC405350();

      v17 = *(id *)&v16[OBJC_IVAR____TtC8StocksUI21StockFeedMastheadView_shareButton];
    }
    v25 = 0u;
    v26 = 0u;
    v27 = 1;
    sub_1DC405434();
    swift_allocObject();
    sub_1DC40541C();
    swift_getObjectType();
    if (qword_1EDB2A9D8 != -1)
      swift_once();
    sub_1DC20BAD4();
    v19 = (uint64_t)&v7[*(int *)(v18 + 48)];
    v20 = *(int *)(v18 + 64);
    v21 = sub_1DC4010E4();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v7, a3, v21);
    v22 = type metadata accessor for StockViewModel();
    sub_1DC0990BC(a3 + *(int *)(v22 + 20), v19, (uint64_t (*)(_QWORD))sub_1DC0FED34);
    v7[v20] = 1;
    v23 = type metadata accessor for CommandShareContent(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v7, 0, 1, v23);
    swift_retain();
    sub_1DC404A80();
    sub_1DC0926D8((uint64_t)v7, (uint64_t (*)(_QWORD))sub_1DC25CD80);
    swift_release();
    return swift_release_n();
  }
  return result;
}

uint64_t sub_1DC25C900()
{
  uint64_t v0;

  sub_1DC148A20(v0 + 16);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  __swift_destroy_boxed_opaque_existential_1(v0 + 104);
  swift_unknownObjectRelease();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 168);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for StockFeedBlueprintViewSupplementaryViewProvider()
{
  return objc_opt_self();
}

uint64_t sub_1DC25C97C()
{
  return sub_1DC25B050();
}

uint64_t sub_1DC25C9A0(uint64_t a1, uint64_t a2, void **a3, void *a4)
{
  return sub_1DC25B204(a1, a2, *a3, a4);
}

uint64_t sub_1DC25C9C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v12[3];
  uint64_t v13;
  uint64_t v14;

  swift_beginAccess();
  sub_1DC0824D4(v2 + 64, (uint64_t)v12);
  v4 = v13;
  v5 = v14;
  __swift_project_boxed_opaque_existential_1(v12, v13);
  v6 = *(_QWORD *)(v5 + 8);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 8);
  v10 = v4;
  v11 = v5;
  __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v9);
  v7(a2, v4, v6);
  swift_beginAccess();
  __swift_destroy_boxed_opaque_existential_1(v2 + 64);
  sub_1DC097DD0(&v9, v2 + 64);
  swift_endAccess();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  swift_getObjectType();
  return sub_1DC405DF4();
}

uint64_t sub_1DC25CACC()
{
  return sub_1DC080808(&qword_1EDB3B308, type metadata accessor for StockFeedLayoutSectionDescriptor, (uint64_t)&unk_1DC41ECF0);
}

_QWORD *sub_1DC25CAF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, __int128 *a5, __int128 *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t *boxed_opaque_existential_1;
  _QWORD *v20;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;

  v25 = a12;
  v26 = a13;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v24);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a12 - 8) + 32))(boxed_opaque_existential_1, a10, a12);
  v20 = (_QWORD *)swift_allocObject();
  v20[3] = 0;
  swift_unknownObjectWeakInit();
  v20[4] = a1;
  v20[5] = a2;
  v20[6] = a3;
  v20[7] = a4;
  sub_1DC097DD0(a5, (uint64_t)(v20 + 8));
  sub_1DC097DD0(a6, (uint64_t)(v20 + 13));
  v20[18] = a7;
  v20[19] = a8;
  v20[20] = a9;
  sub_1DC097DD0(&v24, (uint64_t)(v20 + 21));
  return v20;
}

uint64_t sub_1DC25CBE4()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1DC25CC08()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1DC25CC30()
{
  return sub_1DC25CC4C(sub_1DC25C310);
}

uint64_t sub_1DC25CC40()
{
  return sub_1DC25CC4C(sub_1DC25C5E4);
}

uint64_t sub_1DC25CC4C(uint64_t (*a1)(_QWORD, _QWORD, uint64_t))
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for StockViewModel() - 8) + 80);
  return a1(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), v1 + ((v2 + 32) & ~v2));
}

void sub_1DC25CC9C()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EDB3B210)
  {
    sub_1DC1427BC(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EDB3B210);
  }
}

void sub_1DC25CD00(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), unint64_t *a4, uint64_t a5)
{
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    a3(255);
    sub_1DC080808(a4, a3, a5);
    v9 = sub_1DC40535C();
    if (!v10)
      atomic_store(v9, a2);
  }
}

void sub_1DC25CD80(uint64_t a1)
{
  sub_1DC089DA4(a1, qword_1EDB30C90, type metadata accessor for CommandShareContent, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

void sub_1DC25CD9C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB2A188)
  {
    sub_1DC404978();
    v0 = sub_1DC40535C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB2A188);
  }
}

uint64_t type metadata accessor for MacTickerInteractor()
{
  return objc_opt_self();
}

_QWORD *assignWithCopy for ForYouTitleViewModel(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (void *)a1[4];
  v5 = (void *)a2[4];
  a1[4] = v5;
  v6 = v5;

  a1[5] = a2[5];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  __swift_assign_boxed_opaque_existential_1(a1 + 6, a2 + 6);
  return a1;
}

__n128 __swift_memcpy88_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for ForYouTitleViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  __int128 v7;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v6 = *(void **)(a1 + 32);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);

  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 48);
  v7 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v7;
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  return a1;
}

uint64_t getEnumTagSinglePayload for ForYouTitleViewModel(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 88))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ForYouTitleViewModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 88) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 88) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ForYouTitleViewModel()
{
  return &type metadata for ForYouTitleViewModel;
}

uint64_t sub_1DC25D008@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X2>, __int128 *a3@<X3>, uint64_t *a4@<X8>)
{
  uint64_t ObjCClassFromMetadata;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v8 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1DC3FFC80();

  v9 = sub_1DC0E8054();
  v11 = v10;
  sub_1DC0E7FF0();
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1DC40DC10;
  v13 = *a1;
  v14 = a1[1];
  *(_QWORD *)(v12 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v12 + 64) = sub_1DC0E7FAC();
  *(_QWORD *)(v12 + 32) = v13;
  *(_QWORD *)(v12 + 40) = v14;
  swift_bridgeObjectRetain();
  v15 = sub_1DC408A70();
  v17 = v16;
  swift_bridgeObjectRelease();
  sub_1DC0926D8((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for AttributionSource);
  *a4 = v9;
  a4[1] = v11;
  a4[2] = v15;
  a4[3] = v17;
  a4[4] = 0;
  a4[5] = a2;
  return sub_1DC097DD0(a3, (uint64_t)(a4 + 6));
}

uint64_t sub_1DC25D184()
{
  uint64_t v0;

  sub_1DC148A20(v0 + 16);
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for StockFeedViewerInteractor()
{
  return objc_opt_self();
}

uint64_t sub_1DC25D1D8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v2 = type metadata accessor for StockListSelectionModel();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1DC4010E4();
  v6 = *(_QWORD *)(v5 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v4, a1, v5);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v4, 0, 2, v5);
  sub_1DC25D298();
  sub_1DC402764();
  return sub_1DC25D2E0((uint64_t)v4);
}

unint64_t sub_1DC25D298()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EDB351C0;
  if (!qword_1EDB351C0)
  {
    v1 = type metadata accessor for StockListSelectionModel();
    result = MEMORY[0x1DF0CAB8C](&unk_1DC4157E8, v1);
    atomic_store(result, (unint64_t *)&qword_1EDB351C0);
  }
  return result;
}

uint64_t sub_1DC25D2E0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for StockListSelectionModel();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DC25D31C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  __int128 v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v18 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    v8 = *(_OWORD *)(a2 + 5);
    *(_OWORD *)(a1 + 40) = v8;
    v9 = v8;
    v10 = **(void (***)(uint64_t, uint64_t, uint64_t))(v8 - 8);
    swift_bridgeObjectRetain();
    v10(a1 + 16, (uint64_t)(a2 + 2), v9);
    *(_QWORD *)(a1 + 56) = a2[7];
    v11 = *(_OWORD *)(a2 + 11);
    *(_OWORD *)(a1 + 88) = v11;
    v12 = v11;
    v13 = **(void (***)(uint64_t, uint64_t, uint64_t))(v11 - 8);
    swift_retain();
    v13(a1 + 64, (uint64_t)(a2 + 8), v12);
    v14 = *(int *)(a3 + 32);
    v15 = a1 + v14;
    v16 = (uint64_t)a2 + v14;
    v17 = sub_1DC4008EC();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
  }
  return a1;
}

uint64_t sub_1DC25D428(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 16);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a1 + 64);
  v4 = a1 + *(int *)(a2 + 32);
  v5 = sub_1DC4008EC();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t sub_1DC25D48C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  __int128 v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  v7 = a2 + 16;
  v8 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 40) = v8;
  v9 = v8;
  v10 = **(void (***)(uint64_t, uint64_t, uint64_t))(v8 - 8);
  swift_bridgeObjectRetain();
  v10(a1 + 16, v7, v9);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  v11 = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 88) = v11;
  v12 = v11;
  v13 = **(void (***)(uint64_t, uint64_t, uint64_t))(v11 - 8);
  swift_retain();
  v13(a1 + 64, a2 + 64, v12);
  v14 = *(int *)(a3 + 32);
  v15 = a1 + v14;
  v16 = a2 + v14;
  v17 = sub_1DC4008EC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
  return a1;
}

_QWORD *sub_1DC25D56C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __swift_assign_boxed_opaque_existential_1(a1 + 2, a2 + 2);
  a1[7] = a2[7];
  swift_retain();
  swift_release();
  __swift_assign_boxed_opaque_existential_1(a1 + 8, a2 + 8);
  v6 = *(int *)(a3 + 32);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1DC4008EC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t sub_1DC25D620(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  v5 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v5;
  v6 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v6;
  v7 = *(int *)(a3 + 32);
  v8 = a2 + v7;
  v9 = a1 + v7;
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  v10 = sub_1DC4008EC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v9, v8, v10);
  return a1;
}

uint64_t sub_1DC25D69C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 16);
  v7 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v7;
  v8 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v8;
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a1 + 64);
  v9 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v9;
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  v10 = *(int *)(a3 + 32);
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = sub_1DC4008EC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 40))(v11, v12, v13);
  return a1;
}

uint64_t sub_1DC25D744()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC25D750(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1DC4008EC();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 32), a2, v8);
  }
}

uint64_t sub_1DC25D7CC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC25D7D8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_1DC4008EC();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 32), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for ForYouFeedRefreshBlueprintModifier()
{
  uint64_t result;

  result = qword_1EDB3C5E8;
  if (!qword_1EDB3C5E8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1DC25D888()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1DC4008EC();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_1DC25D910(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t refreshed;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  void *v14;
  uint64_t v15;
  void *v16;
  _BYTE v17[16];
  uint64_t v18;

  refreshed = type metadata accessor for ForYouFeedRefreshBlueprintModifier();
  v7 = *(_QWORD *)(refreshed - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](refreshed);
  v9 = &v17[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v18 = v3;
  sub_1DC0BA8CC();
  sub_1DC402E0C();
  sub_1DC0990BC(v3, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for ForYouFeedRefreshBlueprintModifier);
  v10 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v11 = (v8 + v10 + 7) & 0xFFFFFFFFFFFFFFF8;
  v12 = swift_allocObject();
  sub_1DC092ED0((uint64_t)v9, v12 + v10, (uint64_t (*)(_QWORD))type metadata accessor for ForYouFeedRefreshBlueprintModifier);
  v13 = (_QWORD *)(v12 + v11);
  *v13 = a2;
  v13[1] = a3;
  swift_retain();
  v14 = (void *)sub_1DC402C80();
  sub_1DC402D04();
  swift_release();
  swift_release();

  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = a2;
  *(_QWORD *)(v15 + 24) = a3;
  swift_retain();
  v16 = (void *)sub_1DC402C80();
  sub_1DC402D34();
  swift_release();
  swift_release();
  swift_release();

}

uint64_t sub_1DC25DAA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  void *v14;
  _QWORD v16[2];

  v1 = sub_1DC4010E4();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC104530();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v16 - v9;
  sub_1DC25F6B0(v0);
  sub_1DC0990BC((uint64_t)v10, (uint64_t)v7, (uint64_t (*)(_QWORD))sub_1DC104530);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1) == 1)
  {
    sub_1DC0926D8((uint64_t)v7, (uint64_t (*)(_QWORD))sub_1DC104530);
    v16[1] = sub_1DC113EE8(MEMORY[0x1E0DEE9D8]);
    sub_1DC089DA4(0, (unint64_t *)&qword_1EDB296C8, (uint64_t (*)(uint64_t))sub_1DC0BA8CC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    v11 = sub_1DC402D58();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v7, v1);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 88));
    sub_1DC089DA4(0, (unint64_t *)&qword_1EDB3FE20, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF0D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v12 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
    v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_1DC40DC10;
    (*(void (**)(unint64_t, char *, uint64_t))(v2 + 16))(v13 + v12, v4, v1);
    sub_1DC400D24();
    swift_bridgeObjectRelease();
    v14 = (void *)sub_1DC402C80();
    sub_1DC0BA8CC();
    v11 = sub_1DC402D04();
    swift_release();

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  sub_1DC0926D8((uint64_t)v10, (uint64_t (*)(_QWORD))sub_1DC104530);
  return v11;
}

void sub_1DC25DD14(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  void (*v51)(char *, uint64_t);
  uint64_t v52;
  char *v53;
  uint64_t (*v54)(void);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  _QWORD v60[24];
  uint64_t v61;
  char *v62;
  char *v63;
  char *v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;

  v60[12] = a4;
  v60[13] = a3;
  v81 = a2;
  sub_1DC106380(0, &qword_1EDB2A288, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB9A28]);
  v60[11] = v5;
  v60[10] = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v60[9] = (char *)v60 - v6;
  sub_1DC08CBF0(0, &qword_1EDB29C10, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedModel, sub_1DC106C00, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6EE8]);
  v68 = v7;
  v60[18] = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v60[6] = (char *)v60 - v8;
  v70 = type metadata accessor for ForYouFeedModel();
  MEMORY[0x1E0C80A78](v70);
  v60[17] = (char *)v60 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = sub_1DC407300();
  v60[23] = *(_QWORD *)(v61 - 8);
  MEMORY[0x1E0C80A78](v61);
  v60[22] = (char *)v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for CuratedForYouFeedGroup();
  MEMORY[0x1E0C80A78](v11);
  v60[15] = (char *)v60 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for StockForYouFeedGroup();
  MEMORY[0x1E0C80A78](v13);
  v60[14] = (char *)v60 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC106D6C();
  MEMORY[0x1E0C80A78](v15);
  v67 = (char *)v60 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = type metadata accessor for ForYouFeedSectionDescriptor();
  MEMORY[0x1E0C80A78](v73);
  v66 = (char *)v60 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_1DC407C84();
  v77 = *(_QWORD *)(v18 - 8);
  v78 = v18;
  MEMORY[0x1E0C80A78](v18);
  v60[21] = (char *)v60 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v60[20] = (char *)v60 - v21;
  MEMORY[0x1E0C80A78](v22);
  v60[5] = (char *)v60 - v23;
  sub_1DC106380(0, (unint64_t *)&qword_1EDB29D00, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60]);
  v25 = v24;
  v79 = *(_QWORD *)(v24 - 8);
  MEMORY[0x1E0C80A78](v24);
  v60[19] = (char *)v60 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v27);
  v64 = (char *)v60 - v28;
  MEMORY[0x1E0C80A78](v29);
  v31 = (char *)v60 - v30;
  v76 = type metadata accessor for ForYouFeedGroup();
  v60[0] = *(_QWORD *)(v76 - 8);
  MEMORY[0x1E0C80A78](v76);
  v75 = (char *)v60 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v33);
  v63 = (char *)v60 - v34;
  MEMORY[0x1E0C80A78](v35);
  v74 = (char *)v60 - v36;
  MEMORY[0x1E0C80A78](v37);
  v62 = (char *)v60 - v38;
  MEMORY[0x1E0C80A78](v39);
  v60[1] = (char *)v60 - v40;
  MEMORY[0x1E0C80A78](v41);
  v60[2] = (char *)v60 - v42;
  sub_1DC090728();
  MEMORY[0x1E0C80A78](v43);
  v44 = sub_1DC400010();
  v45 = *(_QWORD *)(v44 - 8);
  MEMORY[0x1E0C80A78](v44);
  v47 = (char *)v60 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC106380(0, (unint64_t *)&qword_1EDB2AB80, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790]);
  v72 = v48;
  v60[8] = *(_QWORD *)(v48 - 8);
  MEMORY[0x1E0C80A78](v48);
  v50 = (char *)v60 - v49;
  v60[16] = *a1;
  sub_1DC400004();
  sub_1DC3FFFF8();
  v51 = *(void (**)(char *, uint64_t))(v45 + 8);
  v52 = v25;
  v53 = v50;
  v51(v47, v44);
  v54 = MEMORY[0x1E0DB7B60];
  v55 = sub_1DC25FA64(&qword_1EDB29CE8, (unint64_t *)&qword_1EDB29D00, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60], MEMORY[0x1E0DB7B88]);
  v56 = sub_1DC25FA64(&qword_1EDB29CE0, (unint64_t *)&qword_1EDB29D00, (uint64_t (*)(uint64_t, _QWORD *))v54, MEMORY[0x1E0DB7B80]);
  v80 = v52;
  MEMORY[0x1DF0C3110](MEMORY[0x1E0DEE9D8], v52, v55, v56);
  v57 = sub_1DC080808(&qword_1EDB37600, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedSectionDescriptor, (uint64_t)&unk_1DC425AEC);
  v58 = sub_1DC106C00();
  v65 = v57;
  sub_1DC406C64();
  v59 = (char *)sub_1DC25E384 + 4 * word_1DC41DFE0[*(_QWORD *)(v81 + 56) >> 61];
  v60[7] = v31;
  v71 = v53;
  v69 = v58;
  __asm { BR              X10 }
}

uint64_t sub_1DC25E384()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  sub_1DC25FADC();
  v3 = v2;
  v4 = swift_projectBox();
  v5 = *(_QWORD *)(v4 + *(int *)(v3 + 48));
  v6 = *(_QWORD *)(v1 - 496);
  sub_1DC0990BC(v4, v6, (uint64_t (*)(_QWORD))type metadata accessor for ForYouFeedGroup);
  v7 = *(_QWORD *)(v1 - 152);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v7 + 16), *(_QWORD *)(v7 + 40));
  v8 = v7 + *(int *)(type metadata accessor for ForYouFeedRefreshBlueprintModifier() + 32);
  *(_QWORD *)(v1 - 152) = type metadata accessor for ForYouFeedServiceConfig();
  sub_1DC106C20();
  swift_retain();
  v9 = *(_QWORD *)(v1 - 472);
  sub_1DC4075F4();
  sub_1DC392C64(v6, *(_QWORD *)(v1 - 384), v8, v9, v0);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 - 184) + 8))(v9, *(_QWORD *)(v1 - 176));
  sub_1DC406C94();
  v10 = *(_QWORD *)(v1 - 160);
  v11 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 168) + 8);
  v11(v0, v10);
  sub_1DC107E5C(v5, v0);
  sub_1DC406C94();
  v11(v0, v10);
  sub_1DC4078A0();
  swift_retain();
  sub_1DC407894();
  v12 = sub_1DC40787C();
  swift_release();
  if (v12)
  {
    *(_QWORD *)(v1 - 104) = sub_1DC407420();
    *(_QWORD *)(v1 - 128) = v12;
  }
  else
  {
    *(_OWORD *)(v1 - 128) = 0u;
    *(_OWORD *)(v1 - 112) = 0u;
  }
  v13 = *(_QWORD *)(v1 - 264);
  v14 = *(_QWORD *)(v1 - 232);
  v15 = *(_QWORD *)(v1 - 224);
  sub_1DC406D00();
  swift_release_n();
  sub_1DC0926D8(*(_QWORD *)(v1 - 496), (uint64_t (*)(_QWORD))type metadata accessor for ForYouFeedGroup);
  sub_1DC25FA64((unint64_t *)&unk_1EDB2AB70, (unint64_t *)&qword_1EDB2AB80, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790], MEMORY[0x1E0DBC7C8]);
  sub_1DC408E90();
  sub_1DC408ED8();
  v16 = v14;
  if (*(_QWORD *)(v1 - 128) == *(_QWORD *)(v1 - 72))
  {
    swift_storeEnumTagMultiPayload();
    v17 = sub_1DC106C3C((unint64_t *)&unk_1EDB29C00, MEMORY[0x1E0DB6F08]);
    v18 = sub_1DC106C3C(&qword_1EDB29BF8, MEMORY[0x1E0DB6EF8]);
    MEMORY[0x1DF0C3110](MEMORY[0x1E0DEE9D8], v13, v17, v18);
    v19 = *(_QWORD *)(v1 - 456);
    sub_1DC4046F0();
    if (qword_1EDB42970 != -1)
      swift_once();
    v20 = unk_1EDB5E290;
    v21 = *(_QWORD **)(v1 - 376);
    *v21 = qword_1EDB5E288;
    v21[1] = v20;
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    v22 = *(_QWORD *)(v1 - 464);
    sub_1DC404348();
    v23 = *(_QWORD *)(v1 - 160);
    sub_1DC404744();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 368) + 8))(v22, v13);
    v16 = *(_QWORD *)(v1 - 232);
    sub_1DC406C94();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 168) + 8))(v19, v23);
  }
  sub_1DC12E67C();
  v25 = *(_QWORD *)(v1 - 440);
  v26 = v25 + *(int *)(v24 + 48);
  v27 = *(_QWORD *)(v1 - 448);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 16))(v25, v16, v15);
  v28 = *MEMORY[0x1E0DB7FB8];
  v29 = sub_1DC404984();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 104))(v26, v28, v29);
  v30 = *(_QWORD *)(v1 - 432);
  v31 = *(_QWORD *)(v1 - 424);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v30 + 104))(v25, *MEMORY[0x1E0DB9A00], v31);
  (*(void (**)(uint64_t))(v1 - 408))(v25);
  (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v25, v31);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v27 + 8))(v16, v15);
}

uint64_t sub_1DC25F5F4(void *a1, void (*a2)(char *))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  id v10;
  uint64_t v12;

  sub_1DC106380(0, &qword_1EDB2A288, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB9A28]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  v7 = MEMORY[0x1E0C80A78](v4);
  v9 = (char *)&v12 - v8;
  *(uint64_t *)((char *)&v12 - v8) = (uint64_t)a1;
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v6 + 104))((char *)&v12 - v8, *MEMORY[0x1E0DB99F0], v5, v7);
  v10 = a1;
  a2(v9);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

void sub_1DC25F6B0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = type metadata accessor for StockForYouFeedGroup();
  MEMORY[0x1E0C80A78](v2);
  v3 = type metadata accessor for ForYouFeedGroup();
  MEMORY[0x1E0C80A78](v3);
  MEMORY[0x1E0C80A78](v4);
  __asm { BR              X10 }
}

uint64_t sub_1DC25F774()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_1DC4010E4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 56))(v0, 1, 1, v1);
}

uint64_t sub_1DC25F7AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int EnumCaseMultiPayload;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;

  sub_1DC25FADC();
  v4 = swift_projectBox();
  sub_1DC0990BC(v4, v3, (uint64_t (*)(_QWORD))type metadata accessor for ForYouFeedGroup);
  sub_1DC092ED0(v3, v2, (uint64_t (*)(_QWORD))type metadata accessor for ForYouFeedGroup);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if ((EnumCaseMultiPayload - 2) >= 2 && EnumCaseMultiPayload)
  {
    sub_1DC092ED0(v2, v1, (uint64_t (*)(_QWORD))type metadata accessor for StockForYouFeedGroup);
    v8 = sub_1DC4010E4();
    v9 = *(_QWORD *)(v8 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v0, v1, v8);
    sub_1DC0926D8(v1, (uint64_t (*)(_QWORD))type metadata accessor for StockForYouFeedGroup);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v9 + 56))(v0, 0, 1, v8);
  }
  else
  {
    sub_1DC0926D8(v2, (uint64_t (*)(_QWORD))type metadata accessor for ForYouFeedGroup);
    v6 = sub_1DC4010E4();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v0, 1, 1, v6);
  }
}

uint64_t sub_1DC25F8B0()
{
  return sub_1DC080808(&qword_1EDB3C5E0, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedRefreshBlueprintModifier, (uint64_t)&unk_1DC41E070);
}

uint64_t sub_1DC25F8E0()
{
  return sub_1DC25DAA4();
}

uint64_t sub_1DC25F908()
{
  uint64_t v0;
  uint64_t refreshed;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  refreshed = type metadata accessor for ForYouFeedRefreshBlueprintModifier();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(refreshed - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v3 + 16);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v3 + 64);
  v4 = v3 + *(int *)(refreshed + 32);
  v5 = sub_1DC4008EC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_release();
  return swift_deallocObject();
}

void sub_1DC25F9C8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t *v5;

  v3 = *(_QWORD *)(type metadata accessor for ForYouFeedRefreshBlueprintModifier() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (uint64_t *)(v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8));
  sub_1DC25DD14(a1, v1 + v4, *v5, v5[1]);
}

uint64_t sub_1DC25FA38()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DC25FA5C(void *a1)
{
  uint64_t v1;

  return sub_1DC25F5F4(a1, *(void (**)(char *))(v1 + 16));
}

uint64_t sub_1DC25FA64(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_1DC106380(255, a2, a3);
    result = MEMORY[0x1DF0CAB8C](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DC25FAA4@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC25FAB8(a1);
}

uint64_t sub_1DC25FAB8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1DC393838(*(char **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 48), a1);
}

void sub_1DC25FADC()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1F03500C8)
  {
    type metadata accessor for ForYouFeedGroup();
    sub_1DC08CBF0(255, &qword_1EDB41E48, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedServiceConfig, sub_1DC106C20, MEMORY[0x1E0D5B0D8]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1F03500C8);
  }
}

uint64_t sub_1DC25FB68(uint64_t a1)
{
  return sub_1DC08E0F8(a1, qword_1F0368A78);
}

uint64_t sub_1DC25FB8C(uint64_t a1)
{
  return sub_1DC08E0F8(a1, qword_1F0368A90);
}

uint64_t StocksV2UserActivityDeserializer.__allocating_init(stockMetadataManager:intentDeserializer:)(__int128 *a1, __int128 *a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  sub_1DC097DD0(a1, v4 + 16);
  sub_1DC097DD0(a2, v4 + 56);
  return v4;
}

uint64_t StocksV2UserActivityDeserializer.init(stockMetadataManager:intentDeserializer:)(__int128 *a1, __int128 *a2)
{
  uint64_t v2;

  sub_1DC097DD0(a1, v2 + 16);
  sub_1DC097DD0(a2, v2 + 56);
  return v2;
}

void sub_1DC25FC3C()
{
  sub_1DC409838();
  __break(1u);
}

void sub_1DC25FC94(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  Swift::String v43;
  _QWORD v44[7];
  uint64_t v45;
  char *v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  char *v56;
  char *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;

  v69 = a3;
  v67 = a4;
  v6 = sub_1DC3FFDD0();
  v64 = *(_QWORD *)(v6 - 8);
  v65 = v6;
  MEMORY[0x1E0C80A78](v6);
  v55 = (char *)v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v44[2] = (char *)v44 - v9;
  sub_1DC092F50(0, (unint64_t *)&unk_1EDB28A70, v10);
  MEMORY[0x1E0C80A78](v11);
  v61 = (char *)v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v44[4] = (char *)v44 - v14;
  MEMORY[0x1E0C80A78](v15);
  v46 = (char *)v44 - v16;
  v45 = sub_1DC401A2C();
  v44[6] = *(_QWORD *)(v45 - 8);
  MEMORY[0x1E0C80A78](v45);
  v44[5] = (char *)v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_1DC401BB8();
  MEMORY[0x1E0C80A78](v18);
  v47 = (char *)v44 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = sub_1DC40202C();
  v49 = *(_QWORD *)(v50 - 8);
  MEMORY[0x1E0C80A78](v50);
  v48 = (char *)v44 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC092F50(0, &qword_1EDB31648, (void (*)(uint64_t))type metadata accessor for ArticleUserInfoModel);
  MEMORY[0x1E0C80A78](v21);
  v59 = (char *)v44 - v22;
  v60 = type metadata accessor for ArticleUserInfoModel();
  v58 = *(_QWORD *)(v60 - 8);
  MEMORY[0x1E0C80A78](v60);
  v56 = (char *)v44 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC092F50(0, (unint64_t *)&unk_1EDB2C480, (void (*)(uint64_t))type metadata accessor for StocksActivity.StockFeed.Series);
  MEMORY[0x1E0C80A78](v24);
  v54 = (char *)v44 - v25;
  v26 = type metadata accessor for StocksActivity.StockFeed.Series(0);
  v52 = *(_QWORD *)(v26 - 8);
  v53 = v26;
  MEMORY[0x1E0C80A78](v26);
  v44[3] = (char *)v44 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC092F50(0, (unint64_t *)&qword_1EDB28DE0, (void (*)(uint64_t))MEMORY[0x1E0DAF0D0]);
  MEMORY[0x1E0C80A78](v28);
  v57 = (char *)v44 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v30);
  v44[1] = (char *)v44 - v31;
  v32 = sub_1DC4010E4();
  v62 = *(_QWORD *)(v32 - 8);
  v63 = v32;
  MEMORY[0x1E0C80A78](v32);
  v51 = (char *)v44 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v34);
  v44[0] = (char *)v44 - v35;
  v68 = type metadata accessor for StocksActivityUserInfo();
  MEMORY[0x1E0C80A78](v68);
  MEMORY[0x1E0C80A78](v36);
  v66 = (char *)v44 - v37;
  MEMORY[0x1E0C80A78](v38);
  MEMORY[0x1E0C80A78](v39);
  MEMORY[0x1E0C80A78](v40);
  MEMORY[0x1E0C80A78](v41);
  MEMORY[0x1E0C80A78](v42);
  swift_bridgeObjectRetain();
  v43._countAndFlagsBits = a1;
  v43._object = a2;
  StocksActivityType.init(rawValue:)(v43);
  __asm { BR              X10 }
}

uint64_t sub_1DC260178()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;

  v2 = *(_QWORD *)(v1 - 104);
  result = sub_1DC260D00(*(_QWORD *)(v1 - 96));
  if (!v2)
  {
    v4 = *(_QWORD *)(v1 - 112);
    v5 = (uint64_t *)(v0 + *(int *)(v4 + 48));
    v6 = v5[1];
    if (v6 == 1)
    {
      sub_1DC260CBC();
      swift_allocError();
      *(_QWORD *)v7 = 0xD000000000000013;
      *(_QWORD *)(v7 + 8) = 0x80000001DC440B50;
      *(_BYTE *)(v7 + 16) = 1;
      swift_willThrow();
      return sub_1DC0926D8(v0, (uint64_t (*)(_QWORD))type metadata accessor for StocksActivityUserInfo);
    }
    else
    {
      v9 = v5[2];
      v8 = v5[3];
      v10 = *v5;
      v11 = (uint64_t *)(v0 + *(int *)(v4 + 52));
      v13 = *v11;
      v12 = v11[1];
      sub_1DC260F10(v10, v6);
      swift_bridgeObjectRetain();
      sub_1DC0926D8(v0, (uint64_t (*)(_QWORD))type metadata accessor for StocksActivityUserInfo);
      v14 = *(uint64_t **)(v1 - 120);
      *v14 = v10;
      v14[1] = v6;
      v14[2] = v9;
      v14[3] = v8;
      v14[4] = v13;
      v14[5] = v12;
      type metadata accessor for StocksActivity(0);
      return swift_storeEnumTagMultiPayload();
    }
  }
  return result;
}

unint64_t sub_1DC260CBC()
{
  unint64_t result;

  result = qword_1EDB41340;
  if (!qword_1EDB41340)
  {
    result = MEMORY[0x1DF0CAB8C](&protocol conformance descriptor for DeserializationError, &type metadata for DeserializationError);
    atomic_store(result, (unint64_t *)&qword_1EDB41340);
  }
  return result;
}

uint64_t sub_1DC260D00(uint64_t a1)
{
  unint64_t v2;
  char v3;
  __int128 v4;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  _BYTE v10[40];
  _OWORD v11[2];

  *(_QWORD *)&v8 = 1635017060;
  *((_QWORD *)&v8 + 1) = 0xE400000000000000;
  sub_1DC4096E8();
  if (*(_QWORD *)(a1 + 16) && (v2 = sub_1DC1A3704((uint64_t)v10), (v3 & 1) != 0))
  {
    sub_1DC1B26C0(*(_QWORD *)(a1 + 56) + 32 * v2, (uint64_t)&v8);
  }
  else
  {
    v8 = 0u;
    v9 = 0u;
  }
  sub_1DC1A4E78((uint64_t)v10);
  if (*((_QWORD *)&v9 + 1))
  {
    sub_1DC0FA0E4(&v8, v11);
    sub_1DC1B26C0((uint64_t)v11, (uint64_t)v10);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v4 = v8;
      sub_1DC3FFA34();
      swift_allocObject();
      sub_1DC3FFA28();
      type metadata accessor for StocksActivityUserInfo();
      sub_1DC080808(&qword_1EDB42BB0, (uint64_t (*)(uint64_t))type metadata accessor for StocksActivityUserInfo, (uint64_t)&unk_1DC426548);
      sub_1DC3FFA1C();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
      swift_release();
      return sub_1DC1D565C(v4, *((unint64_t *)&v4 + 1));
    }
    else
    {
      sub_1DC260CBC();
      swift_allocError();
      *(_OWORD *)v7 = xmmword_1DC41E130;
      *(_BYTE *)(v7 + 16) = 2;
      swift_willThrow();
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
    }
  }
  else
  {
    sub_1DC0926D8((uint64_t)&v8, (uint64_t (*)(_QWORD))sub_1DC0D11C4);
    sub_1DC260CBC();
    swift_allocError();
    *(_OWORD *)v6 = xmmword_1DC41E130;
    *(_BYTE *)(v6 + 16) = 1;
    return swift_willThrow();
  }
}

uint64_t sub_1DC260F10(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t StocksV2UserActivityDeserializer.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  return v0;
}

uint64_t StocksV2UserActivityDeserializer.__deallocating_deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  return swift_deallocClassInstance();
}

void sub_1DC260F74(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_1DC25FC94(a1, a2, a3, a4);
}

uint64_t StocksV2UserActivityDeserializer.deserialize(userActivity:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v4;
  void *v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;

  v4 = objc_msgSend(a1, sel_userInfo);
  if (v4)
  {
    v5 = v4;
    v6 = sub_1DC40898C();

    v7 = objc_msgSend(a1, sel_activityType);
    v8 = sub_1DC408A4C();
    v10 = v9;

    v11 = objc_msgSend(a1, sel_interaction);
    sub_1DC25FC94(v8, v10, v6, a2);
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    v12 = type metadata accessor for StocksActivity(0);
    v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56);
    v14 = a2;
    v15 = 0;
  }
  else
  {
    v12 = type metadata accessor for StocksActivity(0);
    v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56);
    v14 = a2;
    v15 = 1;
  }
  return v13(v14, v15, 1, v12);
}

uint64_t sub_1DC2610DC(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 4u)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t destroy for DeserializationError(uint64_t a1)
{
  return sub_1DC261104(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t sub_1DC261104(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 4u)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t _s8StocksUI20DeserializationErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1DC2610DC(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for DeserializationError(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1DC2610DC(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_1DC261104(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for DeserializationError(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_1DC261104(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for DeserializationError(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFC && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 252);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 4)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for DeserializationError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 252;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_1DC261288(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_1DC261290(uint64_t result, char a2)
{
  *(_BYTE *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for DeserializationError()
{
  return &type metadata for DeserializationError;
}

uint64_t method lookup function for StocksV2UserActivityDeserializer()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of StocksV2UserActivityDeserializer.__allocating_init(stockMetadataManager:intentDeserializer:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of StocksV2UserActivityDeserializer.deserialize(activityType:from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of StocksV2UserActivityDeserializer.deserialize(activityType:from:interaction:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t sub_1DC2612F4(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  uint64_t result;
  void *v6;
  void *v7;
  unsigned int v8;
  void *v9;
  void *v10;

  __swift_project_boxed_opaque_existential_1(v3 + 3, v3[6]);
  result = sub_1DC408254();
  if ((result & 1) != 0)
  {
    v6 = (void *)v3[8];
    v7 = (void *)sub_1DC408A1C();
    v8 = objc_msgSend(v6, sel_containsArticleID_, v7);

    if (v8)
    {
      v9 = (void *)sub_1DC408A1C();
      objc_msgSend(v6, sel_removeArticleID_, v9);

    }
    v10 = (void *)sub_1DC408A1C();
    objc_msgSend(v6, sel_insertArticleID_atIndex_, v10, -(a3 & 1));

    return (uint64_t)objc_msgSend(v6, sel_save);
  }
  return result;
}

uint64_t sub_1DC26140C()
{
  uint64_t v0;
  char *v1;
  void *v2;
  unint64_t v3;
  id v4;
  unsigned int v5;
  int v6;
  id v8;
  __int128 v9;
  __int128 v10;
  _BYTE v11[24];
  uint64_t v12;

  v1 = (char *)objc_msgSend(*(id *)(v0 + 16), sel_cachedSubscription);
  if (objc_getAssociatedObject(v1, v1 + 1))
  {
    sub_1DC409634();
    swift_unknownObjectRelease();
  }
  else
  {
    v9 = 0u;
    v10 = 0u;
  }
  sub_1DC0D1180((uint64_t)&v9, (uint64_t)v11);
  if (!v12)
  {
    sub_1DC150744((uint64_t)v11);
    goto LABEL_9;
  }
  sub_1DC0E7878();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_9:
    v2 = 0;
    v3 = 0;
    goto LABEL_10;
  }
  v2 = v8;
  v3 = (unint64_t)objc_msgSend(v8, sel_integerValue);
  if (v3 == -1)
    goto LABEL_17;
LABEL_10:
  if (objc_getAssociatedObject(v1, (const void *)~v3))
  {
    sub_1DC409634();
    swift_unknownObjectRelease();
  }
  else
  {
    v9 = 0u;
    v10 = 0u;
  }
  sub_1DC0D1180((uint64_t)&v9, (uint64_t)v11);
  if (!v12)
  {
    sub_1DC150744((uint64_t)v11);
    goto LABEL_17;
  }
  sub_1DC0E7878();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_17:

    v6 = -83;
    return (((_DWORD)v3 + 1) ^ v6) & 1;
  }
  v4 = v8;
  v5 = objc_msgSend(v4, sel_integerValue);

  v6 = v5 - 83;
  return (((_DWORD)v3 + 1) ^ v6) & 1;
}

uint64_t sub_1DC2615C4()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1DC2615F8()
{
  return sub_1DC2616DC();
}

uint64_t sub_1DC261620()
{
  uint64_t *v0;
  uint64_t v1;
  char v2;
  char v3;

  v1 = *v0;
  sub_1DC406AE4();
  sub_1DC4069DC();
  v2 = sub_1DC406964();
  swift_release();
  if ((v2 & 1) == 0)
  {
    sub_1DC4069D0();
    v3 = sub_1DC406964();
    swift_release();
    if ((v3 & 1) == 0)
      return 1;
  }
  if ((sub_1DC26140C() & 1) == 0)
    return 0;
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 48));
  return sub_1DC408254() & 1;
}

uint64_t sub_1DC2616DC()
{
  id v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  id v8;

  sub_1DC1EF064();
  sub_1DC408098();
  v0 = objc_msgSend(v8, sel_articleID);
  swift_unknownObjectRelease();
  v1 = sub_1DC408A4C();
  v3 = v2;

  sub_1DC406AE4();
  sub_1DC4069DC();
  v4 = sub_1DC406964();
  swift_release();
  if ((v4 & 1) != 0)
  {
    v5 = 0;
LABEL_5:
    sub_1DC2612F4(v1, v3, v5);
    return swift_bridgeObjectRelease();
  }
  sub_1DC4069D0();
  v6 = sub_1DC406964();
  swift_release();
  if ((v6 & 1) != 0)
  {
    v5 = 1;
    goto LABEL_5;
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DC2617DC(void *a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v7;

  v1 = objc_msgSend(a1, sel_activityType);
  v2 = sub_1DC408A4C();
  v4 = v3;

  if (v2 == sub_1DC408A4C() && v4 == v5)
    v7 = 1;
  else
    v7 = sub_1DC4099E8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1DC261880(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v22;
  uint64_t result;
  id v24;
  void *v25;
  void (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v2 = sub_1DC4046E4();
  v30 = *(_QWORD *)(v2 - 8);
  v31 = v2;
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC133BB0(0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1DC3FFDD0();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v29 - v13;
  v15 = (void *)sub_1DC40592C();
  v16 = objc_msgSend(v15, sel_activityType);

  v17 = sub_1DC408A4C();
  v19 = v18;

  if (v17 == sub_1DC408A4C() && v19 == v20)
  {
    swift_bridgeObjectRelease_n();
LABEL_8:
    v24 = objc_msgSend(a1, sel_webpageURL);
    if (v24)
    {
      v25 = v24;
      sub_1DC3FFD94();

      v26 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
      v26(v7, v11, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v7, 0, 1, v8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) != 1)
      {
        v26(v14, v7, v8);
        v27 = v30;
        v28 = v31;
        (*(void (**)(char *, _QWORD, uint64_t))(v30 + 104))(v4, *MEMORY[0x1E0DB7AA8], v31);
        sub_1DC40298C();
        (*(void (**)(char *, uint64_t))(v27 + 8))(v4, v28);
        (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
        return 1;
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
    }
    sub_1DC212C0C((uint64_t)v7);
    return 1;
  }
  v22 = sub_1DC4099E8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = 0;
  if ((v22 & 1) != 0)
    goto LABEL_8;
  return result;
}

uint64_t sub_1DC261B2C()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1DC261B58(void *a1)
{
  return sub_1DC261880(a1) & 1;
}

uint64_t sub_1DC261B80(uint64_t a1)
{
  _QWORD *v1;
  uint64_t (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(void);
  uint64_t v23;
  uint64_t v24;
  char *v25;
  void (*v26)(char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t result;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(uint64_t);
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  _QWORD v39[4];
  char *v40;
  char *v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;

  v46 = a1;
  v44 = *v1;
  v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1DC089DA4(0, &qword_1EDB28B50, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1658], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v43 = (char *)v39 - v4;
  v5 = sub_1DC4010E4();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v41 = (char *)v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for StockListSelectionModel();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC187FFC(0, (unint64_t *)&qword_1EDB2AB88, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790]);
  v12 = v11;
  v47 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v40 = (char *)v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)v39 - v15;
  sub_1DC089DA4(0, &qword_1EDB29C28, (uint64_t (*)(uint64_t))sub_1DC0D95F0, v2);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)v39 - v18;
  sub_1DC0D95F0(0);
  v48 = v20;
  v45 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  v42 = (char *)v39 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = v1;
  v39[3] = v1[4];
  sub_1DC4049CC();
  v50 = v51;
  v22 = MEMORY[0x1E0DB80B8];
  sub_1DC187FFC(0, (unint64_t *)&qword_1EDB29ED8, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB80B8]);
  v24 = v23;
  v39[1] = sub_1DC1C61D4(&qword_1EDB29ED0, (unint64_t *)&qword_1EDB29ED8, (uint64_t (*)(uint64_t, _QWORD *))v22, MEMORY[0x1E0DB80D0]);
  v39[2] = v24;
  sub_1DC405050();
  swift_release();
  sub_1DC0990BC(v46, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for StockListSelectionModel);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v10, 2, v5))
  {
    v25 = v41;
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v41, v10, v5);
    sub_1DC40103C();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v25, v5);
  }
  sub_1DC406C7C();
  swift_bridgeObjectRelease();
  v26 = *(void (**)(char *, uint64_t))(v47 + 8);
  v26(v16, v12);
  v27 = v45;
  v28 = v48;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v19, 1, v48) == 1)
  {
    sub_1DC0B091C((uint64_t)v19, &qword_1EDB29C28, (uint64_t (*)(uint64_t))sub_1DC0D95F0);
    result = MEMORY[0x1DF0CAD78](v49 + 2);
    if (result)
    {
      v30 = result;
      v31 = sub_1DC400280();
      v32 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1658];
      v33 = (uint64_t)v43;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v43, 1, 1, v31);
      sub_1DC2BE8F4(v33, v30);
      swift_unknownObjectRelease();
      return sub_1DC0B091C(v33, &qword_1EDB28B50, v32);
    }
  }
  else
  {
    v34 = v42;
    (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v42, v19, v28);
    v35 = MEMORY[0x1DF0CAD78](v49 + 2);
    if (v35)
    {
      v36 = v35;
      sub_1DC4049CC();
      v50 = v51;
      v37 = v40;
      sub_1DC405050();
      swift_release();
      v38 = (uint64_t)v43;
      sub_1DC406D24();
      v26(v37, v12);
      sub_1DC2BE8F4(v38, v36);
      swift_unknownObjectRelease();
      sub_1DC0B091C(v38, &qword_1EDB28B50, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1658]);
    }
    return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v34, v28);
  }
  return result;
}

void sub_1DC26203C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v5)(void);
  _QWORD *v6;
  void *v7;

  v2 = *(_QWORD *)(*(_QWORD *)v0 + 80);
  v1 = *(_QWORD *)(*(_QWORD *)v0 + 88);
  (*(void (**)(uint64_t, uint64_t))(v1 + 40))(v2, v1);
  v3 = swift_allocObject();
  swift_weakInit();
  v4 = (_QWORD *)swift_allocObject();
  v4[2] = v2;
  v4[3] = v1;
  v4[4] = v3;
  v5 = MEMORY[0x1E0DB8020];
  sub_1DC187FFC(0, (unint64_t *)&qword_1EDB41E00, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB8020]);
  sub_1DC1C61D4(&qword_1EDB41DF8, (unint64_t *)&qword_1EDB41E00, (uint64_t (*)(uint64_t, _QWORD *))v5, MEMORY[0x1E0DB8030]);
  swift_retain();
  sub_1DC4049E4();
  swift_release();
  swift_release();
  swift_unownedRetainStrong();
  swift_unownedRetain();
  swift_release();
  v6 = (_QWORD *)swift_allocObject();
  v6[2] = v2;
  v6[3] = v1;
  v6[4] = v0;
  v7 = (void *)sub_1DC407F18();
  swift_release();
  sub_1DC407F0C();
  swift_release();

}

uint64_t sub_1DC2621D0()
{
  uint64_t result;
  uint64_t v1;
  uint64_t Strong;
  _UNKNOWN **v3;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v1 = *(_QWORD *)(result + *(_QWORD *)(*(_QWORD *)result + 120));
    swift_unknownObjectRetain();
    swift_release();
    swift_beginAccess();
    Strong = swift_weakLoadStrong();
    v3 = &off_1EA45BE70;
    if (!Strong)
      v3 = 0;
    *(_QWORD *)(v1 + 24) = v3;
    swift_unknownObjectWeakAssign();
    swift_unknownObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t sub_1DC26228C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t (*v18)(_QWORD);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  void *v24;
  id v25;
  void (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  void *v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v8 = sub_1DC407EAC();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v32 - v13;
  sub_1DC2654EC();
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0990BC(a1, (uint64_t)v17, v18);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v17, 1, v8) == 1)
  {
    swift_unownedRetainStrong();
    v19 = MEMORY[0x1DF0CAD78](a2 + 16);
    swift_release();
    if (v19)
    {
      swift_unownedRetainStrong();
      type metadata accessor for StockSearchInteractor(0, a3, a4, v20);
      sub_1DC2BE97C(v19);
      swift_release();
      swift_unknownObjectRelease();
    }
    swift_unownedRetainStrong();
    v21 = MEMORY[0x1DF0CAD78](a2 + 16);
    result = swift_release();
    if (v21)
    {
      swift_unownedRetainStrong();
      v23 = MEMORY[0x1DF0CAD78](v21 + 16);
      if (v23)
      {
        v24 = (void *)v23;
        *(_QWORD *)(swift_allocObject() + 16) = v23;
        v25 = v24;
        sub_1DC402E3C();
        swift_release();
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        return swift_release();
      }
      else
      {
        swift_release();
        return swift_unknownObjectRelease();
      }
    }
  }
  else
  {
    v26 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
    v26(v14, v17, v8);
    swift_unownedRetainStrong();
    v27 = MEMORY[0x1DF0CAD78](a2 + 16);
    swift_release();
    if (v27)
    {
      swift_unownedRetainStrong();
      v28 = MEMORY[0x1DF0CAD78](v27 + 16);
      if (v28)
      {
        v29 = (void *)v28;
        (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v11, v14, v8);
        v30 = (*(unsigned __int8 *)(v9 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
        v31 = swift_allocObject();
        *(_QWORD *)(v31 + 16) = v29;
        v26((char *)(v31 + v30), v11, v8);
        v29;
        sub_1DC402E3C();
        swift_unknownObjectRelease();
        swift_release();
      }
      swift_unknownObjectRelease();
      swift_release();
    }
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v14, v8);
  }
  return result;
}

uint64_t sub_1DC26257C()
{
  uint64_t v0;
  uint64_t (*v1)(void);

  (*(void (**)(_QWORD))(*(_QWORD *)(*(_QWORD *)v0 + 88) + 48))(*(_QWORD *)(*(_QWORD *)v0 + 80));
  v1 = MEMORY[0x1E0DB8020];
  sub_1DC187FFC(0, (unint64_t *)&qword_1EDB41E00, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB8020]);
  sub_1DC1C61D4(&qword_1EDB41DF8, (unint64_t *)&qword_1EDB41E00, (uint64_t (*)(uint64_t, _QWORD *))v1, MEMORY[0x1E0DB8030]);
  sub_1DC4049E4();
  return swift_release();
}

uint64_t sub_1DC262634(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v2 = type metadata accessor for StockListSelectionModel();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1DC40382C();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v6 + 104))(v9, *MEMORY[0x1E0DADA80], v5, v7);
  sub_1DC262794(a1, (uint64_t)v9);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  v10 = sub_1DC4010E4();
  v11 = *(_QWORD *)(v10 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v4, a1, v10);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v4, 0, 2, v10);
  sub_1DC080808((unint64_t *)&qword_1EDB351C0, (uint64_t (*)(uint64_t))type metadata accessor for StockListSelectionModel, (uint64_t)&unk_1DC4157E8);
  sub_1DC402764();
  return sub_1DC0926D8((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for StockListSelectionModel);
}

uint64_t sub_1DC262794(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _QWORD v17[2];

  v17[0] = a2;
  v4 = sub_1DC40382C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x1E0C80A78](v4);
  v7 = sub_1DC4010E4();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  v10 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[1] = *(_QWORD *)(v2 + *(_QWORD *)(*(_QWORD *)v2 + 144));
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v8 + 16))(v11, a1, v7, v10);
  v12 = v4;
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 16))((char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v17[0], v4);
  v13 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v14 = (v9 + *(unsigned __int8 *)(v5 + 80) + v13) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v15 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v15 + v13, v11, v7);
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v15 + v14, (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v12);
  sub_1DC401828();
  return swift_release();
}

uint64_t sub_1DC262904(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v4 = v3;
  v30 = a3;
  v7 = *v3;
  v8 = type metadata accessor for StockSearchMode(0);
  v29 = *(_QWORD *)(v8 - 8);
  v9 = *(_QWORD *)(v29 + 64);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC2654EC();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for StocksActivity(0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (uint64_t *)((char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (a2)
    v17 = a1;
  else
    v17 = 0;
  v31 = v7;
  if (a2)
    v18 = a2;
  else
    v18 = 0xE000000000000000;
  *v16 = v17;
  v16[1] = v18;
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1DC404F00();
  sub_1DC0926D8((uint64_t)v16, type metadata accessor for StocksActivity);
  sub_1DC262BF4(v17, v18);
  sub_1DC407F3C();
  v19 = sub_1DC407EAC();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 48))(v13, 1, v19) == 1)
  {
    sub_1DC0926D8((uint64_t)v13, (uint64_t (*)(_QWORD))sub_1DC2654EC);
    v20 = swift_allocObject();
    *(_BYTE *)(v20 + 16) = 0;
    v28 = *(_QWORD *)((char *)v4 + *(_QWORD *)(*v4 + 120));
    v21 = swift_allocObject();
    swift_weakInit();
    sub_1DC0990BC(v30, (uint64_t)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for StockSearchMode);
    v22 = (*(unsigned __int8 *)(v29 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
    v23 = (v9 + v22 + 7) & 0xFFFFFFFFFFFFFFF8;
    v24 = (_QWORD *)swift_allocObject();
    v25 = v31;
    v24[2] = *(_QWORD *)(v31 + 80);
    v24[3] = *(_QWORD *)(v25 + 88);
    v24[4] = v21;
    sub_1DC092ED0((uint64_t)v10, (uint64_t)v24 + v22, type metadata accessor for StockSearchMode);
    v26 = (_QWORD *)((char *)v24 + v23);
    *v26 = v17;
    v26[1] = v18;
    *(_QWORD *)((char *)v24 + ((v23 + 23) & 0xFFFFFFFFFFFFFFF8)) = v20;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    sub_1DC3CD028(v17, v18, (uint64_t)sub_1DC265620, (uint64_t)v24);
    swift_release();
    swift_release();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return sub_1DC0926D8((uint64_t)v13, (uint64_t (*)(_QWORD))sub_1DC2654EC);
  }
}

uint64_t sub_1DC262BF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a2;
  swift_bridgeObjectRetain();
  sub_1DC401828();
  return swift_release();
}

uint64_t sub_1DC262C60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  _QWORD *v33;
  uint64_t (*v34)(void);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t ObjCClassFromMetadata;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  id v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  _BYTE *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;

  v82 = a6;
  v83 = a8;
  v84 = a5;
  v14 = sub_1DC4040D8();
  v75 = *(_QWORD *)(v14 - 8);
  v76 = v14;
  MEMORY[0x1E0C80A78](v14);
  v74 = (char *)&v67 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v70 = (char *)&v67 - v17;
  v18 = sub_1DC40124C();
  v73 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v71 = (char *)&v67 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for StockSearchMode(0);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(_QWORD *)(v21 + 64);
  MEMORY[0x1E0C80A78](v20);
  v72 = (uint64_t)&v67 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)&v67 - v24;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (!result)
    return result;
  v27 = result;
  v67 = v18;
  v80 = a2;
  v81 = a7;
  v77 = (_BYTE *)(v83 + 16);
  v79 = a1;
  v28 = a1;
  v29 = v84;
  v30 = sub_1DC26347C(v28, a2, a3, v84);
  v83 = *(_QWORD *)(v27 + 32);
  v78 = v30;
  v85 = v30;
  v31 = swift_allocObject();
  swift_weakInit();
  sub_1DC0990BC(v29, (uint64_t)v25, type metadata accessor for StockSearchMode);
  v32 = (*(unsigned __int8 *)(v21 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  v33 = (_QWORD *)swift_allocObject();
  v68 = a9;
  v33[2] = a9;
  v33[3] = a10;
  v69 = a10;
  v33[4] = v31;
  sub_1DC092ED0((uint64_t)v25, (uint64_t)v33 + v32, type metadata accessor for StockSearchMode);
  v34 = MEMORY[0x1E0DB8020];
  sub_1DC187FFC(0, (unint64_t *)&qword_1EDB41E00, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB8020]);
  sub_1DC1C61D4(&qword_1EDB41DF8, (unint64_t *)&qword_1EDB41E00, (uint64_t (*)(uint64_t, _QWORD *))v34, MEMORY[0x1E0DB8030]);
  swift_retain();
  sub_1DC4049E4();
  swift_release();
  swift_release();
  v35 = a3;
  if (*(_QWORD *)(a3 + 16))
  {
    v36 = MEMORY[0x1DF0CAD78](v27 + 16);
    v38 = v81;
    v39 = v82;
  }
  else
  {
    v38 = v81;
    v39 = v82;
    v44 = HIBYTE(v81) & 0xF;
    if ((v81 & 0x2000000000000000) == 0)
      v44 = v82 & 0xFFFFFFFFFFFFLL;
    if (v44)
    {
      type metadata accessor for Localized();
      ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
      v46 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
      sub_1DC3FFC80();

      sub_1DC089DA4(0, (unint64_t *)&qword_1EDB400C0, (uint64_t (*)(uint64_t))sub_1DC1542B8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v47 = swift_allocObject();
      *(_OWORD *)(v47 + 16) = xmmword_1DC40DC10;
      *(_QWORD *)(v47 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v47 + 64) = sub_1DC0E7FAC();
      *(_QWORD *)(v47 + 32) = v39;
      *(_QWORD *)(v47 + 40) = v38;
      swift_bridgeObjectRetain();
      sub_1DC408A70();
      swift_bridgeObjectRelease();
      v48 = (uint64_t)v74;
      sub_1DC4040C0();
      v49 = MEMORY[0x1DF0CAD78](v27 + 16);
      if (v49)
      {
        v51 = v49;
        type metadata accessor for StockSearchInteractor(0, v68, v69, v50);
        swift_retain();
        sub_1DC2BE9F0(v48, v51);
        swift_unknownObjectRelease();
        swift_release();
      }
      (*(void (**)(uint64_t, uint64_t))(v75 + 8))(v48, v76);
      v41 = v79;
      v40 = v80;
      v42 = v77;
      goto LABEL_17;
    }
    v52 = v72;
    sub_1DC0990BC(v84, v72, type metadata accessor for StockSearchMode);
    v53 = v73;
    v54 = v67;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v73 + 48))(v52, 1, v67) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v53 + 32))(v71, v52, v54);
      type metadata accessor for Localized();
      v55 = swift_getObjCClassFromMetadata();
      v56 = (void *)objc_opt_self();
      v57 = objc_msgSend(v56, sel_bundleForClass_, v55);
      v84 = sub_1DC3FFC80();

      v58 = objc_msgSend(v56, sel_bundleForClass_, v55);
      sub_1DC3FFC80();

      sub_1DC089DA4(0, (unint64_t *)&qword_1EDB400C0, (uint64_t (*)(uint64_t))sub_1DC1542B8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v59 = swift_allocObject();
      *(_OWORD *)(v59 + 16) = xmmword_1DC40DC10;
      v60 = sub_1DC40121C();
      v62 = v61;
      *(_QWORD *)(v59 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v59 + 64) = sub_1DC0E7FAC();
      *(_QWORD *)(v59 + 32) = v60;
      *(_QWORD *)(v59 + 40) = v62;
      sub_1DC408A70();
      swift_bridgeObjectRelease();
      v63 = (uint64_t)v70;
      sub_1DC4040CC();
      v64 = MEMORY[0x1DF0CAD78](v27 + 16);
      if (v64)
      {
        v66 = v64;
        type metadata accessor for StockSearchInteractor(0, v68, v69, v65);
        swift_retain();
        sub_1DC2BE9F0(v63, v66);
        swift_unknownObjectRelease();
        swift_release();
      }
      (*(void (**)(uint64_t, uint64_t))(v75 + 8))(v63, v76);
      (*(void (**)(char *, uint64_t))(v73 + 8))(v71, v67);
      v40 = v80;
      v38 = v81;
      v41 = v79;
      v42 = v77;
      goto LABEL_17;
    }
    v36 = MEMORY[0x1DF0CAD78](v27 + 16);
  }
  v41 = v79;
  v40 = v80;
  v42 = v77;
  if (v36)
  {
    v43 = v36;
    type metadata accessor for StockSearchInteractor(0, v68, v69, v37);
    swift_retain();
    sub_1DC2BE97C(v43);
    swift_release();
    swift_unknownObjectRelease();
  }
LABEL_17:
  swift_beginAccess();
  if ((*v42 & 1) == 0)
  {
    swift_beginAccess();
    *v42 = 1;
    sub_1DC2637C8(v39, v38, v41, v40, v35);
  }
  swift_release();
  return swift_release();
}

uint64_t sub_1DC26347C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t (*v16)(_QWORD);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v29 = a1;
  v8 = *v4;
  v9 = sub_1DC40124C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for StockSearchMode(0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0990BC(a4, (uint64_t)v15, v16);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v15, 1, v9) == 1)
  {
    v17 = *(_QWORD *)(*v4 + 120);
    v18 = (uint64_t)v4 + *(_QWORD *)(*v4 + 112);
    v27 = a3;
    v28 = v18;
    v19 = *(uint64_t *)((char *)v4 + v17);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v19 + 112), *(_QWORD *)(v19 + 136));
    sub_1DC400A60();
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v19 + 112), *(_QWORD *)(v19 + 136));
    v20 = sub_1DC400ACC();
    v21 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, char *, uint64_t, _QWORD))(*(_QWORD *)(v8 + 88) + 56))(v29, a2, v27, v12, v20, *(_QWORD *)(v8 + 80));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v15, v9);
    v22 = *(uint64_t *)((char *)v4 + *(_QWORD *)(*v4 + 120));
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v22 + 112), *(_QWORD *)(v22 + 136));
    v23 = sub_1DC400ACC();
    v21 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, char *, uint64_t, _QWORD))(*(_QWORD *)(v8 + 88) + 56))(v29, a2, a3, v12, v23, *(_QWORD *)(v8 + 80));
  }
  v24 = v21;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return v24;
}

uint64_t sub_1DC26367C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t result;
  uint64_t v11;
  uint64_t (*v12)(_QWORD);
  uint64_t v13;
  uint64_t v14;

  v4 = type metadata accessor for StockListSelectionModel();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for StockSearchMode(0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1DC0990BC(a3, (uint64_t)v9, type metadata accessor for StockSearchMode);
    v11 = sub_1DC40124C();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v9, 1, v11) == 1)
    {
      sub_1DC402740();
      sub_1DC261B80((uint64_t)v6);
      swift_release();
      v12 = (uint64_t (*)(_QWORD))type metadata accessor for StockListSelectionModel;
      v13 = (uint64_t)v6;
    }
    else
    {
      swift_release();
      v12 = type metadata accessor for StockSearchMode;
      v13 = (uint64_t)v9;
    }
    return sub_1DC0926D8(v13, v12);
  }
  return result;
}

uint64_t sub_1DC2637C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v10;

  v10 = (_QWORD *)swift_allocObject();
  v10[2] = a3;
  v10[3] = a4;
  v10[4] = a5;
  v10[5] = a1;
  v10[6] = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1DC401828();
  return swift_release();
}

uint64_t sub_1DC263870(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t (*v7)(void);

  v4 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 72))(a1, v4, v3);
  v5 = swift_allocObject();
  swift_weakInit();
  v6 = (_QWORD *)swift_allocObject();
  v6[2] = v4;
  v6[3] = v3;
  v6[4] = v5;
  v6[5] = a1;
  v7 = MEMORY[0x1E0DB8020];
  sub_1DC187FFC(0, (unint64_t *)&qword_1EDB41E00, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB8020]);
  sub_1DC1C61D4(&qword_1EDB41DF8, (unint64_t *)&qword_1EDB41E00, (uint64_t (*)(uint64_t, _QWORD *))v7, MEMORY[0x1E0DB8030]);
  swift_retain();
  swift_retain();
  sub_1DC4049E4();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1DC2639A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  int v13;
  uint64_t result;
  uint64_t v15;

  v5 = type metadata accessor for StockListSelectionModel();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1DC405578();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v9 + 16))(v12, a1, v8, v10);
  v13 = (*(uint64_t (**)(char *, uint64_t))(v9 + 88))(v12, v8);
  if (v13 == *MEMORY[0x1E0DB9A48])
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
    return sub_1DC405BC0();
  }
  if (v13 == *MEMORY[0x1E0DB9A40])
    return sub_1DC405BC0();
  if (v13 == *MEMORY[0x1E0DB9A50])
  {
    swift_beginAccess();
    result = swift_weakLoadStrong();
    if (result)
    {
      sub_1DC263B94(a3);
      sub_1DC402740();
      sub_1DC261B80((uint64_t)v7);
      swift_release();
      return sub_1DC0926D8((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for StockListSelectionModel);
    }
  }
  else
  {
    result = sub_1DC409838();
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC263B94(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  unsigned int *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t result;
  char *v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;

  v46 = sub_1DC40382C();
  v44 = *(_QWORD *)(v46 - 8);
  MEMORY[0x1E0C80A78](v46);
  v43 = (char *)&v43 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1DC404E1C();
  v47 = *(_QWORD *)(v3 - 8);
  v48 = v3;
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for StockViewModel();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v43 - v10;
  v12 = type metadata accessor for StockSearchModel();
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v43 - v16;
  sub_1DC0D95F0(0);
  v19 = v18;
  v20 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v22 = (char *)&v43 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_1DC4010E4();
  v51 = *(_QWORD *)(v23 - 8);
  v52 = v23;
  MEMORY[0x1E0C80A78](v23);
  v49 = a1;
  v50 = (char *)&v43 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC405BA8();
  sub_1DC404354();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
  sub_1DC0990BC((uint64_t)v17, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for StockSearchModel);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1DC1C62AC();
    v26 = &v14[*(int *)(v25 + 48)];
    sub_1DC092ED0((uint64_t)v14, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for StockViewModel);
    v27 = sub_1DC40124C();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v27 - 8) + 8))(v26, v27);
  }
  else
  {
    sub_1DC092ED0((uint64_t)v14, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for StockViewModel);
  }
  sub_1DC092ED0((uint64_t)v8, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for StockViewModel);
  sub_1DC0926D8((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for StockSearchModel);
  v29 = (uint64_t)v50;
  v28 = v51;
  v30 = v52;
  (*(void (**)(char *, char *, uint64_t))(v51 + 16))(v50, v11, v52);
  sub_1DC0926D8((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for StockViewModel);
  sub_1DC405BB4();
  v32 = v47;
  v31 = v48;
  v33 = (*(uint64_t (**)(char *, uint64_t))(v47 + 88))(v5, v48);
  if (v33 == *MEMORY[0x1E0DB88D0])
  {
    (*(void (**)(char *, uint64_t))(v32 + 96))(v5, v31);
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v28 + 8))(v29, v30);
  }
  if (v33 == *MEMORY[0x1E0DB88D8])
  {
    v34 = sub_1DC403550();
    v35 = sub_1DC080808(&qword_1F034FAD0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD680], MEMORY[0x1E0DAD678]);
    sub_1DC264884(v34, v45, v29, v34, v35);
    v36 = (unsigned int *)MEMORY[0x1E0DADA90];
LABEL_10:
    v40 = (uint64_t)v43;
    v39 = v44;
    v41 = v46;
    (*(void (**)(char *, _QWORD, uint64_t))(v44 + 104))(v43, *v36, v46);
    sub_1DC262794(v29, v40);
    (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v40, v41);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v28 + 8))(v29, v30);
  }
  if (v33 == *MEMORY[0x1E0DB88E0])
  {
    v37 = sub_1DC403430();
    v38 = sub_1DC080808(&qword_1EDB29830, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD510], MEMORY[0x1E0DAD4E0]);
    sub_1DC264884(v37, v45, v29, v37, v38);
    v36 = (unsigned int *)MEMORY[0x1E0DADA88];
    goto LABEL_10;
  }
  result = sub_1DC409838();
  __break(1u);
  return result;
}

uint64_t sub_1DC264014()
{
  return sub_1DC40271C();
}

uint64_t sub_1DC26403C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v4;

  v0 = type metadata accessor for StockListSelectionModel();
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v4 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC402740();
  sub_1DC261B80((uint64_t)v2);
  return sub_1DC0926D8((uint64_t)v2, (uint64_t (*)(_QWORD))type metadata accessor for StockListSelectionModel);
}

uint64_t sub_1DC2640CC(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(void);

  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(*(_QWORD *)v1 + 88) + 80))(a1, *(_QWORD *)(*(_QWORD *)v1 + 80));
  v2 = MEMORY[0x1E0DB8020];
  sub_1DC187FFC(0, (unint64_t *)&qword_1EDB41E00, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB8020]);
  sub_1DC1C61D4(&qword_1EDB41DF8, (unint64_t *)&qword_1EDB41E00, (uint64_t (*)(uint64_t, _QWORD *))v2, MEMORY[0x1E0DB8030]);
  sub_1DC4049E4();
  return swift_release();
}

uint64_t sub_1DC264184()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  _OWORD v10[2];

  v0 = sub_1DC402F14();
  v1 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DACD40];
  v2 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  sub_1DC402F08();
  sub_1DC089DA4(0, (unint64_t *)&qword_1EDB3FE40, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8178], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v5 = sub_1DC401618();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1DC40DC10;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v6 + 104))(v8 + v7, *MEMORY[0x1E0CF8170], v5);
  sub_1DC080808(&qword_1F03500E8, v1, MEMORY[0x1E0DACD30]);
  sub_1DC4015C4();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v0);
  sub_1DC403004();
  sub_1DC080808(&qword_1F0350100, (uint64_t (*)(uint64_t))MEMORY[0x1E0DACEF8], MEMORY[0x1E0DACEF0]);
  memset(v10, 0, sizeof(v10));
  sub_1DC4015DC();
  return sub_1DC0926D8((uint64_t)v10, (uint64_t (*)(_QWORD))sub_1DC0D11C4);
}

uint64_t sub_1DC264368(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD v43[2];
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _OWORD v56[2];

  v49 = a6;
  v47 = a5;
  v53 = a1;
  v8 = sub_1DC40346C();
  v51 = *(_QWORD *)(v8 - 8);
  v52 = v8;
  MEMORY[0x1E0C80A78](v8);
  v50 = (char *)v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = sub_1DC402F14();
  v46 = *(_QWORD *)(v48 - 8);
  MEMORY[0x1E0C80A78](v48);
  v45 = (char *)v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for StockViewModel();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(_QWORD *)(a2 + 16);
  v16 = MEMORY[0x1E0DEE9D8];
  v54 = a3;
  if (v15)
  {
    *(_QWORD *)&v56[0] = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1DC0F0894(0, v15, 0);
    v17 = *(unsigned __int8 *)(v12 + 80);
    v43[1] = a2;
    v44 = v12;
    v18 = a2 + ((v17 + 32) & ~v17);
    v55 = *(_QWORD *)(v12 + 72);
    v16 = *(_QWORD *)&v56[0];
    do
    {
      sub_1DC0990BC(v18, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for StockViewModel);
      v19 = sub_1DC4010B4();
      v21 = v20;
      sub_1DC0926D8((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for StockViewModel);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1DC0F0894(0, *(_QWORD *)(v16 + 16) + 1, 1);
        v16 = *(_QWORD *)&v56[0];
      }
      v23 = *(_QWORD *)(v16 + 16);
      v22 = *(_QWORD *)(v16 + 24);
      if (v23 >= v22 >> 1)
      {
        sub_1DC0F0894(v22 > 1, v23 + 1, 1);
        v16 = *(_QWORD *)&v56[0];
      }
      *(_QWORD *)(v16 + 16) = v23 + 1;
      v24 = v16 + 16 * v23;
      *(_QWORD *)(v24 + 32) = v19;
      *(_QWORD *)(v24 + 40) = v21;
      v18 += v55;
      --v15;
    }
    while (v15);
    swift_bridgeObjectRelease();
    a3 = v54;
    v12 = v44;
  }
  v25 = *(_QWORD *)(a3 + 16);
  v26 = MEMORY[0x1E0DEE9D8];
  if (v25)
  {
    *(_QWORD *)&v56[0] = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1DC0F0894(0, v25, 0);
    v27 = a3 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
    v55 = *(_QWORD *)(v12 + 72);
    v26 = *(_QWORD *)&v56[0];
    do
    {
      sub_1DC0990BC(v27, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for StockViewModel);
      v28 = sub_1DC4010B4();
      v30 = v29;
      sub_1DC0926D8((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for StockViewModel);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1DC0F0894(0, *(_QWORD *)(v26 + 16) + 1, 1);
        v26 = *(_QWORD *)&v56[0];
      }
      v32 = *(_QWORD *)(v26 + 16);
      v31 = *(_QWORD *)(v26 + 24);
      if (v32 >= v31 >> 1)
      {
        sub_1DC0F0894(v31 > 1, v32 + 1, 1);
        v26 = *(_QWORD *)&v56[0];
      }
      *(_QWORD *)(v26 + 16) = v32 + 1;
      v33 = v26 + 16 * v32;
      *(_QWORD *)(v33 + 32) = v28;
      *(_QWORD *)(v33 + 40) = v30;
      v27 += v55;
      --v25;
    }
    while (v25);
    swift_bridgeObjectRelease();
  }
  *(_QWORD *)&v56[0] = v16;
  sub_1DC11365C(v26);
  sub_1DC080808(&qword_1F03500E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DACD40], MEMORY[0x1E0DACD30]);
  v34 = v48;
  sub_1DC4015AC();
  swift_bridgeObjectRetain();
  v35 = v45;
  sub_1DC402F08();
  sub_1DC4015C4();
  (*(void (**)(char *, uint64_t))(v46 + 8))(v35, v34);
  v36 = v50;
  sub_1DC403460();
  sub_1DC089DA4(0, (unint64_t *)&qword_1EDB3FE40, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8178], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v37 = sub_1DC401618();
  v38 = *(_QWORD *)(v37 - 8);
  v39 = (*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80);
  v40 = swift_allocObject();
  *(_OWORD *)(v40 + 16) = xmmword_1DC40DC10;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v38 + 104))(v40 + v39, *MEMORY[0x1E0CF8168], v37);
  sub_1DC080808(&qword_1F03500F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD558], MEMORY[0x1E0DAD548]);
  v41 = v52;
  sub_1DC4015C4();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v51 + 8))(v36, v41);
  sub_1DC40388C();
  sub_1DC080808(&qword_1F03500F8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DADB58], MEMORY[0x1E0DADB50]);
  memset(v56, 0, sizeof(v56));
  sub_1DC4015DC();
  return sub_1DC0926D8((uint64_t)v56, (uint64_t (*)(_QWORD))sub_1DC0D11C4);
}

uint64_t sub_1DC264884(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;

  v16 = a5;
  v17 = a1;
  v7 = *a2;
  v8 = sub_1DC4010E4();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x1E0C80A78](v8);
  v11 = swift_allocObject();
  swift_weakInit();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a3, v8);
  v12 = (*(unsigned __int8 *)(v9 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v13 = (char *)swift_allocObject();
  *((_QWORD *)v13 + 2) = *(_QWORD *)(v7 + 80);
  *((_QWORD *)v13 + 3) = a4;
  v14 = v16;
  *((_QWORD *)v13 + 4) = *(_QWORD *)(v7 + 88);
  *((_QWORD *)v13 + 5) = v14;
  *((_QWORD *)v13 + 6) = v11;
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(&v13[v12], (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  *(_QWORD *)&v13[(v10 + v12 + 7) & 0xFFFFFFFFFFFFFFF8] = v17;
  swift_retain();
  sub_1DC401828();
  swift_release();
  return swift_release();
}

uint64_t sub_1DC2649DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE *v26;
  uint64_t result;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE *v34;
  char v35;
  unsigned int *v36;
  uint64_t v37;
  _BYTE *v38;
  uint64_t v39;
  _BYTE *v40;
  uint64_t v41;
  uint64_t v42;
  _BYTE v43[4];
  unsigned int v44;
  void (*v45)(uint64_t);
  __int128 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _BYTE *v53;
  uint64_t v54;
  uint64_t v55;
  _BYTE *v56;
  _BYTE *v57;
  uint64_t v58;
  _BYTE *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _OWORD v66[2];

  v63 = a4;
  v64 = a1;
  v60 = sub_1DC403184();
  v58 = *(_QWORD *)(v60 - 8);
  MEMORY[0x1E0C80A78](v60);
  v56 = &v43[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v11);
  v57 = &v43[-v12];
  v13 = sub_1DC40124C();
  v54 = *(_QWORD *)(v13 - 8);
  v55 = v13;
  MEMORY[0x1E0C80A78](v13);
  v53 = &v43[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = sub_1DC403178();
  v61 = *(_QWORD *)(v15 - 8);
  v62 = v15;
  MEMORY[0x1E0C80A78](v15);
  v59 = &v43[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v17 = sub_1DC402F50();
  MEMORY[0x1E0C80A78](v17);
  v19 = &v43[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v20 = sub_1DC4011C8();
  v21 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  v23 = &v43[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v24 = sub_1DC402F44();
  v52 = *(_QWORD *)(v24 - 8);
  MEMORY[0x1E0C80A78](v24);
  v26 = &v43[-((v25 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v65 = result;
    sub_1DC4010B4();
    v50 = a6;
    v51 = a8;
    sub_1DC401078();
    sub_1DC23A0A0((uint64_t)v19);
    (*(void (**)(_BYTE *, uint64_t))(v21 + 8))(v23, v20);
    sub_1DC4010CC();
    sub_1DC402F2C();
    sub_1DC089DA4(0, (unint64_t *)&qword_1EDB3FE40, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8178], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v49 = v28;
    v29 = sub_1DC401618();
    v30 = *(_QWORD *)(v29 - 8);
    v31 = *(unsigned __int8 *)(v30 + 80);
    v32 = (v31 + 32) & ~v31;
    v48 = v32 + *(_QWORD *)(v30 + 72);
    v47 = v31 | 7;
    v33 = swift_allocObject();
    v46 = xmmword_1DC40DC10;
    *(_OWORD *)(v33 + 16) = xmmword_1DC40DC10;
    v44 = *MEMORY[0x1E0CF8170];
    v45 = *(void (**)(uint64_t))(v30 + 104);
    v45(v33 + v32);
    sub_1DC080808(&qword_1EDB29738, (uint64_t (*)(uint64_t))MEMORY[0x1E0DACD70], MEMORY[0x1E0DACD58]);
    sub_1DC4015C4();
    swift_bridgeObjectRelease();
    (*(void (**)(_BYTE *, uint64_t))(v52 + 8))(v26, v24);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v65 + *(_QWORD *)(*(_QWORD *)v65 + 160)), *(_QWORD *)(v65 + *(_QWORD *)(*(_QWORD *)v65 + 160) + 24));
    v34 = v53;
    sub_1DC400A60();
    v35 = sub_1DC4011D4();
    v36 = (unsigned int *)MEMORY[0x1E0DAD158];
    v38 = v57;
    v37 = v58;
    if ((v35 & 1) == 0)
      v36 = (unsigned int *)MEMORY[0x1E0DAD150];
    v39 = v60;
    (*(void (**)(_BYTE *, _QWORD, uint64_t))(v58 + 104))(v57, *v36, v60);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v37 + 16))(v56, v38, v39);
    v40 = v59;
    sub_1DC40316C();
    (*(void (**)(_BYTE *, uint64_t))(v54 + 8))(v34, v55);
    (*(void (**)(_BYTE *, uint64_t))(v37 + 8))(v38, v39);
    v41 = swift_allocObject();
    *(_OWORD *)(v41 + 16) = v46;
    ((void (*)(uint64_t, _QWORD, uint64_t))v45)(v41 + v32, v44, v29);
    sub_1DC080808(&qword_1EDB297C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD148], MEMORY[0x1E0DAD138]);
    v42 = v62;
    sub_1DC4015C4();
    swift_bridgeObjectRelease();
    (*(void (**)(_BYTE *, uint64_t))(v61 + 8))(v40, v42);
    memset(v66, 0, sizeof(v66));
    sub_1DC4015DC();
    swift_release();
    return sub_1DC0926D8((uint64_t)v66, (uint64_t (*)(_QWORD))sub_1DC0D11C4);
  }
  return result;
}

uint64_t sub_1DC264F10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _OWORD v17[2];

  v4 = sub_1DC40382C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1DC4035E0();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC4010B4();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a3, v4);
  sub_1DC4035D4();
  sub_1DC089DA4(0, (unint64_t *)&qword_1EDB3FE40, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8178], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v12 = sub_1DC401618();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1DC40DC10;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v13 + 104))(v15 + v14, *MEMORY[0x1E0CF8170], v12);
  sub_1DC080808(&qword_1F03500D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD718], MEMORY[0x1E0DAD708]);
  sub_1DC4015C4();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  sub_1DC4037E4();
  sub_1DC080808(&qword_1F03500D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DADA18], MEMORY[0x1E0DADA10]);
  memset(v17, 0, sizeof(v17));
  sub_1DC4015DC();
  return sub_1DC0926D8((uint64_t)v17, (uint64_t (*)(_QWORD))sub_1DC0D11C4);
}

uint64_t *sub_1DC26514C()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1DC148A20((uint64_t)(v0 + 2));
  swift_release();
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v1 + 80) - 8) + 8))((uint64_t)v0 + *(_QWORD *)(*v0 + 112));
  swift_unknownObjectRelease();
  swift_release();

  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v0 + *(_QWORD *)(*v0 + 160));
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1DC265218()
{
  sub_1DC26514C();
  return swift_deallocClassInstance();
}

uint64_t sub_1DC265254(uint64_t a1, uint64_t a2)
{
  return sub_1DC2640CC(a2);
}

uint64_t sub_1DC265260(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DC265950(a3);
}

uint64_t sub_1DC265268(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DC265CAC(a3);
}

uint64_t sub_1DC265270(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DC265D1C(a3);
}

uint64_t sub_1DC265278()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1DC26529C()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DC2652C8(uint64_t a1)
{
  uint64_t v1;

  return sub_1DC2639A8(a1, *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_1DC2652D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v1 = sub_1DC4010E4();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = sub_1DC40382C();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (v3 + v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);
  return swift_deallocObject();
}

uint64_t sub_1DC265388(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(sub_1DC4010E4() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v3 + 64);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(sub_1DC40382C() - 8) + 80);
  return sub_1DC264F10(a1, v1 + v4, v1 + ((v4 + v5 + v6) & ~v6));
}

uint64_t sub_1DC2653F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1DC4010E4();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1DC265470(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;

  v3 = v1[2];
  v4 = v1[3];
  v5 = v1[4];
  v6 = v1[5];
  v7 = *(_QWORD *)(sub_1DC4010E4() - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  return sub_1DC2649DC(a1, v1[6], (uint64_t)v1 + v8, *(_QWORD *)((char *)v1 + ((*(_QWORD *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFF8)), v3, v4, v5, v6);
}

void sub_1DC2654EC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F03500E0)
  {
    sub_1DC11B7B8();
    v0 = sub_1DC407F30();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1F03500E0);
  }
}

uint64_t sub_1DC265544()
{
  return swift_deallocObject();
}

uint64_t sub_1DC265554()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(type metadata accessor for StockSearchMode(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  swift_release();
  v3 = sub_1DC40124C();
  v4 = *(_QWORD *)(v3 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v4 + 48))(v0 + v2, 1, v3))
    (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v0 + v2, v3);
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DC265620(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;

  v7 = v3[2];
  v8 = v3[3];
  v9 = *(_QWORD *)(type metadata accessor for StockSearchMode(0) - 8);
  v10 = (*(unsigned __int8 *)(v9 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v11 = (*(_QWORD *)(v9 + 64) + v10 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1DC262C60(a1, a2, a3, v3[4], (uint64_t)v3 + v10, *(_QWORD *)((char *)v3 + v11), *(_QWORD *)((char *)v3 + v11 + 8), *(_QWORD *)((char *)v3 + ((v11 + 23) & 0xFFFFFFFFFFFFF8)), v7, v8);
}

uint64_t sub_1DC2656B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for StockSearchMode(0) - 8) + 80);
  v2 = (v1 + 40) & ~v1;
  swift_release();
  v3 = sub_1DC40124C();
  v4 = *(_QWORD *)(v3 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v0 + v2, 1, v3))
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v0 + v2, v3);
  return swift_deallocObject();
}

uint64_t sub_1DC265754(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for StockSearchMode(0) - 8) + 80);
  return sub_1DC26367C(a1, *(_QWORD *)(v1 + 32), v1 + ((v3 + 40) & ~v3));
}

uint64_t sub_1DC2657A8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1DC2657E4(uint64_t a1)
{
  uint64_t *v1;

  return sub_1DC264368(a1, v1[2], v1[3], v1[4], v1[5], v1[6]);
}

uint64_t sub_1DC2657F4()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1DC265818()
{
  return sub_1DC264184();
}

uint64_t sub_1DC265820()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DC265844()
{
  return sub_1DC2621D0();
}

uint64_t sub_1DC265850()
{
  swift_unownedRelease();
  return swift_deallocObject();
}

uint64_t sub_1DC265874(uint64_t a1)
{
  uint64_t *v1;

  return sub_1DC26228C(a1, v1[4], v1[2], v1[3]);
}

uint64_t sub_1DC265880()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1DC407EAC();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1DC2658F4()
{
  uint64_t v0;

  sub_1DC407EAC();
  return sub_1DC1F1908(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1DC265924()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1DC265948()
{
  uint64_t v0;

  return sub_1DC1F1E80(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1DC265954(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v23;
  uint64_t result;
  void *v25;
  uint64_t v26;
  void *v27;
  id v28;
  uint64_t (*v29)(uint64_t);
  _QWORD v30[2];
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD aBlock[6];

  v30[1] = a1;
  v3 = sub_1DC40724C();
  v33 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1DC407270();
  v7 = *(_QWORD *)(v6 - 8);
  v31 = v6;
  v32 = v7;
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1DC40124C();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for StockSearchMode(0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = (uint64_t)a2 + OBJC_IVAR____TtC8StocksUI25StockSearchViewController_stockSearchMode;
  swift_beginAccess();
  sub_1DC0990BC(v17, (uint64_t)v16, type metadata accessor for StockSearchMode);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v16, 1, v10) == 1)
  {
LABEL_7:
    sub_1DC0ACADC();
    v25 = (void *)sub_1DC409148();
    v26 = swift_allocObject();
    *(_QWORD *)(v26 + 16) = a2;
    aBlock[4] = sub_1DC265D20;
    aBlock[5] = v26;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1DC081B88;
    aBlock[3] = &block_descriptor_24;
    v27 = _Block_copy(aBlock);
    v28 = a2;
    swift_release();
    sub_1DC407264();
    aBlock[0] = MEMORY[0x1E0DEE9D8];
    v29 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
    sub_1DC080808(&qword_1EDB275A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    sub_1DC089DA4(0, (unint64_t *)&unk_1EDB3F710, v29, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1DC1B5D98();
    sub_1DC40964C();
    MEMORY[0x1DF0C99C8](0, v9, v5, v27);
    _Block_release(v27);

    (*(void (**)(char *, uint64_t))(v33 + 8))(v5, v3);
    return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v9, v31);
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v16, v10);
  v18 = sub_1DC4011E0();
  v20 = v19;
  if (v18 != sub_1DC4011E0() || v20 != v21)
  {
    v23 = sub_1DC4099E8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    if ((v23 & 1) != 0)
      return result;
    goto LABEL_7;
  }
  swift_bridgeObjectRelease_n();
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
}

uint64_t sub_1DC265CAC(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  void *v4;

  result = MEMORY[0x1DF0CAD78](v1 + 16);
  if (result)
  {
    v4 = (void *)MEMORY[0x1DF0CAD78](result + 16);
    if (v4)
    {
      sub_1DC265954(a1, v4);
      swift_unknownObjectRelease();
    }
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1DC265D20()
{
  return sub_1DC1F1FCC();
}

_QWORD *sub_1DC265D30(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  int *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  int *v43;
  void (*v44)(char *, char *, uint64_t);
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v55;
  _QWORD *v56;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    v15 = (_QWORD *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1DC4010E4();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1DC401030();
    v12 = *(_QWORD *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    {
      sub_1DC092F50(0, &qword_1EDB28DC0, (void (*)(uint64_t))MEMORY[0x1E0DAF040]);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    v16 = a3[6];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    v19 = (int *)type metadata accessor for StockSparklineViewModel(0);
    v20 = *((_QWORD *)v19 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v20 + 48))(v18, 1, v19))
    {
      sub_1DC092F50(0, &qword_1EDB353E0, (void (*)(uint64_t))type metadata accessor for StockSparklineViewModel);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      v22 = sub_1DC408614();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v17, v18, v22);
      v23 = v19[5];
      v24 = &v17[v23];
      v25 = &v18[v23];
      *(_QWORD *)v24 = *(_QWORD *)v25;
      v24[8] = v25[8];
      v26 = v19[6];
      v27 = &v17[v26];
      v28 = &v18[v26];
      *(_QWORD *)v27 = *(_QWORD *)v28;
      v27[8] = v28[8];
      v17[v19[7]] = v18[v19[7]];
      v29 = v19[8];
      v30 = &v17[v29];
      v31 = &v18[v29];
      v32 = sub_1DC400F7C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v30, v31, v32);
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v20 + 56))(v17, 0, 1, v19);
    }
    v33 = a3[7];
    v34 = (char *)a1 + v33;
    v55 = a2;
    v35 = (char *)a2 + v33;
    *(_QWORD *)v34 = *(_QWORD *)v35;
    v34[8] = v35[8];
    *((_QWORD *)v34 + 2) = *((_QWORD *)v35 + 2);
    v34[24] = v35[24];
    *((_QWORD *)v34 + 4) = *((_QWORD *)v35 + 4);
    v34[40] = v35[40];
    v36 = *((_QWORD *)v35 + 7);
    *((_QWORD *)v34 + 6) = *((_QWORD *)v35 + 6);
    *((_QWORD *)v34 + 7) = v36;
    v37 = *((_QWORD *)v35 + 9);
    *((_QWORD *)v34 + 8) = *((_QWORD *)v35 + 8);
    *((_QWORD *)v34 + 9) = v37;
    v34[80] = v35[80];
    v38 = type metadata accessor for PriceViewModel();
    v39 = *(int *)(v38 + 40);
    v40 = &v34[v39];
    v41 = &v35[v39];
    v42 = sub_1DC4011C8();
    v56 = a1;
    v43 = a3;
    v44 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v42 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v44(v40, v41, v42);
    v45 = *(int *)(v38 + 44);
    v46 = &v34[v45];
    v47 = &v35[v45];
    v48 = sub_1DC400118();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 16))(v46, v47, v48);
    v49 = v43[8];
    v50 = (char *)v56 + v49;
    v51 = (char *)v55 + v49;
    v52 = sub_1DC4008EC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 16))(v50, v51, v52);
    v53 = v43[9];
    v15 = v56;
    *((_BYTE *)v56 + v53) = *((_BYTE *)v55 + v53);
  }
  return v15;
}

uint64_t sub_1DC266080(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  _BYTE *v18;
  int *v19;
  uint64_t v20;
  uint64_t (*v21)(_BYTE *, uint64_t, int *);
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;

  v6 = sub_1DC4010E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (void *)(a1 + v7);
  v9 = (void *)(a2 + v7);
  v10 = sub_1DC401030();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    sub_1DC092F50(0, &qword_1EDB28DC0, (void (*)(uint64_t))MEMORY[0x1E0DAF040]);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 24))(v8, v9, v10);
LABEL_7:
  v16 = a3[6];
  v17 = (_BYTE *)(a1 + v16);
  v18 = (_BYTE *)(a2 + v16);
  v19 = (int *)type metadata accessor for StockSparklineViewModel(0);
  v20 = *((_QWORD *)v19 - 1);
  v21 = *(uint64_t (**)(_BYTE *, uint64_t, int *))(v20 + 48);
  v22 = v21(v17, 1, v19);
  v23 = v21(v18, 1, v19);
  if (!v22)
  {
    if (!v23)
    {
      v57 = sub_1DC408614();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v57 - 8) + 24))(v17, v18, v57);
      v58 = v19[5];
      v59 = &v17[v58];
      v60 = &v18[v58];
      v61 = *(_QWORD *)v60;
      v59[8] = v60[8];
      *(_QWORD *)v59 = v61;
      v62 = v19[6];
      v63 = &v17[v62];
      v64 = &v18[v62];
      LOBYTE(v61) = v64[8];
      *(_QWORD *)v63 = *(_QWORD *)v64;
      v63[8] = v61;
      v17[v19[7]] = v18[v19[7]];
      v65 = v19[8];
      v66 = &v17[v65];
      v67 = &v18[v65];
      v68 = sub_1DC400F7C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v68 - 8) + 24))(v66, v67, v68);
      goto LABEL_13;
    }
    sub_1DC0EDE58((uint64_t)v17);
    goto LABEL_12;
  }
  if (v23)
  {
LABEL_12:
    sub_1DC092F50(0, &qword_1EDB353E0, (void (*)(uint64_t))type metadata accessor for StockSparklineViewModel);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
    goto LABEL_13;
  }
  v24 = sub_1DC408614();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v17, v18, v24);
  v25 = v19[5];
  v26 = &v17[v25];
  v27 = &v18[v25];
  v28 = *(_QWORD *)v27;
  v26[8] = v27[8];
  *(_QWORD *)v26 = v28;
  v29 = v19[6];
  v30 = &v17[v29];
  v31 = &v18[v29];
  LOBYTE(v28) = v31[8];
  *(_QWORD *)v30 = *(_QWORD *)v31;
  v30[8] = v28;
  v17[v19[7]] = v18[v19[7]];
  v32 = v19[8];
  v33 = &v17[v32];
  v34 = &v18[v32];
  v35 = sub_1DC400F7C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v20 + 56))(v17, 0, 1, v19);
LABEL_13:
  v37 = a3[7];
  v38 = a1 + v37;
  v39 = a2 + v37;
  v40 = *(_QWORD *)(a2 + v37);
  *(_BYTE *)(v38 + 8) = *(_BYTE *)(v39 + 8);
  *(_QWORD *)v38 = v40;
  v41 = *(_QWORD *)(v39 + 16);
  *(_BYTE *)(v38 + 24) = *(_BYTE *)(v39 + 24);
  *(_QWORD *)(v38 + 16) = v41;
  v42 = *(_QWORD *)(v39 + 32);
  *(_BYTE *)(v38 + 40) = *(_BYTE *)(v39 + 40);
  *(_QWORD *)(v38 + 32) = v42;
  *(_QWORD *)(v38 + 48) = *(_QWORD *)(v39 + 48);
  *(_QWORD *)(v38 + 56) = *(_QWORD *)(v39 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v38 + 64) = *(_QWORD *)(v39 + 64);
  *(_QWORD *)(v38 + 72) = *(_QWORD *)(v39 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v38 + 80) = *(_BYTE *)(v39 + 80);
  v43 = type metadata accessor for PriceViewModel();
  v44 = *(int *)(v43 + 40);
  v45 = v38 + v44;
  v46 = v39 + v44;
  v47 = sub_1DC4011C8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 24))(v45, v46, v47);
  v48 = *(int *)(v43 + 44);
  v49 = v38 + v48;
  v50 = v39 + v48;
  v51 = sub_1DC400118();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 24))(v49, v50, v51);
  v52 = a3[8];
  v53 = a1 + v52;
  v54 = a2 + v52;
  v55 = sub_1DC4008EC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 24))(v53, v54, v55);
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  return a1;
}

uint64_t sub_1DC2664A0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  int *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v6 = sub_1DC4010E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_1DC401030();
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    sub_1DC092F50(0, &qword_1EDB28DC0, (void (*)(uint64_t))MEMORY[0x1E0DAF040]);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v13 = a3[6];
  v14 = (char *)(a1 + v13);
  v15 = (char *)(a2 + v13);
  v16 = (int *)type metadata accessor for StockSparklineViewModel(0);
  v17 = *((_QWORD *)v16 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v17 + 48))(v15, 1, v16))
  {
    sub_1DC092F50(0, &qword_1EDB353E0, (void (*)(uint64_t))type metadata accessor for StockSparklineViewModel);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    v19 = sub_1DC408614();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v14, v15, v19);
    v20 = v16[5];
    v21 = &v14[v20];
    v22 = &v15[v20];
    *(_QWORD *)v21 = *(_QWORD *)v22;
    v21[8] = v22[8];
    v23 = v16[6];
    v24 = &v14[v23];
    v25 = &v15[v23];
    *(_QWORD *)v24 = *(_QWORD *)v25;
    v24[8] = v25[8];
    v14[v16[7]] = v15[v16[7]];
    v26 = v16[8];
    v27 = &v14[v26];
    v28 = &v15[v26];
    v29 = sub_1DC400F7C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(v27, v28, v29);
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v17 + 56))(v14, 0, 1, v16);
  }
  v30 = a3[7];
  v31 = a1 + v30;
  v32 = a2 + v30;
  *(_QWORD *)v31 = *(_QWORD *)(a2 + v30);
  *(_BYTE *)(v31 + 8) = *(_BYTE *)(a2 + v30 + 8);
  *(_QWORD *)(v31 + 16) = *(_QWORD *)(a2 + v30 + 16);
  *(_BYTE *)(v31 + 24) = *(_BYTE *)(a2 + v30 + 24);
  *(_QWORD *)(v31 + 32) = *(_QWORD *)(a2 + v30 + 32);
  *(_BYTE *)(v31 + 40) = *(_BYTE *)(a2 + v30 + 40);
  v33 = *(_OWORD *)(a2 + v30 + 64);
  *(_OWORD *)(v31 + 48) = *(_OWORD *)(a2 + v30 + 48);
  *(_OWORD *)(v31 + 64) = v33;
  *(_BYTE *)(v31 + 80) = *(_BYTE *)(a2 + v30 + 80);
  v34 = type metadata accessor for PriceViewModel();
  v35 = *(int *)(v34 + 40);
  v36 = v31 + v35;
  v37 = v32 + v35;
  v38 = sub_1DC4011C8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v36, v37, v38);
  v39 = *(int *)(v34 + 44);
  v40 = v31 + v39;
  v41 = v32 + v39;
  v42 = sub_1DC400118();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 32))(v40, v41, v42);
  v43 = a3[8];
  v44 = a1 + v43;
  v45 = a2 + v43;
  v46 = sub_1DC4008EC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 32))(v44, v45, v46);
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  return a1;
}

uint64_t sub_1DC266784(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  _BYTE *v18;
  int *v19;
  uint64_t v20;
  uint64_t (*v21)(_BYTE *, uint64_t, int *);
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;

  v6 = sub_1DC4010E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = (void *)(a1 + v7);
  v9 = (void *)(a2 + v7);
  v10 = sub_1DC401030();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v8, v9, v10);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    sub_1DC092F50(0, &qword_1EDB28DC0, (void (*)(uint64_t))MEMORY[0x1E0DAF040]);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v8, v9, v10);
LABEL_7:
  v16 = a3[6];
  v17 = (_BYTE *)(a1 + v16);
  v18 = (_BYTE *)(a2 + v16);
  v19 = (int *)type metadata accessor for StockSparklineViewModel(0);
  v20 = *((_QWORD *)v19 - 1);
  v21 = *(uint64_t (**)(_BYTE *, uint64_t, int *))(v20 + 48);
  v22 = v21(v17, 1, v19);
  v23 = v21(v18, 1, v19);
  if (!v22)
  {
    if (!v23)
    {
      v55 = sub_1DC408614();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v55 - 8) + 40))(v17, v18, v55);
      v56 = v19[5];
      v57 = &v17[v56];
      v58 = &v18[v56];
      *(_QWORD *)v57 = *(_QWORD *)v58;
      v57[8] = v58[8];
      v59 = v19[6];
      v60 = &v17[v59];
      v61 = &v18[v59];
      *(_QWORD *)v60 = *(_QWORD *)v61;
      v60[8] = v61[8];
      v17[v19[7]] = v18[v19[7]];
      v62 = v19[8];
      v63 = &v17[v62];
      v64 = &v18[v62];
      v65 = sub_1DC400F7C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v65 - 8) + 40))(v63, v64, v65);
      goto LABEL_13;
    }
    sub_1DC0EDE58((uint64_t)v17);
    goto LABEL_12;
  }
  if (v23)
  {
LABEL_12:
    sub_1DC092F50(0, &qword_1EDB353E0, (void (*)(uint64_t))type metadata accessor for StockSparklineViewModel);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    goto LABEL_13;
  }
  v24 = sub_1DC408614();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v17, v18, v24);
  v25 = v19[5];
  v26 = &v17[v25];
  v27 = &v18[v25];
  *(_QWORD *)v26 = *(_QWORD *)v27;
  v26[8] = v27[8];
  v28 = v19[6];
  v29 = &v17[v28];
  v30 = &v18[v28];
  *(_QWORD *)v29 = *(_QWORD *)v30;
  v29[8] = v30[8];
  v17[v19[7]] = v18[v19[7]];
  v31 = v19[8];
  v32 = &v17[v31];
  v33 = &v18[v31];
  v34 = sub_1DC400F7C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v32, v33, v34);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v20 + 56))(v17, 0, 1, v19);
LABEL_13:
  v36 = a3[7];
  v37 = a1 + v36;
  v38 = a2 + v36;
  *(_QWORD *)v37 = *(_QWORD *)(a2 + v36);
  *(_BYTE *)(v37 + 8) = *(_BYTE *)(a2 + v36 + 8);
  *(_QWORD *)(v37 + 16) = *(_QWORD *)(a2 + v36 + 16);
  *(_BYTE *)(v37 + 24) = *(_BYTE *)(a2 + v36 + 24);
  *(_QWORD *)(v37 + 32) = *(_QWORD *)(a2 + v36 + 32);
  *(_BYTE *)(v37 + 40) = *(_BYTE *)(a2 + v36 + 40);
  v39 = *(_QWORD *)(a2 + v36 + 56);
  *(_QWORD *)(v37 + 48) = *(_QWORD *)(a2 + v36 + 48);
  *(_QWORD *)(v37 + 56) = v39;
  swift_bridgeObjectRelease();
  v40 = *(_QWORD *)(v38 + 72);
  *(_QWORD *)(v37 + 64) = *(_QWORD *)(v38 + 64);
  *(_QWORD *)(v37 + 72) = v40;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v37 + 80) = *(_BYTE *)(v38 + 80);
  v41 = type metadata accessor for PriceViewModel();
  v42 = *(int *)(v41 + 40);
  v43 = v37 + v42;
  v44 = v38 + v42;
  v45 = sub_1DC4011C8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 40))(v43, v44, v45);
  v46 = *(int *)(v41 + 44);
  v47 = v37 + v46;
  v48 = v38 + v46;
  v49 = sub_1DC400118();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 40))(v47, v48, v49);
  v50 = a3[8];
  v51 = a1 + v50;
  v52 = a2 + v50;
  v53 = sub_1DC4008EC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 40))(v51, v52, v53);
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  return a1;
}

uint64_t sub_1DC266B84(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int v18;
  int v19;

  v6 = sub_1DC4010E4();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  sub_1DC092F50(0, &qword_1EDB28DC0, (void (*)(uint64_t))MEMORY[0x1E0DAF040]);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v13 = a3[5];
LABEL_11:
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  sub_1DC092F50(0, &qword_1EDB353E0, (void (*)(uint64_t))type metadata accessor for StockSparklineViewModel);
  v12 = *(_QWORD *)(v14 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v14;
    v13 = a3[6];
    goto LABEL_11;
  }
  v15 = type metadata accessor for PriceViewModel();
  v12 = *(_QWORD *)(v15 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v15;
    v13 = a3[7];
    goto LABEL_11;
  }
  v16 = sub_1DC4008EC();
  v12 = *(_QWORD *)(v16 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v16;
    v13 = a3[8];
    goto LABEL_11;
  }
  v18 = *(unsigned __int8 *)(a1 + a3[9]);
  if (v18 >= 2)
    v19 = ((v18 + 2147483646) & 0x7FFFFFFF) - 1;
  else
    v19 = -2;
  if (v19 < 0)
    v19 = -1;
  return (v19 + 1);
}

uint64_t sub_1DC266CD4(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;

  v8 = sub_1DC4010E4();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  sub_1DC092F50(0, &qword_1EDB28DC0, (void (*)(uint64_t))MEMORY[0x1E0DAF040]);
  v14 = *(_QWORD *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = v13;
    v15 = a4[5];
LABEL_11:
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  sub_1DC092F50(0, &qword_1EDB353E0, (void (*)(uint64_t))type metadata accessor for StockSparklineViewModel);
  v14 = *(_QWORD *)(v16 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = v16;
    v15 = a4[6];
    goto LABEL_11;
  }
  v17 = type metadata accessor for PriceViewModel();
  v14 = *(_QWORD *)(v17 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = v17;
    v15 = a4[7];
    goto LABEL_11;
  }
  result = sub_1DC4008EC();
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v15 = a4[8];
    goto LABEL_11;
  }
  *(_BYTE *)(a1 + a4[9]) = a2 + 2;
  return result;
}

uint64_t getEnumTagSinglePayload for WatchState(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v2;
  unsigned int v3;
  uint64_t v4;
  unsigned int v6;
  BOOL v7;
  unsigned int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
  {
    v6 = *a1;
    v7 = v6 >= 2;
    v8 = (v6 + 2147483646) & 0x7FFFFFFF;
    if (!v7)
      v8 = -1;
    if (v8 + 1 >= 2)
      return v8;
    else
      return 0;
  }
  else
  {
    v2 = a2 + 2;
    if (a2 + 2 >= 0xFFFF00)
      v3 = 4;
    else
      v3 = 2;
    if (v2 >> 8 < 0xFF)
      v3 = 1;
    if (v2 >= 0x100)
      v4 = v3;
    else
      v4 = 0;
    return ((uint64_t (*)(void))((char *)&loc_1DC266E54 + 4 * byte_1DC41E4C0[v4]))();
  }
}

uint64_t storeEnumTagSinglePayload for WatchState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;

  v3 = a3 + 2;
  if (a3 + 2 >= 0xFFFF00)
    v4 = 4;
  else
    v4 = 2;
  if (v3 >> 8 < 0xFF)
    v4 = 1;
  if (v3 >= 0x100)
    LODWORD(v5) = v4;
  else
    LODWORD(v5) = 0;
  if (a3 >= 0xFE)
    v5 = v5;
  else
    v5 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1DC266F0C + 4 * byte_1DC41E4CA[v5]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1DC266F40 + 4 * byte_1DC41E4C5[v5]))();
}

uint64_t sub_1DC266F40(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC266F48(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC266F50);
  return result;
}

uint64_t sub_1DC266F5C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC266F64);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1DC266F68(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC266F70(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC266F7C(unsigned __int8 *a1)
{
  unsigned int v1;
  BOOL v2;
  int v3;

  v1 = *a1;
  v2 = v1 >= 2;
  v3 = (v1 + 2147483646) & 0x7FFFFFFF;
  if (v2)
    return (v3 + 1);
  else
    return 0;
}

_BYTE *sub_1DC266F98(_BYTE *result, int a2)
{
  if (a2)
    *result = a2 + 1;
  return result;
}

ValueMetadata *type metadata accessor for WatchState()
{
  return &type metadata for WatchState;
}

uint64_t sub_1DC266FC4()
{
  return MEMORY[0x1E0DEA978];
}

BOOL sub_1DC266FD0(_BYTE *a1, unsigned __int8 *a2)
{
  if (*a1 == 2)
    return *a2 == 2;
  else
    return *a2 != 2;
}

uint64_t sub_1DC266FF0()
{
  _BYTE *v0;

  if (*v0)
    return 0x6863746157746F6ELL;
  else
    return 0x676E696863746177;
}

uint64_t sub_1DC267034@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC267280(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC267058()
{
  sub_1DC267528();
  return sub_1DC409B20();
}

uint64_t sub_1DC267080()
{
  sub_1DC267528();
  return sub_1DC409B2C();
}

uint64_t sub_1DC2670A8(_QWORD *a1, unsigned __int8 a2)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE v10[16];

  v3 = a2;
  sub_1DC2675B0(0, &qword_1F0350120, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = &v10[-v7];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC267528();
  sub_1DC409B14();
  if (v3 == 2)
    v10[15] = 1;
  else
    v10[14] = 0;
  sub_1DC409964();
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1DC2671E0@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1DC267388(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1DC267208(_QWORD *a1)
{
  unsigned __int8 *v1;

  return sub_1DC2670A8(a1, *v1);
}

uint64_t sub_1DC267220@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_1DC40103C();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1DC267244(uint64_t a1, unint64_t *a2, unint64_t *a3, void (*a4)(uint64_t))
{
  uint64_t v5;

  sub_1DC0EDE94(0, a2, a3, a4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

uint64_t sub_1DC267280(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x676E696863746177 && a2 == 0xE800000000000000;
  if (v2 || (sub_1DC4099E8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6863746157746F6ELL && a2 == 0xEB00000000676E69)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1DC4099E8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1DC267388(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v13[16];

  sub_1DC2675B0(0, &qword_1F0350108, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = &v13[-v6];
  v8 = (uint64_t)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC267528();
  sub_1DC409B08();
  if (!v1)
  {
    v13[15] = 0;
    sub_1DC4098C8();
    v11 = v10;
    swift_bridgeObjectRelease();
    if (v11)
    {
      v8 = 0;
LABEL_8:
      (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
      return v8;
    }
    v13[14] = 1;
    sub_1DC4098C8();
    v8 = v12;
    swift_bridgeObjectRelease();
    if (v8)
    {
      v8 = 2;
      goto LABEL_8;
    }
    sub_1DC26756C();
    swift_allocError();
    swift_willThrow();
    (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v8;
}

unint64_t sub_1DC267528()
{
  unint64_t result;

  result = qword_1F0350110;
  if (!qword_1F0350110)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC41E798, &type metadata for WatchState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F0350110);
  }
  return result;
}

unint64_t sub_1DC26756C()
{
  unint64_t result;

  result = qword_1F0350118;
  if (!qword_1F0350118)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC41E758, &type metadata for WatchState.DecodingError);
    atomic_store(result, (unint64_t *)&qword_1F0350118);
  }
  return result;
}

void sub_1DC2675B0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC267528();
    v7 = a3(a1, &type metadata for WatchState.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t storeEnumTagSinglePayload for WatchState.DecodingError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1DC26764C + 4 * byte_1DC41E4CF[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1DC26766C + 4 * byte_1DC41E4D4[v4]))();
}

_BYTE *sub_1DC26764C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1DC26766C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC267674(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC26767C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC267684(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC26768C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for WatchState.DecodingError()
{
  return &type metadata for WatchState.DecodingError;
}

uint64_t storeEnumTagSinglePayload for WatchState.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1DC2676F4 + 4 * byte_1DC41E4DE[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1DC267728 + 4 * byte_1DC41E4D9[v4]))();
}

uint64_t sub_1DC267728(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC267730(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC267738);
  return result;
}

uint64_t sub_1DC267744(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC26774CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1DC267750(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC267758(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WatchState.CodingKeys()
{
  return &type metadata for WatchState.CodingKeys;
}

unint64_t sub_1DC267778()
{
  unint64_t result;

  result = qword_1F0350128;
  if (!qword_1F0350128)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC41E6C8, &type metadata for WatchState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F0350128);
  }
  return result;
}

unint64_t sub_1DC2677C0()
{
  unint64_t result;

  result = qword_1F0350130;
  if (!qword_1F0350130)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC41E730, &type metadata for WatchState.DecodingError);
    atomic_store(result, (unint64_t *)&qword_1F0350130);
  }
  return result;
}

unint64_t sub_1DC267808()
{
  unint64_t result;

  result = qword_1F0350138;
  if (!qword_1F0350138)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC41E638, &type metadata for WatchState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F0350138);
  }
  return result;
}

unint64_t sub_1DC267850()
{
  unint64_t result;

  result = qword_1F0350140;
  if (!qword_1F0350140)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC41E660, &type metadata for WatchState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F0350140);
  }
  return result;
}

uint64_t *sub_1DC267894(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(char *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v14 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v14 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    v7 = *(int *)(a3 + 24);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_1DC4010E4();
    v11 = *(_QWORD *)(v10 - 8);
    v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v12(v9, 1, v10))
    {
      sub_1DC104530();
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
  }
  return v3;
}

uint64_t sub_1DC267998(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_1DC4010E4();
  v6 = *(_QWORD *)(v5 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  return result;
}

_QWORD *sub_1DC267A1C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(char *, uint64_t, uint64_t);
  uint64_t v12;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  v6 = *(int *)(a3 + 24);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1DC4010E4();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v11(v8, 1, v9))
  {
    sub_1DC104530();
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  return a1;
}

_QWORD *sub_1DC267AF4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 24);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1DC4010E4();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    sub_1DC104530();
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

_OWORD *sub_1DC267C38(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(a3 + 24);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_1DC4010E4();
  v9 = *(_QWORD *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
  {
    sub_1DC104530();
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v6, v7, v8);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  return a1;
}

_QWORD *sub_1DC267CF0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(char *, uint64_t, uint64_t);
  int v14;
  int v15;
  uint64_t v16;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = *(int *)(a3 + 24);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_1DC4010E4();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 40))(v9, v10, v11);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v11);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    sub_1DC104530();
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  return a1;
}

uint64_t sub_1DC267E14()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC267E20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    sub_1DC104530();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t sub_1DC267E9C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC267EA8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_1DC104530();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for CreateWatchlistViewModel()
{
  uint64_t result;

  result = qword_1F03501A0;
  if (!qword_1F03501A0)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1DC267F58()
{
  unint64_t v0;

  sub_1DC104530();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_1DC267FCC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjCClassFromMetadata;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t WatchlistViewModel;
  uint64_t v18;

  v4 = sub_1DC400010();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC400004();
  v8 = sub_1DC3FFFF8();
  v10 = v9;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  *a2 = v8;
  a2[1] = v10;
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v12 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v13 = sub_1DC3FFC80();
  v15 = v14;

  a2[2] = v13;
  a2[3] = v15;
  WatchlistViewModel = type metadata accessor for CreateWatchlistViewModel();
  return sub_1DC15C348(a1, (uint64_t)a2 + *(int *)(WatchlistViewModel + 24));
}

BOOL sub_1DC268124(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char v21;
  _BOOL8 result;
  char v23;
  uint64_t WatchlistViewModel;
  uint64_t v25;
  unsigned int (*v26)(uint64_t, uint64_t, uint64_t);
  char *v27;
  char v28;
  void (*v29)(char *, uint64_t);
  uint64_t v30;
  char *v31;

  v4 = sub_1DC4010E4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC26844C();
  v9 = v8;
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC104530();
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v30 - v16;
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v30 - v19;
  if (*a1 == *a2 && a1[1] == a2[1] || (v21 = sub_1DC4099E8(), result = 0, (v21 & 1) != 0))
  {
    if (a1[2] == a2[2] && a1[3] == a2[3] || (v23 = sub_1DC4099E8(), result = 0, (v23 & 1) != 0))
    {
      v31 = v7;
      WatchlistViewModel = type metadata accessor for CreateWatchlistViewModel();
      sub_1DC1338B8((uint64_t)a1 + *(int *)(WatchlistViewModel + 24), (uint64_t)v20);
      sub_1DC1338B8((uint64_t)a2 + *(int *)(WatchlistViewModel + 24), (uint64_t)v17);
      v25 = (uint64_t)&v11[*(int *)(v9 + 48)];
      sub_1DC1338B8((uint64_t)v20, (uint64_t)v11);
      sub_1DC1338B8((uint64_t)v17, v25);
      v26 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
      if (v26((uint64_t)v11, 1, v4) == 1)
      {
        sub_1DC0926D8((uint64_t)v17, (uint64_t (*)(_QWORD))sub_1DC104530);
        sub_1DC0926D8((uint64_t)v20, (uint64_t (*)(_QWORD))sub_1DC104530);
        if (v26(v25, 1, v4) == 1)
        {
          sub_1DC0926D8((uint64_t)v11, (uint64_t (*)(_QWORD))sub_1DC104530);
          return 1;
        }
      }
      else
      {
        sub_1DC1338B8((uint64_t)v11, (uint64_t)v14);
        if (v26(v25, 1, v4) != 1)
        {
          v27 = v31;
          (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v31, v25, v4);
          sub_1DC2684AC();
          v28 = sub_1DC4089F8();
          v29 = *(void (**)(char *, uint64_t))(v5 + 8);
          v29(v27, v4);
          sub_1DC0926D8((uint64_t)v17, (uint64_t (*)(_QWORD))sub_1DC104530);
          sub_1DC0926D8((uint64_t)v20, (uint64_t (*)(_QWORD))sub_1DC104530);
          v29(v14, v4);
          sub_1DC0926D8((uint64_t)v11, (uint64_t (*)(_QWORD))sub_1DC104530);
          return (v28 & 1) != 0;
        }
        sub_1DC0926D8((uint64_t)v17, (uint64_t (*)(_QWORD))sub_1DC104530);
        sub_1DC0926D8((uint64_t)v20, (uint64_t (*)(_QWORD))sub_1DC104530);
        (*(void (**)(char *, uint64_t))(v5 + 8))(v14, v4);
      }
      sub_1DC0926D8((uint64_t)v11, (uint64_t (*)(_QWORD))sub_1DC26844C);
      return 0;
    }
  }
  return result;
}

void sub_1DC26844C()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1F03501E0)
  {
    sub_1DC104530();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1F03501E0);
  }
}

unint64_t sub_1DC2684AC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EDB28DD8;
  if (!qword_1EDB28DD8)
  {
    v1 = sub_1DC4010E4();
    result = MEMORY[0x1DF0CAB8C](MEMORY[0x1E0DAF0E8], v1);
    atomic_store(result, (unint64_t *)&qword_1EDB28DD8);
  }
  return result;
}

uint64_t sub_1DC2684F4()
{
  uint64_t v0;

  swift_release();
  sub_1DC268D14(v0 + 24);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for HeadlineOpenInNewWindowCommandHandler()
{
  return objc_opt_self();
}

uint64_t sub_1DC268540(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1DC26863C(a4);
}

BOOL sub_1DC268564(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  int v10;
  int v11;
  uint64_t v13;

  v5 = sub_1DC408050();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v6 + 16))(v9, a4, v5, v7);
  v10 = (*(uint64_t (**)(char *, uint64_t))(v6 + 88))(v9, v5);
  v11 = *MEMORY[0x1E0D5E2B8];
  if (v10 == *MEMORY[0x1E0D5E2B8])
  {
    (*(void (**)(char *, uint64_t))(v6 + 96))(v9, v5);
    swift_unknownObjectRelease();
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  }
  return v10 == v11;
}

uint64_t sub_1DC26863C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  id *v25;
  id v26;
  void *v27;
  void (*v28)(char *, uint64_t, uint64_t, uint64_t);
  void (*v29)(uint64_t);
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v51 = sub_1DC405D88();
  v55 = *(_QWORD *)(v51 - 8);
  MEMORY[0x1E0C80A78](v51);
  v54 = (uint64_t *)((char *)&v44 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v49 = type metadata accessor for StocksActivity(0);
  MEMORY[0x1E0C80A78](v49);
  v53 = (uint64_t)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1DC40202C();
  v47 = *(_QWORD *)(v4 - 8);
  v48 = v4;
  MEMORY[0x1E0C80A78](v4);
  v44 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1DC402434();
  v45 = *(_QWORD *)(v6 - 8);
  v46 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1DC401BB8();
  MEMORY[0x1E0C80A78](v9);
  v52 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1DC3FFDD0();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC133BB0(0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v44 - v19;
  v21 = sub_1DC408050();
  v22 = *(_QWORD *)(v21 - 8);
  v23 = MEMORY[0x1E0C80A78](v21);
  v25 = (id *)((char *)&v44 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(id *, uint64_t, uint64_t, __n128))(v22 + 16))(v25, a1, v21, v23);
  if ((*(unsigned int (**)(id *, uint64_t))(v22 + 88))(v25, v21) != *MEMORY[0x1E0D5E2B8])
    return (*(uint64_t (**)(id *, uint64_t))(v22 + 8))(v25, v21);
  (*(void (**)(id *, uint64_t))(v22 + 96))(v25, v21);
  v26 = objc_msgSend(*v25, sel_routeURL);
  if (!v26)
  {
    v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
    v28(v20, 1, 1, v11);
LABEL_7:
    sub_1DC0926D8((uint64_t)v20, (uint64_t (*)(_QWORD))sub_1DC133BB0);
    swift_unknownObjectRetain();
    sub_1DC402410();
    v28(v17, 1, 1, v11);
    v33 = v47;
    v32 = v48;
    v34 = v44;
    (*(void (**)(char *, _QWORD, uint64_t))(v47 + 104))(v44, *MEMORY[0x1E0D57870], v48);
    v35 = (uint64_t)v52;
    sub_1DC401B88();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v34, v32);
    sub_1DC0926D8((uint64_t)v17, (uint64_t (*)(_QWORD))sub_1DC133BB0);
    (*(void (**)(char *, uint64_t))(v45 + 8))(v8, v46);
    sub_1DC1446B4();
    v37 = *(int *)(v36 + 48);
    v38 = v53;
    v39 = v53 + *(int *)(v36 + 64);
    sub_1DC268C6C(v35, v53);
    *(_QWORD *)(v38 + v37) = 2;
    type metadata accessor for StocksActivity.Article(0);
    *(_OWORD *)v39 = 0u;
    *(_OWORD *)(v39 + 16) = 0u;
    *(_QWORD *)(v39 + 32) = 0;
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
    sub_1DC268CB0(v50 + 24, (uint64_t)&v56);
    if (v57)
    {
      __swift_project_boxed_opaque_existential_1(&v56, v57);
      v40 = sub_1DC404B40();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v56);
      v42 = v54;
      v41 = v55;
      if (v40)
      {
LABEL_12:
        *v42 = v40;
        v43 = v51;
        (*(void (**)(uint64_t *, _QWORD, uint64_t))(v41 + 104))(v42, *MEMORY[0x1E0DBAC78], v51);
        sub_1DC404510();
        swift_unknownObjectRelease();
        (*(void (**)(uint64_t *, uint64_t))(v41 + 8))(v42, v43);
        sub_1DC0926D8(v38, type metadata accessor for StocksActivity);
        v29 = (void (*)(uint64_t))MEMORY[0x1E0D570B0];
        v30 = v35;
        return sub_1DC0926D8(v30, (uint64_t (*)(_QWORD))v29);
      }
    }
    else
    {
      sub_1DC268D14((uint64_t)&v56);
      v42 = v54;
      v41 = v55;
    }
    swift_bridgeObjectRelease();
    v40 = MEMORY[0x1E0DEE9D8];
    goto LABEL_12;
  }
  v27 = v26;
  sub_1DC3FFD94();

  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v20, v14, v11);
  v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
  v28(v20, 0, 1, v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v20, 1, v11) == 1)
    goto LABEL_7;
  swift_unknownObjectRelease();
  v29 = sub_1DC133BB0;
  v30 = (uint64_t)v20;
  return sub_1DC0926D8(v30, (uint64_t (*)(_QWORD))v29);
}

uint64_t sub_1DC268C6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1DC401BB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC268CB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1DC0FDC18(0, (unint64_t *)&qword_1F034E8A8, &qword_1EDB29F00, MEMORY[0x1E0DB8260], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC268D14(uint64_t a1)
{
  uint64_t v2;

  sub_1DC0FDC18(0, (unint64_t *)&qword_1F034E8A8, &qword_1EDB29F00, MEMORY[0x1E0DB8260], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for HeadlineOpenInNewTabCommandHandler()
{
  return objc_opt_self();
}

uint64_t sub_1DC268D90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1DC268DB4(a4);
}

uint64_t sub_1DC268DB4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  id *v26;
  id v27;
  void *v28;
  void (*v29)(char *, uint64_t, uint64_t, uint64_t);
  void (*v30)(uint64_t);
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  v2 = sub_1DC405D88();
  v54 = *(_QWORD *)(v2 - 8);
  v55 = v2;
  MEMORY[0x1E0C80A78](v2);
  v53 = (uint64_t *)((char *)&v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v51 = type metadata accessor for StocksActivity(0);
  MEMORY[0x1E0C80A78](v51);
  v57 = (uint64_t)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1DC40202C();
  v49 = *(_QWORD *)(v5 - 8);
  v50 = v5;
  MEMORY[0x1E0C80A78](v5);
  v46 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1DC402434();
  v47 = *(_QWORD *)(v7 - 8);
  v48 = v7;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1DC401BB8();
  MEMORY[0x1E0C80A78](v10);
  v56 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1DC3FFDD0();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC133BB0(0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v46 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v46 - v20;
  v22 = sub_1DC408050();
  v23 = *(_QWORD *)(v22 - 8);
  v24 = MEMORY[0x1E0C80A78](v22);
  v26 = (id *)((char *)&v46 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(id *, uint64_t, uint64_t, __n128))(v23 + 16))(v26, a1, v22, v24);
  if ((*(unsigned int (**)(id *, uint64_t))(v23 + 88))(v26, v22) != *MEMORY[0x1E0D5E2B8])
    return (*(uint64_t (**)(id *, uint64_t))(v23 + 8))(v26, v22);
  (*(void (**)(id *, uint64_t))(v23 + 96))(v26, v22);
  v27 = objc_msgSend(*v26, sel_routeURL);
  if (!v27)
  {
    v29 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
    v29(v21, 1, 1, v12);
    goto LABEL_7;
  }
  v28 = v27;
  sub_1DC3FFD94();

  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v21, v15, v12);
  v29 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
  v29(v21, 0, 1, v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v21, 1, v12) == 1)
  {
LABEL_7:
    sub_1DC0926D8((uint64_t)v21, (uint64_t (*)(_QWORD))sub_1DC133BB0);
    swift_unknownObjectRetain();
    sub_1DC402410();
    v29(v18, 1, 1, v12);
    v34 = v49;
    v33 = v50;
    v35 = v46;
    (*(void (**)(char *, _QWORD, uint64_t))(v49 + 104))(v46, *MEMORY[0x1E0D57870], v50);
    v36 = (uint64_t)v56;
    sub_1DC401B88();
    (*(void (**)(char *, uint64_t))(v34 + 8))(v35, v33);
    sub_1DC0926D8((uint64_t)v18, (uint64_t (*)(_QWORD))sub_1DC133BB0);
    (*(void (**)(char *, uint64_t))(v47 + 8))(v9, v48);
    v37 = v57;
    sub_1DC268C6C(v36, v57);
    sub_1DC1446B4();
    v39 = v37 + *(int *)(v38 + 64);
    *(_QWORD *)(v37 + *(int *)(v38 + 48)) = 2;
    type metadata accessor for StocksActivity.Article(0);
    *(_OWORD *)v39 = 0u;
    *(_OWORD *)(v39 + 16) = 0u;
    *(_QWORD *)(v39 + 32) = 0;
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
    v40 = v52 + 24;
    sub_1DC268CB0(v52 + 24, (uint64_t)&v58);
    v41 = v59;
    if (v59)
    {
      __swift_project_boxed_opaque_existential_1(&v58, v59);
      v41 = sub_1DC404B34();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v58);
    }
    else
    {
      sub_1DC268D14((uint64_t)&v58);
    }
    sub_1DC268CB0(v40, (uint64_t)&v58);
    if (v59)
    {
      __swift_project_boxed_opaque_existential_1(&v58, v59);
      v42 = sub_1DC404B40();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v58);
    }
    else
    {
      sub_1DC268D14((uint64_t)&v58);
      v42 = 0;
    }
    v44 = v53;
    v43 = v54;
    *v53 = v41;
    v44[1] = v42;
    v45 = v55;
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(v43 + 104))(v44, *MEMORY[0x1E0DBAC80], v55);
    sub_1DC404510();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t *, uint64_t))(v43 + 8))(v44, v45);
    sub_1DC0926D8(v37, type metadata accessor for StocksActivity);
    v30 = (void (*)(uint64_t))MEMORY[0x1E0D570B0];
    v31 = v36;
    return sub_1DC0926D8(v31, (uint64_t (*)(_QWORD))v30);
  }
  swift_unknownObjectRelease();
  v30 = sub_1DC133BB0;
  v31 = (uint64_t)v21;
  return sub_1DC0926D8(v31, (uint64_t (*)(_QWORD))v30);
}

ValueMetadata *type metadata accessor for ForYouFeedOnlineBlueprintModifier()
{
  return &type metadata for ForYouFeedOnlineBlueprintModifier;
}

unint64_t sub_1DC269438()
{
  unint64_t result;

  result = qword_1EDB41600;
  if (!qword_1EDB41600)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC41E954, &type metadata for ForYouFeedOnlineBlueprintModifier);
    atomic_store(result, (unint64_t *)&qword_1EDB41600);
  }
  return result;
}

uint64_t sub_1DC26947C(uint64_t a1, void (*a2)(char *), uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(void);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  void (*v33)(char *, _QWORD);
  char *v34;
  uint64_t v35;
  uint64_t (*v36)(void);
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  _QWORD v45[4];
  char *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(char *);
  char *v56;
  char *v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  char *v74;
  char v75[8];
  uint64_t v76;

  v54 = a3;
  v55 = a2;
  v61 = sub_1DC400010();
  v60 = *(_QWORD *)(v61 - 8);
  MEMORY[0x1E0C80A78](v61);
  v59 = (char *)v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = type metadata accessor for ForYouFeedModel();
  MEMORY[0x1E0C80A78](v73);
  v58 = (char *)v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  sub_1DC0FF574(0);
  MEMORY[0x1E0C80A78](v7);
  MEMORY[0x1E0C80A78](v8);
  v74 = (char *)v45 - v9;
  sub_1DC106D6C();
  MEMORY[0x1E0C80A78](v10);
  v56 = (char *)v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = type metadata accessor for ForYouFeedSectionDescriptor();
  MEMORY[0x1E0C80A78](v65);
  v57 = (char *)v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v66 = (char *)v45 - v14;
  sub_1DC0FE574(0, (unint64_t *)&qword_1EDB29D00, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60]);
  v16 = v15;
  v70 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v72 = (char *)v45 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v69 = (char *)v45 - v19;
  v53 = sub_1DC404984();
  v52 = *(_QWORD *)(v53 - 8);
  MEMORY[0x1E0C80A78](v53);
  v50 = (char *)v45 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0FE574(0, &qword_1EDB2A288, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB9A28]);
  v51 = v21;
  v49 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  v48 = (char *)v45 - v22;
  sub_1DC090728();
  MEMORY[0x1E0C80A78](v23);
  v45[3] = (char *)v45 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = MEMORY[0x1E0DBC790];
  sub_1DC0FE574(0, (unint64_t *)&qword_1EDB2AB80, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790]);
  v27 = v26;
  v47 = *(_QWORD *)(v26 - 8);
  MEMORY[0x1E0C80A78](v26);
  v46 = (char *)v45 - v28;
  v45[2] = sub_1DC406C70();
  v45[1] = v29;
  v30 = sub_1DC10297C((unint64_t *)&unk_1EDB2AB70, (unint64_t *)&qword_1EDB2AB80, (uint64_t (*)(uint64_t, _QWORD *))v25, MEMORY[0x1E0DBC7C8]);
  v31 = sub_1DC408EC0();
  v64 = v27;
  if (v31)
  {
    v76 = MEMORY[0x1E0DEE9D8];
    v63 = v31;
    sub_1DC2AD740(0, v31 & ~(v31 >> 63), 0);
    sub_1DC408E90();
    if ((v63 & 0x8000000000000000) == 0)
    {
      v68 = v30;
      v62 = a1;
      v71 = v16;
      v32 = v72;
      if (v63)
      {
        v67 = 1;
        v33 = (void (*)(char *, _QWORD))sub_1DC408EF0();
        (*(void (**)(char *))(v70 + 16))(v32);
        v33(v75, 0);
        sub_1DC4046FC();
        v34 = (char *)&loc_1DC269914 + dword_1DC26A034[swift_getEnumCaseMultiPayload()];
        __asm { BR              X9 }
      }
      __break(1u);
      JUMPOUT(0x1DC26A02CLL);
    }
    __break(1u);
    JUMPOUT(0x1DC26A034);
  }
  v35 = MEMORY[0x1E0DEE9D8];
  v36 = MEMORY[0x1E0DB7B60];
  v37 = sub_1DC10297C(&qword_1EDB29CE8, (unint64_t *)&qword_1EDB29D00, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60], MEMORY[0x1E0DB7B88]);
  v38 = sub_1DC10297C(&qword_1EDB29CE0, (unint64_t *)&qword_1EDB29D00, (uint64_t (*)(uint64_t, _QWORD *))v36, MEMORY[0x1E0DB7B80]);
  MEMORY[0x1DF0C311C](v35, v16, v37, v38);
  sub_1DC080808(&qword_1EDB37600, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedSectionDescriptor, (uint64_t)&unk_1DC425AEC);
  sub_1DC080808((unint64_t *)&unk_1EDB2E070, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedModel, (uint64_t)&unk_1DC42ED60);
  v39 = v46;
  sub_1DC406C64();
  v40 = v52;
  v41 = v50;
  v42 = v53;
  (*(void (**)(char *, _QWORD, uint64_t))(v52 + 104))(v50, *MEMORY[0x1E0DB7FB8], v53);
  sub_1DC080808(&qword_1EDB27F60, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedSectionDescriptor, (uint64_t)&unk_1DC425BE4);
  v43 = v48;
  sub_1DC405554();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v41, v42);
  v55(v43);
  (*(void (**)(char *, uint64_t))(v49 + 8))(v43, v51);
  return (*(uint64_t (**)(char *, uint64_t))(v47 + 8))(v39, v64);
}

void sub_1DC26A068()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EDB41298[0])
  {
    sub_1DC407EAC();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, qword_1EDB41298);
  }
}

ValueMetadata *type metadata accessor for ForYouFeedOfflineModel.Expanding()
{
  return &type metadata for ForYouFeedOfflineModel.Expanding;
}

ValueMetadata *type metadata accessor for ForYouFeedOfflineModel()
{
  return &type metadata for ForYouFeedOfflineModel;
}

ValueMetadata *type metadata accessor for ForYouFeedOfflineModel.Loading()
{
  return &type metadata for ForYouFeedOfflineModel.Loading;
}

uint64_t sub_1DC26A100()
{
  uint64_t v0;
  uint64_t ObjCClassFromMetadata;
  void *v2;
  id v3;
  id v4;

  v0 = sub_1DC407EAC();
  __swift_allocate_value_buffer(v0, qword_1EDB5E190);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EDB5E190);
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v2 = (void *)objc_opt_self();
  v3 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1DC3FFC80();

  v4 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata, 0x80000001DC441300);
  sub_1DC3FFC80();

  return sub_1DC407E58();
}

uint64_t sub_1DC26A2A0()
{
  uint64_t v0;
  uint64_t ObjCClassFromMetadata;
  void *v2;
  id v3;
  id v4;

  v0 = sub_1DC407EAC();
  __swift_allocate_value_buffer(v0, qword_1F0368AA8);
  __swift_project_value_buffer(v0, (uint64_t)qword_1F0368AA8);
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v2 = (void *)objc_opt_self();
  v3 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1DC3FFC80();

  v4 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata, 0x80000001DC4410C0);
  sub_1DC3FFC80();

  return sub_1DC407E58();
}

uint64_t sub_1DC26A43C()
{
  uint64_t v0;
  uint64_t ObjCClassFromMetadata;
  void *v2;
  id v3;
  id v4;

  v0 = sub_1DC407EAC();
  __swift_allocate_value_buffer(v0, qword_1F0368AC0);
  __swift_project_value_buffer(v0, (uint64_t)qword_1F0368AC0);
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v2 = (void *)objc_opt_self();
  v3 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1DC3FFC80();

  v4 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata, 0x80000001DC4414B0);
  sub_1DC3FFC80();

  return sub_1DC407E58();
}

uint64_t sub_1DC26A5DC()
{
  uint64_t v0;
  uint64_t ObjCClassFromMetadata;
  void *v2;
  id v3;
  id v4;

  v0 = sub_1DC407EAC();
  __swift_allocate_value_buffer(v0, qword_1F0368AD8);
  __swift_project_value_buffer(v0, (uint64_t)qword_1F0368AD8);
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v2 = (void *)objc_opt_self();
  v3 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1DC3FFC80();

  v4 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata, 0x80000001DC441630);
  sub_1DC3FFC80();

  return sub_1DC407E58();
}

uint64_t sub_1DC26A778@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC1825D8(&qword_1EDB41388, (uint64_t)qword_1EDB5E190, a1);
}

uint64_t sub_1DC26A794@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC1825D8(&qword_1F034B070, (uint64_t)qword_1F0368AA8, a1);
}

uint64_t sub_1DC26A7B0@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC1825D8(&qword_1F034B078, (uint64_t)qword_1F0368AC0, a1);
}

uint64_t sub_1DC26A7CC@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC1825D8(&qword_1F034B080, (uint64_t)qword_1F0368AD8, a1);
}

uint64_t sub_1DC26A7E8()
{
  uint64_t v0;
  uint64_t ObjCClassFromMetadata;
  void *v2;
  id v3;
  id v4;

  v0 = sub_1DC407EAC();
  __swift_allocate_value_buffer(v0, qword_1EDB5E1F0);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EDB5E1F0);
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v2 = (void *)objc_opt_self();
  v3 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1DC3FFC80();

  v4 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata, 0x80000001DC4411D0);
  sub_1DC3FFC80();

  return sub_1DC407E58();
}

uint64_t sub_1DC26A998()
{
  uint64_t v0;
  uint64_t ObjCClassFromMetadata;
  void *v2;
  id v3;
  id v4;

  v0 = sub_1DC407EAC();
  __swift_allocate_value_buffer(v0, qword_1EDB5E208);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EDB5E208);
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v2 = (void *)objc_opt_self();
  v3 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1DC3FFC80();

  v4 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata, 0x80000001DC4416B0);
  sub_1DC3FFC80();

  return sub_1DC407E58();
}

uint64_t sub_1DC26AB38()
{
  uint64_t v0;
  uint64_t ObjCClassFromMetadata;
  void *v2;
  id v3;
  id v4;

  v0 = sub_1DC407EAC();
  __swift_allocate_value_buffer(v0, qword_1F0368AF0);
  __swift_project_value_buffer(v0, (uint64_t)qword_1F0368AF0);
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v2 = (void *)objc_opt_self();
  v3 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1DC3FFC80();

  v4 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata, 0x80000001DC4413B0);
  sub_1DC3FFC80();

  return sub_1DC407E58();
}

uint64_t sub_1DC26ACD8()
{
  uint64_t v0;
  uint64_t ObjCClassFromMetadata;
  void *v2;
  id v3;
  id v4;

  v0 = sub_1DC407EAC();
  __swift_allocate_value_buffer(v0, qword_1F0368B08);
  __swift_project_value_buffer(v0, (uint64_t)qword_1F0368B08);
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v2 = (void *)objc_opt_self();
  v3 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1DC3FFC80();

  v4 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata, 0x80000001DC441540);
  sub_1DC3FFC80();

  return sub_1DC407E58();
}

uint64_t sub_1DC26AE7C@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC1825D8(&qword_1EDB41398, (uint64_t)qword_1EDB5E1F0, a1);
}

uint64_t sub_1DC26AE98@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC1825D8(&qword_1EDB413A0, (uint64_t)qword_1EDB5E208, a1);
}

uint64_t sub_1DC26AEB4@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC1825D8(&qword_1F034B088, (uint64_t)qword_1F0368AF0, a1);
}

uint64_t sub_1DC26AED0@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC1825D8(&qword_1F034B090, (uint64_t)qword_1F0368B08, a1);
}

void ForYouSectionDescriptor.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;

  v1 = sub_1DC407300();
  MEMORY[0x1E0C80A78](v1);
  v2 = sub_1DC4010E4();
  MEMORY[0x1E0C80A78](v2);
  v3 = type metadata accessor for ForYouSectionDescriptor();
  MEMORY[0x1E0C80A78](v3);
  sub_1DC26B36C(v0, (uint64_t)&v6 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = (char *)sub_1DC26B008 + 4 * byte_1DC41EB10[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1DC26B008()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v1, v2, v0);
  *(_QWORD *)(v4 - 96) = 0x2D6B636F7473;
  *(_QWORD *)(v4 - 88) = 0xE600000000000000;
  sub_1DC4010B4();
  sub_1DC408B48();
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(v4 - 96);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v0);
  return v5;
}

void _s8StocksUI23ForYouSectionDescriptorO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;

  v13 = sub_1DC4010E4();
  MEMORY[0x1E0C80A78](v13);
  MEMORY[0x1E0C80A78](v4);
  v5 = type metadata accessor for ForYouSectionDescriptor();
  MEMORY[0x1E0C80A78](v5);
  MEMORY[0x1E0C80A78](v6);
  sub_1DC26B8D0();
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v12 + *(int *)(v9 + 48) - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC26B36C(a1, (uint64_t)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1DC26B36C(a2, (uint64_t)v10);
  v11 = (char *)sub_1DC26B214 + 4 * byte_1DC41EB14[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1DC26B214()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t (*v8)(_QWORD);
  void (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);

  sub_1DC26B36C(v0, v5);
  if (swift_getEnumCaseMultiPayload())
  {
    (*(void (**)(uint64_t, _QWORD))(v1 + 8))(v5, *(_QWORD *)(v6 - 88));
    v7 = 0;
    v8 = (uint64_t (*)(_QWORD))sub_1DC26B8D0;
  }
  else
  {
    v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 32);
    v10 = *(_QWORD *)(v6 - 88);
    v9(v3, v5, v10);
    v9(v2, v4, v10);
    v7 = MEMORY[0x1DF0C18C8](v3, v2);
    v11 = *(void (**)(uint64_t, uint64_t))(v1 + 8);
    v11(v2, v10);
    v11(v3, v10);
    v8 = (uint64_t (*)(_QWORD))type metadata accessor for ForYouSectionDescriptor;
  }
  sub_1DC0926D8(v0, v8);
  return v7 & 1;
}

uint64_t sub_1DC26B36C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ForYouSectionDescriptor();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t *initializeBufferWithCopyOfBuffer for ForYouSectionDescriptor(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v10 = sub_1DC407300();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v11 = a2[1];
      *a1 = *a2;
      a1[1] = v11;
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v8 = sub_1DC4010E4();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t destroy for ForYouSectionDescriptor(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 2)
  {
    v3 = sub_1DC407300();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  }
  if ((_DWORD)result != 1)
  {
    if ((_DWORD)result)
      return result;
    v3 = sub_1DC4010E4();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  }
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for ForYouSectionDescriptor(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    v8 = sub_1DC407300();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload == 1)
  {
    v9 = a2[1];
    *a1 = *a2;
    a1[1] = v9;
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v7 = sub_1DC4010E4();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_QWORD *assignWithCopy for ForYouSectionDescriptor(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;

  if (a1 != a2)
  {
    sub_1DC0926D8((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for ForYouSectionDescriptor);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v8 = sub_1DC407300();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v7 = sub_1DC4010E4();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

void *initializeWithTake for ForYouSectionDescriptor(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    v8 = sub_1DC407300();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v7 = sub_1DC4010E4();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *assignWithTake for ForYouSectionDescriptor(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;

  if (a1 != a2)
  {
    sub_1DC0926D8((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for ForYouSectionDescriptor);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v8 = sub_1DC407300();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v7 = sub_1DC4010E4();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

void sub_1DC26B8D0()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1F03501E8)
  {
    type metadata accessor for ForYouSectionDescriptor();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1F03501E8);
  }
}

void sub_1DC26B930(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v27 = a2;
  v28 = a3;
  v4 = sub_1DC4036DC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC26BBAC();
  v9 = v8;
  v10 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1DC401564();
  v14 = MEMORY[0x1E0C80A78](v13);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v15 + 16))((char *)&v25 - v16, a1, v13, v14);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v26 = v4;
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    v17 = (void *)sub_1DC40154C();
    v18 = v29;
    v19 = sub_1DC4017B0();
    v21 = v20;

    if (!v18)
    {
      sub_1DC080808(&qword_1EDB273C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD898], MEMORY[0x1E0DAD8A8]);
      sub_1DC402458();
      sub_1DC1D565C(v19, v21);
      v22 = v28;
      (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v28, v7, v26);
      v23 = type metadata accessor for EngagementEvent();
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v22, 0, 1, v23);
    }
  }
  else
  {
    v24 = type metadata accessor for EngagementEvent();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v28, 1, 1, v24);
  }
}

uint64_t type metadata accessor for ArticleEngagementEventTranslator()
{
  return objc_opt_self();
}

void sub_1DC26BB98(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_1DC26B930(a1, a2, a3);
}

void sub_1DC26BBAC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB29140)
  {
    sub_1DC4036E8();
    sub_1DC080808(&qword_1EDB298D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD8B0], MEMORY[0x1E0DAD888]);
    v0 = sub_1DC401564();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB29140);
  }
}

uint64_t sub_1DC26BC24(void *a1, uint64_t (*a2)(id), uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  char *v21;
  double Height;
  double v23;
  double v24;
  id v25;
  double v26;
  void (*v27)(char *, uint64_t);
  _QWORD *v28;
  uint64_t v29;
  uint64_t (*v30)(id);
  void *v31;
  id v32;
  void *v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t (*v42)(id);
  _QWORD aBlock[6];
  CGRect v44;

  v38 = a4;
  v39 = a5;
  v42 = a2;
  v7 = sub_1DC40724C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1DC407270();
  v40 = *(_QWORD *)(v11 - 8);
  v41 = v11;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1DC407294();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v19 = MEMORY[0x1E0C80A78](v18).n128_u64[0];
  v21 = (char *)&v35 - v20;
  objc_msgSend(a1, sel_bounds, v19);
  Height = CGRectGetHeight(v44);
  objc_msgSend(a1, sel_contentSize);
  v24 = v23;
  v25 = objc_msgSend(a1, sel_contentOffset);
  if (Height + v26 >= v24)
    return v42(v25);
  objc_msgSend(a1, sel_setContentOffset_animated_, 0);
  sub_1DC0ACADC();
  v37 = v8;
  v36 = sub_1DC409148();
  sub_1DC407288();
  MEMORY[0x1DF0C7B14](v17, 1.0);
  v27 = *(void (**)(char *, uint64_t))(v15 + 8);
  v27(v17, v14);
  v28 = (_QWORD *)swift_allocObject();
  v29 = v39;
  v28[2] = v38;
  v28[3] = v29;
  v30 = v42;
  v28[4] = a1;
  v28[5] = v30;
  v28[6] = a3;
  aBlock[4] = sub_1DC26C980;
  aBlock[5] = v28;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1DC081B88;
  aBlock[3] = &block_descriptor_12;
  v31 = _Block_copy(aBlock);
  v32 = a1;
  swift_retain();
  swift_release();
  sub_1DC407264();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  sub_1DC080808(&qword_1EDB275A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  sub_1DC1130A0(0);
  sub_1DC080808((unint64_t *)&qword_1EDB3F720, (uint64_t (*)(uint64_t))sub_1DC1130A0, MEMORY[0x1E0DEAF38]);
  sub_1DC40964C();
  v33 = (void *)v36;
  MEMORY[0x1DF0C9998](v21, v13, v10, v31);
  _Block_release(v31);

  (*(void (**)(char *, uint64_t))(v37 + 8))(v10, v7);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v13, v41);
  return ((uint64_t (*)(char *, uint64_t))v27)(v21, v14);
}

uint64_t sub_1DC26BF44(uint64_t a1, int a2, void *a3, uint64_t (*a4)(id), uint64_t (*a5)(id), uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  char *v21;
  id v22;
  double v23;
  double v24;
  uint64_t v25;
  char v26;
  uint64_t (*v27)(char *, uint64_t);
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t (**v34)(id);
  uint64_t (*v35)(id);
  void *v36;
  id v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t (*v51)(id);
  uint64_t (*v52)(id);
  _QWORD aBlock[6];

  v50 = a6;
  v51 = a4;
  v52 = a5;
  v9 = sub_1DC40724C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v49 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1DC407270();
  v47 = *(_QWORD *)(v12 - 8);
  v48 = v12;
  MEMORY[0x1E0C80A78](v12);
  v46 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1DC407294();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(_QWORD *)(v15 + 64);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v19 = MEMORY[0x1E0C80A78](v18).n128_u64[0];
  v21 = (char *)&v41 - v20;
  v22 = objc_msgSend(a3, sel_contentSize, v19);
  v44 = a1;
  v45 = a2;
  if ((a2 & 1) != 0)
  {
    if (v23 > *(double *)&a1)
      return v51(v22);
  }
  else if (v24 > *(double *)&a1)
  {
    return v51(v22);
  }
  v42 = a3;
  v43 = v10;
  sub_1DC407288();
  sub_1DC080808(&qword_1F03501F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF6B8], MEMORY[0x1E0DEF6C8]);
  v25 = v50;
  v26 = sub_1DC4089E0();
  v27 = *(uint64_t (**)(char *, uint64_t))(v15 + 8);
  v22 = (id)v27(v21, v14);
  if ((v26 & 1) != 0)
    return v51(v22);
  sub_1DC0ACADC();
  v29 = (void *)sub_1DC409148();
  sub_1DC407288();
  MEMORY[0x1DF0C7B14](v17, 1.0);
  v27(v17, v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, v25, v14);
  v30 = *(unsigned __int8 *)(v15 + 80);
  v50 = v9;
  v31 = (v30 + 40) & ~v30;
  v32 = swift_allocObject();
  *(_QWORD *)(v32 + 16) = v44;
  *(_BYTE *)(v32 + 24) = v45 & 1;
  v33 = v42;
  *(_QWORD *)(v32 + 32) = v42;
  (*(void (**)(uint64_t, char *, uint64_t))(v15 + 32))(v32 + v31, v17, v14);
  v34 = (uint64_t (**)(id))(v32 + ((v16 + v31 + 7) & 0xFFFFFFFFFFFFFFF8));
  v35 = v52;
  *v34 = v51;
  v34[1] = v35;
  aBlock[4] = sub_1DC26C900;
  aBlock[5] = v32;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1DC081B88;
  aBlock[3] = &block_descriptor_6;
  v36 = _Block_copy(aBlock);
  v37 = v33;
  swift_retain();
  swift_release();
  v38 = v46;
  sub_1DC407264();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  sub_1DC080808(&qword_1EDB275A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  sub_1DC1130A0(0);
  sub_1DC080808((unint64_t *)&qword_1EDB3F720, (uint64_t (*)(uint64_t))sub_1DC1130A0, MEMORY[0x1E0DEAF38]);
  v39 = v49;
  v40 = v50;
  sub_1DC40964C();
  MEMORY[0x1DF0C9998](v21, v38, v39, v36);
  _Block_release(v36);

  (*(void (**)(char *, uint64_t))(v43 + 8))(v39, v40);
  (*(void (**)(char *, uint64_t))(v47 + 8))(v38, v48);
  return v27(v21, v14);
}

void sub_1DC26C2F4()
{
  id v0;
  id v1;
  id v2;

  v0 = objc_msgSend((id)objc_opt_self(), sel_sharedApplication);
  v1 = objc_msgSend(v0, sel_delegate);

  if (v1)
  {
    if ((objc_msgSend(v1, sel_respondsToSelector_, sel_window) & 1) != 0)
    {
      v2 = objc_msgSend(v1, sel_window);
      swift_unknownObjectRelease();
      if (v2)
      {
        objc_msgSend(v2, sel_setAlpha_, 1.0);

      }
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
}

uint64_t sub_1DC26C3D8(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  id v3;
  id v4;
  uint64_t v5;
  id v6;

  v3 = objc_msgSend((id)objc_opt_self(), sel_sharedApplication);
  v4 = objc_msgSend(v3, sel_delegate);

  if (v4)
  {
    if ((objc_msgSend(v4, sel_respondsToSelector_, sel_window) & 1) != 0)
    {
      v6 = objc_msgSend(v4, sel_window);
      v5 = swift_unknownObjectRelease();
      if (v6)
      {
        objc_msgSend(v6, sel_setAlpha_, 1.0);

      }
    }
    else
    {
      v5 = swift_unknownObjectRelease();
    }
  }
  return a2(v5);
}

uint64_t sub_1DC26C4AC(uint64_t a1, int a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, double a7)
{
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  id v27;
  uint64_t v28;
  void *v29;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD aBlock[6];

  v33 = a5;
  v34 = a6;
  v32 = a2;
  v31 = a1;
  v37 = sub_1DC40724C();
  v40 = *(_QWORD *)(v37 - 8);
  MEMORY[0x1E0C80A78](v37);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1DC407270();
  v38 = *(_QWORD *)(v12 - 8);
  v39 = v12;
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1DC407294();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(_QWORD *)(v16 + 64);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v31 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v31 - v20;
  sub_1DC0ACADC();
  v35 = sub_1DC409148();
  sub_1DC407288();
  MEMORY[0x1DF0C7B14](v18, a7);
  v36 = *(void (**)(char *, uint64_t))(v16 + 8);
  v36(v18, v15);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, a4, v15);
  v22 = (*(unsigned __int8 *)(v16 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v23 = swift_allocObject();
  *(_QWORD *)(v23 + 16) = v31;
  *(_BYTE *)(v23 + 24) = v32 & 1;
  v24 = v33;
  v25 = v34;
  *(_QWORD *)(v23 + 32) = a3;
  *(_QWORD *)(v23 + 40) = v24;
  *(_QWORD *)(v23 + 48) = v25;
  (*(void (**)(unint64_t, char *, uint64_t))(v16 + 32))(v23 + v22, v18, v15);
  aBlock[4] = sub_1DC26C830;
  aBlock[5] = v23;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1DC081B88;
  aBlock[3] = &block_descriptor_25;
  v26 = _Block_copy(aBlock);
  v27 = a3;
  swift_retain();
  swift_release();
  sub_1DC407264();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  sub_1DC080808(&qword_1EDB275A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  sub_1DC1130A0(0);
  sub_1DC080808((unint64_t *)&qword_1EDB3F720, (uint64_t (*)(uint64_t))sub_1DC1130A0, MEMORY[0x1E0DEAF38]);
  v28 = v37;
  sub_1DC40964C();
  v29 = (void *)v35;
  MEMORY[0x1DF0C9998](v21, v14, v11, v26);
  _Block_release(v26);

  (*(void (**)(char *, uint64_t))(v40 + 8))(v11, v28);
  (*(void (**)(char *, uint64_t))(v38 + 8))(v14, v39);
  return ((uint64_t (*)(char *, uint64_t))v36)(v21, v15);
}

uint64_t sub_1DC26C7B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1DC407294();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);

  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1DC26C830()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(sub_1DC407294() - 8) + 80);
  return sub_1DC26BF44(*(_QWORD *)(v0 + 16), *(unsigned __int8 *)(v0 + 24), *(void **)(v0 + 32), *(uint64_t (**)(id))(v0 + 40), *(uint64_t (**)(id))(v0 + 48), v0 + ((v1 + 56) & ~v1));
}

uint64_t sub_1DC26C86C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1DC407294();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DC26C900()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  _QWORD *v3;

  v1 = *(_QWORD *)(sub_1DC407294() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (_QWORD *)(v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8));
  return sub_1DC26C4AC(*(_QWORD *)(v0 + 16), *(unsigned __int8 *)(v0 + 24), *(_QWORD *)(v0 + 32), v0 + v2, *v3, v3[1], 0.0);
}

uint64_t sub_1DC26C954()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DC26C980()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  v1 = *(_QWORD *)(v0 + 16);
  result = v1 + 1;
  if (!__OFADD__(v1, 1))
    return sub_1DC26CB68(result, *(_QWORD *)(v0 + 24), *(void **)(v0 + 32), *(uint64_t (**)(__n128))(v0 + 40), *(_QWORD *)(v0 + 48), 1.0);
  __break(1u);
  return result;
}

void sub_1DC26C9A0(uint64_t a1, uint64_t a2)
{
  id v4;
  id v5;
  id v6;
  void *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  void *v16;
  uint64_t v17;

  v4 = objc_msgSend((id)objc_opt_self(), sel_sharedApplication);
  v5 = objc_msgSend(v4, sel_delegate);

  if (v5)
  {
    if ((objc_msgSend(v5, sel_respondsToSelector_, sel_window) & 1) != 0)
    {
      v6 = objc_msgSend(v5, sel_window);
      swift_unknownObjectRelease();
      if (v6)
      {
        objc_msgSend(v6, sel_setAlpha_, 0.0);

      }
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
  v7 = (void *)objc_opt_self();
  v16 = sub_1DC26C2F4;
  v17 = 0;
  v8 = MEMORY[0x1E0C809B0];
  v12 = MEMORY[0x1E0C809B0];
  v13 = 1107296256;
  v14 = sub_1DC081B88;
  v15 = &block_descriptor_21;
  v9 = _Block_copy(&v12);
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = a2;
  v16 = sub_1DC26CE88;
  v17 = v10;
  v12 = v8;
  v13 = 1107296256;
  v14 = sub_1DC319CA0;
  v15 = &block_descriptor_27;
  v11 = _Block_copy(&v12);
  swift_retain();
  swift_release();
  objc_msgSend(v7, sel_animateWithDuration_animations_completion_, v9, v11, 0.5);
  _Block_release(v11);
  _Block_release(v9);
}

uint64_t sub_1DC26CB68(uint64_t a1, uint64_t a2, void *a3, uint64_t (*a4)(__n128), uint64_t a5, double a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  char *v23;
  _QWORD *v24;
  void *v25;
  uint64_t (*v26)(__n128);
  uint64_t v27;
  void *v28;
  id v29;
  void *v30;
  uint64_t v32;
  void (*v33)(char *, uint64_t);
  uint64_t v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t (*v38)(__n128);
  uint64_t v39;
  _QWORD aBlock[6];

  v38 = a4;
  v39 = a5;
  v35 = a3;
  v9 = sub_1DC40724C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1DC407270();
  v36 = *(_QWORD *)(v13 - 8);
  v37 = v13;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1DC407294();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v32 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x1E0C80A78](v20);
  v23 = (char *)&v32 - v22;
  if (a1 >= a2)
    return v38(v21);
  sub_1DC0ACADC();
  v34 = v10;
  v32 = sub_1DC409148();
  sub_1DC407288();
  MEMORY[0x1DF0C7B14](v19, a6);
  v33 = *(void (**)(char *, uint64_t))(v17 + 8);
  v33(v19, v16);
  v24 = (_QWORD *)swift_allocObject();
  v25 = v35;
  v26 = v38;
  v27 = v39;
  v24[2] = v35;
  v24[3] = v26;
  v24[4] = v27;
  v24[5] = a1;
  v24[6] = a2;
  aBlock[4] = sub_1DC1A6B8C;
  aBlock[5] = v24;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1DC081B88;
  aBlock[3] = &block_descriptor_18_2;
  v28 = _Block_copy(aBlock);
  v29 = v25;
  swift_retain();
  swift_release();
  sub_1DC407264();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  sub_1DC080808(&qword_1EDB275A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  sub_1DC1130A0(0);
  sub_1DC080808((unint64_t *)&qword_1EDB3F720, (uint64_t (*)(uint64_t))sub_1DC1130A0, MEMORY[0x1E0DEAF38]);
  sub_1DC40964C();
  v30 = (void *)v32;
  MEMORY[0x1DF0C9998](v23, v15, v12, v28);
  _Block_release(v28);

  (*(void (**)(char *, uint64_t))(v34 + 8))(v12, v9);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v15, v37);
  return ((uint64_t (*)(char *, uint64_t))v33)(v23, v16);
}

uint64_t sub_1DC26CE38()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DC26CE64()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DC26CE88(uint64_t a1)
{
  uint64_t v1;

  return sub_1DC26C3D8(a1, *(uint64_t (**)(uint64_t))(v1 + 16));
}

uint64_t sub_1DC26CEB8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v28 = a1;
  v30 = *v1;
  v27 = sub_1DC4002BC();
  v2 = *(_QWORD *)(v27 - 8);
  v29 = *(_QWORD *)(v2 + 64);
  MEMORY[0x1E0C80A78](v27);
  v26 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1DC407258();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1DC4024D0();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v24 - v14;
  *(uint64_t *)((char *)&v24 - v14) = 0x404E000000000000;
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v9 + 104))((char *)&v24 - v14, *MEMORY[0x1E0DB32C8], v8, v13);
  sub_1DC0ACADC();
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DEF530], v4);
  v25 = sub_1DC40916C();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v16 = v26;
  v17 = v27;
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v26, v28, v27);
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v11, v15, v8);
  v18 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v19 = (v29 + *(unsigned __int8 *)(v9 + 80) + v18) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v20 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(v20 + v18, v16, v17);
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v20 + v19, v11, v8);
  sub_1DC400F7C();
  v21 = (void *)v25;
  v22 = sub_1DC402E00();

  swift_release();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v15, v8);
  return v22;
}

uint64_t sub_1DC26D114(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD v9[2];

  v9[1] = a3;
  v3 = sub_1DC4025B4();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getObjectType();
  sub_1DC4010B4();
  sub_1DC1EBA88((uint64_t)v6);
  v7 = sub_1DC400730();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return v7;
}

void sub_1DC26D228(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;

  v8 = (_QWORD *)swift_allocObject();
  v8[2] = a5;
  v8[3] = a1;
  v8[4] = a2;
  v9 = (void *)objc_opt_self();
  swift_retain();
  swift_retain();
  if (objc_msgSend(v9, sel_isMainThread))
  {
    sub_1DC402698();
    sub_1DC402674();
    v10 = swift_allocObject();
    *(_QWORD *)(v10 + 16) = sub_1DC26D714;
    *(_QWORD *)(v10 + 24) = v8;
    swift_retain();
    sub_1DC402680();
    swift_release();
    swift_release();
    swift_release();
  }
  else
  {
    __swift_project_boxed_opaque_existential_1((_QWORD *)(a5 + OBJC_IVAR____TtC8StocksUI21StockChartDataManager_priceDataManager), *(_QWORD *)(a5 + OBJC_IVAR____TtC8StocksUI21StockChartDataManager_priceDataManager + 24));
    sub_1DC1044DC();
    v11 = sub_1DC4010E4();
    v12 = *(_QWORD *)(v11 - 8);
    v13 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
    v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_1DC40DC10;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v12 + 16))(v14 + v13, a5 + OBJC_IVAR____TtC8StocksUI21StockChartDataManager_stock, v11);
    sub_1DC400D24();
    swift_bridgeObjectRelease();
    v15 = swift_allocObject();
    *(_QWORD *)(v15 + 16) = a1;
    *(_QWORD *)(v15 + 24) = a2;
    swift_retain();
    v16 = (id)sub_1DC402C80();
    sub_1DC402D04();
    swift_release();
    swift_release();
    swift_release();
    swift_release();

  }
}

void sub_1DC26D464(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;

  __swift_project_boxed_opaque_existential_1((_QWORD *)(a1 + OBJC_IVAR____TtC8StocksUI21StockChartDataManager_priceDataManager), *(_QWORD *)(a1 + OBJC_IVAR____TtC8StocksUI21StockChartDataManager_priceDataManager + 24));
  sub_1DC1044DC();
  v6 = sub_1DC4010E4();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1DC40DC10;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v7 + 16))(v9 + v8, a1 + OBJC_IVAR____TtC8StocksUI21StockChartDataManager_stock, v6);
  sub_1DC400D24();
  swift_bridgeObjectRelease();
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a2;
  *(_QWORD *)(v10 + 24) = a3;
  swift_retain();
  v11 = (id)sub_1DC402C80();
  sub_1DC402D04();
  swift_release();
  swift_release();
  swift_release();

}

uint64_t sub_1DC26D5B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC8StocksUI21StockChartDataManager_stock;
  v2 = sub_1DC4010E4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC8StocksUI21StockChartDataManager_priceDataManager);
  return swift_deallocClassInstance();
}

uint64_t sub_1DC26D624()
{
  return type metadata accessor for StockChartDataManager();
}

uint64_t type metadata accessor for StockChartDataManager()
{
  uint64_t result;

  result = qword_1EDB32F78;
  if (!qword_1EDB32F78)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1DC26D668()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1DC4010E4();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1DC26D6E8()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1DC26D714()
{
  uint64_t *v0;

  sub_1DC26D464(v0[2], v0[3], v0[4]);
}

uint64_t sub_1DC26D720()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DC26D744()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v1 = sub_1DC4002BC();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = sub_1DC4024D0();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (v3 + v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);
  return swift_deallocObject();
}

uint64_t sub_1DC26D7F8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(sub_1DC4002BC() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v3 + 64);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(sub_1DC4024D0() - 8) + 80);
  return sub_1DC26D114(a1, v1 + v4, v1 + ((v4 + v5 + v6) & ~v6));
}

uint64_t sub_1DC26D86C()
{
  return sub_1DC20CB44();
}

uint64_t sub_1DC26D888()
{
  type metadata accessor for StocksAudioTrack();
  return sub_1DC402104();
}

uint64_t *sub_1DC26D8DC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int *v17;
  int *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t *, _QWORD, uint64_t, int *);
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  void *v34;
  id v35;
  uint64_t v36;
  _QWORD *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(char *, char *, uint64_t);
  char *v49;
  uint64_t v50;
  char *v51;
  _QWORD *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  __int128 v61;
  __int128 v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  void (*v84)(char *, char *, uint64_t);
  int *v85;
  uint64_t v86;
  char *v87;
  char *v88;
  __int128 v89;
  uint64_t v90;
  char *v91;
  char *v92;
  __int128 v93;
  uint64_t v94;
  char *v95;
  char *v96;
  __int128 v97;
  uint64_t v98;
  char *v99;
  char *v100;
  __int128 v101;
  uint64_t v102;
  char *v103;
  char *v104;
  __int128 v105;
  uint64_t v106;
  char *v107;
  char *v108;
  __int128 v109;
  uint64_t v110;
  char *v111;
  char *v112;
  __int128 v113;
  uint64_t v114;
  char *v115;
  char *v116;
  __int128 v117;
  uint64_t v118;
  char *v119;
  char *v120;
  __int128 v121;
  char *v123;
  char *v124;
  void (*v125)(char *, char *, uint64_t);
  char *v126;
  void (*v127)(char *, char *, uint64_t);
  uint64_t v128;
  uint64_t *v129;
  int *v130;
  int *v131;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      sub_1DC142710(0);
      v18 = v17;
      v19 = *((_QWORD *)v17 - 1);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, int *))(v19 + 48))(a2, 1, v17))
      {
        sub_1DC1427BC(0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
      }
      else
      {
        v27 = sub_1DC4073A8();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(a1, a2, v27);
        *(uint64_t *)((char *)a1 + v18[7]) = *(uint64_t *)((char *)a2 + v18[7]);
        *(uint64_t *)((char *)a1 + v18[8]) = *(uint64_t *)((char *)a2 + v18[8]);
        *(uint64_t *)((char *)a1 + v18[9]) = *(uint64_t *)((char *)a2 + v18[9]);
        v28 = *(void (**)(uint64_t *, _QWORD, uint64_t, int *))(v19 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v28(a1, 0, 1, v18);
      }
      sub_1DC25CC9C();
      v30 = *(int *)(v29 + 48);
      v31 = (char *)a1 + v30;
      v32 = (char *)a2 + v30;
      v33 = *((_QWORD *)v32 + 1);
      if (v33)
      {
        *(_QWORD *)v31 = *(_QWORD *)v32;
        *((_QWORD *)v31 + 1) = v33;
        v34 = (void *)*((_QWORD *)v32 + 2);
        *((_QWORD *)v31 + 2) = v34;
        *(_OWORD *)(v31 + 24) = *(_OWORD *)(v32 + 24);
        *(_OWORD *)(v31 + 40) = *(_OWORD *)(v32 + 40);
        *(_OWORD *)(v31 + 56) = *(_OWORD *)(v32 + 56);
        *(_OWORD *)(v31 + 72) = *(_OWORD *)(v32 + 72);
        swift_bridgeObjectRetain();
        v35 = v34;
      }
      else
      {
        v61 = *((_OWORD *)v32 + 3);
        *((_OWORD *)v31 + 2) = *((_OWORD *)v32 + 2);
        *((_OWORD *)v31 + 3) = v61;
        *((_OWORD *)v31 + 4) = *((_OWORD *)v32 + 4);
        *((_QWORD *)v31 + 10) = *((_QWORD *)v32 + 10);
        v62 = *((_OWORD *)v32 + 1);
        *(_OWORD *)v31 = *(_OWORD *)v32;
        *((_OWORD *)v31 + 1) = v62;
      }
      goto LABEL_23;
    }
    if (!EnumCaseMultiPayload)
    {
      v8 = sub_1DC4010E4();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      v9 = (int *)type metadata accessor for StockFeedMastheadModel();
      v10 = v9[5];
      v11 = (char *)a1 + v10;
      v12 = (char *)a2 + v10;
      v13 = sub_1DC401030();
      v14 = *(_QWORD *)(v13 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
      {
        sub_1DC089DA4(0, &qword_1EDB28DC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF040], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      }
      v21 = v9[6];
      v22 = (char *)a1 + v21;
      v23 = (char *)a2 + v21;
      v24 = sub_1DC400F7C();
      v25 = *(_QWORD *)(v24 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
      {
        sub_1DC089DA4(0, (unint64_t *)&unk_1EDB28D90, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAEFA8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v22, v23, v24);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
      }
      v129 = a1;
      v130 = v9;
      v36 = v9[7];
      v37 = (uint64_t *)((char *)a1 + v36);
      v38 = (char *)a2 + v36;
      v39 = *(uint64_t *)((char *)a2 + v36 + 8);
      *v37 = *(uint64_t *)((char *)a2 + v36);
      v37[1] = v39;
      v131 = (int *)type metadata accessor for QuoteSummaryViewModel();
      v40 = v131[5];
      v41 = (char *)v37 + v40;
      v42 = &v38[v40];
      *(_QWORD *)v41 = *(_QWORD *)&v38[v40];
      v41[8] = v38[v40 + 8];
      *((_QWORD *)v41 + 2) = *(_QWORD *)&v38[v40 + 16];
      v41[24] = v38[v40 + 24];
      *((_QWORD *)v41 + 4) = *(_QWORD *)&v38[v40 + 32];
      v41[40] = v38[v40 + 40];
      v43 = *(_QWORD *)&v38[v40 + 56];
      *((_QWORD *)v41 + 6) = *(_QWORD *)&v38[v40 + 48];
      *((_QWORD *)v41 + 7) = v43;
      v44 = *(_QWORD *)&v38[v40 + 72];
      *((_QWORD *)v41 + 8) = *(_QWORD *)&v38[v40 + 64];
      *((_QWORD *)v41 + 9) = v44;
      v41[80] = v38[v40 + 80];
      v45 = type metadata accessor for PriceViewModel();
      v46 = *(int *)(v45 + 40);
      v124 = &v42[v46];
      v126 = &v41[v46];
      v47 = sub_1DC4011C8();
      v48 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v49 = v126;
      v127 = v48;
      v128 = v47;
      v48(v49, v124, v47);
      v50 = *(int *)(v45 + 44);
      v51 = &v41[v50];
      v52 = v37;
      v53 = &v42[v50];
      v54 = sub_1DC400118();
      v125 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v54 - 8) + 16);
      v125(v51, v53, v54);
      v55 = v131[6];
      v56 = (_QWORD *)((char *)v37 + v55);
      v57 = v38;
      v58 = &v38[v55];
      v59 = *(_QWORD *)(v45 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v59 + 48))(&v38[v55], 1, v45))
      {
        sub_1DC089DA4(0, (unint64_t *)&qword_1EDB2D5E8, (uint64_t (*)(uint64_t))type metadata accessor for PriceViewModel, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(v56, v58, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
      }
      else
      {
        *v56 = *(_QWORD *)v58;
        *((_BYTE *)v56 + 8) = v58[8];
        v56[2] = *((_QWORD *)v58 + 2);
        *((_BYTE *)v56 + 24) = v58[24];
        v56[4] = *((_QWORD *)v58 + 4);
        *((_BYTE *)v56 + 40) = v58[40];
        v63 = *((_QWORD *)v58 + 7);
        v56[6] = *((_QWORD *)v58 + 6);
        v56[7] = v63;
        v64 = *((_QWORD *)v58 + 9);
        v56[8] = *((_QWORD *)v58 + 8);
        v56[9] = v64;
        *((_BYTE *)v56 + 80) = v58[80];
        v65 = *(int *)(v45 + 40);
        v66 = (char *)v56 + v65;
        v123 = &v58[v65];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v127(v66, v123, v128);
        v125((char *)v56 + *(int *)(v45 + 44), &v58[*(int *)(v45 + 44)], v54);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v59 + 56))(v56, 0, 1, v45);
      }
      v67 = v131[7];
      v68 = (char *)v52 + v67;
      v69 = &v57[v67];
      v70 = sub_1DC4008EC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v70 - 8) + 16))(v68, v69, v70);
      v71 = v131[8];
      v72 = (char *)v52 + v71;
      v73 = &v57[v71];
      v74 = sub_1DC4002BC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v74 - 8) + 16))(v72, v73, v74);
      v75 = v131[9];
      v76 = (_QWORD *)((char *)v52 + v75);
      v77 = &v57[v75];
      v78 = *((_QWORD *)v77 + 1);
      *v76 = *(_QWORD *)v77;
      v76[1] = v78;
      a1 = v129;
      *((_BYTE *)v129 + v130[8]) = *((_BYTE *)a2 + v130[8]);
      sub_1DC142614();
      v80 = *(int *)(v79 + 48);
      v81 = (char *)v129 + v80;
      v82 = (char *)a2 + v80;
      v83 = sub_1DC406040();
      v84 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v83 - 8) + 16);
      swift_bridgeObjectRetain();
      v84(v81, v82, v83);
      v85 = (int *)type metadata accessor for StockFeedMastheadViewLayoutAttributes();
      v86 = v85[5];
      v87 = &v81[v86];
      v88 = &v82[v86];
      v89 = *((_OWORD *)v88 + 1);
      *(_OWORD *)v87 = *(_OWORD *)v88;
      *((_OWORD *)v87 + 1) = v89;
      v90 = v85[6];
      v91 = &v81[v90];
      v92 = &v82[v90];
      v93 = *((_OWORD *)v92 + 1);
      *(_OWORD *)v91 = *(_OWORD *)v92;
      *((_OWORD *)v91 + 1) = v93;
      v94 = v85[7];
      v95 = &v81[v94];
      v96 = &v82[v94];
      v97 = *((_OWORD *)v96 + 1);
      *(_OWORD *)v95 = *(_OWORD *)v96;
      *((_OWORD *)v95 + 1) = v97;
      v98 = v85[8];
      v99 = &v81[v98];
      v100 = &v82[v98];
      v101 = *((_OWORD *)v100 + 1);
      *(_OWORD *)v99 = *(_OWORD *)v100;
      *((_OWORD *)v99 + 1) = v101;
      v102 = v85[9];
      v103 = &v81[v102];
      v104 = &v82[v102];
      v105 = *((_OWORD *)v104 + 1);
      *(_OWORD *)v103 = *(_OWORD *)v104;
      *((_OWORD *)v103 + 1) = v105;
      v106 = v85[10];
      v107 = &v81[v106];
      v108 = &v82[v106];
      v109 = *((_OWORD *)v108 + 1);
      *(_OWORD *)v107 = *(_OWORD *)v108;
      *((_OWORD *)v107 + 1) = v109;
      v110 = v85[11];
      v111 = &v81[v110];
      v112 = &v82[v110];
      v113 = *((_OWORD *)v112 + 1);
      *(_OWORD *)v111 = *(_OWORD *)v112;
      *((_OWORD *)v111 + 1) = v113;
      memcpy(&v81[v85[12]], &v82[v85[12]], 0x111uLL);
      v114 = v85[13];
      v115 = &v81[v114];
      v116 = &v82[v114];
      v117 = *((_OWORD *)v116 + 1);
      *(_OWORD *)v115 = *(_OWORD *)v116;
      *((_OWORD *)v115 + 1) = v117;
      v118 = v85[14];
      v119 = &v81[v118];
      v120 = &v82[v118];
      v121 = *((_OWORD *)v120 + 1);
      *(_OWORD *)v119 = *(_OWORD *)v120;
      *((_OWORD *)v119 + 1) = v121;
      v81[v85[15]] = v82[v85[15]];
      *(_QWORD *)&v81[v85[16]] = *(_QWORD *)&v82[v85[16]];
LABEL_23:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(a1, a2, *(_QWORD *)(v5 + 64));
  }
  return a1;
}

uint64_t type metadata accessor for StockFeedLayoutSectionDescriptor.Data(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for StockFeedLayoutSectionDescriptor.Data);
}

void sub_1DC26E004(uint64_t a1)
{
  int EnumCaseMultiPayload;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    sub_1DC142710(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 48))(a1, 1, v29))
    {
      v30 = sub_1DC4073A8();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 8))(a1, v30);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    sub_1DC25CC9C();
    v32 = a1 + *(int *)(v31 + 48);
    if (*(_QWORD *)(v32 + 8))
    {
      swift_bridgeObjectRelease();

    }
  }
  else if (!EnumCaseMultiPayload)
  {
    v3 = sub_1DC4010E4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
    v4 = (int *)type metadata accessor for StockFeedMastheadModel();
    v5 = a1 + v4[5];
    v6 = sub_1DC401030();
    v7 = *(_QWORD *)(v6 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6))
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
    v8 = a1 + v4[6];
    v9 = sub_1DC400F7C();
    v10 = *(_QWORD *)(v9 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
    v11 = a1 + v4[7];
    swift_bridgeObjectRelease();
    v12 = (int *)type metadata accessor for QuoteSummaryViewModel();
    v13 = v11 + v12[5];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v14 = type metadata accessor for PriceViewModel();
    v15 = v13 + *(int *)(v14 + 40);
    v16 = sub_1DC4011C8();
    v17 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8);
    v17(v15, v16);
    v18 = v13 + *(int *)(v14 + 44);
    v19 = sub_1DC400118();
    v20 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 8);
    v20(v18, v19);
    v21 = v11 + v12[6];
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v21, 1, v14))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v17(v21 + *(int *)(v14 + 40), v16);
      v20(v21 + *(int *)(v14 + 44), v19);
    }
    v22 = v11 + v12[7];
    v23 = sub_1DC4008EC();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 8))(v22, v23);
    v24 = v11 + v12[8];
    v25 = sub_1DC4002BC();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 8))(v24, v25);
    swift_bridgeObjectRelease();
    sub_1DC142614();
    v27 = a1 + *(int *)(v26 + 48);
    v28 = sub_1DC406040();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 8))(v27, v28);
  }
}

char *sub_1DC26E31C(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  int *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, _QWORD, uint64_t, int *);
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  void *v32;
  id v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  void (*v47)(char *, char *, uint64_t);
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  void (*v54)(char *, char *, uint64_t);
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  __int128 v60;
  __int128 v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  void (*v82)(char *, char *, uint64_t);
  int *v83;
  uint64_t v84;
  char *v85;
  char *v86;
  __int128 v87;
  uint64_t v88;
  char *v89;
  char *v90;
  __int128 v91;
  uint64_t v92;
  char *v93;
  char *v94;
  __int128 v95;
  uint64_t v96;
  char *v97;
  char *v98;
  __int128 v99;
  uint64_t v100;
  char *v101;
  char *v102;
  __int128 v103;
  uint64_t v104;
  char *v105;
  char *v106;
  __int128 v107;
  uint64_t v108;
  char *v109;
  char *v110;
  __int128 v111;
  uint64_t v112;
  char *v113;
  char *v114;
  __int128 v115;
  uint64_t v116;
  char *v117;
  char *v118;
  __int128 v119;
  char *v121;
  char *v122;
  char *v123;
  void (*v124)(char *, char *, uint64_t);
  uint64_t v125;
  int *v126;
  char *v127;
  int *v128;
  char *v129;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    sub_1DC142710(0);
    v16 = v15;
    v17 = *((_QWORD *)v15 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v17 + 48))(a2, 1, v15))
    {
      sub_1DC1427BC(0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      v25 = sub_1DC4073A8();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(a1, a2, v25);
      *(_QWORD *)&a1[v16[7]] = *(_QWORD *)&a2[v16[7]];
      *(_QWORD *)&a1[v16[8]] = *(_QWORD *)&a2[v16[8]];
      *(_QWORD *)&a1[v16[9]] = *(_QWORD *)&a2[v16[9]];
      v26 = *(void (**)(char *, _QWORD, uint64_t, int *))(v17 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v26(a1, 0, 1, v16);
    }
    sub_1DC25CC9C();
    v28 = *(int *)(v27 + 48);
    v29 = &a1[v28];
    v30 = &a2[v28];
    v31 = *((_QWORD *)v30 + 1);
    if (v31)
    {
      *(_QWORD *)v29 = *(_QWORD *)v30;
      *((_QWORD *)v29 + 1) = v31;
      v32 = (void *)*((_QWORD *)v30 + 2);
      *((_QWORD *)v29 + 2) = v32;
      *(_OWORD *)(v29 + 24) = *(_OWORD *)(v30 + 24);
      *(_OWORD *)(v29 + 40) = *(_OWORD *)(v30 + 40);
      *(_OWORD *)(v29 + 56) = *(_OWORD *)(v30 + 56);
      *(_OWORD *)(v29 + 72) = *(_OWORD *)(v30 + 72);
      swift_bridgeObjectRetain();
      v33 = v32;
    }
    else
    {
      v60 = *((_OWORD *)v30 + 3);
      *((_OWORD *)v29 + 2) = *((_OWORD *)v30 + 2);
      *((_OWORD *)v29 + 3) = v60;
      *((_OWORD *)v29 + 4) = *((_OWORD *)v30 + 4);
      *((_QWORD *)v29 + 10) = *((_QWORD *)v30 + 10);
      v61 = *((_OWORD *)v30 + 1);
      *(_OWORD *)v29 = *(_OWORD *)v30;
      *((_OWORD *)v29 + 1) = v61;
    }
    goto LABEL_21;
  }
  if (!EnumCaseMultiPayload)
  {
    v7 = sub_1DC4010E4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = (int *)type metadata accessor for StockFeedMastheadModel();
    v9 = v8[5];
    v10 = &a1[v9];
    v11 = &a2[v9];
    v12 = sub_1DC401030();
    v13 = *(_QWORD *)(v12 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
    {
      sub_1DC089DA4(0, &qword_1EDB28DC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF040], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
    v19 = v8[6];
    v20 = &a1[v19];
    v21 = &a2[v19];
    v22 = sub_1DC400F7C();
    v23 = *(_QWORD *)(v22 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
    {
      sub_1DC089DA4(0, (unint64_t *)&unk_1EDB28D90, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAEFA8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v20, v21, v22);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
    }
    v127 = a2;
    v128 = v8;
    v34 = v8[7];
    v129 = a1;
    v35 = &a1[v34];
    v36 = &a2[v34];
    v37 = *(_QWORD *)&a2[v34 + 8];
    *(_QWORD *)v35 = *(_QWORD *)&a2[v34];
    *((_QWORD *)v35 + 1) = v37;
    v126 = (int *)type metadata accessor for QuoteSummaryViewModel();
    v38 = v126[5];
    v39 = &v35[v38];
    v40 = &v36[v38];
    *(_QWORD *)v39 = *(_QWORD *)&v36[v38];
    v39[8] = v36[v38 + 8];
    *((_QWORD *)v39 + 2) = *(_QWORD *)&v36[v38 + 16];
    v39[24] = v36[v38 + 24];
    *((_QWORD *)v39 + 4) = *(_QWORD *)&v36[v38 + 32];
    v39[40] = v36[v38 + 40];
    v41 = *(_QWORD *)&v36[v38 + 56];
    *((_QWORD *)v39 + 6) = *(_QWORD *)&v36[v38 + 48];
    *((_QWORD *)v39 + 7) = v41;
    v42 = *(_QWORD *)&v36[v38 + 72];
    *((_QWORD *)v39 + 8) = *(_QWORD *)&v36[v38 + 64];
    *((_QWORD *)v39 + 9) = v42;
    v39[80] = v36[v38 + 80];
    v43 = type metadata accessor for PriceViewModel();
    v44 = *(int *)(v43 + 40);
    v45 = &v39[v44];
    v123 = &v40[v44];
    v46 = sub_1DC4011C8();
    v47 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v48 = v123;
    v124 = v47;
    v125 = v46;
    v47(v45, v48, v46);
    v49 = v43;
    v50 = *(int *)(v43 + 44);
    v51 = &v39[v50];
    v52 = &v40[v50];
    v53 = sub_1DC400118();
    v54 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v53 - 8) + 16);
    v54(v51, v52, v53);
    v55 = v126[6];
    v56 = &v35[v55];
    v57 = &v36[v55];
    v58 = *(_QWORD *)(v49 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v58 + 48))(&v36[v55], 1, v49))
    {
      sub_1DC089DA4(0, (unint64_t *)&qword_1EDB2D5E8, (uint64_t (*)(uint64_t))type metadata accessor for PriceViewModel, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
    }
    else
    {
      *(_QWORD *)v56 = *(_QWORD *)v57;
      v56[8] = v57[8];
      *((_QWORD *)v56 + 2) = *((_QWORD *)v57 + 2);
      v56[24] = v57[24];
      *((_QWORD *)v56 + 4) = *((_QWORD *)v57 + 4);
      v56[40] = v57[40];
      v62 = *((_QWORD *)v57 + 7);
      *((_QWORD *)v56 + 6) = *((_QWORD *)v57 + 6);
      *((_QWORD *)v56 + 7) = v62;
      v63 = *((_QWORD *)v57 + 9);
      *((_QWORD *)v56 + 8) = *((_QWORD *)v57 + 8);
      *((_QWORD *)v56 + 9) = v63;
      v56[80] = v57[80];
      v64 = *(int *)(v49 + 40);
      v121 = &v57[v64];
      v122 = &v56[v64];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v124(v122, v121, v125);
      v54(&v56[*(int *)(v49 + 44)], &v57[*(int *)(v49 + 44)], v53);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v58 + 56))(v56, 0, 1, v49);
    }
    v65 = v126[7];
    v66 = &v35[v65];
    v67 = &v36[v65];
    v68 = sub_1DC4008EC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v68 - 8) + 16))(v66, v67, v68);
    v69 = v126[8];
    v70 = &v35[v69];
    v71 = &v36[v69];
    v72 = sub_1DC4002BC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v72 - 8) + 16))(v70, v71, v72);
    v73 = v126[9];
    v74 = &v35[v73];
    v75 = &v36[v73];
    v76 = *((_QWORD *)v75 + 1);
    *(_QWORD *)v74 = *(_QWORD *)v75;
    *((_QWORD *)v74 + 1) = v76;
    a1 = v129;
    v129[v128[8]] = v127[v128[8]];
    sub_1DC142614();
    v78 = *(int *)(v77 + 48);
    v79 = &v129[v78];
    v80 = &v127[v78];
    v81 = sub_1DC406040();
    v82 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v81 - 8) + 16);
    swift_bridgeObjectRetain();
    v82(v79, v80, v81);
    v83 = (int *)type metadata accessor for StockFeedMastheadViewLayoutAttributes();
    v84 = v83[5];
    v85 = &v79[v84];
    v86 = &v80[v84];
    v87 = *((_OWORD *)v86 + 1);
    *(_OWORD *)v85 = *(_OWORD *)v86;
    *((_OWORD *)v85 + 1) = v87;
    v88 = v83[6];
    v89 = &v79[v88];
    v90 = &v80[v88];
    v91 = *((_OWORD *)v90 + 1);
    *(_OWORD *)v89 = *(_OWORD *)v90;
    *((_OWORD *)v89 + 1) = v91;
    v92 = v83[7];
    v93 = &v79[v92];
    v94 = &v80[v92];
    v95 = *((_OWORD *)v94 + 1);
    *(_OWORD *)v93 = *(_OWORD *)v94;
    *((_OWORD *)v93 + 1) = v95;
    v96 = v83[8];
    v97 = &v79[v96];
    v98 = &v80[v96];
    v99 = *((_OWORD *)v98 + 1);
    *(_OWORD *)v97 = *(_OWORD *)v98;
    *((_OWORD *)v97 + 1) = v99;
    v100 = v83[9];
    v101 = &v79[v100];
    v102 = &v80[v100];
    v103 = *((_OWORD *)v102 + 1);
    *(_OWORD *)v101 = *(_OWORD *)v102;
    *((_OWORD *)v101 + 1) = v103;
    v104 = v83[10];
    v105 = &v79[v104];
    v106 = &v80[v104];
    v107 = *((_OWORD *)v106 + 1);
    *(_OWORD *)v105 = *(_OWORD *)v106;
    *((_OWORD *)v105 + 1) = v107;
    v108 = v83[11];
    v109 = &v79[v108];
    v110 = &v80[v108];
    v111 = *((_OWORD *)v110 + 1);
    *(_OWORD *)v109 = *(_OWORD *)v110;
    *((_OWORD *)v109 + 1) = v111;
    memcpy(&v79[v83[12]], &v80[v83[12]], 0x111uLL);
    v112 = v83[13];
    v113 = &v79[v112];
    v114 = &v80[v112];
    v115 = *((_OWORD *)v114 + 1);
    *(_OWORD *)v113 = *(_OWORD *)v114;
    *((_OWORD *)v113 + 1) = v115;
    v116 = v83[14];
    v117 = &v79[v116];
    v118 = &v80[v116];
    v119 = *((_OWORD *)v118 + 1);
    *(_OWORD *)v117 = *(_OWORD *)v118;
    *((_OWORD *)v117 + 1) = v119;
    v79[v83[15]] = v80[v83[15]];
    *(_QWORD *)&v79[v83[16]] = *(_QWORD *)&v80[v83[16]];
LABEL_21:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

char *sub_1DC26EA10(uint64_t a1, char *a2, uint64_t a3)
{
  char *v3;
  int EnumCaseMultiPayload;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  int *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, _QWORD, uint64_t, int *);
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  void *v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  id v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(char *, char *, uint64_t);
  char *v46;
  uint64_t v47;
  char *v48;
  _QWORD *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  void (*v83)(char *, char *, uint64_t);
  int *v84;
  uint64_t v85;
  char *v86;
  char *v87;
  __int128 v88;
  uint64_t v89;
  char *v90;
  char *v91;
  __int128 v92;
  uint64_t v93;
  char *v94;
  char *v95;
  __int128 v96;
  uint64_t v97;
  char *v98;
  char *v99;
  __int128 v100;
  uint64_t v101;
  char *v102;
  char *v103;
  __int128 v104;
  uint64_t v105;
  char *v106;
  char *v107;
  __int128 v108;
  uint64_t v109;
  char *v110;
  char *v111;
  __int128 v112;
  uint64_t v113;
  char *v114;
  char *v115;
  __int128 v116;
  uint64_t v117;
  char *v118;
  char *v119;
  __int128 v120;
  char *v122;
  char *v123;
  void (*v124)(char *, char *, uint64_t);
  char *v125;
  void (*v126)(char *, char *, uint64_t);
  uint64_t v127;
  char *v128;
  int *v129;
  int *v130;

  v3 = (char *)a1;
  if ((char *)a1 != a2)
  {
    sub_1DC0926D8(a1, type metadata accessor for StockFeedLayoutSectionDescriptor);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      sub_1DC142710(0);
      v16 = v15;
      v17 = *((_QWORD *)v15 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v17 + 48))(a2, 1, v15))
      {
        sub_1DC1427BC(0);
        memcpy(v3, a2, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
      }
      else
      {
        v25 = sub_1DC4073A8();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v3, a2, v25);
        *(_QWORD *)&v3[v16[7]] = *(_QWORD *)&a2[v16[7]];
        *(_QWORD *)&v3[v16[8]] = *(_QWORD *)&a2[v16[8]];
        *(_QWORD *)&v3[v16[9]] = *(_QWORD *)&a2[v16[9]];
        v26 = *(void (**)(char *, _QWORD, uint64_t, int *))(v17 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v26(v3, 0, 1, v16);
      }
      sub_1DC25CC9C();
      v28 = *(int *)(v27 + 48);
      v29 = &v3[v28];
      v30 = &a2[v28];
      if (*((_QWORD *)v30 + 1))
      {
        *(_QWORD *)v29 = *(_QWORD *)v30;
        *((_QWORD *)v29 + 1) = *((_QWORD *)v30 + 1);
        v31 = (void *)*((_QWORD *)v30 + 2);
        *((_QWORD *)v29 + 2) = v31;
        v32 = *(_OWORD *)(v30 + 24);
        v33 = *(_OWORD *)(v30 + 40);
        v34 = *(_OWORD *)(v30 + 56);
        *(_OWORD *)(v29 + 72) = *(_OWORD *)(v30 + 72);
        *(_OWORD *)(v29 + 56) = v34;
        *(_OWORD *)(v29 + 40) = v33;
        *(_OWORD *)(v29 + 24) = v32;
        swift_bridgeObjectRetain();
        v35 = v31;
      }
      else
      {
        v58 = *((_OWORD *)v30 + 1);
        *(_OWORD *)v29 = *(_OWORD *)v30;
        *((_OWORD *)v29 + 1) = v58;
        v59 = *((_OWORD *)v30 + 2);
        v60 = *((_OWORD *)v30 + 3);
        v61 = *((_OWORD *)v30 + 4);
        *((_QWORD *)v29 + 10) = *((_QWORD *)v30 + 10);
        *((_OWORD *)v29 + 3) = v60;
        *((_OWORD *)v29 + 4) = v61;
        *((_OWORD *)v29 + 2) = v59;
      }
      goto LABEL_22;
    }
    if (!EnumCaseMultiPayload)
    {
      v7 = sub_1DC4010E4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v3, a2, v7);
      v8 = (int *)type metadata accessor for StockFeedMastheadModel();
      v9 = v8[5];
      v10 = &v3[v9];
      v11 = &a2[v9];
      v12 = sub_1DC401030();
      v13 = *(_QWORD *)(v12 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
      {
        sub_1DC089DA4(0, &qword_1EDB28DC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF040], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      }
      v19 = v8[6];
      v20 = &v3[v19];
      v21 = &a2[v19];
      v22 = sub_1DC400F7C();
      v23 = *(_QWORD *)(v22 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
      {
        sub_1DC089DA4(0, (unint64_t *)&unk_1EDB28D90, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAEFA8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v20, v21, v22);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
      }
      v128 = v3;
      v129 = v8;
      v36 = v8[7];
      v37 = &v3[v36];
      v38 = &a2[v36];
      *(_QWORD *)v37 = *(_QWORD *)&a2[v36];
      *((_QWORD *)v37 + 1) = *(_QWORD *)&a2[v36 + 8];
      v130 = (int *)type metadata accessor for QuoteSummaryViewModel();
      v39 = v130[5];
      v40 = &v37[v39];
      v41 = &v38[v39];
      LOBYTE(v39) = v38[v39 + 8];
      *(_QWORD *)v40 = *(_QWORD *)v41;
      v40[8] = v39;
      LOBYTE(v39) = v41[24];
      *((_QWORD *)v40 + 2) = *((_QWORD *)v41 + 2);
      v40[24] = v39;
      LOBYTE(v39) = v41[40];
      *((_QWORD *)v40 + 4) = *((_QWORD *)v41 + 4);
      v40[40] = v39;
      *((_QWORD *)v40 + 6) = *((_QWORD *)v41 + 6);
      *((_QWORD *)v40 + 7) = *((_QWORD *)v41 + 7);
      *((_QWORD *)v40 + 8) = *((_QWORD *)v41 + 8);
      *((_QWORD *)v40 + 9) = *((_QWORD *)v41 + 9);
      v40[80] = v41[80];
      v42 = type metadata accessor for PriceViewModel();
      v43 = *(int *)(v42 + 40);
      v123 = &v41[v43];
      v125 = &v40[v43];
      v44 = sub_1DC4011C8();
      v45 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v46 = v125;
      v126 = v45;
      v127 = v44;
      v45(v46, v123, v44);
      v47 = *(int *)(v42 + 44);
      v48 = &v40[v47];
      v49 = v37;
      v50 = &v41[v47];
      v51 = sub_1DC400118();
      v124 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 16);
      v124(v48, v50, v51);
      v52 = v130[6];
      v53 = &v37[v52];
      v54 = v38;
      v55 = &v38[v52];
      v56 = *(_QWORD *)(v42 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v56 + 48))(&v38[v52], 1, v42))
      {
        sub_1DC089DA4(0, (unint64_t *)&qword_1EDB2D5E8, (uint64_t (*)(uint64_t))type metadata accessor for PriceViewModel, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(v53, v55, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
      }
      else
      {
        v62 = *(_QWORD *)v55;
        v53[8] = v55[8];
        *(_QWORD *)v53 = v62;
        v63 = *((_QWORD *)v55 + 2);
        v53[24] = v55[24];
        *((_QWORD *)v53 + 2) = v63;
        v64 = *((_QWORD *)v55 + 4);
        v53[40] = v55[40];
        *((_QWORD *)v53 + 4) = v64;
        *((_QWORD *)v53 + 6) = *((_QWORD *)v55 + 6);
        *((_QWORD *)v53 + 7) = *((_QWORD *)v55 + 7);
        *((_QWORD *)v53 + 8) = *((_QWORD *)v55 + 8);
        *((_QWORD *)v53 + 9) = *((_QWORD *)v55 + 9);
        v53[80] = v55[80];
        v65 = *(int *)(v42 + 40);
        v66 = &v53[v65];
        v122 = &v55[v65];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v126(v66, v122, v127);
        v124(&v53[*(int *)(v42 + 44)], &v55[*(int *)(v42 + 44)], v51);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v56 + 56))(v53, 0, 1, v42);
      }
      v67 = v130[7];
      v68 = (char *)v49 + v67;
      v69 = &v54[v67];
      v70 = sub_1DC4008EC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v70 - 8) + 16))(v68, v69, v70);
      v71 = v130[8];
      v72 = (char *)v49 + v71;
      v73 = &v54[v71];
      v74 = sub_1DC4002BC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v74 - 8) + 16))(v72, v73, v74);
      v75 = v130[9];
      v76 = (_QWORD *)((char *)v49 + v75);
      v77 = &v54[v75];
      *v76 = *(_QWORD *)v77;
      v76[1] = *((_QWORD *)v77 + 1);
      v3 = v128;
      v128[v129[8]] = a2[v129[8]];
      sub_1DC142614();
      v79 = *(int *)(v78 + 48);
      v80 = &v128[v79];
      v81 = &a2[v79];
      v82 = sub_1DC406040();
      v83 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v82 - 8) + 16);
      swift_bridgeObjectRetain();
      v83(v80, v81, v82);
      v84 = (int *)type metadata accessor for StockFeedMastheadViewLayoutAttributes();
      v85 = v84[5];
      v86 = &v80[v85];
      v87 = &v81[v85];
      v88 = *((_OWORD *)v87 + 1);
      *(_OWORD *)v86 = *(_OWORD *)v87;
      *((_OWORD *)v86 + 1) = v88;
      v89 = v84[6];
      v90 = &v80[v89];
      v91 = &v81[v89];
      v92 = *((_OWORD *)v91 + 1);
      *(_OWORD *)v90 = *(_OWORD *)v91;
      *((_OWORD *)v90 + 1) = v92;
      v93 = v84[7];
      v94 = &v80[v93];
      v95 = &v81[v93];
      v96 = *((_OWORD *)v95 + 1);
      *(_OWORD *)v94 = *(_OWORD *)v95;
      *((_OWORD *)v94 + 1) = v96;
      v97 = v84[8];
      v98 = &v80[v97];
      v99 = &v81[v97];
      v100 = *((_OWORD *)v99 + 1);
      *(_OWORD *)v98 = *(_OWORD *)v99;
      *((_OWORD *)v98 + 1) = v100;
      v101 = v84[9];
      v102 = &v80[v101];
      v103 = &v81[v101];
      v104 = *((_OWORD *)v103 + 1);
      *(_OWORD *)v102 = *(_OWORD *)v103;
      *((_OWORD *)v102 + 1) = v104;
      v105 = v84[10];
      v106 = &v80[v105];
      v107 = &v81[v105];
      v108 = *((_OWORD *)v107 + 1);
      *(_OWORD *)v106 = *(_OWORD *)v107;
      *((_OWORD *)v106 + 1) = v108;
      v109 = v84[11];
      v110 = &v80[v109];
      v111 = &v81[v109];
      v112 = *((_OWORD *)v111 + 1);
      *(_OWORD *)v110 = *(_OWORD *)v111;
      *((_OWORD *)v110 + 1) = v112;
      memcpy(&v80[v84[12]], &v81[v84[12]], 0x111uLL);
      v113 = v84[13];
      v114 = &v80[v113];
      v115 = &v81[v113];
      v116 = *((_OWORD *)v115 + 1);
      *(_OWORD *)v114 = *(_OWORD *)v115;
      *((_OWORD *)v114 + 1) = v116;
      v117 = v84[14];
      v118 = &v80[v117];
      v119 = &v81[v117];
      v120 = *((_OWORD *)v119 + 1);
      *(_OWORD *)v118 = *(_OWORD *)v119;
      *((_OWORD *)v118 + 1) = v120;
      v80[v84[15]] = v81[v84[15]];
      *(_QWORD *)&v80[v84[16]] = *(_QWORD *)&v81[v84[16]];
LABEL_22:
      swift_storeEnumTagMultiPayload();
      return v3;
    }
    memcpy(v3, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return v3;
}

uint64_t type metadata accessor for StockFeedLayoutSectionDescriptor(uint64_t a1)
{
  return sub_1DC08CD5C(a1, qword_1EDB3B318);
}

char *sub_1DC26F168(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  int *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  char *v33;
  char *v34;
  int *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  __int128 v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  int *v68;
  uint64_t v69;
  char *v70;
  char *v71;
  __int128 v72;
  uint64_t v73;
  char *v74;
  char *v75;
  __int128 v76;
  uint64_t v77;
  char *v78;
  char *v79;
  __int128 v80;
  uint64_t v81;
  char *v82;
  char *v83;
  __int128 v84;
  uint64_t v85;
  char *v86;
  char *v87;
  __int128 v88;
  uint64_t v89;
  char *v90;
  char *v91;
  __int128 v92;
  uint64_t v93;
  char *v94;
  char *v95;
  __int128 v96;
  uint64_t v97;
  char *v98;
  char *v99;
  __int128 v100;
  uint64_t v101;
  char *v102;
  char *v103;
  __int128 v104;
  void (*v106)(char *, char *, uint64_t);
  void (*v107)(char *, char *, uint64_t);
  char *v108;
  int *v109;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    sub_1DC142710(0);
    v16 = v15;
    v17 = *((_QWORD *)v15 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v17 + 48))(a2, 1, v15))
    {
      sub_1DC1427BC(0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      v25 = sub_1DC4073A8();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(a1, a2, v25);
      *(_QWORD *)&a1[v16[7]] = *(_QWORD *)&a2[v16[7]];
      *(_QWORD *)&a1[v16[8]] = *(_QWORD *)&a2[v16[8]];
      *(_QWORD *)&a1[v16[9]] = *(_QWORD *)&a2[v16[9]];
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v17 + 56))(a1, 0, 1, v16);
    }
    sub_1DC25CC9C();
    v27 = *(int *)(v26 + 48);
    v28 = &a1[v27];
    v29 = &a2[v27];
    v30 = *((_OWORD *)v29 + 3);
    *((_OWORD *)v28 + 2) = *((_OWORD *)v29 + 2);
    *((_OWORD *)v28 + 3) = v30;
    *((_OWORD *)v28 + 4) = *((_OWORD *)v29 + 4);
    *((_QWORD *)v28 + 10) = *((_QWORD *)v29 + 10);
    v31 = *((_OWORD *)v29 + 1);
    *(_OWORD *)v28 = *(_OWORD *)v29;
    *((_OWORD *)v28 + 1) = v31;
    goto LABEL_18;
  }
  if (!EnumCaseMultiPayload)
  {
    v7 = sub_1DC4010E4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    v8 = (int *)type metadata accessor for StockFeedMastheadModel();
    v9 = v8[5];
    v10 = &a1[v9];
    v11 = &a2[v9];
    v12 = sub_1DC401030();
    v13 = *(_QWORD *)(v12 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
    {
      sub_1DC089DA4(0, &qword_1EDB28DC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF040], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
    v19 = v8[6];
    v20 = &a1[v19];
    v21 = &a2[v19];
    v22 = sub_1DC400F7C();
    v23 = *(_QWORD *)(v22 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
    {
      sub_1DC089DA4(0, (unint64_t *)&unk_1EDB28D90, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAEFA8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v20, v21, v22);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
    }
    v109 = v8;
    v32 = v8[7];
    v108 = a1;
    v33 = &a1[v32];
    v34 = &a2[v32];
    *(_OWORD *)&a1[v32] = *(_OWORD *)&a2[v32];
    v35 = (int *)type metadata accessor for QuoteSummaryViewModel();
    v36 = v35[5];
    v37 = &v33[v36];
    v38 = &v34[v36];
    *(_QWORD *)v37 = *(_QWORD *)&v34[v36];
    v37[8] = v34[v36 + 8];
    *((_QWORD *)v37 + 2) = *(_QWORD *)&v34[v36 + 16];
    v37[24] = v34[v36 + 24];
    *((_QWORD *)v37 + 4) = *(_QWORD *)&v34[v36 + 32];
    v37[40] = v34[v36 + 40];
    v39 = *(_OWORD *)&v34[v36 + 64];
    *((_OWORD *)v37 + 3) = *(_OWORD *)&v34[v36 + 48];
    *((_OWORD *)v37 + 4) = v39;
    v37[80] = v34[v36 + 80];
    v40 = type metadata accessor for PriceViewModel();
    v41 = *(int *)(v40 + 40);
    v42 = &v37[v41];
    v43 = &v38[v41];
    v44 = sub_1DC4011C8();
    v107 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 32);
    v107(v42, v43, v44);
    v45 = *(int *)(v40 + 44);
    v46 = &v37[v45];
    v47 = &v38[v45];
    v48 = sub_1DC400118();
    v106 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 32);
    v106(v46, v47, v48);
    v49 = v35[6];
    v50 = &v33[v49];
    v51 = &v34[v49];
    v52 = *(_QWORD *)(v40 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v52 + 48))(&v34[v49], 1, v40))
    {
      sub_1DC089DA4(0, (unint64_t *)&qword_1EDB2D5E8, (uint64_t (*)(uint64_t))type metadata accessor for PriceViewModel, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
    }
    else
    {
      *(_QWORD *)v50 = *(_QWORD *)v51;
      v50[8] = v51[8];
      *((_QWORD *)v50 + 2) = *((_QWORD *)v51 + 2);
      v50[24] = v51[24];
      *((_QWORD *)v50 + 4) = *((_QWORD *)v51 + 4);
      v50[40] = v51[40];
      v54 = *((_OWORD *)v51 + 4);
      *((_OWORD *)v50 + 3) = *((_OWORD *)v51 + 3);
      *((_OWORD *)v50 + 4) = v54;
      v50[80] = v51[80];
      v107(&v50[*(int *)(v40 + 40)], &v51[*(int *)(v40 + 40)], v44);
      v106(&v50[*(int *)(v40 + 44)], &v51[*(int *)(v40 + 44)], v48);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v52 + 56))(v50, 0, 1, v40);
    }
    v55 = v35[7];
    v56 = &v33[v55];
    v57 = &v34[v55];
    v58 = sub_1DC4008EC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v58 - 8) + 32))(v56, v57, v58);
    v59 = v35[8];
    v60 = &v33[v59];
    v61 = &v34[v59];
    v62 = sub_1DC4002BC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v62 - 8) + 32))(v60, v61, v62);
    *(_OWORD *)&v33[v35[9]] = *(_OWORD *)&v34[v35[9]];
    a1 = v108;
    v108[v109[8]] = a2[v109[8]];
    sub_1DC142614();
    v64 = *(int *)(v63 + 48);
    v65 = &v108[v64];
    v66 = &a2[v64];
    v67 = sub_1DC406040();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v67 - 8) + 32))(v65, v66, v67);
    v68 = (int *)type metadata accessor for StockFeedMastheadViewLayoutAttributes();
    v69 = v68[5];
    v70 = &v65[v69];
    v71 = &v66[v69];
    v72 = *((_OWORD *)v71 + 1);
    *(_OWORD *)v70 = *(_OWORD *)v71;
    *((_OWORD *)v70 + 1) = v72;
    v73 = v68[6];
    v74 = &v65[v73];
    v75 = &v66[v73];
    v76 = *((_OWORD *)v75 + 1);
    *(_OWORD *)v74 = *(_OWORD *)v75;
    *((_OWORD *)v74 + 1) = v76;
    v77 = v68[7];
    v78 = &v65[v77];
    v79 = &v66[v77];
    v80 = *((_OWORD *)v79 + 1);
    *(_OWORD *)v78 = *(_OWORD *)v79;
    *((_OWORD *)v78 + 1) = v80;
    v81 = v68[8];
    v82 = &v65[v81];
    v83 = &v66[v81];
    v84 = *((_OWORD *)v83 + 1);
    *(_OWORD *)v82 = *(_OWORD *)v83;
    *((_OWORD *)v82 + 1) = v84;
    v85 = v68[9];
    v86 = &v65[v85];
    v87 = &v66[v85];
    v88 = *((_OWORD *)v87 + 1);
    *(_OWORD *)v86 = *(_OWORD *)v87;
    *((_OWORD *)v86 + 1) = v88;
    v89 = v68[10];
    v90 = &v65[v89];
    v91 = &v66[v89];
    v92 = *((_OWORD *)v91 + 1);
    *(_OWORD *)v90 = *(_OWORD *)v91;
    *((_OWORD *)v90 + 1) = v92;
    v93 = v68[11];
    v94 = &v65[v93];
    v95 = &v66[v93];
    v96 = *((_OWORD *)v95 + 1);
    *(_OWORD *)v94 = *(_OWORD *)v95;
    *((_OWORD *)v94 + 1) = v96;
    memcpy(&v65[v68[12]], &v66[v68[12]], 0x111uLL);
    v97 = v68[13];
    v98 = &v65[v97];
    v99 = &v66[v97];
    v100 = *((_OWORD *)v99 + 1);
    *(_OWORD *)v98 = *(_OWORD *)v99;
    *((_OWORD *)v98 + 1) = v100;
    v101 = v68[14];
    v102 = &v65[v101];
    v103 = &v66[v101];
    v104 = *((_OWORD *)v103 + 1);
    *(_OWORD *)v102 = *(_OWORD *)v103;
    *((_OWORD *)v102 + 1) = v104;
    v65[v68[15]] = v66[v68[15]];
    *(_QWORD *)&v65[v68[16]] = *(_QWORD *)&v66[v68[16]];
LABEL_18:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

char *sub_1DC26F7B0(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  int *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  char *v33;
  char *v34;
  int *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  __int128 v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  int *v68;
  uint64_t v69;
  char *v70;
  char *v71;
  __int128 v72;
  uint64_t v73;
  char *v74;
  char *v75;
  __int128 v76;
  uint64_t v77;
  char *v78;
  char *v79;
  __int128 v80;
  uint64_t v81;
  char *v82;
  char *v83;
  __int128 v84;
  uint64_t v85;
  char *v86;
  char *v87;
  __int128 v88;
  uint64_t v89;
  char *v90;
  char *v91;
  __int128 v92;
  uint64_t v93;
  char *v94;
  char *v95;
  __int128 v96;
  uint64_t v97;
  char *v98;
  char *v99;
  __int128 v100;
  uint64_t v101;
  char *v102;
  char *v103;
  __int128 v104;
  void (*v106)(char *, char *, uint64_t);
  void (*v107)(char *, char *);
  uint64_t v108;
  int *v109;

  if (a1 != a2)
  {
    sub_1DC0926D8((uint64_t)a1, type metadata accessor for StockFeedLayoutSectionDescriptor);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      sub_1DC142710(0);
      v16 = v15;
      v17 = *((_QWORD *)v15 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v17 + 48))(a2, 1, v15))
      {
        sub_1DC1427BC(0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
      }
      else
      {
        v25 = sub_1DC4073A8();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(a1, a2, v25);
        *(_QWORD *)&a1[v16[7]] = *(_QWORD *)&a2[v16[7]];
        *(_QWORD *)&a1[v16[8]] = *(_QWORD *)&a2[v16[8]];
        *(_QWORD *)&a1[v16[9]] = *(_QWORD *)&a2[v16[9]];
        (*(void (**)(char *, _QWORD, uint64_t, int *))(v17 + 56))(a1, 0, 1, v16);
      }
      sub_1DC25CC9C();
      v27 = *(int *)(v26 + 48);
      v28 = &a1[v27];
      v29 = &a2[v27];
      v30 = *((_OWORD *)v29 + 3);
      *((_OWORD *)v28 + 2) = *((_OWORD *)v29 + 2);
      *((_OWORD *)v28 + 3) = v30;
      *((_OWORD *)v28 + 4) = *((_OWORD *)v29 + 4);
      *((_QWORD *)v28 + 10) = *((_QWORD *)v29 + 10);
      v31 = *((_OWORD *)v29 + 1);
      *(_OWORD *)v28 = *(_OWORD *)v29;
      *((_OWORD *)v28 + 1) = v31;
      goto LABEL_19;
    }
    if (!EnumCaseMultiPayload)
    {
      v7 = sub_1DC4010E4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      v8 = (int *)type metadata accessor for StockFeedMastheadModel();
      v9 = v8[5];
      v10 = &a1[v9];
      v11 = &a2[v9];
      v12 = sub_1DC401030();
      v13 = *(_QWORD *)(v12 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
      {
        sub_1DC089DA4(0, &qword_1EDB28DC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF040], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      }
      v19 = v8[6];
      v20 = &a1[v19];
      v21 = &a2[v19];
      v22 = sub_1DC400F7C();
      v23 = *(_QWORD *)(v22 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
      {
        sub_1DC089DA4(0, (unint64_t *)&unk_1EDB28D90, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAEFA8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v20, v21, v22);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
      }
      v109 = v8;
      v32 = v8[7];
      v33 = &a1[v32];
      v34 = &a2[v32];
      *(_OWORD *)&a1[v32] = *(_OWORD *)&a2[v32];
      v35 = (int *)type metadata accessor for QuoteSummaryViewModel();
      v36 = v35[5];
      v37 = &v33[v36];
      v38 = &v34[v36];
      *(_QWORD *)v37 = *(_QWORD *)&v34[v36];
      v37[8] = v34[v36 + 8];
      *((_QWORD *)v37 + 2) = *(_QWORD *)&v34[v36 + 16];
      v37[24] = v34[v36 + 24];
      *((_QWORD *)v37 + 4) = *(_QWORD *)&v34[v36 + 32];
      v37[40] = v34[v36 + 40];
      v39 = *(_OWORD *)&v34[v36 + 64];
      *((_OWORD *)v37 + 3) = *(_OWORD *)&v34[v36 + 48];
      *((_OWORD *)v37 + 4) = v39;
      v37[80] = v34[v36 + 80];
      v40 = type metadata accessor for PriceViewModel();
      v41 = *(int *)(v40 + 40);
      v42 = &v37[v41];
      v43 = &v38[v41];
      v44 = sub_1DC4011C8();
      v107 = *(void (**)(char *, char *))(*(_QWORD *)(v44 - 8) + 32);
      v108 = v44;
      v107(v42, v43);
      v45 = *(int *)(v40 + 44);
      v46 = &v37[v45];
      v47 = &v38[v45];
      v48 = sub_1DC400118();
      v106 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 32);
      v106(v46, v47, v48);
      v49 = v35[6];
      v50 = &v33[v49];
      v51 = &v34[v49];
      v52 = *(_QWORD *)(v40 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v52 + 48))(&v34[v49], 1, v40))
      {
        sub_1DC089DA4(0, (unint64_t *)&qword_1EDB2D5E8, (uint64_t (*)(uint64_t))type metadata accessor for PriceViewModel, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
      }
      else
      {
        *(_QWORD *)v50 = *(_QWORD *)v51;
        v50[8] = v51[8];
        *((_QWORD *)v50 + 2) = *((_QWORD *)v51 + 2);
        v50[24] = v51[24];
        *((_QWORD *)v50 + 4) = *((_QWORD *)v51 + 4);
        v50[40] = v51[40];
        v54 = *((_OWORD *)v51 + 4);
        *((_OWORD *)v50 + 3) = *((_OWORD *)v51 + 3);
        *((_OWORD *)v50 + 4) = v54;
        v50[80] = v51[80];
        ((void (*)(char *, char *, uint64_t))v107)(&v50[*(int *)(v40 + 40)], &v51[*(int *)(v40 + 40)], v108);
        v106(&v50[*(int *)(v40 + 44)], &v51[*(int *)(v40 + 44)], v48);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v52 + 56))(v50, 0, 1, v40);
      }
      v55 = v35[7];
      v56 = &v33[v55];
      v57 = &v34[v55];
      v58 = sub_1DC4008EC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v58 - 8) + 32))(v56, v57, v58);
      v59 = v35[8];
      v60 = &v33[v59];
      v61 = &v34[v59];
      v62 = sub_1DC4002BC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v62 - 8) + 32))(v60, v61, v62);
      *(_OWORD *)&v33[v35[9]] = *(_OWORD *)&v34[v35[9]];
      a1[v109[8]] = a2[v109[8]];
      sub_1DC142614();
      v64 = *(int *)(v63 + 48);
      v65 = &a1[v64];
      v66 = &a2[v64];
      v67 = sub_1DC406040();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v67 - 8) + 32))(v65, v66, v67);
      v68 = (int *)type metadata accessor for StockFeedMastheadViewLayoutAttributes();
      v69 = v68[5];
      v70 = &v65[v69];
      v71 = &v66[v69];
      v72 = *((_OWORD *)v71 + 1);
      *(_OWORD *)v70 = *(_OWORD *)v71;
      *((_OWORD *)v70 + 1) = v72;
      v73 = v68[6];
      v74 = &v65[v73];
      v75 = &v66[v73];
      v76 = *((_OWORD *)v75 + 1);
      *(_OWORD *)v74 = *(_OWORD *)v75;
      *((_OWORD *)v74 + 1) = v76;
      v77 = v68[7];
      v78 = &v65[v77];
      v79 = &v66[v77];
      v80 = *((_OWORD *)v79 + 1);
      *(_OWORD *)v78 = *(_OWORD *)v79;
      *((_OWORD *)v78 + 1) = v80;
      v81 = v68[8];
      v82 = &v65[v81];
      v83 = &v66[v81];
      v84 = *((_OWORD *)v83 + 1);
      *(_OWORD *)v82 = *(_OWORD *)v83;
      *((_OWORD *)v82 + 1) = v84;
      v85 = v68[9];
      v86 = &v65[v85];
      v87 = &v66[v85];
      v88 = *((_OWORD *)v87 + 1);
      *(_OWORD *)v86 = *(_OWORD *)v87;
      *((_OWORD *)v86 + 1) = v88;
      v89 = v68[10];
      v90 = &v65[v89];
      v91 = &v66[v89];
      v92 = *((_OWORD *)v91 + 1);
      *(_OWORD *)v90 = *(_OWORD *)v91;
      *((_OWORD *)v90 + 1) = v92;
      v93 = v68[11];
      v94 = &v65[v93];
      v95 = &v66[v93];
      v96 = *((_OWORD *)v95 + 1);
      *(_OWORD *)v94 = *(_OWORD *)v95;
      *((_OWORD *)v94 + 1) = v96;
      memcpy(&v65[v68[12]], &v66[v68[12]], 0x111uLL);
      v97 = v68[13];
      v98 = &v65[v97];
      v99 = &v66[v97];
      v100 = *((_OWORD *)v99 + 1);
      *(_OWORD *)v98 = *(_OWORD *)v99;
      *((_OWORD *)v98 + 1) = v100;
      v101 = v68[14];
      v102 = &v65[v101];
      v103 = &v66[v101];
      v104 = *((_OWORD *)v103 + 1);
      *(_OWORD *)v102 = *(_OWORD *)v103;
      *((_OWORD *)v102 + 1) = v104;
      v65[v68[15]] = v66[v68[15]];
      *(_QWORD *)&v65[v68[16]] = *(_QWORD *)&v66[v68[16]];
LABEL_19:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t sub_1DC26FE08()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v7;
  char v8;
  char *v9;
  uint64_t *v10;

  v0 = type metadata accessor for StockFeedMastheadModel();
  if (v1 <= 0x3F)
  {
    v2 = type metadata accessor for StockFeedMastheadViewLayoutAttributes();
    if (v3 > 0x3F)
    {
      return v2;
    }
    else
    {
      swift_getTupleTypeLayout2();
      v9 = &v8;
      sub_1DC1427BC(319);
      v0 = v4;
      if (v5 <= 0x3F)
      {
        swift_getTupleTypeLayout2();
        v10 = &v7;
        swift_initEnumMetadataMultiPayload();
        return 0;
      }
    }
  }
  return v0;
}

void destroy for StockFeedLayoutSectionDescriptor.Branding(uint64_t a1)
{
  if (*(_QWORD *)(a1 + 8) >= 0xFFFFFFFFuLL)
  {
    swift_bridgeObjectRelease();

  }
}

uint64_t initializeWithCopy for StockFeedLayoutSectionDescriptor.Branding(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  void *v4;
  id v5;
  __int128 v6;
  __int128 v7;

  v3 = *(_QWORD *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    v6 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v6;
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    v7 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v3;
    v4 = *(void **)(a2 + 16);
    *(_QWORD *)(a1 + 16) = v4;
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    swift_bridgeObjectRetain();
    v5 = v4;
  }
  return a1;
}

uint64_t assignWithCopy for StockFeedLayoutSectionDescriptor.Branding(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  void *v5;
  void *v6;
  id v7;
  void *v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  id v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;

  v4 = *(_QWORD *)(a2 + 8);
  if (*(_QWORD *)(a1 + 8) < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
      v8 = *(void **)(a2 + 16);
      *(_QWORD *)(a1 + 16) = v8;
      v9 = *(_OWORD *)(a2 + 24);
      v10 = *(_OWORD *)(a2 + 40);
      v11 = *(_OWORD *)(a2 + 56);
      *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
      *(_OWORD *)(a1 + 56) = v11;
      *(_OWORD *)(a1 + 40) = v10;
      *(_OWORD *)(a1 + 24) = v9;
      swift_bridgeObjectRetain();
      v12 = v8;
      return a1;
    }
LABEL_7:
    v13 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v13;
    v14 = *(_OWORD *)(a2 + 32);
    v15 = *(_OWORD *)(a2 + 48);
    v16 = *(_OWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 48) = v15;
    *(_OWORD *)(a1 + 64) = v16;
    *(_OWORD *)(a1 + 32) = v14;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();

    goto LABEL_7;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5 = *(void **)(a1 + 16);
  v6 = *(void **)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v6;
  v7 = v6;

  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  return a1;
}

uint64_t assignWithTake for StockFeedLayoutSectionDescriptor.Branding(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  void *v5;
  __int128 v6;
  __int128 v7;

  if (*(_QWORD *)(a1 + 8) < 0xFFFFFFFFuLL)
    goto LABEL_5;
  v4 = *(_QWORD *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();

LABEL_5:
    v6 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v6;
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    v7 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
    return a1;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);

  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  return a1;
}

uint64_t getEnumTagSinglePayload for StockFeedLayoutSectionDescriptor.Branding(uint64_t a1, unsigned int a2)
{
  unint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 88))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) >= 2)
    return v3;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for StockFeedLayoutSectionDescriptor.Branding(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 80) = 0;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)(result + 64) = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)result = 0u;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 88) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 88) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

double sub_1DC270248(uint64_t a1, int a2)
{
  double result;

  if (a2 < 0)
  {
    result = 0.0;
    *(_OWORD *)(a1 + 72) = 0u;
    *(_OWORD *)(a1 + 56) = 0u;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_QWORD *)a1 = a2 ^ 0x80000000;
  }
  else if (a2)
  {
    *(_QWORD *)(a1 + 8) = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for StockFeedLayoutSectionDescriptor.Branding()
{
  return &type metadata for StockFeedLayoutSectionDescriptor.Branding;
}

uint64_t *sub_1DC270290(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v12;
  _QWORD *v13;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0
    || ((((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    v9 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    v10 = (_QWORD *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFF8);
    v11 = (_QWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFF8);
    *v10 = *v11;
    v12 = (_QWORD *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFF8);
    v13 = (_QWORD *)(((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFF8);
    *v12 = *v13;
    *(_QWORD *)(((unint64_t)v12 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v13 + 15) & 0xFFFFFFFFFFFFF8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1DC270384(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DC2703DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v9 = (_QWORD *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFF8);
  v10 = (_QWORD *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v9 = *v10;
  *(_QWORD *)(((unint64_t)v9 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1DC27046C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD *v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = v6 + a2;
  v9 = (v8 & 0xFFFFFFFFFFFFFFF8) + 15;
  *v7 = *(_QWORD *)(v8 & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = (_QWORD *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8);
  v9 &= 0xFFFFFFFFFFFFF8uLL;
  *v10 = *(_QWORD *)v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)((v9 + 15) & 0xFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1DC270518(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v9 = (_QWORD *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFF8);
  v10 = (_QWORD *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v9 = *v10;
  *(_QWORD *)(((unint64_t)v9 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1DC270594(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  swift_bridgeObjectRelease();
  v9 = (_QWORD *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8);
  v10 = (_QWORD *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFF8);
  *v9 = *v10;
  swift_bridgeObjectRelease();
  *(_QWORD *)(((unint64_t)v9 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFF8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1DC270628(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  unint64_t v12;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(_QWORD *)(v4 + 64);
  if (v6 >= a2)
  {
    if (v5 < 0x7FFFFFFF)
    {
      v12 = *(_QWORD *)((a1 + v7 + 7) & 0xFFFFFFFFFFFFF8);
      if (v12 >= 0xFFFFFFFF)
        LODWORD(v12) = -1;
      return (v12 + 1);
    }
    else
    {
      return (*(uint64_t (**)(void))(v4 + 48))();
    }
  }
  else
  {
    if (((((((((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8) & 0xFFFFFFF8) != 0)
      v8 = 2;
    else
      v8 = a2 - v6 + 1;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    return ((uint64_t (*)(void))((char *)&loc_1DC2706B4 + 4 * byte_1DC41EC80[v10]))();
  }
}

void sub_1DC270738(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  int v9;
  unsigned int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  if (v6 >= a3)
  {
    v9 = 0u;
    if (a2 <= v6)
      goto LABEL_17;
  }
  else
  {
    if (((((((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) == 0xFFFFFFF8)
      v7 = a3 - v6 + 1;
    else
      v7 = 2;
    if (v7 >= 0x10000)
      v8 = 4;
    else
      v8 = 2;
    if (v7 < 0x100)
      v8 = 1;
    if (v7 >= 2)
      v9 = v8;
    else
      v9 = 0;
    if (a2 <= v6)
LABEL_17:
      __asm { BR              X12 }
  }
  if (((((((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) != 0xFFFFFFF8)
  {
    v10 = ~v6 + a2;
    bzero(a1, ((((((*(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)+ 8);
    *a1 = v10;
  }
  __asm { BR              X10 }
}

void sub_1DC27083C()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x1DC2708B0);
}

void sub_1DC270844(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x1DC27084CLL);
  JUMPOUT(0x1DC2708B0);
}

void sub_1DC27088C()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x1DC2708B0);
}

void sub_1DC270894()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x1DC2708B0);
}

uint64_t sub_1DC27089C(uint64_t a1, int a2, unsigned int a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_WORD *)(v5 + v6) = 0;
  if (!a2)
    JUMPOUT(0x1DC2708B0);
  if (a3 < 0x7FFFFFFF)
  {
    if ((a2 & 0x80000000) == 0)
      JUMPOUT(0x1DC2708ACLL);
    JUMPOUT(0x1DC2708A8);
  }
  return (*(uint64_t (**)(uint64_t))(v4 + 56))(v5);
}

uint64_t sub_1DC2708C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t (*v7)(_QWORD);
  int EnumCaseMultiPayload;
  uint64_t v9;
  uint64_t v10;
  uint64_t *boxed_opaque_existential_1;
  uint64_t (*v12)(_QWORD);
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;

  v1 = type metadata accessor for StockFeedMastheadViewLayoutAttributes();
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v27 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for StockFeedLayoutSectionDescriptor(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0990BC(v0, (uint64_t)v6, v7);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v9 = 0;
  if ((EnumCaseMultiPayload - 2) >= 6)
  {
    if (EnumCaseMultiPayload)
    {
      sub_1DC25CC9C();
      v14 = (uint64_t *)&v6[*(int *)(v13 + 48)];
      v15 = v14[1];
      if (v15)
      {
        v17 = v14[9];
        v16 = v14[10];
        v18 = v14[7];
        v19 = v14[8];
        v21 = v14[5];
        v20 = v14[6];
        v23 = v14[3];
        v22 = v14[4];
        v30 = (void *)v14[2];
        v24 = *v14;
        v28 = v18;
        v29 = v24;
        sub_1DC089DA4(0, (unint64_t *)&qword_1EDB3FF78, (uint64_t (*)(uint64_t))sub_1DC12F5A8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
        v9 = swift_allocObject();
        *(_OWORD *)(v9 + 16) = xmmword_1DC40DC10;
        *(_QWORD *)(v9 + 56) = &type metadata for BrandingTitleViewLayoutAttributes;
        *(_QWORD *)(v9 + 64) = sub_1DC271088();
        v25 = (_QWORD *)swift_allocObject();
        *(_QWORD *)(v9 + 32) = v25;
        v25[2] = v23;
        v25[3] = v22;
        v25[4] = v21;
        v25[5] = v20;
        v25[6] = v28;
        v25[7] = v19;
        v25[8] = v17;
        v25[9] = v16;
        sub_1DC1425A4(v29, v15, v30);
      }
      else
      {
        v9 = 0;
      }
      v12 = (uint64_t (*)(_QWORD))sub_1DC1427BC;
    }
    else
    {
      sub_1DC142614();
      sub_1DC092ED0((uint64_t)&v6[*(int *)(v10 + 48)], (uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedMastheadViewLayoutAttributes);
      sub_1DC089DA4(0, (unint64_t *)&qword_1EDB3FF78, (uint64_t (*)(uint64_t))sub_1DC12F5A8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v9 = swift_allocObject();
      *(_OWORD *)(v9 + 16) = xmmword_1DC40DC10;
      *(_QWORD *)(v9 + 56) = v1;
      *(_QWORD *)(v9 + 64) = sub_1DC080808(&qword_1EDB3D7A8, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedMastheadViewLayoutAttributes, (uint64_t)&unk_1DC427CF8);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v9 + 32));
      sub_1DC092ED0((uint64_t)v3, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedMastheadViewLayoutAttributes);
      v12 = (uint64_t (*)(_QWORD))type metadata accessor for StockFeedMastheadModel;
    }
    sub_1DC0926D8((uint64_t)v6, v12);
  }
  return v9;
}

uint64_t sub_1DC270B54()
{
  sub_1DC080808(&qword_1F03501F8, type metadata accessor for StockFeedLayoutSectionDescriptor, (uint64_t)&unk_1DC41ED78);
  return sub_1DC40673C();
}

uint64_t sub_1DC270B94()
{
  sub_1DC080808(&qword_1EDB3B310, type metadata accessor for StockFeedLayoutSectionDescriptor, (uint64_t)&unk_1DC41ED28);
  return sub_1DC40625C();
}

uint64_t sub_1DC270BD4()
{
  return sub_1DC080808(&qword_1EDB3B308, type metadata accessor for StockFeedLayoutSectionDescriptor, (uint64_t)&unk_1DC41ECF0);
}

uint64_t sub_1DC270C00()
{
  return sub_1DC080808(&qword_1EDB3B310, type metadata accessor for StockFeedLayoutSectionDescriptor, (uint64_t)&unk_1DC41ED28);
}

uint64_t sub_1DC270C2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t (*v15)(_QWORD);
  int EnumCaseMultiPayload;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(_QWORD);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;

  sub_1DC142710(0);
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC1427BC(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v24 - v10;
  v12 = type metadata accessor for StockFeedLayoutSectionDescriptor(0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0990BC(v0, (uint64_t)v14, v15);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v17 = 0;
  if ((EnumCaseMultiPayload - 2) >= 6)
  {
    if (EnumCaseMultiPayload)
    {
      sub_1DC25CC9C();
      sub_1DC1425A4(*(_QWORD *)&v14[*(int *)(v21 + 48)], *(_QWORD *)&v14[*(int *)(v21 + 48) + 8], *(void **)&v14[*(int *)(v21 + 48) + 16]);
      sub_1DC092ED0((uint64_t)v14, (uint64_t)v11, (uint64_t (*)(_QWORD))sub_1DC1427BC);
      sub_1DC0990BC((uint64_t)v11, (uint64_t)v8, (uint64_t (*)(_QWORD))sub_1DC1427BC);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) != 1)
      {
        sub_1DC092ED0((uint64_t)v8, (uint64_t)v5, (uint64_t (*)(_QWORD))sub_1DC142710);
        v22 = swift_bridgeObjectRetain();
        v17 = sub_1DC270E80(v22);
        swift_bridgeObjectRelease();
        sub_1DC0926D8((uint64_t)v5, (uint64_t (*)(_QWORD))sub_1DC142710);
        sub_1DC0926D8((uint64_t)v11, (uint64_t (*)(_QWORD))sub_1DC1427BC);
        return v17;
      }
      sub_1DC0926D8((uint64_t)v11, (uint64_t (*)(_QWORD))sub_1DC1427BC);
      v20 = (uint64_t)v8;
      v19 = (uint64_t (*)(_QWORD))sub_1DC1427BC;
    }
    else
    {
      sub_1DC142614();
      sub_1DC0926D8((uint64_t)&v14[*(int *)(v18 + 48)], (uint64_t (*)(_QWORD))type metadata accessor for StockFeedMastheadViewLayoutAttributes);
      v19 = (uint64_t (*)(_QWORD))type metadata accessor for StockFeedMastheadModel;
      v20 = (uint64_t)v14;
    }
    sub_1DC0926D8(v20, v19);
    return 0;
  }
  return v17;
}

uint64_t sub_1DC270E80(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;

  v2 = sub_1DC407690();
  v20 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for StockFeedLayoutSectionDescriptor.Decoration(0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v19 - v10;
  v12 = *(_QWORD *)(a1 + 16);
  v13 = MEMORY[0x1E0DEE9D8];
  if (v12)
  {
    v22 = MEMORY[0x1E0DEE9D8];
    sub_1DC2AD76C(0, v12, 0);
    v14 = a1 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    v19 = *(_QWORD *)(v6 + 72);
    do
    {
      sub_1DC0990BC(v14, (uint64_t)v11, type metadata accessor for StockFeedLayoutSectionDescriptor.Decoration);
      sub_1DC0990BC((uint64_t)v11, (uint64_t)v8, type metadata accessor for StockFeedLayoutSectionDescriptor.Decoration);
      v15 = v20;
      (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v4, v8, v2);
      sub_1DC407678();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v4, v2);
      sub_1DC0926D8((uint64_t)v11, type metadata accessor for StockFeedLayoutSectionDescriptor.Decoration);
      v13 = v22;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1DC2AD76C(0, *(_QWORD *)(v13 + 16) + 1, 1);
        v13 = v22;
      }
      v17 = *(_QWORD *)(v13 + 16);
      v16 = *(_QWORD *)(v13 + 24);
      if (v17 >= v16 >> 1)
      {
        sub_1DC2AD76C(v16 > 1, v17 + 1, 1);
        v13 = v22;
      }
      *(_QWORD *)(v13 + 16) = v17 + 1;
      sub_1DC097DD0(&v21, v13 + 40 * v17 + 32);
      v14 += v19;
      --v12;
    }
    while (v12);
  }
  return v13;
}

unint64_t sub_1DC271088()
{
  unint64_t result;

  result = qword_1EDB3B5C8;
  if (!qword_1EDB3B5C8)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC4257EC, &type metadata for BrandingTitleViewLayoutAttributes);
    atomic_store(result, (unint64_t *)&qword_1EDB3B5C8);
  }
  return result;
}

uint64_t sub_1DC2710CC()
{
  return swift_deallocObject();
}

uint64_t type metadata accessor for StockFeedLayoutSectionDescriptor.Decoration(uint64_t a1)
{
  return sub_1DC08CD5C(a1, qword_1EDB3B100);
}

uint64_t *sub_1DC2710F0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_1DC2711C4(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x1E0D5B188]);
}

uint64_t sub_1DC2710FC(uint64_t a1, uint64_t a2)
{
  return sub_1DC271234(a1, a2, (uint64_t (*)(_QWORD))MEMORY[0x1E0D5B188]);
}

uint64_t sub_1DC271108(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DC271268(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x1E0D5B188]);
}

uint64_t sub_1DC271114(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DC2712AC(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x1E0D5B188]);
}

uint64_t sub_1DC271120(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DC2712F0(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x1E0D5B188]);
}

uint64_t sub_1DC27112C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DC271334(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x1E0D5B188]);
}

uint64_t sub_1DC271138(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DC271378(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x1E0D5B188]);
}

uint64_t sub_1DC271144(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1DC2713B4(a1, a2, a3, a4, (uint64_t (*)(_QWORD))MEMORY[0x1E0D5B188]);
}

uint64_t *sub_1DC271150(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_1DC2711C4(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x1E0D5C5C0]);
}

uint64_t sub_1DC27115C(uint64_t a1, uint64_t a2)
{
  return sub_1DC271234(a1, a2, (uint64_t (*)(_QWORD))MEMORY[0x1E0D5C5C0]);
}

uint64_t sub_1DC271168(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DC271268(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x1E0D5C5C0]);
}

uint64_t sub_1DC271174(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DC2712AC(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x1E0D5C5C0]);
}

uint64_t sub_1DC271180(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DC2712F0(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x1E0D5C5C0]);
}

uint64_t sub_1DC27118C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DC271334(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x1E0D5C5C0]);
}

uint64_t sub_1DC271198(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DC271378(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x1E0D5C5C0]);
}

uint64_t sub_1DC2711A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1DC2713B4(a1, a2, a3, a4, (uint64_t (*)(_QWORD))MEMORY[0x1E0D5C5C0]);
}

uint64_t type metadata accessor for StockFeedLayoutSectionDescriptor.Footer(uint64_t a1)
{
  return sub_1DC08CD5C(a1, qword_1EDB3B218);
}

uint64_t *sub_1DC2711C4(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  int v6;
  uint64_t v7;
  uint64_t v8;

  v6 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v6 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v7 = a4(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
  }
  return a1;
}

uint64_t sub_1DC271234(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v4;

  v4 = a3(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
}

uint64_t sub_1DC271268(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v6;

  v6 = a4(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  return a1;
}

uint64_t sub_1DC2712AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v6;

  v6 = a4(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  return a1;
}

uint64_t sub_1DC2712F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v6;

  v6 = a4(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  return a1;
}

uint64_t sub_1DC271334(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v6;

  v6 = a4(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  return a1;
}

uint64_t sub_1DC271378(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v6;

  v6 = a4(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(a1, a2, v6);
}

uint64_t sub_1DC2713B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v8;

  v8 = a5(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(a1, a2, a3, v8);
}

uint64_t type metadata accessor for StockFeedLayoutSectionDescriptor.Header(uint64_t a1)
{
  return sub_1DC08CD5C(a1, qword_1EDB281E0);
}

uint64_t *sub_1DC271414()
{
  uint64_t *v0;
  uint64_t v1;
  id v2;

  v1 = *v0;
  v2 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  objc_msgSend(v2, sel_removeObserver_name_object_, v0, *MEMORY[0x1E0DC46F0], 0);

  sub_1DC148A20((uint64_t)(v0 + 2));
  swift_release();
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v1 + 80) - 8) + 8))((uint64_t)v0 + *(_QWORD *)(*v0 + 112));
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1DC2714E0()
{
  sub_1DC271414();
  return swift_deallocClassInstance();
}

uint64_t sub_1DC271504(uint64_t a1)
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1DC271560(a1);
    return swift_release();
  }
  return result;
}

uint64_t sub_1DC271560(uint64_t a1)
{
  uint64_t v1;

  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(*(_QWORD *)v1 + 88) + 56))(a1, *(_QWORD *)(*(_QWORD *)v1 + 80));
  sub_1DC131F68();
  sub_1DC080808(&qword_1EDB29DE0, (uint64_t (*)(uint64_t))sub_1DC131F68, MEMORY[0x1E0DB8030]);
  sub_1DC4049E4();
  return swift_release();
}

uint64_t sub_1DC2715F8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;

  v2 = sub_1DC4044BC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC12D68C();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1DC271D30(a1, (uint64_t)v8);
    v10 = sub_1DC407EAC();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v8, 1, v10) == 1)
    {
      sub_1DC271CF4((uint64_t)v8);
      sub_1DC4049CC();
      sub_1DC404A14();
      swift_release();
      if ((*(unsigned int (**)(char *, uint64_t))(v3 + 88))(v5, v2) == *MEMORY[0x1E0DB7378])
      {
        (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
        sub_1DC0A1DC8();
        return swift_release();
      }
      else
      {
        swift_release();
        return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      }
    }
    else
    {
      swift_release();
      return sub_1DC271CF4((uint64_t)v8);
    }
  }
  return result;
}

uint64_t sub_1DC271794()
{
  uint64_t v0;

  (*(void (**)(_QWORD))(*(_QWORD *)(*(_QWORD *)v0 + 88) + 48))(*(_QWORD *)(*(_QWORD *)v0 + 80));
  sub_1DC131F68();
  sub_1DC080808(&qword_1EDB29DE0, (uint64_t (*)(uint64_t))sub_1DC131F68, MEMORY[0x1E0DB8030]);
  sub_1DC4049E4();
  return swift_release();
}

uint64_t sub_1DC271830()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v5;

  v0 = sub_1DC3FFADC();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC3FFAD0();
  swift_retain();
  sub_1DC27182C();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_1DC2718D0(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(*(_QWORD *)a1 + 88) + 64))(a2, *(_QWORD *)(*(_QWORD *)a1 + 80));
  sub_1DC131F68();
  sub_1DC080808(&qword_1EDB29DE0, (uint64_t (*)(uint64_t))sub_1DC131F68, MEMORY[0x1E0DB8030]);
  sub_1DC4049E4();
  return swift_release();
}

uint64_t sub_1DC271970(uint64_t a1)
{
  (*(void (**)(_QWORD))(*(_QWORD *)(*(_QWORD *)a1 + 88) + 72))(*(_QWORD *)(*(_QWORD *)a1 + 80));
  sub_1DC131F68();
  sub_1DC080808(&qword_1EDB29DE0, (uint64_t (*)(uint64_t))sub_1DC131F68, MEMORY[0x1E0DB8030]);
  sub_1DC4049E4();
  return swift_release();
}

uint64_t sub_1DC271A08(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v3 = *(_QWORD *)(*(_QWORD *)a1 + 80);
  v2 = *(_QWORD *)(*(_QWORD *)a1 + 88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 80))(a2, v3, v2);
  v4 = swift_allocObject();
  swift_weakInit();
  v5 = (_QWORD *)swift_allocObject();
  v5[2] = v3;
  v5[3] = v2;
  v5[4] = v4;
  sub_1DC131F68();
  sub_1DC080808(&qword_1EDB29DE0, (uint64_t (*)(uint64_t))sub_1DC131F68, MEMORY[0x1E0DB8030]);
  swift_retain();
  sub_1DC4049E4();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1DC271B18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t result;
  char v11;
  uint64_t v12;

  v6 = sub_1DC405578();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E0DB9A50], v6);
    v11 = sub_1DC40556C();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    if ((v11 & 1) != 0)
    {
      v12 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 72))(a3, a4);
      sub_1DC131F68();
      sub_1DC080808(&qword_1EDB29DE0, (uint64_t (*)(uint64_t))sub_1DC131F68, MEMORY[0x1E0DB8030]);
      sub_1DC4049E4();
      swift_release();
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_1DC271C78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DC271DA0(a3);
}

uint64_t sub_1DC271C84()
{
  return sub_1DC271D74();
}

uint64_t sub_1DC271C8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DC271E90(a3);
}

uint64_t sub_1DC271C94()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1DC271CB8(uint64_t a1)
{
  return sub_1DC271504(a1);
}

uint64_t sub_1DC271CC4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DC271CE8(uint64_t a1)
{
  return sub_1DC2715F8(a1);
}

uint64_t sub_1DC271CF4(uint64_t a1)
{
  uint64_t v2;

  sub_1DC12D68C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DC271D30(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1DC12D68C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC271D74()
{
  swift_retain();
  sub_1DC402E3C();
  return swift_release();
}

uint64_t sub_1DC271DA0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  unint64_t v8;
  char *v9;
  uint64_t v11;

  v3 = *v1;
  v4 = sub_1DC4004C0();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = MEMORY[0x1E0C80A78](v4);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v5 + 16))((char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4, v7);
  v8 = (*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v9 = (char *)swift_allocObject();
  *((_QWORD *)v9 + 2) = *(_QWORD *)(v3 + 80);
  *((_QWORD *)v9 + 3) = *(_QWORD *)(v3 + 88);
  *((_QWORD *)v9 + 4) = v1;
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(&v9[v8], (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  swift_retain();
  sub_1DC402E3C();
  return swift_release();
}

uint64_t sub_1DC271E90(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  unint64_t v8;
  char *v9;
  uint64_t v11;

  v3 = *v1;
  v4 = sub_1DC400514();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = MEMORY[0x1E0C80A78](v4);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v5 + 16))((char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4, v7);
  v8 = (*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v9 = (char *)swift_allocObject();
  *((_QWORD *)v9 + 2) = *(_QWORD *)(v3 + 80);
  *((_QWORD *)v9 + 3) = *(_QWORD *)(v3 + 88);
  *((_QWORD *)v9 + 4) = v1;
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(&v9[v8], (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  swift_retain();
  sub_1DC402E3C();
  return swift_release();
}

uint64_t sub_1DC271F80()
{
  return objectdestroy_13Tm((uint64_t (*)(_QWORD))MEMORY[0x1E0DAE458]);
}

uint64_t sub_1DC271F8C()
{
  return sub_1DC27204C((uint64_t (*)(_QWORD))MEMORY[0x1E0DAE458], sub_1DC271A08);
}

uint64_t sub_1DC271FA0(uint64_t a1)
{
  uint64_t *v1;

  return sub_1DC271B18(a1, v1[4], v1[2], v1[3]);
}

uint64_t sub_1DC271FAC()
{
  uint64_t v0;

  return sub_1DC271970(v0);
}

uint64_t sub_1DC271FB4()
{
  return objectdestroy_13Tm((uint64_t (*)(_QWORD))MEMORY[0x1E0DAE3E0]);
}

uint64_t objectdestroy_13Tm(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  v2 = a1(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v1 + v4, v2);
  return swift_deallocObject();
}

uint64_t sub_1DC272038()
{
  return sub_1DC27204C((uint64_t (*)(_QWORD))MEMORY[0x1E0DAE3E0], sub_1DC2718D0);
}

uint64_t sub_1DC27204C(uint64_t (*a1)(_QWORD), uint64_t (*a2)(_QWORD, uint64_t))
{
  uint64_t v2;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(a1(0) - 8) + 80);
  return a2(*(_QWORD *)(v2 + 32), v2 + ((v3 + 40) & ~v3));
}

uint64_t sub_1DC27209C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  unint64_t v13;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;

  v16 = a1;
  sub_1DC08CC60(0, (unint64_t *)&qword_1EDB29B50, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6C48]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v15 - v5;
  v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
  sub_1DC089DA4(0, (unint64_t *)&qword_1EDB3FE80, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB3FF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  sub_1DC402A40();
  v8 = swift_allocObject();
  v15 = xmmword_1DC40DC10;
  *(_OWORD *)(v8 + 16) = xmmword_1DC40DC10;
  sub_1DC089DA4(0, &qword_1EDB3FE70, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB3FB0], v7);
  v9 = *(_QWORD *)(sub_1DC402A10() - 8);
  v10 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = v15;
  v12 = (_QWORD *)(v11 + v10);
  *v12 = 0x7972657571;
  v12[1] = 0xE500000000000000;
  (*(void (**)(void))(v9 + 104))();
  v13 = sub_1DC27359C(MEMORY[0x1E0DEE9D8]);
  MEMORY[0x1DF0C329C](0x736B636F7473, 0xE600000000000000, 0, 0, 0x536C6F626D79732FLL, 0xED00006863726165, 0, 0, v11, v13);
  *(_QWORD *)(v1 + 16) = v8;
  v17 = v16;
  type metadata accessor for StocksActivity(0);
  sub_1DC08CC60(0, (unint64_t *)&qword_1EDB29CB0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB75B0]);
  sub_1DC2736B0();
  sub_1DC40424C();
  (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(v1 + OBJC_IVAR____TtC8StocksUI22StocksSearchURLHandler_navigator, v6, v3);
  return v1;
}

uint64_t sub_1DC2722E8(_QWORD *a1)
{
  uint64_t result;
  uint64_t v3;
  __int128 v4;
  uint64_t v5;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC08CC60(0, (unint64_t *)&qword_1EDB29CB0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB75B0]);
  result = sub_1DC4025FC();
  if (result)
  {
    v3 = result;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1DC096268(0, (unint64_t *)&unk_1EDB28CA0);
    result = sub_1DC402608();
    if (v5)
    {
      type metadata accessor for StocksV1SymbolURLHandler();
      swift_allocObject();
      return sub_1DC272BA4(v3, &v4);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1DC2723D4(_QWORD *a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE v6[24];
  uint64_t v7;
  _QWORD v8[5];

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC08CC60(0, (unint64_t *)&qword_1EDB29CB0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB75B0]);
  result = sub_1DC4025FC();
  if (!result)
  {
    __break(1u);
    goto LABEL_7;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB2B0F0);
  result = sub_1DC402608();
  if (!v8[3])
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB29DD0);
  result = sub_1DC402608();
  if (!v7)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4018AC();
  result = sub_1DC4025FC();
  if (result)
  {
    v3 = result;
    type metadata accessor for StocksArticleURLHandler();
    v4 = swift_allocObject();
    type metadata accessor for StocksActivity(0);
    sub_1DC2736B0();
    swift_retain();
    sub_1DC40424C();
    sub_1DC0824D4((uint64_t)v8, v4 + OBJC_IVAR____TtC8StocksUI23StocksArticleURLHandler_featureAvailability);
    sub_1DC0824D4((uint64_t)v6, v4 + OBJC_IVAR____TtC8StocksUI23StocksArticleURLHandler_appURLHandler);
    v5 = sub_1DC3E1848(v8);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
    swift_release();
    *(_QWORD *)(v4 + 16) = v5;
    *(_QWORD *)(v4 + OBJC_IVAR____TtC8StocksUI23StocksArticleURLHandler_tracker) = v3;
    return v4;
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_1DC2725EC(_QWORD *a1)
{
  uint64_t result;
  uint64_t v2;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC08CC60(0, (unint64_t *)&qword_1EDB29CB0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB75B0]);
  result = sub_1DC4025FC();
  if (result)
  {
    v2 = result;
    type metadata accessor for StocksSearchURLHandler();
    swift_allocObject();
    return sub_1DC27209C(v2);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC272670(_QWORD *a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  v2 = sub_1DC4029F8();
  MEMORY[0x1E0C80A78](v2);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB29340);
  result = sub_1DC402608();
  if (v5)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1DC096268(0, &qword_1EDB29270);
    result = sub_1DC402608();
    if (v4)
    {
      sub_1DC4029EC();
      sub_1DC401DE0();
      swift_allocObject();
      return sub_1DC401DD4();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1DC2727B4(uint64_t a1, _QWORD *a2)
{
  uint64_t result;

  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for StocksSearchURLHandler();
  result = sub_1DC4025FC();
  if (!result)
  {
    __break(1u);
    goto LABEL_8;
  }
  sub_1DC080808(&qword_1EDB2B948, (uint64_t (*)(uint64_t))type metadata accessor for StocksSearchURLHandler, (uint64_t)&unk_1DC41D908);
  sub_1DC4029A4();
  swift_release();
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for StocksV1SymbolURLHandler();
  result = sub_1DC4025FC();
  if (!result)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  sub_1DC080808(&qword_1EDB2BCA8, (uint64_t (*)(uint64_t))type metadata accessor for StocksV1SymbolURLHandler, (uint64_t)&unk_1DC42FD38);
  sub_1DC4029A4();
  swift_release();
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for StocksArticleURLHandler();
  result = sub_1DC4025FC();
  if (!result)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  sub_1DC080808(&qword_1EDB2BA30, (uint64_t (*)(uint64_t))type metadata accessor for StocksArticleURLHandler, (uint64_t)&unk_1DC431880);
  sub_1DC4029A4();
  swift_release();
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1DC401DE0();
  result = sub_1DC4025FC();
  if (!result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  sub_1DC080808((unint64_t *)&unk_1EDB29278, (uint64_t (*)(uint64_t))MEMORY[0x1E0D57438], MEMORY[0x1E0D57428]);
  sub_1DC402998();
  swift_release();
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1DC403D9C();
  result = sub_1DC4025FC();
  if (result)
  {
    sub_1DC080808(&qword_1EDB299E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D61DC0], MEMORY[0x1E0D61DB0]);
    sub_1DC4029B0();
    return swift_release();
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1DC272A44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v5;

  v0 = sub_1DC402C50();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC403D9C();
  sub_1DC402B30();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB4A00], v0);
  sub_1DC4024A0();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_1DC272B0C(_QWORD *a1)
{
  uint64_t result;
  uint64_t v2;
  uint64_t v3;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB29A00);
  result = sub_1DC402608();
  if (v3)
  {
    swift_getObjectType();
    v2 = sub_1DC403E08();
    swift_unknownObjectRelease();
    return v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC272BA4(uint64_t a1, __int128 *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  void (*v19)(void);
  unint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  void (*v41)(void);
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  void (*v52)(void);
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  void (*v60)(void);
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  void (*v69)(void);
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  char *v76;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  __int128 *v86;
  int v87;
  uint64_t v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unsigned int v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  void (*v97)(void);
  __int128 v98;
  uint64_t v99;

  v81 = a1;
  v86 = a2;
  sub_1DC08CC60(0, (unint64_t *)&qword_1EDB29B50, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6C48]);
  v84 = *(_QWORD *)(v2 - 8);
  v85 = v2;
  MEMORY[0x1E0C80A78](v2);
  v83 = (char *)&v78 - v3;
  v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
  sub_1DC089DA4(0, (unint64_t *)&qword_1EDB3FE80, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB3FF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v5 = *(_QWORD *)(sub_1DC402A40() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 72);
  v8 = swift_allocObject();
  v80 = v8;
  *(_OWORD *)(v8 + 16) = xmmword_1DC4153C0;
  v9 = v8 + v6;
  sub_1DC089DA4(0, &qword_1EDB3FE70, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB3FB0], v4);
  v11 = v10;
  v12 = sub_1DC402A10();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(unsigned __int8 *)(v13 + 80);
  v15 = (v14 + 32) & ~v14;
  v16 = *(_QWORD *)(v13 + 72);
  v90 = v14 | 7;
  v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_1DC40DC10;
  v18 = (_QWORD *)(v17 + v15);
  *v18 = 0x6C6F626D7973;
  v18[1] = 0xE600000000000000;
  v19 = *(void (**)(void))(v13 + 104);
  v19();
  v20 = sub_1DC27359C(MEMORY[0x1E0DEE9D8]);
  v96 = v9;
  MEMORY[0x1DF0C329C](0x736B636F7473, 0xE600000000000000, 0, 0, 0, 0, 0, 0, v17, v20);
  v94 = v7;
  v79 = v9 + v7;
  v95 = v16;
  v93 = v15 + 2 * v16;
  v88 = v11;
  v21 = swift_allocObject();
  v98 = xmmword_1DC40C740;
  *(_OWORD *)(v21 + 16) = xmmword_1DC40C740;
  v22 = (_QWORD *)(v21 + v15);
  v91 = v15;
  *v22 = 0x6C6F626D7973;
  v22[1] = 0xE600000000000000;
  v92 = *MEMORY[0x1E0DB3F90];
  ((void (*)(uint64_t))v19)(v21 + v15);
  v23 = (_QWORD *)((char *)v22 + v16);
  *v23 = 0x656C6369747261;
  v23[1] = 0xE700000000000000;
  v87 = *MEMORY[0x1E0DB3FA8];
  v19();
  v24 = sub_1DC3FFD58();
  v26 = v25;
  sub_1DC27359C(MEMORY[0x1E0DEE9D8]);
  v89 = 0x80000001DC441810;
  MEMORY[0x1DF0C3290](0x736B636F7473, 0xE600000000000000, v24, v26, 0xD000000000000011);
  v79 = 2 * v7;
  v27 = v96;
  v78 = v96 + 2 * v7;
  v28 = swift_allocObject();
  *(_OWORD *)(v28 + 16) = v98;
  v29 = (_QWORD *)(v28 + v15);
  *v29 = 0x6C6F626D7973;
  v29[1] = 0xE600000000000000;
  v30 = v28 + v15;
  v31 = v92;
  v97 = v19;
  ((void (*)(uint64_t, _QWORD, uint64_t))v19)(v30, v92, v12);
  v32 = v95;
  v33 = (_QWORD *)((char *)v29 + v95);
  *v33 = 0x656C6369747261;
  v33[1] = 0xE700000000000000;
  v19();
  v34 = sub_1DC3FFD58();
  v36 = v35;
  v37 = sub_1DC27359C(MEMORY[0x1E0DEE9D8]);
  v38 = v89;
  MEMORY[0x1DF0C3290](0x736B636F7473, 0xE600000000000000, v34, v36, 0xD000000000000011, v89, 0, 0, v28, v37);
  v79 += v27 + v94;
  v39 = swift_allocObject();
  *(_OWORD *)(v39 + 16) = v98;
  v40 = (_QWORD *)(v39 + v91);
  *v40 = 0x6C6F626D7973;
  v40[1] = 0xE600000000000000;
  v41 = v97;
  ((void (*)(_QWORD *, uint64_t, uint64_t))v97)(v40, v31, v12);
  v42 = (_QWORD *)((char *)v40 + v32);
  *v42 = 0x656C6369747261;
  v42[1] = 0xE700000000000000;
  v41();
  v43 = sub_1DC3FFD58();
  v45 = v44;
  v46 = sub_1DC27359C(MEMORY[0x1E0DEE9D8]);
  MEMORY[0x1DF0C3290](0x7370747468, 0xE500000000000000, v43, v45, 0xD000000000000011, v38, 0, 0, v39, v46);
  v47 = v94;
  v79 = 4 * v94;
  v78 = v96 + 4 * v94;
  v48 = swift_allocObject();
  *(_OWORD *)(v48 + 16) = v98;
  v49 = v91;
  v50 = (_QWORD *)(v48 + v91);
  *v50 = 0x6C6F626D7973;
  v50[1] = 0xE600000000000000;
  v51 = v92;
  v52 = v97;
  ((void (*)(_QWORD *, _QWORD, uint64_t))v97)(v50, v92, v12);
  v53 = (_QWORD *)((char *)v50 + v95);
  *v53 = 0x656C6369747261;
  v53[1] = 0xE700000000000000;
  v52();
  v54 = sub_1DC3FFD58();
  v56 = v55;
  v57 = sub_1DC27359C(MEMORY[0x1E0DEE9D8]);
  MEMORY[0x1DF0C3290](1886680168, 0xE400000000000000, v54, v56, 0xD000000000000011, v89, 0, 0, v48, v57);
  v89 = v96 + v79 + v47;
  v58 = swift_allocObject();
  *(_OWORD *)(v58 + 16) = v98;
  v59 = (_QWORD *)(v58 + v49);
  *v59 = 0x6C6F626D7973;
  v59[1] = 0xE600000000000000;
  v60 = v97;
  ((void (*)(uint64_t, uint64_t, uint64_t))v97)(v58 + v49, v51, v12);
  v61 = v95;
  v62 = (_QWORD *)(v58 + v49 + v95);
  *v62 = 0x656C6369747261;
  v62[1] = 0xE700000000000000;
  v60();
  v63 = sub_1DC3FFD58();
  v65 = v64;
  v66 = sub_1DC27359C(MEMORY[0x1E0DEE9D8]);
  MEMORY[0x1DF0C3290](0x7370747468, 0xE500000000000000, v63, v65, 0, 0, 0, 0, v58, v66);
  v67 = swift_allocObject();
  *(_OWORD *)(v67 + 16) = v98;
  v68 = (_QWORD *)(v67 + v49);
  *v68 = 0x6C6F626D7973;
  v68[1] = 0xE600000000000000;
  v69 = v97;
  ((void (*)(_QWORD *, _QWORD, uint64_t))v97)(v68, v92, v12);
  v70 = (_QWORD *)((char *)v68 + v61);
  *v70 = 0x656C6369747261;
  v70[1] = 0xE700000000000000;
  v69();
  v71 = sub_1DC3FFD58();
  v73 = v72;
  v74 = sub_1DC27359C(MEMORY[0x1E0DEE9D8]);
  MEMORY[0x1DF0C3290](1886680168, 0xE400000000000000, v71, v73, 0, 0, 0, 0, v67, v74);
  v75 = v82;
  *(_QWORD *)(v82 + 16) = v80;
  v99 = v81;
  type metadata accessor for StocksActivity(0);
  sub_1DC08CC60(0, (unint64_t *)&qword_1EDB29CB0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB75B0]);
  sub_1DC2736B0();
  v76 = v83;
  sub_1DC40424C();
  (*(void (**)(uint64_t, char *, uint64_t))(v84 + 32))(v75 + OBJC_IVAR____TtC8StocksUI24StocksV1SymbolURLHandler_navigator, v76, v85);
  sub_1DC097DD0(v86, v75 + OBJC_IVAR____TtC8StocksUI24StocksV1SymbolURLHandler_stockMetadataManager);
  return v75;
}

unint64_t sub_1DC2733F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1DC409AC0();
  sub_1DC408AF4();
  v4 = sub_1DC409AF0();
  return sub_1DC273458(a1, a2, v4);
}

unint64_t sub_1DC273458(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t i;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v15;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  i = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * i);
    if ((*v10 != a1 || v10[1] != a2) && (sub_1DC4099E8() & 1) == 0)
    {
      v12 = ~v5;
      i = (i + 1) & v12;
      if (((*(_QWORD *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
      {
        v13 = (_QWORD *)(v9 + 16 * i);
        if ((*v13 != a1 || v13[1] != a2) && (sub_1DC4099E8() & 1) == 0)
        {
          for (i = (i + 1) & v12; ((*(_QWORD *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v12)
          {
            v15 = (_QWORD *)(v9 + 16 * i);
            if (*v15 == a1 && v15[1] == a2)
              break;
            if ((sub_1DC4099E8() & 1) != 0)
              break;
          }
        }
      }
    }
  }
  return i;
}

unint64_t sub_1DC27359C(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  sub_1DC1A48B8();
  v2 = (_QWORD *)sub_1DC409874();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v5 = *(v4 - 2);
    v6 = *(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_1DC2733F4(v5, v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = (uint64_t *)(v2[6] + 16 * result);
    *v10 = v5;
    v10[1] = v6;
    *(_QWORD *)(v2[7] + 8 * result) = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1DC2736B0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EDB29CA0;
  if (!qword_1EDB29CA0)
  {
    sub_1DC08CC60(255, (unint64_t *)&qword_1EDB29CB0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB75B0]);
    result = MEMORY[0x1DF0CAB8C](MEMORY[0x1E0DB75C0], v1);
    atomic_store(result, (unint64_t *)&qword_1EDB29CA0);
  }
  return result;
}

UIColor __swiftcall UIColor.stocksAccessibilityAdjustedForIncreaseContrast()()
{
  void *v0;
  id v1;
  id v2;
  char **v3;

  v1 = objc_msgSend((id)objc_opt_self(), sel_currentTraitCollection);
  v2 = objc_msgSend(v1, sel_userInterfaceStyle);

  v3 = &selRef_stocksAccessibilityAdjustedLighterForIncreaseContrast;
  if (v2 != (id)2)
    v3 = &selRef_stocksAccessibilityAdjustedDarkerForIncreaseContrast;
  return (UIColor)objc_msgSend(v0, *v3);
}

id sub_1DC273788(void *a1)
{
  void *v2;
  id v3;
  id v4;
  id v5;
  char **v6;
  id v7;

  v2 = (void *)objc_opt_self();
  v3 = a1;
  v4 = objc_msgSend(v2, sel_currentTraitCollection);
  v5 = objc_msgSend(v4, sel_userInterfaceStyle);

  v6 = &selRef_stocksAccessibilityAdjustedLighterForIncreaseContrast;
  if (v5 != (id)2)
    v6 = &selRef_stocksAccessibilityAdjustedDarkerForIncreaseContrast;
  v7 = objc_msgSend(v3, *v6);

  return v7;
}

UIColor __swiftcall UIColor.stocksAccessibilityAdjustedLighterForIncreaseContrast()()
{
  void *v0;

  return (UIColor)objc_msgSend(v0, sel_stocksAccessibilityAdjustedForIncreaseContrastAdjustingDarker_, 0);
}

id sub_1DC273854(void *a1)
{
  return objc_msgSend(a1, sel_stocksAccessibilityAdjustedForIncreaseContrastAdjustingDarker_, 0);
}

UIColor __swiftcall UIColor.stocksAccessibilityAdjustedDarkerForIncreaseContrast()()
{
  void *v0;

  return (UIColor)objc_msgSend(v0, sel_stocksAccessibilityAdjustedForIncreaseContrastAdjustingDarker_, 1);
}

id sub_1DC2738A4(void *a1)
{
  return objc_msgSend(a1, sel_stocksAccessibilityAdjustedForIncreaseContrastAdjustingDarker_, 1);
}

UIColor __swiftcall UIColor.stocksAccessibilityAdjustedForIncreaseContrastAgainst(backgroundColor:)(UIColor backgroundColor)
{
  void *v1;
  double v3;
  double v4;
  double v5;

  objc_msgSend(v1, sel_relativeLuminance);
  v4 = v3;
  -[objc_class relativeLuminance](backgroundColor.super.isa, sel_relativeLuminance);
  return (UIColor)objc_msgSend(v1, sel_stocksAccessibilityAdjustedForIncreaseContrastAdjustingDarker_, v4 <= v5);
}

double sub_1DC273934()
{
  return 0.2;
}

double sub_1DC273940(double a1)
{
  if (a1 >= 0.03928)
    return pow((a1 + 0.055) / 1.055, 2.4);
  else
    return a1 / 12.92;
}

unint64_t sub_1DC273988()
{
  unint64_t result;

  result = qword_1F0350200;
  if (!qword_1F0350200)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1F0350200);
  }
  return result;
}

void sub_1DC2739C4(void (*a1)(uint64_t), uint64_t a2)
{
  sub_1DC273A04(a1, a2);
}

void sub_1DC2739E4(uint64_t a1, uint64_t a2)
{
  sub_1DC273B94(a1, a2);
}

void sub_1DC273A04(void (*a1)(uint64_t), uint64_t a2)
{
  void *v2;
  void *v3;
  id v6;
  unint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  _QWORD v16[3];
  uint64_t v17;
  uint64_t v18;

  v3 = v2;
  v6 = objc_msgSend(v3, sel_childViewControllers);
  sub_1DC0C70EC();
  v7 = sub_1DC408CD4();

  if (!(v7 >> 62))
  {
    if (*(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_3;
LABEL_10:
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  swift_bridgeObjectRetain();
  v11 = sub_1DC409850();
  swift_bridgeObjectRelease();
  if (!v11)
    goto LABEL_10;
LABEL_3:
  if ((v7 & 0xC000000000000001) != 0)
  {
    MEMORY[0x1DF0C9FBC](0, v7);
  }
  else
  {
    if (!*(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    v8 = *(id *)(v7 + 32);
  }
  swift_bridgeObjectRelease();
  sub_1DC273D1C();
  if ((swift_dynamicCast() & 1) != 0)
  {
    if (*((_QWORD *)&v14 + 1))
    {
      sub_1DC097DD0(&v13, (uint64_t)v16);
      v9 = v17;
      v10 = v18;
      __swift_project_boxed_opaque_existential_1(v16, v17);
      (*(void (**)(void (*)(uint64_t), uint64_t, uint64_t, uint64_t))(v10 + 8))(a1, a2, v9, v10);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
      return;
    }
    goto LABEL_12;
  }
LABEL_11:
  v15 = 0;
  v13 = 0u;
  v14 = 0u;
LABEL_12:
  v12 = sub_1DC273D70((uint64_t)&v13);
  if (a1)
    a1(v12);
}

void sub_1DC273B94(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  id v6;
  unint64_t v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  _QWORD v16[3];
  uint64_t v17;
  uint64_t v18;

  v3 = v2;
  v6 = objc_msgSend(v3, sel_childViewControllers);
  sub_1DC0C70EC();
  v7 = sub_1DC408CD4();

  if (!(v7 >> 62))
  {
    if (*(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_3;
LABEL_10:
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  swift_bridgeObjectRetain();
  v12 = sub_1DC409850();
  swift_bridgeObjectRelease();
  if (!v12)
    goto LABEL_10;
LABEL_3:
  if ((v7 & 0xC000000000000001) != 0)
  {
    v8 = (id)MEMORY[0x1DF0C9FBC](0, v7);
  }
  else
  {
    if (!*(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    v8 = *(id *)(v7 + 32);
  }
  v9 = v8;
  swift_bridgeObjectRelease();
  v16[0] = v9;
  sub_1DC273D1C();
  if ((swift_dynamicCast() & 1) != 0)
  {
    if (*((_QWORD *)&v14 + 1))
    {
      sub_1DC097DD0(&v13, (uint64_t)v16);
      v10 = v17;
      v11 = v18;
      __swift_project_boxed_opaque_existential_1(v16, v17);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 16))(a1, a2, v10, v11);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
      return;
    }
    goto LABEL_12;
  }
LABEL_11:
  v15 = 0;
  v13 = 0u;
  v14 = 0u;
LABEL_12:
  sub_1DC273D70((uint64_t)&v13);
}

unint64_t sub_1DC273D1C()
{
  unint64_t result;

  result = qword_1EDB40AF8;
  if (!qword_1EDB40AF8)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EDB40AF8);
  }
  return result;
}

uint64_t sub_1DC273D70(uint64_t a1)
{
  uint64_t v2;

  sub_1DC273DAC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1DC273DAC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F0350208)
  {
    sub_1DC273D1C();
    v0 = sub_1DC4095A4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1F0350208);
  }
}

uint64_t sub_1DC273E08(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v15[16];
  _OWORD v16[2];
  uint64_t v17;
  _OWORD v18[2];
  uint64_t v19;

  sub_1DC1EA918(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = &v15[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = type metadata accessor for StocksActivity(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1DC1B5E40();
  v10 = *(int *)(v9 + 48);
  v11 = sub_1DC4010E4();
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v8, a1, v11);
  *(_QWORD *)&v8[v10] = 0;
  type metadata accessor for StocksActivity.StockFeed(0);
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  v12 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8StocksUI12TickerRouter_tracker);
  v13 = sub_1DC403340();
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v5, 1, 1, v13);
  v19 = 0;
  memset(v18, 0, sizeof(v18));
  v17 = 0;
  memset(v16, 0, sizeof(v16));
  swift_retain();
  sub_1DC22BAE0((uint64_t)v8, v12, (uint64_t)v5, (uint64_t)v18, 0, 0, (uint64_t)v16);
  swift_release();
  sub_1DC17C7C8((uint64_t)v16, &qword_1EDB29410, (unint64_t *)&unk_1EDB29400);
  sub_1DC17C7C8((uint64_t)v18, &qword_1EDB2ACD0, (unint64_t *)&qword_1EDB2ACC0);
  sub_1DC0926D8((uint64_t)v5, (uint64_t (*)(_QWORD))sub_1DC1EA918);
  sub_1DC0926D8((uint64_t)v8, type metadata accessor for StocksActivity);
  return swift_release();
}

uint64_t *sub_1DC274088(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  _QWORD *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  __int128 v30;
  uint64_t v31;
  void (*v32)(char *, char *, uint64_t);
  id v33;
  _QWORD *v35;
  char *__dst;
  uint64_t v37;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v24 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1DC40124C();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v13 = a3[7];
    *(uint64_t *)((char *)v4 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
    v14 = (uint64_t *)((char *)v4 + v13);
    v15 = (char *)a2 + v13;
    v16 = *(uint64_t *)((char *)a2 + v13 + 8);
    *v14 = *(uint64_t *)((char *)a2 + v13);
    v14[1] = v16;
    v17 = type metadata accessor for AttributionSource();
    v18 = *(int *)(v17 + 20);
    v35 = v14;
    __dst = (char *)v14 + v18;
    v37 = v17;
    v19 = &v15[v18];
    v20 = sub_1DC3FFDD0();
    v21 = *(_QWORD *)(v20 - 8);
    v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v22(v19, 1, v20))
    {
      sub_1DC089DA4(0, (unint64_t *)&unk_1EDB28A70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(__dst, v19, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 16))(__dst, v19, v20);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(__dst, 0, 1, v20);
    }
    v25 = *(int *)(v37 + 24);
    v26 = *(void **)&v15[v25];
    *(_QWORD *)((char *)v35 + v25) = v26;
    v27 = a3[8];
    v28 = (char *)v4 + v27;
    v29 = (char *)a2 + v27;
    v30 = *(_OWORD *)(v29 + 24);
    *(_OWORD *)((char *)v4 + v27 + 24) = v30;
    v31 = v30;
    v32 = **(void (***)(char *, char *, uint64_t))(v30 - 8);
    v33 = v26;
    v32(v28, v29, v31);
  }
  return v4;
}

uint64_t sub_1DC274264(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  swift_bridgeObjectRelease();
  v4 = a1 + a2[5];
  v5 = sub_1DC40124C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  v6 = a1 + a2[7];
  swift_bridgeObjectRelease();
  v7 = type metadata accessor for AttributionSource();
  v8 = v6 + *(int *)(v7 + 20);
  v9 = sub_1DC3FFDD0();
  v10 = *(_QWORD *)(v9 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);

  return __swift_destroy_boxed_opaque_existential_1(a1 + a2[8]);
}

_QWORD *sub_1DC274344(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  _QWORD *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int (*v21)(char *, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  __int128 v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  id v31;
  char *__dst;
  uint64_t v34;
  int *v35;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1DC40124C();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  v12 = a3[7];
  v35 = a3;
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  v13 = (_QWORD *)((char *)a1 + v12);
  v14 = (char *)a2 + v12;
  v15 = *(_QWORD *)((char *)a2 + v12 + 8);
  *v13 = *(_QWORD *)((char *)a2 + v12);
  v13[1] = v15;
  v16 = type metadata accessor for AttributionSource();
  v17 = *(int *)(v16 + 20);
  __dst = (char *)v13 + v17;
  v34 = v16;
  v18 = &v14[v17];
  v19 = sub_1DC3FFDD0();
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v21(v18, 1, v19))
  {
    sub_1DC089DA4(0, (unint64_t *)&unk_1EDB28A70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(__dst, v18, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v20 + 16))(__dst, v18, v19);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(__dst, 0, 1, v19);
  }
  v23 = *(int *)(v34 + 24);
  v24 = *(void **)&v14[v23];
  *(_QWORD *)((char *)v13 + v23) = v24;
  v25 = v35[8];
  v26 = (char *)a1 + v25;
  v27 = (char *)a2 + v25;
  v28 = *(_OWORD *)(v27 + 24);
  *(_OWORD *)((char *)a1 + v25 + 24) = v28;
  v29 = v28;
  v30 = **(void (***)(char *, char *, uint64_t))(v28 - 8);
  v31 = v24;
  v30(v26, v27, v29);
  return a1;
}

_QWORD *sub_1DC2744F4(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  char *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(char *, uint64_t, uint64_t);
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  id v25;
  uint64_t v27;
  int *v28;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1DC40124C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v28 = a3;
  v10 = a3[7];
  v11 = (_QWORD *)((char *)a1 + v10);
  v12 = (char *)a2 + v10;
  *v11 = *(_QWORD *)((char *)a2 + v10);
  v11[1] = *(_QWORD *)((char *)a2 + v10 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v27 = type metadata accessor for AttributionSource();
  v13 = *(int *)(v27 + 20);
  v14 = (char *)v11 + v13;
  v15 = &v12[v13];
  v16 = sub_1DC3FFDD0();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48);
  v19 = v18(v14, 1, v16);
  v20 = v18(v15, 1, v16);
  if (!v19)
  {
    if (!v20)
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 24))(v14, v15, v16);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v17 + 8))(v14, v16);
    goto LABEL_6;
  }
  if (v20)
  {
LABEL_6:
    sub_1DC089DA4(0, (unint64_t *)&unk_1EDB28A70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v14, v15, v16);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
LABEL_7:
  v22 = *(int *)(v27 + 24);
  v23 = *(void **)((char *)v11 + v22);
  v24 = *(void **)&v12[v22];
  *(_QWORD *)((char *)v11 + v22) = v24;
  v25 = v24;

  __swift_assign_boxed_opaque_existential_1((_QWORD *)((char *)a1 + v28[8]), (_QWORD *)((char *)a2 + v28[8]));
  return a1;
}

_OWORD *sub_1DC2746F4(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  __int128 v23;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1DC40124C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[7];
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  *(_OWORD *)((char *)a1 + v10) = *(_OWORD *)((char *)a2 + v10);
  v13 = type metadata accessor for AttributionSource();
  v14 = *(int *)(v13 + 20);
  v15 = &v11[v14];
  v16 = &v12[v14];
  v17 = sub_1DC3FFDD0();
  v18 = *(_QWORD *)(v17 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
  {
    sub_1DC089DA4(0, (unint64_t *)&unk_1EDB28A70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v15, v16, v17);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  }
  *(_QWORD *)&v11[*(int *)(v13 + 24)] = *(_QWORD *)&v12[*(int *)(v13 + 24)];
  v20 = a3[8];
  v21 = (char *)a1 + v20;
  v22 = (char *)a2 + v20;
  v23 = *((_OWORD *)v22 + 1);
  *(_OWORD *)v21 = *(_OWORD *)v22;
  *((_OWORD *)v21 + 1) = v23;
  *((_QWORD *)v21 + 4) = *((_QWORD *)v22 + 4);
  return a1;
}

_QWORD *sub_1DC274858(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(char *, uint64_t, uint64_t);
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  __int128 v29;
  uint64_t v31;
  int *v32;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1DC40124C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  swift_bridgeObjectRelease();
  v32 = a3;
  v11 = a3[7];
  v12 = (_QWORD *)((char *)a1 + v11);
  v13 = (char *)a2 + v11;
  v14 = *(_QWORD *)((char *)a2 + v11 + 8);
  *v12 = *(_QWORD *)((char *)a2 + v11);
  v12[1] = v14;
  swift_bridgeObjectRelease();
  v31 = type metadata accessor for AttributionSource();
  v15 = *(int *)(v31 + 20);
  v16 = (char *)v12 + v15;
  v17 = &v13[v15];
  v18 = sub_1DC3FFDD0();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48);
  v21 = v20(v16, 1, v18);
  v22 = v20(v17, 1, v18);
  if (!v21)
  {
    if (!v22)
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 40))(v16, v17, v18);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v19 + 8))(v16, v18);
    goto LABEL_6;
  }
  if (v22)
  {
LABEL_6:
    sub_1DC089DA4(0, (unint64_t *)&unk_1EDB28A70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v16, v17, v18);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
LABEL_7:
  v24 = *(int *)(v31 + 24);
  v25 = *(void **)((char *)v12 + v24);
  *(_QWORD *)((char *)v12 + v24) = *(_QWORD *)&v13[v24];

  v26 = v32[8];
  v27 = (char *)a1 + v26;
  v28 = (char *)a2 + v26;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1 + v26);
  v29 = *((_OWORD *)v28 + 1);
  *(_OWORD *)v27 = *(_OWORD *)v28;
  *((_OWORD *)v27 + 1) = v29;
  *((_QWORD *)v27 + 4) = *((_QWORD *)v28 + 4);
  return a1;
}

uint64_t sub_1DC274A40()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC274A4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1DC40124C();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 20);
    }
    else
    {
      v10 = type metadata accessor for AttributionSource();
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 28);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_1DC274AEC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC274AF8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = sub_1DC40124C();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 20);
    }
    else
    {
      v10 = type metadata accessor for AttributionSource();
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 28);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t type metadata accessor for StockListEmptyWatchlistBlueprintModifier()
{
  uint64_t result;

  result = qword_1F0350288;
  if (!qword_1F0350288)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1DC274BD0()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1DC40124C();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for AttributionSource();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_1DC274C74(uint64_t a1, void (*a2)(char *), uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  int *v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  void (*v38)(unint64_t, char *, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  char *v77;
  unint64_t v78;
  uint64_t *v79;
  char *v80;
  char *v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  void (*v89)(char *);
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  __int128 v96;
  __int128 v97;
  uint64_t v98;
  char v99;

  v4 = v3;
  v88 = a3;
  v89 = a2;
  sub_1DC1326EC();
  MEMORY[0x1E0C80A78](v5);
  v83 = (char *)&v74 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0CC0A4(0, (unint64_t *)&qword_1EDB2AB40, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790]);
  v86 = *(_QWORD *)(v7 - 8);
  v87 = v7;
  MEMORY[0x1E0C80A78](v7);
  v84 = (char *)&v74 - v8;
  sub_1DC0CC0A4(0, &qword_1EDB2A280, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB9A28]);
  v85 = v9;
  v82 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v81 = (char *)&v74 - v10;
  sub_1DC132790();
  MEMORY[0x1E0C80A78](v11);
  v91 = (char *)&v74 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0CC0A4(0, (unint64_t *)&qword_1EDB29D98, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60]);
  v93 = v13;
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v80 = (char *)&v74 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v77 = (char *)&v74 - v17;
  v18 = type metadata accessor for AttributionSource();
  MEMORY[0x1E0C80A78](v18);
  v20 = (uint64_t *)((char *)&v74 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  v21 = type metadata accessor for StockListModel(0);
  MEMORY[0x1E0C80A78](v21);
  v23 = (uint64_t *)((char *)&v74 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1DC0F8190();
  v90 = v24;
  v95 = *(_QWORD *)(v24 - 8);
  MEMORY[0x1E0C80A78](v24);
  v94 = (char *)&v74 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v26);
  v28 = (char *)&v74 - v27;
  v29 = (int *)type metadata accessor for StockListEmptyWatchlistBlueprintModifier();
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v3 + v29[8]), *(_QWORD *)(v3 + v29[8] + 24));
  v30 = sub_1DC400C1C();
  v92 = v14;
  v79 = v23;
  if ((v30 & 1) != 0)
  {
    v78 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v31 = v29[7];
    v76 = v3;
    sub_1DC2754AC(v3 + v31, (uint64_t)v20);
    *v23 = sub_1DC2A9104(v20);
    v23[1] = v32;
    v23[2] = v33;
    v23[3] = v34;
    swift_storeEnumTagMultiPayload();
    sub_1DC080808(&qword_1EDB2D860, type metadata accessor for StockListModel, (uint64_t)&unk_1DC41C258);
    sub_1DC404348();
    v98 = 0;
    v96 = 0u;
    v97 = 0u;
    v99 = 2;
    sub_1DC089DA4(0, (unint64_t *)&qword_1EDB3FEA8, (uint64_t (*)(uint64_t))sub_1DC0F8190, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v35 = v95;
    v36 = (*(unsigned __int8 *)(v95 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v95 + 80);
    v37 = swift_allocObject();
    *(_OWORD *)(v37 + 16) = xmmword_1DC40DC10;
    v38 = *(void (**)(unint64_t, char *, uint64_t))(v35 + 16);
    v75 = v28;
    v39 = v90;
    v38(v37 + v36, v28, v90);
    v40 = sub_1DC080808(&qword_1EDB29BD8, (uint64_t (*)(uint64_t))sub_1DC0F8190, MEMORY[0x1E0DB6F08]);
    v41 = sub_1DC080808(&qword_1EDB29BD0, (uint64_t (*)(uint64_t))sub_1DC0F8190, MEMORY[0x1E0DB6EF8]);
    MEMORY[0x1DF0C311C](v37, v39, v40, v41);
    sub_1DC0D75BC();
    v42 = v77;
    sub_1DC4046F0();
    v43 = sub_1DC0CC008(0, 1, 1, MEMORY[0x1E0DEE9D8]);
    v45 = *(_QWORD *)(v43 + 16);
    v44 = *(_QWORD *)(v43 + 24);
    if (v45 >= v44 >> 1)
      v43 = sub_1DC0CC008(v44 > 1, v45 + 1, 1, v43);
    v46 = v92;
    v78 = v43;
    *(_QWORD *)(v43 + 16) = v45 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v46 + 32))(v43+ ((*(unsigned __int8 *)(v46 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80))+ *(_QWORD *)(v46 + 72) * v45, v42, v93);
    (*(void (**)(char *, uint64_t))(v95 + 8))(v75, v39);
    v4 = v76;
  }
  v47 = sub_1DC4011F8();
  v49 = v48;
  v50 = sub_1DC4011E0();
  v51 = v4;
  v53 = v52;
  v54 = *(_QWORD *)(v51 + v29[6]);
  swift_storeEnumTagMultiPayload();
  sub_1DC080808(&qword_1EDB2D860, type metadata accessor for StockListModel, (uint64_t)&unk_1DC41C258);
  swift_bridgeObjectRetain();
  v55 = v94;
  sub_1DC404348();
  *(_QWORD *)&v96 = v47;
  *((_QWORD *)&v96 + 1) = v49;
  *(_QWORD *)&v97 = v50;
  *((_QWORD *)&v97 + 1) = v53;
  v98 = v54;
  v99 = 1;
  sub_1DC089DA4(0, (unint64_t *)&qword_1EDB3FEA8, (uint64_t (*)(uint64_t))sub_1DC0F8190, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v56 = v95;
  v57 = (*(unsigned __int8 *)(v95 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v95 + 80);
  v58 = swift_allocObject();
  *(_OWORD *)(v58 + 16) = xmmword_1DC40DC10;
  v59 = v55;
  v60 = v90;
  (*(void (**)(unint64_t, char *, uint64_t))(v56 + 16))(v58 + v57, v59, v90);
  v61 = sub_1DC080808(&qword_1EDB29BD8, (uint64_t (*)(uint64_t))sub_1DC0F8190, MEMORY[0x1E0DB6F08]);
  v62 = sub_1DC080808(&qword_1EDB29BD0, (uint64_t (*)(uint64_t))sub_1DC0F8190, MEMORY[0x1E0DB6EF8]);
  MEMORY[0x1DF0C311C](v58, v60, v61, v62);
  sub_1DC0D75BC();
  v63 = v80;
  sub_1DC4046F0();
  v64 = v78;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v64 = sub_1DC0CC008(0, *(_QWORD *)(v64 + 16) + 1, 1, v64);
  v66 = *(_QWORD *)(v64 + 16);
  v65 = *(_QWORD *)(v64 + 24);
  if (v66 >= v65 >> 1)
    v64 = sub_1DC0CC008(v65 > 1, v66 + 1, 1, v64);
  *(_QWORD *)(v64 + 16) = v66 + 1;
  v67 = v64
      + ((*(unsigned __int8 *)(v92 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v92 + 80))
      + *(_QWORD *)(v92 + 72) * v66;
  v68 = v93;
  (*(void (**)(unint64_t, char *, uint64_t))(v92 + 32))(v67, v63, v93);
  v69 = sub_1DC0CBFB8((unint64_t *)&unk_1EDB29D70, MEMORY[0x1E0DB7B88]);
  v70 = sub_1DC0CBFB8(&qword_1EDB29D68, MEMORY[0x1E0DB7B80]);
  MEMORY[0x1DF0C311C](v64, v68, v69, v70);
  v71 = v84;
  sub_1DC406D0C();
  v72 = v81;
  sub_1DC405548();
  (*(void (**)(char *, uint64_t))(v86 + 8))(v71, v87);
  v89(v72);
  (*(void (**)(char *, uint64_t))(v82 + 8))(v72, v85);
  return (*(uint64_t (**)(char *, uint64_t))(v56 + 8))(v94, v60);
}

uint64_t sub_1DC275480()
{
  return sub_1DC080808(&qword_1F03502D0, (uint64_t (*)(uint64_t))type metadata accessor for StockListEmptyWatchlistBlueprintModifier, (uint64_t)&unk_1DC41F100);
}

uint64_t sub_1DC2754AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AttributionSource();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC2754F0(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[20] = a1;
  v2[21] = a2;
  v3 = sub_1DC4010E4();
  v2[22] = v3;
  v2[23] = *(_QWORD *)(v3 - 8);
  v2[24] = swift_task_alloc();
  v4 = type metadata accessor for StockForYouFeedGroup();
  v2[25] = v4;
  v2[26] = *(_QWORD *)(v4 - 8);
  v2[27] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1DC275578()
{
  uint64_t v0;
  _QWORD *v1;

  sub_1DC08CBF0(0, &qword_1EDB2AF80, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedServiceConfig, sub_1DC106C20, MEMORY[0x1E0D5C7A0]);
  *(_QWORD *)(v0 + 224) = sub_1DC407BAC();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 232) = v1;
  *v1 = v0;
  v1[1] = sub_1DC275604;
  return sub_1DC402CC8();
}

uint64_t sub_1DC275604()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 240) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_release();
  return swift_task_switch();
}

uint64_t sub_1DC275670()
{
  uint64_t v0;
  _OWORD *v1;
  uint64_t v2;
  __int128 v3;
  __int128 v4;
  uint64_t v5;
  int64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(void);
  uint64_t *v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v1 = (_OWORD *)(v0 + 88);
  if (*(_QWORD *)(v0 + 88))
  {
    v2 = v0 + 16;
    *(_QWORD *)(v0 + 80) = *(_QWORD *)(v0 + 152);
    v3 = *(_OWORD *)(v0 + 136);
    *(_OWORD *)(v0 + 48) = *(_OWORD *)(v0 + 120);
    *(_OWORD *)(v0 + 64) = v3;
    v4 = *(_OWORD *)(v0 + 104);
    *(_OWORD *)(v0 + 16) = *v1;
    *(_OWORD *)(v0 + 32) = v4;
    v5 = *(_QWORD *)(v0 + 64);
    v6 = *(_QWORD *)(v5 + 16);
    v7 = MEMORY[0x1E0DEE9D8];
    if (v6)
    {
      v25 = *(_QWORD *)(v0 + 72);
      v8 = *(int **)(v0 + 200);
      v28 = *(_QWORD *)(v0 + 208);
      v29 = MEMORY[0x1E0DEE9D8];
      v9 = *(_QWORD *)(v0 + 184);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1DC2AD7A0(0, v6, 0);
      v10 = v5 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
      v26 = *(_QWORD *)(v9 + 72);
      v27 = v9;
      v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16);
      v12 = v29;
      do
      {
        v13 = *(_QWORD *)(v0 + 216);
        v14 = *(_QWORD *)(v0 + 192);
        v15 = *(_QWORD *)(v0 + 176);
        v11(v14, v10, v15);
        v11(v13, v14, v15);
        v16 = v13 + v8[7];
        v17 = sub_1DC4073A8();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v16, 1, 1, v17);
        *(_QWORD *)(v13 + v8[5]) = MEMORY[0x1E0DEE9D8];
        *(_BYTE *)(v13 + v8[6]) = 1;
        (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v14, v15);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1DC2AD7A0(0, *(_QWORD *)(v12 + 16) + 1, 1);
          v12 = v29;
        }
        v19 = *(_QWORD *)(v12 + 16);
        v18 = *(_QWORD *)(v12 + 24);
        if (v19 >= v18 >> 1)
        {
          sub_1DC2AD7A0(v18 > 1, v19 + 1, 1);
          v12 = v29;
        }
        v20 = *(_QWORD *)(v0 + 216);
        *(_QWORD *)(v12 + 16) = v19 + 1;
        sub_1DC092ED0(v20, v12+ ((*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80))+ *(_QWORD *)(v28 + 72) * v19, (uint64_t (*)(_QWORD))type metadata accessor for StockForYouFeedGroup);
        v10 += v26;
        --v6;
      }
      while (v6);
      swift_bridgeObjectRelease();
      v21 = v25;
      v2 = v0 + 16;
      v7 = MEMORY[0x1E0DEE9D8];
    }
    else
    {
      v21 = swift_bridgeObjectRetain();
      v12 = MEMORY[0x1E0DEE9D8];
    }
    v23 = *(uint64_t **)(v0 + 160);
    *v23 = v21;
    v23[1] = v7;
    v23[2] = v12;
    v23[3] = (uint64_t)&type metadata for StockForYouFeedGroupEmitterCursor;
    sub_1DC231868(v2);
    swift_task_dealloc();
    swift_task_dealloc();
    v22 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    sub_1DC23181C((uint64_t)v1);
    sub_1DC27792C();
    swift_allocError();
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    v22 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v22();
}

uint64_t sub_1DC275910()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DC275958(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;

  v3[14] = a2;
  v3[15] = a3;
  v3[13] = a1;
  v4 = sub_1DC403F64();
  v3[16] = v4;
  v3[17] = *(_QWORD *)(v4 - 8);
  v3[18] = swift_task_alloc();
  v3[19] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1DC2759CC()
{
  uint64_t v0;
  _QWORD *v1;

  *(_QWORD *)(v0 + 160) = sub_1DC4078AC();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 168) = v1;
  *v1 = v0;
  v1[1] = sub_1DC275A3C;
  return sub_1DC402CC8();
}

uint64_t sub_1DC275A3C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 176) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_release();
  return swift_task_switch();
}

uint64_t sub_1DC275AA8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = v0[2];
  v1 = v0[3];
  v0[23] = v2;
  v0[24] = v1;
  v3 = v0[4];
  v0[25] = v3;
  v4 = (_QWORD *)swift_task_alloc();
  v0[26] = v4;
  *v4 = v0;
  v4[1] = sub_1DC275B1C;
  return sub_1DC2764CC(v0[13], v2, v1, v3);
}

uint64_t sub_1DC275B1C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 216) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1DC275B80()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DC275BD8()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  id v11;
  id v12;
  id v13;
  NSObject *v14;
  os_log_type_t v15;
  _BOOL4 v16;
  uint64_t v17;
  uint64_t v18;
  uint8_t *v19;
  uint64_t v20;
  _QWORD *v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;

  swift_release();
  v1 = *(void **)(v0 + 176);
  *(_QWORD *)(v0 + 80) = v1;
  v2 = v1;
  sub_1DC16BD54();
  if ((swift_dynamicCast() & 1) != 0)
  {

    if (qword_1EDB2D2E8 != -1)
      swift_once();
    v3 = (id)qword_1EDB2D2E0;
    sub_1DC403F70();
    v4 = sub_1DC403F4C();
    v5 = sub_1DC408FE0();
    if (os_log_type_enabled(v4, v5))
    {
      v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v6 = 0;
      _os_log_impl(&dword_1DC07D000, v4, v5, "Yahoo News For You Stocks group emitter has no pool to emit from, error=Errors.noPool", v6, 2u);
      MEMORY[0x1DF0CAC88](v6, -1, -1);
    }
    v7 = *(_QWORD *)(v0 + 152);
    v8 = *(_QWORD *)(v0 + 128);
    v9 = *(_QWORD *)(v0 + 136);
    v10 = *(_QWORD **)(v0 + 104);

    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
    *v10 = 0xD000000000000058;
    v10[1] = 0x80000001DC441950;
    sub_1DC08CBF0(0, &qword_1EDB2AED8, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedGroup, (uint64_t (*)(void))sub_1DC12802C, MEMORY[0x1E0D5B9F8]);
    swift_storeEnumTagMultiPayload();

  }
  else
  {

    if (qword_1EDB2D2E8 != -1)
      swift_once();
    v11 = (id)qword_1EDB2D2E0;
    sub_1DC403F70();
    v12 = v1;
    v13 = v1;
    v14 = sub_1DC403F4C();
    v15 = sub_1DC408FE0();
    v16 = os_log_type_enabled(v14, v15);
    v17 = *(_QWORD *)(v0 + 144);
    v27 = *(_QWORD *)(v0 + 136);
    v18 = *(_QWORD *)(v0 + 128);
    if (v16)
    {
      v26 = *(_QWORD *)(v0 + 128);
      v19 = (uint8_t *)swift_slowAlloc();
      v25 = v17;
      v20 = swift_slowAlloc();
      *(_DWORD *)v19 = 136446210;
      v28 = v20;
      *(_QWORD *)(v0 + 40) = 0;
      *(_QWORD *)(v0 + 48) = 0xE000000000000000;
      *(_QWORD *)(v0 + 88) = v1;
      sub_1DC409808();
      *(_QWORD *)(v0 + 96) = sub_1DC2A9C74(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), &v28);
      sub_1DC4095B0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1DC07D000, v14, v15, "Yahoo News For You Stocks group emitter has no pool to emit from, error=%{public}s", v19, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1DF0CAC88](v20, -1, -1);
      MEMORY[0x1DF0CAC88](v19, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v25, v26);
    }
    else
    {

      (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v17, v18);
    }
    v21 = *(_QWORD **)(v0 + 104);
    v28 = 0;
    v29 = 0xE000000000000000;
    sub_1DC409730();
    v22 = v29;
    *(_QWORD *)(v0 + 56) = v28;
    *(_QWORD *)(v0 + 64) = v22;
    sub_1DC408B48();
    *(_QWORD *)(v0 + 72) = v1;
    sub_1DC409808();

    v23 = *(_QWORD *)(v0 + 64);
    *v21 = *(_QWORD *)(v0 + 56);
    v21[1] = v23;
    sub_1DC08CBF0(0, &qword_1EDB2AED8, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedGroup, (uint64_t (*)(void))sub_1DC12802C, MEMORY[0x1E0D5B9F8]);
    swift_storeEnumTagMultiPayload();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DC276048()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  id v11;
  id v12;
  id v13;
  NSObject *v14;
  os_log_type_t v15;
  _BOOL4 v16;
  uint64_t v17;
  uint64_t v18;
  uint8_t *v19;
  uint64_t v20;
  _QWORD *v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v1 = *(void **)(v0 + 216);
  *(_QWORD *)(v0 + 80) = v1;
  v2 = v1;
  sub_1DC16BD54();
  if ((swift_dynamicCast() & 1) != 0)
  {

    if (qword_1EDB2D2E8 != -1)
      swift_once();
    v3 = (id)qword_1EDB2D2E0;
    sub_1DC403F70();
    v4 = sub_1DC403F4C();
    v5 = sub_1DC408FE0();
    if (os_log_type_enabled(v4, v5))
    {
      v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v6 = 0;
      _os_log_impl(&dword_1DC07D000, v4, v5, "Yahoo News For You Stocks group emitter has no pool to emit from, error=Errors.noPool", v6, 2u);
      MEMORY[0x1DF0CAC88](v6, -1, -1);
    }
    v7 = *(_QWORD *)(v0 + 152);
    v8 = *(_QWORD *)(v0 + 128);
    v9 = *(_QWORD *)(v0 + 136);
    v10 = *(_QWORD **)(v0 + 104);

    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
    *v10 = 0xD000000000000058;
    v10[1] = 0x80000001DC441950;
    sub_1DC08CBF0(0, &qword_1EDB2AED8, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedGroup, (uint64_t (*)(void))sub_1DC12802C, MEMORY[0x1E0D5B9F8]);
    swift_storeEnumTagMultiPayload();

  }
  else
  {

    if (qword_1EDB2D2E8 != -1)
      swift_once();
    v11 = (id)qword_1EDB2D2E0;
    sub_1DC403F70();
    v12 = v1;
    v13 = v1;
    v14 = sub_1DC403F4C();
    v15 = sub_1DC408FE0();
    v16 = os_log_type_enabled(v14, v15);
    v17 = *(_QWORD *)(v0 + 144);
    v27 = *(_QWORD *)(v0 + 136);
    v18 = *(_QWORD *)(v0 + 128);
    if (v16)
    {
      v26 = *(_QWORD *)(v0 + 128);
      v19 = (uint8_t *)swift_slowAlloc();
      v25 = v17;
      v20 = swift_slowAlloc();
      *(_DWORD *)v19 = 136446210;
      v28 = v20;
      *(_QWORD *)(v0 + 40) = 0;
      *(_QWORD *)(v0 + 48) = 0xE000000000000000;
      *(_QWORD *)(v0 + 88) = v1;
      sub_1DC409808();
      *(_QWORD *)(v0 + 96) = sub_1DC2A9C74(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), &v28);
      sub_1DC4095B0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1DC07D000, v14, v15, "Yahoo News For You Stocks group emitter has no pool to emit from, error=%{public}s", v19, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1DF0CAC88](v20, -1, -1);
      MEMORY[0x1DF0CAC88](v19, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v25, v26);
    }
    else
    {

      (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v17, v18);
    }
    v21 = *(_QWORD **)(v0 + 104);
    v28 = 0;
    v29 = 0xE000000000000000;
    sub_1DC409730();
    v22 = v29;
    *(_QWORD *)(v0 + 56) = v28;
    *(_QWORD *)(v0 + 64) = v22;
    sub_1DC408B48();
    *(_QWORD *)(v0 + 72) = v1;
    sub_1DC409808();

    v23 = *(_QWORD *)(v0 + 64);
    *v21 = *(_QWORD *)(v0 + 56);
    v21[1] = v23;
    sub_1DC08CBF0(0, &qword_1EDB2AED8, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedGroup, (uint64_t (*)(void))sub_1DC12802C, MEMORY[0x1E0D5B9F8]);
    swift_storeEnumTagMultiPayload();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DC2764CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;

  v5[7] = a4;
  v5[8] = v4;
  v5[5] = a2;
  v5[6] = a3;
  v5[4] = a1;
  v5[9] = type metadata accessor for ForYouFeedGroup();
  v5[10] = swift_task_alloc();
  sub_1DC277708();
  v5[11] = swift_task_alloc();
  v5[12] = swift_task_alloc();
  sub_1DC277798(0, (unint64_t *)&qword_1EDB32310, sub_1DC27777C, (unint64_t *)&qword_1EDB282C8);
  v5[13] = v6;
  v5[14] = *(_QWORD *)(v6 - 8);
  v5[15] = swift_task_alloc();
  v7 = sub_1DC4010E4();
  v5[16] = v7;
  v5[17] = *(_QWORD *)(v7 - 8);
  v5[18] = swift_task_alloc();
  v5[19] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1DC2765E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  void (*v16)(uint64_t, unint64_t, uint64_t);
  uint64_t *v17;
  unsigned int (*v18)(uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v2 = *(_QWORD *)(v0 + 48);
  v1 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 40);
  v4 = OBJC_IVAR____TtC8StocksUI32YahooStockForYouFeedGroupEmitter_appConfiguration;
  *(_QWORD *)(v0 + 160) = OBJC_IVAR____TtC8StocksUI32YahooStockForYouFeedGroupEmitter_stockFeedService;
  *(_QWORD *)(v0 + 168) = v4;
  v5 = *(_QWORD *)(v1 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v5)
  {
    v7 = *(_QWORD *)(v0 + 144);
    v6 = *(_QWORD *)(v0 + 152);
    v37 = v2;
    v38 = v3;
    v9 = *(_QWORD *)(v0 + 128);
    v8 = *(_QWORD *)(v0 + 136);
    v10 = *(_QWORD *)(v0 + 104);
    v35 = *(_QWORD *)(v0 + 120);
    v36 = *(_QWORD *)(v0 + 112);
    v11 = v1;
    v12 = *(_QWORD *)(v0 + 96);
    v13 = type metadata accessor for StockForYouFeedGroup();
    *(_QWORD *)(v0 + 176) = v13;
    v14 = *(_QWORD *)(v13 - 8);
    v15 = v11 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
    v16 = *(void (**)(uint64_t, unint64_t, uint64_t))(v8 + 16);
    *(_QWORD *)(v0 + 184) = v16;
    v16(v7, v15, v9);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(v6, v7, v9);
    v17 = (uint64_t *)(v35 + *(int *)(v10 + 48));
    sub_1DC0CFE08(v38, v37, v11, v12);
    v18 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v36 + 48);
    if (v18(v12, 1, v10) == 1)
    {
      v19 = *(_QWORD *)(v0 + 104);
      v20 = v17;
      v21 = *(_QWORD *)(v0 + 88);
      sub_1DC3CBEC4(v38, v37, v11, v21);
      if (v18(v21, 1, v19) == 1)
      {
        v22 = *(_QWORD *)(v0 + 88);
        (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(v14 + 56))(*(_QWORD *)(v0 + 120), 1, 1, v13);
        *v20 = 0;
        v20[1] = 0;
        v20[2] = 0;
        sub_1DC0926D8(v22, (uint64_t (*)(_QWORD))sub_1DC277708);
      }
      else
      {
        v30 = *(_QWORD *)(v0 + 88);
        v31 = v30 + *(int *)(*(_QWORD *)(v0 + 104) + 48);
        sub_1DC092ED0(v30, *(_QWORD *)(v0 + 120), (uint64_t (*)(_QWORD))sub_1DC27777C);
        v32 = *(_QWORD *)(v31 + 16);
        *(_OWORD *)v20 = *(_OWORD *)v31;
        v20[2] = v32;
      }
      sub_1DC0926D8(*(_QWORD *)(v0 + 96), (uint64_t (*)(_QWORD))sub_1DC277708);
      v27 = *v20;
      v28 = v20[1];
      v29 = v20[2];
    }
    else
    {
      v25 = *(_QWORD *)(v0 + 96);
      v26 = (uint64_t *)(v25 + *(int *)(*(_QWORD *)(v0 + 104) + 48));
      sub_1DC092ED0(v25, *(_QWORD *)(v0 + 120), (uint64_t (*)(_QWORD))sub_1DC27777C);
      v27 = *v26;
      v28 = v26[1];
      v29 = v26[2];
      *v17 = *v26;
      v17[1] = v28;
      v17[2] = v29;
    }
    *(_QWORD *)(v0 + 200) = v28;
    *(_QWORD *)(v0 + 208) = v27;
    *(_QWORD *)(v0 + 192) = v29;
    v33 = (_QWORD *)(*(_QWORD *)(v0 + 64) + *(_QWORD *)(v0 + 160));
    sub_1DC0926D8(*(_QWORD *)(v0 + 120), (uint64_t (*)(_QWORD))sub_1DC27777C);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_project_boxed_opaque_existential_1(v33, v33[3]);
    *(_QWORD *)(v0 + 216) = sub_1DC400A0C();
    v34 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 224) = v34;
    *v34 = v0;
    v34[1] = sub_1DC276974;
    return sub_1DC402CC8();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v23 = *(_QWORD **)(v0 + 32);
    *v23 = 0x64656873696E6966;
    v23[1] = 0xE800000000000000;
    sub_1DC08CBF0(0, &qword_1EDB2AED8, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedGroup, (uint64_t (*)(void))sub_1DC12802C, MEMORY[0x1E0D5B9F8]);
    swift_storeEnumTagMultiPayload();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1DC276974()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 232) = v0;
  swift_task_dealloc();
  if (v0)
    sub_1DC0D04F0(*(_QWORD *)(v2 + 208));
  swift_release();
  return swift_task_switch();
}

uint64_t sub_1DC276A00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  void (*v14)(uint64_t, unint64_t, uint64_t);
  uint64_t *v15;
  unsigned int (*v16)(uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int8x16_t *v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  int8x16_t v58;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2 >= sub_1DC4005E0())
  {
    v20 = sub_1DC4005D4();
    if (v20 >= v2)
    {
      v24 = v1;
      goto LABEL_17;
    }
    v21 = v20;
    if (v20 < 0)
    {
      __break(1u);
    }
    else if (*(_QWORD *)(v1 + 16) >= (unint64_t)v20)
    {
      sub_1DC409A0C();
      swift_unknownObjectRetain_n();
      v22 = swift_dynamicCastClass();
      if (!v22)
      {
        swift_bridgeObjectRelease();
        v22 = MEMORY[0x1E0DEE9D8];
      }
      v23 = *(_QWORD *)(v22 + 16);
      swift_release();
      if (v23 == v21)
      {
        v24 = swift_dynamicCastClass();
        swift_bridgeObjectRelease();
        if (v24)
        {
LABEL_17:
          v25 = *(_QWORD *)(v0 + 208);
          v26 = *(int **)(v0 + 176);
          v27 = *(_QWORD *)(v0 + 80);
          (*(void (**)(uint64_t, _QWORD, _QWORD))(v0 + 184))(v27, *(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 128));
          v28 = v27 + v26[7];
          v29 = sub_1DC4073A8();
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v28, 1, 1, v29);
          *(_QWORD *)(v27 + v26[5]) = v24;
          *(_BYTE *)(v27 + v26[6]) = 1;
          swift_storeEnumTagMultiPayload();
          if (v25)
          {
            v30 = *(_QWORD *)(v0 + 192);
            v31 = *(_QWORD *)(v0 + 152);
            v32 = *(_QWORD *)(v0 + 128);
            v33 = *(_QWORD *)(v0 + 136);
            v34 = *(_QWORD *)(v0 + 80);
            v35 = *(_QWORD *)(v0 + 32);
            sub_1DC277798(0, (unint64_t *)&qword_1EDB2E040, (void (*)(uint64_t))type metadata accessor for ForYouFeedGroup, (unint64_t *)&qword_1EDB40100);
            v37 = (int8x16_t *)(v35 + *(int *)(v36 + 48));
            v58 = *(int8x16_t *)(v0 + 200);
            sub_1DC127F40(v34, v35);
            *v37 = vextq_s8(v58, v58, 8uLL);
            v37[1].i64[0] = v30;
            v37[1].i64[1] = (uint64_t)&type metadata for StockForYouFeedGroupEmitterCursor;
            sub_1DC0926D8(v34, (uint64_t (*)(_QWORD))type metadata accessor for ForYouFeedGroup);
            (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v31, v32);
          }
          else
          {
            v38 = *(_QWORD *)(v0 + 80);
            v39 = *(_QWORD *)(v0 + 32);
            (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 136) + 8))(*(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 128));
            sub_1DC092ED0(v38, v39, (uint64_t (*)(_QWORD))type metadata accessor for ForYouFeedGroup);
          }
          sub_1DC08CBF0(0, &qword_1EDB2AED8, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedGroup, (uint64_t (*)(void))sub_1DC12802C, MEMORY[0x1E0D5B9F8]);
          goto LABEL_23;
        }
        v24 = MEMORY[0x1E0DEE9D8];
LABEL_15:
        swift_bridgeObjectRelease();
        goto LABEL_17;
      }
LABEL_30:
      swift_bridgeObjectRelease();
      v52 = *(unsigned __int8 *)(*(_QWORD *)(sub_1DC4011BC() - 8) + 80);
      v24 = sub_1DC32B9B0(v1, v1 + ((v52 + 32) & ~v52), 0, (2 * v21) | 1);
      goto LABEL_15;
    }
    __break(1u);
    goto LABEL_30;
  }
  v3 = *(_QWORD *)(v0 + 208);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 136) + 8))(*(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 128));
  swift_bridgeObjectRelease();
  if (!v3)
  {
LABEL_22:
    v40 = *(_QWORD **)(v0 + 32);
    *v40 = 0x64656873696E6966;
    v40[1] = 0xE800000000000000;
    sub_1DC08CBF0(0, &qword_1EDB2AED8, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedGroup, (uint64_t (*)(void))sub_1DC12802C, MEMORY[0x1E0D5B9F8]);
LABEL_23:
    swift_storeEnumTagMultiPayload();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v4 = *(_QWORD *)(v0 + 192);
  if (!*(_QWORD *)(v4 + 16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_22;
  }
  v6 = *(_QWORD *)(v0 + 144);
  v5 = *(_QWORD *)(v0 + 152);
  v8 = *(_QWORD *)(v0 + 128);
  v7 = *(_QWORD *)(v0 + 136);
  v56 = *(_QWORD *)(v0 + 208);
  v57 = *(_QWORD *)(v0 + 200);
  v9 = *(_QWORD *)(v0 + 120);
  v55 = *(_QWORD *)(v0 + 112);
  v10 = *(_QWORD *)(v0 + 96);
  v11 = *(_QWORD *)(v0 + 104);
  v12 = type metadata accessor for StockForYouFeedGroup();
  *(_QWORD *)(v0 + 176) = v12;
  v53 = *(_QWORD *)(v12 - 8);
  v54 = v12;
  v13 = v4 + ((*(unsigned __int8 *)(v53 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80));
  v14 = *(void (**)(uint64_t, unint64_t, uint64_t))(v7 + 16);
  *(_QWORD *)(v0 + 184) = v14;
  v14(v6, v13, v8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v5, v6, v8);
  v15 = (uint64_t *)(v9 + *(int *)(v11 + 48));
  sub_1DC0CFE08(v56, v57, v4, v10);
  v16 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v55 + 48);
  if (v16(v10, 1, v11) == 1)
  {
    v17 = *(_QWORD *)(v0 + 104);
    v18 = *(_QWORD *)(v0 + 88);
    sub_1DC3CBEC4(v56, v57, v4, v18);
    if (v16(v18, 1, v17) == 1)
    {
      v19 = *(_QWORD *)(v0 + 88);
      (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(v53 + 56))(*(_QWORD *)(v0 + 120), 1, 1, v54);
      *v15 = 0;
      v15[1] = 0;
      v15[2] = 0;
      sub_1DC0926D8(v19, (uint64_t (*)(_QWORD))sub_1DC277708);
    }
    else
    {
      v47 = *(_QWORD *)(v0 + 88);
      v48 = v47 + *(int *)(*(_QWORD *)(v0 + 104) + 48);
      sub_1DC092ED0(v47, *(_QWORD *)(v0 + 120), (uint64_t (*)(_QWORD))sub_1DC27777C);
      v49 = *(_QWORD *)(v48 + 16);
      *(_OWORD *)v15 = *(_OWORD *)v48;
      v15[2] = v49;
    }
    sub_1DC0926D8(*(_QWORD *)(v0 + 96), (uint64_t (*)(_QWORD))sub_1DC277708);
    v44 = *v15;
    v45 = v15[1];
    v46 = v15[2];
  }
  else
  {
    v42 = *(_QWORD *)(v0 + 96);
    v43 = (uint64_t *)(v42 + *(int *)(*(_QWORD *)(v0 + 104) + 48));
    sub_1DC092ED0(v42, *(_QWORD *)(v0 + 120), (uint64_t (*)(_QWORD))sub_1DC27777C);
    v44 = *v43;
    v45 = v43[1];
    v46 = v43[2];
    *v15 = *v43;
    v15[1] = v45;
    v15[2] = v46;
  }
  *(_QWORD *)(v0 + 200) = v45;
  *(_QWORD *)(v0 + 208) = v44;
  *(_QWORD *)(v0 + 192) = v46;
  v50 = (_QWORD *)(*(_QWORD *)(v0 + 64) + *(_QWORD *)(v0 + 160));
  sub_1DC0926D8(*(_QWORD *)(v0 + 120), (uint64_t (*)(_QWORD))sub_1DC27777C);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_project_boxed_opaque_existential_1(v50, v50[3]);
  *(_QWORD *)(v0 + 216) = sub_1DC400A0C();
  v51 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 224) = v51;
  *v51 = v0;
  v51[1] = sub_1DC276974;
  return sub_1DC402CC8();
}

uint64_t sub_1DC277014()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 136) + 8))(*(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 128));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DC2770A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0 + OBJC_IVAR____TtC8StocksUI32YahooStockForYouFeedGroupEmitter_appConfiguration;
  v2 = sub_1DC40070C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtC8StocksUI32YahooStockForYouFeedGroupEmitter_config;
  sub_1DC0C9C18();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  sub_1DC0926D8(v0 + OBJC_IVAR____TtC8StocksUI32YahooStockForYouFeedGroupEmitter_knobs, (uint64_t (*)(_QWORD))type metadata accessor for StockForYouFeedGroupKnobs);
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC8StocksUI32YahooStockForYouFeedGroupEmitter_stockFeedService);
  return swift_deallocClassInstance();
}

uint64_t sub_1DC277140()
{
  return type metadata accessor for YahooStockForYouFeedGroupEmitter();
}

uint64_t type metadata accessor for YahooStockForYouFeedGroupEmitter()
{
  uint64_t result;

  result = qword_1F0350320;
  if (!qword_1F0350320)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1DC277184()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_1DC40070C();
  if (v0 <= 0x3F)
  {
    sub_1DC0C9C18();
    if (v1 <= 0x3F)
    {
      type metadata accessor for StockForYouFeedGroupKnobs();
      if (v2 <= 0x3F)
        swift_updateClassMetadata2();
    }
  }
}

uint64_t sub_1DC277230@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + OBJC_IVAR____TtC8StocksUI32YahooStockForYouFeedGroupEmitter_config;
  sub_1DC0C9C18();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
  type metadata accessor for ForYouFeedGroupConfig();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1DC277294(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v10;

  sub_1DC08CBF0(0, &qword_1EDB2AF80, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedServiceConfig, sub_1DC106C20, MEMORY[0x1E0D5C7A0]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v10 - v5;
  sub_1DC1E9298();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
  v7 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v8 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v8 + v7, v6, v3);
  return sub_1DC402CEC();
}

uint64_t sub_1DC277390(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1;
  sub_1DC277604();
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = v3;
  swift_retain();
  swift_retain();
  return sub_1DC402CEC();
}

uint64_t sub_1DC277404()
{
  sub_1DC0C9C18();
  return sub_1DC40742C();
}

uint64_t sub_1DC277438@<X0>(uint64_t *a1@<X8>)
{
  uint64_t inited;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1DC089DA4(0, &qword_1EDB40070, (uint64_t (*)(uint64_t))sub_1DC0CFB4C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DC40DC10;
  *(_QWORD *)(inited + 32) = 0x696669746E656469;
  *(_QWORD *)(inited + 40) = 0xEA00000000007265;
  sub_1DC0C9C18();
  v3 = sub_1DC40742C();
  *(_QWORD *)(inited + 72) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(inited + 48) = v3;
  *(_QWORD *)(inited + 56) = v4;
  sub_1DC0CF9B8(inited);
  sub_1DC277970(0);
  a1[3] = v5;
  a1[4] = sub_1DC080808(&qword_1F0350410, (uint64_t (*)(uint64_t))sub_1DC277970, MEMORY[0x1E0DB3C80]);
  __swift_allocate_boxed_opaque_existential_1(a1);
  return sub_1DC402878();
}

uint64_t sub_1DC277540()
{
  sub_1DC080808(&qword_1F03503D0, (uint64_t (*)(uint64_t))type metadata accessor for YahooStockForYouFeedGroupEmitter, (uint64_t)&unk_1DC41F208);
  return sub_1DC40286C();
}

uint64_t sub_1DC277580()
{
  return sub_1DC080808(&qword_1F03503C0, (uint64_t (*)(uint64_t))type metadata accessor for YahooStockForYouFeedGroupEmitter, (uint64_t)&unk_1DC41F1E0);
}

uint64_t sub_1DC2775AC()
{
  return sub_1DC080808(&qword_1F03503C8, (uint64_t (*)(uint64_t))type metadata accessor for YahooStockForYouFeedGroupEmitter, (uint64_t)&unk_1DC41F238);
}

uint64_t sub_1DC2775D8()
{
  return sub_1DC080808(&qword_1F03503D0, (uint64_t (*)(uint64_t))type metadata accessor for YahooStockForYouFeedGroupEmitter, (uint64_t)&unk_1DC41F208);
}

void sub_1DC277604()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB29678)
  {
    sub_1DC08CBF0(255, &qword_1EDB2AED8, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedGroup, (uint64_t (*)(void))sub_1DC12802C, MEMORY[0x1E0D5B9F8]);
    v0 = sub_1DC402DAC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB29678);
  }
}

uint64_t sub_1DC277678()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DC2776A4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v5 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_1DC17C744;
  return sub_1DC275958(a1, v5, v4);
}

void sub_1DC277708()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB32318)
  {
    sub_1DC277798(255, (unint64_t *)&qword_1EDB32310, sub_1DC27777C, (unint64_t *)&qword_1EDB282C8);
    v0 = sub_1DC4095A4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB32318);
  }
}

void sub_1DC27777C(uint64_t a1)
{
  sub_1DC089DA4(a1, &qword_1EDB27B08, (uint64_t (*)(uint64_t))type metadata accessor for StockForYouFeedGroup, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

void sub_1DC277798(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), unint64_t *a4)
{
  unint64_t TupleTypeMetadata2;
  uint64_t v7;

  if (!*a2)
  {
    a3(255);
    sub_1DC0D4B28(255, a4);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v7)
      atomic_store(TupleTypeMetadata2, a2);
  }
}

uint64_t sub_1DC27781C()
{
  uint64_t v0;
  uint64_t v1;

  sub_1DC08CBF0(0, &qword_1EDB2AF80, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedServiceConfig, sub_1DC106C20, MEMORY[0x1E0D5C7A0]);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_1DC27789C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  sub_1DC08CBF0(0, &qword_1EDB2AF80, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedServiceConfig, sub_1DC106C20, MEMORY[0x1E0D5C7A0]);
  v5 = *(unsigned __int8 *)(*(_QWORD *)(v4 - 8) + 80);
  v6 = v1 + ((v5 + 16) & ~v5);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1DC277A70;
  return sub_1DC2754F0(a1, v6);
}

unint64_t sub_1DC27792C()
{
  unint64_t result;

  result = qword_1F0350400;
  if (!qword_1F0350400)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC41F360, &type metadata for YahooStockForYouFeedGroupEmitter.Errors);
    atomic_store(result, (unint64_t *)&qword_1F0350400);
  }
  return result;
}

void sub_1DC277970(uint64_t a1)
{
  sub_1DC089DA4(a1, &qword_1F0350408, (uint64_t (*)(uint64_t))type metadata accessor for YahooStockForYouFeedGroupEmitter, MEMORY[0x1E0DB3C70]);
}

uint64_t storeEnumTagSinglePayload for YahooStockForYouFeedGroupEmitter.Errors(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1DC2779CC + 4 * byte_1DC41F190[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1DC2779EC + 4 * byte_1DC41F195[v4]))();
}

_BYTE *sub_1DC2779CC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1DC2779EC(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC2779F4(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC2779FC(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC277A04(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC277A0C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for YahooStockForYouFeedGroupEmitter.Errors()
{
  return &type metadata for YahooStockForYouFeedGroupEmitter.Errors;
}

unint64_t sub_1DC277A2C()
{
  unint64_t result;

  result = qword_1F0350418;
  if (!qword_1F0350418)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC41F338, &type metadata for YahooStockForYouFeedGroupEmitter.Errors);
    atomic_store(result, (unint64_t *)&qword_1F0350418);
  }
  return result;
}

uint64_t destroy for StockChartViewLayoutAttributes()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for StockChartViewLayoutAttributes(uint64_t a1, uint64_t a2)
{
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;

  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  v6 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v6;
  v7 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v7;
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for StockChartViewLayoutAttributes(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  a1[7] = a2[7];
  a1[8] = a2[8];
  a1[9] = a2[9];
  a1[10] = a2[10];
  a1[11] = a2[11];
  a1[12] = a2[12];
  a1[13] = a2[13];
  a1[14] = a2[14];
  a1[15] = a2[15];
  a1[16] = a2[16];
  a1[17] = a2[17];
  a1[18] = a2[18];
  a1[19] = a2[19];
  a1[20] = a2[20];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[21] = a2[21];
  a1[22] = a2[22];
  a1[23] = a2[23];
  a1[24] = a2[24];
  return a1;
}

__n128 __swift_memcpy200_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __n128 result;
  __int128 v9;
  __int128 v10;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v2 = *(_OWORD *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  v5 = *(_OWORD *)(a2 + 80);
  v6 = *(_OWORD *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 96) = v6;
  result = *(__n128 *)(a2 + 144);
  v9 = *(_OWORD *)(a2 + 160);
  v10 = *(_OWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 160) = v9;
  *(_OWORD *)(a1 + 176) = v10;
  *(__n128 *)(a1 + 144) = result;
  return result;
}

uint64_t assignWithTake for StockChartViewLayoutAttributes(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  v6 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v6;
  v7 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v7;
  v8 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v8;
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  return a1;
}

uint64_t getEnumTagSinglePayload for StockChartViewLayoutAttributes(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 200))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 160);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for StockChartViewLayoutAttributes(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 200) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 160) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 200) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for StockChartViewLayoutAttributes()
{
  return &type metadata for StockChartViewLayoutAttributes;
}

uint64_t sub_1DC277D5C()
{
  sub_1DC277DCC();
  return sub_1DC40625C();
}

unint64_t sub_1DC277D88()
{
  unint64_t result;

  result = qword_1F0350420;
  if (!qword_1F0350420)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC41F3C0, &type metadata for StockChartViewLayoutAttributes);
    atomic_store(result, (unint64_t *)&qword_1F0350420);
  }
  return result;
}

unint64_t sub_1DC277DCC()
{
  unint64_t result;

  result = qword_1F0350428;
  if (!qword_1F0350428)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC41F3F8, &type metadata for StockChartViewLayoutAttributes);
    atomic_store(result, (unint64_t *)&qword_1F0350428);
  }
  return result;
}

id sub_1DC277E10()
{
  return objc_msgSend(objc_allocWithZone((Class)sub_1DC402B6C()), sel_init);
}

uint64_t sub_1DC277E34(uint64_t a1, _QWORD *a2)
{
  uint64_t result;
  uint64_t v3;
  _BYTE v4[40];

  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1DC096268(0, &qword_1EDB3B460);
  result = sub_1DC402608();
  if (v3)
  {
    sub_1DC402B60();
    swift_unknownObjectRelease();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC277ED8(uint64_t a1, _QWORD *a2)
{
  uint64_t result;
  _BYTE v3[40];

  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1DC400B74();
  result = sub_1DC4025FC();
  if (result)
  {
    sub_1DC080808(&qword_1F0350448, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAEB58], MEMORY[0x1E0DAEB50]);
    sub_1DC402B60();
    swift_release();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC277F7C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC1315E8();
  v4 = v3;
  result = sub_1DC4025FC();
  if (result)
  {
    v6 = result;
    a2[3] = v4;
    result = sub_1DC080808(&qword_1EDB27568, (uint64_t (*)(uint64_t))sub_1DC1315E8, MEMORY[0x1E0DB8C68]);
    a2[4] = result;
    *a2 = v6;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC278008(_QWORD *a1)
{
  uint64_t result;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for ANFSceneActivityBridge();
  result = sub_1DC4025FC();
  if (!result)
    __break(1u);
  return result;
}

uint64_t sub_1DC278058()
{
  uint64_t result;

  type metadata accessor for ANFSceneActivityBridge();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = MEMORY[0x1E0DEE9D8];
  return result;
}

uint64_t sub_1DC278088(uint64_t a1, _QWORD *a2)
{
  uint64_t result;
  __int128 v3;
  uint64_t v4;
  _QWORD v5[4];

  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1DC096268(0, (unint64_t *)&unk_1EDB295C0);
  result = sub_1DC402608();
  if (v4)
  {
    sub_1DC097DD0(&v3, (uint64_t)v5);
    __swift_project_boxed_opaque_existential_1(v5, v5[3]);
    sub_1DC080808(qword_1EDB27CF8, (uint64_t (*)(uint64_t))type metadata accessor for ANFSceneActivityBridge, (uint64_t)&protocol conformance descriptor for ANFSceneActivityBridge);
    sub_1DC402B48();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v3);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC278168@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  __int128 v23[2];
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;

  v21 = a2;
  sub_1DC08CC60(0, (unint64_t *)&qword_1EDB29B50, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6C48]);
  v19 = *(_QWORD *)(v3 - 8);
  v20 = v3;
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v17 - v4;
  v6 = sub_1DC403AC0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC08CC60(0, (unint64_t *)&qword_1EDB29CB0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB75B0]);
  result = sub_1DC4025FC();
  if (!result)
  {
    __break(1u);
    goto LABEL_8;
  }
  v18 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB2C358);
  result = sub_1DC402608();
  if (!v29)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, (unint64_t *)&qword_1EDB29EE0);
  result = sub_1DC402608();
  v11 = v26;
  if (!v26)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v17 = v27;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, (unint64_t *)&unk_1EDB28C50);
  result = sub_1DC402608();
  if (!v25)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4018AC();
  result = sub_1DC4025FC();
  if (result)
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E0DADEF8], v6);
    v12 = sub_1DC4017EC();
    swift_release();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    sub_1DC0824D4((uint64_t)a1, (uint64_t)v23);
    type metadata accessor for StocksIntentHandler();
    v13 = swift_allocObject();
    swift_defaultActor_initialize();
    v22 = v18;
    type metadata accessor for StocksActivity(0);
    sub_1DC2736B0();
    sub_1DC40424C();
    (*(void (**)(uint64_t, char *, uint64_t))(v19 + 32))(v13 + OBJC_IVAR____TtC8StocksUI19StocksIntentHandler_navigator, v5, v20);
    sub_1DC097DD0(&v28, v13 + OBJC_IVAR____TtC8StocksUI19StocksIntentHandler_intentDeserializer);
    v14 = (_QWORD *)(v13 + OBJC_IVAR____TtC8StocksUI19StocksIntentHandler_commandCenter);
    v15 = v17;
    *v14 = v11;
    v14[1] = v15;
    sub_1DC097DD0(&v24, v13 + OBJC_IVAR____TtC8StocksUI19StocksIntentHandler_watchlistManager);
    *(_QWORD *)(v13 + OBJC_IVAR____TtC8StocksUI19StocksIntentHandler_tracker) = v12;
    sub_1DC097DD0(v23, v13 + OBJC_IVAR____TtC8StocksUI19StocksIntentHandler_resolver);
    result = sub_1DC080808((unint64_t *)&unk_1F0350438, (uint64_t (*)(uint64_t))type metadata accessor for StocksIntentHandler, (uint64_t)&unk_1DC411140);
    v16 = v21;
    *v21 = v13;
    v16[1] = result;
    return result;
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1DC2784F4(_QWORD *a1, _QWORD *a2)
{
  uint64_t result;
  uint64_t v4;
  _BYTE v5[40];

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for AppConfigurationRefreshManager();
  result = sub_1DC4025FC();
  if (!result)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    __break(1u);
    goto LABEL_10;
  }
  sub_1DC080808(&qword_1EDB39918, (uint64_t (*)(uint64_t))type metadata accessor for AppConfigurationRefreshManager, (uint64_t)&unk_1DC41A690);
  sub_1DC402B48();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1DC096268(0, &qword_1EDB29A00);
  result = sub_1DC402608();
  if (!v4)
    goto LABEL_8;
  sub_1DC402B48();
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1DC096268(0, &qword_1EDB3B460);
  sub_1DC402608();
  sub_1DC402B48();
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for StockMetadataRefreshManager();
  result = sub_1DC4025FC();
  if (!result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  sub_1DC080808(&qword_1EDB37D70, (uint64_t (*)(uint64_t))type metadata accessor for StockMetadataRefreshManager, (uint64_t)&unk_1DC42861C);
  sub_1DC402B48();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for SceneStateManagerBridge();
  result = sub_1DC4025FC();
  if (result)
  {
    sub_1DC080808((unint64_t *)&unk_1EDB34CA8, (uint64_t (*)(uint64_t))type metadata accessor for SceneStateManagerBridge, (uint64_t)&protocol conformance descriptor for SceneStateManagerBridge);
    sub_1DC402B48();
    swift_release();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1DC2787C0(_QWORD *a1, _QWORD *a2)
{
  uint64_t result;
  uint64_t v4;
  _BYTE v5[40];

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1DC096268(0, &qword_1EDB2A670);
  result = sub_1DC402608();
  if (v4)
  {
    sub_1DC402B9C();
    swift_unknownObjectRelease();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC278884(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  _QWORD v25[4];

  v4 = sub_1DC406FF4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1DC096268(0, &qword_1EDB28C40);
  result = sub_1DC402608();
  if (v24)
  {
    sub_1DC097DD0(&v23, (uint64_t)v25);
    __swift_project_boxed_opaque_existential_1(v25, v25[3]);
    v9 = sub_1DC400994();
    v10 = *(_QWORD *)(v9 + 16);
    if (v10)
    {
      v21 = v5;
      v22 = v4;
      swift_bridgeObjectRetain();
      v11 = (uint64_t *)(v9 + 40);
      v12 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      do
      {
        v14 = *v11;
        if (*v11)
        {
          v15 = *(v11 - 1);
          swift_bridgeObjectRetain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v12 = sub_1DC108BBC(0, v12[2] + 1, 1, v12);
          v17 = v12[2];
          v16 = v12[3];
          if (v17 >= v16 >> 1)
            v12 = sub_1DC108BBC((_QWORD *)(v16 > 1), v17 + 1, 1, v12);
          v12[2] = v17 + 1;
          v13 = &v12[2 * v17];
          v13[4] = v15;
          v13[5] = v14;
        }
        v11 += 2;
        --v10;
      }
      while (v10);
      swift_bridgeObjectRelease();
      v5 = v21;
      v4 = v22;
    }
    else
    {
      v12 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    swift_bridgeObjectRelease();
    if (!v12[2])
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v12 = sub_1DC108BBC(0, 1, 1, v12);
      v19 = v12[2];
      v18 = v12[3];
      if (v19 >= v18 >> 1)
        v12 = sub_1DC108BBC((_QWORD *)(v18 > 1), v19 + 1, 1, v12);
      v12[2] = v19 + 1;
      v20 = &v12[2 * v19];
      v20[4] = 28261;
      v20[5] = 0xE200000000000000;
    }
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1DC406FE8();
    sub_1DC080808(&qword_1EDB2AC80, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52560], MEMORY[0x1E0D52558]);
    sub_1DC4070FC();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC278B38@<X0>(uint64_t *a1@<X8>)
{
  return sub_1DC278B60((uint64_t (*)(_QWORD))type metadata accessor for LaunchPresentationConfigurationProvider, sub_1DC27935C, a1);
}

uint64_t sub_1DC278B4C@<X0>(uint64_t *a1@<X8>)
{
  return sub_1DC278B60((uint64_t (*)(_QWORD))type metadata accessor for PresentationOperationManagerDataStore, sub_1DC279340, a1);
}

uint64_t sub_1DC278B60@<X0>(uint64_t (*a1)(_QWORD)@<X1>, uint64_t (*a2)(void)@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v5 = a1(0);
  v6 = swift_allocObject();
  a3[3] = v5;
  result = a2();
  a3[4] = result;
  *a3 = v6;
  return result;
}

uint64_t sub_1DC278BB4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB28BC0);
  result = sub_1DC402608();
  if (!v13)
  {
    __break(1u);
    goto LABEL_6;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC0821D4(0, &qword_1EDB3F810);
  result = sub_1DC4025FC();
  if (!result)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v5 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, (unint64_t *)&unk_1EDB28D48);
  result = sub_1DC402608();
  if (v11)
  {
    v6 = type metadata accessor for AppLaunchUpsellDataStore();
    v7 = swift_allocObject();
    *(_QWORD *)(v7 + 56) = 0;
    *(_BYTE *)(v7 + 64) = 1;
    *(_QWORD *)(v7 + 72) = 0;
    *(_QWORD *)(v7 + 80) = 0;
    v8 = v7 + OBJC_IVAR____TtC8StocksUI24AppLaunchUpsellDataStore_fetchedAppLaunchUpsellLastSeenDate;
    v9 = sub_1DC3FFFEC();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
    sub_1DC097DD0(&v12, v7 + 16);
    *(_QWORD *)(v7 + OBJC_IVAR____TtC8StocksUI24AppLaunchUpsellDataStore_fcUserInfo) = v5;
    sub_1DC097DD0(&v10, v7 + OBJC_IVAR____TtC8StocksUI24AppLaunchUpsellDataStore_privateDataPollingService);
    a2[3] = v6;
    result = sub_1DC080808(&qword_1EDB35630, (uint64_t (*)(uint64_t))type metadata accessor for AppLaunchUpsellDataStore, (uint64_t)&unk_1DC42D2E8);
    a2[4] = result;
    *a2 = v7;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1DC278D8C(uint64_t a1, _QWORD *a2)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t RegistrationStartupTask;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;

  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1DC096268(0, (unint64_t *)&unk_1EDB28C90);
  result = sub_1DC402608();
  if (!v16)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v4 = type metadata accessor for ComputeAdsEnabledStartupTask();
  v5 = swift_allocObject();
  v6 = v5 + OBJC_IVAR____TtC8StocksUI28ComputeAdsEnabledStartupTask_group;
  if (qword_1EDB294E0 != -1)
    swift_once();
  v7 = sub_1DC402890();
  v8 = __swift_project_value_buffer(v7, (uint64_t)qword_1EDB294C8);
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
  v9(v6, v8, v7);
  sub_1DC097DD0(&v15, v5 + OBJC_IVAR____TtC8StocksUI28ComputeAdsEnabledStartupTask_featureAvailability);
  v16 = v4;
  v17 = sub_1DC080808(&qword_1EDB38338, (uint64_t (*)(uint64_t))type metadata accessor for ComputeAdsEnabledStartupTask, (uint64_t)&unk_1DC42DA98);
  *(_QWORD *)&v15 = v5;
  sub_1DC402AA0();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v15);
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1DC096268(0, &qword_1EDB27470);
  result = sub_1DC402608();
  if (!v16)
    goto LABEL_10;
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1DC0995E8(0, &qword_1EDB2A4A8);
  result = sub_1DC4025FC();
  if (!result)
  {
LABEL_11:
    __break(1u);
    return result;
  }
  v10 = result;
  RegistrationStartupTask = type metadata accessor for BackgroundFetchRegistrationStartupTask();
  v12 = swift_allocObject();
  v13 = OBJC_IVAR____TtC8StocksUI38BackgroundFetchRegistrationStartupTask_group;
  if (qword_1EDB29508 != -1)
    swift_once();
  v14 = __swift_project_value_buffer(v7, (uint64_t)qword_1EDB294E8);
  v9(v12 + v13, v14, v7);
  sub_1DC097DD0(&v15, v12 + OBJC_IVAR____TtC8StocksUI38BackgroundFetchRegistrationStartupTask_appConfigurationManager);
  *(_QWORD *)(v12 + OBJC_IVAR____TtC8StocksUI38BackgroundFetchRegistrationStartupTask_backgroundFetchScheduler) = v10;
  v16 = RegistrationStartupTask;
  v17 = sub_1DC080808(&qword_1EDB3D940, (uint64_t (*)(uint64_t))type metadata accessor for BackgroundFetchRegistrationStartupTask, (uint64_t)&unk_1DC429730);
  *(_QWORD *)&v15 = v12;
  sub_1DC402AA0();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v15);
}

uint64_t sub_1DC279058(_QWORD *a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;

  v2 = sub_1DC402AC4();
  MEMORY[0x1E0C80A78](v2);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB28C60);
  result = sub_1DC402608();
  if (!v10)
  {
    __break(1u);
    goto LABEL_6;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, (unint64_t *)&unk_1EDB28CA0);
  result = sub_1DC402608();
  if (!v8)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB27470);
  result = sub_1DC402608();
  if (v6)
  {
    type metadata accessor for StockMetadataRefreshManager();
    v4 = swift_allocObject();
    sub_1DC080808((unint64_t *)&unk_1EDB295B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4198], MEMORY[0x1E0DB41A8]);
    sub_1DC113198();
    sub_1DC080808((unint64_t *)&qword_1EDB3F6B8, (uint64_t (*)(uint64_t))sub_1DC113198, MEMORY[0x1E0DEAF38]);
    sub_1DC40964C();
    sub_1DC132B04(0, (unint64_t *)&unk_1EDB29430, (uint64_t (*)(uint64_t))sub_1DC113BF0, (uint64_t (*)(uint64_t, _QWORD, uint64_t, _QWORD))MEMORY[0x1E0DB3898]);
    swift_allocObject();
    *(_QWORD *)(v4 + 136) = sub_1DC4026B0();
    sub_1DC097DD0(&v9, v4 + 16);
    sub_1DC097DD0(&v7, v4 + 56);
    sub_1DC097DD0(&v5, v4 + 96);
    return v4;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1DC2792A4(_QWORD *a1)
{
  uint64_t result;
  uint64_t v2;
  __int128 v3;
  uint64_t v4;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, (unint64_t *)&unk_1EDB2C348);
  result = sub_1DC402608();
  if (v4)
  {
    type metadata accessor for StocksV2UserActivitySerializer();
    v2 = swift_allocObject();
    sub_1DC097DD0(&v3, v2 + 16);
    return v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC279340()
{
  return sub_1DC080808(&qword_1EDB3D598, (uint64_t (*)(uint64_t))type metadata accessor for PresentationOperationManagerDataStore, (uint64_t)&unk_1DC41C858);
}

uint64_t sub_1DC27935C()
{
  return sub_1DC080808(&qword_1EDB3DCE0, (uint64_t (*)(uint64_t))type metadata accessor for LaunchPresentationConfigurationProvider, (uint64_t)&unk_1DC4214B8);
}

uint64_t sub_1DC279378(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v8 = result;
    sub_1DC27941C(a1, a2);
    if (v10)
    {
      sub_1DC279FC8(v9, v10, v8, a4);
      swift_release();
      return swift_bridgeObjectRelease();
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_1DC27941C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  id *v17;
  uint64_t v18;
  uint64_t v19;
  id *v20;
  uint64_t v21;
  uint64_t v22;
  id *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id *v32;
  uint64_t v33;
  uint64_t v34;
  int EnumCaseMultiPayload;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  id *v39;
  id *v40;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint8_t *v49;
  uint64_t v50;
  int v51;
  uint64_t v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint8_t *v68;
  id *v69;
  NSObject *v70;
  os_log_type_t v71;
  uint8_t *v72;
  uint64_t v73;
  id v74;
  uint64_t v75;
  unint64_t v76;
  unint64_t v77;
  id v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t (*v82)(_QWORD);
  char v83;
  uint64_t v84;
  void (*v85)(id *, uint64_t);
  int v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  NSObject *v91;
  os_log_type_t v92;
  uint8_t *v93;
  uint64_t v94;
  id v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  unint64_t v99;
  uint8_t *v100;
  id v101;
  uint64_t v102;
  void (*v103)(id *, uint64_t);
  uint64_t v104;
  uint64_t v105;
  void (*v106)(id *, uint64_t);
  uint64_t v107;
  id *v108;
  id *v109;
  id *v110;
  id *v111;
  uint8_t *v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;

  v113 = a2;
  v114 = (char *)a1;
  sub_1DC154164();
  v3 = v2;
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v107 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v107 - v7;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v107 - v10;
  sub_1DC27A264();
  v13 = v12;
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v107 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v112 = (uint8_t *)type metadata accessor for StocksAudioTrack();
  MEMORY[0x1E0C80A78](v112);
  v17 = (id *)((char *)&v107 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v18);
  v20 = (id *)((char *)&v107 - v19);
  MEMORY[0x1E0C80A78](v21);
  v23 = (id *)((char *)&v107 - v22);
  MEMORY[0x1E0C80A78](v24);
  v109 = (id *)((char *)&v107 - v25);
  MEMORY[0x1E0C80A78](v26);
  v111 = (id *)((char *)&v107 - v27);
  MEMORY[0x1E0C80A78](v28);
  v108 = (id *)((char *)&v107 - v29);
  MEMORY[0x1E0C80A78](v30);
  v32 = (id *)((char *)&v107 - v31);
  v33 = (uint64_t)&v15[*(int *)(v13 + 48)];
  v34 = (uint64_t)v114;
  v114 = v15;
  sub_1DC0990BC(v34, (uint64_t)v15, (uint64_t (*)(_QWORD))sub_1DC154164);
  sub_1DC0990BC(v113, v33, (uint64_t (*)(_QWORD))sub_1DC154164);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    sub_1DC0990BC(v33, (uint64_t)v8, (uint64_t (*)(_QWORD))sub_1DC154164);
    if (swift_getEnumCaseMultiPayload())
    {
      sub_1DC0926D8((uint64_t)v8, (uint64_t (*)(_QWORD))sub_1DC27A2C4);
    }
    else
    {
      v108 = (id *)v3;
      v113 = v33;
      sub_1DC0990BC((uint64_t)v114, (uint64_t)v5, (uint64_t (*)(_QWORD))sub_1DC154164);
      sub_1DC27A2C4();
      v107 = *(_QWORD *)&v5[*(int *)(v55 + 48)];
      v56 = *(int *)(v55 + 64);
      v111 = (id *)&v5[v56];
      v109 = (id *)&v8[v56];
      sub_1DC154230((uint64_t)v5, (uint64_t)v23);
      sub_1DC154230((uint64_t)v8, (uint64_t)v20);
      v57 = *v23;
      v58 = objc_msgSend(*v23, sel_identifier);
      v59 = sub_1DC408A4C();
      v61 = v60;

      v62 = objc_msgSend(*v20, sel_identifier);
      v63 = sub_1DC408A4C();
      v65 = v64;

      if (v59 == v63 && v61 == v65)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        v83 = sub_1DC4099E8();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v83 & 1) == 0)
        {
          if ((*((_BYTE *)v23 + *((int *)v112 + 8)) & 2) != 0)
          {
            v101 = objc_msgSend(v57, sel_identifier);
            sub_1DC408A4C();

            sub_1DC0926D8((uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for StocksAudioTrack);
            sub_1DC0926D8((uint64_t)v23, (uint64_t (*)(_QWORD))type metadata accessor for StocksAudioTrack);
            v102 = sub_1DC401C18();
            v103 = *(void (**)(id *, uint64_t))(*(_QWORD *)(v102 - 8) + 8);
            v103(v109, v102);
            v103(v111, v102);
            sub_1DC0926D8(v113, (uint64_t (*)(_QWORD))sub_1DC154164);
            sub_1DC0926D8((uint64_t)v114, (uint64_t (*)(_QWORD))sub_1DC154164);
            return v107;
          }
          sub_1DC0990BC((uint64_t)v23, (uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for StocksAudioTrack);
          v91 = sub_1DC403F4C();
          v92 = sub_1DC408FE0();
          if (os_log_type_enabled(v91, v92))
          {
            v93 = (uint8_t *)swift_slowAlloc();
            v94 = swift_slowAlloc();
            v116 = v94;
            v112 = (uint8_t *)v23;
            v110 = v20;
            *(_DWORD *)v93 = 136446210;
            v95 = objc_msgSend(*v17, sel_identifier);
            v96 = (uint64_t)v17;
            v97 = sub_1DC408A4C();
            v99 = v98;

            v115 = sub_1DC2A9C74(v97, v99, &v116);
            sub_1DC4095B0();
            swift_bridgeObjectRelease();
            sub_1DC0926D8(v96, (uint64_t (*)(_QWORD))type metadata accessor for StocksAudioTrack);
            _os_log_impl(&dword_1DC07D000, v91, v92, "AudioListeningProgressRecorder: not saving listening progress for %{public}s because it's disabled", v93, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x1DF0CAC88](v94, -1, -1);
            MEMORY[0x1DF0CAC88](v93, -1, -1);

            sub_1DC0926D8((uint64_t)v110, (uint64_t (*)(_QWORD))type metadata accessor for StocksAudioTrack);
            v100 = v112;
          }
          else
          {

            sub_1DC0926D8((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for StocksAudioTrack);
            sub_1DC0926D8((uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for StocksAudioTrack);
            v100 = (uint8_t *)v23;
          }
          sub_1DC0926D8((uint64_t)v100, (uint64_t (*)(_QWORD))type metadata accessor for StocksAudioTrack);
          v104 = v113;
          v105 = sub_1DC401C18();
          v106 = *(void (**)(id *, uint64_t))(*(_QWORD *)(v105 - 8) + 8);
          v106(v109, v105);
          v106(v111, v105);
          v80 = v104;
          goto LABEL_22;
        }
      }
      sub_1DC0926D8((uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for StocksAudioTrack);
      sub_1DC0926D8((uint64_t)v23, (uint64_t (*)(_QWORD))type metadata accessor for StocksAudioTrack);
      v84 = sub_1DC401C18();
      v85 = *(void (**)(id *, uint64_t))(*(_QWORD *)(v84 - 8) + 8);
      v85(v109, v84);
      v85(v111, v84);
      v33 = v113;
    }
    goto LABEL_25;
  }
  if (EnumCaseMultiPayload != 1)
  {
    v51 = swift_getEnumCaseMultiPayload();
    if (!v51)
    {
      sub_1DC27A2C4();
      goto LABEL_16;
    }
    if (v51 == 1)
    {
      sub_1DC27A3D0();
LABEL_16:
      v37 = *(_QWORD *)&v114[*(int *)(v52 + 48)];
      v66 = &v114[*(int *)(v52 + 64)];
      sub_1DC154230((uint64_t)v114, (uint64_t)v32);
      v67 = sub_1DC401C18();
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v67 - 8) + 8))(v66, v67);
      v68 = v112;
      sub_1DC0926D8(v33, (uint64_t (*)(_QWORD))sub_1DC154164);
      if ((*((_BYTE *)v32 + *((int *)v68 + 8)) & 2) == 0)
      {
        v69 = v108;
        sub_1DC154230((uint64_t)v32, (uint64_t)v108);
        v70 = sub_1DC403F4C();
        v71 = sub_1DC408FE0();
        if (os_log_type_enabled(v70, v71))
        {
          v72 = (uint8_t *)swift_slowAlloc();
          v73 = swift_slowAlloc();
          *(_DWORD *)v72 = 136446210;
          v116 = v73;
          v74 = objc_msgSend(*v69, sel_identifier);
          v75 = sub_1DC408A4C();
          v77 = v76;

          v115 = sub_1DC2A9C74(v75, v77, &v116);
          sub_1DC4095B0();
          swift_bridgeObjectRelease();
          sub_1DC0926D8((uint64_t)v69, (uint64_t (*)(_QWORD))type metadata accessor for StocksAudioTrack);
          _os_log_impl(&dword_1DC07D000, v70, v71, "AudioListeningProgressRecorder: not saving listening progress for %{public}s because it's disabled", v72, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1DF0CAC88](v73, -1, -1);
          MEMORY[0x1DF0CAC88](v72, -1, -1);

          return 0;
        }

        v82 = (uint64_t (*)(_QWORD))type metadata accessor for StocksAudioTrack;
        v81 = (uint64_t)v69;
LABEL_31:
        sub_1DC0926D8(v81, v82);
        return 0;
      }
      v78 = objc_msgSend(*v32, sel_identifier);
      sub_1DC408A4C();

      sub_1DC0926D8((uint64_t)v32, (uint64_t (*)(_QWORD))type metadata accessor for StocksAudioTrack);
      return v37;
    }
LABEL_25:
    v86 = swift_getEnumCaseMultiPayload();
    if (v86)
    {
      if (v86 != 1)
      {
LABEL_30:
        v82 = (uint64_t (*)(_QWORD))sub_1DC154164;
        v81 = v33;
        goto LABEL_31;
      }
      sub_1DC27A3D0();
    }
    else
    {
      sub_1DC27A2C4();
    }
    v88 = &v114[*(int *)(v87 + 64)];
    v89 = sub_1DC401C18();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v89 - 8) + 8))(v88, v89);
    sub_1DC0926D8((uint64_t)v114, (uint64_t (*)(_QWORD))type metadata accessor for StocksAudioTrack);
    goto LABEL_30;
  }
  sub_1DC0990BC(v33, (uint64_t)v11, (uint64_t (*)(_QWORD))sub_1DC154164);
  sub_1DC27A3D0();
  v37 = *(_QWORD *)&v11[*(int *)(v36 + 48)];
  v38 = &v11[*(int *)(v36 + 64)];
  v39 = v111;
  sub_1DC154230((uint64_t)v11, (uint64_t)v111);
  if ((*((_BYTE *)v39 + *((int *)v112 + 8)) & 2) == 0)
  {
    v40 = v109;
    sub_1DC0990BC((uint64_t)v39, (uint64_t)v109, (uint64_t (*)(_QWORD))type metadata accessor for StocksAudioTrack);
    v41 = sub_1DC403F4C();
    v42 = sub_1DC408FE0();
    if (os_log_type_enabled(v41, v42))
    {
      v43 = (uint8_t *)swift_slowAlloc();
      v44 = swift_slowAlloc();
      v113 = v44;
      v112 = v43;
      *(_DWORD *)v43 = 136446210;
      v116 = v44;
      v110 = (id *)(v43 + 4);
      v45 = objc_msgSend(*v40, sel_identifier);
      v46 = sub_1DC408A4C();
      v48 = v47;

      v115 = sub_1DC2A9C74(v46, v48, &v116);
      sub_1DC4095B0();
      swift_bridgeObjectRelease();
      sub_1DC0926D8((uint64_t)v109, (uint64_t (*)(_QWORD))type metadata accessor for StocksAudioTrack);
      v49 = v112;
      _os_log_impl(&dword_1DC07D000, v41, v42, "AudioListeningProgressRecorder: not saving listening progress for %{public}s because it's disabled", v112, 0xCu);
      v50 = v113;
      swift_arrayDestroy();
      MEMORY[0x1DF0CAC88](v50, -1, -1);
      MEMORY[0x1DF0CAC88](v49, -1, -1);
    }
    else
    {
      sub_1DC0926D8((uint64_t)v40, (uint64_t (*)(_QWORD))type metadata accessor for StocksAudioTrack);
    }

    sub_1DC0926D8((uint64_t)v39, (uint64_t (*)(_QWORD))type metadata accessor for StocksAudioTrack);
    v79 = sub_1DC401C18();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v79 - 8) + 8))(v38, v79);
    v80 = v33;
LABEL_22:
    sub_1DC0926D8(v80, (uint64_t (*)(_QWORD))sub_1DC154164);
    v81 = (uint64_t)v114;
    v82 = (uint64_t (*)(_QWORD))sub_1DC154164;
    goto LABEL_31;
  }
  v53 = objc_msgSend(*v39, sel_identifier);
  sub_1DC408A4C();

  sub_1DC0926D8((uint64_t)v39, (uint64_t (*)(_QWORD))type metadata accessor for StocksAudioTrack);
  v54 = sub_1DC401C18();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v54 - 8) + 8))(v38, v54);
  sub_1DC0926D8(v33, (uint64_t (*)(_QWORD))sub_1DC154164);
  sub_1DC0926D8((uint64_t)v114, (uint64_t (*)(_QWORD))sub_1DC154164);
  return v37;
}

uint64_t sub_1DC279FC8(uint64_t a1, unint64_t a2, uint64_t a3, _QWORD *a4)
{
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v14;

  swift_bridgeObjectRetain_n();
  v7 = sub_1DC403F4C();
  v8 = sub_1DC408FE0();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = swift_slowAlloc();
    v10 = swift_slowAlloc();
    v14 = v10;
    *(_DWORD *)v9 = 136315394;
    sub_1DC27A220();
    v11 = sub_1DC408974();
    sub_1DC2A9C74(v11, v12, &v14);
    sub_1DC4095B0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 12) = 2082;
    swift_bridgeObjectRetain();
    sub_1DC2A9C74(a1, a2, &v14);
    sub_1DC4095B0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1DC07D000, v7, v8, "AudioListeningProgressRecorder: saving listening progress %s for %{public}s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1DF0CAC88](v10, -1, -1);
    MEMORY[0x1DF0CAC88](v9, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  __swift_project_boxed_opaque_existential_1(a4, a4[3]);
  return sub_1DC40238C();
}

uint64_t sub_1DC27A1C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  v1 = v0 + OBJC_IVAR____TtC8StocksUI30AudioListeningProgressRecorder_logger;
  v2 = sub_1DC403F64();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_1DC27A218()
{
  return type metadata accessor for AudioListeningProgressRecorder();
}

unint64_t sub_1DC27A220()
{
  unint64_t result;

  result = qword_1F0350450;
  if (!qword_1F0350450)
  {
    result = MEMORY[0x1DF0CAB8C](MEMORY[0x1E0DEB078], MEMORY[0x1E0DEB070]);
    atomic_store(result, (unint64_t *)&qword_1F0350450);
  }
  return result;
}

void sub_1DC27A264()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1F0352960)
  {
    sub_1DC154164();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1F0352960);
  }
}

void sub_1DC27A2C4()
{
  unint64_t TupleTypeMetadata;
  uint64_t v1;

  if (!qword_1F0352080)
  {
    MEMORY[0x1E0C80A78](0);
    type metadata accessor for StocksAudioTrack();
    sub_1DC401C18();
    TupleTypeMetadata = swift_getTupleTypeMetadata();
    if (!v1)
      atomic_store(TupleTypeMetadata, (unint64_t *)&qword_1F0352080);
  }
}

void sub_1DC27A3D0()
{
  unint64_t TupleTypeMetadata3;
  uint64_t v1;

  if (!qword_1F0352090)
  {
    type metadata accessor for StocksAudioTrack();
    sub_1DC401C18();
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1)
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_1F0352090);
  }
}

id sub_1DC27A448()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for NetworkReachability()), sel_init);
  qword_1EDB30F08 = (uint64_t)result;
  return result;
}

uint64_t type metadata accessor for NetworkReachability()
{
  return objc_opt_self();
}

StocksUI::ToolbarBehavior_optional __swiftcall ToolbarBehavior.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  StocksUI::ToolbarBehavior_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1DC4098A4();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1)
    v5 = 1;
  else
    v5 = 2;
  if (!v3)
    v5 = 0;
  *v2 = v5;
  return result;
}

uint64_t ToolbarBehavior.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x697370616C6C6F63;
  else
    return 0x6465786966;
}

uint64_t sub_1DC27A5B4(char *a1, char *a2)
{
  return sub_1DC159564(*a1, *a2);
}

unint64_t sub_1DC27A5C4()
{
  unint64_t result;

  result = qword_1F0350458;
  if (!qword_1F0350458)
  {
    result = MEMORY[0x1DF0CAB8C](&protocol conformance descriptor for ToolbarBehavior, &type metadata for ToolbarBehavior);
    atomic_store(result, (unint64_t *)&qword_1F0350458);
  }
  return result;
}

uint64_t sub_1DC27A608()
{
  sub_1DC409AC0();
  sub_1DC408AF4();
  swift_bridgeObjectRelease();
  return sub_1DC409AF0();
}

uint64_t sub_1DC27A688()
{
  sub_1DC408AF4();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DC27A6E4()
{
  sub_1DC409AC0();
  sub_1DC408AF4();
  swift_bridgeObjectRelease();
  return sub_1DC409AF0();
}

StocksUI::ToolbarBehavior_optional sub_1DC27A760(Swift::String *a1)
{
  return ToolbarBehavior.init(rawValue:)(*a1);
}

void sub_1DC27A76C(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x6465786966;
  if (*v1)
    v2 = 0x697370616C6C6F63;
  v3 = 0xE500000000000000;
  if (*v1)
    v3 = 0xEA0000000000676ELL;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1DC27A7AC()
{
  sub_1DC27A940();
  return sub_1DC408C74();
}

uint64_t sub_1DC27A7EC()
{
  sub_1DC27A940();
  return sub_1DC408C68();
}

uint64_t sub_1DC27A834()
{
  sub_1DC27A940();
  return sub_1DC408C5C();
}

uint64_t storeEnumTagSinglePayload for ToolbarBehavior(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1DC27A8C0 + 4 * byte_1DC41F4D9[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1DC27A8F4 + 4 * asc_1DC41F4D4[v4]))();
}

uint64_t sub_1DC27A8F4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC27A8FC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC27A904);
  return result;
}

uint64_t sub_1DC27A910(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC27A918);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1DC27A91C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC27A924(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ToolbarBehavior()
{
  return &type metadata for ToolbarBehavior;
}

unint64_t sub_1DC27A940()
{
  unint64_t result;

  result = qword_1F0350460;
  if (!qword_1F0350460)
  {
    result = MEMORY[0x1DF0CAB8C](&protocol conformance descriptor for ToolbarBehavior, &type metadata for ToolbarBehavior);
    atomic_store(result, (unint64_t *)&qword_1F0350460);
  }
  return result;
}

uint64_t sub_1DC27A984(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v16;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 0;
  v3 = sub_1DC408A4C();
  v5 = v4;
  if (v3 == sub_1DC408A4C() && v5 == v6)
  {
    v9 = 0;
LABEL_17:
    swift_bridgeObjectRelease_n();
    return v9;
  }
  v8 = sub_1DC4099E8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v9 = 0;
  if ((v8 & 1) == 0)
  {
    v10 = v2 - 1;
    while (1)
    {
      if (v10 == v9)
        return 0;
      v11 = sub_1DC408A4C();
      v13 = v12;
      if (v11 == sub_1DC408A4C() && v13 == v14)
        break;
      v16 = sub_1DC4099E8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      ++v9;
      if ((v16 & 1) != 0)
        return v9;
    }
    ++v9;
    goto LABEL_17;
  }
  return v9;
}

uint64_t sub_1DC27AACC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t (*v5)(void);
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;

  sub_1DC0CC0A4(0, (unint64_t *)&qword_1EDB29D98, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60]);
  v1 = v0;
  v2 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v4 = (char *)&v9 - v3;
  v5 = MEMORY[0x1E0DBC790];
  sub_1DC0CC0A4(0, (unint64_t *)&qword_1EDB2AB40, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790]);
  sub_1DC0D4244((unint64_t *)&unk_1EDB2AB30, (unint64_t *)&qword_1EDB2AB40, (uint64_t (*)(uint64_t, _QWORD *))v5, MEMORY[0x1E0DBC7C8]);
  sub_1DC408EB4();
  if ((v11 & 1) == 0)
    return v10;
  sub_1DC408E90();
  sub_1DC408ED8();
  if (v12 == v10)
    return 0;
  v6 = MEMORY[0x1E0DB7B88];
  while (1)
  {
    v7 = sub_1DC408EF0();
    (*(void (**)(char *))(v2 + 16))(v4);
    ((void (*)(uint64_t *, _QWORD))v7)(&v10, 0);
    sub_1DC0D4244((unint64_t *)&unk_1EDB29D70, (unint64_t *)&qword_1EDB29D98, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60], v6);
    LOBYTE(v7) = sub_1DC4089F8();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    if ((v7 & 1) != 0)
      break;
    sub_1DC408EE4();
    sub_1DC408ED8();
    if (v12 == v10)
      return 0;
  }
  return v12;
}

uint64_t sub_1DC27ACDC(uint64_t a1)
{
  return sub_1DC27ADCC(a1, (uint64_t (*)(uint64_t))sub_1DC157A5C, (uint64_t (*)(uint64_t))sub_1DC157E68, (unint64_t *)&unk_1EDB2AB00, &qword_1EDB29D48);
}

uint64_t sub_1DC27AD00(uint64_t a1, uint64_t a2)
{
  return sub_1DC27AD14(a1, a2, (uint64_t (*)(_QWORD))MEMORY[0x1E0DAF270], (void (*)(void))sub_1DC27C550);
}

uint64_t sub_1DC27AD14(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD), void (*a4)(void))
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *(_QWORD *)(a2 + 16);
  if (!v4)
    return 0;
  v7 = *(_QWORD *)(a3(0) - 8);
  v8 = a2 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  v9 = *(_QWORD *)(v7 + 72);
  a4();
  v10 = 0;
  while ((sub_1DC4089F8() & 1) == 0)
  {
    ++v10;
    v8 += v9;
    if (v4 == v10)
      return 0;
  }
  return v10;
}

uint64_t sub_1DC27ADCC(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t (*a3)(uint64_t), unint64_t *a4, unint64_t *a5)
{
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  unint64_t *v13;
  uint64_t v14;
  unint64_t *v16;
  uint64_t v17;
  char v18;
  uint64_t v19;

  v16 = a5;
  v8 = a2(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v16 - v11;
  ((void (*)(_QWORD, __n128))a3)(0, v10);
  sub_1DC080808(a4, a3, MEMORY[0x1E0DBC7C8]);
  sub_1DC408EB4();
  if ((v18 & 1) == 0)
    return v17;
  v13 = v16;
  sub_1DC408E90();
  while (1)
  {
    sub_1DC408ED8();
    if (v19 == v17)
      return 0;
    v14 = sub_1DC408EF0();
    (*(void (**)(char *))(v9 + 16))(v12);
    ((void (*)(uint64_t *, _QWORD))v14)(&v17, 0);
    sub_1DC080808(v13, a2, MEMORY[0x1E0DB7B88]);
    LOBYTE(v14) = sub_1DC4089F8();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
    if ((v14 & 1) != 0)
      break;
    sub_1DC408EE4();
  }
  return v19;
}

uint64_t sub_1DC27AF88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;

  sub_1DC0FF574(0);
  v1 = v0;
  v2 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0C3C68();
  sub_1DC080808((unint64_t *)&unk_1EDB29CF0, (uint64_t (*)(uint64_t))sub_1DC0C3C68, MEMORY[0x1E0DB7B98]);
  sub_1DC408EB4();
  if ((v10 & 1) == 0)
    return v9;
  sub_1DC408E90();
  sub_1DC408ED8();
  if (v11 == v9)
    return 0;
  v5 = MEMORY[0x1E0DB6F08];
  while (1)
  {
    v6 = sub_1DC408EF0();
    (*(void (**)(char *))(v2 + 16))(v4);
    ((void (*)(uint64_t *, _QWORD))v6)(&v9, 0);
    sub_1DC080808((unint64_t *)&unk_1EDB29C00, (uint64_t (*)(uint64_t))sub_1DC0FF574, v5);
    LOBYTE(v6) = sub_1DC4089F8();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    if ((v6 & 1) != 0)
      break;
    sub_1DC408EE4();
    sub_1DC408ED8();
    if (v11 == v9)
      return 0;
  }
  return v11;
}

uint64_t sub_1DC27B168(uint64_t a1)
{
  return sub_1DC27ADCC(a1, (uint64_t (*)(uint64_t))sub_1DC27C56C, (uint64_t (*)(uint64_t))sub_1DC27C634, &qword_1F0350490, &qword_1F0350498);
}

uint64_t sub_1DC27B204(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t result;
  unint64_t v7;
  void (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  void (*v14)(id, uint64_t, uint64_t);
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(id, uint64_t, uint64_t);
  id v21;
  void *v22;
  uint64_t v23;
  char v24;
  char v25;
  id v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(id, uint64_t, uint64_t);
  _QWORD v32[3];
  uint64_t v33;
  uint64_t v34;
  uint64_t v35[5];

  v5 = a3 + 16;
  swift_beginAccess();
  result = MEMORY[0x1DF0CAD78](v5);
  if (result)
  {
    v7 = result;
    v29 = a2;
    v8 = *(void (**)(uint64_t))(result + OBJC_IVAR____TtC8StocksUI19DateRangePickerView_onChange);
    if (v8)
    {
      swift_retain();
      v8(a1);
      sub_1DC0E81D0((uint64_t)v8);
    }
    v30 = a1;
    v9 = v7 + OBJC_IVAR____TtC8StocksUI19DateRangePickerView_styler;
    swift_beginAccess();
    sub_1DC0824D4(v9, (uint64_t)v32);
    v10 = v33;
    v11 = v34;
    __swift_project_boxed_opaque_existential_1(v32, v33);
    v12 = objc_msgSend((id)v7, sel_traitCollection);
    v13 = *(_QWORD *)(v11 + 8);
    v14 = *(void (**)(id, uint64_t, uint64_t))(v13 + 8);
    v35[3] = v10;
    v35[4] = v11;
    __swift_allocate_boxed_opaque_existential_1(v35);
    v14(v12, v10, v13);

    __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);
    v31 = (void (*)(id, uint64_t, uint64_t))v7;
    v28 = OBJC_IVAR____TtC8StocksUI19DateRangePickerView_segmentedControl;
    v15 = *(void **)(v7 + OBJC_IVAR____TtC8StocksUI19DateRangePickerView_segmentedControl);
    v16 = sub_1DC404930();
    v17 = v16;
    if ((unint64_t)v16 >> 62)
    {
      if (v16 < 0)
        v15 = (void *)v16;
      else
        v15 = (void *)(v16 & 0xFFFFFFFFFFFFFF8);
      swift_bridgeObjectRetain();
      v18 = sub_1DC409850();
      if (!v18)
        goto LABEL_16;
    }
    else
    {
      v18 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v18)
        goto LABEL_16;
    }
    if (v18 < 1)
    {
      __break(1u);
      goto LABEL_26;
    }
    v19 = 0;
    v20 = *(void (**)(id, uint64_t, uint64_t))(v11 + 32);
    do
    {
      if ((v17 & 0xC000000000000001) != 0)
        v21 = (id)MEMORY[0x1DF0C9FBC](v19, v17);
      else
        v21 = *(id *)(v17 + 8 * v19 + 32);
      v22 = v21;
      ++v19;
      v20(v21, v10, v11);

    }
    while (v18 != v19);
LABEL_16:
    swift_bridgeObjectRelease_n();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 40))(v29, v10, v11);
    v14 = v31;
    v15 = *(void **)((char *)v31 + v28);
    v23 = sub_1DC404948();
    v7 = sub_1DC27AD14(v30, v23, (uint64_t (*)(_QWORD))MEMORY[0x1E0DAE0F8], (void (*)(void))sub_1DC27C534);
    v25 = v24;
    swift_bridgeObjectRelease();
    if ((v25 & 1) != 0)
    {

      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
    }
    result = sub_1DC404930();
    v12 = (id)result;
    if ((result & 0xC000000000000001) == 0)
    {
      if ((v7 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (v7 < *(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        v26 = *(id *)(result + 8 * v7 + 32);
LABEL_21:
        v27 = v26;
        swift_bridgeObjectRelease();
        objc_msgSend(v27, sel_frame);
        objc_msgSend(v15, sel_convertRect_toCoordinateSpace_, v14);
        sub_1DC409280();
        sub_1DC27C3C0(1);

        return __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
      }
      __break(1u);
      return result;
    }
LABEL_26:
    v26 = (id)MEMORY[0x1DF0C9FBC](v7, v12);
    goto LABEL_21;
  }
  return result;
}

uint64_t sub_1DC27B508()
{
  char *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  objc_class *v9;
  double v10;
  double v11;
  double v12;
  double v13;
  void *v14;
  uint64_t result;
  double v16;
  double v17;
  double v19;
  double v20;
  double v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  char v25;
  id v26;
  void *v27;
  objc_super v28;

  v1 = v0;
  sub_1DC27C6FC();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1DC4002BC();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (objc_class *)type metadata accessor for DateRangePickerView();
  v28.receiver = v0;
  v28.super_class = v9;
  objc_msgSendSuper2(&v28, sel_layoutSubviews);
  objc_msgSend(v0, sel_contentSize);
  v11 = v10;
  v13 = v12;
  v14 = *(void **)&v0[OBJC_IVAR____TtC8StocksUI19DateRangePickerView_segmentedControl];
  result = (uint64_t)objc_msgSend(v14, sel_frame);
  if (v11 != v17 || v13 != v16)
  {
    objc_msgSend(v1, sel_contentSize);
    v20 = v19;
    objc_msgSend(v1, sel_contentSize);
    objc_msgSend(v14, sel_setFrame_, 0.0, 0.0, v20, v21);
    sub_1DC40490C();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
      return sub_1DC27C750((uint64_t)v4);
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
    v22 = sub_1DC404948();
    v23 = sub_1DC27AD14((uint64_t)v8, v22, (uint64_t (*)(_QWORD))MEMORY[0x1E0DAE0F8], (void (*)(void))sub_1DC27C534);
    v25 = v24;
    swift_bridgeObjectRelease();
    if ((v25 & 1) != 0)
      return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    result = sub_1DC404930();
    if ((result & 0xC000000000000001) == 0)
    {
      if ((v23 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (v23 < *(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        v26 = *(id *)(result + 8 * v23 + 32);
LABEL_12:
        v27 = v26;
        swift_bridgeObjectRelease();
        objc_msgSend(v27, sel_frame);
        objc_msgSend(v14, sel_convertRect_toCoordinateSpace_, v1);
        sub_1DC409280();
        sub_1DC27C3C0(0);

        return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      }
      __break(1u);
      return result;
    }
    v26 = (id)MEMORY[0x1DF0C9FBC](v23, result);
    goto LABEL_12;
  }
  return result;
}

uint64_t sub_1DC27B79C(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  void (*v9)(id, uint64_t, uint64_t);
  uint64_t *boxed_opaque_existential_1;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v18[5];
  _QWORD v19[3];
  uint64_t v20;
  uint64_t v21;
  objc_super v22;

  v2 = v1;
  v22.receiver = v2;
  v22.super_class = (Class)type metadata accessor for DateRangePickerView();
  objc_msgSendSuper2(&v22, sel_traitCollectionDidChange_, a1);
  v4 = (uint64_t)v2 + OBJC_IVAR____TtC8StocksUI19DateRangePickerView_styler;
  swift_beginAccess();
  sub_1DC0824D4(v4, (uint64_t)v19);
  v5 = v20;
  v6 = v21;
  __swift_project_boxed_opaque_existential_1(v19, v20);
  v7 = objc_msgSend(v2, sel_traitCollection);
  v8 = *(_QWORD *)(v6 + 8);
  v9 = *(void (**)(id, uint64_t, uint64_t))(v8 + 8);
  v18[3] = v5;
  v18[4] = v6;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v18);
  v9(v7, v5, v8);

  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v18[-1] - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t *, uint64_t, __n128))(v15 + 16))(v14, boxed_opaque_existential_1, v5, v12);
  sub_1DC27C78C((uint64_t)v14, (uint64_t)v2, v5, v6);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
}

id sub_1DC27B96C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DateRangePickerView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for DateRangePickerView()
{
  return objc_opt_self();
}

uint64_t sub_1DC27BAE4()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[2];

  sub_1DC27C6FC();
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)v10 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC40490C();
  v3 = sub_1DC4002BC();
  v4 = *(_QWORD *)(v3 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
    sub_1DC27C750((uint64_t)v2);
    return 0;
  }
  else
  {
    v6 = ChartRange.accessibilityLabel.getter();
    v8 = v7;
    (*(void (**)(char *, uint64_t))(v4 + 8))(v2, v3);
    v10[0] = v6;
    v10[1] = v8;
    sub_1DC1790B0();
    v5 = sub_1DC4095E0();
    swift_bridgeObjectRelease();
  }
  return v5;
}

uint64_t sub_1DC27BBF4()
{
  unsigned int (*v0)(char *, uint64_t, uint64_t);
  unsigned int (*v1)(char *, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  void *v18;
  unsigned int (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  uint64_t result;
  id v30;
  void *v31;
  void (*v32)(uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  unsigned int (*v37)(char *, uint64_t, uint64_t);

  v1 = v0;
  sub_1DC27C6FC();
  MEMORY[0x1E0C80A78](v2);
  v4 = (unint64_t)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v36 - v6;
  v8 = sub_1DC4002BC();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v36 - v13;
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v36 - v16;
  v18 = *(void **)((char *)v0 + OBJC_IVAR____TtC8StocksUI19DateRangePickerView_segmentedControl);
  sub_1DC40490C();
  v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
  if (v19(v7, 1, v8) != 1)
  {
    v36 = v14;
    v37 = v1;
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v17, v7, v8);
    v20 = sub_1DC404948();
    v21 = sub_1DC27AD14((uint64_t)v17, v20, (uint64_t (*)(_QWORD))MEMORY[0x1E0DAE0F8], (void (*)(void))sub_1DC27C534);
    v23 = v22;
    swift_bridgeObjectRelease();
    if ((v23 & 1) != 0 || (v24 = *(_QWORD *)(sub_1DC404948() + 16), swift_bridgeObjectRelease(), v21 >= v24 - 1))
    {
      (*(void (**)(char *, uint64_t))(v9 + 8))(v17, v8);
      goto LABEL_15;
    }
    sub_1DC404948();
    swift_bridgeObjectRelease();
    v25 = sub_1DC404948();
    if (v21 < -1)
    {
      __break(1u);
    }
    else
    {
      v4 = v25;
      v24 = (uint64_t)v36;
      v19 = v37;
      if ((unint64_t)(v21 + 1) < *(_QWORD *)(v25 + 16))
      {
        (*(void (**)(char *, unint64_t, uint64_t))(v9 + 16))(v36, v25+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(_QWORD *)(v9 + 72) * (v21 + 1), v8);
        swift_bridgeObjectRelease();
        sub_1DC404924();
        v26 = sub_1DC404948();
        v4 = sub_1DC27AD14(v24, v26, (uint64_t (*)(_QWORD))MEMORY[0x1E0DAE0F8], (void (*)(void))sub_1DC27C534);
        v28 = v27;
        swift_bridgeObjectRelease();
        if ((v28 & 1) != 0)
        {
LABEL_13:
          v32 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
          v32(v24, v8);
          return ((uint64_t (*)(char *, uint64_t))v32)(v17, v8);
        }
        result = sub_1DC404930();
        v11 = (char *)result;
        if ((result & 0xC000000000000001) == 0)
        {
          if ((v4 & 0x8000000000000000) != 0)
          {
            __break(1u);
          }
          else if (v4 < *(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            v30 = *(id *)(result + 8 * v4 + 32);
LABEL_12:
            v31 = v30;
            swift_bridgeObjectRelease();
            objc_msgSend(v31, sel_frame);
            objc_msgSend(v18, sel_convertRect_toCoordinateSpace_, v19);
            sub_1DC409280();
            sub_1DC27C3C0(1);

            goto LABEL_13;
          }
          __break(1u);
          return result;
        }
LABEL_24:
        v30 = (id)MEMORY[0x1DF0C9FBC](v4, v11);
        goto LABEL_12;
      }
    }
    __break(1u);
    goto LABEL_24;
  }
  sub_1DC27C750((uint64_t)v7);
LABEL_15:
  v33 = sub_1DC404948();
  v34 = *(_QWORD *)(v33 + 16);
  if (v34)
  {
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 16))(v4, v33+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(_QWORD *)(v9 + 72) * (v34 - 1), v8);
    v35 = 0;
  }
  else
  {
    v35 = 1;
  }
  (*(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v4, v35, 1, v8);
  swift_bridgeObjectRelease();
  if (v19((char *)v4, 1, v8) == 1)
    return sub_1DC27C750(v4);
  (*(void (**)(char *, unint64_t, uint64_t))(v9 + 32))(v11, v4, v8);
  sub_1DC404924();
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_1DC27BFE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  void *v18;
  unsigned int (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  uint64_t result;
  id v30;
  void *v31;
  void (*v32)(uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;

  v1 = v0;
  sub_1DC27C6FC();
  MEMORY[0x1E0C80A78](v2);
  v4 = (unint64_t)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v35 - v6;
  v8 = sub_1DC4002BC();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v35 - v13;
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v35 - v16;
  v18 = *(void **)(v0 + OBJC_IVAR____TtC8StocksUI19DateRangePickerView_segmentedControl);
  sub_1DC40490C();
  v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
  if (v19(v7, 1, v8) != 1)
  {
    v35 = v14;
    v36 = v1;
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v17, v7, v8);
    v20 = sub_1DC404948();
    v21 = sub_1DC27AD14((uint64_t)v17, v20, (uint64_t (*)(_QWORD))MEMORY[0x1E0DAE0F8], (void (*)(void))sub_1DC27C534);
    v23 = v22;
    swift_bridgeObjectRelease();
    if ((v23 & 1) != 0 || (sub_1DC404948(), swift_bridgeObjectRelease(), v21 <= 0))
    {
      (*(void (**)(char *, uint64_t))(v9 + 8))(v17, v8);
      goto LABEL_14;
    }
    sub_1DC404948();
    swift_bridgeObjectRelease();
    v24 = v21 - 1;
    v25 = sub_1DC404948();
    if ((unint64_t)(v21 - 1) >= *(_QWORD *)(v25 + 16))
    {
      __break(1u);
    }
    else
    {
      v20 = (uint64_t)v35;
      (*(void (**)(char *, unint64_t, uint64_t))(v9 + 16))(v35, v25+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(_QWORD *)(v9 + 72) * v24, v8);
      swift_bridgeObjectRelease();
      sub_1DC404924();
      v26 = sub_1DC404948();
      v4 = sub_1DC27AD14(v20, v26, (uint64_t (*)(_QWORD))MEMORY[0x1E0DAE0F8], (void (*)(void))sub_1DC27C534);
      v28 = v27;
      swift_bridgeObjectRelease();
      v24 = v36;
      if ((v28 & 1) != 0)
      {
LABEL_12:
        v32 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
        v32(v20, v8);
        return ((uint64_t (*)(char *, uint64_t))v32)(v17, v8);
      }
      result = sub_1DC404930();
      v11 = (char *)result;
      if ((result & 0xC000000000000001) == 0)
      {
        if ((v4 & 0x8000000000000000) != 0)
        {
          __break(1u);
        }
        else if (v4 < *(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          v30 = *(id *)(result + 8 * v4 + 32);
LABEL_11:
          v31 = v30;
          swift_bridgeObjectRelease();
          objc_msgSend(v31, sel_frame);
          objc_msgSend(v18, sel_convertRect_toCoordinateSpace_, v24);
          sub_1DC409280();
          sub_1DC27C3C0(1);

          goto LABEL_12;
        }
        __break(1u);
        return result;
      }
    }
    v30 = (id)MEMORY[0x1DF0C9FBC](v4, v11);
    goto LABEL_11;
  }
  sub_1DC27C750((uint64_t)v7);
LABEL_14:
  v33 = sub_1DC404948();
  if (*(_QWORD *)(v33 + 16))
  {
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 16))(v4, v33 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80)), v8);
    v34 = 0;
  }
  else
  {
    v34 = 1;
  }
  (*(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v4, v34, 1, v8);
  swift_bridgeObjectRelease();
  if (v19((char *)v4, 1, v8) == 1)
    return sub_1DC27C750(v4);
  (*(void (**)(char *, unint64_t, uint64_t))(v9 + 32))(v11, v4, v8);
  sub_1DC404924();
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

id sub_1DC27C3C0(char a1)
{
  void *v1;
  double v3;
  double v4;
  double v5;
  double v6;
  id result;
  double v8;
  double v9;
  CGRect v11;
  CGRect v12;
  CGRect v13;
  CGRect v14;

  objc_msgSend(v1, sel_bounds);
  CGRectGetWidth(v11);
  objc_msgSend(v1, sel_bounds);
  CGRectGetHeight(v12);
  objc_msgSend(v1, sel_adjustedContentInset);
  objc_msgSend(v1, sel_contentSize);
  objc_msgSend(v1, sel_bounds);
  CGRectGetWidth(v13);
  objc_msgSend(v1, sel_contentSize);
  objc_msgSend(v1, sel_bounds);
  CGRectGetHeight(v14);
  sub_1DC4018F4();
  v4 = v3;
  sub_1DC4018F4();
  v6 = v5;
  result = objc_msgSend(v1, sel_contentOffset);
  if (v4 != v9 || v6 != v8)
    return objc_msgSend(v1, sel_setContentOffset_animated_, a1 & 1, v4, v6);
  return result;
}

uint64_t sub_1DC27C534()
{
  return sub_1DC080808(&qword_1EDB28B70, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAE0F8], MEMORY[0x1E0DAE108]);
}

uint64_t sub_1DC27C550()
{
  return sub_1DC080808(&qword_1EDB28E38, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF270], MEMORY[0x1E0DAF280]);
}

void sub_1DC27C56C()
{
  uint64_t (*v0)(uint64_t);
  uint64_t (*v1)(uint64_t);
  unint64_t v2;
  uint64_t v3;

  if (!qword_1F03514B0)
  {
    sub_1DC402218();
    v0 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D57CF8];
    sub_1DC401C48();
    v1 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D57190];
    sub_1DC080808(&qword_1F0350480, v0, MEMORY[0x1E0D57CC8]);
    sub_1DC080808(&qword_1F03514C0, v1, MEMORY[0x1E0D57158]);
    v2 = sub_1DC4047B0();
    if (!v3)
      atomic_store(v2, (unint64_t *)&qword_1F03514B0);
  }
}

void sub_1DC27C634()
{
  uint64_t (*v0)(uint64_t);
  uint64_t (*v1)(uint64_t);
  unint64_t v2;
  uint64_t v3;

  if (!qword_1F0350488)
  {
    sub_1DC402218();
    v0 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D57CF8];
    sub_1DC401C48();
    v1 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D57190];
    sub_1DC080808(&qword_1F0350480, v0, MEMORY[0x1E0D57CC8]);
    sub_1DC080808(&qword_1F03514C0, v1, MEMORY[0x1E0D57158]);
    v2 = sub_1DC406D48();
    if (!v3)
      atomic_store(v2, (unint64_t *)&qword_1F0350488);
  }
}

void sub_1DC27C6FC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB28B80)
  {
    sub_1DC4002BC();
    v0 = sub_1DC4095A4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB28B80);
  }
}

uint64_t sub_1DC27C750(uint64_t a1)
{
  uint64_t v2;

  sub_1DC27C6FC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DC27C78C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *boxed_opaque_existential_1;
  uint64_t v8;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;

  v11 = a3;
  v12 = a4;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v10);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 32))(boxed_opaque_existential_1, a1, a3);
  v8 = a2 + OBJC_IVAR____TtC8StocksUI19DateRangePickerView_styler;
  swift_beginAccess();
  __swift_destroy_boxed_opaque_existential_1(v8);
  sub_1DC097DD0(&v10, v8);
  return swift_endAccess();
}

uint64_t sub_1DC27C81C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[16] = a1;
  v2[17] = a2;
  v3 = sub_1DC4010E4();
  v2[18] = v3;
  v2[19] = *(_QWORD *)(v3 - 8);
  v2[20] = swift_task_alloc();
  v4 = type metadata accessor for StockForYouFeedGroup();
  v2[21] = v4;
  v2[22] = *(_QWORD *)(v4 - 8);
  v2[23] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1DC27C8A4()
{
  uint64_t v0;
  _QWORD *v1;

  sub_1DC08CBF0(0, &qword_1EDB2AF80, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedServiceConfig, sub_1DC106C20, MEMORY[0x1E0D5C7A0]);
  *(_QWORD *)(v0 + 192) = sub_1DC407BA0();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 200) = v1;
  *v1 = v0;
  v1[1] = sub_1DC27C930;
  return sub_1DC402CC8();
}

uint64_t sub_1DC27C930()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 208) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_release();
  return swift_task_switch();
}

uint64_t sub_1DC27C99C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t (*v22)(void);
  uint64_t *v23;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v1 = (uint64_t)(v0 + 2);
  sub_1DC0CE13C((uint64_t)(v0 + 3), (uint64_t)(v0 + 11));
  v2 = v0[14];
  sub_1DC285C90((uint64_t)(v0 + 11));
  if (v2)
  {
    v3 = v0[8];
    v4 = *(_QWORD *)(v3 + 16);
    v5 = MEMORY[0x1E0DEE9D8];
    if (v4)
    {
      v25 = v0[9];
      v6 = (int *)v0[21];
      v29 = v0[22];
      v30 = MEMORY[0x1E0DEE9D8];
      v7 = v0[19];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1DC2AD7A0(0, v4, 0);
      v8 = v3 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
      v27 = *(_QWORD *)(v7 + 72);
      v28 = v7;
      v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
      v9 = v30;
      do
      {
        v10 = v0[23];
        v11 = v0[20];
        v12 = v0[18];
        v26(v11, v8, v12);
        v26(v10, v11, v12);
        v13 = v5;
        v14 = v10 + v6[7];
        v15 = sub_1DC4073A8();
        v16 = v14;
        v5 = v13;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v16, 1, 1, v15);
        *(_QWORD *)(v10 + v6[5]) = v13;
        *(_BYTE *)(v10 + v6[6]) = 0;
        (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v11, v12);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1DC2AD7A0(0, *(_QWORD *)(v9 + 16) + 1, 1);
          v9 = v30;
        }
        v18 = *(_QWORD *)(v9 + 16);
        v17 = *(_QWORD *)(v9 + 24);
        if (v18 >= v17 >> 1)
        {
          sub_1DC2AD7A0(v17 > 1, v18 + 1, 1);
          v9 = v30;
        }
        v19 = v0[23];
        *(_QWORD *)(v9 + 16) = v18 + 1;
        sub_1DC092ED0(v19, v9+ ((*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80))+ *(_QWORD *)(v29 + 72) * v18, (uint64_t (*)(_QWORD))type metadata accessor for StockForYouFeedGroup);
        v8 += v27;
        --v4;
      }
      while (v4);
      swift_bridgeObjectRelease();
      v20 = v25;
      v1 = (uint64_t)(v0 + 2);
    }
    else
    {
      v20 = swift_bridgeObjectRetain();
      v9 = MEMORY[0x1E0DEE9D8];
    }
    v23 = (uint64_t *)v0[16];
    *v23 = v20;
    v23[1] = v5;
    v23[2] = v9;
    v23[3] = (uint64_t)&type metadata for StockForYouFeedGroupEmitterCursor;
    sub_1DC231868(v1);
    swift_task_dealloc();
    swift_task_dealloc();
    v22 = (uint64_t (*)(void))v0[1];
  }
  else
  {
    sub_1DC285CEC();
    swift_allocError();
    *v21 = 0;
    swift_willThrow();
    sub_1DC231868((uint64_t)(v0 + 2));
    swift_task_dealloc();
    swift_task_dealloc();
    v22 = (uint64_t (*)(void))v0[1];
  }
  return v22();
}

uint64_t sub_1DC27CC3C()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DC27CC84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;

  v3[40] = a2;
  v3[41] = a3;
  v3[39] = a1;
  v4 = type metadata accessor for StockForYouFeedGroup();
  v3[42] = v4;
  v3[43] = *(_QWORD *)(v4 - 8);
  v3[44] = swift_task_alloc();
  sub_1DC27777C(0);
  v3[45] = swift_task_alloc();
  v3[46] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1DC27CD18()
{
  uint64_t v0;
  _QWORD *v1;

  *(_QWORD *)(v0 + 376) = sub_1DC4078AC();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 384) = v1;
  *v1 = v0;
  v1[1] = sub_1DC27CD88;
  return sub_1DC402CC8();
}

uint64_t sub_1DC27CD88()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 392) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_release();
  return swift_task_switch();
}

uint64_t sub_1DC27CDF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  _QWORD *v21;
  uint64_t v23;

  v2 = *(_QWORD *)(v0 + 360);
  v1 = *(_QWORD *)(v0 + 368);
  v3 = *(_QWORD *)(v0 + 344);
  v23 = *(_QWORD *)(v0 + 336);
  v5 = *(_QWORD *)(v0 + 240);
  v4 = *(_QWORD *)(v0 + 248);
  *(_QWORD *)(v0 + 400) = v5;
  *(_QWORD *)(v0 + 408) = v4;
  v6 = *(_QWORD *)(v0 + 256);
  *(_QWORD *)(v0 + 416) = v6;
  v7 = sub_1DC0CFC14(v1, v5, v4, v6);
  v9 = v8;
  v11 = v10;
  sub_1DC0990BC(v1, v2, (uint64_t (*)(_QWORD))sub_1DC27777C);
  v12 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v2, 1, v23);
  v13 = *(_QWORD *)(v0 + 360);
  if (v12 == 1)
  {
    sub_1DC0D04F0(v7);
    sub_1DC0926D8(v13, (uint64_t (*)(_QWORD))sub_1DC27777C);
LABEL_7:
    *(_QWORD *)(v0 + 424) = sub_1DC4078DC();
    v21 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 432) = v21;
    *v21 = v0;
    v21[1] = sub_1DC27D0D4;
    return sub_1DC402CC8();
  }
  v14 = *(_QWORD *)(v0 + 352);
  v15 = *(_QWORD *)(v0 + 336);
  sub_1DC092ED0(*(_QWORD *)(v0 + 360), v14, (uint64_t (*)(_QWORD))type metadata accessor for StockForYouFeedGroup);
  if (!*(_QWORD *)(*(_QWORD *)(v14 + *(int *)(v15 + 20)) + 16))
  {
    sub_1DC0926D8(*(_QWORD *)(v0 + 352), (uint64_t (*)(_QWORD))type metadata accessor for StockForYouFeedGroup);
    sub_1DC0D04F0(v7);
    goto LABEL_7;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v16 = *(_QWORD *)(v0 + 368);
  v17 = *(_QWORD *)(v0 + 352);
  v18 = *(_QWORD *)(v0 + 312);
  if (v7)
  {
    sub_1DC277798(0, (unint64_t *)&qword_1EDB2E040, (void (*)(uint64_t))type metadata accessor for ForYouFeedGroup, (unint64_t *)&qword_1EDB40100);
    v20 = (uint64_t *)(v18 + *(int *)(v19 + 48));
    sub_1DC0990BC(v17, v18, (uint64_t (*)(_QWORD))type metadata accessor for StockForYouFeedGroup);
    type metadata accessor for ForYouFeedGroup();
    swift_storeEnumTagMultiPayload();
    *v20 = v7;
    v20[1] = v9;
    v20[2] = v11;
    v20[3] = (uint64_t)&type metadata for StockForYouFeedGroupEmitterCursor;
    sub_1DC0926D8(v17, (uint64_t (*)(_QWORD))type metadata accessor for StockForYouFeedGroup);
    sub_1DC0926D8(v16, (uint64_t (*)(_QWORD))sub_1DC27777C);
  }
  else
  {
    sub_1DC0926D8(*(_QWORD *)(v0 + 368), (uint64_t (*)(_QWORD))sub_1DC27777C);
    sub_1DC092ED0(v17, v18, (uint64_t (*)(_QWORD))type metadata accessor for StockForYouFeedGroup);
    type metadata accessor for ForYouFeedGroup();
    swift_storeEnumTagMultiPayload();
  }
  sub_1DC08CBF0(0, &qword_1EDB2AED8, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedGroup, (uint64_t (*)(void))sub_1DC12802C, MEMORY[0x1E0D5B9F8]);
  swift_storeEnumTagMultiPayload();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DC27D0D4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 440) = v0;
  swift_task_dealloc();
  swift_release();
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_task_switch();
}

uint64_t sub_1DC27D16C()
{
  uint64_t v0;
  __int128 v1;
  __int128 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  _QWORD *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  if (*(_QWORD *)(v0 + 16))
  {
    v1 = *(_OWORD *)(v0 + 64);
    *(_OWORD *)(v0 + 120) = *(_OWORD *)(v0 + 48);
    *(_OWORD *)(v0 + 136) = v1;
    *(_QWORD *)(v0 + 152) = *(_QWORD *)(v0 + 80);
    v2 = *(_OWORD *)(v0 + 32);
    *(_OWORD *)(v0 + 88) = *(_OWORD *)(v0 + 16);
    *(_OWORD *)(v0 + 104) = v2;
    sub_1DC0CE13C(v0 + 96, v0 + 160);
    v4 = *(_QWORD *)(v0 + 408);
    v3 = *(_QWORD *)(v0 + 416);
    v5 = *(_QWORD *)(v0 + 400);
    if (*(_QWORD *)(v0 + 184))
    {
      sub_1DC097DD0((__int128 *)(v0 + 160), v0 + 200);
      v6 = *(_QWORD *)(v0 + 152);
      *(_QWORD *)(v0 + 448) = v6;
      swift_bridgeObjectRetain();
      v7 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 456) = v7;
      *v7 = v0;
      v7[1] = sub_1DC27D584;
      return sub_1DC27DDA0(*(_QWORD *)(v0 + 312), *(_QWORD *)(v0 + 320), v5, v4, v3, v6, v0 + 200);
    }
    v14 = *(_QWORD *)(v0 + 368);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1DC285C90(v0 + 160);
    sub_1DC285CEC();
    v11 = (void *)swift_allocError();
    *v15 = 0;
    swift_willThrow();
    sub_1DC231868(v0 + 88);
    v13 = v14;
  }
  else
  {
    v9 = *(_QWORD *)(v0 + 368);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1DC23181C(v0 + 16);
    v10 = sub_1DC4077D4();
    sub_1DC080808(&qword_1EDB2AEB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5B740], MEMORY[0x1E0D5B748]);
    v11 = (void *)swift_allocError();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v12, *MEMORY[0x1E0D5B728], v10);
    swift_willThrow();
    v13 = v9;
  }
  sub_1DC0926D8(v13, (uint64_t (*)(_QWORD))sub_1DC27777C);
  if (qword_1EDB2D2E8 != -1)
    swift_once();
  v16 = *(_QWORD **)(v0 + 312);
  v17 = (id)qword_1EDB2D2E0;
  sub_1DC408FC8();
  sub_1DC0FDC18(0, (unint64_t *)&qword_1EDB400C0, (unint64_t *)&qword_1EDB400F0, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_1DC40DC10;
  *(_QWORD *)(v0 + 280) = 0;
  *(_QWORD *)(v0 + 288) = 0xE000000000000000;
  *(_QWORD *)(v0 + 296) = v11;
  sub_1DC0A3390(0, (unint64_t *)&qword_1EDB400E0);
  sub_1DC409808();
  v19 = *(_QWORD *)(v0 + 280);
  v20 = *(_QWORD *)(v0 + 288);
  *(_QWORD *)(v18 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v18 + 64) = sub_1DC0E7FAC();
  *(_QWORD *)(v18 + 32) = v19;
  *(_QWORD *)(v18 + 40) = v20;
  sub_1DC403F28();
  swift_bridgeObjectRelease();

  sub_1DC409730();
  *(_QWORD *)(v0 + 264) = 0;
  *(_QWORD *)(v0 + 272) = 0xE000000000000000;
  sub_1DC408B48();
  *(_QWORD *)(v0 + 304) = v11;
  sub_1DC409808();

  v21 = *(_QWORD *)(v0 + 272);
  *v16 = *(_QWORD *)(v0 + 264);
  v16[1] = v21;
  sub_1DC08CBF0(0, &qword_1EDB2AED8, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedGroup, (uint64_t (*)(void))sub_1DC12802C, MEMORY[0x1E0D5B9F8]);
  swift_storeEnumTagMultiPayload();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DC27D584()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 464) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_1DC27D618()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 368);
  __swift_destroy_boxed_opaque_existential_1(v0 + 200);
  sub_1DC231868(v0 + 88);
  sub_1DC0926D8(v1, (uint64_t (*)(_QWORD))sub_1DC27777C);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DC27D688()
{
  uint64_t v0;
  void *v1;
  _QWORD *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  swift_release();
  v1 = *(void **)(v0 + 392);
  if (qword_1EDB2D2E8 != -1)
    swift_once();
  v2 = *(_QWORD **)(v0 + 312);
  v3 = (id)qword_1EDB2D2E0;
  sub_1DC408FC8();
  sub_1DC0FDC18(0, (unint64_t *)&qword_1EDB400C0, (unint64_t *)&qword_1EDB400F0, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1DC40DC10;
  *(_QWORD *)(v0 + 280) = 0;
  *(_QWORD *)(v0 + 288) = 0xE000000000000000;
  *(_QWORD *)(v0 + 296) = v1;
  sub_1DC0A3390(0, (unint64_t *)&qword_1EDB400E0);
  sub_1DC409808();
  v5 = *(_QWORD *)(v0 + 280);
  v6 = *(_QWORD *)(v0 + 288);
  *(_QWORD *)(v4 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v4 + 64) = sub_1DC0E7FAC();
  *(_QWORD *)(v4 + 32) = v5;
  *(_QWORD *)(v4 + 40) = v6;
  sub_1DC403F28();
  swift_bridgeObjectRelease();

  sub_1DC409730();
  *(_QWORD *)(v0 + 264) = 0;
  *(_QWORD *)(v0 + 272) = 0xE000000000000000;
  sub_1DC408B48();
  *(_QWORD *)(v0 + 304) = v1;
  sub_1DC409808();

  v7 = *(_QWORD *)(v0 + 272);
  *v2 = *(_QWORD *)(v0 + 264);
  v2[1] = v7;
  sub_1DC08CBF0(0, &qword_1EDB2AED8, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedGroup, (uint64_t (*)(void))sub_1DC12802C, MEMORY[0x1E0D5B9F8]);
  swift_storeEnumTagMultiPayload();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DC27D8D8()
{
  uint64_t v0;
  void *v1;
  _QWORD *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_1DC0926D8(*(_QWORD *)(v0 + 368), (uint64_t (*)(_QWORD))sub_1DC27777C);
  v1 = *(void **)(v0 + 440);
  if (qword_1EDB2D2E8 != -1)
    swift_once();
  v2 = *(_QWORD **)(v0 + 312);
  v3 = (id)qword_1EDB2D2E0;
  sub_1DC408FC8();
  sub_1DC0FDC18(0, (unint64_t *)&qword_1EDB400C0, (unint64_t *)&qword_1EDB400F0, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1DC40DC10;
  *(_QWORD *)(v0 + 280) = 0;
  *(_QWORD *)(v0 + 288) = 0xE000000000000000;
  *(_QWORD *)(v0 + 296) = v1;
  sub_1DC0A3390(0, (unint64_t *)&qword_1EDB400E0);
  sub_1DC409808();
  v5 = *(_QWORD *)(v0 + 280);
  v6 = *(_QWORD *)(v0 + 288);
  *(_QWORD *)(v4 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v4 + 64) = sub_1DC0E7FAC();
  *(_QWORD *)(v4 + 32) = v5;
  *(_QWORD *)(v4 + 40) = v6;
  sub_1DC403F28();
  swift_bridgeObjectRelease();

  sub_1DC409730();
  *(_QWORD *)(v0 + 264) = 0;
  *(_QWORD *)(v0 + 272) = 0xE000000000000000;
  sub_1DC408B48();
  *(_QWORD *)(v0 + 304) = v1;
  sub_1DC409808();

  v7 = *(_QWORD *)(v0 + 272);
  *v2 = *(_QWORD *)(v0 + 264);
  v2[1] = v7;
  sub_1DC08CBF0(0, &qword_1EDB2AED8, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedGroup, (uint64_t (*)(void))sub_1DC12802C, MEMORY[0x1E0D5B9F8]);
  swift_storeEnumTagMultiPayload();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DC27DB30()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  _QWORD *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 368);
  __swift_destroy_boxed_opaque_existential_1(v0 + 200);
  sub_1DC231868(v0 + 88);
  sub_1DC0926D8(v1, (uint64_t (*)(_QWORD))sub_1DC27777C);
  v2 = *(void **)(v0 + 464);
  if (qword_1EDB2D2E8 != -1)
    swift_once();
  v3 = *(_QWORD **)(v0 + 312);
  v4 = (id)qword_1EDB2D2E0;
  sub_1DC408FC8();
  sub_1DC0FDC18(0, (unint64_t *)&qword_1EDB400C0, (unint64_t *)&qword_1EDB400F0, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1DC40DC10;
  *(_QWORD *)(v0 + 280) = 0;
  *(_QWORD *)(v0 + 288) = 0xE000000000000000;
  *(_QWORD *)(v0 + 296) = v2;
  sub_1DC0A3390(0, (unint64_t *)&qword_1EDB400E0);
  sub_1DC409808();
  v6 = *(_QWORD *)(v0 + 280);
  v7 = *(_QWORD *)(v0 + 288);
  *(_QWORD *)(v5 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v5 + 64) = sub_1DC0E7FAC();
  *(_QWORD *)(v5 + 32) = v6;
  *(_QWORD *)(v5 + 40) = v7;
  sub_1DC403F28();
  swift_bridgeObjectRelease();

  sub_1DC409730();
  *(_QWORD *)(v0 + 264) = 0;
  *(_QWORD *)(v0 + 272) = 0xE000000000000000;
  sub_1DC408B48();
  *(_QWORD *)(v0 + 304) = v2;
  sub_1DC409808();

  v8 = *(_QWORD *)(v0 + 272);
  *v3 = *(_QWORD *)(v0 + 264);
  v3[1] = v8;
  sub_1DC08CBF0(0, &qword_1EDB2AED8, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedGroup, (uint64_t (*)(void))sub_1DC12802C, MEMORY[0x1E0D5B9F8]);
  swift_storeEnumTagMultiPayload();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DC27DDA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v8[11] = a7;
  v8[12] = v7;
  v8[9] = a5;
  v8[10] = a6;
  v8[7] = a3;
  v8[8] = a4;
  v8[5] = a1;
  v8[6] = a2;
  v9 = sub_1DC40046C();
  v8[13] = v9;
  v8[14] = *(_QWORD *)(v9 - 8);
  v8[15] = swift_task_alloc();
  v8[16] = swift_task_alloc();
  v8[17] = swift_task_alloc();
  v10 = sub_1DC40070C();
  v8[18] = v10;
  v8[19] = *(_QWORD *)(v10 - 8);
  v8[20] = swift_task_alloc();
  v11 = sub_1DC3FFFEC();
  v8[21] = v11;
  v8[22] = *(_QWORD *)(v11 - 8);
  v8[23] = swift_task_alloc();
  v8[24] = swift_task_alloc();
  v8[25] = swift_task_alloc();
  v12 = sub_1DC400550();
  v8[26] = v12;
  v8[27] = *(_QWORD *)(v12 - 8);
  v8[28] = swift_task_alloc();
  sub_1DC277708();
  v8[29] = swift_task_alloc();
  v8[30] = swift_task_alloc();
  sub_1DC277798(0, (unint64_t *)&qword_1EDB32310, sub_1DC27777C, (unint64_t *)&qword_1EDB282C8);
  v8[31] = v13;
  v8[32] = *(_QWORD *)(v13 - 8);
  v8[33] = swift_task_alloc();
  v14 = type metadata accessor for StockForYouFeedGroup();
  v8[34] = v14;
  v8[35] = *(_QWORD *)(v14 - 8);
  v8[36] = swift_task_alloc();
  v8[37] = swift_task_alloc();
  v8[38] = swift_task_alloc();
  v8[39] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1DC27DF84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  unint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  void (*v53)(uint64_t, uint64_t);
  _QWORD *v54;
  _QWORD *v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;

  v1 = *(_QWORD *)(v0 + 56);
  v2 = OBJC_IVAR____TtC8StocksUI27StockForYouFeedGroupEmitter_newsFeedService;
  *(_QWORD *)(v0 + 320) = OBJC_IVAR____TtC8StocksUI27StockForYouFeedGroupEmitter_newsUserProfileProvider;
  *(_QWORD *)(v0 + 328) = v2;
  sub_1DC285D30(v1);
  if (!v1)
  {
LABEL_26:
    v44 = sub_1DC4077D4();
    sub_1DC080808(&qword_1EDB2AEB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5B740], MEMORY[0x1E0D5B748]);
    swift_allocError();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v44 - 8) + 104))(v45, *MEMORY[0x1E0D5B6D0], v44);
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v4 = *(_QWORD *)(v0 + 64);
  v3 = *(_QWORD *)(v0 + 72);
  v5 = *(_QWORD *)(v0 + 56);
  while (1)
  {
    *(_QWORD *)(v0 + 344) = v4;
    *(_QWORD *)(v0 + 352) = v5;
    *(_QWORD *)(v0 + 336) = v3;
    v7 = *(_QWORD *)(v3 + 16);
    *(_QWORD *)(v0 + 360) = v7;
    if (!v7)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_26;
    }
    v8 = *(_QWORD *)(v0 + 312);
    v9 = *(_QWORD *)(v0 + 264);
    v10 = *(_QWORD *)(v0 + 248);
    v11 = *(_DWORD *)(*(_QWORD *)(v0 + 280) + 80);
    *(_DWORD *)(v0 + 496) = v11;
    v12 = (v11 + 32) & ~(unint64_t)v11;
    sub_1DC0990BC(v3 + v12, v8, (uint64_t (*)(_QWORD))type metadata accessor for StockForYouFeedGroup);
    v13 = (uint64_t *)(v9 + *(int *)(v10 + 48));
    v14 = *(_QWORD *)(v4 + 16);
    if (v14)
    {
      v15 = v4 + v12;
      sub_1DC0990BC(v15, *(_QWORD *)(v0 + 304), (uint64_t (*)(_QWORD))type metadata accessor for StockForYouFeedGroup);
      if (v14 == 1)
      {
        v16 = *(_QWORD *)(v0 + 272);
        v17 = *(_QWORD *)(v0 + 280);
        v18 = *(_QWORD *)(v0 + 248);
        v65 = *(_QWORD *)(v0 + 256);
        v19 = *(_QWORD *)(v0 + 240);
        v20 = (_QWORD *)(v19 + *(int *)(v18 + 48));
        sub_1DC092ED0(*(_QWORD *)(v0 + 304), v19, (uint64_t (*)(_QWORD))type metadata accessor for StockForYouFeedGroup);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v17 + 56))(v19, 0, 1, v16);
        *v20 = 0;
        v20[1] = 0;
        v20[2] = 0;
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v65 + 56))(v19, 0, 1, v18);
      }
      else
      {
        sub_1DC409A0C();
        swift_bridgeObjectRetain_n();
        swift_unknownObjectRetain();
        swift_bridgeObjectRetain();
        v23 = swift_dynamicCastClass();
        if (!v23)
        {
          swift_bridgeObjectRelease();
          v23 = MEMORY[0x1E0DEE9D8];
        }
        v24 = *(_QWORD *)(v23 + 16);
        swift_release();
        if (v24 == v14 - 1)
        {
          v25 = swift_dynamicCastClass();
          if (!v25)
          {
            swift_bridgeObjectRelease();
            v25 = MEMORY[0x1E0DEE9D8];
          }
        }
        else
        {
          swift_bridgeObjectRelease();
          v25 = sub_1DC0D04DC(v4, v15, 1, (2 * v14) | 1);
        }
        v26 = *(_QWORD *)(v0 + 304);
        v62 = *(_QWORD *)(v0 + 280);
        v64 = *(_QWORD *)(v0 + 272);
        v27 = *(_QWORD *)(v0 + 248);
        v66 = *(_QWORD *)(v0 + 256);
        v28 = *(_QWORD *)(v0 + 240);
        swift_bridgeObjectRelease();
        v29 = (uint64_t *)(v28 + *(int *)(v27 + 48));
        sub_1DC092ED0(v26, v28, (uint64_t (*)(_QWORD))type metadata accessor for StockForYouFeedGroup);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v62 + 56))(v28, 0, 1, v64);
        *v29 = v5;
        v29[1] = v25;
        v29[2] = v3;
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v66 + 56))(v28, 0, 1, v27);
        swift_bridgeObjectRetain();
      }
      v21 = *(_QWORD *)(v0 + 248);
      v22 = *(_QWORD *)(v0 + 256);
      v30 = *(_QWORD *)(v0 + 240);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v30, 1, v21) != 1)
      {
        v39 = (uint64_t *)(v30 + *(int *)(v21 + 48));
        sub_1DC092ED0(v30, *(_QWORD *)(v0 + 264), (uint64_t (*)(_QWORD))sub_1DC27777C);
        v36 = *v39;
        v37 = v39[1];
        v38 = v39[2];
        *v13 = *v39;
        v13[1] = v37;
        v13[2] = v38;
        goto LABEL_21;
      }
    }
    else
    {
      (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 256) + 56))(*(_QWORD *)(v0 + 240), 1, 1, *(_QWORD *)(v0 + 248));
      v21 = *(_QWORD *)(v0 + 248);
      v22 = *(_QWORD *)(v0 + 256);
    }
    v31 = *(_QWORD *)(v0 + 232);
    sub_1DC3CBEC4(v5, v4, v3, v31);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v31, 1, v21) == 1)
    {
      v32 = *(_QWORD *)(v0 + 232);
      (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 280) + 56))(*(_QWORD *)(v0 + 264), 1, 1, *(_QWORD *)(v0 + 272));
      *v13 = 0;
      v13[1] = 0;
      v13[2] = 0;
      sub_1DC0926D8(v32, (uint64_t (*)(_QWORD))sub_1DC277708);
    }
    else
    {
      v33 = *(_QWORD *)(v0 + 232);
      v34 = v33 + *(int *)(*(_QWORD *)(v0 + 248) + 48);
      sub_1DC092ED0(v33, *(_QWORD *)(v0 + 264), (uint64_t (*)(_QWORD))sub_1DC27777C);
      v35 = *(_QWORD *)(v34 + 16);
      *(_OWORD *)v13 = *(_OWORD *)v34;
      v13[2] = v35;
    }
    sub_1DC0926D8(*(_QWORD *)(v0 + 240), (uint64_t (*)(_QWORD))sub_1DC277708);
    v36 = *v13;
    v37 = v13[1];
    v38 = v13[2];
LABEL_21:
    *(_QWORD *)(v0 + 376) = v37;
    *(_QWORD *)(v0 + 384) = v36;
    *(_QWORD *)(v0 + 368) = v38;
    sub_1DC0926D8(*(_QWORD *)(v0 + 264), (uint64_t (*)(_QWORD))sub_1DC27777C);
    v40 = sub_1DC4010B4();
    if (*(_QWORD *)(v5 + 16))
    {
      v42 = sub_1DC0ED368(v40, v41);
      if ((v43 & 1) != 0)
        break;
    }
    v6 = *(_QWORD *)(v0 + 312);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1DC0926D8(v6, (uint64_t (*)(_QWORD))type metadata accessor for StockForYouFeedGroup);
    v3 = v38;
    v4 = v37;
    v5 = v36;
    if (!v36)
      goto LABEL_26;
  }
  v47 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v42);
  *(_QWORD *)(v0 + 392) = v47;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v47 + 16))
  {
    v61 = *(_QWORD *)(v0 + 200);
    v63 = *(_QWORD *)(v0 + 312);
    v48 = *(_QWORD *)(v0 + 184);
    v58 = *(_QWORD *)(v0 + 192);
    v59 = *(_QWORD *)(v0 + 176);
    v49 = *(_QWORD *)(v0 + 160);
    v60 = *(_QWORD *)(v0 + 168);
    v50 = *(_QWORD *)(v0 + 96);
    v51 = (_QWORD *)(v50 + *(_QWORD *)(v0 + 328));
    v52 = *(_QWORD *)(v0 + 152);
    v57 = *(_QWORD *)(v0 + 144);
    sub_1DC3FFFE0();
    sub_1DC3FFFE0();
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v50 + 24), *(_QWORD *)(v50 + 48));
    sub_1DC400DCC();
    sub_1DC4005B0();
    (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v49, v57);
    sub_1DC3FFF44();
    v53 = *(void (**)(uint64_t, uint64_t))(v59 + 8);
    *(_QWORD *)(v0 + 400) = v53;
    v53(v48, v60);
    v54 = (_QWORD *)swift_task_alloc();
    v54[2] = v50;
    v54[3] = v61;
    v54[4] = v58;
    v54[5] = v63;
    sub_1DC1559AC((void (*)(_QWORD *))sub_1DC28603C, (uint64_t)v54, v47);
    swift_task_dealloc();
    __swift_project_boxed_opaque_existential_1(v51, v51[3]);
    *(_QWORD *)(v0 + 408) = sub_1DC40097C();
    swift_bridgeObjectRelease();
    v55 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 416) = v55;
    *v55 = v0;
    v55[1] = sub_1DC27E704;
  }
  else
  {
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 432) = MEMORY[0x1E0DEE9D8];
    swift_getObjectType();
    *(_QWORD *)(v0 + 440) = sub_1DC400DFC();
    v56 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 448) = v56;
    *v56 = v0;
    v56[1] = sub_1DC27E770;
  }
  return sub_1DC402CC8();
}

uint64_t sub_1DC27E704()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 424) = v0;
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_1DC27E770()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 456) = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_1DC0D04F0(*(_QWORD *)(v2 + 384));
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_release();
  }
  return swift_task_switch();
}

uint64_t sub_1DC27E830()
{
  _QWORD *v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = (void (*)(uint64_t, uint64_t))v0[50];
  v2 = v0[25];
  v3 = v0[21];
  v1(v0[24], v3);
  v1(v2, v3);
  swift_bridgeObjectRelease();
  v0[54] = v0[3];
  swift_getObjectType();
  v0[55] = sub_1DC400DFC();
  v4 = (_QWORD *)swift_task_alloc();
  v0[56] = v4;
  *v4 = v0;
  v4[1] = sub_1DC27E770;
  return sub_1DC402CC8();
}

uint64_t sub_1DC27E8E0()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v1 = *(void (**)(uint64_t, uint64_t))(v0 + 400);
  v2 = *(_QWORD *)(v0 + 384);
  v6 = *(_QWORD *)(v0 + 312);
  v3 = *(_QWORD *)(v0 + 200);
  v4 = *(_QWORD *)(v0 + 168);
  v1(*(_QWORD *)(v0 + 192), v4);
  v1(v3, v4);
  sub_1DC0D04F0(v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1DC0926D8(v6, (uint64_t (*)(_QWORD))type metadata accessor for StockForYouFeedGroup);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DC27EA54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(_QWORD, uint64_t, _QWORD);
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  int64_t v15;
  uint64_t v16;
  int isUniquelyReferenced_nonNull_native;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  unint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t *v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  char v82;
  uint64_t v83;
  uint64_t v84;
  int64_t v85;
  uint64_t v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  unint64_t v95;
  uint64_t v96;
  _QWORD *v97;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  _QWORD *v105;
  uint64_t v106;
  void (*v107)(uint64_t, uint64_t);
  _QWORD *v108;
  _QWORD *v109;
  _QWORD *v110;
  unint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;

  v1 = *(_QWORD *)(v0 + 432);
  v2 = *(_QWORD *)(v1 + 16);
  if (!v2)
  {
    v38 = *(_QWORD *)(v0 + 312);
    v40 = *(_QWORD *)(v0 + 216);
    v39 = *(_QWORD *)(v0 + 224);
    v41 = *(_QWORD *)(v0 + 208);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v39, v41);
    sub_1DC0926D8(v38, (uint64_t (*)(_QWORD))type metadata accessor for StockForYouFeedGroup);
    v42 = *(_QWORD *)(v0 + 384);
    if (!v42)
    {
LABEL_65:
      v99 = sub_1DC4077D4();
      sub_1DC080808(&qword_1EDB2AEB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5B740], MEMORY[0x1E0D5B748]);
      swift_allocError();
      (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v99 - 8) + 104))(v100, *MEMORY[0x1E0D5B6D0], v99);
      swift_willThrow();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
    v43 = *(_QWORD *)(v0 + 368);
    v44 = *(_QWORD *)(v0 + 376);
    while (1)
    {
      *(_QWORD *)(v0 + 344) = v44;
      *(_QWORD *)(v0 + 352) = v42;
      *(_QWORD *)(v0 + 336) = v43;
      v46 = *(_QWORD *)(v43 + 16);
      *(_QWORD *)(v0 + 360) = v46;
      if (!v46)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_65;
      }
      v47 = *(_QWORD *)(v0 + 312);
      v48 = *(_QWORD *)(v0 + 264);
      v49 = *(_QWORD *)(v0 + 248);
      v50 = *(_DWORD *)(*(_QWORD *)(v0 + 280) + 80);
      *(_DWORD *)(v0 + 496) = v50;
      v51 = (v50 + 32) & ~(unint64_t)v50;
      sub_1DC0990BC(v43 + v51, v47, (uint64_t (*)(_QWORD))type metadata accessor for StockForYouFeedGroup);
      v52 = (uint64_t *)(v48 + *(int *)(v49 + 48));
      v53 = *(_QWORD *)(v44 + 16);
      if (!v53)
        break;
      v54 = v44 + v51;
      sub_1DC0990BC(v54, *(_QWORD *)(v0 + 304), (uint64_t (*)(_QWORD))type metadata accessor for StockForYouFeedGroup);
      if (v53 == 1)
      {
        v55 = *(_QWORD *)(v0 + 272);
        v56 = *(_QWORD *)(v0 + 280);
        v57 = *(_QWORD *)(v0 + 248);
        v123 = *(_QWORD *)(v0 + 256);
        v58 = *(_QWORD *)(v0 + 240);
        v59 = (_QWORD *)(v58 + *(int *)(v57 + 48));
        sub_1DC092ED0(*(_QWORD *)(v0 + 304), v58, (uint64_t (*)(_QWORD))type metadata accessor for StockForYouFeedGroup);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v56 + 56))(v58, 0, 1, v55);
        *v59 = 0;
        v59[1] = 0;
        v59[2] = 0;
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v123 + 56))(v58, 0, 1, v57);
      }
      else
      {
        sub_1DC409A0C();
        swift_bridgeObjectRetain_n();
        swift_unknownObjectRetain();
        swift_bridgeObjectRetain();
        v62 = swift_dynamicCastClass();
        if (!v62)
        {
          swift_bridgeObjectRelease();
          v62 = MEMORY[0x1E0DEE9D8];
        }
        v63 = *(_QWORD *)(v62 + 16);
        swift_release();
        if (v63 == v53 - 1)
        {
          v64 = swift_dynamicCastClass();
          if (!v64)
          {
            swift_bridgeObjectRelease();
            v64 = MEMORY[0x1E0DEE9D8];
          }
        }
        else
        {
          swift_bridgeObjectRelease();
          v64 = sub_1DC0D04DC(v44, v54, 1, (2 * v53) | 1);
        }
        v65 = *(_QWORD *)(v0 + 304);
        v119 = *(_QWORD *)(v0 + 280);
        v122 = *(_QWORD *)(v0 + 272);
        v66 = *(_QWORD *)(v0 + 248);
        v124 = *(_QWORD *)(v0 + 256);
        v67 = *(_QWORD *)(v0 + 240);
        swift_bridgeObjectRelease();
        v68 = (uint64_t *)(v67 + *(int *)(v66 + 48));
        sub_1DC092ED0(v65, v67, (uint64_t (*)(_QWORD))type metadata accessor for StockForYouFeedGroup);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v119 + 56))(v67, 0, 1, v122);
        *v68 = v42;
        v68[1] = v64;
        v68[2] = v43;
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v124 + 56))(v67, 0, 1, v66);
        swift_bridgeObjectRetain();
      }
      v60 = *(_QWORD *)(v0 + 248);
      v61 = *(_QWORD *)(v0 + 256);
      v69 = *(_QWORD *)(v0 + 240);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v61 + 48))(v69, 1, v60) == 1)
        goto LABEL_41;
      v78 = (uint64_t *)(v69 + *(int *)(v60 + 48));
      sub_1DC092ED0(v69, *(_QWORD *)(v0 + 264), (uint64_t (*)(_QWORD))sub_1DC27777C);
      v75 = *v78;
      v76 = v78[1];
      v77 = v78[2];
      *v52 = *v78;
      v52[1] = v76;
      v52[2] = v77;
LABEL_46:
      *(_QWORD *)(v0 + 376) = v76;
      *(_QWORD *)(v0 + 384) = v75;
      *(_QWORD *)(v0 + 368) = v77;
      sub_1DC0926D8(*(_QWORD *)(v0 + 264), (uint64_t (*)(_QWORD))sub_1DC27777C);
      v79 = sub_1DC4010B4();
      if (*(_QWORD *)(v42 + 16))
      {
        v81 = sub_1DC0ED368(v79, v80);
        if ((v82 & 1) != 0)
        {
          v101 = *(_QWORD *)(*(_QWORD *)(v42 + 56) + 8 * v81);
          *(_QWORD *)(v0 + 392) = v101;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          if (*(_QWORD *)(v101 + 16))
          {
            v120 = *(_QWORD *)(v0 + 312);
            v102 = *(_QWORD *)(v0 + 184);
            v115 = *(_QWORD *)(v0 + 192);
            v116 = *(_QWORD *)(v0 + 176);
            v103 = *(_QWORD *)(v0 + 160);
            v117 = *(_QWORD *)(v0 + 168);
            v118 = *(_QWORD *)(v0 + 200);
            v104 = *(_QWORD *)(v0 + 96);
            v105 = (_QWORD *)(v104 + *(_QWORD *)(v0 + 328));
            v106 = *(_QWORD *)(v0 + 152);
            v114 = *(_QWORD *)(v0 + 144);
            sub_1DC3FFFE0();
            sub_1DC3FFFE0();
            __swift_project_boxed_opaque_existential_1((_QWORD *)(v104 + 24), *(_QWORD *)(v104 + 48));
            sub_1DC400DCC();
            sub_1DC4005B0();
            (*(void (**)(uint64_t, uint64_t))(v106 + 8))(v103, v114);
            sub_1DC3FFF44();
            v107 = *(void (**)(uint64_t, uint64_t))(v116 + 8);
            *(_QWORD *)(v0 + 400) = v107;
            v107(v102, v117);
            v108 = (_QWORD *)swift_task_alloc();
            v108[2] = v104;
            v108[3] = v118;
            v108[4] = v115;
            v108[5] = v120;
            sub_1DC1559AC((void (*)(_QWORD *))sub_1DC28603C, (uint64_t)v108, v101);
            swift_task_dealloc();
            __swift_project_boxed_opaque_existential_1(v105, v105[3]);
            *(_QWORD *)(v0 + 408) = sub_1DC40097C();
            swift_bridgeObjectRelease();
            v109 = (_QWORD *)swift_task_alloc();
            *(_QWORD *)(v0 + 416) = v109;
            *v109 = v0;
            v109[1] = sub_1DC27E704;
          }
          else
          {
            swift_bridgeObjectRelease();
            *(_QWORD *)(v0 + 432) = MEMORY[0x1E0DEE9D8];
            swift_getObjectType();
            *(_QWORD *)(v0 + 440) = sub_1DC400DFC();
            v110 = (_QWORD *)swift_task_alloc();
            *(_QWORD *)(v0 + 448) = v110;
            *v110 = v0;
            v110[1] = sub_1DC27E770;
          }
          return sub_1DC402CC8();
        }
      }
      v45 = *(_QWORD *)(v0 + 312);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1DC0926D8(v45, (uint64_t (*)(_QWORD))type metadata accessor for StockForYouFeedGroup);
      v43 = v77;
      v44 = v76;
      v42 = v75;
      if (!v75)
        goto LABEL_65;
    }
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 256) + 56))(*(_QWORD *)(v0 + 240), 1, 1, *(_QWORD *)(v0 + 248));
    v60 = *(_QWORD *)(v0 + 248);
    v61 = *(_QWORD *)(v0 + 256);
LABEL_41:
    v70 = *(_QWORD *)(v0 + 232);
    sub_1DC3CBEC4(v42, v44, v43, v70);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v61 + 48))(v70, 1, v60) == 1)
    {
      v71 = *(_QWORD *)(v0 + 232);
      (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 280) + 56))(*(_QWORD *)(v0 + 264), 1, 1, *(_QWORD *)(v0 + 272));
      *v52 = 0;
      v52[1] = 0;
      v52[2] = 0;
      sub_1DC0926D8(v71, (uint64_t (*)(_QWORD))sub_1DC277708);
    }
    else
    {
      v72 = *(_QWORD *)(v0 + 232);
      v73 = v72 + *(int *)(*(_QWORD *)(v0 + 248) + 48);
      sub_1DC092ED0(v72, *(_QWORD *)(v0 + 264), (uint64_t (*)(_QWORD))sub_1DC27777C);
      v74 = *(_QWORD *)(v73 + 16);
      *(_OWORD *)v52 = *(_OWORD *)v73;
      v52[2] = v74;
    }
    sub_1DC0926D8(*(_QWORD *)(v0 + 240), (uint64_t (*)(_QWORD))sub_1DC277708);
    v75 = *v52;
    v76 = v52[1];
    v77 = v52[2];
    goto LABEL_46;
  }
  v121 = (uint64_t *)(v0 + 32);
  v3 = *(_QWORD *)(v0 + 112);
  v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  v5 = *(void (**)(_QWORD, uint64_t, _QWORD))(v3 + 16);
  v5(*(_QWORD *)(v0 + 136), v4, *(_QWORD *)(v0 + 104));
  v6 = *(_QWORD *)(v3 + 72);
  swift_bridgeObjectRetain();
  v7 = MEMORY[0x1E0DEE9D8];
  do
  {
    v5(*(_QWORD *)(v0 + 120), v4, *(_QWORD *)(v0 + 104));
    v12 = sub_1DC400460();
    v13 = *(_QWORD *)(v12 + 16);
    v14 = *(_QWORD *)(v7 + 16);
    v15 = v14 + v13;
    if (__OFADD__(v14, v13))
      goto LABEL_71;
    v16 = v12;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    if (isUniquelyReferenced_nonNull_native && v15 <= *(_QWORD *)(v7 + 24) >> 1)
    {
      if (*(_QWORD *)(v16 + 16))
        goto LABEL_14;
    }
    else
    {
      if (v14 <= v15)
        v18 = v14 + v13;
      else
        v18 = v14;
      v7 = sub_1DC0CDD4C(isUniquelyReferenced_nonNull_native, v18, 1, v7);
      if (*(_QWORD *)(v16 + 16))
      {
LABEL_14:
        v19 = *(_QWORD *)(v7 + 16);
        v20 = (*(_QWORD *)(v7 + 24) >> 1) - v19;
        v21 = sub_1DC4011BC();
        if (v20 < v13)
          goto LABEL_72;
        v22 = *(_QWORD *)(v21 - 8);
        v23 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
        v24 = *(_QWORD *)(v22 + 72);
        v25 = v7 + v23 + v24 * v19;
        v26 = v16 + v23;
        v27 = v24 * v13;
        v28 = v25 + v27;
        v29 = v26 + v27;
        if (v26 < v28 && v25 < v29)
          return sub_1DC40988C();
        swift_arrayInitWithCopy();
        if (v13)
        {
          v31 = *(_QWORD *)(v7 + 16);
          v32 = __OFADD__(v31, v13);
          v33 = v31 + v13;
          if (v32)
            goto LABEL_73;
          *(_QWORD *)(v7 + 16) = v33;
        }
        goto LABEL_4;
      }
    }
    if (v13)
    {
      __break(1u);
LABEL_71:
      __break(1u);
LABEL_72:
      __break(1u);
LABEL_73:
      __break(1u);
      return sub_1DC40988C();
    }
LABEL_4:
    v8 = *(_QWORD *)(v0 + 112);
    v9 = *(_QWORD *)(v0 + 120);
    v10 = *(_QWORD *)(v0 + 104);
    swift_bridgeObjectRelease();
    v11 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
    *(_QWORD *)(v0 + 464) = v11;
    v11(v9, v10);
    v4 += v6;
    --v2;
  }
  while (v2);
  v34 = *(_QWORD *)(v0 + 360);
  v35 = *(_QWORD *)(v0 + 336);
  swift_bridgeObjectRelease_n();
  if (*(_QWORD *)(v35 + 16) < v34)
  {
    __break(1u);
LABEL_76:
    v111 = (2 * v35) | 1;
    v112 = *(unsigned __int8 *)(v0 + 496);
    v113 = *(_QWORD *)(v0 + 336);
    swift_bridgeObjectRelease();
    v84 = sub_1DC0D04DC(v113, v113 + ((v112 + 32) & ~v112), 1, v111);
    swift_bridgeObjectRelease();
    goto LABEL_54;
  }
  v35 = *(_QWORD *)(v0 + 360);
  sub_1DC409A0C();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain_n();
  v36 = swift_dynamicCastClass();
  if (v36)
  {
    v37 = v35;
  }
  else
  {
    swift_bridgeObjectRelease();
    v37 = *(_QWORD *)(v0 + 360);
    v36 = MEMORY[0x1E0DEE9D8];
  }
  v83 = *(_QWORD *)(v36 + 16);
  swift_release();
  if (v83 != v37 - 1)
    goto LABEL_76;
  v84 = swift_dynamicCastClass();
  swift_bridgeObjectRelease();
  if (!v84)
  {
    swift_bridgeObjectRelease();
    v84 = MEMORY[0x1E0DEE9D8];
  }
LABEL_54:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  sub_1DC400424();
  swift_bridgeObjectRelease();
  v85 = *(_QWORD *)(v84 + 16);
  if (v85)
  {
    v86 = *(_QWORD *)(v0 + 280);
    v87 = (*(unsigned __int8 *)(v0 + 496) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 496);
    *(_QWORD *)(v0 + 32) = MEMORY[0x1E0DEE9D8];
    sub_1DC0F0894(0, v85, 0);
    v88 = v84 + v87;
    v125 = *(_QWORD *)(v86 + 72);
    do
    {
      v89 = *(_QWORD *)(v0 + 288);
      sub_1DC0990BC(v88, v89, (uint64_t (*)(_QWORD))type metadata accessor for StockForYouFeedGroup);
      v90 = sub_1DC4010B4();
      v92 = v91;
      sub_1DC0926D8(v89, (uint64_t (*)(_QWORD))type metadata accessor for StockForYouFeedGroup);
      v93 = *(_QWORD *)(v0 + 32);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1DC0F0894(0, *(_QWORD *)(v93 + 16) + 1, 1);
        v93 = *v121;
      }
      v95 = *(_QWORD *)(v93 + 16);
      v94 = *(_QWORD *)(v93 + 24);
      if (v95 >= v94 >> 1)
      {
        sub_1DC0F0894(v94 > 1, v95 + 1, 1);
        v93 = *v121;
      }
      *(_QWORD *)(v93 + 16) = v95 + 1;
      v96 = v93 + 16 * v95;
      *(_QWORD *)(v96 + 32) = v90;
      *(_QWORD *)(v96 + 40) = v92;
      v88 += v125;
      --v85;
    }
    while (v85);
    swift_release();
  }
  else
  {
    swift_release();
    v93 = MEMORY[0x1E0DEE9D8];
  }
  *(_QWORD *)(v0 + 472) = v93;
  v97 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 480) = v97;
  *v97 = v0;
  v97[1] = sub_1DC27F698;
  return sub_1DC28097C(*(_QWORD *)(v0 + 296), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 224), *(_QWORD *)(v0 + 80), v93, *(_QWORD *)(v0 + 88));
}

uint64_t sub_1DC27F698()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 488) = v0;
  swift_task_dealloc();
  (*(void (**)(_QWORD, _QWORD))(v2 + 464))(*(_QWORD *)(v2 + 128), *(_QWORD *)(v2 + 104));
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_1DC27F71C()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int8x16_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v1 = *(_QWORD *)(v0 + 384);
  v2 = *(void (**)(uint64_t, uint64_t))(v0 + 464);
  if (v1)
  {
    v3 = *(_QWORD *)(v0 + 296);
    v4 = *(_QWORD *)(v0 + 216);
    v19 = *(_QWORD *)(v0 + 224);
    v20 = *(_QWORD *)(v0 + 312);
    v18 = *(_QWORD *)(v0 + 208);
    v5 = *(_QWORD *)(v0 + 136);
    v6 = *(_QWORD *)(v0 + 104);
    v7 = *(_QWORD *)(v0 + 40);
    sub_1DC277798(0, (unint64_t *)&qword_1EDB2E040, (void (*)(uint64_t))type metadata accessor for ForYouFeedGroup, (unint64_t *)&qword_1EDB40100);
    v9 = v7 + *(int *)(v8 + 48);
    v17 = *(int8x16_t *)(v0 + 368);
    sub_1DC0990BC(v3, v7, (uint64_t (*)(_QWORD))type metadata accessor for StockForYouFeedGroup);
    type metadata accessor for ForYouFeedGroup();
    swift_storeEnumTagMultiPayload();
    *(_QWORD *)(v9 + 24) = &type metadata for StockForYouFeedGroupEmitterCursor;
    *(_QWORD *)v9 = v1;
    *(int8x16_t *)(v9 + 8) = vextq_s8(v17, v17, 8uLL);
    sub_1DC0926D8(v3, (uint64_t (*)(_QWORD))type metadata accessor for StockForYouFeedGroup);
    v2(v5, v6);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v19, v18);
    sub_1DC0926D8(v20, (uint64_t (*)(_QWORD))type metadata accessor for StockForYouFeedGroup);
  }
  else
  {
    v10 = *(_QWORD *)(v0 + 312);
    v11 = *(_QWORD *)(v0 + 296);
    v13 = *(_QWORD *)(v0 + 216);
    v12 = *(_QWORD *)(v0 + 224);
    v14 = *(_QWORD *)(v0 + 208);
    v15 = *(_QWORD *)(v0 + 40);
    v2(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 104));
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
    sub_1DC0926D8(v10, (uint64_t (*)(_QWORD))type metadata accessor for StockForYouFeedGroup);
    sub_1DC092ED0(v11, v15, (uint64_t (*)(_QWORD))type metadata accessor for StockForYouFeedGroup);
    type metadata accessor for ForYouFeedGroup();
    swift_storeEnumTagMultiPayload();
  }
  sub_1DC08CBF0(0, &qword_1EDB2AED8, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedGroup, (uint64_t (*)(void))sub_1DC12802C, MEMORY[0x1E0D5B9F8]);
  swift_storeEnumTagMultiPayload();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DC27F9C0()
{
  uint64_t v0;

  sub_1DC0926D8(*(_QWORD *)(v0 + 312), (uint64_t (*)(_QWORD))type metadata accessor for StockForYouFeedGroup);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DC27FACC()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  unint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  void (*v56)(uint64_t, uint64_t);
  _QWORD *v57;
  _QWORD *v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;

  v1 = *(void **)(v0 + 488);
  v2 = *(_QWORD *)(v0 + 312);
  v4 = *(_QWORD *)(v0 + 216);
  v3 = *(_QWORD *)(v0 + 224);
  v5 = *(_QWORD *)(v0 + 208);
  (*(void (**)(_QWORD, _QWORD))(v0 + 464))(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 104));
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  sub_1DC0926D8(v2, (uint64_t (*)(_QWORD))type metadata accessor for StockForYouFeedGroup);

  v6 = *(_QWORD *)(v0 + 384);
  if (!v6)
  {
LABEL_26:
    v47 = sub_1DC4077D4();
    sub_1DC080808(&qword_1EDB2AEB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5B740], MEMORY[0x1E0D5B748]);
    swift_allocError();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v47 - 8) + 104))(v48, *MEMORY[0x1E0D5B6D0], v47);
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v7 = *(_QWORD *)(v0 + 368);
  v8 = *(_QWORD *)(v0 + 376);
  while (1)
  {
    *(_QWORD *)(v0 + 344) = v8;
    *(_QWORD *)(v0 + 352) = v6;
    *(_QWORD *)(v0 + 336) = v7;
    v10 = *(_QWORD *)(v7 + 16);
    *(_QWORD *)(v0 + 360) = v10;
    if (!v10)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_26;
    }
    v11 = *(_QWORD *)(v0 + 312);
    v12 = *(_QWORD *)(v0 + 264);
    v13 = *(_QWORD *)(v0 + 248);
    v14 = *(_DWORD *)(*(_QWORD *)(v0 + 280) + 80);
    *(_DWORD *)(v0 + 496) = v14;
    v15 = (v14 + 32) & ~(unint64_t)v14;
    sub_1DC0990BC(v7 + v15, v11, (uint64_t (*)(_QWORD))type metadata accessor for StockForYouFeedGroup);
    v16 = (uint64_t *)(v12 + *(int *)(v13 + 48));
    v17 = *(_QWORD *)(v8 + 16);
    if (v17)
    {
      v18 = v8 + v15;
      sub_1DC0990BC(v18, *(_QWORD *)(v0 + 304), (uint64_t (*)(_QWORD))type metadata accessor for StockForYouFeedGroup);
      if (v17 == 1)
      {
        v19 = *(_QWORD *)(v0 + 272);
        v20 = *(_QWORD *)(v0 + 280);
        v21 = *(_QWORD *)(v0 + 248);
        v68 = *(_QWORD *)(v0 + 256);
        v22 = *(_QWORD *)(v0 + 240);
        v23 = (_QWORD *)(v22 + *(int *)(v21 + 48));
        sub_1DC092ED0(*(_QWORD *)(v0 + 304), v22, (uint64_t (*)(_QWORD))type metadata accessor for StockForYouFeedGroup);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v20 + 56))(v22, 0, 1, v19);
        *v23 = 0;
        v23[1] = 0;
        v23[2] = 0;
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v68 + 56))(v22, 0, 1, v21);
      }
      else
      {
        sub_1DC409A0C();
        swift_bridgeObjectRetain_n();
        swift_unknownObjectRetain();
        swift_bridgeObjectRetain();
        v26 = swift_dynamicCastClass();
        if (!v26)
        {
          swift_bridgeObjectRelease();
          v26 = MEMORY[0x1E0DEE9D8];
        }
        v27 = *(_QWORD *)(v26 + 16);
        swift_release();
        if (v27 == v17 - 1)
        {
          v28 = swift_dynamicCastClass();
          if (!v28)
          {
            swift_bridgeObjectRelease();
            v28 = MEMORY[0x1E0DEE9D8];
          }
        }
        else
        {
          swift_bridgeObjectRelease();
          v28 = sub_1DC0D04DC(v8, v18, 1, (2 * v17) | 1);
        }
        v29 = *(_QWORD *)(v0 + 304);
        v65 = *(_QWORD *)(v0 + 280);
        v67 = *(_QWORD *)(v0 + 272);
        v30 = *(_QWORD *)(v0 + 248);
        v69 = *(_QWORD *)(v0 + 256);
        v31 = *(_QWORD *)(v0 + 240);
        swift_bridgeObjectRelease();
        v32 = (uint64_t *)(v31 + *(int *)(v30 + 48));
        sub_1DC092ED0(v29, v31, (uint64_t (*)(_QWORD))type metadata accessor for StockForYouFeedGroup);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v65 + 56))(v31, 0, 1, v67);
        *v32 = v6;
        v32[1] = v28;
        v32[2] = v7;
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v69 + 56))(v31, 0, 1, v30);
        swift_bridgeObjectRetain();
      }
      v24 = *(_QWORD *)(v0 + 248);
      v25 = *(_QWORD *)(v0 + 256);
      v33 = *(_QWORD *)(v0 + 240);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v25 + 48))(v33, 1, v24) != 1)
      {
        v42 = (uint64_t *)(v33 + *(int *)(v24 + 48));
        sub_1DC092ED0(v33, *(_QWORD *)(v0 + 264), (uint64_t (*)(_QWORD))sub_1DC27777C);
        v39 = *v42;
        v40 = v42[1];
        v41 = v42[2];
        *v16 = *v42;
        v16[1] = v40;
        v16[2] = v41;
        goto LABEL_21;
      }
    }
    else
    {
      (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 256) + 56))(*(_QWORD *)(v0 + 240), 1, 1, *(_QWORD *)(v0 + 248));
      v24 = *(_QWORD *)(v0 + 248);
      v25 = *(_QWORD *)(v0 + 256);
    }
    v34 = *(_QWORD *)(v0 + 232);
    sub_1DC3CBEC4(v6, v8, v7, v34);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v25 + 48))(v34, 1, v24) == 1)
    {
      v35 = *(_QWORD *)(v0 + 232);
      (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 280) + 56))(*(_QWORD *)(v0 + 264), 1, 1, *(_QWORD *)(v0 + 272));
      *v16 = 0;
      v16[1] = 0;
      v16[2] = 0;
      sub_1DC0926D8(v35, (uint64_t (*)(_QWORD))sub_1DC277708);
    }
    else
    {
      v36 = *(_QWORD *)(v0 + 232);
      v37 = v36 + *(int *)(*(_QWORD *)(v0 + 248) + 48);
      sub_1DC092ED0(v36, *(_QWORD *)(v0 + 264), (uint64_t (*)(_QWORD))sub_1DC27777C);
      v38 = *(_QWORD *)(v37 + 16);
      *(_OWORD *)v16 = *(_OWORD *)v37;
      v16[2] = v38;
    }
    sub_1DC0926D8(*(_QWORD *)(v0 + 240), (uint64_t (*)(_QWORD))sub_1DC277708);
    v39 = *v16;
    v40 = v16[1];
    v41 = v16[2];
LABEL_21:
    *(_QWORD *)(v0 + 376) = v40;
    *(_QWORD *)(v0 + 384) = v39;
    *(_QWORD *)(v0 + 368) = v41;
    sub_1DC0926D8(*(_QWORD *)(v0 + 264), (uint64_t (*)(_QWORD))sub_1DC27777C);
    v43 = sub_1DC4010B4();
    if (*(_QWORD *)(v6 + 16))
    {
      v45 = sub_1DC0ED368(v43, v44);
      if ((v46 & 1) != 0)
        break;
    }
    v9 = *(_QWORD *)(v0 + 312);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1DC0926D8(v9, (uint64_t (*)(_QWORD))type metadata accessor for StockForYouFeedGroup);
    v7 = v41;
    v8 = v40;
    v6 = v39;
    if (!v39)
      goto LABEL_26;
  }
  v50 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 8 * v45);
  *(_QWORD *)(v0 + 392) = v50;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v50 + 16))
  {
    v64 = *(_QWORD *)(v0 + 200);
    v66 = *(_QWORD *)(v0 + 312);
    v51 = *(_QWORD *)(v0 + 184);
    v61 = *(_QWORD *)(v0 + 192);
    v62 = *(_QWORD *)(v0 + 176);
    v52 = *(_QWORD *)(v0 + 160);
    v63 = *(_QWORD *)(v0 + 168);
    v53 = *(_QWORD *)(v0 + 96);
    v54 = (_QWORD *)(v53 + *(_QWORD *)(v0 + 328));
    v55 = *(_QWORD *)(v0 + 152);
    v60 = *(_QWORD *)(v0 + 144);
    sub_1DC3FFFE0();
    sub_1DC3FFFE0();
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v53 + 24), *(_QWORD *)(v53 + 48));
    sub_1DC400DCC();
    sub_1DC4005B0();
    (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v52, v60);
    sub_1DC3FFF44();
    v56 = *(void (**)(uint64_t, uint64_t))(v62 + 8);
    *(_QWORD *)(v0 + 400) = v56;
    v56(v51, v63);
    v57 = (_QWORD *)swift_task_alloc();
    v57[2] = v53;
    v57[3] = v64;
    v57[4] = v61;
    v57[5] = v66;
    sub_1DC1559AC((void (*)(_QWORD *))sub_1DC28603C, (uint64_t)v57, v50);
    swift_task_dealloc();
    __swift_project_boxed_opaque_existential_1(v54, v54[3]);
    *(_QWORD *)(v0 + 408) = sub_1DC40097C();
    swift_bridgeObjectRelease();
    v58 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 416) = v58;
    *v58 = v0;
    v58[1] = sub_1DC27E704;
  }
  else
  {
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 432) = MEMORY[0x1E0DEE9D8];
    swift_getObjectType();
    *(_QWORD *)(v0 + 440) = sub_1DC400DFC();
    v59 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 448) = v59;
    *v59 = v0;
    v59[1] = sub_1DC27E770;
  }
  return sub_1DC402CC8();
}

uint64_t sub_1DC280270()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  v1 = v0 + OBJC_IVAR____TtC8StocksUI27StockForYouFeedGroupEmitter_config;
  sub_1DC0C9C18();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_1DC0926D8(v0 + OBJC_IVAR____TtC8StocksUI27StockForYouFeedGroupEmitter_knobs, (uint64_t (*)(_QWORD))type metadata accessor for StockForYouFeedGroupKnobs);
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC8StocksUI27StockForYouFeedGroupEmitter_headlineViewingHistory);
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC8StocksUI27StockForYouFeedGroupEmitter_newsFeedService);
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC8StocksUI27StockForYouFeedGroupEmitter_formatService);
  return swift_deallocClassInstance();
}

uint64_t sub_1DC280328()
{
  return type metadata accessor for StockForYouFeedGroupEmitter();
}

uint64_t type metadata accessor for StockForYouFeedGroupEmitter()
{
  uint64_t result;

  result = qword_1EDB37C88;
  if (!qword_1EDB37C88)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1DC28036C()
{
  unint64_t v0;
  unint64_t v1;

  sub_1DC0C9C18();
  if (v0 <= 0x3F)
  {
    type metadata accessor for StockForYouFeedGroupKnobs();
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

uint64_t sub_1DC280418@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + OBJC_IVAR____TtC8StocksUI27StockForYouFeedGroupEmitter_config;
  sub_1DC0C9C18();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
  type metadata accessor for ForYouFeedGroupConfig();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1DC280478@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t *boxed_opaque_existential_1;

  v3 = *v1 + OBJC_IVAR____TtC8StocksUI27StockForYouFeedGroupEmitter_knobs;
  a1[3] = type metadata accessor for StockForYouFeedGroupKnobs();
  a1[4] = sub_1DC080808(&qword_1EDB366D8, (uint64_t (*)(uint64_t))type metadata accessor for StockForYouFeedGroupKnobs, (uint64_t)&unk_1DC41FE84);
  a1[5] = sub_1DC080808(&qword_1F03504F0, (uint64_t (*)(uint64_t))type metadata accessor for StockForYouFeedGroupKnobs, (uint64_t)&unk_1DC41FE5C);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a1);
  return sub_1DC0990BC(v3, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(_QWORD))type metadata accessor for StockForYouFeedGroupKnobs);
}

uint64_t sub_1DC280510(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v11;

  sub_1DC08CBF0(0, &qword_1EDB2AF80, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedServiceConfig, sub_1DC106C20, MEMORY[0x1E0D5C7A0]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v11 - v5;
  if (qword_1EDB2D2E8 != -1)
    swift_once();
  v7 = (id)qword_1EDB2D2E0;
  sub_1DC408FE0();
  sub_1DC403F28();

  sub_1DC1E9298();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
  v8 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v9 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v9 + v8, v6, v3);
  return sub_1DC402CEC();
}

uint64_t sub_1DC280678(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1;
  sub_1DC277604();
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = v3;
  swift_retain();
  swift_retain();
  return sub_1DC402CEC();
}

uint64_t sub_1DC2806EC()
{
  sub_1DC0C9C18();
  return sub_1DC40742C();
}

uint64_t sub_1DC280720@<X0>(uint64_t *a1@<X8>)
{
  uint64_t inited;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1DC089DA4(0, &qword_1EDB40070, (uint64_t (*)(uint64_t))sub_1DC0CFB4C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DC40DC10;
  *(_QWORD *)(inited + 32) = 0x696669746E656469;
  *(_QWORD *)(inited + 40) = 0xEA00000000007265;
  sub_1DC0C9C18();
  v3 = sub_1DC40742C();
  *(_QWORD *)(inited + 72) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(inited + 48) = v3;
  *(_QWORD *)(inited + 56) = v4;
  sub_1DC0CF9B8(inited);
  sub_1DC286ACC(0);
  a1[3] = v5;
  a1[4] = sub_1DC080808(&qword_1EDB294A8, (uint64_t (*)(uint64_t))sub_1DC286ACC, MEMORY[0x1E0DB3C80]);
  __swift_allocate_boxed_opaque_existential_1(a1);
  return sub_1DC402878();
}

uint64_t sub_1DC280828()
{
  sub_1DC080808(&qword_1EDB37C78, (uint64_t (*)(uint64_t))type metadata accessor for StockForYouFeedGroupEmitter, (uint64_t)&unk_1DC41F6F8);
  return sub_1DC40286C();
}

uint64_t sub_1DC280868()
{
  return sub_1DC080808(&qword_1EDB37C80, (uint64_t (*)(uint64_t))type metadata accessor for StockForYouFeedGroupEmitter, (uint64_t)&unk_1DC41F6D0);
}

uint64_t sub_1DC280894()
{
  return sub_1DC080808(&qword_1EDB37C70, (uint64_t (*)(uint64_t))type metadata accessor for StockForYouFeedGroupEmitter, (uint64_t)&unk_1DC41F728);
}

uint64_t sub_1DC2808C0()
{
  return sub_1DC080808(&qword_1EDB37C78, (uint64_t (*)(uint64_t))type metadata accessor for StockForYouFeedGroupEmitter, (uint64_t)&unk_1DC41F6F8);
}

uint64_t sub_1DC2808EC()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DC280918(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v5 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_1DC17C744;
  return sub_1DC27CC84(a1, v5, v4);
}

uint64_t sub_1DC28097C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  _QWORD *v8;
  uint64_t (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v8[17] = a7;
  v8[18] = v7;
  v8[15] = a5;
  v8[16] = a6;
  v8[13] = a3;
  v8[14] = a4;
  v8[11] = a1;
  v8[12] = a2;
  v8[19] = *v7;
  v9 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1DC089DA4(0, &qword_1EDB275B8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5AE10], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v8[20] = swift_task_alloc();
  sub_1DC40799C();
  v8[21] = swift_task_alloc();
  v8[22] = swift_task_alloc();
  v10 = sub_1DC4073A8();
  v8[23] = v10;
  v8[24] = *(_QWORD *)(v10 - 8);
  v8[25] = swift_task_alloc();
  sub_1DC089DA4(0, (unint64_t *)&unk_1EDB2B0B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5E5A8], v9);
  v8[26] = swift_task_alloc();
  sub_1DC089DA4(0, &qword_1EDB2B0F8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5F240], v9);
  v8[27] = swift_task_alloc();
  sub_1DC12D96C();
  v8[28] = swift_task_alloc();
  v11 = sub_1DC408164();
  v8[29] = v11;
  v8[30] = *(_QWORD *)(v11 - 8);
  v8[31] = swift_task_alloc();
  v12 = sub_1DC407FCC();
  v8[32] = v12;
  v8[33] = *(_QWORD *)(v12 - 8);
  v8[34] = swift_task_alloc();
  sub_1DC28605C();
  v8[35] = swift_task_alloc();
  sub_1DC2860EC(0);
  v8[36] = swift_task_alloc();
  v13 = sub_1DC407EDC();
  v8[37] = v13;
  v8[38] = *(_QWORD *)(v13 - 8);
  v8[39] = swift_task_alloc();
  v8[40] = swift_task_alloc();
  v14 = sub_1DC40838C();
  v8[41] = v14;
  v8[42] = *(_QWORD *)(v14 - 8);
  v8[43] = swift_task_alloc();
  v15 = sub_1DC4083BC();
  v8[44] = v15;
  v8[45] = *(_QWORD *)(v15 - 8);
  v8[46] = swift_task_alloc();
  v8[47] = swift_task_alloc();
  sub_1DC286108(0);
  v8[48] = swift_task_alloc();
  type metadata accessor for StockForYouFeedGroupConfigData();
  v8[49] = swift_task_alloc();
  v16 = sub_1DC407EF4();
  v8[50] = v16;
  v8[51] = *(_QWORD *)(v16 - 8);
  v8[52] = swift_task_alloc();
  v8[53] = swift_task_alloc();
  sub_1DC286124();
  v8[54] = v17;
  v8[55] = swift_task_alloc();
  sub_1DC0B967C(0);
  v8[56] = swift_task_alloc();
  v8[57] = swift_task_alloc();
  v8[58] = swift_task_alloc();
  v8[59] = swift_task_alloc();
  v8[60] = swift_task_alloc();
  v8[61] = swift_task_alloc();
  v8[62] = swift_task_alloc();
  v8[63] = swift_task_alloc();
  v8[64] = swift_task_alloc();
  v18 = sub_1DC4010E4();
  v8[65] = v18;
  v8[66] = *(_QWORD *)(v18 - 8);
  v8[67] = swift_task_alloc();
  v19 = sub_1DC400394();
  v8[68] = v19;
  v8[69] = *(_QWORD *)(v19 - 8);
  v8[70] = swift_task_alloc();
  v20 = sub_1DC407C84();
  v8[71] = v20;
  v8[72] = *(_QWORD *)(v20 - 8);
  v8[73] = swift_task_alloc();
  v21 = sub_1DC400B68();
  v8[74] = v21;
  v8[75] = *(_QWORD *)(v21 - 8);
  v8[76] = swift_task_alloc();
  v22 = sub_1DC40070C();
  v8[77] = v22;
  v8[78] = *(_QWORD *)(v22 - 8);
  v8[79] = swift_task_alloc();
  v8[80] = swift_task_alloc();
  v8[81] = swift_task_alloc();
  v23 = sub_1DC40046C();
  v8[82] = v23;
  v8[83] = *(_QWORD *)(v23 - 8);
  v8[84] = swift_task_alloc();
  v8[85] = swift_task_alloc();
  v8[86] = swift_task_alloc();
  v24 = sub_1DC4011BC();
  v8[87] = v24;
  v8[88] = *(_QWORD *)(v24 - 8);
  v8[89] = swift_task_alloc();
  v8[90] = swift_task_alloc();
  v8[91] = swift_task_alloc();
  v8[92] = swift_task_alloc();
  v8[93] = swift_task_alloc();
  v8[94] = swift_task_alloc();
  v8[95] = swift_task_alloc();
  v8[96] = swift_task_alloc();
  v8[97] = swift_task_alloc();
  v8[98] = swift_task_alloc();
  v8[99] = swift_task_alloc();
  v8[100] = swift_task_alloc();
  v8[101] = swift_task_alloc();
  v8[102] = swift_task_alloc();
  v8[103] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1DC280F28()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(uint64_t, uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(uint64_t, uint64_t);
  void *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(uint64_t, uint64_t);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  unsigned int (*v68)(_QWORD, _QWORD, _QWORD);
  uint64_t v69;
  void (*v70)(uint64_t, uint64_t, uint64_t);
  char v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  _QWORD *v79;
  void (*v80)(uint64_t, unint64_t, uint64_t);
  void (*v81)(uint64_t, uint64_t);
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char v85;
  uint64_t v86;
  uint64_t v87;
  char v88;
  _QWORD *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  void (*v93)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  unint64_t v108;
  uint64_t v109;
  unint64_t v110;
  void *v111;
  unint64_t v112;
  uint64_t *v113;
  unint64_t v114;
  unint64_t v115;
  unint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  unint64_t v133;
  uint64_t v134;
  unint64_t v135;
  void *v136;
  unint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  unint64_t v144;
  uint64_t v145;
  void (*v146)(_QWORD, unint64_t, _QWORD);
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  unint64_t v162;
  uint64_t v163;
  unint64_t v164;
  void *v165;
  unint64_t v166;
  unint64_t v167;
  unint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  BOOL (*v174)();
  uint64_t v175;
  uint64_t v176;
  uint64_t (*v177)(uint64_t, uint64_t, uint64_t);
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  unint64_t v192;
  uint64_t v193;
  unint64_t v194;
  void *v195;
  unint64_t v196;
  unint64_t v197;
  unint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  _BYTE *v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  int v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  char v221;
  void (*v222)(uint64_t, uint64_t);
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  unint64_t v239;
  uint64_t v240;
  unint64_t v241;
  void *v242;
  unint64_t v243;
  unint64_t v244;
  unint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  void *v273;
  _BYTE *v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  _QWORD *v284;
  uint64_t v285;
  uint64_t v286;
  _QWORD *v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  int *v291;
  int64_t v292;
  uint64_t v293;
  uint64_t v294;
  unint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t *v300;
  uint64_t v301;
  unint64_t v302;
  unint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  void (*v312)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v313;
  uint64_t v314;
  unint64_t v315;
  uint64_t v316;
  unint64_t v317;
  void (*v318)(unint64_t, uint64_t, uint64_t);
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t (*v323)(void);
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  void (*v330)(uint64_t, uint64_t);
  _QWORD *v331;
  unint64_t v333;
  uint64_t v334;
  void (*v335)(uint64_t, uint64_t);
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  _QWORD *v347;
  char *v348;
  uint64_t v349;
  uint64_t v350;
  uint64_t v351;
  uint64_t v352;
  uint64_t *v353;
  uint64_t v354;
  uint64_t *v355;
  uint64_t v356;
  uint64_t v357;
  uint64_t v358;
  uint64_t v359;
  uint64_t v360;
  void (*v361)(unint64_t, uint64_t, uint64_t);
  uint64_t v362;
  uint64_t v363;
  uint64_t v364;
  uint64_t v365;
  uint64_t v366;
  uint64_t v367;
  uint64_t v368;
  void (*v369)(uint64_t, uint64_t);
  uint64_t v370;
  uint64_t v371;
  uint64_t v372;
  uint64_t v373;
  uint64_t v374;
  uint64_t v375;
  uint64_t v376;
  void (*v377)(uint64_t, uint64_t);
  uint64_t v378;
  uint64_t v379;
  uint64_t v380;
  uint64_t v381;
  uint64_t v382;
  uint64_t v383;
  uint64_t v384;
  void (*v385)(uint64_t, uint64_t);
  char *v386;
  unsigned int (*v387)(_QWORD, _QWORD, _QWORD);
  void (*v388)(uint64_t, uint64_t, uint64_t);
  uint64_t v389;
  uint64_t v390;
  uint64_t v391;
  uint64_t v392;
  uint64_t v393;
  unint64_t v394;
  uint64_t v395;
  uint64_t v396;
  uint64_t v397;
  void (*v398)(_QWORD *, uint64_t, uint64_t);
  uint64_t v399;
  uint64_t v400;
  void (*v401)(uint64_t, unint64_t, uint64_t);
  _QWORD **v402;
  uint64_t v403;
  uint64_t v404;
  uint64_t v405;
  uint64_t v406;
  uint64_t v407;
  void (*v408)(uint64_t, uint64_t, uint64_t);
  void (*v409)(uint64_t, uint64_t, uint64_t);
  void (*v410)(uint64_t, uint64_t, uint64_t);
  uint64_t v411;
  uint64_t v412;
  uint64_t v413;
  uint64_t v414;
  uint64_t v415;
  uint64_t v416;

  v1 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v0[2] = MEMORY[0x1E0DEE9D8];
  v0[3] = v1;
  v355 = v0 + 3;
  v0[4] = v1;
  v353 = v0 + 4;
  v402 = (_QWORD **)(v0 + 2);
  v2 = v0[15];
  v3 = *(_QWORD *)(v2 + 16);
  if (v3)
  {
    v4 = v0[88];
    v5 = v2 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v6 = *(_QWORD *)(v4 + 72);
    v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
    swift_bridgeObjectRetain();
    do
    {
      v8 = *(_QWORD *)(v415 + 824);
      v9 = *(_QWORD *)(v415 + 696);
      v7(v8, v5, v9);
      v10 = sub_1DC4011A4();
      v12 = v11;
      (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v8, v9);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v1 = sub_1DC108BBC(0, v1[2] + 1, 1, v1);
      v14 = v1[2];
      v13 = v1[3];
      if (v14 >= v13 >> 1)
        v1 = sub_1DC108BBC((_QWORD *)(v13 > 1), v14 + 1, 1, v1);
      v1[2] = v14 + 1;
      v15 = &v1[2 * v14];
      v15[4] = v10;
      v15[5] = v12;
      v5 += v6;
      --v3;
    }
    while (v3);
    v0 = (_QWORD *)v415;
    swift_bridgeObjectRelease();
  }
  v356 = v0[88];
  v358 = v0[87];
  v364 = v0[85];
  v349 = v0[84];
  v350 = v0[83];
  v368 = v0[82];
  v338 = v0[80];
  v340 = v0[78];
  v397 = v0[77];
  v341 = v0[73];
  v342 = v0[72];
  v391 = v0[71];
  v370 = v0[70];
  v345 = v0[69];
  v384 = v0[68];
  v376 = v0[67];
  v346 = v0[66];
  v379 = v0[65];
  v386 = (char *)v0[64];
  v351 = v0[62];
  v16 = (_QWORD *)v0[18];
  v347 = (_QWORD *)v0[17];
  v348 = (char *)v0[63];
  __swift_project_boxed_opaque_existential_1(v347, v347[3]);
  sub_1DC400460();
  sub_1DC400B8C();
  swift_bridgeObjectRelease();
  sub_1DC400424();
  swift_bridgeObjectRelease();
  __swift_project_boxed_opaque_existential_1(v16 + 3, v16[6]);
  sub_1DC400DCC();
  sub_1DC089DA4(0, &qword_1EDB3FE10, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAEB40], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v17 = sub_1DC400B5C();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  v343 = 8 * *(_QWORD *)(v18 + 72);
  v20 = *(_QWORD *)(v18 + 72);
  v337 = v20;
  v344 = swift_allocObject();
  *(_OWORD *)(v344 + 16) = xmmword_1DC416AB0;
  *(_QWORD *)(v344 + v19) = v1;
  v361 = *(void (**)(unint64_t, uint64_t, uint64_t))(v18 + 104);
  v361(v344 + v19, *MEMORY[0x1E0DAEB18], v17);
  v21 = (uint64_t *)(v344 + v19 + v20);
  sub_1DC286184();
  v23 = v22;
  v24 = (uint64_t *)((char *)v21 + *(int *)(v22 + 48));
  __swift_project_boxed_opaque_existential_1(v16 + 3, v16[6]);
  sub_1DC400DCC();
  v25 = sub_1DC400694();
  v26 = *(void (**)(uint64_t, uint64_t))(v340 + 8);
  *(_QWORD *)(v415 + 832) = v26;
  v335 = v26;
  v26(v338, v397);
  *v21 = v25;
  v27 = v16[2];
  *v24 = v27;
  v28 = *MEMORY[0x1E0DAE700];
  v29 = sub_1DC400790();
  v339 = *(_QWORD *)(v29 - 8);
  v398 = *(void (**)(_QWORD *, uint64_t, uint64_t))(v339 + 104);
  v398(v24, v28, v29);
  v30 = *MEMORY[0x1E0DAEB30];
  v361((unint64_t)v21, v30, v17);
  v31 = v344 + v19 + 2 * v337;
  v336 = v31 + *(int *)(v23 + 48);
  type metadata accessor for StockForYouFeedGroupKnobs();
  swift_unknownObjectRetain();
  sub_1DC4078E8();
  sub_1DC407978();
  (*(void (**)(uint64_t, uint64_t))(v342 + 8))(v341, v391);
  v398((_QWORD *)v336, *MEMORY[0x1E0DAE720], v29);
  v361(v31, v30, v17);
  v32 = (uint64_t *)(v344 + v19 + 3 * v337);
  v33 = sub_1DC4006F4();
  sub_1DC400700();
  *v32 = v33;
  v32[1] = v34;
  v361((unint64_t)v32, *MEMORY[0x1E0DAEB28], v17);
  sub_1DC089DA4(0, &qword_1EDB3FE08, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAE758], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v35 = *(_QWORD *)(v339 + 72);
  v36 = (*(unsigned __int8 *)(v339 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v339 + 80);
  v37 = swift_allocObject();
  *(_OWORD *)(v37 + 16) = xmmword_1DC40C740;
  v38 = v37 + v36;
  v398((_QWORD *)v38, *MEMORY[0x1E0DAE710], v29);
  sub_1DC40067C();
  *(_QWORD *)(v38 + v35) = v39;
  v398((_QWORD *)(v38 + v35), *MEMORY[0x1E0DAE750], v29);
  *(_QWORD *)(v344 + v19 + 4 * v337) = v37;
  v361(v344 + v19 + 4 * v337, *MEMORY[0x1E0DAEB10], v17);
  v40 = v344 + v19 + 5 * v337;
  v398((_QWORD *)v40, *MEMORY[0x1E0DAE738], v29);
  v41 = *MEMORY[0x1E0DAEB38];
  v361(v40, v41, v17);
  v398((_QWORD *)(v344 + v19 + 6 * v337), *MEMORY[0x1E0DAE718], v29);
  v361(v344 + v19 + 6 * v337, v41, v17);
  v42 = (_QWORD *)(v344 + v19 + v343 - v337);
  *v42 = v27;
  sub_1DC0824D4((uint64_t)(v16 + 3), (uint64_t)(v42 + 1));
  v398(v42, *MEMORY[0x1E0DAE730], v29);
  v361((unint64_t)v42, v41, v17);
  swift_unknownObjectRetain();
  *(_QWORD *)(v344 + v19 + v343) = sub_1DC400544();
  v398((_QWORD *)(v344 + v19 + v343), *MEMORY[0x1E0DAE708], v29);
  v361(v344 + v19 + v343, v41, v17);
  sub_1DC400B50();
  sub_1DC400454();
  sub_1DC0FDC18(0, (unint64_t *)&qword_1EDB400C0, (unint64_t *)&qword_1EDB400F0, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v43 = swift_allocObject();
  *(_OWORD *)(v43 + 16) = xmmword_1DC40FA70;
  sub_1DC080808(&qword_1EDB28BC8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAE3A0], MEMORY[0x1E0DAE3A8]);
  sub_1DC408E90();
  sub_1DC408ED8();
  v44 = sub_1DC408ECC();
  v45 = MEMORY[0x1E0DEB418];
  v46 = MEMORY[0x1E0DEB490];
  *(_QWORD *)(v43 + 56) = MEMORY[0x1E0DEB418];
  *(_QWORD *)(v43 + 64) = v46;
  v47 = v46;
  *(_QWORD *)(v43 + 32) = v44;
  sub_1DC408E90();
  sub_1DC408ED8();
  v48 = sub_1DC408ECC();
  *(_QWORD *)(v43 + 96) = v45;
  *(_QWORD *)(v43 + 104) = v47;
  *(_QWORD *)(v43 + 72) = v48;
  sub_1DC400430();
  sub_1DC400388();
  v49 = *(void (**)(uint64_t, uint64_t))(v345 + 8);
  *(_QWORD *)(v415 + 840) = v49;
  v49(v370, v384);
  v50 = sub_1DC4010B4();
  v52 = v51;
  v53 = *(void (**)(uint64_t, uint64_t))(v346 + 8);
  v53(v376, v379);
  *(_QWORD *)(v43 + 136) = MEMORY[0x1E0DEA968];
  v394 = sub_1DC0E7FAC();
  *(_QWORD *)(v43 + 144) = v394;
  *(_QWORD *)(v43 + 112) = v50;
  *(_QWORD *)(v43 + 120) = v52;
  sub_1DC09BDF8();
  v54 = (void *)sub_1DC409580();
  sub_1DC408FE0();
  sub_1DC403F28();

  swift_bridgeObjectRelease();
  __swift_project_boxed_opaque_existential_1(v16 + 3, v16[6]);
  sub_1DC400DCC();
  sub_1DC284BD4(v364, v402, (_QWORD **)v355, (_QWORD **)v353, v386);
  sub_1DC285360(v364, (uint64_t *)v402, v355, v353, v348);
  __swift_project_boxed_opaque_existential_1(v347, v347[3]);
  sub_1DC400460();
  swift_bridgeObjectRetain();
  sub_1DC400B98();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1DC400424();
  swift_bridgeObjectRelease();
  v55 = *(_QWORD *)(v415 + 16);
  v56 = *(_QWORD *)(v415 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v57 = sub_1DC2861EC(v349, v55, v56);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v58 = *(void (**)(uint64_t, uint64_t))(v350 + 8);
  *(_QWORD *)(v415 + 848) = v58;
  v59 = v368;
  v369 = v58;
  v58(v349, v59);
  v60 = swift_allocObject();
  *(_OWORD *)(v60 + 16) = xmmword_1DC40C740;
  v61 = *(_QWORD *)(v57 + 16);
  *(_QWORD *)(v60 + 56) = MEMORY[0x1E0DEB418];
  *(_QWORD *)(v60 + 64) = MEMORY[0x1E0DEB490];
  *(_QWORD *)(v60 + 32) = v61;
  sub_1DC400430();
  sub_1DC400388();
  v62 = v384;
  v385 = v49;
  v49(v370, v62);
  v63 = v376;
  v64 = sub_1DC4010B4();
  v66 = v65;
  v377 = v53;
  v53(v63, v379);
  *(_QWORD *)(v60 + 96) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v60 + 104) = v394;
  *(_QWORD *)(v60 + 72) = v64;
  *(_QWORD *)(v60 + 80) = v66;
  v67 = (void *)sub_1DC409580();
  sub_1DC408FE0();
  sub_1DC403F28();

  swift_bridgeObjectRelease();
  *(_QWORD *)(v415 + 72) = MEMORY[0x1E0DEE9D8];
  sub_1DC0990BC((uint64_t)v386, v351, (uint64_t (*)(_QWORD))sub_1DC0B967C);
  v68 = *(unsigned int (**)(_QWORD, _QWORD, _QWORD))(v356 + 48);
  v380 = v57;
  v387 = v68;
  if (v68(v351, 1, v358) == 1)
  {
    sub_1DC0926D8(*(_QWORD *)(v415 + 496), (uint64_t (*)(_QWORD))sub_1DC0B967C);
  }
  else
  {
    v69 = *(_QWORD *)(v415 + 144);
    v70 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v415 + 704) + 32);
    v70(*(_QWORD *)(v415 + 816), *(_QWORD *)(v415 + 496), *(_QWORD *)(v415 + 696));
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v69 + OBJC_IVAR____TtC8StocksUI27StockForYouFeedGroupEmitter_headlineViewingHistory), *(_QWORD *)(v69 + OBJC_IVAR____TtC8StocksUI27StockForYouFeedGroupEmitter_headlineViewingHistory + 24));
    v71 = sub_1DC400D78();
    v72 = *(_QWORD *)(v415 + 816);
    if ((v71 & 1) == 0)
    {
      v408 = v70;
      v119 = *(_QWORD *)(v415 + 808);
      v120 = *(_QWORD *)(v415 + 704);
      v121 = *(_QWORD *)(v415 + 696);
      v122 = *(_QWORD *)(v415 + 560);
      v123 = *(_QWORD *)(v415 + 544);
      v124 = *(_QWORD *)(v415 + 536);
      v125 = *(_QWORD *)(v415 + 520);
      v126 = swift_allocObject();
      *(_OWORD *)(v126 + 16) = xmmword_1DC40C740;
      sub_1DC400430();
      sub_1DC400388();
      v385(v122, v123);
      v127 = sub_1DC4010B4();
      v129 = v128;
      v130 = v125;
      v89 = (_QWORD *)v415;
      v377(v124, v130);
      v131 = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v126 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v126 + 64) = v394;
      *(_QWORD *)(v126 + 32) = v127;
      *(_QWORD *)(v126 + 40) = v129;
      v132 = sub_1DC40118C();
      *(_QWORD *)(v126 + 96) = v131;
      *(_QWORD *)(v126 + 104) = v394;
      if (v133)
        v134 = v132;
      else
        v134 = 0;
      v135 = 0xE000000000000000;
      if (v133)
        v135 = v133;
      *(_QWORD *)(v126 + 72) = v134;
      *(_QWORD *)(v126 + 80) = v135;
      v136 = (void *)sub_1DC409580();
      sub_1DC408FE0();
      sub_1DC403F28();

      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v120 + 16))(v119, v72, v121);
      v112 = *(_QWORD *)(v415 + 72);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v112 = sub_1DC0CDD4C(0, *(_QWORD *)(v112 + 16) + 1, 1, v112);
      v113 = (uint64_t *)(v402 + 7);
      v115 = *(_QWORD *)(v112 + 16);
      v137 = *(_QWORD *)(v112 + 24);
      v116 = v115 + 1;
      if (v115 >= v137 >> 1)
        v112 = sub_1DC0CDD4C(v137 > 1, v115 + 1, 1, v112);
      v117 = *(_QWORD *)(v415 + 816);
      v118 = *(_QWORD *)(v415 + 808);
      goto LABEL_41;
    }
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v415 + 704) + 8))(*(_QWORD *)(v415 + 816), *(_QWORD *)(v415 + 696));
    v68 = v387;
  }
  v73 = *(_QWORD *)(v415 + 696);
  v74 = *(_QWORD *)(v415 + 488);
  sub_1DC0990BC(*(_QWORD *)(v415 + 504), v74, (uint64_t (*)(_QWORD))sub_1DC0B967C);
  if (v68(v74, 1, v73) != 1)
  {
    v94 = *(_QWORD *)(v415 + 800);
    v371 = *(_QWORD *)(v415 + 792);
    v95 = *(_QWORD *)(v415 + 704);
    v96 = *(_QWORD *)(v415 + 696);
    v97 = *(_QWORD *)(v415 + 560);
    v98 = *(_QWORD *)(v415 + 544);
    v99 = *(_QWORD *)(v415 + 536);
    v100 = *(_QWORD *)(v415 + 520);
    v408 = *(void (**)(uint64_t, uint64_t, uint64_t))(v95 + 32);
    v408(v94, *(_QWORD *)(v415 + 488), v96);
    v101 = swift_allocObject();
    *(_OWORD *)(v101 + 16) = xmmword_1DC40C740;
    sub_1DC400430();
    sub_1DC400388();
    v385(v97, v98);
    v102 = sub_1DC4010B4();
    v104 = v103;
    v105 = v99;
    v89 = (_QWORD *)v415;
    v377(v105, v100);
    v106 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v101 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v101 + 64) = v394;
    *(_QWORD *)(v101 + 32) = v102;
    *(_QWORD *)(v101 + 40) = v104;
    v107 = sub_1DC40118C();
    *(_QWORD *)(v101 + 96) = v106;
    *(_QWORD *)(v101 + 104) = v394;
    if (v108)
      v109 = v107;
    else
      v109 = 0;
    v110 = 0xE000000000000000;
    if (v108)
      v110 = v108;
    *(_QWORD *)(v101 + 72) = v109;
    *(_QWORD *)(v101 + 80) = v110;
    v111 = (void *)sub_1DC409580();
    sub_1DC408FE0();
    sub_1DC403F28();

    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v95 + 16))(v371, v94, v96);
    v112 = *(_QWORD *)(v415 + 72);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v112 = sub_1DC0CDD4C(0, *(_QWORD *)(v112 + 16) + 1, 1, v112);
    v113 = (uint64_t *)(v402 + 7);
    v115 = *(_QWORD *)(v112 + 16);
    v114 = *(_QWORD *)(v112 + 24);
    v116 = v115 + 1;
    if (v115 >= v114 >> 1)
      v112 = sub_1DC0CDD4C(v114 > 1, v115 + 1, 1, v112);
    v117 = *(_QWORD *)(v415 + 800);
    v118 = *(_QWORD *)(v415 + 792);
LABEL_41:
    v138 = v89[88];
    v139 = v89[87];
    *(_QWORD *)(v112 + 16) = v116;
    v408(v112+ ((*(unsigned __int8 *)(v138 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v138 + 80))+ *(_QWORD *)(v138 + 72) * v115, v118, v139);
    v89[9] = v112;
    (*(void (**)(uint64_t, uint64_t))(v138 + 8))(v117, v139);
    goto LABEL_75;
  }
  sub_1DC0926D8(*(_QWORD *)(v415 + 488), (uint64_t (*)(_QWORD))sub_1DC0B967C);
  v75 = (_QWORD *)v415;
  v76 = *(_QWORD *)(v57 + 16);
  if (v76)
  {
    v77 = *(_QWORD *)(v415 + 704);
    v78 = v57 + ((*(unsigned __int8 *)(v77 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v77 + 80));
    v79 = (_QWORD *)(*(_QWORD *)(v415 + 144)
                   + OBJC_IVAR____TtC8StocksUI27StockForYouFeedGroupEmitter_headlineViewingHistory);
    v407 = *(_QWORD *)(v77 + 72);
    v80 = *(void (**)(uint64_t, unint64_t, uint64_t))(v77 + 16);
    swift_bridgeObjectRetain();
    while (1)
    {
      v82 = v75[97];
      v83 = v75[96];
      v84 = v75[87];
      v80(v82, v78, v84);
      v85 = sub_1DC40115C();
      v80(v83, v82, v84);
      v86 = v75[96];
      v87 = v75[87];
      if ((v85 & 1) != 0)
      {
        __swift_project_boxed_opaque_existential_1(v79, v79[3]);
        v88 = sub_1DC400D78();
        v81 = *(void (**)(uint64_t, uint64_t))(v77 + 8);
        v81(v86, v87);
        if ((v88 & 1) == 0)
        {
          v89 = (_QWORD *)v415;
          v90 = *(_QWORD *)(v415 + 704);
          v91 = *(_QWORD *)(v415 + 696);
          v92 = *(_QWORD *)(v415 + 480);
          (*(void (**)(uint64_t, _QWORD, uint64_t))(v90 + 32))(v92, *(_QWORD *)(v415 + 776), v91);
          v93 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v90 + 56);
          v93(v92, 0, 1, v91);
          goto LABEL_44;
        }
      }
      else
      {
        v81 = *(void (**)(uint64_t, uint64_t))(v77 + 8);
        v81(v75[96], v75[87]);
      }
      v75 = (_QWORD *)v415;
      v81(*(_QWORD *)(v415 + 776), *(_QWORD *)(v415 + 696));
      v78 += v407;
      if (!--v76)
        goto LABEL_43;
    }
  }
  swift_bridgeObjectRetain();
LABEL_43:
  v93 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v75[88] + 56);
  v93(v75[60], 1, 1, v75[87]);
  v89 = v75;
LABEL_44:
  v140 = v89[87];
  v141 = v89[60];
  swift_bridgeObjectRelease();
  if (v387(v141, 1, v140) == 1)
  {
    sub_1DC0926D8(v89[60], (uint64_t (*)(_QWORD))sub_1DC0B967C);
    v142 = *(_QWORD *)(v380 + 16);
    if (v142)
    {
      v143 = v89[88];
      v144 = v380 + ((*(unsigned __int8 *)(v143 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v143 + 80));
      v145 = *(_QWORD *)(v143 + 72);
      v146 = *(void (**)(_QWORD, unint64_t, _QWORD))(v143 + 16);
      swift_bridgeObjectRetain();
      while (1)
      {
        v146(v89[93], v144, v89[87]);
        if ((sub_1DC40115C() & 1) != 0)
          break;
        (*(void (**)(_QWORD, _QWORD))(v143 + 8))(v89[93], v89[87]);
        v144 += v145;
        if (!--v142)
        {
          v147 = 1;
          goto LABEL_62;
        }
      }
      (*(void (**)(_QWORD, _QWORD, _QWORD))(v89[88] + 32))(v89[59], v89[93], v89[87]);
      v147 = 0;
    }
    else
    {
      swift_bridgeObjectRetain();
      v147 = 1;
    }
LABEL_62:
    v175 = v89[87];
    v176 = v89[59];
    v93(v176, v147, 1, v175);
    swift_bridgeObjectRelease();
    v177 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v387;
    if (v387(v176, 1, v175) == 1)
    {
      sub_1DC0926D8(v89[59], (uint64_t (*)(_QWORD))sub_1DC0B967C);
      v113 = (uint64_t *)(v402 + 7);
      goto LABEL_76;
    }
    v178 = v89[94];
    v373 = v89[92];
    v179 = v89[88];
    v180 = v89[87];
    v181 = v89[70];
    v182 = v89[68];
    v183 = *(_QWORD *)(v415 + 536);
    v184 = *(_QWORD *)(v415 + 520);
    v410 = *(void (**)(uint64_t, uint64_t, uint64_t))(v179 + 32);
    v410(v178, *(_QWORD *)(v415 + 472), v180);
    v185 = swift_allocObject();
    *(_OWORD *)(v185 + 16) = xmmword_1DC40C740;
    sub_1DC400430();
    sub_1DC400388();
    v385(v181, v182);
    v186 = sub_1DC4010B4();
    v188 = v187;
    v189 = v183;
    v89 = (_QWORD *)v415;
    v377(v189, v184);
    v190 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v185 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v185 + 64) = v394;
    *(_QWORD *)(v185 + 32) = v186;
    *(_QWORD *)(v185 + 40) = v188;
    v191 = sub_1DC40118C();
    *(_QWORD *)(v185 + 96) = v190;
    *(_QWORD *)(v185 + 104) = v394;
    if (v192)
      v193 = v191;
    else
      v193 = 0;
    v194 = 0xE000000000000000;
    if (v192)
      v194 = v192;
    *(_QWORD *)(v185 + 72) = v193;
    *(_QWORD *)(v185 + 80) = v194;
    v195 = (void *)sub_1DC409580();
    sub_1DC408FE0();
    sub_1DC403F28();

    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v179 + 16))(v373, v178, v180);
    v196 = *(_QWORD *)(v415 + 72);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v196 = sub_1DC0CDD4C(0, *(_QWORD *)(v196 + 16) + 1, 1, v196);
    v198 = *(_QWORD *)(v196 + 16);
    v197 = *(_QWORD *)(v196 + 24);
    v113 = (uint64_t *)(v402 + 7);
    if (v198 >= v197 >> 1)
      v196 = sub_1DC0CDD4C(v197 > 1, v198 + 1, 1, v196);
    v169 = *(_QWORD *)(v415 + 752);
    v199 = *(_QWORD *)(v415 + 736);
    v171 = *(_QWORD *)(v415 + 704);
    v172 = *(_QWORD *)(v415 + 696);
    *(_QWORD *)(v196 + 16) = v198 + 1;
    v410(v196+ ((*(unsigned __int8 *)(v171 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v171 + 80))+ *(_QWORD *)(v171 + 72) * v198, v199, v172);
    *(_QWORD *)(v415 + 72) = v196;
    v173 = swift_task_alloc();
    *(_QWORD *)(v173 + 16) = v169;
    v174 = sub_1DC286BFC;
  }
  else
  {
    v148 = v89[98];
    v372 = v89[95];
    v149 = v89[88];
    v150 = v89[87];
    v151 = v89[70];
    v152 = v89[68];
    v153 = *(_QWORD *)(v415 + 536);
    v154 = *(_QWORD *)(v415 + 520);
    v409 = *(void (**)(uint64_t, uint64_t, uint64_t))(v149 + 32);
    v409(v148, *(_QWORD *)(v415 + 480), v150);
    v155 = swift_allocObject();
    *(_OWORD *)(v155 + 16) = xmmword_1DC40C740;
    sub_1DC400430();
    sub_1DC400388();
    v385(v151, v152);
    v156 = sub_1DC4010B4();
    v158 = v157;
    v159 = v153;
    v89 = (_QWORD *)v415;
    v377(v159, v154);
    v160 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v155 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v155 + 64) = v394;
    *(_QWORD *)(v155 + 32) = v156;
    *(_QWORD *)(v155 + 40) = v158;
    v161 = sub_1DC40118C();
    *(_QWORD *)(v155 + 96) = v160;
    *(_QWORD *)(v155 + 104) = v394;
    if (v162)
      v163 = v161;
    else
      v163 = 0;
    v164 = 0xE000000000000000;
    if (v162)
      v164 = v162;
    *(_QWORD *)(v155 + 72) = v163;
    *(_QWORD *)(v155 + 80) = v164;
    v165 = (void *)sub_1DC409580();
    sub_1DC408FE0();
    sub_1DC403F28();

    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v149 + 16))(v372, v148, v150);
    v166 = *(_QWORD *)(v415 + 72);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v166 = sub_1DC0CDD4C(0, *(_QWORD *)(v166 + 16) + 1, 1, v166);
    v113 = (uint64_t *)(v402 + 7);
    v168 = *(_QWORD *)(v166 + 16);
    v167 = *(_QWORD *)(v166 + 24);
    if (v168 >= v167 >> 1)
      v166 = sub_1DC0CDD4C(v167 > 1, v168 + 1, 1, v166);
    v169 = *(_QWORD *)(v415 + 784);
    v170 = *(_QWORD *)(v415 + 760);
    v171 = *(_QWORD *)(v415 + 704);
    v172 = *(_QWORD *)(v415 + 696);
    *(_QWORD *)(v166 + 16) = v168 + 1;
    v409(v166+ ((*(unsigned __int8 *)(v171 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v171 + 80))+ *(_QWORD *)(v171 + 72) * v168, v170, v172);
    *(_QWORD *)(v415 + 72) = v166;
    v173 = swift_task_alloc();
    *(_QWORD *)(v173 + 16) = v169;
    v174 = sub_1DC2868F8;
  }
  sub_1DC241CC0((uint64_t (*)(_QWORD))v174, v173, v380);
  v380 = v200;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v171 + 8))(v169, v172);
LABEL_75:
  v177 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v387;
LABEL_76:
  if (*(_QWORD *)(*v113 + 16))
  {
    (*(void (**)(_QWORD, unint64_t, _QWORD))(v89[88] + 16))(v89[58], *v113 + ((*(unsigned __int8 *)(v89[88] + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v89[88] + 80)), v89[87]);
    v201 = 0;
  }
  else
  {
    v201 = 1;
  }
  v202 = (char *)v402 + 889;
  v203 = v89[87];
  v204 = v89[64];
  v205 = v89[58];
  v206 = v89[54];
  v207 = v89[55];
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v89[88] + 56))(v205, v201, 1, v203);
  v208 = v207 + *(int *)(v206 + 48);
  sub_1DC0990BC(v205, v207, (uint64_t (*)(_QWORD))sub_1DC0B967C);
  sub_1DC0990BC(v204, v208, (uint64_t (*)(_QWORD))sub_1DC0B967C);
  v209 = v177(v207, 1, v203);
  v210 = v89[87];
  if (v209 == 1)
  {
    sub_1DC0926D8(v89[58], (uint64_t (*)(_QWORD))sub_1DC0B967C);
    if (v177(v208, 1, v210) == 1)
    {
      v211 = v89[55];
LABEL_88:
      sub_1DC0926D8(v211, (uint64_t (*)(_QWORD))sub_1DC0B967C);
      goto LABEL_99;
    }
    goto LABEL_84;
  }
  sub_1DC0990BC(v89[55], v89[57], (uint64_t (*)(_QWORD))sub_1DC0B967C);
  if (v177(v208, 1, v210) == 1)
  {
    v212 = v89[88];
    v213 = v89[87];
    v214 = v89[57];
    sub_1DC0926D8(v89[58], (uint64_t (*)(_QWORD))sub_1DC0B967C);
    (*(void (**)(uint64_t, uint64_t))(v212 + 8))(v214, v213);
    v177 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v387;
LABEL_84:
    sub_1DC0926D8(v89[55], (uint64_t (*)(_QWORD))sub_1DC286124);
    goto LABEL_86;
  }
  v215 = v89[91];
  v216 = v89[88];
  v217 = v89[87];
  v219 = v89[57];
  v218 = v89[58];
  v220 = v89[55];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v216 + 32))(v215, v208, v217);
  sub_1DC080808((unint64_t *)&unk_1EDB28E10, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF1A0], MEMORY[0x1E0DAF1B0]);
  v221 = sub_1DC4089F8();
  v222 = *(void (**)(uint64_t, uint64_t))(v216 + 8);
  v222(v215, v217);
  sub_1DC0926D8(v218, (uint64_t (*)(_QWORD))sub_1DC0B967C);
  v222(v219, v217);
  sub_1DC0926D8(v220, (uint64_t (*)(_QWORD))sub_1DC0B967C);
  v177 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v387;
  if ((v221 & 1) != 0)
    goto LABEL_99;
LABEL_86:
  v223 = v89[87];
  v224 = v89[56];
  sub_1DC0990BC(v89[64], v224, (uint64_t (*)(_QWORD))sub_1DC0B967C);
  if (v177(v224, 1, v223) == 1)
  {
    v211 = v89[56];
    goto LABEL_88;
  }
  v225 = v89[90];
  v365 = v89[89];
  v226 = v89[88];
  v227 = v89[87];
  v228 = v89[70];
  v229 = *(_QWORD *)(v415 + 544);
  v230 = *(_QWORD *)(v415 + 536);
  v231 = *(_QWORD *)(v415 + 520);
  v388 = *(void (**)(uint64_t, uint64_t, uint64_t))(v226 + 32);
  v388(v225, *(_QWORD *)(v415 + 448), v227);
  v232 = swift_allocObject();
  *(_OWORD *)(v232 + 16) = xmmword_1DC40C740;
  sub_1DC400430();
  sub_1DC400388();
  v233 = v229;
  v89 = (_QWORD *)v415;
  v385(v228, v233);
  v234 = sub_1DC4010B4();
  v236 = v235;
  v377(v230, v231);
  v237 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v232 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v232 + 64) = v394;
  *(_QWORD *)(v232 + 32) = v234;
  *(_QWORD *)(v232 + 40) = v236;
  v238 = sub_1DC40118C();
  *(_QWORD *)(v232 + 96) = v237;
  *(_QWORD *)(v232 + 104) = v394;
  if (v239)
    v240 = v238;
  else
    v240 = 0;
  v241 = 0xE000000000000000;
  if (v239)
    v241 = v239;
  *(_QWORD *)(v232 + 72) = v240;
  *(_QWORD *)(v232 + 80) = v241;
  v242 = (void *)sub_1DC409580();
  sub_1DC408FE0();
  sub_1DC403F28();

  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v226 + 16))(v365, v225, v227);
  v243 = *(_QWORD *)(v415 + 72);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v243 = sub_1DC0CDD4C(0, *(_QWORD *)(v243 + 16) + 1, 1, v243);
  v245 = *(_QWORD *)(v243 + 16);
  v244 = *(_QWORD *)(v243 + 24);
  v113 = (uint64_t *)(v402 + 7);
  if (v245 >= v244 >> 1)
    v243 = sub_1DC0CDD4C(v244 > 1, v245 + 1, 1, v243);
  v246 = *(_QWORD *)(v415 + 720);
  v247 = *(_QWORD *)(v415 + 712);
  v248 = *(_QWORD *)(v415 + 704);
  v249 = *(_QWORD *)(v415 + 696);
  *(_QWORD *)(v243 + 16) = v245 + 1;
  v388(v243+ ((*(unsigned __int8 *)(v248 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v248 + 80))+ *(_QWORD *)(v248 + 72) * v245, v247, v249);
  *(_QWORD *)(v415 + 72) = v243;
  (*(void (**)(uint64_t, uint64_t))(v248 + 8))(v246, v249);
  v202 = (char *)v402 + 889;
LABEL_99:
  sub_1DC0CDD60(v380);
  sub_1DC401270();
  sub_1DC080808(&qword_1EDB28000, (uint64_t (*)(uint64_t))type metadata accessor for StockForYouFeedGroupEmitter, (uint64_t)&unk_1DC41F750);
  sub_1DC4012D0();
  swift_release();
  if (*v202 == 1)
  {
    sub_1DC401264();
    sub_1DC4012D0();
    swift_release();
    v250 = v89[10];
  }
  else
  {
    v251 = sub_1DC4005D4();
    if (v251 >= 5)
      v250 = 5;
    else
      v250 = v251;
  }
  v252 = *v113;
  v253 = *(_QWORD *)(*v113 + 16);
  if (v250 < v253)
  {
    if (v250 < 0)
    {
      __break(1u);
    }
    else
    {
      sub_1DC409A0C();
      swift_unknownObjectRetain_n();
      v254 = swift_dynamicCastClass();
      if (!v254)
      {
        swift_bridgeObjectRelease();
        v254 = MEMORY[0x1E0DEE9D8];
      }
      v255 = *(_QWORD *)(v254 + 16);
      swift_release();
      if (v255 == v250)
      {
        v256 = swift_dynamicCastClass();
        if (!v256)
        {
          swift_bridgeObjectRelease();
          v256 = MEMORY[0x1E0DEE9D8];
        }
        goto LABEL_111;
      }
    }
    v333 = (2 * v250) | 1;
    v334 = v89[88];
    swift_bridgeObjectRelease();
    v256 = sub_1DC32B9B0(v252, v252 + ((*(unsigned __int8 *)(v334 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v334 + 80)), 0, v333);
LABEL_111:
    swift_bridgeObjectRelease();
    *v113 = v256;
    v253 = *(_QWORD *)(v256 + 16);
    v252 = v256;
  }
  if (v253 < sub_1DC4005E0())
  {
    v257 = v89[85];
    v258 = v89[82];
    v403 = v89[81];
    v411 = v89[86];
    v259 = v89[79];
    v260 = v89[77];
    v381 = v89[75];
    v389 = v89[74];
    v392 = v89[76];
    v261 = *(_QWORD *)(v415 + 560);
    v262 = *(_QWORD *)(v415 + 544);
    v263 = *(_QWORD *)(v415 + 536);
    v264 = *(_QWORD *)(v415 + 520);
    v374 = *(_QWORD *)(v415 + 512);
    v366 = *(_QWORD *)(v415 + 504);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v265 = swift_allocObject();
    *(_OWORD *)(v265 + 16) = xmmword_1DC40FA70;
    sub_1DC400430();
    sub_1DC400388();
    v385(v261, v262);
    v266 = sub_1DC4010B4();
    v268 = v267;
    v377(v263, v264);
    *(_QWORD *)(v265 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v265 + 64) = v394;
    *(_QWORD *)(v265 + 32) = v266;
    *(_QWORD *)(v265 + 40) = v268;
    v269 = sub_1DC4005E0();
    v270 = MEMORY[0x1E0DEB418];
    *(_QWORD *)(v265 + 96) = MEMORY[0x1E0DEB418];
    v271 = MEMORY[0x1E0DEB490];
    *(_QWORD *)(v265 + 104) = MEMORY[0x1E0DEB490];
    *(_QWORD *)(v265 + 72) = v269;
    v272 = *(_QWORD *)(*(_QWORD *)(v415 + 72) + 16);
    *(_QWORD *)(v265 + 136) = v270;
    *(_QWORD *)(v265 + 144) = v271;
    *(_QWORD *)(v265 + 112) = v272;
    v273 = (void *)sub_1DC409580();
    sub_1DC408FE0();
    sub_1DC403F28();

    swift_bridgeObjectRelease();
    sub_1DC285CEC();
    swift_allocError();
    *v274 = 1;
    swift_willThrow();
    sub_1DC0926D8(v366, (uint64_t (*)(_QWORD))sub_1DC0B967C);
    sub_1DC0926D8(v374, (uint64_t (*)(_QWORD))sub_1DC0B967C);
    v335(v259, v260);
    v369(v257, v258);
    (*(void (**)(uint64_t, uint64_t))(v381 + 8))(v392, v389);
    v335(v403, v260);
    v369(v411, v258);
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v323 = *(uint64_t (**)(void))(v415 + 8);
    return v323();
  }
  v275 = v89[50];
  v276 = v89[51];
  v278 = v89[48];
  v277 = v89[49];
  v89[107] = OBJC_IVAR____TtC8StocksUI27StockForYouFeedGroupEmitter_config;
  sub_1DC0C9C18();
  v89[108] = v279;
  sub_1DC407444();
  sub_1DC092ED0(v277, v278, (uint64_t (*)(_QWORD))sub_1DC286108);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v276 + 48))(v278, 1, v275) == 1)
  {
    v399 = v89[86];
    v375 = v89[82];
    v280 = v89[77];
    v390 = v89[76];
    v393 = v89[81];
    v362 = v89[79];
    v367 = v89[75];
    v378 = v89[74];
    v382 = v89[85];
    v281 = v89[70];
    v282 = v89[68];
    v283 = v89[67];
    v404 = v89[66];
    v412 = v89[65];
    v284 = v89;
    v287 = v89 + 63;
    v286 = v89[63];
    v285 = v287[1];
    v288 = v284[48];
    v395 = v284[24];
    v400 = v284[23];
    v289 = v284[11];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1DC0926D8(v288, (uint64_t (*)(_QWORD))sub_1DC286108);
    sub_1DC400430();
    sub_1DC400388();
    v385(v281, v282);
    sub_1DC0926D8(v286, (uint64_t (*)(_QWORD))sub_1DC0B967C);
    sub_1DC0926D8(v285, (uint64_t (*)(_QWORD))sub_1DC0B967C);
    v335(v362, v280);
    v369(v382, v375);
    (*(void (**)(uint64_t, uint64_t))(v367 + 8))(v390, v378);
    v335(v393, v280);
    v369(v399, v375);
    v290 = v284[9];
    v291 = (int *)type metadata accessor for StockForYouFeedGroup();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v395 + 56))(v289 + v291[7], 1, 1, v400);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v404 + 32))(v289, v283, v412);
    *(_QWORD *)(v289 + v291[5]) = v290;
    *(_BYTE *)(v289 + v291[6]) = 0;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v323 = (uint64_t (*)(void))v284[1];
    return v323();
  }
  (*(void (**)(_QWORD, _QWORD, _QWORD))(v89[51] + 32))(v89[53], v89[48], v89[50]);
  v292 = *(_QWORD *)(v252 + 16);
  if (v292)
  {
    v293 = v89[88];
    v294 = v89[42];
    v416 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1DC2AD7F8(0, v292, 0);
    v295 = v252 + ((*(unsigned __int8 *)(v293 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v293 + 80));
    v405 = *(_QWORD *)(v293 + 72);
    v413 = v293;
    v401 = *(void (**)(uint64_t, unint64_t, uint64_t))(v293 + 16);
    v296 = *MEMORY[0x1E0D5F7C8];
    v297 = v416;
    do
    {
      v298 = v89[91];
      v299 = v89[87];
      v300 = (uint64_t *)v89[43];
      v301 = v89[41];
      v401(v298, v295, v299);
      *v300 = sub_1DC401144();
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(v294 + 104))(v300, v296, v301);
      (*(void (**)(uint64_t, uint64_t))(v413 + 8))(v298, v299);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1DC2AD7F8(0, *(_QWORD *)(v297 + 16) + 1, 1);
        v297 = v416;
      }
      v303 = *(_QWORD *)(v297 + 16);
      v302 = *(_QWORD *)(v297 + 24);
      v89 = (_QWORD *)v415;
      if (v303 >= v302 >> 1)
      {
        sub_1DC2AD7F8(v302 > 1, v303 + 1, 1);
        v297 = v416;
      }
      v304 = *(_QWORD *)(v415 + 344);
      v305 = *(_QWORD *)(v415 + 328);
      *(_QWORD *)(v297 + 16) = v303 + 1;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v294 + 32))(v297+ ((*(unsigned __int8 *)(v294 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v294 + 80))+ *(_QWORD *)(v294 + 72) * v303, v304, v305);
      v416 = v297;
      v295 += v405;
      --v292;
    }
    while (v292);
    swift_bridgeObjectRelease();
    v306 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v306 = MEMORY[0x1E0DEE9D8];
  }
  v307 = v89[70];
  v308 = v89[68];
  v309 = v89[67];
  v310 = v89[65];
  v357 = v89[47];
  v414 = v89[46];
  v359 = v89[45];
  v360 = v89[44];
  v352 = v89[36];
  v354 = v89[35];
  v363 = v89[28];
  v383 = v89[27];
  v406 = v89[26];
  v396 = v89[18];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1DC285D80(v306, sub_1DC28698C);
  sub_1DC285D80(v306, sub_1DC286978);
  sub_1DC285E94(v306);
  sub_1DC4083B0();
  sub_1DC400430();
  sub_1DC400388();
  v385(v307, v308);
  sub_1DC286450(v309);
  v377(v309, v310);
  sub_1DC285D80(v306, sub_1DC28698C);
  sub_1DC285D80(v306, sub_1DC286978);
  sub_1DC285E94(v306);
  sub_1DC4083B0();
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v396 + OBJC_IVAR____TtC8StocksUI27StockForYouFeedGroupEmitter_formatService), *(_QWORD *)(v396 + OBJC_IVAR____TtC8StocksUI27StockForYouFeedGroupEmitter_formatService + 24));
  sub_1DC400430();
  sub_1DC400388();
  v385(v307, v308);
  sub_1DC40103C();
  v377(v309, v310);
  v311 = sub_1DC40709C();
  v312 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v311 - 8) + 56);
  v312(v352, 1, 1, v311);
  sub_1DC08CBF0(0, &qword_1EDB2B138, MEMORY[0x1E0D5D930], sub_1DC2860D0, MEMORY[0x1E0D5FAB8]);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v313 - 8) + 56))(v354, 1, 1, v313);
  sub_1DC407EB8();
  swift_bridgeObjectRelease();
  sub_1DC0926D8(v354, (uint64_t (*)(_QWORD))sub_1DC28605C);
  sub_1DC0926D8(v352, (uint64_t (*)(_QWORD))sub_1DC2860EC);
  sub_1DC089DA4(0, &qword_1EDB3FFB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5F978], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v314 = *(_QWORD *)(v359 + 72);
  v315 = (*(unsigned __int8 *)(v359 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v359 + 80);
  v316 = swift_allocObject();
  *(_OWORD *)(v316 + 16) = xmmword_1DC40C740;
  v317 = v316 + v315;
  v318 = *(void (**)(unint64_t, uint64_t, uint64_t))(v359 + 16);
  v318(v317, v357, v360);
  v318(v317 + v314, v414, v360);
  v312(v352, 1, 1, v311);
  sub_1DC1E8D18(v306);
  sub_1DC1E8D18(v306);
  sub_1DC1E8E3C(v306);
  sub_1DC1E8E48(v306);
  sub_1DC1E8F68(v306);
  sub_1DC1E8F74(v306);
  sub_1DC407FC0();
  sub_1DC08CBF0(0, (unint64_t *)&unk_1EDB2AE80, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedServiceConfig, sub_1DC106C20, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0D5B210]);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v319 - 8) + 56))(v363, 1, 1, v319);
  v320 = sub_1DC408320();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v320 - 8) + 56))(v383, 1, 1, v320);
  *(_BYTE *)(v415 + 904) = 1;
  sub_1DC08CBF0(0, &qword_1EDB2B110, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedServiceConfig, sub_1DC106C20, MEMORY[0x1E0D5F438]);
  swift_allocObject();
  swift_retain();
  sub_1DC408338();
  v321 = sub_1DC40811C();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v321 - 8) + 56))(v406, 1, 1, v321);
  v322 = qword_1EDB2CE08;
  (id)*MEMORY[0x1E0D58690];
  if (v322 != -1)
    swift_once();
  (id)qword_1EDB2CE00;
  sub_1DC408158();
  *(_QWORD *)(v415 + 872) = sub_1DC408014();
  v325 = *(_QWORD *)(v415 + 408);
  v324 = *(_QWORD *)(v415 + 416);
  v326 = *(_QWORD *)(v415 + 400);
  v328 = *(_QWORD *)(v415 + 264);
  v327 = *(_QWORD *)(v415 + 272);
  v329 = *(_QWORD *)(v415 + 256);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v415 + 240) + 8))(*(_QWORD *)(v415 + 248), *(_QWORD *)(v415 + 232));
  (*(void (**)(uint64_t, uint64_t))(v328 + 8))(v327, v329);
  v330 = *(void (**)(uint64_t, uint64_t))(v325 + 8);
  *(_QWORD *)(v415 + 880) = v330;
  v330(v324, v326);
  v331 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v415 + 888) = v331;
  *v331 = v415;
  v331[1] = sub_1DC283EBC;
  return sub_1DC402CC8();
}

uint64_t sub_1DC283EBC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 896) = v0;
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_1DC283F28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  void (*v8)(uint64_t, uint64_t);
  int *v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v26 = *(void (**)(uint64_t, uint64_t))(v0 + 880);
  v20 = *(void (**)(uint64_t, uint64_t))(v0 + 840);
  v39 = *(_QWORD *)(v0 + 688);
  v35 = *(_QWORD *)(v0 + 680);
  v32 = *(void (**)(uint64_t, uint64_t))(v0 + 832);
  v33 = *(_QWORD *)(v0 + 656);
  v37 = *(void (**)(uint64_t, uint64_t))(v0 + 848);
  v38 = *(_QWORD *)(v0 + 648);
  v28 = *(_QWORD *)(v0 + 616);
  v29 = *(_QWORD *)(v0 + 632);
  v36 = *(_QWORD *)(v0 + 608);
  v31 = *(_QWORD *)(v0 + 600);
  v34 = *(_QWORD *)(v0 + 592);
  v1 = *(_QWORD *)(v0 + 560);
  v14 = *(_QWORD *)(v0 + 536);
  v15 = *(_QWORD *)(v0 + 544);
  v40 = *(_QWORD *)(v0 + 528);
  v41 = *(_QWORD *)(v0 + 520);
  v23 = *(_QWORD *)(v0 + 504);
  v24 = *(_QWORD *)(v0 + 512);
  v21 = *(_QWORD *)(v0 + 400);
  v22 = *(_QWORD *)(v0 + 424);
  v18 = *(_QWORD *)(v0 + 368);
  v19 = *(_QWORD *)(v0 + 376);
  v16 = *(_QWORD *)(v0 + 360);
  v17 = *(_QWORD *)(v0 + 352);
  v2 = *(_QWORD *)(v0 + 304);
  v12 = *(_QWORD *)(v0 + 320);
  v13 = *(_QWORD *)(v0 + 296);
  v3 = *(_QWORD *)(v0 + 200);
  v27 = *(_QWORD *)(v0 + 192);
  v30 = *(_QWORD *)(v0 + 184);
  v4 = *(_QWORD *)(v0 + 160);
  v25 = *(_QWORD *)(v0 + 88);
  (*(void (**)(_QWORD))(v2 + 16))(*(_QWORD *)(v0 + 312));
  sub_1DC407438();
  sub_1DC407438();
  v5 = sub_1DC4075C4();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  sub_1DC407390();
  sub_1DC400430();
  sub_1DC400388();
  v20(v1, v15);
  v6 = *(_QWORD *)(v0 + 72);
  v7 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  swift_bridgeObjectRetain();
  v7(v12, v13);
  v8 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
  v8(v18, v17);
  v8(v19, v17);
  v26(v22, v21);
  sub_1DC0926D8(v23, (uint64_t (*)(_QWORD))sub_1DC0B967C);
  sub_1DC0926D8(v24, (uint64_t (*)(_QWORD))sub_1DC0B967C);
  v32(v29, v28);
  v37(v35, v33);
  (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v36, v34);
  v32(v38, v28);
  v37(v39, v33);
  v9 = (int *)type metadata accessor for StockForYouFeedGroup();
  v10 = v25 + v9[7];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 32))(v10, v3, v30);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v27 + 56))(v10, 0, 1, v30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v40 + 32))(v25, v14, v41);
  *(_QWORD *)(v25 + v9[5]) = v6;
  *(_BYTE *)(v25 + v9[6]) = 0;
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DC284540()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;

  v1 = *(void (**)(uint64_t, uint64_t))(v0 + 880);
  v20 = *(_QWORD *)(v0 + 688);
  v13 = *(void (**)(uint64_t, uint64_t))(v0 + 832);
  v14 = *(_QWORD *)(v0 + 656);
  v18 = *(void (**)(uint64_t, uint64_t))(v0 + 848);
  v19 = *(_QWORD *)(v0 + 648);
  v2 = *(_QWORD *)(v0 + 616);
  v16 = *(_QWORD *)(v0 + 680);
  v17 = *(_QWORD *)(v0 + 608);
  v11 = *(_QWORD *)(v0 + 632);
  v12 = *(_QWORD *)(v0 + 600);
  v15 = *(_QWORD *)(v0 + 592);
  v3 = *(_QWORD *)(v0 + 504);
  v4 = *(_QWORD *)(v0 + 512);
  v5 = *(_QWORD *)(v0 + 424);
  v6 = *(_QWORD *)(v0 + 400);
  v7 = *(_QWORD *)(v0 + 376);
  v8 = *(_QWORD *)(v0 + 352);
  v9 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 360) + 8);
  v9(*(_QWORD *)(v0 + 368), v8);
  v9(v7, v8);
  v1(v5, v6);
  sub_1DC0926D8(v3, (uint64_t (*)(_QWORD))sub_1DC0B967C);
  sub_1DC0926D8(v4, (uint64_t (*)(_QWORD))sub_1DC0B967C);
  v13(v11, v2);
  v18(v16, v14);
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v17, v15);
  v13(v19, v2);
  v18(v20, v14);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DC284980@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v34 = a5;
  v35 = a6;
  v31 = a4;
  v29 = a3;
  v8 = sub_1DC400394();
  v32 = *(_QWORD *)(v8 - 8);
  v33 = v8;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1DC3FFFEC();
  v25 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v30 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v26 = (char *)&v24 - v14;
  v15 = sub_1DC40070C();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = a1[1];
  v28 = *a1;
  __swift_project_boxed_opaque_existential_1((_QWORD *)(a2 + 24), *(_QWORD *)(a2 + 48));
  v27 = v19;
  swift_bridgeObjectRetain();
  sub_1DC400DCC();
  v20 = sub_1DC400670();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  if (v20 < 0)
  {
    result = sub_1DC40982C();
    __break(1u);
  }
  else
  {
    v21 = *(void (**)(char *, uint64_t, uint64_t))(v25 + 16);
    v21(v26, v29, v11);
    v21(v30, v31, v11);
    v22 = sub_1DC4010E4();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v10, v34, v22);
    (*(void (**)(char *, _QWORD, uint64_t))(v32 + 104))(v10, *MEMORY[0x1E0DAE2F8], v33);
    return sub_1DC40052C();
  }
  return result;
}

uint64_t sub_1DC284BD4@<X0>(uint64_t a1@<X2>, _QWORD **a2@<X3>, _QWORD **a3@<X4>, _QWORD **a4@<X5>, char *a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  char v31;
  unint64_t v32;
  unint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  char v41;
  unint64_t v42;
  unint64_t v43;
  _QWORD *v44;
  uint64_t v46;
  _QWORD **v47;
  void (*v48)(char *, char *, uint64_t);
  _QWORD **v49;

  v49 = a3;
  sub_1DC0B967C(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1DC4011BC();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((sub_1DC400664() & 1) == 0)
    goto LABEL_4;
  sub_1DC284EE0(a1, (uint64_t)v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_1DC0926D8((uint64_t)v11, (uint64_t (*)(_QWORD))sub_1DC0B967C);
LABEL_4:
    v16 = 1;
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(a5, v16, 1, v12);
  }
  v48 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
  v48(v15, v11, v12);
  v17 = sub_1DC4011A4();
  v19 = v18;
  v20 = *a2;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a2 = v20;
  v47 = a4;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v20 = sub_1DC108BBC(0, v20[2] + 1, 1, v20);
    *a2 = v20;
  }
  v23 = v20[2];
  v22 = v20[3];
  if (v23 >= v22 >> 1)
  {
    v20 = sub_1DC108BBC((_QWORD *)(v22 > 1), v23 + 1, 1, v20);
    *a2 = v20;
  }
  v20[2] = v23 + 1;
  v24 = &v20[2 * v23];
  v24[4] = v17;
  v24[5] = v19;
  v25 = sub_1DC4011B0();
  if (v26)
  {
    v27 = v25;
    v28 = v26;
    v29 = v49;
    v30 = *v49;
    v31 = swift_isUniquelyReferenced_nonNull_native();
    *v29 = v30;
    if ((v31 & 1) == 0)
    {
      v30 = sub_1DC108BBC(0, v30[2] + 1, 1, v30);
      *v29 = v30;
    }
    v33 = v30[2];
    v32 = v30[3];
    if (v33 >= v32 >> 1)
    {
      v30 = sub_1DC108BBC((_QWORD *)(v32 > 1), v33 + 1, 1, v30);
      *v29 = v30;
    }
    v30[2] = v33 + 1;
    v34 = &v30[2 * v33];
    v34[4] = v27;
    v34[5] = v28;
  }
  v35 = sub_1DC401168();
  if (v36)
  {
    v37 = v35;
    v38 = v36;
    v39 = v47;
    v40 = *v47;
    v41 = swift_isUniquelyReferenced_nonNull_native();
    *v39 = v40;
    if ((v41 & 1) == 0)
    {
      v40 = sub_1DC108BBC(0, v40[2] + 1, 1, v40);
      *v47 = v40;
    }
    v43 = v40[2];
    v42 = v40[3];
    if (v43 >= v42 >> 1)
    {
      v40 = sub_1DC108BBC((_QWORD *)(v42 > 1), v43 + 1, 1, v40);
      *v47 = v40;
    }
    v40[2] = v43 + 1;
    v44 = &v40[2 * v43];
    v44[4] = v37;
    v44[5] = v38;
  }
  v48(a5, v15, v12);
  v16 = 0;
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(a5, v16, 1, v12);
}

uint64_t sub_1DC284EE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  v58 = a2;
  v3 = sub_1DC4010E4();
  v53 = *(_QWORD *)(v3 - 8);
  v54 = v3;
  MEMORY[0x1E0C80A78](v3);
  v52 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1DC400394();
  v49 = *(_QWORD *)(v5 - 8);
  v50 = v5;
  MEMORY[0x1E0C80A78](v5);
  v48 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0B967C(0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1DC400B68();
  v56 = *(_QWORD *)(v10 - 8);
  v57 = v10;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1DC4008C8();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1DC40046C();
  v55 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v47 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x1E0C80A78](v20);
  v23 = (char *)&v47 - v22;
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v14 + 104))(v16, *MEMORY[0x1E0DAE858], v13, v21);
  v51 = a1;
  sub_1DC40043C();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  sub_1DC089DA4(0, &qword_1EDB3FE10, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAEB40], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v24 = sub_1DC400B5C();
  v25 = *(_QWORD *)(v24 - 8);
  v26 = (*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
  v27 = swift_allocObject();
  v47 = xmmword_1DC40DC10;
  *(_OWORD *)(v27 + 16) = xmmword_1DC40DC10;
  v28 = v27 + v26;
  v29 = *MEMORY[0x1E0DAE728];
  v30 = sub_1DC400790();
  v31 = v29;
  v32 = v17;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 104))(v28, v31, v30);
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v25 + 104))(v28, *MEMORY[0x1E0DAEB38], v24);
  sub_1DC400B50();
  sub_1DC400454();
  (*(void (**)(char *, uint64_t))(v56 + 8))(v12, v57);
  v33 = *(void (**)(char *, uint64_t))(v55 + 8);
  v33(v19, v17);
  sub_1DC2A848C((uint64_t)v9);
  v34 = sub_1DC4011BC();
  v35 = *(_QWORD *)(v34 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v9, 1, v34) == 1)
  {
    sub_1DC0926D8((uint64_t)v9, (uint64_t (*)(_QWORD))sub_1DC0B967C);
    sub_1DC0FDC18(0, (unint64_t *)&qword_1EDB400C0, (unint64_t *)&qword_1EDB400F0, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v36 = swift_allocObject();
    *(_OWORD *)(v36 + 16) = v47;
    v37 = v48;
    sub_1DC400430();
    v38 = v52;
    sub_1DC400388();
    (*(void (**)(char *, uint64_t))(v49 + 8))(v37, v50);
    v39 = sub_1DC4010B4();
    v41 = v40;
    (*(void (**)(char *, uint64_t))(v53 + 8))(v38, v54);
    *(_QWORD *)(v36 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v36 + 64) = sub_1DC0E7FAC();
    *(_QWORD *)(v36 + 32) = v39;
    *(_QWORD *)(v36 + 40) = v41;
    sub_1DC09BDF8();
    v42 = (void *)sub_1DC409580();
    sub_1DC408FE0();
    sub_1DC403F28();
    swift_bridgeObjectRelease();

    v33(v23, v32);
    v43 = 1;
    v44 = v58;
  }
  else
  {
    v33(v23, v32);
    v45 = v58;
    (*(void (**)(uint64_t, char *, uint64_t))(v35 + 32))(v58, v9, v34);
    v43 = 0;
    v44 = v45;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v35 + 56))(v44, v43, 1, v34);
}

uint64_t sub_1DC285360@<X0>(uint64_t a1@<X2>, uint64_t *a2@<X3>, uint64_t *a3@<X4>, uint64_t *a4@<X5>, char *a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v27;
  unint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  _QWORD *v35;
  char v36;
  unint64_t v37;
  unint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  _QWORD *v45;
  char v46;
  unint64_t v47;
  unint64_t v48;
  _QWORD *v49;
  uint64_t *v51;
  uint64_t *v52;
  char *v53;
  char *v54;

  sub_1DC0B967C(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1DC4011BC();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v54 = (char *)&v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((sub_1DC4006B8() & 1) != 0)
  {
    v52 = a4;
    v53 = a5;
    v16 = *a2;
    v51 = a3;
    v17 = *a3;
    v18 = *a4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1DC4006E8();
    sub_1DC2856C4(a1, v16, v17, v18, (uint64_t)v12, v19);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
    {
      sub_1DC0926D8((uint64_t)v12, (uint64_t (*)(_QWORD))sub_1DC0B967C);
      v20 = 1;
      a5 = v53;
    }
    else
    {
      v21 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
      v21(v54, v12, v13);
      v22 = sub_1DC4011A4();
      v24 = v23;
      v25 = (_QWORD *)*a2;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *a2 = (uint64_t)v25;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v25 = sub_1DC108BBC(0, v25[2] + 1, 1, v25);
        *a2 = (uint64_t)v25;
      }
      v28 = v25[2];
      v27 = v25[3];
      if (v28 >= v27 >> 1)
      {
        v25 = sub_1DC108BBC((_QWORD *)(v27 > 1), v28 + 1, 1, v25);
        *a2 = (uint64_t)v25;
      }
      v25[2] = v28 + 1;
      v29 = &v25[2 * v28];
      v29[4] = v22;
      v29[5] = v24;
      v30 = sub_1DC4011B0();
      if (v31)
      {
        v32 = v30;
        v33 = v31;
        v34 = v51;
        v35 = (_QWORD *)*v51;
        v36 = swift_isUniquelyReferenced_nonNull_native();
        *v34 = (uint64_t)v35;
        if ((v36 & 1) == 0)
        {
          v35 = sub_1DC108BBC(0, v35[2] + 1, 1, v35);
          *v51 = (uint64_t)v35;
        }
        v38 = v35[2];
        v37 = v35[3];
        if (v38 >= v37 >> 1)
        {
          v35 = sub_1DC108BBC((_QWORD *)(v37 > 1), v38 + 1, 1, v35);
          *v51 = (uint64_t)v35;
        }
        v35[2] = v38 + 1;
        v39 = &v35[2 * v38];
        v39[4] = v32;
        v39[5] = v33;
      }
      v40 = sub_1DC401168();
      if (v41)
      {
        v42 = v40;
        v43 = v41;
        v44 = v52;
        v45 = (_QWORD *)*v52;
        v46 = swift_isUniquelyReferenced_nonNull_native();
        *v44 = (uint64_t)v45;
        if ((v46 & 1) == 0)
        {
          v45 = sub_1DC108BBC(0, v45[2] + 1, 1, v45);
          *v52 = (uint64_t)v45;
        }
        v48 = v45[2];
        v47 = v45[3];
        if (v48 >= v47 >> 1)
        {
          v45 = sub_1DC108BBC((_QWORD *)(v47 > 1), v48 + 1, 1, v45);
          *v52 = (uint64_t)v45;
        }
        v45[2] = v48 + 1;
        v49 = &v45[2 * v48];
        v49[4] = v42;
        v49[5] = v43;
      }
      a5 = v53;
      v21(v53, v54, v13);
      v20 = 0;
    }
  }
  else
  {
    v20 = 1;
  }
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(a5, v20, 1, v13);
}

uint64_t sub_1DC2856C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>, double a6@<D0>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  char *v31;
  void (*v32)(char *, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  char *v42;
  void (*v43)(char *, uint64_t);
  char *v44;
  void (*v45)(char *, uint64_t);
  uint64_t v46;
  char *v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD v56[2];
  uint64_t v57;
  void (*v58)(__n128);
  char *v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  char *v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;

  v56[0] = a4;
  v66 = a3;
  v56[1] = a2;
  v74 = a1;
  v75 = a5;
  sub_1DC0B967C(0);
  MEMORY[0x1E0C80A78](v9);
  v64 = (char *)v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = sub_1DC40046C();
  v70 = *(_QWORD *)(v72 - 8);
  MEMORY[0x1E0C80A78](v72);
  v65 = (char *)v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v67 = (char *)v56 - v13;
  MEMORY[0x1E0C80A78](v14);
  v68 = (char *)v56 - v15;
  MEMORY[0x1E0C80A78](v16);
  v69 = (char *)v56 - v17;
  v73 = sub_1DC400B68();
  v71 = *(_QWORD *)(v73 - 8);
  MEMORY[0x1E0C80A78](v73);
  v61 = (char *)v56 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_1DC4008C8();
  v20 = *(_QWORD *)(v19 - 8);
  v57 = v19;
  v60 = v20;
  MEMORY[0x1E0C80A78](v19);
  v59 = (char *)v56 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = MEMORY[0x1E0C80A78](v22);
  v62 = (char *)v56 - v24;
  v58 = *(void (**)(__n128))(v25 + 104);
  v58(v23);
  sub_1DC089DA4(0, &qword_1EDB3FE10, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAEB40], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v26 = sub_1DC400B5C();
  v27 = *(_QWORD *)(v26 - 8);
  v28 = *(_QWORD *)(v27 + 72);
  v29 = (*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
  v30 = swift_allocObject();
  *(_OWORD *)(v30 + 16) = xmmword_1DC41F630;
  v31 = (char *)(v30 + v29);
  *(_QWORD *)v31 = a2;
  v32 = *(void (**)(char *, uint64_t, uint64_t))(v27 + 104);
  v32(v31, *MEMORY[0x1E0DAEB18], v26);
  *(_QWORD *)&v31[v28] = a4;
  v33 = *MEMORY[0x1E0DAE708];
  v34 = sub_1DC400790();
  v35 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 104);
  v35(&v31[v28], v33, v34);
  v36 = *MEMORY[0x1E0DAEB38];
  v32(&v31[v28], v36, v26);
  *(double *)&v31[2 * v28] = a6;
  v35(&v31[2 * v28], *MEMORY[0x1E0DAE748], v34);
  v32(&v31[2 * v28], v36, v26);
  sub_1DC0824D4(v63 + OBJC_IVAR____TtC8StocksUI27StockForYouFeedGroupEmitter_headlineViewingHistory, (uint64_t)&v31[3 * v28]);
  v35(&v31[3 * v28], *MEMORY[0x1E0DAE740], v34);
  v32(&v31[3 * v28], v36, v26);
  v35(&v31[4 * v28], *MEMORY[0x1E0DAE728], v34);
  v32(&v31[4 * v28], v36, v26);
  v37 = 5 * v28;
  v38 = (uint64_t)v64;
  *(_QWORD *)&v31[v37] = v66;
  ((void (*)(char *, _QWORD))v32)(&v31[v37], *MEMORY[0x1E0DAEB20]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v39 = v61;
  sub_1DC400B50();
  v40 = v59;
  v41 = v57;
  ((void (*)(char *, _QWORD, uint64_t))v58)(v59, *MEMORY[0x1E0DAE858], v57);
  v42 = v65;
  sub_1DC40043C();
  v43 = *(void (**)(char *, uint64_t))(v60 + 8);
  v43(v40, v41);
  v44 = v67;
  sub_1DC400454();
  v45 = *(void (**)(char *, uint64_t))(v70 + 8);
  v46 = v72;
  v45(v42, v72);
  v47 = v68;
  v48 = v62;
  sub_1DC40043C();
  v45(v44, v46);
  v49 = v69;
  sub_1DC400448();
  v45(v47, v46);
  sub_1DC2A848C(v38);
  v45(v49, v46);
  (*(void (**)(char *, uint64_t))(v71 + 8))(v39, v73);
  v43(v48, v41);
  v50 = sub_1DC4011BC();
  v51 = *(_QWORD *)(v50 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v51 + 48))(v38, 1, v50) == 1)
  {
    sub_1DC0926D8(v38, (uint64_t (*)(_QWORD))sub_1DC0B967C);
    v52 = 1;
    v53 = v75;
  }
  else
  {
    v54 = v75;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v51 + 32))(v75, v38, v50);
    v52 = 0;
    v53 = v54;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v51 + 56))(v53, v52, 1, v50);
}

BOOL sub_1DC285C18()
{
  sub_1DC4011BC();
  sub_1DC080808((unint64_t *)&unk_1EDB28E10, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF1A0], MEMORY[0x1E0DAF1B0]);
  return (sub_1DC4089F8() & 1) == 0;
}

uint64_t sub_1DC285C90(uint64_t a1)
{
  uint64_t v2;

  sub_1DC0FDC18(0, (unint64_t *)&qword_1EDB28C80, (unint64_t *)&qword_1EDB28C78, MEMORY[0x1E0DAEB88], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1DC285CEC()
{
  unint64_t result;

  result = qword_1EDB37C58;
  if (!qword_1EDB37C58)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC41F890, &type metadata for StockForYouFeedGroupEmitter.Errors);
    atomic_store(result, (unint64_t *)&qword_1EDB37C58);
  }
  return result;
}

uint64_t sub_1DC285D30(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

unint64_t sub_1DC285D68(uint64_t a1)
{
  return sub_1DC285D80(a1, sub_1DC28698C);
}

unint64_t sub_1DC285D74(uint64_t a1)
{
  return sub_1DC285D80(a1, sub_1DC286978);
}

unint64_t sub_1DC285D80(uint64_t a1, void (*a2)(_QWORD))
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  a2(0);
  v3 = (_QWORD *)sub_1DC409874();
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  swift_retain();
  v5 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v6 = *(v5 - 2);
    v7 = *(v5 - 1);
    v8 = *v5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_1DC2733F4(v6, v7);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v6;
    v11[1] = v7;
    *(_QWORD *)(v3[7] + 8 * result) = v8;
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v5 += 3;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1DC285E94(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t result;
  char v18;
  unint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  _QWORD v26[2];

  sub_1DC286914();
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (_QWORD *)((char *)v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!*(_QWORD *)(a1 + 16))
  {
    v8 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  sub_1DC0E93B8(0, &qword_1F03504C0, (void (*)(uint64_t))MEMORY[0x1E0D5FCF0]);
  v7 = sub_1DC409874();
  v8 = (_QWORD *)v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  v10 = (char *)v6 + *(int *)(v3 + 48);
  v11 = v7 + 64;
  v12 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v26[1] = a1;
  v13 = a1 + v12;
  v14 = *(_QWORD *)(v4 + 72);
  swift_retain();
  while (1)
  {
    sub_1DC0990BC(v13, (uint64_t)v6, (uint64_t (*)(_QWORD))sub_1DC286914);
    v15 = *v6;
    v16 = v6[1];
    result = sub_1DC2733F4(*v6, v16);
    if ((v18 & 1) != 0)
      break;
    v19 = result;
    *(_QWORD *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v20 = (uint64_t *)(v8[6] + 16 * result);
    *v20 = v15;
    v20[1] = v16;
    v21 = v8[7];
    v22 = sub_1DC4083F8();
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v21 + *(_QWORD *)(*(_QWORD *)(v22 - 8) + 72) * v19, v10, v22);
    v23 = v8[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (v24)
      goto LABEL_11;
    v8[2] = v25;
    v13 += v14;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1DC28603C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  return sub_1DC284980(a1, v2[2], v2[3], v2[4], v2[5], a2);
}

void sub_1DC28605C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB2B140)
  {
    sub_1DC08CBF0(255, &qword_1EDB2B138, MEMORY[0x1E0D5D930], sub_1DC2860D0, MEMORY[0x1E0D5FAB8]);
    v0 = sub_1DC4095A4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB2B140);
  }
}

uint64_t sub_1DC2860D0()
{
  return sub_1DC080808((unint64_t *)&unk_1EDB42210, MEMORY[0x1E0D5D930], MEMORY[0x1E0D5D928]);
}

void sub_1DC2860EC(uint64_t a1)
{
  sub_1DC089DA4(a1, &qword_1EDB273E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52E40], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

void sub_1DC286108(uint64_t a1)
{
  sub_1DC089DA4(a1, &qword_1EDB2AFF8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5D908], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

void sub_1DC286124()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EDB28E28)
  {
    sub_1DC0B967C(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EDB28E28);
  }
}

void sub_1DC286184()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EDB3F7F8)
  {
    sub_1DC400790();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EDB3F7F8);
  }
}

uint64_t sub_1DC2861EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  void (*v25)(void);
  uint64_t v26;
  void (*v27)(char *, uint64_t);
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v32 = a3;
  v35 = a1;
  v4 = sub_1DC40046C();
  v36 = *(_QWORD *)(v4 - 8);
  v37 = v4;
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v30 - v8;
  v10 = sub_1DC400B68();
  v33 = *(_QWORD *)(v10 - 8);
  v34 = v10;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1DC4008C8();
  v14 = *(_QWORD *)(v13 - 8);
  v30 = v13;
  v31 = v14;
  v15 = MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, __n128))(v18 + 104))(v17, *MEMORY[0x1E0DAE850], v15);
  sub_1DC089DA4(0, &qword_1EDB3FE10, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAEB40], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v19 = sub_1DC400B5C();
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(_QWORD *)(v20 + 72);
  v22 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_1DC40C740;
  v24 = (_QWORD *)(v23 + v22);
  *v24 = a2;
  v25 = *(void (**)(void))(v20 + 104);
  ((void (*)(_QWORD *, _QWORD, uint64_t))v25)(v24, *MEMORY[0x1E0DAEB18], v19);
  *(_QWORD *)((char *)v24 + v21) = v32;
  v25();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1DC400B50();
  sub_1DC40043C();
  sub_1DC400454();
  v26 = v37;
  v27 = *(void (**)(char *, uint64_t))(v36 + 8);
  v27(v6, v37);
  v28 = sub_1DC400460();
  v27(v9, v26);
  (*(void (**)(char *, uint64_t))(v33 + 8))(v12, v34);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v17, v30);
  return v28;
}

unint64_t sub_1DC286450(uint64_t a1)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  char *v29;
  uint64_t v30;
  char *v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;

  v2 = sub_1DC407E34();
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D5D670];
  v40 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v39 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v38 = (char *)&v35 - v7;
  sub_1DC133BB0(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = sub_1DC3FFDD0();
  v45 = *(_QWORD *)(v41 - 8);
  MEMORY[0x1E0C80A78](v41);
  v42 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1DC3FFAC4();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1DC407FFC();
  MEMORY[0x1E0C80A78](v16);
  sub_1DC089DA4(0, &qword_1EDB3FFA0, v3, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v17 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v37 = *(_QWORD *)(v4 + 72);
  v18 = swift_allocObject();
  v43 = xmmword_1DC40DC10;
  *(_OWORD *)(v18 + 16) = xmmword_1DC40DC10;
  v36 = v17;
  sub_1DC4010D8();
  sub_1DC407FF0();
  swift_bridgeObjectRelease();
  sub_1DC407E28();
  v44 = a1;
  v46 = sub_1DC4010B4();
  v47 = v19;
  sub_1DC3FFA94();
  sub_1DC1790B0();
  sub_1DC409604();
  v21 = v20;
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  swift_bridgeObjectRelease();
  if (!v21)
    goto LABEL_4;
  v46 = 0;
  v47 = 0xE000000000000000;
  sub_1DC409730();
  swift_bridgeObjectRelease();
  v46 = 0x3F3A736B636F7473;
  v47 = 0xEF3D6C6F626D7973;
  sub_1DC408B48();
  swift_bridgeObjectRelease();
  sub_1DC3FFDC4();
  swift_bridgeObjectRelease();
  v22 = v45;
  v23 = v41;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v10, 1, v41) == 1)
  {
    sub_1DC0926D8((uint64_t)v10, (uint64_t (*)(_QWORD))sub_1DC133BB0);
LABEL_4:
    sub_1DC0FDC18(0, (unint64_t *)&qword_1EDB400C0, (unint64_t *)&qword_1EDB400F0, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v24 = swift_allocObject();
    *(_OWORD *)(v24 + 16) = v43;
    v25 = sub_1DC4010B4();
    v27 = v26;
    *(_QWORD *)(v24 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v24 + 64) = sub_1DC0E7FAC();
    *(_QWORD *)(v24 + 32) = v25;
    *(_QWORD *)(v24 + 40) = v27;
    sub_1DC09BDF8();
    v28 = (void *)sub_1DC409580();
    sub_1DC408FE0();
    sub_1DC403F28();
    swift_bridgeObjectRelease();

    return v18;
  }
  (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v42, v10, v23);
  sub_1DC407FD8();
  v29 = v38;
  sub_1DC407E28();
  v31 = v39;
  v30 = v40;
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v39, v29, v40);
  v33 = *(_QWORD *)(v18 + 16);
  v32 = *(_QWORD *)(v18 + 24);
  if (v33 >= v32 >> 1)
    v18 = sub_1DC166E18(v32 > 1, v33 + 1, 1, v18);
  *(_QWORD *)(v18 + 16) = v33 + 1;
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v18 + v36 + v33 * v37, v31, v30);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v29, v30);
  (*(void (**)(char *, uint64_t))(v45 + 8))(v42, v23);
  return v18;
}

BOOL sub_1DC2868F8()
{
  return sub_1DC285C18();
}

void sub_1DC286914()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EDB3F600)
  {
    sub_1DC4083F8();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EDB3F600);
  }
}

void sub_1DC286978(uint64_t a1)
{
  sub_1DC0E93B8(a1, &qword_1F03504C8, (void (*)(uint64_t))sub_1DC23B770);
}

void sub_1DC28698C(uint64_t a1)
{
  sub_1DC0E93B8(a1, &qword_1F03504D0, sub_1DC2869A0);
}

void sub_1DC2869A0(uint64_t a1)
{
  sub_1DC089DA4(a1, &qword_1F03504D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5D670], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
}

uint64_t sub_1DC2869BC()
{
  uint64_t v0;
  uint64_t v1;

  sub_1DC08CBF0(0, &qword_1EDB2AF80, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedServiceConfig, sub_1DC106C20, MEMORY[0x1E0D5C7A0]);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_1DC286A3C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  sub_1DC08CBF0(0, &qword_1EDB2AF80, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedServiceConfig, sub_1DC106C20, MEMORY[0x1E0D5C7A0]);
  v5 = *(unsigned __int8 *)(*(_QWORD *)(v4 - 8) + 80);
  v6 = v1 + ((v5 + 16) & ~v5);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1DC277A70;
  return sub_1DC27C81C(a1, v6);
}

void sub_1DC286ACC(uint64_t a1)
{
  sub_1DC089DA4(a1, &qword_1EDB294B0, (uint64_t (*)(uint64_t))type metadata accessor for StockForYouFeedGroupEmitter, MEMORY[0x1E0DB3C70]);
}

uint64_t storeEnumTagSinglePayload for StockForYouFeedGroupEmitter.Errors(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1DC286B34 + 4 * byte_1DC41F645[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1DC286B68 + 4 * byte_1DC41F640[v4]))();
}

uint64_t sub_1DC286B68(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC286B70(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC286B78);
  return result;
}

uint64_t sub_1DC286B84(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC286B8CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1DC286B90(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC286B98(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StockForYouFeedGroupEmitter.Errors()
{
  return &type metadata for StockForYouFeedGroupEmitter.Errors;
}

unint64_t sub_1DC286BB8()
{
  unint64_t result;

  result = qword_1F03504F8;
  if (!qword_1F03504F8)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC41F868, &type metadata for StockForYouFeedGroupEmitter.Errors);
    atomic_store(result, (unint64_t *)&qword_1F03504F8);
  }
  return result;
}

BOOL sub_1DC286BFC()
{
  return sub_1DC2868F8();
}

uint64_t *sub_1DC286C14(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v21 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1DC4004C0();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v13 = a3[6];
    v14 = *(_OWORD *)((char *)a2 + v13 + 24);
    *(_OWORD *)((char *)v4 + v13 + 24) = v14;
    (**(void (***)(void))(v14 - 8))();
    v15 = a3[7];
    v16 = *(_OWORD *)((char *)a2 + v15 + 24);
    *(_OWORD *)((char *)v4 + v15 + 24) = v16;
    (**(void (***)(void))(v16 - 8))();
    v17 = a3[8];
    v18 = *(_OWORD *)((char *)a2 + v17 + 24);
    *(_OWORD *)((char *)v4 + v17 + 24) = v18;
    (**(void (***)(void))(v18 - 8))();
    v19 = a3[9];
    v20 = *(_OWORD *)((char *)a2 + v19 + 24);
    *(_OWORD *)((char *)v4 + v19 + 24) = v20;
    (**(void (***)(void))(v20 - 8))();
  }
  return v4;
}

uint64_t sub_1DC286D50(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + a2[5];
  v5 = sub_1DC4004C0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  __swift_destroy_boxed_opaque_existential_1(a1 + a2[6]);
  __swift_destroy_boxed_opaque_existential_1(a1 + a2[7]);
  __swift_destroy_boxed_opaque_existential_1(a1 + a2[8]);
  return __swift_destroy_boxed_opaque_existential_1(a1 + a2[9]);
}

_QWORD *sub_1DC286DD0(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  __int128 v19;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1DC4004C0();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  v12 = a3[6];
  v13 = *(_OWORD *)((char *)a2 + v12 + 24);
  *(_OWORD *)((char *)a1 + v12 + 24) = v13;
  (**(void (***)(void))(v13 - 8))();
  v14 = a3[7];
  v15 = *(_OWORD *)((char *)a2 + v14 + 24);
  *(_OWORD *)((char *)a1 + v14 + 24) = v15;
  (**(void (***)(void))(v15 - 8))();
  v16 = a3[8];
  v17 = *(_OWORD *)((char *)a2 + v16 + 24);
  *(_OWORD *)((char *)a1 + v16 + 24) = v17;
  (**(void (***)(void))(v17 - 8))();
  v18 = a3[9];
  v19 = *(_OWORD *)((char *)a2 + v18 + 24);
  *(_OWORD *)((char *)a1 + v18 + 24) = v19;
  (**(void (***)(void))(v19 - 8))();
  return a1;
}

_QWORD *sub_1DC286EE0(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1DC4004C0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  __swift_assign_boxed_opaque_existential_1((_QWORD *)((char *)a1 + a3[6]), (_QWORD *)((char *)a2 + a3[6]));
  __swift_assign_boxed_opaque_existential_1((_QWORD *)((char *)a1 + a3[7]), (_QWORD *)((char *)a2 + a3[7]));
  __swift_assign_boxed_opaque_existential_1((_QWORD *)((char *)a1 + a3[8]), (_QWORD *)((char *)a2 + a3[8]));
  __swift_assign_boxed_opaque_existential_1((_QWORD *)((char *)a1 + a3[9]), (_QWORD *)((char *)a2 + a3[9]));
  return a1;
}

_OWORD *sub_1DC286FA4(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  __int128 v14;
  char *v15;
  char *v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  __int128 v22;
  char *v23;
  char *v24;
  __int128 v25;
  __int128 v26;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1DC4004C0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[6];
  v11 = a3[7];
  v12 = (char *)a1 + v10;
  v13 = (char *)a2 + v10;
  *((_QWORD *)v12 + 4) = *((_QWORD *)v13 + 4);
  v14 = *((_OWORD *)v13 + 1);
  *(_OWORD *)v12 = *(_OWORD *)v13;
  *((_OWORD *)v12 + 1) = v14;
  v15 = (char *)a1 + v11;
  v16 = (char *)a2 + v11;
  *((_QWORD *)v15 + 4) = *((_QWORD *)v16 + 4);
  v17 = *((_OWORD *)v16 + 1);
  *(_OWORD *)v15 = *(_OWORD *)v16;
  *((_OWORD *)v15 + 1) = v17;
  v18 = a3[8];
  v19 = a3[9];
  v20 = (char *)a1 + v18;
  v21 = (char *)a2 + v18;
  v22 = *((_OWORD *)v21 + 1);
  *(_OWORD *)v20 = *(_OWORD *)v21;
  *((_OWORD *)v20 + 1) = v22;
  *((_QWORD *)v20 + 4) = *((_QWORD *)v21 + 4);
  v23 = (char *)a1 + v19;
  v24 = (char *)a2 + v19;
  v25 = *(_OWORD *)v24;
  v26 = *((_OWORD *)v24 + 1);
  *((_QWORD *)v23 + 4) = *((_QWORD *)v24 + 4);
  *(_OWORD *)v23 = v25;
  *((_OWORD *)v23 + 1) = v26;
  return a1;
}

_QWORD *sub_1DC287078(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  __int128 v14;
  uint64_t v15;
  char *v16;
  char *v17;
  __int128 v18;
  uint64_t v19;
  char *v20;
  char *v21;
  __int128 v22;
  uint64_t v23;
  char *v24;
  char *v25;
  __int128 v26;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1DC4004C0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1 + v11);
  v14 = *((_OWORD *)v13 + 1);
  *(_OWORD *)v12 = *(_OWORD *)v13;
  *((_OWORD *)v12 + 1) = v14;
  *((_QWORD *)v12 + 4) = *((_QWORD *)v13 + 4);
  v15 = a3[7];
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1 + v15);
  v18 = *((_OWORD *)v17 + 1);
  *(_OWORD *)v16 = *(_OWORD *)v17;
  *((_OWORD *)v16 + 1) = v18;
  *((_QWORD *)v16 + 4) = *((_QWORD *)v17 + 4);
  v19 = a3[8];
  v20 = (char *)a1 + v19;
  v21 = (char *)a2 + v19;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1 + v19);
  v22 = *((_OWORD *)v21 + 1);
  *(_OWORD *)v20 = *(_OWORD *)v21;
  *((_OWORD *)v20 + 1) = v22;
  *((_QWORD *)v20 + 4) = *((_QWORD *)v21 + 4);
  v23 = a3[9];
  v24 = (char *)a1 + v23;
  v25 = (char *)a2 + v23;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1 + v23);
  v26 = *((_OWORD *)v25 + 1);
  *(_OWORD *)v24 = *(_OWORD *)v25;
  *((_OWORD *)v24 + 1) = v26;
  *((_QWORD *)v24 + 4) = *((_QWORD *)v25 + 4);
  return a1;
}

uint64_t sub_1DC28717C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC287188(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1DC4004C0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t sub_1DC287204()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC287210(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_1DC4004C0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for StockListWatchlistChangeBlueprintModifier()
{
  uint64_t result;

  result = qword_1EDB411F8;
  if (!qword_1EDB411F8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1DC2872C0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1DC4004C0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_1DC287344(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v4 = v3;
  v25 = a1;
  v26 = a2;
  sub_1DC0CC0A4(0, (unint64_t *)&qword_1EDB2AB40, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790]);
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x1E0C80A78](v6);
  v11 = (char *)&v25 - v10;
  v12 = type metadata accessor for StockListWatchlistChangeBlueprintModifier();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = v4;
  sub_1DC400514();
  sub_1DC402E0C();
  sub_1DC0990BC(v4, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for StockListWatchlistChangeBlueprintModifier);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v11, v25, v7);
  v16 = (*(unsigned __int8 *)(v13 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v17 = (v14 + v16 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v18 = (v9 + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
  v19 = swift_allocObject();
  sub_1DC092ED0((uint64_t)v15, v19 + v16, (uint64_t (*)(_QWORD))type metadata accessor for StockListWatchlistChangeBlueprintModifier);
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v19 + v17, v11, v7);
  v20 = (_QWORD *)(v19 + v18);
  v21 = v26;
  *v20 = v26;
  v20[1] = a3;
  swift_retain();
  v22 = (void *)sub_1DC402C80();
  sub_1DC402D04();
  swift_release();
  swift_release();

  v23 = swift_allocObject();
  *(_QWORD *)(v23 + 16) = v21;
  *(_QWORD *)(v23 + 24) = a3;
  swift_retain();
  v24 = (void *)sub_1DC402C80();
  sub_1DC402D34();
  swift_release();
  swift_release();
  swift_release();

}

uint64_t sub_1DC28756C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = type metadata accessor for StockListWatchlistChangeBlueprintModifier();
  __swift_project_boxed_opaque_existential_1((_QWORD *)(a1 + *(int *)(v2 + 28)), *(_QWORD *)(a1 + *(int *)(v2 + 28) + 24));
  sub_1DC400478();
  v3 = sub_1DC400D24();
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_1DC2875F4(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(char *), uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(char *, uint64_t);
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  unsigned int *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void (*v73)(char *, uint64_t);
  uint64_t v74;
  char *v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  void (*v98)(char *);
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  _QWORD v107[3];
  uint64_t v108;
  uint64_t v109;
  char v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;

  v97 = a5;
  v98 = a4;
  v106 = a3;
  v87 = a1;
  sub_1DC0CC0A4(0, &qword_1EDB2A280, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB9A28]);
  v96 = v6;
  v95 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v76 - v7;
  v100 = type metadata accessor for StockListModel(0);
  MEMORY[0x1E0C80A78](v100);
  v78 = (char *)&v76 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0F8190();
  v90 = v10;
  v79 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v77 = (char *)&v76 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0CC0A4(0, (unint64_t *)&qword_1EDB2AB40, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790]);
  v93 = v12;
  v103 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v92 = (char *)&v76 - v13;
  sub_1DC132790();
  MEMORY[0x1E0C80A78](v14);
  v76 = (char *)&v76 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0DA430();
  MEMORY[0x1E0C80A78](v16);
  v89 = (char *)&v76 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v88 = (char *)&v76 - v19;
  sub_1DC0CC0A4(0, (unint64_t *)&qword_1EDB29D98, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60]);
  v102 = v20;
  v105 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  v91 = (char *)&v76 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v22);
  v104 = (char *)&v76 - v23;
  v85 = sub_1DC40124C();
  v84 = *(_QWORD *)(v85 - 8);
  MEMORY[0x1E0C80A78](v85);
  v86 = (char *)&v76 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v25);
  v27 = (char *)&v76 - v26;
  v28 = type metadata accessor for StockListWatchlistChangeBlueprintModifier();
  MEMORY[0x1E0C80A78](v28);
  v30 = (char *)&v76 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC1339B0(0);
  MEMORY[0x1E0C80A78](v31);
  v33 = (char *)&v76 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = sub_1DC400970();
  v35 = *(_QWORD *)(v34 - 8);
  MEMORY[0x1E0C80A78](v34);
  v37 = (char *)&v76 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0824D4(a2 + *(int *)(v28 + 32), (uint64_t)&v111);
  v82 = v113;
  v83 = v112;
  v81 = __swift_project_boxed_opaque_existential_1(&v111, v112);
  v99 = v28;
  v80 = sub_1DC400478();
  sub_1DC40049C();
  v101 = (char *)a2;
  sub_1DC0990BC(a2, (uint64_t)v30, (uint64_t (*)(_QWORD))type metadata accessor for StockListWatchlistChangeBlueprintModifier);
  v38 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34);
  v94 = v8;
  if (v38 == 1)
  {
    __swift_project_boxed_opaque_existential_1(&v30[*(int *)(v99 + 24)], *(_QWORD *)&v30[*(int *)(v99 + 24) + 24]);
    sub_1DC400A60();
    sub_1DC401240();
    v39 = v84;
    v40 = v85;
    (*(void (**)(char *, uint64_t))(v84 + 8))(v27, v85);
    sub_1DC0926D8((uint64_t)v33, (uint64_t (*)(_QWORD))sub_1DC1339B0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v37, v33, v34);
    v40 = v85;
    v39 = v84;
  }
  sub_1DC0926D8((uint64_t)v30, (uint64_t (*)(_QWORD))type metadata accessor for StockListWatchlistChangeBlueprintModifier);
  v87 = sub_1DC400E08();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v37, v34);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v111);
  v41 = &v101[*(int *)(v99 + 24)];
  __swift_project_boxed_opaque_existential_1(v41, *((_QWORD *)v41 + 3));
  sub_1DC400A60();
  v42 = sub_1DC4011F8();
  v44 = v43;
  v45 = *(void (**)(char *, uint64_t))(v39 + 8);
  v45(v27, v40);
  v46 = v40;
  __swift_project_boxed_opaque_existential_1(v41, *((_QWORD *)v41 + 3));
  v47 = v86;
  sub_1DC400A60();
  v48 = sub_1DC4011E0();
  v50 = v49;
  v45(v47, v46);
  __swift_project_boxed_opaque_existential_1(v41, *((_QWORD *)v41 + 3));
  v51 = sub_1DC400ACC();
  v52 = (uint64_t)v88;
  v53 = v93;
  sub_1DC406D60();
  v54 = v105;
  v55 = v102;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v105 + 48))(v52, 1, v102) == 1)
  {
    v107[0] = v42;
    v107[1] = v44;
    v107[2] = v48;
    v108 = v50;
    v109 = v51;
    v110 = 0;
    v56 = sub_1DC080808(&qword_1EDB29BD8, (uint64_t (*)(uint64_t))sub_1DC0F8190, MEMORY[0x1E0DB6F08]);
    v57 = sub_1DC080808(&qword_1EDB29BD0, (uint64_t (*)(uint64_t))sub_1DC0F8190, MEMORY[0x1E0DB6EF8]);
    MEMORY[0x1DF0C3110](MEMORY[0x1E0DEE9D8], v90, v56, v57);
    sub_1DC0D75BC();
    sub_1DC080808(&qword_1EDB2D860, type metadata accessor for StockListModel, (uint64_t)&unk_1DC41C258);
    sub_1DC4046F0();
    v58 = sub_1DC0926D8(v52, (uint64_t (*)(_QWORD))sub_1DC0DA430);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v58 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v54 + 32))(v104, v52, v55);
  }
  MEMORY[0x1E0C80A78](v58);
  *(&v76 - 2) = v101;
  sub_1DC4010E4();
  sub_1DC080808(&qword_1EDB41DB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF0D0], MEMORY[0x1E0DAF060]);
  v59 = v91;
  sub_1DC404714();
  swift_bridgeObjectRelease();
  v60 = v92;
  v101 = *(char **)(v103 + 16);
  ((void (*)(char *, uint64_t, uint64_t))v101)(v92, v106, v53);
  sub_1DC10BB74();
  sub_1DC408E90();
  sub_1DC408ED8();
  v61 = v94;
  if (v107[0] == v114)
  {
    swift_storeEnumTagMultiPayload();
    sub_1DC080808(&qword_1EDB2D860, type metadata accessor for StockListModel, (uint64_t)&unk_1DC41C258);
    v62 = v77;
    sub_1DC404348();
    sub_1DC404744();
    (*(void (**)(char *, uint64_t))(v79 + 8))(v62, v90);
  }
  else
  {
    sub_1DC406CAC();
  }
  v63 = v105;
  v64 = (uint64_t)v89;
  (*(void (**)(char *, char *, uint64_t))(v105 + 16))(v89, v104, v55);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v63 + 56))(v64, 0, 1, v55);
  sub_1DC406C58();
  sub_1DC0926D8(v64, (uint64_t (*)(_QWORD))sub_1DC0DA430);
  sub_1DC119B9C();
  sub_1DC0D75BC();
  sub_1DC080808(&qword_1EDB2D860, type metadata accessor for StockListModel, (uint64_t)&unk_1DC41C258);
  sub_1DC404F24();
  __swift_project_boxed_opaque_existential_1(v107, v108);
  if ((sub_1DC404990() & 1) != 0)
  {
    v65 = (unsigned int *)MEMORY[0x1E0DB9A20];
  }
  else
  {
    sub_1DC288828();
    v67 = (uint64_t)&v61[*(int *)(v66 + 48)];
    v68 = &v61[*(int *)(v66 + 64)];
    ((void (*)(char *, char *, uint64_t))v101)(v61, v60, v53);
    sub_1DC0824D4((uint64_t)v107, v67);
    v69 = *MEMORY[0x1E0DB7FB8];
    v70 = sub_1DC404984();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v70 - 8) + 104))(v68, v69, v70);
    v65 = (unsigned int *)MEMORY[0x1E0DB9A18];
  }
  v71 = v95;
  v72 = v96;
  (*(void (**)(char *, _QWORD, uint64_t))(v95 + 104))(v61, *v65, v96);
  v98(v61);
  (*(void (**)(char *, uint64_t))(v71 + 8))(v61, v72);
  (*(void (**)(char *, uint64_t))(v103 + 8))(v60, v53);
  v73 = *(void (**)(char *, uint64_t))(v105 + 8);
  v74 = v102;
  v73(v59, v102);
  v73(v104, v74);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v107);
}

uint64_t sub_1DC2880BC@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  char *v28;
  void (*v29)(char *, uint64_t, uint64_t, __n128);
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;

  v62 = a2;
  v67 = a3;
  v4 = sub_1DC4011C8();
  MEMORY[0x1E0C80A78](v4);
  v66 = (char *)&v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for PriceViewModel();
  MEMORY[0x1E0C80A78](v6);
  v65 = (uint64_t)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1DC4008EC();
  v63 = *(_QWORD *)(v8 - 8);
  v64 = v8;
  MEMORY[0x1E0C80A78](v8);
  v70 = (char *)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = sub_1DC40124C();
  v60 = *(_QWORD *)(v71 - 8);
  MEMORY[0x1E0C80A78](v71);
  v11 = (char *)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0FF558(0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = v14;
  sub_1DC0FED34(0);
  MEMORY[0x1E0C80A78](v15);
  v59 = (uint64_t)&v54 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v54 - v18;
  v68 = (uint64_t)&v54 - v18;
  v20 = sub_1DC4010E4();
  v58 = *(_QWORD *)(v20 - 8);
  v21 = v58;
  MEMORY[0x1E0C80A78](v20);
  v23 = (char *)&v54 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = type metadata accessor for StockViewModel();
  MEMORY[0x1E0C80A78](v69);
  v61 = (uint64_t)&v54 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = MEMORY[0x1E0C80A78](v25);
  v28 = (char *)&v54 - v27;
  v29 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v21 + 16);
  v56 = v20;
  v29(v23, a1, v20, v26);
  v30 = sub_1DC401030();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v19, 1, 1, v30);
  v31 = type metadata accessor for StockSparklineViewModel(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v14, 1, 1, v31);
  v32 = &v62[*(int *)(type metadata accessor for StockListWatchlistChangeBlueprintModifier() + 24)];
  __swift_project_boxed_opaque_existential_1(v32, *((_QWORD *)v32 + 3));
  v57 = v11;
  sub_1DC400A60();
  v33 = v70;
  sub_1DC4011EC();
  v62 = *(char **)(v60 + 8);
  ((void (*)(char *, uint64_t))v62)(v11, v71);
  v34 = v23;
  ((void (*)(char *, char *, uint64_t))v29)(v28, v23, v20);
  v36 = v68;
  v35 = v69;
  sub_1DC0990BC(v68, (uint64_t)&v28[*(int *)(v69 + 20)], (uint64_t (*)(_QWORD))sub_1DC0FED34);
  v37 = (uint64_t)v55;
  sub_1DC0990BC((uint64_t)v55, (uint64_t)&v28[*(int *)(v35 + 24)], (uint64_t (*)(_QWORD))sub_1DC0FF558);
  v38 = v35;
  v39 = &v28[*(int *)(v35 + 32)];
  v40 = v63;
  v41 = v64;
  (*(void (**)(char *, char *, uint64_t))(v63 + 16))(v39, v33, v64);
  v28[*(int *)(v38 + 36)] = 0;
  v42 = v59;
  sub_1DC0990BC(v36, v59, (uint64_t (*)(_QWORD))sub_1DC0FED34);
  v43 = v66;
  sub_1DC401078();
  v44 = v65;
  sub_1DC0FE8A4(v42, v43, 9666786, 0xA300000000000000, v65);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v70, v41);
  sub_1DC0926D8(v37, (uint64_t (*)(_QWORD))sub_1DC0FF558);
  sub_1DC0926D8(v68, (uint64_t (*)(_QWORD))sub_1DC0FED34);
  (*(void (**)(char *, uint64_t))(v58 + 8))(v34, v56);
  sub_1DC092ED0(v44, (uint64_t)&v28[*(int *)(v69 + 28)], (uint64_t (*)(_QWORD))type metadata accessor for PriceViewModel);
  v45 = v61;
  sub_1DC0990BC((uint64_t)v28, v61, (uint64_t (*)(_QWORD))type metadata accessor for StockViewModel);
  __swift_project_boxed_opaque_existential_1(v32, *((_QWORD *)v32 + 3));
  LOBYTE(v44) = sub_1DC400B14();
  __swift_project_boxed_opaque_existential_1(v32, *((_QWORD *)v32 + 3));
  v46 = v57;
  sub_1DC400A60();
  v47 = sub_1DC4011E0();
  v49 = v48;
  ((void (*)(char *, uint64_t))v62)(v46, v71);
  sub_1DC0926D8((uint64_t)v28, (uint64_t (*)(_QWORD))type metadata accessor for StockViewModel);
  v50 = v67;
  sub_1DC092ED0(v45, v67, (uint64_t (*)(_QWORD))type metadata accessor for StockViewModel);
  v51 = type metadata accessor for StockListStockModel(0);
  *(_BYTE *)(v50 + *(int *)(v51 + 20)) = v44 & 1;
  v52 = (uint64_t *)(v50 + *(int *)(v51 + 24));
  *v52 = v47;
  v52[1] = v49;
  type metadata accessor for StockListModel(0);
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1DC2885E0()
{
  return sub_1DC080808(&qword_1EDB42138, (uint64_t (*)(uint64_t))type metadata accessor for StockListWatchlistChangeBlueprintModifier, (uint64_t)&unk_1DC41F930);
}

uint64_t sub_1DC28860C()
{
  uint64_t v0;

  return sub_1DC28756C(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1DC288624()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;

  v1 = (int *)type metadata accessor for StockListWatchlistChangeBlueprintModifier();
  v2 = *((_QWORD *)v1 - 1);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = v3 + *(_QWORD *)(v2 + 64);
  sub_1DC0CC0A4(0, (unint64_t *)&qword_1EDB2AB40, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  v8 = (v4 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = v0 + v3;
  swift_bridgeObjectRelease();
  v10 = v0 + v3 + v1[5];
  v11 = sub_1DC4004C0();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  __swift_destroy_boxed_opaque_existential_1(v9 + v1[6]);
  __swift_destroy_boxed_opaque_existential_1(v9 + v1[7]);
  __swift_destroy_boxed_opaque_existential_1(v9 + v1[8]);
  __swift_destroy_boxed_opaque_existential_1(v9 + v1[9]);
  (*(void (**)(unint64_t, uint64_t))(v7 + 8))(v0 + v8, v6);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DC288750(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  v3 = *(_QWORD *)(type metadata accessor for StockListWatchlistChangeBlueprintModifier() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = v4 + *(_QWORD *)(v3 + 64);
  sub_1DC0CC0A4(0, (unint64_t *)&qword_1EDB2AB40, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790]);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = (v5 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = v1 + ((*(_QWORD *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8);
  return sub_1DC2875F4(a1, v1 + v4, v1 + v8, *(void (**)(char *))v9, *(_QWORD *)(v9 + 8));
}

uint64_t sub_1DC2887FC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DC288820@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1DC2880BC(a1, *(char **)(v2 + 16), a2);
}

void sub_1DC288828()
{
  unint64_t TupleTypeMetadata3;
  uint64_t v1;

  if (!qword_1F0350500)
  {
    sub_1DC0CC0A4(255, (unint64_t *)&qword_1EDB2AB40, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790]);
    sub_1DC2888C0();
    sub_1DC404984();
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1)
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_1F0350500);
  }
}

unint64_t sub_1DC2888C0()
{
  unint64_t result;

  result = qword_1EDB29DD8;
  if (!qword_1EDB29DD8)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EDB29DD8);
  }
  return result;
}

unint64_t sub_1DC288948()
{
  unint64_t result;

  result = qword_1EDB3B6D8;
  if (!qword_1EDB3B6D8)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC41FB30, &type metadata for ForYouFeedExpandBlueprintModifier.ModifierError);
    atomic_store(result, (unint64_t *)&qword_1EDB3B6D8);
  }
  return result;
}

uint64_t sub_1DC28898C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v16;

  sub_1DC106380(0, (unint64_t *)&qword_1EDB2AB80, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790]);
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v3 + 64);
  v6 = type metadata accessor for ForYouFeedExpandBlueprintModifier();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = (v4 + v5 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v7 + 64);
  sub_1DC106380(0, (unint64_t *)&qword_1EDB29D00, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60]);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = (v8 + v9 + *(unsigned __int8 *)(v11 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v16 = v10;
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v0 + v4, v2);
  __swift_destroy_boxed_opaque_existential_1(v0 + v8);
  swift_bridgeObjectRelease();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + v8 + 64);
  v13 = v0 + v8 + *(int *)(v6 + 28);
  v14 = sub_1DC4008EC();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  (*(void (**)(unint64_t, uint64_t))(v11 + 8))(v0 + v12, v16);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DC288AFC()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1DC288B20()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB296C8)
  {
    sub_1DC0BA8CC();
    v0 = sub_1DC402DAC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB296C8);
  }
}

uint64_t storeEnumTagSinglePayload for ForYouFeedExpandBlueprintModifier.ModifierError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1DC288BB4 + 4 * byte_1DC41F9CA[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1DC288BD4 + 4 * byte_1DC41F9CF[v4]))();
}

_BYTE *sub_1DC288BB4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1DC288BD4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC288BDC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC288BE4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC288BEC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC288BF4(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ForYouFeedExpandBlueprintModifier.ModifierError()
{
  return &type metadata for ForYouFeedExpandBlueprintModifier.ModifierError;
}

uint64_t sub_1DC288C10(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  int v5;
  __int128 v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *(_QWORD *)v4 = *a2;
    v4 = v16 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v7 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    v8 = a2[6];
    *(_QWORD *)(v4 + 40) = a2[5];
    *(_QWORD *)(v4 + 48) = v8;
    *(_QWORD *)(v4 + 56) = a2[7];
    v9 = *(_OWORD *)(a2 + 11);
    *(_OWORD *)(v4 + 88) = v9;
    v10 = v9;
    v11 = **(void (***)(uint64_t, uint64_t, uint64_t))(v9 - 8);
    swift_bridgeObjectRetain();
    swift_retain();
    v11(v4 + 64, (uint64_t)(a2 + 8), v10);
    v12 = *(int *)(a3 + 28);
    v13 = v4 + v12;
    v14 = (uint64_t)a2 + v12;
    v15 = sub_1DC4008EC();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
  }
  return v4;
}

uint64_t *sub_1DC288D14(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  __swift_assign_boxed_opaque_existential_1(a1, a2);
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  swift_retain();
  swift_release();
  __swift_assign_boxed_opaque_existential_1(a1 + 8, a2 + 8);
  v6 = *(int *)(a3 + 28);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1DC4008EC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t sub_1DC288DC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  v6 = *(int *)(a3 + 28);
  v7 = a2 + v6;
  v8 = a1 + v6;
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  v9 = sub_1DC4008EC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8, v7, v9);
  return a1;
}

uint64_t sub_1DC288E44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  __swift_destroy_boxed_opaque_existential_1(a1);
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a1 + 64);
  v7 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v7;
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  v8 = *(int *)(a3 + 28);
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_1DC4008EC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  return a1;
}

uint64_t sub_1DC288EF0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC288EFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1DC4008EC();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 28), a2, v8);
  }
}

uint64_t sub_1DC288F78()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC288F84(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 24) = (a2 - 1);
  }
  else
  {
    v7 = sub_1DC4008EC();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 28), a2, a2, v7);
  }
  return result;
}

unint64_t sub_1DC288FFC()
{
  unint64_t result;

  result = qword_1F0350508[0];
  if (!qword_1F0350508[0])
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC41FB08, &type metadata for ForYouFeedExpandBlueprintModifier.ModifierError);
    atomic_store(result, qword_1F0350508);
  }
  return result;
}

void sub_1DC289040(void *a1)
{
  _QWORD *v1;
  id v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  uint64_t v9;

  v3 = objc_msgSend((id)objc_opt_self(), sel_clearColor);
  objc_msgSend(a1, sel_setBackgroundColor_, v3);

  v4 = v1 + 2;
  v6 = v1[5];
  v5 = v1[6];
  __swift_project_boxed_opaque_existential_1(v4, v6);
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(_QWORD *)(v5 + 16) + 40))(&v9, v6);
  if ((v9 & 1) == 0)
  {
    v7 = objc_msgSend((id)objc_opt_self(), sel_ts_sideBarEffect);
    v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F58]), sel_initWithEffect_, v7);

    objc_msgSend(a1, sel_setBackgroundView_, v8);
  }
}

uint64_t sub_1DC28914C()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for StockFeedQuoteViewStyler()
{
  return objc_opt_self();
}

uint64_t sub_1DC289198@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t *boxed_opaque_existential_1;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v20[5];

  v7 = *(_QWORD *)(*(_QWORD *)v3 + 48);
  v8 = *(_QWORD *)(*(_QWORD *)v3 + 56);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)v3 + 24), v7);
  v9 = *(_QWORD *)(v8 + 8);
  v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 8);
  v20[3] = v7;
  v20[4] = v8;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v20);
  v12 = v10(a1, v7, v9);
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v20[-1] - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t *, uint64_t, __n128))(v16 + 16))(v15, boxed_opaque_existential_1, v7, v13);
  v17 = sub_1DC28928C((uint64_t)v15, a2, v7, v8);
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  *a3 = v17;
  return result;
}

uint64_t sub_1DC28928C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *boxed_opaque_existential_1;
  uint64_t v7;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;

  v10 = a3;
  v11 = a4;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v9);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 32))(boxed_opaque_existential_1, a1, a3);
  v7 = swift_allocObject();
  sub_1DC0D0F34();
  *(_QWORD *)(v7 + 16) = sub_1DC4092F8();
  sub_1DC097DD0(&v9, v7 + 24);
  return v7;
}

_QWORD *sub_1DC289340(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  int v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  int *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  int *v43;
  void (*v44)(char *, char *, uint64_t);
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v55;
  _QWORD *v56;

  v4 = type metadata accessor for StockViewModel();
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    v15 = (_QWORD *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = (int *)v4;
    v7 = sub_1DC4010E4();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = v6[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1DC401030();
    v12 = *(_QWORD *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    {
      sub_1DC089DA4(0, &qword_1EDB28DC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF040], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    v16 = v6[6];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    v19 = (int *)type metadata accessor for StockSparklineViewModel(0);
    v20 = *((_QWORD *)v19 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v20 + 48))(v18, 1, v19))
    {
      sub_1DC089DA4(0, &qword_1EDB353E0, type metadata accessor for StockSparklineViewModel, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      v22 = sub_1DC408614();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v17, v18, v22);
      v23 = v19[5];
      v24 = &v17[v23];
      v25 = &v18[v23];
      *(_QWORD *)v24 = *(_QWORD *)v25;
      v24[8] = v25[8];
      v26 = v19[6];
      v27 = &v17[v26];
      v28 = &v18[v26];
      *(_QWORD *)v27 = *(_QWORD *)v28;
      v27[8] = v28[8];
      v17[v19[7]] = v18[v19[7]];
      v29 = v19[8];
      v30 = &v17[v29];
      v31 = &v18[v29];
      v32 = sub_1DC400F7C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v30, v31, v32);
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v20 + 56))(v17, 0, 1, v19);
    }
    v33 = v6[7];
    v34 = (char *)a1 + v33;
    v55 = a2;
    v35 = (char *)a2 + v33;
    *(_QWORD *)v34 = *(_QWORD *)v35;
    v34[8] = v35[8];
    *((_QWORD *)v34 + 2) = *((_QWORD *)v35 + 2);
    v34[24] = v35[24];
    *((_QWORD *)v34 + 4) = *((_QWORD *)v35 + 4);
    v34[40] = v35[40];
    v36 = *((_QWORD *)v35 + 7);
    *((_QWORD *)v34 + 6) = *((_QWORD *)v35 + 6);
    *((_QWORD *)v34 + 7) = v36;
    v37 = *((_QWORD *)v35 + 9);
    *((_QWORD *)v34 + 8) = *((_QWORD *)v35 + 8);
    *((_QWORD *)v34 + 9) = v37;
    v34[80] = v35[80];
    v38 = type metadata accessor for PriceViewModel();
    v39 = *(int *)(v38 + 40);
    v40 = &v34[v39];
    v41 = &v35[v39];
    v42 = sub_1DC4011C8();
    v56 = a1;
    v43 = v6;
    v44 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v42 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v44(v40, v41, v42);
    v45 = *(int *)(v38 + 44);
    v46 = &v34[v45];
    v47 = &v35[v45];
    v48 = sub_1DC400118();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 16))(v46, v47, v48);
    v49 = v43[8];
    v50 = (char *)v56 + v49;
    v51 = (char *)v55 + v49;
    v52 = sub_1DC4008EC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 16))(v50, v51, v52);
    v53 = v43[9];
    v15 = v56;
    *((_BYTE *)v56 + v53) = *((_BYTE *)v55 + v53);
  }
  return v15;
}

uint64_t sub_1DC2896A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  _BYTE *v17;
  int *v18;
  uint64_t v19;
  uint64_t (*v20)(_BYTE *, uint64_t, int *);
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;

  v4 = sub_1DC4010E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  v5 = (int *)type metadata accessor for StockViewModel();
  v6 = v5[5];
  v7 = (void *)(a1 + v6);
  v8 = (void *)(a2 + v6);
  v9 = sub_1DC401030();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    sub_1DC089DA4(0, &qword_1EDB28DC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF040], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  v15 = v5[6];
  v16 = (_BYTE *)(a1 + v15);
  v17 = (_BYTE *)(a2 + v15);
  v18 = (int *)type metadata accessor for StockSparklineViewModel(0);
  v19 = *((_QWORD *)v18 - 1);
  v20 = *(uint64_t (**)(_BYTE *, uint64_t, int *))(v19 + 48);
  v21 = v20(v16, 1, v18);
  v22 = v20(v17, 1, v18);
  if (!v21)
  {
    if (!v22)
    {
      v56 = sub_1DC408614();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v56 - 8) + 24))(v16, v17, v56);
      v57 = v18[5];
      v58 = &v16[v57];
      v59 = &v17[v57];
      v60 = *(_QWORD *)v59;
      v58[8] = v59[8];
      *(_QWORD *)v58 = v60;
      v61 = v18[6];
      v62 = &v16[v61];
      v63 = &v17[v61];
      LOBYTE(v60) = v63[8];
      *(_QWORD *)v62 = *(_QWORD *)v63;
      v62[8] = v60;
      v16[v18[7]] = v17[v18[7]];
      v64 = v18[8];
      v65 = &v16[v64];
      v66 = &v17[v64];
      v67 = sub_1DC400F7C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v67 - 8) + 24))(v65, v66, v67);
      goto LABEL_13;
    }
    sub_1DC0EDE58((uint64_t)v16);
    goto LABEL_12;
  }
  if (v22)
  {
LABEL_12:
    sub_1DC089DA4(0, &qword_1EDB353E0, type metadata accessor for StockSparklineViewModel, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    goto LABEL_13;
  }
  v23 = sub_1DC408614();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v16, v17, v23);
  v24 = v18[5];
  v25 = &v16[v24];
  v26 = &v17[v24];
  v27 = *(_QWORD *)v26;
  v25[8] = v26[8];
  *(_QWORD *)v25 = v27;
  v28 = v18[6];
  v29 = &v16[v28];
  v30 = &v17[v28];
  LOBYTE(v27) = v30[8];
  *(_QWORD *)v29 = *(_QWORD *)v30;
  v29[8] = v27;
  v16[v18[7]] = v17[v18[7]];
  v31 = v18[8];
  v32 = &v16[v31];
  v33 = &v17[v31];
  v34 = sub_1DC400F7C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v32, v33, v34);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v19 + 56))(v16, 0, 1, v18);
LABEL_13:
  v36 = v5[7];
  v37 = a1 + v36;
  v38 = a2 + v36;
  v39 = *(_QWORD *)(a2 + v36);
  *(_BYTE *)(v37 + 8) = *(_BYTE *)(v38 + 8);
  *(_QWORD *)v37 = v39;
  v40 = *(_QWORD *)(v38 + 16);
  *(_BYTE *)(v37 + 24) = *(_BYTE *)(v38 + 24);
  *(_QWORD *)(v37 + 16) = v40;
  v41 = *(_QWORD *)(v38 + 32);
  *(_BYTE *)(v37 + 40) = *(_BYTE *)(v38 + 40);
  *(_QWORD *)(v37 + 32) = v41;
  *(_QWORD *)(v37 + 48) = *(_QWORD *)(v38 + 48);
  *(_QWORD *)(v37 + 56) = *(_QWORD *)(v38 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v37 + 64) = *(_QWORD *)(v38 + 64);
  *(_QWORD *)(v37 + 72) = *(_QWORD *)(v38 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v37 + 80) = *(_BYTE *)(v38 + 80);
  v42 = type metadata accessor for PriceViewModel();
  v43 = *(int *)(v42 + 40);
  v44 = v37 + v43;
  v45 = v38 + v43;
  v46 = sub_1DC4011C8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 24))(v44, v45, v46);
  v47 = *(int *)(v42 + 44);
  v48 = v37 + v47;
  v49 = v38 + v47;
  v50 = sub_1DC400118();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 24))(v48, v49, v50);
  v51 = v5[8];
  v52 = a1 + v51;
  v53 = a2 + v51;
  v54 = sub_1DC4008EC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 24))(v52, v53, v54);
  *(_BYTE *)(a1 + v5[9]) = *(_BYTE *)(a2 + v5[9]);
  return a1;
}

uint64_t sub_1DC289AE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  int *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v4 = sub_1DC4010E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  v5 = (int *)type metadata accessor for StockViewModel();
  v6 = v5[5];
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = sub_1DC401030();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    sub_1DC089DA4(0, &qword_1EDB28DC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF040], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v12 = v5[6];
  v13 = (char *)(a1 + v12);
  v14 = (char *)(a2 + v12);
  v15 = (int *)type metadata accessor for StockSparklineViewModel(0);
  v16 = *((_QWORD *)v15 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v16 + 48))(v14, 1, v15))
  {
    sub_1DC089DA4(0, &qword_1EDB353E0, type metadata accessor for StockSparklineViewModel, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    v18 = sub_1DC408614();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v13, v14, v18);
    v19 = v15[5];
    v20 = &v13[v19];
    v21 = &v14[v19];
    *(_QWORD *)v20 = *(_QWORD *)v21;
    v20[8] = v21[8];
    v22 = v15[6];
    v23 = &v13[v22];
    v24 = &v14[v22];
    *(_QWORD *)v23 = *(_QWORD *)v24;
    v23[8] = v24[8];
    v13[v15[7]] = v14[v15[7]];
    v25 = v15[8];
    v26 = &v13[v25];
    v27 = &v14[v25];
    v28 = sub_1DC400F7C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 32))(v26, v27, v28);
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v16 + 56))(v13, 0, 1, v15);
  }
  v29 = v5[7];
  v30 = a1 + v29;
  v31 = a2 + v29;
  *(_QWORD *)v30 = *(_QWORD *)(a2 + v29);
  *(_BYTE *)(v30 + 8) = *(_BYTE *)(a2 + v29 + 8);
  *(_QWORD *)(v30 + 16) = *(_QWORD *)(a2 + v29 + 16);
  *(_BYTE *)(v30 + 24) = *(_BYTE *)(a2 + v29 + 24);
  *(_QWORD *)(v30 + 32) = *(_QWORD *)(a2 + v29 + 32);
  *(_BYTE *)(v30 + 40) = *(_BYTE *)(a2 + v29 + 40);
  v32 = *(_OWORD *)(a2 + v29 + 64);
  *(_OWORD *)(v30 + 48) = *(_OWORD *)(a2 + v29 + 48);
  *(_OWORD *)(v30 + 64) = v32;
  *(_BYTE *)(v30 + 80) = *(_BYTE *)(a2 + v29 + 80);
  v33 = type metadata accessor for PriceViewModel();
  v34 = *(int *)(v33 + 40);
  v35 = v30 + v34;
  v36 = v31 + v34;
  v37 = sub_1DC4011C8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 32))(v35, v36, v37);
  v38 = *(int *)(v33 + 44);
  v39 = v30 + v38;
  v40 = v31 + v38;
  v41 = sub_1DC400118();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 32))(v39, v40, v41);
  v42 = v5[8];
  v43 = a1 + v42;
  v44 = a2 + v42;
  v45 = sub_1DC4008EC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 32))(v43, v44, v45);
  *(_BYTE *)(a1 + v5[9]) = *(_BYTE *)(a2 + v5[9]);
  return a1;
}

uint64_t sub_1DC289DDC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  _BYTE *v17;
  int *v18;
  uint64_t v19;
  uint64_t (*v20)(_BYTE *, uint64_t, int *);
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;

  v4 = sub_1DC4010E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  v5 = (int *)type metadata accessor for StockViewModel();
  v6 = v5[5];
  v7 = (void *)(a1 + v6);
  v8 = (void *)(a2 + v6);
  v9 = sub_1DC401030();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 32))(v7, v8, v9);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    sub_1DC089DA4(0, &qword_1EDB28DC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF040], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 40))(v7, v8, v9);
LABEL_7:
  v15 = v5[6];
  v16 = (_BYTE *)(a1 + v15);
  v17 = (_BYTE *)(a2 + v15);
  v18 = (int *)type metadata accessor for StockSparklineViewModel(0);
  v19 = *((_QWORD *)v18 - 1);
  v20 = *(uint64_t (**)(_BYTE *, uint64_t, int *))(v19 + 48);
  v21 = v20(v16, 1, v18);
  v22 = v20(v17, 1, v18);
  if (!v21)
  {
    if (!v22)
    {
      v54 = sub_1DC408614();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v54 - 8) + 40))(v16, v17, v54);
      v55 = v18[5];
      v56 = &v16[v55];
      v57 = &v17[v55];
      *(_QWORD *)v56 = *(_QWORD *)v57;
      v56[8] = v57[8];
      v58 = v18[6];
      v59 = &v16[v58];
      v60 = &v17[v58];
      *(_QWORD *)v59 = *(_QWORD *)v60;
      v59[8] = v60[8];
      v16[v18[7]] = v17[v18[7]];
      v61 = v18[8];
      v62 = &v16[v61];
      v63 = &v17[v61];
      v64 = sub_1DC400F7C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v64 - 8) + 40))(v62, v63, v64);
      goto LABEL_13;
    }
    sub_1DC0EDE58((uint64_t)v16);
    goto LABEL_12;
  }
  if (v22)
  {
LABEL_12:
    sub_1DC089DA4(0, &qword_1EDB353E0, type metadata accessor for StockSparklineViewModel, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    goto LABEL_13;
  }
  v23 = sub_1DC408614();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v16, v17, v23);
  v24 = v18[5];
  v25 = &v16[v24];
  v26 = &v17[v24];
  *(_QWORD *)v25 = *(_QWORD *)v26;
  v25[8] = v26[8];
  v27 = v18[6];
  v28 = &v16[v27];
  v29 = &v17[v27];
  *(_QWORD *)v28 = *(_QWORD *)v29;
  v28[8] = v29[8];
  v16[v18[7]] = v17[v18[7]];
  v30 = v18[8];
  v31 = &v16[v30];
  v32 = &v17[v30];
  v33 = sub_1DC400F7C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 32))(v31, v32, v33);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v19 + 56))(v16, 0, 1, v18);
LABEL_13:
  v35 = v5[7];
  v36 = a1 + v35;
  v37 = a2 + v35;
  *(_QWORD *)v36 = *(_QWORD *)(a2 + v35);
  *(_BYTE *)(v36 + 8) = *(_BYTE *)(a2 + v35 + 8);
  *(_QWORD *)(v36 + 16) = *(_QWORD *)(a2 + v35 + 16);
  *(_BYTE *)(v36 + 24) = *(_BYTE *)(a2 + v35 + 24);
  *(_QWORD *)(v36 + 32) = *(_QWORD *)(a2 + v35 + 32);
  *(_BYTE *)(v36 + 40) = *(_BYTE *)(a2 + v35 + 40);
  v38 = *(_QWORD *)(a2 + v35 + 56);
  *(_QWORD *)(v36 + 48) = *(_QWORD *)(a2 + v35 + 48);
  *(_QWORD *)(v36 + 56) = v38;
  swift_bridgeObjectRelease();
  v39 = *(_QWORD *)(v37 + 72);
  *(_QWORD *)(v36 + 64) = *(_QWORD *)(v37 + 64);
  *(_QWORD *)(v36 + 72) = v39;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v36 + 80) = *(_BYTE *)(v37 + 80);
  v40 = type metadata accessor for PriceViewModel();
  v41 = *(int *)(v40 + 40);
  v42 = v36 + v41;
  v43 = v37 + v41;
  v44 = sub_1DC4011C8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 40))(v42, v43, v44);
  v45 = *(int *)(v40 + 44);
  v46 = v36 + v45;
  v47 = v37 + v45;
  v48 = sub_1DC400118();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 40))(v46, v47, v48);
  v49 = v5[8];
  v50 = a1 + v49;
  v51 = a2 + v49;
  v52 = sub_1DC4008EC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 40))(v50, v51, v52);
  *(_BYTE *)(a1 + v5[9]) = *(_BYTE *)(a2 + v5[9]);
  return a1;
}

uint64_t sub_1DC28A1F4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC28A200(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for StockViewModel();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_1DC28A23C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC28A248(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for StockViewModel();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_1DC28A288()
{
  uint64_t ObjCClassFromMetadata;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1DC3FFC80();

  sub_1DC089DA4(0, (unint64_t *)&qword_1EDB400C0, (uint64_t (*)(uint64_t))sub_1DC1542B8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1DC40DC10;
  v3 = sub_1DC40106C();
  v5 = v4;
  *(_QWORD *)(v2 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v2 + 64) = sub_1DC0E7FAC();
  *(_QWORD *)(v2 + 32) = v3;
  *(_QWORD *)(v2 + 40) = v5;
  v6 = sub_1DC408A70();
  swift_bridgeObjectRelease();
  return v6;
}

unint64_t sub_1DC28A3D8()
{
  unint64_t result;

  result = qword_1F0350538;
  if (!qword_1F0350538)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC41FCFC, &type metadata for IncreaseTextSizeIntent);
    atomic_store(result, (unint64_t *)&qword_1F0350538);
  }
  return result;
}

unint64_t sub_1DC28A420()
{
  unint64_t result;

  result = qword_1F0350540;
  if (!qword_1F0350540)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC41FD24, &type metadata for IncreaseTextSizeIntent);
    atomic_store(result, (unint64_t *)&qword_1F0350540);
  }
  return result;
}

uint64_t sub_1DC28A464()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1DC28A474()
{
  sub_1DC28A4B4();
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1DC28A4B4()
{
  unint64_t result;

  result = qword_1F0350548;
  if (!qword_1F0350548)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC41FC6C, &type metadata for IncreaseTextSizeIntent);
    atomic_store(result, (unint64_t *)&qword_1F0350548);
  }
  return result;
}

uint64_t sub_1DC28A4F8()
{
  return sub_1DC3FFCF8();
}

uint64_t sub_1DC28A514()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v0 = sub_1DC3FFD04();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1DC400118();
  MEMORY[0x1E0C80A78](v4);
  v5 = sub_1DC408A10();
  MEMORY[0x1E0C80A78](v5);
  v6 = sub_1DC3FFD10();
  __swift_allocate_value_buffer(v6, qword_1F0368B20);
  __swift_project_value_buffer(v6, (uint64_t)qword_1F0368B20);
  sub_1DC408A04();
  sub_1DC4000DC();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0CAF9B8], v0);
  return sub_1DC3FFD1C();
}

uint64_t sub_1DC28A688()
{
  char v0;

  sub_1DC40691C();
  sub_1DC3FF92C();
  swift_getObjectType();
  v0 = sub_1DC404AB0();
  swift_unknownObjectRelease();
  if ((v0 & 1) != 0)
  {
    sub_1DC3FF92C();
    swift_getObjectType();
    sub_1DC404AE0();
    swift_release();
    return swift_unknownObjectRelease();
  }
  else
  {
    sub_1DC28A918();
    swift_allocError();
    swift_willThrow();
    return swift_release();
  }
}

uint64_t sub_1DC28A77C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1F034B0A0 != -1)
    swift_once();
  v2 = sub_1DC3FFD10();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1F0368B20);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_1DC28A7EC(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *v1;
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v3;
  return swift_task_switch();
}

uint64_t sub_1DC28A808()
{
  uint64_t v0;

  sub_1DC408DA0();
  *(_QWORD *)(v0 + 32) = sub_1DC408D94();
  sub_1DC408D88();
  return swift_task_switch();
}

uint64_t sub_1DC28A870()
{
  swift_release();
  sub_1DC28A688();
  return swift_task_switch();
}

uint64_t sub_1DC28A8E0()
{
  sub_1DC28A4B4();
  return sub_1DC3FF9D4();
}

ValueMetadata *type metadata accessor for IncreaseTextSizeIntent()
{
  return &type metadata for IncreaseTextSizeIntent;
}

unint64_t sub_1DC28A918()
{
  unint64_t result;

  result = qword_1F0350558;
  if (!qword_1F0350558)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC41FDF0, &type metadata for IncreaseTextSizeIntent.Error);
    atomic_store(result, (unint64_t *)&qword_1F0350558);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for IncreaseTextSizeIntent.Error(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1DC28A99C + 4 * asc_1DC41FC60[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1DC28A9BC + 4 * byte_1DC41FC65[v4]))();
}

_BYTE *sub_1DC28A99C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1DC28A9BC(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC28A9C4(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC28A9CC(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC28A9D4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC28A9DC(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for IncreaseTextSizeIntent.Error()
{
  return &type metadata for IncreaseTextSizeIntent.Error;
}

unint64_t sub_1DC28A9FC()
{
  unint64_t result;

  result = qword_1F0350560;
  if (!qword_1F0350560)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC41FDC8, &type metadata for IncreaseTextSizeIntent.Error);
    atomic_store(result, (unint64_t *)&qword_1F0350560);
  }
  return result;
}

uint64_t sub_1DC28AA40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  sub_1DC102724(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

void sub_1DC28AABC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;

  sub_1DC102724(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, v8);
  else
    *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
}

uint64_t sub_1DC28AB34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;

  sub_1DC12D96C();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC102724(0);
  v12 = v11;
  v13 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC12D928(a1, (uint64_t)v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12) == 1)
  {
    type metadata accessor for ForYouFeedServiceConfig();
    sub_1DC080808(&qword_1EDB347D0, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedServiceConfig, (uint64_t)&unk_1DC431F70);
    sub_1DC4076C0();
    sub_1DC12D8EC((uint64_t)v10);
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(a4, v15, v12);
  }
  else
  {
    v16 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
    v16(v15, v10, v12);
    v16(a4, v15, v12);
  }
  if (!a2)
  {
    v20 = 6;
    sub_1DC12D780();
    swift_allocObject();
    a2 = sub_1DC407984();
  }
  v17 = type metadata accessor for StockForYouFeedGroupKnobs();
  *(_QWORD *)&a4[*(int *)(v17 + 20)] = a2;
  if (!a3)
  {
    v20 = 1000;
    sub_1DC12D780();
    swift_allocObject();
    a3 = sub_1DC407984();
  }
  result = sub_1DC12D8EC(a1);
  *(_QWORD *)&a4[*(int *)(v17 + 24)] = a3;
  return result;
}

uint64_t sub_1DC28AD58@<X0>(_QWORD *a1@<X0>, char *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;

  sub_1DC12D96C();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC28B280(0, &qword_1F0350568, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v9 = v8;
  v14 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v13 - v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC28B23C();
  sub_1DC409B08();
  if (!v2)
  {
    sub_1DC102724(0);
    LOBYTE(v17) = 0;
    sub_1DC080808((unint64_t *)&unk_1EDB2AE70, (uint64_t (*)(uint64_t))sub_1DC102724, MEMORY[0x1E0D5B228]);
    sub_1DC4098B0();
    sub_1DC12D780();
    LOBYTE(v16) = 1;
    sub_1DC080808(&qword_1EDB2AF38, (uint64_t (*)(uint64_t))sub_1DC12D780, MEMORY[0x1E0D5BD20]);
    sub_1DC4098B0();
    v13 = v17;
    v15 = 2;
    sub_1DC4098B0();
    sub_1DC28AB34((uint64_t)v7, v13, v16, a2);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v11, v9);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1DC28AF60(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;
  char v13;
  uint64_t v14;

  v3 = v1;
  sub_1DC28B280(0, &qword_1F0350578, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC28B23C();
  sub_1DC409B14();
  LOBYTE(v14) = 0;
  sub_1DC102724(0);
  sub_1DC080808(&qword_1F034E868, (uint64_t (*)(uint64_t))sub_1DC102724, MEMORY[0x1E0D5B220]);
  sub_1DC409988();
  if (!v2)
  {
    v10 = type metadata accessor for StockForYouFeedGroupKnobs();
    v14 = *(_QWORD *)(v3 + *(int *)(v10 + 20));
    v13 = 1;
    sub_1DC12D780();
    sub_1DC080808(&qword_1F034E870, (uint64_t (*)(uint64_t))sub_1DC12D780, MEMORY[0x1E0D5BD10]);
    sub_1DC409988();
    v14 = *(_QWORD *)(v3 + *(int *)(v10 + 24));
    v13 = 2;
    sub_1DC409988();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1DC28B13C()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0xD000000000000014;
  if (*v0 != 1)
    v1 = 0xD000000000000010;
  if (*v0)
    return v1;
  else
    return 0x73656C7572;
}

uint64_t sub_1DC28B1A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC28B480(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC28B1C4()
{
  sub_1DC28B23C();
  return sub_1DC409B20();
}

uint64_t sub_1DC28B1EC()
{
  sub_1DC28B23C();
  return sub_1DC409B2C();
}

uint64_t sub_1DC28B214@<X0>(_QWORD *a1@<X0>, char *a2@<X8>)
{
  return sub_1DC28AD58(a1, a2);
}

uint64_t sub_1DC28B228(_QWORD *a1)
{
  return sub_1DC28AF60(a1);
}

unint64_t sub_1DC28B23C()
{
  unint64_t result;

  result = qword_1F0350570;
  if (!qword_1F0350570)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC41FF70, &type metadata for StockForYouFeedGroupKnobs.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F0350570);
  }
  return result;
}

void sub_1DC28B280(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC28B23C();
    v7 = a3(a1, &type metadata for StockForYouFeedGroupKnobs.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t storeEnumTagSinglePayload for StockForYouFeedGroupKnobs.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1DC28B328 + 4 * byte_1DC41FE35[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1DC28B35C + 4 * byte_1DC41FE30[v4]))();
}

uint64_t sub_1DC28B35C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC28B364(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC28B36CLL);
  return result;
}

uint64_t sub_1DC28B378(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC28B380);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1DC28B384(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC28B38C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StockForYouFeedGroupKnobs.CodingKeys()
{
  return &type metadata for StockForYouFeedGroupKnobs.CodingKeys;
}

unint64_t sub_1DC28B3AC()
{
  unint64_t result;

  result = qword_1F0350580;
  if (!qword_1F0350580)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC41FF48, &type metadata for StockForYouFeedGroupKnobs.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F0350580);
  }
  return result;
}

unint64_t sub_1DC28B3F4()
{
  unint64_t result;

  result = qword_1F0350588;
  if (!qword_1F0350588)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC41FEB8, &type metadata for StockForYouFeedGroupKnobs.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F0350588);
  }
  return result;
}

unint64_t sub_1DC28B43C()
{
  unint64_t result;

  result = qword_1F0350590;
  if (!qword_1F0350590)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC41FEE0, &type metadata for StockForYouFeedGroupKnobs.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F0350590);
  }
  return result;
}

uint64_t sub_1DC28B480(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x73656C7572 && a2 == 0xE500000000000000;
  if (v2 || (sub_1DC4099E8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001DC4422F0 || (sub_1DC4099E8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001DC442310)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1DC4099E8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

id sub_1DC28B5C0(uint64_t a1)
{
  return sub_1DC093478(a1, 0, &qword_1EDB5DFC0);
}

id sub_1DC28B5D0()
{
  id result;

  result = sub_1DC0A1B08(0);
  qword_1EDB5E170 = (uint64_t)result;
  return result;
}

uint64_t sub_1DC28B5F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC8StocksUI14PriceFormatter_locale;
  v2 = sub_1DC400118();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_1DC28B640()
{
  return type metadata accessor for PriceFormatter();
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_BYTE *)(result + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for PriceFormatter.Style(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PriceFormatter.Style(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

uint64_t sub_1DC28B6E8(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 1u)
    return *(unsigned __int8 *)(a1 + 8);
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_1DC28B700(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(_QWORD *)result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for PriceFormatter.Style()
{
  return &type metadata for PriceFormatter.Style;
}

void sub_1DC28B728()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1F03505A0)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1F03505A0);
  }
}

uint64_t sub_1DC28B788(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1DC28B7C4 + 4 * byte_1DC41FFE0[a1]))(0xD000000000000011, 0x80000001DC432DF0);
}

unint64_t sub_1DC28B7C4()
{
  return 0xD000000000000012;
}

uint64_t sub_1DC28B7EC()
{
  return 0x6F682D7265746661;
}

void sub_1DC28B80C(char *a1)
{
  sub_1DC1592D8(*a1);
}

void sub_1DC28B818()
{
  char *v0;

  sub_1DC364330(*v0);
}

void sub_1DC28B820(uint64_t a1)
{
  char *v1;

  sub_1DC3644E0(a1, *v1);
}

void sub_1DC28B828(uint64_t a1)
{
  char *v1;

  sub_1DC364724(a1, *v1);
}

uint64_t sub_1DC28B830@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1DC28B998();
  *a1 = result;
  return result;
}

uint64_t sub_1DC28B85C@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1DC28B788(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t storeEnumTagSinglePayload for StockChartZoneType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1DC28B8D0 + 4 * byte_1DC41FFE9[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1DC28B904 + 4 * byte_1DC41FFE4[v4]))();
}

uint64_t sub_1DC28B904(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC28B90C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC28B914);
  return result;
}

uint64_t sub_1DC28B920(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC28B928);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1DC28B92C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC28B934(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StockChartZoneType()
{
  return &type metadata for StockChartZoneType;
}

unint64_t sub_1DC28B954()
{
  unint64_t result;

  result = qword_1F03505A8;
  if (!qword_1F03505A8)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC42007C, &type metadata for StockChartZoneType);
    atomic_store(result, (unint64_t *)&qword_1F03505A8);
  }
  return result;
}

uint64_t sub_1DC28B998()
{
  unint64_t v0;

  v0 = sub_1DC4098A4();
  swift_bridgeObjectRelease();
  if (v0 >= 4)
    return 4;
  else
    return v0;
}

UIImage __swiftcall UIImage.composite(with:)(UIImage with)
{
  void *v1;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  objc_class *v14;
  id v15;
  char isEscapingClosureAtFileLocation;
  UIImage result;
  _QWORD v18[6];

  objc_msgSend(v1, sel_size);
  v4 = v3;
  -[objc_class size](with.super.isa, sel_size);
  if (v4 <= v5)
    v4 = v5;
  objc_msgSend(v1, sel_size);
  v7 = v6;
  -[objc_class size](with.super.isa, sel_size);
  if (v7 <= v8)
    v7 = v8;
  v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3828]), sel_initWithSize_, v4, v7);
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v1;
  *(double *)(v10 + 24) = v4;
  *(double *)(v10 + 32) = v7;
  *(UIImage *)(v10 + 40) = with;
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = sub_1DC28BBD4;
  *(_QWORD *)(v11 + 24) = v10;
  v18[4] = sub_1DC080634;
  v18[5] = v11;
  v18[0] = MEMORY[0x1E0C809B0];
  v18[1] = 1107296256;
  v18[2] = sub_1DC28BC54;
  v18[3] = &block_descriptor_26;
  v12 = _Block_copy(v18);
  v13 = v1;
  v14 = with.super.isa;
  swift_retain();
  swift_release();
  v15 = objc_msgSend(v9, sel_imageWithActions_, v12);

  _Block_release(v12);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result.super.isa = (Class)swift_release();
  if ((isEscapingClosureAtFileLocation & 1) == 0)
    return (UIImage)v15;
  __break(1u);
  return result;
}

uint64_t sub_1DC28BBA8()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1DC28BBD4(void *a1)
{
  uint64_t v1;
  void *v3;
  void *v4;

  v3 = *(void **)(v1 + 16);
  v4 = *(void **)(v1 + 40);
  sub_1DC28BC88(v3, a1);
  sub_1DC28BC88(v4, a1);
}

uint64_t sub_1DC28BC24(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t sub_1DC28BC44()
{
  return swift_deallocObject();
}

void sub_1DC28BC54(uint64_t a1, void *a2)
{
  void (*v2)(void);
  id v3;

  v2 = *(void (**)(void))(a1 + 32);
  v3 = a2;
  v2();

}

void sub_1DC28BC88(void *a1, void *a2)
{
  id v4;
  id v5;

  objc_msgSend(a1, sel_size);
  objc_msgSend(a1, sel_size);
  v4 = objc_msgSend(a2, sel_CGContext);
  v5 = objc_msgSend(a1, sel_CGImage);
  if (v5)
  {
    objc_msgSend(a1, sel_size);
    objc_msgSend(a1, sel_size);
    sub_1DC408F38();

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1DC28BD84(uint64_t a1)
{
  __swift_project_boxed_opaque_existential_1((_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 40));
  return sub_1DC400DD8();
}

__n128 sub_1DC28BDD0@<Q0>(uint64_t a1@<X8>)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __n128 result;
  _OWORD v7[10];
  uint64_t v8;

  sub_1DC28BE54((uint64_t)v7);
  v2 = v7[9];
  *(_OWORD *)(a1 + 128) = v7[8];
  *(_OWORD *)(a1 + 144) = v2;
  *(_QWORD *)(a1 + 160) = v8;
  v3 = v7[5];
  *(_OWORD *)(a1 + 64) = v7[4];
  *(_OWORD *)(a1 + 80) = v3;
  v4 = v7[7];
  *(_OWORD *)(a1 + 96) = v7[6];
  *(_OWORD *)(a1 + 112) = v4;
  v5 = v7[1];
  *(_OWORD *)a1 = v7[0];
  *(_OWORD *)(a1 + 16) = v5;
  result = (__n128)v7[3];
  *(_OWORD *)(a1 + 32) = v7[2];
  *(__n128 *)(a1 + 48) = result;
  return result;
}

void sub_1DC28BE54(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v3;
  char v4;
  void *v5;
  void *v6;
  id v7;
  SEL *v8;
  id v9;
  void *v10;
  SEL *p_name;
  unint64_t v12;
  unint64_t v13;
  void *v14;
  id v15;
  void *v16;
  id v17;
  uint64_t v18;
  SEL *v19;
  uint64_t v20;
  id v21;
  id v22;
  void *v23;
  id v24;
  id v25;
  void *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  SEL *v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  id v35;
  BOOL v36;
  id v37;
  id v38;
  char v39;
  _QWORD *v40;
  char v41;
  id v42;
  id v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  void *v54;
  id i;
  char v56;
  _QWORD v57[21];
  _QWORD v58[4];

  __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 80));
  if ((sub_1DC400C1C() & 1) != 0)
  {
    v3 = 2;
  }
  else
  {
    sub_1DC0824D4(v1 + 56, (uint64_t)v58);
    __swift_project_boxed_opaque_existential_1(v58, v58[3]);
    v4 = sub_1DC400BE0();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v58);
    v3 = (v4 & 1) == 0;
  }
  v56 = v3;
  v5 = (void *)objc_opt_self();
  v6 = (void *)sub_1DC408A1C();
  v7 = objc_msgSend(v5, sel_linkWithBundleIdentifier_, v6);

  if (!v7)
    goto LABEL_71;
  objc_msgSend(v7, sel_setDisplayLargeIcon_, 1);
  objc_msgSend(v7, sel_setDisplayCaptionText_, 1);
  v8 = (SEL *)&selRef_scrollViewDidScroll_;
  v9 = objc_msgSend(v7, sel_view);
  if (!v9)
  {
LABEL_69:
    __break(1u);
LABEL_70:
    __break(1u);
LABEL_71:
    sub_1DC409838();
    __break(1u);
    return;
  }
  v10 = v9;
  p_name = (SEL *)&stru_1EA492FF8.name;
  v12 = (unint64_t)objc_msgSend(v9, sel_subviews);

  sub_1DC0821D4(0, &qword_1F0350658);
  v13 = sub_1DC408CD4();

  if (v13 >> 62)
    goto LABEL_24;
  v14 = *(void **)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
  for (i = v7; v14; i = v7)
  {
    if ((v13 & 0xC000000000000001) != 0)
    {
      v15 = (id)MEMORY[0x1DF0C9FBC](0, v13);
    }
    else
    {
      if (!*(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        goto LABEL_65;
      }
      v15 = *(id *)(v13 + 32);
    }
    v16 = v15;
    swift_bridgeObjectRelease();
    v17 = objc_msgSend(v16, p_name[498]);

    v13 = sub_1DC408CD4();
    if (v13 >> 62)
    {
      swift_bridgeObjectRetain();
      v12 = sub_1DC409850();
      if (!v12)
      {
LABEL_28:
        v14 = 0;
LABEL_29:
        swift_bridgeObjectRelease();
        break;
      }
    }
    else
    {
      v12 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v12)
        goto LABEL_28;
    }
    v18 = 4;
    p_name = (SEL *)0x1E0DC3000;
    while (1)
    {
      v19 = (v13 & 0xC000000000000001) != 0
          ? (SEL *)MEMORY[0x1DF0C9FBC](v18 - 4, v13)
          : (SEL *)*(id *)(v13 + 8 * v18);
      v8 = v19;
      v7 = (id)(v18 - 3);
      if (__OFADD__(v18 - 4, 1))
        break;
      objc_opt_self();
      v20 = swift_dynamicCastObjCClass();
      if (v20)
      {
        v14 = (void *)v20;
        goto LABEL_22;
      }

      ++v18;
      if (v7 == (id)v12)
      {
        v14 = 0;
LABEL_22:
        v7 = i;
        p_name = (SEL *)(&stru_1EA492FF8 + 8);
        v8 = (SEL *)&selRef_scrollViewDidScroll_;
        goto LABEL_29;
      }
    }
    __break(1u);
LABEL_24:
    swift_bridgeObjectRetain();
    v14 = (void *)sub_1DC409850();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  v21 = objc_msgSend(v14, sel_attributedText);
  v22 = objc_msgSend(v7, v8[95]);
  if (!v22)
    goto LABEL_70;
  v23 = v22;
  v24 = objc_msgSend(v22, p_name[498]);

  v12 = sub_1DC408CD4();
  if (v12 >> 62)
    goto LABEL_49;
  v54 = v21;
  if (!*(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_50:
    v33 = 0;
    goto LABEL_51;
  }
  while (1)
  {
    if ((v12 & 0xC000000000000001) != 0)
    {
LABEL_65:
      v25 = (id)MEMORY[0x1DF0C9FBC](0, v12);
    }
    else
    {
      if (!*(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        goto LABEL_69;
      }
      v25 = *(id *)(v12 + 32);
    }
    v26 = v25;
    swift_bridgeObjectRelease();
    v27 = objc_msgSend(v26, p_name[498]);

    v12 = sub_1DC408CD4();
    if (v12 >> 62)
      break;
    v28 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v28)
      goto LABEL_45;
LABEL_38:
    v21 = (id)(v12 & 0xC000000000000001);
    v29 = 4;
    while (1)
    {
      v30 = v21 ? (SEL *)MEMORY[0x1DF0C9FBC](v29 - 4, v12) : (SEL *)*(id *)(v12 + 8 * v29);
      p_name = v30;
      v31 = v29 - 3;
      if (__OFADD__(v29 - 4, 1))
        break;
      objc_opt_self();
      v32 = swift_dynamicCastObjCClass();
      if (v32)
      {
        v33 = (void *)v32;
        goto LABEL_47;
      }

      ++v29;
      if (v31 == v28)
        goto LABEL_45;
    }
    __break(1u);
LABEL_49:
    swift_bridgeObjectRetain();
    v34 = sub_1DC409850();
    swift_bridgeObjectRelease();
    v54 = v21;
    if (!v34)
      goto LABEL_50;
  }
  swift_bridgeObjectRetain();
  v28 = sub_1DC409850();
  if (v28)
    goto LABEL_38;
LABEL_45:
  v33 = 0;
LABEL_47:
  swift_bridgeObjectRelease();
LABEL_51:
  swift_bridgeObjectRelease();
  v35 = objc_msgSend(v33, sel_image);
  v36 = _s11TeaSettings0B0C8StocksUIE7WelcomeV7VersionV14isBrandNewUserSbvgZ_0();
  v37 = sub_1DC28C568();
  sub_1DC28C830(v56, v36, (uint64_t)v37, (uint64_t)objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3870]), sel_init), (uint64_t)v57);
  v38 = v54;
  if (v54)
  {
    v38 = v54;
    if (objc_msgSend(v38, sel_length) && v35)
    {
      v35 = v35;
      v39 = v36;
      v40 = v58;
      v41 = v56;
      v42 = v38;
      goto LABEL_60;
    }

    v38 = v38;
    if (objc_msgSend(v38, sel_length))
    {
      v43 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3870]), sel_init);
      v39 = v36;
      v40 = v58;
      v41 = v56;
      v42 = v38;
      goto LABEL_61;
    }

    v38 = v54;
  }
  if (v35)
  {
    v35 = v35;
    v42 = sub_1DC28C568();
    v39 = v36;
    v40 = v58;
    v41 = v56;
LABEL_60:
    v43 = v35;
LABEL_61:
    sub_1DC28C830(v41, v39, (uint64_t)v42, (uint64_t)v43, (uint64_t)v58);
    v44 = i;
    sub_1DC28CD60(v57);

  }
  else
  {
    v40 = v57;
    v44 = i;
  }

  v45 = v40[20];
  v46 = v40[17];
  v47 = *(_OWORD *)(v40 + 9);
  v48 = v40[11];
  v49 = v40[12];
  v50 = *(_OWORD *)(v40 + 5);
  v51 = *(_OWORD *)(v40 + 7);
  v52 = *(_OWORD *)(v40 + 3);
  v53 = *(_OWORD *)(v40 + 1);
  *(_BYTE *)a1 = *(_BYTE *)v40;
  *(_OWORD *)(a1 + 8) = v53;
  *(_OWORD *)(a1 + 24) = v52;
  *(_OWORD *)(a1 + 40) = v50;
  *(_OWORD *)(a1 + 56) = v51;
  *(_OWORD *)(a1 + 72) = v47;
  *(_QWORD *)(a1 + 88) = v48;
  *(_QWORD *)(a1 + 96) = v49;
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(v40 + 13);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(v40 + 15);
  *(_QWORD *)(a1 + 136) = v46;
  *(_OWORD *)(a1 + 144) = *((_OWORD *)v40 + 9);
  *(_QWORD *)(a1 + 160) = v45;
}

id sub_1DC28C568()
{
  uint64_t ObjCClassFromMetadata;
  id v1;
  id v2;
  void *v3;
  id v4;

  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1DC3FFC80();

  v2 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  v3 = (void *)sub_1DC408A1C();
  swift_bridgeObjectRelease();
  v4 = objc_msgSend(v2, sel_initWithString_, v3, 0x80000001DC442A30);

  return v4;
}

uint64_t type metadata accessor for WelcomeModelProvider()
{
  return objc_opt_self();
}

uint64_t sub_1DC28C688()
{
  void *v0;
  uint64_t v1;

  sub_1DC40070C();
  sub_1DC402E0C();
  sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3F8D0);
  v0 = (void *)sub_1DC409148();
  swift_retain();
  v1 = sub_1DC402D04();
  swift_release();

  swift_release();
  return v1;
}

uint64_t sub_1DC28C734()
{
  uint64_t ObjCClassFromMetadata;
  id v1;
  uint64_t v2;

  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v2 = sub_1DC3FFC80();

  return v2;
}

void sub_1DC28C830(char a1@<W0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t ObjCClassFromMetadata;
  id v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v58;

  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v9 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  if ((a2 & 1) != 0)
    v43 = 0x80000001DC442870;
  else
    v43 = 0x80000001DC442490;
  v10 = sub_1DC3FFC80();
  v54 = v11;
  v55 = v10;

  v12 = (void *)objc_opt_self();
  v13 = objc_msgSend(v12, sel_bundleForClass_, ObjCClassFromMetadata, v43);
  v14 = sub_1DC3FFC80();
  v52 = v15;
  v53 = v14;

  v16 = objc_msgSend(v12, sel_bundleForClass_, ObjCClassFromMetadata, 0x80000001DC4424D0);
  v17 = sub_1DC3FFC80();
  v50 = v18;
  v51 = v17;

  v19 = objc_msgSend(v12, sel_bundleForClass_, ObjCClassFromMetadata, 0x80000001DC442520);
  v20 = sub_1DC3FFC80();
  v48 = v21;
  v49 = v20;

  v22 = objc_msgSend(v12, sel_bundleForClass_, ObjCClassFromMetadata, 0x80000001DC4425B0);
  v23 = sub_1DC3FFC80();
  v58 = v24;

  v47 = a1;
  if (a1 == 2)
  {
    v25 = objc_msgSend(v12, sel_bundleForClass_, ObjCClassFromMetadata, 0x80000001DC442620);
    v44 = 0x80000001DC4426B0;
    v26 = sub_1DC3FFC80();
    v28 = v27;

    v29 = 0;
    v30 = 0;
    v45 = 0;
    v46 = 0;
  }
  else
  {
    v31 = objc_msgSend(v12, sel_bundleForClass_, ObjCClassFromMetadata, 0x80000001DC442620);
    v32 = sub_1DC3FFC80();
    v45 = v33;
    v46 = v32;

    v34 = objc_msgSend(v12, sel_bundleForClass_, ObjCClassFromMetadata, 0x80000001DC442780);
    v44 = 0x80000001DC4427F0;
    v35 = sub_1DC3FFC80();
    v37 = v36;

    v26 = sub_1DC28C734();
    v28 = v38;
    v29 = v23;
    v30 = v58;
    v23 = v35;
    v58 = v37;
  }
  v39 = objc_msgSend(v12, sel_bundleForClass_, ObjCClassFromMetadata, v44);
  v40 = sub_1DC3FFC80();
  v42 = v41;

  *(_BYTE *)a5 = v47;
  *(_QWORD *)(a5 + 8) = v55;
  *(_QWORD *)(a5 + 16) = v54;
  *(_QWORD *)(a5 + 24) = v53;
  *(_QWORD *)(a5 + 32) = v52;
  *(_QWORD *)(a5 + 40) = v51;
  *(_QWORD *)(a5 + 48) = v50;
  *(_QWORD *)(a5 + 56) = v49;
  *(_QWORD *)(a5 + 64) = v48;
  *(_QWORD *)(a5 + 72) = v23;
  *(_QWORD *)(a5 + 80) = v58;
  *(_QWORD *)(a5 + 88) = v26;
  *(_QWORD *)(a5 + 96) = v28;
  *(_QWORD *)(a5 + 104) = v29;
  *(_QWORD *)(a5 + 112) = v30;
  *(_QWORD *)(a5 + 120) = v46;
  *(_QWORD *)(a5 + 128) = v45;
  *(_QWORD *)(a5 + 136) = v40;
  *(_QWORD *)(a5 + 144) = v42;
  *(_QWORD *)(a5 + 152) = a3;
  *(_QWORD *)(a5 + 160) = a4;
}

_QWORD *sub_1DC28CD60(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v5;
  void *v6;

  v2 = a1[13];
  v3 = a1[14];
  v6 = (void *)a1[19];
  v5 = (void *)a1[20];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1DC28CE34(v2, v3);

  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1DC28CE34(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

__n128 sub_1DC28CE64@<Q0>(uint64_t a1@<X8>)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __n128 result;
  _OWORD v7[10];
  uint64_t v8;

  sub_1DC28BE54((uint64_t)v7);
  v2 = v7[9];
  *(_OWORD *)(a1 + 128) = v7[8];
  *(_OWORD *)(a1 + 144) = v2;
  *(_QWORD *)(a1 + 160) = v8;
  v3 = v7[5];
  *(_OWORD *)(a1 + 64) = v7[4];
  *(_OWORD *)(a1 + 80) = v3;
  v4 = v7[7];
  *(_OWORD *)(a1 + 96) = v7[6];
  *(_OWORD *)(a1 + 112) = v4;
  v5 = v7[1];
  *(_OWORD *)a1 = v7[0];
  *(_OWORD *)(a1 + 16) = v5;
  result = (__n128)v7[3];
  *(_OWORD *)(a1 + 32) = v7[2];
  *(__n128 *)(a1 + 48) = result;
  return result;
}

ValueMetadata *type metadata accessor for WelcomeModel.Bullet()
{
  return &type metadata for WelcomeModel.Bullet;
}

void destroy for WelcomeModel(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 112))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();

}

uint64_t initializeWithCopy for WelcomeModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  void *v14;
  void *v15;
  id v16;
  id v17;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  v6 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v6;
  v7 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v7;
  v8 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v8;
  v9 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v9;
  v10 = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v10)
  {
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
    *(_QWORD *)(a1 + 112) = v10;
    v11 = *(_QWORD *)(a2 + 128);
    *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
    *(_QWORD *)(a1 + 128) = v11;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v12 = *(_OWORD *)(a2 + 120);
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 120) = v12;
  }
  v13 = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = v13;
  v15 = *(void **)(a2 + 152);
  v14 = *(void **)(a2 + 160);
  *(_QWORD *)(a1 + 152) = v15;
  *(_QWORD *)(a1 + 160) = v14;
  swift_bridgeObjectRetain();
  v16 = v15;
  v17 = v14;
  return a1;
}

uint64_t assignWithCopy for WelcomeModel(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  _OWORD *v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  void *v13;
  id v14;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (_OWORD *)(a1 + 104);
  v5 = (_OWORD *)(a2 + 104);
  v6 = *(_QWORD *)(a2 + 112);
  if (*(_QWORD *)(a1 + 112))
  {
    if (v6)
    {
      *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
      *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
      *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1DC28D244(a1 + 104);
      v7 = *(_OWORD *)(a2 + 120);
      *v4 = *v5;
      *(_OWORD *)(a1 + 120) = v7;
    }
  }
  else if (v6)
  {
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
    *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
    *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
    *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v8 = *(_OWORD *)(a2 + 120);
    *v4 = *v5;
    *(_OWORD *)(a1 + 120) = v8;
  }
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v9 = *(void **)(a2 + 152);
  v10 = *(void **)(a1 + 152);
  *(_QWORD *)(a1 + 152) = v9;
  v11 = v9;

  v12 = *(void **)(a2 + 160);
  v13 = *(void **)(a1 + 160);
  *(_QWORD *)(a1 + 160) = v12;
  v14 = v12;

  return a1;
}

uint64_t sub_1DC28D244(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for WelcomeModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  void *v14;
  void *v15;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v8;
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v9;
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(a1 + 112))
    goto LABEL_5;
  v10 = *(_QWORD *)(a2 + 112);
  if (!v10)
  {
    sub_1DC28D244(a1 + 104);
LABEL_5:
    v12 = *(_OWORD *)(a2 + 120);
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 120) = v12;
    goto LABEL_6;
  }
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v10;
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = v11;
  swift_bridgeObjectRelease();
LABEL_6:
  v13 = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = v13;
  swift_bridgeObjectRelease();
  v14 = *(void **)(a1 + 152);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);

  v15 = *(void **)(a1 + 160);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);

  return a1;
}

uint64_t getEnumTagSinglePayload for WelcomeModel(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 168))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for WelcomeModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 168) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 168) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for WelcomeModel()
{
  return &type metadata for WelcomeModel;
}

uint64_t sub_1DC28D440@<X0>(uint64_t a1@<X0>, double a2@<X1>, double *a3@<X2>, uint64_t *a4@<X8>)
{
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  double v31;
  void (*v32)(char *, _QWORD);
  double v33;
  uint64_t v34;
  char v35;
  char v36;
  uint64_t (*v37)(char *, _QWORD);
  uint64_t result;
  double v40;
  uint64_t v41;
  char v42;
  char v43;
  double v44;
  double *v45;
  char **v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  __n128 v54;
  uint64_t *v55;
  uint64_t *v56;
  _QWORD *v57;
  uint64_t v58;
  double v59;
  double v60;
  double v61;
  double v62;
  uint64_t v63;
  double v64;
  double v65;
  double v66;
  double v67;
  _BYTE *v68;
  BOOL v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  __n128 v76;
  void (*v77)(uint64_t *__return_ptr);
  uint64_t *v78;
  uint64_t v79;
  char v80;
  uint64_t *v81;
  _BYTE *v82;
  BOOL v83;
  char **v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  void (*v90)(uint64_t, uint64_t, uint64_t);
  uint64_t *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t (*v97)(uint64_t);
  uint64_t v98;
  double v99;
  double v100;
  _QWORD *v101;
  double v102;
  double v103;
  double v104;
  char *v105;
  uint64_t v106;
  double v107;
  double v108;
  char *v109;
  double v110;
  double v111;
  char *v112;
  uint64_t v113;
  double v114;
  double v115;
  double v116;
  char *v117;
  double v118;
  double v119;
  uint64_t v120;
  char *v121;
  char v122;
  double v123;
  double v124;
  char *v125;
  uint64_t v126;
  double v127;
  double v128;
  char *v129;
  double v130;
  double v131;
  double v132;
  uint64_t v133;
  uint64_t v134;
  unint64_t v135;
  unint64_t v136;
  double v137;
  double v138;
  char *v139;
  double v140;
  double v141;
  __int128 v142;
  double v143;
  void *v144;
  id v145;
  id v146;
  double *v147;
  unint64_t v148;
  unint64_t v149;
  double v150;
  double v151;
  double v152;
  double v153;
  double v154;
  double v155;
  double v156;
  double v157;
  double v158;
  double v159;
  double v160;
  double v161;
  double MaxX;
  void (*v163)(char *, uint64_t);
  uint64_t v164;
  uint64_t v169;
  __n128 v170;
  uint64_t *v171;
  double *v172;
  uint64_t v173;
  char *v174;
  double v175;
  char *v176;
  char *v177;
  char *v178;
  _QWORD *v179;
  char *v180;
  uint64_t v181;
  char *v182;
  uint64_t v183;
  uint64_t v184;
  char *v185;
  char *v186;
  char *v187;
  char *v188;
  uint64_t v189;
  double *v190;
  double v191;
  double v192;
  double v193;
  double v194;
  uint64_t *v195;
  double v196;
  __int128 v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  char v202;
  uint64_t v203;
  CGRect v204;

  v190 = a3;
  v192 = a2;
  v195 = a4;
  v6 = 0;
  sub_1DC28E51C(0, (unint64_t *)&qword_1EDB3F490, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB25E8]);
  v8 = v7;
  v181 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v180 = (char *)&v171 - v9;
  v184 = sub_1DC3FFFEC();
  v183 = *(_QWORD *)(v184 - 8);
  MEMORY[0x1E0C80A78](v184);
  v187 = (char *)&v171 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v186 = (char *)&v171 - v12;
  sub_1DC28E51C(0, (unint64_t *)&qword_1EDB3F548, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB2858]);
  *(_QWORD *)&v197 = v13;
  v193 = *(double *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v171 - v14;
  v196 = COERCE_DOUBLE(sub_1DC4086A4());
  v16 = *(_QWORD *)(*(_QWORD *)&v196 - 8);
  MEMORY[0x1E0C80A78](*(_QWORD *)&v196);
  v182 = (char *)&v171 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v176 = (char *)&v171 - v19;
  MEMORY[0x1E0C80A78](v20);
  v178 = (char *)&v171 - v21;
  MEMORY[0x1E0C80A78](v22);
  v177 = (char *)&v171 - v23;
  MEMORY[0x1E0C80A78](v24);
  v185 = (char *)&v171 - v25;
  MEMORY[0x1E0C80A78](v26);
  v188 = (char *)&v171 - v27;
  MEMORY[0x1E0C80A78](v28);
  v30 = (char *)&v171 - v29;
  v179 = v4;
  v31 = *((double *)v4 + 2);
  sub_1DC4086D4();
  sub_1DC408698();
  v32 = *(void (**)(char *, _QWORD))(v16 + 8);
  v33 = v196;
  v194 = *(double *)&v32;
  v32(v30, *(_QWORD *)&v196);
  v189 = a1;
  sub_1DC4086E0();
  v191 = v31;
  *(double *)&v34 = COERCE_DOUBLE(sub_1DC40883C());
  v36 = v35;
  swift_bridgeObjectRelease();
  v37 = *(uint64_t (**)(char *, _QWORD))(*(_QWORD *)&v193 + 8);
  result = v37(v15, v197);
  _Q1 = 0uLL;
  v40 = 0.0;
  if ((v36 & 1) != 0)
  {
    v57 = 0;
    v58 = 0;
    v59 = 0.0;
    v60 = 0.0;
    v61 = 0.0;
    v62 = 0.0;
    v63 = 0;
LABEL_11:
    v64 = 0.0;
    v65 = 0.0;
    v66 = 0.0;
    v67 = 0.0;
    goto LABEL_28;
  }
  v175 = *(double *)&v34;
  v193 = 0.0;
  sub_1DC4086D4();
  sub_1DC408698();
  v174 = v30;
  (*(void (**)(char *, double))&v194)(v30, COERCE_DOUBLE(*(_QWORD *)&v33));
  sub_1DC4086E0();
  *(double *)&v41 = COERCE_DOUBLE(sub_1DC40883C());
  v43 = v42;
  swift_bridgeObjectRelease();
  result = v37(v15, v197);
  if ((v43 & 1) != 0)
  {
LABEL_27:
    v6 = 0;
    v58 = 0;
    v63 = 0;
    v57 = 0;
    v59 = 0.0;
    v60 = 0.0;
    v61 = 0.0;
    v62 = 0.0;
    v64 = 0.0;
    v65 = 0.0;
    v66 = 0.0;
    v67 = 0.0;
    v40 = 0.0;
    _Q1 = 0uLL;
    goto LABEL_28;
  }
  v44 = v33;
  v191 = *(double *)&v41;
  v173 = type metadata accessor for StockChartCalloutLayoutOptions();
  v45 = v190;
  v46 = (char **)((char *)v190 + *(int *)(v173 + 32));
  v47 = v46[1];
  v48 = v188;
  *(_QWORD *)&v197 = v8;
  sub_1DC4086D4();
  v49 = sub_1DC408698();
  v51 = v50;
  v52 = (*(uint64_t (**)(char *, double))&v194)(v48, COERCE_DOUBLE(*(_QWORD *)&v44));
  v203 = 0;
  MEMORY[0x1E0C80A78](v52);
  *(&v171 - 2) = &v203;
  if ((v51 & 0x1000000000000000) != 0 || !(v51 & 0x2000000000000000 | v49 & 0x1000000000000000))
  {
    sub_1DC409724();
LABEL_9:
    result = swift_bridgeObjectRelease();
    goto LABEL_18;
  }
  v54 = MEMORY[0x1E0C80A78](v53);
  *(&v171 - 2) = v56;
  *(&v171 - 1) = v55;
  if ((v51 & 0x2000000000000000) == 0)
  {
    if ((v49 & 0x1000000000000000) != 0)
    {
      ((void (*)(uint64_t *__return_ptr, uint64_t, __n128))sub_1DC28E5D4)(&v198, (v51 & 0xFFFFFFFFFFFFFFFLL) + 32, v54);
    }
    else
    {
      v169 = sub_1DC409778();
      ((void (*)(uint64_t *__return_ptr, uint64_t, __n128))*(&v171 - 2))(&v198, v169, v170);
    }
    v202 = v198;
    goto LABEL_9;
  }
  v198 = v49;
  v199 = v51 & 0xFFFFFFFFFFFFFFLL;
  v69 = (v49 > 0x20u || ((0x100003E01uLL >> v49) & 1) == 0)
     && (v68 = (_BYTE *)_swift_stdlib_strtod_clocale()) != 0
     && *v68 == 0;
  v202 = v69;
  result = swift_bridgeObjectRelease();
LABEL_18:
  if ((v202 & 1) == 0)
    goto LABEL_27;
  v70 = v185;
  sub_1DC4086D4();
  v71 = sub_1DC408698();
  v73 = v72;
  v74 = (*(uint64_t (**)(char *, double))&v194)(v70, COERCE_DOUBLE(*(_QWORD *)&v196));
  v203 = 0;
  MEMORY[0x1E0C80A78](v74);
  *(&v171 - 2) = &v203;
  if ((v73 & 0x1000000000000000) != 0 || !(v73 & 0x2000000000000000 | v71 & 0x1000000000000000))
  {
    sub_1DC409724();
    goto LABEL_26;
  }
  v76 = MEMORY[0x1E0C80A78](v75);
  v77 = (void (*)(uint64_t *__return_ptr))sub_1DC28E5D4;
  *(&v171 - 2) = (uint64_t *)sub_1DC28E5D4;
  *(&v171 - 1) = v78;
  if ((v73 & 0x2000000000000000) == 0)
  {
    if ((v71 & 0x1000000000000000) != 0)
    {
      v79 = (v73 & 0xFFFFFFFFFFFFFFFLL) + 32;
    }
    else
    {
      v79 = sub_1DC409778();
      v77 = (void (*)(uint64_t *__return_ptr))*(&v171 - 2);
      if (!v79)
      {
        v77(&v198);
        v80 = v198;
        v45 = v190;
        goto LABEL_25;
      }
      v45 = v190;
    }
    ((void (*)(uint64_t *__return_ptr, uint64_t, __n128))v77)(&v198, v79, v76);
    v80 = v198;
LABEL_25:
    v202 = v80;
LABEL_26:
    result = swift_bridgeObjectRelease();
    goto LABEL_35;
  }
  v198 = v71;
  v199 = v73 & 0xFFFFFFFFFFFFFFLL;
  v83 = (v71 > 0x20u || ((0x100003E01uLL >> v71) & 1) == 0)
     && (v82 = (_BYTE *)_swift_stdlib_strtod_clocale()) != 0
     && *v82 == 0;
  v202 = v83;
  result = swift_bridgeObjectRelease();
LABEL_35:
  v40 = 0.0;
  _Q1 = 0uLL;
  if ((v202 & 1) == 0)
  {
    v6 = 0;
    v58 = 0;
    v63 = 0;
    v57 = 0;
    v59 = 0.0;
    v60 = 0.0;
    v61 = 0.0;
    v62 = 0.0;
    goto LABEL_11;
  }
  v185 = v47;
  v84 = v46;
  v85 = v179[6];
  v86 = v179[7];
  __swift_project_boxed_opaque_existential_1(v179 + 3, v85);
  v172 = (double *)v84;
  v87 = v173;
  v88 = *(_QWORD *)((char *)v45 + *(int *)(v173 + 28));
  v89 = *(_QWORD *)(v86 + 8);
  v90 = *(void (**)(uint64_t, uint64_t, uint64_t))(v89 + 8);
  v200 = v85;
  v201 = v86;
  v91 = __swift_allocate_boxed_opaque_existential_1(&v198);
  v90(v88, v85, v89);
  v92 = (uint64_t)v186;
  sub_1DC3FFF8C();
  v93 = (uint64_t)v187;
  sub_1DC3FFF8C();
  v94 = sub_1DC28E220((uint64_t)v45 + *(int *)(v87 + 24));
  v95 = *(int *)(v87 + 20);
  v173 = v94;
  v96 = sub_1DC31F430(v92, v93, (uint64_t)v45 + v95);
  v97 = *(uint64_t (**)(uint64_t))(v86 + 24);
  v171 = v91;
  v188 = (char *)v85;
  v98 = v86;
  v6 = v97(v96);
  swift_bridgeObjectRelease();
  sub_1DC40919C();
  v100 = v99;
  v179 = v101;
  v102 = *v45;
  sub_1DC408F74();
  v104 = v102 - v103;
  if (v104 >= v100)
    v104 = v100;
  v193 = v104;
  v105 = v174;
  v106 = v197;
  sub_1DC4086D4();
  sub_1DC408680();
  v108 = v107;
  v109 = v105;
  v110 = v196;
  v111 = v194;
  (*(void (**)(char *, double))&v194)(v109, COERCE_DOUBLE(*(_QWORD *)&v196));
  v112 = v177;
  v113 = v189;
  sub_1DC4086D4();
  sub_1DC408680();
  v115 = v114;
  (*(void (**)(char *, double))&v111)(v112, COERCE_DOUBLE(*(_QWORD *)&v110));
  v116 = v108 - v115;
  v117 = v178;
  sub_1DC4086D4();
  sub_1DC408680();
  v119 = v118;
  (*(void (**)(char *, double))&v111)(v117, COERCE_DOUBLE(*(_QWORD *)&v110));
  v120 = v181;
  v121 = v180;
  (*(void (**)(char *, uint64_t, uint64_t))(v181 + 16))(v180, v113, v106);
  if (v119 >= 5.0 || v119 == 0.0)
  {
    v125 = v176;
    v126 = v197;
    sub_1DC4086D4();
    sub_1DC408680();
    v128 = v127;
    v129 = v125;
    v123 = v196;
    v124 = v194;
    (*(void (**)(char *, double))&v194)(v129, COERCE_DOUBLE(*(_QWORD *)&v196));
    (*(void (**)(char *, uint64_t))(v120 + 8))(v121, v126);
    v122 = v128 == 0.0 || v128 >= 5.0;
  }
  else
  {
    (*(void (**)(char *, _QWORD))(v120 + 8))(v121, v197);
    v122 = 0;
    v123 = v196;
    v124 = v194;
  }
  v130 = v175;
  v131 = v191;
  v132 = v102 - v193;
  v133 = 9666786;
  v134 = sub_1DC0FC758(v122, v116);
  if (v135)
  {
    v136 = v135;
  }
  else
  {
    v134 = 9666786;
    v136 = 0xA300000000000000;
  }
  v58 = (*(uint64_t (**)(uint64_t, unint64_t, char *, uint64_t, double))(v98 + 32))(v134, v136, v188, v98, v116);
  swift_bridgeObjectRelease();
  sub_1DC40919C();
  v61 = v137;
  v62 = v138;
  v139 = v182;
  sub_1DC4086D4();
  sub_1DC408680();
  v141 = v140;
  (*(void (**)(char *, double))&v124)(v139, COERCE_DOUBLE(*(_QWORD *)&v123));
  if (v141 - v116 <= 0.0)
    v143 = 0.0;
  else
    v143 = v116 / (v141 - v116);
  if (qword_1F034B010 != -1)
    swift_once();
  v196 = *(double *)&v185 + v130;
  v194 = *(double *)&v185 + v131;
  *(double *)&v142 = v132 * 0.5;
  v197 = v142;
  v144 = (void *)qword_1F0368A50;
  v145 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithDouble_, v143);
  v146 = objc_msgSend(v144, sel_stringFromNumber_, v145);

  v147 = v190;
  if (v146)
  {
    v133 = sub_1DC408A4C();
    v149 = v148;

  }
  else
  {
    v149 = 0xA300000000000000;
  }
  v63 = (*(uint64_t (**)(uint64_t, unint64_t, char *, uint64_t, double))(v98 + 40))(v133, v149, v188, v98, v116);
  swift_bridgeObjectRelease();
  sub_1DC40919C();
  v66 = v150;
  v67 = v151;
  v152 = *v147;
  v153 = *v147 - v61 - v150;
  v154 = v172[1];
  v155 = v172[3];
  sub_1DC408F74();
  v157 = v153 - v156;
  if (v157 > 50.0)
    v157 = 50.0;
  v158 = 0.0;
  if (v157 > 0.0)
    v158 = v157;
  v192 = v158;
  v159 = v61 + v66 + v158;
  v160 = v152 - v159 - v155;
  if (v160 <= v154)
    v160 = v154;
  v161 = v196 + (v194 - v196) * 0.5 - v159 * 0.5;
  if (v161 <= v154)
    v161 = v154;
  if (v160 >= v161)
    v59 = v161;
  else
    v59 = v160;
  v60 = v147[1] - v62 + -4.0;
  v204.origin.x = v59;
  v204.origin.y = v60;
  v204.size.width = v61;
  v204.size.height = v62;
  MaxX = CGRectGetMaxX(v204);
  swift_release();
  v163 = *(void (**)(char *, uint64_t))(v183 + 8);
  v164 = v184;
  v163(v187, v184);
  v163(v186, v164);
  v64 = MaxX + v192;
  v65 = v147[1] - v67 + -4.0;
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v198);
  __asm { FMOV            V1.2D, #5.0 }
  *(_QWORD *)&_Q1 = v197;
  v40 = v193;
  v57 = v179;
LABEL_28:
  v81 = v195;
  *v195 = v6;
  *(_OWORD *)(v81 + 1) = _Q1;
  *((double *)v81 + 3) = v40;
  v81[4] = (uint64_t)v57;
  v81[5] = v58;
  *((double *)v81 + 6) = v59;
  *((double *)v81 + 7) = v60;
  *((double *)v81 + 8) = v61;
  *((double *)v81 + 9) = v62;
  v81[10] = v63;
  *((double *)v81 + 11) = v64;
  *((double *)v81 + 12) = v65;
  *((double *)v81 + 13) = v66;
  *((double *)v81 + 14) = v67;
  return result;
}

uint64_t sub_1DC28E220(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t *v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t, uint64_t);
  char isUniquelyReferenced_nonNull_native;
  uint64_t v15;

  v3 = sub_1DC400220();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (uint64_t *)(v1 + 64);
  swift_beginAccess();
  v8 = *(_QWORD *)(v1 + 64);
  if (*(_QWORD *)(v8 + 16) && (v9 = sub_1DC1A3640(a1), (v10 & 1) != 0))
  {
    v11 = *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v9);
    swift_endAccess();
    swift_retain();
  }
  else
  {
    swift_endAccess();
    v12 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
    v12(v6, a1, v3);
    type metadata accessor for StockChartCalloutDateFormatter();
    v11 = swift_allocObject();
    *(_QWORD *)(v11 + OBJC_IVAR____TtC8StocksUI30StockChartCalloutDateFormatter____lazy_storage___dateFormatter) = 0;
    *(_QWORD *)(v11 + OBJC_IVAR____TtC8StocksUI30StockChartCalloutDateFormatter____lazy_storage___timeFormatter) = 0;
    (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(v11 + OBJC_IVAR____TtC8StocksUI30StockChartCalloutDateFormatter_timezone, v6, v3);
    v12(v6, a1, v3);
    swift_beginAccess();
    swift_retain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v15 = *v7;
    *v7 = 0x8000000000000000;
    sub_1DC35A268(v11, (uint64_t)v6, isUniquelyReferenced_nonNull_native);
    *v7 = v15;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    swift_endAccess();
  }
  return v11;
}

uint64_t sub_1DC28E3D0()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for StockChartRangeCalloutLayoutAttributesFactory()
{
  return objc_opt_self();
}

_BYTE *sub_1DC28E424@<X0>(_BYTE *result@<X0>, BOOL *a2@<X8>)
{
  unsigned int v3;
  BOOL v4;
  uint64_t v5;
  BOOL v6;
  BOOL v7;

  v3 = *result;
  v4 = v3 > 0x20;
  v5 = (1 << v3) & 0x100003E01;
  v6 = v4 || v5 == 0;
  v7 = v6 && (result = (_BYTE *)_swift_stdlib_strtod_clocale()) != 0 && *result == 0;
  *a2 = v7;
  return result;
}

uint64_t sub_1DC28E48C(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr))
{
  uint64_t v3;
  char v4;
  uint64_t var2;

  if (a1)
  {
    a3(&var2);
    if (!v3)
      v4 = var2;
  }
  else
  {
    ((void (*)(uint64_t *__return_ptr, _QWORD, _QWORD))a3)((uint64_t *)((char *)&var2 + 1), 0, 0);
    if (!v3)
      v4 = BYTE1(var2);
  }
  return v4 & 1;
}

_QWORD *sub_1DC28E4E0@<X0>(_QWORD *(*a1)(uint64_t *__return_ptr)@<X2>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;
  uint64_t v5;

  result = a1(&v5);
  if (!v2)
    *a2 = v5;
  return result;
}

void sub_1DC28E51C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *))
{
  unint64_t v6;
  uint64_t v7;
  _QWORD v8[4];

  if (!*a2)
  {
    v8[0] = sub_1DC4086A4();
    v8[1] = sub_1DC0EDE18(&qword_1EDB3F460, MEMORY[0x1E0DB2598]);
    v8[2] = sub_1DC0EDE18(&qword_1EDB3F450, MEMORY[0x1E0DB2588]);
    v8[3] = sub_1DC0EDE18(&qword_1EDB3F458, MEMORY[0x1E0DB2590]);
    v6 = a3(a1, v8);
    if (!v7)
      atomic_store(v6, a2);
  }
}

_BYTE *sub_1DC28E5D4@<X0>(_BYTE *a1@<X0>, BOOL *a2@<X8>)
{
  return sub_1DC28E5E8(a1, a2);
}

_BYTE *sub_1DC28E5E8@<X0>(_BYTE *result@<X0>, BOOL *a2@<X8>)
{
  unsigned int v3;
  BOOL v4;
  uint64_t v5;
  BOOL v6;
  BOOL v7;

  v3 = *result;
  v4 = v3 > 0x20;
  v5 = (1 << v3) & 0x100003E01;
  v6 = v4 || v5 == 0;
  v7 = v6 && (result = (_BYTE *)_swift_stdlib_strtod_clocale()) != 0 && *result == 0;
  *a2 = v7;
  return result;
}

unint64_t sub_1DC28E654(char a1, char a2)
{
  _QWORD *v2;
  uint64_t inited;
  void *v6;
  void *v7;
  void *v8;
  double v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  void *v14;
  void *v15;
  id v16;
  id v17;
  void *v18;
  void *v19;
  void *v20;
  double v21;
  id v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(uint64_t, uint64_t);
  uint64_t v30;
  id v31;
  id v32;

  sub_1DC089DA4(0, (unint64_t *)&qword_1EDB40090, (uint64_t (*)(uint64_t))sub_1DC112C08, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  if ((a1 & 1) == 0)
  {
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1DC40C740;
    v18 = (void *)*MEMORY[0x1E0DC1138];
    *(_QWORD *)(inited + 32) = *MEMORY[0x1E0DC1138];
    v19 = (void *)v2[7];
    v20 = (void *)objc_opt_self();
    v21 = *MEMORY[0x1E0DC1440];
    v22 = v18;
    v23 = objc_msgSend(v20, sel_systemFontOfSize_weight_, 17.0, v21);
    v24 = objc_msgSend(v19, sel_scaledFontForFont_, v23);

    v25 = sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FB00);
    *(_QWORD *)(inited + 40) = v24;
    v14 = (void *)*MEMORY[0x1E0DC1140];
    *(_QWORD *)(inited + 64) = v25;
    *(_QWORD *)(inited + 72) = v14;
    v26 = v2[5];
    v27 = v2[6];
    __swift_project_boxed_opaque_existential_1(v2 + 2, v26);
    v28 = *(_QWORD *)(v27 + 16);
    v29 = *(uint64_t (**)(uint64_t, uint64_t))(v28 + 240);
LABEL_6:
    v31 = v14;
    v17 = (id)v29(v26, v28);
    goto LABEL_7;
  }
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DC40C740;
  v6 = (void *)*MEMORY[0x1E0DC1138];
  *(_QWORD *)(inited + 32) = *MEMORY[0x1E0DC1138];
  v7 = (void *)v2[7];
  v8 = (void *)objc_opt_self();
  v9 = *MEMORY[0x1E0DC1438];
  v10 = v6;
  v11 = objc_msgSend(v8, sel_systemFontOfSize_weight_, 17.0, v9);
  v12 = objc_msgSend(v7, sel_scaledFontForFont_, v11);

  v13 = sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FB00);
  *(_QWORD *)(inited + 40) = v12;
  v14 = (void *)*MEMORY[0x1E0DC1140];
  *(_QWORD *)(inited + 64) = v13;
  *(_QWORD *)(inited + 72) = v14;
  if ((a2 & 1) == 0)
  {
    v26 = v2[5];
    v30 = v2[6];
    __swift_project_boxed_opaque_existential_1(v2 + 2, v26);
    v28 = *(_QWORD *)(v30 + 16);
    v29 = *(uint64_t (**)(uint64_t, uint64_t))(v28 + 104);
    goto LABEL_6;
  }
  v15 = (void *)objc_opt_self();
  v16 = v14;
  v17 = objc_msgSend(v15, sel_secondaryLabelColor);
LABEL_7:
  v32 = v17;
  *(_QWORD *)(inited + 104) = sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FB30);
  *(_QWORD *)(inited + 80) = v32;
  return sub_1DC0FA3C4(inited);
}

uint64_t sub_1DC28E8EC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  void *v22;
  id v23;
  _QWORD v25[2];

  sub_1DC089DA4(0, (unint64_t *)&qword_1EDB3FBF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC3228], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)v25 - v2;
  v4 = sub_1DC40952C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = objc_msgSend((id)objc_opt_self(), sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4A88]);
  v9 = sub_1DC4091C0();
  v10 = (void *)objc_opt_self();
  v11 = objc_msgSend(v10, sel_configurationWithFont_scale_, v8, v9);

  sub_1DC0E7820();
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1DC40FA60;
  v13 = v0 + 2;
  v15 = v0[5];
  v14 = v0[6];
  __swift_project_boxed_opaque_existential_1(v13, v15);
  v16 = (void *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)(v14 + 16) + 104))(v15);
  v17 = objc_msgSend(v16, sel_stocksAccessibilityAdjustedForIncreaseContrast);

  *(_QWORD *)(v12 + 32) = v17;
  v25[1] = v12;
  sub_1DC408CF8();
  sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FB30);
  v18 = (void *)sub_1DC408CC8();
  swift_bridgeObjectRelease();
  v19 = objc_msgSend(v10, sel_configurationWithPaletteColors_, v18);

  v20 = objc_msgSend(v11, sel_configurationByApplyingConfiguration_, v19);
  sub_1DC409514();
  v21 = v20;
  v22 = (void *)sub_1DC408A1C();
  v23 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_withConfiguration_, v22, v21);

  sub_1DC409508();
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v3, v7, v4);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v3, 0, 1, v4);
  sub_1DC409544();

  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

id sub_1DC28EBD4(char a1)
{
  _QWORD *v1;
  id v3;
  uint64_t v4;
  void *v5;
  id v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  uint64_t v16;
  void *v17;
  void *v18;
  id v19;
  id v20;

  v3 = objc_msgSend((id)objc_opt_self(), sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4A88]);
  v4 = sub_1DC4091C0();
  v5 = (void *)objc_opt_self();
  v6 = objc_msgSend(v5, sel_configurationWithFont_scale_, v3, v4);

  sub_1DC0E7820();
  if ((a1 & 1) != 0)
  {
    v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_1DC40FA50;
    *(_QWORD *)(v7 + 32) = objc_msgSend((id)objc_opt_self(), sel_whiteColor);
    v8 = v1 + 2;
    v10 = v1[5];
    v9 = v1[6];
    __swift_project_boxed_opaque_existential_1(v8, v10);
    *(_QWORD *)(v7 + 40) = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v9 + 16) + 104))(v10);
    sub_1DC408CF8();
    sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FB30);
    v11 = (void *)sub_1DC408CC8();
    swift_bridgeObjectRelease();
    v12 = objc_msgSend(v5, sel_configurationWithPaletteColors_, v11);

    v13 = objc_msgSend(v6, sel_configurationByApplyingConfiguration_, v12);
    v14 = (void *)sub_1DC408A1C();
    v15 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_withConfiguration_, v14, v13);

    if (!v15)
LABEL_6:
      v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3870]), sel_init);
  }
  else
  {
    v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_1DC40FA60;
    *(_QWORD *)(v16 + 32) = objc_msgSend((id)objc_opt_self(), sel_secondaryLabelColor);
    sub_1DC408CF8();
    sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FB30);
    v17 = (void *)sub_1DC408CC8();
    swift_bridgeObjectRelease();
    v12 = objc_msgSend(v5, sel_configurationWithPaletteColors_, v17);

    v13 = objc_msgSend(v6, sel_configurationByApplyingConfiguration_, v12);
    v18 = (void *)sub_1DC408A1C();
    v19 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_withConfiguration_, v18, v13);

    if (!v19)
      goto LABEL_6;
    v20 = objc_msgSend(v5, sel_configurationWithWeight_, 2);
    v15 = objc_msgSend(v19, sel_imageByApplyingSymbolConfiguration_, v20);

    if (!v15)
      goto LABEL_6;
  }

  return v15;
}

uint64_t type metadata accessor for WatchlistCellViewStyler()
{
  return objc_opt_self();
}

unint64_t sub_1DC28EF88(char a1, char a2)
{
  return sub_1DC28E654(a1, a2);
}

void sub_1DC28EFA8(void *a1, uint64_t a2, uint64_t a3, char a4, char a5)
{
  id v8;
  void *v9;
  void *v10;
  id v11;

  objc_msgSend(a1, sel_setNumberOfLines_, 2);
  swift_bridgeObjectRetain();
  sub_1DC28E654(a5, a4);
  v8 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  v9 = (void *)sub_1DC408A1C();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1DC0FB14C();
  v10 = (void *)sub_1DC408980();
  swift_bridgeObjectRelease();
  v11 = objc_msgSend(v8, sel_initWithString_attributes_, v9, v10);

  objc_msgSend(a1, sel_setAttributedText_, v11);
}

uint64_t sub_1DC28F0B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t *boxed_opaque_existential_1;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v20[5];

  v7 = *(_QWORD *)(*(_QWORD *)v3 + 40);
  v8 = *(_QWORD *)(*(_QWORD *)v3 + 48);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)v3 + 16), v7);
  v9 = *(_QWORD *)(v8 + 8);
  v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 8);
  v20[3] = v7;
  v20[4] = v8;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v20);
  v12 = v10(a1, v7, v9);
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v20[-1] - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t *, uint64_t, __n128))(v16 + 16))(v15, boxed_opaque_existential_1, v7, v13);
  v17 = sub_1DC28F1A8((uint64_t)v15, a2, v7, v8);
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  *a3 = v17;
  return result;
}

uint64_t sub_1DC28F1A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *boxed_opaque_existential_1;
  uint64_t v7;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;

  v10 = a3;
  v11 = a4;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v9);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 32))(boxed_opaque_existential_1, a1, a3);
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 56) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC37F8]), sel_initForTextStyle_, *MEMORY[0x1E0DC4AD0]);
  sub_1DC097DD0(&v9, v7 + 16);
  return v7;
}

uint64_t sub_1DC28F24C()
{
  uint64_t v0;
  id v1;

  v1 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  objc_msgSend(v1, sel_removeObserver_name_object_, v0, *MEMORY[0x1E0DC4528], 0);

  return swift_deallocClassInstance();
}

void sub_1DC28F2C0()
{
  uint64_t v0;
  id v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t i;
  void *v5;

  v1 = objc_msgSend(*(id *)(v0 + 16), sel_allObjects);
  sub_1DC28F464();
  v2 = sub_1DC408CD4();

  if (!(v2 >> 62))
  {
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v3)
      goto LABEL_3;
LABEL_10:
    swift_bridgeObjectRelease();
    return;
  }
  swift_bridgeObjectRetain();
  v3 = sub_1DC409850();
  swift_bridgeObjectRelease();
  if (!v3)
    goto LABEL_10;
LABEL_3:
  if (v3 >= 1)
  {
    for (i = 0; i != v3; ++i)
    {
      if ((v2 & 0xC000000000000001) != 0)
      {
        v5 = (void *)MEMORY[0x1DF0C9FBC](i, v2);
      }
      else
      {
        v5 = *(void **)(v2 + 8 * i + 32);
        swift_unknownObjectRetain();
      }
      objc_msgSend(v5, sel_invertColorsStatusDidChange);
      swift_unknownObjectRelease();
    }
    goto LABEL_10;
  }
  __break(1u);
}

unint64_t sub_1DC28F464()
{
  unint64_t result;

  result = qword_1F0350708;
  if (!qword_1F0350708)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1F0350708);
  }
  return result;
}

uint64_t *sub_1DC28F4B8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(char *, uint64_t, uint64_t);
  uint64_t v12;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v5 = a1;
    v6 = *(int *)(a3 + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_1DC3FFFEC();
    v10 = *(_QWORD *)(v9 - 8);
    v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
    swift_bridgeObjectRetain();
    if (v11(v8, 1, v9))
    {
      sub_1DC089DA4(0, &qword_1EDB28AC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    }
  }
  return v5;
}

_QWORD *sub_1DC28F5C0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int (*v9)(char *, uint64_t, uint64_t);
  uint64_t v10;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_1DC3FFFEC();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  swift_bridgeObjectRetain();
  if (v9(v6, 1, v7))
  {
    sub_1DC089DA4(0, &qword_1EDB28AC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v5, v6, v7);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

_QWORD *sub_1DC28F6A0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1DC3FFFEC();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    sub_1DC089DA4(0, &qword_1EDB28AC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

_QWORD *sub_1DC28F7D4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_1DC3FFFEC();
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    sub_1DC089DA4(0, &qword_1EDB28AC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

_QWORD *sub_1DC28F8A4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1DC3FFFEC();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    sub_1DC089DA4(0, &qword_1EDB28AC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

uint64_t sub_1DC28F9D0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC28F9DC(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    sub_1DC089DA4(0, &qword_1EDB28AC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t sub_1DC28FA70()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_1DC28FA7C(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    sub_1DC089DA4(0, &qword_1EDB28AC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_1DC28FB08()
{
  return sub_1DC080808(&qword_1EDB32008, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedGroupConfig, (uint64_t)&unk_1DC419674);
}

uint64_t sub_1DC28FB34()
{
  return sub_1DC080808(&qword_1EDB34F40, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedServiceContext, (uint64_t)&unk_1DC412180);
}

uint64_t sub_1DC28FB60@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t v21;

  v18 = a2;
  v17 = type metadata accessor for StockFeedConfig();
  MEMORY[0x1E0C80A78](v17);
  v5 = (uint64_t *)((char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1DC089DA4(0, &qword_1EDB28AC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v16 - v7;
  sub_1DC2900F4();
  v10 = v9;
  v16 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC29014C();
  sub_1DC409B08();
  if (!v2)
  {
    sub_1DC089DA4(0, &qword_1EDB3F748, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedGroupConfig, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    v20 = 0;
    sub_1DC290190();
    sub_1DC4098B0();
    v13 = v21;
    sub_1DC3FFFEC();
    v19 = 1;
    sub_1DC080808(&qword_1EDB28AB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08C0]);
    sub_1DC4098B0();
    v14 = MEMORY[0x1E0DEE9D8];
    if (v13)
      v14 = v13;
    *v5 = v14;
    sub_1DC153170((uint64_t)v8, (uint64_t)v5 + *(int *)(v17 + 20));
    sub_1DC290220((uint64_t)v5, v18);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v12, v10);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1DC28FDA0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1DC159560(*a1, *a2);
}

uint64_t sub_1DC28FDAC()
{
  sub_1DC409AC0();
  sub_1DC408AF4();
  swift_bridgeObjectRelease();
  return sub_1DC409AF0();
}

uint64_t sub_1DC28FE30()
{
  sub_1DC408AF4();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DC28FE90()
{
  sub_1DC409AC0();
  sub_1DC408AF4();
  swift_bridgeObjectRelease();
  return sub_1DC409AF0();
}

uint64_t sub_1DC28FF10@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1DC4098A4();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

void sub_1DC28FF6C(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x7370756F7267;
  if (*v1)
    v2 = 0x446873696C627570;
  v3 = 0xE600000000000000;
  if (*v1)
    v3 = 0xEB00000000657461;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1DC28FFB0()
{
  _BYTE *v0;

  if (*v0)
    return 0x446873696C627570;
  else
    return 0x7370756F7267;
}

uint64_t sub_1DC28FFF0@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1DC4098A4();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

uint64_t sub_1DC290050()
{
  sub_1DC29014C();
  return sub_1DC409B20();
}

uint64_t sub_1DC290078()
{
  sub_1DC29014C();
  return sub_1DC409B2C();
}

uint64_t sub_1DC2900A0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DC28FB60(a1, a2);
}

uint64_t sub_1DC2900B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;

  sub_1DC0BB31C(v3 + *(int *)(a2 + 20), (uint64_t)a3 + *(int *)(a2 + 20));
  *a3 = a1;
  return swift_bridgeObjectRetain();
}

void sub_1DC2900F4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB3FD70)
  {
    sub_1DC29014C();
    v0 = sub_1DC409928();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB3FD70);
  }
}

unint64_t sub_1DC29014C()
{
  unint64_t result;

  result = qword_1EDB2E328;
  if (!qword_1EDB2E328)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC420428, &type metadata for StockFeedConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB2E328);
  }
  return result;
}

unint64_t sub_1DC290190()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_1EDB3F750;
  if (!qword_1EDB3F750)
  {
    sub_1DC089DA4(255, &qword_1EDB3F748, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedGroupConfig, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1DC080808(&qword_1EDB32028, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedGroupConfig, (uint64_t)&unk_1DC41972C);
    result = MEMORY[0x1DF0CAB8C](MEMORY[0x1E0DEAF40], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1EDB3F750);
  }
  return result;
}

uint64_t sub_1DC290220(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for StockFeedConfig();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t storeEnumTagSinglePayload for StockFeedConfig.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1DC2902B0 + 4 * byte_1DC42028D[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1DC2902E4 + 4 * byte_1DC420288[v4]))();
}

uint64_t sub_1DC2902E4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC2902EC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC2902F4);
  return result;
}

uint64_t sub_1DC290300(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC290308);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1DC29030C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC290314(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StockFeedConfig.CodingKeys()
{
  return &type metadata for StockFeedConfig.CodingKeys;
}

unint64_t sub_1DC290334()
{
  unint64_t result;

  result = qword_1F0350710;
  if (!qword_1F0350710)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC420400, &type metadata for StockFeedConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F0350710);
  }
  return result;
}

unint64_t sub_1DC29037C()
{
  unint64_t result;

  result = qword_1EDB2E338;
  if (!qword_1EDB2E338)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC420338, &type metadata for StockFeedConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB2E338);
  }
  return result;
}

unint64_t sub_1DC2903C4()
{
  unint64_t result;

  result = qword_1EDB2E330;
  if (!qword_1EDB2E330)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC420360, &type metadata for StockFeedConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB2E330);
  }
  return result;
}

id sub_1DC29042C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  void *v7;
  id v8;

  v1 = OBJC_IVAR____TtC8StocksUI24TextFieldAlertController____lazy_storage___titleLabel;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC8StocksUI24TextFieldAlertController____lazy_storage___titleLabel);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC8StocksUI24TextFieldAlertController____lazy_storage___titleLabel);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
    v5 = (void *)sub_1DC408A1C();
    objc_msgSend(v4, sel_setText_, v5);

    v6 = objc_msgSend((id)objc_opt_self(), sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4AD0]);
    objc_msgSend(v4, sel_setFont_, v6);

    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    v7 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v8 = v2;
  return v3;
}

id sub_1DC29052C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC8StocksUI24TextFieldAlertController____lazy_storage___messageLabel;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC8StocksUI24TextFieldAlertController____lazy_storage___messageLabel);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC8StocksUI24TextFieldAlertController____lazy_storage___messageLabel);
  }
  else
  {
    v4 = sub_1DC29058C();
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_1DC29058C()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
  v1 = (void *)sub_1DC408A1C();
  objc_msgSend(v0, sel_setText_, v1);

  v2 = objc_msgSend((id)objc_opt_self(), sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4A90]);
  objc_msgSend(v0, sel_setFont_, v2);

  objc_msgSend(v0, sel_setNumberOfLines_, 0);
  objc_msgSend(v0, sel_setTextAlignment_, 1);
  objc_msgSend(v0, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  return v0;
}

id sub_1DC29067C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  void *v7;
  id v8;

  v1 = OBJC_IVAR____TtC8StocksUI24TextFieldAlertController____lazy_storage___textFieldLabel;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC8StocksUI24TextFieldAlertController____lazy_storage___textFieldLabel);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC8StocksUI24TextFieldAlertController____lazy_storage___textFieldLabel);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
    v5 = objc_msgSend((id)objc_opt_self(), sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4A90]);
    objc_msgSend(v4, sel_setFont_, v5);

    v6 = objc_msgSend((id)objc_opt_self(), sel_secondaryLabelColor);
    objc_msgSend(v4, sel_setTextColor_, v6);

    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    v7 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v8 = v2;
  return v3;
}

id sub_1DC290788()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC8StocksUI24TextFieldAlertController____lazy_storage___textField;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC8StocksUI24TextFieldAlertController____lazy_storage___textField);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC8StocksUI24TextFieldAlertController____lazy_storage___textField);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3DB8]), sel_init);
    objc_msgSend(v4, sel_setBorderStyle_, 3);
    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    objc_msgSend(v4, sel_setEnabled_, 0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_1DC290834(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  void *v15;
  id v16;

  v5 = *a1;
  v6 = *(void **)(v4 + *a1);
  if (v6)
  {
    v7 = *(id *)(v4 + *a1);
  }
  else
  {
    v10 = v4;
    sub_1DC0821D4(0, &qword_1F03507B0);
    sub_1DC0821D4(0, &qword_1EDB42178);
    v11 = swift_allocObject();
    swift_unknownObjectWeakInit();
    swift_bridgeObjectRetain();
    sub_1DC4093E8();
    v12 = (void *)sub_1DC409550();
    objc_msgSend(v12, sel_setRole_, a4, 0, 0, 0, a3, v11);
    v13 = objc_msgSend(v12, sel_widthAnchor);
    v14 = objc_msgSend(v13, sel_constraintGreaterThanOrEqualToConstant_, 60.0);

    objc_msgSend(v14, sel_setActive_, 1);
    objc_msgSend(v12, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    v15 = *(void **)(v10 + v5);
    *(_QWORD *)(v10 + v5) = v12;
    v7 = v12;

    v6 = 0;
  }
  v16 = v6;
  return v7;
}

void sub_1DC2909E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void (*v5)(uint64_t);
  uint64_t v6;

  v2 = a2 + 16;
  swift_beginAccess();
  v3 = MEMORY[0x1DF0CAD78](v2);
  if (v3)
  {
    v4 = (void *)v3;
    v5 = *(void (**)(uint64_t))(v3 + OBJC_IVAR____TtC8StocksUI24TextFieldAlertController_onCancel);
    if (v5)
    {
      v6 = swift_retain();
      v5(v6);
      sub_1DC0E81D0((uint64_t)v5);
    }
    objc_msgSend(v4, sel_dismissViewControllerAnimated_completion_, 1, 0);

  }
}

void sub_1DC290A84(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void (*v5)(uint64_t, unint64_t);
  id v6;
  id v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;

  v2 = a2 + 16;
  swift_beginAccess();
  v3 = MEMORY[0x1DF0CAD78](v2);
  if (v3)
  {
    v4 = (void *)v3;
    v5 = *(void (**)(uint64_t, unint64_t))(v3
                                                          + OBJC_IVAR____TtC8StocksUI24TextFieldAlertController_onSubmit);
    if (v5)
    {
      swift_retain();
      v6 = sub_1DC290788();
      v7 = objc_msgSend(v6, sel_text);

      if (v7)
      {
        v8 = sub_1DC408A4C();
        v10 = v9;

      }
      else
      {
        v8 = 0;
        v10 = 0xE000000000000000;
      }
      v5(v8, v10);
      sub_1DC0E81D0((uint64_t)v5);
      swift_bridgeObjectRelease();
    }
    objc_msgSend(v4, sel_dismissViewControllerAnimated_completion_, 1, 0);

  }
}

id sub_1DC290C08()
{
  char *v0;
  char *v1;
  id v2;
  void *v3;
  void (*v4)(id, id);
  id v5;
  id v6;
  id result;
  void *v8;
  double v9;
  double v10;
  double v11;
  double v12;
  objc_super v13;

  v1 = v0;
  v13.receiver = v0;
  v13.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v13, sel_viewDidLoad);
  v2 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  sub_1DC3FFC80();

  v3 = (void *)sub_1DC408A1C();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_setAccessibilityLabel_, v3, 0x80000001DC442D20);

  sub_1DC290DC4();
  v4 = *(void (**)(id, id))&v1[OBJC_IVAR____TtC8StocksUI24TextFieldAlertController_configureTextField];
  if (v4)
  {
    swift_retain();
    v5 = sub_1DC290788();
    v6 = sub_1DC29067C();
    v4(v5, v6);
    sub_1DC0E81D0((uint64_t)v4);

  }
  result = objc_msgSend(v1, sel_view);
  if (result)
  {
    v8 = result;
    objc_msgSend(result, sel_systemLayoutSizeFittingSize_, *MEMORY[0x1E0DC4FF8], *(double *)(MEMORY[0x1E0DC4FF8] + 8));
    v10 = v9;
    v12 = v11;

    return objc_msgSend(v1, sel_setPreferredContentSize_, v10, v12);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1DC290DC4()
{
  void *v0;
  void *v1;
  uint64_t v2;
  id v3;
  void *v4;
  id v5;
  id v6;
  void *v7;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  double v13;
  uint64_t v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  void *v20;
  uint64_t v21;
  id v22;
  id v23;
  void *v24;
  id v25;
  id v26;
  id v27;
  void *v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  void *v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  void *v49;
  id v50;
  id v51;
  id v52;
  void *v53;
  id v54;
  id v55;
  id v56;
  id v57;
  void *v58;
  id v59;
  id v60;
  id v61;
  id v62;
  void *v63;
  void *v64;
  id v65;
  id v66;
  void *v67;
  id v68;
  int v69;

  v1 = v0;
  sub_1DC0E7820();
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1DC40FA50;
  *(_QWORD *)(v2 + 32) = sub_1DC290834(&OBJC_IVAR____TtC8StocksUI24TextFieldAlertController____lazy_storage___cancelButton, (uint64_t)&OBJC_IVAR____TtC8StocksUI24TextFieldAlertController_cancelTitle, (uint64_t)sub_1DC291BB4, 2);
  *(_QWORD *)(v2 + 40) = sub_1DC290834(&OBJC_IVAR____TtC8StocksUI24TextFieldAlertController____lazy_storage___submitButton, (uint64_t)&OBJC_IVAR____TtC8StocksUI24TextFieldAlertController_submitTitle, (uint64_t)sub_1DC291BAC, 1);
  sub_1DC408CF8();
  v3 = objc_allocWithZone(MEMORY[0x1E0DC3CA8]);
  sub_1DC0821D4(0, &qword_1F0350658);
  v4 = (void *)sub_1DC408CC8();
  swift_bridgeObjectRelease();
  v5 = objc_msgSend(v3, sel_initWithArrangedSubviews_, v4);

  objc_msgSend(v5, sel_setAxis_, 0);
  objc_msgSend(v5, sel_setDistribution_, 1);
  objc_msgSend(v5, sel_setSpacing_, 8.0);
  objc_msgSend(v5, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v6 = objc_msgSend(v1, sel_view);
  if (!v6)
  {
    __break(1u);
    goto LABEL_12;
  }
  v7 = v6;
  objc_msgSend(v6, sel_addSubview_, v5);

  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1DC40FA50;
  *(_QWORD *)(v8 + 32) = sub_1DC29067C();
  *(_QWORD *)(v8 + 40) = sub_1DC290788();
  v69 = v8;
  sub_1DC408CF8();
  v9 = objc_allocWithZone(MEMORY[0x1E0DC3CA8]);
  v10 = (void *)sub_1DC408CC8();
  swift_bridgeObjectRelease();
  v11 = objc_msgSend(v9, (SEL)&selRef_containsArticleID_ + 2, v10);

  objc_msgSend(v11, (SEL)&selRef_initWithSearchResultsController_, 0);
  objc_msgSend(v11, sel_setSpacing_, 8.0);
  objc_msgSend(v11, sel_setAlignment_, 2);
  objc_msgSend(v11, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v12 = sub_1DC290788();
  type metadata accessor for UILayoutPriority(0);
  sub_1DC291B40();
  sub_1DC406E38();
  LODWORD(v13) = v69;
  objc_msgSend(v12, sel_setContentHuggingPriority_forAxis_, 0, v13);

  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1DC412B70;
  *(_QWORD *)(v14 + 32) = sub_1DC29042C();
  *(_QWORD *)(v14 + 40) = sub_1DC29052C();
  *(_QWORD *)(v14 + 48) = v11;
  sub_1DC408CF8();
  v15 = objc_allocWithZone(MEMORY[0x1E0DC3CA8]);
  v68 = v11;
  v16 = (void *)sub_1DC408CC8();
  swift_bridgeObjectRelease();
  v17 = objc_msgSend(v15, (SEL)&selRef_containsArticleID_ + 2, v16);

  objc_msgSend(v17, sel_setAxis_, 1);
  objc_msgSend(v17, sel_setAlignment_, 3);
  objc_msgSend(v17, sel_setSpacing_, 10.0);
  v18 = sub_1DC29052C();
  objc_msgSend(v17, sel_setCustomSpacing_afterView_, v18, 20.0);

  objc_msgSend(v17, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v19 = objc_msgSend(v1, sel_view);
  if (!v19)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v20 = v19;
  objc_msgSend(v19, sel_addSubview_, v17);

  v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_1DC420480;
  v22 = objc_msgSend(v17, sel_topAnchor);
  v23 = objc_msgSend(v1, sel_view);
  if (!v23)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v24 = v23;
  v25 = objc_msgSend(v23, sel_topAnchor);

  v26 = objc_msgSend(v22, sel_constraintEqualToSystemSpacingBelowAnchor_multiplier_, v25, 1.0);
  *(_QWORD *)(v21 + 32) = v26;
  v27 = objc_msgSend(v1, sel_view);
  if (!v27)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v28 = v27;
  v29 = objc_msgSend(v27, sel_trailingAnchor);

  v30 = objc_msgSend(v17, sel_trailingAnchor);
  v31 = objc_msgSend(v29, sel_constraintEqualToSystemSpacingAfterAnchor_multiplier_, v30, 1.0);

  *(_QWORD *)(v21 + 40) = v31;
  v32 = objc_msgSend(v17, sel_leadingAnchor);
  v33 = objc_msgSend(v1, sel_view);
  if (!v33)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v34 = v33;
  v35 = objc_msgSend(v33, sel_leadingAnchor);

  v36 = objc_msgSend(v32, sel_constraintEqualToSystemSpacingAfterAnchor_multiplier_, v35, 1.0);
  *(_QWORD *)(v21 + 48) = v36;
  v37 = objc_msgSend(v68, sel_heightAnchor);
  v38 = sub_1DC290788();
  v39 = objc_msgSend(v38, sel_heightAnchor);

  v40 = objc_msgSend(v37, sel_constraintEqualToAnchor_, v39);
  *(_QWORD *)(v21 + 56) = v40;
  v41 = objc_msgSend(v68, sel_widthAnchor);
  v42 = objc_msgSend(v17, (SEL)&selRef_isPressRelease + 1);
  v43 = objc_msgSend(v41, sel_constraintEqualToAnchor_, v42);

  *(_QWORD *)(v21 + 64) = v43;
  v44 = objc_msgSend(v5, sel_topAnchor);
  v45 = objc_msgSend(v17, sel_bottomAnchor);
  v46 = objc_msgSend(v44, sel_constraintEqualToAnchor_constant_, v45, 20.0);

  *(_QWORD *)(v21 + 72) = v46;
  v47 = objc_msgSend(v5, sel_leadingAnchor);
  v48 = objc_msgSend(v1, sel_view);
  if (!v48)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v49 = v48;
  v50 = objc_msgSend(v48, sel_leadingAnchor);

  v51 = objc_msgSend(v47, sel_constraintGreaterThanOrEqualToSystemSpacingAfterAnchor_multiplier_, v50, 1.0);
  *(_QWORD *)(v21 + 80) = v51;
  v52 = objc_msgSend(v1, sel_view);
  if (!v52)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v53 = v52;
  v54 = objc_msgSend(v52, sel_trailingAnchor);

  v55 = objc_msgSend(v5, sel_trailingAnchor);
  v56 = objc_msgSend(v54, sel_constraintEqualToSystemSpacingAfterAnchor_multiplier_, v55, 1.0);

  *(_QWORD *)(v21 + 88) = v56;
  v57 = objc_msgSend(v1, sel_view);
  if (!v57)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v58 = v57;
  v59 = objc_msgSend(v57, sel_bottomAnchor);

  v60 = objc_msgSend(v5, sel_bottomAnchor);
  v61 = objc_msgSend(v59, sel_constraintEqualToSystemSpacingBelowAnchor_multiplier_, v60, 1.0);

  *(_QWORD *)(v21 + 96) = v61;
  v62 = objc_msgSend(v1, sel_view);
  if (v62)
  {
    v63 = v62;
    v64 = (void *)objc_opt_self();
    v65 = objc_msgSend(v63, (SEL)&selRef_isPressRelease + 1);

    v66 = objc_msgSend(v65, sel_constraintEqualToConstant_, 330.0);
    *(_QWORD *)(v21 + 104) = v66;
    sub_1DC408CF8();
    sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3F8F0);
    v67 = (void *)sub_1DC408CC8();
    swift_bridgeObjectRelease();
    objc_msgSend(v64, sel_activateConstraints_, v67);

    return;
  }
LABEL_19:
  __break(1u);
}

uint64_t type metadata accessor for TextFieldAlertController()
{
  return objc_opt_self();
}

void sub_1DC2919A0()
{
  char *v0;
  char *v1;
  char *v2;
  char *v3;

  v1 = &v0[OBJC_IVAR____TtC8StocksUI24TextFieldAlertController_configureTextField];
  *(_QWORD *)v1 = 0;
  *((_QWORD *)v1 + 1) = 0;
  v2 = &v0[OBJC_IVAR____TtC8StocksUI24TextFieldAlertController_onSubmit];
  *(_QWORD *)v2 = 0;
  *((_QWORD *)v2 + 1) = 0;
  v3 = &v0[OBJC_IVAR____TtC8StocksUI24TextFieldAlertController_onCancel];
  *(_QWORD *)v3 = 0;
  *((_QWORD *)v3 + 1) = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8StocksUI24TextFieldAlertController____lazy_storage___titleLabel] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8StocksUI24TextFieldAlertController____lazy_storage___messageLabel] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8StocksUI24TextFieldAlertController____lazy_storage___textFieldLabel] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8StocksUI24TextFieldAlertController____lazy_storage___textField] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8StocksUI24TextFieldAlertController____lazy_storage___cancelButton] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8StocksUI24TextFieldAlertController____lazy_storage___submitButton] = 0;

  sub_1DC409838();
  __break(1u);
}

uint64_t sub_1DC291A74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;

  sub_1DC0821D4(0, &qword_1EDB42CF0);
  sub_1DC408A4C();
  v0 = sub_1DC408F8C();
  sub_1DC0E7820();
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1DC40FA60;
  *(_QWORD *)(v1 + 32) = v0;
  v3 = v1;
  sub_1DC408CF8();
  return v3;
}

unint64_t sub_1DC291B40()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1F03507A8;
  if (!qword_1F03507A8)
  {
    type metadata accessor for UILayoutPriority(255);
    result = MEMORY[0x1DF0CAB8C](MEMORY[0x1E0DC2B88], v1);
    atomic_store(result, (unint64_t *)&qword_1F03507A8);
  }
  return result;
}

uint64_t sub_1DC291B88()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1DC291BAC(uint64_t a1)
{
  uint64_t v1;

  sub_1DC290A84(a1, v1);
}

void sub_1DC291BB4(uint64_t a1)
{
  uint64_t v1;

  sub_1DC2909E8(a1, v1);
}

uint64_t sub_1DC291BC4(void **a1)
{
  void *v1;
  void *v2;
  id v3;
  void *v4;
  uint64_t v5;

  v1 = *a1;
  sub_1DC402E0C();
  v2 = (void *)sub_1DC402C80();
  type metadata accessor for ForYouFeedContentConfig();
  sub_1DC402D04();
  swift_release();

  *(_QWORD *)(swift_allocObject() + 16) = v1;
  v3 = v1;
  v4 = (void *)sub_1DC402C80();
  sub_1DC29262C();
  v5 = sub_1DC402D04();
  swift_release();
  swift_release();

  return v5;
}

uint64_t sub_1DC291CB0(void **a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  id v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v41;
  id v42;
  char *v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;

  v4 = sub_1DC40124C();
  v49 = *(_QWORD *)(v4 - 8);
  v50 = v4;
  MEMORY[0x1E0C80A78](v4);
  v53 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1DC407714();
  v51 = *(_QWORD *)(v6 - 8);
  v52 = v6;
  MEMORY[0x1E0C80A78](v6);
  v44 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1DC40070C();
  v46 = *(_QWORD *)(v8 - 8);
  v47 = v8;
  MEMORY[0x1E0C80A78](v8);
  v43 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (int *)type metadata accessor for ForYouFeedServiceConfig();
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v48 = (uint64_t)&v41 - v14;
  sub_1DC29262C();
  v16 = v15;
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for ForYouFeedContentConfig();
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v41 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)&v41 - v23;
  v25 = *(int *)(v16 + 48);
  v26 = (uint64_t)&v18[v25];
  v27 = (uint64_t)a1 + v25;
  v28 = *a1;
  sub_1DC11D89C(v27, (uint64_t)&v18[v25]);
  v45 = v24;
  sub_1DC092ED0(v26, (uint64_t)v24, (uint64_t (*)(_QWORD))type metadata accessor for ForYouFeedContentConfig);
  v29 = (uint64_t)v21;
  v41 = v21;
  sub_1DC11D89C((uint64_t)v24, (uint64_t)v21);
  __swift_project_boxed_opaque_existential_1(a2 + 7, a2[10]);
  v30 = v28;
  v42 = v30;
  v31 = v43;
  sub_1DC400DCC();
  v32 = v44;
  (*(void (**)(char *, _QWORD, uint64_t))(v51 + 104))(v44, *MEMORY[0x1E0D5B2F0], v52);
  __swift_project_boxed_opaque_existential_1(a2 + 19, a2[22]);
  sub_1DC400A60();
  sub_1DC11D89C(v29, (uint64_t)v12);
  *(_QWORD *)&v12[v10[6]] = v30;
  v34 = v46;
  v33 = v47;
  (*(void (**)(char *, char *, uint64_t))(v46 + 16))(&v12[v10[7]], v31, v47);
  v36 = v51;
  v35 = v52;
  (*(void (**)(char *, char *, uint64_t))(v51 + 16))(&v12[v10[8]], v32, v52);
  sub_1DC4006AC();
  v38 = v37;
  (*(void (**)(char *, uint64_t))(v36 + 8))(v32, v35);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v31, v33);
  sub_1DC11D860((uint64_t)v41);
  *(_QWORD *)&v12[v10[9]] = v38;
  (*(void (**)(char *, char *, uint64_t))(v49 + 32))(&v12[v10[10]], v53, v50);
  sub_1DC092ED0((uint64_t)v12, v48, (uint64_t (*)(_QWORD))type metadata accessor for ForYouFeedServiceConfig);
  sub_1DC089DA4(0, &qword_1EDB296B8, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedServiceConfig, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  v39 = sub_1DC402D58();

  sub_1DC11D860((uint64_t)v45);
  return v39;
}

uint64_t sub_1DC292068(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v13;

  sub_1DC089DA4(0, (unint64_t *)&unk_1EDB28A70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v13 - v3;
  v5 = sub_1DC3FFDD0();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EDB28F68 != -1)
    swift_once();
  if ((sub_1DC401300() & 1) != 0)
  {
    if (qword_1F034B050 != -1)
      swift_once();
    sub_1DC081B48(&qword_1F03507B8, v9, (uint64_t (*)(uint64_t))type metadata accessor for NFFForYouFeedServiceConfigFetcher, (uint64_t)&unk_1DC420574);
    sub_1DC4012D0();
    sub_1DC3FFDC4();
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
    {
      sub_1DC212C0C((uint64_t)v4);
      sub_1DC29274C();
      swift_allocError();
      *v10 = 1;
      sub_1DC292790();
      swift_allocObject();
      return sub_1DC402D4C();
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
      v11 = sub_1DC2927E4((uint64_t)v8);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
    return v11;
  }
  else
  {
    __swift_project_boxed_opaque_existential_1((_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 40));
    return sub_1DC400DF0();
  }
}

void sub_1DC2922B4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;

  sub_1DC407570();
  swift_allocObject();
  sub_1DC407564();
  type metadata accessor for ForYouFeedContentConfig();
  sub_1DC081B48(&qword_1EDB34728, 255, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedContentConfig, (uint64_t)&unk_1DC420E30);
  sub_1DC402458();
  swift_release();
  if (v0)
  {
    sub_1DC408FC8();
    sub_1DC0E7FF0();
    v1 = swift_allocObject();
    *(_OWORD *)(v1 + 16) = xmmword_1DC40DC10;
    sub_1DC0A3390(0, (unint64_t *)&qword_1EDB400E0);
    sub_1DC409808();
    *(_QWORD *)(v1 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v1 + 64) = sub_1DC0E7FAC();
    *(_QWORD *)(v1 + 32) = 0;
    *(_QWORD *)(v1 + 40) = 0xE000000000000000;
    sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FC00);
    v2 = (void *)sub_1DC409580();
    sub_1DC403F28();
    swift_bridgeObjectRelease();

    swift_willThrow();
  }
  else
  {
    sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FC00);
    v3 = (void *)sub_1DC409580();
    sub_1DC408FE0();
    sub_1DC403F28();

  }
}

uint64_t sub_1DC2924BC()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 112);
  __swift_destroy_boxed_opaque_existential_1(v0 + 152);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for NFFForYouFeedServiceConfigFetcher()
{
  return objc_opt_self();
}

uint64_t sub_1DC292520()
{
  void *v0;
  void *v1;
  uint64_t v2;

  sub_1DC0821D4(0, (unint64_t *)&qword_1EDB284C8);
  sub_1DC402E0C();
  v0 = (void *)sub_1DC402C80();
  sub_1DC29262C();
  sub_1DC402D10();
  swift_release();

  v1 = (void *)sub_1DC402C80();
  type metadata accessor for ForYouFeedServiceConfig();
  v2 = sub_1DC402D10();
  swift_release();

  return v2;
}

uint64_t sub_1DC292608()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1DC29262C()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EDB3FA48)
  {
    sub_1DC0821D4(255, (unint64_t *)&qword_1EDB284C8);
    type metadata accessor for ForYouFeedContentConfig();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EDB3FA48);
  }
}

uint64_t sub_1DC2926A8(void **a1, _QWORD *a2)
{
  return sub_1DC291CB0(a1, a2);
}

uint64_t sub_1DC2926BC()
{
  uint64_t v0;

  return sub_1DC292068(v0);
}

uint64_t sub_1DC2926D4()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_1DC2926F8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  void *v5;
  uint64_t v6;
  uint64_t v7;

  v5 = *(void **)(v2 + 16);
  sub_1DC29262C();
  v7 = (uint64_t)a2 + *(int *)(v6 + 48);
  *a2 = v5;
  sub_1DC11D89C(a1, v7);
  return v5;
}

unint64_t sub_1DC29274C()
{
  unint64_t result;

  result = qword_1F03507C0;
  if (!qword_1F03507C0)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC4206C4, &type metadata for NFFForYouFeedServiceConfigFetcher.Errors);
    atomic_store(result, (unint64_t *)&qword_1F03507C0);
  }
  return result;
}

void sub_1DC292790()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F03507C8)
  {
    v0 = sub_1DC402DAC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1F03507C8);
  }
}

uint64_t sub_1DC2927E4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;

  v2 = sub_1DC3FFDD0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_1DC3FFA10();
  v6 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EDB2D2E8 != -1)
    swift_once();
  v9 = (void *)qword_1EDB2D2E0;
  sub_1DC0E7FF0();
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1DC40DC10;
  v11 = v9;
  v12 = sub_1DC3FFD7C();
  v14 = v13;
  *(_QWORD *)(v10 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v10 + 64) = sub_1DC0E7FAC();
  *(_QWORD *)(v10 + 32) = v12;
  *(_QWORD *)(v10 + 40) = v14;
  sub_1DC408FE0();
  sub_1DC403F28();

  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  sub_1DC3FFA04();
  v15 = objc_msgSend((id)objc_opt_self(), sel_sharedSession);
  v16 = sub_1DC402C68();

  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v19);
  return v16;
}

uint64_t storeEnumTagSinglePayload for NFFForYouFeedServiceConfigFetcher.Errors(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1DC292A10 + 4 * byte_1DC4204C5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1DC292A44 + 4 * asc_1DC4204C0[v4]))();
}

uint64_t sub_1DC292A44(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC292A4C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC292A54);
  return result;
}

uint64_t sub_1DC292A60(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC292A68);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1DC292A6C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC292A74(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NFFForYouFeedServiceConfigFetcher.Errors()
{
  return &type metadata for NFFForYouFeedServiceConfigFetcher.Errors;
}

unint64_t sub_1DC292A94()
{
  unint64_t result;

  result = qword_1F03507D0;
  if (!qword_1F03507D0)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC42069C, &type metadata for NFFForYouFeedServiceConfigFetcher.Errors);
    atomic_store(result, (unint64_t *)&qword_1F03507D0);
  }
  return result;
}

uint64_t sub_1DC292AD8(void *a1)
{
  uint64_t v1;
  id v3;
  id v4;
  void *v5;
  id v6;
  id v7;

  swift_getObjectType();
  v3 = objc_msgSend(a1, sel_identifier);
  sub_1DC408A4C();

  v4 = objc_msgSend(a1, sel_language);
  if (v4)
  {
    v5 = v4;
    sub_1DC408A4C();

  }
  v6 = objc_msgSend(*(id *)(v1 + 16), sel_cachedSubscription);
  v7 = objc_msgSend(a1, sel_identifier);
  if (!v7)
  {
    sub_1DC408A4C();
    v7 = (id)sub_1DC408A1C();
    swift_bridgeObjectRelease();
  }
  objc_msgSend(v6, sel_containsTagID_, v7);

  sub_1DC409178();
  return sub_1DC402FA4();
}

uint64_t sub_1DC292C20()
{
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

void sub_1DC292C44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  id v4;
  void *v5;
  void *v6;
  uint64_t v7;

  v0 = sub_1DC400118();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3578]), sel_init);
  sub_1DC4000DC();
  v5 = (void *)sub_1DC4000AC();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  objc_msgSend(v4, sel_setLocale_, v5);

  v6 = (void *)sub_1DC408A1C();
  objc_msgSend(v4, sel_setLocalizedDateFormatFromTemplate_, v6);

  qword_1EDB3AF48 = (uint64_t)v4;
}

uint64_t sub_1DC292D2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  void (*v16)(void *, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  void *v33;
  void *v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unsigned __int8 *v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  uint64_t v51;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  uint64_t v65[6];

  v4 = v3;
  v8 = sub_1DC3FFBE4();
  v56 = *(_QWORD *)(v8 - 8);
  v57 = v8;
  MEMORY[0x1E0C80A78](v8);
  v55 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1DC3FFFEC();
  v53 = *(_QWORD *)(v10 - 8);
  v54 = v10;
  MEMORY[0x1E0C80A78](v10);
  v58 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = v4[5];
  v13 = v4[6];
  __swift_project_boxed_opaque_existential_1(v4 + 2, v12);
  v51 = a3;
  v14 = (void *)sub_1DC4087F4();
  v15 = *(_QWORD *)(v13 + 8);
  v16 = *(void (**)(void *, uint64_t, uint64_t))(v15 + 8);
  v65[3] = v12;
  v65[4] = v13;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v65);
  v16(v14, v12, v15);

  v64 = 0;
  v60 = &v64;
  if ((a2 & 0x1000000000000000) != 0 || !(a2 & 0x2000000000000000 | a1 & 0x1000000000000000))
  {
    swift_bridgeObjectRetain();
    sub_1DC409724();
    swift_bridgeObjectRelease();
    if ((v63 & 1) == 0)
      goto LABEL_12;
  }
  else
  {
    MEMORY[0x1E0C80A78](v17);
    *(&v49 - 2) = (uint64_t)sub_1DC29396C;
    *(&v49 - 1) = (uint64_t)&v59;
    if ((a2 & 0x2000000000000000) == 0)
    {
      if ((a1 & 0x1000000000000000) != 0)
      {
        v18 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
        v19 = a1 & 0xFFFFFFFFFFFFLL;
      }
      else
      {
        v18 = sub_1DC409778();
        v19 = v48;
      }
      swift_bridgeObjectRetain();
      v20 = sub_1DC28E48C(v18, v19, (void (*)(uint64_t *__return_ptr))sub_1DC2939D8);
      swift_bridgeObjectRelease();
      if ((v20 & 1) != 0)
        goto LABEL_7;
LABEL_12:
      v44 = 0;
      goto LABEL_13;
    }
    v61 = a1;
    v62 = a2 & 0xFFFFFFFFFFFFFFLL;
    if (a1 <= 0x20u && ((1 << a1) & 0x100003E01) != 0)
    {
      swift_bridgeObjectRetain();
LABEL_11:
      swift_bridgeObjectRelease();
      goto LABEL_12;
    }
    swift_bridgeObjectRetain();
    v46 = (unsigned __int8 *)_swift_stdlib_strtod_clocale();
    if (!v46)
      goto LABEL_11;
    v47 = *v46;
    swift_bridgeObjectRelease();
    if (v47)
      goto LABEL_12;
  }
LABEL_7:
  sub_1DC3FFF8C();
  sub_1DC293984();
  v21 = sub_1DC4001B4();
  v22 = *(_QWORD *)(v21 - 8);
  v23 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_1DC40DC10;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v22 + 104))(v24 + v23, *MEMORY[0x1E0CB1160], v21);
  sub_1DC367EA4(v24);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v25 = v55;
  sub_1DC400148();
  swift_bridgeObjectRelease();
  v26 = sub_1DC2931EC(0, (uint64_t)v4);
  sub_1DC293588(v26, v27, (uint64_t)v4);
  v29 = v28;
  v50 = v28;
  swift_bridgeObjectRelease();
  v30 = sub_1DC2931EC(1, (uint64_t)v4);
  sub_1DC293588(v30, v31, (uint64_t)v4);
  v33 = v32;
  swift_bridgeObjectRelease();
  v34 = (void *)sub_1DC3FFF50();
  v35 = objc_msgSend(v29, sel_stringFromDate_, v34);

  v36 = sub_1DC408A4C();
  v38 = v37;

  v39 = (void *)sub_1DC3FFF50();
  v40 = objc_msgSend(v33, sel_stringFromDate_, v39);

  v41 = sub_1DC408A4C();
  v43 = v42;

  v44 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 144))(v36, v38, v41, v43, v12, v13);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  (*(void (**)(char *, uint64_t))(v56 + 8))(v25, v57);
  (*(void (**)(char *, uint64_t))(v53 + 8))(v58, v54);
LABEL_13:
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v65);
  return v44;
}

uint64_t sub_1DC2931EC(char a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v25;
  char v26;
  uint64_t v27;
  char v28;
  void *v29;
  uint64_t result;
  _QWORD v31[4];

  sub_1DC2939F0();
  v5 = v4;
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a2 + OBJC_IVAR____TtC8StocksUI32StockChartCategoryLabelFormatter_chartRange;
  v9 = (void *)sub_1DC4087F4();
  v10 = objc_msgSend(v9, sel_horizontalSizeClass);

  v11 = *(int *)(v5 + 48);
  v12 = sub_1DC4002BC();
  v13 = *(_QWORD *)(v12 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v7, v8, v12);
  *(_QWORD *)&v7[v11] = v10;
  LODWORD(v14) = (*(uint64_t (**)(char *, uint64_t))(v13 + 88))(v7, v12);
  if ((_DWORD)v14 == *MEMORY[0x1E0DAE0B0])
  {
    if (qword_1EDB3AF58 != -1)
      swift_once();
    v15 = (id)qword_1EDB3AF48;
    v16 = objc_msgSend(v15, sel_dateFormat);
    if (v16)
    {
      v17 = v16;
      v18 = sub_1DC408A4C();
      v20 = v19;

      v31[2] = v18;
      v31[3] = v20;
      v31[0] = 97;
      v31[1] = 0xE100000000000000;
      sub_1DC1790B0();
      LOBYTE(v18) = sub_1DC40961C();

      swift_bridgeObjectRelease();
      if ((v18 & 1) != 0)
        return 104;
      else
        return 72;
    }
    else
    {

      return 72;
    }
  }
  if ((_DWORD)v14 == *MEMORY[0x1E0DAE0B8] || (_DWORD)v14 == *MEMORY[0x1E0DAE0C8])
    return 100;
  if ((_DWORD)v14 == *MEMORY[0x1E0DAE0A0] || (_DWORD)v14 == *MEMORY[0x1E0DAE0F0] || (_DWORD)v14 == *MEMORY[0x1E0DAE090])
    goto LABEL_22;
  if ((_DWORD)v14 != *MEMORY[0x1E0DAE0C0] && (_DWORD)v14 != *MEMORY[0x1E0DAE0E0])
    goto LABEL_37;
  if (v10 == (id)1)
  {
    v25 = sub_1DC3FFBC0();
    if ((v26 & 1) == 0 && v25 == 1)
    {
      v14 = objc_msgSend((id)objc_opt_self(), sel_su_localizedYearFormat);
      if (v14)
      {
LABEL_41:
        v29 = v14;
        v21 = sub_1DC408A4C();

        return v21;
      }
      __break(1u);
      goto LABEL_33;
    }
LABEL_22:
    if ((a1 & 1) != 0)
      return 1280068684;
    else
      return 5000268;
  }
LABEL_33:
  v21 = 1280068684;
  v27 = sub_1DC3FFBC0();
  if ((v28 & 1) != 0 || v27 != 1)
    return v21;
  v14 = objc_msgSend((id)objc_opt_self(), sel_su_localizedYearFormat);
  if (v14)
    goto LABEL_41;
  __break(1u);
LABEL_37:
  if ((_DWORD)v14 == *MEMORY[0x1E0DAE0E8] || (_DWORD)v14 == *MEMORY[0x1E0DAE0D8] || (_DWORD)v14 == *MEMORY[0x1E0DAE0A8])
  {
    v14 = objc_msgSend((id)objc_opt_self(), sel_su_localizedYearFormat);
    if (v14)
      goto LABEL_41;
    __break(1u);
  }
  result = sub_1DC4099DC();
  __break(1u);
  return result;
}

void sub_1DC293588(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t *v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  void *v14;
  id v15;
  void *v16;
  void *v17;
  id v18;
  id v19;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v21;

  v6 = sub_1DC400118();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (uint64_t *)(a3 + OBJC_IVAR____TtC8StocksUI32StockChartCategoryLabelFormatter_dateFormatters);
  swift_beginAccess();
  v11 = *v10;
  if (*(_QWORD *)(*v10 + 16))
  {
    swift_bridgeObjectRetain();
    v12 = sub_1DC0ED368(a1, a2);
    if ((v13 & 1) != 0)
    {
      v14 = *(void **)(*(_QWORD *)(v11 + 56) + 8 * v12);
      swift_endAccess();
      v14;
      swift_bridgeObjectRelease();
      return;
    }
    swift_bridgeObjectRelease();
  }
  swift_endAccess();
  sub_1DC4000DC();
  sub_1DC40004C();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v15 = objc_allocWithZone(MEMORY[0x1E0CB3578]);
  swift_bridgeObjectRetain();
  v16 = (void *)sub_1DC408A1C();
  swift_bridgeObjectRelease();
  v17 = (void *)sub_1DC408A1C();
  swift_bridgeObjectRelease();
  v18 = objc_msgSend(v15, sel_initWithFormat_localeIdentifier_, v16, v17);

  if (v18)
  {
    swift_beginAccess();
    swift_bridgeObjectRetain();
    v19 = v18;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v21 = *v10;
    *v10 = 0x8000000000000000;
    sub_1DC35A8C8((uint64_t)v19, a1, a2, isUniquelyReferenced_nonNull_native);
    *v10 = v21;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1DC293798()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  v1 = v0 + OBJC_IVAR____TtC8StocksUI32StockChartCategoryLabelFormatter_chart;
  v2 = sub_1DC400F7C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtC8StocksUI32StockChartCategoryLabelFormatter_chartRange;
  v4 = sub_1DC4002BC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  v5 = v0 + OBJC_IVAR____TtC8StocksUI32StockChartCategoryLabelFormatter_calendar;
  v6 = sub_1DC4001CC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1DC293850()
{
  return type metadata accessor for StockChartCategoryLabelFormatter();
}

uint64_t type metadata accessor for StockChartCategoryLabelFormatter()
{
  uint64_t result;

  result = qword_1EDB3AF88;
  if (!qword_1EDB3AF88)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1DC293894()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  result = sub_1DC400F7C();
  if (v1 <= 0x3F)
  {
    result = sub_1DC4002BC();
    if (v2 <= 0x3F)
    {
      result = sub_1DC4001CC();
      if (v3 <= 0x3F)
        return swift_updateClassMetadata2();
    }
  }
  return result;
}

uint64_t sub_1DC29394C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DC292D2C(a1, a2, a3);
}

_BYTE *sub_1DC29396C@<X0>(_BYTE *a1@<X0>, BOOL *a2@<X8>)
{
  return sub_1DC28E424(a1, a2);
}

void sub_1DC293984()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB3FDF0)
  {
    sub_1DC4001B4();
    v0 = sub_1DC4099C4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB3FDF0);
  }
}

_QWORD *sub_1DC2939D8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;

  return sub_1DC28E4E0(*(_QWORD *(**)(uint64_t *__return_ptr))(v1 + 16), a1);
}

void sub_1DC2939F0()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EDB27468)
  {
    sub_1DC4002BC();
    type metadata accessor for UIUserInterfaceSizeClass(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EDB27468);
  }
}

void sub_1DC293A5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_1DC293EEC(a5);
}

BOOL sub_1DC293A80()
{
  return sub_1DC293AC8();
}

uint64_t sub_1DC293AA4()
{
  return sub_1DC293EB0(&qword_1EDB37530, (uint64_t)&unk_1DC42089C);
}

BOOL sub_1DC293AC8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  unint64_t *v16;
  void (*v17)(char *, uint64_t);
  char v18;
  char *v19;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v24 = *v0;
  v25 = sub_1DC3FFFEC();
  v1 = *(_QWORD *)(v25 - 8);
  MEMORY[0x1E0C80A78](v25);
  v3 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v21 - v5;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v21 - v8;
  v10 = sub_1DC40070C();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EDB28F18 != -1)
    swift_once();
  if ((sub_1DC401300() & 1) != 0)
  {
    if (qword_1F034B000 != -1)
      swift_once();
    sub_1DC293EB0(&qword_1EDB37530, (uint64_t)&unk_1DC42089C);
    sub_1DC4012D0();
    if (qword_1F034AFF8 != -1)
      swift_once();
    sub_1DC4012D0();
    v14 = v26;
  }
  else
  {
    v22 = v1;
    v23 = v9;
    v15 = (char *)(v0 + 2);
    __swift_project_boxed_opaque_existential_1(v0 + 2, v0[5]);
    sub_1DC400DCC();
    sub_1DC40061C();
    v16 = *(unint64_t **)(v11 + 8);
    ((void (*)(char *, uint64_t))v16)(v13, v10);
    v17 = (void (*)(char *, uint64_t))v0[5];
    __swift_project_boxed_opaque_existential_1(v0 + 2, (uint64_t)v17);
    sub_1DC400DCC();
    v14 = sub_1DC4005F8();
    ((void (*)(char *, uint64_t))v16)(v13, v10);
    if (v14 < 0)
    {
      __break(1u);
      goto LABEL_20;
    }
    v9 = v23;
    v1 = v22;
  }
  v24 = v14;
  if (qword_1EDB28EB8 != -1)
    swift_once();
  sub_1DC293EB0(&qword_1EDB37530, (uint64_t)&unk_1DC42089C);
  sub_1DC4012D0();
  v15 = v9;
  sub_1DC3FFF44();
  sub_1DC3FFFBC();
  v18 = sub_1DC3FFF68();
  v17 = *(void (**)(char *, uint64_t))(v1 + 8);
  v19 = v3;
  v3 = (char *)v25;
  v17(v19, v25);
  v17(v6, (uint64_t)v3);
  v16 = &qword_1EDB28000;
  if ((v18 & 1) != 0)
  {
    if (qword_1EDB28ED0 == -1)
    {
LABEL_15:
      v26 = 0;
      sub_1DC293EB0(&qword_1EDB37538, (uint64_t)&unk_1DC4208DC);
      sub_1DC4013B4();
      goto LABEL_16;
    }
LABEL_20:
    swift_once();
    goto LABEL_15;
  }
LABEL_16:
  if (v16[474] != -1)
    swift_once();
  sub_1DC4012D0();
  v17(v15, (uint64_t)v3);
  return v26 < v24;
}

uint64_t sub_1DC293EB0(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for EarningsShownCommandHandler();
    result = MEMORY[0x1DF0CAB8C](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1DC293EEC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _OWORD v17[2];
  uint64_t v18;
  _OWORD v19[2];
  uint64_t v20;

  v2 = sub_1DC3FFFEC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC1EA918(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for StocksActivity(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (unint64_t *)((char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (a1)
  {
    v15 = v3;
    v16 = v2;
    *v11 = a1 | 0x8000000000000000;
    swift_storeEnumTagMultiPayload();
    swift_retain_n();
    swift_retain();
    sub_1DC405410();
    sub_1DC0A3390(0, (unint64_t *)&qword_1EDB29C40);
    sub_1DC4018AC();
    if (swift_dynamicCast())
      v12 = *(_QWORD *)&v17[0];
    else
      v12 = 0;
    v13 = sub_1DC403340();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v8, 1, 1, v13);
    v20 = 0;
    memset(v19, 0, sizeof(v19));
    v18 = 0;
    memset(v17, 0, sizeof(v17));
    sub_1DC22BAE0((uint64_t)v11, v12, (uint64_t)v8, (uint64_t)v19, 0, 0, (uint64_t)v17);
    swift_release();
    swift_release();
    sub_1DC17C7C8((uint64_t)v17, &qword_1EDB29410, (unint64_t *)&unk_1EDB29400);
    sub_1DC17C7C8((uint64_t)v19, &qword_1EDB2ACD0, (unint64_t *)&qword_1EDB2ACC0);
    sub_1DC0926D8((uint64_t)v8, (uint64_t (*)(_QWORD))sub_1DC1EA918);
    sub_1DC0926D8((uint64_t)v11, type metadata accessor for StocksActivity);
    swift_release();
    if (qword_1EDB28ED0 != -1)
      swift_once();
    sub_1DC293EB0(&qword_1EDB37530, (uint64_t)&unk_1DC42089C);
    sub_1DC4012D0();
    if (__OFADD__(*(_QWORD *)&v19[0], 1))
    {
      __break(1u);
    }
    else
    {
      ++*(_QWORD *)&v19[0];
      sub_1DC293EB0(&qword_1EDB37538, (uint64_t)&unk_1DC4208DC);
      sub_1DC4013B4();
      if (qword_1EDB28EB8 == -1)
      {
LABEL_9:
        sub_1DC3FFFBC();
        sub_1DC4013B4();
        swift_release();
        (*(void (**)(char *, uint64_t))(v15 + 8))(v5, v16);
        return;
      }
    }
    swift_once();
    goto LABEL_9;
  }
}

void sub_1DC294258(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  id v24;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  char *v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  int v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  unsigned __int8 v54;
  uint64_t v55;
  id v56;
  id v57;
  uint64_t v58;
  uint64_t v59;

  v53 = a1;
  v2 = sub_1DC4088B4();
  v50 = *(_QWORD *)(v2 - 8);
  v51 = v2;
  MEMORY[0x1E0C80A78](v2);
  v52 = (uint64_t *)((char *)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = sub_1DC408914();
  v44 = *(_QWORD *)(v4 - 8);
  v45 = v4;
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1DC408530();
  v42 = *(_QWORD *)(v7 - 8);
  v43 = v7;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1DC408908();
  MEMORY[0x1E0C80A78](v10);
  v48 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0EBA6C();
  v13 = MEMORY[0x1E0C80A78](v12);
  v49 = (char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v41 - v15;
  v17 = (_QWORD *)(v1 + OBJC_IVAR____TtC8StocksUI24StockSparklineViewStyler_baseStyler);
  v18 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8StocksUI24StockSparklineViewStyler_baseStyler + 24);
  v19 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8StocksUI24StockSparklineViewStyler_baseStyler + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + OBJC_IVAR____TtC8StocksUI24StockSparklineViewStyler_baseStyler), v18);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v19 + 72))(&v55, v18, v19);
  v20 = v58;
  v21 = v59;
  __swift_project_boxed_opaque_existential_1(&v55, v58);
  (*(void (**)(unsigned __int8 *__return_ptr, uint64_t, uint64_t))(v21 + 32))(&v54, v20, v21);
  LODWORD(v21) = v54;
  v22 = (void *)objc_opt_self();
  v23 = objc_msgSend(v22, sel_currentTraitCollection);
  v24 = objc_msgSend(v23, sel_userInterfaceStyle);

  v25 = objc_msgSend(v22, sel_currentTraitCollection);
  v26 = objc_msgSend(v25, sel_accessibilityContrast);

  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v55);
  LOBYTE(v55) = 2;
  v47 = v21;
  BYTE1(v55) = v21;
  v46 = v24;
  v56 = v24;
  v57 = v26;
  sub_1DC402C38();
  v27 = sub_1DC40862C();
  v28 = *(_QWORD *)(v27 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v16, 1, v27) == 1)
  {
    sub_1DC108604((uint64_t)v16);
    v41 = v26;
    v30 = v17[3];
    v29 = v17[4];
    __swift_project_boxed_opaque_existential_1(v17, v30);
    v31 = (void *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)(v29 + 16) + 424))(v30);
    v32 = v17[3];
    v33 = v17[4];
    __swift_project_boxed_opaque_existential_1(v17, v32);
    v34 = (void *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)(v33 + 16) + 424))(v32);
    (*(void (**)(char *, _QWORD, uint64_t))(v42 + 104))(v9, *MEMORY[0x1E0DB23E8], v43);
    (*(void (**)(char *, _QWORD, uint64_t))(v44 + 104))(v6, *MEMORY[0x1E0DB2878], v45);
    v35 = v34;
    sub_1DC4088FC();
    sub_1DC0E7820();
    v36 = swift_allocObject();
    *(_OWORD *)(v36 + 16) = xmmword_1DC40FA50;
    *(_QWORD *)(v36 + 32) = objc_msgSend(v31, sel_colorWithAlphaComponent_, 0.5);
    *(_QWORD *)(v36 + 40) = objc_msgSend(v31, sel_colorWithAlphaComponent_, 0.0);
    v55 = v36;
    sub_1DC408CF8();
    v37 = v51;
    v38 = v52;
    *v52 = v55;
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(v50 + 104))(v38, *MEMORY[0x1E0DB2820], v37);
    sub_1DC408944();
    swift_allocObject();
    sub_1DC408938();
    v39 = v53;
    sub_1DC408620();
    v40 = v49;
    (*(void (**)(char *, uint64_t, uint64_t))(v28 + 16))(v49, v39, v27);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v40, 0, 1, v27);
    LOBYTE(v55) = 2;
    BYTE1(v55) = v47;
    v56 = v46;
    v57 = v41;
    sub_1DC402C44();

  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v28 + 32))(v53, v16, v27);
  }
}

uint64_t sub_1DC294708()
{
  uint64_t v0;
  id v1;
  id v2;
  void *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v1 = objc_msgSend((id)objc_opt_self(), sel_currentDevice);
  v2 = objc_msgSend(v1, sel_userInterfaceIdiom);

  v3 = *(void **)(v0 + OBJC_IVAR____TtC8StocksUI24StockSparklineViewStyler_currentTraitCollection);
  if (v3)
  {
    if (!v2 || objc_msgSend(v3, sel_userInterfaceStyle) == (id)2)
      goto LABEL_4;
  }
  else if (!v2)
  {
LABEL_4:
    v4 = (_QWORD *)(v0 + OBJC_IVAR____TtC8StocksUI24StockSparklineViewStyler_baseStyler);
    v5 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8StocksUI24StockSparklineViewStyler_baseStyler + 24);
    v6 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8StocksUI24StockSparklineViewStyler_baseStyler + 32);
    __swift_project_boxed_opaque_existential_1(v4, v5);
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v6 + 16) + 232))(v5);
  }
  v8 = (_QWORD *)(v0 + OBJC_IVAR____TtC8StocksUI24StockSparklineViewStyler_baseStyler);
  v9 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8StocksUI24StockSparklineViewStyler_baseStyler + 24);
  v10 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8StocksUI24StockSparklineViewStyler_baseStyler + 32);
  __swift_project_boxed_opaque_existential_1(v8, v9);
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v10 + 16) + 216))(v9);
}

uint64_t sub_1DC2947DC()
{
  uint64_t v0;
  id v1;
  id v2;
  void *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v1 = objc_msgSend((id)objc_opt_self(), sel_currentDevice);
  v2 = objc_msgSend(v1, sel_userInterfaceIdiom);

  v3 = *(void **)(v0 + OBJC_IVAR____TtC8StocksUI24StockSparklineViewStyler_currentTraitCollection);
  if (v3)
  {
    if (!v2 || objc_msgSend(v3, sel_userInterfaceStyle) == (id)2)
      goto LABEL_4;
  }
  else if (!v2)
  {
LABEL_4:
    v4 = (_QWORD *)(v0 + OBJC_IVAR____TtC8StocksUI24StockSparklineViewStyler_baseStyler);
    v5 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8StocksUI24StockSparklineViewStyler_baseStyler + 24);
    v6 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8StocksUI24StockSparklineViewStyler_baseStyler + 32);
    __swift_project_boxed_opaque_existential_1(v4, v5);
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v6 + 16) + 224))(v5);
  }
  v8 = (_QWORD *)(v0 + OBJC_IVAR____TtC8StocksUI24StockSparklineViewStyler_baseStyler);
  v9 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8StocksUI24StockSparklineViewStyler_baseStyler + 24);
  v10 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8StocksUI24StockSparklineViewStyler_baseStyler + 32);
  __swift_project_boxed_opaque_existential_1(v8, v9);
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v10 + 16) + 208))(v9);
}

uint64_t sub_1DC2948B0()
{
  return type metadata accessor for StockSparklineViewStyler();
}

uint64_t getEnumTagSinglePayload for StockSparklineStyleCacheKey(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 24))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 1);
  v4 = v3 >= 2;
  v5 = v3 - 2;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for StockSparklineStyleCacheKey(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 24) = 0;
    if (a2)
      *(_BYTE *)(result + 1) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for StockSparklineStyleCacheKey()
{
  return &type metadata for StockSparklineStyleCacheKey;
}

uint64_t sub_1DC294950(char a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  char v7;

  if ((a1 & 1) != 0)
  {
    v3 = *(_QWORD *)(a2 + OBJC_IVAR____TtC8StocksUI24StockSparklineViewStyler_baseStyler + 24);
    v4 = *(_QWORD *)(a2 + OBJC_IVAR____TtC8StocksUI24StockSparklineViewStyler_baseStyler + 32);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(a2 + OBJC_IVAR____TtC8StocksUI24StockSparklineViewStyler_baseStyler), v3);
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v4 + 16) + 424))(v3);
  }
  v7 = sub_1DC400028();
  if ((a3 & 1) != 0)
  {
    if ((v7 & 1) == 0)
      return sub_1DC294708();
  }
  else if ((v7 & 1) != 0)
  {
    return sub_1DC294708();
  }
  return sub_1DC2947DC();
}

uint64_t sub_1DC2949DC()
{
  sub_1DC409AC0();
  sub_1DC409ACC();
  sub_1DC409ACC();
  sub_1DC409ACC();
  sub_1DC409ACC();
  return sub_1DC409AF0();
}

uint64_t sub_1DC294A5C()
{
  sub_1DC409ACC();
  sub_1DC409ACC();
  sub_1DC409ACC();
  return sub_1DC409ACC();
}

uint64_t storeEnumTagSinglePayload for ValueChangeTrendLineType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1DC294B00 + 4 * byte_1DC420975[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1DC294B34 + 4 * byte_1DC420970[v4]))();
}

uint64_t sub_1DC294B34(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC294B3C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC294B44);
  return result;
}

uint64_t sub_1DC294B50(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC294B58);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1DC294B5C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC294B64(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ValueChangeTrendLineType()
{
  return &type metadata for ValueChangeTrendLineType;
}

unint64_t sub_1DC294B84()
{
  unint64_t result;

  result = qword_1F03507D8;
  if (!qword_1F03507D8)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC420AFC, &type metadata for ValueChangeTrendLineType);
    atomic_store(result, (unint64_t *)&qword_1F03507D8);
  }
  return result;
}

uint64_t sub_1DC294BC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t result;

  v3 = a3 + 16;
  swift_beginAccess();
  result = MEMORY[0x1DF0CAD78](v3);
  if (result)
  {
    swift_getObjectType();
    sub_1DC4069AC();
    sub_1DC407D50();
    sub_1DC404A44();
    swift_release();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1DC294C5C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  id v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  unsigned int *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  sub_1DC154164();
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC092F50(0, &qword_1F034C410, (void (*)(uint64_t))sub_1DC154088);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v21 - v7;
  v9 = *(void **)(v1 + 24);
  v10 = objc_msgSend((id)sub_1DC407D38(), sel_identifier);
  swift_unknownObjectRelease();
  if (!v10)
  {
    sub_1DC408A4C();
    v10 = (id)sub_1DC408A1C();
    swift_bridgeObjectRelease();
  }
  v11 = objc_msgSend(v9, sel_hasArticleCompletedListening_, v10);

  if (v11)
  {
    v12 = *MEMORY[0x1E0D5B7B8];
    v13 = sub_1DC4077E0();
    return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(a1, v12, v13);
  }
  else
  {
    sub_1DC401F84();
    sub_1DC402740();
    swift_release();
    sub_1DC338D70((uint64_t)v8);
    sub_1DC0926D8((uint64_t)v5, (uint64_t (*)(_QWORD))sub_1DC154164);
    sub_1DC154088();
    v16 = v15;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v8, 1, v15) == 1)
    {
      sub_1DC092F14((uint64_t)v8, &qword_1F034C410, (void (*)(uint64_t))sub_1DC154088);
      v17 = (unsigned int *)MEMORY[0x1E0D5B7B8];
    }
    else
    {
      v18 = *(_QWORD *)&v8[*(int *)(v16 + 48)];
      sub_1DC0926D8((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for StocksAudioTrack);
      *a1 = v18;
      v17 = (unsigned int *)MEMORY[0x1E0D5B7B0];
    }
    v19 = *v17;
    v20 = sub_1DC4077E0();
    return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(a1, v19, v20);
  }
}

uint64_t sub_1DC294E9C()
{
  uint64_t v0;

  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_1DC294EC8()
{
  return sub_1DC080808(&qword_1F03507E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5B7C0], MEMORY[0x1E0D5B7A0]);
}

uint64_t sub_1DC294EF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  sub_1DC092F50(0, &qword_1EDB42BB8, (void (*)(uint64_t))MEMORY[0x1E0D5D098]);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v11 - v6;
  swift_getObjectType();
  sub_1DC4069AC();
  v8 = sub_1DC407D50();
  v9 = *(_QWORD *)(v8 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v7, a4, v8);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v7, 0, 1, v8);
  sub_1DC404AD4();
  sub_1DC092F14((uint64_t)v7, &qword_1EDB42BB8, (void (*)(uint64_t))MEMORY[0x1E0D5D098]);
  return swift_release();
}

uint64_t sub_1DC295030@<X0>(_QWORD *a1@<X8>)
{
  return sub_1DC294C5C(a1);
}

uint64_t sub_1DC295050(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v14;
  uint64_t v15;

  v14 = a1;
  v1 = sub_1DC4031A8();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1DC40319C();
  v15 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1DC403244();
  v9 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD260];
  v10 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC401E88();
  sub_1DC403238();
  sub_1DC080808(&qword_1EDB297E0, v9, MEMORY[0x1E0DAD250]);
  sub_1DC4015C4();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v8);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E0DAD188], v1);
  sub_1DC403190();
  sub_1DC080808(&qword_1EDB297C8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD178], MEMORY[0x1E0DAD168]);
  sub_1DC4015C4();
  return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v7, v5);
}

uint64_t sub_1DC29523C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t (*v7)(uint64_t);
  void (*v8)(char *, uint64_t);
  uint64_t v10;

  v0 = sub_1DC3FFFEC();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v10 - v5;
  sub_1DC403940();
  v7 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DADC40];
  sub_1DC404678();
  sub_1DC080808((unint64_t *)&unk_1F0350890, v7, MEMORY[0x1E0DADC38]);
  sub_1DC401594();
  v8 = *(void (**)(char *, uint64_t))(v1 + 8);
  v8(v6, v0);
  sub_1DC404678();
  sub_1DC404684();
  sub_1DC3FFF44();
  v8(v3, v0);
  sub_1DC4015A0();
  return ((uint64_t (*)(char *, uint64_t))v8)(v6, v0);
}

uint64_t type metadata accessor for InterstitialAdTracker()
{
  return objc_opt_self();
}

uint64_t sub_1DC2953AC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = sub_1DC401E94();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x1E0C80A78](v3);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)v1 + 24), *(_QWORD *)(*(_QWORD *)v1 + 48));
  result = sub_1DC403838();
  if ((result & 1) != 0)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3);
    v7 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    v8 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v8 + v7, (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
    sub_1DC401828();
    return swift_release();
  }
  return result;
}

uint64_t sub_1DC2954B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v0 = sub_1DC404690();
  v1 = *(_QWORD *)(v0 - 8);
  v2 = *(_QWORD *)(v1 + 64);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v10 - v5;
  sub_1DC401E7C();
  (*(void (**)(char *, char *, uint64_t))(v1 + 16))(v3, v6, v0);
  v7 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v8 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v1 + 32))(v8 + v7, v3, v0);
  sub_1DC401828();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v6, v0);
}

uint64_t sub_1DC2955C8()
{
  return objectdestroyTm((uint64_t (*)(_QWORD))MEMORY[0x1E0DB7990]);
}

uint64_t sub_1DC2955D4(uint64_t a1)
{
  return sub_1DC295608(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0DB7990], (uint64_t (*)(uint64_t, uint64_t))sub_1DC29523C);
}

uint64_t sub_1DC2955E8()
{
  return objectdestroyTm((uint64_t (*)(_QWORD))MEMORY[0x1E0D575A0]);
}

uint64_t sub_1DC2955F4(uint64_t a1)
{
  return sub_1DC295608(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0D575A0], (uint64_t (*)(uint64_t, uint64_t))sub_1DC295050);
}

uint64_t sub_1DC295608(uint64_t a1, uint64_t (*a2)(_QWORD), uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v3;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(a2(0) - 8) + 80);
  return a3(a1, v3 + ((v5 + 16) & ~v5));
}

id sub_1DC295654(uint64_t a1, double *a2, char *a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v8;
  _QWORD *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  int *v15;
  uint64_t *v16;
  uint64_t v17;
  int v18;
  _QWORD *v19;
  char **v20;
  uint64_t ObjCClassFromMetadata;
  id v22;
  uint64_t inited;
  void *v24;
  uint64_t v25;
  void *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(uint64_t, uint64_t);
  id v32;
  uint64_t v33;
  id v34;
  void *v35;
  id v36;
  void *v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  id v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  id v48;
  void *v49;
  void *v50;
  id v51;
  unint64_t v53;
  id v54;
  char *v55;
  uint64_t v56;

  v4 = v3;
  objc_msgSend(a3, sel_setFrame_, *a2, a2[1], a2[2], a2[3]);
  v8 = (_QWORD *)(v3 + 16);
  swift_beginAccess();
  v9 = __swift_project_boxed_opaque_existential_1((_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 40));
  v10 = *(void **)&a3[OBJC_IVAR____TtC8StocksUI21StockFeedEarningsView_separatorView];
  v12 = *(_QWORD *)(*v9 + 40);
  v11 = *(_QWORD *)(*v9 + 48);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(*v9 + 16), v12);
  v13 = (void *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)(v11 + 16) + 152))(v12);
  objc_msgSend(v10, sel_setBackgroundColor_, v13);

  objc_msgSend(v10, sel_setFrame_, a2[4], a2[5], a2[6], a2[7]);
  __swift_project_boxed_opaque_existential_1(v8, *(_QWORD *)(v4 + 40));
  v55 = a3;
  v14 = *(void **)&a3[OBJC_IVAR____TtC8StocksUI21StockFeedEarningsView_addCalendarButton];
  v15 = (int *)type metadata accessor for StockFeedEarningsViewModel();
  v16 = (uint64_t *)(a1 + v15[8]);
  v17 = v16[1];
  v56 = a1;
  v18 = *(unsigned __int8 *)(a1 + v15[9]);
  sub_1DC148D2C(v14, *v16, v17, v18);
  v19 = (_QWORD *)*__swift_project_boxed_opaque_existential_1(v8, *(_QWORD *)(v4 + 40));
  v20 = &selRef_scrollViewDidScroll_;
  if (v17)
  {
    type metadata accessor for Localized();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    v22 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
    if (v18)
    {
      v53 = 0x80000001DC433B30;
      sub_1DC3FFC80();

      sub_1DC0FB194();
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1DC40C740;
      v24 = (void *)*MEMORY[0x1E0DC1138];
      *(_QWORD *)(inited + 32) = *MEMORY[0x1E0DC1138];
      v25 = sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FB00);
      v54 = v24;
      *(_QWORD *)(inited + 40) = sub_1DC4092F8();
      v26 = (void *)*MEMORY[0x1E0DC1140];
      *(_QWORD *)(inited + 64) = v25;
      *(_QWORD *)(inited + 72) = v26;
      v27 = v19 + 2;
      v29 = v19[5];
      v28 = v19[6];
      __swift_project_boxed_opaque_existential_1(v27, v29);
      v30 = *(_QWORD *)(v28 + 16);
    }
    else
    {
      v53 = 0x80000001DC43C850;
      sub_1DC3FFC80();

      sub_1DC0FB194();
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1DC40C740;
      v38 = (void *)*MEMORY[0x1E0DC1138];
      *(_QWORD *)(inited + 32) = *MEMORY[0x1E0DC1138];
      v39 = sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FB00);
      v54 = v38;
      *(_QWORD *)(inited + 40) = sub_1DC4092F8();
      v26 = (void *)*MEMORY[0x1E0DC1140];
      *(_QWORD *)(inited + 64) = v39;
      *(_QWORD *)(inited + 72) = v26;
      v29 = v19[5];
      v40 = v19[6];
      __swift_project_boxed_opaque_existential_1(v19 + 2, v29);
      v30 = *(_QWORD *)(v40 + 16);
    }
    v31 = *(uint64_t (**)(uint64_t, uint64_t))(v30 + 104);
    v32 = v26;
    v33 = v31(v29, v30);
    *(_QWORD *)(inited + 104) = sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FB30);
    *(_QWORD *)(inited + 80) = v33;
    sub_1DC0FA3C4(inited);
    v34 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
    v35 = (void *)sub_1DC408A1C();
    swift_bridgeObjectRelease();
    type metadata accessor for Key(0);
    sub_1DC081B48((unint64_t *)&qword_1EDB3F988, 255, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1DC40D90C);
    v41 = (void *)sub_1DC408980();
    swift_bridgeObjectRelease();
    v20 = &selRef_scrollViewDidScroll_;
    v42 = objc_msgSend(v34, sel_initWithString_attributes_, v35, v41, v53);

    v37 = v54;
    objc_msgSend(v14, sel_setAttributedTitle_forState_, v42, 0);

  }
  else
  {
    v36 = sub_1DC148A44();
    objc_msgSend(v14, sel_setAttributedTitle_forState_, v36, 0);

    v37 = (void *)*MEMORY[0x1E0DC1138];
  }
  objc_msgSend(v14, sel_setFrame_, a2[12], a2[13], a2[14], a2[15]);
  objc_msgSend(v14, sel_setHidden_, *(unsigned __int8 *)(v56 + v15[11]));
  v43 = *(void **)&v55[OBJC_IVAR____TtC8StocksUI21StockFeedEarningsView_earningsLabel];
  objc_msgSend(v43, sel_setLineBreakMode_, 0);
  objc_msgSend(v43, sel_setNumberOfLines_, 0);
  sub_1DC0FB194();
  v44 = swift_initStackObject();
  *(_OWORD *)(v44 + 16) = xmmword_1DC40DC10;
  *(_QWORD *)(v44 + 32) = v37;
  v45 = sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FB00);
  swift_bridgeObjectRetain();
  v46 = v37;
  v47 = sub_1DC4092F8();
  *(_QWORD *)(v44 + 64) = v45;
  *(_QWORD *)(v44 + 40) = v47;
  sub_1DC0FA3C4(v44);
  v48 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  v49 = (void *)sub_1DC408A1C();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1DC081B48((unint64_t *)&qword_1EDB3F988, 255, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1DC40D90C);
  v50 = (void *)sub_1DC408980();
  swift_bridgeObjectRelease();
  v51 = objc_msgSend(v48, v20[82], v49, v50);

  objc_msgSend(v43, sel_setAttributedText_, v51);
  return objc_msgSend(v43, sel_setFrame_, a2[8], a2[9], a2[10], a2[11]);
}

uint64_t type metadata accessor for StockFeedEarningsViewRenderer()
{
  return objc_opt_self();
}

uint64_t sub_1DC295DAC(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = sub_1DC081B48(&qword_1EDB39640, a2, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedEarningsViewRenderer, (uint64_t)&unk_1DC420C70);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

void sub_1DC295DE8(uint64_t *a1, double *a2, char *a3)
{
  uint64_t v3;
  uint64_t v4;
  void *v8;
  _QWORD *v9;
  uint64_t v10;
  char v11;
  id v12;
  void *v13;
  uint64_t *v14;
  void *v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t inited;
  void *v19;
  uint64_t v20;
  id v21;
  void *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(uint64_t, uint64_t);
  id v28;
  uint64_t v29;
  id v30;
  void *v31;
  void *v32;
  id v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  char *v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  id v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  id v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  id v63;
  void *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void *v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  id v74;
  char *v75;
  double __dst[36];

  v4 = v3;
  v8 = *(void **)&a3[OBJC_IVAR____TtC8StocksUI14StockTitleView_titleLabel];
  objc_msgSend(v8, sel_setFrame_, a2[4], a2[5], a2[6], a2[7]);
  v9 = (_QWORD *)(v3 + 16);
  swift_beginAccess();
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 40));
  v10 = *a1;
  v11 = *((_BYTE *)a2 + *(int *)(type metadata accessor for StockTitleViewLayoutAttributes() + 40));
  v12 = sub_1DC238408(v10);
  v74 = v8;
  v13 = v8;
  v14 = a1;
  objc_msgSend(v13, sel_setAttributedText_, v12);

  v75 = a3;
  v15 = *(void **)&a3[OBJC_IVAR____TtC8StocksUI14StockTitleView_nameLabel];
  objc_msgSend(v15, sel_setFrame_, a2[8], a2[9], a2[10], a2[11]);
  v16 = __swift_project_boxed_opaque_existential_1(v9, *(_QWORD *)(v4 + 40));
  if ((v11 - 1) <= 1u)
  {
    v17 = (_QWORD *)*v16;
    v71 = v14[3];
    v72 = v14[2];
    v73 = v15;
    sub_1DC10B31C(0, (unint64_t *)&qword_1EDB40090, (void (*)(uint64_t))sub_1DC112C08);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1DC40C740;
    v19 = (void *)*MEMORY[0x1E0DC1138];
    *(_QWORD *)(inited + 32) = *MEMORY[0x1E0DC1138];
    v20 = sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FB00);
    swift_bridgeObjectRetain();
    v21 = v19;
    *(_QWORD *)(inited + 40) = sub_1DC4092F8();
    v22 = (void *)*MEMORY[0x1E0DC1140];
    *(_QWORD *)(inited + 64) = v20;
    *(_QWORD *)(inited + 72) = v22;
    v23 = v17 + 2;
    v25 = v17[5];
    v24 = v17[6];
    __swift_project_boxed_opaque_existential_1(v23, v25);
    v26 = *(_QWORD *)(v24 + 16);
    v27 = *(uint64_t (**)(uint64_t, uint64_t))(v26 + 200);
    v28 = v22;
    v29 = v27(v25, v26);
    *(_QWORD *)(inited + 104) = sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FB30);
    *(_QWORD *)(inited + 80) = v29;
    sub_1DC0FA3C4(inited);
    v30 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
    v31 = (void *)sub_1DC408A1C();
    swift_bridgeObjectRelease();
    type metadata accessor for Key(0);
    sub_1DC081B48((unint64_t *)&qword_1EDB3F988, 255, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1DC40D90C);
    v32 = (void *)sub_1DC408980();
    swift_bridgeObjectRelease();
    v33 = objc_msgSend(v30, sel_initWithString_attributes_, v31, v32);

    if (v33)
    {
      objc_msgSend(v73, sel_setAttributedText_, v33);

    }
  }
  v34 = __swift_project_boxed_opaque_existential_1(v9, *(_QWORD *)(v4 + 40));
  v36 = *(_QWORD *)(*v34 + 40);
  v35 = *(_QWORD *)(*v34 + 48);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(*v34 + 16), v36);
  v37 = (void *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)(v35 + 16) + 72))(v36);
  objc_msgSend(v75, sel_setBackgroundColor_, v37);

  objc_msgSend(v74, sel_setNumberOfLines_, 0);
  v38 = *(char **)&v75[OBJC_IVAR____TtC8StocksUI14StockTitleView_quoteSummaryView];
  objc_msgSend(v38, sel_setFrame_, a2[12], a2[13], a2[14], a2[15]);
  v39 = (uint64_t)v14 + *(int *)(type metadata accessor for StockTitleViewModel() + 24);
  memcpy(__dst, a2 + 16, 0x111uLL);
  sub_1DC2CAD1C(v39, __dst, v38);
  objc_msgSend(v75, sel_setIsAccessibilityElement_, 1);
  v40 = (unint64_t)objc_msgSend(v75, sel_accessibilityTraits);
  v41 = v40;
  v42 = *MEMORY[0x1E0DC4670];
  if (!v40)
  {
    if (!v42)
    {
      v41 = 0;
      goto LABEL_10;
    }
LABEL_8:
    v41 = v42 | v40;
    goto LABEL_10;
  }
  if ((v42 & ~v40) != 0)
    goto LABEL_8;
LABEL_10:
  objc_msgSend(v75, sel_setAccessibilityTraits_, v41, v71, v72);
  sub_1DC10B31C(0, (unint64_t *)&qword_1EDB40048, (void (*)(uint64_t))sub_1DC2963D8);
  v43 = swift_allocObject();
  *(_OWORD *)(v43 + 16) = xmmword_1DC410E30;
  v44 = v14[3];
  *(_QWORD *)(v43 + 32) = v14[2];
  *(_QWORD *)(v43 + 40) = v44;
  v45 = OBJC_IVAR____TtC8StocksUI16QuoteSummaryView_priceLabel;
  v46 = *(void **)&v38[OBJC_IVAR____TtC8StocksUI16QuoteSummaryView_priceLabel];
  swift_bridgeObjectRetain();
  v47 = objc_msgSend(v46, sel_accessibilityLabel);
  if (v47)
  {
    v48 = v47;
    v49 = sub_1DC408A4C();
    v51 = v50;

  }
  else
  {
    v49 = 0;
    v51 = 0;
  }
  *(_QWORD *)(v43 + 48) = v49;
  *(_QWORD *)(v43 + 56) = v51;
  v52 = objc_msgSend(*(id *)&v38[v45], sel_accessibilityValue);
  if (v52)
  {
    v53 = v52;
    v54 = sub_1DC408A4C();
    v56 = v55;

  }
  else
  {
    v54 = 0;
    v56 = 0;
  }
  *(_QWORD *)(v43 + 64) = v54;
  *(_QWORD *)(v43 + 72) = v56;
  v57 = OBJC_IVAR____TtC8StocksUI16QuoteSummaryView_afterHoursPriceLabel;
  v58 = objc_msgSend(*(id *)&v38[OBJC_IVAR____TtC8StocksUI16QuoteSummaryView_afterHoursPriceLabel], sel_accessibilityLabel);
  if (v58)
  {
    v59 = v58;
    v60 = sub_1DC408A4C();
    v62 = v61;

  }
  else
  {
    v60 = 0;
    v62 = 0;
  }
  *(_QWORD *)(v43 + 80) = v60;
  *(_QWORD *)(v43 + 88) = v62;
  v63 = objc_msgSend(*(id *)&v38[v57], sel_accessibilityValue);
  if (v63)
  {
    v64 = v63;
    v65 = sub_1DC408A4C();
    v67 = v66;

  }
  else
  {
    v65 = 0;
    v67 = 0;
  }
  *(_QWORD *)(v43 + 96) = v65;
  *(_QWORD *)(v43 + 104) = v67;
  sub_1DC404300();
  v69 = v68;
  swift_bridgeObjectRelease();
  if (v69)
  {
    v70 = (void *)sub_1DC408A1C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v70 = 0;
  }
  objc_msgSend(v75, sel_setAccessibilityLabel_, v70);

}

void sub_1DC2963D8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB284B0)
  {
    v0 = sub_1DC4095A4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB284B0);
  }
}

uint64_t sub_1DC29642C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v3 = type metadata accessor for WebViewControllerFactory();
  result = sub_1DC4025FC();
  if (result)
  {
    a2[3] = v3;
    a2[4] = (uint64_t)&off_1EA458EF0;
    *a2 = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC29649C(_QWORD *a1)
{
  uint64_t result;
  uint64_t v3;
  objc_class *v4;
  char *v5;
  id v6;
  objc_super v7;
  _BYTE v8[24];
  uint64_t v9;
  _BYTE v10[40];

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC083C10();
  result = sub_1DC4025FC();
  if (result)
  {
    v3 = result;
    sub_1DC0824D4((uint64_t)a1, (uint64_t)v10);
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1DC096268(0, (unint64_t *)&unk_1EDB295C0);
    result = sub_1DC402608();
    if (v9)
    {
      v4 = (objc_class *)type metadata accessor for WebViewControllerFactory();
      v5 = (char *)objc_allocWithZone(v4);
      *(_QWORD *)&v5[OBJC_IVAR____TtC8StocksUI24WebViewControllerFactory_navigator] = v3;
      sub_1DC0824D4((uint64_t)v10, (uint64_t)&v5[OBJC_IVAR____TtC8StocksUI24WebViewControllerFactory_resolver]);
      sub_1DC0824D4((uint64_t)v8, (uint64_t)&v5[OBJC_IVAR____TtC8StocksUI24WebViewControllerFactory_sceneStateManager]);
      v7.receiver = v5;
      v7.super_class = v4;
      v6 = objc_msgSendSuper2(&v7, sel_init);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
      return (uint64_t)v6;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1DC2965D4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, (unint64_t *)&unk_1EDB28D58);
  result = sub_1DC402608();
  if (v5)
  {
    v4 = type metadata accessor for StockFeedEarningsViewModelFactory();
    result = swift_allocObject();
    *(_QWORD *)(result + 16) = v5;
    *(_QWORD *)(result + 24) = v6;
    a2[3] = v4;
    a2[4] = (uint64_t)&off_1EA466018;
    *a2 = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC29667C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC083C10();
  result = sub_1DC4025FC();
  if (!result)
  {
    __break(1u);
    goto LABEL_7;
  }
  v5 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, (unint64_t *)&unk_1EDB28C50);
  result = sub_1DC402608();
  if (!v11)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, (unint64_t *)&qword_1EDB29EE0);
  result = sub_1DC402608();
  if (!v9)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4018AC();
  result = sub_1DC4025FC();
  if (result)
  {
    sub_1DC080808((unint64_t *)&qword_1EDB29180, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8638], MEMORY[0x1E0D59B68]);
    sub_1DC404870();
    swift_allocObject();
    v6 = sub_1DC404858();
    v7 = type metadata accessor for WatchlistCreationAlertFactory();
    v8 = swift_allocObject();
    *(_QWORD *)(v8 + 56) = v5;
    result = sub_1DC097DD0(&v10, v8 + 16);
    *(_QWORD *)(v8 + 64) = v6;
    a2[3] = v7;
    a2[4] = (uint64_t)&off_1EA4547D0;
    *a2 = v8;
    return result;
  }
LABEL_9:
  __break(1u);
  return result;
}

void sub_1DC2969BC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB29600)
  {
    sub_1DC4010E4();
    v0 = sub_1DC402C20();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB29600);
  }
}

uint64_t *sub_1DC296A20(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v7 = a1;
    v8 = *(int *)(type metadata accessor for ForYouFeedConfig() + 20);
    v9 = (char *)v7 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1DC3FFFEC();
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      sub_1DC092F50(0, &qword_1EDB28AC0, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    v15 = *(int *)(a3 + 20);
    v16 = (char *)v7 + v15;
    v17 = (char *)a2 + v15;
    sub_1DC102724(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
    v19 = type metadata accessor for StockForYouFeedGroupKnobs();
    *(_QWORD *)&v16[*(int *)(v19 + 20)] = *(_QWORD *)&v17[*(int *)(v19 + 20)];
    *(_QWORD *)&v16[*(int *)(v19 + 24)] = *(_QWORD *)&v17[*(int *)(v19 + 24)];
    v20 = type metadata accessor for ForYouFeedGroupKnobs();
    *(_QWORD *)&v16[*(int *)(v20 + 24)] = *(_QWORD *)&v17[*(int *)(v20 + 24)];
    v21 = type metadata accessor for ForYouFeedKnobsConfig();
    *(_QWORD *)&v16[*(int *)(v21 + 20)] = *(_QWORD *)&v17[*(int *)(v21 + 20)];
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
  }
  return v7;
}

_QWORD *sub_1DC296BC4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(type metadata accessor for ForYouFeedConfig() + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1DC3FFFEC();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    sub_1DC092F50(0, &qword_1EDB28AC0, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  v15 = *(int *)(a3 + 20);
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  sub_1DC102724(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = type metadata accessor for StockForYouFeedGroupKnobs();
  *(_QWORD *)&v16[*(int *)(v19 + 20)] = *(_QWORD *)&v17[*(int *)(v19 + 20)];
  swift_retain();
  swift_release();
  *(_QWORD *)&v16[*(int *)(v19 + 24)] = *(_QWORD *)&v17[*(int *)(v19 + 24)];
  swift_retain();
  swift_release();
  v20 = type metadata accessor for ForYouFeedGroupKnobs();
  *(_QWORD *)&v16[*(int *)(v20 + 24)] = *(_QWORD *)&v17[*(int *)(v20 + 24)];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v21 = type metadata accessor for ForYouFeedKnobsConfig();
  *(_QWORD *)&v16[*(int *)(v21 + 20)] = *(_QWORD *)&v17[*(int *)(v21 + 20)];
  return a1;
}

_QWORD *sub_1DC296DA8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  *a1 = *a2;
  v6 = *(int *)(type metadata accessor for ForYouFeedConfig() + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1DC3FFFEC();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    sub_1DC092F50(0, &qword_1EDB28AC0, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v12 = *(int *)(a3 + 20);
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  sub_1DC102724(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
  v16 = type metadata accessor for StockForYouFeedGroupKnobs();
  *(_QWORD *)&v13[*(int *)(v16 + 20)] = *(_QWORD *)&v14[*(int *)(v16 + 20)];
  *(_QWORD *)&v13[*(int *)(v16 + 24)] = *(_QWORD *)&v14[*(int *)(v16 + 24)];
  v17 = type metadata accessor for ForYouFeedGroupKnobs();
  *(_QWORD *)&v13[*(int *)(v17 + 24)] = *(_QWORD *)&v14[*(int *)(v17 + 24)];
  v18 = type metadata accessor for ForYouFeedKnobsConfig();
  *(_QWORD *)&v13[*(int *)(v18 + 20)] = *(_QWORD *)&v14[*(int *)(v18 + 20)];
  return a1;
}

_QWORD *sub_1DC296EFC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v6 = *(int *)(type metadata accessor for ForYouFeedConfig() + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1DC3FFFEC();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    sub_1DC092F50(0, &qword_1EDB28AC0, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  v15 = *(int *)(a3 + 20);
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  sub_1DC102724(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = type metadata accessor for StockForYouFeedGroupKnobs();
  *(_QWORD *)&v16[*(int *)(v19 + 20)] = *(_QWORD *)&v17[*(int *)(v19 + 20)];
  swift_release();
  *(_QWORD *)&v16[*(int *)(v19 + 24)] = *(_QWORD *)&v17[*(int *)(v19 + 24)];
  swift_release();
  v20 = type metadata accessor for ForYouFeedGroupKnobs();
  *(_QWORD *)&v16[*(int *)(v20 + 24)] = *(_QWORD *)&v17[*(int *)(v20 + 24)];
  swift_bridgeObjectRelease();
  v21 = type metadata accessor for ForYouFeedKnobsConfig();
  *(_QWORD *)&v16[*(int *)(v21 + 20)] = *(_QWORD *)&v17[*(int *)(v21 + 20)];
  return a1;
}

uint64_t sub_1DC2970C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  v6 = type metadata accessor for ForYouFeedConfig();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v8 = type metadata accessor for ForYouFeedKnobsConfig();
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t sub_1DC297134(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v8 = type metadata accessor for ForYouFeedConfig();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v10 = type metadata accessor for ForYouFeedKnobsConfig();
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t sub_1DC2971B0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v16;
  uint64_t v17;
  char v18;
  char v19;

  v17 = a2;
  sub_1DC092F50(0, &qword_1EDB32A00, (void (*)(uint64_t))type metadata accessor for ForYouFeedKnobsConfig);
  MEMORY[0x1E0C80A78](v4);
  v16 = (char *)&v16 - v5;
  sub_1DC092F50(0, &qword_1EDB2ED00, (void (*)(uint64_t))type metadata accessor for ForYouFeedConfig);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v16 - v7;
  sub_1DC29785C();
  v10 = v9;
  v11 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC2978B4();
  sub_1DC409B08();
  if (!v2)
  {
    type metadata accessor for ForYouFeedConfig();
    v19 = 0;
    sub_1DC080808(&qword_1EDB2ECC0, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedConfig, (uint64_t)&unk_1DC42E9D4);
    sub_1DC4098B0();
    type metadata accessor for ForYouFeedKnobsConfig();
    v18 = 1;
    sub_1DC080808(&qword_1EDB329C0, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedKnobsConfig, (uint64_t)&unk_1DC42C1A8);
    v14 = (uint64_t)v16;
    sub_1DC4098B0();
    sub_1DC09E22C((uint64_t)v8, v14, v17);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1DC2973C8(char *a1, char *a2)
{
  return sub_1DC158B50(*a1, *a2);
}

uint64_t sub_1DC2973D4()
{
  sub_1DC409AC0();
  sub_1DC408AF4();
  swift_bridgeObjectRelease();
  return sub_1DC409AF0();
}

uint64_t sub_1DC297464()
{
  sub_1DC408AF4();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DC2974D0()
{
  sub_1DC409AC0();
  sub_1DC408AF4();
  swift_bridgeObjectRelease();
  return sub_1DC409AF0();
}

uint64_t sub_1DC29755C@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1DC4098A4();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

void sub_1DC2975B8(unint64_t *a1@<X8>)
{
  _BYTE *v1;
  unint64_t v2;
  unint64_t v3;

  v2 = 0x6565467961646F74;
  if (*v1)
    v2 = 0xD000000000000010;
  v3 = 0x80000001DC432E80;
  if (!*v1)
    v3 = 0xEF6769666E6F4364;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1DC297608()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000010;
  else
    return 0x6565467961646F74;
}

uint64_t sub_1DC297654@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1DC4098A4();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

uint64_t sub_1DC2976B4()
{
  sub_1DC2978B4();
  return sub_1DC409B20();
}

uint64_t sub_1DC2976DC()
{
  sub_1DC2978B4();
  return sub_1DC409B2C();
}

uint64_t sub_1DC297704@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DC2971B0(a1, a2);
}

uint64_t sub_1DC297718@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  sub_1DC092F50(0, &qword_1EDB32A00, (void (*)(uint64_t))type metadata accessor for ForYouFeedKnobsConfig);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v16 - v8;
  sub_1DC092F50(0, &qword_1EDB2ED00, (void (*)(uint64_t))type metadata accessor for ForYouFeedConfig);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v16 - v11;
  sub_1DC0990BC(a1, (uint64_t)&v16 - v11, (uint64_t (*)(_QWORD))type metadata accessor for ForYouFeedConfig);
  v13 = type metadata accessor for ForYouFeedConfig();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 0, 1, v13);
  sub_1DC0990BC(v3 + *(int *)(a2 + 20), (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for ForYouFeedKnobsConfig);
  v14 = type metadata accessor for ForYouFeedKnobsConfig();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v9, 0, 1, v14);
  return sub_1DC09E22C((uint64_t)v12, (uint64_t)v9, a3);
}

void sub_1DC29785C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB3FDA8)
  {
    sub_1DC2978B4();
    v0 = sub_1DC409928();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB3FDA8);
  }
}

unint64_t sub_1DC2978B4()
{
  unint64_t result;

  result = qword_1EDB34708;
  if (!qword_1EDB34708)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC420F54, &type metadata for ForYouFeedContentConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB34708);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ForYouFeedContentConfig.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1DC297944 + 4 * byte_1DC420DB5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1DC297978 + 4 * asc_1DC420DB0[v4]))();
}

uint64_t sub_1DC297978(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC297980(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC297988);
  return result;
}

uint64_t sub_1DC297994(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC29799CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1DC2979A0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC2979A8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ForYouFeedContentConfig.CodingKeys()
{
  return &type metadata for ForYouFeedContentConfig.CodingKeys;
}

unint64_t sub_1DC2979C8()
{
  unint64_t result;

  result = qword_1F0350910;
  if (!qword_1F0350910)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC420F2C, &type metadata for ForYouFeedContentConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F0350910);
  }
  return result;
}

unint64_t sub_1DC297A10()
{
  unint64_t result;

  result = qword_1EDB34718;
  if (!qword_1EDB34718)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC420E64, &type metadata for ForYouFeedContentConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB34718);
  }
  return result;
}

unint64_t sub_1DC297A58()
{
  unint64_t result;

  result = qword_1EDB34710;
  if (!qword_1EDB34710)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC420E8C, &type metadata for ForYouFeedContentConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB34710);
  }
  return result;
}

uint64_t sub_1DC297A9C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 16))();
}

void sub_1DC297AA4(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;

  v3 = a3;
  sub_1DC298C70();
}

void sub_1DC297AC8(char a1)
{
  uint64_t v1;
  char v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  _QWORD v7[6];

  v2 = a1 & 1;
  if (((((a1 & 1) == 0) ^ *(unsigned __int8 *)(v1 + qword_1EDB39820)) & 1) == 0)
  {
    *(_BYTE *)(v1 + qword_1EDB39820) = v2;
    v3 = *(void **)(v1 + qword_1EDB39818);
    objc_msgSend(v3, sel_cancel);
    v4 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v4;
    *(_BYTE *)(v5 + 24) = v2;
    v7[4] = sub_1DC298C34;
    v7[5] = v5;
    v7[0] = MEMORY[0x1E0C809B0];
    v7[1] = 1107296256;
    v7[2] = sub_1DC298B9C;
    v7[3] = &block_descriptor_27;
    v6 = _Block_copy(v7);
    swift_release();
    objc_msgSend(v3, sel_addAnimation_, v6);
    _Block_release(v6);
  }
}

void sub_1DC297BD8(uint64_t a1, void (*a2)(char *, uint64_t))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void (*v19)(uint64_t, _QWORD);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  BOOL v31;
  char *v32;
  char v33;
  void (*v35)(char *, _QWORD, uint64_t);
  char *v36;
  unint64_t v37;
  char v38;
  char *v39;
  char *v40;
  void (*v41)(char *, uint64_t);
  uint64_t v42;
  char *v43;
  char v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  char v53;
  char *v54;
  void (*v55)(char *, uint64_t);
  uint64_t v56;
  void (*v57)(char *, _QWORD, uint64_t);
  void (*v58)(char *, unint64_t, uint64_t);
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  void (*v63)(char *, uint64_t);
  char *v64;
  char *v65;

  v3 = v2;
  v6 = sub_1DC4059F8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v61 = (char *)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v62 = (char *)&v56 - v10;
  MEMORY[0x1E0C80A78](v11);
  v65 = (char *)&v56 - v12;
  MEMORY[0x1E0C80A78](v13);
  v64 = (char *)&v56 - v14;
  v15 = sub_1DC405824();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v56 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC4056E0();
  v19 = (void (*)(uint64_t, _QWORD))sub_1DC4056EC();
  v63 = a2;
  v19(a1, a2);
  v20 = sub_1DC4056C8();
  v21 = sub_1DC112EA4(1, v20);
  v23 = v22;
  v25 = v24;
  v27 = v26;
  if ((v26 & 1) != 0)
  {
    v59 = v3;
    v60 = v7;
    sub_1DC409A0C();
    swift_unknownObjectRetain_n();
    v28 = swift_dynamicCastClass();
    if (!v28)
    {
      swift_unknownObjectRelease();
      v28 = MEMORY[0x1E0DEE9D8];
    }
    v29 = *(_QWORD *)(v28 + 16);
    swift_release();
    if (!__OFSUB__(v27 >> 1, v25))
    {
      if (v29 == (v27 >> 1) - v25)
      {
        v23 = swift_dynamicCastClass();
        v3 = v59;
        v7 = v60;
        if (!v23)
        {
          swift_unknownObjectRelease();
          v23 = MEMORY[0x1E0DEE9D8];
        }
        goto LABEL_9;
      }
      goto LABEL_52;
    }
    goto LABEL_51;
  }
  while (1)
  {
    v23 = sub_1DC111FF8(v21, v23, v25, v27);
LABEL_9:
    swift_unknownObjectRelease();
    (*(void (**)(char *, void (*)(char *, uint64_t), uint64_t))(v16 + 16))(v18, v63, v15);
    v30 = (*(uint64_t (**)(char *, uint64_t))(v16 + 88))(v18, v15);
    v31 = v30 == *MEMORY[0x1E0DB9E60] || v30 == *MEMORY[0x1E0DB9E78];
    v32 = v65;
    if (v31)
    {
      swift_release();
      v33 = 1;
LABEL_15:
      sub_1DC297AC8(v33);
      return;
    }
    if (v30 != *MEMORY[0x1E0DB9E80] && v30 != *MEMORY[0x1E0DB9E70])
    {
      if (v30 == *MEMORY[0x1E0DB9E68])
        goto LABEL_25;
      goto LABEL_54;
    }
    v35 = *(void (**)(char *, _QWORD, uint64_t))(v7 + 104);
    v36 = v64;
    v35(v64, *MEMORY[0x1E0DBA290], v6);
    v16 = *(_QWORD *)(v23 + 16);
    v60 = v7;
    if (!v16)
    {
      v41 = *(void (**)(char *, uint64_t))(v7 + 8);
      v40 = v61;
      v39 = v62;
      v41(v36, v6);
      goto LABEL_36;
    }
    v57 = v35;
    v37 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    v58 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    v59 = v3;
    v58(v32, v23 + v37, v6);
    v18 = (char *)sub_1DC298E90();
    swift_bridgeObjectRetain();
    v38 = sub_1DC4089F8();
    v63 = *(void (**)(char *, uint64_t))(v7 + 8);
    v63(v32, v6);
    v40 = v61;
    v39 = v62;
    if ((v38 & 1) != 0)
    {
LABEL_23:
      swift_release();
      v63(v64, v6);
      goto LABEL_25;
    }
    if (v16 == 1)
      break;
    v15 = *(_QWORD *)(v7 + 72);
    v25 = v23 + v15 + v37;
    v42 = 1;
    v21 = (uint64_t)v64;
    v43 = v65;
    while (1)
    {
      v58(v43, v25, v6);
      v27 = v42 + 1;
      if (__OFADD__(v42, 1))
        break;
      v44 = sub_1DC4089F8();
      v63(v43, v6);
      if ((v44 & 1) != 0)
        goto LABEL_23;
      ++v42;
      v25 += v15;
      v21 = (uint64_t)v64;
      if (v27 == v16)
      {
        swift_release();
        v3 = v59;
        v40 = v61;
        v39 = v62;
        goto LABEL_35;
      }
    }
    __break(1u);
LABEL_51:
    __break(1u);
LABEL_52:
    swift_unknownObjectRelease();
    v3 = v59;
    v7 = v60;
  }
  swift_release();
  v3 = v59;
  v21 = (uint64_t)v64;
LABEL_35:
  v41 = v63;
  v35 = v57;
  v63((char *)v21, v6);
LABEL_36:
  v35(v39, *MEMORY[0x1E0DBA260], v6);
  v45 = *(_QWORD *)(v23 + 16);
  if (!v45)
  {
LABEL_47:
    v41(v39, v6);
    swift_release();
    v33 = 0;
    goto LABEL_15;
  }
  v46 = (*(unsigned __int8 *)(v60 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v60 + 80);
  v65 = *(char **)(v60 + 16);
  ((void (*)(char *, unint64_t, uint64_t))v65)(v40, v23 + v46, v6);
  sub_1DC298E90();
  swift_bridgeObjectRetain();
  v47 = sub_1DC4089F8();
  v63 = v41;
  v41(v40, v6);
  if ((v47 & 1) == 0)
  {
    if (v45 != 1)
    {
      v59 = v3;
      v48 = *(_QWORD *)(v60 + 72);
      v49 = v23 + v48 + v46;
      v50 = 1;
      while (1)
      {
        v51 = v61;
        ((void (*)(char *, unint64_t, uint64_t))v65)(v61, v49, v6);
        v52 = v50 + 1;
        if (__OFADD__(v50, 1))
          break;
        v53 = sub_1DC4089F8();
        v54 = v51;
        v55 = v63;
        v63(v54, v6);
        if ((v53 & 1) != 0)
        {
          swift_release();
          v55(v62, v6);
          goto LABEL_25;
        }
        ++v50;
        v49 += v48;
        if (v52 == v45)
        {
          swift_release();
          v39 = v62;
          goto LABEL_46;
        }
      }
      __break(1u);
LABEL_54:
      sub_1DC409838();
      __break(1u);
      return;
    }
    swift_release();
LABEL_46:
    v41 = v63;
    goto LABEL_47;
  }
  swift_release();
  v63(v39, v6);
LABEL_25:
  swift_release();
}

void sub_1DC2981DC(char a1)
{
  void *v1;
  void *v2;
  objc_class *ObjectType;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  char *v9;
  id v10;
  uint64_t v11;
  id v12;
  objc_super v13;

  v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  v5 = sub_1DC406094();
  v6 = *(_QWORD *)(v5 - 8);
  *(_QWORD *)&v7 = MEMORY[0x1E0C80A78](v5).n128_u64[0];
  v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13.receiver = v2;
  v13.super_class = ObjectType;
  objc_msgSendSuper2(&v13, sel_viewWillDisappear_, a1 & 1, v7);
  sub_1DC402BC0();
  v10 = v12;
  if (v12)
  {
    if ((*((_BYTE *)v2 + qword_1EDB39820) & 1) != 0)
    {
      sub_1DC4056A4();
      (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v9, *MEMORY[0x1E0DBB388], v5);
      sub_1DC406088();

      swift_release();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    }
    else
    {

    }
  }
}

void sub_1DC298300(void *a1, uint64_t a2, char a3)
{
  id v4;

  v4 = a1;
  sub_1DC2981DC(a3);

}

void sub_1DC298340(void *a1, uint64_t a2, char a3)
{
  id v4;

  v4 = a1;
  sub_1DC11866C(a3, (SEL *)&selRef_viewDidDisappear_);

}

void sub_1DC298388()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1DC2983B4()
{
  uint64_t v0;

  swift_release();
  sub_1DC148A20(v0 + qword_1EDB39810);

  return __swift_destroy_boxed_opaque_existential_1(v0 + qword_1EDB39828);
}

uint64_t sub_1DC298410(uint64_t a1)
{
  swift_release();
  sub_1DC148A20(a1 + qword_1EDB39810);

  return __swift_destroy_boxed_opaque_existential_1(a1 + qword_1EDB39828);
}

uint64_t sub_1DC298478()
{
  return type metadata accessor for TickerCardContainerController();
}

void sub_1DC298480(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void *v13;
  char v14;
  _BYTE *v15;
  unsigned __int8 v16;
  unsigned int *v17;
  uint64_t v18;
  void *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  char *v25;
  _BYTE *v26;
  char *v27;
  _BYTE *v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  _BYTE *v39;

  v8 = sub_1DC406094();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v12 = MEMORY[0x1DF0CAD78](a3 + 16);
  if (v12)
  {
    v13 = (void *)v12;
    v37 = a1;
    v38 = a2;
    v14 = a4 & 1;
    sub_1DC402BD8();
    v15 = v39;
    v16 = objc_msgSend((id)objc_opt_self(), sel_areAnimationsEnabled);
    if ((a4 & 1) != 0)
    {
      v18 = OBJC_IVAR____TtC8StocksUI20TickerViewController_autoScrolling;
      v15[OBJC_IVAR____TtC8StocksUI20TickerViewController_autoScrolling] = 1;
      sub_1DC4055CC();
      v19 = (void *)sub_1DC405074();
      swift_release();
      type metadata accessor for TickerCollectionView();
      *(_BYTE *)(swift_dynamicCastClassUnconditional() + OBJC_IVAR____TtC8StocksUI20TickerCollectionView_autoScrolling) = v15[v18];
      sub_1DC3309FC();

      v17 = (unsigned int *)MEMORY[0x1E0DBB390];
    }
    else
    {
      v17 = (unsigned int *)MEMORY[0x1E0DBB388];
    }
    v20 = v13;
    sub_1DC4056A4();

    (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, *v17, v8);
    sub_1DC406088();
    swift_release();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    if (!MEMORY[0x1DF0CAD78](&v20[qword_1EDB39810]) || (v21 = sub_1DC305954(v14), swift_unknownObjectRelease(), !v21))
    {
      type metadata accessor for TickerCardContainerControllerAnimationCoordinator();
      v21 = swift_allocObject();
      *(_QWORD *)(v21 + 16) = MEMORY[0x1E0DEE9E0];
    }
    v22 = swift_allocObject();
    *(_BYTE *)(v22 + 16) = v14;
    *(_QWORD *)(v22 + 24) = v15;
    *(_QWORD *)(v22 + 32) = v20;
    v23 = swift_allocObject();
    *(_BYTE *)(v23 + 16) = v14;
    *(_QWORD *)(v23 + 24) = v15;
    *(_QWORD *)(v23 + 32) = v20;
    type metadata accessor for TickerAnimation();
    v24 = (_QWORD *)swift_allocObject();
    v24[2] = sub_1DC298D58;
    v24[3] = v22;
    v24[4] = sub_1DC298D90;
    v24[5] = v23;
    MEMORY[0x1E0C80A78](v24);
    *(&v37 - 2) = v21;
    *((_BYTE *)&v37 - 8) = v16;
    v25 = v20;
    v26 = v15;
    v27 = v25;
    v28 = v26;
    sub_1DC402E0C();
    v29 = swift_allocObject();
    *(_QWORD *)(v29 + 16) = v24;
    *(_BYTE *)(v29 + 24) = v16;
    v30 = swift_allocObject();
    *(_QWORD *)(v30 + 16) = sub_1DC298DF8;
    *(_QWORD *)(v30 + 24) = v29;
    swift_retain();
    v31 = (void *)sub_1DC402C80();
    sub_1DC402CF8();
    swift_release();
    swift_release();

    v32 = swift_allocObject();
    *(_QWORD *)(v32 + 16) = v21;
    *(_BYTE *)(v32 + 24) = v16;
    v33 = swift_allocObject();
    *(_QWORD *)(v33 + 16) = sub_1DC298E28;
    *(_QWORD *)(v33 + 24) = v32;
    swift_retain();
    v34 = (void *)sub_1DC402C80();
    sub_1DC402CF8();
    swift_release();
    swift_release();

    v35 = swift_allocObject();
    *(_QWORD *)(v35 + 16) = v37;
    *(_QWORD *)(v35 + 24) = v38;
    swift_retain();
    v36 = (void *)sub_1DC402C80();
    sub_1DC402D64();

    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();

  }
}

id sub_1DC298904(char a1, id a2, uint64_t a3)
{
  id result;
  id v6;
  double v7;

  result = objc_msgSend(a2, sel_view);
  v6 = result;
  if ((a1 & 1) == 0)
  {
    v7 = 0.0;
    if (result)
    {
LABEL_5:
      objc_msgSend(result, sel_setAlpha_, v7);

      return objc_msgSend(*(id *)(a3 + qword_1EDB39808), sel_setAlpha_, v7);
    }
    __break(1u);
  }
  v7 = 1.0;
  if (result)
    goto LABEL_5;
  __break(1u);
  return result;
}

id sub_1DC29899C(int a1, char a2, id a3, uint64_t a4)
{
  id result;
  id v8;
  uint64_t v9;
  void *v10;

  result = objc_msgSend(a3, sel_view);
  v8 = result;
  if ((a2 & 1) != 0)
  {
    if (result)
    {
      objc_msgSend(result, sel_setAlpha_, 1.0);

      objc_msgSend(*(id *)(a4 + qword_1EDB39808), sel_setAlpha_, 1.0);
      goto LABEL_6;
    }
  }
  else
  {
    if (result)
    {
      objc_msgSend(result, sel_setAlpha_, 0.0);

      objc_msgSend(*(id *)(a4 + qword_1EDB39808), sel_setAlpha_, 0.0);
      v9 = OBJC_IVAR____TtC8StocksUI20TickerViewController_autoScrolling;
      *((_BYTE *)a3 + OBJC_IVAR____TtC8StocksUI20TickerViewController_autoScrolling) = 0;
      sub_1DC4055CC();
      v10 = (void *)sub_1DC405074();
      swift_release();
      type metadata accessor for TickerCollectionView();
      *(_BYTE *)(swift_dynamicCastClassUnconditional() + OBJC_IVAR____TtC8StocksUI20TickerCollectionView_autoScrolling) = *((_BYTE *)a3 + v9);
      sub_1DC3309FC();

LABEL_6:
      sub_1DC4056A4();
      sub_1DC40607C();
      return (id)swift_release();
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1DC298AF0(uint64_t a1, char a2)
{
  if ((a2 & 1) != 0)
    MEMORY[0x1E0C80A78](a1);
  sub_1DC132504();
  swift_allocObject();
  return sub_1DC402DA0();
}

uint64_t sub_1DC298B9C(uint64_t a1, void *aBlock)
{
  void (*v2)(uint64_t (*)(), uint64_t);
  void *v3;
  uint64_t v4;

  v2 = *(void (**)(uint64_t (*)(), uint64_t))(a1 + 32);
  v3 = _Block_copy(aBlock);
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = v3;
  swift_retain();
  v2(sub_1DC298C64, v4);
  swift_release();
  return swift_release();
}

uint64_t sub_1DC298C10()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1DC298C34(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1DC298480(a1, a2, *(_QWORD *)(v2 + 16), *(_BYTE *)(v2 + 24));
}

uint64_t sub_1DC298C40()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_1DC298C64()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 16) + 16))();
}

void sub_1DC298C70()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)&v0[qword_1EDB39810 + 8] = 0;
  swift_unknownObjectWeakInit();
  v0[qword_1EDB39820] = 0;
  v1 = qword_1EDB39818;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D62908]), sel_init);
  v2 = qword_1EDB39808;
  *(_QWORD *)&v0[v2] = objc_msgSend(objc_allocWithZone((Class)sub_1DC404444()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v0[qword_1EDB397F8] = 0;

  sub_1DC409838();
  __break(1u);
}

id sub_1DC298D58()
{
  uint64_t v0;

  return sub_1DC298904(*(_BYTE *)(v0 + 16), *(id *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_1DC298D64()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_1DC298D90(int a1)
{
  uint64_t v1;

  return sub_1DC29899C(a1, *(_BYTE *)(v1 + 16), *(id *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_1DC298D9C()
{
  uint64_t v0;

  return sub_1DC3922E8(0, *(_BYTE *)(v0 + 24));
}

uint64_t sub_1DC298DD4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DC298DF8()
{
  uint64_t v0;

  return sub_1DC298AF0(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t sub_1DC298E04()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DC298E28()
{
  uint64_t v0;

  return sub_1DC3922E8(1, *(_BYTE *)(v0 + 24));
}

uint64_t sub_1DC298E58(uint64_t (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1DC392460(a1, a2, a3, a4, v4);
}

void sub_1DC298E60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_1DC3924A8(a1, a2, *(double *)(v4 + 16), a3, a4, *(_QWORD **)(v4 + 24));
}

uint64_t sub_1DC298E6C()
{
  swift_unknownObjectUnownedDestroy();
  return swift_deallocObject();
}

unint64_t sub_1DC298E90()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EDB2A3C8;
  if (!qword_1EDB2A3C8)
  {
    v1 = sub_1DC4059F8();
    result = MEMORY[0x1DF0CAB8C](MEMORY[0x1E0DBA2C0], v1);
    atomic_store(result, (unint64_t *)&qword_1EDB2A3C8);
  }
  return result;
}

uint64_t static RadarComponent.stocks.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1EDB29C90 != -1)
    swift_once();
  v2 = sub_1DC4044EC();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EDB29C70);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

_QWORD *sub_1DC298F5C(_OWORD *a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  __int128 v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  id v18;
  id v19;
  uint64_t v20;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v20 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = *((_OWORD *)a2 + 1);
    *a1 = *(_OWORD *)a2;
    a1[1] = v7;
    a1[2] = *((_OWORD *)a2 + 2);
    v8 = a3[6];
    v9 = (char *)a1 + v8;
    v10 = (uint64_t)a2 + v8;
    v11 = sub_1DC406328();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[8];
    *(_QWORD *)((char *)v4 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    v13 = *(void **)((char *)a2 + v12);
    *(_QWORD *)((char *)v4 + v12) = v13;
    v14 = a3[9];
    v15 = a3[10];
    v16 = *(void **)((char *)a2 + v14);
    *(_QWORD *)((char *)v4 + v14) = v16;
    *((_BYTE *)v4 + v15) = *((_BYTE *)a2 + v15);
    v17 = a3[12];
    *((_BYTE *)v4 + a3[11]) = *((_BYTE *)a2 + a3[11]);
    *(_QWORD *)((char *)v4 + v17) = *(uint64_t *)((char *)a2 + v17);
    *(_QWORD *)((char *)v4 + a3[13]) = *(uint64_t *)((char *)a2 + a3[13]);
    v18 = v13;
    v19 = v16;
  }
  return v4;
}

_QWORD *sub_1DC29904C(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  id v13;
  uint64_t v14;
  void *v15;
  void *v16;
  id v17;

  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  v6 = a3[6];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1DC406328();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  v10 = a3[8];
  v11 = *(void **)((char *)a2 + v10);
  v12 = *(void **)((char *)a1 + v10);
  *(_QWORD *)((char *)a1 + v10) = v11;
  v13 = v11;

  v14 = a3[9];
  v15 = *(void **)((char *)a2 + v14);
  v16 = *(void **)((char *)a1 + v14);
  *(_QWORD *)((char *)a1 + v14) = v15;
  v17 = v15;

  *((_BYTE *)a1 + a3[10]) = *((_BYTE *)a2 + a3[10]);
  *((_BYTE *)a1 + a3[11]) = *((_BYTE *)a2 + a3[11]);
  *(_QWORD *)((char *)a1 + a3[12]) = *(_QWORD *)((char *)a2 + a3[12]);
  *(_QWORD *)((char *)a1 + a3[13]) = *(_QWORD *)((char *)a2 + a3[13]);
  return a1;
}

_OWORD *sub_1DC29914C(_OWORD *a1, _OWORD *a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  v7 = a3[6];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1DC406328();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[8];
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  *(_QWORD *)((char *)a1 + v11) = *(_QWORD *)((char *)a2 + v11);
  v12 = a3[10];
  *(_QWORD *)((char *)a1 + a3[9]) = *(_QWORD *)((char *)a2 + a3[9]);
  *((_BYTE *)a1 + v12) = *((_BYTE *)a2 + v12);
  v13 = a3[12];
  *((_BYTE *)a1 + a3[11]) = *((_BYTE *)a2 + a3[11]);
  *(_QWORD *)((char *)a1 + v13) = *(_QWORD *)((char *)a2 + v13);
  *(_QWORD *)((char *)a1 + a3[13]) = *(_QWORD *)((char *)a2 + a3[13]);
  return a1;
}

_OWORD *sub_1DC299208(_OWORD *a1, _OWORD *a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  v7 = a3[6];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1DC406328();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[8];
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  v12 = *(void **)((char *)a1 + v11);
  *(_QWORD *)((char *)a1 + v11) = *(_QWORD *)((char *)a2 + v11);

  v13 = a3[9];
  v14 = *(void **)((char *)a1 + v13);
  *(_QWORD *)((char *)a1 + v13) = *(_QWORD *)((char *)a2 + v13);

  v15 = a3[11];
  *((_BYTE *)a1 + a3[10]) = *((_BYTE *)a2 + a3[10]);
  *((_BYTE *)a1 + v15) = *((_BYTE *)a2 + v15);
  v16 = a3[13];
  *(_QWORD *)((char *)a1 + a3[12]) = *(_QWORD *)((char *)a2 + a3[12]);
  *(_QWORD *)((char *)a1 + v16) = *(_QWORD *)((char *)a2 + v16);
  return a1;
}

uint64_t sub_1DC2992D4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC2992E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1DC406328();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 24), a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 32));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_1DC299360()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC29936C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1DC406328();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + *(int *)(a4 + 24), a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 32)) = (a2 - 1);
  return result;
}

uint64_t *sub_1DC2993E8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t v11;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1DC40952C();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = *(void **)((char *)a2 + v8);
    *(uint64_t *)((char *)a1 + v8) = (uint64_t)v9;
    v10 = v9;
  }
  return a1;
}

uint64_t sub_1DC299474(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;

  v6 = sub_1DC40952C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(void **)(a2 + v7);
  *(_QWORD *)(a1 + v7) = v8;
  v9 = v8;
  return a1;
}

uint64_t sub_1DC2994D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;

  v6 = sub_1DC40952C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(void **)(a2 + v7);
  v9 = *(void **)(a1 + v7);
  *(_QWORD *)(a1 + v7) = v8;
  v10 = v8;

  return a1;
}

uint64_t sub_1DC29953C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1DC40952C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1DC299598(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;

  v6 = sub_1DC40952C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(void **)(a1 + v7);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);

  return a1;
}

uint64_t sub_1DC2995FC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC299608(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1DC40952C();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_1DC299684()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC299690(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1DC40952C();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

void sub_1DC299708(void *a1)
{
  char *v1;
  void *v3;
  id v4;

  v3 = *(void **)&v1[OBJC_IVAR____TtC8StocksUI11WelcomeView_errorView];
  if (v3)
  {
    v4 = v3;
    objc_msgSend(v1, sel_addSubview_, v4);
    objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC8StocksUI11WelcomeView_footer], sel_setHidden_, 1);
    objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC8StocksUI11WelcomeView_bullet1], sel_setHidden_, 1);
    objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC8StocksUI11WelcomeView_bullet2], sel_setHidden_, 1);
    objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC8StocksUI11WelcomeView_bullet3], sel_setHidden_, 1);

    if (!a1)
      return;
    goto LABEL_3;
  }
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC8StocksUI11WelcomeView_footer], sel_setHidden_, 0);
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC8StocksUI11WelcomeView_bullet1], sel_setHidden_, 0);
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC8StocksUI11WelcomeView_bullet2], sel_setHidden_, 0);
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC8StocksUI11WelcomeView_bullet3], sel_setHidden_, 0);
  if (a1)
LABEL_3:
    objc_msgSend(a1, sel_removeFromSuperview);
}

char *sub_1DC299848(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v5;
  objc_class *ObjectType;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  id v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  objc_class *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  Class v29;
  char *v30;
  void *v31;
  char *v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  id v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t inited;
  void *v44;
  void *v45;
  void *v46;
  uint64_t v47;
  unint64_t v48;
  void *v49;
  id v50;
  id v51;
  id v52;
  char *v53;
  void *v54;
  void *v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  char *v59;
  void *v60;
  void *v61;
  unint64_t v62;
  unint64_t v63;
  char *v64;
  void *v65;
  void *v66;
  unint64_t v67;
  unint64_t v68;
  id v69;
  id v71;
  id v72;
  id v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  objc_super v79;

  v5 = v4;
  ObjectType = (objc_class *)swift_getObjectType();
  v11 = MEMORY[0x1E0DEE9C0] + 8;
  sub_1DC083594(0, &qword_1EDB2A928, MEMORY[0x1E0DEE9C0] + 8, MEMORY[0x1E0DBC320]);
  v76 = *(_QWORD *)(v12 - 8);
  v77 = v12;
  MEMORY[0x1E0C80A78](v12);
  v14 = (uint64_t *)((char *)&v74 - v13);
  v15 = OBJC_IVAR____TtC8StocksUI11WelcomeView_scrollView;
  v16 = objc_allocWithZone(MEMORY[0x1E0DC3C28]);
  v17 = v5;
  *(_QWORD *)&v5[v15] = objc_msgSend(v16, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v18 = OBJC_IVAR____TtC8StocksUI11WelcomeView_footer;
  *(_QWORD *)&v17[v18] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F58]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v19 = OBJC_IVAR____TtC8StocksUI11WelcomeView_titleGroup;
  *(_QWORD *)&v17[v19] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for WelcomeView.TitleGroup()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v20 = OBJC_IVAR____TtC8StocksUI11WelcomeView_bullet1;
  v21 = (objc_class *)type metadata accessor for WelcomeView.BulletView();
  *(_QWORD *)&v17[v20] = objc_msgSend(objc_allocWithZone(v21), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v22 = OBJC_IVAR____TtC8StocksUI11WelcomeView_bullet2;
  *(_QWORD *)&v17[v22] = objc_msgSend(objc_allocWithZone(v21), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v23 = OBJC_IVAR____TtC8StocksUI11WelcomeView_bullet3;
  *(_QWORD *)&v17[v23] = objc_msgSend(objc_allocWithZone(v21), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v24 = OBJC_IVAR____TtC8StocksUI11WelcomeView_continueButton;
  *(_QWORD *)&v17[v24] = objc_msgSend((id)objc_opt_self(), sel_largeButton);
  v25 = OBJC_IVAR____TtC8StocksUI11WelcomeView_activityIndicator;
  *(_QWORD *)&v17[v25] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3438]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v26 = OBJC_IVAR____TtC8StocksUI11WelcomeView_privacyIcon;
  *(_QWORD *)&v17[v26] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3890]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v27 = OBJC_IVAR____TtC8StocksUI11WelcomeView_privacyLink;
  type metadata accessor for TapDimmingTextView();
  *(_QWORD *)&v17[v27] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v28 = OBJC_IVAR____TtC8StocksUI11WelcomeView_onPrivacyTap;
  sub_1DC083594(0, (unint64_t *)&qword_1EDB2A930, v11, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DBC348]);
  *(_QWORD *)&v17[v28] = objc_msgSend(objc_allocWithZone(v29), sel_init);
  *(_QWORD *)&v17[OBJC_IVAR____TtC8StocksUI11WelcomeView_errorView] = 0;

  v79.receiver = v17;
  v79.super_class = ObjectType;
  v30 = (char *)objc_msgSendSuper2(&v79, sel_initWithFrame_, a1, a2, a3, a4);
  v31 = *(void **)&v30[OBJC_IVAR____TtC8StocksUI11WelcomeView_scrollView];
  v32 = v30;
  objc_msgSend(v32, sel_addSubview_, v31);
  v33 = OBJC_IVAR____TtC8StocksUI11WelcomeView_footer;
  v34 = *(void **)&v32[OBJC_IVAR____TtC8StocksUI11WelcomeView_footer];
  objc_msgSend(v32, sel_addSubview_, v34);
  objc_msgSend(v31, sel_addSubview_, *(_QWORD *)&v32[OBJC_IVAR____TtC8StocksUI11WelcomeView_titleGroup]);
  v35 = OBJC_IVAR____TtC8StocksUI11WelcomeView_bullet1;
  objc_msgSend(v31, sel_addSubview_, *(_QWORD *)&v32[OBJC_IVAR____TtC8StocksUI11WelcomeView_bullet1]);
  v36 = OBJC_IVAR____TtC8StocksUI11WelcomeView_bullet2;
  objc_msgSend(v31, sel_addSubview_, *(_QWORD *)&v32[OBJC_IVAR____TtC8StocksUI11WelcomeView_bullet2]);
  v37 = OBJC_IVAR____TtC8StocksUI11WelcomeView_bullet3;
  objc_msgSend(v31, sel_addSubview_, *(_QWORD *)&v32[OBJC_IVAR____TtC8StocksUI11WelcomeView_bullet3]);
  v75 = OBJC_IVAR____TtC8StocksUI11WelcomeView_activityIndicator;
  objc_msgSend(v31, sel_addSubview_, *(_QWORD *)&v32[OBJC_IVAR____TtC8StocksUI11WelcomeView_activityIndicator]);
  v38 = objc_msgSend(v34, sel_contentView);
  objc_msgSend(v38, sel_addSubview_, *(_QWORD *)&v32[OBJC_IVAR____TtC8StocksUI11WelcomeView_continueButton]);

  v39 = objc_msgSend(*(id *)&v32[v33], sel_contentView);
  objc_msgSend(v39, sel_addSubview_, *(_QWORD *)&v32[OBJC_IVAR____TtC8StocksUI11WelcomeView_privacyIcon]);

  v40 = objc_msgSend(*(id *)&v32[v33], sel_contentView);
  objc_msgSend(v40, sel_addSubview_, *(_QWORD *)&v32[OBJC_IVAR____TtC8StocksUI11WelcomeView_privacyLink]);

  *v14 = 1;
  v42 = v76;
  v41 = v77;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v76 + 104))(v14, *MEMORY[0x1E0DBC310], v77);

  (*(void (**)(_QWORD *, uint64_t))(v42 + 8))(v14, v41);
  sub_1DC083594(0, (unint64_t *)&qword_1EDB400D0, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DC412B70;
  v44 = *(void **)&v32[v35];
  *(_QWORD *)(inited + 32) = v44;
  v45 = *(void **)&v32[v36];
  *(_QWORD *)(inited + 40) = v45;
  v46 = *(void **)&v32[v37];
  *(_QWORD *)(inited + 48) = v46;
  v78 = inited;
  sub_1DC408CF8();
  v47 = v78;
  v48 = v78 & 0xC000000000000001;
  if ((v78 & 0xC000000000000001) != 0)
  {
    v71 = v44;
    v72 = v45;
    v73 = v46;
    v53 = (char *)MEMORY[0x1DF0C9FBC](0, v47);
  }
  else
  {
    v49 = *(void **)(v78 + 32);
    v50 = v44;
    v51 = v45;
    v52 = v46;
    v53 = v49;
  }
  v54 = v53;
  v55 = *(void **)&v53[OBJC_IVAR____TtCC8StocksUI11WelcomeView10BulletView_title];
  v56 = (unint64_t)objc_msgSend(v55, sel_accessibilityTraits);
  v57 = v56;
  v58 = *MEMORY[0x1E0DC4670];
  if (!v56)
  {
    if (!v58)
    {
      v57 = 0;
      goto LABEL_9;
    }
LABEL_7:
    v57 = v58 | v56;
    goto LABEL_9;
  }
  if ((v58 & ~v56) != 0)
    goto LABEL_7;
LABEL_9:
  objc_msgSend(v55, sel_setAccessibilityTraits_, v57);

  if (v48)
    v59 = (char *)MEMORY[0x1DF0C9FBC](1, v47);
  else
    v59 = (char *)*(id *)(v47 + 40);
  v60 = v59;
  v61 = *(void **)&v59[OBJC_IVAR____TtCC8StocksUI11WelcomeView10BulletView_title];
  v62 = (unint64_t)objc_msgSend(v61, sel_accessibilityTraits);
  v63 = v62;
  if (!v62)
  {
    if (!v58)
    {
      v63 = 0;
      goto LABEL_18;
    }
LABEL_16:
    v63 = v62 | v58;
    goto LABEL_18;
  }
  if ((v58 & ~v62) != 0)
    goto LABEL_16;
LABEL_18:
  objc_msgSend(v61, sel_setAccessibilityTraits_, v63);

  if (v48)
    v64 = (char *)MEMORY[0x1DF0C9FBC](2, v47);
  else
    v64 = (char *)*(id *)(v47 + 48);
  v65 = v64;
  v66 = *(void **)&v64[OBJC_IVAR____TtCC8StocksUI11WelcomeView10BulletView_title];
  v67 = (unint64_t)objc_msgSend(v66, sel_accessibilityTraits);
  v68 = v67;
  if (v67)
  {
    if ((v58 & ~v67) == 0)
      goto LABEL_27;
  }
  else if (!v58)
  {
    v68 = 0;
    goto LABEL_27;
  }
  v68 = v67 | v58;
LABEL_27:
  objc_msgSend(v66, sel_setAccessibilityTraits_, v68);
  swift_bridgeObjectRelease();

  v69 = *(id *)&v32[v75];
  objc_msgSend(v69, sel_startAnimating);

  return v32;
}

char *sub_1DC299F14(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  id v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  objc_super v21;

  v9 = OBJC_IVAR____TtCC8StocksUI11WelcomeView10TitleGroup_appIcon;
  v10 = objc_allocWithZone(MEMORY[0x1E0DC3890]);
  v11 = v4;
  *(_QWORD *)&v4[v9] = objc_msgSend(v10, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v12 = OBJC_IVAR____TtCC8StocksUI11WelcomeView10TitleGroup_welcomeLabel;
  *(_QWORD *)&v11[v12] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);

  v21.receiver = v11;
  v21.super_class = (Class)type metadata accessor for WelcomeView.TitleGroup();
  v13 = (char *)objc_msgSendSuper2(&v21, sel_initWithFrame_, a1, a2, a3, a4);
  v14 = *(_QWORD *)&v13[OBJC_IVAR____TtCC8StocksUI11WelcomeView10TitleGroup_appIcon];
  v15 = v13;
  objc_msgSend(v15, sel_addSubview_, v14);
  objc_msgSend(v15, sel_addSubview_, *(_QWORD *)&v15[OBJC_IVAR____TtCC8StocksUI11WelcomeView10TitleGroup_welcomeLabel]);
  objc_msgSend(v15, sel_setIsAccessibilityElement_, 1);
  v16 = v15;
  v17 = (unint64_t)objc_msgSend(v16, sel_accessibilityTraits);
  v18 = v17;
  v19 = *MEMORY[0x1E0DC4670];
  if (v17)
  {
    if ((v19 & ~v17) == 0)
      goto LABEL_7;
  }
  else if (!v19)
  {
    v18 = 0;
    goto LABEL_7;
  }
  v18 = v19 | v17;
LABEL_7:
  objc_msgSend(v16, sel_setAccessibilityTraits_, v18);

  return v16;
}

id sub_1DC29A254()
{
  return sub_1DC29A458(type metadata accessor for WelcomeView.TitleGroup);
}

char *sub_1DC29A298(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  id v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  objc_super v18;

  v9 = OBJC_IVAR____TtCC8StocksUI11WelcomeView10BulletView_image;
  v10 = objc_allocWithZone(MEMORY[0x1E0DC3890]);
  v11 = v4;
  *(_QWORD *)&v4[v9] = objc_msgSend(v10, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v12 = OBJC_IVAR____TtCC8StocksUI11WelcomeView10BulletView_title;
  *(_QWORD *)&v11[v12] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v13 = OBJC_IVAR____TtCC8StocksUI11WelcomeView10BulletView_blurb;
  *(_QWORD *)&v11[v13] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);

  v18.receiver = v11;
  v18.super_class = (Class)type metadata accessor for WelcomeView.BulletView();
  v14 = (char *)objc_msgSendSuper2(&v18, sel_initWithFrame_, a1, a2, a3, a4);
  v15 = *(_QWORD *)&v14[OBJC_IVAR____TtCC8StocksUI11WelcomeView10BulletView_image];
  v16 = v14;
  objc_msgSend(v16, sel_addSubview_, v15);
  objc_msgSend(v16, sel_addSubview_, *(_QWORD *)&v16[OBJC_IVAR____TtCC8StocksUI11WelcomeView10BulletView_title]);
  objc_msgSend(v16, sel_addSubview_, *(_QWORD *)&v16[OBJC_IVAR____TtCC8StocksUI11WelcomeView10BulletView_blurb]);

  return v16;
}

id sub_1DC29A44C()
{
  return sub_1DC29A458(type metadata accessor for WelcomeView.BulletView);
}

id sub_1DC29A458(uint64_t (*a1)(void))
{
  void *v1;
  objc_super v3;

  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t type metadata accessor for WelcomeView()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for WelcomeView.TitleGroup()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for WelcomeView.BulletView()
{
  return objc_opt_self();
}

void sub_1DC29A62C()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = OBJC_IVAR____TtCC8StocksUI11WelcomeView10BulletView_image;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3890]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v2 = OBJC_IVAR____TtCC8StocksUI11WelcomeView10BulletView_title;
  *(_QWORD *)&v0[v2] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v3 = OBJC_IVAR____TtCC8StocksUI11WelcomeView10BulletView_blurb;
  *(_QWORD *)&v0[v3] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);

  sub_1DC409838();
  __break(1u);
}

void sub_1DC29A720()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  objc_class *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  Class v13;

  v1 = OBJC_IVAR____TtC8StocksUI11WelcomeView_scrollView;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3C28]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v2 = OBJC_IVAR____TtC8StocksUI11WelcomeView_footer;
  *(_QWORD *)&v0[v2] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F58]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v3 = OBJC_IVAR____TtC8StocksUI11WelcomeView_titleGroup;
  *(_QWORD *)&v0[v3] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for WelcomeView.TitleGroup()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v4 = OBJC_IVAR____TtC8StocksUI11WelcomeView_bullet1;
  v5 = (objc_class *)type metadata accessor for WelcomeView.BulletView();
  *(_QWORD *)&v0[v4] = objc_msgSend(objc_allocWithZone(v5), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v6 = OBJC_IVAR____TtC8StocksUI11WelcomeView_bullet2;
  *(_QWORD *)&v0[v6] = objc_msgSend(objc_allocWithZone(v5), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v7 = OBJC_IVAR____TtC8StocksUI11WelcomeView_bullet3;
  *(_QWORD *)&v0[v7] = objc_msgSend(objc_allocWithZone(v5), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v8 = OBJC_IVAR____TtC8StocksUI11WelcomeView_continueButton;
  *(_QWORD *)&v0[v8] = objc_msgSend((id)objc_opt_self(), sel_largeButton);
  v9 = OBJC_IVAR____TtC8StocksUI11WelcomeView_activityIndicator;
  *(_QWORD *)&v0[v9] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3438]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v10 = OBJC_IVAR____TtC8StocksUI11WelcomeView_privacyIcon;
  *(_QWORD *)&v0[v10] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3890]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v11 = OBJC_IVAR____TtC8StocksUI11WelcomeView_privacyLink;
  type metadata accessor for TapDimmingTextView();
  *(_QWORD *)&v0[v11] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v12 = OBJC_IVAR____TtC8StocksUI11WelcomeView_onPrivacyTap;
  sub_1DC083594(0, (unint64_t *)&qword_1EDB2A930, MEMORY[0x1E0DEE9C0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DBC348]);
  *(_QWORD *)&v0[v12] = objc_msgSend(objc_allocWithZone(v13), sel_init);
  *(_QWORD *)&v0[OBJC_IVAR____TtC8StocksUI11WelcomeView_errorView] = 0;

  sub_1DC409838();
  __break(1u);
}

uint64_t sub_1DC29A9A8@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  void *v29;
  uint64_t v30;
  unint64_t v31;
  unsigned int v32;
  unsigned int *v33;
  id v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  double v38;
  double v39;
  uint64_t result;
  double v41;
  unsigned int v42;
  unsigned int *v43;
  id v44;
  void *v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  unsigned int *v51;
  unsigned int *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;

  v2 = v1;
  v60 = a1;
  sub_1DC092F50(0, &qword_1EDB27518, (void (*)(uint64_t))MEMORY[0x1E0DADD68]);
  MEMORY[0x1E0C80A78](v3);
  v58 = (char *)&v55 - v4;
  v57 = sub_1DC4039E8();
  v66 = *(_QWORD *)(v57 - 8);
  MEMORY[0x1E0C80A78](v57);
  v59 = (char *)&v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1DC3FFDD0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v56 = (char *)&v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC092F50(0, (unint64_t *)&unk_1EDB28A70, v9);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v55 - v11;
  v61 = sub_1DC402F98();
  v13 = *(_QWORD *)(v61 - 8);
  MEMORY[0x1E0C80A78](v61);
  v67 = (char *)&v55 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC092F50(0, &qword_1EDB28AC0, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v55 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v55 - v19;
  v21 = sub_1DC403454();
  v22 = *(_QWORD *)(v21 - 8);
  *(_QWORD *)&v23 = MEMORY[0x1E0C80A78](v21).n128_u64[0];
  v68 = (char *)&v55 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = objc_msgSend(v2, sel_articleID, v23);
  v26 = sub_1DC408A4C();
  v64 = v27;
  v65 = v26;

  v28 = objc_msgSend(v2, sel_sourceName);
  if (v28)
  {
    v29 = v28;
    v30 = sub_1DC408A4C();
    v62 = v31;
    v63 = v30;

  }
  else
  {
    v62 = 0xE000000000000000;
    v63 = 0;
  }
  v32 = objc_msgSend(v2, sel_isPaid);
  v33 = (unsigned int *)MEMORY[0x1E0DAD538];
  if (!v32)
    v33 = (unsigned int *)MEMORY[0x1E0DAD530];
  (*(void (**)(char *, _QWORD, uint64_t))(v22 + 104))(v68, *v33, v21);
  v34 = objc_msgSend(v2, sel_publishDate);
  if (v34)
  {
    v35 = v34;
    sub_1DC3FFFB0();

    v36 = sub_1DC3FFFEC();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v17, 0, 1, v36);
  }
  else
  {
    v36 = sub_1DC3FFFEC();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v17, 1, 1, v36);
  }
  sub_1DC1E4070((uint64_t)v17, (uint64_t)v20, &qword_1EDB28AC0, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
  sub_1DC3FFFEC();
  v37 = *(_QWORD *)(v36 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v20, 1, v36) != 1)
  {
    sub_1DC3FFF98();
    v39 = v38;
    result = (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v20, v36);
    v41 = v39 * 1000.0;
    if ((~*(_QWORD *)&v41 & 0x7FF0000000000000) != 0)
    {
      if (v41 <= -9.22337204e18)
      {
        __break(1u);
      }
      else if (v41 < 9.22337204e18)
      {
        goto LABEL_14;
      }
      __break(1u);
    }
    __break(1u);
    return result;
  }
  sub_1DC092F14((uint64_t)v20, &qword_1EDB28AC0, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
LABEL_14:
  objc_msgSend(v2, sel_publisherArticleVersion);
  v42 = objc_msgSend(v2, sel_isPressRelease);
  v43 = (unsigned int *)MEMORY[0x1E0DACE50];
  if (!v42)
    v43 = (unsigned int *)MEMORY[0x1E0DACE48];
  (*(void (**)(char *, _QWORD, uint64_t))(v13 + 104))(v67, *v43, v61);
  v44 = objc_msgSend(v2, sel_videoURL);
  if (v44)
  {
    v45 = v44;
    v46 = v56;
    sub_1DC3FFD94();

    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v12, v46, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v12, 0, 1, v6);
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 48))(v12, 1, v6);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v12, 1, 1, v6);
  }
  v47 = v59;
  v49 = v57;
  v48 = (uint64_t)v58;
  sub_1DC092F14((uint64_t)v12, (unint64_t *)&unk_1EDB28A70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  if ((objc_msgSend(v2, sel_respondsToSelector_, sel_role) & 1) != 0)
  {
    v50 = objc_msgSend(v2, sel_role);
    v51 = (unsigned int *)MEMORY[0x1E0DADD58];
    v52 = (unsigned int *)MEMORY[0x1E0DADD50];
    if (v50 != (id)3)
      v52 = (unsigned int *)MEMORY[0x1E0DADD60];
    if (v50 != (id)1)
      v51 = v52;
    v53 = v66;
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v66 + 104))(v48, *v51, v49);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v53 + 56))(v48, 0, 1, v49);
    (*(void (**)(char *, uint64_t, uint64_t))(v53 + 32))(v47, v48, v49);
  }
  else
  {
    v54 = v66;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v66 + 56))(v48, 1, 1, v49);
    (*(void (**)(char *, _QWORD, uint64_t))(v54 + 104))(v47, *MEMORY[0x1E0DADD60], v49);
    sub_1DC092F14(v48, &qword_1EDB27518, (void (*)(uint64_t))MEMORY[0x1E0DADD68]);
  }
  if ((objc_msgSend(v2, sel_respondsToSelector_, sel_hasAudioTrack) & 1) != 0)
    objc_msgSend(v2, sel_hasAudioTrack);
  return sub_1DC4032A4();
}

void sub_1DC29B00C(void *a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  id v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;

  v2 = v1;
  sub_1DC092F50(0, (unint64_t *)&qword_1EDB29940, (void (*)(uint64_t))MEMORY[0x1E0DADD48]);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v18 - v5;
  v7 = sub_1DC4039B8();
  v8 = *(_QWORD *)(v7 - 8);
  *(_QWORD *)&v9 = MEMORY[0x1E0C80A78](v7).n128_u64[0];
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = objc_msgSend(v2, sel_sourceChannel, v9);
  v13 = v12;
  if (v12)
  {
    v14 = objc_msgSend(v12, sel_identifier);
    swift_unknownObjectRelease();
    sub_1DC408A4C();

    v13 = (void *)sub_1DC408A1C();
    swift_bridgeObjectRelease();
  }
  v19 = objc_msgSend(a1, sel_purchaseLookUpEntryForTagID_, v13);

  if (v19)
  {
    sub_1DC1790F4();

  }
  else
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v11, *MEMORY[0x1E0DADCF0], v7);
    v15 = *MEMORY[0x1E0DADD38];
    v16 = sub_1DC4039DC();
    v17 = *(_QWORD *)(v16 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v17 + 104))(v6, v15, v16);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v6, 0, 1, v16);
    sub_1DC403754();
  }
}

uint64_t sub_1DC29B210()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  char *v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v1 = v0;
  sub_1DC092F50(0, (unint64_t *)&unk_1EDB28A70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v6 = MEMORY[0x1E0C80A78](v5).n128_u64[0];
  v8 = (char *)&v16 - v7;
  v9 = objc_msgSend(v1, sel_sourceName, v6);
  if (v9)
  {
    v10 = v9;
    sub_1DC408A4C();

  }
  v11 = objc_msgSend(v1, sel_contentURL);
  if (v11)
  {
    v12 = v11;
    sub_1DC3FFD94();

    v13 = sub_1DC3FFDD0();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v4, 0, 1, v13);
  }
  else
  {
    v13 = sub_1DC3FFDD0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v4, 1, 1, v13);
  }
  sub_1DC1E4070((uint64_t)v4, (uint64_t)v8, (unint64_t *)&unk_1EDB28A70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  sub_1DC3FFDD0();
  v14 = *(_QWORD *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v8, 1, v13) == 1)
  {
    sub_1DC092F14((uint64_t)v8, (unint64_t *)&unk_1EDB28A70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  }
  else
  {
    sub_1DC3FFD7C();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v8, v13);
  }
  return sub_1DC403538();
}

uint64_t FCHeadlineProviding.referringArticleData2()()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  char *v9;
  id v10;
  id v11;
  unsigned int *v12;
  unsigned int *v13;
  uint64_t v15;

  v1 = v0;
  sub_1DC092F50(0, &qword_1EDB27518, (void (*)(uint64_t))MEMORY[0x1E0DADD68]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v15 - v3;
  v5 = sub_1DC4039E8();
  v6 = *(_QWORD *)(v5 - 8);
  *(_QWORD *)&v7 = MEMORY[0x1E0C80A78](v5).n128_u64[0];
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = objc_msgSend(v1, sel_articleID, v7);
  sub_1DC408A4C();

  objc_msgSend(v1, sel_publisherArticleVersion);
  if ((objc_msgSend(v1, sel_respondsToSelector_, sel_role) & 1) != 0)
  {
    v11 = objc_msgSend(v1, sel_role);
    v12 = (unsigned int *)MEMORY[0x1E0DADD58];
    v13 = (unsigned int *)MEMORY[0x1E0DADD50];
    if (v11 != (id)3)
      v13 = (unsigned int *)MEMORY[0x1E0DADD60];
    if (v11 != (id)1)
      v12 = v13;
    (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v4, *v12, v5);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v9, v4, v5);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
    (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v9, *MEMORY[0x1E0DADD60], v5);
    sub_1DC092F14((uint64_t)v4, &qword_1EDB27518, (void (*)(uint64_t))MEMORY[0x1E0DADD68]);
  }
  return sub_1DC403664();
}

uint64_t sub_1DC29B5F8()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  int v16;
  unsigned int *v17;
  uint64_t v19;

  v1 = sub_1DC403AA8();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v19 - v6;
  v8 = (void (*)(uint64_t))MEMORY[0x1E0DAE018];
  sub_1DC092F50(0, (unint64_t *)&qword_1EDB299A0, (void (*)(uint64_t))MEMORY[0x1E0DAE018]);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v19 - v13;
  sub_1DC29B7A8(v0, (uint64_t)&v19 - v13);
  v15 = sub_1DC403B68();
  v16 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v14, 1, v15);
  v17 = (unsigned int *)MEMORY[0x1E0DADE68];
  if (v16 != 1)
    v17 = (unsigned int *)MEMORY[0x1E0DADE70];
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v7, *v17, v1);
  (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v4, v7, v1);
  sub_1DC29B878((uint64_t)v14, (uint64_t)v11);
  sub_1DC403A90();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v7, v1);
  return sub_1DC092F14((uint64_t)v14, (unint64_t *)&qword_1EDB299A0, v8);
}

uint64_t sub_1DC29B7A8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  unsigned int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  switch((unint64_t)objc_msgSend(a1, sel_storyType))
  {
    case 2uLL:
      v7 = (unsigned int *)MEMORY[0x1E0DAE010];
      goto LABEL_6;
    case 3uLL:
      v7 = (unsigned int *)MEMORY[0x1E0DAE000];
      goto LABEL_6;
    case 4uLL:
      v7 = (unsigned int *)MEMORY[0x1E0DAE008];
LABEL_6:
      v8 = *v7;
      v9 = sub_1DC403B68();
      v10 = *(_QWORD *)(v9 - 8);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 104))(a2, v8, v9);
      v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
      v5 = a2;
      v6 = 0;
      v3 = v9;
      break;
    default:
      v3 = sub_1DC403B68();
      v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56);
      v5 = a2;
      v6 = 1;
      break;
  }
  return v4(v5, v6, 1, v3);
}

uint64_t sub_1DC29B878(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1DC092F50(0, (unint64_t *)&qword_1EDB299A0, (void (*)(uint64_t))MEMORY[0x1E0DAE018]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1DC29B8CC(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  _QWORD v39[9];
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  v59 = a2;
  v50 = sub_1DC400010();
  v49 = *(_QWORD *)(v50 - 8);
  MEMORY[0x1E0C80A78](v50);
  v47 = (char *)v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = type metadata accessor for PreBuyFlowRouteModel();
  MEMORY[0x1E0C80A78](v46);
  v51 = (char *)v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC092F50(0, (unint64_t *)&qword_1EDB28DE0, (void (*)(uint64_t))MEMORY[0x1E0DAF0D0]);
  MEMORY[0x1E0C80A78](v5);
  v52 = (char *)v39 - v6;
  v7 = type metadata accessor for WatchlistCreationRouteModel();
  MEMORY[0x1E0C80A78](v7);
  v48 = (char *)v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for CampaignRouteModel();
  MEMORY[0x1E0C80A78](v9);
  v44 = (char *)v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1DC4059F8();
  v55 = *(_QWORD *)(v11 - 8);
  v56 = v11;
  MEMORY[0x1E0C80A78](v11);
  v54 = (char *)v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = type metadata accessor for StocksActivity.StockFeed(0);
  MEMORY[0x1E0C80A78](v40);
  v41 = (char *)v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v45 = (char *)v39 - v15;
  sub_1DC092F50(0, (unint64_t *)&unk_1EDB28A70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  MEMORY[0x1E0C80A78](v16);
  v39[1] = (char *)v39 - v17;
  sub_1DC092F50(0, &qword_1EDB426D0, (void (*)(uint64_t))MEMORY[0x1E0DBAF60]);
  MEMORY[0x1E0C80A78](v18);
  v39[2] = (char *)v39 - v19;
  v43 = sub_1DC407EAC();
  v42 = *(_QWORD *)(v43 - 8);
  MEMORY[0x1E0C80A78](v43);
  v39[6] = (char *)v39 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC1449E0();
  MEMORY[0x1E0C80A78](v21);
  v39[7] = (char *)v39 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = sub_1DC3FFDD0();
  v53 = *(_QWORD *)(v57 - 8);
  MEMORY[0x1E0C80A78](v57);
  MEMORY[0x1E0C80A78](v23);
  v39[0] = (char *)v39 - v24;
  MEMORY[0x1E0C80A78](v25);
  v39[4] = (char *)v39 - v26;
  MEMORY[0x1E0C80A78](v27);
  v39[5] = (char *)v39 - v28;
  v29 = sub_1DC401BB8();
  MEMORY[0x1E0C80A78](v29);
  v39[8] = (char *)v39 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC092F50(0, &qword_1EDB292E0, (void (*)(uint64_t))MEMORY[0x1E0D57A68]);
  MEMORY[0x1E0C80A78](v31);
  v32 = type metadata accessor for StocksActivity.Article(0);
  MEMORY[0x1E0C80A78](v32);
  v39[3] = (char *)v39 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v34);
  MEMORY[0x1E0C80A78](v35);
  MEMORY[0x1E0C80A78](v36);
  v37 = type metadata accessor for StocksActivity(0);
  MEMORY[0x1E0C80A78](v37);
  sub_1DC143F58();
  v58 = a1;
  sub_1DC406838();
  v38 = (char *)&loc_1DC29BE1C + dword_1DC29CE0C[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1DC29BE2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = *(_QWORD *)(v0 + 40);
  swift_bridgeObjectRelease();
  if (v2)
  {
    __swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)(v1 - 192) + 16), *(_QWORD *)(*(_QWORD *)(v1 - 192) + 40));
    sub_1DC0A3390(0, (unint64_t *)&unk_1EDB28C50);
    sub_1DC402608();
    if (!*(_QWORD *)(v1 - 104))
    {
      __break(1u);
      JUMPOUT(0x1DC29CE04);
    }
    sub_1DC097DD0((__int128 *)(v1 - 128), v1 - 176);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 - 176), *(_QWORD *)(v1 - 152));
    sub_1DC400A48();
    swift_bridgeObjectRelease();
    sub_1DC0824D4(v1 - 176, v1 - 128);
    v3 = swift_allocObject();
    sub_1DC097DD0((__int128 *)(v1 - 128), v3 + 16);
    v4 = (void *)sub_1DC402C80();
    sub_1DC402D04();
    swift_release();
    swift_release();
    swift_release();

    __swift_destroy_boxed_opaque_existential_1(v1 - 176);
  }
  v6 = *(_QWORD *)(v1 - 232);
  v5 = *(_QWORD *)(v1 - 224);
  v7 = *(_QWORD *)(v1 - 216);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v5 + 104))(v6, *MEMORY[0x1E0DBA288], v7);
  sub_1DC231984(v6);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v6, v7);
  v8 = *(_QWORD *)(v1 - 184);
  v9 = *MEMORY[0x1E0DBA4E8];
  v10 = sub_1DC405AA0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v8, v9, v10);
}

uint64_t sub_1DC29CE44(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _QWORD v12[2];

  sub_1DC092F50(0, &qword_1EDB28E40, (void (*)(uint64_t))MEMORY[0x1E0DAF270]);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v12 - v5;
  v7 = sub_1DC40124C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC191CF8(a1, (uint64_t)v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
    return sub_1DC092F14((uint64_t)v6, &qword_1EDB28E40, (void (*)(uint64_t))MEMORY[0x1E0DAF270]);
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1DC400A6C();
  sub_1DC406F7C();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

void sub_1DC29CF9C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD v13[6];

  v13[5] = a2;
  v3 = type metadata accessor for StocksActivity.StockFeed(0);
  MEMORY[0x1E0C80A78](v3);
  v4 = sub_1DC3FFDD0();
  MEMORY[0x1E0C80A78](v4);
  v5 = sub_1DC401BB8();
  MEMORY[0x1E0C80A78](v5);
  v13[1] = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC092F50(0, &qword_1EDB292E0, (void (*)(uint64_t))MEMORY[0x1E0D57A68]);
  MEMORY[0x1E0C80A78](v7);
  v13[2] = (char *)v13 - v8;
  v9 = type metadata accessor for StocksActivity.Article(0);
  MEMORY[0x1E0C80A78](v9);
  MEMORY[0x1E0C80A78](v10);
  v11 = type metadata accessor for StocksActivity(0);
  MEMORY[0x1E0C80A78](v11);
  sub_1DC143F58();
  v13[3] = a1;
  sub_1DC406838();
  v12 = (char *)sub_1DC29D178 + 4 * byte_1DC4211E8[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1DC29D178()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1DC0926D8(v0, type metadata accessor for StocksActivity);
  v2 = *MEMORY[0x1E0DB98A8];
  v3 = sub_1DC4054DC();
  return (*(uint64_t (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(*(_QWORD *)(v1 - 88), v2, v3);
}

void sub_1DC29D224()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1DC092ED0(v0, v1, type metadata accessor for StocksActivity.StockFeed);
  v3 = sub_1DC231D68(v1, *(_QWORD *)(v2 - 104));
  sub_1DC0926D8(v1, type metadata accessor for StocksActivity.StockFeed);
  if (v3)
    **(_QWORD **)(v2 - 88) = v3;
  sub_1DC4054DC();
  JUMPOUT(0x1DC29D1FCLL);
}

id *sub_1DC29D498()
{
  id *v0;

  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 2));

  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 10));
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 16));
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 21));
  swift_unknownObjectRelease();
  return v0;
}

uint64_t sub_1DC29D4F4()
{
  sub_1DC29D498();
  return swift_deallocClassInstance();
}

uint64_t sub_1DC29D514(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = sub_1DC081B48(&qword_1EDB3F198, a2, (uint64_t (*)(uint64_t))type metadata accessor for Router, (uint64_t)&unk_1DC421264);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1DC29D550()
{
  return sub_1DC081B48((unint64_t *)&unk_1EDB2C5A0, 255, type metadata accessor for StocksActivity, (uint64_t)&protocol conformance descriptor for StocksActivity);
}

uint64_t sub_1DC29D588(uint64_t a1)
{
  destroy for StocksActivity.Alert(a1);
  return a1;
}

uint64_t sub_1DC29D5BC(uint64_t a1, uint64_t a2)
{
  __swift_memcpy41_8(a2, a1);
  return a2;
}

uint64_t sub_1DC29D5F8()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocObject();
}

uint64_t sub_1DC29D61C(uint64_t a1)
{
  uint64_t v1;

  return sub_1DC29CE44(a1, (_QWORD *)(v1 + 16));
}

void destroy for MastheadViewLayoutAttributes(uint64_t a1)
{

}

uint64_t initializeWithCopy for MastheadViewLayoutAttributes(uint64_t a1, uint64_t a2)
{
  __int128 v3;
  __int128 v4;
  void *v5;
  id v6;

  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  v5 = *(void **)(a2 + 80);
  *(_QWORD *)(a1 + 80) = v5;
  v6 = v5;
  return a1;
}

_QWORD *assignWithCopy for MastheadViewLayoutAttributes(_QWORD *a1, _QWORD *a2)
{
  void *v3;
  void *v4;
  id v5;

  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  a1[7] = a2[7];
  a1[8] = a2[8];
  a1[9] = a2[9];
  v3 = (void *)a2[10];
  v4 = (void *)a1[10];
  a1[10] = v3;
  v5 = v3;

  return a1;
}

uint64_t assignWithTake for MastheadViewLayoutAttributes(uint64_t a1, uint64_t a2)
{
  __int128 v3;
  __int128 v4;
  void *v5;

  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  v5 = *(void **)(a1 + 80);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);

  return a1;
}

uint64_t getEnumTagSinglePayload for MastheadViewLayoutAttributes(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 88))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 80);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MastheadViewLayoutAttributes(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 88) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 80) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 88) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for MastheadViewLayoutAttributes()
{
  return &type metadata for MastheadViewLayoutAttributes;
}

uint64_t OfflineAlertable.acceptButton.getter()
{
  uint64_t ObjCClassFromMetadata;
  id v1;
  uint64_t v2;

  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v2 = sub_1DC3FFC80();

  return v2;
}

uint64_t OfflineAlertable.neutralButton.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  void (*v11)(char *, uint64_t);
  uint64_t ObjCClassFromMetadata;
  id v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, unint64_t, uint64_t);

  v0 = sub_1DC407E94();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v20 - v5;
  v7 = sub_1DC407EA0();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v6, *MEMORY[0x1E0D5D6C8], v0);
  v8 = *(_QWORD *)(v7 + 16);
  if (!v8)
  {
    (*(void (**)(char *, uint64_t))(v1 + 8))(v6, v0);
LABEL_11:
    swift_bridgeObjectRelease();
    return 0;
  }
  v9 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v21 = v7;
  v23 = *(void (**)(char *, unint64_t, uint64_t))(v1 + 16);
  v23(v3, v7 + v9, v0);
  sub_1DC29DB3C();
  v10 = sub_1DC4089F8();
  v11 = *(void (**)(char *, uint64_t))(v1 + 8);
  v11(v3, v0);
  if ((v10 & 1) != 0)
  {
LABEL_3:
    v11(v6, v0);
    swift_bridgeObjectRelease();
    type metadata accessor for Localized();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    v13 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
    v14 = sub_1DC3FFC80();

    return v14;
  }
  if (v8 == 1)
  {
LABEL_10:
    v11(v6, v0);
    goto LABEL_11;
  }
  v22 = *(_QWORD *)(v1 + 72);
  v15 = v21 + v22 + v9;
  v16 = 1;
  while (1)
  {
    result = ((uint64_t (*)(char *, unint64_t, uint64_t))v23)(v3, v15, v0);
    v18 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    v19 = sub_1DC4089F8();
    v11(v3, v0);
    if ((v19 & 1) != 0)
      goto LABEL_3;
    ++v16;
    v15 += v22;
    if (v18 == v8)
      goto LABEL_10;
  }
  __break(1u);
  return result;
}

unint64_t sub_1DC29DB3C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1F034E050;
  if (!qword_1F034E050)
  {
    v1 = sub_1DC407E94();
    result = MEMORY[0x1DF0CAB8C](MEMORY[0x1E0D5D6D8], v1);
    atomic_store(result, (unint64_t *)&qword_1F034E050);
  }
  return result;
}

uint64_t sub_1DC29DB90()
{
  uint64_t ObjCClassFromMetadata;
  id v1;
  uint64_t v2;

  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v2 = sub_1DC3FFC80();

  return v2;
}

uint64_t sub_1DC29DC48()
{
  return OfflineAlertable.neutralButton.getter();
}

uint64_t initializeBufferWithCopyOfBuffer for OfflineAlertable(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1DC407EAC();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t destroy for OfflineAlertable(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1DC407EAC();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t initializeWithCopy for OfflineAlertable(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1DC407EAC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for OfflineAlertable(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1DC407EAC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for OfflineAlertable(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1DC407EAC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for OfflineAlertable(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1DC407EAC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for OfflineAlertable()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC29DDEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1DC407EAC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for OfflineAlertable()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC29DE34(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1DC407EAC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for OfflineAlertable()
{
  uint64_t result;

  result = qword_1F0350A88;
  if (!qword_1F0350A88)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1DC29DEB0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1DC407EAC();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1DC29DF18()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1DC29DF3C()
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    swift_retain();
    swift_release();
    sub_1DC4014D4();
    return swift_release();
  }
  return result;
}

uint64_t sub_1DC29DFA4()
{
  _OWORD v1[2];

  sub_1DC4033B8();
  sub_1DC081B48(&qword_1F0350AC8, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD458], MEMORY[0x1E0DAD450]);
  memset(v1, 0, sizeof(v1));
  sub_1DC4015DC();
  return sub_1DC150744((uint64_t)v1);
}

uint64_t IdentificationResetManager.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();
  swift_release();
  return v0;
}

uint64_t IdentificationResetManager.__deallocating_deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1DC29E084(uint64_t a1, uint64_t a2)
{
  return sub_1DC081B48(&qword_1EDB36B00, a2, (uint64_t (*)(uint64_t))type metadata accessor for IdentificationResetManager, (uint64_t)&protocol conformance descriptor for IdentificationResetManager);
}

uint64_t method lookup function for IdentificationResetManager()
{
  return swift_lookUpClassMethod();
}

ValueMetadata *type metadata accessor for WatchlistSwitcherModel()
{
  return &type metadata for WatchlistSwitcherModel;
}

ValueMetadata *type metadata accessor for SectionHeaderViewModel()
{
  return &type metadata for SectionHeaderViewModel;
}

void sub_1DC29E0DC()
{
  uint64_t ObjCClassFromMetadata;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v2 = sub_1DC3FFC80();
  v4 = v3;

  qword_1EDB5E140 = v2;
  *(_QWORD *)algn_1EDB5E148 = v4;
}

uint64_t sub_1DC29E1A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a2;
  swift_retain();
  sub_1DC26C9A0((uint64_t)sub_1DC116D08, v4);
  return swift_release();
}

uint64_t sub_1DC29E284()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

void sub_1DC29E2A8(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  id v13;
  void *v14;
  void *v15;
  id v16;
  void *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  _OWORD v24[2];
  _OWORD v25[2];

  v20 = a2;
  v5 = sub_1DC407294();
  v21 = *(_QWORD *)(v5 - 8);
  v22 = v5;
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1DC4059F8();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (void *)sub_1DC408A1C();
  v13 = objc_msgSend(a1, sel_objectForKey_, v12);

  if (v13)
  {
    sub_1DC409634();
    swift_unknownObjectRelease();
    sub_1DC0FA0E4(v24, v25);
    sub_1DC4056E0();
    swift_dynamicCast();
    v14 = v23;
    (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E0DBA290], v8);
    sub_1DC40565C();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    v15 = (void *)sub_1DC408A1C();
    v16 = objc_msgSend(a1, sel_objectForKey_, v15);

    if (v16)
    {
      sub_1DC409634();
      swift_unknownObjectRelease();
      sub_1DC0FA0E4(v24, v25);
      type metadata accessor for TickerViewController();
      swift_dynamicCast();
      v17 = v23;
      sub_1DC4055CC();
      v18 = (void *)sub_1DC405074();
      swift_release();
      v19 = swift_allocObject();
      *(_QWORD *)(v19 + 16) = v20;
      *(_QWORD *)(v19 + 24) = a3;
      swift_retain();
      sub_1DC40727C();
      sub_1DC26C4AC(0x3FF0000000000000, 1, v18, (uint64_t)v7, (uint64_t)sub_1DC29E598, v19, 1.0);

      swift_release();
      (*(void (**)(char *, uint64_t))(v21 + 8))(v7, v22);
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_1DC29E574()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DC29E598()
{
  uint64_t v0;

  return sub_1DC29E1A4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t BilingualFeedAlert.title.getter()
{
  uint64_t ObjCClassFromMetadata;
  id v1;
  uint64_t v2;

  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1DC3FFC80();

  v2 = sub_1DC408A70();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t BilingualFeedAlert.message.getter()
{
  uint64_t ObjCClassFromMetadata;
  id v1;
  uint64_t v2;

  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1DC3FFC80();

  v2 = sub_1DC408A70();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t BilingualFeedAlert.preferredActionButton.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *MEMORY[0x1E0DB9130];
  v3 = sub_1DC4050F8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

uint64_t BilingualFeedAlert.rejectButton.getter()
{
  uint64_t ObjCClassFromMetadata;
  id v1;
  uint64_t v2;

  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v2 = sub_1DC3FFC80();

  return v2;
}

uint64_t BilingualFeedAlert.acceptButton.getter()
{
  uint64_t ObjCClassFromMetadata;
  id v1;
  uint64_t v2;

  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v2 = sub_1DC3FFC80();

  return v2;
}

uint64_t sub_1DC29E92C()
{
  return BilingualFeedAlert.title.getter();
}

uint64_t sub_1DC29E940()
{
  return BilingualFeedAlert.message.getter();
}

uint64_t sub_1DC29E954()
{
  uint64_t ObjCClassFromMetadata;
  id v1;
  uint64_t v2;

  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v2 = sub_1DC3FFC80();

  return v2;
}

uint64_t sub_1DC29EA08()
{
  uint64_t ObjCClassFromMetadata;
  id v1;
  uint64_t v2;

  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v2 = sub_1DC3FFC80();

  return v2;
}

ValueMetadata *type metadata accessor for BilingualFeedAlert()
{
  return &type metadata for BilingualFeedAlert;
}

ValueMetadata *type metadata accessor for FeedColorPalette()
{
  return &type metadata for FeedColorPalette;
}

uint64_t sub_1DC29EAFC()
{
  uint64_t result;

  result = sub_1DC29EB18();
  qword_1EDB5E1C8 = result;
  return result;
}

uint64_t sub_1DC29EB18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t inited;
  void *v9;
  uint64_t v10;
  void *v11;
  id v12;
  id v13;
  unint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  id v18;
  uint64_t v19;
  void **v20;
  uint64_t v21;
  void *v22;
  void *v23;
  id v24;
  id v25;
  uint64_t v26;
  void *v27;
  id v28;
  id v29;
  unint64_t v30;
  void *v31;
  void *v32;
  double v33;
  double v34;
  double v35;
  double v36;
  id v37;
  double *v38;
  uint64_t v39;
  void *v40;
  id v41;
  uint64_t result;
  id v43;
  __int128 v44;
  _QWORD v45[26];

  v0 = sub_1DC400118();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v45[-2] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC4000DC();
  v4 = sub_1DC400094();
  v6 = v5;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  if (!v6)
    return 0;
  v7 = objc_msgSend((id)objc_opt_self(), sel_preferredFontDescriptorWithTextStyle_, *MEMORY[0x1E0DC4A88]);
  sub_1DC29F038(0, &qword_1EDB40098, (unint64_t *)&unk_1EDB3FA98, type metadata accessor for AttributeName);
  inited = swift_initStackObject();
  v44 = xmmword_1DC40DC10;
  *(_OWORD *)(inited + 16) = xmmword_1DC40DC10;
  v9 = (void *)*MEMORY[0x1E0DC13C0];
  *(_QWORD *)(inited + 32) = *MEMORY[0x1E0DC13C0];
  sub_1DC29F038(0, &qword_1EDB421A0, &qword_1EDB42170, type metadata accessor for TraitKey);
  v10 = swift_initStackObject();
  *(_OWORD *)(v10 + 16) = v44;
  v11 = (void *)*MEMORY[0x1E0DC1458];
  *(_QWORD *)(v10 + 32) = *MEMORY[0x1E0DC1458];
  *(_QWORD *)(v10 + 40) = *MEMORY[0x1E0DC1448];
  v12 = v9;
  v13 = v11;
  v14 = sub_1DC1A2040(v10);
  sub_1DC29F090();
  *(_QWORD *)(inited + 64) = v15;
  *(_QWORD *)(inited + 40) = v14;
  sub_1DC1A2144(inited);
  type metadata accessor for AttributeName(0);
  sub_1DC080808((unint64_t *)&unk_1EDB3FA70, (uint64_t (*)(uint64_t))type metadata accessor for AttributeName, (uint64_t)&unk_1DC40D884);
  v16 = (void *)sub_1DC408980();
  swift_bridgeObjectRelease();
  v17 = objc_msgSend(v7, sel_fontDescriptorByAddingAttributes_, v16);

  v18 = objc_msgSend((id)objc_opt_self(), sel_fontWithDescriptor_size_, v17, 0.0);
  sub_1DC29F038(0, (unint64_t *)&qword_1EDB40090, (unint64_t *)&qword_1EDB3F9B0, type metadata accessor for Key);
  v19 = swift_initStackObject();
  v20 = (void **)MEMORY[0x1E0DC1140];
  *(_OWORD *)(v19 + 16) = xmmword_1DC40C740;
  v21 = v4;
  v22 = *v20;
  *(_QWORD *)(v19 + 32) = *v20;
  v23 = (void *)objc_opt_self();
  v24 = v22;
  v25 = objc_msgSend(v23, sel_blackColor);
  v26 = sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FB30);
  *(_QWORD *)(v19 + 40) = v25;
  v27 = (void *)*MEMORY[0x1E0DC1138];
  *(_QWORD *)(v19 + 64) = v26;
  *(_QWORD *)(v19 + 72) = v27;
  *(_QWORD *)(v19 + 104) = sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FB00);
  *(_QWORD *)(v19 + 80) = v18;
  v28 = v27;
  v29 = v18;
  v30 = sub_1DC0FA3C4(v19);
  v31 = (void *)sub_1DC408A1C();
  type metadata accessor for Key(0);
  sub_1DC080808((unint64_t *)&qword_1EDB3F988, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1DC40D90C);
  v32 = (void *)sub_1DC408980();
  objc_msgSend(v31, sel_sizeWithAttributes_, v32);
  v34 = v33;
  v36 = v35;

  v37 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3828]), sel_initWithSize_, v34, v36);
  v38 = (double *)swift_allocObject();
  v38[2] = v34;
  v38[3] = v36;
  *((_QWORD *)v38 + 4) = v21;
  *((_QWORD *)v38 + 5) = v6;
  *((_QWORD *)v38 + 6) = v30;
  v39 = swift_allocObject();
  *(_QWORD *)(v39 + 16) = sub_1DC29F264;
  *(_QWORD *)(v39 + 24) = v38;
  v45[4] = sub_1DC29F284;
  v45[5] = v39;
  v45[0] = MEMORY[0x1E0C809B0];
  v45[1] = 1107296256;
  v45[2] = sub_1DC28BC54;
  v45[3] = &block_descriptor_28;
  v40 = _Block_copy(v45);
  swift_retain();
  swift_release();
  v41 = objc_msgSend(v37, sel_imageWithActions_, v40);
  _Block_release(v40);
  LOBYTE(v40) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v40 & 1) == 0)
  {
    v43 = objc_msgSend(v41, sel_imageWithRenderingMode_, 2);
    swift_release();

    return (uint64_t)v43;
  }
  __break(1u);
  return result;
}

void sub_1DC29F038(uint64_t a1, unint64_t *a2, unint64_t *a3, void (*a4)(uint64_t))
{
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    sub_1DC14290C(255, a3, a4);
    v5 = sub_1DC4099C4();
    if (!v6)
      atomic_store(v5, a2);
  }
}

void sub_1DC29F090()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB42148)
  {
    type metadata accessor for TraitKey(255);
    sub_1DC080808((unint64_t *)&unk_1EDB3FA18, (uint64_t (*)(uint64_t))type metadata accessor for TraitKey, (uint64_t)&unk_1DC40D8C8);
    v0 = sub_1DC4089A4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB42148);
  }
}

void sub_1DC29F110(void *a1, double a2, double a3)
{
  CGContext *v6;
  CGContext *v7;
  void *v8;
  id v9;

  v6 = (CGContext *)objc_msgSend(a1, sel_CGContext);
  CGContextSetShouldAntialias(v6, 1);

  v7 = (CGContext *)objc_msgSend(a1, sel_CGContext);
  CGContextSetAllowsAntialiasing(v7, 1);

  v8 = (void *)sub_1DC408A1C();
  type metadata accessor for Key(0);
  sub_1DC080808((unint64_t *)&qword_1EDB3F988, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1DC40D90C);
  v9 = (id)sub_1DC408980();
  objc_msgSend(v8, sel_drawAtPoint_withAttributes_, v9, (a2 - a2) * 0.5, (a3 - a3) * 0.5);

}

uint64_t sub_1DC29F238()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1DC29F264(void *a1)
{
  uint64_t v1;

  sub_1DC29F110(a1, *(double *)(v1 + 16), *(double *)(v1 + 24));
}

uint64_t sub_1DC29F274()
{
  return swift_deallocObject();
}

uint64_t sub_1DC29F284(uint64_t a1)
{
  uint64_t v1;

  return sub_1DC28BC24(a1, *(uint64_t (**)(void))(v1 + 16));
}

void destroy for ForYouFeedFailedBlueprintModifier(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

}

_QWORD *initializeWithCopy for ForYouFeedFailedBlueprintModifier(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = (void *)a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  v6 = v5;
  return a1;
}

_QWORD *assignWithCopy for ForYouFeedFailedBlueprintModifier(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_retain();
  swift_release();
  v4 = (void *)a2[5];
  v5 = (void *)a1[5];
  a1[5] = v4;
  v6 = v4;

  return a1;
}

uint64_t assignWithTake for ForYouFeedFailedBlueprintModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  v5 = *(void **)(a1 + 40);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);

  return a1;
}

ValueMetadata *type metadata accessor for ForYouFeedFailedBlueprintModifier()
{
  return &type metadata for ForYouFeedFailedBlueprintModifier;
}

uint64_t sub_1DC29F428(uint64_t a1, void (*a2)(uint64_t *), uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  unsigned int (*v32)(char *, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v35;
  char v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(char *, uint64_t, uint64_t);
  char *v54;
  uint64_t *v55;
  char *v56;
  void (*v57)(char *, uint64_t);
  uint64_t v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  char *v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  void (*v84)(uint64_t *);
  uint64_t v85;
  __int128 v86;
  uint64_t v87;
  _QWORD v88[2];

  v83 = a3;
  v84 = a2;
  v85 = a1;
  v4 = sub_1DC404984();
  v73 = *(_QWORD *)(v4 - 8);
  v74 = v4;
  MEMORY[0x1E0C80A78](v4);
  v72 = (char *)&v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0FE574(0, &qword_1EDB2A288, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB9A28]);
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v10 = (uint64_t *)((char *)&v62 - v9);
  sub_1DC106D6C();
  MEMORY[0x1E0C80A78](v11);
  v70 = (char *)&v62 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = type metadata accessor for ForYouFeedModel();
  MEMORY[0x1E0C80A78](v71);
  v68 = (char *)&v62 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = type metadata accessor for ForYouFeedSectionDescriptor();
  MEMORY[0x1E0C80A78](v78);
  v75 = (char *)&v62 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1DC407EAC();
  v80 = *(_QWORD *)(v15 - 8);
  v81 = v15;
  MEMORY[0x1E0C80A78](v15);
  v79 = (uint64_t)&v62 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0FE574(0, (unint64_t *)&qword_1EDB2AB80, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790]);
  v18 = v17;
  v77 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v76 = (char *)&v62 - v19;
  sub_1DC10B21C();
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v62 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0FE574(0, (unint64_t *)&qword_1EDB29D00, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60]);
  v24 = v23;
  v25 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  v69 = (char *)&v62 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v27);
  v29 = (char *)&v62 - v28;
  v86 = *(_OWORD *)(v3 + 16);
  v67 = v3;
  v87 = *(_QWORD *)(v3 + 32);
  v30 = v18;
  v31 = v85;
  sub_1DC406CC4();
  v82 = v25;
  v32 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48);
  v33 = v24;
  if (v32(v22, 1, v24) == 1)
  {
    sub_1DC29FDC0((uint64_t)v22);
    sub_1DC29FDFC();
    *v10 = swift_allocError();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E0DB99F0], v7);
    v84(v10);
    return (*(uint64_t (**)(uint64_t *, uint64_t))(v8 + 8))(v10, v7);
  }
  else
  {
    v64 = v10;
    v65 = v8;
    v66 = v7;
    (*(void (**)(char *, char *, uint64_t))(v82 + 32))(v29, v22, v24);
    v35 = sub_1DC0C3B5C((uint64_t)v29);
    if ((v36 & 1) != 0)
    {
      sub_1DC29FDFC();
      v58 = swift_allocError();
      v59 = v64;
      *v64 = v58;
      v60 = v65;
      v61 = v66;
      (*(void (**)(uint64_t *, _QWORD, uint64_t))(v65 + 104))(v59, *MEMORY[0x1E0DB99F0], v66);
      v84(v59);
      (*(void (**)(uint64_t *, uint64_t))(v60 + 8))(v59, v61);
      return (*(uint64_t (**)(char *, uint64_t))(v82 + 8))(v29, v33);
    }
    else
    {
      v37 = v35;
      v38 = *(void (**)(char *, uint64_t, uint64_t))(v77 + 16);
      v63 = v30;
      v38(v76, v31, v30);
      v39 = v79;
      sub_1DC29FB48(v37, v79);
      swift_storeEnumTagMultiPayload();
      sub_1DC106E20();
      sub_1DC0FF574(0);
      v41 = v40;
      v42 = swift_allocObject();
      *(_OWORD *)(v42 + 16) = xmmword_1DC40DC10;
      sub_1DC26A068();
      v44 = v68;
      v45 = &v68[*(int *)(v43 + 48)];
      sub_1DC29FE40(&v87, v88);
      sub_1DC29FE40(v88, v44);
      (*(void (**)(char *, uint64_t, uint64_t))(v80 + 16))(v45, v39, v81);
      swift_storeEnumTagMultiPayload();
      sub_1DC29FE7C((uint64_t)v88);
      sub_1DC080808((unint64_t *)&unk_1EDB2E070, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedModel, (uint64_t)&unk_1DC42ED60);
      sub_1DC404348();
      v46 = sub_1DC080808((unint64_t *)&unk_1EDB29C00, (uint64_t (*)(uint64_t))sub_1DC0FF574, MEMORY[0x1E0DB6F08]);
      v47 = sub_1DC080808(&qword_1EDB29BF8, (uint64_t (*)(uint64_t))sub_1DC0FF574, MEMORY[0x1E0DB6EF8]);
      MEMORY[0x1DF0C3110](v42, v41, v46, v47);
      sub_1DC080808(&qword_1EDB37600, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedSectionDescriptor, (uint64_t)&unk_1DC425AEC);
      v48 = v69;
      sub_1DC4046F0();
      v49 = v76;
      sub_1DC406CB8();
      v50 = *MEMORY[0x1E0DB7FB8];
      v51 = v73;
      v52 = v74;
      v53 = *(void (**)(char *, uint64_t, uint64_t))(v73 + 104);
      v75 = v29;
      v54 = v72;
      v53(v72, v50, v74);
      sub_1DC080808(&qword_1EDB27F60, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedSectionDescriptor, (uint64_t)&unk_1DC425BE4);
      v55 = v64;
      v56 = v49;
      sub_1DC405554();
      (*(void (**)(char *, uint64_t))(v51 + 8))(v54, v52);
      v84(v55);
      (*(void (**)(uint64_t *, uint64_t))(v65 + 8))(v55, v66);
      v57 = *(void (**)(char *, uint64_t))(v82 + 8);
      v57(v48, v33);
      (*(void (**)(uint64_t, uint64_t))(v80 + 8))(v79, v81);
      (*(void (**)(char *, uint64_t))(v77 + 8))(v56, v63);
      return ((uint64_t (*)(char *, uint64_t))v57)(v75, v33);
    }
  }
}

uint64_t sub_1DC29FB48@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  char *v17;
  void (*v18)(char *, char *, uint64_t);
  void (*v19)(char *, uint64_t);
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v24;

  v4 = sub_1DC407EAC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v24 - v9;
  v11 = sub_1DC29FEA4();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC2B5B3C((uint64_t)v13);
  sub_1DC1C0608();
  v15 = v14;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v13, 1, v14) == 1)
  {
    if (a1)
    {
      if (qword_1EDB413A0 != -1)
        swift_once();
      v16 = qword_1EDB5E208;
    }
    else
    {
      if (qword_1F034B070 != -1)
        swift_once();
      v16 = qword_1F0368AA8;
    }
    v22 = __swift_project_value_buffer(v4, (uint64_t)v16);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(a2, v22, v4);
  }
  else
  {
    v17 = &v13[*(int *)(v15 + 48)];
    v18 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
    v18(v10, v13, v4);
    v18(v7, v17, v4);
    v19 = *(void (**)(char *, uint64_t))(v5 + 8);
    if (a1)
    {
      v19(v10, v4);
      v20 = a2;
      v21 = v7;
    }
    else
    {
      v19(v7, v4);
      v20 = a2;
      v21 = v10;
    }
    return ((uint64_t (*)(uint64_t, char *, uint64_t))v18)(v20, v21, v4);
  }
}

uint64_t sub_1DC29FD40(uint64_t a1, void (*a2)(uint64_t *), uint64_t a3)
{
  return sub_1DC29F428(a1, a2, a3);
}

unint64_t sub_1DC29FD7C()
{
  unint64_t result;

  result = qword_1EDB415F0;
  if (!qword_1EDB415F0)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC4217B4, &type metadata for ForYouFeedFailedBlueprintModifier);
    atomic_store(result, (unint64_t *)&qword_1EDB415F0);
  }
  return result;
}

uint64_t sub_1DC29FDC0(uint64_t a1)
{
  uint64_t v2;

  sub_1DC10B21C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1DC29FDFC()
{
  unint64_t result;

  result = qword_1EDB415E0;
  if (!qword_1EDB415E0)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC4218AC, &type metadata for ForYouFeedFailedBlueprintModifier.ModifierError);
    atomic_store(result, (unint64_t *)&qword_1EDB415E0);
  }
  return result;
}

_QWORD *sub_1DC29FE40(_QWORD *a1, _QWORD *a2)
{
  __swift_memcpy8_8(a2, a1);
  return a2;
}

uint64_t sub_1DC29FE7C(uint64_t a1)
{
  swift_retain();
  return a1;
}

uint64_t sub_1DC29FEA4()
{
  uint64_t result;

  result = qword_1EDB41328;
  if (!qword_1EDB41328)
  {
    sub_1DC11E498();
    sub_1DC11E454();
    type metadata accessor for DualOfflineManager.State();
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ForYouFeedFailedBlueprintModifier.ModifierError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1DC29FF5C + 4 * byte_1DC421780[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1DC29FF7C + 4 * byte_1DC421785[v4]))();
}

_BYTE *sub_1DC29FF5C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1DC29FF7C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC29FF84(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC29FF8C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC29FF94(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC29FF9C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ForYouFeedFailedBlueprintModifier.ModifierError()
{
  return &type metadata for ForYouFeedFailedBlueprintModifier.ModifierError;
}

unint64_t sub_1DC29FFBC()
{
  unint64_t result;

  result = qword_1F0350B78[0];
  if (!qword_1F0350B78[0])
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC421884, &type metadata for ForYouFeedFailedBlueprintModifier.ModifierError);
    atomic_store(result, qword_1F0350B78);
  }
  return result;
}

uint64_t sub_1DC2A0000@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  __int128 v6[2];

  sub_1DC0824D4(a1, (uint64_t)v6);
  v3 = type metadata accessor for OnboardingModule();
  v4 = swift_allocObject();
  result = sub_1DC097DD0(v6, v4 + 16);
  a2[3] = v3;
  a2[4] = (uint64_t)&off_1EA4550B0;
  *a2 = v4;
  return result;
}

uint64_t sub_1DC2A006C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v5;

  v0 = sub_1DC402C50();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC4058F0();
  sub_1DC402B30();
  swift_release();
  sub_1DC096268(0, &qword_1EDB42BC0);
  sub_1DC402B3C();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB4A00], v0);
  sub_1DC4024A0();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_1DC096268(0, &qword_1EDB42BC8);
  sub_1DC402B3C();
  return swift_release();
}

uint64_t sub_1DC2A01BC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t result;
  id v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  _QWORD v8[5];

  v2 = sub_1DC405734();
  MEMORY[0x1E0C80A78](v2);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB3C688);
  result = sub_1DC402608();
  if (v7)
  {
    sub_1DC097DD0(&v6, (uint64_t)v8);
    __swift_project_boxed_opaque_existential_1(v8, v8[3]);
    sub_1DC0814BC();
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1DC096268(0, &qword_1EDB42BC0);
    result = sub_1DC402608();
    if ((_QWORD)v6)
    {
      v4 = objc_allocWithZone((Class)sub_1DC4058F0());
      v5 = sub_1DC4058CC();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
      return v5;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

unint64_t sub_1DC2A0324@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  unint64_t result;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[5];
  _BYTE v19[24];
  uint64_t v20;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, &qword_1EDB42BC8);
  result = sub_1DC402608();
  if (v20)
  {
    v4 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v19, v20);
    v5 = MEMORY[0x1E0C80A78](v4);
    v7 = (_QWORD *)((char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v8 + 16))(v7, v5);
    v9 = *v7;
    v10 = type metadata accessor for OnboardingTracker();
    v18[3] = v10;
    v18[4] = &off_1EA469658;
    v18[0] = v9;
    type metadata accessor for OnboardingInteractor();
    v11 = (_QWORD *)swift_allocObject();
    v12 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v18, v10);
    v13 = MEMORY[0x1E0C80A78](v12);
    v15 = (_QWORD *)((char *)v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v16 + 16))(v15, v13);
    v17 = *v15;
    v11[5] = v10;
    v11[6] = &off_1EA469658;
    v11[2] = v17;
    sub_1DC3FFFE0();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
    result = sub_1DC2A0544();
    *a2 = v11;
    a2[1] = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC2A04C0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4018AC();
  result = sub_1DC4025FC();
  if (result)
  {
    v4 = result;
    v5 = type metadata accessor for OnboardingTracker();
    result = swift_allocObject();
    *(_QWORD *)(result + 16) = v4;
    a2[3] = v5;
    a2[4] = (uint64_t)&off_1EA469658;
    *a2 = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

unint64_t sub_1DC2A0544()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EDB42BD0;
  if (!qword_1EDB42BD0)
  {
    v1 = type metadata accessor for OnboardingInteractor();
    result = MEMORY[0x1DF0CAB8C](&unk_1DC42E3F0, v1);
    atomic_store(result, (unint64_t *)&qword_1EDB42BD0);
  }
  return result;
}

_QWORD *sub_1DC2A058C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  int v8;
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  void (*v27)(char *, char *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  void (*v36)(char *, char *, uint64_t);
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      type metadata accessor for StocksActivity.Article(0);
      if (swift_getEnumCaseMultiPayload() == 1)
        goto LABEL_10;
      sub_1DC401BB8();
      v9 = swift_getEnumCaseMultiPayload();
      *a1 = *a2;
      if (v9 == 1)
      {
        swift_retain();
      }
      else
      {
        sub_1DC1447E4();
        v23 = *(int *)(v22 + 48);
        v24 = (char *)a1 + v23;
        v25 = (char *)a2 + v23;
        v26 = sub_1DC40202C();
        v27 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16);
        swift_retain();
        v27(v24, v25, v26);
      }
      swift_storeEnumTagMultiPayload();
      sub_1DC1446B4();
      *(_QWORD *)((char *)a1 + *(int *)(v28 + 48)) = *(_QWORD *)((char *)a2 + *(int *)(v28 + 48));
      v29 = *(int *)(v28 + 64);
      v19 = (char *)a1 + v29;
      v20 = (char *)a2 + v29;
      v21 = *(_QWORD *)((char *)a2 + v29 + 24);
      if (!v21)
      {
        v40 = *((_OWORD *)v20 + 1);
        *(_OWORD *)v19 = *(_OWORD *)v20;
        *((_OWORD *)v19 + 1) = v40;
        *((_QWORD *)v19 + 4) = *((_QWORD *)v20 + 4);
        goto LABEL_29;
      }
    }
    else if (EnumCaseMultiPayload == 1)
    {
      type metadata accessor for StocksActivity.Article(0);
      if (swift_getEnumCaseMultiPayload() == 1)
        goto LABEL_10;
      sub_1DC401BB8();
      v8 = swift_getEnumCaseMultiPayload();
      *a1 = *a2;
      if (v8 == 1)
      {
        swift_retain();
      }
      else
      {
        sub_1DC1447E4();
        v12 = *(int *)(v11 + 48);
        v13 = (char *)a1 + v12;
        v14 = (char *)a2 + v12;
        v15 = sub_1DC40202C();
        v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
        swift_retain();
        v16(v13, v14, v15);
      }
      swift_storeEnumTagMultiPayload();
      sub_1DC1446B4();
      *(_QWORD *)((char *)a1 + *(int *)(v17 + 48)) = *(_QWORD *)((char *)a2 + *(int *)(v17 + 48));
      v18 = *(int *)(v17 + 64);
      v19 = (char *)a1 + v18;
      v20 = (char *)a2 + v18;
      v21 = *(_QWORD *)((char *)a2 + v18 + 24);
      if (!v21)
      {
        v39 = *((_OWORD *)v20 + 1);
        *(_OWORD *)v19 = *(_OWORD *)v20;
        *((_OWORD *)v19 + 1) = v39;
        *((_QWORD *)v19 + 4) = *((_QWORD *)v20 + 4);
        goto LABEL_29;
      }
    }
    else
    {
      type metadata accessor for StocksActivity.Article(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
LABEL_10:
        *a1 = *a2;
        swift_unknownObjectRetain();
LABEL_29:
        swift_storeEnumTagMultiPayload();
        swift_storeEnumTagMultiPayload();
        return a1;
      }
      sub_1DC401BB8();
      v10 = swift_getEnumCaseMultiPayload();
      *a1 = *a2;
      if (v10 == 1)
      {
        swift_retain();
      }
      else
      {
        sub_1DC1447E4();
        v32 = *(int *)(v31 + 48);
        v33 = (char *)a1 + v32;
        v34 = (char *)a2 + v32;
        v35 = sub_1DC40202C();
        v36 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16);
        swift_retain();
        v36(v33, v34, v35);
      }
      swift_storeEnumTagMultiPayload();
      sub_1DC1446B4();
      *(_QWORD *)((char *)a1 + *(int *)(v37 + 48)) = *(_QWORD *)((char *)a2 + *(int *)(v37 + 48));
      v38 = *(int *)(v37 + 64);
      v19 = (char *)a1 + v38;
      v20 = (char *)a2 + v38;
      v21 = *(_QWORD *)((char *)a2 + v38 + 24);
      if (!v21)
      {
        v41 = *((_OWORD *)v20 + 1);
        *(_OWORD *)v19 = *(_OWORD *)v20;
        *((_OWORD *)v19 + 1) = v41;
        *((_QWORD *)v19 + 4) = *((_QWORD *)v20 + 4);
        goto LABEL_29;
      }
    }
    v30 = *((_QWORD *)v20 + 4);
    *((_QWORD *)v19 + 3) = v21;
    *((_QWORD *)v19 + 4) = v30;
    (**(void (***)(void))(v21 - 8))();
    goto LABEL_29;
  }
  v7 = *a2;
  *a1 = *a2;
  a1 = (_QWORD *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
  swift_retain();
  return a1;
}

uint64_t sub_1DC2A09A8(uint64_t a1)
{
  uint64_t result;
  int EnumCaseMultiPayload;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  result = swift_getEnumCaseMultiPayload();
  if (result <= 2)
  {
    type metadata accessor for StocksActivity.Article(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      return swift_unknownObjectRelease();
    }
    else
    {
      sub_1DC401BB8();
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      swift_release();
      if (EnumCaseMultiPayload != 1)
      {
        sub_1DC1447E4();
        v5 = a1 + *(int *)(v4 + 48);
        v6 = sub_1DC40202C();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
      }
      sub_1DC1446B4();
      result = a1 + *(int *)(v7 + 64);
      if (*(_QWORD *)(result + 24))
        return __swift_destroy_boxed_opaque_existential_1(result);
    }
  }
  return result;
}

_QWORD *sub_1DC2A0A80(_QWORD *a1, _QWORD *a2)
{
  int EnumCaseMultiPayload;
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  char *v20;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
  {
    type metadata accessor for StocksActivity.Article(0);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      sub_1DC401BB8();
      v5 = swift_getEnumCaseMultiPayload();
      *a1 = *a2;
      if (v5 == 1)
        goto LABEL_10;
      goto LABEL_11;
    }
LABEL_7:
    *a1 = *a2;
    swift_unknownObjectRetain();
    goto LABEL_15;
  }
  type metadata accessor for StocksActivity.Article(0);
  if (swift_getEnumCaseMultiPayload() == 1)
    goto LABEL_7;
  sub_1DC401BB8();
  v6 = swift_getEnumCaseMultiPayload();
  *a1 = *a2;
  if (v6 == 1)
  {
LABEL_10:
    swift_retain();
    goto LABEL_12;
  }
LABEL_11:
  sub_1DC1447E4();
  v8 = *(int *)(v7 + 48);
  v20 = (char *)a1 + v8;
  v9 = (char *)a2 + v8;
  v10 = sub_1DC40202C();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_retain();
  v11(v20, v9, v10);
LABEL_12:
  swift_storeEnumTagMultiPayload();
  sub_1DC1446B4();
  *(_QWORD *)((char *)a1 + *(int *)(v12 + 48)) = *(_QWORD *)((char *)a2 + *(int *)(v12 + 48));
  v13 = *(int *)(v12 + 64);
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = *(_QWORD *)((char *)a2 + v13 + 24);
  if (v16)
  {
    v17 = *((_QWORD *)v15 + 4);
    *((_QWORD *)v14 + 3) = v16;
    *((_QWORD *)v14 + 4) = v17;
    (**(void (***)(void))(v16 - 8))();
  }
  else
  {
    v18 = *((_OWORD *)v15 + 1);
    *(_OWORD *)v14 = *(_OWORD *)v15;
    *((_OWORD *)v14 + 1) = v18;
    *((_QWORD *)v14 + 4) = *((_QWORD *)v15 + 4);
  }
LABEL_15:
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *sub_1DC2A0CD4(_QWORD *a1, _QWORD *a2)
{
  int EnumCaseMultiPayload;
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  char *v29;
  char *v30;

  if (a1 != a2)
  {
    sub_1DC2A0FB4((uint64_t)a1);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
    {
      type metadata accessor for StocksActivity.Article(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
LABEL_5:
        *a1 = *a2;
        swift_unknownObjectRetain();
LABEL_19:
        swift_storeEnumTagMultiPayload();
        swift_storeEnumTagMultiPayload();
        return a1;
      }
      sub_1DC401BB8();
      v5 = swift_getEnumCaseMultiPayload();
      *a1 = *a2;
      if (v5 == 1)
      {
        swift_retain();
      }
      else
      {
        sub_1DC1447E4();
        v8 = *(int *)(v7 + 48);
        v29 = (char *)a1 + v8;
        v9 = (char *)a2 + v8;
        v10 = sub_1DC40202C();
        v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
        swift_retain();
        v11(v29, v9, v10);
      }
      swift_storeEnumTagMultiPayload();
      sub_1DC1446B4();
      *(_QWORD *)((char *)a1 + *(int *)(v12 + 48)) = *(_QWORD *)((char *)a2 + *(int *)(v12 + 48));
      v13 = *(int *)(v12 + 64);
      v14 = (char *)a1 + v13;
      v15 = (char *)a2 + v13;
      v16 = *(_QWORD *)((char *)a2 + v13 + 24);
      if (!v16)
      {
        v17 = *(_OWORD *)v15;
        v18 = *((_OWORD *)v15 + 1);
        *((_QWORD *)v14 + 4) = *((_QWORD *)v15 + 4);
        *(_OWORD *)v14 = v17;
        *((_OWORD *)v14 + 1) = v18;
        goto LABEL_19;
      }
    }
    else
    {
      type metadata accessor for StocksActivity.Article(0);
      if (swift_getEnumCaseMultiPayload() == 1)
        goto LABEL_5;
      sub_1DC401BB8();
      v6 = swift_getEnumCaseMultiPayload();
      *a1 = *a2;
      if (v6 == 1)
      {
        swift_retain();
      }
      else
      {
        sub_1DC1447E4();
        v20 = *(int *)(v19 + 48);
        v30 = (char *)a1 + v20;
        v21 = (char *)a2 + v20;
        v22 = sub_1DC40202C();
        v23 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16);
        swift_retain();
        v23(v30, v21, v22);
      }
      swift_storeEnumTagMultiPayload();
      sub_1DC1446B4();
      *(_QWORD *)((char *)a1 + *(int *)(v24 + 48)) = *(_QWORD *)((char *)a2 + *(int *)(v24 + 48));
      v25 = *(int *)(v24 + 64);
      v14 = (char *)a1 + v25;
      v15 = (char *)a2 + v25;
      v16 = *(_QWORD *)((char *)a2 + v25 + 24);
      if (!v16)
      {
        v26 = *(_OWORD *)v15;
        v27 = *((_OWORD *)v15 + 1);
        *((_QWORD *)v14 + 4) = *((_QWORD *)v15 + 4);
        *(_OWORD *)v14 = v26;
        *((_OWORD *)v14 + 1) = v27;
        goto LABEL_19;
      }
    }
    *((_QWORD *)v14 + 3) = v16;
    *((_QWORD *)v14 + 4) = *((_QWORD *)v15 + 4);
    (**(void (***)(void))(v16 - 8))();
    goto LABEL_19;
  }
  return a1;
}

uint64_t sub_1DC2A0FB4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ForYouFeedRouteModel();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for ForYouFeedRouteModel()
{
  uint64_t result;

  result = qword_1EDB42C48;
  if (!qword_1EDB42C48)
    return swift_getSingletonMetadata();
  return result;
}

_QWORD *sub_1DC2A102C(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  __int128 v15;

  swift_getEnumCaseMultiPayload();
  v4 = type metadata accessor for StocksActivity.Article(0);
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  }
  else
  {
    v5 = sub_1DC401BB8();
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v5 - 8) + 64));
    }
    else
    {
      *a1 = *a2;
      sub_1DC1447E4();
      v7 = *(int *)(v6 + 48);
      v8 = (char *)a1 + v7;
      v9 = (char *)a2 + v7;
      v10 = sub_1DC40202C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
      swift_storeEnumTagMultiPayload();
    }
    sub_1DC1446B4();
    *(_QWORD *)((char *)a1 + *(int *)(v11 + 48)) = *(_QWORD *)((char *)a2 + *(int *)(v11 + 48));
    v12 = *(int *)(v11 + 64);
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    *((_QWORD *)v13 + 4) = *((_QWORD *)v14 + 4);
    v15 = *((_OWORD *)v14 + 1);
    *(_OWORD *)v13 = *(_OWORD *)v14;
    *((_OWORD *)v13 + 1) = v15;
    swift_storeEnumTagMultiPayload();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *sub_1DC2A118C(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  __int128 v15;

  if (a1 != a2)
  {
    sub_1DC2A0FB4((uint64_t)a1);
    swift_getEnumCaseMultiPayload();
    v4 = type metadata accessor for StocksActivity.Article(0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
    }
    else
    {
      v5 = sub_1DC401BB8();
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v5 - 8) + 64));
      }
      else
      {
        *a1 = *a2;
        sub_1DC1447E4();
        v7 = *(int *)(v6 + 48);
        v8 = (char *)a1 + v7;
        v9 = (char *)a2 + v7;
        v10 = sub_1DC40202C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
        swift_storeEnumTagMultiPayload();
      }
      sub_1DC1446B4();
      *(_QWORD *)((char *)a1 + *(int *)(v11 + 48)) = *(_QWORD *)((char *)a2 + *(int *)(v11 + 48));
      v12 = *(int *)(v11 + 64);
      v13 = (char *)a1 + v12;
      v14 = (char *)a2 + v12;
      *((_QWORD *)v13 + 4) = *((_QWORD *)v14 + 4);
      v15 = *((_OWORD *)v14 + 1);
      *(_OWORD *)v13 = *(_OWORD *)v14;
      *((_OWORD *)v13 + 1) = v15;
      swift_storeEnumTagMultiPayload();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1DC2A12FC()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for StocksActivity.Article(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t *sub_1DC2A1364(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1DC400F7C();
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      sub_1DC092F50(0, (unint64_t *)&unk_1EDB28D90, (void (*)(uint64_t))MEMORY[0x1E0DAEFA8]);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    v16 = a3[6];
    v17 = (char *)v4 + v16;
    v18 = (char *)a2 + v16;
    v19 = sub_1DC4008EC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[7];
    v21 = *(_OWORD *)((char *)a2 + v20 + 24);
    *(_OWORD *)((char *)v4 + v20 + 24) = v21;
    (**(void (***)(void))(v21 - 8))();
  }
  return v4;
}

uint64_t sub_1DC2A14C8(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  swift_bridgeObjectRelease();
  v4 = a1 + a2[5];
  v5 = sub_1DC400F7C();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  v7 = a1 + a2[6];
  v8 = sub_1DC4008EC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  return __swift_destroy_boxed_opaque_existential_1(a1 + a2[7]);
}

_QWORD *sub_1DC2A156C(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(char *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1DC400F7C();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    sub_1DC092F50(0, (unint64_t *)&unk_1EDB28D90, (void (*)(uint64_t))MEMORY[0x1E0DAEFA8]);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v14 = a3[6];
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  v17 = sub_1DC4008EC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
  v18 = a3[7];
  v19 = *(_OWORD *)((char *)a2 + v18 + 24);
  *(_OWORD *)((char *)a1 + v18 + 24) = v19;
  (**(void (***)(void))(v19 - 8))();
  return a1;
}

_QWORD *sub_1DC2A16A4(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1DC400F7C();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    sub_1DC092F50(0, (unint64_t *)&unk_1EDB28D90, (void (*)(uint64_t))MEMORY[0x1E0DAEFA8]);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  v15 = a3[6];
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = sub_1DC4008EC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  __swift_assign_boxed_opaque_existential_1((_QWORD *)((char *)a1 + a3[7]), (_QWORD *)((char *)a2 + a3[7]));
  return a1;
}

_OWORD *sub_1DC2A181C(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  __int128 v19;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1DC400F7C();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    sub_1DC092F50(0, (unint64_t *)&unk_1EDB28D90, (void (*)(uint64_t))MEMORY[0x1E0DAEFA8]);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v12 = a3[6];
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = sub_1DC4008EC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
  v16 = a3[7];
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  v19 = *((_OWORD *)v18 + 1);
  *(_OWORD *)v17 = *(_OWORD *)v18;
  *((_OWORD *)v17 + 1) = v19;
  *((_QWORD *)v17 + 4) = *((_QWORD *)v18 + 4);
  return a1;
}

_QWORD *sub_1DC2A193C(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(char *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  __int128 v23;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1DC400F7C();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    sub_1DC092F50(0, (unint64_t *)&unk_1EDB28D90, (void (*)(uint64_t))MEMORY[0x1E0DAEFA8]);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
  v16 = a3[6];
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  v19 = sub_1DC4008EC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 40))(v17, v18, v19);
  v20 = a3[7];
  v21 = (char *)a1 + v20;
  v22 = (char *)a2 + v20;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1 + v20);
  v23 = *((_OWORD *)v22 + 1);
  *(_OWORD *)v21 = *(_OWORD *)v22;
  *((_OWORD *)v21 + 1) = v23;
  *((_QWORD *)v21 + 4) = *((_QWORD *)v22 + 4);
  return a1;
}

uint64_t sub_1DC2A1AB8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC2A1AC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    sub_1DC092F50(0, (unint64_t *)&unk_1EDB28D90, (void (*)(uint64_t))MEMORY[0x1E0DAEFA8]);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 20);
    }
    else
    {
      v10 = sub_1DC4008EC();
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 24);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_1DC2A1B74()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC2A1B80(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_1DC092F50(0, (unint64_t *)&unk_1EDB28D90, (void (*)(uint64_t))MEMORY[0x1E0DAEFA8]);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 20);
    }
    else
    {
      v10 = sub_1DC4008EC();
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 24);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t type metadata accessor for StockFeedChartUpdateBlueprintModifier()
{
  uint64_t result;

  result = qword_1EDB3D700;
  if (!qword_1EDB3D700)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1DC2A1C68()
{
  unint64_t v0;
  unint64_t v1;

  sub_1DC092F50(319, (unint64_t *)&unk_1EDB28D90, (void (*)(uint64_t))MEMORY[0x1E0DAEFA8]);
  if (v0 <= 0x3F)
  {
    sub_1DC4008EC();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t sub_1DC2A1D10(uint64_t a1, void (*a2)(char *), uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t updated;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *);
  uint64_t v41;
  uint64_t v42;
  char v43[16];
  uint64_t v44;
  __int128 v45;
  __int128 v46;
  char v47[24];

  v39 = a3;
  v40 = a2;
  v4 = sub_1DC404984();
  v33 = *(_QWORD *)(v4 - 8);
  v34 = v4;
  MEMORY[0x1E0C80A78](v4);
  v32 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC165EEC(0, &qword_1EDB2A278, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB9A28]);
  v37 = *(_QWORD *)(v6 - 8);
  v38 = v6;
  MEMORY[0x1E0C80A78](v6);
  v36 = (char *)&v31 - v7;
  sub_1DC165DE8();
  MEMORY[0x1E0C80A78](v8);
  sub_1DC165EEC(0, (unint64_t *)&qword_1EDB2AB10, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790]);
  v35 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v31 - v10;
  v42 = v12;
  sub_1DC406C70();
  v41 = v3;
  v44 = v3;
  v13 = sub_1DC155114((void (*)(char *))sub_1DC2A2CCC, (uint64_t)v43, (uint64_t)v47);
  sub_1DC165EEC(0, (unint64_t *)&qword_1EDB29D60, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60]);
  v15 = v14;
  v16 = sub_1DC19E01C(&qword_1EDB29D48, MEMORY[0x1E0DB7B88]);
  v17 = sub_1DC19E01C(&qword_1EDB29D40, MEMORY[0x1E0DB7B80]);
  MEMORY[0x1DF0C311C](v13, v15, v16, v17);
  type metadata accessor for StockFeedSectionDescriptor();
  type metadata accessor for StockFeedModel();
  sub_1DC080808(&qword_1EDB36EE0, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedSectionDescriptor, (uint64_t)&unk_1DC4167B0);
  sub_1DC080808(&qword_1EDB2D770, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedModel, (uint64_t)&unk_1DC429058);
  sub_1DC406C64();
  v18 = sub_1DC1581D0();
  sub_1DC4078A0();
  sub_1DC407894();
  type metadata accessor for StockFeedServiceConfig();
  sub_1DC080808(&qword_1EDB33F10, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedServiceConfig, (uint64_t)&unk_1DC411510);
  v19 = sub_1DC40787C();
  swift_release();
  if (v19)
  {
    *((_QWORD *)&v46 + 1) = sub_1DC407420();
    *(_QWORD *)&v45 = v19;
  }
  else
  {
    v45 = 0u;
    v46 = 0u;
  }
  v20 = v42;
  sub_1DC406D00();
  sub_1DC1F0AAC(v18);
  updated = type metadata accessor for StockFeedChartUpdateBlueprintModifier();
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v41 + *(int *)(updated + 28)), *(_QWORD *)(v41 + *(int *)(updated + 28) + 24));
  if ((sub_1DC400C1C() & 1) != 0)
  {
    v22 = v36;
    sub_1DC405548();
  }
  else
  {
    v24 = v33;
    v23 = v34;
    v25 = v32;
    (*(void (**)(char *, _QWORD, uint64_t))(v33 + 104))(v32, *MEMORY[0x1E0DB7FB8], v34);
    sub_1DC080808(&qword_1EDB36EE8, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedSectionDescriptor, (uint64_t)&unk_1DC416860);
    v22 = v36;
    sub_1DC405554();
    v26 = v25;
    v20 = v42;
    (*(void (**)(char *, uint64_t))(v24 + 8))(v26, v23);
  }
  v28 = v37;
  v27 = v38;
  v29 = v35;
  v40(v22);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v22, v27);
  return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v11, v20);
}

uint64_t sub_1DC2A2150(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v12[16];
  uint64_t v13;
  _BYTE v14[8];

  sub_1DC142434();
  MEMORY[0x1E0C80A78](v3);
  v4 = type metadata accessor for StockFeedSectionDescriptor();
  MEMORY[0x1E0C80A78](v4);
  sub_1DC2A2314(a2, (uint64_t)&v12[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)]);
  v13 = a2;
  v6 = sub_1DC1550E0((void (*)(char *))sub_1DC2A2CE8, (uint64_t)v12, (uint64_t)v14);
  sub_1DC142200();
  v8 = v7;
  v9 = sub_1DC080808((unint64_t *)&unk_1EDB29BB0, (uint64_t (*)(uint64_t))sub_1DC142200, MEMORY[0x1E0DB6F08]);
  v10 = sub_1DC080808(&qword_1EDB29BA8, (uint64_t (*)(uint64_t))sub_1DC142200, MEMORY[0x1E0DB6EF8]);
  MEMORY[0x1DF0C311C](v6, v8, v9, v10);
  type metadata accessor for StockFeedModel();
  sub_1DC080808(&qword_1EDB36EE0, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedSectionDescriptor, (uint64_t)&unk_1DC4167B0);
  sub_1DC080808(&qword_1EDB2D770, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedModel, (uint64_t)&unk_1DC429058);
  return sub_1DC4046F0();
}

void sub_1DC2A2314(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD v12[5];
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v14 = a1;
  v15 = a2;
  v13 = sub_1DC4008EC();
  v12[3] = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v12[4] = (char *)v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC092F50(0, (unint64_t *)&unk_1EDB28D90, (void (*)(uint64_t))MEMORY[0x1E0DAEFA8]);
  MEMORY[0x1E0C80A78](v3);
  v12[2] = (char *)v12 - v4;
  sub_1DC092F50(0, &qword_1EDB28DC0, (void (*)(uint64_t))MEMORY[0x1E0DAF040]);
  MEMORY[0x1E0C80A78](v5);
  v12[1] = (char *)v12 - v6;
  v7 = sub_1DC4010E4();
  MEMORY[0x1E0C80A78](v7);
  v8 = type metadata accessor for StockFeedMastheadModel();
  MEMORY[0x1E0C80A78](v8);
  MEMORY[0x1E0C80A78](v9);
  v10 = type metadata accessor for StockFeedSectionDescriptor();
  MEMORY[0x1E0C80A78](v10);
  sub_1DC165EEC(0, (unint64_t *)&qword_1EDB29D60, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60]);
  sub_1DC4046FC();
  v11 = (char *)sub_1DC2A2514 + 4 * aEq[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1DC2A2514()
{
  return sub_1DC4046FC();
}

void sub_1DC2A2540()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t updated;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  sub_1DC1E0990(v2, v0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v4, v0, v1);
  v8 = *(_QWORD *)(v7 - 136);
  sub_1DC092F9C(v0 + *(int *)(v6 + 20), v8, &qword_1EDB28DC0, (void (*)(uint64_t))MEMORY[0x1E0DAF040]);
  updated = type metadata accessor for StockFeedChartUpdateBlueprintModifier();
  v10 = *(_QWORD *)(v7 - 96);
  v11 = *(_QWORD *)(v7 - 128);
  sub_1DC092F9C(v10 + *(int *)(updated + 20), v11, (unint64_t *)&unk_1EDB28D90, (void (*)(uint64_t))MEMORY[0x1E0DAEFA8]);
  v12 = v10 + *(int *)(updated + 24);
  v13 = *(_QWORD *)(v7 - 112);
  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v7 - 120) + 16))(v13, v12, *(_QWORD *)(v7 - 104));
  sub_1DC2F2578(v4, v8, v11, v13, *(unsigned __int8 *)(v0 + *(int *)(v6 + 32)), v5);
  sub_1DC0926D8(v0, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedMastheadModel);
  sub_1DC1E0990(v5, *(_QWORD *)(v7 - 88));
  swift_storeEnumTagMultiPayload();
  JUMPOUT(0x1DC2A2520);
}

uint64_t sub_1DC2A2628()
{
  uint64_t v0;
  uint64_t v1;

  swift_bridgeObjectRelease();
  sub_1DC142534();
  sub_1DC092F14(v0 + *(int *)(v1 + 64), &qword_1EDB2AD80, (void (*)(uint64_t))MEMORY[0x1E0D5A418]);
  return sub_1DC2A2514();
}

uint64_t sub_1DC2A2658()
{
  uint64_t v0;

  sub_1DC0926D8(v0, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedSectionDescriptor);
  return sub_1DC2A2514();
}

void sub_1DC2A266C(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  _QWORD v16[10];

  v16[6] = a1;
  v16[9] = a2;
  sub_1DC092F50(0, &qword_1EDB28BA0, (void (*)(uint64_t))MEMORY[0x1E0DAE188]);
  MEMORY[0x1E0C80A78](v2);
  v16[1] = (char *)v16 - v3;
  v4 = sub_1DC4008EC();
  v16[3] = *(_QWORD *)(v4 - 8);
  v16[4] = v4;
  MEMORY[0x1E0C80A78](v4);
  v16[5] = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC092F50(0, (unint64_t *)&unk_1EDB28D90, (void (*)(uint64_t))MEMORY[0x1E0DAEFA8]);
  MEMORY[0x1E0C80A78](v6);
  v16[2] = (char *)v16 - v7;
  sub_1DC092F50(0, &qword_1EDB28DC0, (void (*)(uint64_t))MEMORY[0x1E0DAF040]);
  MEMORY[0x1E0C80A78](v8);
  v16[8] = (char *)v16 - v9;
  v10 = sub_1DC4010E4();
  MEMORY[0x1E0C80A78](v10);
  v11 = type metadata accessor for StockFeedMastheadModel();
  MEMORY[0x1E0C80A78](v11);
  v12 = type metadata accessor for StockFeedModel();
  MEMORY[0x1E0C80A78](v12);
  v16[7] = (char *)v16 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  sub_1DC142200();
  sub_1DC404354();
  v15 = (char *)sub_1DC2A28AC + 4 * byte_1DC421958[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1DC2A28AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1DC0926D8(v2, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedModel);
  return (*(uint64_t (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 16))(*(_QWORD *)(v3 - 88), v0, v1);
}

uint64_t sub_1DC2A2CA0()
{
  return sub_1DC080808(&qword_1EDB3D6F8, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedChartUpdateBlueprintModifier, (uint64_t)&unk_1DC4219C8);
}

uint64_t sub_1DC2A2CCC(uint64_t a1)
{
  uint64_t v1;

  return sub_1DC2A2150(a1, *(_QWORD *)(v1 + 16));
}

void sub_1DC2A2CE8(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_1DC2A266C(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_1DC2A2D04(uint64_t a1, uint64_t a2)
{
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char **v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  int v24;
  uint64_t v25;
  void (*v26)(char **, unint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(uint64_t);
  char **v31;
  uint64_t v32;
  uint64_t (*v33)(uint64_t);
  char **v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t (*v47)(uint64_t);
  uint64_t v48;
  uint64_t (*v49)(uint64_t);
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  uint64_t v67;
  void *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char **v82;
  char **v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;

  v79 = a1;
  v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1DC089DA4(0, &qword_1F0350BA8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DACE70], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v72 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v73 = v5;
  v74 = (uint64_t)&v69 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v83 = (char **)((char *)&v69 - v7);
  sub_1DC089DA4(0, &qword_1EDB29800, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD350], v3);
  v71 = *(_QWORD *)(v8 - 8);
  v9 = *(_QWORD *)(v71 + 64);
  MEMORY[0x1E0C80A78](v8);
  v81 = (uint64_t)&v69 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v82 = (char **)((char *)&v69 - v11);
  v12 = sub_1DC403BE0();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v76 = v14;
  v15 = (char *)&v69 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v85 = sub_1DC403CA0();
  v77 = *(_QWORD *)(v85 - 8);
  MEMORY[0x1E0C80A78](v85);
  v75 = v16;
  v84 = (char *)&v69 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1DC403BEC();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v20 = (char **)((char *)&v69 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  v21 = sub_1DC403C94();
  v22 = *(_QWORD *)(v21 + 16);
  v80 = v12;
  v78 = v13;
  if (v22)
  {
    v69 = v15;
    v70 = a2;
    v23 = v21 + ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80));
    v24 = *MEMORY[0x1E0D61810];
    v25 = *(_QWORD *)(v18 + 72);
    v26 = *(void (**)(char **, unint64_t, uint64_t))(v18 + 16);
    while (1)
    {
      v26(v20, v23, v17);
      if ((*(unsigned int (**)(char **, uint64_t))(v18 + 88))(v20, v17) == v24)
        break;
      (*(void (**)(char **, uint64_t))(v18 + 8))(v20, v17);
      v23 += v25;
      if (!--v22)
      {
        swift_bridgeObjectRelease();
        v28 = v79;
        v27 = v80;
        v15 = v69;
        a2 = v70;
        goto LABEL_7;
      }
    }
    (*(void (**)(char **, uint64_t))(v18 + 96))(v20, v17);
    v51 = *v20;
    v52 = v20[1];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v53 = swift_bridgeObjectRelease();
    MEMORY[0x1E0C80A78](v53);
    v54 = v86;
    *(&v69 - 4) = (char *)v86;
    *(&v69 - 3) = v51;
    *(&v69 - 2) = v52;
    sub_1DC112C9C();
    v81 = sub_1DC402E0C();
    swift_bridgeObjectRelease();
    v55 = v77;
    v83 = *(char ***)(v77 + 16);
    v56 = v84;
    v57 = v85;
    ((void (*)(char *, uint64_t, uint64_t))v83)(v84, v70, v85);
    v58 = v78;
    v82 = *(char ***)(v78 + 16);
    v59 = v69;
    v60 = v80;
    ((void (*)(char *, uint64_t, uint64_t))v82)(v69, v79, v80);
    v61 = *(unsigned __int8 *)(v55 + 80);
    v62 = (v61 + 24) & ~v61;
    v63 = *(unsigned __int8 *)(v58 + 80);
    v64 = (v75 + v63 + v62) & ~v63;
    v74 = v64;
    v75 = v61 | v63 | 7;
    v76 += v64;
    v65 = swift_allocObject();
    *(_QWORD *)(v65 + 16) = v54;
    v77 = *(_QWORD *)(v55 + 32);
    ((void (*)(uint64_t, char *, uint64_t))v77)(v65 + v62, v56, v57);
    v78 = *(_QWORD *)(v58 + 32);
    ((void (*)(uint64_t, char *, uint64_t))v78)(v65 + v64, v59, v60);
    swift_retain();
    v66 = (void *)sub_1DC402C80();
    v73 = sub_1DC402D04();
    swift_release();
    swift_release();

    ((void (*)(char *, uint64_t, uint64_t))v83)(v56, v70, v57);
    ((void (*)(char *, uint64_t, uint64_t))v82)(v59, v79, v60);
    v67 = swift_allocObject();
    *(_QWORD *)(v67 + 16) = v54;
    ((void (*)(uint64_t, char *, uint64_t))v77)(v67 + v62, v56, v57);
    ((void (*)(uint64_t, char *, uint64_t))v78)(v67 + v74, v59, v60);
    swift_retain();
    v68 = (void *)sub_1DC402C80();
    sub_1DC402D34();
    swift_release();

    swift_release();
    return swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
    v27 = v12;
    v28 = v79;
LABEL_7:
    v29 = sub_1DC4032BC();
    v30 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD350];
    v31 = v82;
    (*(void (**)(char **, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v82, 1, 1, v29);
    v32 = sub_1DC402FB0();
    v33 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DACE70];
    v34 = v83;
    (*(void (**)(char **, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v83, 1, 1, v32);
    v79 = *(_QWORD *)(v86 + 16);
    sub_1DC0EDD64((uint64_t)v31, v81, &qword_1EDB29800, v30);
    v35 = (uint64_t)v34;
    v36 = v74;
    sub_1DC0EDD64(v35, v74, &qword_1F0350BA8, v33);
    v37 = v77;
    (*(void (**)(char *, uint64_t, uint64_t))(v77 + 16))(v84, a2, v85);
    v38 = v78;
    (*(void (**)(char *, uint64_t, uint64_t))(v78 + 16))(v15, v28, v27);
    v39 = (*(unsigned __int8 *)(v71 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v71 + 80);
    v40 = (v9 + *(unsigned __int8 *)(v72 + 80) + v39) & ~(unint64_t)*(unsigned __int8 *)(v72 + 80);
    v41 = (v73 + *(unsigned __int8 *)(v37 + 80) + v40) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80);
    v42 = (v75 + *(unsigned __int8 *)(v38 + 80) + v41) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80);
    v43 = (v76 + v42 + 7) & 0xFFFFFFFFFFFFFFF8;
    v44 = v15;
    v45 = swift_allocObject();
    v46 = v45 + v39;
    v47 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD350];
    sub_1DC2161A8(v81, v46, &qword_1EDB29800, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD350]);
    v48 = v45 + v40;
    v49 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DACE70];
    sub_1DC2161A8(v36, v48, &qword_1F0350BA8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DACE70]);
    (*(void (**)(unint64_t, char *, uint64_t))(v37 + 32))(v45 + v41, v84, v85);
    (*(void (**)(unint64_t, char *, uint64_t))(v38 + 32))(v45 + v42, v44, v80);
    *(_QWORD *)(v45 + v43) = v86;
    swift_retain();
    sub_1DC401828();
    swift_release();
    sub_1DC0B091C((uint64_t)v83, &qword_1F0350BA8, v49);
    return sub_1DC0B091C((uint64_t)v82, &qword_1EDB29800, v47);
  }
}

uint64_t sub_1DC2A33F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t (*v46)(uint64_t);
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  char *v77;
  int v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  unsigned int *v83;
  char *v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  unint64_t v88;
  unsigned int *v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  int v93;
  uint64_t v94;
  void (*v95)(char *, unint64_t, uint64_t);
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  int v105;
  uint64_t v106;
  void (*v107)(char *, unint64_t, uint64_t);
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  int v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  void (*v124)(char *, uint64_t);
  char *v125;
  char *v126;
  char *v128;
  uint64_t v129;
  char *v130;
  char *v131;
  char *v132;
  char *v133;
  char *v134;
  char *v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  uint64_t v142;
  char *v143;
  uint64_t v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  char *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  char *v164;
  uint64_t v165;
  char *v166;
  uint64_t v167;
  uint64_t v168;
  char *v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  char *v173;
  uint64_t v174;
  char *v175;
  uint64_t v176;
  uint64_t v177;
  char *v178;
  char *v179;
  uint64_t v180;
  uint64_t v181;
  char *v182;
  uint64_t v183;
  char *v184;
  uint64_t v185;
  uint64_t v186;
  _OWORD v187[2];

  v154 = a5;
  v186 = a4;
  v163 = a3;
  v161 = a2;
  v185 = a1;
  v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1DC089DA4(0, (unint64_t *)&unk_1F0350BB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D61EB8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v6);
  v135 = (char *)&v129 - v7;
  v138 = sub_1DC403DE4();
  v137 = *(_QWORD *)(v138 - 8);
  MEMORY[0x1E0C80A78](v138);
  v136 = (char *)&v129 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v140 = sub_1DC403748();
  v139 = *(_QWORD *)(v140 - 8);
  MEMORY[0x1E0C80A78](v140);
  v141 = (char *)&v129 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v144 = sub_1DC40373C();
  v142 = *(_QWORD *)(v144 - 8);
  MEMORY[0x1E0C80A78](v144);
  v143 = (char *)&v129 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v152 = sub_1DC403BE0();
  v151 = *(_QWORD *)(v152 - 8);
  MEMORY[0x1E0C80A78](v152);
  v153 = (char *)&v129 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC089DA4(0, &qword_1EDB274F8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD1E8], v5);
  MEMORY[0x1E0C80A78](v12);
  v148 = (char *)&v129 - v13;
  v150 = sub_1DC4031E4();
  v149 = *(_QWORD *)(v150 - 8);
  MEMORY[0x1E0C80A78](v150);
  v134 = (char *)&v129 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1DC403BEC();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v129 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v129 - v20;
  sub_1DC089DA4(0, &qword_1EDB29780, (uint64_t (*)(uint64_t))MEMORY[0x1E0DACF80], v5);
  MEMORY[0x1E0C80A78](v22);
  v145 = (char *)&v129 - v23;
  v147 = sub_1DC4030A0();
  v146 = *(_QWORD *)(v147 - 8);
  MEMORY[0x1E0C80A78](v147);
  v133 = (char *)&v129 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v174 = sub_1DC4030F4();
  v172 = *(_QWORD *)(v174 - 8);
  MEMORY[0x1E0C80A78](v174);
  v173 = (char *)&v129 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v183 = sub_1DC4030E8();
  v155 = *(_QWORD *)(v183 - 8);
  MEMORY[0x1E0C80A78](v183);
  v182 = (char *)&v129 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v171 = sub_1DC4035C8();
  v170 = *(_QWORD *)(v171 - 8);
  MEMORY[0x1E0C80A78](v171);
  v169 = (char *)&v129 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v168 = sub_1DC402FEC();
  v167 = *(_QWORD *)(v168 - 8);
  MEMORY[0x1E0C80A78](v168);
  v166 = (char *)&v129 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v165 = sub_1DC403E38();
  v184 = *(char **)(v165 - 8);
  MEMORY[0x1E0C80A78](v165);
  v175 = (char *)&v129 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v30);
  v178 = (char *)&v129 - v31;
  v32 = sub_1DC402FF8();
  v180 = *(_QWORD *)(v32 - 8);
  v181 = v32;
  MEMORY[0x1E0C80A78](v32);
  v164 = (char *)&v129 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v34);
  v179 = (char *)&v129 - v35;
  sub_1DC089DA4(0, &qword_1EDB29988, (uint64_t (*)(uint64_t))MEMORY[0x1E0DADF38], v5);
  MEMORY[0x1E0C80A78](v36);
  v160 = (uint64_t)&v129 - v37;
  v162 = sub_1DC403B08();
  v177 = *(_QWORD *)(v162 - 8);
  MEMORY[0x1E0C80A78](v162);
  v132 = (char *)&v129 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC089DA4(0, &qword_1EDB29960, (uint64_t (*)(uint64_t))MEMORY[0x1E0DADDD0], v5);
  MEMORY[0x1E0C80A78](v39);
  v158 = (uint64_t)&v129 - v40;
  v159 = sub_1DC403A54();
  v176 = *(_QWORD *)(v159 - 8);
  MEMORY[0x1E0C80A78](v159);
  v131 = (char *)&v129 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC089DA4(0, &qword_1F0350BA8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DACE70], v5);
  MEMORY[0x1E0C80A78](v42);
  v44 = (char *)&v129 - v43;
  v157 = sub_1DC402FB0();
  v156 = *(_QWORD *)(v157 - 8);
  MEMORY[0x1E0C80A78](v157);
  v130 = (char *)&v129 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD350];
  sub_1DC089DA4(0, &qword_1EDB29800, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD350], v5);
  MEMORY[0x1E0C80A78](v47);
  v49 = (char *)&v129 - v48;
  v50 = sub_1DC4032BC();
  v51 = *(_QWORD *)(v50 - 8);
  MEMORY[0x1E0C80A78](v50);
  v53 = (char *)&v129 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0EDD64(v161, (uint64_t)v49, &qword_1EDB29800, v46);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48))(v49, 1, v50) == 1)
  {
    sub_1DC0B091C((uint64_t)v49, &qword_1EDB29800, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD350]);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v53, v49, v50);
    sub_1DC081B48((unint64_t *)&unk_1EDB297F0, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD350], MEMORY[0x1E0DAD338]);
    sub_1DC4015C4();
    (*(void (**)(char *, uint64_t))(v51 + 8))(v53, v50);
  }
  sub_1DC0EDD64(v163, (uint64_t)v44, &qword_1F0350BA8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DACE70]);
  v54 = v156;
  v55 = v157;
  v56 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v156 + 48))(v44, 1, v157);
  v57 = v176;
  if (v56 == 1)
  {
    sub_1DC0B091C((uint64_t)v44, &qword_1F0350BA8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DACE70]);
  }
  else
  {
    v58 = v130;
    (*(void (**)(char *, char *, uint64_t))(v54 + 32))(v130, v44, v55);
    sub_1DC081B48((unint64_t *)&unk_1EDB29750, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DACE70], MEMORY[0x1E0DACE60]);
    sub_1DC4015C4();
    v59 = v58;
    v57 = v176;
    (*(void (**)(char *, uint64_t))(v54 + 8))(v59, v55);
  }
  v60 = sub_1DC403C94();
  v61 = v158;
  sub_1DC3210B0(v60, v158);
  swift_bridgeObjectRelease();
  v62 = v159;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v57 + 48))(v61, 1, v159) == 1)
  {
    sub_1DC0B091C(v61, &qword_1EDB29960, (uint64_t (*)(uint64_t))MEMORY[0x1E0DADDD0]);
  }
  else
  {
    v63 = v131;
    (*(void (**)(char *, uint64_t, uint64_t))(v57 + 32))(v131, v61, v62);
    sub_1DC081B48((unint64_t *)&qword_1EDB29950, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DADDD0], MEMORY[0x1E0DADDB0]);
    sub_1DC4015C4();
    (*(void (**)(char *, uint64_t))(v57 + 8))(v63, v62);
  }
  v64 = sub_1DC403C94();
  v65 = v160;
  sub_1DC321314(v64, v160);
  swift_bridgeObjectRelease();
  v66 = v177;
  v67 = v162;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v177 + 48))(v65, 1, v162) == 1)
  {
    sub_1DC0B091C(v65, &qword_1EDB29988, (uint64_t (*)(uint64_t))MEMORY[0x1E0DADF38]);
  }
  else
  {
    v68 = v132;
    (*(void (**)(char *, uint64_t, uint64_t))(v66 + 32))(v132, v65, v67);
    sub_1DC089DA4(0, (unint64_t *)&qword_1EDB3FE40, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8178], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v69 = sub_1DC401618();
    v70 = *(_QWORD *)(v69 - 8);
    v71 = (*(unsigned __int8 *)(v70 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v70 + 80);
    v72 = swift_allocObject();
    *(_OWORD *)(v72 + 16) = xmmword_1DC40DC10;
    (*(void (**)(unint64_t, _QWORD, uint64_t))(v70 + 104))(v72 + v71, *MEMORY[0x1E0CF8170], v69);
    sub_1DC081B48(&qword_1EDB27520, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DADF38], MEMORY[0x1E0DADF08]);
    sub_1DC4015C4();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v177 + 8))(v68, v67);
  }
  v73 = v181;
  v74 = v165;
  v75 = v178;
  sub_1DC403C88();
  v76 = v184;
  v77 = v175;
  (*((void (**)(char *, char *, uint64_t))v184 + 2))(v175, v75, v74);
  v78 = (*((uint64_t (**)(char *, uint64_t))v76 + 11))(v77, v74);
  if (v78 == *MEMORY[0x1E0D620A0])
  {
    v79 = v180;
    v80 = v73;
    v81 = v179;
    (*(void (**)(void))(v180 + 104))();
    v82 = v185;
    goto LABEL_22;
  }
  v79 = v180;
  v82 = v185;
  v80 = v73;
  if (v78 == *MEMORY[0x1E0D62060])
  {
    v81 = v179;
    (*(void (**)(char *, _QWORD, uint64_t))(v180 + 104))(v179, *MEMORY[0x1E0DACED8], v80);
    goto LABEL_22;
  }
  v81 = v179;
  if (v78 == *MEMORY[0x1E0D62068])
    goto LABEL_18;
  if (v78 == *MEMORY[0x1E0D62040])
  {
    v83 = (unsigned int *)MEMORY[0x1E0DACED0];
    goto LABEL_21;
  }
  if (v78 == *MEMORY[0x1E0D62078]
    || v78 == *MEMORY[0x1E0D62048]
    || v78 == *MEMORY[0x1E0D620A8]
    || v78 == *MEMORY[0x1E0D62090]
    || v78 == *MEMORY[0x1E0D62088]
    || v78 == *MEMORY[0x1E0D62050]
    || v78 == *MEMORY[0x1E0D62058]
    || v78 == *MEMORY[0x1E0D62080]
    || v78 == *MEMORY[0x1E0D620B8]
    || v78 == *MEMORY[0x1E0D620B0])
  {
LABEL_18:
    v83 = (unsigned int *)MEMORY[0x1E0DACEE0];
LABEL_21:
    (*(void (**)(char *, _QWORD, uint64_t))(v180 + 104))(v179, *v83, v80);
    goto LABEL_22;
  }
  (*(void (**)(char *, _QWORD, uint64_t))(v180 + 104))(v179, *MEMORY[0x1E0DACEE0], v80);
  (*((void (**)(char *, uint64_t))v184 + 1))(v175, v74);
LABEL_22:
  (*((void (**)(char *, uint64_t))v184 + 1))(v178, v74);
  (*(void (**)(char *, char *, uint64_t))(v79 + 16))(v164, v81, v80);
  v84 = v166;
  sub_1DC402FE0();
  sub_1DC081B48(&qword_1EDB274F0, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DACEC8], MEMORY[0x1E0DACEB8]);
  v184 = "eTransactionTracker.swift";
  v85 = v168;
  sub_1DC4015C4();
  (*(void (**)(char *, uint64_t))(v167 + 8))(v84, v85);
  sub_1DC403C7C();
  v86 = v169;
  sub_1DC4035BC();
  sub_1DC081B48(&qword_1EDB29890, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD700], MEMORY[0x1E0DAD6F0]);
  v87 = v171;
  sub_1DC4015C4();
  (*(void (**)(char *, uint64_t))(v170 + 8))(v86, v87);
  sub_1DC403C4C();
  v88 = sub_1DC403C64();
  if (v88 >= 5)
    v89 = (unsigned int *)MEMORY[0x1E0DACFF0];
  else
    v89 = (unsigned int *)qword_1EA45F100[v88];
  (*(void (**)(char *, _QWORD, uint64_t))(v172 + 104))(v173, *v89, v174);
  sub_1DC4030DC();
  sub_1DC081B48(&qword_1EDB29790, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DACFD0], MEMORY[0x1E0DACFC0]);
  sub_1DC4015C4();
  v90 = sub_1DC403C94();
  v91 = *(_QWORD *)(v90 + 16);
  if (v91)
  {
    v92 = v90 + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80));
    v93 = *MEMORY[0x1E0D61820];
    v94 = *(_QWORD *)(v16 + 72);
    v95 = *(void (**)(char *, unint64_t, uint64_t))(v16 + 16);
    while (1)
    {
      v95(v21, v92, v15);
      if ((*(unsigned int (**)(char *, uint64_t))(v16 + 88))(v21, v15) == v93)
        break;
      (*(void (**)(char *, uint64_t))(v16 + 8))(v21, v15);
      v92 += v94;
      if (!--v91)
      {
        v96 = 1;
        v82 = v185;
        goto LABEL_31;
      }
    }
    (*(void (**)(char *, uint64_t))(v16 + 96))(v21, v15);
    v100 = (uint64_t)v145;
    sub_1DC403070();
    v96 = 0;
    v82 = v185;
    v97 = v150;
    v98 = v147;
    v99 = v146;
  }
  else
  {
    v96 = 1;
LABEL_31:
    v97 = v150;
    v98 = v147;
    v99 = v146;
    v100 = (uint64_t)v145;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v99 + 56))(v100, v96, 1, v98);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v99 + 48))(v100, 1, v98) == 1)
  {
    sub_1DC0B091C(v100, &qword_1EDB29780, (uint64_t (*)(uint64_t))MEMORY[0x1E0DACF80]);
  }
  else
  {
    v101 = v133;
    (*(void (**)(char *, uint64_t, uint64_t))(v99 + 32))(v133, v100, v98);
    sub_1DC081B48((unint64_t *)&unk_1EDB29770, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DACF80], MEMORY[0x1E0DACF58]);
    sub_1DC4015C4();
    (*(void (**)(char *, uint64_t))(v99 + 8))(v101, v98);
  }
  v102 = sub_1DC403C94();
  v103 = *(_QWORD *)(v102 + 16);
  if (v103)
  {
    v104 = v102 + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80));
    v105 = *MEMORY[0x1E0D617F0];
    v106 = *(_QWORD *)(v16 + 72);
    v107 = *(void (**)(char *, unint64_t, uint64_t))(v16 + 16);
    while (1)
    {
      v107(v18, v104, v15);
      if ((*(unsigned int (**)(char *, uint64_t))(v16 + 88))(v18, v15) == v105)
        break;
      (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
      v104 += v106;
      if (!--v103)
      {
        v108 = 1;
        v82 = v185;
        goto LABEL_42;
      }
    }
    (*(void (**)(char *, uint64_t))(v16 + 96))(v18, v15);
    v115 = (uint64_t)v148;
    sub_1DC4031CC();
    v108 = 0;
    v82 = v185;
    v109 = v155;
    v110 = v154;
    v111 = v153;
    v112 = v152;
    v113 = v151;
    v114 = v149;
  }
  else
  {
    v108 = 1;
LABEL_42:
    v109 = v155;
    v110 = v154;
    v111 = v153;
    v112 = v152;
    v113 = v151;
    v114 = v149;
    v115 = (uint64_t)v148;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v114 + 56))(v115, v108, 1, v97);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v114 + 48))(v115, 1, v97) == 1)
  {
    sub_1DC0B091C(v115, &qword_1EDB274F8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD1E8]);
  }
  else
  {
    v116 = v134;
    (*(void (**)(char *, uint64_t, uint64_t))(v114 + 32))(v134, v115, v97);
    sub_1DC081B48(&qword_1EDB297D0, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD1E8], MEMORY[0x1E0DAD1D0]);
    sub_1DC4015C4();
    (*(void (**)(char *, uint64_t))(v114 + 8))(v116, v97);
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v113 + 16))(v111, v110, v112);
  v117 = (*(uint64_t (**)(char *, uint64_t))(v113 + 88))(v111, v112);
  if (v117 == *MEMORY[0x1E0D617D0])
  {
    (*(void (**)(char *, uint64_t))(v113 + 96))(v111, v112);
    v118 = v137;
    v119 = v136;
    v120 = v138;
    (*(void (**)(char *, char *, uint64_t))(v137 + 32))(v136, v111, v138);
    (*(void (**)(char *, _QWORD, uint64_t))(v139 + 104))(v141, *MEMORY[0x1E0DAD958], v140);
    v121 = v143;
    sub_1DC403730();
    sub_1DC081B48((unint64_t *)&unk_1F0350BD0, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD930], MEMORY[0x1E0DAD920]);
LABEL_55:
    v122 = v144;
    sub_1DC4015C4();
    (*(void (**)(char *, uint64_t))(v142 + 8))(v121, v122);
    v123 = (uint64_t)v135;
    (*(void (**)(char *, char *, uint64_t))(v118 + 16))(v135, v119, v120);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v118 + 56))(v123, 0, 1, v120);
    sub_1DC2A5C50(v82, v123);
    sub_1DC0B091C(v123, (unint64_t *)&unk_1F0350BB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D61EB8]);
    v124 = *(void (**)(char *, uint64_t))(v118 + 8);
    v125 = v119;
    goto LABEL_56;
  }
  if (v117 == *MEMORY[0x1E0D617B8])
  {
    (*(void (**)(char *, uint64_t))(v113 + 96))(v111, v112);
    v118 = v137;
    v119 = v136;
    v120 = v138;
    (*(void (**)(char *, char *, uint64_t))(v137 + 32))(v136, v111, v138);
    (*(void (**)(char *, _QWORD, uint64_t))(v139 + 104))(v141, *MEMORY[0x1E0DAD940], v140);
    v121 = v143;
    sub_1DC403730();
    sub_1DC081B48((unint64_t *)&unk_1F0350BD0, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD930], MEMORY[0x1E0DAD920]);
    goto LABEL_55;
  }
  if (v117 == *MEMORY[0x1E0D617C0])
  {
    (*(void (**)(char *, uint64_t))(v113 + 96))(v111, v112);
    v118 = v137;
    v119 = v136;
    v120 = v138;
    (*(void (**)(char *, char *, uint64_t))(v137 + 32))(v136, v111, v138);
    (*(void (**)(char *, _QWORD, uint64_t))(v139 + 104))(v141, *MEMORY[0x1E0DAD948], v140);
    v121 = v143;
    sub_1DC403730();
    sub_1DC081B48((unint64_t *)&unk_1F0350BD0, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD930], MEMORY[0x1E0DAD920]);
    goto LABEL_55;
  }
  if (v117 == *MEMORY[0x1E0D617D8])
  {
    (*(void (**)(char *, uint64_t))(v113 + 96))(v111, v112);
    v118 = v137;
    v119 = v136;
    v120 = v138;
    (*(void (**)(char *, char *, uint64_t))(v137 + 32))(v136, v111, v138);
    (*(void (**)(char *, _QWORD, uint64_t))(v139 + 104))(v141, *MEMORY[0x1E0DAD938], v140);
    v121 = v143;
    sub_1DC403730();
    sub_1DC081B48((unint64_t *)&unk_1F0350BD0, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD930], MEMORY[0x1E0DAD920]);
    goto LABEL_55;
  }
  if (v117 != *MEMORY[0x1E0D617C8])
  {
    (*(void (**)(char *, uint64_t))(v113 + 8))(v111, v112);
    goto LABEL_57;
  }
  (*(void (**)(char *, _QWORD, uint64_t))(v139 + 104))(v141, *MEMORY[0x1E0DAD950], v140);
  v128 = v143;
  sub_1DC403730();
  sub_1DC081B48((unint64_t *)&unk_1F0350BD0, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD930], MEMORY[0x1E0DAD920]);
  v120 = v144;
  sub_1DC4015C4();
  v124 = *(void (**)(char *, uint64_t))(v142 + 8);
  v125 = v128;
LABEL_56:
  v124(v125, v120);
LABEL_57:
  v126 = v179;
  sub_1DC403808();
  sub_1DC081B48((unint64_t *)&unk_1F0350BC0, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DADA58], MEMORY[0x1E0DADA50]);
  memset(v187, 0, sizeof(v187));
  sub_1DC4015DC();
  sub_1DC150744((uint64_t)v187);
  (*(void (**)(char *, uint64_t))(v109 + 8))(v182, v183);
  return (*(uint64_t (**)(char *, uint64_t))(v180 + 8))(v126, v181);
}

uint64_t sub_1DC2A4CDC(void **a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void *v19;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t);
  void (*v26)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  _QWORD *v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(uint64_t);
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  char *v53;

  v43 = (char *)a3;
  v44 = a4;
  v50 = sub_1DC403BE0();
  v47 = *(_QWORD *)(v50 - 8);
  MEMORY[0x1E0C80A78](v50);
  v45 = v6;
  v53 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = sub_1DC403CA0();
  v46 = *(_QWORD *)(v52 - 8);
  MEMORY[0x1E0C80A78](v52);
  v42 = v7;
  v51 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1DC089DA4(0, &qword_1EDB29800, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD350], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v41 = *(_QWORD *)(v9 - 8);
  v10 = *(_QWORD *)(v41 + 64);
  MEMORY[0x1E0C80A78](v9);
  v49 = (uint64_t)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v38 - v12;
  sub_1DC089DA4(0, &qword_1F0350BA8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DACE70], v8);
  v40 = *(_QWORD *)(v14 - 8);
  v15 = *(_QWORD *)(v40 + 64);
  MEMORY[0x1E0C80A78](v14);
  v48 = (uint64_t)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v38 - v17;
  v19 = *a1;
  swift_getObjectType();
  v20 = objc_msgSend(v19, sel_sourceChannel);
  if (v20)
  {
    v21 = v20;
    __swift_project_boxed_opaque_existential_1(a2 + 3, a2[6]);
    sub_1DC292AD8(v21);
    swift_unknownObjectRelease();
    v22 = sub_1DC402FB0();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v18, 0, 1, v22);
  }
  else
  {
    v23 = sub_1DC402FB0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v18, 1, 1, v23);
  }
  sub_1DC29A9A8((uint64_t)v13);
  v24 = sub_1DC4032BC();
  v25 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD350];
  v26 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56);
  v39 = v13;
  v26(v13, 0, 1, v24);
  v38 = a2[2];
  sub_1DC0EDD64((uint64_t)v13, v49, &qword_1EDB29800, v25);
  sub_1DC0EDD64((uint64_t)v18, v48, &qword_1F0350BA8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DACE70]);
  v27 = v46;
  (*(void (**)(char *, char *, uint64_t))(v46 + 16))(v51, v43, v52);
  v43 = v18;
  v28 = v47;
  (*(void (**)(char *, uint64_t, uint64_t))(v47 + 16))(v53, v44, v50);
  v29 = (*(unsigned __int8 *)(v41 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80);
  v30 = (v10 + *(unsigned __int8 *)(v40 + 80) + v29) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80);
  v31 = (v15 + *(unsigned __int8 *)(v27 + 80) + v30) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
  v32 = (v42 + *(unsigned __int8 *)(v28 + 80) + v31) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
  v33 = a2;
  v34 = (v45 + v32 + 7) & 0xFFFFFFFFFFFFFFF8;
  v35 = swift_allocObject();
  sub_1DC2161A8(v49, v35 + v29, &qword_1EDB29800, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD350]);
  v36 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DACE70];
  sub_1DC2161A8(v48, v35 + v30, &qword_1F0350BA8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DACE70]);
  (*(void (**)(unint64_t, char *, uint64_t))(v27 + 32))(v35 + v31, v51, v52);
  (*(void (**)(unint64_t, char *, uint64_t))(v28 + 32))(v35 + v32, v53, v50);
  *(_QWORD *)(v35 + v34) = v33;
  swift_retain();
  sub_1DC401828();
  swift_release();
  sub_1DC0B091C((uint64_t)v39, &qword_1EDB29800, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD350]);
  return sub_1DC0B091C((uint64_t)v43, &qword_1F0350BA8, v36);
}

uint64_t sub_1DC2A510C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(uint64_t);
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;

  v46 = a3;
  v47 = a4;
  v50 = a2;
  v45 = sub_1DC403BE0();
  v4 = *(_QWORD *)(v45 - 8);
  v48 = *(_QWORD *)(v4 + 64);
  v49 = v4;
  MEMORY[0x1E0C80A78](v45);
  v51 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1DC403CA0();
  v43 = *(_QWORD *)(v6 - 8);
  v39 = v6;
  v7 = *(_QWORD *)(v43 + 64);
  MEMORY[0x1E0C80A78](v6);
  v41 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1DC089DA4(0, &qword_1F0350BA8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DACE70], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x1E0C80A78](v9);
  v38 = (uint64_t)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v38 - v13;
  sub_1DC089DA4(0, &qword_1EDB29800, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD350], v8);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(_QWORD *)(v16 + 64);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v38 - v20;
  v22 = sub_1DC4032BC();
  v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56);
  v44 = v21;
  v23(v21, 1, 1, v22);
  v24 = sub_1DC402FB0();
  v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56);
  v40 = v14;
  v25(v14, 1, 1, v24);
  v42 = *(_QWORD *)(v50 + 16);
  sub_1DC0EDD64((uint64_t)v21, (uint64_t)v18, &qword_1EDB29800, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD350]);
  sub_1DC0EDD64((uint64_t)v14, (uint64_t)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1F0350BA8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DACE70]);
  v26 = v43;
  v27 = v41;
  (*(void (**)(char *, uint64_t, uint64_t))(v43 + 16))(v41, v46, v6);
  v28 = v49;
  v29 = v45;
  (*(void (**)(char *, uint64_t, uint64_t))(v49 + 16))(v51, v47, v45);
  v30 = (*(unsigned __int8 *)(v16 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v31 = (v17 + *(unsigned __int8 *)(v10 + 80) + v30) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v32 = (v11 + *(unsigned __int8 *)(v26 + 80) + v31) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
  v33 = (v7 + *(unsigned __int8 *)(v28 + 80) + v32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
  v34 = (v48 + v33 + 7) & 0xFFFFFFFFFFFFFFF8;
  v35 = swift_allocObject();
  sub_1DC2161A8((uint64_t)v18, v35 + v30, &qword_1EDB29800, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD350]);
  v36 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DACE70];
  sub_1DC2161A8(v38, v35 + v31, &qword_1F0350BA8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DACE70]);
  (*(void (**)(unint64_t, char *, uint64_t))(v26 + 32))(v35 + v32, v27, v39);
  (*(void (**)(unint64_t, char *, uint64_t))(v49 + 32))(v35 + v33, v51, v29);
  *(_QWORD *)(v35 + v34) = v50;
  swift_retain();
  sub_1DC401828();
  swift_release();
  sub_1DC0B091C((uint64_t)v40, &qword_1F0350BA8, v36);
  return sub_1DC0B091C((uint64_t)v44, &qword_1EDB29800, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD350]);
}

void *sub_1DC2A54A4(void *a1)
{
  id v1;
  void *v3;

  v1 = a1;
  sub_1DC16BD54();
  type metadata accessor for SKError(0);
  if ((swift_dynamicCast() & 1) == 0)
    return 0;
  sub_1DC081B48((unint64_t *)&unk_1F0350BF0, 255, (uint64_t (*)(uint64_t))type metadata accessor for SKError, (uint64_t)&unk_1DC40D774);
  sub_1DC3FFCBC();

  return a1;
}

uint64_t sub_1DC2A5554@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t);
  uint64_t *v35;
  uint64_t v36;
  uint64_t result;
  _QWORD v38[2];
  uint64_t *v39;
  __int128 v40;
  uint64_t v41;
  _UNKNOWN **v42;
  _QWORD v43[5];
  __int128 v44[2];
  _BYTE v45[24];
  uint64_t v46;

  v3 = v2;
  v39 = a2;
  v5 = *v3;
  v6 = sub_1DC403E68();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1DC403AC0();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x1E0C80A78](v14);
  v17 = (char *)v38 - v16;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v7 + 16))(v9, a1, v6, v15);
  if ((*(unsigned int (**)(char *, uint64_t))(v7 + 88))(v9, v6) == *MEMORY[0x1E0D62338])
  {
    v18 = *MEMORY[0x1E0DADEC8];
    v38[0] = *(_QWORD *)(v11 + 104);
    ((void (*)(char *, uint64_t, uint64_t))v38[0])(v17, v18, v10);
    sub_1DC4017EC();
    sub_1DC0824D4((uint64_t)(v3 + 3), (uint64_t)v45);
    sub_1DC0824D4((uint64_t)(v3 + 8), (uint64_t)v44);
    v19 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v45, v46);
    v38[1] = v38;
    v20 = MEMORY[0x1E0C80A78](v19);
    v22 = (_QWORD *)((char *)v38 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v23 + 16))(v22, v20);
    v24 = *v22;
    v25 = type metadata accessor for AnalyticsChannelDataFactory();
    v43[3] = v25;
    v43[4] = &off_1EA45E160;
    v43[0] = v24;
    v26 = swift_allocObject();
    v27 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v43, v25);
    v28 = MEMORY[0x1E0C80A78](v27);
    v30 = (_QWORD *)((char *)v38 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v31 + 16))(v30, v28);
    v32 = *v30;
    v41 = v25;
    v42 = &off_1EA45E160;
    *(_QWORD *)&v40 = v32;
    ((void (*)(char *, _QWORD, uint64_t))v38[0])(v13, *MEMORY[0x1E0DADED0], v10);
    v33 = sub_1DC4017EC();
    swift_release();
    v34 = *(void (**)(char *, uint64_t))(v11 + 8);
    v34(v13, v10);
    *(_QWORD *)(v26 + 16) = v33;
    sub_1DC097DD0(&v40, v26 + 24);
    sub_1DC097DD0(v44, v26 + 64);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v43);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v45);
    v35 = v39;
    v39[3] = v5;
    v35[4] = sub_1DC081B48((unint64_t *)&unk_1EDB36C70, v36, (uint64_t (*)(uint64_t))type metadata accessor for PurchaseTransactionTracker, (uint64_t)&unk_1DC421AAC);
    *v35 = v26;
    return ((uint64_t (*)(char *, uint64_t))v34)(v17, v10);
  }
  else
  {
    result = sub_1DC409838();
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC2A58B4()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  return swift_deallocClassInstance();
}

uint64_t sub_1DC2A58E8(uint64_t a1, uint64_t a2)
{
  return sub_1DC2A2D04(a1, a2);
}

uint64_t sub_1DC2A5908@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1DC2A5554(a1, a2);
}

uint64_t sub_1DC2A5930()
{
  uint64_t v0;

  __swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)(v0 + 16) + 64), *(_QWORD *)(*(_QWORD *)(v0 + 16) + 88));
  return sub_1DC408128();
}

uint64_t sub_1DC2A5998(void **a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(sub_1DC403CA0() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v3 + 64);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(sub_1DC403BE0() - 8) + 80);
  return sub_1DC2A4CDC(a1, *(_QWORD **)(v1 + 16), v1 + v4, v1 + ((v4 + v5 + v6) & ~v6));
}

uint64_t objectdestroy_2Tm_3()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v1 = sub_1DC403CA0();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = sub_1DC403BE0();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (v3 + v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);
  return swift_deallocObject();
}

uint64_t sub_1DC2A5AE0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(sub_1DC403CA0() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v3 + 64);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(sub_1DC403BE0() - 8) + 80);
  return sub_1DC2A510C(a1, *(_QWORD *)(v1 + 16), v1 + v4, v1 + ((v4 + v5 + v6) & ~v6));
}

uint64_t sub_1DC2A5B50(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1DC089DA4(0, &qword_1EDB29800, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD350], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64);
  sub_1DC089DA4(0, &qword_1F0350BA8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DACE70], v3);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = (v6 + v7 + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v11 = *(_QWORD *)(v9 + 64);
  v12 = *(_QWORD *)(sub_1DC403CA0() - 8);
  v13 = (v10 + v11 + *(unsigned __int8 *)(v12 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v14 = *(_QWORD *)(v12 + 64);
  v15 = *(unsigned __int8 *)(*(_QWORD *)(sub_1DC403BE0() - 8) + 80);
  return sub_1DC2A33F0(a1, v1 + v6, v1 + v10, v1 + v13, v1 + ((v13 + v14 + v15) & ~v15));
}

void sub_1DC2A5C50(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t (*v8)(void);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t (*v19)(uint64_t);
  uint64_t v20;
  uint64_t v21;
  int v22;
  id v23;
  char *v24;
  char *v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;

  v29 = a1;
  v3 = sub_1DC403160();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = sub_1DC403484();
  v30 = *(_QWORD *)(v32 - 8);
  MEMORY[0x1E0C80A78](v32);
  v31 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0D61EB8];
  sub_1DC089DA4(0, (unint64_t *)&unk_1F0350BB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D61EB8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v29 - v10;
  v12 = sub_1DC403DE4();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (id *)((char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v29 - v17;
  v19 = (uint64_t (*)(uint64_t))v8;
  v21 = v20;
  sub_1DC0EDD64(a2, (uint64_t)v11, (unint64_t *)&unk_1F0350BB0, v19);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v21) == 1)
  {
    sub_1DC0B091C((uint64_t)v11, (unint64_t *)&unk_1F0350BB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D61EB8]);
    return;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v18, v11, v21);
  (*(void (**)(id *, char *, uint64_t))(v13 + 16))(v15, v18, v21);
  v22 = (*(uint64_t (**)(id *, uint64_t))(v13 + 88))(v15, v21);
  if (v22 == *MEMORY[0x1E0D61EA8])
  {
    (*(void (**)(id *, uint64_t))(v13 + 96))(v15, v21);
    v23 = *v15;
    switch((unint64_t)sub_1DC2A54A4(v23))
    {
      case 0uLL:
        (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E0DAD128], v3);
        v24 = v31;
        sub_1DC403478();
        sub_1DC081B48((unint64_t *)&unk_1F0350BE0, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD570], MEMORY[0x1E0DAD560]);
        goto LABEL_31;
      case 1uLL:
        (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E0DAD088], v3);
        v24 = v31;
        sub_1DC403478();
        sub_1DC081B48((unint64_t *)&unk_1F0350BE0, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD570], MEMORY[0x1E0DAD560]);
        goto LABEL_31;
      case 2uLL:
        (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E0DAD0B8], v3);
        v24 = v31;
        sub_1DC403478();
        sub_1DC081B48((unint64_t *)&unk_1F0350BE0, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD570], MEMORY[0x1E0DAD560]);
        goto LABEL_31;
      case 3uLL:
        (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E0DAD0A0], v3);
        v24 = v31;
        sub_1DC403478();
        sub_1DC081B48((unint64_t *)&unk_1F0350BE0, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD570], MEMORY[0x1E0DAD560]);
        goto LABEL_31;
      case 4uLL:
        (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E0DAD0C8], v3);
        v24 = v31;
        sub_1DC403478();
        sub_1DC081B48((unint64_t *)&unk_1F0350BE0, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD570], MEMORY[0x1E0DAD560]);
        goto LABEL_31;
      case 5uLL:
        (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E0DAD100], v3);
        v24 = v31;
        sub_1DC403478();
        sub_1DC081B48((unint64_t *)&unk_1F0350BE0, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD570], MEMORY[0x1E0DAD560]);
        goto LABEL_31;
      case 6uLL:
        (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E0DAD110], v3);
        v24 = v31;
        sub_1DC403478();
        sub_1DC081B48((unint64_t *)&unk_1F0350BE0, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD570], MEMORY[0x1E0DAD560]);
        goto LABEL_31;
      case 7uLL:
        (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E0DAD120], v3);
        v24 = v31;
        sub_1DC403478();
        sub_1DC081B48((unint64_t *)&unk_1F0350BE0, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD570], MEMORY[0x1E0DAD560]);
        goto LABEL_31;
      case 8uLL:
        (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E0DAD0E0], v3);
        v24 = v31;
        sub_1DC403478();
        sub_1DC081B48((unint64_t *)&unk_1F0350BE0, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD570], MEMORY[0x1E0DAD560]);
        goto LABEL_31;
      case 9uLL:
        (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E0DAD118], v3);
        v24 = v31;
        sub_1DC403478();
        sub_1DC081B48((unint64_t *)&unk_1F0350BE0, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD570], MEMORY[0x1E0DAD560]);
        goto LABEL_31;
      case 0xAuLL:
        (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E0DAD0F8], v3);
        v24 = v31;
        sub_1DC403478();
        sub_1DC081B48((unint64_t *)&unk_1F0350BE0, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD570], MEMORY[0x1E0DAD560]);
        goto LABEL_31;
      case 0xBuLL:
        (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E0DAD0F0], v3);
        v24 = v31;
        sub_1DC403478();
        sub_1DC081B48((unint64_t *)&unk_1F0350BE0, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD570], MEMORY[0x1E0DAD560]);
        goto LABEL_31;
      case 0xCuLL:
        (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E0DAD0A8], v3);
        v24 = v31;
        sub_1DC403478();
        sub_1DC081B48((unint64_t *)&unk_1F0350BE0, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD570], MEMORY[0x1E0DAD560]);
        goto LABEL_31;
      case 0xDuLL:
        (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E0DAD0D8], v3);
        v24 = v31;
        sub_1DC403478();
        sub_1DC081B48((unint64_t *)&unk_1F0350BE0, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD570], MEMORY[0x1E0DAD560]);
        goto LABEL_31;
      case 0xEuLL:
        (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E0DAD0C0], v3);
        v24 = v31;
        sub_1DC403478();
        sub_1DC081B48((unint64_t *)&unk_1F0350BE0, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD570], MEMORY[0x1E0DAD560]);
        goto LABEL_31;
      case 0xFuLL:
        (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E0DAD0B0], v3);
        v24 = v31;
        sub_1DC403478();
        sub_1DC081B48((unint64_t *)&unk_1F0350BE0, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD570], MEMORY[0x1E0DAD560]);
        goto LABEL_31;
      case 0x10uLL:
        (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E0DAD108], v3);
        v24 = v31;
        sub_1DC403478();
        sub_1DC081B48((unint64_t *)&unk_1F0350BE0, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD570], MEMORY[0x1E0DAD560]);
        goto LABEL_31;
      case 0x11uLL:
        (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E0DAD098], v3);
        v24 = v31;
        sub_1DC403478();
        sub_1DC081B48((unint64_t *)&unk_1F0350BE0, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD570], MEMORY[0x1E0DAD560]);
        goto LABEL_31;
      case 0x12uLL:
        (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E0DAD0D0], v3);
        v24 = v31;
        sub_1DC403478();
        sub_1DC081B48((unint64_t *)&unk_1F0350BE0, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD570], MEMORY[0x1E0DAD560]);
        goto LABEL_31;
      case 0x13uLL:
        (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E0DAD0E8], v3);
        v24 = v31;
        sub_1DC403478();
        sub_1DC081B48((unint64_t *)&unk_1F0350BE0, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD570], MEMORY[0x1E0DAD560]);
LABEL_31:
        v28 = v32;
        sub_1DC4015C4();

        (*(void (**)(char *, uint64_t))(v30 + 8))(v24, v28);
        break;
      default:

        break;
    }
  }
  else
  {
    if (v22 == *MEMORY[0x1E0D61EA0])
    {
      (*(void (**)(char *, uint64_t))(v13 + 8))(v18, v21);
      (*(void (**)(id *, uint64_t))(v13 + 96))(v15, v21);

      return;
    }
    if (v22 != *MEMORY[0x1E0D61EB0])
    {
      v27 = *(void (**)(char *, uint64_t))(v13 + 8);
      v27(v18, v21);
      v27((char *)v15, v21);
      return;
    }
    (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E0DAD090], v3);
    v25 = v31;
    sub_1DC403478();
    sub_1DC081B48((unint64_t *)&unk_1F0350BE0, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD570], MEMORY[0x1E0DAD560]);
    v26 = v32;
    sub_1DC4015C4();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v25, v26);
  }
  (*(void (**)(char *, uint64_t))(v13 + 8))(v18, v21);
}

uint64_t type metadata accessor for StockChartRangeCalloutRenderer()
{
  return objc_opt_self();
}

id sub_1DC2A69AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v6;
  void *v7;
  void *v8;

  v6 = *(void **)(a1 + OBJC_IVAR____TtC8StocksUI26StockChartRangeCalloutView_dateLabel);
  objc_msgSend(v6, sel_setFrame_, *(double *)(a4 + 8), *(double *)(a4 + 16), *(double *)(a4 + 24), *(double *)(a4 + 32));
  objc_msgSend(v6, sel_setAdjustsFontSizeToFitWidth_, 1);
  objc_msgSend(v6, sel_setAttributedText_, *(_QWORD *)a4);
  v7 = *(void **)(a1 + OBJC_IVAR____TtC8StocksUI26StockChartRangeCalloutView_priceChangeLabel);
  objc_msgSend(v7, sel_setFrame_, *(double *)(a4 + 48), *(double *)(a4 + 56), *(double *)(a4 + 64), *(double *)(a4 + 72));
  objc_msgSend(v7, sel_setAttributedText_, *(_QWORD *)(a4 + 40));
  v8 = *(void **)(a1 + OBJC_IVAR____TtC8StocksUI26StockChartRangeCalloutView_percentageChangeLabel);
  objc_msgSend(v8, sel_setFrame_, *(double *)(a4 + 88), *(double *)(a4 + 96), *(double *)(a4 + 104), *(double *)(a4 + 112));
  return objc_msgSend(v8, sel_setAttributedText_, *(_QWORD *)(a4 + 80));
}

uint64_t type metadata accessor for ForYouFeedMastheadView()
{
  uint64_t result;

  result = qword_1EDB40BF0;
  if (!qword_1EDB40BF0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1DC2A6ACC()
{
  return swift_initClassMetadata2();
}

char *sub_1DC2A6B20(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v5;
  objc_class *ObjectType;
  uint64_t v11;
  id v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  void *v21;
  uint64_t v22;
  id v23;
  objc_super v25;

  v5 = v4;
  ObjectType = (objc_class *)swift_getObjectType();
  v11 = qword_1EDB40BE0;
  v12 = objc_allocWithZone(MEMORY[0x1E0DC3990]);
  v13 = v4;
  *(_QWORD *)&v5[v11] = objc_msgSend(v12, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v14 = qword_1EDB40BE8;
  *(_QWORD *)&v13[v14] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v15 = qword_1EDB40BD0;
  *(_QWORD *)&v13[v15] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v16 = qword_1EDB40BD8;
  *(_QWORD *)&v13[v16] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3890]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v17 = qword_1F0350C00;
  *(_QWORD *)&v13[v17] = objc_msgSend(objc_allocWithZone((Class)sub_1DC403C34()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);

  v25.receiver = v13;
  v25.super_class = ObjectType;
  v18 = (char *)objc_msgSendSuper2(&v25, sel_initWithFrame_, a1, a2, a3, a4);
  v19 = *(_QWORD *)&v18[qword_1EDB40BD8];
  v20 = v18;
  objc_msgSend(v20, sel_addSubview_, v19);
  v21 = *(void **)&v20[qword_1EDB40BE0];
  objc_msgSend(v20, sel_addSubview_, v21);
  objc_msgSend(v20, sel_addSubview_, *(_QWORD *)&v20[qword_1EDB40BE8]);
  objc_msgSend(v20, sel_addSubview_, *(_QWORD *)&v20[qword_1EDB40BD0]);
  objc_msgSend(v20, sel_addSubview_, *(_QWORD *)&v20[qword_1F0350C00]);
  v22 = *MEMORY[0x1E0DC4670];
  v23 = v21;
  objc_msgSend(v23, sel_setAccessibilityTraits_, v22);

  return v20;
}

char *sub_1DC2A6D58(double a1, double a2, double a3, double a4)
{
  return sub_1DC2A6B20(a1, a2, a3, a4);
}

void sub_1DC2A6D78(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;

  v3 = a3;
  sub_1DC2A6F00();
}

void sub_1DC2A6D9C(void *a1)
{
  id v1;
  objc_super v2;

  v2.receiver = a1;
  v2.super_class = (Class)swift_getObjectType();
  v1 = v2.receiver;
  objc_msgSendSuper2(&v2, sel_layoutSubviews);
  sub_1DC40934C();

}

void sub_1DC2A6DF8()
{
  uint64_t v0;

}

void sub_1DC2A6E54(uint64_t a1)
{

}

uint64_t sub_1DC2A6EBC()
{
  return type metadata accessor for ForYouFeedMastheadView();
}

void sub_1DC2A6EC4(void *a1)
{
  id v1;

  v1 = a1;
  sub_1DC40934C();

}

void sub_1DC2A6F00()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = qword_1EDB40BE0;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v2 = qword_1EDB40BE8;
  *(_QWORD *)&v0[v2] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v3 = qword_1EDB40BD0;
  *(_QWORD *)&v0[v3] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v4 = qword_1EDB40BD8;
  *(_QWORD *)&v0[v4] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3890]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v5 = qword_1F0350C00;
  *(_QWORD *)&v0[v5] = objc_msgSend(objc_allocWithZone((Class)sub_1DC403C34()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);

  sub_1DC409838();
  __break(1u);
}

ValueMetadata *type metadata accessor for AlertWatchlistRemoval()
{
  return &type metadata for AlertWatchlistRemoval;
}

uint64_t sub_1DC2A7064(uint64_t a1, uint64_t a2)
{
  uint64_t ObjCClassFromMetadata;
  id v5;
  uint64_t v6;
  uint64_t v7;

  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v5 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1DC3FFC80();

  sub_1DC0E7FF0();
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1DC40DC10;
  *(_QWORD *)(v6 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v6 + 64) = sub_1DC0E7FAC();
  *(_QWORD *)(v6 + 32) = a1;
  *(_QWORD *)(v6 + 40) = a2;
  swift_bridgeObjectRetain();
  v7 = sub_1DC408A70();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1DC2A719C(uint64_t a1, uint64_t a2)
{
  uint64_t ObjCClassFromMetadata;
  id v5;
  uint64_t v6;
  uint64_t v7;

  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v5 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1DC3FFC80();

  sub_1DC0E7FF0();
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1DC40DC10;
  *(_QWORD *)(v6 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v6 + 64) = sub_1DC0E7FAC();
  *(_QWORD *)(v6 + 32) = a1;
  *(_QWORD *)(v6 + 40) = a2;
  swift_bridgeObjectRetain();
  v7 = sub_1DC408A70();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1DC2A72D4()
{
  uint64_t *v0;

  return sub_1DC2A7064(*v0, v0[1]);
}

uint64_t sub_1DC2A72DC()
{
  uint64_t *v0;

  return sub_1DC2A719C(*v0, v0[1]);
}

uint64_t sub_1DC2A72E4()
{
  uint64_t ObjCClassFromMetadata;
  id v1;
  uint64_t v2;

  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v2 = sub_1DC3FFC80();

  return v2;
}

uint64_t sub_1DC2A73A0()
{
  uint64_t ObjCClassFromMetadata;
  id v1;
  uint64_t v2;

  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v2 = sub_1DC3FFC80();

  return v2;
}

uint64_t sub_1DC2A7460()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  v0 = sub_1DC407B04();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for ForYouFeedLayoutModel();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0FF434();
  sub_1DC404DE0();
  if (swift_getEnumCaseMultiPayload() == 1)
    return sub_1DC2A7588((uint64_t)v6);
  (*(void (**)(char *, char *, uint64_t))(v1 + 32))(v3, v6, v0);
  sub_1DC4075D0();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_1DC2A7588(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ForYouFeedLayoutModel();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t *sub_1DC2A75C4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int (*v15)(char *, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  char *__dst;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v17 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v17 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = *(int *)(a3 + 20);
    v7 = (uint64_t *)((char *)a1 + v6);
    v8 = (char *)a2 + v6;
    v9 = *(uint64_t *)((char *)a2 + v6 + 8);
    *v7 = *(uint64_t *)((char *)a2 + v6);
    v7[1] = v9;
    v10 = type metadata accessor for AttributionSource();
    v11 = *(int *)(v10 + 20);
    __dst = (char *)v7 + v11;
    v12 = &v8[v11];
    v13 = sub_1DC3FFDD0();
    v14 = *(_QWORD *)(v13 - 8);
    v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v15(v12, 1, v13))
    {
      sub_1DC133BB0(0);
      memcpy(__dst, v12, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(__dst, v12, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(__dst, 0, 1, v13);
    }
    v18 = *(int *)(v10 + 24);
    v19 = *(void **)&v8[v18];
    *(_QWORD *)((char *)v7 + v18) = v19;
    v20 = v19;
  }
  return v3;
}

void sub_1DC2A7708(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  swift_bridgeObjectRelease();
  v5 = type metadata accessor for AttributionSource();
  v6 = v4 + *(int *)(v5 + 20);
  v7 = sub_1DC3FFDD0();
  v8 = *(_QWORD *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);

}

_QWORD *sub_1DC2A77A4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  char *__dst;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(a3 + 20);
  v6 = (_QWORD *)((char *)a1 + v5);
  v7 = (char *)a2 + v5;
  v8 = *(_QWORD *)((char *)a2 + v5 + 8);
  *v6 = *(_QWORD *)((char *)a2 + v5);
  v6[1] = v8;
  v9 = type metadata accessor for AttributionSource();
  v10 = *(int *)(v9 + 20);
  __dst = (char *)v6 + v10;
  v11 = &v7[v10];
  v12 = sub_1DC3FFDD0();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v14(v11, 1, v12))
  {
    sub_1DC133BB0(0);
    memcpy(__dst, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(__dst, v11, v12);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(__dst, 0, 1, v12);
  }
  v16 = *(int *)(v9 + 24);
  v17 = *(void **)&v7[v16];
  *(_QWORD *)((char *)v6 + v16) = v17;
  v18 = v17;
  return a1;
}

_QWORD *sub_1DC2A78BC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(char *, uint64_t, uint64_t);
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  id v22;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (_QWORD *)((char *)a1 + v6);
  v8 = (char *)a2 + v6;
  *v7 = *(_QWORD *)((char *)a2 + v6);
  v7[1] = *(_QWORD *)((char *)a2 + v6 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v9 = type metadata accessor for AttributionSource();
  v10 = *(int *)(v9 + 20);
  v11 = (char *)v7 + v10;
  v12 = &v8[v10];
  v13 = sub_1DC3FFDD0();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  v16 = v15(v11, 1, v13);
  v17 = v15(v12, 1, v13);
  if (!v16)
  {
    if (!v17)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 24))(v11, v12, v13);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v14 + 8))(v11, v13);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    sub_1DC133BB0(0);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
LABEL_7:
  v19 = *(int *)(v9 + 24);
  v20 = *(void **)((char *)v7 + v19);
  v21 = *(void **)&v8[v19];
  *(_QWORD *)((char *)v7 + v19) = v21;
  v22 = v21;

  return a1;
}

_OWORD *sub_1DC2A7A38(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  *(_OWORD *)((char *)a1 + v4) = *(_OWORD *)((char *)a2 + v4);
  v7 = type metadata accessor for AttributionSource();
  v8 = *(int *)(v7 + 20);
  v9 = &v5[v8];
  v10 = &v6[v8];
  v11 = sub_1DC3FFDD0();
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    sub_1DC133BB0(0);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  *(_QWORD *)&v5[*(int *)(v7 + 24)] = *(_QWORD *)&v6[*(int *)(v7 + 24)];
  return a1;
}

_QWORD *sub_1DC2A7B24(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(char *, uint64_t, uint64_t);
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)((char *)a1 + v7);
  v9 = (char *)a2 + v7;
  v10 = *(_QWORD *)((char *)a2 + v7 + 8);
  *v8 = *(_QWORD *)((char *)a2 + v7);
  v8[1] = v10;
  swift_bridgeObjectRelease();
  v11 = type metadata accessor for AttributionSource();
  v12 = *(int *)(v11 + 20);
  v13 = (char *)v8 + v12;
  v14 = &v9[v12];
  v15 = sub_1DC3FFDD0();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  v18 = v17(v13, 1, v15);
  v19 = v17(v14, 1, v15);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 40))(v13, v14, v15);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v16 + 8))(v13, v15);
    goto LABEL_6;
  }
  if (v19)
  {
LABEL_6:
    sub_1DC133BB0(0);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v13, v14, v15);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
LABEL_7:
  v21 = *(int *)(v11 + 24);
  v22 = *(void **)((char *)v8 + v21);
  *(_QWORD *)((char *)v8 + v21) = *(_QWORD *)&v9[v21];

  return a1;
}

uint64_t sub_1DC2A7C7C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC2A7C88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for AttributionSource();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t sub_1DC2A7D04()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC2A7D10(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for AttributionSource();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for StockListNewsAttributionBlueprintModifier()
{
  uint64_t result;

  result = qword_1F0350C78;
  if (!qword_1F0350C78)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1DC2A7DC0()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for AttributionSource();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1DC2A7E34(uint64_t a1, void (*a2)(char *), uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v21[2];
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *);
  _BYTE v28[16];
  uint64_t v29;
  _BYTE v30[16];

  v26 = a3;
  v27 = a2;
  v21[1] = a1;
  v4 = sub_1DC404984();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0CC0A4(0, &qword_1EDB2A280, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB9A28]);
  v24 = *(_QWORD *)(v8 - 8);
  v25 = v8;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v21 - v9;
  sub_1DC1326EC();
  MEMORY[0x1E0C80A78](v11);
  sub_1DC0CC0A4(0, (unint64_t *)&qword_1EDB2AB40, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790]);
  v22 = *(_QWORD *)(v12 - 8);
  v23 = v12;
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v21 - v13;
  v29 = v3;
  v15 = sub_1DC155B20((void (*)(char *))sub_1DC2A8454, (uint64_t)v28, (uint64_t)v30);
  sub_1DC0CC0A4(0, (unint64_t *)&qword_1EDB29D98, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60]);
  v17 = v16;
  v18 = sub_1DC0CBFB8((unint64_t *)&unk_1EDB29D70, MEMORY[0x1E0DB7B88]);
  v19 = sub_1DC0CBFB8(&qword_1EDB29D68, MEMORY[0x1E0DB7B80]);
  MEMORY[0x1DF0C311C](v15, v17, v18, v19);
  type metadata accessor for StockListModel(0);
  sub_1DC0D75BC();
  sub_1DC080808(&qword_1EDB2D860, type metadata accessor for StockListModel, (uint64_t)&unk_1DC41C258);
  sub_1DC406D0C();
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DB7FB8], v4);
  sub_1DC119B9C();
  sub_1DC405554();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v27(v10);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v10, v25);
  return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v14, v23);
}

uint64_t sub_1DC2A80E8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE v10[16];
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  char v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  char v19;
  _BYTE v20[8];

  sub_1DC132790();
  MEMORY[0x1E0C80A78](v3);
  sub_1DC0CC0A4(0, (unint64_t *)&qword_1EDB29D98, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60]);
  sub_1DC4046FC();
  v12 = v16;
  v13 = v17;
  v14 = v18;
  v15 = v19;
  v11 = a2;
  v4 = sub_1DC155B54((void (*)(char *))sub_1DC2A8470, (uint64_t)v10, (uint64_t)v20);
  sub_1DC0F8190();
  v6 = v5;
  v7 = sub_1DC080808(&qword_1EDB29BD8, (uint64_t (*)(uint64_t))sub_1DC0F8190, MEMORY[0x1E0DB6F08]);
  v8 = sub_1DC080808(&qword_1EDB29BD0, (uint64_t (*)(uint64_t))sub_1DC0F8190, MEMORY[0x1E0DB6EF8]);
  MEMORY[0x1DF0C311C](v4, v6, v7, v8);
  type metadata accessor for StockListModel(0);
  sub_1DC0D75BC();
  sub_1DC080808(&qword_1EDB2D860, type metadata accessor for StockListModel, (uint64_t)&unk_1DC41C258);
  return sub_1DC4046F0();
}

uint64_t sub_1DC2A827C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  int EnumCaseMultiPayload;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v23[2];

  v6 = type metadata accessor for AttributionSource();
  MEMORY[0x1E0C80A78](v6);
  v8 = (_QWORD *)((char *)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = type metadata accessor for StockListModel(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (_QWORD *)((char *)v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v23 - v13;
  sub_1DC0F8190();
  v16 = v15;
  sub_1DC404354();
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_1DC0926D8((uint64_t)v14, type metadata accessor for StockListModel);
      v18 = type metadata accessor for StockListNewsAttributionBlueprintModifier();
      sub_1DC2754AC(a2 + *(int *)(v18 + 20), (uint64_t)v8);
      *v11 = sub_1DC2A9104(v8);
      v11[1] = v19;
      v11[2] = v20;
      v11[3] = v21;
      swift_storeEnumTagMultiPayload();
      sub_1DC080808(&qword_1EDB2D860, type metadata accessor for StockListModel, (uint64_t)&unk_1DC41C258);
      return sub_1DC404348();
    }
  }
  else
  {
    sub_1DC0926D8((uint64_t)v14, type metadata accessor for StockListStockModel);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(a3, a1, v16);
}

uint64_t sub_1DC2A8428()
{
  return sub_1DC080808(&qword_1F0350CB0, (uint64_t (*)(uint64_t))type metadata accessor for StockListNewsAttributionBlueprintModifier, (uint64_t)&unk_1DC421D68);
}

uint64_t sub_1DC2A8454(uint64_t a1)
{
  uint64_t v1;

  return sub_1DC2A80E8(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1DC2A8470@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1DC2A827C(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_1DC2A848C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  void (*v4)(_QWORD *, _QWORD);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v9[5];

  sub_1DC40046C();
  sub_1DC080808(&qword_1EDB28BC8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAE3A0], MEMORY[0x1E0DAE3A8]);
  sub_1DC408E90();
  sub_1DC408ED8();
  if (v9[4] == v9[0])
  {
    v2 = sub_1DC4011BC();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(a1, 1, 1, v2);
  }
  else
  {
    v4 = (void (*)(_QWORD *, _QWORD))sub_1DC408EF0();
    v6 = v5;
    v7 = sub_1DC4011BC();
    v8 = *(_QWORD *)(v7 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(a1, v6, v7);
    v4(v9, 0);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
  }
}

uint64_t sub_1DC2A85A4@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t (*)(void))@<X1>, unint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10;
  void (*v12)(_QWORD *, _QWORD);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[5];

  a2(0, a1, MEMORY[0x1E0DBC790]);
  sub_1DC0DA494(a3, a1, (uint64_t (*)(uint64_t, uint64_t, _QWORD))a2);
  sub_1DC408E90();
  sub_1DC408ED8();
  if (v17[4] == v17[0])
  {
    v10 = a2(0, a4, MEMORY[0x1E0DB7B60]);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(a5, 1, 1, v10);
  }
  else
  {
    v12 = (void (*)(_QWORD *, _QWORD))sub_1DC408EF0();
    v14 = v13;
    v15 = a2(0, a4, MEMORY[0x1E0DB7B60]);
    v16 = *(_QWORD *)(v15 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(a5, v14, v15);
    v12(v17, 0);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v16 + 56))(a5, 0, 1, v15);
  }
}

uint64_t sub_1DC2A86EC(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  char v12;
  uint64_t v13;

  v2 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    v3 = sub_1DC409664();
    v5 = v4;
    v6 = sub_1DC4096C4();
    v8 = MEMORY[0x1DF0C9EF0](v3, v5, v6, v7);
    swift_bridgeObjectRelease();
    if ((v8 & 1) != 0)
    {
LABEL_3:
      sub_1DC2A8AC8(v3, v5, v2 != 0);
      return 0;
    }
LABEL_7:
    sub_1DC2A8880(v3, v5, v2 != 0, a1);
    v9 = v13;
    sub_1DC2A8AC8(v3, v5, v2 != 0);
    return v9;
  }
  result = sub_1DC2A8AD4(a1);
  if ((v12 & 1) == 0)
  {
    v5 = v11;
    if (*(_DWORD *)(a1 + 36) == (_DWORD)v11)
    {
      v3 = result;
      if (result == 1 << *(_BYTE *)(a1 + 32))
        goto LABEL_3;
      goto LABEL_7;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1DC2A87F8(uint64_t a1)
{
  uint64_t v2;

  sub_1DC0DA430();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t StockListCompositionalLayoutOptionsProvider.deinit()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t StockListCompositionalLayoutOptionsProvider.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t method lookup function for StockListCompositionalLayoutOptionsProvider()
{
  return swift_lookUpClassMethod();
}

void sub_1DC2A8880(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  void *v4;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  char v11;
  uint64_t v12;
  id v13;
  char v14;
  id v15;
  void *v16;

  v6 = a1;
  if ((a4 & 0xC000000000000001) == 0)
  {
    if ((a3 & 1) != 0)
      goto LABEL_13;
    if (a1 < 0 || 1 << *(_BYTE *)(a4 + 32) <= a1)
    {
      __break(1u);
    }
    else if (((*(_QWORD *)(a4 + (((unint64_t)a1 >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> a1) & 1) != 0)
    {
      if (*(_DWORD *)(a4 + 36) == (_DWORD)a2)
        goto LABEL_20;
      __break(1u);
LABEL_13:
      if (sub_1DC409688() == *(_DWORD *)(a4 + 36))
      {
        sub_1DC409694();
        sub_1DC2A8B5C();
        swift_unknownObjectRetain();
        swift_dynamicCast();
        v4 = v16;
        swift_unknownObjectRelease();
        v8 = sub_1DC4093B8();
        v9 = -1 << *(_BYTE *)(a4 + 32);
        v6 = v8 & ~v9;
        if (((*(_QWORD *)(a4 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
        {
          v10 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v6);
          v11 = sub_1DC4093C4();

          if ((v11 & 1) == 0)
          {
            v12 = ~v9;
            do
            {
              v6 = (v6 + 1) & v12;
              if (((*(_QWORD *)(a4 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
                goto LABEL_24;
              v13 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v6);
              v14 = sub_1DC4093C4();

            }
            while ((v14 & 1) == 0);
          }

LABEL_20:
          v15 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v6);
          return;
        }
LABEL_24:

        __break(1u);
        goto LABEL_25;
      }
LABEL_23:
      __break(1u);
      goto LABEL_24;
    }
    __break(1u);
    goto LABEL_23;
  }
  if ((a3 & 1) == 0)
  {
LABEL_25:
    __break(1u);
    return;
  }
  if (a4 < 0)
    v7 = a4;
  else
    v7 = a4 & 0xFFFFFFFFFFFFFF8;
  MEMORY[0x1DF0C9F14](a1, a2, v7);
  sub_1DC2A8B5C();
  swift_unknownObjectRetain();
  swift_dynamicCast();
  swift_unknownObjectRelease();
}

uint64_t sub_1DC2A8AC8(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) != 0)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_1DC2A8AD4(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 56);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2)
    v7 = 2;
  v8 = v7 - 2;
  v9 = (unint64_t *)(a1 + 72);
  v2 = 64;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

unint64_t sub_1DC2A8B5C()
{
  unint64_t result;

  result = qword_1F0350CB8;
  if (!qword_1F0350CB8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1F0350CB8);
  }
  return result;
}

uint64_t *sub_1DC2A8B98(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    swift_getEnumCaseMultiPayload();
    v6 = sub_1DC405458();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1DC2A8C44(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1DC405458();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t sub_1DC2A8C78(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  swift_getEnumCaseMultiPayload();
  v4 = sub_1DC405458();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_1DC2A8CEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  if (a1 != a2)
  {
    sub_1DC2A8D70(a1);
    swift_getEnumCaseMultiPayload();
    v4 = sub_1DC405458();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1DC2A8D70(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ManageWatchlistsLayoutSectionDescriptor();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for ManageWatchlistsLayoutSectionDescriptor()
{
  uint64_t result;

  result = qword_1F0350D30;
  if (!qword_1F0350D30)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1DC2A8DE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  swift_getEnumCaseMultiPayload();
  v4 = sub_1DC405458();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_1DC2A8E5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  if (a1 != a2)
  {
    sub_1DC2A8D70(a1);
    swift_getEnumCaseMultiPayload();
    v4 = sub_1DC405458();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1DC2A8EE0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1DC405458();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

double sub_1DC2A8F44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  double v8;
  double v9;
  uint64_t v11;

  v1 = sub_1DC405458();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC2A9020(v0, (uint64_t)v7);
  (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v7, v1);
  sub_1DC405440();
  v9 = v8;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return v9;
}

uint64_t sub_1DC2A9020(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ManageWatchlistsLayoutSectionDescriptor();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for TodayModel()
{
  return &type metadata for TodayModel;
}

uint64_t sub_1DC2A9074(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char v7;
  uint64_t result;

  v2 = a1[2];
  v3 = a1[3];
  v4 = a2[2];
  v5 = a2[3];
  v6 = *a1 == *a2 && a1[1] == a2[1];
  if (v6 || (v7 = sub_1DC4099E8(), result = 0, (v7 & 1) != 0))
  {
    if (v2 == v4 && v3 == v5)
      return 1;
    else
      return sub_1DC4099E8();
  }
  return result;
}

uint64_t sub_1DC2A9104(uint64_t *a1)
{
  uint64_t ObjCClassFromMetadata;
  void *v3;
  id v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v3 = (void *)objc_opt_self();
  v4 = objc_msgSend(v3, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1DC3FFC80();

  v5 = sub_1DC408A70();
  swift_bridgeObjectRelease();
  v6 = objc_msgSend(v3, sel_bundleForClass_, ObjCClassFromMetadata, 0x80000001DC443FF0);
  sub_1DC3FFC80();

  sub_1DC0E7FF0();
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1DC40DC10;
  v9 = *a1;
  v8 = a1[1];
  *(_QWORD *)(v7 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v7 + 64) = sub_1DC0E7FAC();
  *(_QWORD *)(v7 + 32) = v9;
  *(_QWORD *)(v7 + 40) = v8;
  swift_bridgeObjectRetain();
  sub_1DC408A28();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1DC2A92F0((uint64_t)a1);
  return v5;
}

uint64_t sub_1DC2A92F0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for AttributionSource();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DC2A932C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t result;
  _QWORD v3[4];

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  result = sub_1DC409AFC();
  if (!v1)
  {
    __swift_project_boxed_opaque_existential_1(v3, v3[3]);
    sub_1DC4099F4();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
    return sub_1DC3FFF8C();
  }
  return result;
}

uint64_t StocksEngagementEventProcessor.process<A>(processEvent:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  _BOOL4 v21;
  uint64_t v22;
  uint64_t v23;
  uint8_t *v24;
  uint64_t v25;
  unint64_t v26;
  NSObject *v27;
  uint64_t v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t (*v37)(_QWORD);
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  NSObject *v49;
  uint64_t v50;
  uint64_t v51[3];
  uint64_t v52;
  uint64_t v53;

  v4 = v3;
  sub_1DC2A9940();
  MEMORY[0x1E0C80A78](v8);
  v45 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for EngagementEvent();
  v46 = *(_QWORD *)(v10 - 8);
  v47 = v10;
  MEMORY[0x1E0C80A78](v10);
  v41 = (uint64_t)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1DC401564();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v39 - v14;
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v3 + OBJC_IVAR____TtC8StocksUI30StocksEngagementEventProcessor_featureAvailability), *(_QWORD *)(v3 + OBJC_IVAR____TtC8StocksUI30StocksEngagementEventProcessor_featureAvailability + 24));
  result = sub_1DC400C04();
  if ((result & 1) != 0)
  {
    if (qword_1EDB27548 != -1)
      swift_once();
    v17 = sub_1DC403F64();
    v18 = __swift_project_value_buffer(v17, (uint64_t)qword_1EDB27528);
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a1, v12);
    v48 = v18;
    v19 = sub_1DC403F4C();
    v20 = sub_1DC408FE0();
    v49 = v19;
    v21 = os_log_type_enabled(v19, v20);
    v22 = MEMORY[0x1E0DEE9B8];
    v44 = a1;
    if (v21)
    {
      v23 = swift_slowAlloc();
      *(_QWORD *)&v43 = v4;
      v24 = (uint8_t *)v23;
      v42 = swift_slowAlloc();
      v51[0] = v42;
      *(_DWORD *)v24 = 136315138;
      v25 = sub_1DC401558();
      v50 = sub_1DC2A9C74(v25, v26, v51);
      a1 = v44;
      sub_1DC4095B0();
      v22 = MEMORY[0x1E0DEE9B8];
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
      v27 = v49;
      _os_log_impl(&dword_1DC07D000, v49, v20, "received event: %s", v24, 0xCu);
      v28 = v42;
      swift_arrayDestroy();
      MEMORY[0x1DF0CAC88](v28, -1, -1);
      v29 = v24;
      v4 = v43;
      MEMORY[0x1DF0CAC88](v29, -1, -1);

    }
    else
    {
      (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);

    }
    result = *(_QWORD *)(v4 + OBJC_IVAR____TtC8StocksUI30StocksEngagementEventProcessor_eventTranslators);
    v30 = *(_QWORD *)(result + 16);
    if (v30)
    {
      v40 = (_QWORD *)(v4 + OBJC_IVAR____TtC8StocksUI30StocksEngagementEventProcessor_appReviewRequestManager);
      v49 = *(NSObject **)(v4 + OBJC_IVAR____TtC8StocksUI30StocksEngagementEventProcessor_jsonDecoder);
      v31 = result + 32;
      v39 = result;
      swift_bridgeObjectRetain();
      *(_QWORD *)&v32 = 136315138;
      v43 = v32;
      v42 = v22 + 8;
      v33 = (uint64_t)v45;
      do
      {
        sub_1DC0824D4(v31, (uint64_t)v51);
        v34 = v52;
        v35 = v53;
        __swift_project_boxed_opaque_existential_1(v51, v52);
        (*(void (**)(uint64_t, NSObject *, uint64_t, uint64_t, uint64_t, uint64_t))(v35 + 8))(a1, v49, a2, a3, v34, v35);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v46 + 48))(v33, 1, v47) == 1)
        {
          v36 = v33;
          v37 = (uint64_t (*)(_QWORD))sub_1DC2A9940;
        }
        else
        {
          v38 = v41;
          sub_1DC2A9D44(v33, v41);
          __swift_project_boxed_opaque_existential_1(v40, v40[3]);
          sub_1DC087D08(v38);
          v36 = v38;
          v37 = (uint64_t (*)(_QWORD))type metadata accessor for EngagementEvent;
        }
        sub_1DC0926D8(v36, v37);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v51);
        v31 += 40;
        --v30;
      }
      while (v30);
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

void sub_1DC2A9940()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB277F8)
  {
    type metadata accessor for EngagementEvent();
    v0 = sub_1DC4095A4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB277F8);
  }
}

id StocksEngagementEventProcessor.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void StocksEngagementEventProcessor.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id StocksEngagementEventProcessor.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1DC2A9AA0()
{
  swift_getObjectType();
  return sub_1DC4016D8();
}

uint64_t sub_1DC2A9ADC()
{
  swift_getObjectType();
  return sub_1DC4016E4();
}

uint64_t sub_1DC2A9B18()
{
  swift_getObjectType();
  return sub_1DC4016F0();
}

uint64_t sub_1DC2A9B54()
{
  swift_getObjectType();
  return sub_1DC401708();
}

uint64_t sub_1DC2A9B90()
{
  swift_getObjectType();
  return sub_1DC4016FC();
}

uint64_t sub_1DC2A9BD4()
{
  swift_getObjectType();
  return sub_1DC4016CC();
}

uint64_t sub_1DC2A9C18()
{
  swift_getObjectType();
  return sub_1DC401714();
}

uint64_t sub_1DC2A9C74(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];
  uint64_t ObjectType;

  v6 = sub_1DC2A9DFC(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_1DC1B26C0((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = MEMORY[0x1E0DEC2B8];
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_1DC1B26C0((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return v7;
}

uint64_t sub_1DC2A9D44(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for EngagementEvent();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1DC2A9D8C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EDB2C0F0;
  if (!qword_1EDB2C0F0)
  {
    v1 = type metadata accessor for StocksEngagementEventProcessor();
    result = MEMORY[0x1DF0CAB8C](&protocol conformance descriptor for StocksEngagementEventProcessor, v1);
    atomic_store(result, (unint64_t *)&qword_1EDB2C0F0);
  }
  return result;
}

uint64_t type metadata accessor for StocksEngagementEventProcessor()
{
  return objc_opt_self();
}

uint64_t method lookup function for StocksEngagementEventProcessor()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1DC2A9DFC(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_1DC4095BC();
            result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    result = sub_1DC2A9FB4(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = sub_1DC409778();
  if (!v8)
  {
    sub_1DC40982C();
    __break(1u);
LABEL_17:
    result = sub_1DC40988C();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain();
}

uint64_t sub_1DC2A9FB4(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_1DC2AA048(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1DC2AA1BC(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_1DC2AA1BC(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_1DC2AA048(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    while (1)
    {
      v3 = sub_1DC3963F8(v2, 0);
      if (v2 < 0)
        break;
      v4 = v3;
      v5 = sub_1DC40973C();
      if ((v6 & 1) != 0)
        goto LABEL_14;
      if (v5 == v2)
        return (uint64_t)v4;
      sub_1DC40982C();
      __break(1u);
LABEL_10:
      v2 = sub_1DC408B6C();
      if (!v2)
        return MEMORY[0x1E0DEE9D8];
    }
    sub_1DC40988C();
    __break(1u);
LABEL_14:
    result = sub_1DC40982C();
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E0DEE9D8];
  }
  return result;
}

uint64_t sub_1DC2AA1BC(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1DC2AA304();
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1DC40988C();
  __break(1u);
  return result;
}

void sub_1DC2AA304()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB400B0)
  {
    v0 = sub_1DC4099C4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB400B0);
  }
}

uint64_t SidebarConfiguration.shouldCollapseSidebar.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t SidebarConfiguration.shouldCollapseSidebar.setter(uint64_t result)
{
  _BYTE *v1;

  *v1 = result;
  return result;
}

uint64_t (*SidebarConfiguration.shouldCollapseSidebar.modify())()
{
  return nullsub_1;
}

uint64_t SidebarConfiguration.init(_:)@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  void (*v29)(char *, unint64_t, uint64_t);
  void (*v30)(char *, uint64_t);
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  void (*v39)(char *, uint64_t);
  uint64_t v40;
  void (*v41)(char *, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t result;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v4 = sub_1DC3FFAC4();
  v49 = *(_QWORD *)(v4 - 8);
  v50 = v4;
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1DC3FFB00();
  v51 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v45 - v11;
  sub_1DC092F50(0, &qword_1EDB28A50, (void (*)(uint64_t))MEMORY[0x1E0CAE890]);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v45 - v17;
  sub_1DC3FFB18();
  sub_1DC2AA814((uint64_t)v18, (uint64_t)v15);
  v19 = sub_1DC3FFB84();
  v20 = *(_QWORD *)(v19 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v15, 1, v19) == 1)
  {
    v21 = sub_1DC3FFDD0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 8))(a1, v21);
    sub_1DC092F14((uint64_t)v18, &qword_1EDB28A50, (void (*)(uint64_t))MEMORY[0x1E0CAE890]);
    v22 = 0;
    v23 = (uint64_t)v15;
    goto LABEL_25;
  }
  v48 = v18;
  v24 = sub_1DC3FFB0C();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v15, v19);
  if (!v24)
  {
    v40 = sub_1DC3FFDD0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 8))(a1, v40);
    v22 = 0;
    goto LABEL_24;
  }
  v47 = a1;
  v25 = *(_QWORD *)(v24 + 16);
  if (!v25)
  {
    v22 = 0;
    goto LABEL_23;
  }
  v46 = a2;
  v26 = v24;
  v27 = v51;
  v28 = v26 + ((*(unsigned __int8 *)(v51 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80));
  v52 = *(_QWORD *)(v51 + 72);
  v29 = *(void (**)(char *, unint64_t, uint64_t))(v51 + 16);
  v45 = v26;
  swift_bridgeObjectRetain();
  while (1)
  {
    v29(v12, v28, v7);
    if (sub_1DC3FFAE8() == 0x657370616C6C6F63 && v31 == 0xEF72616265646953)
    {
      swift_bridgeObjectRelease();
      v29(v9, (unint64_t)v12, v7);
    }
    else
    {
      v32 = sub_1DC4099E8();
      swift_bridgeObjectRelease();
      v29(v9, (unint64_t)v12, v7);
      if ((v32 & 1) == 0)
        goto LABEL_6;
    }
    v33 = sub_1DC3FFAF4();
    if (!v34)
    {
LABEL_6:
      v30 = *(void (**)(char *, uint64_t))(v27 + 8);
      v30(v9, v7);
      v30(v12, v7);
      goto LABEL_7;
    }
    v53 = v33;
    v54 = v34;
    sub_1DC3FFAAC();
    sub_1DC1790B0();
    sub_1DC4095EC();
    (*(void (**)(char *, uint64_t))(v49 + 8))(v6, v50);
    swift_bridgeObjectRelease();
    v35 = sub_1DC408AAC();
    v37 = v36;
    swift_bridgeObjectRelease();
    if (v35 == 1702195828 && v37 == 0xE400000000000000)
      break;
    v38 = sub_1DC4099E8();
    swift_bridgeObjectRelease();
    v27 = v51;
    v39 = *(void (**)(char *, uint64_t))(v51 + 8);
    v39(v9, v7);
    v39(v12, v7);
    if ((v38 & 1) != 0)
      goto LABEL_21;
LABEL_7:
    v28 += v52;
    if (!--v25)
    {
      v22 = 0;
      goto LABEL_22;
    }
  }
  swift_bridgeObjectRelease();
  v41 = *(void (**)(char *, uint64_t))(v51 + 8);
  v41(v9, v7);
  v41(v12, v7);
LABEL_21:
  v22 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  a2 = v46;
LABEL_23:
  v42 = v47;
  v43 = sub_1DC3FFDD0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 8))(v42, v43);
  swift_bridgeObjectRelease();
LABEL_24:
  v23 = (uint64_t)v48;
LABEL_25:
  result = sub_1DC092F14(v23, &qword_1EDB28A50, (void (*)(uint64_t))MEMORY[0x1E0CAE890]);
  *a2 = v22;
  return result;
}

uint64_t sub_1DC2AA814(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1DC092F50(0, &qword_1EDB28A50, (void (*)(uint64_t))MEMORY[0x1E0CAE890]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t SidebarConfiguration.init(_:userActivity:)@<X0>(void *a1@<X1>, _BYTE *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t result;
  char v12;
  char v13;
  uint64_t v14;

  sub_1DC092F50(0, (unint64_t *)&qword_1EDB2C5F0, (void (*)(uint64_t))type metadata accessor for StocksActivity);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v14 - v5;
  v7 = type metadata accessor for StocksActivity(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  StocksV2UserActivityDeserializer.deserialize(userActivity:)(a1, (uint64_t)v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    swift_release();

    result = sub_1DC092F14((uint64_t)v6, (unint64_t *)&qword_1EDB2C5F0, (void (*)(uint64_t))type metadata accessor for StocksActivity);
    v12 = 0;
  }
  else
  {
    sub_1DC17C804((uint64_t)v6, (uint64_t)v10);
    StocksActivity.collapseSidebar.getter();
    v12 = v13;
    swift_release();

    result = sub_1DC1B3F14((uint64_t)v10);
  }
  *a2 = v12 & 1;
  return result;
}

uint64_t getEnumTagSinglePayload for SidebarConfiguration(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for SidebarConfiguration(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1DC2AAA98 + 4 * byte_1DC421FC5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1DC2AAACC + 4 * byte_1DC421FC0[v4]))();
}

uint64_t sub_1DC2AAACC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC2AAAD4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC2AAADCLL);
  return result;
}

uint64_t sub_1DC2AAAE8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC2AAAF0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1DC2AAAF4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC2AAAFC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t *assignWithCopy for StockListLayoutSectionDescriptor(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  unsigned __int8 v21;
  char v23;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  v6 = a2[3];
  v7 = a2[4];
  v8 = a2[5];
  v9 = a2[6];
  v10 = a2[7];
  v11 = (void *)a2[8];
  sub_1DC0BCFE0(*a2, v4, v5, v6, v7, v8, v9, v10, v11, *((_BYTE *)a2 + 72));
  v12 = *a1;
  v13 = a1[1];
  v14 = a1[2];
  v15 = a1[3];
  v16 = a1[4];
  v17 = a1[5];
  v18 = a1[6];
  v19 = a1[7];
  v20 = (void *)a1[8];
  v21 = *((_BYTE *)a1 + 72);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v9;
  a1[7] = v10;
  a1[8] = (uint64_t)v11;
  *((_BYTE *)a1 + 72) = v23;
  sub_1DC0BCAC8(v12, v13, v14, v15, v16, v17, v18, v19, v20, v21);
  return a1;
}

__n128 __swift_memcpy73_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 57) = *(_OWORD *)(a2 + 57);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t *assignWithTake for StockListLayoutSectionDescriptor(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  unsigned __int8 v14;
  __int128 v15;
  __int128 v16;

  v3 = *(_QWORD *)(a2 + 64);
  v4 = *(_BYTE *)(a2 + 72);
  v5 = *a1;
  v7 = a1[1];
  v6 = a1[2];
  v8 = a1[3];
  v9 = a1[4];
  v10 = a1[5];
  v11 = a1[6];
  v12 = a1[7];
  v13 = (void *)a1[8];
  v14 = *((_BYTE *)a1 + 72);
  v15 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((_OWORD *)a1 + 1) = v15;
  v16 = *(_OWORD *)(a2 + 48);
  *((_OWORD *)a1 + 2) = *(_OWORD *)(a2 + 32);
  *((_OWORD *)a1 + 3) = v16;
  a1[8] = v3;
  *((_BYTE *)a1 + 72) = v4;
  sub_1DC0BCAC8(v5, v7, v6, v8, v9, v10, v11, v12, v13, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for StockListLayoutSectionDescriptor(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 73))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 72);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for StockListLayoutSectionDescriptor(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 72) = 0;
    *(_QWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 73) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 73) = 0;
    if (a2)
      *(_BYTE *)(result + 72) = -(char)a2;
  }
  return result;
}

uint64_t sub_1DC2AAD0C(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 72) <= 1u)
    return *(unsigned __int8 *)(a1 + 72);
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_1DC2AAD24(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(_QWORD *)result = a2 - 2;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 72) = a2;
  return result;
}

ValueMetadata *type metadata accessor for StockListLayoutSectionDescriptor()
{
  return &type metadata for StockListLayoutSectionDescriptor;
}

uint64_t sub_1DC2AAD60()
{
  sub_1DC2AADD4();
  return sub_1DC40673C();
}

uint64_t sub_1DC2AAD88()
{
  sub_1DC117078();
  return sub_1DC40625C();
}

uint64_t sub_1DC2AADB0()
{
  uint64_t v0;

  return swift_deallocObject();
}

unint64_t sub_1DC2AADD4()
{
  unint64_t result;

  result = qword_1F0350D88;
  if (!qword_1F0350D88)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC42209C, &type metadata for StockListLayoutSectionDescriptor);
    atomic_store(result, (unint64_t *)&qword_1F0350D88);
  }
  return result;
}

uint64_t sub_1DC2AAE98()
{
  return sub_1DC080808(&qword_1EDB2FE68, (uint64_t (*)(uint64_t))type metadata accessor for TickerLayoutModel, (uint64_t)&unk_1DC4314E0);
}

void sub_1DC2AAEC4()
{
  sub_1DC409838();
  __break(1u);
}

uint64_t sub_1DC2AAF1C()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v1 = result;
    v2 = sub_1DC4008E0();
    swift_retain();
    sub_1DC2AB084(v2, v1);
    swift_bridgeObjectRelease();
    swift_release();
    swift_retain();
    sub_1DC402728();
    swift_release();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t type metadata accessor for ChangeWatchlistDisplayMenuGroupOptionProvider()
{
  return objc_opt_self();
}

uint64_t sub_1DC2AAFF8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_1DC4008E0();
  swift_retain();
  sub_1DC2AB084(v1, v0);
  swift_bridgeObjectRelease();
  swift_release();
  swift_retain();
  sub_1DC402728();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_1DC2AB084(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v14;
  unint64_t v15;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v22 = type metadata accessor for ChangeWatchlistDisplayContext(0);
  v5 = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v22);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(a1 + 16);
  v9 = MEMORY[0x1E0DEE9D8];
  if (v8)
  {
    v17 = v2;
    v23 = MEMORY[0x1E0DEE9D8];
    sub_1DC2AD5CC(0, v8, 0);
    v9 = v23;
    v10 = sub_1DC4008EC();
    v11 = *(_QWORD *)(v10 - 8);
    v12 = a1 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
    v20 = v11;
    v21 = v10;
    v18 = *(_QWORD *)(v11 + 72);
    v19 = (_QWORD *)(a2 + 40);
    do
    {
      __swift_project_boxed_opaque_existential_1(v19, *(_QWORD *)(a2 + 64));
      sub_1DC400A60();
      (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(&v7[*(int *)(v22 + 20)], v12, v21);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v23 = v9;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1DC2AD5CC(0, *(_QWORD *)(v9 + 16) + 1, 1);
        v9 = v23;
      }
      v15 = *(_QWORD *)(v9 + 16);
      v14 = *(_QWORD *)(v9 + 24);
      if (v15 >= v14 >> 1)
      {
        sub_1DC2AD5CC(v14 > 1, v15 + 1, 1);
        v9 = v23;
      }
      *(_QWORD *)(v9 + 16) = v15 + 1;
      sub_1DC2AB600((uint64_t)v7, v9+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v15);
      v12 += v18;
      --v8;
    }
    while (v8);
  }
  return v9;
}

uint64_t sub_1DC2AB244(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[5];

  v4 = (uint64_t)v3;
  v12[0] = MEMORY[0x1E0DEE9D8];
  sub_1DC089DA4(0, &qword_1EDB427F0, (uint64_t (*)(uint64_t))sub_1DC2AB55C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB3938]);
  swift_allocObject();
  v3[2] = sub_1DC402734();
  v3[3] = a1;
  v3[4] = a2;
  sub_1DC0824D4((uint64_t)a3, (uint64_t)(v3 + 5));
  swift_getObjectType();
  v8 = qword_1EDB2AA78;
  swift_unknownObjectRetain();
  if (v8 != -1)
    swift_once();
  swift_allocObject();
  swift_weakInit();
  sub_1DC40124C();
  sub_1DC404A5C();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  if (qword_1EDB2AA48 != -1)
    swift_once();
  swift_allocObject();
  swift_weakInit();
  sub_1DC404A5C();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  if (qword_1EDB2AAA0 != -1)
    swift_once();
  swift_allocObject();
  swift_weakInit();
  sub_1DC404A5C();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  __swift_project_boxed_opaque_existential_1(a3, a3[3]);
  sub_1DC2AB5BC();
  swift_retain();
  sub_1DC400AB4();
  swift_release();
  v9 = sub_1DC4008E0();
  swift_retain();
  v10 = sub_1DC2AB084(v9, v4);
  swift_bridgeObjectRelease();
  swift_release();
  v12[0] = v10;
  swift_retain();
  sub_1DC402728();
  swift_bridgeObjectRelease();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a3);
  return v4;
}

void sub_1DC2AB55C(uint64_t a1)
{
  sub_1DC089DA4(a1, &qword_1EDB428A8, type metadata accessor for ChangeWatchlistDisplayContext, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
}

uint64_t sub_1DC2AB578()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1DC2AB59C()
{
  return sub_1DC2AAF1C();
}

uint64_t sub_1DC2AB5A4()
{
  return sub_1DC2AAF1C();
}

unint64_t sub_1DC2AB5BC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EDB42888;
  if (!qword_1EDB42888)
  {
    v1 = type metadata accessor for ChangeWatchlistDisplayMenuGroupOptionProvider();
    result = MEMORY[0x1DF0CAB8C](&unk_1DC4221F0, v1);
    atomic_store(result, (unint64_t *)&qword_1EDB42888);
  }
  return result;
}

uint64_t sub_1DC2AB600(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ChangeWatchlistDisplayContext(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

_QWORD *sub_1DC2AB644(_OWORD *a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _OWORD *v16;
  _OWORD *v17;
  __int128 v18;
  uint64_t v19;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v19 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = *((_OWORD *)a2 + 1);
    *a1 = *(_OWORD *)a2;
    a1[1] = v7;
    v8 = *((_OWORD *)a2 + 3);
    a1[2] = *((_OWORD *)a2 + 2);
    a1[3] = v8;
    v9 = *((_OWORD *)a2 + 5);
    a1[4] = *((_OWORD *)a2 + 4);
    a1[5] = v9;
    v10 = *((_OWORD *)a2 + 7);
    v11 = *(int *)(a3 + 32);
    v12 = (char *)a1 + v11;
    v13 = (uint64_t)a2 + v11;
    a1[6] = *((_OWORD *)a2 + 6);
    a1[7] = v10;
    v14 = sub_1DC4061C0();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
    v15 = *(int *)(a3 + 36);
    v16 = (_OWORD *)((char *)v4 + v15);
    v17 = (_OWORD *)((char *)a2 + v15);
    v18 = v17[1];
    *v16 = *v17;
    v16[1] = v18;
  }
  return v4;
}

uint64_t sub_1DC2AB708(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1 + *(int *)(a2 + 32);
  v3 = sub_1DC4061C0();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

_OWORD *sub_1DC2AB740(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _OWORD *v15;
  _OWORD *v16;
  __int128 v17;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  v9 = a2[7];
  v10 = *(int *)(a3 + 32);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  a1[6] = a2[6];
  a1[7] = v9;
  v13 = sub_1DC4061C0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
  v14 = *(int *)(a3 + 36);
  v15 = (_OWORD *)((char *)a1 + v14);
  v16 = (_OWORD *)((char *)a2 + v14);
  v17 = v16[1];
  *v15 = *v16;
  v15[1] = v17;
  return a1;
}

_QWORD *sub_1DC2AB7D8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;

  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  a1[7] = a2[7];
  a1[8] = a2[8];
  a1[9] = a2[9];
  a1[10] = a2[10];
  a1[11] = a2[11];
  a1[12] = a2[12];
  a1[13] = a2[13];
  a1[14] = a2[14];
  a1[15] = a2[15];
  v6 = *(int *)(a3 + 32);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1DC4061C0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = *(int *)(a3 + 36);
  v11 = (_QWORD *)((char *)a1 + v10);
  v12 = (_QWORD *)((char *)a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  v11[2] = v12[2];
  v11[3] = v12[3];
  return a1;
}

_OWORD *sub_1DC2AB8E8(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _OWORD *v15;
  _OWORD *v16;
  __int128 v17;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  v9 = a2[7];
  v10 = *(int *)(a3 + 32);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  a1[6] = a2[6];
  a1[7] = v9;
  v13 = sub_1DC4061C0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
  v14 = *(int *)(a3 + 36);
  v15 = (_OWORD *)((char *)a1 + v14);
  v16 = (_OWORD *)((char *)a2 + v14);
  v17 = v16[1];
  *v15 = *v16;
  v15[1] = v17;
  return a1;
}

_OWORD *sub_1DC2AB980(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _OWORD *v15;
  _OWORD *v16;
  __int128 v17;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  v9 = a2[7];
  v10 = *(int *)(a3 + 32);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  a1[6] = a2[6];
  a1[7] = v9;
  v13 = sub_1DC4061C0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 40))(v11, v12, v13);
  v14 = *(int *)(a3 + 36);
  v15 = (_OWORD *)((char *)a1 + v14);
  v16 = (_OWORD *)((char *)a2 + v14);
  v17 = v16[1];
  *v15 = *v16;
  v15[1] = v17;
  return a1;
}

uint64_t sub_1DC2ABA18()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC2ABA24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a1 + *(int *)(a3 + 32);
  v5 = sub_1DC4061C0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, a2, v5);
}

uint64_t sub_1DC2ABA64()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC2ABA70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;

  v5 = a1 + *(int *)(a4 + 32);
  v6 = sub_1DC4061C0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, a2, a2, v6);
}

uint64_t sub_1DC2ABAB4()
{
  sub_1DC117A20(&qword_1EDB3A4F0, (uint64_t)&unk_1DC4222F0);
  return sub_1DC40625C();
}

StocksUI::ArticleUserInfoModel::UserInfoType_optional __swiftcall ArticleUserInfoModel.UserInfoType.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  if (rawValue == 1)
    v2 = 1;
  else
    v2 = 2;
  if (!rawValue)
    v2 = 0;
  *v1 = v2;
  return (StocksUI::ArticleUserInfoModel::UserInfoType_optional)rawValue;
}

uint64_t ArticleUserInfoModel.UserInfoType.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

_QWORD *sub_1DC2ABB10@<X0>(_QWORD *result@<X0>, char *a2@<X8>)
{
  char v2;
  char v3;

  if (*result == 1)
    v2 = 1;
  else
    v2 = 2;
  if (*result)
    v3 = v2;
  else
    v3 = 0;
  *a2 = v3;
  return result;
}

void sub_1DC2ABB30(_QWORD *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = *v1;
}

uint64_t sub_1DC2ABB3C()
{
  sub_1DC2AFA34();
  return sub_1DC408CB0();
}

uint64_t sub_1DC2ABB98()
{
  sub_1DC2AFA34();
  return sub_1DC408C98();
}

void sub_1DC2ABBE4(char *a1)
{
  sub_1DC158F14(*a1);
}

void sub_1DC2ABBF0()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1DC409AC0();
  __asm { BR              X9 }
}

uint64_t sub_1DC2ABC40()
{
  sub_1DC408AF4();
  swift_bridgeObjectRelease();
  return sub_1DC409AF0();
}

void sub_1DC2ABCBC()
{
  __asm { BR              X10 }
}

uint64_t sub_1DC2ABCFC()
{
  sub_1DC408AF4();
  return swift_bridgeObjectRelease();
}

void sub_1DC2ABD64()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1DC409AC0();
  __asm { BR              X9 }
}

uint64_t sub_1DC2ABDB0()
{
  sub_1DC408AF4();
  swift_bridgeObjectRelease();
  return sub_1DC409AF0();
}

uint64_t sub_1DC2ABE2C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1DC2AF6A0();
  *a1 = result;
  return result;
}

uint64_t sub_1DC2ABE58()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1DC2ABE8C + 4 * byte_1DC42238F[*v0]))();
}

void sub_1DC2ABE8C(_QWORD *a1@<X8>)
{
  *a1 = 0x6E69727065756C62;
  a1[1] = 0xE900000000000074;
}

void sub_1DC2ABEAC(_QWORD *a1@<X8>)
{
  *a1 = 1701869940;
  a1[1] = 0xE400000000000000;
}

void sub_1DC2ABEC0(_QWORD *a1@<X8>)
{
  *a1 = 7107189;
  a1[1] = 0xE300000000000000;
}

void sub_1DC2ABED4(_QWORD *a1@<X8>)
{
  *a1 = 0x6B72616D6B6F6F62;
  a1[1] = 0xE800000000000000;
}

uint64_t sub_1DC2ABEF0()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1DC2ABF24 + 4 * byte_1DC422394[*v0]))(0x696669746E656469, 0xEA00000000007265);
}

uint64_t sub_1DC2ABF24()
{
  return 0x6E69727065756C62;
}

uint64_t sub_1DC2ABF40()
{
  return 1701869940;
}

uint64_t sub_1DC2ABF50()
{
  return 7107189;
}

uint64_t sub_1DC2ABF60()
{
  return 0x6B72616D6B6F6F62;
}

uint64_t sub_1DC2ABF78@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1DC2AF6A0();
  *a1 = result;
  return result;
}

void sub_1DC2ABF9C(_BYTE *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_1DC2ABFA8()
{
  sub_1DC2AC814();
  return sub_1DC409B20();
}

uint64_t sub_1DC2ABFD0()
{
  sub_1DC2AC814();
  return sub_1DC409B2C();
}

uint64_t ArticleUserInfoModel.init(identifier:type:url:blueprintProvider:bookmark:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, _QWORD *a8@<X8>)
{
  char v13;
  int *v14;
  uint64_t result;
  _QWORD *v16;

  v13 = *a3;
  *a8 = a1;
  a8[1] = a2;
  v14 = (int *)type metadata accessor for ArticleUserInfoModel();
  *((_BYTE *)a8 + v14[6]) = v13;
  sub_1DC219D98(a4, (uint64_t)a8 + v14[5]);
  result = sub_1DC2AC0C0(a5, (uint64_t)a8 + v14[7]);
  v16 = (_QWORD *)((char *)a8 + v14[8]);
  *v16 = a6;
  v16[1] = a7;
  return result;
}

uint64_t type metadata accessor for ArticleUserInfoModel()
{
  uint64_t result;

  result = qword_1EDB27A50;
  if (!qword_1EDB27A50)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1DC2AC0C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1DC0FDC18(0, (unint64_t *)&unk_1EDB29388, &qword_1EDB29380, MEMORY[0x1E0D57EE8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t ArticleUserInfoModel.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v23;
  int *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  char *v40;
  unint64_t v41;
  unint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  char *v52;
  uint64_t v53;
  int *v54;
  char *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  void (*v66)(char *, uint64_t, uint64_t);
  uint64_t v67;
  _QWORD v68[6];
  unsigned int v69;
  char v70;

  v58 = a2;
  v65 = sub_1DC401F18();
  v60 = *(_QWORD *)(v65 - 8);
  MEMORY[0x1E0C80A78](v65);
  v64 = (char *)&v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1DC401F30();
  v62 = *(_QWORD *)(v4 - 8);
  v63 = v4;
  MEMORY[0x1E0C80A78](v4);
  v55 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = sub_1DC401F60();
  v59 = *(_QWORD *)(v56 - 8);
  MEMORY[0x1E0C80A78](v56);
  v57 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC089DA4(0, (unint64_t *)&unk_1EDB28A70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v7);
  v61 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v66 = (void (*)(char *, uint64_t, uint64_t))((char *)&v48 - v10);
  sub_1DC2AD87C(0, &qword_1F0350DE8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v12 = v11;
  v13 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v48 - v14;
  v16 = type metadata accessor for ArticleUserInfoModel();
  MEMORY[0x1E0C80A78](v16);
  v18 = (uint64_t *)((char *)&v48 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC2AC814();
  v19 = v67;
  sub_1DC409B08();
  if (v19)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v20 = (uint64_t)v66;
  v54 = (int *)v16;
  v67 = v13;
  LOBYTE(v68[0]) = 0;
  v21 = v15;
  *v18 = sub_1DC4098F8();
  v18[1] = v23;
  v70 = 2;
  sub_1DC2AC858();
  sub_1DC409910();
  v24 = v54;
  *((_BYTE *)v18 + v54[6]) = v68[0];
  v25 = sub_1DC3FFDD0();
  LOBYTE(v68[0]) = 3;
  sub_1DC080808(&qword_1EDB42C58, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0038]);
  v52 = v21;
  sub_1DC4098EC();
  v53 = v25;
  sub_1DC219D98(v20, (uint64_t)v18 + v24[5]);
  LOBYTE(v68[0]) = 4;
  v26 = sub_1DC4098C8();
  v27 = v59;
  v28 = (uint64_t)v18;
  v29 = (uint64_t *)((char *)v18 + v54[8]);
  *v29 = v26;
  v29[1] = v30;
  sub_1DC083594(0, (unint64_t *)&qword_1EDB3F770, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  v70 = 1;
  sub_1DC2AD9DC(&qword_1F0350DF8, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEAF40]);
  v31 = v52;
  sub_1DC4098EC();
  v51 = a1;
  v34 = v68[0];
  if (v68[0])
  {
    v35 = *(_QWORD *)(v68[0] + 16);
    if (v35)
    {
      v49 = v12;
      v50 = v28;
      v68[0] = MEMORY[0x1E0DEE9D8];
      sub_1DC2AD850(0, v35, 0);
      v36 = v68[0];
      v66 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 56);
      v69 = *MEMORY[0x1E0D576A0];
      v48 = v34;
      v37 = v34 + 40;
      v38 = v55;
      v39 = v61;
      do
      {
        v66(v39, 1, 1);
        swift_bridgeObjectRetain_n();
        v40 = v64;
        sub_1DC401A20();
        (*(void (**)(char *, _QWORD, uint64_t))(v60 + 104))(v40, v69, v65);
        sub_1DC401F24();
        swift_bridgeObjectRelease();
        v68[0] = v36;
        v42 = *(_QWORD *)(v36 + 16);
        v41 = *(_QWORD *)(v36 + 24);
        if (v42 >= v41 >> 1)
        {
          sub_1DC2AD850(v41 > 1, v42 + 1, 1);
          v38 = v55;
          v36 = v68[0];
        }
        v37 += 16;
        *(_QWORD *)(v36 + 16) = v42 + 1;
        (*(void (**)(unint64_t, char *, uint64_t))(v62 + 32))(v36+ ((*(unsigned __int8 *)(v62 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v62 + 80))+ *(_QWORD *)(v62 + 72) * v42, v38, v63);
        --v35;
      }
      while (v35);
      swift_bridgeObjectRelease();
      v43 = v57;
      v33 = v58;
      v44 = v50;
      v12 = v49;
      v45 = v56;
      v27 = v59;
    }
    else
    {
      swift_bridgeObjectRelease();
      v44 = v28;
      v36 = MEMORY[0x1E0DEE9D8];
      v43 = v57;
      v33 = v58;
      v45 = v56;
    }
    *v43 = v36;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v27 + 104))(v43, *MEMORY[0x1E0D57718], v45);
    v46 = sub_1DC402278();
    swift_allocObject();
    v47 = sub_1DC40226C();
    v68[3] = v46;
    v68[4] = MEMORY[0x1E0D57D58];
    v68[0] = v47;
    (*(void (**)(char *, uint64_t))(v67 + 8))(v52, v12);
    sub_1DC2AC0C0((uint64_t)v68, v44 + v54[7]);
    v28 = v44;
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v67 + 8))(v31, v12);
    v32 = v28 + v54[7];
    *(_QWORD *)(v32 + 32) = 0;
    *(_OWORD *)v32 = 0u;
    *(_OWORD *)(v32 + 16) = 0u;
    v33 = v58;
  }
  sub_1DC2AC89C(v28, v33);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v51);
  return sub_1DC2AC8E0(v28);
}

unint64_t sub_1DC2AC814()
{
  unint64_t result;

  result = qword_1EDB31628;
  if (!qword_1EDB31628)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC42268C, &type metadata for ArticleUserInfoModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB31628);
  }
  return result;
}

unint64_t sub_1DC2AC858()
{
  unint64_t result;

  result = qword_1F0350DF0;
  if (!qword_1F0350DF0)
  {
    result = MEMORY[0x1DF0CAB8C](&protocol conformance descriptor for ArticleUserInfoModel.UserInfoType, &type metadata for ArticleUserInfoModel.UserInfoType);
    atomic_store(result, (unint64_t *)&qword_1F0350DF0);
  }
  return result;
}

uint64_t sub_1DC2AC89C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ArticleUserInfoModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC2AC8E0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ArticleUserInfoModel();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t ArticleUserInfoModel.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  int *v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  int *v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  _QWORD v40[4];
  char v41;

  v2 = sub_1DC401F60();
  v33 = *(_QWORD *)(v2 - 8);
  v34 = v2;
  MEMORY[0x1E0C80A78](v2);
  v32 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC089DA4(0, (unint64_t *)&unk_1EDB28A70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v35 = (int *)((char *)&v30 - v5);
  v6 = sub_1DC3FFDD0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC2AD87C(0, &qword_1EDB3FDE0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v11 = v10;
  v12 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v30 - v13;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC2AC814();
  v15 = v36;
  sub_1DC409B14();
  LOBYTE(v40[0]) = 0;
  v16 = v37;
  sub_1DC409964();
  if (v16)
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  v31 = v7;
  v37 = v12;
  v17 = (int *)type metadata accessor for ArticleUserInfoModel();
  LOBYTE(v40[0]) = *(_BYTE *)(v15 + v17[6]);
  LOBYTE(v38) = 2;
  sub_1DC2AD8D8();
  sub_1DC409988();
  v30 = v14;
  v19 = (uint64_t)v35;
  sub_1DC133B6C(v15 + v17[5], (uint64_t)v35);
  v20 = v31;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v31 + 48))(v19, 1, v6) == 1)
  {
    v21 = v11;
    sub_1DC212C0C(v19);
    v22 = v34;
    v23 = v30;
  }
  else
  {
    v24 = v19;
    v23 = v30;
    (*(void (**)(char *, uint64_t, uint64_t))(v20 + 32))(v9, v24, v6);
    LOBYTE(v40[0]) = 3;
    sub_1DC080808(&qword_1EDB28A68, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0010]);
    sub_1DC409988();
    v21 = v11;
    (*(void (**)(char *, uint64_t))(v20 + 8))(v9, v6);
    v22 = v34;
  }
  sub_1DC2AD91C(v15 + v17[7], (uint64_t)&v38);
  if (v39)
  {
    v35 = v17;
    sub_1DC097DD0(&v38, (uint64_t)v40);
    __swift_project_boxed_opaque_existential_1(v40, v40[3]);
    sub_1DC402368();
    v25 = v32;
    sub_1DC402740();
    swift_release();
    v26 = sub_1DC2ACDB4();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v25, v22);
    *(_QWORD *)&v38 = v26;
    v41 = 1;
    sub_1DC083594(0, (unint64_t *)&qword_1EDB3F770, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1DC2AD9DC(&qword_1EDB42798, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEAF10]);
    v27 = v21;
    sub_1DC409988();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
    v17 = v35;
  }
  else
  {
    sub_1DC2AD980((uint64_t)&v38);
    v27 = v21;
  }
  v28 = v15 + v17[8];
  v29 = v37;
  if (*(_QWORD *)(v28 + 8))
  {
    LOBYTE(v40[0]) = 4;
    sub_1DC409964();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v23, v27);
}

uint64_t sub_1DC2ACDB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t result;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v1 = v0;
  v38 = sub_1DC401F3C();
  v2 = *(_QWORD *)(v38 - 8);
  MEMORY[0x1E0C80A78](v38);
  v4 = (uint64_t *)((char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = sub_1DC401F54();
  v39 = *(_QWORD *)(v5 - 8);
  v40 = v5;
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1DC401F30();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1DC401F60();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v13 + 16))(v16, v1, v12, v14);
  v17 = (*(uint64_t (**)(char *, uint64_t))(v13 + 88))(v16, v12);
  if (v17 == *MEMORY[0x1E0D57708])
  {
    (*(void (**)(char *, uint64_t))(v13 + 96))(v16, v12);
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v16, v8);
    sub_1DC083594(0, (unint64_t *)&qword_1EDB40040, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_1DC40DC10;
    *(_QWORD *)(v18 + 32) = sub_1DC401F0C();
    *(_QWORD *)(v18 + 40) = v19;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    return v18;
  }
  v41 = v9;
  if (v17 == *MEMORY[0x1E0D57718])
  {
    (*(void (**)(char *, uint64_t))(v13 + 96))(v16, v12);
    v20 = *(_QWORD *)v16;
    v21 = *(_QWORD *)(*(_QWORD *)v16 + 16);
    if (v21)
    {
      v42 = MEMORY[0x1E0DEE9D8];
      sub_1DC0F0894(0, v21, 0);
      v22 = v41;
      v23 = v20 + ((*(unsigned __int8 *)(v41 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80));
      v40 = *(_QWORD *)(v41 + 72);
      v24 = *(_QWORD *)(v41 + 16);
      v38 = v20;
      v39 = v24;
      do
      {
        ((void (*)(char *, unint64_t, uint64_t))v39)(v11, v23, v8);
        v25 = sub_1DC401F0C();
        v27 = v26;
        (*(void (**)(char *, uint64_t))(v22 + 8))(v11, v8);
        v18 = v42;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1DC0F0894(0, *(_QWORD *)(v18 + 16) + 1, 1);
          v18 = v42;
        }
        v29 = *(_QWORD *)(v18 + 16);
        v28 = *(_QWORD *)(v18 + 24);
        if (v29 >= v28 >> 1)
        {
          sub_1DC0F0894(v28 > 1, v29 + 1, 1);
          v18 = v42;
        }
        *(_QWORD *)(v18 + 16) = v29 + 1;
        v30 = v18 + 16 * v29;
        *(_QWORD *)(v30 + 32) = v25;
        *(_QWORD *)(v30 + 40) = v27;
        v22 = v41;
        v23 += v40;
        --v21;
      }
      while (v21);
      swift_bridgeObjectRelease();
      return v18;
    }
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
  if (v17 == *MEMORY[0x1E0D57700])
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
    return MEMORY[0x1E0DEE9D8];
  }
  if (v17 == *MEMORY[0x1E0D57710])
  {
    (*(void (**)(char *, uint64_t))(v13 + 96))(v16, v12);
    v32 = v39;
    v31 = v40;
    (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v7, v16, v40);
    sub_1DC401F48();
    v33 = v38;
    if ((*(unsigned int (**)(uint64_t *, uint64_t))(v2 + 88))(v4, v38) == *MEMORY[0x1E0D576D0])
    {
      (*(void (**)(uint64_t *, uint64_t))(v2 + 96))(v4, v33);
      v34 = *v4;
      v35 = v4[1];
      swift_bridgeObjectRelease();
      sub_1DC083594(0, (unint64_t *)&qword_1EDB40040, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v18 = swift_allocObject();
      *(_OWORD *)(v18 + 16) = xmmword_1DC40DC10;
      *(_QWORD *)(v18 + 32) = v34;
      *(_QWORD *)(v18 + 40) = v35;
      (*(void (**)(char *, uint64_t))(v32 + 8))(v7, v31);
      return v18;
    }
  }
  else if (v17 == *MEMORY[0x1E0D576F8])
  {
    return MEMORY[0x1E0DEE9D8];
  }
  result = sub_1DC409838();
  __break(1u);
  return result;
}

uint64_t sub_1DC2AD28C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ArticleUserInfoModel.init(from:)(a1, a2);
}

uint64_t sub_1DC2AD2A0(_QWORD *a1)
{
  return ArticleUserInfoModel.encode(to:)(a1);
}

uint64_t sub_1DC2AD2B4(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1DC0FF254(a1, a2, a3, (_QWORD *)*v3, sub_1DC2AF758, (uint64_t (*)(_QWORD))sub_1DC142304);
  *v3 = result;
  return result;
}

uint64_t sub_1DC2AD2E0(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1DC2AE8CC(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1DC2AD2FC(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1DC0FF254(a1, a2, a3, (_QWORD *)*v3, (void (*)(_QWORD))sub_1DC1677DC, (uint64_t (*)(_QWORD))sub_1DC142200);
  *v3 = result;
  return result;
}

uint64_t sub_1DC2AD328(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1DC2AEA3C(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1DC2AD344(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1DC0FF254(a1, a2, a3, (_QWORD *)*v3, sub_1DC2AF7E0, type metadata accessor for StockFeedLayoutSectionDescriptor.Decoration);
  *v3 = result;
  return result;
}

uint64_t sub_1DC2AD370(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1DC0FF254(a1, a2, a3, (_QWORD *)*v3, sub_1DC2AF7FC, type metadata accessor for StockFeedLayoutSectionDescriptor.Footer);
  *v3 = result;
  return result;
}

uint64_t sub_1DC2AD39C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1DC0FF254(a1, a2, a3, (_QWORD *)*v3, sub_1DC2AF818, type metadata accessor for StockFeedLayoutSectionDescriptor.Header);
  *v3 = result;
  return result;
}

uint64_t sub_1DC2AD3C8(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1DC2AEBD4(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1DC2AD3E4(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1DC2AED44(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1DC2AD400(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1DC2AEEB4(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1DC2AD41C(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1DC2AF04C(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1DC2AD438(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1DC0FF254(a1, a2, a3, (_QWORD *)*v3, sub_1DC2AF1AC, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedViewerPage);
  *v3 = result;
  return result;
}

uint64_t sub_1DC2AD464(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1DC0FF254(a1, a2, a3, (_QWORD *)*v3, sub_1DC2AF720, type metadata accessor for WatchlistMembershipCommandContext);
  *v3 = result;
  return result;
}

uint64_t sub_1DC2AD490(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1DC0FF254(a1, a2, a3, (_QWORD *)*v3, sub_1DC2AF850, (uint64_t (*)(_QWORD))MEMORY[0x1E0DADCE8]);
  *v3 = result;
  return result;
}

uint64_t sub_1DC2AD4BC(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1DC0FF254(a1, a2, a3, (_QWORD *)*v3, sub_1DC104648, (uint64_t (*)(_QWORD))MEMORY[0x1E0DAF1A0]);
  *v3 = result;
  return result;
}

uint64_t sub_1DC2AD4E8(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1DC0FF254(a1, a2, a3, (_QWORD *)*v3, sub_1DC2AFAFC, (uint64_t (*)(_QWORD))sub_1DC157A5C);
  *v3 = result;
  return result;
}

uint64_t sub_1DC2AD514(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1DC0FF254(a1, a2, a3, (_QWORD *)*v3, sub_1DC2AFC08, (uint64_t (*)(_QWORD))sub_1DC132008);
  *v3 = result;
  return result;
}

uint64_t sub_1DC2AD540(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1DC0FF254(a1, a2, a3, (_QWORD *)*v3, sub_1DC2AFB34, (uint64_t (*)(_QWORD))sub_1DC0D95F0);
  *v3 = result;
  return result;
}

uint64_t sub_1DC2AD56C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1DC0FD770(a1, a2, a3, (_QWORD *)*v3, (unint64_t *)&unk_1EDB42950, &qword_1EDB42920, MEMORY[0x1E0DB6FA8]);
  *v3 = result;
  return result;
}

uint64_t sub_1DC2AD5A0(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1DC0FF254(a1, a2, a3, (_QWORD *)*v3, sub_1DC2AF704, type metadata accessor for SortWatchlistCommandContext);
  *v3 = result;
  return result;
}

uint64_t sub_1DC2AD5CC(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1DC0FF254(a1, a2, a3, (_QWORD *)*v3, sub_1DC2AF6E8, type metadata accessor for ChangeWatchlistDisplayContext);
  *v3 = result;
  return result;
}

uint64_t sub_1DC2AD5F8(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1DC2AF1DC(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1DC2AD614(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1DC0FF254(a1, a2, a3, (_QWORD *)*v3, sub_1DC2AF86C, (uint64_t (*)(_QWORD))sub_1DC157B64);
  *v3 = result;
  return result;
}

uint64_t sub_1DC2AD640(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1DC0FF254(a1, a2, a3, (_QWORD *)*v3, sub_1DC2AF888, (uint64_t (*)(_QWORD))MEMORY[0x1E0D5CA68]);
  *v3 = result;
  return result;
}

uint64_t sub_1DC2AD66C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1DC0FF254(a1, a2, a3, (_QWORD *)*v3, sub_1DC2AFB18, (uint64_t (*)(_QWORD))sub_1DC157CB8);
  *v3 = result;
  return result;
}

uint64_t sub_1DC2AD698(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1DC0FD770(a1, a2, a3, (_QWORD *)*v3, &qword_1EDB3FF08, (unint64_t *)&qword_1EDB2A050, MEMORY[0x1E0DB8CD0]);
  *v3 = result;
  return result;
}

uint64_t sub_1DC2AD6CC(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1DC0FF254(a1, a2, a3, (_QWORD *)*v3, sub_1DC2AF8A4, (uint64_t (*)(_QWORD))MEMORY[0x1E0DAF270]);
  *v3 = result;
  return result;
}

uint64_t sub_1DC2AD6F8(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1DC2AF374(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1DC2AD714(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1DC0FF254(a1, a2, a3, (_QWORD *)*v3, sub_1DC0EF770, (uint64_t (*)(_QWORD))MEMORY[0x1E0DB2578]);
  *v3 = result;
  return result;
}

uint64_t sub_1DC2AD740(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1DC0FF254(a1, a2, a3, (_QWORD *)*v3, sub_1DC2AFB50, (uint64_t (*)(_QWORD))sub_1DC0C3C68);
  *v3 = result;
  return result;
}

uint64_t sub_1DC2AD76C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1DC0FD770(a1, a2, a3, (_QWORD *)*v3, &qword_1EDB3FF70, &qword_1EDB2A7C8, MEMORY[0x1E0DBBED8]);
  *v3 = result;
  return result;
}

uint64_t sub_1DC2AD7A0(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1DC0FF254(a1, a2, a3, (_QWORD *)*v3, sub_1DC2AF8DC, (uint64_t (*)(_QWORD))type metadata accessor for StockForYouFeedGroup);
  *v3 = result;
  return result;
}

uint64_t sub_1DC2AD7CC(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1DC0FF254(a1, a2, a3, (_QWORD *)*v3, sub_1DC2AF914, (uint64_t (*)(_QWORD))MEMORY[0x1E0DAE4D8]);
  *v3 = result;
  return result;
}

uint64_t sub_1DC2AD7F8(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1DC0FF254(a1, a2, a3, (_QWORD *)*v3, sub_1DC2AF8F8, (uint64_t (*)(_QWORD))MEMORY[0x1E0D5F7D8]);
  *v3 = result;
  return result;
}

uint64_t sub_1DC2AD824(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1DC0FF254(a1, a2, a3, (_QWORD *)*v3, sub_1DC10462C, (uint64_t (*)(_QWORD))sub_1DC102838);
  *v3 = result;
  return result;
}

uint64_t sub_1DC2AD850(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1DC0FF254(a1, a2, a3, (_QWORD *)*v3, sub_1DC2AFAE0, (uint64_t (*)(_QWORD))MEMORY[0x1E0D576C8]);
  *v3 = result;
  return result;
}

void sub_1DC2AD87C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC2AC814();
    v7 = a3(a1, &type metadata for ArticleUserInfoModel.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1DC2AD8D8()
{
  unint64_t result;

  result = qword_1EDB31618;
  if (!qword_1EDB31618)
  {
    result = MEMORY[0x1DF0CAB8C](&protocol conformance descriptor for ArticleUserInfoModel.UserInfoType, &type metadata for ArticleUserInfoModel.UserInfoType);
    atomic_store(result, (unint64_t *)&qword_1EDB31618);
  }
  return result;
}

uint64_t sub_1DC2AD91C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1DC0FDC18(0, (unint64_t *)&unk_1EDB29388, &qword_1EDB29380, MEMORY[0x1E0D57EE8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC2AD980(uint64_t a1)
{
  uint64_t v2;

  sub_1DC0FDC18(0, (unint64_t *)&unk_1EDB29388, &qword_1EDB29380, MEMORY[0x1E0D57EE8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DC2AD9DC(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    sub_1DC083594(255, (unint64_t *)&qword_1EDB3F770, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v8 = a2;
    result = MEMORY[0x1DF0CAB8C](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1DC2ADA54()
{
  unint64_t result;

  result = qword_1F0350E00;
  if (!qword_1F0350E00)
  {
    result = MEMORY[0x1DF0CAB8C](&protocol conformance descriptor for ArticleUserInfoModel.UserInfoType, &type metadata for ArticleUserInfoModel.UserInfoType);
    atomic_store(result, (unint64_t *)&qword_1F0350E00);
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for ArticleUserInfoModel(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1DC3FFDD0();
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      sub_1DC089DA4(0, (unint64_t *)&unk_1EDB28A70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    v16 = a3[7];
    *((_BYTE *)v4 + a3[6]) = *((_BYTE *)a2 + a3[6]);
    v17 = (char *)v4 + v16;
    v18 = (char *)a2 + v16;
    v19 = *(_QWORD *)((char *)a2 + v16 + 24);
    if (v19)
    {
      v20 = *((_QWORD *)v18 + 4);
      *((_QWORD *)v17 + 3) = v19;
      *((_QWORD *)v17 + 4) = v20;
      (**(void (***)(void))(v19 - 8))();
    }
    else
    {
      v21 = *((_OWORD *)v18 + 1);
      *(_OWORD *)v17 = *(_OWORD *)v18;
      *((_OWORD *)v17 + 1) = v21;
      *((_QWORD *)v17 + 4) = *((_QWORD *)v18 + 4);
    }
    v22 = a3[8];
    v23 = (_QWORD *)((char *)v4 + v22);
    v24 = (_QWORD *)((char *)a2 + v22);
    v25 = v24[1];
    *v23 = *v24;
    v23[1] = v25;
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for ArticleUserInfoModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_1DC3FFDD0();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  v7 = a1 + *(int *)(a2 + 28);
  if (*(_QWORD *)(v7 + 24))
    __swift_destroy_boxed_opaque_existential_1(v7);
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for ArticleUserInfoModel(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(char *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1DC3FFDD0();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    sub_1DC089DA4(0, (unint64_t *)&unk_1EDB28A70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v14 = a3[7];
  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  v17 = *(_QWORD *)((char *)a2 + v14 + 24);
  if (v17)
  {
    v18 = *((_QWORD *)v16 + 4);
    *((_QWORD *)v15 + 3) = v17;
    *((_QWORD *)v15 + 4) = v18;
    (**(void (***)(void))(v17 - 8))();
  }
  else
  {
    v19 = *((_OWORD *)v16 + 1);
    *(_OWORD *)v15 = *(_OWORD *)v16;
    *((_OWORD *)v15 + 1) = v19;
    *((_QWORD *)v15 + 4) = *((_QWORD *)v16 + 4);
  }
  v20 = a3[8];
  v21 = (_QWORD *)((char *)a1 + v20);
  v22 = (_QWORD *)((char *)a2 + v20);
  v23 = v22[1];
  *v21 = *v22;
  v21[1] = v23;
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for ArticleUserInfoModel(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1DC3FFDD0();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    sub_1DC089DA4(0, (unint64_t *)&unk_1EDB28A70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  v15 = a3[7];
  v16 = (uint64_t)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = *(_QWORD *)((char *)a2 + v15 + 24);
  if (!*(_QWORD *)((char *)a1 + v15 + 24))
  {
    if (v18)
    {
      *(_QWORD *)(v16 + 24) = v18;
      *(_QWORD *)(v16 + 32) = *((_QWORD *)v17 + 4);
      (**(void (***)(uint64_t, char *))(v18 - 8))(v16, v17);
      goto LABEL_14;
    }
LABEL_13:
    v19 = *(_OWORD *)v17;
    v20 = *((_OWORD *)v17 + 1);
    *(_QWORD *)(v16 + 32) = *((_QWORD *)v17 + 4);
    *(_OWORD *)v16 = v19;
    *(_OWORD *)(v16 + 16) = v20;
    goto LABEL_14;
  }
  if (!v18)
  {
    __swift_destroy_boxed_opaque_existential_1(v16);
    goto LABEL_13;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)v16, (uint64_t *)v17);
LABEL_14:
  v21 = a3[8];
  v22 = (_QWORD *)((char *)a1 + v21);
  v23 = (_QWORD *)((char *)a2 + v21);
  *v22 = *v23;
  v22[1] = v23[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *initializeWithTake for ArticleUserInfoModel(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  __int128 v15;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1DC3FFDD0();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    sub_1DC089DA4(0, (unint64_t *)&unk_1EDB28A70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v12 = a3[7];
  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = *((_OWORD *)v14 + 1);
  *(_OWORD *)v13 = *(_OWORD *)v14;
  *((_OWORD *)v13 + 1) = v15;
  *((_QWORD *)v13 + 4) = *((_QWORD *)v14 + 4);
  *(_OWORD *)((char *)a1 + a3[8]) = *(_OWORD *)((char *)a2 + a3[8]);
  return a1;
}

_QWORD *assignWithTake for ArticleUserInfoModel(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(char *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  __int128 v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1DC3FFDD0();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    sub_1DC089DA4(0, (unint64_t *)&unk_1EDB28A70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
LABEL_7:
  v16 = a3[7];
  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  v17 = (char *)a1 + v16;
  if (*(_QWORD *)((char *)a1 + v16 + 24))
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1 + v16);
  v18 = *(_OWORD *)((char *)a2 + v16 + 16);
  *(_OWORD *)v17 = *(_OWORD *)((char *)a2 + v16);
  *((_OWORD *)v17 + 1) = v18;
  *((_QWORD *)v17 + 4) = *(_QWORD *)((char *)a2 + v16 + 32);
  v19 = a3[8];
  v20 = (_QWORD *)((char *)a1 + v19);
  v21 = (_QWORD *)((char *)a2 + v19);
  v23 = *v21;
  v22 = v21[1];
  *v20 = v23;
  v20[1] = v22;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ArticleUserInfoModel()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC2AE27C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    sub_1DC089DA4(0, (unint64_t *)&unk_1EDB28A70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for ArticleUserInfoModel()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC2AE31C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_1DC089DA4(0, (unint64_t *)&unk_1EDB28A70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

void sub_1DC2AE3A8()
{
  unint64_t v0;

  sub_1DC089DA4(319, (unint64_t *)&unk_1EDB28A70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t storeEnumTagSinglePayload for ArticleUserInfoModel.UserInfoType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1DC2AE49C + 4 * byte_1DC42239E[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1DC2AE4D0 + 4 * byte_1DC422399[v4]))();
}

uint64_t sub_1DC2AE4D0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC2AE4D8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC2AE4E0);
  return result;
}

uint64_t sub_1DC2AE4EC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC2AE4F4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1DC2AE4F8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC2AE500(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ArticleUserInfoModel.UserInfoType()
{
  return &type metadata for ArticleUserInfoModel.UserInfoType;
}

uint64_t getEnumTagSinglePayload for ArticleUserInfoModel.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFC)
    goto LABEL_17;
  if (a2 + 4 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 4) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 4;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 4;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 4;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v8 = v6 - 5;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ArticleUserInfoModel.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1DC2AE5F8 + 4 * byte_1DC4223A8[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1DC2AE62C + 4 * byte_1DC4223A3[v4]))();
}

uint64_t sub_1DC2AE62C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC2AE634(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC2AE63CLL);
  return result;
}

uint64_t sub_1DC2AE648(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC2AE650);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1DC2AE654(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC2AE65C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ArticleUserInfoModel.CodingKeys()
{
  return &type metadata for ArticleUserInfoModel.CodingKeys;
}

unint64_t sub_1DC2AE67C()
{
  unint64_t result;

  result = qword_1F0350E08;
  if (!qword_1F0350E08)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC422664, &type metadata for ArticleUserInfoModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F0350E08);
  }
  return result;
}

unint64_t sub_1DC2AE6C4()
{
  unint64_t result;

  result = qword_1EDB31638;
  if (!qword_1EDB31638)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC42259C, &type metadata for ArticleUserInfoModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB31638);
  }
  return result;
}

unint64_t sub_1DC2AE70C()
{
  unint64_t result;

  result = qword_1EDB31630;
  if (!qword_1EDB31630)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC4225C4, &type metadata for ArticleUserInfoModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB31630);
  }
  return result;
}

uint64_t sub_1DC2AE750(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1DC0FF254(a1, a2, a3, (_QWORD *)*v3, sub_1DC2AFB88, (uint64_t (*)(_QWORD))sub_1DC2AFBA4);
  *v3 = result;
  return result;
}

uint64_t sub_1DC2AE77C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1DC0FF254(a1, a2, a3, (_QWORD *)*v3, sub_1DC2AF930, (uint64_t (*)(_QWORD))sub_1DC157D60);
  *v3 = result;
  return result;
}

uint64_t sub_1DC2AE7A8(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1DC0FF254(a1, a2, a3, (_QWORD *)*v3, sub_1DC2AF94C, (uint64_t (*)(_QWORD))sub_1DC2AF968);
  *v3 = result;
  return result;
}

uint64_t sub_1DC2AE7D4(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1DC0FF254(a1, a2, a3, (_QWORD *)*v3, sub_1DC2AF9E0, type metadata accessor for ForYouFeedLayoutSectionDescriptor.Decoration);
  *v3 = result;
  return result;
}

uint64_t sub_1DC2AE800(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1DC0FF254(a1, a2, a3, (_QWORD *)*v3, sub_1DC2AF9FC, type metadata accessor for ForYouFeedLayoutSectionDescriptor.Footer);
  *v3 = result;
  return result;
}

uint64_t sub_1DC2AE82C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1DC0FF254(a1, a2, a3, (_QWORD *)*v3, sub_1DC2AFA18, type metadata accessor for ForYouFeedLayoutSectionDescriptor.Header);
  *v3 = result;
  return result;
}

uint64_t sub_1DC2AE858(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1DC0FF254(a1, a2, a3, (_QWORD *)*v3, sub_1DC2AF8C0, (uint64_t (*)(_QWORD))type metadata accessor for StockViewModel);
  *v3 = result;
  return result;
}

uint64_t sub_1DC2AE884(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1DC2AF528(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1DC2AE8A0(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1DC0FF254(a1, a2, a3, (_QWORD *)*v3, sub_1DC2AFB6C, (uint64_t (*)(_QWORD))sub_1DC142B5C);
  *v3 = result;
  return result;
}

uint64_t sub_1DC2AE8CC(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1DC083594(0, (unint64_t *)&unk_1EDB42C60, MEMORY[0x1E0DEF040], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8])
      memmove(v13, v14, 8 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1DC40988C();
  __break(1u);
  return result;
}

uint64_t sub_1DC2AEA3C(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    sub_1DC089DA4(0, &qword_1F0350E28, (uint64_t (*)(uint64_t))sub_1DC2AF834, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v13 = (unint64_t)(v10 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= v14 + 8 * v8)
      memmove(v10 + 4, a4 + 4, 8 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 8 * v8 || v13 >= v14 + 8 * v8)
  {
    sub_1DC2AF834(0);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1DC40988C();
  __break(1u);
  return result;
}

uint64_t sub_1DC2AEBD4(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1DC089DA4(0, &qword_1EDB400A0, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 1;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8])
      memmove(v13, v14, 32 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    memcpy(v13, v14, 32 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1DC40988C();
  __break(1u);
  return result;
}

uint64_t sub_1DC2AED44(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1DC089DA4(0, &qword_1EDB400A8, (uint64_t (*)(uint64_t))type metadata accessor for CGSize, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    memcpy(v13, v14, 16 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1DC40988C();
  __break(1u);
  return result;
}

uint64_t sub_1DC2AEEB4(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    sub_1DC2AF774();
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v13 = (unint64_t)(v10 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= v14 + 8 * v8)
      memmove(v10 + 4, a4 + 4, 8 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 8 * v8 || v13 >= v14 + 8 * v8)
  {
    sub_1DC083594(0, &qword_1EDB3F758, (uint64_t)&type metadata for QuoteDetailViewComponent, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1DC40988C();
  __break(1u);
  return result;
}

uint64_t sub_1DC2AF04C(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1DC083594(0, &qword_1EDB3FFC8, (uint64_t)&type metadata for StockChartZoneType, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1DC40988C();
  __break(1u);
  return result;
}

void sub_1DC2AF1AC(uint64_t a1)
{
  sub_1DC089DA4(a1, &qword_1EDB3FFD0, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedViewerPage, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

uint64_t sub_1DC2AF1C8(char a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1DC0FF254(a1, a2, a3, a4, sub_1DC2AF73C, (uint64_t (*)(_QWORD))MEMORY[0x1E0CAF138]);
}

uint64_t sub_1DC2AF1DC(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1DC083594(0, &qword_1EDB28530, MEMORY[0x1E0DEE9B8] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 1;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8])
      memmove(v13, v14, 32 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1DC40988C();
  __break(1u);
  return result;
}

uint64_t sub_1DC2AF360(char a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1DC0FF254(a1, a2, a3, a4, sub_1DC2AFB18, (uint64_t (*)(_QWORD))sub_1DC157CB8);
}

uint64_t sub_1DC2AF374(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    sub_1DC089DA4(0, &qword_1EDB40080, (uint64_t (*)(uint64_t))sub_1DC2AFA78, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v12 = (unint64_t)(v10 + 4);
  v13 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= v13 + 24 * v8)
      memmove(v10 + 4, a4 + 4, 24 * v8);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 24 * v8 || v12 >= v13 + 24 * v8)
  {
    sub_1DC2AFA78();
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1DC40988C();
  __break(1u);
  return result;
}

uint64_t sub_1DC2AF528(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  size_t v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1DC083594(0, &qword_1EDB3FFD8, (uint64_t)&type metadata for ForYouFeedGroupKnobs.CodingKeys, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 1;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  v15 = 32 * v8;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[v15])
      memmove(v13, v14, v15);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[v15] || v13 >= &v14[v15])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1DC40988C();
  __break(1u);
  return result;
}

uint64_t sub_1DC2AF6A0()
{
  unint64_t v0;

  v0 = sub_1DC4098A4();
  swift_bridgeObjectRelease();
  if (v0 >= 5)
    return 5;
  else
    return v0;
}

void sub_1DC2AF6E8(uint64_t a1)
{
  sub_1DC089DA4(a1, &qword_1EDB428C0, type metadata accessor for ChangeWatchlistDisplayContext, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

void sub_1DC2AF704(uint64_t a1)
{
  sub_1DC089DA4(a1, &qword_1EDB428B8, type metadata accessor for SortWatchlistCommandContext, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

void sub_1DC2AF720(uint64_t a1)
{
  sub_1DC089DA4(a1, &qword_1EDB428C8, type metadata accessor for WatchlistMembershipCommandContext, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

void sub_1DC2AF73C(uint64_t a1)
{
  sub_1DC089DA4(a1, &qword_1F0350E10, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAF138], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

void sub_1DC2AF758(uint64_t a1)
{
  sub_1DC089DA4(a1, &qword_1EDB3FEF8, (uint64_t (*)(uint64_t))sub_1DC142304, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

void sub_1DC2AF774()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB28528)
  {
    sub_1DC083594(255, &qword_1EDB3F758, (uint64_t)&type metadata for QuoteDetailViewComponent, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v0 = sub_1DC4099C4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB28528);
  }
}

void sub_1DC2AF7E0(uint64_t a1)
{
  sub_1DC089DA4(a1, &qword_1EDB3FFF0, type metadata accessor for StockFeedLayoutSectionDescriptor.Decoration, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

void sub_1DC2AF7FC(uint64_t a1)
{
  sub_1DC089DA4(a1, &qword_1F0350E18, type metadata accessor for StockFeedLayoutSectionDescriptor.Footer, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

void sub_1DC2AF818(uint64_t a1)
{
  sub_1DC089DA4(a1, &qword_1F0350E20, type metadata accessor for StockFeedLayoutSectionDescriptor.Header, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

void sub_1DC2AF834(uint64_t a1)
{
  sub_1DC089DA4(a1, &qword_1F0350E30, (uint64_t (*)(uint64_t))sub_1DC142304, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
}

void sub_1DC2AF850(uint64_t a1)
{
  sub_1DC089DA4(a1, &qword_1EDB3FE90, (uint64_t (*)(uint64_t))MEMORY[0x1E0DADCE8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

void sub_1DC2AF86C(uint64_t a1)
{
  sub_1DC089DA4(a1, &qword_1F0350E38, (uint64_t (*)(uint64_t))sub_1DC157B64, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

void sub_1DC2AF888(uint64_t a1)
{
  sub_1DC089DA4(a1, (unint64_t *)&unk_1EDB3FF90, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5CA68], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

void sub_1DC2AF8A4(uint64_t a1)
{
  sub_1DC089DA4(a1, &qword_1F034FBF8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF270], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

void sub_1DC2AF8C0(uint64_t a1)
{
  sub_1DC089DA4(a1, &qword_1F0350E40, (uint64_t (*)(uint64_t))type metadata accessor for StockViewModel, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

void sub_1DC2AF8DC(uint64_t a1)
{
  sub_1DC089DA4(a1, &qword_1EDB3FFE0, (uint64_t (*)(uint64_t))type metadata accessor for StockForYouFeedGroup, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

void sub_1DC2AF8F8(uint64_t a1)
{
  sub_1DC089DA4(a1, &qword_1EDB3FFA8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5F7D8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

void sub_1DC2AF914(uint64_t a1)
{
  sub_1DC089DA4(a1, &qword_1EDB3FE00, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAE4D8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

void sub_1DC2AF930(uint64_t a1)
{
  sub_1DC089DA4(a1, &qword_1F0350E48, (uint64_t (*)(uint64_t))sub_1DC157D60, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

void sub_1DC2AF94C(uint64_t a1)
{
  sub_1DC089DA4(a1, &qword_1F0350E50, (uint64_t (*)(uint64_t))sub_1DC2AF968, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

void sub_1DC2AF968()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F034C440)
  {
    type metadata accessor for StockSearchLayoutModel();
    sub_1DC080808(&qword_1EDB340B0, (uint64_t (*)(uint64_t))type metadata accessor for StockSearchLayoutModel, (uint64_t)&unk_1DC422B70);
    v0 = sub_1DC404DEC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1F034C440);
  }
}

void sub_1DC2AF9E0(uint64_t a1)
{
  sub_1DC089DA4(a1, &qword_1EDB3FFF8, type metadata accessor for ForYouFeedLayoutSectionDescriptor.Decoration, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

void sub_1DC2AF9FC(uint64_t a1)
{
  sub_1DC089DA4(a1, &qword_1EDB28520, type metadata accessor for ForYouFeedLayoutSectionDescriptor.Footer, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

void sub_1DC2AFA18(uint64_t a1)
{
  sub_1DC089DA4(a1, &qword_1EDB40008, type metadata accessor for ForYouFeedLayoutSectionDescriptor.Header, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

unint64_t sub_1DC2AFA34()
{
  unint64_t result;

  result = qword_1EDB31620;
  if (!qword_1EDB31620)
  {
    result = MEMORY[0x1DF0CAB8C](&protocol conformance descriptor for ArticleUserInfoModel.UserInfoType, &type metadata for ArticleUserInfoModel.UserInfoType);
    atomic_store(result, (unint64_t *)&qword_1EDB31620);
  }
  return result;
}

void sub_1DC2AFA78()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EDB3F7E8)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EDB3F7E8);
  }
}

void sub_1DC2AFAE0(uint64_t a1)
{
  sub_1DC089DA4(a1, (unint64_t *)&unk_1EDB3FE60, (uint64_t (*)(uint64_t))MEMORY[0x1E0D576C8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

void sub_1DC2AFAFC(uint64_t a1)
{
  sub_1DC089DA4(a1, &qword_1EDB3FED0, (uint64_t (*)(uint64_t))sub_1DC157A5C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

void sub_1DC2AFB18(uint64_t a1)
{
  sub_1DC089DA4(a1, &qword_1F034C770, (uint64_t (*)(uint64_t))sub_1DC157CB8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

void sub_1DC2AFB34(uint64_t a1)
{
  sub_1DC089DA4(a1, (unint64_t *)&unk_1F034E6B0, (uint64_t (*)(uint64_t))sub_1DC0D95F0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

void sub_1DC2AFB50(uint64_t a1)
{
  sub_1DC089DA4(a1, &qword_1EDB3FEC0, (uint64_t (*)(uint64_t))sub_1DC0C3C68, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

void sub_1DC2AFB6C(uint64_t a1)
{
  sub_1DC089DA4(a1, &qword_1F0350E58, (uint64_t (*)(uint64_t))sub_1DC142B5C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

void sub_1DC2AFB88(uint64_t a1)
{
  sub_1DC089DA4(a1, &qword_1EDB40050, (uint64_t (*)(uint64_t))sub_1DC2AFBA4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

void sub_1DC2AFBA4()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EDB3F5F8)
  {
    sub_1DC4010E4();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EDB3F5F8);
  }
}

void sub_1DC2AFC08(uint64_t a1)
{
  sub_1DC089DA4(a1, &qword_1EDB3FEC8, (uint64_t (*)(uint64_t))sub_1DC132008, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

uint64_t sub_1DC2AFC24()
{
  swift_unownedRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DC2AFC50()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocClassInstance();
}

uint64_t sub_1DC2AFC74@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  void *v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;

  v3 = (void *)MEMORY[0x1DF0CAD78](v1 + 16);
  if (v3)
  {
    v4 = v3;
    v5 = objc_msgSend(v3, sel_presentingViewController);

    if (v5)
    {
      objc_msgSend(v5, sel_dismissViewControllerAnimated_completion_, 0, 0);

    }
  }
  v6 = *MEMORY[0x1E0DBA4F0];
  v7 = sub_1DC405AA0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(a1, v6, v7);
}

void sub_1DC2AFD0C()
{
  sub_1DC409838();
  __break(1u);
}

uint64_t sub_1DC2AFD64(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = sub_1DC081B48(&qword_1F034C738, a2, (uint64_t (*)(uint64_t))type metadata accessor for StockSearchModalRouter, (uint64_t)&unk_1DC422758);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t StockFeedServiceProxy.deinit()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t StockFeedServiceProxy.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for StockFeedServiceProxy()
{
  return objc_opt_self();
}

uint64_t method lookup function for StockFeedServiceProxy()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1DC2AFF68()
{
  return type metadata accessor for ManageWatchlistsViewController();
}

uint64_t type metadata accessor for ManageWatchlistsViewController()
{
  uint64_t result;

  result = qword_1F0350EB8;
  if (!qword_1F0350EB8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1DC2AFFAC()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for ManageWatchlistsContentMode(319);
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

void sub_1DC2B0048()
{
  char *v0;
  char *v1;
  objc_class *ObjectType;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  char *v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  uint64_t v16;
  void *v17;
  id v18;
  uint64_t v19;
  void *v20;
  void *v21;
  id v22;
  void *v23;
  id v24;
  void *v25;
  void *v26;
  id v27;
  void *v28;
  id v29;
  void *v30;
  void *v31;
  uint64_t v32;
  uint64_t ObjCClassFromMetadata;
  void *v34;
  id v35;
  void *v36;
  id v37;
  void *v38;
  uint64_t v39;
  void *v40;
  id v41;
  void *v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  id v49;
  id v50;
  id v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  objc_super v57;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  v3 = sub_1DC4010E4();
  v55 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for ManageWatchlistsContentMode(0);
  *(_QWORD *)&v7 = MEMORY[0x1E0C80A78](v6).n128_u64[0];
  v9 = (char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57.receiver = v1;
  v57.super_class = ObjectType;
  objc_msgSendSuper2(&v57, sel_viewDidLoad, v7);
  v10 = objc_msgSend(v1, sel_navigationController);
  if (v10)
  {
    v11 = v10;
    v12 = objc_msgSend(v10, sel_presentationController);

    if (v12)
    {
      objc_msgSend(v12, sel_setDelegate_, v1);

    }
  }
  v13 = objc_msgSend(v1, sel_navigationController);
  if (v13)
  {
    v14 = v13;
    v15 = objc_msgSend(v13, sel_sheetPresentationController);

    if (v15)
    {
      sub_1DC0E7820();
      v16 = swift_allocObject();
      *(_OWORD *)(v16 + 16) = xmmword_1DC40FA50;
      v17 = (void *)objc_opt_self();
      v18 = objc_msgSend(v17, sel_mediumDetent);
      v19 = sub_1DC2B08F8();

      *(_QWORD *)(v16 + 32) = v19;
      *(_QWORD *)(v16 + 40) = objc_msgSend(v17, sel_largeDetent);
      v56 = v16;
      sub_1DC408CF8();
      sub_1DC2B1DD8();
      v20 = (void *)sub_1DC408CC8();
      swift_bridgeObjectRelease();
      objc_msgSend(v15, sel_setDetents_, v20);

      objc_msgSend(v15, sel_setPrefersScrollingExpandsWhenScrolledToEdge_, 1);
      objc_msgSend(v15, sel_setPrefersEdgeAttachedInCompactHeight_, 1);
      objc_msgSend(v15, sel_setWidthFollowsPreferredContentSizeWhenEdgeAttached_, 1);

    }
  }
  v21 = *(void **)&v1[OBJC_IVAR____TtC8StocksUI30ManageWatchlistsViewController_blueprintViewController];
  objc_msgSend(v1, sel_addChildViewController_, v21);
  v22 = objc_msgSend(v1, sel_view);
  if (!v22)
  {
    __break(1u);
    goto LABEL_15;
  }
  v23 = v22;
  v24 = objc_msgSend(v21, sel_view);
  if (!v24)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v25 = v24;
  objc_msgSend(v23, sel_addSubview_, v24);

  objc_msgSend(v21, sel_didMoveToParentViewController_, v1);
  sub_1DC4055CC();
  v26 = (void *)sub_1DC405074();
  swift_release();
  v27 = objc_msgSend((id)objc_opt_self(), sel_clearColor);
  objc_msgSend(v26, sel_setBackgroundColor_, v27);

  objc_msgSend(v26, sel_setSeparatorStyle_, 0);
  sub_1DC4055CC();
  v28 = (void *)sub_1DC405074();
  swift_release();
  objc_msgSend(v28, sel_setAllowsMultipleSelection_, objc_msgSend(v1, sel_isEditing) ^ 1);

  v29 = objc_msgSend(v1, sel_view);
  if (!v29)
  {
LABEL_16:
    __break(1u);
    return;
  }
  v30 = v29;
  v31 = *(void **)&v1[OBJC_IVAR____TtC8StocksUI30ManageWatchlistsViewController_descriptionLabel];
  objc_msgSend(v29, sel_addSubview_, v31);

  sub_1DC0990BC((uint64_t)&v1[OBJC_IVAR____TtC8StocksUI30ManageWatchlistsViewController_contentMode], (uint64_t)v9, type metadata accessor for ManageWatchlistsContentMode);
  sub_1DC15C2FC();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 48))(v9, 1, v32) == 1)
  {
    type metadata accessor for Localized();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    v34 = (void *)objc_opt_self();
    v35 = objc_msgSend(v34, sel_bundleForClass_, ObjCClassFromMetadata);
    sub_1DC3FFC80();

    v36 = (void *)sub_1DC408A1C();
    swift_bridgeObjectRelease();
    objc_msgSend(v1, sel_setTitle_, v36);

    v37 = objc_msgSend(v34, sel_bundleForClass_, ObjCClassFromMetadata);
    sub_1DC3FFC80();

    v38 = (void *)sub_1DC408A1C();
    swift_bridgeObjectRelease();
    objc_msgSend(v31, sel_setText_, v38);

  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v55 + 32))(v5, v9, v3);
    type metadata accessor for Localized();
    v39 = swift_getObjCClassFromMetadata();
    v40 = (void *)objc_opt_self();
    v54 = v3;
    v41 = objc_msgSend(v40, sel_bundleForClass_, v39);
    sub_1DC3FFC80();

    v42 = (void *)sub_1DC408A1C();
    swift_bridgeObjectRelease();
    objc_msgSend(v1, sel_setTitle_, v42);

    v43 = objc_msgSend(v40, sel_bundleForClass_, v39);
    sub_1DC3FFC80();

    sub_1DC089DA4(0, (unint64_t *)&qword_1EDB400C0, (uint64_t (*)(uint64_t))sub_1DC1542B8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v44 = swift_allocObject();
    *(_OWORD *)(v44 + 16) = xmmword_1DC40DC10;
    v45 = sub_1DC4010D8();
    v47 = v46;
    *(_QWORD *)(v44 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v44 + 64) = sub_1DC0E7FAC();
    *(_QWORD *)(v44 + 32) = v45;
    *(_QWORD *)(v44 + 40) = v47;
    sub_1DC408A70();
    swift_bridgeObjectRelease();
    v48 = (void *)sub_1DC408A1C();
    swift_bridgeObjectRelease();
    objc_msgSend(v31, sel_setText_, v48);

    (*(void (**)(char *, uint64_t))(v55 + 8))(v5, v54);
  }
  v49 = objc_msgSend(v1, sel_navigationItem);
  v50 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC34F0]), sel_initWithBarButtonSystemItem_target_action_, 0, v1, sel_handleDone);
  objc_msgSend(v49, sel_setRightBarButtonItem_, v50);

  v51 = objc_msgSend(v1, sel_traitCollection);
  sub_1DC2B1E14();

  objc_msgSend(v31, sel_setUserInteractionEnabled_, 1);
  objc_msgSend(v31, sel_setShowsLargeContentViewer_, 1);
  v52 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3998]), sel_init);
  objc_msgSend(v31, sel_addInteraction_, v52);

}

uint64_t sub_1DC2B08F8()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  id v4;
  uint64_t v5;

  sub_1DC409730();
  v1 = objc_msgSend(v0, sel_identifier, 0, 0xE000000000000000);
  sub_1DC408A4C();
  swift_bridgeObjectRelease();

  sub_1DC408B48();
  v2 = (void *)sub_1DC408A1C();
  swift_bridgeObjectRelease();
  sub_1DC2B1DD8();
  *(_QWORD *)(swift_allocObject() + 16) = v0;
  v3 = v2;
  v4 = v0;
  v5 = sub_1DC409244();

  swift_release();
  return v5;
}

void sub_1DC2B0A48()
{
  char *v0;
  void *v1;
  id v2;
  void *v3;
  double v4;
  CGFloat v5;
  double v6;
  CGFloat v7;
  double v8;
  CGFloat v9;
  double v10;
  CGFloat v11;
  double v12;
  double v13;
  id v14;
  void *v15;
  double v16;
  double v17;
  id v18;
  void *v19;
  double v20;
  CGFloat v21;
  double v22;
  CGFloat v23;
  double v24;
  CGFloat v25;
  double v26;
  CGFloat v27;
  id v28;
  void *v29;
  id v30;
  void *v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  double v38;
  double v39;
  CGFloat MaxY;
  objc_super v41;
  CGRect v42;
  CGRect v43;
  CGRect v44;
  CGRect v45;

  v41.receiver = v0;
  v41.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v41, sel_viewWillLayoutSubviews);
  v1 = *(void **)&v0[OBJC_IVAR____TtC8StocksUI30ManageWatchlistsViewController_descriptionLabel];
  v2 = objc_msgSend(v0, sel_view);
  if (!v2)
  {
    __break(1u);
    goto LABEL_8;
  }
  v3 = v2;
  objc_msgSend(v2, sel_frame);
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v11 = v10;

  v42.origin.x = v5;
  v42.origin.y = v7;
  v42.size.width = v9;
  v42.size.height = v11;
  v43 = CGRectInset(v42, 32.0, 32.0);
  objc_msgSend(v1, sel_sizeThatFits_, v43.size.width, v43.size.height);
  v13 = v12;
  v14 = objc_msgSend(v0, sel_view);
  if (!v14)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v15 = v14;
  objc_msgSend(v14, sel_safeAreaInsets);
  v17 = v16;

  v18 = objc_msgSend(v0, sel_view);
  if (!v18)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v19 = v18;
  objc_msgSend(v18, sel_frame);
  v21 = v20;
  v23 = v22;
  v25 = v24;
  v27 = v26;

  v44.origin.x = v21;
  v44.origin.y = v23;
  v44.size.width = v25;
  v44.size.height = v27;
  objc_msgSend(v1, sel_setFrame_, 32.0, v17 + 8.0, CGRectGetWidth(v44) + -64.0, v13);
  v28 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC8StocksUI30ManageWatchlistsViewController_blueprintViewController], sel_view);
  if (!v28)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v29 = v28;
  v30 = objc_msgSend(v0, sel_view);
  if (v30)
  {
    v31 = v30;
    objc_msgSend(v30, sel_bounds);
    v33 = v32;
    v35 = v34;
    v37 = v36;
    v39 = v38;

    objc_msgSend(v1, sel_frame);
    MaxY = CGRectGetMaxY(v45);
    objc_msgSend(v29, sel_setFrame_, UIEdgeInsetsInsetRect(v33, v35, v37, v39, MaxY + 16.0, 0.0));

    return;
  }
LABEL_11:
  __break(1u);
}

uint64_t sub_1DC2B0EBC(void *a1)
{
  id v1;
  id v2;

  v1 = objc_msgSend(a1, sel_containerTraitCollection);
  v2 = objc_msgSend(v1, sel_horizontalSizeClass);

  if (v2 == (id)1)
    return sub_1DC409238();
  else
    return 0;
}

uint64_t sub_1DC2B0F30(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;

  v3 = a1 + 16;
  swift_beginAccess();
  result = MEMORY[0x1DF0CAD78](v3);
  if (result)
  {
    v5 = (void *)result;
    v6 = *(_QWORD *)(result + OBJC_IVAR____TtC8StocksUI30ManageWatchlistsViewController_eventHandler);
    swift_unknownObjectRetain();

    v7 = *(_QWORD *)(v6 + 40);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 48))(a2, 1, ObjectType, v7);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1DC2B0FC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t result;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;

  v7 = a3 + 16;
  swift_beginAccess();
  result = MEMORY[0x1DF0CAD78](v7);
  if (result)
  {
    v9 = (void *)result;
    v10 = *(_QWORD *)(result + OBJC_IVAR____TtC8StocksUI30ManageWatchlistsViewController_eventHandler);
    swift_unknownObjectRetain();

    v11 = *(_QWORD *)(v10 + 40);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 80))(a4, a1, a2, ObjectType, v11);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1DC2B1078(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t ObjectType;
  uint64_t v11;

  v3 = v2;
  v5 = type metadata accessor for ManageWatchlistsModel();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC142B5C();
  sub_1DC404354();
  if (swift_getEnumCaseMultiPayload() <= 1)
  {
    v8 = *(_QWORD *)(*(_QWORD *)(v3 + OBJC_IVAR____TtC8StocksUI30ManageWatchlistsViewController_eventHandler) + 40);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 72))(a2, ObjectType, v8);
  }
  return sub_1DC0926D8((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for ManageWatchlistsModel);
}

uint64_t sub_1DC2B1144(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  uint64_t result;
  uint64_t v11;
  uint64_t ObjectType;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v5 = sub_1DC406334();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v6 + 16))(v9, a3, v5, v7);
  result = (*(uint64_t (**)(char *, uint64_t))(v6 + 88))(v9, v5);
  if ((_DWORD)result == *MEMORY[0x1E0DBB9D0])
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  }
  else
  {
    if ((_DWORD)result == *MEMORY[0x1E0DBB9A8])
    {
      v11 = *(_QWORD *)(*(_QWORD *)(v3 + OBJC_IVAR____TtC8StocksUI30ManageWatchlistsViewController_eventHandler) + 40);
      ObjectType = swift_getObjectType();
      return (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 32))(ObjectType, v11);
    }
    if ((_DWORD)result != *MEMORY[0x1E0DBB9C8] && (_DWORD)result != *MEMORY[0x1E0DBB9B0])
    {
      if ((_DWORD)result == *MEMORY[0x1E0DBB9D8])
        return result;
      if ((_DWORD)result != *MEMORY[0x1E0DBB9F0])
        return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    }
  }
  v14 = *(_QWORD *)(*(_QWORD *)(v3 + OBJC_IVAR____TtC8StocksUI30ManageWatchlistsViewController_eventHandler) + 40);
  v15 = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 40))(v15, v14);
}

uint64_t sub_1DC2B12B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v14;
  uint64_t ObjectType;
  uint64_t v16;

  sub_1DC089DA4(0, &qword_1EDB28B50, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1658], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v16 - v7;
  v9 = sub_1DC400280();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC142B5C();
  sub_1DC404324();
  sub_1DC157C34();
  sub_1DC406D18();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    return sub_1DC15EA7C((uint64_t)v8);
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
  v14 = *(_QWORD *)(*(_QWORD *)(v3 + OBJC_IVAR____TtC8StocksUI30ManageWatchlistsViewController_eventHandler) + 40);
  ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(a2, v12, a3, ObjectType, v14);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_1DC2B143C()
{
  swift_getObjectType();
  return sub_1DC4063E8();
}

uint64_t sub_1DC2B1490(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t ObjectType;

  v4 = *(_QWORD *)(*(_QWORD *)(v2 + OBJC_IVAR____TtC8StocksUI30ManageWatchlistsViewController_eventHandler) + 40);
  ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 64))(a2, ObjectType, v4);
}

uint64_t sub_1DC2B14E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t ObjectType;

  v4 = *(_QWORD *)(*(_QWORD *)(v2 + OBJC_IVAR____TtC8StocksUI30ManageWatchlistsViewController_eventHandler) + 40);
  ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v4 + 48))(a2, 0, ObjectType, v4);
}

uint64_t sub_1DC2B1538()
{
  swift_getObjectType();
  return sub_1DC4063DC();
}

uint64_t sub_1DC2B1584()
{
  return sub_1DC405638();
}

uint64_t sub_1DC2B15AC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *MEMORY[0x1E0DBA218];
  v3 = sub_1DC4059BC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = *MEMORY[0x1E0DBA238];
  v5 = sub_1DC4059C8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a1, v4, v5);
}

uint64_t sub_1DC2B161C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  void (*v14)(unint64_t, _QWORD, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v18 = a1;
  v17 = sub_1DC4047D4();
  v1 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v3 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1DC4047E0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC089DA4(0, (unint64_t *)&qword_1EDB3FEE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB7BE8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v8 = sub_1DC4047EC();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 72);
  v11 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1DC40C740;
  v13 = v12 + v11;
  v14 = *(void (**)(unint64_t, _QWORD, uint64_t))(v9 + 104);
  v14(v13, *MEMORY[0x1E0DB7BD8], v8);
  v14(v13 + v10, *MEMORY[0x1E0DB7BD0], v8);
  sub_1DC368398(v12);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DB7BC0], v4);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB7BA0], v17);
  return sub_1DC404804();
}

uint64_t sub_1DC2B1818@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC2B161C(a1);
}

void sub_1DC2B19DC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v17;
  void *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  void *v23;
  id v24;
  _QWORD v25[2];

  sub_1DC142B5C();
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x1E0C80A78](v2);
  sub_1DC089DA4(0, &qword_1EDB28E40, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF270], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v25 - v7;
  v9 = type metadata accessor for ManageWatchlistsModel();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for WatchlistRenameAlert();
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC404354();
  sub_1DC2BB68C((uint64_t)v8);
  sub_1DC0926D8((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for ManageWatchlistsModel);
  sub_1DC2B1C94((uint64_t)v8, (uint64_t)v14);
  type metadata accessor for TextInputAlert();
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 40) = v12;
  *(_QWORD *)(v15 + 48) = &off_1EA451FA0;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v15 + 16));
  sub_1DC0990BC((uint64_t)v14, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(_QWORD))type metadata accessor for WatchlistRenameAlert);
  *(_OWORD *)(v15 + 56) = 0u;
  *(_OWORD *)(v15 + 72) = 0u;
  *(_QWORD *)(v15 + 96) = 0;
  *(_QWORD *)(v15 + 104) = 0;
  *(_QWORD *)(v15 + 88) = sub_1DC080520;
  sub_1DC0926D8((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for WatchlistRenameAlert);
  v17 = swift_allocObject();
  v18 = (void *)v25[1];
  swift_unknownObjectWeakInit();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3);
  v19 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v20 = swift_allocObject();
  *(_QWORD *)(v20 + 16) = v17;
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v20 + v19, (char *)v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
  v21 = *(_QWORD *)(v15 + 56);
  *(_QWORD *)(v15 + 56) = sub_1DC2B1D88;
  *(_QWORD *)(v15 + 64) = v20;
  sub_1DC0E81D0(v21);
  *(_QWORD *)(v15 + 88) = sub_1DC1CBA64;
  *(_QWORD *)(v15 + 96) = 0;
  swift_release();
  v22 = sub_1DC168EC4();
  v23 = *(void **)(v15 + 104);
  *(_QWORD *)(v15 + 104) = v22;
  v24 = v22;

  objc_msgSend(v18, sel_presentViewController_animated_completion_, v24, 1, 0);
  swift_release();

}

uint64_t sub_1DC2B1C94(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1DC089DA4(0, &qword_1EDB28E40, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF270], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC2B1CF0()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1DC2B1D14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  sub_1DC142B5C();
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v0 + v4, v2);
  return swift_deallocObject();
}

uint64_t sub_1DC2B1D88(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;

  sub_1DC142B5C();
  v6 = *(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80);
  return sub_1DC2B0FC8(a1, a2, *(_QWORD *)(v2 + 16), v2 + ((v6 + 24) & ~v6));
}

unint64_t sub_1DC2B1DD8()
{
  unint64_t result;

  result = qword_1F0350F48;
  if (!qword_1F0350F48)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1F0350F48);
  }
  return result;
}

void sub_1DC2B1E14()
{
  char *v0;
  char *v1;
  id v2;
  void *v3;
  char *v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  _QWORD *v9;
  void *v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;

  v1 = v0;
  v2 = objc_msgSend(v0, sel_view);
  if (v2)
  {
    v3 = v2;
    v4 = &v1[OBJC_IVAR____TtC8StocksUI30ManageWatchlistsViewController_styler];
    v5 = (void *)objc_opt_self();
    v6 = objc_msgSend(v5, sel_systemBackgroundColor);
    objc_msgSend(v3, sel_setBackgroundColor_, v6);

    sub_1DC4055CC();
    v7 = (void *)sub_1DC405074();
    swift_release();
    v8 = objc_msgSend(v5, sel_clearColor);
    objc_msgSend(v7, sel_setBackgroundColor_, v8);

    objc_msgSend(v7, sel_setSeparatorStyle_, 0);
    v9 = __swift_project_boxed_opaque_existential_1(v4, *((_QWORD *)v4 + 3));
    v10 = *(void **)&v1[OBJC_IVAR____TtC8StocksUI30ManageWatchlistsViewController_descriptionLabel];
    v11 = (_QWORD *)*v9;
    objc_msgSend(v10, sel_setNumberOfLines_, 0);
    objc_msgSend(v10, sel_setTextAlignment_, 1);
    v12 = v11 + 2;
    v14 = v11[5];
    v13 = v11[6];
    __swift_project_boxed_opaque_existential_1(v12, v14);
    v15 = (void *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)(v13 + 16) + 248))(v14);
    objc_msgSend(v10, sel_setTextColor_, v15);

    v16 = objc_msgSend((id)objc_opt_self(), sel_systemFontOfSize_, 14.0);
    objc_msgSend(v10, sel_setFont_, v16);

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1DC2B1FEC(void *a1, id a2)
{
  id v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  void *v13;

  v3 = objc_msgSend(a2, sel_horizontalSizeClass);
  objc_opt_self();
  v4 = swift_dynamicCastObjCClass();
  v5 = (void *)v4;
  if (v3 == (id)1)
  {
    if (!v4)
      return 1;
    sub_1DC0E7820();
    v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_1DC40FA50;
    v7 = (void *)objc_opt_self();
    v8 = a1;
    *(_QWORD *)(v6 + 32) = objc_msgSend(v7, sel_mediumDetent);
    *(_QWORD *)(v6 + 40) = objc_msgSend(v7, sel_largeDetent);
    sub_1DC408CF8();
    v9 = 1;
  }
  else
  {
    if (!v4)
      return 2;
    sub_1DC0E7820();
    v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_1DC40FA60;
    v11 = (void *)objc_opt_self();
    v12 = a1;
    *(_QWORD *)(v10 + 32) = objc_msgSend(v11, sel_largeDetent);
    sub_1DC408CF8();
    v9 = 2;
  }
  sub_1DC2B1DD8();
  v13 = (void *)sub_1DC408CC8();
  swift_bridgeObjectRelease();
  objc_msgSend(v5, sel_setDetents_, v13);

  objc_msgSend(v5, sel_setPrefersEdgeAttachedInCompactHeight_, v3 == (id)1);
  return v9;
}

double UIEdgeInsetsInsetRect(double a1, double a2, double a3, double a4, double a5, double a6)
{
  return a1 + a6;
}

uint64_t sub_1DC2B21DC()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1DC2B2200(void *a1)
{
  return sub_1DC2B0EBC(a1);
}

uint64_t *sub_1DC2B2208(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  __int128 v14;
  uint64_t v15;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1DC4008EC();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v13 = *(int *)(a3 + 24);
    v14 = *(_OWORD *)((char *)a2 + v13 + 24);
    *(_OWORD *)((char *)v4 + v13 + 24) = v14;
    (**(void (***)(void))(v14 - 8))();
  }
  return v4;
}

uint64_t sub_1DC2B22D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_1DC4008EC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  return __swift_destroy_boxed_opaque_existential_1(a1 + *(int *)(a2 + 24));
}

_QWORD *sub_1DC2B2334(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  __int128 v13;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1DC4008EC();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  v12 = *(int *)(a3 + 24);
  v13 = *(_OWORD *)((char *)a2 + v12 + 24);
  *(_OWORD *)((char *)a1 + v12 + 24) = v13;
  (**(void (***)(void))(v13 - 8))();
  return a1;
}

_QWORD *sub_1DC2B23D8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1DC4008EC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  __swift_assign_boxed_opaque_existential_1((_QWORD *)((char *)a1 + *(int *)(a3 + 24)), (_QWORD *)((char *)a2 + *(int *)(a3 + 24)));
  return a1;
}

_OWORD *sub_1DC2B246C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  __int128 v13;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1DC4008EC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = *(int *)(a3 + 24);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = *((_OWORD *)v12 + 1);
  *(_OWORD *)v11 = *(_OWORD *)v12;
  *((_OWORD *)v11 + 1) = v13;
  *((_QWORD *)v11 + 4) = *((_QWORD *)v12 + 4);
  return a1;
}

_QWORD *sub_1DC2B24F4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  __int128 v14;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1DC4008EC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1 + v11);
  v14 = *((_OWORD *)v13 + 1);
  *(_OWORD *)v12 = *(_OWORD *)v13;
  *((_OWORD *)v12 + 1) = v14;
  *((_QWORD *)v12 + 4) = *((_QWORD *)v13 + 4);
  return a1;
}

uint64_t sub_1DC2B258C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC2B2598(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1DC4008EC();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t sub_1DC2B2614()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC2B2620(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_1DC4008EC();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for StockFeedPriceChangeDisplayBlueprintModifier()
{
  uint64_t result;

  result = qword_1EDB419D8;
  if (!qword_1EDB419D8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1DC2B26D0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1DC4008EC();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1DC2B274C(uint64_t a1, void (*a2)(char *), uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *);
  uint64_t v41;
  uint64_t v42;
  char v43[16];
  uint64_t v44;
  __int128 v45;
  __int128 v46;
  char v47[24];

  v39 = a3;
  v40 = a2;
  v4 = sub_1DC404984();
  v33 = *(_QWORD *)(v4 - 8);
  v34 = v4;
  MEMORY[0x1E0C80A78](v4);
  v32 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC165EEC(0, &qword_1EDB2A278, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB9A28]);
  v37 = *(_QWORD *)(v6 - 8);
  v38 = v6;
  MEMORY[0x1E0C80A78](v6);
  v36 = (char *)&v31 - v7;
  sub_1DC165DE8();
  MEMORY[0x1E0C80A78](v8);
  sub_1DC165EEC(0, (unint64_t *)&qword_1EDB2AB10, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790]);
  v35 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v31 - v10;
  v42 = v12;
  sub_1DC406C70();
  v41 = v3;
  v44 = v3;
  v13 = sub_1DC155114((void (*)(char *))sub_1DC2B36E8, (uint64_t)v43, (uint64_t)v47);
  sub_1DC165EEC(0, (unint64_t *)&qword_1EDB29D60, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60]);
  v15 = v14;
  v16 = sub_1DC19E01C(&qword_1EDB29D48, MEMORY[0x1E0DB7B88]);
  v17 = sub_1DC19E01C(&qword_1EDB29D40, MEMORY[0x1E0DB7B80]);
  MEMORY[0x1DF0C311C](v13, v15, v16, v17);
  type metadata accessor for StockFeedSectionDescriptor();
  type metadata accessor for StockFeedModel();
  sub_1DC080808(&qword_1EDB36EE0, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedSectionDescriptor, (uint64_t)&unk_1DC4167B0);
  sub_1DC080808(&qword_1EDB2D770, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedModel, (uint64_t)&unk_1DC429058);
  sub_1DC406C64();
  v18 = sub_1DC1581D0();
  sub_1DC4078A0();
  sub_1DC407894();
  type metadata accessor for StockFeedServiceConfig();
  sub_1DC080808(&qword_1EDB33F10, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedServiceConfig, (uint64_t)&unk_1DC411510);
  v19 = sub_1DC40787C();
  swift_release();
  if (v19)
  {
    *((_QWORD *)&v46 + 1) = sub_1DC407420();
    *(_QWORD *)&v45 = v19;
  }
  else
  {
    v45 = 0u;
    v46 = 0u;
  }
  v20 = v42;
  sub_1DC406D00();
  sub_1DC1F0AAC(v18);
  v21 = type metadata accessor for StockFeedPriceChangeDisplayBlueprintModifier();
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v41 + *(int *)(v21 + 24)), *(_QWORD *)(v41 + *(int *)(v21 + 24) + 24));
  if ((sub_1DC400C1C() & 1) != 0)
  {
    v22 = v36;
    sub_1DC405548();
  }
  else
  {
    v24 = v33;
    v23 = v34;
    v25 = v32;
    (*(void (**)(char *, _QWORD, uint64_t))(v33 + 104))(v32, *MEMORY[0x1E0DB7FB8], v34);
    sub_1DC080808(&qword_1EDB36EE8, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedSectionDescriptor, (uint64_t)&unk_1DC416860);
    v22 = v36;
    sub_1DC405554();
    v26 = v25;
    v20 = v42;
    (*(void (**)(char *, uint64_t))(v24 + 8))(v26, v23);
  }
  v28 = v37;
  v27 = v38;
  v29 = v35;
  v40(v22);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v22, v27);
  return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v11, v20);
}

uint64_t sub_1DC2B2B8C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v12[16];
  uint64_t v13;
  _BYTE v14[8];

  sub_1DC142434();
  MEMORY[0x1E0C80A78](v3);
  v4 = type metadata accessor for StockFeedSectionDescriptor();
  MEMORY[0x1E0C80A78](v4);
  sub_1DC2B2D50(a2, (uint64_t)&v12[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)]);
  v13 = a2;
  v6 = sub_1DC1550E0((void (*)(char *))sub_1DC2B3704, (uint64_t)v12, (uint64_t)v14);
  sub_1DC142200();
  v8 = v7;
  v9 = sub_1DC080808((unint64_t *)&unk_1EDB29BB0, (uint64_t (*)(uint64_t))sub_1DC142200, MEMORY[0x1E0DB6F08]);
  v10 = sub_1DC080808(&qword_1EDB29BA8, (uint64_t (*)(uint64_t))sub_1DC142200, MEMORY[0x1E0DB6EF8]);
  MEMORY[0x1DF0C311C](v6, v8, v9, v10);
  type metadata accessor for StockFeedModel();
  sub_1DC080808(&qword_1EDB36EE0, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedSectionDescriptor, (uint64_t)&unk_1DC4167B0);
  sub_1DC080808(&qword_1EDB2D770, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedModel, (uint64_t)&unk_1DC429058);
  return sub_1DC4046F0();
}

void sub_1DC2B2D50(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD v12[5];
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v14 = a1;
  v15 = a2;
  v13 = sub_1DC4008EC();
  v12[3] = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v12[4] = (char *)v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC092F50(0, (unint64_t *)&unk_1EDB28D90, (void (*)(uint64_t))MEMORY[0x1E0DAEFA8]);
  MEMORY[0x1E0C80A78](v3);
  v12[2] = (char *)v12 - v4;
  sub_1DC092F50(0, &qword_1EDB28DC0, (void (*)(uint64_t))MEMORY[0x1E0DAF040]);
  MEMORY[0x1E0C80A78](v5);
  v12[1] = (char *)v12 - v6;
  v7 = sub_1DC4010E4();
  MEMORY[0x1E0C80A78](v7);
  v8 = type metadata accessor for StockFeedMastheadModel();
  MEMORY[0x1E0C80A78](v8);
  MEMORY[0x1E0C80A78](v9);
  v10 = type metadata accessor for StockFeedSectionDescriptor();
  MEMORY[0x1E0C80A78](v10);
  sub_1DC165EEC(0, (unint64_t *)&qword_1EDB29D60, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60]);
  sub_1DC4046FC();
  v11 = (char *)sub_1DC2B2F50 + 4 * byte_1DC422A40[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1DC2B2F50()
{
  return sub_1DC4046FC();
}

void sub_1DC2B2F7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_1DC1E0990(v2, v0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v4, v0, v1);
  v8 = *(_QWORD *)(v7 - 136);
  sub_1DC092F9C(v0 + v6[5], v8, &qword_1EDB28DC0, (void (*)(uint64_t))MEMORY[0x1E0DAF040]);
  v9 = *(_QWORD *)(v7 - 128);
  sub_1DC092F9C(v0 + v6[6], v9, (unint64_t *)&unk_1EDB28D90, (void (*)(uint64_t))MEMORY[0x1E0DAEFA8]);
  v10 = type metadata accessor for StockFeedPriceChangeDisplayBlueprintModifier();
  v11 = *(_QWORD *)(v7 - 112);
  (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v7 - 120) + 16))(v11, *(_QWORD *)(v7 - 96) + *(int *)(v10 + 20), *(_QWORD *)(v7 - 104));
  sub_1DC2F2578(v4, v8, v9, v11, *(unsigned __int8 *)(v0 + v6[8]), v5);
  sub_1DC0926D8(v0, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedMastheadModel);
  sub_1DC1E0990(v5, *(_QWORD *)(v7 - 88));
  swift_storeEnumTagMultiPayload();
  JUMPOUT(0x1DC2B2F5CLL);
}

uint64_t sub_1DC2B305C()
{
  uint64_t v0;
  uint64_t v1;

  swift_bridgeObjectRelease();
  sub_1DC142534();
  sub_1DC092F14(v0 + *(int *)(v1 + 64), &qword_1EDB2AD80, (void (*)(uint64_t))MEMORY[0x1E0D5A418]);
  return sub_1DC2B2F50();
}

uint64_t sub_1DC2B308C()
{
  uint64_t v0;

  sub_1DC0926D8(v0, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedSectionDescriptor);
  return sub_1DC2B2F50();
}

void sub_1DC2B30A0(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  _QWORD v16[10];

  v16[6] = a1;
  v16[9] = a2;
  sub_1DC092F50(0, &qword_1EDB28BA0, (void (*)(uint64_t))MEMORY[0x1E0DAE188]);
  MEMORY[0x1E0C80A78](v2);
  v16[1] = (char *)v16 - v3;
  v4 = sub_1DC4008EC();
  v16[3] = *(_QWORD *)(v4 - 8);
  v16[4] = v4;
  MEMORY[0x1E0C80A78](v4);
  v16[5] = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC092F50(0, (unint64_t *)&unk_1EDB28D90, (void (*)(uint64_t))MEMORY[0x1E0DAEFA8]);
  MEMORY[0x1E0C80A78](v6);
  v16[2] = (char *)v16 - v7;
  sub_1DC092F50(0, &qword_1EDB28DC0, (void (*)(uint64_t))MEMORY[0x1E0DAF040]);
  MEMORY[0x1E0C80A78](v8);
  v16[8] = (char *)v16 - v9;
  v10 = sub_1DC4010E4();
  MEMORY[0x1E0C80A78](v10);
  v11 = type metadata accessor for StockFeedMastheadModel();
  MEMORY[0x1E0C80A78](v11);
  v12 = type metadata accessor for StockFeedModel();
  MEMORY[0x1E0C80A78](v12);
  v16[7] = (char *)v16 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  sub_1DC142200();
  sub_1DC404354();
  v15 = (char *)sub_1DC2B32E0 + 4 * byte_1DC422A48[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1DC2B32E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1DC0926D8(v2, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedModel);
  return (*(uint64_t (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 16))(*(_QWORD *)(v3 - 88), v0, v1);
}

uint64_t sub_1DC2B36BC()
{
  return sub_1DC080808(&qword_1EDB419D0, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedPriceChangeDisplayBlueprintModifier, (uint64_t)&unk_1DC422AC0);
}

uint64_t sub_1DC2B36E8(uint64_t a1)
{
  uint64_t v1;

  return sub_1DC2B2B8C(a1, *(_QWORD *)(v1 + 16));
}

void sub_1DC2B3704(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_1DC2B30A0(*(_QWORD *)(v1 + 16), a1);
}

_QWORD *sub_1DC2B3720(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  int *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  void (*v44)(char *, char *, uint64_t);
  _QWORD *v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  char *v73;
  int *v74;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    v15 = (_QWORD *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = sub_1DC4010E4();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    v7 = (int *)type metadata accessor for StockViewModel();
    v8 = v7[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1DC401030();
    v12 = *(_QWORD *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    {
      sub_1DC092F50(0, &qword_1EDB28DC0, (void (*)(uint64_t))MEMORY[0x1E0DAF040]);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    v16 = v7[6];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    v19 = (int *)type metadata accessor for StockSparklineViewModel(0);
    v20 = *((_QWORD *)v19 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v20 + 48))(v18, 1, v19))
    {
      sub_1DC092F50(0, &qword_1EDB353E0, (void (*)(uint64_t))type metadata accessor for StockSparklineViewModel);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      v22 = sub_1DC408614();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v17, v18, v22);
      v23 = v19[5];
      v24 = &v17[v23];
      v25 = &v18[v23];
      *(_QWORD *)v24 = *(_QWORD *)v25;
      v24[8] = v25[8];
      v26 = v19[6];
      v27 = &v17[v26];
      v28 = &v18[v26];
      *(_QWORD *)v27 = *(_QWORD *)v28;
      v27[8] = v28[8];
      v17[v19[7]] = v18[v19[7]];
      v29 = v19[8];
      v30 = &v17[v29];
      v31 = &v18[v29];
      v32 = sub_1DC400F7C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v30, v31, v32);
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v20 + 56))(v17, 0, 1, v19);
    }
    v33 = v7[7];
    v34 = (char *)a1 + v33;
    v74 = v7;
    v35 = (char *)a2 + v33;
    *(_QWORD *)v34 = *(_QWORD *)((char *)a2 + v33);
    v34[8] = *((_BYTE *)a2 + v33 + 8);
    *((_QWORD *)v34 + 2) = *(_QWORD *)((char *)a2 + v33 + 16);
    v34[24] = *((_BYTE *)a2 + v33 + 24);
    *((_QWORD *)v34 + 4) = *(_QWORD *)((char *)a2 + v33 + 32);
    v34[40] = *((_BYTE *)a2 + v33 + 40);
    v36 = *(_QWORD *)((char *)a2 + v33 + 56);
    *((_QWORD *)v34 + 6) = *(_QWORD *)((char *)a2 + v33 + 48);
    *((_QWORD *)v34 + 7) = v36;
    v37 = *(_QWORD *)((char *)a2 + v33 + 72);
    *((_QWORD *)v34 + 8) = *(_QWORD *)((char *)a2 + v33 + 64);
    *((_QWORD *)v34 + 9) = v37;
    v34[80] = *((_BYTE *)a2 + v33 + 80);
    v38 = type metadata accessor for PriceViewModel();
    v39 = *(int *)(v38 + 40);
    v73 = &v34[v39];
    v40 = &v35[v39];
    v41 = sub_1DC4011C8();
    v42 = a1;
    v43 = a2;
    v44 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v44(v73, v40, v41);
    v45 = v43;
    v15 = v42;
    v46 = *(int *)(v38 + 44);
    v47 = &v34[v46];
    v48 = &v35[v46];
    v49 = sub_1DC400118();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 16))(v47, v48, v49);
    v50 = v74[8];
    v51 = (char *)v42 + v50;
    v52 = (uint64_t)v45 + v50;
    v53 = sub_1DC4008EC();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 16))(v51, v52, v53);
    *((_BYTE *)v42 + v74[9]) = *((_BYTE *)v45 + v74[9]);
    sub_1DC2B3B68();
    v55 = v54;
    v56 = *(int *)(v54 + 48);
    v57 = (char *)v42 + v56;
    v58 = (char *)v45 + v56;
    v59 = sub_1DC40124C();
    v60 = *(_QWORD *)(v59 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v60 + 48))(v58, 1, v59))
    {
      sub_1DC092F50(0, &qword_1EDB28E40, (void (*)(uint64_t))MEMORY[0x1E0DAF270]);
      memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v57, v58, v59);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v60 + 56))(v57, 0, 1, v59);
    }
    v62 = *(int *)(v55 + 64);
    v63 = (uint64_t)v15 + v62;
    v64 = (uint64_t)v45 + v62;
    v65 = *(_OWORD *)(v64 + 208);
    *(_OWORD *)(v63 + 192) = *(_OWORD *)(v64 + 192);
    *(_OWORD *)(v63 + 208) = v65;
    *(_QWORD *)(v63 + 224) = *(_QWORD *)(v64 + 224);
    v66 = *(_OWORD *)(v64 + 144);
    *(_OWORD *)(v63 + 128) = *(_OWORD *)(v64 + 128);
    *(_OWORD *)(v63 + 144) = v66;
    v67 = *(_OWORD *)(v64 + 176);
    *(_OWORD *)(v63 + 160) = *(_OWORD *)(v64 + 160);
    *(_OWORD *)(v63 + 176) = v67;
    v68 = *(_OWORD *)(v64 + 80);
    *(_OWORD *)(v63 + 64) = *(_OWORD *)(v64 + 64);
    *(_OWORD *)(v63 + 80) = v68;
    v69 = *(_OWORD *)(v64 + 112);
    *(_OWORD *)(v63 + 96) = *(_OWORD *)(v64 + 96);
    *(_OWORD *)(v63 + 112) = v69;
    v70 = *(_OWORD *)(v64 + 16);
    *(_OWORD *)v63 = *(_OWORD *)v64;
    *(_OWORD *)(v63 + 16) = v70;
    v71 = *(_OWORD *)(v64 + 48);
    *(_OWORD *)(v63 + 32) = *(_OWORD *)(v64 + 32);
    *(_OWORD *)(v63 + 48) = v71;
  }
  return v15;
}

void sub_1DC2B3B68()
{
  unint64_t TupleTypeMetadata3;
  uint64_t v1;

  if (!qword_1F0350F58)
  {
    type metadata accessor for StockViewModel();
    sub_1DC092F50(255, &qword_1EDB28E40, (void (*)(uint64_t))MEMORY[0x1E0DAF270]);
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1)
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_1F0350F58);
  }
}

uint64_t sub_1DC2B3BF0(uint64_t a1)
{
  uint64_t v2;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;

  v2 = sub_1DC4010E4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  v3 = (int *)type metadata accessor for StockViewModel();
  v4 = a1 + v3[5];
  v5 = sub_1DC401030();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  v7 = a1 + v3[6];
  v8 = type metadata accessor for StockSparklineViewModel(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v7, 1, v8))
  {
    v9 = sub_1DC408614();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v7, v9);
    v10 = v7 + *(int *)(v8 + 32);
    v11 = sub_1DC400F7C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  }
  v12 = a1 + v3[7];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v13 = type metadata accessor for PriceViewModel();
  v14 = v12 + *(int *)(v13 + 40);
  v15 = sub_1DC4011C8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14, v15);
  v16 = v12 + *(int *)(v13 + 44);
  v17 = sub_1DC400118();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v16, v17);
  v18 = a1 + v3[8];
  v19 = sub_1DC4008EC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v18, v19);
  sub_1DC2B3B68();
  v21 = a1 + *(int *)(v20 + 48);
  v22 = sub_1DC40124C();
  v23 = *(_QWORD *)(v22 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 8))(v21, v22);
  return result;
}

uint64_t sub_1DC2B3DDC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  int *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(uint64_t, uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  const void *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  uint64_t v70;
  int *v71;

  v4 = sub_1DC4010E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  v5 = (int *)type metadata accessor for StockViewModel();
  v6 = v5[5];
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = sub_1DC401030();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    sub_1DC092F50(0, &qword_1EDB28DC0, (void (*)(uint64_t))MEMORY[0x1E0DAF040]);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v12 = v5[6];
  v13 = (char *)(a1 + v12);
  v14 = (char *)(a2 + v12);
  v15 = (int *)type metadata accessor for StockSparklineViewModel(0);
  v16 = *((_QWORD *)v15 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v16 + 48))(v14, 1, v15))
  {
    sub_1DC092F50(0, &qword_1EDB353E0, (void (*)(uint64_t))type metadata accessor for StockSparklineViewModel);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    v18 = sub_1DC408614();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v13, v14, v18);
    v19 = v15[5];
    v20 = &v13[v19];
    v21 = &v14[v19];
    *(_QWORD *)v20 = *(_QWORD *)v21;
    v20[8] = v21[8];
    v22 = v15[6];
    v23 = &v13[v22];
    v24 = &v14[v22];
    *(_QWORD *)v23 = *(_QWORD *)v24;
    v23[8] = v24[8];
    v13[v15[7]] = v14[v15[7]];
    v25 = v15[8];
    v26 = &v13[v25];
    v27 = &v14[v25];
    v28 = sub_1DC400F7C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v26, v27, v28);
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v16 + 56))(v13, 0, 1, v15);
  }
  v29 = v5[7];
  v30 = a1 + v29;
  v71 = v5;
  v31 = a2 + v29;
  *(_QWORD *)v30 = *(_QWORD *)(a2 + v29);
  *(_BYTE *)(v30 + 8) = *(_BYTE *)(a2 + v29 + 8);
  *(_QWORD *)(v30 + 16) = *(_QWORD *)(a2 + v29 + 16);
  *(_BYTE *)(v30 + 24) = *(_BYTE *)(a2 + v29 + 24);
  *(_QWORD *)(v30 + 32) = *(_QWORD *)(a2 + v29 + 32);
  *(_BYTE *)(v30 + 40) = *(_BYTE *)(a2 + v29 + 40);
  v32 = *(_QWORD *)(a2 + v29 + 56);
  *(_QWORD *)(v30 + 48) = *(_QWORD *)(a2 + v29 + 48);
  *(_QWORD *)(v30 + 56) = v32;
  v33 = *(_QWORD *)(a2 + v29 + 72);
  *(_QWORD *)(v30 + 64) = *(_QWORD *)(a2 + v29 + 64);
  *(_QWORD *)(v30 + 72) = v33;
  *(_BYTE *)(v30 + 80) = *(_BYTE *)(a2 + v29 + 80);
  v34 = type metadata accessor for PriceViewModel();
  v35 = *(int *)(v34 + 40);
  v70 = v30 + v35;
  v36 = v31 + v35;
  v37 = sub_1DC4011C8();
  v38 = a1;
  v39 = a2;
  v40 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v40(v70, v36, v37);
  v41 = v39;
  v42 = v38;
  v43 = *(int *)(v34 + 44);
  v44 = v30 + v43;
  v45 = v31 + v43;
  v46 = sub_1DC400118();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 16))(v44, v45, v46);
  v47 = v71[8];
  v48 = v38 + v47;
  v49 = v41 + v47;
  v50 = sub_1DC4008EC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 16))(v48, v49, v50);
  *(_BYTE *)(v38 + v71[9]) = *(_BYTE *)(v41 + v71[9]);
  sub_1DC2B3B68();
  v52 = v51;
  v53 = *(int *)(v51 + 48);
  v54 = (void *)(v38 + v53);
  v55 = (const void *)(v41 + v53);
  v56 = sub_1DC40124C();
  v57 = *(_QWORD *)(v56 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v57 + 48))(v55, 1, v56))
  {
    sub_1DC092F50(0, &qword_1EDB28E40, (void (*)(uint64_t))MEMORY[0x1E0DAF270]);
    memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v57 + 16))(v54, v55, v56);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v57 + 56))(v54, 0, 1, v56);
  }
  v59 = *(int *)(v52 + 64);
  v60 = v42 + v59;
  v61 = v41 + v59;
  v62 = *(_OWORD *)(v61 + 208);
  *(_OWORD *)(v60 + 192) = *(_OWORD *)(v61 + 192);
  *(_OWORD *)(v60 + 208) = v62;
  *(_QWORD *)(v60 + 224) = *(_QWORD *)(v61 + 224);
  v63 = *(_OWORD *)(v61 + 144);
  *(_OWORD *)(v60 + 128) = *(_OWORD *)(v61 + 128);
  *(_OWORD *)(v60 + 144) = v63;
  v64 = *(_OWORD *)(v61 + 176);
  *(_OWORD *)(v60 + 160) = *(_OWORD *)(v61 + 160);
  *(_OWORD *)(v60 + 176) = v64;
  v65 = *(_OWORD *)(v61 + 80);
  *(_OWORD *)(v60 + 64) = *(_OWORD *)(v61 + 64);
  *(_OWORD *)(v60 + 80) = v65;
  v66 = *(_OWORD *)(v61 + 112);
  *(_OWORD *)(v60 + 96) = *(_OWORD *)(v61 + 96);
  *(_OWORD *)(v60 + 112) = v66;
  v67 = *(_OWORD *)(v61 + 16);
  *(_OWORD *)v60 = *(_OWORD *)v61;
  *(_OWORD *)(v60 + 16) = v67;
  v68 = *(_OWORD *)(v61 + 48);
  *(_OWORD *)(v60 + 32) = *(_OWORD *)(v61 + 32);
  *(_OWORD *)(v60 + 48) = v68;
  return v42;
}

uint64_t sub_1DC2B41F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  _BYTE *v17;
  int *v18;
  uint64_t v19;
  uint64_t (*v20)(_BYTE *, uint64_t, int *);
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void *v70;
  void *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t (*v74)(void *, uint64_t, uint64_t);
  int v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  _QWORD *v79;

  v4 = sub_1DC4010E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  v5 = (int *)type metadata accessor for StockViewModel();
  v6 = v5[5];
  v7 = (void *)(a1 + v6);
  v8 = (void *)(a2 + v6);
  v9 = sub_1DC401030();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    sub_1DC092F50(0, &qword_1EDB28DC0, (void (*)(uint64_t))MEMORY[0x1E0DAF040]);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  v15 = v5[6];
  v16 = (_BYTE *)(a1 + v15);
  v17 = (_BYTE *)(a2 + v15);
  v18 = (int *)type metadata accessor for StockSparklineViewModel(0);
  v19 = *((_QWORD *)v18 - 1);
  v20 = *(uint64_t (**)(_BYTE *, uint64_t, int *))(v19 + 48);
  v21 = v20(v16, 1, v18);
  v22 = v20(v17, 1, v18);
  if (v21)
  {
    if (v22)
      goto LABEL_12;
    v24 = sub_1DC408614();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v16, v17, v24);
    v25 = v18[5];
    v26 = &v16[v25];
    v27 = &v17[v25];
    v28 = *(_QWORD *)v27;
    v26[8] = v27[8];
    *(_QWORD *)v26 = v28;
    v29 = v18[6];
    v30 = &v16[v29];
    v31 = &v17[v29];
    LOBYTE(v28) = v31[8];
    *(_QWORD *)v30 = *(_QWORD *)v31;
    v30[8] = v28;
    v16[v18[7]] = v17[v18[7]];
    v32 = v18[8];
    v33 = &v16[v32];
    v34 = &v17[v32];
    v35 = sub_1DC400F7C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v19 + 56))(v16, 0, 1, v18);
  }
  else
  {
    if (v22)
    {
      sub_1DC0926D8((uint64_t)v16, type metadata accessor for StockSparklineViewModel);
LABEL_12:
      sub_1DC092F50(0, &qword_1EDB353E0, (void (*)(uint64_t))type metadata accessor for StockSparklineViewModel);
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
      goto LABEL_16;
    }
    v36 = sub_1DC408614();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v36 - 8) + 24))(v16, v17, v36);
    v37 = v18[5];
    v38 = &v16[v37];
    v39 = &v17[v37];
    v40 = *(_QWORD *)v39;
    v38[8] = v39[8];
    *(_QWORD *)v38 = v40;
    v41 = v18[6];
    v42 = &v16[v41];
    v43 = &v17[v41];
    LOBYTE(v40) = v43[8];
    *(_QWORD *)v42 = *(_QWORD *)v43;
    v42[8] = v40;
    v16[v18[7]] = v17[v18[7]];
    v44 = v18[8];
    v45 = &v16[v44];
    v46 = &v17[v44];
    v47 = sub_1DC400F7C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 24))(v45, v46, v47);
  }
LABEL_16:
  v48 = v5[7];
  v49 = a1 + v48;
  v50 = a2 + v48;
  v51 = *(_QWORD *)(a2 + v48);
  *(_BYTE *)(v49 + 8) = *(_BYTE *)(v50 + 8);
  *(_QWORD *)v49 = v51;
  v52 = *(_QWORD *)(v50 + 16);
  *(_BYTE *)(v49 + 24) = *(_BYTE *)(v50 + 24);
  *(_QWORD *)(v49 + 16) = v52;
  v53 = *(_QWORD *)(v50 + 32);
  *(_BYTE *)(v49 + 40) = *(_BYTE *)(v50 + 40);
  *(_QWORD *)(v49 + 32) = v53;
  *(_QWORD *)(v49 + 48) = *(_QWORD *)(v50 + 48);
  *(_QWORD *)(v49 + 56) = *(_QWORD *)(v50 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v49 + 64) = *(_QWORD *)(v50 + 64);
  *(_QWORD *)(v49 + 72) = *(_QWORD *)(v50 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v49 + 80) = *(_BYTE *)(v50 + 80);
  v54 = type metadata accessor for PriceViewModel();
  v55 = *(int *)(v54 + 40);
  v56 = v49 + v55;
  v57 = v50 + v55;
  v58 = sub_1DC4011C8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 24))(v56, v57, v58);
  v59 = *(int *)(v54 + 44);
  v60 = v49 + v59;
  v61 = v50 + v59;
  v62 = sub_1DC400118();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 24))(v60, v61, v62);
  v63 = v5[8];
  v64 = a1 + v63;
  v65 = a2 + v63;
  v66 = sub_1DC4008EC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 24))(v64, v65, v66);
  *(_BYTE *)(a1 + v5[9]) = *(_BYTE *)(a2 + v5[9]);
  sub_1DC2B3B68();
  v68 = v67;
  v69 = *(int *)(v67 + 48);
  v70 = (void *)(a1 + v69);
  v71 = (void *)(a2 + v69);
  v72 = sub_1DC40124C();
  v73 = *(_QWORD *)(v72 - 8);
  v74 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v73 + 48);
  LODWORD(v49) = v74(v70, 1, v72);
  v75 = v74(v71, 1, v72);
  if (!(_DWORD)v49)
  {
    if (!v75)
    {
      (*(void (**)(void *, void *, uint64_t))(v73 + 24))(v70, v71, v72);
      goto LABEL_22;
    }
    (*(void (**)(void *, uint64_t))(v73 + 8))(v70, v72);
    goto LABEL_21;
  }
  if (v75)
  {
LABEL_21:
    sub_1DC092F50(0, &qword_1EDB28E40, (void (*)(uint64_t))MEMORY[0x1E0DAF270]);
    memcpy(v70, v71, *(_QWORD *)(*(_QWORD *)(v76 - 8) + 64));
    goto LABEL_22;
  }
  (*(void (**)(void *, void *, uint64_t))(v73 + 16))(v70, v71, v72);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v73 + 56))(v70, 0, 1, v72);
LABEL_22:
  v77 = *(int *)(v68 + 64);
  v78 = (_QWORD *)(a1 + v77);
  v79 = (_QWORD *)(a2 + v77);
  *v78 = *v79;
  v78[1] = v79[1];
  v78[2] = v79[2];
  v78[3] = v79[3];
  v78[4] = v79[4];
  v78[5] = v79[5];
  v78[6] = v79[6];
  v78[7] = v79[7];
  v78[8] = v79[8];
  v78[9] = v79[9];
  v78[10] = v79[10];
  v78[11] = v79[11];
  v78[12] = v79[12];
  v78[13] = v79[13];
  v78[14] = v79[14];
  v78[15] = v79[15];
  v78[16] = v79[16];
  v78[17] = v79[17];
  v78[18] = v79[18];
  v78[19] = v79[19];
  v78[20] = v79[20];
  v78[21] = v79[21];
  v78[22] = v79[22];
  v78[23] = v79[23];
  v78[24] = v79[24];
  v78[25] = v79[25];
  v78[26] = v79[26];
  v78[27] = v79[27];
  v78[28] = v79[28];
  return a1;
}

uint64_t sub_1DC2B4814(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  int *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  const void *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;

  v4 = sub_1DC4010E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  v5 = (int *)type metadata accessor for StockViewModel();
  v6 = v5[5];
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = sub_1DC401030();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    sub_1DC092F50(0, &qword_1EDB28DC0, (void (*)(uint64_t))MEMORY[0x1E0DAF040]);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v12 = v5[6];
  v13 = (char *)(a1 + v12);
  v14 = (char *)(a2 + v12);
  v15 = (int *)type metadata accessor for StockSparklineViewModel(0);
  v16 = *((_QWORD *)v15 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v16 + 48))(v14, 1, v15))
  {
    sub_1DC092F50(0, &qword_1EDB353E0, (void (*)(uint64_t))type metadata accessor for StockSparklineViewModel);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    v18 = sub_1DC408614();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v13, v14, v18);
    v19 = v15[5];
    v20 = &v13[v19];
    v21 = &v14[v19];
    *(_QWORD *)v20 = *(_QWORD *)v21;
    v20[8] = v21[8];
    v22 = v15[6];
    v23 = &v13[v22];
    v24 = &v14[v22];
    *(_QWORD *)v23 = *(_QWORD *)v24;
    v23[8] = v24[8];
    v13[v15[7]] = v14[v15[7]];
    v25 = v15[8];
    v26 = &v13[v25];
    v27 = &v14[v25];
    v28 = sub_1DC400F7C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 32))(v26, v27, v28);
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v16 + 56))(v13, 0, 1, v15);
  }
  v29 = v5[7];
  v30 = a1 + v29;
  v31 = a2 + v29;
  *(_QWORD *)v30 = *(_QWORD *)(a2 + v29);
  *(_BYTE *)(v30 + 8) = *(_BYTE *)(a2 + v29 + 8);
  *(_QWORD *)(v30 + 16) = *(_QWORD *)(a2 + v29 + 16);
  *(_BYTE *)(v30 + 24) = *(_BYTE *)(a2 + v29 + 24);
  *(_QWORD *)(v30 + 32) = *(_QWORD *)(a2 + v29 + 32);
  *(_BYTE *)(v30 + 40) = *(_BYTE *)(a2 + v29 + 40);
  v32 = *(_OWORD *)(a2 + v29 + 64);
  *(_OWORD *)(v30 + 48) = *(_OWORD *)(a2 + v29 + 48);
  *(_OWORD *)(v30 + 64) = v32;
  *(_BYTE *)(v30 + 80) = *(_BYTE *)(a2 + v29 + 80);
  v33 = type metadata accessor for PriceViewModel();
  v34 = *(int *)(v33 + 40);
  v35 = v30 + v34;
  v36 = v31 + v34;
  v37 = sub_1DC4011C8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 32))(v35, v36, v37);
  v38 = *(int *)(v33 + 44);
  v39 = v30 + v38;
  v40 = v31 + v38;
  v41 = sub_1DC400118();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 32))(v39, v40, v41);
  v42 = v5[8];
  v43 = a1 + v42;
  v44 = a2 + v42;
  v45 = sub_1DC4008EC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 32))(v43, v44, v45);
  *(_BYTE *)(a1 + v5[9]) = *(_BYTE *)(a2 + v5[9]);
  sub_1DC2B3B68();
  v47 = v46;
  v48 = *(int *)(v46 + 48);
  v49 = (void *)(a1 + v48);
  v50 = (const void *)(a2 + v48);
  v51 = sub_1DC40124C();
  v52 = *(_QWORD *)(v51 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v52 + 48))(v50, 1, v51))
  {
    sub_1DC092F50(0, &qword_1EDB28E40, (void (*)(uint64_t))MEMORY[0x1E0DAF270]);
    memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v52 + 32))(v49, v50, v51);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v52 + 56))(v49, 0, 1, v51);
  }
  v54 = *(int *)(v47 + 64);
  v55 = a1 + v54;
  v56 = a2 + v54;
  v57 = *(_OWORD *)(v56 + 208);
  *(_OWORD *)(v55 + 192) = *(_OWORD *)(v56 + 192);
  *(_OWORD *)(v55 + 208) = v57;
  *(_QWORD *)(v55 + 224) = *(_QWORD *)(v56 + 224);
  v58 = *(_OWORD *)(v56 + 144);
  *(_OWORD *)(v55 + 128) = *(_OWORD *)(v56 + 128);
  *(_OWORD *)(v55 + 144) = v58;
  v59 = *(_OWORD *)(v56 + 176);
  *(_OWORD *)(v55 + 160) = *(_OWORD *)(v56 + 160);
  *(_OWORD *)(v55 + 176) = v59;
  v60 = *(_OWORD *)(v56 + 80);
  *(_OWORD *)(v55 + 64) = *(_OWORD *)(v56 + 64);
  *(_OWORD *)(v55 + 80) = v60;
  v61 = *(_OWORD *)(v56 + 112);
  *(_OWORD *)(v55 + 96) = *(_OWORD *)(v56 + 96);
  *(_OWORD *)(v55 + 112) = v61;
  v62 = *(_OWORD *)(v56 + 16);
  *(_OWORD *)v55 = *(_OWORD *)v56;
  *(_OWORD *)(v55 + 16) = v62;
  v63 = *(_OWORD *)(v56 + 48);
  *(_OWORD *)(v55 + 32) = *(_OWORD *)(v56 + 32);
  *(_OWORD *)(v55 + 48) = v63;
  return a1;
}

uint64_t sub_1DC2B4BE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  _BYTE *v17;
  int *v18;
  uint64_t v19;
  uint64_t (*v20)(_BYTE *, uint64_t, int *);
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  void *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t (*v71)(void *, uint64_t, uint64_t);
  int v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;

  v4 = sub_1DC4010E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  v5 = (int *)type metadata accessor for StockViewModel();
  v6 = v5[5];
  v7 = (void *)(a1 + v6);
  v8 = (void *)(a2 + v6);
  v9 = sub_1DC401030();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 32))(v7, v8, v9);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    sub_1DC092F50(0, &qword_1EDB28DC0, (void (*)(uint64_t))MEMORY[0x1E0DAF040]);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 40))(v7, v8, v9);
LABEL_7:
  v15 = v5[6];
  v16 = (_BYTE *)(a1 + v15);
  v17 = (_BYTE *)(a2 + v15);
  v18 = (int *)type metadata accessor for StockSparklineViewModel(0);
  v19 = *((_QWORD *)v18 - 1);
  v20 = *(uint64_t (**)(_BYTE *, uint64_t, int *))(v19 + 48);
  v21 = v20(v16, 1, v18);
  v22 = v20(v17, 1, v18);
  if (v21)
  {
    if (v22)
      goto LABEL_12;
    v24 = sub_1DC408614();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v16, v17, v24);
    v25 = v18[5];
    v26 = &v16[v25];
    v27 = &v17[v25];
    *(_QWORD *)v26 = *(_QWORD *)v27;
    v26[8] = v27[8];
    v28 = v18[6];
    v29 = &v16[v28];
    v30 = &v17[v28];
    *(_QWORD *)v29 = *(_QWORD *)v30;
    v29[8] = v30[8];
    v16[v18[7]] = v17[v18[7]];
    v31 = v18[8];
    v32 = &v16[v31];
    v33 = &v17[v31];
    v34 = sub_1DC400F7C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v32, v33, v34);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v19 + 56))(v16, 0, 1, v18);
  }
  else
  {
    if (v22)
    {
      sub_1DC0926D8((uint64_t)v16, type metadata accessor for StockSparklineViewModel);
LABEL_12:
      sub_1DC092F50(0, &qword_1EDB353E0, (void (*)(uint64_t))type metadata accessor for StockSparklineViewModel);
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
      goto LABEL_16;
    }
    v35 = sub_1DC408614();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v35 - 8) + 40))(v16, v17, v35);
    v36 = v18[5];
    v37 = &v16[v36];
    v38 = &v17[v36];
    *(_QWORD *)v37 = *(_QWORD *)v38;
    v37[8] = v38[8];
    v39 = v18[6];
    v40 = &v16[v39];
    v41 = &v17[v39];
    *(_QWORD *)v40 = *(_QWORD *)v41;
    v40[8] = v41[8];
    v16[v18[7]] = v17[v18[7]];
    v42 = v18[8];
    v43 = &v16[v42];
    v44 = &v17[v42];
    v45 = sub_1DC400F7C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 40))(v43, v44, v45);
  }
LABEL_16:
  v46 = v5[7];
  v47 = a1 + v46;
  v48 = a2 + v46;
  *(_QWORD *)v47 = *(_QWORD *)(a2 + v46);
  *(_BYTE *)(v47 + 8) = *(_BYTE *)(a2 + v46 + 8);
  *(_QWORD *)(v47 + 16) = *(_QWORD *)(a2 + v46 + 16);
  *(_BYTE *)(v47 + 24) = *(_BYTE *)(a2 + v46 + 24);
  *(_QWORD *)(v47 + 32) = *(_QWORD *)(a2 + v46 + 32);
  *(_BYTE *)(v47 + 40) = *(_BYTE *)(a2 + v46 + 40);
  v49 = *(_QWORD *)(a2 + v46 + 56);
  *(_QWORD *)(v47 + 48) = *(_QWORD *)(a2 + v46 + 48);
  *(_QWORD *)(v47 + 56) = v49;
  swift_bridgeObjectRelease();
  v50 = *(_QWORD *)(v48 + 72);
  *(_QWORD *)(v47 + 64) = *(_QWORD *)(v48 + 64);
  *(_QWORD *)(v47 + 72) = v50;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v47 + 80) = *(_BYTE *)(v48 + 80);
  v51 = type metadata accessor for PriceViewModel();
  v52 = *(int *)(v51 + 40);
  v53 = v47 + v52;
  v54 = v48 + v52;
  v55 = sub_1DC4011C8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 40))(v53, v54, v55);
  v56 = *(int *)(v51 + 44);
  v57 = v47 + v56;
  v58 = v48 + v56;
  v59 = sub_1DC400118();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 40))(v57, v58, v59);
  v60 = v5[8];
  v61 = a1 + v60;
  v62 = a2 + v60;
  v63 = sub_1DC4008EC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v63 - 8) + 40))(v61, v62, v63);
  *(_BYTE *)(a1 + v5[9]) = *(_BYTE *)(a2 + v5[9]);
  sub_1DC2B3B68();
  v65 = v64;
  v66 = *(int *)(v64 + 48);
  v67 = (void *)(a1 + v66);
  v68 = (void *)(a2 + v66);
  v69 = sub_1DC40124C();
  v70 = *(_QWORD *)(v69 - 8);
  v71 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v70 + 48);
  LODWORD(v47) = v71(v67, 1, v69);
  v72 = v71(v68, 1, v69);
  if (!(_DWORD)v47)
  {
    if (!v72)
    {
      (*(void (**)(void *, void *, uint64_t))(v70 + 40))(v67, v68, v69);
      goto LABEL_22;
    }
    (*(void (**)(void *, uint64_t))(v70 + 8))(v67, v69);
    goto LABEL_21;
  }
  if (v72)
  {
LABEL_21:
    sub_1DC092F50(0, &qword_1EDB28E40, (void (*)(uint64_t))MEMORY[0x1E0DAF270]);
    memcpy(v67, v68, *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64));
    goto LABEL_22;
  }
  (*(void (**)(void *, void *, uint64_t))(v70 + 32))(v67, v68, v69);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v70 + 56))(v67, 0, 1, v69);
LABEL_22:
  v74 = *(int *)(v65 + 64);
  v75 = a1 + v74;
  v76 = a2 + v74;
  v77 = *(_OWORD *)(v76 + 16);
  *(_OWORD *)v75 = *(_OWORD *)v76;
  *(_OWORD *)(v75 + 16) = v77;
  v78 = *(_OWORD *)(v76 + 48);
  *(_OWORD *)(v75 + 32) = *(_OWORD *)(v76 + 32);
  *(_OWORD *)(v75 + 48) = v78;
  v79 = *(_OWORD *)(v76 + 80);
  *(_OWORD *)(v75 + 64) = *(_OWORD *)(v76 + 64);
  *(_OWORD *)(v75 + 80) = v79;
  v80 = *(_OWORD *)(v76 + 112);
  *(_OWORD *)(v75 + 96) = *(_OWORD *)(v76 + 96);
  *(_OWORD *)(v75 + 112) = v80;
  v81 = *(_OWORD *)(v76 + 144);
  *(_OWORD *)(v75 + 128) = *(_OWORD *)(v76 + 128);
  *(_OWORD *)(v75 + 144) = v81;
  v82 = *(_OWORD *)(v76 + 176);
  *(_OWORD *)(v75 + 160) = *(_OWORD *)(v76 + 160);
  *(_OWORD *)(v75 + 176) = v82;
  v83 = *(_OWORD *)(v76 + 208);
  *(_OWORD *)(v75 + 192) = *(_OWORD *)(v76 + 192);
  *(_OWORD *)(v75 + 208) = v83;
  *(_QWORD *)(v75 + 224) = *(_QWORD *)(v76 + 224);
  return a1;
}

uint64_t sub_1DC2B513C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1DC2B3B68();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_1DC2B5178(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  sub_1DC2B3B68();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, a2, a3, v6);
}

double sub_1DC2B51C4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  double v5;
  uint64_t v7;

  MEMORY[0x1E0C80A78](a1);
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC2B5304(v1, (uint64_t)v3);
  sub_1DC2B3B68();
  v5 = *(double *)&v3[*(int *)(v4 + 64)];
  sub_1DC191D3C((uint64_t)&v3[*(int *)(v4 + 48)]);
  sub_1DC0926D8((uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for StockViewModel);
  return v5;
}

double sub_1DC2B5270(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  double v5;
  uint64_t v7;

  MEMORY[0x1E0C80A78](a1);
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC2B5304(v1, (uint64_t)v3);
  sub_1DC2B3B68();
  v5 = *(double *)&v3[*(int *)(v4 + 64) + 32];
  sub_1DC191D3C((uint64_t)&v3[*(int *)(v4 + 48)]);
  sub_1DC0926D8((uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for StockViewModel);
  return v5;
}

uint64_t sub_1DC2B5304(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for StockSearchLayoutModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC2B5348()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  char *v6;
  int v7;
  uint64_t v8;
  uint64_t v10;

  v1 = v0;
  v2 = sub_1DC403B14();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v3 + 16))(v6, v1, v2, v4);
  v7 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v6, v2);
  v8 = 0;
  if (v7 != *MEMORY[0x1E0DADF70])
  {
    if (v7 == *MEMORY[0x1E0DADF60])
    {
      return 23;
    }
    else if (v7 == *MEMORY[0x1E0DADF48])
    {
      return 26;
    }
    else
    {
      if (v7 != *MEMORY[0x1E0DADF58])
      {
        if (v7 == *MEMORY[0x1E0DADF78])
          return 18;
        if (v7 == *MEMORY[0x1E0DADF68])
          return 19;
        if (v7 != *MEMORY[0x1E0DADF50])
          (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
      }
      return 0;
    }
  }
  return v8;
}

uint64_t storeEnumTagSinglePayload for TickerVisibilityState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1DC2B54E4 + 4 * byte_1DC422C05[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1DC2B5518 + 4 * byte_1DC422C00[v4]))();
}

uint64_t sub_1DC2B5518(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC2B5520(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC2B5528);
  return result;
}

uint64_t sub_1DC2B5534(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC2B553CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1DC2B5540(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC2B5548(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TickerVisibilityState()
{
  return &type metadata for TickerVisibilityState;
}

unint64_t sub_1DC2B5568()
{
  unint64_t result;

  result = qword_1F0350F60;
  if (!qword_1F0350F60)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC422C68, &type metadata for TickerVisibilityState);
    atomic_store(result, (unint64_t *)&qword_1F0350F60);
  }
  return result;
}

uint64_t sub_1DC2B55AC(CGRect *a1, CGRect *a2)
{
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  CGFloat v6;
  CGFloat v7;
  CGFloat v8;
  CGFloat v9;
  CGRect v11;
  CGRect v12;

  x = a1[1].origin.x;
  y = a1[1].origin.y;
  width = a1[1].size.width;
  height = a1[1].size.height;
  v6 = a2[1].origin.x;
  v7 = a2[1].origin.y;
  v8 = a2[1].size.width;
  v9 = a2[1].size.height;
  if (!CGRectEqualToRect(*a1, *a2))
    return 0;
  v11.origin.x = x;
  v11.origin.y = y;
  v11.size.width = width;
  v11.size.height = height;
  v12.origin.x = v6;
  v12.origin.y = v7;
  v12.size.width = v8;
  v12.size.height = v9;
  if (!CGRectEqualToRect(v11, v12))
    return 0;
  sub_1DC17C78C();
  return sub_1DC4093C4() & 1;
}

uint64_t sub_1DC2B5664()
{
  sub_1DC1145D0();
  return sub_1DC40625C();
}

_QWORD *assignWithCopy for StockListSectionHeaderViewLayoutAttributes(_QWORD *a1, _QWORD *a2)
{
  void *v3;
  void *v4;
  id v5;

  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  a1[7] = a2[7];
  v3 = (void *)a2[8];
  v4 = (void *)a1[8];
  a1[8] = v3;
  v5 = v3;

  return a1;
}

uint64_t assignWithTake for StockListSectionHeaderViewLayoutAttributes(uint64_t a1, uint64_t a2)
{
  __int128 v3;
  __int128 v4;
  void *v5;

  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  v5 = *(void **)(a1 + 64);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);

  return a1;
}

uint64_t getEnumTagSinglePayload for StockListSectionHeaderViewLayoutAttributes(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 72))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 64);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for StockListSectionHeaderViewLayoutAttributes(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 72) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 64) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 72) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for StockListSectionHeaderViewLayoutAttributes()
{
  return &type metadata for StockListSectionHeaderViewLayoutAttributes;
}

uint64_t sub_1DC2B57E8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;

  __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + qword_1F034E068), *(_QWORD *)(v1 + qword_1F034E068 + 24));
  switch(sub_1DC4077C8())
  {
    case 0:
      sub_1DC1C0608();
      v19 = v21;
      v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56);
      v17 = a1;
      v18 = 1;
      goto LABEL_19;
    case 1:
      sub_1DC1C0608();
      v4 = v13;
      v5 = a1 + *(int *)(v13 + 48);
      if (qword_1EDB41368 != -1)
        swift_once();
      v6 = sub_1DC407EAC();
      v14 = __swift_project_value_buffer(v6, (uint64_t)qword_1EDB5E178);
      v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
      v8(a1, v14, v6);
      if (qword_1EDB41378 != -1)
        swift_once();
      v9 = qword_1EDB5E1D8;
      goto LABEL_18;
    case 3:
      sub_1DC408FC8();
      sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FC00);
      v10 = (void *)sub_1DC409580();
      sub_1DC403F28();

      goto LABEL_8;
    case 4:
    case 5:
      sub_1DC1C0608();
      v4 = v3;
      v5 = a1 + *(int *)(v3 + 48);
      if (qword_1F034B0C8 != -1)
        swift_once();
      v6 = sub_1DC407EAC();
      v7 = __swift_project_value_buffer(v6, (uint64_t)qword_1F0368B60);
      v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
      v8(a1, v7, v6);
      if (qword_1F034B0E8 != -1)
        swift_once();
      v9 = qword_1F0368BA8;
      goto LABEL_18;
    case 6:
LABEL_8:
      sub_1DC1C0608();
      v4 = v11;
      v5 = a1 + *(int *)(v11 + 48);
      if (qword_1F034B0D0 != -1)
        swift_once();
      v6 = sub_1DC407EAC();
      v12 = __swift_project_value_buffer(v6, (uint64_t)qword_1F0368B78);
      v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
      v8(a1, v12, v6);
      if (qword_1F034B0F0 != -1)
        swift_once();
      v9 = qword_1F0368BC0;
LABEL_18:
      v15 = __swift_project_value_buffer(v6, (uint64_t)v9);
      v8(v5, v15, v6);
      v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56);
      v17 = a1;
      v18 = 0;
      v19 = v4;
LABEL_19:
      result = v16(v17, v18, 1, v19);
      break;
    default:
      result = sub_1DC409838();
      __break(1u);
      break;
  }
  return result;
}

uint64_t sub_1DC2B5B3C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;

  __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + qword_1F034E068), *(_QWORD *)(v1 + qword_1F034E068 + 24));
  switch(sub_1DC4077C8())
  {
    case 0:
      sub_1DC1C0608();
      v19 = v21;
      v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56);
      v17 = a1;
      v18 = 1;
      goto LABEL_19;
    case 1:
      sub_1DC1C0608();
      v4 = v13;
      v5 = a1 + *(int *)(v13 + 48);
      if (qword_1EDB41388 != -1)
        swift_once();
      v6 = sub_1DC407EAC();
      v14 = __swift_project_value_buffer(v6, (uint64_t)qword_1EDB5E190);
      v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
      v8(a1, v14, v6);
      if (qword_1EDB41398 != -1)
        swift_once();
      v9 = qword_1EDB5E1F0;
      goto LABEL_18;
    case 3:
      sub_1DC408FC8();
      sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FC00);
      v10 = (void *)sub_1DC409580();
      sub_1DC403F28();

      goto LABEL_8;
    case 4:
    case 5:
      sub_1DC1C0608();
      v4 = v3;
      v5 = a1 + *(int *)(v3 + 48);
      if (qword_1F034B078 != -1)
        swift_once();
      v6 = sub_1DC407EAC();
      v7 = __swift_project_value_buffer(v6, (uint64_t)qword_1F0368AC0);
      v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
      v8(a1, v7, v6);
      if (qword_1F034B088 != -1)
        swift_once();
      v9 = qword_1F0368AF0;
      goto LABEL_18;
    case 6:
LABEL_8:
      sub_1DC1C0608();
      v4 = v11;
      v5 = a1 + *(int *)(v11 + 48);
      if (qword_1F034B080 != -1)
        swift_once();
      v6 = sub_1DC407EAC();
      v12 = __swift_project_value_buffer(v6, (uint64_t)qword_1F0368AD8);
      v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
      v8(a1, v12, v6);
      if (qword_1F034B090 != -1)
        swift_once();
      v9 = qword_1F0368B08;
LABEL_18:
      v15 = __swift_project_value_buffer(v6, (uint64_t)v9);
      v8(v5, v15, v6);
      v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56);
      v17 = a1;
      v18 = 0;
      v19 = v4;
LABEL_19:
      result = v16(v17, v18, 1, v19);
      break;
    default:
      result = sub_1DC409838();
      __break(1u);
      break;
  }
  return result;
}

uint64_t sub_1DC2B5E90(uint64_t a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5)
{
  char v6;

  v6 = *a3;
  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD, char *, uint64_t))(a5 + 72))(a1, a2, 0, &v6, a4);
}

uint64_t *sub_1DC2B5EC8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v1 = v0;
  v2 = *v0;
  v3 = (uint64_t *)((char *)v0 + *(_QWORD *)(*v0 + 136));
  v4 = v3[3];
  v5 = v3[4];
  __swift_project_boxed_opaque_existential_1(v3, v4);
  (*(void (**)(uint64_t *, _UNKNOWN **, uint64_t, uint64_t))(v5 + 24))(v0, &off_1EA45FF38, v4, v5);
  sub_1DC148A20((uint64_t)(v0 + 2));
  swift_release();
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v2 + 80) - 8) + 8))((uint64_t)v1 + *(_QWORD *)(*v1 + 112));
  swift_release();
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
  swift_release();
  swift_unknownObjectRelease();

  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v1 + *(_QWORD *)(*v1 + 200));
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1DC2B6038()
{
  sub_1DC2B5EC8();
  return swift_deallocClassInstance();
}

uint64_t sub_1DC2B605C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t (*v8)(void);

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(a4 + 64))(a1, a3, a4);
    v8 = MEMORY[0x1E0DB8020];
    sub_1DC0FE574(0, (unint64_t *)&qword_1EDB29E20, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB8020]);
    sub_1DC10297C(&qword_1EDB29E18, (unint64_t *)&qword_1EDB29E20, (uint64_t (*)(uint64_t, _QWORD *))v8, MEMORY[0x1E0DB8030]);
    sub_1DC4049E4();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1DC2B6154(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t (*v15)(void);
  char *v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t);
  _QWORD v19[5];

  v7 = sub_1DC29FEA4();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1DC0990BC(a1, (uint64_t)v9, (uint64_t (*)(_QWORD))sub_1DC29FEA4);
    sub_1DC1C0608();
    v12 = v11;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v9, 1, v11) == 1)
    {
      v19[4] = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 80))(a3, a4);
      v13 = swift_allocObject();
      swift_beginAccess();
      swift_weakLoadStrong();
      swift_weakInit();
      swift_release();
      v14 = (_QWORD *)swift_allocObject();
      v14[2] = a3;
      v14[3] = a4;
      v14[4] = v13;
      v15 = MEMORY[0x1E0DB8020];
      sub_1DC0FE574(0, (unint64_t *)&qword_1EDB29E20, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB8020]);
      sub_1DC10297C(&qword_1EDB29E18, (unint64_t *)&qword_1EDB29E20, (uint64_t (*)(uint64_t, _QWORD *))v15, MEMORY[0x1E0DB8030]);
      swift_retain();
      sub_1DC4049E4();
      swift_release();
      swift_release();
      swift_release();
      return swift_release();
    }
    else
    {
      swift_release();
      v16 = &v9[*(int *)(v12 + 48)];
      v17 = sub_1DC407EAC();
      v18 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v17 - 8) + 8);
      v18(v16, v17);
      return ((uint64_t (*)(char *, uint64_t))v18)(v9, v17);
    }
  }
  return result;
}

uint64_t sub_1DC2B6398(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = sub_1DC405578();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v7 = result;
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
    if ((*(unsigned int (**)(char *, uint64_t))(v3 + 88))(v5, v2) == *MEMORY[0x1E0DB9A50])
    {
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      v8 = MEMORY[0x1DF0CAD78](v7 + 16);
      if (v8)
      {
        v9 = MEMORY[0x1DF0CAD78](v8 + 16);
        if (v9)
        {
          *(_QWORD *)(swift_allocObject() + 16) = v9;
          swift_retain();
          swift_unknownObjectRetain();
          sub_1DC402E3C();
          swift_release_n();
          swift_unknownObjectRelease();
          swift_unknownObjectRelease();
          return swift_release();
        }
        else
        {
          swift_release();
          return swift_unknownObjectRelease();
        }
      }
      else
      {
        return swift_release();
      }
    }
    else
    {
      swift_release();
      return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    }
  }
  return result;
}

uint64_t sub_1DC2B6534()
{
  uint64_t v0;
  uint64_t (*v1)(void);

  (*(void (**)(_QWORD))(*(_QWORD *)(*(_QWORD *)v0 + 88) + 48))(*(_QWORD *)(*(_QWORD *)v0 + 80));
  v1 = MEMORY[0x1E0DB8020];
  sub_1DC0FE574(0, (unint64_t *)&qword_1EDB29E20, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB8020]);
  sub_1DC10297C(&qword_1EDB29E18, (unint64_t *)&qword_1EDB29E20, (uint64_t (*)(uint64_t, _QWORD *))v1, MEMORY[0x1E0DB8030]);
  sub_1DC4049E4();
  return swift_release();
}

uint64_t sub_1DC2B65EC(void *a1, _QWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  void (*v30)(char *, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v37;
  _QWORD *v38;
  id v39;
  uint64_t (*v40)(void);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v51 = a5;
  v9 = a2;
  v11 = *a2;
  v12 = sub_1DC407EAC();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1DC29FEA4();
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v45 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a3)
  {
    v47 = a4;
    v48 = 0;
    v49 = a1;
    v50 = a6;
    sub_1DC2B5B3C((uint64_t)&v45 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
    sub_1DC1C0608();
    v20 = v19;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 48))(v18, 1, v19) == 1)
    {
      v21 = MEMORY[0x1DF0CAD78](v9 + 2);
      a1 = v49;
      a6 = v50;
      a3 = v48;
      if (v21)
      {
        v22 = v21;
        v23 = v9;
        if (qword_1F034B070 != -1)
          swift_once();
        v24 = __swift_project_value_buffer(v12, (uint64_t)qword_1F0368AA8);
        type metadata accessor for ForYouFeedInteractor(0, *(_QWORD *)(v11 + 80), *(_QWORD *)(v11 + 88), v25);
        sub_1DC3A4A94(v24, v22);
        swift_unknownObjectRelease();
        a1 = v49;
        a6 = v50;
        a3 = v48;
        v9 = v23;
      }
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v18, v12);
      v46 = v9;
      v26 = MEMORY[0x1DF0CAD78](v9 + 2);
      if (v26)
      {
        v28 = v26;
        type metadata accessor for ForYouFeedInteractor(0, *(_QWORD *)(v11 + 80), *(_QWORD *)(v11 + 88), v27);
        sub_1DC3A4A94((uint64_t)v15, v28);
        swift_unknownObjectRelease();
      }
      v29 = &v18[*(int *)(v20 + 48)];
      v30 = *(void (**)(char *, uint64_t))(v13 + 8);
      v30(v15, v12);
      v30(v29, v12);
      a1 = v49;
      a6 = v50;
      a3 = v48;
      v9 = v46;
    }
  }
  sub_1DC0FF574(0);
  v31 = sub_1DC404324();
  v33 = v32;
  v35 = *(_QWORD *)(v11 + 80);
  v34 = *(_QWORD *)(v11 + 88);
  v36 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v34 + 96);
  swift_retain();
  v50 = v35;
  v37 = v36(v31, v33, a3, v35, v34);
  swift_release();
  swift_bridgeObjectRelease();
  v52 = v37;
  v38 = (_QWORD *)swift_allocObject();
  v38[2] = v51;
  v38[3] = a6;
  v38[4] = a1;
  swift_retain();
  v39 = a1;
  v40 = MEMORY[0x1E0DB8020];
  sub_1DC0FE574(0, (unint64_t *)&qword_1EDB29E20, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB8020]);
  sub_1DC10297C(&qword_1EDB29E18, (unint64_t *)&qword_1EDB29E20, (uint64_t (*)(uint64_t, _QWORD *))v40, MEMORY[0x1E0DB8030]);
  sub_1DC4049E4();
  swift_release();
  v41 = MEMORY[0x1DF0CAD78](v9 + 2);
  if (!v41)
    return swift_release();
  v43 = v41;
  type metadata accessor for ForYouFeedInteractor(0, v50, v34, v42);
  sub_1DC3A4B90(v43);
  swift_release();
  return swift_unknownObjectRelease();
}

void sub_1DC2B6970()
{
  unint64_t v0;
  id v1;

  v0 = sub_1DC404FFC();
  if (!(v0 >> 62))
  {
    sub_1DC2B95BC((id)v0);
    goto LABEL_5;
  }
  if (v0 >> 62 == 1)
  {
LABEL_5:
    sub_1DC402E0C();
    sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3F8D0);
    v1 = (id)sub_1DC409148();
    sub_1DC402D1C();
    swift_release();
    swift_release();

  }
}

uint64_t sub_1DC2B6A4C(uint64_t *a1, _QWORD *a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(void);
  _QWORD v16[2];
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v4 = (_QWORD *)*a2;
  v18 = sub_1DC40124C();
  v5 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_1DC4008EC();
  v8 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v10 = (char *)v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *a1;
  v12 = *(_QWORD *)((char *)a2 + v4[16]);
  v16[1] = (char *)a2 + v4[14];
  v17 = v11;
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v12 + OBJC_IVAR____TtC8StocksUI21ForYouFeedDataManager_watchlistManager), *(_QWORD *)(v12 + OBJC_IVAR____TtC8StocksUI21ForYouFeedDataManager_watchlistManager + 24));
  sub_1DC400A60();
  sub_1DC4011EC();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v18);
  v13 = (*(uint64_t (**)(uint64_t, char *, _QWORD))(v4[11] + 72))(v17, v10, v4[10]);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v19);
  v20 = v13;
  v14 = MEMORY[0x1E0DB8020];
  sub_1DC0FE574(0, (unint64_t *)&qword_1EDB29E20, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB8020]);
  sub_1DC10297C(&qword_1EDB29E18, (unint64_t *)&qword_1EDB29E20, (uint64_t (*)(uint64_t, _QWORD *))v14, MEMORY[0x1E0DB8030]);
  sub_1DC4049E4();
  return swift_release();
}

uint64_t sub_1DC2B6C00(uint64_t a1, uint64_t a2, int a3, unsigned __int8 *a4)
{
  _QWORD *v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  unsigned __int8 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(_QWORD);
  uint64_t v24;
  _QWORD *v25;
  _QWORD v27[2];
  uint64_t v28;
  int v29;
  unsigned __int8 v30;
  unsigned __int8 v31;

  v29 = a3;
  v27[1] = *v4;
  v28 = a1;
  sub_1DC10B21C();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC2B92A4(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for ForYouFeedRouteModel();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *a4;
  sub_1DC0FE574(0, (unint64_t *)&qword_1EDB29D00, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60]);
  v19 = v18;
  v20 = *(_QWORD *)(v18 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v9, a2, v18);
  v21 = v19;
  v22 = v28;
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v9, 0, 1, v21);
  v31 = v17;
  sub_1DC2B6E00(v22, (uint64_t)v9, v29, &v31, (uint64_t)v12);
  sub_1DC0926D8((uint64_t)v9, (uint64_t (*)(_QWORD))sub_1DC10B21C);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    v23 = (uint64_t (*)(_QWORD))sub_1DC2B92A4;
    v24 = (uint64_t)v12;
  }
  else
  {
    sub_1DC092ED0((uint64_t)v12, (uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for ForYouFeedRouteModel);
    v25 = (_QWORD *)MEMORY[0x1DF0CAD78](v4 + 2);
    if (v25)
    {
      v30 = v17;
      sub_1DC3A4C04((uint64_t)v16, v22, &v30, v25);
      swift_unknownObjectRelease();
    }
    v23 = (uint64_t (*)(_QWORD))type metadata accessor for ForYouFeedRouteModel;
    v24 = (uint64_t)v16;
  }
  return sub_1DC0926D8(v24, v23);
}

void sub_1DC2B6E00(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, unsigned __int8 *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  _QWORD v35[6];
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  int v43;
  int v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;

  v43 = a3;
  v37 = a2;
  v60 = a5;
  v53 = *v5;
  v8 = type metadata accessor for ForYouFeedSectionDescriptor();
  MEMORY[0x1E0C80A78](v8);
  v35[1] = (char *)v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC10B21C();
  MEMORY[0x1E0C80A78](v10);
  v38 = (char *)v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0FE574(0, (unint64_t *)&qword_1EDB29D00, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60]);
  v40 = v12;
  v39 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v35[2] = (char *)v35 - v13;
  v51 = type metadata accessor for StocksActivity.Article(0);
  MEMORY[0x1E0C80A78](v51);
  v49 = (char *)v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = sub_1DC40202C();
  v46 = *(_QWORD *)(v47 - 8);
  MEMORY[0x1E0C80A78](v47);
  v42 = (char *)v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v35[5] = (char *)v35 - v17;
  v36 = sub_1DC402434();
  v35[4] = *(_QWORD *)(v36 - 8);
  MEMORY[0x1E0C80A78](v36);
  v45 = (char *)v35 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_1DC3FFDD0();
  MEMORY[0x1E0C80A78](v19);
  sub_1DC133BB0(0);
  MEMORY[0x1E0C80A78](v20);
  v35[3] = (char *)v35 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v22);
  v23 = sub_1DC401BB8();
  MEMORY[0x1E0C80A78](v23);
  v48 = (char *)v35 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = sub_1DC4011BC();
  v54 = *(_QWORD *)(v57 - 8);
  MEMORY[0x1E0C80A78](v57);
  v41 = (char *)v35 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v26);
  v52 = (char *)v35 - v27;
  MEMORY[0x1E0C80A78](v28);
  v56 = (char *)v35 - v29;
  sub_1DC1449E0();
  MEMORY[0x1E0C80A78](v30);
  sub_1DC0F4CCC();
  v55 = v31;
  v58 = *(_QWORD *)(v31 - 8);
  MEMORY[0x1E0C80A78](v31);
  v59 = (char *)v35 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = type metadata accessor for ForYouFeedModel();
  MEMORY[0x1E0C80A78](v33);
  v44 = *a4;
  sub_1DC0FF574(0);
  v50 = a1;
  sub_1DC404354();
  v34 = (char *)&loc_1DC2B7254 + *((int *)qword_1DC2B7E48 + swift_getEnumCaseMultiPayload());
  __asm { BR              X10 }
}

uint64_t sub_1DC2B7264()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1DC0926D8(v0, (uint64_t (*)(_QWORD))type metadata accessor for ForYouFeedModel);
  v2 = type metadata accessor for ForYouFeedRouteModel();
  return (*(uint64_t (**)(_QWORD, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(*(_QWORD *)(v1 - 176), 1, 1, v2);
}

void sub_1DC2B7310()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  void (*v15)(_QWORD *, uint64_t, uint64_t);
  uint64_t v16;
  int v17;
  id v18;
  void (*v19)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unsigned int *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  char v54;
  uint64_t v55;
  char v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  unint64_t v62;
  id v63;

  v7 = *(_QWORD *)(v6 - 224);
  (*(void (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(v6 - 192) + 32))(*(_QWORD *)(v6 - 184), v2, v7);
  *(_QWORD *)(v6 - 416) = *(_QWORD *)(v6 - 216) + 16;
  v8 = MEMORY[0x1DF0CAD78]();
  if (v8)
  {
    sub_1DC3A48C8(v8);
    swift_unknownObjectRelease();
  }
  sub_1DC407F3C();
  v9 = sub_1DC407EAC();
  v10 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v1, 1, v9);
  sub_1DC0926D8(v1, (uint64_t (*)(_QWORD))sub_1DC1449E0);
  v11 = *(_QWORD *)(v6 - 232);
  v12 = *(_QWORD *)(v6 - 208);
  v13 = *(_QWORD **)(v6 - 248);
  if (v10 != 1)
  {
    v14 = MEMORY[0x1DF0CAD78](*(_QWORD *)(v6 - 416));
    if (v14)
    {
      sub_1DC3A4A60(*(_QWORD *)(v6 - 264), v14);
      swift_unknownObjectRelease();
    }
  }
  sub_1DC407C18();
  v15 = *(void (**)(_QWORD *, uint64_t, uint64_t))(v11 + 16);
  v16 = *(_QWORD *)(v6 - 200);
  *(_QWORD *)(v6 - 416) = v15;
  v15(v13, v12, v16);
  v17 = (*(uint64_t (**)(_QWORD *, uint64_t))(v11 + 88))(v13, v16);
  if (v17 == *MEMORY[0x1E0DAF188])
  {
    (*(void (**)(_QWORD *, uint64_t))(v11 + 96))(v13, v16);
    swift_unknownObjectRelease();
    v18 = objc_msgSend((id)sub_1DC401144(), sel_routeURL);
    swift_unknownObjectRelease();
    if (v18)
    {
      sub_1DC3FFD94();

      (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v0, v3, v5);
      v19 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56);
      v19(v0, 0, 1, v5);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v0, 1, v5) != 1)
      {
        sub_1DC0926D8(v0, (uint64_t (*)(_QWORD))sub_1DC133BB0);
        sub_1DC401144();
        v20 = *(_QWORD *)(v6 - 304);
        sub_1DC402410();
        v21 = *(_QWORD *)(v6 - 392);
        v19(v21, 1, 1, v5);
        v22 = *(_QWORD *)(v6 - 296);
        v23 = *(_QWORD *)(v6 - 376);
        v24 = *(_QWORD *)(v6 - 288);
        (*(void (**)(uint64_t, _QWORD, uint64_t))(v22 + 104))(v23, *MEMORY[0x1E0D57870], v24);
        v25 = *(_QWORD *)(v6 - 280);
        sub_1DC401B88();
        (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v23, v24);
        sub_1DC0926D8(v21, (uint64_t (*)(_QWORD))sub_1DC133BB0);
        (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v6 - 384) + 8))(v20, *(_QWORD *)(v6 - 368));
        v26 = v12;
        v27 = *(_QWORD *)(v6 - 272);
        v28 = *(_QWORD *)(v6 - 216);
        v29 = *(_QWORD *)(v6 - 240);
        goto LABEL_17;
      }
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56))(v0, 1, 1, v5);
    }
    sub_1DC0926D8(v0, (uint64_t (*)(_QWORD))sub_1DC133BB0);
    sub_1DC4021DC();
    swift_allocObject();
    v30 = sub_1DC4021D0();
    v28 = *(_QWORD *)(v6 - 216);
    v31 = *(_QWORD *)(*(_QWORD *)v28 + 192);
    *(_QWORD *)(v28 + v31) = v30;
    swift_release();
    v32 = *(_QWORD *)(v28 + *(_QWORD *)(*(_QWORD *)v28 + 120));
    swift_retain();
    sub_1DC404324();
    if (*(_QWORD *)(v28 + v31))
    {
      *(_QWORD *)(v6 - 128) = v32;
      sub_1DC2B91B0();
      v34 = v33;
      swift_allocObject();
      swift_retain();
      v35 = sub_1DC401930();
      sub_1DC404324();
      v26 = *(_QWORD *)(v6 - 208);
      sub_1DC401144();
      (*(void (**)(_QWORD, uint64_t, _QWORD))(v6 - 416))(*(_QWORD *)(v6 - 328), v26, *(_QWORD *)(v6 - 200));
      sub_1DC409A24();
      sub_1DC4023F8();
      *(_QWORD *)(v6 - 104) = v34;
      *(_QWORD *)(v6 - 96) = sub_1DC080808((unint64_t *)&unk_1EDB42C90, (uint64_t (*)(uint64_t))sub_1DC2B91B0, MEMORY[0x1E0D56BE0]);
      *(_QWORD *)(v6 - 128) = v35;
      v29 = *(_QWORD *)(v6 - 240);
      MEMORY[0x1DF0CAB8C](&unk_1DC422F70, v29);
      sub_1DC4021AC();
      swift_allocObject();
      swift_retain();
      swift_retain();
      sub_1DC4021A0();
      v36 = (unsigned int *)MEMORY[0x1E0D57858];
      v37 = *(_QWORD *)(v6 - 296);
      if ((*(_DWORD *)(v6 - 312) & 1) == 0)
        v36 = (unsigned int *)MEMORY[0x1E0D57870];
      v38 = *(_QWORD *)(v6 - 320);
      v39 = *(_QWORD *)(v6 - 288);
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v37 + 104))(v38, *v36, v39);
      v25 = *(_QWORD *)(v6 - 280);
      sub_1DC401BAC();
      swift_release();
      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v38, v39);
      v27 = *(_QWORD *)(v6 - 272);
      v13 = *(_QWORD **)(v6 - 248);
LABEL_17:
      sub_1DC0990BC(v25, v27, (uint64_t (*)(_QWORD))MEMORY[0x1E0D570B0]);
      v40 = 2 * (*(_DWORD *)(v6 - 308) != 0);
      sub_1DC0B9454();
      v42 = (char *)v13 + *(int *)(v41 + 48);
      sub_1DC1446B4();
      v44 = *(int *)(v43 + 64);
      *(_QWORD *)(v27 + *(int *)(v43 + 48)) = v40;
      v45 = (_QWORD *)(v27 + v44);
      v45[3] = v29;
      v45[4] = &off_1EA45FF68;
      *v45 = v28;
      swift_storeEnumTagMultiPayload();
      swift_retain();
      if ((sub_1DC401198() & 1) != 0)
      {
        v46 = *(_QWORD *)(v6 - 352);
        sub_1DC0990BC(*(_QWORD *)(v6 - 360), v46, (uint64_t (*)(_QWORD))sub_1DC10B21C);
        v47 = *(_QWORD *)(v6 - 344);
        v48 = *(_QWORD *)(v6 - 336);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v47 + 48))(v46, 1, v48) == 1)
        {
          sub_1DC0926D8(v25, (uint64_t (*)(_QWORD))MEMORY[0x1E0D570B0]);
          (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v6 - 232) + 8))(*(_QWORD *)(v6 - 208), *(_QWORD *)(v6 - 200));
          (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v6 - 192) + 8))(*(_QWORD *)(v6 - 184), *(_QWORD *)(v6 - 224));
          sub_1DC0926D8(v46, (uint64_t (*)(_QWORD))sub_1DC10B21C);
LABEL_30:
          v58 = *(_QWORD *)(v6 - 176);
          sub_1DC0990BC(v27, v58, type metadata accessor for StocksActivity.Article);
          v59 = type metadata accessor for ForYouFeedRouteModel();
          swift_storeEnumTagMultiPayload();
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 56))(v58, 0, 1, v59);
          sub_1DC0926D8(v27, type metadata accessor for StocksActivity.Article);
          v60 = sub_1DC400898();
          (*(void (**)(char *, uint64_t))(*(_QWORD *)(v60 - 8) + 8))(v42, v60);
          JUMPOUT(0x1DC2B72F0);
        }
        v49 = *(_QWORD *)(v6 - 400);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v47 + 32))(v49, v46, v48);
        v50 = *(_QWORD *)(v6 - 408);
        v51 = v47;
        sub_1DC4046FC();
        sub_1DC2EB300();
        v52 = v48;
        v54 = v53;
        sub_1DC0926D8(v50, (uint64_t (*)(_QWORD))type metadata accessor for ForYouFeedSectionDescriptor);
        if ((v54 & 1) != 0)
        {
          v55 = sub_1DC27AF88();
          if ((v56 & 1) == 0 && !v55)
          {
            v57 = (char *)objc_msgSend(*(id *)(*(_QWORD *)(v6 - 216) + *(_QWORD *)(**(_QWORD **)(v6 - 216) + 152)), sel_cachedSubscription);
            if (objc_getAssociatedObject(v57, v57 + 1))
            {
              sub_1DC409634();
              swift_unknownObjectRelease();
            }
            else
            {
              *(_OWORD *)(v6 - 160) = 0u;
              *(_OWORD *)(v6 - 144) = 0u;
            }
            sub_1DC092ED0(v6 - 160, v6 - 128, (uint64_t (*)(_QWORD))sub_1DC0D11C4);
            if (*(_QWORD *)(v6 - 104))
            {
              sub_1DC0821D4(0, (unint64_t *)&qword_1EDB284E0);
              if ((swift_dynamicCast() & 1) != 0)
              {
                v61 = *(void **)(v6 - 168);
                v62 = (unint64_t)objc_msgSend(v61, sel_integerValue);
                if (v62 == -1)
                  goto LABEL_45;
                goto LABEL_38;
              }
            }
            else
            {
              sub_1DC0926D8(v6 - 128, (uint64_t (*)(_QWORD))sub_1DC0D11C4);
            }
            v61 = 0;
            v62 = 0;
LABEL_38:
            if (objc_getAssociatedObject(v57, (const void *)~v62))
            {
              sub_1DC409634();
              swift_unknownObjectRelease();
            }
            else
            {
              *(_OWORD *)(v6 - 160) = 0u;
              *(_OWORD *)(v6 - 144) = 0u;
            }
            sub_1DC092ED0(v6 - 160, v6 - 128, (uint64_t (*)(_QWORD))sub_1DC0D11C4);
            if (*(_QWORD *)(v6 - 104))
            {
              sub_1DC0821D4(0, (unint64_t *)&qword_1EDB284E0);
              if ((swift_dynamicCast() & 1) != 0)
              {
                v63 = *(id *)(v6 - 168);
                objc_msgSend(v63, sel_integerValue);

                (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v6 - 344) + 8))(*(_QWORD *)(v6 - 400), *(_QWORD *)(v6 - 336));
                sub_1DC0926D8(v25, (uint64_t (*)(_QWORD))MEMORY[0x1E0D570B0]);
                (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v6 - 232) + 8))(*(_QWORD *)(v6 - 208), *(_QWORD *)(v6 - 200));
                (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v6 - 192) + 8))(*(_QWORD *)(v6 - 184), *(_QWORD *)(v6 - 224));
                goto LABEL_30;
              }
            }
            else
            {
              sub_1DC0926D8(v6 - 128, (uint64_t (*)(_QWORD))sub_1DC0D11C4);
            }
LABEL_45:

            (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v6 - 344) + 8))(*(_QWORD *)(v6 - 400), *(_QWORD *)(v6 - 336));
            sub_1DC0926D8(v25, (uint64_t (*)(_QWORD))MEMORY[0x1E0D570B0]);
            (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v6 - 232) + 8))(*(_QWORD *)(v6 - 208), *(_QWORD *)(v6 - 200));
            (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v6 - 192) + 8))(*(_QWORD *)(v6 - 184), *(_QWORD *)(v6 - 224));
            goto LABEL_30;
          }
          (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v6 - 344) + 8))(v49, *(_QWORD *)(v6 - 336));
        }
        else
        {
          (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v49, v52);
        }
        sub_1DC0926D8(v25, (uint64_t (*)(_QWORD))MEMORY[0x1E0D570B0]);
        (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v6 - 232) + 8))(*(_QWORD *)(v6 - 208), *(_QWORD *)(v6 - 200));
      }
      else
      {
        sub_1DC0926D8(v25, (uint64_t (*)(_QWORD))MEMORY[0x1E0D570B0]);
        (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v6 - 232) + 8))(v26, *(_QWORD *)(v6 - 200));
      }
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v6 - 192) + 8))(*(_QWORD *)(v6 - 184), *(_QWORD *)(v6 - 224));
      goto LABEL_30;
    }
    __break(1u);
  }
  else if (v17 == *MEMORY[0x1E0DAF140])
  {
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v12, v16);
    (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v6 - 192) + 8))(*(_QWORD *)(v6 - 184), v7);
    (*(void (**)(_QWORD *, uint64_t))(v11 + 96))(v13, v16);
    **(_QWORD **)(v6 - 176) = *v13;
    swift_storeEnumTagMultiPayload();
    type metadata accessor for ForYouFeedRouteModel();
    swift_storeEnumTagMultiPayload();
    JUMPOUT(0x1DC2B72ECLL);
  }
  sub_1DC4099DC();
  __break(1u);
  JUMPOUT(0x1DC2B7E48);
}

uint64_t sub_1DC2B7E64(void (*a1)(char *))
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v2 = type metadata accessor for StocksActivity(0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC25604C();
  v6 = &v4[*(int *)(v5 + 48)];
  type metadata accessor for ForYouSectionDescriptor();
  swift_storeEnumTagMultiPayload();
  v7 = *MEMORY[0x1E0DBA290];
  v8 = sub_1DC4059F8();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v6, v7, v8);
  swift_storeEnumTagMultiPayload();
  a1(v4);
  return sub_1DC0926D8((uint64_t)v4, type metadata accessor for StocksActivity);
}

uint64_t sub_1DC2B7F60()
{
  sub_1DC080808((unint64_t *)&qword_1EDB351C0, (uint64_t (*)(uint64_t))type metadata accessor for StockListSelectionModel, (uint64_t)&unk_1DC4157E8);
  return sub_1DC402764();
}

uint64_t sub_1DC2B7FB4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (_QWORD *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 136));
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v3 + 24))(v0, &off_1EA45FF38, v2, v3);
}

void sub_1DC2B8010()
{
  uint64_t v0;
  char v1;
  id v2;

  v1 = sub_1DC3637E0();
  sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FC00);
  v2 = (id)sub_1DC409580();
  sub_1DC408FE0();
  sub_1DC403F28();

  if ((v1 & 1) != 0)
  {
    *(_QWORD *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 192)) = 0;
    swift_release();
    sub_1DC2B6970();
  }
}

uint64_t sub_1DC2B8110()
{
  return sub_1DC2B7E64((void (*)(char *))MEMORY[0x1E0DB8C38]);
}

uint64_t sub_1DC2B812C()
{
  return sub_1DC2B7E64((void (*)(char *))MEMORY[0x1E0DB8C28]);
}

uint64_t sub_1DC2B8158(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t (*v36)(void);
  uint64_t v37;
  uint64_t v38;
  void (*v39)(uint64_t);
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t result;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(uint64_t, uint64_t, uint64_t);
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  _QWORD v85[3];
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  _QWORD *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  __int128 v107;
  char *v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;

  v88 = a3;
  v115 = a2;
  v118 = a1;
  v90 = *v3;
  sub_1DC2B9610(0);
  MEMORY[0x1E0C80A78](v4);
  v95 = (char *)v85 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v97 = sub_1DC407078();
  v96 = *(_QWORD *)(v97 - 8);
  MEMORY[0x1E0C80A78](v97);
  v89 = (char *)v85 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v94 = sub_1DC403598();
  v93 = *(_QWORD *)(v94 - 8);
  MEMORY[0x1E0C80A78](v94);
  v92 = (char *)v85 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v100 = sub_1DC4033A0();
  v99 = *(_QWORD *)(v100 - 8);
  MEMORY[0x1E0C80A78](v100);
  v98 = (char *)v85 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v105 = sub_1DC402F74();
  v104 = *(_QWORD *)(v105 - 8);
  MEMORY[0x1E0C80A78](v105);
  v103 = (char *)v85 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC10B21C();
  MEMORY[0x1E0C80A78](v10);
  v108 = (char *)v85 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0FE574(0, (unint64_t *)&qword_1EDB29D00, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60]);
  v109 = v12;
  *(_QWORD *)&v107 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v101 = (char *)v85 - v13;
  sub_1DC2B962C(0);
  MEMORY[0x1E0C80A78](v14);
  v106 = (char *)v85 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1DC403B08();
  v111 = *(_QWORD *)(v16 - 8);
  v112 = v16;
  MEMORY[0x1E0C80A78](v16);
  v102 = (char *)v85 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v110 = (char *)v85 - v19;
  sub_1DC0D8B60(0);
  MEMORY[0x1E0C80A78](v20);
  v114 = (char *)v85 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_1DC400280();
  v116 = *(_QWORD *)(v22 - 8);
  v117 = v22;
  MEMORY[0x1E0C80A78](v22);
  v113 = (char *)v85 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC10B368(0);
  MEMORY[0x1E0C80A78](v24);
  v26 = (char *)v85 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0FF574(0);
  v28 = v27;
  v29 = *(_QWORD *)(v27 - 8);
  MEMORY[0x1E0C80A78](v27);
  v119 = (char *)v85 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0FE574(0, (unint64_t *)&qword_1EDB2AB80, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790]);
  v32 = v31;
  v33 = *(_QWORD *)(v31 - 8);
  MEMORY[0x1E0C80A78](v31);
  v35 = (char *)v85 - v34;
  v91 = v3;
  sub_1DC4049CC();
  v122 = v120;
  v36 = MEMORY[0x1E0DB80B8];
  sub_1DC0FE574(0, (unint64_t *)&qword_1EDB29EC0, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB80B8]);
  sub_1DC10297C((unint64_t *)&qword_1EDB29EB0, (unint64_t *)&qword_1EDB29EC0, (uint64_t (*)(uint64_t, _QWORD *))v36, MEMORY[0x1E0DB80D0]);
  sub_1DC405050();
  v37 = v32;
  swift_release();
  sub_1DC402404();
  sub_1DC406C7C();
  v38 = v28;
  swift_bridgeObjectRelease();
  v118 = v29;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v26, 1, v28) == 1)
  {
    (*(void (**)(char *, uint64_t))(v33 + 8))(v35, v32);
    v39 = sub_1DC10B368;
    v40 = (uint64_t)v26;
    return sub_1DC0926D8(v40, (uint64_t (*)(_QWORD))v39);
  }
  v87 = v33;
  v41 = v119;
  (*(void (**)(char *, char *, uint64_t))(v118 + 32))(v119, v26, v28);
  v42 = v114;
  sub_1DC406D24();
  v44 = v116;
  v43 = v117;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v116 + 48))(v42, 1, v117) == 1)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v118 + 8))(v41, v38, v43);
    (*(void (**)(char *, uint64_t))(v87 + 8))(v35, v32);
    v39 = sub_1DC0D8B60;
    v40 = (uint64_t)v42;
    return sub_1DC0926D8(v40, (uint64_t (*)(_QWORD))v39);
  }
  (*(void (**)(char *, char *, uint64_t))(v44 + 32))(v113, v42, v43);
  v46 = sub_1DC405FF8();
  v47 = (uint64_t)v106;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 56))(v106, 1, 1, v46);
  v85[0] = v38;
  sub_1DC404324();
  v48 = v108;
  sub_1DC406CC4();
  swift_bridgeObjectRelease();
  v49 = v107;
  v50 = v109;
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v107 + 48))(v48, 1, v109);
  v86 = v37;
  if ((_DWORD)result == 1)
    goto LABEL_24;
  v51 = (uint64_t)v101;
  (*(void (**)(char *, char *, uint64_t))(v49 + 32))(v101, v48, v50);
  v52 = v110;
  sub_1DC2D4290(v51, v47);
  (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v51, v50);
  sub_1DC0926D8(v47, (uint64_t (*)(_QWORD))sub_1DC2B962C);
  sub_1DC089DA4(0, (unint64_t *)&qword_1EDB3FE40, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8178], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v109 = v53;
  v54 = sub_1DC401618();
  v55 = *(_QWORD *)(v54 - 8);
  v56 = *(_QWORD *)(v55 + 72);
  v57 = *(unsigned __int8 *)(v55 + 80);
  v114 = v35;
  v58 = (v57 + 32) & ~v57;
  v108 = (char *)(v58 + v56);
  v59 = v57 | 7;
  v60 = swift_allocObject();
  v107 = xmmword_1DC40DC10;
  *(_OWORD *)(v60 + 16) = xmmword_1DC40DC10;
  v61 = *MEMORY[0x1E0CF8168];
  v62 = *(void (**)(uint64_t, uint64_t, uint64_t))(v55 + 104);
  v62(v60 + v58, v61, v54);
  sub_1DC080808(&qword_1EDB27520, (uint64_t (*)(uint64_t))MEMORY[0x1E0DADF38], MEMORY[0x1E0DADF08]);
  v85[1] = "ForYouFeed will auto-refresh";
  v85[2] = 0x80000001DC444890;
  v63 = v112;
  sub_1DC401870();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, char *, uint64_t))(v111 + 16))(v102, v52, v63);
  v64 = v103;
  sub_1DC402F68();
  v106 = (char *)v59;
  v65 = v54;
  v66 = swift_allocObject();
  *(_OWORD *)(v66 + 16) = v107;
  LODWORD(v101) = v61;
  v102 = (char *)v62;
  v62(v66 + v58, v61, v54);
  sub_1DC080808(qword_1F0350F70, (uint64_t (*)(uint64_t))MEMORY[0x1E0DACE28], MEMORY[0x1E0DACE18]);
  v67 = v105;
  sub_1DC401870();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v104 + 8))(v64, v67);
  sub_1DC080808(&qword_1EDB2E058, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedModel, (uint64_t)&unk_1DC42EF38);
  v68 = v86;
  result = sub_1DC406D30();
  if (result < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_21;
  }
  if (result > 0x7FFFFFFF)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v69 = v98;
  sub_1DC403394();
  v70 = swift_allocObject();
  *(_OWORD *)(v70 + 16) = v107;
  ((void (*)(uint64_t, _QWORD, uint64_t))v102)(v70 + v58, v101, v54);
  sub_1DC080808(&qword_1EDB29820, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD438], MEMORY[0x1E0DAD428]);
  v71 = v100;
  sub_1DC401870();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v99 + 8))(v69, v71);
  result = sub_1DC406D3C();
  if (result < (uint64_t)0xFFFFFFFF80000000)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if (result > 0x7FFFFFFF)
  {
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
    return result;
  }
  v72 = v92;
  sub_1DC40358C();
  v73 = swift_allocObject();
  *(_OWORD *)(v73 + 16) = v107;
  ((void (*)(uint64_t, _QWORD, uint64_t))v102)(v73 + v58, v101, v65);
  sub_1DC080808((unint64_t *)&unk_1EDB29880, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD6D0], MEMORY[0x1E0DAD6C0]);
  v74 = v94;
  sub_1DC401870();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v93 + 8))(v72, v74);
  sub_1DC080808(&qword_1EDB42CB0, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedSectionDescriptor, (uint64_t)&unk_1DC425B14);
  v75 = (uint64_t)v95;
  v76 = v68;
  sub_1DC406CDC();
  v77 = v96;
  v78 = v97;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v96 + 48))(v75, 1, v97) == 1)
  {
    sub_1DC0926D8(v75, (uint64_t (*)(_QWORD))sub_1DC2B9610);
    v79 = v91;
    v80 = (uint64_t)v113;
  }
  else
  {
    v81 = v89;
    (*(void (**)(char *, uint64_t, uint64_t))(v77 + 32))(v89, v75, v78);
    sub_1DC194128(v88, (uint64_t)&v120);
    v79 = v91;
    v80 = (uint64_t)v113;
    if (v121)
    {
      __swift_project_boxed_opaque_existential_1(&v120, v121);
      sub_1DC080808(&qword_1EDB42A20, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52BF8], MEMORY[0x1E0D52BF0]);
      sub_1DC4070FC();
      (*(void (**)(char *, uint64_t))(v77 + 8))(v81, v78);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v120);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v77 + 8))(v81, v78);
      sub_1DC1C08A4((uint64_t)&v120);
    }
  }
  v82 = MEMORY[0x1DF0CAD78](v79 + 2);
  v83 = v119;
  v84 = v87;
  if (v82)
  {
    sub_1DC3A5444(v80, v82);
    swift_unknownObjectRelease();
  }
  (*(void (**)(char *, uint64_t))(v111 + 8))(v110, v112);
  (*(void (**)(uint64_t, uint64_t))(v116 + 8))(v80, v117);
  (*(void (**)(char *, _QWORD))(v118 + 8))(v83, v85[0]);
  return (*(uint64_t (**)(char *, uint64_t))(v84 + 8))(v114, v76);
}

uint64_t sub_1DC2B8DAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t (*v19)(void);
  uint64_t v20;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v40 = a1;
  v41 = a2;
  v2 = sub_1DC4011BC();
  v35 = *(_QWORD *)(v2 - 8);
  v36 = v2;
  MEMORY[0x1E0C80A78](v2);
  v34 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0F4CCC();
  v32 = *(_QWORD *)(v4 - 8);
  v33 = v4;
  MEMORY[0x1E0C80A78](v4);
  v31 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = type metadata accessor for ForYouFeedModel();
  MEMORY[0x1E0C80A78](v37);
  v38 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC10B368(0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0FF574(0);
  v11 = v10;
  v12 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v39 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0FE574(0, (unint64_t *)&qword_1EDB2AB80, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790]);
  v15 = v14;
  v16 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v30 - v17;
  sub_1DC4049CC();
  v42 = v43;
  v19 = MEMORY[0x1E0DB80B8];
  sub_1DC0FE574(0, (unint64_t *)&qword_1EDB29EC0, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB80B8]);
  sub_1DC10297C((unint64_t *)&qword_1EDB29EB0, (unint64_t *)&qword_1EDB29EC0, (uint64_t (*)(uint64_t, _QWORD *))v19, MEMORY[0x1E0DB80D0]);
  sub_1DC405050();
  swift_release();
  sub_1DC402404();
  sub_1DC406C7C();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v9, 1, v11) == 1)
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
    sub_1DC0926D8((uint64_t)v9, (uint64_t (*)(_QWORD))sub_1DC10B368);
    v20 = sub_1DC4034F0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v41, 1, 1, v20);
  }
  else
  {
    v22 = v39;
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v39, v9, v11);
    v23 = (uint64_t)v38;
    sub_1DC404354();
    if (swift_getEnumCaseMultiPayload())
    {
      (*(void (**)(char *, uint64_t))(v12 + 8))(v22, v11);
      (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
      v24 = sub_1DC4034F0();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v41, 1, 1, v24);
      return sub_1DC0926D8(v23, (uint64_t (*)(_QWORD))type metadata accessor for ForYouFeedModel);
    }
    else
    {
      v25 = v31;
      v26 = v32;
      v27 = v33;
      (*(void (**)(char *, uint64_t, uint64_t))(v32 + 32))(v31, v23, v33);
      v28 = v34;
      sub_1DC407C18();
      sub_1DC15CA64();
      (*(void (**)(char *, uint64_t))(v35 + 8))(v28, v36);
      (*(void (**)(char *, uint64_t))(v26 + 8))(v25, v27);
      (*(void (**)(char *, uint64_t))(v12 + 8))(v39, v11);
      (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
      v29 = sub_1DC4034F0();
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v41, 0, 1, v29);
    }
  }
}

uint64_t sub_1DC2B9178@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DC2B8DAC(a1, a2);
}

uint64_t sub_1DC2B9198()
{
  return sub_1DC2B9648();
}

void sub_1DC2B91B0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB42C70)
  {
    sub_1DC10B4F4();
    sub_1DC080808(&qword_1EDB2A200, (uint64_t (*)(uint64_t))sub_1DC10B4F4, MEMORY[0x1E0DB9998]);
    sub_1DC080808((unint64_t *)&unk_1EDB42C78, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedLayoutModel, (uint64_t)&unk_1DC430618);
    sub_1DC080808(&qword_1EDB32A90, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedLayoutModel, (uint64_t)&unk_1DC430668);
    sub_1DC080808(&qword_1EDB42C88, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedLayoutModel, (uint64_t)&unk_1DC430640);
    v0 = sub_1DC40193C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB42C70);
  }
}

void sub_1DC2B92A4(uint64_t a1)
{
  sub_1DC089DA4(a1, (unint64_t *)&unk_1EDB42CA0, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedRouteModel, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

uint64_t sub_1DC2B92C0()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1DC2B92E4()
{
  uint64_t v0;

  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 48);
  return swift_deallocObject();
}

uint64_t sub_1DC2B9318()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DC2B933C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  sub_1DC0FF574(0);
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v0 + v4, v2);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DC2B93D0(void *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t *v8;

  sub_1DC0FF574(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = (uint64_t *)(v2 + ((*(_QWORD *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8));
  return sub_1DC2B65EC(a1, a2, *(_QWORD *)(v2 + 32), v2 + v7, *v8, v8[1]);
}

uint64_t sub_1DC2B9438()
{
  uint64_t v0;
  uint64_t v1;

  sub_1DC0FE574(0, (unint64_t *)&qword_1EDB2AB80, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790]);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_1DC2B94A8()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1DC2B94D4()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 16))(*(_QWORD *)(v0 + 32));
}

uint64_t sub_1DC2B94FC()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t type metadata accessor for ForYouFeedInteractor.Errors(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ForYouFeedInteractor.Errors);
}

uint64_t sub_1DC2B9548()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DC2B956C(uint64_t a1)
{
  uint64_t *v1;

  return sub_1DC2B605C(a1, v1[4], v1[2], v1[3]);
}

uint64_t sub_1DC2B9578(uint64_t a1)
{
  uint64_t *v1;

  return sub_1DC2B6154(a1, v1[4], v1[2], v1[3]);
}

uint64_t sub_1DC2B9584(uint64_t a1)
{
  return sub_1DC2B6398(a1);
}

uint64_t sub_1DC2B9590()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1DC2B95B4()
{
  return sub_1DC380220();
}

void sub_1DC2B95BC(id a1)
{
  if (!((unint64_t)a1 >> 62))

}

uint64_t sub_1DC2B95CC()
{
  return sub_1DC362F5C();
}

uint64_t sub_1DC2B95FC(uint64_t *a1, _QWORD *a2)
{
  return sub_1DC2B6A4C(a1, a2);
}

void sub_1DC2B9610(uint64_t a1)
{
  sub_1DC089DA4(a1, (unint64_t *)&unk_1EDB42A08, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52BF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

void sub_1DC2B962C(uint64_t a1)
{
  sub_1DC089DA4(a1, &qword_1EDB2A570, (uint64_t (*)(uint64_t))MEMORY[0x1E0DBB250], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

uint64_t sub_1DC2B9648()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t (*v2)(void);

  v1 = *v0;
  sub_1DC400508();
  (*(void (**)(void))(*(_QWORD *)(v1 + 88) + 88))();
  swift_bridgeObjectRelease();
  v2 = MEMORY[0x1E0DB8020];
  sub_1DC0FE574(0, (unint64_t *)&qword_1EDB29E20, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB8020]);
  sub_1DC10297C(&qword_1EDB29E18, (unint64_t *)&qword_1EDB29E20, (uint64_t (*)(uint64_t, _QWORD *))v2, MEMORY[0x1E0DB8030]);
  sub_1DC4049E4();
  return swift_release();
}

void sub_1DC2B9718()
{
  uint64_t ObjectType;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  id v7;

  ObjectType = swift_getObjectType();
  v1 = sub_1DC080808(&qword_1EDB359C0, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedViewController, (uint64_t)&unk_1DC42C538);
  v2 = MEMORY[0x1DF0C4B5C](ObjectType, v1);
  if (!v2)
    goto LABEL_6;
  v3 = (void *)v2;
  objc_opt_self();
  v4 = (void *)swift_dynamicCastObjCClass();
  if (!v4)
  {
LABEL_5:

LABEL_6:
    v7 = sub_1DC16A074();
    objc_msgSend(v7, sel_setNeedsLayout);

    return;
  }
  v5 = objc_msgSend(v4, sel_view);
  if (v5)
  {
    v6 = v5;
    objc_msgSend(v5, sel_setNeedsLayout);

    v3 = v6;
    goto LABEL_5;
  }
  __break(1u);
}

uint64_t sub_1DC2B97F0()
{
  uint64_t v0;
  uint64_t result;

  result = MEMORY[0x1DF0CAD78](v0 + 16);
  if (result)
  {
    if (MEMORY[0x1DF0CAD78](result + 16))
    {
      sub_1DC2B9718();
      swift_unknownObjectRelease();
    }
    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_1DC2B9848()
{
  void *v0;
  char v1;

  v0 = (void *)sub_1DC404FFC();
  type metadata accessor for ForYouFeedSectionDescriptor();
  type metadata accessor for ForYouFeedModel();
  sub_1DC080808(&qword_1EDB37600, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedSectionDescriptor, (uint64_t)&unk_1DC425AEC);
  sub_1DC080808((unint64_t *)&unk_1EDB2E070, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedModel, (uint64_t)&unk_1DC42ED60);
  v1 = sub_1DC404FD8();
  sub_1DC2B95BC(v0);
  if ((v1 & 1) != 0)
    sub_1DC2B6970();
}

uint64_t sub_1DC2B9920()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_1DC2B9928(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1DC2B9968 + 4 * byte_1DC422DBE[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1DC2B9988 + 4 * byte_1DC422DC3[v4]))();
}

_BYTE *sub_1DC2B9968(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1DC2B9988(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC2B9990(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC2B9998(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC2B99A0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC2B99A8(_DWORD *result)
{
  *result = 0;
  return result;
}

void sub_1DC2B99B4()
{
  JUMPOUT(0x1DF0CAB8CLL);
}

ValueMetadata *type metadata accessor for StockFeedOfflineModel.Expanding()
{
  return &type metadata for StockFeedOfflineModel.Expanding;
}

ValueMetadata *type metadata accessor for StockFeedOfflineModel()
{
  return &type metadata for StockFeedOfflineModel;
}

ValueMetadata *type metadata accessor for StockFeedOfflineModel.Loading()
{
  return &type metadata for StockFeedOfflineModel.Loading;
}

uint64_t sub_1DC2B9A00()
{
  uint64_t v0;
  uint64_t ObjCClassFromMetadata;
  void *v2;
  id v3;
  id v4;

  v0 = sub_1DC407EAC();
  __swift_allocate_value_buffer(v0, qword_1EDB5E178);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EDB5E178);
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v2 = (void *)objc_opt_self();
  v3 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1DC3FFC80();

  v4 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata, 0x80000001DC441300);
  sub_1DC3FFC80();

  return sub_1DC407E58();
}

uint64_t sub_1DC2B9BA0()
{
  uint64_t v0;
  uint64_t ObjCClassFromMetadata;
  void *v2;
  id v3;
  id v4;

  v0 = sub_1DC407EAC();
  __swift_allocate_value_buffer(v0, qword_1F0368B48);
  __swift_project_value_buffer(v0, (uint64_t)qword_1F0368B48);
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v2 = (void *)objc_opt_self();
  v3 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1DC3FFC80();

  v4 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata, 0x80000001DC4410C0);
  sub_1DC3FFC80();

  return sub_1DC407E58();
}

uint64_t sub_1DC2B9D3C()
{
  uint64_t v0;
  uint64_t ObjCClassFromMetadata;
  void *v2;
  id v3;
  id v4;

  v0 = sub_1DC407EAC();
  __swift_allocate_value_buffer(v0, qword_1F0368B60);
  __swift_project_value_buffer(v0, (uint64_t)qword_1F0368B60);
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v2 = (void *)objc_opt_self();
  v3 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1DC3FFC80();

  v4 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata, 0x80000001DC4414B0);
  sub_1DC3FFC80();

  return sub_1DC407E58();
}

uint64_t sub_1DC2B9EDC()
{
  uint64_t v0;
  uint64_t ObjCClassFromMetadata;
  void *v2;
  id v3;
  id v4;

  v0 = sub_1DC407EAC();
  __swift_allocate_value_buffer(v0, qword_1F0368B78);
  __swift_project_value_buffer(v0, (uint64_t)qword_1F0368B78);
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v2 = (void *)objc_opt_self();
  v3 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1DC3FFC80();

  v4 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata, 0x80000001DC441630);
  sub_1DC3FFC80();

  return sub_1DC407E58();
}

uint64_t sub_1DC2BA078@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC1825D8(&qword_1EDB41368, (uint64_t)qword_1EDB5E178, a1);
}

uint64_t sub_1DC2BA094@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC1825D8(&qword_1F034B0C0, (uint64_t)qword_1F0368B48, a1);
}

uint64_t sub_1DC2BA0B0@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC1825D8(&qword_1F034B0C8, (uint64_t)qword_1F0368B60, a1);
}

uint64_t sub_1DC2BA0CC@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC1825D8(&qword_1F034B0D0, (uint64_t)qword_1F0368B78, a1);
}

uint64_t sub_1DC2BA0E8()
{
  uint64_t v0;
  uint64_t ObjCClassFromMetadata;
  void *v2;
  id v3;
  id v4;

  v0 = sub_1DC407EAC();
  __swift_allocate_value_buffer(v0, qword_1EDB5E1D8);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EDB5E1D8);
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v2 = (void *)objc_opt_self();
  v3 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1DC3FFC80();

  v4 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata, 0x80000001DC4411D0);
  sub_1DC3FFC80();

  return sub_1DC407E58();
}

uint64_t sub_1DC2BA298()
{
  uint64_t v0;
  uint64_t ObjCClassFromMetadata;
  void *v2;
  id v3;
  id v4;

  v0 = sub_1DC407EAC();
  __swift_allocate_value_buffer(v0, qword_1F0368B90);
  __swift_project_value_buffer(v0, (uint64_t)qword_1F0368B90);
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v2 = (void *)objc_opt_self();
  v3 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1DC3FFC80();

  v4 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata, 0x80000001DC4416B0);
  sub_1DC3FFC80();

  return sub_1DC407E58();
}

uint64_t sub_1DC2BA438()
{
  uint64_t v0;
  uint64_t ObjCClassFromMetadata;
  void *v2;
  id v3;
  id v4;

  v0 = sub_1DC407EAC();
  __swift_allocate_value_buffer(v0, qword_1F0368BA8);
  __swift_project_value_buffer(v0, (uint64_t)qword_1F0368BA8);
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v2 = (void *)objc_opt_self();
  v3 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1DC3FFC80();

  v4 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata, 0x80000001DC4413B0);
  sub_1DC3FFC80();

  return sub_1DC407E58();
}

uint64_t sub_1DC2BA5D8()
{
  uint64_t v0;
  uint64_t ObjCClassFromMetadata;
  void *v2;
  id v3;
  id v4;

  v0 = sub_1DC407EAC();
  __swift_allocate_value_buffer(v0, qword_1F0368BC0);
  __swift_project_value_buffer(v0, (uint64_t)qword_1F0368BC0);
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v2 = (void *)objc_opt_self();
  v3 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1DC3FFC80();

  v4 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata, 0x80000001DC441540);
  sub_1DC3FFC80();

  return sub_1DC407E58();
}

uint64_t sub_1DC2BA778@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC1825D8(&qword_1EDB41378, (uint64_t)qword_1EDB5E1D8, a1);
}

uint64_t sub_1DC2BA794@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC1825D8(&qword_1F034B0E0, (uint64_t)qword_1F0368B90, a1);
}

uint64_t sub_1DC2BA7B0@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC1825D8(&qword_1F034B0E8, (uint64_t)qword_1F0368BA8, a1);
}

uint64_t sub_1DC2BA7CC@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC1825D8(&qword_1F034B0F0, (uint64_t)qword_1F0368BC0, a1);
}

void sub_1DC2BA7E8()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  id v4;
  uint64_t v5;
  id v6;

  v1 = (void *)MEMORY[0x1DF0CAD78](v0 + 16);
  if (!v1)
    goto LABEL_6;
  v2 = v1;
  v3 = objc_msgSend(v1, sel_view);

  if (!v3)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  v4 = objc_msgSend(v3, sel_window);

  if (!v4)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 48));
  sub_1DC404288();
  v5 = sub_1DC4025FC();
  if (v5)
  {
    v6 = (id)v5;
    sub_1DC404264();

    return;
  }
LABEL_8:
  __break(1u);
}

uint64_t sub_1DC2BA8BC()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for WelcomeRouter()
{
  return objc_opt_self();
}

uint64_t sub_1DC2BA908(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  void *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int (*v29)(const void *, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v22 = a2[1];
      *(_QWORD *)a1 = *a2;
      *(_QWORD *)(a1 + 8) = v22;
      v23 = a2[3];
      *(_QWORD *)(a1 + 16) = a2[2];
      *(_QWORD *)(a1 + 24) = v23;
      v24 = *(int *)(type metadata accessor for CreateWatchlistViewModel() + 24);
      v25 = (void *)(a1 + v24);
      v26 = (char *)a2 + v24;
      v27 = sub_1DC4010E4();
      v28 = *(_QWORD *)(v27 - 8);
      v29 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v28 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v29(v26, 1, v27))
      {
        sub_1DC089DA4(0, (unint64_t *)&qword_1EDB28DE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF0D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v28 + 16))(v25, v26, v27);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
      }
      goto LABEL_14;
    }
    if (EnumCaseMultiPayload == 1)
    {
      v7 = a2[1];
      *(_QWORD *)a1 = *a2;
      *(_QWORD *)(a1 + 8) = v7;
      v8 = a2[3];
      *(_QWORD *)(a1 + 16) = a2[2];
      *(_QWORD *)(a1 + 24) = v8;
      *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
      v9 = type metadata accessor for WatchlistCellViewModel(0);
      v10 = *(int *)(v9 + 28);
      v11 = a1 + v10;
      v12 = (uint64_t)a2 + v10;
      v13 = sub_1DC40124C();
      v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v14(v11, v12, v13);
      v15 = *(int *)(v9 + 32);
      v16 = (void *)(a1 + v15);
      v17 = (char *)a2 + v15;
      sub_1DC15C2FC();
      v19 = v18;
      v20 = *(_QWORD *)(v18 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v17, 1, v18))
        goto LABEL_10;
    }
    else
    {
      v31 = a2[1];
      *(_QWORD *)a1 = *a2;
      *(_QWORD *)(a1 + 8) = v31;
      v32 = a2[3];
      *(_QWORD *)(a1 + 16) = a2[2];
      *(_QWORD *)(a1 + 24) = v32;
      *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
      v33 = type metadata accessor for WatchlistCellViewModel(0);
      v34 = *(int *)(v33 + 28);
      v35 = a1 + v34;
      v36 = (uint64_t)a2 + v34;
      v37 = sub_1DC40124C();
      v38 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v38(v35, v36, v37);
      v39 = *(int *)(v33 + 32);
      v16 = (void *)(a1 + v39);
      v17 = (char *)a2 + v39;
      sub_1DC15C2FC();
      v19 = v40;
      v20 = *(_QWORD *)(v40 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v17, 1, v40))
      {
LABEL_10:
        v41 = type metadata accessor for ManageWatchlistsContentMode(0);
        memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
LABEL_14:
        swift_storeEnumTagMultiPayload();
        return a1;
      }
    }
    v42 = sub_1DC4010E4();
    (*(void (**)(void *, char *, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(v16, v17, v42);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v16, 0, 1, v19);
    goto LABEL_14;
  }
  v21 = *a2;
  *(_QWORD *)a1 = *a2;
  a1 = v21 + ((v5 + 16) & ~(unint64_t)v5);
  swift_retain();
  return a1;
}

uint64_t sub_1DC2BAC68(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v11 = a1 + *(int *)(type metadata accessor for CreateWatchlistViewModel() + 24);
    v12 = sub_1DC4010E4();
    v13 = *(_QWORD *)(v12 - 8);
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12);
    if (!(_DWORD)result)
    {
      v9 = *(uint64_t (**)(uint64_t, uint64_t))(v13 + 8);
      v10 = v11;
      v8 = v12;
      return v9(v10, v8);
    }
  }
  else if (result <= 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v3 = type metadata accessor for WatchlistCellViewModel(0);
    v4 = a1 + *(int *)(v3 + 28);
    v5 = sub_1DC40124C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
    v6 = a1 + *(int *)(v3 + 32);
    sub_1DC15C2FC();
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v6, 1, v7);
    if (!(_DWORD)result)
    {
      v8 = sub_1DC4010E4();
      v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8);
      v10 = v6;
      return v9(v10, v8);
    }
  }
  return result;
}

uint64_t sub_1DC2BAD90(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  void *v13;
  const void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  const void *v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int (*v26)(const void *, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;

  if (swift_getEnumCaseMultiPayload() == 2)
  {
    v19 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v19;
    v20 = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = v20;
    v21 = *(int *)(type metadata accessor for CreateWatchlistViewModel() + 24);
    v22 = (void *)(a1 + v21);
    v23 = (const void *)(a2 + v21);
    v24 = sub_1DC4010E4();
    v25 = *(_QWORD *)(v24 - 8);
    v26 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v25 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v26(v23, 1, v24))
    {
      sub_1DC089DA4(0, (unint64_t *)&qword_1EDB28DE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF0D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v25 + 16))(v22, v23, v24);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
    }
  }
  else
  {
    v4 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v4;
    v5 = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = v5;
    *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
    v6 = type metadata accessor for WatchlistCellViewModel(0);
    v7 = *(int *)(v6 + 28);
    v8 = a1 + v7;
    v9 = a2 + v7;
    v10 = sub_1DC40124C();
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
    v12 = *(int *)(v6 + 32);
    v13 = (void *)(a1 + v12);
    v14 = (const void *)(a2 + v12);
    sub_1DC15C2FC();
    v16 = v15;
    v17 = *(_QWORD *)(v15 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v17 + 48))(v14, 1, v15))
    {
      v18 = type metadata accessor for ManageWatchlistsContentMode(0);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      v28 = sub_1DC4010E4();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v13, v14, v28);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v13, 0, 1, v16);
    }
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_1DC2BAFCC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  void *v11;
  const void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  const void *v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int (*v22)(const void *, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;

  if (a1 != a2)
  {
    sub_1DC0926D8(a1, (uint64_t (*)(_QWORD))type metadata accessor for ManageWatchlistsModel);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      v17 = *(int *)(type metadata accessor for CreateWatchlistViewModel() + 24);
      v18 = (void *)(a1 + v17);
      v19 = (const void *)(a2 + v17);
      v20 = sub_1DC4010E4();
      v21 = *(_QWORD *)(v20 - 8);
      v22 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v21 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v22(v19, 1, v20))
      {
        sub_1DC089DA4(0, (unint64_t *)&qword_1EDB28DE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF0D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v21 + 16))(v18, v19, v20);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
      }
    }
    else
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
      v4 = type metadata accessor for WatchlistCellViewModel(0);
      v5 = *(int *)(v4 + 28);
      v6 = a1 + v5;
      v7 = a2 + v5;
      v8 = sub_1DC40124C();
      v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v9(v6, v7, v8);
      v10 = *(int *)(v4 + 32);
      v11 = (void *)(a1 + v10);
      v12 = (const void *)(a2 + v10);
      sub_1DC15C2FC();
      v14 = v13;
      v15 = *(_QWORD *)(v13 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v15 + 48))(v12, 1, v13))
      {
        v16 = type metadata accessor for ManageWatchlistsContentMode(0);
        memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
      }
      else
      {
        v24 = sub_1DC4010E4();
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v11, v12, v24);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v11, 0, 1, v14);
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t type metadata accessor for ManageWatchlistsModel()
{
  uint64_t result;

  result = qword_1F0351070;
  if (!qword_1F0351070)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1DC2BB27C(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  const void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;

  if (swift_getEnumCaseMultiPayload() == 2)
  {
    v17 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v17;
    v18 = *(int *)(type metadata accessor for CreateWatchlistViewModel() + 24);
    v11 = (void *)(a1 + v18);
    v12 = (const void *)(a2 + v18);
    v14 = sub_1DC4010E4();
    v15 = *(_QWORD *)(v14 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v15 + 48))(v12, 1, v14))
    {
      sub_1DC089DA4(0, (unint64_t *)&qword_1EDB28DE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF0D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      goto LABEL_6;
    }
    (*(void (**)(void *, const void *, uint64_t))(v15 + 32))(v11, v12, v14);
LABEL_9:
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v11, 0, 1, v14);
    goto LABEL_10;
  }
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v5 = type metadata accessor for WatchlistCellViewModel(0);
  v6 = *(int *)(v5 + 28);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_1DC40124C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = *(int *)(v5 + 32);
  v11 = (void *)(a1 + v10);
  v12 = (const void *)(a2 + v10);
  sub_1DC15C2FC();
  v14 = v13;
  v15 = *(_QWORD *)(v13 - 8);
  if (!(*(unsigned int (**)(const void *, uint64_t, uint64_t))(v15 + 48))(v12, 1, v13))
  {
    v19 = sub_1DC4010E4();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v11, v12, v19);
    goto LABEL_9;
  }
  v16 = type metadata accessor for ManageWatchlistsContentMode(0);
LABEL_6:
  memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
LABEL_10:
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_1DC2BB438(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  const void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;

  if (a1 != a2)
  {
    sub_1DC0926D8(a1, (uint64_t (*)(_QWORD))type metadata accessor for ManageWatchlistsModel);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      v17 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v17;
      v18 = *(int *)(type metadata accessor for CreateWatchlistViewModel() + 24);
      v11 = (void *)(a1 + v18);
      v12 = (const void *)(a2 + v18);
      v14 = sub_1DC4010E4();
      v15 = *(_QWORD *)(v14 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v15 + 48))(v12, 1, v14))
      {
        sub_1DC089DA4(0, (unint64_t *)&qword_1EDB28DE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF0D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        goto LABEL_7;
      }
      (*(void (**)(void *, const void *, uint64_t))(v15 + 32))(v11, v12, v14);
    }
    else
    {
      v4 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v4;
      *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
      v5 = type metadata accessor for WatchlistCellViewModel(0);
      v6 = *(int *)(v5 + 28);
      v7 = a1 + v6;
      v8 = a2 + v6;
      v9 = sub_1DC40124C();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
      v10 = *(int *)(v5 + 32);
      v11 = (void *)(a1 + v10);
      v12 = (const void *)(a2 + v10);
      sub_1DC15C2FC();
      v14 = v13;
      v15 = *(_QWORD *)(v13 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v15 + 48))(v12, 1, v13))
      {
        v16 = type metadata accessor for ManageWatchlistsContentMode(0);
LABEL_7:
        memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
LABEL_11:
        swift_storeEnumTagMultiPayload();
        return a1;
      }
      v19 = sub_1DC4010E4();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v11, v12, v19);
    }
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v11, 0, 1, v14);
    goto LABEL_11;
  }
  return a1;
}

uint64_t sub_1DC2BB60C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for WatchlistCellViewModel(319);
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for CreateWatchlistViewModel();
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t sub_1DC2BB68C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t (*v10)(_QWORD);
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;

  v2 = v1;
  v4 = type metadata accessor for WatchlistCellViewModel(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ManageWatchlistsModel();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0990BC(v2, (uint64_t)v9, v10);
  if (swift_getEnumCaseMultiPayload() > 1)
  {
    v15 = sub_1DC40124C();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(a1, 1, 1, v15);
    return sub_1DC0926D8((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for ManageWatchlistsModel);
  }
  else
  {
    sub_1DC092ED0((uint64_t)v9, (uint64_t)v6, type metadata accessor for WatchlistCellViewModel);
    v11 = &v6[*(int *)(v4 + 28)];
    v12 = sub_1DC40124C();
    v13 = *(_QWORD *)(v12 - 8);
    (*(void (**)(uint64_t, char *, uint64_t))(v13 + 16))(a1, v11, v12);
    sub_1DC0926D8((uint64_t)v6, type metadata accessor for WatchlistCellViewModel);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v13 + 56))(a1, 0, 1, v12);
  }
}

uint64_t sub_1DC2BB800()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t WatchlistViewModel;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t (*v11)(_QWORD);
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(_QWORD);
  uint64_t v16;

  v1 = v0;
  WatchlistViewModel = type metadata accessor for CreateWatchlistViewModel();
  MEMORY[0x1E0C80A78](WatchlistViewModel);
  v4 = (uint64_t *)((char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = type metadata accessor for WatchlistCellViewModel(0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (uint64_t *)((char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = type metadata accessor for ManageWatchlistsModel();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0990BC(v1, (uint64_t)v10, v11);
  if (swift_getEnumCaseMultiPayload() > 1)
  {
    sub_1DC092ED0((uint64_t)v10, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for CreateWatchlistViewModel);
    v12 = *v4;
    swift_bridgeObjectRetain();
    v13 = (uint64_t)v4;
    v14 = (uint64_t (*)(_QWORD))type metadata accessor for CreateWatchlistViewModel;
  }
  else
  {
    sub_1DC092ED0((uint64_t)v10, (uint64_t)v7, type metadata accessor for WatchlistCellViewModel);
    v12 = *v7;
    swift_bridgeObjectRetain();
    v13 = (uint64_t)v7;
    v14 = type metadata accessor for WatchlistCellViewModel;
  }
  sub_1DC0926D8(v13, v14);
  return v12;
}

uint64_t sub_1DC2BB964()
{
  sub_1DC2BBA64(&qword_1F03510C0, (uint64_t)&unk_1DC423308);
  return sub_1DC402E18();
}

uint64_t sub_1DC2BB9B0()
{
  return sub_1DC2BBA64(&qword_1F03510A8, (uint64_t)&unk_1DC423278);
}

uint64_t sub_1DC2BB9D4()
{
  return sub_1DC2BBA64(&qword_1F03510B0, (uint64_t)&unk_1DC4232A0);
}

uint64_t sub_1DC2BB9F8()
{
  return sub_1DC2BBA64(&qword_1F03510B8, (uint64_t)&unk_1DC4232E0);
}

uint64_t sub_1DC2BBA1C()
{
  return sub_1DC2BBA64(&qword_1F03510C0, (uint64_t)&unk_1DC423308);
}

uint64_t sub_1DC2BBA40()
{
  return sub_1DC2BBA64(&qword_1F03510C8, (uint64_t)&unk_1DC423420);
}

uint64_t sub_1DC2BBA64(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for ManageWatchlistsModel();
    result = MEMORY[0x1DF0CAB8C](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DC2BBAA4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t (*v18)(_QWORD);
  uint64_t v19;
  uint64_t v20;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;

  v28 = a1;
  sub_1DC089DA4(0, (unint64_t *)&unk_1EDB28A70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v25 - v3;
  v27 = sub_1DC3FFDD0();
  v5 = *(_QWORD *)(v27 - 8);
  MEMORY[0x1E0C80A78](v27);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1DC3FFB84();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for WatchlistCellViewModel(0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for ManageWatchlistsModel();
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0990BC(v1, (uint64_t)v17, v18);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_1DC0926D8((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for ManageWatchlistsModel);
    goto LABEL_5;
  }
  v25 = v7;
  v26 = v9;
  sub_1DC092ED0((uint64_t)v17, (uint64_t)v14, type metadata accessor for WatchlistCellViewModel);
  sub_1DC3FFB78();
  sub_1DC3FFB60();
  sub_1DC3FFD58();
  sub_1DC3FFB30();
  v29 = 0x696C68637461772FLL;
  v30 = 0xEB000000002F7473;
  sub_1DC408B48();
  sub_1DC3FFB48();
  sub_1DC3FFB24();
  v19 = v27;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v4, 1, v27) == 1)
  {
    (*(void (**)(char *, uint64_t))(v26 + 8))(v11, v8);
    sub_1DC0926D8((uint64_t)v14, type metadata accessor for WatchlistCellViewModel);
    sub_1DC212C0C((uint64_t)v4);
LABEL_5:
    v20 = sub_1DC406AFC();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v28, 1, 1, v20);
  }
  v22 = v25;
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v25, v4, v19);
  sub_1DC3FFD88();
  swift_bridgeObjectRetain();
  v23 = v28;
  sub_1DC406AF0();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v22, v19);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v11, v8);
  sub_1DC0926D8((uint64_t)v14, type metadata accessor for WatchlistCellViewModel);
  v24 = sub_1DC406AFC();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v23, 0, 1, v24);
}

uint64_t sub_1DC2BBDDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char v15;
  uint64_t v17;

  v1 = v0;
  v2 = type metadata accessor for ManageWatchlistsContentMode(0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v17 - v6;
  v8 = type metadata accessor for ManageWatchlistsModel();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for WatchlistCellViewModel(0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0990BC(v1, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for ManageWatchlistsModel);
  if (swift_getEnumCaseMultiPayload() > 1)
  {
    sub_1DC0926D8((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for ManageWatchlistsModel);
    v15 = 0;
  }
  else
  {
    sub_1DC092ED0((uint64_t)v10, (uint64_t)v13, type metadata accessor for WatchlistCellViewModel);
    sub_1DC0990BC((uint64_t)&v13[*(int *)(v11 + 32)], (uint64_t)v7, type metadata accessor for ManageWatchlistsContentMode);
    sub_1DC0926D8((uint64_t)v13, type metadata accessor for WatchlistCellViewModel);
    sub_1DC15C2FC();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v4, 1, 1, v14);
    v15 = sub_1DC1A8DEC((uint64_t)v7, (uint64_t)v4);
    sub_1DC0926D8((uint64_t)v4, type metadata accessor for ManageWatchlistsContentMode);
    sub_1DC0926D8((uint64_t)v7, type metadata accessor for ManageWatchlistsContentMode);
  }
  return v15 & 1;
}

uint64_t sub_1DC2BBFA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t (*v11)(_QWORD);
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  char *v20;
  uint64_t ObjCClassFromMetadata;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  void (*v34)(unint64_t, _QWORD, uint64_t);
  uint64_t v35;
  uint64_t (*v36)(_QWORD);
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;

  v1 = v0;
  v2 = type metadata accessor for ManageWatchlistsContentMode(0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for WatchlistCellViewModel(0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ManageWatchlistsModel();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0990BC(v1, (uint64_t)v10, v11);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    v36 = (uint64_t (*)(_QWORD))type metadata accessor for ManageWatchlistsModel;
    v37 = (uint64_t)v10;
LABEL_6:
    sub_1DC0926D8(v37, v36);
    return MEMORY[0x1E0DEE9D8];
  }
  sub_1DC092ED0((uint64_t)v10, (uint64_t)v7, type metadata accessor for WatchlistCellViewModel);
  v12 = (uint64_t)&v7[*(int *)(v5 + 32)];
  sub_1DC15C2FC();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v4, 1, 1, v13);
  LOBYTE(v12) = sub_1DC1A8DEC(v12, (uint64_t)v4);
  sub_1DC0926D8((uint64_t)v4, type metadata accessor for ManageWatchlistsContentMode);
  if ((v12 & 1) == 0)
  {
    v36 = type metadata accessor for WatchlistCellViewModel;
    v37 = (uint64_t)v7;
    goto LABEL_6;
  }
  v14 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
  sub_1DC089DA4(0, &qword_1EDB42990, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB8970], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v40 = sub_1DC404E4C();
  v15 = *(_QWORD *)(v40 - 8);
  v16 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_1DC40DC10;
  v18 = (uint64_t *)(v17 + v16);
  sub_1DC235E1C();
  v20 = (char *)v18 + *(int *)(v19 + 48);
  v39 = *(int *)(v19 + 64);
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v22 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v23 = sub_1DC3FFC80();
  v25 = v24;

  *v18 = v23;
  v18[1] = v25;
  v26 = *MEMORY[0x1E0DB88D8];
  v27 = sub_1DC404E1C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 104))(v20, v26, v27);
  sub_1DC089DA4(0, qword_1EDB42B28, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB8968], v14);
  v28 = sub_1DC404E40();
  v29 = *(_QWORD *)(v28 - 8);
  v30 = *(_QWORD *)(v29 + 72);
  v31 = (*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
  v32 = swift_allocObject();
  *(_OWORD *)(v32 + 16) = xmmword_1DC40C740;
  v33 = v32 + v31;
  v34 = *(void (**)(unint64_t, _QWORD, uint64_t))(v29 + 104);
  v34(v33, *MEMORY[0x1E0DB8948], v28);
  sub_1DC4068D4();
  *(_QWORD *)(v33 + v30) = sub_1DC4068B0();
  v34(v33 + v30, *MEMORY[0x1E0DB8960], v28);
  v35 = v40;
  *(uint64_t *)((char *)v18 + v39) = v32;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v15 + 104))(v18, *MEMORY[0x1E0DB88F8], v35);
  sub_1DC0926D8((uint64_t)v7, type metadata accessor for WatchlistCellViewModel);
  return v17;
}

uint64_t sub_1DC2BC380()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v15;

  v1 = v0;
  v2 = type metadata accessor for ManageWatchlistsContentMode(0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for WatchlistCellViewModel(0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0990BC(v1, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for ManageWatchlistsModel);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1DC092ED0((uint64_t)v10, (uint64_t)v7, type metadata accessor for WatchlistCellViewModel);
    v11 = (uint64_t)&v7[*(int *)(v5 + 32)];
    sub_1DC15C2FC();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v4, 1, 1, v12);
    v13 = sub_1DC1A8DEC(v11, (uint64_t)v4);
    sub_1DC0926D8((uint64_t)v4, type metadata accessor for ManageWatchlistsContentMode);
    sub_1DC0926D8((uint64_t)v7, type metadata accessor for WatchlistCellViewModel);
  }
  else
  {
    sub_1DC0926D8((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for ManageWatchlistsModel);
    v13 = 0;
  }
  return v13 & 1;
}

BOOL sub_1DC2BC500()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  _BOOL8 v4;
  uint64_t v6;

  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0990BC(v3, (uint64_t)v2, (uint64_t (*)(_QWORD))type metadata accessor for ManageWatchlistsModel);
  v4 = swift_getEnumCaseMultiPayload() == 1;
  sub_1DC0926D8((uint64_t)v2, (uint64_t (*)(_QWORD))type metadata accessor for ManageWatchlistsModel);
  return v4;
}

uint64_t sub_1DC2BC590@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC2BC5B8(MEMORY[0x1E0DB7520], MEMORY[0x1E0DB7528], a1);
}

uint64_t sub_1DC2BC5A4@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC2BC5B8(MEMORY[0x1E0DB7428], MEMORY[0x1E0DB7430], a1);
}

uint64_t sub_1DC2BC5B8@<X0>(unsigned int *a1@<X2>, uint64_t (*a2)(_QWORD)@<X3>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *a1;
  v5 = a2(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a3, v4, v5);
}

uint64_t sub_1DC2BC5F4()
{
  return sub_1DC404F48();
}

uint64_t sub_1DC2BC624(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  int EnumCaseMultiPayload;
  BOOL v19;
  char v20;
  BOOL v21;
  uint64_t (*v22)(_QWORD);
  uint64_t v24;

  v4 = type metadata accessor for WatchlistCellViewModel(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v24 - v8;
  v10 = type metadata accessor for ManageWatchlistsModel();
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC2BC8E4();
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = (uint64_t)&v15[*(int *)(v16 + 48)];
  sub_1DC0990BC(a1, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for ManageWatchlistsModel);
  sub_1DC0990BC(a2, v17, (uint64_t (*)(_QWORD))type metadata accessor for ManageWatchlistsModel);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    if (!swift_getEnumCaseMultiPayload())
      goto LABEL_20;
    goto LABEL_22;
  }
  if (EnumCaseMultiPayload != 1)
  {
    if (swift_getEnumCaseMultiPayload() == 2)
    {
LABEL_20:
      v22 = (uint64_t (*)(_QWORD))type metadata accessor for ManageWatchlistsModel;
      sub_1DC0926D8(v17, (uint64_t (*)(_QWORD))type metadata accessor for ManageWatchlistsModel);
      v20 = 1;
      goto LABEL_25;
    }
LABEL_22:
    v20 = 0;
    v22 = (uint64_t (*)(_QWORD))sub_1DC2BC8E4;
    goto LABEL_25;
  }
  sub_1DC0990BC((uint64_t)v15, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for ManageWatchlistsModel);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_1DC0926D8((uint64_t)v12, type metadata accessor for WatchlistCellViewModel);
    goto LABEL_22;
  }
  sub_1DC092ED0((uint64_t)v12, (uint64_t)v9, type metadata accessor for WatchlistCellViewModel);
  sub_1DC092ED0(v17, (uint64_t)v6, type metadata accessor for WatchlistCellViewModel);
  v19 = *(_QWORD *)v9 == *(_QWORD *)v6 && *((_QWORD *)v9 + 1) == *((_QWORD *)v6 + 1);
  if (v19 || (v20 = 0, (sub_1DC4099E8() & 1) != 0))
  {
    v21 = *((_QWORD *)v9 + 2) == *((_QWORD *)v6 + 2) && *((_QWORD *)v9 + 3) == *((_QWORD *)v6 + 3);
    if (v21 || (v20 = 0, (sub_1DC4099E8() & 1) != 0))
    {
      if (v9[32] == v6[32] && (MEMORY[0x1DF0C1A78](&v9[*(int *)(v4 + 28)], &v6[*(int *)(v4 + 28)]) & 1) != 0)
        v20 = sub_1DC1A8DEC((uint64_t)&v9[*(int *)(v4 + 32)], (uint64_t)&v6[*(int *)(v4 + 32)]);
      else
        v20 = 0;
    }
  }
  sub_1DC0926D8((uint64_t)v6, type metadata accessor for WatchlistCellViewModel);
  sub_1DC0926D8((uint64_t)v9, type metadata accessor for WatchlistCellViewModel);
  v22 = (uint64_t (*)(_QWORD))type metadata accessor for ManageWatchlistsModel;
LABEL_25:
  sub_1DC0926D8((uint64_t)v15, v22);
  return v20 & 1;
}

void sub_1DC2BC8E4()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1F03510D0)
  {
    type metadata accessor for ManageWatchlistsModel();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1F03510D0);
  }
}

uint64_t destroy for TodayViewLayout()
{
  swift_release();
  swift_release();
  return swift_release();
}

_QWORD *_s8StocksUI15TodayViewLayoutVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for TodayViewLayout(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for TodayViewLayout(uint64_t a1, uint64_t a2)
{
  swift_release();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for TodayViewLayout()
{
  return &type metadata for TodayViewLayout;
}

__n128 __swift_memcpy96_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(__n128 *)(a1 + 32) = result;
  *(_OWORD *)(a1 + 48) = v4;
  return result;
}

uint64_t getEnumTagSinglePayload for QuoteDetailViewLayoutAttributes.AttributionLayoutAttributes(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 96))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for QuoteDetailViewLayoutAttributes.AttributionLayoutAttributes(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 96) = v3;
  return result;
}

ValueMetadata *type metadata accessor for TodayViewLayoutAttributes()
{
  return &type metadata for TodayViewLayoutAttributes;
}

uint64_t sub_1DC2BCB24()
{
  return swift_retain();
}

uint64_t sub_1DC2BCB2C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  sub_1DC2BD18C();
  swift_allocObject();
  v2 = sub_1DC4013F0();
  swift_allocObject();
  v3 = sub_1DC4013F0();
  swift_allocObject();
  result = sub_1DC4013F0();
  *a1 = v2;
  a1[1] = v3;
  a1[2] = result;
  return result;
}

uint64_t sub_1DC2BCBF4(_QWORD *a1)
{
  __int128 *v1;
  uint64_t v2;
  __int128 *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v14;
  char v15;
  __int128 v16;
  __int128 v17;

  v3 = v1;
  sub_1DC2BD620(0, &qword_1F03510E8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v14 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC2BD5DC();
  sub_1DC409B14();
  v10 = v3[1];
  v16 = *v3;
  v17 = v10;
  v15 = 0;
  type metadata accessor for CGRect(0);
  sub_1DC2BD67C(&qword_1F03510F0, MEMORY[0x1E0C9B9C0]);
  sub_1DC409988();
  if (!v2)
  {
    v11 = v3[3];
    v16 = v3[2];
    v17 = v11;
    v15 = 1;
    sub_1DC409988();
    v12 = v3[5];
    v16 = v3[4];
    v17 = v12;
    v15 = 2;
    sub_1DC409988();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1DC2BCD8C()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0x62614C656C746974;
  if (*v0 != 1)
    v1 = 0xD000000000000012;
  if (*v0)
    return v1;
  else
    return 0x656D617266;
}

uint64_t sub_1DC2BCDF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC2BD240(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC2BCE18()
{
  sub_1DC2BD5DC();
  return sub_1DC409B20();
}

uint64_t sub_1DC2BCE40()
{
  sub_1DC2BD5DC();
  return sub_1DC409B2C();
}

BOOL sub_1DC2BCE68(CGRect *a1, CGRect *a2)
{
  CGFloat height;
  CGFloat v3;
  CGFloat v4;
  CGFloat v5;
  CGFloat v6;
  CGFloat v7;
  CGFloat v8;
  CGFloat v9;
  _BOOL8 result;
  CGFloat width;
  CGFloat y;
  CGFloat v13;
  CGFloat rect2;
  CGFloat rect2_8;
  CGFloat rect2_16;
  CGFloat rect2_24;
  CGFloat x;
  CGRect v19;
  CGRect v20;
  CGRect v21;
  CGRect v22;

  rect2_24 = a1[1].origin.y;
  x = a1[1].origin.x;
  rect2_8 = a1[1].size.height;
  rect2_16 = a1[1].size.width;
  y = a1[2].origin.y;
  v13 = a1[2].origin.x;
  height = a1[2].size.height;
  width = a1[2].size.width;
  v3 = a2[1].origin.y;
  rect2 = a2[1].origin.x;
  v4 = a2[1].size.width;
  v5 = a2[1].size.height;
  v6 = a2[2].origin.x;
  v7 = a2[2].origin.y;
  v8 = a2[2].size.width;
  v9 = a2[2].size.height;
  result = CGRectEqualToRect(*a1, *a2);
  if (result)
  {
    v19.origin.y = rect2_24;
    v19.origin.x = x;
    v19.size.height = rect2_8;
    v19.size.width = rect2_16;
    v21.origin.x = rect2;
    v21.origin.y = v3;
    v21.size.width = v4;
    v21.size.height = v5;
    result = CGRectEqualToRect(v19, v21);
    if (result)
    {
      v20.origin.y = y;
      v20.origin.x = v13;
      v20.size.height = height;
      v20.size.width = width;
      v22.origin.y = v7;
      v22.origin.x = v6;
      v22.size.height = v9;
      v22.size.width = v8;
      return CGRectEqualToRect(v20, v22);
    }
  }
  return result;
}

uint64_t sub_1DC2BCF38()
{
  sub_1DC2BD1FC();
  return sub_1DC40625C();
}

double sub_1DC2BCF60@<D0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  _OWORD v8[6];

  sub_1DC2BD3AC(a1, (uint64_t)v8);
  if (!v2)
  {
    v5 = v8[3];
    a2[2] = v8[2];
    a2[3] = v5;
    v6 = v8[5];
    a2[4] = v8[4];
    a2[5] = v6;
    result = *(double *)v8;
    v7 = v8[1];
    *a2 = v8[0];
    a2[1] = v7;
  }
  return result;
}

uint64_t sub_1DC2BCFA8(_QWORD *a1)
{
  return sub_1DC2BCBF4(a1);
}

uint64_t sub_1DC2BCFBC()
{
  sub_1DC2BD6BC();
  return sub_1DC401468();
}

unint64_t sub_1DC2BD028()
{
  unint64_t result;

  result = qword_1EDB40D38;
  if (!qword_1EDB40D38)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC4235CC, &type metadata for TodayViewLayoutAttributes);
    atomic_store(result, (unint64_t *)&qword_1EDB40D38);
  }
  return result;
}

unint64_t sub_1DC2BD070()
{
  unint64_t result;

  result = qword_1EDB40D30;
  if (!qword_1EDB40D30)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC4235A4, &type metadata for TodayViewLayoutAttributes);
    atomic_store(result, (unint64_t *)&qword_1EDB40D30);
  }
  return result;
}

unint64_t sub_1DC2BD0B8()
{
  unint64_t result;

  result = qword_1EDB40D18;
  if (!qword_1EDB40D18)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC42357C, &type metadata for TodayViewLayoutAttributes);
    atomic_store(result, (unint64_t *)&qword_1EDB40D18);
  }
  return result;
}

unint64_t sub_1DC2BD100()
{
  unint64_t result;

  result = qword_1F03510D8;
  if (!qword_1F03510D8)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC42362C, &type metadata for TodayViewLayoutAttributes);
    atomic_store(result, (unint64_t *)&qword_1F03510D8);
  }
  return result;
}

unint64_t sub_1DC2BD148()
{
  unint64_t result;

  result = qword_1EDB40D20;
  if (!qword_1EDB40D20)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC4235F4, &type metadata for TodayViewLayoutAttributes);
    atomic_store(result, (unint64_t *)&qword_1EDB40D20);
  }
  return result;
}

void sub_1DC2BD18C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB40A88)
  {
    type metadata accessor for CGRect(255);
    sub_1DC2BD67C(&qword_1EDB40FE8, MEMORY[0x1E0DB6508]);
    v0 = sub_1DC4013E4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB40A88);
  }
}

unint64_t sub_1DC2BD1FC()
{
  unint64_t result;

  result = qword_1F03510E0;
  if (!qword_1F03510E0)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC42368C, &type metadata for TodayViewLayoutAttributes);
    atomic_store(result, (unint64_t *)&qword_1F03510E0);
  }
  return result;
}

uint64_t sub_1DC2BD240(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x656D617266 && a2 == 0xE500000000000000;
  if (v2 || (sub_1DC4099E8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x62614C656C746974 && a2 == 0xEF656D6172466C65 || (sub_1DC4099E8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001DC444AE0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1DC4099E8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1DC2BD3AC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  char v24;

  sub_1DC2BD620(0, &qword_1EDB40FF8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v18 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC2BD5DC();
  sub_1DC409B08();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  type metadata accessor for CGRect(0);
  v24 = 0;
  sub_1DC2BD67C(&qword_1EDB40FF0, MEMORY[0x1E0C9B9E0]);
  sub_1DC409910();
  v10 = v21;
  v11 = v22;
  v12 = v23;
  v24 = 1;
  sub_1DC409910();
  v13 = v21;
  v14 = v22;
  v15 = v23;
  v24 = 2;
  sub_1DC409910();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v20 = v21;
  v18 = v23;
  v19 = v22;
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *(_OWORD *)a2 = v10;
  *(_QWORD *)(a2 + 16) = v11;
  *(_QWORD *)(a2 + 24) = v12;
  *(_OWORD *)(a2 + 32) = v13;
  *(_QWORD *)(a2 + 48) = v14;
  *(_QWORD *)(a2 + 56) = v15;
  *(_OWORD *)(a2 + 64) = v20;
  v17 = v18;
  *(_QWORD *)(a2 + 80) = v19;
  *(_QWORD *)(a2 + 88) = v17;
  return result;
}

unint64_t sub_1DC2BD5DC()
{
  unint64_t result;

  result = qword_1EDB40D00;
  if (!qword_1EDB40D00)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC423800, &type metadata for TodayViewLayoutAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB40D00);
  }
  return result;
}

void sub_1DC2BD620(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC2BD5DC();
    v7 = a3(a1, &type metadata for TodayViewLayoutAttributes.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1DC2BD67C(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    type metadata accessor for CGRect(255);
    result = MEMORY[0x1DF0CAB8C](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1DC2BD6BC()
{
  unint64_t result;

  result = qword_1EDB40D28;
  if (!qword_1EDB40D28)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC4236DC, &type metadata for TodayViewLayoutAttributes);
    atomic_store(result, (unint64_t *)&qword_1EDB40D28);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for TodayViewLayoutAttributes.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1DC2BD74C + 4 * byte_1DC423535[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1DC2BD780 + 4 * byte_1DC423530[v4]))();
}

uint64_t sub_1DC2BD780(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC2BD788(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC2BD790);
  return result;
}

uint64_t sub_1DC2BD79C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC2BD7A4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1DC2BD7A8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC2BD7B0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TodayViewLayoutAttributes.CodingKeys()
{
  return &type metadata for TodayViewLayoutAttributes.CodingKeys;
}

unint64_t sub_1DC2BD7D0()
{
  unint64_t result;

  result = qword_1F03510F8[0];
  if (!qword_1F03510F8[0])
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC4237D8, &type metadata for TodayViewLayoutAttributes.CodingKeys);
    atomic_store(result, qword_1F03510F8);
  }
  return result;
}

unint64_t sub_1DC2BD818()
{
  unint64_t result;

  result = qword_1EDB40D10;
  if (!qword_1EDB40D10)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC423748, &type metadata for TodayViewLayoutAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB40D10);
  }
  return result;
}

unint64_t sub_1DC2BD860()
{
  unint64_t result;

  result = qword_1EDB40D08;
  if (!qword_1EDB40D08)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC423770, &type metadata for TodayViewLayoutAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB40D08);
  }
  return result;
}

uint64_t sub_1DC2BD8A8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  __int128 v6[2];

  sub_1DC0824D4(a1, (uint64_t)v6);
  v3 = type metadata accessor for TipsModule();
  v4 = swift_allocObject();
  result = sub_1DC097DD0(v6, v4 + 16);
  a2[3] = v3;
  a2[4] = (uint64_t)&off_1EA451FD8;
  *a2 = v4;
  return result;
}

uint64_t sub_1DC2BD914()
{
  sub_1DC0A3390(0, (unint64_t *)&unk_1EDB29348);
  sub_1DC402B3C();
  swift_release();
  sub_1DC0A3390(0, &qword_1EDB29258);
  sub_1DC402B3C();
  swift_release();
  sub_1DC0A3390(0, &qword_1EDB29220);
  sub_1DC402B3C();
  swift_release();
  sub_1DC0A3390(0, &qword_1EDB291E0);
  sub_1DC402B3C();
  swift_release();
  sub_1DC401C6C();
  sub_1DC402B30();
  sub_1DC402494();
  swift_release();
  return swift_release();
}

uint64_t sub_1DC2BDA50@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;

  v2 = sub_1DC402050();
  swift_allocObject();
  result = sub_1DC402044();
  v4 = MEMORY[0x1E0D578D8];
  a1[3] = v2;
  a1[4] = v4;
  *a1 = result;
  return result;
}

uint64_t sub_1DC2BDAA4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC0A3390(0, &qword_1EDB29220);
  result = sub_1DC402608();
  if (v6)
  {
    v4 = sub_1DC401B40();
    swift_allocObject();
    result = sub_1DC401B34();
    v5 = MEMORY[0x1E0D56FC0];
    a2[3] = v4;
    a2[4] = v5;
    *a2 = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC2BDB4C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC132DB8();
  v4 = sub_1DC4025FC();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC0A3390(0, &qword_1EDB29DD0);
  result = sub_1DC402608();
  if (!v11)
  {
    __break(1u);
    goto LABEL_6;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  result = sub_1DC402608();
  if ((~v9 & 0xF000000000000007) == 0)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4018AC();
  result = sub_1DC4025FC();
  if (result)
  {
    v6 = result;
    v7 = type metadata accessor for TipInteractor();
    v8 = (_QWORD *)swift_allocObject();
    v8[2] = v4;
    sub_1DC097DD0(&v10, (uint64_t)(v8 + 3));
    v8[8] = v9;
    v8[9] = v6;
    a2[3] = v7;
    result = sub_1DC080808(&qword_1EDB2D210, (uint64_t (*)(uint64_t))type metadata accessor for TipInteractor, (uint64_t)&unk_1DC425660);
    a2[4] = result;
    *a2 = v8;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1DC2BDCDC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[24];
  uint64_t v14;
  uint64_t v15;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC0A3390(0, qword_1EDB2D2F0);
  result = sub_1DC402608();
  v4 = v14;
  if (v14)
  {
    v5 = type metadata accessor for TipStyler();
    v6 = v15;
    v7 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v13, v14);
    MEMORY[0x1E0C80A78](v7);
    v9 = &v13[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
    (*(void (**)(_BYTE *))(v10 + 16))(v9);
    v11 = sub_1DC0A3134((uint64_t)v9, v5, v4, v6);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
    a2[3] = v5;
    result = sub_1DC080808(&qword_1EDB3F348, (uint64_t (*)(uint64_t))type metadata accessor for TipStyler, (uint64_t)&unk_1DC43007C);
    a2[4] = result;
    *a2 = v11;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC2BDE10(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t result;
  id v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  _QWORD v14[20];

  sub_1DC2BE178();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v5 = sub_1DC401A8C();
  sub_1DC402608();
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5);
  if ((_DWORD)result == 1)
  {
    __break(1u);
    goto LABEL_9;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC0A3390(0, &qword_1EDB29258);
  result = sub_1DC402608();
  if (!v14[18])
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC0A3390(0, &qword_1EDB291E0);
  result = sub_1DC402608();
  if (!v14[13])
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC0A3390(0, (unint64_t *)&unk_1EDB29348);
  result = sub_1DC402608();
  if (!v14[8])
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC0A3390(0, (unint64_t *)&qword_1EDB29320);
  result = sub_1DC402608();
  if (!v13)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  sub_1DC097DD0(&v12, (uint64_t)v14);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC0A3390(0, &qword_1EDB2A940);
  result = sub_1DC402608();
  if (v10)
  {
    sub_1DC097DD0(&v9, (uint64_t)&v11);
    v7 = objc_allocWithZone((Class)sub_1DC401C6C());
    return sub_1DC401C60();
  }
LABEL_13:
  __break(1u);
  return result;
}

uint64_t sub_1DC2BE09C(uint64_t a1, _QWORD *a2)
{
  uint64_t result;
  __int128 v3;
  uint64_t v4;
  _QWORD v5[4];

  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1DC0A3390(0, (unint64_t *)&unk_1EDB295C0);
  result = sub_1DC402608();
  if (v4)
  {
    sub_1DC097DD0(&v3, (uint64_t)v5);
    __swift_project_boxed_opaque_existential_1(v5, v5[3]);
    sub_1DC080808(&qword_1EDB29228, (uint64_t (*)(uint64_t))MEMORY[0x1E0D571C8], MEMORY[0x1E0D571B8]);
    sub_1DC402B48();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v3);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1DC2BE178()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB291D8)
  {
    sub_1DC401A8C();
    v0 = sub_1DC4095A4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB291D8);
  }
}

uint64_t sub_1DC2BE1CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  void (*v33)(_QWORD, _QWORD, _QWORD);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t ObjectType;
  uint64_t v54;
  _QWORD *v55;
  char *v56;
  void (*v57)(char *, uint64_t, uint64_t);
  uint64_t v58;
  char *v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;

  v60 = a2;
  sub_1DC0D95F0(0);
  v3 = v2;
  v64 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for StockViewModel();
  MEMORY[0x1E0C80A78](v6);
  v63 = (uint64_t)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v54 - v9;
  MEMORY[0x1E0C80A78](v11);
  v61 = (uint64_t *)((char *)&v54 - v12);
  MEMORY[0x1E0C80A78](v13);
  v59 = (char *)&v54 - v14;
  v15 = type metadata accessor for StockSearchModel();
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v54 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v54 - v19;
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v54 - v22;
  MEMORY[0x1E0C80A78](v24);
  v26 = (char *)&v54 - v25;
  v66 = sub_1DC4010E4();
  v27 = *(_QWORD *)(v66 - 8);
  MEMORY[0x1E0C80A78](v66);
  v65 = (char *)&v54 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v29);
  v56 = (char *)&v54 - v30;
  sub_1DC404354();
  sub_1DC2BE8B0((uint64_t)v26, (uint64_t)v23);
  v62 = v15;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1DC1C62AC();
    v32 = &v23[*(int *)(v31 + 48)];
    v33 = (void (*)(_QWORD, _QWORD, _QWORD))v61;
    sub_1DC0F0F38((uint64_t)v23, (uint64_t)v61);
    v34 = sub_1DC40124C();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v34 - 8) + 8))(v32, v34);
  }
  else
  {
    v33 = (void (*)(_QWORD, _QWORD, _QWORD))v61;
    sub_1DC0F0F38((uint64_t)v23, (uint64_t)v61);
  }
  v35 = (uint64_t)v59;
  sub_1DC0F0F38((uint64_t)v33, (uint64_t)v59);
  sub_1DC0926D8((uint64_t)v26, (uint64_t (*)(_QWORD))type metadata accessor for StockSearchModel);
  v61 = *(_QWORD **)(v27 + 16);
  ((void (*)(char *, uint64_t, uint64_t))v61)(v56, v35, v66);
  sub_1DC0926D8(v35, (uint64_t (*)(_QWORD))type metadata accessor for StockViewModel);
  v36 = v60;
  v37 = *(_QWORD *)(v60 + 16);
  v38 = MEMORY[0x1E0DEE9D8];
  if (v37)
  {
    v67 = MEMORY[0x1E0DEE9D8];
    sub_1DC0C0444(0, v37, 0);
    v39 = v36 + ((*(unsigned __int8 *)(v64 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v64 + 80));
    v40 = *(_QWORD *)(v64 + 72);
    v57 = *(void (**)(char *, uint64_t, uint64_t))(v64 + 16);
    v58 = v40;
    v59 = v5;
    v60 = v3;
    do
    {
      v57(v5, v39, v3);
      sub_1DC404354();
      sub_1DC2BE8B0((uint64_t)v20, (uint64_t)v17);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_1DC1C62AC();
        v42 = &v17[*(int *)(v41 + 48)];
        v43 = v63;
        sub_1DC0F0F38((uint64_t)v17, v63);
        v44 = sub_1DC40124C();
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v44 - 8) + 8))(v42, v44);
      }
      else
      {
        v43 = v63;
        sub_1DC0F0F38((uint64_t)v17, v63);
      }
      sub_1DC0F0F38(v43, (uint64_t)v10);
      sub_1DC0926D8((uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for StockSearchModel);
      ((void (*)(char *, char *, uint64_t))v61)(v65, v10, v66);
      sub_1DC0926D8((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for StockViewModel);
      (*(void (**)(char *, uint64_t))(v64 + 8))(v5, v3);
      v38 = v67;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1DC0C0444(0, *(_QWORD *)(v38 + 16) + 1, 1);
        v38 = v67;
      }
      v46 = *(_QWORD *)(v38 + 16);
      v45 = *(_QWORD *)(v38 + 24);
      if (v46 >= v45 >> 1)
      {
        sub_1DC0C0444(v45 > 1, v46 + 1, 1);
        v38 = v67;
      }
      *(_QWORD *)(v38 + 16) = v46 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v27 + 32))(v38+ ((*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80))+ *(_QWORD *)(v27 + 72) * v46, v65, v66);
      v67 = v38;
      v5 = v59;
      v39 += v58;
      --v37;
      v3 = v60;
    }
    while (v37);
  }
  v47 = v55;
  v48 = v55[9];
  v49 = v55[10];
  __swift_project_boxed_opaque_existential_1(v55 + 6, v48);
  v50 = v56;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v49 + 8))(v56, v38, v48, v49);
  swift_bridgeObjectRelease();
  v51 = v47[5];
  ObjectType = swift_getObjectType();
  (*(void (**)(char *, uint64_t, uint64_t))(v51 + 64))(v50, ObjectType, v51);
  return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v50, v66);
}

uint64_t sub_1DC2BE6D8()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;

  v1 = v0;
  v2 = sub_1DC4010E4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for StockSearchModel();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for StockViewModel();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0D95F0(0);
  sub_1DC404354();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1DC1C62AC();
    v13 = &v8[*(int *)(v12 + 48)];
    sub_1DC0F0F38((uint64_t)v8, (uint64_t)v11);
    v14 = sub_1DC40124C();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  }
  else
  {
    sub_1DC0F0F38((uint64_t)v8, (uint64_t)v11);
  }
  v15 = v1 + 6;
  v17 = v1[9];
  v16 = v1[10];
  __swift_project_boxed_opaque_existential_1(v15, v17);
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, v11, v2);
  sub_1DC0926D8((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for StockViewModel);
  v18 = sub_1DC1C58BC();
  v19 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 16))(v5, v18, v17, v16);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v19;
}

uint64_t sub_1DC2BE8B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for StockSearchModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC2BE8F4(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = MEMORY[0x1DF0CAD78](a2 + 16);
  if (result)
  {
    type metadata accessor for StockSearchViewController(0);
    sub_1DC1F2068(a2, (uint64_t)&off_1EA460900, a1);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1DC2BE97C(uint64_t a1)
{
  uint64_t result;
  void *v2;
  id v3;

  result = MEMORY[0x1DF0CAD78](a1 + 16);
  if (result)
  {
    v2 = (void *)result;
    *(_QWORD *)(swift_allocObject() + 16) = result;
    v3 = v2;
    sub_1DC402E3C();
    swift_unknownObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t sub_1DC2BE9F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t result;
  void *v9;
  unint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;

  v4 = sub_1DC4040D8();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = MEMORY[0x1E0C80A78](v4);
  result = MEMORY[0x1DF0CAD78](a2 + 16, v7);
  if (result)
  {
    v9 = (void *)result;
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
    v10 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    v11 = swift_allocObject();
    *(_QWORD *)(v11 + 16) = v9;
    (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v11 + v10, (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
    v12 = v9;
    sub_1DC402E3C();
    swift_unknownObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t sub_1DC2BEAEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1DC4040D8();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1DC2BEB60()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(sub_1DC4040D8() - 8) + 80);
  return sub_1DC1F1AF8(*(_QWORD *)(v0 + 16), v0 + ((v1 + 24) & ~v1));
}

uint64_t sub_1DC2BEB90()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1DC2BEBB4()
{
  uint64_t v0;

  return sub_1DC1F1CFC(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1DC2BEBBC(uint64_t a1, void *aBlock)
{
  void (*v2)(void (*)(uint64_t), uint64_t);
  void *v3;
  uint64_t v4;

  v2 = *(void (**)(void (*)(uint64_t), uint64_t))(a1 + 32);
  v3 = _Block_copy(aBlock);
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = v3;
  swift_retain();
  v2(sub_1DC2BFAFC, v4);
  swift_release();
  return swift_release();
}

void sub_1DC2BEC2C(uint64_t a1, uint64_t a2)
{
  id v3;

  sub_1DC0821D4(0, &qword_1EDB3F848);
  v3 = (id)sub_1DC408CC8();
  (*(void (**)(uint64_t, id))(a2 + 16))(a2, v3);

}

uint64_t sub_1DC2BEC90(void (*a1)(void), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  void (*v15)(_QWORD);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  _QWORD v37[2];
  unsigned int v38;
  void (*v39)(char *, _QWORD, uint64_t);
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(void);
  __int128 v45;
  uint64_t v46;
  uint64_t v47;

  v42 = a4;
  v43 = a2;
  v44 = a1;
  v5 = sub_1DC40124C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1DC4048C4();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
  sub_1DC089DA4(0, &qword_1EDB3FF08, (uint64_t (*)(uint64_t))sub_1DC131594, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v14 = swift_allocObject();
  v40 = xmmword_1DC40DC10;
  *(_OWORD *)(v14 + 16) = xmmword_1DC40DC10;
  v15 = *(void (**)(_QWORD))(v10 + 104);
  v38 = *MEMORY[0x1E0DB7CE8];
  v41 = v9;
  v39 = (void (*)(char *, _QWORD, uint64_t))v15;
  v15(v12);
  sub_1DC089DA4(0, (unint64_t *)&qword_1EDB3FF10, (uint64_t (*)(uint64_t))sub_1DC1F4E1C, v13);
  v37[1] = v16;
  v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_1DC40C740;
  __swift_project_boxed_opaque_existential_1((_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 40));
  sub_1DC400A60();
  v18 = sub_1DC370944();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v19 = sub_1DC40463C();
  v20 = MEMORY[0x1E0DB77B0];
  *(_QWORD *)(v17 + 56) = v19;
  *(_QWORD *)(v17 + 64) = v20;
  *(_QWORD *)(v17 + 32) = v18;
  v21 = sub_1DC1FB40C();
  *(_QWORD *)(v17 + 96) = v19;
  *(_QWORD *)(v17 + 104) = v20;
  *(_QWORD *)(v17 + 72) = v21;
  v22 = sub_1DC4048B8();
  swift_allocObject();
  v23 = sub_1DC404894();
  v24 = MEMORY[0x1E0DB7CC8];
  *(_QWORD *)(v14 + 56) = v22;
  *(_QWORD *)(v14 + 64) = v24;
  *(_QWORD *)(v14 + 32) = v23;
  v25 = sub_1DC2BF074();
  v27 = *(_QWORD *)(v14 + 16);
  v26 = *(_QWORD *)(v14 + 24);
  if (v27 >= v26 >> 1)
    v14 = (uint64_t)sub_1DC166CA4((_QWORD *)(v26 > 1), v27 + 1, 1, (_QWORD *)v14);
  v46 = v22;
  v47 = v24;
  *(_QWORD *)&v45 = v25;
  *(_QWORD *)(v14 + 16) = v27 + 1;
  sub_1DC097DD0(&v45, v14 + 40 * v27 + 32);
  v28 = sub_1DC2BF6E4();
  v30 = *(_QWORD *)(v14 + 16);
  v29 = *(_QWORD *)(v14 + 24);
  if (v30 >= v29 >> 1)
    v14 = (uint64_t)sub_1DC166CA4((_QWORD *)(v29 > 1), v30 + 1, 1, (_QWORD *)v14);
  v46 = v22;
  v47 = v24;
  *(_QWORD *)&v45 = v28;
  *(_QWORD *)(v14 + 16) = v30 + 1;
  sub_1DC097DD0(&v45, v14 + 40 * v30 + 32);
  v39(v12, v38, v41);
  v31 = swift_allocObject();
  *(_OWORD *)(v31 + 16) = v40;
  v32 = _s5TeaUI15ContextMenuItemC06StocksB0E15provideFeedbackACyFZ_0();
  *(_QWORD *)(v31 + 56) = v19;
  *(_QWORD *)(v31 + 64) = v20;
  *(_QWORD *)(v31 + 32) = v32;
  swift_allocObject();
  v33 = sub_1DC404894();
  v34 = *(_QWORD *)(v14 + 16);
  v35 = *(_QWORD *)(v14 + 24);
  swift_retain();
  if (v34 >= v35 >> 1)
    v14 = (uint64_t)sub_1DC166CA4((_QWORD *)(v35 > 1), v34 + 1, 1, (_QWORD *)v14);
  v46 = v22;
  v47 = v24;
  *(_QWORD *)&v45 = v33;
  *(_QWORD *)(v14 + 16) = v34 + 1;
  sub_1DC097DD0(&v45, v14 + 40 * v34 + 32);
  sub_1DC404180();
  sub_1DC404144();
  sub_1DC404114();
  v44();
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DC2BF074()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  unint64_t v18;
  void (*v19)(_QWORD);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(_BYTE *, uint64_t);
  int v24;
  uint64_t v25;
  unint64_t v26;
  _BYTE *v27;
  uint64_t v28;
  unsigned int *v29;
  char *v30;
  uint64_t v31;
  uint64_t ObjCClassFromMetadata;
  id v33;
  _BYTE *v34;
  _BYTE *v35;
  void *v36;
  id v37;
  uint64_t v38;
  uint64_t result;
  _BYTE v40[4];
  unsigned int v41;
  void (*v42)(_BYTE *, uint64_t);
  _QWORD *v43;
  _BYTE *v44;
  uint64_t v45;
  _BYTE *v46;
  _BYTE *v47;
  void (*v48)(_BYTE *, _QWORD, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52[8];
  char v53;
  char v54;
  char v55;
  char v56;
  unint64_t v57;

  v1 = v0;
  v2 = sub_1DC400970();
  v3 = *(_QWORD *)(v2 - 8);
  v50 = v2;
  v51 = v3;
  v4 = MEMORY[0x1E0C80A78](v2);
  v46 = &v40[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v4);
  v7 = &v40[-v6];
  v8 = sub_1DC40124C();
  v45 = *(_QWORD *)(v8 - 8);
  v9 = MEMORY[0x1E0C80A78](v8);
  v44 = &v40[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v9);
  v12 = &v40[-v11];
  v13 = sub_1DC4048C4();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = &v40[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v17 = sub_1DC400958();
  swift_retain();
  v18 = sub_1DC2BFB04(v17, v1);
  swift_bridgeObjectRelease();
  swift_release();
  v19 = *(void (**)(_QWORD))(v14 + 104);
  v41 = *MEMORY[0x1E0DB7CE0];
  v48 = (void (*)(_BYTE *, _QWORD, uint64_t))v19;
  v49 = v13;
  v19(v16);
  sub_1DC112894(v18);
  swift_bridgeObjectRelease();
  sub_1DC4048B8();
  swift_allocObject();
  v47 = v16;
  v20 = sub_1DC404894();
  sub_1DC0E7820();
  v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_1DC40FA60;
  *(_QWORD *)(v21 + 32) = v20;
  v57 = v21;
  sub_1DC408CF8();
  v22 = *(_QWORD *)(v1 + 40);
  v43 = (_QWORD *)(v1 + 16);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + 16), v22);
  swift_retain();
  sub_1DC400A60();
  sub_1DC401240();
  v23 = *(void (**)(_BYTE *, uint64_t))(v45 + 8);
  v45 = v8;
  v23(v12, v8);
  v24 = (*(uint64_t (**)(_BYTE *, uint64_t))(v51 + 88))(v7, v50);
  if (v24 == *MEMORY[0x1E0DAE8C0])
  {
    v25 = sub_1DC400928();
    swift_retain();
    v26 = sub_1DC2BFC70(v25, v1, (uint64_t)v52, MEMORY[0x1E0DAE8C0]);
    v27 = v47;
LABEL_12:
    swift_bridgeObjectRelease();
    swift_release();
    (*(void (**)(_BYTE *, uint64_t))(v51 + 8))(v7, v50);
    goto LABEL_13;
  }
  v27 = v47;
  if (v24 == *MEMORY[0x1E0DAE8D0])
  {
    v28 = sub_1DC400928();
    swift_retain();
    v29 = (unsigned int *)MEMORY[0x1E0DAE8D0];
    v30 = &v53;
LABEL_11:
    v26 = sub_1DC2BFC70(v28, v1, (uint64_t)v30, v29);
    goto LABEL_12;
  }
  if (v24 == *MEMORY[0x1E0DAE948])
  {
    v28 = sub_1DC400928();
    swift_retain();
    v29 = (unsigned int *)MEMORY[0x1E0DAE948];
    v30 = &v54;
    goto LABEL_11;
  }
  if (v24 == *MEMORY[0x1E0DAE930])
  {
    v28 = sub_1DC400928();
    swift_retain();
    v29 = (unsigned int *)MEMORY[0x1E0DAE930];
    v30 = &v55;
    goto LABEL_11;
  }
  if (v24 == *MEMORY[0x1E0DAE8E0])
  {
    v28 = sub_1DC400928();
    swift_retain();
    v29 = (unsigned int *)MEMORY[0x1E0DAE8E0];
    v30 = &v56;
    goto LABEL_11;
  }
  if (v24 != *MEMORY[0x1E0DAE928])
  {
    result = sub_1DC4099DC();
    __break(1u);
    return result;
  }
  v26 = MEMORY[0x1E0DEE9D8];
LABEL_13:
  v42 = v23;
  v47 = (_BYTE *)v20;
  v48(v27, v41, v49);
  sub_1DC112894(v26);
  swift_bridgeObjectRelease();
  swift_allocObject();
  sub_1DC404894();
  v31 = swift_retain();
  MEMORY[0x1DF0C9530](v31);
  if (*(_QWORD *)((v57 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v57 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1DC408D4C();
  sub_1DC408D64();
  sub_1DC408CF8();
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v33 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1DC3FFC80();

  __swift_project_boxed_opaque_existential_1(v43, *(_QWORD *)(v1 + 40));
  v34 = v44;
  sub_1DC400A60();
  v35 = v46;
  sub_1DC401240();
  v42(v34, v45);
  sub_1DC400904();
  (*(void (**)(_BYTE *, uint64_t))(v51 + 8))(v35, v50);
  v36 = (void *)sub_1DC408A1C();
  v37 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v36);

  sub_1DC18B874(v57);
  swift_bridgeObjectRelease();
  v48(v27, *MEMORY[0x1E0DB7CF0], v49);
  swift_allocObject();
  v38 = sub_1DC404894();
  swift_release();
  swift_release();
  return v38;
}

uint64_t sub_1DC2BF6E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t ObjCClassFromMetadata;
  id v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v26[2];
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;

  v1 = v0;
  v2 = sub_1DC4008EC();
  v29 = *(_QWORD *)(v2 - 8);
  v30 = v2;
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1DC40124C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1DC4048C4();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1DC4008E0();
  swift_retain();
  v14 = sub_1DC2BFE10(v13, v1);
  swift_bridgeObjectRelease();
  swift_release();
  v15 = *MEMORY[0x1E0DB7CE0];
  v28 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 104);
  v28(v12, v15, v9);
  sub_1DC112894(v14);
  swift_bridgeObjectRelease();
  v16 = sub_1DC4048B8();
  swift_allocObject();
  v27 = sub_1DC404894();
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v18 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v19 = sub_1DC3FFC80();
  v26[0] = v20;
  v26[1] = v19;

  __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 40));
  sub_1DC400A60();
  sub_1DC4011EC();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_1DC4008D4();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v4, v30);
  v21 = (void *)sub_1DC408A1C();
  v22 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v21);

  v28(v12, *MEMORY[0x1E0DB7CF0], v9);
  sub_1DC089DA4(0, (unint64_t *)&qword_1EDB3FF10, (uint64_t (*)(uint64_t))sub_1DC1F4E1C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v23 = swift_allocObject();
  v24 = MEMORY[0x1E0DB7CC8];
  *(_OWORD *)(v23 + 16) = xmmword_1DC40DC10;
  *(_QWORD *)(v23 + 56) = v16;
  *(_QWORD *)(v23 + 64) = v24;
  *(_QWORD *)(v23 + 32) = v27;
  swift_allocObject();
  return sub_1DC404894();
}

uint64_t sub_1DC2BFA68()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 72);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1DC2BFAA4()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DC2BFAD0(void (*a1)(void), uint64_t a2)
{
  uint64_t v2;

  return sub_1DC2BEC90(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_1DC2BFAD8()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

void sub_1DC2BFAFC(uint64_t a1)
{
  uint64_t v1;

  sub_1DC2BEC2C(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1DC2BFB04(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v5 = type metadata accessor for SortWatchlistCommandContext(0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x1E0DEE9D8];
  if (v8)
  {
    v14 = v2;
    v18 = MEMORY[0x1E0DEE9D8];
    sub_1DC4097B4();
    v10 = sub_1DC400970();
    v11 = *(_QWORD *)(v10 - 8);
    v12 = a1 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
    v15 = (_QWORD *)(a2 + 16);
    v16 = v11;
    v17 = v10;
    v13 = *(_QWORD *)(v11 + 72);
    do
    {
      __swift_project_boxed_opaque_existential_1(v15, *(_QWORD *)(a2 + 40));
      sub_1DC400A60();
      (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(&v7[*(int *)(v5 + 20)], v12, v17);
      v7[*(int *)(v5 + 24)] = 0;
      sub_1DC36F9A0((uint64_t)v7);
      sub_1DC2BFF64((uint64_t)v7);
      sub_1DC40979C();
      sub_1DC4097C0();
      sub_1DC4097CC();
      sub_1DC4097A8();
      v12 += v13;
      --v8;
    }
    while (v8);
    return v18;
  }
  return result;
}

uint64_t sub_1DC2BFC70(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int *a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  _QWORD v19[2];
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v8 = type metadata accessor for SortWatchlistCommandContext(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x1E0DEE9D8];
  if (v11)
  {
    v19[1] = v4;
    v24 = MEMORY[0x1E0DEE9D8];
    sub_1DC4097B4();
    v13 = sub_1DC400940();
    v14 = *(_QWORD *)(v13 - 8);
    v15 = a1 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
    v22 = v14;
    v23 = v13;
    v20 = *(_QWORD *)(v14 + 72);
    v21 = (_QWORD *)(a2 + 16);
    v16 = *a4;
    do
    {
      __swift_project_boxed_opaque_existential_1(v21, *(_QWORD *)(a2 + 40));
      sub_1DC400A60();
      v17 = &v10[*(int *)(v8 + 20)];
      (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v17, v15, v23);
      v18 = sub_1DC400970();
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v17, v16, v18);
      v10[*(int *)(v8 + 24)] = 1;
      sub_1DC36F9A0((uint64_t)v10);
      sub_1DC2BFF64((uint64_t)v10);
      sub_1DC40979C();
      sub_1DC4097C0();
      sub_1DC4097CC();
      sub_1DC4097A8();
      v15 += v20;
      --v11;
    }
    while (v11);
    return v24;
  }
  return result;
}

uint64_t sub_1DC2BFE10(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[2];
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v5 = sub_1DC40124C();
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x1E0DEE9D8];
  if (v10)
  {
    v15[1] = v2;
    v16 = v7;
    v18 = MEMORY[0x1E0DEE9D8];
    v17 = v6;
    sub_1DC4097B4();
    v12 = *(_QWORD *)(sub_1DC4008EC() - 8);
    v13 = a1 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
    v14 = *(_QWORD *)(v12 + 72);
    do
    {
      __swift_project_boxed_opaque_existential_1((_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 40));
      sub_1DC400A60();
      sub_1DC36FE4C((uint64_t)v9, v13);
      (*(void (**)(char *, uint64_t))(v16 + 8))(v9, v17);
      sub_1DC40979C();
      sub_1DC4097C0();
      sub_1DC4097CC();
      sub_1DC4097A8();
      v13 += v14;
      --v10;
    }
    while (v10);
    return v18;
  }
  return result;
}

uint64_t sub_1DC2BFF64(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SortWatchlistCommandContext(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DC2BFFA0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC2BFFAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1DC4052FC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_1DC2BFFE8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC2BFFF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1DC4052FC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_1DC2C0034(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;

  v6 = sub_1DC407C60();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC4074BC();
  if ((*(unsigned int (**)(char *, uint64_t))(v7 + 88))(v9, v6) != *MEMORY[0x1E0D5CD08])
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  (*(void (**)(char *, uint64_t))(v7 + 96))(v9, v6);
  v10 = sub_1DC407E1C();
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t))(v11 + 88))(v9, v10) != *MEMORY[0x1E0D5D5B0])
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v9, v10);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    if (MEMORY[0x1DF0CAD78](result + 16))
    {
      sub_1DC382628(a3, a4);
      swift_release();
      return swift_unknownObjectRelease();
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_1DC2C01A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    if (MEMORY[0x1DF0CAD78](result + 16))
    {
      sub_1DC382628(a2, a3);
      swift_release();
      return swift_unknownObjectRelease();
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_1DC2C023C()
{
  uint64_t v0;

  sub_1DC148A20(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

unint64_t sub_1DC2C0280()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1F0351128;
  if (!qword_1F0351128)
  {
    v1 = sub_1DC0821D4(255, &qword_1F0351130);
    result = MEMORY[0x1DF0CAB8C](&protocol conformance descriptor for UIActivityIndicatorView, v1);
    atomic_store(result, (unint64_t *)&qword_1F0351128);
  }
  return result;
}

void sub_1DC2C02D8(uint64_t a1)
{
  MEMORY[0x1DF0CAB8C](&protocol conformance descriptor for UIActivityIndicatorView, a1);
  JUMPOUT(0x1DF0C7418);
}

uint64_t sub_1DC2C030C()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1DC2C0334(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_1DC0FF574(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v4 + 64);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(sub_1DC400280() - 8) + 80);
  return sub_1DC2C0034(a1, *(_QWORD *)(v1 + 16), v1 + v5, v1 + ((v5 + v6 + v7) & ~v7));
}

uint64_t sub_1DC2C03A0()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocObject();
}

uint64_t objectdestroy_2Tm_4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;

  sub_1DC0FF574(0);
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v3 + 64);
  v6 = sub_1DC400280();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = (v4 + v5 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v0 + v4, v2);
  (*(void (**)(unint64_t, uint64_t))(v7 + 8))(v0 + v8, v6);
  return swift_deallocObject();
}

uint64_t sub_1DC2C0484()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1DC0FF574(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = *(unsigned __int8 *)(*(_QWORD *)(sub_1DC400280() - 8) + 80);
  return sub_1DC2C01A8(*(_QWORD *)(v0 + 16), v0 + v3, v0 + ((v3 + v4 + v5) & ~v5));
}

uint64_t Assembly.__allocating_init()()
{
  uint64_t v0;

  v0 = swift_allocObject();
  Assembly.init()();
  return v0;
}

uint64_t Assembly.assemblies.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Assembly.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t Assembly.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t method lookup function for Assembly()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of Assembly.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t sub_1DC2C0578(void **a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t, uint64_t);
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int *v44;
  uint64_t v45;
  void *v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v55;
  char *v56;
  void *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;

  v62 = a3;
  v59 = a2;
  v4 = sub_1DC4010E4();
  v68 = *(_QWORD *)(v4 - 8);
  v69 = v4;
  MEMORY[0x1E0C80A78](v4);
  v67 = (char *)&v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = type metadata accessor for StockFeedServiceContext();
  MEMORY[0x1E0C80A78](v66);
  v65 = (uint64_t)&v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = sub_1DC407714();
  v71 = *(_QWORD *)(v63 - 8);
  MEMORY[0x1E0C80A78](v63);
  v61 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = sub_1DC40070C();
  v8 = *(_QWORD *)(v70 - 8);
  MEMORY[0x1E0C80A78](v70);
  v10 = (char *)&v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = type metadata accessor for StockFeedServiceConfig();
  MEMORY[0x1E0C80A78](v60);
  v58 = (char *)&v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v64 = (uint64_t)&v55 - v13;
  v14 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1DC089DA4(0, qword_1EDB320F8, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedKnobsConfig, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v55 - v16;
  sub_1DC089DA4(0, qword_1EDB2E388, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedConfig, v14);
  MEMORY[0x1E0C80A78](v18);
  v20 = (uint64_t *)((char *)&v55 - v19);
  v21 = type metadata accessor for StockFeedContentConfig();
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v55 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v24);
  v26 = (char *)&v55 - v25;
  v57 = *a1;
  sub_1DC089DA4(0, &qword_1EDB42190, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedGroupConfig, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v27 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for StockFeedGroupConfig() - 8) + 80);
  v28 = (v27 + 32) & ~v27;
  v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = xmmword_1DC40DC10;
  if (qword_1EDB41E38 != -1)
    swift_once();
  v30 = v29 + v28;
  sub_1DC145CD4();
  v32 = v31;
  v33 = __swift_project_value_buffer(v31, (uint64_t)qword_1EDB5E238);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v30, v33, v32);
  v34 = type metadata accessor for StockFeedConfig();
  v35 = (char *)v20 + *(int *)(v34 + 20);
  sub_1DC3FFFE0();
  v36 = sub_1DC3FFFEC();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v35, 0, 1, v36);
  *v20 = v29;
  (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v20, 0, 1, v34);
  v37 = type metadata accessor for StockFeedKnobsConfig();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v17, 1, 1, v37);
  v56 = v26;
  sub_1DC1D439C((uint64_t)v20, (uint64_t)v17, (uint64_t)v26);
  v55 = v8;
  v38 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v39 = v70;
  v38(v10, v59 + OBJC_IVAR____TtC8StocksUI29StockFeedServiceConfigFetcher_appConfiguration, v70);
  v40 = v61;
  v41 = v63;
  (*(void (**)(char *, _QWORD, uint64_t))(v71 + 104))(v61, *MEMORY[0x1E0D5B2F0], v63);
  sub_1DC0990BC((uint64_t)v26, (uint64_t)v23, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedContentConfig);
  v42 = v65;
  sub_1DC0990BC(v62, v65, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedServiceContext);
  v43 = (uint64_t)v58;
  v38(v58, (uint64_t)v10, v39);
  v44 = (int *)v60;
  v45 = v71;
  (*(void (**)(uint64_t, char *, uint64_t))(v71 + 16))(v43 + *(int *)(v60 + 20), v40, v41);
  sub_1DC0990BC((uint64_t)v23, v43 + v44[6], (uint64_t (*)(_QWORD))type metadata accessor for StockFeedContentConfig);
  sub_1DC0990BC(v42, v43 + v44[7], (uint64_t (*)(_QWORD))type metadata accessor for StockFeedServiceContext);
  v46 = v57;
  *(_QWORD *)(v43 + v44[8]) = v57;
  v47 = v46;
  sub_1DC4006DC();
  v49 = v48;
  sub_1DC0926D8((uint64_t)v23, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedContentConfig);
  (*(void (**)(char *, uint64_t))(v45 + 8))(v40, v41);
  (*(void (**)(char *, uint64_t))(v55 + 8))(v10, v70);
  *(_QWORD *)(v43 + v44[9]) = v49;
  v50 = v67;
  v52 = v68;
  v51 = v69;
  (*(void (**)(char *, uint64_t, uint64_t))(v68 + 16))(v67, v42 + *(int *)(v66 + 20), v69);
  sub_1DC0926D8(v42, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedServiceContext);
  (*(void (**)(uint64_t, char *, uint64_t))(v52 + 32))(v43 + v44[10], v50, v51);
  sub_1DC092ED0(v43, v64, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedServiceConfig);
  sub_1DC089DA4(0, &qword_1EDB296B0, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedServiceConfig, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  v53 = sub_1DC402D58();
  sub_1DC0926D8((uint64_t)v56, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedContentConfig);
  return v53;
}

uint64_t sub_1DC2C0B4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC8StocksUI29StockFeedServiceConfigFetcher_appConfiguration;
  v2 = sub_1DC40070C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC8StocksUI29StockFeedServiceConfigFetcher_paidBundleConfigManager);
  return swift_deallocClassInstance();
}

uint64_t sub_1DC2C0BBC()
{
  return type metadata accessor for StockFeedServiceConfigFetcher(0);
}

uint64_t type metadata accessor for StockFeedServiceConfigFetcher(uint64_t a1)
{
  return sub_1DC08CD5C(a1, (uint64_t *)&unk_1EDB41558);
}

uint64_t sub_1DC2C0BD8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1DC40070C();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1DC2C0C58(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v10;

  v2 = type metadata accessor for StockFeedServiceContext();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  MEMORY[0x1E0C80A78](v2);
  sub_1DC2C1A4C();
  sub_1DC402E0C();
  sub_1DC0990BC(a1, (uint64_t)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for StockFeedServiceContext);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = swift_allocObject();
  sub_1DC092ED0((uint64_t)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v6 + v5, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedServiceContext);
  v7 = (void *)sub_1DC402C80();
  type metadata accessor for StockFeedServiceConfig();
  v8 = sub_1DC402D10();
  swift_release();
  swift_release();

  return v8;
}

uint64_t sub_1DC2C0D88(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  id v5;

  v5 = objc_msgSend(*(id *)(a1 + *a2), sel_appConfiguration);
  if ((objc_msgSend(v5, sel_respondsToSelector_, sel_paidBundleConfig) & 1) != 0)
  {
    objc_msgSend(v5, sel_paidBundleConfig);
    swift_unknownObjectRelease();
    sub_1DC089DA4(0, (unint64_t *)&qword_1EDB296F8, (uint64_t (*)(uint64_t))sub_1DC2C1A4C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    return sub_1DC402D58();
  }
  else
  {
    swift_unknownObjectRelease();
    __swift_project_boxed_opaque_existential_1((_QWORD *)(a1 + *a3), *(_QWORD *)(a1 + *a3 + 24));
    return sub_1DC408398();
  }
}

uint64_t sub_1DC2C0E84(void **a1)
{
  void *v1;
  void *v2;
  id v3;
  void *v4;
  uint64_t v5;

  v1 = *a1;
  sub_1DC402E0C();
  v2 = (void *)sub_1DC402C80();
  type metadata accessor for StockFeedContentConfig();
  sub_1DC402CF8();
  swift_release();

  *(_QWORD *)(swift_allocObject() + 16) = v1;
  v3 = v1;
  v4 = (void *)sub_1DC402C80();
  sub_1DC2C1B0C();
  v5 = sub_1DC402D04();
  swift_release();
  swift_release();

  return v5;
}

uint64_t sub_1DC2C0F70(void **a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t);
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int *v39;
  uint64_t v40;
  uint64_t v41;
  int *v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;

  v60 = a3;
  v5 = sub_1DC4010E4();
  v64 = *(_QWORD *)(v5 - 8);
  v65 = v5;
  MEMORY[0x1E0C80A78](v5);
  v63 = (char *)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = type metadata accessor for StockFeedServiceContext();
  MEMORY[0x1E0C80A78](v62);
  v59 = (uint64_t)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = sub_1DC407714();
  v67 = *(_QWORD *)(v57 - 8);
  MEMORY[0x1E0C80A78](v57);
  v56 = (char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = sub_1DC40070C();
  v54 = *(_QWORD *)(v66 - 8);
  v9 = v54;
  MEMORY[0x1E0C80A78](v66);
  v11 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = type metadata accessor for StockFeedServiceConfig();
  MEMORY[0x1E0C80A78](v55);
  v13 = (char *)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v61 = (uint64_t)&v51 - v15;
  sub_1DC2C1B0C();
  v17 = v16;
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v51 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for StockFeedContentConfig();
  MEMORY[0x1E0C80A78](v20);
  v52 = (uint64_t)&v51 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)&v51 - v23;
  v25 = *(int *)(v17 + 48);
  v26 = (uint64_t)&v19[v25];
  v53 = *a1;
  sub_1DC0990BC((uint64_t)a1 + v25, (uint64_t)&v19[v25], (uint64_t (*)(_QWORD))type metadata accessor for StockFeedContentConfig);
  v27 = v24;
  v58 = v24;
  sub_1DC092ED0(v26, (uint64_t)v24, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedContentConfig);
  v28 = a2 + OBJC_IVAR____TtC8StocksUI32NFFStockFeedServiceConfigFetcher_appConfiguration;
  v29 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v30 = v11;
  v31 = v11;
  v32 = v66;
  v29(v31, v28, v66);
  v33 = v67;
  v34 = v56;
  v35 = v57;
  (*(void (**)(char *, _QWORD, uint64_t))(v67 + 104))(v56, *MEMORY[0x1E0D5B2F0], v57);
  v36 = (uint64_t)v27;
  v37 = v52;
  sub_1DC0990BC(v36, v52, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedContentConfig);
  v38 = v59;
  sub_1DC0990BC((uint64_t)v60, v59, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedServiceContext);
  v29(v13, (uint64_t)v30, v32);
  v39 = (int *)v55;
  v40 = v35;
  (*(void (**)(char *, char *, uint64_t))(v33 + 16))(&v13[*(int *)(v55 + 20)], v34, v35);
  v41 = v37;
  sub_1DC0990BC(v37, (uint64_t)&v13[v39[6]], (uint64_t (*)(_QWORD))type metadata accessor for StockFeedContentConfig);
  sub_1DC0990BC(v38, (uint64_t)&v13[v39[7]], (uint64_t (*)(_QWORD))type metadata accessor for StockFeedServiceContext);
  v42 = v39;
  v43 = v53;
  *(_QWORD *)&v13[v39[8]] = v53;
  v60 = v43;
  sub_1DC4006DC();
  v45 = v44;
  sub_1DC0926D8(v41, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedContentConfig);
  (*(void (**)(char *, uint64_t))(v67 + 8))(v34, v40);
  (*(void (**)(char *, uint64_t))(v54 + 8))(v30, v66);
  *(_QWORD *)&v13[v39[9]] = v45;
  v46 = v63;
  v48 = v64;
  v47 = v65;
  (*(void (**)(char *, uint64_t, uint64_t))(v64 + 16))(v63, v38 + *(int *)(v62 + 20), v65);
  sub_1DC0926D8(v38, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedServiceContext);
  (*(void (**)(char *, char *, uint64_t))(v48 + 32))(&v13[v42[10]], v46, v47);
  sub_1DC092ED0((uint64_t)v13, v61, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedServiceConfig);
  sub_1DC089DA4(0, &qword_1EDB296B0, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedServiceConfig, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  v49 = sub_1DC402D58();

  sub_1DC0926D8((uint64_t)v58, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedContentConfig);
  return v49;
}

uint64_t sub_1DC2C13DC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v12;

  sub_1DC089DA4(0, (unint64_t *)&unk_1EDB28A70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v12 - v3;
  v5 = sub_1DC3FFDD0();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EDB274A0 != -1)
    swift_once();
  if ((sub_1DC401300() & 1) != 0)
  {
    if (qword_1F034B108 != -1)
      swift_once();
    sub_1DC080808(&qword_1F0351140, type metadata accessor for NFFStockFeedServiceConfigFetcher, (uint64_t)&unk_1DC423C64);
    sub_1DC4012D0();
    sub_1DC3FFDC4();
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
    {
      sub_1DC212C0C((uint64_t)v4);
      sub_1DC2C1C6C();
      swift_allocError();
      *v9 = 1;
      sub_1DC292790();
      swift_allocObject();
      return sub_1DC402D4C();
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
      v10 = sub_1DC2C1CB0((uint64_t)v8);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
    return v10;
  }
  else
  {
    __swift_project_boxed_opaque_existential_1((_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 40));
    return sub_1DC400D9C();
  }
}

char *sub_1DC2C1628()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  v1 = type metadata accessor for StockFeedContentConfig();
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v8 - v5;
  sub_1DC407570();
  swift_allocObject();
  sub_1DC407564();
  sub_1DC080808(&qword_1EDB33DB8, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedContentConfig, (uint64_t)&unk_1DC415D40);
  sub_1DC402458();
  swift_release();
  if (!v0)
  {
    sub_1DC0990BC((uint64_t)v6, (uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedContentConfig);
    sub_1DC089DA4(0, &qword_1EDB296A8, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedContentConfig, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    v3 = (char *)sub_1DC402D58();
    sub_1DC0926D8((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedContentConfig);
  }
  return v3;
}

uint64_t sub_1DC2C1794()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  v1 = v0 + OBJC_IVAR____TtC8StocksUI32NFFStockFeedServiceConfigFetcher_appConfiguration;
  v2 = sub_1DC40070C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC8StocksUI32NFFStockFeedServiceConfigFetcher_paidBundleConfigManager);
  return swift_deallocClassInstance();
}

uint64_t sub_1DC2C180C()
{
  return type metadata accessor for NFFStockFeedServiceConfigFetcher(0);
}

uint64_t type metadata accessor for NFFStockFeedServiceConfigFetcher(uint64_t a1)
{
  return sub_1DC08CD5C(a1, (uint64_t *)&unk_1EDB3AE78);
}

uint64_t sub_1DC2C1828()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1DC40070C();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1DC2C18AC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  unint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v11;

  v2 = type metadata accessor for StockFeedServiceContext();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  MEMORY[0x1E0C80A78](v2);
  sub_1DC2C1A4C();
  sub_1DC402E0C();
  v5 = (void *)sub_1DC402C80();
  sub_1DC2C1B0C();
  sub_1DC402D10();
  swift_release();

  sub_1DC0990BC(a1, (uint64_t)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for StockFeedServiceContext);
  v6 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v7 = swift_allocObject();
  sub_1DC092ED0((uint64_t)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v7 + v6, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedServiceContext);
  v8 = (void *)sub_1DC402C80();
  type metadata accessor for StockFeedServiceConfig();
  v9 = sub_1DC402D10();
  swift_release();
  swift_release();

  return v9;
}

uint64_t sub_1DC2C1A24()
{
  uint64_t v0;

  return sub_1DC2C0D88(v0, &OBJC_IVAR____TtC8StocksUI29StockFeedServiceConfigFetcher_newsConfigurationManager, &OBJC_IVAR____TtC8StocksUI29StockFeedServiceConfigFetcher_paidBundleConfigManager);
}

unint64_t sub_1DC2C1A4C()
{
  unint64_t result;

  result = qword_1EDB284C8;
  if (!qword_1EDB284C8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EDB284C8);
  }
  return result;
}

uint64_t sub_1DC2C1A8C(void **a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for StockFeedServiceContext() - 8) + 80);
  return sub_1DC2C0578(a1, a2, v2 + ((v5 + 16) & ~v5));
}

uint64_t sub_1DC2C1AE4()
{
  uint64_t v0;

  return sub_1DC2C0D88(v0, &OBJC_IVAR____TtC8StocksUI32NFFStockFeedServiceConfigFetcher_newsConfigurationManager, &OBJC_IVAR____TtC8StocksUI32NFFStockFeedServiceConfigFetcher_paidBundleConfigManager);
}

void sub_1DC2C1B0C()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EDB3FA40)
  {
    sub_1DC2C1A4C();
    type metadata accessor for StockFeedContentConfig();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EDB3FA40);
  }
}

uint64_t sub_1DC2C1B7C(void **a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for StockFeedServiceContext() - 8) + 80);
  return sub_1DC2C0F70(a1, a2, (void *)(v2 + ((v5 + 16) & ~v5)));
}

uint64_t sub_1DC2C1BD4()
{
  uint64_t v0;

  return sub_1DC2C13DC(v0);
}

uint64_t sub_1DC2C1BEC()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_1DC2C1C10@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  void *v5;
  uint64_t v6;
  uint64_t v7;

  v5 = *(void **)(v2 + 16);
  sub_1DC2C1B0C();
  v7 = (uint64_t)a2 + *(int *)(v6 + 48);
  *a2 = v5;
  sub_1DC0990BC(a1, v7, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedContentConfig);
  return v5;
}

unint64_t sub_1DC2C1C6C()
{
  unint64_t result;

  result = qword_1F0351148;
  if (!qword_1F0351148)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC423DB4, &type metadata for NFFStockFeedServiceConfigFetcher.Errors);
    atomic_store(result, (unint64_t *)&qword_1F0351148);
  }
  return result;
}

uint64_t sub_1DC2C1CB0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;

  v2 = sub_1DC3FFDD0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_1DC3FFA10();
  v6 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EDB2CE08 != -1)
    swift_once();
  v9 = (void *)qword_1EDB2CE00;
  sub_1DC089DA4(0, (unint64_t *)&qword_1EDB400C0, (uint64_t (*)(uint64_t))sub_1DC1542B8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1DC40DC10;
  v11 = v9;
  v12 = sub_1DC3FFD7C();
  v14 = v13;
  *(_QWORD *)(v10 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v10 + 64) = sub_1DC0E7FAC();
  *(_QWORD *)(v10 + 32) = v12;
  *(_QWORD *)(v10 + 40) = v14;
  sub_1DC408FE0();
  sub_1DC403F28();

  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  sub_1DC3FFA04();
  v15 = objc_msgSend((id)objc_opt_self(), sel_sharedSession);
  v16 = sub_1DC402C68();

  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v19);
  return v16;
}

uint64_t storeEnumTagSinglePayload for NFFStockFeedServiceConfigFetcher.Errors(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1DC2C1EF4 + 4 * byte_1DC423BD5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1DC2C1F28 + 4 * byte_1DC423BD0[v4]))();
}

uint64_t sub_1DC2C1F28(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC2C1F30(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC2C1F38);
  return result;
}

uint64_t sub_1DC2C1F44(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC2C1F4CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1DC2C1F50(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC2C1F58(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NFFStockFeedServiceConfigFetcher.Errors()
{
  return &type metadata for NFFStockFeedServiceConfigFetcher.Errors;
}

unint64_t sub_1DC2C1F78()
{
  unint64_t result;

  result = qword_1F0351150;
  if (!qword_1F0351150)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC423D8C, &type metadata for NFFStockFeedServiceConfigFetcher.Errors);
    atomic_store(result, (unint64_t *)&qword_1F0351150);
  }
  return result;
}

uint64_t type metadata accessor for ShapeView()
{
  return objc_opt_self();
}

unint64_t sub_1DC2C2130()
{
  unint64_t result;

  result = qword_1EDB3F820;
  if (!qword_1EDB3F820)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EDB3F820);
  }
  return result;
}

uint64_t sub_1DC2C216C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1DC2C2190(a4);
}

uint64_t sub_1DC2C2190(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE v10[16];
  _OWORD v11[2];
  uint64_t v12;
  _OWORD v13[2];
  uint64_t v14;

  sub_1DC1EA918(0);
  MEMORY[0x1E0C80A78](v2);
  v4 = &v10[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for StocksActivity(0);
  MEMORY[0x1E0C80A78](v5);
  v7 = &v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1DC1CBAD4(a1, (uint64_t)v7);
  swift_storeEnumTagMultiPayload();
  v8 = sub_1DC403340();
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v4, 1, 1, v8);
  v14 = 0;
  memset(v13, 0, sizeof(v13));
  v12 = 0;
  memset(v11, 0, sizeof(v11));
  swift_retain();
  sub_1DC22BAE0((uint64_t)v7, 0, (uint64_t)v4, (uint64_t)v13, 0, 0, (uint64_t)v11);
  swift_release();
  sub_1DC17C7C8((uint64_t)v11, &qword_1EDB29410, (unint64_t *)&unk_1EDB29400);
  sub_1DC17C7C8((uint64_t)v13, &qword_1EDB2ACD0, (unint64_t *)&qword_1EDB2ACC0);
  sub_1DC0926D8((uint64_t)v4, (uint64_t (*)(_QWORD))sub_1DC1EA918);
  sub_1DC0926D8((uint64_t)v7, type metadata accessor for StocksActivity);
  return swift_release();
}

uint64_t sub_1DC2C2330()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC2C233C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1DC4008EC();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t sub_1DC2C23B8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC2C23C4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_1DC4008EC();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for ForYouFeedPriceChangeDisplayBlueprintModifier()
{
  uint64_t result;

  result = qword_1EDB41220;
  if (!qword_1EDB41220)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1DC2C2474()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1DC4008EC();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1DC2C24E8(uint64_t a1, void (*a2)(char *), uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int *v25;
  void (*v26)(char *);
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  void (*v31)(char *);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36[16];
  uint64_t v37;
  char *v38;
  __int128 v39;
  __int128 v40;
  char v41[23];
  char v42;

  v30 = a3;
  v31 = a2;
  sub_1DC0FE574(0, &qword_1EDB2A288, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB9A28]);
  v34 = *(_QWORD *)(v4 - 8);
  v35 = v4;
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v30 - v5;
  sub_1DC090728();
  MEMORY[0x1E0C80A78](v7);
  sub_1DC0FE574(0, (unint64_t *)&qword_1EDB2AB80, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790]);
  v9 = v8;
  v33 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v30 - v10;
  v42 = 0;
  sub_1DC406C70();
  v32 = v12;
  v37 = v3;
  v38 = &v42;
  v13 = sub_1DC155978((void (*)(char *))sub_1DC2C3008, (uint64_t)v36, (uint64_t)v41);
  sub_1DC0FE574(0, (unint64_t *)&qword_1EDB29D00, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60]);
  v15 = v14;
  v16 = sub_1DC090AA8(&qword_1EDB29CE8, MEMORY[0x1E0DB7B88]);
  v17 = sub_1DC090AA8(&qword_1EDB29CE0, MEMORY[0x1E0DB7B80]);
  MEMORY[0x1DF0C311C](v13, v15, v16, v17);
  type metadata accessor for ForYouFeedSectionDescriptor();
  type metadata accessor for ForYouFeedModel();
  sub_1DC080808(&qword_1EDB37600, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedSectionDescriptor, (uint64_t)&unk_1DC425AEC);
  sub_1DC080808((unint64_t *)&unk_1EDB2E070, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedModel, (uint64_t)&unk_1DC42ED60);
  sub_1DC406C64();
  v18 = sub_1DC19A7D0();
  sub_1DC4078A0();
  sub_1DC407894();
  type metadata accessor for ForYouFeedServiceConfig();
  sub_1DC080808(&qword_1EDB347D0, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedServiceConfig, (uint64_t)&unk_1DC431F70);
  v19 = sub_1DC40787C();
  swift_release();
  if (v19)
  {
    *((_QWORD *)&v40 + 1) = sub_1DC407420();
    *(_QWORD *)&v39 = v19;
  }
  else
  {
    v39 = 0u;
    v40 = 0u;
  }
  sub_1DC406D00();
  sub_1DC1F0AAC(v18);
  v20 = v33;
  if (v42 == 1)
  {
    sub_1DC12E67C();
    v22 = &v6[*(int *)(v21 + 48)];
    (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v6, v11, v9);
    v23 = *MEMORY[0x1E0DB7FB8];
    v24 = sub_1DC404984();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(v22, v23, v24);
    v25 = (unsigned int *)MEMORY[0x1E0DB9A00];
  }
  else
  {
    v25 = (unsigned int *)MEMORY[0x1E0DB9A20];
  }
  v26 = v31;
  v28 = v34;
  v27 = v35;
  (*(void (**)(char *, _QWORD, uint64_t))(v34 + 104))(v6, *v25, v35);
  v26(v6);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v6, v27);
  return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v11, v9);
}

void sub_1DC2C285C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  _QWORD v27[14];
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;

  v27[8] = a3;
  v27[13] = a2;
  v35 = a4;
  v5 = sub_1DC4011C8();
  MEMORY[0x1E0C80A78](v5);
  v27[11] = (char *)v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for PriceViewModel();
  MEMORY[0x1E0C80A78](v7);
  v27[12] = (char *)v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC092F50(0, &qword_1EDB353E0, (void (*)(uint64_t))type metadata accessor for StockSparklineViewModel);
  MEMORY[0x1E0C80A78](v9);
  v29 = (char *)v27 - v10;
  sub_1DC092F50(0, &qword_1EDB28DC0, (void (*)(uint64_t))MEMORY[0x1E0DAF040]);
  MEMORY[0x1E0C80A78](v11);
  v27[9] = (char *)v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v33 = (char *)v27 - v14;
  v28 = sub_1DC4008EC();
  MEMORY[0x1E0C80A78](v28);
  v31 = (char *)v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC092F50(0, &qword_1EDB2AD80, (void (*)(uint64_t))MEMORY[0x1E0D5A418]);
  MEMORY[0x1E0C80A78](v16);
  v34 = (char *)v27 - v17;
  v30 = type metadata accessor for StockViewModel();
  MEMORY[0x1E0C80A78](v30);
  v27[10] = (char *)v27 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v20 = sub_1DC4010E4();
  MEMORY[0x1E0C80A78](v20);
  v32 = (char *)v27 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v22);
  v23 = type metadata accessor for ForYouFeedSectionDescriptor();
  MEMORY[0x1E0C80A78](v23);
  v27[7] = (char *)v27 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v25);
  sub_1DC0FE574(0, (unint64_t *)&qword_1EDB29D00, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60]);
  v36 = a1;
  sub_1DC4046FC();
  v26 = (char *)sub_1DC2C2B90 + 4 * byte_1DC423E70[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1DC2C2B90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1DC0926D8(v1, (uint64_t (*)(_QWORD))type metadata accessor for ForYouFeedSectionDescriptor);
  return (*(uint64_t (**)(_QWORD, _QWORD, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(*(_QWORD *)(v2 - 104), *(_QWORD *)(v2 - 96), v0);
}

uint64_t sub_1DC2C2FDC()
{
  return sub_1DC080808(qword_1EDB41BC8, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedPriceChangeDisplayBlueprintModifier, (uint64_t)&unk_1DC423EC8);
}

void sub_1DC2C3008(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  sub_1DC2C285C(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

uint64_t destroy for StockSearchSectionHeaderViewModel(uint64_t a1)
{
  uint64_t result;

  swift_bridgeObjectRelease();
  result = *(_QWORD *)(a1 + 24);
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

_QWORD *initializeWithCopy for StockSearchSectionHeaderViewModel(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  swift_bridgeObjectRetain();
  if (v5)
  {
    a1[2] = a2[2];
    a1[3] = v5;
    v6 = a2[5];
    a1[4] = a2[4];
    a1[5] = v6;
    a1[6] = a2[6];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v7 = *((_OWORD *)a2 + 2);
    *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
    *((_OWORD *)a1 + 2) = v7;
    a1[6] = a2[6];
  }
  return a1;
}

_QWORD *assignWithCopy for StockSearchSectionHeaderViewModel(_QWORD *a1, _QWORD *a2)
{
  _OWORD *v4;
  _OWORD *v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = a1 + 2;
  v5 = a2 + 2;
  v6 = a2[3];
  if (a1[3])
  {
    if (v6)
    {
      a1[2] = a2[2];
      a1[3] = a2[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[4] = a2[4];
      a1[5] = a2[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[6] = a2[6];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1DC21B394((uint64_t)(a1 + 2));
      v7 = a2[6];
      v8 = *((_OWORD *)a2 + 2);
      *v4 = *v5;
      *((_OWORD *)a1 + 2) = v8;
      a1[6] = v7;
    }
  }
  else if (v6)
  {
    a1[2] = a2[2];
    a1[3] = a2[3];
    a1[4] = a2[4];
    a1[5] = a2[5];
    a1[6] = a2[6];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v9 = *v5;
    v10 = *((_OWORD *)a2 + 2);
    a1[6] = a2[6];
    *v4 = v9;
    *((_OWORD *)a1 + 2) = v10;
  }
  return a1;
}

__n128 __swift_memcpy56_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for StockSearchSectionHeaderViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(a1 + 24))
    goto LABEL_5;
  v5 = *(_QWORD *)(a2 + 24);
  if (!v5)
  {
    sub_1DC21B394(a1 + 16);
LABEL_5:
    v7 = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(a1 + 32) = v7;
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    return a1;
  }
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for StockSearchSectionHeaderViewModel(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 56))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for StockSearchSectionHeaderViewModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for StockSearchSectionHeaderViewModel()
{
  return &type metadata for StockSearchSectionHeaderViewModel;
}

uint64_t sub_1DC2C3388@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t started;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  id v29;
  _QWORD v31[3];
  uint64_t v32;
  _UNKNOWN **v33;
  _BYTE v34[24];
  uint64_t v35;
  _BYTE v36[24];
  uint64_t v37;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC096268(0, (unint64_t *)&unk_1EDB28C90);
  result = sub_1DC402608();
  if (v37)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1DC096268(0, (unint64_t *)&unk_1EDB37240);
    result = sub_1DC402608();
    v5 = v35;
    if (v35)
    {
      sub_1DC2C3808();
      v6 = swift_allocObject();
      *(_OWORD *)(v6 + 16) = xmmword_1DC410E30;
      v7 = type metadata accessor for AppSessionEndEventTranslator();
      v8 = swift_allocObject();
      *(_QWORD *)(v6 + 56) = v7;
      *(_QWORD *)(v6 + 64) = &off_1EA4560C0;
      *(_QWORD *)(v6 + 32) = v8;
      started = type metadata accessor for AppSessionStartEventTranslator();
      v10 = swift_allocObject();
      *(_QWORD *)(v6 + 96) = started;
      *(_QWORD *)(v6 + 104) = &off_1EA455480;
      *(_QWORD *)(v6 + 72) = v10;
      v11 = type metadata accessor for ArticleEngagementEventTranslator();
      v12 = swift_allocObject();
      *(_QWORD *)(v6 + 136) = v11;
      *(_QWORD *)(v6 + 144) = &off_1EA45C658;
      *(_QWORD *)(v6 + 112) = v12;
      v13 = type metadata accessor for FeedViewEventTranslator();
      v14 = swift_allocObject();
      *(_QWORD *)(v6 + 176) = v13;
      *(_QWORD *)(v6 + 184) = &off_1EA455098;
      *(_QWORD *)(v6 + 152) = v14;
      v15 = type metadata accessor for WatchSymbolEventTranslator();
      v16 = swift_allocObject();
      *(_QWORD *)(v6 + 216) = v15;
      *(_QWORD *)(v6 + 224) = &off_1EA462398;
      *(_QWORD *)(v6 + 192) = v16;
      v17 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v34, v5);
      v18 = MEMORY[0x1E0C80A78](v17);
      v20 = (_QWORD *)((char *)&v31[-1] - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, __n128))(v21 + 16))(v20, v18);
      v22 = *v20;
      v32 = type metadata accessor for AppReviewRequestManager();
      v33 = &off_1EA46D988;
      v31[0] = v22;
      v23 = (char *)objc_allocWithZone((Class)type metadata accessor for StocksEngagementEventProcessor());
      v24 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v31, v32);
      v25 = MEMORY[0x1E0C80A78](v24);
      v27 = (_QWORD *)((char *)&v31[-1] - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, __n128))(v28 + 16))(v27, v25);
      v29 = sub_1DC2C3674((uint64_t)v36, *v27, v6, v23);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
      result = sub_1DC080808(&qword_1EDB2C0E8, (uint64_t (*)(uint64_t))type metadata accessor for StocksEngagementEventProcessor, (uint64_t)&protocol conformance descriptor for StocksEngagementEventProcessor);
      *a2 = v29;
      a2[1] = result;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

id sub_1DC2C3674(uint64_t a1, uint64_t a2, uint64_t a3, char *a4)
{
  objc_class *ObjectType;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  char *v13;
  id v14;
  uint64_t v16;
  objc_super v17;
  _QWORD v18[5];

  ObjectType = (objc_class *)swift_getObjectType();
  v9 = sub_1DC402440();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (uint64_t *)((char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v18[3] = type metadata accessor for AppReviewRequestManager();
  v18[4] = &off_1EA46D988;
  v18[0] = a2;
  sub_1DC0824D4(a1, (uint64_t)&a4[OBJC_IVAR____TtC8StocksUI30StocksEngagementEventProcessor_featureAvailability]);
  sub_1DC0824D4((uint64_t)v18, (uint64_t)&a4[OBJC_IVAR____TtC8StocksUI30StocksEngagementEventProcessor_appReviewRequestManager]);
  *(_QWORD *)&a4[OBJC_IVAR____TtC8StocksUI30StocksEngagementEventProcessor_eventTranslators] = a3;
  sub_1DC402470();
  swift_allocObject();
  v13 = a4;
  *(_QWORD *)&v13[OBJC_IVAR____TtC8StocksUI30StocksEngagementEventProcessor_jsonDecoder] = sub_1DC402464();
  *v12 = sub_1DC2A932C;
  v12[1] = 0;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x1E0DB2FF8], v9);
  sub_1DC40244C();

  v17.receiver = v13;
  v17.super_class = ObjectType;
  v14 = objc_msgSendSuper2(&v17, sel_init);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v14;
}

uint64_t sub_1DC2C37E4()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1DC2C3808()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB3FFB8)
  {
    sub_1DC096268(255, &qword_1EDB2C2A0);
    v0 = sub_1DC4099C4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB3FFB8);
  }
}

uint64_t StockSearchCompositionalLayoutOptionsProvider.layoutOptions(for:)(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  uint64_t v15;

  v2 = sub_1DC406328();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1DC406748();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v15 - v11;
  *(_OWORD *)((char *)&v15 - v11) = xmmword_1DC423FC0;
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))((char *)&v15 - v11, *MEMORY[0x1E0DBC118], v6);
  v13 = objc_msgSend(a1, sel_horizontalSizeClass);
  if ((unint64_t)v13 < 2)
  {
    sub_1DC406310();
    sub_1DC406304();
    sub_1DC406304();
    sub_1DC406304();
    sub_1DC406304();
LABEL_6:
    sub_1DC4062E0();
    sub_1DC4062EC();
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v9, v12, v6);
    sub_1DC4062F8();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v12, v6);
  }
  if (v13 == (id)2)
  {
    sub_1DC40631C();
    sub_1DC406304();
    sub_1DC406304();
    sub_1DC406304();
    sub_1DC406304();
    goto LABEL_6;
  }
  sub_1DC406310();
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v12, v6);
}

uint64_t StockSearchCompositionalLayoutOptionsProvider.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t StockSearchCompositionalLayoutOptionsProvider.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1DC2C3A8C(void *a1)
{
  return StockSearchCompositionalLayoutOptionsProvider.layoutOptions(for:)(a1);
}

uint64_t method lookup function for StockSearchCompositionalLayoutOptionsProvider()
{
  return swift_lookUpClassMethod();
}

ValueMetadata *type metadata accessor for ForYouLocation()
{
  return &type metadata for ForYouLocation;
}

BOOL sub_1DC2C3ABC(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  _BOOL8 result;
  BOOL v4;
  char v5;

  v2 = *a1;
  result = (*a1 | *a2) == 0;
  if (v2)
    v4 = *a2 == 0;
  else
    v4 = 1;
  if (!v4)
  {
    sub_1DC0DEC4C();
    swift_retain();
    swift_retain();
    v5 = sub_1DC407618();
    swift_release();
    swift_release();
    return v5 & 1;
  }
  return result;
}

uint64_t sub_1DC2C3B3C()
{
  _QWORD *v0;

  if (*v0)
    return 0x726F73727563;
  else
    return 0x656546664F706F74;
}

uint64_t sub_1DC2C3B78()
{
  _QWORD *v0;

  if (!*v0)
    return 0x656546664F706F74;
  swift_retain();
  sub_1DC407600();
  sub_1DC408B48();
  swift_bridgeObjectRelease();
  sub_1DC408B48();
  swift_release();
  return 0x28726F73727563;
}

uint64_t *sub_1DC2C3CFC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    sub_1DC12D9D0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = type metadata accessor for NewsStockFeedGroupKnobs();
    *(uint64_t *)((char *)a1 + *(int *)(v8 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v8 + 20));
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
  }
  swift_retain();
  return a1;
}

uint64_t sub_1DC2C3D98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  sub_1DC12D9D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = type metadata accessor for NewsStockFeedGroupKnobs();
  *(_QWORD *)(a1 + *(int *)(v7 + 20)) = *(_QWORD *)(a2 + *(int *)(v7 + 20));
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_retain();
  return a1;
}

uint64_t sub_1DC2C3E0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  sub_1DC12D9D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = type metadata accessor for NewsStockFeedGroupKnobs();
  *(_QWORD *)(a1 + *(int *)(v7 + 20)) = *(_QWORD *)(a2 + *(int *)(v7 + 20));
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1DC2C3E8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  sub_1DC12D9D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = type metadata accessor for NewsStockFeedGroupKnobs();
  *(_QWORD *)(a1 + *(int *)(v7 + 20)) = *(_QWORD *)(a2 + *(int *)(v7 + 20));
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1DC2C3EFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  sub_1DC12D9D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = type metadata accessor for NewsStockFeedGroupKnobs();
  *(_QWORD *)(a1 + *(int *)(v7 + 20)) = *(_QWORD *)(a2 + *(int *)(v7 + 20));
  swift_release();
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1DC2C3F74()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC2C3F80(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for StockFeedGroupKnobs();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_1DC2C3FBC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC2C3FC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for StockFeedGroupKnobs();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_1DC2C4008@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  char v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t result;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;

  v38 = a3;
  v39 = a2;
  v40 = a4;
  sub_1DC092F50(0, (unint64_t *)&qword_1EDB2AE68, (void (*)(uint64_t))sub_1DC12D9D0);
  MEMORY[0x1E0C80A78](v5);
  v34 = (char *)&v33 - v6;
  v36 = type metadata accessor for NewsStockFeedGroupKnobs();
  v7 = *(_QWORD *)(v36 - 8);
  MEMORY[0x1E0C80A78](v36);
  v35 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC092F50(0, qword_1EDB34B70, v9);
  MEMORY[0x1E0C80A78](v10);
  v37 = (uint64_t)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v33 - v13;
  sub_1DC092F50(0, qword_1EDB31120, (void (*)(uint64_t))type metadata accessor for StockFeedGroupKnobs);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v33 - v16;
  v18 = type metadata accessor for StockFeedGroupKnobs();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v21 = (char *)&v33 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = a1;
  sub_1DC092F9C(a1, (uint64_t)v17, qword_1EDB31120, (void (*)(uint64_t))type metadata accessor for StockFeedGroupKnobs);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18) == 1)
  {
    v23 = (uint64_t)v34;
    v24 = v36;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v14, 1, 1, v36);
    v25 = v37;
    sub_1DC092F9C((uint64_t)v14, v37, qword_1EDB34B70, (void (*)(uint64_t))type metadata accessor for NewsStockFeedGroupKnobs);
    v26 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v25, 1, v24);
    v27 = v38;
    v28 = v35;
    if (v26 == 1)
    {
      sub_1DC12D9D0();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v23, 1, 1, v29);
      sub_1DC3DD3A8(v23, 0, v28);
      sub_1DC092F14((uint64_t)v14, qword_1EDB34B70, (void (*)(uint64_t))type metadata accessor for NewsStockFeedGroupKnobs);
      sub_1DC092F14(v25, qword_1EDB34B70, (void (*)(uint64_t))type metadata accessor for NewsStockFeedGroupKnobs);
    }
    else
    {
      sub_1DC092F14((uint64_t)v14, qword_1EDB34B70, (void (*)(uint64_t))type metadata accessor for NewsStockFeedGroupKnobs);
      sub_1DC092ED0(v25, (uint64_t)v28, (uint64_t (*)(_QWORD))type metadata accessor for NewsStockFeedGroupKnobs);
    }
    sub_1DC092ED0((uint64_t)v28, (uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for NewsStockFeedGroupKnobs);
    sub_1DC092F14(v22, qword_1EDB31120, (void (*)(uint64_t))type metadata accessor for StockFeedGroupKnobs);
    sub_1DC092F14((uint64_t)v17, qword_1EDB31120, (void (*)(uint64_t))type metadata accessor for StockFeedGroupKnobs);
    v30 = v39;
    v31 = v40;
  }
  else
  {
    sub_1DC092F14(a1, qword_1EDB31120, (void (*)(uint64_t))type metadata accessor for StockFeedGroupKnobs);
    sub_1DC092ED0((uint64_t)v17, (uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedGroupKnobs);
    v30 = v39;
    v31 = v40;
    v27 = v38;
  }
  sub_1DC092ED0((uint64_t)v21, v31, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedGroupKnobs);
  if ((v27 & 1) != 0)
    v30 = 0x7FFFFFFFFFFFFFFFLL;
  result = type metadata accessor for StockFeedKnobsConfig();
  *(_QWORD *)(v31 + *(int *)(result + 20)) = v30;
  return result;
}

uint64_t sub_1DC2C4390@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;
  char v17;
  char v18;

  v14 = a2;
  sub_1DC092F50(0, qword_1EDB31120, (void (*)(uint64_t))type metadata accessor for StockFeedGroupKnobs);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v13 - v5;
  sub_1DC2C4874();
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC2C48CC();
  sub_1DC409B08();
  if (!v2)
  {
    type metadata accessor for StockFeedGroupKnobs();
    v18 = 0;
    sub_1DC080808(&qword_1F03511E0, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedGroupKnobs, (uint64_t)&unk_1DC41CA44);
    sub_1DC4098B0();
    v17 = 1;
    sub_1DC4098B0();
    sub_1DC2C4008((uint64_t)v6, v15, v16, v14);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1DC2C453C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1DC158D60(*a1, *a2);
}

uint64_t sub_1DC2C4548()
{
  sub_1DC409AC0();
  sub_1DC408AF4();
  swift_bridgeObjectRelease();
  return sub_1DC409AF0();
}

uint64_t sub_1DC2C45D0()
{
  sub_1DC408AF4();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DC2C4634()
{
  sub_1DC409AC0();
  sub_1DC408AF4();
  swift_bridgeObjectRelease();
  return sub_1DC409AF0();
}

uint64_t sub_1DC2C46B8@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1DC4098A4();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

void sub_1DC2C4714(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x6F6E4B70756F7267;
  if (*v1)
    v2 = 0x70756F724778616DLL;
  v3 = 0xEA00000000007362;
  if (*v1)
    v3 = 0xE900000000000073;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1DC2C475C()
{
  _BYTE *v0;

  if (*v0)
    return 0x70756F724778616DLL;
  else
    return 0x6F6E4B70756F7267;
}

uint64_t sub_1DC2C47A0@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1DC4098A4();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

uint64_t sub_1DC2C4800()
{
  sub_1DC2C48CC();
  return sub_1DC409B20();
}

uint64_t sub_1DC2C4828()
{
  sub_1DC2C48CC();
  return sub_1DC409B2C();
}

uint64_t sub_1DC2C4850@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DC2C4390(a1, a2);
}

uint64_t sub_1DC2C4864@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1DC2C4910(v1, a1);
}

void sub_1DC2C4874()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F03511D0)
  {
    sub_1DC2C48CC();
    v0 = sub_1DC409928();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1F03511D0);
  }
}

unint64_t sub_1DC2C48CC()
{
  unint64_t result;

  result = qword_1F03511D8;
  if (!qword_1F03511D8)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC42428C, &type metadata for StockFeedKnobsConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F03511D8);
  }
  return result;
}

uint64_t sub_1DC2C4910(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for StockFeedGroupKnobs();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t storeEnumTagSinglePayload for StockFeedKnobsConfig.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1DC2C49A0 + 4 * byte_1DC424105[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1DC2C49D4 + 4 * asc_1DC424100[v4]))();
}

uint64_t sub_1DC2C49D4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC2C49DC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC2C49E4);
  return result;
}

uint64_t sub_1DC2C49F0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC2C49F8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1DC2C49FC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC2C4A04(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StockFeedKnobsConfig.CodingKeys()
{
  return &type metadata for StockFeedKnobsConfig.CodingKeys;
}

unint64_t sub_1DC2C4A24()
{
  unint64_t result;

  result = qword_1F03511E8;
  if (!qword_1F03511E8)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC424264, &type metadata for StockFeedKnobsConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F03511E8);
  }
  return result;
}

unint64_t sub_1DC2C4A6C()
{
  unint64_t result;

  result = qword_1F03511F0;
  if (!qword_1F03511F0)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC42419C, &type metadata for StockFeedKnobsConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F03511F0);
  }
  return result;
}

unint64_t sub_1DC2C4AB4()
{
  unint64_t result;

  result = qword_1F03511F8;
  if (!qword_1F03511F8)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC4241C4, &type metadata for StockFeedKnobsConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F03511F8);
  }
  return result;
}

uint64_t sub_1DC2C4AF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t (*v24)(_QWORD);
  int EnumCaseMultiPayload;
  uint64_t (*v26)();
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE v42[16];

  v41 = a3;
  v37 = a2;
  v4 = sub_1DC407300();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC142434();
  MEMORY[0x1E0C80A78](v8);
  v39 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = type metadata accessor for StockFeedSectionDescriptor();
  MEMORY[0x1E0C80A78](v38);
  v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v36 - v13;
  v15 = type metadata accessor for NewsStockFeedGroup();
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for NewsPlacardStockFeedGroup();
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v36 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for StockFeedGroup();
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v36 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0990BC(a1, (uint64_t)v23, v24);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    v26 = type metadata accessor for NewsPlacardStockFeedGroup;
    sub_1DC092ED0((uint64_t)v23, (uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for NewsPlacardStockFeedGroup);
    sub_1DC2C4EB8((uint64_t)v20, v41);
    v34 = (uint64_t)v20;
    return sub_1DC0926D8(v34, (uint64_t (*)(_QWORD))v26);
  }
  if (EnumCaseMultiPayload == 1)
  {
    v26 = type metadata accessor for NewsStockFeedGroup;
    sub_1DC092ED0((uint64_t)v23, (uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for NewsStockFeedGroup);
    sub_1DC3601BC((uint64_t)v14);
    v27 = sub_1DC0990BC((uint64_t)v14, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedSectionDescriptor);
    v28 = *((_QWORD *)v17 + 2);
    MEMORY[0x1E0C80A78](v27);
    *(&v36 - 4) = v37;
    *(&v36 - 3) = (uint64_t)v17;
    *(&v36 - 2) = v40;
    swift_bridgeObjectRetain();
    v29 = sub_1DC15549C((void (*)(uint64_t))sub_1DC1D0EF4, (uint64_t)(&v36 - 6), v28, (uint64_t)v42);
    swift_bridgeObjectRelease();
    sub_1DC142200();
    v31 = v30;
    v32 = sub_1DC080808((unint64_t *)&unk_1EDB29BB0, (uint64_t (*)(uint64_t))sub_1DC142200, MEMORY[0x1E0DB6F08]);
    v33 = sub_1DC080808(&qword_1EDB29BA8, (uint64_t (*)(uint64_t))sub_1DC142200, MEMORY[0x1E0DB6EF8]);
    MEMORY[0x1DF0C311C](v29, v31, v32, v33);
    type metadata accessor for StockFeedModel();
    sub_1DC080808(&qword_1EDB36EE0, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedSectionDescriptor, (uint64_t)&unk_1DC4167B0);
    sub_1DC080808(&qword_1EDB2D770, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedModel, (uint64_t)&unk_1DC429058);
    sub_1DC4046F0();
    sub_1DC0926D8((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedSectionDescriptor);
    v34 = (uint64_t)v17;
    return sub_1DC0926D8(v34, (uint64_t (*)(_QWORD))v26);
  }
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v23, v4);
  sub_1DC2C52D8((uint64_t)v7, v41);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1DC2C4EB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v22 = a1;
  v27 = a2;
  v25 = type metadata accessor for StockFeedModel();
  MEMORY[0x1E0C80A78](v25);
  v4 = (uint64_t *)((char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1DC142200();
  v26 = v5;
  v24 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v23 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC142434();
  MEMORY[0x1E0C80A78](v7);
  v8 = type metadata accessor for StockFeedSectionDescriptor();
  MEMORY[0x1E0C80A78](v8);
  v9 = type metadata accessor for NewsPlacardStockFeedGroup();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 40));
  v12 = sub_1DC4009D0();
  sub_1DC0990BC(v22, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for NewsPlacardStockFeedGroup);
  if ((v12 & 1) != 0)
  {
    v13 = v11[*(int *)(v9 + 20)];
    sub_1DC0926D8((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for NewsPlacardStockFeedGroup);
    if ((v13 & 1) != 0)
    {
      swift_storeEnumTagMultiPayload();
      v14 = sub_1DC080808((unint64_t *)&unk_1EDB29BB0, (uint64_t (*)(uint64_t))sub_1DC142200, MEMORY[0x1E0DB6F08]);
      v15 = sub_1DC080808(&qword_1EDB29BA8, (uint64_t (*)(uint64_t))sub_1DC142200, MEMORY[0x1E0DB6EF8]);
      v16 = v26;
      MEMORY[0x1DF0C3110](MEMORY[0x1E0DEE9D8], v26, v14, v15);
      sub_1DC080808(&qword_1EDB36EE0, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedSectionDescriptor, (uint64_t)&unk_1DC4167B0);
      sub_1DC080808(&qword_1EDB2D770, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedModel, (uint64_t)&unk_1DC429058);
      sub_1DC4046F0();
      swift_storeEnumTagMultiPayload();
      goto LABEL_8;
    }
  }
  else
  {
    sub_1DC0926D8((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for NewsPlacardStockFeedGroup);
  }
  swift_storeEnumTagMultiPayload();
  v17 = sub_1DC080808((unint64_t *)&unk_1EDB29BB0, (uint64_t (*)(uint64_t))sub_1DC142200, MEMORY[0x1E0DB6F08]);
  v18 = sub_1DC080808(&qword_1EDB29BA8, (uint64_t (*)(uint64_t))sub_1DC142200, MEMORY[0x1E0DB6EF8]);
  v16 = v26;
  MEMORY[0x1DF0C3110](MEMORY[0x1E0DEE9D8], v26, v17, v18);
  sub_1DC080808(&qword_1EDB36EE0, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedSectionDescriptor, (uint64_t)&unk_1DC4167B0);
  sub_1DC080808(&qword_1EDB2D770, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedModel, (uint64_t)&unk_1DC429058);
  sub_1DC4046F0();
  if (qword_1EDB42970 != -1)
    swift_once();
  v19 = unk_1EDB5E290;
  *v4 = qword_1EDB5E288;
  v4[1] = v19;
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
LABEL_8:
  v20 = v23;
  sub_1DC404348();
  sub_1DC157A5C();
  sub_1DC404744();
  return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v20, v16);
}

uint64_t sub_1DC2C52D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v17[2];

  v17[1] = a2;
  sub_1DC142434();
  MEMORY[0x1E0C80A78](v4);
  v17[0] = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for StockFeedModel();
  MEMORY[0x1E0C80A78](v6);
  v7 = type metadata accessor for StockFeedSectionDescriptor();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1DC407300();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v9, a1, v10);
  swift_storeEnumTagMultiPayload();
  sub_1DC1677DC();
  sub_1DC142200();
  v12 = v11;
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1DC40DC10;
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v2 + 56), *(_QWORD *)(v2 + 80));
  sub_1DC407948();
  swift_storeEnumTagMultiPayload();
  sub_1DC080808(&qword_1EDB2D770, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedModel, (uint64_t)&unk_1DC429058);
  sub_1DC404348();
  v14 = sub_1DC080808((unint64_t *)&unk_1EDB29BB0, (uint64_t (*)(uint64_t))sub_1DC142200, MEMORY[0x1E0DB6F08]);
  v15 = sub_1DC080808(&qword_1EDB29BA8, (uint64_t (*)(uint64_t))sub_1DC142200, MEMORY[0x1E0DB6EF8]);
  MEMORY[0x1DF0C3110](v13, v12, v14, v15);
  sub_1DC080808(&qword_1EDB36EE0, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedSectionDescriptor, (uint64_t)&unk_1DC4167B0);
  return sub_1DC4046F0();
}

uint64_t sub_1DC2C5544()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for StockFeedSectionFactory()
{
  return objc_opt_self();
}

uint64_t sub_1DC2C5598@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X1>, uint64_t *a3@<X2>, _QWORD *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  __n128 v20;
  uint64_t v21;
  void (*v22)(_BYTE *, _BYTE *, uint64_t);
  void (*v23)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  id v26;
  void *v27;
  unsigned int v28;
  unsigned __int8 v29;
  id v30;
  id v31;
  id v32;
  uint64_t v33;
  void *v34;
  id v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  void (*v41)(_BYTE *, _BYTE *, uint64_t);
  char *v42;
  id v43;
  unint64_t v44;
  int v45;
  id v46;
  unsigned int v47;
  id v48;
  id v49;
  void *v50;
  unsigned __int8 v51;
  _BYTE *v52;
  uint64_t v53;
  _BYTE *v54;
  uint64_t v55;
  uint64_t (*v56)(uint64_t);
  _BYTE v58[16];
  void (*v59)(_BYTE *, _BYTE *, uint64_t);
  _QWORD *v60;
  uint64_t v61;
  void (*v62)(_BYTE *, _BYTE *, uint64_t);
  _BYTE *v63;
  uint64_t v64;
  _BYTE *v65;
  uint64_t v66;
  _BYTE *v67;
  _BYTE *v68;
  uint64_t v69;
  uint64_t v70;
  _BYTE *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  __int128 v75;
  __int128 v76;
  _BYTE v77[24];
  uint64_t v78;
  id v79;

  v60 = a4;
  v74 = a5;
  v8 = sub_1DC407C84();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v71 = &v58[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v11);
  v13 = &v58[-v12];
  v14 = sub_1DC4011BC();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v67 = &v58[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v17);
  v19 = &v58[-v18];
  v70 = type metadata accessor for StockFeedModel();
  v20 = MEMORY[0x1E0C80A78](v70);
  v68 = &v58[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v69 = v15;
  v22 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v15 + 16);
  v65 = v19;
  v61 = v14;
  v59 = v22;
  ((void (*)(_BYTE *, uint64_t, uint64_t, __n128))v22)(v19, a1, v14, v20);
  v72 = v9;
  v73 = v8;
  v23 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v9 + 16);
  v63 = v13;
  v62 = v23;
  v23(v13, a2, v8);
  v24 = *a3;
  v25 = a3[1];
  v26 = (id)v60[12];
  swift_bridgeObjectRetain();
  v27 = (void *)sub_1DC401144();
  v28 = objc_msgSend(v27, sel_isPaid);
  if ((objc_msgSend(v27, sel_respondsToSelector_, sel_isBundlePaid) & 1) != 0)
    v29 = objc_msgSend(v27, sel_isBundlePaid);
  else
    v29 = 0;
  v30 = objc_msgSend(v27, sel_sourceChannel);
  v31 = v30;
  if (v30)
  {
    v32 = objc_msgSend(v30, sel_identifier);
    swift_unknownObjectRelease();
    v33 = sub_1DC408A4C();
    v31 = v34;

  }
  else
  {
    v33 = 0;
  }
  v66 = v24;
  v64 = v25;
  if (!v28)
  {
    if ((v29 & 1) != 0)
      goto LABEL_15;
    goto LABEL_13;
  }
  v35 = objc_msgSend(v26, sel_purchaseProvider);
  if (!v31)
  {
    swift_unknownObjectRelease();
    if ((v29 & 1) == 0)
      goto LABEL_37;
    goto LABEL_15;
  }
  v36 = objc_msgSend(v35, sel_purchasedTagIDs);
  v37 = sub_1DC408E54();
  v60 = v26;
  v38 = (uint64_t)v31;
  v39 = v37;

  LOBYTE(v36) = sub_1DC151630(v33, v38, v39);
  swift_unknownObjectRelease();
  v31 = (id)v38;
  v26 = v60;
  swift_bridgeObjectRelease();
  if ((v36 & 1) != 0)
  {
LABEL_13:
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    v40 = 1;
    v41 = v59;
    goto LABEL_40;
  }
  if ((v29 & 1) == 0)
    goto LABEL_37;
LABEL_15:
  if (!v31)
  {
    swift_unknownObjectRelease();
LABEL_38:
    v41 = v59;
    goto LABEL_39;
  }
  v60 = v26;
  v42 = (char *)objc_msgSend(objc_msgSend(v26, sel_bundleSubscriptionProvider, v31), sel_bundleSubscription);
  swift_unknownObjectRelease();
  if (objc_getAssociatedObject(v42, v42 + 1))
  {
    sub_1DC409634();
    swift_unknownObjectRelease();
  }
  else
  {
    v75 = 0u;
    v76 = 0u;
  }
  sub_1DC092ED0((uint64_t)&v75, (uint64_t)v77, (uint64_t (*)(_QWORD))sub_1DC0D11C4);
  if (!v78)
  {
    sub_1DC0926D8((uint64_t)v77, (uint64_t (*)(_QWORD))sub_1DC0D11C4);
    goto LABEL_26;
  }
  sub_1DC0E7878();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_26:
    v43 = 0;
    v44 = 0;
LABEL_27:
    v45 = v44;
    if (objc_getAssociatedObject(v42, (const void *)~v44))
    {
      sub_1DC409634();
      swift_unknownObjectRelease();
    }
    else
    {
      v75 = 0u;
      v76 = 0u;
    }
    sub_1DC092ED0((uint64_t)&v75, (uint64_t)v77, (uint64_t (*)(_QWORD))sub_1DC0D11C4);
    if (v78)
    {
      sub_1DC0E7878();
      if ((swift_dynamicCast() & 1) != 0)
      {
        v46 = v79;
        v47 = objc_msgSend(v46, sel_integerValue);

        if (((v47 ^ v45) & 1) != 0)
          goto LABEL_33;
LABEL_37:
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_38;
      }
    }
    else
    {
      sub_1DC0926D8((uint64_t)v77, (uint64_t (*)(_QWORD))sub_1DC0D11C4);
    }

    if ((v45 & 1) != 0)
      goto LABEL_33;
    goto LABEL_37;
  }
  v43 = v79;
  v44 = (unint64_t)objc_msgSend(v79, sel_integerValue);
  if (v44 != -1)
    goto LABEL_27;

LABEL_33:
  v48 = objc_msgSend(objc_msgSend(v60, sel_bundleSubscriptionProvider), sel_bundleSubscription);
  swift_unknownObjectRelease();
  v49 = objc_msgSend(v48, sel_bundleChannelIDs);

  v50 = (void *)sub_1DC408A1C();
  v51 = objc_msgSend(v49, sel_containsObject_, v50);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  v41 = v59;
  if ((v51 & 1) == 0)
  {
LABEL_39:
    v40 = 0;
    goto LABEL_40;
  }
  v40 = 1;
LABEL_40:
  v52 = v65;
  v53 = v61;
  v41(v67, v65, v61);
  v54 = v63;
  v55 = v73;
  v62(v71, v63, v73);
  v77[0] = v40;
  v56 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF1A0];
  sub_1DC080808((unint64_t *)&unk_1EDB28E10, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF1A0], MEMORY[0x1E0DAF1B0]);
  sub_1DC080808((unint64_t *)&unk_1EDB28E00, v56, MEMORY[0x1E0DAF158]);
  sub_1DC407C3C();
  (*(void (**)(_BYTE *, uint64_t))(v72 + 8))(v54, v55);
  (*(void (**)(_BYTE *, uint64_t))(v69 + 8))(v52, v53);
  swift_storeEnumTagMultiPayload();
  sub_1DC080808(&qword_1EDB2D770, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedModel, (uint64_t)&unk_1DC429058);
  return sub_1DC404348();
}

uint64_t sub_1DC2C5D04@<X0>(uint64_t a1@<X0>, double *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t);
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  uint64_t result;
  double v27;
  uint64_t v28;
  double *v29;
  double v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  BOOL v41;
  double v42;
  int *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(uint64_t, uint64_t, uint64_t);
  double *v49;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v51;
  uint64_t v52;
  uint64_t (*v53)(uint64_t);
  double *v54;
  uint64_t v55;
  uint64_t v56;
  double v57;
  double v58;
  CGFloat v59;
  double v60;
  uint64_t v61;
  double v62;
  double v63;
  double v64;
  char *v65;
  double v66;
  double v67;
  __int128 v68;
  double *v69;
  uint64_t *v70;
  uint64_t v71;
  double v72;
  double MaxY;
  double v74;
  double v75;
  double v76;
  id v77;
  id v78;
  id v79;
  uint64_t v80;
  unint64_t v81;
  unint64_t v82;
  double v83;
  double v84;
  double v85;
  double v86;
  double v87;
  double v88;
  uint64_t *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t *v96;
  char *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  double *v102;
  uint64_t v103;
  __int128 v104;
  uint64_t v105;
  uint64_t *v106;
  uint64_t v107[6];
  char v108;
  uint64_t v109;
  CGRect v110;

  v102 = a2;
  v106 = a3;
  v100 = sub_1DC3FFFEC();
  v99 = *(_QWORD *)(v100 - 8);
  MEMORY[0x1E0C80A78](v100);
  v98 = (char *)&v94 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC2C6A74(0, (unint64_t *)&qword_1EDB3F548, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB2858]);
  v105 = v6;
  *(_QWORD *)&v104 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v94 - v7;
  v9 = sub_1DC4086A4();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v97 = (char *)&v94 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v101 = (char *)&v94 - v13;
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v94 - v15;
  v96 = v3;
  sub_1DC2C6A74(0, (unint64_t *)&qword_1EDB3F490, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB25E8]);
  v18 = v17;
  sub_1DC4086D4();
  sub_1DC408698();
  v19 = *(void (**)(char *, uint64_t))(v10 + 8);
  v20 = v16;
  v21 = v9;
  v19(v20, v9);
  v103 = a1;
  sub_1DC4086E0();
  v22 = sub_1DC40883C();
  v24 = v23;
  swift_bridgeObjectRelease();
  result = (*(uint64_t (**)(char *, uint64_t))(v104 + 8))(v8, v105);
  _Q0 = 0uLL;
  v27 = 0.0;
  if ((v24 & 1) != 0)
    goto LABEL_23;
  *(_QWORD *)&v104 = v22;
  v28 = type metadata accessor for StockChartCalloutLayoutOptions();
  v29 = v102;
  v105 = (uint64_t)v102 + *(int *)(v28 + 32);
  v30 = *(double *)(v105 + 8);
  v31 = v101;
  sub_1DC4086D4();
  v32 = sub_1DC408698();
  v34 = v33;
  v35 = ((uint64_t (*)(char *, uint64_t))v19)(v31, v21);
  v109 = 0;
  MEMORY[0x1E0C80A78](v35);
  *(&v94 - 2) = (uint64_t)&v109;
  v95 = v21;
  if ((v34 & 0x1000000000000000) != 0 || !(v34 & 0x2000000000000000 | v32 & 0x1000000000000000))
  {
    sub_1DC409724();
LABEL_8:
    result = swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  MEMORY[0x1E0C80A78](v36);
  *(&v94 - 2) = (uint64_t)sub_1DC29396C;
  *(&v94 - 1) = v37;
  if ((v34 & 0x2000000000000000) == 0)
  {
    if ((v32 & 0x1000000000000000) != 0)
    {
      v38 = (v34 & 0xFFFFFFFFFFFFFFFLL) + 32;
      v39 = v32 & 0xFFFFFFFFFFFFLL;
    }
    else
    {
      v38 = sub_1DC409778();
    }
    v108 = sub_1DC28E48C(v38, v39, (void (*)(uint64_t *__return_ptr))sub_1DC2939D8) & 1;
    goto LABEL_8;
  }
  v107[0] = v32;
  v107[1] = v34 & 0xFFFFFFFFFFFFFFLL;
  v41 = (v32 > 0x20u || ((0x100003E01uLL >> v32) & 1) == 0)
     && (v40 = (_BYTE *)_swift_stdlib_strtod_clocale()) != 0
     && *v40 == 0;
  v108 = v41;
  result = swift_bridgeObjectRelease();
LABEL_15:
  _Q0 = 0uLL;
  if ((v108 & 1) == 0)
  {
LABEL_23:
    v56 = 0;
    v71 = 0;
    v59 = 0.0;
    v72 = 0.0;
    MaxY = 0.0;
    v74 = 0.0;
    v75 = 0.0;
    goto LABEL_40;
  }
  v42 = *(double *)&v104;
  v94 = v18;
  *(_QWORD *)&v104 = v19;
  v43 = (int *)v28;
  v45 = v96[6];
  v44 = v96[7];
  __swift_project_boxed_opaque_existential_1(v96 + 3, v45);
  v46 = *(_QWORD *)((char *)v29 + v43[7]);
  v47 = *(_QWORD *)(v44 + 8);
  v48 = *(void (**)(uint64_t, uint64_t, uint64_t))(v47 + 8);
  v107[3] = v45;
  v107[4] = v44;
  v49 = v29;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v107);
  v48(v46, v45, v47);
  v51 = (uint64_t)v98;
  sub_1DC3FFF8C();
  sub_1DC28E220((uint64_t)v49 + v43[6]);
  v52 = sub_1DC31F9AC(v51, (uint64_t)v49 + v43[5]);
  v53 = *(uint64_t (**)(uint64_t))(v44 + 24);
  v96 = boxed_opaque_existential_1;
  v54 = v49;
  v55 = v44;
  v101 = (char *)v45;
  v56 = v53(v52);
  swift_bridgeObjectRelease();
  sub_1DC40919C();
  v27 = v57;
  v59 = v58;
  v60 = *v54;
  v61 = v105;
  sub_1DC408F74();
  v63 = v60 - v62;
  if (v63 < v27)
    v27 = v63;
  v64 = v60 - v27;
  v65 = v97;
  sub_1DC4086D4();
  sub_1DC408680();
  v67 = v66;
  ((void (*)(char *, uint64_t))v104)(v65, v95);
  if (v67 == 0.0 || fabs(v67) >= 5.0)
  {
    v69 = v54;
    if (qword_1EDB2D4C8 != -1)
      swift_once();
    v70 = &qword_1EDB5DEA8;
  }
  else
  {
    v69 = v54;
    if (qword_1F034B0B0 != -1)
      swift_once();
    v70 = &qword_1F0368B38;
  }
  v76 = v30 + v42;
  *(double *)&v68 = v64 * 0.5;
  v104 = v68;
  v77 = (id)*v70;
  objc_msgSend(v77, sel_setNumberStyle_, 1);
  v78 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithDouble_, v67);
  v79 = objc_msgSend(v77, sel_stringFromNumber_, v78);

  if (v79)
  {
    v80 = sub_1DC408A4C();
    v82 = v81;

  }
  else
  {

    v80 = 0;
    v82 = 0xE000000000000000;
  }
  v71 = (*(uint64_t (**)(uint64_t, unint64_t, char *, uint64_t, double))(v55 + 32))(v80, v82, v101, v55, 0.0);
  swift_bridgeObjectRelease();
  sub_1DC40919C();
  v74 = v84;
  v75 = v83;
  v85 = *v69 - v84 - *(double *)(v61 + 24);
  v86 = v76 + v74 * -0.5;
  v87 = *(double *)(v61 + 8);
  if (v85 <= v87)
    v85 = *(double *)(v61 + 8);
  if (v86 <= v87)
    v86 = *(double *)(v61 + 8);
  if (v85 >= v86)
    v72 = v86;
  else
    v72 = v85;
  v88 = v69[1] - v83 + -4.0;
  v110.origin.y = 4.0;
  *(_QWORD *)&v110.origin.x = v104;
  v110.size.width = v27;
  v110.size.height = v59;
  MaxY = CGRectGetMaxY(v110);
  swift_release();
  if (v88 > MaxY)
    MaxY = v88;
  (*(void (**)(uint64_t, uint64_t))(v99 + 8))(v51, v100);
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v107);
  __asm { FMOV            V0.2D, #4.0 }
  *(_QWORD *)&_Q0 = v104;
LABEL_40:
  v93 = v106;
  *v106 = v56;
  *(_OWORD *)(v93 + 1) = _Q0;
  *((double *)v93 + 3) = v27;
  *((CGFloat *)v93 + 4) = v59;
  v93[5] = v71;
  *((double *)v93 + 6) = v72;
  *((double *)v93 + 7) = MaxY;
  *((double *)v93 + 8) = v74;
  *((double *)v93 + 9) = v75;
  return result;
}

uint64_t sub_1DC2C6484()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for StockChartCalloutLayoutAttributesFactory()
{
  return objc_opt_self();
}

double sub_1DC2C64E0(double a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t inited;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(uint64_t, uint64_t);
  uint64_t v28;
  id v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  id v34;
  _QWORD *v35;
  id v36;
  id v37;
  id v38;
  _QWORD *v39;
  uint64_t v40;
  void *v41;
  id v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t (*v47)(uint64_t, uint64_t);
  id v48;
  uint64_t v49;
  id v50;
  void *v51;
  void *v52;
  id v53;
  uint64_t v55[2];
  uint64_t v56;
  id v57;
  id v58;
  id v59;
  __int128 v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD v67[5];

  v3 = sub_1DC4002BC();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1DC400220();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1DC3FFFEC();
  v65 = *(_QWORD *)(v11 - 8);
  v66 = v11;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v55 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC3FFFE0();
  sub_1DC400214();
  v14 = sub_1DC28E220((uint64_t)v10);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  v55[0] = v1 + 24;
  v15 = __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 48));
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E0DAE0B0], v3);
  v63 = v14;
  v64 = v13;
  sub_1DC31F9AC((uint64_t)v13, (uint64_t)v6);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  v16 = (_QWORD *)*v15;
  sub_1DC0FB194();
  v62 = v17;
  inited = swift_initStackObject();
  v60 = xmmword_1DC40C740;
  *(_OWORD *)(inited + 16) = xmmword_1DC40C740;
  v19 = (void *)*MEMORY[0x1E0DC1138];
  *(_QWORD *)(inited + 32) = *MEMORY[0x1E0DC1138];
  v20 = sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FB00);
  v21 = *MEMORY[0x1E0DC4AB8];
  swift_bridgeObjectRetain();
  v59 = v19;
  v61 = v21;
  *(_QWORD *)(inited + 40) = sub_1DC409304();
  v22 = (void *)*MEMORY[0x1E0DC1140];
  *(_QWORD *)(inited + 64) = v20;
  *(_QWORD *)(inited + 72) = v22;
  v23 = v16 + 2;
  v24 = v16[5];
  v25 = v16[6];
  __swift_project_boxed_opaque_existential_1(v23, v24);
  v26 = *(_QWORD *)(v25 + 16);
  v27 = *(uint64_t (**)(uint64_t, uint64_t))(v26 + 48);
  v57 = v22;
  v28 = v27(v24, v26);
  v56 = sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FB30);
  *(_QWORD *)(inited + 104) = v56;
  *(_QWORD *)(inited + 80) = v28;
  sub_1DC0FA3C4(inited);
  v29 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  v30 = (void *)sub_1DC408A1C();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  v32 = v31;
  sub_1DC080808((unint64_t *)&qword_1EDB3F988, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1DC40D90C);
  v55[1] = v32;
  v33 = (void *)sub_1DC408980();
  swift_bridgeObjectRelease();
  v34 = objc_msgSend(v29, sel_initWithString_attributes_, v30, v33);
  swift_bridgeObjectRelease();

  v58 = v34;
  sub_1DC40919C();
  sub_1DC0824D4(v55[0], (uint64_t)v67);
  v35 = __swift_project_boxed_opaque_existential_1(v67, v67[3]);
  if (qword_1EDB2D4C8 != -1)
    swift_once();
  v36 = (id)qword_1EDB5DEA8;
  objc_msgSend(v36, sel_setNumberStyle_, 1);
  v37 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithDouble_, 100.0);
  v38 = objc_msgSend(v36, sel_stringFromNumber_, v37);

  if (v38)
  {
    sub_1DC408A4C();

  }
  v39 = (_QWORD *)*v35;
  v40 = swift_initStackObject();
  *(_OWORD *)(v40 + 16) = v60;
  v41 = v59;
  *(_QWORD *)(v40 + 32) = v59;
  swift_bridgeObjectRetain();
  v42 = v41;
  *(_QWORD *)(v40 + 40) = sub_1DC409304();
  v43 = v57;
  *(_QWORD *)(v40 + 64) = v20;
  *(_QWORD *)(v40 + 72) = v43;
  v44 = v39[5];
  v45 = v39[6];
  __swift_project_boxed_opaque_existential_1(v39 + 2, v44);
  v46 = *(_QWORD *)(v45 + 16);
  v47 = *(uint64_t (**)(uint64_t, uint64_t))(v46 + 192);
  v48 = v43;
  v49 = v47(v44, v46);
  *(_QWORD *)(v40 + 104) = v56;
  *(_QWORD *)(v40 + 80) = v49;
  sub_1DC0FA3C4(v40);
  v50 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  v51 = (void *)sub_1DC408A1C();
  swift_bridgeObjectRelease();
  v52 = (void *)sub_1DC408980();
  swift_bridgeObjectRelease();
  v53 = objc_msgSend(v50, sel_initWithString_attributes_, v51, v52);
  swift_bridgeObjectRelease();

  __swift_destroy_boxed_opaque_existential_1((uint64_t)v67);
  sub_1DC40919C();
  swift_release();

  (*(void (**)(char *, uint64_t))(v65 + 8))(v64, v66);
  return a1;
}

void sub_1DC2C6A74(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *))
{
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  unint64_t v8;
  uint64_t v9;
  _QWORD v10[4];

  if (!*a2)
  {
    v6 = sub_1DC4086A4();
    v7 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB2578];
    v10[0] = v6;
    v10[1] = sub_1DC080808(&qword_1EDB3F460, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB2578], MEMORY[0x1E0DB2598]);
    v10[2] = sub_1DC080808(&qword_1EDB3F450, v7, MEMORY[0x1E0DB2588]);
    v10[3] = sub_1DC080808(&qword_1EDB3F458, v7, MEMORY[0x1E0DB2590]);
    v8 = a3(a1, v10);
    if (!v9)
      atomic_store(v8, a2);
  }
}

uint64_t sub_1DC2C6B48(uint64_t a1)
{
  return sub_1DC2C6CC0(a1, 0, 0xD000000000000032, 0x80000001DC4451A0, &qword_1F0351200);
}

uint64_t static Settings.StockFeed.Layout.Chunking.overrideEnabled.getter()
{
  return sub_1DC10D910(&qword_1F034B0F8);
}

uint64_t sub_1DC2C6B8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t result;
  _QWORD v5[4];

  v0 = sub_1DC401348();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC08A0F4(0, (unint64_t *)&qword_1EDB29118);
  v5[2] = 1;
  v5[3] = 5;
  v5[1] = 5;
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB57E0], v0);
  result = sub_1DC401390();
  qword_1F0351208 = result;
  return result;
}

uint64_t static Settings.StockFeed.Layout.Chunking.overrideChunkSize.getter()
{
  return sub_1DC10D910(&qword_1F034B100);
}

uint64_t sub_1DC2C6C98(uint64_t a1)
{
  return sub_1DC2C6CC0(a1, 0, 0xD000000000000038, 0x80000001DC445120, &qword_1EDB290B0);
}

uint64_t sub_1DC2C6CC0(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  _BYTE v16[16];

  v7 = sub_1DC401348();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = &v16[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = sub_1DC401354();
  v12 = MEMORY[0x1E0C80A78](v11);
  (*(void (**)(_BYTE *, _QWORD, __n128))(v14 + 104))(&v16[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)], *MEMORY[0x1E0DB5800], v12);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E0DB57E0], v7);
  v16[15] = a2;
  sub_1DC08A0F4(0, (unint64_t *)&qword_1EDB29110);
  swift_allocObject();
  result = sub_1DC4013A8();
  *a5 = result;
  return result;
}

uint64_t static Settings.StockFeed.Layout.overrideVerticalQuoteDetailLayout.getter()
{
  return sub_1DC10D910(&qword_1EDB290B8);
}

uint64_t sub_1DC2C6E1C(uint64_t a1)
{
  return sub_1DC2C6CC0(a1, 0, 0xD000000000000044, 0x80000001DC4450D0, &qword_1EDB290C0);
}

uint64_t static Settings.StockFeed.Toolbar.overrideAlwaysShowUpdatedLabelEnabled.getter()
{
  return sub_1DC10D910(&qword_1EDB290D0);
}

uint64_t sub_1DC2C6E60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  _QWORD v9[2];

  v0 = sub_1DC401354();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1DC401348();
  v5 = MEMORY[0x1E0C80A78](v4);
  (*(void (**)(char *, _QWORD, __n128))(v7 + 104))((char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E0DB57E8], v5);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB5800], v0);
  v9[0] = 0xD000000000000042;
  v9[1] = 0x80000001DC445080;
  sub_1DC08A0F4(0, &qword_1EDB29108);
  swift_allocObject();
  result = sub_1DC4013A8();
  qword_1F0351210 = result;
  return result;
}

uint64_t static Settings.StockFeed.ConfigOverrides.url.getter()
{
  if (qword_1F034B108 != -1)
    swift_once();
  return swift_retain();
}

uint64_t Settings.StockFeed.ConfigOverrides.__allocating_init(key:defaultValue:access:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  v5 = sub_1DC401348();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a4, v5);
  v9 = sub_1DC4012F4();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a4, v5);
  return v9;
}

uint64_t Settings.StockFeed.ConfigOverrides.init(key:defaultValue:access:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v5 = sub_1DC401348();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v6 + 16))((char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a4, v5, v7);
  v9 = sub_1DC4012F4();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a4, v5);
  return v9;
}

uint64_t Settings.StockFeed.ConfigOverrides.__deallocating_deinit()
{
  _s11TeaSettings0B0C8StocksUIE4TipsV8EarningsV15ConfigOverridesCfd_0();
  return swift_deallocClassInstance();
}

uint64_t sub_1DC2C719C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;

  v0 = sub_1DC401348();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v10 - v6;
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v1 + 104))((char *)&v10 - v6, *MEMORY[0x1E0DB57E8], v0, v5);
  type metadata accessor for Settings.StockFeed.ConfigOverrides();
  swift_allocObject();
  (*(void (**)(char *, char *, uint64_t))(v1 + 16))(v3, v7, v0);
  v8 = sub_1DC4012F4();
  result = (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v7, v0);
  qword_1EDB29090 = v8;
  return result;
}

uint64_t static Settings.StockFeed.configOverrides.getter()
{
  return sub_1DC10D910(&qword_1EDB274A0);
}

uint64_t sub_1DC2C72C4(uint64_t a1)
{
  return sub_1DC2C6CC0(a1, 1, 0xD000000000000027, 0x80000001DC444FF0, &qword_1EDB29098);
}

uint64_t static Settings.StockFeed.Card.swipeToDismiss.getter()
{
  return sub_1DC10D910(&qword_1EDB290A8);
}

uint64_t sub_1DC2C7308()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t);
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;

  v0 = sub_1DC401348();
  v20 = *(_QWORD *)(v0 - 8);
  v21 = v0;
  MEMORY[0x1E0C80A78](v0);
  v19 = (char *)&v16 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_1DC401354();
  v17 = *(_QWORD *)(v2 - 8);
  v18 = v2;
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1DC40793C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v16 - v10;
  sub_1DC25AF84();
  v16 = v12;
  v13 = *MEMORY[0x1E0D5BC50];
  v14 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 104);
  v14(v11, v13, v5);
  sub_1DC089DA4(0, &qword_1EDB28500, (uint64_t (*)(uint64_t))sub_1DC25AFF4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  sub_1DC25AFF4(0);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1DC40FA70;
  v14(v8, v13, v5);
  sub_1DC401360();
  v14(v8, *MEMORY[0x1E0D5BC58], v5);
  sub_1DC401360();
  v14(v8, *MEMORY[0x1E0D5BC48], v5);
  sub_1DC401360();
  (*(void (**)(char *, _QWORD, uint64_t))(v17 + 104))(v4, *MEMORY[0x1E0DB5800], v18);
  (*(void (**)(char *, _QWORD, uint64_t))(v20 + 104))(v19, *MEMORY[0x1E0DB57E0], v21);
  sub_1DC25B010(&qword_1EDB2AF08, MEMORY[0x1E0D5BC38]);
  result = sub_1DC401378();
  qword_1EDB29040 = result;
  return result;
}

uint64_t static Settings.StockFeed.Feed.autoRefreshStrategy.getter()
{
  return sub_1DC10D910(&qword_1EDB29050);
}

ValueMetadata *type metadata accessor for Settings.StockFeed()
{
  return &type metadata for Settings.StockFeed;
}

ValueMetadata *type metadata accessor for Settings.StockFeed.Layout()
{
  return &type metadata for Settings.StockFeed.Layout;
}

ValueMetadata *type metadata accessor for Settings.StockFeed.Layout.Chunking()
{
  return &type metadata for Settings.StockFeed.Layout.Chunking;
}

ValueMetadata *type metadata accessor for Settings.StockFeed.Toolbar()
{
  return &type metadata for Settings.StockFeed.Toolbar;
}

uint64_t type metadata accessor for Settings.StockFeed.ConfigOverrides()
{
  uint64_t result;

  result = qword_1EDB29058;
  if (!qword_1EDB29058)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1DC2C7694()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1DC2C76D0()
{
  return type metadata accessor for Settings.StockFeed.ConfigOverrides();
}

ValueMetadata *type metadata accessor for Settings.StockFeed.Card()
{
  return &type metadata for Settings.StockFeed.Card;
}

ValueMetadata *type metadata accessor for Settings.StockFeed.Feed()
{
  return &type metadata for Settings.StockFeed.Feed;
}

_QWORD *sub_1DC2C76F8(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  __int128 v36;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1DC401030();
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      sub_1DC092F50(0, &qword_1EDB28DC0, (void (*)(uint64_t))MEMORY[0x1E0DAF040]);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    v16 = *(int *)(type metadata accessor for StockFeedQuoteData() + 20);
    v17 = &v9[v16];
    v18 = &v10[v16];
    v19 = sub_1DC400370();
    v20 = *(_QWORD *)(v19 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
    {
      sub_1DC092F50(0, &qword_1EDB28BA0, (void (*)(uint64_t))MEMORY[0x1E0DAE188]);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v17, v18, v19);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
    }
    v22 = a3[7];
    *((_BYTE *)v4 + a3[6]) = *((_BYTE *)a2 + a3[6]);
    v23 = (char *)v4 + v22;
    v24 = (char *)a2 + v22;
    v25 = sub_1DC3FFFEC();
    v26 = *(_QWORD *)(v25 - 8);
    v27 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48);
    if (v27(v24, 1, v25))
    {
      sub_1DC092F50(0, &qword_1EDB28AC0, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
      memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v23, v24, v25);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
    }
    v29 = a3[8];
    v30 = (char *)v4 + v29;
    v31 = (char *)a2 + v29;
    if (v27((char *)a2 + v29, 1, v25))
    {
      sub_1DC092F50(0, &qword_1EDB28AC0, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
      memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v30, v31, v25);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v30, 0, 1, v25);
    }
    v33 = a3[9];
    v34 = *(_OWORD *)((char *)a2 + v33 + 24);
    *(_OWORD *)((char *)v4 + v33 + 24) = v34;
    (**(void (***)(void))(v34 - 8))();
    v35 = a3[10];
    v36 = *(_OWORD *)((char *)a2 + v35 + 24);
    *(_OWORD *)((char *)v4 + v35 + 24) = v36;
    (**(void (***)(void))(v36 - 8))();
  }
  return v4;
}

uint64_t sub_1DC2C7A00(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;

  swift_bridgeObjectRelease();
  v4 = a1 + a2[5];
  v5 = sub_1DC401030();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  v7 = v4 + *(int *)(type metadata accessor for StockFeedQuoteData() + 20);
  v8 = sub_1DC400370();
  v9 = *(_QWORD *)(v8 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  v10 = a1 + a2[7];
  v11 = sub_1DC3FFFEC();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  if (!v13(v10, 1, v11))
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
  v14 = a1 + a2[8];
  if (!v13(v14, 1, v11))
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v14, v11);
  __swift_destroy_boxed_opaque_existential_1(a1 + a2[9]);
  return __swift_destroy_boxed_opaque_existential_1(a1 + a2[10]);
}

_QWORD *sub_1DC2C7B40(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(char *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;
  __int128 v34;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1DC401030();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    sub_1DC092F50(0, &qword_1EDB28DC0, (void (*)(uint64_t))MEMORY[0x1E0DAF040]);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v14 = *(int *)(type metadata accessor for StockFeedQuoteData() + 20);
  v15 = &v8[v14];
  v16 = &v9[v14];
  v17 = sub_1DC400370();
  v18 = *(_QWORD *)(v17 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
  {
    sub_1DC092F50(0, &qword_1EDB28BA0, (void (*)(uint64_t))MEMORY[0x1E0DAE188]);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v15, v16, v17);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  }
  v20 = a3[7];
  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  v21 = (char *)a1 + v20;
  v22 = (char *)a2 + v20;
  v23 = sub_1DC3FFFEC();
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48);
  if (v25(v22, 1, v23))
  {
    sub_1DC092F50(0, &qword_1EDB28AC0, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v21, v22, v23);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
  }
  v27 = a3[8];
  v28 = (char *)a1 + v27;
  v29 = (char *)a2 + v27;
  if (v25((char *)a2 + v27, 1, v23))
  {
    sub_1DC092F50(0, &qword_1EDB28AC0, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
    memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v28, v29, v23);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v28, 0, 1, v23);
  }
  v31 = a3[9];
  v32 = *(_OWORD *)((char *)a2 + v31 + 24);
  *(_OWORD *)((char *)a1 + v31 + 24) = v32;
  (**(void (***)(void))(v32 - 8))();
  v33 = a3[10];
  v34 = *(_OWORD *)((char *)a2 + v33 + 24);
  *(_OWORD *)((char *)a1 + v33 + 24) = v34;
  (**(void (***)(void))(v34 - 8))();
  return a1;
}

_QWORD *sub_1DC2C7E1C(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(char *, uint64_t, uint64_t);
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(char *, uint64_t, uint64_t);
  int v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  int v36;
  int v37;
  uint64_t v38;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1DC401030();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    sub_1DC092F50(0, &qword_1EDB28DC0, (void (*)(uint64_t))MEMORY[0x1E0DAF040]);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  v15 = *(int *)(type metadata accessor for StockFeedQuoteData() + 20);
  v16 = &v7[v15];
  v17 = &v8[v15];
  v18 = sub_1DC400370();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48);
  v21 = v20(v16, 1, v18);
  v22 = v20(v17, 1, v18);
  if (v21)
  {
    if (!v22)
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v16, v17, v18);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v22)
  {
    (*(void (**)(char *, uint64_t))(v19 + 8))(v16, v18);
LABEL_12:
    sub_1DC092F50(0, &qword_1EDB28BA0, (void (*)(uint64_t))MEMORY[0x1E0DAE188]);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v19 + 24))(v16, v17, v18);
LABEL_13:
  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  v24 = a3[7];
  v25 = (char *)a1 + v24;
  v26 = (char *)a2 + v24;
  v27 = sub_1DC3FFFEC();
  v28 = *(_QWORD *)(v27 - 8);
  v29 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v28 + 48);
  v30 = v29(v25, 1, v27);
  v31 = v29(v26, 1, v27);
  if (v30)
  {
    if (!v31)
    {
      (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v25, v26, v27);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v31)
  {
    (*(void (**)(char *, uint64_t))(v28 + 8))(v25, v27);
LABEL_18:
    sub_1DC092F50(0, &qword_1EDB28AC0, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v28 + 24))(v25, v26, v27);
LABEL_19:
  v33 = a3[8];
  v34 = (char *)a1 + v33;
  v35 = (char *)a2 + v33;
  v36 = v29((char *)a1 + v33, 1, v27);
  v37 = v29(v35, 1, v27);
  if (!v36)
  {
    if (!v37)
    {
      (*(void (**)(char *, char *, uint64_t))(v28 + 24))(v34, v35, v27);
      goto LABEL_25;
    }
    (*(void (**)(char *, uint64_t))(v28 + 8))(v34, v27);
    goto LABEL_24;
  }
  if (v37)
  {
LABEL_24:
    sub_1DC092F50(0, &qword_1EDB28AC0, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
    memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v34, v35, v27);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v34, 0, 1, v27);
LABEL_25:
  __swift_assign_boxed_opaque_existential_1((_QWORD *)((char *)a1 + a3[9]), (_QWORD *)((char *)a2 + a3[9]));
  __swift_assign_boxed_opaque_existential_1((_QWORD *)((char *)a1 + a3[10]), (_QWORD *)((char *)a2 + a3[10]));
  return a1;
}

_OWORD *sub_1DC2C81F4(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int (*v23)(char *, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  __int128 v33;
  char *v34;
  char *v35;
  __int128 v36;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1DC401030();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    sub_1DC092F50(0, &qword_1EDB28DC0, (void (*)(uint64_t))MEMORY[0x1E0DAF040]);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v12 = *(int *)(type metadata accessor for StockFeedQuoteData() + 20);
  v13 = &v7[v12];
  v14 = &v8[v12];
  v15 = sub_1DC400370();
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    sub_1DC092F50(0, &qword_1EDB28BA0, (void (*)(uint64_t))MEMORY[0x1E0DAE188]);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v13, v14, v15);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  v18 = a3[7];
  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  v19 = (char *)a1 + v18;
  v20 = (char *)a2 + v18;
  v21 = sub_1DC3FFFEC();
  v22 = *(_QWORD *)(v21 - 8);
  v23 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48);
  if (v23(v20, 1, v21))
  {
    sub_1DC092F50(0, &qword_1EDB28AC0, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v19, v20, v21);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
  }
  v25 = a3[8];
  v26 = (char *)a1 + v25;
  v27 = (char *)a2 + v25;
  if (v23((char *)a2 + v25, 1, v21))
  {
    sub_1DC092F50(0, &qword_1EDB28AC0, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v26, v27, v21);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v26, 0, 1, v21);
  }
  v29 = a3[9];
  v30 = a3[10];
  v31 = (char *)a1 + v29;
  v32 = (char *)a2 + v29;
  v33 = *((_OWORD *)v32 + 1);
  *(_OWORD *)v31 = *(_OWORD *)v32;
  *((_OWORD *)v31 + 1) = v33;
  *((_QWORD *)v31 + 4) = *((_QWORD *)v32 + 4);
  v34 = (char *)a1 + v30;
  v35 = (char *)a2 + v30;
  *((_QWORD *)v34 + 4) = *((_QWORD *)v35 + 4);
  v36 = *((_OWORD *)v35 + 1);
  *(_OWORD *)v34 = *(_OWORD *)v35;
  *((_OWORD *)v34 + 1) = v36;
  return a1;
}

_QWORD *sub_1DC2C84AC(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(char *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(char *, uint64_t, uint64_t);
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(char *, uint64_t, uint64_t);
  int v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  int v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  __int128 v43;
  uint64_t v44;
  char *v45;
  char *v46;
  __int128 v47;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1DC401030();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    sub_1DC092F50(0, &qword_1EDB28DC0, (void (*)(uint64_t))MEMORY[0x1E0DAF040]);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
LABEL_7:
  v16 = *(int *)(type metadata accessor for StockFeedQuoteData() + 20);
  v17 = &v8[v16];
  v18 = &v9[v16];
  v19 = sub_1DC400370();
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 48);
  v22 = v21(v17, 1, v19);
  v23 = v21(v18, 1, v19);
  if (v22)
  {
    if (!v23)
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v17, v18, v19);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v23)
  {
    (*(void (**)(char *, uint64_t))(v20 + 8))(v17, v19);
LABEL_12:
    sub_1DC092F50(0, &qword_1EDB28BA0, (void (*)(uint64_t))MEMORY[0x1E0DAE188]);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v20 + 40))(v17, v18, v19);
LABEL_13:
  v25 = a3[7];
  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  v26 = (char *)a1 + v25;
  v27 = (char *)a2 + v25;
  v28 = sub_1DC3FFFEC();
  v29 = *(_QWORD *)(v28 - 8);
  v30 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v29 + 48);
  v31 = v30(v26, 1, v28);
  v32 = v30(v27, 1, v28);
  if (v31)
  {
    if (!v32)
    {
      (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v26, v27, v28);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v32)
  {
    (*(void (**)(char *, uint64_t))(v29 + 8))(v26, v28);
LABEL_18:
    sub_1DC092F50(0, &qword_1EDB28AC0, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v29 + 40))(v26, v27, v28);
LABEL_19:
  v34 = a3[8];
  v35 = (char *)a1 + v34;
  v36 = (char *)a2 + v34;
  v37 = v30((char *)a1 + v34, 1, v28);
  v38 = v30(v36, 1, v28);
  if (!v37)
  {
    if (!v38)
    {
      (*(void (**)(char *, char *, uint64_t))(v29 + 40))(v35, v36, v28);
      goto LABEL_25;
    }
    (*(void (**)(char *, uint64_t))(v29 + 8))(v35, v28);
    goto LABEL_24;
  }
  if (v38)
  {
LABEL_24:
    sub_1DC092F50(0, &qword_1EDB28AC0, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
    memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v35, v36, v28);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v35, 0, 1, v28);
LABEL_25:
  v40 = a3[9];
  v41 = (char *)a1 + v40;
  v42 = (char *)a2 + v40;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1 + v40);
  v43 = *((_OWORD *)v42 + 1);
  *(_OWORD *)v41 = *(_OWORD *)v42;
  *((_OWORD *)v41 + 1) = v43;
  *((_QWORD *)v41 + 4) = *((_QWORD *)v42 + 4);
  v44 = a3[10];
  v45 = (char *)a1 + v44;
  v46 = (char *)a2 + v44;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1 + v44);
  v47 = *((_OWORD *)v46 + 1);
  *(_OWORD *)v45 = *(_OWORD *)v46;
  *((_OWORD *)v45 + 1) = v47;
  *((_QWORD *)v45 + 4) = *((_QWORD *)v46 + 4);
  return a1;
}

uint64_t sub_1DC2C8898()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC2C88A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for StockFeedQuoteData();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 20);
    }
    else
    {
      sub_1DC092F50(0, &qword_1EDB28AC0, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
      v10 = v12;
      v9 = *(_QWORD *)(v12 - 8);
      v11 = *(int *)(a3 + 28);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_1DC2C8954()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC2C8960(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = type metadata accessor for StockFeedQuoteData();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 20);
    }
    else
    {
      sub_1DC092F50(0, &qword_1EDB28AC0, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
      v10 = v12;
      v9 = *(_QWORD *)(v12 - 8);
      v11 = *(int *)(a4 + 28);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t type metadata accessor for StockFeedReplaceQuoteDataBlueprintModifier()
{
  uint64_t result;

  result = qword_1EDB3E7A0;
  if (!qword_1EDB3E7A0)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1DC2C8A48()
{
  unint64_t v0;
  unint64_t v1;

  type metadata accessor for StockFeedQuoteData();
  if (v0 <= 0x3F)
  {
    sub_1DC092F50(319, &qword_1EDB28AC0, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t sub_1DC2C8AFC(uint64_t a1, void (*a2)(char *), uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  unint64_t v15;
  uint64_t (*v16)(void);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD v35[2];
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(char *);
  char v46[16];
  uint64_t v47;
  __int128 v48;
  __int128 v49;

  v4 = v3;
  v44 = a3;
  v45 = a2;
  v6 = sub_1DC404984();
  v36 = *(_QWORD *)(v6 - 8);
  v37 = v6;
  MEMORY[0x1E0C80A78](v6);
  v35[0] = (char *)v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC1D0DEC(0, &qword_1EDB2A278, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB9A28]);
  v42 = *(_QWORD *)(v8 - 8);
  v43 = v8;
  MEMORY[0x1E0C80A78](v8);
  v39 = (char *)v35 - v9;
  sub_1DC165DE8();
  MEMORY[0x1E0C80A78](v10);
  sub_1DC1D0DEC(0, (unint64_t *)&qword_1EDB2AB10, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790]);
  v12 = v11;
  v40 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)v35 - v13;
  v38 = v4;
  v47 = v4;
  v15 = sub_1DC13D440((void (*)(char *))sub_1DC2CA1A0, (uint64_t)v46);
  v41 = v12;
  sub_1DC406C70();
  v16 = MEMORY[0x1E0DB7B60];
  sub_1DC1D0DEC(0, (unint64_t *)&qword_1EDB29D60, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60]);
  v18 = v17;
  v19 = sub_1DC2CA160(&qword_1EDB29D48, (unint64_t *)&qword_1EDB29D60, (uint64_t (*)(uint64_t, _QWORD *))v16, MEMORY[0x1E0DB7B88]);
  v20 = sub_1DC2CA160(&qword_1EDB29D40, (unint64_t *)&qword_1EDB29D60, (uint64_t (*)(uint64_t, _QWORD *))v16, MEMORY[0x1E0DB7B80]);
  MEMORY[0x1DF0C311C](v15, v18, v19, v20);
  type metadata accessor for StockFeedSectionDescriptor();
  type metadata accessor for StockFeedModel();
  sub_1DC080808(&qword_1EDB36EE0, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedSectionDescriptor, (uint64_t)&unk_1DC4167B0);
  sub_1DC157A1C();
  sub_1DC406C64();
  v35[1] = a1;
  v21 = sub_1DC1581D0();
  sub_1DC4078A0();
  sub_1DC407894();
  type metadata accessor for StockFeedServiceConfig();
  sub_1DC080808(&qword_1EDB33F10, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedServiceConfig, (uint64_t)&unk_1DC411510);
  v22 = sub_1DC40787C();
  swift_release();
  if (v22)
  {
    *((_QWORD *)&v49 + 1) = sub_1DC407420();
    *(_QWORD *)&v48 = v22;
  }
  else
  {
    v48 = 0u;
    v49 = 0u;
  }
  v23 = v41;
  sub_1DC406D00();
  sub_1DC1F0AAC(v21);
  v24 = type metadata accessor for StockFeedReplaceQuoteDataBlueprintModifier();
  v25 = v39;
  if (*(_BYTE *)(v38 + *(int *)(v24 + 24)) == 1)
  {
    sub_1DC2CA1B8();
    v27 = &v25[*(int *)(v26 + 48)];
    v28 = v40;
    (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v25, v14, v23);
    (*(void (**)(char *, _QWORD, uint64_t))(v36 + 104))(v27, *MEMORY[0x1E0DB7FB8], v37);
    sub_1DC08CBF0(0, &qword_1EDB2A4C0, (uint64_t (*)(uint64_t))sub_1DC2CA250, sub_1DC2CA750, MEMORY[0x1E0DBADE0]);
    sub_1DC2CA76C();
    v48 = 0u;
    v49 = 0u;
    sub_1DC404BA0();
    v30 = v42;
    v29 = v43;
    (*(void (**)(char *, _QWORD, uint64_t))(v42 + 104))(v25, *MEMORY[0x1E0DB99D0], v43);
  }
  else
  {
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v38 + *(int *)(v24 + 40)), *(_QWORD *)(v38 + *(int *)(v24 + 40) + 24));
    if ((sub_1DC400C1C() & 1) != 0)
    {
      sub_1DC405548();
    }
    else
    {
      v32 = v36;
      v31 = v37;
      v33 = v35[0];
      (*(void (**)(_QWORD, _QWORD, uint64_t))(v36 + 104))(v35[0], *MEMORY[0x1E0DB7FB8], v37);
      sub_1DC080808(&qword_1EDB36EE8, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedSectionDescriptor, (uint64_t)&unk_1DC416860);
      sub_1DC405554();
      (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v33, v31);
    }
    v30 = v42;
    v29 = v43;
    v28 = v40;
  }
  v45(v25);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v25, v29);
  return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v14, v23);
}

void sub_1DC2C8FF0(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD v10[6];

  v10[2] = a1;
  v10[5] = a2;
  sub_1DC142434();
  MEMORY[0x1E0C80A78](v2);
  v10[1] = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for StockFeedMastheadModel();
  MEMORY[0x1E0C80A78](v4);
  MEMORY[0x1E0C80A78](v5);
  v6 = type metadata accessor for StockFeedSectionDescriptor();
  MEMORY[0x1E0C80A78](v6);
  MEMORY[0x1E0C80A78](v7);
  MEMORY[0x1E0C80A78](v8);
  sub_1DC1D0DEC(0, (unint64_t *)&qword_1EDB29D60, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60]);
  sub_1DC4046FC();
  v9 = (char *)sub_1DC2C9164 + 4 * byte_1DC424430[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1DC2C9164()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v14[16];

  v4 = sub_1DC4046FC();
  v5 = *(_QWORD *)(v3 - 96);
  MEMORY[0x1E0C80A78](v4);
  v14[2] = v5;
  v6 = sub_1DC13D8D0((void (*)(char *))sub_1DC2CA7D4, (uint64_t)v14);
  if (*(_QWORD *)(v6 + 16))
  {
    sub_1DC0990BC(v2, v1, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedSectionDescriptor);
    sub_1DC08CBF0(0, (unint64_t *)&qword_1EDB29BC0, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedModel, sub_1DC157A1C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6EE8]);
    v8 = v7;
    v9 = sub_1DC1D0D8C((unint64_t *)&unk_1EDB29BB0, MEMORY[0x1E0DB6F08]);
    v10 = sub_1DC1D0D8C(&qword_1EDB29BA8, MEMORY[0x1E0DB6EF8]);
    MEMORY[0x1DF0C311C](v6, v8, v9, v10);
    type metadata accessor for StockFeedModel();
    sub_1DC080808(&qword_1EDB36EE0, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedSectionDescriptor, (uint64_t)&unk_1DC4167B0);
    sub_1DC157A1C();
    v11 = *(_QWORD *)(v3 - 72);
    sub_1DC4046F0();
    sub_1DC0926D8(v2, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedSectionDescriptor);
    v12 = 0;
  }
  else
  {
    sub_1DC0926D8(v2, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedSectionDescriptor);
    swift_bridgeObjectRelease();
    v12 = 1;
    v11 = *(_QWORD *)(v3 - 72);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 56))(v11, v12, 1, v0);
}

void sub_1DC2C9314()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1DC092ED0(v1, v0, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedMastheadModel);
  sub_1DC2C93B0(v0, v3);
  sub_1DC0926D8(v0, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedMastheadModel);
  sub_1DC092ED0(v3, v2, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedMastheadModel);
  swift_storeEnumTagMultiPayload();
  JUMPOUT(0x1DC2C9178);
}

uint64_t sub_1DC2C936C()
{
  uint64_t v0;
  uint64_t v1;

  swift_bridgeObjectRelease();
  sub_1DC142534();
  sub_1DC092F14(v0 + *(int *)(v1 + 64), &qword_1EDB2AD80, (void (*)(uint64_t))MEMORY[0x1E0D5A418]);
  return sub_1DC2C9164();
}

uint64_t sub_1DC2C939C()
{
  uint64_t v0;

  sub_1DC0926D8(v0, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedSectionDescriptor);
  return sub_1DC2C9164();
}

uint64_t sub_1DC2C93B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  char *v11;
  void (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v34 = a2;
  v3 = sub_1DC4008EC();
  v32 = *(_QWORD *)(v3 - 8);
  v33 = v3;
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC092F50(0, (unint64_t *)&unk_1EDB28D90, (void (*)(uint64_t))MEMORY[0x1E0DAEFA8]);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v31 - v7;
  v9 = (int *)type metadata accessor for StockFeedMastheadModel();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (void (*)(uint64_t))MEMORY[0x1E0DAF040];
  sub_1DC092F50(0, &qword_1EDB28DC0, (void (*)(uint64_t))MEMORY[0x1E0DAF040]);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v31 - v17;
  v19 = sub_1DC4010E4();
  v20 = MEMORY[0x1E0C80A78](v19);
  v22 = (char *)&v31 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, __n128))(v23 + 16))(v22, a1, v20);
  v24 = type metadata accessor for StockFeedReplaceQuoteDataBlueprintModifier();
  sub_1DC092F9C(v31 + *(int *)(v24 + 20), (uint64_t)v15, &qword_1EDB28DC0, v12);
  sub_1DC0990BC(a1, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedMastheadModel);
  v25 = sub_1DC401030();
  v26 = *(_QWORD *)(v25 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v15, 1, v25) == 1)
  {
    v27 = (void (*)(uint64_t))MEMORY[0x1E0DAF040];
    sub_1DC092F9C((uint64_t)&v11[v9[5]], (uint64_t)v18, &qword_1EDB28DC0, (void (*)(uint64_t))MEMORY[0x1E0DAF040]);
    sub_1DC0926D8((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedMastheadModel);
    sub_1DC092F14((uint64_t)v15, &qword_1EDB28DC0, v27);
  }
  else
  {
    sub_1DC0926D8((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedMastheadModel);
    (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v18, v15, v25);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v18, 0, 1, v25);
  }
  sub_1DC092F9C(a1 + v9[6], (uint64_t)v8, (unint64_t *)&unk_1EDB28D90, (void (*)(uint64_t))MEMORY[0x1E0DAEFA8]);
  v28 = a1 + v9[7];
  v29 = type metadata accessor for QuoteSummaryViewModel();
  (*(void (**)(char *, uint64_t, uint64_t))(v32 + 16))(v5, v28 + *(int *)(v29 + 28), v33);
  return sub_1DC2F2578((uint64_t)v22, (uint64_t)v18, (uint64_t)v8, (uint64_t)v5, *(unsigned __int8 *)(a1 + v9[8]), v34);
}

void sub_1DC2C96B0(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(uint64_t);
  uint64_t v30;
  char *v31;
  _QWORD v32[13];
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v38 = a1;
  v40 = a2;
  sub_1DC092F50(0, &qword_1EDB28BA0, (void (*)(uint64_t))MEMORY[0x1E0DAE188]);
  MEMORY[0x1E0C80A78](v2);
  v32[5] = (char *)v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v32[6] = (char *)v32 - v5;
  MEMORY[0x1E0C80A78](v6);
  v32[12] = (char *)v32 - v7;
  v33 = sub_1DC4010E4();
  v36 = *(_QWORD *)(v33 - 8);
  MEMORY[0x1E0C80A78](v33);
  v32[11] = (char *)v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC092F50(0, qword_1EDB30828, (void (*)(uint64_t))type metadata accessor for StockEarningsModel);
  MEMORY[0x1E0C80A78](v9);
  v32[3] = (char *)v32 - v10;
  sub_1DC092F50(0, &qword_1EDB28DC0, (void (*)(uint64_t))MEMORY[0x1E0DAF040]);
  MEMORY[0x1E0C80A78](v11);
  v32[7] = (char *)v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v32[8] = (char *)v32 - v14;
  MEMORY[0x1E0C80A78](v15);
  v32[10] = (char *)v32 - v16;
  MEMORY[0x1E0C80A78](v17);
  v32[2] = (char *)v32 - v18;
  MEMORY[0x1E0C80A78](v19);
  v34 = sub_1DC401030();
  v32[9] = *(_QWORD *)(v34 - 8);
  MEMORY[0x1E0C80A78](v34);
  v32[4] = (char *)v32 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for StockEarningsModel();
  MEMORY[0x1E0C80A78](v21);
  v32[1] = (char *)v32 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v23);
  v24 = type metadata accessor for StockFeedMastheadModel();
  MEMORY[0x1E0C80A78](v24);
  v25 = type metadata accessor for StockFeedModel();
  MEMORY[0x1E0C80A78](v25);
  v35 = (char *)v32 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v27);
  MEMORY[0x1E0C80A78](v28);
  sub_1DC08CBF0(0, (unint64_t *)&qword_1EDB29BC0, v29, sub_1DC157A1C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6EE8]);
  v39 = v30;
  sub_1DC404354();
  v37 = v25;
  v31 = (char *)sub_1DC2C9A54 + 4 * byte_1DC424438[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1DC2C9A54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1DC0926D8(v1, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedModel);
  v3 = *(_QWORD *)(v2 - 104);
  v4 = *(_QWORD *)(v2 - 96);
  v5 = *(_QWORD *)(v3 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v4, v0, v3);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56))(v4, 0, 1, v3);
}

uint64_t sub_1DC2CA134()
{
  return sub_1DC080808(&qword_1EDB3E798, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedReplaceQuoteDataBlueprintModifier, (uint64_t)&unk_1DC4244C8);
}

uint64_t sub_1DC2CA160(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_1DC1D0DEC(255, a2, a3);
    result = MEMORY[0x1DF0CAB8C](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1DC2CA1A0(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_1DC2C8FF0(*(_QWORD *)(v1 + 16), a1);
}

void sub_1DC2CA1B8()
{
  unint64_t TupleTypeMetadata3;
  uint64_t v1;

  if (!qword_1F0351230)
  {
    sub_1DC1D0DEC(255, (unint64_t *)&qword_1EDB2AB10, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790]);
    sub_1DC404984();
    sub_1DC404BAC();
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1)
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_1F0351230);
  }
}

void sub_1DC2CA250()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB2A0C0)
  {
    sub_1DC2CA384();
    sub_1DC2CA3C0();
    sub_1DC2CA538();
    sub_1DC2CA674();
    type metadata accessor for StockFeedViewController();
    sub_1DC080808(&qword_1EDB2A690, (uint64_t (*)(uint64_t))sub_1DC2CA3C0, MEMORY[0x1E0DBB5A8]);
    sub_1DC080808(&qword_1EDB2A520, (uint64_t (*)(uint64_t))sub_1DC2CA538, MEMORY[0x1E0DBB230]);
    sub_1DC080808(&qword_1EDB2A708, (uint64_t (*)(uint64_t))sub_1DC2CA674, MEMORY[0x1E0DBB950]);
    v0 = sub_1DC405080();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB2A0C0);
  }
}

unint64_t sub_1DC2CA384()
{
  unint64_t result;

  result = qword_1EDB3F8A0;
  if (!qword_1EDB3F8A0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EDB3F8A0);
  }
  return result;
}

void sub_1DC2CA3C0()
{
  uint64_t (*v0)(void);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1EDB2A698)
  {
    v0 = MEMORY[0x1E0DB80B8];
    sub_1DC1D0DEC(255, (unint64_t *)&qword_1EDB29E80, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB80B8]);
    sub_1DC1C022C();
    type metadata accessor for StockFeedBlueprintViewCellProvider();
    type metadata accessor for StockFeedBlueprintViewSupplementaryViewProvider();
    sub_1DC2CA160((unint64_t *)&qword_1EDB29E70, (unint64_t *)&qword_1EDB29E80, (uint64_t (*)(uint64_t, _QWORD *))v0, MEMORY[0x1E0DB80D0]);
    sub_1DC080808((unint64_t *)&qword_1EDB2A248, (uint64_t (*)(uint64_t))sub_1DC1C022C, MEMORY[0x1E0DB9998]);
    sub_1DC080808(&qword_1EDB3C7F0, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedBlueprintViewCellProvider, (uint64_t)&unk_1DC41535C);
    sub_1DC080808(&qword_1EDB2B228, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedBlueprintViewSupplementaryViewProvider, (uint64_t)&unk_1DC41DE68);
    sub_1DC080808(&qword_1EDB32168, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedLayoutModel, (uint64_t)&unk_1DC413988);
    v1 = sub_1DC406178();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1EDB2A698);
  }
}

void sub_1DC2CA538()
{
  uint64_t (*v0)(void);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1EDB2A528)
  {
    v0 = MEMORY[0x1E0DB80B8];
    sub_1DC1D0DEC(255, (unint64_t *)&qword_1EDB29E80, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB80B8]);
    sub_1DC1C022C();
    type metadata accessor for StockFeedViewController();
    sub_1DC2CA160((unint64_t *)&qword_1EDB29E70, (unint64_t *)&qword_1EDB29E80, (uint64_t (*)(uint64_t, _QWORD *))v0, MEMORY[0x1E0DB80D0]);
    sub_1DC080808((unint64_t *)&qword_1EDB2A248, (uint64_t (*)(uint64_t))sub_1DC1C022C, MEMORY[0x1E0DB9998]);
    sub_1DC080808(&qword_1EDB350C0, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedViewController, (uint64_t)&unk_1DC418C5C);
    sub_1DC080808(&qword_1EDB32168, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedLayoutModel, (uint64_t)&unk_1DC413988);
    v1 = sub_1DC405FE0();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1EDB2A528);
  }
}

void sub_1DC2CA674()
{
  uint64_t (*v0)(void);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1EDB2A710)
  {
    v0 = MEMORY[0x1E0DB80B8];
    sub_1DC1D0DEC(255, (unint64_t *)&qword_1EDB29E80, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB80B8]);
    sub_1DC1C022C();
    sub_1DC2CA160((unint64_t *)&qword_1EDB29E70, (unint64_t *)&qword_1EDB29E80, (uint64_t (*)(uint64_t, _QWORD *))v0, MEMORY[0x1E0DB80D0]);
    sub_1DC080808((unint64_t *)&qword_1EDB2A248, (uint64_t (*)(uint64_t))sub_1DC1C022C, MEMORY[0x1E0DB9998]);
    v1 = sub_1DC4062D4();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1EDB2A710);
  }
}

uint64_t sub_1DC2CA750()
{
  return sub_1DC080808(&qword_1EDB2A0B8, (uint64_t (*)(uint64_t))sub_1DC2CA250, MEMORY[0x1E0DB9008]);
}

unint64_t sub_1DC2CA76C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EDB2A4B8;
  if (!qword_1EDB2A4B8)
  {
    sub_1DC08CBF0(255, &qword_1EDB2A4C0, (uint64_t (*)(uint64_t))sub_1DC2CA250, sub_1DC2CA750, MEMORY[0x1E0DBADE0]);
    result = MEMORY[0x1DF0CAB8C](MEMORY[0x1E0DBADE8], v1);
    atomic_store(result, (unint64_t *)&qword_1EDB2A4B8);
  }
  return result;
}

void sub_1DC2CA7D4(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_1DC2C96B0(*(_QWORD *)(v1 + 16), a1);
}

void sub_1DC2CA7EC(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  void *v3;

  v1 = a1 + 16;
  swift_beginAccess();
  v2 = (void *)MEMORY[0x1DF0CAD78](v1);
  if (v2)
  {
    v3 = v2;
    objc_msgSend(v2, sel_becomeFirstResponder);

  }
}

void sub_1DC2CA844()
{
  void *v0;
  id v1;

  sub_1DC2CA88C();
  if (v0)
  {
    v1 = v0;
    sub_1DC40418C();

  }
}

void sub_1DC2CA88C()
{
  id v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  id v13;
  int64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  int64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;

  v0 = objc_msgSend((id)objc_opt_self(), sel_sharedApplication);
  v1 = objc_msgSend(v0, sel_connectedScenes);

  sub_1DC0821D4(0, (unint64_t *)&qword_1F0350CB8);
  sub_1DC2CACBC();
  v2 = sub_1DC408E54();

  if ((v2 & 0xC000000000000001) != 0)
  {
    sub_1DC409670();
    sub_1DC408E6C();
    v2 = v31;
    v3 = v32;
    v4 = v33;
    v5 = v34;
    v6 = v35;
  }
  else
  {
    v5 = 0;
    v7 = -1 << *(_BYTE *)(v2 + 32);
    v3 = v2 + 56;
    v4 = ~v7;
    v8 = -v7;
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v6 = v9 & *(_QWORD *)(v2 + 56);
  }
  v29 = (unint64_t)(v4 + 64) >> 6;
  v26 = v3;
  v27 = v2;
  while (1)
  {
    if (v2 < 0)
    {
      v10 = v6;
      if (!sub_1DC4096AC())
        goto LABEL_46;
      swift_unknownObjectRetain();
      swift_dynamicCast();
      v13 = v30;
      swift_unknownObjectRelease();
      v12 = v5;
      if (!v30)
        goto LABEL_46;
    }
    else
    {
      if (v6)
      {
        v10 = (v6 - 1) & v6;
        v11 = __clz(__rbit64(v6)) | (v5 << 6);
        v12 = v5;
      }
      else
      {
        v14 = v5 + 1;
        if (__OFADD__(v5, 1))
          goto LABEL_48;
        if (v14 >= v29)
          goto LABEL_46;
        v15 = *(_QWORD *)(v3 + 8 * v14);
        v12 = v5 + 1;
        if (!v15)
        {
          v12 = v5 + 2;
          if (v5 + 2 >= v29)
            goto LABEL_46;
          v15 = *(_QWORD *)(v3 + 8 * v12);
          if (!v15)
          {
            v12 = v5 + 3;
            if (v5 + 3 >= v29)
              goto LABEL_46;
            v15 = *(_QWORD *)(v3 + 8 * v12);
            if (!v15)
            {
              v12 = v5 + 4;
              if (v5 + 4 >= v29)
                goto LABEL_46;
              v15 = *(_QWORD *)(v3 + 8 * v12);
              if (!v15)
              {
                v16 = v5 + 5;
                while (v29 != v16)
                {
                  v15 = *(_QWORD *)(v3 + 8 * v16++);
                  if (v15)
                  {
                    v12 = v16 - 1;
                    goto LABEL_29;
                  }
                }
LABEL_46:
                sub_1DC2CAD14();
                return;
              }
            }
          }
        }
LABEL_29:
        v10 = (v15 - 1) & v15;
        v11 = __clz(__rbit64(v15)) + (v12 << 6);
      }
      v13 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * v11);
      if (!v13)
        goto LABEL_46;
    }
    if (!objc_msgSend(v13, sel_activationState))
    {
      objc_opt_self();
      v17 = swift_dynamicCastObjCClass();
      if (v17)
        break;
    }
LABEL_9:

    v5 = v12;
    v6 = v10;
  }
  v18 = (void *)v17;
  v28 = v13;
  v19 = objc_msgSend(v18, sel_windows);
  sub_1DC0821D4(0, (unint64_t *)&qword_1EDB41D10);
  v20 = sub_1DC408CD4();

  if (!(v20 >> 62))
  {
    v21 = *(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v21)
      goto LABEL_35;
    goto LABEL_8;
  }
  swift_bridgeObjectRetain();
  v21 = sub_1DC409850();
  swift_bridgeObjectRelease();
  if (!v21)
  {
LABEL_8:

    swift_bridgeObjectRelease();
    v3 = v26;
    v2 = v27;
    goto LABEL_9;
  }
LABEL_35:
  v22 = 4;
  while (1)
  {
    v23 = (v20 & 0xC000000000000001) != 0
        ? (id)MEMORY[0x1DF0C9FBC](v22 - 4, v20)
        : *(id *)(v20 + 8 * v22);
    v24 = v23;
    v25 = v22 - 3;
    if (__OFADD__(v22 - 4, 1))
      break;
    sub_1DC404198();
    if (swift_dynamicCastClass())
    {
      swift_bridgeObjectRelease();

      sub_1DC2CAD14();
      return;
    }

    ++v22;
    if (v25 == v21)
      goto LABEL_8;
  }
  __break(1u);
LABEL_48:
  __break(1u);
}

unint64_t sub_1DC2CACBC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1F0353B50;
  if (!qword_1F0353B50)
  {
    v1 = sub_1DC0821D4(255, (unint64_t *)&qword_1F0350CB8);
    result = MEMORY[0x1DF0CAB8C](MEMORY[0x1E0DEFCF8], v1);
    atomic_store(result, (unint64_t *)&qword_1F0353B50);
  }
  return result;
}

uint64_t sub_1DC2CAD14()
{
  return swift_release();
}

uint64_t sub_1DC2CAD1C(uint64_t a1, double *a2, char *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  char *v42;
  double v43;
  double v44;
  double v45;
  double v46;
  void *v47;
  double v48;
  double v49;
  double v50;
  double v51;
  uint64_t v52;
  unsigned __int8 *v53;
  unsigned __int8 v54;
  void *v55;
  char v56;
  double v57;
  uint64_t v58;
  uint64_t v59;
  int v60;
  char v61;
  uint64_t v62;
  void *v63;
  double v64;
  double v65;
  int v66;
  _QWORD *v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t inited;
  void *v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  _QWORD *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t (*v80)(uint64_t, uint64_t);
  id v81;
  uint64_t v82;
  id v83;
  void *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  void *v88;
  id v89;
  _QWORD *v90;
  uint64_t v91;
  void *v92;
  double *v93;
  double v94;
  id v95;
  _QWORD *v96;
  uint64_t v97;
  uint64_t v98;
  void *v99;
  id v100;
  id v101;
  void *v102;
  void *v103;
  char *v104;
  double v105;
  char *v106;
  double v107;
  int v108;
  int v109;
  unsigned int *v110;
  char *v111;
  uint64_t v112;
  void (*v113)(char *, _QWORD, _QWORD *);
  _QWORD *v114;
  uint64_t v115;
  char *v116;
  void (*v117)(char *, _QWORD *);
  char v118;
  void (*v119)(char *, _QWORD *);
  Class isa;
  _QWORD *v121;
  char v122;
  void *v123;
  uint64_t v124;
  uint64_t v125;
  void *v126;
  uint64_t v127;
  uint64_t v128;
  _QWORD *v129;
  uint64_t v130;
  uint64_t v131;
  void *v132;
  char *v133;
  id v134;
  id v135;
  uint64_t v136;
  uint64_t ObjCClassFromMetadata;
  void *v138;
  id v139;
  void *v140;
  uint64_t v141;
  uint64_t v142;
  id v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  void *v150;
  void *v151;
  double *v152;
  _QWORD *v153;
  _QWORD *v154;
  uint64_t v155;
  double v156;
  id v157;
  double v158;
  _QWORD *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t (*v163)(uint64_t, uint64_t);
  uint64_t v164;
  id v165;
  void *v166;
  void *v167;
  id v168;
  uint64_t v169;
  int v170;
  uint64_t v171;
  uint64_t v172;
  char *v173;
  void *v174;
  uint64_t v175;
  char *v176;
  uint64_t v177;
  void *v178;
  double v179;
  double v180;
  double v181;
  double v182;
  double v183;
  double v184;
  double v185;
  double v186;
  uint64_t v187;
  char *v188;
  void *v189;
  _QWORD *v190;
  uint64_t v191;
  uint64_t v192;
  void *v193;
  uint64_t v194;
  uint64_t v195;
  char v196;
  char v197;
  char v198;
  double v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  char *v203;
  int v204;
  char v205;
  uint64_t v206;
  uint64_t v207;
  double v208;
  int v209;
  _QWORD *v210;
  uint64_t v211;
  id v212;
  id v213;
  void *v214;
  _QWORD *v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t (*v219)(uint64_t, uint64_t);
  id v220;
  uint64_t v221;
  id v222;
  void *v223;
  void *v224;
  id v225;
  uint64_t v226;
  _QWORD *v227;
  uint64_t v228;
  id v229;
  id v230;
  _QWORD *v231;
  uint64_t v232;
  uint64_t v233;
  void *v234;
  id v235;
  uint64_t v236;
  id v237;
  void *v238;
  void *v239;
  id v240;
  _QWORD *v241;
  uint64_t v242;
  void *v243;
  id v244;
  id v245;
  _QWORD *v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t (*v250)(uint64_t, uint64_t);
  id v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  id v255;
  void *v256;
  void *v257;
  id v258;
  id v259;
  void *v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  void *v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  void *v272;
  char *v273;
  id v274;
  char v275;
  char v276;
  uint64_t v277;
  char v278;
  uint64_t result;
  char *v280;
  uint64_t v281;
  char *v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  char *v288;
  char *v289;
  uint64_t v290;
  char *v291;
  char *v292;
  char *v293;
  int v294;
  uint64_t v295;
  double v296;
  char *v297;
  double v298;
  double v299;
  double v300;
  double v301;
  char *v302;
  __int128 v303;
  _QWORD *v304;
  id v305;
  uint64_t v306;
  uint64_t v307;
  id v308;
  uint64_t v309;
  double *v310;
  uint64_t v311;
  uint64_t v312;
  char *v313;
  unsigned __int8 *v314;
  id v315;
  char *v316;
  uint64_t v317;
  id v318;
  char *v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  __int128 v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  int *v330;
  _QWORD *v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  _QWORD v337[17];
  double v338;
  double v339;
  double v340;
  double v341;
  double v342;
  double v343;
  double v344;
  double v345;
  double v346;
  double v347;
  char *v348;
  double v349;
  _QWORD *v350;
  char *v351;
  double v352;
  double v353;

  v329 = a1;
  v5 = type metadata accessor for QuoteSummaryViewModel();
  MEMORY[0x1E0C80A78](v5);
  v290 = (uint64_t)&v281 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1DC4002BC();
  v311 = *(_QWORD *)(v7 - 8);
  v8 = ((uint64_t (*)(uint64_t))MEMORY[0x1E0C80A78])(v7);
  v291 = (char *)&v281 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v289 = (char *)&v281 - v10;
  sub_1DC2CCD6C();
  v309 = v11;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v281 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1DC400118();
  MEMORY[0x1E0C80A78](v14);
  v293 = (char *)&v281 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1DC408A10();
  MEMORY[0x1E0C80A78](v16);
  v292 = (char *)&v281 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC089DA4(0, (unint64_t *)&qword_1EDB2D5E8, (uint64_t (*)(uint64_t))type metadata accessor for PriceViewModel, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v19 = ((uint64_t (*)(uint64_t))MEMORY[0x1E0C80A78])(v18);
  v288 = (char *)&v281 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v307 = (uint64_t)&v281 - v21;
  *(double *)&v22 = COERCE_DOUBLE(sub_1DC4008EC());
  v298 = *(double *)(v22 - 8);
  v299 = *(double *)&v22;
  MEMORY[0x1E0C80A78](v22);
  v297 = (char *)&v281 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v304 = (_QWORD *)sub_1DC403724();
  *(_QWORD *)&v303 = *(v304 - 1);
  v24 = ((uint64_t (*)(_QWORD *))MEMORY[0x1E0C80A78])(v304);
  v316 = (char *)&v281 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v24);
  v302 = (char *)&v281 - v26;
  v27 = sub_1DC4011C8();
  v285 = *(_QWORD *)(v27 - 8);
  v286 = v27;
  v28 = ((uint64_t (*)(uint64_t))MEMORY[0x1E0C80A78])(v27);
  v282 = (char *)&v281 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v28);
  v31 = (char *)&v281 - v30;
  v321 = type metadata accessor for PriceViewModel();
  v306 = *(_QWORD *)(v321 - 8);
  v32 = ((uint64_t (*)(uint64_t))MEMORY[0x1E0C80A78])(v321);
  v284 = (uint64_t)&v281 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = ((uint64_t (*)(uint64_t))MEMORY[0x1E0C80A78])(v32);
  v283 = (uint64_t)&v281 - v35;
  v36 = ((uint64_t (*)(uint64_t))MEMORY[0x1E0C80A78])(v34);
  v320 = (uint64_t)&v281 - v37;
  v38 = ((uint64_t (*)(uint64_t))MEMORY[0x1E0C80A78])(v36);
  v40 = (char *)&v281 - v39;
  MEMORY[0x1E0C80A78](v38);
  v42 = (char *)&v281 - v41;
  v43 = a2[4];
  v44 = a2[5];
  v45 = a2[6];
  v46 = a2[7];
  v318 = *(id *)&a3[OBJC_IVAR____TtC8StocksUI16QuoteSummaryView_priceLabel];
  objc_msgSend(v318, sel_setFrame_, v43, v44, v45, v46);
  v319 = a3;
  v47 = *(void **)&a3[OBJC_IVAR____TtC8StocksUI16QuoteSummaryView_priceChangeLabel];
  v48 = a2[8];
  v49 = a2[9];
  v50 = a2[10];
  v51 = a2[11];
  v310 = a2;
  v52 = v329;
  objc_msgSend(v47, sel_setFrame_, v48, v49, v50, v51);
  v330 = (int *)v5;
  v53 = (unsigned __int8 *)(v52 + *(int *)(v5 + 20));
  v287 = sub_1DC40133C();
  sub_1DC401324();
  if (qword_1EDB28E78 != -1)
    swift_once();
  sub_1DC401318();
  swift_release();
  v54 = v53[8];
  v312 = v7;
  v313 = v13;
  v308 = v47;
  if ((v54 & 1) != 0)
  {
    v55 = (void *)*((_QWORD *)v53 + 9);
    v317 = *((_QWORD *)v53 + 8);
    swift_bridgeObjectRetain();
    goto LABEL_19;
  }
  v56 = LOBYTE(v338);
  v57 = *(double *)v53;
  sub_1DC0990BC((uint64_t)v53, (uint64_t)v42, (uint64_t (*)(_QWORD))type metadata accessor for PriceViewModel);
  if ((v56 & 1) != 0)
  {
    v59 = v285;
    v58 = v286;
    (*(void (**)(char *, char *, uint64_t))(v285 + 16))(v31, &v42[*(int *)(v321 + 40)], v286);
    v60 = (*(uint64_t (**)(char *, uint64_t))(v59 + 88))(v31, v58);
    v61 = 2;
    if (v60 == *MEMORY[0x1E0DAF1E8]
      || v60 == *MEMORY[0x1E0DAF1F0]
      || v60 == *MEMORY[0x1E0DAF1C0]
      || v60 == *MEMORY[0x1E0DAF1D8]
      || v60 == *MEMORY[0x1E0DAF1C8]
      || v60 == *MEMORY[0x1E0DAF1E0])
    {
      goto LABEL_14;
    }
    if (v60 != *MEMORY[0x1E0DAF1D0])
    {
      if (v60 != *MEMORY[0x1E0DAF1B8])
        (*(void (**)(char *, uint64_t))(v285 + 8))(v31, v286);
      v61 = 2;
      goto LABEL_14;
    }
  }
  v61 = 0;
LABEL_14:
  sub_1DC0926D8((uint64_t)v42, (uint64_t (*)(_QWORD))type metadata accessor for PriceViewModel);
  if (qword_1EDB2D588 != -1)
    swift_once();
  v62 = sub_1DC0FC858(*((_QWORD *)v53 + 6), *((_QWORD *)v53 + 7), 5, 1, v61, v57);
  v55 = v63;
  sub_1DC0990BC((uint64_t)v53, (uint64_t)v40, (uint64_t (*)(_QWORD))type metadata accessor for PriceViewModel);
  if (!v55)
  {
    v62 = *((_QWORD *)v40 + 8);
    v55 = (void *)*((_QWORD *)v40 + 9);
    swift_bridgeObjectRetain();
  }
  v317 = v62;
  sub_1DC0926D8((uint64_t)v40, (uint64_t (*)(_QWORD))type metadata accessor for PriceViewModel);
LABEL_19:
  v332 = v52 + v330[7];
  v323 = sub_1DC0FC0DC(v332, 0);
  v296 = v64;
  v65 = *((double *)v53 + 2);
  v314 = v53;
  v66 = v65 < 0.0;
  v294 = v53[24];
  if (v294)
    v66 = 2;
  LODWORD(v322) = v66;
  v67 = (_QWORD *)(v328 + 16);
  v331 = (_QWORD *)(v328 + 16);
  v68 = v328;
  swift_beginAccess();
  v69 = (_QWORD *)*__swift_project_boxed_opaque_existential_1(v67, *(_QWORD *)(v68 + 40));
  sub_1DC089DA4(0, (unint64_t *)&qword_1EDB40090, (uint64_t (*)(uint64_t))sub_1DC112C08, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v326 = v70;
  inited = swift_initStackObject();
  v325 = xmmword_1DC40C740;
  *(_OWORD *)(inited + 16) = xmmword_1DC40C740;
  v72 = (void *)*MEMORY[0x1E0DC1138];
  *(_QWORD *)(inited + 32) = *MEMORY[0x1E0DC1138];
  v73 = sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FB00);
  v327 = *MEMORY[0x1E0DC4B60];
  v74 = *MEMORY[0x1E0DC1428];
  swift_bridgeObjectRetain();
  v315 = v72;
  *(_QWORD *)(inited + 40) = sub_1DC4092F8();
  v75 = (void *)*MEMORY[0x1E0DC1140];
  *(_QWORD *)(inited + 64) = v73;
  *(_QWORD *)(inited + 72) = v75;
  v76 = v69 + 2;
  v77 = v69[5];
  v78 = v69[6];
  __swift_project_boxed_opaque_existential_1(v76, v77);
  v79 = *(_QWORD *)(v78 + 16);
  v80 = *(uint64_t (**)(uint64_t, uint64_t))(v79 + 48);
  v81 = v75;
  v82 = v80(v77, v79);
  v324 = sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FB30);
  *(_QWORD *)(inited + 104) = v324;
  *(_QWORD *)(inited + 80) = v82;
  sub_1DC0FA3C4(inited);
  v83 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  v84 = (void *)sub_1DC408A1C();
  v305 = v55;
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  v86 = v85;
  v87 = sub_1DC081B48((unint64_t *)&qword_1EDB3F988, 255, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1DC40D90C);
  v295 = MEMORY[0x1E0DEE9B8] + 8;
  v88 = (void *)sub_1DC408980();
  swift_bridgeObjectRelease();
  v89 = objc_msgSend(v83, sel_initWithString_attributes_, v84, v88);

  objc_msgSend(v318, sel_setAttributedText_, v89);
  v90 = (_QWORD *)*__swift_project_boxed_opaque_existential_1(v331, *(_QWORD *)(v328 + 40));
  v91 = swift_initStackObject();
  *(_OWORD *)(v91 + 16) = v325;
  v92 = v315;
  *(_QWORD *)(v91 + 32) = v315;
  v93 = (double *)*MEMORY[0x1E0DC1448];
  swift_bridgeObjectRetain();
  v300 = COERCE_DOUBLE(v92);
  *(_QWORD *)(v91 + 40) = sub_1DC4092F8();
  v315 = (id)v73;
  *(_QWORD *)(v91 + 64) = v73;
  *(_QWORD *)(v91 + 72) = v81;
  v94 = COERCE_DOUBLE(v81);
  v95 = sub_1DC0E1EE4(v322);
  v96 = v90 + 7;
  v97 = v90[10];
  v98 = v90[11];
  __swift_project_boxed_opaque_existential_1(v96, v97);
  v99 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v98 + 16))(v97, v98);
  v100 = objc_msgSend(v95, sel_stocksAccessibilityAdjustedForIncreaseContrastAgainstWithBackgroundColor_, v99);

  *(_QWORD *)(v91 + 104) = v324;
  *(_QWORD *)(v91 + 80) = v100;
  sub_1DC0FA3C4(v91);
  v101 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  v102 = (void *)sub_1DC408A1C();
  swift_bridgeObjectRelease();
  v322 = v87;
  v323 = v86;
  v103 = (void *)sub_1DC408980();
  swift_bridgeObjectRelease();
  v104 = (char *)objc_msgSend(v101, sel_initWithString_attributes_, v102, v103);
  swift_bridgeObjectRelease();

  v106 = v297;
  v105 = v298;
  v107 = v299;
  (*(void (**)(char *, uint64_t, double))(*(_QWORD *)&v298 + 16))(v297, v332, COERCE_DOUBLE(*(_QWORD *)&v299));
  v108 = (*(uint64_t (**)(char *, double))(*(_QWORD *)&v105 + 88))(v106, COERCE_DOUBLE(*(_QWORD *)&v107));
  v109 = *MEMORY[0x1E0DAE888];
  v110 = (unsigned int *)MEMORY[0x1E0DAD908];
  v301 = v94;
  if (v108 == v109)
  {
    v111 = v302;
    v112 = v303;
    v113 = *(void (**)(char *, _QWORD, _QWORD *))(v303 + 104);
    v114 = v304;
    v113(v302, *MEMORY[0x1E0DAD900], v304);
LABEL_25:
    v115 = v329;
LABEL_28:
    v113(v316, *v110, v114);
    sub_1DC081B48(&qword_1EDB27510, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD910], MEMORY[0x1E0DAD918]);
    v116 = v104;
    sub_1DC408C80();
    sub_1DC408C80();
    if (*(_QWORD *)&v338 == v337[0] && *(_QWORD *)&v339 == v337[1])
    {
      swift_bridgeObjectRelease_n();
      v117 = *(void (**)(char *, _QWORD *))(v112 + 8);
      v117(v316, v114);
      v117(v111, v114);
    }
    else
    {
      v118 = sub_1DC4099E8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v119 = *(void (**)(char *, _QWORD *))(v112 + 8);
      v119(v316, v114);
      v119(v111, v114);
      if ((v118 & 1) == 0)
        goto LABEL_33;
    }
    if (((v314[40] | v294) & 1) == 0)
    {
      v121 = (_QWORD *)*__swift_project_boxed_opaque_existential_1(v331, *(_QWORD *)(v328 + 40));
      if (v65 >= 0.0)
      {
        swift_bridgeObjectRelease();
        v123 = (void *)sub_1DC4092F8();
        v127 = v121[5];
        v128 = v121[6];
        __swift_project_boxed_opaque_existential_1(v121 + 2, v127);
        v126 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v128 + 24))(v127, v128);
        v122 = 1;
      }
      else
      {
        v122 = sub_1DC4099E8();
        swift_bridgeObjectRelease();
        v123 = (void *)sub_1DC4092F8();
        v124 = v121[5];
        v125 = v121[6];
        __swift_project_boxed_opaque_existential_1(v121 + 2, v124);
        v126 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v125 + 32))(v124, v125);
      }
      v129 = v121 + 7;
      v130 = v121[10];
      v131 = v121[11];
      __swift_project_boxed_opaque_existential_1(v129, v130);
      v132 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v131 + 16))(v130, v131);
      v133 = (char *)objc_msgSend(v126, sel_stocksAccessibilityAdjustedForIncreaseContrastAgainstWithBackgroundColor_, v132);

      isa = NSAttributedString.appendingAccessibilityDWCPriceChangeArrow(pointingUpward:withFont:withColor:)(v122 & 1, (UIFont)v123, (UIColor)v133).super.isa;
      v116 = v133;
      v115 = v329;
LABEL_38:
      v134 = v318;

      v135 = v308;
      v316 = (char *)isa;
      objc_msgSend(v308, sel_setAttributedText_, isa);
      v304 = (_QWORD *)(v115 + v330[6]);
      v136 = v307;
      sub_1DC0E05B4((uint64_t)v304, v307);
      v318 = *(id *)(v306 + 48);
      ((void (*)(uint64_t, uint64_t, uint64_t))v318)(v136, 1, v321);
      sub_1DC0E1238(v136);
      type metadata accessor for Localized();
      ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
      v138 = (void *)objc_opt_self();
      v307 = ObjCClassFromMetadata;
      v139 = objc_msgSend(v138, sel_bundleForClass_, ObjCClassFromMetadata);
      sub_1DC3FFC80();

      v140 = (void *)sub_1DC408A1C();
      swift_bridgeObjectRelease();
      objc_msgSend(v134, sel_setAccessibilityLabel_, v140);

      v142 = sub_1DC0E792C(v332);
      v143 = v305;
      if (!v141)
      {
        sub_1DC408A04();
        sub_1DC4000DC();
        v142 = sub_1DC408A94();
      }
      v144 = v141;
      sub_1DC0DBA38();
      v306 = v145;
      v146 = swift_allocObject();
      v303 = xmmword_1DC40FA70;
      *(_OWORD *)(v146 + 16) = xmmword_1DC40FA70;
      *(_QWORD *)(v146 + 32) = v317;
      *(_QWORD *)(v146 + 40) = v143;
      *(_QWORD *)(v146 + 48) = sub_1DC0E48D0();
      *(_QWORD *)(v146 + 56) = v147;
      *(_QWORD *)(v146 + 64) = v142;
      *(_QWORD *)(v146 + 72) = v144;
      sub_1DC404300();
      v149 = v148;
      swift_bridgeObjectRelease();
      if (v149)
      {
        v150 = (void *)sub_1DC408A1C();
        swift_bridgeObjectRelease();
      }
      else
      {
        v150 = 0;
      }
      objc_msgSend(v134, sel_setAccessibilityValue_, v150);

      objc_msgSend(v135, sel_setIsAccessibilityElement_, 0);
      v151 = *(void **)&v319[OBJC_IVAR____TtC8StocksUI16QuoteSummaryView_atCloseLabel];
      v152 = v310;
      objc_msgSend(v151, sel_setFrame_, v310[12], v310[13], v310[14], v310[15]);
      sub_1DC0824D4((uint64_t)v331, (uint64_t)&v338);
      v153 = __swift_project_boxed_opaque_existential_1(&v338, *(uint64_t *)&v341);
      v317 = sub_1DC217D20();
      v154 = (_QWORD *)*v153;
      v155 = swift_allocObject();
      *(_OWORD *)(v155 + 16) = v325;
      v156 = v300;
      *(double *)(v155 + 32) = v300;
      swift_bridgeObjectRetain();
      v308 = *(id *)&v156;
      v157 = v315;
      *(_QWORD *)(v155 + 40) = sub_1DC4092F8();
      v158 = v301;
      *(_QWORD *)(v155 + 64) = v157;
      *(double *)(v155 + 72) = v158;
      v159 = v154 + 2;
      v161 = v154[5];
      v160 = v154[6];
      __swift_project_boxed_opaque_existential_1(v159, v161);
      v162 = *(_QWORD *)(v160 + 16);
      v163 = *(uint64_t (**)(uint64_t, uint64_t))(v162 + 200);
      v305 = *(id *)&v158;
      v164 = v163(v161, v162);
      *(_QWORD *)(v155 + 104) = v324;
      *(_QWORD *)(v155 + 80) = v164;
      sub_1DC0FA3C4(v155);
      v165 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
      v166 = (void *)sub_1DC408A1C();
      swift_bridgeObjectRelease();
      v167 = (void *)sub_1DC408980();
      swift_bridgeObjectRelease();
      v168 = objc_msgSend(v165, sel_initWithString_attributes_, v166, v167);
      swift_bridgeObjectRelease();

      v317 = (uint64_t)v151;
      objc_msgSend(v151, sel_setAttributedText_, v168);

      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v338);
      sub_1DC2CCE00((uint64_t)(v152 + 18), (uint64_t)v337);
      v169 = (uint64_t)v313;
      v104 = &v313[*(int *)(v309 + 48)];
      sub_1DC0E05B4((uint64_t)v304, (uint64_t)v313);
      sub_1DC2CCE00((uint64_t)v337, (uint64_t)v104);
      if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v318)(v169, 1, v321) == 1)
      {
        sub_1DC2CCE00((uint64_t)v337, (uint64_t)&v338);
        v170 = sub_1DC2CCE54((uint64_t)&v338);
        v172 = v311;
        v171 = v312;
        if (v170 == 1)
        {
          v173 = v319;
          v174 = *(void **)&v319[OBJC_IVAR____TtC8StocksUI16QuoteSummaryView_afterHoursPriceLabel];
          objc_msgSend(v174, sel_setHidden_, 1);
          objc_msgSend(*(id *)&v173[OBJC_IVAR____TtC8StocksUI16QuoteSummaryView_afterHoursPriceChangeLabel], sel_setHidden_, 1);
          objc_msgSend(*(id *)&v173[OBJC_IVAR____TtC8StocksUI16QuoteSummaryView_afterHoursLabel], sel_setHidden_, 1);
          objc_msgSend(*(id *)&v173[OBJC_IVAR____TtC8StocksUI16QuoteSummaryView_separatorBarView], sel_setHidden_, 1);
          objc_msgSend(v174, sel_setAccessibilityLabel_, 0);
          objc_msgSend(v174, sel_setAccessibilityValue_, 0);
          v175 = v329;
          v176 = v289;
          (*(void (**)(char *, _QWORD, uint64_t))(v172 + 104))(v289, *MEMORY[0x1E0DAE0B0], v171);
          sub_1DC081B48((unint64_t *)&qword_1EDB28B78, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAE0F8], MEMORY[0x1E0DAE110]);
          sub_1DC408C80();
          sub_1DC408C80();
          if (v335 == v333 && v336 == v334)
          {
            swift_bridgeObjectRelease_n();
            (*(void (**)(char *, uint64_t))(v172 + 8))(v176, v171);
            v177 = v290;
            sub_1DC0990BC(v175, v290, (uint64_t (*)(_QWORD))type metadata accessor for QuoteSummaryViewModel);
            v178 = (void *)v317;
          }
          else
          {
            v196 = sub_1DC4099E8();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            (*(void (**)(char *, uint64_t))(v172 + 8))(v176, v171);
            v177 = v290;
            sub_1DC0990BC(v175, v290, (uint64_t (*)(_QWORD))type metadata accessor for QuoteSummaryViewModel);
            v197 = 0;
            v178 = (void *)v317;
            if ((v196 & 1) == 0)
            {
LABEL_82:
              sub_1DC0926D8(v177, (uint64_t (*)(_QWORD))type metadata accessor for QuoteSummaryViewModel);
              objc_msgSend(v178, sel_setHidden_, v197 & 1);

              return sub_1DC0E1238(v169);
            }
          }
          if (*(_BYTE *)(v177 + v330[5] + 80) == 1)
          {
            swift_bridgeObjectRelease();
            v197 = 0;
          }
          else
          {
            v278 = sub_1DC4099E8();
            swift_bridgeObjectRelease();
            v197 = v278 ^ 1;
          }
          goto LABEL_82;
        }
        goto LABEL_91;
      }
      v309 = v74;
      v310 = v93;
      v104 = v288;
      sub_1DC0E05B4(v169, (uint64_t)v288);
      sub_1DC2CCE00((uint64_t)v337, (uint64_t)&v338);
      if (sub_1DC2CCE54((uint64_t)&v338) == 1)
      {
        sub_1DC0926D8((uint64_t)v104, (uint64_t (*)(_QWORD))type metadata accessor for PriceViewModel);
LABEL_91:
        sub_1DC0E1238(v169);
        sub_1DC409838();
        __break(1u);
        goto LABEL_92;
      }
      v179 = v338;
      v180 = v339;
      v181 = v340;
      v182 = v341;
      v183 = v342;
      v184 = v343;
      v185 = v344;
      v186 = v345;
      v298 = v347;
      v299 = v346;
      v296 = v349;
      v297 = v348;
      v304 = v350;
      v301 = v352;
      v302 = v351;
      v300 = v353;
      v187 = v320;
      sub_1DC0FF10C((uint64_t)v104, v320);
      v188 = v319;
      v189 = *(void **)&v319[OBJC_IVAR____TtC8StocksUI16QuoteSummaryView_separatorBarView];
      objc_msgSend(v189, sel_setFrame_, v179, v180, v181, v182);
      v318 = *(id *)&v188[OBJC_IVAR____TtC8StocksUI16QuoteSummaryView_afterHoursPriceLabel];
      objc_msgSend(v318, sel_setFrame_, v183, v184, v185, v186);
      v314 = *(unsigned __int8 **)&v188[OBJC_IVAR____TtC8StocksUI16QuoteSummaryView_afterHoursPriceChangeLabel];
      objc_msgSend(v314, sel_setFrame_, v299, v298, *(double *)&v297, v296);
      v319 = *(char **)&v188[OBJC_IVAR____TtC8StocksUI16QuoteSummaryView_afterHoursLabel];
      objc_msgSend(v319, sel_setFrame_, *(double *)&v304, *(double *)&v302, v301, v300);
      v190 = __swift_project_boxed_opaque_existential_1(v331, *(_QWORD *)(v328 + 40));
      v192 = *(_QWORD *)(*v190 + 40);
      v191 = *(_QWORD *)(*v190 + 48);
      __swift_project_boxed_opaque_existential_1((_QWORD *)(*v190 + 16), v192);
      v193 = (void *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)(v191 + 16) + 152))(v192);
      v304 = v189;
      objc_msgSend(v189, sel_setBackgroundColor_, v193);

      sub_1DC401324();
      sub_1DC401318();
      swift_release();
      if ((*(_BYTE *)(v187 + 8) & 1) != 0)
      {
        v195 = *(_QWORD *)(v187 + 64);
        v194 = *(_QWORD *)(v187 + 72);
        swift_bridgeObjectRetain();
LABEL_68:
        v302 = (char *)sub_1DC0FC0DC(v332, 0);
        v300 = v208;
        if (*(_BYTE *)(v320 + 24))
          v209 = 2;
        else
          v209 = *(double *)(v320 + 16) < 0.0;
        LODWORD(v301) = v209;
        v210 = (_QWORD *)*__swift_project_boxed_opaque_existential_1(v331, *(_QWORD *)(v328 + 40));
        v211 = swift_allocObject();
        *(_OWORD *)(v211 + 16) = v325;
        v212 = v308;
        *(_QWORD *)(v211 + 32) = v308;
        swift_bridgeObjectRetain();
        v308 = v212;
        v213 = v315;
        *(_QWORD *)(v211 + 40) = sub_1DC4092F8();
        v214 = v305;
        *(_QWORD *)(v211 + 64) = v213;
        *(_QWORD *)(v211 + 72) = v214;
        v215 = v210 + 2;
        v217 = v210[5];
        v216 = v210[6];
        __swift_project_boxed_opaque_existential_1(v215, v217);
        v218 = *(_QWORD *)(v216 + 16);
        v219 = *(uint64_t (**)(uint64_t, uint64_t))(v218 + 144);
        v220 = v214;
        v221 = v219(v217, v218);
        *(_QWORD *)(v211 + 104) = v324;
        *(_QWORD *)(v211 + 80) = v221;
        sub_1DC0FA3C4(v211);
        v222 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
        v310 = (double *)v195;
        v223 = (void *)sub_1DC408A1C();
        v309 = v194;
        swift_bridgeObjectRelease();
        v321 = MEMORY[0x1E0DEE9B8] + 8;
        v224 = (void *)sub_1DC408980();
        swift_bridgeObjectRelease();
        v225 = objc_msgSend(v222, sel_initWithString_attributes_, v223, v224);

        objc_msgSend(v318, sel_setAttributedText_, v225);
        v226 = v328;
        v227 = (_QWORD *)*__swift_project_boxed_opaque_existential_1(v331, *(_QWORD *)(v328 + 40));
        v228 = swift_allocObject();
        *(_OWORD *)(v228 + 16) = v325;
        v229 = v308;
        *(_QWORD *)(v228 + 32) = v308;
        swift_bridgeObjectRetain();
        v305 = v229;
        *(_QWORD *)(v228 + 40) = sub_1DC4092F8();
        *(_QWORD *)(v228 + 64) = v213;
        *(_QWORD *)(v228 + 72) = v220;
        v308 = v220;
        v230 = sub_1DC0E1EE4(LOBYTE(v301));
        v231 = v227 + 7;
        v233 = v227[10];
        v232 = v227[11];
        __swift_project_boxed_opaque_existential_1(v231, v233);
        v234 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v232 + 16))(v233, v232);
        v235 = objc_msgSend(v230, sel_stocksAccessibilityAdjustedForIncreaseContrastAgainstWithBackgroundColor_, v234);

        v236 = v324;
        *(_QWORD *)(v228 + 104) = v324;
        *(_QWORD *)(v228 + 80) = v235;
        sub_1DC0FA3C4(v228);
        v237 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
        v238 = (void *)sub_1DC408A1C();
        swift_bridgeObjectRelease();
        v239 = (void *)sub_1DC408980();
        swift_bridgeObjectRelease();
        v240 = objc_msgSend(v237, sel_initWithString_attributes_, v238, v239);
        swift_bridgeObjectRelease();

        objc_msgSend(v314, sel_setAttributedText_, v240);
        v241 = (_QWORD *)*__swift_project_boxed_opaque_existential_1(v331, *(_QWORD *)(v226 + 40));
        v242 = swift_allocObject();
        *(_OWORD *)(v242 + 16) = v325;
        v243 = v305;
        *(_QWORD *)(v242 + 32) = v305;
        swift_bridgeObjectRetain();
        v244 = v243;
        *(_QWORD *)(v242 + 40) = sub_1DC4092F8();
        v245 = v308;
        *(_QWORD *)(v242 + 64) = v213;
        *(_QWORD *)(v242 + 72) = v245;
        v246 = v241 + 2;
        v247 = v241[5];
        v248 = v241[6];
        __swift_project_boxed_opaque_existential_1(v246, v247);
        v249 = *(_QWORD *)(v248 + 16);
        v250 = *(uint64_t (**)(uint64_t, uint64_t))(v249 + 200);
        v251 = v245;
        v252 = v249;
        v253 = v320;
        v254 = v250(v247, v252);
        *(_QWORD *)(v242 + 104) = v236;
        *(_QWORD *)(v242 + 80) = v254;
        sub_1DC0FA3C4(v242);
        v255 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
        v256 = (void *)sub_1DC408A1C();
        swift_bridgeObjectRelease();
        v257 = (void *)sub_1DC408980();
        swift_bridgeObjectRelease();
        v258 = objc_msgSend(v255, sel_initWithString_attributes_, v256, v257);

        objc_msgSend(v319, sel_setAttributedText_, v258);
        v259 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, v307);
        sub_1DC3FFC80();

        v260 = (void *)sub_1DC408A1C();
        swift_bridgeObjectRelease();
        objc_msgSend(v318, sel_setAccessibilityLabel_, v260);

        v262 = sub_1DC0E792C(v332);
        if (!v261)
        {
          sub_1DC408A04();
          sub_1DC4000DC();
          v262 = sub_1DC408A94();
        }
        v263 = v261;
        v265 = v311;
        v264 = v312;
        v266 = (void *)v317;
        v267 = swift_allocObject();
        *(_OWORD *)(v267 + 16) = v303;
        v268 = v309;
        *(_QWORD *)(v267 + 32) = v310;
        *(_QWORD *)(v267 + 40) = v268;
        *(_QWORD *)(v267 + 48) = sub_1DC0E48D0();
        *(_QWORD *)(v267 + 56) = v269;
        *(_QWORD *)(v267 + 64) = v262;
        *(_QWORD *)(v267 + 72) = v263;
        sub_1DC404300();
        v271 = v270;
        swift_bridgeObjectRelease();
        v169 = (uint64_t)v313;
        if (v271)
        {
          v272 = (void *)sub_1DC408A1C();
          swift_bridgeObjectRelease();
        }
        else
        {
          v272 = 0;
        }
        v273 = v291;
        v274 = v318;
        objc_msgSend(v318, sel_setAccessibilityValue_, v272);

        objc_msgSend(v274, sel_setIsAccessibilityElement_, 1);
        objc_msgSend(v314, sel_setIsAccessibilityElement_, 0);
        objc_msgSend(v319, sel_setIsAccessibilityElement_, 0);
        (*(void (**)(char *, _QWORD, uint64_t))(v265 + 104))(v273, *MEMORY[0x1E0DAE0B0], v264);
        sub_1DC081B48((unint64_t *)&qword_1EDB28B78, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAE0F8], MEMORY[0x1E0DAE110]);
        sub_1DC408C80();
        sub_1DC408C80();
        if (v335 == v333 && v336 == v334)
        {
          swift_bridgeObjectRelease_n();
          v275 = 0;
        }
        else
        {
          v276 = sub_1DC4099E8();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v275 = v276 ^ 1;
        }
        (*(void (**)(char *, uint64_t))(v265 + 8))(v273, v264);
        objc_msgSend(v266, sel_setHidden_, 0);
        v277 = v275 & 1;
        objc_msgSend(v318, sel_setHidden_, v277);
        objc_msgSend(v314, sel_setHidden_, v277);
        objc_msgSend(v319, sel_setHidden_, v277);
        objc_msgSend(v304, sel_setHidden_, v277);

        sub_1DC0926D8(v253, (uint64_t (*)(_QWORD))type metadata accessor for PriceViewModel);
        return sub_1DC0E1238(v169);
      }
      v198 = v335;
      v199 = *(double *)v187;
      v200 = v283;
      sub_1DC0990BC(v187, v283, (uint64_t (*)(_QWORD))type metadata accessor for PriceViewModel);
      if ((v198 & 1) != 0)
      {
        v202 = v285;
        v201 = v286;
        v203 = v282;
        (*(void (**)(char *, uint64_t, uint64_t))(v285 + 16))(v282, v200 + *(int *)(v321 + 40), v286);
        v204 = (*(uint64_t (**)(char *, uint64_t))(v202 + 88))(v203, v201);
        v205 = 2;
        if (v204 == *MEMORY[0x1E0DAF1E8]
          || v204 == *MEMORY[0x1E0DAF1F0]
          || v204 == *MEMORY[0x1E0DAF1C0]
          || v204 == *MEMORY[0x1E0DAF1D8]
          || v204 == *MEMORY[0x1E0DAF1C8]
          || v204 == *MEMORY[0x1E0DAF1E0])
        {
          goto LABEL_63;
        }
        if (v204 != *MEMORY[0x1E0DAF1D0])
        {
          if (v204 != *MEMORY[0x1E0DAF1B8])
            (*(void (**)(char *, uint64_t))(v285 + 8))(v203, v286);
          v205 = 2;
          goto LABEL_63;
        }
      }
      v205 = 0;
LABEL_63:
      sub_1DC0926D8(v200, (uint64_t (*)(_QWORD))type metadata accessor for PriceViewModel);
      if (qword_1EDB2D588 != -1)
        swift_once();
      v195 = sub_1DC0FC858(*(_QWORD *)(v187 + 48), *(_QWORD *)(v187 + 56), 5, 1, v205, v199);
      v194 = v206;
      v207 = v284;
      sub_1DC0990BC(v187, v284, (uint64_t (*)(_QWORD))type metadata accessor for PriceViewModel);
      if (!v194)
      {
        v195 = *(_QWORD *)(v207 + 64);
        v194 = *(_QWORD *)(v207 + 72);
        swift_bridgeObjectRetain();
      }
      sub_1DC0926D8(v207, (uint64_t (*)(_QWORD))type metadata accessor for PriceViewModel);
      goto LABEL_68;
    }
LABEL_33:
    isa = (Class)v116;
    goto LABEL_38;
  }
  v114 = v304;
  v111 = v302;
  v112 = v303;
  if (v108 == *MEMORY[0x1E0DAE868])
  {
    v113 = *(void (**)(char *, _QWORD, _QWORD *))(v303 + 104);
    v113(v302, *MEMORY[0x1E0DAD8F8], v304);
    goto LABEL_25;
  }
  v115 = v329;
  if (v108 == *MEMORY[0x1E0DAE878])
  {
    v113 = *(void (**)(char *, _QWORD, _QWORD *))(v303 + 104);
    v113(v302, *MEMORY[0x1E0DAD908], v304);
    goto LABEL_28;
  }
LABEL_92:
  v280 = v104;
  result = sub_1DC4099DC();
  __break(1u);
  return result;
}

void sub_1DC2CCD6C()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EDB27718)
  {
    sub_1DC089DA4(255, (unint64_t *)&qword_1EDB2D5E8, (uint64_t (*)(uint64_t))type metadata accessor for PriceViewModel, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    sub_1DC0D4B28(255, (unint64_t *)&qword_1EDB3AF40);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EDB27718);
  }
}

uint64_t sub_1DC2CCE00(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1DC0D4B28(0, (unint64_t *)&qword_1EDB3AF40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC2CCE54(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 128))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_1DC2CCE70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1DC2CCE98(a3, a4);
}

uint64_t sub_1DC2CCE98(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char v46;
  _QWORD *v47;
  uint64_t v48;
  double v49;
  _QWORD *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  int v54;
  _QWORD *v55;
  unsigned int *v56;
  uint64_t v57;
  _QWORD *v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  double v62;
  char *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  int v67;
  unsigned int *v68;
  char v69;
  uint64_t v70;
  double v71;
  char *v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  int v76;
  unsigned int *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t result;
  char v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  int v91;
  unsigned int *v92;
  uint64_t v93;
  uint64_t v94;
  _QWORD *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  char *v105;
  char *v106;
  char *v107;
  char *v108;
  uint64_t v109;
  char *v110;
  char *v111;
  char *v112;
  char *v113;
  uint64_t v114;
  char *v115;
  _QWORD *v116;
  char *v117;
  _QWORD *v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  _QWORD *v126;
  uint64_t v127;
  uint64_t v128;
  double v129;

  v128 = a2;
  v2 = sub_1DC403280();
  v124 = *(_QWORD *)(v2 - 8);
  v125 = v2;
  MEMORY[0x1E0C80A78](v2);
  v107 = (char *)&v105 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v111 = (char *)&v105 - v5;
  MEMORY[0x1E0C80A78](v6);
  v116 = (char **)((char *)&v105 - v7);
  MEMORY[0x1E0C80A78](v8);
  v120 = (char *)&v105 - v9;
  v121 = sub_1DC40814C();
  v127 = *(_QWORD *)(v121 - 8);
  MEMORY[0x1E0C80A78](v121);
  v106 = (char *)&v105 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v110 = (char *)&v105 - v12;
  MEMORY[0x1E0C80A78](v13);
  v108 = (char *)&v105 - v14;
  MEMORY[0x1E0C80A78](v15);
  v115 = (char *)&v105 - v16;
  MEMORY[0x1E0C80A78](v17);
  v112 = (char *)&v105 - v18;
  MEMORY[0x1E0C80A78](v19);
  v113 = (char *)&v105 - v20;
  MEMORY[0x1E0C80A78](v21);
  v117 = (char *)&v105 - v22;
  MEMORY[0x1E0C80A78](v23);
  v118 = (char **)((char *)&v105 - v24);
  v25 = sub_1DC40367C();
  v122 = *(_QWORD *)(v25 - 8);
  v123 = v25;
  MEMORY[0x1E0C80A78](v25);
  v109 = (uint64_t)&v105 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v27);
  v114 = (uint64_t)&v105 - v28;
  MEMORY[0x1E0C80A78](v29);
  v119 = (uint64_t)&v105 - v30;
  MEMORY[0x1E0C80A78](v31);
  v33 = (char *)&v105 - v32;
  v34 = sub_1DC407E10();
  v35 = *(_QWORD *)(v34 - 8);
  MEMORY[0x1E0C80A78](v34);
  v105 = (char *)&v105 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v37);
  v39 = (char *)&v105 - v38;
  MEMORY[0x1E0C80A78](v40);
  v42 = (char *)&v105 - v41;
  MEMORY[0x1E0C80A78](v43);
  v45 = (char *)&v105 - v44;
  sub_1DC406AE4();
  sub_1DC406A54();
  v46 = sub_1DC406964();
  swift_release();
  if ((v46 & 1) != 0)
  {
    v47 = v126;
    v48 = v126[11];
    v119 = v126[10];
    v116 = __swift_project_boxed_opaque_existential_1(v126 + 7, v119);
    sub_1DC2CD9A8();
    sub_1DC408098();
    v49 = v129;
    sub_1DC4080B0();
    sub_1DC19238C((uint64_t)v33);
    (*(void (**)(char *, uint64_t))(v35 + 8))(v45, v34);
    v50 = v118;
    sub_1DC4080BC();
    v51 = v127;
    v52 = v117;
    v53 = v121;
    (*(void (**)(char *, _QWORD *, uint64_t))(v127 + 16))(v117, v50, v121);
    v54 = (*(uint64_t (**)(char *, uint64_t))(v51 + 88))(v52, v53);
    v55 = v47;
    if (v54 == *MEMORY[0x1E0D5E7A8])
    {
      v56 = (unsigned int *)MEMORY[0x1E0DAD290];
LABEL_16:
      v78 = v124;
      v79 = v125;
      v80 = v120;
      (*(void (**)(char *, _QWORD, uint64_t))(v124 + 104))(v120, *v56, v125);
      (*(void (**)(_QWORD *, uint64_t))(v51 + 8))(v50, v53);
      (*(void (**)(char *, char *, uint64_t, uint64_t, double))(v48 + 48))(v33, v80, v119, v48, v49);
      (*(void (**)(char *, uint64_t))(v78 + 8))(v80, v79);
      (*(void (**)(char *, uint64_t))(v122 + 8))(v33, v123);
      __swift_project_boxed_opaque_existential_1(v55 + 2, v55[5]);
      sub_1DC408098();
      return sub_1DC40217C();
    }
    if (v54 == *MEMORY[0x1E0D5E7B8])
    {
      v56 = (unsigned int *)MEMORY[0x1E0DAD2A0];
      goto LABEL_16;
    }
    if (v54 == *MEMORY[0x1E0D5E7B0])
    {
      v56 = (unsigned int *)MEMORY[0x1E0DAD298];
      goto LABEL_16;
    }
    goto LABEL_34;
  }
  v57 = v35;
  v120 = (char *)v34;
  v58 = v126;
  sub_1DC4069F4();
  v59 = sub_1DC406964();
  swift_release();
  if ((v59 & 1) != 0)
  {
    v60 = v58[10];
    v61 = v58[11];
    v118 = __swift_project_boxed_opaque_existential_1(v58 + 7, v60);
    sub_1DC2CD9A8();
    sub_1DC408098();
    v62 = v129;
    sub_1DC4080B0();
    sub_1DC19238C(v119);
    (*(void (**)(char *, char *))(v57 + 8))(v42, v120);
    v63 = v113;
    sub_1DC4080BC();
    v64 = v127;
    v65 = v112;
    v66 = v121;
    (*(void (**)(char *, char *, uint64_t))(v127 + 16))(v112, v63, v121);
    v67 = (*(uint64_t (**)(char *, uint64_t))(v64 + 88))(v65, v66);
    if (v67 == *MEMORY[0x1E0D5E7A8])
    {
      v68 = (unsigned int *)MEMORY[0x1E0DAD290];
LABEL_24:
      v94 = v124;
      v93 = v125;
      v95 = v116;
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(v124 + 104))(v116, *v68, v125);
      (*(void (**)(char *, uint64_t))(v127 + 8))(v63, v66);
      v96 = v119;
      (*(void (**)(uint64_t, _QWORD *, uint64_t, uint64_t, double))(v61 + 56))(v119, v95, v60, v61, v62);
      (*(void (**)(_QWORD *, uint64_t))(v94 + 8))(v95, v93);
      (*(void (**)(uint64_t, uint64_t))(v122 + 8))(v96, v123);
      __swift_project_boxed_opaque_existential_1(v58 + 2, v58[5]);
      sub_1DC408098();
      return sub_1DC402158();
    }
    if (v67 == *MEMORY[0x1E0D5E7B8])
    {
      v68 = (unsigned int *)MEMORY[0x1E0DAD2A0];
      goto LABEL_24;
    }
    if (v67 == *MEMORY[0x1E0D5E7B0])
    {
      v68 = (unsigned int *)MEMORY[0x1E0DAD298];
      goto LABEL_24;
    }
LABEL_34:
    result = sub_1DC409838();
    __break(1u);
    return result;
  }
  sub_1DC406A24();
  v69 = sub_1DC406964();
  swift_release();
  if ((v69 & 1) != 0)
  {
    v70 = v58[11];
    v119 = v58[10];
    __swift_project_boxed_opaque_existential_1(v58 + 7, v119);
    sub_1DC2CD9A8();
    sub_1DC408098();
    v71 = v129;
    sub_1DC4080B0();
    sub_1DC19238C(v114);
    (*(void (**)(char *, char *))(v57 + 8))(v39, v120);
    v72 = v115;
    sub_1DC4080BC();
    v73 = v127;
    v74 = v108;
    v75 = v121;
    (*(void (**)(char *, char *, uint64_t))(v127 + 16))(v108, v72, v121);
    v76 = (*(uint64_t (**)(char *, uint64_t))(v73 + 88))(v74, v75);
    if (v76 == *MEMORY[0x1E0D5E7A8])
    {
      v77 = (unsigned int *)MEMORY[0x1E0DAD290];
    }
    else if (v76 == *MEMORY[0x1E0D5E7B8])
    {
      v77 = (unsigned int *)MEMORY[0x1E0DAD2A0];
    }
    else
    {
      if (v76 != *MEMORY[0x1E0D5E7B0])
        goto LABEL_34;
      v77 = (unsigned int *)MEMORY[0x1E0DAD298];
    }
    v98 = v124;
    v97 = v125;
    v99 = v111;
    (*(void (**)(char *, _QWORD, uint64_t))(v124 + 104))(v111, *v77, v125);
    (*(void (**)(char *, uint64_t))(v127 + 8))(v115, v75);
    v100 = v114;
    (*(void (**)(uint64_t, char *, uint64_t, uint64_t, double))(v70 + 64))(v114, v99, v119, v70, v71);
    (*(void (**)(char *, uint64_t))(v98 + 8))(v99, v97);
    (*(void (**)(uint64_t, uint64_t))(v122 + 8))(v100, v123);
    __swift_project_boxed_opaque_existential_1(v58 + 2, v58[5]);
    sub_1DC408098();
    return sub_1DC402170();
  }
  sub_1DC406A00();
  v82 = sub_1DC406964();
  result = swift_release();
  v83 = v120;
  if ((v82 & 1) != 0)
  {
    v84 = v57;
    v85 = v58[11];
    v119 = v58[10];
    __swift_project_boxed_opaque_existential_1(v58 + 7, v119);
    sub_1DC2CD9A8();
    v86 = v105;
    sub_1DC4080B0();
    sub_1DC19238C(v109);
    (*(void (**)(char *, char *))(v84 + 8))(v86, v83);
    v87 = v110;
    sub_1DC4080BC();
    v88 = v127;
    v89 = v106;
    v90 = v121;
    (*(void (**)(char *, char *, uint64_t))(v127 + 16))(v106, v87, v121);
    v91 = (*(uint64_t (**)(char *, uint64_t))(v88 + 88))(v89, v90);
    if (v91 == *MEMORY[0x1E0D5E7A8])
    {
      v92 = (unsigned int *)MEMORY[0x1E0DAD290];
    }
    else if (v91 == *MEMORY[0x1E0D5E7B8])
    {
      v92 = (unsigned int *)MEMORY[0x1E0DAD2A0];
    }
    else
    {
      if (v91 != *MEMORY[0x1E0D5E7B0])
        goto LABEL_34;
      v92 = (unsigned int *)MEMORY[0x1E0DAD298];
    }
    v102 = v124;
    v101 = v125;
    v103 = v107;
    (*(void (**)(char *, _QWORD, uint64_t))(v124 + 104))(v107, *v92, v125);
    (*(void (**)(char *, uint64_t))(v127 + 8))(v110, v90);
    v104 = v109;
    (*(void (**)(uint64_t, char *, uint64_t, uint64_t))(v85 + 32))(v109, v103, v119, v85);
    (*(void (**)(char *, uint64_t))(v102 + 8))(v103, v101);
    (*(void (**)(uint64_t, uint64_t))(v122 + 8))(v104, v123);
    __swift_project_boxed_opaque_existential_1(v58 + 2, v58[5]);
    sub_1DC408098();
    return sub_1DC40214C();
  }
  return result;
}

void sub_1DC2CD9A8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB2B088)
  {
    v0 = sub_1DC4080D4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB2B088);
  }
}

uint64_t sub_1DC2CD9FC()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ManageWatchlistsRouter()
{
  return objc_opt_self();
}

uint64_t storeEnumTagSinglePayload for ValueChangeTrend(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1DC2CDA9C + 4 * byte_1DC4247A5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1DC2CDAD0 + 4 * byte_1DC4247A0[v4]))();
}

uint64_t sub_1DC2CDAD0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC2CDAD8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC2CDAE0);
  return result;
}

uint64_t sub_1DC2CDAEC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC2CDAF4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1DC2CDAF8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC2CDB00(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ValueChangeTrend()
{
  return &type metadata for ValueChangeTrend;
}

uint64_t sub_1DC2CDB1C(char *a1, char *a2)
{
  return sub_1DC1594D0(*a1, *a2);
}

uint64_t sub_1DC2CDB28()
{
  sub_1DC409AC0();
  sub_1DC408AF4();
  swift_bridgeObjectRelease();
  return sub_1DC409AF0();
}

uint64_t sub_1DC2CDB94()
{
  sub_1DC408AF4();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DC2CDBDC()
{
  sub_1DC409AC0();
  sub_1DC408AF4();
  swift_bridgeObjectRelease();
  return sub_1DC409AF0();
}

uint64_t sub_1DC2CDC44@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1DC4098A4();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

void sub_1DC2CDCA0(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 28789;
  if (*v1)
    v2 = 1853321060;
  v3 = 0xE200000000000000;
  if (*v1)
    v3 = 0xE400000000000000;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1DC2CDCCC()
{
  sub_1DC2CDDBC();
  return sub_1DC408CA4();
}

uint64_t sub_1DC2CDD28()
{
  sub_1DC2CDDBC();
  return sub_1DC408C8C();
}

unint64_t sub_1DC2CDD78()
{
  unint64_t result;

  result = qword_1F03512E8;
  if (!qword_1F03512E8)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC42488C, &type metadata for ValueChangeTrend);
    atomic_store(result, (unint64_t *)&qword_1F03512E8);
  }
  return result;
}

unint64_t sub_1DC2CDDBC()
{
  unint64_t result;

  result = qword_1F03512F0;
  if (!qword_1F03512F0)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC424814, &type metadata for ValueChangeTrend);
    atomic_store(result, (unint64_t *)&qword_1F03512F0);
  }
  return result;
}

uint64_t sub_1DC2CDE00(uint64_t a1)
{
  int64_t v1;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    sub_1DC0F0894(0, v1, 0);
    __asm { BR              X9 }
  }
  sub_1DC080808(&qword_1EDB3F4F8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB2700], MEMORY[0x1E0DB26F8]);
  sub_1DC408770();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DC2CDF90(const char *a1, uint64_t a2)
{
  char *v2;
  char *v3;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v33)(void);
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  __n128 v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  unsigned int (*v48)(char *, uint64_t, char *);
  char *v49;
  uint64_t v50;
  void *v51;
  char *v52;
  uint64_t (*v53)(char *, uint64_t, const char *);
  const char *v54;
  int v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v64;
  void (*v65)(char *, char *, char *);
  uint64_t v66;
  char *v67;
  void (*v68)(char *, uint64_t);
  char *v69;
  uint64_t v70;
  char *v71;
  void (*v72)(char *, uint64_t, uint64_t, uint64_t);
  unsigned int (*v73)(char *, uint64_t, uint64_t);
  void (*v74)(uint64_t);
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  unsigned int (*v83)(char *, uint64_t, char *);
  void (*v84)(char *, char *, char *);
  char *v85;
  const char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  void (*v91)(char *, char *);
  char *v92;
  char *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  char *v99;
  uint64_t v100;
  void *v101;
  char *v102;
  void (*v103)(char *, char *);
  uint64_t v104;
  void (*v105)(char *, uint64_t);
  char *v106;
  char *v107;
  char *v108;
  char *v109;
  char *v110;
  char *v111;
  char *v112;
  char *v113;
  void (*v114)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  const char *v119;
  const char *v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;

  v3 = v2;
  v119 = a1;
  v120 = (const char *)sub_1DC4085CC();
  v5 = (_QWORD *)*((_QWORD *)v120 - 1);
  MEMORY[0x1E0C80A78](v120);
  v109 = (char *)&v104 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v104 - v8;
  v10 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1DC2D07EC(0, &qword_1EDB3F550, (unint64_t *)&qword_1EDB3F548, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB2858], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v11);
  v108 = (char *)&v104 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v104 - v14;
  sub_1DC092F50(0, &qword_1EDB3F468, (void (*)(uint64_t))MEMORY[0x1E0DB2578]);
  MEMORY[0x1E0C80A78](v16);
  v110 = (char *)&v104 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v121 = (char *)&v104 - v19;
  v20 = sub_1DC4086A4();
  v21 = *(_QWORD *)(v20 - 8);
  v122 = v20;
  v123 = v21;
  MEMORY[0x1E0C80A78](v20);
  v107 = (char *)&v104 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v23);
  v111 = (char *)&v104 - v24;
  MEMORY[0x1E0C80A78](v25);
  v113 = (char *)&v104 - v26;
  MEMORY[0x1E0C80A78](v27);
  v112 = (char *)&v104 - v28;
  v29 = sub_1DC408560();
  v115 = *(_QWORD *)(v29 - 8);
  v116 = v29;
  MEMORY[0x1E0C80A78](v29);
  v106 = (char *)&v104 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v31);
  v114 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&v104 - v32);
  v33 = MEMORY[0x1E0DB25E8];
  sub_1DC2D07EC(0, &qword_1EDB3F498, (unint64_t *)&qword_1EDB3F490, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB25E8], v10);
  MEMORY[0x1E0C80A78](v34);
  v36 = (char *)&v104 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v37);
  v39 = (char *)&v104 - v38;
  sub_1DC2C6A74(0, (unint64_t *)&qword_1EDB3F490, (uint64_t (*)(uint64_t, _QWORD *))v33);
  v41 = v40;
  MEMORY[0x1E0C80A78](v40);
  v117 = (char *)&v104 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = MEMORY[0x1E0C80A78](v43);
  v46 = (char *)&v104 - v45;
  v118 = v47;
  v48 = *(unsigned int (**)(char *, uint64_t, char *))(v47 + 48);
  if (((unsigned int (*)(uint64_t, uint64_t, char *, __n128))v48)(a2, 1, v41, v44) != 1)
  {
    sub_1DC2D0890((uint64_t)v119, (uint64_t)v39);
    if (v48(v39, 1, v41) == 1)
      return sub_1DC2D084C((uint64_t)v39, &qword_1EDB3F498, (unint64_t *)&qword_1EDB3F490, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB25E8]);
    v64 = v118;
    v65 = *(void (**)(char *, char *, char *))(v118 + 32);
    v65(v46, v39, v41);
    sub_1DC2D0890(a2, (uint64_t)v36);
    if (v48(v36, 1, v41) == 1)
    {
      (*(void (**)(char *, char *))(v64 + 8))(v46, v41);
      return sub_1DC2D084C((uint64_t)v36, &qword_1EDB3F498, (unint64_t *)&qword_1EDB3F490, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB25E8]);
    }
    v111 = v41;
    v65(v117, v36, v41);
    v110 = (char *)sub_1DC2D0428();
    v66 = MEMORY[0x1DF0CAD78](v3 + 24);
    if (v66)
    {
      v107 = (char *)v66;
      v108 = v3 + 24;
      v109 = v46;
      v120 = "neutral-highlight";
      v121 = (char *)MEMORY[0x1E0DEE9D8];
      v119 = "positive-highlight";
      __asm { BR              X8; loc_1DC2CE56C }
    }
    if (MEMORY[0x1DF0CAD78](v3 + 24))
    {
      v67 = v112;
      sub_1DC4086D4();
      v121 = (char *)sub_1DC408698();
      v68 = *(void (**)(char *, uint64_t))(v123 + 8);
      v69 = v67;
      v70 = v122;
      v68(v69, v122);
      v71 = v113;
      sub_1DC4086D4();
      sub_1DC408698();
      v68(v71, v70);
      __asm { BR              X10 }
    }
    v91 = *(void (**)(char *, char *))(v64 + 8);
    v77 = v111;
    v91(v117, v111);
    v92 = v46;
    return ((uint64_t (*)(char *, char *))v91)(v92, v77);
  }
  v49 = v3 + 24;
  v50 = MEMORY[0x1DF0CAD78](v3 + 24);
  if (v50)
  {
    v51 = (void *)v50;
    sub_1DC2CDE00((uint64_t)&unk_1EA44D008);

  }
  v52 = &v3[OBJC_IVAR____TtC8StocksUI28StockChartInteractionHandler_chartModel];
  swift_beginAccess();
  v53 = (uint64_t (*)(char *, uint64_t, const char *))v5[6];
  v54 = v120;
  v55 = v53(v52, 1, v120);
  v56 = v121;
  if (v55)
    goto LABEL_18;
  v119 = (const char *)v5[2];
  ((void (*)(char *, char *, const char *))v119)(v9, v52, v54);
  v57 = sub_1DC4085C0();
  v118 = v5[1];
  ((void (*)(char *, const char *))v118)(v9, v54);
  v58 = *(_QWORD *)(v57 + 16);
  sub_1DC2C6A74(0, (unint64_t *)&qword_1EDB3F548, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB2858]);
  v60 = v59;
  v61 = *(_QWORD *)(v59 - 8);
  if (v58)
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v61 + 16))(v15, v57 + ((*(unsigned __int8 *)(v61 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80)), v59);
    v62 = 0;
  }
  else
  {
    v62 = 1;
  }
  v72 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v61 + 56);
  v72(v15, v62, 1, v60);
  swift_bridgeObjectRelease();
  v73 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v61 + 48);
  if (v73(v15, 1, v60) == 1)
  {
    sub_1DC2D084C((uint64_t)v15, &qword_1EDB3F550, (unint64_t *)&qword_1EDB3F548, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB2858]);
LABEL_18:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v123 + 56))(v56, 1, 1, v122);
LABEL_19:
    v74 = (void (*)(uint64_t))MEMORY[0x1E0DB2578];
    v75 = (uint64_t)v56;
    return sub_1DC092F14(v75, &qword_1EDB3F468, v74);
  }
  v113 = (char *)v73;
  v114 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v72;
  v112 = v3;
  v76 = sub_1DC4088D8();
  v105 = *(void (**)(char *, uint64_t))(v61 + 8);
  v105(v15, v60);
  v77 = (char *)v122;
  v78 = v123;
  if (*(_QWORD *)(v76 + 16))
  {
    v56 = v121;
    (*(void (**)(char *, unint64_t, uint64_t))(v123 + 16))(v121, v76 + ((*(unsigned __int8 *)(v123 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v123 + 80)), v122);
    v79 = *(char **)(v78 + 56);
    v80 = v56;
    v81 = 0;
  }
  else
  {
    v79 = *(char **)(v123 + 56);
    v56 = v121;
    v80 = v121;
    v81 = 1;
  }
  v117 = v79;
  ((void (*)(char *, uint64_t, uint64_t, char *))v79)(v80, v81, 1, v77);
  swift_bridgeObjectRelease();
  v82 = v78;
  v83 = *(unsigned int (**)(char *, uint64_t, char *))(v78 + 48);
  if (v83(v56, 1, v77) == 1)
    goto LABEL_19;
  v84 = *(void (**)(char *, char *, char *))(v82 + 32);
  v85 = v111;
  v84(v111, v56, v77);
  v86 = v120;
  if (v53(v52, 1, v120))
    goto LABEL_33;
  v121 = (char *)v84;
  v87 = v109;
  ((void (*)(char *, char *, const char *))v119)(v109, v52, v86);
  v88 = sub_1DC4085C0();
  ((void (*)(char *, const char *))v118)(v87, v86);
  if (*(_QWORD *)(v88 + 16))
  {
    v89 = (uint64_t)v108;
    (*(void (**)(char *, unint64_t, uint64_t))(v61 + 16))(v108, v88 + ((*(unsigned __int8 *)(v61 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80)), v60);
    v90 = 0;
  }
  else
  {
    v90 = 1;
    v89 = (uint64_t)v108;
  }
  v114(v89, v90, 1, v60);
  swift_bridgeObjectRelease();
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v113)(v89, 1, v60) == 1)
  {
    sub_1DC2D084C(v89, &qword_1EDB3F550, (unint64_t *)&qword_1EDB3F548, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB2858]);
    v77 = (char *)v122;
LABEL_33:
    v93 = v110;
    ((void (*)(char *, uint64_t, uint64_t, char *))v117)(v110, 1, 1, v77);
LABEL_34:
    (*(void (**)(char *, char *))(v123 + 8))(v85, v77);
    v74 = (void (*)(uint64_t))MEMORY[0x1E0DB2578];
    v75 = (uint64_t)v93;
    return sub_1DC092F14(v75, &qword_1EDB3F468, v74);
  }
  v94 = v85;
  v95 = sub_1DC4088D8();
  v105((char *)v89, v60);
  v96 = *(_QWORD *)(v95 + 16);
  if (v96)
  {
    v77 = (char *)v122;
    v93 = v110;
    (*(void (**)(char *, unint64_t, uint64_t))(v123 + 16))(v110, v95+ ((*(unsigned __int8 *)(v123 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v123 + 80))+ *(_QWORD *)(v123 + 72) * (v96 - 1), v122);
    v97 = 0;
  }
  else
  {
    v97 = 1;
    v77 = (char *)v122;
    v93 = v110;
  }
  v98 = v121;
  ((void (*)(char *, uint64_t, uint64_t, char *))v117)(v93, v97, 1, v77);
  swift_bridgeObjectRelease();
  v85 = v94;
  if (v83(v93, 1, v77) == 1)
    goto LABEL_34;
  v99 = v107;
  ((void (*)(char *, char *, char *))v98)(v107, v93, v77);
  v100 = MEMORY[0x1DF0CAD78](v49);
  if (!v100)
  {
    v91 = *(void (**)(char *, char *))(v123 + 8);
    v91(v99, v77);
    v92 = v94;
    return ((uint64_t (*)(char *, char *))v91)(v92, v77);
  }
  v101 = (void *)v100;
  sub_1DC408698();
  sub_1DC408698();
  v102 = v106;
  sub_1DC408554();
  sub_1DC080808(&qword_1EDB3F4F8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB2700], MEMORY[0x1E0DB26F8]);
  sub_1DC40877C();

  (*(void (**)(char *, uint64_t))(v115 + 8))(v102, v116);
  v103 = *(void (**)(char *, char *))(v123 + 8);
  v103(v99, v77);
  return ((uint64_t (*)(char *, char *))v103)(v94, v77);
}

uint64_t sub_1DC2CECE4()
{
  uint64_t v0;

  swift_release();
  swift_unknownObjectWeakDestroy();
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);

  sub_1DC148A20(v0 + 96);
  sub_1DC092F14(v0 + OBJC_IVAR____TtC8StocksUI28StockChartInteractionHandler_chartModel, &qword_1EDB3F428, (void (*)(uint64_t))MEMORY[0x1E0DB2498]);
  return swift_deallocClassInstance();
}

uint64_t sub_1DC2CED54()
{
  return type metadata accessor for StockChartInteractionHandler();
}

uint64_t storeEnumTagSinglePayload for StockChartInteractionHandler.HighlightState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1DC2CEDA8 + 4 * byte_1DC4248D5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1DC2CEDDC + 4 * byte_1DC4248D0[v4]))();
}

uint64_t sub_1DC2CEDDC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC2CEDE4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC2CEDECLL);
  return result;
}

uint64_t sub_1DC2CEDF8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC2CEE00);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1DC2CEE04(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC2CEE0C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StockChartInteractionHandler.HighlightState()
{
  return &type metadata for StockChartInteractionHandler.HighlightState;
}

unint64_t sub_1DC2CEE2C()
{
  unint64_t result;

  result = qword_1F03512F8;
  if (!qword_1F03512F8)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC4249F0, &type metadata for StockChartInteractionHandler.HighlightState);
    atomic_store(result, (unint64_t *)&qword_1F03512F8);
  }
  return result;
}

uint64_t sub_1DC2CEE70()
{
  return sub_1DC080808(&qword_1EDB3F420, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB2498], MEMORY[0x1E0DB2490]);
}

uint64_t sub_1DC2CEE9C(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  void (*v17)(id, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t result;
  __int128 v22[2];
  uint64_t v23[5];

  v2 = v1;
  sub_1DC2D07EC(0, &qword_1F0351300, (unint64_t *)&qword_1EDB3F490, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB25E8], MEMORY[0x1E0DB2520]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  v7 = MEMORY[0x1E0C80A78](v4);
  v9 = (char *)v22 - v8;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v6 + 16))((char *)v22 - v8, a1, v5, v7);
  if ((*(unsigned int (**)(char *, uint64_t))(v6 + 88))(v9, v5) == *MEMORY[0x1E0DB2518])
  {
    (*(void (**)(char *, uint64_t))(v6 + 96))(v9, v5);
    v10 = MEMORY[0x1DF0CAD78](v2 + 3);
    if (v10 && (v11 = (void *)v10, v12 = (void *)sub_1DC408740(), v11, v12))
    {
      v13 = v2[7];
      v14 = v2[8];
      __swift_project_boxed_opaque_existential_1(v2 + 4, v13);
      v15 = objc_msgSend(v12, sel_traitCollection);
      v16 = *(_QWORD *)(v14 + 8);
      v17 = *(void (**)(id, uint64_t, uint64_t))(v16 + 8);
      v23[3] = v13;
      v23[4] = v14;
      __swift_allocate_boxed_opaque_existential_1(v23);
      v17(v15, v13, v16);

      v18 = swift_allocObject();
      swift_weakInit();
      sub_1DC0824D4((uint64_t)v23, (uint64_t)v22);
      v19 = swift_allocObject();
      *(_QWORD *)(v19 + 16) = v18;
      *(_QWORD *)(v19 + 24) = v12;
      sub_1DC097DD0(v22, v19 + 32);
      v20 = v12;
      sub_1DC4087AC();
      swift_release();
      swift_allocObject();
      swift_weakInit();
      swift_retain();
      sub_1DC4087A0();
      swift_release_n();
      swift_release();

      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
    }
    else
    {
      return swift_release();
    }
  }
  else
  {
    result = sub_1DC409838();
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC2CF138(char *a1, uint64_t a2, void *a3, _QWORD *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(_QWORD, _QWORD);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(void);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t result;
  unsigned int v53;
  uint64_t v54;
  void (*v55)(char *, char *, uint64_t);
  int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  void (*v62)(char *, uint64_t);
  uint64_t v63;
  id v64;
  id v65;
  uint64_t v66;
  id v67;
  double v68;
  char *v69;
  char *v70;
  char *v71;
  id v72;
  uint64_t v73;
  void (*v74)(const char *, uint64_t, uint64_t, uint64_t);
  const char *v75;
  uint64_t v76;
  uint64_t (*v77)(void);
  char *v78;
  void (*v79)(_QWORD, _QWORD);
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  double v83;
  void (*v84)(uint64_t, uint64_t, uint64_t, _QWORD);
  char *v85;
  char *v86;
  void (*v87)(_QWORD, _QWORD);
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  double v92;
  int v93;
  char *v94;
  uint64_t v95;
  void *v96;
  double v97;
  char *v98;
  void (*v99)(char *, _QWORD);
  int v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  double v105;
  uint64_t v106;
  uint64_t v107;
  char v108;
  char v109;
  double v110;
  id v111;
  char *v112;
  uint64_t v113;
  char *v114;
  void (*v115)(char *, char *, uint64_t);
  uint64_t v116;
  uint64_t v117;
  char *v118;
  char *v119;
  char v120;
  void (*v121)(char *, _QWORD);
  void (*v122)(_QWORD, _QWORD);
  void (*v123)(char *, _QWORD);
  uint64_t v124;
  uint64_t v125;
  char v126;
  char v127;
  char *v128;
  double v129;
  double v130;
  double v131;
  id v132;
  id v133;
  char *v134;
  id v135;
  char *v136;
  uint64_t v137;
  void (*v138)(const char *, char *, uint64_t);
  const char *v139;
  uint64_t v140;
  void (*v141)(const char *, _QWORD, uint64_t, uint64_t);
  uint64_t v142;
  uint64_t v143;
  uint64_t (*v144)(void);
  _QWORD *v145;
  char *v146;
  char *v147;
  double v148;
  double v149;
  double v150;
  double v151;
  void (*v152)(char *, _QWORD);
  char *v153;
  double v154;
  double v155;
  char *v156;
  char *v157;
  double v158;
  double v159;
  char *v160;
  double v161;
  double v162;
  void (*v163)(char *, uint64_t);
  void (*v164)(char *, uint64_t);
  uint64_t v165;
  void (*v166)(char *, uint64_t, _QWORD);
  uint64_t v167;
  char *v168;
  char *v169;
  uint64_t v170;
  uint64_t v171;
  char *v172;
  char *v173;
  char *v174;
  char *v175;
  char *v176;
  char *v177;
  const char *v178;
  char *v179;
  _QWORD *v180;
  int v181;
  uint64_t (*v182)(char *, uint64_t);
  char *v183;
  void (*v184)(char *, char *, uint64_t);
  uint64_t v185;
  id v186;
  char *v187;
  char *v188;
  double v189;
  char *v190;
  char *v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  void (*v195)(_QWORD, _QWORD);
  uint64_t v196;
  char *v197;
  char *v198;
  CGRect v199;
  CGRect v200;
  CGRect v201;

  v180 = a4;
  v186 = a3;
  v198 = a1;
  v171 = sub_1DC408560();
  v170 = *(_QWORD *)(v171 - 8);
  MEMORY[0x1E0C80A78](v171);
  v169 = (char *)&v165 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC092F50(0, &qword_1EDB3F468, (void (*)(uint64_t))MEMORY[0x1E0DB2578]);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v165 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v176 = (char *)&v165 - v9;
  sub_1DC2C6A74(0, (unint64_t *)&qword_1EDB3F548, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB2858]);
  v195 = v10;
  v193 = *((_QWORD *)v10 - 1);
  MEMORY[0x1E0C80A78](v10);
  v188 = (char *)&v165 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v173 = (char *)&v165 - v13;
  MEMORY[0x1E0C80A78](v14);
  v175 = (char *)&v165 - v15;
  v189 = COERCE_DOUBLE(sub_1DC4086A4());
  v194 = *(_QWORD *)(*(_QWORD *)&v189 - 8);
  MEMORY[0x1E0C80A78](*(_QWORD *)&v189);
  v174 = (char *)&v165 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v191 = (char *)&v165 - v18;
  MEMORY[0x1E0C80A78](v19);
  v172 = (char *)&v165 - v20;
  MEMORY[0x1E0C80A78](v21);
  v177 = (char *)&v165 - v22;
  v23 = MEMORY[0x1E0DB25E8];
  sub_1DC2D07EC(0, &qword_1EDB3F498, (unint64_t *)&qword_1EDB3F490, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB25E8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v24);
  v179 = (char *)&v165 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v26);
  v178 = (char *)&v165 - v27;
  sub_1DC2D08F4();
  v29 = v28;
  v30 = *(_QWORD *)(v28 - 8);
  MEMORY[0x1E0C80A78](v28);
  v187 = (char *)&v165 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v32);
  v34 = (char *)&v165 - v33;
  MEMORY[0x1E0C80A78](v35);
  v37 = (char *)&v165 - v36;
  sub_1DC2D095C();
  v39 = v38;
  MEMORY[0x1E0C80A78](v38);
  v41 = (char *)&v165 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC2C6A74(0, (unint64_t *)&qword_1EDB3F490, (uint64_t (*)(uint64_t, _QWORD *))v23);
  v43 = v42;
  v196 = *(_QWORD *)(v42 - 8);
  MEMORY[0x1E0C80A78](v42);
  v197 = (char *)&v165 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v45);
  v190 = (char *)&v165 - v46;
  MEMORY[0x1E0C80A78](v47);
  v183 = (char *)&v165 - v48;
  MEMORY[0x1E0C80A78](v49);
  v51 = (char *)&v165 - v50;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (!result)
    return result;
  v168 = v7;
  v192 = result;
  v53 = *(unsigned __int8 *)(result + 72);
  v54 = *(int *)(v39 + 48);
  v55 = *(void (**)(char *, char *, uint64_t))(v30 + 16);
  v55(v41, v198, v29);
  v41[v54] = v53;
  v182 = *(uint64_t (**)(char *, uint64_t))(v30 + 88);
  v56 = v182(v41, v29);
  v181 = *MEMORY[0x1E0DB26A8];
  v185 = v43;
  v184 = v55;
  if (v56 == v181)
  {
    v55(v37, v41, v29);
    (*(void (**)(char *, uint64_t))(v30 + 96))(v37, v29);
    v57 = v196;
    if (v53 != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v196 + 32))(v51, v37, v43);
      v167 = v30;
      (*(void (**)(char *, uint64_t))(v30 + 8))(v41, v29);
      v72 = objc_msgSend(v186, sel_layer);
      v73 = v192;
      objc_msgSend(v72, sel_addSublayer_, *(_QWORD *)(v192 + 80));

      objc_msgSend(*(id *)(v73 + 88), sel_removeFromSuperlayer);
      v74 = *(void (**)(const char *, uint64_t, uint64_t, uint64_t))(v57 + 56);
      v75 = v178;
      v74(v178, 1, 1, v43);
      v76 = (uint64_t)v179;
      v74(v179, 1, 1, v43);
      sub_1DC2CDF90(v75, v76);
      v77 = MEMORY[0x1E0DB25E8];
      sub_1DC2D084C(v76, &qword_1EDB3F498, (unint64_t *)&qword_1EDB3F490, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB25E8]);
      sub_1DC2D084C((uint64_t)v75, &qword_1EDB3F498, (unint64_t *)&qword_1EDB3F490, (uint64_t (*)(uint64_t, _QWORD *))v77);
      v78 = v175;
      sub_1DC4086E0();
      v79 = v195;
      v80 = sub_1DC4088D8();
      v175 = *(char **)(v193 + 8);
      ((void (*)(char *, _QWORD))v175)(v78, v79);
      v81 = v194;
      if (*(_QWORD *)(v80 + 16))
      {
        v82 = (uint64_t)v176;
        v83 = v189;
        (*(void (**)(char *, unint64_t, double))(v194 + 16))(v176, v80 + ((*(unsigned __int8 *)(v194 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v194 + 80)), COERCE_DOUBLE(*(_QWORD *)&v189));
        v84 = *(void (**)(uint64_t, uint64_t, uint64_t, _QWORD))(v81 + 56);
        v84(v82, 0, 1, *(_QWORD *)&v83);
      }
      else
      {
        v84 = *(void (**)(uint64_t, uint64_t, uint64_t, _QWORD))(v194 + 56);
        v82 = (uint64_t)v176;
        v83 = v189;
        v84((uint64_t)v176, 1, 1, *(_QWORD *)&v189);
      }
      swift_bridgeObjectRelease();
      v85 = *(char **)(v81 + 48);
      if (((unsigned int (*)(uint64_t, uint64_t, _QWORD))v85)(v82, 1, *(_QWORD *)&v83) == 1)
      {
        (*(void (**)(char *, uint64_t))(v57 + 8))(v51, v43);
        sub_1DC092F14(v82, &qword_1EDB3F468, (void (*)(uint64_t))MEMORY[0x1E0DB2578]);
        v68 = v83;
        v71 = v197;
        v60 = v187;
        v63 = v167;
      }
      else
      {
        v176 = v85;
        v189 = *(double *)&v84;
        v166 = *(void (**)(char *, uint64_t, _QWORD))(v81 + 32);
        v166(v177, v82, *(_QWORD *)&v83);
        v86 = v173;
        sub_1DC4086E0();
        (*(void (**)(char *, uint64_t))(v57 + 8))(v51, v43);
        v87 = v195;
        v88 = sub_1DC4088D8();
        ((void (*)(char *, _QWORD))v175)(v86, v87);
        v89 = *(_QWORD *)(v88 + 16);
        if (v89)
        {
          v90 = (uint64_t)v168;
          (*(void (**)(char *, unint64_t, double))(v81 + 16))(v168, v88+ ((*(unsigned __int8 *)(v81 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v81 + 80))+ *(_QWORD *)(v81 + 72) * (v89 - 1), COERCE_DOUBLE(*(_QWORD *)&v83));
          v91 = 0;
          v92 = v83;
          v71 = v197;
        }
        else
        {
          v91 = 1;
          v92 = v83;
          v71 = v197;
          v90 = (uint64_t)v168;
        }
        (*(void (**)(uint64_t, uint64_t, uint64_t, double))&v189)(v90, v91, 1, COERCE_DOUBLE(*(_QWORD *)&v92));
        swift_bridgeObjectRelease();
        v93 = ((uint64_t (*)(uint64_t, uint64_t, _QWORD))v176)(v90, 1, *(_QWORD *)&v92);
        v60 = v187;
        v63 = v167;
        if (v93 == 1)
        {
          v68 = v92;
          (*(void (**)(char *, double))(v194 + 8))(v177, COERCE_DOUBLE(*(_QWORD *)&v92));
          sub_1DC092F14(v90, &qword_1EDB3F468, (void (*)(uint64_t))MEMORY[0x1E0DB2578]);
        }
        else
        {
          v94 = v172;
          v166(v172, v90, *(_QWORD *)&v92);
          v95 = MEMORY[0x1DF0CAD78](v192 + 24);
          if (v95)
          {
            v96 = (void *)v95;
            sub_1DC408698();
            v189 = v97;
            sub_1DC408698();
            v98 = v169;
            sub_1DC408554();
            sub_1DC080808(&qword_1EDB3F4F8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB2700], MEMORY[0x1E0DB26F8]);
            sub_1DC40877C();

            (*(void (**)(char *, uint64_t))(v170 + 8))(v98, v171);
            v99 = *(void (**)(char *, _QWORD))(v194 + 8);
            v99(v172, *(_QWORD *)&v92);
          }
          else
          {
            v99 = *(void (**)(char *, _QWORD))(v194 + 8);
            v99(v94, *(_QWORD *)&v92);
          }
          v68 = v92;
          v99(v177, *(_QWORD *)&v92);
        }
      }
      v69 = v191;
      *(_BYTE *)(v192 + 72) = 1;
      v70 = v198;
      goto LABEL_25;
    }
    v58 = v30;
    v59 = v196;
    (*(void (**)(char *, uint64_t))(v196 + 8))(v37, v43);
    v60 = v187;
    goto LABEL_8;
  }
  v58 = v30;
  v59 = v196;
  v60 = v187;
  if (v56 != *MEMORY[0x1E0DB26A0]
    || (v184(v34, v41, v29),
        (*(void (**)(char *, uint64_t))(v30 + 96))(v34, v29),
        sub_1DC2D09FC(),
        v62 = *(void (**)(char *, uint64_t))(v59 + 8),
        v62(&v34[*(int *)(v61 + 48)], v43),
        v62(v34, v43),
        v53 > 1))
  {
LABEL_8:
    sub_1DC2D09C0((uint64_t)v41);
    v68 = v189;
    v69 = v191;
    v71 = v197;
    v70 = v198;
    v63 = v58;
    goto LABEL_9;
  }
  v63 = v30;
  (*(void (**)(char *, uint64_t))(v30 + 8))(v41, v29);
  v64 = v186;
  v65 = objc_msgSend(v186, sel_layer);
  v66 = v192;
  objc_msgSend(v65, sel_addSublayer_, *(_QWORD *)(v192 + 80));

  v67 = objc_msgSend(v64, sel_layer);
  objc_msgSend(v67, sel_addSublayer_, *(_QWORD *)(v66 + 88));

  *(_BYTE *)(v66 + 72) = 2;
  v68 = v189;
  v69 = v191;
  v71 = v197;
  v70 = v198;
LABEL_9:
  v57 = v59;
LABEL_25:
  v184(v60, v70, v29);
  v100 = v182(v60, v29);
  if (v100 == v181)
  {
    (*(void (**)(char *, uint64_t))(v63 + 96))(v60, v29);
    v101 = (uint64_t)v183;
    v102 = v185;
    (*(void (**)(char *, char *, uint64_t))(v57 + 32))(v183, v60, v185);
    v103 = v192;
    sub_1DC4086D4();
    v104 = v188;
    sub_1DC4086E0();
    v105 = COERCE_DOUBLE(sub_1DC408848());
    v107 = v106;
    v109 = v108;
    (*(void (**)(char *, _QWORD))(v193 + 8))(v104, v195);
    (*(void (**)(char *, double))(v194 + 8))(v69, COERCE_DOUBLE(*(_QWORD *)&v68));
    if ((v109 & 1) != 0)
    {
      (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v101, v102);
    }
    else
    {
      v110 = v105 + -0.5;
      v111 = *(id *)(v103 + 80);
      objc_msgSend(v186, sel_bounds);
      objc_msgSend(v111, sel_setFrame_, v110, 0.0, 1.0, CGRectGetHeight(v199));

      v112 = *(char **)(v103 + 80);
      *(_QWORD *)&v112[OBJC_IVAR____TtC8StocksUI28StockChartCalloutHandleLayer_knobLocation] = v107;
      objc_msgSend(v112, sel_setNeedsLayout);
      if (MEMORY[0x1DF0CAD78](v103 + 96))
      {
        sub_1DC14C9C4(v101);
        swift_unknownObjectRelease();
      }
      __swift_project_boxed_opaque_existential_1(v180, v180[3]);
      sub_1DC3989B8(*(char **)(v103 + 80), 0.0);
      (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v101, v185);
    }
  }
  else
  {
    if (v100 != *MEMORY[0x1E0DB26A0])
    {
      result = sub_1DC409838();
      __break(1u);
      return result;
    }
    (*(void (**)(char *, uint64_t))(v63 + 96))(v60, v29);
    sub_1DC2D09FC();
    v114 = &v60[*(int *)(v113 + 48)];
    v115 = *(void (**)(char *, char *, uint64_t))(v57 + 32);
    v116 = v185;
    v115(v190, v60, v185);
    v115(v71, v114, v116);
    v117 = v192;
    sub_1DC4086D4();
    v118 = v188;
    sub_1DC4086E0();
    v189 = COERCE_DOUBLE(sub_1DC408848());
    v198 = v119;
    LOBYTE(v114) = v120;
    v121 = *(void (**)(char *, _QWORD))(v193 + 8);
    v122 = v195;
    v121(v118, v195);
    v123 = *(void (**)(char *, _QWORD))(v194 + 8);
    v123(v69, *(_QWORD *)&v68);
    if ((v114 & 1) != 0)
      goto LABEL_36;
    sub_1DC4086D4();
    sub_1DC4086E0();
    *(double *)&v124 = COERCE_DOUBLE(sub_1DC408848());
    v194 = v125;
    v127 = v126;
    v128 = v118;
    v129 = v68;
    v121(v128, v122);
    v123(v69, *(_QWORD *)&v68);
    if ((v127 & 1) != 0)
    {
LABEL_36:
      swift_release();
      v164 = *(void (**)(char *, uint64_t))(v196 + 8);
      v164(v197, v116);
      return ((uint64_t (*)(char *, uint64_t))v164)(v190, v116);
    }
    v195 = (void (*)(_QWORD, _QWORD))v123;
    v130 = *(double *)&v124;
    v131 = v189 + -0.5;
    v132 = *(id *)(v117 + 80);
    v133 = v186;
    objc_msgSend(v186, sel_bounds);
    objc_msgSend(v132, sel_setFrame_, v131, 0.0, 1.0, CGRectGetHeight(v200));

    v134 = *(char **)(v117 + 80);
    *(_QWORD *)&v134[OBJC_IVAR____TtC8StocksUI28StockChartCalloutHandleLayer_knobLocation] = v198;
    objc_msgSend(v134, sel_setNeedsLayout);
    v135 = *(id *)(v117 + 88);
    objc_msgSend(v133, sel_bounds);
    objc_msgSend(v135, sel_setFrame_, v130 + -0.5, 0.0, 1.0, CGRectGetHeight(v201));

    v136 = *(char **)(v117 + 88);
    *(_QWORD *)&v136[OBJC_IVAR____TtC8StocksUI28StockChartCalloutHandleLayer_knobLocation] = v194;
    objc_msgSend(v136, sel_setNeedsLayout);
    v137 = v196;
    v138 = *(void (**)(const char *, char *, uint64_t))(v196 + 16);
    v139 = v178;
    v140 = (uint64_t)v190;
    v138(v178, v190, v116);
    v141 = *(void (**)(const char *, _QWORD, uint64_t, uint64_t))(v137 + 56);
    v141(v139, 0, 1, v116);
    v142 = (uint64_t)v179;
    v143 = (uint64_t)v197;
    v138(v179, v197, v116);
    v141((const char *)v142, 0, 1, v116);
    sub_1DC2CDF90(v139, v142);
    v144 = MEMORY[0x1E0DB25E8];
    sub_1DC2D084C(v142, &qword_1EDB3F498, (unint64_t *)&qword_1EDB3F490, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB25E8]);
    sub_1DC2D084C((uint64_t)v139, &qword_1EDB3F498, (unint64_t *)&qword_1EDB3F490, (uint64_t (*)(uint64_t, _QWORD *))v144);
    if (MEMORY[0x1DF0CAD78](v117 + 96))
    {
      sub_1DC14CE84(v140, v143);
      swift_unknownObjectRelease();
    }
    v145 = v180;
    v198 = (char *)__swift_project_boxed_opaque_existential_1(v180, v180[3]);
    v146 = (char *)*(id *)(v117 + 80);
    v147 = v191;
    sub_1DC4086D4();
    sub_1DC408680();
    v149 = v148;
    v150 = v129;
    v151 = v129;
    v152 = (void (*)(char *, _QWORD))v195;
    v195(v147, *(_QWORD *)&v150);
    v153 = v174;
    sub_1DC4086D4();
    sub_1DC408680();
    v155 = v154;
    v152(v153, *(_QWORD *)&v151);
    sub_1DC3989B8(v146, v149 - v155);

    __swift_project_boxed_opaque_existential_1(v145, v145[3]);
    v156 = *(char **)(v117 + 88);
    v157 = v197;
    sub_1DC4086D4();
    sub_1DC408680();
    v159 = v158;
    v152(v147, *(_QWORD *)&v151);
    v160 = v190;
    sub_1DC4086D4();
    sub_1DC408680();
    v162 = v161;
    v152(v153, *(_QWORD *)&v151);
    sub_1DC3989B8(v156, v159 - v162);
    v163 = *(void (**)(char *, uint64_t))(v196 + 8);
    v163(v157, v116);
    v163(v160, v116);
  }
  return swift_release();
}

uint64_t sub_1DC2D0270()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  const char *v5;
  uint64_t result;
  uint64_t v7;
  uint64_t (*v8)(void);
  uint64_t v9;
  uint64_t v10;
  void (*v11)(const char *, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  sub_1DC2D07EC(0, &qword_1EDB3F498, (unint64_t *)&qword_1EDB3F490, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB25E8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v12 - v4;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v7 = result;
    *(_BYTE *)(result + 72) = 0;
    objc_msgSend(*(id *)(result + 80), sel_removeFromSuperlayer);
    objc_msgSend(*(id *)(v7 + 88), sel_removeFromSuperlayer);
    v8 = MEMORY[0x1E0DB25E8];
    sub_1DC2C6A74(0, (unint64_t *)&qword_1EDB3F490, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB25E8]);
    v10 = v9;
    v11 = *(void (**)(const char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56);
    v11(v5, 1, 1, v9);
    v11(v2, 1, 1, v10);
    sub_1DC2CDF90(v5, (uint64_t)v2);
    sub_1DC2D084C((uint64_t)v2, &qword_1EDB3F498, (unint64_t *)&qword_1EDB3F490, (uint64_t (*)(uint64_t, _QWORD *))v8);
    sub_1DC2D084C((uint64_t)v5, &qword_1EDB3F498, (unint64_t *)&qword_1EDB3F490, (uint64_t (*)(uint64_t, _QWORD *))v8);
    if (MEMORY[0x1DF0CAD78](v7 + 96))
    {
      sub_1DC14D1E4();
      swift_release();
      return swift_unknownObjectRelease();
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_1DC2D0428()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  double v7;
  double v8;
  void (*v9)(char *, uint64_t);
  double v10;
  double v11;
  double v13;
  double v14;
  double v15;
  double v16;
  uint64_t v17;

  v0 = sub_1DC4086A4();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v17 - v5;
  sub_1DC2C6A74(0, (unint64_t *)&qword_1EDB3F490, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB25E8]);
  sub_1DC4086D4();
  sub_1DC408680();
  v8 = v7;
  v9 = *(void (**)(char *, uint64_t))(v1 + 8);
  v9(v6, v0);
  sub_1DC4086D4();
  sub_1DC408680();
  v11 = v10;
  v9(v3, v0);
  if (v11 < v8)
    return 2;
  sub_1DC4086D4();
  sub_1DC408680();
  v14 = v13;
  v9(v6, v0);
  sub_1DC4086D4();
  sub_1DC408680();
  v16 = v15;
  v9(v3, v0);
  return v16 < v14;
}

uint64_t sub_1DC2D0594(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v3)(void);
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  const char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(const char *, uint64_t, uint64_t, uint64_t);
  uint64_t v20;

  v3 = MEMORY[0x1E0DB25E8];
  sub_1DC2D07EC(0, &qword_1EDB3F498, (unint64_t *)&qword_1EDB3F490, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB25E8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v20 - v8;
  sub_1DC092F50(0, &qword_1EDB3F428, (void (*)(uint64_t))MEMORY[0x1E0DB2498]);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v20 - v11;
  v13 = sub_1DC4085CC();
  v14 = *(_QWORD *)(v13 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v12, a1, v13);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v12, 0, 1, v13);
  v15 = v1 + OBJC_IVAR____TtC8StocksUI28StockChartInteractionHandler_chartModel;
  swift_beginAccess();
  sub_1DC2D0A6C((uint64_t)v12, v15);
  swift_endAccess();
  sub_1DC2C6A74(0, (unint64_t *)&qword_1EDB3F490, (uint64_t (*)(uint64_t, _QWORD *))v3);
  v17 = v16;
  v18 = *(void (**)(const char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56);
  v18(v9, 1, 1, v16);
  v18(v6, 1, 1, v17);
  sub_1DC2CDF90(v9, (uint64_t)v6);
  sub_1DC2D084C((uint64_t)v6, &qword_1EDB3F498, (unint64_t *)&qword_1EDB3F490, (uint64_t (*)(uint64_t, _QWORD *))v3);
  return sub_1DC2D084C((uint64_t)v9, &qword_1EDB3F498, (unint64_t *)&qword_1EDB3F490, (uint64_t (*)(uint64_t, _QWORD *))v3);
}

uint64_t sub_1DC2D0780()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1DC2D07A4()
{
  uint64_t v0;

  swift_release();

  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  return swift_deallocObject();
}

uint64_t sub_1DC2D07D8(char *a1)
{
  uint64_t v1;

  return sub_1DC2CF138(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24), (_QWORD *)(v1 + 32));
}

uint64_t sub_1DC2D07E4()
{
  return sub_1DC2D0270();
}

void sub_1DC2D07EC(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t, _QWORD *), uint64_t (*a5)(uint64_t, uint64_t))
{
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    sub_1DC2C6A74(255, a3, a4);
    v9 = a5(a1, v8);
    if (!v10)
      atomic_store(v9, a2);
  }
}

uint64_t sub_1DC2D084C(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t, _QWORD *))
{
  uint64_t v5;

  sub_1DC2D07EC(0, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

uint64_t sub_1DC2D0890(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1DC2D07EC(0, &qword_1EDB3F498, (unint64_t *)&qword_1EDB3F490, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB25E8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1DC2D08F4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F0351308)
  {
    sub_1DC2C6A74(255, (unint64_t *)&qword_1EDB3F490, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB25E8]);
    v0 = sub_1DC408794();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1F0351308);
  }
}

void sub_1DC2D095C()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1F0351310)
  {
    sub_1DC2D08F4();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1F0351310);
  }
}

uint64_t sub_1DC2D09C0(uint64_t a1)
{
  uint64_t v2;

  sub_1DC2D095C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1DC2D09FC()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1F0351318)
  {
    sub_1DC2C6A74(255, (unint64_t *)&qword_1EDB3F490, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB25E8]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1F0351318);
  }
}

uint64_t sub_1DC2D0A6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1DC092F50(0, &qword_1EDB3F428, (void (*)(uint64_t))MEMORY[0x1E0DB2498]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC2D0AC0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1DC2D0AFC(uint64_t a1, uint64_t a2)
{
  sub_1DC081B48(&qword_1F03513D0, a2, (uint64_t (*)(uint64_t))type metadata accessor for StubTopStoriesForYouFeedGroupEmitter, (uint64_t)&unk_1DC424AD0);
  return sub_1DC40286C();
}

double sub_1DC2D0B3C()
{
  char *v0;
  objc_class *ObjectType;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  double v6;
  CGFloat v7;
  double v8;
  CGFloat v9;
  double v10;
  CGFloat v11;
  double v12;
  CGFloat v13;
  CGFloat v14;
  CGFloat v15;
  CGFloat v16;
  CGFloat v17;
  double v18;
  double v19;
  objc_super v21;
  CGRect v22;
  CGRect v23;

  ObjectType = (objc_class *)swift_getObjectType();
  v2 = MEMORY[0x1DF0CAD78](&v0[OBJC_IVAR____TtC8StocksUI40QuoteDetailViewLabelAccessibilityElement_nameLabel]);
  if (!v2)
    goto LABEL_5;
  v3 = (void *)v2;
  v4 = MEMORY[0x1DF0CAD78](&v0[OBJC_IVAR____TtC8StocksUI40QuoteDetailViewLabelAccessibilityElement_valueLabel]);
  if (!v4)
  {

LABEL_5:
    v21.receiver = v0;
    v21.super_class = ObjectType;
    objc_msgSendSuper2(&v21, sel_accessibilityFrame);
    return v19;
  }
  v5 = (void *)v4;
  objc_msgSend(v3, sel_accessibilityFrame);
  v7 = v6;
  v9 = v8;
  v11 = v10;
  v13 = v12;
  objc_msgSend(v5, sel_accessibilityFrame);
  v23.origin.x = v14;
  v23.origin.y = v15;
  v23.size.width = v16;
  v23.size.height = v17;
  v22.origin.x = v7;
  v22.origin.y = v9;
  v22.size.width = v11;
  v22.size.height = v13;
  *(_QWORD *)&v18 = (unint64_t)CGRectUnion(v22, v23);

  return v18;
}

uint64_t type metadata accessor for QuoteDetailViewLabelAccessibilityElement()
{
  return objc_opt_self();
}

void sub_1DC2D1040(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  id v13;
  int64_t v14;
  unint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  void *v29;

  v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1DC409670();
    sub_1DC2A8B5C();
    sub_1DC2CACBC();
    sub_1DC408E6C();
    v1 = v24;
    v23 = v25;
    v2 = v26;
    v3 = v27;
    v4 = v28;
  }
  else
  {
    v5 = -1 << *(_BYTE *)(a1 + 32);
    v23 = a1 + 56;
    v6 = ~v5;
    v7 = -v5;
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v4 = v8 & *(_QWORD *)(a1 + 56);
    swift_bridgeObjectRetain();
    v2 = v6;
    v3 = 0;
  }
  v21 = v2;
  v22 = (unint64_t)(v2 + 64) >> 6;
  while (v1 < 0)
  {
    if (!sub_1DC4096AC())
      goto LABEL_37;
    sub_1DC2A8B5C();
    swift_unknownObjectRetain();
    swift_dynamicCast();
    v13 = v29;
    swift_unknownObjectRelease();
    v12 = v3;
    v10 = v4;
    if (!v29)
      goto LABEL_37;
LABEL_33:
    v17 = objc_msgSend(v13, sel_session, v21);
    v18 = sub_1DC409040();
    v20 = v19;

    if (v20)
    {
      if (v18 == 0x756F59726F46 && v20 == 0xE600000000000000)
      {
        swift_bridgeObjectRelease();
LABEL_37:
        sub_1DC2CAD14();
        return;
      }
      v9 = sub_1DC4099E8();
      swift_bridgeObjectRelease();
      if ((v9 & 1) != 0)
        goto LABEL_37;
    }

    v3 = v12;
    v4 = v10;
  }
  if (v4)
  {
    v10 = (v4 - 1) & v4;
    v11 = __clz(__rbit64(v4)) | (v3 << 6);
    v12 = v3;
LABEL_32:
    v13 = *(id *)(*(_QWORD *)(v1 + 48) + 8 * v11);
    if (!v13)
      goto LABEL_37;
    goto LABEL_33;
  }
  v14 = v3 + 1;
  if (!__OFADD__(v3, 1))
  {
    if (v14 >= v22)
      goto LABEL_37;
    v15 = *(_QWORD *)(v23 + 8 * v14);
    v12 = v3 + 1;
    if (!v15)
    {
      v12 = v3 + 2;
      if (v3 + 2 >= v22)
        goto LABEL_37;
      v15 = *(_QWORD *)(v23 + 8 * v12);
      if (!v15)
      {
        v12 = v3 + 3;
        if (v3 + 3 >= v22)
          goto LABEL_37;
        v15 = *(_QWORD *)(v23 + 8 * v12);
        if (!v15)
        {
          v12 = v3 + 4;
          if (v3 + 4 >= v22)
            goto LABEL_37;
          v15 = *(_QWORD *)(v23 + 8 * v12);
          if (!v15)
          {
            v12 = v3 + 5;
            if (v3 + 5 >= v22)
              goto LABEL_37;
            v15 = *(_QWORD *)(v23 + 8 * v12);
            if (!v15)
            {
              v16 = v3 + 6;
              while (v22 != v16)
              {
                v15 = *(_QWORD *)(v23 + 8 * v16++);
                if (v15)
                {
                  v12 = v16 - 1;
                  goto LABEL_31;
                }
              }
              goto LABEL_37;
            }
          }
        }
      }
    }
LABEL_31:
    v10 = (v15 - 1) & v15;
    v11 = __clz(__rbit64(v15)) + (v12 << 6);
    goto LABEL_32;
  }
  __break(1u);
}

uint64_t OpenMainWindowCommandHandler.__allocating_init(navigator:)(uint64_t a1)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  return result;
}

uint64_t OpenMainWindowCommandHandler.init(navigator:)(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return v1;
}

uint64_t OpenMainWindowCommandHandler.deinit()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t OpenMainWindowCommandHandler.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

void sub_1DC2D13F4()
{
  _s8StocksUI28OpenMainWindowCommandHandlerC6handle13commandCenter0I04with6sourcey03TeaB00fJ4Type_p_AI0F0CyytGytAI0F15ExecutionSourceCSgtF_0();
}

void _s8StocksUI28OpenMainWindowCommandHandlerC6handle13commandCenter0I04with6sourcey03TeaB00fJ4Type_p_AI0F0CyytGytAI0F15ExecutionSourceCSgtF_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;
  id v12;

  v0 = sub_1DC405D88();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = (void *)objc_opt_self();
  v5 = objc_msgSend(v4, sel_sharedApplication);
  v6 = objc_msgSend(v5, sel_connectedScenes);

  sub_1DC2A8B5C();
  sub_1DC2CACBC();
  v7 = sub_1DC408E54();

  sub_1DC2D1040(v7);
  v9 = v8;
  swift_bridgeObjectRelease();
  if (v9)
  {
    v10 = objc_msgSend(v4, sel_sharedApplication);
    v12 = objc_msgSend(v9, sel_session);
    objc_msgSend(v10, sel_requestSceneSessionActivation_userActivity_options_errorHandler_, v12, 0, 0, 0);

  }
  else
  {
    if (qword_1EDB2C380 != -1)
      swift_once();
    v11 = type metadata accessor for StocksActivity(0);
    __swift_project_value_buffer(v11, (uint64_t)qword_1EDB2C360);
    (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DBAC90], v0);
    sub_1DC404510();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  }
}

uint64_t method lookup function for OpenMainWindowCommandHandler()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of OpenMainWindowCommandHandler.__allocating_init(navigator:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t sub_1DC2D1630(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int v13;
  _BOOL8 v14;
  _QWORD v20[4];

  v9 = sub_1DC4070A8();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20[0] = a2;
  v20[1] = a3;
  v20[2] = a4;
  v20[3] = a5;
  sub_1DC407024();
  sub_1DC407018();
  v13 = (*(uint64_t (**)(char *, uint64_t))(v10 + 88))(v12, v9);
  v14 = v13 == *MEMORY[0x1E0D52EB0];
  if (v13 == *MEMORY[0x1E0D52EB0] || v13 == *MEMORY[0x1E0D52EE8])
    goto LABEL_19;
  if (v13 != *MEMORY[0x1E0D52ED8])
  {
    if (v13 == *MEMORY[0x1E0D52F00]
      || v13 == *MEMORY[0x1E0D52F08]
      || v13 == *MEMORY[0x1E0D52EF0]
      || v13 == *MEMORY[0x1E0D52EF8])
    {
      return 1;
    }
LABEL_19:
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    return v14;
  }
  return 0;
}

uint64_t sub_1DC2D1788(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t result;
  uint64_t v33;
  int v34;
  uint64_t v35;
  double v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(_QWORD);
  double v46;
  double v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void (*v61)(uint64_t, uint64_t, uint64_t);
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t (*v70)(uint64_t);
  char *v71;
  __int128 v72;
  void (*v73)(uint64_t, _QWORD, uint64_t);
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void (*v79)(uint64_t, uint64_t, uint64_t);
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  __int128 v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;

  v100 = a7;
  v101 = a8;
  v86 = a5;
  v85 = a4;
  *(_QWORD *)&v103 = a1;
  v11 = sub_1DC3FFFEC();
  v98 = *(_QWORD *)(v11 - 8);
  v99 = v11;
  MEMORY[0x1E0C80A78](v11);
  v97 = (char *)&v72 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1DC4070A8();
  MEMORY[0x1E0C80A78](v13);
  v93 = (char *)&v72 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1DC4034A8();
  v95 = *(_QWORD *)(v15 - 8);
  v96 = v15;
  MEMORY[0x1E0C80A78](v15);
  v94 = (char *)&v72 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = sub_1DC4031A8();
  v87 = *(_QWORD *)(v89 - 8);
  MEMORY[0x1E0C80A78](v89);
  v88 = (char *)&v72 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92 = sub_1DC40319C();
  v91 = *(_QWORD *)(v92 - 8);
  MEMORY[0x1E0C80A78](v92);
  v90 = (char *)&v72 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = sub_1DC403244();
  v83 = *(_QWORD *)(v84 - 8);
  MEMORY[0x1E0C80A78](v84);
  v82 = (char *)&v72 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = sub_1DC402ED8();
  v80 = *(_QWORD *)(v81 - 8);
  MEMORY[0x1E0C80A78](v81);
  v79 = (void (*)(uint64_t, uint64_t, uint64_t))((char *)&v72 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  v21 = sub_1DC4031C0();
  v22 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  v24 = (char *)&v72 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC089DA4(0, (unint64_t *)&unk_1EDB2AD38, (uint64_t (*)(uint64_t))MEMORY[0x1E0D53750], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v25);
  v27 = (char *)&v72 - v26;
  v28 = sub_1DC4071EC();
  v29 = *(_QWORD *)(v28 - 8);
  MEMORY[0x1E0C80A78](v28);
  v31 = (char *)&v72 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v102 = result;
    v104 = a6;
    v105 = v100;
    v106 = v101;
    v107 = a9;
    v33 = sub_1DC407024();
    sub_1DC40700C();
    v34 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28);
    v78 = a3;
    v100 = v33;
    if (v34 == 1)
    {
      sub_1DC2D2398((uint64_t)v27);
      v35 = *MEMORY[0x1E0CF8170];
LABEL_14:
      swift_bridgeObjectRetain();
      v52 = v82;
      sub_1DC403238();
      sub_1DC089DA4(0, (unint64_t *)&qword_1EDB3FE40, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8178], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v54 = v53;
      v55 = sub_1DC401618();
      v56 = *(_QWORD *)(v55 - 8);
      v57 = *(unsigned __int8 *)(v56 + 80);
      v58 = (v57 + 32) & ~v57;
      v59 = v58 + *(_QWORD *)(v56 + 72);
      v86 = v57 | 7;
      v80 = v54;
      v81 = v59;
      v60 = swift_allocObject();
      v103 = xmmword_1DC40DC10;
      *(_OWORD *)(v60 + 16) = xmmword_1DC40DC10;
      v61 = *(void (**)(uint64_t, uint64_t, uint64_t))(v56 + 104);
      v61(v60 + v58, v35, v55);
      v79 = v61;
      sub_1DC080808(&qword_1EDB297E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD260], MEMORY[0x1E0DAD250]);
      v85 = 0x80000001DC4456D0;
      v62 = v35;
      LODWORD(v101) = v35;
      v63 = v84;
      sub_1DC4015C4();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v83 + 8))(v52, v63);
      (*(void (**)(char *, uint64_t, uint64_t))(v87 + 16))(v88, v102 + qword_1EDB3AAE0, v89);
      v64 = v90;
      sub_1DC403190();
      v65 = swift_allocObject();
      *(_OWORD *)(v65 + 16) = v103;
      v61(v65 + v58, v62, v55);
      sub_1DC080808(&qword_1EDB297C8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD178], MEMORY[0x1E0DAD168]);
      v66 = v92;
      sub_1DC4015C4();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v91 + 8))(v64, v66);
      sub_1DC407018();
      v67 = v94;
      sub_1DC40349C();
      v68 = swift_allocObject();
      *(_OWORD *)(v68 + 16) = v103;
      v79(v68 + v58, v101, v55);
      sub_1DC080808(&qword_1EDB29838, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD598], MEMORY[0x1E0DAD588]);
      v69 = v96;
      sub_1DC4015C4();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v95 + 8))(v67, v69);
      sub_1DC403568();
      v70 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD6A0];
      v71 = v97;
      sub_1DC407000();
      sub_1DC080808(&qword_1EDB29878, v70, MEMORY[0x1E0DAD698]);
      sub_1DC4015A0();
      swift_release();
      return (*(uint64_t (**)(char *, uint64_t))(v98 + 8))(v71, v99);
    }
    (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v31, v27, v28);
    result = sub_1DC4071E0();
    if ((~*(_QWORD *)&v36 & 0x7FF0000000000000) != 0)
    {
      if (v36 > -2147483650.0)
      {
        if (v36 < 2147483650.0)
        {
          sub_1DC4031B4();
          sub_1DC089DA4(0, (unint64_t *)&qword_1EDB3FE40, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8178], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
          v38 = v37;
          v39 = sub_1DC401618();
          v40 = *(_QWORD *)(v39 - 8);
          v41 = *(unsigned __int8 *)(v40 + 80);
          v42 = (v41 + 32) & ~v41;
          v43 = v42 + *(_QWORD *)(v40 + 72);
          v76 = v38;
          v75 = v43;
          v74 = v41 | 7;
          v44 = swift_allocObject();
          v72 = xmmword_1DC40DC10;
          *(_OWORD *)(v44 + 16) = xmmword_1DC40DC10;
          v45 = *(void (**)(_QWORD))(v40 + 104);
          LODWORD(v101) = *MEMORY[0x1E0CF8170];
          v77 = v39;
          v73 = (void (*)(uint64_t, _QWORD, uint64_t))v45;
          v45(v44 + v42);
          sub_1DC080808((unint64_t *)&unk_1EDB41080, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD1C0], MEMORY[0x1E0DAD1B0]);
          sub_1DC4015C4();
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v21);
          result = sub_1DC4071D4();
          if ((~*(_QWORD *)&v46 & 0x7FF0000000000000) != 0)
          {
            if (v46 > -2147483650.0)
            {
              if (v46 < 2147483650.0)
              {
                result = sub_1DC4071D4();
                if ((~*(_QWORD *)&v47 & 0x7FF0000000000000) != 0)
                {
                  if (v47 > -2147483650.0)
                  {
                    if (v47 < 2147483650.0)
                    {
                      v48 = (char *)v79;
                      sub_1DC402ECC();
                      v49 = swift_allocObject();
                      *(_OWORD *)(v49 + 16) = v72;
                      v50 = v49 + v42;
                      v35 = v101;
                      v73(v50, v101, v77);
                      sub_1DC080808((unint64_t *)&unk_1EDB41070, (uint64_t (*)(uint64_t))MEMORY[0x1E0DACCF0], MEMORY[0x1E0DACCE0]);
                      v51 = v81;
                      sub_1DC4015C4();
                      swift_bridgeObjectRelease();
                      (*(void (**)(char *, uint64_t))(v80 + 8))(v48, v51);
                      (*(void (**)(char *, uint64_t))(v29 + 8))(v31, v28);
                      goto LABEL_14;
                    }
LABEL_24:
                    __break(1u);
                    return result;
                  }
LABEL_23:
                  __break(1u);
                  goto LABEL_24;
                }
LABEL_22:
                __break(1u);
                goto LABEL_23;
              }
LABEL_21:
              __break(1u);
              goto LABEL_22;
            }
LABEL_20:
            __break(1u);
            goto LABEL_21;
          }
LABEL_19:
          __break(1u);
          goto LABEL_20;
        }
LABEL_18:
        __break(1u);
        goto LABEL_19;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_18;
  }
  return result;
}

uint64_t sub_1DC2D21A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  v1 = v0 + qword_1EDB3AAE0;
  v2 = sub_1DC4031A8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t sub_1DC2D21FC()
{
  sub_1DC2D21A8();
  return swift_deallocClassInstance();
}

uint64_t sub_1DC2D2220(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a2 + 96);
}

uint64_t sub_1DC2D2228(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a2 + 104);
}

uint64_t sub_1DC2D2230()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1DC2D2254()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1DC407024();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1DC2D2300(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char *v9;

  v3 = v1[2];
  v4 = v1[3];
  v5 = v1[4];
  v6 = v1[5];
  v7 = *(_QWORD *)(sub_1DC407024() - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = (char *)v1 + ((*(_QWORD *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8);
  return sub_1DC2D1788(a1, v1[6], (uint64_t)v1 + v8, *(_QWORD *)v9, *((_QWORD *)v9 + 1), v3, v4, v5, v6);
}

uint64_t sub_1DC2D2398(uint64_t a1)
{
  uint64_t v2;

  sub_1DC089DA4(0, (unint64_t *)&unk_1EDB2AD38, (uint64_t (*)(uint64_t))MEMORY[0x1E0D53750], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id sub_1DC2D23EC(double *a1, char *a2)
{
  uint64_t v2;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  CGFloat v10;
  double v11;
  double v12;
  double v13;
  void *v14;
  _QWORD *v15;
  id v16;
  _QWORD *v17;
  uint64_t inited;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(uint64_t, uint64_t);
  id v28;
  uint64_t v29;
  id v30;
  void *v31;
  void *v32;
  id v33;
  void *v34;
  id v35;
  id v36;
  void *v37;
  id v38;
  void *v39;
  double Width;
  double v41;
  double v42;
  void *v44;
  uint64_t ObjCClassFromMetadata;
  char *v46;
  _QWORD *v47;
  uint64_t v48;
  _QWORD v49[3];
  uint64_t v50;
  CGRect v51;
  CGRect v52;
  CGRect v53;
  CGRect v54;

  v5 = v2 + 16;
  swift_beginAccess();
  v47 = (_QWORD *)(v2 + 16);
  v6 = __swift_project_boxed_opaque_existential_1((_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 40));
  v8 = *(_QWORD *)(*v6 + 40);
  v7 = *(_QWORD *)(*v6 + 48);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(*v6 + 16), v8);
  v9 = (void *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)(v7 + 16) + 64))(v8);
  v46 = a2;
  objc_msgSend(a2, sel_setBackgroundColor_, v9);

  v10 = *a1;
  v11 = a1[1];
  v12 = a1[2];
  v13 = a1[3];
  objc_msgSend(a2, sel_setFrame_, *a1, v11, v12, v13);
  v14 = *(void **)&a2[OBJC_IVAR____TtC8StocksUI13EmptyListView_titleLabel];
  objc_msgSend(v14, (SEL)&selRef_initWithUnsignedInteger_, a1[6], a1[7], a1[8], a1[9]);
  sub_1DC0824D4(v5, (uint64_t)v49);
  v15 = __swift_project_boxed_opaque_existential_1(v49, v50);
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v44 = (void *)objc_opt_self();
  v16 = objc_msgSend(v44, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1DC3FFC80();

  v17 = (_QWORD *)*v15;
  sub_1DC0FB194();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DC40C740;
  v19 = (void *)*MEMORY[0x1E0DC1138];
  *(_QWORD *)(inited + 32) = *MEMORY[0x1E0DC1138];
  swift_bridgeObjectRetain();
  v20 = v19;
  v21 = sub_1DC1C3F5C();
  v22 = sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FB00);
  *(_QWORD *)(inited + 40) = v21;
  v23 = (void *)*MEMORY[0x1E0DC1140];
  *(_QWORD *)(inited + 64) = v22;
  *(_QWORD *)(inited + 72) = v23;
  v24 = v17[5];
  v25 = v17[6];
  __swift_project_boxed_opaque_existential_1(v17 + 2, v24);
  v26 = *(_QWORD *)(v25 + 16);
  v27 = *(uint64_t (**)(uint64_t, uint64_t))(v26 + 240);
  v28 = v23;
  v29 = v27(v24, v26);
  *(_QWORD *)(inited + 104) = sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FB30);
  *(_QWORD *)(inited + 80) = v29;
  sub_1DC0FA3C4(inited);
  v30 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  v31 = (void *)sub_1DC408A1C();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1DC081B48((unint64_t *)&qword_1EDB3F988, 255, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1DC40D90C);
  v32 = (void *)sub_1DC408980();
  swift_bridgeObjectRelease();
  v33 = objc_msgSend(v30, sel_initWithString_attributes_, v31, v32, 0x80000001DC43E100);
  swift_bridgeObjectRelease();

  objc_msgSend(v14, sel_setAttributedText_, v33);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v49);
  objc_msgSend(v14, sel_setTextAlignment_, 1);
  objc_msgSend(v14, sel_setNumberOfLines_, 0);
  objc_msgSend(v14, sel_setLineBreakMode_, 0);
  v34 = *(void **)&v46[OBJC_IVAR____TtC8StocksUI13EmptyListView_descriptionLabel];
  objc_msgSend(v34, sel_setFrame_, a1[10], a1[11], a1[12], a1[13]);
  sub_1DC0824D4((uint64_t)v47, (uint64_t)v49);
  __swift_project_boxed_opaque_existential_1(v49, v50);
  v35 = objc_msgSend(v44, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1DC3FFC80();

  v36 = sub_1DC1C4204();
  swift_bridgeObjectRelease();
  objc_msgSend(v34, sel_setAttributedText_, v36, 0x80000001DC43E1C0);

  __swift_destroy_boxed_opaque_existential_1((uint64_t)v49);
  objc_msgSend(v34, sel_setTextAlignment_, 1);
  objc_msgSend(v34, sel_setNumberOfLines_, 0);
  objc_msgSend(v34, sel_setLineBreakMode_, 0);
  v37 = *(void **)&v46[OBJC_IVAR____TtC8StocksUI13EmptyListView_button];
  v38 = objc_msgSend(v44, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1DC3FFC80();

  v39 = (void *)sub_1DC408A1C();
  swift_bridgeObjectRelease();
  objc_msgSend(v37, sel_setTitle_forState_, v39, 0, 0x80000001DC445770);

  __swift_project_boxed_opaque_existential_1(v47, *(_QWORD *)(v48 + 40));
  sub_1DC1C4448(v37);
  objc_msgSend(v37, sel_sizeToFit);
  objc_msgSend(v14, sel_frame);
  Width = CGRectGetWidth(v51);
  objc_msgSend(v34, sel_frame);
  v41 = CGRectGetWidth(v52);
  if (Width <= v41)
    Width = v41;
  objc_msgSend(v37, sel_frame);
  v42 = CGRectGetWidth(v53);
  if (Width <= v42)
    Width = v42;
  v54.origin.x = v10;
  v54.origin.y = v11;
  v54.size.width = v12;
  v54.size.height = v13;
  objc_msgSend(v37, sel_setFrame_, (CGRectGetWidth(v54) - Width) * 0.5, a1[4], Width, a1[5]);
  return objc_msgSend(v37, sel_setHidden_, ((_BYTE)a1[14] & 1) == 0);
}

uint64_t sub_1DC2D2A70()
{
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

id sub_1DC2D2A94(void *a1, void *a2, uint64_t a3, uint64_t a4, char a5, char a6, char a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, void *a13, void *a14, uint64_t a15, uint64_t a16)
{
  void *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int (*v21)(uint64_t, uint64_t, uint64_t);
  void *v22;
  void *v23;
  void *v24;
  id v25;
  uint64_t v27;
  void *v31;

  v17 = (void *)sub_1DC408A1C();
  swift_bridgeObjectRelease();
  if (a9)
  {
    v18 = (void *)sub_1DC408A1C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v18 = 0;
  }
  v19 = sub_1DC3FFFEC();
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48);
  v22 = 0;
  if (v21(a11, 1, v19) != 1)
  {
    v22 = (void *)sub_1DC3FFF50();
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(a11, v19);
  }
  if (v21(a12, 1, v19) == 1)
  {
    v23 = 0;
  }
  else
  {
    v23 = (void *)sub_1DC3FFF50();
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(a12, v19);
  }
  if (a16)
  {
    v24 = (void *)sub_1DC408A1C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v24 = 0;
  }
  LOBYTE(v27) = a10 & 1;
  v25 = objc_msgSend(v31, sel_initWithAppAdamID_inAppAdamID_chargeCurrencyCode_newsAppPurchase_isTrialPeriod_isPurchaser_servicesBundleAdamID_isAmplifyUser_startDate_expiryDate_initialPurchaseTimestamp_serviceBeginsTimestamp_vendorAdHocOfferID_, a1, a2, v17, a5 & 1, a6 & 1, a7 & 1, v18, v27, v22, v23, a13, a14, v24);

  return v25;
}

unint64_t sub_1DC2D2C74()
{
  unint64_t result;

  result = qword_1F0351408;
  if (!qword_1F0351408)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1F0351408);
  }
  return result;
}

id sub_1DC2D2CB0(uint64_t a1)
{
  char *v1;
  char *v2;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v22[3];
  uint64_t v23;
  uint64_t v24;

  v2 = v1;
  v4 = &v2[OBJC_IVAR____TtC8StocksUI17WebViewController_styler];
  swift_beginAccess();
  sub_1DC0824D4((uint64_t)v4, (uint64_t)v22);
  v5 = v23;
  v6 = v24;
  __swift_project_boxed_opaque_existential_1(v22, v23);
  v7 = *(_QWORD *)(v6 + 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 8);
  v20 = v5;
  v21 = v6;
  __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v19);
  v8(a1, v5, v7);
  swift_beginAccess();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
  sub_1DC097DD0(&v19, (uint64_t)v4);
  swift_endAccess();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
  v9 = __swift_project_boxed_opaque_existential_1(v4, *((_QWORD *)v4 + 3));
  v10 = *v9;
  v11 = (_QWORD *)(*v9 + 16);
  v13 = *(_QWORD *)(*v9 + 40);
  v12 = *(_QWORD *)(*v9 + 48);
  __swift_project_boxed_opaque_existential_1(v11, v13);
  v14 = (void *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)(v12 + 16) + 112))(v13);
  objc_msgSend(v2, sel_setPreferredControlTintColor_, v14);

  v16 = *(_QWORD *)(v10 + 40);
  v15 = *(_QWORD *)(v10 + 48);
  __swift_project_boxed_opaque_existential_1(v11, v16);
  v17 = (void *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)(v15 + 16) + 72))(v16);
  objc_msgSend(v2, sel_setPreferredBarTintColor_, v17);

  return objc_msgSend(v2, sel_setDismissButtonStyle_, 0);
}

uint64_t sub_1DC2D2EB8(char a1)
{
  char *v1;
  char *v2;
  objc_class *ObjectType;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  void (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  _QWORD v27[2];
  _OWORD v28[2];
  uint64_t v29;
  objc_super v30;

  v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  v27[0] = sub_1DC400010();
  v5 = *(_QWORD *)(v27[0] - 8);
  MEMORY[0x1E0C80A78](v27[0]);
  v7 = (char *)v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for WebViewSession();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (_QWORD *)((char *)v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1DC092F50(0, &qword_1F0351468, v12);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v17 = MEMORY[0x1E0C80A78](v16).n128_u64[0];
  v19 = (char *)v27 - v18;
  v30.receiver = v2;
  v30.super_class = ObjectType;
  v27[1] = ObjectType;
  objc_msgSendSuper2(&v30, sel_viewDidAppear_, a1 & 1, v17);
  v20 = (uint64_t)&v2[OBJC_IVAR____TtC8StocksUI17WebViewController_session];
  swift_beginAccess();
  sub_1DC2D4114(v20, (uint64_t)v19);
  LODWORD(ObjectType) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(v19, 1, v8);
  sub_1DC2D4168((uint64_t)v19);
  if ((_DWORD)ObjectType == 1)
  {
    sub_1DC400004();
    v21 = sub_1DC3FFFF8();
    v23 = v22;
    (*(void (**)(char *, _QWORD))(v5 + 8))(v7, v27[0]);
    sub_1DC3FFFE0();
    *v11 = v21;
    v11[1] = v23;
    *((_BYTE *)v11 + *(int *)(v8 + 24)) = 0;
    v24 = &v2[OBJC_IVAR____TtC8StocksUI17WebViewController_webViewCoordinator];
    swift_beginAccess();
    v25 = *((_QWORD *)v24 + 3);
    if (v25)
    {
      __swift_project_boxed_opaque_existential_1(v24, v25);
      sub_1DC24BAB4((uint64_t)v11);
    }
    sub_1DC2D41B4((uint64_t)v11, (uint64_t)v15);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v15, 0, 1, v8);
    swift_beginAccess();
    sub_1DC2D4234((uint64_t)v15, v20);
    swift_endAccess();
  }
  if (*(_QWORD *)&v2[OBJC_IVAR____TtC8StocksUI17WebViewController_navigator])
  {
    sub_1DC080808(&qword_1F0351470, (uint64_t (*)(uint64_t))type metadata accessor for WebViewController, (uint64_t)&unk_1DC424EE8);
    swift_retain();
    sub_1DC404504();
    swift_release();
  }
  else
  {
    v29 = 0;
    memset(v28, 0, sizeof(v28));
  }
  return sub_1DC17C7C8((uint64_t)v28, &qword_1F0351480, &qword_1F0351488);
}

uint64_t sub_1DC2D31D4(char a1)
{
  char *v1;
  objc_class *ObjectType;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  char *v17;
  uint64_t v18;
  _BYTE v19[24];
  objc_super v20;

  ObjectType = (objc_class *)swift_getObjectType();
  sub_1DC092F50(0, &qword_1F0351468, (void (*)(uint64_t))type metadata accessor for WebViewSession);
  MEMORY[0x1E0C80A78](v4);
  v6 = &v19[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v7);
  v9 = &v19[-v8];
  v10 = type metadata accessor for WebViewSession();
  v11 = *(_QWORD *)(v10 - 8);
  *(_QWORD *)&v12 = MEMORY[0x1E0C80A78](v10).n128_u64[0];
  v14 = &v19[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v20.receiver = v1;
  v20.super_class = ObjectType;
  objc_msgSendSuper2(&v20, sel_viewDidDisappear_, a1 & 1, v12);
  v15 = (uint64_t)&v1[OBJC_IVAR____TtC8StocksUI17WebViewController_session];
  swift_beginAccess();
  sub_1DC2D4114(v15, (uint64_t)v9);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
    return sub_1DC2D4168((uint64_t)v9);
  sub_1DC2D41B4((uint64_t)v9, (uint64_t)v14);
  v17 = &v1[OBJC_IVAR____TtC8StocksUI17WebViewController_webViewCoordinator];
  swift_beginAccess();
  v18 = *((_QWORD *)v17 + 3);
  if (v18)
  {
    __swift_project_boxed_opaque_existential_1(v17, v18);
    swift_endAccess();
    swift_retain();
    sub_1DC401828();
    swift_release();
    sub_1DC2D41F8((uint64_t)v14);
  }
  else
  {
    sub_1DC2D41F8((uint64_t)v14);
    swift_endAccess();
  }
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v6, 1, 1, v10);
  swift_beginAccess();
  sub_1DC2D4234((uint64_t)v6, v15);
  return swift_endAccess();
}

uint64_t sub_1DC2D360C()
{
  return type metadata accessor for WebViewController();
}

uint64_t type metadata accessor for WebViewController()
{
  uint64_t result;

  result = qword_1F0351458;
  if (!qword_1F0351458)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1DC2D3650()
{
  unint64_t v0;

  sub_1DC092F50(319, &qword_1F0351468, (void (*)(uint64_t))type metadata accessor for WebViewSession);
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

id sub_1DC2D36EC(char a1)
{
  id *v1;

  return objc_msgSend(*v1, sel_setSu_showingLinkPreview_, a1 & 1);
}

uint64_t sub_1DC2D3704@<X0>(uint64_t a1@<X8>)
{
  _BYTE v3[40];

  sub_1DC405AAC();
  return sub_1DC2D40C0((uint64_t)v3, a1);
}

uint64_t sub_1DC2D373C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  int v9;
  unsigned int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;

  v4 = sub_1DC404BE8();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v5 + 16))(v8, a1, v4, v6);
  v9 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v8, v4);
  if (v9 == *MEMORY[0x1E0DB8468])
  {
    v10 = (unsigned int *)MEMORY[0x1E0DBA218];
LABEL_5:
    v11 = *v10;
    v12 = sub_1DC4059BC();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(a2, v11, v12);
    v13 = *MEMORY[0x1E0DBA238];
    v14 = sub_1DC4059C8();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(a2, v13, v14);
  }
  if (v9 == *MEMORY[0x1E0DB8460])
  {
    v10 = (unsigned int *)MEMORY[0x1E0DBA220];
    goto LABEL_5;
  }
  result = sub_1DC409838();
  __break(1u);
  return result;
}

uint64_t sub_1DC2D38AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DC2D373C(a1, a2);
}

uint64_t sub_1DC2D38C0@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;

  objc_msgSend(v1, sel_dismissViewControllerAnimated_completion_, 0, 0);
  v3 = *MEMORY[0x1E0DBA4F0];
  v4 = sub_1DC405AA0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 104))(a1, v3, v4);
}

uint64_t sub_1DC2D391C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  void (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  int v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v24 = sub_1DC400010();
  v1 = *(_QWORD *)(v24 - 8);
  MEMORY[0x1E0C80A78](v24);
  v3 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for WebViewSession();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (uint64_t *)((char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1DC092F50(0, &qword_1F0351468, v8);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v23 - v13;
  v25 = v0;
  v15 = v0 + OBJC_IVAR____TtC8StocksUI17WebViewController_session;
  swift_beginAccess();
  sub_1DC2D4114(v15, (uint64_t)v14);
  v16 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v14, 1, v4);
  result = sub_1DC2D4168((uint64_t)v14);
  if (v16 == 1)
  {
    sub_1DC400004();
    v18 = sub_1DC3FFFF8();
    v20 = v19;
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v24);
    sub_1DC3FFFE0();
    *v7 = v18;
    v7[1] = v20;
    *((_BYTE *)v7 + *(int *)(v4 + 24)) = 1;
    v21 = (_QWORD *)(v25 + OBJC_IVAR____TtC8StocksUI17WebViewController_webViewCoordinator);
    swift_beginAccess();
    v22 = v21[3];
    if (v22)
    {
      __swift_project_boxed_opaque_existential_1(v21, v22);
      sub_1DC24BAB4((uint64_t)v7);
    }
    sub_1DC2D41B4((uint64_t)v7, (uint64_t)v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v11, 0, 1, v4);
    swift_beginAccess();
    sub_1DC2D4234((uint64_t)v11, v15);
    return swift_endAccess();
  }
  return result;
}

uint64_t sub_1DC2D3B54(void (**a1)(char *, uint64_t, _UNKNOWN **))
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;
  void (*v13)(char *, uint64_t, _UNKNOWN **);
  uint64_t v14;
  _QWORD v16[5];

  sub_1DC092F50(0, &qword_1F0351468, (void (*)(uint64_t))type metadata accessor for WebViewSession);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v16[-1] - v4;
  v6 = type metadata accessor for WebViewSession();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v16[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = v1 + OBJC_IVAR____TtC8StocksUI17WebViewController_session;
  swift_beginAccess();
  sub_1DC2D4114(v10, (uint64_t)v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
    return sub_1DC2D4168((uint64_t)v5);
  sub_1DC2D41B4((uint64_t)v5, (uint64_t)v9);
  v12 = v1 + OBJC_IVAR____TtC8StocksUI17WebViewController_webViewCoordinator;
  swift_beginAccess();
  if (*(_QWORD *)(v12 + 24))
  {
    sub_1DC0824D4(v12, (uint64_t)v16);
    swift_endAccess();
    __swift_project_boxed_opaque_existential_1(v16, v16[3]);
    v13 = *a1;
    v14 = type metadata accessor for WebViewCoordinator();
    v13(v9, v14, &off_1EA45B008);
    sub_1DC2D41F8((uint64_t)v9);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
  }
  else
  {
    sub_1DC2D41F8((uint64_t)v9);
    return swift_endAccess();
  }
}

uint64_t sub_1DC2D3CF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  _QWORD *v13;
  uint64_t v14;
  _BYTE v15[24];

  sub_1DC092F50(0, &qword_1F0351468, (void (*)(uint64_t))type metadata accessor for WebViewSession);
  MEMORY[0x1E0C80A78](v1);
  v3 = &v15[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v4);
  v6 = &v15[-v5];
  v7 = type metadata accessor for WebViewSession();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = &v15[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = v0 + OBJC_IVAR____TtC8StocksUI17WebViewController_session;
  swift_beginAccess();
  sub_1DC2D4114(v11, (uint64_t)v6);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
    return sub_1DC2D4168((uint64_t)v6);
  sub_1DC2D41B4((uint64_t)v6, (uint64_t)v10);
  v13 = (_QWORD *)(v0 + OBJC_IVAR____TtC8StocksUI17WebViewController_webViewCoordinator);
  swift_beginAccess();
  v14 = v13[3];
  if (v14)
  {
    __swift_project_boxed_opaque_existential_1(v13, v14);
    swift_endAccess();
    swift_retain();
    sub_1DC401828();
    swift_release();
    sub_1DC2D41F8((uint64_t)v10);
  }
  else
  {
    sub_1DC2D41F8((uint64_t)v10);
    swift_endAccess();
  }
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v3, 1, 1, v7);
  swift_beginAccess();
  sub_1DC2D4234((uint64_t)v3, v11);
  return swift_endAccess();
}

uint64_t sub_1DC2D3EE4()
{
  return sub_1DC2D3B54(off_1EA45B020);
}

uint64_t sub_1DC2D3F04()
{
  swift_getObjectType();
  return sub_1DC4028FC();
}

uint64_t sub_1DC2D3F70()
{
  return sub_1DC2D3B54(&off_1EA45B018);
}

uint64_t sub_1DC2D3F90()
{
  swift_getObjectType();
  return sub_1DC402914();
}

uint64_t sub_1DC2D3FDC()
{
  swift_getObjectType();
  return sub_1DC402914();
}

uint64_t sub_1DC2D4020()
{
  swift_getObjectType();
  return sub_1DC402950();
}

uint64_t sub_1DC2D405C()
{
  swift_getObjectType();
  return sub_1DC4028F0();
}

uint64_t sub_1DC2D4084(uint64_t a1)
{
  uint64_t result;

  result = sub_1DC080808(&qword_1F0351470, (uint64_t (*)(uint64_t))type metadata accessor for WebViewController, (uint64_t)&unk_1DC424EE8);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1DC2D40C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1DC092F50(0, &qword_1F0351478, type metadata accessor for UIEdgeInsets);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC2D4114(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1DC092F50(0, &qword_1F0351468, (void (*)(uint64_t))type metadata accessor for WebViewSession);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC2D4168(uint64_t a1)
{
  uint64_t v2;

  sub_1DC092F50(0, &qword_1F0351468, (void (*)(uint64_t))type metadata accessor for WebViewSession);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DC2D41B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WebViewSession();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC2D41F8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for WebViewSession();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DC2D4234(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1DC092F50(0, &qword_1F0351468, (void (*)(uint64_t))type metadata accessor for WebViewSession);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC2D4288(uint64_t a1)
{
  uint64_t v1;

  return sub_1DC24BFF8(a1, v1);
}

uint64_t sub_1DC2D4290(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t result;
  char v12;
  uint64_t v13;
  uint64_t v14;

  v4 = sub_1DC403B14();
  MEMORY[0x1E0C80A78](v4);
  v5 = type metadata accessor for ForYouFeedSectionDescriptor();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v14 - v9;
  result = sub_1DC0C3B5C(a1);
  if ((v12 & 1) == 0)
  {
    v13 = result;
    sub_1DC2D45EC(a2);
    sub_1DC0FE574(0, (unint64_t *)&qword_1EDB29D00, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60]);
    sub_1DC4046FC();
    sub_1DC2EB4F8();
    sub_1DC0926D8((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for ForYouFeedSectionDescriptor);
    result = sub_1DC404708();
    if (v13 < (uint64_t)0xFFFFFFFF80000000)
    {
      __break(1u);
    }
    else if (v13 <= 0x7FFFFFFF)
    {
      sub_1DC4046FC();
      sub_1DC2EB6EC();
      sub_1DC0926D8((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for ForYouFeedSectionDescriptor);
      return sub_1DC403AF0();
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1DC2D444C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t result;
  char v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t);
  _DWORD v19[2];
  uint64_t v20;

  v20 = a3;
  v5 = sub_1DC403B14();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1DC402218();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v19 - v13;
  result = sub_1DC27B168(a1);
  if ((v16 & 1) == 0)
  {
    v17 = result;
    v19[1] = sub_1DC2D47CC(a2);
    sub_1DC27C56C();
    sub_1DC4046FC();
    sub_1DC1931D4((uint64_t)v7);
    v18 = *(void (**)(char *, uint64_t))(v9 + 8);
    v18(v14, v8);
    result = sub_1DC404708();
    if (v17 < (uint64_t)0xFFFFFFFF80000000)
    {
      __break(1u);
    }
    else if (v17 <= 0x7FFFFFFF)
    {
      sub_1DC4046FC();
      v18(v11, v8);
      return sub_1DC403AF0();
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1DC2D45EC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void);
  _BYTE *v9;
  uint64_t result;
  uint64_t v11;
  _BYTE v12[8];

  sub_1DC2B962C(0);
  MEMORY[0x1E0C80A78](v2);
  v4 = &v12[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = sub_1DC405FF8();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (uint64_t (*)(void))&v12[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1DC0990BC(a1, (uint64_t)v4, (uint64_t (*)(_QWORD))sub_1DC2B962C);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_1DC0926D8((uint64_t)v4, (uint64_t (*)(_QWORD))sub_1DC2B962C);
    v8 = MEMORY[0x1E0DB7B60];
    sub_1DC0FE574(0, (unint64_t *)&qword_1EDB29D00, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60]);
    v4 = v9;
    v5 = sub_1DC10297C((unint64_t *)&unk_1EDB29CF0, (unint64_t *)&qword_1EDB29D00, (uint64_t (*)(uint64_t, _QWORD *))v8, MEMORY[0x1E0DB7B98]);
    sub_1DC408E90();
    sub_1DC408ED8();
    result = sub_1DC408ECC();
    if (result < (uint64_t)0xFFFFFFFF80000000)
    {
      __break(1u);
      goto LABEL_10;
    }
    v11 = result;
    if (result <= 0x7FFFFFFF)
      return v11;
    __break(1u);
  }
  (*(void (**)(uint64_t (*)(void), _BYTE *, uint64_t))(v6 + 32))(v8, v4, v5);
  result = sub_1DC405FEC();
  if (result < (uint64_t)0xFFFFFFFF80000000)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v11 = result;
  if (result <= 0x7FFFFFFF)
  {
    (*(void (**)(uint64_t (*)(void), uint64_t))(v6 + 8))(v8, v5);
    return v11;
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1DC2D47CC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  _BYTE v12[8];

  sub_1DC2B962C(0);
  MEMORY[0x1E0C80A78](v2);
  v4 = &v12[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = sub_1DC405FF8();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v12[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1DC0990BC(a1, (uint64_t)v4, (uint64_t (*)(_QWORD))sub_1DC2B962C);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_1DC0926D8((uint64_t)v4, (uint64_t (*)(_QWORD))sub_1DC2B962C);
    sub_1DC27C56C();
    v5 = v9;
    v8 = (_BYTE *)sub_1DC080808((unint64_t *)&unk_1F03514C8, (uint64_t (*)(uint64_t))sub_1DC27C56C, MEMORY[0x1E0DB7B98]);
    sub_1DC408E90();
    sub_1DC408ED8();
    result = sub_1DC408ECC();
    if (result < (uint64_t)0xFFFFFFFF80000000)
    {
      __break(1u);
      goto LABEL_10;
    }
    v11 = result;
    if (result <= 0x7FFFFFFF)
      return v11;
    __break(1u);
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 32))(v8, v4, v5);
  result = sub_1DC405FEC();
  if (result < (uint64_t)0xFFFFFFFF80000000)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v11 = result;
  if (result <= 0x7FFFFFFF)
  {
    (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
    return v11;
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1DC2D4994(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t (*v26)(void);
  uint64_t (*v27)(void);
  char *v28;
  void (*v29)(char *, uint64_t, uint64_t);
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t *, _QWORD);
  void (*v39)(char *);
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t result;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char *v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(char *, char *, uint64_t);
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  unint64_t v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  void (*v85)(char *, uint64_t, uint64_t);
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  char *v96;
  char *v97;
  uint64_t v98[5];

  v75 = a1;
  v2 = sub_1DC407BE8();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v97 = (char *)&v71 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v95 = (char *)&v71 - v6;
  v77 = sub_1DC405B30();
  v76 = *(_QWORD *)(v77 - 8);
  MEMORY[0x1E0C80A78](v77);
  v72 = v7;
  v74 = (char *)&v71 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = sub_1DC403718();
  v78 = *(_QWORD *)(v82 - 8);
  MEMORY[0x1E0C80A78](v82);
  v73 = (char *)&v71 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = v8;
  MEMORY[0x1E0C80A78](v9);
  v81 = (char *)&v71 - v10;
  sub_1DC0FE574(0, (unint64_t *)&qword_1EDB29D00, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60]);
  v12 = v11;
  v13 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v92 = (char *)&v71 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v87 = (char *)&v71 - v16;
  sub_1DC1124F4();
  v96 = v17;
  MEMORY[0x1E0C80A78](v17);
  v90 = (char *)&v71 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0FE574(0, (unint64_t *)&qword_1EDB2AB80, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790]);
  v89 = v19;
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v22 = (char *)&v71 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)&v71 - v24;
  v80 = v1;
  v98[0] = *(_QWORD *)(v1 + 64);
  v26 = MEMORY[0x1E0DB80B8];
  sub_1DC0FE574(0, (unint64_t *)&qword_1EDB29EC0, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB80B8]);
  v27 = v26;
  v28 = v95;
  sub_1DC10297C((unint64_t *)&qword_1EDB29EB0, (unint64_t *)&qword_1EDB29EC0, (uint64_t (*)(uint64_t, _QWORD *))v27, MEMORY[0x1E0DB80D0]);
  sub_1DC405050();
  v88 = v20;
  v29 = *(void (**)(char *, uint64_t, uint64_t))(v20 + 16);
  v79 = v25;
  v30 = v25;
  v31 = v89;
  v85 = v29;
  v29(v22, (uint64_t)v30, v89);
  sub_1DC10297C((unint64_t *)&unk_1EDB2AB60, (unint64_t *)&qword_1EDB2AB80, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790], MEMORY[0x1E0DBC7C0]);
  v32 = v90;
  v86 = v22;
  v33 = v31;
  sub_1DC408BF0();
  v34 = &v32[*((int *)v96 + 9)];
  v35 = (uint64_t)v32;
  v36 = sub_1DC10297C((unint64_t *)&unk_1EDB2AB70, (unint64_t *)&qword_1EDB2AB80, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790], MEMORY[0x1E0DBC7C8]);
  v37 = *(_QWORD *)v34;
  sub_1DC408ED8();
  v93 = 0;
  if (v37 != v98[0])
  {
    v93 = 0;
    v94 = v2;
    v83 = v12;
    v84 = v36;
    v91 = v13;
    v96 = v34;
    while (1)
    {
      v38 = (void (*)(uint64_t *, _QWORD))sub_1DC408EF0();
      v39 = *(void (**)(char *))(v13 + 16);
      v40 = v87;
      v39(v87);
      v38(v98, 0);
      v41 = v86;
      v85(v86, v35, v33);
      v42 = v91;
      sub_1DC408EE4();
      (*(void (**)(char *, uint64_t))(v88 + 8))(v41, v33);
      (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v92, v40, v12);
      sub_1DC080808((unint64_t *)&unk_1EDB375F0, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedSectionDescriptor, (uint64_t)&unk_1DC425B54);
      sub_1DC080808(&qword_1EDB2E080, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedModel, (uint64_t)&unk_1DC42EDB8);
      result = sub_1DC404798();
      v44 = result;
      v45 = MEMORY[0x1E0DEE9D8];
      v98[0] = MEMORY[0x1E0DEE9D8];
      v46 = *(_QWORD *)(result + 16);
      if (v46)
        break;
      v48 = v96;
      v13 = v42;
LABEL_16:
      swift_bridgeObjectRelease();
      v57 = *(_QWORD *)(v45 + 16);
      result = swift_release();
      v33 = v89;
      v35 = (uint64_t)v90;
      if (__OFADD__(v93, v57))
        goto LABEL_22;
      v93 += v57;
      (*(void (**)(char *, uint64_t))(v13 + 8))(v92, v12);
      v58 = *(_QWORD *)v48;
      sub_1DC408ED8();
      if (v58 == v98[0])
        goto LABEL_18;
    }
    v47 = 0;
    while (v47 < *(_QWORD *)(v44 + 16))
    {
      v49 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
      v50 = *(_QWORD *)(v3 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v28, v44 + v49 + v50 * v47, v2);
      v51 = sub_1DC407BDC();
      swift_unknownObjectRelease();
      if (v51)
      {
        v52 = *(void (**)(char *, char *, uint64_t))(v3 + 32);
        v52(v97, v28, v2);
        v53 = v98[0];
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1DC2AD640(0, *(_QWORD *)(v53 + 16) + 1, 1);
          v53 = v98[0];
        }
        v55 = *(_QWORD *)(v53 + 16);
        v54 = *(_QWORD *)(v53 + 24);
        if (v55 >= v54 >> 1)
        {
          sub_1DC2AD640(v54 > 1, v55 + 1, 1);
          v53 = v98[0];
        }
        *(_QWORD *)(v53 + 16) = v55 + 1;
        v56 = v53 + v49 + v55 * v50;
        v2 = v94;
        result = ((uint64_t (*)(unint64_t, char *, uint64_t))v52)(v56, v97, v94);
        v98[0] = v53;
        v28 = v95;
      }
      else
      {
        result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v28, v2);
      }
      ++v47;
      v48 = v96;
      if (v46 == v47)
      {
        v45 = v98[0];
        v12 = v83;
        v13 = v91;
        goto LABEL_16;
      }
    }
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
LABEL_18:
  sub_1DC0926D8(v35, (uint64_t (*)(_QWORD))sub_1DC1124F4);
  (*(void (**)(char *, uint64_t))(v88 + 8))(v79, v33);
  v59 = v80;
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v80 + 296), *(_QWORD *)(v80 + 320));
  result = sub_1DC400C1C();
  if (v93 < (uint64_t)0xFFFFFFFF80000000)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v93 <= 0x7FFFFFFF)
  {
    v60 = v81;
    sub_1DC40370C();
    v97 = *(char **)(v59 + 16);
    v61 = v76;
    v62 = v74;
    v63 = v77;
    (*(void (**)(char *, uint64_t, uint64_t))(v76 + 16))(v74, v75, v77);
    v64 = v78;
    v65 = v73;
    (*(void (**)(char *, char *, uint64_t))(v78 + 16))(v73, v60, v82);
    v66 = (*(unsigned __int8 *)(v61 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80);
    v67 = (v72 + v66 + 7) & 0xFFFFFFFFFFFFFFF8;
    v68 = (*(unsigned __int8 *)(v64 + 80) + v67 + 8) & ~(unint64_t)*(unsigned __int8 *)(v64 + 80);
    v69 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v61 + 32))(v69 + v66, v62, v63);
    *(_QWORD *)(v69 + v67) = v59;
    v70 = v82;
    (*(void (**)(unint64_t, char *, uint64_t))(v64 + 32))(v69 + v68, v65, v82);
    swift_retain();
    sub_1DC401828();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v64 + 8))(v81, v70);
  }
LABEL_24:
  __break(1u);
  return result;
}

uint64_t sub_1DC2D5158(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  int v25;
  unsigned int *v26;
  char *v27;
  char v28;
  unsigned int *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(unint64_t, uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t (*v43)(uint64_t);
  char *v44;
  void (*v45)(char *, uint64_t);
  uint64_t v46;
  uint64_t result;
  _QWORD v48[2];
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  __int128 v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;

  v60 = a4;
  v52 = a3;
  v65 = a1;
  v64 = sub_1DC3FFFEC();
  v61 = *(_QWORD *)(v64 - 8);
  MEMORY[0x1E0C80A78](v64);
  v62 = (char *)v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = sub_1DC403184();
  *(_QWORD *)&v55 = *(_QWORD *)(v56 - 8);
  MEMORY[0x1E0C80A78](v56);
  v53 = (char *)v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v54 = (char *)v48 - v8;
  v9 = sub_1DC40124C();
  v50 = *(_QWORD *)(v9 - 8);
  v51 = v9;
  MEMORY[0x1E0C80A78](v9);
  v49 = (char *)v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1DC403178();
  v58 = *(_QWORD *)(v11 - 8);
  v59 = v11;
  MEMORY[0x1E0C80A78](v11);
  v57 = (char *)v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1DC403AB4();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1DC4061A8();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)v48 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_1DC403034();
  v22 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  v24 = (char *)v48 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = a2;
  sub_1DC405B0C();
  v25 = (*(uint64_t (**)(char *, uint64_t))(v18 + 88))(v20, v17);
  if (v25 == *MEMORY[0x1E0DBB5D8])
  {
    v26 = (unsigned int *)MEMORY[0x1E0DADE88];
  }
  else
  {
    v26 = (unsigned int *)MEMORY[0x1E0DADE90];
    if (v25 != *MEMORY[0x1E0DBB5E8] && v25 != *MEMORY[0x1E0DBB5F0] && v25 != *MEMORY[0x1E0DBB5E0])
    {
      result = sub_1DC409838();
      __break(1u);
      return result;
    }
  }
  (*(void (**)(char *, _QWORD, uint64_t))(v14 + 104))(v16, *v26, v13);
  sub_1DC403028();
  sub_1DC080808((unint64_t *)&unk_1EDB29760, (uint64_t (*)(uint64_t))MEMORY[0x1E0DACF28], MEMORY[0x1E0DACF18]);
  v48[1] = 0x80000001DC445BA0;
  sub_1DC4015C4();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v21);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v52 + 256), *(_QWORD *)(v52 + 280));
  v27 = v49;
  sub_1DC400A60();
  v28 = sub_1DC4011D4();
  v29 = (unsigned int *)MEMORY[0x1E0DAD158];
  if ((v28 & 1) == 0)
    v29 = (unsigned int *)MEMORY[0x1E0DAD150];
  v31 = v54;
  v30 = v55;
  v32 = v56;
  (*(void (**)(char *, _QWORD, uint64_t))(v55 + 104))(v54, *v29, v56);
  (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v53, v31, v32);
  v33 = v57;
  sub_1DC40316C();
  (*(void (**)(char *, uint64_t))(v50 + 8))(v27, v51);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v31, v32);
  sub_1DC089DA4(0, (unint64_t *)&qword_1EDB3FE40, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8178], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v56 = v34;
  v35 = sub_1DC401618();
  v36 = *(_QWORD *)(v35 - 8);
  v37 = (*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
  v38 = swift_allocObject();
  v55 = xmmword_1DC40DC10;
  *(_OWORD *)(v38 + 16) = xmmword_1DC40DC10;
  v39 = *MEMORY[0x1E0CF8170];
  v40 = *(void (**)(unint64_t, uint64_t, uint64_t))(v36 + 104);
  v40(v38 + v37, v39, v35);
  sub_1DC080808(&qword_1EDB297C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD148], MEMORY[0x1E0DAD138]);
  v41 = v59;
  sub_1DC4015C4();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v58 + 8))(v33, v41);
  v42 = swift_allocObject();
  *(_OWORD *)(v42 + 16) = v55;
  v40(v42 + v37, v39, v35);
  sub_1DC403718();
  sub_1DC080808((unint64_t *)&unk_1EDB298E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD8E8], MEMORY[0x1E0DAD8E0]);
  sub_1DC4015C4();
  swift_bridgeObjectRelease();
  sub_1DC40313C();
  v43 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD068];
  v44 = v62;
  sub_1DC405B24();
  sub_1DC080808((unint64_t *)&unk_1EDB297B0, v43, MEMORY[0x1E0DAD038]);
  sub_1DC401594();
  v45 = *(void (**)(char *, uint64_t))(v61 + 8);
  v46 = v64;
  v45(v44, v64);
  sub_1DC405B18();
  sub_1DC4015A0();
  return ((uint64_t (*)(char *, uint64_t))v45)(v44, v46);
}

void sub_1DC2D57A0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  _QWORD v22[4];
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;

  v47 = a1;
  v41 = sub_1DC40721C();
  v39 = *(_QWORD *)(v41 - 8);
  MEMORY[0x1E0C80A78](v41);
  v37 = (char *)v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = sub_1DC407CFC();
  v34 = *(_QWORD *)(v36 - 8);
  MEMORY[0x1E0C80A78](v36);
  v32 = (char *)v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0FE574(0, &qword_1EDB29FD8, MEMORY[0x1E0DB8880]);
  v35 = *(_QWORD *)(v3 - 8);
  v30 = *(_QWORD *)(v35 + 64);
  MEMORY[0x1E0C80A78](v3);
  v33 = (char *)v22 - v4;
  v40 = sub_1DC407FA8();
  v38 = *(_QWORD *)(v40 - 8);
  v5 = *(_QWORD *)(v38 + 64);
  MEMORY[0x1E0C80A78](v40);
  v31 = (char *)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v46 = (char *)v22 - v7;
  sub_1DC0F5AF4();
  v44 = *(_QWORD *)(v8 - 8);
  v45 = v8;
  MEMORY[0x1E0C80A78](v8);
  v43 = (char *)v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = sub_1DC407C84();
  v28 = *(_QWORD *)(v29 - 8);
  MEMORY[0x1E0C80A78](v29);
  v25 = (char *)v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_1DC407BC4();
  v26 = *(_QWORD *)(v27 - 8);
  MEMORY[0x1E0C80A78](v27);
  v24 = (char *)v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_1DC4011BC();
  v22[1] = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  MEMORY[0x1E0C80A78](v12);
  v22[3] = (char *)v22 - v13;
  sub_1DC0F4CCC();
  v22[2] = v14;
  v42 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v15 = type metadata accessor for ForYouFeedModel();
  MEMORY[0x1E0C80A78](v15);
  sub_1DC0FF574(0);
  v17 = v16;
  v18 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)v22 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC404DA4();
  sub_1DC404354();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  v21 = (char *)sub_1DC2D5B38 + 4 * byte_1DC424FB0[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1DC2D5B38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;

  v4 = *(_QWORD *)(v3 - 320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 152) + 32))(v1, v2, v4);
  v5 = *(_QWORD *)(v3 - 312);
  sub_1DC407C18();
  v6 = *(_QWORD *)(v3 - 288);
  sub_1DC407C24();
  sub_1DC407C18();
  sub_1DC401144();
  v7 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 328) + 8);
  v8 = *(_QWORD *)(v3 - 304);
  v7(v0, v8);
  sub_1DC407C30();
  v9 = *(_QWORD *)(v3 - 296);
  sub_1DC407C78();
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v3 - 264) + 8))(v6, *(_QWORD *)(v3 - 256));
  sub_1DC2D5E38(*(_QWORD *)(v3 - 104), v5, v9);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v3 - 280) + 8))(v9, *(_QWORD *)(v3 - 272));
  v7(v5, v8);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 152) + 8))(v1, v4);
}

uint64_t sub_1DC2D5E38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v4 = v3;
  v29 = a3;
  v34 = a2;
  v33 = sub_1DC407BC4();
  v28 = *(_QWORD *)(v33 - 8);
  v30 = *(_QWORD *)(v28 + 64);
  MEMORY[0x1E0C80A78](v33);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = v7;
  v8 = sub_1DC4011BC();
  v32 = *(_QWORD *)(v8 - 8);
  v25 = v8;
  v9 = *(_QWORD *)(v32 + 64);
  MEMORY[0x1E0C80A78](v8);
  v26 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0FE574(0, &qword_1EDB29FD8, MEMORY[0x1E0DB8880]);
  v11 = v10;
  v12 = *(_QWORD *)(v10 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  v14 = MEMORY[0x1E0C80A78](v10);
  v16 = (char *)&v25 - v15;
  v31 = v4[2];
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v12 + 16))((char *)&v25 - v15, a1, v11, v14);
  v17 = v32;
  (*(void (**)(char *, uint64_t, uint64_t))(v32 + 16))((char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v34, v8);
  v18 = v28;
  (*(void (**)(char *, uint64_t, uint64_t))(v28 + 16))(v7, v29, v33);
  v19 = (*(unsigned __int8 *)(v12 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v20 = (v13 + *(unsigned __int8 *)(v17 + 80) + v19) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  v21 = (v9 + v20 + 7) & 0xFFFFFFFFFFFFFFF8;
  v22 = (*(unsigned __int8 *)(v18 + 80) + v21 + 8) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  v23 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v23 + v19, v16, v11);
  (*(void (**)(unint64_t, char *, uint64_t))(v32 + 32))(v23 + v20, v26, v25);
  *(_QWORD *)(v23 + v21) = v4;
  (*(void (**)(unint64_t, char *, uint64_t))(v18 + 32))(v23 + v22, v27, v33);
  swift_retain();
  sub_1DC401828();
  swift_release();
  __swift_project_boxed_opaque_existential_1(v4 + 11, v4[14]);
  sub_1DC400D84();
  __swift_project_boxed_opaque_existential_1(v4 + 27, v4[30]);
  sub_1DC401144();
  sub_1DC40211C();
  return swift_unknownObjectRelease();
}

uint64_t sub_1DC2D60C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t result;
  char v23;
  uint64_t v24;
  uint64_t (*v25)(_QWORD);
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  v3 = v2;
  v60 = a2;
  v58 = a1;
  sub_1DC0FE574(0, &qword_1EDB29FD8, MEMORY[0x1E0DB8880]);
  v59 = v4;
  v50 = *(_QWORD *)(v4 - 8);
  v48 = *(_QWORD *)(v50 + 64);
  MEMORY[0x1E0C80A78](v4);
  v49 = (char *)&v45 - v5;
  v55 = sub_1DC40721C();
  v47 = *(_QWORD *)(v55 - 8);
  MEMORY[0x1E0C80A78](v55);
  v46 = v6;
  v54 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0FF574(0);
  v51 = *(_QWORD *)(v7 - 8);
  v52 = v7;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC2DBF60(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC2DBF7C();
  v14 = *(_QWORD *)(v13 - 8);
  v56 = v13;
  v57 = v14;
  v15 = *(_QWORD *)(v14 + 64);
  MEMORY[0x1E0C80A78](v13);
  v45 = (char *)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v53 = (char *)&v45 - v17;
  v18 = sub_1DC407054();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v21 = (char *)&v45 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v2 + 176), *(_QWORD *)(v2 + 200));
  result = sub_1DC403838();
  if ((result & 1) != 0)
  {
    sub_1DC407204();
    v23 = sub_1DC40703C();
    result = (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v21, v18);
    if ((v23 & 1) != 0)
    {
      sub_1DC404DA4();
      sub_1DC2DA37C((uint64_t)v9, (uint64_t)v12);
      (*(void (**)(char *, uint64_t))(v51 + 8))(v9, v52);
      v24 = v56;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v57 + 48))(v12, 1, v56) == 1)
      {
        v25 = (uint64_t (*)(_QWORD))sub_1DC2DBF60;
        v26 = (uint64_t)v12;
      }
      else
      {
        v27 = *(int *)(v24 + 48);
        v28 = v53;
        v29 = &v53[v27];
        v30 = &v12[v27];
        v31 = sub_1DC4031C0();
        v32 = *(_QWORD *)(v31 - 8);
        (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v28, v12, v31);
        v33 = sub_1DC402ED8();
        v34 = *(_QWORD *)(v33 - 8);
        (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v29, v30, v33);
        v52 = *(_QWORD *)(v3 + 16);
        v35 = v47;
        (*(void (**)(char *, uint64_t, uint64_t))(v47 + 16))(v54, v60, v55);
        v36 = (uint64_t)v45;
        v37 = &v45[*(int *)(v56 + 48)];
        (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v45, v28, v31);
        (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v37, v29, v33);
        v39 = v49;
        v38 = v50;
        v40 = v59;
        (*(void (**)(char *, uint64_t, uint64_t))(v50 + 16))(v49, v58, v59);
        v41 = (*(unsigned __int8 *)(v35 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80);
        v42 = (v46 + *(unsigned __int8 *)(v57 + 80) + v41) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80);
        v43 = (v15 + v42 + *(unsigned __int8 *)(v38 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80);
        v44 = swift_allocObject();
        (*(void (**)(unint64_t, char *, uint64_t))(v35 + 32))(v44 + v41, v54, v55);
        sub_1DC092ED0(v36, v44 + v42, (uint64_t (*)(_QWORD))sub_1DC2DBF7C);
        (*(void (**)(unint64_t, char *, uint64_t))(v38 + 32))(v44 + v43, v39, v40);
        sub_1DC401828();
        swift_release();
        v26 = (uint64_t)v53;
        v25 = (uint64_t (*)(_QWORD))sub_1DC2DBF7C;
      }
      return sub_1DC0926D8(v26, v25);
    }
  }
  return result;
}

uint64_t sub_1DC2D64D0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(uint64_t);
  uint64_t v29;
  void (*v30)(char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v37 = a1;
  v3 = sub_1DC3FFFEC();
  v38 = *(_QWORD *)(v3 - 8);
  v39 = v3;
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC2B962C(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0FE574(0, (unint64_t *)&qword_1EDB29D00, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60]);
  v33 = v9;
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v32 - v11;
  sub_1DC0FE574(0, (unint64_t *)&qword_1EDB2AB80, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790]);
  v14 = v13;
  v15 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v32 - v16;
  v18 = sub_1DC403B08();
  v19 = *(_QWORD *)(v18 - 8);
  v35 = v18;
  v36 = v19;
  MEMORY[0x1E0C80A78](v18);
  v21 = (char *)&v32 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0FE574(0, &qword_1EDB2A440, MEMORY[0x1E0DBA640]);
  v34 = a2;
  sub_1DC405AE8();
  sub_1DC405ADC();
  v22 = sub_1DC405FF8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v8, 1, 1, v22);
  sub_1DC2D4290((uint64_t)v12, (uint64_t)v8);
  sub_1DC0926D8((uint64_t)v8, (uint64_t (*)(_QWORD))sub_1DC2B962C);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v33);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  sub_1DC089DA4(0, (unint64_t *)&qword_1EDB3FE40, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8178], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v23 = sub_1DC401618();
  v24 = *(_QWORD *)(v23 - 8);
  v25 = (*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
  v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_1DC40DC10;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v24 + 104))(v26 + v25, *MEMORY[0x1E0CF8170], v23);
  sub_1DC080808(&qword_1EDB27520, (uint64_t (*)(uint64_t))MEMORY[0x1E0DADF38], MEMORY[0x1E0DADF08]);
  v27 = v35;
  sub_1DC4015C4();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v21, v27);
  sub_1DC40352C();
  v28 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD648];
  sub_1DC405AF4();
  sub_1DC080808(&qword_1EDB29860, v28, MEMORY[0x1E0DAD640]);
  sub_1DC401594();
  v29 = v39;
  v30 = *(void (**)(char *, uint64_t))(v38 + 8);
  v30(v5, v39);
  sub_1DC405AD0();
  sub_1DC4015A0();
  return ((uint64_t (*)(char *, uint64_t))v30)(v5, v29);
}

uint64_t sub_1DC2D6880(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t, uint64_t);
  char *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  void *v28;
  char *v29;
  uint64_t v30;
  id v31;
  id v32;
  id v33;
  char *v34;
  uint64_t v35;
  _QWORD v37[2];
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  uint64_t ObjectType;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _OWORD v55[3];

  v54 = a3;
  v40 = sub_1DC403B2C();
  v39 = *(_QWORD *)(v40 - 8);
  MEMORY[0x1E0C80A78](v40);
  v38 = (char *)v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1DC402FB0();
  v42 = *(_QWORD *)(v5 - 8);
  v43 = v5;
  MEMORY[0x1E0C80A78](v5);
  v41 = (char *)v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1DC403760();
  v8 = *(_QWORD *)(v7 - 8);
  v52 = v7;
  v53 = v8;
  MEMORY[0x1E0C80A78](v7);
  v51 = (char *)v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1DC403544();
  v11 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD670];
  v50 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = a2;
  ObjectType = swift_getObjectType();
  sub_1DC29B210();
  sub_1DC089DA4(0, (unint64_t *)&qword_1EDB3FE40, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8178], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v47 = v14;
  v15 = sub_1DC401618();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(_QWORD *)(v16 + 72);
  v18 = *(unsigned __int8 *)(v16 + 80);
  v19 = (v18 + 32) & ~v18;
  v45 = v18 | 7;
  v46 = v19 + v17;
  v20 = swift_allocObject();
  v44 = xmmword_1DC40DC10;
  *(_OWORD *)(v20 + 16) = xmmword_1DC40DC10;
  v21 = *MEMORY[0x1E0CF8170];
  v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 104);
  v22(v20 + v19, v21, v15);
  sub_1DC080808(&qword_1F034FDD0, v11, MEMORY[0x1E0DAD660]);
  v37[1] = "onDeckViewAction";
  sub_1DC4015C4();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v50 + 8))(v13, v10);
  v23 = v51;
  v24 = v48;
  sub_1DC29B00C(*(void **)(v54 + 168));
  v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = v44;
  v22(v25 + v19, v21, v15);
  sub_1DC080808((unint64_t *)&unk_1EDB298F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD978], MEMORY[0x1E0DAD968]);
  v26 = v52;
  sub_1DC4015C4();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v53 + 8))(v23, v26);
  v27 = objc_msgSend(v24, sel_sourceChannel);
  if (v27)
  {
    v28 = v27;
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v54 + 128), *(_QWORD *)(v54 + 152));
    v29 = v41;
    sub_1DC292AD8(v28);
    sub_1DC080808((unint64_t *)&unk_1EDB29750, (uint64_t (*)(uint64_t))MEMORY[0x1E0DACE70], MEMORY[0x1E0DACE60]);
    v30 = v43;
    sub_1DC401870();
    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v42 + 8))(v29, v30);
  }
  if ((objc_msgSend(v24, sel_respondsToSelector_, sel_parentIssue) & 1) != 0)
  {
    v31 = objc_msgSend(v24, sel_parentIssue);
    if (v31)
    {
      v32 = v31;
      v33 = objc_msgSend(v32, sel_identifier);
      sub_1DC408A4C();

      v34 = v38;
      sub_1DC403B20();
      sub_1DC080808(&qword_1EDB29990, (uint64_t (*)(uint64_t))MEMORY[0x1E0DADF98], MEMORY[0x1E0DADF88]);
      v35 = v40;
      sub_1DC401870();

      (*(void (**)(char *, uint64_t))(v39 + 8))(v34, v35);
    }
  }
  sub_1DC403970();
  sub_1DC080808((unint64_t *)&unk_1F03514A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DADC98], MEMORY[0x1E0DADC90]);
  memset(v55, 0, 32);
  sub_1DC4015DC();
  return sub_1DC0926D8((uint64_t)v55, (uint64_t (*)(_QWORD))sub_1DC0D11C4);
}

void sub_1DC2D6DA0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  _QWORD v17[9];
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;

  sub_1DC0FF574(0);
  v3 = v2;
  v19 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v17[6] = v4;
  v25 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0FE574(0, (unint64_t *)&qword_1EDB2AB80, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790]);
  v26 = *(_QWORD *)(v5 - 8);
  v27 = v5;
  v6 = *(_QWORD *)(v26 + 64);
  MEMORY[0x1E0C80A78](v5);
  v17[8] = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v24 = (char *)v17 - v8;
  v23 = sub_1DC4011BC();
  v18 = *(_QWORD *)(v23 - 8);
  v9 = *(_QWORD *)(v18 + 64);
  MEMORY[0x1E0C80A78](v23);
  v17[5] = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v21 = (char *)v17 - v11;
  sub_1DC0F4CCC();
  v13 = *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64);
  MEMORY[0x1E0C80A78](v12);
  v20 = (char *)v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v15 = type metadata accessor for ForYouFeedModel();
  MEMORY[0x1E0C80A78](v15);
  v22 = v3;
  v17[7] = a1;
  sub_1DC404354();
  v16 = (char *)sub_1DC2D6FB0 + 4 * byte_1DC424FB7[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1DC2D6FB0()
{
  uint64_t v0;

  return sub_1DC0926D8(v0, (uint64_t (*)(_QWORD))type metadata accessor for ForYouFeedModel);
}

uint64_t sub_1DC2D728C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(uint64_t);
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t result;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(uint64_t, uint64_t, uint64_t);
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  id v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  void *v70;
  id v71;
  id v72;
  id v73;
  char *v74;
  uint64_t v75;
  char *v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  void (*v83)(uint64_t);
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  char *v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  void (*v138)(uint64_t);
  uint64_t v139;
  uint64_t v140;
  unint64_t v141;
  unsigned int v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  __int128 v146;
  uint64_t v147;
  _OWORD v148[2];

  v109 = a6;
  v135 = a5;
  v139 = a3;
  v140 = a4;
  v147 = a1;
  v113 = sub_1DC403760();
  v112 = *(_QWORD *)(v113 - 8);
  MEMORY[0x1E0C80A78](v113);
  v111 = (char *)&v88 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103 = sub_1DC4011BC();
  v100 = *(_QWORD *)(v103 - 8);
  MEMORY[0x1E0C80A78](v103);
  v98 = (char *)&v88 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v106 = sub_1DC407C84();
  v105 = *(_QWORD *)(v106 - 8);
  MEMORY[0x1E0C80A78](v106);
  v101 = (char *)&v88 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v104 = sub_1DC407BC4();
  v102 = *(_QWORD *)(v104 - 8);
  MEMORY[0x1E0C80A78](v104);
  v99 = (char *)&v88 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v110 = sub_1DC403A9C();
  v108 = *(_QWORD *)(v110 - 8);
  MEMORY[0x1E0C80A78](v110);
  v107 = (uint64_t)&v88 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v91 = sub_1DC403B2C();
  v90 = *(_QWORD *)(v91 - 8);
  MEMORY[0x1E0C80A78](v91);
  v89 = (char *)&v88 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v94 = sub_1DC402FB0();
  v93 = *(_QWORD *)(v94 - 8);
  MEMORY[0x1E0C80A78](v94);
  v92 = (char *)&v88 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v97 = sub_1DC403598();
  v96 = *(_QWORD *)(v97 - 8);
  MEMORY[0x1E0C80A78](v97);
  v95 = (char *)&v88 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v116 = sub_1DC4033A0();
  v115 = *(_QWORD *)(v116 - 8);
  MEMORY[0x1E0C80A78](v116);
  v114 = (char *)&v88 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC10B21C();
  MEMORY[0x1E0C80A78](v16);
  v133 = (char *)&v88 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0FE574(0, (unint64_t *)&qword_1EDB29D00, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60]);
  v131 = v18;
  v132 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v117 = (char *)&v88 - v19;
  sub_1DC2B962C(0);
  MEMORY[0x1E0C80A78](v20);
  v130 = (char *)&v88 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v120 = sub_1DC403B08();
  v119 = *(_QWORD *)(v120 - 8);
  MEMORY[0x1E0C80A78](v120);
  v118 = (char *)&v88 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_1DC402F5C();
  v144 = *(_QWORD *)(v23 - 8);
  v145 = v23;
  MEMORY[0x1E0C80A78](v23);
  v143 = (char *)&v88 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v123 = sub_1DC403A84();
  v136 = *(_QWORD *)(v123 - 8);
  MEMORY[0x1E0C80A78](v123);
  v127 = (char *)&v88 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v126 = sub_1DC400010();
  v125 = *(_QWORD *)(v126 - 8);
  MEMORY[0x1E0C80A78](v126);
  v122 = (char *)&v88 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v128 = sub_1DC403A78();
  v129 = *(_QWORD *)(v128 - 8);
  MEMORY[0x1E0C80A78](v128);
  v124 = (char *)&v88 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = sub_1DC4032BC();
  v29 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD350];
  v121 = *(_QWORD *)(v28 - 8);
  MEMORY[0x1E0C80A78](v28);
  v31 = (char *)&v88 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v134 = a2;
  sub_1DC401144();
  swift_getObjectType();
  sub_1DC29A9A8((uint64_t)v31);
  swift_unknownObjectRelease();
  sub_1DC089DA4(0, (unint64_t *)&qword_1EDB3FE40, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8178], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v137 = v32;
  v33 = sub_1DC401618();
  v34 = *(_QWORD *)(v33 - 8);
  v35 = *(unsigned __int8 *)(v34 + 80);
  v36 = (v35 + 32) & ~v35;
  v37 = (char *)(v36 + *(_QWORD *)(v34 + 72));
  v38 = v35 | 7;
  v39 = swift_allocObject();
  v146 = xmmword_1DC40DC10;
  *(_OWORD *)(v39 + 16) = xmmword_1DC40DC10;
  v142 = *MEMORY[0x1E0CF8170];
  v138 = *(void (**)(uint64_t))(v34 + 104);
  v138(v39 + v36);
  sub_1DC080808((unint64_t *)&unk_1EDB297F0, v29, MEMORY[0x1E0DAD338]);
  v141 = (unint64_t)"onDeckViewAction";
  sub_1DC4015C4();
  v40 = v38;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v121 + 8))(v31, v28);
  v41 = v122;
  sub_1DC400004();
  sub_1DC3FFFF8();
  (*(void (**)(char *, uint64_t))(v125 + 8))(v41, v126);
  (*(void (**)(char *, _QWORD, uint64_t))(v136 + 104))(v127, *MEMORY[0x1E0DADE38], v123);
  (*(void (**)(char *, _QWORD, uint64_t))(v144 + 104))(v143, *MEMORY[0x1E0DACDC0], v145);
  v42 = v124;
  sub_1DC403A6C();
  v143 = v37;
  v144 = v40;
  v43 = swift_allocObject();
  *(_OWORD *)(v43 + 16) = v146;
  v136 = v36;
  v145 = v33;
  v44 = v33;
  v45 = (uint64_t)v130;
  ((void (*)(uint64_t, _QWORD, uint64_t))v138)(v43 + v36, v142, v44);
  sub_1DC080808((unint64_t *)&unk_1EDB29970, (uint64_t (*)(uint64_t))MEMORY[0x1E0DADE28], MEMORY[0x1E0DADE18]);
  v127 = (char *)0x80000001DC445BA0;
  v46 = v128;
  sub_1DC4015C4();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v129 + 8))(v42, v46);
  v47 = sub_1DC405FF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56))(v45, 1, 1, v47);
  sub_1DC0FF574(0);
  sub_1DC404324();
  sub_1DC0FE574(0, (unint64_t *)&qword_1EDB2AB80, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790]);
  v48 = v133;
  v49 = v131;
  sub_1DC406CC4();
  v50 = v48;
  v51 = v132;
  swift_bridgeObjectRelease();
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v51 + 48))(v48, 1, v49);
  if ((_DWORD)result == 1)
    goto LABEL_17;
  v53 = (uint64_t)v117;
  (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v117, v50, v49);
  v54 = v118;
  sub_1DC2D4290(v53, v45);
  (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v53, v49);
  sub_1DC0926D8(v45, (uint64_t (*)(_QWORD))sub_1DC2B962C);
  v55 = swift_allocObject();
  *(_OWORD *)(v55 + 16) = v146;
  v56 = v136;
  v57 = *MEMORY[0x1E0CF8168];
  v58 = (void (*)(uint64_t, uint64_t, uint64_t))v138;
  ((void (*)(uint64_t, uint64_t, uint64_t))v138)(v55 + v136, v57, v145);
  sub_1DC080808(&qword_1EDB27520, (uint64_t (*)(uint64_t))MEMORY[0x1E0DADF38], MEMORY[0x1E0DADF08]);
  v59 = v120;
  sub_1DC4015C4();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v119 + 8))(v54, v59);
  sub_1DC080808(&qword_1EDB2E058, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedModel, (uint64_t)&unk_1DC42EF38);
  result = sub_1DC406D30();
  if (result < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_14;
  }
  if (result > 0x7FFFFFFF)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v60 = v114;
  sub_1DC403394();
  v61 = swift_allocObject();
  *(_OWORD *)(v61 + 16) = v146;
  v58(v61 + v56, v57, v145);
  sub_1DC080808(&qword_1EDB29820, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD438], MEMORY[0x1E0DAD428]);
  v62 = v116;
  sub_1DC4015C4();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v115 + 8))(v60, v62);
  result = sub_1DC406D3C();
  if (result < (uint64_t)0xFFFFFFFF80000000)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (result > 0x7FFFFFFF)
  {
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
    return result;
  }
  v63 = v95;
  sub_1DC40358C();
  v64 = swift_allocObject();
  *(_OWORD *)(v64 + 16) = v146;
  v58(v64 + v56, v57, v145);
  sub_1DC080808((unint64_t *)&unk_1EDB29880, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD6D0], MEMORY[0x1E0DAD6C0]);
  v65 = v97;
  sub_1DC4015C4();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v96 + 8))(v63, v65);
  v66 = objc_msgSend((id)sub_1DC401144(), sel_sourceChannel);
  swift_unknownObjectRelease();
  if (v66)
  {
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v135 + 128), *(_QWORD *)(v135 + 152));
    v67 = v92;
    sub_1DC292AD8(v66);
    v68 = swift_allocObject();
    *(_OWORD *)(v68 + 16) = v146;
    v58(v68 + v56, v142, v145);
    sub_1DC080808((unint64_t *)&unk_1EDB29750, (uint64_t (*)(uint64_t))MEMORY[0x1E0DACE70], MEMORY[0x1E0DACE60]);
    v69 = v94;
    sub_1DC4015C4();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v93 + 8))(v67, v69);
  }
  v70 = (void *)sub_1DC401144();
  if ((objc_msgSend(v70, sel_respondsToSelector_, sel_parentIssue) & 1) != 0)
  {
    v71 = objc_msgSend(v70, sel_parentIssue);
    swift_unknownObjectRelease();
    if (v71)
    {
      v72 = v71;
      v73 = objc_msgSend(v72, sel_identifier);
      sub_1DC408A4C();

      v74 = v89;
      sub_1DC403B20();
      sub_1DC080808(&qword_1EDB29990, (uint64_t (*)(uint64_t))MEMORY[0x1E0DADF98], MEMORY[0x1E0DADF88]);
      v75 = v91;
      sub_1DC401870();

      (*(void (**)(char *, uint64_t))(v90 + 8))(v74, v75);
    }
  }
  else
  {
    swift_unknownObjectRelease();
  }
  sub_1DC0F4CCC();
  v76 = v101;
  sub_1DC407C24();
  v77 = v98;
  sub_1DC407C18();
  sub_1DC401144();
  (*(void (**)(char *, uint64_t))(v100 + 8))(v77, v103);
  sub_1DC407C30();
  v78 = v99;
  sub_1DC407C78();
  swift_unknownObjectRelease();
  (*(void (**)(char *, uint64_t))(v105 + 8))(v76, v106);
  v79 = v107;
  sub_1DC1D5B68(v107);
  (*(void (**)(char *, uint64_t))(v102 + 8))(v78, v104);
  v80 = swift_allocObject();
  *(_OWORD *)(v80 + 16) = v146;
  v81 = v136;
  v82 = v145;
  v83 = v138;
  ((void (*)(uint64_t, _QWORD, uint64_t))v138)(v80 + v136, v142, v145);
  sub_1DC080808(&qword_1EDB29980, (uint64_t (*)(uint64_t))MEMORY[0x1E0DADE58], MEMORY[0x1E0DADE48]);
  v141 |= 0x8000000000000000;
  v84 = v110;
  sub_1DC4015C4();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v108 + 8))(v79, v84);
  sub_1DC401144();
  swift_getObjectType();
  v85 = v111;
  sub_1DC29B00C(*(void **)(v135 + 168));
  swift_unknownObjectRelease();
  v86 = swift_allocObject();
  *(_OWORD *)(v86 + 16) = v146;
  ((void (*)(uint64_t, _QWORD, uint64_t))v83)(v86 + v81, v142, v82);
  sub_1DC080808((unint64_t *)&unk_1EDB298F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD978], MEMORY[0x1E0DAD968]);
  v87 = v113;
  sub_1DC4015C4();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v112 + 8))(v85, v87);
  sub_1DC4038D4();
  sub_1DC080808((unint64_t *)&unk_1F0351490, (uint64_t (*)(uint64_t))MEMORY[0x1E0DADBB0], MEMORY[0x1E0DADBA8]);
  memset(v148, 0, sizeof(v148));
  sub_1DC4015DC();
  return sub_1DC0926D8((uint64_t)v148, (uint64_t (*)(_QWORD))sub_1DC0D11C4);
}

uint64_t sub_1DC2D8318(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t (*v22)(void);
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  char *v58;
  __int128 v59;
  void (*v60)(uint64_t, uint64_t, uint64_t);
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;

  v66 = a1;
  v2 = sub_1DC403598();
  v50 = *(_QWORD *)(v2 - 8);
  v51 = v2;
  MEMORY[0x1E0C80A78](v2);
  v49 = (char *)&v47 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1DC4033A0();
  v54 = *(_QWORD *)(v4 - 8);
  v55 = v4;
  MEMORY[0x1E0C80A78](v4);
  v53 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC10B21C();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0FE574(0, (unint64_t *)&qword_1EDB29D00, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60]);
  v63 = v9;
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v47 - v11;
  sub_1DC2B962C(0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1DC403B08();
  v57 = *(_QWORD *)(v16 - 8);
  v58 = (char *)v16;
  MEMORY[0x1E0C80A78](v16);
  v56 = (char *)&v47 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0FE574(0, (unint64_t *)&qword_1EDB2AB80, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790]);
  v19 = v18;
  v48 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v21 = (char *)&v47 - v20;
  v67 = v1[8];
  v22 = MEMORY[0x1E0DB80B8];
  sub_1DC0FE574(0, (unint64_t *)&qword_1EDB29EC0, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB80B8]);
  sub_1DC10297C((unint64_t *)&qword_1EDB29EB0, (unint64_t *)&qword_1EDB29EC0, (uint64_t (*)(uint64_t, _QWORD *))v22, MEMORY[0x1E0DB80D0]);
  sub_1DC405050();
  v23 = v63;
  v52 = v1;
  v64 = v1[2];
  v24 = sub_1DC405FF8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v15, 1, 1, v24);
  sub_1DC0FF574(0);
  sub_1DC404324();
  v65 = v19;
  sub_1DC406CC4();
  swift_bridgeObjectRelease();
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v23);
  if ((_DWORD)result == 1)
    goto LABEL_11;
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v23);
  v26 = v56;
  sub_1DC2D4290((uint64_t)v12, (uint64_t)v15);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v23);
  sub_1DC0926D8((uint64_t)v15, (uint64_t (*)(_QWORD))sub_1DC2B962C);
  sub_1DC089DA4(0, (unint64_t *)&qword_1EDB3FE40, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8178], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v28 = v27;
  v29 = sub_1DC401618();
  v30 = *(_QWORD *)(v29 - 8);
  v31 = *(unsigned __int8 *)(v30 + 80);
  v32 = (v31 + 32) & ~v31;
  v62 = v32 + *(_QWORD *)(v30 + 72);
  v63 = v28;
  v61 = v31 | 7;
  v33 = swift_allocObject();
  v59 = xmmword_1DC40DC10;
  *(_OWORD *)(v33 + 16) = xmmword_1DC40DC10;
  v34 = *MEMORY[0x1E0CF8168];
  v60 = *(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 104);
  v60(v33 + v32, v34, v29);
  sub_1DC080808(&qword_1EDB27520, (uint64_t (*)(uint64_t))MEMORY[0x1E0DADF38], MEMORY[0x1E0DADF08]);
  v35 = v58;
  sub_1DC401870();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, char *))(v57 + 8))(v26, v35);
  sub_1DC080808(&qword_1EDB2E058, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedModel, (uint64_t)&unk_1DC42EF38);
  v58 = v21;
  result = sub_1DC406D30();
  if (result < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (result > 0x7FFFFFFF)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v36 = v53;
  sub_1DC403394();
  v37 = swift_allocObject();
  *(_OWORD *)(v37 + 16) = v59;
  v60(v37 + v32, v34, v29);
  sub_1DC080808(&qword_1EDB29820, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD438], MEMORY[0x1E0DAD428]);
  v38 = v55;
  sub_1DC401870();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v54 + 8))(v36, v38);
  v39 = v65;
  v40 = v58;
  result = sub_1DC406D3C();
  if (result >= (uint64_t)0xFFFFFFFF80000000)
  {
    if (result <= 0x7FFFFFFF)
    {
      v41 = v49;
      sub_1DC40358C();
      v42 = swift_allocObject();
      *(_OWORD *)(v42 + 16) = v59;
      v60(v42 + v32, v34, v29);
      sub_1DC080808((unint64_t *)&unk_1EDB29880, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD6D0], MEMORY[0x1E0DAD6C0]);
      v43 = v51;
      v44 = v64;
      sub_1DC401870();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v50 + 8))(v41, v43);
      v45 = v52[6];
      v46 = v52[7];
      __swift_project_boxed_opaque_existential_1(v52 + 3, v45);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v46 + 8))(v44, v45, v46);
      return (*(uint64_t (**)(char *, uint64_t))(v48 + 8))(v40, v39);
    }
    goto LABEL_10;
  }
LABEL_9:
  __break(1u);
LABEL_10:
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1DC2D8958()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  swift_release();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 88);
  __swift_destroy_boxed_opaque_existential_1(v0 + 128);

  __swift_destroy_boxed_opaque_existential_1(v0 + 176);
  __swift_destroy_boxed_opaque_existential_1(v0 + 216);
  __swift_destroy_boxed_opaque_existential_1(v0 + 256);
  __swift_destroy_boxed_opaque_existential_1(v0 + 296);
  sub_1DC0926D8(v0 + OBJC_IVAR____TtC8StocksUI17ForYouFeedTracker_onDeckViewAction, (uint64_t (*)(_QWORD))sub_1DC1324E8);
  return v0;
}

uint64_t sub_1DC2D89E4()
{
  sub_1DC2D8958();
  return swift_deallocClassInstance();
}

uint64_t sub_1DC2D8A08()
{
  return type metadata accessor for ForYouFeedTracker();
}

uint64_t sub_1DC2D8A10()
{
  sub_1DC4037CC();
  sub_1DC080808((unint64_t *)&unk_1F0352D20, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD9F8], MEMORY[0x1E0DAD9F0]);
  return sub_1DC4018A0();
}

uint64_t sub_1DC2D8A74()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v19 = sub_1DC4011BC();
  v1 = *(_QWORD *)(v19 - 8);
  v17 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v2 = v17 + *(_QWORD *)(v1 + 64);
  sub_1DC0FE574(0, (unint64_t *)&qword_1EDB2AB80, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790]);
  v18 = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v14 = (v2 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v5 = *(_QWORD *)(v4 + 64);
  sub_1DC0FF574(0);
  v16 = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v8 = (v14 + v5 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = (*(_QWORD *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_1DC0F4CCC();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = (v9 + *(unsigned __int8 *)(v11 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v15 = v10;
  (*(void (**)(unint64_t, uint64_t))(v1 + 8))(v0 + v17, v19);
  (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v0 + v14, v18);
  (*(void (**)(unint64_t, uint64_t))(v7 + 8))(v0 + v8, v16);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v11 + 8))(v0 + v12, v15);
  return swift_deallocObject();
}

uint64_t sub_1DC2D8BDC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v3 = *(_QWORD *)(sub_1DC4011BC() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = v4 + *(_QWORD *)(v3 + 64);
  sub_1DC0FE574(0, (unint64_t *)&qword_1EDB2AB80, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790]);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = (v5 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v7 + 64);
  sub_1DC0FF574(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = (v8 + v9 + *(unsigned __int8 *)(v11 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v13 = (*(_QWORD *)(v11 + 64) + v12 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_1DC0F4CCC();
  v15 = *(unsigned __int8 *)(*(_QWORD *)(v14 - 8) + 80);
  return sub_1DC2D728C(a1, v1 + v4, v1 + v8, v1 + v12, *(_QWORD *)(v1 + v13), v1 + ((v13 + v15 + 8) & ~v15));
}

uint64_t sub_1DC2D8CB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  void (*v56)(char *, uint64_t);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void (*v66)(_QWORD);
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  char *v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  void **v85;
  uint64_t v86;
  int v87;
  void (*v88)(char *, uint64_t);
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  void (*v92)(uint64_t, uint64_t, uint64_t);
  uint64_t v93;
  void (*v94)(uint64_t, uint64_t);
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  _QWORD *v103;
  uint64_t v104;
  void (*v105)(char *, uint64_t);
  id v106;
  void *v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  unsigned __int8 v111;
  void (*v112)(uint64_t, _QWORD, uint64_t);
  id v113;
  id v114;
  id v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  char v125;
  unsigned int *v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t (*v134)(uint64_t);
  char *v135;
  void (*v136)(char *, uint64_t);
  uint64_t v137;
  uint64_t v138;
  uint64_t result;
  void (*v140)(uint64_t, _QWORD, uint64_t);
  char *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  char v146;
  unsigned int *v147;
  uint64_t v148;
  char *v149;
  uint64_t v150;
  char *v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t (*v154)(uint64_t);
  char *v155;
  void (*v156)(char *, uint64_t);
  uint64_t v157;
  char *v158;
  uint64_t v159;
  uint64_t v160;
  char *v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  char *v168;
  uint64_t v169;
  uint64_t v170;
  char *v171;
  uint64_t v172;
  uint64_t v173;
  char *v174;
  char *v175;
  uint64_t v176;
  uint64_t v177;
  char *v178;
  char *v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  char *v184;
  char *v185;
  char *v186;
  char *v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  char *v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  char *v199;
  uint64_t v200;
  uint64_t v201;
  char *v202;
  uint64_t v203;
  uint64_t v204;
  char *v205;
  uint64_t v206;
  char *v207;
  uint64_t v208;
  char *v209;
  uint64_t ObjectType;
  uint64_t v211;
  void **v212;
  uint64_t v213;
  uint64_t v214;
  void (*v215)(char *, uint64_t);
  void (*v216)(char *, uint64_t);
  uint64_t v217;
  uint64_t v218;
  char *v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  void (*v223)(_QWORD);
  uint64_t v224;
  uint64_t v225;
  __int128 v226;

  v183 = a5;
  v213 = a4;
  v211 = a3;
  v220 = a1;
  v177 = sub_1DC403544();
  v176 = *(_QWORD *)(v177 - 8);
  MEMORY[0x1E0C80A78](v177);
  v175 = (char *)&v158 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v200 = sub_1DC3FFFEC();
  v198 = *(_QWORD *)(v200 - 8);
  MEMORY[0x1E0C80A78](v200);
  v199 = (char *)&v158 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v195 = sub_1DC403184();
  v194 = *(_QWORD *)(v195 - 8);
  MEMORY[0x1E0C80A78](v195);
  v179 = (char *)&v158 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v193 = (char *)&v158 - v10;
  MEMORY[0x1E0C80A78](v11);
  v185 = (char *)&v158 - v12;
  v192 = sub_1DC40124C();
  v191 = *(_QWORD *)(v192 - 8);
  MEMORY[0x1E0C80A78](v192);
  v174 = (char *)&v158 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v184 = (char *)&v158 - v15;
  v197 = sub_1DC403178();
  v196 = *(_QWORD *)(v197 - 8);
  MEMORY[0x1E0C80A78](v197);
  v178 = (char *)&v158 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v186 = (char *)&v158 - v18;
  v182 = sub_1DC403A9C();
  v181 = *(_QWORD *)(v182 - 8);
  MEMORY[0x1E0C80A78](v182);
  v180 = (uint64_t)&v158 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v160 = sub_1DC403B2C();
  v159 = *(_QWORD *)(v160 - 8);
  MEMORY[0x1E0C80A78](v160);
  v158 = (char *)&v158 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v163 = sub_1DC402FB0();
  v162 = *(_QWORD *)(v163 - 8);
  MEMORY[0x1E0C80A78](v163);
  v161 = (char *)&v158 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v173 = sub_1DC4034F0();
  v172 = *(_QWORD *)(v173 - 8);
  MEMORY[0x1E0C80A78](v173);
  v171 = (char *)&v158 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v170 = sub_1DC403760();
  v169 = *(_QWORD *)(v170 - 8);
  MEMORY[0x1E0C80A78](v170);
  v168 = (char *)&v158 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v167 = sub_1DC4032BC();
  v166 = *(_QWORD *)(v167 - 8);
  MEMORY[0x1E0C80A78](v167);
  v165 = (uint64_t)&v158 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v190 = sub_1DC4011BC();
  ObjectType = *(_QWORD *)(v190 - 8);
  MEMORY[0x1E0C80A78](v190);
  v212 = (void **)((char *)&v158 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  v189 = sub_1DC403598();
  v188 = *(_QWORD *)(v189 - 8);
  MEMORY[0x1E0C80A78](v189);
  v187 = (char *)&v158 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v204 = sub_1DC4033A0();
  v203 = *(_QWORD *)(v204 - 8);
  MEMORY[0x1E0C80A78](v204);
  v202 = (char *)&v158 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC10B21C();
  MEMORY[0x1E0C80A78](v28);
  v30 = (char *)&v158 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0FE574(0, (unint64_t *)&qword_1EDB29D00, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60]);
  v225 = *(_QWORD *)(v31 - 8);
  *(_QWORD *)&v226 = v31;
  MEMORY[0x1E0C80A78](v31);
  v33 = (char *)&v158 - v32;
  sub_1DC2B962C(0);
  MEMORY[0x1E0C80A78](v34);
  v36 = (char *)&v158 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0FF574(0);
  v38 = v37;
  v224 = *(_QWORD *)(v37 - 8);
  MEMORY[0x1E0C80A78](v37);
  v209 = (char *)&v158 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v40);
  v42 = (char *)&v158 - v41;
  sub_1DC0FE574(0, (unint64_t *)&qword_1EDB2AB80, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790]);
  v44 = v43;
  v223 = *(void (**)(_QWORD))(v43 - 8);
  MEMORY[0x1E0C80A78](v43);
  v207 = (char *)&v158 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v46);
  v48 = (char *)&v158 - v47;
  v214 = sub_1DC403B08();
  v206 = *(_QWORD *)(v214 - 8);
  MEMORY[0x1E0C80A78](v214);
  v205 = (char *)&v158 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0FE574(0, &qword_1EDB29FD8, MEMORY[0x1E0DB8880]);
  v51 = v50;
  sub_1DC404DBC();
  v218 = a2;
  sub_1DC404DA4();
  v52 = sub_1DC405FF8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 56))(v36, 1, 1, v52);
  sub_1DC404324();
  v208 = v44;
  v53 = v225;
  sub_1DC406CC4();
  v54 = v226;
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48))(v30, 1, v54) == 1)
    goto LABEL_24;
  (*(void (**)(char *, char *, uint64_t))(v53 + 32))(v33, v30, v54);
  v55 = v205;
  sub_1DC2D4290((uint64_t)v33, (uint64_t)v36);
  (*(void (**)(char *, uint64_t))(v53 + 8))(v33, v54);
  sub_1DC0926D8((uint64_t)v36, (uint64_t (*)(_QWORD))sub_1DC2B962C);
  v56 = *(void (**)(char *, uint64_t))(v224 + 8);
  v201 = v38;
  v216 = v56;
  v56(v42, v38);
  v57 = v208;
  v215 = (void (*)(char *, uint64_t))*((_QWORD *)v223 + 1);
  v215(v48, v208);
  sub_1DC089DA4(0, (unint64_t *)&qword_1EDB3FE40, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8178], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v59 = v58;
  v60 = sub_1DC401618();
  v61 = *(_QWORD *)(v60 - 8);
  v62 = *(_QWORD *)(v61 + 72);
  v63 = *(unsigned __int8 *)(v61 + 80);
  v64 = (v63 + 32) & ~v63;
  v221 = v59;
  v222 = v64 + v62;
  v225 = v63 | 7;
  v65 = swift_allocObject();
  v226 = xmmword_1DC40DC10;
  *(_OWORD *)(v65 + 16) = xmmword_1DC40DC10;
  v217 = v64;
  v66 = *(void (**)(_QWORD))(v61 + 104);
  LODWORD(v224) = *MEMORY[0x1E0CF8170];
  v67 = v60;
  v223 = v66;
  v66(v65 + v64);
  sub_1DC080808(&qword_1EDB27520, (uint64_t (*)(uint64_t))MEMORY[0x1E0DADF38], MEMORY[0x1E0DADF08]);
  v219 = "onDeckViewAction";
  v68 = v214;
  sub_1DC4015C4();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v206 + 8))(v55, v68);
  v69 = v207;
  sub_1DC404DBC();
  v70 = v209;
  sub_1DC404DA4();
  sub_1DC080808(&qword_1EDB2E058, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedModel, (uint64_t)&unk_1DC42EF38);
  v71 = v69;
  v72 = sub_1DC406D30();
  if (v72 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_21;
  }
  if (v72 > 0x7FFFFFFF)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v73 = v202;
  sub_1DC403394();
  v74 = v201;
  v216(v70, v201);
  v215(v71, v57);
  v75 = swift_allocObject();
  v214 = v51;
  *(_OWORD *)(v75 + 16) = v226;
  v76 = v67;
  ((void (*)(uint64_t, _QWORD, uint64_t))v223)(v75 + v217, v224, v67);
  sub_1DC080808(&qword_1EDB29820, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD438], MEMORY[0x1E0DAD428]);
  v77 = v204;
  sub_1DC4015C4();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v203 + 8))(v73, v77);
  sub_1DC404DBC();
  sub_1DC404DA4();
  v78 = sub_1DC406D3C();
  if (v78 < (uint64_t)0xFFFFFFFF80000000)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if (v78 > 0x7FFFFFFF)
  {
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v79 = v187;
  sub_1DC40358C();
  v216(v70, v74);
  v215(v71, v57);
  v80 = swift_allocObject();
  *(_OWORD *)(v80 + 16) = v226;
  v81 = v217;
  ((void (*)(uint64_t, _QWORD, uint64_t))v223)(v80 + v217, v224, v76);
  sub_1DC080808((unint64_t *)&unk_1EDB29880, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD6D0], MEMORY[0x1E0DAD6C0]);
  v216 = (void (*)(char *, uint64_t))((unint64_t)v219 | 0x8000000000000000);
  v82 = v189;
  sub_1DC4015C4();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v188 + 8))(v79, v82);
  v83 = v76;
  v84 = ObjectType;
  v85 = v212;
  v86 = v190;
  (*(void (**)(void **, uint64_t, uint64_t))(ObjectType + 16))(v212, v211, v190);
  v87 = (*(uint64_t (**)(void **, uint64_t))(v84 + 88))(v85, v86);
  if (v87 == *MEMORY[0x1E0DAF188])
  {
    (*(void (**)(void **, uint64_t))(v84 + 96))(v85, v86);
    v88 = (void (*)(char *, uint64_t))*v85;
    ObjectType = swift_getObjectType();
    v89 = v165;
    sub_1DC29A9A8(v165);
    v90 = swift_allocObject();
    *(_OWORD *)(v90 + 16) = v226;
    v164 = v83;
    v91 = v83;
    v92 = (void (*)(uint64_t, uint64_t, uint64_t))v223;
    ((void (*)(uint64_t, _QWORD, uint64_t))v223)(v90 + v81, v224, v91);
    sub_1DC080808((unint64_t *)&unk_1EDB297F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD350], MEMORY[0x1E0DAD338]);
    v93 = v167;
    sub_1DC4015C4();
    swift_bridgeObjectRelease();
    v94 = *(void (**)(uint64_t, uint64_t))(v166 + 8);
    v215 = v88;
    v94(v89, v93);
    v95 = v168;
    sub_1DC29B00C(*(void **)(v213 + 168));
    v96 = swift_allocObject();
    *(_OWORD *)(v96 + 16) = v226;
    v97 = v224;
    v98 = v164;
    v92(v96 + v81, v224, v164);
    sub_1DC080808((unint64_t *)&unk_1EDB298F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD978], MEMORY[0x1E0DAD968]);
    v99 = v170;
    sub_1DC4015C4();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v169 + 8))(v95, v99);
    v100 = v171;
    sub_1DC15CA64();
    v101 = swift_allocObject();
    *(_OWORD *)(v101 + 16) = v226;
    v102 = v81;
    v92(v101 + v81, v97, v98);
    v103 = (_QWORD *)v213;
    sub_1DC080808(&qword_1EDB29850, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD5E8], MEMORY[0x1E0DAD5D0]);
    v104 = v173;
    sub_1DC4015C4();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v172 + 8))(v100, v104);
    v105 = v215;
    v106 = objc_msgSend(v215, sel_sourceChannel);
    if (v106)
    {
      v107 = v106;
      __swift_project_boxed_opaque_existential_1(v103 + 16, v103[19]);
      v108 = v161;
      sub_1DC292AD8(v107);
      v109 = swift_allocObject();
      *(_OWORD *)(v109 + 16) = v226;
      ((void (*)(uint64_t, uint64_t, uint64_t))v223)(v109 + v102, v97, v98);
      sub_1DC080808((unint64_t *)&unk_1EDB29750, (uint64_t (*)(uint64_t))MEMORY[0x1E0DACE70], MEMORY[0x1E0DACE60]);
      v110 = v163;
      sub_1DC4015C4();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v162 + 8))(v108, v110);
    }
    v111 = objc_msgSend(v105, sel_respondsToSelector_, sel_parentIssue);
    v112 = (void (*)(uint64_t, _QWORD, uint64_t))v223;
    if ((v111 & 1) != 0)
    {
      v113 = objc_msgSend(v105, sel_parentIssue);
      if (v113)
      {
        v114 = v113;
        v115 = objc_msgSend(v114, sel_identifier);
        sub_1DC408A4C();

        v116 = v158;
        v103 = (_QWORD *)v213;
        sub_1DC403B20();
        sub_1DC080808(&qword_1EDB29990, (uint64_t (*)(uint64_t))MEMORY[0x1E0DADF98], MEMORY[0x1E0DADF88]);
        v117 = v160;
        sub_1DC401870();

        v112 = (void (*)(uint64_t, _QWORD, uint64_t))v223;
        (*(void (**)(char *, uint64_t))(v159 + 8))(v116, v117);
      }
    }
    v118 = v180;
    sub_1DC1D5B68(v180);
    v119 = swift_allocObject();
    *(_OWORD *)(v119 + 16) = v226;
    v120 = v102;
    v121 = v119 + v102;
    v122 = v164;
    v112(v121, v224, v164);
    sub_1DC080808(&qword_1EDB29980, (uint64_t (*)(uint64_t))MEMORY[0x1E0DADE58], MEMORY[0x1E0DADE48]);
    v216 = (void (*)(char *, uint64_t))((unint64_t)v219 | 0x8000000000000000);
    v123 = v182;
    sub_1DC4015C4();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v181 + 8))(v118, v123);
    __swift_project_boxed_opaque_existential_1(v103 + 32, v103[35]);
    v124 = v184;
    sub_1DC400A60();
    v125 = sub_1DC4011D4();
    v126 = (unsigned int *)MEMORY[0x1E0DAD158];
    v127 = v194;
    if ((v125 & 1) == 0)
      v126 = (unsigned int *)MEMORY[0x1E0DAD150];
    v128 = v185;
    v129 = v195;
    (*(void (**)(char *, _QWORD, uint64_t))(v194 + 104))(v185, *v126, v195);
    sub_1DC0B9454();
    v219 = (char *)v212 + *(int *)(v130 + 48);
    (*(void (**)(char *, char *, uint64_t))(v127 + 16))(v193, v128, v129);
    v131 = v186;
    sub_1DC40316C();
    (*(void (**)(char *, uint64_t))(v191 + 8))(v124, v192);
    (*(void (**)(char *, uint64_t))(v127 + 8))(v128, v129);
    v132 = swift_allocObject();
    *(_OWORD *)(v132 + 16) = v226;
    ((void (*)(uint64_t, _QWORD, uint64_t))v223)(v132 + v120, v224, v122);
    sub_1DC080808(&qword_1EDB297C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD148], MEMORY[0x1E0DAD138]);
    v133 = v197;
    sub_1DC4015C4();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v196 + 8))(v131, v133);
    sub_1DC403868();
    v134 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DADAF0];
    v135 = v199;
    sub_1DC404DC8();
    sub_1DC080808(&qword_1EDB29920, v134, MEMORY[0x1E0DADAE8]);
    sub_1DC401594();
    v136 = *(void (**)(char *, uint64_t))(v198 + 8);
    v137 = v200;
    v136(v135, v200);
    sub_1DC404DB0();
    sub_1DC4015A0();
    swift_unknownObjectRelease();
    v136(v135, v137);
    v138 = sub_1DC400898();
    return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v138 - 8) + 8))(v219, v138);
  }
  v140 = (void (*)(uint64_t, _QWORD, uint64_t))v223;
  if (v87 != *MEMORY[0x1E0DAF140])
  {
LABEL_25:
    result = sub_1DC4099DC();
    __break(1u);
    return result;
  }
  (*(void (**)(void **, uint64_t))(ObjectType + 96))(v85, v86);
  v216 = (void (*)(char *, uint64_t))*v85;
  swift_getObjectType();
  v141 = v175;
  sub_1DC29B210();
  v142 = swift_allocObject();
  *(_OWORD *)(v142 + 16) = v226;
  v143 = v83;
  v140(v142 + v217, v224, v83);
  sub_1DC080808(&qword_1F034FDD0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD670], MEMORY[0x1E0DAD660]);
  v144 = v177;
  sub_1DC4015C4();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v176 + 8))(v141, v144);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v213 + 256), *(_QWORD *)(v213 + 280));
  v145 = v174;
  sub_1DC400A60();
  v146 = sub_1DC4011D4();
  v147 = (unsigned int *)MEMORY[0x1E0DAD158];
  v148 = v194;
  if ((v146 & 1) == 0)
    v147 = (unsigned int *)MEMORY[0x1E0DAD150];
  v149 = v179;
  v150 = v195;
  (*(void (**)(char *, _QWORD, uint64_t))(v194 + 104))(v179, *v147, v195);
  (*(void (**)(char *, char *, uint64_t))(v148 + 16))(v193, v149, v150);
  v151 = v178;
  sub_1DC40316C();
  (*(void (**)(char *, uint64_t))(v191 + 8))(v145, v192);
  (*(void (**)(char *, uint64_t))(v148 + 8))(v149, v150);
  v152 = swift_allocObject();
  *(_OWORD *)(v152 + 16) = v226;
  v140(v152 + v217, v224, v143);
  sub_1DC080808(&qword_1EDB297C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD148], MEMORY[0x1E0DAD138]);
  v153 = v197;
  sub_1DC4015C4();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v196 + 8))(v151, v153);
  sub_1DC40391C();
  v154 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DADC10];
  v155 = v199;
  sub_1DC404DC8();
  sub_1DC080808(&qword_1F03514D8, v154, MEMORY[0x1E0DADC08]);
  sub_1DC401594();
  v156 = *(void (**)(char *, uint64_t))(v198 + 8);
  v157 = v200;
  v156(v155, v200);
  sub_1DC404DB0();
  sub_1DC4015A0();
  swift_unknownObjectRelease();
  return ((uint64_t (*)(char *, uint64_t))v156)(v155, v157);
}

void sub_1DC2DA37C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t (*v21)(void);
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char v25;
  void (*v26)(char *, uint64_t);
  uint64_t v27;
  char *v28;
  void *v29;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  double MinY;
  char *v35;
  char *v36;
  uint64_t v37;
  double v38;
  double v39;
  double v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  double v44;
  double v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  CGRect v60;
  CGRect v61;
  CGRect v62;

  v57 = a2;
  v58 = a1;
  v3 = sub_1DC4052FC();
  v48 = *(_QWORD *)(v3 - 8);
  v49 = v3;
  MEMORY[0x1E0C80A78](v3);
  v47 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1DC40595C();
  v51 = *(_QWORD *)(v5 - 8);
  v52 = v5;
  MEMORY[0x1E0C80A78](v5);
  v50 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC2DC1C8();
  v56 = v7;
  v53 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v55 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0FE574(0, (unint64_t *)&qword_1EDB2AB80, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790]);
  v10 = v9;
  v11 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v47 - v12;
  sub_1DC0D8B60(0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1DC400280();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v47 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = v2;
  v59 = *(_QWORD *)(v2 + 64);
  v21 = MEMORY[0x1E0DB80B8];
  sub_1DC0FE574(0, (unint64_t *)&qword_1EDB29EC0, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB80B8]);
  sub_1DC10297C((unint64_t *)&qword_1EDB29EB0, (unint64_t *)&qword_1EDB29EC0, (uint64_t (*)(uint64_t, _QWORD *))v21, MEMORY[0x1E0DB80D0]);
  sub_1DC405050();
  sub_1DC406D24();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
  {
    sub_1DC0926D8((uint64_t)v16, (uint64_t (*)(_QWORD))sub_1DC0D8B60);
LABEL_16:
    sub_1DC2DBF7C();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 56))(v57, 1, 1, v46);
    return;
  }
  (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v20, v16, v17);
  v22 = v54;
  v58 = *(_QWORD *)(v54 + 72);
  v59 = v58;
  sub_1DC10B4F4();
  sub_1DC080808(&qword_1EDB2A200, (uint64_t (*)(uint64_t))sub_1DC10B4F4, MEMORY[0x1E0DB9998]);
  v23 = v55;
  sub_1DC405C5C();
  v24 = v56;
  v25 = sub_1DC404558();
  v26 = *(void (**)(char *, uint64_t))(v53 + 8);
  v26(v23, v24);
  v27 = (uint64_t)v20;
  if ((v25 & 1) == 0
    || (v28 = v50,
        sub_1DC4061CC(),
        v29 = (void *)sub_1DC405950(),
        (*(void (**)(char *, uint64_t))(v51 + 8))(v28, v52),
        !v29))
  {
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v27, v17);
    goto LABEL_16;
  }
  v54 = v27;
  sub_1DC2DB7D8(v22, v27, v29);
  x = v60.origin.x;
  y = v60.origin.y;
  width = v60.size.width;
  height = v60.size.height;
  MinY = CGRectGetMinY(v60);
  v59 = v58;
  v35 = v55;
  sub_1DC405C5C();
  v36 = v47;
  v37 = v56;
  sub_1DC40454C();
  v26(v35, v37);
  sub_1DC4052F0();
  v39 = v38;
  (*(void (**)(char *, uint64_t))(v48 + 8))(v36, v49);
  v40 = round(MinY / v39);
  if ((~*(_QWORD *)&v40 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_18;
  }
  v41 = v57;
  if (v40 <= -2147483650.0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (v40 >= 2147483650.0)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  sub_1DC2DBF7C();
  v43 = v42;
  sub_1DC4031B4();
  v61.origin.x = x;
  v61.origin.y = y;
  v61.size.width = width;
  v61.size.height = height;
  v44 = CGRectGetWidth(v61);
  if ((~*(_QWORD *)&v44 & 0x7FF0000000000000) == 0)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if (v44 <= -2147483650.0)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (v44 >= 2147483650.0)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v62.origin.x = x;
  v62.origin.y = y;
  v62.size.width = width;
  v62.size.height = height;
  v45 = CGRectGetHeight(v62);
  if ((~*(_QWORD *)&v45 & 0x7FF0000000000000) == 0)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v45 > -2147483650.0)
  {
    if (v45 < 2147483650.0)
    {
      sub_1DC402ECC();

      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v54, v17);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v41, 0, 1, v43);
      return;
    }
    goto LABEL_25;
  }
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
}

uint64_t sub_1DC2DA8E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(uint64_t);
  uint64_t v28;
  void (*v29)(char *, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v42 = a4;
  v33 = a3;
  v5 = sub_1DC3FFFEC();
  v43 = *(_QWORD *)(v5 - 8);
  v44 = v5;
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC089DA4(0, &qword_1EDB42940, MEMORY[0x1E0D528C8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v8);
  v37 = (char *)&v31 - v9;
  v10 = sub_1DC403064();
  v11 = *(_QWORD *)(v10 - 8);
  v38 = v10;
  v39 = v11;
  MEMORY[0x1E0C80A78](v10);
  v36 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1DC407054();
  MEMORY[0x1E0C80A78](v13);
  v14 = sub_1DC403A00();
  MEMORY[0x1E0C80A78](v14);
  v15 = sub_1DC402F8C();
  v41 = *(_QWORD *)(v15 - 8);
  v32 = v15;
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_1DC403244();
  v40 = *(_QWORD *)(v18 - 8);
  v34 = v18;
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v31 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = a2;
  sub_1DC4071F8();
  v35 = v20;
  sub_1DC403238();
  sub_1DC407204();
  sub_1DC4039F4();
  sub_1DC402F80();
  sub_1DC4031C0();
  sub_1DC080808((unint64_t *)&unk_1EDB41080, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD1C0], MEMORY[0x1E0DAD1B0]);
  sub_1DC4015C4();
  sub_1DC2DBF7C();
  sub_1DC402ED8();
  sub_1DC080808((unint64_t *)&unk_1EDB41070, (uint64_t (*)(uint64_t))MEMORY[0x1E0DACCF0], MEMORY[0x1E0DACCE0]);
  sub_1DC4015C4();
  sub_1DC080808(&qword_1EDB297E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD260], MEMORY[0x1E0DAD250]);
  sub_1DC4015C4();
  sub_1DC080808((unint64_t *)&unk_1EDB428F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DACE40], MEMORY[0x1E0DACE30]);
  sub_1DC4015C4();
  sub_1DC407210();
  v21 = v36;
  sub_1DC403058();
  sub_1DC089DA4(0, (unint64_t *)&qword_1EDB3FE40, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8178], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v22 = sub_1DC401618();
  v23 = *(_QWORD *)(v22 - 8);
  v24 = (*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
  v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_1DC40DC10;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v23 + 104))(v25 + v24, *MEMORY[0x1E0CF8170], v22);
  sub_1DC080808((unint64_t *)&unk_1EDB42900, (uint64_t (*)(uint64_t))MEMORY[0x1E0DACF50], MEMORY[0x1E0DACF40]);
  v26 = v38;
  sub_1DC4015C4();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v39 + 8))(v21, v26);
  sub_1DC403790();
  v27 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD9B0];
  sub_1DC0FE574(0, &qword_1EDB29FD8, MEMORY[0x1E0DB8880]);
  sub_1DC404DC8();
  sub_1DC080808((unint64_t *)&unk_1EDB42910, v27, MEMORY[0x1E0DAD9A8]);
  sub_1DC401594();
  v28 = v44;
  v29 = *(void (**)(char *, uint64_t))(v43 + 8);
  v29(v7, v44);
  sub_1DC404DB0();
  sub_1DC4015A0();
  v29(v7, v28);
  (*(void (**)(char *, uint64_t))(v41 + 8))(v17, v32);
  return (*(uint64_t (**)(char *, uint64_t))(v40 + 8))(v35, v34);
}

uint64_t sub_1DC2DAE44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t result;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(_QWORD);
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t (*v64)(uint64_t);
  char *v65;
  void (*v66)(char *, uint64_t);
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  char *v86;
  const char *v87;
  void (*v88)(char *, uint64_t);
  void (*v89)(char *, uint64_t);
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  __int128 v94;
  uint64_t v95;
  void (*v96)(_QWORD);
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;

  v71 = a3;
  v98 = a1;
  v77 = sub_1DC3FFFEC();
  v75 = *(_QWORD *)(v77 - 8);
  MEMORY[0x1E0C80A78](v77);
  v76 = (char *)&v68 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = sub_1DC4031FC();
  v73 = *(_QWORD *)(v74 - 8);
  MEMORY[0x1E0C80A78](v74);
  v72 = (char *)&v68 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = sub_1DC403598();
  v69 = *(_QWORD *)(v70 - 8);
  MEMORY[0x1E0C80A78](v70);
  v68 = (char *)&v68 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = sub_1DC4033A0();
  v79 = *(_QWORD *)(v80 - 8);
  MEMORY[0x1E0C80A78](v80);
  v78 = (char *)&v68 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC10B21C();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0FE574(0, (unint64_t *)&qword_1EDB29D00, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60]);
  v97 = v11;
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v68 - v13;
  sub_1DC2B962C(0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v68 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0FF574(0);
  v19 = v18;
  v96 = *(void (**)(_QWORD))(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v86 = (char *)&v68 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v68 - v22;
  sub_1DC0FE574(0, (unint64_t *)&qword_1EDB2AB80, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790]);
  v25 = v24;
  v95 = *(_QWORD *)(v24 - 8);
  MEMORY[0x1E0C80A78](v24);
  v84 = (char *)&v68 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v27);
  v29 = (char *)&v68 - v28;
  v30 = sub_1DC403B08();
  v82 = *(_QWORD *)(v30 - 8);
  v83 = v30;
  MEMORY[0x1E0C80A78](v30);
  v81 = (char *)&v68 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0FE574(0, &qword_1EDB29FD8, MEMORY[0x1E0DB8880]);
  v33 = v32;
  sub_1DC404DBC();
  v93 = a2;
  sub_1DC404DA4();
  v34 = sub_1DC405FF8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v17, 1, 1, v34);
  v99 = v19;
  sub_1DC404324();
  v85 = v25;
  v35 = v97;
  sub_1DC406CC4();
  swift_bridgeObjectRelease();
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v35);
  if ((_DWORD)result == 1)
    goto LABEL_11;
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v35);
  v37 = v81;
  sub_1DC2D4290((uint64_t)v14, (uint64_t)v17);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v35);
  sub_1DC0926D8((uint64_t)v17, (uint64_t (*)(_QWORD))sub_1DC2B962C);
  v89 = (void (*)(char *, uint64_t))*((_QWORD *)v96 + 1);
  v89(v23, v99);
  v38 = v29;
  v39 = v85;
  v88 = *(void (**)(char *, uint64_t))(v95 + 8);
  v88(v38, v85);
  sub_1DC089DA4(0, (unint64_t *)&qword_1EDB3FE40, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8178], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v41 = v40;
  v42 = sub_1DC401618();
  v43 = *(_QWORD *)(v42 - 8);
  v44 = *(_QWORD *)(v43 + 72);
  v45 = *(unsigned __int8 *)(v43 + 80);
  v46 = (v45 + 32) & ~v45;
  v92 = v41;
  v90 = v46 + v44;
  v97 = v45 | 7;
  v47 = swift_allocObject();
  v94 = xmmword_1DC40DC10;
  *(_OWORD *)(v47 + 16) = xmmword_1DC40DC10;
  v91 = v46;
  v48 = *(void (**)(_QWORD))(v43 + 104);
  LODWORD(v95) = *MEMORY[0x1E0CF8170];
  v96 = v48;
  v48(v47 + v46);
  sub_1DC080808(&qword_1EDB27520, (uint64_t (*)(uint64_t))MEMORY[0x1E0DADF38], MEMORY[0x1E0DADF08]);
  v87 = "onDeckViewAction";
  v49 = v83;
  sub_1DC4015C4();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v82 + 8))(v37, v49);
  v50 = v84;
  sub_1DC404DBC();
  v51 = v86;
  sub_1DC404DA4();
  sub_1DC080808(&qword_1EDB2E058, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedModel, (uint64_t)&unk_1DC42EF38);
  result = sub_1DC406D30();
  v52 = v99;
  if (result < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (result > 0x7FFFFFFF)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v53 = v78;
  sub_1DC403394();
  v89(v51, v52);
  v88(v50, v39);
  v54 = swift_allocObject();
  *(_OWORD *)(v54 + 16) = v94;
  v83 = v42;
  ((void (*)(uint64_t, _QWORD, uint64_t))v96)(v54 + v91, v95, v42);
  sub_1DC080808(&qword_1EDB29820, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD438], MEMORY[0x1E0DAD428]);
  v55 = v80;
  sub_1DC4015C4();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v79 + 8))(v53, v55);
  sub_1DC404DBC();
  sub_1DC404DA4();
  result = sub_1DC406D3C();
  if (result >= (uint64_t)0xFFFFFFFF80000000)
  {
    if (result <= 0x7FFFFFFF)
    {
      v82 = v33;
      v56 = v68;
      sub_1DC40358C();
      v89(v51, v99);
      v88(v50, v39);
      v57 = swift_allocObject();
      *(_OWORD *)(v57 + 16) = v94;
      v58 = v91;
      v59 = v83;
      ((void (*)(uint64_t, _QWORD, uint64_t))v96)(v57 + v91, v95, v83);
      sub_1DC080808((unint64_t *)&unk_1EDB29880, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD6D0], MEMORY[0x1E0DAD6C0]);
      v60 = v70;
      sub_1DC4015C4();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v69 + 8))(v56, v60);
      sub_1DC407F90();
      sub_1DC407F9C();
      v61 = v72;
      sub_1DC4031F0();
      v62 = swift_allocObject();
      *(_OWORD *)(v62 + 16) = v94;
      ((void (*)(uint64_t, _QWORD, uint64_t))v96)(v62 + v58, v95, v59);
      sub_1DC080808(&qword_1F03514E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD208], MEMORY[0x1E0DAD1F8]);
      v63 = v74;
      sub_1DC4015C4();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v73 + 8))(v61, v63);
      sub_1DC4037B4();
      v64 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD9D8];
      v65 = v76;
      sub_1DC404DC8();
      sub_1DC080808(&qword_1F03514E8, v64, MEMORY[0x1E0DAD9D0]);
      sub_1DC401594();
      v66 = *(void (**)(char *, uint64_t))(v75 + 8);
      v67 = v77;
      v66(v65, v77);
      sub_1DC404DB0();
      sub_1DC4015A0();
      return ((uint64_t (*)(char *, uint64_t))v66)(v65, v67);
    }
    goto LABEL_10;
  }
LABEL_9:
  __break(1u);
LABEL_10:
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

void sub_1DC2DB7D8(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  CGFloat v24;
  CGFloat v25;
  CGFloat v26;
  CGFloat v27;
  id v28;
  double v29;
  CGFloat v30;
  double v31;
  CGFloat v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  char v40[40];
  _QWORD v41[4];
  char v42;
  CGRect v43;

  v39 = a3;
  v37 = a2;
  v4 = sub_1DC407B04();
  v35 = *(_QWORD *)(v4 - 8);
  v36 = v4;
  MEMORY[0x1E0C80A78](v4);
  v34 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = type metadata accessor for ForYouFeedLayoutModel();
  MEMORY[0x1E0C80A78](v38);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v33 - v9;
  sub_1DC0FF434();
  v12 = v11;
  v13 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC2DC1C8();
  v17 = v16;
  v18 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v33 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41[0] = *(_QWORD *)(a1 + 72);
  sub_1DC10B4F4();
  sub_1DC080808(&qword_1EDB2A200, (uint64_t (*)(uint64_t))sub_1DC10B4F4, MEMORY[0x1E0DB9998]);
  sub_1DC405C5C();
  sub_1DC40457C();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  sub_1DC404DE0();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  sub_1DC0990BC((uint64_t)v10, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for ForYouFeedLayoutModel);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1DC0926D8((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for ForYouFeedLayoutModel);
    sub_1DC0926D8((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for ForYouFeedLayoutModel);
LABEL_4:
    objc_msgSend(v39, sel_frame);
    return;
  }
  v22 = v35;
  v21 = v36;
  v23 = v34;
  (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v34, v7, v36);
  sub_1DC407AF8();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v23, v21);
  sub_1DC0926D8((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for ForYouFeedLayoutModel);
  sub_1DC092ED0((uint64_t)v40, (uint64_t)v41, (uint64_t (*)(_QWORD))sub_1DC1B95C8);
  if ((v42 & 1) != 0)
    goto LABEL_4;
  v24 = *(double *)v41;
  v25 = *(double *)&v41[1];
  v26 = *(double *)&v41[2];
  v27 = *(double *)&v41[3];
  v28 = v39;
  objc_msgSend(v39, sel_frame);
  v30 = v29;
  objc_msgSend(v28, sel_frame);
  v32 = v31;
  v43.origin.x = v24;
  v43.origin.y = v25;
  v43.size.width = v26;
  v43.size.height = v27;
  CGRectOffset(v43, v30, v32);
}

uint64_t sub_1DC2DBAD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1DC1324E8(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC2DBB18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v1 = sub_1DC405B30();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = sub_1DC403718();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (v4 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);
  return swift_deallocObject();
}

uint64_t sub_1DC2DBBE0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(sub_1DC405B30() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = *(unsigned __int8 *)(*(_QWORD *)(sub_1DC403718() - 8) + 80);
  return sub_1DC2D5158(a1, v1 + v4, *(_QWORD *)(v1 + v5), v1 + ((v5 + v6 + 8) & ~v6));
}

uint64_t sub_1DC2DBC58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;

  sub_1DC0FE574(0, &qword_1EDB29FD8, MEMORY[0x1E0DB8880]);
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v3 + 64);
  v6 = sub_1DC407FA8();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = (v4 + v5 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v0 + v4, v2);
  (*(void (**)(unint64_t, uint64_t))(v7 + 8))(v0 + v8, v6);
  return swift_deallocObject();
}

uint64_t sub_1DC2DBD1C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_1DC0FE574(0, &qword_1EDB29FD8, MEMORY[0x1E0DB8880]);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v4 + 64);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(sub_1DC407FA8() - 8) + 80);
  return sub_1DC2DAE44(a1, v1 + v5, v1 + ((v5 + v6 + v7) & ~v7));
}

uint64_t sub_1DC2DBD94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1DC0FE574(0, &qword_1EDB29FD8, MEMORY[0x1E0DB8880]);
  v14 = v1;
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v13 = sub_1DC4011BC();
  v5 = *(_QWORD *)(v13 - 8);
  v6 = (v3 + v4 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = (*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  v8 = sub_1DC407BC4();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = (v7 + *(unsigned __int8 *)(v9 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v12 = v8;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v14);
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + v6, v13);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v9 + 8))(v0 + v10, v12);
  return swift_deallocObject();
}

uint64_t sub_1DC2DBEAC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;

  sub_1DC0FE574(0, &qword_1EDB29FD8, MEMORY[0x1E0DB8880]);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v4 + 64);
  v7 = *(_QWORD *)(sub_1DC4011BC() - 8);
  v8 = (v5 + v6 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = (*(_QWORD *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  v10 = *(unsigned __int8 *)(*(_QWORD *)(sub_1DC407BC4() - 8) + 80);
  return sub_1DC2D8CB4(a1, v1 + v5, v1 + v8, *(_QWORD *)(v1 + v9), v1 + ((v9 + v10 + 8) & ~v10));
}

void sub_1DC2DBF60(uint64_t a1)
{
  sub_1DC089DA4(a1, &qword_1EDB42800, (uint64_t (*)(uint64_t))sub_1DC2DBF7C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

void sub_1DC2DBF7C()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EDB427C0)
  {
    sub_1DC4031C0();
    sub_1DC402ED8();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EDB427C0);
  }
}

uint64_t sub_1DC2DBFEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v17;

  v1 = sub_1DC40721C();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  sub_1DC2DBF7C();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  v8 = (v3 + v4 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = v8 + *(_QWORD *)(v7 + 64);
  sub_1DC0FE574(0, &qword_1EDB29FD8, MEMORY[0x1E0DB8880]);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = (v9 + *(unsigned __int8 *)(v11 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v17 = v10;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  v13 = sub_1DC4031C0();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v0 + v8, v13);
  v14 = v0 + v8 + *(int *)(v6 + 48);
  v15 = sub_1DC402ED8();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14, v15);
  (*(void (**)(unint64_t, uint64_t))(v11 + 8))(v0 + v12, v17);
  return swift_deallocObject();
}

uint64_t sub_1DC2DC124(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = *(_QWORD *)(sub_1DC40721C() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v3 + 64);
  sub_1DC2DBF7C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = (v4 + v5 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = v8 + *(_QWORD *)(v7 + 64);
  sub_1DC0FE574(0, &qword_1EDB29FD8, MEMORY[0x1E0DB8880]);
  v11 = *(unsigned __int8 *)(*(_QWORD *)(v10 - 8) + 80);
  return sub_1DC2DA8E0(a1, v1 + v4, v1 + v8, v1 + ((v9 + v11) & ~v11));
}

void sub_1DC2DC1C8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB29CB8)
  {
    type metadata accessor for ForYouFeedLayoutSectionDescriptor(255);
    type metadata accessor for ForYouFeedLayoutModel();
    sub_1DC080808(&qword_1EDB3BAD0, type metadata accessor for ForYouFeedLayoutSectionDescriptor, (uint64_t)&unk_1DC42E4F8);
    sub_1DC080808((unint64_t *)&unk_1EDB32A60, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedLayoutModel, (uint64_t)&unk_1DC430440);
    v0 = sub_1DC404570();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB29CB8);
  }
}

uint64_t sub_1DC2DC290@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v9 = sub_1DC400F7C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC092F50(0, (unint64_t *)&unk_1EDB28B30, (void (*)(uint64_t))MEMORY[0x1E0CB1470]);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v28 - v14;
  v16 = v4 + OBJC_IVAR____TtC8StocksUI33StockChartCalloutViewModelFactory_chart;
  swift_beginAccess();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v16, 1, v9))
  {
    v17 = sub_1DC400220();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v15, 1, 1, v17);
LABEL_4:
    sub_1DC092F14((uint64_t)v15, (unint64_t *)&unk_1EDB28B30, (void (*)(uint64_t))MEMORY[0x1E0CB1470]);
    v20 = type metadata accessor for StockChartRangeCalloutViewModel(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(a4, 1, 1, v20);
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v16, v9);
  sub_1DC400EEC();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  v18 = sub_1DC400220();
  v19 = *(_QWORD *)(v18 - 8);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v15, 0, 1, v18);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v15, 1, v18) == 1)
    goto LABEL_4;
  sub_1DC092F14((uint64_t)v15, (unint64_t *)&unk_1EDB28B30, (void (*)(uint64_t))MEMORY[0x1E0CB1470]);
  sub_1DC14DB74();
  v23 = v22;
  v24 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16);
  v24(a4, a1, v22);
  v25 = type metadata accessor for StockChartRangeCalloutViewModel(0);
  v24(a4 + *(int *)(v25 + 20), a2, v23);
  v26 = a4 + *(int *)(v25 + 24);
  v27 = sub_1DC4002BC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v26, a3, v27);
  sub_1DC400214();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(a4, 0, 1, v25);
}

uint64_t sub_1DC2DC514()
{
  uint64_t v0;

  sub_1DC092F14(v0 + OBJC_IVAR____TtC8StocksUI33StockChartCalloutViewModelFactory_chart, (unint64_t *)&unk_1EDB28D90, (void (*)(uint64_t))MEMORY[0x1E0DAEFA8]);
  return swift_deallocClassInstance();
}

uint64_t sub_1DC2DC554()
{
  return type metadata accessor for StockChartCalloutViewModelFactory();
}

uint64_t type metadata accessor for StockChartCalloutViewModelFactory()
{
  uint64_t result;

  result = qword_1EDB3BD00;
  if (!qword_1EDB3BD00)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1DC2DC598()
{
  unint64_t v0;

  sub_1DC092F50(319, (unint64_t *)&unk_1EDB28D90, (void (*)(uint64_t))MEMORY[0x1E0DAEFA8]);
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

double sub_1DC2DC614@<D0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  void *v16;
  uint64_t v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  double v38;
  uint64_t v39;
  CGFloat v40;
  double v41;
  double v42;
  CGFloat v43;
  double v44;
  CGFloat v45;
  double v46;
  double v47;
  double v48;
  double v49;
  double v50;
  uint64_t v51;
  uint64_t v52;
  double v53;
  CGFloat Width;
  double result;
  CGFloat MinY;
  CGFloat MinX;
  CGFloat MaxY;
  double v59;
  CGFloat v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  CGFloat v64;
  double v65;
  CGFloat v66;
  uint64_t v67;
  double v68;
  double v69;
  uint64_t v70;
  CGFloat v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  CGRect v75;
  CGRect v76;
  CGRect v77;
  CGRect v78;
  CGRect v79;
  CGRect v80;

  sub_1DC405230();
  v6 = v5;
  sub_1DC405230();
  v8 = v7;
  if (v6 > 990.0)
  {
    sub_1DC405224();
    v10 = v8 - v9;
    sub_1DC405224();
    v12 = v10 - v11;
    sub_1DC4051F4();
    v14 = v13;
    sub_1DC4051F4();
    v8 = v12 + v14 + v15;
  }
  v16 = (void *)sub_1DC40529C();
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 40));
  v17 = sub_1DC1E2280();
  sub_1DC3971BC(v17, (uint64_t)&v70, v8);
  swift_bridgeObjectRelease();
  sub_1DC405230();
  v68 = 0.0;
  if (v18 > 990.0)
  {
    sub_1DC405224();
    v20 = v19;
    sub_1DC4051F4();
    v68 = v20 - v21;
  }
  sub_1DC405230();
  v23 = v22;
  sub_1DC405230();
  v69 = v24;
  if (v23 > 990.0)
  {
    sub_1DC405224();
    v26 = v69 - v25;
    sub_1DC405224();
    v28 = v26 - v27;
    sub_1DC4051F4();
    v30 = v29;
    sub_1DC4051F4();
    v69 = v28 + v30 + v31;
  }
  v75.size.height = v71;
  v66 = v71;
  v67 = v70;
  v75.origin.y = 0.0;
  v75.origin.x = v68;
  v75.size.width = v69;
  v32 = CGRectGetMaxY(v75) + 0.0;
  sub_1DC4052F0();
  v34 = v33;
  sub_1DC405224();
  v36 = v34 - v35;
  sub_1DC405224();
  v38 = v36 - v37;
  v39 = type metadata accessor for StockChartViewLayoutOptions();
  if ((*(_BYTE *)(a1 + *(int *)(v39 + 24) + 8) & 1) != 0)
  {
    v40 = *(double *)(a1 + *(int *)(v39 + 20));
  }
  else
  {
    sub_1DC4018F4();
    v40 = v41;
  }
  sub_1DC405224();
  v43 = v42;
  sub_1DC405224();
  v45 = v44;
  v59 = v44;
  v76.origin.x = v43;
  v76.origin.y = v32;
  v76.size.width = v38;
  v76.size.height = v40;
  v60 = CGRectGetMaxY(v76) + 5.0;
  sub_1DC4052F0();
  v47 = v46;
  sub_1DC405224();
  v49 = v47 - v48;
  sub_1DC405224();
  v64 = v49 - v50;
  sub_1DC4052F0();
  v63 = v51;
  v77.size.height = 15.0;
  v77.origin.x = v45;
  v77.origin.y = v60;
  v77.size.width = v64;
  MaxY = CGRectGetMaxY(v77);
  sub_1DC405218();
  v61 = v73;
  v62 = v72;
  v52 = v74;
  v65 = 1.0 / v53;
  swift_bridgeObjectRetain();
  v78.origin.x = v43;
  v78.origin.y = v32;
  v78.size.width = v38;
  v78.size.height = v40;
  MinX = CGRectGetMinX(v78);
  v79.origin.y = 0.0;
  v79.origin.x = v68;
  v79.size.width = v69;
  v79.size.height = v66;
  MinY = CGRectGetMinY(v79);
  v80.origin.x = v43;
  v80.origin.y = v32;
  v80.size.width = v38;
  v80.size.height = v40;
  Width = CGRectGetWidth(v80);

  sub_1DC2DC9B4((uint64_t)&v70);
  *(_QWORD *)a2 = 0;
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = v63;
  *(CGFloat *)(a2 + 24) = MaxY;
  *(CGFloat *)(a2 + 32) = v43;
  *(double *)(a2 + 40) = v32;
  *(double *)(a2 + 48) = v38;
  *(CGFloat *)(a2 + 56) = v40;
  *(double *)(a2 + 64) = v59;
  *(CGFloat *)(a2 + 72) = v60;
  *(CGFloat *)(a2 + 80) = v64;
  *(_QWORD *)(a2 + 88) = 0x402E000000000000;
  *(double *)(a2 + 96) = v68;
  *(_QWORD *)(a2 + 104) = 0;
  *(double *)(a2 + 112) = v69;
  *(CGFloat *)(a2 + 120) = v66;
  *(_QWORD *)(a2 + 128) = v67;
  *(CGFloat *)(a2 + 136) = v66;
  *(_QWORD *)(a2 + 144) = v62;
  *(_QWORD *)(a2 + 152) = v61;
  *(_QWORD *)(a2 + 160) = v52;
  *(CGFloat *)(a2 + 168) = MinX;
  *(CGFloat *)(a2 + 176) = MinY;
  result = v65;
  *(CGFloat *)(a2 + 184) = Width;
  *(double *)(a2 + 192) = v65;
  return result;
}

uint64_t type metadata accessor for StockChartViewLayoutAttributesFactory()
{
  return objc_opt_self();
}

uint64_t sub_1DC2DC9B4(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1DC2DC9DC(uint64_t a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v21 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v21 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    v8 = *(_OWORD *)(a2 + 5);
    *(_OWORD *)(a1 + 40) = v8;
    v9 = v8;
    v10 = **(void (***)(uint64_t, uint64_t, uint64_t))(v8 - 8);
    swift_bridgeObjectRetain();
    v10(a1 + 16, (uint64_t)(a2 + 2), v9);
    v11 = a3[6];
    v12 = a1 + v11;
    v13 = (uint64_t)a2 + v11;
    v14 = sub_1DC400514();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
    v15 = a3[7];
    v16 = *(_OWORD *)((char *)a2 + v15 + 24);
    *(_OWORD *)(a1 + v15 + 24) = v16;
    (**(void (***)(void))(v16 - 8))();
    v17 = a3[8];
    v18 = *(_OWORD *)((char *)a2 + v17 + 24);
    *(_OWORD *)(a1 + v17 + 24) = v18;
    (**(void (***)(void))(v18 - 8))();
    v19 = a3[9];
    v20 = *(_OWORD *)((char *)a2 + v19 + 24);
    *(_OWORD *)(a1 + v19 + 24) = v20;
    (**(void (***)(void))(v20 - 8))();
  }
  return a1;
}

uint64_t sub_1DC2DCB18(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 16);
  v4 = a1 + a2[6];
  v5 = sub_1DC400514();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  __swift_destroy_boxed_opaque_existential_1(a1 + a2[7]);
  __swift_destroy_boxed_opaque_existential_1(a1 + a2[8]);
  return __swift_destroy_boxed_opaque_existential_1(a1 + a2[9]);
}

uint64_t sub_1DC2DCB94(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  __int128 v20;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  v7 = a2 + 16;
  v8 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 40) = v8;
  v9 = v8;
  v10 = **(void (***)(uint64_t, uint64_t, uint64_t))(v8 - 8);
  swift_bridgeObjectRetain();
  v10(a1 + 16, v7, v9);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = sub_1DC400514();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = *(_OWORD *)(a2 + v15 + 24);
  *(_OWORD *)(a1 + v15 + 24) = v16;
  (**(void (***)(void))(v16 - 8))();
  v17 = a3[8];
  v18 = *(_OWORD *)(a2 + v17 + 24);
  *(_OWORD *)(a1 + v17 + 24) = v18;
  (**(void (***)(void))(v18 - 8))();
  v19 = a3[9];
  v20 = *(_OWORD *)(a2 + v19 + 24);
  *(_OWORD *)(a1 + v19 + 24) = v20;
  (**(void (***)(void))(v20 - 8))();
  return a1;
}

_QWORD *sub_1DC2DCCA4(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __swift_assign_boxed_opaque_existential_1(a1 + 2, a2 + 2);
  v6 = a3[6];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1DC400514();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  __swift_assign_boxed_opaque_existential_1((_QWORD *)((char *)a1 + a3[7]), (_QWORD *)((char *)a2 + a3[7]));
  __swift_assign_boxed_opaque_existential_1((_QWORD *)((char *)a1 + a3[8]), (_QWORD *)((char *)a2 + a3[8]));
  __swift_assign_boxed_opaque_existential_1((_QWORD *)((char *)a1 + a3[9]), (_QWORD *)((char *)a2 + a3[9]));
  return a1;
}

uint64_t sub_1DC2DCD64(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v7 = a3[6];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1DC400514();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[7];
  v12 = a3[8];
  v13 = a1 + v11;
  v14 = a2 + v11;
  *(_QWORD *)(v13 + 32) = *(_QWORD *)(v14 + 32);
  v15 = *(_OWORD *)(v14 + 16);
  *(_OWORD *)v13 = *(_OWORD *)v14;
  *(_OWORD *)(v13 + 16) = v15;
  v16 = a1 + v12;
  v17 = a2 + v12;
  *(_QWORD *)(v16 + 32) = *(_QWORD *)(v17 + 32);
  v18 = *(_OWORD *)(v17 + 16);
  *(_OWORD *)v16 = *(_OWORD *)v17;
  *(_OWORD *)(v16 + 16) = v18;
  v19 = a3[9];
  v20 = a1 + v19;
  v21 = a2 + v19;
  v22 = *(_OWORD *)(v21 + 16);
  *(_OWORD *)v20 = *(_OWORD *)v21;
  *(_OWORD *)(v20 + 16) = v22;
  *(_QWORD *)(v20 + 32) = *(_QWORD *)(v21 + 32);
  return a1;
}

uint64_t sub_1DC2DCE30(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 16);
  v7 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v8 = a3[6];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_1DC400514();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  v12 = a3[7];
  v13 = a1 + v12;
  v14 = a2 + v12;
  __swift_destroy_boxed_opaque_existential_1(a1 + v12);
  v15 = *(_OWORD *)(v14 + 16);
  *(_OWORD *)v13 = *(_OWORD *)v14;
  *(_OWORD *)(v13 + 16) = v15;
  *(_QWORD *)(v13 + 32) = *(_QWORD *)(v14 + 32);
  v16 = a3[8];
  v17 = a1 + v16;
  v18 = a2 + v16;
  __swift_destroy_boxed_opaque_existential_1(a1 + v16);
  v19 = *(_OWORD *)(v18 + 16);
  *(_OWORD *)v17 = *(_OWORD *)v18;
  *(_OWORD *)(v17 + 16) = v19;
  *(_QWORD *)(v17 + 32) = *(_QWORD *)(v18 + 32);
  v20 = a3[9];
  v21 = a1 + v20;
  v22 = a2 + v20;
  __swift_destroy_boxed_opaque_existential_1(a1 + v20);
  v23 = *(_OWORD *)(v22 + 16);
  *(_OWORD *)v21 = *(_OWORD *)v22;
  *(_OWORD *)(v21 + 16) = v23;
  *(_QWORD *)(v21 + 32) = *(_QWORD *)(v22 + 32);
  return a1;
}

uint64_t sub_1DC2DCF28()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC2DCF34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1DC400514();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t sub_1DC2DCFB0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC2DCFBC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_1DC400514();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for StockListPriceDataUpdateBlueprintModifier()
{
  uint64_t result;

  result = qword_1EDB3E618;
  if (!qword_1EDB3E618)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1DC2DD06C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1DC400514();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1DC2DD0EC(uint64_t a1, void (*a2)(char *), uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t (*v50)(void);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __n128 v55;
  uint64_t v56;
  void (*v57)(__n128);
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  void (*v73)(uint64_t *, _QWORD);
  uint64_t v74;
  void (*v75)(char *);
  char *v76;
  char *v77;
  char *v78;
  uint64_t (*v79)(void);
  uint64_t v80;
  uint64_t *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  int64_t v86;
  uint64_t v87;
  unint64_t v88;
  uint64_t v89;
  void (*v90)(char *, unint64_t, uint64_t);
  uint64_t *v91;
  uint64_t v92;
  unint64_t v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  void (*v97)(uint64_t *, _QWORD);
  uint64_t v98;
  char *v99;
  char *v100;
  int EnumCaseMultiPayload;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t (*v106)(_QWORD);
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  void (*v110)(char *, uint64_t, uint64_t);
  char *v111;
  unint64_t v112;
  unint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t updated;
  uint64_t v119;
  _QWORD *v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  unint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  void (*v132)(char *, char *, uint64_t);
  char isUniquelyReferenced_nonNull_native;
  unint64_t v134;
  unint64_t v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  void (*v141)(char *, uint64_t);
  uint64_t result;
  char *v143;
  uint64_t v144;
  _QWORD v145[2];
  char *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  void (*v150)(char *);
  char *v151;
  uint64_t *v152;
  char *v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  char *v157;
  char *v158;
  uint64_t v159;
  uint64_t v160;
  char *v161;
  uint64_t v162;
  uint64_t v163;
  char *v164;
  char *v165;
  uint64_t v166;
  char *v167;
  uint64_t v168;
  unint64_t v169;
  void (*v170)(char *, uint64_t);
  uint64_t v171;
  __int128 v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  char *v176;
  uint64_t v177;
  void (*v178)(__n128);
  char *v179;
  char *v180;
  uint64_t v181;
  char *v182;
  uint64_t v183;
  char *v184;
  char *v185;
  char *v186;
  char *v187;
  uint64_t v188;
  uint64_t v189;
  char *v190;
  uint64_t v191;
  void (*v192)(char *, uint64_t, uint64_t);
  char *v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  char *v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  __int128 v204;
  uint64_t v205;
  uint64_t v206;
  char v207;
  uint64_t v208;
  __int128 v209;
  uint64_t v210;
  uint64_t v211;
  char v212;

  v149 = a3;
  v150 = a2;
  sub_1DC0CC0A4(0, &qword_1EDB2A280, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB9A28]);
  v148 = v4;
  v147 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v146 = (char *)v145 - v5;
  sub_1DC0DA430();
  MEMORY[0x1E0C80A78](v6);
  v165 = (char *)v145 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC132790();
  MEMORY[0x1E0C80A78](v8);
  v164 = (char *)v145 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v163 = sub_1DC400970();
  v162 = *(_QWORD *)(v163 - 8);
  MEMORY[0x1E0C80A78](v163);
  v161 = (char *)v145 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v160 = sub_1DC40124C();
  v159 = *(_QWORD *)(v160 - 8);
  MEMORY[0x1E0C80A78](v160);
  v158 = (char *)v145 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC2AFBA4();
  v195 = *(_QWORD *)(v12 - 8);
  v196 = v12;
  MEMORY[0x1E0C80A78](v12);
  v152 = (_QWORD *)((char *)v145 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = type metadata accessor for StockListStockModel(0);
  MEMORY[0x1E0C80A78](v14);
  v183 = (uint64_t)v145 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v191 = type metadata accessor for StockListModel(0);
  MEMORY[0x1E0C80A78](v191);
  v151 = (char *)v145 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v199 = (uint64_t)v145 - v18;
  MEMORY[0x1E0C80A78](v19);
  v157 = (char *)v145 - v20;
  sub_1DC10B384(0);
  MEMORY[0x1E0C80A78](v21);
  v188 = (uint64_t)v145 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC104530();
  MEMORY[0x1E0C80A78](v23);
  v187 = (char *)v145 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v202 = sub_1DC4010E4();
  v198 = *(_QWORD *)(v202 - 8);
  MEMORY[0x1E0C80A78](v202);
  v186 = (char *)v145 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v26);
  v184 = (char *)v145 - v27;
  sub_1DC0F8190();
  v194 = v28;
  v201 = *(_QWORD *)(v28 - 8);
  MEMORY[0x1E0C80A78](v28);
  v153 = (char *)v145 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v30);
  v200 = (char *)v145 - v31;
  MEMORY[0x1E0C80A78](v32);
  v185 = (char *)v145 - v33;
  sub_1DC108DCC();
  v156 = v34;
  MEMORY[0x1E0C80A78](v34);
  v190 = (char *)v145 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0CC0A4(0, (unint64_t *)&qword_1EDB29D98, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60]);
  v37 = v36;
  v197 = *(_QWORD *)(v36 - 8);
  MEMORY[0x1E0C80A78](v36);
  v193 = (char *)v145 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v39);
  v182 = (char *)v145 - v40;
  MEMORY[0x1E0C80A78](v41);
  v180 = (char *)v145 - v42;
  sub_1DC11258C();
  v44 = v43;
  MEMORY[0x1E0C80A78](v43);
  v46 = (char *)v145 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v47);
  v49 = (char *)v145 - v48;
  v50 = MEMORY[0x1E0DBC790];
  sub_1DC0CC0A4(0, (unint64_t *)&qword_1EDB2AB40, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790]);
  v52 = v51;
  v181 = *(_QWORD *)(v51 - 8);
  MEMORY[0x1E0C80A78](v51);
  v179 = (char *)v145 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = MEMORY[0x1E0C80A78](v54);
  v57 = *(void (**)(__n128))(v56 + 16);
  v167 = (char *)v145 - v58;
  v57(v55);
  v178 = v57;
  ((void (*)(char *, uint64_t, uint64_t))v57)(v46, a1, v52);
  v59 = sub_1DC0D4244((unint64_t *)&unk_1EDB2AB30, (unint64_t *)&qword_1EDB2AB40, (uint64_t (*)(uint64_t, _QWORD *))v50, MEMORY[0x1E0DBC7C8]);
  v145[1] = a1;
  v60 = v52;
  v61 = v37;
  sub_1DC408E90();
  *(_QWORD *)&v46[*(int *)(v44 + 36)] = v208;
  v62 = (uint64_t)v46;
  v63 = (uint64_t)v49;
  sub_1DC092ED0(v62, (uint64_t)v49, (uint64_t (*)(_QWORD))sub_1DC11258C);
  v64 = &v49[*(int *)(v44 + 36)];
  v65 = *(_QWORD *)v64;
  sub_1DC408ED8();
  if (v65 != v208)
  {
    v175 = 0;
    v189 = v37;
    v155 = v60;
    v154 = v63;
    v177 = v59;
    v176 = v64;
    do
    {
      v73 = (void (*)(uint64_t *, _QWORD))sub_1DC408EF0();
      v74 = v197;
      v75 = *(void (**)(char *))(v197 + 16);
      v76 = v180;
      v75(v180);
      v73(&v208, 0);
      v77 = v179;
      ((void (*)(char *, uint64_t, uint64_t))v178)(v179, v63, v60);
      sub_1DC408EE4();
      (*(void (**)(char *, uint64_t))(v181 + 8))(v77, v60);
      v78 = v182;
      (*(void (**)(char *, char *, uint64_t))(v74 + 32))(v182, v76, v61);
      sub_1DC4046FC();
      if (v212)
      {
        if (v212 == 1)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        (*(void (**)(char *, uint64_t))(v197 + 8))(v78, v61);
        v71 = v176;
      }
      else
      {
        v172 = v209;
        v173 = v210;
        v174 = v211;
        v171 = v208;
        v192 = (void (*)(char *, uint64_t, uint64_t))v75;
        ((void (*)(char *, char *, uint64_t))v75)(v193, v78, v61);
        v79 = MEMORY[0x1E0DB7B60];
        sub_1DC0D4244((unint64_t *)&unk_1EDB29D80, (unint64_t *)&qword_1EDB29D98, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60], MEMORY[0x1E0DB7B90]);
        v80 = (uint64_t)v190;
        sub_1DC408BF0();
        v81 = (uint64_t *)(v80 + *(int *)(v156 + 36));
        sub_1DC0D4244(&qword_1EDB29D90, (unint64_t *)&qword_1EDB29D98, (uint64_t (*)(uint64_t, _QWORD *))v79, MEMORY[0x1E0DB7B98]);
        v82 = *v81;
        sub_1DC408ED8();
        v83 = (uint64_t)v157;
        v84 = v194;
        v85 = MEMORY[0x1E0DEE9D8];
        if (v82 != v203)
        {
          do
          {
            v96 = v80;
            v97 = (void (*)(uint64_t *, _QWORD))sub_1DC408EF0();
            v98 = v201;
            v99 = v185;
            (*(void (**)(char *))(v201 + 16))(v185);
            v97(&v203, 0);
            v100 = v193;
            v192(v193, v96, v61);
            sub_1DC408EE4();
            (*(void (**)(char *, uint64_t))(v197 + 8))(v100, v61);
            (*(void (**)(char *, char *, uint64_t))(v98 + 32))(v200, v99, v84);
            sub_1DC404354();
            sub_1DC0990BC(v83, v199, type metadata accessor for StockListModel);
            EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
            if (EnumCaseMultiPayload)
            {
              v102 = v188;
              if (EnumCaseMultiPayload == 1)
                sub_1DC0926D8(v199, type metadata accessor for StockListModel);
              v103 = type metadata accessor for StockViewModel();
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v103 - 8) + 56))(v102, 1, 1, v103);
            }
            else
            {
              v104 = v183;
              sub_1DC092ED0(v199, v183, type metadata accessor for StockListStockModel);
              v102 = v188;
              sub_1DC0990BC(v104, v188, (uint64_t (*)(_QWORD))type metadata accessor for StockViewModel);
              sub_1DC0926D8(v104, type metadata accessor for StockListStockModel);
              v103 = type metadata accessor for StockViewModel();
              (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v103 - 8) + 56))(v102, 0, 1, v103);
            }
            sub_1DC0926D8(v83, type metadata accessor for StockListModel);
            type metadata accessor for StockViewModel();
            v105 = 1;
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v103 - 8) + 48))(v102, 1, v103) == 1)
            {
              v106 = (uint64_t (*)(_QWORD))sub_1DC10B384;
              v107 = (uint64_t)v187;
              v108 = v202;
              v109 = v198;
            }
            else
            {
              v109 = v198;
              v107 = (uint64_t)v187;
              v108 = v202;
              (*(void (**)(char *, uint64_t, uint64_t))(v198 + 16))(v187, v102, v202);
              v105 = 0;
              v106 = (uint64_t (*)(_QWORD))type metadata accessor for StockViewModel;
            }
            sub_1DC0926D8(v102, v106);
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v109 + 56))(v107, v105, 1, v108);
            v84 = v194;
            (*(void (**)(char *, uint64_t))(v201 + 8))(v200, v194);
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v109 + 48))(v107, 1, v108) == 1)
            {
              sub_1DC0926D8(v107, (uint64_t (*)(_QWORD))sub_1DC104530);
            }
            else
            {
              v110 = *(void (**)(char *, uint64_t, uint64_t))(v109 + 32);
              v111 = v184;
              v110(v184, v107, v108);
              v110(v186, (uint64_t)v111, v108);
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                v85 = sub_1DC0BA930(0, *(_QWORD *)(v85 + 16) + 1, 1, v85);
              v113 = *(_QWORD *)(v85 + 16);
              v112 = *(_QWORD *)(v85 + 24);
              if (v113 >= v112 >> 1)
                v85 = sub_1DC0BA930(v112 > 1, v113 + 1, 1, v85);
              *(_QWORD *)(v85 + 16) = v113 + 1;
              v110((char *)(v85+ ((*(unsigned __int8 *)(v198 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v198 + 80))+ *(_QWORD *)(v198 + 72) * v113), (uint64_t)v186, v108);
            }
            v95 = *v81;
            v80 = (uint64_t)v190;
            v61 = v189;
            sub_1DC408ED8();
          }
          while (v95 != v203);
        }
        sub_1DC0926D8(v80, (uint64_t (*)(_QWORD))sub_1DC108DCC);
        v86 = *(_QWORD *)(v85 + 16);
        if (v86)
        {
          v203 = MEMORY[0x1E0DEE9D8];
          sub_1DC2AE750(0, v86, 0);
          v87 = v203;
          v88 = v85 + ((*(unsigned __int8 *)(v198 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v198 + 80));
          v89 = *(_QWORD *)(v198 + 72);
          v90 = *(void (**)(char *, unint64_t, uint64_t))(v198 + 16);
          v91 = v152;
          do
          {
            v90((char *)v91 + *(int *)(v196 + 48), v88, v202);
            *v91 = sub_1DC4010B4();
            v91[1] = v92;
            v203 = v87;
            v94 = *(_QWORD *)(v87 + 16);
            v93 = *(_QWORD *)(v87 + 24);
            if (v94 >= v93 >> 1)
            {
              sub_1DC2AE750(v93 > 1, v94 + 1, 1);
              v87 = v203;
            }
            *(_QWORD *)(v87 + 16) = v94 + 1;
            sub_1DC092ED0((uint64_t)v91, v87+ ((*(unsigned __int8 *)(v195 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v195 + 80))+ *(_QWORD *)(v195 + 72) * v94, (uint64_t (*)(_QWORD))sub_1DC2AFBA4);
            v88 += v89;
            --v86;
          }
          while (v86);
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_bridgeObjectRelease();
          v87 = MEMORY[0x1E0DEE9D8];
        }
        v114 = v175;
        if (*(_QWORD *)(v87 + 16))
        {
          sub_1DC2DFB94();
          v115 = sub_1DC409874();
        }
        else
        {
          v115 = MEMORY[0x1E0DEE9E0];
        }
        v203 = v115;
        v116 = swift_bridgeObjectRetain();
        sub_1DC2DFBF8(v116, 1, &v203);
        if (v114)
        {
          result = swift_unexpectedError();
          __break(1u);
          return result;
        }
        swift_bridgeObjectRelease();
        v117 = v203;
        updated = type metadata accessor for StockListPriceDataUpdateBlueprintModifier();
        v119 = v166;
        v120 = (_QWORD *)(v166 + *(int *)(updated + 28));
        __swift_project_boxed_opaque_existential_1(v120, v120[3]);
        v121 = v158;
        sub_1DC400A60();
        v122 = sub_1DC401228();
        v170 = *(void (**)(char *, uint64_t))(v159 + 8);
        v123 = v160;
        v170(v121, v160);
        swift_retain();
        v169 = sub_1DC2E00A4(v122, v117);
        v175 = 0;
        swift_bridgeObjectRelease();
        swift_release_n();
        sub_1DC0824D4(v119 + *(int *)(updated + 32), (uint64_t)&v203);
        v168 = v206;
        __swift_project_boxed_opaque_existential_1(&v203, v205);
        __swift_project_boxed_opaque_existential_1(v120, v120[3]);
        sub_1DC400A60();
        v124 = v161;
        sub_1DC401240();
        v170(v121, v123);
        v125 = sub_1DC400E08();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v162 + 8))(v124, v163);
        v126 = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v203);
        MEMORY[0x1E0C80A78](v126);
        v143 = v182;
        v144 = v119;
        v127 = v175;
        v128 = sub_1DC13DD50((void (*)(_QWORD))sub_1DC2E0348, (uint64_t)&v145[-4], v125);
        swift_bridgeObjectRelease();
        v129 = *(_QWORD *)(v128 + 16);
        v175 = v127;
        if (v129)
        {
          v130 = v194;
          v60 = v155;
          v61 = v189;
          v131 = v182;
          v71 = v176;
          v132 = (void (*)(char *, char *, uint64_t))v192;
        }
        else
        {
          swift_storeEnumTagMultiPayload();
          sub_1DC080808(&qword_1EDB2D860, type metadata accessor for StockListModel, (uint64_t)&unk_1DC41C258);
          sub_1DC404348();
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v130 = v194;
          v60 = v155;
          v61 = v189;
          v71 = v176;
          v132 = (void (*)(char *, char *, uint64_t))v192;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            v128 = sub_1DC1668E0(0, *(_QWORD *)(v128 + 16) + 1, 1, v128);
          v131 = v182;
          v135 = *(_QWORD *)(v128 + 16);
          v134 = *(_QWORD *)(v128 + 24);
          if (v135 >= v134 >> 1)
            v128 = sub_1DC1668E0(v134 > 1, v135 + 1, 1, v128);
          *(_QWORD *)(v128 + 16) = v135 + 1;
          (*(void (**)(unint64_t, char *, uint64_t))(v201 + 32))(v128+ ((*(unsigned __int8 *)(v201 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v201 + 80))+ *(_QWORD *)(v201 + 72) * v135, v153, v130);
        }
        v203 = v171;
        v204 = v172;
        v205 = v173;
        v206 = v174;
        v207 = 0;
        v136 = sub_1DC080808(&qword_1EDB29BD8, (uint64_t (*)(uint64_t))sub_1DC0F8190, MEMORY[0x1E0DB6F08]);
        v137 = sub_1DC080808(&qword_1EDB29BD0, (uint64_t (*)(uint64_t))sub_1DC0F8190, MEMORY[0x1E0DB6EF8]);
        MEMORY[0x1DF0C311C](v128, v130, v136, v137);
        sub_1DC0D75BC();
        sub_1DC080808(&qword_1EDB2D860, type metadata accessor for StockListModel, (uint64_t)&unk_1DC41C258);
        v138 = v193;
        sub_1DC4046F0();
        v139 = (uint64_t)v165;
        v132(v165, v131, v61);
        v140 = v197;
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v197 + 56))(v139, 0, 1, v61);
        sub_1DC406C58();
        sub_1DC0926D8(v139, (uint64_t (*)(_QWORD))sub_1DC0DA430);
        v141 = *(void (**)(char *, uint64_t))(v140 + 8);
        v141(v138, v61);
        v141(v131, v61);
        v63 = v154;
      }
      v72 = *(_QWORD *)v71;
      sub_1DC408ED8();
    }
    while (v72 != v208);
  }
  sub_1DC0926D8(v63, (uint64_t (*)(_QWORD))sub_1DC11258C);
  sub_1DC119B9C();
  sub_1DC0D75BC();
  v66 = sub_1DC080808(&qword_1EDB2D860, type metadata accessor for StockListModel, (uint64_t)&unk_1DC41C258);
  v67 = v167;
  sub_1DC404F24();
  __swift_project_boxed_opaque_existential_1(&v208, v210);
  if ((sub_1DC404990() & 1) != 0)
  {
    v68 = v147;
    v69 = v146;
    v70 = v148;
    (*(void (**)(char *, _QWORD, uint64_t))(v147 + 104))(v146, *MEMORY[0x1E0DB9A20], v148);
  }
  else
  {
    v143 = (char *)v66;
    v69 = v146;
    sub_1DC405548();
    v70 = v148;
    v68 = v147;
  }
  v150(v69);
  (*(void (**)(char *, uint64_t))(v68 + 8))(v69, v70);
  (*(void (**)(char *, uint64_t))(v181 + 8))(v67, v60);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v208);
}

uint64_t sub_1DC2DE504@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  NSObject *v48;
  os_log_type_t v49;
  uint8_t *v50;
  uint64_t v51;
  char *v52;
  void (*v53)(char *, char *, uint64_t);
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  int EnumCaseMultiPayload;
  void (*v67)(_QWORD, _QWORD, _QWORD);
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  int *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  int *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  void (*v82)(char *, uint64_t, uint64_t);
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t *v100;
  void (*v102)(char *, uint64_t, uint64_t, uint64_t);
  void (*v103)(char *, char *, uint64_t);
  uint64_t updated;
  char *v105;
  char *v106;
  uint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  void (**v122)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;

  v135 = a3;
  v137 = a2;
  v138 = a4;
  v117 = sub_1DC40124C();
  v116 = *(_QWORD *)(v117 - 8);
  MEMORY[0x1E0C80A78](v117);
  v115 = (char *)&v102 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1DC4011C8();
  MEMORY[0x1E0C80A78](v6);
  v111 = (char *)&v102 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for PriceViewModel();
  MEMORY[0x1E0C80A78](v8);
  v113 = (uint64_t)&v102 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v110 = sub_1DC4008EC();
  v126 = *(_QWORD *)(v110 - 8);
  MEMORY[0x1E0C80A78](v110);
  v124 = (char *)&v102 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v132 = sub_1DC4010E4();
  v125 = *(_QWORD *)(v132 - 8);
  MEMORY[0x1E0C80A78](v132);
  v131 = (char *)&v102 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0FF558(0);
  MEMORY[0x1E0C80A78](v12);
  v123 = (uint64_t)&v102 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v128 = (uint64_t)&v102 - v15;
  v114 = type metadata accessor for StockListStockModel(0);
  MEMORY[0x1E0C80A78](v114);
  v118 = (uint64_t)&v102 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC10B384(0);
  MEMORY[0x1E0C80A78](v17);
  v122 = (void (**)(uint64_t, _QWORD, uint64_t, uint64_t))((char *)&v102 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  v133 = type metadata accessor for StockListModel(0);
  MEMORY[0x1E0C80A78](v133);
  v112 = (uint64_t)&v102 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v119 = (uint64_t)&v102 - v21;
  MEMORY[0x1E0C80A78](v22);
  v121 = (char *)&v102 - v23;
  v129 = type metadata accessor for StockViewModel();
  v120 = *(_QWORD *)(v129 - 8);
  MEMORY[0x1E0C80A78](v129);
  v25 = (char *)&v102 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v26);
  v109 = (char *)&v102 - v27;
  MEMORY[0x1E0C80A78](v28);
  v127 = (uint64_t)&v102 - v29;
  sub_1DC0FED34(0);
  MEMORY[0x1E0C80A78](v30);
  v107 = (uint64_t)&v102 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v32);
  v108 = (char *)&v102 - v33;
  MEMORY[0x1E0C80A78](v34);
  v36 = (char *)&v102 - v35;
  v136 = sub_1DC401030();
  v134 = *(_QWORD *)(v136 - 8);
  MEMORY[0x1E0C80A78](v136);
  v130 = (char *)&v102 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0ED4AC(0);
  MEMORY[0x1E0C80A78](v38);
  v40 = (char *)&v102 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0F8190();
  v42 = v41;
  v43 = *(_QWORD *)(v41 - 8);
  MEMORY[0x1E0C80A78](v41);
  v45 = (char *)&v102 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC40103C();
  sub_1DC0CC0A4(0, (unint64_t *)&qword_1EDB29D98, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60]);
  sub_1DC4047BC();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v40, 1, v42) == 1)
  {
    v46 = v42;
    sub_1DC0926D8((uint64_t)v40, (uint64_t (*)(_QWORD))sub_1DC0ED4AC);
    if (qword_1EDB273E0 != -1)
      swift_once();
    v47 = sub_1DC403F64();
    __swift_project_value_buffer(v47, (uint64_t)qword_1EDB5DDE8);
    v48 = sub_1DC403F4C();
    v49 = sub_1DC408FC8();
    if (os_log_type_enabled(v48, v49))
    {
      v50 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v50 = 0;
      _os_log_impl(&dword_1DC07D000, v48, v49, "Invalid StockListBlueprint in PriceUpdate", v50, 2u);
      MEMORY[0x1DF0CAC88](v50, -1, -1);
    }

    v51 = 1;
    v52 = v138;
  }
  else
  {
    v105 = v25;
    v137 = v43;
    v53 = *(void (**)(char *, char *, uint64_t))(v43 + 32);
    v54 = v45;
    v53(v45, v40, v42);
    updated = type metadata accessor for StockListPriceDataUpdateBlueprintModifier();
    v55 = sub_1DC400508();
    v106 = a1;
    v56 = sub_1DC4010B4();
    v46 = v42;
    if (*(_QWORD *)(v55 + 16) && (v58 = sub_1DC0ED368(v56, v57), (v59 & 1) != 0))
    {
      v60 = v134;
      v61 = v136;
      (*(void (**)(char *, unint64_t, uint64_t))(v134 + 16))(v36, *(_QWORD *)(v55 + 56) + *(_QWORD *)(v134 + 72) * v58, v136);
      v62 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v60 + 56);
      v62(v36, 0, 1, v61);
    }
    else
    {
      v60 = v134;
      v62 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v134 + 56);
      v61 = v136;
      v62(v36, 1, 1, v136);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v60 + 48))(v36, 1, v61) == 1)
    {
      sub_1DC0926D8((uint64_t)v36, (uint64_t (*)(_QWORD))sub_1DC0FED34);
      v52 = v138;
    }
    else
    {
      v102 = v62;
      v63 = (uint64_t)v130;
      (*(void (**)(char *, char *, uint64_t))(v60 + 32))(v130, v36, v61);
      v64 = (uint64_t)v121;
      sub_1DC404354();
      v65 = v119;
      sub_1DC0990BC(v64, v119, type metadata accessor for StockListModel);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      v103 = v53;
      if (EnumCaseMultiPayload)
      {
        v67 = (void (*)(_QWORD, _QWORD, _QWORD))v122;
        if (EnumCaseMultiPayload == 1)
          sub_1DC0926D8(v65, type metadata accessor for StockListModel);
        v68 = 1;
      }
      else
      {
        v69 = v65;
        v70 = v118;
        sub_1DC092ED0(v69, v118, type metadata accessor for StockListStockModel);
        v67 = (void (*)(_QWORD, _QWORD, _QWORD))v122;
        sub_1DC0990BC(v70, (uint64_t)v122, (uint64_t (*)(_QWORD))type metadata accessor for StockViewModel);
        sub_1DC0926D8(v70, type metadata accessor for StockListStockModel);
        v68 = 0;
      }
      v71 = v106;
      v72 = (int *)v129;
      v73 = v120;
      (*(void (**)(void (*)(_QWORD, _QWORD, _QWORD), uint64_t, uint64_t, uint64_t))(v120 + 56))(v67, v68, 1, v129);
      sub_1DC0926D8(v64, type metadata accessor for StockListModel);
      if ((*(unsigned int (**)(_QWORD, uint64_t, int *))(v73 + 48))(v67, 1, v72) != 1)
      {
        v74 = (uint64_t)v67;
        v75 = v127;
        sub_1DC092ED0(v74, v127, (uint64_t (*)(_QWORD))type metadata accessor for StockViewModel);
        v76 = v128;
        sub_1DC2DF108(v135, v71, v63, v75, v128);
        v77 = v72;
        v122 = *(void (***)(uint64_t, _QWORD, uint64_t, uint64_t))(v125 + 16);
        v129 = (uint64_t)v54;
        ((void (*)(char *, char *, uint64_t))v122)(v131, v71, v132);
        v78 = (uint64_t)v108;
        v79 = v136;
        (*(void (**)(char *, uint64_t, uint64_t))(v60 + 16))(v108, v63, v136);
        v102((char *)v78, 0, 1, v79);
        sub_1DC0990BC(v76, v123, (uint64_t (*)(_QWORD))sub_1DC0FF558);
        v80 = v75;
        v81 = v75 + v72[8];
        v82 = *(void (**)(char *, uint64_t, uint64_t))(v126 + 16);
        v83 = v124;
        v84 = v110;
        v82(v124, v81, v110);
        LODWORD(v121) = *(unsigned __int8 *)(v80 + v72[9]);
        v85 = (uint64_t)v109;
        ((void (*)(char *, char *, uint64_t))v122)(v109, v131, v132);
        sub_1DC0990BC(v78, v85 + v72[5], (uint64_t (*)(_QWORD))sub_1DC0FED34);
        v86 = v123;
        sub_1DC0990BC(v123, v85 + v72[6], (uint64_t (*)(_QWORD))sub_1DC0FF558);
        v82((char *)(v85 + v72[8]), (uint64_t)v83, v84);
        *(_BYTE *)(v85 + v72[9]) = (_BYTE)v121;
        v87 = v46;
        v88 = v107;
        sub_1DC0990BC(v78, v107, (uint64_t (*)(_QWORD))sub_1DC0FED34);
        v89 = v111;
        sub_1DC401078();
        v90 = v113;
        v91 = v88;
        v46 = v87;
        sub_1DC0FE8A4(v91, v89, 9666786, 0xA300000000000000, v113);
        (*(void (**)(char *, uint64_t))(v126 + 8))(v124, v84);
        sub_1DC0926D8(v86, (uint64_t (*)(_QWORD))sub_1DC0FF558);
        sub_1DC0926D8(v78, (uint64_t (*)(_QWORD))sub_1DC0FED34);
        (*(void (**)(char *, uint64_t))(v125 + 8))(v131, v132);
        sub_1DC092ED0(v90, v85 + v77[7], (uint64_t (*)(_QWORD))type metadata accessor for PriceViewModel);
        v92 = (uint64_t)v105;
        sub_1DC0990BC(v85, (uint64_t)v105, (uint64_t (*)(_QWORD))type metadata accessor for StockViewModel);
        v93 = (_QWORD *)(v135 + *(int *)(updated + 28));
        __swift_project_boxed_opaque_existential_1(v93, v93[3]);
        LOBYTE(v89) = sub_1DC400B14();
        __swift_project_boxed_opaque_existential_1(v93, v93[3]);
        v94 = v115;
        sub_1DC400A60();
        v95 = sub_1DC4011E0();
        v97 = v96;
        (*(void (**)(char *, uint64_t))(v116 + 8))(v94, v117);
        v98 = v118;
        sub_1DC092ED0(v92, v118, (uint64_t (*)(_QWORD))type metadata accessor for StockViewModel);
        v99 = v114;
        *(_BYTE *)(v98 + *(int *)(v114 + 20)) = v89 & 1;
        v100 = (uint64_t *)(v98 + *(int *)(v99 + 24));
        *v100 = v95;
        v100[1] = v97;
        sub_1DC0990BC(v98, v112, type metadata accessor for StockListStockModel);
        swift_storeEnumTagMultiPayload();
        sub_1DC080808(&qword_1EDB2D860, type metadata accessor for StockListModel, (uint64_t)&unk_1DC41C258);
        v52 = v138;
        sub_1DC404348();
        sub_1DC0926D8(v98, type metadata accessor for StockListStockModel);
        sub_1DC0926D8(v85, (uint64_t (*)(_QWORD))type metadata accessor for StockViewModel);
        sub_1DC0926D8(v128, (uint64_t (*)(_QWORD))sub_1DC0FF558);
        sub_1DC0926D8(v127, (uint64_t (*)(_QWORD))type metadata accessor for StockViewModel);
        (*(void (**)(char *, uint64_t))(v134 + 8))(v130, v136);
        v43 = v137;
        (*(void (**)(uint64_t, uint64_t))(v137 + 8))(v129, v46);
        v51 = 0;
        return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v43 + 56))(v52, v51, 1, v46);
      }
      (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v63, v136);
      sub_1DC0926D8((uint64_t)v67, (uint64_t (*)(_QWORD))sub_1DC10B384);
      v52 = v138;
      v53 = v103;
    }
    v53(v52, v54, v46);
    v51 = 0;
    v43 = v137;
  }
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v43 + 56))(v52, v51, 1, v46);
}

uint64_t sub_1DC2DF108@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  char v65;
  char *v66;
  char *v67;
  char *v68;
  void (*v69)(char *, char *, uint64_t);
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void (*v74)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void (*v79)(uint64_t, char *, uint64_t);
  char *v80;
  uint64_t v81;
  uint64_t v82;
  NSObject *v83;
  os_log_type_t v84;
  uint8_t *v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  uint64_t v90;
  char *v91;
  char *v92;
  char *v93;
  int v94;
  uint64_t v95;
  char v96;
  char v97;
  uint64_t v98;
  int *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  char *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  int v110;
  uint64_t v111;
  char v112;
  char v113;
  uint64_t v114;
  int *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  void (*v119)(char *, char *, uint64_t);
  char *v120;
  char *v121;
  char *v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  char *v126;
  char *v127;
  uint64_t v128;
  char *v129;
  void (*v130)(uint64_t, char *, uint64_t);
  char *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;

  v132 = a4;
  v137 = a3;
  v138 = a5;
  v130 = (void (*)(uint64_t, char *, uint64_t))sub_1DC4010E4();
  v133 = *((_QWORD *)v130 - 1);
  MEMORY[0x1E0C80A78](v130);
  v129 = (char *)&v118 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v123 = type metadata accessor for StockSparklineViewModel.CacheModel(0);
  MEMORY[0x1E0C80A78](v123);
  v124 = (char *)&v118 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0FF558(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v118 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0FED34(0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v118 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC2E0360(0);
  MEMORY[0x1E0C80A78](v15);
  v125 = (uint64_t)&v118 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v128 = (uint64_t)&v118 - v18;
  v19 = sub_1DC408614();
  v135 = *(_QWORD *)(v19 - 8);
  v136 = v19;
  MEMORY[0x1E0C80A78](v19);
  v120 = (char *)&v118 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v127 = (char *)&v118 - v22;
  MEMORY[0x1E0C80A78](v23);
  v121 = (char *)&v118 - v24;
  sub_1DC19DD20(0);
  MEMORY[0x1E0C80A78](v25);
  v27 = (char *)&v118 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = sub_1DC400F7C();
  v29 = *(_QWORD *)(v28 - 8);
  MEMORY[0x1E0C80A78](v28);
  v122 = (char *)&v118 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v31);
  v131 = (char *)&v118 - v32;
  MEMORY[0x1E0C80A78](v33);
  v126 = (char *)&v118 - v34;
  MEMORY[0x1E0C80A78](v35);
  v37 = (char *)&v118 - v36;
  type metadata accessor for StockListPriceDataUpdateBlueprintModifier();
  v134 = a1;
  v38 = sub_1DC4004F0();
  v39 = a2;
  v40 = sub_1DC4010B4();
  if (*(_QWORD *)(v38 + 16) && (v42 = sub_1DC0ED368(v40, v41), (v43 & 1) != 0))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v29 + 16))(v27, *(_QWORD *)(v38 + 56) + *(_QWORD *)(v29 + 72) * v42, v28);
    v44 = 0;
  }
  else
  {
    v44 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v29 + 56))(v27, v44, 1, v28);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28) == 1)
  {
    sub_1DC0926D8((uint64_t)v27, (uint64_t (*)(_QWORD))sub_1DC19DD20);
    v45 = a2;
  }
  else
  {
    v119 = *(void (**)(char *, char *, uint64_t))(v29 + 32);
    v119(v37, v27, v28);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v134 + 16), *(_QWORD *)(v134 + 40));
    v46 = sub_1DC401030();
    v47 = *(_QWORD *)(v46 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v47 + 16))(v14, v137, v46);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v14, 0, 1, v46);
    v48 = v128;
    v49 = (uint64_t)v14;
    v50 = v39;
    v51 = (uint64_t)v14;
    v52 = v50;
    sub_1DC0EE14C((uint64_t)v37, v49, v50, v128, 0.02);
    v53 = (char *)v51;
    sub_1DC0926D8(v51, (uint64_t (*)(_QWORD))sub_1DC0FED34);
    v55 = v135;
    v54 = v136;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v135 + 48))(v48, 1, v136) != 1)
    {
      v90 = v48;
      v134 = *(_QWORD *)(v55 + 32);
      v91 = v121;
      ((void (*)(char *, uint64_t, uint64_t))v134)(v121, v90, v54);
      v92 = v127;
      (*(void (**)(char *, char *, uint64_t))(v55 + 16))(v127, v91, v54);
      v93 = v126;
      (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v126, v37, v28);
      v133 = sub_1DC401024();
      LODWORD(v132) = v94;
      v95 = sub_1DC400F88();
      v97 = v96;
      (*(void (**)(char *, uint64_t))(v55 + 8))(v91, v54);
      (*(void (**)(char *, uint64_t))(v29 + 8))(v37, v28);
      v98 = v138;
      ((void (*)(uint64_t, char *, uint64_t))v134)(v138, v92, v54);
      v99 = (int *)type metadata accessor for StockSparklineViewModel(0);
      v119((char *)(v98 + v99[8]), v93, v28);
      v100 = v98 + v99[5];
      *(_QWORD *)v100 = v133;
      *(_BYTE *)(v100 + 8) = v132 & 1;
      v101 = v98 + v99[6];
      *(_QWORD *)v101 = v95;
      *(_BYTE *)(v101 + 8) = v97 & 1;
      *(_BYTE *)(v98 + v99[7]) = 0;
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, int *))(*((_QWORD *)v99 - 1) + 56))(v98, 0, 1, v99);
    }
    (*(void (**)(char *, uint64_t))(v29 + 8))(v37, v28);
    sub_1DC0926D8(v48, (uint64_t (*)(_QWORD))sub_1DC2E0360);
    v45 = v52;
    v14 = v53;
  }
  v56 = type metadata accessor for StockViewModel();
  sub_1DC0990BC(v132 + *(int *)(v56 + 24), (uint64_t)v11, (uint64_t (*)(_QWORD))sub_1DC0FF558);
  v57 = type metadata accessor for StockSparklineViewModel(0);
  v58 = *(_QWORD *)(v57 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v58 + 48))(v11, 1, v57) == 1)
  {
    sub_1DC0926D8((uint64_t)v11, (uint64_t (*)(_QWORD))sub_1DC0FF558);
  }
  else
  {
    v128 = v58;
    v59 = *(int *)(v57 + 24);
    v60 = &v11[*(int *)(v57 + 20)];
    v61 = *(_QWORD *)v60;
    v62 = v57;
    v63 = v60[8];
    v64 = *(_QWORD *)&v11[v59];
    v121 = v45;
    v65 = v11[v59 + 8];
    v132 = v62;
    v66 = &v11[*(int *)(v62 + 32)];
    v67 = v124;
    v68 = &v124[*(int *)(v123 + 24)];
    v123 = *(_QWORD *)(v29 + 16);
    ((void (*)(char *, char *, uint64_t))v123)(v68, v66, v28);
    *(_QWORD *)v67 = v61;
    v67[8] = v63;
    *((_QWORD *)v67 + 2) = v64;
    v67[24] = v65;
    sub_1DC0926D8((uint64_t)v11, type metadata accessor for StockSparklineViewModel);
    v69 = *(void (**)(char *, char *, uint64_t))(v29 + 32);
    v70 = v122;
    v69(v122, v68, v28);
    v71 = (uint64_t)v131;
    v69(v131, v70, v28);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v134 + 16), *(_QWORD *)(v134 + 40));
    v72 = sub_1DC401030();
    v73 = *(_QWORD *)(v72 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v73 + 16))(v14, v137, v72);
    v74 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v73 + 56);
    v45 = v121;
    v75 = v72;
    v76 = v136;
    v74(v14, 0, 1, v75);
    v77 = v125;
    sub_1DC0EE14C(v71, (uint64_t)v14, v45, v125, 0.02);
    sub_1DC0926D8((uint64_t)v14, (uint64_t (*)(_QWORD))sub_1DC0FED34);
    v78 = v135;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v135 + 48))(v77, 1, v76) != 1)
    {
      v102 = v78;
      v134 = *(_QWORD *)(v78 + 32);
      v103 = v71;
      v104 = v120;
      ((void (*)(char *, uint64_t, uint64_t))v134)(v120, v77, v76);
      v105 = v127;
      (*(void (**)(char *, char *, uint64_t))(v102 + 16))(v127, v104, v76);
      v106 = v126;
      ((void (*)(char *, uint64_t, uint64_t))v123)(v126, v103, v28);
      v107 = sub_1DC401024();
      v130 = (void (*)(uint64_t, char *, uint64_t))v69;
      v108 = v76;
      v109 = v107;
      LODWORD(v133) = v110;
      v111 = sub_1DC400F88();
      v113 = v112;
      (*(void (**)(char *, uint64_t))(v102 + 8))(v104, v108);
      (*(void (**)(char *, uint64_t))(v29 + 8))(v131, v28);
      v114 = v138;
      ((void (*)(uint64_t, char *, uint64_t))v134)(v138, v105, v108);
      v115 = (int *)v132;
      v130(v114 + *(int *)(v132 + 32), v106, v28);
      v116 = v114 + v115[5];
      *(_QWORD *)v116 = v109;
      *(_BYTE *)(v116 + 8) = v133 & 1;
      v117 = v114 + v115[6];
      *(_QWORD *)v117 = v111;
      *(_BYTE *)(v117 + 8) = v113 & 1;
      *(_BYTE *)(v114 + v115[7]) = 0;
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, int *))(v128 + 56))(v114, 0, 1, v115);
    }
    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v71, v28);
    sub_1DC0926D8(v77, (uint64_t (*)(_QWORD))sub_1DC2E0360);
    v57 = v132;
    v58 = v128;
  }
  v80 = v129;
  v79 = v130;
  v81 = v133;
  if (qword_1EDB273E0 != -1)
    swift_once();
  v82 = sub_1DC403F64();
  __swift_project_value_buffer(v82, (uint64_t)qword_1EDB5DDE8);
  (*(void (**)(char *, char *, _QWORD *))(v81 + 16))(v80, v45, v79);
  v83 = sub_1DC403F4C();
  v84 = sub_1DC408FC8();
  if (os_log_type_enabled(v83, v84))
  {
    v85 = (uint8_t *)swift_slowAlloc();
    v86 = swift_slowAlloc();
    v140 = v86;
    v132 = v57;
    *(_DWORD *)v85 = 136446210;
    v87 = sub_1DC4010B4();
    v139 = sub_1DC2A9C74(v87, v88, &v140);
    v57 = v132;
    sub_1DC4095B0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, void (*)(uint64_t, char *, uint64_t)))(v133 + 8))(v80, v79);
    _os_log_impl(&dword_1DC07D000, v83, v84, "StockList: failed to created view model for sparkline %{public}s", v85, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1DF0CAC88](v86, -1, -1);
    MEMORY[0x1DF0CAC88](v85, -1, -1);
  }
  else
  {
    (*(void (**)(char *, void (*)(uint64_t, char *, uint64_t)))(v81 + 8))(v80, v79);
  }

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v58 + 56))(v138, 1, 1, v57);
}

uint64_t sub_1DC2DFB68()
{
  return sub_1DC080808(&qword_1EDB3E610, (uint64_t (*)(uint64_t))type metadata accessor for StockListPriceDataUpdateBlueprintModifier, (uint64_t)&unk_1DC4251D0);
}

void sub_1DC2DFB94()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB3FD00)
  {
    sub_1DC4010E4();
    v0 = sub_1DC409880();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB3FD00);
  }
}

void sub_1DC2DFBF8(uint64_t a1, int a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  _QWORD *v22;
  char v23;
  unint64_t v24;
  uint64_t v25;
  _BOOL8 v26;
  uint64_t v27;
  char v28;
  unint64_t v29;
  char v30;
  void *v31;
  id v32;
  _QWORD *v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  BOOL v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  unint64_t v45;
  char v46;
  uint64_t v47;
  _BOOL8 v48;
  uint64_t v49;
  char v50;
  char v51;
  _QWORD *v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD v56[2];
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  id v69;

  v7 = sub_1DC4010E4();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC2AFBA4();
  MEMORY[0x1E0C80A78](v11);
  v15 = (_QWORD *)((char *)v56 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = *(_QWORD *)(a1 + 16);
  if (!v16)
  {
    swift_bridgeObjectRelease();
    return;
  }
  LODWORD(v60) = a2;
  v56[1] = v3;
  v57 = v16;
  v17 = (char *)v15 + *(int *)(v12 + 48);
  v56[0] = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v18 = a1 + v56[0];
  v62 = *(_QWORD *)(v13 + 72);
  v59 = a1;
  swift_bridgeObjectRetain();
  sub_1DC0990BC(v18, (uint64_t)v15, (uint64_t (*)(_QWORD))sub_1DC2AFBA4);
  v19 = v15[1];
  v67 = *v15;
  v20 = v67;
  v68 = v19;
  v58 = v8;
  v21 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
  v63 = v7;
  v64 = v10;
  v61 = v17;
  v21(v10, v17, v7);
  v22 = (_QWORD *)*a3;
  v24 = sub_1DC0ED368(v20, v19);
  v25 = v22[2];
  v26 = (v23 & 1) == 0;
  v27 = v25 + v26;
  if (__OFADD__(v25, v26))
    goto LABEL_23;
  v28 = v23;
  if (v22[3] >= v27)
  {
    if ((v60 & 1) != 0)
    {
      if ((v23 & 1) != 0)
        goto LABEL_10;
    }
    else
    {
      sub_1DC35BA98();
      if ((v28 & 1) != 0)
        goto LABEL_10;
    }
LABEL_13:
    v33 = (_QWORD *)*a3;
    *(_QWORD *)(*a3 + 8 * (v24 >> 6) + 64) |= 1 << v24;
    v34 = (uint64_t *)(v33[6] + 16 * v24);
    *v34 = v20;
    v34[1] = v19;
    v35 = v33[7];
    v60 = *(_QWORD *)(v58 + 72);
    v36 = v63;
    v21((char *)(v35 + v60 * v24), v64, v63);
    v37 = v33[2];
    v38 = __OFADD__(v37, 1);
    v39 = v37 + 1;
    if (v38)
    {
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v33[2] = v39;
    v40 = v57 - 1;
    if (v57 == 1)
    {
LABEL_22:
      swift_bridgeObjectRelease_n();
      return;
    }
    v41 = v59 + v62 + v56[0];
    while (1)
    {
      sub_1DC0990BC(v41, (uint64_t)v15, (uint64_t (*)(_QWORD))sub_1DC2AFBA4);
      v43 = v15[1];
      v67 = *v15;
      v42 = v67;
      v68 = v43;
      v21(v64, v61, v36);
      v44 = (_QWORD *)*a3;
      v45 = sub_1DC0ED368(v42, v43);
      v47 = v44[2];
      v48 = (v46 & 1) == 0;
      v38 = __OFADD__(v47, v48);
      v49 = v47 + v48;
      if (v38)
        break;
      v50 = v46;
      if (v44[3] < v49)
      {
        sub_1DC35993C(v49, 1);
        v45 = sub_1DC0ED368(v42, v43);
        if ((v50 & 1) != (v51 & 1))
          goto LABEL_25;
      }
      if ((v50 & 1) != 0)
        goto LABEL_10;
      v52 = (_QWORD *)*a3;
      *(_QWORD *)(*a3 + 8 * (v45 >> 6) + 64) |= 1 << v45;
      v53 = (uint64_t *)(v52[6] + 16 * v45);
      *v53 = v42;
      v53[1] = v43;
      v36 = v63;
      v21((char *)(v52[7] + v60 * v45), v64, v63);
      v54 = v52[2];
      v38 = __OFADD__(v54, 1);
      v55 = v54 + 1;
      if (v38)
        goto LABEL_24;
      v52[2] = v55;
      v41 += v62;
      if (!--v40)
        goto LABEL_22;
    }
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  sub_1DC35993C(v27, v60 & 1);
  v29 = sub_1DC0ED368(v20, v19);
  if ((v28 & 1) == (v30 & 1))
  {
    v24 = v29;
    if ((v28 & 1) == 0)
      goto LABEL_13;
LABEL_10:
    v31 = (void *)swift_allocError();
    swift_willThrow();
    v69 = v31;
    v32 = v31;
    sub_1DC16BD54();
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v58 + 8))(v64, v63);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      return;
    }
    goto LABEL_26;
  }
LABEL_25:
  sub_1DC409A3C();
  __break(1u);
LABEL_26:
  v65 = 0;
  v66 = 0xE000000000000000;
  sub_1DC409730();
  sub_1DC408B48();
  sub_1DC409808();
  sub_1DC408B48();
  sub_1DC409838();
  __break(1u);
}

unint64_t sub_1DC2E00A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  char *v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  _QWORD v29[2];
  char *v30;
  char *v31;
  unint64_t v32;

  sub_1DC104530();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1DC4010E4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v31 = (char *)v29 - v13;
  v14 = *(_QWORD *)(a1 + 16);
  if (v14)
  {
    v29[1] = v2;
    swift_bridgeObjectRetain();
    v29[0] = a1;
    v15 = (uint64_t *)(a1 + 40);
    v32 = MEMORY[0x1E0DEE9D8];
    v30 = v11;
    while (1)
    {
      if (*(_QWORD *)(a2 + 16))
      {
        v17 = *(v15 - 1);
        v16 = *v15;
        swift_bridgeObjectRetain();
        v18 = sub_1DC0ED368(v17, v16);
        if ((v19 & 1) != 0)
        {
          (*(void (**)(char *, unint64_t, uint64_t))(v9 + 16))(v7, *(_QWORD *)(a2 + 56) + *(_QWORD *)(v9 + 72) * v18, v8);
          v20 = 0;
        }
        else
        {
          v20 = 1;
        }
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, v20, 1, v8);
        swift_bridgeObjectRelease();
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) != 1)
        {
          v21 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
          v22 = v31;
          v21(v31, v7, v8);
          v21(v11, v22, v8);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
            v23 = v32;
          else
            v23 = sub_1DC0BA930(0, *(_QWORD *)(v32 + 16) + 1, 1, v32);
          v25 = *(_QWORD *)(v23 + 16);
          v24 = *(_QWORD *)(v23 + 24);
          if (v25 >= v24 >> 1)
            v23 = sub_1DC0BA930(v24 > 1, v25 + 1, 1, v23);
          *(_QWORD *)(v23 + 16) = v25 + 1;
          v26 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
          v32 = v23;
          v27 = v23 + v26 + *(_QWORD *)(v9 + 72) * v25;
          v11 = v30;
          v21((char *)v27, v30, v8);
          goto LABEL_5;
        }
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
      }
      sub_1DC0926D8((uint64_t)v7, (uint64_t (*)(_QWORD))sub_1DC104530);
LABEL_5:
      v15 += 2;
      if (!--v14)
      {
        swift_bridgeObjectRelease();
        return v32;
      }
    }
  }
  return MEMORY[0x1E0DEE9D8];
}

uint64_t sub_1DC2E0348@<X0>(char *a1@<X0>, char *a2@<X8>)
{
  uint64_t v2;

  return sub_1DC2DE504(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

void sub_1DC2E0360(uint64_t a1)
{
  sub_1DC092F50(a1, &qword_1EDB3F430, (void (*)(uint64_t))MEMORY[0x1E0DB24D8]);
}

uint64_t type metadata accessor for LandingPagePromiseViewController()
{
  uint64_t result;

  result = qword_1F0351500;
  if (!qword_1F0351500)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1DC2E03B0()
{
  return swift_initClassMetadata2();
}

void *sub_1DC2E03EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  id v20;
  uint64_t v21;
  void (*v22)(void *);
  _QWORD *v24;
  _QWORD v25[3];
  uint64_t v26;
  uint64_t v27;
  _BYTE v28[24];
  uint64_t v29;

  v3 = v2;
  v27 = a2;
  v5 = sub_1DC404E88();
  MEMORY[0x1E0C80A78](v5);
  v6 = sub_1DC400010();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1DC4017BC();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (_QWORD *)((char *)v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1DC143F58();
  v15 = v14;
  v25[2] = a1;
  sub_1DC406844();
  v25[1] = v15;
  v26 = v3;
  if (v29)
  {
    sub_1DC4018AC();
    if ((swift_dynamicCast() & 1) != 0)
    {
      *v13 = 0xD000000000000013;
      v13[1] = 0x80000001DC445E00;
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(v11 + 104))(v13, *MEMORY[0x1E0CF8508], v10);
      swift_bridgeObjectRetain();
      sub_1DC40187C();
      swift_release();
      swift_bridgeObjectRelease();
      (*(void (**)(_QWORD *, uint64_t))(v11 + 8))(v13, v10);
    }
  }
  else
  {
    sub_1DC150744((uint64_t)v28);
  }
  type metadata accessor for LandingPagePromiseViewController();
  sub_1DC400004();
  sub_1DC3FFFF8();
  v16 = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  MEMORY[0x1E0C80A78](v16);
  v17 = v26;
  v25[-4] = v27;
  v25[-3] = v17;
  sub_1DC404E7C();
  v24 = &v25[-6];
  v18 = (void *)sub_1DC405134();
  v19 = objc_msgSend((id)objc_opt_self(), sel_currentDevice);
  v20 = objc_msgSend(v19, sel_userInterfaceIdiom);

  if (v20 == (id)1)
  {
    v21 = 2;
    goto LABEL_9;
  }
  if (!v20)
  {
    v21 = 1;
LABEL_9:
    objc_msgSend(v18, sel_setModalPresentationStyle_, v21);
  }
  v22 = (void (*)(void *))sub_1DC406820();
  v22(v18);
  swift_release();
  return v18;
}

void sub_1DC2E0714(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v29 = a7;
  v33 = a3;
  v34 = a4;
  v31 = a1;
  v32 = a2;
  sub_1DC143F58();
  v10 = v9;
  v11 = *(_QWORD *)(v9 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for CampaignRouteModel();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(_QWORD *)(v15 + 64);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = a5;
  v36 = a6;
  sub_1DC403D48();
  v30 = sub_1DC402E0C();
  sub_1DC0ACADC();
  v28 = sub_1DC409148();
  sub_1DC1DC7C4(a5, (uint64_t)v17);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v29, v10);
  v18 = (*(unsigned __int8 *)(v15 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  v19 = (v16 + *(unsigned __int8 *)(v11 + 80) + v18) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v20 = (v12 + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
  v21 = swift_allocObject();
  sub_1DC1DC780((uint64_t)v17, v21 + v18);
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v21 + v19, v13, v10);
  *(_QWORD *)(v21 + v20) = a6;
  v22 = (_QWORD *)(v21 + ((v20 + 15) & 0xFFFFFFFFFFFFFFF8));
  v23 = v32;
  *v22 = v31;
  v22[1] = v23;
  type metadata accessor for Router();
  swift_retain();
  swift_retain();
  v24 = (void *)v28;
  sub_1DC402D1C();
  swift_release();

  swift_release();
  v25 = swift_allocObject();
  *(_QWORD *)(v25 + 16) = v33;
  *(_QWORD *)(v25 + 24) = v34;
  swift_retain();
  v26 = (void *)sub_1DC402C80();
  sub_1DC402D34();
  swift_release();
  swift_release();
  swift_release();

}

uint64_t sub_1DC2E096C(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  unsigned int *v10;
  uint64_t v11;
  uint64_t v13;

  v4 = sub_1DC403D18();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (uint64_t *)((char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = a1[1];
  if (v9)
  {
    *v8 = *a1;
    v8[1] = v9;
    v10 = (unsigned int *)MEMORY[0x1E0D61B78];
  }
  else
  {
    v10 = (unsigned int *)MEMORY[0x1E0D61B70];
  }
  (*(void (**)(_QWORD *, _QWORD, uint64_t, __n128))(v5 + 104))(v8, *v10, v4, v6);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(a2 + 168), *(_QWORD *)(a2 + 192));
  swift_bridgeObjectRetain();
  v11 = sub_1DC403D90();
  (*(void (**)(_QWORD *, uint64_t))(v5 + 8))(v8, v4);
  return v11;
}

uint64_t sub_1DC2E0A64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(void), uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  __n128 v31;
  uint64_t v32;
  uint64_t *v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  void (*v39)(char *, char *, uint64_t);
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  unsigned int *v51;
  uint64_t v52;
  char *v53;
  void *v54;
  uint64_t result;
  unsigned int *v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void *v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  void (*v92)(void);
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  __int128 v101;
  uint64_t v102;
  _QWORD v103[4];
  uint64_t v104;

  v92 = a6;
  v91 = a7;
  v76 = a5;
  v75 = a4;
  v100 = a3;
  v104 = a2;
  v93 = a1;
  v88 = sub_1DC403DF0();
  v87 = *(_QWORD *)(v88 - 8);
  MEMORY[0x1E0C80A78](v88);
  v89 = (char *)&v71 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC092F50(0, (unint64_t *)&unk_1EDB28A70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  MEMORY[0x1E0C80A78](v8);
  v86 = (char *)&v71 - v9;
  sub_1DC092F50(0, (unint64_t *)&qword_1EDB299F0, (void (*)(uint64_t))MEMORY[0x1E0D61E10]);
  MEMORY[0x1E0C80A78](v10);
  v85 = (uint64_t)&v71 - v11;
  v80 = sub_1DC403D0C();
  v79 = *(_QWORD *)(v80 - 8);
  MEMORY[0x1E0C80A78](v80);
  v82 = (char *)&v71 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC092F50(0, &qword_1EDB29960, (void (*)(uint64_t))MEMORY[0x1E0DADDD0]);
  MEMORY[0x1E0C80A78](v13);
  v77 = (char *)&v71 - v14;
  v84 = sub_1DC403CA0();
  v83 = *(_QWORD *)(v84 - 8);
  MEMORY[0x1E0C80A78](v84);
  v81 = (char *)&v71 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1DC403E38();
  v98 = *(_QWORD *)(v16 - 8);
  v99 = v16;
  MEMORY[0x1E0C80A78](v16);
  v78 = (char *)&v71 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v97 = (char *)&v71 - v19;
  v20 = sub_1DC403D3C();
  v95 = *(_QWORD *)(v20 - 8);
  v96 = v20;
  MEMORY[0x1E0C80A78](v20);
  v94 = (uint64_t)&v71 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = sub_1DC4035C8();
  v73 = *(_QWORD *)(v74 - 8);
  MEMORY[0x1E0C80A78](v74);
  v72 = (char *)&v71 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v90 = type metadata accessor for CampaignRouteModel();
  v23 = *(_QWORD *)(v90 - 8);
  v24 = *(_QWORD *)(v23 + 64);
  MEMORY[0x1E0C80A78](v90);
  v25 = sub_1DC403D30();
  v26 = *(_QWORD *)(v25 - 8);
  MEMORY[0x1E0C80A78](v25);
  v28 = (char *)&v71 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = sub_1DC403D48();
  v30 = *(_QWORD *)(v29 - 8);
  v31 = MEMORY[0x1E0C80A78](v29);
  v33 = (uint64_t *)((char *)&v71 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, uint64_t, uint64_t, __n128))(v30 + 16))(v33, v93, v29, v31);
  v34 = (*(uint64_t (**)(uint64_t *, uint64_t))(v30 + 88))(v33, v29);
  if (v34 == *MEMORY[0x1E0D61BA0])
  {
    (*(void (**)(uint64_t *, uint64_t))(v30 + 96))(v33, v29);
    v36 = *v33;
    v35 = v33[1];
    sub_1DC2E27F8();
    v38 = (char *)v33 + *(int *)(v37 + 48);
    v97 = v28;
    v98 = v26;
    v39 = *(void (**)(char *, char *, uint64_t))(v26 + 32);
    v99 = v25;
    v39(v28, v38, v25);
    v40 = v100;
    v95 = v36;
    v96 = v35;
    v41 = sub_1DC2E1454(v100, v36, v35);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v104 + 16), *(_QWORD *)(v104 + 40));
    sub_1DC096268(0, &qword_1F0351568);
    sub_1DC1DC7C4(v40, (uint64_t)&v71 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
    v42 = (*(unsigned __int8 *)(v23 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
    v43 = swift_allocObject();
    sub_1DC1DC780((uint64_t)&v71 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0), v43 + v42);
    *(_QWORD *)(v43 + ((v24 + v42 + 7) & 0xFFFFFFFFFFFFFFF8)) = v41;
    sub_1DC4025F0();
    swift_release();
    if (v102)
    {
      sub_1DC097DD0(&v101, (uint64_t)v103);
      sub_1DC2E1728(v75, v76);
      sub_1DC401894();
      swift_release();
      v44 = v100;
      if (*(_QWORD *)(v100 + 48))
      {
        swift_retain();
        swift_bridgeObjectRetain();
        v45 = v72;
        sub_1DC4035BC();
        sub_1DC080808(&qword_1EDB29890, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD700], MEMORY[0x1E0DAD6F0]);
        v46 = v74;
        sub_1DC401870();
        (*(void (**)(char *, uint64_t))(v73 + 8))(v45, v46);
      }
      else
      {
        swift_retain();
      }
      v53 = v97;
      v52 = v98;
      __swift_project_boxed_opaque_existential_1(v103, v103[3]);
      sub_1DC403D24();
      v54 = (void *)sub_1DC40220C();
      swift_release();
      swift_bridgeObjectRelease();
      if (MEMORY[0x1DF0CAD78](v44 + *(int *)(v90 + 44)))
      {
        swift_unknownObjectRetain();
        sub_1DC40571C();
        swift_unknownObjectRelease();
      }
      ((void (*)(void *))v92)(v54);
      swift_release();

      (*(void (**)(char *, uint64_t))(v52 + 8))(v53, v99);
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v103);
    }
    __break(1u);
LABEL_30:
    result = sub_1DC4099DC();
    __break(1u);
    return result;
  }
  v47 = v100;
  if (v34 != *MEMORY[0x1E0D61B98])
    goto LABEL_30;
  (*(void (**)(uint64_t *, uint64_t))(v30 + 96))(v33, v29);
  (*(void (**)(uint64_t, uint64_t *, uint64_t))(v95 + 32))(v94, v33, v96);
  v48 = *(_QWORD *)(v47 + 56);
  v49 = sub_1DC408D28();
  v50 = (uint64_t)v77;
  if ((v49 & 1) != 0)
  {
    if ((sub_1DC408D40() & 1) == 0)
    {
      if ((sub_1DC408D34() & 1) != 0)
        v56 = (unsigned int *)MEMORY[0x1E0D620A8];
      else
        v56 = (unsigned int *)MEMORY[0x1E0D620A0];
      (*(void (**)(char *, _QWORD, uint64_t))(v98 + 104))(v97, *v56, v99);
      goto LABEL_19;
    }
    v51 = (unsigned int *)MEMORY[0x1E0D62048];
  }
  else
  {
    v51 = (unsigned int *)MEMORY[0x1E0D620A0];
  }
  (*(void (**)(char *, _QWORD, uint64_t))(v98 + 104))(v97, *v51, v99);
LABEL_19:
  v57 = sub_1DC2E17E0();
  if (v58)
    v59 = v57;
  else
    v59 = 0;
  v93 = v59;
  v60 = 0xE000000000000000;
  if (v58)
    v60 = v58;
  v76 = v60;
  sub_1DC3210B0(v48, v50);
  v61 = sub_1DC403A54();
  v62 = *(_QWORD *)(v61 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v62 + 48))(v50, 1, v61) == 1)
  {
    sub_1DC092F14(v50, &qword_1EDB29960, (void (*)(uint64_t))MEMORY[0x1E0DADDD0]);
    v75 = 0;
    v74 = 0xE000000000000000;
  }
  else
  {
    v75 = sub_1DC403A30();
    v74 = v63;
    (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v50, v61);
  }
  v64 = v97;
  v65 = v98;
  v66 = v99;
  (*(void (**)(char *, char *, uint64_t))(v98 + 16))(v78, v97, v99);
  (*(void (**)(char *, _QWORD, uint64_t))(v79 + 104))(v82, *MEMORY[0x1E0D61B60], v80);
  sub_1DC2E27A4(v47 + *(int *)(v90 + 40), v85);
  v67 = sub_1DC3FFDD0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v67 - 8) + 56))(v86, 1, 1, v67);
  (*(void (**)(char *, _QWORD, uint64_t))(v87 + 104))(v89, *MEMORY[0x1E0D61EC0], v88);
  swift_bridgeObjectRetain();
  v68 = (uint64_t)v81;
  sub_1DC403C40();
  v69 = v94;
  v70 = (void *)sub_1DC2E1A7C(v94, v68, v104);
  v92();

  (*(void (**)(uint64_t, uint64_t))(v83 + 8))(v68, v84);
  (*(void (**)(char *, uint64_t))(v65 + 8))(v64, v66);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v95 + 8))(v69, v96);
}

unint64_t sub_1DC2E1454(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v14;

  v6 = sub_1DC403BEC();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(a1 + 56);
  if ((sub_1DC408D40() & 1) != 0)
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_QWORD *)v9 = a2;
    *((_QWORD *)v9 + 1) = a3;
    *((_OWORD *)v9 + 1) = 0u;
    *((_OWORD *)v9 + 2) = 0u;
    *((_OWORD *)v9 + 3) = 0u;
    (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E0D61810], v6);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v10 = sub_1DC166B58(0, *(_QWORD *)(v10 + 16) + 1, 1, v10);
    v12 = *(_QWORD *)(v10 + 16);
    v11 = *(_QWORD *)(v10 + 24);
    if (v12 >= v11 >> 1)
      v10 = sub_1DC166B58(v11 > 1, v12 + 1, 1, v10);
    *(_QWORD *)(v10 + 16) = v12 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v10+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(_QWORD *)(v7 + 72) * v12, v9, v6);
  }
  return v10;
}

uint64_t sub_1DC2E15A8(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  _QWORD v13[3];
  uint64_t v14;

  v13[2] = a3;
  sub_1DC092F50(0, (unint64_t *)&qword_1EDB299F0, (void (*)(uint64_t))MEMORY[0x1E0D61E10]);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v13 - v6;
  v8 = sub_1DC401DF8();
  v14 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13[1] = *(_QWORD *)(a2 + 64);
  v11 = type metadata accessor for CampaignRouteModel();
  sub_1DC2E27A4(a2 + *(int *)(v11 + 40), (uint64_t)v7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1DC401DEC();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC402518();
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v10, v8);
}

uint64_t sub_1DC2E1728(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  _BYTE v5[24];
  uint64_t v6;

  sub_1DC143F58();
  sub_1DC406844();
  if (v6)
  {
    sub_1DC4018AC();
    if ((swift_dynamicCast() & 1) != 0)
      return v4;
  }
  else
  {
    sub_1DC150744((uint64_t)v5);
  }
  __swift_project_boxed_opaque_existential_1((_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 40));
  sub_1DC4018AC();
  result = sub_1DC4025FC();
  if (!result)
    __break(1u);
  return result;
}

uint64_t sub_1DC2E17E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;

  sub_1DC092F50(0, &qword_1F0351578, (void (*)(uint64_t))MEMORY[0x1E0D61780]);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v20 - v2;
  sub_1DC092F50(0, (unint64_t *)&qword_1EDB29AA0, (void (*)(uint64_t))MEMORY[0x1E0D62448]);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v20 - v5;
  v7 = sub_1DC403EB0();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v21 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 40));
  sub_1DC096268(0, &qword_1EDB299B8);
  result = sub_1DC402608();
  if (!v22)
  {
    __break(1u);
    return result;
  }
  swift_getObjectType();
  v11 = *MEMORY[0x1E0D61760];
  v12 = sub_1DC403BD4();
  v13 = *(_QWORD *)(v12 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 104))(v3, v11, v12);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v3, 0, 1, v12);
  sub_1DC403CAC();
  sub_1DC092F14((uint64_t)v3, &qword_1F0351578, (void (*)(uint64_t))MEMORY[0x1E0D61780]);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    swift_unknownObjectRelease();
    sub_1DC092F14((uint64_t)v6, (unint64_t *)&qword_1EDB29AA0, (void (*)(uint64_t))MEMORY[0x1E0D62448]);
    return 0;
  }
  v14 = v21;
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v21, v6, v7);
  v15 = sub_1DC403EA4();
  if (!v15)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v14, v7);
    swift_unknownObjectRelease();
    return 0;
  }
  v16 = (void *)v15;
  v17 = sub_1DC408F2C();
  v19 = v18;
  swift_unknownObjectRelease();

  (*(void (**)(char *, uint64_t))(v8 + 8))(v14, v7);
  if (v19)
    return v17;
  else
    return 0;
}

uint64_t sub_1DC2E1A7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  char *v24;
  int v25;
  char *v26;
  void (*v27)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  id v44;
  id v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  void (*v52)(char *, uint64_t, uint64_t);
  char *v53;
  char *v54;
  char *v55;
  uint64_t result;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  char *v60;
  char *v61;
  char *v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;

  v68 = a2;
  v69 = a3;
  v67 = a1;
  sub_1DC092F50(0, &qword_1F0351570, (void (*)(uint64_t))MEMORY[0x1E0D61950]);
  MEMORY[0x1E0C80A78](v3);
  v62 = (char *)&v57 - v4;
  sub_1DC092F50(0, &qword_1F0351578, (void (*)(uint64_t))MEMORY[0x1E0D61780]);
  MEMORY[0x1E0C80A78](v5);
  v61 = (char *)&v57 - v6;
  v72 = sub_1DC3FFDD0();
  v70 = *(_QWORD *)(v72 - 8);
  MEMORY[0x1E0C80A78](v72);
  v60 = (char *)&v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = sub_1DC400010();
  v8 = *(_QWORD *)(v71 - 8);
  MEMORY[0x1E0C80A78](v71);
  v10 = (char *)&v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1DC403CA0();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v64 = (char *)&v57 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1DC403BD4();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v63 = (char *)&v57 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1DC403EB0();
  v73 = *(_QWORD *)(v17 - 8);
  v74 = v17;
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v57 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_1DC403D3C();
  v21 = *(_QWORD *)(v20 - 8);
  v22 = MEMORY[0x1E0C80A78](v20);
  v24 = (char *)&v57 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v21 + 16))(v24, v67, v20, v22);
  v25 = (*(uint64_t (**)(char *, uint64_t))(v21 + 88))(v24, v20);
  if (v25 == *MEMORY[0x1E0D61BB0])
  {
    (*(void (**)(char *, uint64_t))(v21 + 96))(v24, v20);
    v26 = v60;
    (*(void (**)(char *, char *, uint64_t))(v70 + 32))(v60, v24, v72);
    v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
    v28 = (uint64_t)v61;
    v27(v61, 1, 1, v14);
    v29 = (uint64_t)v62;
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v62, v68, v11);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v12 + 56))(v29, 0, 1, v11);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v69 + 128), *(_QWORD *)(v69 + 152));
    sub_1DC400004();
    sub_1DC3FFFF8();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v71);
    v30 = sub_1DC403E50();
    swift_bridgeObjectRelease();
    sub_1DC092F14(v29, &qword_1F0351570, (void (*)(uint64_t))MEMORY[0x1E0D61950]);
    sub_1DC092F14(v28, &qword_1F0351578, (void (*)(uint64_t))MEMORY[0x1E0D61780]);
    (*(void (**)(char *, uint64_t))(v70 + 8))(v26, v72);
    return v30;
  }
  v65 = v15;
  v66 = v14;
  v70 = v12;
  v72 = v11;
  v31 = v10;
  v32 = v8;
  v34 = v68;
  v33 = v69;
  if (v25 == *MEMORY[0x1E0D61BA8])
  {
    (*(void (**)(char *, uint64_t))(v21 + 96))(v24, v20);
    v35 = v19;
    (*(void (**)(char *, char *, uint64_t))(v73 + 32))(v19, v24, v74);
    v36 = sub_1DC403E8C();
    v37 = v33;
    v38 = v34;
    v58 = v31;
    v59 = v32;
    if ((v36 & 1) != 0)
    {
      v39 = v72;
      v40 = v70;
      v42 = v65;
      v41 = v66;
    }
    else
    {
      v43 = sub_1DC403E74();
      v39 = v72;
      v40 = v70;
      v42 = v65;
      v41 = v66;
      if ((v43 & 1) == 0)
      {
LABEL_17:
        v50 = (void *)sub_1DC403E98();
        v51 = *MEMORY[0x1E0D61768];
        v52 = *(void (**)(char *, uint64_t, uint64_t))(v42 + 104);
        v72 = (uint64_t)v35;
        v53 = v63;
        v52(v63, v51, v41);
        v54 = v64;
        (*(void (**)(char *, uint64_t, uint64_t))(v40 + 16))(v64, v38, v39);
        __swift_project_boxed_opaque_existential_1((_QWORD *)(v37 + 128), *(_QWORD *)(v37 + 152));
        v55 = v58;
        sub_1DC400004();
        sub_1DC3FFFF8();
        (*(void (**)(char *, uint64_t))(v59 + 8))(v55, v71);
        v30 = sub_1DC403E5C();

        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v40 + 8))(v54, v39);
        (*(void (**)(char *, uint64_t))(v65 + 8))(v53, v66);
        (*(void (**)(uint64_t, uint64_t))(v73 + 8))(v72, v74);
        return v30;
      }
      v44 = objc_msgSend(*(id *)(v33 + 208), sel_possiblyUnfetchedAppConfiguration);
      if ((objc_msgSend(v44, sel_respondsToSelector_, sel_paidBundleConfig) & 1) != 0)
      {
        v45 = objc_msgSend(v44, sel_paidBundleConfig);
        swift_unknownObjectRelease();
        v46 = objc_msgSend(v45, sel_offeredBundlePurchaseIDs);

        v47 = v38;
        if (v46)
        {
          v48 = sub_1DC408CD4();

          if (*(_QWORD *)(v48 + 16))
            swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
        }
      }
      else
      {
        v47 = v38;
        swift_unknownObjectRelease();
      }
      sub_1DC403E80();
      if (v49)
        swift_bridgeObjectRelease();
      v39 = v72;
      v40 = v70;
      v38 = v47;
      sub_1DC403C58();
    }
    sub_1DC403C70();
    goto LABEL_17;
  }
  result = sub_1DC409838();
  __break(1u);
  return result;
}

void sub_1DC2E2120(void *a1, void (*a2)(void *))
{
  uint64_t v4;
  void *v5;
  uint64_t *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t);
  id v10;

  v4 = sub_1DC40514C();
  sub_1DC080808(&qword_1F0351550, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB9218], MEMORY[0x1E0DB9220]);
  v5 = (void *)swift_allocError();
  v7 = v6;
  v8 = sub_1DC402014();
  v9 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D57838];
  v7[3] = v8;
  v7[4] = sub_1DC080808(&qword_1F0351558, v9, MEMORY[0x1E0D57810]);
  __swift_allocate_boxed_opaque_existential_1(v7);
  v10 = a1;
  sub_1DC402008();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v4 - 8) + 104))(v7, *MEMORY[0x1E0DB9208], v4);
  a2(v5);

}

uint64_t sub_1DC2E2218(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  objc_class *v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  id v14;
  uint64_t v15;
  _QWORD v17[2];

  v17[0] = a7;
  v17[1] = a8;
  v10 = sub_1DC404E88();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = objc_allocWithZone(v8);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a4, v10);
  v15 = sub_1DC405140();
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(a4, v10);
  return v15;
}

uint64_t sub_1DC2E2304()
{
  objc_class *v0;
  id v1;

  v1 = objc_allocWithZone(v0);
  return sub_1DC405158();
}

id sub_1DC2E2334(void *a1, uint64_t a2, uint64_t a3)
{
  objc_super v5;

  v5.receiver = a1;
  v5.super_class = (Class)type metadata accessor for LandingPagePromiseViewController();
  return objc_msgSendSuper2(&v5, sel_initWithCoder_, a3);
}

id sub_1DC2E237C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for LandingPagePromiseViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1DC2E23B0()
{
  return type metadata accessor for LandingPagePromiseViewController();
}

uint64_t sub_1DC2E23B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  int v9;
  unsigned int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;

  v4 = sub_1DC404BE8();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v5 + 16))(v8, a1, v4, v6);
  v9 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v8, v4);
  if (v9 == *MEMORY[0x1E0DB8468])
  {
    v10 = (unsigned int *)MEMORY[0x1E0DBA218];
LABEL_5:
    v11 = *v10;
    v12 = sub_1DC4059BC();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(a2, v11, v12);
    v13 = *MEMORY[0x1E0DBA210];
    v14 = sub_1DC4059C8();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(a2, v13, v14);
  }
  if (v9 == *MEMORY[0x1E0DB8460])
  {
    v10 = (unsigned int *)MEMORY[0x1E0DBA220];
    goto LABEL_5;
  }
  result = sub_1DC409838();
  __break(1u);
  return result;
}

uint64_t sub_1DC2E2528@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DC2E23B8(a1, a2);
}

void sub_1DC2E2548(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;

  sub_1DC2E0714(a1, a2, a3, a4, v4[2], v4[3], v4[4]);
}

uint64_t sub_1DC2E2554()
{
  uint64_t v0;

  return sub_1DC2E096C(*(_QWORD **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1DC2E256C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  v1 = type metadata accessor for CampaignRouteModel();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v11 = *(_QWORD *)(v2 + 64);
  sub_1DC143F58();
  v12 = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v7 = v0 + v3 + *(int *)(v1 + 40);
  v8 = sub_1DC403DA8();
  v9 = *(_QWORD *)(v8 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
    (*(void (**)(unint64_t, uint64_t))(v9 + 8))(v7, v8);
  swift_unknownObjectWeakDestroy();
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + ((v3 + v11 + v6) & ~v6), v12);
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DC2E26C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;

  v5 = *(_QWORD *)(type metadata accessor for CampaignRouteModel() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64);
  sub_1DC143F58();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = (v6 + v7 + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v11 = (*(_QWORD *)(v9 + 64) + v10 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1DC2E0A64(a1, a2, v2 + v6, v2 + v10, *(_QWORD *)(v2 + v11), *(void (**)(void))(v2 + ((v11 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v2 + ((v11 + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_1DC2E2778()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1DC2E279C(void *a1)
{
  uint64_t v1;

  sub_1DC2E2120(a1, *(void (**)(void *))(v1 + 16));
}

uint64_t sub_1DC2E27A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1DC092F50(0, (unint64_t *)&qword_1EDB299F0, (void (*)(uint64_t))MEMORY[0x1E0D61E10]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1DC2E27F8()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1F0351560)
  {
    sub_1DC403D30();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1F0351560);
  }
}

uint64_t sub_1DC2E2860()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = type metadata accessor for CampaignRouteModel();
  v2 = v0
     + ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v3 = v2 + *(int *)(v1 + 40);
  v4 = sub_1DC403DA8();
  v5 = *(_QWORD *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  swift_unknownObjectWeakDestroy();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1DC2E2950(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(type metadata accessor for CampaignRouteModel() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  return sub_1DC2E15A8(a1, v1 + v4, *(_QWORD *)(v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFF8)));
}

void sub_1DC2E29A0(uint64_t a1, double *a2, char *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  void *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t inited;
  void *v20;
  unint64_t v21;
  id v22;
  uint64_t v23;
  id v24;
  void *v25;
  void *v26;
  id v27;
  _QWORD *v28;
  id v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  void *v34;
  id v35;
  id v36;

  v4 = v3;
  sub_1DC089DA4(0, (unint64_t *)&qword_1EDB3FBF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC3228], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v35 - v8;
  v35 = (id)objc_opt_self();
  v10 = objc_msgSend(v35, sel_secondarySystemBackgroundColor);
  v36 = a3;
  objc_msgSend(a3, sel_setBackgroundColor_, v10);

  v11 = *(void **)&a3[OBJC_IVAR____TtC8StocksUI19CreateWatchlistView_newWatchlistButton];
  v12 = (char *)a2 + *(int *)(type metadata accessor for CreateWatchlistViewLayoutAttributes() + 24);
  v13 = sub_1DC40952C();
  v14 = *(_QWORD *)(v13 - 8);
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v9, v12, v13);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v9, 0, 1, v13);
  sub_1DC409544();
  objc_msgSend(v11, sel_setFrame_, a2[1], a2[2], a2[3], a2[4]);
  swift_beginAccess();
  v15 = __swift_project_boxed_opaque_existential_1((_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 40));
  v17 = *(_QWORD *)(*v15 + 40);
  v16 = *(_QWORD *)(*v15 + 48);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(*v15 + 16), v17);
  v18 = (void *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)(v16 + 16) + 104))(v17);
  objc_msgSend(v11, sel_setTintColor_, v18);

  sub_1DC089DA4(0, (unint64_t *)&qword_1EDB40090, (uint64_t (*)(uint64_t))sub_1DC112C08, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DC40DC10;
  v20 = (void *)*MEMORY[0x1E0DC1138];
  *(_QWORD *)(inited + 32) = *MEMORY[0x1E0DC1138];
  v21 = sub_1DC0D0F34();
  swift_bridgeObjectRetain();
  v22 = v20;
  v23 = sub_1DC4092F8();
  *(_QWORD *)(inited + 64) = v21;
  *(_QWORD *)(inited + 40) = v23;
  sub_1DC0FA3C4(inited);
  v24 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  v25 = (void *)sub_1DC408A1C();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1DC081B48((unint64_t *)&qword_1EDB3F988, 255, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1DC40D90C);
  v26 = (void *)sub_1DC408980();
  swift_bridgeObjectRelease();
  v27 = objc_msgSend(v24, sel_initWithString_attributes_, v25, v26);

  objc_msgSend(v11, sel_setAttributedTitle_forState_, v27, 0);
  v28 = (_QWORD *)*__swift_project_boxed_opaque_existential_1((_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 40));
  v29 = objc_msgSend(v35, sel_secondarySystemBackgroundColor);
  objc_msgSend(v11, sel_setBackgroundColor_, v29);

  v30 = v28 + 2;
  v32 = v28[5];
  v31 = v28[6];
  __swift_project_boxed_opaque_existential_1(v30, v32);
  v33 = (void *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)(v31 + 16) + 104))(v32);
  objc_msgSend(v11, sel_setTintColor_, v33);

  v34 = (void *)sub_1DC408A1C();
  objc_msgSend(v36, sel_setAccessibilityLabel_, v34);

}

uint64_t type metadata accessor for CreateWatchlistViewRenderer()
{
  return objc_opt_self();
}

uint64_t sub_1DC2E2D9C(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = sub_1DC081B48(&qword_1F0351620, a2, (uint64_t (*)(uint64_t))type metadata accessor for CreateWatchlistViewRenderer, (uint64_t)&unk_1DC4252FC);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

char *sub_1DC2E2E80()
{
  char *v0;
  objc_class *ObjectType;
  uint64_t v2;
  id v3;
  char *v4;
  char *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  char *v9;
  id v10;
  id v11;
  id v12;
  void *v13;
  uint64_t inited;
  id v15;
  id v16;
  void *v17;
  objc_super v19;

  ObjectType = (objc_class *)swift_getObjectType();
  v2 = OBJC_IVAR____TtC8StocksUI28StockChartCalloutHandleLayer_knobLayer;
  v3 = objc_allocWithZone(MEMORY[0x1E0CD2840]);
  v4 = v0;
  *(_QWORD *)&v0[v2] = objc_msgSend(v3, sel_init);
  *(_QWORD *)&v4[OBJC_IVAR____TtC8StocksUI28StockChartCalloutHandleLayer_knobLocation] = 0;

  v19.receiver = v4;
  v19.super_class = ObjectType;
  v5 = (char *)objc_msgSendSuper2(&v19, sel_init);
  v6 = OBJC_IVAR____TtC8StocksUI28StockChartCalloutHandleLayer_knobLayer;
  v7 = *(void **)&v5[OBJC_IVAR____TtC8StocksUI28StockChartCalloutHandleLayer_knobLayer];
  v8 = (void *)objc_opt_self();
  v9 = v5;
  v10 = v7;
  v11 = objc_msgSend(v8, sel_bezierPathWithOvalInRect_, 0.0, 0.0, 18.0, 18.0);
  v12 = objc_msgSend(v11, sel_CGPath);

  objc_msgSend(v10, sel_setPath_, v12);
  v13 = *(void **)&v5[v6];
  objc_msgSend(v13, sel_setBounds_, 0.0, 0.0, 18.0, 18.0);
  sub_1DC2E3214();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DC40C740;
  *(_QWORD *)(inited + 32) = 0x6E6F697469736F70;
  *(_QWORD *)(inited + 40) = 0xE800000000000000;
  v15 = objc_allocWithZone(MEMORY[0x1E0C99E38]);
  v16 = v13;
  *(_QWORD *)(inited + 48) = objc_msgSend(v15, sel_init);
  *(_QWORD *)(inited + 56) = 0x756F72676B636162;
  *(_QWORD *)(inited + 64) = 0xEF726F6C6F43646ELL;
  *(_QWORD *)(inited + 72) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C99E38]), sel_init);
  sub_1DC1A2730(inited);
  sub_1DC2E32CC();
  v17 = (void *)sub_1DC408980();
  swift_bridgeObjectRelease();
  objc_msgSend(v16, sel_setActions_, v17);

  objc_msgSend(v9, sel_addSublayer_, *(_QWORD *)&v5[v6]);
  return v9;
}

uint64_t type metadata accessor for StockChartCalloutHandleLayer()
{
  return objc_opt_self();
}

void sub_1DC2E3214()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB40060)
  {
    sub_1DC2E3268();
    v0 = sub_1DC4099C4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB40060);
  }
}

void sub_1DC2E3268()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EDB3F610)
  {
    sub_1DC2E32CC();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EDB3F610);
  }
}

unint64_t sub_1DC2E32CC()
{
  unint64_t result;

  result = qword_1EDB3FB50;
  if (!qword_1EDB3FB50)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EDB3FB50);
  }
  return result;
}

uint64_t sub_1DC2E3320(uint64_t a1, uint64_t a2)
{
  return sub_1DC091ACC(a1, a2, MEMORY[0x1E0DAEBE8]);
}

uint64_t sub_1DC2E3330(uint64_t a1, uint64_t a2)
{
  return sub_1DC091ACC(a1, a2, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DAEC10]);
}

void sub_1DC2E333C(void (*a1)(uint64_t, id), uint64_t a2)
{
  sub_1DC2E3354(a1, a2, &OBJC_IVAR____TtC8StocksUI15QuoteDetailView_nameLabels);
}

void sub_1DC2E3348(void (*a1)(uint64_t, id), uint64_t a2)
{
  sub_1DC2E3354(a1, a2, &OBJC_IVAR____TtC8StocksUI15QuoteDetailView_valueLabels);
}

void sub_1DC2E3354(void (*a1)(uint64_t, id), uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  int64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  id v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v5 = *(_QWORD *)(v3 + *a3);
  v6 = v5 + 64;
  v7 = 1 << *(_BYTE *)(v5 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *(_QWORD *)(v5 + 64);
  v10 = (unint64_t)(v7 + 63) >> 6;
  swift_bridgeObjectRetain();
  v11 = 0;
  while (1)
  {
    if (v9)
    {
      v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v13 = v12 | (v11 << 6);
      goto LABEL_5;
    }
    v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_23;
    }
    if (v16 >= v10)
      goto LABEL_21;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      v11 = v16 + 1;
      if (v16 + 1 >= v10)
        goto LABEL_21;
      v17 = *(_QWORD *)(v6 + 8 * v11);
      if (!v17)
      {
        v11 = v16 + 2;
        if (v16 + 2 >= v10)
          goto LABEL_21;
        v17 = *(_QWORD *)(v6 + 8 * v11);
        if (!v17)
          break;
      }
    }
LABEL_20:
    v9 = (v17 - 1) & v17;
    v13 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_5:
    v14 = *(unsigned __int8 *)(*(_QWORD *)(v5 + 48) + v13);
    v15 = *(id *)(*(_QWORD *)(v5 + 56) + 8 * v13);
    a1(v14, v15);

  }
  v18 = v16 + 3;
  if (v18 >= v10)
  {
LABEL_21:
    swift_release();
    return;
  }
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v11 = v18;
    goto LABEL_20;
  }
  while (1)
  {
    v11 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v11 >= v10)
      goto LABEL_21;
    v17 = *(_QWORD *)(v6 + 8 * v11);
    ++v18;
    if (v17)
      goto LABEL_20;
  }
LABEL_23:
  __break(1u);
}

uint64_t sub_1DC2E34BC(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  id v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  id v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  unsigned __int8 v21;
  id v22;
  id v23;
  char isUniquelyReferenced_nonNull_native;
  char v25;
  unint64_t v26;
  uint64_t v27;
  _BOOL8 v28;
  uint64_t v29;
  char v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  char v34;
  unint64_t v35;
  void *v36;
  uint64_t v37;
  BOOL v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  unsigned __int8 v44;
  id v45;
  id v46;
  char v47;
  char v48;
  unint64_t v49;
  uint64_t v50;
  _BOOL8 v51;
  uint64_t v52;
  char v53;
  unint64_t v54;
  char v55;
  unint64_t v56;
  char v57;
  unint64_t v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  void *v64;
  char *v65;
  void *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  int64_t v72;
  int64_t v73;
  unint64_t v74;
  unint64_t v75;
  int64_t v76;
  unint64_t v77;
  int64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  int64_t v84;
  int64_t v85;
  unint64_t v86;
  unint64_t v87;
  int64_t v88;
  unint64_t v89;
  int64_t v90;
  uint64_t result;
  objc_class *ObjectType;
  char *v93;
  objc_super v94;

  ObjectType = (objc_class *)swift_getObjectType();
  v9 = OBJC_IVAR____TtC8StocksUI15QuoteDetailView_scrollView;
  v10 = objc_allocWithZone(MEMORY[0x1E0DC3C28]);
  v11 = v4;
  *(_QWORD *)&v4[v9] = objc_msgSend(v10, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v12 = OBJC_IVAR____TtC8StocksUI15QuoteDetailView_separatorsView;
  *(_QWORD *)&v11[v12] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ShapeView()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v13 = OBJC_IVAR____TtC8StocksUI15QuoteDetailView_attributionButtonContainerView;
  *(_QWORD *)&v11[v13] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v14 = OBJC_IVAR____TtC8StocksUI15QuoteDetailView_attributionButton;
  type metadata accessor for AttributionButton();
  v15 = (char *)objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_buttonWithType_, 0);
  v16 = *(id *)&v15[OBJC_IVAR____TtC8StocksUI17AttributionButton_onTap];
  sub_1DC406898();

  v17 = 0;
  v93 = v11;
  *(_QWORD *)&v11[v14] = v15;
  v18 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  do
  {
    v21 = byte_1EA44D938[v17 + 32];
    v22 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
    if (v22)
    {
      v23 = v22;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v26 = sub_1DC1A36AC(v21);
      v27 = v18[2];
      v28 = (v25 & 1) == 0;
      v29 = v27 + v28;
      if (__OFADD__(v27, v28))
      {
        __break(1u);
LABEL_83:
        __break(1u);
LABEL_84:
        __break(1u);
LABEL_85:
        __break(1u);
LABEL_86:
        __break(1u);
LABEL_87:
        __break(1u);
        goto LABEL_88;
      }
      v30 = v25;
      if (v18[3] < v29)
      {
        sub_1DC359CC4(v29, isUniquelyReferenced_nonNull_native);
        v31 = sub_1DC1A36AC(v21);
        if ((v30 & 1) != (v32 & 1))
          goto LABEL_90;
        v26 = v31;
        if ((v30 & 1) == 0)
          goto LABEL_17;
LABEL_2:
        v19 = v18[7];
        v20 = 8 * v26;

        *(_QWORD *)(v19 + v20) = v23;
LABEL_3:
        swift_bridgeObjectRelease();
        goto LABEL_4;
      }
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        if ((v25 & 1) != 0)
          goto LABEL_2;
      }
      else
      {
        sub_1DC35BD00();
        if ((v30 & 1) != 0)
          goto LABEL_2;
      }
LABEL_17:
      v18[(v26 >> 6) + 8] |= 1 << v26;
      *(_BYTE *)(v18[6] + v26) = v21;
      *(_QWORD *)(v18[7] + 8 * v26) = v23;
      v37 = v18[2];
      v38 = __OFADD__(v37, 1);
      v39 = v37 + 1;
      if (v38)
        goto LABEL_86;
      v18[2] = v39;
      goto LABEL_3;
    }
    v33 = sub_1DC1A36AC(v21);
    if ((v34 & 1) != 0)
    {
      v35 = v33;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        sub_1DC35BD00();
      v36 = *(void **)(v18[7] + 8 * v35);
      sub_1DC178E7C(v35, (uint64_t)v18);

      goto LABEL_3;
    }
LABEL_4:
    ++v17;
  }
  while (v17 != 12);
  v40 = 0;
  *(_QWORD *)&v93[OBJC_IVAR____TtC8StocksUI15QuoteDetailView_nameLabels] = v18;
  v41 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  do
  {
    v44 = byte_1EA44D938[v40 + 32];
    v45 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
    if (v45)
    {
      v46 = v45;
      v47 = swift_isUniquelyReferenced_nonNull_native();
      v49 = sub_1DC1A36AC(v44);
      v50 = v41[2];
      v51 = (v48 & 1) == 0;
      v52 = v50 + v51;
      if (__OFADD__(v50, v51))
        goto LABEL_83;
      v53 = v48;
      if (v41[3] < v52)
      {
        sub_1DC359CC4(v52, v47);
        v54 = sub_1DC1A36AC(v44);
        if ((v53 & 1) != (v55 & 1))
          goto LABEL_90;
        v49 = v54;
        if ((v53 & 1) == 0)
          goto LABEL_37;
LABEL_22:
        v42 = v41[7];
        v43 = 8 * v49;

        *(_QWORD *)(v42 + v43) = v46;
LABEL_23:
        swift_bridgeObjectRelease();
        goto LABEL_24;
      }
      if ((v47 & 1) != 0)
      {
        if ((v48 & 1) != 0)
          goto LABEL_22;
      }
      else
      {
        sub_1DC35BD00();
        if ((v53 & 1) != 0)
          goto LABEL_22;
      }
LABEL_37:
      v41[(v49 >> 6) + 8] |= 1 << v49;
      *(_BYTE *)(v41[6] + v49) = v44;
      *(_QWORD *)(v41[7] + 8 * v49) = v46;
      v60 = v41[2];
      v38 = __OFADD__(v60, 1);
      v61 = v60 + 1;
      if (v38)
        goto LABEL_87;
      v41[2] = v61;
      goto LABEL_23;
    }
    v56 = sub_1DC1A36AC(v44);
    if ((v57 & 1) != 0)
    {
      v58 = v56;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        sub_1DC35BD00();
      v59 = *(void **)(v41[7] + 8 * v58);
      sub_1DC178E7C(v58, (uint64_t)v41);

      goto LABEL_23;
    }
LABEL_24:
    ++v40;
  }
  while (v40 != 12);
  *(_QWORD *)&v93[OBJC_IVAR____TtC8StocksUI15QuoteDetailView_valueLabels] = v41;

  v94.receiver = v93;
  v94.super_class = ObjectType;
  v62 = (char *)objc_msgSendSuper2(&v94, sel_initWithFrame_, a1, a2, a3, a4);
  v63 = OBJC_IVAR____TtC8StocksUI15QuoteDetailView_scrollView;
  v64 = *(void **)&v62[OBJC_IVAR____TtC8StocksUI15QuoteDetailView_scrollView];
  v65 = v62;
  objc_msgSend(v64, sel_setAlwaysBounceVertical_, 0);
  objc_msgSend(v64, sel_setShowsVerticalScrollIndicator_, 0);
  objc_msgSend(v64, sel_setShowsHorizontalScrollIndicator_, 0);
  objc_msgSend(v64, sel_setDirectionalLockEnabled_, 1);
  objc_msgSend(v65, sel_addSubview_, v64);
  objc_msgSend(v64, sel_addSubview_, *(_QWORD *)&v65[OBJC_IVAR____TtC8StocksUI15QuoteDetailView_separatorsView]);
  v66 = *(void **)&v65[OBJC_IVAR____TtC8StocksUI15QuoteDetailView_attributionButtonContainerView];
  objc_msgSend(v65, sel_addSubview_, v66);
  objc_msgSend(v66, sel_addSubview_, *(_QWORD *)&v65[OBJC_IVAR____TtC8StocksUI15QuoteDetailView_attributionButton]);
  v67 = *(_QWORD *)&v65[OBJC_IVAR____TtC8StocksUI15QuoteDetailView_nameLabels];
  v68 = v67 + 64;
  v69 = 1 << *(_BYTE *)(v67 + 32);
  v70 = -1;
  if (v69 < 64)
    v70 = ~(-1 << v69);
  v71 = v70 & *(_QWORD *)(v67 + 64);
  v72 = (unint64_t)(v69 + 63) >> 6;
  swift_bridgeObjectRetain();
  v73 = 0;
  while (2)
  {
    if (v71)
    {
      v74 = __clz(__rbit64(v71));
      v71 &= v71 - 1;
      v75 = v74 | (v73 << 6);
LABEL_45:
      objc_msgSend(v64, sel_addSubview_, *(_QWORD *)(*(_QWORD *)(v67 + 56) + 8 * v75));
      continue;
    }
    break;
  }
  v76 = v73 + 1;
  if (__OFADD__(v73, 1))
    goto LABEL_84;
  if (v76 < v72)
  {
    v77 = *(_QWORD *)(v68 + 8 * v76);
    ++v73;
    if (!v77)
    {
      v73 = v76 + 1;
      if (v76 + 1 >= v72)
        goto LABEL_61;
      v77 = *(_QWORD *)(v68 + 8 * v73);
      if (!v77)
      {
        v73 = v76 + 2;
        if (v76 + 2 >= v72)
          goto LABEL_61;
        v77 = *(_QWORD *)(v68 + 8 * v73);
        if (!v77)
        {
          v78 = v76 + 3;
          if (v78 >= v72)
            goto LABEL_61;
          v77 = *(_QWORD *)(v68 + 8 * v78);
          if (!v77)
          {
            while (1)
            {
              v73 = v78 + 1;
              if (__OFADD__(v78, 1))
                break;
              if (v73 >= v72)
                goto LABEL_61;
              v77 = *(_QWORD *)(v68 + 8 * v73);
              ++v78;
              if (v77)
                goto LABEL_60;
            }
LABEL_88:
            __break(1u);
            goto LABEL_89;
          }
          v73 = v78;
        }
      }
    }
LABEL_60:
    v71 = (v77 - 1) & v77;
    v75 = __clz(__rbit64(v77)) + (v73 << 6);
    goto LABEL_45;
  }
LABEL_61:
  swift_release();
  v79 = *(_QWORD *)&v65[OBJC_IVAR____TtC8StocksUI15QuoteDetailView_valueLabels];
  v80 = v79 + 64;
  v81 = 1 << *(_BYTE *)(v79 + 32);
  v82 = -1;
  if (v81 < 64)
    v82 = ~(-1 << v81);
  v83 = v82 & *(_QWORD *)(v79 + 64);
  v84 = (unint64_t)(v81 + 63) >> 6;
  swift_bridgeObjectRetain();
  v85 = 0;
  while (2)
  {
    if (v83)
    {
      v86 = __clz(__rbit64(v83));
      v83 &= v83 - 1;
      v87 = v86 | (v85 << 6);
LABEL_65:
      objc_msgSend(*(id *)&v62[v63], sel_addSubview_, *(_QWORD *)(*(_QWORD *)(v79 + 56) + 8 * v87));
      continue;
    }
    break;
  }
  v88 = v85 + 1;
  if (__OFADD__(v85, 1))
    goto LABEL_85;
  if (v88 >= v84)
  {
LABEL_81:

    swift_release();
    return (uint64_t)v65;
  }
  v89 = *(_QWORD *)(v80 + 8 * v88);
  ++v85;
  if (v89)
    goto LABEL_80;
  v85 = v88 + 1;
  if (v88 + 1 >= v84)
    goto LABEL_81;
  v89 = *(_QWORD *)(v80 + 8 * v85);
  if (v89)
    goto LABEL_80;
  v85 = v88 + 2;
  if (v88 + 2 >= v84)
    goto LABEL_81;
  v89 = *(_QWORD *)(v80 + 8 * v85);
  if (v89)
  {
LABEL_80:
    v83 = (v89 - 1) & v89;
    v87 = __clz(__rbit64(v89)) + (v85 << 6);
    goto LABEL_65;
  }
  v90 = v88 + 3;
  if (v90 >= v84)
    goto LABEL_81;
  v89 = *(_QWORD *)(v80 + 8 * v90);
  if (v89)
  {
    v85 = v90;
    goto LABEL_80;
  }
  while (1)
  {
    v85 = v90 + 1;
    if (__OFADD__(v90, 1))
      break;
    if (v85 >= v84)
      goto LABEL_81;
    v89 = *(_QWORD *)(v80 + 8 * v85);
    ++v90;
    if (v89)
      goto LABEL_80;
  }
LABEL_89:
  __break(1u);
LABEL_90:
  result = sub_1DC409A3C();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for QuoteDetailView()
{
  return objc_opt_self();
}

void sub_1DC2E3D9C()
{
  sub_1DC2E3DF8(&qword_1EDB2E210, (uint64_t)&unk_1DC425424);
  JUMPOUT(0x1DF0C7418);
}

uint64_t sub_1DC2E3DD4()
{
  return sub_1DC2E3DF8(&qword_1EDB2E208, (uint64_t)&unk_1DC4253EC);
}

uint64_t sub_1DC2E3DF8(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for QuoteDetailView();
    result = MEMORY[0x1DF0CAB8C](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1DC2E3E34()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;

  v1 = v0;
  v2 = OBJC_IVAR____TtC8StocksUI15QuoteDetailView_scrollView;
  *(_QWORD *)&v1[v2] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3C28]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v3 = OBJC_IVAR____TtC8StocksUI15QuoteDetailView_separatorsView;
  *(_QWORD *)&v1[v3] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ShapeView()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v4 = OBJC_IVAR____TtC8StocksUI15QuoteDetailView_attributionButtonContainerView;
  *(_QWORD *)&v1[v4] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v5 = OBJC_IVAR____TtC8StocksUI15QuoteDetailView_attributionButton;
  type metadata accessor for AttributionButton();
  v6 = (char *)objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_buttonWithType_, 0);
  v7 = *(id *)&v6[OBJC_IVAR____TtC8StocksUI17AttributionButton_onTap];
  sub_1DC406898();

  *(_QWORD *)&v1[v5] = v6;
  sub_1DC409838();
  __break(1u);
}

uint64_t *sub_1DC2E3F8C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1DC4052FC();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 24);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    *(_QWORD *)v9 = *(_QWORD *)v10;
    v9[8] = v10[8];
  }
  return a1;
}

uint64_t sub_1DC2E402C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = sub_1DC4052FC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_QWORD *)v8 = *(_QWORD *)v9;
  *(_BYTE *)(v8 + 8) = *(_BYTE *)(v9 + 8);
  return a1;
}

uint64_t sub_1DC2E40A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  v6 = sub_1DC4052FC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  v7 = *(int *)(a3 + 24);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_BYTE *)(v9 + 8);
  *(_QWORD *)v8 = *(_QWORD *)v9;
  *(_BYTE *)(v8 + 8) = v10;
  return a1;
}

uint64_t sub_1DC2E4118(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = sub_1DC4052FC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_QWORD *)v8 = *(_QWORD *)v9;
  *(_BYTE *)(v8 + 8) = *(_BYTE *)(v9 + 8);
  return a1;
}

uint64_t sub_1DC2E418C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = sub_1DC4052FC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_QWORD *)v8 = *(_QWORD *)v9;
  *(_BYTE *)(v8 + 8) = *(_BYTE *)(v9 + 8);
  return a1;
}

uint64_t sub_1DC2E4200()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC2E420C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1DC4052FC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_1DC2E4248()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC2E4254(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1DC4052FC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for StockChartViewLayoutOptions()
{
  uint64_t result;

  result = qword_1EDB37998;
  if (!qword_1EDB37998)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1DC2E42D0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1DC4052FC();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

BOOL static AppEvent.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t AppEvent.hash(into:)()
{
  return sub_1DC409ACC();
}

uint64_t AppEvent.hashValue.getter()
{
  sub_1DC409AC0();
  sub_1DC409ACC();
  return sub_1DC409AF0();
}

uint64_t type metadata accessor for VideoAdTracker()
{
  return objc_opt_self();
}

uint64_t sub_1DC2E43F4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  int v17;
  id v18;
  void *v19;
  id v20;
  uint64_t result;
  double v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _OWORD v39[2];

  v38 = a1;
  v3 = sub_1DC403244();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1DC40301C();
  v34 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC089DA4(0, (unint64_t *)&unk_1EDB28A70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v33 - v11;
  v13 = sub_1DC3FFDD0();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC40715C();
  v17 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v36 = v4;
  v37 = v3;
  if (v17 == 1)
  {
    sub_1DC212C0C((uint64_t)v12);
LABEL_9:
    sub_1DC407138();
    sub_1DC403238();
    sub_1DC089DA4(0, (unint64_t *)&qword_1EDB3FE40, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8178], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v28 = sub_1DC401618();
    v29 = *(_QWORD *)(v28 - 8);
    v30 = (*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
    v31 = swift_allocObject();
    *(_OWORD *)(v31 + 16) = xmmword_1DC40DC10;
    (*(void (**)(unint64_t, _QWORD, uint64_t))(v29 + 104))(v31 + v30, *MEMORY[0x1E0CF8170], v28);
    sub_1DC080808(&qword_1EDB297E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD260], MEMORY[0x1E0DAD250]);
    v32 = v37;
    sub_1DC4015C4();
    swift_bridgeObjectRelease();
    sub_1DC40376C();
    sub_1DC080808(&qword_1F0351680, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD988], MEMORY[0x1E0DAD980]);
    memset(v39, 0, sizeof(v39));
    sub_1DC4015DC();
    sub_1DC150744((uint64_t)v39);
    return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v6, v32);
  }
  v33 = v7;
  v35 = a2;
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v12, v13);
  v18 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D97770]), sel_init);
  v19 = (void *)sub_1DC3FFD88();
  v20 = objc_msgSend(v18, sel_identifierForURL_, v19);

  if (!v20)
  {
LABEL_8:
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    goto LABEL_9;
  }
  sub_1DC408A4C();

  result = sub_1DC407144();
  if ((~*(_QWORD *)&v22 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_11;
  }
  if (v22 <= -2147483650.0)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (v22 < 2147483650.0)
  {
    sub_1DC403010();
    sub_1DC089DA4(0, (unint64_t *)&qword_1EDB3FE40, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8178], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v23 = sub_1DC401618();
    v24 = *(_QWORD *)(v23 - 8);
    v25 = (*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
    v26 = swift_allocObject();
    *(_OWORD *)(v26 + 16) = xmmword_1DC40DC10;
    (*(void (**)(unint64_t, _QWORD, uint64_t))(v24 + 104))(v26 + v25, *MEMORY[0x1E0CF8170], v23);
    sub_1DC080808(&qword_1F0351670, (uint64_t (*)(uint64_t))MEMORY[0x1E0DACF10], MEMORY[0x1E0DACF00]);
    v27 = v33;
    sub_1DC4015C4();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v34 + 8))(v9, v27);
    goto LABEL_8;
  }
LABEL_12:
  __break(1u);
  return result;
}

uint64_t sub_1DC2E4898(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  char v25;
  double v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int *v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t, uint64_t);
  char *v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  char *v38;
  id v39;
  void *v40;
  id v41;
  double v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  char *v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _OWORD v69[3];

  v68 = a1;
  v3 = sub_1DC403244();
  v66 = *(_QWORD *)(v3 - 8);
  v67 = v3;
  MEMORY[0x1E0C80A78](v3);
  v65 = (char *)&v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1DC40301C();
  v57 = *(_QWORD *)(v5 - 8);
  v58 = v5;
  MEMORY[0x1E0C80A78](v5);
  v56 = (char *)&v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC089DA4(0, (unint64_t *)&unk_1EDB28A70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v55 - v8;
  v10 = sub_1DC3FFDD0();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v64 = (char *)&v55 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = sub_1DC403400();
  v13 = *(_QWORD *)(v60 - 8);
  MEMORY[0x1E0C80A78](v60);
  v61 = (char *)&v55 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1DC407120();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v55 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v55 - v20;
  v62 = sub_1DC403358();
  v22 = *(_QWORD *)(v62 - 8);
  MEMORY[0x1E0C80A78](v62);
  v63 = (char *)&v55 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(double *)&result = COERCE_DOUBLE(sub_1DC407150());
  if ((v25 & 1) == 0)
  {
    v55 = v11;
    v59 = a2;
    v26 = *(double *)&result * 1000.0;
    if ((~COERCE__INT64(*(double *)&result * 1000.0) & 0x7FF0000000000000) != 0)
    {
      if (v26 > -9.22337204e18)
      {
        if (v26 < 9.22337204e18)
        {
          sub_1DC40712C();
          (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v18, v21, v15);
          v27 = (*(uint64_t (**)(char *, uint64_t))(v16 + 88))(v18, v15);
          if (v27 == *MEMORY[0x1E0D53120])
          {
            (*(void (**)(char *, _QWORD, uint64_t))(v13 + 104))(v61, *MEMORY[0x1E0DAD4D0], v60);
            v28 = v62;
            v29 = v22;
LABEL_18:
            (*(void (**)(char *, uint64_t))(v16 + 8))(v21, v15);
            v33 = v63;
            sub_1DC40334C();
            sub_1DC089DA4(0, (unint64_t *)&qword_1EDB3FE40, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8178], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
            v34 = sub_1DC401618();
            v35 = *(_QWORD *)(v34 - 8);
            v36 = (*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80);
            v37 = swift_allocObject();
            *(_OWORD *)(v37 + 16) = xmmword_1DC40DC10;
            (*(void (**)(unint64_t, _QWORD, uint64_t))(v35 + 104))(v37 + v36, *MEMORY[0x1E0CF8170], v34);
            sub_1DC080808(&qword_1F0351678, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD3E8], MEMORY[0x1E0DAD3D8]);
            sub_1DC4015C4();
            swift_bridgeObjectRelease();
            (*(void (**)(char *, uint64_t))(v29 + 8))(v33, v28);
            v11 = v55;
            goto LABEL_19;
          }
          v29 = v22;
          if (v27 == *MEMORY[0x1E0D530F8])
          {
            v30 = (unsigned int *)MEMORY[0x1E0DAD4A8];
          }
          else if (v27 == *MEMORY[0x1E0D53100])
          {
            v30 = (unsigned int *)MEMORY[0x1E0DAD4B0];
          }
          else if (v27 == *MEMORY[0x1E0D53110])
          {
            v30 = (unsigned int *)MEMORY[0x1E0DAD4C0];
          }
          else
          {
            if (v27 != *MEMORY[0x1E0D53108])
            {
              v32 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 104);
              if (v27 != *MEMORY[0x1E0D53118])
              {
                v32(v61, *MEMORY[0x1E0DAD4D0], v60);
                (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
                goto LABEL_17;
              }
              v31 = *MEMORY[0x1E0DAD4C8];
LABEL_16:
              v32(v61, v31, v60);
LABEL_17:
              v28 = v62;
              goto LABEL_18;
            }
            v30 = (unsigned int *)MEMORY[0x1E0DAD4B8];
          }
          v31 = *v30;
          v32 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 104);
          goto LABEL_16;
        }
LABEL_33:
        __break(1u);
LABEL_34:
        __break(1u);
        goto LABEL_35;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_33;
  }
LABEL_19:
  sub_1DC40715C();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_1DC212C0C((uint64_t)v9);
LABEL_27:
    sub_1DC407138();
    v49 = v65;
    sub_1DC403238();
    sub_1DC089DA4(0, (unint64_t *)&qword_1EDB3FE40, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8178], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v50 = sub_1DC401618();
    v51 = *(_QWORD *)(v50 - 8);
    v52 = (*(unsigned __int8 *)(v51 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80);
    v53 = swift_allocObject();
    *(_OWORD *)(v53 + 16) = xmmword_1DC40DC10;
    (*(void (**)(unint64_t, _QWORD, uint64_t))(v51 + 104))(v53 + v52, *MEMORY[0x1E0CF8170], v50);
    sub_1DC080808(&qword_1EDB297E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD260], MEMORY[0x1E0DAD250]);
    v54 = v67;
    sub_1DC4015C4();
    swift_bridgeObjectRelease();
    sub_1DC4033F4();
    sub_1DC080808(&qword_1F0351668, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD4A0], MEMORY[0x1E0DAD498]);
    memset(v69, 0, 32);
    sub_1DC4015DC();
    sub_1DC150744((uint64_t)v69);
    *(double *)&result = COERCE_DOUBLE((*(uint64_t (**)(char *, uint64_t))(v66 + 8))(v49, v54));
    return result;
  }
  v38 = v64;
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v64, v9, v10);
  v39 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D97770]), sel_init);
  v40 = (void *)sub_1DC3FFD88();
  v41 = objc_msgSend(v39, sel_identifierForURL_, v40);

  if (!v41)
  {
LABEL_26:
    (*(void (**)(char *, uint64_t))(v11 + 8))(v38, v10);
    goto LABEL_27;
  }
  sub_1DC408A4C();

  *(double *)&result = COERCE_DOUBLE(sub_1DC407144());
  if ((~*(_QWORD *)&v42 & 0x7FF0000000000000) == 0)
    goto LABEL_34;
  if (v42 <= -2147483650.0)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  if (v42 < 2147483650.0)
  {
    v43 = v56;
    sub_1DC403010();
    sub_1DC089DA4(0, (unint64_t *)&qword_1EDB3FE40, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8178], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v44 = sub_1DC401618();
    v45 = *(_QWORD *)(v44 - 8);
    v46 = (*(unsigned __int8 *)(v45 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80);
    v47 = swift_allocObject();
    *(_OWORD *)(v47 + 16) = xmmword_1DC40DC10;
    (*(void (**)(unint64_t, _QWORD, uint64_t))(v45 + 104))(v47 + v46, *MEMORY[0x1E0CF8170], v44);
    sub_1DC080808(&qword_1F0351670, (uint64_t (*)(uint64_t))MEMORY[0x1E0DACF10], MEMORY[0x1E0DACF00]);
    v48 = v58;
    sub_1DC4015C4();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v57 + 8))(v43, v48);
    goto LABEL_26;
  }
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_1DC2E50F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DC2E5120(a1, a2, a3, (uint64_t)&unk_1EA461BC0, (uint64_t)sub_1DC2E5240);
}

uint64_t sub_1DC2E510C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DC2E5120(a1, a2, a3, (uint64_t)&unk_1EA461B98, (uint64_t)sub_1DC2E5230);
}

uint64_t sub_1DC2E5120(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  unint64_t v11;
  uint64_t v12;
  _QWORD v13[2];

  v13[1] = a5;
  v7 = sub_1DC407168();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x1E0C80A78](v7);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)v5 + 24), *(_QWORD *)(*(_QWORD *)v5 + 48));
  result = sub_1DC403838();
  if ((result & 1) != 0)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v7);
    v11 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    v12 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v12 + v11, (char *)v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
    sub_1DC401828();
    return swift_release();
  }
  return result;
}

uint64_t sub_1DC2E5230(uint64_t a1)
{
  return sub_1DC2E524C(a1, sub_1DC2E4898);
}

uint64_t sub_1DC2E5240(uint64_t a1)
{
  return sub_1DC2E524C(a1, sub_1DC2E43F4);
}

uint64_t sub_1DC2E524C(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v2;
  uint64_t v4;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(sub_1DC407168() - 8) + 80);
  return a2(a1, v2 + ((v4 + 16) & ~v4));
}

uint64_t sub_1DC2E5298(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  unsigned int *v14;
  uint64_t (*v15)(uint64_t);
  void (*v16)(char *, uint64_t);
  uint64_t v18;
  uint64_t v19;

  v3 = sub_1DC3FFFEC();
  v19 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1DC403A24();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1DC403A18();
  v18 = *(_QWORD *)(v10 - 8);
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(uint64_t *)(a2 + 64) >= 0)
    v14 = (unsigned int *)MEMORY[0x1E0DADDA0];
  else
    v14 = (unsigned int *)MEMORY[0x1E0DADD98];
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v7 + 104))(v9, *v14, v6, v11);
  sub_1DC403A0C();
  sub_1DC081B48(&qword_1EDB29948, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DADD90], MEMORY[0x1E0DADD80]);
  sub_1DC4015C4();
  sub_1DC4033E8();
  v15 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD490];
  sub_1DC401C84();
  sub_1DC081B48(&qword_1EDB29828, 255, v15, MEMORY[0x1E0DAD488]);
  sub_1DC401594();
  v16 = *(void (**)(char *, uint64_t))(v19 + 8);
  v16(v5, v3);
  sub_1DC401C78();
  sub_1DC4015A0();
  v16(v5, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v13, v10);
}

uint64_t sub_1DC2E54E0()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  sub_1DC17769C(*(_QWORD *)(v0 + 64));
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for TipInteractor()
{
  return objc_opt_self();
}

uint64_t sub_1DC2E553C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if (*(_QWORD *)(*(_QWORD *)v2 + 16))
  {
    sub_1DC081B48(&qword_1F0351690, a2, (uint64_t (*)(uint64_t))type metadata accessor for TipInteractor, (uint64_t)&unk_1DC425620);
    swift_retain();
    sub_1DC4013B4();
    return swift_release();
  }
  return result;
}

uint64_t sub_1DC2E55BC(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;

  sub_1DC133BB0(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1DC3FFDD0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v1;
  sub_1DC133B6C(a1, (uint64_t)v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
    return sub_1DC212C0C((uint64_t)v5);
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v5, v6);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v10 + 24), *(_QWORD *)(v10 + 48));
  sub_1DC40496C();
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1DC2E56D8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v3 = sub_1DC401C90();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  v6 = MEMORY[0x1E0C80A78](v3);
  v7 = *v1;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v4 + 16))((char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3, v6);
  v8 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v7;
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v9 + v8, (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
  swift_retain();
  sub_1DC401828();
  return swift_release();
}

uint64_t sub_1DC2E57C0(uint64_t a1, uint64_t a2)
{
  return sub_1DC081B48(&qword_1F0351688, a2, (uint64_t (*)(uint64_t))type metadata accessor for TipInteractor, (uint64_t)&unk_1DC4255E0);
}

uint64_t sub_1DC2E57EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1DC401C90();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1DC2E5860(uint64_t a1)
{
  uint64_t v1;

  sub_1DC401C90();
  return sub_1DC2E5298(a1, *(_QWORD *)(v1 + 16));
}

uint64_t type metadata accessor for StockFeedViewerStyler()
{
  return objc_opt_self();
}

ValueMetadata *type metadata accessor for BrandingTitleViewLayoutAttributes()
{
  return &type metadata for BrandingTitleViewLayoutAttributes;
}

uint64_t sub_1DC2E58D0()
{
  sub_1DC2E5944();
  return sub_1DC40625C();
}

unint64_t sub_1DC2E58FC()
{
  unint64_t result;

  result = qword_1EDB3B5D8;
  if (!qword_1EDB3B5D8)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC425764, &type metadata for BrandingTitleViewLayoutAttributes);
    atomic_store(result, (unint64_t *)&qword_1EDB3B5D8);
  }
  return result;
}

unint64_t sub_1DC2E5944()
{
  unint64_t result;

  result = qword_1EDB3B5D0;
  if (!qword_1EDB3B5D0)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC42579C, &type metadata for BrandingTitleViewLayoutAttributes);
    atomic_store(result, (unint64_t *)&qword_1EDB3B5D0);
  }
  return result;
}

uint64_t sub_1DC2E5988(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t, uint64_t);
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  void *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD v43[2];
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  __int128 v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v56 = a2;
  v3 = sub_1DC402FB0();
  v45 = *(_QWORD *)(v3 - 8);
  v46 = v3;
  MEMORY[0x1E0C80A78](v3);
  v44 = (char *)v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1DC4032BC();
  v6 = *(_QWORD *)(v5 - 8);
  v52 = v5;
  v53 = v6;
  MEMORY[0x1E0C80A78](v5);
  v51 = (uint64_t)v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1DC40325C();
  v9 = *(_QWORD *)(v8 - 8);
  v49 = v8;
  v50 = v9;
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1DC403A60();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1DC403A54();
  v48 = *(_QWORD *)(v16 - 8);
  v17 = MEMORY[0x1E0C80A78](v16);
  v19 = (char *)v43 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v13 + 104))(v15, *MEMORY[0x1E0DADDE0], v12, v17);
  sub_1DC403A3C();
  sub_1DC089DA4(0, (unint64_t *)&qword_1EDB3FE40, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8178], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v57 = v20;
  v21 = sub_1DC401618();
  v22 = *(_QWORD *)(v21 - 8);
  v47 = v21;
  v23 = *(unsigned __int8 *)(v22 + 80);
  v24 = (v23 + 32) & ~v23;
  v25 = v24 + *(_QWORD *)(v22 + 72);
  v55 = v23 | 7;
  v26 = swift_allocObject();
  v54 = xmmword_1DC40DC10;
  *(_OWORD *)(v26 + 16) = xmmword_1DC40DC10;
  v27 = *MEMORY[0x1E0CF8168];
  v28 = *(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 104);
  v28(v26 + v24, v27, v21);
  sub_1DC080808((unint64_t *)&qword_1EDB29950, (uint64_t (*)(uint64_t))MEMORY[0x1E0DADDD0], MEMORY[0x1E0DADDB0]);
  sub_1DC4015C4();
  v29 = a1;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v48 + 8))(v19, v16);
  v30 = (void *)sub_1DC401DB0();
  sub_1DC401DA4();
  sub_1DC403250();
  sub_1DC080808(&qword_1EDB297E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD278], MEMORY[0x1E0DAD268]);
  v31 = v49;
  sub_1DC4015C4();
  (*(void (**)(char *, uint64_t))(v50 + 8))(v11, v31);
  swift_getObjectType();
  v32 = v51;
  sub_1DC29A9A8(v51);
  v33 = v47;
  v49 = v25;
  v34 = swift_allocObject();
  *(_OWORD *)(v34 + 16) = v54;
  v43[0] = v24;
  LODWORD(v48) = v27;
  v28(v34 + v24, v27, v33);
  sub_1DC080808((unint64_t *)&unk_1EDB297F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD350], MEMORY[0x1E0DAD338]);
  v35 = v32;
  v43[1] = 0x80000001DC446280;
  v36 = v52;
  v50 = v29;
  sub_1DC4015C4();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v35, v36);
  v37 = objc_msgSend(v30, sel_sourceChannel);
  if (!v37)
    return swift_unknownObjectRelease();
  v38 = v37;
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v56 + 24), *(_QWORD *)(v56 + 48));
  v39 = v44;
  sub_1DC292AD8(v38);
  v40 = swift_allocObject();
  *(_OWORD *)(v40 + 16) = v54;
  v28(v40 + v43[0], v48, v33);
  sub_1DC080808((unint64_t *)&unk_1EDB29750, (uint64_t (*)(uint64_t))MEMORY[0x1E0DACE70], MEMORY[0x1E0DACE60]);
  v41 = v46;
  sub_1DC4015C4();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v39, v41);
}

uint64_t static String.endOfArticleFeedIdentifier.getter()
{
  return 0x747241664F646E45;
}

uint64_t sub_1DC2E5E98(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD v14[2];
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v18 = a1;
  v2 = sub_1DC402F5C();
  MEMORY[0x1E0C80A78](v2);
  v17 = (uint64_t)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1DC403A84();
  v14[0] = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v5 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1DC400010();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1DC403A78();
  v16 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14[1] = *(_QWORD *)(v1 + 16);
  sub_1DC400004();
  sub_1DC3FFFF8();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  (*(void (**)(char *, _QWORD, uint64_t))(v14[0] + 104))(v5, *MEMORY[0x1E0DADE38], v15);
  sub_1DC2E60AC(v17);
  sub_1DC403A6C();
  sub_1DC080808((unint64_t *)&unk_1EDB29970, (uint64_t (*)(uint64_t))MEMORY[0x1E0DADE28], MEMORY[0x1E0DADE18]);
  sub_1DC401870();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v12, v10);
  return sub_1DC40181C();
}

uint64_t sub_1DC2E60AC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  char v20;
  uint64_t v21;
  unsigned int *v22;
  uint64_t v23;

  v2 = sub_1DC40160C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1DC4061A8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC4060B8();
  v10 = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
  if (v10 == *MEMORY[0x1E0DBB5D8])
  {
    v11 = *MEMORY[0x1E0DACE00];
    v12 = sub_1DC402F5C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(a1, v11, v12);
  }
  else if (v10 == *MEMORY[0x1E0DBB5E8] || v10 == *MEMORY[0x1E0DBB5F0] || v10 == *MEMORY[0x1E0DBB5E0])
  {
    sub_1DC40184C();
    sub_1DC089DA4(0, &qword_1EDB3FE58, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8518], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v16 = *(_QWORD *)(sub_1DC4017BC() - 8);
    v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
    v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_1DC40DC10;
    v19 = (_QWORD *)(v18 + v17);
    *v19 = 0x656C6369747261;
    v19[1] = 0xE700000000000000;
    (*(void (**)(void))(v16 + 104))();
    v20 = sub_1DC401600();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    v21 = sub_1DC402F5C();
    if ((v20 & 1) != 0)
      v22 = (unsigned int *)MEMORY[0x1E0DACDD8];
    else
      v22 = (unsigned int *)MEMORY[0x1E0DACDD0];
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(a1, *v22, v21);
  }
  else
  {
    result = sub_1DC409838();
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC2E6348(char *a1)
{
  void (*v2)(char *, char *, uint64_t);
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t (*v33)(char *, uint64_t);
  char *v34;
  void (*v35)(char *, char *, uint64_t);
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v52;
  void (*v53)(char *, char *, _QWORD);
  char *v54;
  char *v55;
  uint64_t v56;
  void (*v57)(char *, char *, uint64_t);
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;

  sub_1DC2E99C0();
  v56 = *((_QWORD *)v2 - 1);
  v57 = v2;
  v3 = *(char **)(v56 + 64);
  MEMORY[0x1E0C80A78](v2);
  v55 = (char *)&v52 - ((unint64_t)(v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v58 = (char *)&v52 - v5;
  sub_1DC2E97E4(0, &qword_1F03516D8, MEMORY[0x1E0DB8880]);
  v7 = v6;
  v60 = *(_QWORD *)(v6 - 8);
  v59 = *(_QWORD *)(v60 + 64);
  MEMORY[0x1E0C80A78](v6);
  v67 = (char *)&v52 - v8;
  sub_1DC2E9A80();
  v65 = *(_QWORD *)(v9 - 8);
  v66 = v9;
  v10 = *(_QWORD *)(v65 + 64);
  MEMORY[0x1E0C80A78](v9);
  v62 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v63 = (char *)&v52 - v12;
  v13 = sub_1DC401C48();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC2E96C8();
  v18 = v17;
  v19 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v21 = (char *)&v52 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = v7;
  sub_1DC404DA4();
  sub_1DC404354();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
  v22 = (*(uint64_t (**)(char *, uint64_t))(v14 + 88))(v16, v13);
  if (v22 == *MEMORY[0x1E0D57180])
  {
    (*(void (**)(char *, uint64_t))(v14 + 96))(v16, v13);
    v23 = v65;
    v24 = v66;
    v57 = *(void (**)(char *, char *, uint64_t))(v65 + 32);
    v25 = v63;
    v57(v63, v16, v66);
    v26 = v64;
    v58 = *(char **)(v64 + 16);
    v27 = v60;
    v28 = a1;
    v29 = v61;
    (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v67, v28, v61);
    (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v62, v25, v24);
    v30 = (*(unsigned __int8 *)(v27 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
    v31 = (v59 + *(unsigned __int8 *)(v23 + 80) + v30) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
    v32 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v27 + 32))(v32 + v30, v67, v29);
    v57((char *)(v32 + v31), v62, v24);
    *(_QWORD *)(v32 + ((v10 + v31 + 7) & 0xFFFFFFFFFFFFFFF8)) = v26;
    swift_retain();
    sub_1DC401828();
    swift_release();
    v33 = *(uint64_t (**)(char *, uint64_t))(v23 + 8);
    v34 = v63;
  }
  else
  {
    v62 = v3;
    v63 = a1;
    v35 = v57;
    v36 = v58;
    v37 = v56;
    v38 = v64;
    v39 = v65;
    v24 = v66;
    if (v22 != *MEMORY[0x1E0D57188])
      return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    (*(void (**)(char *, uint64_t))(v14 + 96))(v16, v13);
    sub_1DC2E9B40();
    v54 = &v16[*(int *)(v40 + 48)];
    v53 = *(void (**)(char *, char *, _QWORD))(v37 + 32);
    v53(v36, v16, v35);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v38 + 72), *(_QWORD *)(v38 + 96));
    v41 = v37;
    v42 = v36;
    if ((sub_1DC403838() & 1) != 0)
    {
      v43 = v60;
      v44 = v61;
      v45 = v67;
      (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v67, v63, v61);
      v46 = v55;
      (*(void (**)(char *, char *, _QWORD))(v41 + 16))(v55, v42, v35);
      v47 = (*(unsigned __int8 *)(v43 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80);
      v48 = (v59 + *(unsigned __int8 *)(v41 + 80) + v47) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80);
      v49 = v41;
      v50 = swift_allocObject();
      (*(void (**)(unint64_t, char *, uint64_t))(v43 + 32))(v50 + v47, v45, v44);
      v53((char *)(v50 + v48), v46, v35);
      sub_1DC401828();
      swift_release();
      (*(void (**)(char *, void (*)(char *, char *, uint64_t)))(v49 + 8))(v58, v35);
      return (*(uint64_t (**)(char *, uint64_t))(v65 + 8))(v54, v66);
    }
    (*(void (**)(char *, void (*)(char *, char *, uint64_t)))(v37 + 8))(v36, v35);
    v33 = *(uint64_t (**)(char *, uint64_t))(v39 + 8);
    v34 = v54;
  }
  return v33(v34, v24);
}

uint64_t sub_1DC2E6818(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;
  void (*v54)(char *, uint64_t);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(_QWORD);
  void (*v65)(uint64_t, _QWORD, uint64_t);
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  void (**v73)(char *, uint64_t);
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  void (*v82)(uint64_t, _QWORD, uint64_t);
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  void (**v87)(_QWORD, _QWORD);
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  id v92;
  char *v93;
  void *v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  unsigned __int8 v98;
  uint64_t v99;
  char *v100;
  id v101;
  id v102;
  id v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  char *v117;
  char *v118;
  uint64_t v119;
  uint64_t (*v120)(uint64_t);
  char *v121;
  void (*v122)(char *, uint64_t);
  uint64_t v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  void (*v132)(char *, char *, uint64_t);
  uint64_t v133;
  char *v134;
  char *v135;
  char *v136;
  uint64_t v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  uint64_t v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  char *v157;
  char *v158;
  char *v159;
  void (**v160)(char *, uint64_t);
  uint64_t v161;
  char *v162;
  char *v163;
  char *v164;
  uint64_t v165;
  char *v166;
  char *v167;
  char *v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  void (*v175)(uint64_t, _QWORD, uint64_t);
  unint64_t v176;
  uint64_t v177;
  void (*v178)(char *, uint64_t);
  void (*v179)(char *, uint64_t);
  uint64_t v180;
  uint64_t v181;
  void (**v182)(_QWORD, _QWORD);
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  __int128 v188;
  unsigned int v189;
  uint64_t v190;

  v131 = a4;
  v171 = a3;
  v190 = a1;
  v148 = sub_1DC3FFFEC();
  v146 = *(_QWORD *)(v148 - 8);
  MEMORY[0x1E0C80A78](v148);
  v147 = (char *)&v124 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v143 = sub_1DC401C30();
  v141 = *(_QWORD *)(v143 - 8);
  MEMORY[0x1E0C80A78](v143);
  v138 = (char *)&v124 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v142 = sub_1DC407C84();
  v140 = *(_QWORD *)(v142 - 8);
  MEMORY[0x1E0C80A78](v142);
  v136 = (char *)&v124 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v139 = sub_1DC407BC4();
  v137 = *(_QWORD *)(v139 - 8);
  MEMORY[0x1E0C80A78](v139);
  v135 = (char *)&v124 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v170 = sub_1DC403A9C();
  v145 = *(_QWORD *)(v170 - 8);
  MEMORY[0x1E0C80A78](v170);
  v144 = (uint64_t)&v124 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v127 = sub_1DC403B2C();
  v126 = *(_QWORD *)(v127 - 8);
  MEMORY[0x1E0C80A78](v127);
  v125 = (char *)&v124 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v130 = sub_1DC402FB0();
  v129 = *(_QWORD *)(v130 - 8);
  MEMORY[0x1E0C80A78](v130);
  v128 = (char *)&v124 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1DC4032BC();
  v156 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v155 = (uint64_t)&v124 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v154 = sub_1DC407D50();
  v153 = *(_QWORD *)(v154 - 8);
  MEMORY[0x1E0C80A78](v154);
  v152 = (char *)&v124 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC2E9780();
  MEMORY[0x1E0C80A78](v15);
  v158 = (char *)&v124 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v166 = (char *)&v124 - v18;
  sub_1DC2E97E4(0, (unint64_t *)&qword_1F03514B0, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60]);
  v172 = v19;
  v165 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v134 = (char *)&v124 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v149 = (char *)&v124 - v22;
  sub_1DC089DA4(0, &qword_1EDB2A570, (uint64_t (*)(uint64_t))MEMORY[0x1E0DBB250], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v23);
  v168 = (char *)&v124 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v25);
  v164 = (char *)&v124 - v26;
  v180 = sub_1DC403B08();
  v151 = *(_QWORD *)(v180 - 8);
  MEMORY[0x1E0C80A78](v180);
  v169 = (uint64_t)&v124 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v28);
  v150 = (uint64_t)&v124 - v29;
  v161 = sub_1DC403598();
  v160 = *(void (***)(char *, uint64_t))(v161 - 8);
  MEMORY[0x1E0C80A78](v161);
  v159 = (char *)&v124 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC2E96C8();
  v187 = v31;
  v32 = *(_QWORD *)(v31 - 8);
  MEMORY[0x1E0C80A78](v31);
  v167 = (char *)&v124 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v34);
  v163 = (char *)&v124 - v35;
  MEMORY[0x1E0C80A78](v36);
  v38 = (char *)&v124 - v37;
  sub_1DC2E97E4(0, (unint64_t *)&qword_1F0350488, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790]);
  v40 = v39;
  v41 = *(_QWORD *)(v39 - 8);
  MEMORY[0x1E0C80A78](v39);
  v157 = (char *)&v124 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v43);
  v162 = (char *)&v124 - v44;
  MEMORY[0x1E0C80A78](v45);
  v47 = (char *)&v124 - v46;
  v48 = sub_1DC4033A0();
  v182 = *(void (***)(_QWORD, _QWORD))(v48 - 8);
  MEMORY[0x1E0C80A78](v48);
  v50 = (char *)&v124 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC2E97E4(0, &qword_1F03516D8, MEMORY[0x1E0DB8880]);
  v52 = v51;
  sub_1DC404DBC();
  v181 = v52;
  v174 = a2;
  sub_1DC404DA4();
  sub_1DC080808(&qword_1F03516A8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D57190], MEMORY[0x1E0D57150]);
  v173 = v40;
  result = sub_1DC406D30();
  if (result < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_14;
  }
  if (result > 0x7FFFFFFF)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v133 = v12;
  sub_1DC403394();
  v179 = *(void (**)(char *, uint64_t))(v32 + 8);
  v179(v38, v187);
  v54 = *(void (**)(char *, uint64_t))(v41 + 8);
  v55 = v173;
  v178 = v54;
  v54(v47, v173);
  sub_1DC089DA4(0, (unint64_t *)&qword_1EDB3FE40, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8178], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v57 = v56;
  v58 = sub_1DC401618();
  v59 = *(_QWORD *)(v58 - 8);
  v60 = *(_QWORD *)(v59 + 72);
  v61 = *(unsigned __int8 *)(v59 + 80);
  v62 = (v61 + 32) & ~v61;
  v184 = v61 | 7;
  v185 = v57;
  v183 = v62 + v60;
  v63 = swift_allocObject();
  v188 = xmmword_1DC40DC10;
  *(_OWORD *)(v63 + 16) = xmmword_1DC40DC10;
  v177 = v62;
  v64 = *(void (**)(_QWORD))(v59 + 104);
  v189 = *MEMORY[0x1E0CF8170];
  v186 = v58;
  v65 = (void (*)(uint64_t, _QWORD, uint64_t))v64;
  v64(v63 + v62);
  sub_1DC080808(&qword_1EDB29820, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD438], MEMORY[0x1E0DAD428]);
  v176 = (unint64_t)"articleFooterContext";
  sub_1DC4015C4();
  swift_bridgeObjectRelease();
  v66 = v55;
  ((void (**)(char *, uint64_t))v182)[1](v50, v48);
  sub_1DC404DBC();
  sub_1DC404DA4();
  result = sub_1DC406D3C();
  if (result < (uint64_t)0xFFFFFFFF80000000)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (result > 0x7FFFFFFF)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v67 = v159;
  sub_1DC40358C();
  v179(v38, v187);
  v178(v47, v55);
  v68 = swift_allocObject();
  *(_OWORD *)(v68 + 16) = v188;
  v175 = v65;
  v65(v68 + v177, v189, v186);
  sub_1DC080808((unint64_t *)&unk_1EDB29880, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD6D0], MEMORY[0x1E0DAD6C0]);
  v182 = (void (**)(_QWORD, _QWORD))(v176 | 0x8000000000000000);
  v69 = v161;
  sub_1DC4015C4();
  swift_bridgeObjectRelease();
  v160[1](v67, v69);
  v70 = v162;
  sub_1DC404DBC();
  v71 = v163;
  sub_1DC404DA4();
  v72 = sub_1DC405FF8();
  v73 = *(void (***)(char *, uint64_t))(*(_QWORD *)(v72 - 8) + 56);
  v74 = (uint64_t)v164;
  v161 = v72;
  v160 = v73;
  ((void (*)(char *, uint64_t, uint64_t))v73)(v164, 1, 1);
  sub_1DC404324();
  v75 = v166;
  sub_1DC406CC4();
  swift_bridgeObjectRelease();
  v76 = v165;
  v77 = v172;
  v159 = *(char **)(v165 + 48);
  result = ((uint64_t (*)(char *, uint64_t, uint64_t))v159)(v75, 1, v172);
  if ((_DWORD)result == 1)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v78 = (uint64_t)v149;
  v132 = *(void (**)(char *, char *, uint64_t))(v76 + 32);
  v132(v149, v75, v77);
  v79 = v150;
  sub_1DC2D444C(v78, v74, v150);
  v165 = *(_QWORD *)(v76 + 8);
  ((void (*)(uint64_t, uint64_t))v165)(v78, v77);
  sub_1DC2E98B0(v74);
  v179(v71, v187);
  v178(v70, v66);
  v80 = swift_allocObject();
  *(_OWORD *)(v80 + 16) = v188;
  v81 = v177;
  v82 = v175;
  v175(v80 + v177, v189, v186);
  v83 = sub_1DC080808(&qword_1EDB27520, (uint64_t (*)(uint64_t))MEMORY[0x1E0DADF38], MEMORY[0x1E0DADF08]);
  v84 = v180;
  v164 = (char *)v83;
  sub_1DC4015C4();
  swift_bridgeObjectRelease();
  v166 = *(char **)(v151 + 8);
  ((void (*)(uint64_t, uint64_t))v166)(v79, v84);
  sub_1DC2E9A80();
  v85 = v152;
  v163 = v86;
  sub_1DC407C18();
  v87 = (void (**)(_QWORD, _QWORD))sub_1DC407D38();
  (*(void (**)(char *, uint64_t))(v153 + 8))(v85, v154);
  swift_getObjectType();
  v88 = v155;
  sub_1DC29A9A8(v155);
  v89 = swift_allocObject();
  *(_OWORD *)(v89 + 16) = v188;
  v90 = v186;
  v82(v89 + v81, v189, v186);
  sub_1DC080808((unint64_t *)&unk_1EDB297F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD350], MEMORY[0x1E0DAD338]);
  v91 = v133;
  sub_1DC4015C4();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v156 + 8))(v88, v91);
  v182 = v87;
  v92 = objc_msgSend(v87, sel_sourceChannel);
  v93 = v157;
  if (v92)
  {
    v94 = v92;
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v131 + 24), *(_QWORD *)(v131 + 48));
    v95 = v128;
    sub_1DC292AD8(v94);
    v96 = swift_allocObject();
    *(_OWORD *)(v96 + 16) = v188;
    v82(v96 + v81, v189, v90);
    sub_1DC080808((unint64_t *)&unk_1EDB29750, (uint64_t (*)(uint64_t))MEMORY[0x1E0DACE70], MEMORY[0x1E0DACE60]);
    v97 = v130;
    sub_1DC4015C4();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v129 + 8))(v95, v97);
  }
  v98 = objc_msgSend(v182, sel_respondsToSelector_, sel_parentIssue);
  v99 = (uint64_t)v168;
  v100 = v167;
  if ((v98 & 1) != 0)
  {
    v101 = objc_msgSend(v182, sel_parentIssue);
    if (v101)
    {
      v102 = v101;
      v103 = objc_msgSend(v102, sel_identifier);
      sub_1DC408A4C();

      v104 = v125;
      v100 = v167;
      sub_1DC403B20();
      v105 = swift_allocObject();
      *(_OWORD *)(v105 + 16) = v188;
      v175(v105 + v81, v189, v90);
      sub_1DC080808(&qword_1EDB29990, (uint64_t (*)(uint64_t))MEMORY[0x1E0DADF98], MEMORY[0x1E0DADF88]);
      v106 = v127;
      sub_1DC4015C4();

      swift_bridgeObjectRelease();
      v107 = v106;
      v99 = (uint64_t)v168;
      (*(void (**)(char *, uint64_t))(v126 + 8))(v104, v107);
    }
  }
  sub_1DC404DBC();
  sub_1DC404DA4();
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v160)(v99, 1, 1, v161);
  v108 = v187;
  sub_1DC404324();
  v109 = v158;
  v110 = v173;
  v111 = v93;
  sub_1DC406CC4();
  swift_bridgeObjectRelease();
  v112 = v172;
  result = ((uint64_t (*)(char *, uint64_t, uint64_t))v159)(v109, 1, v172);
  if ((_DWORD)result != 1)
  {
    v113 = v100;
    v114 = (uint64_t)v134;
    v132(v134, v109, v112);
    sub_1DC2D444C(v114, v99, v169);
    ((void (*)(uint64_t, uint64_t))v165)(v114, v112);
    sub_1DC2E98B0(v99);
    v179(v113, v108);
    v178(v111, v110);
    v115 = swift_allocObject();
    *(_OWORD *)(v115 + 16) = v188;
    v175(v115 + v177, v189, v186);
    sub_1DC4015C4();
    swift_bridgeObjectRelease();
    v116 = v136;
    sub_1DC407C24();
    v117 = v138;
    sub_1DC407C30();
    sub_1DC401C24();
    (*(void (**)(char *, uint64_t))(v141 + 8))(v117, v143);
    v118 = v135;
    sub_1DC407C78();
    (*(void (**)(char *, uint64_t))(v140 + 8))(v116, v142);
    v119 = v144;
    sub_1DC1D5B68(v144);
    (*(void (**)(char *, uint64_t))(v137 + 8))(v118, v139);
    sub_1DC080808(&qword_1EDB29980, (uint64_t (*)(uint64_t))MEMORY[0x1E0DADE58], MEMORY[0x1E0DADE48]);
    sub_1DC4015C4();
    sub_1DC403868();
    v120 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DADAF0];
    v121 = v147;
    sub_1DC404DC8();
    sub_1DC080808(&qword_1EDB29920, v120, MEMORY[0x1E0DADAE8]);
    sub_1DC401594();
    v122 = *(void (**)(char *, uint64_t))(v146 + 8);
    v123 = v148;
    v122(v121, v148);
    sub_1DC404DB0();
    sub_1DC4015A0();
    swift_unknownObjectRelease();
    v122(v121, v123);
    (*(void (**)(uint64_t, uint64_t))(v145 + 8))(v119, v170);
    return ((uint64_t (*)(uint64_t, uint64_t))v166)(v169, v180);
  }
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_1DC2E7A74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t result;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(_QWORD);
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t (*v84)(uint64_t);
  char *v85;
  void (*v86)(char *, uint64_t);
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  char *v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  _QWORD *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  char *v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  unint64_t v115;
  void (*v116)(char *, uint64_t);
  void (*v117)(char *, uint64_t);
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  char *v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  __int128 v138;
  unsigned int v139;
  void (*v140)(uint64_t, _QWORD, uint64_t);

  v132 = a3;
  v136 = a1;
  v102 = sub_1DC3FFFEC();
  v98 = *(_QWORD *)(v102 - 8);
  MEMORY[0x1E0C80A78](v102);
  v101 = (char *)&v88 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v100 = sub_1DC403244();
  v99 = *(_QWORD *)(v100 - 8);
  MEMORY[0x1E0C80A78](v100);
  v129 = (char *)&v88 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v95 = sub_1DC403A60();
  v93 = *(_QWORD *)(v95 - 8);
  MEMORY[0x1E0C80A78](v95);
  v94 = (char *)&v88 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v128 = sub_1DC402EC0();
  v97 = *(_QWORD *)(v128 - 8);
  MEMORY[0x1E0C80A78](v128);
  v127 = (char *)&v88 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v126 = sub_1DC402F74();
  v96 = *(_QWORD *)(v126 - 8);
  MEMORY[0x1E0C80A78](v126);
  v125 = (char *)&v88 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC2E9780();
  MEMORY[0x1E0C80A78](v9);
  v113 = (char *)&v88 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC2E97E4(0, (unint64_t *)&qword_1F03514B0, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60]);
  v114 = v11;
  v112 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v91 = (char *)&v88 - v12;
  sub_1DC089DA4(0, &qword_1EDB2A570, (uint64_t (*)(uint64_t))MEMORY[0x1E0DBB250], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v13);
  v111 = (char *)&v88 - v14;
  v15 = sub_1DC403B08();
  v123 = *(_QWORD *)(v15 - 8);
  v124 = v15;
  MEMORY[0x1E0C80A78](v15);
  v92 = (char *)&v88 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v122 = (uint64_t)&v88 - v18;
  v109 = sub_1DC4032BC();
  v108 = *(_QWORD *)(v109 - 8);
  MEMORY[0x1E0C80A78](v109);
  v107 = (uint64_t)&v88 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v131 = sub_1DC407240();
  v106 = *(_QWORD *)(v131 - 8);
  MEMORY[0x1E0C80A78](v131);
  v130 = (char *)&v88 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v105 = (_QWORD *)sub_1DC403598();
  v104 = *(v105 - 1);
  MEMORY[0x1E0C80A78](v105);
  v103 = (char *)&v88 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC2E96C8();
  v137 = v22;
  v23 = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v22);
  v110 = (char *)&v88 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v25);
  v27 = (char *)&v88 - v26;
  sub_1DC2E97E4(0, (unint64_t *)&qword_1F0350488, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790]);
  v29 = v28;
  v30 = *(_QWORD *)(v28 - 8);
  MEMORY[0x1E0C80A78](v28);
  v32 = (char *)&v88 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v33);
  v35 = (char *)&v88 - v34;
  v36 = sub_1DC4033A0();
  v115 = *(_QWORD *)(v36 - 8);
  MEMORY[0x1E0C80A78](v36);
  v38 = (char *)&v88 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC2E97E4(0, &qword_1F03516D8, MEMORY[0x1E0DB8880]);
  v40 = v39;
  sub_1DC404DBC();
  v134 = v40;
  v135 = a2;
  sub_1DC404DA4();
  sub_1DC080808(&qword_1F03516A8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D57190], MEMORY[0x1E0D57150]);
  result = sub_1DC406D30();
  if (result < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (result > 0x7FFFFFFF)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v90 = v32;
  sub_1DC403394();
  v117 = *(void (**)(char *, uint64_t))(v23 + 8);
  v117(v27, v137);
  v116 = *(void (**)(char *, uint64_t))(v30 + 8);
  v116(v35, v29);
  sub_1DC089DA4(0, (unint64_t *)&qword_1EDB3FE40, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8178], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v43 = v42;
  v44 = sub_1DC401618();
  v45 = *(_QWORD *)(v44 - 8);
  v46 = *(unsigned __int8 *)(v45 + 80);
  v47 = v29;
  v48 = (v46 + 32) & ~v46;
  v49 = v48 + *(_QWORD *)(v45 + 72);
  v120 = v43;
  v118 = v49;
  v133 = v46 | 7;
  v50 = swift_allocObject();
  v138 = xmmword_1DC40DC10;
  *(_OWORD *)(v50 + 16) = xmmword_1DC40DC10;
  v119 = v48;
  v51 = *(void (**)(_QWORD))(v45 + 104);
  v139 = *MEMORY[0x1E0CF8170];
  v121 = v44;
  v140 = (void (*)(uint64_t, _QWORD, uint64_t))v51;
  v51(v50 + v48);
  sub_1DC080808(&qword_1EDB29820, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD438], MEMORY[0x1E0DAD428]);
  sub_1DC4015C4();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v115 + 8))(v38, v36);
  sub_1DC404DBC();
  sub_1DC404DA4();
  result = sub_1DC406D3C();
  if (result < (uint64_t)0xFFFFFFFF80000000)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (result > 0x7FFFFFFF)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v52 = v103;
  sub_1DC40358C();
  v117(v27, v137);
  v116(v35, v47);
  v89 = v47;
  v53 = swift_allocObject();
  *(_OWORD *)(v53 + 16) = v138;
  v54 = v119;
  v55 = v121;
  v140(v53 + v119, v139, v121);
  sub_1DC080808((unint64_t *)&unk_1EDB29880, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD6D0], MEMORY[0x1E0DAD6C0]);
  v115 = 0x80000001DC446280;
  v56 = v105;
  sub_1DC4015C4();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, _QWORD *))(v104 + 8))(v52, v56);
  sub_1DC2E99C0();
  v57 = v130;
  v104 = v58;
  sub_1DC407C18();
  v59 = sub_1DC407234();
  v105 = *(_QWORD **)(v106 + 8);
  ((void (*)(char *, uint64_t))v105)(v57, v131);
  swift_getObjectType();
  v60 = v107;
  v106 = v59;
  sub_1DC29A9A8(v107);
  v61 = swift_allocObject();
  *(_OWORD *)(v61 + 16) = v138;
  v62 = v61 + v54;
  v63 = v137;
  v140(v62, v139, v55);
  sub_1DC080808((unint64_t *)&unk_1EDB297F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD350], MEMORY[0x1E0DAD338]);
  v64 = v109;
  sub_1DC4015C4();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v108 + 8))(v60, v64);
  v65 = v90;
  sub_1DC404DBC();
  v66 = v110;
  sub_1DC404DA4();
  v67 = sub_1DC405FF8();
  v68 = (uint64_t)v111;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v67 - 8) + 56))(v111, 1, 1, v67);
  sub_1DC404324();
  v69 = v113;
  v70 = v89;
  sub_1DC406CC4();
  v71 = v69;
  swift_bridgeObjectRelease();
  v72 = v112;
  v73 = v114;
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v112 + 48))(v71, 1, v114);
  if ((_DWORD)result != 1)
  {
    v74 = (uint64_t)v91;
    (*(void (**)(char *, char *, uint64_t))(v72 + 32))(v91, v71, v73);
    v75 = v122;
    sub_1DC2D444C(v74, v68, v122);
    (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v74, v73);
    sub_1DC2E98B0(v68);
    v117(v66, v63);
    v116(v65, v70);
    v76 = swift_allocObject();
    *(_OWORD *)(v76 + 16) = v138;
    v77 = v119;
    v78 = v121;
    v140(v76 + v119, v139, v121);
    sub_1DC080808(&qword_1EDB27520, (uint64_t (*)(uint64_t))MEMORY[0x1E0DADF38], MEMORY[0x1E0DADF08]);
    v79 = v124;
    sub_1DC4015C4();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t, uint64_t))(v123 + 16))(v92, v75, v79);
    sub_1DC402F68();
    sub_1DC080808(qword_1F0350F70, (uint64_t (*)(uint64_t))MEMORY[0x1E0DACE28], MEMORY[0x1E0DACE18]);
    sub_1DC4015C4();
    (*(void (**)(char *, _QWORD, uint64_t))(v93 + 104))(v94, *MEMORY[0x1E0DADDE0], v95);
    sub_1DC402EB4();
    sub_1DC080808(&qword_1EDB29730, (uint64_t (*)(uint64_t))MEMORY[0x1E0DACCD8], MEMORY[0x1E0DACCC8]);
    sub_1DC4015C4();
    v80 = v130;
    v81 = sub_1DC407C18();
    MEMORY[0x1DF0C7A9C](v81);
    ((void (*)(char *, uint64_t))v105)(v80, v131);
    sub_1DC403238();
    v82 = swift_allocObject();
    *(_OWORD *)(v82 + 16) = v138;
    v140(v82 + v77, v139, v78);
    sub_1DC080808(&qword_1EDB297E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD260], MEMORY[0x1E0DAD250]);
    v83 = v100;
    sub_1DC4015C4();
    swift_bridgeObjectRelease();
    sub_1DC4037C0();
    v84 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD9E8];
    v85 = v101;
    sub_1DC404DC8();
    sub_1DC080808(&qword_1F0351700, v84, MEMORY[0x1E0DAD9E0]);
    sub_1DC401594();
    v86 = *(void (**)(char *, uint64_t))(v98 + 8);
    v87 = v102;
    v86(v85, v102);
    sub_1DC404DB0();
    sub_1DC4015A0();
    swift_unknownObjectRelease();
    v86(v85, v87);
    (*(void (**)(char *, uint64_t))(v99 + 8))(v129, v83);
    (*(void (**)(char *, uint64_t))(v97 + 8))(v127, v128);
    (*(void (**)(char *, uint64_t))(v96 + 8))(v125, v126);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v123 + 8))(v122, v124);
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1DC2E8884(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(uint64_t);
  uint64_t v28;
  void (*v29)(char *, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v36 = a1;
  v3 = sub_1DC3FFFEC();
  v37 = *(_QWORD *)(v3 - 8);
  v38 = v3;
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC2E97E4(0, (unint64_t *)&qword_1F03514B0, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60]);
  v32 = v6;
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v31 - v8;
  sub_1DC2E97E4(0, (unint64_t *)&qword_1F0350488, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790]);
  v11 = v10;
  v12 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v31 - v13;
  v15 = sub_1DC403B08();
  v16 = *(_QWORD *)(v15 - 8);
  v34 = v15;
  v35 = v16;
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v31 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC089DA4(0, &qword_1EDB2A570, (uint64_t (*)(uint64_t))MEMORY[0x1E0DBB250], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v31 - v20;
  sub_1DC2E97E4(0, &qword_1F03516B0, MEMORY[0x1E0DBA640]);
  v33 = a2;
  sub_1DC405B00();
  sub_1DC405AE8();
  sub_1DC405ADC();
  sub_1DC2D444C((uint64_t)v9, (uint64_t)v21, (uint64_t)v18);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v32);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  sub_1DC089DA4(0, (unint64_t *)&qword_1EDB3FE40, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8178], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v22 = sub_1DC401618();
  v23 = *(_QWORD *)(v22 - 8);
  v24 = (*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
  v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_1DC40DC10;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v23 + 104))(v25 + v24, *MEMORY[0x1E0CF8168], v22);
  sub_1DC080808(&qword_1EDB27520, (uint64_t (*)(uint64_t))MEMORY[0x1E0DADF38], MEMORY[0x1E0DADF08]);
  v26 = v34;
  sub_1DC4015C4();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v18, v26);
  sub_1DC403694();
  v27 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD840];
  sub_1DC405AF4();
  sub_1DC080808(&qword_1F03516B8, v27, MEMORY[0x1E0DAD838]);
  sub_1DC401594();
  v28 = v38;
  v29 = *(void (**)(char *, uint64_t))(v37 + 8);
  v29(v5, v38);
  sub_1DC405AD0();
  sub_1DC4015A0();
  v29(v5, v28);
  return sub_1DC2E98B0((uint64_t)v21);
}

uint64_t sub_1DC2E8C28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t result;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  const char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  v54 = a2;
  v55 = a3;
  v4 = sub_1DC403598();
  v43 = *(_QWORD *)(v4 - 8);
  v44 = v4;
  MEMORY[0x1E0C80A78](v4);
  v42 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1DC4033A0();
  v47 = *(_QWORD *)(v6 - 8);
  v48 = v6;
  MEMORY[0x1E0C80A78](v6);
  v46 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC2E9780();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC2E97E4(0, (unint64_t *)&qword_1F03514B0, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60]);
  v12 = *(_QWORD *)(v11 - 8);
  v52 = v11;
  v53 = v12;
  MEMORY[0x1E0C80A78](v11);
  v49 = (char *)&v41 - v13;
  sub_1DC089DA4(0, &qword_1EDB2A570, (uint64_t (*)(uint64_t))MEMORY[0x1E0DBB250], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v41 - v15;
  v17 = sub_1DC403B08();
  v50 = *(_QWORD *)(v17 - 8);
  v51 = v17;
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v41 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_1DC403A60();
  v21 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  v23 = (char *)&v41 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_1DC403A54();
  v25 = *(_QWORD *)(v24 - 8);
  v26 = MEMORY[0x1E0C80A78](v24);
  v28 = (char *)&v41 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = v20;
  v30 = v10;
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v21 + 104))(v23, *MEMORY[0x1E0DADDE0], v29, v26);
  sub_1DC403A3C();
  sub_1DC080808((unint64_t *)&qword_1EDB29950, (uint64_t (*)(uint64_t))MEMORY[0x1E0DADDD0], MEMORY[0x1E0DADDB0]);
  v45 = "articleFooterContext";
  v56 = a1;
  sub_1DC4015C4();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v28, v24);
  v31 = sub_1DC405FF8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v16, 1, 1, v31);
  sub_1DC2E96C8();
  sub_1DC404324();
  sub_1DC2E97E4(0, (unint64_t *)&qword_1F0350488, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790]);
  sub_1DC406CC4();
  v32 = v52;
  swift_bridgeObjectRelease();
  v33 = v53;
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v53 + 48))(v10, 1, v32);
  if ((_DWORD)result == 1)
    goto LABEL_11;
  v35 = (uint64_t)v49;
  (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v49, v30, v32);
  sub_1DC2D444C(v35, (uint64_t)v16, (uint64_t)v19);
  (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v35, v32);
  sub_1DC2E98B0((uint64_t)v16);
  sub_1DC080808(&qword_1EDB27520, (uint64_t (*)(uint64_t))MEMORY[0x1E0DADF38], MEMORY[0x1E0DADF08]);
  v36 = v51;
  sub_1DC4015C4();
  (*(void (**)(char *, uint64_t))(v50 + 8))(v19, v36);
  sub_1DC080808(&qword_1F03516A8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D57190], MEMORY[0x1E0D57150]);
  result = sub_1DC406D30();
  if (result < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (result > 0x7FFFFFFF)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v37 = v46;
  sub_1DC403394();
  sub_1DC080808(&qword_1EDB29820, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD438], MEMORY[0x1E0DAD428]);
  v38 = v48;
  sub_1DC4015C4();
  (*(void (**)(char *, uint64_t))(v47 + 8))(v37, v38);
  result = sub_1DC406D3C();
  if (result >= (uint64_t)0xFFFFFFFF80000000)
  {
    if (result <= 0x7FFFFFFF)
    {
      v39 = v42;
      sub_1DC40358C();
      sub_1DC080808((unint64_t *)&unk_1EDB29880, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD6D0], MEMORY[0x1E0DAD6C0]);
      v40 = v44;
      sub_1DC4015C4();
      return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v39, v40);
    }
    goto LABEL_10;
  }
LABEL_9:
  __break(1u);
LABEL_10:
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1DC2E91BC()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);

  __swift_destroy_boxed_opaque_existential_1(v0 + 72);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for EndOfArticleCoordinator()
{
  return objc_opt_self();
}

uint64_t sub_1DC2E9218()
{
  swift_retain();
  sub_1DC401828();
  return swift_release();
}

uint64_t sub_1DC2E9254(uint64_t a1)
{
  return sub_1DC2E5E98(a1);
}

uint64_t sub_1DC2E9274()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t (*v4)(uint64_t);
  void (*v5)(char *, uint64_t);
  uint64_t v7;

  v0 = sub_1DC3FFFEC();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC403388();
  v4 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD420];
  sub_1DC405B24();
  sub_1DC080808(&qword_1F0351708, v4, MEMORY[0x1E0DAD418]);
  sub_1DC401840();
  v5 = *(void (**)(char *, uint64_t))(v1 + 8);
  v5(v3, v0);
  sub_1DC405B18();
  sub_1DC401858();
  return ((uint64_t (*)(char *, uint64_t))v5)(v3, v0);
}

uint64_t sub_1DC2E9388(char *a1)
{
  return sub_1DC2E6348(a1);
}

uint64_t sub_1DC2E93A8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v11;

  sub_1DC2E97E4(0, &qword_1F03516B0, MEMORY[0x1E0DBA640]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  v5 = MEMORY[0x1E0C80A78](v2);
  v7 = (char *)&v11 - v6;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v4 + 16))((char *)&v11 - v6, a1, v3, v5);
  v8 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v9 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v9 + v8, v7, v3);
  sub_1DC401828();
  return swift_release();
}

uint64_t sub_1DC2E9494()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v6;

  v0 = sub_1DC4017BC();
  v1 = *(_QWORD *)(v0 - 8);
  v2 = MEMORY[0x1E0C80A78](v0);
  v4 = (uint64_t *)((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  *v4 = 0x656E696C64616568;
  v4[1] = 0xE800000000000000;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, __n128))(v1 + 104))(v4, *MEMORY[0x1E0CF8500], v0, v2);
  sub_1DC40187C();
  return (*(uint64_t (**)(_QWORD *, uint64_t))(v1 + 8))(v4, v0);
}

uint64_t sub_1DC2E954C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  char *v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD v20[2];

  v3 = v2;
  v20[0] = a1;
  sub_1DC2E96C8();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](v5);
  sub_1DC2E97E4(0, (unint64_t *)&qword_1F0350488, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790]);
  v10 = v9;
  v11 = *(_QWORD *)(v9 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  v13 = MEMORY[0x1E0C80A78](v9);
  v15 = (char *)v20 - v14;
  v20[1] = *(_QWORD *)(*(_QWORD *)v3 + 16);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v11 + 16))((char *)v20 - v14, a2, v10, v13);
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 16))((char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v20[0], v6);
  v16 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v17 = (v12 + *(unsigned __int8 *)(v7 + 80) + v16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v18 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v18 + v16, v15, v10);
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v18 + v17, (char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  sub_1DC401828();
  return swift_release();
}

void sub_1DC2E96C8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F0351698)
  {
    sub_1DC401C48();
    sub_1DC080808(&qword_1F03514C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D57190], MEMORY[0x1E0D57158]);
    v0 = sub_1DC40436C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1F0351698);
  }
}

uint64_t sub_1DC2E9740()
{
  return objectdestroyTm_10((unint64_t *)&qword_1F0350488, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790], (uint64_t (*)(_QWORD))sub_1DC2E96C8);
}

uint64_t sub_1DC2E975C(uint64_t a1)
{
  return sub_1DC2E9BF0(a1, (unint64_t *)&qword_1F0350488, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790], (uint64_t (*)(_QWORD))sub_1DC2E96C8, (uint64_t (*)(uint64_t, unint64_t, unint64_t))sub_1DC2E8C28);
}

void sub_1DC2E9780()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F03516A0)
  {
    sub_1DC2E97E4(255, (unint64_t *)&qword_1F03514B0, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60]);
    v0 = sub_1DC4095A4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1F03516A0);
  }
}

void sub_1DC2E97E4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *))
{
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  uint64_t (*v9)(uint64_t);
  unint64_t v10;
  uint64_t v11;
  _QWORD v12[4];

  if (!*a2)
  {
    v6 = sub_1DC402218();
    v7 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D57CF8];
    v8 = sub_1DC401C48();
    v9 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D57190];
    v12[0] = v6;
    v12[1] = v8;
    v12[2] = sub_1DC080808(&qword_1F0350480, v7, MEMORY[0x1E0D57CC8]);
    v12[3] = sub_1DC080808(&qword_1F03514C0, v9, MEMORY[0x1E0D57158]);
    v10 = a3(a1, v12);
    if (!v11)
      atomic_store(v10, a2);
  }
}

uint64_t sub_1DC2E98B0(uint64_t a1)
{
  uint64_t v2;

  sub_1DC089DA4(0, &qword_1EDB2A570, (uint64_t (*)(uint64_t))MEMORY[0x1E0DBB250], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DC2E9904()
{
  uint64_t v0;
  uint64_t v1;

  sub_1DC2E97E4(0, &qword_1F03516B0, MEMORY[0x1E0DBA640]);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_1DC2E9974(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  sub_1DC2E97E4(0, &qword_1F03516B0, MEMORY[0x1E0DBA640]);
  v4 = *(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80);
  return sub_1DC2E8884(a1, v1 + ((v4 + 16) & ~v4));
}

void sub_1DC2E99C0()
{
  uint64_t (*v0)(uint64_t);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1F03516C0)
  {
    sub_1DC407240();
    v0 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D537F8];
    sub_1DC401C30();
    sub_1DC080808(&qword_1F03516C8, v0, MEMORY[0x1E0D53808]);
    sub_1DC080808(&qword_1F03516D0, v0, MEMORY[0x1E0D537D8]);
    v1 = sub_1DC407C54();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1F03516C0);
  }
}

void sub_1DC2E9A80()
{
  uint64_t (*v0)(uint64_t);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1F03516E0)
  {
    sub_1DC407D50();
    v0 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D5D098];
    sub_1DC401C30();
    sub_1DC080808(&qword_1F03516E8, v0, MEMORY[0x1E0D5D0A8]);
    sub_1DC080808(&qword_1F03516F0, v0, MEMORY[0x1E0D5D028]);
    v1 = sub_1DC407C54();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1F03516E0);
  }
}

void sub_1DC2E9B40()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1F03516F8)
  {
    sub_1DC2E99C0();
    sub_1DC2E9A80();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1F03516F8);
  }
}

uint64_t sub_1DC2E9BB0()
{
  return objectdestroyTm_10(&qword_1F03516D8, MEMORY[0x1E0DB8880], (uint64_t (*)(_QWORD))sub_1DC2E99C0);
}

uint64_t sub_1DC2E9BCC(uint64_t a1)
{
  return sub_1DC2E9BF0(a1, &qword_1F03516D8, MEMORY[0x1E0DB8880], (uint64_t (*)(_QWORD))sub_1DC2E99C0, (uint64_t (*)(uint64_t, unint64_t, unint64_t))sub_1DC2E7A74);
}

uint64_t sub_1DC2E9BF0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *), uint64_t (*a4)(_QWORD), uint64_t (*a5)(uint64_t, unint64_t, unint64_t))
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_1DC2E97E4(0, a2, a3);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v11 = *(_QWORD *)(v9 + 64);
  v12 = *(unsigned __int8 *)(*(_QWORD *)(a4(0) - 8) + 80);
  return a5(a1, v5 + v10, v5 + ((v10 + v11 + v12) & ~v12));
}

uint64_t sub_1DC2E9C74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  sub_1DC2E97E4(0, &qword_1F03516D8, MEMORY[0x1E0DB8880]);
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v3 + 64);
  sub_1DC2E9A80();
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  v9 = (v4 + v5 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v0 + v4, v2);
  (*(void (**)(unint64_t, uint64_t))(v8 + 8))(v0 + v9, v7);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DC2E9D4C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  sub_1DC2E97E4(0, &qword_1F03516D8, MEMORY[0x1E0DB8880]);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v4 + 64);
  sub_1DC2E9A80();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = (v5 + v6 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  return sub_1DC2E6818(a1, v1 + v5, v1 + v9, *(_QWORD *)(v1 + ((*(_QWORD *)(v8 + 64) + v9 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_1DC2E9DD8(uint64_t a1)
{
  uint64_t v1;

  return sub_1DC2E5988(a1, v1);
}

id sub_1DC2E9DE0(uint64_t a1, uint64_t a2, void *a3)
{
  _QWORD *v3;
  id v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  char *v13;
  char *v14;
  char *v15;
  id v16;
  uint64_t inited;
  void **v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(uint64_t, uint64_t);
  id v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  void *v32;

  v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3778]), sel_init);
  v6 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  swift_bridgeObjectRetain();
  v7 = (void *)sub_1DC408A1C();
  swift_bridgeObjectRelease();
  v8 = objc_msgSend(v6, sel_initWithString_, v7);

  objc_msgSend(v5, sel_appendAttributedString_, v8);
  if (a3)
  {
    v9 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
    v10 = a3;
    v11 = (void *)sub_1DC408A1C();
    v12 = objc_msgSend(v9, sel_initWithString_, v11);

    objc_msgSend(v5, sel_appendAttributedString_, v12);
    type metadata accessor for IconTextAttachment();
    v13 = (char *)objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
    objc_msgSend(v13, sel_setImage_, v10);
    v14 = &v13[OBJC_IVAR____TtC8StocksUI18IconTextAttachment_baselineAdjustment];
    *(_QWORD *)v14 = 0x3FF0000000000000;
    v14[8] = 0;
    v15 = &v13[OBJC_IVAR____TtC8StocksUI18IconTextAttachment_imageHeightOverride];
    *(_QWORD *)v15 = 0x402A000000000000;
    v15[8] = 0;
    v16 = objc_msgSend((id)objc_opt_self(), sel_attributedStringWithAttachment_, v13);
    objc_msgSend(v5, sel_appendAttributedString_, v16);

  }
  sub_1DC0FB194();
  inited = swift_initStackObject();
  v18 = (void **)MEMORY[0x1E0DC1140];
  *(_OWORD *)(inited + 16) = xmmword_1DC40DC10;
  v19 = *v18;
  *(_QWORD *)(inited + 32) = *v18;
  v20 = v3[5];
  v21 = v3[6];
  __swift_project_boxed_opaque_existential_1(v3 + 2, v20);
  v22 = *(_QWORD *)(v21 + 16);
  v23 = *(uint64_t (**)(uint64_t, uint64_t))(v22 + 200);
  v24 = v19;
  v25 = v23(v20, v22);
  *(_QWORD *)(inited + 64) = sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FB30);
  *(_QWORD *)(inited + 40) = v25;
  sub_1DC0FA3C4(inited);
  type metadata accessor for Key(0);
  sub_1DC0FB14C();
  v26 = (void *)sub_1DC408980();
  swift_bridgeObjectRelease();
  objc_msgSend(v5, sel_addAttributes_range_, v26, 0, objc_msgSend(v5, sel_length));

  v27 = swift_initStackObject();
  *(_OWORD *)(v27 + 16) = xmmword_1DC40DC10;
  v28 = (void *)*MEMORY[0x1E0DC1138];
  *(_QWORD *)(v27 + 32) = *MEMORY[0x1E0DC1138];
  v29 = sub_1DC0821D4(0, (unint64_t *)&qword_1EDB3FB00);
  v30 = v28;
  v31 = sub_1DC4092F8();
  *(_QWORD *)(v27 + 64) = v29;
  *(_QWORD *)(v27 + 40) = v31;
  sub_1DC0FA3C4(v27);
  v32 = (void *)sub_1DC408980();
  swift_bridgeObjectRelease();
  objc_msgSend(v5, sel_addAttributes_range_, v32, 0, objc_msgSend(v5, sel_length));

  return v5;
}

uint64_t type metadata accessor for BrandingTitleViewStyler()
{
  return objc_opt_self();
}

uint64_t sub_1DC2EA1A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC8StocksUI31StubStockForYouFeedGroupEmitter_config;
  sub_1DC0C9C18();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_1DC2EA1F8()
{
  return type metadata accessor for StubStockForYouFeedGroupEmitter();
}

uint64_t sub_1DC2EA200()
{
  sub_1DC080808(&qword_1F03517D8, (uint64_t (*)(uint64_t))type metadata accessor for StubStockForYouFeedGroupEmitter, (uint64_t)&unk_1DC425988);
  return sub_1DC40286C();
}

uint64_t *sub_1DC2EA240(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  void (*v13)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  int *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(char *, char *, uint64_t);
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  char *v72;
  char *v73;
  uint64_t v74;
  int *v75;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v7 = sub_1DC4073A8();
        v8 = *(_QWORD *)(v7 - 8);
        if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
        {
          sub_1DC089DA4(0, &qword_1EDB2AD80, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5A418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
          (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
        }
        goto LABEL_13;
      case 1u:
        v12 = sub_1DC4010E4();
        v13 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
        v13(a1, a2, v12);
        sub_1DC0F5A60();
        v74 = v14;
        v15 = *(int *)(v14 + 48);
        v16 = (char *)a1 + v15;
        v17 = (char *)a2 + v15;
        ((void (*)(char *))v13)((char *)a1 + v15);
        v75 = (int *)type metadata accessor for StockViewModel();
        v18 = v75[5];
        v19 = &v16[v18];
        v20 = &v17[v18];
        v21 = sub_1DC401030();
        v22 = *(_QWORD *)(v21 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
        {
          sub_1DC089DA4(0, &qword_1EDB28DC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF040], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
          memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v19, v20, v21);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
        }
        v30 = v75[6];
        v31 = &v16[v30];
        v32 = &v17[v30];
        v33 = (int *)type metadata accessor for StockSparklineViewModel(0);
        v34 = *((_QWORD *)v33 - 1);
        if ((*(unsigned int (**)(char *, uint64_t, int *))(v34 + 48))(v32, 1, v33))
        {
          sub_1DC089DA4(0, &qword_1EDB353E0, type metadata accessor for StockSparklineViewModel, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
          memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
        }
        else
        {
          v36 = sub_1DC408614();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 16))(v31, v32, v36);
          v37 = v33[5];
          v38 = &v31[v37];
          v39 = &v32[v37];
          *(_QWORD *)v38 = *(_QWORD *)v39;
          v38[8] = v39[8];
          v40 = v33[6];
          v41 = &v31[v40];
          v42 = &v32[v40];
          *(_QWORD *)v41 = *(_QWORD *)v42;
          v41[8] = v42[8];
          v31[v33[7]] = v32[v33[7]];
          v43 = v33[8];
          v44 = &v31[v43];
          v45 = &v32[v43];
          v46 = sub_1DC400F7C();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 16))(v44, v45, v46);
          (*(void (**)(char *, _QWORD, uint64_t, int *))(v34 + 56))(v31, 0, 1, v33);
        }
        v47 = v75[7];
        v72 = v17;
        v73 = v16;
        v48 = &v16[v47];
        v49 = &v17[v47];
        *(_QWORD *)v48 = *(_QWORD *)v49;
        v48[8] = v49[8];
        *((_QWORD *)v48 + 2) = *((_QWORD *)v49 + 2);
        v48[24] = v49[24];
        *((_QWORD *)v48 + 4) = *((_QWORD *)v49 + 4);
        v48[40] = v49[40];
        v50 = *((_QWORD *)v49 + 7);
        *((_QWORD *)v48 + 6) = *((_QWORD *)v49 + 6);
        *((_QWORD *)v48 + 7) = v50;
        v51 = *((_QWORD *)v49 + 9);
        *((_QWORD *)v48 + 8) = *((_QWORD *)v49 + 8);
        *((_QWORD *)v48 + 9) = v51;
        v48[80] = v49[80];
        v52 = type metadata accessor for PriceViewModel();
        v53 = *(int *)(v52 + 40);
        v70 = &v49[v53];
        v71 = &v48[v53];
        v54 = sub_1DC4011C8();
        v55 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v54 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v55(v71, v70, v54);
        v56 = *(int *)(v52 + 44);
        v57 = &v48[v56];
        v58 = &v49[v56];
        v59 = sub_1DC400118();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 16))(v57, v58, v59);
        v60 = v75[8];
        v61 = &v73[v60];
        v62 = &v72[v60];
        v63 = sub_1DC4008EC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v63 - 8) + 16))(v61, v62, v63);
        v73[v75[9]] = v72[v75[9]];
        v64 = *(int *)(v74 + 64);
        v65 = (char *)a1 + v64;
        v66 = (char *)a2 + v64;
        v67 = sub_1DC4073A8();
        v68 = *(_QWORD *)(v67 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v68 + 48))(v66, 1, v67))
        {
          sub_1DC089DA4(0, &qword_1EDB2AD80, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5A418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
          memcpy(v65, v66, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v68 + 16))(v65, v66, v67);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v68 + 56))(v65, 0, 1, v67);
        }
LABEL_13:
        swift_storeEnumTagMultiPayload();
        break;
      case 2u:
        v24 = sub_1DC4073A8();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(a1, a2, v24);
        v25 = *(int *)(type metadata accessor for CuratedForYouFeedGroup() + 20);
        v26 = (uint64_t *)((char *)a1 + v25);
        v27 = (uint64_t *)((char *)a2 + v25);
        v28 = v27[1];
        *v26 = *v27;
        v26[1] = v28;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
        v29 = sub_1DC407300();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(a1, a2, v29);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
        break;
    }
  }
  return a1;
}

char *sub_1DC2EA7F0(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  int *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  void (*v55)(char *, char *, uint64_t);
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v71;
  char *v72;
  char *v73;
  uint64_t v74;
  int *v75;

  if (a1 != a2)
  {
    sub_1DC0926D8((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for ForYouFeedSectionDescriptor);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v6 = sub_1DC4073A8();
        v7 = *(_QWORD *)(v6 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
        {
          sub_1DC089DA4(0, &qword_1EDB2AD80, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5A418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
        }
        goto LABEL_18;
      case 1u:
        v9 = sub_1DC4010E4();
        v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
        v10(a1, a2, v9);
        sub_1DC0F5A60();
        v12 = v11;
        v13 = *(int *)(v11 + 48);
        v14 = &a1[v13];
        v15 = &a2[v13];
        ((void (*)(char *))v10)(&a1[v13]);
        v75 = (int *)type metadata accessor for StockViewModel();
        v16 = v75[5];
        v17 = &v14[v16];
        v18 = &v15[v16];
        v19 = sub_1DC401030();
        v20 = *(_QWORD *)(v19 - 8);
        v74 = v12;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
        {
          sub_1DC089DA4(0, &qword_1EDB28DC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF040], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
          memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v17, v18, v19);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
        }
        v27 = v75[6];
        v28 = &v14[v27];
        v29 = &v15[v27];
        v30 = (int *)type metadata accessor for StockSparklineViewModel(0);
        v31 = *((_QWORD *)v30 - 1);
        if ((*(unsigned int (**)(char *, uint64_t, int *))(v31 + 48))(v29, 1, v30))
        {
          sub_1DC089DA4(0, &qword_1EDB353E0, type metadata accessor for StockSparklineViewModel, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
          memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
        }
        else
        {
          v33 = sub_1DC408614();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 16))(v28, v29, v33);
          v34 = v30[5];
          v35 = &v28[v34];
          v36 = &v29[v34];
          v37 = *(_QWORD *)v36;
          v35[8] = v36[8];
          *(_QWORD *)v35 = v37;
          v38 = v30[6];
          v39 = &v28[v38];
          v40 = &v29[v38];
          LOBYTE(v37) = v40[8];
          *(_QWORD *)v39 = *(_QWORD *)v40;
          v39[8] = v37;
          v28[v30[7]] = v29[v30[7]];
          v41 = v30[8];
          v42 = &v28[v41];
          v43 = &v29[v41];
          v44 = sub_1DC400F7C();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 16))(v42, v43, v44);
          (*(void (**)(char *, _QWORD, uint64_t, int *))(v31 + 56))(v28, 0, 1, v30);
        }
        v45 = v75[7];
        v73 = v14;
        v46 = &v14[v45];
        v47 = &v15[v45];
        v48 = *(_QWORD *)&v15[v45];
        v46[8] = v47[8];
        *(_QWORD *)v46 = v48;
        v49 = *((_QWORD *)v47 + 2);
        v46[24] = v47[24];
        *((_QWORD *)v46 + 2) = v49;
        v50 = *((_QWORD *)v47 + 4);
        v46[40] = v47[40];
        *((_QWORD *)v46 + 4) = v50;
        *((_QWORD *)v46 + 6) = *((_QWORD *)v47 + 6);
        *((_QWORD *)v46 + 7) = *((_QWORD *)v47 + 7);
        *((_QWORD *)v46 + 8) = *((_QWORD *)v47 + 8);
        *((_QWORD *)v46 + 9) = *((_QWORD *)v47 + 9);
        v46[80] = v47[80];
        v51 = type metadata accessor for PriceViewModel();
        v52 = *(int *)(v51 + 40);
        v53 = &v46[v52];
        v71 = &v47[v52];
        v54 = sub_1DC4011C8();
        v72 = v15;
        v55 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v54 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v55(v53, v71, v54);
        v56 = *(int *)(v51 + 44);
        v57 = &v46[v56];
        v58 = &v47[v56];
        v59 = sub_1DC400118();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 16))(v57, v58, v59);
        v60 = v75[8];
        v61 = &v73[v60];
        v62 = &v72[v60];
        v63 = sub_1DC4008EC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v63 - 8) + 16))(v61, v62, v63);
        v73[v75[9]] = v72[v75[9]];
        v64 = *(int *)(v74 + 64);
        v65 = &a1[v64];
        v66 = &a2[v64];
        v67 = sub_1DC4073A8();
        v68 = *(_QWORD *)(v67 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v68 + 48))(v66, 1, v67))
        {
          sub_1DC089DA4(0, &qword_1EDB2AD80, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5A418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
          memcpy(v65, v66, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v68 + 16))(v65, v66, v67);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v68 + 56))(v65, 0, 1, v67);
        }
        goto LABEL_18;
      case 2u:
        v22 = sub_1DC4073A8();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(a1, a2, v22);
        v23 = *(int *)(type metadata accessor for CuratedForYouFeedGroup() + 20);
        v24 = &a1[v23];
        v25 = &a2[v23];
        *(_QWORD *)v24 = *(_QWORD *)v25;
        *((_QWORD *)v24 + 1) = *((_QWORD *)v25 + 1);
        swift_bridgeObjectRetain();
        goto LABEL_18;
      case 3u:
        v26 = sub_1DC407300();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(a1, a2, v26);
LABEL_18:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

char *sub_1DC2EADAC(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  int *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v65;
  int *v66;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v6 = sub_1DC4073A8();
      v7 = *(_QWORD *)(v6 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
      {
        sub_1DC089DA4(0, &qword_1EDB2AD80, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5A418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      }
      goto LABEL_17;
    case 1u:
      v9 = sub_1DC4010E4();
      v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32);
      v10(a1, a2, v9);
      sub_1DC0F5A60();
      v65 = v11;
      v12 = *(int *)(v11 + 48);
      v13 = &a1[v12];
      v14 = &a2[v12];
      v10(&a1[v12], &a2[v12], v9);
      v66 = (int *)type metadata accessor for StockViewModel();
      v15 = v66[5];
      v16 = &v13[v15];
      v17 = &v14[v15];
      v18 = sub_1DC401030();
      v19 = *(_QWORD *)(v18 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
      {
        sub_1DC089DA4(0, &qword_1EDB28DC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF040], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v16, v17, v18);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
      }
      v24 = v66[6];
      v25 = &v13[v24];
      v26 = &v14[v24];
      v27 = (int *)type metadata accessor for StockSparklineViewModel(0);
      v28 = *((_QWORD *)v27 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v28 + 48))(v26, 1, v27))
      {
        sub_1DC089DA4(0, &qword_1EDB353E0, type metadata accessor for StockSparklineViewModel, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
      }
      else
      {
        v30 = sub_1DC408614();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v25, v26, v30);
        v31 = v27[5];
        v32 = &v25[v31];
        v33 = &v26[v31];
        *(_QWORD *)v32 = *(_QWORD *)v33;
        v32[8] = v33[8];
        v34 = v27[6];
        v35 = &v25[v34];
        v36 = &v26[v34];
        *(_QWORD *)v35 = *(_QWORD *)v36;
        v35[8] = v36[8];
        v25[v27[7]] = v26[v27[7]];
        v37 = v27[8];
        v38 = &v25[v37];
        v39 = &v26[v37];
        v40 = sub_1DC400F7C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 32))(v38, v39, v40);
        (*(void (**)(char *, _QWORD, uint64_t, int *))(v28 + 56))(v25, 0, 1, v27);
      }
      v41 = v66[7];
      v42 = &v13[v41];
      v43 = &v14[v41];
      *(_QWORD *)v42 = *(_QWORD *)&v14[v41];
      v42[8] = v14[v41 + 8];
      *((_QWORD *)v42 + 2) = *(_QWORD *)&v14[v41 + 16];
      v42[24] = v14[v41 + 24];
      *((_QWORD *)v42 + 4) = *(_QWORD *)&v14[v41 + 32];
      v42[40] = v14[v41 + 40];
      v44 = *(_OWORD *)&v14[v41 + 64];
      *((_OWORD *)v42 + 3) = *(_OWORD *)&v14[v41 + 48];
      *((_OWORD *)v42 + 4) = v44;
      v42[80] = v14[v41 + 80];
      v45 = type metadata accessor for PriceViewModel();
      v46 = *(int *)(v45 + 40);
      v47 = &v42[v46];
      v48 = &v43[v46];
      v49 = sub_1DC4011C8();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 32))(v47, v48, v49);
      v50 = *(int *)(v45 + 44);
      v51 = &v42[v50];
      v52 = &v43[v50];
      v53 = sub_1DC400118();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v53 - 8) + 32))(v51, v52, v53);
      v54 = v66[8];
      v55 = &v13[v54];
      v56 = &v14[v54];
      v57 = sub_1DC4008EC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v57 - 8) + 32))(v55, v56, v57);
      v13[v66[9]] = v14[v66[9]];
      v58 = *(int *)(v65 + 64);
      v59 = &a1[v58];
      v60 = &a2[v58];
      v61 = sub_1DC4073A8();
      v62 = *(_QWORD *)(v61 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v62 + 48))(v60, 1, v61))
      {
        sub_1DC089DA4(0, &qword_1EDB2AD80, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5A418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v62 + 32))(v59, v60, v61);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v62 + 56))(v59, 0, 1, v61);
      }
      goto LABEL_17;
    case 2u:
      v21 = sub_1DC4073A8();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(a1, a2, v21);
      v22 = type metadata accessor for CuratedForYouFeedGroup();
      *(_OWORD *)&a1[*(int *)(v22 + 20)] = *(_OWORD *)&a2[*(int *)(v22 + 20)];
      goto LABEL_17;
    case 3u:
      v23 = sub_1DC407300();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(a1, a2, v23);
LABEL_17:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

void sub_1DC2EB300()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(_QWORD);
  char *v5;
  uint64_t v6;

  v1 = type metadata accessor for CuratedForYouFeedGroup();
  MEMORY[0x1E0C80A78](v1);
  v2 = type metadata accessor for ForYouFeedSectionDescriptor();
  MEMORY[0x1E0C80A78](v2);
  sub_1DC0990BC(v0, (uint64_t)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  v5 = (char *)sub_1DC2EB3C8 + 4 * byte_1DC425A88[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1DC2EB3C8()
{
  uint64_t v0;

  sub_1DC0B091C(v0, &qword_1EDB2AD80, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5A418]);
  return 1;
}

void sub_1DC2EB4F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(_QWORD);
  char *v4;
  uint64_t v5;

  v1 = type metadata accessor for ForYouFeedSectionDescriptor();
  MEMORY[0x1E0C80A78](v1);
  sub_1DC0990BC(v0, (uint64_t)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
  v4 = (char *)sub_1DC2EB588 + 4 * byte_1DC425A94[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1DC2EB588()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *MEMORY[0x1E0DADF70];
  v2 = sub_1DC403B14();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 104))(v0, v1, v2);
}

void sub_1DC2EB6EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(_QWORD);
  char *v5;
  uint64_t v6;

  v1 = type metadata accessor for CuratedForYouFeedGroup();
  MEMORY[0x1E0C80A78](v1);
  v2 = type metadata accessor for ForYouFeedSectionDescriptor();
  MEMORY[0x1E0C80A78](v2);
  sub_1DC0990BC(v0, (uint64_t)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  v5 = (char *)sub_1DC2EB7B8 + 4 * byte_1DC425A9A[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1DC2EB7B8()
{
  uint64_t v0;

  sub_1DC0B091C(v0, &qword_1EDB2AD80, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5A418]);
  return 0;
}

void sub_1DC2EB8A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(_QWORD);
  char *v8;
  uint64_t v9;

  sub_1DC089DA4(0, &qword_1EDB2AD80, (uint64_t (*)(uint64_t))MEMORY[0x1E0D5A418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v1);
  MEMORY[0x1E0C80A78](v2);
  MEMORY[0x1E0C80A78](v3);
  MEMORY[0x1E0C80A78](v4);
  v5 = type metadata accessor for ForYouFeedSectionDescriptor();
  MEMORY[0x1E0C80A78](v5);
  sub_1DC0990BC(v0, (uint64_t)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
  v8 = (char *)sub_1DC2EB9D8 + 4 * byte_1DC425AAC[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

void sub_1DC2EB9D8()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 32) = 0;
  *(_OWORD *)v0 = 0u;
  *(_OWORD *)(v0 + 16) = 0u;
}

_QWORD *sub_1DC2EBC70(_OWORD *a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = *((_OWORD *)a2 + 1);
    *a1 = *(_OWORD *)a2;
    a1[1] = v7;
    v8 = *((_OWORD *)a2 + 3);
    a1[2] = *((_OWORD *)a2 + 2);
    a1[3] = v8;
    v9 = *((_OWORD *)a2 + 5);
    a1[4] = *((_OWORD *)a2 + 4);
    a1[5] = v9;
    v10 = *((_OWORD *)a2 + 7);
    a1[6] = *((_OWORD *)a2 + 6);
    a1[7] = v10;
    memcpy(a1 + 8, a2 + 16, 0x111uLL);
    v11 = *(int *)(a3 + 36);
    v12 = (char *)v4 + v11;
    v13 = (uint64_t)a2 + v11;
    v14 = sub_1DC4061C0();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
    *((_BYTE *)v4 + *(int *)(a3 + 40)) = *((_BYTE *)a2 + *(int *)(a3 + 40));
  }
  return v4;
}

uint64_t sub_1DC2EBD3C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1 + *(int *)(a2 + 36);
  v3 = sub_1DC4061C0();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

_OWORD *sub_1DC2EBD74(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  v9 = a2[7];
  a1[6] = a2[6];
  a1[7] = v9;
  memcpy(a1 + 8, a2 + 8, 0x111uLL);
  v10 = *(int *)(a3 + 36);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_1DC4061C0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
  *((_BYTE *)a1 + *(int *)(a3 + 40)) = *((_BYTE *)a2 + *(int *)(a3 + 40));
  return a1;
}

uint64_t sub_1DC2EBE14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
  *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
  *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
  *(_BYTE *)(a1 + 264) = *(_BYTE *)(a2 + 264);
  *(_OWORD *)(a1 + 272) = *(_OWORD *)(a2 + 272);
  v6 = *(_OWORD *)(a2 + 288);
  v7 = *(_OWORD *)(a2 + 304);
  v8 = *(_OWORD *)(a2 + 336);
  *(_OWORD *)(a1 + 320) = *(_OWORD *)(a2 + 320);
  *(_OWORD *)(a1 + 336) = v8;
  *(_OWORD *)(a1 + 288) = v6;
  *(_OWORD *)(a1 + 304) = v7;
  v9 = *(_OWORD *)(a2 + 352);
  v10 = *(_OWORD *)(a2 + 368);
  v11 = *(_OWORD *)(a2 + 384);
  *(_BYTE *)(a1 + 400) = *(_BYTE *)(a2 + 400);
  *(_OWORD *)(a1 + 368) = v10;
  *(_OWORD *)(a1 + 384) = v11;
  *(_OWORD *)(a1 + 352) = v9;
  v12 = *(int *)(a3 + 36);
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = sub_1DC4061C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 24))(v13, v14, v15);
  *(_BYTE *)(a1 + *(int *)(a3 + 40)) = *(_BYTE *)(a2 + *(int *)(a3 + 40));
  return a1;
}

_OWORD *sub_1DC2EBFC8(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  v9 = a2[7];
  a1[6] = a2[6];
  a1[7] = v9;
  memcpy(a1 + 8, a2 + 8, 0x111uLL);
  v10 = *(int *)(a3 + 36);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_1DC4061C0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
  *((_BYTE *)a1 + *(int *)(a3 + 40)) = *((_BYTE *)a2 + *(int *)(a3 + 40));
  return a1;
}

uint64_t sub_1DC2EC068(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v7;
  v8 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v8;
  v9 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v9;
  v10 = *(_OWORD *)(a2 + 144);
  v11 = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v10;
  v12 = *(_OWORD *)(a2 + 176);
  v13 = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 160) = v11;
  *(_OWORD *)(a1 + 176) = v12;
  v14 = *(_OWORD *)(a2 + 208);
  v15 = *(_OWORD *)(a2 + 224);
  *(_OWORD *)(a1 + 192) = v13;
  *(_OWORD *)(a1 + 208) = v14;
  v16 = *(_OWORD *)(a2 + 240);
  *(_OWORD *)(a1 + 224) = v15;
  *(_OWORD *)(a1 + 240) = v16;
  *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
  *(_BYTE *)(a1 + 264) = *(_BYTE *)(a2 + 264);
  v17 = *(_OWORD *)(a2 + 320);
  *(_OWORD *)(a1 + 304) = *(_OWORD *)(a2 + 304);
  *(_OWORD *)(a1 + 320) = v17;
  v18 = *(_OWORD *)(a2 + 288);
  *(_OWORD *)(a1 + 272) = *(_OWORD *)(a2 + 272);
  *(_OWORD *)(a1 + 288) = v18;
  *(_BYTE *)(a1 + 400) = *(_BYTE *)(a2 + 400);
  v19 = *(_OWORD *)(a2 + 384);
  *(_OWORD *)(a1 + 368) = *(_OWORD *)(a2 + 368);
  *(_OWORD *)(a1 + 384) = v19;
  v20 = *(_OWORD *)(a2 + 352);
  v21 = *(int *)(a3 + 36);
  v22 = a1 + v21;
  v23 = a2 + v21;
  *(_OWORD *)(a1 + 336) = *(_OWORD *)(a2 + 336);
  *(_OWORD *)(a1 + 352) = v20;
  v24 = sub_1DC4061C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 40))(v22, v23, v24);
  *(_BYTE *)(a1 + *(int *)(a3 + 40)) = *(_BYTE *)(a2 + *(int *)(a3 + 40));
  return a1;
}

uint64_t sub_1DC2EC158()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC2EC164(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4;
  BOOL v5;
  int v6;
  uint64_t v10;

  if ((_DWORD)a2 == 254)
  {
    v4 = *(unsigned __int8 *)(a1 + 264);
    v5 = v4 >= 2;
    v6 = (v4 + 2147483646) & 0x7FFFFFFF;
    if (v5)
      return (v6 + 1);
    else
      return 0;
  }
  else
  {
    v10 = sub_1DC4061C0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(a1 + *(int *)(a3 + 36), a2, v10);
  }
}

uint64_t sub_1DC2EC1E0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC2EC1EC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 254)
  {
    *(_BYTE *)(result + 264) = a2 + 1;
  }
  else
  {
    v7 = sub_1DC4061C0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 36), a2, a2, v7);
  }
  return result;
}

uint64_t sub_1DC2EC25C()
{
  sub_1DC117F00(&qword_1EDB3A088, (uint64_t)&unk_1DC425CE0);
  return sub_1DC40625C();
}

uint64_t sub_1DC2EC294(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  os_unfair_lock_s *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int v26;
  BOOL v27;
  uint64_t v28;
  _BYTE *v30;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t, uint64_t);
  char *v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  int64_t v39;
  unint64_t v40;
  char *v41;
  void (*v42)(char *, unint64_t, uint64_t);
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  _QWORD v53[2];
  unint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  char *v58;
  char *v59;
  char v60;
  uint64_t v61;
  _QWORD v62[5];

  v4 = v3;
  sub_1DC089DA4(0, &qword_1EDB28AC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v8);
  v57 = (char *)v53 - v9;
  v10 = sub_1DC3FFFEC();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v59 = (char *)v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v58 = (char *)v53 - v14;
  MEMORY[0x1E0C80A78](v15);
  v56 = (char *)v53 - v16;
  sub_1DC0824D4(v4 + 56, (uint64_t)v62);
  v17 = *(_QWORD *)(*__swift_project_boxed_opaque_existential_1(v62, v62[3]) + 16);
  v18 = v17 + *(_QWORD *)(*MEMORY[0x1E0DEC528] + *(_QWORD *)v17 + 16);
  v19 = (os_unfair_lock_s *)(v17 + ((*(unsigned int *)(*(_QWORD *)v17 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v19);
  sub_1DC3FEEAC(v18, a3);
  os_unfair_lock_unlock(v19);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v62);
  v20 = *(_QWORD *)(a1 + 16);
  v21 = MEMORY[0x1E0DEE9D8];
  if (v20)
  {
    v54 = a2;
    v55 = v4;
    v22 = swift_bridgeObjectRetain();
    v53[1] = a1;
    v23 = (uint64_t *)(a1 + 40);
    while (1)
    {
      v24 = *(v23 - 1);
      v25 = *v23;
      v61 = 0;
      MEMORY[0x1E0C80A78](v22);
      v53[-2] = &v61;
      if ((v25 & 0x1000000000000000) == 0)
      {
        if ((v25 & 0x2000000000000000) != 0)
        {
          v62[0] = v24;
          v62[1] = v25 & 0xFFFFFFFFFFFFFFLL;
          if (v24 <= 0x20u && ((1 << v24) & 0x100003E01) != 0)
          {
LABEL_19:
            swift_bridgeObjectRetain();
LABEL_20:
            v32 = (uint64_t)v57;
            goto LABEL_21;
          }
          swift_bridgeObjectRetain();
          v30 = (_BYTE *)_swift_stdlib_strtod_clocale();
          if (!v30)
            goto LABEL_20;
          goto LABEL_29;
        }
        if ((v24 & 0x1000000000000000) != 0)
        {
          v26 = *(unsigned __int8 *)(v25 + 32);
          v27 = v26 > 0x20;
          v28 = (1 << v26) & 0x100003E01;
          if (!v27 && v28 != 0)
            goto LABEL_19;
          swift_bridgeObjectRetain();
          v30 = (_BYTE *)_swift_stdlib_strtod_clocale();
          if (!v30)
            goto LABEL_20;
LABEL_29:
          v32 = (uint64_t)v57;
          if (!*v30)
            goto LABEL_30;
          goto LABEL_21;
        }
      }
      swift_bridgeObjectRetain();
      sub_1DC409724();
      v32 = (uint64_t)v57;
      if ((v60 & 1) != 0)
      {
LABEL_30:
        sub_1DC3FFF8C();
        v33 = 0;
        goto LABEL_22;
      }
LABEL_21:
      v33 = 1;
LABEL_22:
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56))(v32, v33, 1, v10);
      swift_bridgeObjectRelease();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v32, 1, v10) == 1)
      {
        v22 = sub_1DC0B091C(v32, &qword_1EDB28AC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
      }
      else
      {
        v34 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 32);
        v35 = v56;
        v34(v56, v32, v10);
        v34(v58, (uint64_t)v35, v10);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v21 = sub_1DC1664B4(0, *(_QWORD *)(v21 + 16) + 1, 1, v21);
        v37 = *(_QWORD *)(v21 + 16);
        v36 = *(_QWORD *)(v21 + 24);
        if (v37 >= v36 >> 1)
          v21 = sub_1DC1664B4(v36 > 1, v37 + 1, 1, v21);
        *(_QWORD *)(v21 + 16) = v37 + 1;
        v22 = ((uint64_t (*)(unint64_t, char *, uint64_t))v34)(v21+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ *(_QWORD *)(v11 + 72) * v37, v58, v10);
      }
      v23 += 2;
      if (!--v20)
      {
        swift_bridgeObjectRelease();
        a2 = v54;
        v4 = v55;
        break;
      }
    }
  }
  v38 = sub_1DC2EC8F0(a2, v21, v4);
  swift_bridgeObjectRelease();
  v39 = *(_QWORD *)(v38 + 16);
  if (v39)
  {
    v62[0] = MEMORY[0x1E0DEE9D8];
    sub_1DC0F0894(0, v39, 0);
    v40 = v38 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
    v41 = *(char **)(v11 + 72);
    v57 = (char *)v38;
    v58 = v41;
    v42 = *(void (**)(char *, unint64_t, uint64_t))(v11 + 16);
    v43 = v11;
    do
    {
      v44 = v59;
      v42(v59, v40, v10);
      sub_1DC3FFF98();
      v45 = sub_1DC408DE8();
      v47 = v46;
      (*(void (**)(char *, uint64_t))(v11 + 8))(v44, v10);
      v48 = v62[0];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1DC0F0894(0, *(_QWORD *)(v48 + 16) + 1, 1);
        v48 = v62[0];
      }
      v50 = *(_QWORD *)(v48 + 16);
      v49 = *(_QWORD *)(v48 + 24);
      if (v50 >= v49 >> 1)
      {
        sub_1DC0F0894(v49 > 1, v50 + 1, 1);
        v48 = v62[0];
      }
      *(_QWORD *)(v48 + 16) = v50 + 1;
      v51 = v48 + 16 * v50;
      *(_QWORD *)(v51 + 32) = v45;
      *(_QWORD *)(v51 + 40) = v47;
      v40 += (unint64_t)v58;
      --v39;
      v11 = v43;
    }
    while (v39);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
  return v48;
}

uint64_t sub_1DC2EC7D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  v1 = v0 + OBJC_IVAR____TtC8StocksUI27StockChartDescriptorFactory_stock;
  v2 = sub_1DC4010E4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_1DC2EC834()
{
  return type metadata accessor for StockChartDescriptorFactory();
}

uint64_t type metadata accessor for StockChartDescriptorFactory()
{
  uint64_t result;

  result = qword_1EDB378D8;
  if (!qword_1EDB378D8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1DC2EC878()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1DC4010E4();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1DC2EC8F0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  __n128 v189;
  uint64_t v190;
  char *v191;
  int v192;
  uint64_t v193;
  uint64_t v194;
  unint64_t v195;
  uint64_t v196;
  void (*v197)(char *, uint64_t, uint64_t);
  uint64_t v198;
  uint64_t v199;
  char *v200;
  unsigned int (*v201)(char *, uint64_t, uint64_t);
  void (*v202)(char *, uint64_t, uint64_t);
  char *v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  unint64_t v208;
  uint64_t v209;
  char *v210;
  char *v211;
  unsigned int (*v212)(char *, uint64_t, uint64_t);
  void (*v213)(uint64_t, char *, uint64_t);
  uint64_t v214;
  unint64_t v215;
  unint64_t v216;
  uint64_t v217;
  uint64_t v218;
  os_unfair_lock_s *v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  char *v224;
  char *v225;
  uint64_t v226;
  uint64_t v227;
  char *v228;
  uint64_t v229;
  uint64_t v230;
  char *v231;
  uint64_t v232;
  char *v233;
  unsigned int (*v234)(char *, uint64_t, uint64_t);
  void (*v235)(uint64_t, char *, uint64_t);
  unint64_t v236;
  unint64_t v237;
  unint64_t v238;
  uint64_t v239;
  uint64_t v240;
  os_unfair_lock_s *v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  char *v245;
  char *v246;
  uint64_t v247;
  uint64_t v248;
  char *v249;
  char *v250;
  uint64_t v251;
  char *v252;
  uint64_t v253;
  void (*v254)(char *, uint64_t, uint64_t, uint64_t);
  id v255;
  uint64_t v256;
  uint64_t v257;
  unint64_t v258;
  uint64_t v259;
  char *v260;
  char *v261;
  char *v262;
  uint64_t v263;
  char v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  char *v268;
  uint64_t v269;
  unint64_t v270;
  char *v271;
  uint64_t v272;
  void (*v273)(char *, uint64_t);
  uint64_t v274;
  uint64_t v275;
  void (*v276)(char *, char *, uint64_t);
  char v277;
  uint64_t v278;
  unint64_t v279;
  unint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  os_unfair_lock_s *v284;
  void (*v285)(char *, char *, uint64_t);
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  char *v289;
  char *v290;
  char *v291;
  unsigned int (*v292)(char *, uint64_t, uint64_t);
  void (*v293)(uint64_t, char *, uint64_t);
  unint64_t v294;
  unint64_t v295;
  unint64_t v296;
  uint64_t v297;
  uint64_t v298;
  os_unfair_lock_s *v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  char *v304;
  uint64_t v305;
  char *v306;
  char *v307;
  unint64_t v308;
  char *v309;
  unsigned int (*v310)(char *, uint64_t, uint64_t);
  void (*v311)(unint64_t, char *, uint64_t);
  unint64_t v312;
  unint64_t v313;
  unint64_t v314;
  uint64_t v315;
  uint64_t v316;
  os_unfair_lock_s *v317;
  uint64_t v318;
  uint64_t v319;
  unint64_t v320;
  uint64_t v321;
  char *v322;
  void (*v323)(char *, uint64_t, uint64_t, uint64_t);
  void (*v324)(char *, uint64_t);
  uint64_t v325;
  char *v326;
  char *v327;
  uint64_t v328;
  char *v329;
  unsigned int (*v330)(char *, uint64_t, uint64_t);
  void (*v331)(uint64_t, char *, uint64_t);
  unint64_t v332;
  unint64_t v333;
  unint64_t v334;
  uint64_t v335;
  uint64_t v336;
  os_unfair_lock_s *v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  uint64_t v341;
  char *v342;
  void (*v343)(char *, uint64_t, uint64_t, uint64_t);
  void (*v344)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v345;
  uint64_t result;
  uint64_t v347;
  char *v348;
  char *v349;
  uint64_t v350;
  char *v351;
  unsigned int (*v352)(char *, uint64_t, uint64_t);
  void (*v353)(uint64_t, char *, uint64_t);
  unint64_t v354;
  unint64_t v355;
  unint64_t v356;
  uint64_t v357;
  uint64_t v358;
  os_unfair_lock_s *v359;
  uint64_t v360;
  uint64_t v361;
  uint64_t v362;
  uint64_t v363;
  char *v364;
  void (*v365)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v366;
  uint64_t v367;
  uint64_t v368;
  char *v369;
  uint64_t v370;
  char *v371;
  uint64_t v372;
  char *v373;
  char *v374;
  unint64_t v375;
  unsigned int (*v376)(char *, uint64_t, uint64_t);
  void (*v377)(uint64_t, char *, uint64_t);
  void (*v378)(uint64_t, char *, uint64_t);
  unint64_t v379;
  unint64_t v380;
  uint64_t v381;
  uint64_t v382;
  os_unfair_lock_s *v383;
  uint64_t v384;
  uint64_t v385;
  uint64_t v386;
  char *v387;
  void (*v388)(char *, uint64_t, uint64_t, uint64_t);
  void (*v389)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v390;
  char *v391;
  uint64_t v392;
  char *v393;
  uint64_t v394;
  void (*v395)(char *, uint64_t, uint64_t);
  void (*v396)(char *, uint64_t, uint64_t);
  char *v397;
  uint64_t v398;
  char *v399;
  uint64_t v400;
  unint64_t v401;
  char *v402;
  unsigned int (*v403)(char *, uint64_t, uint64_t);
  void (*v404)(char *, uint64_t, uint64_t);
  void (*v405)(uint64_t, char *, uint64_t);
  uint64_t v406;
  unint64_t v407;
  unint64_t v408;
  uint64_t v409;
  uint64_t v410;
  os_unfair_lock_s *v411;
  uint64_t v412;
  uint64_t v413;
  uint64_t v414;
  uint64_t v415;
  char *v416;
  char *v417;
  char *v418;
  uint64_t v419;
  uint64_t v420;
  unint64_t v421;
  uint64_t v422;
  char *v423;
  uint64_t v424;
  char v425;
  float v426;
  char *v427;
  char *v428;
  uint64_t v429;
  char *v430;
  uint64_t v431;
  char *v432;
  char *v433;
  uint64_t v434;
  void (*v435)(char *, uint64_t, uint64_t);
  uint64_t v436;
  void (*v437)(char *, uint64_t);
  unint64_t v438;
  unint64_t v439;
  char *v440;
  unint64_t v441;
  char *v442;
  uint64_t v443;
  void (*v444)(char *, char *, uint64_t);
  uint64_t v445;
  uint64_t v446;
  os_unfair_lock_s *v447;
  uint64_t v448;
  uint64_t v449;
  uint64_t v450;
  uint64_t v451;
  char *v452;
  char *v453;
  char *v454;
  char *v455;
  char *v456;
  uint64_t v457;
  void (*v458)(char *, uint64_t, uint64_t);
  char *v459;
  char *v460;
  uint64_t v461;
  void (*v462)(char *, char *, uint64_t);
  unint64_t v463;
  unint64_t v464;
  char *v465;
  unint64_t v466;
  uint64_t v467;
  uint64_t v468;
  uint64_t v469;
  os_unfair_lock_s *v470;
  void (*v471)(char *, char *, uint64_t);
  uint64_t v472;
  uint64_t v473;
  uint64_t v474;
  uint64_t v475;
  char *v476;
  char *v477;
  char *v478;
  char *v479;
  char *v480;
  uint64_t v481;
  char *v482;
  char *v483;
  char *v484;
  char *v485;
  char *v486;
  char *v487;
  uint64_t v488;
  char *v489;
  char *v490;
  char *v491;
  char *v492;
  char *v493;
  char *v494;
  char *v495;
  char *v496;
  uint64_t v497;
  uint64_t v498;
  char *v499;
  char *v500;
  uint64_t v501;
  char *v502;
  char *v503;
  char *v504;
  uint64_t v505;
  char *v506;
  uint64_t v507;
  char *v508;
  char *v509;
  char *v510;
  char *v511;
  char *v512;
  char *v513;
  uint64_t v514;
  uint64_t v515;
  char *v516;
  char *v517;
  char *v518;
  char *v519;
  uint64_t v520;
  char *v521;
  char *v522;
  char *v523;
  uint64_t v524;
  uint64_t v525;
  uint64_t v526;
  uint64_t v527;
  uint64_t v528;
  char *v529;
  char *v530;
  char *v531;
  char *v532;
  char *v533;
  uint64_t v534;
  char *v535;
  char *v536;
  uint64_t v537;
  char *v538;
  char *v539;
  char *v540;
  char *v541;
  char *v542;
  char *v543;
  char *v544;
  char *v545;
  uint64_t v546;
  uint64_t v547;
  char *v548;
  uint64_t v549;
  char *v550;
  char *v551;
  char *v552;
  char *v553;
  char *v554;
  uint64_t v555;
  char *v556;
  char *v557;
  char *v558;
  char *v559;
  uint64_t v560;
  unint64_t v561;
  uint64_t v562;
  uint64_t v563;
  char *v564;
  char *v565;
  uint64_t v566;
  char *v567;
  char *v568;
  char *v569;
  void (*v570)(char *, uint64_t, uint64_t);
  void (*v571)(char *, uint64_t, uint64_t);
  uint64_t v572;
  char *v573;
  uint64_t v574;
  uint64_t v575;
  unint64_t v576;
  uint64_t v577;
  unint64_t v578;

  v555 = a3;
  v575 = 0;
  v576 = a1;
  v526 = sub_1DC4001CC();
  v524 = *(_QWORD *)(v526 - 8);
  MEMORY[0x1E0C80A78](v526);
  v536 = (char *)&v481 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v527 = sub_1DC3FFBE4();
  v525 = *(_QWORD *)(v527 - 8);
  MEMORY[0x1E0C80A78](v527);
  v484 = (char *)&v481 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v523 = (char *)&v481 - v7;
  sub_1DC089DA4(0, &qword_1EDB28AC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v8);
  v501 = (uint64_t)&v481 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v502 = (char *)&v481 - v11;
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v481 - v13;
  MEMORY[0x1E0C80A78](v15);
  v491 = (char *)&v481 - v16;
  MEMORY[0x1E0C80A78](v17);
  v488 = (uint64_t)&v481 - v18;
  MEMORY[0x1E0C80A78](v19);
  v493 = (char *)&v481 - v20;
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v481 - v22;
  MEMORY[0x1E0C80A78](v24);
  v26 = (char *)&v481 - v25;
  MEMORY[0x1E0C80A78](v27);
  v494 = (char *)&v481 - v28;
  MEMORY[0x1E0C80A78](v29);
  v505 = (uint64_t)&v481 - v30;
  MEMORY[0x1E0C80A78](v31);
  v508 = (char *)&v481 - v32;
  MEMORY[0x1E0C80A78](v33);
  v514 = (uint64_t)&v481 - v34;
  MEMORY[0x1E0C80A78](v35);
  v517 = (char *)&v481 - v36;
  MEMORY[0x1E0C80A78](v37);
  v520 = (uint64_t)&v481 - v38;
  MEMORY[0x1E0C80A78](v39);
  v530 = (char *)&v481 - v40;
  MEMORY[0x1E0C80A78](v41);
  v534 = (uint64_t)&v481 - v42;
  MEMORY[0x1E0C80A78](v43);
  v539 = (char *)&v481 - v44;
  MEMORY[0x1E0C80A78](v45);
  v546 = (uint64_t)&v481 - v46;
  MEMORY[0x1E0C80A78](v47);
  v554 = (char *)&v481 - v48;
  MEMORY[0x1E0C80A78](v49);
  v560 = (uint64_t)&v481 - v50;
  MEMORY[0x1E0C80A78](v51);
  v571 = (void (*)(char *, uint64_t, uint64_t))((char *)&v481 - v52);
  MEMORY[0x1E0C80A78](v53);
  v566 = (uint64_t)&v481 - v54;
  MEMORY[0x1E0C80A78](v55);
  v568 = (char *)&v481 - v56;
  MEMORY[0x1E0C80A78](v57);
  v509 = (char *)&v481 - v58;
  MEMORY[0x1E0C80A78](v59);
  v547 = (uint64_t)&v481 - v60;
  MEMORY[0x1E0C80A78](v61);
  v552 = (char *)&v481 - v62;
  MEMORY[0x1E0C80A78](v63);
  v535 = (char *)&v481 - v64;
  MEMORY[0x1E0C80A78](v65);
  v67 = (char *)&v481 - v66;
  v572 = sub_1DC3FFFEC();
  v574 = *(_QWORD *)(v572 - 8);
  MEMORY[0x1E0C80A78](v572);
  v500 = (char *)&v481 - ((v68 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v69);
  v499 = (char *)&v481 - v70;
  MEMORY[0x1E0C80A78](v71);
  v503 = (char *)&v481 - v72;
  MEMORY[0x1E0C80A78](v73);
  v515 = (uint64_t)&v481 - v74;
  MEMORY[0x1E0C80A78](v75);
  v510 = (char *)&v481 - v76;
  MEMORY[0x1E0C80A78](v77);
  v486 = (char *)&v481 - v78;
  MEMORY[0x1E0C80A78](v79);
  v485 = (char *)&v481 - v80;
  MEMORY[0x1E0C80A78](v81);
  v495 = (char *)&v481 - v82;
  MEMORY[0x1E0C80A78](v83);
  v497 = (uint64_t)&v481 - v84;
  MEMORY[0x1E0C80A78](v85);
  v490 = (char *)&v481 - v86;
  MEMORY[0x1E0C80A78](v87);
  v487 = (char *)&v481 - v88;
  MEMORY[0x1E0C80A78](v89);
  v489 = (char *)&v481 - v90;
  MEMORY[0x1E0C80A78](v91);
  v496 = (char *)&v481 - v92;
  MEMORY[0x1E0C80A78](v93);
  v498 = (uint64_t)&v481 - v94;
  MEMORY[0x1E0C80A78](v95);
  v492 = (char *)&v481 - v96;
  MEMORY[0x1E0C80A78](v97);
  v99 = (char *)&v481 - v98;
  MEMORY[0x1E0C80A78](v100);
  v102 = (char *)&v481 - v101;
  MEMORY[0x1E0C80A78](v103);
  v504 = (char *)&v481 - v104;
  MEMORY[0x1E0C80A78](v105);
  v506 = (char *)&v481 - v106;
  MEMORY[0x1E0C80A78](v107);
  v512 = (char *)&v481 - v108;
  MEMORY[0x1E0C80A78](v109);
  v507 = (uint64_t)&v481 - v110;
  MEMORY[0x1E0C80A78](v111);
  v518 = (char *)&v481 - v112;
  MEMORY[0x1E0C80A78](v113);
  v513 = (char *)&v481 - v114;
  MEMORY[0x1E0C80A78](v115);
  v511 = (char *)&v481 - v116;
  MEMORY[0x1E0C80A78](v117);
  v522 = (char *)&v481 - v118;
  MEMORY[0x1E0C80A78](v119);
  v528 = (uint64_t)&v481 - v120;
  MEMORY[0x1E0C80A78](v121);
  v516 = (char *)&v481 - v122;
  MEMORY[0x1E0C80A78](v123);
  v519 = (char *)&v481 - v124;
  MEMORY[0x1E0C80A78](v125);
  v521 = (char *)&v481 - v126;
  MEMORY[0x1E0C80A78](v127);
  v532 = (char *)&v481 - v128;
  MEMORY[0x1E0C80A78](v129);
  v537 = (uint64_t)&v481 - v130;
  MEMORY[0x1E0C80A78](v131);
  v529 = (char *)&v481 - v132;
  MEMORY[0x1E0C80A78](v133);
  v533 = (char *)&v481 - v134;
  MEMORY[0x1E0C80A78](v135);
  v531 = (char *)&v481 - v136;
  MEMORY[0x1E0C80A78](v137);
  v543 = (char *)&v481 - v138;
  MEMORY[0x1E0C80A78](v139);
  v549 = (uint64_t)&v481 - v140;
  MEMORY[0x1E0C80A78](v141);
  v538 = (char *)&v481 - v142;
  MEMORY[0x1E0C80A78](v143);
  v542 = (char *)&v481 - v144;
  MEMORY[0x1E0C80A78](v145);
  v541 = (char *)&v481 - v146;
  MEMORY[0x1E0C80A78](v147);
  v558 = (char *)&v481 - v148;
  MEMORY[0x1E0C80A78](v149);
  v561 = (unint64_t)&v481 - v150;
  MEMORY[0x1E0C80A78](v151);
  v553 = (char *)&v481 - v152;
  MEMORY[0x1E0C80A78](v153);
  v557 = (char *)&v481 - v154;
  MEMORY[0x1E0C80A78](v155);
  v556 = (char *)&v481 - v156;
  MEMORY[0x1E0C80A78](v157);
  v573 = (char *)&v481 - v158;
  MEMORY[0x1E0C80A78](v159);
  v562 = (uint64_t)&v481 - v160;
  MEMORY[0x1E0C80A78](v161);
  v569 = (char *)&v481 - v162;
  MEMORY[0x1E0C80A78](v163);
  v565 = (char *)&v481 - v164;
  MEMORY[0x1E0C80A78](v165);
  v564 = (char *)&v481 - v166;
  MEMORY[0x1E0C80A78](v167);
  v570 = (void (*)(char *, uint64_t, uint64_t))((char *)&v481 - v168);
  MEMORY[0x1E0C80A78](v169);
  v577 = (uint64_t)&v481 - v170;
  MEMORY[0x1E0C80A78](v171);
  v567 = (char *)&v481 - v172;
  MEMORY[0x1E0C80A78](v173);
  v545 = (char *)&v481 - v174;
  MEMORY[0x1E0C80A78](v175);
  v544 = (char *)&v481 - v176;
  MEMORY[0x1E0C80A78](v177);
  v559 = (char *)&v481 - v178;
  MEMORY[0x1E0C80A78](v179);
  v550 = (char *)&v481 - v180;
  MEMORY[0x1E0C80A78](v181);
  v551 = (char *)&v481 - v182;
  MEMORY[0x1E0C80A78](v183);
  v540 = (char *)&v481 - v184;
  MEMORY[0x1E0C80A78](v185);
  v548 = (char *)&v481 - v186;
  v187 = sub_1DC4002BC();
  v188 = *(_QWORD *)(v187 - 8);
  v189 = MEMORY[0x1E0C80A78](v187);
  v191 = (char *)&v481 - ((v190 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, unint64_t, uint64_t, __n128))(v188 + 16))(v191, v576, v187, v189);
  v192 = (*(uint64_t (**)(char *, uint64_t))(v188 + 88))(v191, v187);
  if (v192 == *MEMORY[0x1E0DAE0B0])
  {
    v193 = *(_QWORD *)(a2 + 16);
    if (!v193)
    {
      v198 = (uint64_t)v67;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v574 + 56))(v67, 1, 1, v572);
      goto LABEL_35;
    }
    v194 = v574;
    v195 = (*(unsigned __int8 *)(v574 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v574 + 80);
    v563 = a2;
    v569 = (char *)v195;
    v196 = a2 + v195;
    v197 = *(void (**)(char *, uint64_t, uint64_t))(v574 + 16);
    v198 = (uint64_t)v67;
    v199 = v572;
    v197(v67, v196, v572);
    v200 = *(char **)(v194 + 56);
    ((void (*)(char *, _QWORD, uint64_t, uint64_t))v200)(v67, 0, 1, v199);
    v201 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v194 + 48);
    if (v201(v67, 1, v199) == 1)
    {
LABEL_35:
      sub_1DC0B091C(v198, &qword_1EDB28AC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
      return MEMORY[0x1E0DEE9D8];
    }
    v202 = *(void (**)(char *, uint64_t, uint64_t))(v194 + 32);
    v203 = v548;
    v202(v548, v198, v199);
    v577 = *(_QWORD *)(v194 + 72);
    v198 = (uint64_t)v535;
    v197(v535, v196 + v577 * (v193 - 1), v199);
    ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v200)(v198, 0, 1, v199);
    if (v201((char *)v198, 1, v199) == 1)
    {
      (*(void (**)(char *, uint64_t))(v194 + 8))(v203, v199);
      goto LABEL_35;
    }
    v576 = (unint64_t)v201;
    v571 = v202;
    v202(v540, v198, v199);
    v255 = objc_msgSend((id)objc_opt_self(), sel_currentCalendar);
    sub_1DC40016C();

    sub_1DC089DA4(0, (unint64_t *)&qword_1EDB3FDF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB11B8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v256 = sub_1DC4001B4();
    v257 = *(_QWORD *)(v256 - 8);
    v258 = (*(unsigned __int8 *)(v257 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v257 + 80);
    v259 = swift_allocObject();
    *(_OWORD *)(v259 + 16) = xmmword_1DC40DC10;
    (*(void (**)(unint64_t, _QWORD, uint64_t))(v257 + 104))(v259 + v258, *MEMORY[0x1E0CB1140], v256);
    sub_1DC367EA4(v259);
    swift_setDeallocating();
    v260 = v540;
    swift_arrayDestroy();
    swift_deallocClassInstance();
    v261 = v523;
    v262 = v536;
    sub_1DC40013C();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v524 + 8))(v262, v526);
    v263 = sub_1DC3FFBA8();
    LOBYTE(v256) = v264;
    (*(void (**)(char *, uint64_t))(v525 + 8))(v261, v527);
    if ((v256 & 1) != 0)
    {
      v324 = *(void (**)(char *, uint64_t))(v574 + 8);
      v324(v260, v199);
      v324(v548, v199);
      return MEMORY[0x1E0DEE9D8];
    }
    v573 = v200;
    v265 = sub_1DC2F0280(v263);
    v267 = v266;
    v567 = (char *)*__swift_project_boxed_opaque_existential_1((_QWORD *)(v555 + 56), *(_QWORD *)(v555 + 80));
    v268 = v551;
    sub_1DC3FFF8C();
    v568 = (char *)v265;
    if (v265 >= 0)
      v269 = 1;
    else
      v269 = v267;
    v566 = v269;
    swift_bridgeObjectRetain();
    v270 = MEMORY[0x1E0DEE9D8];
    v271 = v552;
    v272 = (uint64_t)v550;
    v570 = v197;
    do
    {
      v197(v271, v196, v199);
      ((void (*)(char *, _QWORD, uint64_t, uint64_t))v573)(v271, 0, 1, v199);
      v274 = v199;
      if (((unsigned int (*)(char *, uint64_t, uint64_t))v576)(v271, 1, v199) == 1)
      {
        swift_bridgeObjectRelease();
        v344 = (void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v573;
        v273 = *(void (**)(char *, uint64_t))(v574 + 8);
        v273(v268, v199);
        goto LABEL_107;
      }
      v275 = v199;
      v276 = (void (*)(char *, char *, uint64_t))v571;
      v571((char *)v272, (uint64_t)v271, v275);
      sub_1DC2F02EC();
      v277 = sub_1DC4089E0();
      v278 = v574;
      if ((v277 & 1) != 0)
      {
        v199 = v274;
      }
      else
      {
        v197(v559, v272, v274);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v270 = sub_1DC1664B4(0, *(_QWORD *)(v270 + 16) + 1, 1, v270);
        v280 = *(_QWORD *)(v270 + 16);
        v279 = *(_QWORD *)(v270 + 24);
        if (v280 >= v279 >> 1)
          v270 = sub_1DC1664B4(v279 > 1, v280 + 1, 1, v270);
        *(_QWORD *)(v270 + 16) = v280 + 1;
        v281 = v572;
        v276(&v569[v270 + v280 * v577], v559, v572);
        v282 = *((_QWORD *)v567 + 2);
        v283 = v282 + *(_QWORD *)(*MEMORY[0x1E0DEC528] + *(_QWORD *)v282 + 16);
        v284 = (os_unfair_lock_s *)(v282 + ((*(unsigned int *)(*(_QWORD *)v282 + 48) + 3) & 0x1FFFFFFFCLL));
        os_unfair_lock_lock(v284);
        v285 = v276;
        v286 = v547;
        v287 = v283;
        v288 = v575;
        sub_1DC3FEF54(v287, v568, v272, v566, v547);
        v575 = v288;
        os_unfair_lock_unlock(v284);
        v289 = v545;
        v570(v545, v272, v281);
        if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v576)(v286, 1, v281) == 1)
        {
          v290 = v544;
          v285(v544, v289, v281);
          sub_1DC0B091C(v286, &qword_1EDB28AC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
          v278 = v574;
        }
        else
        {
          v278 = v574;
          (*(void (**)(char *, uint64_t))(v574 + 8))(v289, v281);
          v290 = v544;
          v285(v544, (char *)v286, v281);
        }
        v271 = v552;
        v268 = v551;
        (*(void (**)(char *, char *, uint64_t))(v278 + 40))(v551, v290, v281);
        v199 = v281;
        v272 = (uint64_t)v550;
        v197 = v570;
      }
      v273 = *(void (**)(char *, uint64_t))(v278 + 8);
      v273((char *)v272, v199);
      v196 += v577;
      --v193;
    }
    while (v193);
    v344 = (void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v573;
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v573)(v271, 1, 1, v199);
    swift_bridgeObjectRelease();
    v273(v268, v199);
LABEL_107:
    v578 = v270;
    if (!*(_QWORD *)(v270 + 16))
    {
LABEL_111:
      v273(v540, v199);
      v273(v548, v199);
      return v578;
    }
    v345 = (uint64_t)v509;
    v197(v509, (uint64_t)&v569[v270], v199);
    v344(v345, 0, 1, v199);
    result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v576)(v345, 1, v199);
    if ((_DWORD)result == 1)
      goto LABEL_226;
    result = sub_1DC0B091C(v345, &qword_1EDB28AC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
    if (*(_QWORD *)(v578 + 16))
    {
      sub_1DC2210F0(0, 1);
      v199 = v572;
      goto LABEL_111;
    }
    __break(1u);
    goto LABEL_222;
  }
  v563 = a2;
  if (v192 == *MEMORY[0x1E0DAE0B8])
  {
    v562 = *__swift_project_boxed_opaque_existential_1((_QWORD *)(v555 + 56), *(_QWORD *)(v555 + 80));
    v204 = (uint64_t)v567;
    sub_1DC3FFF8C();
    v205 = *(_QWORD *)(v563 + 16);
    if (v205)
    {
      v206 = v574;
      v561 = (*(unsigned __int8 *)(v574 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v574 + 80);
      v207 = v563 + v561;
      v571 = *(void (**)(char *, uint64_t, uint64_t))(v574 + 72);
      v573 = *(char **)(v574 + 16);
      swift_bridgeObjectRetain();
      v208 = MEMORY[0x1E0DEE9D8];
      v209 = v572;
      v210 = v568;
      while (1)
      {
        ((void (*)(char *, uint64_t, uint64_t))v573)(v210, v207, v209);
        v569 = *(char **)(v206 + 56);
        ((void (*)(char *, _QWORD, uint64_t, uint64_t))v569)(v210, 0, 1, v209);
        v212 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v206 + 48);
        if (v212(v210, 1, v209) == 1)
          break;
        v213 = *(void (**)(uint64_t, char *, uint64_t))(v206 + 32);
        v214 = v577;
        v213(v577, v210, v209);
        sub_1DC2F02EC();
        if ((sub_1DC4089E0() & 1) == 0)
        {
          ((void (*)(_QWORD, uint64_t, uint64_t))v573)(v570, v214, v209);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v208 = sub_1DC1664B4(0, *(_QWORD *)(v208 + 16) + 1, 1, v208);
          v216 = *(_QWORD *)(v208 + 16);
          v215 = *(_QWORD *)(v208 + 24);
          if (v216 >= v215 >> 1)
            v208 = sub_1DC1664B4(v215 > 1, v216 + 1, 1, v208);
          *(_QWORD *)(v208 + 16) = v216 + 1;
          v576 = v208;
          v209 = v572;
          v213(v208 + v561 + v216 * (_QWORD)v571, (char *)v570, v572);
          v217 = *(_QWORD *)(v562 + 16);
          v218 = v217 + *(_QWORD *)(*MEMORY[0x1E0DEC528] + *(_QWORD *)v217 + 16);
          v219 = (os_unfair_lock_s *)(v217 + ((*(unsigned int *)(*(_QWORD *)v217 + 48) + 3) & 0x1FFFFFFFCLL));
          os_unfair_lock_lock(v219);
          v220 = v566;
          v221 = v218;
          v222 = v577;
          v223 = v575;
          sub_1DC3FEF54(v221, 1u, v577, 1, v566);
          v575 = v223;
          os_unfair_lock_unlock(v219);
          v224 = v565;
          ((void (*)(char *, uint64_t, uint64_t))v573)(v565, v222, v209);
          if (v212((char *)v220, 1, v209) == 1)
          {
            v211 = v564;
            v213((uint64_t)v564, v224, v209);
            sub_1DC0B091C(v220, &qword_1EDB28AC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
            v206 = v574;
          }
          else
          {
            v206 = v574;
            (*(void (**)(char *, uint64_t))(v574 + 8))(v224, v209);
            v211 = v564;
            v213((uint64_t)v564, (char *)v220, v209);
          }
          v204 = (uint64_t)v567;
          v210 = v568;
          (*(void (**)(char *, char *, uint64_t))(v206 + 40))(v567, v211, v209);
          v208 = v576;
        }
        (*(void (**)(uint64_t, uint64_t))(v206 + 8))(v577, v209);
        v207 += (uint64_t)v571;
        if (!--v205)
        {
          ((void (*)(char *, uint64_t, uint64_t, uint64_t))v569)(v210, 1, 1, v209);
          break;
        }
      }
    }
    else
    {
      v206 = v574;
      v254 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v574 + 56);
      swift_bridgeObjectRetain();
      v208 = MEMORY[0x1E0DEE9D8];
      v209 = v572;
      v254(v568, 1, 1, v572);
    }
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v206 + 8))(v204, v209);
    return v208;
  }
  if (v192 == *MEMORY[0x1E0DAE0C8])
  {
    v568 = (char *)*__swift_project_boxed_opaque_existential_1((_QWORD *)(v555 + 56), *(_QWORD *)(v555 + 80));
    v225 = v569;
    sub_1DC3FFF8C();
    v226 = *(_QWORD *)(v563 + 16);
    if (v226)
    {
      v227 = v574;
      v567 = (char *)((*(unsigned __int8 *)(v574 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v574 + 80));
      v228 = &v567[v563];
      v229 = *(_QWORD *)(v574 + 72);
      v577 = *(_QWORD *)(v574 + 16);
      swift_bridgeObjectRetain();
      v576 = MEMORY[0x1E0DEE9D8];
      v231 = (char *)v571;
      v230 = v572;
      v232 = v562;
      v566 = v229;
      while (1)
      {
        ((void (*)(char *, char *, uint64_t))v577)(v231, v228, v230);
        v570 = *(void (**)(char *, uint64_t, uint64_t))(v227 + 56);
        ((void (*)(char *, _QWORD, uint64_t, uint64_t))v570)(v231, 0, 1, v230);
        v234 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v227 + 48);
        if (v234(v231, 1, v230) == 1)
          break;
        v235 = *(void (**)(uint64_t, char *, uint64_t))(v227 + 32);
        v235(v232, v231, v230);
        sub_1DC2F02EC();
        if ((sub_1DC4089E0() & 1) == 0)
        {
          ((void (*)(char *, uint64_t, uint64_t))v577)(v573, v232, v230);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v576 = sub_1DC1664B4(0, *(_QWORD *)(v576 + 16) + 1, 1, v576);
          v237 = *(_QWORD *)(v576 + 16);
          v236 = *(_QWORD *)(v576 + 24);
          if (v237 >= v236 >> 1)
            v576 = sub_1DC1664B4(v236 > 1, v237 + 1, 1, v576);
          v238 = v576;
          *(_QWORD *)(v576 + 16) = v237 + 1;
          v230 = v572;
          v235((uint64_t)&v567[v238 + v237 * v229], v573, v572);
          v239 = *((_QWORD *)v568 + 2);
          v240 = v239 + *(_QWORD *)(*MEMORY[0x1E0DEC528] + *(_QWORD *)v239 + 16);
          v241 = (os_unfair_lock_s *)(v239 + ((*(unsigned int *)(*(_QWORD *)v239 + 48) + 3) & 0x1FFFFFFFCLL));
          os_unfair_lock_lock(v241);
          v242 = v560;
          v243 = v240;
          v232 = v562;
          v244 = v575;
          sub_1DC3FEF54(v243, 1u, v562, 7, v560);
          v575 = v244;
          os_unfair_lock_unlock(v241);
          v245 = v557;
          ((void (*)(char *, uint64_t, uint64_t))v577)(v557, v232, v230);
          if (v234((char *)v242, 1, v230) == 1)
          {
            v233 = v556;
            v235((uint64_t)v556, v245, v230);
            sub_1DC0B091C(v242, &qword_1EDB28AC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
            v227 = v574;
          }
          else
          {
            v227 = v574;
            (*(void (**)(char *, uint64_t))(v574 + 8))(v245, v230);
            v233 = v556;
            v235((uint64_t)v556, (char *)v242, v230);
          }
          v231 = (char *)v571;
          v225 = v569;
          (*(void (**)(char *, char *, uint64_t))(v227 + 40))(v569, v233, v230);
          v229 = v566;
        }
        (*(void (**)(uint64_t, uint64_t))(v227 + 8))(v232, v230);
        v228 += v229;
        if (!--v226)
        {
          ((void (*)(char *, uint64_t, uint64_t, uint64_t))v570)(v231, 1, 1, v230);
          break;
        }
      }
    }
    else
    {
      v227 = v574;
      v323 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v574 + 56);
      swift_bridgeObjectRetain();
      v576 = MEMORY[0x1E0DEE9D8];
      v230 = v572;
      v323((char *)v571, 1, 1, v572);
    }
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v227 + 8))(v225, v230);
    return v576;
  }
  if (v192 == *MEMORY[0x1E0DAE0A0] || v192 == *MEMORY[0x1E0DAE0F0])
  {
    v571 = (void (*)(char *, uint64_t, uint64_t))*__swift_project_boxed_opaque_existential_1((_QWORD *)(v555 + 56), *(_QWORD *)(v555 + 80));
    v246 = v553;
    sub_1DC3FFF8C();
    v305 = *(_QWORD *)(v563 + 16);
    if (v305)
    {
      v248 = v574;
      v570 = (void (*)(char *, uint64_t, uint64_t))((*(unsigned __int8 *)(v574 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v574 + 80));
      v306 = (char *)v570 + v563;
      v307 = *(char **)(v574 + 72);
      v577 = *(_QWORD *)(v574 + 16);
      swift_bridgeObjectRetain();
      v576 = MEMORY[0x1E0DEE9D8];
      v251 = v572;
      v252 = v554;
      v308 = v561;
      v569 = v307;
      while (1)
      {
        ((void (*)(char *, char *, uint64_t))v577)(v252, v306, v251);
        v573 = *(char **)(v248 + 56);
        ((void (*)(char *, _QWORD, uint64_t, uint64_t))v573)(v252, 0, 1, v251);
        v310 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v248 + 48);
        if (v310(v252, 1, v251) == 1)
          break;
        v311 = *(void (**)(unint64_t, char *, uint64_t))(v248 + 32);
        v311(v308, v252, v251);
        sub_1DC2F02EC();
        if ((sub_1DC4089E0() & 1) == 0)
        {
          ((void (*)(char *, unint64_t, uint64_t))v577)(v558, v308, v251);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v576 = sub_1DC1664B4(0, *(_QWORD *)(v576 + 16) + 1, 1, v576);
          v313 = *(_QWORD *)(v576 + 16);
          v312 = *(_QWORD *)(v576 + 24);
          if (v313 >= v312 >> 1)
            v576 = sub_1DC1664B4(v312 > 1, v313 + 1, 1, v576);
          v314 = v576;
          *(_QWORD *)(v576 + 16) = v313 + 1;
          v251 = v572;
          v311((unint64_t)v570 + v314 + v313 * (_QWORD)v307, v558, v572);
          v315 = *((_QWORD *)v571 + 2);
          v316 = v315 + *(_QWORD *)(*MEMORY[0x1E0DEC528] + *(_QWORD *)v315 + 16);
          v317 = (os_unfair_lock_s *)(v315 + ((*(unsigned int *)(*(_QWORD *)v315 + 48) + 3) & 0x1FFFFFFFCLL));
          os_unfair_lock_lock(v317);
          v318 = v546;
          v319 = v316;
          v320 = v561;
          v321 = v575;
          sub_1DC3FEF54(v319, 2u, v561, 1, v546);
          v575 = v321;
          os_unfair_lock_unlock(v317);
          v322 = v542;
          ((void (*)(char *, unint64_t, uint64_t))v577)(v542, v320, v251);
          if (v310((char *)v318, 1, v251) == 1)
          {
            v309 = v541;
            v311((unint64_t)v541, v322, v251);
            sub_1DC0B091C(v318, &qword_1EDB28AC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
            v248 = v574;
          }
          else
          {
            v248 = v574;
            (*(void (**)(char *, uint64_t))(v574 + 8))(v322, v251);
            v309 = v541;
            v311((unint64_t)v541, (char *)v318, v251);
          }
          v252 = v554;
          v246 = v553;
          (*(void (**)(char *, char *, uint64_t))(v248 + 40))(v553, v309, v251);
          v308 = v561;
          v307 = v569;
        }
        (*(void (**)(unint64_t, uint64_t))(v248 + 8))(v308, v251);
        v306 = &v307[(_QWORD)v306];
        if (!--v305)
        {
LABEL_126:
          ((void (*)(char *, uint64_t, uint64_t, uint64_t))v573)(v252, 1, 1, v251);
          goto LABEL_148;
        }
      }
    }
    else
    {
      v248 = v574;
      v343 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v574 + 56);
      swift_bridgeObjectRetain();
      v576 = MEMORY[0x1E0DEE9D8];
      v251 = v572;
      v343(v554, 1, 1, v572);
    }
    goto LABEL_148;
  }
  if (v192 == *MEMORY[0x1E0DAE090])
  {
    v571 = (void (*)(char *, uint64_t, uint64_t))*__swift_project_boxed_opaque_existential_1((_QWORD *)(v555 + 56), *(_QWORD *)(v555 + 80));
    v246 = v538;
    sub_1DC3FFF8C();
    v247 = *(_QWORD *)(v563 + 16);
    if (v247)
    {
      v248 = v574;
      v570 = (void (*)(char *, uint64_t, uint64_t))((*(unsigned __int8 *)(v574 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v574 + 80));
      v249 = (char *)v570 + v563;
      v250 = *(char **)(v574 + 72);
      v577 = *(_QWORD *)(v574 + 16);
      swift_bridgeObjectRetain();
      v576 = MEMORY[0x1E0DEE9D8];
      v251 = v572;
      v252 = v539;
      v253 = v549;
      v569 = v250;
      while (1)
      {
        ((void (*)(char *, char *, uint64_t))v577)(v252, v249, v251);
        v573 = *(char **)(v248 + 56);
        ((void (*)(char *, _QWORD, uint64_t, uint64_t))v573)(v252, 0, 1, v251);
        v292 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v248 + 48);
        if (v292(v252, 1, v251) == 1)
          break;
        v293 = *(void (**)(uint64_t, char *, uint64_t))(v248 + 32);
        v293(v253, v252, v251);
        sub_1DC2F02EC();
        if ((sub_1DC4089E0() & 1) == 0)
        {
          ((void (*)(char *, uint64_t, uint64_t))v577)(v543, v253, v251);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v576 = sub_1DC1664B4(0, *(_QWORD *)(v576 + 16) + 1, 1, v576);
          v295 = *(_QWORD *)(v576 + 16);
          v294 = *(_QWORD *)(v576 + 24);
          if (v295 >= v294 >> 1)
            v576 = sub_1DC1664B4(v294 > 1, v295 + 1, 1, v576);
          v296 = v576;
          *(_QWORD *)(v576 + 16) = v295 + 1;
          v251 = v572;
          v293((uint64_t)v570 + v296 + v295 * (_QWORD)v250, v543, v572);
          v297 = *((_QWORD *)v571 + 2);
          v298 = v297 + *(_QWORD *)(*MEMORY[0x1E0DEC528] + *(_QWORD *)v297 + 16);
          v299 = (os_unfair_lock_s *)(v297 + ((*(unsigned int *)(*(_QWORD *)v297 + 48) + 3) & 0x1FFFFFFFCLL));
          os_unfair_lock_lock(v299);
          v300 = v534;
          v301 = v298;
          v302 = v549;
          v303 = v575;
          sub_1DC3FEF54(v301, 2u, v549, 2, v534);
          v575 = v303;
          os_unfair_lock_unlock(v299);
          v304 = v533;
          ((void (*)(char *, uint64_t, uint64_t))v577)(v533, v302, v251);
          if (v292((char *)v300, 1, v251) == 1)
          {
            v291 = v531;
            v293((uint64_t)v531, v304, v251);
            sub_1DC0B091C(v300, &qword_1EDB28AC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
            v248 = v574;
          }
          else
          {
            v248 = v574;
            (*(void (**)(char *, uint64_t))(v574 + 8))(v304, v251);
            v291 = v531;
            v293((uint64_t)v531, (char *)v300, v251);
          }
          v252 = v539;
          v246 = v538;
          (*(void (**)(char *, char *, uint64_t))(v248 + 40))(v538, v291, v251);
          v253 = v549;
          v250 = v569;
        }
        (*(void (**)(uint64_t, uint64_t))(v248 + 8))(v253, v251);
        v249 = &v250[(_QWORD)v249];
        if (!--v247)
          goto LABEL_126;
      }
    }
    else
    {
      v248 = v574;
      v365 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v574 + 56);
      swift_bridgeObjectRetain();
      v576 = MEMORY[0x1E0DEE9D8];
      v251 = v572;
      v365(v539, 1, 1, v572);
    }
LABEL_148:
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v248 + 8))(v246, v251);
    return v576;
  }
  if (v192 == *MEMORY[0x1E0DAE0C0])
  {
    v571 = (void (*)(char *, uint64_t, uint64_t))*__swift_project_boxed_opaque_existential_1((_QWORD *)(v555 + 56), *(_QWORD *)(v555 + 80));
    v246 = v529;
    sub_1DC3FFF8C();
    v325 = *(_QWORD *)(v563 + 16);
    if (v325)
    {
      v248 = v574;
      v570 = (void (*)(char *, uint64_t, uint64_t))((*(unsigned __int8 *)(v574 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v574 + 80));
      v326 = (char *)v570 + v563;
      v327 = *(char **)(v574 + 72);
      v577 = *(_QWORD *)(v574 + 16);
      swift_bridgeObjectRetain();
      v576 = MEMORY[0x1E0DEE9D8];
      v251 = v572;
      v252 = v530;
      v328 = v537;
      v569 = v327;
      while (1)
      {
        ((void (*)(char *, char *, uint64_t))v577)(v252, v326, v251);
        v573 = *(char **)(v248 + 56);
        ((void (*)(char *, _QWORD, uint64_t, uint64_t))v573)(v252, 0, 1, v251);
        v330 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v248 + 48);
        if (v330(v252, 1, v251) == 1)
          break;
        v331 = *(void (**)(uint64_t, char *, uint64_t))(v248 + 32);
        v331(v328, v252, v251);
        sub_1DC2F02EC();
        if ((sub_1DC4089E0() & 1) == 0)
        {
          ((void (*)(char *, uint64_t, uint64_t))v577)(v532, v328, v251);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v576 = sub_1DC1664B4(0, *(_QWORD *)(v576 + 16) + 1, 1, v576);
          v333 = *(_QWORD *)(v576 + 16);
          v332 = *(_QWORD *)(v576 + 24);
          if (v333 >= v332 >> 1)
            v576 = sub_1DC1664B4(v332 > 1, v333 + 1, 1, v576);
          v334 = v576;
          *(_QWORD *)(v576 + 16) = v333 + 1;
          v251 = v572;
          v331((uint64_t)v570 + v334 + v333 * (_QWORD)v327, v532, v572);
          v335 = *((_QWORD *)v571 + 2);
          v336 = v335 + *(_QWORD *)(*MEMORY[0x1E0DEC528] + *(_QWORD *)v335 + 16);
          v337 = (os_unfair_lock_s *)(v335 + ((*(unsigned int *)(*(_QWORD *)v335 + 48) + 3) & 0x1FFFFFFFCLL));
          os_unfair_lock_lock(v337);
          v338 = v520;
          v339 = v336;
          v340 = v537;
          v341 = v575;
          sub_1DC3FEF54(v339, 2u, v537, 4, v520);
          v575 = v341;
          os_unfair_lock_unlock(v337);
          v342 = v519;
          ((void (*)(char *, uint64_t, uint64_t))v577)(v519, v340, v251);
          if (v330((char *)v338, 1, v251) == 1)
          {
            v329 = v521;
            v331((uint64_t)v521, v342, v251);
            sub_1DC0B091C(v338, &qword_1EDB28AC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
            v248 = v574;
          }
          else
          {
            v248 = v574;
            (*(void (**)(char *, uint64_t))(v574 + 8))(v342, v251);
            v329 = v521;
            v331((uint64_t)v521, (char *)v338, v251);
          }
          v252 = v530;
          v246 = v529;
          (*(void (**)(char *, char *, uint64_t))(v248 + 40))(v529, v329, v251);
          v328 = v537;
          v327 = v569;
        }
        (*(void (**)(uint64_t, uint64_t))(v248 + 8))(v328, v251);
        v326 = &v327[(_QWORD)v326];
        if (!--v325)
          goto LABEL_126;
      }
    }
    else
    {
      v248 = v574;
      v388 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v574 + 56);
      swift_bridgeObjectRetain();
      v576 = MEMORY[0x1E0DEE9D8];
      v251 = v572;
      v388(v530, 1, 1, v572);
    }
    goto LABEL_148;
  }
  if (v192 == *MEMORY[0x1E0DAE0E0])
  {
    v571 = (void (*)(char *, uint64_t, uint64_t))*__swift_project_boxed_opaque_existential_1((_QWORD *)(v555 + 56), *(_QWORD *)(v555 + 80));
    v246 = v516;
    sub_1DC3FFF8C();
    v347 = *(_QWORD *)(v563 + 16);
    if (v347)
    {
      v248 = v574;
      v570 = (void (*)(char *, uint64_t, uint64_t))((*(unsigned __int8 *)(v574 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v574 + 80));
      v348 = (char *)v570 + v563;
      v349 = *(char **)(v574 + 72);
      v577 = *(_QWORD *)(v574 + 16);
      swift_bridgeObjectRetain();
      v576 = MEMORY[0x1E0DEE9D8];
      v251 = v572;
      v252 = v517;
      v350 = v528;
      v569 = v349;
      while (1)
      {
        ((void (*)(char *, char *, uint64_t))v577)(v252, v348, v251);
        v573 = *(char **)(v248 + 56);
        ((void (*)(char *, _QWORD, uint64_t, uint64_t))v573)(v252, 0, 1, v251);
        v352 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v248 + 48);
        if (v352(v252, 1, v251) == 1)
          break;
        v353 = *(void (**)(uint64_t, char *, uint64_t))(v248 + 32);
        v353(v350, v252, v251);
        sub_1DC2F02EC();
        if ((sub_1DC4089E0() & 1) == 0)
        {
          ((void (*)(char *, uint64_t, uint64_t))v577)(v522, v350, v251);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v576 = sub_1DC1664B4(0, *(_QWORD *)(v576 + 16) + 1, 1, v576);
          v355 = *(_QWORD *)(v576 + 16);
          v354 = *(_QWORD *)(v576 + 24);
          if (v355 >= v354 >> 1)
            v576 = sub_1DC1664B4(v354 > 1, v355 + 1, 1, v576);
          v356 = v576;
          *(_QWORD *)(v576 + 16) = v355 + 1;
          v251 = v572;
          v353((uint64_t)v570 + v356 + v355 * (_QWORD)v349, v522, v572);
          v357 = *((_QWORD *)v571 + 2);
          v358 = v357 + *(_QWORD *)(*MEMORY[0x1E0DEC528] + *(_QWORD *)v357 + 16);
          v359 = (os_unfair_lock_s *)(v357 + ((*(unsigned int *)(*(_QWORD *)v357 + 48) + 3) & 0x1FFFFFFFCLL));
          os_unfair_lock_lock(v359);
          v360 = v514;
          v361 = v358;
          v362 = v528;
          v363 = v575;
          sub_1DC3FEF54(v361, 2u, v528, 6, v514);
          v575 = v363;
          os_unfair_lock_unlock(v359);
          v364 = v513;
          ((void (*)(char *, uint64_t, uint64_t))v577)(v513, v362, v251);
          if (v352((char *)v360, 1, v251) == 1)
          {
            v351 = v511;
            v353((uint64_t)v511, v364, v251);
            sub_1DC0B091C(v360, &qword_1EDB28AC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
            v248 = v574;
          }
          else
          {
            v248 = v574;
            (*(void (**)(char *, uint64_t))(v574 + 8))(v364, v251);
            v351 = v511;
            v353((uint64_t)v511, (char *)v360, v251);
          }
          v252 = v517;
          v246 = v516;
          (*(void (**)(char *, char *, uint64_t))(v248 + 40))(v516, v351, v251);
          v350 = v528;
          v349 = v569;
        }
        (*(void (**)(uint64_t, uint64_t))(v248 + 8))(v350, v251);
        v348 = &v349[(_QWORD)v348];
        if (!--v347)
          goto LABEL_126;
      }
    }
    else
    {
      v248 = v574;
      v389 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v574 + 56);
      swift_bridgeObjectRetain();
      v576 = MEMORY[0x1E0DEE9D8];
      v251 = v572;
      v389(v517, 1, 1, v572);
    }
    goto LABEL_148;
  }
  if (v192 != *MEMORY[0x1E0DAE0E8])
  {
    if (v192 != *MEMORY[0x1E0DAE0D8] && v192 != *MEMORY[0x1E0DAE0A8])
    {
      (*(void (**)(char *, uint64_t))(v188 + 8))(v191, v187);
      return MEMORY[0x1E0DEE9D8];
    }
    v390 = (uint64_t)v26;
    v391 = *(char **)(v563 + 16);
    if (v391)
    {
      v576 = (unint64_t)v23;
      v392 = v574;
      v569 = (char *)((*(unsigned __int8 *)(v574 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v574 + 80));
      v393 = &v569[v563];
      v394 = v572;
      v570 = *(void (**)(char *, uint64_t, uint64_t))(v574 + 16);
      v570((char *)v390, (uint64_t)&v569[v563], v572);
      v395 = *(void (**)(char *, uint64_t, uint64_t))(v392 + 56);
      ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v395)(v390, 0, 1, v394);
      v396 = *(void (**)(char *, uint64_t, uint64_t))(v392 + 48);
      if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v396)(v390, 1, v394) != 1)
      {
        v577 = *(_QWORD *)(v392 + 32);
        ((void (*)(char *, uint64_t, uint64_t))v577)(v102, v390, v394);
        v397 = *(char **)(v392 + 72);
        v564 = v393;
        v568 = v397;
        v390 = v576;
        v570((char *)v576, (uint64_t)&v393[(_QWORD)v397 * (_QWORD)(v391 - 1)], v394);
        ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v395)(v390, 0, 1, v394);
        if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v396)(v390, 1, v394) != 1)
        {
          v571 = v396;
          v573 = v391;
          v567 = v14;
          ((void (*)(char *, uint64_t, uint64_t))v577)(v99, v390, v394);
          v418 = v536;
          sub_1DC40019C();
          sub_1DC089DA4(0, (unint64_t *)&qword_1EDB3FDF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB11B8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
          v419 = sub_1DC4001B4();
          v420 = *(_QWORD *)(v419 - 8);
          v421 = (*(unsigned __int8 *)(v420 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v420 + 80);
          v422 = swift_allocObject();
          *(_OWORD *)(v422 + 16) = xmmword_1DC40DC10;
          (*(void (**)(unint64_t, _QWORD, uint64_t))(v420 + 104))(v422 + v421, *MEMORY[0x1E0CB1158], v419);
          sub_1DC367EA4(v422);
          swift_setDeallocating();
          swift_arrayDestroy();
          swift_deallocClassInstance();
          v423 = v484;
          sub_1DC40013C();
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v524 + 8))(v418, v526);
          v424 = sub_1DC3FFBB4();
          LOBYTE(v419) = v425;
          result = (*(uint64_t (**)(char *, uint64_t))(v525 + 8))(v423, v527);
          v483 = v102;
          v482 = v99;
          if ((v419 & 1) != 0)
          {
            v567 = (char *)*__swift_project_boxed_opaque_existential_1((_QWORD *)(v555 + 56), *(_QWORD *)(v555 + 80));
            v454 = v492;
            sub_1DC3FFF8C();
            swift_bridgeObjectRetain();
            v576 = MEMORY[0x1E0DEE9D8];
            v429 = v572;
            v455 = v573;
            v456 = v493;
            v457 = v498;
            v458 = v570;
            v459 = v564;
            v460 = v568;
            v570(v493, (uint64_t)v564, v572);
            while (1)
            {
              ((void (*)(char *, _QWORD, uint64_t, uint64_t))v395)(v456, 0, 1, v429);
              if (((unsigned int (*)(char *, uint64_t, uint64_t))v571)(v456, 1, v429) == 1)
              {
                swift_bridgeObjectRelease();
                v437 = *(void (**)(char *, uint64_t))(v574 + 8);
                v437(v454, v429);
                goto LABEL_217;
              }
              ((void (*)(uint64_t, char *, uint64_t))v577)(v457, v456, v429);
              sub_1DC2F02EC();
              if ((sub_1DC4089E0() & 1) != 0)
              {
                v461 = v574;
              }
              else
              {
                v458(v496, v457, v429);
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                  v576 = sub_1DC1664B4(0, *(_QWORD *)(v576 + 16) + 1, 1, v576);
                v462 = (void (*)(char *, char *, uint64_t))v577;
                v464 = *(_QWORD *)(v576 + 16);
                v463 = *(_QWORD *)(v576 + 24);
                v465 = v455;
                if (v464 >= v463 >> 1)
                  v576 = sub_1DC1664B4(v463 > 1, v464 + 1, 1, v576);
                v466 = v576;
                *(_QWORD *)(v576 + 16) = v464 + 1;
                v467 = v572;
                v462(&v569[v466 + v464 * (_QWORD)v460], v496, v572);
                v468 = *((_QWORD *)v567 + 2);
                v469 = v468 + *(_QWORD *)(*MEMORY[0x1E0DEC528] + *(_QWORD *)v468 + 16);
                v470 = (os_unfair_lock_s *)(v468 + ((*(unsigned int *)(*(_QWORD *)v468 + 48) + 3) & 0x1FFFFFFFCLL));
                os_unfair_lock_lock(v470);
                v471 = v462;
                v472 = v488;
                v473 = v469;
                v474 = v498;
                v475 = v575;
                sub_1DC3FEF54(v473, 3u, v498, 3, v488);
                v575 = v475;
                v429 = v467;
                os_unfair_lock_unlock(v470);
                v476 = v487;
                v570(v487, v474, v467);
                if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v571)(v472, 1, v467) == 1)
                {
                  v477 = v489;
                  v471(v489, v476, v467);
                  sub_1DC0B091C(v472, &qword_1EDB28AC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
                  v461 = v574;
                }
                else
                {
                  v461 = v574;
                  (*(void (**)(char *, uint64_t))(v574 + 8))(v476, v467);
                  v477 = v489;
                  v471(v489, (char *)v472, v467);
                }
                v456 = v493;
                v455 = v465;
                v454 = v492;
                (*(void (**)(char *, char *, uint64_t))(v461 + 40))(v492, v477, v429);
                v457 = v498;
                v458 = v570;
                v460 = v568;
              }
              v437 = *(void (**)(char *, uint64_t))(v461 + 8);
              v437((char *)v457, v429);
              v459 = &v460[(_QWORD)v459];
              if (!--v455)
                break;
              v458(v456, (uint64_t)v459, v429);
            }
            ((void (*)(char *, uint64_t, uint64_t, uint64_t))v395)(v456, 1, 1, v429);
            swift_bridgeObjectRelease();
            v437(v454, v429);
LABEL_217:
            v437(v482, v429);
            v478 = v483;
          }
          else
          {
            v426 = ceilf((float)v424 / 5.0);
            v427 = v564;
            v428 = v568;
            if ((~LODWORD(v426) & 0x7F800000) == 0)
            {
LABEL_223:
              __break(1u);
              goto LABEL_224;
            }
            v429 = v572;
            v430 = v573;
            if (v426 <= -9.2234e18)
            {
LABEL_224:
              __break(1u);
              goto LABEL_225;
            }
            if (v426 >= 9.2234e18)
            {
LABEL_225:
              __break(1u);
LABEL_226:
              __break(1u);
              goto LABEL_227;
            }
            v431 = (uint64_t)v426;
            if ((uint64_t)v426 <= 1)
              v431 = 1;
            v566 = v431;
            v565 = (char *)*__swift_project_boxed_opaque_existential_1((_QWORD *)(v555 + 56), *(_QWORD *)(v555 + 80));
            v432 = v490;
            sub_1DC3FFF8C();
            swift_bridgeObjectRetain();
            v576 = MEMORY[0x1E0DEE9D8];
            v433 = v491;
            v434 = v497;
            v435 = v570;
            v570(v491, (uint64_t)v427, v429);
            while (1)
            {
              ((void (*)(char *, _QWORD, uint64_t, uint64_t))v395)(v433, 0, 1, v429);
              if (((unsigned int (*)(char *, uint64_t, uint64_t))v571)(v433, 1, v429) == 1)
              {
                swift_bridgeObjectRelease();
                v437 = *(void (**)(char *, uint64_t))(v574 + 8);
                goto LABEL_219;
              }
              ((void (*)(uint64_t, char *, uint64_t))v577)(v434, v433, v429);
              sub_1DC2F02EC();
              if ((sub_1DC4089E0() & 1) != 0)
              {
                v436 = v574;
              }
              else
              {
                v435(v495, v434, v429);
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                  v576 = sub_1DC1664B4(0, *(_QWORD *)(v576 + 16) + 1, 1, v576);
                v439 = *(_QWORD *)(v576 + 16);
                v438 = *(_QWORD *)(v576 + 24);
                v440 = v430;
                if (v439 >= v438 >> 1)
                  v576 = sub_1DC1664B4(v438 > 1, v439 + 1, 1, v576);
                v441 = v576;
                *(_QWORD *)(v576 + 16) = v439 + 1;
                v442 = &v569[v441 + v439 * (_QWORD)v428];
                v443 = v572;
                v444 = (void (*)(char *, char *, uint64_t))v577;
                ((void (*)(char *, char *, uint64_t))v577)(v442, v495, v572);
                v445 = *((_QWORD *)v565 + 2);
                v446 = v445 + *(_QWORD *)(*MEMORY[0x1E0DEC528] + *(_QWORD *)v445 + 16);
                v447 = (os_unfair_lock_s *)(v445 + ((*(unsigned int *)(*(_QWORD *)v445 + 48) + 3) & 0x1FFFFFFFCLL));
                os_unfair_lock_lock(v447);
                v448 = (uint64_t)v567;
                v449 = v446;
                v450 = v497;
                v451 = v575;
                sub_1DC3FEF54(v449, 3u, v497, v566, (uint64_t)v567);
                v575 = v451;
                v429 = v443;
                os_unfair_lock_unlock(v447);
                v452 = v486;
                v570(v486, v450, v429);
                if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v571)(v448, 1, v429) == 1)
                {
                  v453 = v485;
                  v444(v485, v452, v429);
                  sub_1DC0B091C(v448, &qword_1EDB28AC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
                  v436 = v574;
                }
                else
                {
                  v436 = v574;
                  (*(void (**)(char *, uint64_t))(v574 + 8))(v452, v429);
                  v453 = v485;
                  v444(v485, (char *)v448, v429);
                }
                v433 = v491;
                v432 = v490;
                (*(void (**)(char *, char *, uint64_t))(v436 + 40))(v490, v453, v429);
                v430 = v440;
                v434 = v497;
                v435 = v570;
                v428 = v568;
              }
              v437 = *(void (**)(char *, uint64_t))(v436 + 8);
              v437((char *)v434, v429);
              v427 = &v428[(_QWORD)v427];
              if (!--v430)
                break;
              v435(v433, (uint64_t)v427, v429);
            }
            ((void (*)(char *, uint64_t, uint64_t, uint64_t))v395)(v433, 1, 1, v429);
            swift_bridgeObjectRelease();
LABEL_219:
            v479 = v483;
            v480 = v482;
            v437(v432, v429);
            v437(v480, v429);
            v478 = v479;
          }
          v437(v478, v429);
          return v576;
        }
        (*(void (**)(char *, uint64_t))(v392 + 8))(v102, v394);
      }
    }
    else
    {
      v392 = v574;
      v395 = *(void (**)(char *, uint64_t, uint64_t))(v574 + 56);
      v394 = v572;
      ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v395)(v390, 1, 1, v572);
    }
    sub_1DC0B091C(v390, &qword_1EDB28AC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
    v571 = (void (*)(char *, uint64_t, uint64_t))*__swift_project_boxed_opaque_existential_1((_QWORD *)(v555 + 56), *(_QWORD *)(v555 + 80));
    sub_1DC3FFF8C();
    if (v391)
    {
      v569 = (char *)((*(unsigned __int8 *)(v392 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v392 + 80));
      v399 = &v569[v563];
      v400 = *(_QWORD *)(v392 + 16);
      v576 = *(_QWORD *)(v392 + 72);
      v577 = v400;
      swift_bridgeObjectRetain();
      v401 = MEMORY[0x1E0DEE9D8];
      v402 = v502;
      v570 = v395;
      while (1)
      {
        ((void (*)(char *, char *, uint64_t))v577)(v402, v399, v394);
        ((void (*)(char *, _QWORD, uint64_t, uint64_t))v395)(v402, 0, 1, v394);
        v403 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v392 + 48);
        if (v403(v402, 1, v394) == 1)
          break;
        v404 = v395;
        v405 = *(void (**)(uint64_t, char *, uint64_t))(v392 + 32);
        v406 = v515;
        v405(v515, v402, v394);
        sub_1DC2F02EC();
        if ((sub_1DC4089E0() & 1) != 0)
        {
          v395 = v404;
        }
        else
        {
          ((void (*)(char *, uint64_t, uint64_t))v577)(v503, v406, v394);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v401 = sub_1DC1664B4(0, *(_QWORD *)(v401 + 16) + 1, 1, v401);
          v408 = *(_QWORD *)(v401 + 16);
          v407 = *(_QWORD *)(v401 + 24);
          v573 = v391;
          if (v408 >= v407 >> 1)
            v401 = sub_1DC1664B4(v407 > 1, v408 + 1, 1, v401);
          *(_QWORD *)(v401 + 16) = v408 + 1;
          v394 = v572;
          v405((uint64_t)&v569[v401 + v408 * v576], v503, v572);
          v409 = *((_QWORD *)v571 + 2);
          v410 = v409 + *(_QWORD *)(*MEMORY[0x1E0DEC528] + *(_QWORD *)v409 + 16);
          v411 = (os_unfair_lock_s *)(v409 + ((*(unsigned int *)(*(_QWORD *)v409 + 48) + 3) & 0x1FFFFFFFCLL));
          os_unfair_lock_lock(v411);
          v412 = v501;
          v413 = v410;
          v414 = v515;
          v415 = v575;
          sub_1DC3FEF54(v413, 3u, v515, 3, v501);
          v575 = v415;
          os_unfair_lock_unlock(v411);
          v416 = v500;
          ((void (*)(char *, uint64_t, uint64_t))v577)(v500, v414, v394);
          if (v403((char *)v412, 1, v394) == 1)
          {
            v417 = v499;
            v405((uint64_t)v499, v416, v394);
            sub_1DC0B091C(v412, &qword_1EDB28AC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
            v392 = v574;
          }
          else
          {
            v392 = v574;
            (*(void (**)(char *, uint64_t))(v574 + 8))(v416, v394);
            v417 = v499;
            v405((uint64_t)v499, (char *)v412, v394);
          }
          v402 = v502;
          v395 = v570;
          v391 = v573;
          (*(void (**)(char *, char *, uint64_t))(v392 + 40))(v510, v417, v394);
        }
        (*(void (**)(uint64_t, uint64_t))(v392 + 8))(v515, v394);
        v399 += v576;
        if (!--v391)
          goto LABEL_178;
      }
    }
    else
    {
      swift_bridgeObjectRetain();
      v401 = MEMORY[0x1E0DEE9D8];
      v402 = v502;
LABEL_178:
      ((void (*)(char *, uint64_t, uint64_t, uint64_t))v395)(v402, 1, 1, v394);
    }
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v392 + 8))(v510, v394);
    return v401;
  }
  v570 = (void (*)(char *, uint64_t, uint64_t))*__swift_project_boxed_opaque_existential_1((_QWORD *)(v555 + 56), *(_QWORD *)(v555 + 80));
  sub_1DC3FFF8C();
  v366 = *(_QWORD *)(v563 + 16);
  v367 = v572;
  if (v366)
  {
    v368 = v574;
    v569 = (char *)((*(unsigned __int8 *)(v368 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v368 + 80));
    v369 = &v569[v563];
    v370 = *(_QWORD *)(v574 + 16);
    v576 = *(_QWORD *)(v574 + 72);
    v577 = v370;
    swift_bridgeObjectRetain();
    v208 = MEMORY[0x1E0DEE9D8];
    v371 = v508;
    v372 = v507;
    while (1)
    {
      v375 = v208;
      ((void (*)(char *, char *, uint64_t))v577)(v371, v369, v367);
      v374 = *(char **)(v368 + 56);
      ((void (*)(char *, _QWORD, uint64_t, uint64_t))v374)(v371, 0, 1, v367);
      v376 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v368 + 48);
      if (v376(v371, 1, v367) == 1)
        break;
      v377 = *(void (**)(uint64_t, char *, uint64_t))(v368 + 32);
      v377(v372, v371, v367);
      sub_1DC2F02EC();
      if ((sub_1DC4089E0() & 1) == 0)
      {
        ((void (*)(char *, uint64_t, uint64_t))v577)(v512, v372, v367);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v375 = sub_1DC1664B4(0, *(_QWORD *)(v375 + 16) + 1, 1, v375);
        v378 = v377;
        v380 = *(_QWORD *)(v375 + 16);
        v379 = *(_QWORD *)(v375 + 24);
        v573 = v374;
        if (v380 >= v379 >> 1)
          v375 = sub_1DC1664B4(v379 > 1, v380 + 1, 1, v375);
        *(_QWORD *)(v375 + 16) = v380 + 1;
        v367 = v572;
        v377((uint64_t)&v569[v375 + v380 * v576], v512, v572);
        v381 = *((_QWORD *)v570 + 2);
        v382 = v381 + *(_QWORD *)(*MEMORY[0x1E0DEC528] + *(_QWORD *)v381 + 16);
        v383 = (os_unfair_lock_s *)(v381 + ((*(unsigned int *)(*(_QWORD *)v381 + 48) + 3) & 0x1FFFFFFFCLL));
        os_unfair_lock_lock(v383);
        v571 = (void (*)(char *, uint64_t, uint64_t))v378;
        v384 = v505;
        v385 = v382;
        v372 = v507;
        v386 = v575;
        sub_1DC3FEF54(v385, 3u, v507, 1, v505);
        v575 = v386;
        os_unfair_lock_unlock(v383);
        v387 = v504;
        ((void (*)(char *, uint64_t, uint64_t))v577)(v504, v372, v367);
        if (v376((char *)v384, 1, v367) == 1)
        {
          v373 = v506;
          v571(v506, (uint64_t)v387, v367);
          sub_1DC0B091C(v384, &qword_1EDB28AC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
          v368 = v574;
        }
        else
        {
          v368 = v574;
          (*(void (**)(char *, uint64_t))(v574 + 8))(v387, v367);
          v373 = v506;
          v571(v506, v384, v367);
        }
        v371 = v508;
        v374 = v573;
        (*(void (**)(char *, char *, uint64_t))(v368 + 40))(v518, v373, v367);
      }
      v208 = v375;
      (*(void (**)(uint64_t, uint64_t))(v368 + 8))(v372, v367);
      v369 += v576;
      if (!--v366)
        goto LABEL_156;
    }
    v208 = v375;
  }
  else
  {
    v368 = v574;
    v374 = *(char **)(v574 + 56);
    swift_bridgeObjectRetain();
    v208 = MEMORY[0x1E0DEE9D8];
    v371 = v508;
LABEL_156:
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v374)(v371, 1, 1, v367);
  }
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v368 + 8))(v518, v367);
  v578 = v208;
  if (*(_QWORD *)(v208 + 16) <= 5uLL)
    return v208;
  v398 = (uint64_t)v494;
  (*(void (**)(char *, unint64_t, uint64_t))(v368 + 16))(v494, v208 + ((*(unsigned __int8 *)(v368 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v368 + 80)), v367);
  ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v374)(v398, 0, 1, v367);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v368 + 48))(v398, 1, v367);
  if ((_DWORD)result != 1)
  {
    result = sub_1DC0B091C(v398, &qword_1EDB28AC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
    if (*(_QWORD *)(v578 + 16))
    {
      sub_1DC2210F0(0, 1);
      return v578;
    }
LABEL_222:
    __break(1u);
    goto LABEL_223;
  }
LABEL_227:
  __break(1u);
  return result;
}

uint64_t sub_1DC2F0280(uint64_t result)
{
  float v1;

  if (result < 7)
    return 0;
  v1 = ceilf((float)result / 5.0);
  if ((~LODWORD(v1) & 0x7F800000) != 0)
  {
    if (v1 > -9.2234e18)
    {
      if (v1 < 9.2234e18)
        return 0x8000000000000000;
      goto LABEL_9;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
LABEL_9:
  __break(1u);
  return result;
}

unint64_t sub_1DC2F02EC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EDB28AA0;
  if (!qword_1EDB28AA0)
  {
    v1 = sub_1DC3FFFEC();
    result = MEMORY[0x1DF0CAB8C](MEMORY[0x1E0CB08B0], v1);
    atomic_store(result, (unint64_t *)&qword_1EDB28AA0);
  }
  return result;
}

uint64_t sub_1DC2F0334(uint64_t a1, void (*a2)(char *, char *, uint64_t), uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  char *v26;
  int v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  char *v35;
  void (*v36)(char *, char *, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  char *v42;
  char v43;
  void (*v44)(char *, uint64_t);
  char *v45;
  uint64_t v46;
  double v47;
  char v48;
  char v49;
  double v50;
  char v51;
  char *v52;
  char *v53;
  unint64_t v54;
  unint64_t v55;
  void (*v56)(char *, char *, uint64_t);
  char *v57;
  char *v58;
  unint64_t v59;
  unint64_t v60;
  char *v62;
  char *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  void (*v67)(char *, char *, uint64_t);
  char *v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;

  v67 = a2;
  v69 = sub_1DC3FFFEC();
  v64 = *(_QWORD *)(v69 - 8);
  MEMORY[0x1E0C80A78](v69);
  v68 = (char *)&v62 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v70 = (char *)&v62 - v6;
  v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1DC089DA4(0, &qword_1EDB28DC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF040], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v8);
  v66 = (uint64_t)&v62 - v9;
  v10 = sub_1DC401030();
  v71 = *(_QWORD *)(v10 - 8);
  v72 = v10;
  MEMORY[0x1E0C80A78](v10);
  v63 = (char *)&v62 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC089DA4(0, (unint64_t *)&qword_1EDB28D70, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAEF60], v7);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v62 - v13;
  v15 = sub_1DC400F34();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v65 = (char *)&v62 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v62 = (char *)&v62 - v19;
  MEMORY[0x1E0C80A78](v20);
  v73 = (char *)&v62 - v21;
  v22 = sub_1DC4002BC();
  v23 = *(_QWORD *)(v22 - 8);
  v24 = MEMORY[0x1E0C80A78](v22);
  v26 = (char *)&v62 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v23 + 16))(v26, a3, v22, v24);
  v27 = (*(uint64_t (**)(char *, uint64_t))(v23 + 88))(v26, v22);
  LODWORD(v7) = *MEMORY[0x1E0DAE0B0];
  (*(void (**)(char *, uint64_t))(v23 + 8))(v26, v22);
  v28 = sub_1DC400F58();
  v29 = v28;
  if (v27 != (_DWORD)v7)
    return v29;
  v30 = *(_QWORD *)(v28 + 16);
  if (v30)
  {
    v31 = v16;
    v32 = v15;
    (*(void (**)(char *, unint64_t, uint64_t))(v16 + 16))(v14, v28+ ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80))+ *(_QWORD *)(v16 + 72) * (v30 - 1), v15);
    v33 = 0;
  }
  else
  {
    v33 = 1;
    v32 = v15;
    v31 = v16;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v31 + 56))(v14, v33, 1, v32);
  swift_bridgeObjectRelease();
  v34 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v31 + 48))(v14, 1, v32);
  v35 = v73;
  if (v34 == 1)
  {
    sub_1DC0B091C((uint64_t)v14, (unint64_t *)&qword_1EDB28D70, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAEF60]);
    return sub_1DC400F58();
  }
  v36 = *(void (**)(char *, char *, uint64_t))(v31 + 32);
  v36(v73, v14, v32);
  v29 = sub_1DC400F58();
  v37 = v66;
  sub_1DC0F01B0((uint64_t)v67, v66);
  v38 = v71;
  v39 = v72;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v71 + 48))(v37, 1, v72) != 1)
  {
    v67 = v36;
    v40 = v63;
    (*(void (**)(char *, uint64_t, uint64_t))(v38 + 32))(v63, v37, v39);
    v41 = v70;
    sub_1DC400F04();
    v42 = v68;
    sub_1DC400FE8();
    v43 = sub_1DC3FFF68();
    v44 = *(void (**)(char *, uint64_t))(v64 + 8);
    v45 = v42;
    v46 = v69;
    v44(v45, v69);
    v44(v41, v46);
    if ((v43 & 1) == 0)
    {
      (*(void (**)(char *, uint64_t))(v38 + 8))(v40, v72);
      goto LABEL_15;
    }
    v47 = COERCE_DOUBLE(sub_1DC400F1C());
    v49 = v48;
    v50 = COERCE_DOUBLE(sub_1DC401024());
    if ((v49 & 1) != 0)
    {
      if ((v51 & 1) != 0)
      {
LABEL_13:
        (*(void (**)(char *, uint64_t))(v71 + 8))(v40, v72);
LABEL_15:
        v36 = v67;
        goto LABEL_22;
      }
    }
    else if ((v51 & 1) == 0 && v47 == v50)
    {
      goto LABEL_13;
    }
    v52 = v68;
    sub_1DC400F04();
    sub_1DC3FFF44();
    v44(v52, v69);
    sub_1DC401024();
    v53 = v62;
    sub_1DC400F10();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v29 = sub_1DC1664A0(0, *(_QWORD *)(v29 + 16) + 1, 1, v29);
    v55 = *(_QWORD *)(v29 + 16);
    v54 = *(_QWORD *)(v29 + 24);
    if (v55 >= v54 >> 1)
      v29 = sub_1DC1664A0(v54 > 1, v55 + 1, 1, v29);
    *(_QWORD *)(v29 + 16) = v55 + 1;
    v56 = v67;
    v67((char *)(v29+ ((*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80))+ *(_QWORD *)(v31 + 72) * v55), v53, v32);
    v57 = v40;
    v36 = v56;
    (*(void (**)(char *, uint64_t))(v71 + 8))(v57, v72);
    goto LABEL_22;
  }
  sub_1DC0B091C(v37, &qword_1EDB28DC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF040]);
LABEL_22:
  if (*(_QWORD *)(v29 + 16) == 1)
  {
    v58 = v68;
    sub_1DC400F04();
    sub_1DC3FFF44();
    (*(void (**)(char *, uint64_t))(v64 + 8))(v58, v69);
    sub_1DC400F1C();
    sub_1DC400F10();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v29 = sub_1DC1664A0(0, *(_QWORD *)(v29 + 16) + 1, 1, v29);
    v60 = *(_QWORD *)(v29 + 16);
    v59 = *(_QWORD *)(v29 + 24);
    if (v60 >= v59 >> 1)
      v29 = sub_1DC1664A0(v59 > 1, v60 + 1, 1, v29);
    *(_QWORD *)(v29 + 16) = v60 + 1;
    v36((char *)(v29+ ((*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80))+ *(_QWORD *)(v31 + 72) * v60), v65, v32);
  }
  (*(void (**)(char *, uint64_t))(v31 + 8))(v35, v32);
  return v29;
}

_QWORD *sub_1DC2F09EC(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  void (*v35)(char *, char *, uint64_t);
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  void (*v42)(char *, char *, uint64_t);
  uint64_t v43;
  _QWORD *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  char *v61;
  uint64_t v62;
  char *v64;
  char *v65;
  char *v66;
  void (*v67)(char *, char *, uint64_t);
  uint64_t v68;
  int *v69;
  int *v70;
  _QWORD *v71;
  _QWORD *v72;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    v15 = (_QWORD *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1DC4010E4();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1DC401030();
    v12 = *(_QWORD *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    {
      sub_1DC092F50(0, &qword_1EDB28DC0, (void (*)(uint64_t))MEMORY[0x1E0DAF040]);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    v16 = a3[6];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    v19 = sub_1DC400F7C();
    v20 = *(_QWORD *)(v19 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
    {
      sub_1DC092F50(0, (unint64_t *)&unk_1EDB28D90, (void (*)(uint64_t))MEMORY[0x1E0DAEFA8]);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v17, v18, v19);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
    }
    v70 = a3;
    v71 = a2;
    v22 = a3[7];
    v72 = a1;
    v23 = (_QWORD *)((char *)a1 + v22);
    v24 = (char *)a2 + v22;
    v25 = *(_QWORD *)((char *)a2 + v22 + 8);
    *v23 = *(_QWORD *)((char *)a2 + v22);
    v23[1] = v25;
    v69 = (int *)type metadata accessor for QuoteSummaryViewModel();
    v26 = v69[5];
    v27 = (char *)v23 + v26;
    v28 = &v24[v26];
    *(_QWORD *)v27 = *(_QWORD *)&v24[v26];
    v27[8] = v24[v26 + 8];
    *((_QWORD *)v27 + 2) = *(_QWORD *)&v24[v26 + 16];
    v27[24] = v24[v26 + 24];
    *((_QWORD *)v27 + 4) = *(_QWORD *)&v24[v26 + 32];
    v27[40] = v24[v26 + 40];
    v29 = *(_QWORD *)&v24[v26 + 56];
    *((_QWORD *)v27 + 6) = *(_QWORD *)&v24[v26 + 48];
    *((_QWORD *)v27 + 7) = v29;
    v30 = *(_QWORD *)&v24[v26 + 72];
    *((_QWORD *)v27 + 8) = *(_QWORD *)&v24[v26 + 64];
    *((_QWORD *)v27 + 9) = v30;
    v27[80] = v24[v26 + 80];
    v31 = type metadata accessor for PriceViewModel();
    v32 = *(int *)(v31 + 40);
    v33 = &v27[v32];
    v66 = &v28[v32];
    v34 = sub_1DC4011C8();
    v35 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v36 = v66;
    v67 = v35;
    v68 = v34;
    v35(v33, v36, v34);
    v37 = v31;
    v38 = *(int *)(v31 + 44);
    v39 = &v27[v38];
    v40 = &v28[v38];
    v41 = sub_1DC400118();
    v42 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 16);
    v42(v39, v40, v41);
    v43 = v69[6];
    v44 = (_QWORD *)((char *)v23 + v43);
    v45 = &v24[v43];
    v46 = *(_QWORD *)(v37 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48))(&v24[v43], 1, v37))
    {
      sub_1DC092F50(0, (unint64_t *)&qword_1EDB2D5E8, (void (*)(uint64_t))type metadata accessor for PriceViewModel);
      memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
    }
    else
    {
      *v44 = *(_QWORD *)v45;
      *((_BYTE *)v44 + 8) = v45[8];
      v44[2] = *((_QWORD *)v45 + 2);
      *((_BYTE *)v44 + 24) = v45[24];
      v44[4] = *((_QWORD *)v45 + 4);
      *((_BYTE *)v44 + 40) = v45[40];
      v48 = *((_QWORD *)v45 + 7);
      v44[6] = *((_QWORD *)v45 + 6);
      v44[7] = v48;
      v49 = *((_QWORD *)v45 + 9);
      v44[8] = *((_QWORD *)v45 + 8);
      v44[9] = v49;
      *((_BYTE *)v44 + 80) = v45[80];
      v50 = *(int *)(v37 + 40);
      v64 = &v45[v50];
      v65 = (char *)v44 + v50;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v67(v65, v64, v68);
      v42((char *)v44 + *(int *)(v37 + 44), &v45[*(int *)(v37 + 44)], v41);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v44, 0, 1, v37);
    }
    v51 = v69[7];
    v52 = (char *)v23 + v51;
    v53 = &v24[v51];
    v54 = sub_1DC4008EC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v54 - 8) + 16))(v52, v53, v54);
    v55 = v69[8];
    v56 = (char *)v23 + v55;
    v57 = &v24[v55];
    v58 = sub_1DC4002BC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v58 - 8) + 16))(v56, v57, v58);
    v59 = v69[9];
    v60 = (_QWORD *)((char *)v23 + v59);
    v61 = &v24[v59];
    v62 = *((_QWORD *)v61 + 1);
    *v60 = *(_QWORD *)v61;
    v60[1] = v62;
    v15 = v72;
    *((_BYTE *)v72 + v70[8]) = *((_BYTE *)v71 + v70[8]);
    swift_bridgeObjectRetain();
  }
  return v15;
}

uint64_t sub_1DC2F0E3C(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v4 = sub_1DC4010E4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  v6 = sub_1DC401030();
  v7 = *(_QWORD *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6))
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  v8 = a1 + a2[6];
  v9 = sub_1DC400F7C();
  v10 = *(_QWORD *)(v9 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  v11 = a1 + a2[7];
  swift_bridgeObjectRelease();
  v12 = (int *)type metadata accessor for QuoteSummaryViewModel();
  v13 = v11 + v12[5];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v14 = type metadata accessor for PriceViewModel();
  v15 = v13 + *(int *)(v14 + 40);
  v16 = sub_1DC4011C8();
  v17 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8);
  v17(v15, v16);
  v18 = v13 + *(int *)(v14 + 44);
  v19 = sub_1DC400118();
  v20 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 8);
  v20(v18, v19);
  v21 = v11 + v12[6];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v21, 1, v14))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v17(v21 + *(int *)(v14 + 40), v16);
    v20(v21 + *(int *)(v14 + 44), v19);
  }
  v22 = v11 + v12[7];
  v23 = sub_1DC4008EC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 8))(v22, v23);
  v24 = v11 + v12[8];
  v25 = sub_1DC4002BC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 8))(v24, v25);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DC2F1048(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  const void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  void (*v32)(char *, char *, uint64_t);
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t, uint64_t);
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  _QWORD *v58;
  uint64_t v59;
  char *v61;
  char *v62;
  char *v63;
  void (*v64)(char *, char *, uint64_t);
  uint64_t v65;
  int *v66;
  int *v67;
  uint64_t v68;
  uint64_t v69;

  v6 = sub_1DC4010E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_1DC401030();
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    sub_1DC092F50(0, &qword_1EDB28DC0, (void (*)(uint64_t))MEMORY[0x1E0DAF040]);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v13 = a3[6];
  v14 = (void *)(a1 + v13);
  v15 = (const void *)(a2 + v13);
  v16 = sub_1DC400F7C();
  v17 = *(_QWORD *)(v16 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
  {
    sub_1DC092F50(0, (unint64_t *)&unk_1EDB28D90, (void (*)(uint64_t))MEMORY[0x1E0DAEFA8]);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v17 + 16))(v14, v15, v16);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  }
  v67 = a3;
  v68 = a2;
  v19 = a3[7];
  v69 = a1;
  v20 = (_QWORD *)(a1 + v19);
  v21 = a2 + v19;
  v22 = *(_QWORD *)(a2 + v19 + 8);
  *v20 = *(_QWORD *)(a2 + v19);
  v20[1] = v22;
  v66 = (int *)type metadata accessor for QuoteSummaryViewModel();
  v23 = v66[5];
  v24 = (char *)v20 + v23;
  v25 = v21 + v23;
  *(_QWORD *)v24 = *(_QWORD *)(v21 + v23);
  v24[8] = *(_BYTE *)(v21 + v23 + 8);
  *((_QWORD *)v24 + 2) = *(_QWORD *)(v21 + v23 + 16);
  v24[24] = *(_BYTE *)(v21 + v23 + 24);
  *((_QWORD *)v24 + 4) = *(_QWORD *)(v21 + v23 + 32);
  v24[40] = *(_BYTE *)(v21 + v23 + 40);
  v26 = *(_QWORD *)(v21 + v23 + 56);
  *((_QWORD *)v24 + 6) = *(_QWORD *)(v21 + v23 + 48);
  *((_QWORD *)v24 + 7) = v26;
  v27 = *(_QWORD *)(v21 + v23 + 72);
  *((_QWORD *)v24 + 8) = *(_QWORD *)(v21 + v23 + 64);
  *((_QWORD *)v24 + 9) = v27;
  v24[80] = *(_BYTE *)(v21 + v23 + 80);
  v28 = type metadata accessor for PriceViewModel();
  v29 = *(int *)(v28 + 40);
  v30 = &v24[v29];
  v63 = (char *)(v25 + v29);
  v31 = sub_1DC4011C8();
  v32 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v33 = v63;
  v64 = v32;
  v65 = v31;
  v32(v30, v33, v31);
  v34 = v28;
  v35 = *(int *)(v28 + 44);
  v36 = &v24[v35];
  v37 = v25 + v35;
  v38 = sub_1DC400118();
  v39 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 16);
  v39(v36, v37, v38);
  v40 = v66[6];
  v41 = (_QWORD *)((char *)v20 + v40);
  v42 = (_QWORD *)(v21 + v40);
  v43 = *(_QWORD *)(v34 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v43 + 48))(v21 + v40, 1, v34))
  {
    sub_1DC092F50(0, (unint64_t *)&qword_1EDB2D5E8, (void (*)(uint64_t))type metadata accessor for PriceViewModel);
    memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
  }
  else
  {
    *v41 = *v42;
    *((_BYTE *)v41 + 8) = *((_BYTE *)v42 + 8);
    v41[2] = v42[2];
    *((_BYTE *)v41 + 24) = *((_BYTE *)v42 + 24);
    v41[4] = v42[4];
    *((_BYTE *)v41 + 40) = *((_BYTE *)v42 + 40);
    v45 = v42[7];
    v41[6] = v42[6];
    v41[7] = v45;
    v46 = v42[9];
    v41[8] = v42[8];
    v41[9] = v46;
    *((_BYTE *)v41 + 80) = *((_BYTE *)v42 + 80);
    v47 = *(int *)(v34 + 40);
    v61 = (char *)v42 + v47;
    v62 = (char *)v41 + v47;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v64(v62, v61, v65);
    v39((char *)v41 + *(int *)(v34 + 44), (uint64_t)v42 + *(int *)(v34 + 44), v38);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v41, 0, 1, v34);
  }
  v48 = v66[7];
  v49 = (char *)v20 + v48;
  v50 = v21 + v48;
  v51 = sub_1DC4008EC();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 16))(v49, v50, v51);
  v52 = v66[8];
  v53 = (char *)v20 + v52;
  v54 = v21 + v52;
  v55 = sub_1DC4002BC();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 16))(v53, v54, v55);
  v56 = v66[9];
  v57 = (_QWORD *)((char *)v20 + v56);
  v58 = (_QWORD *)(v21 + v56);
  v59 = v58[1];
  *v57 = *v58;
  v57[1] = v59;
  *(_BYTE *)(v69 + v67[8]) = *(_BYTE *)(v68 + v67[8]);
  swift_bridgeObjectRetain();
  return v69;
}

uint64_t sub_1DC2F1468(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(void *, uint64_t, uint64_t);
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  void (*v37)(char *, char *);
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  void (*v42)(char *, char *);
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t (*v47)(char *, uint64_t, uint64_t);
  int v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  void (*v56)(uint64_t, char *, uint64_t);
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  _QWORD *v68;
  uint64_t result;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  int *v77;
  int *v78;
  uint64_t v79;
  uint64_t v80;

  v6 = sub_1DC4010E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (void *)(a1 + v7);
  v9 = (void *)(a2 + v7);
  v10 = sub_1DC401030();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    sub_1DC092F50(0, &qword_1EDB28DC0, (void (*)(uint64_t))MEMORY[0x1E0DAF040]);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 24))(v8, v9, v10);
LABEL_7:
  v16 = a3[6];
  v17 = (void *)(a1 + v16);
  v18 = (void *)(a2 + v16);
  v19 = sub_1DC400F7C();
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v20 + 48);
  v22 = v21(v17, 1, v19);
  v23 = v21(v18, 1, v19);
  if (v22)
  {
    if (!v23)
    {
      (*(void (**)(void *, void *, uint64_t))(v20 + 16))(v17, v18, v19);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v23)
  {
    (*(void (**)(void *, uint64_t))(v20 + 8))(v17, v19);
LABEL_12:
    sub_1DC092F50(0, (unint64_t *)&unk_1EDB28D90, (void (*)(uint64_t))MEMORY[0x1E0DAEFA8]);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v20 + 24))(v17, v18, v19);
LABEL_13:
  v78 = a3;
  v79 = a2;
  v25 = a3[7];
  v80 = a1;
  v26 = (char *)(a1 + v25);
  v27 = (_QWORD *)(a2 + v25);
  *(_QWORD *)v26 = *v27;
  *((_QWORD *)v26 + 1) = v27[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v28 = type metadata accessor for QuoteSummaryViewModel();
  v29 = *(int *)(v28 + 20);
  v30 = &v26[v29];
  v31 = (char *)v27 + v29;
  LOBYTE(v29) = *((_BYTE *)v27 + v29 + 8);
  *(_QWORD *)v30 = *(_QWORD *)v31;
  v30[8] = v29;
  LOBYTE(v29) = v31[24];
  *((_QWORD *)v30 + 2) = *((_QWORD *)v31 + 2);
  v30[24] = v29;
  LOBYTE(v29) = v31[40];
  *((_QWORD *)v30 + 4) = *((_QWORD *)v31 + 4);
  v30[40] = v29;
  *((_QWORD *)v30 + 6) = *((_QWORD *)v31 + 6);
  *((_QWORD *)v30 + 7) = *((_QWORD *)v31 + 7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)v30 + 8) = *((_QWORD *)v31 + 8);
  *((_QWORD *)v30 + 9) = *((_QWORD *)v31 + 9);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v30[80] = v31[80];
  v32 = type metadata accessor for PriceViewModel();
  v33 = *(int *)(v32 + 40);
  v34 = &v30[v33];
  v35 = &v31[v33];
  v36 = sub_1DC4011C8();
  v73 = *(_QWORD *)(v36 - 8);
  v37 = *(void (**)(char *, char *))(v73 + 24);
  v75 = v36;
  v37(v34, v35);
  v38 = *(int *)(v32 + 44);
  v39 = &v30[v38];
  v40 = &v31[v38];
  v41 = sub_1DC400118();
  v74 = *(_QWORD *)(v41 - 8);
  v42 = *(void (**)(char *, char *))(v74 + 24);
  v76 = v41;
  v42(v39, v40);
  v77 = (int *)v28;
  v43 = *(int *)(v28 + 24);
  v44 = (uint64_t)&v26[v43];
  v45 = (char *)v27 + v43;
  v46 = *(_QWORD *)(v32 - 8);
  v47 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v46 + 48);
  v48 = v47(&v26[v43], 1, v32);
  v49 = v47(v45, 1, v32);
  if (!v48)
  {
    if (!v49)
    {
      v70 = *(_QWORD *)v45;
      *(_BYTE *)(v44 + 8) = v45[8];
      *(_QWORD *)v44 = v70;
      v71 = *((_QWORD *)v45 + 2);
      *(_BYTE *)(v44 + 24) = v45[24];
      *(_QWORD *)(v44 + 16) = v71;
      v72 = *((_QWORD *)v45 + 4);
      *(_BYTE *)(v44 + 40) = v45[40];
      *(_QWORD *)(v44 + 32) = v72;
      *(_QWORD *)(v44 + 48) = *((_QWORD *)v45 + 6);
      *(_QWORD *)(v44 + 56) = *((_QWORD *)v45 + 7);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v44 + 64) = *((_QWORD *)v45 + 8);
      *(_QWORD *)(v44 + 72) = *((_QWORD *)v45 + 9);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v44 + 80) = v45[80];
      ((void (*)(uint64_t, char *, uint64_t))v37)(v44 + *(int *)(v32 + 40), &v45[*(int *)(v32 + 40)], v75);
      ((void (*)(uint64_t, char *, uint64_t))v42)(v44 + *(int *)(v32 + 44), &v45[*(int *)(v32 + 44)], v76);
      goto LABEL_19;
    }
    sub_1DC180A68(v44);
    goto LABEL_18;
  }
  if (v49)
  {
LABEL_18:
    sub_1DC092F50(0, (unint64_t *)&qword_1EDB2D5E8, (void (*)(uint64_t))type metadata accessor for PriceViewModel);
    memcpy((void *)v44, v45, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
    goto LABEL_19;
  }
  v50 = *(_QWORD *)v45;
  *(_BYTE *)(v44 + 8) = v45[8];
  *(_QWORD *)v44 = v50;
  v51 = *((_QWORD *)v45 + 2);
  *(_BYTE *)(v44 + 24) = v45[24];
  *(_QWORD *)(v44 + 16) = v51;
  v52 = *((_QWORD *)v45 + 4);
  *(_BYTE *)(v44 + 40) = v45[40];
  *(_QWORD *)(v44 + 32) = v52;
  *(_QWORD *)(v44 + 48) = *((_QWORD *)v45 + 6);
  *(_QWORD *)(v44 + 56) = *((_QWORD *)v45 + 7);
  *(_QWORD *)(v44 + 64) = *((_QWORD *)v45 + 8);
  *(_QWORD *)(v44 + 72) = *((_QWORD *)v45 + 9);
  *(_BYTE *)(v44 + 80) = v45[80];
  v53 = *(int *)(v32 + 40);
  v54 = v44 + v53;
  v55 = &v45[v53];
  v56 = *(void (**)(uint64_t, char *, uint64_t))(v73 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v56(v54, v55, v75);
  (*(void (**)(uint64_t, char *, uint64_t))(v74 + 16))(v44 + *(int *)(v32 + 44), &v45[*(int *)(v32 + 44)], v76);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v46 + 56))(v44, 0, 1, v32);
LABEL_19:
  v58 = v77[7];
  v59 = &v26[v58];
  v60 = (char *)v27 + v58;
  v61 = sub_1DC4008EC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v61 - 8) + 24))(v59, v60, v61);
  v62 = v77[8];
  v63 = &v26[v62];
  v64 = (char *)v27 + v62;
  v65 = sub_1DC4002BC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v65 - 8) + 24))(v63, v64, v65);
  v66 = v77[9];
  v67 = &v26[v66];
  v68 = (_QWORD *)((char *)v27 + v66);
  *(_QWORD *)v67 = *v68;
  *((_QWORD *)v67 + 1) = v68[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  result = v80;
  *(_BYTE *)(v80 + v78[8]) = *(_BYTE *)(v79 + v78[8]);
  return result;
}

uint64_t sub_1DC2F1A2C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  const void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _OWORD *v21;
  int *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  void (*v36)(uint64_t, char *, uint64_t);
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t result;
  void (*v52)(uint64_t, char *, uint64_t);
  int *v53;
  uint64_t v54;
  uint64_t v55;

  v6 = sub_1DC4010E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_1DC401030();
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    sub_1DC092F50(0, &qword_1EDB28DC0, (void (*)(uint64_t))MEMORY[0x1E0DAF040]);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v13 = a3[6];
  v14 = (void *)(a1 + v13);
  v15 = (const void *)(a2 + v13);
  v16 = sub_1DC400F7C();
  v17 = *(_QWORD *)(v16 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
  {
    sub_1DC092F50(0, (unint64_t *)&unk_1EDB28D90, (void (*)(uint64_t))MEMORY[0x1E0DAEFA8]);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v17 + 32))(v14, v15, v16);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  }
  v53 = a3;
  v54 = a2;
  v19 = a3[7];
  v55 = a1;
  v20 = a1 + v19;
  v21 = (_OWORD *)(a2 + v19);
  *(_OWORD *)(a1 + v19) = *v21;
  v22 = (int *)type metadata accessor for QuoteSummaryViewModel();
  v23 = v22[5];
  v24 = v20 + v23;
  v25 = (char *)v21 + v23;
  *(_QWORD *)v24 = *(_QWORD *)((char *)v21 + v23);
  *(_BYTE *)(v24 + 8) = *((_BYTE *)v21 + v23 + 8);
  *(_QWORD *)(v24 + 16) = *(_QWORD *)((char *)v21 + v23 + 16);
  *(_BYTE *)(v24 + 24) = *((_BYTE *)v21 + v23 + 24);
  *(_QWORD *)(v24 + 32) = *(_QWORD *)((char *)v21 + v23 + 32);
  *(_BYTE *)(v24 + 40) = *((_BYTE *)v21 + v23 + 40);
  v26 = *(_OWORD *)((char *)v21 + v23 + 64);
  *(_OWORD *)(v24 + 48) = *(_OWORD *)((char *)v21 + v23 + 48);
  *(_OWORD *)(v24 + 64) = v26;
  *(_BYTE *)(v24 + 80) = *((_BYTE *)v21 + v23 + 80);
  v27 = type metadata accessor for PriceViewModel();
  v28 = *(int *)(v27 + 40);
  v29 = v24 + v28;
  v30 = &v25[v28];
  v31 = sub_1DC4011C8();
  v52 = *(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 32);
  v52(v29, v30, v31);
  v32 = *(int *)(v27 + 44);
  v33 = v24 + v32;
  v34 = &v25[v32];
  v35 = sub_1DC400118();
  v36 = *(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 32);
  v36(v33, v34, v35);
  v37 = v22[6];
  v38 = (_QWORD *)(v20 + v37);
  v39 = (_QWORD *)((char *)v21 + v37);
  v40 = *(_QWORD *)(v27 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))((char *)v21 + v37, 1, v27))
  {
    sub_1DC092F50(0, (unint64_t *)&qword_1EDB2D5E8, (void (*)(uint64_t))type metadata accessor for PriceViewModel);
    memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
  }
  else
  {
    *v38 = *v39;
    *((_BYTE *)v38 + 8) = *((_BYTE *)v39 + 8);
    v38[2] = v39[2];
    *((_BYTE *)v38 + 24) = *((_BYTE *)v39 + 24);
    v38[4] = v39[4];
    *((_BYTE *)v38 + 40) = *((_BYTE *)v39 + 40);
    v42 = *((_OWORD *)v39 + 4);
    *((_OWORD *)v38 + 3) = *((_OWORD *)v39 + 3);
    *((_OWORD *)v38 + 4) = v42;
    *((_BYTE *)v38 + 80) = *((_BYTE *)v39 + 80);
    v52((uint64_t)v38 + *(int *)(v27 + 40), (char *)v39 + *(int *)(v27 + 40), v31);
    v36((uint64_t)v38 + *(int *)(v27 + 44), (char *)v39 + *(int *)(v27 + 44), v35);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v38, 0, 1, v27);
  }
  v43 = v22[7];
  v44 = v20 + v43;
  v45 = (char *)v21 + v43;
  v46 = sub_1DC4008EC();
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 32))(v44, v45, v46);
  v47 = v22[8];
  v48 = v20 + v47;
  v49 = (char *)v21 + v47;
  v50 = sub_1DC4002BC();
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v50 - 8) + 32))(v48, v49, v50);
  *(_OWORD *)(v20 + v22[9]) = *(_OWORD *)((char *)v21 + v22[9]);
  result = v55;
  *(_BYTE *)(v55 + v53[8]) = *(_BYTE *)(v54 + v53[8]);
  return result;
}

uint64_t sub_1DC2F1DF0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(void *, uint64_t, uint64_t);
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, uint64_t);
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(char *, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t (*v50)(char *, uint64_t, uint64_t);
  int v51;
  int v52;
  __int128 v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t result;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  int *v75;
  int *v76;
  uint64_t v77;
  uint64_t v78;

  v6 = sub_1DC4010E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = (void *)(a1 + v7);
  v9 = (void *)(a2 + v7);
  v10 = sub_1DC401030();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v8, v9, v10);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    sub_1DC092F50(0, &qword_1EDB28DC0, (void (*)(uint64_t))MEMORY[0x1E0DAF040]);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v8, v9, v10);
LABEL_7:
  v16 = a3[6];
  v17 = (void *)(a1 + v16);
  v18 = (void *)(a2 + v16);
  v19 = sub_1DC400F7C();
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v20 + 48);
  v22 = v21(v17, 1, v19);
  v23 = v21(v18, 1, v19);
  if (v22)
  {
    if (!v23)
    {
      (*(void (**)(void *, void *, uint64_t))(v20 + 32))(v17, v18, v19);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v23)
  {
    (*(void (**)(void *, uint64_t))(v20 + 8))(v17, v19);
LABEL_12:
    sub_1DC092F50(0, (unint64_t *)&unk_1EDB28D90, (void (*)(uint64_t))MEMORY[0x1E0DAEFA8]);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v20 + 40))(v17, v18, v19);
LABEL_13:
  v76 = a3;
  v77 = a2;
  v25 = a3[7];
  v78 = a1;
  v26 = (char *)(a1 + v25);
  v27 = a2 + v25;
  v28 = *(_QWORD *)(a2 + v25 + 8);
  *(_QWORD *)v26 = *(_QWORD *)(a2 + v25);
  *((_QWORD *)v26 + 1) = v28;
  swift_bridgeObjectRelease();
  v29 = type metadata accessor for QuoteSummaryViewModel();
  v30 = *(int *)(v29 + 20);
  v31 = &v26[v30];
  v32 = v27 + v30;
  *(_QWORD *)v31 = *(_QWORD *)(v27 + v30);
  v31[8] = *(_BYTE *)(v27 + v30 + 8);
  *((_QWORD *)v31 + 2) = *(_QWORD *)(v27 + v30 + 16);
  v31[24] = *(_BYTE *)(v27 + v30 + 24);
  *((_QWORD *)v31 + 4) = *(_QWORD *)(v27 + v30 + 32);
  v31[40] = *(_BYTE *)(v27 + v30 + 40);
  v33 = *(_QWORD *)(v27 + v30 + 56);
  *((_QWORD *)v31 + 6) = *(_QWORD *)(v27 + v30 + 48);
  *((_QWORD *)v31 + 7) = v33;
  swift_bridgeObjectRelease();
  v34 = *(_QWORD *)(v32 + 72);
  *((_QWORD *)v31 + 8) = *(_QWORD *)(v32 + 64);
  *((_QWORD *)v31 + 9) = v34;
  swift_bridgeObjectRelease();
  v31[80] = *(_BYTE *)(v32 + 80);
  v35 = type metadata accessor for PriceViewModel();
  v36 = *(int *)(v35 + 40);
  v37 = &v31[v36];
  v38 = v32 + v36;
  v39 = sub_1DC4011C8();
  v72 = *(_QWORD *)(v39 - 8);
  v73 = v39;
  v40 = *(void (**)(char *, uint64_t))(v72 + 40);
  v40(v37, v38);
  v41 = *(int *)(v35 + 44);
  v42 = &v31[v41];
  v43 = v32 + v41;
  v44 = sub_1DC400118();
  v71 = *(_QWORD *)(v44 - 8);
  v45 = *(void (**)(char *, uint64_t))(v71 + 40);
  v74 = v44;
  v45(v42, v43);
  v75 = (int *)v29;
  v46 = *(int *)(v29 + 24);
  v47 = (uint64_t)&v26[v46];
  v48 = v27 + v46;
  v49 = *(_QWORD *)(v35 - 8);
  v50 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v49 + 48);
  v51 = v50(&v26[v46], 1, v35);
  v52 = v50((char *)v48, 1, v35);
  if (!v51)
  {
    if (!v52)
    {
      *(_QWORD *)v47 = *(_QWORD *)v48;
      *(_BYTE *)(v47 + 8) = *(_BYTE *)(v48 + 8);
      *(_QWORD *)(v47 + 16) = *(_QWORD *)(v48 + 16);
      *(_BYTE *)(v47 + 24) = *(_BYTE *)(v48 + 24);
      *(_QWORD *)(v47 + 32) = *(_QWORD *)(v48 + 32);
      *(_BYTE *)(v47 + 40) = *(_BYTE *)(v48 + 40);
      v69 = *(_QWORD *)(v48 + 56);
      *(_QWORD *)(v47 + 48) = *(_QWORD *)(v48 + 48);
      *(_QWORD *)(v47 + 56) = v69;
      swift_bridgeObjectRelease();
      v70 = *(_QWORD *)(v48 + 72);
      *(_QWORD *)(v47 + 64) = *(_QWORD *)(v48 + 64);
      *(_QWORD *)(v47 + 72) = v70;
      swift_bridgeObjectRelease();
      *(_BYTE *)(v47 + 80) = *(_BYTE *)(v48 + 80);
      ((void (*)(uint64_t, uint64_t, uint64_t))v40)(v47 + *(int *)(v35 + 40), v48 + *(int *)(v35 + 40), v73);
      ((void (*)(uint64_t, uint64_t, uint64_t))v45)(v47 + *(int *)(v35 + 44), v48 + *(int *)(v35 + 44), v74);
      goto LABEL_19;
    }
    sub_1DC180A68(v47);
    goto LABEL_18;
  }
  if (v52)
  {
LABEL_18:
    sub_1DC092F50(0, (unint64_t *)&qword_1EDB2D5E8, (void (*)(uint64_t))type metadata accessor for PriceViewModel);
    memcpy((void *)v47, (const void *)v48, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
    goto LABEL_19;
  }
  *(_QWORD *)v47 = *(_QWORD *)v48;
  *(_BYTE *)(v47 + 8) = *(_BYTE *)(v48 + 8);
  *(_QWORD *)(v47 + 16) = *(_QWORD *)(v48 + 16);
  *(_BYTE *)(v47 + 24) = *(_BYTE *)(v48 + 24);
  *(_QWORD *)(v47 + 32) = *(_QWORD *)(v48 + 32);
  *(_BYTE *)(v47 + 40) = *(_BYTE *)(v48 + 40);
  v53 = *(_OWORD *)(v48 + 64);
  *(_OWORD *)(v47 + 48) = *(_OWORD *)(v48 + 48);
  *(_OWORD *)(v47 + 64) = v53;
  *(_BYTE *)(v47 + 80) = *(_BYTE *)(v48 + 80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v72 + 32))(v47 + *(int *)(v35 + 40), v48 + *(int *)(v35 + 40), v73);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v71 + 32))(v47 + *(int *)(v35 + 44), v48 + *(int *)(v35 + 44), v74);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v49 + 56))(v47, 0, 1, v35);
LABEL_19:
  v55 = v75[7];
  v56 = &v26[v55];
  v57 = v27 + v55;
  v58 = sub_1DC4008EC();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 40))(v56, v57, v58);
  v59 = v75[8];
  v60 = &v26[v59];
  v61 = v27 + v59;
  v62 = sub_1DC4002BC();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 40))(v60, v61, v62);
  v63 = v75[9];
  v64 = &v26[v63];
  v65 = (uint64_t *)(v27 + v63);
  v67 = *v65;
  v66 = v65[1];
  *(_QWORD *)v64 = v67;
  *((_QWORD *)v64 + 1) = v66;
  swift_bridgeObjectRelease();
  result = v78;
  *(_BYTE *)(v78 + v76[8]) = *(_BYTE *)(v77 + v76[8]);
  return result;
}

uint64_t sub_1DC2F2328()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC2F2334(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int v17;
  int v18;

  v6 = sub_1DC4010E4();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  sub_1DC092F50(0, &qword_1EDB28DC0, (void (*)(uint64_t))MEMORY[0x1E0DAF040]);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v13 = a3[5];
LABEL_9:
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  sub_1DC092F50(0, (unint64_t *)&unk_1EDB28D90, (void (*)(uint64_t))MEMORY[0x1E0DAEFA8]);
  v12 = *(_QWORD *)(v14 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v14;
    v13 = a3[6];
    goto LABEL_9;
  }
  v15 = type metadata accessor for QuoteSummaryViewModel();
  v12 = *(_QWORD *)(v15 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v15;
    v13 = a3[7];
    goto LABEL_9;
  }
  v17 = *(unsigned __int8 *)(a1 + a3[8]);
  if (v17 >= 2)
    v18 = ((v17 + 2147483646) & 0x7FFFFFFF) - 1;
  else
    v18 = -2;
  if (v18 < 0)
    v18 = -1;
  return (v18 + 1);
}

uint64_t sub_1DC2F2460()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC2F246C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;

  v8 = sub_1DC4010E4();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  sub_1DC092F50(0, &qword_1EDB28DC0, (void (*)(uint64_t))MEMORY[0x1E0DAF040]);
  v14 = *(_QWORD *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = v13;
    v15 = a4[5];
LABEL_9:
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  sub_1DC092F50(0, (unint64_t *)&unk_1EDB28D90, (void (*)(uint64_t))MEMORY[0x1E0DAEFA8]);
  v14 = *(_QWORD *)(v16 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = v16;
    v15 = a4[6];
    goto LABEL_9;
  }
  result = type metadata accessor for QuoteSummaryViewModel();
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v15 = a4[7];
    goto LABEL_9;
  }
  *(_BYTE *)(a1 + a4[8]) = a2 + 2;
  return result;
}

uint64_t sub_1DC2F2578@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, uint64_t a6@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t, uint64_t, __n128);
  int *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t result;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  uint64_t v52;
  uint64_t v53;

  v51 = a5;
  v47 = a4;
  v53 = a3;
  v9 = sub_1DC4002BC();
  MEMORY[0x1E0C80A78](v9);
  v48 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = sub_1DC4008EC();
  v42 = *(_QWORD *)(v45 - 8);
  MEMORY[0x1E0C80A78](v45);
  v41 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (void (*)(uint64_t))MEMORY[0x1E0DAEFA8];
  sub_1DC092F50(0, (unint64_t *)&unk_1EDB28D90, (void (*)(uint64_t))MEMORY[0x1E0DAEFA8]);
  MEMORY[0x1E0C80A78](v13);
  v52 = (uint64_t)&v38 - v14;
  sub_1DC092F50(0, &qword_1EDB28DC0, (void (*)(uint64_t))MEMORY[0x1E0DAF040]);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v38 - v16;
  v18 = sub_1DC4010E4();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v21 = (char *)&v38 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for QuoteSummaryViewModel();
  v23 = MEMORY[0x1E0C80A78](v22);
  v44 = (uint64_t *)((char *)&v38 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  v46 = v19;
  v25 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v19 + 16);
  v25(a6, a1, v18, v23);
  v26 = (int *)type metadata accessor for StockFeedMastheadModel();
  sub_1DC092F9C(a2, a6 + v26[5], &qword_1EDB28DC0, (void (*)(uint64_t))MEMORY[0x1E0DAF040]);
  v27 = v26[6];
  v49 = a6;
  v28 = a6 + v27;
  v29 = v53;
  sub_1DC092F9C(v53, v28, (unint64_t *)&unk_1EDB28D90, v12);
  v39 = v21;
  v40 = v18;
  v50 = a1;
  ((void (*)(char *, uint64_t, uint64_t))v25)(v21, a1, v18);
  v43 = v17;
  sub_1DC092F9C(a2, (uint64_t)v17, &qword_1EDB28DC0, (void (*)(uint64_t))MEMORY[0x1E0DAF040]);
  sub_1DC092F9C(v29, v52, (unint64_t *)&unk_1EDB28D90, v12);
  v30 = v42;
  v31 = (uint64_t)v41;
  v32 = v47;
  v33 = v45;
  (*(void (**)(void))(v42 + 16))();
  sub_1DC40133C();
  sub_1DC401324();
  if (qword_1EDB28E90 != -1)
    swift_once();
  v34 = (uint64_t)v48;
  sub_1DC401318();
  swift_release();
  v35 = v44;
  sub_1DC21809C((uint64_t)v39, (uint64_t)v43, v52, v31, v34, v44);
  (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v32, v33);
  sub_1DC092F14(v53, (unint64_t *)&unk_1EDB28D90, (void (*)(uint64_t))MEMORY[0x1E0DAEFA8]);
  sub_1DC092F14(a2, &qword_1EDB28DC0, (void (*)(uint64_t))MEMORY[0x1E0DAF040]);
  (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v50, v40);
  v36 = v49;
  result = sub_1DC101A24((uint64_t)v35, v49 + v26[7]);
  *(_BYTE *)(v36 + v26[8]) = v51;
  return result;
}

uint64_t sub_1DC2F2908(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  void (*v17)(uint64_t);
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE *v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE *v29;
  uint64_t v30;
  __n128 v31;
  uint64_t v32;
  _BYTE *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unsigned int (*v43)(uint64_t, uint64_t, uint64_t);
  uint64_t v44;
  void (*v45)(uint64_t);
  uint64_t v46;
  void (*v47)(uint64_t);
  unint64_t *v48;
  unint64_t *v49;
  void (*v50)(uint64_t);
  uint64_t v51;
  _BYTE *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(_BYTE *, uint64_t);
  void (*v58)(uint64_t);
  uint64_t v59;
  void (*v60)(uint64_t);
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _BYTE *v65;
  uint64_t v66;
  uint64_t v67;
  unsigned int (*v68)(uint64_t, uint64_t, uint64_t);
  uint64_t v69;
  void (*v70)(uint64_t);
  _BYTE *v71;
  void (*v72)(uint64_t);
  _BYTE *v74;
  void (*v75)(uint64_t);
  char v76;
  void (*v77)(_BYTE *, uint64_t);
  uint64_t v78;
  uint64_t v79;
  BOOL v80;
  unsigned int v81;
  _BYTE v82[12];
  int v83;
  _BYTE *v84;
  uint64_t v85;
  _BYTE *v86;
  _BYTE *v87;
  _BYTE *v88;
  _BYTE *v89;
  _BYTE *v90;
  uint64_t v91;
  uint64_t v92;
  _BYTE *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;

  v97 = a2;
  v3 = sub_1DC400F7C();
  v4 = (void (*)(uint64_t))MEMORY[0x1E0DAEFA8];
  v94 = v3;
  v92 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v89 = &v82[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1DC0EDE94(0, &qword_1EDB28DA0, (unint64_t *)&unk_1EDB28D90, v4);
  v91 = v6;
  MEMORY[0x1E0C80A78](v6);
  v93 = &v82[-v7];
  sub_1DC092F50(0, (unint64_t *)&unk_1EDB28D90, v4);
  MEMORY[0x1E0C80A78](v8);
  v90 = &v82[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v10);
  v12 = &v82[-v11];
  MEMORY[0x1E0C80A78](v13);
  v15 = &v82[-v14];
  v16 = sub_1DC401030();
  v17 = (void (*)(uint64_t))MEMORY[0x1E0DAF040];
  v95 = *(_QWORD *)(v16 - 8);
  v96 = v16;
  MEMORY[0x1E0C80A78](v16);
  v19 = &v82[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1DC0EDE94(0, (unint64_t *)&qword_1EDB27478, &qword_1EDB28DC0, v17);
  v21 = v20;
  MEMORY[0x1E0C80A78](v20);
  v23 = &v82[-v22];
  sub_1DC092F50(0, &qword_1EDB28DC0, v17);
  MEMORY[0x1E0C80A78](v24);
  v26 = &v82[-((v25 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v27);
  v29 = &v82[-v28];
  v31 = MEMORY[0x1E0C80A78](v30);
  v33 = &v82[-v32];
  v34 = v97;
  if ((MEMORY[0x1DF0C18C8](a1, v31) & 1) == 0)
    return 0;
  v86 = v26;
  v87 = v12;
  v84 = v19;
  v88 = v15;
  v35 = type metadata accessor for StockFeedMastheadModel();
  v36 = *(int *)(v35 + 20);
  v85 = a1;
  v37 = a1 + v36;
  v38 = v34;
  v39 = (void (*)(uint64_t))MEMORY[0x1E0DAF040];
  sub_1DC092F9C(v37, (uint64_t)v33, &qword_1EDB28DC0, (void (*)(uint64_t))MEMORY[0x1E0DAF040]);
  sub_1DC092F9C(v38 + *(int *)(v35 + 20), (uint64_t)v29, &qword_1EDB28DC0, v39);
  v40 = (uint64_t)&v23[*(int *)(v21 + 48)];
  sub_1DC092F9C((uint64_t)v33, (uint64_t)v23, &qword_1EDB28DC0, v39);
  sub_1DC092F9C((uint64_t)v29, v40, &qword_1EDB28DC0, v39);
  v42 = v95;
  v41 = v96;
  v43 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v95 + 48);
  v44 = (uint64_t)v29;
  if (v43((uint64_t)v23, 1, v96) == 1)
  {
    v45 = (void (*)(uint64_t))MEMORY[0x1E0DAF040];
    sub_1DC092F14((uint64_t)v29, &qword_1EDB28DC0, (void (*)(uint64_t))MEMORY[0x1E0DAF040]);
    sub_1DC092F14((uint64_t)v33, &qword_1EDB28DC0, v45);
    if (v43(v40, 1, v41) == 1)
    {
      sub_1DC092F14((uint64_t)v23, &qword_1EDB28DC0, (void (*)(uint64_t))MEMORY[0x1E0DAF040]);
      goto LABEL_9;
    }
LABEL_7:
    v48 = (unint64_t *)&qword_1EDB27478;
    v49 = &qword_1EDB28DC0;
    v50 = (void (*)(uint64_t))MEMORY[0x1E0DAF040];
    v51 = (uint64_t)v23;
LABEL_15:
    sub_1DC267244(v51, v48, v49, v50);
    return 0;
  }
  v46 = (uint64_t)v86;
  sub_1DC092F9C((uint64_t)v23, (uint64_t)v86, &qword_1EDB28DC0, (void (*)(uint64_t))MEMORY[0x1E0DAF040]);
  if (v43(v40, 1, v41) == 1)
  {
    v47 = (void (*)(uint64_t))MEMORY[0x1E0DAF040];
    sub_1DC092F14(v44, &qword_1EDB28DC0, (void (*)(uint64_t))MEMORY[0x1E0DAF040]);
    sub_1DC092F14((uint64_t)v33, &qword_1EDB28DC0, v47);
    (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v46, v41);
    goto LABEL_7;
  }
  v52 = v84;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v42 + 32))(v84, v40, v41);
  sub_1DC080808((unint64_t *)&unk_1EDB28DB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAF040], MEMORY[0x1E0DAF050]);
  v53 = v46;
  v54 = v41;
  v83 = sub_1DC4089F8();
  v55 = (uint64_t)v23;
  v56 = v35;
  v57 = *(void (**)(_BYTE *, uint64_t))(v42 + 8);
  v57(v52, v41);
  v58 = (void (*)(uint64_t))MEMORY[0x1E0DAF040];
  sub_1DC092F14(v44, &qword_1EDB28DC0, (void (*)(uint64_t))MEMORY[0x1E0DAF040]);
  sub_1DC092F14((uint64_t)v33, &qword_1EDB28DC0, v58);
  v57((_BYTE *)v53, v54);
  v35 = v56;
  sub_1DC092F14(v55, &qword_1EDB28DC0, v58);
  if ((v83 & 1) == 0)
    return 0;
LABEL_9:
  v59 = v85;
  v60 = (void (*)(uint64_t))MEMORY[0x1E0DAEFA8];
  v61 = (uint64_t)v88;
  sub_1DC092F9C(v85 + *(int *)(v35 + 24), (uint64_t)v88, (unint64_t *)&unk_1EDB28D90, (void (*)(uint64_t))MEMORY[0x1E0DAEFA8]);
  v96 = v35;
  v62 = v97;
  v63 = v97 + *(int *)(v35 + 24);
  v64 = (uint64_t)v87;
  sub_1DC092F9C(v63, (uint64_t)v87, (unint64_t *)&unk_1EDB28D90, v60);
  v65 = v93;
  v66 = (uint64_t)&v93[*(int *)(v91 + 48)];
  sub_1DC092F9C(v61, (uint64_t)v93, (unint64_t *)&unk_1EDB28D90, v60);
  sub_1DC092F9C(v64, v66, (unint64_t *)&unk_1EDB28D90, v60);
  v67 = v92;
  v68 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v92 + 48);
  v69 = v94;
  if (v68((uint64_t)v65, 1, v94) == 1)
  {
    v70 = (void (*)(uint64_t))MEMORY[0x1E0DAEFA8];
    sub_1DC092F14(v64, (unint64_t *)&unk_1EDB28D90, (void (*)(uint64_t))MEMORY[0x1E0DAEFA8]);
    sub_1DC092F14(v61, (unint64_t *)&unk_1EDB28D90, v70);
    if (v68(v66, 1, v69) == 1)
    {
      sub_1DC092F14((uint64_t)v65, (unint64_t *)&unk_1EDB28D90, (void (*)(uint64_t))MEMORY[0x1E0DAEFA8]);
      goto LABEL_19;
    }
    goto LABEL_14;
  }
  v71 = v90;
  sub_1DC092F9C((uint64_t)v65, (uint64_t)v90, (unint64_t *)&unk_1EDB28D90, (void (*)(uint64_t))MEMORY[0x1E0DAEFA8]);
  if (v68(v66, 1, v69) == 1)
  {
    v72 = (void (*)(uint64_t))MEMORY[0x1E0DAEFA8];
    sub_1DC092F14((uint64_t)v87, (unint64_t *)&unk_1EDB28D90, (void (*)(uint64_t))MEMORY[0x1E0DAEFA8]);
    sub_1DC092F14((uint64_t)v88, (unint64_t *)&unk_1EDB28D90, v72);
    (*(void (**)(_BYTE *, uint64_t))(v67 + 8))(v71, v69);
LABEL_14:
    v48 = &qword_1EDB28DA0;
    v49 = (unint64_t *)&unk_1EDB28D90;
    v50 = (void (*)(uint64_t))MEMORY[0x1E0DAEFA8];
    v51 = (uint64_t)v65;
    goto LABEL_15;
  }
  v74 = v89;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v67 + 32))(v89, v66, v69);
  v75 = (void (*)(uint64_t))MEMORY[0x1E0DAEFA8];
  sub_1DC080808((unint64_t *)&unk_1EDB28D80, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAEFA8], MEMORY[0x1E0DAEFC0]);
  v76 = sub_1DC4089F8();
  v77 = *(void (**)(_BYTE *, uint64_t))(v67 + 8);
  v77(v74, v69);
  sub_1DC092F14((uint64_t)v87, (unint64_t *)&unk_1EDB28D90, v75);
  sub_1DC092F14((uint64_t)v88, (unint64_t *)&unk_1EDB28D90, v75);
  v77(v71, v69);
  sub_1DC092F14((uint64_t)v65, (unint64_t *)&unk_1EDB28D90, v75);
  if ((v76 & 1) == 0)
    return 0;
LABEL_19:
  v78 = v96;
  if ((sub_1DC2191E4((_QWORD *)(v59 + *(int *)(v96 + 28)), (_QWORD *)(v62 + *(int *)(v96 + 28))) & 1) == 0)
    return 0;
  v79 = *(int *)(v78 + 32);
  v80 = *(_BYTE *)(v62 + v79) == 2;
  v81 = !v80;
  if (*(_BYTE *)(v59 + v79) == 2)
    return v80;
  else
    return v81;
}

uint64_t sub_1DC2F3070@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  _QWORD *v15;
  uint64_t v16;
  char *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD v35[5];
  _QWORD *v36;

  v33 = a2;
  sub_1DC0C9CBC();
  v30 = *(_QWORD *)(v3 - 8);
  v31 = v3;
  MEMORY[0x1E0C80A78](v3);
  v32 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0C9C18();
  v28 = *(_QWORD *)(v5 - 8);
  v29 = v5;
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC2F3B68();
  v34 = v8;
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ForYouFeedGroupConfig();
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC2F3BC0();
  v15 = v36;
  sub_1DC409B08();
  if (!v15)
  {
    v27 = v7;
    v36 = v14;
    sub_1DC2F3C04();
    v16 = v34;
    sub_1DC409910();
    if (LOBYTE(v35[0]))
    {
      if (LOBYTE(v35[0]) == 1)
      {
        sub_1DC0824D4((uint64_t)a1, (uint64_t)v35);
        type metadata accessor for StockForYouFeedGroupConfigData();
        sub_1DC080808(&qword_1EDB39F50, (uint64_t (*)(uint64_t))type metadata accessor for StockForYouFeedGroupConfigData, (uint64_t)&unk_1DC42C918);
        sub_1DC080808(&qword_1EDB39F48, (uint64_t (*)(uint64_t))type metadata accessor for StockForYouFeedGroupConfigData, (uint64_t)&unk_1DC42C8F0);
        v18 = v27;
        sub_1DC407450();
        (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v16);
        v25 = (uint64_t)v36;
        (*(void (**)(_QWORD *, char *, uint64_t))(v28 + 32))(v36, v18, v29);
      }
      else
      {
        sub_1DC0824D4((uint64_t)a1, (uint64_t)v35);
        type metadata accessor for CuratedForYouFeedGroupConfigData();
        sub_1DC080808(&qword_1EDB3AC08, (uint64_t (*)(uint64_t))type metadata accessor for CuratedForYouFeedGroupConfigData, (uint64_t)&unk_1DC42BFA8);
        sub_1DC080808(&qword_1EDB3AC00, (uint64_t (*)(uint64_t))type metadata accessor for CuratedForYouFeedGroupConfigData, (uint64_t)&unk_1DC42BF80);
        v24 = v32;
        sub_1DC407450();
        (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v16);
        v25 = (uint64_t)v36;
        (*(void (**)(_QWORD *, char *, uint64_t))(v30 + 32))(v36, v24, v31);
      }
    }
    else
    {
      sub_1DC0824D4((uint64_t)a1, (uint64_t)v35);
      v19 = sub_1DC3D9584(v35);
      v21 = v20;
      v23 = v22;
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v16);
      v25 = (uint64_t)v36;
      *v36 = v19;
      *(_QWORD *)(v25 + 8) = v21;
      *(_QWORD *)(v25 + 16) = v23;
    }
    swift_storeEnumTagMultiPayload();
    sub_1DC2F3C48(v25, v33);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1DC2F3420(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  int EnumCaseMultiPayload;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v2 = v1;
  sub_1DC0C9CBC();
  v21 = v4;
  v20 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0C9C18();
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ForYouFeedGroupConfig();
  MEMORY[0x1E0C80A78](v12);
  v14 = (uint64_t *)((char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1DC0C9AC0(v2, (uint64_t)v14);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      (*(void (**)(char *, uint64_t *, uint64_t))(v9 + 32))(v11, v14, v8);
      sub_1DC407474();
      return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    }
    else
    {
      v17 = v20;
      v18 = v21;
      (*(void (**)(char *, uint64_t *, uint64_t))(v20 + 32))(v6, v14, v21);
      sub_1DC407474();
      return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v6, v18);
    }
  }
  else
  {
    sub_1DC3D9164(a1, *v14, v14[1], v14[2]);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1DC2F35F4()
{
  sub_1DC409AC0();
  sub_1DC408AF4();
  return sub_1DC409AF0();
}

uint64_t sub_1DC2F363C()
{
  sub_1DC409AC0();
  sub_1DC408AF4();
  return sub_1DC409AF0();
}

uint64_t sub_1DC2F3680@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1DC4098A4();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_1DC2F36D0@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1DC4098A4();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_1DC2F3724()
{
  sub_1DC2F3BC0();
  return sub_1DC409B20();
}

uint64_t sub_1DC2F374C()
{
  sub_1DC2F3BC0();
  return sub_1DC409B2C();
}

uint64_t sub_1DC2F3774(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1DC158D64(*a1, *a2);
}

uint64_t sub_1DC2F3780()
{
  sub_1DC409AC0();
  sub_1DC408AF4();
  swift_bridgeObjectRelease();
  return sub_1DC409AF0();
}

uint64_t sub_1DC2F3820()
{
  sub_1DC408AF4();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DC2F389C()
{
  sub_1DC409AC0();
  sub_1DC408AF4();
  swift_bridgeObjectRelease();
  return sub_1DC409AF0();
}

uint64_t sub_1DC2F3938@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1DC2F4328();
  *a1 = result;
  return result;
}

void sub_1DC2F3964(unint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  unint64_t v7;

  v2 = *v1;
  v3 = 0x80000001DC432ED0;
  v4 = 0xE500000000000000;
  v5 = 0x6B636F7473;
  if (v2 != 1)
  {
    v5 = 0x64657461727563;
    v4 = 0xE700000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0xD000000000000010;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1DC2F39C4()
{
  sub_1DC2F42E4();
  return sub_1DC408CA4();
}

uint64_t sub_1DC2F3A20()
{
  sub_1DC2F42E4();
  return sub_1DC408C8C();
}

uint64_t sub_1DC2F3A6C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DC2F3070(a1, a2);
}

uint64_t sub_1DC2F3A80(_QWORD *a1)
{
  return sub_1DC2F3420(a1);
}

BOOL sub_1DC2F3A94()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  _BOOL8 v4;
  uint64_t v6;

  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC0C9AC0(v3, (uint64_t)v2);
  v4 = swift_getEnumCaseMultiPayload() == 1;
  sub_1DC2F3C8C((uint64_t)v2);
  return v4;
}

uint64_t sub_1DC2F3B10()
{
  sub_1DC080808(&qword_1EDB328D0, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedGroupConfig, (uint64_t)&unk_1DC425E8C);
  return sub_1DC40763C();
}

void sub_1DC2F3B68()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB3FD90)
  {
    sub_1DC2F3BC0();
    v0 = sub_1DC409928();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB3FD90);
  }
}

unint64_t sub_1DC2F3BC0()
{
  unint64_t result;

  result = qword_1EDB328A8;
  if (!qword_1EDB328A8)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC4261C0, &type metadata for ForYouFeedGroupConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB328A8);
  }
  return result;
}

unint64_t sub_1DC2F3C04()
{
  unint64_t result;

  result = qword_1EDB328C8;
  if (!qword_1EDB328C8)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC426198, &type metadata for ForYouFeedGroupConfig.CodingType);
    atomic_store(result, (unint64_t *)&qword_1EDB328C8);
  }
  return result;
}

uint64_t sub_1DC2F3C48(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ForYouFeedGroupConfig();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC2F3C8C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ForYouFeedGroupConfig();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t storeEnumTagSinglePayload for ForYouFeedGroupConfig.CodingType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1DC2F3D14 + 4 * byte_1DC425E55[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1DC2F3D48 + 4 * byte_1DC425E50[v4]))();
}

uint64_t sub_1DC2F3D48(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC2F3D50(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC2F3D58);
  return result;
}

uint64_t sub_1DC2F3D64(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC2F3D6CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1DC2F3D70(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC2F3D78(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ForYouFeedGroupConfig.CodingType()
{
  return &type metadata for ForYouFeedGroupConfig.CodingType;
}

uint64_t storeEnumTagSinglePayload for ForYouFeedGroupConfig.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1DC2F3DD4 + 4 * byte_1DC425E5A[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1DC2F3DF4 + 4 * byte_1DC425E5F[v4]))();
}

_BYTE *sub_1DC2F3DD4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1DC2F3DF4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC2F3DFC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC2F3E04(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC2F3E0C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC2F3E14(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ForYouFeedGroupConfig.CodingKeys()
{
  return &type metadata for ForYouFeedGroupConfig.CodingKeys;
}

uint64_t *sub_1DC2F3E30(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      sub_1DC0C9CBC();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
    }
    else if (EnumCaseMultiPayload == 1)
    {
      sub_1DC0C9C18();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      v10 = a2[1];
      *a1 = *a2;
      a1[1] = v10;
      a1[2] = a2[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_QWORD *sub_1DC2F3F34(_QWORD *a1, _QWORD *a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;

  if (a1 != a2)
  {
    sub_1DC2F3C8C((uint64_t)a1);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      sub_1DC0C9CBC();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else if (EnumCaseMultiPayload == 1)
    {
      sub_1DC0C9C18();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a1, a2, v5);
    }
    else
    {
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_1DC2F4024(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    sub_1DC0C9CBC();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload == 1)
  {
    sub_1DC0C9C18();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

void *sub_1DC2F40EC(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;

  if (a1 != a2)
  {
    sub_1DC2F3C8C((uint64_t)a1);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      sub_1DC0C9CBC();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      sub_1DC0C9C18();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

unint64_t sub_1DC2F41C8()
{
  unint64_t result;

  result = qword_1F03517F0;
  if (!qword_1F03517F0)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC4260A8, &type metadata for ForYouFeedGroupConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F03517F0);
  }
  return result;
}

unint64_t sub_1DC2F4210()
{
  unint64_t result;

  result = qword_1F03517F8;
  if (!qword_1F03517F8)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC426170, &type metadata for ForYouFeedGroupConfig.CodingType);
    atomic_store(result, (unint64_t *)&qword_1F03517F8);
  }
  return result;
}

unint64_t sub_1DC2F4258()
{
  unint64_t result;

  result = qword_1EDB328B8;
  if (!qword_1EDB328B8)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC425FE0, &type metadata for ForYouFeedGroupConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB328B8);
  }
  return result;
}

unint64_t sub_1DC2F42A0()
{
  unint64_t result;

  result = qword_1EDB328B0;
  if (!qword_1EDB328B0)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC426008, &type metadata for ForYouFeedGroupConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB328B0);
  }
  return result;
}

unint64_t sub_1DC2F42E4()
{
  unint64_t result;

  result = qword_1EDB328C0;
  if (!qword_1EDB328C0)
  {
    result = MEMORY[0x1DF0CAB8C](&unk_1DC4260F8, &type metadata for ForYouFeedGroupConfig.CodingType);
    atomic_store(result, (unint64_t *)&qword_1EDB328C0);
  }
  return result;
}

uint64_t sub_1DC2F4328()
{
  unint64_t v0;

  v0 = sub_1DC4098A4();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

void sub_1DC2F4370(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v27 = a2;
  v28 = a3;
  v4 = sub_1DC403424();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC2F45EC();
  v9 = v8;
  v10 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1DC401564();
  v14 = MEMORY[0x1E0C80A78](v13);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v15 + 16))((char *)&v25 - v16, a1, v13, v14);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v26 = v4;
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    v17 = (void *)sub_1DC40154C();
    v18 = v29;
    v19 = sub_1DC4017B0();
    v21 = v20;

    if (!v18)
    {
      sub_1DC080808(&qword_1F0351800, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD4F8], MEMORY[0x1E0DAD508]);
      sub_1DC402458();
      sub_1DC1D565C(v19, v21);
      v22 = v28;
      (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v28, v7, v26);
      v23 = type metadata accessor for EngagementEvent();
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v22, 0, 1, v23);
    }
  }
  else
  {
    v24 = type metadata accessor for EngagementEvent();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v28, 1, 1, v24);
  }
}

uint64_t type metadata accessor for WatchSymbolEventTranslator()
{
  return objc_opt_self();
}

void sub_1DC2F45D8(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_1DC2F4370(a1, a2, a3);
}

void sub_1DC2F45EC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB29138)
  {
    sub_1DC403430();
    sub_1DC080808(&qword_1EDB29830, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAD510], MEMORY[0x1E0DAD4E0]);
    v0 = sub_1DC401564();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB29138);
  }
}

uint64_t sub_1DC2F4664(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a2;
  swift_retain();
  sub_1DC26C9A0((uint64_t)sub_1DC116D08, v4);
  return swift_release();
}

uint64_t sub_1DC2F4744()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

void sub_1DC2F4768(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  void *v18;
  unsigned int v19;
  void *v20;
  id v21;
  id v22;
  void *v23;
  double v24;
  CGFloat v25;
  double v26;
  CGFloat v27;
  double v28;
  CGFloat v29;
  double v30;
  CGFloat v31;
  uint64_t v32;
  void *v33;
  void (*v34)(char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  _OWORD v40[2];
  _OWORD v41[2];
  CGRect v42;

  v37 = a2;
  v38 = a3;
  v4 = sub_1DC407294();
  v36 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v36 - v8;
  v10 = sub_1DC4059F8();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = (void *)sub_1DC408A1C();
  v15 = objc_msgSend(a1, sel_objectForKey_, v14);

  if (!v15)
  {
    __break(1u);
    goto LABEL_8;
  }
  sub_1DC409634();
  swift_unknownObjectRelease();
  sub_1DC0FA0E4(v40, v41);
  type metadata accessor for ForYouFeedViewController();
  swift_dynamicCast();
  v16 = v39;
  v17 = objc_msgSend(v39, sel_splitViewController);
  if (!v17)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v18 = v17;
  v19 = objc_msgSend(v17, sel_isCollapsed);

  if (!v19)
  {
LABEL_6:
    sub_1DC4055CC();
    v23 = (void *)sub_1DC405074();
    swift_release();
    objc_msgSend(v23, sel_bounds);
    v25 = v24;
    v27 = v26;
    v29 = v28;
    v31 = v30;

    v42.origin.x = v25;
    v42.origin.y = v27;
    v42.size.width = v29;
    v42.size.height = v31;
    *(double *)&v32 = CGRectGetHeight(v42) * 20.0;
    sub_1DC4055CC();
    v33 = (void *)sub_1DC405074();
    swift_release();
    sub_1DC407288();
    MEMORY[0x1DF0C7B14](v6, 10.0);
    v34 = *(void (**)(char *, uint64_t))(v36 + 8);
    v34(v6, v4);
    v35 = swift_allocObject();
    *(_QWORD *)(v35 + 16) = v37;
    *(_QWORD *)(v35 + 24) = v38;
    swift_retain();
    sub_1DC26C4AC(v32, 0, v33, (uint64_t)v9, (uint64_t)sub_1DC2F4B4C, v35, 1.0);

    swift_release();
    v34(v9, v4);
    return;
  }
  v20 = (void *)sub_1DC408A1C();
  v21 = objc_msgSend(a1, sel_objectForKey_, v20);

  if (v21)
  {
    sub_1DC409634();
    swift_unknownObjectRelease();
    sub_1DC0FA0E4(v40, v41);
    sub_1DC4056E0();
    swift_dynamicCast();
    v22 = v39;
    (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v13, *MEMORY[0x1E0DBA290], v10);
    sub_1DC40565C();

    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    goto LABEL_6;
  }
LABEL_9:
  __break(1u);
}

uint64_t sub_1DC2F4B28()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DC2F4B4C()
{
  uint64_t v0;

  return sub_1DC2F4664(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t dispatch thunk of StocksUserActivityIntentSerializerType.intent(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of StocksUserActivityIntentDeserializerType.activity(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t destroy for StockFeedNewsRefreshDataBlueprintModifier(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_release();
  return __swift_destroy_boxed_opaque_existential_1(a1 + 24);
}

uint64_t initializeWithCopy for StockFeedNewsRefreshDataBlueprintModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v5 = a2 + 24;
  v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 48) = v6;
  v7 = v6;
  v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);
  swift_bridgeObjectRetain();
  swift_retain();
  v8(a1 + 24, v5, v7);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  return a1;
}

uint64_t assignWithCopy for StockFeedNewsRefreshDataBlueprintModifier(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_retain();
  swift_release();
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 24), (uint64_t *)(a2 + 24));
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  return a1;
}

__n128 __swift_memcpy65_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for StockFeedNewsRefreshDataBlueprintModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a1 + 24);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  return a1;
}

uint64_t getEnumTagSinglePayload for StockFeedNewsRefreshDataBlueprintModifier(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 65))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for StockFeedNewsRefreshDataBlueprintModifier(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 64) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 65) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 65) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for StockFeedNewsRefreshDataBlueprintModifier()
{
  return &type metadata for StockFeedNewsRefreshDataBlueprintModifier;
}

void sub_1DC2F4DEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t (*v89)(void);
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t (*v93)(void);
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  void (*v98)(__int128 *, _QWORD);
  uint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;
  _QWORD v103[9];
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  char *v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  char *v121;
  char *v122;
  char *v123;
  char *v124;
  char *v125;
  char *v126;
  char *v127;
  char *v128;
  char *v129;
  char *v130;
  char *v131;
  char *v132;
  uint64_t v133;
  char *v134;
  char *v135;
  char *v136;
  char *v137;
  char *v138;
  uint64_t v139;
  char *v140;
  uint64_t v141;
  char *v142;
  char *v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  void (*v153)(char *, uint64_t, uint64_t);
  char *v154;
  uint64_t v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  __int128 v160;
  uint64_t v161;

  v106 = a3;
  v107 = a2;
  v118 = a1;
  v105 = sub_1DC404984();
  v115 = *(_QWORD *)(v105 - 8);
  MEMORY[0x1E0C80A78](v105);
  v113 = (char *)v103 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC165EEC(0, &qword_1EDB2A278, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB9A28]);
  v114 = v4;
  v112 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v111 = (char *)v103 - v5;
  v133 = sub_1DC407300();
  v141 = *(_QWORD *)(v133 - 8);
  MEMORY[0x1E0C80A78](v133);
  v140 = (char *)v103 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v104 = type metadata accessor for NewsStockFeedGroup();
  MEMORY[0x1E0C80A78](v104);
  v127 = (char *)v103 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v103[8] = (char *)v103 - v9;
  MEMORY[0x1E0C80A78](v10);
  v126 = (char *)v103 - v11;
  v152 = type metadata accessor for StockFeedModel();
  MEMORY[0x1E0C80A78](v152);
  v138 = (char *)v103 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC142200();
  v149 = v13;
  v139 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v128 = (char *)v103 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC142434();
  MEMORY[0x1E0C80A78](v15);
  v144 = (char *)v103 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v119 = type metadata accessor for NewsPlacardStockFeedGroup();
  MEMORY[0x1E0C80A78](v119);
  v103[6] = (char *)v103 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v117 = (char *)v103 - v19;
  MEMORY[0x1E0C80A78](v20);
  v125 = (char *)v103 - v21;
  MEMORY[0x1E0C80A78](v22);
  v103[5] = (char *)v103 - v23;
  MEMORY[0x1E0C80A78](v24);
  v116 = (char *)v103 - v25;
  MEMORY[0x1E0C80A78](v26);
  v124 = (char *)v103 - v27;
  v146 = sub_1DC407C84();
  v145 = *(_QWORD *)(v146 - 8);
  MEMORY[0x1E0C80A78](v146);
  v132 = (char *)v103 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v29);
  v137 = (char *)v103 - v30;
  MEMORY[0x1E0C80A78](v31);
  v103[4] = (char *)v103 - v32;
  v150 = type metadata accessor for StockFeedGroup();
  v103[1] = *(_QWORD *)(v150 - 8);
  MEMORY[0x1E0C80A78](v150);
  v121 = (char *)v103 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v34);
  v134 = (char *)v103 - v35;
  MEMORY[0x1E0C80A78](v36);
  v131 = (char *)v103 - v37;
  MEMORY[0x1E0C80A78](v38);
  v120 = (char *)v103 - v39;
  MEMORY[0x1E0C80A78](v40);
  v130 = (char *)v103 - v41;
  MEMORY[0x1E0C80A78](v42);
  v129 = (char *)v103 - v43;
  MEMORY[0x1E0C80A78](v44);
  v103[2] = (char *)v103 - v45;
  MEMORY[0x1E0C80A78](v46);
  v103[3] = (char *)v103 - v47;
  v157 = type metadata accessor for StockFeedSectionDescriptor();
  MEMORY[0x1E0C80A78](v157);
  v123 = (char *)v103 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v49);
  v122 = (char *)v103 - v50;
  MEMORY[0x1E0C80A78](v51);
  v143 = (char *)v103 - v52;
  MEMORY[0x1E0C80A78](v53);
  v156 = (char *)v103 - v54;
  sub_1DC165EEC(0, (unint64_t *)&qword_1EDB29D60, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60]);
  v158 = *(_QWORD *)(v55 - 8);
  v159 = v55;
  MEMORY[0x1E0C80A78](v55);
  v136 = (char *)v103 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v57);
  v135 = (char *)v103 - v58;
  MEMORY[0x1E0C80A78](v59);
  v103[7] = (char *)v103 - v60;
  MEMORY[0x1E0C80A78](v61);
  v142 = (char *)v103 - v62;
  MEMORY[0x1E0C80A78](v63);
  v154 = (char *)v103 - v64;
  MEMORY[0x1E0C80A78](v65);
  v67 = (char *)v103 - v66;
  sub_1DC1421C8(0);
  v69 = v68;
  MEMORY[0x1E0C80A78](v68);
  v71 = (char *)v103 - ((v70 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC165DE8();
  MEMORY[0x1E0C80A78](v72);
  v110 = (char *)v103 - ((v73 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = sub_1DC400010();
  v75 = *(_QWORD *)(v74 - 8);
  MEMORY[0x1E0C80A78](v74);
  v77 = (char *)v103 - ((v76 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC165EEC(0, (unint64_t *)&qword_1EDB2AB10, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790]);
  v79 = v78;
  v80 = *(_QWORD *)(v78 - 8);
  MEMORY[0x1E0C80A78](v78);
  v82 = (char *)v103 - ((v81 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v83);
  v85 = (char *)v103 - v84;
  MEMORY[0x1E0C80A78](v86);
  v147 = (char *)v103 - v87;
  sub_1DC400004();
  v109 = sub_1DC3FFFF8();
  v108 = v88;
  (*(void (**)(char *, uint64_t))(v75 + 8))(v77, v74);
  v155 = v80;
  v153 = *(void (**)(char *, uint64_t, uint64_t))(v80 + 16);
  v153(v85, v118, v79);
  v161 = MEMORY[0x1E0DEE9D8];
  v89 = MEMORY[0x1E0DBC790];
  sub_1DC165EAC((unint64_t *)&unk_1EDB2AAF0, (unint64_t *)&qword_1EDB2AB10, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790], MEMORY[0x1E0DBC7C0]);
  sub_1DC408BF0();
  v90 = &v71[*(int *)(v69 + 36)];
  sub_1DC165EAC((unint64_t *)&unk_1EDB2AB00, (unint64_t *)&qword_1EDB2AB10, (uint64_t (*)(uint64_t, _QWORD *))v89, MEMORY[0x1E0DBC7C8]);
  v91 = *(_QWORD *)v90;
  sub_1DC408ED8();
  v151 = v79;
  if (v91 == (_QWORD)v160)
  {
    sub_1DC0926D8((uint64_t)v71, (uint64_t (*)(_QWORD))sub_1DC1421C8);
    v92 = v161;
    v93 = MEMORY[0x1E0DB7B60];
    v94 = sub_1DC165EAC(&qword_1EDB29D48, (unint64_t *)&qword_1EDB29D60, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60], MEMORY[0x1E0DB7B88]);
    v95 = sub_1DC165EAC(&qword_1EDB29D40, (unint64_t *)&qword_1EDB29D60, (uint64_t (*)(uint64_t, _QWORD *))v93, MEMORY[0x1E0DB7B80]);
    MEMORY[0x1DF0C311C](v92, v159, v94, v95);
    v96 = sub_1DC080808(&qword_1EDB36EE0, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedSectionDescriptor, (uint64_t)&unk_1DC4167B0);
    v97 = sub_1DC080808(&qword_1EDB2D770, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedModel, (uint64_t)&unk_1DC429058);
    v154 = (char *)v96;
    v156 = (char *)v97;
    sub_1DC406C64();
    __asm { BR              X10 }
  }
  v98 = (void (*)(__int128 *, _QWORD))sub_1DC408EF0();
  v99 = v158;
  v100 = v159;
  v101 = v154;
  (*(void (**)(char *))(v158 + 16))(v154);
  v98(&v160, 0);
  v153(v82, (uint64_t)v71, v79);
  sub_1DC408EE4();
  (*(void (**)(char *, uint64_t))(v155 + 8))(v82, v79);
  (*(void (**)(char *, char *, uint64_t))(v99 + 32))(v67, v101, v100);
  sub_1DC4046FC();
  v102 = (char *)&loc_1DC2F5980 + 4 * aJ[swift_getEnumCaseMultiPayload()];
  __asm { BR              X9 }
}

void sub_1DC2F5AA8()
{
  void (*v0)(unint64_t, uint64_t, _QWORD);
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;

  sub_1DC0926D8(*(_QWORD *)(v2 - 184), (uint64_t (*)(_QWORD))type metadata accessor for StockFeedMastheadModel);
  v0(*(_QWORD *)(v2 - 296), v1, *(_QWORD *)(v2 - 160));
  v3 = *(_QWORD *)(v2 - 96);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_1DC2AD4E8(0, *(_QWORD *)(v3 + 16) + 1, 1);
    v3 = *(_QWORD *)(v2 - 96);
  }
  v5 = *(_QWORD *)(v3 + 16);
  v4 = *(_QWORD *)(v3 + 24);
  if (v5 >= v4 >> 1)
  {
    sub_1DC2AD4E8(v4 > 1, v5 + 1, 1);
    v3 = *(_QWORD *)(v2 - 96);
  }
  *(_QWORD *)(v3 + 16) = v5 + 1;
  v0(v3+ ((*(unsigned __int8 *)(*(_QWORD *)(v2 - 168) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v2 - 168) + 80))+ *(_QWORD *)(*(_QWORD *)(v2 - 168) + 72) * v5, *(_QWORD *)(v2 - 296), *(_QWORD *)(v2 - 160));
  *(_QWORD *)(v2 - 96) = v3;
  JUMPOUT(0x1DC2F59B8);
}

